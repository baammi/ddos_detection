source_filename = "test"
target datalayout = "E-p:32:32:32-f80:32:32"

%0 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }

@r1 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r9 = internal unnamed_addr global i32 0
@r11 = internal unnamed_addr global i32 0
@r15 = internal unnamed_addr global i32 0
@r20 = internal unnamed_addr global i32 0
@r21 = internal unnamed_addr global i32 0
@r22 = internal unnamed_addr global i32 0
@r23 = internal unnamed_addr global i32 0
@r24 = internal unnamed_addr global i32 0
@r25 = internal unnamed_addr global i32 0
@r26 = internal unnamed_addr global i32 0
@r27 = internal unnamed_addr global i32 0
@r28 = internal unnamed_addr global i32 0
@r29 = internal unnamed_addr global i32 0
@r30 = internal unnamed_addr global i32 0
@r31 = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@global_var_100000a4.1 = constant i32 1208007177
@global_var_1001c11c.3 = global i32 0
@global_var_1001c12c.4 = local_unnamed_addr global i32* @global_var_1001c11c.3
@global_var_1001c308.6 = global i32 0
@global_var_10000314.7 = constant i32 1207996109
@global_var_10000320.8 = constant [3 x i8] c"8`\00"
@global_var_1001c294.10 = local_unnamed_addr global i32 0
@global_var_10000588.11 = constant [3 x i8] c";{\00"
@global_var_100005b4.12 = constant i32 939524096
@global_var_1001c298.14 = local_unnamed_addr global i32 0
@global_var_10000f54.15 = constant [3 x i8] c"8~\00"
@global_var_10000f64.16 = constant [3 x i8] c"8~\00"
@global_var_10000f74.17 = constant [3 x i8] c"8~\00"
@global_var_100016f0.18 = constant i32 939524096
@global_var_10001c14.19 = constant [3 x i8] c"8`\00"
@global_var_1000225c.20 = constant [3 x i8] c"8`\00"
@global_var_10002f10.21 = constant i32 939524104
@global_var_10002f40.22 = constant i32 939524096
@global_var_10003240.23 = constant i32 939524096
@global_var_10003f14.24 = constant [3 x i8] c"8`\00"
@global_var_10004004.25 = constant [3 x i8] c"9!\00"
@global_var_1001c2a4.26 = local_unnamed_addr global i32 0
@global_var_100045c8.27 = constant [3 x i8] c"8`\00"
@global_var_100045d0.28 = constant [3 x i8] c"8`\00"
@global_var_100045d8.29 = constant [3 x i8] c"8`\00"
@global_var_100046d8.30 = constant [3 x i8] c"9@\00"
@global_var_1000bb38.31 = constant i32 788529152
@global_var_10004a20.32 = constant [3 x i8] c"8`\00"
@global_var_10004a28.33 = constant [3 x i8] c"8`\00"
@global_var_10004a30.34 = constant [3 x i8] c"8`\00"
@global_var_10004a38.35 = constant [3 x i8] c"8`\00"
@global_var_10004aa4.36 = constant [3 x i8] c"8`\00"
@global_var_10004aac.37 = constant [3 x i8] c"8`\00"
@global_var_10004ab4.38 = constant [3 x i8] c"8`\00"
@global_var_10004bf8.39 = constant i32 939572197
@global_var_10004c3c.40 = constant i32 939526087
@global_var_10004c78.41 = constant [3 x i8] c"8`\00"
@global_var_10004cac.42 = constant [3 x i8] c"8`\00"
@global_var_10004cb4.43 = constant i32 939524118
@global_var_10004cf0.44 = constant [3 x i8] c"8`\00"
@global_var_10004cfc.45 = constant [3 x i8] c"8`\00"
@global_var_10004d34.46 = constant [3 x i8] c"8`\00"
@global_var_10004d6c.47 = constant [3 x i8] c"8`\00"
@global_var_1001c29c.48 = local_unnamed_addr global i32 0
@global_var_1001c2a0.49 = local_unnamed_addr global i32 0
@global_var_10004da0.50 = constant [3 x i8] c"8`\00"
@global_var_10004e1c.51 = constant [3 x i8] c"8`\00"
@global_var_10004e24.52 = constant [3 x i8] c"8`\00"
@global_var_10004e88.53 = constant i32 1207977933
@global_var_10004f24.54 = constant [3 x i8] c"8`\00"
@global_var_10004fb4.55 = constant [3 x i8] c"8`\00"
@global_var_10004fbc.56 = constant [3 x i8] c"8`\00"
@global_var_1000502c.57 = constant [3 x i8] c"8`\00"
@global_var_10005034.58 = constant i32 1207976293
@global_var_100050e4.59 = constant [3 x i8] c"8`\00"
@global_var_100050ec.60 = constant [3 x i8] c"8`\00"
@global_var_100050f4.61 = constant [3 x i8] c"8`\00"
@global_var_100050fc.62 = constant [3 x i8] c"8`\00"
@global_var_10005104.63 = constant [3 x i8] c"8`\00"
@global_var_10005328.64 = constant [3 x i8] c"8`\00"
@global_var_10005330.65 = constant [3 x i8] c"8`\00"
@global_var_10005338.66 = constant [3 x i8] c"8`\00"
@global_var_10005340.67 = constant [3 x i8] c"8`\00"
@global_var_10005348.68 = constant [3 x i8] c"8`\00"
@global_var_10005380.69 = constant [3 x i8] c"8`\00"
@global_var_100053e4.70 = constant [3 x i8] c"8`\00"
@global_var_100053ec.71 = constant [3 x i8] c"8`\00"
@global_var_100053f4.72 = constant [3 x i8] c"8`\00"
@global_var_100053fc.73 = constant [3 x i8] c"8`\00"
@global_var_10005404.74 = constant [3 x i8] c"8`\00"
@global_var_1001c278.75 = local_unnamed_addr global i32 268471372
@global_var_1001c270.76 = local_unnamed_addr global i32 -1
@global_var_100055bc.78 = constant [3 x i8] c"8`\00"
@global_var_100055cc.79 = constant [3 x i8] c"8`\00"
@global_var_10005644.80 = constant i32 1207962709
@global_var_1001c370.81 = global i32 0
@global_var_1001c374.82 = local_unnamed_addr global i32 0
@global_var_10005694.83 = constant [3 x i8] c"8`\00"
@global_var_1000569c.84 = constant [3 x i8] c"8`\00"
@global_var_1001c372.85 = local_unnamed_addr global i32 0
@global_var_1001c2a8.86 = local_unnamed_addr global i32 0
@global_var_10005724.87 = constant [3 x i8] c"8`\00"
@global_var_10005780.88 = constant [3 x i8] c"8`\00"
@global_var_100057b8.89 = constant [3 x i8] c"8`\00"
@global_var_100057c0.90 = constant [3 x i8] c"8`\00"
@global_var_1000587c.91 = constant i32 1207972817
@global_var_100058b8.92 = constant i32 1207961357
@global_var_100058d4.93 = constant [3 x i8] c";a\00"
@global_var_10005938.94 = constant i32 1207961149
@global_var_1000598c.95 = constant [3 x i8] c"8`\00"
@global_var_1000bb3c.96 = constant i32 167772160
@global_var_100059c4.97 = constant [3 x i8] c"8`\00"
@global_var_100059d8.98 = constant i32 1207973753
@global_var_10005a78.99 = constant [3 x i8] c":`\00"
@global_var_10005a88.100 = constant [3 x i8] c"8`\00"
@global_var_10005a90.101 = constant [3 x i8] c"8`\00"
@global_var_1001c274.102 = local_unnamed_addr global i32 -1
@global_var_10005c50.104 = constant i32 939589631
@global_var_10005d08.105 = constant i32 939589631
@global_var_10005ddc.106 = constant i32 939589631
@global_var_10005de8.107 = constant i32 1006685388
@global_var_10005e20.108 = constant i32 1207962005
@global_var_10005e28.109 = constant [3 x i8] c"|q\00"
@global_var_1000bb40.110 = constant i32 1
@global_var_10005ed0.111 = constant i32 939589631
@global_var_1001c32c.112 = local_unnamed_addr global i32 0
@global_var_1001c320.113 = local_unnamed_addr global i32 0
@global_var_1001c328.114 = local_unnamed_addr global i32 0
@global_var_1001c324.115 = local_unnamed_addr global i32 0
@global_var_10006304.116 = constant [3 x i8] c"9A\00"
@global_var_10006388.117 = constant i32 939524096
@global_var_100063bc.118 = constant i32 1006665728
@global_var_100063e8.119 = constant i32 939524098
@global_var_10006430.120 = constant [3 x i8] c"8`\00"
@global_var_100064a4.121 = constant i32 939524128
@global_var_10006550.122 = constant [3 x i8] c"8c\00"
@global_var_1001c2c8.123 = local_unnamed_addr global i32 0
@global_var_1001c2bc.124 = local_unnamed_addr global i32 0
@global_var_1001c2b0.125 = local_unnamed_addr global i32 0
@global_var_1001c2b4.126 = local_unnamed_addr global i32 0
@global_var_10006b60.128 = constant [3 x i8] c"8`\00"
@global_var_1001c2c0.129 = local_unnamed_addr global i32 0
@global_var_1001c2c4.130 = local_unnamed_addr global i32 0
@global_var_1001c330.131 = global i32 0
@global_var_1001c344.132 = global i32 0
@global_var_1000bbd0.133 = constant i32 0
@global_var_1001c332.134 = local_unnamed_addr global i32 0
@global_var_1001c350.135 = local_unnamed_addr global i32 0
@global_var_1001c338.136 = local_unnamed_addr global i32 0
@global_var_1001c339.137 = local_unnamed_addr global i32 0
@global_var_1001c334.138 = local_unnamed_addr global i32 0
@global_var_1000bbcc.139 = constant [5 x i8] c"&;; \00"
@global_var_1000bb5c.141 = constant [8 x i8] c"0125!8 \00"
@global_var_1001c352.142 = local_unnamed_addr global i32 0
@global_var_1000bb48.143 = constant [5 x i8] c"5:?;\00"
@global_var_1000bb50.144 = constant [9 x i8] c"<!: acam\00"
@global_var_1000bb70.145 = constant [6 x i8] c"509=:\00"
@global_var_1000bb64.146 = constant [9 x i8] c"$5''#;&0\00"
@global_var_1000bb78.147 = constant [6 x i8] c"\22=.,\22\00"
@global_var_1000bb80.148 = constant [8 x i8] c"'!$$;& \00"
@global_var_1000bb88.149 = constant i32 1663122969
@global_var_1000bb98.150 = constant [6 x i8] c"efg`a\00"
@global_var_1000bba0.151 = constant [5 x i8] c"!'1&\00"
@global_var_1000bba8.152 = constant i32 455883832
@global_var_1000bbb4.153 = constant i32 124138003
@global_var_1000bbc0.154 = constant [5 x i8] c"efg`\00"
@global_var_1001c33c.155 = local_unnamed_addr global i32 0
@global_var_1001c340.156 = local_unnamed_addr global i32 0
@global_var_1001c33a.157 = local_unnamed_addr global i32 0
@global_var_1001c354.158 = local_unnamed_addr global i32 0
@global_var_1001c348.159 = local_unnamed_addr global i32 0
@global_var_10007434.161 = constant [3 x i8] c"8`\00"
@global_var_1000bbd4.162 = constant i32 -18204
@global_var_1001c380.184 = global i32 0
@global_var_1001c27c.185 = local_unnamed_addr global i32 -555811921
@global_var_1000bc10.186 = constant i32 1421606912
@global_var_100083ec.187 = constant [3 x i8] c"8`\00"
@global_var_1001c388.188 = local_unnamed_addr global i32 0
@global_var_1001c38c.189 = local_unnamed_addr global i32 0
@global_var_1000bc14.190 = constant [14 x i8] c"0;'9-=$z78!6T\00"
@global_var_10008410.191 = constant i32 939524109
@global_var_1001c394.192 = local_unnamed_addr global i32 0
@global_var_1001c390.193 = local_unnamed_addr global i32 0
@global_var_1000bc24.194 = constant [13 x i8] c"'1:$5=z'= 1T\00"
@global_var_10008438.195 = constant [3 x i8] c"8`\00"
@global_var_1001c398.196 = local_unnamed_addr global i32 0
@global_var_1001c39c.197 = local_unnamed_addr global i32 0
@global_var_1000bc34.198 = constant i32 -294715392
@global_var_1000845c.199 = constant [3 x i8] c"8`\00"
@global_var_1001c3a0.200 = local_unnamed_addr global i32 0
@global_var_1001c3a4.201 = local_unnamed_addr global i32 0
@global_var_1000bc38.202 = constant [37 x i8] c"&;; t'1:$5=t>!' t=:217 10t-;!&t'<= T\00"
@global_var_10008480.203 = constant i32 939524132
@global_var_1001c3ac.204 = local_unnamed_addr global i32 0
@global_var_1001c3a8.205 = local_unnamed_addr global i32 0
@global_var_1000bc60.206 = constant [7 x i8] c"'<188T\00"
@global_var_100084a8.207 = constant [3 x i8] c"8`\00"
@global_var_1001c3b0.208 = local_unnamed_addr global i32 0
@global_var_1001c3b4.209 = local_unnamed_addr global i32 0
@global_var_1000bc68.210 = constant [8 x i8] c"1:5681T\00"
@global_var_100084d0.211 = constant [3 x i8] c"8`\00"
@global_var_1001c3b8.212 = local_unnamed_addr global i32 0
@global_var_1001c3bc.213 = local_unnamed_addr global i32 0
@global_var_1000bc70.214 = constant [8 x i8] c"'-' 19T\00"
@global_var_100084f4.215 = constant [3 x i8] c"8`\00"
@global_var_1001c3c0.216 = local_unnamed_addr global i32 0
@global_var_1001c3c4.217 = local_unnamed_addr global i32 0
@global_var_1000bc78.218 = constant [4 x i8] c"'<T\00"
@global_var_10008518.219 = constant i32 939524099
@global_var_1001c3cc.220 = local_unnamed_addr global i32 0
@global_var_1001c3c8.221 = local_unnamed_addr global i32 0
@global_var_1000bc7c.222 = constant i32 2067152186
@global_var_10008540.223 = constant [3 x i8] c"8`\00"
@global_var_1001c3d0.224 = local_unnamed_addr global i32 0
@global_var_1001c3d4.225 = local_unnamed_addr global i32 0
@global_var_1000bc90.226 = constant i32 421337862
@global_var_10008564.227 = constant i32 939524120
@global_var_1001c3dc.228 = local_unnamed_addr global i32 0
@global_var_1001c3d8.229 = local_unnamed_addr global i32 0
@global_var_1000bcac.230 = constant [10 x i8] c":7;&&17 T\00"
@global_var_1000858c.231 = constant i32 939524105
@global_var_1001c3e4.232 = local_unnamed_addr global i32 0
@global_var_1001c3e0.233 = local_unnamed_addr global i32 0
@global_var_1000bcb8.234 = constant [17 x i8] c"{6=:{6!'-6;,t$'T\00"
@global_var_100085b4.235 = constant [3 x i8] c"8`\00"
@global_var_1001c3e8.236 = local_unnamed_addr global i32 0
@global_var_1001c3ec.237 = local_unnamed_addr global i32 0
@global_var_1000bccc.238 = constant [23 x i8] c"{6=:{6!'-6;,t?=88tymtT\00"
@global_var_100085d8.239 = constant i32 939524118
@global_var_1001c3f4.240 = local_unnamed_addr global i32 0
@global_var_1001c3f0.241 = local_unnamed_addr global i32 0
@global_var_1000bce4.242 = constant [8 x i8] c"{$&;7{T\00"
@global_var_10008600.243 = constant [3 x i8] c"8`\00"
@global_var_1001c3f8.244 = local_unnamed_addr global i32 0
@global_var_1001c3fc.245 = local_unnamed_addr global i32 0
@global_var_1000bcec.246 = constant [6 x i8] c"{1,1T\00"
@global_var_10008624.247 = constant [3 x i8] c"8`\00"
@global_var_1001c400.248 = local_unnamed_addr global i32 0
@global_var_1001c404.249 = local_unnamed_addr global i32 0
@global_var_1000bcf4.250 = constant [5 x i8] c"{20T\00"
@global_var_10008648.251 = constant i32 939524100
@global_var_1001c40c.252 = local_unnamed_addr global i32 0
@global_var_1001c408.253 = local_unnamed_addr global i32 0
@global_var_1000bcfc.254 = constant [7 x i8] c"{95$'T\00"
@global_var_10008670.255 = constant [3 x i8] c"8`\00"
@global_var_1001c410.256 = local_unnamed_addr global i32 0
@global_var_1001c414.257 = local_unnamed_addr global i32 0
@global_var_1000bd04.258 = constant [15 x i8] c"{$&;7{:1 { 7$T\00"
@global_var_10008694.259 = constant [3 x i8] c"8`\00"
@global_var_1001c418.260 = local_unnamed_addr global i32 0
@global_var_1001c41c.261 = local_unnamed_addr global i32 0
@global_var_1000bd14.262 = constant [9 x i8] c"{' 5 !'T\00"
@global_var_100086b8.263 = constant [3 x i8] c"8`\00"
@global_var_1001c490.264 = local_unnamed_addr global i32 0
@global_var_1001c494.265 = local_unnamed_addr global i32 0
@global_var_1000bd20.266 = constant [8 x i8] c"z5:=91T\00"
@global_var_100086dc.267 = constant [3 x i8] c"8`\00"
@global_var_1001c498.268 = local_unnamed_addr global i32 0
@global_var_1001c49c.269 = local_unnamed_addr global i32 0
@global_var_1000bd28.270 = constant [17 x i8] c"{$&;7{:1 {&;! 1T\00"
@global_var_10008700.271 = constant [3 x i8] c"8`\00"
@global_var_1001c420.272 = local_unnamed_addr global i32 0
@global_var_1001c424.273 = local_unnamed_addr global i32 0
@global_var_1000bd3c.274 = constant [24 x i8] c"3e567`09;ga<:$f8=1d?>2T\00"
@global_var_10008728.275 = constant [3 x i8] c"8`\00"
@global_var_1001c428.276 = local_unnamed_addr global i32 0
@global_var_1001c42c.277 = local_unnamed_addr global i32 0
@global_var_1000bd54.278 = constant [9 x i8] c"5''#;&0T\00"
@global_var_1000bd60.279 = constant [15 x i8] c"{01\22{#5 7<0;3T\00"
@global_var_10008754.280 = constant [3 x i8] c"8`\00"
@global_var_1001c430.281 = local_unnamed_addr global i32 0
@global_var_1001c434.282 = local_unnamed_addr global i32 0
@global_var_1000bd70.283 = constant [20 x i8] c"{01\22{9='7{#5 7<0;3T\00"
@global_var_10008778.284 = constant [3 x i8] c"8`\00"
@global_var_1001c438.285 = local_unnamed_addr global i32 0
@global_var_1001c43c.286 = local_unnamed_addr global i32 0
@global_var_10008798.287 = constant [3 x i8] c"8`\00"
@global_var_1001c440.288 = local_unnamed_addr global i32 0
@global_var_1001c444.289 = local_unnamed_addr global i32 0
@global_var_1000bd84.290 = constant [11 x i8] c"0\22&<18$1&T\00"
@global_var_100087bc.291 = constant i32 939524106
@global_var_1001c4a4.292 = local_unnamed_addr global i32 0
@global_var_1001c4a0.293 = local_unnamed_addr global i32 0
@global_var_1000bde8.294 = constant i32 473889
@global_var_100087e4.295 = constant i32 939524117
@global_var_1001c44c.296 = local_unnamed_addr global i32 0
@global_var_1001c448.297 = local_unnamed_addr global i32 0
@global_var_1000bd90.298 = constant [18 x i8] c"{1 7{&1';8\22z7;:2T\00"
@global_var_1000880c.299 = constant i32 939524113
@global_var_1001c454.300 = local_unnamed_addr global i32 0
@global_var_1001c450.301 = local_unnamed_addr global i32 0
@global_var_1000bda4.302 = constant [13 x i8] c":591'1&\221&tT\00"
@global_var_10008834.303 = constant [3 x i8] c"8`\00"
@global_var_1001c458.304 = local_unnamed_addr global i32 0
@global_var_1001c45c.305 = local_unnamed_addr global i32 0
@global_var_10008854.306 = constant [3 x i8] c"8`\00"
@global_var_1001c460.307 = local_unnamed_addr global i32 0
@global_var_1001c464.308 = local_unnamed_addr global i32 0
@global_var_10008874.309 = constant [3 x i8] c"8`\00"
@global_var_1001c468.310 = local_unnamed_addr global i32 0
@global_var_1001c46c.311 = local_unnamed_addr global i32 0
@global_var_1000bdb4.312 = constant [9 x i8] c"$662*7!E\00"
@global_var_10008898.313 = constant [3 x i8] c"8`\00"
@global_var_1001c470.314 = local_unnamed_addr global i32 0
@global_var_1001c474.315 = local_unnamed_addr global i32 0
@global_var_1000bdc0.316 = constant [6 x i8] c";3=:T\00"
@global_var_100088bc.317 = constant [3 x i8] c"8`\00"
@global_var_1001c478.318 = local_unnamed_addr global i32 0
@global_var_1001c47c.319 = local_unnamed_addr global i32 0
@global_var_1000bdc8.320 = constant [7 x i8] c"1: 1&T\00"
@global_var_100088e0.321 = constant [3 x i8] c"8`\00"
@global_var_1001c480.322 = local_unnamed_addr global i32 0
@global_var_1001c484.323 = local_unnamed_addr global i32 0
@global_var_1000bdd0.324 = constant [24 x i8] c"e365`70;9ag:<$ef1=d?2>T\00"
@global_var_1001c48c.325 = local_unnamed_addr global i32 0
@global_var_1001c488.326 = local_unnamed_addr global i32 0
@global_var_10008c70.327 = constant i32 939524096
@global_var_10008fb8.328 = constant i32 1207959564
@global_var_10009494.329 = constant i32 939524118
@global_var_1000abb8.330 = constant [3 x i8] c"8`\00"
@global_var_100095ec.331 = constant i32 939524105
@global_var_10009608.332 = constant i32 939589631
@global_var_10009730.333 = constant i32 1207959797
@global_var_10009734.334 = constant i32 939524108
@global_var_1001c2ec.335 = global i32 0
@global_var_10009eac.336 = constant i32 939524118
@global_var_10009f34.337 = constant i32 939524118
@global_var_1001c4a8.338 = global i32 0
@global_var_1001c358.339 = global i32 0
@global_var_1001c280 = external global i32
@global_var_1000bf0c.341 = constant i32 33554944
@global_var_1001c2dc.342 = local_unnamed_addr global i32 0
@global_var_1001c528.343 = global i32 0
@global_var_1000a190.344 = constant i32 939524108
@global_var_1000a1e4.345 = constant i32 939524108
@global_var_1000a298.346 = constant [3 x i8] c"8`\00"
@global_var_1000a344.347 = constant [3 x i8] c"8`\00"
@global_var_1000a66c.348 = constant i32 1207959640
@global_var_1000a6a8.349 = constant i32 1207959580
@global_var_1001c28c.350 = local_unnamed_addr global i32* @global_var_1000bf0c.341
@global_var_1000a89c.351 = constant i32 939524130
@global_var_1001c240.352 = global i32 0
@global_var_1001c2d0.353 = local_unnamed_addr global i32 0
@global_var_1000a930.354 = constant i32 1207960053
@global_var_1000a934.355 = constant [3 x i8] c"= \00"
@global_var_1001c110.356 = global i32 -1
@global_var_1001c2e0.357 = local_unnamed_addr global i32 0
@global_var_1001c2e4.358 = local_unnamed_addr global i32 0
@global_var_1000be00.359 = constant [10 x i8] c"/dev/null\00"
@global_var_1001c2e8.360 = local_unnamed_addr global i32 0
@global_var_1001c2d4.362 = local_unnamed_addr global i32 0
@global_var_1001c2d8.363 = local_unnamed_addr global i32 0
@global_var_1000aed0.364 = constant i32 939524096
@global_var_1000b15c.366 = constant i32 939524118
@global_var_1000b358.367 = constant i32 939589631
@global_var_1001c300.368 = local_unnamed_addr global i32 0
@global_var_1001c258.369 = global i32 0
@global_var_1000b87c.370 = constant i32 939524129
@global_var_1001c2f4.371 = local_unnamed_addr global i32 0
@global_var_1000b8f0.372 = constant [3 x i8] c"8`\00"
@global_var_1000b928.373 = constant i32 939524129
@global_var_1001c2f8.374 = local_unnamed_addr global i32 0
@global_var_1001c2fc.375 = local_unnamed_addr global i32 0
@global_var_1001c114.376 = global i32 0
@global_var_1001c304.2 = local_unnamed_addr global i8 0
@global_var_1001c290.9 = local_unnamed_addr global i8 0
@global_var_1001c291.13 = global i8 0
@global_var_1001c130.77 = local_unnamed_addr global i8 1
@global_var_1001c2ac.103 = local_unnamed_addr global i16 0
@global_var_1001c2b8.127 = global i16 0
@global_var_1001c346.140 = local_unnamed_addr global i16 0

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_10000094() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_100000a4.1 to i32), i32* @lr, align 4
  %v0_100000a0 = call i32 @function_10000168()
  store i32 %v0_100000a0, i32* @r3, align 4
  store i32 268435624, i32* @lr, align 4
  %v1_100000a4 = call i32 @function_1000baac(i32 %v0_100000a0)
  ret i32 %v1_100000a4
}

define i32 @function_100000b8() local_unnamed_addr {
entry:
  %v3_100000cc = load i8, i8* @global_var_1001c304.2, align 1
  %v3_100000d4 = icmp eq i8 %v3_100000cc, 0
  br i1 %v3_100000d4, label %dec_label_pc_100000dc, label %dec_label_pc_10000134

dec_label_pc_100000dc:                            ; preds = %entry
  %v3_100000e0 = load i32, i32* bitcast (i32** @global_var_1001c12c.4 to i32*), align 4
  %v3_100000e8 = icmp eq i32 %v3_100000e0, 0
  br i1 %v3_100000e8, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_100000f0:                            ; preds = %dec_label_pc_100000dc, %dec_label_pc_100000f0
  %v0_100000f4 = phi i32 [ %v3_10000100, %dec_label_pc_100000f0 ], [ %v3_100000e0, %dec_label_pc_100000dc ]
  %v1_100000f0 = add i32 %v0_100000f4, 4
  store i32 %v1_100000f0, i32* bitcast (i32** @global_var_1001c12c.4 to i32*), align 4
  call void @__pseudo_call(i32 %v0_100000f4)
  %v3_10000100 = load i32, i32* bitcast (i32** @global_var_1001c12c.4 to i32*), align 4
  %v3_10000108 = icmp eq i32 %v3_10000100, 0
  br i1 %v3_10000108, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_10000110:                            ; preds = %dec_label_pc_100000f0, %dec_label_pc_100000dc
  store i8 1, i8* @global_var_1001c304.2, align 1
  br label %dec_label_pc_10000134

dec_label_pc_10000134:                            ; preds = %entry, %dec_label_pc_10000110
  ret i32 undef

; uselistorder directives
  uselistorder i32 %v3_10000100, { 1, 0 }
  uselistorder i8* @global_var_1001c304.2, { 1, 0 }
  uselistorder label %dec_label_pc_10000134, { 1, 0 }
  uselistorder label %dec_label_pc_100000f0, { 1, 0 }
}

define i32 @function_1000014c() local_unnamed_addr {
dec_label_pc_1000014c:
  %v0_10000164 = load i32, i32* @r3, align 4
  ret i32 %v0_10000164
}

define i32 @function_10000168() local_unnamed_addr {
dec_label_pc_10000168:
  %v3_100001a0 = load i32, i32* inttoptr (i32 268550432 to i32*), align 32
  %v3_100001ac = icmp eq i32 %v3_100001a0, 0
  br i1 %v3_100001ac, label %dec_label_pc_100001c4, label %dec_label_pc_100001b4

dec_label_pc_100001b4:                            ; preds = %dec_label_pc_10000168
  br label %dec_label_pc_100001c4

dec_label_pc_100001c4:                            ; preds = %dec_label_pc_100001b4, %dec_label_pc_10000168
  ret i32 268550432
}

define i32 @function_100001d4() local_unnamed_addr {
dec_label_pc_100001d4:
  %v0_100001ec = load i32, i32* @r3, align 4
  ret i32 %v0_100001ec
}

define i32 @entry_point(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_0, align 4
  %v0_100001f4 = load i32, i32* @r1, align 4
  %v1_100001f4 = call i32 @__asm_rlwinm(i32 %v0_100001f4, i32 0, i32 0, i32 27)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000204 = add i32 %v1_100001f4, -16
  %v3_10000204 = inttoptr i32 %v2_10000204 to i32*
  store i32 %v1_100001f4, i32* %v3_10000204, align 4
  %v0_10000208 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000208, i32* %v3_10000204, align 4
  %v2_10000210 = load i32, i32* %stack_var_0, align 4
  %v7_10000234 = call i32 @function_1000aca4(i32 268457928, i32 %v2_10000210, i32* nonnull %stack_var_4, i32 268435604, i32 268483352, i32 %arg1)
  ret i32 %v7_10000234

; uselistorder directives
  uselistorder i32 %v1_100001f4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
}

define i32 @function_10000238(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10000238:
  %ctr.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %ctr.global-to-local, align 4
  %v0_10000244 = load i32, i32* @lr, align 4
  %tmp4 = icmp slt i32 %arg1, 1
  call void @__pseudo_cond_branch(i1 %tmp4, i32 %v0_10000244)
  %v1_10000248 = add i32 %tmp, 4
  %v2_10000248 = inttoptr i32 %v1_10000248 to i8*
  %v3_10000248 = load i8, i8* %v2_10000248, align 1
  %v4_10000248 = zext i8 %v3_10000248 to i32
  %v4_10000250 = icmp eq i32 %v4_10000248, %arg3
  br i1 %v4_10000250, label %dec_label_pc_10000278, label %dec_label_pc_1000026c.preheader

dec_label_pc_1000026c.preheader:                  ; preds = %dec_label_pc_10000238
  %v0_10000270.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000026c

dec_label_pc_1000025c:                            ; preds = %dec_label_pc_1000026c
  %v1_1000025c = add i32 %v0_1000025c.in, 12
  %v2_1000025c = inttoptr i32 %v1_1000025c to i8*
  %v3_1000025c = load i8, i8* %v2_1000025c, align 1
  %v4_1000025c = zext i8 %v3_1000025c to i32
  %v4_10000264 = icmp eq i32 %v4_1000025c, %arg3
  br i1 %v4_10000264, label %dec_label_pc_10000278, label %dec_label_pc_1000026c

dec_label_pc_1000026c:                            ; preds = %dec_label_pc_1000026c.preheader, %dec_label_pc_1000025c
  %v0_10000270 = phi i32 [ %v0_10000270.pre, %dec_label_pc_1000026c.preheader ], [ %v1_10000270, %dec_label_pc_1000025c ]
  %v0_1000025c.in = phi i32 [ %tmp, %dec_label_pc_1000026c.preheader ], [ %v0_1000025c, %dec_label_pc_1000025c ]
  %v0_1000025c = add i32 %v0_1000025c.in, 8
  %v1_10000270 = add i32 %v0_10000270, -1
  store i32 %v1_10000270, i32* %ctr.global-to-local, align 4
  %v2_10000270 = icmp eq i32 %v1_10000270, 0
  br i1 %v2_10000270, label %dec_label_pc_10000274, label %dec_label_pc_1000025c

dec_label_pc_10000274:                            ; preds = %dec_label_pc_1000026c
  ret i32 %arg4

dec_label_pc_10000278:                            ; preds = %dec_label_pc_1000025c, %dec_label_pc_10000238
  %v0_10000278 = phi i32 [ %tmp, %dec_label_pc_10000238 ], [ %v0_1000025c, %dec_label_pc_1000025c ]
  %v1_10000278 = inttoptr i32 %v0_10000278 to i32*
  %v2_10000278 = load i32, i32* %v1_10000278, align 4
  ret i32 %v2_10000278

; uselistorder directives
  uselistorder i32 %v1_10000270, { 2, 1, 0 }
  uselistorder i32 %v0_1000025c.in, { 1, 0 }
  uselistorder i32 %tmp, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000026c, { 1, 0 }
}

define i32 @function_10000280(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10000280:
  store i32 %arg4, i32* @r28, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 %arg2, i32* @r30, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268436160, i32* @lr, align 4
  %v0_100002bc = call i32 @function_10009150()
  %v3_100002c0 = icmp eq i32 %v0_100002bc, -1
  br i1 %v3_100002c0, label %dec_label_pc_100002d0, label %dec_label_pc_100002c8

dec_label_pc_100002c8:                            ; preds = %dec_label_pc_10000280
  %tmp14 = icmp slt i32 %v0_100002bc, 1
  br i1 %tmp14, label %dec_label_pc_100002f8, label %dec_label_pc_100002d0

dec_label_pc_100002d0:                            ; preds = %dec_label_pc_100002c8, %dec_label_pc_10000280
  ret i32 %v0_100002bc

dec_label_pc_100002f8:                            ; preds = %dec_label_pc_100002c8
  store i32 268436220, i32* @lr, align 4
  %v0_100002f8 = call i32 @function_10009150()
  %v3_100002fc = icmp eq i32 %v0_100002f8, -1
  br i1 %v3_100002fc, label %dec_label_pc_10000320, label %dec_label_pc_10000304

dec_label_pc_10000304:                            ; preds = %dec_label_pc_100002f8
  %v3_10000304 = icmp eq i32 %v0_100002f8, 0
  br i1 %v3_10000304, label %dec_label_pc_1000030c, label %dec_label_pc_10000328

dec_label_pc_1000030c:                            ; preds = %dec_label_pc_10000304
  %v0_1000030c = load i32, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_10000314.7 to i32), i32* @lr, align 4
  %v1_10000310 = call i32 @function_1000a950(i32 %v0_1000030c)
  store i32 268436248, i32* @lr, align 4
  %v0_10000314 = call i32 @function_100091e0()
  store i32 ptrtoint ([3 x i8]* @global_var_10000320.8 to i32), i32* @lr, align 4
  %v2_1000031c = call i32 @function_10009228(i32 %v0_10000314, i32 9)
  br label %dec_label_pc_10000320

dec_label_pc_10000320:                            ; preds = %dec_label_pc_10000358, %dec_label_pc_10000328, %dec_label_pc_100002f8, %dec_label_pc_10000374, %dec_label_pc_1000030c
  %v0_10000324 = call i32 @function_1000a8cc()
  br label %dec_label_pc_10000328

dec_label_pc_10000328:                            ; preds = %dec_label_pc_10000304, %dec_label_pc_10000320
  %v3_1000032c = load i8, i8* @global_var_1001c290.9, align 1
  %v3_10000330 = icmp eq i8 %v3_1000032c, 0
  br i1 %v3_10000330, label %dec_label_pc_10000320, label %dec_label_pc_10000338

dec_label_pc_10000338:                            ; preds = %dec_label_pc_10000328
  %v4_1000032c = zext i8 %v3_1000032c to i32
  %v3_10000340 = load i32, i32* @global_var_1001c294.10, align 4
  %v1_10000348 = inttoptr i32 %v3_10000340 to i32*
  %v2_10000348 = load i32, i32* %v1_10000348, align 4
  %v1_1000034c = add i32 %v2_10000348, 4
  %v2_1000034c = inttoptr i32 %v1_1000034c to i8*
  %v3_1000034c = load i8, i8* %v2_1000034c, align 1
  %v4_1000034c = zext i8 %v3_1000034c to i32
  %v1_10000350 = load i32, i32* @r30, align 4
  %v4_10000350 = icmp eq i32 %v4_1000034c, %v1_10000350
  br i1 %v4_10000350, label %dec_label_pc_10000374, label %dec_label_pc_10000358

dec_label_pc_10000358:                            ; preds = %dec_label_pc_10000338, %dec_label_pc_10000360
  %v0_1000035c = phi i32 [ %v1_1000035c, %dec_label_pc_10000360 ], [ %v4_1000032c, %dec_label_pc_10000338 ]
  %v0_10000358 = phi i32 [ %v1_10000358, %dec_label_pc_10000360 ], [ 0, %dec_label_pc_10000338 ]
  %v1_10000358 = add i32 %v0_10000358, 1
  %v1_1000035c = add i32 %v0_1000035c, -1
  %v2_1000035c = icmp eq i32 %v1_1000035c, 0
  br i1 %v2_1000035c, label %dec_label_pc_10000320, label %dec_label_pc_10000360

dec_label_pc_10000360:                            ; preds = %dec_label_pc_10000358
  %v1_10000360 = mul i32 %v1_10000358, 4
  %v2_10000364 = add i32 %v1_10000360, %v3_10000340
  %v3_10000364 = inttoptr i32 %v2_10000364 to i32*
  %v4_10000364 = load i32, i32* %v3_10000364, align 4
  %v1_10000368 = add i32 %v4_10000364, 4
  %v2_10000368 = inttoptr i32 %v1_10000368 to i8*
  %v3_10000368 = load i8, i8* %v2_10000368, align 1
  %v4_10000368 = zext i8 %v3_10000368 to i32
  %v4_1000036c = icmp eq i32 %v4_10000368, %v1_10000350
  br i1 %v4_1000036c, label %dec_label_pc_10000374, label %dec_label_pc_10000358

dec_label_pc_10000374:                            ; preds = %dec_label_pc_10000360, %dec_label_pc_10000338
  %v0_10000374 = phi i32 [ %v2_10000348, %dec_label_pc_10000338 ], [ %v4_10000364, %dec_label_pc_10000360 ]
  %v1_10000374 = inttoptr i32 %v0_10000374 to i32*
  %v2_10000374 = load i32, i32* %v1_10000374, align 4
  call void @__pseudo_call(i32 %v2_10000374)
  br label %dec_label_pc_10000320

; uselistorder directives
  uselistorder i32 %v1_1000035c, { 1, 0 }
  uselistorder i8 %v3_1000032c, { 1, 0 }
  uselistorder label %dec_label_pc_10000358, { 1, 0 }
  uselistorder label %dec_label_pc_10000328, { 1, 0 }
  uselistorder label %dec_label_pc_10000320, { 3, 0, 1, 4, 2 }
}

define i32 @function_10000394(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10000394:
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_10000394 = call i32 @__asm_mfcr()
  store i32 %v0_10000394, i32* %r3.global-to-local, align 4
  %v0_100003a4 = load i32, i32* @r30, align 4
  %v0_100003c4 = load i32, i32* @r24, align 4
  %v0_100003cc = load i32, i32* @r26, align 4
  %v0_100003d4 = load i32, i32* @r28, align 4
  %v0_100003d8 = load i32, i32* @r29, align 4
  %tmp25 = icmp ult i32 %arg2, 4
  br i1 %tmp25, label %dec_label_pc_100003f4, label %dec_label_pc_100003e8

dec_label_pc_100003e8:                            ; preds = %dec_label_pc_10000394
  %v3_100003e8 = icmp eq i32 %arg2, 4
  %v1_100003ec = inttoptr i32 %v0_10000394 to i32*
  %v2_100003ec = load i32, i32* %v1_100003ec, align 4
  store i32 %v2_100003ec, i32* %r25.global-to-local, align 4
  br i1 %v3_100003e8, label %dec_label_pc_100003f4, label %dec_label_pc_1000043c

dec_label_pc_100003f4:                            ; preds = %dec_label_pc_100003e8, %dec_label_pc_100005e8, %dec_label_pc_10000454, %dec_label_pc_10000448, %dec_label_pc_1000043c, %dec_label_pc_10000394, %dec_label_pc_1000061c
  %v1_10000408 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10000394)
  store i32 %v0_100003c4, i32* @r24, align 4
  store i32 %v0_100003cc, i32* @r26, align 4
  store i32 %v0_100003d4, i32* @r28, align 4
  store i32 %v0_100003d8, i32* @r29, align 4
  store i32 %v0_100003a4, i32* @r30, align 4
  %v0_10000438 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10000438

dec_label_pc_1000043c:                            ; preds = %dec_label_pc_100003e8
  %v3_1000043c = icmp eq i32 %arg2, 5
  %v1_10000440 = add i32 %v0_10000394, 4
  %v2_10000440 = inttoptr i32 %v1_10000440 to i8*
  %v3_10000440 = load i8, i8* %v2_10000440, align 1
  %v4_10000440 = zext i8 %v3_10000440 to i32
  store i32 %v4_10000440, i32* %r22.global-to-local, align 4
  br i1 %v3_1000043c, label %dec_label_pc_100003f4, label %dec_label_pc_10000448

dec_label_pc_10000448:                            ; preds = %dec_label_pc_1000043c
  %v1_10000448 = add i32 %v0_10000394, 5
  %v2_10000448 = inttoptr i32 %v1_10000448 to i8*
  %v3_10000448 = load i8, i8* %v2_10000448, align 1
  %v4_10000448 = zext i8 %v3_10000448 to i32
  store i32 %v4_10000448, i32* @r26, align 4
  %v3_1000044c = icmp eq i8 %v3_10000448, 0
  store i1 false, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_1000044c, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_1000044c, label %dec_label_pc_100003f4, label %dec_label_pc_10000454

dec_label_pc_10000454:                            ; preds = %dec_label_pc_10000448
  %v1_10000454 = mul nuw nsw i32 %v4_10000448, 5
  store i32 %v1_10000454, i32* @r27, align 4
  %v1_10000458 = add i32 %arg2, -6
  store i32 %v1_10000458, i32* @r28, align 4
  %v2_1000045c = icmp ult i32 %v1_10000458, %v1_10000454
  br i1 %v2_1000045c, label %dec_label_pc_100003f4, label %dec_label_pc_10000464

dec_label_pc_10000464:                            ; preds = %dec_label_pc_10000454
  store i32 %v4_10000448, i32* %r3.global-to-local, align 4
  store i32 268436592, i32* @lr, align 4
  %v2_1000046c = call i32 @function_1000a1b4(i32 %v4_10000448, i32 24)
  store i32 %v2_1000046c, i32* %r3.global-to-local, align 4
  %v0_10000470 = load i32, i32* @r31, align 4
  %v1_10000470 = add i32 %v0_10000470, 6
  store i32 %v1_10000470, i32* @r29, align 4
  store i32 %v2_1000046c, i32* %r20.global-to-local, align 4
  %v0_10000478 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10000478 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10000478 = or i1 %v0_10000478, %v1_10000478
  br i1 %v2_10000478, label %dec_label_pc_100004d4thread-pre-split, label %dec_label_pc_1000047c

dec_label_pc_1000047c:                            ; preds = %dec_label_pc_10000464
  %v0_1000047c = load i32, i32* @r27, align 4
  store i32 %v2_1000046c, i32* %r11.global-to-local, align 4
  %tmp29 = mul i32 %v0_1000047c, -858993459
  store i32 2, i32* %r10.global-to-local, align 4
  store i32 %tmp29, i32* %r9.global-to-local, align 4
  store i32 %tmp29, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100004a4

dec_label_pc_100004a4:                            ; preds = %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge, %dec_label_pc_1000047c
  %v2_100004b0 = phi i32 [ %v1_100004c0, %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge ], [ %v2_1000046c, %dec_label_pc_1000047c ]
  %v0_100004ac = phi i32 [ %v0_100004a4.pre, %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge ], [ %v1_10000470, %dec_label_pc_1000047c ]
  %v1_100004a4 = add i32 %v0_100004ac, 4
  %v2_100004a4 = inttoptr i32 %v1_100004a4 to i8*
  %v3_100004a4 = load i8, i8* %v2_100004a4, align 1
  %v1_100004a8 = inttoptr i32 %v0_100004ac to i32*
  %v2_100004a8 = load i32, i32* %v1_100004a8, align 4
  store i32 %v2_100004a8, i32* %r9.global-to-local, align 4
  %v1_100004ac = add i32 %v0_100004ac, 5
  store i32 %v1_100004ac, i32* @r29, align 4
  %v3_100004b0 = add i32 %v2_100004b0, 20
  %v4_100004b0 = inttoptr i32 %v3_100004b0 to i8*
  store i8 %v3_100004a4, i8* %v4_100004b0, align 1
  %v0_100004b4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100004b4 = load i32, i32* %r11.global-to-local, align 4
  %v2_100004b4 = add i32 %v1_100004b4, 4
  %v3_100004b4 = inttoptr i32 %v2_100004b4 to i32*
  store i32 %v0_100004b4, i32* %v3_100004b4, align 4
  %v0_100004b8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100004b8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100004b8 = add i32 %v1_100004b8, 16
  %v3_100004b8 = inttoptr i32 %v2_100004b8 to i32*
  store i32 %v0_100004b8, i32* %v3_100004b8, align 4
  %v0_100004bc = load i32, i32* %r10.global-to-local, align 4
  %v1_100004bc = trunc i32 %v0_100004bc to i16
  %v2_100004bc = load i32, i32* %r11.global-to-local, align 4
  %v3_100004bc = inttoptr i32 %v2_100004bc to i16*
  store i16 %v1_100004bc, i16* %v3_100004bc, align 2
  %v0_100004c0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100004c0 = add i32 %v0_100004c0, 24
  store i32 %v1_100004c0, i32* %r11.global-to-local, align 4
  %v0_100004c4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100004c4 = add i32 %v0_100004c4, -1
  store i32 %v1_100004c4, i32* %ctr.global-to-local, align 4
  %v2_100004c4 = icmp eq i32 %v1_100004c4, 0
  br i1 %v2_100004c4, label %dec_label_pc_100004c8, label %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge

dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge: ; preds = %dec_label_pc_100004a4
  %v0_100004a4.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100004a4

dec_label_pc_100004c8:                            ; preds = %dec_label_pc_100004a4
  %v0_100004c8 = load i32, i32* @r26, align 4
  %v1_100004c8 = mul i32 %v0_100004c8, -5
  %v0_100004cc = load i32, i32* @r30, align 4
  %v2_100004cc = add i32 %v0_100004cc, %v1_100004c8
  store i32 %v2_100004cc, i32* %r9.global-to-local, align 4
  %v1_100004d0 = add i32 %v2_100004cc, -6
  store i32 %v1_100004d0, i32* @r28, align 4
  br label %dec_label_pc_100004d4

dec_label_pc_100004d4thread-pre-split:            ; preds = %dec_label_pc_10000464
  %v0_100004d4.pr = load i32, i32* @r28, align 4
  br label %dec_label_pc_100004d4

dec_label_pc_100004d4:                            ; preds = %dec_label_pc_100004d4thread-pre-split, %dec_label_pc_100004c8
  %v0_100004d4 = phi i32 [ %v0_100004d4.pr, %dec_label_pc_100004d4thread-pre-split ], [ %v1_100004d0, %dec_label_pc_100004c8 ]
  %v3_100004d4 = icmp eq i32 %v0_100004d4, 0
  store i32 0, i32* %r21.global-to-local, align 4
  br i1 %v3_100004d4, label %dec_label_pc_100005d8, label %dec_label_pc_100004e0

dec_label_pc_100004e0:                            ; preds = %dec_label_pc_100004d4
  %v0_100004e0 = load i32, i32* @r29, align 4
  %v1_100004e0 = inttoptr i32 %v0_100004e0 to i8*
  %v2_100004e0 = load i8, i8* %v1_100004e0, align 1
  %v3_100004e0 = zext i8 %v2_100004e0 to i32
  store i32 %v3_100004e0, i32* @r24, align 4
  %v3_100004e4 = icmp eq i8 %v2_100004e0, 0
  store i1 false, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_100004e4, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_100004e4, label %dec_label_pc_100005b0, label %dec_label_pc_100004ec

dec_label_pc_100004ec:                            ; preds = %dec_label_pc_100004e0
  store i32 %v3_100004e0, i32* %r3.global-to-local, align 4
  store i32 268436728, i32* @lr, align 4
  %v2_100004f4 = call i32 @function_1000a1b4(i32 %v3_100004e0, i32 8)
  store i32 %v2_100004f4, i32* %r3.global-to-local, align 4
  store i32 %v2_100004f4, i32* %r21.global-to-local, align 4
  %v0_100004fc = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100004fc = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100004fc = or i1 %v0_100004fc, %v1_100004fc
  br i1 %v2_100004fc, label %dec_label_pc_100005b0, label %dec_label_pc_10000500

dec_label_pc_10000500:                            ; preds = %dec_label_pc_100004ec
  %v0_10000500 = load i32, i32* @r28, align 4
  %v1_10000500 = add i32 %v0_10000500, -1
  %v4_10000500 = icmp eq i32 %v1_10000500, 0
  store i32 %v1_10000500, i32* %ctr.global-to-local, align 4
  br i1 %v4_10000500, label %dec_label_pc_100005d8, label %dec_label_pc_1000050c

dec_label_pc_1000050c:                            ; preds = %dec_label_pc_10000500
  %v0_1000050c = load i32, i32* @r29, align 4
  %v1_1000050c = add i32 %v0_1000050c, 1
  %v2_1000050c = inttoptr i32 %v1_1000050c to i8*
  %v3_1000050c = load i8, i8* %v2_1000050c, align 1
  store i32 %v1_1000050c, i32* %r9.global-to-local, align 4
  %v3_10000514 = add i32 %v2_100004f4, 4
  %v4_10000514 = inttoptr i32 %v3_10000514 to i8*
  store i8 %v3_1000050c, i8* %v4_10000514, align 1
  %v0_10000518 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10000518 = add i32 %v0_10000518, -1
  store i32 %v1_10000518, i32* %ctr.global-to-local, align 4
  %v2_10000518 = icmp eq i32 %v1_10000518, 0
  br i1 %v2_10000518, label %dec_label_pc_100005d8, label %dec_label_pc_1000051c

dec_label_pc_1000051c:                            ; preds = %dec_label_pc_1000050c
  store i32 %v1_10000518, i32* %r11.global-to-local, align 4
  %v0_10000520 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000520 = add i32 %v0_10000520, 1
  %v2_10000520 = inttoptr i32 %v1_10000520 to i8*
  %v3_10000520 = load i8, i8* %v2_10000520, align 1
  %v4_10000520 = zext i8 %v3_10000520 to i32
  %v1_10000528 = add i32 %v0_10000518, -2
  store i32 %v1_10000528, i32* @r29, align 4
  %v2_1000052c = icmp slt i32 %v1_10000528, %v4_10000520
  br i1 %v2_1000052c, label %dec_label_pc_100005d8, label %dec_label_pc_10000534

dec_label_pc_10000534:                            ; preds = %dec_label_pc_1000051c
  %v1_10000534 = add i32 %v0_10000520, 2
  store i32 %v1_10000534, i32* @r28, align 4
  %v0_10000538 = load i32, i32* %r3.global-to-local, align 4
  %v1_10000538 = add i32 %v0_10000538, 8
  store i32 %v1_10000538, i32* %r23.global-to-local, align 4
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_1000057c

dec_label_pc_10000548:                            ; preds = %dec_label_pc_1000057c
  %v5_100005a4 = icmp eq i32 %v2_100005a4, 0
  br i1 %v5_100005a4, label %dec_label_pc_100005d8, label %dec_label_pc_1000054c

dec_label_pc_1000054c:                            ; preds = %dec_label_pc_10000548
  %v1_1000054c = load i32, i32* @r28, align 4
  %v2_1000054c = add i32 %v1_1000054c, %v0_100005a4
  %v3_1000054c = inttoptr i32 %v2_1000054c to i8*
  %v4_1000054c = load i8, i8* %v3_1000054c, align 1
  store i32 %v2_1000054c, i32* %r3.global-to-local, align 4
  %v1_10000554 = add i32 %v2_1000054c, 1
  store i32 %v1_10000554, i32* %r9.global-to-local, align 4
  %v2_10000558 = load i32, i32* @r30, align 4
  %v3_10000558 = add i32 %v2_10000558, 4
  %v4_10000558 = inttoptr i32 %v3_10000558 to i8*
  store i8 %v4_1000054c, i8* %v4_10000558, align 1
  %v0_1000055c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000055c = add i32 %v0_1000055c, -1
  %v4_1000055c = icmp eq i32 %v1_1000055c, 0
  %v0_10000560 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000560 = add i32 %v0_10000560, 1
  store i32 %v1_10000560, i32* @r28, align 4
  br i1 %v4_1000055c, label %dec_label_pc_100005d8, label %dec_label_pc_10000568

dec_label_pc_10000568:                            ; preds = %dec_label_pc_1000054c
  %v0_10000568 = load i32, i32* %r3.global-to-local, align 4
  %v1_10000568 = add i32 %v0_10000568, 1
  %v2_10000568 = inttoptr i32 %v1_10000568 to i8*
  %v3_10000568 = load i8, i8* %v2_10000568, align 1
  %v4_10000568 = zext i8 %v3_10000568 to i32
  store i32 %v1_1000055c, i32* %r9.global-to-local, align 4
  %v1_10000570 = add i32 %v0_1000055c, -2
  store i32 %v1_10000570, i32* @r29, align 4
  %v2_10000574 = icmp slt i32 %v1_10000570, %v4_10000568
  br i1 %v2_10000574, label %dec_label_pc_100005d8, label %dec_label_pc_1000057c

dec_label_pc_1000057c:                            ; preds = %dec_label_pc_10000568, %dec_label_pc_10000534
  %v0_10000580 = phi i32 [ %v4_10000568, %dec_label_pc_10000568 ], [ %v4_10000520, %dec_label_pc_10000534 ]
  %v1_10000580 = add nuw nsw i32 %v0_10000580, 1
  store i32 %v1_10000580, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000588.11 to i32), i32* @lr, align 4
  %v2_10000584 = call i32 @function_1000a1b4(i32 %v1_10000580, i32 1)
  store i32 %v2_10000584, i32* %r3.global-to-local, align 4
  %v0_10000588 = load i32, i32* @r27, align 4
  %v1_10000588 = add i32 %v0_10000588, 1
  store i32 %v1_10000588, i32* @r27, align 4
  %v1_1000058c = load i32, i32* @r30, align 4
  %v2_1000058c = inttoptr i32 %v1_1000058c to i32*
  store i32 %v2_10000584, i32* %v2_1000058c, align 4
  %v0_10000590 = load i32, i32* @r28, align 4
  %v0_10000594 = load i32, i32* @r31, align 4
  %v0_10000598 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10000598, i32* @r30, align 4
  store i32 268436896, i32* @lr, align 4
  %v3_1000059c = call i32 @function_100089cc(i32 %v2_10000584, i32 %v0_10000590, i32 %v0_10000594)
  store i32 %v3_1000059c, i32* %r3.global-to-local, align 4
  %v0_100005a0 = load i32, i32* @r27, align 4
  %v1_100005a0 = load i32, i32* @r24, align 4
  %v4_100005a0 = icmp eq i32 %v0_100005a0, %v1_100005a0
  %v0_100005a4 = load i32, i32* @r31, align 4
  %v1_100005a4 = load i32, i32* @r29, align 4
  %v2_100005a4 = sub i32 %v1_100005a4, %v0_100005a4
  store i32 %v2_100005a4, i32* %r11.global-to-local, align 4
  %v0_100005a8 = load i32, i32* %r23.global-to-local, align 4
  %v1_100005a8 = add i32 %v0_100005a8, 8
  store i32 %v1_100005a8, i32* %r23.global-to-local, align 4
  br i1 %v4_100005a0, label %dec_label_pc_100005b0, label %dec_label_pc_10000548

dec_label_pc_100005b0:                            ; preds = %dec_label_pc_1000057c, %dec_label_pc_100004ec, %dec_label_pc_100004e0
  %v0_100005b0 = call i32 @function_10009824()
  %v2_100005b8 = inttoptr i32 %v0_100005b0 to i32*
  store i32 0, i32* %v2_100005b8, align 4
  %v0_100005bc = load i32, i32* %r22.global-to-local, align 4
  %v0_100005c0 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100005c0, i32* %r3.global-to-local, align 4
  %v0_100005c4 = load i32, i32* @r26, align 4
  %v0_100005c8 = load i32, i32* %r20.global-to-local, align 4
  %v0_100005cc = load i32, i32* @r24, align 4
  %v0_100005d0 = load i32, i32* %r21.global-to-local, align 4
  store i32 268436952, i32* @lr, align 4
  %v6_100005d4 = call i32 @function_10000280(i32 %v0_100005c0, i32 %v0_100005bc, i32 %v0_100005c4, i32 %v0_100005c8, i32 %v0_100005cc, i32 %v0_100005d0)
  store i32 %v6_100005d4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100005d8

dec_label_pc_100005d8:                            ; preds = %dec_label_pc_10000568, %dec_label_pc_1000054c, %dec_label_pc_10000548, %dec_label_pc_1000051c, %dec_label_pc_1000050c, %dec_label_pc_10000500, %dec_label_pc_100004d4, %dec_label_pc_100005b0
  %v0_100005d8 = load i32, i32* %r20.global-to-local, align 4
  %v3_100005d8 = icmp eq i32 %v0_100005d8, 0
  br i1 %v3_100005d8, label %dec_label_pc_100005e8, label %dec_label_pc_100005e0

dec_label_pc_100005e0:                            ; preds = %dec_label_pc_100005d8
  store i32 %v0_100005d8, i32* @r3, align 4
  store i32 268436968, i32* @lr, align 4
  %v0_100005e4 = call i32 @function_1000a224()
  store i32 %v0_100005e4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100005e8

dec_label_pc_100005e8:                            ; preds = %dec_label_pc_100005d8, %dec_label_pc_100005e0
  %v0_100005e8 = load i32, i32* %r21.global-to-local, align 4
  %v3_100005e8 = icmp eq i32 %v0_100005e8, 0
  br i1 %v3_100005e8, label %dec_label_pc_100003f4, label %dec_label_pc_100005f0

dec_label_pc_100005f0:                            ; preds = %dec_label_pc_100005e8
  %v0_100005f0 = load i32, i32* @r24, align 4
  %tmp27 = icmp slt i32 %v0_100005f0, 1
  br i1 %tmp27, label %dec_label_pc_1000061c, label %dec_label_pc_100005f8

dec_label_pc_100005f8:                            ; preds = %dec_label_pc_100005f0
  br label %dec_label_pc_100005fc

dec_label_pc_100005fc:                            ; preds = %dec_label_pc_10000614, %dec_label_pc_100005f8
  %v0_100006146 = phi i32 [ %v0_100005f0, %dec_label_pc_100005f8 ], [ %v0_10000614, %dec_label_pc_10000614 ]
  %v0_10000604 = phi i32 [ %v0_100005e8, %dec_label_pc_100005f8 ], [ %v0_1000061c.pre, %dec_label_pc_10000614 ]
  %v0_100005fc = phi i32 [ 0, %dec_label_pc_100005f8 ], [ %v1_10000614, %dec_label_pc_10000614 ]
  %v1_100005fc = mul i32 %v0_100005fc, 8
  %v1_10000600 = add i32 %v0_100005fc, 1
  store i32 %v1_10000600, i32* @r31, align 4
  %v2_10000604 = add i32 %v1_100005fc, %v0_10000604
  %v3_10000604 = inttoptr i32 %v2_10000604 to i32*
  %v4_10000604 = load i32, i32* %v3_10000604, align 4
  store i32 %v4_10000604, i32* @r3, align 4
  %v3_10000608 = icmp eq i32 %v4_10000604, 0
  br i1 %v3_10000608, label %dec_label_pc_10000614, label %dec_label_pc_10000610

dec_label_pc_10000610:                            ; preds = %dec_label_pc_100005fc
  store i32 268437012, i32* @lr, align 4
  %v0_10000610 = call i32 @function_1000a224()
  store i32 %v0_10000610, i32* %r3.global-to-local, align 4
  %v0_10000614.pre = load i32, i32* @r24, align 4
  %v1_10000614.pre = load i32, i32* @r31, align 4
  %v0_1000061c.pre.pre = load i32, i32* %r21.global-to-local, align 4
  br label %dec_label_pc_10000614

dec_label_pc_10000614:                            ; preds = %dec_label_pc_100005fc, %dec_label_pc_10000610
  %v0_1000061c.pre = phi i32 [ %v0_10000604, %dec_label_pc_100005fc ], [ %v0_1000061c.pre.pre, %dec_label_pc_10000610 ]
  %v1_10000614 = phi i32 [ %v1_10000600, %dec_label_pc_100005fc ], [ %v1_10000614.pre, %dec_label_pc_10000610 ]
  %v0_10000614 = phi i32 [ %v0_100006146, %dec_label_pc_100005fc ], [ %v0_10000614.pre, %dec_label_pc_10000610 ]
  %v4_10000614 = icmp eq i32 %v0_10000614, %v1_10000614
  br i1 %v4_10000614, label %dec_label_pc_1000061c, label %dec_label_pc_100005fc

dec_label_pc_1000061c:                            ; preds = %dec_label_pc_10000614, %dec_label_pc_100005f0
  %v0_1000061c = phi i32 [ %v0_100005e8, %dec_label_pc_100005f0 ], [ %v0_1000061c.pre, %dec_label_pc_10000614 ]
  store i32 %v0_1000061c, i32* @r3, align 4
  store i32 268437028, i32* @lr, align 4
  %v0_10000620 = call i32 @function_1000a224()
  store i32 %v0_10000620, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100003f4

; uselistorder directives
  uselistorder i32 %v0_10000614, { 1, 0 }
  uselistorder i32 %v1_10000614, { 1, 0 }
  uselistorder i32 %v0_100005fc, { 1, 0 }
  uselistorder i32 %v2_100005a4, { 1, 0 }
  uselistorder i32 %v0_100005a4, { 1, 0 }
  uselistorder i32 %v2_1000054c, { 1, 0, 2 }
  uselistorder i32 %v1_10000518, { 0, 2, 1 }
  uselistorder i32 %v3_100004e0, { 1, 0, 2 }
  uselistorder i32 %v1_100004c4, { 1, 0 }
  uselistorder i32 %v1_100004c0, { 1, 0 }
  uselistorder i32 %v0_100004ac, { 0, 2, 1 }
  uselistorder i32 %tmp29, { 1, 0 }
  uselistorder i32 %v4_10000448, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10000394, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 2, 6, 9, 10, 11, 7, 8, 12, 13, 14, 16, 17, 15, 0, 1 }
  uselistorder i32* %r21.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %r20.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg2, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_10000614, { 1, 0 }
  uselistorder label %dec_label_pc_100005e8, { 1, 0 }
  uselistorder label %dec_label_pc_100005d8, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_100003f4, { 6, 1, 2, 3, 4, 0, 5 }
}

define i32 @function_10000628(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10000628:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %tmp7 = icmp slt i32 %arg1, 1
  br i1 %tmp7, label %dec_label_pc_1000066c, label %dec_label_pc_10000640

dec_label_pc_10000640:                            ; preds = %dec_label_pc_10000628
  %v0_10000640 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000640 = add i32 %v0_10000640, 4
  %v2_10000640 = inttoptr i32 %v1_10000640 to i8*
  %v3_10000640 = load i8, i8* %v2_10000640, align 1
  %v4_10000640 = zext i8 %v3_10000640 to i32
  %v4_10000648 = icmp eq i32 %v4_10000640, %arg3
  br i1 %v4_10000648, label %dec_label_pc_10000680, label %dec_label_pc_10000664

dec_label_pc_10000654:                            ; preds = %dec_label_pc_10000664
  %v1_10000654 = add i32 %v0_10000654.in, 12
  %v2_10000654 = inttoptr i32 %v1_10000654 to i8*
  %v3_10000654 = load i8, i8* %v2_10000654, align 1
  %v4_10000654 = zext i8 %v3_10000654 to i32
  %v4_1000065c = icmp eq i32 %v4_10000654, %arg3
  br i1 %v4_1000065c, label %dec_label_pc_10000680, label %dec_label_pc_10000664

dec_label_pc_10000664:                            ; preds = %dec_label_pc_10000640, %dec_label_pc_10000654
  %v0_10000668 = phi i32 [ %v1_10000668, %dec_label_pc_10000654 ], [ %arg1, %dec_label_pc_10000640 ]
  %v0_10000654.in = phi i32 [ %v0_10000654, %dec_label_pc_10000654 ], [ %v0_10000640, %dec_label_pc_10000640 ]
  %v0_10000654 = add i32 %v0_10000654.in, 8
  store i32 %v0_10000654, i32* %r4.global-to-local, align 4
  %v1_10000668 = add i32 %v0_10000668, -1
  %v2_10000668 = icmp eq i32 %v1_10000668, 0
  br i1 %v2_10000668, label %dec_label_pc_1000066c, label %dec_label_pc_10000654

dec_label_pc_1000066c:                            ; preds = %dec_label_pc_10000664, %dec_label_pc_10000680, %dec_label_pc_10000628
  ret i32 %arg4

dec_label_pc_10000680:                            ; preds = %dec_label_pc_10000654, %dec_label_pc_10000640
  %v0_10000680 = phi i32 [ %v0_10000640, %dec_label_pc_10000640 ], [ %v0_10000654, %dec_label_pc_10000654 ]
  %v1_10000680 = inttoptr i32 %v0_10000680 to i32*
  %v2_10000680 = load i32, i32* %v1_10000680, align 4
  %v3_10000684 = icmp eq i32 %v2_10000680, 0
  br i1 %v3_10000684, label %dec_label_pc_1000066c, label %dec_label_pc_1000068c

dec_label_pc_1000068c:                            ; preds = %dec_label_pc_10000680
  store i32 268437136, i32* @lr, align 4
  %v1_1000068c = call i32 @function_10009bbc(i32 %v2_10000680)
  ret i32 %v1_1000068c

; uselistorder directives
  uselistorder i32 %v1_10000668, { 1, 0 }
  uselistorder i32 %v0_10000654, { 1, 0, 2 }
  uselistorder i32 %v0_10000654.in, { 1, 0 }
  uselistorder i32 %v0_10000640, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000066c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000664, { 1, 0 }
}

define i32 @function_100006a8(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100006a8:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %tmp7 = icmp slt i32 %arg1, 1
  br i1 %tmp7, label %dec_label_pc_100006ec, label %dec_label_pc_100006c0

dec_label_pc_100006c0:                            ; preds = %dec_label_pc_100006a8
  %v0_100006c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100006c0 = add i32 %v0_100006c0, 4
  %v2_100006c0 = inttoptr i32 %v1_100006c0 to i8*
  %v3_100006c0 = load i8, i8* %v2_100006c0, align 1
  %v4_100006c0 = zext i8 %v3_100006c0 to i32
  %v4_100006c8 = icmp eq i32 %v4_100006c0, %arg3
  br i1 %v4_100006c8, label %dec_label_pc_10000700, label %dec_label_pc_100006e4

dec_label_pc_100006d4:                            ; preds = %dec_label_pc_100006e4
  %v1_100006d4 = add i32 %v0_100006d4.in, 12
  %v2_100006d4 = inttoptr i32 %v1_100006d4 to i8*
  %v3_100006d4 = load i8, i8* %v2_100006d4, align 1
  %v4_100006d4 = zext i8 %v3_100006d4 to i32
  %v4_100006dc = icmp eq i32 %v4_100006d4, %arg3
  br i1 %v4_100006dc, label %dec_label_pc_10000700, label %dec_label_pc_100006e4

dec_label_pc_100006e4:                            ; preds = %dec_label_pc_100006c0, %dec_label_pc_100006d4
  %v0_100006e8 = phi i32 [ %v1_100006e8, %dec_label_pc_100006d4 ], [ %arg1, %dec_label_pc_100006c0 ]
  %v0_100006d4.in = phi i32 [ %v0_100006d4, %dec_label_pc_100006d4 ], [ %v0_100006c0, %dec_label_pc_100006c0 ]
  %v0_100006d4 = add i32 %v0_100006d4.in, 8
  store i32 %v0_100006d4, i32* %r4.global-to-local, align 4
  %v1_100006e8 = add i32 %v0_100006e8, -1
  %v2_100006e8 = icmp eq i32 %v1_100006e8, 0
  br i1 %v2_100006e8, label %dec_label_pc_100006ec, label %dec_label_pc_100006d4

dec_label_pc_100006ec:                            ; preds = %dec_label_pc_100006e4, %dec_label_pc_10000700, %dec_label_pc_100006a8
  ret i32 %arg4

dec_label_pc_10000700:                            ; preds = %dec_label_pc_100006d4, %dec_label_pc_100006c0
  %v0_10000700 = phi i32 [ %v0_100006c0, %dec_label_pc_100006c0 ], [ %v0_100006d4, %dec_label_pc_100006d4 ]
  %v1_10000700 = inttoptr i32 %v0_10000700 to i32*
  %v2_10000700 = load i32, i32* %v1_10000700, align 4
  store i32 %v2_10000700, i32* @r3, align 4
  %v3_10000704 = icmp eq i32 %v2_10000700, 0
  br i1 %v3_10000704, label %dec_label_pc_100006ec, label %dec_label_pc_1000070c

dec_label_pc_1000070c:                            ; preds = %dec_label_pc_10000700
  store i32 10, i32* %r4.global-to-local, align 4
  store i32 268437268, i32* @lr, align 4
  %v2_10000710 = call i32 @function_10008a70(i32 %v2_10000700, i32 10)
  ret i32 %v2_10000710

; uselistorder directives
  uselistorder i32 %v1_100006e8, { 1, 0 }
  uselistorder i32 %v0_100006d4, { 1, 0, 2 }
  uselistorder i32 %v0_100006d4.in, { 1, 0 }
  uselistorder i32 %v0_100006c0, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_100006ec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100006e4, { 1, 0 }
}

define i32 @function_1000072c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000072c:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v0_10000730 = load i32, i32* @lr, align 4
  store i32 %v0_10000730, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  %v0_1000074c = load i32, i32* @r28, align 4
  store i32 268437336, i32* @lr, align 4
  %v2_10000754 = call i32 @function_1000a1b4(i32 1, i32 8)
  %v3_10000758 = load i8, i8* @global_var_1001c290.9, align 1
  %v4_10000758 = zext i8 %v3_10000758 to i32
  store i32 %v4_10000758, i32* %r4.global-to-local, align 4
  store i32 %v2_10000754, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_1000076c = load i32, i32* @global_var_1001c294.10, align 4
  %v2_10000770 = inttoptr i32 %v2_10000754 to i32*
  store i32 268448928, i32* %v2_10000770, align 4
  %v0_10000774 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000774 = mul i32 %v0_10000774, 4
  store i32 %v1_10000774, i32* %r4.global-to-local, align 4
  %v0_10000778 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000778 = trunc i32 %v0_10000778 to i8
  %v2_10000778 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000778 = add i32 %v2_10000778, 4
  %v4_10000778 = inttoptr i32 %v3_10000778 to i8*
  store i8 %v1_10000778, i8* %v4_10000778, align 1
  %v0_1000077c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000077c = add i32 %v0_1000077c, 4
  store i32 %v1_1000077c, i32* %r4.global-to-local, align 4
  store i32 268437380, i32* @lr, align 4
  %v3_10000780 = call i32 @function_1000a324(i32 %v3_1000076c, i32 %v1_1000077c, i32 268448928)
  %v3_10000784 = load i8, i8* @global_var_1001c290.9, align 1
  %v4_10000784 = zext i8 %v3_10000784 to i32
  store i32 %v3_10000780, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c291.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000794 = mul nuw nsw i32 %v4_10000784, 4
  %v0_10000798 = load i32, i32* @r28, align 4
  %v3_10000798 = add i32 %v1_10000794, %v3_10000780
  %v4_10000798 = inttoptr i32 %v3_10000798 to i32*
  store i32 %v0_10000798, i32* %v4_10000798, align 4
  %v0_100007a0 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100007a0, i32* @global_var_1001c294.10, align 4
  %v0_100007a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100007a4 = trunc i32 %v0_100007a4 to i8
  store i8 %v1_100007a4, i8* @global_var_1001c290.9, align 1
  store i32 268437420, i32* @lr, align 4
  %v2_100007a8 = call i32 @function_1000a1b4(i32 1, i32 8)
  %v3_100007ac = load i8, i8* @global_var_1001c290.9, align 1
  %v4_100007ac = zext i8 %v3_100007ac to i32
  store i32 %v4_100007ac, i32* %r4.global-to-local, align 4
  store i32 %v2_100007a8, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_100007c0 = load i32, i32* @global_var_1001c294.10, align 4
  %v2_100007c4 = inttoptr i32 %v2_100007a8 to i32*
  store i32 268450172, i32* %v2_100007c4, align 4
  %v0_100007c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_100007c8 = mul i32 %v0_100007c8, 4
  store i32 %v1_100007c8, i32* %r4.global-to-local, align 4
  %v0_100007cc = load i32, i32* %r0.global-to-local, align 4
  %v1_100007cc = trunc i32 %v0_100007cc to i8
  %v2_100007cc = load i32, i32* %r28.global-to-local, align 4
  %v3_100007cc = add i32 %v2_100007cc, 4
  %v4_100007cc = inttoptr i32 %v3_100007cc to i8*
  store i8 %v1_100007cc, i8* %v4_100007cc, align 1
  %v0_100007d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100007d0 = add i32 %v0_100007d0, 4
  store i32 %v1_100007d0, i32* %r4.global-to-local, align 4
  store i32 268437464, i32* @lr, align 4
  %v3_100007d4 = call i32 @function_1000a324(i32 %v3_100007c0, i32 %v1_100007d0, i32 268450172)
  %v3_100007d8 = load i8, i8* @global_var_1001c290.9, align 1
  %v4_100007d8 = zext i8 %v3_100007d8 to i32
  store i32 %v3_100007d4, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c291.13 to i32), i32* %r0.global-to-local, align 4
  %v1_100007e8 = mul nuw nsw i32 %v4_100007d8, 4
  %v0_100007ec = load i32, i32* @r28, align 4
  %v3_100007ec = add i32 %v1_100007e8, %v3_100007d4
  %v4_100007ec = inttoptr i32 %v3_100007ec to i32*
  store i32 %v0_100007ec, i32* %v4_100007ec, align 4
  %v0_100007f4 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100007f4, i32* @global_var_1001c294.10, align 4
  %v0_100007f8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100007f8 = trunc i32 %v0_100007f8 to i8
  store i8 %v1_100007f8, i8* @global_var_1001c290.9, align 1
  store i32 268437504, i32* @lr, align 4
  %v2_100007fc = call i32 @function_1000a1b4(i32 1, i32 8)
  %v3_10000800 = load i8, i8* @global_var_1001c290.9, align 1
  %v4_10000800 = zext i8 %v3_10000800 to i32
  store i32 %v4_10000800, i32* %r4.global-to-local, align 4
  store i32 %v2_100007fc, i32* %r28.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_10000814 = load i32, i32* @global_var_1001c294.10, align 4
  %v2_10000818 = inttoptr i32 %v2_100007fc to i32*
  store i32 268451164, i32* %v2_10000818, align 4
  %v0_1000081c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000081c = mul i32 %v0_1000081c, 4
  store i32 %v1_1000081c, i32* %r4.global-to-local, align 4
  %v0_10000820 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000820 = trunc i32 %v0_10000820 to i8
  %v2_10000820 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000820 = add i32 %v2_10000820, 4
  %v4_10000820 = inttoptr i32 %v3_10000820 to i8*
  store i8 %v1_10000820, i8* %v4_10000820, align 1
  %v0_10000824 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000824 = add i32 %v0_10000824, 4
  store i32 %v1_10000824, i32* %r4.global-to-local, align 4
  store i32 268437548, i32* @lr, align 4
  %v3_10000828 = call i32 @function_1000a324(i32 %v3_10000814, i32 %v1_10000824, i32 268451164)
  %v3_1000082c = load i8, i8* @global_var_1001c290.9, align 1
  %v4_1000082c = zext i8 %v3_1000082c to i32
  store i32 %v3_10000828, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c291.13 to i32), i32* %r0.global-to-local, align 4
  %v1_1000083c = mul nuw nsw i32 %v4_1000082c, 4
  %v0_10000840 = load i32, i32* @r28, align 4
  %v3_10000840 = add i32 %v1_1000083c, %v3_10000828
  %v4_10000840 = inttoptr i32 %v3_10000840 to i32*
  store i32 %v0_10000840, i32* %v4_10000840, align 4
  %v0_10000848 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000848, i32* @global_var_1001c294.10, align 4
  %v0_1000084c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000084c = trunc i32 %v0_1000084c to i8
  store i8 %v1_1000084c, i8* @global_var_1001c290.9, align 1
  store i32 268437588, i32* @lr, align 4
  %v2_10000850 = call i32 @function_1000a1b4(i32 1, i32 8)
  %v3_10000854 = load i8, i8* @global_var_1001c290.9, align 1
  %v4_10000854 = zext i8 %v3_10000854 to i32
  store i32 %v4_10000854, i32* %r4.global-to-local, align 4
  store i32 %v2_10000850, i32* %r28.global-to-local, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v3_10000868 = load i32, i32* @global_var_1001c294.10, align 4
  %v2_1000086c = inttoptr i32 %v2_10000850 to i32*
  store i32 268448104, i32* %v2_1000086c, align 4
  %v0_10000870 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000870 = mul i32 %v0_10000870, 4
  store i32 %v1_10000870, i32* %r4.global-to-local, align 4
  %v0_10000874 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000874 = trunc i32 %v0_10000874 to i8
  %v2_10000874 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000874 = add i32 %v2_10000874, 4
  %v4_10000874 = inttoptr i32 %v3_10000874 to i8*
  store i8 %v1_10000874, i8* %v4_10000874, align 1
  %v0_10000878 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000878 = add i32 %v0_10000878, 4
  store i32 %v1_10000878, i32* %r4.global-to-local, align 4
  store i32 268437632, i32* @lr, align 4
  %v3_1000087c = call i32 @function_1000a324(i32 %v3_10000868, i32 %v1_10000878, i32 268448104)
  %v3_10000880 = load i8, i8* @global_var_1001c290.9, align 1
  %v4_10000880 = zext i8 %v3_10000880 to i32
  store i32 %v3_1000087c, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c291.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000890 = mul nuw nsw i32 %v4_10000880, 4
  %v0_10000894 = load i32, i32* @r28, align 4
  %v3_10000894 = add i32 %v1_10000890, %v3_1000087c
  %v4_10000894 = inttoptr i32 %v3_10000894 to i32*
  store i32 %v0_10000894, i32* %v4_10000894, align 4
  %v0_1000089c = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000089c, i32* @global_var_1001c294.10, align 4
  %v0_100008a0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100008a0 = trunc i32 %v0_100008a0 to i8
  store i8 %v1_100008a0, i8* @global_var_1001c290.9, align 1
  store i32 268437672, i32* @lr, align 4
  %v2_100008a4 = call i32 @function_1000a1b4(i32 1, i32 8)
  %v3_100008a8 = load i8, i8* @global_var_1001c290.9, align 1
  %v4_100008a8 = zext i8 %v3_100008a8 to i32
  store i32 %v4_100008a8, i32* %r4.global-to-local, align 4
  store i32 %v2_100008a4, i32* %r28.global-to-local, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  %v3_100008bc = load i32, i32* @global_var_1001c294.10, align 4
  %v2_100008c0 = inttoptr i32 %v2_100008a4 to i32*
  store i32 268446660, i32* %v2_100008c0, align 4
  %v0_100008c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_100008c4 = mul i32 %v0_100008c4, 4
  store i32 %v1_100008c4, i32* %r4.global-to-local, align 4
  %v0_100008c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100008c8 = trunc i32 %v0_100008c8 to i8
  %v2_100008c8 = load i32, i32* %r28.global-to-local, align 4
  %v3_100008c8 = add i32 %v2_100008c8, 4
  %v4_100008c8 = inttoptr i32 %v3_100008c8 to i8*
  store i8 %v1_100008c8, i8* %v4_100008c8, align 1
  %v0_100008cc = load i32, i32* %r4.global-to-local, align 4
  %v1_100008cc = add i32 %v0_100008cc, 4
  store i32 %v1_100008cc, i32* %r4.global-to-local, align 4
  store i32 268437716, i32* @lr, align 4
  %v3_100008d0 = call i32 @function_1000a324(i32 %v3_100008bc, i32 %v1_100008cc, i32 268446660)
  %v3_100008d4 = load i8, i8* @global_var_1001c290.9, align 1
  %v4_100008d4 = zext i8 %v3_100008d4 to i32
  store i32 %v3_100008d0, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c291.13 to i32), i32* %r0.global-to-local, align 4
  %v1_100008e4 = mul nuw nsw i32 %v4_100008d4, 4
  %v0_100008e8 = load i32, i32* @r28, align 4
  %v3_100008e8 = add i32 %v1_100008e4, %v3_100008d0
  %v4_100008e8 = inttoptr i32 %v3_100008e8 to i32*
  store i32 %v0_100008e8, i32* %v4_100008e8, align 4
  %v0_100008f0 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100008f0, i32* @global_var_1001c294.10, align 4
  %v0_100008f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100008f4 = trunc i32 %v0_100008f4 to i8
  store i8 %v1_100008f4, i8* @global_var_1001c290.9, align 1
  store i32 268437756, i32* @lr, align 4
  %v2_100008f8 = call i32 @function_1000a1b4(i32 1, i32 8)
  %v3_100008fc = load i8, i8* @global_var_1001c290.9, align 1
  %v4_100008fc = zext i8 %v3_100008fc to i32
  store i32 %v4_100008fc, i32* %r4.global-to-local, align 4
  store i32 %v2_100008f8, i32* %r28.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v3_10000910 = load i32, i32* @global_var_1001c294.10, align 4
  %v2_10000914 = inttoptr i32 %v2_100008f8 to i32*
  store i32 268445152, i32* %v2_10000914, align 4
  %v0_10000918 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000918 = mul i32 %v0_10000918, 4
  store i32 %v1_10000918, i32* %r4.global-to-local, align 4
  %v0_1000091c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000091c = trunc i32 %v0_1000091c to i8
  %v2_1000091c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000091c = add i32 %v2_1000091c, 4
  %v4_1000091c = inttoptr i32 %v3_1000091c to i8*
  store i8 %v1_1000091c, i8* %v4_1000091c, align 1
  %v0_10000920 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000920 = add i32 %v0_10000920, 4
  store i32 %v1_10000920, i32* %r4.global-to-local, align 4
  store i32 268437800, i32* @lr, align 4
  %v3_10000924 = call i32 @function_1000a324(i32 %v3_10000910, i32 %v1_10000920, i32 268445152)
  %v3_10000928 = load i8, i8* @global_var_1001c290.9, align 1
  %v4_10000928 = zext i8 %v3_10000928 to i32
  store i32 %v3_10000924, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c291.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000938 = mul nuw nsw i32 %v4_10000928, 4
  %v0_1000093c = load i32, i32* @r28, align 4
  %v3_1000093c = add i32 %v1_10000938, %v3_10000924
  %v4_1000093c = inttoptr i32 %v3_1000093c to i32*
  store i32 %v0_1000093c, i32* %v4_1000093c, align 4
  %v0_10000944 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000944, i32* @global_var_1001c294.10, align 4
  %v0_10000948 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000948 = trunc i32 %v0_10000948 to i8
  store i8 %v1_10000948, i8* @global_var_1001c290.9, align 1
  store i32 268437840, i32* @lr, align 4
  %v2_1000094c = call i32 @function_1000a1b4(i32 1, i32 8)
  %v3_10000950 = load i8, i8* @global_var_1001c290.9, align 1
  %v4_10000950 = zext i8 %v3_10000950 to i32
  store i32 %v4_10000950, i32* %r4.global-to-local, align 4
  store i32 %v2_1000094c, i32* %r28.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v3_10000964 = load i32, i32* @global_var_1001c294.10, align 4
  %v2_10000968 = inttoptr i32 %v2_1000094c to i32*
  store i32 268443544, i32* %v2_10000968, align 4
  %v0_1000096c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000096c = mul i32 %v0_1000096c, 4
  store i32 %v1_1000096c, i32* %r4.global-to-local, align 4
  %v0_10000970 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000970 = trunc i32 %v0_10000970 to i8
  %v2_10000970 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000970 = add i32 %v2_10000970, 4
  %v4_10000970 = inttoptr i32 %v3_10000970 to i8*
  store i8 %v1_10000970, i8* %v4_10000970, align 1
  %v0_10000974 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000974 = add i32 %v0_10000974, 4
  store i32 %v1_10000974, i32* %r4.global-to-local, align 4
  store i32 268437884, i32* @lr, align 4
  %v3_10000978 = call i32 @function_1000a324(i32 %v3_10000964, i32 %v1_10000974, i32 268443544)
  %v3_1000097c = load i8, i8* @global_var_1001c290.9, align 1
  %v4_1000097c = zext i8 %v3_1000097c to i32
  store i32 %v3_10000978, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c291.13 to i32), i32* %r0.global-to-local, align 4
  %v1_1000098c = mul nuw nsw i32 %v4_1000097c, 4
  %v0_10000990 = load i32, i32* @r28, align 4
  %v3_10000990 = add i32 %v1_1000098c, %v3_10000978
  %v4_10000990 = inttoptr i32 %v3_10000990 to i32*
  store i32 %v0_10000990, i32* %v4_10000990, align 4
  %v0_10000998 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000998, i32* @global_var_1001c294.10, align 4
  %v0_1000099c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000099c = trunc i32 %v0_1000099c to i8
  store i8 %v1_1000099c, i8* @global_var_1001c290.9, align 1
  store i32 268437924, i32* @lr, align 4
  %v2_100009a0 = call i32 @function_1000a1b4(i32 1, i32 8)
  %v3_100009a4 = load i8, i8* @global_var_1001c290.9, align 1
  %v4_100009a4 = zext i8 %v3_100009a4 to i32
  store i32 %v4_100009a4, i32* %r4.global-to-local, align 4
  store i32 %v2_100009a0, i32* %r28.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v3_100009b8 = load i32, i32* @global_var_1001c294.10, align 4
  %v2_100009bc = inttoptr i32 %v2_100009a0 to i32*
  store i32 268441936, i32* %v2_100009bc, align 4
  %v0_100009c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100009c0 = mul i32 %v0_100009c0, 4
  store i32 %v1_100009c0, i32* %r4.global-to-local, align 4
  %v0_100009c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100009c4 = trunc i32 %v0_100009c4 to i8
  %v2_100009c4 = load i32, i32* %r28.global-to-local, align 4
  %v3_100009c4 = add i32 %v2_100009c4, 4
  %v4_100009c4 = inttoptr i32 %v3_100009c4 to i8*
  store i8 %v1_100009c4, i8* %v4_100009c4, align 1
  %v0_100009c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_100009c8 = add i32 %v0_100009c8, 4
  store i32 %v1_100009c8, i32* %r4.global-to-local, align 4
  store i32 268437968, i32* @lr, align 4
  %v3_100009cc = call i32 @function_1000a324(i32 %v3_100009b8, i32 %v1_100009c8, i32 268441936)
  %v3_100009d0 = load i8, i8* @global_var_1001c290.9, align 1
  %v4_100009d0 = zext i8 %v3_100009d0 to i32
  store i32 %v3_100009cc, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c291.13 to i32), i32* %r0.global-to-local, align 4
  %v1_100009e0 = mul nuw nsw i32 %v4_100009d0, 4
  %v0_100009e4 = load i32, i32* @r28, align 4
  %v3_100009e4 = add i32 %v1_100009e0, %v3_100009cc
  %v4_100009e4 = inttoptr i32 %v3_100009e4 to i32*
  store i32 %v0_100009e4, i32* %v4_100009e4, align 4
  %v0_100009ec = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100009ec, i32* @global_var_1001c294.10, align 4
  %v0_100009f0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100009f0 = trunc i32 %v0_100009f0 to i8
  store i8 %v1_100009f0, i8* @global_var_1001c290.9, align 1
  store i32 268438008, i32* @lr, align 4
  %v2_100009f4 = call i32 @function_1000a1b4(i32 1, i32 8)
  %v3_100009f8 = load i8, i8* @global_var_1001c290.9, align 1
  %v4_100009f8 = zext i8 %v3_100009f8 to i32
  store i32 %v4_100009f8, i32* %r4.global-to-local, align 4
  store i32 %v2_100009f4, i32* %r28.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v3_10000a0c = load i32, i32* @global_var_1001c294.10, align 4
  %v2_10000a10 = inttoptr i32 %v2_100009f4 to i32*
  store i32 268439748, i32* %v2_10000a10, align 4
  %v0_10000a14 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a14 = mul i32 %v0_10000a14, 4
  store i32 %v1_10000a14, i32* %r4.global-to-local, align 4
  %v0_10000a18 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a18 = trunc i32 %v0_10000a18 to i8
  %v2_10000a18 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000a18 = add i32 %v2_10000a18, 4
  %v4_10000a18 = inttoptr i32 %v3_10000a18 to i8*
  store i8 %v1_10000a18, i8* %v4_10000a18, align 1
  %v0_10000a1c = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a1c = add i32 %v0_10000a1c, 4
  store i32 %v1_10000a1c, i32* %r4.global-to-local, align 4
  store i32 268438052, i32* @lr, align 4
  %v3_10000a20 = call i32 @function_1000a324(i32 %v3_10000a0c, i32 %v1_10000a1c, i32 268439748)
  %v3_10000a24 = load i8, i8* @global_var_1001c290.9, align 1
  %v4_10000a24 = zext i8 %v3_10000a24 to i32
  store i32 %v3_10000a20, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c291.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000a34 = mul nuw nsw i32 %v4_10000a24, 4
  %v0_10000a38 = load i32, i32* @r28, align 4
  %v3_10000a38 = add i32 %v1_10000a34, %v3_10000a20
  %v4_10000a38 = inttoptr i32 %v3_10000a38 to i32*
  store i32 %v0_10000a38, i32* %v4_10000a38, align 4
  %v0_10000a40 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000a40, i32* @global_var_1001c294.10, align 4
  %v0_10000a44 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a44 = trunc i32 %v0_10000a44 to i8
  store i8 %v1_10000a44, i8* @global_var_1001c290.9, align 1
  store i32 268438092, i32* @lr, align 4
  %v2_10000a48 = call i32 @function_1000a1b4(i32 1, i32 8)
  %v3_10000a4c = load i8, i8* @global_var_1001c290.9, align 1
  %v4_10000a4c = zext i8 %v3_10000a4c to i32
  store i32 %v4_10000a4c, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a48, i32* %r28.global-to-local, align 4
  store i32 7, i32* %r0.global-to-local, align 4
  %v3_10000a60 = load i32, i32* @global_var_1001c294.10, align 4
  %v2_10000a64 = inttoptr i32 %v2_10000a48 to i32*
  store i32 268438276, i32* %v2_10000a64, align 4
  %v0_10000a68 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a68 = mul i32 %v0_10000a68, 4
  store i32 %v1_10000a68, i32* %r4.global-to-local, align 4
  %v0_10000a6c = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a6c = trunc i32 %v0_10000a6c to i8
  %v2_10000a6c = load i32, i32* %r28.global-to-local, align 4
  %v3_10000a6c = add i32 %v2_10000a6c, 4
  %v4_10000a6c = inttoptr i32 %v3_10000a6c to i8*
  store i8 %v1_10000a6c, i8* %v4_10000a6c, align 1
  %v0_10000a70 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a70 = add i32 %v0_10000a70, 4
  store i32 %v1_10000a70, i32* %r4.global-to-local, align 4
  store i32 268438136, i32* @lr, align 4
  %v3_10000a74 = call i32 @function_1000a324(i32 %v3_10000a60, i32 %v1_10000a70, i32 268438276)
  %v3_10000a78 = load i8, i8* @global_var_1001c290.9, align 1
  %v4_10000a78 = zext i8 %v3_10000a78 to i32
  store i32 %v3_10000a74, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c291.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000a88 = mul nuw nsw i32 %v4_10000a78, 4
  %v0_10000a8c = load i32, i32* @r28, align 4
  %v3_10000a8c = add i32 %v1_10000a88, %v3_10000a74
  %v4_10000a8c = inttoptr i32 %v3_10000a8c to i32*
  store i32 %v0_10000a8c, i32* %v4_10000a8c, align 4
  %v0_10000a94 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a94 = trunc i32 %v0_10000a94 to i8
  store i8 %v1_10000a94, i8* @global_var_1001c290.9, align 1
  %v0_10000a98 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000a98, i32* @global_var_1001c294.10, align 4
  store i32 268438176, i32* @lr, align 4
  %v2_10000a9c = call i32 @function_1000a1b4(i32 1, i32 8)
  %v3_10000aa0 = load i8, i8* @global_var_1001c290.9, align 1
  %v4_10000aa0 = zext i8 %v3_10000aa0 to i32
  store i32 %v4_10000aa0, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a9c, i32* %r28.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v3_10000ab4 = load i32, i32* @global_var_1001c294.10, align 4
  %v2_10000ab8 = inttoptr i32 %v2_10000a9c to i32*
  store i32 268441112, i32* %v2_10000ab8, align 4
  %v0_10000abc = load i32, i32* %r4.global-to-local, align 4
  %v1_10000abc = mul i32 %v0_10000abc, 4
  store i32 %v1_10000abc, i32* %r4.global-to-local, align 4
  %v0_10000ac0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000ac0 = trunc i32 %v0_10000ac0 to i8
  %v2_10000ac0 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000ac0 = add i32 %v2_10000ac0, 4
  %v4_10000ac0 = inttoptr i32 %v3_10000ac0 to i8*
  store i8 %v1_10000ac0, i8* %v4_10000ac0, align 1
  %v0_10000ac4 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000ac4 = add i32 %v0_10000ac4, 4
  store i32 %v1_10000ac4, i32* %r4.global-to-local, align 4
  store i32 268438220, i32* @lr, align 4
  %v3_10000ac8 = call i32 @function_1000a324(i32 %v3_10000ab4, i32 %v1_10000ac4, i32 268441112)
  %v3_10000acc = load i8, i8* @global_var_1001c290.9, align 1
  %v4_10000acc = zext i8 %v3_10000acc to i32
  store i32 %v3_10000ac8, i32* @global_var_1001c294.10, align 4
  store i32 ptrtoint (i8* @global_var_1001c291.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000ad8 = mul nuw nsw i32 %v4_10000acc, 4
  %v0_10000adc = load i32, i32* @r28, align 4
  %v3_10000adc = add i32 %v1_10000ad8, %v3_10000ac8
  %v4_10000adc = inttoptr i32 %v3_10000adc to i32*
  store i32 %v0_10000adc, i32* %v4_10000adc, align 4
  %v0_10000ae4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000ae4 = trunc i32 %v0_10000ae4 to i8
  store i8 %v1_10000ae4, i8* @global_var_1001c290.9, align 1
  store i32 %v0_10000730, i32* %r0.global-to-local, align 4
  store i32 %v0_1000074c, i32* @r28, align 4
  ret i32 1

; uselistorder directives
  uselistorder i32 ptrtoint (i8* @global_var_1001c291.13 to i32), { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_1001c290.9, { 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_10000b04(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10000b04:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-90 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_10000b08 = load i32, i32* @lr, align 4
  store i32 %v0_10000b08, i32* %r0.global-to-local, align 4
  %v0_10000b0c = call i32 @__asm_mfcr()
  store i32 %v0_10000b0c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_10000b1c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000b0c, i32* %r18.global-to-local, align 4
  %v0_10000b50 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10000b58 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10000b60 = load i32, i32* @r30, align 4
  %v0_10000b64 = load i32, i32* @r31, align 4
  store i32 268438392, i32* @lr, align 4
  %v2_10000b74 = call i32 @function_1000a1b4(i32 4, i32 4)
  store i32 %v2_10000b74, i32* %r19.global-to-local, align 4
  %v0_10000b7c = load i32, i32* @r28, align 4
  %v0_10000b88 = load i32, i32* @r29, align 4
  store i32 %v0_10000b88, i32* %r3.global-to-local, align 4
  store i32 268438416, i32* @lr, align 4
  %v4_10000b8c = inttoptr i32 %v0_10000b7c to i32*
  %v5_10000b8c = call i32 @function_100006a8(i32 %v0_10000b88, i32* %v4_10000b8c, i32 2, i32 0)
  %v0_10000b9c = load i32, i32* @r28, align 4
  %v1_10000ba0 = urem i32 %v5_10000b8c, 256
  store i32 %v1_10000ba0, i32* %r14.global-to-local, align 4
  %v0_10000ba4 = load i32, i32* @r29, align 4
  store i32 %v0_10000ba4, i32* %r3.global-to-local, align 4
  store i32 268438444, i32* @lr, align 4
  %v4_10000ba8 = inttoptr i32 %v0_10000b9c to i32*
  %v5_10000ba8 = call i32 @function_100006a8(i32 %v0_10000ba4, i32* %v4_10000ba8, i32 3, i32 65535)
  %v0_10000bac = load i32, i32* @r28, align 4
  store i32 %v5_10000ba8, i32* %r24.global-to-local, align 4
  %v0_10000bbc = load i32, i32* @r29, align 4
  store i32 %v0_10000bbc, i32* %r3.global-to-local, align 4
  store i32 268438468, i32* @lr, align 4
  %v4_10000bc0 = inttoptr i32 %v0_10000bac to i32*
  %v5_10000bc0 = call i32 @function_100006a8(i32 %v0_10000bbc, i32* %v4_10000bc0, i32 4, i32 64)
  %v0_10000bc4 = load i32, i32* @r28, align 4
  %v1_10000bd0 = urem i32 %v5_10000bc0, 256
  store i32 %v1_10000bd0, i32* %r20.global-to-local, align 4
  %v0_10000bd4 = load i32, i32* @r29, align 4
  store i32 %v0_10000bd4, i32* %r3.global-to-local, align 4
  store i32 268438492, i32* @lr, align 4
  %v4_10000bd8 = inttoptr i32 %v0_10000bc4 to i32*
  %v5_10000bd8 = call i32 @function_100006a8(i32 %v0_10000bd4, i32* %v4_10000bd8, i32 5, i32 1)
  %v0_10000be8 = load i32, i32* @r28, align 4
  %v1_10000bec = urem i32 %v5_10000bd8, 256
  store i32 %v1_10000bec, i32* @r31, align 4
  %v0_10000bf0 = load i32, i32* @r29, align 4
  store i32 %v0_10000bf0, i32* %r3.global-to-local, align 4
  store i32 268438520, i32* @lr, align 4
  %v4_10000bf4 = inttoptr i32 %v0_10000be8 to i32*
  %v5_10000bf4 = call i32 @function_100006a8(i32 %v0_10000bf0, i32* %v4_10000bf4, i32 6, i32 65535)
  %v0_10000bfc = load i32, i32* @r28, align 4
  store i32 %v5_10000bf4, i32* %r26.global-to-local, align 4
  %v0_10000c0c = load i32, i32* @r29, align 4
  store i32 %v0_10000c0c, i32* %r3.global-to-local, align 4
  store i32 268438548, i32* @lr, align 4
  %v4_10000c10 = inttoptr i32 %v0_10000bfc to i32*
  %v5_10000c10 = call i32 @function_100006a8(i32 %v0_10000c0c, i32* %v4_10000c10, i32 7, i32 65535)
  %v0_10000c14 = load i32, i32* @r28, align 4
  store i32 %v5_10000c10, i32* %r27.global-to-local, align 4
  %v0_10000c24 = load i32, i32* @r29, align 4
  store i32 %v0_10000c24, i32* %r3.global-to-local, align 4
  store i32 268438572, i32* @lr, align 4
  %v4_10000c28 = inttoptr i32 %v0_10000c14 to i32*
  %v5_10000c28 = call i32 @function_100006a8(i32 %v0_10000c24, i32* %v4_10000c28, i32 0, i32 512)
  %v0_10000c2c = load i32, i32* @r28, align 4
  store i32 %v5_10000c28, i32* %r15.global-to-local, align 4
  %v0_10000c3c = load i32, i32* @r29, align 4
  store i32 %v0_10000c3c, i32* %r3.global-to-local, align 4
  store i32 268438596, i32* @lr, align 4
  %v4_10000c40 = inttoptr i32 %v0_10000c2c to i32*
  %v5_10000c40 = call i32 @function_100006a8(i32 %v0_10000c3c, i32* %v4_10000c40, i32 1, i32 1)
  %v0_10000c44 = load i32, i32* @r28, align 4
  %v1_10000c50 = urem i32 %v5_10000c40, 256
  store i32 %v1_10000c50, i32* %r21.global-to-local, align 4
  %v0_10000c54 = load i32, i32* @r29, align 4
  store i32 %v0_10000c54, i32* %r3.global-to-local, align 4
  store i32 268438620, i32* @lr, align 4
  %v4_10000c58 = inttoptr i32 %v0_10000c44 to i32*
  %v5_10000c58 = call i32 @function_100006a8(i32 %v0_10000c54, i32* %v4_10000c58, i32 19, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10000c60 = load i32, i32* @global_var_1001c298.14, align 4
  %v0_10000c64 = load i32, i32* @r28, align 4
  store i32 %v5_10000c58, i32* %r30.global-to-local, align 4
  %v0_10000c70 = load i32, i32* @r29, align 4
  store i32 %v0_10000c70, i32* %r3.global-to-local, align 4
  store i32 268438648, i32* @lr, align 4
  %v4_10000c74 = inttoptr i32 %v0_10000c64 to i32*
  %v5_10000c74 = call i32 @function_100006a8(i32 %v0_10000c70, i32* %v4_10000c74, i32 25, i32 %v3_10000c60)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268438668, i32* @lr, align 4
  %v3_10000c88 = call i32 @function_10009e58(i32 2, i32 3, i32 6)
  store i32 %v3_10000c88, i32* %r3.global-to-local, align 4
  %v3_10000c8c = icmp eq i32 %v3_10000c88, -1
  store i1 %v3_10000c8c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10000c88, i32* %r23.global-to-local, align 4
  br i1 %v3_10000c8c, label %dec_label_pc_10000e30, label %dec_label_pc_10000c98

dec_label_pc_10000c98:                            ; preds = %dec_label_pc_10000b04
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10000ca4 = ptrtoint i32* %stack_var_-104 to i32
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268438708, i32* @lr, align 4
  %v4_10000cb0 = call i32 @function_10009e1c(i32 0, i32 3, i32 %v2_10000ca4, i32 4)
  store i32 %v4_10000cb0, i32* %r3.global-to-local, align 4
  %v3_10000cb4 = icmp eq i32 %v4_10000cb0, -1
  store i1 %v3_10000cb4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000cb4, label %dec_label_pc_10000e28, label %dec_label_pc_10000cbc

dec_label_pc_10000cbc:                            ; preds = %dec_label_pc_10000c98
  %v0_10000cbc = load i32, i32* %r18.global-to-local, align 4
  %v1_10000cbc = icmp slt i32 %v0_10000cbc, 0
  %v3_10000cbc = icmp eq i32 %v0_10000cbc, 0
  store i1 %v1_10000cbc, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10000cbc, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %v0_10000cc8 = load i32, i32* %r24.global-to-local, align 4
  %v1_10000cc8 = urem i32 %v0_10000cc8, 65536
  store i32 %v1_10000cc8, i32* %r24.global-to-local, align 4
  %v0_10000ccc = load i32, i32* %r26.global-to-local, align 4
  %v1_10000ccc = urem i32 %v0_10000ccc, 65536
  store i32 %v1_10000ccc, i32* %r16.global-to-local, align 4
  %v0_10000cd0 = load i32, i32* %r27.global-to-local, align 4
  %v1_10000cd0 = urem i32 %v0_10000cd0, 65536
  store i32 %v1_10000cd0, i32* %r17.global-to-local, align 4
  %v0_10000cd4 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000cd4 = urem i32 %v0_10000cd4, 256
  store i32 %v1_10000cd4, i32* %r3.global-to-local, align 4
  %tmp37 = icmp slt i32 %v0_10000cbc, 1
  br i1 %tmp37, label %dec_label_pc_10000e90, label %dec_label_pc_10000cdc

dec_label_pc_10000cdc:                            ; preds = %dec_label_pc_10000cbc
  %v0_10000cdc = load i32, i32* @r31, align 4
  %v3_10000cdc = icmp eq i32 %v0_10000cdc, 0
  store i1 %v3_10000cdc, i1* %cr2_eq.global-to-local, align 1
  %v3_10000ce0 = icmp eq i32 %v1_10000cd4, 0
  store i1 %v3_10000ce0, i1* %cr3_eq.global-to-local, align 1
  %v0_10000ce4 = load i32, i32* %r15.global-to-local, align 4
  %v1_10000ce4 = urem i32 %v0_10000ce4, 65536
  %v0_10000cc8.not = or i32 %v0_10000cc8, -65536
  %v1_10000ce8 = xor i32 %v0_10000cc8.not, 65535
  store i32 %v1_10000ce8, i32* %r11.global-to-local, align 4
  %v1_10000cf0 = add nuw nsw i32 %v1_10000ce4, 66
  store i32 %v1_10000cf0, i32* %r0.global-to-local, align 4
  %v1_10000cf4 = add nuw nsw i32 %v1_10000ce4, 28
  store i32 %v1_10000cf4, i32* %r9.global-to-local, align 4
  %fold = add i32 %v0_10000ce4, 66
  %v1_10000cf8 = urem i32 %fold, 65536
  store i32 %v1_10000cf8, i32* %r22.global-to-local, align 4
  %fold8 = add i32 %v0_10000ce4, 28
  %v1_10000cfc = urem i32 %fold8, 65536
  store i32 %v1_10000cfc, i32* %r26.global-to-local, align 4
  %v1_10000d00 = urem i32 %v1_10000ce8, 65536
  store i32 %v1_10000d00, i32* %r27.global-to-local, align 4
  %fold9 = add i32 %v0_10000ce4, 8
  %v1_10000d04 = urem i32 %fold9, 65536
  store i32 %v1_10000d04, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10000d38

dec_label_pc_10000d10:                            ; preds = %dec_label_pc_10000e04
  %v0_10000d10 = load i32, i32* %r31.global-to-local, align 4
  %v1_10000d10 = add i32 %v0_10000d10, 16
  %v2_10000d10 = inttoptr i32 %v1_10000d10 to i32*
  %v3_10000d10 = load i32, i32* %v2_10000d10, align 4
  store i32 %v3_10000d10, i32* %r0.global-to-local, align 4
  %v1_10000d14 = load i32, i32* %r30.global-to-local, align 4
  %v2_10000d14 = add i32 %v1_10000d14, 16
  %v3_10000d14 = inttoptr i32 %v2_10000d14 to i32*
  store i32 %v3_10000d10, i32* %v3_10000d14, align 4
  br label %dec_label_pc_10000d18

dec_label_pc_10000d18:                            ; preds = %dec_label_pc_10000e20, %dec_label_pc_10000d10
  %v3_10000d18 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10000d18, i32* %r9.global-to-local, align 4
  %v0_10000d1c = load i32, i32* @r28, align 4
  %v1_10000d1c = trunc i32 %v0_10000d1c to i16
  %v2_10000d1c = load i32, i32* %r29.global-to-local, align 4
  %v3_10000d1c = add i32 %v2_10000d1c, 4
  %v4_10000d1c = inttoptr i32 %v3_10000d1c to i16*
  store i16 %v1_10000d1c, i16* %v4_10000d1c, align 2
  %v0_10000d20 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000d20 = add i32 %v0_10000d20, 1
  store i32 %v1_10000d20, i32* %r31.global-to-local, align 4
  %v0_10000d24 = load i32, i32* %r16.global-to-local, align 4
  %v1_10000d24 = trunc i32 %v0_10000d24 to i16
  %v2_10000d24 = load i32, i32* %r29.global-to-local, align 4
  %v3_10000d24 = inttoptr i32 %v2_10000d24 to i16*
  store i16 %v1_10000d24, i16* %v3_10000d24, align 2
  %v0_10000d28 = load i32, i32* %r31.global-to-local, align 4
  %v1_10000d28 = load i32, i32* %r18.global-to-local, align 4
  %v2_10000d28 = icmp slt i32 %v0_10000d28, %v1_10000d28
  %v4_10000d28 = icmp eq i32 %v0_10000d28, %v1_10000d28
  store i1 %v4_10000d28, i1* %cr7_eq.global-to-local, align 1
  %v0_10000d2c = load i32, i32* %r17.global-to-local, align 4
  %v1_10000d2c = trunc i32 %v0_10000d2c to i16
  %v2_10000d2c = load i32, i32* %r29.global-to-local, align 4
  %v3_10000d2c = add i32 %v2_10000d2c, 2
  %v4_10000d2c = inttoptr i32 %v3_10000d2c to i16*
  store i16 %v1_10000d2c, i16* %v4_10000d2c, align 2
  %v0_10000d30 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10000d30, i32* %stack_var_-104, align 4
  br i1 %v2_10000d28, label %dec_label_pc_10000d38, label %dec_label_pc_10000e94

dec_label_pc_10000d38:                            ; preds = %dec_label_pc_10000d18, %dec_label_pc_10000cdc
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268438852, i32* @lr, align 4
  %v2_10000d40 = call i32 @function_1000a1b4(i32 1510, i32 4)
  store i32 %v2_10000d40, i32* %r3.global-to-local, align 4
  %v3_10000d44 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10000d44, i32* %r9.global-to-local, align 4
  %v0_10000d48 = load i32, i32* @r31, align 4
  %v1_10000d48 = mul i32 %v0_10000d48, 4
  store i32 %v1_10000d48, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r11.global-to-local, align 4
  %v1_10000d50 = load i32, i32* %r19.global-to-local, align 4
  %v3_10000d50 = add i32 %v1_10000d50, %v1_10000d48
  %v4_10000d50 = inttoptr i32 %v3_10000d50 to i32*
  store i32 %v2_10000d40, i32* %v4_10000d50, align 4
  %v0_10000d54 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000d54 = mul i32 %v0_10000d54, 4
  store i32 %v1_10000d54, i32* %r9.global-to-local, align 4
  %v1_10000d58 = load i32, i32* %r19.global-to-local, align 4
  %v2_10000d58 = add i32 %v1_10000d58, %v1_10000d54
  %v3_10000d58 = inttoptr i32 %v2_10000d58 to i32*
  %v4_10000d58 = load i32, i32* %v3_10000d58, align 4
  store i32 %v4_10000d58, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10000d60 = inttoptr i32 %v4_10000d58 to i32*
  %v2_10000d60 = load i32, i32* %v1_10000d60, align 4
  store i32 %v2_10000d60, i32* %r0.global-to-local, align 4
  %v1_10000d64 = add i32 %v4_10000d58, 38
  store i32 %v1_10000d64, i32* %r30.global-to-local, align 4
  %v0_10000d68 = load i32, i32* %r20.global-to-local, align 4
  %v1_10000d68 = trunc i32 %v0_10000d68 to i8
  %v3_10000d68 = add i32 %v4_10000d58, 8
  %v4_10000d68 = inttoptr i32 %v3_10000d68 to i8*
  store i8 %v1_10000d68, i8* %v4_10000d68, align 1
  %v0_10000d6c = load i32, i32* %r31.global-to-local, align 4
  %v1_10000d6c = add i32 %v0_10000d6c, 58
  store i32 %v1_10000d6c, i32* %r29.global-to-local, align 4
  %v1_10000d70 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10000d70, i32* %r0.global-to-local, align 4
  %v0_10000d74 = load i32, i32* %r24.global-to-local, align 4
  %v1_10000d74 = trunc i32 %v0_10000d74 to i16
  %v2_10000d74 = load i32, i32* %r31.global-to-local, align 4
  %v3_10000d74 = add i32 %v2_10000d74, 4
  %v4_10000d74 = inttoptr i32 %v3_10000d74 to i16*
  store i16 %v1_10000d74, i16* %v4_10000d74, align 2
  %v1_10000d78 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10000d78, i32* %r0.global-to-local, align 4
  %v0_10000d7c = load i32, i32* %r31.global-to-local, align 4
  %v1_10000d7c = add i32 %v0_10000d7c, 20
  store i32 %v1_10000d7c, i32* %r9.global-to-local, align 4
  %v2_10000d80 = inttoptr i32 %v0_10000d7c to i32*
  store i32 %v1_10000d78, i32* %v2_10000d80, align 4
  %v0_10000d84 = load i32, i32* %r31.global-to-local, align 4
  %v1_10000d84 = add i32 %v0_10000d84, 24
  store i32 %v1_10000d84, i32* %r11.global-to-local, align 4
  %v0_10000d88 = load i32, i32* %r14.global-to-local, align 4
  %v1_10000d88 = trunc i32 %v0_10000d88 to i8
  %v3_10000d88 = add i32 %v0_10000d84, 1
  %v4_10000d88 = inttoptr i32 %v3_10000d88 to i8*
  store i8 %v1_10000d88, i8* %v4_10000d88, align 1
  %v0_10000d8c = load i32, i32* %r22.global-to-local, align 4
  %v1_10000d8c = trunc i32 %v0_10000d8c to i16
  %v2_10000d8c = load i32, i32* %r31.global-to-local, align 4
  %v3_10000d8c = add i32 %v2_10000d8c, 2
  %v4_10000d8c = inttoptr i32 %v3_10000d8c to i16*
  store i16 %v1_10000d8c, i16* %v4_10000d8c, align 2
  %v0_10000d90 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10000d90, label %dec_label_pc_10000d9c, label %dec_label_pc_10000d94

dec_label_pc_10000d94:                            ; preds = %dec_label_pc_10000d38
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10000d98 = load i32, i32* %r31.global-to-local, align 4
  %v3_10000d98 = add i32 %v2_10000d98, 6
  %v4_10000d98 = inttoptr i32 %v3_10000d98 to i16*
  store i16 16384, i16* %v4_10000d98, align 2
  br label %dec_label_pc_10000d9c

dec_label_pc_10000d9c:                            ; preds = %dec_label_pc_10000d38, %dec_label_pc_10000d94
  %v2_10000da0 = load i32, i32* %r31.global-to-local, align 4
  %v3_10000da0 = add i32 %v2_10000da0, 9
  %v4_10000da0 = inttoptr i32 %v3_10000da0 to i8*
  store i8 47, i8* %v4_10000da0, align 1
  store i32 25944, i32* %r0.global-to-local, align 4
  %v2_10000da8 = load i32, i32* %r9.global-to-local, align 4
  %v3_10000da8 = add i32 %v2_10000da8, 2
  %v4_10000da8 = inttoptr i32 %v3_10000da8 to i16*
  store i16 25944, i16* %v4_10000da8, align 2
  %v2_10000db0 = load i32, i32* %r11.global-to-local, align 4
  %v3_10000db0 = add i32 %v2_10000db0, 12
  %v4_10000db0 = inttoptr i32 %v3_10000db0 to i16*
  store i16 2048, i16* %v4_10000db0, align 2
  %v3_10000db4 = load i32, i32* %stack_var_-104, align 4
  store i32 %v5_10000c74, i32* %r11.global-to-local, align 4
  %v1_10000dbc = mul i32 %v3_10000db4, 24
  store i32 %v1_10000dbc, i32* %r9.global-to-local, align 4
  %v0_10000dc0 = load i32, i32* %r31.global-to-local, align 4
  %v1_10000dc0 = add i32 %v0_10000dc0, 38
  %v2_10000dc0 = inttoptr i32 %v1_10000dc0 to i32*
  %v3_10000dc0 = load i32, i32* %v2_10000dc0, align 4
  store i32 %v3_10000dc0, i32* %r0.global-to-local, align 4
  %v2_10000dc4 = add i32 %v0_10000dc0, 12
  %v3_10000dc4 = inttoptr i32 %v2_10000dc4 to i32*
  store i32 %v5_10000c74, i32* %v3_10000dc4, align 4
  store i32 4, i32* %r11.global-to-local, align 4
  %v0_10000dcc = load i32, i32* %r9.global-to-local, align 4
  %v1_10000dcc = load i32, i32* %r25.global-to-local, align 4
  %v2_10000dcc = add i32 %v1_10000dcc, %v0_10000dcc
  store i32 %v2_10000dcc, i32* %r9.global-to-local, align 4
  %v1_10000dd0 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10000dd0, i32* %r0.global-to-local, align 4
  %v0_10000dd4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000dd4 = add i32 %v0_10000dd4, 16
  %v2_10000dd4 = inttoptr i32 %v1_10000dd4 to i32*
  %v3_10000dd4 = load i32, i32* %v2_10000dd4, align 4
  store i32 %v3_10000dd4, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10000ddc = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10000ddc, i32* %r0.global-to-local, align 4
  %v1_10000de0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10000de0 = add i32 %v1_10000de0, 38
  %v3_10000de0 = inttoptr i32 %v2_10000de0 to i32*
  store i32 %v1_10000ddc, i32* %v3_10000de0, align 4
  %v0_10000de4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10000de4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10000de4 = add i32 %v1_10000de4, 16
  %v3_10000de4 = inttoptr i32 %v2_10000de4 to i32*
  store i32 %v0_10000de4, i32* %v3_10000de4, align 4
  %v0_10000de8 = load i32, i32* %r14.global-to-local, align 4
  %v1_10000de8 = trunc i32 %v0_10000de8 to i8
  %v2_10000de8 = load i32, i32* %r30.global-to-local, align 4
  %v3_10000de8 = add i32 %v2_10000de8, 1
  %v4_10000de8 = inttoptr i32 %v3_10000de8 to i8*
  store i8 %v1_10000de8, i8* %v4_10000de8, align 1
  %v0_10000dec = load i32, i32* %r26.global-to-local, align 4
  %v1_10000dec = trunc i32 %v0_10000dec to i16
  %v2_10000dec = load i32, i32* %r30.global-to-local, align 4
  %v3_10000dec = add i32 %v2_10000dec, 2
  %v4_10000dec = inttoptr i32 %v3_10000dec to i16*
  store i16 %v1_10000dec, i16* %v4_10000dec, align 2
  %v0_10000df0 = load i32, i32* %r27.global-to-local, align 4
  %v1_10000df0 = trunc i32 %v0_10000df0 to i16
  %v2_10000df0 = load i32, i32* %r30.global-to-local, align 4
  %v3_10000df0 = add i32 %v2_10000df0, 4
  %v4_10000df0 = inttoptr i32 %v3_10000df0 to i16*
  store i16 %v1_10000df0, i16* %v4_10000df0, align 2
  %v0_10000df4 = load i32, i32* %r20.global-to-local, align 4
  %v1_10000df4 = trunc i32 %v0_10000df4 to i8
  %v2_10000df4 = load i32, i32* %r30.global-to-local, align 4
  %v3_10000df4 = add i32 %v2_10000df4, 8
  %v4_10000df4 = inttoptr i32 %v3_10000df4 to i8*
  store i8 %v1_10000df4, i8* %v4_10000df4, align 1
  %v0_10000df8 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10000df8, label %dec_label_pc_10000e04, label %dec_label_pc_10000dfc

dec_label_pc_10000dfc:                            ; preds = %dec_label_pc_10000d9c
  store i32 16384, i32* %r11.global-to-local, align 4
  %v2_10000e00 = load i32, i32* %r30.global-to-local, align 4
  %v3_10000e00 = add i32 %v2_10000e00, 6
  %v4_10000e00 = inttoptr i32 %v3_10000e00 to i16*
  store i16 16384, i16* %v4_10000e00, align 2
  br label %dec_label_pc_10000e04

dec_label_pc_10000e04:                            ; preds = %dec_label_pc_10000d9c, %dec_label_pc_10000dfc
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_10000e08 = load i32, i32* %r30.global-to-local, align 4
  %v3_10000e08 = add i32 %v2_10000e08, 9
  %v4_10000e08 = inttoptr i32 %v3_10000e08 to i8*
  store i8 17, i8* %v4_10000e08, align 1
  %v0_10000e0c = call i32 @function_10005f74()
  store i32 %v0_10000e0c, i32* %r3.global-to-local, align 4
  %v1_10000e10 = add i32 %v0_10000e0c, -1024
  store i32 %v1_10000e10, i32* %r0.global-to-local, align 4
  %v1_10000e14 = load i32, i32* %r30.global-to-local, align 4
  %v2_10000e14 = add i32 %v1_10000e14, 12
  %v3_10000e14 = inttoptr i32 %v2_10000e14 to i32*
  store i32 %v0_10000e0c, i32* %v3_10000e14, align 4
  %v0_10000e18 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000e18 = sub i32 -1, %v0_10000e18
  store i32 %v1_10000e18, i32* %r0.global-to-local, align 4
  %v0_10000e1c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10000e1c, label %dec_label_pc_10000e20, label %dec_label_pc_10000d10

dec_label_pc_10000e20:                            ; preds = %dec_label_pc_10000e04
  %v1_10000e20 = load i32, i32* %r30.global-to-local, align 4
  %v2_10000e20 = add i32 %v1_10000e20, 16
  %v3_10000e20 = inttoptr i32 %v2_10000e20 to i32*
  store i32 %v1_10000e18, i32* %v3_10000e20, align 4
  br label %dec_label_pc_10000d18

dec_label_pc_10000e28:                            ; preds = %dec_label_pc_10000c98
  %v0_10000e28 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10000e28, i32* %r3.global-to-local, align 4
  store i32 268439088, i32* @lr, align 4
  %v0_10000e2c = call i32 @function_10009108()
  store i32 %v0_10000e2c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000e30

dec_label_pc_10000e30:                            ; preds = %dec_label_pc_10000b04, %dec_label_pc_10000e28
  store i32 %v0_10000b1c, i32* %r0.global-to-local, align 4
  %v1_10000e44 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10000b0c)
  store i32 %v0_10000b50, i32* %r28.global-to-local, align 4
  store i32 %v0_10000b58, i32* %r29.global-to-local, align 4
  store i32 %v0_10000b60, i32* %r30.global-to-local, align 4
  store i32 %v0_10000b64, i32* %r31.global-to-local, align 4
  %v0_10000e8c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10000e8c

dec_label_pc_10000e90:                            ; preds = %dec_label_pc_10000cbc
  %v3_10000e90 = icmp eq i32 %v1_10000cd4, 0
  store i1 %v3_10000e90, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_10000e94

dec_label_pc_10000e94:                            ; preds = %dec_label_pc_10000d18, %dec_label_pc_10000e90
  store i32 %v5_10000c74, i32* %r0.global-to-local, align 4
  %v0_10000e98 = load i32, i32* %r21.global-to-local, align 4
  %v3_10000e98 = icmp eq i32 %v0_10000e98, 0
  store i1 %v3_10000e98, i1* %cr2_eq.global-to-local, align 1
  %v2_10000e9c = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_10000e9c, i32* %r14.global-to-local, align 4
  %v0_10000ea0 = load i32, i32* %r15.global-to-local, align 4
  %v1_10000ea0 = add i32 %v0_10000ea0, 8
  store i32 %v1_10000ea0, i32* %r21.global-to-local, align 4
  %v3_10000ea4 = icmp eq i32 %v5_10000c74, -1
  store i1 %v3_10000ea4, i1* %cr7_eq.global-to-local, align 1
  %v1_10000ea8 = add i32 %v0_10000ea0, 66
  store i32 %v1_10000ea8, i32* %r22.global-to-local, align 4
  %v0_10000eac = call i32 @__asm_mfcr()
  store i32 %v0_10000eac, i32* %r3.global-to-local, align 4
  %v1_10000eb0 = mul i32 %v0_10000eac, 268435456
  store i32 %v1_10000eb0, i32* %r20.global-to-local, align 4
  %v2_10000f44 = ptrtoint i32* %stack_var_-100 to i32
  %v2_10000f68 = ptrtoint i32* %stack_var_-92 to i32
  %v2_10000f78 = ptrtoint i32* %stack_var_-90 to i32
  %v0_10000eb4.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10000eb4.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10000eb4.outer

dec_label_pc_10000eb4.outer:                      ; preds = %dec_label_pc_10001018, %dec_label_pc_10000e94
  %v1_10000eb4.ph = phi i1 [ %v1_10000eb4.pre, %dec_label_pc_10000e94 ], [ %v1_10001018, %dec_label_pc_10001018 ]
  %v0_10000eb4.ph = phi i1 [ %v0_10000eb4.pre, %dec_label_pc_10000e94 ], [ %v0_10001018, %dec_label_pc_10001018 ]
  %v2_10000eb4 = or i1 %v1_10000eb4.ph, %v0_10000eb4.ph
  br label %dec_label_pc_10000eb4

dec_label_pc_10000eb4:                            ; preds = %dec_label_pc_10000eb4.outer, %dec_label_pc_10000eb4
  br i1 %v2_10000eb4, label %dec_label_pc_10000eb4, label %dec_label_pc_10000eb8

dec_label_pc_10000eb8:                            ; preds = %dec_label_pc_10000eb4, %dec_label_pc_10001018
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10000ec8

dec_label_pc_10000ec8:                            ; preds = %dec_label_pc_10000f88, %dec_label_pc_10000eb8
  %v0_10000ec8 = phi i32 [ %v1_10001008, %dec_label_pc_10000f88 ], [ 0, %dec_label_pc_10000eb8 ]
  %v1_10000ec8 = mul i32 %v0_10000ec8, 24
  store i32 %v1_10000ec8, i32* %r0.global-to-local, align 4
  %v1_10000ecc = mul i32 %v0_10000ec8, 4
  store i32 %v1_10000ecc, i32* %r11.global-to-local, align 4
  %v1_10000ed0 = load i32, i32* %r19.global-to-local, align 4
  %v2_10000ed0 = add i32 %v1_10000ed0, %v1_10000ecc
  %v3_10000ed0 = inttoptr i32 %v2_10000ed0 to i32*
  %v4_10000ed0 = load i32, i32* %v3_10000ed0, align 4
  store i32 %v4_10000ed0, i32* %r28.global-to-local, align 4
  %v1_10000ed4 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000ed4 = add i32 %v1_10000ed4, %v1_10000ec8
  %v1_10000ed8 = add i32 %v2_10000ed4, 20
  %v2_10000ed8 = inttoptr i32 %v1_10000ed8 to i8*
  %v3_10000ed8 = load i8, i8* %v2_10000ed8, align 1
  %v4_10000ed8 = zext i8 %v3_10000ed8 to i32
  store i32 %v4_10000ed8, i32* %r9.global-to-local, align 4
  %v1_10000edc = add i32 %v4_10000ed0, 24
  store i32 %v1_10000edc, i32* @r30, align 4
  %v1_10000ee0 = add i32 %v4_10000ed0, 38
  store i32 %v1_10000ee0, i32* @r31, align 4
  %v1_10000ee4 = add i32 %v4_10000ed0, 58
  store i32 %v1_10000ee4, i32* %r27.global-to-local, align 4
  %v3_10000ee8 = icmp eq i8 %v3_10000ed8, 31
  store i1 %v3_10000ee8, i1* %cr7_eq.global-to-local, align 1
  %tmp39 = icmp ult i8 %v3_10000ed8, 32
  br i1 %tmp39, label %dec_label_pc_10001020, label %dec_label_pc_10000ef0

dec_label_pc_10000ef0:                            ; preds = %dec_label_pc_10000ec8
  %v0_10000ef0 = load i32, i32* %r20.global-to-local, align 4
  %v1_10000ef0 = mul i32 %v0_10000ef0, 16
  %v2_10000ef0 = udiv i32 %v0_10000ef0, 268435456
  %v3_10000ef0 = or i32 %v2_10000ef0, %v1_10000ef0
  store i32 %v3_10000ef0, i32* %r20.global-to-local, align 4
  %v1_10000ef4 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10000ef0)
  %v1_10000ef8 = mul nuw i32 %v2_10000ef0, 268435456
  %v2_10000ef8 = urem i32 %v0_10000ef0, 268435456
  %v3_10000ef8 = or i32 %v1_10000ef8, %v2_10000ef8
  store i32 %v3_10000ef8, i32* %r20.global-to-local, align 4
  %v0_10000efc = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10000efc, label %dec_label_pc_10001054, label %dec_label_pc_10000f00

dec_label_pc_10000f00:                            ; preds = %dec_label_pc_10001020, %dec_label_pc_10000ef0
  store i32 65535, i32* @r29, align 4
  %v0_10000f08 = load i32, i32* %r24.global-to-local, align 4
  %v4_10000f08 = icmp eq i32 %v0_10000f08, 65535
  store i1 %v4_10000f08, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10000f08, label %dec_label_pc_1000106c, label %dec_label_pc_10000f10

dec_label_pc_10000f10:                            ; preds = %dec_label_pc_10001054, %dec_label_pc_10000f00
  %v1_10000f10 = phi i32 [ %v1_10001064, %dec_label_pc_10001054 ], [ 65535, %dec_label_pc_10000f00 ]
  %v0_10000f10 = load i32, i32* %r16.global-to-local, align 4
  %v4_10000f10 = icmp eq i32 %v0_10000f10, %v1_10000f10
  store i1 %v4_10000f10, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10000f10, label %dec_label_pc_1000108c, label %dec_label_pc_10000f18

dec_label_pc_10000f18:                            ; preds = %dec_label_pc_1000106c.dec_label_pc_10000f18_crit_edge, %dec_label_pc_10000f10
  %v1_10000f18 = phi i32 [ %v1_10000f18.pre, %dec_label_pc_1000106c.dec_label_pc_10000f18_crit_edge ], [ %v1_10000f10, %dec_label_pc_10000f10 ]
  %v0_10000f18 = load i32, i32* %r17.global-to-local, align 4
  %v4_10000f18 = icmp eq i32 %v0_10000f18, %v1_10000f18
  store i1 %v4_10000f18, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10000f18, label %dec_label_pc_1000109c, label %dec_label_pc_10000f20

dec_label_pc_10000f20:                            ; preds = %dec_label_pc_1000108c, %dec_label_pc_10000f18
  %v0_10000f20 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10000f20, label %dec_label_pc_100010a8, label %dec_label_pc_10000f24

dec_label_pc_10000f24:                            ; preds = %dec_label_pc_1000109c, %dec_label_pc_10000f20
  %v0_10000f24 = load i32, i32* %r28.global-to-local, align 4
  %v1_10000f24 = add i32 %v0_10000f24, 16
  %v2_10000f24 = inttoptr i32 %v1_10000f24 to i32*
  %v3_10000f24 = load i32, i32* %v2_10000f24, align 4
  store i32 %v3_10000f24, i32* %r0.global-to-local, align 4
  %v1_10000f28 = load i32, i32* @r31, align 4
  %v2_10000f28 = add i32 %v1_10000f28, 16
  %v3_10000f28 = inttoptr i32 %v2_10000f28 to i32*
  store i32 %v3_10000f24, i32* %v3_10000f28, align 4
  br label %dec_label_pc_10000f2c

dec_label_pc_10000f2c:                            ; preds = %dec_label_pc_100010a8, %dec_label_pc_10000f24
  %v0_10000f2c = call i32 @function_10005f74()
  store i32 %v0_10000f2c, i32* %r3.global-to-local, align 4
  store i32 %v0_10000f2c, i32* %stack_var_-100, align 4
  %v0_10000f34 = call i32 @function_10005f74()
  store i32 %v0_10000f34, i32* %r3.global-to-local, align 4
  store i32 %v0_10000f34, i32* %stack_var_-96, align 4
  %v0_10000f3c = call i32 @function_10005f74()
  store i32 %v0_10000f3c, i32* %stack_var_-92, align 4
  %v0_10000f48 = load i32, i32* @r30, align 4
  store i32 %v0_10000f48, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000f54.15 to i32), i32* @lr, align 4
  %v3_10000f50 = call i32 @function_100089cc(i32 %v0_10000f48, i32 %v2_10000f44, i32 4)
  %v0_10000f54 = load i32, i32* @r30, align 4
  %v1_10000f54 = add i32 %v0_10000f54, 6
  store i32 %v1_10000f54, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000f64.16 to i32), i32* @lr, align 4
  %v3_10000f60 = call i32 @function_100089cc(i32 %v1_10000f54, i32 %v2_10000e9c, i32 4)
  %v0_10000f64 = load i32, i32* @r30, align 4
  %v1_10000f64 = add i32 %v0_10000f64, 4
  store i32 %v1_10000f64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000f74.17 to i32), i32* @lr, align 4
  %v3_10000f70 = call i32 @function_100089cc(i32 %v1_10000f64, i32 %v2_10000f68, i32 2)
  %v0_10000f74 = load i32, i32* @r30, align 4
  %v1_10000f74 = add i32 %v0_10000f74, 10
  store i32 %v1_10000f74, i32* %r3.global-to-local, align 4
  store i32 268439428, i32* @lr, align 4
  %v3_10000f80 = call i32 @function_100089cc(i32 %v1_10000f74, i32 %v2_10000f78, i32 2)
  store i32 %v3_10000f80, i32* %r3.global-to-local, align 4
  %v0_10000f84 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10000f84, label %dec_label_pc_10000f88, label %dec_label_pc_100010b4

dec_label_pc_10000f88:                            ; preds = %dec_label_pc_10000f2c, %dec_label_pc_100010b4
  %v0_10000f88 = load i32, i32* %r26.global-to-local, align 4
  %v1_10000f88 = trunc i32 %v0_10000f88 to i16
  %v2_10000f88 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000f88 = add i32 %v2_10000f88, 10
  %v4_10000f88 = inttoptr i32 %v3_10000f88 to i16*
  store i16 %v1_10000f88, i16* %v4_10000f88, align 2
  %v0_10000f90 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10000f90, i32* @r3, align 4
  %v2_10000f94 = call i32 @function_100043cc(i32 %v0_10000f90, i32 20)
  %v3_10000f94 = trunc i32 %v2_10000f94 to i16
  %v4_10000f9c = add i32 %v0_10000f90, 10
  %v5_10000f9c = inttoptr i32 %v4_10000f9c to i16*
  store i16 %v3_10000f94, i16* %v5_10000f9c, align 2
  %v0_10000fa0 = load i32, i32* @r31, align 4
  store i32 %v0_10000fa0, i32* @r3, align 4
  %v0_10000fa4 = load i32, i32* %r26.global-to-local, align 4
  %v1_10000fa4 = trunc i32 %v0_10000fa4 to i16
  %v3_10000fa4 = add i32 %v0_10000fa0, 10
  %v4_10000fa4 = inttoptr i32 %v3_10000fa4 to i16*
  store i16 %v1_10000fa4, i16* %v4_10000fa4, align 2
  %v2_10000fa8 = call i32 @function_100043cc(i32 %v0_10000fa0, i32 20)
  %v3_10000fa8 = trunc i32 %v2_10000fa8 to i16
  %v0_10000fac = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10000fac, i32* @r4, align 4
  %v3_10000fb0 = load i32, i32* @r31, align 4
  %v4_10000fb0 = add i32 %v3_10000fb0, 10
  %v5_10000fb0 = inttoptr i32 %v4_10000fb0 to i16*
  store i16 %v3_10000fa8, i16* %v5_10000fb0, align 2
  %v0_10000fb4 = load i32, i32* %r21.global-to-local, align 4
  %v0_10000fb8 = load i32, i32* %r26.global-to-local, align 4
  %v1_10000fb8 = trunc i32 %v0_10000fb8 to i16
  %v2_10000fb8 = load i32, i32* %r27.global-to-local, align 4
  %v3_10000fb8 = add i32 %v2_10000fb8, 6
  %v4_10000fb8 = inttoptr i32 %v3_10000fb8 to i16*
  store i16 %v1_10000fb8, i16* %v4_10000fb8, align 2
  %v0_10000fbc = load i32, i32* @r31, align 4
  store i32 %v0_10000fbc, i32* %r3.global-to-local, align 4
  %v0_10000fc0 = load i32, i32* %r27.global-to-local, align 4
  %v1_10000fc0 = add i32 %v0_10000fc0, 4
  %v2_10000fc0 = inttoptr i32 %v1_10000fc0 to i16*
  %v3_10000fc0 = load i16, i16* %v2_10000fc0, align 2
  %v4_10000fc0 = zext i16 %v3_10000fc0 to i32
  %v4_10000fc4 = call i32 @function_10004430(i32 %v0_10000fbc, i32 %v0_10000fac, i32 %v4_10000fc0, i32 %v0_10000fb4)
  %v5_10000fc4 = trunc i32 %v4_10000fc4 to i16
  store i32 %v4_10000fc4, i32* %r3.global-to-local, align 4
  %v3_10000fc8 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10000fc8, i32* %r0.global-to-local, align 4
  %v0_10000fcc = load i32, i32* %r28.global-to-local, align 4
  %v1_10000fcc = add i32 %v0_10000fcc, 16
  %v2_10000fcc = inttoptr i32 %v1_10000fcc to i32*
  %v3_10000fcc = load i32, i32* %v2_10000fcc, align 4
  store i32 %v3_10000fcc, i32* %r11.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10000fd4 = mul i32 %v3_10000fc8, 24
  store i32 %v1_10000fd4, i32* %r0.global-to-local, align 4
  %v3_10000fd8 = load i32, i32* %r27.global-to-local, align 4
  %v4_10000fd8 = add i32 %v3_10000fd8, 6
  %v5_10000fd8 = inttoptr i32 %v4_10000fd8 to i16*
  store i16 %v5_10000fc4, i16* %v5_10000fd8, align 2
  %v0_10000fdc = load i32, i32* %r28.global-to-local, align 4
  %v0_10000fe0 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10000fe0, i32* %r3.global-to-local, align 4
  %v0_10000fe4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000fe4 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000fe4 = add i32 %v1_10000fe4, %v0_10000fe4
  %v0_10000fe8 = load i32, i32* %r9.global-to-local, align 4
  %v3_10000fe8 = trunc i32 %v0_10000fe8 to i16
  %v5_10000fe8 = inttoptr i32 %v2_10000fe4 to i16*
  store i16 %v3_10000fe8, i16* %v5_10000fe8, align 2
  %v0_10000fec = load i32, i32* %r11.global-to-local, align 4
  %v2_10000fec = add i32 %v2_10000fe4, 4
  %v3_10000fec = inttoptr i32 %v2_10000fec to i32*
  store i32 %v0_10000fec, i32* %v3_10000fec, align 4
  %v0_10000ff0 = load i32, i32* %r22.global-to-local, align 4
  %v0_10000ff4 = load i32, i32* %r26.global-to-local, align 4
  %v1_10000ff4 = trunc i32 %v0_10000ff4 to i16
  %v3_10000ff4 = add i32 %v2_10000fe4, 2
  %v4_10000ff4 = inttoptr i32 %v3_10000ff4 to i16*
  store i16 %v1_10000ff4, i16* %v4_10000ff4, align 2
  store i32 268439556, i32* @lr, align 4
  %v6_10001000 = call i32 @function_10009ddc(i32 %v0_10000fe0, i32 %v0_10000fdc, i32 %v0_10000ff0, i32 16384, i32 %v2_10000fe4, i32 16)
  store i32 %v6_10001000, i32* %r3.global-to-local, align 4
  %v3_10001004 = load i32, i32* %stack_var_-104, align 4
  %v1_10001008 = add i32 %v3_10001004, 1
  store i32 %v1_10001008, i32* %r9.global-to-local, align 4
  %v1_1000100c = load i32, i32* %r18.global-to-local, align 4
  %v2_1000100c = icmp slt i32 %v1_10001008, %v1_1000100c
  %v4_1000100c = icmp eq i32 %v1_10001008, %v1_1000100c
  store i1 %v4_1000100c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10001008, i32* %stack_var_-104, align 4
  br i1 %v2_1000100c, label %dec_label_pc_10000ec8, label %dec_label_pc_10001018

dec_label_pc_10001018:                            ; preds = %dec_label_pc_10000f88
  %v0_10001018 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001018 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10001018 = or i1 %v0_10001018, %v1_10001018
  br i1 %v2_10001018, label %dec_label_pc_10000eb4.outer, label %dec_label_pc_10000eb8

dec_label_pc_10001020:                            ; preds = %dec_label_pc_10000ec8
  %v1_10001020 = add i32 %v2_10000ed4, 16
  %v2_10001020 = inttoptr i32 %v1_10001020 to i32*
  %v3_10001020 = load i32, i32* %v2_10001020, align 4
  store i32 %v3_10001020, i32* %r29.global-to-local, align 4
  %v0_10001024 = call i32 @function_10005f74()
  store i32 %v0_10001024, i32* %r3.global-to-local, align 4
  %v3_10001028 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001028, i32* %r9.global-to-local, align 4
  %v0_1000102c = load i32, i32* %r20.global-to-local, align 4
  %v1_1000102c = mul i32 %v0_1000102c, 16
  %v2_1000102c = udiv i32 %v0_1000102c, 268435456
  %v3_1000102c = or i32 %v2_1000102c, %v1_1000102c
  store i32 %v3_1000102c, i32* %r20.global-to-local, align 4
  %v1_10001030 = call %0 @__asm_mtcrf(i32 1, i32 %v3_1000102c)
  %v1_10001034 = mul nuw i32 %v2_1000102c, 268435456
  %v2_10001034 = urem i32 %v0_1000102c, 268435456
  %v3_10001034 = or i32 %v1_10001034, %v2_10001034
  store i32 %v3_10001034, i32* %r20.global-to-local, align 4
  %v0_10001038 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001038 = mul i32 %v0_10001038, 24
  %v1_1000103c = load i32, i32* %r25.global-to-local, align 4
  %v2_1000103c = add i32 %v1_1000103c, %v1_10001038
  store i32 %v2_1000103c, i32* %r9.global-to-local, align 4
  %v1_10001040 = add i32 %v2_1000103c, 20
  %v2_10001040 = inttoptr i32 %v1_10001040 to i8*
  %v3_10001040 = load i8, i8* %v2_10001040, align 1
  %v4_10001040 = zext i8 %v3_10001040 to i32
  store i32 %v4_10001040, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10001040, 64
  %v2_10001044 = zext i8 %tmp to i32
  %v3_10001044 = lshr i32 %v0_10001024, %v2_10001044
  store i32 %v3_10001044, i32* %r3.global-to-local, align 4
  %v0_10001048 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001048 = add i32 %v3_10001044, %v0_10001048
  store i32 %v2_10001048, i32* %r29.global-to-local, align 4
  %v1_1000104c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000104c = add i32 %v1_1000104c, 16
  %v3_1000104c = inttoptr i32 %v2_1000104c to i32*
  store i32 %v2_10001048, i32* %v3_1000104c, align 4
  %v0_10001050 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10001050, label %dec_label_pc_10001054, label %dec_label_pc_10000f00

dec_label_pc_10001054:                            ; preds = %dec_label_pc_10001020, %dec_label_pc_10000ef0
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10001058 = call i32 @function_10005f74()
  store i32 %v0_10001058, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_10001060 = load i32, i32* %r28.global-to-local, align 4
  %v2_10001060 = add i32 %v1_10001060, 12
  %v3_10001060 = inttoptr i32 %v2_10001060 to i32*
  store i32 %v0_10001058, i32* %v3_10001060, align 4
  %v0_10001064 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001064 = load i32, i32* @r29, align 4
  %v4_10001064 = icmp eq i32 %v0_10001064, %v1_10001064
  store i1 %v4_10001064, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001064, label %dec_label_pc_1000106c, label %dec_label_pc_10000f10

dec_label_pc_1000106c:                            ; preds = %dec_label_pc_10001054, %dec_label_pc_10000f00
  %v0_1000106c = call i32 @function_10005f74()
  %v0_10001070 = load i32, i32* %r16.global-to-local, align 4
  %v1_10001070 = load i32, i32* @r29, align 4
  %v4_10001070 = icmp eq i32 %v0_10001070, %v1_10001070
  store i1 %v4_10001070, i1* %cr7_eq.global-to-local, align 1
  %v1_10001074 = urem i32 %v0_1000106c, 65536
  store i32 %v1_10001074, i32* %r3.global-to-local, align 4
  %v1_10001078 = add nsw i32 %v1_10001074, -1000
  store i32 %v1_10001078, i32* %r0.global-to-local, align 4
  %v1_1000107c = trunc i32 %v0_1000106c to i16
  %v2_1000107c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000107c = add i32 %v2_1000107c, 4
  %v4_1000107c = inttoptr i32 %v3_1000107c to i16*
  store i16 %v1_1000107c, i16* %v4_1000107c, align 2
  %v0_10001080 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001080 = sub i32 -1, %v0_10001080
  store i32 %v1_10001080, i32* %r0.global-to-local, align 4
  %v1_10001084 = trunc i32 %v1_10001080 to i16
  %v2_10001084 = load i32, i32* @r31, align 4
  %v3_10001084 = add i32 %v2_10001084, 4
  %v4_10001084 = inttoptr i32 %v3_10001084 to i16*
  store i16 %v1_10001084, i16* %v4_10001084, align 2
  br i1 %v4_10001070, label %dec_label_pc_1000108c, label %dec_label_pc_1000106c.dec_label_pc_10000f18_crit_edge

dec_label_pc_1000106c.dec_label_pc_10000f18_crit_edge: ; preds = %dec_label_pc_1000106c
  %v1_10000f18.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10000f18

dec_label_pc_1000108c:                            ; preds = %dec_label_pc_1000106c, %dec_label_pc_10000f10
  %v0_1000108c = call i32 @function_10005f74()
  %v1_1000108c = trunc i32 %v0_1000108c to i16
  store i32 %v0_1000108c, i32* %r3.global-to-local, align 4
  %v0_10001090 = load i32, i32* %r17.global-to-local, align 4
  %v1_10001090 = load i32, i32* @r29, align 4
  %v4_10001090 = icmp eq i32 %v0_10001090, %v1_10001090
  store i1 %v4_10001090, i1* %cr7_eq.global-to-local, align 1
  %v3_10001094 = load i32, i32* %r28.global-to-local, align 4
  %v4_10001094 = add i32 %v3_10001094, 58
  %v5_10001094 = inttoptr i32 %v4_10001094 to i16*
  store i16 %v1_1000108c, i16* %v5_10001094, align 2
  br i1 %v4_10001090, label %dec_label_pc_1000109c, label %dec_label_pc_10000f20

dec_label_pc_1000109c:                            ; preds = %dec_label_pc_1000108c, %dec_label_pc_10000f18
  %v0_1000109c = call i32 @function_10005f74()
  %v1_1000109c = trunc i32 %v0_1000109c to i16
  store i32 %v0_1000109c, i32* %r3.global-to-local, align 4
  %v3_100010a0 = load i32, i32* %r27.global-to-local, align 4
  %v4_100010a0 = add i32 %v3_100010a0, 2
  %v5_100010a0 = inttoptr i32 %v4_100010a0 to i16*
  store i16 %v1_1000109c, i16* %v5_100010a0, align 2
  %v0_100010a4 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100010a4, label %dec_label_pc_100010a8, label %dec_label_pc_10000f24

dec_label_pc_100010a8:                            ; preds = %dec_label_pc_1000109c, %dec_label_pc_10000f20
  %v0_100010a8 = call i32 @function_10005f74()
  store i32 %v0_100010a8, i32* %r3.global-to-local, align 4
  %v1_100010ac = load i32, i32* @r31, align 4
  %v2_100010ac = add i32 %v1_100010ac, 16
  %v3_100010ac = inttoptr i32 %v2_100010ac to i32*
  store i32 %v0_100010a8, i32* %v3_100010ac, align 4
  br label %dec_label_pc_10000f2c

dec_label_pc_100010b4:                            ; preds = %dec_label_pc_10000f2c
  %v0_100010b4 = load i32, i32* %r27.global-to-local, align 4
  %v1_100010b4 = add i32 %v0_100010b4, 8
  store i32 %v1_100010b4, i32* @r3, align 4
  %v0_100010b8 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_100010b8, i32* @r4, align 4
  %v0_100010bc = call i32 @function_10006148()
  store i32 %v0_100010bc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000f88

; uselistorder directives
  uselistorder i32 %v0_1000109c, { 1, 0 }
  uselistorder i32 %v0_1000108c, { 1, 0 }
  uselistorder i32 %v1_10001080, { 1, 0 }
  uselistorder i32 %v1_10001074, { 1, 0 }
  uselistorder i32 %v0_1000106c, { 1, 0 }
  uselistorder i32 %v1_10001064, { 1, 0 }
  uselistorder i32 %v0_1000102c, { 2, 1, 0 }
  uselistorder i1 %v1_10001018, { 1, 0 }
  uselistorder i1 %v0_10001018, { 1, 0 }
  uselistorder i32 %v1_10001008, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_10000fe4, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10000fc4, { 1, 0 }
  uselistorder i32 %v0_10000ef0, { 2, 1, 0 }
  uselistorder i32 %v4_10000ed0, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10000ecc, { 1, 0 }
  uselistorder i32 %v1_10000e18, { 1, 0 }
  uselistorder i32 %v1_10000d54, { 1, 0 }
  uselistorder i32 %v1_10000d48, { 1, 0 }
  uselistorder i32 %v1_10000ce4, { 1, 0 }
  uselistorder i32 %v0_10000ce4, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10000cd4, { 1, 2, 0 }
  uselistorder i32 %v0_10000cc8, { 1, 0 }
  uselistorder i32 %v5_10000c74, { 0, 3, 1, 2 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 8, 9, 21, 22 }
  uselistorder i32* %r31.global-to-local, { 0, 9, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 1, 2, 3, 4, 16 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 2, 11, 12 }
  uselistorder i32* %r3.global-to-local, { 6, 7, 8, 9, 10, 11, 12, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 2, 24, 25, 26, 27, 30, 28, 29, 5, 4, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1 }
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3, 4, 8, 5, 6, 7 }
  uselistorder i32* %r27.global-to-local, { 5, 0, 1, 2, 3, 4, 6, 7, 8, 9, 10 }
  uselistorder i32* %r20.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 12, 26, 27, 28, 29, 30 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 7, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32 66, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000f88, { 1, 0 }
  uselistorder label %dec_label_pc_10000eb8, { 1, 0 }
  uselistorder label %dec_label_pc_10000eb4, { 1, 0 }
  uselistorder label %dec_label_pc_10000e94, { 1, 0 }
  uselistorder label %dec_label_pc_10000e30, { 1, 0 }
  uselistorder label %dec_label_pc_10000e04, { 1, 0 }
  uselistorder label %dec_label_pc_10000d9c, { 1, 0 }
}

define i32 @function_100010c4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100010c4:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_100010c8 = load i32, i32* @lr, align 4
  store i32 %v0_100010c8, i32* %r0.global-to-local, align 4
  %v0_100010cc = call i32 @__asm_mfcr()
  store i32 %v0_100010cc, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r26.global-to-local, align 4
  %v0_100010dc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_100010cc, i32* %r19.global-to-local, align 4
  %v0_10001110 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10001118 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10001120 = load i32, i32* @r30, align 4
  %v0_10001124 = load i32, i32* @r31, align 4
  store i32 268439864, i32* @lr, align 4
  %v2_10001134 = call i32 @function_1000a1b4(i32 4, i32 4)
  store i32 %v2_10001134, i32* %r20.global-to-local, align 4
  %v0_1000113c = load i32, i32* @r28, align 4
  %v0_10001148 = load i32, i32* @r29, align 4
  store i32 %v0_10001148, i32* %r3.global-to-local, align 4
  store i32 268439888, i32* @lr, align 4
  %v4_1000114c = inttoptr i32 %v0_1000113c to i32*
  %v5_1000114c = call i32 @function_100006a8(i32 %v0_10001148, i32* %v4_1000114c, i32 2, i32 0)
  %v0_1000115c = load i32, i32* @r28, align 4
  %v1_10001160 = urem i32 %v5_1000114c, 256
  store i32 %v1_10001160, i32* %r14.global-to-local, align 4
  %v0_10001164 = load i32, i32* @r29, align 4
  store i32 %v0_10001164, i32* %r3.global-to-local, align 4
  store i32 268439916, i32* @lr, align 4
  %v4_10001168 = inttoptr i32 %v0_1000115c to i32*
  %v5_10001168 = call i32 @function_100006a8(i32 %v0_10001164, i32* %v4_10001168, i32 3, i32 65535)
  %v0_1000116c = load i32, i32* @r28, align 4
  store i32 %v5_10001168, i32* %r25.global-to-local, align 4
  %v0_1000117c = load i32, i32* @r29, align 4
  store i32 %v0_1000117c, i32* %r3.global-to-local, align 4
  store i32 268439940, i32* @lr, align 4
  %v4_10001180 = inttoptr i32 %v0_1000116c to i32*
  %v5_10001180 = call i32 @function_100006a8(i32 %v0_1000117c, i32* %v4_10001180, i32 4, i32 64)
  %v0_10001184 = load i32, i32* @r28, align 4
  %v1_10001190 = urem i32 %v5_10001180, 256
  store i32 %v1_10001190, i32* %r21.global-to-local, align 4
  %v0_10001194 = load i32, i32* @r29, align 4
  store i32 %v0_10001194, i32* %r3.global-to-local, align 4
  store i32 268439964, i32* @lr, align 4
  %v4_10001198 = inttoptr i32 %v0_10001184 to i32*
  %v5_10001198 = call i32 @function_100006a8(i32 %v0_10001194, i32* %v4_10001198, i32 5, i32 1)
  %v0_100011a8 = load i32, i32* @r28, align 4
  %v1_100011ac = urem i32 %v5_10001198, 256
  store i32 %v1_100011ac, i32* @r31, align 4
  %v0_100011b0 = load i32, i32* @r29, align 4
  store i32 %v0_100011b0, i32* %r3.global-to-local, align 4
  store i32 268439992, i32* @lr, align 4
  %v4_100011b4 = inttoptr i32 %v0_100011a8 to i32*
  %v5_100011b4 = call i32 @function_100006a8(i32 %v0_100011b0, i32* %v4_100011b4, i32 6, i32 65535)
  %v0_100011bc = load i32, i32* @r28, align 4
  store i32 %v5_100011b4, i32* %r24.global-to-local, align 4
  %v0_100011cc = load i32, i32* @r29, align 4
  store i32 %v0_100011cc, i32* %r3.global-to-local, align 4
  store i32 268440020, i32* @lr, align 4
  %v4_100011d0 = inttoptr i32 %v0_100011bc to i32*
  %v5_100011d0 = call i32 @function_100006a8(i32 %v0_100011cc, i32* %v4_100011d0, i32 7, i32 65535)
  %v0_100011d4 = load i32, i32* @r28, align 4
  store i32 %v5_100011d0, i32* %r27.global-to-local, align 4
  %v0_100011e4 = load i32, i32* @r29, align 4
  store i32 %v0_100011e4, i32* %r3.global-to-local, align 4
  store i32 268440044, i32* @lr, align 4
  %v4_100011e8 = inttoptr i32 %v0_100011d4 to i32*
  %v5_100011e8 = call i32 @function_100006a8(i32 %v0_100011e4, i32* %v4_100011e8, i32 0, i32 512)
  %v0_100011ec = load i32, i32* @r28, align 4
  store i32 %v5_100011e8, i32* %r16.global-to-local, align 4
  %v0_100011fc = load i32, i32* @r29, align 4
  store i32 %v0_100011fc, i32* %r3.global-to-local, align 4
  store i32 268440068, i32* @lr, align 4
  %v4_10001200 = inttoptr i32 %v0_100011ec to i32*
  %v5_10001200 = call i32 @function_100006a8(i32 %v0_100011fc, i32* %v4_10001200, i32 1, i32 1)
  %v0_10001204 = load i32, i32* @r28, align 4
  %v1_10001210 = urem i32 %v5_10001200, 256
  store i32 %v1_10001210, i32* %r15.global-to-local, align 4
  %v0_10001214 = load i32, i32* @r29, align 4
  store i32 %v0_10001214, i32* %r3.global-to-local, align 4
  store i32 268440092, i32* @lr, align 4
  %v4_10001218 = inttoptr i32 %v0_10001204 to i32*
  %v5_10001218 = call i32 @function_100006a8(i32 %v0_10001214, i32* %v4_10001218, i32 19, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10001220 = load i32, i32* @global_var_1001c298.14, align 4
  %v0_10001224 = load i32, i32* @r28, align 4
  store i32 %v5_10001218, i32* %r30.global-to-local, align 4
  %v0_10001230 = load i32, i32* @r29, align 4
  store i32 %v0_10001230, i32* %r3.global-to-local, align 4
  store i32 268440120, i32* @lr, align 4
  %v4_10001234 = inttoptr i32 %v0_10001224 to i32*
  %v5_10001234 = call i32 @function_100006a8(i32 %v0_10001230, i32* %v4_10001234, i32 25, i32 %v3_10001220)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268440140, i32* @lr, align 4
  %v3_10001248 = call i32 @function_10009e58(i32 2, i32 3, i32 6)
  store i32 %v3_10001248, i32* %r3.global-to-local, align 4
  %v3_1000124c = icmp eq i32 %v3_10001248, -1
  store i1 %v3_1000124c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10001248, i32* %r23.global-to-local, align 4
  br i1 %v3_1000124c, label %dec_label_pc_100013e4, label %dec_label_pc_10001258

dec_label_pc_10001258:                            ; preds = %dec_label_pc_100010c4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10001264 = ptrtoint i32* %stack_var_-104 to i32
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268440180, i32* @lr, align 4
  %v4_10001270 = call i32 @function_10009e1c(i32 0, i32 3, i32 %v2_10001264, i32 4)
  store i32 %v4_10001270, i32* %r3.global-to-local, align 4
  %v3_10001274 = icmp eq i32 %v4_10001270, -1
  store i1 %v3_10001274, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001274, label %dec_label_pc_100013dc, label %dec_label_pc_1000127c

dec_label_pc_1000127c:                            ; preds = %dec_label_pc_10001258
  %v0_1000127c = load i32, i32* %r19.global-to-local, align 4
  %v1_1000127c = icmp slt i32 %v0_1000127c, 0
  %v3_1000127c = icmp eq i32 %v0_1000127c, 0
  store i1 %v1_1000127c, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_1000127c, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %v0_10001288 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001288 = urem i32 %v0_10001288, 65536
  store i32 %v1_10001288, i32* %r25.global-to-local, align 4
  %v0_1000128c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000128c = urem i32 %v0_1000128c, 65536
  store i32 %v1_1000128c, i32* %r17.global-to-local, align 4
  %v0_10001290 = load i32, i32* %r27.global-to-local, align 4
  %v1_10001290 = urem i32 %v0_10001290, 65536
  store i32 %v1_10001290, i32* %r18.global-to-local, align 4
  %v0_10001294 = load i32, i32* %r30.global-to-local, align 4
  %v1_10001294 = urem i32 %v0_10001294, 256
  store i32 %v1_10001294, i32* %r3.global-to-local, align 4
  %tmp33 = icmp slt i32 %v0_1000127c, 1
  br i1 %tmp33, label %dec_label_pc_10001444, label %dec_label_pc_1000129c

dec_label_pc_1000129c:                            ; preds = %dec_label_pc_1000127c
  %v0_1000129c = load i32, i32* @r31, align 4
  %v3_1000129c = icmp eq i32 %v0_1000129c, 0
  store i1 %v3_1000129c, i1* %cr2_eq.global-to-local, align 1
  %v3_100012a0 = icmp eq i32 %v1_10001294, 0
  store i1 %v3_100012a0, i1* %cr3_eq.global-to-local, align 1
  %v0_100012a4 = load i32, i32* %r16.global-to-local, align 4
  %v1_100012a4 = urem i32 %v0_100012a4, 65536
  %v0_10001288.not = or i32 %v0_10001288, -65536
  %v1_100012a8 = xor i32 %v0_10001288.not, 65535
  store i32 %v1_100012a8, i32* %r11.global-to-local, align 4
  %v1_100012b0 = add nuw nsw i32 %v1_100012a4, 52
  store i32 %v1_100012b0, i32* %r0.global-to-local, align 4
  %v1_100012b4 = add nuw nsw i32 %v1_100012a4, 28
  store i32 %v1_100012b4, i32* %r9.global-to-local, align 4
  %fold = add i32 %v0_100012a4, 52
  %v1_100012b8 = urem i32 %fold, 65536
  store i32 %v1_100012b8, i32* %r22.global-to-local, align 4
  %fold8 = add i32 %v0_100012a4, 28
  %v1_100012bc = urem i32 %fold8, 65536
  store i32 %v1_100012bc, i32* %r24.global-to-local, align 4
  %v1_100012c0 = urem i32 %v1_100012a8, 65536
  store i32 %v1_100012c0, i32* %r27.global-to-local, align 4
  %fold9 = add i32 %v0_100012a4, 8
  %v1_100012c4 = urem i32 %fold9, 65536
  store i32 %v1_100012c4, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100012f8

dec_label_pc_100012d0:                            ; preds = %dec_label_pc_100013b8
  %v0_100012d0 = load i32, i32* %r31.global-to-local, align 4
  %v1_100012d0 = add i32 %v0_100012d0, 16
  %v2_100012d0 = inttoptr i32 %v1_100012d0 to i32*
  %v3_100012d0 = load i32, i32* %v2_100012d0, align 4
  store i32 %v3_100012d0, i32* %r0.global-to-local, align 4
  %v1_100012d4 = load i32, i32* %r30.global-to-local, align 4
  %v2_100012d4 = add i32 %v1_100012d4, 16
  %v3_100012d4 = inttoptr i32 %v2_100012d4 to i32*
  store i32 %v3_100012d0, i32* %v3_100012d4, align 4
  br label %dec_label_pc_100012d8

dec_label_pc_100012d8:                            ; preds = %dec_label_pc_100013d4, %dec_label_pc_100012d0
  %v3_100012d8 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100012d8, i32* %r9.global-to-local, align 4
  %v0_100012dc = load i32, i32* @r28, align 4
  %v1_100012dc = trunc i32 %v0_100012dc to i16
  %v2_100012dc = load i32, i32* %r29.global-to-local, align 4
  %v3_100012dc = add i32 %v2_100012dc, 4
  %v4_100012dc = inttoptr i32 %v3_100012dc to i16*
  store i16 %v1_100012dc, i16* %v4_100012dc, align 2
  %v0_100012e0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100012e0 = add i32 %v0_100012e0, 1
  store i32 %v1_100012e0, i32* %r31.global-to-local, align 4
  %v0_100012e4 = load i32, i32* %r17.global-to-local, align 4
  %v1_100012e4 = trunc i32 %v0_100012e4 to i16
  %v2_100012e4 = load i32, i32* %r29.global-to-local, align 4
  %v3_100012e4 = inttoptr i32 %v2_100012e4 to i16*
  store i16 %v1_100012e4, i16* %v3_100012e4, align 2
  %v0_100012e8 = load i32, i32* %r31.global-to-local, align 4
  %v1_100012e8 = load i32, i32* %r19.global-to-local, align 4
  %v2_100012e8 = icmp slt i32 %v0_100012e8, %v1_100012e8
  %v4_100012e8 = icmp eq i32 %v0_100012e8, %v1_100012e8
  store i1 %v4_100012e8, i1* %cr7_eq.global-to-local, align 1
  %v0_100012ec = load i32, i32* %r18.global-to-local, align 4
  %v1_100012ec = trunc i32 %v0_100012ec to i16
  %v2_100012ec = load i32, i32* %r29.global-to-local, align 4
  %v3_100012ec = add i32 %v2_100012ec, 2
  %v4_100012ec = inttoptr i32 %v3_100012ec to i16*
  store i16 %v1_100012ec, i16* %v4_100012ec, align 2
  %v0_100012f0 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_100012f0, i32* %stack_var_-104, align 4
  br i1 %v2_100012e8, label %dec_label_pc_100012f8, label %dec_label_pc_10001448

dec_label_pc_100012f8:                            ; preds = %dec_label_pc_100012d8, %dec_label_pc_1000129c
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268440324, i32* @lr, align 4
  %v2_10001300 = call i32 @function_1000a1b4(i32 1510, i32 4)
  store i32 %v2_10001300, i32* %r3.global-to-local, align 4
  %v3_10001304 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001304, i32* %r9.global-to-local, align 4
  %v0_10001308 = load i32, i32* @r31, align 4
  %v1_10001308 = mul i32 %v0_10001308, 4
  store i32 %v1_10001308, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r11.global-to-local, align 4
  %v1_10001310 = load i32, i32* %r20.global-to-local, align 4
  %v3_10001310 = add i32 %v1_10001310, %v1_10001308
  %v4_10001310 = inttoptr i32 %v3_10001310 to i32*
  store i32 %v2_10001300, i32* %v4_10001310, align 4
  %v0_10001314 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001314 = mul i32 %v0_10001314, 4
  store i32 %v1_10001314, i32* %r9.global-to-local, align 4
  %v1_10001318 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001318 = add i32 %v1_10001318, %v1_10001314
  %v3_10001318 = inttoptr i32 %v2_10001318 to i32*
  %v4_10001318 = load i32, i32* %v3_10001318, align 4
  store i32 %v4_10001318, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10001320 = inttoptr i32 %v4_10001318 to i32*
  %v2_10001320 = load i32, i32* %v1_10001320, align 4
  store i32 %v2_10001320, i32* %r0.global-to-local, align 4
  %v1_10001324 = add i32 %v4_10001318, 24
  store i32 %v1_10001324, i32* %r30.global-to-local, align 4
  %v0_10001328 = load i32, i32* %r21.global-to-local, align 4
  %v1_10001328 = trunc i32 %v0_10001328 to i8
  %v3_10001328 = add i32 %v4_10001318, 8
  %v4_10001328 = inttoptr i32 %v3_10001328 to i8*
  store i8 %v1_10001328, i8* %v4_10001328, align 1
  %v0_1000132c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000132c = add i32 %v0_1000132c, 44
  store i32 %v1_1000132c, i32* %r29.global-to-local, align 4
  %v1_10001330 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10001330, i32* %r0.global-to-local, align 4
  %v0_10001334 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001334 = trunc i32 %v0_10001334 to i16
  %v2_10001334 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001334 = add i32 %v2_10001334, 4
  %v4_10001334 = inttoptr i32 %v3_10001334 to i16*
  store i16 %v1_10001334, i16* %v4_10001334, align 2
  %v1_10001338 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10001338, i32* %r0.global-to-local, align 4
  %v0_1000133c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000133c = add i32 %v0_1000133c, 20
  store i32 %v1_1000133c, i32* %r9.global-to-local, align 4
  %v2_10001340 = inttoptr i32 %v0_1000133c to i32*
  store i32 %v1_10001338, i32* %v2_10001340, align 4
  %v0_10001344 = load i32, i32* %r14.global-to-local, align 4
  %v1_10001344 = trunc i32 %v0_10001344 to i8
  %v2_10001344 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001344 = add i32 %v2_10001344, 1
  %v4_10001344 = inttoptr i32 %v3_10001344 to i8*
  store i8 %v1_10001344, i8* %v4_10001344, align 1
  %v0_10001348 = load i32, i32* %r22.global-to-local, align 4
  %v1_10001348 = trunc i32 %v0_10001348 to i16
  %v2_10001348 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001348 = add i32 %v2_10001348, 2
  %v4_10001348 = inttoptr i32 %v3_10001348 to i16*
  store i16 %v1_10001348, i16* %v4_10001348, align 2
  %v0_1000134c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000134c, label %dec_label_pc_10001358, label %dec_label_pc_10001350

dec_label_pc_10001350:                            ; preds = %dec_label_pc_100012f8
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10001354 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001354 = add i32 %v2_10001354, 6
  %v4_10001354 = inttoptr i32 %v3_10001354 to i16*
  store i16 16384, i16* %v4_10001354, align 2
  br label %dec_label_pc_10001358

dec_label_pc_10001358:                            ; preds = %dec_label_pc_100012f8, %dec_label_pc_10001350
  store i32 2048, i32* %r0.global-to-local, align 4
  %v2_10001360 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001360 = add i32 %v2_10001360, 9
  %v4_10001360 = inttoptr i32 %v3_10001360 to i8*
  store i8 47, i8* %v4_10001360, align 1
  %v0_10001364 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001364 = trunc i32 %v0_10001364 to i16
  %v2_10001364 = load i32, i32* %r9.global-to-local, align 4
  %v3_10001364 = add i32 %v2_10001364, 2
  %v4_10001364 = inttoptr i32 %v3_10001364 to i16*
  store i16 %v1_10001364, i16* %v4_10001364, align 2
  %v3_10001368 = load i32, i32* %stack_var_-104, align 4
  store i32 %v5_10001234, i32* %r11.global-to-local, align 4
  %v1_10001370 = mul i32 %v3_10001368, 24
  store i32 %v1_10001370, i32* %r9.global-to-local, align 4
  %v0_10001374 = load i32, i32* %r31.global-to-local, align 4
  %v1_10001374 = add i32 %v0_10001374, 24
  %v2_10001374 = inttoptr i32 %v1_10001374 to i32*
  %v3_10001374 = load i32, i32* %v2_10001374, align 4
  store i32 %v3_10001374, i32* %r0.global-to-local, align 4
  %v2_10001378 = add i32 %v0_10001374, 12
  %v3_10001378 = inttoptr i32 %v2_10001378 to i32*
  store i32 %v5_10001234, i32* %v3_10001378, align 4
  store i32 4, i32* %r11.global-to-local, align 4
  %v0_10001380 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001380 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001380 = add i32 %v1_10001380, %v0_10001380
  store i32 %v2_10001380, i32* %r9.global-to-local, align 4
  %v1_10001384 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10001384, i32* %r0.global-to-local, align 4
  %v0_10001388 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001388 = add i32 %v0_10001388, 16
  %v2_10001388 = inttoptr i32 %v1_10001388 to i32*
  %v3_10001388 = load i32, i32* %v2_10001388, align 4
  store i32 %v3_10001388, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10001390 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10001390, i32* %r0.global-to-local, align 4
  %v1_10001394 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001394 = add i32 %v1_10001394, 24
  %v3_10001394 = inttoptr i32 %v2_10001394 to i32*
  store i32 %v1_10001390, i32* %v3_10001394, align 4
  %v0_10001398 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001398 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001398 = add i32 %v1_10001398, 16
  %v3_10001398 = inttoptr i32 %v2_10001398 to i32*
  store i32 %v0_10001398, i32* %v3_10001398, align 4
  %v0_1000139c = load i32, i32* %r14.global-to-local, align 4
  %v1_1000139c = trunc i32 %v0_1000139c to i8
  %v2_1000139c = load i32, i32* %r30.global-to-local, align 4
  %v3_1000139c = add i32 %v2_1000139c, 1
  %v4_1000139c = inttoptr i32 %v3_1000139c to i8*
  store i8 %v1_1000139c, i8* %v4_1000139c, align 1
  %v0_100013a0 = load i32, i32* %r24.global-to-local, align 4
  %v1_100013a0 = trunc i32 %v0_100013a0 to i16
  %v2_100013a0 = load i32, i32* %r30.global-to-local, align 4
  %v3_100013a0 = add i32 %v2_100013a0, 2
  %v4_100013a0 = inttoptr i32 %v3_100013a0 to i16*
  store i16 %v1_100013a0, i16* %v4_100013a0, align 2
  %v0_100013a4 = load i32, i32* %r27.global-to-local, align 4
  %v1_100013a4 = trunc i32 %v0_100013a4 to i16
  %v2_100013a4 = load i32, i32* %r30.global-to-local, align 4
  %v3_100013a4 = add i32 %v2_100013a4, 4
  %v4_100013a4 = inttoptr i32 %v3_100013a4 to i16*
  store i16 %v1_100013a4, i16* %v4_100013a4, align 2
  %v0_100013a8 = load i32, i32* %r21.global-to-local, align 4
  %v1_100013a8 = trunc i32 %v0_100013a8 to i8
  %v2_100013a8 = load i32, i32* %r30.global-to-local, align 4
  %v3_100013a8 = add i32 %v2_100013a8, 8
  %v4_100013a8 = inttoptr i32 %v3_100013a8 to i8*
  store i8 %v1_100013a8, i8* %v4_100013a8, align 1
  %v0_100013ac = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100013ac, label %dec_label_pc_100013b8, label %dec_label_pc_100013b0

dec_label_pc_100013b0:                            ; preds = %dec_label_pc_10001358
  store i32 16384, i32* %r11.global-to-local, align 4
  %v2_100013b4 = load i32, i32* %r30.global-to-local, align 4
  %v3_100013b4 = add i32 %v2_100013b4, 6
  %v4_100013b4 = inttoptr i32 %v3_100013b4 to i16*
  store i16 16384, i16* %v4_100013b4, align 2
  br label %dec_label_pc_100013b8

dec_label_pc_100013b8:                            ; preds = %dec_label_pc_10001358, %dec_label_pc_100013b0
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_100013bc = load i32, i32* %r30.global-to-local, align 4
  %v3_100013bc = add i32 %v2_100013bc, 9
  %v4_100013bc = inttoptr i32 %v3_100013bc to i8*
  store i8 17, i8* %v4_100013bc, align 1
  %v0_100013c0 = call i32 @function_10005f74()
  store i32 %v0_100013c0, i32* %r3.global-to-local, align 4
  %v1_100013c4 = add i32 %v0_100013c0, -1024
  store i32 %v1_100013c4, i32* %r0.global-to-local, align 4
  %v1_100013c8 = load i32, i32* %r30.global-to-local, align 4
  %v2_100013c8 = add i32 %v1_100013c8, 12
  %v3_100013c8 = inttoptr i32 %v2_100013c8 to i32*
  store i32 %v0_100013c0, i32* %v3_100013c8, align 4
  %v0_100013cc = load i32, i32* %r0.global-to-local, align 4
  %v1_100013cc = sub i32 -1, %v0_100013cc
  store i32 %v1_100013cc, i32* %r0.global-to-local, align 4
  %v0_100013d0 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100013d0, label %dec_label_pc_100013d4, label %dec_label_pc_100012d0

dec_label_pc_100013d4:                            ; preds = %dec_label_pc_100013b8
  %v1_100013d4 = load i32, i32* %r30.global-to-local, align 4
  %v2_100013d4 = add i32 %v1_100013d4, 16
  %v3_100013d4 = inttoptr i32 %v2_100013d4 to i32*
  store i32 %v1_100013cc, i32* %v3_100013d4, align 4
  br label %dec_label_pc_100012d8

dec_label_pc_100013dc:                            ; preds = %dec_label_pc_10001258
  %v0_100013dc = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_100013dc, i32* %r3.global-to-local, align 4
  store i32 268440548, i32* @lr, align 4
  %v0_100013e0 = call i32 @function_10009108()
  store i32 %v0_100013e0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100013e4

dec_label_pc_100013e4:                            ; preds = %dec_label_pc_100010c4, %dec_label_pc_100013dc
  store i32 %v0_100010dc, i32* %r0.global-to-local, align 4
  %v1_100013f8 = call %0 @__asm_mtcrf(i32 56, i32 %v0_100010cc)
  store i32 %v0_10001110, i32* %r28.global-to-local, align 4
  store i32 %v0_10001118, i32* %r29.global-to-local, align 4
  store i32 %v0_10001120, i32* %r30.global-to-local, align 4
  store i32 %v0_10001124, i32* %r31.global-to-local, align 4
  %v0_10001440 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10001440

dec_label_pc_10001444:                            ; preds = %dec_label_pc_1000127c
  %v3_10001444 = icmp eq i32 %v1_10001294, 0
  store i1 %v3_10001444, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_10001448

dec_label_pc_10001448:                            ; preds = %dec_label_pc_100012d8, %dec_label_pc_10001444
  store i32 %v5_10001234, i32* %r0.global-to-local, align 4
  %v0_1000144c = load i32, i32* %r15.global-to-local, align 4
  %v3_1000144c = icmp eq i32 %v0_1000144c, 0
  store i1 %v3_1000144c, i1* %cr2_eq.global-to-local, align 1
  %v0_10001450 = load i32, i32* %r16.global-to-local, align 4
  %v1_10001450 = add i32 %v0_10001450, 8
  store i32 %v1_10001450, i32* %r22.global-to-local, align 4
  %v1_10001454 = add i32 %v0_10001450, 52
  store i32 %v1_10001454, i32* %r24.global-to-local, align 4
  %v3_10001458 = icmp eq i32 %v5_10001234, -1
  store i1 %v3_10001458, i1* %cr7_eq.global-to-local, align 1
  %v0_1000145c = call i32 @__asm_mfcr()
  store i32 %v0_1000145c, i32* %r3.global-to-local, align 4
  %v1_10001460 = mul i32 %v0_1000145c, 268435456
  store i32 %v1_10001460, i32* %r21.global-to-local, align 4
  %v0_10001464.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001464.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10001464.outer

dec_label_pc_10001464.outer:                      ; preds = %dec_label_pc_1000156c, %dec_label_pc_10001448
  %v1_10001464.ph = phi i1 [ %v1_10001464.pre, %dec_label_pc_10001448 ], [ %v1_1000156c, %dec_label_pc_1000156c ]
  %v0_10001464.ph = phi i1 [ %v0_10001464.pre, %dec_label_pc_10001448 ], [ %v0_1000156c, %dec_label_pc_1000156c ]
  %v2_10001464 = or i1 %v1_10001464.ph, %v0_10001464.ph
  br label %dec_label_pc_10001464

dec_label_pc_10001464:                            ; preds = %dec_label_pc_10001464.outer, %dec_label_pc_10001464
  br i1 %v2_10001464, label %dec_label_pc_10001464, label %dec_label_pc_10001468

dec_label_pc_10001468:                            ; preds = %dec_label_pc_10001464, %dec_label_pc_1000156c
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10001478

dec_label_pc_10001478:                            ; preds = %dec_label_pc_100014dc, %dec_label_pc_10001468
  %v0_10001478 = phi i32 [ %v1_1000155c, %dec_label_pc_100014dc ], [ 0, %dec_label_pc_10001468 ]
  %v1_10001478 = mul i32 %v0_10001478, 24
  store i32 %v1_10001478, i32* %r0.global-to-local, align 4
  %v1_1000147c = mul i32 %v0_10001478, 4
  store i32 %v1_1000147c, i32* %r11.global-to-local, align 4
  %v1_10001480 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001480 = add i32 %v1_10001480, %v1_1000147c
  %v3_10001480 = inttoptr i32 %v2_10001480 to i32*
  %v4_10001480 = load i32, i32* %v3_10001480, align 4
  store i32 %v4_10001480, i32* %r28.global-to-local, align 4
  %v1_10001484 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001484 = add i32 %v1_10001484, %v1_10001478
  %v1_10001488 = add i32 %v2_10001484, 20
  %v2_10001488 = inttoptr i32 %v1_10001488 to i8*
  %v3_10001488 = load i8, i8* %v2_10001488, align 1
  %v4_10001488 = zext i8 %v3_10001488 to i32
  store i32 %v4_10001488, i32* %r9.global-to-local, align 4
  %v1_1000148c = add i32 %v4_10001480, 24
  store i32 %v1_1000148c, i32* @r31, align 4
  %v1_10001490 = add i32 %v4_10001480, 44
  store i32 %v1_10001490, i32* @r30, align 4
  %v3_10001494 = icmp eq i8 %v3_10001488, 31
  store i1 %v3_10001494, i1* %cr7_eq.global-to-local, align 1
  %tmp35 = icmp ult i8 %v3_10001488, 32
  br i1 %tmp35, label %dec_label_pc_10001574, label %dec_label_pc_1000149c

dec_label_pc_1000149c:                            ; preds = %dec_label_pc_10001478
  %v0_1000149c = load i32, i32* %r21.global-to-local, align 4
  %v1_1000149c = mul i32 %v0_1000149c, 16
  %v2_1000149c = udiv i32 %v0_1000149c, 268435456
  %v3_1000149c = or i32 %v2_1000149c, %v1_1000149c
  store i32 %v3_1000149c, i32* %r21.global-to-local, align 4
  %v1_100014a0 = call %0 @__asm_mtcrf(i32 1, i32 %v3_1000149c)
  %v1_100014a4 = mul nuw i32 %v2_1000149c, 268435456
  %v2_100014a4 = urem i32 %v0_1000149c, 268435456
  %v3_100014a4 = or i32 %v1_100014a4, %v2_100014a4
  store i32 %v3_100014a4, i32* %r21.global-to-local, align 4
  %v0_100014a8 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100014a8, label %dec_label_pc_100015a8, label %dec_label_pc_100014ac

dec_label_pc_100014ac:                            ; preds = %dec_label_pc_10001574, %dec_label_pc_1000149c
  store i32 65535, i32* @r29, align 4
  %v0_100014b4 = load i32, i32* %r25.global-to-local, align 4
  %v4_100014b4 = icmp eq i32 %v0_100014b4, 65535
  store i1 %v4_100014b4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100014b4, label %dec_label_pc_100015c0, label %dec_label_pc_100014bc

dec_label_pc_100014bc:                            ; preds = %dec_label_pc_100015a8, %dec_label_pc_100014ac
  %v1_100014bc = phi i32 [ %v1_100015b8, %dec_label_pc_100015a8 ], [ 65535, %dec_label_pc_100014ac ]
  %v0_100014bc = load i32, i32* %r17.global-to-local, align 4
  %v4_100014bc = icmp eq i32 %v0_100014bc, %v1_100014bc
  store i1 %v4_100014bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100014bc, label %dec_label_pc_100015e0, label %dec_label_pc_100014c4

dec_label_pc_100014c4:                            ; preds = %dec_label_pc_100015c0.dec_label_pc_100014c4_crit_edge, %dec_label_pc_100014bc
  %v1_100014c4 = phi i32 [ %v1_100014c4.pre, %dec_label_pc_100015c0.dec_label_pc_100014c4_crit_edge ], [ %v1_100014bc, %dec_label_pc_100014bc ]
  %v0_100014c4 = load i32, i32* %r18.global-to-local, align 4
  %v4_100014c4 = icmp eq i32 %v0_100014c4, %v1_100014c4
  store i1 %v4_100014c4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100014c4, label %dec_label_pc_100015f0, label %dec_label_pc_100014cc

dec_label_pc_100014cc:                            ; preds = %dec_label_pc_100015e0, %dec_label_pc_100014c4
  %v0_100014cc = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100014cc, label %dec_label_pc_100015fc, label %dec_label_pc_100014d0

dec_label_pc_100014d0:                            ; preds = %dec_label_pc_100015f0, %dec_label_pc_100014cc
  %v0_100014d0 = load i32, i32* %r28.global-to-local, align 4
  %v1_100014d0 = add i32 %v0_100014d0, 16
  %v2_100014d0 = inttoptr i32 %v1_100014d0 to i32*
  %v3_100014d0 = load i32, i32* %v2_100014d0, align 4
  store i32 %v3_100014d0, i32* %r0.global-to-local, align 4
  %v1_100014d4 = load i32, i32* @r31, align 4
  %v2_100014d4 = add i32 %v1_100014d4, 16
  %v3_100014d4 = inttoptr i32 %v2_100014d4 to i32*
  store i32 %v3_100014d0, i32* %v3_100014d4, align 4
  %v0_100014d8 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100014d8, label %dec_label_pc_100014dc, label %dec_label_pc_10001608

dec_label_pc_100014dc:                            ; preds = %dec_label_pc_100014d0, %dec_label_pc_100015fc, %dec_label_pc_10001608
  %v0_100014dc = load i32, i32* %r27.global-to-local, align 4
  %v1_100014dc = trunc i32 %v0_100014dc to i16
  %v2_100014dc = load i32, i32* %r28.global-to-local, align 4
  %v3_100014dc = add i32 %v2_100014dc, 10
  %v4_100014dc = inttoptr i32 %v3_100014dc to i16*
  store i16 %v1_100014dc, i16* %v4_100014dc, align 2
  %v0_100014e4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100014e4, i32* @r3, align 4
  %v2_100014e8 = call i32 @function_100043cc(i32 %v0_100014e4, i32 20)
  %v3_100014e8 = trunc i32 %v2_100014e8 to i16
  %v4_100014f0 = add i32 %v0_100014e4, 10
  %v5_100014f0 = inttoptr i32 %v4_100014f0 to i16*
  store i16 %v3_100014e8, i16* %v5_100014f0, align 2
  %v0_100014f4 = load i32, i32* @r31, align 4
  store i32 %v0_100014f4, i32* @r3, align 4
  %v0_100014f8 = load i32, i32* %r27.global-to-local, align 4
  %v1_100014f8 = trunc i32 %v0_100014f8 to i16
  %v3_100014f8 = add i32 %v0_100014f4, 10
  %v4_100014f8 = inttoptr i32 %v3_100014f8 to i16*
  store i16 %v1_100014f8, i16* %v4_100014f8, align 2
  %v2_100014fc = call i32 @function_100043cc(i32 %v0_100014f4, i32 20)
  %v3_100014fc = trunc i32 %v2_100014fc to i16
  %v0_10001500 = load i32, i32* @r30, align 4
  store i32 %v0_10001500, i32* @r4, align 4
  %v3_10001504 = load i32, i32* @r31, align 4
  %v4_10001504 = add i32 %v3_10001504, 10
  %v5_10001504 = inttoptr i32 %v4_10001504 to i16*
  store i16 %v3_100014fc, i16* %v5_10001504, align 2
  %v0_10001508 = load i32, i32* %r22.global-to-local, align 4
  %v0_1000150c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000150c = trunc i32 %v0_1000150c to i16
  %v2_1000150c = load i32, i32* @r30, align 4
  %v3_1000150c = add i32 %v2_1000150c, 6
  %v4_1000150c = inttoptr i32 %v3_1000150c to i16*
  store i16 %v1_1000150c, i16* %v4_1000150c, align 2
  %v0_10001510 = load i32, i32* @r31, align 4
  store i32 %v0_10001510, i32* %r3.global-to-local, align 4
  %v0_10001514 = load i32, i32* @r30, align 4
  %v1_10001514 = add i32 %v0_10001514, 4
  %v2_10001514 = inttoptr i32 %v1_10001514 to i16*
  %v3_10001514 = load i16, i16* %v2_10001514, align 2
  %v4_10001514 = zext i16 %v3_10001514 to i32
  %v4_10001518 = call i32 @function_10004430(i32 %v0_10001510, i32 %v0_10001500, i32 %v4_10001514, i32 %v0_10001508)
  %v5_10001518 = trunc i32 %v4_10001518 to i16
  store i32 %v4_10001518, i32* %r3.global-to-local, align 4
  %v3_1000151c = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_1000151c, i32* %r0.global-to-local, align 4
  %v0_10001520 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001520 = add i32 %v0_10001520, 16
  %v2_10001520 = inttoptr i32 %v1_10001520 to i32*
  %v3_10001520 = load i32, i32* %v2_10001520, align 4
  store i32 %v3_10001520, i32* %r11.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10001528 = mul i32 %v3_1000151c, 24
  store i32 %v1_10001528, i32* %r0.global-to-local, align 4
  %v3_1000152c = load i32, i32* @r30, align 4
  %v4_1000152c = add i32 %v3_1000152c, 6
  %v5_1000152c = inttoptr i32 %v4_1000152c to i16*
  store i16 %v5_10001518, i16* %v5_1000152c, align 2
  %v0_10001530 = load i32, i32* %r28.global-to-local, align 4
  %v0_10001534 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10001534, i32* %r3.global-to-local, align 4
  %v0_10001538 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001538 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001538 = add i32 %v1_10001538, %v0_10001538
  %v0_1000153c = load i32, i32* %r9.global-to-local, align 4
  %v3_1000153c = trunc i32 %v0_1000153c to i16
  %v5_1000153c = inttoptr i32 %v2_10001538 to i16*
  store i16 %v3_1000153c, i16* %v5_1000153c, align 2
  %v0_10001540 = load i32, i32* %r11.global-to-local, align 4
  %v2_10001540 = add i32 %v2_10001538, 4
  %v3_10001540 = inttoptr i32 %v2_10001540 to i32*
  store i32 %v0_10001540, i32* %v3_10001540, align 4
  %v0_10001544 = load i32, i32* %r24.global-to-local, align 4
  %v0_10001548 = load i32, i32* %r27.global-to-local, align 4
  %v1_10001548 = trunc i32 %v0_10001548 to i16
  %v3_10001548 = add i32 %v2_10001538, 2
  %v4_10001548 = inttoptr i32 %v3_10001548 to i16*
  store i16 %v1_10001548, i16* %v4_10001548, align 2
  store i32 268440920, i32* @lr, align 4
  %v6_10001554 = call i32 @function_10009ddc(i32 %v0_10001534, i32 %v0_10001530, i32 %v0_10001544, i32 16384, i32 %v2_10001538, i32 16)
  store i32 %v6_10001554, i32* %r3.global-to-local, align 4
  %v3_10001558 = load i32, i32* %stack_var_-104, align 4
  %v1_1000155c = add i32 %v3_10001558, 1
  store i32 %v1_1000155c, i32* %r9.global-to-local, align 4
  %v1_10001560 = load i32, i32* %r19.global-to-local, align 4
  %v2_10001560 = icmp slt i32 %v1_1000155c, %v1_10001560
  %v4_10001560 = icmp eq i32 %v1_1000155c, %v1_10001560
  store i1 %v4_10001560, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_1000155c, i32* %stack_var_-104, align 4
  br i1 %v2_10001560, label %dec_label_pc_10001478, label %dec_label_pc_1000156c

dec_label_pc_1000156c:                            ; preds = %dec_label_pc_100014dc
  %v0_1000156c = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_1000156c = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_1000156c = or i1 %v0_1000156c, %v1_1000156c
  br i1 %v2_1000156c, label %dec_label_pc_10001464.outer, label %dec_label_pc_10001468

dec_label_pc_10001574:                            ; preds = %dec_label_pc_10001478
  %v1_10001574 = add i32 %v2_10001484, 16
  %v2_10001574 = inttoptr i32 %v1_10001574 to i32*
  %v3_10001574 = load i32, i32* %v2_10001574, align 4
  store i32 %v3_10001574, i32* %r29.global-to-local, align 4
  %v0_10001578 = call i32 @function_10005f74()
  store i32 %v0_10001578, i32* %r3.global-to-local, align 4
  %v3_1000157c = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_1000157c, i32* %r9.global-to-local, align 4
  %v0_10001580 = load i32, i32* %r21.global-to-local, align 4
  %v1_10001580 = mul i32 %v0_10001580, 16
  %v2_10001580 = udiv i32 %v0_10001580, 268435456
  %v3_10001580 = or i32 %v2_10001580, %v1_10001580
  store i32 %v3_10001580, i32* %r21.global-to-local, align 4
  %v1_10001584 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10001580)
  %v1_10001588 = mul nuw i32 %v2_10001580, 268435456
  %v2_10001588 = urem i32 %v0_10001580, 268435456
  %v3_10001588 = or i32 %v1_10001588, %v2_10001588
  store i32 %v3_10001588, i32* %r21.global-to-local, align 4
  %v0_1000158c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000158c = mul i32 %v0_1000158c, 24
  %v1_10001590 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001590 = add i32 %v1_10001590, %v1_1000158c
  store i32 %v2_10001590, i32* %r9.global-to-local, align 4
  %v1_10001594 = add i32 %v2_10001590, 20
  %v2_10001594 = inttoptr i32 %v1_10001594 to i8*
  %v3_10001594 = load i8, i8* %v2_10001594, align 1
  %v4_10001594 = zext i8 %v3_10001594 to i32
  store i32 %v4_10001594, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10001594, 64
  %v2_10001598 = zext i8 %tmp to i32
  %v3_10001598 = lshr i32 %v0_10001578, %v2_10001598
  store i32 %v3_10001598, i32* %r3.global-to-local, align 4
  %v0_1000159c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000159c = add i32 %v3_10001598, %v0_1000159c
  store i32 %v2_1000159c, i32* %r29.global-to-local, align 4
  %v1_100015a0 = load i32, i32* %r28.global-to-local, align 4
  %v2_100015a0 = add i32 %v1_100015a0, 16
  %v3_100015a0 = inttoptr i32 %v2_100015a0 to i32*
  store i32 %v2_1000159c, i32* %v3_100015a0, align 4
  %v0_100015a4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100015a4, label %dec_label_pc_100015a8, label %dec_label_pc_100014ac

dec_label_pc_100015a8:                            ; preds = %dec_label_pc_10001574, %dec_label_pc_1000149c
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_100015ac = call i32 @function_10005f74()
  store i32 %v0_100015ac, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_100015b4 = load i32, i32* %r28.global-to-local, align 4
  %v2_100015b4 = add i32 %v1_100015b4, 12
  %v3_100015b4 = inttoptr i32 %v2_100015b4 to i32*
  store i32 %v0_100015ac, i32* %v3_100015b4, align 4
  %v0_100015b8 = load i32, i32* %r25.global-to-local, align 4
  %v1_100015b8 = load i32, i32* @r29, align 4
  %v4_100015b8 = icmp eq i32 %v0_100015b8, %v1_100015b8
  store i1 %v4_100015b8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100015b8, label %dec_label_pc_100015c0, label %dec_label_pc_100014bc

dec_label_pc_100015c0:                            ; preds = %dec_label_pc_100015a8, %dec_label_pc_100014ac
  %v0_100015c0 = call i32 @function_10005f74()
  %v0_100015c4 = load i32, i32* %r17.global-to-local, align 4
  %v1_100015c4 = load i32, i32* @r29, align 4
  %v4_100015c4 = icmp eq i32 %v0_100015c4, %v1_100015c4
  store i1 %v4_100015c4, i1* %cr7_eq.global-to-local, align 1
  %v1_100015c8 = urem i32 %v0_100015c0, 65536
  store i32 %v1_100015c8, i32* %r3.global-to-local, align 4
  %v1_100015cc = add nsw i32 %v1_100015c8, -1000
  store i32 %v1_100015cc, i32* %r0.global-to-local, align 4
  %v1_100015d0 = trunc i32 %v0_100015c0 to i16
  %v2_100015d0 = load i32, i32* %r28.global-to-local, align 4
  %v3_100015d0 = add i32 %v2_100015d0, 4
  %v4_100015d0 = inttoptr i32 %v3_100015d0 to i16*
  store i16 %v1_100015d0, i16* %v4_100015d0, align 2
  %v0_100015d4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100015d4 = sub i32 -1, %v0_100015d4
  store i32 %v1_100015d4, i32* %r0.global-to-local, align 4
  %v1_100015d8 = trunc i32 %v1_100015d4 to i16
  %v2_100015d8 = load i32, i32* @r31, align 4
  %v3_100015d8 = add i32 %v2_100015d8, 4
  %v4_100015d8 = inttoptr i32 %v3_100015d8 to i16*
  store i16 %v1_100015d8, i16* %v4_100015d8, align 2
  br i1 %v4_100015c4, label %dec_label_pc_100015e0, label %dec_label_pc_100015c0.dec_label_pc_100014c4_crit_edge

dec_label_pc_100015c0.dec_label_pc_100014c4_crit_edge: ; preds = %dec_label_pc_100015c0
  %v1_100014c4.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100014c4

dec_label_pc_100015e0:                            ; preds = %dec_label_pc_100015c0, %dec_label_pc_100014bc
  %v0_100015e0 = call i32 @function_10005f74()
  %v1_100015e0 = trunc i32 %v0_100015e0 to i16
  store i32 %v0_100015e0, i32* %r3.global-to-local, align 4
  %v0_100015e4 = load i32, i32* %r18.global-to-local, align 4
  %v1_100015e4 = load i32, i32* @r29, align 4
  %v4_100015e4 = icmp eq i32 %v0_100015e4, %v1_100015e4
  store i1 %v4_100015e4, i1* %cr7_eq.global-to-local, align 1
  %v3_100015e8 = load i32, i32* %r28.global-to-local, align 4
  %v4_100015e8 = add i32 %v3_100015e8, 44
  %v5_100015e8 = inttoptr i32 %v4_100015e8 to i16*
  store i16 %v1_100015e0, i16* %v5_100015e8, align 2
  br i1 %v4_100015e4, label %dec_label_pc_100015f0, label %dec_label_pc_100014cc

dec_label_pc_100015f0:                            ; preds = %dec_label_pc_100015e0, %dec_label_pc_100014c4
  %v0_100015f0 = call i32 @function_10005f74()
  %v1_100015f0 = trunc i32 %v0_100015f0 to i16
  store i32 %v0_100015f0, i32* %r3.global-to-local, align 4
  %v3_100015f4 = load i32, i32* @r30, align 4
  %v4_100015f4 = add i32 %v3_100015f4, 2
  %v5_100015f4 = inttoptr i32 %v4_100015f4 to i16*
  store i16 %v1_100015f0, i16* %v5_100015f4, align 2
  %v0_100015f8 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100015f8, label %dec_label_pc_100015fc, label %dec_label_pc_100014d0

dec_label_pc_100015fc:                            ; preds = %dec_label_pc_100015f0, %dec_label_pc_100014cc
  %v0_100015fc = call i32 @function_10005f74()
  store i32 %v0_100015fc, i32* %r3.global-to-local, align 4
  %v1_10001600 = load i32, i32* @r31, align 4
  %v2_10001600 = add i32 %v1_10001600, 16
  %v3_10001600 = inttoptr i32 %v2_10001600 to i32*
  store i32 %v0_100015fc, i32* %v3_10001600, align 4
  %v0_10001604 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10001604, label %dec_label_pc_100014dc, label %dec_label_pc_10001608

dec_label_pc_10001608:                            ; preds = %dec_label_pc_100014d0, %dec_label_pc_100015fc
  %v0_10001608 = load i32, i32* @r30, align 4
  %v1_10001608 = add i32 %v0_10001608, 8
  store i32 %v1_10001608, i32* @r3, align 4
  %v0_1000160c = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_1000160c, i32* @r4, align 4
  %v0_10001610 = call i32 @function_10006148()
  store i32 %v0_10001610, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100014dc

; uselistorder directives
  uselistorder i32 %v0_100015f0, { 1, 0 }
  uselistorder i32 %v0_100015e0, { 1, 0 }
  uselistorder i32 %v1_100015d4, { 1, 0 }
  uselistorder i32 %v1_100015c8, { 1, 0 }
  uselistorder i32 %v0_100015c0, { 1, 0 }
  uselistorder i32 %v1_100015b8, { 1, 0 }
  uselistorder i32 %v0_10001580, { 2, 1, 0 }
  uselistorder i1 %v1_1000156c, { 1, 0 }
  uselistorder i1 %v0_1000156c, { 1, 0 }
  uselistorder i32 %v1_1000155c, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_10001538, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10001518, { 1, 0 }
  uselistorder i32 %v0_1000149c, { 2, 1, 0 }
  uselistorder i32 %v4_10001480, { 1, 0, 2 }
  uselistorder i32 %v1_1000147c, { 1, 0 }
  uselistorder i32 %v1_100013cc, { 1, 0 }
  uselistorder i32 %v1_10001314, { 1, 0 }
  uselistorder i32 %v1_10001308, { 1, 0 }
  uselistorder i32 %v1_100012a4, { 1, 0 }
  uselistorder i32 %v0_100012a4, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10001294, { 1, 2, 0 }
  uselistorder i32 %v0_10001288, { 1, 0 }
  uselistorder i32 %v5_10001234, { 0, 3, 1, 2 }
  uselistorder i32* %r9.global-to-local, { 19, 20, 21, 22, 0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 4, 5, 17, 18 }
  uselistorder i32* %r31.global-to-local, { 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1, 2, 3, 4, 16 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 4, 5, 6, 7, 9, 8, 10, 2, 11, 12 }
  uselistorder i32* %r3.global-to-local, { 27, 28, 29, 30, 31, 32, 33, 34, 3, 4, 5, 6, 0, 14, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 1, 2 }
  uselistorder i32* %r29.global-to-local, { 6, 5, 7, 8, 0, 4, 1, 2, 3 }
  uselistorder i32* %r28.global-to-local, { 5, 6, 7, 8, 0, 1, 2, 3, 4, 9, 10 }
  uselistorder i32* %r26.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r25.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r21.global-to-local, { 8, 9, 7, 0, 1, 6, 2, 3, 4, 5 }
  uselistorder i32* %r19.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r16.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 28, 29, 30, 31, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 22, 18, 19, 20, 21, 8, 23, 24, 25, 26, 27 }
  uselistorder i1* %cr7_eq.global-to-local, { 10, 11, 12, 4, 13, 0, 1, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 3, 1, 0, 2, 4 }
  uselistorder i1* %cr2_eq.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_10001608, { 1, 0 }
  uselistorder label %dec_label_pc_100014dc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10001468, { 1, 0 }
  uselistorder label %dec_label_pc_10001464, { 1, 0 }
  uselistorder label %dec_label_pc_10001448, { 1, 0 }
  uselistorder label %dec_label_pc_100013e4, { 1, 0 }
  uselistorder label %dec_label_pc_100013b8, { 1, 0 }
  uselistorder label %dec_label_pc_10001358, { 1, 0 }
}

define i32 @function_10001618(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001618:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v0_10001620 = call i32 @__asm_mfcr()
  store i32 %v0_10001620, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_1000164c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10001654 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268441208, i32* @lr, align 4
  %v2_10001674 = call i32 @function_1000a1b4(i32 4, i32 4)
  store i32 %v2_10001674, i32* %r27.global-to-local, align 4
  %v0_10001680 = load i32, i32* @r30, align 4
  store i32 %v0_10001680, i32* %r3.global-to-local, align 4
  store i32 268441224, i32* @lr, align 4
  %v2_10001684 = call i32 @function_1000a1b4(i32 %v0_10001680, i32 4)
  %v0_1000168c = load i32, i32* @r28, align 4
  store i32 %v2_10001684, i32* %r26.global-to-local, align 4
  %v0_1000169c = load i32, i32* @r29, align 4
  store i32 %v0_1000169c, i32* %r3.global-to-local, align 4
  store i32 268441252, i32* @lr, align 4
  %v4_100016a0 = inttoptr i32 %v0_1000168c to i32*
  %v5_100016a0 = call i32 @function_100006a8(i32 %v0_1000169c, i32* %v4_100016a0, i32 7, i32 65535)
  %v0_100016ac = load i32, i32* @r28, align 4
  %v1_100016b4 = urem i32 %v5_100016a0, 65536
  store i32 %v1_100016b4, i32* %r21.global-to-local, align 4
  %v0_100016b8 = load i32, i32* @r29, align 4
  store i32 %v0_100016b8, i32* %r3.global-to-local, align 4
  store i32 268441280, i32* @lr, align 4
  %v4_100016bc = inttoptr i32 %v0_100016ac to i32*
  %v5_100016bc = call i32 @function_100006a8(i32 %v0_100016b8, i32* %v4_100016bc, i32 6, i32 65535)
  %v0_100016c0 = load i32, i32* @r28, align 4
  %v1_100016c4 = urem i32 %v5_100016bc, 65536
  store i32 %v1_100016c4, i32* %r22.global-to-local, align 4
  %v0_100016d0 = load i32, i32* @r29, align 4
  store i32 %v0_100016d0, i32* %r3.global-to-local, align 4
  store i32 268441304, i32* @lr, align 4
  %v4_100016d4 = inttoptr i32 %v0_100016c0 to i32*
  %v5_100016d4 = call i32 @function_100006a8(i32 %v0_100016d0, i32* %v4_100016d4, i32 0, i32 1024)
  %v0_100016d8 = load i32, i32* @r28, align 4
  %v1_100016dc = urem i32 %v5_100016d4, 65536
  store i32 %v1_100016dc, i32* @r31, align 4
  %v0_100016e4 = load i32, i32* @r29, align 4
  store i32 %v0_100016e4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100016f0.18 to i32), i32* @lr, align 4
  %v4_100016ec = inttoptr i32 %v0_100016d8 to i32*
  %v5_100016ec = call i32 @function_100006a8(i32 %v0_100016e4, i32* %v4_100016ec, i32 1, i32 1)
  store i32 %v5_100016ec, i32* %r3.global-to-local, align 4
  %v0_100016fc = load i32, i32* %r22.global-to-local, align 4
  %v4_100016fc = icmp eq i32 %v0_100016fc, 65535
  %v1_10001704 = urem i32 %v5_100016ec, 256
  store i32 %v1_10001704, i32* %r23.global-to-local, align 4
  store i32 0, i32* %stack_var_-72, align 4
  br i1 %v4_100016fc, label %dec_label_pc_10001900, label %dec_label_pc_10001718

dec_label_pc_10001718:                            ; preds = %dec_label_pc_10001618, %dec_label_pc_10001900
  %v0_10001718 = load i32, i32* @r30, align 4
  %v1_10001718 = icmp slt i32 %v0_10001718, 0
  %v3_10001718 = icmp eq i32 %v0_10001718, 0
  store i1 %v1_10001718, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10001718, i1* %cr4_eq.global-to-local, align 1
  %tmp38 = icmp slt i32 %v0_10001718, 1
  br i1 %tmp38, label %dec_label_pc_100017d8, label %dec_label_pc_10001720

dec_label_pc_10001720:                            ; preds = %dec_label_pc_10001718
  %v0_10001724 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10001724, i32* @r28, align 4
  store i32 0, i32* %r24.global-to-local, align 4
  %v0_10001730 = load i32, i32* %r21.global-to-local, align 4
  %v4_10001730 = icmp eq i32 %v0_10001730, 65535
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 2, i32* %r20.global-to-local, align 4
  %v2_10001880 = ptrtoint i32* %stack_var_-72 to i32
  br i1 %v4_10001730, label %dec_label_pc_10001850, label %dec_label_pc_10001744

dec_label_pc_10001744:                            ; preds = %dec_label_pc_10001720, %dec_label_pc_100017b8
  %v0_10001750 = phi i32 [ %v0_100017cc, %dec_label_pc_100017b8 ], [ 0, %dec_label_pc_10001720 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_10001750 = add i32 %v0_10001750, 1
  store i32 %v1_10001750, i32* %r24.global-to-local, align 4
  store i32 268441432, i32* @lr, align 4
  %v2_10001754 = call i32 @function_1000a1b4(i32 65535, i32 1)
  %v0_10001758 = load i32, i32* %r21.global-to-local, align 4
  %v1_10001758 = trunc i32 %v0_10001758 to i16
  %v2_10001758 = load i32, i32* @r28, align 4
  %v3_10001758 = add i32 %v2_10001758, 2
  %v4_10001758 = inttoptr i32 %v3_10001758 to i16*
  store i16 %v1_10001758, i16* %v4_10001758, align 2
  %v1_1000175c = load i32, i32* %r25.global-to-local, align 4
  %v2_1000175c = load i32, i32* %r27.global-to-local, align 4
  %v3_1000175c = add i32 %v2_1000175c, %v1_1000175c
  %v4_1000175c = inttoptr i32 %v3_1000175c to i32*
  store i32 %v2_10001754, i32* %v4_1000175c, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268441456, i32* @lr, align 4
  %v3_1000176c = call i32 @function_10009e58(i32 2, i32 2, i32 0)
  store i32 %v3_1000176c, i32* %r3.global-to-local, align 4
  %v3_10001774 = icmp eq i32 %v3_1000176c, -1
  %v1_1000177c = load i32, i32* %r25.global-to-local, align 4
  %v2_1000177c = load i32, i32* %r26.global-to-local, align 4
  %v3_1000177c = add i32 %v2_1000177c, %v1_1000177c
  %v4_1000177c = inttoptr i32 %v3_1000177c to i32*
  store i32 %v3_1000176c, i32* %v4_1000177c, align 4
  br i1 %v3_10001774, label %dec_label_pc_100018b4, label %dec_label_pc_10001784

dec_label_pc_10001784:                            ; preds = %dec_label_pc_10001744
  %v0_10001784 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10001784, i32* %stack_var_-72, align 4
  store i32 268441492, i32* @lr, align 4
  %v0_10001790 = load i32, i32* %r3.global-to-local, align 4
  %v3_10001790 = call i32 @function_10009c24(i32 %v0_10001790, i32 %v2_10001880, i32 16)
  store i32 %v3_10001790, i32* %r3.global-to-local, align 4
  %v0_10001794 = load i32, i32* @r28, align 4
  %v1_10001794 = add i32 %v0_10001794, 20
  %v2_10001794 = inttoptr i32 %v1_10001794 to i8*
  %v3_10001794 = load i8, i8* %v2_10001794, align 1
  %v2_10001798 = icmp ugt i8 %v3_10001794, 31
  br i1 %v2_10001798, label %dec_label_pc_100017b8, label %dec_label_pc_100017a0

dec_label_pc_100017a0:                            ; preds = %dec_label_pc_10001784
  %v1_100017a0 = add i32 %v0_10001794, 16
  %v2_100017a0 = inttoptr i32 %v1_100017a0 to i32*
  %v3_100017a0 = load i32, i32* %v2_100017a0, align 4
  store i32 %v3_100017a0, i32* %r29.global-to-local, align 4
  %v0_100017a4 = call i32 @function_10005f74()
  store i32 %v0_100017a4, i32* %r3.global-to-local, align 4
  %v0_100017a8 = load i32, i32* @r28, align 4
  %v1_100017a8 = add i32 %v0_100017a8, 20
  %v2_100017a8 = inttoptr i32 %v1_100017a8 to i8*
  %v3_100017a8 = load i8, i8* %v2_100017a8, align 1
  %tmp = urem i8 %v3_100017a8, 64
  %v2_100017ac = zext i8 %tmp to i32
  %v3_100017ac = lshr i32 %v0_100017a4, %v2_100017ac
  %v0_100017b0 = load i32, i32* %r29.global-to-local, align 4
  %v2_100017b0 = add i32 %v3_100017ac, %v0_100017b0
  store i32 %v2_100017b0, i32* %r3.global-to-local, align 4
  %v2_100017b4 = add i32 %v0_100017a8, 4
  %v3_100017b4 = inttoptr i32 %v2_100017b4 to i32*
  store i32 %v2_100017b0, i32* %v3_100017b4, align 4
  br label %dec_label_pc_100017b8

dec_label_pc_100017b8:                            ; preds = %dec_label_pc_10001784, %dec_label_pc_100017a0
  %v0_100017b8 = load i32, i32* %r25.global-to-local, align 4
  %v1_100017b8 = load i32, i32* %r26.global-to-local, align 4
  %v2_100017b8 = add i32 %v1_100017b8, %v0_100017b8
  %v3_100017b8 = inttoptr i32 %v2_100017b8 to i32*
  %v4_100017b8 = load i32, i32* %v3_100017b8, align 4
  store i32 %v4_100017b8, i32* @r3, align 4
  %v1_100017c4 = add i32 %v0_100017b8, 4
  store i32 %v1_100017c4, i32* %r25.global-to-local, align 4
  store i32 268441548, i32* @lr, align 4
  %v0_100017c8 = call i32 @function_10009c58()
  store i32 %v0_100017c8, i32* %r3.global-to-local, align 4
  %v0_100017cc = load i32, i32* %r24.global-to-local, align 4
  %v1_100017cc = load i32, i32* @r30, align 4
  %v4_100017cc = icmp eq i32 %v0_100017cc, %v1_100017cc
  %v0_100017d0 = load i32, i32* @r28, align 4
  %v1_100017d0 = add i32 %v0_100017d0, 24
  store i32 %v1_100017d0, i32* @r28, align 4
  br i1 %v4_100017cc, label %dec_label_pc_100017d8, label %dec_label_pc_10001744

dec_label_pc_100017d8:                            ; preds = %dec_label_pc_100017b8, %dec_label_pc_10001830, %dec_label_pc_10001718
  %v0_100017d8 = load i32, i32* %r23.global-to-local, align 4
  %v3_100017d8 = icmp eq i32 %v0_100017d8, 0
  store i1 %v3_100017d8, i1* %cr3_eq.global-to-local, align 1
  %v0_100017dc.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100017dc.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100017dc.outer

dec_label_pc_100017dc.outer:                      ; preds = %dec_label_pc_10001810, %dec_label_pc_10001948, %dec_label_pc_100017d8
  %v1_100017dc.ph39 = phi i1 [ %v1_100017dc.pre, %dec_label_pc_100017d8 ], [ %v1_10001948, %dec_label_pc_10001948 ], [ %v1_10001810, %dec_label_pc_10001810 ]
  %v0_100017dc.ph40 = phi i1 [ %v0_100017dc.pre, %dec_label_pc_100017d8 ], [ %v0_10001948, %dec_label_pc_10001948 ], [ %v0_10001810, %dec_label_pc_10001810 ]
  %v2_100017dc = or i1 %v1_100017dc.ph39, %v0_100017dc.ph40
  br label %dec_label_pc_100017dc

dec_label_pc_100017dc:                            ; preds = %dec_label_pc_100017dc.outer, %dec_label_pc_100017dc
  br i1 %v2_100017dc, label %dec_label_pc_100017dc, label %dec_label_pc_100017e0

dec_label_pc_100017e0:                            ; preds = %dec_label_pc_10001948, %dec_label_pc_10001810, %dec_label_pc_100017dc
  %v0_100017e0 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100017e0, label %dec_label_pc_100017e4, label %dec_label_pc_1000190c

dec_label_pc_100017e4:                            ; preds = %dec_label_pc_100017e0
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100017ec

dec_label_pc_100017ec:                            ; preds = %dec_label_pc_100017ec.dec_label_pc_100017ec_crit_edge, %dec_label_pc_100017e4
  %v0_100017f0 = phi i32 [ %v0_10001808, %dec_label_pc_100017ec.dec_label_pc_100017ec_crit_edge ], [ 0, %dec_label_pc_100017e4 ]
  %v0_10001800 = phi i32 [ %v0_100017ec.pre, %dec_label_pc_100017ec.dec_label_pc_100017ec_crit_edge ], [ 0, %dec_label_pc_100017e4 ]
  %v1_100017ec = load i32, i32* %r26.global-to-local, align 4
  %v2_100017ec = add i32 %v1_100017ec, %v0_10001800
  %v3_100017ec = inttoptr i32 %v2_100017ec to i32*
  %v4_100017ec = load i32, i32* %v3_100017ec, align 4
  store i32 %v4_100017ec, i32* %r3.global-to-local, align 4
  %v1_100017f0 = add i32 %v0_100017f0, 1
  store i32 %v1_100017f0, i32* %r28.global-to-local, align 4
  %v1_100017f4 = load i32, i32* %r27.global-to-local, align 4
  %v2_100017f4 = add i32 %v1_100017f4, %v0_10001800
  %v3_100017f4 = inttoptr i32 %v2_100017f4 to i32*
  %v4_100017f4 = load i32, i32* %v3_100017f4, align 4
  %v0_100017f8 = load i32, i32* @r31, align 4
  %v1_10001800 = add i32 %v0_10001800, 4
  store i32 %v1_10001800, i32* %r29.global-to-local, align 4
  store i32 268441608, i32* @lr, align 4
  %v4_10001804 = call i32 @function_10009da4(i32 %v4_100017ec, i32 %v4_100017f4, i32 %v0_100017f8, i32 16384)
  store i32 %v4_10001804, i32* %r3.global-to-local, align 4
  %v0_10001808 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001808 = load i32, i32* @r30, align 4
  %v4_10001808 = icmp eq i32 %v0_10001808, %v1_10001808
  br i1 %v4_10001808, label %dec_label_pc_10001810, label %dec_label_pc_100017ec.dec_label_pc_100017ec_crit_edge

dec_label_pc_100017ec.dec_label_pc_100017ec_crit_edge: ; preds = %dec_label_pc_100017ec
  %v0_100017ec.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100017ec

dec_label_pc_10001810:                            ; preds = %dec_label_pc_100017ec
  %v0_10001810 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001810 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10001810 = or i1 %v0_10001810, %v1_10001810
  br i1 %v2_10001810, label %dec_label_pc_100017dc.outer, label %dec_label_pc_100017e0

dec_label_pc_10001830:                            ; preds = %dec_label_pc_10001894, %dec_label_pc_100018b0
  %v0_10001830 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001830 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001830 = add i32 %v1_10001830, %v0_10001830
  %v3_10001830 = inttoptr i32 %v2_10001830 to i32*
  %v4_10001830 = load i32, i32* %v3_10001830, align 4
  store i32 %v4_10001830, i32* @r3, align 4
  %v1_1000183c = add i32 %v0_10001830, 4
  store i32 %v1_1000183c, i32* %r25.global-to-local, align 4
  store i32 268441668, i32* @lr, align 4
  %v0_10001840 = call i32 @function_10009c58()
  store i32 %v0_10001840, i32* %r3.global-to-local, align 4
  %v0_10001844 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001844 = load i32, i32* @r30, align 4
  %v4_10001844 = icmp eq i32 %v0_10001844, %v1_10001844
  %v0_10001848 = load i32, i32* @r28, align 4
  %v1_10001848 = add i32 %v0_10001848, 24
  store i32 %v1_10001848, i32* @r28, align 4
  br i1 %v4_10001844, label %dec_label_pc_100017d8, label %dec_label_pc_10001850

dec_label_pc_10001850:                            ; preds = %dec_label_pc_10001720, %dec_label_pc_10001830
  %v0_1000185c = phi i32 [ %v0_10001844, %dec_label_pc_10001830 ], [ 0, %dec_label_pc_10001720 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_1000185c = add i32 %v0_1000185c, 1
  store i32 %v1_1000185c, i32* %r24.global-to-local, align 4
  store i32 268441700, i32* @lr, align 4
  %v2_10001860 = call i32 @function_1000a1b4(i32 65535, i32 1)
  store i32 %v2_10001860, i32* %r3.global-to-local, align 4
  %v1_10001864 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001864 = load i32, i32* %r27.global-to-local, align 4
  %v3_10001864 = add i32 %v2_10001864, %v1_10001864
  %v4_10001864 = inttoptr i32 %v3_10001864 to i32*
  store i32 %v2_10001860, i32* %v4_10001864, align 4
  %v0_10001868 = call i32 @function_10005f74()
  %v1_10001868 = trunc i32 %v0_10001868 to i16
  %v3_1000186c = load i32, i32* @r28, align 4
  %v4_1000186c = add i32 %v3_1000186c, 2
  %v5_1000186c = inttoptr i32 %v4_1000186c to i16*
  store i16 %v1_10001868, i16* %v5_1000186c, align 2
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268441728, i32* @lr, align 4
  %v3_1000187c = call i32 @function_10009e58(i32 2, i32 2, i32 0)
  store i32 %v3_1000187c, i32* %r3.global-to-local, align 4
  %v3_10001884 = icmp eq i32 %v3_1000187c, -1
  %v1_1000188c = load i32, i32* %r25.global-to-local, align 4
  %v2_1000188c = load i32, i32* %r26.global-to-local, align 4
  %v3_1000188c = add i32 %v2_1000188c, %v1_1000188c
  %v4_1000188c = inttoptr i32 %v3_1000188c to i32*
  store i32 %v3_1000187c, i32* %v4_1000188c, align 4
  br i1 %v3_10001884, label %dec_label_pc_100018b4, label %dec_label_pc_10001894

dec_label_pc_10001894:                            ; preds = %dec_label_pc_10001850
  %v0_10001894 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10001894, i32* %stack_var_-72, align 4
  store i32 268441764, i32* @lr, align 4
  %v0_100018a0 = load i32, i32* %r3.global-to-local, align 4
  %v3_100018a0 = call i32 @function_10009c24(i32 %v0_100018a0, i32 %v2_10001880, i32 16)
  store i32 %v3_100018a0, i32* %r3.global-to-local, align 4
  %v0_100018a4 = load i32, i32* @r28, align 4
  %v1_100018a4 = add i32 %v0_100018a4, 20
  %v2_100018a4 = inttoptr i32 %v1_100018a4 to i8*
  %v3_100018a4 = load i8, i8* %v2_100018a4, align 1
  %v2_100018a8 = icmp ugt i8 %v3_100018a4, 31
  br i1 %v2_100018a8, label %dec_label_pc_10001830, label %dec_label_pc_100018b0

dec_label_pc_100018b0:                            ; preds = %dec_label_pc_10001894
  %v1_10001818 = add i32 %v0_100018a4, 16
  %v2_10001818 = inttoptr i32 %v1_10001818 to i32*
  %v3_10001818 = load i32, i32* %v2_10001818, align 4
  store i32 %v3_10001818, i32* %r29.global-to-local, align 4
  %v0_1000181c = call i32 @function_10005f74()
  store i32 %v0_1000181c, i32* %r3.global-to-local, align 4
  %v0_10001820 = load i32, i32* @r28, align 4
  %v1_10001820 = add i32 %v0_10001820, 20
  %v2_10001820 = inttoptr i32 %v1_10001820 to i8*
  %v3_10001820 = load i8, i8* %v2_10001820, align 1
  %tmp43 = urem i8 %v3_10001820, 64
  %v2_10001824 = zext i8 %tmp43 to i32
  %v3_10001824 = lshr i32 %v0_1000181c, %v2_10001824
  %v0_10001828 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001828 = add i32 %v3_10001824, %v0_10001828
  store i32 %v2_10001828, i32* %r3.global-to-local, align 4
  %v2_1000182c = add i32 %v0_10001820, 4
  %v3_1000182c = inttoptr i32 %v2_1000182c to i32*
  store i32 %v2_10001828, i32* %v3_1000182c, align 4
  br label %dec_label_pc_10001830

dec_label_pc_100018b4:                            ; preds = %dec_label_pc_10001744, %dec_label_pc_10001850
  %v1_100018c8 = call %0 @__asm_mtcrf(i32 24, i32 %v0_10001620)
  store i32 %v0_1000164c, i32* %r28.global-to-local, align 4
  store i32 %v0_10001654, i32* %r29.global-to-local, align 4
  %v0_100018fc = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100018fc

dec_label_pc_10001900:                            ; preds = %dec_label_pc_10001618
  %v0_10001900 = call i32 @function_10005f74()
  store i32 %v0_10001900, i32* %r3.global-to-local, align 4
  %v1_10001904 = urem i32 %v0_10001900, 65536
  store i32 %v1_10001904, i32* %r22.global-to-local, align 4
  br label %dec_label_pc_10001718

dec_label_pc_1000190c:                            ; preds = %dec_label_pc_100017e0
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10001914

dec_label_pc_10001914:                            ; preds = %dec_label_pc_10001914.dec_label_pc_10001914_crit_edge, %dec_label_pc_1000190c
  %v0_1000191c = phi i32 [ %v0_10001940, %dec_label_pc_10001914.dec_label_pc_10001914_crit_edge ], [ 0, %dec_label_pc_1000190c ]
  %v0_10001914 = phi i32 [ %v0_10001914.pre, %dec_label_pc_10001914.dec_label_pc_10001914_crit_edge ], [ 0, %dec_label_pc_1000190c ]
  %v1_10001914 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001914 = add i32 %v1_10001914, %v0_10001914
  %v3_10001914 = inttoptr i32 %v2_10001914 to i32*
  %v4_10001914 = load i32, i32* %v3_10001914, align 4
  store i32 %v4_10001914, i32* @r29, align 4
  %v0_10001918 = load i32, i32* @r31, align 4
  store i32 %v0_10001918, i32* @r4, align 4
  %v1_1000191c = add i32 %v0_1000191c, 1
  store i32 %v1_1000191c, i32* %r25.global-to-local, align 4
  store i32 %v4_10001914, i32* @r3, align 4
  %v0_10001924 = call i32 @function_10006148()
  store i32 %v0_10001924, i32* %r3.global-to-local, align 4
  %v0_10001928 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001928 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001928 = add i32 %v1_10001928, %v0_10001928
  %v3_10001928 = inttoptr i32 %v2_10001928 to i32*
  %v4_10001928 = load i32, i32* %v3_10001928, align 4
  store i32 %v4_10001928, i32* %r3.global-to-local, align 4
  %v0_1000192c = load i32, i32* @r29, align 4
  %v0_10001930 = load i32, i32* @r31, align 4
  %v1_10001938 = add i32 %v0_10001928, 4
  store i32 %v1_10001938, i32* %r28.global-to-local, align 4
  store i32 268441920, i32* @lr, align 4
  %v4_1000193c = call i32 @function_10009da4(i32 %v4_10001928, i32 %v0_1000192c, i32 %v0_10001930, i32 16384)
  store i32 %v4_1000193c, i32* %r3.global-to-local, align 4
  %v0_10001940 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001940 = load i32, i32* @r30, align 4
  %v4_10001940 = icmp eq i32 %v0_10001940, %v1_10001940
  br i1 %v4_10001940, label %dec_label_pc_10001948, label %dec_label_pc_10001914.dec_label_pc_10001914_crit_edge

dec_label_pc_10001914.dec_label_pc_10001914_crit_edge: ; preds = %dec_label_pc_10001914
  %v0_10001914.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10001914

dec_label_pc_10001948:                            ; preds = %dec_label_pc_10001914
  %v0_10001948 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001948 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10001948 = or i1 %v0_10001948, %v1_10001948
  br i1 %v2_10001948, label %dec_label_pc_100017dc.outer, label %dec_label_pc_100017e0

; uselistorder directives
  uselistorder i1 %v1_10001948, { 1, 0 }
  uselistorder i1 %v0_10001948, { 1, 0 }
  uselistorder i32 %v0_10001940, { 1, 0 }
  uselistorder i32 %v0_10001928, { 1, 0 }
  uselistorder i32 %v0_10001830, { 1, 0 }
  uselistorder i1 %v1_10001810, { 1, 0 }
  uselistorder i1 %v0_10001810, { 1, 0 }
  uselistorder i32 %v0_10001808, { 1, 0 }
  uselistorder i32 %v0_10001800, { 2, 0, 1 }
  uselistorder i32 %v0_100017cc, { 1, 0 }
  uselistorder i32 %v0_100017b8, { 1, 0 }
  uselistorder i32 %v2_10001880, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 11, 12, 13, 14, 20, 15, 16, 18, 19, 21, 22, 23, 24, 17, 25, 26, 27, 28, 2, 29, 3, 4, 30, 31, 5, 6, 7, 8, 9, 10, 0, 1 }
  uselistorder i32* %r26.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r25.global-to-local, { 3, 4, 5, 7, 8, 9, 6, 13, 10, 11, 12, 0, 1, 2 }
  uselistorder i32* %r24.global-to-local, { 2, 1, 3, 4, 0 }
  uselistorder i32* %r22.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r21.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 2, 0, 3 }
  uselistorder i1* %cr4_eq.global-to-local, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_100018b4, { 1, 0 }
  uselistorder label %dec_label_pc_10001850, { 1, 0 }
  uselistorder label %dec_label_pc_10001830, { 1, 0 }
  uselistorder label %dec_label_pc_100017dc, { 1, 0 }
  uselistorder label %dec_label_pc_100017dc.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100017d8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100017b8, { 1, 0 }
  uselistorder label %dec_label_pc_10001744, { 1, 0 }
  uselistorder label %dec_label_pc_10001718, { 1, 0 }
}

define i32 @function_10001950(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001950:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr3_lt.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i16 @__decompiler_undefined_function_1()
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-404 = alloca i32, align 4
  %stack_var_-384 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %v0_10001954 = load i32, i32* @lr, align 4
  store i32 %v0_10001954, i32* %r0.global-to-local, align 4
  %v0_10001958 = call i32 @__asm_mfcr()
  store i32 %v0_10001958, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r20.global-to-local, align 4
  %v0_10001968 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10001958, i32* %r21.global-to-local, align 4
  %v0_100019a0 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100019a8 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268442052, i32* @lr, align 4
  %v2_100019c0 = call i32 @function_1000a1b4(i32 16, i32 16)
  store i32 %v2_100019c0, i32* %r22.global-to-local, align 4
  %v0_100019cc = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_100019cc, i32* %r3.global-to-local, align 4
  store i32 268442068, i32* @lr, align 4
  %v2_100019d0 = call i32 @function_1000a1b4(i32 %v0_100019cc, i32 4)
  %v0_100019d4 = load i32, i32* @r28, align 4
  store i32 %v2_100019d0, i32* %r23.global-to-local, align 4
  %v0_100019e4 = load i32, i32* @r29, align 4
  store i32 %v0_100019e4, i32* %r3.global-to-local, align 4
  store i32 268442092, i32* @lr, align 4
  %v4_100019e8 = inttoptr i32 %v0_100019d4 to i32*
  %v5_100019e8 = call i32 @function_100006a8(i32 %v0_100019e4, i32* %v4_100019e8, i32 2, i32 0)
  %v5_100019f8 = trunc i32 %v5_100019e8 to i8
  %v0_10001a00 = load i32, i32* @r28, align 4
  %v0_10001a04 = load i32, i32* @r29, align 4
  store i32 %v0_10001a04, i32* %r3.global-to-local, align 4
  store i32 268442124, i32* @lr, align 4
  %v4_10001a08 = inttoptr i32 %v0_10001a00 to i32*
  %v5_10001a08 = call i32 @function_100006a8(i32 %v0_10001a04, i32* %v4_10001a08, i32 3, i32 65535)
  %v0_10001a0c = load i32, i32* @r28, align 4
  store i32 %v5_10001a08, i32* @r31, align 4
  %v0_10001a1c = load i32, i32* @r29, align 4
  store i32 %v0_10001a1c, i32* %r3.global-to-local, align 4
  store i32 268442148, i32* @lr, align 4
  %v4_10001a20 = inttoptr i32 %v0_10001a0c to i32*
  %v5_10001a20 = call i32 @function_100006a8(i32 %v0_10001a1c, i32* %v4_10001a20, i32 4, i32 64)
  %v0_10001a24 = load i32, i32* @r28, align 4
  %v5_10001a30 = trunc i32 %v5_10001a20 to i8
  %v0_10001a38 = load i32, i32* @r29, align 4
  store i32 %v0_10001a38, i32* %r3.global-to-local, align 4
  store i32 268442176, i32* @lr, align 4
  %v4_10001a3c = inttoptr i32 %v0_10001a24 to i32*
  %v5_10001a3c = call i32 @function_100006a8(i32 %v0_10001a38, i32* %v4_10001a3c, i32 5, i32 1)
  %v1_10001a44 = urem i32 %v5_10001a3c, 256
  %v0_10001a50 = load i32, i32* @r28, align 4
  %v0_10001a58 = load i32, i32* @r29, align 4
  store i32 %v0_10001a58, i32* %r3.global-to-local, align 4
  store i32 268442208, i32* @lr, align 4
  %v4_10001a5c = inttoptr i32 %v0_10001a50 to i32*
  %v5_10001a5c = call i32 @function_100006a8(i32 %v0_10001a58, i32* %v4_10001a5c, i32 7, i32 65535)
  %v0_10001a60 = load i32, i32* @r28, align 4
  %v5_10001a6c = trunc i32 %v5_10001a5c to i16
  %v0_10001a74 = load i32, i32* @r29, align 4
  store i32 %v0_10001a74, i32* %r3.global-to-local, align 4
  store i32 268442236, i32* @lr, align 4
  %v4_10001a78 = inttoptr i32 %v0_10001a60 to i32*
  %v5_10001a78 = call i32 @function_100006a8(i32 %v0_10001a74, i32* %v4_10001a78, i32 11, i32 1)
  %v0_10001a7c = load i32, i32* @r28, align 4
  %v1_10001a80 = urem i32 %v5_10001a78, 256
  %v0_10001a90 = load i32, i32* @r29, align 4
  store i32 %v0_10001a90, i32* %r3.global-to-local, align 4
  store i32 268442264, i32* @lr, align 4
  %v4_10001a94 = inttoptr i32 %v0_10001a7c to i32*
  %v5_10001a94 = call i32 @function_100006a8(i32 %v0_10001a90, i32* %v4_10001a94, i32 12, i32 1)
  %v0_10001a98 = load i32, i32* @r28, align 4
  %v1_10001aa4 = urem i32 %v5_10001a94, 256
  %v0_10001aa8 = load i32, i32* @r29, align 4
  store i32 %v0_10001aa8, i32* %r3.global-to-local, align 4
  store i32 268442288, i32* @lr, align 4
  %v4_10001aac = inttoptr i32 %v0_10001a98 to i32*
  %v5_10001aac = call i32 @function_100006a8(i32 %v0_10001aa8, i32* %v4_10001aac, i32 13, i32 1)
  %v0_10001ab0 = load i32, i32* @r28, align 4
  %v1_10001abc = urem i32 %v5_10001aac, 256
  %v0_10001ac0 = load i32, i32* @r29, align 4
  store i32 %v0_10001ac0, i32* %r3.global-to-local, align 4
  store i32 268442312, i32* @lr, align 4
  %v4_10001ac4 = inttoptr i32 %v0_10001ab0 to i32*
  %v5_10001ac4 = call i32 @function_100006a8(i32 %v0_10001ac0, i32* %v4_10001ac4, i32 14, i32 1)
  %v0_10001ac8 = load i32, i32* @r28, align 4
  %v1_10001ad4 = urem i32 %v5_10001ac4, 256
  %v0_10001ad8 = load i32, i32* @r29, align 4
  store i32 %v0_10001ad8, i32* %r3.global-to-local, align 4
  store i32 268442336, i32* @lr, align 4
  %v4_10001adc = inttoptr i32 %v0_10001ac8 to i32*
  %v5_10001adc = call i32 @function_100006a8(i32 %v0_10001ad8, i32* %v4_10001adc, i32 15, i32 1)
  %v0_10001ae0 = load i32, i32* @r28, align 4
  %v1_10001aec = urem i32 %v5_10001adc, 256
  %v0_10001af0 = load i32, i32* @r29, align 4
  store i32 %v0_10001af0, i32* %r3.global-to-local, align 4
  store i32 268442360, i32* @lr, align 4
  %v4_10001af4 = inttoptr i32 %v0_10001ae0 to i32*
  %v5_10001af4 = call i32 @function_100006a8(i32 %v0_10001af0, i32* %v4_10001af4, i32 16, i32 1)
  %v0_10001b00 = load i32, i32* @r28, align 4
  %v1_10001b04 = urem i32 %v5_10001af4, 256
  %v0_10001b08 = load i32, i32* @r29, align 4
  store i32 %v0_10001b08, i32* %r3.global-to-local, align 4
  store i32 268442384, i32* @lr, align 4
  %v4_10001b0c = inttoptr i32 %v0_10001b00 to i32*
  %v5_10001b0c = call i32 @function_100006a8(i32 %v0_10001b08, i32* %v4_10001b0c, i32 0, i32 768)
  %v0_10001b10 = load i32, i32* @r28, align 4
  store i32 %v5_10001b0c, i32* %r25.global-to-local, align 4
  %v0_10001b20 = load i32, i32* @r29, align 4
  store i32 %v0_10001b20, i32* %r3.global-to-local, align 4
  store i32 268442408, i32* @lr, align 4
  %v4_10001b24 = inttoptr i32 %v0_10001b10 to i32*
  %v5_10001b24 = call i32 @function_100006a8(i32 %v0_10001b20, i32* %v4_10001b24, i32 1, i32 1)
  %v1_10001b2c = urem i32 %v5_10001b24, 256
  store i32 %v1_10001b2c, i32* %r27.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268442428, i32* @lr, align 4
  %v3_10001b38 = call i32 @function_10009e58(i32 2, i32 3, i32 6)
  store i32 %v3_10001b38, i32* %r3.global-to-local, align 4
  %v3_10001b3c = icmp eq i32 %v3_10001b38, -1
  store i1 %v3_10001b3c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10001b38, i32* %r24.global-to-local, align 4
  br i1 %v3_10001b3c, label %dec_label_pc_10001cfc, label %dec_label_pc_10001b48

dec_label_pc_10001b48:                            ; preds = %dec_label_pc_10001950
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10001b54 = ptrtoint i32* %stack_var_-408 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-408, align 4
  store i32 268442468, i32* @lr, align 4
  %v4_10001b60 = call i32 @function_10009e1c(i32 0, i32 3, i32 %v2_10001b54, i32 4)
  store i32 %v4_10001b60, i32* %r3.global-to-local, align 4
  %v3_10001b64 = icmp eq i32 %v4_10001b60, -1
  store i1 %v3_10001b64, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001b64, label %dec_label_pc_10001cf4, label %dec_label_pc_10001b6c

dec_label_pc_10001b6c:                            ; preds = %dec_label_pc_10001b48
  %v0_10001b6c = load i32, i32* %r21.global-to-local, align 4
  %v1_10001b6c = icmp slt i32 %v0_10001b6c, 0
  %v3_10001b6c = icmp eq i32 %v0_10001b6c, 0
  store i1 %v1_10001b6c, i1* %cr3_lt.global-to-local, align 1
  store i1 %v3_10001b6c, i1* %cr3_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_10001b78 = load i32, i32* @r31, align 4
  %v1_10001b78 = urem i32 %v0_10001b78, 65536
  store i32 %v1_10001b78, i32* %r19.global-to-local, align 4
  %tmp49 = icmp slt i32 %v0_10001b6c, 1
  br i1 %tmp49, label %dec_label_pc_10001e94, label %dec_label_pc_10001b80

dec_label_pc_10001b80:                            ; preds = %dec_label_pc_10001b6c
  %v4_10001b80 = sext i16 %v5_10001a6c to i32
  store i32 %v4_10001b80, i32* %r9.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v2_10001c24 = ptrtoint i32* %stack_var_-368 to i32
  %v2_10001c30 = ptrtoint i32* %stack_var_-384 to i32
  %v2_10001c34 = ptrtoint i32* %stack_var_-404 to i32
  %v4_10001c6c = zext i16 %tmp13 to i32
  %v1_10001c9c = and i32 %tmp, 1179648
  %v3_10001db0 = icmp eq i32 %v1_10001a44, 0
  %v4_10001dd0 = sext i8 %v5_100019f8 to i32
  %v4_10001dd8 = sext i8 %v5_10001a30 to i32
  %v1_10001ca0 = and i32 %tmp, 327680
  %v3_10001ca0 = icmp eq i32 %v1_10001ca0, 0
  %v4_10001ca8 = icmp eq i32 %v1_10001c9c, 1179648
  br label %dec_label_pc_10001b8c

dec_label_pc_10001b8c:                            ; preds = %dec_label_pc_10001e80, %dec_label_pc_10001cb4, %dec_label_pc_10001b80
  %v0_10001b8c = load i32, i32* %r25.global-to-local, align 4
  %v1_10001b8c = add i32 %v0_10001b8c, 40
  store i32 %v1_10001b8c, i32* %r26.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268442528, i32* @lr, align 4
  %v3_10001b9c53 = call i32 @function_10009e58(i32 2, i32 1, i32 0)
  store i32 %v3_10001b9c53, i32* %r3.global-to-local, align 4
  %v3_10001ba055 = icmp eq i32 %v3_10001b9c53, -1
  store i1 %v3_10001ba055, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10001b9c53, i32* %r28.global-to-local, align 4
  br i1 %v3_10001ba055, label %dec_label_pc_10001e80, label %dec_label_pc_10001bac

dec_label_pc_10001bac:                            ; preds = %dec_label_pc_10001b8c, %dec_label_pc_10001c8c
  store i32 3, i32* @r4, align 4
  store i32 268442556, i32* @lr, align 4
  %v1_10001bb8 = call i32 @function_10009020(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_10001bc4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001bc4, i32* %r3.global-to-local, align 4
  store i32 268442576, i32* @lr, align 4
  %v2_10001bcc = call i32 @function_10009020(i32 %v0_10001bc4)
  store i32 %v2_10001bcc, i32* %r3.global-to-local, align 4
  %v3_10001bd0 = load i32, i32* %stack_var_-408, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10001bd8 = mul i32 %v3_10001bd0, 24
  store i32 %v1_10001bd8, i32* %r0.global-to-local, align 4
  %v0_10001be0 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001be0 = add i32 %v0_10001be0, %v1_10001bd8
  store i32 %v2_10001be0, i32* %r11.global-to-local, align 4
  %v1_10001be4 = add i32 %v2_10001be0, 20
  %v2_10001be4 = inttoptr i32 %v1_10001be4 to i8*
  %v3_10001be4 = load i8, i8* %v2_10001be4, align 1
  %v4_10001be4 = zext i8 %v3_10001be4 to i32
  store i32 %v4_10001be4, i32* %r9.global-to-local, align 4
  %v3_10001be8 = icmp eq i8 %v3_10001be4, 31
  store i1 %v3_10001be8, i1* %cr7_eq.global-to-local, align 1
  %tmp50 = icmp ult i8 %v3_10001be4, 32
  %v1_10001cc0 = add i32 %v2_10001be0, 16
  %v2_10001cc0 = inttoptr i32 %v1_10001cc0 to i32*
  %v3_10001cc0 = load i32, i32* %v2_10001cc0, align 4
  br i1 %tmp50, label %dec_label_pc_10001cc0, label %dec_label_pc_10001bf0

dec_label_pc_10001bf0:                            ; preds = %dec_label_pc_10001bac
  store i32 %v3_10001cc0, i32* %r0.global-to-local, align 4
  %v0_10001bf8 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10001bf8, label %dec_label_pc_10001ce8, label %dec_label_pc_10001bfc

dec_label_pc_10001bfc:                            ; preds = %dec_label_pc_10001cc0, %dec_label_pc_10001bf0
  %stack_var_-396.0 = phi i32 [ %v2_10001cdc, %dec_label_pc_10001cc0 ], [ %v3_10001cc0, %dec_label_pc_10001bf0 ]
  store i32 %v4_10001b80, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10001c04

dec_label_pc_10001c04:                            ; preds = %dec_label_pc_10001ce8, %dec_label_pc_10001bfc
  %stack_var_-396.1 = phi i32 [ %stack_var_-396.2, %dec_label_pc_10001ce8 ], [ %stack_var_-396.0, %dec_label_pc_10001bfc ]
  %storemerge = phi i16 [ %v1_10001ce8, %dec_label_pc_10001ce8 ], [ %v5_10001a6c, %dec_label_pc_10001bfc ]
  %v0_10001c0c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001c0c, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001c14.19 to i32), i32* @lr, align 4
  %v0_10001c10 = call i32 @function_10009c58()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268442652, i32* @lr, align 4
  %v0_10001c18 = call i32 @function_100094d8()
  store i32 %v0_10001c18, i32* %r3.global-to-local, align 4
  store i32 %v0_10001c18, i32* @r31, align 4
  %v4_10001c60 = icmp eq i32 %tmp14, %stack_var_-396.1
  %v4_10001c70 = zext i16 %storemerge to i32
  %v4_10001c74 = icmp eq i16 %storemerge, %tmp13
  %v4_10001c60.not = xor i1 %v4_10001c60, true
  br label %dec_label_pc_10001c20

dec_label_pc_10001c20:                            ; preds = %dec_label_pc_10001c7c, %dec_label_pc_10001c04
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 %v2_10001c30, i32* %r7.global-to-local, align 4
  store i32 %v2_10001c34, i32* %r8.global-to-local, align 4
  %v0_10001c38 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001c38, i32* %r3.global-to-local, align 4
  store i32 16, i32* %stack_var_-404, align 4
  store i32 268442692, i32* @lr, align 4
  %v6_10001c40 = call i32 @function_10009d64(i32 %v0_10001c38, i32 %v2_10001c24, i32 256, i32 16384, i32 %v2_10001c30, i32 %v2_10001c34)
  store i32 %v6_10001c40, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_10001c4c = icmp eq i32 %v6_10001c40, -1
  store i1 %v3_10001c4c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001c4c, label %dec_label_pc_10001cfc, label %dec_label_pc_10001c58

dec_label_pc_10001c58:                            ; preds = %dec_label_pc_10001c20
  store i32 %tmp14, i32* %r10.global-to-local, align 4
  store i32 %stack_var_-396.1, i32* %r0.global-to-local, align 4
  store i1 %v4_10001c60, i1* %cr7_eq.global-to-local, align 1
  %tmp51 = icmp ult i32 %v6_10001c40, 41
  %or.cond = or i1 %tmp51, %v4_10001c60.not
  br i1 %or.cond, label %dec_label_pc_10001c7c, label %dec_label_pc_10001c6c

dec_label_pc_10001c6c:                            ; preds = %dec_label_pc_10001c58
  store i32 %v4_10001c6c, i32* %r0.global-to-local, align 4
  store i32 %v4_10001c70, i32* %r8.global-to-local, align 4
  store i1 %v4_10001c74, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001c74, label %dec_label_pc_10001c98, label %dec_label_pc_10001c7c

dec_label_pc_10001c7c:                            ; preds = %dec_label_pc_10001c58, %dec_label_pc_10001cb0, %dec_label_pc_10001c6c
  store i32 268442752, i32* @lr, align 4
  %v0_10001c7c = call i32 @function_100094d8()
  %v0_10001c80 = load i32, i32* @r31, align 4
  %v2_10001c80 = sub i32 %v0_10001c7c, %v0_10001c80
  store i32 %v2_10001c80, i32* %r3.global-to-local, align 4
  %v3_10001c84 = icmp eq i32 %v2_10001c80, 10
  store i1 %v3_10001c84, i1* %cr7_eq.global-to-local, align 1
  %tmp52 = icmp slt i32 %v2_10001c80, 11
  br i1 %tmp52, label %dec_label_pc_10001c20, label %dec_label_pc_10001c8c

dec_label_pc_10001c8c:                            ; preds = %dec_label_pc_10001c7c
  %v0_10001c8c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001c8c, i32* %r3.global-to-local, align 4
  store i32 268442772, i32* @lr, align 4
  %v0_10001c90 = call i32 @function_10009108()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268442528, i32* @lr, align 4
  %v3_10001b9c = call i32 @function_10009e58(i32 2, i32 1, i32 0)
  store i32 %v3_10001b9c, i32* %r3.global-to-local, align 4
  %v3_10001ba0 = icmp eq i32 %v3_10001b9c, -1
  store i1 %v3_10001ba0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10001b9c, i32* %r28.global-to-local, align 4
  br i1 %v3_10001ba0, label %dec_label_pc_10001e80, label %dec_label_pc_10001bac

dec_label_pc_10001c98:                            ; preds = %dec_label_pc_10001c6c
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i32 %v1_10001c9c, i32* %r11.global-to-local, align 4
  store i32 1179648, i32* %r0.global-to-local, align 4
  store i1 %v4_10001ca8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001ca8, label %dec_label_pc_10001d5c, label %dec_label_pc_10001cb0

dec_label_pc_10001cb0:                            ; preds = %dec_label_pc_10001c98
  br i1 %v3_10001ca0, label %dec_label_pc_10001c7c, label %dec_label_pc_10001cb4

dec_label_pc_10001cb4:                            ; preds = %dec_label_pc_10001cb0
  %v0_10001cb4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001cb4, i32* %r3.global-to-local, align 4
  store i32 268442812, i32* @lr, align 4
  %v0_10001cb8 = call i32 @function_10009108()
  store i32 %v0_10001cb8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001b8c

dec_label_pc_10001cc0:                            ; preds = %dec_label_pc_10001bac
  store i32 %v3_10001cc0, i32* %r29.global-to-local, align 4
  %v0_10001cc4 = call i32 @function_10005f74()
  store i32 %v0_10001cc4, i32* %r3.global-to-local, align 4
  %v3_10001cc8 = load i32, i32* %stack_var_-408, align 4
  %v1_10001ccc = mul i32 %v3_10001cc8, 24
  %v1_10001cd0 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001cd0 = add i32 %v1_10001cd0, %v1_10001ccc
  store i32 %v2_10001cd0, i32* %r9.global-to-local, align 4
  %v1_10001cd4 = add i32 %v2_10001cd0, 20
  %v2_10001cd4 = inttoptr i32 %v1_10001cd4 to i8*
  %v3_10001cd4 = load i8, i8* %v2_10001cd4, align 1
  %v4_10001cd4 = zext i8 %v3_10001cd4 to i32
  store i32 %v4_10001cd4, i32* %r0.global-to-local, align 4
  %tmp56 = urem i8 %v3_10001cd4, 64
  %v2_10001cd8 = zext i8 %tmp56 to i32
  %v3_10001cd8 = lshr i32 %v0_10001cc4, %v2_10001cd8
  store i32 %v3_10001cd8, i32* %r3.global-to-local, align 4
  %v0_10001cdc = load i32, i32* %r29.global-to-local, align 4
  %v2_10001cdc = add i32 %v3_10001cd8, %v0_10001cdc
  store i32 %v2_10001cdc, i32* %r29.global-to-local, align 4
  %v0_10001ce4 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10001ce4, label %dec_label_pc_10001ce8, label %dec_label_pc_10001bfc

dec_label_pc_10001ce8:                            ; preds = %dec_label_pc_10001cc0, %dec_label_pc_10001bf0
  %stack_var_-396.2 = phi i32 [ %v2_10001cdc, %dec_label_pc_10001cc0 ], [ %v3_10001cc0, %dec_label_pc_10001bf0 ]
  %v0_10001ce8 = call i32 @function_10005f74()
  %v1_10001ce8 = trunc i32 %v0_10001ce8 to i16
  store i32 %v0_10001ce8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001c04

dec_label_pc_10001cf4:                            ; preds = %dec_label_pc_10001b48
  %v0_10001cf4 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001cf4, i32* %r3.global-to-local, align 4
  store i32 268442876, i32* @lr, align 4
  %v0_10001cf8 = call i32 @function_10009108()
  store i32 %v0_10001cf8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001cfc

dec_label_pc_10001cfc:                            ; preds = %dec_label_pc_10001c20, %dec_label_pc_10001950, %dec_label_pc_10001cf4
  store i32 %v0_10001968, i32* %r0.global-to-local, align 4
  %v1_10001d10 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10001958)
  store i32 %v0_100019a0, i32* %r28.global-to-local, align 4
  store i32 %v0_100019a8, i32* %r29.global-to-local, align 4
  %v0_10001d58 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10001d58

dec_label_pc_10001d5c:                            ; preds = %dec_label_pc_10001c98
  %v3_10001d5c = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10001d5c, i32* %r29.global-to-local, align 4
  %v0_10001d60 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10001d60, i32* @r3, align 4
  %v0_10001d64 = load i32, i32* @r30, align 4
  %v1_10001d64 = add i32 %v0_10001d64, 2
  %v2_10001d64 = inttoptr i32 %v1_10001d64 to i16*
  %v3_10001d64 = load i16, i16* %v2_10001d64, align 2
  %v4_10001d64 = zext i16 %v3_10001d64 to i32
  store i32 %v4_10001d64, i32* %r11.global-to-local, align 4
  %v1_10001d68 = mul i32 %v3_10001d5c, 16
  store i32 %v1_10001d68, i32* %r9.global-to-local, align 4
  %v1_10001d6c = mul i32 %v3_10001d5c, 4
  store i32 %v1_10001d6c, i32* @r29, align 4
  %v1_10001d70 = load i32, i32* %r22.global-to-local, align 4
  %v3_10001d70 = add i32 %v1_10001d70, %v1_10001d68
  %v4_10001d70 = inttoptr i32 %v3_10001d70 to i32*
  store i32 %tmp14, i32* %v4_10001d70, align 4
  %v0_10001d74 = load i32, i32* %r22.global-to-local, align 4
  %v1_10001d74 = load i32, i32* %r9.global-to-local, align 4
  %v2_10001d74 = add i32 %v1_10001d74, %v0_10001d74
  store i32 %v2_10001d74, i32* %r9.global-to-local, align 4
  %v0_10001d78 = load i32, i32* %r8.global-to-local, align 4
  %v1_10001d78 = trunc i32 %v0_10001d78 to i16
  %v3_10001d78 = add i32 %v2_10001d74, 14
  %v4_10001d78 = inttoptr i32 %v3_10001d78 to i16*
  store i16 %v1_10001d78, i16* %v4_10001d78, align 2
  %v0_10001d7c = load i32, i32* @r30, align 4
  %v1_10001d7c = add i32 %v0_10001d7c, 4
  %v2_10001d7c = inttoptr i32 %v1_10001d7c to i32*
  %v3_10001d7c = load i32, i32* %v2_10001d7c, align 4
  store i32 %v3_10001d7c, i32* %r0.global-to-local, align 4
  %v0_10001d80 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001d80 = trunc i32 %v0_10001d80 to i16
  %v2_10001d80 = load i32, i32* %r9.global-to-local, align 4
  %v3_10001d80 = add i32 %v2_10001d80, 12
  %v4_10001d80 = inttoptr i32 %v3_10001d80 to i16*
  store i16 %v1_10001d80, i16* %v4_10001d80, align 2
  %v0_10001d84 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001d84 = load i32, i32* %r9.global-to-local, align 4
  %v2_10001d84 = add i32 %v1_10001d84, 4
  %v3_10001d84 = inttoptr i32 %v2_10001d84 to i32*
  store i32 %v0_10001d84, i32* %v3_10001d84, align 4
  %v0_10001d88 = load i32, i32* @r30, align 4
  %v1_10001d88 = add i32 %v0_10001d88, 8
  %v2_10001d88 = inttoptr i32 %v1_10001d88 to i32*
  %v3_10001d88 = load i32, i32* %v2_10001d88, align 4
  store i32 %v3_10001d88, i32* %r0.global-to-local, align 4
  %v1_10001d8c = load i32, i32* %r9.global-to-local, align 4
  %v2_10001d8c = add i32 %v1_10001d8c, 8
  %v3_10001d8c = inttoptr i32 %v2_10001d8c to i32*
  store i32 %v3_10001d88, i32* %v3_10001d8c, align 4
  store i32 268443028, i32* @lr, align 4
  %v0_10001d90 = call i32 @function_1000a05c()
  store i32 %v0_10001d90, i32* %r3.global-to-local, align 4
  %v3_10001d94 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10001d94, i32* %r0.global-to-local, align 4
  %v1_10001d98 = load i32, i32* @r29, align 4
  %v2_10001d98 = load i32, i32* %r23.global-to-local, align 4
  %v3_10001d98 = add i32 %v2_10001d98, %v1_10001d98
  %v4_10001d98 = inttoptr i32 %v3_10001d98 to i32*
  store i32 %v0_10001d90, i32* %v4_10001d98, align 4
  %v0_10001d9c = load i32, i32* %r0.global-to-local, align 4
  %v1_10001d9c = mul i32 %v0_10001d9c, 4
  store i32 %v1_10001d9c, i32* %r0.global-to-local, align 4
  %v0_10001da0 = load i32, i32* %r23.global-to-local, align 4
  %v2_10001da0 = add i32 %v0_10001da0, %v1_10001d9c
  %v3_10001da0 = inttoptr i32 %v2_10001da0 to i32*
  %v4_10001da0 = load i32, i32* %v3_10001da0, align 4
  store i32 %v4_10001da0, i32* @r31, align 4
  store i32 %v1_10001a44, i32* %r0.global-to-local, align 4
  %v1_10001da8 = inttoptr i32 %v4_10001da0 to i32*
  %v2_10001da8 = load i32, i32* %v1_10001da8, align 4
  store i32 %v2_10001da8, i32* %r9.global-to-local, align 4
  %v1_10001dac = add i32 %v4_10001da0, 20
  store i32 %v1_10001dac, i32* @r30, align 4
  store i1 %v3_10001db0, i1* %cr7_eq.global-to-local, align 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10001db8 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10001db8, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_10001dc0 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_10001dc4 = load i32, i32* %r19.global-to-local, align 4
  %v1_10001dc4 = trunc i32 %v0_10001dc4 to i16
  %v2_10001dc4 = load i32, i32* @r31, align 4
  %v3_10001dc4 = add i32 %v2_10001dc4, 4
  %v4_10001dc4 = inttoptr i32 %v3_10001dc4 to i16*
  store i16 %v1_10001dc4, i16* %v4_10001dc4, align 2
  %v1_10001dc8 = load i32, i32* @r31, align 4
  %v2_10001dc8 = inttoptr i32 %v1_10001dc8 to i32*
  store i32 %v1_10001dc0, i32* %v2_10001dc8, align 4
  %v0_10001dcc = load i32, i32* %r26.global-to-local, align 4
  %v1_10001dcc = trunc i32 %v0_10001dcc to i16
  %v2_10001dcc = load i32, i32* @r31, align 4
  %v3_10001dcc = add i32 %v2_10001dcc, 2
  %v4_10001dcc = inttoptr i32 %v3_10001dcc to i16*
  store i16 %v1_10001dcc, i16* %v4_10001dcc, align 2
  store i32 %v4_10001dd0, i32* %r9.global-to-local, align 4
  %v2_10001dd4 = load i32, i32* @r31, align 4
  %v3_10001dd4 = add i32 %v2_10001dd4, 1
  %v4_10001dd4 = inttoptr i32 %v3_10001dd4 to i8*
  store i8 %v5_100019f8, i8* %v4_10001dd4, align 1
  store i32 %v4_10001dd8, i32* %r0.global-to-local, align 4
  %v2_10001ddc = load i32, i32* @r31, align 4
  %v3_10001ddc = add i32 %v2_10001ddc, 8
  %v4_10001ddc = inttoptr i32 %v3_10001ddc to i8*
  store i8 %v5_10001a30, i8* %v4_10001ddc, align 1
  %v0_10001de0 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10001de0, label %dec_label_pc_10001dec, label %dec_label_pc_10001de4

dec_label_pc_10001de4:                            ; preds = %dec_label_pc_10001d5c
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10001de8 = load i32, i32* @r31, align 4
  %v3_10001de8 = add i32 %v2_10001de8, 6
  %v4_10001de8 = inttoptr i32 %v3_10001de8 to i16*
  store i16 16384, i16* %v4_10001de8, align 2
  br label %dec_label_pc_10001dec

dec_label_pc_10001dec:                            ; preds = %dec_label_pc_10001d5c, %dec_label_pc_10001de4
  %v2_10001df4 = load i32, i32* @r31, align 4
  %v3_10001df4 = add i32 %v2_10001df4, 9
  %v4_10001df4 = inttoptr i32 %v3_10001df4 to i8*
  store i8 6, i8* %v4_10001df4, align 1
  %v3_10001df8 = load i32, i32* @global_var_1001c298.14, align 4
  store i32 %v3_10001df8, i32* %r0.global-to-local, align 4
  %v1_10001dfc = load i32, i32* @r31, align 4
  %v2_10001dfc = add i32 %v1_10001dfc, 12
  %v3_10001dfc = inttoptr i32 %v2_10001dfc to i32*
  store i32 %v3_10001df8, i32* %v3_10001dfc, align 4
  %v3_10001e00 = load i32, i32* %stack_var_-408, align 4
  %v1_10001e04 = mul i32 %v3_10001e00, 16
  store i32 %v1_10001e04, i32* %r9.global-to-local, align 4
  %v1_10001e08 = load i32, i32* %r22.global-to-local, align 4
  %v2_10001e08 = add i32 %v1_10001e08, %v1_10001e04
  %v3_10001e08 = inttoptr i32 %v2_10001e08 to i32*
  %v4_10001e08 = load i32, i32* %v3_10001e08, align 4
  store i32 %v4_10001e08, i32* %r0.global-to-local, align 4
  store i32 %v2_10001e08, i32* %r9.global-to-local, align 4
  %v1_10001e10 = add i32 %v2_10001e08, 12
  %v2_10001e10 = inttoptr i32 %v1_10001e10 to i16*
  %v3_10001e10 = load i16, i16* %v2_10001e10, align 2
  %v4_10001e10 = zext i16 %v3_10001e10 to i32
  store i32 %v4_10001e10, i32* %r11.global-to-local, align 4
  %v1_10001e14 = load i32, i32* @r31, align 4
  %v2_10001e14 = add i32 %v1_10001e14, 16
  %v3_10001e14 = inttoptr i32 %v2_10001e14 to i32*
  store i32 %v4_10001e08, i32* %v3_10001e14, align 4
  %v0_10001e18 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001e18 = trunc i32 %v0_10001e18 to i16
  %v2_10001e18 = load i32, i32* @r31, align 4
  %v3_10001e18 = add i32 %v2_10001e18, 20
  %v4_10001e18 = inttoptr i32 %v3_10001e18 to i16*
  store i16 %v1_10001e18, i16* %v4_10001e18, align 2
  %v0_10001e1c = load i32, i32* %r9.global-to-local, align 4
  %v1_10001e1c = add i32 %v0_10001e1c, 8
  %v2_10001e1c = inttoptr i32 %v1_10001e1c to i32*
  %v3_10001e1c = load i32, i32* %v2_10001e1c, align 4
  store i32 %v3_10001e1c, i32* %r0.global-to-local, align 4
  %v0_10001e20 = load i32, i32* @r30, align 4
  %v1_10001e20 = add i32 %v0_10001e20, 12
  %v2_10001e20 = inttoptr i32 %v1_10001e20 to i32*
  %v3_10001e20 = load i32, i32* %v2_10001e20, align 4
  store i32 %v3_10001e20, i32* %r11.global-to-local, align 4
  %v2_10001e24 = add i32 %v0_10001e20, 4
  %v3_10001e24 = inttoptr i32 %v2_10001e24 to i32*
  store i32 %v3_10001e1c, i32* %v3_10001e24, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_10001e2c = call i32 @__asm_rlwimi(i32 8, i32 28, i32 0, i32 3)
  store i32 %v1_10001e2c, i32* %r11.global-to-local, align 4
  %v0_10001e30 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001e30 = add i32 %v0_10001e30, 14
  %v2_10001e30 = inttoptr i32 %v1_10001e30 to i16*
  %v3_10001e30 = load i16, i16* %v2_10001e30, align 2
  %v4_10001e30 = zext i16 %v3_10001e30 to i32
  store i32 %v4_10001e30, i32* %r0.global-to-local, align 4
  %v1_10001e34 = add i32 %v0_10001e30, 4
  %v2_10001e34 = inttoptr i32 %v1_10001e34 to i32*
  %v3_10001e34 = load i32, i32* %v2_10001e34, align 4
  store i32 %v3_10001e34, i32* %r10.global-to-local, align 4
  %v1_10001e38 = or i32 %v1_10001e2c, 1114112
  store i32 %v1_10001e38, i32* %r11.global-to-local, align 4
  %v2_10001e3c = load i32, i32* @r30, align 4
  %v3_10001e3c = add i32 %v2_10001e3c, 2
  %v4_10001e3c = inttoptr i32 %v3_10001e3c to i16*
  store i16 %v3_10001e30, i16* %v4_10001e3c, align 2
  %v0_10001e40 = load i32, i32* %r10.global-to-local, align 4
  %v1_10001e40 = load i32, i32* @r30, align 4
  %v2_10001e40 = add i32 %v1_10001e40, 8
  %v3_10001e40 = inttoptr i32 %v2_10001e40 to i32*
  store i32 %v0_10001e40, i32* %v3_10001e40, align 4
  %v0_10001e44 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001e44 = load i32, i32* @r30, align 4
  %v2_10001e44 = add i32 %v1_10001e44, 12
  %v3_10001e44 = inttoptr i32 %v2_10001e44 to i32*
  store i32 %v0_10001e44, i32* %v3_10001e44, align 4
  %v0_10001e48 = call i32 @function_10005f74()
  %v1_10001e48 = trunc i32 %v0_10001e48 to i16
  store i32 %v1_10001a80, i32* %r9.global-to-local, align 4
  %v3_10001e50 = load i32, i32* @r30, align 4
  %v4_10001e50 = add i32 %v3_10001e50, 14
  %v5_10001e50 = inttoptr i32 %v4_10001e50 to i16*
  store i16 %v1_10001e48, i16* %v5_10001e50, align 2
  %v0_10001e54 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10001e54, i32* @r4, align 4
  %v0_10001e58 = load i32, i32* @r31, align 4
  %v1_10001e58 = add i32 %v0_10001e58, 40
  store i32 %v1_10001e58, i32* @r3, align 4
  %v0_10001e5c = load i32, i32* @r30, align 4
  %v1_10001e5c = add i32 %v0_10001e5c, 12
  %v2_10001e5c = inttoptr i32 %v1_10001e5c to i32*
  %v3_10001e5c = load i32, i32* %v2_10001e5c, align 4
  store i32 %v3_10001e5c, i32* %r0.global-to-local, align 4
  %v1_10001e60 = call i32 @__asm_rlwimi(i32 %v1_10001a80, i32 21, i32 10, i32 10)
  store i32 %v1_10001e60, i32* %r0.global-to-local, align 4
  %v1_10001e64 = call i32 @__asm_rlwimi(i32 %v1_10001aa4, i32 20, i32 11, i32 11)
  store i32 %v1_10001e64, i32* %r0.global-to-local, align 4
  %v1_10001e68 = call i32 @__asm_rlwimi(i32 %v1_10001abc, i32 19, i32 12, i32 12)
  store i32 %v1_10001e68, i32* %r0.global-to-local, align 4
  %v1_10001e6c = call i32 @__asm_rlwimi(i32 %v1_10001ad4, i32 18, i32 13, i32 13)
  store i32 %v1_10001e6c, i32* %r0.global-to-local, align 4
  %v1_10001e70 = call i32 @__asm_rlwimi(i32 %v1_10001aec, i32 17, i32 14, i32 14)
  store i32 %v1_10001e70, i32* %r0.global-to-local, align 4
  %v1_10001e74 = call i32 @__asm_rlwimi(i32 %v1_10001b04, i32 16, i32 15, i32 15)
  store i32 %v1_10001e74, i32* %r0.global-to-local, align 4
  %v1_10001e78 = load i32, i32* @r30, align 4
  %v2_10001e78 = add i32 %v1_10001e78, 12
  %v3_10001e78 = inttoptr i32 %v2_10001e78 to i32*
  store i32 %v1_10001e74, i32* %v3_10001e78, align 4
  %v0_10001e7c = call i32 @function_10006148()
  store i32 %v0_10001e7c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001e80

dec_label_pc_10001e80:                            ; preds = %dec_label_pc_10001b8c, %dec_label_pc_10001c8c, %dec_label_pc_10001dec
  %v3_10001e80 = load i32, i32* %stack_var_-408, align 4
  %v1_10001e84 = add i32 %v3_10001e80, 1
  store i32 %v1_10001e84, i32* %r9.global-to-local, align 4
  %v1_10001e88 = load i32, i32* %r21.global-to-local, align 4
  %v2_10001e88 = icmp slt i32 %v1_10001e84, %v1_10001e88
  %v4_10001e88 = icmp eq i32 %v1_10001e84, %v1_10001e88
  store i1 %v4_10001e88, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10001e84, i32* %stack_var_-408, align 4
  br i1 %v2_10001e88, label %dec_label_pc_10001b8c, label %dec_label_pc_10001e94.loopexit

dec_label_pc_10001e94.loopexit:                   ; preds = %dec_label_pc_10001e80
  %v0_10001ea0.pre.pre = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_10001ea0.pre.pre = load i1, i1* %cr3_lt.global-to-local, align 1
  br label %dec_label_pc_10001e94

dec_label_pc_10001e94:                            ; preds = %dec_label_pc_10001e94.loopexit, %dec_label_pc_10001b6c
  %v1_10001ea0.pre = phi i1 [ %v1_10001ea0.pre.pre, %dec_label_pc_10001e94.loopexit ], [ %v1_10001b6c, %dec_label_pc_10001b6c ]
  %v0_10001ea0.pre = phi i1 [ %v0_10001ea0.pre.pre, %dec_label_pc_10001e94.loopexit ], [ %v3_10001b6c, %dec_label_pc_10001b6c ]
  %v0_10001e94 = load i32, i32* %r27.global-to-local, align 4
  %v3_10001e94 = icmp eq i32 %v0_10001e94, 0
  store i1 %v3_10001e94, i1* %cr2_eq.global-to-local, align 1
  %v0_10001e98 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001e98 = add i32 %v0_10001e98, 40
  store i32 %v1_10001e98, i32* %r26.global-to-local, align 4
  %v1_10001e9c = add i32 %v0_10001e98, 20
  store i32 %v1_10001e9c, i32* @r31, align 4
  br label %dec_label_pc_10001ea0.outer

dec_label_pc_10001ea0.outer:                      ; preds = %dec_label_pc_10001f74, %dec_label_pc_10001e94
  %v1_10001ea0.ph = phi i1 [ %v1_10001ea0.pre, %dec_label_pc_10001e94 ], [ %v1_10001f74, %dec_label_pc_10001f74 ]
  %v0_10001ea0.ph = phi i1 [ %v0_10001ea0.pre, %dec_label_pc_10001e94 ], [ %v0_10001f74, %dec_label_pc_10001f74 ]
  %v2_10001ea0 = or i1 %v1_10001ea0.ph, %v0_10001ea0.ph
  br label %dec_label_pc_10001ea0

dec_label_pc_10001ea0:                            ; preds = %dec_label_pc_10001ea0.outer, %dec_label_pc_10001ea0
  br i1 %v2_10001ea0, label %dec_label_pc_10001ea0, label %dec_label_pc_10001ea4

dec_label_pc_10001ea4:                            ; preds = %dec_label_pc_10001ea0, %dec_label_pc_10001f74
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_10001eb4 = load i32, i32* %r19.global-to-local, align 4
  %v4_10001eb4 = icmp eq i32 %v0_10001eb4, 65535
  store i1 %v4_10001eb4, i1* %cr4_eq.global-to-local, align 1
  %v0_10001eb8 = load i32, i32* @r31, align 4
  %v1_10001eb8 = urem i32 %v0_10001eb8, 65536
  store i32 %v1_10001eb8, i32* @r30, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10001ec4

dec_label_pc_10001ec4:                            ; preds = %dec_label_pc_10001ee0.dec_label_pc_10001ec4_crit_edge, %dec_label_pc_10001ea4
  %v0_10001ed0 = phi i1 [ %v0_10001ed0.pre, %dec_label_pc_10001ee0.dec_label_pc_10001ec4_crit_edge ], [ %v4_10001eb4, %dec_label_pc_10001ea4 ]
  %v0_10001ec4 = phi i32 [ %v1_10001f64, %dec_label_pc_10001ee0.dec_label_pc_10001ec4_crit_edge ], [ 0, %dec_label_pc_10001ea4 ]
  %v1_10001ec4 = mul i32 %v0_10001ec4, 4
  store i32 %v1_10001ec4, i32* %r0.global-to-local, align 4
  %v0_10001ec8 = load i32, i32* %r23.global-to-local, align 4
  %v2_10001ec8 = add i32 %v0_10001ec8, %v1_10001ec4
  %v3_10001ec8 = inttoptr i32 %v2_10001ec8 to i32*
  %v4_10001ec8 = load i32, i32* %v3_10001ec8, align 4
  store i32 %v4_10001ec8, i32* @r29, align 4
  %v1_10001ecc = add i32 %v4_10001ec8, 20
  store i32 %v1_10001ecc, i32* %r28.global-to-local, align 4
  br i1 %v0_10001ed0, label %dec_label_pc_10001f7c, label %dec_label_pc_10001ed4

dec_label_pc_10001ed4:                            ; preds = %dec_label_pc_10001ec4
  %v1_10001ed4 = add i32 %v4_10001ec8, 40
  store i32 %v1_10001ed4, i32* @r3, align 4
  %v0_10001ed8 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10001ed8, i32* @r4, align 4
  %v0_10001edc = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10001edc, label %dec_label_pc_10001ee0, label %dec_label_pc_10001f90

dec_label_pc_10001ee0:                            ; preds = %dec_label_pc_10001ed4, %dec_label_pc_10001f7c, %dec_label_pc_10001f90
  %v2_10001ee0 = phi i32 [ %v4_10001ec8, %dec_label_pc_10001ed4 ], [ %v0_10001f88, %dec_label_pc_10001f7c ], [ %v2_10001ee0.pre, %dec_label_pc_10001f90 ]
  %v0_10001ee0 = load i32, i32* %r27.global-to-local, align 4
  %v1_10001ee0 = trunc i32 %v0_10001ee0 to i16
  %v3_10001ee0 = add i32 %v2_10001ee0, 10
  %v4_10001ee0 = inttoptr i32 %v3_10001ee0 to i16*
  store i16 %v1_10001ee0, i16* %v4_10001ee0, align 2
  %v0_10001ee8 = load i32, i32* @r29, align 4
  store i32 %v0_10001ee8, i32* @r3, align 4
  %v2_10001eec = call i32 @function_100043cc(i32 %v0_10001ee8, i32 20)
  %v3_10001eec = trunc i32 %v2_10001eec to i16
  store i32 %v2_10001eec, i32* %r3.global-to-local, align 4
  %v3_10001ef0 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10001ef0, i32* %r9.global-to-local, align 4
  %v3_10001ef4 = load i32, i32* @r29, align 4
  %v4_10001ef4 = add i32 %v3_10001ef4, 10
  %v5_10001ef4 = inttoptr i32 %v4_10001ef4 to i16*
  store i16 %v3_10001eec, i16* %v5_10001ef4, align 2
  %v0_10001ef8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001ef8, i32* @r4, align 4
  %v0_10001efc = load i32, i32* %r9.global-to-local, align 4
  %v1_10001efc = mul i32 %v0_10001efc, 16
  store i32 %v1_10001efc, i32* %r9.global-to-local, align 4
  %v0_10001f00 = load i32, i32* %r27.global-to-local, align 4
  %v1_10001f00 = trunc i32 %v0_10001f00 to i16
  %v3_10001f00 = add i32 %v0_10001ef8, 16
  %v4_10001f00 = inttoptr i32 %v3_10001f00 to i16*
  store i16 %v1_10001f00, i16* %v4_10001f00, align 2
  %v0_10001f04 = load i32, i32* %r22.global-to-local, align 4
  %v1_10001f04 = load i32, i32* %r9.global-to-local, align 4
  %v2_10001f04 = add i32 %v1_10001f04, %v0_10001f04
  store i32 %v2_10001f04, i32* %r9.global-to-local, align 4
  %v0_10001f08 = load i32, i32* @r30, align 4
  %v1_10001f0c = add i32 %v2_10001f04, 4
  %v2_10001f0c = inttoptr i32 %v1_10001f0c to i32*
  %v3_10001f0c = load i32, i32* %v2_10001f0c, align 4
  store i32 %v3_10001f0c, i32* %r11.global-to-local, align 4
  %v0_10001f10 = load i32, i32* @r31, align 4
  %v0_10001f14 = load i32, i32* @r29, align 4
  store i32 %v0_10001f14, i32* %r3.global-to-local, align 4
  %v1_10001f18 = load i32, i32* %r28.global-to-local, align 4
  %v2_10001f18 = add i32 %v1_10001f18, 4
  %v3_10001f18 = inttoptr i32 %v2_10001f18 to i32*
  store i32 %v3_10001f0c, i32* %v3_10001f18, align 4
  %v0_10001f1c = load i32, i32* %r11.global-to-local, align 4
  %v1_10001f1c = add i32 %v0_10001f1c, 1
  store i32 %v1_10001f1c, i32* %r11.global-to-local, align 4
  %v1_10001f20 = load i32, i32* %r9.global-to-local, align 4
  %v2_10001f20 = add i32 %v1_10001f20, 4
  %v3_10001f20 = inttoptr i32 %v2_10001f20 to i32*
  store i32 %v1_10001f1c, i32* %v3_10001f20, align 4
  %v0_10001f24 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001f24 = add i32 %v0_10001f24, 8
  %v2_10001f24 = inttoptr i32 %v1_10001f24 to i32*
  %v3_10001f24 = load i32, i32* %v2_10001f24, align 4
  store i32 %v3_10001f24, i32* %r0.global-to-local, align 4
  %v1_10001f28 = load i32, i32* %r28.global-to-local, align 4
  %v2_10001f28 = add i32 %v1_10001f28, 8
  %v3_10001f28 = inttoptr i32 %v2_10001f28 to i32*
  store i32 %v3_10001f24, i32* %v3_10001f28, align 4
  %v4_10001f2c = call i32 @function_10004430(i32 %v0_10001f14, i32 %v0_10001ef8, i32 %v0_10001f08, i32 %v0_10001f10)
  %v5_10001f2c = trunc i32 %v4_10001f2c to i16
  store i32 %v4_10001f2c, i32* %r3.global-to-local, align 4
  %v3_10001f30 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10001f30, i32* %r7.global-to-local, align 4
  %v0_10001f34 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001f34 = add i32 %v0_10001f34, 2
  %v2_10001f34 = inttoptr i32 %v1_10001f34 to i16*
  %v3_10001f34 = load i16, i16* %v2_10001f34, align 2
  %v4_10001f34 = zext i16 %v3_10001f34 to i32
  store i32 %v4_10001f34, i32* %r0.global-to-local, align 4
  %v0_10001f38 = load i32, i32* @r29, align 4
  %v1_10001f3c = mul i32 %v3_10001f30, 24
  store i32 %v1_10001f3c, i32* %r7.global-to-local, align 4
  %v4_10001f40 = add i32 %v0_10001f34, 16
  %v5_10001f40 = inttoptr i32 %v4_10001f40 to i16*
  store i16 %v5_10001f2c, i16* %v5_10001f40, align 2
  %v0_10001f44 = load i32, i32* %r26.global-to-local, align 4
  %v0_10001f48 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001f48, i32* %r3.global-to-local, align 4
  %v0_10001f4c = load i32, i32* %r7.global-to-local, align 4
  %v1_10001f4c = load i32, i32* %r20.global-to-local, align 4
  %v2_10001f4c = add i32 %v1_10001f4c, %v0_10001f4c
  store i32 %v2_10001f4c, i32* %r7.global-to-local, align 4
  %v0_10001f54 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001f54 = trunc i32 %v0_10001f54 to i16
  %v3_10001f54 = add i32 %v2_10001f4c, 2
  %v4_10001f54 = inttoptr i32 %v3_10001f54 to i16*
  store i16 %v1_10001f54, i16* %v4_10001f54, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268443488, i32* @lr, align 4
  %v6_10001f5c = call i32 @function_10009ddc(i32 %v0_10001f48, i32 %v0_10001f38, i32 %v0_10001f44, i32 16384, i32 %v2_10001f4c, i32 16)
  store i32 %v6_10001f5c, i32* %r3.global-to-local, align 4
  %v3_10001f60 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10001f60, i32* %r9.global-to-local, align 4
  %v1_10001f64 = add i32 %v3_10001f60, 1
  store i32 %v1_10001f64, i32* %r0.global-to-local, align 4
  %v1_10001f68 = load i32, i32* %r21.global-to-local, align 4
  %v2_10001f68 = icmp slt i32 %v1_10001f64, %v1_10001f68
  %v4_10001f68 = icmp eq i32 %v1_10001f64, %v1_10001f68
  store i1 %v4_10001f68, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10001f64, i32* %stack_var_-408, align 4
  br i1 %v2_10001f68, label %dec_label_pc_10001ee0.dec_label_pc_10001ec4_crit_edge, label %dec_label_pc_10001f74

dec_label_pc_10001ee0.dec_label_pc_10001ec4_crit_edge: ; preds = %dec_label_pc_10001ee0
  %v0_10001ed0.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  br label %dec_label_pc_10001ec4

dec_label_pc_10001f74:                            ; preds = %dec_label_pc_10001ee0
  %v0_10001f74 = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_10001f74 = load i1, i1* %cr3_lt.global-to-local, align 1
  %v2_10001f74 = or i1 %v0_10001f74, %v1_10001f74
  br i1 %v2_10001f74, label %dec_label_pc_10001ea0.outer, label %dec_label_pc_10001ea4

dec_label_pc_10001f7c:                            ; preds = %dec_label_pc_10001ec4
  %v0_10001f7c = call i32 @function_10005f74()
  %v1_10001f7c = trunc i32 %v0_10001f7c to i16
  %v0_10001f80 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10001f80, i32* @r4, align 4
  %v3_10001f84 = load i32, i32* @r29, align 4
  %v4_10001f84 = add i32 %v3_10001f84, 4
  %v5_10001f84 = inttoptr i32 %v4_10001f84 to i16*
  store i16 %v1_10001f7c, i16* %v5_10001f84, align 2
  %v0_10001f88 = load i32, i32* @r29, align 4
  %v1_10001f88 = add i32 %v0_10001f88, 40
  store i32 %v1_10001f88, i32* @r3, align 4
  %v0_10001f8c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10001f8c, label %dec_label_pc_10001ee0, label %dec_label_pc_10001f90

dec_label_pc_10001f90:                            ; preds = %dec_label_pc_10001ed4, %dec_label_pc_10001f7c
  %v0_10001f90 = call i32 @function_10006148()
  store i32 %v0_10001f90, i32* %r3.global-to-local, align 4
  %v2_10001ee0.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10001ee0

; uselistorder directives
  uselistorder i32 %v0_10001f88, { 1, 0 }
  uselistorder i1 %v1_10001f74, { 1, 0 }
  uselistorder i1 %v0_10001f74, { 1, 0 }
  uselistorder i32 %v1_10001f64, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_10001f2c, { 1, 0 }
  uselistorder i32 %v0_10001ef8, { 1, 0, 2 }
  uselistorder i32 %v2_10001eec, { 1, 0 }
  uselistorder i32 %v1_10001ec4, { 1, 0 }
  uselistorder i32 %v1_10001e84, { 0, 2, 1, 3 }
  uselistorder i32 %v2_10001e08, { 1, 0, 2 }
  uselistorder i32 %v1_10001e04, { 1, 0 }
  uselistorder i32 %v1_10001d9c, { 1, 0 }
  uselistorder i32 %v1_10001d68, { 1, 0 }
  uselistorder i32 %v0_10001ce8, { 1, 0 }
  uselistorder i32 %v2_10001cdc, { 1, 2, 0 }
  uselistorder i1 %v4_10001c60, { 1, 0 }
  uselistorder i16 %storemerge, { 1, 0 }
  uselistorder i32 %v3_10001cc0, { 1, 3, 0, 2 }
  uselistorder i32 %v1_10001c9c, { 1, 0 }
  uselistorder i32 %v1_10001a44, { 1, 0 }
  uselistorder i8 %v5_10001a30, { 1, 0 }
  uselistorder i8 %v5_100019f8, { 1, 0 }
  uselistorder i16 %tmp13, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 6, 7, 8, 9, 10, 11, 12, 13, 30, 14, 15, 16, 17, 18, 19, 20, 28, 29, 22, 21, 23, 24, 3, 25, 26, 27, 5, 4, 2, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 0, 1 }
  uselistorder i32* %r28.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 11, 8, 9, 10, 0 }
  uselistorder i32* %r25.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r24.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 25, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 2, 3, 4, 5, 11, 6, 7, 8, 9, 10, 0, 12, 13 }
  uselistorder i1* %cr3_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 0, 2 }
  uselistorder i32 268442528, { 1, 0 }
  uselistorder label %dec_label_pc_10001f90, { 1, 0 }
  uselistorder label %dec_label_pc_10001ee0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10001ea4, { 1, 0 }
  uselistorder label %dec_label_pc_10001ea0, { 1, 0 }
  uselistorder label %dec_label_pc_10001e80, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10001dec, { 1, 0 }
  uselistorder label %dec_label_pc_10001cfc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10001c7c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10001bac, { 1, 0 }
}

define i32 @function_10001f98(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001f98:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr3_lt.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i16 @__decompiler_undefined_function_1()
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-404 = alloca i32, align 4
  %stack_var_-384 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %v0_10001f9c = load i32, i32* @lr, align 4
  store i32 %v0_10001f9c, i32* %r0.global-to-local, align 4
  %v0_10001fa0 = call i32 @__asm_mfcr()
  store i32 %v0_10001fa0, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r20.global-to-local, align 4
  %v0_10001fb0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10001fa0, i32* %r21.global-to-local, align 4
  %v0_10001fe8 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10001ff0 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268443660, i32* @lr, align 4
  %v2_10002008 = call i32 @function_1000a1b4(i32 16, i32 16)
  store i32 %v2_10002008, i32* %r22.global-to-local, align 4
  %v0_10002014 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10002014, i32* %r3.global-to-local, align 4
  store i32 268443676, i32* @lr, align 4
  %v2_10002018 = call i32 @function_1000a1b4(i32 %v0_10002014, i32 4)
  %v0_1000201c = load i32, i32* @r28, align 4
  store i32 %v2_10002018, i32* %r23.global-to-local, align 4
  %v0_1000202c = load i32, i32* @r29, align 4
  store i32 %v0_1000202c, i32* %r3.global-to-local, align 4
  store i32 268443700, i32* @lr, align 4
  %v4_10002030 = inttoptr i32 %v0_1000201c to i32*
  %v5_10002030 = call i32 @function_100006a8(i32 %v0_1000202c, i32* %v4_10002030, i32 2, i32 0)
  %v5_10002040 = trunc i32 %v5_10002030 to i8
  %v0_10002048 = load i32, i32* @r28, align 4
  %v0_1000204c = load i32, i32* @r29, align 4
  store i32 %v0_1000204c, i32* %r3.global-to-local, align 4
  store i32 268443732, i32* @lr, align 4
  %v4_10002050 = inttoptr i32 %v0_10002048 to i32*
  %v5_10002050 = call i32 @function_100006a8(i32 %v0_1000204c, i32* %v4_10002050, i32 3, i32 65535)
  %v0_10002054 = load i32, i32* @r28, align 4
  store i32 %v5_10002050, i32* @r31, align 4
  %v0_10002064 = load i32, i32* @r29, align 4
  store i32 %v0_10002064, i32* %r3.global-to-local, align 4
  store i32 268443756, i32* @lr, align 4
  %v4_10002068 = inttoptr i32 %v0_10002054 to i32*
  %v5_10002068 = call i32 @function_100006a8(i32 %v0_10002064, i32* %v4_10002068, i32 4, i32 64)
  %v0_1000206c = load i32, i32* @r28, align 4
  %v5_10002078 = trunc i32 %v5_10002068 to i8
  %v0_10002080 = load i32, i32* @r29, align 4
  store i32 %v0_10002080, i32* %r3.global-to-local, align 4
  store i32 268443784, i32* @lr, align 4
  %v4_10002084 = inttoptr i32 %v0_1000206c to i32*
  %v5_10002084 = call i32 @function_100006a8(i32 %v0_10002080, i32* %v4_10002084, i32 5, i32 1)
  %v1_1000208c = urem i32 %v5_10002084, 256
  %v0_10002098 = load i32, i32* @r28, align 4
  %v0_100020a0 = load i32, i32* @r29, align 4
  store i32 %v0_100020a0, i32* %r3.global-to-local, align 4
  store i32 268443816, i32* @lr, align 4
  %v4_100020a4 = inttoptr i32 %v0_10002098 to i32*
  %v5_100020a4 = call i32 @function_100006a8(i32 %v0_100020a0, i32* %v4_100020a4, i32 7, i32 65535)
  %v0_100020a8 = load i32, i32* @r28, align 4
  %v5_100020b4 = trunc i32 %v5_100020a4 to i16
  %v0_100020bc = load i32, i32* @r29, align 4
  store i32 %v0_100020bc, i32* %r3.global-to-local, align 4
  store i32 268443844, i32* @lr, align 4
  %v4_100020c0 = inttoptr i32 %v0_100020a8 to i32*
  %v5_100020c0 = call i32 @function_100006a8(i32 %v0_100020bc, i32* %v4_100020c0, i32 11, i32 0)
  %v0_100020c4 = load i32, i32* @r28, align 4
  %v1_100020c8 = urem i32 %v5_100020c0, 256
  %v0_100020d8 = load i32, i32* @r29, align 4
  store i32 %v0_100020d8, i32* %r3.global-to-local, align 4
  store i32 268443872, i32* @lr, align 4
  %v4_100020dc = inttoptr i32 %v0_100020c4 to i32*
  %v5_100020dc = call i32 @function_100006a8(i32 %v0_100020d8, i32* %v4_100020dc, i32 12, i32 1)
  %v0_100020e0 = load i32, i32* @r28, align 4
  %v1_100020ec = urem i32 %v5_100020dc, 256
  %v0_100020f0 = load i32, i32* @r29, align 4
  store i32 %v0_100020f0, i32* %r3.global-to-local, align 4
  store i32 268443896, i32* @lr, align 4
  %v4_100020f4 = inttoptr i32 %v0_100020e0 to i32*
  %v5_100020f4 = call i32 @function_100006a8(i32 %v0_100020f0, i32* %v4_100020f4, i32 13, i32 1)
  %v0_100020f8 = load i32, i32* @r28, align 4
  %v1_10002104 = urem i32 %v5_100020f4, 256
  %v0_10002108 = load i32, i32* @r29, align 4
  store i32 %v0_10002108, i32* %r3.global-to-local, align 4
  store i32 268443920, i32* @lr, align 4
  %v4_1000210c = inttoptr i32 %v0_100020f8 to i32*
  %v5_1000210c = call i32 @function_100006a8(i32 %v0_10002108, i32* %v4_1000210c, i32 14, i32 0)
  %v0_10002110 = load i32, i32* @r28, align 4
  %v1_1000211c = urem i32 %v5_1000210c, 256
  %v0_10002120 = load i32, i32* @r29, align 4
  store i32 %v0_10002120, i32* %r3.global-to-local, align 4
  store i32 268443944, i32* @lr, align 4
  %v4_10002124 = inttoptr i32 %v0_10002110 to i32*
  %v5_10002124 = call i32 @function_100006a8(i32 %v0_10002120, i32* %v4_10002124, i32 15, i32 0)
  %v0_10002128 = load i32, i32* @r28, align 4
  %v1_10002134 = urem i32 %v5_10002124, 256
  %v0_10002138 = load i32, i32* @r29, align 4
  store i32 %v0_10002138, i32* %r3.global-to-local, align 4
  store i32 268443968, i32* @lr, align 4
  %v4_1000213c = inttoptr i32 %v0_10002128 to i32*
  %v5_1000213c = call i32 @function_100006a8(i32 %v0_10002138, i32* %v4_1000213c, i32 16, i32 0)
  %v0_10002148 = load i32, i32* @r28, align 4
  %v1_1000214c = urem i32 %v5_1000213c, 256
  %v0_10002150 = load i32, i32* @r29, align 4
  store i32 %v0_10002150, i32* %r3.global-to-local, align 4
  store i32 268443992, i32* @lr, align 4
  %v4_10002154 = inttoptr i32 %v0_10002148 to i32*
  %v5_10002154 = call i32 @function_100006a8(i32 %v0_10002150, i32* %v4_10002154, i32 0, i32 768)
  %v0_10002158 = load i32, i32* @r28, align 4
  store i32 %v5_10002154, i32* %r25.global-to-local, align 4
  %v0_10002168 = load i32, i32* @r29, align 4
  store i32 %v0_10002168, i32* %r3.global-to-local, align 4
  store i32 268444016, i32* @lr, align 4
  %v4_1000216c = inttoptr i32 %v0_10002158 to i32*
  %v5_1000216c = call i32 @function_100006a8(i32 %v0_10002168, i32* %v4_1000216c, i32 1, i32 1)
  %v1_10002174 = urem i32 %v5_1000216c, 256
  store i32 %v1_10002174, i32* %r27.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268444036, i32* @lr, align 4
  %v3_10002180 = call i32 @function_10009e58(i32 2, i32 3, i32 6)
  store i32 %v3_10002180, i32* %r3.global-to-local, align 4
  %v3_10002184 = icmp eq i32 %v3_10002180, -1
  store i1 %v3_10002184, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10002180, i32* %r24.global-to-local, align 4
  br i1 %v3_10002184, label %dec_label_pc_10002344, label %dec_label_pc_10002190

dec_label_pc_10002190:                            ; preds = %dec_label_pc_10001f98
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1000219c = ptrtoint i32* %stack_var_-408 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-408, align 4
  store i32 268444076, i32* @lr, align 4
  %v4_100021a8 = call i32 @function_10009e1c(i32 0, i32 3, i32 %v2_1000219c, i32 4)
  store i32 %v4_100021a8, i32* %r3.global-to-local, align 4
  %v3_100021ac = icmp eq i32 %v4_100021a8, -1
  store i1 %v3_100021ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100021ac, label %dec_label_pc_1000233c, label %dec_label_pc_100021b4

dec_label_pc_100021b4:                            ; preds = %dec_label_pc_10002190
  %v0_100021b4 = load i32, i32* %r21.global-to-local, align 4
  %v1_100021b4 = icmp slt i32 %v0_100021b4, 0
  %v3_100021b4 = icmp eq i32 %v0_100021b4, 0
  store i1 %v1_100021b4, i1* %cr3_lt.global-to-local, align 1
  store i1 %v3_100021b4, i1* %cr3_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_100021c0 = load i32, i32* @r31, align 4
  %v1_100021c0 = urem i32 %v0_100021c0, 65536
  store i32 %v1_100021c0, i32* %r19.global-to-local, align 4
  %tmp49 = icmp slt i32 %v0_100021b4, 1
  br i1 %tmp49, label %dec_label_pc_100024dc, label %dec_label_pc_100021c8

dec_label_pc_100021c8:                            ; preds = %dec_label_pc_100021b4
  %v4_100021c8 = sext i16 %v5_100020b4 to i32
  store i32 %v4_100021c8, i32* %r9.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v2_1000226c = ptrtoint i32* %stack_var_-368 to i32
  %v2_10002278 = ptrtoint i32* %stack_var_-384 to i32
  %v2_1000227c = ptrtoint i32* %stack_var_-404 to i32
  %v4_100022b4 = zext i16 %tmp13 to i32
  %v1_100022e4 = and i32 %tmp, 1179648
  %v3_100023f8 = icmp eq i32 %v1_1000208c, 0
  %v4_10002418 = sext i8 %v5_10002040 to i32
  %v4_10002420 = sext i8 %v5_10002078 to i32
  %v1_100022e8 = and i32 %tmp, 327680
  %v3_100022e8 = icmp eq i32 %v1_100022e8, 0
  %v4_100022f0 = icmp eq i32 %v1_100022e4, 1179648
  br label %dec_label_pc_100021d4

dec_label_pc_100021d4:                            ; preds = %dec_label_pc_100024c8, %dec_label_pc_100022fc, %dec_label_pc_100021c8
  %v0_100021d4 = load i32, i32* %r25.global-to-local, align 4
  %v1_100021d4 = add i32 %v0_100021d4, 40
  store i32 %v1_100021d4, i32* %r26.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268444136, i32* @lr, align 4
  %v3_100021e453 = call i32 @function_10009e58(i32 2, i32 1, i32 0)
  store i32 %v3_100021e453, i32* %r3.global-to-local, align 4
  %v3_100021e855 = icmp eq i32 %v3_100021e453, -1
  store i1 %v3_100021e855, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_100021e453, i32* %r28.global-to-local, align 4
  br i1 %v3_100021e855, label %dec_label_pc_100024c8, label %dec_label_pc_100021f4

dec_label_pc_100021f4:                            ; preds = %dec_label_pc_100021d4, %dec_label_pc_100022d4
  store i32 3, i32* @r4, align 4
  store i32 268444164, i32* @lr, align 4
  %v1_10002200 = call i32 @function_10009020(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_1000220c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000220c, i32* %r3.global-to-local, align 4
  store i32 268444184, i32* @lr, align 4
  %v2_10002214 = call i32 @function_10009020(i32 %v0_1000220c)
  store i32 %v2_10002214, i32* %r3.global-to-local, align 4
  %v3_10002218 = load i32, i32* %stack_var_-408, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10002220 = mul i32 %v3_10002218, 24
  store i32 %v1_10002220, i32* %r0.global-to-local, align 4
  %v0_10002228 = load i32, i32* %r20.global-to-local, align 4
  %v2_10002228 = add i32 %v0_10002228, %v1_10002220
  store i32 %v2_10002228, i32* %r11.global-to-local, align 4
  %v1_1000222c = add i32 %v2_10002228, 20
  %v2_1000222c = inttoptr i32 %v1_1000222c to i8*
  %v3_1000222c = load i8, i8* %v2_1000222c, align 1
  %v4_1000222c = zext i8 %v3_1000222c to i32
  store i32 %v4_1000222c, i32* %r9.global-to-local, align 4
  %v3_10002230 = icmp eq i8 %v3_1000222c, 31
  store i1 %v3_10002230, i1* %cr7_eq.global-to-local, align 1
  %tmp50 = icmp ult i8 %v3_1000222c, 32
  %v1_10002308 = add i32 %v2_10002228, 16
  %v2_10002308 = inttoptr i32 %v1_10002308 to i32*
  %v3_10002308 = load i32, i32* %v2_10002308, align 4
  br i1 %tmp50, label %dec_label_pc_10002308, label %dec_label_pc_10002238

dec_label_pc_10002238:                            ; preds = %dec_label_pc_100021f4
  store i32 %v3_10002308, i32* %r0.global-to-local, align 4
  %v0_10002240 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10002240, label %dec_label_pc_10002330, label %dec_label_pc_10002244

dec_label_pc_10002244:                            ; preds = %dec_label_pc_10002308, %dec_label_pc_10002238
  %stack_var_-396.0 = phi i32 [ %v2_10002324, %dec_label_pc_10002308 ], [ %v3_10002308, %dec_label_pc_10002238 ]
  store i32 %v4_100021c8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000224c

dec_label_pc_1000224c:                            ; preds = %dec_label_pc_10002330, %dec_label_pc_10002244
  %stack_var_-396.1 = phi i32 [ %stack_var_-396.2, %dec_label_pc_10002330 ], [ %stack_var_-396.0, %dec_label_pc_10002244 ]
  %storemerge = phi i16 [ %v1_10002330, %dec_label_pc_10002330 ], [ %v5_100020b4, %dec_label_pc_10002244 ]
  %v0_10002254 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002254, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000225c.20 to i32), i32* @lr, align 4
  %v0_10002258 = call i32 @function_10009c58()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268444260, i32* @lr, align 4
  %v0_10002260 = call i32 @function_100094d8()
  store i32 %v0_10002260, i32* %r3.global-to-local, align 4
  store i32 %v0_10002260, i32* @r31, align 4
  %v4_100022a8 = icmp eq i32 %tmp14, %stack_var_-396.1
  %v4_100022b8 = zext i16 %storemerge to i32
  %v4_100022bc = icmp eq i16 %storemerge, %tmp13
  %v4_100022a8.not = xor i1 %v4_100022a8, true
  br label %dec_label_pc_10002268

dec_label_pc_10002268:                            ; preds = %dec_label_pc_100022c4, %dec_label_pc_1000224c
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 %v2_10002278, i32* %r7.global-to-local, align 4
  store i32 %v2_1000227c, i32* %r8.global-to-local, align 4
  %v0_10002280 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10002280, i32* %r3.global-to-local, align 4
  store i32 16, i32* %stack_var_-404, align 4
  store i32 268444300, i32* @lr, align 4
  %v6_10002288 = call i32 @function_10009d64(i32 %v0_10002280, i32 %v2_1000226c, i32 256, i32 16384, i32 %v2_10002278, i32 %v2_1000227c)
  store i32 %v6_10002288, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_10002294 = icmp eq i32 %v6_10002288, -1
  store i1 %v3_10002294, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002294, label %dec_label_pc_10002344, label %dec_label_pc_100022a0

dec_label_pc_100022a0:                            ; preds = %dec_label_pc_10002268
  store i32 %tmp14, i32* %r10.global-to-local, align 4
  store i32 %stack_var_-396.1, i32* %r0.global-to-local, align 4
  store i1 %v4_100022a8, i1* %cr7_eq.global-to-local, align 1
  %tmp51 = icmp ult i32 %v6_10002288, 41
  %or.cond = or i1 %tmp51, %v4_100022a8.not
  br i1 %or.cond, label %dec_label_pc_100022c4, label %dec_label_pc_100022b4

dec_label_pc_100022b4:                            ; preds = %dec_label_pc_100022a0
  store i32 %v4_100022b4, i32* %r0.global-to-local, align 4
  store i32 %v4_100022b8, i32* %r8.global-to-local, align 4
  store i1 %v4_100022bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100022bc, label %dec_label_pc_100022e0, label %dec_label_pc_100022c4

dec_label_pc_100022c4:                            ; preds = %dec_label_pc_100022a0, %dec_label_pc_100022f8, %dec_label_pc_100022b4
  store i32 268444360, i32* @lr, align 4
  %v0_100022c4 = call i32 @function_100094d8()
  %v0_100022c8 = load i32, i32* @r31, align 4
  %v2_100022c8 = sub i32 %v0_100022c4, %v0_100022c8
  store i32 %v2_100022c8, i32* %r3.global-to-local, align 4
  %v3_100022cc = icmp eq i32 %v2_100022c8, 10
  store i1 %v3_100022cc, i1* %cr7_eq.global-to-local, align 1
  %tmp52 = icmp slt i32 %v2_100022c8, 11
  br i1 %tmp52, label %dec_label_pc_10002268, label %dec_label_pc_100022d4

dec_label_pc_100022d4:                            ; preds = %dec_label_pc_100022c4
  %v0_100022d4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100022d4, i32* %r3.global-to-local, align 4
  store i32 268444380, i32* @lr, align 4
  %v0_100022d8 = call i32 @function_10009108()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268444136, i32* @lr, align 4
  %v3_100021e4 = call i32 @function_10009e58(i32 2, i32 1, i32 0)
  store i32 %v3_100021e4, i32* %r3.global-to-local, align 4
  %v3_100021e8 = icmp eq i32 %v3_100021e4, -1
  store i1 %v3_100021e8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_100021e4, i32* %r28.global-to-local, align 4
  br i1 %v3_100021e8, label %dec_label_pc_100024c8, label %dec_label_pc_100021f4

dec_label_pc_100022e0:                            ; preds = %dec_label_pc_100022b4
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i32 %v1_100022e4, i32* %r11.global-to-local, align 4
  store i32 1179648, i32* %r0.global-to-local, align 4
  store i1 %v4_100022f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100022f0, label %dec_label_pc_100023a4, label %dec_label_pc_100022f8

dec_label_pc_100022f8:                            ; preds = %dec_label_pc_100022e0
  br i1 %v3_100022e8, label %dec_label_pc_100022c4, label %dec_label_pc_100022fc

dec_label_pc_100022fc:                            ; preds = %dec_label_pc_100022f8
  %v0_100022fc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100022fc, i32* %r3.global-to-local, align 4
  store i32 268444420, i32* @lr, align 4
  %v0_10002300 = call i32 @function_10009108()
  store i32 %v0_10002300, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100021d4

dec_label_pc_10002308:                            ; preds = %dec_label_pc_100021f4
  store i32 %v3_10002308, i32* %r29.global-to-local, align 4
  %v0_1000230c = call i32 @function_10005f74()
  store i32 %v0_1000230c, i32* %r3.global-to-local, align 4
  %v3_10002310 = load i32, i32* %stack_var_-408, align 4
  %v1_10002314 = mul i32 %v3_10002310, 24
  %v1_10002318 = load i32, i32* %r20.global-to-local, align 4
  %v2_10002318 = add i32 %v1_10002318, %v1_10002314
  store i32 %v2_10002318, i32* %r9.global-to-local, align 4
  %v1_1000231c = add i32 %v2_10002318, 20
  %v2_1000231c = inttoptr i32 %v1_1000231c to i8*
  %v3_1000231c = load i8, i8* %v2_1000231c, align 1
  %v4_1000231c = zext i8 %v3_1000231c to i32
  store i32 %v4_1000231c, i32* %r0.global-to-local, align 4
  %tmp56 = urem i8 %v3_1000231c, 64
  %v2_10002320 = zext i8 %tmp56 to i32
  %v3_10002320 = lshr i32 %v0_1000230c, %v2_10002320
  store i32 %v3_10002320, i32* %r3.global-to-local, align 4
  %v0_10002324 = load i32, i32* %r29.global-to-local, align 4
  %v2_10002324 = add i32 %v3_10002320, %v0_10002324
  store i32 %v2_10002324, i32* %r29.global-to-local, align 4
  %v0_1000232c = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1000232c, label %dec_label_pc_10002330, label %dec_label_pc_10002244

dec_label_pc_10002330:                            ; preds = %dec_label_pc_10002308, %dec_label_pc_10002238
  %stack_var_-396.2 = phi i32 [ %v2_10002324, %dec_label_pc_10002308 ], [ %v3_10002308, %dec_label_pc_10002238 ]
  %v0_10002330 = call i32 @function_10005f74()
  %v1_10002330 = trunc i32 %v0_10002330 to i16
  store i32 %v0_10002330, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000224c

dec_label_pc_1000233c:                            ; preds = %dec_label_pc_10002190
  %v0_1000233c = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_1000233c, i32* %r3.global-to-local, align 4
  store i32 268444484, i32* @lr, align 4
  %v0_10002340 = call i32 @function_10009108()
  store i32 %v0_10002340, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002344

dec_label_pc_10002344:                            ; preds = %dec_label_pc_10002268, %dec_label_pc_10001f98, %dec_label_pc_1000233c
  store i32 %v0_10001fb0, i32* %r0.global-to-local, align 4
  %v1_10002358 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10001fa0)
  store i32 %v0_10001fe8, i32* %r28.global-to-local, align 4
  store i32 %v0_10001ff0, i32* %r29.global-to-local, align 4
  %v0_100023a0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100023a0

dec_label_pc_100023a4:                            ; preds = %dec_label_pc_100022e0
  %v3_100023a4 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_100023a4, i32* %r29.global-to-local, align 4
  %v0_100023a8 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_100023a8, i32* @r3, align 4
  %v0_100023ac = load i32, i32* @r30, align 4
  %v1_100023ac = add i32 %v0_100023ac, 2
  %v2_100023ac = inttoptr i32 %v1_100023ac to i16*
  %v3_100023ac = load i16, i16* %v2_100023ac, align 2
  %v4_100023ac = zext i16 %v3_100023ac to i32
  store i32 %v4_100023ac, i32* %r11.global-to-local, align 4
  %v1_100023b0 = mul i32 %v3_100023a4, 16
  store i32 %v1_100023b0, i32* %r9.global-to-local, align 4
  %v1_100023b4 = mul i32 %v3_100023a4, 4
  store i32 %v1_100023b4, i32* @r29, align 4
  %v1_100023b8 = load i32, i32* %r22.global-to-local, align 4
  %v3_100023b8 = add i32 %v1_100023b8, %v1_100023b0
  %v4_100023b8 = inttoptr i32 %v3_100023b8 to i32*
  store i32 %tmp14, i32* %v4_100023b8, align 4
  %v0_100023bc = load i32, i32* %r22.global-to-local, align 4
  %v1_100023bc = load i32, i32* %r9.global-to-local, align 4
  %v2_100023bc = add i32 %v1_100023bc, %v0_100023bc
  store i32 %v2_100023bc, i32* %r9.global-to-local, align 4
  %v0_100023c0 = load i32, i32* %r8.global-to-local, align 4
  %v1_100023c0 = trunc i32 %v0_100023c0 to i16
  %v3_100023c0 = add i32 %v2_100023bc, 14
  %v4_100023c0 = inttoptr i32 %v3_100023c0 to i16*
  store i16 %v1_100023c0, i16* %v4_100023c0, align 2
  %v0_100023c4 = load i32, i32* @r30, align 4
  %v1_100023c4 = add i32 %v0_100023c4, 4
  %v2_100023c4 = inttoptr i32 %v1_100023c4 to i32*
  %v3_100023c4 = load i32, i32* %v2_100023c4, align 4
  store i32 %v3_100023c4, i32* %r0.global-to-local, align 4
  %v0_100023c8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100023c8 = trunc i32 %v0_100023c8 to i16
  %v2_100023c8 = load i32, i32* %r9.global-to-local, align 4
  %v3_100023c8 = add i32 %v2_100023c8, 12
  %v4_100023c8 = inttoptr i32 %v3_100023c8 to i16*
  store i16 %v1_100023c8, i16* %v4_100023c8, align 2
  %v0_100023cc = load i32, i32* %r0.global-to-local, align 4
  %v1_100023cc = load i32, i32* %r9.global-to-local, align 4
  %v2_100023cc = add i32 %v1_100023cc, 4
  %v3_100023cc = inttoptr i32 %v2_100023cc to i32*
  store i32 %v0_100023cc, i32* %v3_100023cc, align 4
  %v0_100023d0 = load i32, i32* @r30, align 4
  %v1_100023d0 = add i32 %v0_100023d0, 8
  %v2_100023d0 = inttoptr i32 %v1_100023d0 to i32*
  %v3_100023d0 = load i32, i32* %v2_100023d0, align 4
  store i32 %v3_100023d0, i32* %r0.global-to-local, align 4
  %v1_100023d4 = load i32, i32* %r9.global-to-local, align 4
  %v2_100023d4 = add i32 %v1_100023d4, 8
  %v3_100023d4 = inttoptr i32 %v2_100023d4 to i32*
  store i32 %v3_100023d0, i32* %v3_100023d4, align 4
  store i32 268444636, i32* @lr, align 4
  %v0_100023d8 = call i32 @function_1000a05c()
  store i32 %v0_100023d8, i32* %r3.global-to-local, align 4
  %v3_100023dc = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_100023dc, i32* %r0.global-to-local, align 4
  %v1_100023e0 = load i32, i32* @r29, align 4
  %v2_100023e0 = load i32, i32* %r23.global-to-local, align 4
  %v3_100023e0 = add i32 %v2_100023e0, %v1_100023e0
  %v4_100023e0 = inttoptr i32 %v3_100023e0 to i32*
  store i32 %v0_100023d8, i32* %v4_100023e0, align 4
  %v0_100023e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100023e4 = mul i32 %v0_100023e4, 4
  store i32 %v1_100023e4, i32* %r0.global-to-local, align 4
  %v0_100023e8 = load i32, i32* %r23.global-to-local, align 4
  %v2_100023e8 = add i32 %v0_100023e8, %v1_100023e4
  %v3_100023e8 = inttoptr i32 %v2_100023e8 to i32*
  %v4_100023e8 = load i32, i32* %v3_100023e8, align 4
  store i32 %v4_100023e8, i32* @r31, align 4
  store i32 %v1_1000208c, i32* %r0.global-to-local, align 4
  %v1_100023f0 = inttoptr i32 %v4_100023e8 to i32*
  %v2_100023f0 = load i32, i32* %v1_100023f0, align 4
  store i32 %v2_100023f0, i32* %r9.global-to-local, align 4
  %v1_100023f4 = add i32 %v4_100023e8, 20
  store i32 %v1_100023f4, i32* @r30, align 4
  store i1 %v3_100023f8, i1* %cr7_eq.global-to-local, align 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10002400 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10002400, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_10002408 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_1000240c = load i32, i32* %r19.global-to-local, align 4
  %v1_1000240c = trunc i32 %v0_1000240c to i16
  %v2_1000240c = load i32, i32* @r31, align 4
  %v3_1000240c = add i32 %v2_1000240c, 4
  %v4_1000240c = inttoptr i32 %v3_1000240c to i16*
  store i16 %v1_1000240c, i16* %v4_1000240c, align 2
  %v1_10002410 = load i32, i32* @r31, align 4
  %v2_10002410 = inttoptr i32 %v1_10002410 to i32*
  store i32 %v1_10002408, i32* %v2_10002410, align 4
  %v0_10002414 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002414 = trunc i32 %v0_10002414 to i16
  %v2_10002414 = load i32, i32* @r31, align 4
  %v3_10002414 = add i32 %v2_10002414, 2
  %v4_10002414 = inttoptr i32 %v3_10002414 to i16*
  store i16 %v1_10002414, i16* %v4_10002414, align 2
  store i32 %v4_10002418, i32* %r9.global-to-local, align 4
  %v2_1000241c = load i32, i32* @r31, align 4
  %v3_1000241c = add i32 %v2_1000241c, 1
  %v4_1000241c = inttoptr i32 %v3_1000241c to i8*
  store i8 %v5_10002040, i8* %v4_1000241c, align 1
  store i32 %v4_10002420, i32* %r0.global-to-local, align 4
  %v2_10002424 = load i32, i32* @r31, align 4
  %v3_10002424 = add i32 %v2_10002424, 8
  %v4_10002424 = inttoptr i32 %v3_10002424 to i8*
  store i8 %v5_10002078, i8* %v4_10002424, align 1
  %v0_10002428 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10002428, label %dec_label_pc_10002434, label %dec_label_pc_1000242c

dec_label_pc_1000242c:                            ; preds = %dec_label_pc_100023a4
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10002430 = load i32, i32* @r31, align 4
  %v3_10002430 = add i32 %v2_10002430, 6
  %v4_10002430 = inttoptr i32 %v3_10002430 to i16*
  store i16 16384, i16* %v4_10002430, align 2
  br label %dec_label_pc_10002434

dec_label_pc_10002434:                            ; preds = %dec_label_pc_100023a4, %dec_label_pc_1000242c
  %v2_1000243c = load i32, i32* @r31, align 4
  %v3_1000243c = add i32 %v2_1000243c, 9
  %v4_1000243c = inttoptr i32 %v3_1000243c to i8*
  store i8 6, i8* %v4_1000243c, align 1
  %v3_10002440 = load i32, i32* @global_var_1001c298.14, align 4
  store i32 %v3_10002440, i32* %r0.global-to-local, align 4
  %v1_10002444 = load i32, i32* @r31, align 4
  %v2_10002444 = add i32 %v1_10002444, 12
  %v3_10002444 = inttoptr i32 %v2_10002444 to i32*
  store i32 %v3_10002440, i32* %v3_10002444, align 4
  %v3_10002448 = load i32, i32* %stack_var_-408, align 4
  %v1_1000244c = mul i32 %v3_10002448, 16
  store i32 %v1_1000244c, i32* %r9.global-to-local, align 4
  %v1_10002450 = load i32, i32* %r22.global-to-local, align 4
  %v2_10002450 = add i32 %v1_10002450, %v1_1000244c
  %v3_10002450 = inttoptr i32 %v2_10002450 to i32*
  %v4_10002450 = load i32, i32* %v3_10002450, align 4
  store i32 %v4_10002450, i32* %r0.global-to-local, align 4
  store i32 %v2_10002450, i32* %r9.global-to-local, align 4
  %v1_10002458 = add i32 %v2_10002450, 12
  %v2_10002458 = inttoptr i32 %v1_10002458 to i16*
  %v3_10002458 = load i16, i16* %v2_10002458, align 2
  %v4_10002458 = zext i16 %v3_10002458 to i32
  store i32 %v4_10002458, i32* %r11.global-to-local, align 4
  %v1_1000245c = load i32, i32* @r31, align 4
  %v2_1000245c = add i32 %v1_1000245c, 16
  %v3_1000245c = inttoptr i32 %v2_1000245c to i32*
  store i32 %v4_10002450, i32* %v3_1000245c, align 4
  %v0_10002460 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002460 = trunc i32 %v0_10002460 to i16
  %v2_10002460 = load i32, i32* @r31, align 4
  %v3_10002460 = add i32 %v2_10002460, 20
  %v4_10002460 = inttoptr i32 %v3_10002460 to i16*
  store i16 %v1_10002460, i16* %v4_10002460, align 2
  %v0_10002464 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002464 = add i32 %v0_10002464, 8
  %v2_10002464 = inttoptr i32 %v1_10002464 to i32*
  %v3_10002464 = load i32, i32* %v2_10002464, align 4
  store i32 %v3_10002464, i32* %r0.global-to-local, align 4
  %v0_10002468 = load i32, i32* @r30, align 4
  %v1_10002468 = add i32 %v0_10002468, 12
  %v2_10002468 = inttoptr i32 %v1_10002468 to i32*
  %v3_10002468 = load i32, i32* %v2_10002468, align 4
  store i32 %v3_10002468, i32* %r11.global-to-local, align 4
  %v2_1000246c = add i32 %v0_10002468, 4
  %v3_1000246c = inttoptr i32 %v2_1000246c to i32*
  store i32 %v3_10002464, i32* %v3_1000246c, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_10002474 = call i32 @__asm_rlwimi(i32 8, i32 28, i32 0, i32 3)
  store i32 %v1_10002474, i32* %r11.global-to-local, align 4
  %v0_10002478 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002478 = add i32 %v0_10002478, 14
  %v2_10002478 = inttoptr i32 %v1_10002478 to i16*
  %v3_10002478 = load i16, i16* %v2_10002478, align 2
  %v4_10002478 = zext i16 %v3_10002478 to i32
  store i32 %v4_10002478, i32* %r0.global-to-local, align 4
  %v1_1000247c = add i32 %v0_10002478, 4
  %v2_1000247c = inttoptr i32 %v1_1000247c to i32*
  %v3_1000247c = load i32, i32* %v2_1000247c, align 4
  store i32 %v3_1000247c, i32* %r10.global-to-local, align 4
  %v1_10002480 = or i32 %v1_10002474, 1114112
  store i32 %v1_10002480, i32* %r11.global-to-local, align 4
  %v2_10002484 = load i32, i32* @r30, align 4
  %v3_10002484 = add i32 %v2_10002484, 2
  %v4_10002484 = inttoptr i32 %v3_10002484 to i16*
  store i16 %v3_10002478, i16* %v4_10002484, align 2
  %v0_10002488 = load i32, i32* %r10.global-to-local, align 4
  %v1_10002488 = load i32, i32* @r30, align 4
  %v2_10002488 = add i32 %v1_10002488, 8
  %v3_10002488 = inttoptr i32 %v2_10002488 to i32*
  store i32 %v0_10002488, i32* %v3_10002488, align 4
  %v0_1000248c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000248c = load i32, i32* @r30, align 4
  %v2_1000248c = add i32 %v1_1000248c, 12
  %v3_1000248c = inttoptr i32 %v2_1000248c to i32*
  store i32 %v0_1000248c, i32* %v3_1000248c, align 4
  %v0_10002490 = call i32 @function_10005f74()
  %v1_10002490 = trunc i32 %v0_10002490 to i16
  store i32 %v1_100020c8, i32* %r9.global-to-local, align 4
  %v3_10002498 = load i32, i32* @r30, align 4
  %v4_10002498 = add i32 %v3_10002498, 14
  %v5_10002498 = inttoptr i32 %v4_10002498 to i16*
  store i16 %v1_10002490, i16* %v5_10002498, align 2
  %v0_1000249c = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_1000249c, i32* @r4, align 4
  %v0_100024a0 = load i32, i32* @r31, align 4
  %v1_100024a0 = add i32 %v0_100024a0, 40
  store i32 %v1_100024a0, i32* @r3, align 4
  %v0_100024a4 = load i32, i32* @r30, align 4
  %v1_100024a4 = add i32 %v0_100024a4, 12
  %v2_100024a4 = inttoptr i32 %v1_100024a4 to i32*
  %v3_100024a4 = load i32, i32* %v2_100024a4, align 4
  store i32 %v3_100024a4, i32* %r0.global-to-local, align 4
  %v1_100024a8 = call i32 @__asm_rlwimi(i32 %v1_100020c8, i32 21, i32 10, i32 10)
  store i32 %v1_100024a8, i32* %r0.global-to-local, align 4
  %v1_100024ac = call i32 @__asm_rlwimi(i32 %v1_100020ec, i32 20, i32 11, i32 11)
  store i32 %v1_100024ac, i32* %r0.global-to-local, align 4
  %v1_100024b0 = call i32 @__asm_rlwimi(i32 %v1_10002104, i32 19, i32 12, i32 12)
  store i32 %v1_100024b0, i32* %r0.global-to-local, align 4
  %v1_100024b4 = call i32 @__asm_rlwimi(i32 %v1_1000211c, i32 18, i32 13, i32 13)
  store i32 %v1_100024b4, i32* %r0.global-to-local, align 4
  %v1_100024b8 = call i32 @__asm_rlwimi(i32 %v1_10002134, i32 17, i32 14, i32 14)
  store i32 %v1_100024b8, i32* %r0.global-to-local, align 4
  %v1_100024bc = call i32 @__asm_rlwimi(i32 %v1_1000214c, i32 16, i32 15, i32 15)
  store i32 %v1_100024bc, i32* %r0.global-to-local, align 4
  %v1_100024c0 = load i32, i32* @r30, align 4
  %v2_100024c0 = add i32 %v1_100024c0, 12
  %v3_100024c0 = inttoptr i32 %v2_100024c0 to i32*
  store i32 %v1_100024bc, i32* %v3_100024c0, align 4
  %v0_100024c4 = call i32 @function_10006148()
  store i32 %v0_100024c4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100024c8

dec_label_pc_100024c8:                            ; preds = %dec_label_pc_100021d4, %dec_label_pc_100022d4, %dec_label_pc_10002434
  %v3_100024c8 = load i32, i32* %stack_var_-408, align 4
  %v1_100024cc = add i32 %v3_100024c8, 1
  store i32 %v1_100024cc, i32* %r9.global-to-local, align 4
  %v1_100024d0 = load i32, i32* %r21.global-to-local, align 4
  %v2_100024d0 = icmp slt i32 %v1_100024cc, %v1_100024d0
  %v4_100024d0 = icmp eq i32 %v1_100024cc, %v1_100024d0
  store i1 %v4_100024d0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100024cc, i32* %stack_var_-408, align 4
  br i1 %v2_100024d0, label %dec_label_pc_100021d4, label %dec_label_pc_100024dc.loopexit

dec_label_pc_100024dc.loopexit:                   ; preds = %dec_label_pc_100024c8
  %v0_100024e8.pre.pre = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_100024e8.pre.pre = load i1, i1* %cr3_lt.global-to-local, align 1
  br label %dec_label_pc_100024dc

dec_label_pc_100024dc:                            ; preds = %dec_label_pc_100024dc.loopexit, %dec_label_pc_100021b4
  %v1_100024e8.pre = phi i1 [ %v1_100024e8.pre.pre, %dec_label_pc_100024dc.loopexit ], [ %v1_100021b4, %dec_label_pc_100021b4 ]
  %v0_100024e8.pre = phi i1 [ %v0_100024e8.pre.pre, %dec_label_pc_100024dc.loopexit ], [ %v3_100021b4, %dec_label_pc_100021b4 ]
  %v0_100024dc = load i32, i32* %r27.global-to-local, align 4
  %v3_100024dc = icmp eq i32 %v0_100024dc, 0
  store i1 %v3_100024dc, i1* %cr2_eq.global-to-local, align 1
  %v0_100024e0 = load i32, i32* %r25.global-to-local, align 4
  %v1_100024e0 = add i32 %v0_100024e0, 40
  store i32 %v1_100024e0, i32* %r26.global-to-local, align 4
  %v1_100024e4 = add i32 %v0_100024e0, 20
  store i32 %v1_100024e4, i32* @r31, align 4
  br label %dec_label_pc_100024e8.outer

dec_label_pc_100024e8.outer:                      ; preds = %dec_label_pc_100025bc, %dec_label_pc_100024dc
  %v1_100024e8.ph = phi i1 [ %v1_100024e8.pre, %dec_label_pc_100024dc ], [ %v1_100025bc, %dec_label_pc_100025bc ]
  %v0_100024e8.ph = phi i1 [ %v0_100024e8.pre, %dec_label_pc_100024dc ], [ %v0_100025bc, %dec_label_pc_100025bc ]
  %v2_100024e8 = or i1 %v1_100024e8.ph, %v0_100024e8.ph
  br label %dec_label_pc_100024e8

dec_label_pc_100024e8:                            ; preds = %dec_label_pc_100024e8.outer, %dec_label_pc_100024e8
  br i1 %v2_100024e8, label %dec_label_pc_100024e8, label %dec_label_pc_100024ec

dec_label_pc_100024ec:                            ; preds = %dec_label_pc_100024e8, %dec_label_pc_100025bc
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_100024fc = load i32, i32* %r19.global-to-local, align 4
  %v4_100024fc = icmp eq i32 %v0_100024fc, 65535
  store i1 %v4_100024fc, i1* %cr4_eq.global-to-local, align 1
  %v0_10002500 = load i32, i32* @r31, align 4
  %v1_10002500 = urem i32 %v0_10002500, 65536
  store i32 %v1_10002500, i32* @r30, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000250c

dec_label_pc_1000250c:                            ; preds = %dec_label_pc_10002528.dec_label_pc_1000250c_crit_edge, %dec_label_pc_100024ec
  %v0_10002518 = phi i1 [ %v0_10002518.pre, %dec_label_pc_10002528.dec_label_pc_1000250c_crit_edge ], [ %v4_100024fc, %dec_label_pc_100024ec ]
  %v0_1000250c = phi i32 [ %v1_100025ac, %dec_label_pc_10002528.dec_label_pc_1000250c_crit_edge ], [ 0, %dec_label_pc_100024ec ]
  %v1_1000250c = mul i32 %v0_1000250c, 4
  store i32 %v1_1000250c, i32* %r0.global-to-local, align 4
  %v0_10002510 = load i32, i32* %r23.global-to-local, align 4
  %v2_10002510 = add i32 %v0_10002510, %v1_1000250c
  %v3_10002510 = inttoptr i32 %v2_10002510 to i32*
  %v4_10002510 = load i32, i32* %v3_10002510, align 4
  store i32 %v4_10002510, i32* @r29, align 4
  %v1_10002514 = add i32 %v4_10002510, 20
  store i32 %v1_10002514, i32* %r28.global-to-local, align 4
  br i1 %v0_10002518, label %dec_label_pc_100025c4, label %dec_label_pc_1000251c

dec_label_pc_1000251c:                            ; preds = %dec_label_pc_1000250c
  %v1_1000251c = add i32 %v4_10002510, 40
  store i32 %v1_1000251c, i32* @r3, align 4
  %v0_10002520 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10002520, i32* @r4, align 4
  %v0_10002524 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002524, label %dec_label_pc_10002528, label %dec_label_pc_100025d8

dec_label_pc_10002528:                            ; preds = %dec_label_pc_1000251c, %dec_label_pc_100025c4, %dec_label_pc_100025d8
  %v2_10002528 = phi i32 [ %v4_10002510, %dec_label_pc_1000251c ], [ %v0_100025d0, %dec_label_pc_100025c4 ], [ %v2_10002528.pre, %dec_label_pc_100025d8 ]
  %v0_10002528 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002528 = trunc i32 %v0_10002528 to i16
  %v3_10002528 = add i32 %v2_10002528, 10
  %v4_10002528 = inttoptr i32 %v3_10002528 to i16*
  store i16 %v1_10002528, i16* %v4_10002528, align 2
  %v0_10002530 = load i32, i32* @r29, align 4
  store i32 %v0_10002530, i32* @r3, align 4
  %v2_10002534 = call i32 @function_100043cc(i32 %v0_10002530, i32 20)
  %v3_10002534 = trunc i32 %v2_10002534 to i16
  store i32 %v2_10002534, i32* %r3.global-to-local, align 4
  %v3_10002538 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10002538, i32* %r9.global-to-local, align 4
  %v3_1000253c = load i32, i32* @r29, align 4
  %v4_1000253c = add i32 %v3_1000253c, 10
  %v5_1000253c = inttoptr i32 %v4_1000253c to i16*
  store i16 %v3_10002534, i16* %v5_1000253c, align 2
  %v0_10002540 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002540, i32* @r4, align 4
  %v0_10002544 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002544 = mul i32 %v0_10002544, 16
  store i32 %v1_10002544, i32* %r9.global-to-local, align 4
  %v0_10002548 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002548 = trunc i32 %v0_10002548 to i16
  %v3_10002548 = add i32 %v0_10002540, 16
  %v4_10002548 = inttoptr i32 %v3_10002548 to i16*
  store i16 %v1_10002548, i16* %v4_10002548, align 2
  %v0_1000254c = load i32, i32* %r22.global-to-local, align 4
  %v1_1000254c = load i32, i32* %r9.global-to-local, align 4
  %v2_1000254c = add i32 %v1_1000254c, %v0_1000254c
  store i32 %v2_1000254c, i32* %r9.global-to-local, align 4
  %v0_10002550 = load i32, i32* @r30, align 4
  %v1_10002554 = add i32 %v2_1000254c, 4
  %v2_10002554 = inttoptr i32 %v1_10002554 to i32*
  %v3_10002554 = load i32, i32* %v2_10002554, align 4
  store i32 %v3_10002554, i32* %r11.global-to-local, align 4
  %v0_10002558 = load i32, i32* @r31, align 4
  %v0_1000255c = load i32, i32* @r29, align 4
  store i32 %v0_1000255c, i32* %r3.global-to-local, align 4
  %v1_10002560 = load i32, i32* %r28.global-to-local, align 4
  %v2_10002560 = add i32 %v1_10002560, 4
  %v3_10002560 = inttoptr i32 %v2_10002560 to i32*
  store i32 %v3_10002554, i32* %v3_10002560, align 4
  %v0_10002564 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002564 = add i32 %v0_10002564, 1
  store i32 %v1_10002564, i32* %r11.global-to-local, align 4
  %v1_10002568 = load i32, i32* %r9.global-to-local, align 4
  %v2_10002568 = add i32 %v1_10002568, 4
  %v3_10002568 = inttoptr i32 %v2_10002568 to i32*
  store i32 %v1_10002564, i32* %v3_10002568, align 4
  %v0_1000256c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000256c = add i32 %v0_1000256c, 8
  %v2_1000256c = inttoptr i32 %v1_1000256c to i32*
  %v3_1000256c = load i32, i32* %v2_1000256c, align 4
  store i32 %v3_1000256c, i32* %r0.global-to-local, align 4
  %v1_10002570 = load i32, i32* %r28.global-to-local, align 4
  %v2_10002570 = add i32 %v1_10002570, 8
  %v3_10002570 = inttoptr i32 %v2_10002570 to i32*
  store i32 %v3_1000256c, i32* %v3_10002570, align 4
  %v4_10002574 = call i32 @function_10004430(i32 %v0_1000255c, i32 %v0_10002540, i32 %v0_10002550, i32 %v0_10002558)
  %v5_10002574 = trunc i32 %v4_10002574 to i16
  store i32 %v4_10002574, i32* %r3.global-to-local, align 4
  %v3_10002578 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10002578, i32* %r7.global-to-local, align 4
  %v0_1000257c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000257c = add i32 %v0_1000257c, 2
  %v2_1000257c = inttoptr i32 %v1_1000257c to i16*
  %v3_1000257c = load i16, i16* %v2_1000257c, align 2
  %v4_1000257c = zext i16 %v3_1000257c to i32
  store i32 %v4_1000257c, i32* %r0.global-to-local, align 4
  %v0_10002580 = load i32, i32* @r29, align 4
  %v1_10002584 = mul i32 %v3_10002578, 24
  store i32 %v1_10002584, i32* %r7.global-to-local, align 4
  %v4_10002588 = add i32 %v0_1000257c, 16
  %v5_10002588 = inttoptr i32 %v4_10002588 to i16*
  store i16 %v5_10002574, i16* %v5_10002588, align 2
  %v0_1000258c = load i32, i32* %r26.global-to-local, align 4
  %v0_10002590 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10002590, i32* %r3.global-to-local, align 4
  %v0_10002594 = load i32, i32* %r7.global-to-local, align 4
  %v1_10002594 = load i32, i32* %r20.global-to-local, align 4
  %v2_10002594 = add i32 %v1_10002594, %v0_10002594
  store i32 %v2_10002594, i32* %r7.global-to-local, align 4
  %v0_1000259c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000259c = trunc i32 %v0_1000259c to i16
  %v3_1000259c = add i32 %v2_10002594, 2
  %v4_1000259c = inttoptr i32 %v3_1000259c to i16*
  store i16 %v1_1000259c, i16* %v4_1000259c, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268445096, i32* @lr, align 4
  %v6_100025a4 = call i32 @function_10009ddc(i32 %v0_10002590, i32 %v0_10002580, i32 %v0_1000258c, i32 16384, i32 %v2_10002594, i32 16)
  store i32 %v6_100025a4, i32* %r3.global-to-local, align 4
  %v3_100025a8 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_100025a8, i32* %r9.global-to-local, align 4
  %v1_100025ac = add i32 %v3_100025a8, 1
  store i32 %v1_100025ac, i32* %r0.global-to-local, align 4
  %v1_100025b0 = load i32, i32* %r21.global-to-local, align 4
  %v2_100025b0 = icmp slt i32 %v1_100025ac, %v1_100025b0
  %v4_100025b0 = icmp eq i32 %v1_100025ac, %v1_100025b0
  store i1 %v4_100025b0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100025ac, i32* %stack_var_-408, align 4
  br i1 %v2_100025b0, label %dec_label_pc_10002528.dec_label_pc_1000250c_crit_edge, label %dec_label_pc_100025bc

dec_label_pc_10002528.dec_label_pc_1000250c_crit_edge: ; preds = %dec_label_pc_10002528
  %v0_10002518.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  br label %dec_label_pc_1000250c

dec_label_pc_100025bc:                            ; preds = %dec_label_pc_10002528
  %v0_100025bc = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_100025bc = load i1, i1* %cr3_lt.global-to-local, align 1
  %v2_100025bc = or i1 %v0_100025bc, %v1_100025bc
  br i1 %v2_100025bc, label %dec_label_pc_100024e8.outer, label %dec_label_pc_100024ec

dec_label_pc_100025c4:                            ; preds = %dec_label_pc_1000250c
  %v0_100025c4 = call i32 @function_10005f74()
  %v1_100025c4 = trunc i32 %v0_100025c4 to i16
  %v0_100025c8 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100025c8, i32* @r4, align 4
  %v3_100025cc = load i32, i32* @r29, align 4
  %v4_100025cc = add i32 %v3_100025cc, 4
  %v5_100025cc = inttoptr i32 %v4_100025cc to i16*
  store i16 %v1_100025c4, i16* %v5_100025cc, align 2
  %v0_100025d0 = load i32, i32* @r29, align 4
  %v1_100025d0 = add i32 %v0_100025d0, 40
  store i32 %v1_100025d0, i32* @r3, align 4
  %v0_100025d4 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100025d4, label %dec_label_pc_10002528, label %dec_label_pc_100025d8

dec_label_pc_100025d8:                            ; preds = %dec_label_pc_1000251c, %dec_label_pc_100025c4
  %v0_100025d8 = call i32 @function_10006148()
  store i32 %v0_100025d8, i32* %r3.global-to-local, align 4
  %v2_10002528.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10002528

; uselistorder directives
  uselistorder i32 %v0_100025d0, { 1, 0 }
  uselistorder i1 %v1_100025bc, { 1, 0 }
  uselistorder i1 %v0_100025bc, { 1, 0 }
  uselistorder i32 %v1_100025ac, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_10002574, { 1, 0 }
  uselistorder i32 %v0_10002540, { 1, 0, 2 }
  uselistorder i32 %v2_10002534, { 1, 0 }
  uselistorder i32 %v1_1000250c, { 1, 0 }
  uselistorder i32 %v1_100024cc, { 0, 2, 1, 3 }
  uselistorder i32 %v2_10002450, { 1, 0, 2 }
  uselistorder i32 %v1_1000244c, { 1, 0 }
  uselistorder i32 %v1_100023e4, { 1, 0 }
  uselistorder i32 %v1_100023b0, { 1, 0 }
  uselistorder i32 %v0_10002330, { 1, 0 }
  uselistorder i32 %v2_10002324, { 1, 2, 0 }
  uselistorder i1 %v4_100022a8, { 1, 0 }
  uselistorder i16 %storemerge, { 1, 0 }
  uselistorder i32 %v3_10002308, { 1, 3, 0, 2 }
  uselistorder i32 %v1_100022e4, { 1, 0 }
  uselistorder i32 %v1_1000208c, { 1, 0 }
  uselistorder i8 %v5_10002078, { 1, 0 }
  uselistorder i8 %v5_10002040, { 1, 0 }
  uselistorder i16 %tmp13, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 30, 12, 13, 14, 15, 16, 17, 18, 27, 28, 20, 19, 21, 22, 23, 24, 25, 26, 3, 2, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 1, 0 }
  uselistorder i32* %r28.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 11, 8, 9, 10, 0 }
  uselistorder i32* %r25.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r24.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 25, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 2, 3, 4, 5, 11, 6, 7, 8, 9, 10, 0, 12, 13 }
  uselistorder i1* %cr3_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 0, 2 }
  uselistorder i32 268444136, { 1, 0 }
  uselistorder i32 1179648, { 2, 0, 3, 4, 1, 5 }
  uselistorder label %dec_label_pc_100025d8, { 1, 0 }
  uselistorder label %dec_label_pc_10002528, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100024ec, { 1, 0 }
  uselistorder label %dec_label_pc_100024e8, { 1, 0 }
  uselistorder label %dec_label_pc_100024c8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002434, { 1, 0 }
  uselistorder label %dec_label_pc_10002344, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100022c4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100021f4, { 1, 0 }
}

define i32 @function_100025e0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100025e0:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_100025e4 = load i32, i32* @lr, align 4
  store i32 %v0_100025e4, i32* %r0.global-to-local, align 4
  %v0_100025e8 = call i32 @__asm_mfcr()
  store i32 %v0_100025e8, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_100025f8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_100025e8, i32* %r21.global-to-local, align 4
  %v0_10002638 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10002640 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10002648 = load i32, i32* @r30, align 4
  store i32 268445268, i32* @lr, align 4
  %v2_10002650 = call i32 @function_1000a1b4(i32 4, i32 4)
  store i32 %v2_10002650, i32* %r22.global-to-local, align 4
  %v0_10002658 = load i32, i32* @r28, align 4
  %v0_10002664 = load i32, i32* @r29, align 4
  store i32 %v0_10002664, i32* %r3.global-to-local, align 4
  store i32 268445292, i32* @lr, align 4
  %v4_10002668 = inttoptr i32 %v0_10002658 to i32*
  %v5_10002668 = call i32 @function_100006a8(i32 %v0_10002664, i32* %v4_10002668, i32 2, i32 0)
  %v5_10002678 = trunc i32 %v5_10002668 to i8
  %v0_10002680 = load i32, i32* @r28, align 4
  %v0_10002684 = load i32, i32* @r29, align 4
  store i32 %v0_10002684, i32* %r3.global-to-local, align 4
  store i32 268445324, i32* @lr, align 4
  %v4_10002688 = inttoptr i32 %v0_10002680 to i32*
  %v5_10002688 = call i32 @function_100006a8(i32 %v0_10002684, i32* %v4_10002688, i32 3, i32 65535)
  %v0_1000268c = load i32, i32* @r28, align 4
  store i32 %v5_10002688, i32* %r18.global-to-local, align 4
  %v0_1000269c = load i32, i32* @r29, align 4
  store i32 %v0_1000269c, i32* %r3.global-to-local, align 4
  store i32 268445348, i32* @lr, align 4
  %v4_100026a0 = inttoptr i32 %v0_1000268c to i32*
  %v5_100026a0 = call i32 @function_100006a8(i32 %v0_1000269c, i32* %v4_100026a0, i32 4, i32 64)
  %v0_100026a4 = load i32, i32* @r28, align 4
  %v5_100026b0 = trunc i32 %v5_100026a0 to i8
  %v0_100026b8 = load i32, i32* @r29, align 4
  store i32 %v0_100026b8, i32* %r3.global-to-local, align 4
  store i32 268445376, i32* @lr, align 4
  %v4_100026bc = inttoptr i32 %v0_100026a4 to i32*
  %v5_100026bc = call i32 @function_100006a8(i32 %v0_100026b8, i32* %v4_100026bc, i32 5, i32 0)
  %v0_100026cc = load i32, i32* @r28, align 4
  %v1_100026d0 = urem i32 %v5_100026bc, 256
  store i32 %v1_100026d0, i32* @r31, align 4
  %v0_100026d4 = load i32, i32* @r29, align 4
  store i32 %v0_100026d4, i32* %r3.global-to-local, align 4
  store i32 268445404, i32* @lr, align 4
  %v4_100026d8 = inttoptr i32 %v0_100026cc to i32*
  %v5_100026d8 = call i32 @function_100006a8(i32 %v0_100026d4, i32* %v4_100026d8, i32 6, i32 65535)
  %v0_100026e0 = load i32, i32* @r28, align 4
  store i32 %v5_100026d8, i32* %r19.global-to-local, align 4
  %v0_100026f0 = load i32, i32* @r29, align 4
  store i32 %v0_100026f0, i32* %r3.global-to-local, align 4
  store i32 268445432, i32* @lr, align 4
  %v4_100026f4 = inttoptr i32 %v0_100026e0 to i32*
  %v5_100026f4 = call i32 @function_100006a8(i32 %v0_100026f0, i32* %v4_100026f4, i32 7, i32 65535)
  %v0_100026fc = load i32, i32* @r28, align 4
  store i32 %v5_100026f4, i32* %r20.global-to-local, align 4
  %v0_1000270c = load i32, i32* @r29, align 4
  store i32 %v0_1000270c, i32* %r3.global-to-local, align 4
  store i32 268445460, i32* @lr, align 4
  %v4_10002710 = inttoptr i32 %v0_100026fc to i32*
  %v5_10002710 = call i32 @function_100006a8(i32 %v0_1000270c, i32* %v4_10002710, i32 17, i32 65535)
  %v0_10002718 = load i32, i32* @r28, align 4
  store i32 %v5_10002710, i32* %r15.global-to-local, align 4
  %v0_10002728 = load i32, i32* @r29, align 4
  store i32 %v0_10002728, i32* %r3.global-to-local, align 4
  store i32 268445488, i32* @lr, align 4
  %v4_1000272c = inttoptr i32 %v0_10002718 to i32*
  %v5_1000272c = call i32 @function_100006a8(i32 %v0_10002728, i32* %v4_1000272c, i32 18, i32 65535)
  %v0_10002730 = load i32, i32* @r28, align 4
  store i32 %v5_1000272c, i32* %r17.global-to-local, align 4
  %v0_10002740 = load i32, i32* @r29, align 4
  store i32 %v0_10002740, i32* %r3.global-to-local, align 4
  store i32 268445512, i32* @lr, align 4
  %v4_10002744 = inttoptr i32 %v0_10002730 to i32*
  %v5_10002744 = call i32 @function_100006a8(i32 %v0_10002740, i32* %v4_10002744, i32 11, i32 0)
  %v0_10002748 = load i32, i32* @r28, align 4
  %v0_10002758 = load i32, i32* @r29, align 4
  store i32 %v0_10002758, i32* %r3.global-to-local, align 4
  store i32 268445536, i32* @lr, align 4
  %v4_1000275c = inttoptr i32 %v0_10002748 to i32*
  %v5_1000275c = call i32 @function_100006a8(i32 %v0_10002758, i32* %v4_1000275c, i32 12, i32 1)
  %v0_10002760 = load i32, i32* @r28, align 4
  store i32 %v5_1000275c, i32* %r14.global-to-local, align 4
  %v0_10002770 = load i32, i32* @r29, align 4
  store i32 %v0_10002770, i32* %r3.global-to-local, align 4
  store i32 268445560, i32* @lr, align 4
  %v4_10002774 = inttoptr i32 %v0_10002760 to i32*
  %v5_10002774 = call i32 @function_100006a8(i32 %v0_10002770, i32* %v4_10002774, i32 13, i32 0)
  %v0_10002778 = load i32, i32* @r28, align 4
  store i32 %v5_10002774, i32* %r24.global-to-local, align 4
  %v0_10002788 = load i32, i32* @r29, align 4
  store i32 %v0_10002788, i32* %r3.global-to-local, align 4
  store i32 268445584, i32* @lr, align 4
  %v4_1000278c = inttoptr i32 %v0_10002778 to i32*
  %v5_1000278c = call i32 @function_100006a8(i32 %v0_10002788, i32* %v4_1000278c, i32 14, i32 0)
  %v0_10002790 = load i32, i32* @r28, align 4
  store i32 %v5_1000278c, i32* %r27.global-to-local, align 4
  %v0_100027a0 = load i32, i32* @r29, align 4
  store i32 %v0_100027a0, i32* %r3.global-to-local, align 4
  store i32 268445608, i32* @lr, align 4
  %v4_100027a4 = inttoptr i32 %v0_10002790 to i32*
  %v5_100027a4 = call i32 @function_100006a8(i32 %v0_100027a0, i32* %v4_100027a4, i32 15, i32 0)
  %v0_100027a8 = load i32, i32* @r28, align 4
  store i32 %v5_100027a4, i32* %r26.global-to-local, align 4
  %v0_100027b8 = load i32, i32* @r29, align 4
  store i32 %v0_100027b8, i32* %r3.global-to-local, align 4
  store i32 268445632, i32* @lr, align 4
  %v4_100027bc = inttoptr i32 %v0_100027a8 to i32*
  %v5_100027bc = call i32 @function_100006a8(i32 %v0_100027b8, i32* %v4_100027bc, i32 16, i32 0)
  %v0_100027c0 = load i32, i32* @r28, align 4
  store i32 %v5_100027bc, i32* %r30.global-to-local, align 4
  %v0_100027d0 = load i32, i32* @r29, align 4
  store i32 %v0_100027d0, i32* %r3.global-to-local, align 4
  store i32 268445656, i32* @lr, align 4
  %v4_100027d4 = inttoptr i32 %v0_100027c0 to i32*
  %v5_100027d4 = call i32 @function_100006a8(i32 %v0_100027d0, i32* %v4_100027d4, i32 0, i32 512)
  %v0_100027d8 = load i32, i32* @r28, align 4
  store i32 %v5_100027d4, i32* %r16.global-to-local, align 4
  %v0_100027e8 = load i32, i32* @r29, align 4
  store i32 %v0_100027e8, i32* %r3.global-to-local, align 4
  store i32 268445680, i32* @lr, align 4
  %v4_100027ec = inttoptr i32 %v0_100027d8 to i32*
  %v5_100027ec = call i32 @function_100006a8(i32 %v0_100027e8, i32* %v4_100027ec, i32 1, i32 1)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100027f4 = load i32, i32* @global_var_1001c298.14, align 4
  %v1_100027f8 = urem i32 %v5_100027ec, 256
  %v0_100027fc = load i32, i32* @r28, align 4
  %v0_10002808 = load i32, i32* @r29, align 4
  store i32 %v0_10002808, i32* %r3.global-to-local, align 4
  store i32 268445712, i32* @lr, align 4
  %v5_1000280c = inttoptr i32 %v0_100027fc to i32*
  %v6_1000280c = call i32 @function_10000628(i32 %v0_10002808, i32* %v5_1000280c, i32 25, i32 %v3_100027f4, i32 268566528)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268445732, i32* @lr, align 4
  %v3_10002820 = call i32 @function_10009e58(i32 2, i32 3, i32 6)
  store i32 %v3_10002820, i32* %r3.global-to-local, align 4
  %v3_10002824 = icmp eq i32 %v3_10002820, -1
  store i32 %v3_10002820, i32* %r23.global-to-local, align 4
  br i1 %v3_10002824, label %dec_label_pc_10002b64, label %dec_label_pc_10002830

dec_label_pc_10002830:                            ; preds = %dec_label_pc_100025e0
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1000283c = ptrtoint i32* %stack_var_-136 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-136, align 4
  store i32 268445772, i32* @lr, align 4
  %v4_10002848 = call i32 @function_10009e1c(i32 0, i32 3, i32 %v2_1000283c, i32 4)
  store i32 %v4_10002848, i32* %r3.global-to-local, align 4
  %v3_1000284c = icmp eq i32 %v4_10002848, -1
  br i1 %v3_1000284c, label %dec_label_pc_10002b5c, label %dec_label_pc_10002854

dec_label_pc_10002854:                            ; preds = %dec_label_pc_10002830
  %v0_10002854 = load i32, i32* %r21.global-to-local, align 4
  %v1_10002854 = icmp slt i32 %v0_10002854, 0
  %v3_10002854 = icmp eq i32 %v0_10002854, 0
  store i1 %v1_10002854, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10002854, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  %v0_10002860 = load i32, i32* %r18.global-to-local, align 4
  %v1_10002860 = urem i32 %v0_10002860, 65536
  store i32 %v1_10002860, i32* %r18.global-to-local, align 4
  %v0_10002864 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002864 = urem i32 %v0_10002864, 65536
  store i32 %v1_10002864, i32* %r19.global-to-local, align 4
  %v0_10002868 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002868 = urem i32 %v0_10002868, 65536
  store i32 %v1_10002868, i32* %r20.global-to-local, align 4
  %tmp40 = icmp slt i32 %v0_10002854, 1
  br i1 %tmp40, label %dec_label_pc_10002b3c, label %dec_label_pc_10002870

dec_label_pc_10002870:                            ; preds = %dec_label_pc_10002854
  %v0_10002874 = load i32, i32* %r24.global-to-local, align 4
  %v1_10002874 = urem i32 %v0_10002874, 256
  %v0_10002878 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002878 = add i32 %v0_10002878, 40
  store i32 %v1_10002878, i32* %r24.global-to-local, align 4
  %v3_1000287c = icmp eq i32 %v1_10002874, 0
  store i1 %v3_1000287c, i1* %cr3_eq.global-to-local, align 1
  %v1_10002880 = urem i32 %v5_10002744, 2
  store i32 %v1_10002880, i32* %r9.global-to-local, align 4
  %v0_10002884 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002884 = urem i32 %v0_10002884, 2
  store i32 %v1_10002884, i32* %r28.global-to-local, align 4
  %v1_10002888 = urem i32 %v0_10002874, 2
  store i32 %v1_10002888, i32* %r26.global-to-local, align 4
  %v1_1000288c = urem i32 %v1_10002878, 65536
  store i32 %v1_1000288c, i32* %r0.global-to-local, align 4
  %v0_10002894 = load i32, i32* @r31, align 4
  %v3_10002894 = icmp eq i32 %v0_10002894, 0
  store i1 %v3_10002894, i1* %cr2_eq.global-to-local, align 1
  %v5_10002898 = trunc i32 %v1_10002878 to i16
  %v0_1000289c = load i32, i32* %r14.global-to-local, align 4
  %v1_1000289c = urem i32 %v0_1000289c, 2
  store i32 %v1_1000289c, i32* %r14.global-to-local, align 4
  %v0_100028a0 = load i32, i32* %r27.global-to-local, align 4
  %v1_100028a0 = urem i32 %v0_100028a0, 2
  store i32 %v1_100028a0, i32* %r27.global-to-local, align 4
  %v0_100028a4 = load i32, i32* %r30.global-to-local, align 4
  %v1_100028a4 = urem i32 %v0_100028a4, 2
  %v4_100028f4 = sext i8 %v5_10002678 to i32
  br label %dec_label_pc_100028ac

dec_label_pc_100028ac:                            ; preds = %dec_label_pc_1000298c, %dec_label_pc_10002870
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268445880, i32* @lr, align 4
  %v2_100028b4 = call i32 @function_1000a1b4(i32 1510, i32 1)
  store i32 %v2_100028b4, i32* %r3.global-to-local, align 4
  %v3_100028b8 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_100028b8, i32* %r9.global-to-local, align 4
  %v0_100028bc = load i32, i32* @r31, align 4
  %v1_100028bc = mul i32 %v0_100028bc, 4
  store i32 %v1_100028bc, i32* %r0.global-to-local, align 4
  %v1_100028c0 = load i32, i32* %r22.global-to-local, align 4
  %v3_100028c0 = add i32 %v1_100028c0, %v1_100028bc
  %v4_100028c0 = inttoptr i32 %v3_100028c0 to i32*
  store i32 %v2_100028b4, i32* %v4_100028c0, align 4
  %v0_100028c4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100028c4 = mul i32 %v0_100028c4, 4
  store i32 %v1_100028c4, i32* %r9.global-to-local, align 4
  %v1_100028c8 = load i32, i32* %r22.global-to-local, align 4
  %v2_100028c8 = add i32 %v1_100028c8, %v1_100028c4
  %v3_100028c8 = inttoptr i32 %v2_100028c8 to i32*
  %v4_100028c8 = load i32, i32* %v3_100028c8, align 4
  store i32 %v4_100028c8, i32* @r31, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_100028d0 = inttoptr i32 %v4_100028c8 to i32*
  %v2_100028d0 = load i32, i32* %v1_100028d0, align 4
  store i32 %v2_100028d0, i32* %r0.global-to-local, align 4
  %v1_100028d4 = add i32 %v4_100028c8, 20
  store i32 %v1_100028d4, i32* @r30, align 4
  %v0_100028d8 = load i32, i32* %r18.global-to-local, align 4
  %v1_100028d8 = trunc i32 %v0_100028d8 to i16
  %v3_100028d8 = add i32 %v4_100028c8, 4
  %v4_100028d8 = inttoptr i32 %v3_100028d8 to i16*
  store i16 %v1_100028d8, i16* %v4_100028d8, align 2
  %v1_100028dc = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100028dc, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_100028e4 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v1_100028e8 = load i32, i32* @r31, align 4
  %v2_100028e8 = inttoptr i32 %v1_100028e8 to i32*
  store i32 %v1_100028e4, i32* %v2_100028e8, align 4
  %v2_100028f0 = load i32, i32* @r31, align 4
  %v3_100028f0 = add i32 %v2_100028f0, 8
  %v4_100028f0 = inttoptr i32 %v3_100028f0 to i8*
  store i8 %v5_100026b0, i8* %v4_100028f0, align 1
  store i32 %v4_100028f4, i32* %r9.global-to-local, align 4
  %v2_100028f8 = load i32, i32* @r31, align 4
  %v3_100028f8 = add i32 %v2_100028f8, 1
  %v4_100028f8 = inttoptr i32 %v3_100028f8 to i8*
  store i8 %v5_10002678, i8* %v4_100028f8, align 1
  store i32 %v1_10002878, i32* %r0.global-to-local, align 4
  %v2_10002900 = load i32, i32* @r31, align 4
  %v3_10002900 = add i32 %v2_10002900, 2
  %v4_10002900 = inttoptr i32 %v3_10002900 to i16*
  store i16 %v5_10002898, i16* %v4_10002900, align 2
  %v0_10002904 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002904, label %dec_label_pc_10002910, label %dec_label_pc_10002908

dec_label_pc_10002908:                            ; preds = %dec_label_pc_100028ac
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_1000290c = load i32, i32* @r31, align 4
  %v3_1000290c = add i32 %v2_1000290c, 6
  %v4_1000290c = inttoptr i32 %v3_1000290c to i16*
  store i16 16384, i16* %v4_1000290c, align 2
  br label %dec_label_pc_10002910

dec_label_pc_10002910:                            ; preds = %dec_label_pc_100028ac, %dec_label_pc_10002908
  store i32 6, i32* %r0.global-to-local, align 4
  %v0_10002914 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002914 = trunc i32 %v0_10002914 to i16
  %v2_10002914 = load i32, i32* @r31, align 4
  %v3_10002914 = add i32 %v2_10002914, 20
  %v4_10002914 = inttoptr i32 %v3_10002914 to i16*
  store i16 %v1_10002914, i16* %v4_10002914, align 2
  %v0_10002918 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002918 = trunc i32 %v0_10002918 to i8
  %v2_10002918 = load i32, i32* @r31, align 4
  %v3_10002918 = add i32 %v2_10002918, 9
  %v4_10002918 = inttoptr i32 %v3_10002918 to i8*
  store i8 %v1_10002918, i8* %v4_10002918, align 1
  %v0_1000291c = load i32, i32* %r20.global-to-local, align 4
  %v1_1000291c = trunc i32 %v0_1000291c to i16
  %v2_1000291c = load i32, i32* @r30, align 4
  %v3_1000291c = add i32 %v2_1000291c, 2
  %v4_1000291c = inttoptr i32 %v3_1000291c to i16*
  store i16 %v1_1000291c, i16* %v4_1000291c, align 2
  %v1_10002924 = load i32, i32* @r31, align 4
  %v2_10002924 = add i32 %v1_10002924, 12
  %v3_10002924 = inttoptr i32 %v2_10002924 to i32*
  store i32 %v6_1000280c, i32* %v3_10002924, align 4
  %v3_10002928 = load i32, i32* %stack_var_-136, align 4
  %v1_1000292c = mul i32 %v3_10002928, 24
  %v1_10002930 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002930 = add i32 %v1_10002930, %v1_1000292c
  store i32 %v2_10002930, i32* %r9.global-to-local, align 4
  %v1_10002934 = add i32 %v2_10002930, 16
  %v2_10002934 = inttoptr i32 %v1_10002934 to i32*
  %v3_10002934 = load i32, i32* %v2_10002934, align 4
  store i32 %v3_10002934, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_1000293c = load i32, i32* @r31, align 4
  %v2_1000293c = add i32 %v1_1000293c, 16
  %v3_1000293c = inttoptr i32 %v2_1000293c to i32*
  store i32 %v3_10002934, i32* %v3_1000293c, align 4
  %v0_10002940 = load i32, i32* %r15.global-to-local, align 4
  %v1_10002940 = load i32, i32* @r30, align 4
  %v2_10002940 = add i32 %v1_10002940, 4
  %v3_10002940 = inttoptr i32 %v2_10002940 to i32*
  store i32 %v0_10002940, i32* %v3_10002940, align 4
  %v0_10002944 = load i32, i32* @r30, align 4
  %v1_10002944 = add i32 %v0_10002944, 12
  %v2_10002944 = inttoptr i32 %v1_10002944 to i32*
  %v3_10002944 = load i32, i32* %v2_10002944, align 4
  store i32 %v3_10002944, i32* %r0.global-to-local, align 4
  %v1_10002948 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_10002948, i32* %r0.global-to-local, align 4
  store i32 %v1_10002880, i32* %r9.global-to-local, align 4
  %v1_10002950 = call i32 @__asm_rlwimi(i32 %v1_10002880, i32 21, i32 10, i32 10)
  store i32 %v1_10002950, i32* %r0.global-to-local, align 4
  %v1_10002954 = call i32 @__asm_rlwimi(i32 %v1_1000289c, i32 20, i32 11, i32 11)
  store i32 %v1_10002954, i32* %r0.global-to-local, align 4
  %v1_10002958 = call i32 @__asm_rlwimi(i32 %v1_10002888, i32 19, i32 12, i32 12)
  store i32 %v1_10002958, i32* %r0.global-to-local, align 4
  %v1_1000295c = call i32 @__asm_rlwimi(i32 %v1_100028a0, i32 18, i32 13, i32 13)
  store i32 %v1_1000295c, i32* %r0.global-to-local, align 4
  %v1_10002960 = call i32 @__asm_rlwimi(i32 %v1_10002884, i32 17, i32 14, i32 14)
  store i32 %v1_10002960, i32* %r0.global-to-local, align 4
  %v1_10002964 = call i32 @__asm_rlwimi(i32 %v1_100028a4, i32 16, i32 15, i32 15)
  store i32 %v1_10002964, i32* %r0.global-to-local, align 4
  %v1_10002968 = load i32, i32* @r30, align 4
  %v2_10002968 = add i32 %v1_10002968, 12
  %v3_10002968 = inttoptr i32 %v2_10002968 to i32*
  store i32 %v1_10002964, i32* %v3_10002968, align 4
  %v0_1000296c = call i32 @function_10005f74()
  %v1_1000296c = trunc i32 %v0_1000296c to i16
  %v0_10002970 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10002970, i32* @r4, align 4
  %v3_10002974 = load i32, i32* @r30, align 4
  %v4_10002974 = add i32 %v3_10002974, 14
  %v5_10002974 = inttoptr i32 %v4_10002974 to i16*
  store i16 %v1_1000296c, i16* %v5_10002974, align 2
  %v0_10002978 = load i32, i32* @r31, align 4
  %v1_10002978 = add i32 %v0_10002978, 40
  store i32 %v1_10002978, i32* @r3, align 4
  %v0_1000297c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_1000297c, label %dec_label_pc_1000298c, label %dec_label_pc_10002980

dec_label_pc_10002980:                            ; preds = %dec_label_pc_10002910
  %v0_10002980 = load i32, i32* @r30, align 4
  %v1_10002980 = add i32 %v0_10002980, 12
  %v2_10002980 = inttoptr i32 %v1_10002980 to i32*
  %v3_10002980 = load i32, i32* %v2_10002980, align 4
  %v1_10002984 = or i32 %v3_10002980, 524288
  store i32 %v1_10002984, i32* %r0.global-to-local, align 4
  store i32 %v1_10002984, i32* %v2_10002980, align 4
  br label %dec_label_pc_1000298c

dec_label_pc_1000298c:                            ; preds = %dec_label_pc_10002910, %dec_label_pc_10002980
  %v0_1000298c = call i32 @function_10006148()
  store i32 %v0_1000298c, i32* %r3.global-to-local, align 4
  %v3_10002990 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10002990, i32* %r9.global-to-local, align 4
  %v1_10002994 = add i32 %v3_10002990, 1
  %v1_10002998 = load i32, i32* %r21.global-to-local, align 4
  %v2_10002998 = icmp slt i32 %v1_10002994, %v1_10002998
  store i32 %v1_10002994, i32* %stack_var_-136, align 4
  br i1 %v2_10002998, label %dec_label_pc_100028ac, label %dec_label_pc_100029a4

dec_label_pc_100029a4:                            ; preds = %dec_label_pc_1000298c
  store i32 %v6_1000280c, i32* %r0.global-to-local, align 4
  %v0_100029a8 = load i32, i32* %r16.global-to-local, align 4
  %v1_100029a8 = add i32 %v0_100029a8, 20
  store i32 %v1_100029a8, i32* @r30, align 4
  store i32 %v1_100027f8, i32* %r9.global-to-local, align 4
  %v3_100029b0 = icmp eq i32 %v6_1000280c, -1
  store i1 %v3_100029b0, i1* %cr2_eq.global-to-local, align 1
  %v3_100029b4 = icmp eq i32 %v1_100027f8, 0
  store i1 %v3_100029b4, i1* %cr3_eq.global-to-local, align 1
  %v0_100029b8.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100029b8.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100029b8.preheader

dec_label_pc_100029b8.preheader:                  ; preds = %dec_label_pc_10002a98, %dec_label_pc_10002b3c, %dec_label_pc_100029a4
  %v1_100029b8 = phi i1 [ %v1_10002854, %dec_label_pc_10002b3c ], [ %v1_100029b8.pre, %dec_label_pc_100029a4 ], [ %v1_10002a98, %dec_label_pc_10002a98 ]
  %v0_100029b8 = phi i1 [ %v3_10002854, %dec_label_pc_10002b3c ], [ %v0_100029b8.pre, %dec_label_pc_100029a4 ], [ %v0_10002a98, %dec_label_pc_10002a98 ]
  %v2_100029b8 = or i1 %v1_100029b8, %v0_100029b8
  br label %dec_label_pc_100029b8

dec_label_pc_100029b8:                            ; preds = %dec_label_pc_100029b8.preheader, %dec_label_pc_100029b8
  br i1 %v2_100029b8, label %dec_label_pc_100029b8, label %dec_label_pc_100029bc

dec_label_pc_100029bc:                            ; preds = %dec_label_pc_100029b8, %dec_label_pc_10002a98
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100029c0 = load i32, i32* @r30, align 4
  %v1_100029c0 = urem i32 %v0_100029c0, 65536
  store i32 %v1_100029c0, i32* %r27.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_100029d0

dec_label_pc_100029d0:                            ; preds = %dec_label_pc_10002a28, %dec_label_pc_100029bc
  %v0_100029d0 = phi i32 [ %v1_10002a88, %dec_label_pc_10002a28 ], [ 0, %dec_label_pc_100029bc ]
  %v1_100029d0 = mul i32 %v0_100029d0, 24
  store i32 %v1_100029d0, i32* %r0.global-to-local, align 4
  %v1_100029d4 = mul i32 %v0_100029d0, 4
  %v1_100029d8 = load i32, i32* %r22.global-to-local, align 4
  %v2_100029d8 = add i32 %v1_100029d8, %v1_100029d4
  %v3_100029d8 = inttoptr i32 %v2_100029d8 to i32*
  %v4_100029d8 = load i32, i32* %v3_100029d8, align 4
  store i32 %v4_100029d8, i32* %r28.global-to-local, align 4
  %v1_100029dc = load i32, i32* %r25.global-to-local, align 4
  %v2_100029dc = add i32 %v1_100029dc, %v1_100029d0
  %v1_100029e0 = add i32 %v2_100029dc, 20
  %v2_100029e0 = inttoptr i32 %v1_100029e0 to i8*
  %v3_100029e0 = load i8, i8* %v2_100029e0, align 1
  %v4_100029e0 = zext i8 %v3_100029e0 to i32
  store i32 %v4_100029e0, i32* %r9.global-to-local, align 4
  %v1_100029e4 = add i32 %v4_100029d8, 20
  store i32 %v1_100029e4, i32* @r31, align 4
  %tmp41 = icmp ult i8 %v3_100029e0, 32
  br i1 %tmp41, label %dec_label_pc_10002aa0, label %dec_label_pc_100029f0

dec_label_pc_100029f0:                            ; preds = %dec_label_pc_100029d0
  %v0_100029f0 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100029f0, label %dec_label_pc_10002ac8, label %dec_label_pc_100029f4

dec_label_pc_100029f4:                            ; preds = %dec_label_pc_10002aa0, %dec_label_pc_100029f0
  store i32 65535, i32* @r29, align 4
  %v0_100029fc = load i32, i32* %r18.global-to-local, align 4
  %v4_100029fc = icmp eq i32 %v0_100029fc, 65535
  br i1 %v4_100029fc, label %dec_label_pc_10002ae0, label %dec_label_pc_10002a04

dec_label_pc_10002a04:                            ; preds = %dec_label_pc_10002ac8, %dec_label_pc_100029f4
  %v1_10002a04 = phi i32 [ %v1_10002ad8, %dec_label_pc_10002ac8 ], [ 65535, %dec_label_pc_100029f4 ]
  %v0_10002a04 = load i32, i32* %r19.global-to-local, align 4
  %v4_10002a04 = icmp eq i32 %v0_10002a04, %v1_10002a04
  br i1 %v4_10002a04, label %dec_label_pc_10002af0, label %dec_label_pc_10002a0c

dec_label_pc_10002a0c:                            ; preds = %dec_label_pc_10002ae0.dec_label_pc_10002a0c_crit_edge, %dec_label_pc_10002a04
  %v1_10002a0c = phi i32 [ %v1_10002a0c.pre, %dec_label_pc_10002ae0.dec_label_pc_10002a0c_crit_edge ], [ %v1_10002a04, %dec_label_pc_10002a04 ]
  %v0_10002a0c = load i32, i32* %r20.global-to-local, align 4
  %v4_10002a0c = icmp eq i32 %v0_10002a0c, %v1_10002a0c
  br i1 %v4_10002a0c, label %dec_label_pc_10002b00, label %dec_label_pc_10002a14

dec_label_pc_10002a14:                            ; preds = %dec_label_pc_10002af0.dec_label_pc_10002a14_crit_edge, %dec_label_pc_10002a0c
  %v1_10002a14 = phi i32 [ %v1_10002a14.pre, %dec_label_pc_10002af0.dec_label_pc_10002a14_crit_edge ], [ %v1_10002a0c, %dec_label_pc_10002a0c ]
  %v0_10002a14 = load i32, i32* %r15.global-to-local, align 4
  %v4_10002a14 = icmp eq i32 %v0_10002a14, %v1_10002a14
  br i1 %v4_10002a14, label %dec_label_pc_10002b10, label %dec_label_pc_10002a1c

dec_label_pc_10002a1c:                            ; preds = %dec_label_pc_10002b00.dec_label_pc_10002a1c_crit_edge, %dec_label_pc_10002a14
  %v1_10002a1c = phi i32 [ %v1_10002a1c.pre, %dec_label_pc_10002b00.dec_label_pc_10002a1c_crit_edge ], [ %v1_10002a14, %dec_label_pc_10002a14 ]
  %v0_10002a1c = load i32, i32* %r17.global-to-local, align 4
  %v4_10002a1c = icmp eq i32 %v0_10002a1c, %v1_10002a1c
  br i1 %v4_10002a1c, label %dec_label_pc_10002b20, label %dec_label_pc_10002a24

dec_label_pc_10002a24:                            ; preds = %dec_label_pc_10002b10, %dec_label_pc_10002a1c
  %v0_10002a24 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002a24, label %dec_label_pc_10002a28, label %dec_label_pc_10002b2c

dec_label_pc_10002a28:                            ; preds = %dec_label_pc_10002a24, %dec_label_pc_10002b20, %dec_label_pc_10002b2c
  %v0_10002a28 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002a28 = trunc i32 %v0_10002a28 to i16
  %v2_10002a28 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002a28 = add i32 %v2_10002a28, 10
  %v4_10002a28 = inttoptr i32 %v3_10002a28 to i16*
  store i16 %v1_10002a28, i16* %v4_10002a28, align 2
  %v0_10002a30 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002a30, i32* @r3, align 4
  %v2_10002a34 = call i32 @function_100043cc(i32 %v0_10002a30, i32 20)
  %v3_10002a34 = trunc i32 %v2_10002a34 to i16
  %v0_10002a38 = load i32, i32* @r31, align 4
  store i32 %v0_10002a38, i32* @r4, align 4
  %v4_10002a3c = add i32 %v0_10002a30, 10
  %v5_10002a3c = inttoptr i32 %v4_10002a3c to i16*
  store i16 %v3_10002a34, i16* %v5_10002a3c, align 2
  %v0_10002a40 = load i32, i32* %r27.global-to-local, align 4
  %v0_10002a44 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002a44 = trunc i32 %v0_10002a44 to i16
  %v2_10002a44 = load i32, i32* @r31, align 4
  %v3_10002a44 = add i32 %v2_10002a44, 16
  %v4_10002a44 = inttoptr i32 %v3_10002a44 to i16*
  store i16 %v1_10002a44, i16* %v4_10002a44, align 2
  %v0_10002a48 = load i32, i32* @r30, align 4
  %v0_10002a4c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002a4c, i32* %r3.global-to-local, align 4
  %v4_10002a50 = call i32 @function_10004430(i32 %v0_10002a4c, i32 %v0_10002a38, i32 %v0_10002a40, i32 %v0_10002a48)
  %v5_10002a50 = trunc i32 %v4_10002a50 to i16
  store i32 %v4_10002a50, i32* %r3.global-to-local, align 4
  %v3_10002a54 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10002a54, i32* %r7.global-to-local, align 4
  %v0_10002a58 = load i32, i32* @r31, align 4
  %v1_10002a58 = add i32 %v0_10002a58, 2
  %v2_10002a58 = inttoptr i32 %v1_10002a58 to i16*
  %v3_10002a58 = load i16, i16* %v2_10002a58, align 2
  %v4_10002a58 = zext i16 %v3_10002a58 to i32
  store i32 %v4_10002a58, i32* %r0.global-to-local, align 4
  %v0_10002a5c = load i32, i32* %r28.global-to-local, align 4
  %v1_10002a60 = mul i32 %v3_10002a54, 24
  store i32 %v1_10002a60, i32* %r7.global-to-local, align 4
  %v4_10002a64 = add i32 %v0_10002a58, 16
  %v5_10002a64 = inttoptr i32 %v4_10002a64 to i16*
  store i16 %v5_10002a50, i16* %v5_10002a64, align 2
  %v0_10002a68 = load i32, i32* %r24.global-to-local, align 4
  %v0_10002a6c = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10002a6c, i32* %r3.global-to-local, align 4
  %v0_10002a70 = load i32, i32* %r7.global-to-local, align 4
  %v1_10002a70 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002a70 = add i32 %v1_10002a70, %v0_10002a70
  store i32 %v2_10002a70, i32* %r7.global-to-local, align 4
  %v0_10002a78 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002a78 = trunc i32 %v0_10002a78 to i16
  %v3_10002a78 = add i32 %v2_10002a70, 2
  %v4_10002a78 = inttoptr i32 %v3_10002a78 to i16*
  store i16 %v1_10002a78, i16* %v4_10002a78, align 2
  store i32 268446340, i32* @lr, align 4
  %v6_10002a80 = call i32 @function_10009ddc(i32 %v0_10002a6c, i32 %v0_10002a5c, i32 %v0_10002a68, i32 16384, i32 %v2_10002a70, i32 16)
  store i32 %v6_10002a80, i32* %r3.global-to-local, align 4
  %v3_10002a84 = load i32, i32* %stack_var_-136, align 4
  %v1_10002a88 = add i32 %v3_10002a84, 1
  store i32 %v1_10002a88, i32* %r9.global-to-local, align 4
  %v1_10002a8c = load i32, i32* %r21.global-to-local, align 4
  %v2_10002a8c = icmp slt i32 %v1_10002a88, %v1_10002a8c
  store i32 %v1_10002a88, i32* %stack_var_-136, align 4
  br i1 %v2_10002a8c, label %dec_label_pc_100029d0, label %dec_label_pc_10002a98

dec_label_pc_10002a98:                            ; preds = %dec_label_pc_10002a28
  %v0_10002a98 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10002a98 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10002a98 = or i1 %v0_10002a98, %v1_10002a98
  br i1 %v2_10002a98, label %dec_label_pc_100029b8.preheader, label %dec_label_pc_100029bc

dec_label_pc_10002aa0:                            ; preds = %dec_label_pc_100029d0
  %v1_10002aa0 = add i32 %v2_100029dc, 16
  %v2_10002aa0 = inttoptr i32 %v1_10002aa0 to i32*
  %v3_10002aa0 = load i32, i32* %v2_10002aa0, align 4
  store i32 %v3_10002aa0, i32* %r29.global-to-local, align 4
  %v0_10002aa4 = call i32 @function_10005f74()
  store i32 %v0_10002aa4, i32* %r3.global-to-local, align 4
  %v3_10002aa8 = load i32, i32* %stack_var_-136, align 4
  %v1_10002aac = mul i32 %v3_10002aa8, 24
  %v1_10002ab0 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002ab0 = add i32 %v1_10002ab0, %v1_10002aac
  store i32 %v2_10002ab0, i32* %r9.global-to-local, align 4
  %v1_10002ab4 = add i32 %v2_10002ab0, 20
  %v2_10002ab4 = inttoptr i32 %v1_10002ab4 to i8*
  %v3_10002ab4 = load i8, i8* %v2_10002ab4, align 1
  %v4_10002ab4 = zext i8 %v3_10002ab4 to i32
  store i32 %v4_10002ab4, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10002ab4, 64
  %v2_10002ab8 = zext i8 %tmp to i32
  %v3_10002ab8 = lshr i32 %v0_10002aa4, %v2_10002ab8
  store i32 %v3_10002ab8, i32* %r3.global-to-local, align 4
  %v0_10002abc = load i32, i32* %r29.global-to-local, align 4
  %v2_10002abc = add i32 %v3_10002ab8, %v0_10002abc
  store i32 %v2_10002abc, i32* %r29.global-to-local, align 4
  %v1_10002ac0 = load i32, i32* %r28.global-to-local, align 4
  %v2_10002ac0 = add i32 %v1_10002ac0, 16
  %v3_10002ac0 = inttoptr i32 %v2_10002ac0 to i32*
  store i32 %v2_10002abc, i32* %v3_10002ac0, align 4
  %v0_10002ac4 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002ac4, label %dec_label_pc_10002ac8, label %dec_label_pc_100029f4

dec_label_pc_10002ac8:                            ; preds = %dec_label_pc_10002aa0, %dec_label_pc_100029f0
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10002acc = call i32 @function_10005f74()
  store i32 %v0_10002acc, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_10002ad4 = load i32, i32* %r28.global-to-local, align 4
  %v2_10002ad4 = add i32 %v1_10002ad4, 12
  %v3_10002ad4 = inttoptr i32 %v2_10002ad4 to i32*
  store i32 %v0_10002acc, i32* %v3_10002ad4, align 4
  %v0_10002ad8 = load i32, i32* %r18.global-to-local, align 4
  %v1_10002ad8 = load i32, i32* @r29, align 4
  %v4_10002ad8 = icmp eq i32 %v0_10002ad8, %v1_10002ad8
  br i1 %v4_10002ad8, label %dec_label_pc_10002ae0, label %dec_label_pc_10002a04

dec_label_pc_10002ae0:                            ; preds = %dec_label_pc_10002ac8, %dec_label_pc_100029f4
  %v0_10002ae0 = call i32 @function_10005f74()
  %v1_10002ae0 = trunc i32 %v0_10002ae0 to i16
  store i32 %v0_10002ae0, i32* %r3.global-to-local, align 4
  %v0_10002ae4 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002ae4 = load i32, i32* @r29, align 4
  %v4_10002ae4 = icmp eq i32 %v0_10002ae4, %v1_10002ae4
  %v3_10002ae8 = load i32, i32* %r28.global-to-local, align 4
  %v4_10002ae8 = add i32 %v3_10002ae8, 4
  %v5_10002ae8 = inttoptr i32 %v4_10002ae8 to i16*
  store i16 %v1_10002ae0, i16* %v5_10002ae8, align 2
  br i1 %v4_10002ae4, label %dec_label_pc_10002af0, label %dec_label_pc_10002ae0.dec_label_pc_10002a0c_crit_edge

dec_label_pc_10002ae0.dec_label_pc_10002a0c_crit_edge: ; preds = %dec_label_pc_10002ae0
  %v1_10002a0c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10002a0c

dec_label_pc_10002af0:                            ; preds = %dec_label_pc_10002ae0, %dec_label_pc_10002a04
  %v0_10002af0 = call i32 @function_10005f74()
  %v1_10002af0 = trunc i32 %v0_10002af0 to i16
  store i32 %v0_10002af0, i32* %r3.global-to-local, align 4
  %v0_10002af4 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002af4 = load i32, i32* @r29, align 4
  %v4_10002af4 = icmp eq i32 %v0_10002af4, %v1_10002af4
  %v3_10002af8 = load i32, i32* %r28.global-to-local, align 4
  %v4_10002af8 = add i32 %v3_10002af8, 20
  %v5_10002af8 = inttoptr i32 %v4_10002af8 to i16*
  store i16 %v1_10002af0, i16* %v5_10002af8, align 2
  br i1 %v4_10002af4, label %dec_label_pc_10002b00, label %dec_label_pc_10002af0.dec_label_pc_10002a14_crit_edge

dec_label_pc_10002af0.dec_label_pc_10002a14_crit_edge: ; preds = %dec_label_pc_10002af0
  %v1_10002a14.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10002a14

dec_label_pc_10002b00:                            ; preds = %dec_label_pc_10002af0, %dec_label_pc_10002a0c
  %v0_10002b00 = call i32 @function_10005f74()
  %v1_10002b00 = trunc i32 %v0_10002b00 to i16
  store i32 %v0_10002b00, i32* %r3.global-to-local, align 4
  %v0_10002b04 = load i32, i32* %r15.global-to-local, align 4
  %v1_10002b04 = load i32, i32* @r29, align 4
  %v4_10002b04 = icmp eq i32 %v0_10002b04, %v1_10002b04
  %v3_10002b08 = load i32, i32* @r31, align 4
  %v4_10002b08 = add i32 %v3_10002b08, 2
  %v5_10002b08 = inttoptr i32 %v4_10002b08 to i16*
  store i16 %v1_10002b00, i16* %v5_10002b08, align 2
  br i1 %v4_10002b04, label %dec_label_pc_10002b10, label %dec_label_pc_10002b00.dec_label_pc_10002a1c_crit_edge

dec_label_pc_10002b00.dec_label_pc_10002a1c_crit_edge: ; preds = %dec_label_pc_10002b00
  %v1_10002a1c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10002a1c

dec_label_pc_10002b10:                            ; preds = %dec_label_pc_10002b00, %dec_label_pc_10002a14
  %v0_10002b10 = call i32 @function_10005f74()
  store i32 %v0_10002b10, i32* %r3.global-to-local, align 4
  %v0_10002b14 = load i32, i32* %r17.global-to-local, align 4
  %v1_10002b14 = load i32, i32* @r29, align 4
  %v4_10002b14 = icmp eq i32 %v0_10002b14, %v1_10002b14
  %v1_10002b18 = load i32, i32* @r31, align 4
  %v2_10002b18 = add i32 %v1_10002b18, 4
  %v3_10002b18 = inttoptr i32 %v2_10002b18 to i32*
  store i32 %v0_10002b10, i32* %v3_10002b18, align 4
  br i1 %v4_10002b14, label %dec_label_pc_10002b20, label %dec_label_pc_10002a24

dec_label_pc_10002b20:                            ; preds = %dec_label_pc_10002b10, %dec_label_pc_10002a1c
  %v0_10002b20 = call i32 @function_10005f74()
  store i32 %v0_10002b20, i32* %r3.global-to-local, align 4
  %v1_10002b24 = load i32, i32* @r31, align 4
  %v2_10002b24 = add i32 %v1_10002b24, 8
  %v3_10002b24 = inttoptr i32 %v2_10002b24 to i32*
  store i32 %v0_10002b20, i32* %v3_10002b24, align 4
  %v0_10002b28 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002b28, label %dec_label_pc_10002a28, label %dec_label_pc_10002b2c

dec_label_pc_10002b2c:                            ; preds = %dec_label_pc_10002a24, %dec_label_pc_10002b20
  %v0_10002b2c = load i32, i32* %r28.global-to-local, align 4
  %v1_10002b2c = add i32 %v0_10002b2c, 40
  store i32 %v1_10002b2c, i32* @r3, align 4
  %v0_10002b30 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10002b30, i32* @r4, align 4
  %v0_10002b34 = call i32 @function_10006148()
  store i32 %v0_10002b34, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002a28

dec_label_pc_10002b3c:                            ; preds = %dec_label_pc_10002854
  store i32 %v6_1000280c, i32* %r0.global-to-local, align 4
  %v0_10002b40 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002b40 = add i32 %v0_10002b40, 40
  store i32 %v1_10002b40, i32* %r24.global-to-local, align 4
  store i32 %v1_100027f8, i32* %r9.global-to-local, align 4
  %v1_10002b48 = add i32 %v0_10002b40, 20
  store i32 %v1_10002b48, i32* @r30, align 4
  %v3_10002b4c = icmp eq i32 %v6_1000280c, -1
  store i1 %v3_10002b4c, i1* %cr2_eq.global-to-local, align 1
  %v3_10002b50 = icmp eq i32 %v1_100027f8, 0
  store i1 %v3_10002b50, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_100029b8.preheader

dec_label_pc_10002b5c:                            ; preds = %dec_label_pc_10002830
  %v0_10002b5c = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10002b5c, i32* %r3.global-to-local, align 4
  store i32 268446564, i32* @lr, align 4
  %v0_10002b60 = call i32 @function_10009108()
  store i32 %v0_10002b60, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002b64

dec_label_pc_10002b64:                            ; preds = %dec_label_pc_100025e0, %dec_label_pc_10002b5c
  store i32 %v0_100025f8, i32* %r0.global-to-local, align 4
  %v1_10002b78 = call %0 @__asm_mtcrf(i32 56, i32 %v0_100025e8)
  store i32 %v0_10002638, i32* %r28.global-to-local, align 4
  store i32 %v0_10002640, i32* %r29.global-to-local, align 4
  store i32 %v0_10002648, i32* %r30.global-to-local, align 4
  %v0_10002bc0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10002bc0

; uselistorder directives
  uselistorder i32 %v0_10002b00, { 1, 0 }
  uselistorder i32 %v0_10002af0, { 1, 0 }
  uselistorder i32 %v0_10002ae0, { 1, 0 }
  uselistorder i32 %v1_10002ad8, { 1, 0 }
  uselistorder i1 %v1_10002a98, { 1, 0 }
  uselistorder i1 %v0_10002a98, { 1, 0 }
  uselistorder i32 %v1_10002a88, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10002a50, { 1, 0 }
  uselistorder i32 %v1_100028c4, { 1, 0 }
  uselistorder i32 %v1_100028bc, { 1, 0 }
  uselistorder i32 %v1_100028a0, { 1, 0 }
  uselistorder i32 %v1_1000289c, { 1, 0 }
  uselistorder i32 %v1_10002888, { 1, 0 }
  uselistorder i32 %v1_10002884, { 1, 0 }
  uselistorder i32 %v1_10002880, { 2, 1, 0 }
  uselistorder i32 %v1_10002878, { 1, 2, 0, 3 }
  uselistorder i32 %v6_1000280c, { 0, 4, 2, 1, 3 }
  uselistorder i32 %v1_100027f8, { 3, 0, 2, 1 }
  uselistorder i8 %v5_10002678, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 21, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 1 }
  uselistorder i32* %r29.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r28.global-to-local, { 0, 9, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 20, 21, 22, 23, 25, 26, 27, 28, 29 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10002b64, { 1, 0 }
  uselistorder label %dec_label_pc_10002b2c, { 1, 0 }
  uselistorder label %dec_label_pc_10002a28, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100029bc, { 1, 0 }
  uselistorder label %dec_label_pc_100029b8, { 1, 0 }
  uselistorder label %dec_label_pc_100029b8.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000298c, { 1, 0 }
  uselistorder label %dec_label_pc_10002910, { 1, 0 }
}

define i32 @function_10002bc4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10002bc4:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-120 = alloca i32, align 4
  %v0_10002bc8 = load i32, i32* @lr, align 4
  store i32 %v0_10002bc8, i32* %r0.global-to-local, align 4
  %v0_10002bcc = call i32 @__asm_mfcr()
  store i32 %v0_10002bcc, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r27.global-to-local, align 4
  %v0_10002bdc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10002bcc, i32* %r24.global-to-local, align 4
  %v0_10002c1c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10002c24 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10002c30 = load i32, i32* @r31, align 4
  store i32 268446776, i32* @lr, align 4
  %v2_10002c34 = call i32 @function_1000a1b4(i32 4, i32 4)
  store i32 %v2_10002c34, i32* %r25.global-to-local, align 4
  %v0_10002c3c = load i32, i32* @r28, align 4
  %v0_10002c48 = load i32, i32* @r29, align 4
  store i32 %v0_10002c48, i32* %r3.global-to-local, align 4
  store i32 268446800, i32* @lr, align 4
  %v4_10002c4c = inttoptr i32 %v0_10002c3c to i32*
  %v5_10002c4c = call i32 @function_100006a8(i32 %v0_10002c48, i32* %v4_10002c4c, i32 2, i32 0)
  %v5_10002c5c = trunc i32 %v5_10002c4c to i8
  %v0_10002c64 = load i32, i32* @r28, align 4
  %v0_10002c68 = load i32, i32* @r29, align 4
  store i32 %v0_10002c68, i32* %r3.global-to-local, align 4
  store i32 268446832, i32* @lr, align 4
  %v4_10002c6c = inttoptr i32 %v0_10002c64 to i32*
  %v5_10002c6c = call i32 @function_100006a8(i32 %v0_10002c68, i32* %v4_10002c6c, i32 3, i32 65535)
  %v0_10002c70 = load i32, i32* @r28, align 4
  store i32 %v5_10002c6c, i32* %r21.global-to-local, align 4
  %v0_10002c80 = load i32, i32* @r29, align 4
  store i32 %v0_10002c80, i32* %r3.global-to-local, align 4
  store i32 268446856, i32* @lr, align 4
  %v4_10002c84 = inttoptr i32 %v0_10002c70 to i32*
  %v5_10002c84 = call i32 @function_100006a8(i32 %v0_10002c80, i32* %v4_10002c84, i32 4, i32 64)
  %v0_10002c88 = load i32, i32* @r28, align 4
  %v5_10002c94 = trunc i32 %v5_10002c84 to i8
  %v0_10002c9c = load i32, i32* @r29, align 4
  store i32 %v0_10002c9c, i32* %r3.global-to-local, align 4
  store i32 268446884, i32* @lr, align 4
  %v4_10002ca0 = inttoptr i32 %v0_10002c88 to i32*
  %v5_10002ca0 = call i32 @function_100006a8(i32 %v0_10002c9c, i32* %v4_10002ca0, i32 5, i32 1)
  %v0_10002cb0 = load i32, i32* @r28, align 4
  %v1_10002cb4 = urem i32 %v5_10002ca0, 256
  store i32 %v1_10002cb4, i32* @r31, align 4
  %v0_10002cb8 = load i32, i32* @r29, align 4
  store i32 %v0_10002cb8, i32* %r3.global-to-local, align 4
  store i32 268446912, i32* @lr, align 4
  %v4_10002cbc = inttoptr i32 %v0_10002cb0 to i32*
  %v5_10002cbc = call i32 @function_100006a8(i32 %v0_10002cb8, i32* %v4_10002cbc, i32 6, i32 65535)
  %v0_10002cc4 = load i32, i32* @r28, align 4
  store i32 %v5_10002cbc, i32* %r22.global-to-local, align 4
  %v0_10002cd4 = load i32, i32* @r29, align 4
  store i32 %v0_10002cd4, i32* %r3.global-to-local, align 4
  store i32 268446940, i32* @lr, align 4
  %v4_10002cd8 = inttoptr i32 %v0_10002cc4 to i32*
  %v5_10002cd8 = call i32 @function_100006a8(i32 %v0_10002cd4, i32* %v4_10002cd8, i32 7, i32 65535)
  %v0_10002ce0 = load i32, i32* @r28, align 4
  store i32 %v5_10002cd8, i32* %r23.global-to-local, align 4
  %v0_10002cf0 = load i32, i32* @r29, align 4
  store i32 %v0_10002cf0, i32* %r3.global-to-local, align 4
  store i32 268446968, i32* @lr, align 4
  %v4_10002cf4 = inttoptr i32 %v0_10002ce0 to i32*
  %v5_10002cf4 = call i32 @function_100006a8(i32 %v0_10002cf0, i32* %v4_10002cf4, i32 17, i32 65535)
  %v0_10002cf8 = load i32, i32* @r28, align 4
  store i32 %v5_10002cf4, i32* %r19.global-to-local, align 4
  %v0_10002d08 = load i32, i32* @r29, align 4
  store i32 %v0_10002d08, i32* %r3.global-to-local, align 4
  store i32 268446992, i32* @lr, align 4
  %v4_10002d0c = inttoptr i32 %v0_10002cf8 to i32*
  %v5_10002d0c = call i32 @function_100006a8(i32 %v0_10002d08, i32* %v4_10002d0c, i32 18, i32 0)
  %v0_10002d10 = load i32, i32* @r28, align 4
  store i32 %v5_10002d0c, i32* %r20.global-to-local, align 4
  %v0_10002d20 = load i32, i32* @r29, align 4
  store i32 %v0_10002d20, i32* %r3.global-to-local, align 4
  store i32 268447016, i32* @lr, align 4
  %v4_10002d24 = inttoptr i32 %v0_10002d10 to i32*
  %v5_10002d24 = call i32 @function_100006a8(i32 %v0_10002d20, i32* %v4_10002d24, i32 11, i32 0)
  %v0_10002d28 = load i32, i32* @r28, align 4
  store i32 %v5_10002d24, i32* %r14.global-to-local, align 4
  %v0_10002d38 = load i32, i32* @r29, align 4
  store i32 %v0_10002d38, i32* %r3.global-to-local, align 4
  store i32 268447040, i32* @lr, align 4
  %v4_10002d3c = inttoptr i32 %v0_10002d28 to i32*
  %v5_10002d3c = call i32 @function_100006a8(i32 %v0_10002d38, i32* %v4_10002d3c, i32 12, i32 0)
  %v0_10002d40 = load i32, i32* @r28, align 4
  store i32 %v5_10002d3c, i32* %r17.global-to-local, align 4
  %v0_10002d50 = load i32, i32* @r29, align 4
  store i32 %v0_10002d50, i32* %r3.global-to-local, align 4
  store i32 268447064, i32* @lr, align 4
  %v4_10002d54 = inttoptr i32 %v0_10002d40 to i32*
  %v5_10002d54 = call i32 @function_100006a8(i32 %v0_10002d50, i32* %v4_10002d54, i32 13, i32 0)
  %v0_10002d58 = load i32, i32* @r28, align 4
  store i32 %v5_10002d54, i32* %r18.global-to-local, align 4
  %v0_10002d68 = load i32, i32* @r29, align 4
  store i32 %v0_10002d68, i32* %r3.global-to-local, align 4
  store i32 268447088, i32* @lr, align 4
  %v4_10002d6c = inttoptr i32 %v0_10002d58 to i32*
  %v5_10002d6c = call i32 @function_100006a8(i32 %v0_10002d68, i32* %v4_10002d6c, i32 14, i32 0)
  %v0_10002d70 = load i32, i32* @r28, align 4
  %v0_10002d80 = load i32, i32* @r29, align 4
  store i32 %v0_10002d80, i32* %r3.global-to-local, align 4
  store i32 268447112, i32* @lr, align 4
  %v4_10002d84 = inttoptr i32 %v0_10002d70 to i32*
  %v5_10002d84 = call i32 @function_100006a8(i32 %v0_10002d80, i32* %v4_10002d84, i32 15, i32 1)
  %v0_10002d88 = load i32, i32* @r28, align 4
  store i32 %v5_10002d84, i32* %r16.global-to-local, align 4
  %v0_10002d98 = load i32, i32* @r29, align 4
  store i32 %v0_10002d98, i32* %r3.global-to-local, align 4
  store i32 268447136, i32* @lr, align 4
  %v4_10002d9c = inttoptr i32 %v0_10002d88 to i32*
  %v5_10002d9c = call i32 @function_100006a8(i32 %v0_10002d98, i32* %v4_10002d9c, i32 16, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10002da4 = load i32, i32* @global_var_1001c298.14, align 4
  %v0_10002da8 = load i32, i32* @r28, align 4
  store i32 %v5_10002d9c, i32* %r30.global-to-local, align 4
  %v0_10002db4 = load i32, i32* @r29, align 4
  store i32 %v0_10002db4, i32* %r3.global-to-local, align 4
  store i32 268447164, i32* @lr, align 4
  %v5_10002db8 = inttoptr i32 %v0_10002da8 to i32*
  %v6_10002db8 = call i32 @function_10000628(i32 %v0_10002db4, i32* %v5_10002db8, i32 25, i32 %v3_10002da4, i32 268566528)
  store i32 %v6_10002db8, i32* %r15.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268447184, i32* @lr, align 4
  %v3_10002dcc = call i32 @function_10009e58(i32 2, i32 3, i32 6)
  store i32 %v3_10002dcc, i32* %r3.global-to-local, align 4
  %v3_10002dd0 = icmp eq i32 %v3_10002dcc, -1
  store i32 %v3_10002dcc, i32* %r26.global-to-local, align 4
  br i1 %v3_10002dd0, label %dec_label_pc_10003108, label %dec_label_pc_10002ddc

dec_label_pc_10002ddc:                            ; preds = %dec_label_pc_10002bc4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10002de8 = ptrtoint i32* %stack_var_-120 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-120, align 4
  store i32 268447224, i32* @lr, align 4
  %v4_10002df4 = call i32 @function_10009e1c(i32 0, i32 3, i32 %v2_10002de8, i32 4)
  store i32 %v4_10002df4, i32* %r3.global-to-local, align 4
  %v3_10002df8 = icmp eq i32 %v4_10002df4, -1
  br i1 %v3_10002df8, label %dec_label_pc_10003100, label %dec_label_pc_10002e00

dec_label_pc_10002e00:                            ; preds = %dec_label_pc_10002ddc
  %v0_10002e00 = load i32, i32* %r24.global-to-local, align 4
  %v1_10002e00 = icmp slt i32 %v0_10002e00, 0
  %v3_10002e00 = icmp eq i32 %v0_10002e00, 0
  store i1 %v1_10002e00, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10002e00, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-120, align 4
  %v0_10002e0c = load i32, i32* %r21.global-to-local, align 4
  %v1_10002e0c = urem i32 %v0_10002e0c, 65536
  store i32 %v1_10002e0c, i32* %r21.global-to-local, align 4
  %v0_10002e10 = load i32, i32* %r22.global-to-local, align 4
  %v1_10002e10 = urem i32 %v0_10002e10, 65536
  store i32 %v1_10002e10, i32* %r22.global-to-local, align 4
  %v0_10002e14 = load i32, i32* %r23.global-to-local, align 4
  %v1_10002e14 = urem i32 %v0_10002e14, 65536
  store i32 %v1_10002e14, i32* %r23.global-to-local, align 4
  %v0_10002e18 = load i32, i32* %r14.global-to-local, align 4
  %v1_10002e18 = urem i32 %v0_10002e18, 256
  store i32 %v1_10002e18, i32* %r14.global-to-local, align 4
  %tmp40 = icmp slt i32 %v0_10002e00, 1
  br i1 %tmp40, label %dec_label_pc_10002f7c, label %dec_label_pc_10002e20

dec_label_pc_10002e20:                            ; preds = %dec_label_pc_10002e00
  store i32 %v5_10002d6c, i32* %r0.global-to-local, align 4
  %v0_10002e24 = load i32, i32* @r31, align 4
  %v3_10002e24 = icmp eq i32 %v0_10002e24, 0
  store i1 %v3_10002e24, i1* %cr3_eq.global-to-local, align 1
  %v0_10002e28 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002e28 = urem i32 %v0_10002e28, 2
  store i32 %v1_10002e28, i32* %r29.global-to-local, align 4
  %v0_10002e2c = load i32, i32* %r17.global-to-local, align 4
  %v1_10002e2c = urem i32 %v0_10002e2c, 2
  store i32 %v1_10002e2c, i32* %r17.global-to-local, align 4
  %v0_10002e30 = load i32, i32* %r18.global-to-local, align 4
  %v1_10002e30 = urem i32 %v0_10002e30, 2
  store i32 %v1_10002e30, i32* %r18.global-to-local, align 4
  %v1_10002e34 = urem i32 %v5_10002d6c, 2
  store i32 %v1_10002e34, i32* %r28.global-to-local, align 4
  %v0_10002e38 = load i32, i32* %r30.global-to-local, align 4
  %v1_10002e38 = urem i32 %v0_10002e38, 2
  store i32 %v1_10002e38, i32* %r30.global-to-local, align 4
  %v1_10002e3c = urem i32 %v0_10002e18, 2
  store i32 %v1_10002e3c, i32* %r16.global-to-local, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v4_10002e8c = sext i8 %v5_10002c5c to i32
  %v4_10002e94 = sext i8 %v5_10002c94 to i32
  br label %dec_label_pc_10002e44

dec_label_pc_10002e44:                            ; preds = %dec_label_pc_10002ea8, %dec_label_pc_10002e20
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 268447312, i32* @lr, align 4
  %v2_10002e4c = call i32 @function_1000a1b4(i32 128, i32 1)
  store i32 %v2_10002e4c, i32* %r3.global-to-local, align 4
  %v3_10002e50 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10002e50, i32* %r9.global-to-local, align 4
  %v0_10002e54 = load i32, i32* @r31, align 4
  %v1_10002e54 = mul i32 %v0_10002e54, 4
  store i32 %v1_10002e54, i32* %r0.global-to-local, align 4
  %v1_10002e58 = load i32, i32* %r25.global-to-local, align 4
  %v3_10002e58 = add i32 %v1_10002e58, %v1_10002e54
  %v4_10002e58 = inttoptr i32 %v3_10002e58 to i32*
  store i32 %v2_10002e4c, i32* %v4_10002e58, align 4
  %v0_10002e5c = load i32, i32* %r9.global-to-local, align 4
  %v1_10002e5c = mul i32 %v0_10002e5c, 4
  store i32 %v1_10002e5c, i32* %r9.global-to-local, align 4
  %v1_10002e60 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002e60 = add i32 %v1_10002e60, %v1_10002e5c
  %v3_10002e60 = inttoptr i32 %v2_10002e60 to i32*
  %v4_10002e60 = load i32, i32* %v3_10002e60, align 4
  store i32 %v4_10002e60, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10002e68 = inttoptr i32 %v4_10002e60 to i32*
  %v2_10002e68 = load i32, i32* %v1_10002e68, align 4
  store i32 %v2_10002e68, i32* %r0.global-to-local, align 4
  %v1_10002e6c = add i32 %v4_10002e60, 20
  store i32 %v1_10002e6c, i32* %r11.global-to-local, align 4
  %v0_10002e70 = load i32, i32* %r21.global-to-local, align 4
  %v1_10002e70 = trunc i32 %v0_10002e70 to i16
  %v3_10002e70 = add i32 %v4_10002e60, 4
  %v4_10002e70 = inttoptr i32 %v3_10002e70 to i16*
  store i16 %v1_10002e70, i16* %v4_10002e70, align 2
  %v1_10002e74 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10002e74, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10002e7c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 60, i32* %r9.global-to-local, align 4
  %v1_10002e84 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002e84 = inttoptr i32 %v1_10002e84 to i32*
  store i32 %v1_10002e7c, i32* %v2_10002e84, align 4
  %v0_10002e88 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002e88 = trunc i32 %v0_10002e88 to i16
  %v2_10002e88 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002e88 = add i32 %v2_10002e88, 2
  %v4_10002e88 = inttoptr i32 %v3_10002e88 to i16*
  store i16 %v1_10002e88, i16* %v4_10002e88, align 2
  store i32 %v4_10002e8c, i32* %r0.global-to-local, align 4
  %v2_10002e90 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002e90 = add i32 %v2_10002e90, 1
  %v4_10002e90 = inttoptr i32 %v3_10002e90 to i8*
  store i8 %v5_10002c5c, i8* %v4_10002e90, align 1
  store i32 %v4_10002e94, i32* %r9.global-to-local, align 4
  %v2_10002e98 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002e98 = add i32 %v2_10002e98, 8
  %v4_10002e98 = inttoptr i32 %v3_10002e98 to i8*
  store i8 %v5_10002c94, i8* %v4_10002e98, align 1
  %v0_10002e9c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002e9c, label %dec_label_pc_10002ea8, label %dec_label_pc_10002ea0

dec_label_pc_10002ea0:                            ; preds = %dec_label_pc_10002e44
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10002ea4 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002ea4 = add i32 %v2_10002ea4, 6
  %v4_10002ea4 = inttoptr i32 %v3_10002ea4 to i16*
  store i16 16384, i16* %v4_10002ea4, align 2
  br label %dec_label_pc_10002ea8

dec_label_pc_10002ea8:                            ; preds = %dec_label_pc_10002e44, %dec_label_pc_10002ea0
  store i32 6, i32* %r0.global-to-local, align 4
  %v0_10002eac = load i32, i32* %r15.global-to-local, align 4
  %v1_10002eac = load i32, i32* %r31.global-to-local, align 4
  %v2_10002eac = add i32 %v1_10002eac, 12
  %v3_10002eac = inttoptr i32 %v2_10002eac to i32*
  store i32 %v0_10002eac, i32* %v3_10002eac, align 4
  %v0_10002eb0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002eb0 = trunc i32 %v0_10002eb0 to i8
  %v2_10002eb0 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002eb0 = add i32 %v2_10002eb0, 9
  %v4_10002eb0 = inttoptr i32 %v3_10002eb0 to i8*
  store i8 %v1_10002eb0, i8* %v4_10002eb0, align 1
  %v0_10002eb4 = load i32, i32* %r22.global-to-local, align 4
  %v1_10002eb4 = trunc i32 %v0_10002eb4 to i16
  %v2_10002eb4 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002eb4 = add i32 %v2_10002eb4, 20
  %v4_10002eb4 = inttoptr i32 %v3_10002eb4 to i16*
  store i16 %v1_10002eb4, i16* %v4_10002eb4, align 2
  %v3_10002eb8 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10002eb8, i32* %r9.global-to-local, align 4
  %v0_10002ebc = load i32, i32* %r23.global-to-local, align 4
  %v1_10002ebc = trunc i32 %v0_10002ebc to i16
  %v2_10002ebc = load i32, i32* %r11.global-to-local, align 4
  %v3_10002ebc = add i32 %v2_10002ebc, 2
  %v4_10002ebc = inttoptr i32 %v3_10002ebc to i16*
  store i16 %v1_10002ebc, i16* %v4_10002ebc, align 2
  %v0_10002ec0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002ec0 = mul i32 %v0_10002ec0, 24
  %v1_10002ec4 = load i32, i32* %r27.global-to-local, align 4
  %v2_10002ec4 = add i32 %v1_10002ec4, %v1_10002ec0
  store i32 %v2_10002ec4, i32* %r9.global-to-local, align 4
  %v1_10002ec8 = add i32 %v2_10002ec4, 16
  %v2_10002ec8 = inttoptr i32 %v1_10002ec8 to i32*
  %v3_10002ec8 = load i32, i32* %v2_10002ec8, align 4
  store i32 %v3_10002ec8, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r9.global-to-local, align 4
  %v1_10002ed0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002ed0 = add i32 %v1_10002ed0, 16
  %v3_10002ed0 = inttoptr i32 %v2_10002ed0 to i32*
  store i32 %v3_10002ec8, i32* %v3_10002ed0, align 4
  %v0_10002ed4 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002ed4 = load i32, i32* %r11.global-to-local, align 4
  %v2_10002ed4 = add i32 %v1_10002ed4, 4
  %v3_10002ed4 = inttoptr i32 %v2_10002ed4 to i32*
  store i32 %v0_10002ed4, i32* %v3_10002ed4, align 4
  %v0_10002ed8 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002ed8 = add i32 %v0_10002ed8, 12
  %v2_10002ed8 = inttoptr i32 %v1_10002ed8 to i32*
  %v3_10002ed8 = load i32, i32* %v2_10002ed8, align 4
  store i32 %v3_10002ed8, i32* %r0.global-to-local, align 4
  %v1_10002edc = call i32 @__asm_rlwimi(i32 10, i32 28, i32 0, i32 3)
  store i32 %v1_10002edc, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10002ee4 = call i32 @__asm_rlwimi(i32 %v1_10002e3c, i32 21, i32 10, i32 10)
  store i32 %v1_10002ee4, i32* %r0.global-to-local, align 4
  %v1_10002ee8 = call i32 @__asm_rlwimi(i32 %v1_10002e2c, i32 20, i32 11, i32 11)
  store i32 %v1_10002ee8, i32* %r0.global-to-local, align 4
  %v1_10002eec = call i32 @__asm_rlwimi(i32 %v1_10002e30, i32 19, i32 12, i32 12)
  store i32 %v1_10002eec, i32* %r0.global-to-local, align 4
  %v1_10002ef0 = call i32 @__asm_rlwimi(i32 %v1_10002e34, i32 18, i32 13, i32 13)
  store i32 %v1_10002ef0, i32* %r0.global-to-local, align 4
  %v1_10002ef4 = call i32 @__asm_rlwimi(i32 %v1_10002e28, i32 17, i32 14, i32 14)
  store i32 %v1_10002ef4, i32* %r0.global-to-local, align 4
  %v1_10002ef8 = call i32 @__asm_rlwimi(i32 %v1_10002e38, i32 16, i32 15, i32 15)
  %v1_10002efc = load i32, i32* %r11.global-to-local, align 4
  %v2_10002efc = add i32 %v1_10002efc, 12
  %v3_10002efc = inttoptr i32 %v2_10002efc to i32*
  store i32 %v1_10002ef8, i32* %v3_10002efc, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_10002f04 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f04 = add i32 %v2_10002f04, 40
  %v4_10002f04 = inttoptr i32 %v3_10002f04 to i8*
  store i8 2, i8* %v4_10002f04, align 1
  %v0_10002f08 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002f08 = trunc i32 %v0_10002f08 to i8
  %v2_10002f08 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f08 = add i32 %v2_10002f08, 41
  %v4_10002f08 = inttoptr i32 %v3_10002f08 to i8*
  store i8 %v1_10002f08, i8* %v4_10002f08, align 1
  %v0_10002f0c = call i32 @function_10005f74()
  %v2_10002f14 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f14 = add i32 %v2_10002f14, 46
  %v4_10002f14 = inttoptr i32 %v3_10002f14 to i8*
  store i8 8, i8* %v4_10002f14, align 1
  %v1_10002f18 = urem i32 %v0_10002f0c, 16
  store i32 %v1_10002f18, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v2_10002f24 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f24 = add i32 %v2_10002f24, 44
  %v4_10002f24 = inttoptr i32 %v3_10002f24 to i8*
  store i8 4, i8* %v4_10002f24, align 1
  %v0_10002f28 = load i32, i32* %r3.global-to-local, align 4
  %v1_10002f28 = add i32 %v0_10002f28, 1400
  store i32 %v1_10002f28, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_10002f30 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002f30 = trunc i32 %v0_10002f30 to i8
  %v2_10002f30 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f30 = add i32 %v2_10002f30, 45
  %v4_10002f30 = inttoptr i32 %v3_10002f30 to i8*
  store i8 %v1_10002f30, i8* %v4_10002f30, align 1
  %v0_10002f34 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002f34 = trunc i32 %v0_10002f34 to i8
  %v2_10002f34 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f34 = add i32 %v2_10002f34, 47
  %v4_10002f34 = inttoptr i32 %v3_10002f34 to i8*
  store i8 %v1_10002f34, i8* %v4_10002f34, align 1
  %v0_10002f38 = load i32, i32* %r3.global-to-local, align 4
  %v1_10002f38 = trunc i32 %v0_10002f38 to i16
  %v2_10002f38 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f38 = add i32 %v2_10002f38, 42
  %v4_10002f38 = inttoptr i32 %v3_10002f38 to i16*
  store i16 %v1_10002f38, i16* %v4_10002f38, align 2
  %v0_10002f3c = call i32 @function_10005f74()
  store i32 %v0_10002f3c, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  %v1_10002f48 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002f48 = add i32 %v1_10002f48, 52
  %v3_10002f48 = inttoptr i32 %v2_10002f48 to i32*
  store i32 0, i32* %v3_10002f48, align 4
  %v0_10002f4c = load i32, i32* %r9.global-to-local, align 4
  %v1_10002f4c = trunc i32 %v0_10002f4c to i8
  %v2_10002f4c = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f4c = add i32 %v2_10002f4c, 56
  %v4_10002f4c = inttoptr i32 %v3_10002f4c to i8*
  store i8 %v1_10002f4c, i8* %v4_10002f4c, align 1
  store i32 6, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r9.global-to-local, align 4
  %v1_10002f58 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002f58 = add i32 %v1_10002f58, 48
  %v3_10002f58 = inttoptr i32 %v2_10002f58 to i32*
  store i32 %v0_10002f3c, i32* %v3_10002f58, align 4
  %v0_10002f5c = load i32, i32* %r0.global-to-local, align 4
  %v1_10002f5c = trunc i32 %v0_10002f5c to i8
  %v2_10002f5c = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f5c = add i32 %v2_10002f5c, 59
  %v4_10002f5c = inttoptr i32 %v3_10002f5c to i8*
  store i8 %v1_10002f5c, i8* %v4_10002f5c, align 1
  %v0_10002f60 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002f60 = trunc i32 %v0_10002f60 to i8
  %v2_10002f60 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f60 = add i32 %v2_10002f60, 57
  %v4_10002f60 = inttoptr i32 %v3_10002f60 to i8*
  store i8 %v1_10002f60, i8* %v4_10002f60, align 1
  %v0_10002f64 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002f64 = trunc i32 %v0_10002f64 to i8
  %v2_10002f64 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f64 = add i32 %v2_10002f64, 58
  %v4_10002f64 = inttoptr i32 %v3_10002f64 to i8*
  store i8 %v1_10002f64, i8* %v4_10002f64, align 1
  %v3_10002f68 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10002f68, i32* %r9.global-to-local, align 4
  %v1_10002f6c = add i32 %v3_10002f68, 1
  store i32 %v1_10002f6c, i32* %r31.global-to-local, align 4
  %v1_10002f70 = load i32, i32* %r24.global-to-local, align 4
  %v2_10002f70 = icmp slt i32 %v1_10002f6c, %v1_10002f70
  store i32 %v1_10002f6c, i32* %stack_var_-120, align 4
  br i1 %v2_10002f70, label %dec_label_pc_10002e44, label %dec_label_pc_10002f7c.loopexit

dec_label_pc_10002f7c.loopexit:                   ; preds = %dec_label_pc_10002ea8
  %v0_10002f80.pre = load i32, i32* %r14.global-to-local, align 4
  %v0_10002f84.pre.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10002f84.pre.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10002f7c

dec_label_pc_10002f7c:                            ; preds = %dec_label_pc_10002f7c.loopexit, %dec_label_pc_10002e00
  %v1_10002f84.pre = phi i1 [ %v1_10002f84.pre.pre, %dec_label_pc_10002f7c.loopexit ], [ %v1_10002e00, %dec_label_pc_10002e00 ]
  %v0_10002f84.pre = phi i1 [ %v0_10002f84.pre.pre, %dec_label_pc_10002f7c.loopexit ], [ %v3_10002e00, %dec_label_pc_10002e00 ]
  %v0_10002f80 = phi i32 [ %v0_10002f80.pre, %dec_label_pc_10002f7c.loopexit ], [ %v1_10002e18, %dec_label_pc_10002e00 ]
  %v0_10002f7c = load i32, i32* %r15.global-to-local, align 4
  %v3_10002f7c = icmp eq i32 %v0_10002f7c, -1
  store i1 %v3_10002f7c, i1* %cr2_eq.global-to-local, align 1
  %v3_10002f80 = icmp eq i32 %v0_10002f80, 0
  store i1 %v3_10002f80, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_10002f84.outer

dec_label_pc_10002f84.outer:                      ; preds = %dec_label_pc_10003060, %dec_label_pc_10002f7c
  %v1_10002f84.ph = phi i1 [ %v1_10002f84.pre, %dec_label_pc_10002f7c ], [ %v1_10003060, %dec_label_pc_10003060 ]
  %v0_10002f84.ph = phi i1 [ %v0_10002f84.pre, %dec_label_pc_10002f7c ], [ %v0_10003060, %dec_label_pc_10003060 ]
  %v2_10002f84 = or i1 %v1_10002f84.ph, %v0_10002f84.ph
  br label %dec_label_pc_10002f84

dec_label_pc_10002f84:                            ; preds = %dec_label_pc_10002f84.outer, %dec_label_pc_10002f84
  br i1 %v2_10002f84, label %dec_label_pc_10002f84, label %dec_label_pc_10002f88

dec_label_pc_10002f88:                            ; preds = %dec_label_pc_10002f84, %dec_label_pc_10003060
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-120, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10002f98

dec_label_pc_10002f98:                            ; preds = %dec_label_pc_10002ff0, %dec_label_pc_10002f88
  %v0_10002f98 = phi i32 [ %v1_10003050, %dec_label_pc_10002ff0 ], [ 0, %dec_label_pc_10002f88 ]
  %v1_10002f98 = mul i32 %v0_10002f98, 24
  store i32 %v1_10002f98, i32* %r0.global-to-local, align 4
  %v1_10002f9c = mul i32 %v0_10002f98, 4
  store i32 %v1_10002f9c, i32* %r11.global-to-local, align 4
  %v1_10002fa0 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002fa0 = add i32 %v1_10002fa0, %v1_10002f9c
  %v3_10002fa0 = inttoptr i32 %v2_10002fa0 to i32*
  %v4_10002fa0 = load i32, i32* %v3_10002fa0, align 4
  store i32 %v4_10002fa0, i32* %r28.global-to-local, align 4
  %v1_10002fa4 = load i32, i32* %r27.global-to-local, align 4
  %v2_10002fa4 = add i32 %v1_10002fa4, %v1_10002f98
  %v1_10002fa8 = add i32 %v2_10002fa4, 20
  %v2_10002fa8 = inttoptr i32 %v1_10002fa8 to i8*
  %v3_10002fa8 = load i8, i8* %v2_10002fa8, align 1
  %v4_10002fa8 = zext i8 %v3_10002fa8 to i32
  store i32 %v4_10002fa8, i32* %r9.global-to-local, align 4
  %v1_10002fac = add i32 %v4_10002fa0, 20
  store i32 %v1_10002fac, i32* @r31, align 4
  %tmp41 = icmp ult i8 %v3_10002fa8, 32
  br i1 %tmp41, label %dec_label_pc_10003068, label %dec_label_pc_10002fb8

dec_label_pc_10002fb8:                            ; preds = %dec_label_pc_10002f98
  %v0_10002fb8 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002fb8, label %dec_label_pc_10003090, label %dec_label_pc_10002fbc

dec_label_pc_10002fbc:                            ; preds = %dec_label_pc_10003068, %dec_label_pc_10002fb8
  store i32 65535, i32* %r29.global-to-local, align 4
  %v0_10002fc4 = load i32, i32* %r21.global-to-local, align 4
  %v4_10002fc4 = icmp eq i32 %v0_10002fc4, 65535
  br i1 %v4_10002fc4, label %dec_label_pc_100030a8, label %dec_label_pc_10002fcc

dec_label_pc_10002fcc:                            ; preds = %dec_label_pc_10003090, %dec_label_pc_10002fbc
  %v1_10002fcc = phi i32 [ %v1_100030a0, %dec_label_pc_10003090 ], [ 65535, %dec_label_pc_10002fbc ]
  %v0_10002fcc = load i32, i32* %r22.global-to-local, align 4
  %v4_10002fcc = icmp eq i32 %v0_10002fcc, %v1_10002fcc
  br i1 %v4_10002fcc, label %dec_label_pc_100030b8, label %dec_label_pc_10002fd4

dec_label_pc_10002fd4:                            ; preds = %dec_label_pc_100030a8.dec_label_pc_10002fd4_crit_edge, %dec_label_pc_10002fcc
  %v1_10002fd4 = phi i32 [ %v1_10002fd4.pre, %dec_label_pc_100030a8.dec_label_pc_10002fd4_crit_edge ], [ %v1_10002fcc, %dec_label_pc_10002fcc ]
  %v0_10002fd4 = load i32, i32* %r23.global-to-local, align 4
  %v4_10002fd4 = icmp eq i32 %v0_10002fd4, %v1_10002fd4
  br i1 %v4_10002fd4, label %dec_label_pc_100030c8, label %dec_label_pc_10002fdc

dec_label_pc_10002fdc:                            ; preds = %dec_label_pc_100030b8.dec_label_pc_10002fdc_crit_edge, %dec_label_pc_10002fd4
  %v1_10002fdc = phi i32 [ %v1_10002fdc.pre, %dec_label_pc_100030b8.dec_label_pc_10002fdc_crit_edge ], [ %v1_10002fd4, %dec_label_pc_10002fd4 ]
  %v0_10002fdc = load i32, i32* %r19.global-to-local, align 4
  %v4_10002fdc = icmp eq i32 %v0_10002fdc, %v1_10002fdc
  br i1 %v4_10002fdc, label %dec_label_pc_100030d8, label %dec_label_pc_10002fe4

dec_label_pc_10002fe4:                            ; preds = %dec_label_pc_100030c8.dec_label_pc_10002fe4_crit_edge, %dec_label_pc_10002fdc
  %v1_10002fe4 = phi i32 [ %v1_10002fe4.pre, %dec_label_pc_100030c8.dec_label_pc_10002fe4_crit_edge ], [ %v1_10002fdc, %dec_label_pc_10002fdc ]
  %v0_10002fe4 = load i32, i32* %r20.global-to-local, align 4
  %v4_10002fe4 = icmp eq i32 %v0_10002fe4, %v1_10002fe4
  br i1 %v4_10002fe4, label %dec_label_pc_100030e8, label %dec_label_pc_10002fec

dec_label_pc_10002fec:                            ; preds = %dec_label_pc_100030d8, %dec_label_pc_10002fe4
  %v0_10002fec = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002fec, label %dec_label_pc_10002ff0, label %dec_label_pc_100030f4

dec_label_pc_10002ff0:                            ; preds = %dec_label_pc_10002fec, %dec_label_pc_100030e8, %dec_label_pc_100030f4
  %v0_10002ff0 = load i32, i32* %r30.global-to-local, align 4
  %v1_10002ff0 = trunc i32 %v0_10002ff0 to i16
  %v2_10002ff0 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002ff0 = add i32 %v2_10002ff0, 10
  %v4_10002ff0 = inttoptr i32 %v3_10002ff0 to i16*
  store i16 %v1_10002ff0, i16* %v4_10002ff0, align 2
  %v0_10002ff8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002ff8, i32* @r3, align 4
  %v2_10002ffc = call i32 @function_100043cc(i32 %v0_10002ff8, i32 20)
  %v3_10002ffc = trunc i32 %v2_10002ffc to i16
  %v0_10003000 = load i32, i32* @r31, align 4
  store i32 %v0_10003000, i32* @r4, align 4
  %v4_10003004 = add i32 %v0_10002ff8, 10
  %v5_10003004 = inttoptr i32 %v4_10003004 to i16*
  store i16 %v3_10002ffc, i16* %v5_10003004, align 2
  %v0_1000300c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000300c = trunc i32 %v0_1000300c to i16
  %v2_1000300c = load i32, i32* @r31, align 4
  %v3_1000300c = add i32 %v2_1000300c, 16
  %v4_1000300c = inttoptr i32 %v3_1000300c to i16*
  store i16 %v1_1000300c, i16* %v4_1000300c, align 2
  %v0_10003014 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003014, i32* %r3.global-to-local, align 4
  %v4_10003018 = call i32 @function_10004430(i32 %v0_10003014, i32 %v0_10003000, i32 40, i32 40)
  %v5_10003018 = trunc i32 %v4_10003018 to i16
  store i32 %v4_10003018, i32* %r3.global-to-local, align 4
  %v3_1000301c = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1000301c, i32* %r7.global-to-local, align 4
  %v0_10003020 = load i32, i32* @r31, align 4
  %v1_10003020 = add i32 %v0_10003020, 2
  %v2_10003020 = inttoptr i32 %v1_10003020 to i16*
  %v3_10003020 = load i16, i16* %v2_10003020, align 2
  %v4_10003020 = zext i16 %v3_10003020 to i32
  store i32 %v4_10003020, i32* %r0.global-to-local, align 4
  %v0_10003024 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003028 = mul i32 %v3_1000301c, 24
  store i32 %v1_10003028, i32* %r7.global-to-local, align 4
  %v4_1000302c = add i32 %v0_10003020, 16
  %v5_1000302c = inttoptr i32 %v4_1000302c to i16*
  store i16 %v5_10003018, i16* %v5_1000302c, align 2
  %v0_10003034 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10003034, i32* %r3.global-to-local, align 4
  %v0_10003038 = load i32, i32* %r7.global-to-local, align 4
  %v1_10003038 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003038 = add i32 %v1_10003038, %v0_10003038
  store i32 %v2_10003038, i32* %r7.global-to-local, align 4
  %v0_10003040 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003040 = trunc i32 %v0_10003040 to i16
  %v3_10003040 = add i32 %v2_10003038, 2
  %v4_10003040 = inttoptr i32 %v3_10003040 to i16*
  store i16 %v1_10003040, i16* %v4_10003040, align 2
  store i32 268447820, i32* @lr, align 4
  %v6_10003048 = call i32 @function_10009ddc(i32 %v0_10003034, i32 %v0_10003024, i32 60, i32 16384, i32 %v2_10003038, i32 16)
  store i32 %v6_10003048, i32* %r3.global-to-local, align 4
  %v3_1000304c = load i32, i32* %stack_var_-120, align 4
  %v1_10003050 = add i32 %v3_1000304c, 1
  store i32 %v1_10003050, i32* %r9.global-to-local, align 4
  %v1_10003054 = load i32, i32* %r24.global-to-local, align 4
  %v2_10003054 = icmp slt i32 %v1_10003050, %v1_10003054
  store i32 %v1_10003050, i32* %stack_var_-120, align 4
  br i1 %v2_10003054, label %dec_label_pc_10002f98, label %dec_label_pc_10003060

dec_label_pc_10003060:                            ; preds = %dec_label_pc_10002ff0
  %v0_10003060 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003060 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10003060 = or i1 %v0_10003060, %v1_10003060
  br i1 %v2_10003060, label %dec_label_pc_10002f84.outer, label %dec_label_pc_10002f88

dec_label_pc_10003068:                            ; preds = %dec_label_pc_10002f98
  %v1_10003068 = add i32 %v2_10002fa4, 16
  %v2_10003068 = inttoptr i32 %v1_10003068 to i32*
  %v3_10003068 = load i32, i32* %v2_10003068, align 4
  store i32 %v3_10003068, i32* %r29.global-to-local, align 4
  %v0_1000306c = call i32 @function_10005f74()
  store i32 %v0_1000306c, i32* %r3.global-to-local, align 4
  %v3_10003070 = load i32, i32* %stack_var_-120, align 4
  %v1_10003074 = mul i32 %v3_10003070, 24
  %v1_10003078 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003078 = add i32 %v1_10003078, %v1_10003074
  store i32 %v2_10003078, i32* %r9.global-to-local, align 4
  %v1_1000307c = add i32 %v2_10003078, 20
  %v2_1000307c = inttoptr i32 %v1_1000307c to i8*
  %v3_1000307c = load i8, i8* %v2_1000307c, align 1
  %v4_1000307c = zext i8 %v3_1000307c to i32
  store i32 %v4_1000307c, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_1000307c, 64
  %v2_10003080 = zext i8 %tmp to i32
  %v3_10003080 = lshr i32 %v0_1000306c, %v2_10003080
  store i32 %v3_10003080, i32* %r3.global-to-local, align 4
  %v0_10003084 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003084 = add i32 %v3_10003080, %v0_10003084
  store i32 %v2_10003084, i32* %r29.global-to-local, align 4
  %v1_10003088 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003088 = add i32 %v1_10003088, 16
  %v3_10003088 = inttoptr i32 %v2_10003088 to i32*
  store i32 %v2_10003084, i32* %v3_10003088, align 4
  %v0_1000308c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000308c, label %dec_label_pc_10003090, label %dec_label_pc_10002fbc

dec_label_pc_10003090:                            ; preds = %dec_label_pc_10003068, %dec_label_pc_10002fb8
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10003094 = call i32 @function_10005f74()
  store i32 %v0_10003094, i32* %r3.global-to-local, align 4
  store i32 65535, i32* %r29.global-to-local, align 4
  %v1_1000309c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000309c = add i32 %v1_1000309c, 12
  %v3_1000309c = inttoptr i32 %v2_1000309c to i32*
  store i32 %v0_10003094, i32* %v3_1000309c, align 4
  %v0_100030a0 = load i32, i32* %r21.global-to-local, align 4
  %v1_100030a0 = load i32, i32* %r29.global-to-local, align 4
  %v4_100030a0 = icmp eq i32 %v0_100030a0, %v1_100030a0
  br i1 %v4_100030a0, label %dec_label_pc_100030a8, label %dec_label_pc_10002fcc

dec_label_pc_100030a8:                            ; preds = %dec_label_pc_10003090, %dec_label_pc_10002fbc
  %v0_100030a8 = call i32 @function_10005f74()
  %v1_100030a8 = trunc i32 %v0_100030a8 to i16
  store i32 %v0_100030a8, i32* %r3.global-to-local, align 4
  %v0_100030ac = load i32, i32* %r22.global-to-local, align 4
  %v1_100030ac = load i32, i32* %r29.global-to-local, align 4
  %v4_100030ac = icmp eq i32 %v0_100030ac, %v1_100030ac
  %v3_100030b0 = load i32, i32* %r28.global-to-local, align 4
  %v4_100030b0 = add i32 %v3_100030b0, 4
  %v5_100030b0 = inttoptr i32 %v4_100030b0 to i16*
  store i16 %v1_100030a8, i16* %v5_100030b0, align 2
  br i1 %v4_100030ac, label %dec_label_pc_100030b8, label %dec_label_pc_100030a8.dec_label_pc_10002fd4_crit_edge

dec_label_pc_100030a8.dec_label_pc_10002fd4_crit_edge: ; preds = %dec_label_pc_100030a8
  %v1_10002fd4.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10002fd4

dec_label_pc_100030b8:                            ; preds = %dec_label_pc_100030a8, %dec_label_pc_10002fcc
  %v0_100030b8 = call i32 @function_10005f74()
  %v1_100030b8 = trunc i32 %v0_100030b8 to i16
  store i32 %v0_100030b8, i32* %r3.global-to-local, align 4
  %v0_100030bc = load i32, i32* %r23.global-to-local, align 4
  %v1_100030bc = load i32, i32* %r29.global-to-local, align 4
  %v4_100030bc = icmp eq i32 %v0_100030bc, %v1_100030bc
  %v3_100030c0 = load i32, i32* %r28.global-to-local, align 4
  %v4_100030c0 = add i32 %v3_100030c0, 20
  %v5_100030c0 = inttoptr i32 %v4_100030c0 to i16*
  store i16 %v1_100030b8, i16* %v5_100030c0, align 2
  br i1 %v4_100030bc, label %dec_label_pc_100030c8, label %dec_label_pc_100030b8.dec_label_pc_10002fdc_crit_edge

dec_label_pc_100030b8.dec_label_pc_10002fdc_crit_edge: ; preds = %dec_label_pc_100030b8
  %v1_10002fdc.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10002fdc

dec_label_pc_100030c8:                            ; preds = %dec_label_pc_100030b8, %dec_label_pc_10002fd4
  %v0_100030c8 = call i32 @function_10005f74()
  %v1_100030c8 = trunc i32 %v0_100030c8 to i16
  store i32 %v0_100030c8, i32* %r3.global-to-local, align 4
  %v0_100030cc = load i32, i32* %r19.global-to-local, align 4
  %v1_100030cc = load i32, i32* %r29.global-to-local, align 4
  %v4_100030cc = icmp eq i32 %v0_100030cc, %v1_100030cc
  %v3_100030d0 = load i32, i32* @r31, align 4
  %v4_100030d0 = add i32 %v3_100030d0, 2
  %v5_100030d0 = inttoptr i32 %v4_100030d0 to i16*
  store i16 %v1_100030c8, i16* %v5_100030d0, align 2
  br i1 %v4_100030cc, label %dec_label_pc_100030d8, label %dec_label_pc_100030c8.dec_label_pc_10002fe4_crit_edge

dec_label_pc_100030c8.dec_label_pc_10002fe4_crit_edge: ; preds = %dec_label_pc_100030c8
  %v1_10002fe4.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10002fe4

dec_label_pc_100030d8:                            ; preds = %dec_label_pc_100030c8, %dec_label_pc_10002fdc
  %v0_100030d8 = call i32 @function_10005f74()
  store i32 %v0_100030d8, i32* %r3.global-to-local, align 4
  %v0_100030dc = load i32, i32* %r20.global-to-local, align 4
  %v1_100030dc = load i32, i32* %r29.global-to-local, align 4
  %v4_100030dc = icmp eq i32 %v0_100030dc, %v1_100030dc
  %v1_100030e0 = load i32, i32* @r31, align 4
  %v2_100030e0 = add i32 %v1_100030e0, 4
  %v3_100030e0 = inttoptr i32 %v2_100030e0 to i32*
  store i32 %v0_100030d8, i32* %v3_100030e0, align 4
  br i1 %v4_100030dc, label %dec_label_pc_100030e8, label %dec_label_pc_10002fec

dec_label_pc_100030e8:                            ; preds = %dec_label_pc_100030d8, %dec_label_pc_10002fe4
  %v0_100030e8 = call i32 @function_10005f74()
  store i32 %v0_100030e8, i32* %r3.global-to-local, align 4
  %v1_100030ec = load i32, i32* @r31, align 4
  %v2_100030ec = add i32 %v1_100030ec, 8
  %v3_100030ec = inttoptr i32 %v2_100030ec to i32*
  store i32 %v0_100030e8, i32* %v3_100030ec, align 4
  %v0_100030f0 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100030f0, label %dec_label_pc_10002ff0, label %dec_label_pc_100030f4

dec_label_pc_100030f4:                            ; preds = %dec_label_pc_10002fec, %dec_label_pc_100030e8
  %v0_100030f4 = call i32 @function_10005f74()
  %v1_100030f4 = trunc i32 %v0_100030f4 to i16
  store i32 %v0_100030f4, i32* %r3.global-to-local, align 4
  %v3_100030f8 = load i32, i32* @r31, align 4
  %v4_100030f8 = add i32 %v3_100030f8, 18
  %v5_100030f8 = inttoptr i32 %v4_100030f8 to i16*
  store i16 %v1_100030f4, i16* %v5_100030f8, align 2
  br label %dec_label_pc_10002ff0

dec_label_pc_10003100:                            ; preds = %dec_label_pc_10002ddc
  %v0_10003100 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10003100, i32* %r3.global-to-local, align 4
  store i32 268448008, i32* @lr, align 4
  %v0_10003104 = call i32 @function_10009108()
  store i32 %v0_10003104, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003108

dec_label_pc_10003108:                            ; preds = %dec_label_pc_10002bc4, %dec_label_pc_10003100
  store i32 %v0_10002bdc, i32* %r0.global-to-local, align 4
  %v1_1000311c = call %0 @__asm_mtcrf(i32 56, i32 %v0_10002bcc)
  store i32 %v0_10002c1c, i32* %r28.global-to-local, align 4
  store i32 %v0_10002c24, i32* %r29.global-to-local, align 4
  store i32 %v0_10002c30, i32* %r31.global-to-local, align 4
  %v0_10003164 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10003164

; uselistorder directives
  uselistorder i32 %v0_100030f4, { 1, 0 }
  uselistorder i32 %v0_100030c8, { 1, 0 }
  uselistorder i32 %v0_100030b8, { 1, 0 }
  uselistorder i32 %v0_100030a8, { 1, 0 }
  uselistorder i32 %v1_100030a0, { 1, 0 }
  uselistorder i1 %v1_10003060, { 1, 0 }
  uselistorder i1 %v0_10003060, { 1, 0 }
  uselistorder i32 %v1_10003050, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10003018, { 1, 0 }
  uselistorder i32 %v1_10002f9c, { 1, 0 }
  uselistorder i32 %v1_10002e5c, { 1, 0 }
  uselistorder i32 %v1_10002e54, { 1, 0 }
  uselistorder i32 %v1_10002e3c, { 1, 0 }
  uselistorder i32 %v1_10002e38, { 1, 0 }
  uselistorder i32 %v1_10002e34, { 1, 0 }
  uselistorder i32 %v1_10002e30, { 1, 0 }
  uselistorder i32 %v1_10002e2c, { 1, 0 }
  uselistorder i32 %v1_10002e28, { 1, 0 }
  uselistorder i32 %v1_10002e18, { 1, 0 }
  uselistorder i8 %v5_10002c94, { 1, 0 }
  uselistorder i8 %v5_10002c5c, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 25, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 1, 0 }
  uselistorder i32* %r29.global-to-local, { 0, 10, 7, 11, 9, 12, 8, 13, 1, 2, 4, 3, 5, 6, 14, 15 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 21, 22, 23, 24, 26, 27, 28, 29, 30 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003108, { 1, 0 }
  uselistorder label %dec_label_pc_100030f4, { 1, 0 }
  uselistorder label %dec_label_pc_10002ff0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002f88, { 1, 0 }
  uselistorder label %dec_label_pc_10002f84, { 1, 0 }
  uselistorder label %dec_label_pc_10002ea8, { 1, 0 }
}

define i32 @function_10003168(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10003168:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v0_10003170 = call i32 @__asm_mfcr()
  store i32 %v0_10003170, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_1000319c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100031a4 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268448200, i32* @lr, align 4
  %v2_100031c4 = call i32 @function_1000a1b4(i32 4, i32 4)
  store i32 %v2_100031c4, i32* %r27.global-to-local, align 4
  %v0_100031d0 = load i32, i32* @r30, align 4
  store i32 %v0_100031d0, i32* %r3.global-to-local, align 4
  store i32 268448216, i32* @lr, align 4
  %v2_100031d4 = call i32 @function_1000a1b4(i32 %v0_100031d0, i32 4)
  %v0_100031dc = load i32, i32* @r28, align 4
  store i32 %v2_100031d4, i32* %r26.global-to-local, align 4
  %v0_100031ec = load i32, i32* @r29, align 4
  store i32 %v0_100031ec, i32* %r3.global-to-local, align 4
  store i32 268448244, i32* @lr, align 4
  %v4_100031f0 = inttoptr i32 %v0_100031dc to i32*
  %v5_100031f0 = call i32 @function_100006a8(i32 %v0_100031ec, i32* %v4_100031f0, i32 7, i32 65535)
  %v0_100031fc = load i32, i32* @r28, align 4
  %v1_10003204 = urem i32 %v5_100031f0, 65536
  store i32 %v1_10003204, i32* %r21.global-to-local, align 4
  %v0_10003208 = load i32, i32* @r29, align 4
  store i32 %v0_10003208, i32* %r3.global-to-local, align 4
  store i32 268448272, i32* @lr, align 4
  %v4_1000320c = inttoptr i32 %v0_100031fc to i32*
  %v5_1000320c = call i32 @function_100006a8(i32 %v0_10003208, i32* %v4_1000320c, i32 6, i32 65535)
  %v0_10003210 = load i32, i32* @r28, align 4
  %v1_10003214 = urem i32 %v5_1000320c, 65536
  store i32 %v1_10003214, i32* %r22.global-to-local, align 4
  %v0_10003220 = load i32, i32* @r29, align 4
  store i32 %v0_10003220, i32* %r3.global-to-local, align 4
  store i32 268448296, i32* @lr, align 4
  %v4_10003224 = inttoptr i32 %v0_10003210 to i32*
  %v5_10003224 = call i32 @function_100006a8(i32 %v0_10003220, i32* %v4_10003224, i32 0, i32 512)
  %v0_10003228 = load i32, i32* @r28, align 4
  %v1_1000322c = urem i32 %v5_10003224, 65536
  store i32 %v1_1000322c, i32* @r31, align 4
  %v0_10003234 = load i32, i32* @r29, align 4
  store i32 %v0_10003234, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10003240.23 to i32), i32* @lr, align 4
  %v4_1000323c = inttoptr i32 %v0_10003228 to i32*
  %v5_1000323c = call i32 @function_100006a8(i32 %v0_10003234, i32* %v4_1000323c, i32 1, i32 1)
  store i32 %v5_1000323c, i32* %r3.global-to-local, align 4
  %v0_1000324c = load i32, i32* %r22.global-to-local, align 4
  %v4_1000324c = icmp eq i32 %v0_1000324c, 65535
  %v1_10003254 = urem i32 %v5_1000323c, 256
  store i32 %v1_10003254, i32* %r23.global-to-local, align 4
  store i32 0, i32* %stack_var_-72, align 4
  br i1 %v4_1000324c, label %dec_label_pc_10003450, label %dec_label_pc_10003268

dec_label_pc_10003268:                            ; preds = %dec_label_pc_10003168, %dec_label_pc_10003450
  %v0_10003268 = load i32, i32* @r30, align 4
  %v1_10003268 = icmp slt i32 %v0_10003268, 0
  %v3_10003268 = icmp eq i32 %v0_10003268, 0
  store i1 %v1_10003268, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10003268, i1* %cr4_eq.global-to-local, align 1
  %tmp38 = icmp slt i32 %v0_10003268, 1
  br i1 %tmp38, label %dec_label_pc_10003328, label %dec_label_pc_10003270

dec_label_pc_10003270:                            ; preds = %dec_label_pc_10003268
  %v0_10003274 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10003274, i32* @r28, align 4
  store i32 0, i32* %r24.global-to-local, align 4
  %v0_10003280 = load i32, i32* %r21.global-to-local, align 4
  %v4_10003280 = icmp eq i32 %v0_10003280, 65535
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 2, i32* %r20.global-to-local, align 4
  %v2_100033d0 = ptrtoint i32* %stack_var_-72 to i32
  br i1 %v4_10003280, label %dec_label_pc_100033a0, label %dec_label_pc_10003294

dec_label_pc_10003294:                            ; preds = %dec_label_pc_10003270, %dec_label_pc_10003308
  %v0_100032a0 = phi i32 [ %v0_1000331c, %dec_label_pc_10003308 ], [ 0, %dec_label_pc_10003270 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_100032a0 = add i32 %v0_100032a0, 1
  store i32 %v1_100032a0, i32* %r24.global-to-local, align 4
  store i32 268448424, i32* @lr, align 4
  %v2_100032a4 = call i32 @function_1000a1b4(i32 65535, i32 1)
  %v0_100032a8 = load i32, i32* %r21.global-to-local, align 4
  %v1_100032a8 = trunc i32 %v0_100032a8 to i16
  %v2_100032a8 = load i32, i32* @r28, align 4
  %v3_100032a8 = add i32 %v2_100032a8, 2
  %v4_100032a8 = inttoptr i32 %v3_100032a8 to i16*
  store i16 %v1_100032a8, i16* %v4_100032a8, align 2
  %v1_100032ac = load i32, i32* %r25.global-to-local, align 4
  %v2_100032ac = load i32, i32* %r27.global-to-local, align 4
  %v3_100032ac = add i32 %v2_100032ac, %v1_100032ac
  %v4_100032ac = inttoptr i32 %v3_100032ac to i32*
  store i32 %v2_100032a4, i32* %v4_100032ac, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268448448, i32* @lr, align 4
  %v3_100032bc = call i32 @function_10009e58(i32 2, i32 2, i32 17)
  store i32 %v3_100032bc, i32* %r3.global-to-local, align 4
  %v3_100032c4 = icmp eq i32 %v3_100032bc, -1
  %v1_100032cc = load i32, i32* %r25.global-to-local, align 4
  %v2_100032cc = load i32, i32* %r26.global-to-local, align 4
  %v3_100032cc = add i32 %v2_100032cc, %v1_100032cc
  %v4_100032cc = inttoptr i32 %v3_100032cc to i32*
  store i32 %v3_100032bc, i32* %v4_100032cc, align 4
  br i1 %v3_100032c4, label %dec_label_pc_10003404, label %dec_label_pc_100032d4

dec_label_pc_100032d4:                            ; preds = %dec_label_pc_10003294
  %v0_100032d4 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_100032d4, i32* %stack_var_-72, align 4
  store i32 268448484, i32* @lr, align 4
  %v0_100032e0 = load i32, i32* %r3.global-to-local, align 4
  %v3_100032e0 = call i32 @function_10009c24(i32 %v0_100032e0, i32 %v2_100033d0, i32 16)
  store i32 %v3_100032e0, i32* %r3.global-to-local, align 4
  %v0_100032e4 = load i32, i32* @r28, align 4
  %v1_100032e4 = add i32 %v0_100032e4, 20
  %v2_100032e4 = inttoptr i32 %v1_100032e4 to i8*
  %v3_100032e4 = load i8, i8* %v2_100032e4, align 1
  %v2_100032e8 = icmp ugt i8 %v3_100032e4, 31
  br i1 %v2_100032e8, label %dec_label_pc_10003308, label %dec_label_pc_100032f0

dec_label_pc_100032f0:                            ; preds = %dec_label_pc_100032d4
  %v1_100032f0 = add i32 %v0_100032e4, 16
  %v2_100032f0 = inttoptr i32 %v1_100032f0 to i32*
  %v3_100032f0 = load i32, i32* %v2_100032f0, align 4
  store i32 %v3_100032f0, i32* %r29.global-to-local, align 4
  %v0_100032f4 = call i32 @function_10005f74()
  store i32 %v0_100032f4, i32* %r3.global-to-local, align 4
  %v0_100032f8 = load i32, i32* @r28, align 4
  %v1_100032f8 = add i32 %v0_100032f8, 20
  %v2_100032f8 = inttoptr i32 %v1_100032f8 to i8*
  %v3_100032f8 = load i8, i8* %v2_100032f8, align 1
  %tmp = urem i8 %v3_100032f8, 64
  %v2_100032fc = zext i8 %tmp to i32
  %v3_100032fc = lshr i32 %v0_100032f4, %v2_100032fc
  %v0_10003300 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003300 = add i32 %v3_100032fc, %v0_10003300
  store i32 %v2_10003300, i32* %r3.global-to-local, align 4
  %v2_10003304 = add i32 %v0_100032f8, 4
  %v3_10003304 = inttoptr i32 %v2_10003304 to i32*
  store i32 %v2_10003300, i32* %v3_10003304, align 4
  br label %dec_label_pc_10003308

dec_label_pc_10003308:                            ; preds = %dec_label_pc_100032d4, %dec_label_pc_100032f0
  %v0_10003308 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003308 = load i32, i32* %r26.global-to-local, align 4
  %v2_10003308 = add i32 %v1_10003308, %v0_10003308
  %v3_10003308 = inttoptr i32 %v2_10003308 to i32*
  %v4_10003308 = load i32, i32* %v3_10003308, align 4
  store i32 %v4_10003308, i32* @r3, align 4
  %v1_10003314 = add i32 %v0_10003308, 4
  store i32 %v1_10003314, i32* %r25.global-to-local, align 4
  store i32 268448540, i32* @lr, align 4
  %v0_10003318 = call i32 @function_10009c58()
  store i32 %v0_10003318, i32* %r3.global-to-local, align 4
  %v0_1000331c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000331c = load i32, i32* @r30, align 4
  %v4_1000331c = icmp eq i32 %v0_1000331c, %v1_1000331c
  %v0_10003320 = load i32, i32* @r28, align 4
  %v1_10003320 = add i32 %v0_10003320, 24
  store i32 %v1_10003320, i32* @r28, align 4
  br i1 %v4_1000331c, label %dec_label_pc_10003328, label %dec_label_pc_10003294

dec_label_pc_10003328:                            ; preds = %dec_label_pc_10003308, %dec_label_pc_10003380, %dec_label_pc_10003268
  %v0_10003328 = load i32, i32* %r23.global-to-local, align 4
  %v3_10003328 = icmp eq i32 %v0_10003328, 0
  store i1 %v3_10003328, i1* %cr3_eq.global-to-local, align 1
  %v0_1000332c.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_1000332c.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_1000332c.outer

dec_label_pc_1000332c.outer:                      ; preds = %dec_label_pc_10003360, %dec_label_pc_10003498, %dec_label_pc_10003328
  %v1_1000332c.ph39 = phi i1 [ %v1_1000332c.pre, %dec_label_pc_10003328 ], [ %v1_10003498, %dec_label_pc_10003498 ], [ %v1_10003360, %dec_label_pc_10003360 ]
  %v0_1000332c.ph40 = phi i1 [ %v0_1000332c.pre, %dec_label_pc_10003328 ], [ %v0_10003498, %dec_label_pc_10003498 ], [ %v0_10003360, %dec_label_pc_10003360 ]
  %v2_1000332c = or i1 %v1_1000332c.ph39, %v0_1000332c.ph40
  br label %dec_label_pc_1000332c

dec_label_pc_1000332c:                            ; preds = %dec_label_pc_1000332c.outer, %dec_label_pc_1000332c
  br i1 %v2_1000332c, label %dec_label_pc_1000332c, label %dec_label_pc_10003330

dec_label_pc_10003330:                            ; preds = %dec_label_pc_10003498, %dec_label_pc_10003360, %dec_label_pc_1000332c
  %v0_10003330 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003330, label %dec_label_pc_10003334, label %dec_label_pc_1000345c

dec_label_pc_10003334:                            ; preds = %dec_label_pc_10003330
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000333c

dec_label_pc_1000333c:                            ; preds = %dec_label_pc_1000333c.dec_label_pc_1000333c_crit_edge, %dec_label_pc_10003334
  %v0_10003340 = phi i32 [ %v0_10003358, %dec_label_pc_1000333c.dec_label_pc_1000333c_crit_edge ], [ 0, %dec_label_pc_10003334 ]
  %v0_10003350 = phi i32 [ %v0_1000333c.pre, %dec_label_pc_1000333c.dec_label_pc_1000333c_crit_edge ], [ 0, %dec_label_pc_10003334 ]
  %v1_1000333c = load i32, i32* %r26.global-to-local, align 4
  %v2_1000333c = add i32 %v1_1000333c, %v0_10003350
  %v3_1000333c = inttoptr i32 %v2_1000333c to i32*
  %v4_1000333c = load i32, i32* %v3_1000333c, align 4
  store i32 %v4_1000333c, i32* %r3.global-to-local, align 4
  %v1_10003340 = add i32 %v0_10003340, 1
  store i32 %v1_10003340, i32* %r28.global-to-local, align 4
  %v1_10003344 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003344 = add i32 %v1_10003344, %v0_10003350
  %v3_10003344 = inttoptr i32 %v2_10003344 to i32*
  %v4_10003344 = load i32, i32* %v3_10003344, align 4
  %v0_10003348 = load i32, i32* @r31, align 4
  %v1_10003350 = add i32 %v0_10003350, 4
  store i32 %v1_10003350, i32* %r29.global-to-local, align 4
  store i32 268448600, i32* @lr, align 4
  %v4_10003354 = call i32 @function_10009da4(i32 %v4_1000333c, i32 %v4_10003344, i32 %v0_10003348, i32 16384)
  store i32 %v4_10003354, i32* %r3.global-to-local, align 4
  %v0_10003358 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003358 = load i32, i32* @r30, align 4
  %v4_10003358 = icmp eq i32 %v0_10003358, %v1_10003358
  br i1 %v4_10003358, label %dec_label_pc_10003360, label %dec_label_pc_1000333c.dec_label_pc_1000333c_crit_edge

dec_label_pc_1000333c.dec_label_pc_1000333c_crit_edge: ; preds = %dec_label_pc_1000333c
  %v0_1000333c.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000333c

dec_label_pc_10003360:                            ; preds = %dec_label_pc_1000333c
  %v0_10003360 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003360 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10003360 = or i1 %v0_10003360, %v1_10003360
  br i1 %v2_10003360, label %dec_label_pc_1000332c.outer, label %dec_label_pc_10003330

dec_label_pc_10003380:                            ; preds = %dec_label_pc_100033e4, %dec_label_pc_10003400
  %v0_10003380 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003380 = load i32, i32* %r26.global-to-local, align 4
  %v2_10003380 = add i32 %v1_10003380, %v0_10003380
  %v3_10003380 = inttoptr i32 %v2_10003380 to i32*
  %v4_10003380 = load i32, i32* %v3_10003380, align 4
  store i32 %v4_10003380, i32* @r3, align 4
  %v1_1000338c = add i32 %v0_10003380, 4
  store i32 %v1_1000338c, i32* %r25.global-to-local, align 4
  store i32 268448660, i32* @lr, align 4
  %v0_10003390 = call i32 @function_10009c58()
  store i32 %v0_10003390, i32* %r3.global-to-local, align 4
  %v0_10003394 = load i32, i32* %r24.global-to-local, align 4
  %v1_10003394 = load i32, i32* @r30, align 4
  %v4_10003394 = icmp eq i32 %v0_10003394, %v1_10003394
  %v0_10003398 = load i32, i32* @r28, align 4
  %v1_10003398 = add i32 %v0_10003398, 24
  store i32 %v1_10003398, i32* @r28, align 4
  br i1 %v4_10003394, label %dec_label_pc_10003328, label %dec_label_pc_100033a0

dec_label_pc_100033a0:                            ; preds = %dec_label_pc_10003270, %dec_label_pc_10003380
  %v0_100033ac = phi i32 [ %v0_10003394, %dec_label_pc_10003380 ], [ 0, %dec_label_pc_10003270 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_100033ac = add i32 %v0_100033ac, 1
  store i32 %v1_100033ac, i32* %r24.global-to-local, align 4
  store i32 268448692, i32* @lr, align 4
  %v2_100033b0 = call i32 @function_1000a1b4(i32 65535, i32 1)
  store i32 %v2_100033b0, i32* %r3.global-to-local, align 4
  %v1_100033b4 = load i32, i32* %r25.global-to-local, align 4
  %v2_100033b4 = load i32, i32* %r27.global-to-local, align 4
  %v3_100033b4 = add i32 %v2_100033b4, %v1_100033b4
  %v4_100033b4 = inttoptr i32 %v3_100033b4 to i32*
  store i32 %v2_100033b0, i32* %v4_100033b4, align 4
  %v0_100033b8 = call i32 @function_10005f74()
  %v1_100033b8 = trunc i32 %v0_100033b8 to i16
  %v3_100033bc = load i32, i32* @r28, align 4
  %v4_100033bc = add i32 %v3_100033bc, 2
  %v5_100033bc = inttoptr i32 %v4_100033bc to i16*
  store i16 %v1_100033b8, i16* %v5_100033bc, align 2
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268448720, i32* @lr, align 4
  %v3_100033cc = call i32 @function_10009e58(i32 2, i32 2, i32 17)
  store i32 %v3_100033cc, i32* %r3.global-to-local, align 4
  %v3_100033d4 = icmp eq i32 %v3_100033cc, -1
  %v1_100033dc = load i32, i32* %r25.global-to-local, align 4
  %v2_100033dc = load i32, i32* %r26.global-to-local, align 4
  %v3_100033dc = add i32 %v2_100033dc, %v1_100033dc
  %v4_100033dc = inttoptr i32 %v3_100033dc to i32*
  store i32 %v3_100033cc, i32* %v4_100033dc, align 4
  br i1 %v3_100033d4, label %dec_label_pc_10003404, label %dec_label_pc_100033e4

dec_label_pc_100033e4:                            ; preds = %dec_label_pc_100033a0
  %v0_100033e4 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_100033e4, i32* %stack_var_-72, align 4
  store i32 268448756, i32* @lr, align 4
  %v0_100033f0 = load i32, i32* %r3.global-to-local, align 4
  %v3_100033f0 = call i32 @function_10009c24(i32 %v0_100033f0, i32 %v2_100033d0, i32 16)
  store i32 %v3_100033f0, i32* %r3.global-to-local, align 4
  %v0_100033f4 = load i32, i32* @r28, align 4
  %v1_100033f4 = add i32 %v0_100033f4, 20
  %v2_100033f4 = inttoptr i32 %v1_100033f4 to i8*
  %v3_100033f4 = load i8, i8* %v2_100033f4, align 1
  %v2_100033f8 = icmp ugt i8 %v3_100033f4, 31
  br i1 %v2_100033f8, label %dec_label_pc_10003380, label %dec_label_pc_10003400

dec_label_pc_10003400:                            ; preds = %dec_label_pc_100033e4
  %v1_10003368 = add i32 %v0_100033f4, 16
  %v2_10003368 = inttoptr i32 %v1_10003368 to i32*
  %v3_10003368 = load i32, i32* %v2_10003368, align 4
  store i32 %v3_10003368, i32* %r29.global-to-local, align 4
  %v0_1000336c = call i32 @function_10005f74()
  store i32 %v0_1000336c, i32* %r3.global-to-local, align 4
  %v0_10003370 = load i32, i32* @r28, align 4
  %v1_10003370 = add i32 %v0_10003370, 20
  %v2_10003370 = inttoptr i32 %v1_10003370 to i8*
  %v3_10003370 = load i8, i8* %v2_10003370, align 1
  %tmp43 = urem i8 %v3_10003370, 64
  %v2_10003374 = zext i8 %tmp43 to i32
  %v3_10003374 = lshr i32 %v0_1000336c, %v2_10003374
  %v0_10003378 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003378 = add i32 %v3_10003374, %v0_10003378
  store i32 %v2_10003378, i32* %r3.global-to-local, align 4
  %v2_1000337c = add i32 %v0_10003370, 4
  %v3_1000337c = inttoptr i32 %v2_1000337c to i32*
  store i32 %v2_10003378, i32* %v3_1000337c, align 4
  br label %dec_label_pc_10003380

dec_label_pc_10003404:                            ; preds = %dec_label_pc_10003294, %dec_label_pc_100033a0
  %v1_10003418 = call %0 @__asm_mtcrf(i32 24, i32 %v0_10003170)
  store i32 %v0_1000319c, i32* %r28.global-to-local, align 4
  store i32 %v0_100031a4, i32* %r29.global-to-local, align 4
  %v0_1000344c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000344c

dec_label_pc_10003450:                            ; preds = %dec_label_pc_10003168
  %v0_10003450 = call i32 @function_10005f74()
  store i32 %v0_10003450, i32* %r3.global-to-local, align 4
  %v1_10003454 = urem i32 %v0_10003450, 65536
  store i32 %v1_10003454, i32* %r22.global-to-local, align 4
  br label %dec_label_pc_10003268

dec_label_pc_1000345c:                            ; preds = %dec_label_pc_10003330
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10003464

dec_label_pc_10003464:                            ; preds = %dec_label_pc_10003464.dec_label_pc_10003464_crit_edge, %dec_label_pc_1000345c
  %v0_1000346c = phi i32 [ %v0_10003490, %dec_label_pc_10003464.dec_label_pc_10003464_crit_edge ], [ 0, %dec_label_pc_1000345c ]
  %v0_10003464 = phi i32 [ %v0_10003464.pre, %dec_label_pc_10003464.dec_label_pc_10003464_crit_edge ], [ 0, %dec_label_pc_1000345c ]
  %v1_10003464 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003464 = add i32 %v1_10003464, %v0_10003464
  %v3_10003464 = inttoptr i32 %v2_10003464 to i32*
  %v4_10003464 = load i32, i32* %v3_10003464, align 4
  store i32 %v4_10003464, i32* @r29, align 4
  %v0_10003468 = load i32, i32* @r31, align 4
  store i32 %v0_10003468, i32* @r4, align 4
  %v1_1000346c = add i32 %v0_1000346c, 1
  store i32 %v1_1000346c, i32* %r25.global-to-local, align 4
  store i32 %v4_10003464, i32* @r3, align 4
  %v0_10003474 = call i32 @function_10006148()
  store i32 %v0_10003474, i32* %r3.global-to-local, align 4
  %v0_10003478 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003478 = load i32, i32* %r26.global-to-local, align 4
  %v2_10003478 = add i32 %v1_10003478, %v0_10003478
  %v3_10003478 = inttoptr i32 %v2_10003478 to i32*
  %v4_10003478 = load i32, i32* %v3_10003478, align 4
  store i32 %v4_10003478, i32* %r3.global-to-local, align 4
  %v0_1000347c = load i32, i32* @r29, align 4
  %v0_10003480 = load i32, i32* @r31, align 4
  %v1_10003488 = add i32 %v0_10003478, 4
  store i32 %v1_10003488, i32* %r28.global-to-local, align 4
  store i32 268448912, i32* @lr, align 4
  %v4_1000348c = call i32 @function_10009da4(i32 %v4_10003478, i32 %v0_1000347c, i32 %v0_10003480, i32 16384)
  store i32 %v4_1000348c, i32* %r3.global-to-local, align 4
  %v0_10003490 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003490 = load i32, i32* @r30, align 4
  %v4_10003490 = icmp eq i32 %v0_10003490, %v1_10003490
  br i1 %v4_10003490, label %dec_label_pc_10003498, label %dec_label_pc_10003464.dec_label_pc_10003464_crit_edge

dec_label_pc_10003464.dec_label_pc_10003464_crit_edge: ; preds = %dec_label_pc_10003464
  %v0_10003464.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10003464

dec_label_pc_10003498:                            ; preds = %dec_label_pc_10003464
  %v0_10003498 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003498 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10003498 = or i1 %v0_10003498, %v1_10003498
  br i1 %v2_10003498, label %dec_label_pc_1000332c.outer, label %dec_label_pc_10003330

; uselistorder directives
  uselistorder i1 %v1_10003498, { 1, 0 }
  uselistorder i1 %v0_10003498, { 1, 0 }
  uselistorder i32 %v0_10003490, { 1, 0 }
  uselistorder i32 %v0_10003478, { 1, 0 }
  uselistorder i32 %v0_10003380, { 1, 0 }
  uselistorder i1 %v1_10003360, { 1, 0 }
  uselistorder i1 %v0_10003360, { 1, 0 }
  uselistorder i32 %v0_10003358, { 1, 0 }
  uselistorder i32 %v0_10003350, { 2, 0, 1 }
  uselistorder i32 %v0_1000331c, { 1, 0 }
  uselistorder i32 %v0_10003308, { 1, 0 }
  uselistorder i32 %v2_100033d0, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 21, 6, 7, 9, 10, 11, 12, 13, 14, 8, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 1, 0 }
  uselistorder i32* %r26.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r25.global-to-local, { 0, 1, 2, 6, 7, 3, 5, 4, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r21.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 2, 0, 3 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 2, 0, 3 }
  uselistorder i8 31, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder label %dec_label_pc_10003404, { 1, 0 }
  uselistorder label %dec_label_pc_100033a0, { 1, 0 }
  uselistorder label %dec_label_pc_10003380, { 1, 0 }
  uselistorder label %dec_label_pc_1000332c, { 1, 0 }
  uselistorder label %dec_label_pc_1000332c.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003328, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003308, { 1, 0 }
  uselistorder label %dec_label_pc_10003294, { 1, 0 }
  uselistorder label %dec_label_pc_10003268, { 1, 0 }
}

define i32 @function_100034a0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100034a0:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_100034a4 = load i32, i32* @lr, align 4
  store i32 %v0_100034a4, i32* %r0.global-to-local, align 4
  %v0_100034a8 = call i32 @__asm_mfcr()
  store i32 %v0_100034a8, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r27.global-to-local, align 4
  %v0_100034b8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_100034a8, i32* %r19.global-to-local, align 4
  %v0_100034ec = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100034f4 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_100034fc = load i32, i32* @r30, align 4
  %v0_10003500 = load i32, i32* @r31, align 4
  store i32 268449044, i32* @lr, align 4
  %v2_10003510 = call i32 @function_1000a1b4(i32 4, i32 4)
  store i32 %v2_10003510, i32* %r20.global-to-local, align 4
  %v0_10003518 = load i32, i32* @r28, align 4
  %v0_10003524 = load i32, i32* @r29, align 4
  store i32 %v0_10003524, i32* %r3.global-to-local, align 4
  store i32 268449068, i32* @lr, align 4
  %v4_10003528 = inttoptr i32 %v0_10003518 to i32*
  %v5_10003528 = call i32 @function_100006a8(i32 %v0_10003524, i32* %v4_10003528, i32 2, i32 0)
  %v0_10003538 = load i32, i32* @r28, align 4
  %v1_1000353c = urem i32 %v5_10003528, 256
  store i32 %v1_1000353c, i32* %r15.global-to-local, align 4
  %v0_10003540 = load i32, i32* @r29, align 4
  store i32 %v0_10003540, i32* %r3.global-to-local, align 4
  store i32 268449096, i32* @lr, align 4
  %v4_10003544 = inttoptr i32 %v0_10003538 to i32*
  %v5_10003544 = call i32 @function_100006a8(i32 %v0_10003540, i32* %v4_10003544, i32 3, i32 65535)
  %v0_10003548 = load i32, i32* @r28, align 4
  store i32 %v5_10003544, i32* %r23.global-to-local, align 4
  %v0_10003558 = load i32, i32* @r29, align 4
  store i32 %v0_10003558, i32* %r3.global-to-local, align 4
  store i32 268449120, i32* @lr, align 4
  %v4_1000355c = inttoptr i32 %v0_10003548 to i32*
  %v5_1000355c = call i32 @function_100006a8(i32 %v0_10003558, i32* %v4_1000355c, i32 4, i32 64)
  %v0_10003560 = load i32, i32* @r28, align 4
  %v1_1000356c = urem i32 %v5_1000355c, 256
  store i32 %v1_1000356c, i32* %r16.global-to-local, align 4
  %v0_10003570 = load i32, i32* @r29, align 4
  store i32 %v0_10003570, i32* %r3.global-to-local, align 4
  store i32 268449144, i32* @lr, align 4
  %v4_10003574 = inttoptr i32 %v0_10003560 to i32*
  %v5_10003574 = call i32 @function_100006a8(i32 %v0_10003570, i32* %v4_10003574, i32 5, i32 0)
  %v0_10003584 = load i32, i32* @r28, align 4
  %v1_10003588 = urem i32 %v5_10003574, 256
  store i32 %v1_10003588, i32* @r31, align 4
  %v0_1000358c = load i32, i32* @r29, align 4
  store i32 %v0_1000358c, i32* %r3.global-to-local, align 4
  store i32 268449172, i32* @lr, align 4
  %v4_10003590 = inttoptr i32 %v0_10003584 to i32*
  %v5_10003590 = call i32 @function_100006a8(i32 %v0_1000358c, i32* %v4_10003590, i32 6, i32 65535)
  %v0_10003598 = load i32, i32* @r28, align 4
  store i32 %v5_10003590, i32* %r24.global-to-local, align 4
  %v0_100035a8 = load i32, i32* @r29, align 4
  store i32 %v0_100035a8, i32* %r3.global-to-local, align 4
  store i32 268449200, i32* @lr, align 4
  %v4_100035ac = inttoptr i32 %v0_10003598 to i32*
  %v5_100035ac = call i32 @function_100006a8(i32 %v0_100035a8, i32* %v4_100035ac, i32 7, i32 65535)
  %v0_100035b0 = load i32, i32* @r28, align 4
  store i32 %v5_100035ac, i32* %r25.global-to-local, align 4
  %v0_100035c0 = load i32, i32* @r29, align 4
  store i32 %v0_100035c0, i32* %r3.global-to-local, align 4
  store i32 268449224, i32* @lr, align 4
  %v4_100035c4 = inttoptr i32 %v0_100035b0 to i32*
  %v5_100035c4 = call i32 @function_100006a8(i32 %v0_100035c0, i32* %v4_100035c4, i32 0, i32 512)
  %v0_100035c8 = load i32, i32* @r28, align 4
  store i32 %v5_100035c4, i32* %r26.global-to-local, align 4
  %v0_100035d8 = load i32, i32* @r29, align 4
  store i32 %v0_100035d8, i32* %r3.global-to-local, align 4
  store i32 268449248, i32* @lr, align 4
  %v4_100035dc = inttoptr i32 %v0_100035c8 to i32*
  %v5_100035dc = call i32 @function_100006a8(i32 %v0_100035d8, i32* %v4_100035dc, i32 1, i32 1)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100035e4 = load i32, i32* @global_var_1001c298.14, align 4
  %v0_100035e8 = load i32, i32* @r28, align 4
  %v1_100035f0 = urem i32 %v5_100035dc, 256
  store i32 %v1_100035f0, i32* %r17.global-to-local, align 4
  %v0_100035f4 = load i32, i32* @r29, align 4
  store i32 %v0_100035f4, i32* %r3.global-to-local, align 4
  store i32 268449276, i32* @lr, align 4
  %v4_100035f8 = inttoptr i32 %v0_100035e8 to i32*
  %v5_100035f8 = call i32 @function_100006a8(i32 %v0_100035f4, i32* %v4_100035f8, i32 25, i32 %v3_100035e4)
  store i32 %v5_100035f8, i32* %r30.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268449296, i32* @lr, align 4
  %v3_1000360c = call i32 @function_10009e58(i32 2, i32 3, i32 17)
  store i32 %v3_1000360c, i32* %r3.global-to-local, align 4
  %v3_10003610 = icmp eq i32 %v3_1000360c, -1
  store i32 %v3_1000360c, i32* %r21.global-to-local, align 4
  br i1 %v3_10003610, label %dec_label_pc_1000386c, label %dec_label_pc_1000361c

dec_label_pc_1000361c:                            ; preds = %dec_label_pc_100034a0
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10003628 = ptrtoint i32* %stack_var_-104 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268449336, i32* @lr, align 4
  %v4_10003634 = call i32 @function_10009e1c(i32 0, i32 3, i32 %v2_10003628, i32 4)
  store i32 %v4_10003634, i32* %r3.global-to-local, align 4
  %v3_10003638 = icmp eq i32 %v4_10003634, -1
  br i1 %v3_10003638, label %dec_label_pc_10003864, label %dec_label_pc_10003640

dec_label_pc_10003640:                            ; preds = %dec_label_pc_1000361c
  %v0_10003640 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003640 = urem i32 %v0_10003640, 65536
  store i32 %v1_10003640, i32* %r18.global-to-local, align 4
  %v0_10003644 = load i32, i32* %r23.global-to-local, align 4
  %v1_10003644 = urem i32 %v0_10003644, 65536
  store i32 %v1_10003644, i32* %r22.global-to-local, align 4
  %v0_1000364c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000364c = urem i32 %v0_1000364c, 65536
  store i32 %v1_1000364c, i32* %r23.global-to-local, align 4
  %v0_10003650 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003650 = urem i32 %v0_10003650, 65536
  store i32 %v1_10003650, i32* %r24.global-to-local, align 4
  %tmp30 = icmp ult i32 %v1_10003640, 1461
  br i1 %tmp30, label %dec_label_pc_1000365c, label %dec_label_pc_10003658

dec_label_pc_10003658:                            ; preds = %dec_label_pc_10003640
  store i32 1460, i32* %r18.global-to-local, align 4
  br label %dec_label_pc_1000365c

dec_label_pc_1000365c:                            ; preds = %dec_label_pc_10003640, %dec_label_pc_10003658
  %v0_1000396c = phi i32 [ %v1_10003640, %dec_label_pc_10003640 ], [ 1460, %dec_label_pc_10003658 ]
  %v0_1000365c = load i32, i32* %r19.global-to-local, align 4
  %v1_1000365c = icmp slt i32 %v0_1000365c, 0
  %v3_1000365c = icmp eq i32 %v0_1000365c, 0
  store i1 %v1_1000365c, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_1000365c, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %tmp31 = icmp slt i32 %v0_1000365c, 1
  br i1 %tmp31, label %dec_label_pc_10003964, label %dec_label_pc_1000366c

dec_label_pc_1000366c:                            ; preds = %dec_label_pc_1000365c
  %v0_1000366c = load i32, i32* @r31, align 4
  %v3_1000366c = icmp eq i32 %v0_1000366c, 0
  %v1_10003670 = add nuw nsw i32 %v0_1000396c, 28
  store i32 %v1_10003670, i32* %r25.global-to-local, align 4
  %v1_10003674 = add nuw nsw i32 %v0_1000396c, 8
  store i32 %v1_10003674, i32* %r26.global-to-local, align 4
  %v1_10003678 = urem i32 %v1_10003670, 65536
  store i32 %v1_10003678, i32* @r28, align 4
  %v1_1000367c = urem i32 %v1_10003674, 65536
  store i32 %v1_1000367c, i32* @r29, align 4
  br i1 %v3_1000366c, label %dec_label_pc_10003684, label %dec_label_pc_100038cc

dec_label_pc_10003684:                            ; preds = %dec_label_pc_1000366c
  br label %dec_label_pc_10003688

dec_label_pc_10003688:                            ; preds = %dec_label_pc_10003688, %dec_label_pc_10003684
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268449428, i32* @lr, align 4
  %v2_10003690 = call i32 @function_1000a1b4(i32 1510, i32 1)
  store i32 %v2_10003690, i32* %r3.global-to-local, align 4
  %v3_10003694 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10003694, i32* %r9.global-to-local, align 4
  %v0_10003698 = load i32, i32* @r31, align 4
  %v1_10003698 = mul i32 %v0_10003698, 4
  store i32 %v1_10003698, i32* %r0.global-to-local, align 4
  %v1_1000369c = load i32, i32* %r20.global-to-local, align 4
  %v3_1000369c = add i32 %v1_1000369c, %v1_10003698
  %v4_1000369c = inttoptr i32 %v3_1000369c to i32*
  store i32 %v2_10003690, i32* %v4_1000369c, align 4
  %v0_100036a0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100036a0 = mul i32 %v0_100036a0, 4
  store i32 %v1_100036a0, i32* %r9.global-to-local, align 4
  %v1_100036a4 = load i32, i32* %r20.global-to-local, align 4
  %v2_100036a4 = add i32 %v1_100036a4, %v1_100036a0
  %v3_100036a4 = inttoptr i32 %v2_100036a4 to i32*
  %v4_100036a4 = load i32, i32* %v3_100036a4, align 4
  store i32 %v4_100036a4, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_100036ac = inttoptr i32 %v4_100036a4 to i32*
  %v2_100036ac = load i32, i32* %v1_100036ac, align 4
  store i32 %v2_100036ac, i32* %r0.global-to-local, align 4
  %v1_100036b0 = add i32 %v4_100036a4, 20
  store i32 %v1_100036b0, i32* %r10.global-to-local, align 4
  %v0_100036b4 = load i32, i32* %r16.global-to-local, align 4
  %v1_100036b4 = trunc i32 %v0_100036b4 to i8
  %v3_100036b4 = add i32 %v4_100036a4, 8
  %v4_100036b4 = inttoptr i32 %v3_100036b4 to i8*
  store i8 %v1_100036b4, i8* %v4_100036b4, align 1
  %v1_100036b8 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100036b8, i32* %r0.global-to-local, align 4
  %v0_100036bc = load i32, i32* @r30, align 4
  %v1_100036bc = load i32, i32* %r11.global-to-local, align 4
  %v2_100036bc = add i32 %v1_100036bc, 12
  %v3_100036bc = inttoptr i32 %v2_100036bc to i32*
  store i32 %v0_100036bc, i32* %v3_100036bc, align 4
  %v1_100036c0 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_100036c4 = load i32, i32* %r22.global-to-local, align 4
  %v1_100036c4 = trunc i32 %v0_100036c4 to i16
  %v2_100036c4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100036c4 = add i32 %v2_100036c4, 4
  %v4_100036c4 = inttoptr i32 %v3_100036c4 to i16*
  store i16 %v1_100036c4, i16* %v4_100036c4, align 2
  %v1_100036c8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100036c8 = inttoptr i32 %v1_100036c8 to i32*
  store i32 %v1_100036c0, i32* %v2_100036c8, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_100036d0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100036d0 = add i32 %v2_100036d0, 9
  %v4_100036d0 = inttoptr i32 %v3_100036d0 to i8*
  store i8 17, i8* %v4_100036d0, align 1
  %v0_100036d4 = load i32, i32* %r15.global-to-local, align 4
  %v1_100036d4 = trunc i32 %v0_100036d4 to i8
  %v2_100036d4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100036d4 = add i32 %v2_100036d4, 1
  %v4_100036d4 = inttoptr i32 %v3_100036d4 to i8*
  store i8 %v1_100036d4, i8* %v4_100036d4, align 1
  %v0_100036d8 = load i32, i32* @r28, align 4
  %v1_100036d8 = trunc i32 %v0_100036d8 to i16
  %v2_100036d8 = load i32, i32* %r11.global-to-local, align 4
  %v3_100036d8 = add i32 %v2_100036d8, 2
  %v4_100036d8 = inttoptr i32 %v3_100036d8 to i16*
  store i16 %v1_100036d8, i16* %v4_100036d8, align 2
  %v3_100036dc = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100036dc, i32* %r9.global-to-local, align 4
  %v0_100036e0 = load i32, i32* %r23.global-to-local, align 4
  %v1_100036e0 = trunc i32 %v0_100036e0 to i16
  %v2_100036e0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100036e0 = add i32 %v2_100036e0, 20
  %v4_100036e0 = inttoptr i32 %v3_100036e0 to i16*
  store i16 %v1_100036e0, i16* %v4_100036e0, align 2
  %v0_100036e4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100036e4 = add i32 %v0_100036e4, 1
  store i32 %v1_100036e4, i32* %r31.global-to-local, align 4
  %v1_100036e8 = mul i32 %v0_100036e4, 24
  store i32 %v1_100036e8, i32* %r9.global-to-local, align 4
  %v1_100036ec = load i32, i32* %r19.global-to-local, align 4
  %v2_100036ec = icmp slt i32 %v1_100036e4, %v1_100036ec
  %v0_100036f0 = load i32, i32* @r29, align 4
  %v1_100036f0 = trunc i32 %v0_100036f0 to i16
  %v2_100036f0 = load i32, i32* %r10.global-to-local, align 4
  %v3_100036f0 = add i32 %v2_100036f0, 4
  %v4_100036f0 = inttoptr i32 %v3_100036f0 to i16*
  store i16 %v1_100036f0, i16* %v4_100036f0, align 2
  %v0_100036f4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100036f4 = load i32, i32* %r27.global-to-local, align 4
  %v2_100036f4 = add i32 %v1_100036f4, %v0_100036f4
  store i32 %v2_100036f4, i32* %r9.global-to-local, align 4
  %v0_100036f8 = load i32, i32* %r24.global-to-local, align 4
  %v1_100036f8 = trunc i32 %v0_100036f8 to i16
  %v2_100036f8 = load i32, i32* %r10.global-to-local, align 4
  %v3_100036f8 = add i32 %v2_100036f8, 2
  %v4_100036f8 = inttoptr i32 %v3_100036f8 to i16*
  store i16 %v1_100036f8, i16* %v4_100036f8, align 2
  %v0_100036fc = load i32, i32* %r9.global-to-local, align 4
  %v1_100036fc = add i32 %v0_100036fc, 16
  %v2_100036fc = inttoptr i32 %v1_100036fc to i32*
  %v3_100036fc = load i32, i32* %v2_100036fc, align 4
  store i32 %v3_100036fc, i32* %r0.global-to-local, align 4
  %v1_10003700 = load i32, i32* %r11.global-to-local, align 4
  %v2_10003700 = add i32 %v1_10003700, 16
  %v3_10003700 = inttoptr i32 %v2_10003700 to i32*
  store i32 %v3_100036fc, i32* %v3_10003700, align 4
  %v0_10003704 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10003704, i32* %stack_var_-104, align 4
  br i1 %v2_100036ec, label %dec_label_pc_10003688, label %dec_label_pc_1000370c

dec_label_pc_1000370c:                            ; preds = %dec_label_pc_100038d4, %dec_label_pc_10003688
  %v0_1000370c = load i32, i32* @r30, align 4
  %v3_1000370c = icmp eq i32 %v0_1000370c, -1
  store i1 %v3_1000370c, i1* %cr2_eq.global-to-local, align 1
  %v0_10003710 = load i32, i32* %r17.global-to-local, align 4
  %v3_10003710 = icmp eq i32 %v0_10003710, 0
  store i1 %v3_10003710, i1* %cr3_eq.global-to-local, align 1
  %v0_10003714.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003714.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10003714.preheader

dec_label_pc_10003714.preheader:                  ; preds = %dec_label_pc_100037e0, %dec_label_pc_10003964, %dec_label_pc_1000370c
  %v1_10003714 = phi i1 [ %v1_1000365c, %dec_label_pc_10003964 ], [ %v1_10003714.pre, %dec_label_pc_1000370c ], [ %v1_100037e0, %dec_label_pc_100037e0 ]
  %v0_10003714 = phi i1 [ %v3_1000365c, %dec_label_pc_10003964 ], [ %v0_10003714.pre, %dec_label_pc_1000370c ], [ %v0_100037e0, %dec_label_pc_100037e0 ]
  %v2_10003714 = or i1 %v1_10003714, %v0_10003714
  br label %dec_label_pc_10003714

dec_label_pc_10003714:                            ; preds = %dec_label_pc_10003714.preheader, %dec_label_pc_10003714
  br i1 %v2_10003714, label %dec_label_pc_10003714, label %dec_label_pc_10003718

dec_label_pc_10003718:                            ; preds = %dec_label_pc_10003714, %dec_label_pc_100037e0
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 0, i32* @r30, align 4
  br label %dec_label_pc_10003728

dec_label_pc_10003728:                            ; preds = %dec_label_pc_10003770, %dec_label_pc_10003718
  %v0_10003728 = phi i32 [ %v1_100037d0, %dec_label_pc_10003770 ], [ 0, %dec_label_pc_10003718 ]
  %v1_10003728 = mul i32 %v0_10003728, 24
  store i32 %v1_10003728, i32* %r0.global-to-local, align 4
  %v1_1000372c = mul i32 %v0_10003728, 4
  store i32 %v1_1000372c, i32* %r11.global-to-local, align 4
  %v1_10003730 = load i32, i32* %r20.global-to-local, align 4
  %v2_10003730 = add i32 %v1_10003730, %v1_1000372c
  %v3_10003730 = inttoptr i32 %v2_10003730 to i32*
  %v4_10003730 = load i32, i32* %v3_10003730, align 4
  store i32 %v4_10003730, i32* %r28.global-to-local, align 4
  %v1_10003734 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003734 = add i32 %v1_10003734, %v1_10003728
  store i32 %v2_10003734, i32* %r10.global-to-local, align 4
  %v1_10003738 = add i32 %v2_10003734, 20
  %v2_10003738 = inttoptr i32 %v1_10003738 to i8*
  %v3_10003738 = load i8, i8* %v2_10003738, align 1
  %v4_10003738 = zext i8 %v3_10003738 to i32
  store i32 %v4_10003738, i32* %r9.global-to-local, align 4
  %v1_1000373c = add i32 %v4_10003730, 20
  store i32 %v1_1000373c, i32* @r31, align 4
  %tmp32 = icmp ult i8 %v3_10003738, 32
  br i1 %tmp32, label %dec_label_pc_100037e8, label %dec_label_pc_10003748

dec_label_pc_10003748:                            ; preds = %dec_label_pc_10003728
  %v0_10003748 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003748, label %dec_label_pc_10003810, label %dec_label_pc_1000374c

dec_label_pc_1000374c:                            ; preds = %dec_label_pc_100037e8, %dec_label_pc_10003748
  store i32 65535, i32* @r29, align 4
  %v0_10003754 = load i32, i32* %r22.global-to-local, align 4
  %v4_10003754 = icmp eq i32 %v0_10003754, 65535
  br i1 %v4_10003754, label %dec_label_pc_10003828, label %dec_label_pc_1000375c

dec_label_pc_1000375c:                            ; preds = %dec_label_pc_10003810, %dec_label_pc_1000374c
  %v1_1000375c = phi i32 [ %v1_10003820, %dec_label_pc_10003810 ], [ 65535, %dec_label_pc_1000374c ]
  %v0_1000375c = load i32, i32* %r23.global-to-local, align 4
  %v4_1000375c = icmp eq i32 %v0_1000375c, %v1_1000375c
  br i1 %v4_1000375c, label %dec_label_pc_10003838, label %dec_label_pc_10003764

dec_label_pc_10003764:                            ; preds = %dec_label_pc_10003828.dec_label_pc_10003764_crit_edge, %dec_label_pc_1000375c
  %v1_10003764 = phi i32 [ %v1_10003764.pre, %dec_label_pc_10003828.dec_label_pc_10003764_crit_edge ], [ %v1_1000375c, %dec_label_pc_1000375c ]
  %v0_10003764 = load i32, i32* %r24.global-to-local, align 4
  %v4_10003764 = icmp eq i32 %v0_10003764, %v1_10003764
  br i1 %v4_10003764, label %dec_label_pc_10003848, label %dec_label_pc_1000376c

dec_label_pc_1000376c:                            ; preds = %dec_label_pc_10003838, %dec_label_pc_10003764
  %v0_1000376c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_1000376c, label %dec_label_pc_10003770, label %dec_label_pc_10003854

dec_label_pc_10003770:                            ; preds = %dec_label_pc_1000376c, %dec_label_pc_10003848, %dec_label_pc_10003854
  %v0_10003770 = load i32, i32* @r30, align 4
  %v1_10003770 = trunc i32 %v0_10003770 to i16
  %v2_10003770 = load i32, i32* %r28.global-to-local, align 4
  %v3_10003770 = add i32 %v2_10003770, 10
  %v4_10003770 = inttoptr i32 %v3_10003770 to i16*
  store i16 %v1_10003770, i16* %v4_10003770, align 2
  %v0_10003778 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003778, i32* @r3, align 4
  %v2_1000377c = call i32 @function_100043cc(i32 %v0_10003778, i32 20)
  %v3_1000377c = trunc i32 %v2_1000377c to i16
  %v0_10003780 = load i32, i32* @r31, align 4
  store i32 %v0_10003780, i32* @r4, align 4
  %v4_10003784 = add i32 %v0_10003778, 10
  %v5_10003784 = inttoptr i32 %v4_10003784 to i16*
  store i16 %v3_1000377c, i16* %v5_10003784, align 2
  %v0_10003788 = load i32, i32* %r26.global-to-local, align 4
  %v0_1000378c = load i32, i32* @r30, align 4
  %v1_1000378c = trunc i32 %v0_1000378c to i16
  %v2_1000378c = load i32, i32* @r31, align 4
  %v3_1000378c = add i32 %v2_1000378c, 6
  %v4_1000378c = inttoptr i32 %v3_1000378c to i16*
  store i16 %v1_1000378c, i16* %v4_1000378c, align 2
  %v0_10003790 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003790, i32* %r3.global-to-local, align 4
  %v0_10003794 = load i32, i32* @r31, align 4
  %v1_10003794 = add i32 %v0_10003794, 4
  %v2_10003794 = inttoptr i32 %v1_10003794 to i16*
  %v3_10003794 = load i16, i16* %v2_10003794, align 2
  %v4_10003794 = zext i16 %v3_10003794 to i32
  %v4_10003798 = call i32 @function_10004430(i32 %v0_10003790, i32 %v0_10003780, i32 %v4_10003794, i32 %v0_10003788)
  %v5_10003798 = trunc i32 %v4_10003798 to i16
  store i32 %v4_10003798, i32* %r3.global-to-local, align 4
  %v3_1000379c = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_1000379c, i32* %r7.global-to-local, align 4
  %v0_100037a0 = load i32, i32* @r31, align 4
  %v1_100037a0 = add i32 %v0_100037a0, 2
  %v2_100037a0 = inttoptr i32 %v1_100037a0 to i16*
  %v3_100037a0 = load i16, i16* %v2_100037a0, align 2
  %v4_100037a0 = zext i16 %v3_100037a0 to i32
  store i32 %v4_100037a0, i32* %r0.global-to-local, align 4
  %v0_100037a4 = load i32, i32* %r28.global-to-local, align 4
  %v1_100037a8 = mul i32 %v3_1000379c, 24
  store i32 %v1_100037a8, i32* %r7.global-to-local, align 4
  %v4_100037ac = add i32 %v0_100037a0, 6
  %v5_100037ac = inttoptr i32 %v4_100037ac to i16*
  store i16 %v5_10003798, i16* %v5_100037ac, align 2
  %v0_100037b0 = load i32, i32* %r25.global-to-local, align 4
  %v0_100037b4 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_100037b4, i32* %r3.global-to-local, align 4
  %v0_100037b8 = load i32, i32* %r7.global-to-local, align 4
  %v1_100037b8 = load i32, i32* %r27.global-to-local, align 4
  %v2_100037b8 = add i32 %v1_100037b8, %v0_100037b8
  store i32 %v2_100037b8, i32* %r7.global-to-local, align 4
  %v0_100037c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100037c0 = trunc i32 %v0_100037c0 to i16
  %v3_100037c0 = add i32 %v2_100037b8, 2
  %v4_100037c0 = inttoptr i32 %v3_100037c0 to i16*
  store i16 %v1_100037c0, i16* %v4_100037c0, align 2
  store i32 268449740, i32* @lr, align 4
  %v6_100037c8 = call i32 @function_10009ddc(i32 %v0_100037b4, i32 %v0_100037a4, i32 %v0_100037b0, i32 16384, i32 %v2_100037b8, i32 16)
  store i32 %v6_100037c8, i32* %r3.global-to-local, align 4
  %v3_100037cc = load i32, i32* %stack_var_-104, align 4
  %v1_100037d0 = add i32 %v3_100037cc, 1
  store i32 %v1_100037d0, i32* %r9.global-to-local, align 4
  %v1_100037d4 = load i32, i32* %r19.global-to-local, align 4
  %v2_100037d4 = icmp slt i32 %v1_100037d0, %v1_100037d4
  store i32 %v1_100037d0, i32* %stack_var_-104, align 4
  br i1 %v2_100037d4, label %dec_label_pc_10003728, label %dec_label_pc_100037e0

dec_label_pc_100037e0:                            ; preds = %dec_label_pc_10003770
  %v0_100037e0 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100037e0 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100037e0 = or i1 %v0_100037e0, %v1_100037e0
  br i1 %v2_100037e0, label %dec_label_pc_10003714.preheader, label %dec_label_pc_10003718

dec_label_pc_100037e8:                            ; preds = %dec_label_pc_10003728
  %v1_100037e8 = add i32 %v2_10003734, 16
  %v2_100037e8 = inttoptr i32 %v1_100037e8 to i32*
  %v3_100037e8 = load i32, i32* %v2_100037e8, align 4
  store i32 %v3_100037e8, i32* %r29.global-to-local, align 4
  %v0_100037ec = call i32 @function_10005f74()
  store i32 %v0_100037ec, i32* %r3.global-to-local, align 4
  %v3_100037f0 = load i32, i32* %stack_var_-104, align 4
  %v1_100037f4 = mul i32 %v3_100037f0, 24
  %v1_100037f8 = load i32, i32* %r27.global-to-local, align 4
  %v2_100037f8 = add i32 %v1_100037f8, %v1_100037f4
  store i32 %v2_100037f8, i32* %r9.global-to-local, align 4
  %v1_100037fc = add i32 %v2_100037f8, 20
  %v2_100037fc = inttoptr i32 %v1_100037fc to i8*
  %v3_100037fc = load i8, i8* %v2_100037fc, align 1
  %v4_100037fc = zext i8 %v3_100037fc to i32
  store i32 %v4_100037fc, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_100037fc, 64
  %v2_10003800 = zext i8 %tmp to i32
  %v3_10003800 = lshr i32 %v0_100037ec, %v2_10003800
  store i32 %v3_10003800, i32* %r3.global-to-local, align 4
  %v0_10003804 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003804 = add i32 %v3_10003800, %v0_10003804
  store i32 %v2_10003804, i32* %r29.global-to-local, align 4
  %v1_10003808 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003808 = add i32 %v1_10003808, 16
  %v3_10003808 = inttoptr i32 %v2_10003808 to i32*
  store i32 %v2_10003804, i32* %v3_10003808, align 4
  %v0_1000380c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000380c, label %dec_label_pc_10003810, label %dec_label_pc_1000374c

dec_label_pc_10003810:                            ; preds = %dec_label_pc_100037e8, %dec_label_pc_10003748
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10003814 = call i32 @function_10005f74()
  store i32 %v0_10003814, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_1000381c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000381c = add i32 %v1_1000381c, 12
  %v3_1000381c = inttoptr i32 %v2_1000381c to i32*
  store i32 %v0_10003814, i32* %v3_1000381c, align 4
  %v0_10003820 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003820 = load i32, i32* @r29, align 4
  %v4_10003820 = icmp eq i32 %v0_10003820, %v1_10003820
  br i1 %v4_10003820, label %dec_label_pc_10003828, label %dec_label_pc_1000375c

dec_label_pc_10003828:                            ; preds = %dec_label_pc_10003810, %dec_label_pc_1000374c
  %v0_10003828 = call i32 @function_10005f74()
  %v1_10003828 = trunc i32 %v0_10003828 to i16
  store i32 %v0_10003828, i32* %r3.global-to-local, align 4
  %v0_1000382c = load i32, i32* %r23.global-to-local, align 4
  %v1_1000382c = load i32, i32* @r29, align 4
  %v4_1000382c = icmp eq i32 %v0_1000382c, %v1_1000382c
  %v3_10003830 = load i32, i32* %r28.global-to-local, align 4
  %v4_10003830 = add i32 %v3_10003830, 4
  %v5_10003830 = inttoptr i32 %v4_10003830 to i16*
  store i16 %v1_10003828, i16* %v5_10003830, align 2
  br i1 %v4_1000382c, label %dec_label_pc_10003838, label %dec_label_pc_10003828.dec_label_pc_10003764_crit_edge

dec_label_pc_10003828.dec_label_pc_10003764_crit_edge: ; preds = %dec_label_pc_10003828
  %v1_10003764.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10003764

dec_label_pc_10003838:                            ; preds = %dec_label_pc_10003828, %dec_label_pc_1000375c
  %v0_10003838 = call i32 @function_10005f74()
  %v1_10003838 = trunc i32 %v0_10003838 to i16
  store i32 %v0_10003838, i32* %r3.global-to-local, align 4
  %v0_1000383c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000383c = load i32, i32* @r29, align 4
  %v4_1000383c = icmp eq i32 %v0_1000383c, %v1_1000383c
  %v3_10003840 = load i32, i32* %r28.global-to-local, align 4
  %v4_10003840 = add i32 %v3_10003840, 20
  %v5_10003840 = inttoptr i32 %v4_10003840 to i16*
  store i16 %v1_10003838, i16* %v5_10003840, align 2
  br i1 %v4_1000383c, label %dec_label_pc_10003848, label %dec_label_pc_1000376c

dec_label_pc_10003848:                            ; preds = %dec_label_pc_10003838, %dec_label_pc_10003764
  %v0_10003848 = call i32 @function_10005f74()
  %v1_10003848 = trunc i32 %v0_10003848 to i16
  store i32 %v0_10003848, i32* %r3.global-to-local, align 4
  %v3_1000384c = load i32, i32* @r31, align 4
  %v4_1000384c = add i32 %v3_1000384c, 2
  %v5_1000384c = inttoptr i32 %v4_1000384c to i16*
  store i16 %v1_10003848, i16* %v5_1000384c, align 2
  %v0_10003850 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003850, label %dec_label_pc_10003770, label %dec_label_pc_10003854

dec_label_pc_10003854:                            ; preds = %dec_label_pc_1000376c, %dec_label_pc_10003848
  %v0_10003854 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003854 = add i32 %v0_10003854, 28
  store i32 %v1_10003854, i32* @r3, align 4
  %v0_10003858 = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_10003858, i32* @r4, align 4
  %v0_1000385c = call i32 @function_10006148()
  store i32 %v0_1000385c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003770

dec_label_pc_10003864:                            ; preds = %dec_label_pc_1000361c
  %v0_10003864 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10003864, i32* %r3.global-to-local, align 4
  store i32 268449900, i32* @lr, align 4
  %v0_10003868 = call i32 @function_10009108()
  store i32 %v0_10003868, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000386c

dec_label_pc_1000386c:                            ; preds = %dec_label_pc_100034a0, %dec_label_pc_10003864
  store i32 %v0_100034b8, i32* %r0.global-to-local, align 4
  %v1_10003880 = call %0 @__asm_mtcrf(i32 56, i32 %v0_100034a8)
  store i32 %v0_100034ec, i32* %r28.global-to-local, align 4
  store i32 %v0_100034f4, i32* %r29.global-to-local, align 4
  store i32 %v0_100034fc, i32* %r30.global-to-local, align 4
  store i32 %v0_10003500, i32* %r31.global-to-local, align 4
  %v0_100038c8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100038c8

dec_label_pc_100038cc:                            ; preds = %dec_label_pc_1000366c
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100038d4

dec_label_pc_100038d4:                            ; preds = %dec_label_pc_100038d4, %dec_label_pc_100038cc
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268450016, i32* @lr, align 4
  %v2_100038dc = call i32 @function_1000a1b4(i32 1510, i32 1)
  store i32 %v2_100038dc, i32* %r3.global-to-local, align 4
  %v3_100038e0 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100038e0, i32* %r9.global-to-local, align 4
  %v0_100038e4 = load i32, i32* @r31, align 4
  %v1_100038e4 = mul i32 %v0_100038e4, 4
  store i32 %v1_100038e4, i32* %r0.global-to-local, align 4
  %v1_100038e8 = load i32, i32* %r20.global-to-local, align 4
  %v3_100038e8 = add i32 %v1_100038e8, %v1_100038e4
  %v4_100038e8 = inttoptr i32 %v3_100038e8 to i32*
  store i32 %v2_100038dc, i32* %v4_100038e8, align 4
  %v0_100038ec = load i32, i32* %r9.global-to-local, align 4
  %v1_100038ec = mul i32 %v0_100038ec, 4
  store i32 %v1_100038ec, i32* %r9.global-to-local, align 4
  %v1_100038f0 = load i32, i32* %r20.global-to-local, align 4
  %v2_100038f0 = add i32 %v1_100038f0, %v1_100038ec
  %v3_100038f0 = inttoptr i32 %v2_100038f0 to i32*
  %v4_100038f0 = load i32, i32* %v3_100038f0, align 4
  store i32 %v4_100038f0, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_100038f8 = inttoptr i32 %v4_100038f0 to i32*
  %v2_100038f8 = load i32, i32* %v1_100038f8, align 4
  store i32 %v2_100038f8, i32* %r0.global-to-local, align 4
  %v1_100038fc = add i32 %v4_100038f0, 20
  store i32 %v1_100038fc, i32* %r10.global-to-local, align 4
  %v0_10003900 = load i32, i32* %r16.global-to-local, align 4
  %v1_10003900 = trunc i32 %v0_10003900 to i8
  %v3_10003900 = add i32 %v4_100038f0, 8
  %v4_10003900 = inttoptr i32 %v3_10003900 to i8*
  store i8 %v1_10003900, i8* %v4_10003900, align 1
  %v1_10003904 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10003904, i32* %r0.global-to-local, align 4
  %v0_10003908 = load i32, i32* @r30, align 4
  %v1_10003908 = load i32, i32* %r11.global-to-local, align 4
  %v2_10003908 = add i32 %v1_10003908, 12
  %v3_10003908 = inttoptr i32 %v2_10003908 to i32*
  store i32 %v0_10003908, i32* %v3_10003908, align 4
  %v1_1000390c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_10003910 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003910 = trunc i32 %v0_10003910 to i16
  %v2_10003910 = load i32, i32* %r11.global-to-local, align 4
  %v3_10003910 = add i32 %v2_10003910, 4
  %v4_10003910 = inttoptr i32 %v3_10003910 to i16*
  store i16 %v1_10003910, i16* %v4_10003910, align 2
  %v1_10003914 = load i32, i32* %r11.global-to-local, align 4
  %v2_10003914 = inttoptr i32 %v1_10003914 to i32*
  store i32 %v1_1000390c, i32* %v2_10003914, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_1000391c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000391c = add i32 %v2_1000391c, 9
  %v4_1000391c = inttoptr i32 %v3_1000391c to i8*
  store i8 17, i8* %v4_1000391c, align 1
  %v0_10003920 = load i32, i32* %r15.global-to-local, align 4
  %v1_10003920 = trunc i32 %v0_10003920 to i8
  %v2_10003920 = load i32, i32* %r11.global-to-local, align 4
  %v3_10003920 = add i32 %v2_10003920, 1
  %v4_10003920 = inttoptr i32 %v3_10003920 to i8*
  store i8 %v1_10003920, i8* %v4_10003920, align 1
  %v0_10003924 = load i32, i32* @r28, align 4
  %v1_10003924 = trunc i32 %v0_10003924 to i16
  %v2_10003924 = load i32, i32* %r11.global-to-local, align 4
  %v3_10003924 = add i32 %v2_10003924, 2
  %v4_10003924 = inttoptr i32 %v3_10003924 to i16*
  store i16 %v1_10003924, i16* %v4_10003924, align 2
  %v3_10003928 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10003928, i32* %r9.global-to-local, align 4
  %v0_1000392c = load i32, i32* %r23.global-to-local, align 4
  %v1_1000392c = trunc i32 %v0_1000392c to i16
  %v2_1000392c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000392c = add i32 %v2_1000392c, 20
  %v4_1000392c = inttoptr i32 %v3_1000392c to i16*
  store i16 %v1_1000392c, i16* %v4_1000392c, align 2
  %v0_10003930 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003930 = add i32 %v0_10003930, 1
  store i32 %v1_10003930, i32* %r31.global-to-local, align 4
  %v1_10003934 = mul i32 %v0_10003930, 24
  %v1_10003938 = load i32, i32* %r19.global-to-local, align 4
  %v2_10003938 = icmp slt i32 %v1_10003930, %v1_10003938
  %v1_1000393c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000393c = add i32 %v1_1000393c, %v1_10003934
  store i32 %v2_1000393c, i32* %r9.global-to-local, align 4
  %v1_10003940 = add i32 %v2_1000393c, 16
  %v2_10003940 = inttoptr i32 %v1_10003940 to i32*
  %v3_10003940 = load i32, i32* %v2_10003940, align 4
  store i32 %v3_10003940, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r9.global-to-local, align 4
  %v2_10003948 = load i32, i32* %r11.global-to-local, align 4
  %v3_10003948 = add i32 %v2_10003948, 6
  %v4_10003948 = inttoptr i32 %v3_10003948 to i16*
  store i16 16384, i16* %v4_10003948, align 2
  %v0_1000394c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000394c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000394c = add i32 %v1_1000394c, 16
  %v3_1000394c = inttoptr i32 %v2_1000394c to i32*
  store i32 %v0_1000394c, i32* %v3_1000394c, align 4
  %v0_10003950 = load i32, i32* @r29, align 4
  %v1_10003950 = trunc i32 %v0_10003950 to i16
  %v2_10003950 = load i32, i32* %r10.global-to-local, align 4
  %v3_10003950 = add i32 %v2_10003950, 4
  %v4_10003950 = inttoptr i32 %v3_10003950 to i16*
  store i16 %v1_10003950, i16* %v4_10003950, align 2
  %v0_10003954 = load i32, i32* %r24.global-to-local, align 4
  %v1_10003954 = trunc i32 %v0_10003954 to i16
  %v2_10003954 = load i32, i32* %r10.global-to-local, align 4
  %v3_10003954 = add i32 %v2_10003954, 2
  %v4_10003954 = inttoptr i32 %v3_10003954 to i16*
  store i16 %v1_10003954, i16* %v4_10003954, align 2
  %v0_10003958 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10003958, i32* %stack_var_-104, align 4
  br i1 %v2_10003938, label %dec_label_pc_100038d4, label %dec_label_pc_1000370c

dec_label_pc_10003964:                            ; preds = %dec_label_pc_1000365c
  %v0_10003964 = load i32, i32* %r30.global-to-local, align 4
  %v3_10003964 = icmp eq i32 %v0_10003964, -1
  store i1 %v3_10003964, i1* %cr2_eq.global-to-local, align 1
  %v0_10003968 = load i32, i32* %r17.global-to-local, align 4
  %v3_10003968 = icmp eq i32 %v0_10003968, 0
  store i1 %v3_10003968, i1* %cr3_eq.global-to-local, align 1
  %v1_1000396c = add nuw nsw i32 %v0_1000396c, 28
  store i32 %v1_1000396c, i32* %r25.global-to-local, align 4
  %v1_10003970 = add nuw nsw i32 %v0_1000396c, 8
  store i32 %v1_10003970, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10003714.preheader

; uselistorder directives
  uselistorder i32 %v1_100038ec, { 1, 0 }
  uselistorder i32 %v1_100038e4, { 1, 0 }
  uselistorder i32 %v0_10003848, { 1, 0 }
  uselistorder i32 %v0_10003838, { 1, 0 }
  uselistorder i32 %v0_10003828, { 1, 0 }
  uselistorder i32 %v1_10003820, { 1, 0 }
  uselistorder i1 %v1_100037e0, { 1, 0 }
  uselistorder i1 %v0_100037e0, { 1, 0 }
  uselistorder i32 %v1_100037d0, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10003798, { 1, 0 }
  uselistorder i32 %v1_1000372c, { 1, 0 }
  uselistorder i32 %v1_100036a0, { 1, 0 }
  uselistorder i32 %v1_10003698, { 1, 0 }
  uselistorder i32 %v0_1000396c, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10003640, { 1, 2, 0 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %r30.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 20, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 1, 0 }
  uselistorder i32* %r29.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r28.global-to-local, { 0, 9, 1, 2, 3, 4, 5, 6, 7, 8, 10 }
  uselistorder i32* %r18.global-to-local, { 1, 2, 0 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i32 ()* @function_10006148, { 10, 9, 8, 7, 6, 5, 4, 3, 0, 1, 2 }
  uselistorder i32 1510, { 0, 5, 1, 6, 2, 7, 3, 8, 4, 9 }
  uselistorder label %dec_label_pc_1000386c, { 1, 0 }
  uselistorder label %dec_label_pc_10003854, { 1, 0 }
  uselistorder label %dec_label_pc_10003770, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003718, { 1, 0 }
  uselistorder label %dec_label_pc_10003714, { 1, 0 }
  uselistorder label %dec_label_pc_10003714.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000365c, { 1, 0 }
}

define i32 @function_1000397c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000397c:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %v0_10003980 = load i32, i32* @lr, align 4
  store i32 %v0_10003980, i32* %r0.global-to-local, align 4
  %v0_10003984 = call i32 @__asm_mfcr()
  store i32 %v0_10003984, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r27.global-to-local, align 4
  store i32 %v0_10003984, i32* %r23.global-to-local, align 4
  %v0_100039bc = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100039c4 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_100039cc = load i32, i32* @r30, align 4
  store i32 268450284, i32* @lr, align 4
  %v2_100039e8 = call i32 @function_1000a1b4(i32 4, i32 4)
  store i32 %v2_100039e8, i32* %r24.global-to-local, align 4
  %v0_100039f0 = load i32, i32* @r28, align 4
  %v0_100039f4 = load i32, i32* @r29, align 4
  store i32 %v0_100039f4, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 268450308, i32* @lr, align 4
  %v4_10003a00 = inttoptr i32 %v0_100039f0 to i32*
  %v5_10003a00 = call i32 @function_100006a8(i32 %v0_100039f4, i32* %v4_10003a00, i32 2, i32 0)
  store i32 65535, i32* %r6.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v0_10003a10 = load i32, i32* @r28, align 4
  %v1_10003a14 = urem i32 %v5_10003a00, 256
  store i32 %v1_10003a14, i32* %r19.global-to-local, align 4
  %v0_10003a18 = load i32, i32* @r29, align 4
  store i32 %v0_10003a18, i32* %r3.global-to-local, align 4
  store i32 268450336, i32* @lr, align 4
  %v4_10003a1c = inttoptr i32 %v0_10003a10 to i32*
  %v5_10003a1c = call i32 @function_100006a8(i32 %v0_10003a18, i32* %v4_10003a1c, i32 3, i32 65535)
  %v0_10003a20 = load i32, i32* @r28, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 64, i32* %r6.global-to-local, align 4
  store i32 %v5_10003a1c, i32* %r21.global-to-local, align 4
  %v0_10003a30 = load i32, i32* @r29, align 4
  store i32 %v0_10003a30, i32* %r3.global-to-local, align 4
  store i32 268450360, i32* @lr, align 4
  %v4_10003a34 = inttoptr i32 %v0_10003a20 to i32*
  %v5_10003a34 = call i32 @function_100006a8(i32 %v0_10003a30, i32* %v4_10003a34, i32 4, i32 64)
  %v0_10003a38 = load i32, i32* @r28, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v1_10003a44 = urem i32 %v5_10003a34, 256
  store i32 %v1_10003a44, i32* %r26.global-to-local, align 4
  %v0_10003a48 = load i32, i32* @r29, align 4
  store i32 %v0_10003a48, i32* %r3.global-to-local, align 4
  store i32 268450384, i32* @lr, align 4
  %v4_10003a4c = inttoptr i32 %v0_10003a38 to i32*
  %v5_10003a4c = call i32 @function_100006a8(i32 %v0_10003a48, i32* %v4_10003a4c, i32 5, i32 0)
  store i32 65535, i32* %r6.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  %v0_10003a5c = load i32, i32* @r28, align 4
  %v1_10003a60 = urem i32 %v5_10003a4c, 256
  store i32 %v1_10003a60, i32* @r31, align 4
  %v0_10003a64 = load i32, i32* @r29, align 4
  store i32 %v0_10003a64, i32* %r3.global-to-local, align 4
  store i32 268450412, i32* @lr, align 4
  %v4_10003a68 = inttoptr i32 %v0_10003a5c to i32*
  %v5_10003a68 = call i32 @function_100006a8(i32 %v0_10003a64, i32* %v4_10003a68, i32 6, i32 65535)
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 27015, i32* %r6.global-to-local, align 4
  %v0_10003a74 = load i32, i32* @r28, align 4
  store i32 %v5_10003a68, i32* %r22.global-to-local, align 4
  %v0_10003a7c = load i32, i32* @r29, align 4
  store i32 %v0_10003a7c, i32* %r3.global-to-local, align 4
  store i32 268450436, i32* @lr, align 4
  %v4_10003a80 = inttoptr i32 %v0_10003a74 to i32*
  %v5_10003a80 = call i32 @function_100006a8(i32 %v0_10003a7c, i32* %v4_10003a80, i32 7, i32 27015)
  store i32 %v5_10003a80, i32* %r29.global-to-local, align 4
  store i32 25, i32* %r3.global-to-local, align 4
  store i32 268450448, i32* @lr, align 4
  %v1_10003a8c = call i32 @function_100082e0(i32 25)
  store i32 25, i32* %r3.global-to-local, align 4
  %v3_10003a98 = call i32 @function_1000822c(i32 25, i32* nonnull %stack_var_-84)
  store i32 %v3_10003a98, i32* %r30.global-to-local, align 4
  store i32 17, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268450480, i32* @lr, align 4
  %v3_10003aac = call i32 @function_10009e58(i32 2, i32 3, i32 17)
  store i32 %v3_10003aac, i32* %r3.global-to-local, align 4
  %v3_10003ab0 = icmp eq i32 %v3_10003aac, -1
  store i32 %v3_10003aac, i32* %r25.global-to-local, align 4
  br i1 %v3_10003ab0, label %dec_label_pc_10003d00, label %dec_label_pc_10003abc

dec_label_pc_10003abc:                            ; preds = %dec_label_pc_1000397c
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v2_10003ac8 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_10003ac8, i32* %r6.global-to-local, align 4
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-88, align 4
  store i32 268450520, i32* @lr, align 4
  %v4_10003ad4 = call i32 @function_10009e1c(i32 0, i32 3, i32 %v2_10003ac8, i32 4)
  store i32 %v4_10003ad4, i32* %r3.global-to-local, align 4
  %v3_10003ad8 = icmp eq i32 %v4_10003ad4, -1
  br i1 %v3_10003ad8, label %dec_label_pc_10003cf8, label %dec_label_pc_10003ae0

dec_label_pc_10003ae0:                            ; preds = %dec_label_pc_10003abc
  %v0_10003ae0 = load i32, i32* %r23.global-to-local, align 4
  %v1_10003ae0 = icmp slt i32 %v0_10003ae0, 0
  %v3_10003ae0 = icmp eq i32 %v0_10003ae0, 0
  store i1 %v1_10003ae0, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10003ae0, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10003ae8 = load i32, i32* %r21.global-to-local, align 4
  %v1_10003ae8 = urem i32 %v0_10003ae8, 65536
  store i32 %v1_10003ae8, i32* %r20.global-to-local, align 4
  store i32 0, i32* %stack_var_-88, align 4
  %v0_10003af0 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003af0 = urem i32 %v0_10003af0, 65536
  store i32 %v1_10003af0, i32* %r21.global-to-local, align 4
  %v0_10003af4 = load i32, i32* %r29.global-to-local, align 4
  %v1_10003af4 = urem i32 %v0_10003af4, 65536
  store i32 %v1_10003af4, i32* %r22.global-to-local, align 4
  %tmp32 = icmp slt i32 %v0_10003ae0, 1
  br i1 %tmp32, label %dec_label_pc_10003bcc.outer, label %dec_label_pc_10003afc

dec_label_pc_10003afc:                            ; preds = %dec_label_pc_10003ae0
  %v0_10003afc = load i32, i32* @r31, align 4
  %v3_10003afc = icmp eq i32 %v0_10003afc, 0
  store i1 %v3_10003afc, i1* %cr3_eq.global-to-local, align 1
  store i32 4, i32* %r29.global-to-local, align 4
  store i32 5, i32* %r28.global-to-local, align 4
  store i32 16384, i32* %r18.global-to-local, align 4
  store i32 17, i32* %r17.global-to-local, align 4
  store i32 -1, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_10003b1c

dec_label_pc_10003b1c:                            ; preds = %dec_label_pc_10003b78, %dec_label_pc_10003afc
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 268450600, i32* @lr, align 4
  %v2_10003b24 = call i32 @function_1000a1b4(i32 128, i32 1)
  store i32 %v2_10003b24, i32* %r3.global-to-local, align 4
  %v3_10003b28 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10003b28, i32* %r0.global-to-local, align 4
  %v0_10003b2c = load i32, i32* @r31, align 4
  %v1_10003b2c = mul i32 %v0_10003b2c, 4
  store i32 %v1_10003b2c, i32* %r9.global-to-local, align 4
  %v0_10003b30 = load i32, i32* @r30, align 4
  %v2_10003b34 = load i32, i32* %r24.global-to-local, align 4
  %v3_10003b34 = add i32 %v2_10003b34, %v1_10003b2c
  %v4_10003b34 = inttoptr i32 %v3_10003b34 to i32*
  store i32 %v2_10003b24, i32* %v4_10003b34, align 4
  %v0_10003b38 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003b38 = mul i32 %v0_10003b38, 4
  store i32 %v1_10003b38, i32* %r0.global-to-local, align 4
  %v0_10003b3c = load i32, i32* %r24.global-to-local, align 4
  %v2_10003b3c = add i32 %v0_10003b3c, %v1_10003b38
  %v3_10003b3c = inttoptr i32 %v2_10003b3c to i32*
  %v4_10003b3c = load i32, i32* %v3_10003b3c, align 4
  store i32 %v4_10003b3c, i32* %r10.global-to-local, align 4
  %v1_10003b40 = inttoptr i32 %v4_10003b3c to i32*
  %v2_10003b40 = load i32, i32* %v1_10003b40, align 4
  store i32 %v2_10003b40, i32* %r0.global-to-local, align 4
  %v1_10003b44 = add i32 %v4_10003b3c, 32
  store i32 %v1_10003b44, i32* %r3.global-to-local, align 4
  %v0_10003b48 = load i32, i32* %r20.global-to-local, align 4
  %v1_10003b48 = trunc i32 %v0_10003b48 to i16
  %v3_10003b48 = add i32 %v4_10003b3c, 4
  %v4_10003b48 = inttoptr i32 %v3_10003b48 to i16*
  store i16 %v1_10003b48, i16* %v4_10003b48, align 2
  %v0_10003b4c = load i32, i32* %r10.global-to-local, align 4
  %v1_10003b4c = add i32 %v0_10003b4c, 20
  store i32 %v1_10003b4c, i32* %r8.global-to-local, align 4
  %v1_10003b50 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10003b50, i32* %r0.global-to-local, align 4
  %v1_10003b54 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10003b54, i32* %r0.global-to-local, align 4
  %v1_10003b58 = load i32, i32* %r10.global-to-local, align 4
  %v2_10003b58 = inttoptr i32 %v1_10003b58 to i32*
  store i32 %v1_10003b54, i32* %v2_10003b58, align 4
  %v0_10003b5c = load i32, i32* %r19.global-to-local, align 4
  %v1_10003b5c = trunc i32 %v0_10003b5c to i8
  %v2_10003b5c = load i32, i32* %r10.global-to-local, align 4
  %v3_10003b5c = add i32 %v2_10003b5c, 1
  %v4_10003b5c = inttoptr i32 %v3_10003b5c to i8*
  store i8 %v1_10003b5c, i8* %v4_10003b5c, align 1
  %v3_10003b60 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10003b60, i32* %r9.global-to-local, align 4
  %v0_10003b64 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003b64 = trunc i32 %v0_10003b64 to i8
  %v2_10003b64 = load i32, i32* %r10.global-to-local, align 4
  %v3_10003b64 = add i32 %v2_10003b64, 8
  %v4_10003b64 = inttoptr i32 %v3_10003b64 to i8*
  store i8 %v1_10003b64, i8* %v4_10003b64, align 1
  %v0_10003b68 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003b68 = add i32 %v0_10003b68, 32
  store i32 %v1_10003b68, i32* %r9.global-to-local, align 4
  %v1_10003b6c = trunc i32 %v1_10003b68 to i16
  %v2_10003b6c = load i32, i32* %r10.global-to-local, align 4
  %v3_10003b6c = add i32 %v2_10003b6c, 2
  %v4_10003b6c = inttoptr i32 %v3_10003b6c to i16*
  store i16 %v1_10003b6c, i16* %v4_10003b6c, align 2
  %v0_10003b70 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003b70, label %dec_label_pc_10003b78, label %dec_label_pc_10003b74

dec_label_pc_10003b74:                            ; preds = %dec_label_pc_10003b1c
  %v0_10003b74 = load i32, i32* %r18.global-to-local, align 4
  %v1_10003b74 = trunc i32 %v0_10003b74 to i16
  %v2_10003b74 = load i32, i32* %r10.global-to-local, align 4
  %v3_10003b74 = add i32 %v2_10003b74, 6
  %v4_10003b74 = inttoptr i32 %v3_10003b74 to i16*
  store i16 %v1_10003b74, i16* %v4_10003b74, align 2
  br label %dec_label_pc_10003b78

dec_label_pc_10003b78:                            ; preds = %dec_label_pc_10003b1c, %dec_label_pc_10003b74
  %v0_10003b78 = load i32, i32* %r17.global-to-local, align 4
  %v1_10003b78 = trunc i32 %v0_10003b78 to i8
  %v2_10003b78 = load i32, i32* %r10.global-to-local, align 4
  %v3_10003b78 = add i32 %v2_10003b78, 9
  %v4_10003b78 = inttoptr i32 %v3_10003b78 to i8*
  store i8 %v1_10003b78, i8* %v4_10003b78, align 1
  %v0_10003b7c = load i32, i32* %r21.global-to-local, align 4
  %v1_10003b7c = trunc i32 %v0_10003b7c to i16
  %v2_10003b7c = load i32, i32* %r10.global-to-local, align 4
  %v3_10003b7c = add i32 %v2_10003b7c, 20
  %v4_10003b7c = inttoptr i32 %v3_10003b7c to i16*
  store i16 %v1_10003b7c, i16* %v4_10003b7c, align 2
  %v3_10003b80 = load i32, i32* %stack_var_-88, align 4
  %v3_10003b84 = load i32, i32* @global_var_1001c298.14, align 4
  store i32 %v3_10003b84, i32* %r0.global-to-local, align 4
  %v1_10003b88 = mul i32 %v3_10003b80, 24
  store i32 %v1_10003b88, i32* %r9.global-to-local, align 4
  %v0_10003b8c = load i32, i32* %r22.global-to-local, align 4
  %v1_10003b8c = trunc i32 %v0_10003b8c to i16
  %v2_10003b8c = load i32, i32* %r8.global-to-local, align 4
  %v3_10003b8c = add i32 %v2_10003b8c, 2
  %v4_10003b8c = inttoptr i32 %v3_10003b8c to i16*
  store i16 %v1_10003b8c, i16* %v4_10003b8c, align 2
  %v0_10003b90 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003b90 = load i32, i32* %r10.global-to-local, align 4
  %v2_10003b90 = add i32 %v1_10003b90, 12
  %v3_10003b90 = inttoptr i32 %v2_10003b90 to i32*
  store i32 %v0_10003b90, i32* %v3_10003b90, align 4
  %v0_10003b94 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003b94 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003b94 = add i32 %v1_10003b94, %v0_10003b94
  store i32 %v2_10003b94, i32* %r9.global-to-local, align 4
  %v1_10003b98 = add i32 %v2_10003b94, 16
  %v2_10003b98 = inttoptr i32 %v1_10003b98 to i32*
  %v3_10003b98 = load i32, i32* %v2_10003b98, align 4
  store i32 %v3_10003b98, i32* %r0.global-to-local, align 4
  %v3_10003b9c = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10003b9c, i32* %r11.global-to-local, align 4
  %v0_10003ba0 = load i32, i32* %r16.global-to-local, align 4
  %v1_10003ba0 = load i32, i32* %r10.global-to-local, align 4
  %v2_10003ba0 = add i32 %v1_10003ba0, 28
  %v3_10003ba0 = inttoptr i32 %v2_10003ba0 to i32*
  store i32 %v0_10003ba0, i32* %v3_10003ba0, align 4
  %v0_10003ba4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003ba4 = load i32, i32* %r10.global-to-local, align 4
  %v2_10003ba4 = add i32 %v1_10003ba4, 16
  %v3_10003ba4 = inttoptr i32 %v2_10003ba4 to i32*
  store i32 %v0_10003ba4, i32* %v3_10003ba4, align 4
  %v0_10003ba8 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003ba8 = add i32 %v0_10003ba8, 12
  store i32 %v1_10003ba8, i32* %r11.global-to-local, align 4
  %v1_10003bac = trunc i32 %v1_10003ba8 to i16
  %v2_10003bac = load i32, i32* %r8.global-to-local, align 4
  %v3_10003bac = add i32 %v2_10003bac, 4
  %v4_10003bac = inttoptr i32 %v3_10003bac to i16*
  store i16 %v1_10003bac, i16* %v4_10003bac, align 2
  %v3_10003bb0 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10003bb0, i32* %r5.global-to-local, align 4
  store i32 268450744, i32* @lr, align 4
  %v3_10003bb4 = call i32 @function_100089cc(i32 %v3_10003bb0, i32 %v0_10003b30, i32 %v3_10003bb0)
  store i32 %v3_10003bb4, i32* %r3.global-to-local, align 4
  %v3_10003bb8 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10003bb8, i32* %r9.global-to-local, align 4
  %v1_10003bbc = add i32 %v3_10003bb8, 1
  %v1_10003bc0 = load i32, i32* %r23.global-to-local, align 4
  %v2_10003bc0 = icmp slt i32 %v1_10003bbc, %v1_10003bc0
  store i32 %v1_10003bbc, i32* %stack_var_-88, align 4
  br i1 %v2_10003bc0, label %dec_label_pc_10003b1c, label %dec_label_pc_10003bcc.preheader.loopexit

dec_label_pc_10003bcc.preheader.loopexit:         ; preds = %dec_label_pc_10003b78
  %v0_10003bcc.pre.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003bcc.pre.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10003bcc.outer

dec_label_pc_10003bcc.outer:                      ; preds = %dec_label_pc_10003c98, %dec_label_pc_10003ae0, %dec_label_pc_10003bcc.preheader.loopexit
  %v1_10003bcc.ph34 = phi i1 [ %v1_10003ae0, %dec_label_pc_10003ae0 ], [ %v1_10003bcc.pre.pre, %dec_label_pc_10003bcc.preheader.loopexit ], [ %v1_10003c98, %dec_label_pc_10003c98 ]
  %v0_10003bcc.ph35 = phi i1 [ %v3_10003ae0, %dec_label_pc_10003ae0 ], [ %v0_10003bcc.pre.pre, %dec_label_pc_10003bcc.preheader.loopexit ], [ %v0_10003c98, %dec_label_pc_10003c98 ]
  %v2_10003bcc = or i1 %v1_10003bcc.ph34, %v0_10003bcc.ph35
  br label %dec_label_pc_10003bcc

dec_label_pc_10003bcc:                            ; preds = %dec_label_pc_10003bcc.outer, %dec_label_pc_10003bcc
  br i1 %v2_10003bcc, label %dec_label_pc_10003bcc, label %dec_label_pc_10003bd0

dec_label_pc_10003bd0:                            ; preds = %dec_label_pc_10003bcc, %dec_label_pc_10003c98
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 0, i32* %stack_var_-88, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10003be0

dec_label_pc_10003be0:                            ; preds = %dec_label_pc_10003c20, %dec_label_pc_10003bd0
  %v0_10003bf0 = phi i32 [ %v1_10003c88, %dec_label_pc_10003c20 ], [ 0, %dec_label_pc_10003bd0 ]
  %v1_10003be0 = mul i32 %v0_10003bf0, 24
  store i32 65535, i32* %r30.global-to-local, align 4
  %v1_10003bec = load i32, i32* %r27.global-to-local, align 4
  %v2_10003bec = add i32 %v1_10003bec, %v1_10003be0
  store i32 %v2_10003bec, i32* %r10.global-to-local, align 4
  %v1_10003bf0 = mul i32 %v0_10003bf0, 4
  store i32 %v1_10003bf0, i32* %r0.global-to-local, align 4
  %v1_10003bf4 = add i32 %v2_10003bec, 20
  %v2_10003bf4 = inttoptr i32 %v1_10003bf4 to i8*
  %v3_10003bf4 = load i8, i8* %v2_10003bf4, align 1
  %v4_10003bf4 = zext i8 %v3_10003bf4 to i32
  store i32 %v4_10003bf4, i32* %r9.global-to-local, align 4
  %v0_10003bf8 = load i32, i32* %r24.global-to-local, align 4
  %v2_10003bf8 = add i32 %v0_10003bf8, %v1_10003bf0
  %v3_10003bf8 = inttoptr i32 %v2_10003bf8 to i32*
  %v4_10003bf8 = load i32, i32* %v3_10003bf8, align 4
  store i32 %v4_10003bf8, i32* %r28.global-to-local, align 4
  %v1_10003c00 = add i32 %v4_10003bf8, 20
  store i32 %v1_10003c00, i32* @r31, align 4
  %tmp33 = icmp ult i8 %v3_10003bf4, 32
  br i1 %tmp33, label %dec_label_pc_10003ca0, label %dec_label_pc_10003c08

dec_label_pc_10003c08:                            ; preds = %dec_label_pc_10003be0
  %v0_10003c08 = load i32, i32* %r20.global-to-local, align 4
  %v4_10003c08 = icmp eq i32 %v0_10003c08, 65535
  br i1 %v4_10003c08, label %dec_label_pc_10003ccc, label %dec_label_pc_10003c10

dec_label_pc_10003c10:                            ; preds = %dec_label_pc_10003ca0.dec_label_pc_10003c10_crit_edge, %dec_label_pc_10003c08
  %v1_10003c10 = phi i32 [ %v1_10003c10.pre, %dec_label_pc_10003ca0.dec_label_pc_10003c10_crit_edge ], [ 65535, %dec_label_pc_10003c08 ]
  %v0_10003c10 = load i32, i32* %r21.global-to-local, align 4
  %v4_10003c10 = icmp eq i32 %v0_10003c10, %v1_10003c10
  br i1 %v4_10003c10, label %dec_label_pc_10003cdc, label %dec_label_pc_10003c18

dec_label_pc_10003c18:                            ; preds = %dec_label_pc_10003ccc.dec_label_pc_10003c18_crit_edge, %dec_label_pc_10003c10
  %v1_10003c18 = phi i32 [ %v1_10003c18.pre, %dec_label_pc_10003ccc.dec_label_pc_10003c18_crit_edge ], [ %v1_10003c10, %dec_label_pc_10003c10 ]
  %v0_10003c18 = load i32, i32* %r22.global-to-local, align 4
  %v4_10003c18 = icmp eq i32 %v0_10003c18, %v1_10003c18
  br i1 %v4_10003c18, label %dec_label_pc_10003cec, label %dec_label_pc_10003c20

dec_label_pc_10003c20:                            ; preds = %dec_label_pc_10003cdc, %dec_label_pc_10003c18, %dec_label_pc_10003cec
  %v0_10003c20 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003c20 = trunc i32 %v0_10003c20 to i16
  %v2_10003c20 = load i32, i32* %r28.global-to-local, align 4
  %v3_10003c20 = add i32 %v2_10003c20, 10
  %v4_10003c20 = inttoptr i32 %v3_10003c20 to i16*
  store i16 %v1_10003c20, i16* %v4_10003c20, align 2
  %v0_10003c28 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003c28, i32* @r3, align 4
  %v2_10003c2c = call i32 @function_100043cc(i32 %v0_10003c28, i32 20)
  %v3_10003c2c = trunc i32 %v2_10003c2c to i16
  store i32 %v2_10003c2c, i32* %r3.global-to-local, align 4
  %v3_10003c30 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10003c30, i32* %r6.global-to-local, align 4
  %v3_10003c34 = load i32, i32* %r28.global-to-local, align 4
  %v4_10003c34 = add i32 %v3_10003c34, 10
  %v5_10003c34 = inttoptr i32 %v4_10003c34 to i16*
  store i16 %v3_10003c2c, i16* %v5_10003c34, align 2
  %v0_10003c38 = load i32, i32* @r31, align 4
  store i32 %v0_10003c38, i32* @r4, align 4
  %v0_10003c3c = load i32, i32* %r26.global-to-local, align 4
  %v1_10003c3c = trunc i32 %v0_10003c3c to i16
  %v3_10003c3c = add i32 %v0_10003c38, 6
  %v4_10003c3c = inttoptr i32 %v3_10003c3c to i16*
  store i16 %v1_10003c3c, i16* %v4_10003c3c, align 2
  %v0_10003c40 = load i32, i32* %r6.global-to-local, align 4
  %v1_10003c40 = add i32 %v0_10003c40, 12
  store i32 %v1_10003c40, i32* %r6.global-to-local, align 4
  %v0_10003c44 = load i32, i32* @r31, align 4
  %v1_10003c44 = add i32 %v0_10003c44, 4
  %v2_10003c44 = inttoptr i32 %v1_10003c44 to i16*
  %v3_10003c44 = load i16, i16* %v2_10003c44, align 2
  %v4_10003c44 = zext i16 %v3_10003c44 to i32
  store i32 %v4_10003c44, i32* %r5.global-to-local, align 4
  %v0_10003c48 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003c48, i32* %r3.global-to-local, align 4
  %v4_10003c4c = call i32 @function_10004430(i32 %v0_10003c48, i32 %v0_10003c38, i32 %v4_10003c44, i32 %v1_10003c40)
  %v5_10003c4c = trunc i32 %v4_10003c4c to i16
  store i32 %v4_10003c4c, i32* %r3.global-to-local, align 4
  %v3_10003c50 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10003c50, i32* %r7.global-to-local, align 4
  %v0_10003c54 = load i32, i32* @r31, align 4
  %v1_10003c54 = add i32 %v0_10003c54, 2
  %v2_10003c54 = inttoptr i32 %v1_10003c54 to i16*
  %v3_10003c54 = load i16, i16* %v2_10003c54, align 2
  %v4_10003c54 = zext i16 %v3_10003c54 to i32
  store i32 %v4_10003c54, i32* %r0.global-to-local, align 4
  %v0_10003c58 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003c5c = mul i32 %v3_10003c50, 24
  store i32 %v1_10003c5c, i32* %r7.global-to-local, align 4
  %v3_10003c60 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10003c60, i32* %r5.global-to-local, align 4
  %v4_10003c64 = add i32 %v0_10003c54, 6
  %v5_10003c64 = inttoptr i32 %v4_10003c64 to i16*
  store i16 %v5_10003c4c, i16* %v5_10003c64, align 2
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10003c6c = load i32, i32* %r7.global-to-local, align 4
  %v1_10003c6c = load i32, i32* %r27.global-to-local, align 4
  %v2_10003c6c = add i32 %v1_10003c6c, %v0_10003c6c
  store i32 %v2_10003c6c, i32* %r7.global-to-local, align 4
  %v0_10003c70 = load i32, i32* %r5.global-to-local, align 4
  %v1_10003c70 = add i32 %v0_10003c70, 32
  store i32 %v1_10003c70, i32* %r5.global-to-local, align 4
  %v0_10003c74 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003c74 = trunc i32 %v0_10003c74 to i16
  %v3_10003c74 = add i32 %v2_10003c6c, 2
  %v4_10003c74 = inttoptr i32 %v3_10003c74 to i16*
  store i16 %v1_10003c74, i16* %v4_10003c74, align 2
  %v0_10003c78 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10003c78, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268450948, i32* @lr, align 4
  %v6_10003c80 = call i32 @function_10009ddc(i32 %v0_10003c78, i32 %v0_10003c58, i32 %v1_10003c70, i32 16384, i32 %v2_10003c6c, i32 16)
  store i32 %v6_10003c80, i32* %r3.global-to-local, align 4
  %v3_10003c84 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10003c84, i32* %r9.global-to-local, align 4
  %v1_10003c88 = add i32 %v3_10003c84, 1
  store i32 %v1_10003c88, i32* %r11.global-to-local, align 4
  %v1_10003c8c = load i32, i32* %r23.global-to-local, align 4
  %v2_10003c8c = icmp slt i32 %v1_10003c88, %v1_10003c8c
  store i32 %v1_10003c88, i32* %stack_var_-88, align 4
  br i1 %v2_10003c8c, label %dec_label_pc_10003be0, label %dec_label_pc_10003c98

dec_label_pc_10003c98:                            ; preds = %dec_label_pc_10003c20
  %v0_10003c98 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003c98 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10003c98 = or i1 %v0_10003c98, %v1_10003c98
  br i1 %v2_10003c98, label %dec_label_pc_10003bcc.outer, label %dec_label_pc_10003bd0

dec_label_pc_10003ca0:                            ; preds = %dec_label_pc_10003be0
  %v1_10003ca0 = add i32 %v2_10003bec, 16
  %v2_10003ca0 = inttoptr i32 %v1_10003ca0 to i32*
  %v3_10003ca0 = load i32, i32* %v2_10003ca0, align 4
  store i32 %v3_10003ca0, i32* %r29.global-to-local, align 4
  %v0_10003ca4 = call i32 @function_10005f74()
  store i32 %v0_10003ca4, i32* %r3.global-to-local, align 4
  %v3_10003ca8 = load i32, i32* %stack_var_-88, align 4
  %v0_10003cac = load i32, i32* %r20.global-to-local, align 4
  %v1_10003cac = load i32, i32* %r30.global-to-local, align 4
  %v4_10003cac = icmp eq i32 %v0_10003cac, %v1_10003cac
  %v1_10003cb0 = mul i32 %v3_10003ca8, 24
  %v1_10003cb4 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003cb4 = add i32 %v1_10003cb4, %v1_10003cb0
  store i32 %v2_10003cb4, i32* %r9.global-to-local, align 4
  %v1_10003cb8 = add i32 %v2_10003cb4, 20
  %v2_10003cb8 = inttoptr i32 %v1_10003cb8 to i8*
  %v3_10003cb8 = load i8, i8* %v2_10003cb8, align 1
  %v4_10003cb8 = zext i8 %v3_10003cb8 to i32
  store i32 %v4_10003cb8, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10003cb8, 64
  %v2_10003cbc = zext i8 %tmp to i32
  %v3_10003cbc = lshr i32 %v0_10003ca4, %v2_10003cbc
  store i32 %v3_10003cbc, i32* %r3.global-to-local, align 4
  %v0_10003cc0 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003cc0 = add i32 %v3_10003cbc, %v0_10003cc0
  store i32 %v2_10003cc0, i32* %r29.global-to-local, align 4
  %v1_10003cc4 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003cc4 = add i32 %v1_10003cc4, 16
  %v3_10003cc4 = inttoptr i32 %v2_10003cc4 to i32*
  store i32 %v2_10003cc0, i32* %v3_10003cc4, align 4
  br i1 %v4_10003cac, label %dec_label_pc_10003ccc, label %dec_label_pc_10003ca0.dec_label_pc_10003c10_crit_edge

dec_label_pc_10003ca0.dec_label_pc_10003c10_crit_edge: ; preds = %dec_label_pc_10003ca0
  %v1_10003c10.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10003c10

dec_label_pc_10003ccc:                            ; preds = %dec_label_pc_10003ca0, %dec_label_pc_10003c08
  %v0_10003ccc = call i32 @function_10005f74()
  %v1_10003ccc = trunc i32 %v0_10003ccc to i16
  store i32 %v0_10003ccc, i32* %r3.global-to-local, align 4
  %v0_10003cd0 = load i32, i32* %r21.global-to-local, align 4
  %v1_10003cd0 = load i32, i32* %r30.global-to-local, align 4
  %v4_10003cd0 = icmp eq i32 %v0_10003cd0, %v1_10003cd0
  %v3_10003cd4 = load i32, i32* %r28.global-to-local, align 4
  %v4_10003cd4 = add i32 %v3_10003cd4, 4
  %v5_10003cd4 = inttoptr i32 %v4_10003cd4 to i16*
  store i16 %v1_10003ccc, i16* %v5_10003cd4, align 2
  br i1 %v4_10003cd0, label %dec_label_pc_10003cdc, label %dec_label_pc_10003ccc.dec_label_pc_10003c18_crit_edge

dec_label_pc_10003ccc.dec_label_pc_10003c18_crit_edge: ; preds = %dec_label_pc_10003ccc
  %v1_10003c18.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10003c18

dec_label_pc_10003cdc:                            ; preds = %dec_label_pc_10003ccc, %dec_label_pc_10003c10
  %v0_10003cdc = call i32 @function_10005f74()
  %v1_10003cdc = trunc i32 %v0_10003cdc to i16
  store i32 %v0_10003cdc, i32* %r3.global-to-local, align 4
  %v0_10003ce0 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003ce0 = load i32, i32* %r30.global-to-local, align 4
  %v4_10003ce0 = icmp eq i32 %v0_10003ce0, %v1_10003ce0
  %v3_10003ce4 = load i32, i32* %r28.global-to-local, align 4
  %v4_10003ce4 = add i32 %v3_10003ce4, 20
  %v5_10003ce4 = inttoptr i32 %v4_10003ce4 to i16*
  store i16 %v1_10003cdc, i16* %v5_10003ce4, align 2
  br i1 %v4_10003ce0, label %dec_label_pc_10003cec, label %dec_label_pc_10003c20

dec_label_pc_10003cec:                            ; preds = %dec_label_pc_10003cdc, %dec_label_pc_10003c18
  %v0_10003cec = call i32 @function_10005f74()
  %v1_10003cec = trunc i32 %v0_10003cec to i16
  store i32 %v0_10003cec, i32* %r3.global-to-local, align 4
  %v3_10003cf0 = load i32, i32* @r31, align 4
  %v4_10003cf0 = add i32 %v3_10003cf0, 2
  %v5_10003cf0 = inttoptr i32 %v4_10003cf0 to i16*
  store i16 %v1_10003cec, i16* %v5_10003cf0, align 2
  br label %dec_label_pc_10003c20

dec_label_pc_10003cf8:                            ; preds = %dec_label_pc_10003abc
  %v0_10003cf8 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10003cf8, i32* %r3.global-to-local, align 4
  store i32 268451072, i32* @lr, align 4
  %v0_10003cfc = call i32 @function_10009108()
  store i32 %v0_10003cfc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003d00

dec_label_pc_10003d00:                            ; preds = %dec_label_pc_1000397c, %dec_label_pc_10003cf8
  store i32 %v0_10003980, i32* %r0.global-to-local, align 4
  %v1_10003d14 = call %0 @__asm_mtcrf(i32 24, i32 %v0_10003984)
  store i32 %v0_100039bc, i32* %r28.global-to-local, align 4
  store i32 %v0_100039c4, i32* %r29.global-to-local, align 4
  store i32 %v0_100039cc, i32* %r30.global-to-local, align 4
  %v0_10003d58 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10003d58

; uselistorder directives
  uselistorder i32 %v0_10003cec, { 1, 0 }
  uselistorder i32 %v0_10003cdc, { 1, 0 }
  uselistorder i32 %v0_10003ccc, { 1, 0 }
  uselistorder i1 %v1_10003c98, { 1, 0 }
  uselistorder i1 %v0_10003c98, { 1, 0 }
  uselistorder i32 %v1_10003c88, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10003c4c, { 1, 0 }
  uselistorder i32 %v2_10003c2c, { 1, 0 }
  uselistorder i32 %v1_10003bf0, { 1, 0 }
  uselistorder i32 %v1_10003b38, { 1, 0 }
  uselistorder i32 %v1_10003b2c, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 0 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 5, 2, 4, 3, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 19, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 1, 0 }
  uselistorder label %dec_label_pc_10003d00, { 1, 0 }
  uselistorder label %dec_label_pc_10003c20, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10003bd0, { 1, 0 }
  uselistorder label %dec_label_pc_10003bcc, { 1, 0 }
  uselistorder label %dec_label_pc_10003bcc.outer, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10003b78, { 1, 0 }
}

define i32 @function_10003d5c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10003d5c:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr3_lt.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-2184 = alloca i32, align 4
  %stack_var_-2180 = alloca i32, align 4
  %stack_var_-2148 = alloca i32, align 4
  %v0_10003d60 = load i32, i32* @lr, align 4
  store i32 %v0_10003d60, i32* %r0.global-to-local, align 4
  %v0_10003d64 = call i32 @__asm_mfcr()
  store i32 %v0_10003d64, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r14.global-to-local, align 4
  %v0_10003d74 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10003d64, i32* %r15.global-to-local, align 4
  %v0_10003d94 = load i32, i32* @r24, align 4
  %v0_10003d98 = load i32, i32* @r25, align 4
  %v0_10003d9c = load i32, i32* @r26, align 4
  %v0_10003da0 = load i32, i32* @r27, align 4
  %v0_10003da4 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10003db4 = load i32, i32* @r31, align 4
  %v0_10003dc8 = load i32, i32* @r30, align 4
  store i32 268451280, i32* @lr, align 4
  %v2_10003dcc = call i32 @function_1000a1b4(i32 4, i32 4)
  store i32 %v2_10003dcc, i32* %r16.global-to-local, align 4
  %v0_10003dd4 = load i32, i32* @r28, align 4
  %v0_10003de0 = load i32, i32* @r29, align 4
  store i32 %v0_10003de0, i32* %r3.global-to-local, align 4
  store i32 268451304, i32* @lr, align 4
  %v4_10003de4 = inttoptr i32 %v0_10003dd4 to i32*
  %v5_10003de4 = call i32 @function_100006a8(i32 %v0_10003de0, i32* %v4_10003de4, i32 2, i32 0)
  %v5_10003df4 = trunc i32 %v5_10003de4 to i8
  %v0_10003dfc = load i32, i32* @r28, align 4
  %v0_10003e00 = load i32, i32* @r29, align 4
  store i32 %v0_10003e00, i32* %r3.global-to-local, align 4
  store i32 268451336, i32* @lr, align 4
  %v4_10003e04 = inttoptr i32 %v0_10003dfc to i32*
  %v5_10003e04 = call i32 @function_100006a8(i32 %v0_10003e00, i32* %v4_10003e04, i32 3, i32 65535)
  %v0_10003e08 = load i32, i32* @r28, align 4
  store i32 %v5_10003e04, i32* %r19.global-to-local, align 4
  %v0_10003e18 = load i32, i32* @r29, align 4
  store i32 %v0_10003e18, i32* %r3.global-to-local, align 4
  store i32 268451360, i32* @lr, align 4
  %v4_10003e1c = inttoptr i32 %v0_10003e08 to i32*
  %v5_10003e1c = call i32 @function_100006a8(i32 %v0_10003e18, i32* %v4_10003e1c, i32 4, i32 64)
  %v0_10003e20 = load i32, i32* @r28, align 4
  %v5_10003e2c = trunc i32 %v5_10003e1c to i8
  %v0_10003e34 = load i32, i32* @r29, align 4
  store i32 %v0_10003e34, i32* %r3.global-to-local, align 4
  store i32 268451388, i32* @lr, align 4
  %v4_10003e38 = inttoptr i32 %v0_10003e20 to i32*
  %v5_10003e38 = call i32 @function_100006a8(i32 %v0_10003e34, i32* %v4_10003e38, i32 5, i32 0)
  %v0_10003e48 = load i32, i32* @r28, align 4
  %v1_10003e4c = urem i32 %v5_10003e38, 256
  store i32 %v1_10003e4c, i32* %r27.global-to-local, align 4
  %v0_10003e50 = load i32, i32* @r29, align 4
  store i32 %v0_10003e50, i32* %r3.global-to-local, align 4
  store i32 268451416, i32* @lr, align 4
  %v4_10003e54 = inttoptr i32 %v0_10003e48 to i32*
  %v5_10003e54 = call i32 @function_100006a8(i32 %v0_10003e50, i32* %v4_10003e54, i32 6, i32 65535)
  %v0_10003e58 = load i32, i32* @r28, align 4
  store i32 %v5_10003e54, i32* %r20.global-to-local, align 4
  %v0_10003e68 = load i32, i32* @r29, align 4
  store i32 %v0_10003e68, i32* %r3.global-to-local, align 4
  store i32 268451440, i32* @lr, align 4
  %v4_10003e6c = inttoptr i32 %v0_10003e58 to i32*
  %v5_10003e6c = call i32 @function_100006a8(i32 %v0_10003e68, i32* %v4_10003e6c, i32 7, i32 53)
  %v0_10003e74 = load i32, i32* @r28, align 4
  store i32 %v5_10003e6c, i32* %r23.global-to-local, align 4
  %v0_10003e84 = load i32, i32* @r29, align 4
  store i32 %v0_10003e84, i32* %r3.global-to-local, align 4
  store i32 268451468, i32* @lr, align 4
  %v4_10003e88 = inttoptr i32 %v0_10003e74 to i32*
  %v5_10003e88 = call i32 @function_100006a8(i32 %v0_10003e84, i32* %v4_10003e88, i32 9, i32 65535)
  %v0_10003e8c = load i32, i32* @r28, align 4
  store i32 %v5_10003e88, i32* %r24.global-to-local, align 4
  %v0_10003e9c = load i32, i32* @r29, align 4
  store i32 %v0_10003e9c, i32* %r3.global-to-local, align 4
  store i32 268451492, i32* @lr, align 4
  %v4_10003ea0 = inttoptr i32 %v0_10003e8c to i32*
  %v5_10003ea0 = call i32 @function_100006a8(i32 %v0_10003e9c, i32* %v4_10003ea0, i32 0, i32 12)
  %v0_10003eac = load i32, i32* @r28, align 4
  store i32 %v5_10003ea0, i32* %r26.global-to-local, align 4
  %v0_10003eb4 = load i32, i32* @r29, align 4
  store i32 %v0_10003eb4, i32* %r3.global-to-local, align 4
  store i32 268451516, i32* @lr, align 4
  %v4_10003eb8 = inttoptr i32 %v0_10003eac to i32*
  %v5_10003eb8 = call i32 @function_10000238(i32 %v0_10003eb4, i32* %v4_10003eb8, i32 8, i32 0)
  store i32 %v5_10003eb8, i32* %r25.global-to-local, align 4
  store i32 26, i32* %r3.global-to-local, align 4
  store i32 268451528, i32* @lr, align 4
  %v1_10003ec4 = call i32 @function_100082e0(i32 26)
  store i32 26, i32* %r3.global-to-local, align 4
  %v3_10003ed0 = call i32 @function_1000822c(i32 26, i32* null)
  store i32 %v3_10003ed0, i32* %r3.global-to-local, align 4
  store i32 268451552, i32* @lr, align 4
  %v2_10003edc = call i32 @function_10009270(i32 %v3_10003ed0, i32 0)
  store i32 %v2_10003edc, i32* @r31, align 4
  store i32 26, i32* %r3.global-to-local, align 4
  store i32 268451564, i32* @lr, align 4
  %v1_10003ee8 = call i32 @function_10008254(i32 26)
  store i32 %v1_10003ee8, i32* %r3.global-to-local, align 4
  %v0_10003eec = load i32, i32* @r31, align 4
  %v1_10003eec = icmp slt i32 %v0_10003eec, 0
  %v3_10003eec = icmp eq i32 %v0_10003eec, 0
  store i1 %v3_10003eec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10003eec, label %dec_label_pc_10003fbc, label %dec_label_pc_10003ef4

dec_label_pc_10003ef4:                            ; preds = %dec_label_pc_10003d5c
  %v2_10003ef4 = ptrtoint i32* %stack_var_-2148 to i32
  store i32 %v2_10003ef4, i32* %r28.global-to-local, align 4
  store i32 %v0_10003eec, i32* %r3.global-to-local, align 4
  store i32 268451592, i32* @lr, align 4
  %v3_10003f04 = call i32 @function_10009340(i32 %v0_10003eec, i32 %v2_10003ef4, i32 2048)
  store i32 %v3_10003f04, i32* %r30.global-to-local, align 4
  %v0_10003f0c = load i32, i32* @r31, align 4
  store i32 %v0_10003f0c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10003f14.24 to i32), i32* @lr, align 4
  %v0_10003f10 = call i32 @function_10009108()
  store i32 27, i32* %r3.global-to-local, align 4
  store i32 268451612, i32* @lr, align 4
  %v1_10003f18 = call i32 @function_100082e0(i32 27)
  store i32 27, i32* %r3.global-to-local, align 4
  %v3_10003f24 = call i32 @function_1000822c(i32 27, i32* null)
  %v0_10003f28 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v2_10003ef4, i32* %r3.global-to-local, align 4
  %v3_10003f34 = bitcast i32* %stack_var_-2148 to i8*
  %v4_10003f34 = call i32 @function_10008cf8(i8* %v3_10003f34, i32 %v0_10003f28, i32 %v3_10003f24)
  store i32 %v4_10003f34, i32* @r31, align 4
  store i32 27, i32* %r3.global-to-local, align 4
  store i32 268451652, i32* @lr, align 4
  %v1_10003f40 = call i32 @function_10008254(i32 27)
  store i32 %v1_10003f40, i32* %r3.global-to-local, align 4
  %v0_10003f44 = load i32, i32* @r31, align 4
  %v3_10003f44 = icmp eq i32 %v0_10003f44, -1
  store i1 %v3_10003f44, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10003f44, label %dec_label_pc_10003fbc, label %dec_label_pc_10003f4c

dec_label_pc_10003f4c:                            ; preds = %dec_label_pc_10003ef4
  %v0_10003f4c = load i32, i32* %r30.global-to-local, align 4
  %v3_10003f4c = icmp sgt i32 %v0_10003f4c, %v0_10003f44
  %v4_10003f4c = icmp eq i32 %v0_10003f4c, %v0_10003f44
  store i1 %v4_10003f4c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10003f4c, label %dec_label_pc_10003f54, label %dec_label_pc_10003fbc

dec_label_pc_10003f54:                            ; preds = %dec_label_pc_10003f4c
  %v2_10003f54 = sub i32 %v0_10003f4c, %v0_10003f44
  store i32 %v2_10003f54, i32* %r0.global-to-local, align 4
  %v1_10003f58 = add i32 %v0_10003f4c, -1
  store i32 %v1_10003f58, i32* %r3.global-to-local, align 4
  store i32 %v2_10003f54, i32* %ctr.global-to-local, align 4
  %v0_10003f64 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003f64 = add i32 %v0_10003f64, %v0_10003f44
  store i32 %v2_10003f64, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_10003f6c = ptrtoint i32* %stack_var_-2180 to i32
  store i32 %v2_10003f6c, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10003f70

dec_label_pc_10003f70:                            ; preds = %dec_label_pc_10003fb4, %dec_label_pc_10003f54
  %v0_10003fb8 = phi i32 [ %v1_10003fb8, %dec_label_pc_10003fb4 ], [ %v2_10003f54, %dec_label_pc_10003f54 ]
  %v0_10003fb4 = phi i32 [ %v1_10003fb4, %dec_label_pc_10003fb4 ], [ %v0_10003f44, %dec_label_pc_10003f54 ]
  %v0_10003f7c = phi i32 [ %v1_10003f7c, %dec_label_pc_10003fb4 ], [ %v2_10003f64, %dec_label_pc_10003f54 ]
  %v0_10003f70 = phi i32 [ %v0_10003f704, %dec_label_pc_10003fb4 ], [ 0, %dec_label_pc_10003f54 ]
  %v3_10003f70 = icmp eq i32 %v0_10003f70, 0
  store i1 %v3_10003f70, i1* %cr7_eq.global-to-local, align 1
  %v1_10003f74 = inttoptr i32 %v0_10003f7c to i8*
  %v2_10003f74 = load i8, i8* %v1_10003f74, align 1
  %v3_10003f74 = zext i8 %v2_10003f74 to i32
  store i32 %v3_10003f74, i32* %r9.global-to-local, align 4
  %v4_10003f78 = icmp eq i32 %v1_10003f58, %v0_10003fb4
  %v1_10003f7c = add i32 %v0_10003f7c, 1
  store i32 %v1_10003f7c, i32* %r11.global-to-local, align 4
  br i1 %v3_10003f70, label %dec_label_pc_10003f8c, label %dec_label_pc_10003f9c

dec_label_pc_10003f8c:                            ; preds = %dec_label_pc_10003f70
  %v3_10003f8c = icmp eq i8 %v2_10003f74, 9
  store i1 %v3_10003f8c, i1* %cr7_eq.global-to-local, align 1
  switch i8 %v2_10003f74, label %dec_label_pc_10003f98 [
    i8 32, label %dec_label_pc_10003fb4
    i8 9, label %dec_label_pc_10003fb4
  ]

dec_label_pc_10003f98:                            ; preds = %dec_label_pc_10003f8c
  store i32 1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10003f9c

dec_label_pc_10003f9c:                            ; preds = %dec_label_pc_10003f70, %dec_label_pc_10003f98
  %v0_10003f705 = phi i32 [ %v0_10003f70, %dec_label_pc_10003f70 ], [ 1, %dec_label_pc_10003f98 ]
  %v1_10003f9c = add nuw nsw i32 %v3_10003f74, 208
  %v1_10003fa0 = urem i32 %v1_10003f9c, 256
  store i32 %v1_10003fa0, i32* %r0.global-to-local, align 4
  %v2_10003fa4 = icmp ugt i32 %v1_10003fa0, 9
  %v3_10003fa4 = icmp eq i32 %v1_10003fa0, 9
  store i1 %v3_10003fa4, i1* %cr7_eq.global-to-local, align 1
  %v3_10003f80.not = icmp ne i8 %v2_10003f74, 46
  %brmerge.not = and i1 %v3_10003f80.not, %v2_10003fa4
  %brmerge26 = or i1 %v4_10003f78, %brmerge.not
  br i1 %brmerge26, label %dec_label_pc_10003ff0, label %dec_label_pc_10003fb4

dec_label_pc_10003fb4:                            ; preds = %dec_label_pc_10003f9c, %dec_label_pc_10003f8c, %dec_label_pc_10003f8c
  %v0_10003f704 = phi i32 [ 0, %dec_label_pc_10003f8c ], [ 0, %dec_label_pc_10003f8c ], [ %v0_10003f705, %dec_label_pc_10003f9c ]
  %v1_10003fb4 = add i32 %v0_10003fb4, 1
  %v1_10003fb8 = add i32 %v0_10003fb8, -1
  store i32 %v1_10003fb8, i32* %ctr.global-to-local, align 4
  %v2_10003fb8 = icmp eq i32 %v1_10003fb8, 0
  br i1 %v2_10003fb8, label %dec_label_pc_10003fbc, label %dec_label_pc_10003f70

dec_label_pc_10003fbc:                            ; preds = %dec_label_pc_10003fb4, %dec_label_pc_10003f4c, %dec_label_pc_10003ef4, %dec_label_pc_10003d5c
  %v0_10003fbc = call i32 @function_10005f74()
  %v1_10003fc0 = urem i32 %v0_10003fbc, 4
  store i32 %v1_10003fc0, i32* %r3.global-to-local, align 4
  %v3_10003fc4 = icmp eq i32 %v1_10003fc0, 1
  store i1 %v3_10003fc4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10003fc4, label %dec_label_pc_100043a8, label %dec_label_pc_10003fcc

dec_label_pc_10003fcc:                            ; preds = %dec_label_pc_10003fbc
  %v1_10003fc4 = icmp eq i32 %v1_10003fc0, 0
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10003fc4, label %dec_label_pc_100043c0, label %dec_label_pc_10003fd4

dec_label_pc_10003fd4:                            ; preds = %dec_label_pc_10003fcc
  %v2_10003fd4 = icmp eq i32 %v1_10003fc0, 3
  %v3_10003fd4 = icmp eq i32 %v1_10003fc0, 2
  store i1 %v3_10003fd4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10003fd4, label %dec_label_pc_100043b4, label %dec_label_pc_10003fdc

dec_label_pc_10003fdc:                            ; preds = %dec_label_pc_10003fd4
  store i1 %v2_10003fd4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10003fd4, label %dec_label_pc_10003fe4, label %dec_label_pc_10004020

dec_label_pc_10003fe4:                            ; preds = %dec_label_pc_10003fdc
  store i32 67240450, i32* @r21, align 4
  br label %dec_label_pc_10004020

dec_label_pc_10003ff0:                            ; preds = %dec_label_pc_10003f9c
  %v2_10003ff0 = sub i32 %v0_10003fb4, %v0_10003f44
  store i32 %v2_10003f6c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004004.25 to i32), i32* @lr, align 4
  %v3_10004000 = call i32 @function_100089cc(i32 %v2_10003f6c, i32 %v2_10003f64, i32 %v2_10003ff0)
  %v2_10004004 = ptrtoint i32* %stack_var_-2184 to i32
  %v2_10004008 = add i32 %v2_10003ff0, %v2_10004004
  store i32 %v2_10004008, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10004010 = add i32 %v2_10004008, 4
  %v4_10004010 = inttoptr i32 %v3_10004010 to i8*
  store i8 0, i8* %v4_10004010, align 1
  store i32 %v2_10003f6c, i32* %r3.global-to-local, align 4
  store i32 268451868, i32* @lr, align 4
  %v1_10004018 = call i32 @function_10009bbc(i32 %v2_10003f6c)
  store i32 %v1_10004018, i32* %r3.global-to-local, align 4
  store i32 %v1_10004018, i32* @r21, align 4
  br label %dec_label_pc_10004020

dec_label_pc_10004020:                            ; preds = %dec_label_pc_10003fdc, %dec_label_pc_10003fe4, %dec_label_pc_100043c0, %dec_label_pc_100043b4, %dec_label_pc_100043a8, %dec_label_pc_10003ff0
  %v0_10004020 = load i32, i32* %r25.global-to-local, align 4
  %v3_10004020 = icmp eq i32 %v0_10004020, 0
  store i1 %v3_10004020, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10004020, label %dec_label_pc_10004348, label %dec_label_pc_10004028

dec_label_pc_10004028:                            ; preds = %dec_label_pc_10004020
  store i32 %v0_10004020, i32* %r3.global-to-local, align 4
  store i32 268451888, i32* @lr, align 4
  %v1_1000402c = inttoptr i32 %v0_10004020 to i8*
  %v2_1000402c = call i32 @function_10008948(i8* %v1_1000402c)
  store i32 %v2_1000402c, i32* @r29, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268451908, i32* @lr, align 4
  %v3_10004040 = call i32 @function_10009e58(i32 2, i32 3, i32 17)
  store i32 %v3_10004040, i32* %r3.global-to-local, align 4
  %v3_10004044 = icmp eq i32 %v3_10004040, -1
  store i1 %v3_10004044, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10004040, i32* %r22.global-to-local, align 4
  br i1 %v3_10004044, label %dec_label_pc_10004348, label %dec_label_pc_10004050

dec_label_pc_10004050:                            ; preds = %dec_label_pc_10004028
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1000405c = ptrtoint i32* %stack_var_-2184 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-2184, align 4
  store i32 268451948, i32* @lr, align 4
  %v4_10004068 = call i32 @function_10009e1c(i32 0, i32 3, i32 %v2_1000405c, i32 4)
  store i32 %v4_10004068, i32* %r3.global-to-local, align 4
  %v3_1000406c = icmp eq i32 %v4_10004068, -1
  store i1 %v3_1000406c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000406c, label %dec_label_pc_10004340, label %dec_label_pc_10004074

dec_label_pc_10004074:                            ; preds = %dec_label_pc_10004050
  %v0_10004074 = load i32, i32* %r15.global-to-local, align 4
  %v1_10004074 = icmp slt i32 %v0_10004074, 0
  %v3_10004074 = icmp eq i32 %v0_10004074, 0
  store i1 %v1_10004074, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10004074, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000407c = load i32, i32* %r19.global-to-local, align 4
  %v1_1000407c = urem i32 %v0_1000407c, 65536
  store i32 %v1_1000407c, i32* %r17.global-to-local, align 4
  %v0_10004080 = load i32, i32* %r20.global-to-local, align 4
  %v1_10004080 = urem i32 %v0_10004080, 65536
  store i32 %v1_10004080, i32* %r18.global-to-local, align 4
  %v0_10004084 = load i32, i32* %r23.global-to-local, align 4
  %v1_10004084 = urem i32 %v0_10004084, 65536
  store i32 %v1_10004084, i32* %r19.global-to-local, align 4
  store i32 0, i32* %stack_var_-2184, align 4
  %v0_1000408c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000408c = urem i32 %v0_1000408c, 65536
  store i32 %v1_1000408c, i32* %r20.global-to-local, align 4
  %v0_10004090 = load i32, i32* %r26.global-to-local, align 4
  %v1_10004090 = urem i32 %v0_10004090, 256
  store i32 %v1_10004090, i32* %r23.global-to-local, align 4
  %tmp53 = icmp slt i32 %v0_10004074, 1
  %v1_10004334 = load i32, i32* @r29, align 4
  %v2_10004334 = add i32 %v1_10004334, %v1_10004090
  store i32 %v2_10004334, i32* @r24, align 4
  br i1 %tmp53, label %dec_label_pc_100041f8.preheader, label %dec_label_pc_10004098

dec_label_pc_10004098:                            ; preds = %dec_label_pc_10004074
  %v1_1000409c = icmp slt i32 %v1_10004334, 0
  %v3_1000409c = icmp eq i32 %v1_10004334, 0
  store i1 %v1_1000409c, i1* %cr3_lt.global-to-local, align 1
  store i1 %v3_1000409c, i1* %cr3_eq.global-to-local, align 1
  %v1_100040a0 = urem i32 %v2_10004334, 65536
  %v0_100040a4 = load i32, i32* %r27.global-to-local, align 4
  %v3_100040a4 = icmp eq i32 %v0_100040a4, 0
  store i1 %v3_100040a4, i1* %cr2_eq.global-to-local, align 1
  %v1_100040a8 = add nuw nsw i32 %v1_100040a0, 27
  store i32 %v1_100040a8, i32* %r0.global-to-local, align 4
  %v1_100040ac = add nuw nsw i32 %v1_100040a0, 47
  store i32 %v1_100040ac, i32* %r9.global-to-local, align 4
  %fold = add i32 %v2_10004334, 47
  %v1_100040b0 = urem i32 %fold, 65536
  store i32 %v1_100040b0, i32* %r26.global-to-local, align 4
  %fold3 = add i32 %v2_10004334, 27
  %v1_100040b4 = urem i32 %fold3, 65536
  store i32 %v1_100040b4, i32* %r27.global-to-local, align 4
  %v1_100040b8 = add i32 %v1_10004334, 1
  store i32 %v1_100040b8, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v4_10004108 = sext i8 %v5_10003df4 to i32
  %v4_10004110 = sext i8 %v5_10003e2c to i32
  br label %dec_label_pc_100040c0

dec_label_pc_100040c0:                            ; preds = %dec_label_pc_100041d0, %dec_label_pc_10004098
  store i32 600, i32* %r3.global-to-local, align 4
  store i32 268452044, i32* @lr, align 4
  %v2_100040c8 = call i32 @function_1000a1b4(i32 600, i32 1)
  store i32 %v2_100040c8, i32* %r3.global-to-local, align 4
  %v3_100040cc = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_100040cc, i32* %r0.global-to-local, align 4
  %v0_100040d0 = load i32, i32* @r31, align 4
  %v1_100040d0 = mul i32 %v0_100040d0, 4
  store i32 %v1_100040d0, i32* %r9.global-to-local, align 4
  %v2_100040d4 = load i32, i32* %r16.global-to-local, align 4
  %v3_100040d4 = add i32 %v2_100040d4, %v1_100040d0
  %v4_100040d4 = inttoptr i32 %v3_100040d4 to i32*
  store i32 %v2_100040c8, i32* %v4_100040d4, align 4
  %v0_100040d8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100040d8 = mul i32 %v0_100040d8, 4
  store i32 %v1_100040d8, i32* %r0.global-to-local, align 4
  %v0_100040dc = load i32, i32* %r16.global-to-local, align 4
  %v2_100040dc = add i32 %v0_100040dc, %v1_100040d8
  %v3_100040dc = inttoptr i32 %v2_100040dc to i32*
  %v4_100040dc = load i32, i32* %v3_100040dc, align 4
  store i32 %v4_100040dc, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_100040e4 = inttoptr i32 %v4_100040dc to i32*
  %v2_100040e4 = load i32, i32* %v1_100040e4, align 4
  store i32 %v2_100040e4, i32* %r9.global-to-local, align 4
  %v1_100040e8 = add i32 %v4_100040dc, 20
  store i32 %v1_100040e8, i32* %r10.global-to-local, align 4
  %v0_100040ec = load i32, i32* %r17.global-to-local, align 4
  %v1_100040ec = trunc i32 %v0_100040ec to i16
  %v3_100040ec = add i32 %v4_100040dc, 4
  %v4_100040ec = inttoptr i32 %v3_100040ec to i16*
  store i16 %v1_100040ec, i16* %v4_100040ec, align 2
  %v0_100040f0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100040f0 = add i32 %v0_100040f0, 28
  store i32 %v1_100040f0, i32* %r8.global-to-local, align 4
  %v1_100040f4 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100040f4, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_100040fc = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_100040fc, i32* %r9.global-to-local, align 4
  %v1_10004100 = load i32, i32* %r11.global-to-local, align 4
  %v2_10004100 = inttoptr i32 %v1_10004100 to i32*
  store i32 %v1_100040fc, i32* %v2_10004100, align 4
  %v0_10004104 = load i32, i32* %r26.global-to-local, align 4
  %v1_10004104 = trunc i32 %v0_10004104 to i16
  %v2_10004104 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004104 = add i32 %v2_10004104, 2
  %v4_10004104 = inttoptr i32 %v3_10004104 to i16*
  store i16 %v1_10004104, i16* %v4_10004104, align 2
  store i32 %v4_10004108, i32* %r0.global-to-local, align 4
  %v2_1000410c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000410c = add i32 %v2_1000410c, 1
  %v4_1000410c = inttoptr i32 %v3_1000410c to i8*
  store i8 %v5_10003df4, i8* %v4_1000410c, align 1
  store i32 %v4_10004110, i32* %r7.global-to-local, align 4
  %v2_10004114 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004114 = add i32 %v2_10004114, 8
  %v4_10004114 = inttoptr i32 %v3_10004114 to i8*
  store i8 %v5_10003e2c, i8* %v4_10004114, align 1
  %v0_10004118 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10004118, label %dec_label_pc_10004124, label %dec_label_pc_1000411c

dec_label_pc_1000411c:                            ; preds = %dec_label_pc_100040c0
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10004120 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004120 = add i32 %v2_10004120, 6
  %v4_10004120 = inttoptr i32 %v3_10004120 to i16*
  store i16 16384, i16* %v4_10004120, align 2
  br label %dec_label_pc_10004124

dec_label_pc_10004124:                            ; preds = %dec_label_pc_100040c0, %dec_label_pc_1000411c
  store i32 268566528, i32* %r7.global-to-local, align 4
  %v2_1000412c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000412c = add i32 %v2_1000412c, 9
  %v4_1000412c = inttoptr i32 %v3_1000412c to i8*
  store i8 17, i8* %v4_1000412c, align 1
  %v0_10004130 = load i32, i32* %r11.global-to-local, align 4
  %v1_10004130 = add i32 %v0_10004130, 41
  store i32 %v1_10004130, i32* %r9.global-to-local, align 4
  %v0_10004134 = load i32, i32* %r27.global-to-local, align 4
  %v1_10004134 = trunc i32 %v0_10004134 to i16
  %v2_10004134 = load i32, i32* %r10.global-to-local, align 4
  %v3_10004134 = add i32 %v2_10004134, 4
  %v4_10004134 = inttoptr i32 %v3_10004134 to i16*
  store i16 %v1_10004134, i16* %v4_10004134, align 2
  %v0_10004138 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004138 = load i32, i32* %r23.global-to-local, align 4
  %v2_10004138 = add i32 %v1_10004138, %v0_10004138
  store i32 %v2_10004138, i32* %r30.global-to-local, align 4
  %v3_1000413c = load i32, i32* @global_var_1001c298.14, align 4
  store i32 %v3_1000413c, i32* %r0.global-to-local, align 4
  %v1_10004140 = add i32 %v2_10004138, 1
  store i32 %v1_10004140, i32* %r31.global-to-local, align 4
  %v0_10004144 = load i32, i32* %r19.global-to-local, align 4
  %v1_10004144 = trunc i32 %v0_10004144 to i16
  %v2_10004144 = load i32, i32* %r10.global-to-local, align 4
  %v3_10004144 = add i32 %v2_10004144, 2
  %v4_10004144 = inttoptr i32 %v3_10004144 to i16*
  store i16 %v1_10004144, i16* %v4_10004144, align 2
  %v0_10004148 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10004148, i32* %r3.global-to-local, align 4
  %v0_1000414c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000414c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000414c = add i32 %v1_1000414c, 12
  %v3_1000414c = inttoptr i32 %v2_1000414c to i32*
  store i32 %v0_1000414c, i32* %v3_1000414c, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v0_10004154 = load i32, i32* %r18.global-to-local, align 4
  %v1_10004154 = trunc i32 %v0_10004154 to i16
  %v2_10004154 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004154 = add i32 %v2_10004154, 20
  %v4_10004154 = inttoptr i32 %v3_10004154 to i16*
  store i16 %v1_10004154, i16* %v4_10004154, align 2
  %v0_10004158 = load i32, i32* %r25.global-to-local, align 4
  %v0_1000415c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000415c = trunc i32 %v0_1000415c to i16
  %v2_1000415c = load i32, i32* %r8.global-to-local, align 4
  %v3_1000415c = add i32 %v2_1000415c, 2
  %v4_1000415c = inttoptr i32 %v3_1000415c to i16*
  store i16 %v1_1000415c, i16* %v4_1000415c, align 2
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10004164 = load i32, i32* %r8.global-to-local, align 4
  %v3_10004164 = add i32 %v2_10004164, 4
  %v4_10004164 = inttoptr i32 %v3_10004164 to i16*
  store i16 1, i16* %v4_10004164, align 2
  %v0_10004168 = load i32, i32* @r28, align 4
  %v0_1000416c = load i32, i32* @r21, align 4
  %v1_1000416c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000416c = add i32 %v1_1000416c, 16
  %v3_1000416c = inttoptr i32 %v2_1000416c to i32*
  store i32 %v0_1000416c, i32* %v3_1000416c, align 4
  %v0_10004170 = load i32, i32* %r20.global-to-local, align 4
  %v1_10004170 = trunc i32 %v0_10004170 to i16
  %v2_10004170 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004170 = add i32 %v2_10004170, 28
  %v4_10004170 = inttoptr i32 %v3_10004170 to i16*
  store i16 %v1_10004170, i16* %v4_10004170, align 2
  %v0_10004174 = load i32, i32* %r23.global-to-local, align 4
  %v1_10004174 = trunc i32 %v0_10004174 to i8
  %v2_10004174 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004174 = add i32 %v2_10004174, 40
  %v4_10004174 = inttoptr i32 %v3_10004174 to i8*
  store i8 %v1_10004174, i8* %v4_10004174, align 1
  store i32 268452220, i32* @lr, align 4
  %v3_10004178 = call i32 @function_100089cc(i32 %v0_10004148, i32 %v0_10004158, i32 %v0_10004168)
  store i32 %v3_10004178, i32* %r3.global-to-local, align 4
  %v0_1000417c = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_1000417c = load i1, i1* %cr3_lt.global-to-local, align 1
  %v2_1000417c = or i1 %v0_1000417c, %v1_1000417c
  br i1 %v2_1000417c, label %dec_label_pc_100041c8, label %dec_label_pc_10004180

dec_label_pc_10004180:                            ; preds = %dec_label_pc_10004124
  %v0_10004180 = load i32, i32* @r29, align 4
  store i32 %v0_10004180, i32* %ctr.global-to-local, align 4
  %v0_10004184 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10004184, i32* %r3.global-to-local, align 4
  %v0_10004188 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10004188, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100041a8

dec_label_pc_10004198:                            ; preds = %dec_label_pc_100041a8
  %v1_10004198 = urem i32 %v1_100041ac, 256
  br label %dec_label_pc_1000419c

dec_label_pc_1000419c:                            ; preds = %dec_label_pc_100041b8, %dec_label_pc_10004198
  %v0_100041a4 = phi i32 [ %v0_100041a4.pre, %dec_label_pc_100041b8 ], [ %v0_100041a418, %dec_label_pc_10004198 ]
  %v0_100041a0 = phi i32 [ %v0_100041bc, %dec_label_pc_100041b8 ], [ %v0_100041a016, %dec_label_pc_10004198 ]
  %v2_100041b813 = phi i32 [ %v0_100041bc, %dec_label_pc_100041b8 ], [ %v2_100041b8, %dec_label_pc_10004198 ]
  %v0_1000419c = phi i32 [ %v0_1000419c.pre, %dec_label_pc_100041b8 ], [ %v0_100041a8, %dec_label_pc_10004198 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_100041b8 ], [ %v1_10004198, %dec_label_pc_10004198 ]
  store i32 %storemerge, i32* %r8.global-to-local, align 4
  %v1_1000419c = add i32 %v0_1000419c, 1
  store i32 %v1_1000419c, i32* %r10.global-to-local, align 4
  %v1_100041a0 = add i32 %v0_100041a0, 1
  store i32 %v1_100041a0, i32* %r3.global-to-local, align 4
  %v1_100041a4 = add i32 %v0_100041a4, -1
  store i32 %v1_100041a4, i32* %ctr.global-to-local, align 4
  %v2_100041a4 = icmp eq i32 %v1_100041a4, 0
  br i1 %v2_100041a4, label %dec_label_pc_100041d0.loopexit, label %dec_label_pc_100041a8

dec_label_pc_100041a8:                            ; preds = %dec_label_pc_1000419c, %dec_label_pc_10004180
  %v0_100041a418 = phi i32 [ %v1_100041a4, %dec_label_pc_1000419c ], [ %v0_10004180, %dec_label_pc_10004180 ]
  %v0_100041a016 = phi i32 [ %v1_100041a0, %dec_label_pc_1000419c ], [ %v0_10004184, %dec_label_pc_10004180 ]
  %v2_100041b8 = phi i32 [ %v2_100041b813, %dec_label_pc_1000419c ], [ %v0_10004188, %dec_label_pc_10004180 ]
  %v0_100041b8 = phi i32 [ %storemerge, %dec_label_pc_1000419c ], [ 0, %dec_label_pc_10004180 ]
  %v0_100041a8 = phi i32 [ %v1_1000419c, %dec_label_pc_1000419c ], [ 0, %dec_label_pc_10004180 ]
  %v1_100041a8 = load i32, i32* %r25.global-to-local, align 4
  %v2_100041a8 = add i32 %v1_100041a8, %v0_100041a8
  %v3_100041a8 = inttoptr i32 %v2_100041a8 to i8*
  %v4_100041a8 = load i8, i8* %v3_100041a8, align 1
  %v5_100041a8 = zext i8 %v4_100041a8 to i32
  store i32 %v5_100041a8, i32* %r0.global-to-local, align 4
  %v1_100041ac = add nsw i32 %v0_100041b8, 1
  store i32 %v1_100041ac, i32* %r11.global-to-local, align 4
  %v3_100041b0 = icmp eq i8 %v4_100041a8, 46
  store i1 %v3_100041b0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100041b0, label %dec_label_pc_100041b8, label %dec_label_pc_10004198

dec_label_pc_100041b8:                            ; preds = %dec_label_pc_100041a8
  %v1_100041b8 = trunc i32 %v0_100041b8 to i8
  %v3_100041b8 = inttoptr i32 %v2_100041b8 to i8*
  store i8 %v1_100041b8, i8* %v3_100041b8, align 1
  %v0_100041bc = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_100041bc, i32* %r9.global-to-local, align 4
  %v0_1000419c.pre = load i32, i32* %r10.global-to-local, align 4
  %v0_100041a4.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000419c

dec_label_pc_100041c8:                            ; preds = %dec_label_pc_10004124
  %v0_100041c8 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_100041c8, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100041d0

dec_label_pc_100041d0.loopexit:                   ; preds = %dec_label_pc_1000419c
  %extract.t = trunc i32 %storemerge to i8
  br label %dec_label_pc_100041d0

dec_label_pc_100041d0:                            ; preds = %dec_label_pc_100041d0.loopexit, %dec_label_pc_100041c8
  %v2_100041d0 = phi i32 [ %v2_100041b813, %dec_label_pc_100041d0.loopexit ], [ %v0_100041c8, %dec_label_pc_100041c8 ]
  %v0_100041d0.off0 = phi i8 [ %extract.t, %dec_label_pc_100041d0.loopexit ], [ 0, %dec_label_pc_100041c8 ]
  %v3_100041d0 = inttoptr i32 %v2_100041d0 to i8*
  store i8 %v0_100041d0.off0, i8* %v3_100041d0, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_100041d8 = load i32, i32* %r30.global-to-local, align 4
  %v1_100041d8 = load i32, i32* @r29, align 4
  %v2_100041d8 = add i32 %v1_100041d8, %v0_100041d8
  store i32 %v2_100041d8, i32* %r9.global-to-local, align 4
  %v3_100041dc = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_100041dc, i32* %r11.global-to-local, align 4
  %v3_100041e0 = add i32 %v2_100041d8, 4
  %v4_100041e0 = inttoptr i32 %v3_100041e0 to i16*
  store i16 1, i16* %v4_100041e0, align 2
  %v0_100041e4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100041e4 = add i32 %v0_100041e4, 1
  store i32 %v1_100041e4, i32* %r31.global-to-local, align 4
  %v0_100041e8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100041e8 = trunc i32 %v0_100041e8 to i16
  %v2_100041e8 = load i32, i32* %r9.global-to-local, align 4
  %v3_100041e8 = add i32 %v2_100041e8, 2
  %v4_100041e8 = inttoptr i32 %v3_100041e8 to i16*
  store i16 %v1_100041e8, i16* %v4_100041e8, align 2
  %v0_100041ec = load i32, i32* %r31.global-to-local, align 4
  %v1_100041ec = load i32, i32* %r15.global-to-local, align 4
  %v2_100041ec = icmp slt i32 %v0_100041ec, %v1_100041ec
  %v4_100041ec = icmp eq i32 %v0_100041ec, %v1_100041ec
  store i1 %v4_100041ec, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_100041ec, i32* %stack_var_-2184, align 4
  br i1 %v2_100041ec, label %dec_label_pc_100040c0, label %dec_label_pc_100041f8.preheader.loopexit

dec_label_pc_100041f8.preheader.loopexit:         ; preds = %dec_label_pc_100041d0
  %v0_100041f8.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100041f8.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100041f8.preheader

dec_label_pc_100041f8.preheader:                  ; preds = %dec_label_pc_100042f0, %dec_label_pc_10004074, %dec_label_pc_100041f8.preheader.loopexit
  %v1_100041f8 = phi i1 [ %v1_10004074, %dec_label_pc_10004074 ], [ %v1_100041f8.pre, %dec_label_pc_100041f8.preheader.loopexit ], [ %v1_100042f0, %dec_label_pc_100042f0 ]
  %v0_100041f8 = phi i1 [ %v3_10004074, %dec_label_pc_10004074 ], [ %v0_100041f8.pre, %dec_label_pc_100041f8.preheader.loopexit ], [ %v0_100042f0, %dec_label_pc_100042f0 ]
  %v2_100041f8 = or i1 %v1_100041f8, %v0_100041f8
  br label %dec_label_pc_100041f8

dec_label_pc_100041f8:                            ; preds = %dec_label_pc_100041f8.preheader, %dec_label_pc_100041f8
  br i1 %v2_100041f8, label %dec_label_pc_100041f8, label %dec_label_pc_100041fc

dec_label_pc_100041fc:                            ; preds = %dec_label_pc_100041f8, %dec_label_pc_100042f0
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-2184, align 4
  %v0_1000420c = load i32, i32* %r19.global-to-local, align 4
  %v4_1000420c = icmp eq i32 %v0_1000420c, 65535
  store i1 %v4_1000420c, i1* %cr7_eq.global-to-local, align 1
  %v0_10004210 = load i32, i32* %r18.global-to-local, align 4
  %v2_10004210 = icmp slt i32 %v0_10004210, 65535
  %v4_10004210 = icmp eq i32 %v0_10004210, 65535
  store i1 %v2_10004210, i1* %cr3_lt.global-to-local, align 1
  store i1 %v4_10004210, i1* %cr3_eq.global-to-local, align 1
  %v0_10004214 = load i32, i32* %r20.global-to-local, align 4
  %v4_10004214 = icmp eq i32 %v0_10004214, 65535
  store i1 %v4_10004214, i1* %cr2_eq.global-to-local, align 1
  %v0_10004218 = load i32, i32* @r24, align 4
  %v1_10004218 = add i32 %v0_10004218, 27
  store i32 %v1_10004218, i32* @r30, align 4
  %v0_1000421c = call i32 @__asm_mfcr()
  store i32 %v0_1000421c, i32* %r3.global-to-local, align 4
  %v1_10004220 = mul i32 %v0_1000421c, 268435456
  store i32 %v1_10004220, i32* @r26, align 4
  %v0_10004224 = load i32, i32* %r17.global-to-local, align 4
  %v1_10004224 = load i32, i32* %r0.global-to-local, align 4
  %v4_10004224 = icmp eq i32 %v0_10004224, %v1_10004224
  store i1 %v4_10004224, i1* %cr7_eq.global-to-local, align 1
  %v0_10004228 = load i32, i32* @r24, align 4
  %v1_10004228 = add i32 %v0_10004228, 47
  store i32 %v1_10004228, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10004230 = call i32 @__asm_mfcr()
  store i32 %v0_10004230, i32* %r3.global-to-local, align 4
  %v1_10004234 = mul i32 %v0_10004230, 268435456
  store i32 %v1_10004234, i32* %r27.global-to-local, align 4
  store i32 0, i32* @r25, align 4
  %v0_1000423c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000423c

dec_label_pc_1000423c:                            ; preds = %dec_label_pc_10004270.dec_label_pc_1000423c_crit_edge, %dec_label_pc_100041fc
  %v0_10004240 = phi i32 [ %v0_10004240.pre, %dec_label_pc_10004270.dec_label_pc_1000423c_crit_edge ], [ %v1_10004234, %dec_label_pc_100041fc ]
  %v0_1000423c = phi i32 [ %v1_100042e0, %dec_label_pc_10004270.dec_label_pc_1000423c_crit_edge ], [ %v0_1000423c.pre, %dec_label_pc_100041fc ]
  %v1_1000423c = mul i32 %v0_1000423c, 4
  store i32 %v1_1000423c, i32* %r0.global-to-local, align 4
  %v1_10004240 = mul i32 %v0_10004240, 16
  %v2_10004240 = udiv i32 %v0_10004240, 268435456
  %v3_10004240 = or i32 %v2_10004240, %v1_10004240
  store i32 %v3_10004240, i32* %r27.global-to-local, align 4
  %v1_10004244 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10004240)
  %v1_10004248 = mul nuw i32 %v2_10004240, 268435456
  %v2_10004248 = urem i32 %v0_10004240, 268435456
  %v3_10004248 = or i32 %v1_10004248, %v2_10004248
  store i32 %v3_10004248, i32* @r27, align 4
  %v0_1000424c = load i32, i32* %r16.global-to-local, align 4
  %v1_1000424c = load i32, i32* %r0.global-to-local, align 4
  %v2_1000424c = add i32 %v1_1000424c, %v0_1000424c
  %v3_1000424c = inttoptr i32 %v2_1000424c to i32*
  %v4_1000424c = load i32, i32* %v3_1000424c, align 4
  store i32 %v4_1000424c, i32* @r29, align 4
  %v1_10004250 = add i32 %v4_1000424c, 20
  store i32 %v1_10004250, i32* @r28, align 4
  %v0_10004254 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004254, label %dec_label_pc_100042f8, label %dec_label_pc_10004258

dec_label_pc_10004258:                            ; preds = %dec_label_pc_1000423c
  %v0_10004258 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004258, label %dec_label_pc_10004304, label %dec_label_pc_1000425c

dec_label_pc_1000425c:                            ; preds = %dec_label_pc_100042f8, %dec_label_pc_10004258
  %v0_1000425c = load i32, i32* @r26, align 4
  %v1_1000425c = mul i32 %v0_1000425c, 16
  %v2_1000425c = udiv i32 %v0_1000425c, 268435456
  %v3_1000425c = or i32 %v2_1000425c, %v1_1000425c
  store i32 %v3_1000425c, i32* %r26.global-to-local, align 4
  %v1_10004260 = call %0 @__asm_mtcrf(i32 1, i32 %v3_1000425c)
  %v1_10004264 = mul nuw i32 %v2_1000425c, 268435456
  %v2_10004264 = urem i32 %v0_1000425c, 268435456
  %v3_10004264 = or i32 %v1_10004264, %v2_10004264
  store i32 %v3_10004264, i32* @r26, align 4
  %v0_10004268 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004268, label %dec_label_pc_1000431c, label %dec_label_pc_1000426c

dec_label_pc_1000426c:                            ; preds = %dec_label_pc_10004304, %dec_label_pc_1000425c
  %v0_1000426c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000426c, label %dec_label_pc_10004328, label %dec_label_pc_10004270

dec_label_pc_10004270:                            ; preds = %dec_label_pc_1000431c, %dec_label_pc_1000426c, %dec_label_pc_10004328
  %v0_10004270 = load i32, i32* @r29, align 4
  %v1_10004270 = add i32 %v0_10004270, 41
  store i32 %v1_10004270, i32* %r3.global-to-local, align 4
  %v0_10004274 = load i32, i32* %r23.global-to-local, align 4
  store i32 268452476, i32* @lr, align 4
  %v2_10004278 = inttoptr i32 %v1_10004270 to i8*
  %v3_10004278 = call i32 @function_10006034(i8* %v2_10004278, i32 %v0_10004274)
  %v0_1000427c = load i32, i32* @r25, align 4
  %v1_1000427c = trunc i32 %v0_1000427c to i16
  %v2_1000427c = load i32, i32* @r29, align 4
  %v3_1000427c = add i32 %v2_1000427c, 10
  %v4_1000427c = inttoptr i32 %v3_1000427c to i16*
  store i16 %v1_1000427c, i16* %v4_1000427c, align 2
  %v0_10004284 = load i32, i32* @r29, align 4
  store i32 %v0_10004284, i32* @r3, align 4
  %v2_10004288 = call i32 @function_100043cc(i32 %v0_10004284, i32 20)
  %v3_10004288 = trunc i32 %v2_10004288 to i16
  %v0_1000428c = load i32, i32* @r28, align 4
  store i32 %v0_1000428c, i32* @r4, align 4
  %v3_10004290 = load i32, i32* @r29, align 4
  %v4_10004290 = add i32 %v3_10004290, 10
  %v5_10004290 = inttoptr i32 %v4_10004290 to i16*
  store i16 %v3_10004288, i16* %v5_10004290, align 2
  %v0_10004294 = load i32, i32* @r30, align 4
  %v0_10004298 = load i32, i32* @r25, align 4
  %v1_10004298 = trunc i32 %v0_10004298 to i16
  %v2_10004298 = load i32, i32* @r28, align 4
  %v3_10004298 = add i32 %v2_10004298, 6
  %v4_10004298 = inttoptr i32 %v3_10004298 to i16*
  store i16 %v1_10004298, i16* %v4_10004298, align 2
  %v0_1000429c = load i32, i32* @r29, align 4
  store i32 %v0_1000429c, i32* %r3.global-to-local, align 4
  %v0_100042a0 = load i32, i32* @r28, align 4
  %v1_100042a0 = add i32 %v0_100042a0, 4
  %v2_100042a0 = inttoptr i32 %v1_100042a0 to i16*
  %v3_100042a0 = load i16, i16* %v2_100042a0, align 2
  %v4_100042a0 = zext i16 %v3_100042a0 to i32
  %v4_100042a4 = call i32 @function_10004430(i32 %v0_1000429c, i32 %v0_1000428c, i32 %v4_100042a0, i32 %v0_10004294)
  %v5_100042a4 = trunc i32 %v4_100042a4 to i16
  store i32 %v4_100042a4, i32* %r3.global-to-local, align 4
  %v3_100042a8 = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_100042a8, i32* %r7.global-to-local, align 4
  %v0_100042ac = load i32, i32* @r28, align 4
  %v1_100042ac = add i32 %v0_100042ac, 2
  %v2_100042ac = inttoptr i32 %v1_100042ac to i16*
  %v3_100042ac = load i16, i16* %v2_100042ac, align 2
  %v4_100042ac = zext i16 %v3_100042ac to i32
  store i32 %v4_100042ac, i32* %r0.global-to-local, align 4
  %v0_100042b0 = load i32, i32* @r29, align 4
  %v1_100042b4 = mul i32 %v3_100042a8, 24
  store i32 %v1_100042b4, i32* %r7.global-to-local, align 4
  %v4_100042b8 = add i32 %v0_100042ac, 6
  %v5_100042b8 = inttoptr i32 %v4_100042b8 to i16*
  store i16 %v5_100042a4, i16* %v5_100042b8, align 2
  %v0_100042bc = load i32, i32* @r31, align 4
  %v0_100042c0 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100042c0, i32* %r3.global-to-local, align 4
  %v0_100042c4 = load i32, i32* %r7.global-to-local, align 4
  %v1_100042c4 = load i32, i32* %r14.global-to-local, align 4
  %v2_100042c4 = add i32 %v1_100042c4, %v0_100042c4
  store i32 %v2_100042c4, i32* %r7.global-to-local, align 4
  %v0_100042cc = load i32, i32* %r0.global-to-local, align 4
  %v1_100042cc = trunc i32 %v0_100042cc to i16
  %v3_100042cc = add i32 %v2_100042c4, 2
  %v4_100042cc = inttoptr i32 %v3_100042cc to i16*
  store i16 %v1_100042cc, i16* %v4_100042cc, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  %v0_100042d4 = load i32, i32* @r21, align 4
  %v2_100042d4 = add i32 %v2_100042c4, 4
  %v3_100042d4 = inttoptr i32 %v2_100042d4 to i32*
  store i32 %v0_100042d4, i32* %v3_100042d4, align 4
  store i32 268452572, i32* @lr, align 4
  %v6_100042d8 = call i32 @function_10009ddc(i32 %v0_100042c0, i32 %v0_100042b0, i32 %v0_100042bc, i32 16384, i32 %v2_100042c4, i32 16)
  store i32 %v6_100042d8, i32* %r3.global-to-local, align 4
  %v3_100042dc = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_100042dc, i32* %r9.global-to-local, align 4
  %v1_100042e0 = add i32 %v3_100042dc, 1
  store i32 %v1_100042e0, i32* %r0.global-to-local, align 4
  %v1_100042e4 = load i32, i32* %r15.global-to-local, align 4
  %v2_100042e4 = icmp slt i32 %v1_100042e0, %v1_100042e4
  %v4_100042e4 = icmp eq i32 %v1_100042e0, %v1_100042e4
  store i1 %v4_100042e4, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100042e0, i32* %stack_var_-2184, align 4
  br i1 %v2_100042e4, label %dec_label_pc_10004270.dec_label_pc_1000423c_crit_edge, label %dec_label_pc_100042f0

dec_label_pc_10004270.dec_label_pc_1000423c_crit_edge: ; preds = %dec_label_pc_10004270
  %v0_10004240.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_1000423c

dec_label_pc_100042f0:                            ; preds = %dec_label_pc_10004270
  %v0_100042f0 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100042f0 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100042f0 = or i1 %v0_100042f0, %v1_100042f0
  br i1 %v2_100042f0, label %dec_label_pc_100041f8.preheader, label %dec_label_pc_100041fc

dec_label_pc_100042f8:                            ; preds = %dec_label_pc_1000423c
  %v0_100042f8 = call i32 @function_10005f74()
  %v1_100042f8 = trunc i32 %v0_100042f8 to i16
  store i32 %v0_100042f8, i32* %r3.global-to-local, align 4
  %v3_100042fc = load i32, i32* @r29, align 4
  %v4_100042fc = add i32 %v3_100042fc, 4
  %v5_100042fc = inttoptr i32 %v4_100042fc to i16*
  store i16 %v1_100042f8, i16* %v5_100042fc, align 2
  %v0_10004300 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004300, label %dec_label_pc_10004304, label %dec_label_pc_1000425c

dec_label_pc_10004304:                            ; preds = %dec_label_pc_100042f8, %dec_label_pc_10004258
  %v0_10004304 = call i32 @function_10005f74()
  %v1_10004304 = trunc i32 %v0_10004304 to i16
  store i32 %v0_10004304, i32* %r3.global-to-local, align 4
  %v0_10004308 = load i32, i32* @r26, align 4
  %v1_10004308 = mul i32 %v0_10004308, 16
  %v2_10004308 = udiv i32 %v0_10004308, 268435456
  %v3_10004308 = or i32 %v2_10004308, %v1_10004308
  store i32 %v3_10004308, i32* %r26.global-to-local, align 4
  %v1_1000430c = call %0 @__asm_mtcrf(i32 1, i32 %v3_10004308)
  %v1_10004310 = mul nuw i32 %v2_10004308, 268435456
  %v2_10004310 = urem i32 %v0_10004308, 268435456
  %v3_10004310 = or i32 %v1_10004310, %v2_10004310
  store i32 %v3_10004310, i32* @r26, align 4
  %v3_10004314 = load i32, i32* @r29, align 4
  %v4_10004314 = add i32 %v3_10004314, 20
  %v5_10004314 = inttoptr i32 %v4_10004314 to i16*
  store i16 %v1_10004304, i16* %v5_10004314, align 2
  %v0_10004318 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004318, label %dec_label_pc_1000431c, label %dec_label_pc_1000426c

dec_label_pc_1000431c:                            ; preds = %dec_label_pc_10004304, %dec_label_pc_1000425c
  %v0_1000431c = call i32 @function_10005f74()
  %v1_1000431c = trunc i32 %v0_1000431c to i16
  store i32 %v0_1000431c, i32* %r3.global-to-local, align 4
  %v3_10004320 = load i32, i32* @r28, align 4
  %v4_10004320 = add i32 %v3_10004320, 2
  %v5_10004320 = inttoptr i32 %v4_10004320 to i16*
  store i16 %v1_1000431c, i16* %v5_10004320, align 2
  %v0_10004324 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10004324, label %dec_label_pc_10004328, label %dec_label_pc_10004270

dec_label_pc_10004328:                            ; preds = %dec_label_pc_1000431c, %dec_label_pc_1000426c
  %v0_10004328 = call i32 @function_10005f74()
  %v1_10004328 = trunc i32 %v0_10004328 to i16
  store i32 %v0_10004328, i32* %r3.global-to-local, align 4
  %v3_1000432c = load i32, i32* @r29, align 4
  %v4_1000432c = add i32 %v3_1000432c, 28
  %v5_1000432c = inttoptr i32 %v4_1000432c to i16*
  store i16 %v1_10004328, i16* %v5_1000432c, align 2
  br label %dec_label_pc_10004270

dec_label_pc_10004340:                            ; preds = %dec_label_pc_10004050
  %v0_10004340 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10004340, i32* %r3.global-to-local, align 4
  store i32 268452680, i32* @lr, align 4
  %v0_10004344 = call i32 @function_10009108()
  store i32 %v0_10004344, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10004348

dec_label_pc_10004348:                            ; preds = %dec_label_pc_10004028, %dec_label_pc_10004020, %dec_label_pc_10004340
  store i32 %v0_10003d74, i32* %r0.global-to-local, align 4
  %v1_1000435c = call %0 @__asm_mtcrf(i32 56, i32 %v0_10003d64)
  store i32 %v0_10003d94, i32* %r24.global-to-local, align 4
  store i32 %v0_10003d98, i32* %r25.global-to-local, align 4
  store i32 %v0_10003d9c, i32* %r26.global-to-local, align 4
  store i32 %v0_10003da0, i32* %r27.global-to-local, align 4
  store i32 %v0_10003da4, i32* %r28.global-to-local, align 4
  store i32 %v0_10003dc8, i32* %r30.global-to-local, align 4
  store i32 %v0_10003db4, i32* %r31.global-to-local, align 4
  %v0_100043a4 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100043a4

dec_label_pc_100043a8:                            ; preds = %dec_label_pc_10003fbc
  store i32 1246898730, i32* @r21, align 4
  br label %dec_label_pc_10004020

dec_label_pc_100043b4:                            ; preds = %dec_label_pc_10003fd4
  store i32 1074151430, i32* @r21, align 4
  br label %dec_label_pc_10004020

dec_label_pc_100043c0:                            ; preds = %dec_label_pc_10003fcc
  store i32 134744072, i32* @r21, align 4
  br label %dec_label_pc_10004020

; uselistorder directives
  uselistorder i32 %v0_10004328, { 1, 0 }
  uselistorder i32 %v0_1000431c, { 1, 0 }
  uselistorder i32 %v0_10004308, { 2, 1, 0 }
  uselistorder i32 %v0_10004304, { 1, 0 }
  uselistorder i32 %v0_100042f8, { 1, 0 }
  uselistorder i1 %v1_100042f0, { 1, 0 }
  uselistorder i1 %v0_100042f0, { 1, 0 }
  uselistorder i32 %v1_100042e0, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_100042a4, { 1, 0 }
  uselistorder i32 %v0_1000425c, { 2, 1, 0 }
  uselistorder i32 %v0_10004240, { 2, 1, 0 }
  uselistorder i32 %v1_10004234, { 1, 0 }
  uselistorder i32 %v0_100041bc, { 2, 0, 1 }
  uselistorder i32 %v1_100041ac, { 1, 0 }
  uselistorder i32 %v1_100041a4, { 0, 2, 1 }
  uselistorder i32 %v1_100040d8, { 1, 0 }
  uselistorder i32 %v1_100040d0, { 1, 0 }
  uselistorder i32 %v2_10004334, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10004334, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10004090, { 1, 0 }
  uselistorder i32 %v0_10004020, { 1, 0, 2 }
  uselistorder i1 %v2_10003fd4, { 1, 0 }
  uselistorder i32 %v1_10003fc0, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_10003fb8, { 2, 1, 0 }
  uselistorder i32 %v1_10003fa0, { 1, 2, 0 }
  uselistorder i32 %v1_10003f7c, { 1, 0 }
  uselistorder i32 %v0_10003f70, { 1, 0 }
  uselistorder i32 %v2_10003f6c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_10003f4c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10003f44, { 1, 2, 0, 3, 5, 4, 6 }
  uselistorder i32 %v0_10003eec, { 1, 0, 2, 3 }
  uselistorder i8 %v5_10003e2c, { 1, 0 }
  uselistorder i8 %v5_10003df4, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %r31.global-to-local, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32* %r30.global-to-local, { 8, 0, 2, 1, 3, 4, 5, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 29, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 1, 16, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 3, 2 }
  uselistorder i32* %r28.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r27.global-to-local, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32* %r26.global-to-local, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32* %r25.global-to-local, { 4, 0, 1, 2, 3 }
  uselistorder i32* %r24.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 24, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32* %ctr.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 41, { 2, 3, 4, 0, 1 }
  uselistorder i32 47, { 1, 0, 2, 3 }
  uselistorder i32 (i32)* @function_10009bbc, { 1, 0 }
  uselistorder i32 (i32, i32*, i32, i32)* @function_100006a8, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 103, 104, 105, 106, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102 }
  uselistorder label %dec_label_pc_10004348, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004270, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100041fc, { 1, 0 }
  uselistorder label %dec_label_pc_100041f8, { 1, 0 }
  uselistorder label %dec_label_pc_100041f8.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10004124, { 1, 0 }
  uselistorder label %dec_label_pc_10004020, { 2, 3, 4, 5, 1, 0 }
  uselistorder label %dec_label_pc_10003f9c, { 1, 0 }
}

define i32 @function_100043cc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100043cc:
  %tmp = or i32 %arg1, 1
  %tmp8 = icmp eq i32 %tmp, 1
  br i1 %tmp8, label %dec_label_pc_10004400, label %dec_label_pc_100043d8

dec_label_pc_100043d8:                            ; preds = %dec_label_pc_100043cc
  %v1_100043d8 = add i32 %arg1, -2
  %v1_100043dc = udiv i32 %v1_100043d8, 2
  %v1_100043e0 = add nuw i32 %v1_100043dc, 1
  %v0_100043ec.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100043ec

dec_label_pc_100043ec:                            ; preds = %dec_label_pc_100043ec, %dec_label_pc_100043d8
  %v0_100043fc = phi i32 [ %v1_100043fc, %dec_label_pc_100043ec ], [ %v1_100043e0, %dec_label_pc_100043d8 ]
  %v0_100043f8 = phi i32 [ %v2_100043f8, %dec_label_pc_100043ec ], [ 0, %dec_label_pc_100043d8 ]
  %v0_100043f4 = phi i32 [ %v1_100043f4, %dec_label_pc_100043ec ], [ %v0_100043ec.pre, %dec_label_pc_100043d8 ]
  %v1_100043ec = inttoptr i32 %v0_100043f4 to i16*
  %v2_100043ec = load i16, i16* %v1_100043ec, align 2
  %v3_100043ec = zext i16 %v2_100043ec to i32
  %v1_100043f4 = add i32 %v0_100043f4, 2
  store i32 %v1_100043f4, i32* @r3, align 4
  %v2_100043f8 = add i32 %v3_100043ec, %v0_100043f8
  %v1_100043fc = add i32 %v0_100043fc, -1
  %v2_100043fc = icmp eq i32 %v1_100043fc, 0
  br i1 %v2_100043fc, label %dec_label_pc_10004400.loopexit, label %dec_label_pc_100043ec

dec_label_pc_10004400.loopexit:                   ; preds = %dec_label_pc_100043ec
  %tmp11 = mul i32 %v1_100043dc, -2
  %tmp10 = add i32 %v1_100043d8, %tmp11
  br label %dec_label_pc_10004400

dec_label_pc_10004400:                            ; preds = %dec_label_pc_10004400.loopexit, %dec_label_pc_100043cc
  %v0_1000440c = phi i32 [ 0, %dec_label_pc_100043cc ], [ %v2_100043f8, %dec_label_pc_10004400.loopexit ]
  %v0_10004400 = phi i32 [ %arg1, %dec_label_pc_100043cc ], [ %tmp10, %dec_label_pc_10004400.loopexit ]
  %v3_10004400 = icmp eq i32 %v0_10004400, 1
  br i1 %v3_10004400, label %dec_label_pc_10004408, label %dec_label_pc_10004410

dec_label_pc_10004408:                            ; preds = %dec_label_pc_10004400
  %v0_10004408 = load i32, i32* @r3, align 4
  %v1_10004408 = add i32 %v0_10004408, 1
  %v2_10004408 = inttoptr i32 %v1_10004408 to i8*
  %v3_10004408 = load i8, i8* %v2_10004408, align 1
  %v4_10004408 = zext i8 %v3_10004408 to i32
  %v2_1000440c = add i32 %v4_10004408, %v0_1000440c
  br label %dec_label_pc_10004410

dec_label_pc_10004410:                            ; preds = %dec_label_pc_10004400, %dec_label_pc_10004408
  %v0_10004410 = phi i32 [ %v0_1000440c, %dec_label_pc_10004400 ], [ %v2_1000440c, %dec_label_pc_10004408 ]
  %v1_10004410 = urem i32 %v0_10004410, 65536
  %v1_10004414 = udiv i32 %v0_10004410, 65536
  %v2_10004418 = add nuw nsw i32 %v1_10004410, %v1_10004414
  %v1_1000441c = udiv i32 %v2_10004418, 65536
  %v2_10004420 = add nuw nsw i32 %v1_1000441c, %v2_10004418
  %v1_10004424 = urem i32 %v2_10004420, 65536
  %v1_10004428 = xor i32 %v1_10004424, 65535
  ret i32 %v1_10004428

; uselistorder directives
  uselistorder i32 %v2_10004418, { 1, 0 }
  uselistorder i32 %v0_1000440c, { 1, 0 }
  uselistorder i32 %v1_100043fc, { 1, 0 }
  uselistorder i32 %v1_100043f4, { 1, 0 }
  uselistorder label %dec_label_pc_10004410, { 1, 0 }
}

define i32 @function_10004430(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10004430:
  %r0.global-to-local = alloca i32, align 4
  %v1_10004434 = add i32 %arg1, 12
  %v2_10004434 = inttoptr i32 %v1_10004434 to i32*
  %v3_10004434 = load i32, i32* %v2_10004434, align 4
  %v1_10004438 = add i32 %arg1, 16
  %v2_10004438 = inttoptr i32 %v1_10004438 to i32*
  %v3_10004438 = load i32, i32* %v2_10004438, align 4
  %tmp = icmp slt i32 %arg3, 2
  br i1 %tmp, label %dec_label_pc_10004474, label %dec_label_pc_10004440

dec_label_pc_10004440:                            ; preds = %dec_label_pc_10004430
  %v1_10004440 = add i32 %arg3, -2
  %v1_10004448 = icmp slt i32 %v1_10004440, 0
  %v1_1000444c = udiv i32 %v1_10004440, 2
  %v1_10004450 = add nuw i32 %v1_1000444c, 1
  br i1 %v1_10004448, label %dec_label_pc_100044dc, label %dec_label_pc_1000445c.preheader

dec_label_pc_1000445c.preheader:                  ; preds = %dec_label_pc_100044dc, %dec_label_pc_10004440
  %v0_100044704 = phi i32 [ 1, %dec_label_pc_100044dc ], [ %v1_10004450, %dec_label_pc_10004440 ]
  %v0_1000445c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000445c

dec_label_pc_1000445c:                            ; preds = %dec_label_pc_1000445c.preheader, %dec_label_pc_1000445c
  %v0_10004470 = phi i32 [ %v0_100044704, %dec_label_pc_1000445c.preheader ], [ %v1_10004470, %dec_label_pc_1000445c ]
  %v0_1000446c = phi i32 [ 0, %dec_label_pc_1000445c.preheader ], [ %v2_1000446c, %dec_label_pc_1000445c ]
  %v0_10004464 = phi i32 [ %v0_1000445c.pre, %dec_label_pc_1000445c.preheader ], [ %v1_10004464, %dec_label_pc_1000445c ]
  %v1_1000445c = inttoptr i32 %v0_10004464 to i16*
  %v2_1000445c = load i16, i16* %v1_1000445c, align 2
  %v3_1000445c = zext i16 %v2_1000445c to i32
  store i32 %v3_1000445c, i32* %r0.global-to-local, align 4
  %v1_10004464 = add i32 %v0_10004464, 2
  %v2_1000446c = add i32 %v3_1000445c, %v0_1000446c
  %v1_10004470 = add i32 %v0_10004470, -1
  %v2_10004470 = icmp eq i32 %v1_10004470, 0
  br i1 %v2_10004470, label %dec_label_pc_10004474.loopexit, label %dec_label_pc_1000445c

dec_label_pc_10004474.loopexit:                   ; preds = %dec_label_pc_1000445c
  %tmp14 = mul i32 %v0_100044704, -2
  %tmp13 = add i32 %tmp14, %arg3
  %v3_10004468 = icmp eq i32 %tmp13, 1
  br i1 %v3_10004468, label %dec_label_pc_100044c8, label %dec_label_pc_10004478

dec_label_pc_10004474:                            ; preds = %dec_label_pc_10004430
  %v3_10004430 = icmp eq i32 %arg3, 1
  br i1 %v3_10004430, label %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge, label %dec_label_pc_10004478

dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge: ; preds = %dec_label_pc_10004474
  %v0_100044c8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_100044c8

dec_label_pc_10004478:                            ; preds = %dec_label_pc_10004474.loopexit, %dec_label_pc_10004474, %dec_label_pc_100044c8
  %v0_10004490 = phi i32 [ 0, %dec_label_pc_10004474 ], [ %v2_100044cc, %dec_label_pc_100044c8 ], [ %v2_1000446c, %dec_label_pc_10004474.loopexit ]
  %v1_10004478 = urem i32 %v3_10004434, 65536
  %v1_1000447c = udiv i32 %v3_10004434, 65536
  %v2_10004480 = add nuw nsw i32 %v1_10004478, %v1_1000447c
  store i32 %v2_10004480, i32* %r0.global-to-local, align 4
  %v1_10004484 = urem i32 %v3_10004438, 65536
  %v1_10004488 = add i32 %arg1, 9
  %v2_10004488 = inttoptr i32 %v1_10004488 to i8*
  %v3_10004488 = load i8, i8* %v2_10004488, align 1
  %v4_10004488 = zext i8 %v3_10004488 to i32
  %v1_1000448c = udiv i32 %v3_10004438, 65536
  %v2_10004490 = add i32 %v0_10004490, %v1_1000448c
  %v2_10004498 = add i32 %v2_10004490, %v4_10004488
  %v2_10004494 = add i32 %v2_10004480, %arg2
  %v2_1000449c = add i32 %v2_10004494, %v1_10004484
  %v2_100044a0 = add i32 %v2_1000449c, %v2_10004498
  store i32 %v2_100044a0, i32* %r0.global-to-local, align 4
  %v1_100044a4 = call i32 @__asm_rlwinm.(i32 %v2_100044a0, i32 16, i32 16, i32 31)
  %v4_100044a4 = icmp eq i32 %v1_100044a4, 0
  br i1 %v4_100044a4, label %dec_label_pc_100044bc, label %dec_label_pc_100044ac

dec_label_pc_100044ac:                            ; preds = %dec_label_pc_10004478, %dec_label_pc_100044ac
  %v1_100044b0 = phi i32 [ %v1_100044b4, %dec_label_pc_100044ac ], [ %v1_100044a4, %dec_label_pc_10004478 ]
  %v0_100044ac = load i32, i32* %r0.global-to-local, align 4
  %v1_100044ac = urem i32 %v0_100044ac, 65536
  %v2_100044b0 = add i32 %v1_100044ac, %v1_100044b0
  store i32 %v2_100044b0, i32* %r0.global-to-local, align 4
  %v1_100044b4 = call i32 @__asm_rlwinm.(i32 %v2_100044b0, i32 16, i32 16, i32 31)
  %v4_100044b4 = icmp eq i32 %v1_100044b4, 0
  br i1 %v4_100044b4, label %dec_label_pc_100044bc, label %dec_label_pc_100044ac

dec_label_pc_100044bc:                            ; preds = %dec_label_pc_100044ac, %dec_label_pc_10004478
  %v0_100044bc = load i32, i32* %r0.global-to-local, align 4
  %v1_100044bc = urem i32 %v0_100044bc, 65536
  %v1_100044c0 = xor i32 %v1_100044bc, 65535
  ret i32 %v1_100044c0

dec_label_pc_100044c8:                            ; preds = %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge, %dec_label_pc_10004474.loopexit
  %v0_100044c8 = phi i32 [ %v1_10004464, %dec_label_pc_10004474.loopexit ], [ %v0_100044c8.pre, %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge ]
  %v0_100044cc10 = phi i32 [ %v2_1000446c, %dec_label_pc_10004474.loopexit ], [ 0, %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge ]
  %v1_100044c8 = inttoptr i32 %v0_100044c8 to i8*
  %v2_100044c8 = load i8, i8* %v1_100044c8, align 1
  %v3_100044c8 = zext i8 %v2_100044c8 to i32
  store i32 %v3_100044c8, i32* %r0.global-to-local, align 4
  %v2_100044cc = add i32 %v3_100044c8, %v0_100044cc10
  br label %dec_label_pc_10004478

dec_label_pc_100044dc:                            ; preds = %dec_label_pc_10004440
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000445c.preheader

; uselistorder directives
  uselistorder i32 %v1_100044b4, { 1, 0 }
  uselistorder i32 %v1_10004470, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7 }
  uselistorder i32 %arg3, { 3, 0, 2, 1 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100044ac, { 1, 0 }
  uselistorder label %dec_label_pc_10004478, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000445c, { 1, 0 }
}

define i32 @function_100044e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100044e8:
  %v3_100044fc = load i32, i32* @global_var_1001c2a4.26, align 4
  store i32 268453124, i32* @lr, align 4
  %v2_10004500 = call i32 @function_10009228(i32 %v3_100044fc, i32 9)
  ret i32 %v2_10004500
}

define i32 @function_10004514(i32 %arg1) local_unnamed_addr {
dec_label_pc_10004514:
  %r26.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-8792 = alloca i32, align 4
  %stack_var_-8760 = alloca i8, align 1
  %stack_var_-8776 = alloca i8, align 1
  %stack_var_-4151 = alloca i32, align 4
  %stack_var_-8247 = alloca i32, align 4
  %v0_10004524 = load i32, i32* @r27, align 4
  %v2_10004528 = ptrtoint i32* %stack_var_-8247 to i32
  store i32 %v2_10004528, i32* @r27, align 4
  %v2_10004530 = ptrtoint i32* %stack_var_-4151 to i32
  %v0_10004534 = load i32, i32* @r29, align 4
  store i32 %arg1, i32* @r29, align 4
  %v0_10004544 = load i32, i32* @r25, align 4
  %v2_10004548 = ptrtoint i8* %stack_var_-8776 to i32
  %v0_1000454c = load i32, i32* @r30, align 4
  %v2_10004550 = ptrtoint i8* %stack_var_-8760 to i32
  store i32 %v2_10004550, i32* @r30, align 4
  %v0_10004554 = load i32, i32* @r31, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v0_1000455c = load i32, i32* @r23, align 4
  %v0_10004564 = load i32, i32* @r28, align 4
  store i32 268453228, i32* @lr, align 4
  %v3_10004568 = call i32 @function_1000990c(i32 %v2_10004528, i32 0, i32 4096)
  store i32 268453244, i32* @lr, align 4
  %v3_10004578 = call i32 @function_1000990c(i32 %v2_10004530, i32 0, i32 4096)
  store i32 268453260, i32* @lr, align 4
  %v3_10004588 = call i32 @function_1000990c(i32 %v2_10004550, i32 0, i32 513)
  %v0_10004594 = load i32, i32* @r29, align 4
  %v0_10004598 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10004598, i32* %stack_var_-8792, align 4
  %v3_100045a8 = trunc i32 %v0_10004594 to i8
  %v4_100045a8 = call i32 @function_10008e24(i8 %v3_100045a8, i32 16, i32 %v2_10004548)
  store i32 268453300, i32* @lr, align 4
  %v2_100045b0 = call i32 @function_10008948(i8* nonnull %stack_var_-8776)
  %v3_100045b4 = icmp eq i32 %v2_100045b0, 2
  br i1 %v3_100045b4, label %dec_label_pc_10004af4, label %dec_label_pc_100045bc

dec_label_pc_100045bc:                            ; preds = %dec_label_pc_10004514, %dec_label_pc_10004af4
  store i32 0, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100045c8.27 to i32), i32* @lr, align 4
  %v1_100045c4 = call i32 @function_100082e0(i32 15)
  store i32 ptrtoint ([3 x i8]* @global_var_100045d0.28 to i32), i32* @lr, align 4
  %v1_100045cc = call i32 @function_100082e0(i32 16)
  store i32 ptrtoint ([3 x i8]* @global_var_100045d8.29 to i32), i32* @lr, align 4
  %v1_100045d4 = call i32 @function_100082e0(i32 17)
  store i32 268453344, i32* @lr, align 4
  %v1_100045dc = call i32 @function_100082e0(i32 19)
  %v3_100045e8 = call i32 @function_1000822c(i32 19, i32* null)
  store i32 268453368, i32* @lr, align 4
  %v2_100045f4 = call i32 @function_10009270(i32 %v3_100045e8, i32 0)
  %v3_100045f8 = icmp eq i32 %v2_100045f4, -1
  store i32 %v2_100045f4, i32* @r28, align 4
  br i1 %v3_100045f8, label %dec_label_pc_10004a40, label %dec_label_pc_10004604

dec_label_pc_10004604:                            ; preds = %dec_label_pc_100045bc
  %v2_10004604 = ptrtoint i32* %stack_var_-8792 to i32
  store i32 %v2_10004604, i32* %r26.global-to-local, align 4
  store i32 268453400, i32* @lr, align 4
  %v4_1000461488 = call i32 @function_10008ba8(i8* nonnull %stack_var_-8760, i32 512, i32 %v2_100045f4)
  %v3_1000461890 = icmp eq i32 %v4_1000461488, 0
  br i1 %v3_1000461890, label %dec_label_pc_100047c0.loopexit, label %dec_label_pc_10004620

dec_label_pc_10004620:                            ; preds = %dec_label_pc_10004604, %dec_label_pc_10004608.backedge
  %v3_10004620 = load i8, i8* %stack_var_-8760, align 1
  %v3_10004624 = icmp eq i8 %v3_10004620, 0
  br i1 %v3_10004624, label %dec_label_pc_10004608.backedge, label %dec_label_pc_1000462c

dec_label_pc_10004608.backedge:                   ; preds = %dec_label_pc_10004640, %dec_label_pc_10004620, %dec_label_pc_100046b0, %dec_label_pc_10004748, %dec_label_pc_10004794
  %v0_10004610.pre = load i32, i32* @r28, align 4
  store i32 268453400, i32* @lr, align 4
  %v4_10004614 = call i32 @function_10008ba8(i8* nonnull %stack_var_-8760, i32 512, i32 %v0_10004610.pre)
  %v3_10004618 = icmp eq i32 %v4_10004614, 0
  br i1 %v3_10004618, label %dec_label_pc_100047c0.loopexit, label %dec_label_pc_10004620

dec_label_pc_1000462c:                            ; preds = %dec_label_pc_10004620
  %v3_1000462c = icmp eq i8 %v3_10004620, 58
  store i32 3, i32* @r31, align 4
  br i1 %v3_1000462c, label %dec_label_pc_10004660, label %dec_label_pc_1000463c

dec_label_pc_1000463c:                            ; preds = %dec_label_pc_1000462c
  %v1_10004644.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10004640

dec_label_pc_10004640:                            ; preds = %dec_label_pc_10004654, %dec_label_pc_1000463c
  %v0_10004640 = phi i32 [ %v1_10004640, %dec_label_pc_10004654 ], [ 0, %dec_label_pc_1000463c ]
  %v1_10004640 = add i32 %v0_10004640, 1
  %v2_10004644 = add i32 %v1_10004640, %v1_10004644.pre
  %v3_10004644 = inttoptr i32 %v2_10004644 to i8*
  %v4_10004644 = load i8, i8* %v3_10004644, align 1
  %v3_10004648 = icmp eq i8 %v4_10004644, 0
  br i1 %v3_10004648, label %dec_label_pc_10004608.backedge, label %dec_label_pc_10004654

dec_label_pc_10004654:                            ; preds = %dec_label_pc_10004640
  %v3_1000464c = icmp eq i8 %v4_10004644, 58
  br i1 %v3_1000464c, label %dec_label_pc_10004658, label %dec_label_pc_10004640

dec_label_pc_10004658:                            ; preds = %dec_label_pc_10004654
  %v1_10004658 = add i32 %v0_10004640, 4
  store i32 %v1_10004658, i32* @r31, align 4
  %v1_1000465c = add i32 %v0_10004640, 3
  br label %dec_label_pc_10004660

dec_label_pc_10004660:                            ; preds = %dec_label_pc_1000462c, %dec_label_pc_10004658
  %v1_100046b8 = phi i32 [ 2, %dec_label_pc_1000462c ], [ %v1_1000465c, %dec_label_pc_10004658 ]
  %v0_10004660 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004660 = add i32 %v0_10004660, %v1_100046b8
  %v1_10004668 = add i32 %v2_10004660, 32
  %v2_10004668 = inttoptr i32 %v1_10004668 to i8*
  %v3_10004668 = load i8, i8* %v2_10004668, align 1
  %v3_1000466c = icmp eq i8 %v3_10004668, 0
  br i1 %v3_1000466c, label %dec_label_pc_100046b0, label %dec_label_pc_10004674

dec_label_pc_10004674:                            ; preds = %dec_label_pc_10004660
  %v3_10004674 = icmp eq i8 %v3_10004668, 32
  %v1_10004678 = add i32 %v1_100046b8, 1
  store i32 %v1_10004678, i32* @r31, align 4
  br i1 %v3_10004674, label %dec_label_pc_100046b0, label %dec_label_pc_10004680

dec_label_pc_10004680:                            ; preds = %dec_label_pc_10004674
  %v0_10004688 = load i32, i32* @r30, align 4
  %v2_10004688 = add i32 %v0_10004688, %v1_10004678
  br label %dec_label_pc_10004694

dec_label_pc_10004694:                            ; preds = %dec_label_pc_10004694, %dec_label_pc_10004680
  %v0_10004698 = phi i32 [ %v1_10004698, %dec_label_pc_10004694 ], [ %v1_100046b8, %dec_label_pc_10004680 ]
  %v0_1000469c = phi i32 [ %v1_1000469c, %dec_label_pc_10004694 ], [ %v2_10004688, %dec_label_pc_10004680 ]
  %v1_10004694 = inttoptr i32 %v0_1000469c to i8*
  %v2_10004694 = load i8, i8* %v1_10004694, align 1
  %v1_10004698 = add i32 %v0_10004698, 1
  %v1_1000469c = add i32 %v0_1000469c, 1
  %tmp60 = or i8 %v2_10004694, 32
  %tmp61 = icmp eq i8 %tmp60, 32
  br i1 %tmp61, label %dec_label_pc_100046ac, label %dec_label_pc_10004694

dec_label_pc_100046ac:                            ; preds = %dec_label_pc_10004694
  %v1_100046ac = add i32 %v0_10004698, 2
  store i32 %v1_100046ac, i32* @r31, align 4
  br label %dec_label_pc_100046b0

dec_label_pc_100046b0:                            ; preds = %dec_label_pc_10004674, %dec_label_pc_10004660, %dec_label_pc_100046ac
  %v1_100046b0 = phi i32 [ %v1_100046b8, %dec_label_pc_10004674 ], [ %v1_100046b8, %dec_label_pc_10004660 ], [ %v1_10004698, %dec_label_pc_100046ac ]
  %v2_100046b0 = add i32 %v1_100046b0, %v0_10004660
  %v0_100046b8 = load i32, i32* @r30, align 4
  %v2_100046b8 = add i32 %v0_100046b8, %v1_100046b8
  store i32 %v2_100046b8, i32* @r29, align 4
  %v3_100046bc = add i32 %v2_100046b0, 32
  %v4_100046bc = inttoptr i32 %v3_100046bc to i8*
  store i8 0, i8* %v4_100046bc, align 1
  %v0_100046c0 = load i32, i32* @r29, align 4
  store i32 268453576, i32* @lr, align 4
  %v1_100046c4 = inttoptr i32 %v0_100046c0 to i8*
  %v2_100046c4 = call i32 @function_10008948(i8* %v1_100046c4)
  %v0_100046d0 = load i32, i32* @r29, align 4
  %v3_100046d4 = inttoptr i32 %v0_100046d0 to i8*
  %v4_100046d4 = call i32 @function_10008cf8(i8* %v3_100046d4, i32 %v2_100046c4, i32 %v2_10004548)
  %v3_100046dc = icmp eq i32 %v4_100046d4, -1
  br i1 %v3_100046dc, label %dec_label_pc_10004608.backedge, label %dec_label_pc_100046e8.preheader

dec_label_pc_100046e8.preheader:                  ; preds = %dec_label_pc_100046b0
  %v0_100046e8.pre = load i32, i32* @r31, align 4
  %v0_100046f0.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100046e8.outer

dec_label_pc_100046e8.outer:                      ; preds = %dec_label_pc_10004a90, %dec_label_pc_100046e8.preheader
  %v0_1000470428.ph = phi i32 [ %v1_10004a78, %dec_label_pc_10004a90 ], [ 0, %dec_label_pc_100046e8.preheader ]
  %v0_100046e8.ph = phi i32 [ %v1_1000479c76, %dec_label_pc_10004a90 ], [ %v0_100046e8.pre, %dec_label_pc_100046e8.preheader ]
  %v0_10004748.ph = phi i32 [ 1, %dec_label_pc_10004a90 ], [ 0, %dec_label_pc_100046e8.preheader ]
  br label %dec_label_pc_100046e8

dec_label_pc_100046e8:                            ; preds = %dec_label_pc_100046e8.outer, %dec_label_pc_10004a80
  %v0_1000470428 = phi i32 [ %v1_10004a78, %dec_label_pc_10004a80 ], [ %v0_1000470428.ph, %dec_label_pc_100046e8.outer ]
  %v0_100046e8 = phi i32 [ %v1_1000479c76, %dec_label_pc_10004a80 ], [ %v0_100046e8.ph, %dec_label_pc_100046e8.outer ]
  %v1_100046e8 = add i32 %v0_100046e8, 1
  %v2_100046f0 = add i32 %v1_100046e8, %v0_100046f0.pre
  %v1_1000471c68 = inttoptr i32 %v2_100046f0 to i8*
  %v2_1000471c69 = load i8, i8* %v1_1000471c68, align 1
  store i32 %v1_100046e8, i32* @r31, align 4
  %v3_1000472471 = icmp eq i8 %v2_1000471c69, 0
  br i1 %v3_1000472471, label %dec_label_pc_10004748, label %dec_label_pc_10004734

dec_label_pc_100046f8:                            ; preds = %dec_label_pc_10004734
  %v3_1000472879 = icmp eq i8 %v3_1000472879.in, 9
  br i1 %v3_1000472879, label %dec_label_pc_10004738, label %dec_label_pc_10004704

dec_label_pc_10004704:                            ; preds = %dec_label_pc_100046f8
  %v3_100046f8 = icmp eq i32 %v0_100046f875, 1
  br i1 %v3_100046f8, label %dec_label_pc_10004a78, label %dec_label_pc_1000470c

dec_label_pc_1000470c:                            ; preds = %dec_label_pc_10004704, %dec_label_pc_10004a78
  %v0_1000470c = phi i32 [ %v1_10004a78, %dec_label_pc_10004a78 ], [ %v0_1000473874, %dec_label_pc_10004704 ]
  %v2_1000470c = icmp sgt i32 %v0_1000470c, 6
  br i1 %v2_1000470c, label %dec_label_pc_10004748, label %dec_label_pc_10004718

dec_label_pc_10004718:                            ; preds = %dec_label_pc_10004738, %dec_label_pc_1000470c
  %v0_1000470427 = phi i32 [ %v0_1000473874, %dec_label_pc_10004738 ], [ %v0_1000470c, %dec_label_pc_1000470c ]
  %v0_100046f825 = phi i32 [ 1, %dec_label_pc_10004738 ], [ 0, %dec_label_pc_1000470c ]
  %v0_1000471c22 = add i32 %v0_1000474078, 1
  %v1_10004718 = add i32 %v1_1000479c76, 1
  %v1_1000471c = inttoptr i32 %v0_1000471c22 to i8*
  %v2_1000471c = load i8, i8* %v1_1000471c, align 1
  store i32 %v1_10004718, i32* @r31, align 4
  %v3_10004724 = icmp eq i8 %v2_1000471c, 0
  br i1 %v3_10004724, label %dec_label_pc_10004748, label %dec_label_pc_10004734

dec_label_pc_10004734:                            ; preds = %dec_label_pc_100046e8, %dec_label_pc_10004718
  %v3_1000472879.in = phi i8 [ %v2_1000471c, %dec_label_pc_10004718 ], [ %v2_1000471c69, %dec_label_pc_100046e8 ]
  %v3_1000472c80.in = phi i8 [ %v2_1000471c, %dec_label_pc_10004718 ], [ %v2_1000471c69, %dec_label_pc_100046e8 ]
  %v0_1000474078 = phi i32 [ %v0_1000471c22, %dec_label_pc_10004718 ], [ %v2_100046f0, %dec_label_pc_100046e8 ]
  %v1_1000479c76 = phi i32 [ %v1_10004718, %dec_label_pc_10004718 ], [ %v1_100046e8, %dec_label_pc_100046e8 ]
  %v0_100046f875 = phi i32 [ %v0_100046f825, %dec_label_pc_10004718 ], [ 0, %dec_label_pc_100046e8 ]
  %v0_1000473874 = phi i32 [ %v0_1000470427, %dec_label_pc_10004718 ], [ %v0_1000470428, %dec_label_pc_100046e8 ]
  %v3_1000472c80 = icmp eq i8 %v3_1000472c80.in, 32
  br i1 %v3_1000472c80, label %dec_label_pc_10004738, label %dec_label_pc_100046f8

dec_label_pc_10004738:                            ; preds = %dec_label_pc_10004734, %dec_label_pc_100046f8
  %tmp62 = icmp slt i32 %v0_1000473874, 7
  br i1 %tmp62, label %dec_label_pc_10004718, label %dec_label_pc_10004748

dec_label_pc_10004748:                            ; preds = %dec_label_pc_10004718, %dec_label_pc_1000470c, %dec_label_pc_10004738, %dec_label_pc_100046e8
  %v1_1000479c.lcssa = phi i32 [ %v1_100046e8, %dec_label_pc_100046e8 ], [ %v1_1000479c76, %dec_label_pc_10004738 ], [ %v1_1000479c76, %dec_label_pc_1000470c ], [ %v1_10004718, %dec_label_pc_10004718 ]
  %v3_10004748 = icmp eq i32 %v0_10004748.ph, 0
  br i1 %v3_10004748, label %dec_label_pc_10004608.backedge, label %dec_label_pc_10004754

dec_label_pc_10004754:                            ; preds = %dec_label_pc_10004748
  %v0_10004754 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004754 = add i32 %v0_10004754, %v1_1000479c.lcssa
  %v1_10004758 = add i32 %v2_10004754, 32
  %v2_10004758 = inttoptr i32 %v1_10004758 to i8*
  %v3_10004758 = load i8, i8* %v2_10004758, align 1
  %v3_1000475c = icmp eq i8 %v3_10004758, 0
  br i1 %v3_1000475c, label %dec_label_pc_10004794, label %dec_label_pc_10004764

dec_label_pc_10004764:                            ; preds = %dec_label_pc_10004754
  %v3_10004764 = icmp eq i8 %v3_10004758, 32
  br i1 %v3_10004764, label %dec_label_pc_10004794, label %dec_label_pc_1000476c

dec_label_pc_1000476c:                            ; preds = %dec_label_pc_10004764
  %v1_1000476c = add i32 %v1_1000479c.lcssa, 1
  %v2_10004770 = add i32 %v1_1000476c, %v0_100046f0.pre
  br label %dec_label_pc_1000477c

dec_label_pc_1000477c:                            ; preds = %dec_label_pc_1000477c, %dec_label_pc_1000476c
  %v0_10004780 = phi i32 [ %v1_10004780, %dec_label_pc_1000477c ], [ %v1_1000479c.lcssa, %dec_label_pc_1000476c ]
  %v0_10004784 = phi i32 [ %v1_10004784, %dec_label_pc_1000477c ], [ %v2_10004770, %dec_label_pc_1000476c ]
  %v1_1000477c = inttoptr i32 %v0_10004784 to i8*
  %v2_1000477c = load i8, i8* %v1_1000477c, align 1
  %v1_10004780 = add i32 %v0_10004780, 1
  %v1_10004784 = add i32 %v0_10004784, 1
  %tmp63 = or i8 %v2_1000477c, 32
  %tmp64 = icmp eq i8 %tmp63, 32
  br i1 %tmp64, label %dec_label_pc_10004794, label %dec_label_pc_1000477c

dec_label_pc_10004794:                            ; preds = %dec_label_pc_1000477c, %dec_label_pc_10004764, %dec_label_pc_10004754
  %v1_10004794 = phi i32 [ %v1_1000479c.lcssa, %dec_label_pc_10004764 ], [ %v1_1000479c.lcssa, %dec_label_pc_10004754 ], [ %v1_10004780, %dec_label_pc_1000477c ]
  %v2_10004794 = add i32 %v1_10004794, %v0_10004754
  %v2_1000479c = add i32 %v1_1000479c.lcssa, %v0_100046f0.pre
  store i32 %v2_1000479c, i32* @r31, align 4
  %v3_100047a0 = add i32 %v2_10004794, 32
  %v4_100047a0 = inttoptr i32 %v3_100047a0 to i8*
  store i8 0, i8* %v4_100047a0, align 1
  %v0_100047a4 = load i32, i32* @r31, align 4
  store i32 268453804, i32* @lr, align 4
  %v1_100047a8 = inttoptr i32 %v0_100047a4 to i8*
  %v2_100047a8 = call i32 @function_10008948(i8* %v1_100047a8)
  %v2_100047ac = icmp sgt i32 %v2_100047a8, 15
  br i1 %v2_100047ac, label %dec_label_pc_10004608.backedge, label %dec_label_pc_100047b4

dec_label_pc_100047b4:                            ; preds = %dec_label_pc_10004794
  %v0_100047b4 = load i32, i32* @r31, align 4
  store i32 %v2_10004604, i32* @r3, align 4
  %v2_100047bc = bitcast i32* %stack_var_-8792 to i8*
  %v3_100047bc = call i32 @function_10008970(i8* %v2_100047bc, i32 %v0_100047b4)
  br label %dec_label_pc_100047c0

dec_label_pc_100047c0.loopexit:                   ; preds = %dec_label_pc_10004608.backedge, %dec_label_pc_10004604
  %.pre = bitcast i32* %stack_var_-8792 to i8*
  br label %dec_label_pc_100047c0

dec_label_pc_100047c0:                            ; preds = %dec_label_pc_100047c0.loopexit, %dec_label_pc_100047b4
  %v1_100047cc.pre-phi = phi i8* [ %.pre, %dec_label_pc_100047c0.loopexit ], [ %v2_100047bc, %dec_label_pc_100047b4 ]
  store i32 268453832, i32* @lr, align 4
  %v0_100047c4 = call i32 @function_10009108()
  store i32 268453840, i32* @lr, align 4
  %v2_100047cc = call i32 @function_10008948(i8* %v1_100047cc.pre-phi)
  %v3_100047d0 = icmp eq i32 %v2_100047cc, 0
  br i1 %v3_100047d0, label %dec_label_pc_10004a98, label %dec_label_pc_100047d8

dec_label_pc_100047d8:                            ; preds = %dec_label_pc_100047c0
  %v3_100047e0 = call i32 @function_1000822c(i32 15, i32* null)
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 268453868, i32* @lr, align 4
  %v1_100047e8 = call i32 @function_10009654(i32 %v3_100047e0)
  store i32 %v1_100047e8, i32* @r23, align 4
  %v3_100047ec = icmp eq i32 %v1_100047e8, 0
  br i1 %v3_100047ec, label %dec_label_pc_10004a20, label %dec_label_pc_100047f4

dec_label_pc_100047f4:                            ; preds = %dec_label_pc_100047d8
  store i32 0, i32* @r28, align 4
  store i32 268453888, i32* @lr, align 4
  %v1_100047fc7 = inttoptr i32 %v1_100047e8 to i32*
  %v2_100047fc8 = call i32 @function_10009764(i32* %v1_100047fc7)
  %v3_1000480011 = icmp eq i32 %v2_100047fc8, 0
  br i1 %v3_1000480011, label %dec_label_pc_10004a14, label %dec_label_pc_10004808.preheader.lr.ph

dec_label_pc_10004808.preheader.lr.ph:            ; preds = %dec_label_pc_100047f4
  %v2_1000483c = bitcast i32* %stack_var_-8247 to i8*
  %v1_100049ac = bitcast i32* %stack_var_-4151 to i8*
  br label %dec_label_pc_10004808.preheader

dec_label_pc_100047f8.loopexit:                   ; preds = %dec_label_pc_10004810, %dec_label_pc_10004828, %dec_label_pc_10004890
  %v0_100047f8 = load i32, i32* @r23, align 4
  store i32 268453888, i32* @lr, align 4
  %v1_100047fc = inttoptr i32 %v0_100047f8 to i32*
  %v2_100047fc = call i32 @function_10009764(i32* %v1_100047fc)
  %v3_10004800 = icmp eq i32 %v2_100047fc, 0
  br i1 %v3_10004800, label %dec_label_pc_10004a14, label %dec_label_pc_10004808.preheader

dec_label_pc_10004808.preheader:                  ; preds = %dec_label_pc_10004808.preheader.lr.ph, %dec_label_pc_100047f8.loopexit
  %v0_1000481035 = phi i32 [ %v2_100047fc8, %dec_label_pc_10004808.preheader.lr.ph ], [ %v2_100047fc, %dec_label_pc_100047f8.loopexit ]
  br label %dec_label_pc_10004808

dec_label_pc_10004808:                            ; preds = %dec_label_pc_10004808.preheader, %dec_label_pc_100049fc
  %v0_10004810 = phi i32 [ %v0_1000481035, %dec_label_pc_10004808.preheader ], [ %v2_10004a08, %dec_label_pc_100049fc ]
  %v0_10004808 = load i32, i32* @r28, align 4
  %v3_10004808 = icmp eq i32 %v0_10004808, 0
  br i1 %v3_10004808, label %dec_label_pc_10004810, label %dec_label_pc_10004a14

dec_label_pc_10004810:                            ; preds = %dec_label_pc_10004808
  %v1_10004810 = add i32 %v0_10004810, 11
  %v2_10004810 = inttoptr i32 %v1_10004810 to i8*
  %v3_10004810 = load i8, i8* %v2_10004810, align 1
  %v4_10004810 = zext i8 %v3_10004810 to i32
  store i32 %v1_10004810, i32* @r30, align 4
  %v1_10004818 = add nuw nsw i32 %v4_10004810, 208
  %v1_1000481c = urem i32 %v1_10004818, 256
  %v2_10004820 = icmp ugt i32 %v1_1000481c, 9
  br i1 %v2_10004820, label %dec_label_pc_100047f8.loopexit, label %dec_label_pc_10004828

dec_label_pc_10004828:                            ; preds = %dec_label_pc_10004810
  %v3_10004830 = call i32 @function_1000822c(i32 15, i32* null)
  store i32 %v2_10004528, i32* @r3, align 4
  %v3_1000483c = call i32 @function_10008970(i8* %v2_1000483c, i32 %v3_10004830)
  store i32 268453960, i32* @lr, align 4
  %v2_10004844 = call i32 @function_10008948(i8* %v2_1000483c)
  %v0_10004848 = load i32, i32* @r30, align 4
  %v0_1000484c = load i32, i32* @r27, align 4
  %v2_1000484c = add i32 %v0_1000484c, %v2_10004844
  store i32 %v2_1000484c, i32* @r3, align 4
  %v2_10004850 = inttoptr i32 %v2_1000484c to i8*
  %v3_10004850 = call i32 @function_10008970(i8* %v2_10004850, i32 %v0_10004848)
  store i32 268453980, i32* @lr, align 4
  %v2_10004858 = call i32 @function_10008948(i8* %v2_1000483c)
  %v3_10004868 = call i32 @function_1000822c(i32 16, i32* null)
  %v0_10004870 = load i32, i32* @r27, align 4
  %v2_10004870 = add i32 %v2_10004858, %v0_10004870
  store i32 %v2_10004870, i32* @r3, align 4
  %v2_10004874 = inttoptr i32 %v2_10004870 to i8*
  %v3_10004874 = call i32 @function_10008970(i8* %v2_10004874, i32 %v3_10004868)
  store i32 4096, i32* @r5, align 4
  store i32 268454024, i32* @lr, align 4
  %v3_10004884 = call i32 @function_10009388(i32 %v2_10004528, i32 %v2_10004530, i32 4096)
  %v3_10004888 = icmp eq i32 %v3_10004884, -1
  br i1 %v3_10004888, label %dec_label_pc_100047f8.loopexit, label %dec_label_pc_10004890

dec_label_pc_10004890:                            ; preds = %dec_label_pc_10004828
  %v3_10004898 = call i32 @function_1000822c(i32 15, i32* null)
  store i32 %v2_10004528, i32* @r3, align 4
  %v3_100048a4 = call i32 @function_10008970(i8* %v2_1000483c, i32 %v3_10004898)
  store i32 268454064, i32* @lr, align 4
  %v2_100048ac = call i32 @function_10008948(i8* %v2_1000483c)
  %v0_100048b0 = load i32, i32* @r30, align 4
  %v0_100048b4 = load i32, i32* @r27, align 4
  %v2_100048b4 = add i32 %v0_100048b4, %v2_100048ac
  store i32 %v2_100048b4, i32* @r3, align 4
  %v2_100048b8 = inttoptr i32 %v2_100048b4 to i8*
  %v3_100048b8 = call i32 @function_10008970(i8* %v2_100048b8, i32 %v0_100048b0)
  store i32 268454084, i32* @lr, align 4
  %v2_100048c0 = call i32 @function_10008948(i8* %v2_1000483c)
  %v3_100048d0 = call i32 @function_1000822c(i32 17, i32* null)
  %v0_100048d8 = load i32, i32* @r27, align 4
  %v2_100048d8 = add i32 %v2_100048c0, %v0_100048d8
  store i32 %v2_100048d8, i32* @r3, align 4
  %v2_100048dc = inttoptr i32 %v2_100048d8 to i8*
  %v3_100048dc = call i32 @function_10008970(i8* %v2_100048dc, i32 %v3_100048d0)
  store i32 268454120, i32* @lr, align 4
  %v1_100048e4 = call i32 @function_10009654(i32 %v2_10004528)
  store i32 %v1_100048e4, i32* @r25, align 4
  %v3_100048e8 = icmp eq i32 %v1_100048e4, 0
  br i1 %v3_100048e8, label %dec_label_pc_100047f8.loopexit, label %dec_label_pc_100048f0

dec_label_pc_100048f0.loopexit:                   ; preds = %dec_label_pc_10004910, %dec_label_pc_100049ac
  %v0_100048f0.pre = load i32, i32* @r25, align 4
  br label %dec_label_pc_100048f0

dec_label_pc_100048f0:                            ; preds = %dec_label_pc_10004890, %dec_label_pc_100048f0.loopexit
  %v0_100048f0 = phi i32 [ %v0_100048f0.pre, %dec_label_pc_100048f0.loopexit ], [ %v1_100048e4, %dec_label_pc_10004890 ]
  store i32 268454136, i32* @lr, align 4
  %v1_100048f4 = inttoptr i32 %v0_100048f0 to i32*
  %v2_100048f4 = call i32 @function_10009764(i32* %v1_100048f4)
  store i32 4096, i32* @r4, align 4
  store i32 %v2_100048f4, i32* @r31, align 4
  %v3_100048fc = icmp eq i32 %v2_100048f4, 0
  %v0_10004900 = load i32, i32* @r28, align 4
  store i32 %v2_10004530, i32* @r3, align 4
  %v3_10004900.not = icmp ne i32 %v0_10004900, 0
  %brmerge = or i1 %v3_100048fc, %v3_10004900.not
  br i1 %brmerge, label %dec_label_pc_100049fc, label %dec_label_pc_10004910

dec_label_pc_10004910:                            ; preds = %dec_label_pc_100048f0
  store i32 268454164, i32* @lr, align 4
  %v0_10004910 = call i32 @function_100089f0()
  %v3_1000491c = call i32 @function_1000822c(i32 15, i32* null)
  store i32 %v2_10004528, i32* @r3, align 4
  %v3_10004928 = call i32 @function_10008970(i8* %v2_1000483c, i32 %v3_1000491c)
  store i32 268454196, i32* @lr, align 4
  %v2_10004930 = call i32 @function_10008948(i8* %v2_1000483c)
  %v0_10004934 = load i32, i32* @r30, align 4
  %v0_10004938 = load i32, i32* @r27, align 4
  %v2_10004938 = add i32 %v0_10004938, %v2_10004930
  store i32 %v2_10004938, i32* @r3, align 4
  %v2_1000493c = inttoptr i32 %v2_10004938 to i8*
  %v3_1000493c = call i32 @function_10008970(i8* %v2_1000493c, i32 %v0_10004934)
  store i32 268454216, i32* @lr, align 4
  %v2_10004944 = call i32 @function_10008948(i8* %v2_1000483c)
  %v3_10004954 = call i32 @function_1000822c(i32 17, i32* null)
  %v0_1000495c = load i32, i32* @r27, align 4
  %v2_1000495c = add i32 %v2_10004944, %v0_1000495c
  store i32 %v2_1000495c, i32* @r3, align 4
  %v2_10004960 = inttoptr i32 %v2_1000495c to i8*
  %v3_10004960 = call i32 @function_10008970(i8* %v2_10004960, i32 %v3_10004954)
  store i32 268454252, i32* @lr, align 4
  %v2_10004968 = call i32 @function_10008948(i8* %v2_1000483c)
  %v0_10004974 = load i32, i32* @r27, align 4
  %v2_10004974 = add i32 %v0_10004974, %v2_10004968
  store i32 %v2_10004974, i32* @r3, align 4
  %v2_10004978 = inttoptr i32 %v2_10004974 to i8*
  %v3_10004978 = call i32 @function_10008970(i8* %v2_10004978, i32 ptrtoint (i32* @global_var_1000bb38.31 to i32))
  store i32 268454276, i32* @lr, align 4
  %v2_10004980 = call i32 @function_10008948(i8* %v2_1000483c)
  %v0_10004984 = load i32, i32* @r31, align 4
  %v1_10004984 = add i32 %v0_10004984, 11
  %v0_10004988 = load i32, i32* @r27, align 4
  %v2_10004988 = add i32 %v0_10004988, %v2_10004980
  store i32 %v2_10004988, i32* @r3, align 4
  %v2_1000498c = inttoptr i32 %v2_10004988 to i8*
  %v3_1000498c = call i32 @function_10008970(i8* %v2_1000498c, i32 %v1_10004984)
  store i32 268454304, i32* @lr, align 4
  %v3_1000499c = call i32 @function_10009388(i32 %v2_10004528, i32 %v2_10004530, i32 4096)
  %v3_100049a0 = icmp eq i32 %v3_1000499c, -1
  br i1 %v3_100049a0, label %dec_label_pc_100048f0.loopexit, label %dec_label_pc_100049ac

dec_label_pc_100049ac:                            ; preds = %dec_label_pc_10004910
  store i32 268454320, i32* @lr, align 4
  %v2_100049ac = call i32 @function_10008948(i8* %v1_100049ac)
  %v4_100049bc = call i32 @function_10008cf8(i8* %v1_100049ac, i32 %v2_100049ac, i32 %v2_10004604)
  %v3_100049c4 = icmp eq i32 %v4_100049bc, -1
  %v0_100049c8 = load i32, i32* @r30, align 4
  store i32 %v0_100049c8, i32* @r3, align 4
  br i1 %v3_100049c4, label %dec_label_pc_100048f0.loopexit, label %dec_label_pc_100049d0

dec_label_pc_100049d0:                            ; preds = %dec_label_pc_100049ac
  store i32 268454356, i32* @lr, align 4
  %v2_100049d0 = call i32 @function_10008a70(i32 %v0_100049c8, i32 10)
  store i32 268454364, i32* @lr, align 4
  %v2_100049d8 = call i32 @function_10009228(i32 %v2_100049d0, i32 9)
  %v0_100049dc = load i32, i32* @r25, align 4
  store i32 268454372, i32* @lr, align 4
  %v1_100049e0 = inttoptr i32 %v0_100049dc to i32*
  %v2_100049e0 = call i32 @function_10009764(i32* %v1_100049e0)
  store i32 1, i32* @r28, align 4
  store i32 %v2_100049e0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100049fc

dec_label_pc_100049fc:                            ; preds = %dec_label_pc_100048f0, %dec_label_pc_100049d0
  %v0_100049fc = load i32, i32* @r25, align 4
  store i32 268454404, i32* @lr, align 4
  %v1_10004a00 = inttoptr i32 %v0_100049fc to i32*
  %v2_10004a00 = call i32 @function_100095b0(i32* %v1_10004a00)
  %v0_10004a04 = load i32, i32* @r23, align 4
  store i32 268454412, i32* @lr, align 4
  %v1_10004a08 = inttoptr i32 %v0_10004a04 to i32*
  %v2_10004a08 = call i32 @function_10009764(i32* %v1_10004a08)
  %v3_10004a0c = icmp eq i32 %v2_10004a08, 0
  br i1 %v3_10004a0c, label %dec_label_pc_10004a14, label %dec_label_pc_10004808

dec_label_pc_10004a14:                            ; preds = %dec_label_pc_100047f8.loopexit, %dec_label_pc_100049fc, %dec_label_pc_10004808, %dec_label_pc_100047f4
  %v0_10004a14 = load i32, i32* @r23, align 4
  %v0_10004a18 = load i32, i32* @r28, align 4
  %v1_10004a18 = urem i32 %v0_10004a18, 256
  store i32 %v1_10004a18, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004a20.32 to i32), i32* @lr, align 4
  %v1_10004a1c = inttoptr i32 %v0_10004a14 to i32*
  %v2_10004a1c = call i32 @function_100095b0(i32* %v1_10004a1c)
  br label %dec_label_pc_10004a20

dec_label_pc_10004a20:                            ; preds = %dec_label_pc_100047d8, %dec_label_pc_10004a14
  store i32 ptrtoint ([3 x i8]* @global_var_10004a28.33 to i32), i32* @lr, align 4
  %v1_10004a24 = call i32 @function_1000a950(i32 1)
  store i32 ptrtoint ([3 x i8]* @global_var_10004a30.34 to i32), i32* @lr, align 4
  %v1_10004a2c = call i32 @function_10008254(i32 15)
  store i32 ptrtoint ([3 x i8]* @global_var_10004a38.35 to i32), i32* @lr, align 4
  %v1_10004a34 = call i32 @function_10008254(i32 16)
  store i32 268454464, i32* @lr, align 4
  %v1_10004a3c = call i32 @function_10008254(i32 17)
  br label %dec_label_pc_10004a40

dec_label_pc_10004a40:                            ; preds = %dec_label_pc_100045bc, %dec_label_pc_10004a20
  %v0_10004a44 = load i32, i32* @r31, align 4
  store i32 %v0_1000455c, i32* @r23, align 4
  store i32 %v0_10004544, i32* @r25, align 4
  store i32 %v0_10004524, i32* @r27, align 4
  store i32 %v0_10004564, i32* @r28, align 4
  store i32 %v0_10004534, i32* @r29, align 4
  store i32 %v0_1000454c, i32* @r30, align 4
  store i32 %v0_10004554, i32* @r31, align 4
  ret i32 %v0_10004a44

dec_label_pc_10004a78:                            ; preds = %dec_label_pc_10004704
  %v3_10004704 = icmp eq i32 %v0_1000473874, 0
  %v1_10004a78 = add i32 %v0_1000473874, 1
  br i1 %v3_10004704, label %dec_label_pc_10004a80, label %dec_label_pc_1000470c

dec_label_pc_10004a80:                            ; preds = %dec_label_pc_10004a78
  %v0_10004a80 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004a80 = add i32 %v0_10004a80, %v1_1000479c76
  %v1_10004a84 = add i32 %v2_10004a80, 33
  %v2_10004a84 = inttoptr i32 %v1_10004a84 to i8*
  %v3_10004a84 = load i8, i8* %v2_10004a84, align 1
  %v3_10004a88 = icmp eq i8 %v3_10004a84, 65
  br i1 %v3_10004a88, label %dec_label_pc_10004a90, label %dec_label_pc_100046e8

dec_label_pc_10004a90:                            ; preds = %dec_label_pc_10004a80
  br label %dec_label_pc_100046e8.outer

dec_label_pc_10004a98:                            ; preds = %dec_label_pc_100047c0
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004aa4.36 to i32), i32* @lr, align 4
  %v1_10004aa0 = call i32 @function_10008254(i32 15)
  store i32 ptrtoint ([3 x i8]* @global_var_10004aac.37 to i32), i32* @lr, align 4
  %v1_10004aa8 = call i32 @function_10008254(i32 16)
  store i32 ptrtoint ([3 x i8]* @global_var_10004ab4.38 to i32), i32* @lr, align 4
  %v1_10004ab0 = call i32 @function_10008254(i32 17)
  store i32 268454588, i32* @lr, align 4
  %v1_10004ab8 = call i32 @function_10008254(i32 19)
  %v0_10004ac0 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_1000455c, i32* @r23, align 4
  store i32 %v0_10004544, i32* @r25, align 4
  store i32 %v0_10004524, i32* @r27, align 4
  store i32 %v0_10004564, i32* @r28, align 4
  store i32 %v0_10004534, i32* @r29, align 4
  store i32 %v0_1000454c, i32* @r30, align 4
  store i32 %v0_10004554, i32* @r31, align 4
  ret i32 %v0_10004ac0

dec_label_pc_10004af4:                            ; preds = %dec_label_pc_10004514
  store i8 48, i8* %stack_var_-8776, align 1
  br label %dec_label_pc_100045bc

; uselistorder directives
  uselistorder i32 %v2_10004a08, { 1, 0 }
  uselistorder i32 %v1_1000479c.lcssa, { 5, 3, 2, 1, 0, 4 }
  uselistorder i32 %v0_1000473874, { 2, 0, 4, 1, 3 }
  uselistorder i32 %v1_1000479c76, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_1000471c22, { 1, 0 }
  uselistorder i32 %v1_100046b8, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v2_10004604, { 1, 0, 2 }
  uselistorder i32 %v2_10004548, { 1, 0 }
  uselistorder i32 %v2_10004528, { 1, 2, 3, 4, 5, 6, 0, 7 }
  uselistorder i8* %stack_var_-8776, { 2, 0, 1 }
  uselistorder i8* %stack_var_-8760, { 1, 3, 0, 2 }
  uselistorder i32* %stack_var_-8792, { 0, 1, 3, 2 }
  uselistorder i32 (i32, i32)* @function_10008a70, { 1, 0 }
  uselistorder i32 268453888, { 1, 0 }
  uselistorder i8 58, { 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @function_10008ba8, { 1, 0 }
  uselistorder i32 268453400, { 1, 0 }
  uselistorder label %dec_label_pc_10004a40, { 1, 0 }
  uselistorder label %dec_label_pc_10004a20, { 1, 0 }
  uselistorder label %dec_label_pc_10004a14, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_100049fc, { 1, 0 }
  uselistorder label %dec_label_pc_100048f0, { 1, 0 }
  uselistorder label %dec_label_pc_100048f0.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_10004808, { 1, 0 }
  uselistorder label %dec_label_pc_10004808.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100047f8.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10004748, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10004734, { 1, 0 }
  uselistorder label %dec_label_pc_1000470c, { 1, 0 }
  uselistorder label %dec_label_pc_100046e8, { 1, 0 }
  uselistorder label %dec_label_pc_100046b0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004660, { 1, 0 }
  uselistorder label %dec_label_pc_10004608.backedge, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10004620, { 1, 0 }
  uselistorder label %dec_label_pc_100045bc, { 1, 0 }
}

define i32 @function_10004b18(i32 %arg1) local_unnamed_addr {
dec_label_pc_10004b18:
  %r11.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %stack_var_-8436 = alloca i32, align 4
  %stack_var_-8440 = alloca i32, align 4
  %stack_var_-8456 = alloca i32, align 4
  %stack_var_-8444 = alloca i32, align 4
  %stack_var_-8448 = alloca i32, align 4
  %stack_var_-8452 = alloca i32, align 4
  %stack_var_-4176 = alloca i32, align 4
  %stack_var_-8400 = alloca i32, align 4
  %stack_var_-8336 = alloca i32, align 4
  %stack_var_-8416 = alloca i32, align 4
  %stack_var_-8272 = alloca i32, align 4
  %stack_var_-8432 = alloca i32, align 4
  %v0_10004b24 = load i32, i32* @r28, align 4
  %v0_10004b44 = load i32, i32* @r22, align 4
  %v0_10004b58 = load i32, i32* @r27, align 4
  %v0_10004b5c = load i32, i32* @r29, align 4
  %v0_10004b60 = load i32, i32* @r30, align 4
  %v0_10004b64 = load i32, i32* @r31, align 4
  store i32 268454764, i32* @lr, align 4
  %v0_10004b68 = call i32 @function_100094d8()
  store i32 %v0_10004b68, i32* @r28, align 4
  store i32 268454772, i32* @lr, align 4
  %v0_10004b70 = call i32 @function_10009150()
  store i32 %v0_10004b70, i32* @global_var_1001c2a4.26, align 4
  %tmp95 = icmp slt i32 %v0_10004b70, 1
  br i1 %tmp95, label %dec_label_pc_10004bd4, label %dec_label_pc_10004b84

dec_label_pc_10004b84:                            ; preds = %dec_label_pc_10004e74, %dec_label_pc_10004d6c, %dec_label_pc_10004bd4, %dec_label_pc_10004b18
  %v0_10004bd0 = phi i32 [ -1, %dec_label_pc_10004d6c ], [ -1, %dec_label_pc_10004bd4 ], [ %v0_10004b70, %dec_label_pc_10004b18 ], [ 0, %dec_label_pc_10004e74 ]
  store i32 %v0_10004b44, i32* @r22, align 4
  store i32 %v0_10004b58, i32* @r27, align 4
  store i32 %v0_10004b24, i32* @r28, align 4
  store i32 %v0_10004b5c, i32* @r29, align 4
  store i32 %v0_10004b60, i32* @r30, align 4
  store i32 %v0_10004b64, i32* @r31, align 4
  ret i32 %v0_10004bd0

dec_label_pc_10004bd4:                            ; preds = %dec_label_pc_10004b18
  %v3_10004bd4 = icmp eq i32 %v0_10004b70, -1
  br i1 %v3_10004bd4, label %dec_label_pc_10004b84, label %dec_label_pc_10004bdc

dec_label_pc_10004bdc:                            ; preds = %dec_label_pc_10004bd4
  store i32 0, i32* @r27, align 4
  store i32 2, i32* %stack_var_-8432, align 4
  store i32 ptrtoint (i32* @global_var_10004bf8.39 to i32), i32* @lr, align 4
  %v1_10004bf4 = call i32 @function_10004514(i32 48101)
  store i32 268454928, i32* @lr, align 4
  %v3_10004c0c = call i32 @function_10009e58(i32 2, i32 1, i32 0)
  %v3_10004c10 = icmp eq i32 %v3_10004c0c, -1
  store i32 %v3_10004c0c, i32* @r31, align 4
  br i1 %v3_10004c10, label %dec_label_pc_10004c34, label %dec_label_pc_10004c1c

dec_label_pc_10004c1c:                            ; preds = %dec_label_pc_10004bdc
  %v2_10004c1c = ptrtoint i32* %stack_var_-8432 to i32
  store i32 268454952, i32* @lr, align 4
  %v3_10004c24 = call i32 @function_10009c24(i32 %v2_10004c1c, i32 16, i32 16)
  %v0_10004c28 = load i32, i32* @r31, align 4
  store i32 268454964, i32* @lr, align 4
  %v2_10004c30 = call i32 @function_10009cfc(i32 %v0_10004c28, i32 1)
  br label %dec_label_pc_10004c34

dec_label_pc_10004c34:                            ; preds = %dec_label_pc_10004bdc, %dec_label_pc_10004c1c
  store i32 ptrtoint (i32* @global_var_10004c3c.40 to i32), i32* @lr, align 4
  %v1_10004c38 = call i32 @function_10004514(i32 1991)
  store i32 268454996, i32* @lr, align 4
  %v3_10004c50 = call i32 @function_10009e58(i32 2, i32 1, i32 0)
  %v3_10004c54 = icmp eq i32 %v3_10004c50, -1
  store i32 %v3_10004c50, i32* @r31, align 4
  br i1 %v3_10004c54, label %dec_label_pc_10004c78, label %dec_label_pc_10004c60

dec_label_pc_10004c60:                            ; preds = %dec_label_pc_10004c34
  %v2_10004c60 = ptrtoint i32* %stack_var_-8432 to i32
  store i32 268455020, i32* @lr, align 4
  %v3_10004c68 = call i32 @function_10009c24(i32 %v2_10004c60, i32 16, i32 16)
  %v0_10004c6c = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004c78.41 to i32), i32* @lr, align 4
  %v2_10004c74 = call i32 @function_10009cfc(i32 %v0_10004c6c, i32 1)
  br label %dec_label_pc_10004c78

dec_label_pc_10004c78:                            ; preds = %dec_label_pc_10004c34, %dec_label_pc_10004c60
  store i32 268455048, i32* @lr, align 4
  %v3_10004c84 = call i32 @function_10009e58(i32 2, i32 1, i32 0)
  %v3_10004c88 = icmp eq i32 %v3_10004c84, -1
  store i32 %v3_10004c84, i32* @r31, align 4
  br i1 %v3_10004c88, label %dec_label_pc_10004cac, label %dec_label_pc_10004c94

dec_label_pc_10004c94:                            ; preds = %dec_label_pc_10004c78
  %v2_10004c94 = ptrtoint i32* %stack_var_-8432 to i32
  store i32 268455072, i32* @lr, align 4
  %v3_10004c9c = call i32 @function_10009c24(i32 %v2_10004c94, i32 16, i32 16)
  %v0_10004ca0 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004cac.42 to i32), i32* @lr, align 4
  %v2_10004ca8 = call i32 @function_10009cfc(i32 %v0_10004ca0, i32 1)
  br label %dec_label_pc_10004cac

dec_label_pc_10004cac:                            ; preds = %dec_label_pc_10004c78, %dec_label_pc_10004c94
  store i32 ptrtoint (i32* @global_var_10004cb4.43 to i32), i32* @lr, align 4
  %v1_10004cb0 = call i32 @function_10004514(i32 22)
  store i32 268455116, i32* @lr, align 4
  %v3_10004cc8 = call i32 @function_10009e58(i32 2, i32 1, i32 0)
  %v3_10004ccc = icmp eq i32 %v3_10004cc8, -1
  store i32 %v3_10004cc8, i32* @r31, align 4
  br i1 %v3_10004ccc, label %dec_label_pc_10004cf0, label %dec_label_pc_10004cd8

dec_label_pc_10004cd8:                            ; preds = %dec_label_pc_10004cac
  %v2_10004cd8 = ptrtoint i32* %stack_var_-8432 to i32
  store i32 268455140, i32* @lr, align 4
  %v3_10004ce0 = call i32 @function_10009c24(i32 %v2_10004cd8, i32 16, i32 16)
  %v0_10004ce4 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004cf0.44 to i32), i32* @lr, align 4
  %v2_10004cec = call i32 @function_10009cfc(i32 %v0_10004ce4, i32 1)
  br label %dec_label_pc_10004cf0

dec_label_pc_10004cf0:                            ; preds = %dec_label_pc_10004cac, %dec_label_pc_10004cd8
  store i32 1337, i32* @r30, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004cfc.45 to i32), i32* @lr, align 4
  %v1_10004cf8 = call i32 @function_10004514(i32 23)
  store i32 268455184, i32* @lr, align 4
  %v3_10004d0c = call i32 @function_10009e58(i32 2, i32 1, i32 0)
  %v3_10004d10 = icmp eq i32 %v3_10004d0c, -1
  store i32 %v3_10004d0c, i32* @r31, align 4
  br i1 %v3_10004d10, label %dec_label_pc_10004d34, label %dec_label_pc_10004d1c

dec_label_pc_10004d1c:                            ; preds = %dec_label_pc_10004cf0
  %v2_10004d1c = ptrtoint i32* %stack_var_-8432 to i32
  store i32 268455208, i32* @lr, align 4
  %v3_10004d24 = call i32 @function_10009c24(i32 %v2_10004d1c, i32 16, i32 16)
  %v0_10004d28 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004d34.46 to i32), i32* @lr, align 4
  %v2_10004d30 = call i32 @function_10009cfc(i32 %v0_10004d28, i32 1)
  br label %dec_label_pc_10004d34

dec_label_pc_10004d34:                            ; preds = %dec_label_pc_10004cf0, %dec_label_pc_10004d1c
  store i32 268455240, i32* @lr, align 4
  %v3_10004d44 = call i32 @function_10009e58(i32 2, i32 1, i32 0)
  %v3_10004d48 = icmp eq i32 %v3_10004d44, -1
  store i32 %v3_10004d44, i32* @r31, align 4
  br i1 %v3_10004d48, label %dec_label_pc_10004d6c, label %dec_label_pc_10004d54

dec_label_pc_10004d54:                            ; preds = %dec_label_pc_10004d34
  %v2_10004d54 = ptrtoint i32* %stack_var_-8432 to i32
  store i32 268455264, i32* @lr, align 4
  %v3_10004d5c = call i32 @function_10009c24(i32 %v2_10004d54, i32 16, i32 16)
  %v0_10004d60 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004d6c.47 to i32), i32* @lr, align 4
  %v2_10004d68 = call i32 @function_10009cfc(i32 %v0_10004d60, i32 1)
  br label %dec_label_pc_10004d6c

dec_label_pc_10004d6c:                            ; preds = %dec_label_pc_10004d34, %dec_label_pc_10004d54
  store i32 268455288, i32* @lr, align 4
  %v1_10004d74 = call i32 @function_1000a950(i32 5)
  store i32 4096, i32* @r3, align 4
  store i32 268455296, i32* @lr, align 4
  %v0_10004d7c = call i32 @function_1000a05c()
  store i32 %v0_10004d7c, i32* %r11.global-to-local, align 4
  %v0_10004d8c = load i32, i32* @r27, align 4
  %v1_10004d8c = trunc i32 %v0_10004d8c to i8
  %v3_10004d8c = inttoptr i32 %v0_10004d7c to i8*
  store i8 %v1_10004d8c, i8* %v3_10004d8c, align 1
  %v2_10004d90 = ptrtoint i32* %stack_var_-8272 to i32
  store i32 %v2_10004d90, i32* %r21.global-to-local, align 4
  %v0_10004d94 = load i32, i32* @r27, align 4
  store i32 %v0_10004d94, i32* @global_var_1001c29c.48, align 4
  %v0_10004d98 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10004d98, i32* @global_var_1001c2a0.49, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004da0.50 to i32), i32* @lr, align 4
  %v1_10004d9c = call i32 @function_100082e0(i32 15)
  store i32 268455336, i32* @lr, align 4
  %v1_10004da4 = call i32 @function_100082e0(i32 16)
  %v3_10004db0 = call i32 @function_1000822c(i32 15, i32* null)
  store i32 %v2_10004d90, i32* @r3, align 4
  %v2_10004dbc = bitcast i32* %stack_var_-8272 to i8*
  %v3_10004dbc = call i32 @function_10008970(i8* %v2_10004dbc, i32 %v3_10004db0)
  %v0_10004dc0 = load i32, i32* %r21.global-to-local, align 4
  %v2_10004dc0 = add i32 %v0_10004dc0, %v3_10004dbc
  store i32 %v2_10004dc0, i32* %r29.global-to-local, align 4
  store i32 268455368, i32* @lr, align 4
  %v0_10004dc4 = call i32 @function_10009198()
  %v2_10004dc8 = ptrtoint i32* %stack_var_-8416 to i32
  %v3_10004dd0 = trunc i32 %v0_10004dc4 to i8
  %v4_10004dd0 = call i32 @function_10008e24(i8 %v3_10004dd0, i32 10, i32 %v2_10004dc8)
  store i32 %v2_10004dc0, i32* @r3, align 4
  %v2_10004ddc = inttoptr i32 %v2_10004dc0 to i8*
  %v3_10004ddc = call i32 @function_10008970(i8* %v2_10004ddc, i32 %v4_10004dd0)
  %v0_10004de4 = load i32, i32* %r29.global-to-local, align 4
  %v2_10004de4 = add i32 %v0_10004de4, %v3_10004ddc
  store i32 %v2_10004de4, i32* %r29.global-to-local, align 4
  %v3_10004dec = call i32 @function_1000822c(i32 16, i32* null)
  store i32 %v2_10004de4, i32* @r3, align 4
  %v2_10004df8 = inttoptr i32 %v2_10004de4 to i8*
  %v3_10004df8 = call i32 @function_10008970(i8* %v2_10004df8, i32 %v3_10004dec)
  store i32 %v3_10004df8, i32* @r31, align 4
  store i32 268455440, i32* @lr, align 4
  %v2_10004e0c = call i32 @function_10009270(i32 %v2_10004d90, i32 0)
  %v3_10004e10 = icmp eq i32 %v2_10004e0c, -1
  br i1 %v3_10004e10, label %dec_label_pc_10004b84, label %dec_label_pc_10004e18

dec_label_pc_10004e18:                            ; preds = %dec_label_pc_10004d6c
  store i32 ptrtoint ([3 x i8]* @global_var_10004e1c.51 to i32), i32* @lr, align 4
  %v0_10004e18 = call i32 @function_10009108()
  store i32 ptrtoint ([3 x i8]* @global_var_10004e24.52 to i32), i32* @lr, align 4
  %v1_10004e20 = call i32 @function_10008254(i32 15)
  store i32 268455468, i32* @lr, align 4
  %v1_10004e28 = call i32 @function_10008254(i32 16)
  %v3_10004e2c = load i32, i32* @global_var_1001c2a0.49, align 4
  store i32 268455484, i32* @lr, align 4
  %v3_10004e38 = call i32 @function_10009388(i32 %v2_10004d90, i32 %v3_10004e2c, i32 4095)
  %v3_10004e3c = icmp eq i32 %v3_10004e38, -1
  br i1 %v3_10004e3c, label %dec_label_pc_10004e4c, label %dec_label_pc_10004e44

dec_label_pc_10004e44:                            ; preds = %dec_label_pc_10004e18
  %v3_10004e44 = load i32, i32* @global_var_1001c2a0.49, align 4
  %v0_10004e48 = load i32, i32* @r27, align 4
  %v3_10004e48 = trunc i32 %v0_10004e48 to i8
  %v4_10004e48 = add i32 %v3_10004e44, %v3_10004e38
  %v5_10004e48 = inttoptr i32 %v4_10004e48 to i8*
  store i8 %v3_10004e48, i8* %v5_10004e48, align 1
  br label %dec_label_pc_10004e4c

dec_label_pc_10004e4c:                            ; preds = %dec_label_pc_10004e18, %dec_label_pc_10004e44
  %v0_10004e4c = load i32, i32* %r29.global-to-local, align 4
  %v1_10004e4c = load i32, i32* @r31, align 4
  %v2_10004e4c = add i32 %v1_10004e4c, %v0_10004e4c
  store i32 %v2_10004d90, i32* @r3, align 4
  %v0_10004e54 = load i32, i32* %r21.global-to-local, align 4
  %v2_10004e54 = sub i32 %v2_10004e4c, %v0_10004e54
  store i32 %v2_10004e54, i32* @r4, align 4
  %v0_10004e58 = load i32, i32* @r28, align 4
  store i32 %v0_10004e58, i32* %r29.global-to-local, align 4
  store i32 268455520, i32* @lr, align 4
  %v0_10004e5c = call i32 @function_100089f0()
  store i32 400, i32* %r28.global-to-local, align 4
  store i32 0, i32* @r22, align 4
  %v2_10004e68 = ptrtoint i32* %stack_var_-8336 to i32
  store i32 %v2_10004e68, i32* %r20.global-to-local, align 4
  %v2_10004e6c = ptrtoint i32* %stack_var_-8400 to i32
  store i32 %v2_10004e6c, i32* %r19.global-to-local, align 4
  %v2_10004e70 = ptrtoint i32* %stack_var_-4176 to i32
  %v2_10004f40 = bitcast i32* %stack_var_-8336 to i8*
  %v2_10004f84 = bitcast i32* %stack_var_-8400 to i8*
  br label %dec_label_pc_10004e74

dec_label_pc_10004e74:                            ; preds = %dec_label_pc_10004f04, %dec_label_pc_10004e4c
  store i32 268455548, i32* @lr, align 4
  %v1_10004e78 = call i32 @function_100082e0(i32 15)
  %v3_10004e84 = call i32 @function_1000822c(i32 15, i32* null)
  store i32 268455564, i32* @lr, align 4
  %v1_10004e88 = call i32 @function_10009654(i32 %v3_10004e84)
  store i32 %v1_10004e88, i32* @r27, align 4
  %v3_10004e8c = icmp eq i32 %v1_10004e88, 0
  br i1 %v3_10004e8c, label %dec_label_pc_10004b84, label %dec_label_pc_10004e94

dec_label_pc_10004e94:                            ; preds = %dec_label_pc_10004e74
  store i32 268455580, i32* @lr, align 4
  %v1_10004e98 = call i32 @function_10008254(i32 15)
  %v0_10004e9c15 = load i32, i32* @r27, align 4
  store i32 268455588, i32* @lr, align 4
  %v1_10004ea016 = inttoptr i32 %v0_10004e9c15 to i32*
  %v2_10004ea017 = call i32 @function_10009764(i32* %v1_10004ea016)
  %v3_10004ea420 = icmp eq i32 %v2_10004ea017, 0
  br i1 %v3_10004ea420, label %dec_label_pc_10004f04, label %dec_label_pc_10004eac.preheader

dec_label_pc_10004eac.preheader:                  ; preds = %dec_label_pc_10004e94, %dec_label_pc_10004e9c.backedge
  %v0_10004eac23 = phi i32 [ %v2_10004ea0, %dec_label_pc_10004e9c.backedge ], [ %v2_10004ea017, %dec_label_pc_10004e94 ]
  br label %dec_label_pc_10004eac

dec_label_pc_10004eac:                            ; preds = %dec_label_pc_10004eac.preheader, %dec_label_pc_10004ef0
  %v0_10004ec0 = phi i32 [ %v0_10004eac23, %dec_label_pc_10004eac.preheader ], [ %v2_10004ef8, %dec_label_pc_10004ef0 ]
  %v1_10004eac = add i32 %v0_10004ec0, 11
  %v2_10004eac = inttoptr i32 %v1_10004eac to i8*
  %v3_10004eac = load i8, i8* %v2_10004eac, align 1
  %v4_10004eac = zext i8 %v3_10004eac to i32
  %v1_10004eb0 = add nuw nsw i32 %v4_10004eac, 208
  %v1_10004eb4 = urem i32 %v1_10004eb0, 256
  %v2_10004eb8 = icmp ugt i32 %v1_10004eb4, 9
  br i1 %v2_10004eb8, label %dec_label_pc_10004e9c.backedge, label %dec_label_pc_10004ec0

dec_label_pc_10004ec0:                            ; preds = %dec_label_pc_10004eac
  %v0_10004ec4 = load i32, i32* @r22, align 4
  %v1_10004ec4 = add i32 %v0_10004ec4, 1
  store i32 %v1_10004ec4, i32* @r22, align 4
  store i32 268455632, i32* @lr, align 4
  %v3_10004ecc = call i32 @function_1000a704(i8* %v2_10004eac, i32 %v1_10004eb4)
  %v0_10004ed0 = load i32, i32* @r28, align 4
  %v2_10004ed0 = icmp slt i32 %v0_10004ed0, %v3_10004ecc
  store i32 %v3_10004ecc, i32* %r30.global-to-local, align 4
  br i1 %v2_10004ed0, label %dec_label_pc_10004f10, label %dec_label_pc_10004edc

dec_label_pc_10004edc:                            ; preds = %dec_label_pc_10004ec0
  store i32 268455652, i32* @lr, align 4
  %v0_10004ee0 = call i32 @function_100094d8()
  %v0_10004ee4 = load i32, i32* @r29, align 4
  %v2_10004ee4 = sub i32 %v0_10004ee0, %v0_10004ee4
  %tmp96 = icmp slt i32 %v2_10004ee4, 601
  br i1 %tmp96, label %dec_label_pc_1000506c, label %dec_label_pc_10004ef0

dec_label_pc_10004ef0:                            ; preds = %dec_label_pc_10004edc
  %v0_10004ef0 = load i32, i32* @r27, align 4
  store i32 400, i32* %r28.global-to-local, align 4
  store i32 268455676, i32* @lr, align 4
  %v1_10004ef8 = inttoptr i32 %v0_10004ef0 to i32*
  %v2_10004ef8 = call i32 @function_10009764(i32* %v1_10004ef8)
  %v3_10004efc = icmp eq i32 %v2_10004ef8, 0
  br i1 %v3_10004efc, label %dec_label_pc_10004f04, label %dec_label_pc_10004eac

dec_label_pc_10004f04:                            ; preds = %dec_label_pc_10004e9c.backedge, %dec_label_pc_10004ef0, %dec_label_pc_10004e94
  %v0_10004f04 = load i32, i32* @r27, align 4
  store i32 268455692, i32* @lr, align 4
  %v1_10004f08 = inttoptr i32 %v0_10004f04 to i32*
  %v2_10004f08 = call i32 @function_100095b0(i32* %v1_10004f08)
  br label %dec_label_pc_10004e74

dec_label_pc_10004f10:                            ; preds = %dec_label_pc_10004ec0
  store i32 268455704, i32* @lr, align 4
  %v0_10004f14 = call i32 @function_100094d8()
  store i32 %v0_10004f14, i32* %r18.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004f24.54 to i32), i32* @lr, align 4
  %v1_10004f20 = call i32 @function_100082e0(i32 15)
  store i32 268455724, i32* @lr, align 4
  %v1_10004f28 = call i32 @function_100082e0(i32 16)
  %v3_10004f34 = call i32 @function_1000822c(i32 15, i32* null)
  store i32 %v2_10004e68, i32* @r3, align 4
  %v3_10004f40 = call i32 @function_10008970(i8* %v2_10004f40, i32 %v3_10004f34)
  %v0_10004f44 = load i32, i32* @r31, align 4
  %v0_10004f48 = load i32, i32* %r20.global-to-local, align 4
  %v2_10004f48 = add i32 %v0_10004f48, %v3_10004f40
  store i32 %v2_10004f48, i32* %r28.global-to-local, align 4
  store i32 %v2_10004f48, i32* @r3, align 4
  %v2_10004f50 = inttoptr i32 %v2_10004f48 to i8*
  %v3_10004f50 = call i32 @function_10008970(i8* %v2_10004f50, i32 %v0_10004f44)
  store i32 %v3_10004f50, i32* %r29.global-to-local, align 4
  %v3_10004f60 = call i32 @function_1000822c(i32 16, i32* null)
  %v2_10004f68 = add i32 %v3_10004f50, %v2_10004f48
  store i32 %v2_10004f68, i32* @r3, align 4
  %v2_10004f6c = inttoptr i32 %v2_10004f68 to i8*
  %v3_10004f6c = call i32 @function_10008970(i8* %v2_10004f6c, i32 %v3_10004f60)
  %v3_10004f78 = call i32 @function_1000822c(i32 15, i32* null)
  store i32 %v2_10004e6c, i32* @r3, align 4
  %v3_10004f84 = call i32 @function_10008970(i8* %v2_10004f84, i32 %v3_10004f78)
  %v0_10004f88 = load i32, i32* @r31, align 4
  %v0_10004f8c = load i32, i32* %r19.global-to-local, align 4
  %v2_10004f8c = add i32 %v0_10004f8c, %v3_10004f84
  store i32 %v2_10004f8c, i32* %r28.global-to-local, align 4
  store i32 %v2_10004f8c, i32* @r3, align 4
  %v2_10004f94 = inttoptr i32 %v2_10004f8c to i8*
  %v3_10004f94 = call i32 @function_10008970(i8* %v2_10004f94, i32 %v0_10004f88)
  store i32 %v3_10004f94, i32* %r29.global-to-local, align 4
  %v3_10004fa4 = call i32 @function_1000822c(i32 34, i32* null)
  %v2_10004fac = add i32 %v3_10004f94, %v2_10004f8c
  store i32 %v2_10004fac, i32* @r3, align 4
  %v2_10004fb0 = inttoptr i32 %v2_10004fac to i8*
  %v3_10004fb0 = call i32 @function_10008970(i8* %v2_10004fb0, i32 %v3_10004fa4)
  store i32 ptrtoint ([3 x i8]* @global_var_10004fbc.56 to i32), i32* @lr, align 4
  %v1_10004fb8 = call i32 @function_10008254(i32 15)
  store i32 268455876, i32* @lr, align 4
  %v1_10004fc0 = call i32 @function_10008254(i32 16)
  store i32 4095, i32* @r5, align 4
  store i32 268455892, i32* @lr, align 4
  %v3_10004fd0 = call i32 @function_10009388(i32 %v2_10004e68, i32 %v2_10004d90, i32 4095)
  %v3_10004fd4 = icmp eq i32 %v3_10004fd0, -1
  store i32 %v3_10004fd0, i32* %r29.global-to-local, align 4
  br i1 %v3_10004fd4, label %dec_label_pc_100050c0, label %dec_label_pc_10004fe0

dec_label_pc_10004fe0:                            ; preds = %dec_label_pc_10004f10
  %v0_10004fe0 = load i32, i32* @r1, align 4
  %v2_10004fe0 = add i32 %v0_10004fe0, %v3_10004fd0
  %v3_10004fe8 = add i32 %v2_10004fe0, 192
  %v4_10004fe8 = inttoptr i32 %v3_10004fe8 to i8*
  store i8 0, i8* %v4_10004fe8, align 1
  store i32 268455924, i32* @lr, align 4
  %v1_10004ff0 = call i32 @function_100082e0(i32 35)
  %v3_10004ffc = call i32 @function_1000822c(i32 35, i32* null)
  %v0_10005000 = load i32, i32* %r29.global-to-local, align 4
  %v1_10005000 = add i32 %v0_10005000, -1
  %v4_1000500c = call i32 @function_10008cf8(i8* %v2_10004dbc, i32 %v1_10005000, i32 %v3_10004ffc)
  %v3_10005010 = icmp eq i32 %v4_1000500c, -1
  br i1 %v3_10005010, label %dec_label_pc_1000502c, label %dec_label_pc_10005018

dec_label_pc_10005018:                            ; preds = %dec_label_pc_10004fe0
  store i32 268455968, i32* @lr, align 4
  %v1_1000501c = call i32 @function_10009520(i32 %v2_10004d90)
  %v0_10005020 = load i32, i32* %r30.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000502c.57 to i32), i32* @lr, align 4
  %v2_10005028 = call i32 @function_10009228(i32 %v0_10005020, i32 9)
  br label %dec_label_pc_1000502c

dec_label_pc_1000502c:                            ; preds = %dec_label_pc_10004fe0, %dec_label_pc_10005018
  store i32 ptrtoint (i32* @global_var_10005034.58 to i32), i32* @lr, align 4
  %v1_10005030 = call i32 @function_10008254(i32 35)
  store i32 268455992, i32* @lr, align 4
  %v0_10005034 = call i32 @function_10009198()
  %v0_10005038 = load i32, i32* %r30.global-to-local, align 4
  %v4_10005038 = icmp eq i32 %v0_10005038, %v0_10005034
  br i1 %v4_10005038, label %dec_label_pc_10005060, label %dec_label_pc_10005040

dec_label_pc_10005040:                            ; preds = %dec_label_pc_1000502c
  store i32 268456004, i32* @lr, align 4
  %v0_10005040 = call i32 @function_100091e0()
  %v0_10005044 = load i32, i32* %r30.global-to-local, align 4
  %v4_10005044 = icmp eq i32 %v0_10005044, %v0_10005040
  br i1 %v4_10005044, label %dec_label_pc_10005060, label %dec_label_pc_1000504c

dec_label_pc_1000504c:                            ; preds = %dec_label_pc_10005040
  %v3_1000504c = load i32, i32* @global_var_1001c2a0.49, align 4
  %v3_10005054 = call i32 @function_10008da4(i8* %v2_10004dbc, i32 %v3_1000504c)
  %v3_10005058 = icmp eq i32 %v3_10005054, 0
  br i1 %v3_10005058, label %dec_label_pc_1000509c, label %dec_label_pc_1000504c.dec_label_pc_10005060_crit_edge

dec_label_pc_1000504c.dec_label_pc_10005060_crit_edge: ; preds = %dec_label_pc_1000504c
  %v0_10005060.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10005060

dec_label_pc_10005060:                            ; preds = %dec_label_pc_1000504c.dec_label_pc_10005060_crit_edge, %dec_label_pc_10005040, %dec_label_pc_1000502c
  %v0_10005060 = phi i32 [ %v0_10005060.pre, %dec_label_pc_1000504c.dec_label_pc_10005060_crit_edge ], [ %v0_10005040, %dec_label_pc_10005040 ], [ %v0_10005034, %dec_label_pc_1000502c ]
  store i32 %v0_10005060, i32* %r28.global-to-local, align 4
  %v0_10005064 = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_10005064, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004e9c.backedge

dec_label_pc_10004e9c.backedge:                   ; preds = %dec_label_pc_10004eac, %dec_label_pc_10005060, %dec_label_pc_10005090, %dec_label_pc_10005364, %dec_label_pc_1000506c, %dec_label_pc_10005074
  %v0_10004e9c = load i32, i32* @r27, align 4
  store i32 268455588, i32* @lr, align 4
  %v1_10004ea0 = inttoptr i32 %v0_10004e9c to i32*
  %v2_10004ea0 = call i32 @function_10009764(i32* %v1_10004ea0)
  %v3_10004ea4 = icmp eq i32 %v2_10004ea0, 0
  br i1 %v3_10004ea4, label %dec_label_pc_10004f04, label %dec_label_pc_10004eac.preheader

dec_label_pc_1000506c:                            ; preds = %dec_label_pc_10004edc
  %v0_1000506c = load i32, i32* %r30.global-to-local, align 4
  %tmp97 = icmp slt i32 %v0_1000506c, 401
  br i1 %tmp97, label %dec_label_pc_10004e9c.backedge, label %dec_label_pc_10005074

dec_label_pc_10005074:                            ; preds = %dec_label_pc_1000506c
  %v0_1000507c = load i32, i32* @r22, align 4
  %v1_10005080 = urem i32 %v0_1000507c, 10
  %v4_10005088 = icmp eq i32 %v1_10005080, 0
  br i1 %v4_10005088, label %dec_label_pc_10005090, label %dec_label_pc_10004e9c.backedge

dec_label_pc_10005090:                            ; preds = %dec_label_pc_10005074
  store i32 268456088, i32* @lr, align 4
  %v1_10005094 = call i32 @function_1000a950(i32 1)
  br label %dec_label_pc_10004e9c.backedge

dec_label_pc_1000509c:                            ; preds = %dec_label_pc_1000504c
  store i32 268456108, i32* @lr, align 4
  %v2_100050a8 = call i32 @function_10009270(i32 %v2_10004d90, i32 0)
  %v3_100050ac = icmp eq i32 %v2_100050a8, -1
  store i32 %v2_100050a8, i32* @r31, align 4
  br i1 %v3_100050ac, label %dec_label_pc_100053cc, label %dec_label_pc_100050b8

dec_label_pc_100050b8:                            ; preds = %dec_label_pc_1000509c, %dec_label_pc_100053cc
  store i32 268456128, i32* @lr, align 4
  %v0_100050bc = call i32 @function_10009108()
  br label %dec_label_pc_100050c0

dec_label_pc_100050c0:                            ; preds = %dec_label_pc_10004f10, %dec_label_pc_100050b8
  store i32 268456144, i32* @lr, align 4
  %v2_100050cc = call i32 @function_10009270(i32 %v2_10004e68, i32 0)
  %v3_100050d0 = icmp eq i32 %v2_100050cc, -1
  store i32 %v2_100050cc, i32* %r24.global-to-local, align 4
  br i1 %v3_100050d0, label %dec_label_pc_10005364, label %dec_label_pc_100050dc

dec_label_pc_100050dc:                            ; preds = %dec_label_pc_100050c0
  store i32 ptrtoint ([3 x i8]* @global_var_100050e4.59 to i32), i32* @lr, align 4
  %v1_100050e0 = call i32 @function_100082e0(i32 20)
  store i32 ptrtoint ([3 x i8]* @global_var_100050ec.60 to i32), i32* @lr, align 4
  %v1_100050e8 = call i32 @function_100082e0(i32 21)
  store i32 ptrtoint ([3 x i8]* @global_var_100050f4.61 to i32), i32* @lr, align 4
  %v1_100050f0 = call i32 @function_100082e0(i32 22)
  store i32 ptrtoint ([3 x i8]* @global_var_100050fc.62 to i32), i32* @lr, align 4
  %v1_100050f8 = call i32 @function_100082e0(i32 23)
  store i32 ptrtoint ([3 x i8]* @global_var_10005104.63 to i32), i32* @lr, align 4
  %v1_10005100 = call i32 @function_100082e0(i32 24)
  store i32 268456204, i32* @lr, align 4
  %v1_10005108 = call i32 @function_100082e0(i32 36)
  %v3_10005114 = call i32 @function_1000822c(i32 20, i32* nonnull %stack_var_-8452)
  store i32 %v3_10005114, i32* @r31, align 4
  %v3_10005124 = call i32 @function_1000822c(i32 21, i32* nonnull %stack_var_-8448)
  store i32 %v3_10005124, i32* %r29.global-to-local, align 4
  %v3_10005134 = call i32 @function_1000822c(i32 22, i32* nonnull %stack_var_-8444)
  store i32 %v3_10005134, i32* %r28.global-to-local, align 4
  %v3_10005144 = call i32 @function_1000822c(i32 23, i32* nonnull %stack_var_-8456)
  store i32 %v3_10005144, i32* %r26.global-to-local, align 4
  %v3_10005154 = call i32 @function_1000822c(i32 24, i32* nonnull %stack_var_-8440)
  store i32 %v3_10005154, i32* %r25.global-to-local, align 4
  %v3_10005164 = call i32 @function_1000822c(i32 36, i32* nonnull %stack_var_-8436)
  store i32 %v3_10005164, i32* %r23.global-to-local, align 4
  %v0_1000516c105 = load i32, i32* %r24.global-to-local, align 4
  store i32 268456316, i32* @lr, align 4
  %v3_10005178106 = call i32 @function_10009340(i32 %v0_1000516c105, i32 %v2_10004e70, i32 4096)
  %tmp98108 = icmp slt i32 %v3_10005178106, 1
  br i1 %tmp98108, label %dec_label_pc_100053dc, label %dec_label_pc_10005184

dec_label_pc_10005184:                            ; preds = %dec_label_pc_100050dc, %dec_label_pc_1000516c.backedge
  %v3_10005178109 = phi i32 [ %v3_10005178, %dec_label_pc_1000516c.backedge ], [ %v3_10005178106, %dec_label_pc_100050dc ]
  %v3_1000517c110.in = phi i32 [ %v3_10005178, %dec_label_pc_1000516c.backedge ], [ %v3_10005178106, %dec_label_pc_100050dc ]
  %v3_1000517c110 = icmp eq i32 %v3_1000517c110.in, 0
  %v3_10005184 = load i32, i32* %stack_var_-8452, align 4
  %v2_10005188 = icmp slt i32 %v3_10005178109, %v3_10005184
  br i1 %v2_10005188, label %dec_label_pc_100051c8, label %dec_label_pc_10005190

dec_label_pc_10005190:                            ; preds = %dec_label_pc_10005184
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_100051a4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100051a4

dec_label_pc_100051a4:                            ; preds = %dec_label_pc_10005190, %dec_label_pc_100051c0
  %v0_100051c4 = phi i32 [ %v3_10005178109, %dec_label_pc_10005190 ], [ %v1_100051c4, %dec_label_pc_100051c0 ]
  %v0_100051c0 = phi i32 [ %v2_10004e70, %dec_label_pc_10005190 ], [ %v1_100051c0, %dec_label_pc_100051c0 ]
  %v1_100051a4 = phi i32 [ 0, %dec_label_pc_10005190 ], [ %v1_100051a427, %dec_label_pc_100051c0 ]
  %v2_100051a4 = add i32 %v1_100051a4, %v0_100051a4.pre
  %v3_100051a4 = inttoptr i32 %v2_100051a4 to i8*
  %v4_100051a4 = load i8, i8* %v3_100051a4, align 1
  %v1_100051a8 = add i32 %v1_100051a4, 1
  store i32 %v1_100051a8, i32* %r11.global-to-local, align 4
  %v1_100051ac = inttoptr i32 %v0_100051c0 to i8*
  %v2_100051ac = load i8, i8* %v1_100051ac, align 1
  %v4_100051b4 = icmp eq i8 %v2_100051ac, %v4_100051a4
  br i1 %v4_100051b4, label %dec_label_pc_1000531c, label %dec_label_pc_100051bc

dec_label_pc_100051bc:                            ; preds = %dec_label_pc_100051a4
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100051c0

dec_label_pc_100051c0:                            ; preds = %dec_label_pc_1000531c, %dec_label_pc_100051bc
  %v1_100051a427 = phi i32 [ %v1_100051a8, %dec_label_pc_1000531c ], [ 0, %dec_label_pc_100051bc ]
  %v1_100051c0 = add i32 %v0_100051c0, 1
  %v1_100051c4 = add i32 %v0_100051c4, -1
  %v2_100051c4 = icmp eq i32 %v1_100051c4, 0
  br i1 %v2_100051c4, label %dec_label_pc_100051c8, label %dec_label_pc_100051a4

dec_label_pc_100051c8:                            ; preds = %dec_label_pc_100051c0, %dec_label_pc_10005184
  %v3_100051c8 = load i32, i32* %stack_var_-8448, align 4
  %v2_100051cc = icmp slt i32 %v3_10005178109, %v3_100051c8
  br i1 %v2_100051cc, label %dec_label_pc_1000520c, label %dec_label_pc_100051d4

dec_label_pc_100051d4:                            ; preds = %dec_label_pc_100051c8
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_1000517c110, label %dec_label_pc_1000520c, label %dec_label_pc_100051e8.preheader

dec_label_pc_100051e8.preheader:                  ; preds = %dec_label_pc_100051d4
  %v0_100051e8.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100051e8

dec_label_pc_100051e8:                            ; preds = %dec_label_pc_100051e8.preheader, %dec_label_pc_10005208
  %v0_10005208 = phi i32 [ %v3_10005178109, %dec_label_pc_100051e8.preheader ], [ %v1_10005208, %dec_label_pc_10005208 ]
  %storemerge.in = phi i32 [ %v2_10004e70, %dec_label_pc_100051e8.preheader ], [ %storemerge, %dec_label_pc_10005208 ]
  %v1_100051e8 = phi i32 [ 0, %dec_label_pc_100051e8.preheader ], [ %v1_100051e833, %dec_label_pc_10005208 ]
  %v2_100051e8 = add i32 %v1_100051e8, %v0_100051e8.pre
  %v3_100051e8 = inttoptr i32 %v2_100051e8 to i8*
  %v4_100051e8 = load i8, i8* %v3_100051e8, align 1
  %v1_100051ec = add i32 %v1_100051e8, 1
  store i32 %v1_100051ec, i32* %r11.global-to-local, align 4
  %v1_100051f0 = inttoptr i32 %storemerge.in to i8*
  %v2_100051f0 = load i8, i8* %v1_100051f0, align 1
  %v4_100051f8 = icmp eq i8 %v2_100051f0, %v4_100051e8
  br i1 %v4_100051f8, label %dec_label_pc_10005390, label %dec_label_pc_10005200

dec_label_pc_10005200:                            ; preds = %dec_label_pc_100051e8
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10005208

dec_label_pc_10005208:                            ; preds = %dec_label_pc_10005390, %dec_label_pc_10005200
  %v1_100051e833 = phi i32 [ %v1_100051ec, %dec_label_pc_10005390 ], [ 0, %dec_label_pc_10005200 ]
  %storemerge = add i32 %storemerge.in, 1
  %v1_10005208 = add i32 %v0_10005208, -1
  %v2_10005208 = icmp eq i32 %v1_10005208, 0
  br i1 %v2_10005208, label %dec_label_pc_1000520c, label %dec_label_pc_100051e8

dec_label_pc_1000520c:                            ; preds = %dec_label_pc_10005208, %dec_label_pc_100051d4, %dec_label_pc_100051c8
  %v3_1000520c = load i32, i32* %stack_var_-8444, align 4
  %v2_10005210 = icmp slt i32 %v3_10005178109, %v3_1000520c
  br i1 %v2_10005210, label %dec_label_pc_10005250, label %dec_label_pc_10005218

dec_label_pc_10005218:                            ; preds = %dec_label_pc_1000520c
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_1000517c110, label %dec_label_pc_10005250, label %dec_label_pc_1000522c.preheader

dec_label_pc_1000522c.preheader:                  ; preds = %dec_label_pc_10005218
  %v0_1000522c.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000522c

dec_label_pc_1000522c:                            ; preds = %dec_label_pc_1000522c.preheader, %dec_label_pc_1000524c
  %v0_1000524c = phi i32 [ %v3_10005178109, %dec_label_pc_1000522c.preheader ], [ %v1_1000524c, %dec_label_pc_1000524c ]
  %storemerge3.in = phi i32 [ %v2_10004e70, %dec_label_pc_1000522c.preheader ], [ %storemerge3, %dec_label_pc_1000524c ]
  %v1_1000522c = phi i32 [ 0, %dec_label_pc_1000522c.preheader ], [ %v1_1000522c39, %dec_label_pc_1000524c ]
  %v2_1000522c = add i32 %v1_1000522c, %v0_1000522c.pre
  %v3_1000522c = inttoptr i32 %v2_1000522c to i8*
  %v4_1000522c = load i8, i8* %v3_1000522c, align 1
  %v1_10005230 = add i32 %v1_1000522c, 1
  store i32 %v1_10005230, i32* %r11.global-to-local, align 4
  %v1_10005234 = inttoptr i32 %storemerge3.in to i8*
  %v2_10005234 = load i8, i8* %v1_10005234, align 1
  %v4_1000523c = icmp eq i8 %v2_10005234, %v4_1000522c
  br i1 %v4_1000523c, label %dec_label_pc_1000539c, label %dec_label_pc_10005244

dec_label_pc_10005244:                            ; preds = %dec_label_pc_1000522c
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000524c

dec_label_pc_1000524c:                            ; preds = %dec_label_pc_1000539c, %dec_label_pc_10005244
  %v1_1000522c39 = phi i32 [ %v1_10005230, %dec_label_pc_1000539c ], [ 0, %dec_label_pc_10005244 ]
  %storemerge3 = add i32 %storemerge3.in, 1
  %v1_1000524c = add i32 %v0_1000524c, -1
  %v2_1000524c = icmp eq i32 %v1_1000524c, 0
  br i1 %v2_1000524c, label %dec_label_pc_10005250, label %dec_label_pc_1000522c

dec_label_pc_10005250:                            ; preds = %dec_label_pc_1000524c, %dec_label_pc_10005218, %dec_label_pc_1000520c
  %v3_10005250 = load i32, i32* %stack_var_-8456, align 4
  %v2_10005254 = icmp slt i32 %v3_10005178109, %v3_10005250
  br i1 %v2_10005254, label %dec_label_pc_10005294, label %dec_label_pc_1000525c

dec_label_pc_1000525c:                            ; preds = %dec_label_pc_10005250
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_1000517c110, label %dec_label_pc_10005294, label %dec_label_pc_10005270.preheader

dec_label_pc_10005270.preheader:                  ; preds = %dec_label_pc_1000525c
  %v0_10005270.pre = load i32, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10005270

dec_label_pc_10005270:                            ; preds = %dec_label_pc_10005270.preheader, %dec_label_pc_10005290
  %v0_10005290 = phi i32 [ %v3_10005178109, %dec_label_pc_10005270.preheader ], [ %v1_10005290, %dec_label_pc_10005290 ]
  %storemerge4.in = phi i32 [ %v2_10004e70, %dec_label_pc_10005270.preheader ], [ %storemerge4, %dec_label_pc_10005290 ]
  %v1_10005270 = phi i32 [ 0, %dec_label_pc_10005270.preheader ], [ %v1_1000527045, %dec_label_pc_10005290 ]
  %v2_10005270 = add i32 %v1_10005270, %v0_10005270.pre
  %v3_10005270 = inttoptr i32 %v2_10005270 to i8*
  %v4_10005270 = load i8, i8* %v3_10005270, align 1
  %v1_10005274 = add i32 %v1_10005270, 1
  store i32 %v1_10005274, i32* %r11.global-to-local, align 4
  %v1_10005278 = inttoptr i32 %storemerge4.in to i8*
  %v2_10005278 = load i8, i8* %v1_10005278, align 1
  %v4_10005280 = icmp eq i8 %v2_10005278, %v4_10005270
  br i1 %v4_10005280, label %dec_label_pc_100053a8, label %dec_label_pc_10005288

dec_label_pc_10005288:                            ; preds = %dec_label_pc_10005270
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10005290

dec_label_pc_10005290:                            ; preds = %dec_label_pc_100053a8, %dec_label_pc_10005288
  %v1_1000527045 = phi i32 [ %v1_10005274, %dec_label_pc_100053a8 ], [ 0, %dec_label_pc_10005288 ]
  %storemerge4 = add i32 %storemerge4.in, 1
  %v1_10005290 = add i32 %v0_10005290, -1
  %v2_10005290 = icmp eq i32 %v1_10005290, 0
  br i1 %v2_10005290, label %dec_label_pc_10005294, label %dec_label_pc_10005270

dec_label_pc_10005294:                            ; preds = %dec_label_pc_10005290, %dec_label_pc_1000525c, %dec_label_pc_10005250
  %v3_10005294 = load i32, i32* %stack_var_-8440, align 4
  %v2_10005298 = icmp slt i32 %v3_10005178109, %v3_10005294
  br i1 %v2_10005298, label %dec_label_pc_100052d8, label %dec_label_pc_100052a0

dec_label_pc_100052a0:                            ; preds = %dec_label_pc_10005294
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_1000517c110, label %dec_label_pc_100052d8, label %dec_label_pc_100052b4.preheader

dec_label_pc_100052b4.preheader:                  ; preds = %dec_label_pc_100052a0
  %v0_100052b4.pre = load i32, i32* %r25.global-to-local, align 4
  br label %dec_label_pc_100052b4

dec_label_pc_100052b4:                            ; preds = %dec_label_pc_100052b4.preheader, %dec_label_pc_100052d4
  %v0_100052d4 = phi i32 [ %v3_10005178109, %dec_label_pc_100052b4.preheader ], [ %v1_100052d4, %dec_label_pc_100052d4 ]
  %storemerge5.in = phi i32 [ %v2_10004e70, %dec_label_pc_100052b4.preheader ], [ %storemerge5, %dec_label_pc_100052d4 ]
  %v1_100052b4 = phi i32 [ 0, %dec_label_pc_100052b4.preheader ], [ %v1_100052b451, %dec_label_pc_100052d4 ]
  %v2_100052b4 = add i32 %v1_100052b4, %v0_100052b4.pre
  %v3_100052b4 = inttoptr i32 %v2_100052b4 to i8*
  %v4_100052b4 = load i8, i8* %v3_100052b4, align 1
  %v1_100052b8 = add i32 %v1_100052b4, 1
  store i32 %v1_100052b8, i32* %r11.global-to-local, align 4
  %v1_100052bc = inttoptr i32 %storemerge5.in to i8*
  %v2_100052bc = load i8, i8* %v1_100052bc, align 1
  %v4_100052c4 = icmp eq i8 %v2_100052bc, %v4_100052b4
  br i1 %v4_100052c4, label %dec_label_pc_100053b4, label %dec_label_pc_100052cc

dec_label_pc_100052cc:                            ; preds = %dec_label_pc_100052b4
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100052d4

dec_label_pc_100052d4:                            ; preds = %dec_label_pc_100053b4, %dec_label_pc_100052cc
  %v1_100052b451 = phi i32 [ %v1_100052b8, %dec_label_pc_100053b4 ], [ 0, %dec_label_pc_100052cc ]
  %storemerge5 = add i32 %storemerge5.in, 1
  %v1_100052d4 = add i32 %v0_100052d4, -1
  %v2_100052d4 = icmp eq i32 %v1_100052d4, 0
  br i1 %v2_100052d4, label %dec_label_pc_100052d8, label %dec_label_pc_100052b4

dec_label_pc_100052d8:                            ; preds = %dec_label_pc_100052d4, %dec_label_pc_100052a0, %dec_label_pc_10005294
  %v3_100052d8 = load i32, i32* %stack_var_-8436, align 4
  %v2_100052dc = icmp slt i32 %v3_10005178109, %v3_100052d8
  br i1 %v2_100052dc, label %dec_label_pc_1000516c.backedge, label %dec_label_pc_100052e4

dec_label_pc_100052e4:                            ; preds = %dec_label_pc_100052d8
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_1000517c110, label %dec_label_pc_1000516c.backedge, label %dec_label_pc_100052f8.lr.ph

dec_label_pc_1000516c.backedge:                   ; preds = %dec_label_pc_100052f4.backedge, %dec_label_pc_100052e4, %dec_label_pc_100052d8
  %v0_1000516c = load i32, i32* %r24.global-to-local, align 4
  store i32 268456316, i32* @lr, align 4
  %v3_10005178 = call i32 @function_10009340(i32 %v0_1000516c, i32 %v2_10004e70, i32 4096)
  %tmp98 = icmp slt i32 %v3_10005178, 1
  br i1 %tmp98, label %dec_label_pc_100053dc, label %dec_label_pc_10005184

dec_label_pc_100052f8.lr.ph:                      ; preds = %dec_label_pc_100052e4
  %v0_100052f8.pre = load i32, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_100052f8

dec_label_pc_100052f8:                            ; preds = %dec_label_pc_100052f8.lr.ph, %dec_label_pc_100052f4.backedge
  %v0_100052f4 = phi i32 [ %v3_10005178109, %dec_label_pc_100052f8.lr.ph ], [ %v1_100052f4, %dec_label_pc_100052f4.backedge ]
  %storemerge21.in = phi i32 [ %v2_10004e70, %dec_label_pc_100052f8.lr.ph ], [ %storemerge21, %dec_label_pc_100052f4.backedge ]
  %v1_100052f8 = phi i32 [ 0, %dec_label_pc_100052f8.lr.ph ], [ %v1_100052f857, %dec_label_pc_100052f4.backedge ]
  %v2_100052f8 = add i32 %v1_100052f8, %v0_100052f8.pre
  %v3_100052f8 = inttoptr i32 %v2_100052f8 to i8*
  %v4_100052f8 = load i8, i8* %v3_100052f8, align 1
  %v1_100052fc = add i32 %v1_100052f8, 1
  store i32 %v1_100052fc, i32* %r11.global-to-local, align 4
  %v1_10005300 = inttoptr i32 %storemerge21.in to i8*
  %v2_10005300 = load i8, i8* %v1_10005300, align 1
  %v4_10005308 = icmp eq i8 %v2_10005300, %v4_100052f8
  br i1 %v4_10005308, label %dec_label_pc_100053c0, label %dec_label_pc_10005310

dec_label_pc_10005310:                            ; preds = %dec_label_pc_100052f8
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100052f4.backedge

dec_label_pc_100052f4.backedge:                   ; preds = %dec_label_pc_100053c0, %dec_label_pc_10005310
  %v1_100052f857 = phi i32 [ 0, %dec_label_pc_10005310 ], [ %v1_100052fc, %dec_label_pc_100053c0 ]
  %storemerge21 = add i32 %storemerge21.in, 1
  %v1_100052f4 = add i32 %v0_100052f4, -1
  %v2_100052f4 = icmp eq i32 %v1_100052f4, 0
  br i1 %v2_100052f4, label %dec_label_pc_1000516c.backedge, label %dec_label_pc_100052f8

dec_label_pc_1000531c:                            ; preds = %dec_label_pc_100051a4
  %v4_100051b0 = icmp eq i32 %v3_10005184, %v1_100051a8
  br i1 %v4_100051b0, label %dec_label_pc_10005320, label %dec_label_pc_100051c0

dec_label_pc_10005320:                            ; preds = %dec_label_pc_1000531c, %dec_label_pc_10005390, %dec_label_pc_1000539c, %dec_label_pc_100053a8, %dec_label_pc_100053b4, %dec_label_pc_100053c0
  store i32 ptrtoint ([3 x i8]* @global_var_10005328.64 to i32), i32* @lr, align 4
  %v1_10005324 = call i32 @function_10008254(i32 20)
  store i32 ptrtoint ([3 x i8]* @global_var_10005330.65 to i32), i32* @lr, align 4
  %v1_1000532c = call i32 @function_10008254(i32 21)
  store i32 ptrtoint ([3 x i8]* @global_var_10005338.66 to i32), i32* @lr, align 4
  %v1_10005334 = call i32 @function_10008254(i32 22)
  store i32 ptrtoint ([3 x i8]* @global_var_10005340.67 to i32), i32* @lr, align 4
  %v1_1000533c = call i32 @function_10008254(i32 23)
  store i32 ptrtoint ([3 x i8]* @global_var_10005348.68 to i32), i32* @lr, align 4
  %v1_10005344 = call i32 @function_10008254(i32 24)
  store i32 268456784, i32* @lr, align 4
  %v1_1000534c = call i32 @function_10008254(i32 36)
  store i32 268456792, i32* @lr, align 4
  %v0_10005354 = call i32 @function_10009108()
  %v0_10005358 = load i32, i32* %r30.global-to-local, align 4
  store i32 268456804, i32* @lr, align 4
  %v2_10005360 = call i32 @function_10009228(i32 %v0_10005358, i32 9)
  br label %dec_label_pc_10005364

dec_label_pc_10005364:                            ; preds = %dec_label_pc_100050c0, %dec_label_pc_100053dc, %dec_label_pc_10005320
  store i32 64, i32* @r4, align 4
  store i32 %v2_10004e68, i32* @r3, align 4
  store i32 268456816, i32* @lr, align 4
  %v0_1000536c = call i32 @function_100089f0()
  store i32 %v2_10004e6c, i32* @r3, align 4
  store i32 64, i32* @r4, align 4
  %v0_10005378 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10005378, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005380.69 to i32), i32* @lr, align 4
  %v0_1000537c = call i32 @function_100089f0()
  store i32 268456840, i32* @lr, align 4
  %v1_10005384 = call i32 @function_1000a950(i32 1)
  %v0_10005388 = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_10005388, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004e9c.backedge

dec_label_pc_10005390:                            ; preds = %dec_label_pc_100051e8
  %v4_100051f4 = icmp eq i32 %v3_100051c8, %v1_100051ec
  br i1 %v4_100051f4, label %dec_label_pc_10005320, label %dec_label_pc_10005208

dec_label_pc_1000539c:                            ; preds = %dec_label_pc_1000522c
  %v4_10005238 = icmp eq i32 %v3_1000520c, %v1_10005230
  br i1 %v4_10005238, label %dec_label_pc_10005320, label %dec_label_pc_1000524c

dec_label_pc_100053a8:                            ; preds = %dec_label_pc_10005270
  %v4_1000527c = icmp eq i32 %v3_10005250, %v1_10005274
  br i1 %v4_1000527c, label %dec_label_pc_10005320, label %dec_label_pc_10005290

dec_label_pc_100053b4:                            ; preds = %dec_label_pc_100052b4
  %v4_100052c0 = icmp eq i32 %v3_10005294, %v1_100052b8
  br i1 %v4_100052c0, label %dec_label_pc_10005320, label %dec_label_pc_100052d4

dec_label_pc_100053c0:                            ; preds = %dec_label_pc_100052f8
  %v4_10005304 = icmp eq i32 %v3_100052d8, %v1_100052fc
  br i1 %v4_10005304, label %dec_label_pc_10005320, label %dec_label_pc_100052f4.backedge

dec_label_pc_100053cc:                            ; preds = %dec_label_pc_1000509c
  %v0_100053cc = load i32, i32* %r30.global-to-local, align 4
  store i32 268456920, i32* @lr, align 4
  %v2_100053d4 = call i32 @function_10009228(i32 %v0_100053cc, i32 9)
  br label %dec_label_pc_100050b8

dec_label_pc_100053dc:                            ; preds = %dec_label_pc_1000516c.backedge, %dec_label_pc_100050dc
  store i32 ptrtoint ([3 x i8]* @global_var_100053e4.70 to i32), i32* @lr, align 4
  %v1_100053e0 = call i32 @function_10008254(i32 20)
  store i32 ptrtoint ([3 x i8]* @global_var_100053ec.71 to i32), i32* @lr, align 4
  %v1_100053e8 = call i32 @function_10008254(i32 21)
  store i32 ptrtoint ([3 x i8]* @global_var_100053f4.72 to i32), i32* @lr, align 4
  %v1_100053f0 = call i32 @function_10008254(i32 22)
  store i32 ptrtoint ([3 x i8]* @global_var_100053fc.73 to i32), i32* @lr, align 4
  %v1_100053f8 = call i32 @function_10008254(i32 23)
  store i32 ptrtoint ([3 x i8]* @global_var_10005404.74 to i32), i32* @lr, align 4
  %v1_10005400 = call i32 @function_10008254(i32 24)
  store i32 268456972, i32* @lr, align 4
  %v1_10005408 = call i32 @function_10008254(i32 36)
  store i32 268456980, i32* @lr, align 4
  %v0_10005410 = call i32 @function_10009108()
  br label %dec_label_pc_10005364

; uselistorder directives
  uselistorder i32 %v1_100052f4, { 1, 0 }
  uselistorder i32 %v1_100052fc, { 1, 0, 2 }
  uselistorder i32 %v1_100052f8, { 1, 0 }
  uselistorder i32 %v3_10005178, { 2, 1, 0 }
  uselistorder i32 %v1_100052d4, { 1, 0 }
  uselistorder i32 %v1_100052b4, { 1, 0 }
  uselistorder i32 %v1_10005290, { 1, 0 }
  uselistorder i32 %v1_10005270, { 1, 0 }
  uselistorder i32 %v1_1000524c, { 1, 0 }
  uselistorder i32 %v1_1000522c, { 1, 0 }
  uselistorder i32 %v1_10005208, { 1, 0 }
  uselistorder i32 %v1_100051e8, { 1, 0 }
  uselistorder i32 %v1_100051c4, { 1, 0 }
  uselistorder i32 %v1_100051a4, { 1, 0 }
  uselistorder i1 %v3_1000517c110, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v3_10005178109, { 11, 2, 10, 0, 9, 1, 8, 3, 7, 5, 6, 4 }
  uselistorder i32 %v2_10004ea0, { 1, 0 }
  uselistorder i32 %v2_10004ef8, { 1, 0 }
  uselistorder i32 %v1_10004eb4, { 1, 0 }
  uselistorder i32 %v2_10004e70, { 1, 7, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 %v2_10004de4, { 1, 0, 2 }
  uselistorder i32 %v2_10004dc0, { 1, 0, 2 }
  uselistorder i32 %v2_10004d90, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 %v0_10004b70, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-8432, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %stack_var_-8452, { 1, 0 }
  uselistorder i32* %stack_var_-8448, { 1, 0 }
  uselistorder i32* %stack_var_-8444, { 1, 0 }
  uselistorder i32* %stack_var_-8456, { 1, 0 }
  uselistorder i32* %stack_var_-8440, { 1, 0 }
  uselistorder i32* %stack_var_-8436, { 1, 0 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 2, 3, 7, 4, 5, 6, 8 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2, 4, 3, 5, 7, 6, 8, 10, 9, 11, 13, 12, 14, 16, 15, 17, 18, 19 }
  uselistorder i32 268456316, { 1, 0 }
  uselistorder i32 (i32*)* @function_10009764, { 3, 2, 0, 4, 5, 6, 7, 1 }
  uselistorder i32 268455588, { 1, 0 }
  uselistorder i32 (i32)* @function_10009654, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10009388, { 3, 2, 1, 0 }
  uselistorder i32 4095, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10005364, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10005320, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_100052f8, { 1, 0 }
  uselistorder label %dec_label_pc_100052b4, { 1, 0 }
  uselistorder label %dec_label_pc_10005270, { 1, 0 }
  uselistorder label %dec_label_pc_1000522c, { 1, 0 }
  uselistorder label %dec_label_pc_100051e8, { 1, 0 }
  uselistorder label %dec_label_pc_100051a4, { 1, 0 }
  uselistorder label %dec_label_pc_10005184, { 1, 0 }
  uselistorder label %dec_label_pc_100050c0, { 1, 0 }
  uselistorder label %dec_label_pc_100050b8, { 1, 0 }
  uselistorder label %dec_label_pc_10004e9c.backedge, { 3, 2, 5, 4, 1, 0 }
  uselistorder label %dec_label_pc_1000502c, { 1, 0 }
  uselistorder label %dec_label_pc_10004eac, { 1, 0 }
  uselistorder label %dec_label_pc_10004eac.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10004e4c, { 1, 0 }
  uselistorder label %dec_label_pc_10004d6c, { 1, 0 }
  uselistorder label %dec_label_pc_10004d34, { 1, 0 }
  uselistorder label %dec_label_pc_10004cf0, { 1, 0 }
  uselistorder label %dec_label_pc_10004cac, { 1, 0 }
  uselistorder label %dec_label_pc_10004c78, { 1, 0 }
  uselistorder label %dec_label_pc_10004c34, { 1, 0 }
}

define i32 @function_10005418() local_unnamed_addr {
dec_label_pc_10005418:
  store i32 268457496, i32* @global_var_1001c278.75, align 4
  %v0_10005428 = load i32, i32* @r3, align 4
  ret i32 %v0_10005428
}

define i32 @function_1000542c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000542c:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v0_1000544c = load i32, i32* @r28, align 4
  store i32 0, i32* @r27, align 4
  store i32 268566528, i32* @r28, align 4
  %v0_1000545c = load i32, i32* @r31, align 4
  store i32 268566528, i32* @r31, align 4
  %v2_10005468 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_10005468, i32* @r30, align 4
  store i32 1, i32* %stack_var_-56, align 4
  store i32 268457076, i32* @lr, align 4
  %v3_10005470 = call i32 @function_10009e58(i32 2, i32 1, i32 0)
  %v3_10005474 = icmp eq i32 %v3_10005470, -1
  store i32 %v3_10005470, i32* @global_var_1001c270.76, align 4
  br i1 %v3_10005474, label %dec_label_pc_10005524, label %dec_label_pc_10005490

dec_label_pc_10005490:                            ; preds = %dec_label_pc_1000542c
  %v2_10005478 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268457108, i32* @lr, align 4
  %v5_10005490 = call i32 @function_10009e1c(i32 %v3_10005470, i32 1, i32 2, i32 %v2_10005478)
  %v3_10005494 = load i32, i32* @global_var_1001c270.76, align 4
  store i32 3, i32* @r4, align 4
  store i32 268457132, i32* @lr, align 4
  %v2_100054a8 = call i32 @function_10009020(i32 %v3_10005494)
  store i32 4, i32* @r4, align 4
  store i32 268457152, i32* @lr, align 4
  %v2_100054bc = call i32 @function_10009020(i32 %v3_10005494)
  %v3_100054c0 = load i8, i8* @global_var_1001c130.77, align 1
  %v3_100054c8 = icmp eq i8 %v3_100054c0, 0
  br i1 %v3_100054c8, label %dec_label_pc_10005548, label %dec_label_pc_100054d4

dec_label_pc_100054d4:                            ; preds = %dec_label_pc_10005490
  store i32 2, i32* %stack_var_-52, align 4
  %v0_100054e8 = call i32 @function_10009824()
  %v0_100054ec = load i32, i32* @r27, align 4
  %v2_100054ec = inttoptr i32 %v0_100054e8 to i32*
  store i32 %v0_100054ec, i32* %v2_100054ec, align 4
  store i32 %v0_100054e8, i32* @r29, align 4
  %v3_100054fc = load i32, i32* @global_var_1001c270.76, align 4
  store i32 268457220, i32* @lr, align 4
  %v3_10005500 = call i32 @function_10009c24(i32 %v3_100054fc, i32 %v2_10005468, i32 16)
  %v3_10005508 = icmp eq i32 %v3_10005500, -1
  br i1 %v3_10005508, label %dec_label_pc_10005590, label %dec_label_pc_10005514

dec_label_pc_10005514:                            ; preds = %dec_label_pc_10005548, %dec_label_pc_100054d4
  %v3_1000551c = load i32, i32* @global_var_1001c270.76, align 4
  store i32 268457252, i32* @lr, align 4
  %v2_10005520 = call i32 @function_10009cfc(i32 %v3_1000551c, i32 1)
  br label %dec_label_pc_10005524

dec_label_pc_10005524:                            ; preds = %dec_label_pc_1000542c, %dec_label_pc_10005514
  %v0_10005544 = phi i32 [ -1, %dec_label_pc_1000542c ], [ %v2_10005520, %dec_label_pc_10005514 ]
  store i32 %v0_1000544c, i32* @r28, align 4
  store i32 %v0_1000545c, i32* @r31, align 4
  ret i32 %v0_10005544

dec_label_pc_10005548:                            ; preds = %dec_label_pc_10005490
  store i32 2, i32* %stack_var_-52, align 4
  %v0_10005564 = call i32 @function_10009824()
  %v0_10005568 = load i32, i32* @r27, align 4
  %v2_10005568 = inttoptr i32 %v0_10005564 to i32*
  store i32 %v0_10005568, i32* %v2_10005568, align 4
  store i32 %v0_10005564, i32* @r29, align 4
  %v3_10005578 = load i32, i32* @global_var_1001c270.76, align 4
  store i32 268457344, i32* @lr, align 4
  %v3_1000557c = call i32 @function_10009c24(i32 %v3_10005578, i32 %v2_10005468, i32 16)
  %v3_10005584 = icmp eq i32 %v3_1000557c, -1
  br i1 %v3_10005584, label %dec_label_pc_10005590, label %dec_label_pc_10005514

dec_label_pc_10005590:                            ; preds = %dec_label_pc_10005548, %dec_label_pc_100054d4
  %v0_10005590 = load i32, i32* @r29, align 4
  %v1_10005590 = inttoptr i32 %v0_10005590 to i32*
  %v2_10005590 = load i32, i32* %v1_10005590, align 4
  %v3_10005594 = load i32, i32* @global_var_1001c270.76, align 4
  store i32 %v3_10005594, i32* @r3, align 4
  %v3_10005598 = icmp eq i32 %v2_10005590, 99
  br i1 %v3_10005598, label %dec_label_pc_10005600, label %dec_label_pc_100055a0

dec_label_pc_100055a0:                            ; preds = %dec_label_pc_10005600, %dec_label_pc_10005590, %dec_label_pc_1000560c
  store i32 2, i32* %stack_var_-52, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100055bc.78 to i32), i32* @lr, align 4
  %v0_100055b8 = call i32 @function_10009c58()
  store i32 268457412, i32* @lr, align 4
  %v1_100055c0 = call i32 @function_1000a950(i32 5)
  store i32 ptrtoint ([3 x i8]* @global_var_100055cc.79 to i32), i32* @lr, align 4
  %v0_100055c8 = call i32 @function_10009108()
  store i32 268457432, i32* @lr, align 4
  %v1_100055d4 = call i32 @function_10004514(i32 47675)
  store i32 268457436, i32* @lr, align 4
  %v1_100055d8 = call i32 @function_1000542c(i32 %v1_100055d4)
  store i32 %v0_1000544c, i32* @r28, align 4
  store i32 %v0_1000545c, i32* @r31, align 4
  ret i32 %v1_100055d8

dec_label_pc_10005600:                            ; preds = %dec_label_pc_10005590
  %v3_10005600 = load i8, i8* @global_var_1001c130.77, align 1
  %v3_10005604 = icmp eq i8 %v3_10005600, 0
  br i1 %v3_10005604, label %dec_label_pc_100055a0, label %dec_label_pc_1000560c

dec_label_pc_1000560c:                            ; preds = %dec_label_pc_10005600
  %v0_10005610 = load i32, i32* @r27, align 4
  %v1_10005610 = trunc i32 %v0_10005610 to i8
  store i8 %v1_10005610, i8* @global_var_1001c130.77, align 1
  br label %dec_label_pc_100055a0

; uselistorder directives
  uselistorder i32 %v2_10005468, { 1, 0, 2 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32 (i32)* @function_10004514, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_10009cfc, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10009c24, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_1001c130.77, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100055a0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005524, { 1, 0 }
}

define i32 @function_10005618() local_unnamed_addr {
dec_label_pc_10005618:
  %r28.global-to-local = alloca i32, align 4
  store i32 268457528, i32* @lr, align 4
  %v1_10005634 = call i32 @function_100082e0(i32 2)
  %v3_10005640 = call i32 @function_1000822c(i32 2, i32* null)
  store i32 268457544, i32* @lr, align 4
  %v1_10005644 = call i32 @function_10006298(i32 %v3_10005640)
  store i32 %v1_10005644, i32* @r31, align 4
  store i32 268457556, i32* @lr, align 4
  %v1_10005650 = call i32 @function_10008254(i32 2)
  %v0_10005654 = load i32, i32* @r31, align 4
  %v3_10005654 = icmp eq i32 %v0_10005654, 0
  br i1 %v3_10005654, label %dec_label_pc_100056b8, label %dec_label_pc_1000565c

dec_label_pc_1000565c:                            ; preds = %dec_label_pc_10005618
  %v1_1000565c = add i32 %v0_10005654, 4
  %v2_1000565c = inttoptr i32 %v1_1000565c to i32*
  %v3_1000565c = load i32, i32* %v2_1000565c, align 4
  store i32 %v3_1000565c, i32* %r28.global-to-local, align 4
  %v0_10005660 = call i32 @function_10005f74()
  %v0_10005664 = load i32, i32* @r31, align 4
  %v1_10005664 = inttoptr i32 %v0_10005664 to i8*
  %v2_10005664 = load i8, i8* %v1_10005664, align 1
  %v3_10005664 = zext i8 %v2_10005664 to i32
  %v2_10005670 = urem i32 %v0_10005660, %v3_10005664
  %v1_10005684 = mul nuw nsw i32 %v2_10005670, 4
  %v1_10005688 = load i32, i32* %r28.global-to-local, align 4
  %v2_10005688 = add i32 %v1_10005688, %v1_10005684
  %v3_10005688 = inttoptr i32 %v2_10005688 to i32*
  %v4_10005688 = load i32, i32* %v3_10005688, align 4
  store i32 %v4_10005688, i32* @global_var_1001c374.82, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005694.83 to i32), i32* @lr, align 4
  %v1_10005690 = call i32 @function_10006254(i32 %v0_10005664)
  store i32 ptrtoint ([3 x i8]* @global_var_1000569c.84 to i32), i32* @lr, align 4
  %v1_10005698 = call i32 @function_100082e0(i32 1)
  %v3_100056a4 = call i32 @function_1000822c(i32 1, i32* null)
  %v4_100056a4 = inttoptr i32 %v3_100056a4 to i16*
  %v3_100056a8 = load i16, i16* %v4_100056a4, align 2
  store i16 %v3_100056a8, i16* bitcast (i32* @global_var_1001c372.85 to i16*), align 4
  store i32 268457656, i32* @lr, align 4
  %v1_100056b4 = call i32 @function_10008254(i32 1)
  br label %dec_label_pc_100056b8

dec_label_pc_100056b8:                            ; preds = %dec_label_pc_10005618, %dec_label_pc_1000565c
  %v0_100056d0 = phi i32 [ %v1_10005650, %dec_label_pc_10005618 ], [ %v1_100056b4, %dec_label_pc_1000565c ]
  ret i32 %v0_100056d0

; uselistorder directives
  uselistorder label %dec_label_pc_100056b8, { 1, 0 }
}

define i32 @function_100056d4(i32 %arg1) local_unnamed_addr {
dec_label_pc_100056d4:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 0, i32* %r19.global-to-local, align 4
  store i32 0, i32* %r18.global-to-local, align 4
  store i32 0, i32* %r17.global-to-local, align 4
  store i32 0, i32* %r16.global-to-local, align 4
  %stack_var_-1136 = alloca i32, align 4
  %stack_var_-1600 = alloca i32, align 4
  %stack_var_-1612 = alloca i32, align 4
  %stack_var_-1616 = alloca i32, align 4
  %stack_var_-1608 = alloca i32, align 4
  %stack_var_-1264 = alloca i32, align 4
  %stack_var_-1392 = alloca i32, align 4
  %stack_var_-1620 = alloca i32, align 4
  %stack_var_-1624 = alloca i16, align 2
  %stack_var_-1584 = alloca i32, align 4
  %stack_var_-1552 = alloca i32, align 4
  %stack_var_-1520 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_100056d4 = load i32, i32* @lr, align 4
  store i32 %v0_100056d4, i32* %r0.global-to-local, align 4
  %v0_100056dc = load i32, i32* @r31, align 4
  store i32 268457704, i32* @lr, align 4
  %v0_100056e4 = call i32 @function_10009150()
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v0_100056e4, i32* @global_var_1001c2a8.86, align 4
  %tmp47 = icmp slt i32 %v0_100056e4, 1
  br i1 %tmp47, label %dec_label_pc_1000570c, label %dec_label_pc_100056f8

dec_label_pc_100056f8:                            ; preds = %dec_label_pc_1000570c, %dec_label_pc_100056d4
  store i32 %v0_100056d4, i32* %r0.global-to-local, align 4
  store i32 %v0_100056dc, i32* @r31, align 4
  ret i32 %v0_100056e4

dec_label_pc_1000570c:                            ; preds = %dec_label_pc_100056d4
  %v3_1000570c = icmp eq i32 %v0_100056e4, -1
  br i1 %v3_1000570c, label %dec_label_pc_100056f8, label %dec_label_pc_10005714

dec_label_pc_10005714:                            ; preds = %dec_label_pc_1000570c
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* %stack_var_-24, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005724.87 to i32), i32* @lr, align 4
  %v1_10005720 = call i32 @function_100082e0(i32 28)
  store i32 268457772, i32* @lr, align 4
  %v1_10005728 = call i32 @function_100082e0(i32 29)
  %v3_10005734 = call i32 @function_1000822c(i32 28, i32* null)
  store i32 268457796, i32* @lr, align 4
  %v2_10005740 = call i32 @function_10009270(i32 %v3_10005734, i32 2)
  %v3_10005744 = icmp eq i32 %v2_10005740, -1
  store i32 %v2_10005740, i32* @r31, align 4
  br i1 %v3_10005744, label %dec_label_pc_1000578c, label %dec_label_pc_10005750

dec_label_pc_10005750:                            ; preds = %dec_label_pc_1000578c, %dec_label_pc_10005714
  %v0_10005754 = phi i32 [ %v2_100057a0, %dec_label_pc_1000578c ], [ %v2_10005740, %dec_label_pc_10005714 ]
  %v2_1000575c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268457832, i32* @lr, align 4
  %v3_10005764 = call i32 @function_10008f38(i32 %v0_10005754, i32 -2147199228, i32 %v2_1000575c)
  br label %dec_label_pc_10005768

dec_label_pc_10005768:                            ; preds = %dec_label_pc_10005768, %dec_label_pc_10005750
  %v0_1000576c = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005780.88 to i32), i32* @lr, align 4
  %v3_1000577c = call i32 @function_10008f38(i32 %v0_1000576c, i32 -2147199227, i32 0)
  store i32 268457864, i32* @lr, align 4
  %v1_10005784 = call i32 @function_1000a950(i32 10)
  br label %dec_label_pc_10005768

dec_label_pc_1000578c:                            ; preds = %dec_label_pc_10005714
  %v3_10005794 = call i32 @function_1000822c(i32 29, i32* null)
  store i32 268457892, i32* @lr, align 4
  %v2_100057a0 = call i32 @function_10009270(i32 %v3_10005794, i32 2)
  %v3_100057a4 = icmp eq i32 %v2_100057a0, -1
  store i32 %v2_100057a0, i32* @r31, align 4
  br i1 %v3_100057a4, label %dec_label_pc_100057b0, label %dec_label_pc_10005750

dec_label_pc_100057b0:                            ; preds = %dec_label_pc_1000578c
  store i32 ptrtoint ([3 x i8]* @global_var_100057b8.89 to i32), i32* @lr, align 4
  %v1_100057b4 = call i32 @function_10008254(i32 28)
  store i32 ptrtoint ([3 x i8]* @global_var_100057c0.90 to i32), i32* @lr, align 4
  %v1_100057bc = call i32 @function_10008254(i32 29)
  %v0_100057c4 = call i32 @function_1000a8cc()
  %v0_100057cc = load i32, i32* @lr, align 4
  %v0_100057d0 = load i32, i32* @r29, align 4
  %v2_100057d4 = ptrtoint i32* %stack_var_-1520 to i32
  store i32 %v2_100057d4, i32* @r29, align 4
  %v0_100057d8 = load i32, i32* @r28, align 4
  store i32 %v0_100057c4, i32* @r28, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100057ec = load i32, i32* @r21, align 4
  store i32 0, i32* %stack_var_-1620, align 4
  store i32 268566528, i32* @r21, align 4
  %v0_100057f8 = load i32, i32* @r22, align 4
  store i32 268566528, i32* @r22, align 4
  %v0_10005800 = load i32, i32* @r24, align 4
  %v2_10005804 = ptrtoint i32* %stack_var_-1552 to i32
  store i32 %v2_10005804, i32* @r24, align 4
  %v0_10005808 = load i32, i32* @r25, align 4
  store i32 268566528, i32* @r25, align 4
  %v0_10005810 = load i32, i32* @r31, align 4
  store i32 2, i32* @r31, align 4
  %v0_10005818 = load i32, i32* @r15, align 4
  %v0_1000581c = load i32, i32* %r16.global-to-local, align 4
  %v0_10005820 = load i32, i32* %r17.global-to-local, align 4
  %v0_10005824 = load i32, i32* %r18.global-to-local, align 4
  %v0_10005828 = load i32, i32* %r19.global-to-local, align 4
  %v0_1000582c = load i32, i32* @r20, align 4
  %v0_10005830 = load i32, i32* @r23, align 4
  %v0_10005838 = load i32, i32* @r27, align 4
  %v0_1000583c = load i32, i32* @r30, align 4
  store i32 268458052, i32* @lr, align 4
  %v1_10005840 = call i32 @function_10009ed8(i32 %v2_100057d4)
  store i32 %v2_100057d4, i32* @r3, align 4
  store i32 268458064, i32* @lr, align 4
  %v2_1000584c = call i32 @function_10009e8c(i32 %v2_100057d4, i32 2)
  store i32 268458080, i32* @lr, align 4
  %v3_1000585c = call i32 @function_10009460(i32 0, i32 %v2_100057d4, i32 0)
  store i32 268458092, i32* @lr, align 4
  %v2_10005868 = call i32 @function_10009f04(i32 17, i32 1)
  store i32 ptrtoint (i32* @global_var_1000587c.91 to i32), i32* @lr, align 4
  %v2_10005878 = call i32 @function_10009f04(i32 5, i32 268456984)
  store i32 268458112, i32* @lr, align 4
  %v1_1000587c = call i32 @function_10008c4c(i32 %v2_10005878)
  store i32 -1350886823, i32* %r9.global-to-local, align 4
  store i32 -1350886823, i32* @global_var_1001c374.82, align 4
  store i16 232, i16* bitcast (i32* @global_var_1001c372.85 to i16*), align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 %v1_1000587c, i32* @global_var_1001c298.14, align 4
  store i16 2, i16* bitcast (i32* @global_var_1001c370.81 to i16*), align 4
  store i32 268458152, i32* @lr, align 4
  %v2_100058a4 = call i32 @function_1000836c(i32 %v1_1000587c, i32 -1350886823)
  store i32 268457496, i32* %r9.global-to-local, align 4
  store i32 268457496, i32* @global_var_1001c278.75, align 4
  store i32 ptrtoint (i32* @global_var_100058b8.92 to i32), i32* @lr, align 4
  %v1_100058b4 = call i32 @function_1000542c(i32 %v2_100058a4)
  store i32 268458172, i32* @lr, align 4
  %v1_100058b8 = call i32 @function_10005fc4(i32 %v1_100058b4)
  store i32 %v2_10005804, i32* @r3, align 4
  store i32 32, i32* @r4, align 4
  store i32 268458184, i32* @lr, align 4
  %v0_100058c4 = call i32 @function_100089f0()
  %v0_100058c8 = load i32, i32* @r28, align 4
  %v3_100058c8 = icmp eq i32 %v0_100058c8, 2
  br i1 %v3_100058c8, label %dec_label_pc_10005a3c, label %dec_label_pc_100058d0

dec_label_pc_100058d0:                            ; preds = %dec_label_pc_10005a3c, %dec_label_pc_100057b0, %dec_label_pc_10005a4c
  %v0_100058d0 = call i32 @function_10005f74()
  %v2_100058d4 = ptrtoint i32* %stack_var_-1584 to i32
  store i32 %v2_100058d4, i32* @r27, align 4
  store i32 %v0_100058d0, i32* %r29.global-to-local, align 4
  %v0_100058dc = load i32, i32* @r31, align 4
  %v1_100058dc = inttoptr i32 %v0_100058dc to i32*
  %v2_100058dc = load i32, i32* %v1_100058dc, align 4
  %v2_100058e0 = ptrtoint i16* %stack_var_-1624 to i32
  store i32 %v2_100058e0, i32* @r30, align 4
  store i32 0, i32* @r26, align 4
  store i32 268458220, i32* @lr, align 4
  %v1_100058e8 = inttoptr i32 %v2_100058dc to i8*
  %v2_100058e8 = call i32 @function_10008948(i8* %v1_100058e8)
  store i32 %v2_100058e8, i32* %r28.global-to-local, align 4
  %v0_100058f0 = load i32, i32* @r31, align 4
  %v1_100058f0 = inttoptr i32 %v0_100058f0 to i32*
  %v2_100058f0 = load i32, i32* %v1_100058f0, align 4
  %v1_100058f4 = sub i32 20, %v2_100058e8
  store i32 %v1_100058f4, i32* @r28, align 4
  store i32 268458236, i32* @lr, align 4
  %v1_100058f8 = inttoptr i32 %v2_100058f0 to i8*
  %v2_100058f8 = call i32 @function_10008948(i8* %v1_100058f8)
  %v0_100058fc = load i32, i32* %r29.global-to-local, align 4
  %v1_100058fc = load i32, i32* @r28, align 4
  %v2_100058fc = urem i32 %v0_100058fc, %v1_100058fc
  %v2_10005900 = sub i32 %v0_100058fc, %v2_100058fc
  store i32 %v2_10005900, i32* %r0.global-to-local, align 4
  %v2_10005908 = add i32 %v2_100058fc, %v2_100058f8
  %v0_10005914 = load i32, i32* @r30, align 4
  %v2_10005914 = add i32 %v0_10005914, %v2_10005908
  store i32 %v2_10005914, i32* @r29, align 4
  store i32 268458268, i32* @lr, align 4
  %v2_10005918 = bitcast i32* %stack_var_-1584 to i8*
  %v3_10005918 = call i32 @function_10006034(i8* %v2_10005918, i32 %v2_10005908)
  %v0_1000591c = load i32, i32* @r31, align 4
  %v1_1000591c = inttoptr i32 %v0_1000591c to i32*
  %v2_1000591c = load i32, i32* %v1_1000591c, align 4
  store i32 %v2_1000591c, i32* @r3, align 4
  %v0_10005920 = load i32, i32* @r26, align 4
  %v1_10005920 = trunc i32 %v0_10005920 to i8
  %v2_10005920 = load i32, i32* @r29, align 4
  %v3_10005920 = add i32 %v2_10005920, 40
  %v4_10005920 = inttoptr i32 %v3_10005920 to i8*
  store i8 %v1_10005920, i8* %v4_10005920, align 1
  %v2_10005928 = inttoptr i32 %v2_1000591c to i8*
  %v3_10005928 = call i32 @function_10008970(i8* %v2_10005928, i32 %v2_100058d4)
  store i32 32, i32* @r4, align 4
  store i32 %v2_100058d4, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10005938.94 to i32), i32* @lr, align 4
  %v0_10005934 = call i32 @function_100089f0()
  %v0_10005938 = call i32 @function_10005f74()
  store i32 %v0_10005938, i32* %r28.global-to-local, align 4
  %v0_10005940 = load i32, i32* @r31, align 4
  %v1_10005940 = inttoptr i32 %v0_10005940 to i32*
  %v2_10005940 = load i32, i32* %v1_10005940, align 4
  store i32 268458312, i32* @lr, align 4
  %v1_10005944 = inttoptr i32 %v2_10005940 to i8*
  %v2_10005944 = call i32 @function_10008948(i8* %v1_10005944)
  store i32 %v2_10005944, i32* %r29.global-to-local, align 4
  %v0_1000594c = load i32, i32* @r31, align 4
  %v1_1000594c = inttoptr i32 %v0_1000594c to i32*
  %v2_1000594c = load i32, i32* %v1_1000594c, align 4
  %v1_10005950 = sub i32 20, %v2_10005944
  store i32 %v1_10005950, i32* @r29, align 4
  store i32 268458328, i32* @lr, align 4
  %v1_10005954 = inttoptr i32 %v2_1000594c to i8*
  %v2_10005954 = call i32 @function_10008948(i8* %v1_10005954)
  %v0_10005958 = load i32, i32* %r28.global-to-local, align 4
  %v1_10005958 = load i32, i32* @r29, align 4
  %v2_10005958 = urem i32 %v0_10005958, %v1_10005958
  %v2_1000595c = sub i32 %v0_10005958, %v2_10005958
  store i32 %v2_1000595c, i32* %r0.global-to-local, align 4
  %v2_10005964 = add i32 %v2_10005958, %v2_10005954
  %v0_10005970 = load i32, i32* @r30, align 4
  %v2_10005970 = add i32 %v0_10005970, %v2_10005964
  store i32 %v2_10005970, i32* @r28, align 4
  store i32 268458360, i32* @lr, align 4
  %v3_10005974 = call i32 @function_10006034(i8* %v2_10005918, i32 %v2_10005964)
  %v0_10005978 = load i32, i32* @r26, align 4
  %v1_10005978 = trunc i32 %v0_10005978 to i8
  %v2_10005978 = load i32, i32* @r28, align 4
  %v3_10005978 = add i32 %v2_10005978, 40
  %v4_10005978 = inttoptr i32 %v3_10005978 to i8*
  store i8 %v1_10005978, i8* %v4_10005978, align 1
  store i32 ptrtoint ([3 x i8]* @global_var_1000598c.95 to i32), i32* @lr, align 4
  %v2_10005988 = call i32 @function_100092f8(i32 15, i32 %v2_100058d4)
  store i32 268458388, i32* @lr, align 4
  %v1_10005990 = call i32 @function_100082e0(i32 5)
  %v3_1000599c = call i32 @function_1000822c(i32 5, i32* nonnull %stack_var_-1620)
  %v3_100059a0 = load i32, i32* %stack_var_-1620, align 4
  store i32 268458416, i32* @lr, align 4
  %v3_100059ac = call i32 @function_10009568(i32 1, i32 %v3_1000599c, i32 %v3_100059a0)
  store i32 ptrtoint ([3 x i8]* @global_var_100059c4.97 to i32), i32* @lr, align 4
  %v3_100059c0 = call i32 @function_10009568(i32 1, i32 ptrtoint (i32* @global_var_1000bb3c.96 to i32), i32 1)
  store i32 268458444, i32* @lr, align 4
  %v1_100059c8 = call i32 @function_10008254(i32 5)
  store i32 268458448, i32* @lr, align 4
  %v1_100059cc = call i32 @function_1000072c(i32 %v1_100059c8)
  store i32 268458452, i32* @lr, align 4
  %v1_100059d0 = call i32 @function_10004b18(i32 %v1_100059cc)
  store i32 ptrtoint (i32* @global_var_100059d8.98 to i32), i32* @lr, align 4
  %v1_100059d4 = call i32 @function_100056d4(i32 %v1_100059d0)
  store i32 268458460, i32* @lr, align 4
  %v0_100059d8 = call i32 @function_10009150()
  %tmp48 = icmp slt i32 %v0_100059d8, 1
  br i1 %tmp48, label %dec_label_pc_10005a74, label %dec_label_pc_100059e4

dec_label_pc_100059e4:                            ; preds = %dec_label_pc_100058d0
  store i32 %v0_100057cc, i32* %r0.global-to-local, align 4
  store i32 %v0_10005818, i32* @r15, align 4
  store i32 %v0_1000581c, i32* %r16.global-to-local, align 4
  store i32 %v0_10005820, i32* %r17.global-to-local, align 4
  store i32 %v0_10005824, i32* %r18.global-to-local, align 4
  store i32 %v0_10005828, i32* %r19.global-to-local, align 4
  store i32 %v0_1000582c, i32* @r20, align 4
  store i32 %v0_100057ec, i32* @r21, align 4
  store i32 %v0_100057f8, i32* @r22, align 4
  store i32 %v0_10005830, i32* @r23, align 4
  store i32 %v0_10005800, i32* @r24, align 4
  store i32 %v0_10005808, i32* @r25, align 4
  store i32 %v0_10005838, i32* @r27, align 4
  store i32 %v0_100057d8, i32* @r28, align 4
  store i32 %v0_100057d0, i32* @r29, align 4
  store i32 %v0_1000583c, i32* @r30, align 4
  store i32 %v0_10005810, i32* @r31, align 4
  ret i32 0

dec_label_pc_10005a3c:                            ; preds = %dec_label_pc_100057b0
  %v0_10005a3c = load i32, i32* @r31, align 4
  %v1_10005a3c = add i32 %v0_10005a3c, 4
  %v2_10005a3c = inttoptr i32 %v1_10005a3c to i32*
  %v3_10005a3c = load i32, i32* %v2_10005a3c, align 4
  store i32 268458564, i32* @lr, align 4
  %v1_10005a40 = inttoptr i32 %v3_10005a3c to i8*
  %v2_10005a40 = call i32 @function_10008948(i8* %v1_10005a40)
  %v2_10005a44 = icmp sgt i32 %v2_10005a40, 31
  br i1 %v2_10005a44, label %dec_label_pc_100058d0, label %dec_label_pc_10005a4c

dec_label_pc_10005a4c:                            ; preds = %dec_label_pc_10005a3c
  %v0_10005a4c = load i32, i32* @r31, align 4
  %v1_10005a4c = add i32 %v0_10005a4c, 4
  %v2_10005a4c = inttoptr i32 %v1_10005a4c to i32*
  %v3_10005a4c = load i32, i32* %v2_10005a4c, align 4
  store i32 %v2_10005804, i32* @r3, align 4
  %v2_10005a54 = bitcast i32* %stack_var_-1552 to i8*
  %v3_10005a54 = call i32 @function_10008970(i8* %v2_10005a54, i32 %v3_10005a4c)
  %v0_10005a58 = load i32, i32* @r31, align 4
  %v1_10005a58 = add i32 %v0_10005a58, 4
  %v2_10005a58 = inttoptr i32 %v1_10005a58 to i32*
  %v3_10005a58 = load i32, i32* %v2_10005a58, align 4
  store i32 %v3_10005a58, i32* %r29.global-to-local, align 4
  store i32 268458596, i32* @lr, align 4
  %v1_10005a60 = inttoptr i32 %v3_10005a58 to i8*
  %v2_10005a60 = call i32 @function_10008948(i8* %v1_10005a60)
  store i32 %v2_10005a60, i32* @r4, align 4
  store i32 %v3_10005a58, i32* @r3, align 4
  store i32 268458608, i32* @lr, align 4
  %v0_10005a6c = call i32 @function_100089f0()
  br label %dec_label_pc_100058d0

dec_label_pc_10005a74:                            ; preds = %dec_label_pc_100058d0
  store i32 ptrtoint ([3 x i8]* @global_var_10005a78.99 to i32), i32* @lr, align 4
  %v1_10005a74 = call i32 @function_10009418(i32 %v0_100059d8)
  store i32 0, i32* %r19.global-to-local, align 4
  store i32 %v1_10005a74, i32* %r17.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005a88.100 to i32), i32* @lr, align 4
  %v0_10005a84 = call i32 @function_10009108()
  store i32 ptrtoint ([3 x i8]* @global_var_10005a90.101 to i32), i32* @lr, align 4
  %v0_10005a8c = call i32 @function_10009108()
  store i32 268458648, i32* @lr, align 4
  %v0_10005a94 = call i32 @function_10009108()
  %v2_10005a98 = ptrtoint i32* %stack_var_-1392 to i32
  store i32 %v2_10005a98, i32* @r28, align 4
  store i32 268458656, i32* @lr, align 4
  %v1_10005a9c = call i32 @function_1000072c(i32 %v0_10005a94)
  %v2_10005aa0 = ptrtoint i32* %stack_var_-1264 to i32
  store i32 %v2_10005aa0, i32* @r29, align 4
  store i32 268458664, i32* @lr, align 4
  %v1_10005aa4 = call i32 @function_10004b18(i32 %v1_10005a9c)
  store i32 268566528, i32* @r20, align 4
  store i32 268458672, i32* @lr, align 4
  %v1_10005aac = call i32 @function_100056d4(i32 %v1_10005aa4)
  store i32 268566528, i32* @r26, align 4
  store i32 268458680, i32* @lr, align 4
  %v1_10005ab4 = call i32 @function_10006a78(i32 %v1_10005aac)
  store i32 268566528, i32* %r18.global-to-local, align 4
  %v2_10005abc = ptrtoint i32* %stack_var_-1608 to i32
  %v2_10005ac0 = ptrtoint i32* %stack_var_-1616 to i32
  store i32 %v2_10005ac0, i32* %r16.global-to-local, align 4
  %v2_10005ef8 = ptrtoint i32* %stack_var_-1136 to i32
  %v2_10005db8 = ptrtoint i32* %stack_var_-1612 to i32
  %v1_10005e50 = bitcast i32* %stack_var_-1552 to i8*
  %v2_10005e14 = ptrtoint i32* %stack_var_-1600 to i32
  br label %dec_label_pc_10005ac4

dec_label_pc_10005ac4:                            ; preds = %dec_label_pc_10005f1c, %dec_label_pc_10005eb8, %dec_label_pc_10005eac, %dec_label_pc_10005e4c, %dec_label_pc_10005c9c, %dec_label_pc_10005c8c, %dec_label_pc_10005b7c, %dec_label_pc_10005f5c, %dec_label_pc_10005f50, %dec_label_pc_10005ed0, %dec_label_pc_10005e98, %dec_label_pc_10005dd4, %dec_label_pc_10005d00, %dec_label_pc_10005c50, %dec_label_pc_10005a74
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10005ad450 = load i32, i32* @r28, align 4
  %v4_10005ad452 = inttoptr i32 %v2_10005ad450 to i32*
  store i32 0, i32* %v4_10005ad452, align 4
  %v0_10005ad853 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005ad854 = add i32 %v0_10005ad853, 4
  store i32 %v1_10005ad854, i32* %r9.global-to-local, align 4
  %v0_10005adc55 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005adc56 = add i32 %v0_10005adc55, -1
  store i32 %v1_10005adc56, i32* %ctr.global-to-local, align 4
  %v2_10005adc57 = icmp eq i32 %v1_10005adc56, 0
  br i1 %v2_10005adc57, label %dec_label_pc_10005ae0, label %dec_label_pc_10005ad4.dec_label_pc_10005ad4_crit_edge

dec_label_pc_10005ad4.dec_label_pc_10005ad4_crit_edge: ; preds = %dec_label_pc_10005ac4, %dec_label_pc_10005ad4.dec_label_pc_10005ad4_crit_edge
  %v1_10005ad858 = phi i32 [ %v1_10005ad8, %dec_label_pc_10005ad4.dec_label_pc_10005ad4_crit_edge ], [ %v1_10005ad854, %dec_label_pc_10005ac4 ]
  %v0_10005ad4.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_10005ad4 = load i32, i32* @r28, align 4
  %v3_10005ad4 = add i32 %v2_10005ad4, %v1_10005ad858
  %v4_10005ad4 = inttoptr i32 %v3_10005ad4 to i32*
  store i32 %v0_10005ad4.pre, i32* %v4_10005ad4, align 4
  %v0_10005ad8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005ad8 = add i32 %v0_10005ad8, 4
  store i32 %v1_10005ad8, i32* %r9.global-to-local, align 4
  %v0_10005adc = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005adc = add i32 %v0_10005adc, -1
  store i32 %v1_10005adc, i32* %ctr.global-to-local, align 4
  %v2_10005adc = icmp eq i32 %v1_10005adc, 0
  br i1 %v2_10005adc, label %dec_label_pc_10005ae0, label %dec_label_pc_10005ad4.dec_label_pc_10005ad4_crit_edge

dec_label_pc_10005ae0:                            ; preds = %dec_label_pc_10005ad4.dec_label_pc_10005ad4_crit_edge, %dec_label_pc_10005ac4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10005af059 = load i32, i32* @r29, align 4
  %v4_10005af061 = inttoptr i32 %v2_10005af059 to i32*
  store i32 0, i32* %v4_10005af061, align 4
  %v0_10005af462 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005af463 = add i32 %v0_10005af462, 4
  store i32 %v1_10005af463, i32* %r9.global-to-local, align 4
  %v0_10005af864 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005af865 = add i32 %v0_10005af864, -1
  store i32 %v1_10005af865, i32* %ctr.global-to-local, align 4
  %v2_10005af866 = icmp eq i32 %v1_10005af865, 0
  br i1 %v2_10005af866, label %dec_label_pc_10005afc, label %dec_label_pc_10005af0.dec_label_pc_10005af0_crit_edge

dec_label_pc_10005af0.dec_label_pc_10005af0_crit_edge: ; preds = %dec_label_pc_10005ae0, %dec_label_pc_10005af0.dec_label_pc_10005af0_crit_edge
  %v1_10005af467 = phi i32 [ %v1_10005af4, %dec_label_pc_10005af0.dec_label_pc_10005af0_crit_edge ], [ %v1_10005af463, %dec_label_pc_10005ae0 ]
  %v0_10005af0.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_10005af0 = load i32, i32* @r29, align 4
  %v3_10005af0 = add i32 %v2_10005af0, %v1_10005af467
  %v4_10005af0 = inttoptr i32 %v3_10005af0 to i32*
  store i32 %v0_10005af0.pre, i32* %v4_10005af0, align 4
  %v0_10005af4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005af4 = add i32 %v0_10005af4, 4
  store i32 %v1_10005af4, i32* %r9.global-to-local, align 4
  %v0_10005af8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005af8 = add i32 %v0_10005af8, -1
  store i32 %v1_10005af8, i32* %ctr.global-to-local, align 4
  %v2_10005af8 = icmp eq i32 %v1_10005af8, 0
  br i1 %v2_10005af8, label %dec_label_pc_10005afc, label %dec_label_pc_10005af0.dec_label_pc_10005af0_crit_edge

dec_label_pc_10005afc:                            ; preds = %dec_label_pc_10005af0.dec_label_pc_10005af0_crit_edge, %dec_label_pc_10005ae0
  %v3_10005afc = load i32, i32* @global_var_1001c270.76, align 4
  %v3_10005b00 = icmp eq i32 %v3_10005afc, -1
  br i1 %v3_10005b00, label %dec_label_pc_10005b28, label %dec_label_pc_10005b08

dec_label_pc_10005b08:                            ; preds = %dec_label_pc_10005afc
  %v1_10005b08 = call i32 @__asm_rlwinm(i32 %v3_10005afc, i32 29, i32 3, i32 29)
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10005b10 = load i32, i32* @r30, align 4
  %v2_10005b10 = add i32 %v1_10005b10, %v1_10005b08
  %v1_10005b14 = urem i32 %v3_10005afc, 32
  %v1_10005b18 = add i32 %v2_10005b10, 232
  %v2_10005b18 = inttoptr i32 %v1_10005b18 to i32*
  %v3_10005b18 = load i32, i32* %v2_10005b18, align 4
  %v3_10005b1c = shl i32 1, %v1_10005b14
  store i32 %v3_10005b1c, i32* %r0.global-to-local, align 4
  %v2_10005b20 = or i32 %v3_10005b18, %v3_10005b1c
  store i32 %v2_10005b20, i32* %r9.global-to-local, align 4
  store i32 %v2_10005b20, i32* %v2_10005b18, align 4
  br label %dec_label_pc_10005b28

dec_label_pc_10005b28:                            ; preds = %dec_label_pc_10005afc, %dec_label_pc_10005b08
  %v3_10005b28 = load i32, i32* @global_var_1001c274.102, align 4
  store i32 %v3_10005b28, i32* %r0.global-to-local, align 4
  %v3_10005b30 = icmp eq i32 %v3_10005b28, -1
  br i1 %v3_10005b30, label %dec_label_pc_10005d14, label %dec_label_pc_10005b38

dec_label_pc_10005b38:                            ; preds = %dec_label_pc_10005d14, %dec_label_pc_10005b28, %dec_label_pc_10005d6c
  %v3_10005c64 = phi i32 [ -1, %dec_label_pc_10005d14 ], [ %v3_10005b28, %dec_label_pc_10005b28 ], [ %v3_10005c64.pre, %dec_label_pc_10005d6c ]
  %v3_10005b38 = load i8, i8* bitcast (i16* @global_var_1001c2ac.103 to i8*), align 2
  %v3_10005b3c = icmp eq i8 %v3_10005b38, 0
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10005c6c = call i32 @__asm_rlwinm(i32 %v3_10005c64, i32 29, i32 3, i32 29)
  %v1_10005c70 = urem i32 %v3_10005c64, 32
  %v1_10005c74 = load i32, i32* @r30, align 4
  %v2_10005c74 = add i32 %v1_10005c74, %v1_10005c6c
  %v0_10005c78 = load i32, i32* %r0.global-to-local, align 4
  %v3_10005c78 = shl i32 %v0_10005c78, %v1_10005c70
  store i32 %v3_10005c78, i32* %r0.global-to-local, align 4
  br i1 %v3_10005b3c, label %dec_label_pc_10005c64, label %dec_label_pc_10005b44

dec_label_pc_10005b44:                            ; preds = %dec_label_pc_10005b38
  %v1_10005b5c = add i32 %v2_10005c74, 360
  %v2_10005b5c = inttoptr i32 %v1_10005b5c to i32*
  %v3_10005b5c = load i32, i32* %v2_10005b5c, align 4
  %v2_10005b60 = or i32 %v3_10005b5c, %v3_10005c78
  store i32 %v2_10005b60, i32* %r9.global-to-local, align 4
  store i32 %v2_10005b60, i32* %v2_10005b5c, align 4
  br label %dec_label_pc_10005b68

dec_label_pc_10005b68:                            ; preds = %dec_label_pc_10005c64, %dec_label_pc_10005b44
  %v3_10005b68 = load i32, i32* @global_var_1001c274.102, align 4
  store i32 %v3_10005b68, i32* %r0.global-to-local, align 4
  %v3_10005b6c = load i32, i32* @global_var_1001c270.76, align 4
  %v2_10005b70 = icmp slt i32 %v3_10005b6c, %v3_10005b68
  br i1 %v2_10005b70, label %dec_label_pc_10005b78, label %dec_label_pc_10005b7c

dec_label_pc_10005b78:                            ; preds = %dec_label_pc_10005b68
  br label %dec_label_pc_10005b7c

dec_label_pc_10005b7c:                            ; preds = %dec_label_pc_10005b68, %dec_label_pc_10005b78
  %v0_10005b84 = phi i32 [ %v3_10005b6c, %dec_label_pc_10005b68 ], [ %v3_10005b68, %dec_label_pc_10005b78 ]
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r9.global-to-local, align 4
  %v1_10005b84 = add i32 %v0_10005b84, 1
  store i32 10, i32* %stack_var_-1608, align 4
  store i32 268458916, i32* @lr, align 4
  %v5_10005ba0 = call i32 @function_100093d0(i32 %v1_10005b84, i32 %v2_10005a98, i32 %v2_10005aa0, i32 0, i32 %v2_10005abc)
  %v6_10005ba0 = trunc i32 %v5_10005ba0 to i16
  %v4_10005ba4 = icmp eq i16 %v6_10005ba0, -1
  br i1 %v4_10005ba4, label %dec_label_pc_10005ac4, label %dec_label_pc_10005bac

dec_label_pc_10005bac:                            ; preds = %dec_label_pc_10005b7c
  %v4_10005bac = icmp eq i16 %v6_10005ba0, 0
  br i1 %v4_10005bac, label %dec_label_pc_10005bb4, label %dec_label_pc_10005be0

dec_label_pc_10005bb4:                            ; preds = %dec_label_pc_10005bac
  %v0_10005bb8 = load i32, i32* %r19.global-to-local, align 4
  store i16 0, i16* %stack_var_-1624, align 2
  %v2_10005bc8 = srem i32 %v0_10005bb8, 6
  %v1_10005bcc = sub i32 %v0_10005bb8, %v2_10005bc8
  store i32 %v1_10005bcc, i32* %r9.global-to-local, align 4
  store i32 %v2_10005bc8, i32* %r0.global-to-local, align 4
  %v1_10005bd4 = add i32 %v0_10005bb8, 1
  store i32 %v1_10005bd4, i32* %r19.global-to-local, align 4
  %v3_10005bd8 = icmp eq i32 %v2_10005bc8, 0
  br i1 %v3_10005bd8, label %dec_label_pc_10005d88, label %dec_label_pc_10005be0

dec_label_pc_10005be0:                            ; preds = %dec_label_pc_10005bac, %dec_label_pc_10005bb4, %dec_label_pc_10005d88
  %v3_10005be0 = load i32, i32* @global_var_1001c270.76, align 4
  %v3_10005be4 = icmp eq i32 %v3_10005be0, -1
  br i1 %v3_10005be4, label %dec_label_pc_10005c08, label %dec_label_pc_10005bec

dec_label_pc_10005bec:                            ; preds = %dec_label_pc_10005be0
  %v1_10005bec = call i32 @__asm_rlwinm(i32 %v3_10005be0, i32 29, i32 3, i32 29)
  %v1_10005bf0 = urem i32 %v3_10005be0, 32
  %v1_10005bf4 = load i32, i32* @r30, align 4
  %v2_10005bf4 = add i32 %v1_10005bf4, %v1_10005bec
  store i32 %v2_10005bf4, i32* %r9.global-to-local, align 4
  %v1_10005bf8 = add i32 %v2_10005bf4, 232
  %v2_10005bf8 = inttoptr i32 %v1_10005bf8 to i32*
  %v3_10005bf8 = load i32, i32* %v2_10005bf8, align 4
  %v3_10005bfc = lshr i32 %v3_10005bf8, %v1_10005bf0
  store i32 %v3_10005bfc, i32* %r0.global-to-local, align 4
  %v1_10005c00 = urem i32 %v3_10005bfc, 2
  store i32 %v1_10005c00, i32* %r9.global-to-local, align 4
  %v3_10005c00 = icmp eq i32 %v1_10005c00, 0
  br i1 %v3_10005c00, label %dec_label_pc_10005c08, label %dec_label_pc_10005e0c

dec_label_pc_10005c08:                            ; preds = %dec_label_pc_10005bec, %dec_label_pc_10005be0
  %v3_10005c08 = load i8, i8* bitcast (i16* @global_var_1001c2ac.103 to i8*), align 2
  %v4_10005c08 = zext i8 %v3_10005c08 to i32
  store i32 %v4_10005c08, i32* @r31, align 4
  %v3_10005c0c = icmp eq i8 %v3_10005c08, 0
  %v3_10005c8c = load i32, i32* @global_var_1001c274.102, align 4
  br i1 %v3_10005c0c, label %dec_label_pc_10005c8c, label %dec_label_pc_10005c14

dec_label_pc_10005c14:                            ; preds = %dec_label_pc_10005c08
  store i32 268566528, i32* @r31, align 4
  %v1_10005c1c = call i32 @__asm_rlwinm(i32 %v3_10005c8c, i32 29, i32 3, i32 29)
  %v1_10005c20 = urem i32 %v3_10005c8c, 32
  %v1_10005c24 = load i32, i32* @r30, align 4
  %v2_10005c24 = add i32 %v1_10005c24, %v1_10005c1c
  store i32 %v2_10005c24, i32* %r9.global-to-local, align 4
  %v1_10005c28 = add i32 %v2_10005c24, 360
  %v2_10005c28 = inttoptr i32 %v1_10005c28 to i32*
  %v3_10005c28 = load i32, i32* %v2_10005c28, align 4
  %v3_10005c2c = lshr i32 %v3_10005c28, %v1_10005c20
  store i32 %v3_10005c2c, i32* %r0.global-to-local, align 4
  %v1_10005c34 = urem i32 %v3_10005c2c, 2
  %v3_10005c34 = icmp eq i32 %v1_10005c34, 0
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i8 0, i8* bitcast (i16* @global_var_1001c2ac.103 to i8*), align 2
  br i1 %v3_10005c34, label %dec_label_pc_10005c44, label %dec_label_pc_10005da4

dec_label_pc_10005c44:                            ; preds = %dec_label_pc_10005c14
  %v3_10005c44 = icmp eq i32 %v3_10005c8c, -1
  br i1 %v3_10005c44, label %dec_label_pc_10005c50, label %dec_label_pc_10005c4c

dec_label_pc_10005c4c:                            ; preds = %dec_label_pc_10005c44
  store i32 ptrtoint (i32* @global_var_10005c50.104 to i32), i32* @lr, align 4
  %v0_10005c4c = call i32 @function_10009108()
  br label %dec_label_pc_10005c50

dec_label_pc_10005c50:                            ; preds = %dec_label_pc_10005c44, %dec_label_pc_10005c4c
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001c274.102, align 4
  store i32 268459104, i32* @lr, align 4
  %v1_10005c5c = call i32 @function_1000a950(i32 1)
  br label %dec_label_pc_10005ac4

dec_label_pc_10005c64:                            ; preds = %dec_label_pc_10005b38
  %v1_10005c7c = add i32 %v2_10005c74, 232
  %v2_10005c7c = inttoptr i32 %v1_10005c7c to i32*
  %v3_10005c7c = load i32, i32* %v2_10005c7c, align 4
  %v2_10005c80 = or i32 %v3_10005c7c, %v3_10005c78
  store i32 %v2_10005c80, i32* %r9.global-to-local, align 4
  store i32 %v2_10005c80, i32* %v2_10005c7c, align 4
  br label %dec_label_pc_10005b68

dec_label_pc_10005c8c:                            ; preds = %dec_label_pc_10005c08
  store i32 268566528, i32* @r27, align 4
  %v3_10005c94 = icmp eq i32 %v3_10005c8c, -1
  br i1 %v3_10005c94, label %dec_label_pc_10005ac4, label %dec_label_pc_10005c9c

dec_label_pc_10005c9c:                            ; preds = %dec_label_pc_10005c8c
  %v1_10005c9c = call i32 @__asm_rlwinm(i32 %v3_10005c8c, i32 29, i32 3, i32 29)
  %v1_10005ca0 = urem i32 %v3_10005c8c, 32
  %v1_10005ca4 = load i32, i32* @r30, align 4
  %v2_10005ca4 = add i32 %v1_10005ca4, %v1_10005c9c
  store i32 %v2_10005ca4, i32* %r9.global-to-local, align 4
  %v1_10005ca8 = add i32 %v2_10005ca4, 232
  %v2_10005ca8 = inttoptr i32 %v1_10005ca8 to i32*
  %v3_10005ca8 = load i32, i32* %v2_10005ca8, align 4
  %v3_10005cac = lshr i32 %v3_10005ca8, %v1_10005ca0
  store i32 %v3_10005cac, i32* %r0.global-to-local, align 4
  %v1_10005cb0 = urem i32 %v3_10005cac, 2
  store i32 %v1_10005cb0, i32* %r9.global-to-local, align 4
  %v3_10005cb0 = icmp eq i32 %v1_10005cb0, 0
  br i1 %v3_10005cb0, label %dec_label_pc_10005ac4, label %dec_label_pc_10005cb8

dec_label_pc_10005cb8:                            ; preds = %dec_label_pc_10005c9c
  %v0_10005cb8 = load i32, i32* @r31, align 4
  %v6_10005cb8 = trunc i32 %v0_10005cb8 to i16
  store i16 %v6_10005cb8, i16* %stack_var_-1624, align 2
  %v0_10005cbc = call i32 @function_10009824()
  %v0_10005cc0 = load i32, i32* @r31, align 4
  %v2_10005cc0 = inttoptr i32 %v0_10005cbc to i32*
  store i32 %v0_10005cc0, i32* %v2_10005cc0, align 4
  store i32 %v0_10005cbc, i32* @r23, align 4
  %v3_10005cd0 = load i32, i32* @global_var_1001c274.102, align 4
  store i32 268459228, i32* @lr, align 4
  %v4_10005cd8 = call i32 @function_10009d2c(i32 %v3_10005cd0, i32 %v2_100058e0, i32 2, i32 16386)
  %v3_10005cdc = icmp eq i32 %v4_10005cd8, -1
  br i1 %v3_10005cdc, label %dec_label_pc_10005eac, label %dec_label_pc_10005ce4

dec_label_pc_10005ce4:                            ; preds = %dec_label_pc_10005cb8
  %v3_10005ce4 = icmp eq i32 %v4_10005cd8, 0
  br i1 %v3_10005ce4, label %dec_label_pc_10005ec0, label %dec_label_pc_10005cec

dec_label_pc_10005cec:                            ; preds = %dec_label_pc_10005ce4
  %v3_10005cec = load i16, i16* %stack_var_-1624, align 2
  %v4_10005cec = sext i16 %v3_10005cec to i32
  %v4_10005cf0 = icmp eq i16 %v3_10005cec, 0
  br i1 %v4_10005cf0, label %dec_label_pc_10005f5c, label %dec_label_pc_10005cf8

dec_label_pc_10005cf8:                            ; preds = %dec_label_pc_10005cec
  %tmp49 = icmp ult i16 %v3_10005cec, 1025
  br i1 %tmp49, label %dec_label_pc_10005ef4, label %dec_label_pc_10005d00

dec_label_pc_10005d00:                            ; preds = %dec_label_pc_10005cf8
  store i32 ptrtoint (i32* @global_var_10005d08.105 to i32), i32* @lr, align 4
  %v0_10005d04 = call i32 @function_10009108()
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001c274.102, align 4
  br label %dec_label_pc_10005ac4

dec_label_pc_10005d14:                            ; preds = %dec_label_pc_10005b28
  store i32 268459300, i32* @lr, align 4
  %v3_10005d20 = call i32 @function_10009e58(i32 2, i32 1, i32 0)
  %v3_10005d24 = icmp eq i32 %v3_10005d20, -1
  store i32 %v3_10005d20, i32* @r31, align 4
  store i32 %v3_10005d20, i32* @global_var_1001c274.102, align 4
  br i1 %v3_10005d24, label %dec_label_pc_10005b38, label %dec_label_pc_10005d34

dec_label_pc_10005d34:                            ; preds = %dec_label_pc_10005d14
  store i32 3, i32* @r4, align 4
  store i32 268459332, i32* @lr, align 4
  %v1_10005d40 = call i32 @function_10009020(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_10005d4c = load i32, i32* @r31, align 4
  store i32 268459352, i32* @lr, align 4
  %v2_10005d54 = call i32 @function_10009020(i32 %v0_10005d4c)
  %v3_10005d58 = load i32, i32* @global_var_1001c278.75, align 4
  store i32 %v3_10005d58, i32* %r0.global-to-local, align 4
  %v3_10005d5c = icmp eq i32 %v3_10005d58, 0
  br i1 %v3_10005d5c, label %dec_label_pc_10005d6c, label %dec_label_pc_10005d64

dec_label_pc_10005d64:                            ; preds = %dec_label_pc_10005d34
  store i32 %v3_10005d58, i32* %ctr.global-to-local, align 4
  store i32 268459372, i32* @lr, align 4
  %v2_10005d68 = call i32 @function_10008c4c(i32 %v2_10005d54)
  br label %dec_label_pc_10005d6c

dec_label_pc_10005d6c:                            ; preds = %dec_label_pc_10005d34, %dec_label_pc_10005d64
  %v3_10005d6c = load i32, i32* @global_var_1001c274.102, align 4
  store i32 %v3_10005d6c, i32* @r3, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i8 1, i8* bitcast (i16* @global_var_1001c2ac.103 to i8*), align 2
  store i32 268459396, i32* @lr, align 4
  %v0_10005d80 = call i32 @function_10009c58()
  %v3_10005c64.pre = load i32, i32* @global_var_1001c274.102, align 4
  br label %dec_label_pc_10005b38

dec_label_pc_10005d88:                            ; preds = %dec_label_pc_10005bb4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10005d90 = load i32, i32* @global_var_1001c274.102, align 4
  store i32 268459424, i32* @lr, align 4
  %v4_10005d9c = call i32 @function_10009da4(i32 %v3_10005d90, i32 %v2_100058e0, i32 2, i32 16384)
  br label %dec_label_pc_10005be0

dec_label_pc_10005da4:                            ; preds = %dec_label_pc_10005c14
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-1616, align 4
  store i32 4, i32* %stack_var_-1612, align 4
  store i32 268459464, i32* @lr, align 4
  %v5_10005dc4 = call i32 @function_10009cc0(i32 1, i32 4, i32 %v2_10005ac0, i32 %v2_10005db8, i32 4)
  %v3_10005dc8 = load i32, i32* %stack_var_-1616, align 4
  store i32 %v3_10005dc8, i32* %r0.global-to-local, align 4
  %v3_10005dcc = icmp eq i32 %v3_10005dc8, 0
  br i1 %v3_10005dcc, label %dec_label_pc_10005e4c, label %dec_label_pc_10005dd4

dec_label_pc_10005dd4:                            ; preds = %dec_label_pc_10005da4
  store i32 ptrtoint (i32* @global_var_10005ddc.106 to i32), i32* @lr, align 4
  %v0_10005dd8 = call i32 @function_10009108()
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001c274.102, align 4
  %v0_10005de4 = call i32 @function_10005f74()
  %v1_10005de4 = sext i32 %v0_10005de4 to i64
  %v5_10005df0 = mul nuw nsw i64 %v1_10005de4, 3435973837
  %v1_10005df42 = udiv i64 %v5_10005df0, 34359738368
  %v1_10005df4 = trunc i64 %v1_10005df42 to i32
  %v1_10005df8 = mul i32 %v1_10005df4, 10
  store i32 %v1_10005df8, i32* %r0.global-to-local, align 4
  %v3_10005dfc = sub i32 %v0_10005de4, %v1_10005df8
  %v1_10005e00 = add i32 %v3_10005dfc, 1
  store i32 268459528, i32* @lr, align 4
  %v1_10005e04 = call i32 @function_1000a950(i32 %v1_10005e00)
  br label %dec_label_pc_10005ac4

dec_label_pc_10005e0c:                            ; preds = %dec_label_pc_10005bec
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 16, i32* %stack_var_-1616, align 4
  store i32 ptrtoint (i32* @global_var_10005e20.108 to i32), i32* @lr, align 4
  %v3_10005e1c = call i32 @function_10009bf0(i32 %v2_10005e14, i32 %v2_10005ac0, i32 %v1_10005c00)
  store i32 268459556, i32* @lr, align 4
  %v1_10005e20 = call i32 @function_100067b4(i32 %v3_10005e1c)
  store i32 ptrtoint ([3 x i8]* @global_var_10005e28.109 to i32), i32* @lr, align 4
  %v1_10005e24 = call i32 @function_100044e8(i32 %v1_10005e20)
  %v0_10005e28 = load i32, i32* %r17.global-to-local, align 4
  %v1_10005e28 = sub i32 0, %v0_10005e28
  store i32 268459572, i32* @lr, align 4
  %v2_10005e30 = call i32 @function_10009228(i32 %v1_10005e28, i32 9)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10005e38 = load i32, i32* @global_var_1001c2a8.86, align 4
  %v3_10005e3c = icmp eq i32 %v3_10005e38, 0
  br i1 %v3_10005e3c, label %dec_label_pc_10005e44, label %dec_label_pc_10005ee8

dec_label_pc_10005e44:                            ; preds = %dec_label_pc_10005e0c, %dec_label_pc_10005ee8
  %v0_10005e48 = call i32 @function_1000a8cc()
  br label %dec_label_pc_10005e4c

dec_label_pc_10005e4c:                            ; preds = %dec_label_pc_10005da4, %dec_label_pc_10005e44
  store i32 268459604, i32* @lr, align 4
  %v2_10005e50 = call i32 @function_10008948(i8* %v1_10005e50)
  %v3_10005e50 = trunc i32 %v2_10005e50 to i8
  %v7_10005e54 = sext i8 %v3_10005e50 to i16
  store i16 %v7_10005e54, i16* %stack_var_-1624, align 2
  store i32 268459612, i32* @lr, align 4
  %v2_10005e58 = call i32 @function_10008c4c(i32 %v2_10005e50)
  store i32 %v2_10005e58, i32* @global_var_1001c298.14, align 4
  %v0_10005e64 = load i32, i32* @r31, align 4
  %v1_10005e64 = add i32 %v0_10005e64, -15756
  %v2_10005e64 = inttoptr i32 %v1_10005e64 to i32*
  %v3_10005e64 = load i32, i32* %v2_10005e64, align 4
  store i32 268459640, i32* @lr, align 4
  %v4_10005e74 = call i32 @function_10009da4(i32 %v3_10005e64, i32 ptrtoint (i32* @global_var_1000bb40.110 to i32), i32 4, i32 16384)
  %v0_10005e78 = load i32, i32* @r31, align 4
  %v1_10005e78 = add i32 %v0_10005e78, -15756
  %v2_10005e78 = inttoptr i32 %v1_10005e78 to i32*
  %v3_10005e78 = load i32, i32* %v2_10005e78, align 4
  store i32 268459660, i32* @lr, align 4
  %v4_10005e88 = call i32 @function_10009da4(i32 %v3_10005e78, i32 %v2_100058e0, i32 1, i32 16384)
  %v3_10005e8c = load i16, i16* %stack_var_-1624, align 2
  %v4_10005e90 = icmp eq i16 %v3_10005e8c, 0
  br i1 %v4_10005e90, label %dec_label_pc_10005ac4, label %dec_label_pc_10005e98

dec_label_pc_10005e98:                            ; preds = %dec_label_pc_10005e4c
  %v4_10005e8c = sext i16 %v3_10005e8c to i32
  %v0_10005e98 = load i32, i32* @r31, align 4
  %v1_10005e98 = add i32 %v0_10005e98, -15756
  %v2_10005e98 = inttoptr i32 %v1_10005e98 to i32*
  %v3_10005e98 = load i32, i32* %v2_10005e98, align 4
  store i32 268459688, i32* @lr, align 4
  %v5_10005ea4 = call i32 @function_10009da4(i32 %v3_10005e98, i32 %v2_10005804, i32 %v4_10005e8c, i32 16384)
  br label %dec_label_pc_10005ac4

dec_label_pc_10005eac:                            ; preds = %dec_label_pc_10005ef4, %dec_label_pc_10005cb8
  %v0_10005eac = load i32, i32* @r23, align 4
  %v1_10005eac = inttoptr i32 %v0_10005eac to i32*
  %v2_10005eac = load i32, i32* %v1_10005eac, align 4
  %v3_10005eb0 = icmp eq i32 %v2_10005eac, 11
  br i1 %v3_10005eb0, label %dec_label_pc_10005ac4, label %dec_label_pc_10005eb8

dec_label_pc_10005eb8:                            ; preds = %dec_label_pc_10005eac
  %v3_10005eb8 = icmp eq i32 %v2_10005eac, 4
  br i1 %v3_10005eb8, label %dec_label_pc_10005ac4, label %dec_label_pc_10005ec0

dec_label_pc_10005ec0:                            ; preds = %dec_label_pc_10005f14, %dec_label_pc_10005eb8, %dec_label_pc_10005ce4
  %v3_10005ec0 = load i32, i32* @global_var_1001c274.102, align 4
  %v3_10005ec4 = icmp eq i32 %v3_10005ec0, -1
  br i1 %v3_10005ec4, label %dec_label_pc_10005ed0, label %dec_label_pc_10005ecc

dec_label_pc_10005ecc:                            ; preds = %dec_label_pc_10005ec0
  store i32 ptrtoint (i32* @global_var_10005ed0.111 to i32), i32* @lr, align 4
  %v0_10005ecc = call i32 @function_10009108()
  br label %dec_label_pc_10005ed0

dec_label_pc_10005ed0:                            ; preds = %dec_label_pc_10005ec0, %dec_label_pc_10005ecc
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 -1, i32* @global_var_1001c274.102, align 4
  store i32 268459748, i32* @lr, align 4
  %v1_10005ee0 = call i32 @function_1000a950(i32 1)
  br label %dec_label_pc_10005ac4

dec_label_pc_10005ee8:                            ; preds = %dec_label_pc_10005e0c
  store i32 268459760, i32* @lr, align 4
  %v2_10005eec = call i32 @function_10009228(i32 %v3_10005e38, i32 9)
  br label %dec_label_pc_10005e44

dec_label_pc_10005ef4:                            ; preds = %dec_label_pc_10005cf8
  %v0_10005ef4 = load i32, i32* @r31, align 4
  %v1_10005ef4 = load i32, i32* @r23, align 4
  %v2_10005ef4 = inttoptr i32 %v1_10005ef4 to i32*
  store i32 %v0_10005ef4, i32* %v2_10005ef4, align 4
  store i32 %v2_10005ef8, i32* @r31, align 4
  %v3_10005f04 = load i32, i32* @global_var_1001c274.102, align 4
  store i32 268459788, i32* @lr, align 4
  %v5_10005f08 = call i32 @function_10009d2c(i32 %v3_10005f04, i32 %v2_10005ef8, i32 %v4_10005cec, i32 16386)
  %v3_10005f0c = icmp eq i32 %v5_10005f08, -1
  br i1 %v3_10005f0c, label %dec_label_pc_10005eac, label %dec_label_pc_10005f14

dec_label_pc_10005f14:                            ; preds = %dec_label_pc_10005ef4
  %v3_10005f14 = icmp eq i32 %v5_10005f08, 0
  br i1 %v3_10005f14, label %dec_label_pc_10005ec0, label %dec_label_pc_10005f1c

dec_label_pc_10005f1c:                            ; preds = %dec_label_pc_10005f14
  %v3_10005f1c = load i32, i32* @global_var_1001c274.102, align 4
  store i32 268459824, i32* @lr, align 4
  %v4_10005f2c = call i32 @function_10009d2c(i32 %v3_10005f1c, i32 %v2_100058e0, i32 2, i32 16384)
  %v3_10005f30 = load i32, i32* @global_var_1001c274.102, align 4
  %v3_10005f34 = load i16, i16* %stack_var_-1624, align 2
  %v4_10005f34 = sext i16 %v3_10005f34 to i32
  store i32 268459844, i32* @lr, align 4
  %v5_10005f40 = call i32 @function_10009d2c(i32 %v3_10005f30, i32 %v2_10005ef8, i32 %v4_10005f34, i32 16384)
  %v3_10005f44 = load i16, i16* %stack_var_-1624, align 2
  %v4_10005f48 = icmp eq i16 %v3_10005f44, 0
  br i1 %v4_10005f48, label %dec_label_pc_10005ac4, label %dec_label_pc_10005f50

dec_label_pc_10005f50:                            ; preds = %dec_label_pc_10005f1c
  %v4_10005f44 = sext i16 %v3_10005f44 to i32
  store i32 268459864, i32* @lr, align 4
  %v3_10005f54 = call i32 @function_10000394(i32 %v2_10005ef8, i32 %v4_10005f44)
  br label %dec_label_pc_10005ac4

dec_label_pc_10005f5c:                            ; preds = %dec_label_pc_10005cec
  %v3_10005f5c = load i32, i32* @global_var_1001c274.102, align 4
  store i32 268459888, i32* @lr, align 4
  %v4_10005f6c = call i32 @function_10009d2c(i32 %v3_10005f5c, i32 %v2_100058e0, i32 2, i32 16384)
  br label %dec_label_pc_10005ac4

; uselistorder directives
  uselistorder i16 %v3_10005f44, { 1, 0 }
  uselistorder i16 %v3_10005e8c, { 1, 0 }
  uselistorder i32 %v3_10005d20, { 1, 0, 2 }
  uselistorder i32 %v1_10005cb0, { 1, 0 }
  uselistorder i32 %v3_10005c8c, { 0, 2, 5, 3, 1, 4 }
  uselistorder i32 %v1_10005c00, { 2, 1, 0 }
  uselistorder i32 %v2_10005bc8, { 1, 0, 2 }
  uselistorder i32 %v0_10005bb8, { 2, 0, 1 }
  uselistorder i32 %v2_10005c74, { 1, 0 }
  uselistorder i32 %v1_10005af8, { 1, 0 }
  uselistorder i32 %v1_10005af4, { 1, 0 }
  uselistorder i32 %v1_10005adc, { 1, 0 }
  uselistorder i32 %v1_10005ad8, { 1, 0 }
  uselistorder i32 %v2_10005ef8, { 1, 2, 0, 3 }
  uselistorder i32 %v2_10005ac0, { 1, 0, 2 }
  uselistorder i32 %v2_10005964, { 1, 0 }
  uselistorder i32 %v2_10005908, { 1, 0 }
  uselistorder i32 %v2_100058e0, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v1_1000587c, { 1, 0 }
  uselistorder i32 %v2_100057d4, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v2_100057a0, { 1, 2, 0 }
  uselistorder i32 %v0_100056e4, { 3, 2, 0, 1 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-1552, { 1, 0, 2 }
  uselistorder i16* %stack_var_-1624, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-1620, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 17, 19, 18, 15, 20, 21, 23, 22, 14, 24, 25, 26, 27, 13 }
  uselistorder i32* %r18.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r16.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 21, 10, 11, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 18, 19, 20 }
  uselistorder i32* %ctr.global-to-local, { 0, 4, 3, 2, 5, 6, 8, 7, 1, 9, 10 }
  uselistorder i8* bitcast (i16* @global_var_1001c2ac.103 to i8*), { 3, 2, 1, 0 }
  uselistorder i32* @global_var_1001c274.102, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11, 12, 14, 13, 15, 16 }
  uselistorder i32 (i32)* @function_100056d4, { 1, 0 }
  uselistorder i32 (i32)* @function_10004b18, { 1, 0 }
  uselistorder i32 (i32)* @function_1000072c, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10009568, { 1, 0 }
  uselistorder i32 (i8*, i32)* @function_10008970, { 21, 22, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 (i8*, i32)* @function_10006034, { 1, 2, 0 }
  uselistorder i32 (i32, i32)* @function_10009f04, { 1, 0 }
  uselistorder i32* @r24, { 1, 2, 3, 5, 6, 4, 7, 0, 8, 9, 10, 11, 12, 13 }
  uselistorder label %dec_label_pc_10005ed0, { 1, 0 }
  uselistorder label %dec_label_pc_10005e4c, { 1, 0 }
  uselistorder label %dec_label_pc_10005e44, { 1, 0 }
  uselistorder label %dec_label_pc_10005d6c, { 1, 0 }
  uselistorder label %dec_label_pc_10005c50, { 1, 0 }
  uselistorder label %dec_label_pc_10005be0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10005b7c, { 1, 0 }
  uselistorder label %dec_label_pc_10005b38, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005b28, { 1, 0 }
  uselistorder label %dec_label_pc_10005af0.dec_label_pc_10005af0_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10005ad4.dec_label_pc_10005ad4_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10005ac4, { 7, 8, 0, 9, 1, 2, 10, 3, 11, 12, 4, 5, 13, 6, 14 }
  uselistorder label %dec_label_pc_100058d0, { 2, 0, 1 }
}

define i32 @function_10005f74() local_unnamed_addr {
dec_label_pc_10005f74:
  %v3_10005f7c = load i32, i32* @global_var_1001c32c.112, align 4
  %v3_10005f84 = load i32, i32* @global_var_1001c320.113, align 4
  %v1_10005f8c = udiv i32 %v3_10005f7c, 524288
  %v3_10005f90 = load i32, i32* @global_var_1001c328.114, align 4
  %v1_10005f94 = mul i32 %v3_10005f84, 2048
  %v2_10005f98 = xor i32 %v1_10005f8c, %v3_10005f7c
  %v2_10005f9c = xor i32 %v1_10005f94, %v3_10005f84
  %v3_10005fa0 = load i32, i32* @global_var_1001c324.115, align 4
  %v2_10005fa4 = xor i32 %v2_10005f98, %v2_10005f9c
  %v1_10005fa8 = udiv i32 %v2_10005f9c, 256
  %v2_10005fac = xor i32 %v2_10005fa4, %v1_10005fa8
  store i32 %v3_10005fa0, i32* @global_var_1001c320.113, align 4
  store i32 %v3_10005f90, i32* @global_var_1001c324.115, align 4
  store i32 %v3_10005f7c, i32* @global_var_1001c328.114, align 4
  store i32 %v2_10005fac, i32* @global_var_1001c32c.112, align 4
  ret i32 %v2_10005fac

; uselistorder directives
  uselistorder i32 %v2_10005fac, { 1, 0 }
  uselistorder i32 %v3_10005f84, { 1, 0 }
  uselistorder i32 %v3_10005f7c, { 2, 1, 0 }
}

define i32 @function_10005fc4(i32 %arg1) local_unnamed_addr {
dec_label_pc_10005fc4:
  store i32 268460004, i32* @lr, align 4
  %v0_10005fe0 = call i32 @function_100094d8()
  store i32 %v0_10005fe0, i32* @global_var_1001c320.113, align 4
  store i32 268460016, i32* @lr, align 4
  %v0_10005fec = call i32 @function_10009198()
  store i32 268460024, i32* @lr, align 4
  %v0_10005ff4 = call i32 @function_100091e0()
  %v2_10005ff8 = xor i32 %v0_10005fec, %v0_10005ff4
  store i32 %v2_10005ff8, i32* @global_var_1001c324.115, align 4
  store i32 268460036, i32* @lr, align 4
  %v1_10006000 = call i32 @function_10009830(i32 %v0_10005ff4)
  %v3_10006004 = load i32, i32* @global_var_1001c324.115, align 4
  %v2_10006014 = xor i32 %v3_10006004, %v1_10006000
  store i32 %v2_10006014, i32* @global_var_1001c32c.112, align 4
  store i32 %v1_10006000, i32* @global_var_1001c328.114, align 4
  ret i32 %v1_10006000

; uselistorder directives
  uselistorder i32 %v1_10006000, { 2, 1, 0 }
  uselistorder i32 %v0_10005ff4, { 1, 0 }
  uselistorder i32 ()* @function_100091e0, { 2, 1, 0 }
}

define i32 @function_10006034(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10006034:
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-72 = alloca i32, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v2_10006050 = ptrtoint i32* %stack_var_-72 to i32
  store i32 268460148, i32* @lr, align 4
  %v1_10006070 = call i32 @function_100082e0(i32 33)
  %v3_1000607c = call i32 @function_1000822c(i32 33, i32* null)
  %v2_10006088 = inttoptr i32 %v3_1000607c to i8*
  %v3_10006088 = call i32 @function_1000999c(i32 %v2_10006050, i8* %v2_10006088)
  %v3_1000608c = icmp eq i32 %arg2, 0
  br i1 %v3_1000608c, label %dec_label_pc_10006110, label %dec_label_pc_10006094

dec_label_pc_10006094:                            ; preds = %dec_label_pc_10006034
  %v1_10006094 = load i32, i32* %r31.global-to-local, align 4
  %v2_10006094 = add i32 %v1_10006094, %arg2
  store i32 %v2_10006094, i32* %r26.global-to-local, align 4
  %v1_100060e8 = bitcast i32* %stack_var_-72 to i8*
  br label %dec_label_pc_100060a8

dec_label_pc_100060a8:                            ; preds = %dec_label_pc_100060a8, %dec_label_pc_10006094
  %v3_100060a8 = load i32, i32* @global_var_1001c32c.112, align 4
  %v3_100060b0 = load i32, i32* @global_var_1001c320.113, align 4
  %v1_100060b4 = udiv i32 %v3_100060a8, 524288
  %v3_100060b8 = load i32, i32* @global_var_1001c328.114, align 4
  %v1_100060bc = mul i32 %v3_100060b0, 2048
  %v2_100060c0 = xor i32 %v1_100060b4, %v3_100060a8
  %v2_100060c4 = xor i32 %v1_100060bc, %v3_100060b0
  %v3_100060c8 = load i32, i32* @global_var_1001c324.115, align 4
  %v2_100060cc = xor i32 %v2_100060c0, %v2_100060c4
  %v1_100060d0 = udiv i32 %v2_100060c4, 256
  %v2_100060d4 = xor i32 %v2_100060cc, %v1_100060d0
  store i32 %v2_100060d4, i32* %r29.global-to-local, align 4
  store i32 %v3_100060c8, i32* @global_var_1001c320.113, align 4
  store i32 %v2_100060d4, i32* @global_var_1001c32c.112, align 4
  store i32 %v3_100060b8, i32* @global_var_1001c324.115, align 4
  store i32 %v3_100060a8, i32* @global_var_1001c328.114, align 4
  store i32 268460268, i32* @lr, align 4
  %v2_100060e8 = call i32 @function_10008948(i8* %v1_100060e8)
  %v0_100060ec = load i32, i32* %r29.global-to-local, align 4
  %v2_100060ec = urem i32 %v0_100060ec, %v2_100060e8
  store i32 %v2_100060ec, i32* %r29.global-to-local, align 4
  %v0_100060f8 = load i32, i32* @r1, align 4
  %v2_100060f8 = add i32 %v0_100060f8, %v2_100060ec
  %v1_100060fc = add i32 %v2_100060f8, 8
  %v2_100060fc = inttoptr i32 %v1_100060fc to i8*
  %v3_100060fc = load i8, i8* %v2_100060fc, align 1
  %v2_10006100 = load i32, i32* %r31.global-to-local, align 4
  %v3_10006100 = inttoptr i32 %v2_10006100 to i8*
  store i8 %v3_100060fc, i8* %v3_10006100, align 1
  %v0_10006104 = load i32, i32* %r31.global-to-local, align 4
  %v1_10006104 = add i32 %v0_10006104, 1
  store i32 %v1_10006104, i32* %r31.global-to-local, align 4
  %v1_10006108 = load i32, i32* %r26.global-to-local, align 4
  %v4_10006108 = icmp eq i32 %v1_10006104, %v1_10006108
  br i1 %v4_10006108, label %dec_label_pc_10006110, label %dec_label_pc_100060a8

dec_label_pc_10006110:                            ; preds = %dec_label_pc_100060a8, %dec_label_pc_10006034
  store i32 268460312, i32* @lr, align 4
  %v1_10006114 = call i32 @function_10008254(i32 33)
  ret i32 %v1_10006114

; uselistorder directives
  uselistorder i32 %v3_100060b0, { 1, 0 }
  uselistorder i32 %v3_100060a8, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_10008254, { 0, 3, 2, 1, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4 }
  uselistorder i32 (i32, i32*)* @function_1000822c, { 30, 28, 29, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i32 (i32)* @function_100082e0, { 0, 1, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_10006148() local_unnamed_addr {
dec_label_pc_10006148:
  %r0.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %v0_10006148 = load i32, i32* @r4, align 4
  %tmp19 = icmp slt i32 %v0_10006148, 1
  br i1 %tmp19, label %dec_label_pc_10006148.dec_label_pc_100061fc_crit_edge, label %dec_label_pc_10006160

dec_label_pc_10006148.dec_label_pc_100061fc_crit_edge: ; preds = %dec_label_pc_10006148
  %v0_1000620c.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100061fc

dec_label_pc_10006160:                            ; preds = %dec_label_pc_10006148
  %v3_10006170 = load i32, i32* @global_var_1001c32c.112, align 4
  store i32 %v3_10006170, i32* %r7.global-to-local, align 4
  %v3_10006174 = load i32, i32* @global_var_1001c328.114, align 4
  store i32 %v3_10006174, i32* %r5.global-to-local, align 4
  %v3_10006178 = load i32, i32* @global_var_1001c324.115, align 4
  store i32 %v3_10006178, i32* %r6.global-to-local, align 4
  %v3_1000617c = load i32, i32* @global_var_1001c320.113, align 4
  br label %dec_label_pc_100061a8

dec_label_pc_10006184:                            ; preds = %dec_label_pc_100061a8
  %v1_10006184 = load i32, i32* @r3, align 4
  %v2_10006184 = inttoptr i32 %v1_10006184 to i32*
  store i32 %v2_100061cc, i32* %v2_10006184, align 4
  %v0_10006188 = load i32, i32* @r4, align 4
  %v1_10006188 = add i32 %v0_10006188, -4
  store i32 %v1_10006188, i32* @r4, align 4
  %v0_1000618c = load i32, i32* @r3, align 4
  %v1_1000618c = add i32 %v0_1000618c, 4
  br label %dec_label_pc_10006190

dec_label_pc_10006190:                            ; preds = %dec_label_pc_100061e0, %dec_label_pc_10006184
  %v0_10006190 = phi i32 [ %v0_10006190.pr, %dec_label_pc_100061e0 ], [ %v1_10006188, %dec_label_pc_10006184 ]
  %storemerge = phi i32 [ %v1_100061e4, %dec_label_pc_100061e0 ], [ %v1_1000618c, %dec_label_pc_10006184 ]
  store i32 %storemerge, i32* @r3, align 4
  %v0_10006194 = load i32, i32* %r6.global-to-local, align 4
  %tmp20 = icmp slt i32 %v0_10006190, 1
  br i1 %tmp20, label %dec_label_pc_100061ec, label %dec_label_pc_1000619c

dec_label_pc_1000619c:                            ; preds = %dec_label_pc_10006190
  %v0_1000619c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1000619c, i32* %r6.global-to-local, align 4
  %v0_100061a0 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_100061a0, i32* %r5.global-to-local, align 4
  %v0_100061a4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_100061a4, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_100061a8

dec_label_pc_100061a8:                            ; preds = %dec_label_pc_10006160, %dec_label_pc_1000619c
  %v0_10006248 = phi i32 [ %v3_10006178, %dec_label_pc_10006160 ], [ %v0_1000619c, %dec_label_pc_1000619c ]
  %v0_1000622c = phi i32 [ %v3_10006174, %dec_label_pc_10006160 ], [ %v0_100061a0, %dec_label_pc_1000619c ]
  %v0_10006230 = phi i32 [ %v3_10006170, %dec_label_pc_10006160 ], [ %v0_100061a4, %dec_label_pc_1000619c ]
  %v0_10006210 = phi i32 [ %v3_1000617c, %dec_label_pc_10006160 ], [ %v0_10006194, %dec_label_pc_1000619c ]
  %v0_100061d8 = phi i32 [ %v0_10006148, %dec_label_pc_10006160 ], [ %v0_10006190, %dec_label_pc_1000619c ]
  %v2_100061a8 = icmp sgt i32 %v0_100061d8, 3
  %v1_100061ac = mul i32 %v0_10006210, 2048
  %v1_100061b0 = udiv i32 %v0_10006230, 524288
  %v2_100061b4 = xor i32 %v1_100061ac, %v0_10006210
  %v2_100061b8 = xor i32 %v1_100061b0, %v0_10006230
  %v2_100061c0 = xor i32 %v2_100061b8, %v2_100061b4
  %v1_100061c4 = udiv i32 %v2_100061b4, 256
  %v2_100061cc = xor i32 %v2_100061c0, %v1_100061c4
  store i32 %v2_100061cc, i32* %r0.global-to-local, align 4
  br i1 %v2_100061a8, label %dec_label_pc_10006184, label %dec_label_pc_100061d4

dec_label_pc_100061d4:                            ; preds = %dec_label_pc_100061a8
  %v3_100061bc = icmp eq i32 %v0_100061d8, 1
  store i32 %v2_100061cc, i32* %r0.global-to-local, align 4
  %v1_100061d8 = add i32 %v0_100061d8, -2
  store i32 %v1_100061d8, i32* @r4, align 4
  br i1 %v3_100061bc, label %dec_label_pc_10006210, label %dec_label_pc_100061e0

dec_label_pc_100061e0:                            ; preds = %dec_label_pc_100061d4
  %v1_100061e0 = trunc i32 %v2_100061cc to i16
  %v2_100061e0 = load i32, i32* @r3, align 4
  %v3_100061e0 = inttoptr i32 %v2_100061e0 to i16*
  store i16 %v1_100061e0, i16* %v3_100061e0, align 2
  %v0_100061e4 = load i32, i32* @r3, align 4
  %v1_100061e4 = add i32 %v0_100061e4, 2
  %v0_10006190.pr = load i32, i32* @r4, align 4
  br label %dec_label_pc_10006190

dec_label_pc_100061ec:                            ; preds = %dec_label_pc_10006190
  %v0_100061ec = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_100061ec, i32* @global_var_1001c32c.112, align 4
  %v0_100061f0 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_100061f0, i32* @global_var_1001c328.114, align 4
  %v0_100061f4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_100061f4, i32* @global_var_1001c324.115, align 4
  store i32 %v0_10006194, i32* @global_var_1001c320.113, align 4
  br label %dec_label_pc_100061fc

dec_label_pc_100061fc:                            ; preds = %dec_label_pc_10006148.dec_label_pc_100061fc_crit_edge, %dec_label_pc_100061ec
  %v0_1000620c = phi i32 [ %v0_1000620c.pre, %dec_label_pc_10006148.dec_label_pc_100061fc_crit_edge ], [ %storemerge, %dec_label_pc_100061ec ]
  ret i32 %v0_1000620c

dec_label_pc_10006210:                            ; preds = %dec_label_pc_100061d4
  store i32 %v2_100061cc, i32* %r0.global-to-local, align 4
  store i32 %v0_1000622c, i32* @global_var_1001c324.115, align 4
  store i32 %v0_10006230, i32* @global_var_1001c328.114, align 4
  store i32 %v2_100061cc, i32* @global_var_1001c32c.112, align 4
  store i32 %v0_10006248, i32* @global_var_1001c320.113, align 4
  %v1_1000624c = trunc i32 %v2_100061cc to i8
  %v2_1000624c = load i32, i32* @r3, align 4
  %v3_1000624c = inttoptr i32 %v2_1000624c to i8*
  store i8 %v1_1000624c, i8* %v3_1000624c, align 1
  %v0_10006250 = load i32, i32* @r3, align 4
  ret i32 %v0_10006250

; uselistorder directives
  uselistorder i32 %v2_100061cc, { 2, 1, 0, 3, 4, 6, 5 }
  uselistorder i32 %v0_10006210, { 1, 0 }
  uselistorder i32 %v0_10006230, { 1, 2, 0 }
  uselistorder i32 %v0_10006148, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 4, 2 }
  uselistorder label %dec_label_pc_100061fc, { 1, 0 }
  uselistorder label %dec_label_pc_100061a8, { 1, 0 }
}

define i32 @function_10006254(i32 %arg1) local_unnamed_addr {
dec_label_pc_10006254:
  store i32 %arg1, i32* @r31, align 4
  %v3_10006260 = icmp eq i32 %arg1, 0
  br i1 %v3_10006260, label %dec_label_pc_10006284, label %dec_label_pc_1000626c

dec_label_pc_1000626c:                            ; preds = %dec_label_pc_10006254
  %v1_1000626c = add i32 %arg1, 4
  %v2_1000626c = inttoptr i32 %v1_1000626c to i32*
  %v3_1000626c = load i32, i32* %v2_1000626c, align 4
  store i32 %v3_1000626c, i32* @r3, align 4
  %v3_10006270 = icmp eq i32 %v3_1000626c, 0
  br i1 %v3_10006270, label %dec_label_pc_1000627c, label %dec_label_pc_10006278

dec_label_pc_10006278:                            ; preds = %dec_label_pc_1000626c
  store i32 268460668, i32* @lr, align 4
  %v0_10006278 = call i32 @function_1000a224()
  %v0_1000627c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000627c

dec_label_pc_1000627c:                            ; preds = %dec_label_pc_1000626c, %dec_label_pc_10006278
  %v0_1000627c = phi i32 [ %arg1, %dec_label_pc_1000626c ], [ %v0_1000627c.pre, %dec_label_pc_10006278 ]
  store i32 %v0_1000627c, i32* @r3, align 4
  store i32 268460676, i32* @lr, align 4
  %v0_10006280 = call i32 @function_1000a224()
  br label %dec_label_pc_10006284

dec_label_pc_10006284:                            ; preds = %dec_label_pc_10006254, %dec_label_pc_1000627c
  %v0_10006294 = phi i32 [ 0, %dec_label_pc_10006254 ], [ %v0_10006280, %dec_label_pc_1000627c ]
  ret i32 %v0_10006294

; uselistorder directives
  uselistorder i32 %arg1, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10006284, { 1, 0 }
  uselistorder label %dec_label_pc_1000627c, { 1, 0 }
}

define i32 @function_10006298(i32 %arg1) local_unnamed_addr {
dec_label_pc_10006298:
  %cr4_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp60 = call i16 @__decompiler_undefined_function_1()
  %stack_var_-4308 = alloca i32, align 4
  %stack_var_-4312 = alloca i32, align 4
  %stack_var_-2096 = alloca i32, align 4
  %stack_var_-2108 = alloca i16, align 2
  %stack_var_-4284 = alloca i32, align 4
  %stack_var_-4300 = alloca i32, align 4
  %stack_var_-4143 = alloca i32, align 4
  %stack_var_-4144 = alloca i32, align 4
  %stack_var_-4156 = alloca i32, align 4
  %v0_1000629c = load i32, i32* @lr, align 4
  store i32 %v0_1000629c, i32* %r0.global-to-local, align 4
  %v0_100062a0 = call i32 @__asm_mfcr()
  %v0_100062a8 = load i32, i32* @r29, align 4
  store i32 %v0_100062a0, i32* @r29, align 4
  %v2_100062bc = ptrtoint i32* %stack_var_-4156 to i32
  %v2_100062c4 = ptrtoint i32* %stack_var_-4144 to i32
  store i32 %v2_100062c4, i32* %r26.global-to-local, align 4
  %v0_100062c8 = load i32, i32* %r0.global-to-local, align 4
  %v0_100062e8 = load i32, i32* @r28, align 4
  store i32 268460792, i32* @lr, align 4
  %v2_100062f4 = call i32 @function_1000a1b4(i32 1, i32 8)
  store i32 %v2_100062f4, i32* %r25.global-to-local, align 4
  %v0_100062fc = load i32, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006304.116 to i32), i32* @lr, align 4
  %v1_10006300 = inttoptr i32 %v0_100062fc to i8*
  %v2_10006300 = call i32 @function_10008948(i8* %v1_10006300)
  %v2_10006304 = ptrtoint i32* %stack_var_-4143 to i32
  store i32 %v2_10006304, i32* %r10.global-to-local, align 4
  %v1_10006308 = add i32 %v2_10006300, 1
  store i32 %v2_100062c4, i32* %r7.global-to-local, align 4
  %v1_10006314 = add i32 %v2_10006300, 2
  store i32 %v1_10006314, i32* %ctr.global-to-local, align 4
  %tmp94 = icmp sgt i32 %v1_10006308, -1
  br i1 %tmp94, label %dec_label_pc_1000633c.preheader, label %dec_label_pc_1000633c.preheader.thread

dec_label_pc_1000633c.preheader:                  ; preds = %dec_label_pc_10006298
  %v3_10006310 = icmp eq i32 %v1_10006308, 0
  %v1_1000633c13 = or i32 %v2_10006304, 1
  store i32 %v1_1000633c13, i32* %r11.global-to-local, align 4
  store i32 %v1_10006308, i32* %ctr.global-to-local, align 4
  br i1 %v3_10006310, label %dec_label_pc_1000636c, label %dec_label_pc_10006344.lr.ph

dec_label_pc_10006344.lr.ph:                      ; preds = %dec_label_pc_1000633c.preheader
  %v0_10006344.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10006344

dec_label_pc_10006328:                            ; preds = %dec_label_pc_10006354
  %v3_10006328 = inttoptr i32 %v2_10006328 to i8*
  store i8 %v2_10006344, i8* %v3_10006328, align 1
  %v0_1000632c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000632c = urem i32 %v0_1000632c, 256
  %v0_10006330 = load i32, i32* %r10.global-to-local, align 4
  %v1_10006330 = add i32 %v0_10006330, 1
  store i32 %v1_10006330, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006334

dec_label_pc_10006334:                            ; preds = %dec_label_pc_1000635c, %dec_label_pc_10006328
  %v0_10006338 = phi i32 [ %v0_10006338.pre, %dec_label_pc_1000635c ], [ %v1_10006330, %dec_label_pc_10006328 ]
  %v0_1000635420 = phi i32 [ 0, %dec_label_pc_1000635c ], [ %v1_1000632c, %dec_label_pc_10006328 ]
  %v0_10006334 = load i32, i32* @r29, align 4
  %v1_10006334 = add i32 %v0_10006334, 1
  store i32 %v1_10006334, i32* @r29, align 4
  store i32 %v0_10006338, i32* %r10.global-to-local, align 4
  %v1_1000633c = add i32 %v0_10006338, 1
  store i32 %v1_1000633c, i32* %r11.global-to-local, align 4
  %v0_10006340 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006340 = add i32 %v0_10006340, -1
  store i32 %v1_10006340, i32* %ctr.global-to-local, align 4
  %v2_10006340 = icmp eq i32 %v1_10006340, 0
  br i1 %v2_10006340, label %dec_label_pc_1000636c, label %dec_label_pc_10006344

dec_label_pc_10006344:                            ; preds = %dec_label_pc_10006344.lr.ph, %dec_label_pc_10006334
  %v2_10006328 = phi i32 [ %v2_10006304, %dec_label_pc_10006344.lr.ph ], [ %v0_10006338, %dec_label_pc_10006334 ]
  %v0_1000635c = phi i32 [ 0, %dec_label_pc_10006344.lr.ph ], [ %v0_1000635420, %dec_label_pc_10006334 ]
  %v0_10006344 = phi i32 [ %v0_10006344.pre, %dec_label_pc_10006344.lr.ph ], [ %v1_10006334, %dec_label_pc_10006334 ]
  %v1_10006344 = inttoptr i32 %v0_10006344 to i8*
  %v2_10006344 = load i8, i8* %v1_10006344, align 1
  %v3_10006344 = zext i8 %v2_10006344 to i32
  store i32 %v3_10006344, i32* %r0.global-to-local, align 4
  %v3_10006348 = icmp eq i8 %v2_10006344, 46
  br i1 %v3_10006348, label %dec_label_pc_1000635c, label %dec_label_pc_10006354

dec_label_pc_10006354:                            ; preds = %dec_label_pc_10006344
  %v3_1000634c = icmp eq i8 %v2_10006344, 0
  %v1_10006354 = add nsw i32 %v0_1000635c, 1
  store i32 %v1_10006354, i32* %r9.global-to-local, align 4
  br i1 %v3_1000634c, label %dec_label_pc_1000635c, label %dec_label_pc_10006328

dec_label_pc_1000635c:                            ; preds = %dec_label_pc_10006354, %dec_label_pc_10006344
  %v1_1000635c = trunc i32 %v0_1000635c to i8
  %v2_1000635c = load i32, i32* %r7.global-to-local, align 4
  %v3_1000635c = inttoptr i32 %v2_1000635c to i8*
  store i8 %v1_1000635c, i8* %v3_1000635c, align 1
  %v0_10006360 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10006360, i32* %r7.global-to-local, align 4
  %v0_10006338.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006334

dec_label_pc_1000636c:                            ; preds = %dec_label_pc_10006334, %dec_label_pc_1000633c.preheader.thread, %dec_label_pc_1000633c.preheader
  %v2_10006374 = phi i32 [ %v2_10006304, %dec_label_pc_1000633c.preheader ], [ %v2_10006304, %dec_label_pc_1000633c.preheader.thread ], [ %v0_10006338, %dec_label_pc_10006334 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10006374 = inttoptr i32 %v2_10006374 to i8*
  store i8 0, i8* %v3_10006374, align 1
  %v2_10006378 = ptrtoint i32* %stack_var_-4300 to i32
  store i32 -1, i32* @r30, align 4
  store i32 1, i32* %r27.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10006388.117 to i32), i32* @lr, align 4
  %v1_10006384 = bitcast i32* %stack_var_-4144 to i8*
  %v2_10006384 = call i32 @function_10008948(i8* %v1_10006384)
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000638c = load i32, i32* %r26.global-to-local, align 4
  %v2_1000638c = add i32 %v0_1000638c, %v2_10006384
  store i32 %v2_1000638c, i32* %r29.global-to-local, align 4
  %v0_10006398 = load i32, i32* @r30, align 4
  %v3_10006398 = icmp eq i32 %v0_10006398, -1
  store i1 %v3_10006398, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %stack_var_-4300, align 4
  %v2_100063a0 = ptrtoint i32* %stack_var_-4284 to i32
  store i32 %v2_100063a0, i32* @r31, align 4
  %v2_100063a8 = ptrtoint i16* %stack_var_-2108 to i32
  store i32 %v2_100063a8, i32* %r19.global-to-local, align 4
  store i32 268460980, i32* @lr, align 4
  %v2_100063b0 = call i32 @function_10008948(i8* %v1_10006384)
  %v1_100063b4 = add i32 %v2_100063b0, 17
  store i32 %v1_100063b4, i32* %r23.global-to-local, align 4
  %v0_100063b8 = call i32 @function_10005f74()
  %v1_100063b8 = sext i32 %v0_100063b8 to i64
  store i32 16, i32* @r4, align 4
  %v5_100063cc = mul nuw nsw i64 %v1_100063b8, 2147516417
  store i32 %v2_10006378, i32* @r3, align 4
  %v2_100063d4 = ptrtoint i32* %stack_var_-2096 to i32
  store i32 %v2_100063d4, i32* %r20.global-to-local, align 4
  %v1_100063d82 = udiv i64 %v5_100063cc, 140737488355328
  %v1_100063d8 = trunc i64 %v1_100063d82 to i32
  store i32 %v1_100063d8, i32* %r0.global-to-local, align 4
  %v2_100063dc = add i32 %v1_100063d8, %v0_100063b8
  store i32 %v2_100063dc, i32* %r9.global-to-local, align 4
  %v1_100063e0 = urem i32 %v2_100063dc, 65536
  store i32 %v1_100063e0, i32* %r22.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100063e8.119 to i32), i32* @lr, align 4
  %v0_100063e4 = call i32 @function_100089f0()
  store i32 2, i32* %stack_var_-4300, align 4
  store i32 1, i32* %r10.global-to-local, align 4
  store i32 134744072, i32* %r11.global-to-local, align 4
  %v0_100063fc = load i32, i32* %r29.global-to-local, align 4
  store i32 53, i32* %r9.global-to-local, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v0_10006414 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10006414, i32* %stack_var_-4156, align 4
  %v3_1000641c = add i32 %v0_100063fc, 3
  %v4_1000641c = inttoptr i32 %v3_1000641c to i16*
  store i16 1, i16* %v4_1000641c, align 2
  %v0_10006420 = load i32, i32* %r10.global-to-local, align 4
  %v1_10006420 = trunc i32 %v0_10006420 to i16
  %v2_10006420 = load i32, i32* %r29.global-to-local, align 4
  %v3_10006420 = add i32 %v2_10006420, 1
  %v4_10006420 = inttoptr i32 %v3_10006420 to i16*
  store i16 %v1_10006420, i16* %v4_10006420, align 2
  %v2_100064c4 = ptrtoint i32* %stack_var_-4312 to i32
  %v2_100064f8 = ptrtoint i32* %stack_var_-4308 to i32
  %v1_100065e8 = bitcast i32* %stack_var_-2096 to i8*
  %v4_10006600 = zext i16 %tmp60 to i32
  %v3_10006604 = icmp eq i16 %tmp60, 0
  br label %dec_label_pc_10006424

dec_label_pc_10006424:                            ; preds = %dec_label_pc_10006564, %dec_label_pc_1000636c
  %v0_10006424 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10006424, label %dec_label_pc_10006430, label %dec_label_pc_10006428

dec_label_pc_10006428:                            ; preds = %dec_label_pc_10006424
  store i32 ptrtoint ([3 x i8]* @global_var_10006430.120 to i32), i32* @lr, align 4
  %v0_1000642c = call i32 @function_10009108()
  br label %dec_label_pc_10006430

dec_label_pc_10006430:                            ; preds = %dec_label_pc_10006424, %dec_label_pc_10006428
  store i32 268461120, i32* @lr, align 4
  %v3_1000643c = call i32 @function_10009e58(i32 2, i32 2, i32 0)
  store i32 %v3_1000643c, i32* @r3, align 4
  %v3_10006440 = icmp eq i32 %v3_1000643c, -1
  store i1 %v3_10006440, i1* %cr4_eq.global-to-local, align 1
  store i32 %v3_1000643c, i32* @r30, align 4
  br i1 %v3_10006440, label %dec_label_pc_1000656c, label %dec_label_pc_1000644c

dec_label_pc_1000644c:                            ; preds = %dec_label_pc_10006430
  store i32 268461144, i32* @lr, align 4
  %v0_10006454 = call i32 @function_10009c58()
  %v3_10006458 = icmp eq i32 %v0_10006454, -1
  br i1 %v3_10006458, label %dec_label_pc_1000656c, label %dec_label_pc_10006460

dec_label_pc_10006460:                            ; preds = %dec_label_pc_1000644c
  %v0_10006460 = load i32, i32* @r30, align 4
  %v0_10006468 = load i32, i32* %r23.global-to-local, align 4
  store i32 268461172, i32* @lr, align 4
  %v4_10006470 = call i32 @function_10009da4(i32 %v0_10006460, i32 %v2_100062bc, i32 %v0_10006468, i32 16384)
  %v3_10006474 = icmp eq i32 %v4_10006470, -1
  br i1 %v3_10006474, label %dec_label_pc_1000656c, label %dec_label_pc_1000647c

dec_label_pc_1000647c:                            ; preds = %dec_label_pc_10006460
  %v0_1000647c = load i32, i32* @r30, align 4
  store i32 %v0_1000647c, i32* @r4, align 4
  store i32 268461200, i32* @lr, align 4
  %v2_1000648c = call i32 @function_10009020(i32 3)
  %v0_10006490 = load i32, i32* @r30, align 4
  store i32 %v0_10006490, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_100064a4.121 to i32), i32* @lr, align 4
  %v2_100064a0 = call i32 @function_10009020(i32 4)
  store i32 32, i32* %r0.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_100064b4139 = load i32, i32* @r31, align 4
  %v4_100064b4141 = inttoptr i32 %v2_100064b4139 to i32*
  store i32 0, i32* %v4_100064b4141, align 4
  %v0_100064b8142 = load i32, i32* %r9.global-to-local, align 4
  %v1_100064b8143 = add i32 %v0_100064b8142, 4
  store i32 %v1_100064b8143, i32* %r9.global-to-local, align 4
  %v0_100064bc144 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100064bc145 = add i32 %v0_100064bc144, -1
  store i32 %v1_100064bc145, i32* %ctr.global-to-local, align 4
  %v2_100064bc146 = icmp eq i32 %v1_100064bc145, 0
  br i1 %v2_100064bc146, label %dec_label_pc_100064c0, label %dec_label_pc_100064b4.dec_label_pc_100064b4_crit_edge

dec_label_pc_100064b4.dec_label_pc_100064b4_crit_edge: ; preds = %dec_label_pc_1000647c, %dec_label_pc_100064b4.dec_label_pc_100064b4_crit_edge
  %v1_100064b8147 = phi i32 [ %v1_100064b8, %dec_label_pc_100064b4.dec_label_pc_100064b4_crit_edge ], [ %v1_100064b8143, %dec_label_pc_1000647c ]
  %v0_100064b4.pre = load i32, i32* %r11.global-to-local, align 4
  %v2_100064b4 = load i32, i32* @r31, align 4
  %v3_100064b4 = add i32 %v2_100064b4, %v1_100064b8147
  %v4_100064b4 = inttoptr i32 %v3_100064b4 to i32*
  store i32 %v0_100064b4.pre, i32* %v4_100064b4, align 4
  %v0_100064b8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100064b8 = add i32 %v0_100064b8, 4
  store i32 %v1_100064b8, i32* %r9.global-to-local, align 4
  %v0_100064bc = load i32, i32* %ctr.global-to-local, align 4
  %v1_100064bc = add i32 %v0_100064bc, -1
  store i32 %v1_100064bc, i32* %ctr.global-to-local, align 4
  %v2_100064bc = icmp eq i32 %v1_100064bc, 0
  br i1 %v2_100064bc, label %dec_label_pc_100064c0, label %dec_label_pc_100064b4.dec_label_pc_100064b4_crit_edge

dec_label_pc_100064c0:                            ; preds = %dec_label_pc_100064b4.dec_label_pc_100064b4_crit_edge, %dec_label_pc_1000647c
  %v0_100064c0 = load i32, i32* @r30, align 4
  %v1_100064c0 = call i32 @__asm_rlwinm(i32 %v0_100064c0, i32 29, i32 3, i32 29)
  store i32 %v1_100064c0, i32* %r9.global-to-local, align 4
  store i32 %v2_100064c4, i32* %r0.global-to-local, align 4
  %v2_100064c8 = add i32 %v1_100064c0, %v2_100064c4
  store i32 %v2_100064c8, i32* %r29.global-to-local, align 4
  %v0_100064cc = load i32, i32* @r30, align 4
  %v1_100064cc = urem i32 %v0_100064cc, 32
  store i32 %v1_100064cc, i32* %r28.global-to-local, align 4
  %v1_100064d0 = add i32 %v2_100064c8, 28
  %v2_100064d0 = inttoptr i32 %v1_100064d0 to i32*
  %v3_100064d0 = load i32, i32* %v2_100064d0, align 4
  %v3_100064d8 = shl i32 1, %v1_100064cc
  %v1_100064dc = add i32 %v0_100064cc, 1
  %v2_100064e0 = or i32 %v3_100064d8, %v3_100064d0
  store i32 %v2_100064e0, i32* %r9.global-to-local, align 4
  store i32 %v2_100064e0, i32* %v2_100064d0, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  store i32 %v2_100064f8, i32* %r7.global-to-local, align 4
  store i32 5, i32* %stack_var_-4308, align 4
  store i32 268461320, i32* @lr, align 4
  %v5_10006504 = call i32 @function_100093d0(i32 %v1_100064dc, i32 %v2_100063a0, i32 0, i32 0, i32 %v2_100064f8)
  %v3_10006508 = icmp eq i32 %v5_10006504, -1
  br i1 %v3_10006508, label %dec_label_pc_1000657c, label %dec_label_pc_10006510

dec_label_pc_10006510:                            ; preds = %dec_label_pc_100064c0
  %v3_10006510 = icmp eq i32 %v5_10006504, 0
  br i1 %v3_10006510, label %dec_label_pc_1000655c, label %dec_label_pc_10006518

dec_label_pc_10006518:                            ; preds = %dec_label_pc_10006510
  %v0_10006518 = load i32, i32* %r29.global-to-local, align 4
  %v1_10006518 = add i32 %v0_10006518, 28
  %v2_10006518 = inttoptr i32 %v1_10006518 to i32*
  %v3_10006518 = load i32, i32* %v2_10006518, align 4
  %v1_1000651c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000651c = urem i32 %v1_1000651c, 32
  %v3_1000651c = sub i32 0, %v1_1000651c
  %v4_1000651c = urem i32 %v3_1000651c, 32
  %v5_1000651c = shl i32 %v3_10006518, %v4_1000651c
  %v6_1000651c = xor i32 %v4_1000651c, 31
  %v7_1000651c = lshr i32 %v3_10006518, %v6_1000651c
  %v8_1000651c = udiv i32 %v7_1000651c, 2
  %v9_1000651c = or i32 %v8_1000651c, %v5_1000651c
  %v10_1000651c = and i32 %v1_1000651c, 32
  %v11_1000651c = icmp ne i32 %v10_1000651c, 0
  %v12_1000651c = lshr i32 -1, %v2_1000651c
  %v13_1000651c = select i1 %v11_1000651c, i32 0, i32 %v12_1000651c
  %v14_1000651c = and i32 %v9_1000651c, %v13_1000651c
  %v15_1000651c = ashr i32 %v3_10006518, 31
  %v16_1000651c = sub i32 -1, %v13_1000651c
  %v17_1000651c = and i32 %v15_1000651c, %v16_1000651c
  %v18_1000651c = or i32 %v14_1000651c, %v17_1000651c
  store i32 %v18_1000651c, i32* %r0.global-to-local, align 4
  %v1_10006520 = urem i32 %v18_1000651c, 2
  store i32 %v1_10006520, i32* %r9.global-to-local, align 4
  %v3_10006520 = icmp eq i32 %v1_10006520, 0
  br i1 %v3_10006520, label %dec_label_pc_1000657c, label %dec_label_pc_10006528

dec_label_pc_10006528:                            ; preds = %dec_label_pc_10006518
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_1000653c = load i32, i32* @r30, align 4
  store i32 268461380, i32* @lr, align 4
  %v6_10006540 = call i32 @function_10009d64(i32 %v0_1000653c, i32 %v2_100063a8, i32 2048, i32 16384, i32 0, i32 0)
  store i32 %v6_10006540, i32* %r29.global-to-local, align 4
  %v0_10006548 = load i32, i32* %r26.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006550.122 to i32), i32* @lr, align 4
  %v1_1000654c = inttoptr i32 %v0_10006548 to i8*
  %v2_1000654c = call i32 @function_10008948(i8* %v1_1000654c)
  %v1_10006550 = add i32 %v2_1000654c, 17
  %v2_10006554 = icmp ult i32 %v6_10006540, %v1_10006550
  br i1 %v2_10006554, label %dec_label_pc_1000655c, label %dec_label_pc_100065e0

dec_label_pc_1000655c:                            ; preds = %dec_label_pc_100065e0, %dec_label_pc_10006528, %dec_label_pc_10006600, %dec_label_pc_10006510
  %v0_1000655c = load i32, i32* %r27.global-to-local, align 4
  %v3_1000655c = icmp eq i32 %v0_1000655c, 5
  br i1 %v3_1000655c, label %dec_label_pc_1000657c, label %dec_label_pc_10006564

dec_label_pc_10006564:                            ; preds = %dec_label_pc_1000656c, %dec_label_pc_1000655c
  %v0_10006564 = phi i32 [ %v0_10006574, %dec_label_pc_1000656c ], [ %v0_1000655c, %dec_label_pc_1000655c ]
  %v1_10006564 = add i32 %v0_10006564, 1
  store i32 %v1_10006564, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10006424

dec_label_pc_1000656c:                            ; preds = %dec_label_pc_10006460, %dec_label_pc_1000644c, %dec_label_pc_10006430
  store i32 268461428, i32* @lr, align 4
  %v1_10006570 = call i32 @function_1000a950(i32 1)
  %v0_10006574 = load i32, i32* %r27.global-to-local, align 4
  %v3_10006574 = icmp eq i32 %v0_10006574, 5
  br i1 %v3_10006574, label %dec_label_pc_1000657c, label %dec_label_pc_10006564

dec_label_pc_1000657c:                            ; preds = %dec_label_pc_1000656c, %dec_label_pc_1000655c, %dec_label_pc_10006518, %dec_label_pc_100064c0, %dec_label_pc_1000660c.backedge, %dec_label_pc_1000660c.preheader
  store i32 268461444, i32* @lr, align 4
  %v0_10006580 = call i32 @function_10009108()
  %v0_10006584 = load i32, i32* %r25.global-to-local, align 4
  %v1_10006584 = inttoptr i32 %v0_10006584 to i8*
  %v2_10006584 = load i8, i8* %v1_10006584, align 1
  %v3_10006584 = zext i8 %v2_10006584 to i32
  store i32 %v3_10006584, i32* %r0.global-to-local, align 4
  %v3_10006588 = icmp eq i8 %v2_10006584, 0
  br i1 %v3_10006588, label %dec_label_pc_100066f8, label %dec_label_pc_10006590

dec_label_pc_10006590:                            ; preds = %dec_label_pc_1000657c, %dec_label_pc_10006708
  %v0_10006594 = phi i32 [ %v0_10006584, %dec_label_pc_1000657c ], [ 0, %dec_label_pc_10006708 ]
  store i32 %v0_100062c8, i32* %r0.global-to-local, align 4
  %v1_100065a8 = call %0 @__asm_mtcrf(i32 8, i32 %v0_100062a0)
  store i32 %v0_100062e8, i32* %r28.global-to-local, align 4
  store i32 %v0_100062a8, i32* %r29.global-to-local, align 4
  ret i32 %v0_10006594

dec_label_pc_100065e0:                            ; preds = %dec_label_pc_10006528
  store i32 %v2_100063d4, i32* %r26.global-to-local, align 4
  store i32 268461548, i32* @lr, align 4
  %v2_100065e8 = call i32 @function_10008948(i8* %v1_100065e8)
  %v3_100065ec = load i16, i16* %stack_var_-2108, align 2
  %v4_100065ec = sext i16 %v3_100065ec to i32
  store i32 %v4_100065ec, i32* %r0.global-to-local, align 4
  %v0_100065f0 = load i32, i32* %r20.global-to-local, align 4
  %v1_100065f4 = load i32, i32* %r22.global-to-local, align 4
  %v4_100065f4 = icmp eq i32 %v4_100065ec, %v1_100065f4
  %v2_100065f0 = add i32 %v2_100065e8, 5
  %v1_100065f8 = add i32 %v2_100065f0, %v0_100065f0
  br i1 %v4_100065f4, label %dec_label_pc_10006600, label %dec_label_pc_1000655c

dec_label_pc_10006600:                            ; preds = %dec_label_pc_100065e0
  store i32 %v4_10006600, i32* %r28.global-to-local, align 4
  br i1 %v3_10006604, label %dec_label_pc_1000655c, label %dec_label_pc_1000660c.preheader

dec_label_pc_1000660c.preheader:                  ; preds = %dec_label_pc_10006600
  %v1_1000660c8 = add nsw i32 %v4_10006600, -1
  store i32 %v1_1000660c8, i32* %r0.global-to-local, align 4
  %v1_100066149 = urem i32 %v1_1000660c8, 65536
  store i32 %v1_100066149, i32* %r28.global-to-local, align 4
  store i32 65535, i32* %r9.global-to-local, align 4
  %v4_1000661c11 = icmp eq i32 %v1_100066149, 65535
  br i1 %v4_1000661c11, label %dec_label_pc_1000657c, label %dec_label_pc_10006624

dec_label_pc_10006624:                            ; preds = %dec_label_pc_1000660c.preheader, %dec_label_pc_1000660c.backedge
  %v0_1000660c49 = phi i32 [ %v1_10006614, %dec_label_pc_1000660c.backedge ], [ %v1_100066149, %dec_label_pc_1000660c.preheader ]
  %v0_10006680 = phi i32 [ %storemerge, %dec_label_pc_1000660c.backedge ], [ %v1_100065f8, %dec_label_pc_1000660c.preheader ]
  store i32 %v0_10006680, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 1, i32* %r10.global-to-local, align 4
  %v1_10006630110 = inttoptr i32 %v0_10006680 to i8*
  %v2_10006630111 = load i8, i8* %v1_10006630110, align 1
  %v3_10006630112 = zext i8 %v2_10006630111 to i32
  store i32 %v3_10006630112, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  %v3_10006638113 = icmp eq i8 %v2_10006630111, 0
  br i1 %v3_10006638113, label %dec_label_pc_1000667c, label %dec_label_pc_10006648.preheader

dec_label_pc_10006648.preheader:                  ; preds = %dec_label_pc_10006624, %dec_label_pc_10006718
  %v2_10006630119 = phi i8 [ %v2_10006630, %dec_label_pc_10006718 ], [ %v2_10006630111, %dec_label_pc_10006624 ]
  %v3_10006640122.in = phi i8 [ %v2_10006630, %dec_label_pc_10006718 ], [ %v2_10006630111, %dec_label_pc_10006624 ]
  %v1_1000663c121.in = phi i32 [ %v3_10006630, %dec_label_pc_10006718 ], [ %v3_10006630112, %dec_label_pc_10006624 ]
  %v1_10006634120 = phi i32 [ %v1_10006634, %dec_label_pc_10006718 ], [ 1, %dec_label_pc_10006624 ]
  %v0_10006630118 = phi i32 [ %v1_1000671c, %dec_label_pc_10006718 ], [ %v0_10006680, %dec_label_pc_10006624 ]
  %v0_10006634117 = phi i32 [ %v0_1000663428, %dec_label_pc_10006718 ], [ 0, %dec_label_pc_10006624 ]
  %v0_1000667c116 = phi i32 [ %v2_10006718, %dec_label_pc_10006718 ], [ 1, %dec_label_pc_10006624 ]
  br label %dec_label_pc_10006648

dec_label_pc_10006648:                            ; preds = %dec_label_pc_10006648.preheader, %dec_label_pc_1000664c
  %v1_10006718 = phi i32 [ 0, %dec_label_pc_1000664c ], [ %v1_10006634120, %dec_label_pc_10006648.preheader ]
  %v0_10006658.in = phi i32 [ %v3_10006668, %dec_label_pc_1000664c ], [ %v1_1000663c121.in, %dec_label_pc_10006648.preheader ]
  %v0_1000671c = phi i32 [ %v2_10006664, %dec_label_pc_1000664c ], [ %v0_10006630118, %dec_label_pc_10006648.preheader ]
  %v0_10006648.in = phi i8 [ %v2_10006668, %dec_label_pc_1000664c ], [ %v3_10006640122.in, %dec_label_pc_10006648.preheader ]
  %v1_10006648.in = phi i8 [ %v2_10006668, %dec_label_pc_1000664c ], [ %v2_10006630119, %dec_label_pc_10006648.preheader ]
  %v0_1000663428 = phi i32 [ 1, %dec_label_pc_1000664c ], [ %v0_10006634117, %dec_label_pc_10006648.preheader ]
  %v0_10006648 = icmp eq i8 %v0_10006648.in, -65
  %v1_10006648 = icmp ult i8 %v1_10006648.in, -65
  %v2_10006648 = or i1 %v0_10006648, %v1_10006648
  br i1 %v2_10006648, label %dec_label_pc_10006718, label %dec_label_pc_1000664c

dec_label_pc_1000664c:                            ; preds = %dec_label_pc_10006648
  %v0_10006658 = mul nuw nsw i32 %v0_10006658.in, 256
  %v1_1000664c = add i32 %v0_1000671c, 1
  %v2_1000664c = inttoptr i32 %v1_1000664c to i8*
  %v3_1000664c = load i8, i8* %v2_1000664c, align 1
  %v4_1000664c = zext i8 %v3_1000664c to i32
  store i32 1, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_10006658 = or i32 %v4_1000664c, -49152
  %v1_10006660 = add nsw i32 %v2_10006658, %v0_10006658
  %v0_10006664 = load i32, i32* %r19.global-to-local, align 4
  %v2_10006664 = add i32 %v1_10006660, %v0_10006664
  store i32 %v2_10006664, i32* %r9.global-to-local, align 4
  %v1_10006668 = inttoptr i32 %v2_10006664 to i8*
  %v2_10006668 = load i8, i8* %v1_10006668, align 1
  %v3_10006668 = zext i8 %v2_10006668 to i32
  store i32 %v3_10006668, i32* %r0.global-to-local, align 4
  %v3_1000666c = icmp eq i8 %v2_10006668, 0
  br i1 %v3_1000666c, label %dec_label_pc_1000667c, label %dec_label_pc_10006648

dec_label_pc_1000667c:                            ; preds = %dec_label_pc_10006624, %dec_label_pc_10006718, %dec_label_pc_1000664c
  %v0_1000667c103 = phi i32 [ %v0_1000667c116, %dec_label_pc_1000664c ], [ 1, %dec_label_pc_10006624 ], [ %v2_10006718, %dec_label_pc_10006718 ]
  %v1_1000667c = phi i32 [ 1, %dec_label_pc_1000664c ], [ 0, %dec_label_pc_10006624 ], [ %v0_1000663428, %dec_label_pc_10006718 ]
  %v2_1000667c = add i32 %v1_1000667c, %v0_1000667c103
  store i32 %v2_1000667c, i32* %r10.global-to-local, align 4
  %v2_10006680 = add i32 %v2_1000667c, %v0_10006680
  %v3_10006680 = inttoptr i32 %v2_10006680 to i16*
  %v4_10006680 = load i16, i16* %v3_10006680, align 2
  %v5_10006680 = zext i16 %v4_10006680 to i32
  store i32 %v5_10006680, i32* %r0.global-to-local, align 4
  %v1_10006688 = add i32 %v2_10006680, 10
  store i32 %v1_10006688, i32* @r29, align 4
  %v3_1000668c = icmp eq i16 %v4_10006680, 1
  br i1 %v3_1000668c, label %dec_label_pc_10006730, label %dec_label_pc_10006694

dec_label_pc_10006694:                            ; preds = %dec_label_pc_10006730, %dec_label_pc_1000667c
  store i32 %v1_10006688, i32* %r9.global-to-local, align 4
  %v1_100066a0124 = inttoptr i32 %v1_10006688 to i8*
  %v2_100066a0125 = load i8, i8* %v1_100066a0124, align 1
  %v3_100066a0126 = zext i8 %v2_100066a0125 to i32
  store i32 %v3_100066a0126, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  %v3_100066a8127 = icmp eq i8 %v2_100066a0125, 0
  %v1_100066ac128 = mul nuw nsw i32 %v3_100066a0126, 256
  store i32 %v1_100066ac128, i32* %r10.global-to-local, align 4
  br i1 %v3_100066a8127, label %dec_label_pc_100066ec, label %dec_label_pc_100066b8.preheader

dec_label_pc_100066b8.preheader:                  ; preds = %dec_label_pc_10006694, %dec_label_pc_10006724
  %v2_100066a0133 = phi i8 [ %v2_100066a0, %dec_label_pc_10006724 ], [ %v2_100066a0125, %dec_label_pc_10006694 ]
  %v3_100066b0136.in = phi i8 [ %v2_100066a0, %dec_label_pc_10006724 ], [ %v2_100066a0125, %dec_label_pc_10006694 ]
  %v1_100066ac135 = phi i32 [ %v1_100066ac, %dec_label_pc_10006724 ], [ %v1_100066ac128, %dec_label_pc_10006694 ]
  %v1_100066a4134 = phi i32 [ %v1_100066a4, %dec_label_pc_10006724 ], [ 1, %dec_label_pc_10006694 ]
  %v0_100066a0132 = phi i32 [ %v1_10006728, %dec_label_pc_10006724 ], [ %v1_10006688, %dec_label_pc_10006694 ]
  %v0_100066a4131 = phi i32 [ %v0_100066a438, %dec_label_pc_10006724 ], [ 0, %dec_label_pc_10006694 ]
  %v0_100066ec130 = phi i32 [ %v2_10006724, %dec_label_pc_10006724 ], [ 1, %dec_label_pc_10006694 ]
  br label %dec_label_pc_100066b8

dec_label_pc_100066b8:                            ; preds = %dec_label_pc_100066b8.preheader, %dec_label_pc_100066bc
  %v1_10006724 = phi i32 [ 0, %dec_label_pc_100066bc ], [ %v1_100066a4134, %dec_label_pc_100066b8.preheader ]
  %v0_100066c8 = phi i32 [ %v1_100066e0, %dec_label_pc_100066bc ], [ %v1_100066ac135, %dec_label_pc_100066b8.preheader ]
  %v0_10006728 = phi i32 [ %v2_100066d4, %dec_label_pc_100066bc ], [ %v0_100066a0132, %dec_label_pc_100066b8.preheader ]
  %v0_100066b8.in = phi i8 [ %v2_100066d8, %dec_label_pc_100066bc ], [ %v3_100066b0136.in, %dec_label_pc_100066b8.preheader ]
  %v1_100066b8.in = phi i8 [ %v2_100066d8, %dec_label_pc_100066bc ], [ %v2_100066a0133, %dec_label_pc_100066b8.preheader ]
  %v0_100066a438 = phi i32 [ 1, %dec_label_pc_100066bc ], [ %v0_100066a4131, %dec_label_pc_100066b8.preheader ]
  %v0_100066b8 = icmp eq i8 %v0_100066b8.in, -65
  %v1_100066b8 = icmp ult i8 %v1_100066b8.in, -65
  %v2_100066b8 = or i1 %v0_100066b8, %v1_100066b8
  br i1 %v2_100066b8, label %dec_label_pc_10006724, label %dec_label_pc_100066bc

dec_label_pc_100066bc:                            ; preds = %dec_label_pc_100066b8
  %v1_100066bc = add i32 %v0_10006728, 1
  %v2_100066bc = inttoptr i32 %v1_100066bc to i8*
  %v3_100066bc = load i8, i8* %v2_100066bc, align 1
  %v4_100066bc = zext i8 %v3_100066bc to i32
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_100066c8 = or i32 %v4_100066bc, -49152
  %v1_100066d0 = add nsw i32 %v2_100066c8, %v0_100066c8
  %v0_100066d4 = load i32, i32* %r19.global-to-local, align 4
  %v2_100066d4 = add i32 %v1_100066d0, %v0_100066d4
  store i32 %v2_100066d4, i32* %r9.global-to-local, align 4
  %v1_100066d8 = inttoptr i32 %v2_100066d4 to i8*
  %v2_100066d8 = load i8, i8* %v1_100066d8, align 1
  %v3_100066d8 = zext i8 %v2_100066d8 to i32
  store i32 %v3_100066d8, i32* %r0.global-to-local, align 4
  %v3_100066dc = icmp eq i8 %v2_100066d8, 0
  %v1_100066e0 = mul nuw nsw i32 %v3_100066d8, 256
  store i32 %v1_100066e0, i32* %r10.global-to-local, align 4
  br i1 %v3_100066dc, label %dec_label_pc_100066ec, label %dec_label_pc_100066b8

dec_label_pc_100066ec:                            ; preds = %dec_label_pc_10006694, %dec_label_pc_10006724, %dec_label_pc_100066bc
  %v0_100066ec109 = phi i32 [ %v0_100066ec130, %dec_label_pc_100066bc ], [ 1, %dec_label_pc_10006694 ], [ %v2_10006724, %dec_label_pc_10006724 ]
  %v1_100066ec = phi i32 [ 1, %dec_label_pc_100066bc ], [ 0, %dec_label_pc_10006694 ], [ %v0_100066a438, %dec_label_pc_10006724 ]
  %v2_100066ec = add i32 %v1_100066ec, %v0_100066ec109
  %v2_100066f0 = add i32 %v2_100066ec, %v1_10006688
  br label %dec_label_pc_1000660c.backedge

dec_label_pc_1000660c.backedge:                   ; preds = %dec_label_pc_100066ec, %dec_label_pc_1000679c
  %v0_1000660c = phi i32 [ %v0_1000660c49, %dec_label_pc_100066ec ], [ %v0_1000660c.pre, %dec_label_pc_1000679c ]
  %storemerge = phi i32 [ %v2_100066f0, %dec_label_pc_100066ec ], [ %v2_100067a0, %dec_label_pc_1000679c ]
  %v1_1000660c = add i32 %v0_1000660c, -1
  store i32 %v1_1000660c, i32* %r0.global-to-local, align 4
  %v1_10006614 = urem i32 %v1_1000660c, 65536
  store i32 %v1_10006614, i32* %r28.global-to-local, align 4
  store i32 65535, i32* %r9.global-to-local, align 4
  %v4_1000661c = icmp eq i32 %v1_10006614, 65535
  br i1 %v4_1000661c, label %dec_label_pc_1000657c, label %dec_label_pc_10006624

dec_label_pc_100066f8:                            ; preds = %dec_label_pc_1000657c
  %v1_100066f8 = add i32 %v0_10006584, 4
  %v2_100066f8 = inttoptr i32 %v1_100066f8 to i32*
  %v3_100066f8 = load i32, i32* %v2_100066f8, align 4
  store i32 %v3_100066f8, i32* @r3, align 4
  %v3_100066fc = icmp eq i32 %v3_100066f8, 0
  br i1 %v3_100066fc, label %dec_label_pc_10006708, label %dec_label_pc_10006704

dec_label_pc_10006704:                            ; preds = %dec_label_pc_100066f8
  store i32 268461832, i32* @lr, align 4
  %v0_10006704 = call i32 @function_1000a224()
  %v0_10006708.pre = load i32, i32* %r25.global-to-local, align 4
  br label %dec_label_pc_10006708

dec_label_pc_10006708:                            ; preds = %dec_label_pc_100066f8, %dec_label_pc_10006704
  %v0_10006708 = phi i32 [ %v0_10006584, %dec_label_pc_100066f8 ], [ %v0_10006708.pre, %dec_label_pc_10006704 ]
  store i32 %v0_10006708, i32* @r3, align 4
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 268461844, i32* @lr, align 4
  %v0_10006710 = call i32 @function_1000a224()
  br label %dec_label_pc_10006590

dec_label_pc_10006718:                            ; preds = %dec_label_pc_10006648
  %v2_10006718 = add i32 %v1_10006718, %v0_1000667c116
  store i32 %v2_10006718, i32* %r10.global-to-local, align 4
  %v1_1000671c = add i32 %v0_1000671c, 1
  store i32 %v1_1000671c, i32* %r9.global-to-local, align 4
  %v1_10006630 = inttoptr i32 %v1_1000671c to i8*
  %v2_10006630 = load i8, i8* %v1_10006630, align 1
  %v3_10006630 = zext i8 %v2_10006630 to i32
  store i32 %v3_10006630, i32* %r0.global-to-local, align 4
  %v1_10006634 = xor i32 %v0_1000663428, 1
  store i32 %v1_10006634, i32* %r11.global-to-local, align 4
  %v3_10006638 = icmp eq i8 %v2_10006630, 0
  br i1 %v3_10006638, label %dec_label_pc_1000667c, label %dec_label_pc_10006648.preheader

dec_label_pc_10006724:                            ; preds = %dec_label_pc_100066b8
  %v2_10006724 = add i32 %v1_10006724, %v0_100066ec130
  %v1_10006728 = add i32 %v0_10006728, 1
  store i32 %v1_10006728, i32* %r9.global-to-local, align 4
  %v1_100066a0 = inttoptr i32 %v1_10006728 to i8*
  %v2_100066a0 = load i8, i8* %v1_100066a0, align 1
  %v3_100066a0 = zext i8 %v2_100066a0 to i32
  store i32 %v3_100066a0, i32* %r0.global-to-local, align 4
  %v1_100066a4 = xor i32 %v0_100066a438, 1
  store i32 %v1_100066a4, i32* %r11.global-to-local, align 4
  %v3_100066a8 = icmp eq i8 %v2_100066a0, 0
  %v1_100066ac = mul nuw nsw i32 %v3_100066a0, 256
  store i32 %v1_100066ac, i32* %r10.global-to-local, align 4
  br i1 %v3_100066a8, label %dec_label_pc_100066ec, label %dec_label_pc_100066b8.preheader

dec_label_pc_10006730:                            ; preds = %dec_label_pc_1000667c
  %v1_10006730 = add i32 %v2_10006680, 2
  %v2_10006730 = inttoptr i32 %v1_10006730 to i16*
  %v3_10006730 = load i16, i16* %v2_10006730, align 2
  %v4_10006730 = zext i16 %v3_10006730 to i32
  store i32 %v4_10006730, i32* %r0.global-to-local, align 4
  %v3_10006734 = icmp eq i16 %v3_10006730, 1
  br i1 %v3_10006734, label %dec_label_pc_1000673c, label %dec_label_pc_10006694

dec_label_pc_1000673c:                            ; preds = %dec_label_pc_10006730
  %v1_1000673c = add i32 %v2_10006680, 8
  %v2_1000673c = inttoptr i32 %v1_1000673c to i16*
  %v3_1000673c = load i16, i16* %v2_1000673c, align 2
  %v4_1000673c = zext i16 %v3_1000673c to i32
  store i32 %v4_1000673c, i32* %r0.global-to-local, align 4
  %v3_10006740 = icmp eq i16 %v3_1000673c, 4
  br i1 %v3_10006740, label %dec_label_pc_10006748, label %dec_label_pc_1000679c

dec_label_pc_10006748:                            ; preds = %dec_label_pc_1000673c
  %v2_10006748 = inttoptr i32 %v1_10006688 to i8*
  %v3_10006748 = load i8, i8* %v2_10006748, align 1
  %v4_10006748 = zext i8 %v3_10006748 to i32
  store i32 %v4_10006748, i32* %r0.global-to-local, align 4
  store i32 %v4_10006748, i32* %stack_var_-4312, align 4
  %v1_10006750 = add i32 %v2_10006680, 11
  %v2_10006750 = inttoptr i32 %v1_10006750 to i8*
  %v3_10006750 = load i8, i8* %v2_10006750, align 1
  %v4_10006750 = zext i8 %v3_10006750 to i32
  store i32 %v4_10006750, i32* %r9.global-to-local, align 4
  %v1_10006758 = add i32 %v2_10006680, 12
  %v2_10006758 = inttoptr i32 %v1_10006758 to i8*
  %v3_10006758 = load i8, i8* %v2_10006758, align 1
  %v4_10006758 = zext i8 %v3_10006758 to i32
  store i32 %v4_10006758, i32* %r0.global-to-local, align 4
  %v1_10006760 = add i32 %v2_10006680, 13
  %v2_10006760 = inttoptr i32 %v1_10006760 to i8*
  %v3_10006760 = load i8, i8* %v2_10006760, align 1
  %v4_10006760 = zext i8 %v3_10006760 to i32
  store i32 %v4_10006760, i32* %r9.global-to-local, align 4
  %v0_10006768 = load i32, i32* %r25.global-to-local, align 4
  %v1_10006768 = inttoptr i32 %v0_10006768 to i8*
  %v2_10006768 = load i8, i8* %v1_10006768, align 1
  %v3_10006768 = zext i8 %v2_10006768 to i32
  %v1_1000676c = add i32 %v0_10006768, 4
  %v2_1000676c = inttoptr i32 %v1_1000676c to i32*
  %v3_1000676c = load i32, i32* %v2_1000676c, align 4
  %v1_10006770 = mul nuw nsw i32 %v3_10006768, 4
  %v1_10006774 = add nuw nsw i32 %v1_10006770, 4
  store i32 268461948, i32* @lr, align 4
  %v3_10006778 = sext i8 %v3_10006760 to i32
  %v4_10006778 = call i32 @function_1000a324(i32 %v3_1000676c, i32 %v1_10006774, i32 %v3_10006778)
  %v0_1000677c = load i32, i32* %r25.global-to-local, align 4
  %v1_1000677c = inttoptr i32 %v0_1000677c to i8*
  %v2_1000677c = load i8, i8* %v1_1000677c, align 1
  %v3_1000677c = zext i8 %v2_1000677c to i32
  %v3_10006780 = load i32, i32* %stack_var_-4312, align 4
  store i32 %v3_10006780, i32* %r0.global-to-local, align 4
  %v1_10006784 = add nuw nsw i32 %v3_1000677c, 1
  store i32 %v1_10006784, i32* %r11.global-to-local, align 4
  %v1_10006788 = mul nuw nsw i32 %v3_1000677c, 4
  store i32 %v1_10006788, i32* %r9.global-to-local, align 4
  %v3_1000678c = add i32 %v1_10006788, %v4_10006778
  %v4_1000678c = inttoptr i32 %v3_1000678c to i32*
  store i32 %v3_10006780, i32* %v4_1000678c, align 4
  %v0_10006790 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006790 = trunc i32 %v0_10006790 to i8
  %v2_10006790 = load i32, i32* %r25.global-to-local, align 4
  %v3_10006790 = inttoptr i32 %v2_10006790 to i8*
  store i8 %v1_10006790, i8* %v3_10006790, align 1
  %v1_10006794 = load i32, i32* %r25.global-to-local, align 4
  %v2_10006794 = add i32 %v1_10006794, 4
  %v3_10006794 = inttoptr i32 %v2_10006794 to i32*
  store i32 %v4_10006778, i32* %v3_10006794, align 4
  %v0_10006798 = load i32, i32* @r31, align 4
  %v1_10006798 = add i32 %v0_10006798, 8
  %v2_10006798 = inttoptr i32 %v1_10006798 to i16*
  %v3_10006798 = load i16, i16* %v2_10006798, align 2
  %v4_10006798 = zext i16 %v3_10006798 to i32
  store i32 %v4_10006798, i32* %r0.global-to-local, align 4
  %v0_100067a0.pre = load i32, i32* @r29, align 4
  %v0_1000660c.pre.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000679c

dec_label_pc_1000679c:                            ; preds = %dec_label_pc_1000673c, %dec_label_pc_10006748
  %v0_1000660c.pre = phi i32 [ %v0_1000660c49, %dec_label_pc_1000673c ], [ %v0_1000660c.pre.pre, %dec_label_pc_10006748 ]
  %v0_100067a0 = phi i32 [ %v1_10006688, %dec_label_pc_1000673c ], [ %v0_100067a0.pre, %dec_label_pc_10006748 ]
  %v0_1000679c = phi i32 [ %v4_1000673c, %dec_label_pc_1000673c ], [ %v4_10006798, %dec_label_pc_10006748 ]
  store i32 %v0_1000679c, i32* %r0.global-to-local, align 4
  %v2_100067a0 = add i32 %v0_1000679c, %v0_100067a0
  br label %dec_label_pc_1000660c.backedge

dec_label_pc_1000633c.preheader.thread:           ; preds = %dec_label_pc_10006298
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1000633c1355 = or i32 %v2_10006304, 1
  store i32 %v1_1000633c1355, i32* %r11.global-to-local, align 4
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000636c

; uselistorder directives
  uselistorder i32 %v1_10006788, { 1, 0 }
  uselistorder i32 %v4_10006778, { 1, 0 }
  uselistorder i32 %v1_100066a4, { 1, 0 }
  uselistorder i8 %v2_100066a0, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10006728, { 1, 2, 0 }
  uselistorder i32 %v2_10006724, { 1, 0 }
  uselistorder i32 %v1_10006634, { 1, 0 }
  uselistorder i32 %v3_10006630, { 1, 0 }
  uselistorder i8 %v2_10006630, { 2, 3, 1, 0 }
  uselistorder i32 %v1_1000671c, { 1, 2, 0 }
  uselistorder i32 %v2_10006718, { 2, 1, 0 }
  uselistorder i32 %v1_10006614, { 1, 0, 2 }
  uselistorder i8 %v2_100066d8, { 2, 3, 0, 1 }
  uselistorder i32 %v2_100066d4, { 1, 2, 0 }
  uselistorder i32 %v0_100066a438, { 2, 0, 1 }
  uselistorder i32 %v0_100066ec130, { 1, 0 }
  uselistorder i32 %v1_100066ac128, { 1, 0 }
  uselistorder i32 %v1_10006688, { 3, 4, 2, 0, 1, 5, 6 }
  uselistorder i32 %v3_10006668, { 1, 0 }
  uselistorder i8 %v2_10006668, { 2, 3, 0, 1 }
  uselistorder i32 %v2_10006664, { 1, 2, 0 }
  uselistorder i32 %v0_1000663428, { 2, 0, 1 }
  uselistorder i32 %v0_1000667c116, { 1, 0 }
  uselistorder i32 %v0_10006680, { 2, 0, 1, 3 }
  uselistorder i32 %v1_100066149, { 2, 1, 0 }
  uselistorder i32 %v0_10006584, { 1, 2, 0, 3 }
  uselistorder i32 %v0_10006574, { 1, 0 }
  uselistorder i32 %v1_10006520, { 1, 0 }
  uselistorder i32 %v4_1000651c, { 1, 0 }
  uselistorder i32 %v1_1000651c, { 1, 2, 0 }
  uselistorder i32 %v3_10006518, { 2, 1, 0 }
  uselistorder i32 %v1_100064cc, { 1, 0 }
  uselistorder i32 %v0_100064cc, { 1, 0 }
  uselistorder i32 %v1_100064bc, { 1, 0 }
  uselistorder i32 %v1_100064b8, { 1, 0 }
  uselistorder i8 %v2_10006344, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10006340, { 1, 0 }
  uselistorder i32 %v0_10006338, { 0, 3, 2, 1 }
  uselistorder i32 %v1_10006308, { 0, 2, 1 }
  uselistorder i32 %v2_10006304, { 2, 0, 1, 4, 3, 5 }
  uselistorder i32 %v0_100062a0, { 1, 0 }
  uselistorder i16* %stack_var_-2108, { 1, 0 }
  uselistorder i16 %tmp60, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 2, 3, 4, 5, 9, 6, 7, 8, 10, 1, 11, 12, 16, 13, 21, 22, 14, 15, 17, 18, 20, 19 }
  uselistorder i32* %r28.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r25.global-to-local, { 1, 2, 4, 3, 0, 6, 5, 7 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 3, 5, 7, 4, 15, 6, 14, 8, 9, 10, 12, 13, 11, 1 }
  uselistorder i32* %r10.global-to-local, { 2, 0, 1, 11, 3, 4, 5, 6, 8, 7, 9, 10 }
  uselistorder i32* %r0.global-to-local, { 4, 1, 2, 3, 5, 6, 7, 8, 10, 13, 14, 9, 30, 11, 12, 29, 0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i32* %ctr.global-to-local, { 9, 1, 7, 8, 2, 3, 5, 4, 0, 6 }
  uselistorder i8 -65, { 2, 0, 3, 1 }
  uselistorder i32 65535, { 52, 53, 19, 20, 54, 55, 9, 8, 7, 56, 57, 21, 22, 23, 10, 11, 58, 24, 59, 25, 60, 0, 12, 61, 62, 26, 27, 28, 63, 64, 65, 66, 67, 68, 29, 30, 1, 13, 69, 70, 31, 32, 33, 34, 2, 14, 71, 72, 35, 36, 37, 38, 39, 73, 15, 40, 41, 74, 16, 42, 43, 75, 76, 77, 78, 79, 80, 44, 45, 3, 17, 81, 82, 5, 46, 47, 48, 4, 18, 83, 84, 6, 49, 50, 51 }
  uselistorder i32 (i32)* @function_1000a950, { 7, 10, 9, 8, 1, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10009da4, { 4, 8, 7, 6, 5, 3, 2, 1, 0 }
  uselistorder i16 1, { 2, 3, 0, 1, 4 }
  uselistorder i32 53, { 1, 0 }
  uselistorder label %dec_label_pc_1000679c, { 1, 0 }
  uselistorder label %dec_label_pc_10006708, { 1, 0 }
  uselistorder label %dec_label_pc_1000660c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_100066ec, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100066b8, { 1, 0 }
  uselistorder label %dec_label_pc_100066b8.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1000667c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10006648, { 1, 0 }
  uselistorder label %dec_label_pc_10006648.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10006624, { 1, 0 }
  uselistorder label %dec_label_pc_10006590, { 1, 0 }
  uselistorder label %dec_label_pc_1000657c, { 4, 5, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000655c, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_100064b4.dec_label_pc_100064b4_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10006430, { 1, 0 }
  uselistorder label %dec_label_pc_1000636c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10006344, { 1, 0 }
}

define i32 @function_100067b4(i32 %arg1) local_unnamed_addr {
dec_label_pc_100067b4:
  %v3_100067c8 = load i32, i32* @global_var_1001c2c8.123, align 4
  store i32 268462032, i32* @lr, align 4
  %v2_100067cc = call i32 @function_10009228(i32 %v3_100067c8, i32 9)
  ret i32 %v2_100067cc
}

define i32 @function_100067e0() local_unnamed_addr {
dec_label_pc_100067e0:
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_100067e8 = load i32, i32* @r31, align 4
  %v0_100067ec = load i32, i32* @r3, align 4
  store i32 %v0_100067ec, i32* @r31, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  %v1_100067fc = add i32 %v0_100067ec, 4
  %v2_100067fc = inttoptr i32 %v1_100067fc to i32*
  %v3_100067fc = load i32, i32* %v2_100067fc, align 4
  %v3_10006804 = icmp eq i32 %v3_100067fc, -1
  br i1 %v3_10006804, label %dec_label_pc_1000681c, label %dec_label_pc_10006818

dec_label_pc_10006818:                            ; preds = %dec_label_pc_100067e0
  store i32 268462108, i32* @lr, align 4
  %v0_10006818 = call i32 @function_10009108()
  br label %dec_label_pc_1000681c

dec_label_pc_1000681c:                            ; preds = %dec_label_pc_100067e0, %dec_label_pc_10006818
  store i32 268462124, i32* @lr, align 4
  %v3_10006828 = call i32 @function_10009e58(i32 2, i32 1, i32 0)
  store i32 356, i32* @r4, align 4
  %v0_10006834 = load i32, i32* @r31, align 4
  %v1_10006834 = add i32 %v0_10006834, 28
  store i32 %v1_10006834, i32* @r3, align 4
  %v3_10006838 = icmp eq i32 %v3_10006828, -1
  %v2_1000683c = add i32 %v0_10006834, 4
  %v3_1000683c = inttoptr i32 %v2_1000683c to i32*
  store i32 %v3_10006828, i32* %v3_1000683c, align 4
  br i1 %v3_10006838, label %dec_label_pc_1000681c.dec_label_pc_100068b4_crit_edge, label %dec_label_pc_10006844

dec_label_pc_1000681c.dec_label_pc_100068b4_crit_edge: ; preds = %dec_label_pc_1000681c
  %v0_100068c8.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100068b4

dec_label_pc_10006844:                            ; preds = %dec_label_pc_1000681c
  %v0_10006844 = load i32, i32* %r29.global-to-local, align 4
  %v1_10006844 = load i32, i32* @r31, align 4
  %v2_10006844 = add i32 %v1_10006844, 24
  %v3_10006844 = inttoptr i32 %v2_10006844 to i32*
  store i32 %v0_10006844, i32* %v3_10006844, align 4
  store i32 268462156, i32* @lr, align 4
  %v0_10006848 = call i32 @function_100089f0()
  %v0_1000684c = load i32, i32* @r31, align 4
  %v1_1000684c = add i32 %v0_1000684c, 4
  %v2_1000684c = inttoptr i32 %v1_1000684c to i32*
  %v3_1000684c = load i32, i32* %v2_1000684c, align 4
  store i32 %v3_1000684c, i32* %r29.global-to-local, align 4
  store i32 3, i32* @r4, align 4
  store i32 268462180, i32* @lr, align 4
  %v2_10006860 = call i32 @function_10009020(i32 %v3_1000684c)
  store i32 4, i32* @r4, align 4
  store i32 268462200, i32* @lr, align 4
  %v2_10006874 = call i32 @function_10009020(i32 %v3_1000684c)
  %v3_1000687c = load i32, i32* @global_var_1001c2bc.124, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  %v0_10006884 = load i32, i32* @r31, align 4
  %v2_1000688c = add i32 %v0_10006884, 8
  %v3_1000688c = inttoptr i32 %v2_1000688c to i32*
  store i32 %v3_1000687c, i32* %v3_1000688c, align 4
  %v0_10006894 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006894 = load i32, i32* @r31, align 4
  %v2_10006894 = add i32 %v1_10006894, 12
  %v3_10006894 = inttoptr i32 %v2_10006894 to i32*
  store i32 %v0_10006894, i32* %v3_10006894, align 4
  %v0_1000689c = load i32, i32* @r31, align 4
  %v1_1000689c = add i32 %v0_1000689c, 4
  %v2_1000689c = inttoptr i32 %v1_1000689c to i32*
  %v3_1000689c = load i32, i32* %v2_1000689c, align 4
  store i32 %v3_1000689c, i32* @r3, align 4
  %v1_100068a0 = add i32 %v0_1000689c, 16
  %v2_100068a0 = inttoptr i32 %v1_100068a0 to i32*
  %v3_100068a0 = load i32, i32* %v2_100068a0, align 4
  store i32 %v3_100068a0, i32* %r9.global-to-local, align 4
  store i32 268462260, i32* @lr, align 4
  %v0_100068b0 = call i32 @function_10009c58()
  br label %dec_label_pc_100068b4

dec_label_pc_100068b4:                            ; preds = %dec_label_pc_1000681c.dec_label_pc_100068b4_crit_edge, %dec_label_pc_10006844
  %v0_100068c8 = phi i32 [ %v0_100068c8.pre, %dec_label_pc_1000681c.dec_label_pc_100068b4_crit_edge ], [ %v0_100068b0, %dec_label_pc_10006844 ]
  store i32 %v0_100067e8, i32* @r31, align 4
  ret i32 %v0_100068c8

; uselistorder directives
  uselistorder i32 ()* @function_100089f0, { 8, 7, 2, 1, 0, 6, 5, 4, 3 }
  uselistorder label %dec_label_pc_100068b4, { 1, 0 }
  uselistorder label %dec_label_pc_1000681c, { 1, 0 }
}

define i32 @function_100068cc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100068cc:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_100068d0 = load i32, i32* @lr, align 4
  store i32 %v0_100068d0, i32* %r0.global-to-local, align 4
  %v3_100068dc = load i32, i32* @global_var_1001c2b0.125, align 4
  %v1_100068e8 = mul i32 %v3_100068dc, 16
  store i32 %v1_100068e8, i32* %r9.global-to-local, align 4
  %v0_100068ec = load i32, i32* @r28, align 4
  %v3_100068f4 = load i32, i32* @global_var_1001c2b4.126, align 4
  store i32 %arg2, i32* %r23.global-to-local, align 4
  %v1_10006900 = add i32 %v1_100068e8, 16
  %v0_10006918 = load i32, i32* @r29, align 4
  %v0_1000691c = load i32, i32* @r30, align 4
  store i32 268462376, i32* @lr, align 4
  %v3_10006924 = call i32 @function_1000a324(i32 %v3_100068f4, i32 %v1_10006900, i32 %v1_100068e8)
  store i32 %v3_10006924, i32* %r25.global-to-local, align 4
  %v0_1000692c = load i32, i32* @r28, align 4
  store i32 %v3_10006924, i32* @global_var_1001c2b4.126, align 4
  %v3_10006934 = load i32, i32* @global_var_1001c2b0.125, align 4
  store i32 %v3_10006934, i32* %r24.global-to-local, align 4
  store i32 268462396, i32* @lr, align 4
  %v1_10006938 = inttoptr i32 %v0_1000692c to i8*
  %v2_10006938 = call i32 @function_10008948(i8* %v1_10006938)
  %sext = mul i32 %v2_10006938, 16777216
  %v1_1000693c = sdiv i32 %sext, 16777216
  %v2_1000693c = add nsw i32 %v1_1000693c, 1
  store i32 %v2_1000693c, i32* @r29, align 4
  store i32 %v1_1000693c, i32* @r30, align 4
  store i32 %v2_1000693c, i32* @r3, align 4
  store i32 268462412, i32* @lr, align 4
  %v0_10006948 = call i32 @function_1000a05c()
  %v0_1000694c = load i32, i32* @r28, align 4
  %v0_10006950 = load i32, i32* @r29, align 4
  store i32 %v0_10006948, i32* %r31.global-to-local, align 4
  store i32 268462428, i32* @lr, align 4
  %v3_10006958 = call i32 @function_100089cc(i32 %v0_1000694c, i32 %v0_10006950, i32 %v0_10006950)
  %v0_1000695c = load i32, i32* @r30, align 4
  %tmp21 = icmp slt i32 %v0_1000695c, 1
  %extract.t6 = trunc i32 %v0_1000695c to i8
  br i1 %tmp21, label %dec_label_pc_10006980, label %dec_label_pc_10006964

dec_label_pc_10006964:                            ; preds = %dec_label_pc_100068cc
  store i32 %v0_1000695c, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000696c

dec_label_pc_1000696c:                            ; preds = %dec_label_pc_1000696c, %dec_label_pc_10006964
  %v1_10006974 = phi i32 [ %v1_10006978, %dec_label_pc_1000696c ], [ 0, %dec_label_pc_10006964 ]
  %v1_1000696c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000696c = add i32 %v1_1000696c, %v1_10006974
  %v3_1000696c = inttoptr i32 %v2_1000696c to i8*
  %v4_1000696c = load i8, i8* %v3_1000696c, align 1
  %v5_1000696c = zext i8 %v4_1000696c to i32
  %v1_10006970 = xor i32 %v5_1000696c, 84
  store i32 %v1_10006970, i32* %r0.global-to-local, align 4
  %v3_10006974 = trunc i32 %v1_10006970 to i8
  store i8 %v3_10006974, i8* %v3_1000696c, align 1
  %v0_10006978 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006978 = add i32 %v0_10006978, 1
  store i32 %v1_10006978, i32* %r9.global-to-local, align 4
  %v0_1000697c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000697c = add i32 %v0_1000697c, -1
  store i32 %v1_1000697c, i32* %ctr.global-to-local, align 4
  %v2_1000697c = icmp eq i32 %v1_1000697c, 0
  br i1 %v2_1000697c, label %dec_label_pc_10006980.loopexit, label %dec_label_pc_1000696c

dec_label_pc_10006980.loopexit:                   ; preds = %dec_label_pc_1000696c
  %v0_10006998.pre = load i32, i32* @r30, align 4
  %extract.t = trunc i32 %v0_10006998.pre to i8
  br label %dec_label_pc_10006980

dec_label_pc_10006980:                            ; preds = %dec_label_pc_10006980.loopexit, %dec_label_pc_100068cc
  %v0_10006998.off0 = phi i8 [ %extract.t, %dec_label_pc_10006980.loopexit ], [ %extract.t6, %dec_label_pc_100068cc ]
  %v3_10006980 = load i32, i32* @global_var_1001c2b0.125, align 4
  %v0_10006984 = load i32, i32* %r23.global-to-local, align 4
  %v3_10006988 = load i32, i32* @global_var_1001c2b4.126, align 4
  %v1_1000698c = mul i32 %v3_10006980, 16
  %v2_10006990 = add i32 %v3_10006988, %v1_1000698c
  store i32 %v2_10006990, i32* %r9.global-to-local, align 4
  %v0_10006994 = load i32, i32* %r24.global-to-local, align 4
  %v1_10006994 = mul i32 %v0_10006994, 16
  store i32 %v1_10006994, i32* %r0.global-to-local, align 4
  %v3_10006998 = add i32 %v2_10006990, 12
  %v4_10006998 = inttoptr i32 %v3_10006998 to i8*
  store i8 %v0_10006998.off0, i8* %v4_10006998, align 1
  %v0_1000699c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000699c = load i32, i32* %r25.global-to-local, align 4
  %v2_1000699c = load i32, i32* %r0.global-to-local, align 4
  %v3_1000699c = add i32 %v2_1000699c, %v1_1000699c
  %v4_1000699c = inttoptr i32 %v3_1000699c to i32*
  store i32 %v0_1000699c, i32* %v4_1000699c, align 4
  %v3_100069a0 = load i32, i32* @global_var_1001c2b0.125, align 4
  store i32 %v3_100069a0, i32* @r30, align 4
  %v3_100069a4 = load i32, i32* @global_var_1001c2b4.126, align 4
  store i32 %v3_100069a4, i32* %r25.global-to-local, align 4
  store i32 268462508, i32* @lr, align 4
  %v1_100069a8 = inttoptr i32 %v0_10006984 to i8*
  %v2_100069a8 = call i32 @function_10008948(i8* %v1_100069a8)
  %sext1 = mul i32 %v2_100069a8, 16777216
  %v1_100069ac = sdiv i32 %sext1, 16777216
  %v2_100069ac = add nsw i32 %v1_100069ac, 1
  store i32 %v2_100069ac, i32* @r29, align 4
  store i32 %v1_100069ac, i32* @r28, align 4
  store i32 %v2_100069ac, i32* @r3, align 4
  store i32 268462524, i32* @lr, align 4
  %v0_100069b8 = call i32 @function_1000a05c()
  %v0_100069bc = load i32, i32* %r23.global-to-local, align 4
  %v0_100069c0 = load i32, i32* @r29, align 4
  store i32 %v0_100069b8, i32* %r31.global-to-local, align 4
  store i32 268462540, i32* @lr, align 4
  %v3_100069c8 = call i32 @function_100089cc(i32 %v0_100069bc, i32 %v0_100069c0, i32 %v0_100069c0)
  %v0_100069cc = load i32, i32* @r28, align 4
  %tmp22 = icmp slt i32 %v0_100069cc, 1
  %extract.t8 = trunc i32 %v0_100069cc to i8
  br i1 %tmp22, label %dec_label_pc_100069f0, label %dec_label_pc_100069d4

dec_label_pc_100069d4:                            ; preds = %dec_label_pc_10006980
  store i32 %v0_100069cc, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100069dc

dec_label_pc_100069dc:                            ; preds = %dec_label_pc_100069dc, %dec_label_pc_100069d4
  %v1_100069e4 = phi i32 [ %v1_100069e8, %dec_label_pc_100069dc ], [ 0, %dec_label_pc_100069d4 ]
  %v1_100069dc = load i32, i32* %r31.global-to-local, align 4
  %v2_100069dc = add i32 %v1_100069dc, %v1_100069e4
  %v3_100069dc = inttoptr i32 %v2_100069dc to i8*
  %v4_100069dc = load i8, i8* %v3_100069dc, align 1
  %v5_100069dc = zext i8 %v4_100069dc to i32
  %v1_100069e0 = xor i32 %v5_100069dc, 84
  store i32 %v1_100069e0, i32* %r0.global-to-local, align 4
  %v3_100069e4 = trunc i32 %v1_100069e0 to i8
  store i8 %v3_100069e4, i8* %v3_100069dc, align 1
  %v0_100069e8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100069e8 = add i32 %v0_100069e8, 1
  store i32 %v1_100069e8, i32* %r9.global-to-local, align 4
  %v0_100069ec = load i32, i32* %ctr.global-to-local, align 4
  %v1_100069ec = add i32 %v0_100069ec, -1
  store i32 %v1_100069ec, i32* %ctr.global-to-local, align 4
  %v2_100069ec = icmp eq i32 %v1_100069ec, 0
  br i1 %v2_100069ec, label %dec_label_pc_100069f0.loopexit, label %dec_label_pc_100069dc

dec_label_pc_100069f0.loopexit:                   ; preds = %dec_label_pc_100069dc
  %v0_10006a04.pre = load i32, i32* @r28, align 4
  %extract.t7 = trunc i32 %v0_10006a04.pre to i8
  br label %dec_label_pc_100069f0

dec_label_pc_100069f0:                            ; preds = %dec_label_pc_100069f0.loopexit, %dec_label_pc_10006980
  %v0_10006a04.off0 = phi i8 [ %extract.t7, %dec_label_pc_100069f0.loopexit ], [ %extract.t8, %dec_label_pc_10006980 ]
  %v3_100069f0 = load i32, i32* @global_var_1001c2b0.125, align 4
  %v3_100069f8 = load i32, i32* @global_var_1001c2b4.126, align 4
  %v1_100069fc = mul i32 %v3_100069f0, 16
  %v2_10006a00 = or i32 %v1_100069fc, 13
  %v3_10006a04 = add i32 %v2_10006a00, %v3_100069f8
  %v4_10006a04 = inttoptr i32 %v3_10006a04 to i8*
  store i8 %v0_10006a04.off0, i8* %v4_10006a04, align 1
  %v0_10006a08 = load i32, i32* @r30, align 4
  %v1_10006a08 = mul i32 %v0_10006a08, 16
  %v1_10006a0c = load i32, i32* %r25.global-to-local, align 4
  %v2_10006a0c = add i32 %v1_10006a0c, %v1_10006a08
  store i32 %v2_10006a0c, i32* %r9.global-to-local, align 4
  %v3_10006a10 = load i32, i32* @global_var_1001c2b0.125, align 4
  %v3_10006a14 = load i32, i32* @global_var_1001c2b4.126, align 4
  %v1_10006a18 = mul i32 %v3_10006a10, 16
  %v3_10006a1c = load i16, i16* @global_var_1001c2b8.127, align 2
  %v4_10006a1c = zext i16 %v3_10006a1c to i32
  store i32 %v4_10006a1c, i32* %r7.global-to-local, align 4
  %v2_10006a20 = add i32 %v3_10006a14, %v1_10006a18
  store i32 %v2_10006a20, i32* %r11.global-to-local, align 4
  store i32 %v0_100068d0, i32* %r0.global-to-local, align 4
  %v1_10006a28 = add i32 %v3_10006a10, 1
  store i32 %v1_10006a28, i32* %r10.global-to-local, align 4
  store i32 ptrtoint (i16* @global_var_1001c2b8.127 to i32), i32* %r8.global-to-local, align 4
  %v0_10006a30 = load i32, i32* %r31.global-to-local, align 4
  %v2_10006a30 = add i32 %v2_10006a0c, 4
  %v3_10006a30 = inttoptr i32 %v2_10006a30 to i32*
  store i32 %v0_10006a30, i32* %v3_10006a30, align 4
  %v0_10006a38 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10006a38, i32* @global_var_1001c2b0.125, align 4
  store i32 %v0_100068ec, i32* @r28, align 4
  store i32 %v0_10006918, i32* @r29, align 4
  store i32 %v0_1000691c, i32* @r30, align 4
  %v0_10006a68 = load i32, i32* %r8.global-to-local, align 4
  %v1_10006a68 = trunc i32 %v0_10006a68 to i16
  %v2_10006a68 = load i32, i32* %r11.global-to-local, align 4
  %v3_10006a68 = add i32 %v2_10006a68, 10
  %v4_10006a68 = inttoptr i32 %v3_10006a68 to i16*
  store i16 %v1_10006a68, i16* %v4_10006a68, align 2
  %v0_10006a6c = load i32, i32* %r7.global-to-local, align 4
  %v1_10006a6c = trunc i32 %v0_10006a6c to i16
  %v2_10006a6c = load i32, i32* %r11.global-to-local, align 4
  %v3_10006a6c = add i32 %v2_10006a6c, 8
  %v4_10006a6c = inttoptr i32 %v3_10006a6c to i16*
  store i16 %v1_10006a6c, i16* %v4_10006a6c, align 2
  %v0_10006a70 = load i32, i32* %r8.global-to-local, align 4
  %v1_10006a70 = trunc i32 %v0_10006a70 to i16
  store i16 %v1_10006a70, i16* @global_var_1001c2b8.127, align 2
  ret i32 %v3_100069c8

; uselistorder directives
  uselistorder i32 %v3_10006a10, { 1, 0 }
  uselistorder i32 %v1_100069ec, { 1, 0 }
  uselistorder i32 %v1_100069e8, { 1, 0 }
  uselistorder i32 %v0_100069cc, { 1, 0, 2 }
  uselistorder i32 %v1_1000697c, { 1, 0 }
  uselistorder i32 %v1_10006978, { 1, 0 }
  uselistorder i32 %v0_1000695c, { 1, 0, 2 }
  uselistorder i32 %v1_100068e8, { 2, 1, 0 }
  uselistorder i32* %r23.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i8*)* @function_10008948, { 0, 1, 3, 4, 5, 6, 7, 28, 2, 22, 23, 24, 25, 26, 27, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 (i32, i32, i32)* @function_1000a324, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_10006a78(i32 %arg1) local_unnamed_addr {
dec_label_pc_10006a78:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp51 = call i32 @__decompiler_undefined_function_0()
  %tmp52 = call i32 @__decompiler_undefined_function_0()
  %tmp53 = call i32 @__decompiler_undefined_function_0()
  %tmp54 = call i16 @__decompiler_undefined_function_1()
  %tmp55 = call i16 @__decompiler_undefined_function_1()
  %tmp56 = call i8 @__decompiler_undefined_function_2()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1920 = alloca i32, align 4
  %stack_var_-1908 = alloca i32, align 4
  %stack_var_-1744 = alloca i32, align 4
  %stack_var_-1872 = alloca i32, align 4
  %stack_var_-1616 = alloca i32, align 4
  %stack_var_-1888 = alloca i32, align 4
  %stack_var_-1912 = alloca i32, align 4
  %stack_var_-1928 = alloca i32, align 4
  %stack_var_-1916 = alloca i64, align 8
  %v0_10006a78 = load i32, i32* @lr, align 4
  store i32 %v0_10006a78, i32* %r0.global-to-local, align 4
  %v0_10006a80 = call i32 @__asm_mfcr()
  store i32 %v0_10006a80, i32* %r3.global-to-local, align 4
  %v0_10006ab8 = load i32, i32* @r27, align 4
  %v0_10006abc = load i32, i32* @r28, align 4
  %v0_10006ac0 = load i32, i32* @r29, align 4
  %v0_10006ac4 = load i32, i32* @r30, align 4
  %v0_10006acc = load i32, i32* %r0.global-to-local, align 4
  store i32 268462808, i32* @lr, align 4
  %v0_10006ad4 = call i32 @function_10009150()
  store i32 %v0_10006ad4, i32* %r3.global-to-local, align 4
  %v1_10006ad8 = icmp slt i32 %v0_10006ad4, 0
  %v3_10006ad8 = icmp eq i32 %v0_10006ad4, 0
  store i1 %v1_10006ad8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ad8, i1* %cr7_eq.global-to-local, align 1
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v0_10006ad4, i32* @global_var_1001c2c8.123, align 4
  %tmp97 = icmp slt i32 %v0_10006ad4, 1
  br i1 %tmp97, label %dec_label_pc_10006b48, label %dec_label_pc_10006ae8

dec_label_pc_10006ae8:                            ; preds = %dec_label_pc_10006b48, %dec_label_pc_10006a78
  store i32 %v0_10006acc, i32* %r0.global-to-local, align 4
  %v1_10006afc = call %0 @__asm_mtcrf(i32 8, i32 %v0_10006a80)
  store i32 %v0_10006ab8, i32* %r27.global-to-local, align 4
  store i32 %v0_10006abc, i32* @r28, align 4
  store i32 %v0_10006ac0, i32* @r29, align 4
  store i32 %v0_10006ac4, i32* @r30, align 4
  ret i32 %v0_10006ad4

dec_label_pc_10006b48:                            ; preds = %dec_label_pc_10006a78
  %v1_10006b48 = icmp slt i32 %v0_10006ad4, -1
  %v3_10006b48 = icmp eq i32 %v0_10006ad4, -1
  store i1 %v1_10006b48, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b48, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006b48, label %dec_label_pc_10006ae8, label %dec_label_pc_10006b50

dec_label_pc_10006b50:                            ; preds = %dec_label_pc_10006b48
  store i32 268462932, i32* @lr, align 4
  %v1_10006b50 = call i32 @function_10008c4c(i32 %v0_10006ad4)
  store i32 %v1_10006b50, i32* %r3.global-to-local, align 4
  store i32 %v1_10006b50, i32* @global_var_1001c298.14, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006b60.128 to i32), i32* @lr, align 4
  %v1_10006b5c = call i32 @function_10005fc4(i32 %v1_10006b50)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268462952, i32* @lr, align 4
  %v0_10006b64 = call i32 @function_100094d8()
  store i32 %v0_10006b64, i32* @global_var_1001c2bc.124, align 4
  store i32 356, i32* %r3.global-to-local, align 4
  store i32 268462972, i32* @lr, align 4
  %v2_10006b78 = call i32 @function_1000a1b4(i32 356, i32 388)
  store i32 %v2_10006b78, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v2_10006b78, i32* @global_var_1001c2c0.129, align 4
  store i64 0, i64* %stack_var_-1916, align 8
  store i32 356, i32* %ctr.global-to-local, align 4
  store i32 %v2_10006b78, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10006ba4 = add i32 %v2_10006b78, 4
  store i32 %v1_10006ba4, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006ba8

dec_label_pc_10006ba8:                            ; preds = %dec_label_pc_10006ba8.dec_label_pc_10006ba8_crit_edge, %dec_label_pc_10006b50
  %v1_10006bb0 = phi i32 [ %v1_10006bb0.pre, %dec_label_pc_10006ba8.dec_label_pc_10006ba8_crit_edge ], [ %v1_10006ba4, %dec_label_pc_10006b50 ]
  %v0_10006bb0 = phi i32 [ %v0_10006bb0.pre, %dec_label_pc_10006ba8.dec_label_pc_10006ba8_crit_edge ], [ -1, %dec_label_pc_10006b50 ]
  %v0_10006bac = phi i32 [ %v0_10006bc0, %dec_label_pc_10006ba8.dec_label_pc_10006ba8_crit_edge ], [ 0, %dec_label_pc_10006b50 ]
  %v1_10006ba8 = mul i32 %v0_10006bac, 388
  store i32 %v1_10006ba8, i32* %r9.global-to-local, align 4
  %v1_10006bac = add i32 %v0_10006bac, 1
  store i32 %v1_10006bac, i32* %r10.global-to-local, align 4
  %v2_10006bb0 = inttoptr i32 %v1_10006bb0 to i32*
  store i32 %v0_10006bb0, i32* %v2_10006bb0, align 4
  %v0_10006bb4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006bb4 = add i32 %v0_10006bb4, 388
  store i32 %v1_10006bb4, i32* %r11.global-to-local, align 4
  %v0_10006bb8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006bb8 = load i32, i32* %r8.global-to-local, align 4
  %v0_10006bbc = load i32, i32* %r0.global-to-local, align 4
  %v2_10006bb8 = add i32 %v0_10006bb8, 12
  %v2_10006bbc = add i32 %v2_10006bb8, %v1_10006bb8
  %v3_10006bbc = inttoptr i32 %v2_10006bbc to i32*
  store i32 %v0_10006bbc, i32* %v3_10006bbc, align 4
  %v0_10006bc0 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10006bc0, i32* %r9.global-to-local, align 4
  %v0_10006bc4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006bc4 = add i32 %v0_10006bc4, -1
  store i32 %v1_10006bc4, i32* %ctr.global-to-local, align 4
  %v2_10006bc4 = icmp eq i32 %v1_10006bc4, 0
  br i1 %v2_10006bc4, label %dec_label_pc_10006bc8, label %dec_label_pc_10006ba8.dec_label_pc_10006ba8_crit_edge

dec_label_pc_10006ba8.dec_label_pc_10006ba8_crit_edge: ; preds = %dec_label_pc_10006ba8
  %v0_10006bb0.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_10006bb0.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006ba8

dec_label_pc_10006bc8:                            ; preds = %dec_label_pc_10006ba8
  store i32 356, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i64 356, i64* %stack_var_-1916, align 8
  store i32 268463072, i32* @lr, align 4
  %v3_10006bdc = call i32 @function_10009e58(i32 2, i32 3, i32 6)
  %v4_10006bdc = trunc i32 %v3_10006bdc to i16
  store i32 %v3_10006bdc, i32* %r3.global-to-local, align 4
  %v2_10006be0 = icmp slt i16 %v4_10006bdc, -1
  %v4_10006be0 = icmp eq i16 %v4_10006bdc, -1
  store i1 %v2_10006be0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006be0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10006bdc, i32* %r29.global-to-local, align 4
  store i32 %v3_10006bdc, i32* @global_var_1001c2c4.130, align 4
  br i1 %v4_10006be0, label %dec_label_pc_100071ec, label %dec_label_pc_10006bf4

dec_label_pc_10006bf4:                            ; preds = %dec_label_pc_10006bc8
  store i32 3, i32* @r4, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 268463108, i32* @lr, align 4
  %v1_10006c00 = call i32 @function_10009020(i32 3)
  store i32 4, i32* @r4, align 4
  %v1_10006c08 = or i32 %v1_10006c00, 2048
  store i32 %v1_10006c08, i32* %r5.global-to-local, align 4
  %v0_10006c0c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10006c0c, i32* %r3.global-to-local, align 4
  store i32 268463128, i32* @lr, align 4
  %v2_10006c14 = call i32 @function_10009020(i32 %v0_10006c0c)
  %v3_10006c1c = load i32, i32* @global_var_1001c2c4.130, align 4
  store i32 %v3_10006c1c, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v2_10006c2c = ptrtoint i64* %stack_var_-1916 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i64 1, i64* %stack_var_-1916, align 8
  store i32 268463164, i32* @lr, align 4
  %v5_10006c38 = call i32 @function_10009e1c(i32 %v3_10006c1c, i32 0, i32 3, i32 %v2_10006c2c)
  store i32 %v5_10006c38, i32* %r3.global-to-local, align 4
  %v1_10006c3c = icmp slt i32 %v5_10006c38, 0
  %v3_10006c3c = icmp eq i32 %v5_10006c38, 0
  store i1 %v1_10006c3c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c3c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006c3c, label %dec_label_pc_10006c44, label %dec_label_pc_10008204

dec_label_pc_10006c44:                            ; preds = %dec_label_pc_10006bf4, %dec_label_pc_10006c44
  %v0_10006c44 = call i32 @function_10005f74()
  store i32 %v0_10006c44, i32* %r3.global-to-local, align 4
  %v1_10006c48 = urem i32 %v0_10006c44, 65536
  store i32 %v1_10006c48, i32* @r20, align 4
  %v1_10006c4c = icmp ult i32 %v1_10006c48, 1023
  %v3_10006c4c = icmp eq i32 %v1_10006c48, 1023
  store i1 %v1_10006c4c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c4c, i1* %cr7_eq.global-to-local, align 1
  %tmp98 = icmp ult i32 %v1_10006c48, 1024
  br i1 %tmp98, label %dec_label_pc_10006c44, label %dec_label_pc_10006c54

dec_label_pc_10006c54:                            ; preds = %dec_label_pc_10006c44
  store i32 268566528, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r29.global-to-local, align 4
  %v3_10006c5c = load i32, i32* @global_var_1001c330.131, align 4
  store i32 %v3_10006c5c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001c330.131 to i32), i32* @r21, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001c344.132 to i32), i32* @r22, align 4
  %v1_10006c6c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10006c6c, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r28.global-to-local, align 4
  %v1_10006c74 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10006c74, i32* %r0.global-to-local, align 4
  store i32 40, i32* %r9.global-to-local, align 4
  store i32 %v1_10006c74, i32* @global_var_1001c330.131, align 4
  store i32 ptrtoint (i32* @global_var_1000bbd0.133 to i32), i32* @r28, align 4
  store i16 40, i16* bitcast (i32* @global_var_1001c332.134 to i16*), align 4
  %v0_10006c88 = call i32 @function_10005f74()
  %v1_10006c88 = trunc i32 %v0_10006c88 to i16
  store i32 %v0_10006c88, i32* %r3.global-to-local, align 4
  %v3_10006c8c = load i32, i32* @global_var_1001c350.135, align 4
  store i32 %v3_10006c8c, i32* %r11.global-to-local, align 4
  store i32 64, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r9.global-to-local, align 4
  store i8 64, i8* bitcast (i32* @global_var_1001c338.136 to i8*), align 4
  %v1_10006c9c = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_10006c9c, i32* %r11.global-to-local, align 4
  store i32 23, i32* %r0.global-to-local, align 4
  %v0_10006ca4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006ca4 = trunc i32 %v0_10006ca4 to i8
  store i8 %v1_10006ca4, i8* bitcast (i32* @global_var_1001c339.137 to i8*), align 4
  store i16 %v1_10006c88, i16* bitcast (i32* @global_var_1001c334.138 to i16*), align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000bbcc.139 to i32), i32* @r29, align 4
  store i32 %v1_10006c9c, i32* @global_var_1001c350.135, align 4
  store i16 23, i16* @global_var_1001c346.140, align 2
  store i32 ptrtoint ([8 x i8]* @global_var_1000bb5c.141 to i32), i32* @r27, align 4
  %v0_10006cc4 = load i32, i32* @r20, align 4
  %v1_10006cc4 = trunc i32 %v0_10006cc4 to i16
  store i16 %v1_10006cc4, i16* bitcast (i32* @global_var_1001c344.132 to i16*), align 4
  %v2_10006cc8 = ptrtoint i32* %stack_var_-1928 to i32
  store i32 %v2_10006cc8, i32* @r15, align 4
  %v0_10006ccc = call i32 @function_10005f74()
  %v1_10006ccc = trunc i32 %v0_10006ccc to i16
  %v0_10006cd0 = load i32, i32* @r28, align 4
  store i16 %v1_10006ccc, i16* bitcast (i32* @global_var_1001c352.142 to i16*), align 4
  store i32 4, i32* %r5.global-to-local, align 4
  %v0_10006cdc = load i32, i32* @r29, align 4
  store i32 %v0_10006cdc, i32* %r3.global-to-local, align 4
  %v3_10006ce4 = load i32, i32* @global_var_1001c350.135, align 4
  %v1_10006ce8 = or i32 %v3_10006ce4, 131072
  store i32 %v1_10006ce8, i32* %r0.global-to-local, align 4
  store i32 %v1_10006ce8, i32* @global_var_1001c350.135, align 4
  store i32 268463348, i32* @lr, align 4
  %v4_10006cf0 = call i32 @function_100068cc(i32 %v0_10006cdc, i32 %v0_10006cd0, i32 4)
  %v0_10006cfc = load i32, i32* @r29, align 4
  store i32 %v0_10006cfc, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268463368, i32* @lr, align 4
  %v5_10006d04 = call i32 @function_100068cc(i32 %v0_10006cfc, i32 ptrtoint ([5 x i8]* @global_var_1000bb48.143 to i32), i32 8)
  %v0_10006d10 = load i32, i32* @r29, align 4
  store i32 %v0_10006d10, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r5.global-to-local, align 4
  store i32 268463388, i32* @lr, align 4
  %v5_10006d18 = call i32 @function_100068cc(i32 %v0_10006d10, i32 ptrtoint ([9 x i8]* @global_var_1000bb50.144 to i32), i32 12)
  %v0_10006d1c = load i32, i32* @r28, align 4
  %v0_10006d20 = load i32, i32* @r27, align 4
  store i32 %v0_10006d20, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268463404, i32* @lr, align 4
  %v4_10006d28 = call i32 @function_100068cc(i32 %v0_10006d20, i32 %v0_10006d1c, i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_1000bb70.145 to i32), i32* @r28, align 4
  %v0_10006d3c = load i32, i32* @r29, align 4
  store i32 %v0_10006d3c, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r5.global-to-local, align 4
  store i32 268463432, i32* @lr, align 4
  %v5_10006d44 = call i32 @function_100068cc(i32 %v0_10006d3c, i32 ptrtoint ([9 x i8]* @global_var_1000bb64.146 to i32), i32 12)
  %v0_10006d48 = load i32, i32* @r28, align 4
  store i32 %v0_10006d48, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 268463448, i32* @lr, align 4
  %v5_10006d54 = call i32 @function_100068cc(i32 %v0_10006d48, i32 %v0_10006d48, i32 10)
  %v0_10006d60 = load i32, i32* @r29, align 4
  store i32 %v0_10006d60, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r5.global-to-local, align 4
  store i32 268463468, i32* @lr, align 4
  %v5_10006d68 = call i32 @function_100068cc(i32 %v0_10006d60, i32 ptrtoint ([6 x i8]* @global_var_1000bb78.147 to i32), i32 9)
  store i32 ptrtoint ([8 x i8]* @global_var_1000bb80.148 to i32), i32* %r3.global-to-local, align 4
  store i32 14, i32* %r5.global-to-local, align 4
  store i32 268463488, i32* @lr, align 4
  %v4_10006d7c = call i32 @function_100068cc(i32 ptrtoint ([8 x i8]* @global_var_1000bb80.148 to i32), i32 14, i32 14)
  %v0_10006d80 = load i32, i32* @r29, align 4
  store i32 %v0_10006d80, i32* %r3.global-to-local, align 4
  %v0_10006d84 = load i32, i32* @r27, align 4
  store i32 11, i32* %r5.global-to-local, align 4
  store i32 268463504, i32* @lr, align 4
  %v5_10006d8c = call i32 @function_100068cc(i32 %v0_10006d80, i32 %v0_10006d84, i32 11)
  %v0_10006d98 = load i32, i32* @r29, align 4
  store i32 %v0_10006d98, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r5.global-to-local, align 4
  store i32 268463524, i32* @lr, align 4
  %v4_10006da0 = call i32 @function_100068cc(i32 %v0_10006d98, i32 ptrtoint (i32* @global_var_1000bb88.149 to i32), i32 17)
  %v0_10006da8 = load i32, i32* @r29, align 4
  store i32 %v0_10006da8, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r5.global-to-local, align 4
  store i32 268463544, i32* @lr, align 4
  %v5_10006db4 = call i32 @function_100068cc(i32 %v0_10006da8, i32 ptrtoint ([6 x i8]* @global_var_1000bb98.150 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_1000bba0.151 to i32), i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268463564, i32* @lr, align 4
  %v4_10006dc8 = call i32 @function_100068cc(i32 ptrtoint ([5 x i8]* @global_var_1000bba0.151 to i32), i32 8, i32 8)
  %v0_10006dd4 = load i32, i32* @r27, align 4
  store i32 %v0_10006dd4, i32* %r3.global-to-local, align 4
  store i32 15, i32* %r5.global-to-local, align 4
  store i32 268463584, i32* @lr, align 4
  %v4_10006ddc = call i32 @function_100068cc(i32 %v0_10006dd4, i32 ptrtoint (i32* @global_var_1000bba8.152 to i32), i32 15)
  %v0_10006de4 = load i32, i32* @r27, align 4
  store i32 %v0_10006de4, i32* %r3.global-to-local, align 4
  store i32 15, i32* %r5.global-to-local, align 4
  store i32 268463604, i32* @lr, align 4
  %v4_10006df0 = call i32 @function_100068cc(i32 %v0_10006de4, i32 ptrtoint (i32* @global_var_1000bbb4.153 to i32), i32 15)
  %v0_10006df8 = load i32, i32* @r28, align 4
  store i32 %v0_10006df8, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r5.global-to-local, align 4
  store i32 268463624, i32* @lr, align 4
  %v5_10006e04 = call i32 @function_100068cc(i32 %v0_10006df8, i32 ptrtoint ([5 x i8]* @global_var_1000bbc0.154 to i32), i32 9)
  store i32 %v5_10006e04, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006e08

dec_label_pc_10006e08:                            ; preds = %dec_label_pc_10007450, %dec_label_pc_10006c54
  %v3_10006e0c = load i32, i32* @global_var_1001c2bc.124, align 4
  store i32 %v3_10006e0c, i32* @r31, align 4
  %v0_10006e10 = load i32, i32* @r23, align 4
  %v2_10006e10 = icmp slt i32 %v0_10006e10, %v3_10006e0c
  %v4_10006e10 = icmp eq i32 %v0_10006e10, %v3_10006e0c
  store i1 %v2_10006e10, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006e10, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10006e10, label %dec_label_pc_10007030, label %dec_label_pc_10006e18

dec_label_pc_10006e18:                            ; preds = %dec_label_pc_10006e08
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10006e1c = ptrtoint i32* %stack_var_-1888 to i32
  store i32 %v2_10006e1c, i32* %r28.global-to-local, align 4
  store i64 0, i64* %stack_var_-1916, align 8
  store i32 0, i32* @r30, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10006e2c

dec_label_pc_10006e2c:                            ; preds = %dec_label_pc_10006f5c.dec_label_pc_10006e2c_crit_edge, %dec_label_pc_10006e18
  %v0_10006e2c = phi i32 [ %v0_10006e2c.pre, %dec_label_pc_10006f5c.dec_label_pc_10006e2c_crit_edge ], [ 0, %dec_label_pc_10006e18 ]
  store i32 %v0_10006e2c, i32* %stack_var_-1888, align 4
  %v0_10006e3c = call i32 @function_10005f74()
  %v1_10006e3c = trunc i32 %v0_10006e3c to i16
  store i32 %v0_10006e3c, i32* %r3.global-to-local, align 4
  store i16 %v1_10006e3c, i16* bitcast (i32* @global_var_1001c334.138 to i16*), align 4
  %v3_10006e48 = load i32, i32* @global_var_1001c298.14, align 4
  store i32 %v3_10006e48, i32* %r0.global-to-local, align 4
  store i32 %v3_10006e48, i32* @global_var_1001c33c.155, align 4
  br label %dec_label_pc_10006e50.preheader

dec_label_pc_10006e50.preheader:                  ; preds = %dec_label_pc_10006e2c, %dec_label_pc_100071f4
  br label %dec_label_pc_10006e50

dec_label_pc_10006e50:                            ; preds = %dec_label_pc_10007290, %dec_label_pc_10007284, %dec_label_pc_10007278, %dec_label_pc_1000726c, %dec_label_pc_10007260, %dec_label_pc_10007258, %dec_label_pc_10007250, %dec_label_pc_10007248, %dec_label_pc_1000723c, %dec_label_pc_10007228, %dec_label_pc_1000721c, %dec_label_pc_10007208, %dec_label_pc_10006f54, %dec_label_pc_10006f4c, %dec_label_pc_10006f44, %dec_label_pc_10006f3c, %dec_label_pc_10006f34, %dec_label_pc_10006f2c, %dec_label_pc_10006f24, %dec_label_pc_10006f1c, %dec_label_pc_10006f14, %dec_label_pc_10006f0c, %dec_label_pc_10006f04, %dec_label_pc_10006ef4, %dec_label_pc_10006ec4, %dec_label_pc_10006e94, %dec_label_pc_10006e8c, %dec_label_pc_10006e7c, %dec_label_pc_10006e74, %dec_label_pc_10006e6c, %dec_label_pc_10006e50, %dec_label_pc_10006e50.preheader
  %v0_10006e50 = call i32 @function_10005f74()
  store i32 %v0_10006e50, i32* %r3.global-to-local, align 4
  %v1_10006e54 = urem i32 %v0_10006e50, 256
  store i32 %v1_10006e54, i32* %r11.global-to-local, align 4
  %v1_10006e58 = udiv i32 %v0_10006e50, 16777216
  store i32 %v1_10006e58, i32* %r10.global-to-local, align 4
  %v1_10006e5c = icmp ult i32 %v1_10006e54, 127
  %v3_10006e5c = icmp eq i32 %v1_10006e54, 127
  store i1 %v1_10006e5c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e5c, i1* %cr7_eq.global-to-local, align 1
  %v1_10006e60 = call i32 @__asm_rlwinm(i32 %v0_10006e50, i32 24, i32 24, i32 31)
  store i32 %v1_10006e60, i32* @r9, align 4
  %v1_10006e64 = call i32 @__asm_rlwinm(i32 %v0_10006e50, i32 16, i32 24, i32 31)
  store i32 %v1_10006e64, i32* %r3.global-to-local, align 4
  %v0_10006e68 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10006e68, label %dec_label_pc_10006e50, label %dec_label_pc_10006e6c

dec_label_pc_10006e6c:                            ; preds = %dec_label_pc_10006e50
  %v0_10006e6c = load i32, i32* %r11.global-to-local, align 4
  %v1_10006e6c = icmp slt i32 %v0_10006e6c, 0
  %v3_10006e6c = icmp eq i32 %v0_10006e6c, 0
  store i1 %v1_10006e6c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e6c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006e6c, label %dec_label_pc_10006e50, label %dec_label_pc_10006e74

dec_label_pc_10006e74:                            ; preds = %dec_label_pc_10006e6c
  %v1_10006e74 = icmp slt i32 %v0_10006e6c, 3
  %v3_10006e74 = icmp eq i32 %v0_10006e6c, 3
  store i1 %v1_10006e74, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e74, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006e74, label %dec_label_pc_10006e50, label %dec_label_pc_10006e7c

dec_label_pc_10006e7c:                            ; preds = %dec_label_pc_10006e74
  %v1_10006e7c = add i32 %v0_10006e6c, 241
  %v1_10006e80 = urem i32 %v1_10006e7c, 256
  store i32 %v1_10006e80, i32* %r0.global-to-local, align 4
  %v1_10006e84 = icmp eq i32 %v1_10006e80, 0
  %v3_10006e84 = icmp eq i32 %v1_10006e80, 1
  store i1 %v1_10006e84, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e84, i1* %cr7_eq.global-to-local, align 1
  %tmp99 = or i32 %v1_10006e80, 1
  %tmp100 = icmp eq i32 %tmp99, 1
  br i1 %tmp100, label %dec_label_pc_10006e50, label %dec_label_pc_10006e8c

dec_label_pc_10006e8c:                            ; preds = %dec_label_pc_10006e7c
  %v1_10006e8c = icmp slt i32 %v0_10006e6c, 56
  %v3_10006e8c = icmp eq i32 %v0_10006e6c, 56
  store i1 %v1_10006e8c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e8c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006e8c, label %dec_label_pc_10006e50, label %dec_label_pc_10006e94

dec_label_pc_10006e94:                            ; preds = %dec_label_pc_10006e8c
  %v1_10006e94 = icmp slt i32 %v0_10006e6c, 10
  %v3_10006e94 = icmp eq i32 %v0_10006e6c, 10
  store i1 %v1_10006e94, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e94, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006e94, label %dec_label_pc_10006e50, label %dec_label_pc_10006e9c

dec_label_pc_10006e9c:                            ; preds = %dec_label_pc_10006e94
  %v1_10006e9c = icmp slt i32 %v0_10006e6c, 192
  %v3_10006e9c = icmp eq i32 %v0_10006e6c, 192
  store i1 %v1_10006e9c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e9c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006e9c, label %dec_label_pc_100071f4, label %dec_label_pc_10006ea4

dec_label_pc_10006ea4:                            ; preds = %dec_label_pc_10006e9c
  %v1_10006ea4 = icmp slt i32 %v0_10006e6c, 172
  %v3_10006ea4 = icmp eq i32 %v0_10006e6c, 172
  store i1 %v1_10006ea4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ea4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006ea4, label %dec_label_pc_10007200, label %dec_label_pc_10006eac

dec_label_pc_10006eac:                            ; preds = %dec_label_pc_10006ea4
  %v1_10006eac = icmp slt i32 %v0_10006e6c, 100
  %v3_10006eac = icmp eq i32 %v0_10006e6c, 100
  store i1 %v1_10006eac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006eac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006eac, label %dec_label_pc_10007214, label %dec_label_pc_10006eb4

dec_label_pc_10006eb4:                            ; preds = %dec_label_pc_10006eac
  %v1_10006eb4 = icmp slt i32 %v0_10006e6c, 169
  %v3_10006eb4 = icmp eq i32 %v0_10006e6c, 169
  store i1 %v1_10006eb4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006eb4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006eb4, label %dec_label_pc_10007228, label %dec_label_pc_10006ebc

dec_label_pc_10006ebc:                            ; preds = %dec_label_pc_10006eb4
  %v1_10006ebc = icmp slt i32 %v0_10006e6c, 198
  %v3_10006ebc = icmp eq i32 %v0_10006e6c, 198
  store i1 %v1_10006ebc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ebc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006ebc, label %dec_label_pc_10007234, label %dec_label_pc_10006ec4

dec_label_pc_10006ec4:                            ; preds = %dec_label_pc_10006ebc
  %v1_10006ec4 = icmp ult i32 %v0_10006e6c, 223
  %v2_10006ec4 = icmp ugt i32 %v0_10006e6c, 223
  %v3_10006ec4 = icmp eq i32 %v0_10006e6c, 223
  store i1 %v1_10006ec4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ec4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10006ec4, label %dec_label_pc_10006e50, label %dec_label_pc_10006ecc

dec_label_pc_10006ecc:                            ; preds = %dec_label_pc_10006ec4
  %v1_10006ecc = icmp slt i32 %v0_10006e6c, 106
  %v3_10006ecc = icmp eq i32 %v0_10006e6c, 106
  store i1 %v1_10006ecc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ecc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006ecc, label %dec_label_pc_10007248, label %dec_label_pc_10006ed4

dec_label_pc_10006ed4:                            ; preds = %dec_label_pc_10006ecc
  %v1_10006ed4 = icmp slt i32 %v0_10006e6c, 150
  %v3_10006ed4 = icmp eq i32 %v0_10006e6c, 150
  store i1 %v1_10006ed4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ed4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006ed4, label %dec_label_pc_1000726c, label %dec_label_pc_10006edc

dec_label_pc_10006edc:                            ; preds = %dec_label_pc_10006ed4
  %v1_10006edc = icmp slt i32 %v0_10006e6c, 49
  %v3_10006edc = icmp eq i32 %v0_10006e6c, 49
  store i1 %v1_10006edc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006edc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006edc, label %dec_label_pc_10007278, label %dec_label_pc_10006ee4

dec_label_pc_10006ee4:                            ; preds = %dec_label_pc_10006edc
  %v1_10006ee4 = icmp slt i32 %v0_10006e6c, 178
  %v3_10006ee4 = icmp eq i32 %v0_10006e6c, 178
  store i1 %v1_10006ee4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ee4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006ee4, label %dec_label_pc_10007284, label %dec_label_pc_10006eec

dec_label_pc_10006eec:                            ; preds = %dec_label_pc_10006ee4
  %v1_10006eec = icmp slt i32 %v0_10006e6c, 160
  %v3_10006eec = icmp eq i32 %v0_10006e6c, 160
  store i1 %v1_10006eec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006eec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006eec, label %dec_label_pc_10007290, label %dec_label_pc_10006ef4

dec_label_pc_10006ef4:                            ; preds = %dec_label_pc_10006eec
  %v1_10006ef4 = add i32 %v0_10006e6c, 250
  %v1_10006ef8 = urem i32 %v1_10006ef4, 256
  store i32 %v1_10006ef8, i32* %r0.global-to-local, align 4
  %v1_10006efc = icmp eq i32 %v1_10006ef8, 0
  %v3_10006efc = icmp eq i32 %v1_10006ef8, 1
  store i1 %v1_10006efc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006efc, i1* %cr7_eq.global-to-local, align 1
  %tmp101 = or i32 %v1_10006ef8, 1
  %tmp102 = icmp eq i32 %tmp101, 1
  br i1 %tmp102, label %dec_label_pc_10006e50, label %dec_label_pc_10006f04

dec_label_pc_10006f04:                            ; preds = %dec_label_pc_10006ef4
  %v1_10006f04 = icmp slt i32 %v0_10006e6c, 11
  %v3_10006f04 = icmp eq i32 %v0_10006e6c, 11
  store i1 %v1_10006f04, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006f04, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006f04, label %dec_label_pc_10006e50, label %dec_label_pc_10006f0c

dec_label_pc_10006f0c:                            ; preds = %dec_label_pc_10006f04
  %v1_10006f0c = icmp slt i32 %v0_10006e6c, 21
  %v3_10006f0c = icmp eq i32 %v0_10006e6c, 21
  store i1 %v1_10006f0c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006f0c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006f0c, label %dec_label_pc_10006e50, label %dec_label_pc_10006f14

dec_label_pc_10006f14:                            ; preds = %dec_label_pc_10006f0c
  %v1_10006f14 = icmp slt i32 %v0_10006e6c, 22
  %v3_10006f14 = icmp eq i32 %v0_10006e6c, 22
  store i1 %v1_10006f14, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006f14, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006f14, label %dec_label_pc_10006e50, label %dec_label_pc_10006f1c

dec_label_pc_10006f1c:                            ; preds = %dec_label_pc_10006f14
  %v1_10006f1c = icmp slt i32 %v0_10006e6c, 26
  %v3_10006f1c = icmp eq i32 %v0_10006e6c, 26
  store i1 %v1_10006f1c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006f1c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006f1c, label %dec_label_pc_10006e50, label %dec_label_pc_10006f24

dec_label_pc_10006f24:                            ; preds = %dec_label_pc_10006f1c
  %v1_10006f24 = icmp slt i32 %v0_10006e6c, 28
  %v3_10006f24 = icmp eq i32 %v0_10006e6c, 28
  store i1 %v1_10006f24, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006f24, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006f24, label %dec_label_pc_10006e50, label %dec_label_pc_10006f2c

dec_label_pc_10006f2c:                            ; preds = %dec_label_pc_10006f24
  %v1_10006f2c = icmp slt i32 %v0_10006e6c, 29
  %v3_10006f2c = icmp eq i32 %v0_10006e6c, 29
  store i1 %v1_10006f2c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006f2c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006f2c, label %dec_label_pc_10006e50, label %dec_label_pc_10006f34

dec_label_pc_10006f34:                            ; preds = %dec_label_pc_10006f2c
  %v1_10006f34 = icmp slt i32 %v0_10006e6c, 30
  %v3_10006f34 = icmp eq i32 %v0_10006e6c, 30
  store i1 %v1_10006f34, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006f34, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006f34, label %dec_label_pc_10006e50, label %dec_label_pc_10006f3c

dec_label_pc_10006f3c:                            ; preds = %dec_label_pc_10006f34
  %v1_10006f3c = icmp slt i32 %v0_10006e6c, 33
  %v3_10006f3c = icmp eq i32 %v0_10006e6c, 33
  store i1 %v1_10006f3c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006f3c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006f3c, label %dec_label_pc_10006e50, label %dec_label_pc_10006f44

dec_label_pc_10006f44:                            ; preds = %dec_label_pc_10006f3c
  %v1_10006f44 = icmp slt i32 %v0_10006e6c, 55
  %v3_10006f44 = icmp eq i32 %v0_10006e6c, 55
  store i1 %v1_10006f44, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006f44, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006f44, label %dec_label_pc_10006e50, label %dec_label_pc_10006f4c

dec_label_pc_10006f4c:                            ; preds = %dec_label_pc_10006f44
  %v1_10006f4c = icmp slt i32 %v0_10006e6c, 214
  %v3_10006f4c = icmp eq i32 %v0_10006e6c, 214
  store i1 %v1_10006f4c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006f4c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006f4c, label %dec_label_pc_10006e50, label %dec_label_pc_10006f54

dec_label_pc_10006f54:                            ; preds = %dec_label_pc_10006f4c
  %v1_10006f54 = icmp slt i32 %v0_10006e6c, 215
  %v3_10006f54 = icmp eq i32 %v0_10006e6c, 215
  store i1 %v1_10006f54, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006f54, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006f54, label %dec_label_pc_10006e50, label %dec_label_pc_10006f54.dec_label_pc_10006f5c.loopexit_crit_edge

dec_label_pc_10006f54.dec_label_pc_10006f5c.loopexit_crit_edge: ; preds = %dec_label_pc_10006f54
  %v0_10006f60.pre.pre = load i32, i32* @r9, align 4
  br label %dec_label_pc_10006f5c

dec_label_pc_10006f5c:                            ; preds = %dec_label_pc_10007290, %dec_label_pc_10007284, %dec_label_pc_10007278, %dec_label_pc_1000726c, %dec_label_pc_10007260, %dec_label_pc_1000723c, %dec_label_pc_10007228, %dec_label_pc_1000721c, %dec_label_pc_10007208, %dec_label_pc_10007234, %dec_label_pc_10007214, %dec_label_pc_10007200, %dec_label_pc_10006f54.dec_label_pc_10006f5c.loopexit_crit_edge, %dec_label_pc_100071f4.dec_label_pc_10006f5c_crit_edge
  %v0_10006f68 = phi i32 [ %v0_10006f6814, %dec_label_pc_100071f4.dec_label_pc_10006f5c_crit_edge ], [ %v1_10006e64, %dec_label_pc_10006f54.dec_label_pc_10006f5c.loopexit_crit_edge ], [ %v1_10006e64, %dec_label_pc_10007200 ], [ %v1_10006e64, %dec_label_pc_10007214 ], [ %v1_10006e64, %dec_label_pc_10007234 ], [ %v1_10006e64, %dec_label_pc_10007208 ], [ %v1_10006e64, %dec_label_pc_1000721c ], [ %v1_10006e64, %dec_label_pc_10007228 ], [ %v1_10006e64, %dec_label_pc_1000723c ], [ %v1_10006e64, %dec_label_pc_10007260 ], [ %v1_10006e64, %dec_label_pc_1000726c ], [ %v1_10006e64, %dec_label_pc_10007278 ], [ %v1_10006e64, %dec_label_pc_10007284 ], [ %v1_10006e64, %dec_label_pc_10007290 ]
  %v0_10006f60 = phi i32 [ %v0_100071f4, %dec_label_pc_100071f4.dec_label_pc_10006f5c_crit_edge ], [ %v0_10006f60.pre.pre, %dec_label_pc_10006f54.dec_label_pc_10006f5c.loopexit_crit_edge ], [ %v0_10007200, %dec_label_pc_10007200 ], [ %v0_10007214, %dec_label_pc_10007214 ], [ %v0_10007234, %dec_label_pc_10007234 ], [ %v0_10007200, %dec_label_pc_10007208 ], [ %v0_10007214, %dec_label_pc_1000721c ], [ %v0_10007228, %dec_label_pc_10007228 ], [ %v0_10007234, %dec_label_pc_1000723c ], [ %v0_10007248, %dec_label_pc_10007260 ], [ %v0_1000726c, %dec_label_pc_1000726c ], [ %v0_10007278, %dec_label_pc_10007278 ], [ %v0_10007284, %dec_label_pc_10007284 ], [ %v0_10007290, %dec_label_pc_10007290 ]
  %v0_10006f5c = phi i32 [ %v0_10006f5c.pre, %dec_label_pc_100071f4.dec_label_pc_10006f5c_crit_edge ], [ %v0_10006e6c, %dec_label_pc_10006f54.dec_label_pc_10006f5c.loopexit_crit_edge ], [ 172, %dec_label_pc_10007200 ], [ 100, %dec_label_pc_10007214 ], [ 198, %dec_label_pc_10007234 ], [ 172, %dec_label_pc_10007208 ], [ 100, %dec_label_pc_1000721c ], [ 169, %dec_label_pc_10007228 ], [ 198, %dec_label_pc_1000723c ], [ 106, %dec_label_pc_10007260 ], [ 150, %dec_label_pc_1000726c ], [ 49, %dec_label_pc_10007278 ], [ 178, %dec_label_pc_10007284 ], [ 160, %dec_label_pc_10007290 ]
  %v1_10006f5c = mul i32 %v0_10006f5c, 16777216
  %v1_10006f60 = mul i32 %v0_10006f60, 65536
  %v2_10006f64 = or i32 %v1_10006f5c, %v1_10006f60
  %v1_10006f68 = mul i32 %v0_10006f68, 256
  %v1_10006f6c = load i32, i32* %r10.global-to-local, align 4
  %v2_10006f6c = or i32 %v2_10006f64, %v1_10006f6c
  store i32 %v2_10006f6c, i32* %r0.global-to-local, align 4
  %v0_10006f70 = load i32, i32* @r21, align 4
  store i32 %v0_10006f70, i32* @r3, align 4
  %v2_10006f74 = or i32 %v2_10006f6c, %v1_10006f68
  store i32 %v2_10006f74, i32* %r9.global-to-local, align 4
  store i32 %v2_10006f74, i32* @global_var_1001c340.156, align 4
  %v0_10006f80 = load i32, i32* %r29.global-to-local, align 4
  %v1_10006f80 = trunc i32 %v0_10006f80 to i16
  store i16 %v1_10006f80, i16* bitcast (i32* @global_var_1001c33a.157 to i16*), align 4
  %v2_10006f84 = call i32 @function_100043cc(i32 %v0_10006f70, i32 20)
  %v3_10006f84 = trunc i32 %v2_10006f84 to i16
  %v3_10006f88 = load i64, i64* %stack_var_-1916, align 8
  %v4_10006f88 = trunc i64 %v3_10006f88 to i32
  store i32 %v4_10006f88, i32* %r9.global-to-local, align 4
  store i16 %v3_10006f84, i16* bitcast (i32* @global_var_1001c33a.157 to i16*), align 4
  %v4_10006f98 = mul nsw i64 %v3_10006f88, 1717986919
  %v5_10006f98 = udiv i64 %v4_10006f98, 4294967296
  %v6_10006f98 = trunc i64 %v5_10006f98 to i32
  %tmp = icmp slt i32 %v4_10006f88, 0
  %v1_10006f9c = zext i1 %tmp to i32
  %v2_10006f9c = ashr i32 %v4_10006f88, 31
  %v3_10006f9c = and i32 %v2_10006f9c, -2
  %v4_10006f9c = or i32 %v3_10006f9c, %v1_10006f9c
  store i32 %v4_10006f9c, i32* %r11.global-to-local, align 4
  %v1_10006fa042 = udiv i64 %v4_10006f98, 17179869184
  %v1_10006fa0 = trunc i64 %v1_10006fa042 to i32
  %v2_10006fa0 = ashr i32 %v6_10006f98, 31
  %v3_10006fa0 = and i32 %v2_10006fa0, -1073741824
  %v4_10006fa0 = or i32 %v3_10006fa0, %v1_10006fa0
  %v2_10006fa4 = sub nsw i32 %v4_10006fa0, %v4_10006f9c
  %v1_10006fa8 = mul i32 %v2_10006fa4, 10
  %v2_10006fac = icmp slt i32 %v4_10006f88, %v1_10006fa8
  %v4_10006fac = icmp eq i32 %v4_10006f88, %v1_10006fa8
  store i1 %v2_10006fac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006fac, i1* %cr7_eq.global-to-local, align 1
  %.3 = select i1 %v4_10006fac, i16 2323, i16 23
  store i16 %.3, i16* @global_var_1001c346.140, align 2
  %v3_10006fbc = load i32, i32* @global_var_1001c340.156, align 4
  store i32 %v3_10006fbc, i32* %r0.global-to-local, align 4
  %v0_10006fc0 = load i32, i32* @r22, align 4
  store i32 %v0_10006fc0, i32* @r4, align 4
  %v0_10006fc4 = load i32, i32* %r29.global-to-local, align 4
  %v1_10006fc4 = trunc i32 %v0_10006fc4 to i16
  store i16 %v1_10006fc4, i16* bitcast (i32* @global_var_1001c354.158 to i16*), align 4
  store i32 20, i32* %r5.global-to-local, align 4
  store i32 %v3_10006fbc, i32* @global_var_1001c348.159, align 4
  %v0_10006fd4 = load i32, i32* @r21, align 4
  store i32 %v0_10006fd4, i32* %r3.global-to-local, align 4
  %v4_10006fd8 = call i32 @function_10004430(i32 %v0_10006fd4, i32 %v0_10006fc0, i32 20, i32 20)
  %v5_10006fd8 = trunc i32 %v4_10006fd8 to i16
  store i16 %v5_10006fd8, i16* bitcast (i32* @global_var_1001c354.158 to i16*), align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_10006fe8 = load i32, i32* @global_var_1001c340.156, align 4
  store i32 %v3_10006fe8, i32* %r9.global-to-local, align 4
  %v0_10006fec = load i32, i32* @r21, align 4
  %v3_10006ff0 = load i16, i16* @global_var_1001c346.140, align 2
  %v4_10006ff0 = zext i16 %v3_10006ff0 to i32
  store i32 %v4_10006ff0, i32* %r11.global-to-local, align 4
  store i32 40, i32* %r5.global-to-local, align 4
  %v3_10006ff8 = load i32, i32* @global_var_1001c2c4.130, align 4
  store i32 %v3_10006ff8, i32* %r3.global-to-local, align 4
  %v1_10006ffc = ptrtoint i32* %stack_var_-1888 to i32
  store i32 %v1_10006ffc, i32* %r7.global-to-local, align 4
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 2, i32* %stack_var_-1888, align 4
  store i32 268464152, i32* @lr, align 4
  %v6_10007014 = call i32 @function_10009ddc(i32 %v3_10006ff8, i32 %v0_10006fec, i32 40, i32 16384, i32 %v1_10006ffc, i32 16)
  store i32 %v6_10007014, i32* %r3.global-to-local, align 4
  %v3_10007018 = load i64, i64* %stack_var_-1916, align 8
  %v4_10007018 = trunc i64 %v3_10007018 to i32
  %v1_1000701c = add i32 %v4_10007018, 1
  store i32 %v1_1000701c, i32* %r9.global-to-local, align 4
  %v1_10007020 = icmp slt i32 %v1_1000701c, 483
  %v3_10007020 = icmp eq i32 %v1_1000701c, 483
  store i1 %v1_10007020, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007020, i1* %cr7_eq.global-to-local, align 1
  %v5_10007024 = sext i32 %v1_1000701c to i64
  store i64 %v5_10007024, i64* %stack_var_-1916, align 8
  %tmp103 = icmp slt i32 %v1_1000701c, 484
  br i1 %tmp103, label %dec_label_pc_10006f5c.dec_label_pc_10006e2c_crit_edge, label %dec_label_pc_1000702c

dec_label_pc_10006f5c.dec_label_pc_10006e2c_crit_edge: ; preds = %dec_label_pc_10006f5c
  %v0_10006e2c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10006e2c

dec_label_pc_1000702c:                            ; preds = %dec_label_pc_10006f5c
  %v0_1000702c = load i32, i32* @r31, align 4
  store i32 %v0_1000702c, i32* @r23, align 4
  br label %dec_label_pc_10007030

dec_label_pc_10007030:                            ; preds = %dec_label_pc_10006e08, %dec_label_pc_1000702c
  %v0_10007030 = call i32 @function_10009824()
  store i32 %v0_10007030, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 %v0_10007030, i32* %r24.global-to-local, align 4
  %v2_10007048 = ptrtoint i32* %stack_var_-1616 to i32
  %v4_10007094 = zext i8 %tmp56 to i32
  %v1_10007098 = icmp ult i8 %tmp56, 6
  %v3_10007098 = icmp eq i8 %tmp56, 6
  %v4_100070a0 = zext i16 %tmp55 to i32
  %v1_100070a8 = icmp ult i16 %tmp55, 23
  %v3_100070a8 = icmp eq i16 %tmp55, 23
  %v4_100070b8 = zext i16 %tmp54 to i32
  %v1_100070c8 = and i32 %tmp53, 131072
  %v3_100070c8 = icmp eq i32 %v1_100070c8, 0
  %v1_100070f0 = add i32 %tmp52, -1
  %v2_100070f4 = icmp slt i32 %v1_100070f0, %tmp51
  %v4_100070f4 = icmp eq i32 %v1_100070f0, %tmp51
  %v1_100070d0 = and i32 %tmp53, 1048576
  %v3_100070d0 = icmp eq i32 %v1_100070d0, 0
  %v1_100070d8 = and i32 %tmp53, 262144
  %v3_100070d8 = icmp eq i32 %v1_100070d8, 0
  %v1_100070e0 = and i32 %tmp53, 65536
  %v3_100070e0 = icmp eq i32 %v1_100070e0, 0
  %v1_100070b0 = icmp ult i16 %tmp55, 2323
  %v3_100070b0 = icmp eq i16 %tmp55, 2323
  br label %dec_label_pc_1000703c

dec_label_pc_1000703c:                            ; preds = %dec_label_pc_100070e8, %dec_label_pc_100070e0, %dec_label_pc_100070d8, %dec_label_pc_100070b8, %dec_label_pc_100070b0, %dec_label_pc_10007094, %dec_label_pc_10007080, %dec_label_pc_100070d0, %dec_label_pc_100070c4, %dec_label_pc_10007078, %dec_label_pc_10008218, %dec_label_pc_10007030
  %v1_10007044 = phi i32 [ %v0_10007030, %dec_label_pc_10007030 ], [ %v1_10007044.pre.pre, %dec_label_pc_10008218 ], [ %v0_1000706c, %dec_label_pc_10007078 ], [ %v0_1000706c, %dec_label_pc_100070c4 ], [ %v0_1000706c, %dec_label_pc_100070d0 ], [ %v0_1000706c, %dec_label_pc_10007080 ], [ %v0_1000706c, %dec_label_pc_10007094 ], [ %v0_1000706c, %dec_label_pc_100070b0 ], [ %v0_1000706c, %dec_label_pc_100070b8 ], [ %v0_1000706c, %dec_label_pc_100070d8 ], [ %v0_1000706c, %dec_label_pc_100070e0 ], [ %v0_1000706c, %dec_label_pc_100070e8 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10007044 = inttoptr i32 %v1_10007044 to i32*
  store i32 0, i32* %v2_10007044, align 4
  store i32 1514, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v3_10007054 = load i32, i32* @global_var_1001c2c4.130, align 4
  store i32 %v3_10007054, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 268464228, i32* @lr, align 4
  %v6_10007060 = call i32 @function_10009d64(i32 %v3_10007054, i32 %v2_10007048, i32 1514, i32 16384, i32 0, i32 0)
  store i32 %v6_10007060, i32* %r3.global-to-local, align 4
  %tmp104 = icmp slt i32 %v6_10007060, 1
  br i1 %tmp104, label %dec_label_pc_100072a8, label %dec_label_pc_1000706c

dec_label_pc_1000706c:                            ; preds = %dec_label_pc_1000703c
  %v0_1000706c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000706c = inttoptr i32 %v0_1000706c to i32*
  %v2_1000706c = load i32, i32* %v1_1000706c, align 4
  store i32 %v2_1000706c, i32* %r0.global-to-local, align 4
  %v1_10007070 = icmp slt i32 %v2_1000706c, 11
  %v3_10007070 = icmp eq i32 %v2_1000706c, 11
  store i1 %v1_10007070, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007070, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007070, label %dec_label_pc_100072a8, label %dec_label_pc_10007078

dec_label_pc_10007078:                            ; preds = %dec_label_pc_1000706c
  %v1_10007078 = icmp ult i32 %v6_10007060, 39
  %v3_10007078 = icmp eq i32 %v6_10007060, 39
  store i1 %v1_10007078, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007078, i1* %cr7_eq.global-to-local, align 1
  %tmp105 = icmp ult i32 %v6_10007060, 40
  br i1 %tmp105, label %dec_label_pc_1000703c, label %dec_label_pc_10007080

dec_label_pc_10007080:                            ; preds = %dec_label_pc_10007078
  store i32 %tmp57, i32* %r9.global-to-local, align 4
  %v3_10007088 = load i32, i32* @global_var_1001c298.14, align 4
  store i32 %v3_10007088, i32* %r0.global-to-local, align 4
  %v2_1000708c = icmp slt i32 %tmp57, %v3_10007088
  %v4_1000708c = icmp eq i32 %tmp57, %v3_10007088
  store i1 %v2_1000708c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000708c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000708c, label %dec_label_pc_10007094, label %dec_label_pc_1000703c

dec_label_pc_10007094:                            ; preds = %dec_label_pc_10007080
  store i32 %v4_10007094, i32* %r0.global-to-local, align 4
  store i1 %v1_10007098, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007098, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007098, label %dec_label_pc_100070a0, label %dec_label_pc_1000703c

dec_label_pc_100070a0:                            ; preds = %dec_label_pc_10007094
  store i32 %v4_100070a0, i32* %r8.global-to-local, align 4
  store i32 %v4_100070a0, i32* %r0.global-to-local, align 4
  store i1 %v1_100070a8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100070a8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100070a8, label %dec_label_pc_100070b8, label %dec_label_pc_100070b0

dec_label_pc_100070b0:                            ; preds = %dec_label_pc_100070a0
  store i1 %v1_100070b0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100070b0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100070b0, label %dec_label_pc_100070b8, label %dec_label_pc_1000703c

dec_label_pc_100070b8:                            ; preds = %dec_label_pc_100070b0, %dec_label_pc_100070a0
  store i32 %v4_100070b8, i32* %r0.global-to-local, align 4
  %v1_100070bc = load i32, i32* @r20, align 4
  %v2_100070bc = icmp slt i32 %v4_100070b8, %v1_100070bc
  %v4_100070bc = icmp eq i32 %v4_100070b8, %v1_100070bc
  store i1 %v2_100070bc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100070bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100070bc, label %dec_label_pc_100070c4, label %dec_label_pc_1000703c

dec_label_pc_100070c4:                            ; preds = %dec_label_pc_100070b8
  store i32 %tmp53, i32* %r0.global-to-local, align 4
  store i32 %v1_100070c8, i32* %r9.global-to-local, align 4
  br i1 %v3_100070c8, label %dec_label_pc_1000703c, label %dec_label_pc_100070d0

dec_label_pc_100070d0:                            ; preds = %dec_label_pc_100070c4
  store i32 %v1_100070d0, i32* %r10.global-to-local, align 4
  br i1 %v3_100070d0, label %dec_label_pc_1000703c, label %dec_label_pc_100070d8

dec_label_pc_100070d8:                            ; preds = %dec_label_pc_100070d0
  store i32 %v1_100070d8, i32* %r11.global-to-local, align 4
  br i1 %v3_100070d8, label %dec_label_pc_100070e0, label %dec_label_pc_1000703c

dec_label_pc_100070e0:                            ; preds = %dec_label_pc_100070d8
  br i1 %v3_100070e0, label %dec_label_pc_100070e8, label %dec_label_pc_1000703c

dec_label_pc_100070e8:                            ; preds = %dec_label_pc_100070e0
  store i32 %tmp52, i32* %r9.global-to-local, align 4
  store i32 %tmp51, i32* %r0.global-to-local, align 4
  store i32 %v1_100070f0, i32* %r10.global-to-local, align 4
  store i1 %v2_100070f4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100070f4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100070f4, label %dec_label_pc_100070fc, label %dec_label_pc_1000703c

dec_label_pc_100070fc:                            ; preds = %dec_label_pc_100070e8
  %v0_100070fc = load i32, i32* @r31, align 4
  %v1_100070fc = icmp slt i32 %v0_100070fc, 355
  %v2_100070fc = icmp sgt i32 %v0_100070fc, 355
  %v3_100070fc = icmp eq i32 %v0_100070fc, 355
  store i1 %v1_100070fc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100070fc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100070fc, label %dec_label_pc_100072a8, label %dec_label_pc_10007104

dec_label_pc_10007104:                            ; preds = %dec_label_pc_100070fc
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v1_10007108 = mul i32 %v0_100070fc, 388
  store i32 %v1_10007108, i32* %r11.global-to-local, align 4
  %v3_1000710c = load i32, i32* @global_var_1001c2c0.129, align 4
  store i32 %v3_1000710c, i32* %r0.global-to-local, align 4
  %v2_10007110 = add i32 %v3_1000710c, %v1_10007108
  store i32 %v2_10007110, i32* @r3, align 4
  %v1_10007114 = add i32 %v2_10007110, 12
  %v2_10007114 = inttoptr i32 %v1_10007114 to i32*
  %v3_10007114 = load i32, i32* %v2_10007114, align 4
  store i32 %v3_10007114, i32* %r9.global-to-local, align 4
  %v1_10007118 = icmp slt i32 %v3_10007114, 0
  %v3_10007118 = icmp eq i32 %v3_10007114, 0
  store i1 %v1_10007118, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007118, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007118, label %dec_label_pc_10008214, label %dec_label_pc_10007120

dec_label_pc_10007120:                            ; preds = %dec_label_pc_10007104
  %v1_10007120 = sub i32 356, %v0_100070fc
  store i32 %v1_10007120, i32* %r11.global-to-local, align 4
  store i32 %v0_100070fc, i32* %r29.global-to-local, align 4
  store i32 %v1_10007120, i32* %ctr.global-to-local, align 4
  %v1_1000712c = add i32 %v2_10007110, 388
  store i32 %v1_1000712c, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10007130

dec_label_pc_10007130:                            ; preds = %dec_label_pc_10007138, %dec_label_pc_10007120
  %v0_10007138 = phi i32 [ %v1_10007140, %dec_label_pc_10007138 ], [ %v1_1000712c, %dec_label_pc_10007120 ]
  %v0_10007134 = phi i32 [ %v1_10007134, %dec_label_pc_10007138 ], [ %v1_10007120, %dec_label_pc_10007120 ]
  %v0_10007130 = phi i32 [ %v1_10007130, %dec_label_pc_10007138 ], [ %v0_100070fc, %dec_label_pc_10007120 ]
  %v1_10007130 = add i32 %v0_10007130, 1
  store i32 %v1_10007130, i32* @r29, align 4
  %v1_10007134 = add i32 %v0_10007134, -1
  store i32 %v1_10007134, i32* %ctr.global-to-local, align 4
  %v2_10007134 = icmp eq i32 %v1_10007134, 0
  br i1 %v2_10007134, label %dec_label_pc_100072a8, label %dec_label_pc_10007138

dec_label_pc_10007138:                            ; preds = %dec_label_pc_10007130
  %v1_10007138 = add i32 %v0_10007138, 12
  %v2_10007138 = inttoptr i32 %v1_10007138 to i32*
  %v3_10007138 = load i32, i32* %v2_10007138, align 4
  store i32 %v3_10007138, i32* %r0.global-to-local, align 4
  store i32 %v0_10007138, i32* @r3, align 4
  %v1_10007140 = add i32 %v0_10007138, 388
  store i32 %v1_10007140, i32* %r9.global-to-local, align 4
  %v1_10007144 = icmp slt i32 %v3_10007138, 0
  %v3_10007144 = icmp eq i32 %v3_10007138, 0
  store i1 %v1_10007144, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007144, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007144, label %dec_label_pc_10008218, label %dec_label_pc_10007130

dec_label_pc_100071ec:                            ; preds = %dec_label_pc_10006bc8, %dec_label_pc_10008204
  %v0_100071f0 = call i32 @function_1000a8cc()
  store i32 %v0_100071f0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100071f4

dec_label_pc_100071f4:                            ; preds = %dec_label_pc_10006e9c, %dec_label_pc_100071ec
  %v0_10006f6814 = phi i32 [ %v0_100071f0, %dec_label_pc_100071ec ], [ %v1_10006e64, %dec_label_pc_10006e9c ]
  %v0_100071f4 = load i32, i32* @r9, align 4
  %v1_100071f4 = icmp slt i32 %v0_100071f4, 168
  %v3_100071f4 = icmp eq i32 %v0_100071f4, 168
  store i1 %v1_100071f4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100071f4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100071f4, label %dec_label_pc_10006e50.preheader, label %dec_label_pc_100071f4.dec_label_pc_10006f5c_crit_edge

dec_label_pc_100071f4.dec_label_pc_10006f5c_crit_edge: ; preds = %dec_label_pc_100071f4
  %v0_10006f5c.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006f5c

dec_label_pc_10007200:                            ; preds = %dec_label_pc_10006ea4
  %v0_10007200 = load i32, i32* @r9, align 4
  %v1_10007200 = icmp ult i32 %v0_10007200, 15
  %v3_10007200 = icmp eq i32 %v0_10007200, 15
  store i1 %v1_10007200, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007200, i1* %cr7_eq.global-to-local, align 1
  %tmp106 = icmp ult i32 %v0_10007200, 16
  br i1 %tmp106, label %dec_label_pc_10006f5c, label %dec_label_pc_10007208

dec_label_pc_10007208:                            ; preds = %dec_label_pc_10007200
  %v1_10007208 = icmp ult i32 %v0_10007200, 31
  %v3_10007208 = icmp eq i32 %v0_10007200, 31
  store i1 %v1_10007208, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007208, i1* %cr7_eq.global-to-local, align 1
  %tmp107 = icmp ult i32 %v0_10007200, 32
  br i1 %tmp107, label %dec_label_pc_10006e50, label %dec_label_pc_10006f5c

dec_label_pc_10007214:                            ; preds = %dec_label_pc_10006eac
  %v0_10007214 = load i32, i32* @r9, align 4
  %v1_10007214 = icmp ult i32 %v0_10007214, 63
  %v3_10007214 = icmp eq i32 %v0_10007214, 63
  store i1 %v1_10007214, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007214, i1* %cr7_eq.global-to-local, align 1
  %tmp108 = icmp ult i32 %v0_10007214, 64
  br i1 %tmp108, label %dec_label_pc_10006f5c, label %dec_label_pc_1000721c

dec_label_pc_1000721c:                            ; preds = %dec_label_pc_10007214
  %v1_1000721c = icmp ult i32 %v0_10007214, 126
  %v3_1000721c = icmp eq i32 %v0_10007214, 126
  store i1 %v1_1000721c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000721c, i1* %cr7_eq.global-to-local, align 1
  %tmp109 = icmp ult i32 %v0_10007214, 127
  br i1 %tmp109, label %dec_label_pc_10006e50, label %dec_label_pc_10006f5c

dec_label_pc_10007228:                            ; preds = %dec_label_pc_10006eb4
  %v0_10007228 = load i32, i32* @r9, align 4
  %v1_10007228 = icmp slt i32 %v0_10007228, 255
  %v3_10007228 = icmp eq i32 %v0_10007228, 255
  store i1 %v1_10007228, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007228, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007228, label %dec_label_pc_10006e50, label %dec_label_pc_10006f5c

dec_label_pc_10007234:                            ; preds = %dec_label_pc_10006ebc
  %v0_10007234 = load i32, i32* @r9, align 4
  %v1_10007234 = icmp ult i32 %v0_10007234, 17
  %v3_10007234 = icmp eq i32 %v0_10007234, 17
  store i1 %v1_10007234, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007234, i1* %cr7_eq.global-to-local, align 1
  %tmp110 = icmp ult i32 %v0_10007234, 18
  br i1 %tmp110, label %dec_label_pc_10006f5c, label %dec_label_pc_1000723c

dec_label_pc_1000723c:                            ; preds = %dec_label_pc_10007234
  %v1_1000723c = icmp eq i32 %v0_10007234, 18
  %v3_1000723c = icmp eq i32 %v0_10007234, 19
  store i1 %v1_1000723c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000723c, i1* %cr7_eq.global-to-local, align 1
  %tmp111 = icmp ult i32 %v0_10007234, 20
  br i1 %tmp111, label %dec_label_pc_10006e50, label %dec_label_pc_10006f5c

dec_label_pc_10007248:                            ; preds = %dec_label_pc_10006ecc
  %v0_10007248 = load i32, i32* @r9, align 4
  %v1_10007248 = icmp slt i32 %v0_10007248, 186
  %v3_10007248 = icmp eq i32 %v0_10007248, 186
  store i1 %v1_10007248, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007248, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007248, label %dec_label_pc_10006e50, label %dec_label_pc_10007250

dec_label_pc_10007250:                            ; preds = %dec_label_pc_10007248
  %v1_10007250 = icmp slt i32 %v0_10007248, 187
  %v3_10007250 = icmp eq i32 %v0_10007248, 187
  store i1 %v1_10007250, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007250, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007250, label %dec_label_pc_10006e50, label %dec_label_pc_10007258

dec_label_pc_10007258:                            ; preds = %dec_label_pc_10007250
  %v1_10007258 = icmp slt i32 %v0_10007248, 185
  %v3_10007258 = icmp eq i32 %v0_10007248, 185
  store i1 %v1_10007258, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007258, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007258, label %dec_label_pc_10006e50, label %dec_label_pc_10007260

dec_label_pc_10007260:                            ; preds = %dec_label_pc_10007258
  %v1_10007260 = icmp slt i32 %v0_10007248, 184
  %v3_10007260 = icmp eq i32 %v0_10007248, 184
  store i1 %v1_10007260, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007260, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007260, label %dec_label_pc_10006e50, label %dec_label_pc_10006f5c

dec_label_pc_1000726c:                            ; preds = %dec_label_pc_10006ed4
  %v0_1000726c = load i32, i32* @r9, align 4
  %v1_1000726c = icmp slt i32 %v0_1000726c, 31
  %v3_1000726c = icmp eq i32 %v0_1000726c, 31
  store i1 %v1_1000726c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000726c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000726c, label %dec_label_pc_10006e50, label %dec_label_pc_10006f5c

dec_label_pc_10007278:                            ; preds = %dec_label_pc_10006edc
  %v0_10007278 = load i32, i32* @r9, align 4
  %v1_10007278 = icmp slt i32 %v0_10007278, 51
  %v3_10007278 = icmp eq i32 %v0_10007278, 51
  store i1 %v1_10007278, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007278, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007278, label %dec_label_pc_10006e50, label %dec_label_pc_10006f5c

dec_label_pc_10007284:                            ; preds = %dec_label_pc_10006ee4
  %v0_10007284 = load i32, i32* @r9, align 4
  %v1_10007284 = icmp slt i32 %v0_10007284, 62
  %v3_10007284 = icmp eq i32 %v0_10007284, 62
  store i1 %v1_10007284, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007284, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007284, label %dec_label_pc_10006e50, label %dec_label_pc_10006f5c

dec_label_pc_10007290:                            ; preds = %dec_label_pc_10006eec
  %v0_10007290 = load i32, i32* @r9, align 4
  %v1_10007290 = icmp slt i32 %v0_10007290, 13
  %v3_10007290 = icmp eq i32 %v0_10007290, 13
  store i1 %v1_10007290, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007290, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007290, label %dec_label_pc_10006e50, label %dec_label_pc_10006f5c

dec_label_pc_100072a8:                            ; preds = %dec_label_pc_100070fc, %dec_label_pc_1000706c, %dec_label_pc_1000703c, %dec_label_pc_10007130
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r10.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v2_100072c0133 = load i32, i32* @r1, align 4
  %v3_100072c0134 = add i32 %v2_100072c0133, 64
  %v4_100072c0135 = inttoptr i32 %v3_100072c0134 to i32*
  store i32 0, i32* %v4_100072c0135, align 4
  %v0_100072c4136 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100072c4137 = add i32 %v0_100072c4136, -1
  store i32 %v1_100072c4137, i32* %ctr.global-to-local, align 4
  %v2_100072c4138 = icmp eq i32 %v1_100072c4137, 0
  br i1 %v2_100072c4138, label %dec_label_pc_100072c8, label %dec_label_pc_100072b8.dec_label_pc_100072b8_crit_edge

dec_label_pc_100072b8.dec_label_pc_100072b8_crit_edge: ; preds = %dec_label_pc_100072a8, %dec_label_pc_100072b8.dec_label_pc_100072b8_crit_edge
  %v0_100072b8.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_100072c0.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_100072b8 = add i32 %v0_100072b8.pre, 64
  store i32 %v1_100072b8, i32* %r10.global-to-local, align 4
  %v1_100072bc = add i32 %v0_100072b8.pre, 4
  store i32 %v1_100072bc, i32* %r9.global-to-local, align 4
  %v2_100072c0 = load i32, i32* @r1, align 4
  %v3_100072c0 = add i32 %v2_100072c0, %v1_100072b8
  %v4_100072c0 = inttoptr i32 %v3_100072c0 to i32*
  store i32 %v0_100072c0.pre, i32* %v4_100072c0, align 4
  %v0_100072c4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100072c4 = add i32 %v0_100072c4, -1
  store i32 %v1_100072c4, i32* %ctr.global-to-local, align 4
  %v2_100072c4 = icmp eq i32 %v1_100072c4, 0
  br i1 %v2_100072c4, label %dec_label_pc_100072c8, label %dec_label_pc_100072b8.dec_label_pc_100072b8_crit_edge

dec_label_pc_100072c8:                            ; preds = %dec_label_pc_100072b8.dec_label_pc_100072b8_crit_edge, %dec_label_pc_100072a8
  store i32 32, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v2_100072e0127 = load i32, i32* @r1, align 4
  %v3_100072e0128 = add i32 %v2_100072e0127, 192
  %v4_100072e0129 = inttoptr i32 %v3_100072e0128 to i32*
  store i32 0, i32* %v4_100072e0129, align 4
  %v0_100072e4130 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100072e4131 = add i32 %v0_100072e4130, -1
  store i32 %v1_100072e4131, i32* %ctr.global-to-local, align 4
  %v2_100072e4132 = icmp eq i32 %v1_100072e4131, 0
  br i1 %v2_100072e4132, label %dec_label_pc_100072e8, label %dec_label_pc_100072d8.dec_label_pc_100072d8_crit_edge

dec_label_pc_100072d8.dec_label_pc_100072d8_crit_edge: ; preds = %dec_label_pc_100072c8, %dec_label_pc_100072d8.dec_label_pc_100072d8_crit_edge
  %v0_100072d8.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_100072e0.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_100072d8 = add i32 %v0_100072d8.pre, 192
  %v1_100072dc = add i32 %v0_100072d8.pre, 4
  store i32 %v1_100072dc, i32* %r9.global-to-local, align 4
  %v2_100072e0 = load i32, i32* @r1, align 4
  %v3_100072e0 = add i32 %v2_100072e0, %v1_100072d8
  %v4_100072e0 = inttoptr i32 %v3_100072e0 to i32*
  store i32 %v0_100072e0.pre, i32* %v4_100072e0, align 4
  %v0_100072e4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100072e4 = add i32 %v0_100072e4, -1
  store i32 %v1_100072e4, i32* %ctr.global-to-local, align 4
  %v2_100072e4 = icmp eq i32 %v1_100072e4, 0
  br i1 %v2_100072e4, label %dec_label_pc_100072e8, label %dec_label_pc_100072d8.dec_label_pc_100072d8_crit_edge

dec_label_pc_100072e8:                            ; preds = %dec_label_pc_100072d8.dec_label_pc_100072d8_crit_edge, %dec_label_pc_100072c8
  store i32 0, i32* %r30.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  %v0_100072fc = load i32, i32* %r0.global-to-local, align 4
  %v5_100072fc = sext i32 %v0_100072fc to i64
  store i64 %v5_100072fc, i64* %stack_var_-1916, align 8
  %v2_10007420 = ptrtoint i32* %stack_var_-1872 to i32
  %v2_10007424 = ptrtoint i32* %stack_var_-1744 to i32
  %v2_10007428 = ptrtoint i32* %stack_var_-1908 to i32
  %v2_10008008 = ptrtoint i32* %stack_var_-1920 to i32
  %v1_10008018 = ptrtoint i32* %stack_var_-1912 to i32
  br label %dec_label_pc_10007368

dec_label_pc_10007304:                            ; preds = %dec_label_pc_10007368
  %v1_10007308 = add i32 %v2_10007378, 8
  %v2_10007308 = inttoptr i32 %v1_10007308 to i32*
  %v3_10007308 = load i32, i32* %v2_10007308, align 4
  store i32 %v3_10007308, i32* %r9.global-to-local, align 4
  %v3_1000730c = load i32, i32* @global_var_1001c2bc.124, align 4
  %v2_10007310 = sub i32 %v3_1000730c, %v3_10007308
  store i32 %v2_10007310, i32* %r0.global-to-local, align 4
  %v2_10007314 = icmp ult i32 %v2_10007310, 30
  %v3_10007314 = icmp ugt i32 %v2_10007310, 30
  %v4_10007314 = icmp eq i32 %v2_10007310, 30
  store i1 %v2_10007314, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007314, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007314, label %dec_label_pc_100073ac, label %dec_label_pc_1000731c

dec_label_pc_1000731c:                            ; preds = %dec_label_pc_10007390, %dec_label_pc_10007304
  %v1_1000731c = icmp slt i32 %v3_1000737c, 1
  store i1 %v1_1000731c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007380, i1* %cr7_eq.global-to-local, align 1
  %v1_10007570 = add i32 %v2_10007378, 4
  %v2_10007570 = inttoptr i32 %v1_10007570 to i32*
  %v3_10007570 = load i32, i32* %v2_10007570, align 4
  store i32 %v3_10007570, i32* %r3.global-to-local, align 4
  br i1 %v3_10007380, label %dec_label_pc_10007570, label %dec_label_pc_10007324

dec_label_pc_10007324:                            ; preds = %dec_label_pc_1000731c
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1000732c = call i32 @__asm_rlwinm(i32 %v3_10007570, i32 29, i32 3, i32 29)
  %v0_10007330 = load i32, i32* %r30.global-to-local, align 4
  %v2_10007330 = icmp slt i32 %v0_10007330, %v3_10007570
  %v4_10007330 = icmp eq i32 %v0_10007330, %v3_10007570
  store i1 %v2_10007330, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007330, i1* %cr7_eq.global-to-local, align 1
  %v1_10007334 = load i32, i32* @r15, align 4
  %v2_10007334 = add i32 %v1_10007334, %v1_1000732c
  store i32 %v2_10007334, i32* %r11.global-to-local, align 4
  %v1_10007338 = urem i32 %v3_10007570, 32
  store i32 %v1_10007338, i32* %r10.global-to-local, align 4
  %v1_1000733c = add i32 %v2_10007334, 56
  %v2_1000733c = inttoptr i32 %v1_1000733c to i32*
  %v3_1000733c = load i32, i32* %v2_1000733c, align 4
  %v0_10007340 = load i32, i32* %r0.global-to-local, align 4
  %v3_10007340 = shl i32 %v0_10007340, %v1_10007338
  store i32 %v3_10007340, i32* %r0.global-to-local, align 4
  %v2_10007344 = or i32 %v3_10007340, %v3_1000733c
  store i32 %v2_10007344, i32* %r9.global-to-local, align 4
  store i32 %v2_10007344, i32* %v2_1000733c, align 4
  br i1 %v2_10007330, label %dec_label_pc_10007350, label %dec_label_pc_10007354

dec_label_pc_10007350:                            ; preds = %dec_label_pc_10007324
  store i32 %v3_10007570, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10007354

dec_label_pc_10007354:                            ; preds = %dec_label_pc_10007570, %dec_label_pc_10007324, %dec_label_pc_10007388, %dec_label_pc_10007598, %dec_label_pc_10007564, %dec_label_pc_10007350
  %v3_10007354 = load i64, i64* %stack_var_-1916, align 8
  %v4_10007354 = trunc i64 %v3_10007354 to i32
  %v1_10007358 = add i32 %v4_10007354, 1
  store i32 %v1_10007358, i32* %r9.global-to-local, align 4
  %v1_1000735c = icmp slt i32 %v1_10007358, 355
  %v2_1000735c = icmp sgt i32 %v1_10007358, 355
  %v3_1000735c = icmp eq i32 %v1_10007358, 355
  store i1 %v1_1000735c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000735c, i1* %cr7_eq.global-to-local, align 1
  %v5_10007360 = sext i32 %v1_10007358 to i64
  store i64 %v5_10007360, i64* %stack_var_-1916, align 8
  br i1 %v2_1000735c, label %dec_label_pc_100073fc, label %dec_label_pc_10007368

dec_label_pc_10007368:                            ; preds = %dec_label_pc_100073e0, %dec_label_pc_10007354, %dec_label_pc_100072e8
  %v0_1000736c = phi i32 [ 0, %dec_label_pc_100072e8 ], [ %v1_10007358, %dec_label_pc_10007354 ], [ %v1_100073ec, %dec_label_pc_100073e0 ]
  store i32 268566528, i32* %r10.global-to-local, align 4
  %v1_1000736c = mul i32 %v0_1000736c, 388
  store i32 %v1_1000736c, i32* %r9.global-to-local, align 4
  %v3_10007370 = load i32, i32* @global_var_1001c2c0.129, align 4
  store i32 %v3_10007370, i32* %r0.global-to-local, align 4
  store i32 30, i32* %r11.global-to-local, align 4
  %v2_10007378 = add i32 %v3_10007370, %v1_1000736c
  store i32 %v2_10007378, i32* @r29, align 4
  %v1_1000737c = add i32 %v2_10007378, 12
  %v2_1000737c = inttoptr i32 %v1_1000737c to i32*
  %v3_1000737c = load i32, i32* %v2_1000737c, align 4
  store i32 %v3_1000737c, i32* %r10.global-to-local, align 4
  %v1_10007380 = icmp eq i32 %v3_1000737c, 0
  %v2_10007380 = icmp ugt i32 %v3_1000737c, 1
  %v3_10007380 = icmp eq i32 %v3_1000737c, 1
  store i1 %v1_10007380, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007380, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10007380, label %dec_label_pc_10007304, label %dec_label_pc_10007388

dec_label_pc_10007388:                            ; preds = %dec_label_pc_10007368
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v1_10007380, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10007380, label %dec_label_pc_10007354, label %dec_label_pc_10007390

dec_label_pc_10007390:                            ; preds = %dec_label_pc_10007388
  %v1_10007394 = add i32 %v2_10007378, 8
  %v2_10007394 = inttoptr i32 %v1_10007394 to i32*
  %v3_10007394 = load i32, i32* %v2_10007394, align 4
  store i32 %v3_10007394, i32* %r9.global-to-local, align 4
  %v3_10007398 = load i32, i32* @global_var_1001c2bc.124, align 4
  store i32 5, i32* %r11.global-to-local, align 4
  %v2_100073a0 = sub i32 %v3_10007398, %v3_10007394
  store i32 %v2_100073a0, i32* %r0.global-to-local, align 4
  %v2_100073a4 = icmp ult i32 %v2_100073a0, 5
  %v4_100073a4 = icmp eq i32 %v2_100073a0, 5
  store i1 %v2_100073a4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100073a4, i1* %cr7_eq.global-to-local, align 1
  %tmp113 = icmp ult i32 %v2_100073a0, 6
  br i1 %tmp113, label %dec_label_pc_1000731c, label %dec_label_pc_100073ac

dec_label_pc_100073ac:                            ; preds = %dec_label_pc_10007390, %dec_label_pc_10007304
  %v1_100073ac = add i32 %v2_10007378, 4
  %v2_100073ac = inttoptr i32 %v1_100073ac to i32*
  %v3_100073ac = load i32, i32* %v2_100073ac, align 4
  store i32 %v3_100073ac, i32* %r3.global-to-local, align 4
  store i32 268465076, i32* @lr, align 4
  %v0_100073b0 = call i32 @function_10009108()
  store i32 %v0_100073b0, i32* %r3.global-to-local, align 4
  %v0_100073b4 = load i32, i32* @r29, align 4
  %v1_100073b4 = add i32 %v0_100073b4, 12
  %v2_100073b4 = inttoptr i32 %v1_100073b4 to i32*
  %v3_100073b4 = load i32, i32* %v2_100073b4, align 4
  store i32 %v3_100073b4, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v1_100073bc = icmp ult i32 %v3_100073b4, 2
  %v3_100073bc = icmp eq i32 %v3_100073b4, 2
  store i1 %v1_100073bc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100073bc, i1* %cr7_eq.global-to-local, align 1
  %v2_100073c0 = add i32 %v0_100073b4, 4
  %v3_100073c0 = inttoptr i32 %v2_100073c0 to i32*
  store i32 -1, i32* %v3_100073c0, align 4
  %tmp114 = icmp ult i32 %v3_100073b4, 3
  br i1 %tmp114, label %dec_label_pc_10007564, label %dec_label_pc_100073c8

dec_label_pc_100073c8:                            ; preds = %dec_label_pc_100073ac
  %v0_100073c8 = load i32, i32* @r29, align 4
  %v1_100073c8 = add i32 %v0_100073c8, 384
  %v2_100073c8 = inttoptr i32 %v1_100073c8 to i8*
  %v3_100073c8 = load i8, i8* %v2_100073c8, align 1
  %v4_100073c8 = zext i8 %v3_100073c8 to i32
  %v1_100073cc = add nuw nsw i32 %v4_100073c8, 1
  %v1_100073d0 = urem i32 %v1_100073cc, 256
  store i32 %v1_100073d0, i32* %r9.global-to-local, align 4
  %v1_100073d4 = icmp ult i32 %v1_100073d0, 10
  %v3_100073d4 = icmp eq i32 %v1_100073d0, 10
  store i1 %v1_100073d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100073d4, i1* %cr7_eq.global-to-local, align 1
  %v1_100073d8 = trunc i32 %v1_100073cc to i8
  store i8 %v1_100073d8, i8* %v2_100073c8, align 1
  %v0_100073dc = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100073dc, label %dec_label_pc_10007564, label %dec_label_pc_100073e0

dec_label_pc_100073e0:                            ; preds = %dec_label_pc_100073c8
  %v0_100073e0 = load i32, i32* @r29, align 4
  store i32 %v0_100073e0, i32* @r3, align 4
  store i32 268465128, i32* @lr, align 4
  %v0_100073e4 = call i32 @function_100067e0()
  store i32 %v0_100073e4, i32* %r3.global-to-local, align 4
  %v3_100073e8 = load i64, i64* %stack_var_-1916, align 8
  %v4_100073e8 = trunc i64 %v3_100073e8 to i32
  %v1_100073ec = add i32 %v4_100073e8, 1
  store i32 %v1_100073ec, i32* %r9.global-to-local, align 4
  %v1_100073f0 = icmp slt i32 %v1_100073ec, 355
  %v3_100073f0 = icmp eq i32 %v1_100073ec, 355
  store i1 %v1_100073f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100073f0, i1* %cr7_eq.global-to-local, align 1
  %v5_100073f4 = sext i32 %v1_100073ec to i64
  store i64 %v5_100073f4, i64* %stack_var_-1916, align 8
  %tmp115 = icmp slt i32 %v1_100073ec, 356
  br i1 %tmp115, label %dec_label_pc_10007368, label %dec_label_pc_100073fc

dec_label_pc_100073fc:                            ; preds = %dec_label_pc_100073e0, %dec_label_pc_10007354
  %v0_100073fc = load i32, i32* %r30.global-to-local, align 4
  %v1_100073fc = load i32, i32* @r31, align 4
  %v2_100073fc = icmp slt i32 %v0_100073fc, %v1_100073fc
  %v4_100073fc = icmp eq i32 %v0_100073fc, %v1_100073fc
  store i1 %v2_100073fc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100073fc, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_100073fc, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  store i32 1, i32* %stack_var_-1908, align 4
  br i1 %v2_100073fc, label %dec_label_pc_10007418, label %dec_label_pc_1000741c

dec_label_pc_10007418:                            ; preds = %dec_label_pc_100073fc
  store i32 %v1_100073fc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000741c

dec_label_pc_1000741c:                            ; preds = %dec_label_pc_100073fc, %dec_label_pc_10007418
  %v0_1000742c = phi i32 [ %v0_100073fc, %dec_label_pc_100073fc ], [ %v1_100073fc, %dec_label_pc_10007418 ]
  store i32 %v2_10007424, i32* %r5.global-to-local, align 4
  store i32 %v2_10007428, i32* %r7.global-to-local, align 4
  %v1_1000742c = add i32 %v0_1000742c, 1
  store i32 %v1_1000742c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007434.161 to i32), i32* @lr, align 4
  %v5_10007430 = call i32 @function_100093d0(i32 %v1_1000742c, i32 %v2_10007420, i32 %v2_10007424, i32 0, i32 %v2_10007428)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268465212, i32* @lr, align 4
  %v0_10007438 = call i32 @function_100094d8()
  store i32 %v0_10007438, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_10007438, i32* @global_var_1001c2bc.124, align 4
  %v0_10007448 = load i32, i32* %r30.global-to-local, align 4
  %v5_10007448 = sext i32 %v0_10007448 to i64
  store i64 %v5_10007448, i64* %stack_var_-1916, align 8
  br label %dec_label_pc_10007464

dec_label_pc_10007450:                            ; preds = %dec_label_pc_100074b8, %dec_label_pc_10007edc, %dec_label_pc_1000749c, %dec_label_pc_10007464, %dec_label_pc_100081c0, %dec_label_pc_10008194, %dec_label_pc_10007f10
  %v3_10007450 = load i64, i64* %stack_var_-1916, align 8
  %v4_10007450 = trunc i64 %v3_10007450 to i32
  store i32 %v4_10007450, i32* %r9.global-to-local, align 4
  %v1_10007454 = add i32 %v4_10007450, 1
  store i32 %v1_10007454, i32* %r0.global-to-local, align 4
  %v1_10007458 = icmp slt i32 %v1_10007454, 355
  %v2_10007458 = icmp sgt i32 %v1_10007454, 355
  %v3_10007458 = icmp eq i32 %v1_10007454, 355
  store i1 %v1_10007458, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007458, i1* %cr7_eq.global-to-local, align 1
  %v5_1000745c = sext i32 %v1_10007454 to i64
  store i64 %v5_1000745c, i64* %stack_var_-1916, align 8
  br i1 %v2_10007458, label %dec_label_pc_10006e08, label %dec_label_pc_10007464

dec_label_pc_10007464:                            ; preds = %dec_label_pc_10007450, %dec_label_pc_1000741c
  %v0_10007464 = phi i32 [ %v1_10007454, %dec_label_pc_10007450 ], [ 0, %dec_label_pc_1000741c ]
  %v1_10007464 = mul i32 %v0_10007464, 388
  store i32 %v1_10007464, i32* %r0.global-to-local, align 4
  store i32 268566528, i32* %r10.global-to-local, align 4
  %v3_1000746c = load i32, i32* @global_var_1001c2c0.129, align 4
  store i32 %v3_1000746c, i32* %r9.global-to-local, align 4
  %v2_10007470 = add i32 %v3_1000746c, %v1_10007464
  store i32 %v2_10007470, i32* %r28.global-to-local, align 4
  %v1_10007474 = add i32 %v2_10007470, 4
  %v2_10007474 = inttoptr i32 %v1_10007474 to i32*
  %v3_10007474 = load i32, i32* %v2_10007474, align 4
  store i32 %v3_10007474, i32* %r3.global-to-local, align 4
  %v1_10007478 = icmp slt i32 %v3_10007474, -1
  %v3_10007478 = icmp eq i32 %v3_10007474, -1
  store i1 %v1_10007478, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007478, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007478, label %dec_label_pc_10007450, label %dec_label_pc_10007480

dec_label_pc_10007480:                            ; preds = %dec_label_pc_10007464
  %v1_10007480 = call i32 @__asm_rlwinm(i32 %v3_10007474, i32 29, i32 3, i32 29)
  %v0_10007484 = load i32, i32* %r3.global-to-local, align 4
  %v1_10007484 = urem i32 %v0_10007484, 32
  store i32 %v1_10007484, i32* %r11.global-to-local, align 4
  %v1_10007488 = load i32, i32* @r15, align 4
  %v2_10007488 = add i32 %v1_10007488, %v1_10007480
  store i32 %v2_10007488, i32* %r9.global-to-local, align 4
  %v1_1000748c = add i32 %v2_10007488, 184
  %v2_1000748c = inttoptr i32 %v1_1000748c to i32*
  %v3_1000748c = load i32, i32* %v2_1000748c, align 4
  %v3_10007490 = lshr i32 %v3_1000748c, %v1_10007484
  store i32 %v3_10007490, i32* %r0.global-to-local, align 4
  %v1_10007494 = urem i32 %v3_10007490, 2
  store i32 %v1_10007494, i32* %r11.global-to-local, align 4
  %v3_10007494 = icmp eq i32 %v1_10007494, 0
  br i1 %v3_10007494, label %dec_label_pc_1000749c, label %dec_label_pc_10008004

dec_label_pc_1000749c:                            ; preds = %dec_label_pc_10007480, %dec_label_pc_1000809c
  %v0_1000749c = phi i32 [ %v0_10007484, %dec_label_pc_10007480 ], [ %v0_1000749c.pre, %dec_label_pc_1000809c ]
  %v1_1000749c = call i32 @__asm_rlwinm(i32 %v0_1000749c, i32 29, i32 3, i32 29)
  %v0_100074a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_100074a0 = urem i32 %v0_100074a0, 32
  store i32 %v1_100074a0, i32* %r11.global-to-local, align 4
  %v1_100074a4 = load i32, i32* @r15, align 4
  %v2_100074a4 = add i32 %v1_100074a4, %v1_1000749c
  store i32 %v2_100074a4, i32* %r9.global-to-local, align 4
  %v1_100074a8 = add i32 %v2_100074a4, 56
  %v2_100074a8 = inttoptr i32 %v1_100074a8 to i32*
  %v3_100074a8 = load i32, i32* %v2_100074a8, align 4
  %v3_100074ac = lshr i32 %v3_100074a8, %v1_100074a0
  store i32 %v3_100074ac, i32* %r0.global-to-local, align 4
  %v1_100074b0 = urem i32 %v3_100074ac, 2
  %v3_100074b0 = icmp eq i32 %v1_100074b0, 0
  br i1 %v3_100074b0, label %dec_label_pc_10007450, label %dec_label_pc_100074b8.preheader

dec_label_pc_100074b8.preheader:                  ; preds = %dec_label_pc_1000749c
  %v0_100074b8.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_100074b8

dec_label_pc_100074b8:                            ; preds = %dec_label_pc_100074b8.preheader, %dec_label_pc_10007524
  %v0_10007f2c = phi i32 [ %v0_100074b8.pre, %dec_label_pc_100074b8.preheader ], [ %v0_1000753c, %dec_label_pc_10007524 ]
  %v1_100074b8 = add i32 %v0_10007f2c, 12
  %v2_100074b8 = inttoptr i32 %v1_100074b8 to i32*
  %v3_100074b8 = load i32, i32* %v2_100074b8, align 4
  store i32 %v3_100074b8, i32* %r10.global-to-local, align 4
  %v1_100074bc = icmp slt i32 %v3_100074b8, 0
  %v3_100074bc = icmp eq i32 %v3_100074b8, 0
  store i1 %v1_100074bc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100074bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100074bc, label %dec_label_pc_10007450, label %dec_label_pc_100074c4

dec_label_pc_100074c4:                            ; preds = %dec_label_pc_100074b8
  %v1_100074c4 = add i32 %v0_10007f2c, 24
  %v2_100074c4 = inttoptr i32 %v1_100074c4 to i32*
  %v3_100074c4 = load i32, i32* %v2_100074c4, align 4
  store i32 %v3_100074c4, i32* %r0.global-to-local, align 4
  %v1_100074c8 = add i32 %v0_10007f2c, 28
  store i32 %v1_100074c8, i32* %r26.global-to-local, align 4
  %v1_100074cc = icmp slt i32 %v3_100074c4, 356
  %v3_100074cc = icmp eq i32 %v3_100074c4, 356
  store i1 %v1_100074cc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100074cc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100074cc, label %dec_label_pc_10007f24, label %dec_label_pc_100074d4

dec_label_pc_100074d4:                            ; preds = %dec_label_pc_100074c4, %dec_label_pc_10007f24
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100074dc = load i32, i32* %r24.global-to-local, align 4
  %v2_100074dc = inttoptr i32 %v1_100074dc to i32*
  store i32 0, i32* %v2_100074dc, align 4
  %v0_100074e0 = load i32, i32* %r28.global-to-local, align 4
  %v1_100074e0 = add i32 %v0_100074e0, 24
  %v2_100074e0 = inttoptr i32 %v1_100074e0 to i32*
  %v3_100074e0 = load i32, i32* %v2_100074e0, align 4
  store i32 %v3_100074e0, i32* %r5.global-to-local, align 4
  %v1_100074e4 = add i32 %v0_100074e0, 4
  %v2_100074e4 = inttoptr i32 %v1_100074e4 to i32*
  %v3_100074e4 = load i32, i32* %v2_100074e4, align 4
  store i32 %v3_100074e4, i32* %r3.global-to-local, align 4
  %v0_100074e8 = load i32, i32* %r26.global-to-local, align 4
  %v2_100074e8 = add i32 %v0_100074e8, %v3_100074e0
  store i32 %v2_100074e8, i32* @r29, align 4
  %v1_100074ec = sub i32 356, %v3_100074e0
  store i32 %v1_100074ec, i32* %r5.global-to-local, align 4
  store i32 268465400, i32* @lr, align 4
  %v4_100074f4 = call i32 @function_10009d2c(i32 %v3_100074e4, i32 %v2_100074e8, i32 %v1_100074ec, i32 16384)
  store i32 %v4_100074f4, i32* %r3.global-to-local, align 4
  %tmp117 = icmp slt i32 %v4_100074f4, 1
  br i1 %tmp117, label %dec_label_pc_10007ed0, label %dec_label_pc_10007500

dec_label_pc_10007500:                            ; preds = %dec_label_pc_100074d4
  store i32 %v4_100074f4, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 65, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000750c

dec_label_pc_1000750c:                            ; preds = %dec_label_pc_1000751c, %dec_label_pc_10007500
  %v0_1000752038 = phi i32 [ %v1_10007520, %dec_label_pc_1000751c ], [ %v4_100074f4, %dec_label_pc_10007500 ]
  %v1_10007518 = phi i32 [ %v1_1000751c, %dec_label_pc_1000751c ], [ 0, %dec_label_pc_10007500 ]
  %v1_1000750c = load i32, i32* @r29, align 4
  %v2_1000750c = add i32 %v1_1000750c, %v1_10007518
  %v3_1000750c = inttoptr i32 %v2_1000750c to i8*
  %v4_1000750c = load i8, i8* %v3_1000750c, align 1
  %v5_1000750c = zext i8 %v4_1000750c to i32
  store i32 %v5_1000750c, i32* %r0.global-to-local, align 4
  %v3_10007510 = icmp eq i8 %v4_1000750c, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007510, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007510, label %dec_label_pc_10007518, label %dec_label_pc_1000751c

dec_label_pc_10007518:                            ; preds = %dec_label_pc_1000750c
  %v0_10007518 = load i32, i32* %r11.global-to-local, align 4
  %v3_10007518 = trunc i32 %v0_10007518 to i8
  store i8 %v3_10007518, i8* %v3_1000750c, align 1
  %v0_1000751c.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10007520.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000751c

dec_label_pc_1000751c:                            ; preds = %dec_label_pc_1000750c, %dec_label_pc_10007518
  %v0_10007520 = phi i32 [ %v0_1000752038, %dec_label_pc_1000750c ], [ %v0_10007520.pre, %dec_label_pc_10007518 ]
  %v0_1000751c = phi i32 [ %v1_10007518, %dec_label_pc_1000750c ], [ %v0_1000751c.pre, %dec_label_pc_10007518 ]
  %v1_1000751c = add i32 %v0_1000751c, 1
  store i32 %v1_1000751c, i32* %r9.global-to-local, align 4
  %v1_10007520 = add i32 %v0_10007520, -1
  store i32 %v1_10007520, i32* %ctr.global-to-local, align 4
  %v2_10007520 = icmp eq i32 %v1_10007520, 0
  br i1 %v2_10007520, label %dec_label_pc_10007524, label %dec_label_pc_1000750c

dec_label_pc_10007524:                            ; preds = %dec_label_pc_1000751c, %dec_label_pc_10007ed4
  %v0_10007524 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007524 = add i32 %v0_10007524, 24
  %v2_10007524 = inttoptr i32 %v1_10007524 to i32*
  %v3_10007524 = load i32, i32* %v2_10007524, align 4
  %v3_1000752c = load i32, i32* @global_var_1001c2bc.124, align 4
  store i32 %v3_1000752c, i32* %r0.global-to-local, align 4
  %v2_10007530 = add i32 %v3_10007524, %v4_100074f4
  store i32 %v2_10007530, i32* %r5.global-to-local, align 4
  store i32 %v2_10007530, i32* %v2_10007524, align 4
  %v0_10007538 = load i32, i32* %r0.global-to-local, align 4
  %v1_10007538 = load i32, i32* %r28.global-to-local, align 4
  %v2_10007538 = add i32 %v1_10007538, 8
  %v3_10007538 = inttoptr i32 %v2_10007538 to i32*
  store i32 %v0_10007538, i32* %v3_10007538, align 4
  %v0_1000753c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000753c = add i32 %v0_1000753c, 12
  %v2_1000753c = inttoptr i32 %v1_1000753c to i32*
  %v3_1000753c = load i32, i32* %v2_1000753c, align 4
  store i32 %v3_1000753c, i32* %r10.global-to-local, align 4
  %v1_10007540 = icmp ult i32 %v3_1000753c, 10
  %v2_10007540 = icmp ugt i32 %v3_1000753c, 10
  %v3_10007540 = icmp eq i32 %v3_1000753c, 10
  store i1 %v1_10007540, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007540, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10007540, label %dec_label_pc_100074b8, label %dec_label_pc_10007548

dec_label_pc_10007548:                            ; preds = %dec_label_pc_10007524
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_1000754c = mul i32 %v3_1000753c, 4
  store i32 %v1_1000754c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000bbd4.162 to i32), i32* %r11.global-to-local, align 4
  %v2_10007554 = add i32 %v1_1000754c, ptrtoint (i32* @global_var_1000bbd4.162 to i32)
  %v3_10007554 = inttoptr i32 %v2_10007554 to i32*
  %v4_10007554 = load i32, i32* %v3_10007554, align 4
  %v2_10007558 = add i32 %v4_10007554, ptrtoint (i32* @global_var_1000bbd4.162 to i32)
  store i32 %v2_10007558, i32* %r9.global-to-local, align 4
  store i32 %v2_10007558, i32* %ctr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v2_10007558)
  br label %dec_label_pc_10007564

dec_label_pc_10007564:                            ; preds = %dec_label_pc_100073c8, %dec_label_pc_100073ac, %dec_label_pc_10007548
  %v0_10007564 = load i32, i32* %r27.global-to-local, align 4
  %v1_10007564 = load i32, i32* @r29, align 4
  %v2_10007564 = add i32 %v1_10007564, 12
  %v3_10007564 = inttoptr i32 %v2_10007564 to i32*
  store i32 %v0_10007564, i32* %v3_10007564, align 4
  %v0_10007568 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007568 = trunc i32 %v0_10007568 to i8
  %v2_10007568 = load i32, i32* @r29, align 4
  %v3_10007568 = add i32 %v2_10007568, 384
  %v4_10007568 = inttoptr i32 %v3_10007568 to i8*
  store i8 %v1_10007568, i8* %v4_10007568, align 1
  br label %dec_label_pc_10007354

dec_label_pc_10007570:                            ; preds = %dec_label_pc_1000731c
  %v1_10007574 = call i32 @__asm_rlwinm(i32 %v3_10007570, i32 29, i32 3, i32 29)
  %v0_10007578 = load i32, i32* @r31, align 4
  %v2_10007578 = icmp slt i32 %v0_10007578, %v3_10007570
  %v4_10007578 = icmp eq i32 %v0_10007578, %v3_10007570
  store i1 %v2_10007578, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007578, i1* %cr7_eq.global-to-local, align 1
  %v1_1000757c = load i32, i32* @r15, align 4
  %v2_1000757c = add i32 %v1_1000757c, %v1_10007574
  store i32 %v2_1000757c, i32* %r11.global-to-local, align 4
  %v1_10007580 = urem i32 %v3_10007570, 32
  store i32 %v1_10007580, i32* %r0.global-to-local, align 4
  %v1_10007584 = add i32 %v2_1000757c, 184
  %v2_10007584 = inttoptr i32 %v1_10007584 to i32*
  %v3_10007584 = load i32, i32* %v2_10007584, align 4
  %v0_10007588 = load i32, i32* %r10.global-to-local, align 4
  %v3_10007588 = shl i32 %v0_10007588, %v1_10007580
  store i32 %v3_10007588, i32* %r0.global-to-local, align 4
  %v2_1000758c = or i32 %v3_10007588, %v3_10007584
  store i32 %v2_1000758c, i32* %r9.global-to-local, align 4
  store i32 %v2_1000758c, i32* %v2_10007584, align 4
  br i1 %v2_10007578, label %dec_label_pc_10007598, label %dec_label_pc_10007354

dec_label_pc_10007598:                            ; preds = %dec_label_pc_10007570
  store i32 %v3_10007570, i32* @r31, align 4
  br label %dec_label_pc_10007354

dec_label_pc_10007ed0:                            ; preds = %dec_label_pc_100074d4
  %v3_100074f8 = icmp eq i32 %v4_100074f4, 0
  br i1 %v3_100074f8, label %dec_label_pc_100081b4, label %dec_label_pc_10007ed4

dec_label_pc_10007ed4:                            ; preds = %dec_label_pc_10007ed0
  %v1_10007ed4 = icmp slt i32 %v4_100074f4, -1
  %v3_10007ed4 = icmp eq i32 %v4_100074f4, -1
  store i1 %v1_10007ed4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007ed4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007ed4, label %dec_label_pc_10007edc, label %dec_label_pc_10007524

dec_label_pc_10007edc:                            ; preds = %dec_label_pc_10007ed4
  %v0_10007edc = load i32, i32* %r24.global-to-local, align 4
  %v1_10007edc = inttoptr i32 %v0_10007edc to i32*
  %v2_10007edc = load i32, i32* %v1_10007edc, align 4
  store i32 %v2_10007edc, i32* %r0.global-to-local, align 4
  %v1_10007ee0 = icmp slt i32 %v2_10007edc, 11
  %v3_10007ee0 = icmp eq i32 %v2_10007edc, 11
  store i1 %v1_10007ee0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007ee0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007ee0, label %dec_label_pc_10007450, label %dec_label_pc_10007ee8

dec_label_pc_10007ee8:                            ; preds = %dec_label_pc_10007edc, %dec_label_pc_100081b4
  %v0_10007ee8 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007ee8 = add i32 %v0_10007ee8, 4
  %v2_10007ee8 = inttoptr i32 %v1_10007ee8 to i32*
  %v3_10007ee8 = load i32, i32* %v2_10007ee8, align 4
  store i32 %v3_10007ee8, i32* %r3.global-to-local, align 4
  store i32 268467952, i32* @lr, align 4
  %v0_10007eec = call i32 @function_10009108()
  store i32 %v0_10007eec, i32* %r3.global-to-local, align 4
  %v0_10007ef0 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007ef0 = add i32 %v0_10007ef0, 384
  %v2_10007ef0 = inttoptr i32 %v1_10007ef0 to i8*
  %v3_10007ef0 = load i8, i8* %v2_10007ef0, align 1
  %v4_10007ef0 = zext i8 %v3_10007ef0 to i32
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10007ef8 = add nuw nsw i32 %v4_10007ef0, 1
  store i32 %v1_10007ef8, i32* %r9.global-to-local, align 4
  %v2_10007efc = add i32 %v0_10007ef0, 4
  %v3_10007efc = inttoptr i32 %v2_10007efc to i32*
  store i32 -1, i32* %v3_10007efc, align 4
  %v0_10007f00 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007f00 = urem i32 %v0_10007f00, 256
  store i32 %v1_10007f00, i32* %r9.global-to-local, align 4
  %v1_10007f04 = icmp ult i32 %v1_10007f00, 9
  %v3_10007f04 = icmp eq i32 %v1_10007f00, 9
  store i1 %v1_10007f04, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007f04, i1* %cr7_eq.global-to-local, align 1
  %v1_10007f08 = trunc i32 %v0_10007f00 to i8
  %v2_10007f08 = load i32, i32* %r28.global-to-local, align 4
  %v3_10007f08 = add i32 %v2_10007f08, 384
  %v4_10007f08 = inttoptr i32 %v3_10007f08 to i8*
  store i8 %v1_10007f08, i8* %v4_10007f08, align 1
  %v0_10007f0c = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10007f0c = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10007f0c = or i1 %v0_10007f0c, %v1_10007f0c
  br i1 %v2_10007f0c, label %dec_label_pc_100081c0, label %dec_label_pc_10007f10

dec_label_pc_10007f10:                            ; preds = %dec_label_pc_10007ee8
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10007f18 = load i32, i32* %r28.global-to-local, align 4
  %v2_10007f18 = add i32 %v1_10007f18, 12
  %v3_10007f18 = inttoptr i32 %v2_10007f18 to i32*
  store i32 0, i32* %v3_10007f18, align 4
  %v0_10007f1c = load i32, i32* %r0.global-to-local, align 4
  %v1_10007f1c = trunc i32 %v0_10007f1c to i8
  %v2_10007f1c = load i32, i32* %r28.global-to-local, align 4
  %v3_10007f1c = add i32 %v2_10007f1c, 384
  %v4_10007f1c = inttoptr i32 %v3_10007f1c to i8*
  store i8 %v1_10007f1c, i8* %v4_10007f1c, align 1
  br label %dec_label_pc_10007450

dec_label_pc_10007f24:                            ; preds = %dec_label_pc_100074c4
  store i32 292, i32* %r5.global-to-local, align 4
  store i32 %v1_100074c8, i32* %r3.global-to-local, align 4
  %v1_10007f2c = add i32 %v0_10007f2c, 92
  store i32 268468020, i32* @lr, align 4
  %v3_10007f30 = call i32 @function_10009868(i32 %v1_100074c8, i32 %v1_10007f2c, i32 292)
  store i32 %v3_10007f30, i32* %r3.global-to-local, align 4
  %v0_10007f34 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007f34 = add i32 %v0_10007f34, 24
  %v2_10007f34 = inttoptr i32 %v1_10007f34 to i32*
  %v3_10007f34 = load i32, i32* %v2_10007f34, align 4
  store i32 %v3_10007f34, i32* %r9.global-to-local, align 4
  %v1_10007f38 = add i32 %v3_10007f34, -64
  store i32 %v1_10007f38, i32* %r5.global-to-local, align 4
  store i32 %v1_10007f38, i32* %v2_10007f34, align 4
  br label %dec_label_pc_100074d4

dec_label_pc_10008004:                            ; preds = %dec_label_pc_10007480
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 %v1_10008018, i32* %r7.global-to-local, align 4
  store i32 4, i32* %stack_var_-1912, align 4
  store i32 0, i32* %stack_var_-1920, align 4
  store i32 268468264, i32* @lr, align 4
  %v5_10008024 = call i32 @function_10009cc0(i32 1, i32 4, i32 %v2_10008008, i32 %v1_10008018, i32 %v2_10007488)
  store i32 %v5_10008024, i32* %r3.global-to-local, align 4
  %v3_10008028 = load i32, i32* %stack_var_-1920, align 4
  store i32 %v3_10008028, i32* %r0.global-to-local, align 4
  %v2_1000802c = or i32 %v3_10008028, %v5_10008024
  %v5_1000802c = icmp eq i32 %v2_1000802c, 0
  br i1 %v5_1000802c, label %dec_label_pc_10008034, label %dec_label_pc_10008194

dec_label_pc_10008034:                            ; preds = %dec_label_pc_10008004
  store i32 2, i32* %r10.global-to-local, align 4
  %v1_10008038 = load i32, i32* %r28.global-to-local, align 4
  %v2_10008038 = add i32 %v1_10008038, 12
  %v3_10008038 = inttoptr i32 %v2_10008038 to i32*
  store i32 2, i32* %v3_10008038, align 4
  %v0_1000803c = call i32 @function_10005f74()
  %v3_10008044 = load i16, i16* @global_var_1001c2b8.127, align 2
  %v4_10008044 = zext i16 %v3_10008044 to i32
  store i32 %v4_10008044, i32* %r11.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000804c = load i32, i32* @global_var_1001c2b0.125, align 4
  store i32 %v3_1000804c, i32* %r10.global-to-local, align 4
  %v1_10008054 = icmp slt i32 %v3_1000804c, 0
  %v3_10008054 = icmp eq i32 %v3_1000804c, 0
  store i1 %v1_10008054, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008054, i1* %cr7_eq.global-to-local, align 1
  %v2_10008050 = urem i32 %v0_1000803c, %v4_10008044
  %v2_10008058 = sub i32 %v0_1000803c, %v2_10008050
  store i32 %v2_10008058, i32* %r0.global-to-local, align 4
  store i32 %v2_10008050, i32* %r3.global-to-local, align 4
  %tmp119 = icmp slt i32 %v3_1000804c, 1
  br i1 %tmp119, label %dec_label_pc_10008098, label %dec_label_pc_10008068

dec_label_pc_10008068:                            ; preds = %dec_label_pc_10008034
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v3_1000804c, i32* %ctr.global-to-local, align 4
  %v3_10008070 = load i32, i32* @global_var_1001c2b4.126, align 4
  store i32 %v3_10008070, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10008074

dec_label_pc_10008074:                            ; preds = %dec_label_pc_10008090, %dec_label_pc_10008068
  %v0_10008094 = phi i32 [ %v1_10008094, %dec_label_pc_10008090 ], [ %v3_1000804c, %dec_label_pc_10008068 ]
  %v0_10008090 = phi i32 [ %v1_10008090, %dec_label_pc_10008090 ], [ %v3_10008070, %dec_label_pc_10008068 ]
  store i32 %v0_10008090, i32* %r9.global-to-local, align 4
  %v1_10008078 = add i32 %v0_10008090, 8
  %v2_10008078 = inttoptr i32 %v1_10008078 to i16*
  %v3_10008078 = load i16, i16* %v2_10008078, align 2
  %v4_10008078 = zext i16 %v3_10008078 to i32
  store i32 %v4_10008078, i32* %r0.global-to-local, align 4
  %v2_1000807c = icmp ult i32 %v4_10008078, %v2_10008050
  %v3_1000807c = icmp ugt i32 %v4_10008078, %v2_10008050
  %v4_1000807c = icmp eq i32 %v4_10008078, %v2_10008050
  br i1 %v3_1000807c, label %dec_label_pc_10008090, label %dec_label_pc_10008084

dec_label_pc_10008084:                            ; preds = %dec_label_pc_10008074
  %v1_10008084 = add i32 %v0_10008090, 10
  %v2_10008084 = inttoptr i32 %v1_10008084 to i16*
  %v3_10008084 = load i16, i16* %v2_10008084, align 2
  %v4_10008084 = zext i16 %v3_10008084 to i32
  store i32 %v4_10008084, i32* %r0.global-to-local, align 4
  %v2_10008088 = icmp ult i32 %v4_10008084, %v2_10008050
  %v3_10008088 = icmp ugt i32 %v4_10008084, %v2_10008050
  %v4_10008088 = icmp eq i32 %v4_10008084, %v2_10008050
  br i1 %v3_10008088, label %dec_label_pc_1000809c.loopexit, label %dec_label_pc_10008090

dec_label_pc_10008090:                            ; preds = %dec_label_pc_10008084, %dec_label_pc_10008074
  %v4_100080887 = phi i1 [ %v4_10008088, %dec_label_pc_10008084 ], [ %v4_1000807c, %dec_label_pc_10008074 ]
  %v2_100080885 = phi i1 [ %v2_10008088, %dec_label_pc_10008084 ], [ %v2_1000807c, %dec_label_pc_10008074 ]
  %v1_10008090 = add i32 %v0_10008090, 16
  store i32 %v1_10008090, i32* %r0.global-to-local, align 4
  %v1_10008094 = add i32 %v0_10008094, -1
  store i32 %v1_10008094, i32* %ctr.global-to-local, align 4
  %v2_10008094 = icmp eq i32 %v1_10008094, 0
  br i1 %v2_10008094, label %dec_label_pc_10008098.loopexit, label %dec_label_pc_10008074

dec_label_pc_10008098.loopexit:                   ; preds = %dec_label_pc_10008090
  store i1 %v2_100080885, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100080887, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10008098

dec_label_pc_10008098:                            ; preds = %dec_label_pc_10008098.loopexit, %dec_label_pc_10008034
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000809c

dec_label_pc_1000809c.loopexit:                   ; preds = %dec_label_pc_10008084
  store i1 %v2_10008088, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10008088, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_1000809c

dec_label_pc_1000809c:                            ; preds = %dec_label_pc_1000809c.loopexit, %dec_label_pc_10008098
  %v0_100080a4 = phi i32 [ %v0_10008090, %dec_label_pc_1000809c.loopexit ], [ 0, %dec_label_pc_10008098 ]
  %v0_1000809c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000809c = add i32 %v0_1000809c, 4
  %v2_1000809c = inttoptr i32 %v1_1000809c to i32*
  %v3_1000809c = load i32, i32* %v2_1000809c, align 4
  store i32 %v3_1000809c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  %v2_100080a4 = inttoptr i32 %v0_1000809c to i32*
  store i32 %v0_100080a4, i32* %v2_100080a4, align 4
  %v0_100080a8 = load i32, i32* %r5.global-to-local, align 4
  %v1_100080a8 = load i32, i32* %r28.global-to-local, align 4
  %v2_100080a8 = add i32 %v1_100080a8, 24
  %v3_100080a8 = inttoptr i32 %v2_100080a8 to i32*
  store i32 %v0_100080a8, i32* %v3_100080a8, align 4
  %v0_1000749c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000749c

dec_label_pc_10008194:                            ; preds = %dec_label_pc_10008004
  %v0_10008194 = load i32, i32* %r28.global-to-local, align 4
  %v1_10008194 = add i32 %v0_10008194, 4
  %v2_10008194 = inttoptr i32 %v1_10008194 to i32*
  %v3_10008194 = load i32, i32* %v2_10008194, align 4
  store i32 %v3_10008194, i32* %r3.global-to-local, align 4
  store i32 268468636, i32* @lr, align 4
  %v0_10008198 = call i32 @function_10009108()
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_100081a4 = load i32, i32* %r28.global-to-local, align 4
  %v2_100081a4 = add i32 %v1_100081a4, 4
  %v3_100081a4 = inttoptr i32 %v2_100081a4 to i32*
  store i32 -1, i32* %v3_100081a4, align 4
  %v0_100081a8 = load i32, i32* %r10.global-to-local, align 4
  %v1_100081a8 = load i32, i32* %r28.global-to-local, align 4
  %v2_100081a8 = add i32 %v1_100081a8, 12
  %v3_100081a8 = inttoptr i32 %v2_100081a8 to i32*
  store i32 %v0_100081a8, i32* %v3_100081a8, align 4
  %v0_100081ac = load i32, i32* @r31, align 4
  %v1_100081ac = trunc i32 %v0_100081ac to i8
  %v2_100081ac = load i32, i32* %r28.global-to-local, align 4
  %v3_100081ac = add i32 %v2_100081ac, 384
  %v4_100081ac = inttoptr i32 %v3_100081ac to i8*
  store i8 %v1_100081ac, i8* %v4_100081ac, align 1
  br label %dec_label_pc_10007450

dec_label_pc_100081b4:                            ; preds = %dec_label_pc_10007ed0
  store i32 104, i32* %r0.global-to-local, align 4
  %v1_100081b8 = load i32, i32* %r24.global-to-local, align 4
  %v2_100081b8 = inttoptr i32 %v1_100081b8 to i32*
  store i32 104, i32* %v2_100081b8, align 4
  br label %dec_label_pc_10007ee8

dec_label_pc_100081c0:                            ; preds = %dec_label_pc_10007ee8
  %v0_100081c0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100081c0, i32* @r3, align 4
  store i32 268468680, i32* @lr, align 4
  %v0_100081c4 = call i32 @function_100067e0()
  store i32 %v0_100081c4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007450

dec_label_pc_10008204:                            ; preds = %dec_label_pc_10006bf4
  %v3_10008208 = load i32, i32* @global_var_1001c2c4.130, align 4
  store i32 %v3_10008208, i32* %r3.global-to-local, align 4
  store i32 268468752, i32* @lr, align 4
  %v0_1000820c = call i32 @function_10009108()
  store i32 %v0_1000820c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100071ec

dec_label_pc_10008214:                            ; preds = %dec_label_pc_10007104
  store i32 %v0_100070fc, i32* @r29, align 4
  br label %dec_label_pc_10008218

dec_label_pc_10008218:                            ; preds = %dec_label_pc_10007138, %dec_label_pc_10008214
  %v1_10008218 = phi i32 [ %v2_10007110, %dec_label_pc_10008214 ], [ %v0_10007138, %dec_label_pc_10007138 ]
  %v2_10008218 = add i32 %v1_10008218, 16
  %v3_10008218 = inttoptr i32 %v2_10008218 to i32*
  store i32 %tmp51, i32* %v3_10008218, align 4
  %v0_1000821c = load i32, i32* @r29, align 4
  store i32 %v0_1000821c, i32* @r31, align 4
  %v0_10008220 = load i32, i32* %r8.global-to-local, align 4
  %v1_10008220 = trunc i32 %v0_10008220 to i16
  %v2_10008220 = load i32, i32* @r3, align 4
  %v3_10008220 = add i32 %v2_10008220, 20
  %v4_10008220 = inttoptr i32 %v3_10008220 to i16*
  store i16 %v1_10008220, i16* %v4_10008220, align 2
  store i32 268468776, i32* @lr, align 4
  %v0_10008224 = call i32 @function_100067e0()
  store i32 %v0_10008224, i32* %r3.global-to-local, align 4
  %v1_10007044.pre.pre = load i32, i32* %r24.global-to-local, align 4
  br label %dec_label_pc_1000703c

; uselistorder directives
  uselistorder i32 %v1_10008094, { 2, 1, 0 }
  uselistorder i32 %v1_10008090, { 1, 0 }
  uselistorder i32 %v4_10008084, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10008078, { 2, 1, 0, 3 }
  uselistorder i32 %v0_10008090, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_10008050, { 3, 2, 1, 6, 5, 4, 0, 7 }
  uselistorder i32 %v3_1000804c, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v1_10007f00, { 1, 2, 0 }
  uselistorder i32 %v0_10007f00, { 1, 0 }
  uselistorder i32 %v2_10007edc, { 1, 0, 2 }
  uselistorder i32 %v1_10007580, { 1, 0 }
  uselistorder i32 %v1_1000754c, { 1, 0 }
  uselistorder i32 %v3_1000753c, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_1000753c, { 1, 0 }
  uselistorder i32 %v1_10007520, { 2, 1, 0 }
  uselistorder i32 %v1_1000751c, { 1, 0 }
  uselistorder i32 %v1_10007518, { 1, 0 }
  uselistorder i32 %v4_100074f4, { 3, 2, 6, 0, 1, 4, 5, 7 }
  uselistorder i32 %v3_100074e0, { 1, 0, 2 }
  uselistorder i32 %v1_100074c8, { 1, 0, 2 }
  uselistorder i32 %v3_100074c4, { 1, 0, 2 }
  uselistorder i32 %v3_100074b8, { 1, 0, 2 }
  uselistorder i32 %v0_10007f2c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_100074a0, { 1, 0 }
  uselistorder i32 %v1_10007494, { 1, 0 }
  uselistorder i32 %v1_10007484, { 1, 0 }
  uselistorder i32 %v0_10007484, { 1, 0 }
  uselistorder i32 %v3_10007474, { 0, 2, 1, 3 }
  uselistorder i32 %v1_10007454, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v1_100073ec, { 2, 1, 4, 3, 5, 0 }
  uselistorder i32 %v1_100073d0, { 1, 2, 0 }
  uselistorder i32 %v1_100073cc, { 1, 0 }
  uselistorder i32 %v3_100073b4, { 0, 2, 1, 3 }
  uselistorder i32 %v2_100073a0, { 0, 2, 1, 3 }
  uselistorder i1 %v3_10007380, { 2, 0, 1 }
  uselistorder i1 %v1_10007380, { 1, 0, 2 }
  uselistorder i32 %v3_1000737c, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v2_10007378, { 0, 3, 4, 5, 2, 1 }
  uselistorder i32 %v1_10007358, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32 %v1_10007338, { 1, 0 }
  uselistorder i32 %v3_10007570, { 5, 0, 8, 7, 9, 4, 1, 3, 2, 6, 10 }
  uselistorder i32 %v2_10007310, { 2, 1, 0, 3 }
  uselistorder i32 %v1_100072e4, { 1, 0 }
  uselistorder i32 %v1_100072c4, { 1, 0 }
  uselistorder i32 %v0_10007290, { 1, 2, 0 }
  uselistorder i32 %v0_10007284, { 1, 2, 0 }
  uselistorder i32 %v0_10007278, { 1, 2, 0 }
  uselistorder i32 %v0_1000726c, { 1, 2, 0 }
  uselistorder i32 %v0_10007248, { 2, 1, 4, 3, 6, 5, 7, 8, 0 }
  uselistorder i32 %v0_10007234, { 4, 3, 2, 5, 6, 7, 1, 0 }
  uselistorder i32 %v0_10007228, { 1, 2, 0 }
  uselistorder i32 %v0_10007214, { 4, 3, 2, 5, 6, 7, 1, 0 }
  uselistorder i32 %v0_10007200, { 4, 3, 2, 5, 6, 7, 1, 0 }
  uselistorder i32 %v0_100071f4, { 1, 2, 0 }
  uselistorder i32 %v1_10007140, { 1, 0 }
  uselistorder i32 %v3_10007138, { 1, 0, 2 }
  uselistorder i32 %v1_10007134, { 2, 1, 0 }
  uselistorder i32 %v1_10007130, { 1, 0 }
  uselistorder i32 %v0_10007138, { 0, 3, 2, 1 }
  uselistorder i32 %v3_10007114, { 1, 0, 2 }
  uselistorder i32 %v0_100070fc, { 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %v3_10007088, { 1, 0, 2 }
  uselistorder i32 %v2_1000706c, { 1, 0, 2 }
  uselistorder i32 %v0_1000706c, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v6_10007060, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v3_100070b0, { 1, 0 }
  uselistorder i32 %v1_100070d8, { 1, 0 }
  uselistorder i32 %v1_100070d0, { 1, 0 }
  uselistorder i32 %v1_100070f0, { 2, 1, 0 }
  uselistorder i32 %v1_100070c8, { 1, 0 }
  uselistorder i32 %v4_100070b8, { 1, 0, 2 }
  uselistorder i32 %v1_1000701c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_10006fa8, { 1, 0 }
  uselistorder i32 %v4_10006f88, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v1_10006ef8, { 3, 1, 2, 0 }
  uselistorder i32 %v1_10006e80, { 3, 1, 2, 0 }
  uselistorder i32 %v0_10006e6c, { 0, 2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17, 20, 19, 22, 21, 23, 25, 24, 27, 26, 29, 28, 31, 30, 33, 32, 36, 35, 34, 38, 37, 40, 39, 42, 41, 44, 43, 46, 45, 48, 47, 50, 49, 51, 53, 52, 54, 55 }
  uselistorder i32 %v1_10006e54, { 1, 2, 0 }
  uselistorder i32 %v0_10006e50, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_10006e3c, { 1, 0 }
  uselistorder i32 %v3_10006e0c, { 1, 0, 2 }
  uselistorder i32 %v0_10006c88, { 1, 0 }
  uselistorder i32 %v1_10006c48, { 3, 1, 2, 0 }
  uselistorder i32 %v5_10006c38, { 1, 0, 2 }
  uselistorder i32 %v3_10006bdc, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10006bc4, { 1, 0 }
  uselistorder i32 %v0_10006bc0, { 1, 0 }
  uselistorder i32 %v2_10006b78, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10006ad4, { 5, 4, 3, 2, 0, 1, 7, 6, 8 }
  uselistorder i64* %stack_var_-1916, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 0, 2, 1 }
  uselistorder i32* %stack_var_-1888, { 0, 2, 1, 3 }
  uselistorder i32 %tmp57, { 1, 2, 0 }
  uselistorder i8 %tmp56, { 2, 1, 0 }
  uselistorder i16 %tmp55, { 0, 1, 4, 3, 2 }
  uselistorder i32 %tmp53, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 17, 16, 18, 19, 20, 21, 25, 22, 23, 24, 26, 27, 49, 50, 28, 51, 52, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 8, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 25, 28, 27, 29, 30, 31, 18, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 2, 42, 43, 44, 45, 46, 47, 49, 48, 50, 52, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 1, 0 }
  uselistorder i32* %r29.global-to-local, { 0, 3, 4, 1, 2, 5, 6 }
  uselistorder i32* %r28.global-to-local, { 4, 1, 2, 3, 5, 6, 7, 8, 11, 9, 10, 12, 13, 14, 20, 15, 16, 17, 18, 0, 19, 21, 22, 23 }
  uselistorder i32* %r24.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 22, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 10, 11, 8, 12, 20, 13, 14, 16, 15, 17, 18, 19 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 19, 20, 23, 21, 22, 24, 25, 26, 31, 27, 28, 29, 30, 33, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 61, 62, 64, 65, 66 }
  uselistorder i32* %ctr.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 17, 18, 7, 8, 9, 19, 20, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i1* %cr7_lt.global-to-local, { 87, 88, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 22, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86 }
  uselistorder i1* %cr7_eq.global-to-local, { 89, 90, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 23, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88 }
  uselistorder i16* @global_var_1001c2b8.127, { 2, 1, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_10009cc0, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10009d2c, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_100093d0, { 2, 0, 1 }
  uselistorder i32 ()* @function_100067e0, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_10009d64, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_10009ddc, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 16384, { 1, 18, 0, 2, 19, 21, 22, 23, 24, 25, 26, 20, 3, 27, 4, 28, 29, 30, 5, 7, 6, 8, 31, 9, 32, 11, 33, 10, 13, 34, 12, 15, 14, 16, 35, 36, 17, 37, 38 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10004430, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_100043cc, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 33, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 192, { 1, 0, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @function_100068cc, { 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i16* @global_var_1001c346.140, { 2, 0, 1 }
  uselistorder i16 23, { 2, 3, 1, 0 }
  uselistorder i8 64, { 12, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 1024, { 1, 0 }
  uselistorder i32 65536, { 69, 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 13, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68 }
  uselistorder i32 ()* @function_10005f74, { 75, 74, 73, 72, 71, 70, 68, 69, 22, 21, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 3, 2, 1, 0, 9, 8, 7, 6, 5, 4, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10009e1c, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 2048, { 5, 3, 0, 1, 2, 4, 6 }
  uselistorder i32 388, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 356, { 3, 4, 5, 0, 7, 8, 1, 2, 9, 6 }
  uselistorder i32 ()* @function_100094d8, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_10005fc4, { 1, 0 }
  uselistorder i32 (i32)* @function_10008c4c, { 2, 1, 3, 0 }
  uselistorder i32 ()* @function_10009150, { 5, 2, 4, 3, 1, 0 }
  uselistorder label %dec_label_pc_10008218, { 1, 0 }
  uselistorder label %dec_label_pc_10007ee8, { 1, 0 }
  uselistorder label %dec_label_pc_10007564, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10007524, { 1, 0 }
  uselistorder label %dec_label_pc_1000751c, { 1, 0 }
  uselistorder label %dec_label_pc_100074d4, { 1, 0 }
  uselistorder label %dec_label_pc_100074b8, { 1, 0 }
  uselistorder label %dec_label_pc_1000749c, { 1, 0 }
  uselistorder label %dec_label_pc_10007450, { 4, 5, 6, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000741c, { 1, 0 }
  uselistorder label %dec_label_pc_10007354, { 3, 0, 4, 2, 5, 1 }
  uselistorder label %dec_label_pc_100072d8.dec_label_pc_100072d8_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_100072b8.dec_label_pc_100072b8_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_100072a8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_100071f4, { 1, 0 }
  uselistorder label %dec_label_pc_100071ec, { 1, 0 }
  uselistorder label %dec_label_pc_1000703c, { 10, 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 11 }
  uselistorder label %dec_label_pc_10007030, { 1, 0 }
  uselistorder label %dec_label_pc_10006f5c, { 0, 1, 2, 3, 4, 5, 9, 6, 7, 10, 8, 11, 13, 12 }
  uselistorder label %dec_label_pc_10006e50.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10006c44, { 1, 0 }
}

define i32 @function_1000822c(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_1000822c:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_1000822c = icmp eq i32* %arg2, null
  %v1_10008234 = mul i32 %arg1, 8
  store i32 %v1_10008234, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001c380.184 to i32), i32* %r9.global-to-local, align 4
  br i1 %v3_1000822c, label %dec_label_pc_1000824c, label %dec_label_pc_10008244

dec_label_pc_10008244:                            ; preds = %dec_label_pc_1000822c
  %v1_10008244 = add i32 %v1_10008234, add (i32 ptrtoint (i32* @global_var_1001c380.184 to i32), i32 4)
  %v2_10008244 = inttoptr i32 %v1_10008244 to i16*
  %v3_10008244 = load i16, i16* %v2_10008244, align 4
  %v4_10008244 = zext i16 %v3_10008244 to i32
  store i32 %v4_10008244, i32* %arg2, align 4
  %v0_1000824c.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_1000824c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000824c

dec_label_pc_1000824c:                            ; preds = %dec_label_pc_1000822c, %dec_label_pc_10008244
  %v1_1000824c = phi i32 [ ptrtoint (i32* @global_var_1001c380.184 to i32), %dec_label_pc_1000822c ], [ %v1_1000824c.pre, %dec_label_pc_10008244 ]
  %v0_1000824c = phi i32 [ %v1_10008234, %dec_label_pc_1000822c ], [ %v0_1000824c.pre, %dec_label_pc_10008244 ]
  %v2_1000824c = add i32 %v0_1000824c, %v1_1000824c
  %v3_1000824c = inttoptr i32 %v2_1000824c to i32*
  %v4_1000824c = load i32, i32* %v3_1000824c, align 4
  store i32 %v4_1000824c, i32* %r3.global-to-local, align 4
  ret i32 %v4_1000824c

; uselistorder directives
  uselistorder i32 %v1_10008234, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000824c, { 1, 0 }
}

define i32 @function_10008254(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008254:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %v1_10008258 = mul i32 %arg1, 8
  %v2_10008260 = add i32 %v1_10008258, ptrtoint (i32* @global_var_1001c380.184 to i32)
  %v1_10008268 = add i32 %v1_10008258, add (i32 ptrtoint (i32* @global_var_1001c380.184 to i32), i32 4)
  %v2_10008268 = inttoptr i32 %v1_10008268 to i16*
  %v3_10008268 = load i16, i16* %v2_10008268, align 4
  %v3_1000826c = icmp eq i16 %v3_10008268, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000826c, i1* %cr7_eq.global-to-local, align 1
  %v3_10008270 = load i32, i32* @global_var_1001c27c.185, align 4
  %v1_10008274 = udiv i32 %v3_10008270, 16777216
  store i32 %v1_10008274, i32* @r5, align 4
  %v1_10008278 = urem i32 %v3_10008270, 256
  store i32 %v1_10008278, i32* %r6.global-to-local, align 4
  %v1_1000827c = call i32 @__asm_rlwinm(i32 %v3_10008270, i32 24, i32 24, i32 31)
  %v1_10008280 = call i32 @__asm_rlwinm(i32 %v3_10008270, i32 16, i32 24, i32 31)
  %v0_10008284 = load i32, i32* @lr, align 4
  %v1_10008284 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v2_10008284 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v3_10008284 = or i1 %v1_10008284, %v2_10008284
  call void @__pseudo_cond_branch(i1 %v3_10008284, i32 %v0_10008284)
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_1000828c = inttoptr i32 %v2_10008260 to i32*
  br label %dec_label_pc_1000828c

dec_label_pc_1000828c:                            ; preds = %dec_label_pc_1000828c, %dec_label_pc_10008254
  %v1_10008298 = phi i32 [ %v1_100082cc, %dec_label_pc_1000828c ], [ 0, %dec_label_pc_10008254 ]
  %v2_1000828c = load i32, i32* %v1_1000828c, align 4
  %v2_10008290 = add i32 %v2_1000828c, %v1_10008298
  %v3_10008290 = inttoptr i32 %v2_10008290 to i8*
  %v4_10008290 = load i8, i8* %v3_10008290, align 1
  %v5_10008290 = zext i8 %v4_10008290 to i32
  %v0_10008294 = load i32, i32* %r6.global-to-local, align 4
  %v2_10008294 = xor i32 %v0_10008294, %v5_10008290
  %v3_10008298 = trunc i32 %v2_10008294 to i8
  store i8 %v3_10008298, i8* %v3_10008290, align 1
  %v2_1000829c = load i32, i32* %v1_1000828c, align 4
  %v0_100082a0 = load i32, i32* %r10.global-to-local, align 4
  %v2_100082a0 = add i32 %v0_100082a0, %v2_1000829c
  %v3_100082a0 = inttoptr i32 %v2_100082a0 to i8*
  %v4_100082a0 = load i8, i8* %v3_100082a0, align 1
  %v5_100082a0 = zext i8 %v4_100082a0 to i32
  %v2_100082a4 = xor i32 %v5_100082a0, %v1_1000827c
  %v3_100082a8 = trunc i32 %v2_100082a4 to i8
  store i8 %v3_100082a8, i8* %v3_100082a0, align 1
  %v2_100082ac = load i32, i32* %v1_1000828c, align 4
  %v0_100082b0 = load i32, i32* %r10.global-to-local, align 4
  %v2_100082b0 = add i32 %v0_100082b0, %v2_100082ac
  %v3_100082b0 = inttoptr i32 %v2_100082b0 to i8*
  %v4_100082b0 = load i8, i8* %v3_100082b0, align 1
  %v5_100082b0 = zext i8 %v4_100082b0 to i32
  %v2_100082b4 = xor i32 %v5_100082b0, %v1_10008280
  %v3_100082b8 = trunc i32 %v2_100082b4 to i8
  store i8 %v3_100082b8, i8* %v3_100082b0, align 1
  %v2_100082bc = load i32, i32* %v1_1000828c, align 4
  %v0_100082c0 = load i32, i32* %r10.global-to-local, align 4
  %v2_100082c0 = add i32 %v0_100082c0, %v2_100082bc
  %v3_100082c0 = inttoptr i32 %v2_100082c0 to i8*
  %v4_100082c0 = load i8, i8* %v3_100082c0, align 1
  %v5_100082c0 = zext i8 %v4_100082c0 to i32
  %v0_100082c4 = load i32, i32* @r5, align 4
  %v2_100082c4 = xor i32 %v0_100082c4, %v5_100082c0
  %v3_100082c8 = trunc i32 %v2_100082c4 to i8
  store i8 %v3_100082c8, i8* %v3_100082c0, align 1
  %v0_100082cc = load i32, i32* %r10.global-to-local, align 4
  %v1_100082cc = add i32 %v0_100082cc, 1
  store i32 %v1_100082cc, i32* %r10.global-to-local, align 4
  %v3_100082d0 = load i16, i16* %v2_10008268, align 4
  %v4_100082d0 = zext i16 %v3_100082d0 to i32
  %v2_100082d4 = icmp slt i32 %v4_100082d0, %v1_100082cc
  %v3_100082d4 = icmp sgt i32 %v4_100082d0, %v1_100082cc
  %v4_100082d4 = icmp eq i32 %v4_100082d0, %v1_100082cc
  store i1 %v2_100082d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100082d4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100082d4, label %dec_label_pc_1000828c, label %dec_label_pc_100082dc

dec_label_pc_100082dc:                            ; preds = %dec_label_pc_1000828c
  ret i32 %v2_10008260

; uselistorder directives
  uselistorder i32 %v4_100082d0, { 2, 1, 0 }
  uselistorder i32 %v1_100082cc, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v3_10008270, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10008258, { 1, 0 }
}

define i32 @function_100082e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_100082e0:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %v1_100082e4 = mul i32 %arg1, 8
  %v2_100082ec = add i32 %v1_100082e4, ptrtoint (i32* @global_var_1001c380.184 to i32)
  %v1_100082f4 = add i32 %v1_100082e4, add (i32 ptrtoint (i32* @global_var_1001c380.184 to i32), i32 4)
  %v2_100082f4 = inttoptr i32 %v1_100082f4 to i16*
  %v3_100082f4 = load i16, i16* %v2_100082f4, align 4
  %v3_100082f8 = icmp eq i16 %v3_100082f4, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100082f8, i1* %cr7_eq.global-to-local, align 1
  %v3_100082fc = load i32, i32* @global_var_1001c27c.185, align 4
  %v1_10008300 = udiv i32 %v3_100082fc, 16777216
  store i32 %v1_10008300, i32* @r5, align 4
  %v1_10008304 = urem i32 %v3_100082fc, 256
  store i32 %v1_10008304, i32* %r6.global-to-local, align 4
  %v1_10008308 = call i32 @__asm_rlwinm(i32 %v3_100082fc, i32 24, i32 24, i32 31)
  %v1_1000830c = call i32 @__asm_rlwinm(i32 %v3_100082fc, i32 16, i32 24, i32 31)
  %v0_10008310 = load i32, i32* @lr, align 4
  %v1_10008310 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v2_10008310 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v3_10008310 = or i1 %v1_10008310, %v2_10008310
  call void @__pseudo_cond_branch(i1 %v3_10008310, i32 %v0_10008310)
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10008318 = inttoptr i32 %v2_100082ec to i32*
  br label %dec_label_pc_10008318

dec_label_pc_10008318:                            ; preds = %dec_label_pc_10008318, %dec_label_pc_100082e0
  %v1_10008324 = phi i32 [ %v1_10008358, %dec_label_pc_10008318 ], [ 0, %dec_label_pc_100082e0 ]
  %v2_10008318 = load i32, i32* %v1_10008318, align 4
  %v2_1000831c = add i32 %v2_10008318, %v1_10008324
  %v3_1000831c = inttoptr i32 %v2_1000831c to i8*
  %v4_1000831c = load i8, i8* %v3_1000831c, align 1
  %v5_1000831c = zext i8 %v4_1000831c to i32
  %v0_10008320 = load i32, i32* %r6.global-to-local, align 4
  %v2_10008320 = xor i32 %v0_10008320, %v5_1000831c
  %v3_10008324 = trunc i32 %v2_10008320 to i8
  store i8 %v3_10008324, i8* %v3_1000831c, align 1
  %v2_10008328 = load i32, i32* %v1_10008318, align 4
  %v0_1000832c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000832c = add i32 %v0_1000832c, %v2_10008328
  %v3_1000832c = inttoptr i32 %v2_1000832c to i8*
  %v4_1000832c = load i8, i8* %v3_1000832c, align 1
  %v5_1000832c = zext i8 %v4_1000832c to i32
  %v2_10008330 = xor i32 %v5_1000832c, %v1_10008308
  %v3_10008334 = trunc i32 %v2_10008330 to i8
  store i8 %v3_10008334, i8* %v3_1000832c, align 1
  %v2_10008338 = load i32, i32* %v1_10008318, align 4
  %v0_1000833c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000833c = add i32 %v0_1000833c, %v2_10008338
  %v3_1000833c = inttoptr i32 %v2_1000833c to i8*
  %v4_1000833c = load i8, i8* %v3_1000833c, align 1
  %v5_1000833c = zext i8 %v4_1000833c to i32
  %v2_10008340 = xor i32 %v5_1000833c, %v1_1000830c
  %v3_10008344 = trunc i32 %v2_10008340 to i8
  store i8 %v3_10008344, i8* %v3_1000833c, align 1
  %v2_10008348 = load i32, i32* %v1_10008318, align 4
  %v0_1000834c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000834c = add i32 %v0_1000834c, %v2_10008348
  %v3_1000834c = inttoptr i32 %v2_1000834c to i8*
  %v4_1000834c = load i8, i8* %v3_1000834c, align 1
  %v5_1000834c = zext i8 %v4_1000834c to i32
  %v0_10008350 = load i32, i32* @r5, align 4
  %v2_10008350 = xor i32 %v0_10008350, %v5_1000834c
  %v3_10008354 = trunc i32 %v2_10008350 to i8
  store i8 %v3_10008354, i8* %v3_1000834c, align 1
  %v0_10008358 = load i32, i32* %r10.global-to-local, align 4
  %v1_10008358 = add i32 %v0_10008358, 1
  store i32 %v1_10008358, i32* %r10.global-to-local, align 4
  %v3_1000835c = load i16, i16* %v2_100082f4, align 4
  %v4_1000835c = zext i16 %v3_1000835c to i32
  %v2_10008360 = icmp slt i32 %v4_1000835c, %v1_10008358
  %v3_10008360 = icmp sgt i32 %v4_1000835c, %v1_10008358
  %v4_10008360 = icmp eq i32 %v4_1000835c, %v1_10008358
  store i1 %v2_10008360, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10008360, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008360, label %dec_label_pc_10008318, label %dec_label_pc_10008368

dec_label_pc_10008368:                            ; preds = %dec_label_pc_10008318
  ret i32 %v2_100082ec

; uselistorder directives
  uselistorder i32 %v4_1000835c, { 2, 1, 0 }
  uselistorder i32 %v1_10008358, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v3_100082fc, { 2, 3, 1, 0 }
  uselistorder i32 %v1_100082e4, { 1, 0 }
  uselistorder i32 16777216, { 0, 1, 2, 3, 5, 4, 7, 6 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_1001c380.184 to i32), i32 4), { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1001c380.184 to i32), { 1, 3, 0, 2, 4 }
}

define i32 @function_1000836c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000836c:
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  store i32 2, i32* @r3, align 4
  store i32 12, i32* %r19.global-to-local, align 4
  store i32 5, i32* %r20.global-to-local, align 4
  store i32 23, i32* %r21.global-to-local, align 4
  store i32 6, i32* %r22.global-to-local, align 4
  store i32 19, i32* %r23.global-to-local, align 4
  store i32 8, i32* %r24.global-to-local, align 4
  store i32 14, i32* %r25.global-to-local, align 4
  store i32 16, i32* %r26.global-to-local, align 4
  store i32 2, i32* %r27.global-to-local, align 4
  store i32 268469200, i32* @lr, align 4
  %v0_100083cc = call i32 @function_1000a05c()
  store i32 %v0_100083cc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100083ec.187 to i32), i32* @lr, align 4
  %v3_100083e8 = call i32 @function_100089cc(i32 ptrtoint (i32* @global_var_1000bc10.186 to i32), i32 2, i32 2)
  store i32 13, i32* @r3, align 4
  %v0_100083f0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100083f0, i32* @global_var_1001c388.188, align 4
  %v0_100083f4 = load i32, i32* %r27.global-to-local, align 4
  %v1_100083f4 = trunc i32 %v0_100083f4 to i16
  store i16 %v1_100083f4, i16* bitcast (i32* @global_var_1001c38c.189 to i16*), align 4
  store i32 268469244, i32* @lr, align 4
  %v0_100083f8 = call i32 @function_1000a05c()
  store i32 %v0_100083f8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008410.191 to i32), i32* @lr, align 4
  %v4_1000840c = call i32 @function_100089cc(i32 ptrtoint ([14 x i8]* @global_var_1000bc14.190 to i32), i32 13, i32 13)
  store i32 12, i32* @r3, align 4
  store i16 13, i16* bitcast (i32* @global_var_1001c394.192 to i16*), align 4
  %v0_1000841c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000841c, i32* @global_var_1001c390.193, align 4
  store i32 268469284, i32* @lr, align 4
  %v0_10008420 = call i32 @function_1000a05c()
  store i32 %v0_10008420, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008438.195 to i32), i32* @lr, align 4
  %v4_10008434 = call i32 @function_100089cc(i32 ptrtoint ([13 x i8]* @global_var_1000bc24.194 to i32), i32 12, i32 12)
  store i32 2, i32* @r3, align 4
  %v0_1000843c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000843c, i32* @global_var_1001c398.196, align 4
  %v0_10008440 = load i32, i32* %r19.global-to-local, align 4
  %v1_10008440 = trunc i32 %v0_10008440 to i16
  store i16 %v1_10008440, i16* bitcast (i32* @global_var_1001c39c.197 to i16*), align 4
  store i32 268469320, i32* @lr, align 4
  %v0_10008444 = call i32 @function_1000a05c()
  store i32 %v0_10008444, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000845c.199 to i32), i32* @lr, align 4
  %v3_10008458 = call i32 @function_100089cc(i32 ptrtoint (i32* @global_var_1000bc34.198 to i32), i32 2, i32 2)
  store i32 36, i32* @r3, align 4
  %v0_10008460 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008460, i32* @global_var_1001c3a0.200, align 4
  %v0_10008464 = load i32, i32* %r27.global-to-local, align 4
  %v1_10008464 = trunc i32 %v0_10008464 to i16
  store i16 %v1_10008464, i16* bitcast (i32* @global_var_1001c3a4.201 to i16*), align 4
  store i32 268469356, i32* @lr, align 4
  %v0_10008468 = call i32 @function_1000a05c()
  store i32 %v0_10008468, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008480.203 to i32), i32* @lr, align 4
  %v4_1000847c = call i32 @function_100089cc(i32 ptrtoint ([37 x i8]* @global_var_1000bc38.202 to i32), i32 36, i32 36)
  store i32 6, i32* @r3, align 4
  store i16 36, i16* bitcast (i32* @global_var_1001c3ac.204 to i16*), align 4
  %v0_1000848c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000848c, i32* @global_var_1001c3a8.205, align 4
  store i32 268469396, i32* @lr, align 4
  %v0_10008490 = call i32 @function_1000a05c()
  store i32 %v0_10008490, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100084a8.207 to i32), i32* @lr, align 4
  %v4_100084a4 = call i32 @function_100089cc(i32 ptrtoint ([7 x i8]* @global_var_1000bc60.206 to i32), i32 6, i32 6)
  store i32 7, i32* @r3, align 4
  %v0_100084ac = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100084ac, i32* @global_var_1001c3b0.208, align 4
  store i32 7, i32* %r27.global-to-local, align 4
  %v0_100084b4 = load i32, i32* %r22.global-to-local, align 4
  %v1_100084b4 = trunc i32 %v0_100084b4 to i16
  store i16 %v1_100084b4, i16* bitcast (i32* @global_var_1001c3b4.209 to i16*), align 4
  store i32 268469436, i32* @lr, align 4
  %v0_100084b8 = call i32 @function_1000a05c()
  store i32 %v0_100084b8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100084d0.211 to i32), i32* @lr, align 4
  %v4_100084cc = call i32 @function_100089cc(i32 ptrtoint ([8 x i8]* @global_var_1000bc68.210 to i32), i32 7, i32 7)
  store i32 7, i32* @r3, align 4
  %v0_100084d4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100084d4, i32* @global_var_1001c3b8.212, align 4
  %v0_100084d8 = load i32, i32* %r27.global-to-local, align 4
  %v1_100084d8 = trunc i32 %v0_100084d8 to i16
  store i16 %v1_100084d8, i16* bitcast (i32* @global_var_1001c3bc.213 to i16*), align 4
  store i32 268469472, i32* @lr, align 4
  %v0_100084dc = call i32 @function_1000a05c()
  store i32 %v0_100084dc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100084f4.215 to i32), i32* @lr, align 4
  %v4_100084f0 = call i32 @function_100089cc(i32 ptrtoint ([8 x i8]* @global_var_1000bc70.214 to i32), i32 7, i32 7)
  store i32 3, i32* @r3, align 4
  %v0_100084f8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100084f8, i32* @global_var_1001c3c0.216, align 4
  %v0_100084fc = load i32, i32* %r27.global-to-local, align 4
  %v1_100084fc = trunc i32 %v0_100084fc to i16
  store i16 %v1_100084fc, i16* bitcast (i32* @global_var_1001c3c4.217 to i16*), align 4
  store i32 268469508, i32* @lr, align 4
  %v0_10008500 = call i32 @function_1000a05c()
  store i32 %v0_10008500, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008518.219 to i32), i32* @lr, align 4
  %v4_10008514 = call i32 @function_100089cc(i32 ptrtoint ([4 x i8]* @global_var_1000bc78.218 to i32), i32 3, i32 3)
  store i32 19, i32* @r3, align 4
  store i16 3, i16* bitcast (i32* @global_var_1001c3cc.220 to i16*), align 4
  %v0_10008524 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008524, i32* @global_var_1001c3c8.221, align 4
  store i32 268469548, i32* @lr, align 4
  %v0_10008528 = call i32 @function_1000a05c()
  store i32 %v0_10008528, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008540.223 to i32), i32* @lr, align 4
  %v3_1000853c = call i32 @function_100089cc(i32 ptrtoint (i32* @global_var_1000bc7c.222 to i32), i32 19, i32 19)
  store i32 24, i32* @r3, align 4
  %v0_10008544 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008544, i32* @global_var_1001c3d0.224, align 4
  %v0_10008548 = load i32, i32* %r23.global-to-local, align 4
  %v1_10008548 = trunc i32 %v0_10008548 to i16
  store i16 %v1_10008548, i16* bitcast (i32* @global_var_1001c3d4.225 to i16*), align 4
  store i32 268469584, i32* @lr, align 4
  %v0_1000854c = call i32 @function_1000a05c()
  store i32 %v0_1000854c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008564.227 to i32), i32* @lr, align 4
  %v3_10008560 = call i32 @function_100089cc(i32 ptrtoint (i32* @global_var_1000bc90.226 to i32), i32 24, i32 24)
  store i32 9, i32* @r3, align 4
  store i16 24, i16* bitcast (i32* @global_var_1001c3dc.228 to i16*), align 4
  %v0_10008570 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008570, i32* @global_var_1001c3d8.229, align 4
  store i32 268469624, i32* @lr, align 4
  %v0_10008574 = call i32 @function_1000a05c()
  store i32 %v0_10008574, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000858c.231 to i32), i32* @lr, align 4
  %v4_10008588 = call i32 @function_100089cc(i32 ptrtoint ([10 x i8]* @global_var_1000bcac.230 to i32), i32 9, i32 9)
  store i32 16, i32* @r3, align 4
  store i16 9, i16* bitcast (i32* @global_var_1001c3e4.232 to i16*), align 4
  %v0_10008598 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008598, i32* @global_var_1001c3e0.233, align 4
  store i32 268469664, i32* @lr, align 4
  %v0_1000859c = call i32 @function_1000a05c()
  store i32 %v0_1000859c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100085b4.235 to i32), i32* @lr, align 4
  %v4_100085b0 = call i32 @function_100089cc(i32 ptrtoint ([17 x i8]* @global_var_1000bcb8.234 to i32), i32 16, i32 16)
  store i32 22, i32* @r3, align 4
  %v0_100085b8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100085b8, i32* @global_var_1001c3e8.236, align 4
  %v0_100085bc = load i32, i32* %r26.global-to-local, align 4
  %v1_100085bc = trunc i32 %v0_100085bc to i16
  store i16 %v1_100085bc, i16* bitcast (i32* @global_var_1001c3ec.237 to i16*), align 4
  store i32 268469700, i32* @lr, align 4
  %v0_100085c0 = call i32 @function_1000a05c()
  store i32 %v0_100085c0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100085d8.239 to i32), i32* @lr, align 4
  %v4_100085d4 = call i32 @function_100089cc(i32 ptrtoint ([23 x i8]* @global_var_1000bccc.238 to i32), i32 22, i32 22)
  store i32 7, i32* @r3, align 4
  store i16 22, i16* bitcast (i32* @global_var_1001c3f4.240 to i16*), align 4
  %v0_100085e4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100085e4, i32* @global_var_1001c3f0.241, align 4
  store i32 268469740, i32* @lr, align 4
  %v0_100085e8 = call i32 @function_1000a05c()
  store i32 %v0_100085e8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008600.243 to i32), i32* @lr, align 4
  %v4_100085fc = call i32 @function_100089cc(i32 ptrtoint ([8 x i8]* @global_var_1000bce4.242 to i32), i32 7, i32 7)
  store i32 5, i32* @r3, align 4
  %v0_10008604 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008604, i32* @global_var_1001c3f8.244, align 4
  %v0_10008608 = load i32, i32* %r27.global-to-local, align 4
  %v1_10008608 = trunc i32 %v0_10008608 to i16
  store i16 %v1_10008608, i16* bitcast (i32* @global_var_1001c3fc.245 to i16*), align 4
  store i32 268469776, i32* @lr, align 4
  %v0_1000860c = call i32 @function_1000a05c()
  store i32 %v0_1000860c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008624.247 to i32), i32* @lr, align 4
  %v4_10008620 = call i32 @function_100089cc(i32 ptrtoint ([6 x i8]* @global_var_1000bcec.246 to i32), i32 5, i32 5)
  store i32 4, i32* @r3, align 4
  %v0_10008628 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008628, i32* @global_var_1001c400.248, align 4
  %v0_1000862c = load i32, i32* %r20.global-to-local, align 4
  %v1_1000862c = trunc i32 %v0_1000862c to i16
  store i16 %v1_1000862c, i16* bitcast (i32* @global_var_1001c404.249 to i16*), align 4
  store i32 268469812, i32* @lr, align 4
  %v0_10008630 = call i32 @function_1000a05c()
  store i32 %v0_10008630, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008648.251 to i32), i32* @lr, align 4
  %v4_10008644 = call i32 @function_100089cc(i32 ptrtoint ([5 x i8]* @global_var_1000bcf4.250 to i32), i32 4, i32 4)
  store i32 6, i32* @r3, align 4
  store i16 4, i16* bitcast (i32* @global_var_1001c40c.252 to i16*), align 4
  %v0_10008654 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008654, i32* @global_var_1001c408.253, align 4
  store i32 268469852, i32* @lr, align 4
  %v0_10008658 = call i32 @function_1000a05c()
  store i32 %v0_10008658, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008670.255 to i32), i32* @lr, align 4
  %v4_1000866c = call i32 @function_100089cc(i32 ptrtoint ([7 x i8]* @global_var_1000bcfc.254 to i32), i32 6, i32 6)
  store i32 14, i32* @r3, align 4
  %v0_10008674 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008674, i32* @global_var_1001c410.256, align 4
  %v0_10008678 = load i32, i32* %r22.global-to-local, align 4
  %v1_10008678 = trunc i32 %v0_10008678 to i16
  store i16 %v1_10008678, i16* bitcast (i32* @global_var_1001c414.257 to i16*), align 4
  store i32 268469888, i32* @lr, align 4
  %v0_1000867c = call i32 @function_1000a05c()
  store i32 %v0_1000867c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008694.259 to i32), i32* @lr, align 4
  %v4_10008690 = call i32 @function_100089cc(i32 ptrtoint ([15 x i8]* @global_var_1000bd04.258 to i32), i32 14, i32 14)
  store i32 8, i32* @r3, align 4
  %v0_10008698 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008698, i32* @global_var_1001c418.260, align 4
  %v0_1000869c = load i32, i32* %r25.global-to-local, align 4
  %v1_1000869c = trunc i32 %v0_1000869c to i16
  store i16 %v1_1000869c, i16* bitcast (i32* @global_var_1001c41c.261 to i16*), align 4
  store i32 268469924, i32* @lr, align 4
  %v0_100086a0 = call i32 @function_1000a05c()
  store i32 %v0_100086a0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100086b8.263 to i32), i32* @lr, align 4
  %v4_100086b4 = call i32 @function_100089cc(i32 ptrtoint ([9 x i8]* @global_var_1000bd14.262 to i32), i32 8, i32 8)
  store i32 7, i32* @r3, align 4
  %v0_100086bc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100086bc, i32* @global_var_1001c490.264, align 4
  %v0_100086c0 = load i32, i32* %r24.global-to-local, align 4
  %v1_100086c0 = trunc i32 %v0_100086c0 to i16
  store i16 %v1_100086c0, i16* bitcast (i32* @global_var_1001c494.265 to i16*), align 4
  store i32 268469960, i32* @lr, align 4
  %v0_100086c4 = call i32 @function_1000a05c()
  store i32 %v0_100086c4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100086dc.267 to i32), i32* @lr, align 4
  %v4_100086d8 = call i32 @function_100089cc(i32 ptrtoint ([8 x i8]* @global_var_1000bd20.266 to i32), i32 7, i32 7)
  store i32 16, i32* @r3, align 4
  %v0_100086e0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100086e0, i32* @global_var_1001c498.268, align 4
  %v0_100086e4 = load i32, i32* %r27.global-to-local, align 4
  %v1_100086e4 = trunc i32 %v0_100086e4 to i16
  store i16 %v1_100086e4, i16* bitcast (i32* @global_var_1001c49c.269 to i16*), align 4
  store i32 268469996, i32* @lr, align 4
  %v0_100086e8 = call i32 @function_1000a05c()
  store i32 %v0_100086e8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008700.271 to i32), i32* @lr, align 4
  %v4_100086fc = call i32 @function_100089cc(i32 ptrtoint ([17 x i8]* @global_var_1000bd28.270 to i32), i32 16, i32 16)
  store i32 23, i32* @r3, align 4
  %v0_10008704 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008704, i32* @global_var_1001c420.272, align 4
  store i32 268500992, i32* %r27.global-to-local, align 4
  %v0_1000870c = load i32, i32* %r26.global-to-local, align 4
  %v1_1000870c = trunc i32 %v0_1000870c to i16
  store i16 %v1_1000870c, i16* bitcast (i32* @global_var_1001c424.273 to i16*), align 4
  store i32 268470036, i32* @lr, align 4
  %v0_10008710 = call i32 @function_1000a05c()
  store i32 %v0_10008710, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008728.275 to i32), i32* @lr, align 4
  %v4_10008724 = call i32 @function_100089cc(i32 ptrtoint ([24 x i8]* @global_var_1000bd3c.274 to i32), i32 23, i32 23)
  store i32 8, i32* @r3, align 4
  %v0_1000872c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000872c, i32* @global_var_1001c428.276, align 4
  store i32 268500992, i32* %r26.global-to-local, align 4
  %v0_10008734 = load i32, i32* %r21.global-to-local, align 4
  %v1_10008734 = trunc i32 %v0_10008734 to i16
  store i16 %v1_10008734, i16* bitcast (i32* @global_var_1001c42c.277 to i16*), align 4
  store i32 268470076, i32* @lr, align 4
  %v0_10008738 = call i32 @function_1000a05c()
  store i32 %v0_10008738, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_1000bd60.279 to i32), i32* %r26.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008754.280 to i32), i32* @lr, align 4
  %v4_10008750 = call i32 @function_100089cc(i32 ptrtoint ([9 x i8]* @global_var_1000bd54.278 to i32), i32 8, i32 8)
  store i32 14, i32* @r3, align 4
  %v0_10008758 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008758, i32* @global_var_1001c430.281, align 4
  %v0_1000875c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000875c = trunc i32 %v0_1000875c to i16
  store i16 %v1_1000875c, i16* bitcast (i32* @global_var_1001c434.282 to i16*), align 4
  store i32 268470116, i32* @lr, align 4
  %v0_10008760 = call i32 @function_1000a05c()
  %v0_10008764 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10008760, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([20 x i8]* @global_var_1000bd70.283 to i32), i32* %r27.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008778.284 to i32), i32* @lr, align 4
  %v4_10008774 = call i32 @function_100089cc(i32 %v0_10008764, i32 14, i32 14)
  store i32 19, i32* @r3, align 4
  %v0_1000877c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000877c, i32* @global_var_1001c438.285, align 4
  %v0_10008780 = load i32, i32* %r25.global-to-local, align 4
  %v1_10008780 = trunc i32 %v0_10008780 to i16
  store i16 %v1_10008780, i16* bitcast (i32* @global_var_1001c43c.286 to i16*), align 4
  store i32 268470152, i32* @lr, align 4
  %v0_10008784 = call i32 @function_1000a05c()
  %v0_10008788 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10008784, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008798.287 to i32), i32* @lr, align 4
  %v4_10008794 = call i32 @function_100089cc(i32 %v0_10008788, i32 19, i32 19)
  store i32 10, i32* @r3, align 4
  %v0_1000879c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000879c, i32* @global_var_1001c440.288, align 4
  %v0_100087a0 = load i32, i32* %r23.global-to-local, align 4
  %v1_100087a0 = trunc i32 %v0_100087a0 to i16
  store i16 %v1_100087a0, i16* bitcast (i32* @global_var_1001c444.289 to i16*), align 4
  store i32 268470184, i32* @lr, align 4
  %v0_100087a4 = call i32 @function_1000a05c()
  store i32 %v0_100087a4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100087bc.291 to i32), i32* @lr, align 4
  %v4_100087b8 = call i32 @function_100089cc(i32 ptrtoint ([11 x i8]* @global_var_1000bd84.290 to i32), i32 10, i32 10)
  store i32 21, i32* @r3, align 4
  store i16 10, i16* bitcast (i32* @global_var_1001c4a4.292 to i16*), align 4
  %v0_100087c8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100087c8, i32* @global_var_1001c4a0.293, align 4
  store i32 268470224, i32* @lr, align 4
  %v0_100087cc = call i32 @function_1000a05c()
  store i32 %v0_100087cc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100087e4.295 to i32), i32* @lr, align 4
  %v3_100087e0 = call i32 @function_100089cc(i32 ptrtoint (i32* @global_var_1000bde8.294 to i32), i32 21, i32 21)
  store i32 17, i32* @r3, align 4
  store i16 21, i16* bitcast (i32* @global_var_1001c44c.296 to i16*), align 4
  %v0_100087f0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100087f0, i32* @global_var_1001c448.297, align 4
  store i32 268470264, i32* @lr, align 4
  %v0_100087f4 = call i32 @function_1000a05c()
  store i32 %v0_100087f4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000880c.299 to i32), i32* @lr, align 4
  %v4_10008808 = call i32 @function_100089cc(i32 ptrtoint ([18 x i8]* @global_var_1000bd90.298 to i32), i32 17, i32 17)
  store i32 12, i32* @r3, align 4
  store i16 17, i16* bitcast (i32* @global_var_1001c454.300 to i16*), align 4
  %v0_10008818 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008818, i32* @global_var_1001c450.301, align 4
  store i32 268470304, i32* @lr, align 4
  %v0_1000881c = call i32 @function_1000a05c()
  store i32 %v0_1000881c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008834.303 to i32), i32* @lr, align 4
  %v4_10008830 = call i32 @function_100089cc(i32 ptrtoint ([13 x i8]* @global_var_1000bda4.302 to i32), i32 12, i32 12)
  store i32 14, i32* @r3, align 4
  %v0_10008838 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008838, i32* @global_var_1001c458.304, align 4
  %v0_1000883c = load i32, i32* %r19.global-to-local, align 4
  %v1_1000883c = trunc i32 %v0_1000883c to i16
  store i16 %v1_1000883c, i16* bitcast (i32* @global_var_1001c45c.305 to i16*), align 4
  store i32 268470340, i32* @lr, align 4
  %v0_10008840 = call i32 @function_1000a05c()
  %v0_10008844 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10008840, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008854.306 to i32), i32* @lr, align 4
  %v4_10008850 = call i32 @function_100089cc(i32 %v0_10008844, i32 14, i32 14)
  store i32 19, i32* @r3, align 4
  %v0_10008858 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008858, i32* @global_var_1001c460.307, align 4
  %v0_1000885c = load i32, i32* %r25.global-to-local, align 4
  %v1_1000885c = trunc i32 %v0_1000885c to i16
  store i16 %v1_1000885c, i16* bitcast (i32* @global_var_1001c464.308 to i16*), align 4
  store i32 268470372, i32* @lr, align 4
  %v0_10008860 = call i32 @function_1000a05c()
  %v0_10008864 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10008860, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008874.309 to i32), i32* @lr, align 4
  %v4_10008870 = call i32 @function_100089cc(i32 %v0_10008864, i32 19, i32 19)
  store i32 8, i32* @r3, align 4
  %v0_10008878 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008878, i32* @global_var_1001c468.310, align 4
  %v0_1000887c = load i32, i32* %r23.global-to-local, align 4
  %v1_1000887c = trunc i32 %v0_1000887c to i16
  store i16 %v1_1000887c, i16* bitcast (i32* @global_var_1001c46c.311 to i16*), align 4
  store i32 268470404, i32* @lr, align 4
  %v0_10008880 = call i32 @function_1000a05c()
  store i32 %v0_10008880, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008898.313 to i32), i32* @lr, align 4
  %v4_10008894 = call i32 @function_100089cc(i32 ptrtoint ([9 x i8]* @global_var_1000bdb4.312 to i32), i32 8, i32 8)
  store i32 5, i32* @r3, align 4
  %v0_1000889c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000889c, i32* @global_var_1001c470.314, align 4
  %v0_100088a0 = load i32, i32* %r24.global-to-local, align 4
  %v1_100088a0 = trunc i32 %v0_100088a0 to i16
  store i16 %v1_100088a0, i16* bitcast (i32* @global_var_1001c474.315 to i16*), align 4
  store i32 268470440, i32* @lr, align 4
  %v0_100088a4 = call i32 @function_1000a05c()
  store i32 %v0_100088a4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100088bc.317 to i32), i32* @lr, align 4
  %v4_100088b8 = call i32 @function_100089cc(i32 ptrtoint ([6 x i8]* @global_var_1000bdc0.316 to i32), i32 5, i32 5)
  store i32 6, i32* @r3, align 4
  %v0_100088c0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100088c0, i32* @global_var_1001c478.318, align 4
  %v0_100088c4 = load i32, i32* %r20.global-to-local, align 4
  %v1_100088c4 = trunc i32 %v0_100088c4 to i16
  store i16 %v1_100088c4, i16* bitcast (i32* @global_var_1001c47c.319 to i16*), align 4
  store i32 268470476, i32* @lr, align 4
  %v0_100088c8 = call i32 @function_1000a05c()
  store i32 %v0_100088c8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100088e0.321 to i32), i32* @lr, align 4
  %v4_100088dc = call i32 @function_100089cc(i32 ptrtoint ([7 x i8]* @global_var_1000bdc8.320 to i32), i32 6, i32 6)
  store i32 23, i32* @r3, align 4
  %v0_100088e4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100088e4, i32* @global_var_1001c480.322, align 4
  %v0_100088e8 = load i32, i32* %r22.global-to-local, align 4
  %v1_100088e8 = trunc i32 %v0_100088e8 to i16
  store i16 %v1_100088e8, i16* bitcast (i32* @global_var_1001c484.323 to i16*), align 4
  store i32 268470512, i32* @lr, align 4
  %v0_100088ec = call i32 @function_1000a05c()
  store i32 %v0_100088ec, i32* %r28.global-to-local, align 4
  store i32 268470532, i32* @lr, align 4
  %v4_10008900 = call i32 @function_100089cc(i32 ptrtoint ([24 x i8]* @global_var_1000bdd0.324 to i32), i32 23, i32 23)
  %v0_10008908 = load i32, i32* %r21.global-to-local, align 4
  %v1_10008908 = trunc i32 %v0_10008908 to i16
  store i16 %v1_10008908, i16* bitcast (i32* @global_var_1001c48c.325 to i16*), align 4
  %v0_1000890c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000890c, i32* @global_var_1001c488.326, align 4
  ret i32 %v4_10008900

; uselistorder directives
  uselistorder i32 21, { 0, 1, 6, 7, 8, 2, 3, 4, 5, 9, 10, 11, 12 }
  uselistorder i32 (i32, i32, i32)* @function_100089cc, { 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_10008948(i8* %arg1) local_unnamed_addr {
dec_label_pc_10008948:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_10008948 = load i8, i8* %arg1, align 1
  %v3_10008954 = icmp eq i8 %v3_10008948, 0
  %v0_10008958 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10008954, i32 %v0_10008958)
  br label %dec_label_pc_1000895c

dec_label_pc_1000895c:                            ; preds = %dec_label_pc_1000895c, %dec_label_pc_10008948
  %v0_1000895c = phi i32 [ %v1_1000895c, %dec_label_pc_1000895c ], [ 0, %dec_label_pc_10008948 ]
  %v1_1000895c = add i32 %v0_1000895c, 1
  %v2_10008960 = add i32 %v1_1000895c, %tmp
  %v3_10008960 = inttoptr i32 %v2_10008960 to i8*
  %v4_10008960 = load i8, i8* %v3_10008960, align 1
  %v3_10008964 = icmp eq i8 %v4_10008960, 0
  br i1 %v3_10008964, label %dec_label_pc_1000896c, label %dec_label_pc_1000895c

dec_label_pc_1000896c:                            ; preds = %dec_label_pc_1000895c
  ret i32 %v1_1000895c
}

define i32 @function_10008970(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008970:
  %ctr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_10008970 = load i8, i8* %arg1, align 1
  %v3_10008974 = icmp eq i8 %v2_10008970, 0
  br i1 %v3_10008974, label %dec_label_pc_100089c0, label %dec_label_pc_1000897c

dec_label_pc_1000897c:                            ; preds = %dec_label_pc_10008970
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008980

dec_label_pc_10008980:                            ; preds = %dec_label_pc_10008980, %dec_label_pc_1000897c
  %v0_10008980 = phi i32 [ %v1_10008980, %dec_label_pc_10008980 ], [ 0, %dec_label_pc_1000897c ]
  %v1_10008980 = add i32 %v0_10008980, 1
  store i32 %v1_10008980, i32* %r9.global-to-local, align 4
  %v2_10008984 = add i32 %v1_10008980, %tmp
  %v3_10008984 = inttoptr i32 %v2_10008984 to i8*
  %v4_10008984 = load i8, i8* %v3_10008984, align 1
  %v3_10008988 = icmp eq i8 %v4_10008984, 0
  br i1 %v3_10008988, label %dec_label_pc_10008990, label %dec_label_pc_10008980

dec_label_pc_10008990:                            ; preds = %dec_label_pc_10008980
  %v3_10008990 = icmp eq i32 %v1_10008980, -1
  br i1 %v3_10008990, label %dec_label_pc_100089b8, label %dec_label_pc_10008998

dec_label_pc_10008998:                            ; preds = %dec_label_pc_10008990
  %phitmp = add i32 %v0_10008980, 2
  br label %dec_label_pc_1000899c

dec_label_pc_1000899c:                            ; preds = %dec_label_pc_100089c0, %dec_label_pc_10008998
  %v0_1000899c = phi i32 [ 1, %dec_label_pc_100089c0 ], [ %phitmp, %dec_label_pc_10008998 ]
  store i32 %v0_1000899c, i32* %ctr.global-to-local, align 4
  %v2_100089ac.pre = load i32, i32* @r3, align 4
  %v2_100089a48 = load i8, i8* %arg1, align 1
  %v1_100089a810 = add i32 %tmp, 1
  store i32 %v1_100089a810, i32* %r4.global-to-local, align 4
  %v3_100089ac11 = inttoptr i32 %v2_100089ac.pre to i8*
  store i8 %v2_100089a48, i8* %v3_100089ac11, align 1
  %v0_100089b012 = load i32, i32* @r3, align 4
  %v1_100089b013 = add i32 %v0_100089b012, 1
  store i32 %v1_100089b013, i32* %r3.global-to-local, align 4
  %v0_100089b414 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100089b415 = add i32 %v0_100089b414, -1
  store i32 %v1_100089b415, i32* %ctr.global-to-local, align 4
  %v2_100089b416 = icmp eq i32 %v1_100089b415, 0
  br i1 %v2_100089b416, label %dec_label_pc_100089b8.loopexit, label %dec_label_pc_100089a4.dec_label_pc_100089a4_crit_edge

dec_label_pc_100089a4.dec_label_pc_100089a4_crit_edge: ; preds = %dec_label_pc_1000899c, %dec_label_pc_100089a4.dec_label_pc_100089a4_crit_edge
  %v1_100089b017 = phi i32 [ %v1_100089b0, %dec_label_pc_100089a4.dec_label_pc_100089a4_crit_edge ], [ %v1_100089b013, %dec_label_pc_1000899c ]
  %v0_100089a4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_100089a4 = inttoptr i32 %v0_100089a4.pre to i8*
  %v2_100089a4 = load i8, i8* %v1_100089a4, align 1
  %v1_100089a8 = add i32 %v0_100089a4.pre, 1
  store i32 %v1_100089a8, i32* %r4.global-to-local, align 4
  %v3_100089ac = inttoptr i32 %v1_100089b017 to i8*
  store i8 %v2_100089a4, i8* %v3_100089ac, align 1
  %v0_100089b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_100089b0 = add i32 %v0_100089b0, 1
  store i32 %v1_100089b0, i32* %r3.global-to-local, align 4
  %v0_100089b4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100089b4 = add i32 %v0_100089b4, -1
  store i32 %v1_100089b4, i32* %ctr.global-to-local, align 4
  %v2_100089b4 = icmp eq i32 %v1_100089b4, 0
  br i1 %v2_100089b4, label %dec_label_pc_100089b8.loopexit, label %dec_label_pc_100089a4.dec_label_pc_100089a4_crit_edge

dec_label_pc_100089b8.loopexit:                   ; preds = %dec_label_pc_100089a4.dec_label_pc_100089a4_crit_edge, %dec_label_pc_1000899c
  %v0_100089b8.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100089b8

dec_label_pc_100089b8:                            ; preds = %dec_label_pc_100089b8.loopexit, %dec_label_pc_10008990
  %v0_100089b8 = phi i32 [ %v0_100089b8.pre, %dec_label_pc_100089b8.loopexit ], [ -1, %dec_label_pc_10008990 ]
  store i32 %v0_100089b8, i32* %r3.global-to-local, align 4
  ret i32 %v0_100089b8

dec_label_pc_100089c0:                            ; preds = %dec_label_pc_10008970
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000899c

; uselistorder directives
  uselistorder i32 %v0_100089b8, { 1, 0 }
  uselistorder i32 %v1_100089b4, { 1, 0 }
  uselistorder i32 %v1_100089b0, { 1, 0 }
  uselistorder i32 %v1_10008980, { 0, 1, 3, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder label %dec_label_pc_100089a4.dec_label_pc_100089a4_crit_edge, { 1, 0 }
}

define i32 @function_100089cc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100089cc:
  %ctr.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_100089cc = icmp eq i32 %arg3, 0
  store i32 %arg3, i32* %ctr.global-to-local, align 4
  %v0_100089d4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_100089cc, i32 %v0_100089d4)
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100089dc

dec_label_pc_100089dc:                            ; preds = %dec_label_pc_100089dc, %dec_label_pc_100089cc
  %v0_100089dc = phi i32 [ %v1_100089e4, %dec_label_pc_100089dc ], [ 0, %dec_label_pc_100089cc ]
  %v2_100089dc = add i32 %v0_100089dc, %arg2
  %v3_100089dc = inttoptr i32 %v2_100089dc to i8*
  %v4_100089dc = load i8, i8* %v3_100089dc, align 1
  %v4_100089e0 = add i32 %v0_100089dc, %arg1
  %v5_100089e0 = inttoptr i32 %v4_100089e0 to i8*
  store i8 %v4_100089dc, i8* %v5_100089e0, align 1
  %v0_100089e4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100089e4 = add i32 %v0_100089e4, 1
  store i32 %v1_100089e4, i32* %r9.global-to-local, align 4
  %v0_100089e8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100089e8 = add i32 %v0_100089e8, -1
  store i32 %v1_100089e8, i32* %ctr.global-to-local, align 4
  %v2_100089e8 = icmp eq i32 %v1_100089e8, 0
  br i1 %v2_100089e8, label %dec_label_pc_100089ec, label %dec_label_pc_100089dc

dec_label_pc_100089ec:                            ; preds = %dec_label_pc_100089dc
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_100089e8, { 1, 0 }
  uselistorder i32 %v1_100089e4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_100089f0() local_unnamed_addr {
dec_label_pc_100089f0:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_100089f0 = load i32, i32* @r4, align 4
  store i32 %v0_100089f0, i32* %r0.global-to-local, align 4
  %v3_100089f0 = icmp eq i32 %v0_100089f0, 0
  store i32 %v0_100089f0, i32* %ctr.global-to-local, align 4
  %v0_100089f8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_100089f0, i32 %v0_100089f8)
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10008a043 = load i32, i32* @r3, align 4
  %v5_10008a044 = inttoptr i32 %v2_10008a043 to i8*
  store i8 0, i8* %v5_10008a044, align 1
  %v0_10008a085 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008a086 = add i32 %v0_10008a085, 1
  store i32 %v1_10008a086, i32* %r9.global-to-local, align 4
  %v0_10008a0c7 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008a0c8 = add i32 %v0_10008a0c7, -1
  store i32 %v1_10008a0c8, i32* %ctr.global-to-local, align 4
  %v2_10008a0c9 = icmp eq i32 %v1_10008a0c8, 0
  br i1 %v2_10008a0c9, label %dec_label_pc_10008a10, label %dec_label_pc_10008a04.dec_label_pc_10008a04_crit_edge

dec_label_pc_10008a04.dec_label_pc_10008a04_crit_edge: ; preds = %dec_label_pc_100089f0, %dec_label_pc_10008a04.dec_label_pc_10008a04_crit_edge
  %v1_10008a0810 = phi i32 [ %v1_10008a08, %dec_label_pc_10008a04.dec_label_pc_10008a04_crit_edge ], [ %v1_10008a086, %dec_label_pc_100089f0 ]
  %v0_10008a04.pre = load i32, i32* %r0.global-to-local, align 4
  %extract.t = trunc i32 %v0_10008a04.pre to i8
  %v2_10008a04 = load i32, i32* @r3, align 4
  %v4_10008a04 = add i32 %v2_10008a04, %v1_10008a0810
  %v5_10008a04 = inttoptr i32 %v4_10008a04 to i8*
  store i8 %extract.t, i8* %v5_10008a04, align 1
  %v0_10008a08 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008a08 = add i32 %v0_10008a08, 1
  store i32 %v1_10008a08, i32* %r9.global-to-local, align 4
  %v0_10008a0c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008a0c = add i32 %v0_10008a0c, -1
  store i32 %v1_10008a0c, i32* %ctr.global-to-local, align 4
  %v2_10008a0c = icmp eq i32 %v1_10008a0c, 0
  br i1 %v2_10008a0c, label %dec_label_pc_10008a10, label %dec_label_pc_10008a04.dec_label_pc_10008a04_crit_edge

dec_label_pc_10008a10:                            ; preds = %dec_label_pc_10008a04.dec_label_pc_10008a04_crit_edge, %dec_label_pc_100089f0
  %v0_10008a10 = load i32, i32* @r3, align 4
  ret i32 %v0_10008a10

; uselistorder directives
  uselistorder i32 %v1_10008a0c, { 1, 0 }
  uselistorder i32 %v1_10008a08, { 1, 0 }
  uselistorder i32 %v0_100089f0, { 0, 2, 1 }
  uselistorder i32* %r9.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder label %dec_label_pc_10008a04.dec_label_pc_10008a04_crit_edge, { 1, 0 }
}

define i32 @function_10008a14(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10008a14:
  %v3_10008a14 = icmp sgt i32 %arg4, %arg2
  br i1 %v3_10008a14, label %dec_label_pc_10008a20, label %dec_label_pc_10008a28

dec_label_pc_10008a20:                            ; preds = %dec_label_pc_10008a44, %dec_label_pc_10008a14, %dec_label_pc_10008a28
  ret i32 -1

dec_label_pc_10008a28:                            ; preds = %dec_label_pc_10008a14
  %tmp = icmp slt i32 %arg2, 1
  br i1 %tmp, label %dec_label_pc_10008a20, label %dec_label_pc_10008a30

dec_label_pc_10008a30:                            ; preds = %dec_label_pc_10008a28
  br label %dec_label_pc_10008a4c

dec_label_pc_10008a40:                            ; preds = %dec_label_pc_10008a4c
  br label %dec_label_pc_10008a44

dec_label_pc_10008a44:                            ; preds = %dec_label_pc_10008a64, %dec_label_pc_10008a40
  %v0_10008a4c1 = phi i32 [ %v1_10008a50, %dec_label_pc_10008a64 ], [ 0, %dec_label_pc_10008a40 ]
  %v1_10008a44 = add i32 %v0_10008a68, 1
  %v1_10008a48 = add i32 %v0_10008a48, -1
  %v2_10008a48 = icmp eq i32 %v1_10008a48, 0
  br i1 %v2_10008a48, label %dec_label_pc_10008a20, label %dec_label_pc_10008a4c

dec_label_pc_10008a4c:                            ; preds = %dec_label_pc_10008a44, %dec_label_pc_10008a30
  %v0_10008a48 = phi i32 [ %v1_10008a48, %dec_label_pc_10008a44 ], [ %arg2, %dec_label_pc_10008a30 ]
  %v0_10008a68 = phi i32 [ %v1_10008a44, %dec_label_pc_10008a44 ], [ 0, %dec_label_pc_10008a30 ]
  %v0_10008a4c = phi i32 [ %v0_10008a4c1, %dec_label_pc_10008a44 ], [ 0, %dec_label_pc_10008a30 ]
  %v2_10008a4c = add i32 %v0_10008a4c, %arg3
  %v3_10008a4c = inttoptr i32 %v2_10008a4c to i8*
  %v4_10008a4c = load i8, i8* %v3_10008a4c, align 1
  %v1_10008a50 = add i32 %v0_10008a4c, 1
  %v2_10008a54 = add i32 %v0_10008a68, %arg1
  %v3_10008a54 = inttoptr i32 %v2_10008a54 to i8*
  %v4_10008a54 = load i8, i8* %v3_10008a54, align 1
  %v4_10008a5c = icmp eq i8 %v4_10008a54, %v4_10008a4c
  br i1 %v4_10008a5c, label %dec_label_pc_10008a64, label %dec_label_pc_10008a40

dec_label_pc_10008a64:                            ; preds = %dec_label_pc_10008a4c
  %v4_10008a58 = icmp eq i32 %v1_10008a50, %arg4
  br i1 %v4_10008a58, label %dec_label_pc_10008a68, label %dec_label_pc_10008a44

dec_label_pc_10008a68:                            ; preds = %dec_label_pc_10008a64
  %v1_10008a68 = add i32 %v0_10008a68, 1
  ret i32 %v1_10008a68

; uselistorder directives
  uselistorder i32 %v0_10008a4c, { 1, 0 }
  uselistorder label %dec_label_pc_10008a20, { 0, 2, 1 }
}

define i32 @function_10008a70(i32 %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %r5.global-to-local = alloca i32, align 4
  %v0_10008a70.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10008a70

dec_label_pc_10008a70:                            ; preds = %dec_label_pc_10008a8c, %dec_label_pc_10008a70, %bb
  %v0_10008a70 = phi i32 [ %v0_10008a70.pre, %bb ], [ %v1_10008a74, %dec_label_pc_10008a70 ], [ %v1_10008a74, %dec_label_pc_10008a8c ]
  %v1_10008a70 = inttoptr i32 %v0_10008a70 to i8*
  %v2_10008a70 = load i8, i8* %v1_10008a70, align 1
  %v1_10008a74 = add i32 %v0_10008a70, 1
  %v3_10008a80 = icmp eq i8 %v2_10008a70, 32
  br i1 %v3_10008a80, label %dec_label_pc_10008a70, label %dec_label_pc_10008a8c

dec_label_pc_10008a8c:                            ; preds = %dec_label_pc_10008a70
  %v2_10008a70.off = add i8 %v2_10008a70, -9
  %tmp = icmp ult i8 %v2_10008a70.off, 2
  br i1 %tmp, label %dec_label_pc_10008a70, label %dec_label_pc_10008a98

dec_label_pc_10008a98:                            ; preds = %dec_label_pc_10008a8c
  %v3_10008a98 = icmp eq i8 %v2_10008a70, 45
  br i1 %v3_10008a98, label %dec_label_pc_10008b44, label %dec_label_pc_10008aa0

dec_label_pc_10008aa0:                            ; preds = %dec_label_pc_10008a98
  %v3_10008aa0 = icmp eq i8 %v2_10008a70, 43
  br i1 %v3_10008aa0, label %dec_label_pc_10008b9c, label %dec_label_pc_10008aa8

dec_label_pc_10008aa8:                            ; preds = %dec_label_pc_10008aa0, %dec_label_pc_10008b9c
  %v0_10008b3826 = phi i32 [ %v1_10008a74, %dec_label_pc_10008aa0 ], [ %v1_10008ba0, %dec_label_pc_10008b9c ]
  %v0_10008ac85.in = phi i8 [ %v2_10008a70, %dec_label_pc_10008aa0 ], [ %v2_10008b9c, %dec_label_pc_10008b9c ]
  br label %dec_label_pc_10008ab4

dec_label_pc_10008ab4:                            ; preds = %dec_label_pc_10008b44, %dec_label_pc_10008aa8
  %v0_10008b3825 = phi i32 [ %v1_10008b4c, %dec_label_pc_10008b44 ], [ %v0_10008b3826, %dec_label_pc_10008aa8 ]
  %v0_10008ac84.in = phi i8 [ %v2_10008b44, %dec_label_pc_10008b44 ], [ %v0_10008ac85.in, %dec_label_pc_10008aa8 ]
  %v0_10008b8c = phi i32 [ 1, %dec_label_pc_10008b44 ], [ 0, %dec_label_pc_10008aa8 ]
  %v1_10008ac4 = phi i32 [ -2147483648, %dec_label_pc_10008b44 ], [ 2147483647, %dec_label_pc_10008aa8 ]
  %v2_10008ab4 = udiv i32 %v1_10008ac4, %arg1
  store i32 0, i32* %r5.global-to-local, align 4
  %v2_10008ac0 = mul i32 %v2_10008ab4, %arg1
  %v2_10008ac4 = sub i32 %v1_10008ac4, %v2_10008ac0
  br label %dec_label_pc_10008ac8

dec_label_pc_10008ac8:                            ; preds = %dec_label_pc_10008b38, %dec_label_pc_10008ab4
  %v0_10008b38 = phi i32 [ %v1_10008b3c, %dec_label_pc_10008b38 ], [ %v0_10008b3825, %dec_label_pc_10008ab4 ]
  %v0_10008b2c = phi i32 [ %v0_10008b2417, %dec_label_pc_10008b38 ], [ 0, %dec_label_pc_10008ab4 ]
  %v0_10008b1c = phi i32 [ %v0_10008b7c11, %dec_label_pc_10008b38 ], [ 0, %dec_label_pc_10008ab4 ]
  %v0_10008b14 = phi i32 [ %v0_10008b709, %dec_label_pc_10008b38 ], [ 0, %dec_label_pc_10008ab4 ]
  %v1_10008b08.in = phi i8 [ %v2_10008b38, %dec_label_pc_10008b38 ], [ %v0_10008ac84.in, %dec_label_pc_10008ab4 ]
  %v1_10008b08 = zext i8 %v1_10008b08.in to i32
  %v1_10008acc = add nsw i32 %v1_10008b08, -48
  %fold = add nuw nsw i32 %v1_10008b08, 208
  %v1_10008ad4 = urem i32 %fold, 256
  %tmp27 = icmp ult i32 %v1_10008ad4, 10
  br i1 %tmp27, label %dec_label_pc_10008b0c, label %dec_label_pc_10008ae0

dec_label_pc_10008ae0:                            ; preds = %dec_label_pc_10008ac8
  %v1_10008ae0 = add nuw nsw i32 %v1_10008b08, 191
  %v1_10008ae4 = urem i32 %v1_10008ae0, 256
  %tmp28 = icmp ult i32 %v1_10008ae4, 26
  br i1 %tmp28, label %dec_label_pc_10008b08, label %dec_label_pc_10008af4

dec_label_pc_10008af4:                            ; preds = %dec_label_pc_10008ae0
  %v1_10008af4 = add nuw nsw i32 %v1_10008b08, 159
  %v1_10008af8 = urem i32 %v1_10008af4, 256
  %v2_10008afc = icmp ugt i32 %v1_10008af8, 25
  br i1 %v2_10008afc, label %dec_label_pc_10008b70, label %dec_label_pc_10008b04

dec_label_pc_10008b04:                            ; preds = %dec_label_pc_10008af4
  br label %dec_label_pc_10008b08

dec_label_pc_10008b08:                            ; preds = %dec_label_pc_10008ae0, %dec_label_pc_10008b04
  %v0_10008b08 = phi i32 [ 55, %dec_label_pc_10008ae0 ], [ 87, %dec_label_pc_10008b04 ]
  %v2_10008b08 = sub nsw i32 %v1_10008b08, %v0_10008b08
  br label %dec_label_pc_10008b0c

dec_label_pc_10008b0c:                            ; preds = %dec_label_pc_10008ac8, %dec_label_pc_10008b08
  %v1_10008b34 = phi i32 [ %v1_10008acc, %dec_label_pc_10008ac8 ], [ %v2_10008b08, %dec_label_pc_10008b08 ]
  %v2_10008b0c = icmp slt i32 %v1_10008b34, %arg1
  br i1 %v2_10008b0c, label %dec_label_pc_10008b14, label %dec_label_pc_10008b70

dec_label_pc_10008b14:                            ; preds = %dec_label_pc_10008b0c
  %v1_10008b14 = icmp slt i32 %v0_10008b14, 0
  br i1 %v1_10008b14, label %dec_label_pc_10008b58, label %dec_label_pc_10008b1c

dec_label_pc_10008b1c:                            ; preds = %dec_label_pc_10008b14
  %v3_10008b1c = icmp ugt i32 %v0_10008b1c, %v2_10008ab4
  br i1 %v3_10008b1c, label %dec_label_pc_10008b58, label %dec_label_pc_10008b24

dec_label_pc_10008b24:                            ; preds = %dec_label_pc_10008b1c
  %v4_10008b24 = icmp eq i32 %v0_10008b2c, %v2_10008ab4
  br i1 %v4_10008b24, label %dec_label_pc_10008b60, label %dec_label_pc_10008b2c

dec_label_pc_10008b2c:                            ; preds = %dec_label_pc_10008b60, %dec_label_pc_10008b24
  %v2_10008b2c = mul i32 %v0_10008b2c, %arg1
  %v2_10008b34 = add i32 %v1_10008b34, %v2_10008b2c
  store i32 %v2_10008b34, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10008b38

dec_label_pc_10008b38:                            ; preds = %dec_label_pc_10008b60, %dec_label_pc_10008b58, %dec_label_pc_10008b2c
  %v0_10008b2417 = phi i32 [ %v2_10008ab4, %dec_label_pc_10008b60 ], [ %v0_10008b2c, %dec_label_pc_10008b58 ], [ %v2_10008b34, %dec_label_pc_10008b2c ]
  %v0_10008b7c11 = phi i32 [ %v2_10008ab4, %dec_label_pc_10008b60 ], [ %v0_10008b1c, %dec_label_pc_10008b58 ], [ %v2_10008b34, %dec_label_pc_10008b2c ]
  %v0_10008b709 = phi i32 [ -1, %dec_label_pc_10008b60 ], [ -1, %dec_label_pc_10008b58 ], [ 1, %dec_label_pc_10008b2c ]
  %v1_10008b38 = inttoptr i32 %v0_10008b38 to i8*
  %v2_10008b38 = load i8, i8* %v1_10008b38, align 1
  %v1_10008b3c = add i32 %v0_10008b38, 1
  br label %dec_label_pc_10008ac8

dec_label_pc_10008b44:                            ; preds = %dec_label_pc_10008a98
  %v1_10008b44 = inttoptr i32 %v1_10008a74 to i8*
  %v2_10008b44 = load i8, i8* %v1_10008b44, align 1
  %v1_10008b4c = add i32 %v0_10008a70, 2
  br label %dec_label_pc_10008ab4

dec_label_pc_10008b58:                            ; preds = %dec_label_pc_10008b1c, %dec_label_pc_10008b14
  br label %dec_label_pc_10008b38

dec_label_pc_10008b60:                            ; preds = %dec_label_pc_10008b24
  %v3_10008b60 = icmp sgt i32 %v1_10008b34, %v2_10008ac4
  br i1 %v3_10008b60, label %dec_label_pc_10008b38, label %dec_label_pc_10008b2c

dec_label_pc_10008b70:                            ; preds = %dec_label_pc_10008b0c, %dec_label_pc_10008af4
  %v1_10008b70 = icmp slt i32 %v0_10008b14, 0
  br i1 %v1_10008b70, label %dec_label_pc_10008b8c, label %dec_label_pc_10008b78

dec_label_pc_10008b78:                            ; preds = %dec_label_pc_10008b70
  %v3_10008b78 = icmp eq i32 %v0_10008b8c, 0
  %v0_10008b80 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10008b78, i32 %v0_10008b80)
  %v0_10008b84 = load i32, i32* %r5.global-to-local, align 4
  %v1_10008b84 = sub i32 0, %v0_10008b84
  ret i32 %v1_10008b84

dec_label_pc_10008b8c:                            ; preds = %dec_label_pc_10008b70
  %v1_10008b8c = xor i32 %v0_10008b8c, 1
  %v2_10008b94 = sub nuw i32 -2147483648, %v1_10008b8c
  ret i32 %v2_10008b94

dec_label_pc_10008b9c:                            ; preds = %dec_label_pc_10008aa0
  %v1_10008b9c = inttoptr i32 %v1_10008a74 to i8*
  %v2_10008b9c = load i8, i8* %v1_10008b9c, align 1
  %v1_10008ba0 = add i32 %v0_10008a70, 2
  br label %dec_label_pc_10008aa8

; uselistorder directives
  uselistorder i32 %v2_10008b34, { 1, 0, 2 }
  uselistorder i32 %v1_10008b34, { 1, 0, 2 }
  uselistorder i32 %v1_10008b08, { 2, 4, 3, 0, 1 }
  uselistorder i32 %v0_10008b2c, { 2, 0, 1 }
  uselistorder i32 %v0_10008b38, { 1, 0 }
  uselistorder i32 %v2_10008ab4, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_10008a74, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_10008a70, { 1, 0, 3, 2 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32 208, { 1, 0, 2, 3 }
  uselistorder i32 -2147483648, { 1, 0 }
  uselistorder i8 32, { 10, 2, 3, 4, 0, 5, 6, 7, 1, 8, 11, 12, 13, 14, 15, 16, 9 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10008b0c, { 1, 0 }
  uselistorder label %dec_label_pc_10008b08, { 1, 0 }
  uselistorder label %dec_label_pc_10008aa8, { 1, 0 }
}

define i32 @function_10008ba8(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008ba8:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r27.global-to-local, align 4
  store i32 %arg2, i32* %r28.global-to-local, align 4
  store i32 %arg3, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  %v0_10008bd4 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  br label %dec_label_pc_10008bdc

dec_label_pc_10008bdc:                            ; preds = %dec_label_pc_10008c08.dec_label_pc_10008bdc_crit_edge, %dec_label_pc_10008ba8
  %v0_10008be0 = phi i32 [ %v0_10008be0.pre, %dec_label_pc_10008c08.dec_label_pc_10008bdc_crit_edge ], [ %arg3, %dec_label_pc_10008ba8 ]
  %v0_10008bdc = phi i32 [ %v1_10008bf4, %dec_label_pc_10008c08.dec_label_pc_10008bdc_crit_edge ], [ %tmp, %dec_label_pc_10008ba8 ]
  store i32 1, i32* @r5, align 4
  store i32 268471276, i32* @lr, align 4
  %v4_10008be8 = call i32 @function_10009340(i32 %v0_10008be0, i32 %v0_10008bdc, i32 1)
  %v0_10008bec = load i32, i32* @r31, align 4
  %v3_10008bf0 = icmp eq i32 %v4_10008be8, 1
  %v1_10008bf4 = add i32 %v0_10008bec, 1
  store i32 %v1_10008bf4, i32* @r31, align 4
  %v0_10008bfc = load i32, i32* %r30.global-to-local, align 4
  br i1 %v3_10008bf0, label %dec_label_pc_10008bfc, label %dec_label_pc_10008c14

dec_label_pc_10008bfc:                            ; preds = %dec_label_pc_10008bdc
  %v1_10008bfc = add i32 %v0_10008bfc, 1
  store i32 %v1_10008bfc, i32* %r30.global-to-local, align 4
  %v0_10008c00 = load i32, i32* %r28.global-to-local, align 4
  %v3_10008c00 = icmp sgt i32 %v0_10008c00, %v1_10008bfc
  br i1 %v3_10008c00, label %dec_label_pc_10008c08, label %dec_label_pc_10008c14

dec_label_pc_10008c08:                            ; preds = %dec_label_pc_10008bfc
  %v1_10008c08 = inttoptr i32 %v0_10008bec to i8*
  %v2_10008c08 = load i8, i8* %v1_10008c08, align 1
  %v3_10008c0c = icmp eq i8 %v2_10008c08, 10
  br i1 %v3_10008c0c, label %dec_label_pc_10008c14, label %dec_label_pc_10008c08.dec_label_pc_10008bdc_crit_edge

dec_label_pc_10008c08.dec_label_pc_10008bdc_crit_edge: ; preds = %dec_label_pc_10008c08
  %v0_10008be0.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10008bdc

dec_label_pc_10008c14:                            ; preds = %dec_label_pc_10008bdc, %dec_label_pc_10008c08, %dec_label_pc_10008bfc
  %v1_10008c1c = phi i32 [ %v1_10008bfc, %dec_label_pc_10008c08 ], [ %v1_10008bfc, %dec_label_pc_10008bfc ], [ %v0_10008bfc, %dec_label_pc_10008bdc ]
  %tmp12 = icmp slt i32 %v1_10008c1c, 0
  %v1_10008c14 = zext i1 %tmp12 to i32
  %v2_10008c14 = ashr i32 %v1_10008c1c, 31
  %v3_10008c14 = and i32 %v2_10008c14, -2
  %v4_10008c14 = or i32 %v3_10008c14, %v1_10008c14
  %v2_10008c1c = xor i32 %v4_10008c14, %v1_10008c1c
  %v2_10008c24 = sub i32 %v4_10008c14, %v2_10008c1c
  %tmp13 = icmp slt i32 %v2_10008c24, 0
  %v1_10008c2c = zext i1 %tmp13 to i32
  %v2_10008c2c = ashr i32 %v2_10008c24, 31
  %v3_10008c2c = and i32 %v2_10008c2c, -2
  %v4_10008c2c = or i32 %v3_10008c2c, %v1_10008c2c
  %v0_10008c34 = load i32, i32* %r27.global-to-local, align 4
  %v2_10008c34 = and i32 %v4_10008c2c, %v0_10008c34
  store i32 %v0_10008bd4, i32* @r31, align 4
  ret i32 %v2_10008c34

; uselistorder directives
  uselistorder i32 %v2_10008c24, { 1, 0 }
  uselistorder i32 %v4_10008c14, { 1, 0 }
  uselistorder i32 %v1_10008c1c, { 1, 2, 0 }
  uselistorder i32 %v1_10008bf4, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10009340, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_10008c14, { 1, 2, 0 }
}

define i32 @function_10008c4c(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008c4c:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v0_10008c64 = load i32, i32* @r31, align 4
  store i32 16, i32* %stack_var_-40, align 4
  %v0_10008c6c = call i32 @function_10009824()
  %v2_10008c78 = inttoptr i32 %v0_10008c6c to i32*
  store i32 0, i32* %v2_10008c78, align 4
  store i32 268471432, i32* @lr, align 4
  %v3_10008c84 = call i32 @function_10009e58(i32 2, i32 2, i32 0)
  store i32 %v3_10008c84, i32* @r3, align 4
  %v3_10008c8c = icmp eq i32 %v3_10008c84, -1
  store i32 %v3_10008c84, i32* @r31, align 4
  br i1 %v3_10008c8c, label %dec_label_pc_10008cdc, label %dec_label_pc_10008ca8

dec_label_pc_10008ca8:                            ; preds = %dec_label_pc_10008c4c
  %v2_10008c58 = ptrtoint i32* %stack_var_-36 to i32
  store i32 2, i32* %stack_var_-36, align 4
  store i32 268471488, i32* @lr, align 4
  %v0_10008cbc = call i32 @function_10009c58()
  %v2_10008cc4 = ptrtoint i32* %stack_var_-40 to i32
  %v0_10008cc8 = load i32, i32* @r31, align 4
  store i32 268471504, i32* @lr, align 4
  %v3_10008ccc = call i32 @function_10009c8c(i32 %v0_10008cc8, i32 %v2_10008c58, i32 %v2_10008cc4)
  store i32 268471512, i32* @lr, align 4
  %v0_10008cd4 = call i32 @function_10009108()
  br label %dec_label_pc_10008cdc

dec_label_pc_10008cdc:                            ; preds = %dec_label_pc_10008c4c, %dec_label_pc_10008ca8
  %v0_10008cdc = phi i32 [ 0, %dec_label_pc_10008c4c ], [ 134744072, %dec_label_pc_10008ca8 ]
  store i32 %v0_10008c64, i32* @r31, align 4
  ret i32 %v0_10008cdc

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 ()* @function_10009c58, { 10, 9, 7, 8, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10009e58, { 28, 26, 27, 24, 25, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 0, 8, 7, 1, 6, 3, 2, 5, 4 }
  uselistorder label %dec_label_pc_10008cdc, { 1, 0 }
}

define i32 @function_10008cf8(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008cf8:
  %tmp = inttoptr i32 %arg3 to i8*
  store i32 %arg3, i32* @r5, align 4
  %tmp16 = ptrtoint i8* %arg1 to i32
  %v3_10008cf8 = load i8, i8* %tmp, align 1
  %v3_10008d04 = icmp eq i8 %v3_10008cf8, 0
  br i1 %v3_10008d04, label %dec_label_pc_10008d1c, label %dec_label_pc_10008d0c

dec_label_pc_10008d0c:                            ; preds = %dec_label_pc_10008cf8, %dec_label_pc_10008d0c
  %v0_10008d0c = phi i32 [ %v1_10008d0c, %dec_label_pc_10008d0c ], [ 0, %dec_label_pc_10008cf8 ]
  %v1_10008d0c = add i32 %v0_10008d0c, 1
  %v3_10008d10 = add i32 %v1_10008d0c, %arg3
  %v4_10008d10 = inttoptr i32 %v3_10008d10 to i8*
  %v5_10008d10 = load i8, i8* %v4_10008d10, align 1
  %v3_10008d14 = icmp eq i8 %v5_10008d10, 0
  br i1 %v3_10008d14, label %dec_label_pc_10008d1c, label %dec_label_pc_10008d0c

dec_label_pc_10008d1c:                            ; preds = %dec_label_pc_10008d0c, %dec_label_pc_10008cf8
  %v0_10008d4c11 = phi i32 [ 0, %dec_label_pc_10008cf8 ], [ %v1_10008d0c, %dec_label_pc_10008d0c ]
  %v1_10008d1c = icmp slt i32 %arg2, 0
  %v1_10008d20 = add i32 %arg2, 1
  br i1 %v1_10008d1c, label %dec_label_pc_10008d98, label %dec_label_pc_10008d34

dec_label_pc_10008d34:                            ; preds = %dec_label_pc_10008d1c, %dec_label_pc_10008d98, %dec_label_pc_10008d8c
  %v2_10008d408 = phi i32 [ %v1_10008d44, %dec_label_pc_10008d8c ], [ 0, %dec_label_pc_10008d98 ], [ 0, %dec_label_pc_10008d1c ]
  %v0_10008d386 = phi i32 [ %v1_10008d3c, %dec_label_pc_10008d8c ], [ %tmp16, %dec_label_pc_10008d98 ], [ %tmp16, %dec_label_pc_10008d1c ]
  %v0_10008d34 = phi i32 [ %v0_10008d80, %dec_label_pc_10008d8c ], [ 1, %dec_label_pc_10008d98 ], [ %v1_10008d20, %dec_label_pc_10008d1c ]
  %v1_10008d34 = add i32 %v0_10008d34, -1
  %v2_10008d34 = icmp eq i32 %v1_10008d34, 0
  br i1 %v2_10008d34, label %dec_label_pc_10008d84, label %dec_label_pc_10008d38

dec_label_pc_10008d38:                            ; preds = %dec_label_pc_10008d34, %dec_label_pc_10008d7c
  %v2_10008d40 = phi i32 [ 0, %dec_label_pc_10008d7c ], [ %v2_10008d408, %dec_label_pc_10008d34 ]
  %v0_10008d38 = phi i32 [ %v1_10008d3c, %dec_label_pc_10008d7c ], [ %v0_10008d386, %dec_label_pc_10008d34 ]
  %v0_10008d80 = phi i32 [ %v1_10008d80, %dec_label_pc_10008d7c ], [ %v1_10008d34, %dec_label_pc_10008d34 ]
  %v1_10008d38 = inttoptr i32 %v0_10008d38 to i8*
  %v2_10008d38 = load i8, i8* %v1_10008d38, align 1
  %v3_10008d38 = zext i8 %v2_10008d38 to i32
  %v1_10008d3c = add i32 %v0_10008d38, 1
  %v3_10008d40 = add i32 %v2_10008d40, %arg3
  %v4_10008d40 = inttoptr i32 %v3_10008d40 to i8*
  %v5_10008d40 = load i8, i8* %v4_10008d40, align 1
  %v6_10008d40 = zext i8 %v5_10008d40 to i32
  %v1_10008d44 = add i32 %v2_10008d40, 1
  %v1_10008d48 = add nuw nsw i32 %v3_10008d38, 191
  %v1_10008d50 = urem i32 %v1_10008d48, 256
  %v2_10008d54 = icmp ugt i32 %v1_10008d50, 25
  %v1_10008d58 = add nuw nsw i32 %v6_10008d40, 191
  %v1_10008d5c = urem i32 %v1_10008d58, 256
  %v2_10008d60 = icmp ugt i32 %v1_10008d5c, 25
  br i1 %v2_10008d54, label %dec_label_pc_10008d6c, label %dec_label_pc_10008d68

dec_label_pc_10008d68:                            ; preds = %dec_label_pc_10008d38
  %v1_10008d68 = or i32 %v3_10008d38, 96
  br i1 %v2_10008d60, label %dec_label_pc_10008d74, label %dec_label_pc_10008d70

dec_label_pc_10008d6c:                            ; preds = %dec_label_pc_10008d38
  br i1 %v2_10008d60, label %dec_label_pc_10008d74, label %dec_label_pc_10008d70

dec_label_pc_10008d70:                            ; preds = %dec_label_pc_10008d68, %dec_label_pc_10008d6c
  %v1_10008d7414 = phi i32 [ %v1_10008d68, %dec_label_pc_10008d68 ], [ %v3_10008d38, %dec_label_pc_10008d6c ]
  %v1_10008d70 = or i32 %v6_10008d40, 96
  br label %dec_label_pc_10008d74

dec_label_pc_10008d74:                            ; preds = %dec_label_pc_10008d68, %dec_label_pc_10008d6c, %dec_label_pc_10008d70
  %v1_10008d74 = phi i32 [ %v1_10008d68, %dec_label_pc_10008d68 ], [ %v3_10008d38, %dec_label_pc_10008d6c ], [ %v1_10008d7414, %dec_label_pc_10008d70 ]
  %v0_10008d74 = phi i32 [ %v6_10008d40, %dec_label_pc_10008d68 ], [ %v6_10008d40, %dec_label_pc_10008d6c ], [ %v1_10008d70, %dec_label_pc_10008d70 ]
  %v4_10008d74 = icmp eq i32 %v0_10008d74, %v1_10008d74
  br i1 %v4_10008d74, label %dec_label_pc_10008d8c, label %dec_label_pc_10008d7c

dec_label_pc_10008d7c:                            ; preds = %dec_label_pc_10008d74
  %v1_10008d80 = add i32 %v0_10008d80, -1
  %v2_10008d80 = icmp eq i32 %v1_10008d80, 0
  br i1 %v2_10008d80, label %dec_label_pc_10008d84, label %dec_label_pc_10008d38

dec_label_pc_10008d84:                            ; preds = %dec_label_pc_10008d34, %dec_label_pc_10008d7c
  ret i32 -1

dec_label_pc_10008d8c:                            ; preds = %dec_label_pc_10008d74
  %v4_10008d4c.le = icmp eq i32 %v0_10008d4c11, %v1_10008d44
  br i1 %v4_10008d4c.le, label %dec_label_pc_10008d90, label %dec_label_pc_10008d34

dec_label_pc_10008d90:                            ; preds = %dec_label_pc_10008d8c
  %v2_10008d90 = sub i32 %v1_10008d3c, %tmp16
  ret i32 %v2_10008d90

dec_label_pc_10008d98:                            ; preds = %dec_label_pc_10008d1c
  br label %dec_label_pc_10008d34

; uselistorder directives
  uselistorder i32 %v1_10008d80, { 1, 0 }
  uselistorder i32 %v1_10008d68, { 1, 0 }
  uselistorder i1 %v2_10008d60, { 1, 0 }
  uselistorder i32 %v1_10008d44, { 1, 0 }
  uselistorder i32 %v3_10008d38, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10008d80, { 1, 0 }
  uselistorder i32 %v0_10008d38, { 1, 0 }
  uselistorder i32 %v2_10008d40, { 1, 0 }
  uselistorder i32 %tmp16, { 2, 0, 1 }
  uselistorder i32 25, { 7, 8, 11, 4, 9, 5, 10, 0, 1, 6, 2, 3 }
  uselistorder i32 191, { 1, 0, 2 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_10008d84, { 1, 0 }
  uselistorder label %dec_label_pc_10008d74, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10008d70, { 1, 0 }
  uselistorder label %dec_label_pc_10008d38, { 1, 0 }
  uselistorder label %dec_label_pc_10008d34, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10008d0c, { 1, 0 }
}

define i32 @function_10008da4(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008da4:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_10008da4 = load i8, i8* %arg1, align 1
  %v3_10008dac = icmp eq i8 %v2_10008da4, 0
  br i1 %v3_10008dac, label %dec_label_pc_10008dc4, label %dec_label_pc_10008db4

dec_label_pc_10008db4:                            ; preds = %dec_label_pc_10008da4, %dec_label_pc_10008db4
  %v0_10008db4 = phi i32 [ %v1_10008db4, %dec_label_pc_10008db4 ], [ 0, %dec_label_pc_10008da4 ]
  %v1_10008db4 = add i32 %v0_10008db4, 1
  %v2_10008db8 = add i32 %v1_10008db4, %tmp
  %v3_10008db8 = inttoptr i32 %v2_10008db8 to i8*
  %v4_10008db8 = load i8, i8* %v3_10008db8, align 1
  %v3_10008dbc = icmp eq i8 %v4_10008db8, 0
  br i1 %v3_10008dbc, label %dec_label_pc_10008dc4, label %dec_label_pc_10008db4

dec_label_pc_10008dc4:                            ; preds = %dec_label_pc_10008db4, %dec_label_pc_10008da4
  %v0_10008de4 = phi i32 [ 0, %dec_label_pc_10008da4 ], [ %v1_10008db4, %dec_label_pc_10008db4 ]
  %v1_10008dc4 = inttoptr i32 %arg2 to i8*
  %v2_10008dc4 = load i8, i8* %v1_10008dc4, align 1
  %v3_10008dcc = icmp eq i8 %v2_10008dc4, 0
  br i1 %v3_10008dcc, label %dec_label_pc_10008de4, label %dec_label_pc_10008dd4

dec_label_pc_10008dd4:                            ; preds = %dec_label_pc_10008dc4, %dec_label_pc_10008dd4
  %v0_10008dd4 = phi i32 [ %v1_10008dd4, %dec_label_pc_10008dd4 ], [ 0, %dec_label_pc_10008dc4 ]
  %v1_10008dd4 = add i32 %v0_10008dd4, 1
  %v2_10008dd8 = add i32 %v1_10008dd4, %arg2
  %v3_10008dd8 = inttoptr i32 %v2_10008dd8 to i8*
  %v4_10008dd8 = load i8, i8* %v3_10008dd8, align 1
  %v3_10008ddc = icmp eq i8 %v4_10008dd8, 0
  br i1 %v3_10008ddc, label %dec_label_pc_10008de4, label %dec_label_pc_10008dd4

dec_label_pc_10008de4:                            ; preds = %dec_label_pc_10008dd4, %dec_label_pc_10008dc4
  %v0_10008de8 = phi i32 [ 0, %dec_label_pc_10008dc4 ], [ %v1_10008dd4, %dec_label_pc_10008dd4 ]
  %v4_10008de4 = icmp eq i32 %v0_10008de4, %v0_10008de8
  br i1 %v4_10008de4, label %dec_label_pc_10008dfc, label %dec_label_pc_10008df4

dec_label_pc_10008df4:                            ; preds = %dec_label_pc_10008e00, %dec_label_pc_10008de4
  ret i32 0

dec_label_pc_10008dfc:                            ; preds = %dec_label_pc_10008de4
  %v2_10008dfc = icmp eq i32 %v0_10008de4, 0
  br i1 %v2_10008dfc, label %dec_label_pc_10008e1c, label %dec_label_pc_10008e00

dec_label_pc_10008e00:                            ; preds = %dec_label_pc_10008dfc, %dec_label_pc_10008e18
  %v0_10008e18 = phi i32 [ %v1_10008e18, %dec_label_pc_10008e18 ], [ %v0_10008de4, %dec_label_pc_10008dfc ]
  %v0_10008e08 = phi i32 [ %v1_10008e0c, %dec_label_pc_10008e18 ], [ %arg2, %dec_label_pc_10008dfc ]
  %v0_10008e00 = phi i32 [ %v1_10008e04, %dec_label_pc_10008e18 ], [ %tmp, %dec_label_pc_10008dfc ]
  %v1_10008e00 = inttoptr i32 %v0_10008e00 to i8*
  %v2_10008e00 = load i8, i8* %v1_10008e00, align 1
  %v1_10008e08 = inttoptr i32 %v0_10008e08 to i8*
  %v2_10008e08 = load i8, i8* %v1_10008e08, align 1
  %v4_10008e10 = icmp eq i8 %v2_10008e00, %v2_10008e08
  br i1 %v4_10008e10, label %dec_label_pc_10008e18, label %dec_label_pc_10008df4

dec_label_pc_10008e18:                            ; preds = %dec_label_pc_10008e00
  %v1_10008e0c = add i32 %v0_10008e08, 1
  %v1_10008e04 = add i32 %v0_10008e00, 1
  %v1_10008e18 = add i32 %v0_10008e18, -1
  %v2_10008e18 = icmp eq i32 %v1_10008e18, 0
  br i1 %v2_10008e18, label %dec_label_pc_10008e1c, label %dec_label_pc_10008e00

dec_label_pc_10008e1c:                            ; preds = %dec_label_pc_10008e18, %dec_label_pc_10008dfc
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_10008e18, { 1, 0 }
  uselistorder i32 %v0_10008e00, { 1, 0 }
  uselistorder i32 %v0_10008e08, { 1, 0 }
  uselistorder label %dec_label_pc_10008e00, { 1, 0 }
  uselistorder label %dec_label_pc_10008dd4, { 1, 0 }
  uselistorder label %dec_label_pc_10008db4, { 1, 0 }
}

define i32 @function_10008e24(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008e24:
  %cr6_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to i8*
  store i32 %arg3, i32* @r5, align 4
  %tmp17 = sext i8 %arg1 to i32
  store i32 %tmp17, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10008e24 = icmp eq i32 %arg3, 0
  %v4_10008e28 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10008e28, i32* %stack_var_-64, align 4
  %v5_10008e28 = ptrtoint i32* %stack_var_-64 to i32
  br i1 %v4_10008e24, label %dec_label_pc_10008e44, label %dec_label_pc_10008e30

dec_label_pc_10008e30:                            ; preds = %dec_label_pc_10008e24
  %v0_10008e30 = load i32, i32* %r3.global-to-local, align 4
  %v3_10008e30 = icmp eq i32 %v0_10008e30, 0
  store i1 %v3_10008e30, i1* %cr6_eq.global-to-local, align 1
  br i1 %v3_10008e30, label %dec_label_pc_10008e38, label %dec_label_pc_10008e50

dec_label_pc_10008e38:                            ; preds = %dec_label_pc_10008e30
  store i32 48, i32* %r0.global-to-local, align 4
  %v4_10008e3c = add i32 %arg3, 1
  %v5_10008e3c = inttoptr i32 %v4_10008e3c to i8*
  store i8 0, i8* %v5_10008e3c, align 1
  %v0_10008e40 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008e40 = trunc i32 %v0_10008e40 to i8
  store i8 %v1_10008e40, i8* %tmp, align 1
  br label %dec_label_pc_10008e44

dec_label_pc_10008e44:                            ; preds = %dec_label_pc_10008ed0, %dec_label_pc_10008e24, %dec_label_pc_10008e38
  store i32 %arg3, i32* %r3.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_10008e50:                            ; preds = %dec_label_pc_10008e30
  %v2_10008e30 = icmp sgt i32 %v0_10008e30, 0
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10008e50.not = icmp ne i32 %arg2, 10
  %brmerge = or i1 %v2_10008e30, %v3_10008e50.not
  br i1 %brmerge, label %dec_label_pc_10008e64, label %dec_label_pc_10008f18

dec_label_pc_10008e64:                            ; preds = %dec_label_pc_10008e50, %dec_label_pc_10008f18
  %v0_10008e682 = phi i32 [ %v0_10008e30, %dec_label_pc_10008e50 ], [ %v1_10008f18, %dec_label_pc_10008f18 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_10008e50 ], [ 1, %dec_label_pc_10008f18 ]
  store i32 %storemerge, i32* %r8.global-to-local, align 4
  store i32 32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008e68

dec_label_pc_10008e68:                            ; preds = %dec_label_pc_10008e94.dec_label_pc_10008e68_crit_edge, %dec_label_pc_10008e64
  %v1_10008e6c = phi i32 [ %v1_10008e6c.pre, %dec_label_pc_10008e94.dec_label_pc_10008e68_crit_edge ], [ 32, %dec_label_pc_10008e64 ]
  %v0_10008e6c = phi i32 [ %v0_10008e6c.pre, %dec_label_pc_10008e94.dec_label_pc_10008e68_crit_edge ], [ %v5_10008e28, %dec_label_pc_10008e64 ]
  %v1_10008e7c = phi i32 [ %v0_10008e68.pre, %dec_label_pc_10008e94.dec_label_pc_10008e68_crit_edge ], [ %v0_10008e682, %dec_label_pc_10008e64 ]
  %v2_10008e68 = udiv i32 %v1_10008e7c, %arg2
  %v2_10008e6c = add i32 %v0_10008e6c, %v1_10008e6c
  store i32 %v2_10008e6c, i32* %r11.global-to-local, align 4
  %v1_10008e70 = add i32 %v1_10008e6c, -1
  store i32 %v1_10008e70, i32* %r10.global-to-local, align 4
  %v2_10008e74 = mul i32 %v2_10008e68, %arg2
  %v3_10008e78 = icmp ult i32 %v1_10008e7c, %arg2
  store i1 %v3_10008e78, i1* %cr6_eq.global-to-local, align 1
  %v2_10008e7c = sub i32 %v1_10008e7c, %v2_10008e74
  store i32 %v2_10008e7c, i32* %r9.global-to-local, align 4
  store i32 %v2_10008e68, i32* %r3.global-to-local, align 4
  %tmp22 = icmp slt i32 %v2_10008e7c, 10
  %storemerge15.v = select i1 %tmp22, i32 48, i32 55
  %storemerge15 = add i32 %storemerge15.v, %v2_10008e7c
  %v0_10008e94.off0 = trunc i32 %storemerge15 to i8
  store i32 %storemerge15, i32* %r0.global-to-local, align 4
  %v3_10008e94 = add i32 %v2_10008e6c, 8
  %v4_10008e94 = inttoptr i32 %v3_10008e94 to i8*
  store i8 %v0_10008e94.off0, i8* %v4_10008e94, align 1
  %v0_10008e98 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_10008e98, label %dec_label_pc_10008e9c, label %dec_label_pc_10008e94.dec_label_pc_10008e68_crit_edge

dec_label_pc_10008e94.dec_label_pc_10008e68_crit_edge: ; preds = %dec_label_pc_10008e68
  %v0_10008e68.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_10008e6c.pre = load i32, i32* @r1, align 4
  %v1_10008e6c.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008e68

dec_label_pc_10008e9c:                            ; preds = %dec_label_pc_10008e68
  %v0_10008e9c = load i32, i32* %r8.global-to-local, align 4
  %v3_10008e9c = icmp eq i32 %v0_10008e9c, 0
  br i1 %v3_10008e9c, label %dec_label_pc_10008ea4, label %dec_label_pc_10008f04

dec_label_pc_10008ea4:                            ; preds = %dec_label_pc_10008e9c
  %v0_10008ea4 = load i32, i32* %r10.global-to-local, align 4
  %v1_10008ea4 = add i32 %v0_10008ea4, 1
  store i32 %v1_10008ea4, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008ea8

dec_label_pc_10008ea8:                            ; preds = %dec_label_pc_10008f04, %dec_label_pc_10008ea4
  %v1_10008eb0 = phi i32 [ %v1_10008eac.pre, %dec_label_pc_10008f04 ], [ %v1_10008ea4, %dec_label_pc_10008ea4 ]
  %v2_10008ea8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10008ea8, i32* %r9.global-to-local, align 4
  %v2_10008eac = add i32 %v1_10008eb0, %v2_10008ea8
  %v3_10008eac = inttoptr i32 %v2_10008eac to i8*
  %v4_10008eac = load i8, i8* %v3_10008eac, align 1
  %v5_10008eac = zext i8 %v4_10008eac to i32
  store i32 %v5_10008eac, i32* %r0.global-to-local, align 4
  store i32 %v2_10008eac, i32* %r9.global-to-local, align 4
  %v3_10008eb4 = icmp eq i8 %v4_10008eac, 0
  br i1 %v3_10008eb4, label %dec_label_pc_10008f2c, label %dec_label_pc_10008ebc

dec_label_pc_10008ebc:                            ; preds = %dec_label_pc_10008ea8
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008ec0

dec_label_pc_10008ec0:                            ; preds = %dec_label_pc_10008ec0, %dec_label_pc_10008ebc
  %v0_10008ec0 = phi i32 [ %v1_10008ec0, %dec_label_pc_10008ec0 ], [ 0, %dec_label_pc_10008ebc ]
  %v1_10008ec0 = add i32 %v0_10008ec0, 1
  store i32 %v1_10008ec0, i32* %r10.global-to-local, align 4
  %v2_10008ec4 = add i32 %v1_10008ec0, %v2_10008eac
  %v3_10008ec4 = inttoptr i32 %v2_10008ec4 to i8*
  %v4_10008ec4 = load i8, i8* %v3_10008ec4, align 1
  %v5_10008ec4 = zext i8 %v4_10008ec4 to i32
  store i32 %v5_10008ec4, i32* %r0.global-to-local, align 4
  %v3_10008ec8 = icmp eq i8 %v4_10008ec4, 0
  br i1 %v3_10008ec8, label %dec_label_pc_10008ed0, label %dec_label_pc_10008ec0

dec_label_pc_10008ed0:                            ; preds = %dec_label_pc_10008ec0
  %v3_10008ed0 = icmp eq i32 %v1_10008ec0, -1
  br i1 %v3_10008ed0, label %dec_label_pc_10008e44, label %dec_label_pc_10008ed8

dec_label_pc_10008ed8:                            ; preds = %dec_label_pc_10008ed0
  store i32 %arg3, i32* %r11.global-to-local, align 4
  %phitmp = add i32 %v0_10008ec0, 2
  br label %dec_label_pc_10008edc

dec_label_pc_10008edc:                            ; preds = %dec_label_pc_10008f2c, %dec_label_pc_10008ed8
  %v0_10008edc = phi i32 [ 1, %dec_label_pc_10008f2c ], [ %phitmp, %dec_label_pc_10008ed8 ]
  store i32 %v0_10008edc, i32* %r10.global-to-local, align 4
  store i32 %v0_10008edc, i32* %ctr.global-to-local, align 4
  %v2_10008ee424 = load i8, i8* %v3_10008eac, align 1
  %v3_10008ee425 = zext i8 %v2_10008ee424 to i32
  store i32 %v3_10008ee425, i32* %r0.global-to-local, align 4
  %v1_10008ee826 = add i32 %v2_10008eac, 1
  store i32 %v1_10008ee826, i32* %r9.global-to-local, align 4
  store i8 %v2_10008ee424, i8* %tmp, align 1
  %v0_10008ef028 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008ef029 = add i32 %v0_10008ef028, 1
  store i32 %v1_10008ef029, i32* %r11.global-to-local, align 4
  %v0_10008ef430 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008ef431 = add i32 %v0_10008ef430, -1
  store i32 %v1_10008ef431, i32* %ctr.global-to-local, align 4
  %v2_10008ef432 = icmp eq i32 %v1_10008ef431, 0
  br i1 %v2_10008ef432, label %dec_label_pc_10008ef8, label %dec_label_pc_10008ee4.dec_label_pc_10008ee4_crit_edge

dec_label_pc_10008ee4.dec_label_pc_10008ee4_crit_edge: ; preds = %dec_label_pc_10008edc, %dec_label_pc_10008ee4.dec_label_pc_10008ee4_crit_edge
  %v1_10008ef033 = phi i32 [ %v1_10008ef0, %dec_label_pc_10008ee4.dec_label_pc_10008ee4_crit_edge ], [ %v1_10008ef029, %dec_label_pc_10008edc ]
  %v0_10008ee4.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10008ee4 = inttoptr i32 %v0_10008ee4.pre to i8*
  %v2_10008ee4 = load i8, i8* %v1_10008ee4, align 1
  %v3_10008ee4 = zext i8 %v2_10008ee4 to i32
  store i32 %v3_10008ee4, i32* %r0.global-to-local, align 4
  %v1_10008ee8 = add i32 %v0_10008ee4.pre, 1
  store i32 %v1_10008ee8, i32* %r9.global-to-local, align 4
  %v3_10008eec = inttoptr i32 %v1_10008ef033 to i8*
  store i8 %v2_10008ee4, i8* %v3_10008eec, align 1
  %v0_10008ef0 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008ef0 = add i32 %v0_10008ef0, 1
  store i32 %v1_10008ef0, i32* %r11.global-to-local, align 4
  %v0_10008ef4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008ef4 = add i32 %v0_10008ef4, -1
  store i32 %v1_10008ef4, i32* %ctr.global-to-local, align 4
  %v2_10008ef4 = icmp eq i32 %v1_10008ef4, 0
  br i1 %v2_10008ef4, label %dec_label_pc_10008ef8, label %dec_label_pc_10008ee4.dec_label_pc_10008ee4_crit_edge

dec_label_pc_10008ef8:                            ; preds = %dec_label_pc_10008ee4.dec_label_pc_10008ee4_crit_edge, %dec_label_pc_10008edc
  store i32 %arg3, i32* %r3.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_10008f04:                            ; preds = %dec_label_pc_10008e9c
  %v0_10008f04.pre = load i32, i32* @r1, align 4
  %v1_10008f04.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_10008f04 = add i32 %v1_10008f04.pre, %v0_10008f04.pre
  store i32 %v2_10008f04, i32* %r9.global-to-local, align 4
  store i32 45, i32* %r0.global-to-local, align 4
  %v3_10008f0c = add i32 %v2_10008f04, 8
  %v4_10008f0c = inttoptr i32 %v3_10008f0c to i8*
  store i8 45, i8* %v4_10008f0c, align 1
  %v1_10008eac.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008ea8

dec_label_pc_10008f18:                            ; preds = %dec_label_pc_10008e50
  %v1_10008f18 = sub i32 0, %v0_10008e30
  store i32 %v1_10008f18, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008e64

dec_label_pc_10008f2c:                            ; preds = %dec_label_pc_10008ea8
  store i32 %arg3, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008edc

; uselistorder directives
  uselistorder i32 %v1_10008f18, { 1, 0 }
  uselistorder i32 %v1_10008ef4, { 1, 0 }
  uselistorder i32 %v1_10008ef0, { 1, 0 }
  uselistorder i32 %v0_10008edc, { 1, 0 }
  uselistorder i32 %v1_10008ec0, { 0, 1, 3, 2 }
  uselistorder i32 %v2_10008e68, { 1, 0 }
  uselistorder i32 %v1_10008e7c, { 1, 0, 2 }
  uselistorder i32 %v1_10008e6c, { 1, 0 }
  uselistorder i32 %v0_10008e30, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 5, 6, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 5, 6, 2, 3, 4 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 9, 8, 2, 3, 5, 4, 6, 7, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 8, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32 %arg3, { 1, 4, 5, 6, 2, 3, 0, 7, 9, 8 }
  uselistorder i32 %arg2, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_10008ee4.dec_label_pc_10008ee4_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10008e64, { 1, 0 }
  uselistorder label %dec_label_pc_10008e44, { 0, 2, 1 }
}

define i32 @function_10008f38(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008f38:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-32 = alloca i32, align 4
  %v4_10008f48 = icmp eq i32 %arg2, -2143521772
  %v2_10008f5c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10008f5c, i32* %stack_var_-32, align 4
  br i1 %v4_10008f48, label %dec_label_pc_10008fbc, label %dec_label_pc_10008f7c

dec_label_pc_10008f7c:                            ; preds = %dec_label_pc_10008f38
  %v3_10008f7c = icmp ugt i32 %arg2, -2143521772
  br i1 %v3_10008f7c, label %dec_label_pc_10008f94, label %dec_label_pc_10008f84

dec_label_pc_10008f84:                            ; preds = %dec_label_pc_10008f7c
  %v3_10008f88 = icmp eq i32 %arg2, 1077703699
  br i1 %v3_10008f88, label %dec_label_pc_10008fb0, label %dec_label_pc_10008fdc

dec_label_pc_10008f94:                            ; preds = %dec_label_pc_10008f7c
  %v1_10008f94 = xor i32 %arg2, -2143551488
  %v3_10008f98 = icmp eq i32 %v1_10008f94, 29717
  br i1 %v3_10008f98, label %dec_label_pc_10008fcc, label %dec_label_pc_10008fa0

dec_label_pc_10008fa0:                            ; preds = %dec_label_pc_10008f94
  %v3_10008fa4 = icmp eq i32 %v1_10008f94, 29718
  br i1 %v3_10008fa4, label %dec_label_pc_10008fd4, label %dec_label_pc_10008fdc

dec_label_pc_10008fb0:                            ; preds = %dec_label_pc_10008f84
  store i32 ptrtoint (i32* @global_var_10008fb8.328 to i32), i32* @lr, align 4
  %v2_10008fb4 = inttoptr i32 %arg3 to i32*
  %v3_10008fb4 = call i32 @function_100099bc(i32* %v2_10008fb4, i32 %arg1)
  br label %dec_label_pc_10008fc4

dec_label_pc_10008fbc:                            ; preds = %dec_label_pc_10008f38
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_10008fc0

dec_label_pc_10008fc0:                            ; preds = %dec_label_pc_10008fd4, %dec_label_pc_10008fcc, %dec_label_pc_10008fbc
  store i32 268472260, i32* @lr, align 4
  %v0_10008fc0 = call i32 @function_10009a58()
  br label %dec_label_pc_10008fc4

dec_label_pc_10008fc4:                            ; preds = %dec_label_pc_10008fb0, %dec_label_pc_10008fc0
  %storemerge = phi i32 [ %v0_10008fc0, %dec_label_pc_10008fc0 ], [ %v3_10008fb4, %dec_label_pc_10008fb0 ]
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009008

dec_label_pc_10008fcc:                            ; preds = %dec_label_pc_10008f94
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_10008fc0

dec_label_pc_10008fd4:                            ; preds = %dec_label_pc_10008fa0
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_10008fc0

dec_label_pc_10008fdc:                            ; preds = %dec_label_pc_10008fa0, %dec_label_pc_10008f84
  %v0_10008fec = call i32 @__asm_mfcr()
  %v1_10008ff0 = and i32 %v0_10008fec, 268435456
  %v3_10008ff0 = icmp eq i32 %v1_10008ff0, 0
  store i32 %v0_10008fec, i32* %r31.global-to-local, align 4
  br i1 %v3_10008ff0, label %dec_label_pc_10009008, label %dec_label_pc_10008ffc

dec_label_pc_10008ffc:                            ; preds = %dec_label_pc_10008fdc
  %v0_10008ffc = call i32 @function_10009824()
  %v0_10009000 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009000 = inttoptr i32 %v0_10008ffc to i32*
  store i32 %v0_10009000, i32* %v2_10009000, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009008

dec_label_pc_10009008:                            ; preds = %dec_label_pc_10008fdc, %dec_label_pc_10008fc4, %dec_label_pc_10008ffc
  %v0_1000900c = phi i32 [ %v0_10008fec, %dec_label_pc_10008fdc ], [ %storemerge, %dec_label_pc_10008fc4 ], [ -1, %dec_label_pc_10008ffc ]
  ret i32 %v0_1000900c

; uselistorder directives
  uselistorder i32 %arg2, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10009008, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008fc4, { 1, 0 }
}

define i32 @function_10009020(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009020:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_10009034 = load i32, i32* @r4, align 4
  %v1_10009034 = add i32 %v0_10009034, -12
  %v2_10009038 = icmp ugt i32 %v1_10009034, 2
  %v2_10009040 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10009040, i32* %stack_var_-32, align 4
  br i1 %v2_10009038, label %dec_label_pc_1000906c, label %dec_label_pc_1000905c

dec_label_pc_1000905c:                            ; preds = %dec_label_pc_10009020
  store i32 268472420, i32* @lr, align 4
  %v2_10009060 = call i32 @function_100090a4(i32 3)
  store i32 %v2_10009060, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000908c

dec_label_pc_1000906c:                            ; preds = %dec_label_pc_10009020
  %v0_10009070 = call i32 @__asm_mfcr()
  %v1_10009074 = and i32 %v0_10009070, 268435456
  %v3_10009074 = icmp eq i32 %v1_10009074, 0
  store i32 %v0_10009070, i32* %r31.global-to-local, align 4
  br i1 %v3_10009074, label %dec_label_pc_1000908c, label %dec_label_pc_10009080

dec_label_pc_10009080:                            ; preds = %dec_label_pc_1000906c
  %v0_10009080 = call i32 @function_10009824()
  %v0_10009084 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009084 = inttoptr i32 %v0_10009080 to i32*
  store i32 %v0_10009084, i32* %v2_10009084, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000908c

dec_label_pc_1000908c:                            ; preds = %dec_label_pc_1000906c, %dec_label_pc_1000905c, %dec_label_pc_10009080
  %v0_10009090 = phi i32 [ %v0_10009070, %dec_label_pc_1000906c ], [ %v2_10009060, %dec_label_pc_1000905c ], [ -1, %dec_label_pc_10009080 ]
  ret i32 %v0_10009090

; uselistorder directives
  uselistorder label %dec_label_pc_1000908c, { 2, 0, 1 }
}

define i32 @function_100090a4(i32 %arg1) local_unnamed_addr {
dec_label_pc_100090a4:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_100090bc = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_100090bc, i32* %stack_var_-32, align 4
  %v0_100090d8 = call i32 @__asm_mfcr()
  %v1_100090dc = and i32 %v0_100090d8, 268435456
  %v3_100090dc = icmp eq i32 %v1_100090dc, 0
  store i32 %v0_100090d8, i32* %r31.global-to-local, align 4
  br i1 %v3_100090dc, label %dec_label_pc_100090f4, label %dec_label_pc_100090e8

dec_label_pc_100090e8:                            ; preds = %dec_label_pc_100090a4
  %v0_100090e8 = call i32 @function_10009824()
  %v0_100090ec = load i32, i32* %r31.global-to-local, align 4
  %v2_100090ec = inttoptr i32 %v0_100090e8 to i32*
  store i32 %v0_100090ec, i32* %v2_100090ec, align 4
  br label %dec_label_pc_100090f4

dec_label_pc_100090f4:                            ; preds = %dec_label_pc_100090a4, %dec_label_pc_100090e8
  %v0_10009104 = phi i32 [ %v0_100090d8, %dec_label_pc_100090a4 ], [ -1, %dec_label_pc_100090e8 ]
  ret i32 %v0_10009104

; uselistorder directives
  uselistorder label %dec_label_pc_100090f4, { 1, 0 }
}

define i32 @function_10009108() local_unnamed_addr {
dec_label_pc_10009108:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009120 = call i32 @__asm_mfcr()
  %v1_10009124 = and i32 %v0_10009120, 268435456
  %v3_10009124 = icmp eq i32 %v1_10009124, 0
  store i32 %v0_10009120, i32* %r31.global-to-local, align 4
  br i1 %v3_10009124, label %dec_label_pc_1000913c, label %dec_label_pc_10009130

dec_label_pc_10009130:                            ; preds = %dec_label_pc_10009108
  %v0_10009130 = call i32 @function_10009824()
  %v0_10009134 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009134 = inttoptr i32 %v0_10009130 to i32*
  store i32 %v0_10009134, i32* %v2_10009134, align 4
  br label %dec_label_pc_1000913c

dec_label_pc_1000913c:                            ; preds = %dec_label_pc_10009108, %dec_label_pc_10009130
  %v0_1000914c = phi i32 [ %v0_10009120, %dec_label_pc_10009108 ], [ -1, %dec_label_pc_10009130 ]
  ret i32 %v0_1000914c

; uselistorder directives
  uselistorder label %dec_label_pc_1000913c, { 1, 0 }
}

define i32 @function_10009150() local_unnamed_addr {
dec_label_pc_10009150:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009168 = call i32 @__asm_mfcr()
  %v1_1000916c = and i32 %v0_10009168, 268435456
  %v3_1000916c = icmp eq i32 %v1_1000916c, 0
  store i32 %v0_10009168, i32* %r31.global-to-local, align 4
  br i1 %v3_1000916c, label %dec_label_pc_10009184, label %dec_label_pc_10009178

dec_label_pc_10009178:                            ; preds = %dec_label_pc_10009150
  %v0_10009178 = call i32 @function_10009824()
  %v0_1000917c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000917c = inttoptr i32 %v0_10009178 to i32*
  store i32 %v0_1000917c, i32* %v2_1000917c, align 4
  br label %dec_label_pc_10009184

dec_label_pc_10009184:                            ; preds = %dec_label_pc_10009150, %dec_label_pc_10009178
  %v0_10009194 = phi i32 [ %v0_10009168, %dec_label_pc_10009150 ], [ -1, %dec_label_pc_10009178 ]
  ret i32 %v0_10009194

; uselistorder directives
  uselistorder label %dec_label_pc_10009184, { 1, 0 }
}

define i32 @function_10009198() local_unnamed_addr {
dec_label_pc_10009198:
  %r31.global-to-local = alloca i32, align 4
  %v0_100091b0 = call i32 @__asm_mfcr()
  %v1_100091b4 = and i32 %v0_100091b0, 268435456
  %v3_100091b4 = icmp eq i32 %v1_100091b4, 0
  store i32 %v0_100091b0, i32* %r31.global-to-local, align 4
  br i1 %v3_100091b4, label %dec_label_pc_100091cc, label %dec_label_pc_100091c0

dec_label_pc_100091c0:                            ; preds = %dec_label_pc_10009198
  %v0_100091c0 = call i32 @function_10009824()
  %v0_100091c4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100091c4 = inttoptr i32 %v0_100091c0 to i32*
  store i32 %v0_100091c4, i32* %v2_100091c4, align 4
  br label %dec_label_pc_100091cc

dec_label_pc_100091cc:                            ; preds = %dec_label_pc_10009198, %dec_label_pc_100091c0
  %v0_100091dc = phi i32 [ %v0_100091b0, %dec_label_pc_10009198 ], [ -1, %dec_label_pc_100091c0 ]
  ret i32 %v0_100091dc

; uselistorder directives
  uselistorder label %dec_label_pc_100091cc, { 1, 0 }
}

define i32 @function_100091e0() local_unnamed_addr {
dec_label_pc_100091e0:
  %r31.global-to-local = alloca i32, align 4
  %v0_100091f8 = call i32 @__asm_mfcr()
  %v1_100091fc = and i32 %v0_100091f8, 268435456
  %v3_100091fc = icmp eq i32 %v1_100091fc, 0
  store i32 %v0_100091f8, i32* %r31.global-to-local, align 4
  br i1 %v3_100091fc, label %dec_label_pc_10009214, label %dec_label_pc_10009208

dec_label_pc_10009208:                            ; preds = %dec_label_pc_100091e0
  %v0_10009208 = call i32 @function_10009824()
  %v0_1000920c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000920c = inttoptr i32 %v0_10009208 to i32*
  store i32 %v0_1000920c, i32* %v2_1000920c, align 4
  br label %dec_label_pc_10009214

dec_label_pc_10009214:                            ; preds = %dec_label_pc_100091e0, %dec_label_pc_10009208
  %v0_10009224 = phi i32 [ %v0_100091f8, %dec_label_pc_100091e0 ], [ -1, %dec_label_pc_10009208 ]
  ret i32 %v0_10009224

; uselistorder directives
  uselistorder label %dec_label_pc_10009214, { 1, 0 }
}

define i32 @function_10009228(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009228:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009240 = call i32 @__asm_mfcr()
  %v1_10009244 = and i32 %v0_10009240, 268435456
  %v3_10009244 = icmp eq i32 %v1_10009244, 0
  store i32 %v0_10009240, i32* %r31.global-to-local, align 4
  br i1 %v3_10009244, label %dec_label_pc_1000925c, label %dec_label_pc_10009250

dec_label_pc_10009250:                            ; preds = %dec_label_pc_10009228
  %v0_10009250 = call i32 @function_10009824()
  %v0_10009254 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009254 = inttoptr i32 %v0_10009250 to i32*
  store i32 %v0_10009254, i32* %v2_10009254, align 4
  br label %dec_label_pc_1000925c

dec_label_pc_1000925c:                            ; preds = %dec_label_pc_10009228, %dec_label_pc_10009250
  %v0_1000926c = phi i32 [ %v0_10009240, %dec_label_pc_10009228 ], [ -1, %dec_label_pc_10009250 ]
  ret i32 %v0_1000926c

; uselistorder directives
  uselistorder label %dec_label_pc_1000925c, { 1, 0 }
}

define i32 @function_10009270(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009270:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_10009284 = and i32 %arg2, 64
  %v3_10009284 = icmp eq i32 %v1_10009284, 0
  br i1 %v3_10009284, label %dec_label_pc_100092b0, label %dec_label_pc_10009294

dec_label_pc_10009294:                            ; preds = %dec_label_pc_10009270
  %v2_1000929c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000929c, i32* %stack_var_-32, align 4
  %v0_100092ac = load i32, i32* @r5, align 4
  br label %dec_label_pc_100092b0

dec_label_pc_100092b0:                            ; preds = %dec_label_pc_10009270, %dec_label_pc_10009294
  %v0_100092b0 = phi i32 [ 0, %dec_label_pc_10009270 ], [ %v0_100092ac, %dec_label_pc_10009294 ]
  store i32 %v0_100092b0, i32* @r5, align 4
  %v0_100092b8 = call i32 @__asm_mfcr()
  %v1_100092bc = and i32 %v0_100092b8, 268435456
  %v3_100092bc = icmp eq i32 %v1_100092bc, 0
  store i32 %v0_100092b8, i32* %r31.global-to-local, align 4
  br i1 %v3_100092bc, label %dec_label_pc_100092d4, label %dec_label_pc_100092c8

dec_label_pc_100092c8:                            ; preds = %dec_label_pc_100092b0
  %v0_100092c8 = call i32 @function_10009824()
  %v0_100092cc = load i32, i32* %r31.global-to-local, align 4
  %v2_100092cc = inttoptr i32 %v0_100092c8 to i32*
  store i32 %v0_100092cc, i32* %v2_100092cc, align 4
  br label %dec_label_pc_100092d4

dec_label_pc_100092d4:                            ; preds = %dec_label_pc_100092b0, %dec_label_pc_100092c8
  %v0_100092e4 = phi i32 [ %v0_100092b8, %dec_label_pc_100092b0 ], [ -1, %dec_label_pc_100092c8 ]
  ret i32 %v0_100092e4

; uselistorder directives
  uselistorder label %dec_label_pc_100092d4, { 1, 0 }
  uselistorder label %dec_label_pc_100092b0, { 1, 0 }
}

define i32 @function_100092e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100092e8:
  store i32 %arg1, i32* @r5, align 4
  %v2_100092f4 = call i32 @function_10009270(i32 577, i32 577)
  ret i32 %v2_100092f4
}

define i32 @function_100092f8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100092f8:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009310 = call i32 @__asm_mfcr()
  %v1_10009314 = and i32 %v0_10009310, 268435456
  %v3_10009314 = icmp eq i32 %v1_10009314, 0
  store i32 %v0_10009310, i32* %r31.global-to-local, align 4
  br i1 %v3_10009314, label %dec_label_pc_1000932c, label %dec_label_pc_10009320

dec_label_pc_10009320:                            ; preds = %dec_label_pc_100092f8
  %v0_10009320 = call i32 @function_10009824()
  %v0_10009324 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009324 = inttoptr i32 %v0_10009320 to i32*
  store i32 %v0_10009324, i32* %v2_10009324, align 4
  br label %dec_label_pc_1000932c

dec_label_pc_1000932c:                            ; preds = %dec_label_pc_100092f8, %dec_label_pc_10009320
  %v0_1000933c = phi i32 [ %v0_10009310, %dec_label_pc_100092f8 ], [ -1, %dec_label_pc_10009320 ]
  ret i32 %v0_1000933c

; uselistorder directives
  uselistorder label %dec_label_pc_1000932c, { 1, 0 }
}

define i32 @function_10009340(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009340:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009358 = call i32 @__asm_mfcr()
  %v1_1000935c = and i32 %v0_10009358, 268435456
  %v3_1000935c = icmp eq i32 %v1_1000935c, 0
  store i32 %v0_10009358, i32* %r31.global-to-local, align 4
  br i1 %v3_1000935c, label %dec_label_pc_10009374, label %dec_label_pc_10009368

dec_label_pc_10009368:                            ; preds = %dec_label_pc_10009340
  %v0_10009368 = call i32 @function_10009824()
  %v0_1000936c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000936c = inttoptr i32 %v0_10009368 to i32*
  store i32 %v0_1000936c, i32* %v2_1000936c, align 4
  br label %dec_label_pc_10009374

dec_label_pc_10009374:                            ; preds = %dec_label_pc_10009340, %dec_label_pc_10009368
  %v0_10009384 = phi i32 [ %v0_10009358, %dec_label_pc_10009340 ], [ -1, %dec_label_pc_10009368 ]
  ret i32 %v0_10009384

; uselistorder directives
  uselistorder label %dec_label_pc_10009374, { 1, 0 }
}

define i32 @function_10009388(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009388:
  %r31.global-to-local = alloca i32, align 4
  %v0_100093a0 = call i32 @__asm_mfcr()
  %v1_100093a4 = and i32 %v0_100093a0, 268435456
  %v3_100093a4 = icmp eq i32 %v1_100093a4, 0
  store i32 %v0_100093a0, i32* %r31.global-to-local, align 4
  br i1 %v3_100093a4, label %dec_label_pc_100093bc, label %dec_label_pc_100093b0

dec_label_pc_100093b0:                            ; preds = %dec_label_pc_10009388
  %v0_100093b0 = call i32 @function_10009824()
  %v0_100093b4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100093b4 = inttoptr i32 %v0_100093b0 to i32*
  store i32 %v0_100093b4, i32* %v2_100093b4, align 4
  br label %dec_label_pc_100093bc

dec_label_pc_100093bc:                            ; preds = %dec_label_pc_10009388, %dec_label_pc_100093b0
  %v0_100093cc = phi i32 [ %v0_100093a0, %dec_label_pc_10009388 ], [ -1, %dec_label_pc_100093b0 ]
  ret i32 %v0_100093cc

; uselistorder directives
  uselistorder label %dec_label_pc_100093bc, { 1, 0 }
}

define i32 @function_100093d0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_100093d0:
  %r31.global-to-local = alloca i32, align 4
  %v0_100093e8 = call i32 @__asm_mfcr()
  %v1_100093ec = and i32 %v0_100093e8, 268435456
  %v3_100093ec = icmp eq i32 %v1_100093ec, 0
  store i32 %v0_100093e8, i32* %r31.global-to-local, align 4
  br i1 %v3_100093ec, label %dec_label_pc_10009404, label %dec_label_pc_100093f8

dec_label_pc_100093f8:                            ; preds = %dec_label_pc_100093d0
  %v0_100093f8 = call i32 @function_10009824()
  %v0_100093fc = load i32, i32* %r31.global-to-local, align 4
  %v2_100093fc = inttoptr i32 %v0_100093f8 to i32*
  store i32 %v0_100093fc, i32* %v2_100093fc, align 4
  br label %dec_label_pc_10009404

dec_label_pc_10009404:                            ; preds = %dec_label_pc_100093d0, %dec_label_pc_100093f8
  %v0_10009414 = phi i32 [ %v0_100093e8, %dec_label_pc_100093d0 ], [ -1, %dec_label_pc_100093f8 ]
  ret i32 %v0_10009414

; uselistorder directives
  uselistorder label %dec_label_pc_10009404, { 1, 0 }
}

define i32 @function_10009418(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009418:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009430 = call i32 @__asm_mfcr()
  %v1_10009434 = and i32 %v0_10009430, 268435456
  %v3_10009434 = icmp eq i32 %v1_10009434, 0
  store i32 %v0_10009430, i32* %r31.global-to-local, align 4
  br i1 %v3_10009434, label %dec_label_pc_1000944c, label %dec_label_pc_10009440

dec_label_pc_10009440:                            ; preds = %dec_label_pc_10009418
  %v0_10009440 = call i32 @function_10009824()
  %v0_10009444 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009444 = inttoptr i32 %v0_10009440 to i32*
  store i32 %v0_10009444, i32* %v2_10009444, align 4
  br label %dec_label_pc_1000944c

dec_label_pc_1000944c:                            ; preds = %dec_label_pc_10009418, %dec_label_pc_10009440
  %v0_1000945c = phi i32 [ %v0_10009430, %dec_label_pc_10009418 ], [ -1, %dec_label_pc_10009440 ]
  ret i32 %v0_1000945c

; uselistorder directives
  uselistorder label %dec_label_pc_1000944c, { 1, 0 }
}

define i32 @function_10009460(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009460:
  %r31.global-to-local = alloca i32, align 4
  %v3_10009460 = icmp eq i32 %arg2, 0
  br i1 %v3_10009460, label %dec_label_pc_100094a0, label %dec_label_pc_10009488

dec_label_pc_10009488:                            ; preds = %dec_label_pc_10009460
  store i32 -1, i32* %r31.global-to-local, align 4
  %tmp5 = icmp ult i32 %arg1, 3
  br i1 %tmp5, label %dec_label_pc_100094a0, label %dec_label_pc_10009490

dec_label_pc_10009490:                            ; preds = %dec_label_pc_10009488
  %v0_10009490 = call i32 @function_10009824()
  %v2_10009498 = inttoptr i32 %v0_10009490 to i32*
  store i32 22, i32* %v2_10009498, align 4
  %v0_100094c4.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100094c0

dec_label_pc_100094a0:                            ; preds = %dec_label_pc_10009488, %dec_label_pc_10009460
  %v0_100094a4 = call i32 @__asm_mfcr()
  %v1_100094a8 = and i32 %v0_100094a4, 268435456
  %v3_100094a8 = icmp eq i32 %v1_100094a8, 0
  store i32 %v0_100094a4, i32* %r31.global-to-local, align 4
  br i1 %v3_100094a8, label %dec_label_pc_100094c0, label %dec_label_pc_100094b4

dec_label_pc_100094b4:                            ; preds = %dec_label_pc_100094a0
  %v0_100094b4 = call i32 @function_10009824()
  %v0_100094b8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100094b8 = inttoptr i32 %v0_100094b4 to i32*
  store i32 %v0_100094b8, i32* %v2_100094b8, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100094c0

dec_label_pc_100094c0:                            ; preds = %dec_label_pc_100094a0, %dec_label_pc_10009490, %dec_label_pc_100094b4
  %v0_100094c4 = phi i32 [ %v0_100094a4, %dec_label_pc_100094a0 ], [ %v0_100094c4.pre, %dec_label_pc_10009490 ], [ -1, %dec_label_pc_100094b4 ]
  ret i32 %v0_100094c4

; uselistorder directives
  uselistorder label %dec_label_pc_100094c0, { 2, 0, 1 }
}

define i32 @function_100094d8() local_unnamed_addr {
dec_label_pc_100094d8:
  %r31.global-to-local = alloca i32, align 4
  %v0_100094f0 = call i32 @__asm_mfcr()
  %v1_100094f4 = and i32 %v0_100094f0, 268435456
  %v3_100094f4 = icmp eq i32 %v1_100094f4, 0
  store i32 %v0_100094f0, i32* %r31.global-to-local, align 4
  br i1 %v3_100094f4, label %dec_label_pc_1000950c, label %dec_label_pc_10009500

dec_label_pc_10009500:                            ; preds = %dec_label_pc_100094d8
  %v0_10009500 = call i32 @function_10009824()
  %v0_10009504 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009504 = inttoptr i32 %v0_10009500 to i32*
  store i32 %v0_10009504, i32* %v2_10009504, align 4
  br label %dec_label_pc_1000950c

dec_label_pc_1000950c:                            ; preds = %dec_label_pc_100094d8, %dec_label_pc_10009500
  %v0_1000951c = phi i32 [ %v0_100094f0, %dec_label_pc_100094d8 ], [ -1, %dec_label_pc_10009500 ]
  ret i32 %v0_1000951c

; uselistorder directives
  uselistorder label %dec_label_pc_1000950c, { 1, 0 }
}

define i32 @function_10009520(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009520:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009538 = call i32 @__asm_mfcr()
  %v1_1000953c = and i32 %v0_10009538, 268435456
  %v3_1000953c = icmp eq i32 %v1_1000953c, 0
  store i32 %v0_10009538, i32* %r31.global-to-local, align 4
  br i1 %v3_1000953c, label %dec_label_pc_10009554, label %dec_label_pc_10009548

dec_label_pc_10009548:                            ; preds = %dec_label_pc_10009520
  %v0_10009548 = call i32 @function_10009824()
  %v0_1000954c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000954c = inttoptr i32 %v0_10009548 to i32*
  store i32 %v0_1000954c, i32* %v2_1000954c, align 4
  br label %dec_label_pc_10009554

dec_label_pc_10009554:                            ; preds = %dec_label_pc_10009520, %dec_label_pc_10009548
  %v0_10009564 = phi i32 [ %v0_10009538, %dec_label_pc_10009520 ], [ -1, %dec_label_pc_10009548 ]
  ret i32 %v0_10009564

; uselistorder directives
  uselistorder label %dec_label_pc_10009554, { 1, 0 }
}

define i32 @function_10009568(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009568:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009580 = call i32 @__asm_mfcr()
  %v1_10009584 = and i32 %v0_10009580, 268435456
  %v3_10009584 = icmp eq i32 %v1_10009584, 0
  store i32 %v0_10009580, i32* %r31.global-to-local, align 4
  br i1 %v3_10009584, label %dec_label_pc_1000959c, label %dec_label_pc_10009590

dec_label_pc_10009590:                            ; preds = %dec_label_pc_10009568
  %v0_10009590 = call i32 @function_10009824()
  %v0_10009594 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009594 = inttoptr i32 %v0_10009590 to i32*
  store i32 %v0_10009594, i32* %v2_10009594, align 4
  br label %dec_label_pc_1000959c

dec_label_pc_1000959c:                            ; preds = %dec_label_pc_10009568, %dec_label_pc_10009590
  %v0_100095ac = phi i32 [ %v0_10009580, %dec_label_pc_10009568 ], [ -1, %dec_label_pc_10009590 ]
  ret i32 %v0_100095ac

; uselistorder directives
  uselistorder label %dec_label_pc_1000959c, { 1, 0 }
}

define i32 @function_100095b0(i32* %arg1) local_unnamed_addr {
dec_label_pc_100095b0:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_100095cc = ptrtoint i32* %stack_var_-40 to i32
  %v2_100095d4 = load i32, i32* %arg1, align 4
  store i32 %v2_100095cc, i32* @r3, align 4
  %v3_100095e0 = icmp eq i32 %v2_100095d4, -1
  br i1 %v3_100095e0, label %dec_label_pc_100095e8, label %dec_label_pc_100095fc

dec_label_pc_100095e8:                            ; preds = %dec_label_pc_100095b0
  %v0_100095e8 = call i32 @function_10009824()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_100095f4 = inttoptr i32 %v0_100095e8 to i32*
  store i32 9, i32* %v2_100095f4, align 4
  %v0_10009640.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000963c

dec_label_pc_100095fc:                            ; preds = %dec_label_pc_100095b0
  %v3_100095fc = call i32 @function_1000abc0(i32 %v2_100095cc, i32 ptrtoint ([3 x i8]* @global_var_1000abb8.330 to i32))
  %v0_10009604 = call i32 @function_1000abb8()
  %v0_1000960c = load i32, i32* @r31, align 4
  %v1_1000960c = inttoptr i32 %v0_1000960c to i32*
  %v2_1000960c = load i32, i32* %v1_1000960c, align 4
  store i32 %v2_1000960c, i32* @r29, align 4
  store i32 -1, i32* %v1_1000960c, align 4
  store i32 %v2_100095cc, i32* @r3, align 4
  %v2_1000961c = call i32 @function_1000abc0(i32 %v2_100095cc, i32 1)
  %v0_10009620 = load i32, i32* @r31, align 4
  %v1_10009620 = add i32 %v0_10009620, 12
  %v2_10009620 = inttoptr i32 %v1_10009620 to i32*
  %v3_10009620 = load i32, i32* %v2_10009620, align 4
  store i32 %v3_10009620, i32* @r3, align 4
  store i32 268473896, i32* @lr, align 4
  %v0_10009624 = call i32 @function_1000a224()
  %v0_10009628 = load i32, i32* @r31, align 4
  store i32 %v0_10009628, i32* @r3, align 4
  store i32 268473904, i32* @lr, align 4
  %v0_1000962c = call i32 @function_1000a224()
  store i32 268473912, i32* @lr, align 4
  %v0_10009634 = call i32 @function_10009108()
  store i32 %v0_10009634, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000963c

dec_label_pc_1000963c:                            ; preds = %dec_label_pc_100095e8, %dec_label_pc_100095fc
  %v0_10009640 = phi i32 [ %v0_10009640.pre, %dec_label_pc_100095e8 ], [ %v0_10009634, %dec_label_pc_100095fc ]
  ret i32 %v0_10009640

; uselistorder directives
  uselistorder i32 %v2_100095cc, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000963c, { 1, 0 }
}

define i32 @function_10009654(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009654:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  %v0_10009654 = load i32, i32* @lr, align 4
  store i32 %v0_10009654, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 268473972, i32* @lr, align 4
  %v2_10009670 = call i32 @function_10009270(i32 18432, i32 18432)
  %v1_10009674 = icmp slt i32 %v2_10009670, 0
  br i1 %v1_10009674, label %dec_label_pc_1000974c, label %dec_label_pc_1000967c

dec_label_pc_1000967c:                            ; preds = %dec_label_pc_10009654
  %v2_1000967c = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_1000967c, i32* @r4, align 4
  store i32 268473988, i32* @lr, align 4
  %v1_10009680 = call i32 @function_1000af94(i32 %v2_1000967c)
  %v1_10009684 = icmp slt i32 %v1_10009680, 0
  br i1 %v1_10009684, label %dec_label_pc_100096a8, label %dec_label_pc_1000968c

dec_label_pc_1000968c:                            ; preds = %dec_label_pc_1000967c
  %v0_1000968c = load i32, i32* @r29, align 4
  store i32 2, i32* @r4, align 4
  store i32 268474016, i32* @lr, align 4
  %v2_1000969c = call i32 @function_10009020(i32 %v0_1000968c)
  %tmp5 = icmp sgt i32 %v2_1000969c, -1
  br i1 %tmp5, label %dec_label_pc_100096c8, label %dec_label_pc_100096a8

dec_label_pc_100096a8:                            ; preds = %dec_label_pc_1000968c, %dec_label_pc_1000967c
  %v0_100096a8 = call i32 @function_10009824()
  store i32 0, i32* @r31, align 4
  store i32 %v0_100096a8, i32* @r28, align 4
  %v1_100096b8 = inttoptr i32 %v0_100096a8 to i32*
  %v2_100096b8 = load i32, i32* %v1_100096b8, align 4
  store i32 268474048, i32* @lr, align 4
  %v0_100096bc = call i32 @function_10009108()
  %v1_100096c0 = load i32, i32* @r28, align 4
  %v2_100096c0 = inttoptr i32 %v1_100096c0 to i32*
  store i32 %v2_100096b8, i32* %v2_100096c0, align 4
  br label %dec_label_pc_1000974c

dec_label_pc_100096c8:                            ; preds = %dec_label_pc_1000968c
  store i32 48, i32* @r3, align 4
  store i32 268474064, i32* @lr, align 4
  %v0_100096cc = call i32 @function_1000a05c()
  store i32 %v0_100096cc, i32* %r31.global-to-local, align 4
  %v3_100096d0 = icmp eq i32 %v0_100096cc, 0
  br i1 %v3_100096d0, label %dec_label_pc_10009724, label %dec_label_pc_100096d8

dec_label_pc_100096d8:                            ; preds = %dec_label_pc_100096c8
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100096dc = load i32, i32* @r29, align 4
  %v2_100096dc = inttoptr i32 %v0_100096cc to i32*
  store i32 %v0_100096dc, i32* %v2_100096dc, align 4
  %v0_100096e0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100096e0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100096e0 = add i32 %v1_100096e0, 4
  %v3_100096e0 = inttoptr i32 %v2_100096e0 to i32*
  store i32 %v0_100096e0, i32* %v3_100096e0, align 4
  %v0_100096e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100096e4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100096e4 = add i32 %v1_100096e4, 16
  %v3_100096e4 = inttoptr i32 %v2_100096e4 to i32*
  store i32 %v0_100096e4, i32* %v3_100096e4, align 4
  %v0_100096e8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100096e8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100096e8 = add i32 %v1_100096e8, 8
  %v3_100096e8 = inttoptr i32 %v2_100096e8 to i32*
  store i32 %v0_100096e8, i32* %v3_100096e8, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_100096f0 = icmp ugt i32 %tmp, 511
  %v1_100096f4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100096f4 = add i32 %v1_100096f4, 20
  %v3_100096f4 = inttoptr i32 %v2_100096f4 to i32*
  store i32 %tmp, i32* %v3_100096f4, align 4
  br i1 %v2_100096f0, label %dec_label_pc_10009704, label %dec_label_pc_100096fc

dec_label_pc_100096fc:                            ; preds = %dec_label_pc_100096d8
  store i32 512, i32* %r0.global-to-local, align 4
  %v1_10009700 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009700 = add i32 %v1_10009700, 20
  %v3_10009700 = inttoptr i32 %v2_10009700 to i32*
  store i32 512, i32* %v3_10009700, align 4
  br label %dec_label_pc_10009704

dec_label_pc_10009704:                            ; preds = %dec_label_pc_100096d8, %dec_label_pc_100096fc
  %v0_10009704 = load i32, i32* %r31.global-to-local, align 4
  %v1_10009704 = add i32 %v0_10009704, 20
  %v2_10009704 = inttoptr i32 %v1_10009704 to i32*
  %v3_10009704 = load i32, i32* %v2_10009704, align 4
  store i32 268474128, i32* @lr, align 4
  %v2_1000970c = call i32 @function_1000a1b4(i32 1, i32 %v3_10009704)
  %v3_10009710 = icmp eq i32 %v2_1000970c, 0
  %v1_10009714 = load i32, i32* @r31, align 4
  %v2_10009714 = add i32 %v1_10009714, 12
  %v3_10009714 = inttoptr i32 %v2_10009714 to i32*
  store i32 %v2_1000970c, i32* %v3_10009714, align 4
  br i1 %v3_10009710, label %dec_label_pc_1000971c, label %dec_label_pc_10009740

dec_label_pc_1000971c:                            ; preds = %dec_label_pc_10009704
  %v0_1000971c = load i32, i32* @r31, align 4
  store i32 %v0_1000971c, i32* @r3, align 4
  store i32 268474148, i32* @lr, align 4
  %v0_10009720 = call i32 @function_1000a224()
  br label %dec_label_pc_10009724

dec_label_pc_10009724:                            ; preds = %dec_label_pc_100096c8, %dec_label_pc_1000971c
  store i32 0, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_10009730.333 to i32), i32* @lr, align 4
  %v0_1000972c = call i32 @function_10009108()
  %v0_10009730 = call i32 @function_10009824()
  store i32 12, i32* %r0.global-to-local, align 4
  %v2_10009738 = inttoptr i32 %v0_10009730 to i32*
  store i32 12, i32* %v2_10009738, align 4
  br label %dec_label_pc_1000974c

dec_label_pc_10009740:                            ; preds = %dec_label_pc_10009704
  %v0_10009748 = call i32 @function_1000abb8()
  br label %dec_label_pc_1000974c

dec_label_pc_1000974c:                            ; preds = %dec_label_pc_10009654, %dec_label_pc_10009724, %dec_label_pc_100096a8, %dec_label_pc_10009740
  store i32 %v0_10009654, i32* %r0.global-to-local, align 4
  %v0_10009750 = load i32, i32* @r31, align 4
  ret i32 %v0_10009750

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 (i32, i32)* @function_1000a1b4, { 41, 43, 42, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 1, 0, 6, 5, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 4, 3, 2 }
  uselistorder i32 512, { 6, 8, 7, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 ()* @function_10009108, { 20, 19, 18, 37, 36, 35, 34, 32, 33, 27, 26, 31, 30, 29, 28, 4, 3, 2, 25, 24, 23, 22, 21, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 1, 0 }
  uselistorder i32 18432, { 1, 0 }
  uselistorder label %dec_label_pc_1000974c, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10009724, { 1, 0 }
  uselistorder label %dec_label_pc_10009704, { 1, 0 }
}

define i32 @function_10009764(i32* %arg1) local_unnamed_addr {
dec_label_pc_10009764:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %v0_10009768 = load i32, i32* @lr, align 4
  store i32 %v0_10009768, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10009780 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10009780, i32* @r3, align 4
  %v3_1000978c = call i32 @function_1000abc0(i32 %v2_10009780, i32 ptrtoint ([3 x i8]* @global_var_1000abb8.330 to i32))
  %v0_10009794 = call i32 @function_1000abb8()
  br label %dec_label_pc_10009798

dec_label_pc_10009798:                            ; preds = %dec_label_pc_100097d4, %dec_label_pc_10009764
  %v0_10009798 = load i32, i32* @r31, align 4
  %v1_10009798 = add i32 %v0_10009798, 4
  %v2_10009798 = inttoptr i32 %v1_10009798 to i32*
  %v3_10009798 = load i32, i32* %v2_10009798, align 4
  store i32 %v3_10009798, i32* %r0.global-to-local, align 4
  %v1_1000979c = add i32 %v0_10009798, 8
  %v2_1000979c = inttoptr i32 %v1_1000979c to i32*
  %v3_1000979c = load i32, i32* %v2_1000979c, align 4
  store i32 %v3_1000979c, i32* %r9.global-to-local, align 4
  %v3_100097a0 = icmp ugt i32 %v3_1000979c, %v3_10009798
  br i1 %v3_100097a0, label %dec_label_pc_100097d4, label %dec_label_pc_100097a8

dec_label_pc_100097a8:                            ; preds = %dec_label_pc_10009798
  %v1_100097a8 = inttoptr i32 %v0_10009798 to i32*
  %v2_100097a8 = load i32, i32* %v1_100097a8, align 4
  store i32 %v2_100097a8, i32* @r3, align 4
  %v1_100097ac = add i32 %v0_10009798, 12
  %v2_100097ac = inttoptr i32 %v1_100097ac to i32*
  %v3_100097ac = load i32, i32* %v2_100097ac, align 4
  %v1_100097b0 = add i32 %v0_10009798, 20
  %v2_100097b0 = inttoptr i32 %v1_100097b0 to i32*
  %v3_100097b0 = load i32, i32* %v2_100097b0, align 4
  store i32 %v3_100097b0, i32* @r5, align 4
  store i32 268474296, i32* @lr, align 4
  %v4_100097b4 = inttoptr i32 %v2_100097a8 to i32*
  %v5_100097b4 = call i32 @function_1000b008(i32* %v4_100097b4, i32 %v3_100097ac, i32 %v3_100097b0, i32 %v3_1000979c)
  %v2_100097b8 = icmp sgt i32 %v5_100097b4, 0
  br i1 %v2_100097b8, label %dec_label_pc_100097c8, label %dec_label_pc_100097c0

dec_label_pc_100097c0:                            ; preds = %dec_label_pc_100097a8
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_10009800

dec_label_pc_100097c8:                            ; preds = %dec_label_pc_100097a8
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100097cc = load i32, i32* @r31, align 4
  %v2_100097cc = add i32 %v1_100097cc, 8
  %v3_100097cc = inttoptr i32 %v2_100097cc to i32*
  store i32 %v5_100097b4, i32* %v3_100097cc, align 4
  %v0_100097d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100097d0 = load i32, i32* @r31, align 4
  %v2_100097d0 = add i32 %v1_100097d0, 4
  %v3_100097d0 = inttoptr i32 %v2_100097d0 to i32*
  store i32 %v0_100097d0, i32* %v3_100097d0, align 4
  %v0_100097d4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100097d4

dec_label_pc_100097d4:                            ; preds = %dec_label_pc_10009798, %dec_label_pc_100097c8
  %v1_100097e8 = phi i32 [ %v0_10009798, %dec_label_pc_10009798 ], [ %v0_100097d4.pre, %dec_label_pc_100097c8 ]
  %v1_100097d4 = add i32 %v1_100097e8, 4
  %v2_100097d4 = inttoptr i32 %v1_100097d4 to i32*
  %v3_100097d4 = load i32, i32* %v2_100097d4, align 4
  store i32 %v3_100097d4, i32* %r9.global-to-local, align 4
  %v1_100097d8 = add i32 %v1_100097e8, 12
  %v2_100097d8 = inttoptr i32 %v1_100097d8 to i32*
  %v3_100097d8 = load i32, i32* %v2_100097d8, align 4
  store i32 %v3_100097d8, i32* %r11.global-to-local, align 4
  %v2_100097dc = add i32 %v3_100097d8, %v3_100097d4
  store i32 %v2_100097dc, i32* @r29, align 4
  %v1_100097e0 = add i32 %v2_100097dc, 8
  %v2_100097e0 = inttoptr i32 %v1_100097e0 to i16*
  %v3_100097e0 = load i16, i16* %v2_100097e0, align 2
  %v4_100097e0 = zext i16 %v3_100097e0 to i32
  %v2_100097e4 = add i32 %v4_100097e0, %v3_100097d4
  store i32 %v2_100097e4, i32* %r0.global-to-local, align 4
  store i32 %v2_100097e4, i32* %v2_100097d4, align 4
  %v0_100097ec = load i32, i32* @r29, align 4
  %v1_100097ec = add i32 %v0_100097ec, 4
  %v2_100097ec = inttoptr i32 %v1_100097ec to i32*
  %v3_100097ec = load i32, i32* %v2_100097ec, align 4
  store i32 %v3_100097ec, i32* %r0.global-to-local, align 4
  %v1_100097f0 = load i32, i32* @r31, align 4
  %v2_100097f0 = add i32 %v1_100097f0, 16
  %v3_100097f0 = inttoptr i32 %v2_100097f0 to i32*
  store i32 %v3_100097ec, i32* %v3_100097f0, align 4
  %v0_100097f4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100097f4 = load i32, i32* %r11.global-to-local, align 4
  %v2_100097f4 = add i32 %v1_100097f4, %v0_100097f4
  %v3_100097f4 = inttoptr i32 %v2_100097f4 to i32*
  %v4_100097f4 = load i32, i32* %v3_100097f4, align 4
  store i32 %v4_100097f4, i32* %r0.global-to-local, align 4
  %v3_100097f8 = icmp eq i32 %v4_100097f4, 0
  br i1 %v3_100097f8, label %dec_label_pc_10009798, label %dec_label_pc_10009800

dec_label_pc_10009800:                            ; preds = %dec_label_pc_100097d4, %dec_label_pc_100097c0
  store i32 %v2_10009780, i32* @r3, align 4
  %v2_10009808 = call i32 @function_1000abc0(i32 %v2_10009780, i32 1)
  store i32 %v0_10009768, i32* %r0.global-to-local, align 4
  %v0_10009810 = load i32, i32* @r29, align 4
  ret i32 %v0_10009810

; uselistorder directives
  uselistorder i32 %v1_100097e8, { 1, 0 }
  uselistorder i32 %v0_10009798, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v2_10009780, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_100097d4, { 1, 0 }
}

define i32 @function_10009824() local_unnamed_addr {
dec_label_pc_10009824:
  ret i32 ptrtoint (i32* @global_var_1001c2ec.335 to i32)
}

define i32 @function_10009830(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009830:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v2_10009838 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268474436, i32* @lr, align 4
  %v1_10009840 = call i32 @function_1000b448(i32 %v2_10009838)
  %v3_10009848 = load i32, i32* %stack_var_-24, align 4
  %v2_1000984c = add i32 %v3_10009848, %tmp
  %v1_10009854 = mul i32 %v2_1000984c, 10000
  %v1_10009860 = and i32 %v1_10009854, 2147483632
  ret i32 %v1_10009860
}

define i32 @function_10009868(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009868:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v2_10009868 = icmp ult i32 %arg2, %arg1
  store i32 %arg1, i32* %r8.global-to-local, align 4
  store i32 %arg3, i32* @r11, align 4
  br i1 %v2_10009868, label %dec_label_pc_1000987c, label %dec_label_pc_10009878

dec_label_pc_10009878:                            ; preds = %dec_label_pc_10009868
  %v0_10009878 = call i32 @function_1000b60c()
  store i32 %v0_10009878, i32* @r3, align 4
  br label %dec_label_pc_1000987c

dec_label_pc_1000987c:                            ; preds = %dec_label_pc_10009868, %dec_label_pc_10009878
  %v1_1000987c = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_1000987c, i32* %r9.global-to-local, align 4
  %v4_1000987c = icmp eq i32 %v1_1000987c, 0
  %v2_10009880 = add i32 %arg3, %arg2
  store i32 %v2_10009880, i32* %r4.global-to-local, align 4
  %v0_10009884 = load i32, i32* @r3, align 4
  %v2_10009884 = add i32 %v0_10009884, %arg3
  store i32 %v2_10009884, i32* %r10.global-to-local, align 4
  br i1 %v4_1000987c, label %dec_label_pc_100098ac, label %dec_label_pc_1000988c

dec_label_pc_1000988c:                            ; preds = %dec_label_pc_1000987c
  %v1_1000988c = urem i32 %v2_10009884, 4
  %v3_1000988c = icmp eq i32 %v1_1000988c, 0
  br i1 %v3_1000988c, label %dec_label_pc_10009894, label %dec_label_pc_100098e0

dec_label_pc_10009894:                            ; preds = %dec_label_pc_100098f8.dec_label_pc_10009894_crit_edge, %dec_label_pc_1000988c
  %v1_100098a0.pre = phi i32 [ %v1_100098a0.pre.pre, %dec_label_pc_100098f8.dec_label_pc_10009894_crit_edge ], [ %v2_10009884, %dec_label_pc_1000988c ]
  %v0_10009894 = phi i32 [ %v1_100098f8, %dec_label_pc_100098f8.dec_label_pc_10009894_crit_edge ], [ %v1_1000987c, %dec_label_pc_1000988c ]
  store i32 %v0_10009894, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10009898

dec_label_pc_10009898:                            ; preds = %dec_label_pc_10009898, %dec_label_pc_10009894
  %v1_100098a0 = phi i32 [ %v2_100098a4, %dec_label_pc_10009898 ], [ %v1_100098a0.pre, %dec_label_pc_10009894 ]
  %v0_10009898 = load i32, i32* %r4.global-to-local, align 4
  %v1_10009898 = add i32 %v0_10009898, -4
  %v2_10009898 = inttoptr i32 %v1_10009898 to i32*
  %v3_10009898 = load i32, i32* %v2_10009898, align 4
  %v1_1000989c = add i32 %v0_10009898, -8
  %v2_1000989c = inttoptr i32 %v1_1000989c to i32*
  %v3_1000989c = load i32, i32* %v2_1000989c, align 4
  store i32 %v3_1000989c, i32* %r9.global-to-local, align 4
  store i32 %v1_1000989c, i32* %r4.global-to-local, align 4
  %v2_100098a0 = add i32 %v1_100098a0, -4
  %v3_100098a0 = inttoptr i32 %v2_100098a0 to i32*
  store i32 %v3_10009898, i32* %v3_100098a0, align 4
  %v0_100098a4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100098a4 = load i32, i32* %r10.global-to-local, align 4
  %v2_100098a4 = add i32 %v1_100098a4, -8
  %v3_100098a4 = inttoptr i32 %v2_100098a4 to i32*
  store i32 %v0_100098a4, i32* %v3_100098a4, align 4
  store i32 %v2_100098a4, i32* %r10.global-to-local, align 4
  %v0_100098a8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100098a8 = add i32 %v0_100098a8, -1
  store i32 %v1_100098a8, i32* %ctr.global-to-local, align 4
  %v2_100098a8 = icmp eq i32 %v1_100098a8, 0
  br i1 %v2_100098a8, label %dec_label_pc_100098ac, label %dec_label_pc_10009898

dec_label_pc_100098ac:                            ; preds = %dec_label_pc_10009898, %dec_label_pc_100098f8, %dec_label_pc_1000987c
  %v0_100098ac = load i32, i32* @r11, align 4
  %v1_100098ac = urem i32 %v0_100098ac, 8
  store i32 %v1_100098ac, i32* %r5.global-to-local, align 4
  %tmp = icmp ult i32 %v1_100098ac, 4
  br i1 %tmp, label %dec_label_pc_100098c4, label %dec_label_pc_100098b8

dec_label_pc_100098b8:                            ; preds = %dec_label_pc_100098ac
  %v0_100098b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_100098b8 = add i32 %v0_100098b8, -4
  %v2_100098b8 = inttoptr i32 %v1_100098b8 to i32*
  %v3_100098b8 = load i32, i32* %v2_100098b8, align 4
  store i32 %v1_100098b8, i32* %r4.global-to-local, align 4
  %v1_100098bc = add nsw i32 %v1_100098ac, -4
  store i32 %v1_100098bc, i32* %r5.global-to-local, align 4
  %v1_100098c0 = load i32, i32* %r10.global-to-local, align 4
  %v2_100098c0 = add i32 %v1_100098c0, -4
  %v3_100098c0 = inttoptr i32 %v2_100098c0 to i32*
  store i32 %v3_100098b8, i32* %v3_100098c0, align 4
  store i32 %v2_100098c0, i32* %r10.global-to-local, align 4
  %v0_100098c4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_100098c4

dec_label_pc_100098c4:                            ; preds = %dec_label_pc_100098ac, %dec_label_pc_100098b8
  %v0_100098cc = phi i32 [ %v1_100098ac, %dec_label_pc_100098ac ], [ %v0_100098c4.pre, %dec_label_pc_100098b8 ]
  %v3_100098c4 = icmp eq i32 %v0_100098cc, 0
  br i1 %v3_100098c4, label %dec_label_pc_10009904, label %dec_label_pc_100098cc

dec_label_pc_100098cc:                            ; preds = %dec_label_pc_100098c4
  store i32 %v0_100098cc, i32* %ctr.global-to-local, align 4
  %v2_100098d4.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100098d0

dec_label_pc_100098d0:                            ; preds = %dec_label_pc_100098d0, %dec_label_pc_100098cc
  %v2_100098d4 = phi i32 [ %v3_100098d4, %dec_label_pc_100098d0 ], [ %v2_100098d4.pre, %dec_label_pc_100098cc ]
  %v0_100098d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100098d0 = add i32 %v0_100098d0, -1
  %v2_100098d0 = inttoptr i32 %v1_100098d0 to i8*
  %v3_100098d0 = load i8, i8* %v2_100098d0, align 1
  store i32 %v1_100098d0, i32* %r4.global-to-local, align 4
  %v3_100098d4 = add i32 %v2_100098d4, -1
  %v4_100098d4 = inttoptr i32 %v3_100098d4 to i8*
  store i8 %v3_100098d0, i8* %v4_100098d4, align 1
  store i32 %v3_100098d4, i32* %r10.global-to-local, align 4
  %v0_100098d8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100098d8 = add i32 %v0_100098d8, -1
  store i32 %v1_100098d8, i32* %ctr.global-to-local, align 4
  %v2_100098d8 = icmp eq i32 %v1_100098d8, 0
  br i1 %v2_100098d8, label %dec_label_pc_10009904, label %dec_label_pc_100098d0

dec_label_pc_100098e0:                            ; preds = %dec_label_pc_1000988c
  %v1_100098e0 = sub nsw i32 4, %v1_1000988c
  store i32 %v1_100098e0, i32* %ctr.global-to-local, align 4
  %v2_100098e8 = sub i32 %arg3, %v1_100098e0
  store i32 %v2_100098e8, i32* @r11, align 4
  %v1_100098ec8 = add i32 %v2_10009880, -1
  %v2_100098ec9 = inttoptr i32 %v1_100098ec8 to i8*
  %v3_100098ec10 = load i8, i8* %v2_100098ec9, align 1
  store i32 %v1_100098ec8, i32* %r4.global-to-local, align 4
  %v3_100098f012 = add i32 %v2_10009884, -1
  %v4_100098f013 = inttoptr i32 %v3_100098f012 to i8*
  store i8 %v3_100098ec10, i8* %v4_100098f013, align 1
  store i32 %v3_100098f012, i32* %r10.global-to-local, align 4
  %v0_100098f414 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100098f415 = add i32 %v0_100098f414, -1
  store i32 %v1_100098f415, i32* %ctr.global-to-local, align 4
  %v2_100098f416 = icmp eq i32 %v1_100098f415, 0
  br i1 %v2_100098f416, label %dec_label_pc_100098f8, label %dec_label_pc_100098ec.dec_label_pc_100098ec_crit_edge

dec_label_pc_100098ec.dec_label_pc_100098ec_crit_edge: ; preds = %dec_label_pc_100098e0, %dec_label_pc_100098ec.dec_label_pc_100098ec_crit_edge
  %v3_100098f017 = phi i32 [ %v3_100098f0, %dec_label_pc_100098ec.dec_label_pc_100098ec_crit_edge ], [ %v3_100098f012, %dec_label_pc_100098e0 ]
  %v0_100098ec.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_100098ec = add i32 %v0_100098ec.pre, -1
  %v2_100098ec = inttoptr i32 %v1_100098ec to i8*
  %v3_100098ec = load i8, i8* %v2_100098ec, align 1
  store i32 %v1_100098ec, i32* %r4.global-to-local, align 4
  %v3_100098f0 = add i32 %v3_100098f017, -1
  %v4_100098f0 = inttoptr i32 %v3_100098f0 to i8*
  store i8 %v3_100098ec, i8* %v4_100098f0, align 1
  store i32 %v3_100098f0, i32* %r10.global-to-local, align 4
  %v0_100098f4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100098f4 = add i32 %v0_100098f4, -1
  store i32 %v1_100098f4, i32* %ctr.global-to-local, align 4
  %v2_100098f4 = icmp eq i32 %v1_100098f4, 0
  br i1 %v2_100098f4, label %dec_label_pc_100098f8, label %dec_label_pc_100098ec.dec_label_pc_100098ec_crit_edge

dec_label_pc_100098f8:                            ; preds = %dec_label_pc_100098ec.dec_label_pc_100098ec_crit_edge, %dec_label_pc_100098e0
  %v0_100098f8 = load i32, i32* @r11, align 4
  %v1_100098f8 = call i32 @__asm_rlwinm.(i32 %v0_100098f8, i32 29, i32 3, i32 31)
  store i32 %v1_100098f8, i32* %r9.global-to-local, align 4
  %v4_100098f8 = icmp eq i32 %v1_100098f8, 0
  br i1 %v4_100098f8, label %dec_label_pc_100098ac, label %dec_label_pc_100098f8.dec_label_pc_10009894_crit_edge

dec_label_pc_100098f8.dec_label_pc_10009894_crit_edge: ; preds = %dec_label_pc_100098f8
  %v1_100098a0.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009894

dec_label_pc_10009904:                            ; preds = %dec_label_pc_100098d0, %dec_label_pc_100098c4
  %v0_10009904 = load i32, i32* %r8.global-to-local, align 4
  ret i32 %v0_10009904

; uselistorder directives
  uselistorder i32 %v1_100098f8, { 1, 2, 0 }
  uselistorder i32 %v1_100098f4, { 1, 0 }
  uselistorder i32 %v3_100098f0, { 1, 2, 0 }
  uselistorder i32 %v1_100098d8, { 1, 0 }
  uselistorder i32 %v3_100098d4, { 1, 2, 0 }
  uselistorder i32 %v1_100098ac, { 3, 2, 1, 0 }
  uselistorder i32 %v1_100098a8, { 1, 0 }
  uselistorder i32 %v2_100098a4, { 1, 2, 0 }
  uselistorder i32 %v1_1000988c, { 1, 0 }
  uselistorder i32 %v2_10009884, { 1, 2, 0, 3 }
  uselistorder i32* %r4.global-to-local, { 0, 5, 9, 1, 6, 2, 8, 3, 7, 4 }
  uselistorder i32* %r10.global-to-local, { 8, 0, 9, 1, 7, 2, 5, 3, 6, 4 }
  uselistorder i32* %ctr.global-to-local, { 0, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg3, { 3, 0, 1, 4, 2, 5 }
  uselistorder label %dec_label_pc_100098ec.dec_label_pc_100098ec_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_100098c4, { 1, 0 }
  uselistorder label %dec_label_pc_100098ac, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000987c, { 1, 0 }
}

define i32 @function_1000990c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000990c:
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_1000990c = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_1000990c, i32* %r9.global-to-local, align 4
  %v4_1000990c = icmp eq i32 %v1_1000990c, 0
  %v1_10009914 = add i32 %arg1, -4
  store i32 %v1_10009914, i32* %r11.global-to-local, align 4
  %v1_10009918 = call i32 @__asm_rlwimi(i32 %arg2, i32 8, i32 16, i32 23)
  %v1_1000991c = call i32 @__asm_rlwimi(i32 %v1_10009918, i32 16, i32 0, i32 15)
  %v2_1000991c = trunc i32 %v1_1000991c to i8
  br i1 %v4_1000990c, label %dec_label_pc_10009944, label %dec_label_pc_10009924

dec_label_pc_10009924:                            ; preds = %dec_label_pc_1000990c
  %v0_10009924 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009924 = urem i32 %v0_10009924, 4
  %v3_10009924 = icmp eq i32 %v1_10009924, 0
  br i1 %v3_10009924, label %dec_label_pc_10009924.dec_label_pc_1000992c_crit_edge, label %dec_label_pc_10009974

dec_label_pc_10009924.dec_label_pc_1000992c_crit_edge: ; preds = %dec_label_pc_10009924
  %v0_1000992c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000992c

dec_label_pc_1000992c:                            ; preds = %dec_label_pc_1000998c.dec_label_pc_1000992c_crit_edge, %dec_label_pc_10009924.dec_label_pc_1000992c_crit_edge
  %v0_10009930.pre = phi i32 [ %v0_10009924, %dec_label_pc_10009924.dec_label_pc_1000992c_crit_edge ], [ %v0_10009930.pre.pre, %dec_label_pc_1000998c.dec_label_pc_1000992c_crit_edge ]
  %v0_1000992c = phi i32 [ %v0_1000992c.pre, %dec_label_pc_10009924.dec_label_pc_1000992c_crit_edge ], [ %v1_1000998c, %dec_label_pc_1000998c.dec_label_pc_1000992c_crit_edge ]
  store i32 %v0_1000992c, i32* %ctr.global-to-local, align 4
  %v1_10009934 = sext i8 %v2_1000991c to i32
  br label %dec_label_pc_10009930

dec_label_pc_10009930:                            ; preds = %dec_label_pc_10009930, %dec_label_pc_1000992c
  %v0_10009930 = phi i32 [ %v1_1000993c, %dec_label_pc_10009930 ], [ %v0_10009930.pre, %dec_label_pc_1000992c ]
  %v1_10009930 = add i32 %v0_10009930, 4
  store i32 %v1_10009930, i32* %r9.global-to-local, align 4
  %v4_10009934 = inttoptr i32 %v1_10009930 to i32*
  store i32 %v1_10009934, i32* %v4_10009934, align 4
  %v2_10009938 = load i32, i32* %r9.global-to-local, align 4
  %v3_10009938 = add i32 %v2_10009938, 4
  %v4_10009938 = inttoptr i32 %v3_10009938 to i32*
  store i32 %v1_10009934, i32* %v4_10009938, align 4
  %v0_1000993c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000993c = add i32 %v0_1000993c, 4
  store i32 %v1_1000993c, i32* %r11.global-to-local, align 4
  %v0_10009940 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009940 = add i32 %v0_10009940, -1
  store i32 %v1_10009940, i32* %ctr.global-to-local, align 4
  %v2_10009940 = icmp eq i32 %v1_10009940, 0
  br i1 %v2_10009940, label %dec_label_pc_10009944, label %dec_label_pc_10009930

dec_label_pc_10009944:                            ; preds = %dec_label_pc_10009930, %dec_label_pc_1000998c, %dec_label_pc_1000990c
  %v0_10009944 = load i32, i32* %r5.global-to-local, align 4
  %v1_10009944 = urem i32 %v0_10009944, 8
  store i32 %v1_10009944, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_10009944, 4
  br i1 %tmp, label %dec_label_pc_10009958, label %dec_label_pc_10009950

dec_label_pc_10009950:                            ; preds = %dec_label_pc_10009944
  %v1_10009950 = sext i8 %v2_1000991c to i32
  %v2_10009950 = load i32, i32* %r11.global-to-local, align 4
  %v3_10009950 = add i32 %v2_10009950, 4
  %v4_10009950 = inttoptr i32 %v3_10009950 to i32*
  store i32 %v1_10009950, i32* %v4_10009950, align 4
  store i32 %v3_10009950, i32* %r11.global-to-local, align 4
  %v0_10009954 = load i32, i32* @r5, align 4
  %v1_10009954 = add i32 %v0_10009954, -4
  store i32 %v1_10009954, i32* @r5, align 4
  br label %dec_label_pc_10009958

dec_label_pc_10009958:                            ; preds = %dec_label_pc_10009944, %dec_label_pc_10009950
  %v0_10009958 = phi i32 [ %v1_10009944, %dec_label_pc_10009944 ], [ %v1_10009954, %dec_label_pc_10009950 ]
  %v3_10009958 = icmp eq i32 %v0_10009958, 0
  %v0_1000995c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10009958, i32 %v0_1000995c)
  %v0_10009960 = load i32, i32* @r5, align 4
  store i32 %v0_10009960, i32* %ctr.global-to-local, align 4
  %v0_10009964 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009964 = add i32 %v0_10009964, 3
  store i32 %v1_10009964, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009968

dec_label_pc_10009968:                            ; preds = %dec_label_pc_10009968, %dec_label_pc_10009958
  %v3_10009968 = phi i32 [ %v4_10009968, %dec_label_pc_10009968 ], [ %v1_10009964, %dec_label_pc_10009958 ]
  %v4_10009968 = add i32 %v3_10009968, 1
  %v5_10009968 = inttoptr i32 %v4_10009968 to i8*
  store i8 %v2_1000991c, i8* %v5_10009968, align 1
  store i32 %v4_10009968, i32* %r9.global-to-local, align 4
  %v0_1000996c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000996c = add i32 %v0_1000996c, -1
  store i32 %v1_1000996c, i32* %ctr.global-to-local, align 4
  %v2_1000996c = icmp eq i32 %v1_1000996c, 0
  br i1 %v2_1000996c, label %dec_label_pc_10009998, label %dec_label_pc_10009968

dec_label_pc_10009974:                            ; preds = %dec_label_pc_10009924
  %v1_10009974 = sub nsw i32 4, %v1_10009924
  store i32 %v1_10009974, i32* %ctr.global-to-local, align 4
  %v1_1000997c = load i32, i32* %r5.global-to-local, align 4
  %v2_1000997c = sub i32 %v1_1000997c, %v1_10009974
  store i32 %v2_1000997c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10009980

dec_label_pc_10009980:                            ; preds = %dec_label_pc_10009980, %dec_label_pc_10009974
  %v3_10009980 = phi i32 [ %v1_10009984, %dec_label_pc_10009980 ], [ %v0_10009924, %dec_label_pc_10009974 ]
  %v4_10009980 = add i32 %v3_10009980, 4
  %v5_10009980 = inttoptr i32 %v4_10009980 to i8*
  store i8 %v2_1000991c, i8* %v5_10009980, align 1
  %v0_10009984 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009984 = add i32 %v0_10009984, 1
  store i32 %v1_10009984, i32* %r11.global-to-local, align 4
  %v0_10009988 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009988 = add i32 %v0_10009988, -1
  store i32 %v1_10009988, i32* %ctr.global-to-local, align 4
  %v2_10009988 = icmp eq i32 %v1_10009988, 0
  br i1 %v2_10009988, label %dec_label_pc_1000998c, label %dec_label_pc_10009980

dec_label_pc_1000998c:                            ; preds = %dec_label_pc_10009980
  %v0_1000998c = load i32, i32* %r5.global-to-local, align 4
  %v1_1000998c = call i32 @__asm_rlwinm.(i32 %v0_1000998c, i32 29, i32 3, i32 31)
  store i32 %v1_1000998c, i32* %r9.global-to-local, align 4
  %v4_1000998c = icmp eq i32 %v1_1000998c, 0
  br i1 %v4_1000998c, label %dec_label_pc_10009944, label %dec_label_pc_1000998c.dec_label_pc_1000992c_crit_edge

dec_label_pc_1000998c.dec_label_pc_1000992c_crit_edge: ; preds = %dec_label_pc_1000998c
  %v0_10009930.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000992c

dec_label_pc_10009998:                            ; preds = %dec_label_pc_10009968
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1000998c, { 1, 2, 0 }
  uselistorder i32 %v1_10009988, { 1, 0 }
  uselistorder i32 %v1_10009984, { 1, 0 }
  uselistorder i32 %v1_1000996c, { 1, 0 }
  uselistorder i32 %v4_10009968, { 1, 2, 0 }
  uselistorder i32 %v1_10009944, { 2, 1, 0 }
  uselistorder i32 %v1_10009940, { 1, 0 }
  uselistorder i32 %v1_1000993c, { 1, 0 }
  uselistorder i32 %v1_10009924, { 1, 0 }
  uselistorder i32 %v0_10009924, { 2, 1, 0 }
  uselistorder i8 %v2_1000991c, { 3, 1, 2, 0 }
  uselistorder i32* %r5.global-to-local, { 2, 4, 0, 3, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwimi, { 55, 56, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54 }
  uselistorder label %dec_label_pc_10009958, { 1, 0 }
  uselistorder label %dec_label_pc_10009944, { 1, 0, 2 }
}

define i32 @function_1000999c(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_1000999c:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_1000999c = add i32 %arg1, -1
  %v1_100099a0 = sub i32 %v2_1000999c, %tmp
  store i32 %v1_100099a0, i32* %r9.global-to-local, align 4
  %v2_100099a44 = load i8, i8* %arg2, align 1
  %v1_100099a86 = add i32 %tmp, 1
  store i32 %v1_100099a86, i32* %r4.global-to-local, align 4
  %v3_100099ac7 = icmp eq i8 %v2_100099a44, 0
  store i1 %v3_100099ac7, i1* %cr7_eq.global-to-local, align 1
  %v5_100099b08 = inttoptr i32 %arg1 to i8*
  store i8 %v2_100099a44, i8* %v5_100099b08, align 1
  %v0_100099b49 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100099b49, label %dec_label_pc_100099b8, label %dec_label_pc_100099a4.dec_label_pc_100099a4_crit_edge

dec_label_pc_100099a4.dec_label_pc_100099a4_crit_edge: ; preds = %dec_label_pc_1000999c, %dec_label_pc_100099a4.dec_label_pc_100099a4_crit_edge
  %v0_100099a4.pre = load i32, i32* %r4.global-to-local, align 4
  %v2_100099b0.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_100099a4 = inttoptr i32 %v0_100099a4.pre to i8*
  %v2_100099a4 = load i8, i8* %v1_100099a4, align 1
  %v1_100099a8 = add i32 %v0_100099a4.pre, 1
  store i32 %v1_100099a8, i32* %r4.global-to-local, align 4
  %v3_100099ac = icmp eq i8 %v2_100099a4, 0
  store i1 %v3_100099ac, i1* %cr7_eq.global-to-local, align 1
  %v4_100099b0 = add i32 %v1_100099a8, %v2_100099b0.pre
  %v5_100099b0 = inttoptr i32 %v4_100099b0 to i8*
  store i8 %v2_100099a4, i8* %v5_100099b0, align 1
  %v0_100099b4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100099b4, label %dec_label_pc_100099b8, label %dec_label_pc_100099a4.dec_label_pc_100099a4_crit_edge

dec_label_pc_100099b8:                            ; preds = %dec_label_pc_100099a4.dec_label_pc_100099a4_crit_edge, %dec_label_pc_1000999c
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 2, 1, 0 }
  uselistorder i1* %cr7_eq.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100099a4.dec_label_pc_100099a4_crit_edge, { 1, 0 }
}

define i32 @function_100099bc(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100099bc:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8 @__decompiler_undefined_function_2()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_100099c0 = load i32, i32* @lr, align 4
  store i32 %v0_100099c0, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_100099d0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268474852, i32* @lr, align 4
  %v3_100099e0 = call i32 @function_10008f38(i32 1076655123, i32 %v2_100099d0, i32 %v2_100099d0)
  %v2_100099e4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_100099e4, i32* @r4, align 4
  store i32 %v3_100099e0, i32* @r30, align 4
  %v3_100099e8 = icmp eq i32 %v3_100099e0, 0
  %v0_100099f0 = load i32, i32* @r31, align 4
  br i1 %v3_100099e8, label %dec_label_pc_100099f8, label %dec_label_pc_10009a40

dec_label_pc_100099f8:                            ; preds = %dec_label_pc_100099bc
  %v1_100099f0 = add i32 %v0_100099f0, 17
  %v3_10009a10 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_10009a10, i32* %r0.global-to-local, align 4
  %v2_10009a14 = add i32 %v0_100099f0, 4
  %v3_10009a14 = inttoptr i32 %v2_10009a14 to i32*
  store i32 %tmp7, i32* %v3_10009a14, align 4
  %v0_10009a18 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009a18 = load i32, i32* @r31, align 4
  %v2_10009a18 = inttoptr i32 %v1_10009a18 to i32*
  store i32 %v0_10009a18, i32* %v2_10009a18, align 4
  %v0_10009a1c = load i32, i32* %r11.global-to-local, align 4
  %v1_10009a1c = load i32, i32* @r31, align 4
  %v2_10009a1c = add i32 %v1_10009a1c, 8
  %v3_10009a1c = inttoptr i32 %v2_10009a1c to i32*
  store i32 %v0_10009a1c, i32* %v3_10009a1c, align 4
  %v0_10009a20 = load i32, i32* %r10.global-to-local, align 4
  %v1_10009a20 = load i32, i32* @r31, align 4
  %v2_10009a20 = add i32 %v1_10009a20, 12
  %v3_10009a20 = inttoptr i32 %v2_10009a20 to i32*
  store i32 %v0_10009a20, i32* %v3_10009a20, align 4
  %v3_10009a24 = load i32, i32* @r31, align 4
  %v4_10009a24 = add i32 %v3_10009a24, 16
  %v5_10009a24 = inttoptr i32 %v4_10009a24 to i8*
  store i8 %tmp4, i8* %v5_10009a24, align 1
  %v1_10009a28 = load i32, i32* @r31, align 4
  %v2_10009a28 = add i32 %v1_10009a28, 52
  %v3_10009a28 = inttoptr i32 %v2_10009a28 to i32*
  store i32 %tmp3, i32* %v3_10009a28, align 4
  %v1_10009a2c = load i32, i32* @r31, align 4
  %v2_10009a2c = add i32 %v1_10009a2c, 56
  %v3_10009a2c = inttoptr i32 %v2_10009a2c to i32*
  store i32 %tmp2, i32* %v3_10009a2c, align 4
  store i32 268474932, i32* @lr, align 4
  %v6_10009a30 = sext i8 %tmp4 to i32
  %v8_10009a30 = call i32 @function_1000b6a8(i32 %v1_100099f0, i32 %v2_100099e4, i32 19, i32 %tmp2, i32 %tmp3, i32 %v6_10009a30, i32 %tmp7)
  store i32 268474944, i32* @lr, align 4
  %v3_10009a3c = call i32 @function_1000990c(i32 %v8_10009a30, i32 0, i32 13)
  %v0_10009a44.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10009a40

dec_label_pc_10009a40:                            ; preds = %dec_label_pc_100099bc, %dec_label_pc_100099f8
  %v0_10009a44 = phi i32 [ %v3_100099e0, %dec_label_pc_100099bc ], [ %v0_10009a44.pre, %dec_label_pc_100099f8 ]
  store i32 %v0_100099c0, i32* %r0.global-to-local, align 4
  ret i32 %v0_10009a44

; uselistorder directives
  uselistorder i32 %v2_100099d0, { 1, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32 13, { 6, 7, 8, 9, 10, 11, 0, 1, 12, 13, 2, 14, 15, 3, 16, 17, 4, 18, 19, 5 }
  uselistorder label %dec_label_pc_10009a40, { 1, 0 }
}

define i32 @function_10009a58() local_unnamed_addr {
dec_label_pc_10009a58:
  %r27.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10009a58 = load i32, i32* @r4, align 4
  %v3_10009a58 = icmp eq i32 %v0_10009a58, 1
  %v0_10009a68 = load i32, i32* @r3, align 4
  store i32 %v0_10009a68, i32* %r27.global-to-local, align 4
  %v0_10009a70 = load i32, i32* @r5, align 4
  store i32 %v0_10009a70, i32* @r31, align 4
  br i1 %v3_10009a58, label %dec_label_pc_10009a94, label %dec_label_pc_10009a78

dec_label_pc_10009a78:                            ; preds = %dec_label_pc_10009a58
  %v3_10009a78 = icmp eq i32 %v0_10009a58, 2
  br i1 %v3_10009a78, label %dec_label_pc_10009ab4, label %dec_label_pc_10009a80

dec_label_pc_10009a80:                            ; preds = %dec_label_pc_10009a78
  %v3_10009a80 = icmp eq i32 %v0_10009a58, 0
  store i32 -2144570348, i32* @r30, align 4
  br i1 %v3_10009a80, label %dec_label_pc_10009abc, label %dec_label_pc_10009aa0

dec_label_pc_10009a94:                            ; preds = %dec_label_pc_10009a58
  store i32 -2144570347, i32* @r30, align 4
  br label %dec_label_pc_10009abc

dec_label_pc_10009aa0:                            ; preds = %dec_label_pc_10009a80
  %v0_10009aa0 = call i32 @function_10009824()
  store i32 -1, i32* @r28, align 4
  %v2_10009aac = inttoptr i32 %v0_10009aa0 to i32*
  store i32 22, i32* %v2_10009aac, align 4
  br label %dec_label_pc_10009ba4

dec_label_pc_10009ab4:                            ; preds = %dec_label_pc_10009a78
  store i32 -2144570346, i32* @r30, align 4
  br label %dec_label_pc_10009abc

dec_label_pc_10009abc:                            ; preds = %dec_label_pc_10009a80, %dec_label_pc_10009a94, %dec_label_pc_10009ab4
  %v1_10009abc = inttoptr i32 %v0_10009a70 to i32*
  %v2_10009abc = load i32, i32* %v1_10009abc, align 4
  store i32 19, i32* @r5, align 4
  %v1_10009ac4 = add i32 %v0_10009a70, 4
  %v2_10009ac4 = inttoptr i32 %v1_10009ac4 to i32*
  %v3_10009ac4 = load i32, i32* %v2_10009ac4, align 4
  store i32 %v3_10009ac4, i32* %r9.global-to-local, align 4
  %v1_10009ac8 = add i32 %v0_10009a70, 17
  store i32 %v1_10009ac8, i32* @r4, align 4
  %v1_10009acc = add i32 %v0_10009a70, 8
  %v2_10009acc = inttoptr i32 %v1_10009acc to i32*
  %v3_10009acc = load i32, i32* %v2_10009acc, align 4
  %v2_10009ad0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10009ad0, i32* @r3, align 4
  %v2_10009ad8 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_10009abc, i32* %stack_var_-72, align 4
  store i32 268475144, i32* @lr, align 4
  %v0_10009b04 = call i32 @function_1000b60c()
  %v0_10009b08 = load i32, i32* %r27.global-to-local, align 4
  %v0_10009b0c = load i32, i32* @r30, align 4
  store i32 268475164, i32* @lr, align 4
  %v3_10009b18 = call i32 @function_10008f38(i32 %v0_10009b08, i32 %v0_10009b0c, i32 %v2_10009ad8)
  store i32 %v3_10009b18, i32* @r28, align 4
  %v3_10009b1c = icmp eq i32 %v3_10009b18, 0
  br i1 %v3_10009b1c, label %dec_label_pc_10009b24, label %dec_label_pc_10009ba4

dec_label_pc_10009b24:                            ; preds = %dec_label_pc_10009abc
  %v0_10009b24 = load i32, i32* @r30, align 4
  %v3_10009b28 = icmp eq i32 %v0_10009b24, -2144570348
  br i1 %v3_10009b28, label %dec_label_pc_10009b30, label %dec_label_pc_10009ba0

dec_label_pc_10009b30:                            ; preds = %dec_label_pc_10009b24
  %v0_10009b30 = call i32 @function_10009824()
  store i32 %v0_10009b30, i32* @r29, align 4
  %v0_10009b40 = load i32, i32* %r27.global-to-local, align 4
  %v1_10009b48 = inttoptr i32 %v0_10009b30 to i32*
  %v2_10009b48 = load i32, i32* %v1_10009b48, align 4
  store i32 %v2_10009b48, i32* @r30, align 4
  store i32 268475220, i32* @lr, align 4
  %v3_10009b50 = call i32 @function_10008f38(i32 %v0_10009b40, i32 1076655123, i32 %v2_10009ad8)
  %v3_10009b54 = icmp eq i32 %v3_10009b50, 0
  br i1 %v3_10009b54, label %dec_label_pc_10009b64, label %dec_label_pc_10009b5c

dec_label_pc_10009b5c:                            ; preds = %dec_label_pc_10009b30
  %v0_10009b5c = load i32, i32* @r30, align 4
  %v1_10009b5c = load i32, i32* @r29, align 4
  %v2_10009b5c = inttoptr i32 %v1_10009b5c to i32*
  store i32 %v0_10009b5c, i32* %v2_10009b5c, align 4
  br label %dec_label_pc_10009ba4

dec_label_pc_10009b64:                            ; preds = %dec_label_pc_10009b30
  %v0_10009b64 = load i32, i32* @r31, align 4
  %v1_10009b64 = add i32 %v0_10009b64, 8
  %v2_10009b64 = inttoptr i32 %v1_10009b64 to i32*
  %v3_10009b64 = load i32, i32* %v2_10009b64, align 4
  %v1_10009b6c = call i32 @__asm_rlwinm(i32 %v3_10009b64, i32 0, i32 19, i32 20)
  %v1_10009b70 = call i32 @__asm_rlwinm(i32 %v3_10009acc, i32 0, i32 19, i32 20)
  store i32 %v1_10009b70, i32* %r9.global-to-local, align 4
  %v4_10009b74 = icmp eq i32 %v1_10009b6c, %v1_10009b70
  br i1 %v4_10009b74, label %dec_label_pc_10009b7c, label %dec_label_pc_10009b90

dec_label_pc_10009b7c:                            ; preds = %dec_label_pc_10009b64
  %v1_10009b7c = and i32 %v3_10009b64, 768
  store i32 %v1_10009b7c, i32* %r9.global-to-local, align 4
  %v3_10009b7c = icmp eq i32 %v1_10009b7c, 0
  br i1 %v3_10009b7c, label %dec_label_pc_10009ba0, label %dec_label_pc_10009b84

dec_label_pc_10009b84:                            ; preds = %dec_label_pc_10009b7c
  %v1_10009b84 = call i32 @__asm_rlwinm(i32 %v3_10009acc, i32 0, i32 22, i32 23)
  %v0_10009b88 = load i32, i32* %r9.global-to-local, align 4
  %v4_10009b88 = icmp eq i32 %v0_10009b88, %v1_10009b84
  br i1 %v4_10009b88, label %dec_label_pc_10009ba0, label %dec_label_pc_10009b90

dec_label_pc_10009b90:                            ; preds = %dec_label_pc_10009b64, %dec_label_pc_10009b84
  store i32 -1, i32* @r28, align 4
  %v1_10009b98 = load i32, i32* @r29, align 4
  %v2_10009b98 = inttoptr i32 %v1_10009b98 to i32*
  store i32 22, i32* %v2_10009b98, align 4
  br label %dec_label_pc_10009ba4

dec_label_pc_10009ba0:                            ; preds = %dec_label_pc_10009b24, %dec_label_pc_10009b84, %dec_label_pc_10009b7c
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10009ba4

dec_label_pc_10009ba4:                            ; preds = %dec_label_pc_10009abc, %dec_label_pc_10009b90, %dec_label_pc_10009b5c, %dec_label_pc_10009aa0, %dec_label_pc_10009ba0
  %v0_10009ba8 = load i32, i32* @r28, align 4
  ret i32 %v0_10009ba8

; uselistorder directives
  uselistorder i32 %v0_10009a70, { 1, 0, 3, 2, 4 }
  uselistorder i32 768, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @function_10008f38, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10009ba4, { 4, 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10009ba0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10009b90, { 1, 0 }
  uselistorder label %dec_label_pc_10009abc, { 2, 1, 0 }
}

define i32 @function_10009bbc(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009bbc:
  %stack_var_-24 = alloca i32, align 4
  %v2_10009bc4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10009bc4, i32* @r4, align 4
  store i32 268475344, i32* @lr, align 4
  %v1_10009bcc = bitcast i32* %stack_var_-24 to i8*
  %v2_10009bcc = call i32 @function_1000b6dc(i8* %v1_10009bcc)
  %v3_10009bd0 = icmp eq i32 %v2_10009bcc, 0
  br i1 %v3_10009bd0, label %dec_label_pc_10009be0, label %dec_label_pc_10009bdc

dec_label_pc_10009bdc:                            ; preds = %dec_label_pc_10009bbc
  %v3_10009bdc = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_10009be0

dec_label_pc_10009be0:                            ; preds = %dec_label_pc_10009bbc, %dec_label_pc_10009bdc
  %v0_10009bec = phi i32 [ -1, %dec_label_pc_10009bbc ], [ %v3_10009bdc, %dec_label_pc_10009bdc ]
  ret i32 %v0_10009bec

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009be0, { 1, 0 }
}

define i32 @function_10009bf0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009bf0:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10009c04 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268475412, i32* @lr, align 4
  %v2_10009c10 = call i32 @function_1000af10(i32 5, i32 %v2_10009c04)
  ret i32 %v2_10009c10

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10009c24(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009c24:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10009c38 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268475464, i32* @lr, align 4
  %v2_10009c44 = call i32 @function_1000af10(i32 2, i32 %v2_10009c38)
  ret i32 %v2_10009c44

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10009c58() local_unnamed_addr {
dec_label_pc_10009c58:
  %stack_var_-24 = alloca i32, align 4
  %v0_10009c60 = load i32, i32* @r3, align 4
  store i32 %v0_10009c60, i32* %stack_var_-24, align 4
  %v2_10009c6c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268475516, i32* @lr, align 4
  %v2_10009c78 = call i32 @function_1000af10(i32 3, i32 %v2_10009c6c)
  ret i32 %v2_10009c78

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10009c8c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009c8c:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10009ca0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268475568, i32* @lr, align 4
  %v2_10009cac = call i32 @function_1000af10(i32 6, i32 %v2_10009ca0)
  ret i32 %v2_10009cac

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10009cc0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10009cc0:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10009cd4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268475628, i32* @lr, align 4
  %v2_10009ce8 = call i32 @function_1000af10(i32 15, i32 %v2_10009cd4)
  ret i32 %v2_10009ce8

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 15, { 0, 38, 25, 26, 6, 27, 7, 28, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 18, 19, 20, 21, 22, 23, 29, 24, 30, 31, 2, 32, 33, 3, 34, 35, 4, 36, 37, 5 }
}

define i32 @function_10009cfc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009cfc:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10009d10 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268475676, i32* @lr, align 4
  %v2_10009d18 = call i32 @function_1000af10(i32 4, i32 %v2_10009d10)
  ret i32 %v2_10009d18

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10009d2c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10009d2c:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10009d40 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268475732, i32* @lr, align 4
  %v2_10009d50 = call i32 @function_1000af10(i32 10, i32 %v2_10009d40)
  ret i32 %v2_10009d50

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10009d64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10009d64:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10009d78 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268475796, i32* @lr, align 4
  %v2_10009d90 = call i32 @function_1000af10(i32 12, i32 %v2_10009d78)
  ret i32 %v2_10009d90

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_10009da4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10009da4:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10009db8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268475852, i32* @lr, align 4
  %v2_10009dc8 = call i32 @function_1000af10(i32 9, i32 %v2_10009db8)
  ret i32 %v2_10009dc8

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 9, { 0, 6, 7, 8, 17, 18, 19, 1, 20, 2, 21, 9, 22, 3, 10, 11, 12, 13, 14, 23, 15, 24, 4, 37, 25, 26, 27, 5, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 16 }
}

define i32 @function_10009ddc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10009ddc:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10009df0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268475916, i32* @lr, align 4
  %v2_10009e08 = call i32 @function_1000af10(i32 11, i32 %v2_10009df0)
  ret i32 %v2_10009e08

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_10009e1c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10009e1c:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10009e30 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268475976, i32* @lr, align 4
  %v2_10009e44 = call i32 @function_1000af10(i32 14, i32 %v2_10009e30)
  ret i32 %v2_10009e44

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_10009e58(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009e58:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10009e6c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268476028, i32* @lr, align 4
  %v2_10009e78 = call i32 @function_1000af10(i32 1, i32 %v2_10009e6c)
  ret i32 %v2_10009e78

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_1000af10, { 2, 1, 0, 5, 6, 11, 7, 10, 9, 4, 3, 8 }
}

define i32 @function_10009e8c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009e8c:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %arg1.off = add i32 %arg1, -1
  %tmp4 = icmp ult i32 %arg1.off, 64
  br i1 %tmp4, label %dec_label_pc_10009ebc, label %dec_label_pc_10009ea8

dec_label_pc_10009ea8:                            ; preds = %dec_label_pc_10009e8c
  %v0_10009ea8 = call i32 @function_10009824()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10009eb4 = inttoptr i32 %v0_10009ea8 to i32*
  store i32 22, i32* %v2_10009eb4, align 4
  %v0_10009ec8.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009ec4

dec_label_pc_10009ebc:                            ; preds = %dec_label_pc_10009e8c
  %v0_10009ebc = call i32 @function_1000a00c()
  store i32 %v0_10009ebc, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009ec4

dec_label_pc_10009ec4:                            ; preds = %dec_label_pc_10009ea8, %dec_label_pc_10009ebc
  %v0_10009ec8 = phi i32 [ %v0_10009ec8.pre, %dec_label_pc_10009ea8 ], [ %v0_10009ebc, %dec_label_pc_10009ebc ]
  ret i32 %v0_10009ec8

; uselistorder directives
  uselistorder label %dec_label_pc_10009ec4, { 1, 0 }
}

define i32 @function_10009ed8(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009ed8:
  store i32 268476144, i32* @lr, align 4
  %v3_10009eec = call i32 @function_1000990c(i32 0, i32 128, i32 128)
  ret i32 0
}

define i32 @function_10009f04(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009f04:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_10009f04 = icmp eq i32 %arg2, -1
  store i32 %arg1, i32* %r31.global-to-local, align 4
  br i1 %v3_10009f04, label %dec_label_pc_10009f30, label %dec_label_pc_10009f20

dec_label_pc_10009f20:                            ; preds = %dec_label_pc_10009f04
  %tmp20 = icmp slt i32 %arg1, 1
  br i1 %tmp20, label %dec_label_pc_10009f30, label %dec_label_pc_10009f28

dec_label_pc_10009f28:                            ; preds = %dec_label_pc_10009f20
  %tmp21 = icmp slt i32 %arg1, 65
  br i1 %tmp21, label %dec_label_pc_10009f60.lr.ph, label %dec_label_pc_10009f30

dec_label_pc_10009f30:                            ; preds = %dec_label_pc_10009f28, %dec_label_pc_10009f20, %dec_label_pc_10009f04
  %v0_10009f30 = call i32 @function_10009824()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10009f3c = inttoptr i32 %v0_10009f30 to i32*
  store i32 22, i32* %v2_10009f3c, align 4
  %v0_10009fd0.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009fcc

dec_label_pc_10009f60.lr.ph:                      ; preds = %dec_label_pc_10009f28
  %v2_10009f50 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_10009f50, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-296, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_10009f6022 = add i32 %v2_10009f50, 128
  %v3_10009f6023 = inttoptr i32 %v2_10009f6022 to i32*
  store i32 0, i32* %v3_10009f6023, align 4
  %v0_10009f6424 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009f6425 = add i32 %v0_10009f6424, -1
  store i32 %v1_10009f6425, i32* %r11.global-to-local, align 4
  %v1_10009f6826 = mul i32 %v1_10009f6425, 4
  %v1_10009f6c27 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009f6c28 = add i32 %v1_10009f6c27, %v1_10009f6826
  store i32 %v2_10009f6c28, i32* %r9.global-to-local, align 4
  %v0_10009f7029 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009f7030 = add i32 %v0_10009f7029, -1
  store i32 %v1_10009f7030, i32* %ctr.global-to-local, align 4
  %v2_10009f7031 = icmp eq i32 %v1_10009f7030, 0
  br i1 %v2_10009f7031, label %dec_label_pc_10009f74, label %dec_label_pc_10009f60.dec_label_pc_10009f60_crit_edge

dec_label_pc_10009f60.dec_label_pc_10009f60_crit_edge: ; preds = %dec_label_pc_10009f60.lr.ph, %dec_label_pc_10009f60.dec_label_pc_10009f60_crit_edge
  %v2_10009f6c32 = phi i32 [ %v2_10009f6c, %dec_label_pc_10009f60.dec_label_pc_10009f60_crit_edge ], [ %v2_10009f6c28, %dec_label_pc_10009f60.lr.ph ]
  %v0_10009f60.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_10009f60 = add i32 %v2_10009f6c32, 4
  %v3_10009f60 = inttoptr i32 %v2_10009f60 to i32*
  store i32 %v0_10009f60.pre, i32* %v3_10009f60, align 4
  %v0_10009f64 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009f64 = add i32 %v0_10009f64, -1
  store i32 %v1_10009f64, i32* %r11.global-to-local, align 4
  %v1_10009f68 = mul i32 %v1_10009f64, 4
  %v1_10009f6c = load i32, i32* %r8.global-to-local, align 4
  %v2_10009f6c = add i32 %v1_10009f6c, %v1_10009f68
  store i32 %v2_10009f6c, i32* %r9.global-to-local, align 4
  %v0_10009f70 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009f70 = add i32 %v0_10009f70, -1
  store i32 %v1_10009f70, i32* %ctr.global-to-local, align 4
  %v2_10009f70 = icmp eq i32 %v1_10009f70, 0
  br i1 %v2_10009f70, label %dec_label_pc_10009f74, label %dec_label_pc_10009f60.dec_label_pc_10009f60_crit_edge

dec_label_pc_10009f74:                            ; preds = %dec_label_pc_10009f60.dec_label_pc_10009f60_crit_edge, %dec_label_pc_10009f60.lr.ph
  %v0_10009f78.pre = load i32, i32* %r31.global-to-local, align 4
  %v2_10009f74 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v2_10009f74, i32* @r3, align 4
  store i32 %v0_10009f78.pre, i32* @r4, align 4
  %v0_10009f7c = call i32 @function_1000a00c()
  %v1_10009f80 = icmp slt i32 %v0_10009f7c, 0
  br i1 %v1_10009f80, label %dec_label_pc_10009fc8, label %dec_label_pc_10009f88

dec_label_pc_10009f88:                            ; preds = %dec_label_pc_10009f74
  %v0_10009f8c = load i32, i32* %r31.global-to-local, align 4
  %v2_10009f94 = call i32 @function_10009fe4(i32 ptrtoint (i32* @global_var_1001c4a8.338 to i32), i32 %v0_10009f8c)
  %v2_10009fa0 = ptrtoint i32* %stack_var_-156 to i32
  store i32 268476344, i32* @lr, align 4
  %v4_10009fb4 = call i32 @function_1000b79c(i32 %v0_10009f8c, i32* nonnull %stack_var_-296, i32 %v2_10009fa0)
  %v1_10009fb8 = icmp slt i32 %v4_10009fb4, 0
  br i1 %v1_10009fb8, label %dec_label_pc_10009fc8, label %dec_label_pc_10009fc0

dec_label_pc_10009fc0:                            ; preds = %dec_label_pc_10009f88
  %v3_10009fc0 = load i32, i32* %stack_var_-156, align 4
  store i32 %v3_10009fc0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009fcc

dec_label_pc_10009fc8:                            ; preds = %dec_label_pc_10009f88, %dec_label_pc_10009f74
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009fcc

dec_label_pc_10009fcc:                            ; preds = %dec_label_pc_10009fc0, %dec_label_pc_10009f30, %dec_label_pc_10009fc8
  %v0_10009fd0 = phi i32 [ %v3_10009fc0, %dec_label_pc_10009fc0 ], [ %v0_10009fd0.pre, %dec_label_pc_10009f30 ], [ -1, %dec_label_pc_10009fc8 ]
  ret i32 %v0_10009fd0

; uselistorder directives
  uselistorder i32 %v1_10009f70, { 1, 0 }
  uselistorder i32 %v2_10009f6c, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32* %r11.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009fcc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009f60.dec_label_pc_10009f60_crit_edge, { 1, 0 }
}

define i32 @function_10009fe4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009fe4:
  %v1_10009fe4 = add i32 %arg2, -1
  %v1_10009fe8 = call i32 @__asm_rlwinm(i32 %v1_10009fe4, i32 29, i32 3, i32 29)
  %v1_10009fec = urem i32 %v1_10009fe4, 32
  %v2_10009ff0 = add i32 %v1_10009fe8, %arg1
  %v3_10009ff0 = inttoptr i32 %v2_10009ff0 to i32*
  %v4_10009ff0 = load i32, i32* %v3_10009ff0, align 4
  %v3_10009ff8 = shl i32 1, %v1_10009fec
  %v2_10009ffc = and i32 %v4_10009ff0, %v3_10009ff8
  %v2_1000a000 = icmp ne i32 %v2_10009ffc, 0
  %v5_1000a004 = zext i1 %v2_1000a000 to i32
  ret i32 %v5_1000a004
}

define i32 @function_1000a00c() local_unnamed_addr {
dec_label_pc_1000a00c:
  %r0.global-to-local = alloca i32, align 4
  %v0_1000a00c = load i32, i32* @r4, align 4
  %v1_1000a00c = add i32 %v0_1000a00c, -1
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1000a014 = call i32 @__asm_rlwinm(i32 %v1_1000a00c, i32 29, i32 3, i32 29)
  %v1_1000a018 = urem i32 %v1_1000a00c, 32
  %v1_1000a01c = load i32, i32* @r3, align 4
  %v2_1000a01c = add i32 %v1_1000a01c, %v1_1000a014
  %v3_1000a01c = inttoptr i32 %v2_1000a01c to i32*
  %v4_1000a01c = load i32, i32* %v3_1000a01c, align 4
  %v0_1000a020 = load i32, i32* %r0.global-to-local, align 4
  %v3_1000a020 = shl i32 %v0_1000a020, %v1_1000a018
  store i32 %v3_1000a020, i32* %r0.global-to-local, align 4
  %v2_1000a024 = or i32 %v3_1000a020, %v4_1000a01c
  store i32 %v2_1000a024, i32* %v3_1000a01c, align 4
  ret i32 0
}

define i32 @function_1000a034(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a034:
  %v1_1000a034 = add i32 %arg2, -1
  %v1_1000a03c = call i32 @__asm_rlwinm(i32 %v1_1000a034, i32 29, i32 3, i32 29)
  %v1_1000a040 = urem i32 %v1_1000a034, 32
  %v2_1000a044 = add i32 %v1_1000a03c, %arg1
  %v3_1000a044 = inttoptr i32 %v2_1000a044 to i32*
  %v4_1000a044 = load i32, i32* %v3_1000a044, align 4
  %v3_1000a048 = shl i32 -2, %v1_1000a040
  %v4_1000a048 = sub nsw i32 32, %v1_1000a040
  %v5_1000a048 = lshr i32 -2, %v4_1000a048
  %v6_1000a048 = or i32 %v5_1000a048, %v3_1000a048
  %v2_1000a04c = and i32 %v6_1000a048, %v4_1000a044
  store i32 %v2_1000a04c, i32* %v3_1000a044, align 4
  ret i32 0
}

define i32 @function_1000a05c() local_unnamed_addr {
dec_label_pc_1000a05c:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_1000a05c = load i32, i32* @r3, align 4
  %v3_1000a05c = icmp eq i32 %v0_1000a05c, 0
  br i1 %v3_1000a05c, label %dec_label_pc_1000a078.thread, label %dec_label_pc_1000a078

dec_label_pc_1000a078.thread:                     ; preds = %dec_label_pc_1000a05c
  br label %dec_label_pc_1000a084

dec_label_pc_1000a078:                            ; preds = %dec_label_pc_1000a05c
  %v3_1000a07c = icmp ugt i32 %v0_1000a05c, -8
  br i1 %v3_1000a07c, label %dec_label_pc_1000a18c, label %dec_label_pc_1000a084

dec_label_pc_1000a084:                            ; preds = %dec_label_pc_1000a078.thread, %dec_label_pc_1000a078
  %v0_1000a08816 = phi i32 [ 1, %dec_label_pc_1000a078.thread ], [ %v0_1000a05c, %dec_label_pc_1000a078 ]
  %v1_1000a088 = add i32 %v0_1000a08816, 4
  store i32 ptrtoint (i32* @global_var_1001c358.339 to i32), i32* @r29, align 4
  store i32 %v1_1000a088, i32* %stack_var_-40, align 4
  %v0_1000a098 = call i32 @function_1000abb8()
  %v2_1000a0a0 = ptrtoint i32* %stack_var_-40 to i32
  %v3_1000a0a8 = call i32 @function_1000a454(i32* inttoptr (i32 268550784 to i32*), i32 %v2_1000a0a0)
  store i32 %v3_1000a0a8, i32* %r31.global-to-local, align 4
  %v0_1000a0b4 = call i32 @function_1000abb8()
  %v3_1000a0b8 = icmp eq i32 %v3_1000a0a8, 0
  br i1 %v3_1000a0b8, label %dec_label_pc_1000a0c0, label %dec_label_pc_1000a170.thread

dec_label_pc_1000a170.thread:                     ; preds = %dec_label_pc_1000a084
  br label %dec_label_pc_1000a184

dec_label_pc_1000a0c0:                            ; preds = %dec_label_pc_1000a084
  %v3_1000a0c4 = load i32, i32* @global_var_1001c2dc.342, align 4
  store i32 %v3_1000a0c4, i32* %r31.global-to-local, align 4
  %v3_1000a0c8 = load i32, i32* %stack_var_-40, align 4
  %v2_1000a0cc = icmp ult i32 %v3_1000a0c8, %v3_1000a0c4
  br i1 %v2_1000a0cc, label %dec_label_pc_1000a0e4, label %dec_label_pc_1000a0d4

dec_label_pc_1000a0d4:                            ; preds = %dec_label_pc_1000a0c0
  %v1_1000a0d8 = sub i32 0, %v3_1000a0c4
  %v2_1000a0d4 = add i32 %v3_1000a0c4, -1
  %v1_1000a0dc = add i32 %v2_1000a0d4, %v3_1000a0c8
  %v2_1000a0e0 = and i32 %v1_1000a0dc, %v1_1000a0d8
  store i32 %v2_1000a0e0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a0e4

dec_label_pc_1000a0e4:                            ; preds = %dec_label_pc_1000a0c0, %dec_label_pc_1000a0d4
  %v0_1000a0f0 = call i32 @function_1000abb8()
  %v0_1000a0f4 = load i32, i32* %r31.global-to-local, align 4
  store i32 268476668, i32* @lr, align 4
  %v1_1000a0f8 = call i32 @function_1000b3d8(i32 %v0_1000a0f4)
  %v3_1000a0fc = icmp eq i32 %v1_1000a0f8, -1
  br i1 %v3_1000a0fc, label %dec_label_pc_1000a11c, label %dec_label_pc_1000a104

dec_label_pc_1000a104:                            ; preds = %dec_label_pc_1000a0e4
  %v1_1000a104 = add i32 %v1_1000a0f8, 3
  %v1_1000a108 = call i32 @__asm_rlwinm(i32 %v1_1000a104, i32 0, i32 0, i32 29)
  store i32 %v1_1000a108, i32* @r30, align 4
  %v4_1000a10c = icmp eq i32 %v1_1000a108, %v1_1000a0f8
  br i1 %v4_1000a10c, label %dec_label_pc_1000a11c, label %dec_label_pc_1000a114

dec_label_pc_1000a114:                            ; preds = %dec_label_pc_1000a104
  %v2_1000a114 = sub i32 %v1_1000a108, %v1_1000a0f8
  store i32 268476700, i32* @lr, align 4
  %v1_1000a118 = call i32 @function_1000b3d8(i32 %v2_1000a114)
  br label %dec_label_pc_1000a11c

dec_label_pc_1000a11c:                            ; preds = %dec_label_pc_1000a104, %dec_label_pc_1000a0e4, %dec_label_pc_1000a114
  %v0_1000a124 = call i32 @function_1000abb8()
  %v0_1000a128 = load i32, i32* @r30, align 4
  %v3_1000a128 = icmp eq i32 %v0_1000a128, -1
  br i1 %v3_1000a128, label %dec_label_pc_1000a18c, label %dec_label_pc_1000a170

dec_label_pc_1000a170:                            ; preds = %dec_label_pc_1000a11c
  store i32 ptrtoint (i32* @global_var_1001c358.339 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1001c280 to i32), i32* @r29, align 4
  %v0_1000a144 = call i32 @function_1000abb8()
  %v0_1000a148 = load i32, i32* @r31, align 4
  %v0_1000a14c = load i32, i32* @r30, align 4
  %v0_1000a150 = load i32, i32* @r29, align 4
  store i32 268476760, i32* @lr, align 4
  %v3_1000a154 = inttoptr i32 %v0_1000a150 to i32*
  %v4_1000a154 = call i32 @function_1000a5d8(i32* %v3_1000a154, i32 %v0_1000a14c, i32 %v0_1000a148)
  %v0_1000a158 = load i32, i32* @r29, align 4
  %v2_1000a160 = inttoptr i32 %v0_1000a158 to i32*
  %v3_1000a160 = call i32 @function_1000a454(i32* %v2_1000a160, i32 %v2_1000a0a0)
  store i32 %v3_1000a160, i32* %r31.global-to-local, align 4
  %v0_1000a16c = call i32 @function_1000abb8()
  %v3_1000a170 = icmp eq i32 %v3_1000a160, 0
  br i1 %v3_1000a170, label %dec_label_pc_1000a184.thread, label %dec_label_pc_1000a184

dec_label_pc_1000a184.thread:                     ; preds = %dec_label_pc_1000a170
  br label %dec_label_pc_1000a18c

dec_label_pc_1000a184:                            ; preds = %dec_label_pc_1000a170, %dec_label_pc_1000a170.thread
  %v0_1000a184.pr6 = phi i32 [ %v3_1000a0a8, %dec_label_pc_1000a170.thread ], [ %v3_1000a160, %dec_label_pc_1000a170 ]
  %v3_1000a178 = load i32, i32* %stack_var_-40, align 4
  %v2_1000a17c = inttoptr i32 %v0_1000a184.pr6 to i32*
  store i32 %v3_1000a178, i32* %v2_1000a17c, align 4
  %v0_1000a180 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000a180 = add i32 %v0_1000a180, 4
  store i32 %v1_1000a180, i32* @r31, align 4
  %v3_1000a184 = icmp eq i32 %v1_1000a180, 0
  br i1 %v3_1000a184, label %dec_label_pc_1000a18c, label %dec_label_pc_1000a19c

dec_label_pc_1000a18c:                            ; preds = %dec_label_pc_1000a184.thread, %dec_label_pc_1000a184, %dec_label_pc_1000a11c, %dec_label_pc_1000a078
  %v0_1000a18c = call i32 @function_10009824()
  %v2_1000a194 = inttoptr i32 %v0_1000a18c to i32*
  store i32 12, i32* %v2_1000a194, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_1000a19c

dec_label_pc_1000a19c:                            ; preds = %dec_label_pc_1000a184, %dec_label_pc_1000a18c
  %v0_1000a1a0 = phi i32 [ %v1_1000a180, %dec_label_pc_1000a184 ], [ 0, %dec_label_pc_1000a18c ]
  ret i32 %v0_1000a1a0

; uselistorder directives
  uselistorder i32 %v1_1000a180, { 1, 0, 2 }
  uselistorder i32 %v1_1000a108, { 1, 0, 2 }
  uselistorder i32 %v1_1000a0f8, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1000a0c4, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1000a0a8, { 1, 0, 2 }
  uselistorder i32 %v0_1000a05c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 0, 1, 3, 2 }
  uselistorder i32* %r31.global-to-local, { 4, 0, 2, 1, 3, 5 }
  uselistorder label %dec_label_pc_1000a19c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a18c, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000a11c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a0e4, { 1, 0 }
  uselistorder label %dec_label_pc_1000a084, { 1, 0 }
}

define i32 @function_1000a1b4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a1b4:
  %v3_1000a1b4 = icmp eq i32 %arg1, 0
  %v2_1000a1c4 = mul i32 %arg2, %arg1
  store i32 %v2_1000a1c4, i32* @r31, align 4
  br i1 %v3_1000a1b4, label %dec_label_pc_1000a1f0, label %dec_label_pc_1000a1d0

dec_label_pc_1000a1d0:                            ; preds = %dec_label_pc_1000a1b4
  %v2_1000a1d0 = udiv i32 %v2_1000a1c4, %arg1
  store i32 0, i32* @r30, align 4
  %v4_1000a1d8 = icmp eq i32 %v2_1000a1d0, %arg2
  br i1 %v4_1000a1d8, label %dec_label_pc_1000a1f0, label %dec_label_pc_1000a1e0

dec_label_pc_1000a1e0:                            ; preds = %dec_label_pc_1000a1d0
  %v0_1000a1e0 = call i32 @function_10009824()
  %v2_1000a1e8 = inttoptr i32 %v0_1000a1e0 to i32*
  store i32 12, i32* %v2_1000a1e8, align 4
  br label %dec_label_pc_1000a20c

dec_label_pc_1000a1f0:                            ; preds = %dec_label_pc_1000a1d0, %dec_label_pc_1000a1b4
  store i32 %v2_1000a1c4, i32* @r3, align 4
  store i32 268476920, i32* @lr, align 4
  %v0_1000a1f4 = call i32 @function_1000a05c()
  %v0_1000a1f8 = load i32, i32* @r31, align 4
  store i32 %v0_1000a1f4, i32* @r30, align 4
  %v3_1000a1fc = icmp eq i32 %v0_1000a1f4, 0
  br i1 %v3_1000a1fc, label %dec_label_pc_1000a20c, label %dec_label_pc_1000a208

dec_label_pc_1000a208:                            ; preds = %dec_label_pc_1000a1f0
  store i32 268476940, i32* @lr, align 4
  %v3_1000a208 = call i32 @function_1000990c(i32 0, i32 %v0_1000a1f8, i32 %v0_1000a1f8)
  br label %dec_label_pc_1000a20c

dec_label_pc_1000a20c:                            ; preds = %dec_label_pc_1000a1f0, %dec_label_pc_1000a1e0, %dec_label_pc_1000a208
  %v0_1000a210 = load i32, i32* @r30, align 4
  ret i32 %v0_1000a210

; uselistorder directives
  uselistorder i32 %v0_1000a1f8, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a20c, { 2, 0, 1 }
}

define i32 @function_1000a224() local_unnamed_addr {
dec_label_pc_1000a224:
  %v0_1000a224 = load i32, i32* @r3, align 4
  %v3_1000a224 = icmp eq i32 %v0_1000a224, 0
  br i1 %v3_1000a224, label %dec_label_pc_1000a310, label %dec_label_pc_1000a23c

dec_label_pc_1000a23c:                            ; preds = %dec_label_pc_1000a224
  %v1_1000a240 = add i32 %v0_1000a224, -4
  %v2_1000a240 = inttoptr i32 %v1_1000a240 to i32*
  %v3_1000a240 = load i32, i32* %v2_1000a240, align 4
  store i32 %v3_1000a240, i32* @r28, align 4
  %v0_1000a254 = call i32 @function_1000abb8()
  %v0_1000a25c = load i32, i32* @r28, align 4
  store i32 268477032, i32* @lr, align 4
  %v4_1000a264 = call i32 @function_1000a5d8(i32* nonnull @global_var_1001c280, i32 %v1_1000a240, i32 %v0_1000a25c)
  %v3_1000a26c = load i32, i32* @global_var_1001c2dc.342, align 4
  store i32 %v4_1000a264, i32* @r29, align 4
  %v1_1000a274 = inttoptr i32 %v4_1000a264 to i32*
  %v2_1000a274 = load i32, i32* %v1_1000a274, align 4
  store i32 %v2_1000a274, i32* @r27, align 4
  %v1_1000a278 = mul i32 %v3_1000a26c, 8
  %v2_1000a27c = icmp ult i32 %v2_1000a274, %v1_1000a278
  br i1 %v2_1000a27c, label %dec_label_pc_1000a2b0, label %dec_label_pc_1000a284

dec_label_pc_1000a284:                            ; preds = %dec_label_pc_1000a23c
  store i32 ptrtoint (i32* @global_var_1001c528.343 to i32), i32* @r28, align 4
  %v0_1000a294 = call i32 @function_1000abb8()
  store i32 268477088, i32* @lr, align 4
  %v1_1000a29c = call i32 @function_1000b3d8(i32 0)
  %v0_1000a2a0 = load i32, i32* @r31, align 4
  %v4_1000a2a0 = icmp eq i32 %v0_1000a2a0, %v1_1000a29c
  br i1 %v4_1000a2a0, label %dec_label_pc_1000a2b8, label %dec_label_pc_1000a2a8

dec_label_pc_1000a2a8:                            ; preds = %dec_label_pc_1000a284
  %v0_1000a2ac = call i32 @function_1000abb8()
  br label %dec_label_pc_1000a2b0

dec_label_pc_1000a2b0:                            ; preds = %dec_label_pc_1000a23c, %dec_label_pc_1000a2a8
  br label %dec_label_pc_1000a30c

dec_label_pc_1000a2b8:                            ; preds = %dec_label_pc_1000a284
  %v0_1000a2b8 = load i32, i32* @r29, align 4
  %v1_1000a2b8 = add i32 %v0_1000a2b8, 4
  %v2_1000a2b8 = inttoptr i32 %v1_1000a2b8 to i32*
  %v3_1000a2b8 = load i32, i32* %v2_1000a2b8, align 4
  %v3_1000a2bc = icmp eq i32 %v3_1000a2b8, 0
  br i1 %v3_1000a2bc, label %dec_label_pc_1000a2cc, label %dec_label_pc_1000a2c4

dec_label_pc_1000a2c4:                            ; preds = %dec_label_pc_1000a2b8
  %v1_1000a2c4 = add i32 %v0_1000a2b8, 8
  %v2_1000a2c4 = inttoptr i32 %v1_1000a2c4 to i32*
  %v3_1000a2c4 = load i32, i32* %v2_1000a2c4, align 4
  %v2_1000a2c8 = add i32 %v3_1000a2b8, 8
  %v3_1000a2c8 = inttoptr i32 %v2_1000a2c8 to i32*
  store i32 %v3_1000a2c4, i32* %v3_1000a2c8, align 4
  %v0_1000a2cc.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000a2cc

dec_label_pc_1000a2cc:                            ; preds = %dec_label_pc_1000a2b8, %dec_label_pc_1000a2c4
  %v0_1000a2cc = phi i32 [ %v0_1000a2b8, %dec_label_pc_1000a2b8 ], [ %v0_1000a2cc.pre, %dec_label_pc_1000a2c4 ]
  %v1_1000a2cc = add i32 %v0_1000a2cc, 8
  %v2_1000a2cc = inttoptr i32 %v1_1000a2cc to i32*
  %v3_1000a2cc = load i32, i32* %v2_1000a2cc, align 4
  %v1_1000a2d0 = add i32 %v0_1000a2cc, 4
  %v2_1000a2d0 = inttoptr i32 %v1_1000a2d0 to i32*
  %v3_1000a2d0 = load i32, i32* %v2_1000a2d0, align 4
  %v3_1000a2d4 = icmp eq i32 %v3_1000a2cc, 0
  br i1 %v3_1000a2d4, label %dec_label_pc_1000a2e4, label %dec_label_pc_1000a2dc

dec_label_pc_1000a2dc:                            ; preds = %dec_label_pc_1000a2cc
  %v2_1000a2dc = add i32 %v3_1000a2cc, 4
  %v3_1000a2dc = inttoptr i32 %v2_1000a2dc to i32*
  store i32 %v3_1000a2d0, i32* %v3_1000a2dc, align 4
  br label %dec_label_pc_1000a2e8

dec_label_pc_1000a2e4:                            ; preds = %dec_label_pc_1000a2cc
  store i32 %v3_1000a2d0, i32* @global_var_1001c280, align 4
  br label %dec_label_pc_1000a2e8

dec_label_pc_1000a2e8:                            ; preds = %dec_label_pc_1000a2dc, %dec_label_pc_1000a2e4
  %v0_1000a2f0 = call i32 @function_1000abb8()
  %v0_1000a2f4 = load i32, i32* @r27, align 4
  %v1_1000a2f4 = load i32, i32* @r29, align 4
  %v0_1000a2fc = load i32, i32* @r31, align 4
  %v2_1000a2f4 = sub i32 12, %v0_1000a2f4
  %v1_1000a2f8 = add i32 %v2_1000a2f4, %v1_1000a2f4
  %v2_1000a2fc = sub i32 %v1_1000a2f8, %v0_1000a2fc
  store i32 268477188, i32* @lr, align 4
  %v1_1000a300 = call i32 @function_1000b3d8(i32 %v2_1000a2fc)
  br label %dec_label_pc_1000a30c

dec_label_pc_1000a30c:                            ; preds = %dec_label_pc_1000a2b0, %dec_label_pc_1000a2e8
  %v0_1000a30c = call i32 @function_1000abb8()
  br label %dec_label_pc_1000a310

dec_label_pc_1000a310:                            ; preds = %dec_label_pc_1000a224, %dec_label_pc_1000a30c
  %.0 = phi i32 [ undef, %dec_label_pc_1000a224 ], [ %v0_1000a30c, %dec_label_pc_1000a30c ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v0_1000a2cc, { 1, 0 }
  uselistorder i32 (i32)* @function_1000b3d8, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a310, { 1, 0 }
  uselistorder label %dec_label_pc_1000a30c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a2e8, { 1, 0 }
  uselistorder label %dec_label_pc_1000a2cc, { 1, 0 }
  uselistorder label %dec_label_pc_1000a2b0, { 1, 0 }
}

define i32 @function_1000a324(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a324:
  %r27.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v3_1000a324 = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r28, align 4
  br i1 %v3_1000a324, label %dec_label_pc_1000a340, label %dec_label_pc_1000a34c

dec_label_pc_1000a340:                            ; preds = %dec_label_pc_1000a324
  store i32 ptrtoint ([3 x i8]* @global_var_1000a344.347 to i32), i32* @lr, align 4
  %v0_1000a340 = call i32 @function_1000a224()
  br label %dec_label_pc_1000a358

dec_label_pc_1000a34c:                            ; preds = %dec_label_pc_1000a324
  %v3_1000a34c = icmp eq i32 %arg1, 0
  br i1 %v3_1000a34c, label %dec_label_pc_1000a358, label %dec_label_pc_1000a364

dec_label_pc_1000a358:                            ; preds = %dec_label_pc_1000a34c, %dec_label_pc_1000a340
  %storemerge = phi i32 [ 0, %dec_label_pc_1000a340 ], [ %arg2, %dec_label_pc_1000a34c ]
  store i32 %storemerge, i32* @r3, align 4
  store i32 268477276, i32* @lr, align 4
  %v0_1000a358 = call i32 @function_1000a05c()
  store i32 %v0_1000a358, i32* @r28, align 4
  br label %dec_label_pc_1000a43c

dec_label_pc_1000a364:                            ; preds = %dec_label_pc_1000a34c
  %v1_1000a364 = add i32 %arg2, 7
  %v1_1000a368 = add i32 %arg1, -4
  store i32 %v1_1000a368, i32* %r27.global-to-local, align 4
  %v1_1000a36c = call i32 @__asm_rlwinm(i32 %v1_1000a364, i32 0, i32 0, i32 29)
  store i32 %v1_1000a36c, i32* @r31, align 4
  %v2_1000a370 = inttoptr i32 %v1_1000a368 to i32*
  %v3_1000a370 = load i32, i32* %v2_1000a370, align 4
  store i32 %v3_1000a370, i32* @r30, align 4
  %v2_1000a374 = icmp ugt i32 %v1_1000a36c, 11
  br i1 %v2_1000a374, label %dec_label_pc_1000a380, label %dec_label_pc_1000a37c

dec_label_pc_1000a37c:                            ; preds = %dec_label_pc_1000a364
  store i32 12, i32* @r31, align 4
  br label %dec_label_pc_1000a380

dec_label_pc_1000a380:                            ; preds = %dec_label_pc_1000a364, %dec_label_pc_1000a37c
  %v0_1000a400 = phi i32 [ %v1_1000a36c, %dec_label_pc_1000a364 ], [ 12, %dec_label_pc_1000a37c ]
  %v3_1000a380 = icmp ugt i32 %v0_1000a400, %v3_1000a370
  br i1 %v3_1000a380, label %dec_label_pc_1000a388, label %dec_label_pc_1000a400

dec_label_pc_1000a388:                            ; preds = %dec_label_pc_1000a380
  store i32 ptrtoint (i32* @global_var_1001c358.339 to i32), i32* @r29, align 4
  %v0_1000a394 = call i32 @function_1000abb8()
  %v0_1000a39c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000a39c = load i32, i32* @r30, align 4
  %v2_1000a39c = add i32 %v1_1000a39c, %v0_1000a39c
  %v1_1000a3a0 = load i32, i32* @r31, align 4
  %v2_1000a3a0 = sub i32 %v1_1000a3a0, %v1_1000a39c
  %v4_1000a3a8 = call i32 @function_1000a4f4(i32* nonnull @global_var_1001c280, i32 %v2_1000a39c, i32 %v2_1000a3a0)
  store i32 %v4_1000a3a8, i32* %r27.global-to-local, align 4
  %v0_1000a3b4 = call i32 @function_1000abb8()
  %v3_1000a3b8 = icmp eq i32 %v4_1000a3a8, 0
  br i1 %v3_1000a3b8, label %dec_label_pc_1000a3cc, label %dec_label_pc_1000a3c0

dec_label_pc_1000a3c0:                            ; preds = %dec_label_pc_1000a388
  %v0_1000a3c0 = load i32, i32* @r30, align 4
  %v2_1000a3c0 = add i32 %v0_1000a3c0, %v4_1000a3a8
  %v1_1000a3c4 = load i32, i32* @r28, align 4
  %v2_1000a3c4 = add i32 %v1_1000a3c4, -4
  %v3_1000a3c4 = inttoptr i32 %v2_1000a3c4 to i32*
  store i32 %v2_1000a3c0, i32* %v3_1000a3c4, align 4
  br label %dec_label_pc_1000a43c

dec_label_pc_1000a3cc:                            ; preds = %dec_label_pc_1000a388
  %v0_1000a3cc = load i32, i32* @r31, align 4
  %v1_1000a3cc = add i32 %v0_1000a3cc, -4
  store i32 %v1_1000a3cc, i32* @r3, align 4
  store i32 268477396, i32* @lr, align 4
  %v0_1000a3d0 = call i32 @function_1000a05c()
  store i32 %v0_1000a3d0, i32* @r3, align 4
  store i32 %v0_1000a3d0, i32* @r31, align 4
  %v3_1000a3d4 = icmp eq i32 %v0_1000a3d0, 0
  br i1 %v3_1000a3d4, label %dec_label_pc_1000a3dc, label %dec_label_pc_1000a3e4

dec_label_pc_1000a3dc:                            ; preds = %dec_label_pc_1000a3cc
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000a43c

dec_label_pc_1000a3e4:                            ; preds = %dec_label_pc_1000a3cc
  %v0_1000a3e4 = load i32, i32* @r28, align 4
  store i32 %v0_1000a3e4, i32* @r4, align 4
  %v0_1000a3e8 = load i32, i32* @r30, align 4
  %v1_1000a3e8 = add i32 %v0_1000a3e8, -4
  store i32 %v1_1000a3e8, i32* @r5, align 4
  store i32 268477424, i32* @lr, align 4
  %v0_1000a3ec = call i32 @function_1000b60c()
  %v0_1000a3f0 = load i32, i32* @r28, align 4
  store i32 %v0_1000a3f0, i32* @r3, align 4
  store i32 268477432, i32* @lr, align 4
  %v0_1000a3f4 = call i32 @function_1000a224()
  %v0_1000a3f8 = load i32, i32* @r31, align 4
  store i32 %v0_1000a3f8, i32* @r28, align 4
  br label %dec_label_pc_1000a43c

dec_label_pc_1000a400:                            ; preds = %dec_label_pc_1000a380
  %v1_1000a400 = add i32 %v0_1000a400, 28
  %v3_1000a404 = icmp ugt i32 %v1_1000a400, %v3_1000a370
  br i1 %v3_1000a404, label %dec_label_pc_1000a43c, label %dec_label_pc_1000a40c

dec_label_pc_1000a40c:                            ; preds = %dec_label_pc_1000a400
  store i32 ptrtoint (i32* @global_var_1001c358.339 to i32), i32* @r29, align 4
  %v0_1000a418 = call i32 @function_1000abb8()
  %v0_1000a420 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000a420 = load i32, i32* @r31, align 4
  %v2_1000a420 = add i32 %v1_1000a420, %v0_1000a420
  %v1_1000a424 = load i32, i32* @r30, align 4
  %v2_1000a424 = sub i32 %v1_1000a424, %v1_1000a420
  store i32 268477488, i32* @lr, align 4
  %v4_1000a42c = call i32 @function_1000a5d8(i32* nonnull @global_var_1001c280, i32 %v2_1000a420, i32 %v2_1000a424)
  %v0_1000a434 = call i32 @function_1000abb8()
  %v0_1000a438 = load i32, i32* @r31, align 4
  %v1_1000a438 = load i32, i32* @r28, align 4
  %v2_1000a438 = add i32 %v1_1000a438, -4
  %v3_1000a438 = inttoptr i32 %v2_1000a438 to i32*
  store i32 %v0_1000a438, i32* %v3_1000a438, align 4
  br label %dec_label_pc_1000a43c

dec_label_pc_1000a43c:                            ; preds = %dec_label_pc_1000a400, %dec_label_pc_1000a3e4, %dec_label_pc_1000a3dc, %dec_label_pc_1000a3c0, %dec_label_pc_1000a358, %dec_label_pc_1000a40c
  %v0_1000a440 = load i32, i32* @r28, align 4
  ret i32 %v0_1000a440

; uselistorder directives
  uselistorder i32 %v1_1000a420, { 1, 0 }
  uselistorder i32 %v4_1000a3a8, { 1, 0, 2 }
  uselistorder i32 %v1_1000a39c, { 1, 0 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* @global_var_1001c280, { 0, 1, 3, 2, 4 }
  uselistorder i32 ()* @function_1000a05c, { 2, 1, 0, 5, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 4, 3 }
  uselistorder i32 ()* @function_1000a224, { 4, 3, 7, 6, 5, 11, 10, 9, 8, 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000a43c, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_1000a380, { 1, 0 }
}

define i32 @function_1000a454(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a454:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v1_1000a454 = inttoptr i32 %arg2 to i32*
  %v2_1000a454 = load i32, i32* %v1_1000a454, align 4
  %v1_1000a458 = add i32 %v2_1000a454, 3
  store i32 %v1_1000a458, i32* %r9.global-to-local, align 4
  %v1_1000a45c = call i32 @__asm_rlwinm(i32 %v1_1000a458, i32 0, i32 0, i32 29)
  %v2_1000a460 = icmp ugt i32 %v1_1000a45c, 11
  br i1 %v2_1000a460, label %dec_label_pc_1000a4e4.preheader, label %dec_label_pc_1000a468

dec_label_pc_1000a468:                            ; preds = %dec_label_pc_1000a454
  br label %dec_label_pc_1000a4e4.preheader

dec_label_pc_1000a4e4.preheader:                  ; preds = %dec_label_pc_1000a454, %dec_label_pc_1000a468
  %storemerge20 = phi i32 [ 12, %dec_label_pc_1000a468 ], [ %v1_1000a45c, %dec_label_pc_1000a454 ]
  %v0_1000a4c8 = phi i32 [ 12, %dec_label_pc_1000a468 ], [ %v1_1000a45c, %dec_label_pc_1000a454 ]
  store i32 %storemerge20, i32* %r11.global-to-local, align 4
  %storemerge2 = load i32, i32* %arg1, align 4
  store i32 %storemerge2, i32* %r9.global-to-local, align 4
  %v3_1000a4e45 = icmp eq i32 %storemerge2, 0
  br i1 %v3_1000a4e45, label %dec_label_pc_1000a4ec, label %dec_label_pc_1000a474

dec_label_pc_1000a474:                            ; preds = %dec_label_pc_1000a4e4.preheader, %dec_label_pc_1000a4e0
  %v0_1000a4e0 = phi i32 [ %storemerge, %dec_label_pc_1000a4e0 ], [ %storemerge2, %dec_label_pc_1000a4e4.preheader ]
  %v1_1000a474 = inttoptr i32 %v0_1000a4e0 to i32*
  %v2_1000a474 = load i32, i32* %v1_1000a474, align 4
  store i32 %v2_1000a474, i32* %r10.global-to-local, align 4
  %v2_1000a478 = icmp ult i32 %v2_1000a474, %v0_1000a4c8
  br i1 %v2_1000a478, label %dec_label_pc_1000a4e0, label %dec_label_pc_1000a480

dec_label_pc_1000a480:                            ; preds = %dec_label_pc_1000a474
  %v1_1000a480 = add i32 %v0_1000a4c8, 44
  %v2_1000a484 = icmp ult i32 %v2_1000a474, %v1_1000a480
  br i1 %v2_1000a484, label %dec_label_pc_1000a48c, label %dec_label_pc_1000a4c8

dec_label_pc_1000a48c:                            ; preds = %dec_label_pc_1000a480
  %v1_1000a48c = add i32 %v0_1000a4e0, 4
  %v2_1000a48c = inttoptr i32 %v1_1000a48c to i32*
  %v3_1000a48c = load i32, i32* %v2_1000a48c, align 4
  store i32 %v3_1000a48c, i32* %r11.global-to-local, align 4
  %v3_1000a490 = icmp eq i32 %v3_1000a48c, 0
  br i1 %v3_1000a490, label %dec_label_pc_1000a4a0, label %dec_label_pc_1000a498

dec_label_pc_1000a498:                            ; preds = %dec_label_pc_1000a48c
  %v1_1000a498 = add i32 %v0_1000a4e0, 8
  %v2_1000a498 = inttoptr i32 %v1_1000a498 to i32*
  %v3_1000a498 = load i32, i32* %v2_1000a498, align 4
  %v2_1000a49c = add i32 %v3_1000a48c, 8
  %v3_1000a49c = inttoptr i32 %v2_1000a49c to i32*
  store i32 %v3_1000a498, i32* %v3_1000a49c, align 4
  %v0_1000a4a0.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_1000a4bc.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a4a0

dec_label_pc_1000a4a0:                            ; preds = %dec_label_pc_1000a48c, %dec_label_pc_1000a498
  %v0_1000a4bc = phi i32 [ %v2_1000a474, %dec_label_pc_1000a48c ], [ %v0_1000a4bc.pre, %dec_label_pc_1000a498 ]
  %v0_1000a4a0 = phi i32 [ %v0_1000a4e0, %dec_label_pc_1000a48c ], [ %v0_1000a4a0.pre, %dec_label_pc_1000a498 ]
  %v1_1000a4a0 = add i32 %v0_1000a4a0, 8
  %v2_1000a4a0 = inttoptr i32 %v1_1000a4a0 to i32*
  %v3_1000a4a0 = load i32, i32* %v2_1000a4a0, align 4
  %v1_1000a4a4 = add i32 %v0_1000a4a0, 4
  %v2_1000a4a4 = inttoptr i32 %v1_1000a4a4 to i32*
  %v3_1000a4a4 = load i32, i32* %v2_1000a4a4, align 4
  %v3_1000a4a8 = icmp eq i32 %v3_1000a4a0, 0
  store i32 %v0_1000a4bc, i32* %r11.global-to-local, align 4
  br i1 %v3_1000a4a8, label %dec_label_pc_1000a4bc, label %dec_label_pc_1000a4b0

dec_label_pc_1000a4b0:                            ; preds = %dec_label_pc_1000a4a0
  %v2_1000a4b4 = add i32 %v3_1000a4a0, 4
  %v3_1000a4b4 = inttoptr i32 %v2_1000a4b4 to i32*
  store i32 %v3_1000a4a4, i32* %v3_1000a4b4, align 4
  br label %dec_label_pc_1000a4d0

dec_label_pc_1000a4bc:                            ; preds = %dec_label_pc_1000a4a0
  store i32 %v3_1000a4a4, i32* %arg1, align 4
  br label %dec_label_pc_1000a4d0

dec_label_pc_1000a4c8:                            ; preds = %dec_label_pc_1000a480
  %v2_1000a4c8 = sub i32 %v2_1000a474, %v0_1000a4c8
  store i32 %v2_1000a4c8, i32* %v1_1000a474, align 4
  br label %dec_label_pc_1000a4d0

dec_label_pc_1000a4d0:                            ; preds = %dec_label_pc_1000a4bc, %dec_label_pc_1000a4b0, %dec_label_pc_1000a4c8
  %v0_1000a4d0 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a4d0 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000a4d0 = sub i32 %v1_1000a4d0, %v0_1000a4d0
  store i32 %v2_1000a4d0, i32* %r9.global-to-local, align 4
  %v0_1000a4d4 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000a4d4, i32* %v1_1000a454, align 4
  %v0_1000a4d8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a4d8 = add i32 %v0_1000a4d8, 12
  ret i32 %v1_1000a4d8

dec_label_pc_1000a4e0:                            ; preds = %dec_label_pc_1000a474
  %v1_1000a4e0 = add i32 %v0_1000a4e0, 4
  %storemerge.in = inttoptr i32 %v1_1000a4e0 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v3_1000a4e4 = icmp eq i32 %storemerge, 0
  br i1 %v3_1000a4e4, label %dec_label_pc_1000a4e4.dec_label_pc_1000a4ec_crit_edge, label %dec_label_pc_1000a474

dec_label_pc_1000a4e4.dec_label_pc_1000a4ec_crit_edge: ; preds = %dec_label_pc_1000a4e0
  br label %dec_label_pc_1000a4ec

dec_label_pc_1000a4ec:                            ; preds = %dec_label_pc_1000a4e4.dec_label_pc_1000a4ec_crit_edge, %dec_label_pc_1000a4e4.preheader
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_1000a4a0, { 1, 0 }
  uselistorder i32 %v2_1000a474, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1000a4e0, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_1000a4c8, { 1, 2, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 4, 5, 2, 1, 3, 6 }
  uselistorder i32* %r11.global-to-local, { 3, 1, 2, 0 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000a4d0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a4a0, { 1, 0 }
  uselistorder label %dec_label_pc_1000a474, { 1, 0 }
  uselistorder label %dec_label_pc_1000a4e4.preheader, { 1, 0 }
}

define i32 @function_1000a4f4(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a4f4:
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_1000a4f4 = load i32, i32* %arg1, align 4
  store i32 %v2_1000a4f4, i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v1_1000a4fc = add i32 %arg3, 3
  %v3_1000a5803 = icmp eq i32 %v2_1000a4f4, 0
  br i1 %v3_1000a5803, label %dec_label_pc_1000a588, label %dec_label_pc_1000a504

dec_label_pc_1000a504:                            ; preds = %dec_label_pc_1000a4f4, %dec_label_pc_1000a57c
  %v0_1000a57c = phi i32 [ %v3_1000a57c, %dec_label_pc_1000a57c ], [ %v2_1000a4f4, %dec_label_pc_1000a4f4 ]
  %v1_1000a504 = inttoptr i32 %v0_1000a57c to i32*
  %v2_1000a504 = load i32, i32* %v1_1000a504, align 4
  %v2_1000a508 = sub i32 %v0_1000a57c, %v2_1000a504
  %v1_1000a50c = add i32 %v2_1000a508, 12
  %v3_1000a510 = icmp ugt i32 %v1_1000a50c, %arg2
  br i1 %v3_1000a510, label %dec_label_pc_1000a57c, label %dec_label_pc_1000a518

dec_label_pc_1000a518:                            ; preds = %dec_label_pc_1000a504
  %v4_1000a510 = icmp eq i32 %v1_1000a50c, %arg2
  br i1 %v4_1000a510, label %dec_label_pc_1000a520, label %dec_label_pc_1000a588

dec_label_pc_1000a520:                            ; preds = %dec_label_pc_1000a518
  %v1_1000a520 = call i32 @__asm_rlwinm(i32 %v1_1000a4fc, i32 0, i32 0, i32 29)
  %v2_1000a524 = icmp ult i32 %v2_1000a504, %v1_1000a520
  br i1 %v2_1000a524, label %dec_label_pc_1000a588, label %dec_label_pc_1000a52c

dec_label_pc_1000a52c:                            ; preds = %dec_label_pc_1000a520
  %v1_1000a52c = add i32 %v1_1000a520, 44
  %v2_1000a530 = icmp ult i32 %v2_1000a504, %v1_1000a52c
  br i1 %v2_1000a530, label %dec_label_pc_1000a538, label %dec_label_pc_1000a56c

dec_label_pc_1000a538:                            ; preds = %dec_label_pc_1000a52c
  %v0_1000a538 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a538 = add i32 %v0_1000a538, 4
  %v2_1000a538 = inttoptr i32 %v1_1000a538 to i32*
  %v3_1000a538 = load i32, i32* %v2_1000a538, align 4
  %v3_1000a53c = icmp eq i32 %v3_1000a538, 0
  br i1 %v3_1000a53c, label %dec_label_pc_1000a54c, label %dec_label_pc_1000a544

dec_label_pc_1000a544:                            ; preds = %dec_label_pc_1000a538
  %v1_1000a544 = add i32 %v0_1000a538, 8
  %v2_1000a544 = inttoptr i32 %v1_1000a544 to i32*
  %v3_1000a544 = load i32, i32* %v2_1000a544, align 4
  %v2_1000a548 = add i32 %v3_1000a538, 8
  %v3_1000a548 = inttoptr i32 %v2_1000a548 to i32*
  store i32 %v3_1000a544, i32* %v3_1000a548, align 4
  %v0_1000a54c.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000a54c

dec_label_pc_1000a54c:                            ; preds = %dec_label_pc_1000a538, %dec_label_pc_1000a544
  %v0_1000a54c = phi i32 [ %v0_1000a538, %dec_label_pc_1000a538 ], [ %v0_1000a54c.pre, %dec_label_pc_1000a544 ]
  %v1_1000a54c = add i32 %v0_1000a54c, 8
  %v2_1000a54c = inttoptr i32 %v1_1000a54c to i32*
  %v3_1000a54c = load i32, i32* %v2_1000a54c, align 4
  %v1_1000a550 = add i32 %v0_1000a54c, 4
  %v2_1000a550 = inttoptr i32 %v1_1000a550 to i32*
  %v3_1000a550 = load i32, i32* %v2_1000a550, align 4
  %v3_1000a554 = icmp eq i32 %v3_1000a54c, 0
  br i1 %v3_1000a554, label %dec_label_pc_1000a564, label %dec_label_pc_1000a55c

dec_label_pc_1000a55c:                            ; preds = %dec_label_pc_1000a54c
  %v2_1000a55c = add i32 %v3_1000a54c, 4
  %v3_1000a55c = inttoptr i32 %v2_1000a55c to i32*
  store i32 %v3_1000a550, i32* %v3_1000a55c, align 4
  ret i32 %v2_1000a504

dec_label_pc_1000a564:                            ; preds = %dec_label_pc_1000a54c
  %v1_1000a564 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a564 = inttoptr i32 %v1_1000a564 to i32*
  store i32 %v3_1000a550, i32* %v2_1000a564, align 4
  ret i32 %v2_1000a504

dec_label_pc_1000a56c:                            ; preds = %dec_label_pc_1000a52c
  %v2_1000a56c = sub i32 %v2_1000a504, %v1_1000a520
  %v1_1000a574 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000a574 = inttoptr i32 %v1_1000a574 to i32*
  store i32 %v2_1000a56c, i32* %v2_1000a574, align 4
  ret i32 %v1_1000a520

dec_label_pc_1000a57c:                            ; preds = %dec_label_pc_1000a504
  %v1_1000a57c = add i32 %v0_1000a57c, 4
  %v2_1000a57c = inttoptr i32 %v1_1000a57c to i32*
  %v3_1000a57c = load i32, i32* %v2_1000a57c, align 4
  store i32 %v3_1000a57c, i32* %r11.global-to-local, align 4
  %v3_1000a580 = icmp eq i32 %v3_1000a57c, 0
  br i1 %v3_1000a580, label %dec_label_pc_1000a580.dec_label_pc_1000a588.loopexit_crit_edge, label %dec_label_pc_1000a504

dec_label_pc_1000a580.dec_label_pc_1000a588.loopexit_crit_edge: ; preds = %dec_label_pc_1000a57c
  br label %dec_label_pc_1000a588

dec_label_pc_1000a588:                            ; preds = %dec_label_pc_1000a4f4, %dec_label_pc_1000a580.dec_label_pc_1000a588.loopexit_crit_edge, %dec_label_pc_1000a518, %dec_label_pc_1000a520
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_1000a57c, { 1, 2, 0 }
  uselistorder i32 %v0_1000a54c, { 1, 0 }
  uselistorder i32 %v1_1000a520, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000a504, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_1000a57c, { 0, 2, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1000a588, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_1000a54c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a504, { 1, 0 }
}

define i32 @function_1000a590(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000a590:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000a590 = icmp eq i32 %arg3, 0
  %v2_1000a594 = add i32 %arg2, 4
  %v3_1000a594 = inttoptr i32 %v2_1000a594 to i32*
  store i32 %arg4, i32* %v3_1000a594, align 4
  %v2_1000a598 = add i32 %arg2, 8
  %v3_1000a598 = inttoptr i32 %v2_1000a598 to i32*
  store i32 %arg3, i32* %v3_1000a598, align 4
  br i1 %v3_1000a590, label %dec_label_pc_1000a5a8, label %dec_label_pc_1000a5a0

dec_label_pc_1000a5a0:                            ; preds = %dec_label_pc_1000a590
  %v2_1000a5a0 = add i32 %arg3, 4
  %v3_1000a5a0 = inttoptr i32 %v2_1000a5a0 to i32*
  store i32 %arg2, i32* %v3_1000a5a0, align 4
  br label %dec_label_pc_1000a5ac

dec_label_pc_1000a5a8:                            ; preds = %dec_label_pc_1000a590
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1000a5ac

dec_label_pc_1000a5ac:                            ; preds = %dec_label_pc_1000a5a0, %dec_label_pc_1000a5a8
  %v3_1000a5ac = icmp eq i32 %arg4, 0
  %v0_1000a5b0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000a5ac, i32 %v0_1000a5b0)
  %v2_1000a5b4 = add i32 %arg4, 8
  %v3_1000a5b4 = inttoptr i32 %v2_1000a5b4 to i32*
  store i32 %arg2, i32* %v3_1000a5b4, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg4, { 0, 2, 1 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_1000a5ac, { 1, 0 }
}

define i32 @function_1000a5bc(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000a5bc:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000a5bc = icmp eq i32 %arg3, 0
  br i1 %v3_1000a5bc, label %dec_label_pc_1000a5cc, label %dec_label_pc_1000a5c4

dec_label_pc_1000a5c4:                            ; preds = %dec_label_pc_1000a5bc
  %v2_1000a5c4 = add i32 %arg3, 4
  %v3_1000a5c4 = inttoptr i32 %v2_1000a5c4 to i32*
  store i32 %arg2, i32* %v3_1000a5c4, align 4
  br label %dec_label_pc_1000a5d0

dec_label_pc_1000a5cc:                            ; preds = %dec_label_pc_1000a5bc
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1000a5d0

dec_label_pc_1000a5d0:                            ; preds = %dec_label_pc_1000a5c4, %dec_label_pc_1000a5cc
  %v2_1000a5d0 = add i32 %arg2, 8
  %v3_1000a5d0 = inttoptr i32 %v2_1000a5d0 to i32*
  store i32 %arg3, i32* %v3_1000a5d0, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a5d0, { 1, 0 }
}

define i32 @function_1000a5d8(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a5d8:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_1000a5f0 = load i32, i32* %arg1, align 4
  store i32 %v2_1000a5f0, i32* @r31, align 4
  %v2_1000a5f4 = add i32 %arg3, %arg2
  store i32 %v2_1000a5f4, i32* %r3.global-to-local, align 4
  %v3_1000a6087 = icmp eq i32 %v2_1000a5f0, 0
  %v1_1000a60c8 = add i32 %v2_1000a5f0, 12
  %tmp69 = icmp uge i32 %v1_1000a60c8, %arg2
  %or.cond10 = or i1 %v3_1000a6087, %tmp69
  br i1 %or.cond10, label %dec_label_pc_1000a618, label %dec_label_pc_1000a600

dec_label_pc_1000a600:                            ; preds = %dec_label_pc_1000a5d8, %dec_label_pc_1000a600
  %v0_1000a66011 = phi i32 [ %v3_1000a604, %dec_label_pc_1000a600 ], [ %v2_1000a5f0, %dec_label_pc_1000a5d8 ]
  store i32 %v0_1000a66011, i32* %r11.global-to-local, align 4
  %v1_1000a604 = add i32 %v0_1000a66011, 4
  %v2_1000a604 = inttoptr i32 %v1_1000a604 to i32*
  %v3_1000a604 = load i32, i32* %v2_1000a604, align 4
  store i32 %v3_1000a604, i32* @r31, align 4
  %v3_1000a608 = icmp eq i32 %v3_1000a604, 0
  %v1_1000a60c = add i32 %v3_1000a604, 12
  %tmp6 = icmp uge i32 %v1_1000a60c, %arg2
  %or.cond = or i1 %v3_1000a608, %tmp6
  br i1 %or.cond, label %dec_label_pc_1000a618, label %dec_label_pc_1000a600

dec_label_pc_1000a618:                            ; preds = %dec_label_pc_1000a600, %dec_label_pc_1000a5d8
  %v0_1000a654.lcssa = phi i32 [ 0, %dec_label_pc_1000a5d8 ], [ %v0_1000a66011, %dec_label_pc_1000a600 ]
  %v0_1000a660.lcssa = phi i32 [ %v2_1000a5f0, %dec_label_pc_1000a5d8 ], [ %v3_1000a604, %dec_label_pc_1000a600 ]
  %v3_1000a608.lcssa = phi i1 [ %v3_1000a6087, %dec_label_pc_1000a5d8 ], [ %v3_1000a608, %dec_label_pc_1000a600 ]
  br i1 %v3_1000a608.lcssa, label %dec_label_pc_1000a6d0, label %dec_label_pc_1000a620

dec_label_pc_1000a620:                            ; preds = %dec_label_pc_1000a618
  %v1_1000a620 = inttoptr i32 %v0_1000a660.lcssa to i32*
  %v2_1000a620 = load i32, i32* %v1_1000a620, align 4
  %v2_1000a624 = sub i32 %v0_1000a660.lcssa, %v2_1000a620
  %v1_1000a628 = add i32 %v2_1000a624, 12
  %v3_1000a62c = icmp ugt i32 %v1_1000a628, %v2_1000a5f4
  br i1 %v3_1000a62c, label %dec_label_pc_1000a6d0, label %dec_label_pc_1000a634

dec_label_pc_1000a634:                            ; preds = %dec_label_pc_1000a620
  %v4_1000a62c = icmp eq i32 %v1_1000a628, %v2_1000a5f4
  %v2_1000a638 = add i32 %v2_1000a620, %arg3
  store i32 %v2_1000a638, i32* @r29, align 4
  br i1 %v4_1000a62c, label %dec_label_pc_1000a640, label %dec_label_pc_1000a670

dec_label_pc_1000a640:                            ; preds = %dec_label_pc_1000a634
  %v3_1000a640 = icmp eq i32 %v0_1000a654.lcssa, 0
  br i1 %v3_1000a640, label %dec_label_pc_1000a6c4, label %dec_label_pc_1000a648

dec_label_pc_1000a648:                            ; preds = %dec_label_pc_1000a640
  %v1_1000a648 = add i32 %v0_1000a654.lcssa, 12
  %v4_1000a64c = icmp eq i32 %v1_1000a648, %arg2
  br i1 %v4_1000a64c, label %dec_label_pc_1000a654, label %dec_label_pc_1000a6c4

dec_label_pc_1000a654:                            ; preds = %dec_label_pc_1000a648
  %v1_1000a654 = inttoptr i32 %v0_1000a654.lcssa to i32*
  %v2_1000a654 = load i32, i32* %v1_1000a654, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_1000a65c = add i32 %v0_1000a654.lcssa, 8
  %v2_1000a65c = inttoptr i32 %v1_1000a65c to i32*
  %v3_1000a65c = load i32, i32* %v2_1000a65c, align 4
  %v2_1000a664 = add i32 %v2_1000a654, %v2_1000a638
  store i32 %v2_1000a664, i32* @r29, align 4
  %v5_1000a668 = call i32 @function_1000a5bc(i32* %arg1, i32 %v0_1000a660.lcssa, i32 %v3_1000a65c, i32 %v2_1000a5f4)
  store i32 %v5_1000a668, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a6c4

dec_label_pc_1000a670:                            ; preds = %dec_label_pc_1000a634
  %v1_1000a670 = add i32 %v0_1000a660.lcssa, 4
  %v2_1000a670 = inttoptr i32 %v1_1000a670 to i32*
  %v3_1000a670 = load i32, i32* %v2_1000a670, align 4
  %v3_1000a674 = icmp eq i32 %v3_1000a670, 0
  br i1 %v3_1000a674, label %dec_label_pc_1000a6ac, label %dec_label_pc_1000a67c

dec_label_pc_1000a67c:                            ; preds = %dec_label_pc_1000a670
  %v1_1000a67c = inttoptr i32 %v3_1000a670 to i32*
  %v2_1000a67c = load i32, i32* %v1_1000a67c, align 4
  %v2_1000a680 = sub i32 %v3_1000a670, %v2_1000a67c
  %v1_1000a684 = add i32 %v2_1000a680, 12
  %v4_1000a688 = icmp eq i32 %v2_1000a5f4, %v1_1000a684
  br i1 %v4_1000a688, label %dec_label_pc_1000a690, label %dec_label_pc_1000a6ac

dec_label_pc_1000a690:                            ; preds = %dec_label_pc_1000a67c
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_1000a69c = add i32 %v2_1000a67c, %v2_1000a638
  store i32 %v2_1000a69c, i32* @r29, align 4
  store i32 %v3_1000a670, i32* @r31, align 4
  %v5_1000a6a4 = call i32 @function_1000a5bc(i32* %arg1, i32 %v3_1000a670, i32 %v0_1000a654.lcssa, i32 %v2_1000a5f4)
  store i32 %v5_1000a6a4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a6c4

dec_label_pc_1000a6ac:                            ; preds = %dec_label_pc_1000a67c, %dec_label_pc_1000a670
  %v2_1000a6ac = add i32 %v0_1000a660.lcssa, %arg3
  store i32 %v2_1000a6ac, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268478148, i32* @lr, align 4
  %v5_1000a6c0 = call i32 @function_1000a590(i32* %arg1, i32 %v2_1000a6ac, i32 %v0_1000a654.lcssa, i32 %v3_1000a670)
  store i32 %v5_1000a6c0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a6c4

dec_label_pc_1000a6c4:                            ; preds = %dec_label_pc_1000a648, %dec_label_pc_1000a640, %dec_label_pc_1000a690, %dec_label_pc_1000a654, %dec_label_pc_1000a6ac
  %v0_1000a6c4 = load i32, i32* @r31, align 4
  store i32 %v0_1000a6c4, i32* @r30, align 4
  %v0_1000a6c8 = load i32, i32* @r29, align 4
  %v2_1000a6c8 = inttoptr i32 %v0_1000a6c4 to i32*
  store i32 %v0_1000a6c8, i32* %v2_1000a6c8, align 4
  br label %dec_label_pc_1000a6ec

dec_label_pc_1000a6d0:                            ; preds = %dec_label_pc_1000a620, %dec_label_pc_1000a618
  %v2_1000a6d0 = add i32 %v2_1000a5f4, -12
  %v3_1000a6d0 = inttoptr i32 %v2_1000a6d0 to i32*
  store i32 %arg3, i32* %v3_1000a6d0, align 4
  %v0_1000a6d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000a6d4 = add i32 %v0_1000a6d4, -12
  store i32 %v1_1000a6d4, i32* @r30, align 4
  %v0_1000a6d8 = load i32, i32* %r11.global-to-local, align 4
  %v0_1000a6dc = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_1000a6dc, i32* %r3.global-to-local, align 4
  %v0_1000a6e0 = load i32, i32* @r31, align 4
  store i32 268478188, i32* @lr, align 4
  %v4_1000a6e8 = inttoptr i32 %v0_1000a6dc to i32*
  %v5_1000a6e8 = call i32 @function_1000a590(i32* %v4_1000a6e8, i32 %v1_1000a6d4, i32 %v0_1000a6d8, i32 %v0_1000a6e0)
  store i32 %v5_1000a6e8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a6ec

dec_label_pc_1000a6ec:                            ; preds = %dec_label_pc_1000a6c4, %dec_label_pc_1000a6d0
  %v0_1000a6f0 = load i32, i32* @r30, align 4
  store i32 %v0_1000a6f0, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000a6f0

; uselistorder directives
  uselistorder i32 %v3_1000a670, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_1000a628, { 1, 0 }
  uselistorder i32 %v0_1000a660.lcssa, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_1000a654.lcssa, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v3_1000a604, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v2_1000a5f4, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 6, 7, 8, 4, 9, 10, 11, 1, 2, 3, 5, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32*, i32, i32, i32)* @function_1000a5bc, { 1, 0 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32* %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1000a6ec, { 1, 0 }
  uselistorder label %dec_label_pc_1000a6c4, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1000a600, { 1, 0 }
}

define i32 @function_1000a704(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a704:
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 10, i32* %r30.global-to-local, align 4
  store i32 1, i32* %r26.global-to-local, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v3_1000a73c = load i32, i32* bitcast (i32** @global_var_1001c28c.350 to i32*), align 4
  %v2_1000a74827 = load i8, i8* %arg1, align 1
  %v3_1000a74828 = zext i8 %v2_1000a74827 to i32
  %v1_1000a74c29 = mul nuw nsw i32 %v3_1000a74828, 2
  %v2_1000a75030 = add i32 %v1_1000a74c29, %v3_1000a73c
  %v3_1000a75031 = inttoptr i32 %v2_1000a75030 to i16*
  %v4_1000a75032 = load i16, i16* %v3_1000a75031, align 2
  %v1_1000a75434 = and i16 %v4_1000a75032, 32
  %v3_1000a75435 = icmp eq i16 %v1_1000a75434, 0
  br i1 %v3_1000a75435, label %dec_label_pc_1000a75c, label %dec_label_pc_1000a744

dec_label_pc_1000a744:                            ; preds = %dec_label_pc_1000a704, %dec_label_pc_1000a744
  %v0_1000a77c36 = phi i32 [ %v1_1000a744, %dec_label_pc_1000a744 ], [ %tmp, %dec_label_pc_1000a704 ]
  %v1_1000a744 = add i32 %v0_1000a77c36, 1
  store i32 %v1_1000a744, i32* %r31.global-to-local, align 4
  %v1_1000a748 = inttoptr i32 %v1_1000a744 to i8*
  %v2_1000a748 = load i8, i8* %v1_1000a748, align 1
  %v3_1000a748 = zext i8 %v2_1000a748 to i32
  %v1_1000a74c = mul nuw nsw i32 %v3_1000a748, 2
  %v2_1000a750 = add i32 %v1_1000a74c, %v3_1000a73c
  %v3_1000a750 = inttoptr i32 %v2_1000a750 to i16*
  %v4_1000a750 = load i16, i16* %v3_1000a750, align 2
  %v1_1000a754 = and i16 %v4_1000a750, 32
  %v3_1000a754 = icmp eq i16 %v1_1000a754, 0
  br i1 %v3_1000a754, label %dec_label_pc_1000a75c, label %dec_label_pc_1000a744

dec_label_pc_1000a75c:                            ; preds = %dec_label_pc_1000a744, %dec_label_pc_1000a704
  %v0_1000a77c.lcssa = phi i32 [ %tmp, %dec_label_pc_1000a704 ], [ %v1_1000a744, %dec_label_pc_1000a744 ]
  %v2_1000a748.lcssa = phi i8 [ %v2_1000a74827, %dec_label_pc_1000a704 ], [ %v2_1000a748, %dec_label_pc_1000a744 ]
  %v3_1000a75c = icmp eq i8 %v2_1000a748.lcssa, 43
  br i1 %v3_1000a75c, label %dec_label_pc_1000a77c, label %dec_label_pc_1000a764

dec_label_pc_1000a764:                            ; preds = %dec_label_pc_1000a75c
  %v3_1000a764 = icmp eq i8 %v2_1000a748.lcssa, 45
  store i32 0, i32* @r28, align 4
  br i1 %v3_1000a764, label %dec_label_pc_1000a77c, label %dec_label_pc_1000a780

dec_label_pc_1000a77c:                            ; preds = %dec_label_pc_1000a75c, %dec_label_pc_1000a764
  %storemerge = phi i32 [ 1, %dec_label_pc_1000a764 ], [ 0, %dec_label_pc_1000a75c ]
  store i32 %storemerge, i32* @r28, align 4
  %v1_1000a77c = add i32 %v0_1000a77c.lcssa, 1
  store i32 %v1_1000a77c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a780

dec_label_pc_1000a780:                            ; preds = %dec_label_pc_1000a764, %dec_label_pc_1000a77c
  %v1_1000a780 = call i32 @__asm_rlwinm.(i32 10, i32 0, i32 28, i32 26)
  %v4_1000a780 = icmp eq i32 %v1_1000a780, 0
  br i1 %v4_1000a780, label %dec_label_pc_1000a78c, label %dec_label_pc_1000a780.dec_label_pc_1000a7c8_crit_edge

dec_label_pc_1000a780.dec_label_pc_1000a7c8_crit_edge: ; preds = %dec_label_pc_1000a780
  %v0_1000a7c8.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000a7c8

dec_label_pc_1000a78c:                            ; preds = %dec_label_pc_1000a780
  %v0_1000a78c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000a78c = inttoptr i32 %v0_1000a78c to i8*
  %v2_1000a78c = load i8, i8* %v1_1000a78c, align 1
  %v0_1000a790 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000a790 = add i32 %v0_1000a790, 10
  store i32 %v1_1000a790, i32* %r30.global-to-local, align 4
  %v3_1000a794 = icmp eq i8 %v2_1000a78c, 48
  br i1 %v3_1000a794, label %dec_label_pc_1000a79c, label %dec_label_pc_1000a7bc

dec_label_pc_1000a79c:                            ; preds = %dec_label_pc_1000a78c
  %v1_1000a79c = add i32 %v0_1000a78c, 1
  %v2_1000a79c = inttoptr i32 %v1_1000a79c to i8*
  %v3_1000a79c = load i8, i8* %v2_1000a79c, align 1
  %v4_1000a79c = zext i8 %v3_1000a79c to i32
  store i32 %v1_1000a79c, i32* %r31.global-to-local, align 4
  %v1_1000a7a0 = add i32 %v0_1000a790, 8
  store i32 %v1_1000a7a0, i32* %r30.global-to-local, align 4
  %v1_1000a7a4 = or i32 %v4_1000a79c, 32
  %v3_1000a7ac = icmp eq i32 %v1_1000a7a4, 120
  br i1 %v3_1000a7ac, label %dec_label_pc_1000a7b4, label %dec_label_pc_1000a7bc

dec_label_pc_1000a7b4:                            ; preds = %dec_label_pc_1000a79c
  %v1_1000a7b4 = mul i32 %v1_1000a7a0, 2
  store i32 %v1_1000a7b4, i32* %r30.global-to-local, align 4
  %v1_1000a7b8 = add i32 %v0_1000a78c, 2
  store i32 %v1_1000a7b8, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a7bc

dec_label_pc_1000a7bc:                            ; preds = %dec_label_pc_1000a79c, %dec_label_pc_1000a78c, %dec_label_pc_1000a7b4
  %v0_1000a87015 = phi i32 [ %v1_1000a79c, %dec_label_pc_1000a7b4 ], [ %tmp, %dec_label_pc_1000a78c ], [ %v1_1000a79c, %dec_label_pc_1000a79c ]
  %v0_1000a7bc = phi i32 [ %v1_1000a7b4, %dec_label_pc_1000a7b4 ], [ %v1_1000a790, %dec_label_pc_1000a78c ], [ %v1_1000a7a0, %dec_label_pc_1000a79c ]
  %tmp22 = icmp slt i32 %v0_1000a7bc, 17
  br i1 %tmp22, label %dec_label_pc_1000a7c8, label %dec_label_pc_1000a7c4

dec_label_pc_1000a7c4:                            ; preds = %dec_label_pc_1000a7bc
  store i32 16, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000a7c8

dec_label_pc_1000a7c8:                            ; preds = %dec_label_pc_1000a780.dec_label_pc_1000a7c8_crit_edge, %dec_label_pc_1000a7bc, %dec_label_pc_1000a7c4
  %v0_1000a87014 = phi i32 [ %tmp, %dec_label_pc_1000a780.dec_label_pc_1000a7c8_crit_edge ], [ %v0_1000a87015, %dec_label_pc_1000a7bc ], [ %v0_1000a87015, %dec_label_pc_1000a7c4 ]
  %v1_1000a7dc = phi i32 [ %v0_1000a7c8.pre, %dec_label_pc_1000a780.dec_label_pc_1000a7c8_crit_edge ], [ %v0_1000a7bc, %dec_label_pc_1000a7bc ], [ 16, %dec_label_pc_1000a7c4 ]
  %v1_1000a7c8 = add i32 %v1_1000a7dc, -2
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_1000a7d0 = icmp ugt i32 %v1_1000a7c8, 34
  br i1 %v2_1000a7d0, label %dec_label_pc_1000a868, label %dec_label_pc_1000a7d8

dec_label_pc_1000a7d8:                            ; preds = %dec_label_pc_1000a7c8
  %v2_1000a7dc = udiv i32 -1, %v1_1000a7dc
  store i32 %v2_1000a7dc, i32* @r29, align 4
  %v2_1000a7e0 = mul i32 %v2_1000a7dc, %v1_1000a7dc
  %v1_1000a7e4 = sub i32 -1, %v2_1000a7e0
  %v1_1000a7e8 = urem i32 %v1_1000a7e4, 256
  store i32 %v1_1000a7e8, i32* @r27, align 4
  %v0_1000a7f4.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a7f4

dec_label_pc_1000a7f0:                            ; preds = %dec_label_pc_1000a85c, %dec_label_pc_1000a844
  %v1_1000a7f8.pre = phi i32 [ %v1_1000a7fc, %dec_label_pc_1000a85c ], [ %v1_1000a7f8.pre.pre, %dec_label_pc_1000a844 ]
  %v0_1000a7f8.pre = phi i32 [ %v2_1000a860, %dec_label_pc_1000a85c ], [ %v0_1000a7f8.pre.pre, %dec_label_pc_1000a844 ]
  %v0_1000a7f0 = phi i32 [ %v1_1000a800, %dec_label_pc_1000a85c ], [ %v0_1000a7f0.pre, %dec_label_pc_1000a844 ]
  br label %dec_label_pc_1000a7f4

dec_label_pc_1000a7f4:                            ; preds = %dec_label_pc_1000a7d8, %dec_label_pc_1000a7f0
  %v0_1000a87012 = phi i32 [ %v0_1000a87014, %dec_label_pc_1000a7d8 ], [ %v0_1000a7f0, %dec_label_pc_1000a7f0 ]
  %v0_1000a800 = phi i32 [ %v0_1000a7f4.pre, %dec_label_pc_1000a7d8 ], [ %v0_1000a7f0, %dec_label_pc_1000a7f0 ]
  %v1_1000a7fc = phi i32 [ %v2_1000a7dc, %dec_label_pc_1000a7d8 ], [ %v1_1000a7f8.pre, %dec_label_pc_1000a7f0 ]
  %v0_1000a85c = phi i32 [ 0, %dec_label_pc_1000a7d8 ], [ %v0_1000a7f8.pre, %dec_label_pc_1000a7f0 ]
  %v1_1000a7f4 = inttoptr i32 %v0_1000a800 to i8*
  %v2_1000a7f4 = load i8, i8* %v1_1000a7f4, align 1
  %v3_1000a7f4 = zext i8 %v2_1000a7f4 to i32
  %v3_1000a7f8 = icmp ugt i32 %v0_1000a85c, %v1_1000a7fc
  %v1_1000a800 = add i32 %v0_1000a800, 1
  store i32 %v1_1000a800, i32* %r31.global-to-local, align 4
  %v1_1000a804 = add nsw i32 %v3_1000a7f4, -48
  %v1_1000a808 = or i32 %v3_1000a7f4, 32
  %v1_1000a80c = urem i32 %v1_1000a804, 256
  %tmp23 = icmp ult i32 %v1_1000a80c, 10
  br i1 %tmp23, label %dec_label_pc_1000a82c, label %dec_label_pc_1000a81c

dec_label_pc_1000a81c:                            ; preds = %dec_label_pc_1000a7f4
  %tmp24 = icmp ult i32 %v1_1000a808, 97
  br i1 %tmp24, label %dec_label_pc_1000a82c, label %dec_label_pc_1000a828

dec_label_pc_1000a828:                            ; preds = %dec_label_pc_1000a81c
  %v1_1000a81c = add nsw i32 %v1_1000a808, -87
  %v1_1000a828 = urem i32 %v1_1000a81c, 256
  br label %dec_label_pc_1000a82c

dec_label_pc_1000a82c:                            ; preds = %dec_label_pc_1000a81c, %dec_label_pc_1000a7f4, %dec_label_pc_1000a828
  %v1_1000a860 = phi i32 [ 40, %dec_label_pc_1000a81c ], [ %v1_1000a80c, %dec_label_pc_1000a7f4 ], [ %v1_1000a828, %dec_label_pc_1000a828 ]
  %v1_1000a82c = load i32, i32* %r30.global-to-local, align 4
  %v2_1000a82c = icmp slt i32 %v1_1000a860, %v1_1000a82c
  br i1 %v2_1000a82c, label %dec_label_pc_1000a834, label %dec_label_pc_1000a868

dec_label_pc_1000a834:                            ; preds = %dec_label_pc_1000a82c
  br i1 %v3_1000a7f8, label %dec_label_pc_1000a844, label %dec_label_pc_1000a838

dec_label_pc_1000a838:                            ; preds = %dec_label_pc_1000a834
  %v1_1000a838 = load i32, i32* @r27, align 4
  %v0_1000a83c.not = icmp ne i32 %v0_1000a85c, %v1_1000a7fc
  %tmp25 = icmp ule i32 %v1_1000a860, %v1_1000a838
  %or.cond = or i1 %tmp25, %v0_1000a83c.not
  br i1 %or.cond, label %dec_label_pc_1000a85c, label %dec_label_pc_1000a844

dec_label_pc_1000a844:                            ; preds = %dec_label_pc_1000a838, %dec_label_pc_1000a834
  %v0_1000a844 = call i32 @function_10009824()
  %v0_1000a848 = load i32, i32* @r28, align 4
  %v1_1000a848 = load i32, i32* %r26.global-to-local, align 4
  %v2_1000a848 = and i32 %v1_1000a848, %v0_1000a848
  store i32 %v2_1000a848, i32* @r28, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  %v2_1000a854 = inttoptr i32 %v0_1000a844 to i32*
  store i32 34, i32* %v2_1000a854, align 4
  %v0_1000a7f0.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_1000a7f8.pre.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a7f8.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000a7f0

dec_label_pc_1000a85c:                            ; preds = %dec_label_pc_1000a838
  %v2_1000a85c = mul i32 %v1_1000a82c, %v0_1000a85c
  %v2_1000a860 = add i32 %v2_1000a85c, %v1_1000a860
  store i32 %v2_1000a860, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a7f0

dec_label_pc_1000a868:                            ; preds = %dec_label_pc_1000a82c, %dec_label_pc_1000a7c8
  %v0_1000a870 = phi i32 [ %v0_1000a87014, %dec_label_pc_1000a7c8 ], [ %v0_1000a87012, %dec_label_pc_1000a82c ]
  %v0_1000a868 = load i32, i32* %r25.global-to-local, align 4
  %v3_1000a868 = icmp eq i32 %v0_1000a868, 0
  br i1 %v3_1000a868, label %dec_label_pc_1000a874, label %dec_label_pc_1000a870

dec_label_pc_1000a870:                            ; preds = %dec_label_pc_1000a868
  %v2_1000a870 = inttoptr i32 %v0_1000a868 to i32*
  store i32 %v0_1000a870, i32* %v2_1000a870, align 4
  br label %dec_label_pc_1000a874

dec_label_pc_1000a874:                            ; preds = %dec_label_pc_1000a868, %dec_label_pc_1000a870
  %v0_1000a874 = load i32, i32* %r26.global-to-local, align 4
  %v3_1000a874 = icmp eq i32 %v0_1000a874, 0
  %v0_1000a878 = load i32, i32* @r28, align 4
  %v1_1000a878 = sub i32 0, %v0_1000a878
  %tmp40 = lshr i32 %v1_1000a878, 31
  %tmp41 = add nuw i32 %tmp40, 2147483647
  store i32 %tmp41, i32* @r31, align 4
  %v0_1000a8b8.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v3_1000a874, label %dec_label_pc_1000a8a8, label %dec_label_pc_1000a890

dec_label_pc_1000a890:                            ; preds = %dec_label_pc_1000a874
  %v3_1000a890 = icmp ugt i32 %v0_1000a8b8.pre.pre, %tmp41
  br i1 %v3_1000a890, label %dec_label_pc_1000a898, label %dec_label_pc_1000a8a8

dec_label_pc_1000a898:                            ; preds = %dec_label_pc_1000a890
  %v0_1000a898 = call i32 @function_10009824()
  %v2_1000a8a0 = inttoptr i32 %v0_1000a898 to i32*
  store i32 34, i32* %v2_1000a8a0, align 4
  %v0_1000a8a4 = load i32, i32* @r31, align 4
  store i32 %v0_1000a8a4, i32* %r8.global-to-local, align 4
  %v0_1000a8a8.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000a8a8

dec_label_pc_1000a8a8:                            ; preds = %dec_label_pc_1000a874, %dec_label_pc_1000a890, %dec_label_pc_1000a898
  %v0_1000a8b8.pre = phi i32 [ %v0_1000a8b8.pre.pre, %dec_label_pc_1000a890 ], [ %v0_1000a8a4, %dec_label_pc_1000a898 ], [ %v0_1000a8b8.pre.pre, %dec_label_pc_1000a874 ]
  %v0_1000a8a8 = phi i32 [ %v0_1000a878, %dec_label_pc_1000a890 ], [ %v0_1000a8a8.pre, %dec_label_pc_1000a898 ], [ %v0_1000a878, %dec_label_pc_1000a874 ]
  %v3_1000a8a8 = icmp eq i32 %v0_1000a8a8, 0
  br i1 %v3_1000a8a8, label %dec_label_pc_1000a8b4, label %dec_label_pc_1000a8b0

dec_label_pc_1000a8b0:                            ; preds = %dec_label_pc_1000a8a8
  %v1_1000a8b0 = sub i32 0, %v0_1000a8b8.pre
  store i32 %v1_1000a8b0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a8b4

dec_label_pc_1000a8b4:                            ; preds = %dec_label_pc_1000a8a8, %dec_label_pc_1000a8b0
  %v0_1000a8b8 = phi i32 [ %v1_1000a8b0, %dec_label_pc_1000a8b0 ], [ %v0_1000a8b8.pre, %dec_label_pc_1000a8a8 ]
  ret i32 %v0_1000a8b8

; uselistorder directives
  uselistorder i32 %v0_1000a8b8.pre, { 1, 0 }
  uselistorder i32 %v0_1000a8b8.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_1000a860, { 1, 0 }
  uselistorder i32 %v1_1000a80c, { 1, 0 }
  uselistorder i32 %v1_1000a808, { 1, 0 }
  uselistorder i32 %v1_1000a800, { 1, 0 }
  uselistorder i32 %v3_1000a7f4, { 1, 0 }
  uselistorder i32 %v0_1000a85c, { 1, 0, 2 }
  uselistorder i32 %v1_1000a7fc, { 0, 2, 1 }
  uselistorder i32 %v0_1000a7f0, { 1, 0 }
  uselistorder i32 %v2_1000a7dc, { 1, 0, 2 }
  uselistorder i32 %v1_1000a7b4, { 1, 0 }
  uselistorder i32 %v1_1000a7a0, { 1, 0, 2 }
  uselistorder i8 %v2_1000a748.lcssa, { 1, 0 }
  uselistorder i32 %v1_1000a744, { 0, 2, 3, 1 }
  uselistorder i32 %v3_1000a73c, { 1, 0 }
  uselistorder i32 %tmp, { 3, 2, 0, 1, 4 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 5, 2, 3, 4, 6 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 7, 2, 3, 6, 4, 5, 8 }
  uselistorder i32* %r30.global-to-local, { 4, 1, 0, 2, 3, 5, 6, 7 }
  uselistorder i32 34, { 0, 1, 3, 2 }
  uselistorder i32 26, { 6, 0, 4, 5, 1, 7, 2, 8, 3, 9 }
  uselistorder i8 45, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000a8b4, { 1, 0 }
  uselistorder label %dec_label_pc_1000a8a8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a874, { 1, 0 }
  uselistorder label %dec_label_pc_1000a82c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a7f4, { 1, 0 }
  uselistorder label %dec_label_pc_1000a7c8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a7bc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a780, { 1, 0 }
  uselistorder label %dec_label_pc_1000a77c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a744, { 1, 0 }
}

define i32 @function_1000a8cc() local_unnamed_addr {
dec_label_pc_1000a8cc:
  %stack_var_-40 = alloca i32, align 4
  %v2_1000a8e4 = ptrtoint i32* %stack_var_-40 to i32
  %v0_1000a8f0 = load i32, i32* @r3, align 4
  store i32 %v0_1000a8f0, i32* @r31, align 4
  store i32 %v2_1000a8e4, i32* @r3, align 4
  %v3_1000a8fc = call i32 @function_1000abc0(i32 %v2_1000a8e4, i32 ptrtoint ([3 x i8]* @global_var_1000abb8.330 to i32))
  %v0_1000a904 = call i32 @function_1000abb8()
  %v3_1000a90c = load i32, i32* @global_var_1001c2d0.353, align 4
  %v3_1000a910 = icmp eq i32 %v3_1000a90c, 0
  br i1 %v3_1000a910, label %dec_label_pc_1000a924, label %dec_label_pc_1000a918

dec_label_pc_1000a918:                            ; preds = %dec_label_pc_1000a8cc
  %v0_1000a918 = load i32, i32* @r31, align 4
  %v3_1000a920 = call i32 @unknown_0(i32 %v0_1000a918, i32 268566528)
  br label %dec_label_pc_1000a924

dec_label_pc_1000a924:                            ; preds = %dec_label_pc_1000a8cc, %dec_label_pc_1000a918
  store i32 %v2_1000a8e4, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v2_1000a92c = call i32 @function_1000abc0(i32 %v2_1000a8e4, i32 1)
  store i32 %v2_1000a92c, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000a934.355 to i32), i32* @lr, align 4
  %v1_1000a930 = call i32 @function_1000ab24(i32 %v2_1000a92c)
  %v0_1000a948 = load i32, i32* @r31, align 4
  %v1_1000a94c = call i32 @function_1000af58(i32 %v0_1000a948)
  ret i32 %v1_1000a94c

; uselistorder directives
  uselistorder i32 %v2_1000a8e4, { 1, 0, 3, 2 }
  uselistorder i32 (i32, i32)* @function_1000abc0, { 1, 0, 5, 4, 3, 2 }
  uselistorder label %dec_label_pc_1000a924, { 1, 0 }
}

define i32 @function_1000a950(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a950:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-432 = alloca i32, align 4
  %stack_var_-440 = alloca i32, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v3_1000a950 = icmp eq i32 %arg1, 0
  br i1 %v3_1000a950, label %dec_label_pc_1000ab04, label %dec_label_pc_1000a980.lr.ph

dec_label_pc_1000a980.lr.ph:                      ; preds = %dec_label_pc_1000a950
  %v2_1000a974 = ptrtoint i32* %stack_var_-440 to i32
  store i32 %v2_1000a974, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1000a98042 = add i32 %v2_1000a974, 132
  %v3_1000a98043 = inttoptr i32 %v2_1000a98042 to i32*
  store i32 0, i32* %v3_1000a98043, align 4
  %v0_1000a98444 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a98445 = add i32 %v0_1000a98444, -1
  store i32 %v1_1000a98445, i32* %r11.global-to-local, align 4
  %v1_1000a98846 = mul i32 %v1_1000a98445, 4
  %v1_1000a98c47 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000a98c48 = add i32 %v1_1000a98c47, %v1_1000a98846
  %v0_1000a99049 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a99050 = add i32 %v0_1000a99049, -1
  store i32 %v1_1000a99050, i32* %ctr.global-to-local, align 4
  %v2_1000a99051 = icmp eq i32 %v1_1000a99050, 0
  br i1 %v2_1000a99051, label %dec_label_pc_1000a994, label %dec_label_pc_1000a980.dec_label_pc_1000a980_crit_edge

dec_label_pc_1000a980.dec_label_pc_1000a980_crit_edge: ; preds = %dec_label_pc_1000a980.lr.ph, %dec_label_pc_1000a980.dec_label_pc_1000a980_crit_edge
  %v2_1000a98c52 = phi i32 [ %v2_1000a98c, %dec_label_pc_1000a980.dec_label_pc_1000a980_crit_edge ], [ %v2_1000a98c48, %dec_label_pc_1000a980.lr.ph ]
  %v0_1000a980.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000a980 = add i32 %v2_1000a98c52, 8
  %v3_1000a980 = inttoptr i32 %v2_1000a980 to i32*
  store i32 %v0_1000a980.pre, i32* %v3_1000a980, align 4
  %v0_1000a984 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a984 = add i32 %v0_1000a984, -1
  store i32 %v1_1000a984, i32* %r11.global-to-local, align 4
  %v1_1000a988 = mul i32 %v1_1000a984, 4
  %v1_1000a98c = load i32, i32* %r7.global-to-local, align 4
  %v2_1000a98c = add i32 %v1_1000a98c, %v1_1000a988
  %v0_1000a990 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a990 = add i32 %v0_1000a990, -1
  store i32 %v1_1000a990, i32* %ctr.global-to-local, align 4
  %v2_1000a990 = icmp eq i32 %v1_1000a990, 0
  br i1 %v2_1000a990, label %dec_label_pc_1000a994, label %dec_label_pc_1000a980.dec_label_pc_1000a980_crit_edge

dec_label_pc_1000a994:                            ; preds = %dec_label_pc_1000a980.dec_label_pc_1000a980_crit_edge, %dec_label_pc_1000a980.lr.ph
  %v0_1000a9a8.pre = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a994 = ptrtoint i32* %stack_var_-432 to i32
  store i32 %v2_1000a994, i32* @r29, align 4
  store i32 %v2_1000a994, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  store i32 %v0_1000a9a8.pre, i32* %stack_var_-440, align 4
  %v0_1000a9ac = call i32 @function_1000a00c()
  store i32 %v0_1000a9ac, i32* %r3.global-to-local, align 4
  %v1_1000a9b0 = icmp slt i32 %v0_1000a9ac, 0
  br i1 %v1_1000a9b0, label %dec_label_pc_1000ab0c, label %dec_label_pc_1000a9b8

dec_label_pc_1000a9b8:                            ; preds = %dec_label_pc_1000a994
  %v2_1000a9b8 = ptrtoint i32* %stack_var_-304 to i32
  store i32 %v2_1000a9b8, i32* @r31, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268478924, i32* @lr, align 4
  %v3_1000a9c8 = call i32 @function_10009460(i32 0, i32 %v2_1000a994, i32 %v2_1000a9b8)
  store i32 %v3_1000a9c8, i32* %r3.global-to-local, align 4
  %v3_1000a9cc = icmp eq i32 %v3_1000a9c8, 0
  br i1 %v3_1000a9cc, label %dec_label_pc_1000a9d4, label %dec_label_pc_1000ab0c

dec_label_pc_1000a9d4:                            ; preds = %dec_label_pc_1000a9b8
  store i32 %v2_1000a9b8, i32* %r3.global-to-local, align 4
  %v2_1000a9dc = call i32 @function_10009fe4(i32 %v2_1000a9b8, i32 17)
  store i32 %v2_1000a9dc, i32* %r3.global-to-local, align 4
  %v3_1000a9e0 = icmp eq i32 %v2_1000a9dc, 0
  br i1 %v3_1000a9e0, label %dec_label_pc_1000aa00.lr.ph, label %dec_label_pc_1000aacc

dec_label_pc_1000aa00.lr.ph:                      ; preds = %dec_label_pc_1000a9d4
  store i32 %v2_1000a974, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %v3_1000a98043, align 4
  %v0_1000aa0433 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000aa0434 = add i32 %v0_1000aa0433, -1
  store i32 %v1_1000aa0434, i32* %r11.global-to-local, align 4
  %v1_1000aa0835 = mul i32 %v1_1000aa0434, 4
  %v1_1000aa0c36 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000aa0c37 = add i32 %v1_1000aa0c36, %v1_1000aa0835
  %v0_1000aa1038 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000aa1039 = add i32 %v0_1000aa1038, -1
  store i32 %v1_1000aa1039, i32* %ctr.global-to-local, align 4
  %v2_1000aa1040 = icmp eq i32 %v1_1000aa1039, 0
  br i1 %v2_1000aa1040, label %dec_label_pc_1000aa14, label %dec_label_pc_1000aa00.dec_label_pc_1000aa00_crit_edge

dec_label_pc_1000aa00.dec_label_pc_1000aa00_crit_edge: ; preds = %dec_label_pc_1000aa00.lr.ph, %dec_label_pc_1000aa00.dec_label_pc_1000aa00_crit_edge
  %v2_1000aa0c41 = phi i32 [ %v2_1000aa0c, %dec_label_pc_1000aa00.dec_label_pc_1000aa00_crit_edge ], [ %v2_1000aa0c37, %dec_label_pc_1000aa00.lr.ph ]
  %v0_1000aa00.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000aa00 = add i32 %v2_1000aa0c41, 8
  %v3_1000aa00 = inttoptr i32 %v2_1000aa00 to i32*
  store i32 %v0_1000aa00.pre, i32* %v3_1000aa00, align 4
  %v0_1000aa04 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000aa04 = add i32 %v0_1000aa04, -1
  store i32 %v1_1000aa04, i32* %r11.global-to-local, align 4
  %v1_1000aa08 = mul i32 %v1_1000aa04, 4
  %v1_1000aa0c = load i32, i32* %r8.global-to-local, align 4
  %v2_1000aa0c = add i32 %v1_1000aa0c, %v1_1000aa08
  %v0_1000aa10 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000aa10 = add i32 %v0_1000aa10, -1
  store i32 %v1_1000aa10, i32* %ctr.global-to-local, align 4
  %v2_1000aa10 = icmp eq i32 %v1_1000aa10, 0
  br i1 %v2_1000aa10, label %dec_label_pc_1000aa14, label %dec_label_pc_1000aa00.dec_label_pc_1000aa00_crit_edge

dec_label_pc_1000aa14:                            ; preds = %dec_label_pc_1000aa00.dec_label_pc_1000aa00_crit_edge, %dec_label_pc_1000aa00.lr.ph
  store i32 %v2_1000a994, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  %v0_1000aa1c = call i32 @function_1000a00c()
  store i32 %v0_1000aa1c, i32* %r3.global-to-local, align 4
  %v1_1000aa20 = icmp slt i32 %v0_1000aa1c, 0
  br i1 %v1_1000aa20, label %dec_label_pc_1000ab0c, label %dec_label_pc_1000aa28

dec_label_pc_1000aa28:                            ; preds = %dec_label_pc_1000aa14
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_1000aa30 = ptrtoint i32* %stack_var_-176 to i32
  store i32 268479032, i32* @lr, align 4
  %v4_1000aa34 = call i32 @function_1000b79c(i32 17, i32* null, i32 %v2_1000aa30)
  store i32 %v4_1000aa34, i32* %r3.global-to-local, align 4
  %tmp30 = icmp sgt i32 %v4_1000aa34, -1
  br i1 %tmp30, label %dec_label_pc_1000aa68, label %dec_label_pc_1000aa40

dec_label_pc_1000aa40:                            ; preds = %dec_label_pc_1000aa28
  %v0_1000aa40 = call i32 @function_10009824()
  store i32 %v0_1000aa40, i32* %r3.global-to-local, align 4
  %v1_1000aa48 = inttoptr i32 %v0_1000aa40 to i32*
  %v2_1000aa48 = load i32, i32* %v1_1000aa48, align 4
  store i32 %v2_1000aa48, i32* @r28, align 4
  store i32 %v0_1000aa40, i32* @r29, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268479068, i32* @lr, align 4
  %v3_1000aa58 = call i32 @function_10009460(i32 2, i32 %v2_1000a9b8, i32 0)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_1000aa60 = load i32, i32* @r28, align 4
  %v1_1000aa60 = load i32, i32* @r29, align 4
  %v2_1000aa60 = inttoptr i32 %v1_1000aa60 to i32*
  store i32 %v0_1000aa60, i32* %v2_1000aa60, align 4
  %v0_1000ab20.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000ab10

dec_label_pc_1000aa68:                            ; preds = %dec_label_pc_1000aa28
  %v3_1000aa68 = load i32, i32* %stack_var_-176, align 4
  store i32 %v2_1000a9b8, i32* @r28, align 4
  %v3_1000aa74 = icmp eq i32 %v3_1000aa68, 1
  br i1 %v3_1000aa74, label %dec_label_pc_1000aa7c, label %dec_label_pc_1000aab0

dec_label_pc_1000aa7c:                            ; preds = %dec_label_pc_1000aa68
  store i32 %v2_1000a974, i32* %r3.global-to-local, align 4
  store i32 268479112, i32* @lr, align 4
  %v2_1000aa84 = call i32 @function_1000b390(i32 %v2_1000a974, i32 %v2_1000a974)
  store i32 %v2_1000aa84, i32* %r3.global-to-local, align 4
  store i32 %v2_1000aa84, i32* @r31, align 4
  %v0_1000aa8c = call i32 @function_10009824()
  store i32 %v0_1000aa8c, i32* %r3.global-to-local, align 4
  store i32 %v0_1000aa8c, i32* @r29, align 4
  %v1_1000aa9c = inttoptr i32 %v0_1000aa8c to i32*
  %v2_1000aa9c = load i32, i32* %v1_1000aa9c, align 4
  store i32 %v2_1000aa9c, i32* @r28, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268479144, i32* @lr, align 4
  %v3_1000aaa4 = call i32 @function_10009460(i32 2, i32 %v2_1000a9b8, i32 0)
  store i32 %v3_1000aaa4, i32* %r3.global-to-local, align 4
  %v0_1000aaa8 = load i32, i32* @r28, align 4
  %v1_1000aaa8 = load i32, i32* @r29, align 4
  %v2_1000aaa8 = inttoptr i32 %v1_1000aaa8 to i32*
  store i32 %v0_1000aaa8, i32* %v2_1000aaa8, align 4
  %v0_1000aad8.pr = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000aad8

dec_label_pc_1000aab0:                            ; preds = %dec_label_pc_1000aa68
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268479168, i32* @lr, align 4
  %v3_1000aabc = call i32 @function_10009460(i32 2, i32 %v2_1000a9b8, i32 0)
  br label %dec_label_pc_1000aacc

dec_label_pc_1000aacc:                            ; preds = %dec_label_pc_1000a9d4, %dec_label_pc_1000aab0
  store i32 %v2_1000a974, i32* %r3.global-to-local, align 4
  store i32 268479188, i32* @lr, align 4
  %v2_1000aad0 = call i32 @function_1000b390(i32 %v2_1000a974, i32 %v2_1000a974)
  store i32 %v2_1000aad0, i32* %r3.global-to-local, align 4
  store i32 %v2_1000aad0, i32* @r31, align 4
  br label %dec_label_pc_1000aad8

dec_label_pc_1000aad8:                            ; preds = %dec_label_pc_1000aa7c, %dec_label_pc_1000aacc
  %v0_1000aad8 = phi i32 [ %v0_1000aad8.pr, %dec_label_pc_1000aa7c ], [ %v2_1000aad0, %dec_label_pc_1000aacc ]
  %v3_1000aad8 = icmp eq i32 %v0_1000aad8, 0
  br i1 %v3_1000aad8, label %dec_label_pc_1000ab04, label %dec_label_pc_1000aae0

dec_label_pc_1000aae0:                            ; preds = %dec_label_pc_1000aad8
  %v3_1000aaf0 = load i32, i32* %stack_var_-440, align 4
  %v0_1000aaf4 = call i32 @__asm_mfcr()
  store i32 %v0_1000aaf4, i32* %r3.global-to-local, align 4
  %v1_1000aaf8 = call i32 @__asm_rlwinm(i32 %v0_1000aaf4, i32 30, i32 31, i32 31)
  %v2_1000aafc = add i32 %v3_1000aaf0, %v1_1000aaf8
  store i32 %v2_1000aafc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000ab10

dec_label_pc_1000ab04:                            ; preds = %dec_label_pc_1000aad8, %dec_label_pc_1000a950
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000ab10

dec_label_pc_1000ab0c:                            ; preds = %dec_label_pc_1000a9b8, %dec_label_pc_1000aa14, %dec_label_pc_1000a994
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000ab10

dec_label_pc_1000ab10:                            ; preds = %dec_label_pc_1000ab04, %dec_label_pc_1000aae0, %dec_label_pc_1000aa40, %dec_label_pc_1000ab0c
  %v0_1000ab20 = phi i32 [ 0, %dec_label_pc_1000ab04 ], [ %v2_1000aafc, %dec_label_pc_1000aae0 ], [ %v0_1000ab20.pre, %dec_label_pc_1000aa40 ], [ -1, %dec_label_pc_1000ab0c ]
  ret i32 %v0_1000ab20

; uselistorder directives
  uselistorder i32 %v1_1000aa10, { 1, 0 }
  uselistorder i32 %v2_1000a9b8, { 2, 1, 3, 0, 5, 4, 6, 7 }
  uselistorder i32 %v1_1000a990, { 1, 0 }
  uselistorder i32 %v2_1000a974, { 2, 1, 3, 6, 5, 4, 7, 0, 8 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 4, 6, 5, 1, 7, 0, 8, 9, 10, 11, 3, 12, 14, 15, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 2 }
  uselistorder i32* %r11.global-to-local, { 7, 6, 4, 0, 1, 9, 8, 5, 2, 3 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 4, 0, 1, 9, 8, 5, 2, 3 }
  uselistorder i32 (i32, i32)* @function_1000b390, { 1, 0 }
  uselistorder i32 17, { 2, 37, 38, 3, 39, 4, 19, 20, 5, 6, 21, 22, 23, 7, 24, 25, 26, 8, 9, 10, 11, 12, 13, 14, 27, 15, 28, 29, 30, 16, 17, 18, 31, 0, 32, 1, 33, 34, 35, 36 }
  uselistorder label %dec_label_pc_1000ab10, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000ab0c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000aad8, { 1, 0 }
  uselistorder label %dec_label_pc_1000aacc, { 1, 0 }
  uselistorder label %dec_label_pc_1000aa00.dec_label_pc_1000aa00_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000a980.dec_label_pc_1000a980_crit_edge, { 1, 0 }
}

define i32 @function_1000ab24(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000ab74:
  %v3_1000ab78 = load i32, i32* @global_var_1001c2e0.357, align 4
  %v3_1000ab7c = icmp eq i32 %v3_1000ab78, 0
  br i1 %v3_1000ab7c, label %dec_label_pc_1000ab8c, label %dec_label_pc_1000ab84

dec_label_pc_1000ab84:                            ; preds = %dec_label_pc_1000ab74
  %v2_1000ab88 = load i32, i32* @r4, align 4
  %v3_1000ab88 = call i32 @unknown_0(i32 268566528, i32 %v2_1000ab88)
  store i32 %v3_1000ab88, i32* @r3, align 4
  br label %dec_label_pc_1000ab8c

dec_label_pc_1000ab8c:                            ; preds = %dec_label_pc_1000ab74, %dec_label_pc_1000ab84
  %v3_1000ab90 = load i32, i32* @global_var_1001c2e4.358, align 4
  %v3_1000ab94 = icmp eq i32 %v3_1000ab90, 0
  br i1 %v3_1000ab94, label %dec_label_pc_1000ab8c.dec_label_pc_1000aba4_crit_edge, label %dec_label_pc_1000ab9c

dec_label_pc_1000ab8c.dec_label_pc_1000aba4_crit_edge: ; preds = %dec_label_pc_1000ab8c
  %v0_1000abb4.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000aba4

dec_label_pc_1000ab9c:                            ; preds = %dec_label_pc_1000ab8c
  %v2_1000aba0 = load i32, i32* @r4, align 4
  %v3_1000aba0 = call i32 @unknown_0(i32 268566528, i32 %v2_1000aba0)
  br label %dec_label_pc_1000aba4

dec_label_pc_1000aba4:                            ; preds = %dec_label_pc_1000ab8c.dec_label_pc_1000aba4_crit_edge, %dec_label_pc_1000ab9c
  %v0_1000abb4 = phi i32 [ %v0_1000abb4.pre, %dec_label_pc_1000ab8c.dec_label_pc_1000aba4_crit_edge ], [ %v3_1000aba0, %dec_label_pc_1000ab9c ]
  ret i32 %v0_1000abb4

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000aba4, { 1, 0 }
  uselistorder label %dec_label_pc_1000ab8c, { 1, 0 }
}

define i32 @function_1000abb8() local_unnamed_addr {
dec_label_pc_1000abb8:
  ret i32 0
}

define i32 @function_1000abc0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000abc0:
  %v0_1000abc0 = load i32, i32* @r3, align 4
  ret i32 %v0_1000abc0
}

define i32 @function_1000abc4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000abc4:
  store i32 %arg2, i32* @r30, align 4
  store i32 1, i32* @r4, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268479464, i32* @lr, align 4
  %v1_1000abe4 = call i32 @function_10009020(i32 1)
  %v3_1000abe8 = icmp eq i32 %v1_1000abe4, -1
  br i1 %v3_1000abe8, label %dec_label_pc_1000abf0, label %dec_label_pc_1000ac10

dec_label_pc_1000abf0:                            ; preds = %dec_label_pc_1000abc4
  %v0_1000abf4 = load i32, i32* @r30, align 4
  store i32 268479492, i32* @lr, align 4
  %v3_1000ac00 = call i32 @function_10009270(i32 ptrtoint ([10 x i8]* @global_var_1000be00.359 to i32), i32 %v0_1000abf4)
  %v1_1000ac04 = load i32, i32* @r31, align 4
  %v4_1000ac04 = icmp eq i32 %v3_1000ac00, %v1_1000ac04
  br i1 %v4_1000ac04, label %dec_label_pc_1000ac10, label %dec_label_pc_1000ac0c

dec_label_pc_1000ac0c:                            ; preds = %dec_label_pc_1000abf0
  %v1_1000ac0c = call i32 @function_1000b860(i32 %v3_1000ac00)
  br label %dec_label_pc_1000ac10

dec_label_pc_1000ac10:                            ; preds = %dec_label_pc_1000abc4, %dec_label_pc_1000abf0, %dec_label_pc_1000ac0c
  %v0_1000ac20 = phi i32 [ %v1_1000abe4, %dec_label_pc_1000abc4 ], [ %v3_1000ac00, %dec_label_pc_1000abf0 ], [ %v1_1000ac0c, %dec_label_pc_1000ac0c ]
  ret i32 %v0_1000ac20

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_10009270, { 0, 4, 9, 1, 8, 7, 6, 5, 3, 2 }
  uselistorder i32 (i32)* @function_10009020, { 0, 5, 13, 12, 15, 14, 9, 8, 11, 10, 7, 6, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_1000ac10, { 2, 1, 0 }
}

define i32 @function_1000ac24(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000ac24:
  %v3_1000ac44 = load i32, i32* @global_var_1001c2e8.360, align 4
  %v3_1000ac48 = icmp eq i32 %v3_1000ac44, 0
  br i1 %v3_1000ac48, label %dec_label_pc_1000ac6c, label %dec_label_pc_1000ac90

dec_label_pc_1000ac6c:                            ; preds = %dec_label_pc_1000ac24
  store i32 1, i32* @global_var_1001c2e8.360, align 4
  store i32 4096, i32* @global_var_1001c2dc.342, align 4
  br label %dec_label_pc_1000ac90

dec_label_pc_1000ac90:                            ; preds = %dec_label_pc_1000ac6c, %dec_label_pc_1000ac24
  %v0_1000aca0 = load i32, i32* @r3, align 4
  ret i32 %v0_1000aca0
}

define i32 @function_1000aca4(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1000aca4:
  %r25.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  store i32 %tmp, i32* @r30, align 4
  %v1_1000acbc = mul i32 %arg2, 4
  %v2_1000acc0 = add i32 %tmp, %v1_1000acbc
  %v0_1000acc4 = load i32, i32* @r9, align 4
  store i32 %v0_1000acc4, i32* @global_var_1001c2d4.362, align 4
  %v1_1000acc8 = add i32 %v2_1000acc0, 4
  store i32 268566528, i32* %r29.global-to-local, align 4
  store i32 %v1_1000acc8, i32* @global_var_1001c2d8.363, align 4
  store i32 %arg6, i32* @global_var_1001c2e4.358, align 4
  store i32 %arg1, i32* %r25.global-to-local, align 4
  store i32 %arg4, i32* %r28.global-to-local, align 4
  %v2_1000ace8 = load i32, i32* %arg3, align 4
  store i32 %arg5, i32* %r27.global-to-local, align 4
  %v4_1000acf0 = icmp eq i32 %v1_1000acc8, %v2_1000ace8
  br i1 %v4_1000acf0, label %dec_label_pc_1000acf8, label %dec_label_pc_1000acfc

dec_label_pc_1000acf8:                            ; preds = %dec_label_pc_1000aca4
  store i32 %v2_1000acc0, i32* @global_var_1001c2d8.363, align 4
  br label %dec_label_pc_1000acfc

dec_label_pc_1000acfc:                            ; preds = %dec_label_pc_1000aca4, %dec_label_pc_1000acf8
  %v2_1000acfc = ptrtoint i32* %stack_var_-168 to i32
  store i32 268479756, i32* @lr, align 4
  %v3_1000ad08 = call i32 @function_1000990c(i32 %v2_1000acfc, i32 0, i32 120)
  %storemerge.pre = load i32, i32* @global_var_1001c2d8.363, align 4
  br label %dec_label_pc_1000ad18

dec_label_pc_1000ad18:                            ; preds = %dec_label_pc_1000ad18, %dec_label_pc_1000acfc
  %storemerge = phi i32 [ %storemerge.pre, %dec_label_pc_1000acfc ], [ %v1_1000ad1c, %dec_label_pc_1000ad18 ]
  %v1_1000ad18 = inttoptr i32 %storemerge to i32*
  %v2_1000ad18 = load i32, i32* %v1_1000ad18, align 4
  %v1_1000ad1c = add i32 %storemerge, 4
  %v3_1000ad20 = icmp eq i32 %v2_1000ad18, 0
  br i1 %v3_1000ad20, label %dec_label_pc_1000ad28, label %dec_label_pc_1000ad18

dec_label_pc_1000ad28:                            ; preds = %dec_label_pc_1000ad18
  store i32 %v1_1000ad1c, i32* %r29.global-to-local, align 4
  %v1_1000ad5412 = inttoptr i32 %v1_1000ad1c to i32*
  %v2_1000ad5413 = load i32, i32* %v1_1000ad5412, align 4
  %v3_1000ad5816 = icmp eq i32 %v2_1000ad5413, 0
  br i1 %v3_1000ad5816, label %dec_label_pc_1000ad60, label %dec_label_pc_1000ad30

dec_label_pc_1000ad30:                            ; preds = %dec_label_pc_1000ad28, %dec_label_pc_1000ad50
  %v0_1000ad44 = phi i32 [ %v1_1000ad50, %dec_label_pc_1000ad50 ], [ %v1_1000ad1c, %dec_label_pc_1000ad28 ]
  %v0_1000ad38 = phi i32 [ %v2_1000ad54, %dec_label_pc_1000ad50 ], [ %v2_1000ad5413, %dec_label_pc_1000ad28 ]
  %v2_1000ad30 = icmp ugt i32 %v0_1000ad38, 14
  br i1 %v2_1000ad30, label %dec_label_pc_1000ad50, label %dec_label_pc_1000ad38

dec_label_pc_1000ad38:                            ; preds = %dec_label_pc_1000ad30
  %v1_1000ad38 = mul i32 %v0_1000ad38, 8
  %v2_1000ad40 = add i32 %v1_1000ad38, %v2_1000acfc
  store i32 %v2_1000ad40, i32* @r3, align 4
  store i32 %v0_1000ad44, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268479824, i32* @lr, align 4
  %v0_1000ad4c = call i32 @function_1000b60c()
  %v0_1000ad50.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000ad50

dec_label_pc_1000ad50:                            ; preds = %dec_label_pc_1000ad30, %dec_label_pc_1000ad38
  %v0_1000ad50 = phi i32 [ %v0_1000ad44, %dec_label_pc_1000ad30 ], [ %v0_1000ad50.pre, %dec_label_pc_1000ad38 ]
  %v1_1000ad50 = add i32 %v0_1000ad50, 8
  store i32 %v1_1000ad50, i32* %r29.global-to-local, align 4
  %v1_1000ad54 = inttoptr i32 %v1_1000ad50 to i32*
  %v2_1000ad54 = load i32, i32* %v1_1000ad54, align 4
  %v3_1000ad58 = icmp eq i32 %v2_1000ad54, 0
  br i1 %v3_1000ad58, label %dec_label_pc_1000ad60, label %dec_label_pc_1000ad30

dec_label_pc_1000ad60:                            ; preds = %dec_label_pc_1000ad50, %dec_label_pc_1000ad28
  %v1_1000ad64 = call i32 @function_1000b9b0(i32 %v2_1000acfc)
  store i32 %v1_1000ad64, i32* @r3, align 4
  store i32 268479852, i32* @lr, align 4
  %v1_1000ad68 = call i32 @function_1000ac24(i32 %v1_1000ad64)
  %v3_1000ad70 = icmp eq i32 %tmp27, 0
  br i1 %v3_1000ad70, label %dec_label_pc_1000ad78, label %dec_label_pc_1000ad7c

dec_label_pc_1000ad78:                            ; preds = %dec_label_pc_1000ad60
  br label %dec_label_pc_1000ad7c

dec_label_pc_1000ad7c:                            ; preds = %dec_label_pc_1000ad60, %dec_label_pc_1000ad78
  %v0_1000ad84 = phi i32 [ %tmp27, %dec_label_pc_1000ad60 ], [ 4096, %dec_label_pc_1000ad78 ]
  store i32 %v0_1000ad84, i32* @global_var_1001c2dc.342, align 4
  %v3_1000ad88 = icmp eq i32 %tmp26, -1
  br i1 %v3_1000ad88, label %dec_label_pc_1000ad90, label %dec_label_pc_1000adc4

dec_label_pc_1000ad90:                            ; preds = %dec_label_pc_1000ad7c
  store i32 268479892, i32* @lr, align 4
  %v1_1000ad90 = call i32 @function_1000b2c8(i32 268566528)
  store i32 %v1_1000ad90, i32* %r29.global-to-local, align 4
  store i32 268479900, i32* @lr, align 4
  %v0_1000ad98 = call i32 @function_1000b238()
  %v4_1000ad9c = icmp eq i32 %v1_1000ad90, %v0_1000ad98
  br i1 %v4_1000ad9c, label %dec_label_pc_1000ada4, label %dec_label_pc_1000ade0

dec_label_pc_1000ada4:                            ; preds = %dec_label_pc_1000ad90
  store i32 268479912, i32* @lr, align 4
  %v1_1000ada4 = call i32 @function_1000b280(i32 %v0_1000ad98)
  store i32 %v1_1000ada4, i32* %r29.global-to-local, align 4
  store i32 268479920, i32* @lr, align 4
  %v0_1000adac = call i32 @function_1000b1f0()
  %v4_1000adb0 = icmp eq i32 %v1_1000ada4, %v0_1000adac
  br i1 %v4_1000adb0, label %dec_label_pc_1000adb8.thread, label %dec_label_pc_1000ade0

dec_label_pc_1000adb8.thread:                     ; preds = %dec_label_pc_1000ada4
  br label %dec_label_pc_1000ae10

dec_label_pc_1000adc4:                            ; preds = %dec_label_pc_1000ad7c
  %v4_1000adc8 = icmp eq i32 %tmp26, %tmp25
  br i1 %v4_1000adc8, label %dec_label_pc_1000add0, label %dec_label_pc_1000ade0

dec_label_pc_1000add0:                            ; preds = %dec_label_pc_1000adc4
  br label %dec_label_pc_1000ade0

dec_label_pc_1000ade0:                            ; preds = %dec_label_pc_1000add0, %dec_label_pc_1000adc4, %dec_label_pc_1000ada4, %dec_label_pc_1000ad90
  store i32 268479984, i32* @lr, align 4
  %v2_1000adec = call i32 @function_1000abc4(i32 0, i32 32768)
  store i32 268480000, i32* @lr, align 4
  %v2_1000adfc = call i32 @function_1000abc4(i32 1, i32 32770)
  store i32 268480016, i32* @lr, align 4
  %v2_1000ae0c = call i32 @function_1000abc4(i32 2, i32 32770)
  br label %dec_label_pc_1000ae10

dec_label_pc_1000ae10:                            ; preds = %dec_label_pc_1000adb8.thread, %dec_label_pc_1000ade0
  %v0_1000ae1c = load i32, i32* @r30, align 4
  %v1_1000ae1c = inttoptr i32 %v0_1000ae1c to i32*
  %v2_1000ae1c = load i32, i32* %v1_1000ae1c, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v2_1000ae1c, i32* inttoptr (i32 268550788 to i32*), align 4
  %v0_1000ae3c = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_1000ae3c, i32* @global_var_1001c2e0.357, align 4
  br i1 false, label %dec_label_pc_1000ae44, label %dec_label_pc_1000aebc

dec_label_pc_1000ae44:                            ; preds = %dec_label_pc_1000ae10, %dec_label_pc_1000ae44
  br i1 undef, label %dec_label_pc_1000ae44, label %dec_label_pc_1000aebc

dec_label_pc_1000aebc:                            ; preds = %dec_label_pc_1000ae44, %dec_label_pc_1000ae10
  %v0_1000ae68 = load i32, i32* %r28.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_1000ae68)
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_1000aecc = call i32 @function_10009824()
  %v2_1000aed4 = inttoptr i32 %v0_1000aecc to i32*
  store i32 0, i32* %v2_1000aed4, align 4
  %v0_1000af00 = load i32, i32* %r25.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_1000af00)
  %v0_1000af0c = call i32 @function_1000a8cc()
  ret i32 %v0_1000af0c

; uselistorder directives
  uselistorder i32 %v2_1000ad54, { 1, 0 }
  uselistorder i32 %v1_1000ad50, { 2, 1, 0 }
  uselistorder i32 %v1_1000ad1c, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v2_1000acfc, { 1, 0, 2 }
  uselistorder i32* %r29.global-to-local, { 6, 7, 1, 2, 4, 3, 0, 5 }
  uselistorder i32 ()* @function_1000a8cc, { 0, 4, 3, 2, 1 }
  uselistorder i1 false, { 0, 5, 6, 7, 1, 2, 3, 4, 8, 9 }
  uselistorder i32 (i32, i32)* @function_1000abc4, { 1, 0, 2 }
  uselistorder i32 4096, { 1, 3, 4, 0, 8, 5, 9, 6, 10, 7, 2 }
  uselistorder i32 14, { 33, 0, 2, 1, 13, 4, 3, 14, 9, 10, 15, 16, 11, 12, 17, 18, 19, 5, 20, 21, 22, 6, 23, 24, 25, 26, 27, 7, 28, 29, 30, 31, 32, 8 }
  uselistorder i32* @r9, { 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11 }
  uselistorder label %dec_label_pc_1000ae44, { 1, 0 }
  uselistorder label %dec_label_pc_1000ae10, { 1, 0 }
  uselistorder label %dec_label_pc_1000ad7c, { 1, 0 }
  uselistorder label %dec_label_pc_1000ad50, { 1, 0 }
  uselistorder label %dec_label_pc_1000ad30, { 1, 0 }
  uselistorder label %dec_label_pc_1000acfc, { 1, 0 }
}

define i32 @function_1000af10(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000af10:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000af28 = call i32 @__asm_mfcr()
  %v1_1000af2c = and i32 %v0_1000af28, 268435456
  %v3_1000af2c = icmp eq i32 %v1_1000af2c, 0
  store i32 %v0_1000af28, i32* %r31.global-to-local, align 4
  br i1 %v3_1000af2c, label %dec_label_pc_1000af44, label %dec_label_pc_1000af38

dec_label_pc_1000af38:                            ; preds = %dec_label_pc_1000af10
  %v0_1000af38 = call i32 @function_10009824()
  %v0_1000af3c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000af3c = inttoptr i32 %v0_1000af38 to i32*
  store i32 %v0_1000af3c, i32* %v2_1000af3c, align 4
  br label %dec_label_pc_1000af44

dec_label_pc_1000af44:                            ; preds = %dec_label_pc_1000af10, %dec_label_pc_1000af38
  %v0_1000af54 = phi i32 [ %v0_1000af28, %dec_label_pc_1000af10 ], [ -1, %dec_label_pc_1000af38 ]
  ret i32 %v0_1000af54

; uselistorder directives
  uselistorder label %dec_label_pc_1000af44, { 1, 0 }
}

define i32 @function_1000af58(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000af58:
  %r31.global-to-local = alloca i32, align 4
  br label %dec_label_pc_1000af6c

dec_label_pc_1000af6c:                            ; preds = %dec_label_pc_1000af6c.backedge, %dec_label_pc_1000af58
  %v0_1000af78 = call i32 @__asm_mfcr()
  %v1_1000af7c = and i32 %v0_1000af78, 268435456
  %v3_1000af7c = icmp eq i32 %v1_1000af7c, 0
  store i32 %v0_1000af78, i32* %r31.global-to-local, align 4
  br i1 %v3_1000af7c, label %dec_label_pc_1000af6c.backedge, label %dec_label_pc_1000af88

dec_label_pc_1000af88:                            ; preds = %dec_label_pc_1000af6c
  %v0_1000af88 = call i32 @function_10009824()
  %v0_1000af8c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000af8c = inttoptr i32 %v0_1000af88 to i32*
  store i32 %v0_1000af8c, i32* %v2_1000af8c, align 4
  br label %dec_label_pc_1000af6c.backedge

dec_label_pc_1000af6c.backedge:                   ; preds = %dec_label_pc_1000af88, %dec_label_pc_1000af6c
  br label %dec_label_pc_1000af6c
}

define i32 @function_1000af94(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000af94:
  %stack_var_-104 = alloca i32, align 4
  %v2_1000afa0 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000afa0, i32* @r29, align 4
  %v0_1000afa8 = load i32, i32* @r4, align 4
  store i32 %v0_1000afa8, i32* @r30, align 4
  %v0_1000afb8 = call i32 @__asm_mfcr()
  %v1_1000afbc = and i32 %v0_1000afb8, 268435456
  %v3_1000afbc = icmp eq i32 %v1_1000afbc, 0
  store i32 -1, i32* @r28, align 4
  store i32 %v0_1000afb8, i32* @r31, align 4
  br i1 %v3_1000afbc, label %dec_label_pc_1000afd8, label %dec_label_pc_1000afcc

dec_label_pc_1000afcc:                            ; preds = %dec_label_pc_1000af94
  %v0_1000afcc = call i32 @function_10009824()
  %v0_1000afd0 = load i32, i32* @r31, align 4
  %v2_1000afd0 = inttoptr i32 %v0_1000afcc to i32*
  store i32 %v0_1000afd0, i32* %v2_1000afd0, align 4
  br label %dec_label_pc_1000aff0

dec_label_pc_1000afd8:                            ; preds = %dec_label_pc_1000af94
  %v3_1000afd8 = icmp eq i32 %v0_1000afb8, 0
  store i32 %v0_1000afb8, i32* @r28, align 4
  br i1 %v3_1000afd8, label %dec_label_pc_1000afec, label %dec_label_pc_1000aff0

dec_label_pc_1000afec:                            ; preds = %dec_label_pc_1000afd8
  %v0_1000afe0 = load i32, i32* @r30, align 4
  store i32 268480496, i32* @lr, align 4
  %v4_1000afec = call i32 @function_1000b55c(i32* nonnull %stack_var_-104, i32 %v0_1000afe0, i32 0)
  br label %dec_label_pc_1000aff0

dec_label_pc_1000aff0:                            ; preds = %dec_label_pc_1000afd8, %dec_label_pc_1000afcc, %dec_label_pc_1000afec
  %v0_1000aff4 = load i32, i32* @r28, align 4
  ret i32 %v0_1000aff4

; uselistorder directives
  uselistorder i32 %v0_1000afb8, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000aff0, { 2, 0, 1 }
}

define i32 @function_1000b008(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000b008:
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v0_1000b01c = call i32 @function_1000b098()
  store i32 %v0_1000b01c, i32* @r30, align 4
  %tmp18 = icmp slt i32 %v0_1000b01c, 1
  br i1 %tmp18, label %dec_label_pc_1000b080, label %dec_label_pc_1000b028

dec_label_pc_1000b028:                            ; preds = %dec_label_pc_1000b008
  %v0_1000b028 = load i32, i32* @r31, align 4
  %v2_1000b028 = add i32 %v0_1000b028, %v0_1000b01c
  store i32 %v2_1000b028, i32* %r29.global-to-local, align 4
  %v2_1000b0703 = icmp ult i32 %v0_1000b028, %v2_1000b028
  br i1 %v2_1000b0703, label %dec_label_pc_1000b030, label %dec_label_pc_1000b080

dec_label_pc_1000b030:                            ; preds = %dec_label_pc_1000b028, %dec_label_pc_1000b030
  %v1_1000b040 = phi i32 [ %v2_1000b06c, %dec_label_pc_1000b030 ], [ %v0_1000b028, %dec_label_pc_1000b028 ]
  %v1_1000b07410.in = phi i32 [ %v2_1000b06c, %dec_label_pc_1000b030 ], [ %v0_1000b028, %dec_label_pc_1000b028 ]
  %v1_1000b07811.in = phi i32 [ %v2_1000b06c, %dec_label_pc_1000b030 ], [ %v0_1000b028, %dec_label_pc_1000b028 ]
  %v1_1000b07410 = add i32 %v1_1000b07410.in, 11
  %v1_1000b07811 = add i32 %v1_1000b07811.in, 19
  %v1_1000b030 = add i32 %v1_1000b040, 4
  %v2_1000b030 = inttoptr i32 %v1_1000b030 to i32*
  %v3_1000b030 = load i32, i32* %v2_1000b030, align 4
  store i32 %v3_1000b030, i32* %r11.global-to-local, align 4
  %v1_1000b034 = add i32 %v1_1000b040, 12
  %v2_1000b034 = inttoptr i32 %v1_1000b034 to i32*
  %v3_1000b034 = load i32, i32* %v2_1000b034, align 4
  %v1_1000b038 = add i32 %v1_1000b040, 16
  %v2_1000b038 = inttoptr i32 %v1_1000b038 to i16*
  %v3_1000b038 = load i16, i16* %v2_1000b038, align 2
  %v4_1000b038 = zext i16 %v3_1000b038 to i32
  store i32 %v4_1000b038, i32* %r5.global-to-local, align 4
  %v1_1000b03c = add i32 %v1_1000b040, 18
  %v2_1000b03c = inttoptr i32 %v1_1000b03c to i8*
  %v3_1000b03c = load i8, i8* %v2_1000b03c, align 1
  %v4_1000b03c = zext i8 %v3_1000b03c to i32
  store i32 %v4_1000b03c, i32* %r9.global-to-local, align 4
  store i32 %v3_1000b034, i32* %v2_1000b030, align 4
  %v0_1000b044 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b044 = load i32, i32* @r31, align 4
  %v2_1000b044 = inttoptr i32 %v1_1000b044 to i32*
  store i32 %v0_1000b044, i32* %v2_1000b044, align 4
  %v0_1000b048 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b048 = trunc i32 %v0_1000b048 to i8
  %v2_1000b048 = load i32, i32* @r31, align 4
  %v3_1000b048 = add i32 %v2_1000b048, 10
  %v4_1000b048 = inttoptr i32 %v3_1000b048 to i8*
  store i8 %v1_1000b048, i8* %v4_1000b048, align 1
  %v0_1000b04c = load i32, i32* %r5.global-to-local, align 4
  %v1_1000b04c = trunc i32 %v0_1000b04c to i16
  %v2_1000b04c = load i32, i32* @r31, align 4
  %v3_1000b04c = add i32 %v2_1000b04c, 8
  %v4_1000b04c = inttoptr i32 %v3_1000b04c to i16*
  store i16 %v1_1000b04c, i16* %v4_1000b04c, align 2
  %v0_1000b050 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000b050 = add i32 %v0_1000b050, -19
  store i32 %v1_1000b050, i32* %r5.global-to-local, align 4
  store i32 268480600, i32* @lr, align 4
  %v3_1000b054 = call i32 @function_10009868(i32 %v1_1000b07410, i32 %v1_1000b07811, i32 %v1_1000b050)
  %v0_1000b058 = load i32, i32* @r31, align 4
  %v1_1000b058 = add i32 %v0_1000b058, 8
  %v2_1000b058 = inttoptr i32 %v1_1000b058 to i16*
  %v3_1000b058 = load i16, i16* %v2_1000b058, align 2
  %v4_1000b058 = zext i16 %v3_1000b058 to i32
  store i32 %v4_1000b058, i32* %r5.global-to-local, align 4
  store i32 268480616, i32* @lr, align 4
  %v3_1000b064 = call i32 @function_10009868(i32 %v0_1000b058, i32 %v0_1000b058, i32 %v4_1000b058)
  %v0_1000b068 = load i32, i32* @r31, align 4
  %v1_1000b068 = add i32 %v0_1000b068, 8
  %v2_1000b068 = inttoptr i32 %v1_1000b068 to i16*
  %v3_1000b068 = load i16, i16* %v2_1000b068, align 2
  %v4_1000b068 = zext i16 %v3_1000b068 to i32
  %v2_1000b06c = add i32 %v4_1000b068, %v0_1000b068
  store i32 %v2_1000b06c, i32* @r31, align 4
  %v1_1000b070 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b070 = icmp ult i32 %v2_1000b06c, %v1_1000b070
  br i1 %v2_1000b070, label %dec_label_pc_1000b030, label %dec_label_pc_1000b070.dec_label_pc_1000b080.loopexit_crit_edge

dec_label_pc_1000b070.dec_label_pc_1000b080.loopexit_crit_edge: ; preds = %dec_label_pc_1000b030
  %v0_1000b084.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000b080

dec_label_pc_1000b080:                            ; preds = %dec_label_pc_1000b028, %dec_label_pc_1000b070.dec_label_pc_1000b080.loopexit_crit_edge, %dec_label_pc_1000b008
  %v0_1000b084 = phi i32 [ %v0_1000b01c, %dec_label_pc_1000b008 ], [ %v0_1000b084.pre.pre, %dec_label_pc_1000b070.dec_label_pc_1000b080.loopexit_crit_edge ], [ %v0_1000b01c, %dec_label_pc_1000b028 ]
  ret i32 %v0_1000b084

; uselistorder directives
  uselistorder i32 %v2_1000b06c, { 3, 4, 2, 0, 1 }
  uselistorder i32 %v0_1000b058, { 1, 0, 2 }
  uselistorder i32 %v1_1000b040, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1000b028, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v0_1000b01c, { 1, 2, 0, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @function_10009868, { 1, 0, 2 }
  uselistorder i32 11, { 0, 30, 29, 2, 10, 11, 12, 13, 14, 15, 3, 16, 1, 17, 18, 19, 20, 21, 22, 4, 23, 24, 5, 25, 26, 8, 6, 27, 28, 9, 7 }
  uselistorder label %dec_label_pc_1000b080, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000b030, { 1, 0 }
}

define i32 @function_1000b098() local_unnamed_addr {
dec_label_pc_1000b098:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000b09c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000b09c, i32* %stack_var_-48, align 4
  %v5_1000b09c = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v4_1000b09c, i32* %r9.global-to-local, align 4
  %v0_1000b0a8 = load i32, i32* @r5, align 4
  %v1_1000b0a8 = add i32 %v0_1000b0a8, 30
  %v1_1000b0ac = call i32 @__asm_rlwinm(i32 %v1_1000b0a8, i32 0, i32 0, i32 27)
  store i32 %v5_1000b09c, i32* @r31, align 4
  %v1_1000b0bc = load i32, i32* @r1, align 4
  %v3_1000b0bc = sub i32 %v1_1000b0bc, %v1_1000b0ac
  %v4_1000b0bc = inttoptr i32 %v3_1000b0bc to i32*
  store i32 %v4_1000b09c, i32* %v4_1000b0bc, align 4
  %v0_1000b0c0 = load i32, i32* @r4, align 4
  store i32 %v0_1000b0c0, i32* @r28, align 4
  %v0_1000b0c4 = load i32, i32* @r5, align 4
  store i32 %v0_1000b0c4, i32* @r23, align 4
  %v0_1000b0c8 = load i32, i32* @r3, align 4
  store i32 %v0_1000b0c8, i32* @r22, align 4
  %v1_1000b0cc = add i32 %v3_1000b0bc, 23
  %v1_1000b0d0 = call i32 @__asm_rlwinm(i32 %v1_1000b0cc, i32 0, i32 0, i32 27)
  store i32 %v1_1000b0d0, i32* @r27, align 4
  store i32 %v1_1000b0d0, i32* %r4.global-to-local, align 4
  %v0_1000b0e0 = call i32 @__asm_mfcr()
  %v1_1000b0e4 = and i32 %v0_1000b0e0, 268435456
  store i32 %v1_1000b0e4, i32* %r9.global-to-local, align 4
  %v3_1000b0e4 = icmp eq i32 %v1_1000b0e4, 0
  store i32 %v0_1000b0e0, i32* %r30.global-to-local, align 4
  br i1 %v3_1000b0e4, label %dec_label_pc_1000b0fc, label %dec_label_pc_1000b0f0

dec_label_pc_1000b0f0:                            ; preds = %dec_label_pc_1000b098
  %v0_1000b0f0 = call i32 @function_10009824()
  %v0_1000b0f4 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000b0f4 = inttoptr i32 %v0_1000b0f0 to i32*
  store i32 %v0_1000b0f4, i32* %v2_1000b0f4, align 4
  br label %dec_label_pc_1000b108

dec_label_pc_1000b0fc:                            ; preds = %dec_label_pc_1000b098
  %v3_1000b0fc = icmp eq i32 %v0_1000b0e0, -1
  store i32 %v0_1000b0e0, i32* %r24.global-to-local, align 4
  br i1 %v3_1000b0fc, label %dec_label_pc_1000b108, label %dec_label_pc_1000b110

dec_label_pc_1000b108:                            ; preds = %dec_label_pc_1000b0fc, %dec_label_pc_1000b0f0
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000b1d4

dec_label_pc_1000b110:                            ; preds = %dec_label_pc_1000b0fc
  %v0_1000b110 = load i32, i32* @r28, align 4
  store i32 %v0_1000b110, i32* %r29.global-to-local, align 4
  store i32 %v1_1000b0d0, i32* %r30.global-to-local, align 4
  store i32 -1, i32* @r25, align 4
  store i32 -1, i32* %r26.global-to-local, align 4
  %v2_1000b1b812 = add i32 %v0_1000b0e0, %v1_1000b0d0
  %v1_1000b1bc13 = load i32, i32* @r23, align 4
  %v2_1000b1bc14 = add i32 %v1_1000b1bc13, %v0_1000b110
  store i32 %v2_1000b1bc14, i32* %r10.global-to-local, align 4
  %v2_1000b1c015 = icmp ult i32 %v1_1000b0d0, %v2_1000b1b812
  %v1_1000b1c417 = add i32 %v0_1000b110, 19
  store i32 %v1_1000b1c417, i32* @r3, align 4
  %v1_1000b1c818 = add i32 %v1_1000b0d0, 19
  store i32 %v1_1000b1c818, i32* @r4, align 4
  br i1 %v2_1000b1c015, label %dec_label_pc_1000b124, label %dec_label_pc_1000b1d0

dec_label_pc_1000b124:                            ; preds = %dec_label_pc_1000b110, %dec_label_pc_1000b16c
  %v0_1000b12419 = phi i32 [ %v2_1000b1b4, %dec_label_pc_1000b16c ], [ %v1_1000b0d0, %dec_label_pc_1000b110 ]
  %v1_1000b124 = add i32 %v0_1000b12419, 16
  %v2_1000b124 = inttoptr i32 %v1_1000b124 to i16*
  %v3_1000b124 = load i16, i16* %v2_1000b124, align 2
  %v4_1000b124 = zext i16 %v3_1000b124 to i32
  %v1_1000b128 = add nuw nsw i32 %v4_1000b124, 7
  store i32 %v1_1000b128, i32* %r9.global-to-local, align 4
  %v1_1000b12c = call i32 @__asm_rlwinm(i32 %v1_1000b128, i32 0, i32 0, i32 28)
  %v0_1000b130 = load i32, i32* %r29.global-to-local, align 4
  %v3_1000b130 = add i32 %v1_1000b12c, %v0_1000b130
  store i32 %v3_1000b130, i32* %r11.global-to-local, align 4
  %v1_1000b134 = load i32, i32* %r10.global-to-local, align 4
  %v3_1000b134 = icmp ugt i32 %v3_1000b130, %v1_1000b134
  br i1 %v3_1000b134, label %dec_label_pc_1000b13c, label %dec_label_pc_1000b16c

dec_label_pc_1000b13c:                            ; preds = %dec_label_pc_1000b124
  %v0_1000b13c = load i32, i32* @r22, align 4
  %v0_1000b140 = load i32, i32* @r25, align 4
  %v0_1000b144 = load i32, i32* %r26.global-to-local, align 4
  store i32 268480848, i32* @lr, align 4
  %v4_1000b14c = call i32 @function_1000b310(i32 %v0_1000b13c, i32 %v0_1000b140, i32 %v0_1000b144, i32 0)
  %v0_1000b150 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000b150 = load i32, i32* @r28, align 4
  %v4_1000b150 = icmp eq i32 %v0_1000b150, %v1_1000b150
  br i1 %v4_1000b150, label %dec_label_pc_1000b158, label %dec_label_pc_1000b1d0

dec_label_pc_1000b158:                            ; preds = %dec_label_pc_1000b13c
  %v0_1000b158 = call i32 @function_10009824()
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1000b164 = inttoptr i32 %v0_1000b158 to i32*
  store i32 22, i32* %v2_1000b164, align 4
  %v0_1000b1d8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000b1d4

dec_label_pc_1000b16c:                            ; preds = %dec_label_pc_1000b124
  %v2_1000b12c = trunc i32 %v1_1000b12c to i16
  %v0_1000b16c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000b16c = inttoptr i32 %v0_1000b16c to i32*
  %v2_1000b16c = load i32, i32* %v1_1000b16c, align 4
  store i32 %v2_1000b16c, i32* %r9.global-to-local, align 4
  %v1_1000b170 = add i32 %v0_1000b16c, 4
  %v2_1000b170 = inttoptr i32 %v1_1000b170 to i32*
  %v3_1000b170 = load i32, i32* %v2_1000b170, align 4
  store i32 %v3_1000b170, i32* %r10.global-to-local, align 4
  %v1_1000b174 = add i32 %v0_1000b16c, 8
  %v2_1000b174 = inttoptr i32 %v1_1000b174 to i32*
  %v3_1000b174 = load i32, i32* %v2_1000b174, align 4
  store i32 %v3_1000b174, i32* @r25, align 4
  %v1_1000b178 = add i32 %v0_1000b16c, 12
  %v2_1000b178 = inttoptr i32 %v1_1000b178 to i32*
  %v3_1000b178 = load i32, i32* %v2_1000b178, align 4
  store i32 %v3_1000b178, i32* %r26.global-to-local, align 4
  %v2_1000b17c = inttoptr i32 %v0_1000b130 to i32*
  store i32 %v2_1000b16c, i32* %v2_1000b17c, align 4
  %v0_1000b180 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b180 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b180 = add i32 %v1_1000b180, 4
  %v3_1000b180 = inttoptr i32 %v2_1000b180 to i32*
  store i32 %v0_1000b180, i32* %v3_1000b180, align 4
  %v0_1000b184 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000b184 = add i32 %v0_1000b184, 8
  %v2_1000b184 = inttoptr i32 %v1_1000b184 to i32*
  %v3_1000b184 = load i32, i32* %v2_1000b184, align 4
  store i32 %v3_1000b184, i32* %r9.global-to-local, align 4
  %v1_1000b188 = add i32 %v0_1000b184, 12
  %v2_1000b188 = inttoptr i32 %v1_1000b188 to i32*
  %v3_1000b188 = load i32, i32* %v2_1000b188, align 4
  store i32 %v3_1000b188, i32* %r10.global-to-local, align 4
  %v3_1000b18c = load i32, i32* %r29.global-to-local, align 4
  %v4_1000b18c = add i32 %v3_1000b18c, 16
  %v5_1000b18c = inttoptr i32 %v4_1000b18c to i16*
  store i16 %v2_1000b12c, i16* %v5_1000b18c, align 2
  %v0_1000b190 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b190 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b190 = add i32 %v1_1000b190, 8
  %v3_1000b190 = inttoptr i32 %v2_1000b190 to i32*
  store i32 %v0_1000b190, i32* %v3_1000b190, align 4
  %v0_1000b194 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b194 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b194 = add i32 %v1_1000b194, 12
  %v3_1000b194 = inttoptr i32 %v2_1000b194 to i32*
  store i32 %v0_1000b194, i32* %v3_1000b194, align 4
  %v0_1000b198 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000b198 = add i32 %v0_1000b198, 18
  %v2_1000b198 = inttoptr i32 %v1_1000b198 to i8*
  %v3_1000b198 = load i8, i8* %v2_1000b198, align 1
  %v2_1000b19c = load i32, i32* %r29.global-to-local, align 4
  %v3_1000b19c = add i32 %v2_1000b19c, 18
  %v4_1000b19c = inttoptr i32 %v3_1000b19c to i8*
  store i8 %v3_1000b198, i8* %v4_1000b19c, align 1
  %v0_1000b1a0 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000b1a0, i32* %r29.global-to-local, align 4
  %v0_1000b1a4 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000b1a4 = add i32 %v0_1000b1a4, 16
  %v2_1000b1a4 = inttoptr i32 %v1_1000b1a4 to i16*
  %v3_1000b1a4 = load i16, i16* %v2_1000b1a4, align 2
  %v4_1000b1a4 = zext i16 %v3_1000b1a4 to i32
  %v1_1000b1a8 = add nsw i32 %v4_1000b1a4, -19
  store i32 %v1_1000b1a8, i32* @r5, align 4
  store i32 268480944, i32* @lr, align 4
  %v0_1000b1ac = call i32 @function_1000b60c()
  %v0_1000b1b0 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000b1b0 = add i32 %v0_1000b1b0, 16
  %v2_1000b1b0 = inttoptr i32 %v1_1000b1b0 to i16*
  %v3_1000b1b0 = load i16, i16* %v2_1000b1b0, align 2
  %v4_1000b1b0 = zext i16 %v3_1000b1b0 to i32
  %v2_1000b1b4 = add i32 %v4_1000b1b0, %v0_1000b1b0
  store i32 %v2_1000b1b4, i32* %r30.global-to-local, align 4
  %v1_1000b1b8.pre = load i32, i32* %r24.global-to-local, align 4
  %v0_1000b1bc.pre = load i32, i32* @r28, align 4
  %v0_1000b1c4.pre = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b1b8 = add i32 %v1_1000b1b8.pre, %v1_1000b0d0
  %v1_1000b1bc = load i32, i32* @r23, align 4
  %v2_1000b1bc = add i32 %v1_1000b1bc, %v0_1000b1bc.pre
  store i32 %v2_1000b1bc, i32* %r10.global-to-local, align 4
  %v2_1000b1c0 = icmp ult i32 %v2_1000b1b4, %v2_1000b1b8
  %v1_1000b1c4 = add i32 %v0_1000b1c4.pre, 19
  store i32 %v1_1000b1c4, i32* @r3, align 4
  %v1_1000b1c8 = add i32 %v2_1000b1b4, 19
  store i32 %v1_1000b1c8, i32* @r4, align 4
  br i1 %v2_1000b1c0, label %dec_label_pc_1000b124, label %dec_label_pc_1000b1d0

dec_label_pc_1000b1d0:                            ; preds = %dec_label_pc_1000b110, %dec_label_pc_1000b16c, %dec_label_pc_1000b13c
  %v1_1000b1d0 = phi i32 [ %v0_1000b150, %dec_label_pc_1000b13c ], [ %v0_1000b110, %dec_label_pc_1000b110 ], [ %v0_1000b1c4.pre, %dec_label_pc_1000b16c ]
  %v0_1000b1d0 = phi i32 [ %v1_1000b150, %dec_label_pc_1000b13c ], [ %v0_1000b110, %dec_label_pc_1000b110 ], [ %v0_1000b1bc.pre, %dec_label_pc_1000b16c ]
  %v2_1000b1d0 = sub i32 %v1_1000b1d0, %v0_1000b1d0
  store i32 %v2_1000b1d0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000b1d4

dec_label_pc_1000b1d4:                            ; preds = %dec_label_pc_1000b158, %dec_label_pc_1000b108, %dec_label_pc_1000b1d0
  %v0_1000b1d8 = phi i32 [ %v0_1000b1d8.pre, %dec_label_pc_1000b158 ], [ -1, %dec_label_pc_1000b108 ], [ %v2_1000b1d0, %dec_label_pc_1000b1d0 ]
  %v0_1000b1d4 = load i32, i32* @r1, align 4
  %v1_1000b1d4 = inttoptr i32 %v0_1000b1d4 to i32*
  %v2_1000b1d4 = load i32, i32* %v1_1000b1d4, align 4
  store i32 %v2_1000b1d4, i32* %r11.global-to-local, align 4
  ret i32 %v0_1000b1d8

; uselistorder directives
  uselistorder i32 %v2_1000b1b4, { 2, 1, 3, 0 }
  uselistorder i32 %v0_1000b16c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1000b12c, { 1, 0 }
  uselistorder i32 %v0_1000b0e0, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v1_1000b0d0, { 4, 0, 1, 2, 3, 5, 6, 7 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32* %r30.global-to-local, { 0, 4, 1, 2, 3, 5, 6, 7, 8 }
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32* %r10.global-to-local, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32 18, { 4, 5, 6, 0, 3, 7, 8, 1, 9, 2, 10, 11 }
  uselistorder i32 22, { 0, 1, 2, 3, 13, 4, 5, 6, 7, 14, 15, 16, 8, 9, 10, 11, 12 }
  uselistorder i32 7, { 28, 42, 10, 11, 21, 12, 13, 22, 14, 15, 23, 16, 17, 24, 25, 18, 26, 27, 0, 29, 1, 30, 2, 31, 32, 33, 3, 4, 34, 5, 35, 6, 36, 19, 37, 20, 7, 38, 39, 8, 40, 41, 9, 43 }
  uselistorder i32 19, { 23, 24, 1, 2, 0, 15, 16, 17, 3, 5, 4, 18, 7, 6, 19, 10, 11, 20, 21, 22, 12, 13, 14, 25, 26, 27, 28, 8, 9 }
  uselistorder i32* @r25, { 4, 5, 6, 1, 2, 3, 7, 8, 9, 10, 0, 11, 12, 13, 14, 15, 16 }
  uselistorder i32* @r27, { 28, 16, 17, 43, 44, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 18, 19, 1, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 41, 42, 45, 46, 47, 48, 49, 50 }
  uselistorder i32 23, { 14, 9, 15, 0, 1, 10, 2, 3, 11, 12, 13, 4, 5, 6, 7, 8 }
  uselistorder i32* @r22, { 11, 12, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* @r23, { 8, 0, 9, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32* @r1, { 7, 8, 2, 3, 4, 1, 5, 0, 9, 6, 10 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm, { 16, 17, 18, 27, 23, 25, 24, 26, 0, 29, 28, 1, 2, 3, 21, 22, 19, 20, 4, 5, 6, 7, 8, 9, 15, 10, 12, 13, 11, 14, 30 }
  uselistorder i32 27, { 4, 5, 6, 0, 7, 1, 8, 2, 9, 3, 10, 11 }
  uselistorder i32 30, { 6, 7, 3, 2, 1, 0, 4, 5 }
  uselistorder label %dec_label_pc_1000b1d4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b1d0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000b124, { 1, 0 }
}

define i32 @function_1000b1f0() local_unnamed_addr {
dec_label_pc_1000b1f0:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b208 = call i32 @__asm_mfcr()
  %v1_1000b20c = and i32 %v0_1000b208, 268435456
  %v3_1000b20c = icmp eq i32 %v1_1000b20c, 0
  store i32 %v0_1000b208, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b20c, label %dec_label_pc_1000b224, label %dec_label_pc_1000b218

dec_label_pc_1000b218:                            ; preds = %dec_label_pc_1000b1f0
  %v0_1000b218 = call i32 @function_10009824()
  %v0_1000b21c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b21c = inttoptr i32 %v0_1000b218 to i32*
  store i32 %v0_1000b21c, i32* %v2_1000b21c, align 4
  br label %dec_label_pc_1000b224

dec_label_pc_1000b224:                            ; preds = %dec_label_pc_1000b1f0, %dec_label_pc_1000b218
  %v0_1000b234 = phi i32 [ %v0_1000b208, %dec_label_pc_1000b1f0 ], [ -1, %dec_label_pc_1000b218 ]
  ret i32 %v0_1000b234

; uselistorder directives
  uselistorder label %dec_label_pc_1000b224, { 1, 0 }
}

define i32 @function_1000b238() local_unnamed_addr {
dec_label_pc_1000b238:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b250 = call i32 @__asm_mfcr()
  %v1_1000b254 = and i32 %v0_1000b250, 268435456
  %v3_1000b254 = icmp eq i32 %v1_1000b254, 0
  store i32 %v0_1000b250, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b254, label %dec_label_pc_1000b26c, label %dec_label_pc_1000b260

dec_label_pc_1000b260:                            ; preds = %dec_label_pc_1000b238
  %v0_1000b260 = call i32 @function_10009824()
  %v0_1000b264 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b264 = inttoptr i32 %v0_1000b260 to i32*
  store i32 %v0_1000b264, i32* %v2_1000b264, align 4
  br label %dec_label_pc_1000b26c

dec_label_pc_1000b26c:                            ; preds = %dec_label_pc_1000b238, %dec_label_pc_1000b260
  %v0_1000b27c = phi i32 [ %v0_1000b250, %dec_label_pc_1000b238 ], [ -1, %dec_label_pc_1000b260 ]
  ret i32 %v0_1000b27c

; uselistorder directives
  uselistorder label %dec_label_pc_1000b26c, { 1, 0 }
}

define i32 @function_1000b280(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b280:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b298 = call i32 @__asm_mfcr()
  %v1_1000b29c = and i32 %v0_1000b298, 268435456
  %v3_1000b29c = icmp eq i32 %v1_1000b29c, 0
  store i32 %v0_1000b298, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b29c, label %dec_label_pc_1000b2b4, label %dec_label_pc_1000b2a8

dec_label_pc_1000b2a8:                            ; preds = %dec_label_pc_1000b280
  %v0_1000b2a8 = call i32 @function_10009824()
  %v0_1000b2ac = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b2ac = inttoptr i32 %v0_1000b2a8 to i32*
  store i32 %v0_1000b2ac, i32* %v2_1000b2ac, align 4
  br label %dec_label_pc_1000b2b4

dec_label_pc_1000b2b4:                            ; preds = %dec_label_pc_1000b280, %dec_label_pc_1000b2a8
  %v0_1000b2c4 = phi i32 [ %v0_1000b298, %dec_label_pc_1000b280 ], [ -1, %dec_label_pc_1000b2a8 ]
  ret i32 %v0_1000b2c4

; uselistorder directives
  uselistorder label %dec_label_pc_1000b2b4, { 1, 0 }
}

define i32 @function_1000b2c8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b2c8:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b2e0 = call i32 @__asm_mfcr()
  %v1_1000b2e4 = and i32 %v0_1000b2e0, 268435456
  %v3_1000b2e4 = icmp eq i32 %v1_1000b2e4, 0
  store i32 %v0_1000b2e0, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b2e4, label %dec_label_pc_1000b2fc, label %dec_label_pc_1000b2f0

dec_label_pc_1000b2f0:                            ; preds = %dec_label_pc_1000b2c8
  %v0_1000b2f0 = call i32 @function_10009824()
  %v0_1000b2f4 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b2f4 = inttoptr i32 %v0_1000b2f0 to i32*
  store i32 %v0_1000b2f4, i32* %v2_1000b2f4, align 4
  br label %dec_label_pc_1000b2fc

dec_label_pc_1000b2fc:                            ; preds = %dec_label_pc_1000b2c8, %dec_label_pc_1000b2f0
  %v0_1000b30c = phi i32 [ %v0_1000b2e0, %dec_label_pc_1000b2c8 ], [ -1, %dec_label_pc_1000b2f0 ]
  ret i32 %v0_1000b30c

; uselistorder directives
  uselistorder label %dec_label_pc_1000b2fc, { 1, 0 }
}

define i32 @function_1000b310(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000b310:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000b310 = load i32, i32* @lr, align 4
  store i32 140, i32* %r0.global-to-local, align 4
  %v0_1000b33c = call i32 @__asm_mfcr()
  %v1_1000b340 = and i32 %v0_1000b33c, 268435456
  %v3_1000b340 = icmp eq i32 %v1_1000b340, 0
  store i32 %v0_1000b33c, i32* %r31.global-to-local, align 4
  store i32 %v0_1000b33c, i32* %r0.global-to-local, align 4
  br i1 %v3_1000b340, label %dec_label_pc_1000b364, label %dec_label_pc_1000b354

dec_label_pc_1000b354:                            ; preds = %dec_label_pc_1000b310
  %v0_1000b354 = call i32 @function_10009824()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_1000b35c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b35c = inttoptr i32 %v0_1000b354 to i32*
  store i32 %v0_1000b35c, i32* %v2_1000b35c, align 4
  %v0_1000b368.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000b368

dec_label_pc_1000b364:                            ; preds = %dec_label_pc_1000b310
  %v3_1000b34c = icmp eq i32 %v0_1000b33c, 0
  br i1 %v3_1000b34c, label %dec_label_pc_1000b374, label %dec_label_pc_1000b368

dec_label_pc_1000b368:                            ; preds = %dec_label_pc_1000b364, %dec_label_pc_1000b354
  %v0_1000b368 = phi i32 [ %v0_1000b33c, %dec_label_pc_1000b364 ], [ %v0_1000b368.pre, %dec_label_pc_1000b354 ]
  %tmp = icmp slt i32 %v0_1000b368, 0
  %v1_1000b36c = zext i1 %tmp to i32
  %v2_1000b36c = ashr i32 %v0_1000b368, 31
  %v3_1000b36c = and i32 %v2_1000b36c, -2
  %v4_1000b36c = or i32 %v3_1000b36c, %v1_1000b36c
  br label %dec_label_pc_1000b37c

dec_label_pc_1000b374:                            ; preds = %dec_label_pc_1000b364
  %v3_1000b374 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000b37c

dec_label_pc_1000b37c:                            ; preds = %dec_label_pc_1000b368, %dec_label_pc_1000b374
  %v0_1000b38c = phi i32 [ %v4_1000b36c, %dec_label_pc_1000b368 ], [ %v3_1000b374, %dec_label_pc_1000b374 ]
  store i32 %v0_1000b310, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000b38c

; uselistorder directives
  uselistorder i32 %v0_1000b368, { 1, 0 }
  uselistorder i32 %v0_1000b33c, { 0, 3, 2, 1, 4 }
  uselistorder i32 -2, { 8, 7, 1, 0, 9, 10, 6, 11, 2, 12, 3, 13, 4, 5 }
  uselistorder label %dec_label_pc_1000b37c, { 1, 0 }
}

define i32 @function_1000b390(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b390:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b3a8 = call i32 @__asm_mfcr()
  %v1_1000b3ac = and i32 %v0_1000b3a8, 268435456
  %v3_1000b3ac = icmp eq i32 %v1_1000b3ac, 0
  store i32 %v0_1000b3a8, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b3ac, label %dec_label_pc_1000b3c4, label %dec_label_pc_1000b3b8

dec_label_pc_1000b3b8:                            ; preds = %dec_label_pc_1000b390
  %v0_1000b3b8 = call i32 @function_10009824()
  %v0_1000b3bc = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b3bc = inttoptr i32 %v0_1000b3b8 to i32*
  store i32 %v0_1000b3bc, i32* %v2_1000b3bc, align 4
  br label %dec_label_pc_1000b3c4

dec_label_pc_1000b3c4:                            ; preds = %dec_label_pc_1000b390, %dec_label_pc_1000b3b8
  %v0_1000b3d4 = phi i32 [ %v0_1000b3a8, %dec_label_pc_1000b390 ], [ -1, %dec_label_pc_1000b3b8 ]
  ret i32 %v0_1000b3d4

; uselistorder directives
  uselistorder label %dec_label_pc_1000b3c4, { 1, 0 }
}

define i32 @function_1000b3d8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b3d8:
  store i32 %arg1, i32* @r30, align 4
  %v3_1000b3f4 = load i32, i32* @global_var_1001c300.368, align 4
  %v3_1000b3f8 = icmp eq i32 %v3_1000b3f4, 0
  br i1 %v3_1000b3f8, label %dec_label_pc_1000b400, label %dec_label_pc_1000b40c

dec_label_pc_1000b400:                            ; preds = %dec_label_pc_1000b3d8
  store i32 268481540, i32* @lr, align 4
  %v1_1000b400 = call i32 @function_1000b9cc(i32 0)
  %v1_1000b404 = icmp slt i32 %v1_1000b400, 0
  br i1 %v1_1000b404, label %dec_label_pc_1000b42c, label %dec_label_pc_1000b400.dec_label_pc_1000b40c_crit_edge

dec_label_pc_1000b400.dec_label_pc_1000b40c_crit_edge: ; preds = %dec_label_pc_1000b400
  %v0_1000b40c.pre = load i32, i32* @r30, align 4
  %v3_1000b410.pre = load i32, i32* @global_var_1001c300.368, align 4
  br label %dec_label_pc_1000b40c

dec_label_pc_1000b40c:                            ; preds = %dec_label_pc_1000b400.dec_label_pc_1000b40c_crit_edge, %dec_label_pc_1000b3d8
  %v3_1000b410 = phi i32 [ %v3_1000b410.pre, %dec_label_pc_1000b400.dec_label_pc_1000b40c_crit_edge ], [ %v3_1000b3f4, %dec_label_pc_1000b3d8 ]
  %v1_1000b418 = phi i32 [ %v0_1000b40c.pre, %dec_label_pc_1000b400.dec_label_pc_1000b40c_crit_edge ], [ %arg1, %dec_label_pc_1000b3d8 ]
  %v3_1000b40c = icmp eq i32 %v1_1000b418, 0
  store i32 %v3_1000b410, i32* @r31, align 4
  br i1 %v3_1000b40c, label %dec_label_pc_1000b430, label %dec_label_pc_1000b420

dec_label_pc_1000b420:                            ; preds = %dec_label_pc_1000b40c
  %v2_1000b418 = add i32 %v1_1000b418, %v3_1000b410
  store i32 268481572, i32* @lr, align 4
  %v1_1000b420 = call i32 @function_1000b9cc(i32 %v2_1000b418)
  %tmp6 = icmp sgt i32 %v1_1000b420, -1
  br i1 %tmp6, label %dec_label_pc_1000b420.dec_label_pc_1000b430_crit_edge, label %dec_label_pc_1000b42c

dec_label_pc_1000b420.dec_label_pc_1000b430_crit_edge: ; preds = %dec_label_pc_1000b420
  %v0_1000b434.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000b430

dec_label_pc_1000b42c:                            ; preds = %dec_label_pc_1000b420, %dec_label_pc_1000b400
  store i32 -1, i32* @r31, align 4
  br label %dec_label_pc_1000b430

dec_label_pc_1000b430:                            ; preds = %dec_label_pc_1000b420.dec_label_pc_1000b430_crit_edge, %dec_label_pc_1000b40c, %dec_label_pc_1000b42c
  %v0_1000b434 = phi i32 [ %v0_1000b434.pre, %dec_label_pc_1000b420.dec_label_pc_1000b430_crit_edge ], [ %v3_1000b410, %dec_label_pc_1000b40c ], [ -1, %dec_label_pc_1000b42c ]
  ret i32 %v0_1000b434

; uselistorder directives
  uselistorder i32 %v3_1000b410, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_1000b9cc, { 1, 0 }
  uselistorder label %dec_label_pc_1000b430, { 2, 0, 1 }
}

define i32 @function_1000b448(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b448:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b460 = call i32 @__asm_mfcr()
  %v1_1000b464 = and i32 %v0_1000b460, 268435456
  %v3_1000b464 = icmp eq i32 %v1_1000b464, 0
  store i32 %v0_1000b460, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b464, label %dec_label_pc_1000b47c, label %dec_label_pc_1000b470

dec_label_pc_1000b470:                            ; preds = %dec_label_pc_1000b448
  %v0_1000b470 = call i32 @function_10009824()
  %v0_1000b474 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b474 = inttoptr i32 %v0_1000b470 to i32*
  store i32 %v0_1000b474, i32* %v2_1000b474, align 4
  br label %dec_label_pc_1000b47c

dec_label_pc_1000b47c:                            ; preds = %dec_label_pc_1000b448, %dec_label_pc_1000b470
  %v0_1000b48c = phi i32 [ %v0_1000b460, %dec_label_pc_1000b448 ], [ -1, %dec_label_pc_1000b470 ]
  ret i32 %v0_1000b48c

; uselistorder directives
  uselistorder label %dec_label_pc_1000b47c, { 1, 0 }
}

define i32 @function_1000b490(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b490:
  %r10.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* %r28.global-to-local, align 4
  store i32 268481720, i32* @lr, align 4
  %v3_1000b4b4 = call i32 @function_1000990c(i32 %arg2, i32 0, i32 104)
  %v2_1000b4b8 = load i32, i32* %arg1, align 4
  %v1_1000b4bc = add i32 %tmp, 4
  %v2_1000b4bc = inttoptr i32 %v1_1000b4bc to i32*
  %v3_1000b4bc = load i32, i32* %v2_1000b4bc, align 4
  store i32 %v3_1000b4bc, i32* %r10.global-to-local, align 4
  %v1_1000b4c0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b4c0 = inttoptr i32 %v1_1000b4c0 to i32*
  store i32 %v2_1000b4b8, i32* %v2_1000b4c0, align 4
  %v0_1000b4c4 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b4c4 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b4c4 = add i32 %v1_1000b4c4, 4
  %v3_1000b4c4 = inttoptr i32 %v2_1000b4c4 to i32*
  store i32 %v0_1000b4c4, i32* %v3_1000b4c4, align 4
  %v0_1000b4c8 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b4c8 = add i32 %v0_1000b4c8, 8
  %v2_1000b4c8 = inttoptr i32 %v1_1000b4c8 to i32*
  %v3_1000b4c8 = load i32, i32* %v2_1000b4c8, align 4
  %v1_1000b4cc = add i32 %v0_1000b4c8, 12
  %v2_1000b4cc = inttoptr i32 %v1_1000b4cc to i32*
  %v3_1000b4cc = load i32, i32* %v2_1000b4cc, align 4
  store i32 %v3_1000b4cc, i32* %r10.global-to-local, align 4
  %v1_1000b4d0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b4d0 = add i32 %v1_1000b4d0, 8
  %v3_1000b4d0 = inttoptr i32 %v2_1000b4d0 to i32*
  store i32 %v3_1000b4c8, i32* %v3_1000b4d0, align 4
  %v0_1000b4d4 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b4d4 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b4d4 = add i32 %v1_1000b4d4, 12
  %v3_1000b4d4 = inttoptr i32 %v2_1000b4d4 to i32*
  store i32 %v0_1000b4d4, i32* %v3_1000b4d4, align 4
  %v0_1000b4d8 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b4d8 = add i32 %v0_1000b4d8, 16
  %v2_1000b4d8 = inttoptr i32 %v1_1000b4d8 to i32*
  %v3_1000b4d8 = load i32, i32* %v2_1000b4d8, align 4
  %v1_1000b4dc = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b4dc = add i32 %v1_1000b4dc, 16
  %v3_1000b4dc = inttoptr i32 %v2_1000b4dc to i32*
  store i32 %v3_1000b4d8, i32* %v3_1000b4dc, align 4
  %v0_1000b4e0 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b4e0 = add i32 %v0_1000b4e0, 20
  %v2_1000b4e0 = inttoptr i32 %v1_1000b4e0 to i32*
  %v3_1000b4e0 = load i32, i32* %v2_1000b4e0, align 4
  %v1_1000b4e4 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b4e4 = add i32 %v1_1000b4e4, 20
  %v3_1000b4e4 = inttoptr i32 %v2_1000b4e4 to i32*
  store i32 %v3_1000b4e0, i32* %v3_1000b4e4, align 4
  %v0_1000b4e8 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b4e8 = add i32 %v0_1000b4e8, 24
  %v2_1000b4e8 = inttoptr i32 %v1_1000b4e8 to i32*
  %v3_1000b4e8 = load i32, i32* %v2_1000b4e8, align 4
  %v1_1000b4ec = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b4ec = add i32 %v1_1000b4ec, 24
  %v3_1000b4ec = inttoptr i32 %v2_1000b4ec to i32*
  store i32 %v3_1000b4e8, i32* %v3_1000b4ec, align 4
  %v0_1000b4f0 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b4f0 = add i32 %v0_1000b4f0, 28
  %v2_1000b4f0 = inttoptr i32 %v1_1000b4f0 to i32*
  %v3_1000b4f0 = load i32, i32* %v2_1000b4f0, align 4
  %v1_1000b4f4 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b4f4 = add i32 %v1_1000b4f4, 28
  %v3_1000b4f4 = inttoptr i32 %v2_1000b4f4 to i32*
  store i32 %v3_1000b4f0, i32* %v3_1000b4f4, align 4
  %v0_1000b4f8 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b4f8 = add i32 %v0_1000b4f8, 32
  %v2_1000b4f8 = inttoptr i32 %v1_1000b4f8 to i32*
  %v3_1000b4f8 = load i32, i32* %v2_1000b4f8, align 4
  %v1_1000b4fc = add i32 %v0_1000b4f8, 36
  %v2_1000b4fc = inttoptr i32 %v1_1000b4fc to i32*
  %v3_1000b4fc = load i32, i32* %v2_1000b4fc, align 4
  store i32 %v3_1000b4fc, i32* %r10.global-to-local, align 4
  %v1_1000b500 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b500 = add i32 %v1_1000b500, 32
  %v3_1000b500 = inttoptr i32 %v2_1000b500 to i32*
  store i32 %v3_1000b4f8, i32* %v3_1000b500, align 4
  %v0_1000b504 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b504 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b504 = add i32 %v1_1000b504, 36
  %v3_1000b504 = inttoptr i32 %v2_1000b504 to i32*
  store i32 %v0_1000b504, i32* %v3_1000b504, align 4
  %v0_1000b508 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b508 = add i32 %v0_1000b508, 48
  %v2_1000b508 = inttoptr i32 %v1_1000b508 to i32*
  %v3_1000b508 = load i32, i32* %v2_1000b508, align 4
  %v1_1000b50c = add i32 %v0_1000b508, 52
  %v2_1000b50c = inttoptr i32 %v1_1000b50c to i32*
  %v3_1000b50c = load i32, i32* %v2_1000b50c, align 4
  store i32 %v3_1000b50c, i32* %r10.global-to-local, align 4
  %v1_1000b510 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b510 = add i32 %v1_1000b510, 48
  %v3_1000b510 = inttoptr i32 %v2_1000b510 to i32*
  store i32 %v3_1000b508, i32* %v3_1000b510, align 4
  %v0_1000b514 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b514 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b514 = add i32 %v1_1000b514, 52
  %v3_1000b514 = inttoptr i32 %v2_1000b514 to i32*
  store i32 %v0_1000b514, i32* %v3_1000b514, align 4
  %v0_1000b518 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b518 = add i32 %v0_1000b518, 56
  %v2_1000b518 = inttoptr i32 %v1_1000b518 to i32*
  %v3_1000b518 = load i32, i32* %v2_1000b518, align 4
  %v1_1000b51c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b51c = add i32 %v1_1000b51c, 56
  %v3_1000b51c = inttoptr i32 %v2_1000b51c to i32*
  store i32 %v3_1000b518, i32* %v3_1000b51c, align 4
  %v0_1000b520 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b520 = add i32 %v0_1000b520, 64
  %v2_1000b520 = inttoptr i32 %v1_1000b520 to i32*
  %v3_1000b520 = load i32, i32* %v2_1000b520, align 4
  %v1_1000b524 = add i32 %v0_1000b520, 68
  %v2_1000b524 = inttoptr i32 %v1_1000b524 to i32*
  %v3_1000b524 = load i32, i32* %v2_1000b524, align 4
  store i32 %v3_1000b524, i32* %r10.global-to-local, align 4
  %v1_1000b528 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b528 = add i32 %v1_1000b528, 64
  %v3_1000b528 = inttoptr i32 %v2_1000b528 to i32*
  store i32 %v3_1000b520, i32* %v3_1000b528, align 4
  %v0_1000b52c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b52c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b52c = add i32 %v1_1000b52c, 68
  %v3_1000b52c = inttoptr i32 %v2_1000b52c to i32*
  store i32 %v0_1000b52c, i32* %v3_1000b52c, align 4
  %v0_1000b530 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b530 = add i32 %v0_1000b530, 72
  %v2_1000b530 = inttoptr i32 %v1_1000b530 to i32*
  %v3_1000b530 = load i32, i32* %v2_1000b530, align 4
  %v1_1000b534 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b534 = add i32 %v1_1000b534, 72
  %v3_1000b534 = inttoptr i32 %v2_1000b534 to i32*
  store i32 %v3_1000b530, i32* %v3_1000b534, align 4
  %v0_1000b538 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b538 = add i32 %v0_1000b538, 80
  %v2_1000b538 = inttoptr i32 %v1_1000b538 to i32*
  %v3_1000b538 = load i32, i32* %v2_1000b538, align 4
  %v1_1000b53c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b53c = add i32 %v1_1000b53c, 80
  %v3_1000b53c = inttoptr i32 %v2_1000b53c to i32*
  store i32 %v3_1000b538, i32* %v3_1000b53c, align 4
  %v0_1000b540 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b540 = add i32 %v0_1000b540, 88
  %v2_1000b540 = inttoptr i32 %v1_1000b540 to i32*
  %v3_1000b540 = load i32, i32* %v2_1000b540, align 4
  %v1_1000b544 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b544 = add i32 %v1_1000b544, 88
  %v3_1000b544 = inttoptr i32 %v2_1000b544 to i32*
  store i32 %v3_1000b540, i32* %v3_1000b544, align 4
  ret i32 %v3_1000b4b4

; uselistorder directives
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 16, 15, 18 }
  uselistorder i32* %r28.global-to-local, { 0, 1, 2, 3, 4, 11, 5, 6, 7, 8, 9, 10, 12 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1000b55c(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b55c:
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_1000b560 = load i32, i32* @lr, align 4
  store i32 %v0_1000b560, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %tmp, i32* @r28, align 4
  store i32 268481924, i32* @lr, align 4
  %v3_1000b580 = call i32 @function_1000990c(i32 %arg2, i32 0, i32 88)
  %v0_1000b584 = load i32, i32* @r28, align 4
  %v1_1000b584 = inttoptr i32 %v0_1000b584 to i32*
  %v2_1000b584 = load i32, i32* %v1_1000b584, align 4
  store i32 %v2_1000b584, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_1000b58c = load i32, i32* @r29, align 4
  %v2_1000b58c = add i32 %v1_1000b58c, 4
  %v3_1000b58c = inttoptr i32 %v2_1000b58c to i32*
  store i32 %v2_1000b584, i32* %v3_1000b58c, align 4
  %v0_1000b590 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b590 = load i32, i32* @r29, align 4
  %v2_1000b590 = inttoptr i32 %v1_1000b590 to i32*
  store i32 %v0_1000b590, i32* %v2_1000b590, align 4
  %v0_1000b594 = load i32, i32* @r28, align 4
  %v1_1000b594 = add i32 %v0_1000b594, 4
  %v2_1000b594 = inttoptr i32 %v1_1000b594 to i32*
  %v3_1000b594 = load i32, i32* %v2_1000b594, align 4
  store i32 %v3_1000b594, i32* %r0.global-to-local, align 4
  %v1_1000b598 = load i32, i32* @r29, align 4
  %v2_1000b598 = add i32 %v1_1000b598, 12
  %v3_1000b598 = inttoptr i32 %v2_1000b598 to i32*
  store i32 %v3_1000b594, i32* %v3_1000b598, align 4
  %v0_1000b59c = load i32, i32* @r28, align 4
  %v1_1000b59c = add i32 %v0_1000b59c, 8
  %v2_1000b59c = inttoptr i32 %v1_1000b59c to i32*
  %v3_1000b59c = load i32, i32* %v2_1000b59c, align 4
  store i32 %v3_1000b59c, i32* %r0.global-to-local, align 4
  %v1_1000b5a0 = load i32, i32* @r29, align 4
  %v2_1000b5a0 = add i32 %v1_1000b5a0, 16
  %v3_1000b5a0 = inttoptr i32 %v2_1000b5a0 to i32*
  store i32 %v3_1000b59c, i32* %v3_1000b5a0, align 4
  %v0_1000b5a4 = load i32, i32* @r28, align 4
  %v1_1000b5a4 = add i32 %v0_1000b5a4, 12
  %v2_1000b5a4 = inttoptr i32 %v1_1000b5a4 to i16*
  %v3_1000b5a4 = load i16, i16* %v2_1000b5a4, align 2
  %v4_1000b5a4 = zext i16 %v3_1000b5a4 to i32
  store i32 %v4_1000b5a4, i32* %r0.global-to-local, align 4
  %v1_1000b5a8 = load i32, i32* @r29, align 4
  %v2_1000b5a8 = add i32 %v1_1000b5a8, 20
  %v3_1000b5a8 = inttoptr i32 %v2_1000b5a8 to i32*
  store i32 %v4_1000b5a4, i32* %v3_1000b5a8, align 4
  %v0_1000b5ac = load i32, i32* @r28, align 4
  %v1_1000b5ac = add i32 %v0_1000b5ac, 16
  %v2_1000b5ac = inttoptr i32 %v1_1000b5ac to i32*
  %v3_1000b5ac = load i32, i32* %v2_1000b5ac, align 4
  store i32 %v3_1000b5ac, i32* %r0.global-to-local, align 4
  %v1_1000b5b0 = load i32, i32* @r29, align 4
  %v2_1000b5b0 = add i32 %v1_1000b5b0, 24
  %v3_1000b5b0 = inttoptr i32 %v2_1000b5b0 to i32*
  store i32 %v3_1000b5ac, i32* %v3_1000b5b0, align 4
  %v0_1000b5b4 = load i32, i32* @r28, align 4
  %v1_1000b5b4 = add i32 %v0_1000b5b4, 20
  %v2_1000b5b4 = inttoptr i32 %v1_1000b5b4 to i32*
  %v3_1000b5b4 = load i32, i32* %v2_1000b5b4, align 4
  store i32 %v3_1000b5b4, i32* %r0.global-to-local, align 4
  %v1_1000b5b8 = load i32, i32* @r29, align 4
  %v2_1000b5b8 = add i32 %v1_1000b5b8, 28
  %v3_1000b5b8 = inttoptr i32 %v2_1000b5b8 to i32*
  store i32 %v3_1000b5b4, i32* %v3_1000b5b8, align 4
  %v0_1000b5bc = load i32, i32* @r28, align 4
  %v1_1000b5bc = add i32 %v0_1000b5bc, 24
  %v2_1000b5bc = inttoptr i32 %v1_1000b5bc to i32*
  %v3_1000b5bc = load i32, i32* %v2_1000b5bc, align 4
  store i32 %v3_1000b5bc, i32* %r0.global-to-local, align 4
  %v0_1000b5c0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b5c0 = load i32, i32* @r29, align 4
  %v2_1000b5c0 = add i32 %v1_1000b5c0, 32
  %v3_1000b5c0 = inttoptr i32 %v2_1000b5c0 to i32*
  store i32 %v0_1000b5c0, i32* %v3_1000b5c0, align 4
  %v0_1000b5c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b5c4 = load i32, i32* @r29, align 4
  %v2_1000b5c4 = add i32 %v1_1000b5c4, 36
  %v3_1000b5c4 = inttoptr i32 %v2_1000b5c4 to i32*
  store i32 %v0_1000b5c4, i32* %v3_1000b5c4, align 4
  %v0_1000b5c8 = load i32, i32* @r28, align 4
  %v1_1000b5c8 = add i32 %v0_1000b5c8, 28
  %v2_1000b5c8 = inttoptr i32 %v1_1000b5c8 to i32*
  %v3_1000b5c8 = load i32, i32* %v2_1000b5c8, align 4
  store i32 %v3_1000b5c8, i32* %r0.global-to-local, align 4
  %v1_1000b5cc = load i32, i32* @r29, align 4
  %v2_1000b5cc = add i32 %v1_1000b5cc, 44
  %v3_1000b5cc = inttoptr i32 %v2_1000b5cc to i32*
  store i32 %v3_1000b5c8, i32* %v3_1000b5cc, align 4
  %v0_1000b5d0 = load i32, i32* @r28, align 4
  %v1_1000b5d0 = add i32 %v0_1000b5d0, 32
  %v2_1000b5d0 = inttoptr i32 %v1_1000b5d0 to i32*
  %v3_1000b5d0 = load i32, i32* %v2_1000b5d0, align 4
  store i32 %v3_1000b5d0, i32* %r0.global-to-local, align 4
  %v1_1000b5d4 = load i32, i32* @r29, align 4
  %v2_1000b5d4 = add i32 %v1_1000b5d4, 48
  %v3_1000b5d4 = inttoptr i32 %v2_1000b5d4 to i32*
  store i32 %v3_1000b5d0, i32* %v3_1000b5d4, align 4
  %v0_1000b5d8 = load i32, i32* @r28, align 4
  %v1_1000b5d8 = add i32 %v0_1000b5d8, 36
  %v2_1000b5d8 = inttoptr i32 %v1_1000b5d8 to i32*
  %v3_1000b5d8 = load i32, i32* %v2_1000b5d8, align 4
  store i32 %v3_1000b5d8, i32* %r0.global-to-local, align 4
  %v1_1000b5dc = load i32, i32* @r29, align 4
  %v2_1000b5dc = add i32 %v1_1000b5dc, 52
  %v3_1000b5dc = inttoptr i32 %v2_1000b5dc to i32*
  store i32 %v3_1000b5d8, i32* %v3_1000b5dc, align 4
  %v0_1000b5e0 = load i32, i32* @r28, align 4
  %v1_1000b5e0 = add i32 %v0_1000b5e0, 40
  %v2_1000b5e0 = inttoptr i32 %v1_1000b5e0 to i32*
  %v3_1000b5e0 = load i32, i32* %v2_1000b5e0, align 4
  store i32 %v3_1000b5e0, i32* %r0.global-to-local, align 4
  %v1_1000b5e4 = load i32, i32* @r29, align 4
  %v2_1000b5e4 = add i32 %v1_1000b5e4, 56
  %v3_1000b5e4 = inttoptr i32 %v2_1000b5e4 to i32*
  store i32 %v3_1000b5e0, i32* %v3_1000b5e4, align 4
  %v0_1000b5e8 = load i32, i32* @r28, align 4
  %v1_1000b5e8 = add i32 %v0_1000b5e8, 48
  %v2_1000b5e8 = inttoptr i32 %v1_1000b5e8 to i32*
  %v3_1000b5e8 = load i32, i32* %v2_1000b5e8, align 4
  store i32 %v3_1000b5e8, i32* %r0.global-to-local, align 4
  %v1_1000b5ec = load i32, i32* @r29, align 4
  %v2_1000b5ec = add i32 %v1_1000b5ec, 64
  %v3_1000b5ec = inttoptr i32 %v2_1000b5ec to i32*
  store i32 %v3_1000b5e8, i32* %v3_1000b5ec, align 4
  %v0_1000b5f0 = load i32, i32* @r28, align 4
  %v1_1000b5f0 = add i32 %v0_1000b5f0, 56
  %v2_1000b5f0 = inttoptr i32 %v1_1000b5f0 to i32*
  %v3_1000b5f0 = load i32, i32* %v2_1000b5f0, align 4
  %v1_1000b5f4 = load i32, i32* @r29, align 4
  %v2_1000b5f4 = add i32 %v1_1000b5f4, 72
  %v3_1000b5f4 = inttoptr i32 %v2_1000b5f4 to i32*
  store i32 %v3_1000b5f0, i32* %v3_1000b5f4, align 4
  store i32 %v0_1000b560, i32* %r0.global-to-local, align 4
  ret i32 %v3_1000b580

; uselistorder directives
  uselistorder i32 72, { 2, 0, 1 }
  uselistorder i32 64, { 19, 13, 14, 2, 21, 15, 0, 1, 12, 16, 17, 18, 3, 4, 20, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 56, { 7, 8, 0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 40, { 9, 0, 4, 1, 5, 6, 7, 8, 10, 3, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 52, { 4, 1, 2, 3, 5, 6, 0, 7 }
  uselistorder i32 48, { 3, 4, 1, 2, 5, 0, 6, 7 }
  uselistorder i32 36, { 9, 10, 6, 7, 0, 1, 8, 2, 3, 4, 5 }
  uselistorder i32 24, { 20, 21, 7, 8, 0, 1, 9, 27, 28, 29, 22, 23, 24, 10, 11, 12, 13, 14, 16, 17, 18, 19, 15, 2, 3, 4, 5, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 6 }
  uselistorder i32 20, { 27, 28, 19, 20, 21, 22, 29, 30, 31, 32, 23, 5, 0, 1, 24, 2, 25, 26, 6, 7, 8, 9, 33, 10, 34, 35, 36, 37, 38, 11, 39, 40, 41, 42, 43, 44, 45, 46, 12, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 13, 57, 58, 59, 60, 61, 62, 63, 64, 14, 65, 66, 67, 68, 69, 70, 15, 71, 72, 73, 74, 75, 76, 77, 16, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 3, 17, 90, 91, 92, 4, 18, 93, 94, 95 }
  uselistorder i32 16, { 92, 93, 77, 78, 94, 95, 96, 97, 98, 20, 91, 79, 176, 177, 99, 100, 46, 47, 48, 80, 49, 50, 81, 82, 104, 101, 83, 84, 51, 23, 86, 87, 18, 0, 19, 1, 2, 88, 3, 85, 90, 52, 89, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 24, 159, 160, 161, 162, 163, 4, 25, 102, 5, 6, 103, 105, 106, 26, 107, 108, 109, 110, 111, 112, 113, 27, 114, 115, 116, 29, 117, 28, 118, 119, 31, 120, 121, 7, 122, 123, 124, 30, 125, 126, 33, 127, 128, 129, 130, 131, 32, 37, 132, 133, 134, 8, 135, 136, 9, 10, 21, 138, 137, 34, 36, 35, 41, 139, 140, 141, 11, 142, 143, 12, 13, 22, 145, 144, 38, 40, 39, 146, 43, 147, 42, 148, 149, 14, 150, 44, 151, 152, 153, 15, 154, 157, 158, 155, 156, 164, 165, 16, 166, 45, 167, 168, 169, 17, 170, 173, 174, 171, 172, 175 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1000b60c() local_unnamed_addr {
dec_label_pc_1000b60c:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000b60c = load i32, i32* @r5, align 4
  %v1_1000b60c = call i32 @__asm_rlwinm.(i32 %v0_1000b60c, i32 29, i32 3, i32 31)
  store i32 %v1_1000b60c, i32* %r9.global-to-local, align 4
  %v4_1000b60c = icmp eq i32 %v1_1000b60c, 0
  %v0_1000b610 = load i32, i32* @r4, align 4
  %v1_1000b610 = add i32 %v0_1000b610, -4
  store i32 %v1_1000b610, i32* %r4.global-to-local, align 4
  %v0_1000b614 = load i32, i32* @r3, align 4
  %v1_1000b614 = add i32 %v0_1000b614, -4
  store i32 %v1_1000b614, i32* @r11, align 4
  br i1 %v4_1000b60c, label %dec_label_pc_1000b63c, label %dec_label_pc_1000b61c

dec_label_pc_1000b61c:                            ; preds = %dec_label_pc_1000b60c
  %v1_1000b61c = urem i32 %v1_1000b614, 4
  %v3_1000b61c = icmp eq i32 %v1_1000b61c, 0
  br i1 %v3_1000b61c, label %dec_label_pc_1000b624, label %dec_label_pc_1000b678

dec_label_pc_1000b624:                            ; preds = %dec_label_pc_1000b698.dec_label_pc_1000b624_crit_edge, %dec_label_pc_1000b61c
  %v1_1000b630.pre = phi i32 [ %v1_1000b614, %dec_label_pc_1000b61c ], [ %v1_1000b630.pre.pre, %dec_label_pc_1000b698.dec_label_pc_1000b624_crit_edge ]
  %v0_1000b624 = phi i32 [ %v1_1000b60c, %dec_label_pc_1000b61c ], [ %v1_1000b698, %dec_label_pc_1000b698.dec_label_pc_1000b624_crit_edge ]
  %.0 = phi i32 [ undef, %dec_label_pc_1000b61c ], [ %v2_1000b680, %dec_label_pc_1000b698.dec_label_pc_1000b624_crit_edge ]
  store i32 %v0_1000b624, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000b628

dec_label_pc_1000b628:                            ; preds = %dec_label_pc_1000b628, %dec_label_pc_1000b624
  %v1_1000b630 = phi i32 [ %v2_1000b634, %dec_label_pc_1000b628 ], [ %v1_1000b630.pre, %dec_label_pc_1000b624 ]
  %v0_1000b628 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000b628 = add i32 %v0_1000b628, 4
  %v2_1000b628 = inttoptr i32 %v1_1000b628 to i32*
  %v3_1000b628 = load i32, i32* %v2_1000b628, align 4
  %v1_1000b62c = add i32 %v0_1000b628, 8
  %v2_1000b62c = inttoptr i32 %v1_1000b62c to i32*
  %v3_1000b62c = load i32, i32* %v2_1000b62c, align 4
  store i32 %v3_1000b62c, i32* %r9.global-to-local, align 4
  store i32 %v1_1000b62c, i32* %r4.global-to-local, align 4
  %v2_1000b630 = add i32 %v1_1000b630, 4
  %v3_1000b630 = inttoptr i32 %v2_1000b630 to i32*
  store i32 %v3_1000b628, i32* %v3_1000b630, align 4
  %v0_1000b634 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b634 = load i32, i32* @r11, align 4
  %v2_1000b634 = add i32 %v1_1000b634, 8
  %v3_1000b634 = inttoptr i32 %v2_1000b634 to i32*
  store i32 %v0_1000b634, i32* %v3_1000b634, align 4
  store i32 %v2_1000b634, i32* @r11, align 4
  %v0_1000b638 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b638 = add i32 %v0_1000b638, -1
  store i32 %v1_1000b638, i32* %ctr.global-to-local, align 4
  %v2_1000b638 = icmp eq i32 %v1_1000b638, 0
  br i1 %v2_1000b638, label %dec_label_pc_1000b63c, label %dec_label_pc_1000b628

dec_label_pc_1000b63c:                            ; preds = %dec_label_pc_1000b628, %dec_label_pc_1000b698, %dec_label_pc_1000b60c
  %.1 = phi i32 [ undef, %dec_label_pc_1000b60c ], [ %v2_1000b680, %dec_label_pc_1000b698 ], [ %.0, %dec_label_pc_1000b628 ]
  %v1_1000b63c = urem i32 %.1, 8
  store i32 %v1_1000b63c, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1000b63c, 4
  br i1 %tmp, label %dec_label_pc_1000b654, label %dec_label_pc_1000b648

dec_label_pc_1000b648:                            ; preds = %dec_label_pc_1000b63c
  %v0_1000b648 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000b648 = add i32 %v0_1000b648, 4
  %v2_1000b648 = inttoptr i32 %v1_1000b648 to i32*
  %v3_1000b648 = load i32, i32* %v2_1000b648, align 4
  store i32 %v1_1000b648, i32* %r4.global-to-local, align 4
  %v1_1000b64c = add nsw i32 %v1_1000b63c, -4
  store i32 %v1_1000b64c, i32* @r5, align 4
  %v1_1000b650 = load i32, i32* @r11, align 4
  %v2_1000b650 = add i32 %v1_1000b650, 4
  %v3_1000b650 = inttoptr i32 %v2_1000b650 to i32*
  store i32 %v3_1000b648, i32* %v3_1000b650, align 4
  store i32 %v2_1000b650, i32* @r11, align 4
  %v0_1000b654.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000b654

dec_label_pc_1000b654:                            ; preds = %dec_label_pc_1000b63c, %dec_label_pc_1000b648
  %v0_1000b654 = phi i32 [ %v1_1000b63c, %dec_label_pc_1000b63c ], [ %v0_1000b654.pre, %dec_label_pc_1000b648 ]
  %v3_1000b654 = icmp eq i32 %v0_1000b654, 0
  %v0_1000b658 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000b654, i32 %v0_1000b658)
  %v0_1000b65c = load i32, i32* @r5, align 4
  store i32 %v0_1000b65c, i32* %ctr.global-to-local, align 4
  %v0_1000b660 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000b660 = add i32 %v0_1000b660, 3
  store i32 %v1_1000b660, i32* %r4.global-to-local, align 4
  %v0_1000b664 = load i32, i32* @r11, align 4
  %v1_1000b664 = add i32 %v0_1000b664, 3
  store i32 %v1_1000b664, i32* %r9.global-to-local, align 4
  %v1_1000b6689 = add i32 %v0_1000b660, 4
  %v2_1000b66810 = inttoptr i32 %v1_1000b6689 to i8*
  %v3_1000b66811 = load i8, i8* %v2_1000b66810, align 1
  store i32 %v1_1000b6689, i32* %r4.global-to-local, align 4
  %v3_1000b66c13 = add i32 %v0_1000b664, 4
  %v4_1000b66c14 = inttoptr i32 %v3_1000b66c13 to i8*
  store i8 %v3_1000b66811, i8* %v4_1000b66c14, align 1
  store i32 %v3_1000b66c13, i32* %r9.global-to-local, align 4
  %v0_1000b67015 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b67016 = add i32 %v0_1000b67015, -1
  store i32 %v1_1000b67016, i32* %ctr.global-to-local, align 4
  %v2_1000b67017 = icmp eq i32 %v1_1000b67016, 0
  br i1 %v2_1000b67017, label %dec_label_pc_1000b6a4, label %dec_label_pc_1000b668.dec_label_pc_1000b668_crit_edge

dec_label_pc_1000b668.dec_label_pc_1000b668_crit_edge: ; preds = %dec_label_pc_1000b654, %dec_label_pc_1000b668.dec_label_pc_1000b668_crit_edge
  %v3_1000b66c18 = phi i32 [ %v3_1000b66c, %dec_label_pc_1000b668.dec_label_pc_1000b668_crit_edge ], [ %v3_1000b66c13, %dec_label_pc_1000b654 ]
  %v0_1000b668.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1000b668 = add i32 %v0_1000b668.pre, 1
  %v2_1000b668 = inttoptr i32 %v1_1000b668 to i8*
  %v3_1000b668 = load i8, i8* %v2_1000b668, align 1
  store i32 %v1_1000b668, i32* %r4.global-to-local, align 4
  %v3_1000b66c = add i32 %v3_1000b66c18, 1
  %v4_1000b66c = inttoptr i32 %v3_1000b66c to i8*
  store i8 %v3_1000b668, i8* %v4_1000b66c, align 1
  store i32 %v3_1000b66c, i32* %r9.global-to-local, align 4
  %v0_1000b670 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b670 = add i32 %v0_1000b670, -1
  store i32 %v1_1000b670, i32* %ctr.global-to-local, align 4
  %v2_1000b670 = icmp eq i32 %v1_1000b670, 0
  br i1 %v2_1000b670, label %dec_label_pc_1000b6a4, label %dec_label_pc_1000b668.dec_label_pc_1000b668_crit_edge

dec_label_pc_1000b678:                            ; preds = %dec_label_pc_1000b61c
  %v1_1000b678 = sub nsw i32 4, %v1_1000b61c
  store i32 %v1_1000b678, i32* %ctr.global-to-local, align 4
  %v1_1000b680 = load i32, i32* @r5, align 4
  %v2_1000b680 = sub i32 %v1_1000b680, %v1_1000b678
  br label %dec_label_pc_1000b684

dec_label_pc_1000b684:                            ; preds = %dec_label_pc_1000b684.dec_label_pc_1000b684_crit_edge, %dec_label_pc_1000b678
  %v2_1000b68c = phi i32 [ %v1_1000b690, %dec_label_pc_1000b684.dec_label_pc_1000b684_crit_edge ], [ %v1_1000b614, %dec_label_pc_1000b678 ]
  %v0_1000b684 = phi i32 [ %v0_1000b684.pre, %dec_label_pc_1000b684.dec_label_pc_1000b684_crit_edge ], [ %v1_1000b610, %dec_label_pc_1000b678 ]
  %v1_1000b684 = add i32 %v0_1000b684, 4
  %v2_1000b684 = inttoptr i32 %v1_1000b684 to i8*
  %v3_1000b684 = load i8, i8* %v2_1000b684, align 1
  %v1_1000b688 = add i32 %v0_1000b684, 1
  store i32 %v1_1000b688, i32* %r4.global-to-local, align 4
  %v3_1000b68c = add i32 %v2_1000b68c, 4
  %v4_1000b68c = inttoptr i32 %v3_1000b68c to i8*
  store i8 %v3_1000b684, i8* %v4_1000b68c, align 1
  %v0_1000b690 = load i32, i32* @r11, align 4
  %v1_1000b690 = add i32 %v0_1000b690, 1
  store i32 %v1_1000b690, i32* @r11, align 4
  %v0_1000b694 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b694 = add i32 %v0_1000b694, -1
  store i32 %v1_1000b694, i32* %ctr.global-to-local, align 4
  %v2_1000b694 = icmp eq i32 %v1_1000b694, 0
  br i1 %v2_1000b694, label %dec_label_pc_1000b698, label %dec_label_pc_1000b684.dec_label_pc_1000b684_crit_edge

dec_label_pc_1000b684.dec_label_pc_1000b684_crit_edge: ; preds = %dec_label_pc_1000b684
  %v0_1000b684.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000b684

dec_label_pc_1000b698:                            ; preds = %dec_label_pc_1000b684
  %v1_1000b698 = call i32 @__asm_rlwinm.(i32 %v2_1000b680, i32 29, i32 3, i32 31)
  store i32 %v1_1000b698, i32* %r9.global-to-local, align 4
  %v4_1000b698 = icmp eq i32 %v1_1000b698, 0
  br i1 %v4_1000b698, label %dec_label_pc_1000b63c, label %dec_label_pc_1000b698.dec_label_pc_1000b624_crit_edge

dec_label_pc_1000b698.dec_label_pc_1000b624_crit_edge: ; preds = %dec_label_pc_1000b698
  %v1_1000b630.pre.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_1000b624

dec_label_pc_1000b6a4:                            ; preds = %dec_label_pc_1000b668.dec_label_pc_1000b668_crit_edge, %dec_label_pc_1000b654
  %v0_1000b6a4 = load i32, i32* @r3, align 4
  ret i32 %v0_1000b6a4

; uselistorder directives
  uselistorder i32 %v1_1000b698, { 1, 2, 0 }
  uselistorder i32 %v1_1000b694, { 1, 0 }
  uselistorder i32 %v1_1000b690, { 1, 0 }
  uselistorder i32 %v0_1000b684, { 1, 0 }
  uselistorder i32 %v2_1000b680, { 2, 1, 0 }
  uselistorder i32 %v1_1000b670, { 1, 0 }
  uselistorder i32 %v3_1000b66c, { 1, 2, 0 }
  uselistorder i32 %v1_1000b63c, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1000b638, { 1, 0 }
  uselistorder i32 %v2_1000b634, { 1, 2, 0 }
  uselistorder i32 %v1_1000b61c, { 1, 0 }
  uselistorder i32 %v1_1000b614, { 2, 1, 0, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 4, 3, 0, 5, 8, 6, 10, 7, 9, 11 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 3, 5, 4, 0, 6, 7, 8, 9, 10 }
  uselistorder i32 undef, { 1, 0, 2, 3 }
  uselistorder i32* @r11, { 0, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm., { 5, 6, 0, 7, 8, 1, 2, 3, 4 }
  uselistorder i32 29, { 33, 34, 29, 31, 30, 32, 3, 4, 37, 38, 35, 36, 39, 40, 27, 28, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 25, 26, 15, 16, 19, 20, 21, 22, 17, 18, 23, 24, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000b668.dec_label_pc_1000b668_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000b654, { 1, 0 }
  uselistorder label %dec_label_pc_1000b63c, { 1, 0, 2 }
}

define i32 @function_1000b6a8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1000b6a8:
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 268482244, i32* @lr, align 4
  %v0_1000b6c0 = call i32 @function_1000b60c()
  %v0_1000b6c8 = load i32, i32* @r28, align 4
  %v1_1000b6c8 = load i32, i32* @r29, align 4
  %v2_1000b6c8 = add i32 %v1_1000b6c8, %v0_1000b6c8
  ret i32 %v2_1000b6c8

; uselistorder directives
  uselistorder i32* @r28, { 8, 9, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 1, 67, 68, 69, 70, 71, 72, 289, 290, 291, 292, 293, 2, 44, 45, 46, 7, 47, 253, 254, 255, 256, 257, 258, 259, 260, 261, 275, 276, 277, 278, 10, 11, 12, 13, 14, 73, 74, 15, 16, 17, 18, 25, 26, 27, 28, 19, 3, 20, 21, 22, 23, 24, 4, 39, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 48, 49, 50, 51, 52, 75, 76, 77, 78, 79, 80, 81, 5, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 281, 279, 280, 282, 283, 6, 284, 285, 286, 287, 288 }
}

define i32 @function_1000b6dc(i8* %arg1) local_unnamed_addr {
dec_label_pc_1000b6dc:
  %r5.global-to-local = alloca i32, align 4
  %v3_1000b6dc = icmp eq i8* %arg1, null
  br i1 %v3_1000b6dc, label %dec_label_pc_1000b794, label %dec_label_pc_1000b6e4

dec_label_pc_1000b6e4:                            ; preds = %dec_label_pc_1000b6dc
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_1000b6f8.pre = load i32, i32* bitcast (i32** @global_var_1001c28c.350 to i32*), align 4
  br label %dec_label_pc_1000b6f4

dec_label_pc_1000b6f4:                            ; preds = %dec_label_pc_1000b6e4, %dec_label_pc_1000b76c
  %v0_1000b76c = phi i32 [ 0, %dec_label_pc_1000b6e4 ], [ %v2_1000b774, %dec_label_pc_1000b76c ]
  %v0_1000b770 = phi i32 [ 1, %dec_label_pc_1000b6e4 ], [ %v1_1000b770, %dec_label_pc_1000b76c ]
  %v0_1000b6f4 = phi i32 [ %tmp, %dec_label_pc_1000b6e4 ], [ %v0_1000b6f43, %dec_label_pc_1000b76c ]
  %v1_1000b6f4 = inttoptr i32 %v0_1000b6f4 to i8*
  %v2_1000b6f4 = load i8, i8* %v1_1000b6f4, align 1
  %v3_1000b6f4 = zext i8 %v2_1000b6f4 to i32
  %v1_1000b6fc = mul nuw nsw i32 %v3_1000b6f4, 2
  %v2_1000b700 = add i32 %v1_1000b6fc, %v3_1000b6f8.pre
  %v3_1000b700 = inttoptr i32 %v2_1000b700 to i16*
  %v4_1000b700 = load i16, i16* %v3_1000b700, align 2
  %v1_1000b704 = and i16 %v4_1000b700, 8
  %v3_1000b704 = icmp eq i16 %v1_1000b704, 0
  br i1 %v3_1000b704, label %dec_label_pc_1000b794, label %dec_label_pc_1000b70c

dec_label_pc_1000b70c:                            ; preds = %dec_label_pc_1000b6f4
  br label %dec_label_pc_1000b724

dec_label_pc_1000b714:                            ; preds = %dec_label_pc_1000b724
  %v1_1000b728 = mul i32 %v1_1000b774, 10
  %v2_1000b730 = add i32 %v3_1000b724, %v1_1000b728
  %v1_1000b714 = add i32 %v2_1000b730, -48
  %v1_1000b718 = add i32 %v0_1000b75c, 1
  %v2_1000b71c = icmp sgt i32 %v1_1000b714, 255
  br i1 %v2_1000b71c, label %dec_label_pc_1000b794, label %dec_label_pc_1000b724

dec_label_pc_1000b724:                            ; preds = %dec_label_pc_1000b714, %dec_label_pc_1000b70c
  %v1_1000b774 = phi i32 [ %v1_1000b714, %dec_label_pc_1000b714 ], [ 0, %dec_label_pc_1000b70c ]
  %v0_1000b75c = phi i32 [ %v1_1000b718, %dec_label_pc_1000b714 ], [ %v0_1000b6f4, %dec_label_pc_1000b70c ]
  %v1_1000b724 = inttoptr i32 %v0_1000b75c to i8*
  %v2_1000b724 = load i8, i8* %v1_1000b724, align 1
  %v3_1000b724 = zext i8 %v2_1000b724 to i32
  %v1_1000b72c = mul nuw nsw i32 %v3_1000b724, 2
  %v2_1000b734 = add i32 %v1_1000b72c, %v3_1000b6f8.pre
  %v3_1000b734 = inttoptr i32 %v2_1000b734 to i16*
  %v4_1000b734 = load i16, i16* %v3_1000b734, align 2
  %v5_1000b734 = zext i16 %v4_1000b734 to i32
  %v1_1000b738 = and i32 %v5_1000b734, 8
  %v3_1000b738 = icmp eq i32 %v1_1000b738, 0
  br i1 %v3_1000b738, label %dec_label_pc_1000b740, label %dec_label_pc_1000b714

dec_label_pc_1000b740:                            ; preds = %dec_label_pc_1000b724
  %v2_1000b740 = icmp sgt i32 %v0_1000b770, 3
  br i1 %v2_1000b740, label %dec_label_pc_1000b758, label %dec_label_pc_1000b748

dec_label_pc_1000b748:                            ; preds = %dec_label_pc_1000b740
  %v3_1000b748 = icmp eq i8 %v2_1000b724, 46
  br i1 %v3_1000b748, label %dec_label_pc_1000b750, label %dec_label_pc_1000b794

dec_label_pc_1000b750:                            ; preds = %dec_label_pc_1000b748
  %v1_1000b750 = add i32 %v0_1000b75c, 1
  br label %dec_label_pc_1000b76c

dec_label_pc_1000b758:                            ; preds = %dec_label_pc_1000b740
  %v3_1000b758 = icmp eq i8 %v2_1000b724, 0
  %v1_1000b75c = add i32 %v0_1000b75c, 1
  br i1 %v3_1000b758, label %dec_label_pc_1000b76c, label %dec_label_pc_1000b764

dec_label_pc_1000b764:                            ; preds = %dec_label_pc_1000b758
  %v1_1000b764 = and i32 %v5_1000b734, 32
  %v3_1000b764 = icmp eq i32 %v1_1000b764, 0
  br i1 %v3_1000b764, label %dec_label_pc_1000b794, label %dec_label_pc_1000b76c

dec_label_pc_1000b76c:                            ; preds = %dec_label_pc_1000b764, %dec_label_pc_1000b758, %dec_label_pc_1000b750
  %v0_1000b6f43 = phi i32 [ %v1_1000b75c, %dec_label_pc_1000b764 ], [ %v1_1000b75c, %dec_label_pc_1000b758 ], [ %v1_1000b750, %dec_label_pc_1000b750 ]
  %v1_1000b76c = mul i32 %v0_1000b76c, 256
  %v1_1000b770 = add nuw nsw i32 %v0_1000b770, 1
  %v2_1000b774 = or i32 %v1_1000b774, %v1_1000b76c
  store i32 %v2_1000b774, i32* %r5.global-to-local, align 4
  %tmp10 = icmp slt i32 %v1_1000b770, 5
  br i1 %tmp10, label %dec_label_pc_1000b6f4, label %dec_label_pc_1000b780

dec_label_pc_1000b780:                            ; preds = %dec_label_pc_1000b76c
  %v0_1000b780 = load i32, i32* @r4, align 4
  %v3_1000b780 = icmp eq i32 %v0_1000b780, 0
  %v0_1000b788 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000b780, i32 %v0_1000b788)
  %v0_1000b78c = load i32, i32* %r5.global-to-local, align 4
  %v1_1000b78c = load i32, i32* @r4, align 4
  %v2_1000b78c = inttoptr i32 %v1_1000b78c to i32*
  store i32 %v0_1000b78c, i32* %v2_1000b78c, align 4
  ret i32 1

dec_label_pc_1000b794:                            ; preds = %dec_label_pc_1000b748, %dec_label_pc_1000b764, %dec_label_pc_1000b6f4, %dec_label_pc_1000b714, %dec_label_pc_1000b6dc
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1000b774, { 1, 0 }
  uselistorder i32 %v1_1000b770, { 1, 0 }
  uselistorder i32 %v0_1000b75c, { 0, 1, 3, 2 }
  uselistorder i32 5, { 20, 2, 21, 22, 40, 23, 24, 41, 42, 26, 25, 43, 3, 4, 44, 0, 45, 46, 1, 47, 27, 28, 29, 30, 31, 32, 33, 48, 5, 7, 49, 6, 50, 10, 51, 9, 52, 8, 34, 53, 11, 13, 54, 35, 55, 12, 36, 56, 14, 37, 57, 15, 38, 58, 17, 59, 16, 39, 60, 19, 61, 18, 62, 63, 64, 65, 66 }
  uselistorder i8 0, { 5, 10, 0, 11, 12, 8, 13, 14, 15, 16, 17, 18, 1, 19, 20, 21, 22, 23, 25, 27, 24, 2, 26, 3, 28, 29, 6, 9, 30, 31, 32, 33, 34, 35, 36, 37, 4, 38, 39, 40, 41, 7, 42, 43, 44, 45, 46, 47, 48, 49 }
  uselistorder i8 46, { 1, 2, 3, 0 }
  uselistorder i32 8, { 124, 3, 138, 139, 61, 40, 41, 62, 63, 64, 65, 66, 67, 142, 143, 11, 140, 141, 12, 128, 127, 125, 126, 109, 110, 111, 129, 130, 131, 132, 133, 134, 4, 42, 43, 44, 5, 144, 6, 68, 69, 70, 71, 72, 73, 30, 31, 45, 29, 28, 46, 32, 33, 47, 48, 7, 8, 9, 49, 50, 52, 53, 34, 35, 54, 36, 55, 57, 56, 51, 58, 59, 60, 15, 74, 75, 16, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 37, 88, 89, 90, 91, 92, 93, 94, 95, 38, 96, 97, 98, 99, 100, 101, 102, 103, 104, 13, 105, 106, 107, 108, 14, 17, 112, 18, 113, 19, 114, 20, 115, 21, 116, 22, 117, 23, 118, 119, 24, 120, 25, 121, 26, 122, 27, 123, 0, 1, 10, 135, 136, 39, 137, 2 }
  uselistorder i32 255, { 2, 0, 1 }
  uselistorder i32 -48, { 2, 0, 1 }
  uselistorder i32 10, { 71, 33, 10, 32, 2, 3, 6, 5, 0, 11, 12, 13, 18, 19, 20, 21, 22, 23, 14, 24, 25, 26, 7, 27, 28, 31, 29, 4, 30, 15, 1, 16, 8, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 9, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 17, 70 }
  uselistorder i16 0, { 0, 1, 2, 4, 5, 6, 7, 9, 8, 3, 10, 11, 12, 13 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000b794, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_1000b6f4, { 1, 0 }
}

define i32 @function_1000b79c(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b79c:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_1000b7a0 = load i32, i32* @lr, align 4
  store i32 %v0_1000b7a0, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000b7ac = icmp eq i32* %arg2, null
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg1, i32* @r29, align 4
  %v1_1000b7bc = add i32 %tmp, 4
  store i32 %v1_1000b7bc, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  %v2_1000b7c4 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %v2_1000b7c4, i32* @r3, align 4
  br i1 %v3_1000b7ac, label %dec_label_pc_1000b7ec, label %dec_label_pc_1000b7cc

dec_label_pc_1000b7cc:                            ; preds = %dec_label_pc_1000b79c
  %v2_1000b7cc = load i32, i32* %arg2, align 4
  store i32 %v2_1000b7cc, i32* %r0.global-to-local, align 4
  store i32 268482520, i32* @lr, align 4
  %v0_1000b7d4 = call i32 @function_1000b60c()
  %v0_1000b7d8 = load i32, i32* @r31, align 4
  %v1_1000b7d8 = add i32 %v0_1000b7d8, 132
  %v2_1000b7d8 = inttoptr i32 %v1_1000b7d8 to i32*
  %v3_1000b7d8 = load i32, i32* %v2_1000b7d8, align 4
  store i32 %v3_1000b7d8, i32* %r0.global-to-local, align 4
  %v1_1000b7e4 = add i32 %v0_1000b7d8, 136
  %v2_1000b7e4 = inttoptr i32 %v1_1000b7e4 to i32*
  %v3_1000b7e4 = load i32, i32* %v2_1000b7e4, align 4
  store i32 %v3_1000b7e4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000b7ec

dec_label_pc_1000b7ec:                            ; preds = %dec_label_pc_1000b79c, %dec_label_pc_1000b7cc
  store i32 268482572, i32* @lr, align 4
  %v0_1000b808 = call i32 @function_1000ba00()
  %v0_1000b80c = load i32, i32* @r30, align 4
  %v3_1000b80c = icmp eq i32 %v0_1000b80c, 0
  store i32 %v0_1000b808, i32* @r31, align 4
  br i1 %v3_1000b80c, label %dec_label_pc_1000b848, label %dec_label_pc_1000b81c

dec_label_pc_1000b81c:                            ; preds = %dec_label_pc_1000b7ec
  %v1_1000b814 = icmp slt i32 %v0_1000b808, 0
  %v1_1000b81c = add i32 %v0_1000b80c, 4
  store i32 %v1_1000b81c, i32* @r3, align 4
  %v2_1000b820 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_1000b820, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  br i1 %v1_1000b814, label %dec_label_pc_1000b848, label %dec_label_pc_1000b82c

dec_label_pc_1000b82c:                            ; preds = %dec_label_pc_1000b81c
  %v3_1000b82c = load i32, i32* %stack_var_-172, align 4
  store i32 %v3_1000b82c, i32* %r0.global-to-local, align 4
  %v2_1000b830 = inttoptr i32 %v0_1000b80c to i32*
  store i32 %v3_1000b82c, i32* %v2_1000b830, align 4
  store i32 268482616, i32* @lr, align 4
  %v0_1000b834 = call i32 @function_1000b60c()
  %v1_1000b840 = load i32, i32* @r30, align 4
  %v2_1000b840 = add i32 %v1_1000b840, 136
  %v3_1000b840 = inttoptr i32 %v2_1000b840 to i32*
  %v0_1000b844 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b844 = load i32, i32* @r30, align 4
  %v2_1000b844 = add i32 %v1_1000b844, 132
  %v3_1000b844 = inttoptr i32 %v2_1000b844 to i32*
  store i32 %v0_1000b844, i32* %v3_1000b844, align 4
  %v0_1000b84c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000b848

dec_label_pc_1000b848:                            ; preds = %dec_label_pc_1000b81c, %dec_label_pc_1000b7ec, %dec_label_pc_1000b82c
  %v0_1000b84c = phi i32 [ %v0_1000b808, %dec_label_pc_1000b81c ], [ %v0_1000b808, %dec_label_pc_1000b7ec ], [ %v0_1000b84c.pre, %dec_label_pc_1000b82c ]
  store i32 %v0_1000b7a0, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000b84c

; uselistorder directives
  uselistorder i32 %v0_1000b808, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 4, 5, 6, 2 }
  uselistorder i32 ()* @function_1000b60c, { 2, 1, 6, 4, 0, 3, 5, 7 }
  uselistorder i32* @r5, { 21, 22, 1, 23, 24, 0, 25, 26, 27, 10, 11, 12, 30, 20, 7, 8, 31, 32, 33, 34, 2, 13, 6, 28, 29, 5, 4, 3, 14, 18, 19, 16, 17, 9, 15 }
  uselistorder i32 128, { 7, 8, 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32* @r30, { 160, 161, 162, 163, 0, 142, 1, 47, 48, 49, 164, 167, 165, 166, 143, 144, 145, 137, 138, 139, 140, 141, 146, 147, 151, 148, 149, 150, 7, 8, 9, 10, 11, 12, 13, 2, 14, 3, 15, 22, 23, 16, 17, 18, 4, 19, 20, 21, 34, 35, 36, 37, 38, 39, 40, 41, 42, 24, 26, 27, 25, 28, 29, 30, 31, 32, 33, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 5, 57, 58, 6, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 153, 154, 152, 155, 156, 157, 158, 159 }
  uselistorder i32* null, { 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 1, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32* @r31, { 2, 307, 308, 309, 286, 3, 287, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 316, 317, 310, 9, 311, 312, 313, 314, 315, 82, 83, 288, 289, 290, 291, 292, 293, 278, 279, 280, 281, 282, 283, 284, 285, 294, 295, 296, 300, 297, 298, 299, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 114, 4, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 20, 21, 22, 23, 129, 130, 131, 132, 133, 24, 25, 26, 27, 28, 29, 39, 40, 41, 42, 43, 30, 31, 32, 33, 34, 35, 36, 37, 38, 71, 72, 0, 73, 5, 74, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 75, 76, 77, 78, 79, 80, 81, 6, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 134, 135, 136, 137, 138, 139, 140, 141, 142, 1, 7, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 8, 301, 302, 303, 304, 305, 306 }
  uselistorder label %dec_label_pc_1000b848, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b7ec, { 1, 0 }
}

define i32 @function_1000b860(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b894.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v0_1000b878 = call i32 @function_1000abb8()
  %v2_1000b880 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_1000b880, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 31, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v3_1000b89833 = add i32 %v2_1000b880, 124
  %v4_1000b89834 = inttoptr i32 %v3_1000b89833 to i32*
  store i32 0, i32* %v4_1000b89834, align 4
  %v0_1000b89c35 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b89c36 = add i32 %v0_1000b89c35, -1
  store i32 %v1_1000b89c36, i32* %r9.global-to-local, align 4
  %v0_1000b8a037 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b8a038 = add i32 %v0_1000b8a037, -1
  store i32 %v1_1000b8a038, i32* %ctr.global-to-local, align 4
  %v2_1000b8a039 = icmp eq i32 %v1_1000b8a038, 0
  br i1 %v2_1000b8a039, label %dec_label_pc_1000b8a4, label %dec_label_pc_1000b894.dec_label_pc_1000b894_crit_edge

dec_label_pc_1000b894.dec_label_pc_1000b894_crit_edge: ; preds = %dec_label_pc_1000b894.lr.ph, %dec_label_pc_1000b894.dec_label_pc_1000b894_crit_edge
  %v1_1000b89c40 = phi i32 [ %v1_1000b89c, %dec_label_pc_1000b894.dec_label_pc_1000b894_crit_edge ], [ %v1_1000b89c36, %dec_label_pc_1000b894.lr.ph ]
  %v0_1000b898.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b898.pre = load i32, i32* %r29.global-to-local, align 4
  %v1_1000b894 = mul i32 %v1_1000b89c40, 4
  %v3_1000b898 = add i32 %v1_1000b894, %v1_1000b898.pre
  %v4_1000b898 = inttoptr i32 %v3_1000b898 to i32*
  store i32 %v0_1000b898.pre, i32* %v4_1000b898, align 4
  %v0_1000b89c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b89c = add i32 %v0_1000b89c, -1
  store i32 %v1_1000b89c, i32* %r9.global-to-local, align 4
  %v0_1000b8a0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b8a0 = add i32 %v0_1000b8a0, -1
  store i32 %v1_1000b8a0, i32* %ctr.global-to-local, align 4
  %v2_1000b8a0 = icmp eq i32 %v1_1000b8a0, 0
  br i1 %v2_1000b8a0, label %dec_label_pc_1000b8a4, label %dec_label_pc_1000b894.dec_label_pc_1000b894_crit_edge

dec_label_pc_1000b8a4:                            ; preds = %dec_label_pc_1000b894.dec_label_pc_1000b894_crit_edge, %dec_label_pc_1000b894.lr.ph
  store i32 %v2_1000b880, i32* @r3, align 4
  store i32 6, i32* @r4, align 4
  %v0_1000b8ac = call i32 @function_1000a00c()
  %v3_1000b8b0 = icmp eq i32 %v0_1000b8ac, 0
  br i1 %v3_1000b8b0, label %dec_label_pc_1000b8b8, label %dec_label_pc_1000b8c8

dec_label_pc_1000b8b8:                            ; preds = %dec_label_pc_1000b8a4
  store i32 268482760, i32* @lr, align 4
  %v3_1000b8c4 = call i32 @function_10009460(i32 1, i32 %v2_1000b880, i32 0)
  br label %dec_label_pc_1000b8c8

dec_label_pc_1000b8c8:                            ; preds = %dec_label_pc_1000b8a4, %dec_label_pc_1000b8b8
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000b8cc = load i32, i32* @global_var_1001c2f4.371, align 4
  %v3_1000b8d0 = icmp eq i32 %v3_1000b8cc, 0
  br i1 %v3_1000b8d0, label %dec_label_pc_1000b8d8, label %dec_label_pc_1000b900

dec_label_pc_1000b8d8:                            ; preds = %dec_label_pc_1000b8c8
  store i32 1, i32* @global_var_1001c2f4.371, align 4
  br label %dec_label_pc_1000b8e0

dec_label_pc_1000b8e0:                            ; preds = %dec_label_pc_1000b95c, %dec_label_pc_1000b8d8
  store i32 ptrtoint (i32* @global_var_1001c258.369 to i32), i32* %r29.global-to-local, align 4
  %v0_1000b8ec = call i32 @function_1000abb8()
  store i32 268482808, i32* @lr, align 4
  %v1_1000b8f4 = call i32 @function_1000ba48(i32 6)
  %v0_1000b8fc = call i32 @function_1000abb8()
  %v3_1000b904.pre = load i32, i32* @global_var_1001c2f4.371, align 4
  br label %dec_label_pc_1000b900

dec_label_pc_1000b900:                            ; preds = %dec_label_pc_1000b8c8, %dec_label_pc_1000b8e0
  %v0_1000b978 = phi i32 [ %v3_1000b8cc, %dec_label_pc_1000b8c8 ], [ %v3_1000b904.pre, %dec_label_pc_1000b8e0 ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000b908 = icmp eq i32 %v0_1000b978, 1
  br i1 %v3_1000b908, label %dec_label_pc_1000b948.lr.ph, label %dec_label_pc_1000b978

dec_label_pc_1000b948.lr.ph:                      ; preds = %dec_label_pc_1000b900
  %v2_1000b914 = ptrtoint i32* %stack_var_-168 to i32
  store i32 2, i32* @global_var_1001c2f4.371, align 4
  store i32 ptrtoint (i32* @global_var_1000b928.373 to i32), i32* @lr, align 4
  %v3_1000b924 = call i32 @function_1000990c(i32 %v2_1000b914, i32 0, i32 140)
  store i32 %v2_1000b880, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-168, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 %v3_1000b89833, i32* %r9.global-to-local, align 4
  %v2_1000b95025 = add i32 %v2_1000b880, 256
  %v3_1000b95026 = inttoptr i32 %v2_1000b95025 to i32*
  store i32 -1, i32* %v3_1000b95026, align 4
  %v0_1000b95427 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b95428 = add i32 %v0_1000b95427, -1
  store i32 %v1_1000b95428, i32* %r11.global-to-local, align 4
  %v0_1000b95829 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b95830 = add i32 %v0_1000b95829, -1
  store i32 %v1_1000b95830, i32* %ctr.global-to-local, align 4
  %v2_1000b95831 = icmp eq i32 %v1_1000b95830, 0
  br i1 %v2_1000b95831, label %dec_label_pc_1000b95c, label %dec_label_pc_1000b948.dec_label_pc_1000b948_crit_edge

dec_label_pc_1000b948.dec_label_pc_1000b948_crit_edge: ; preds = %dec_label_pc_1000b948.lr.ph, %dec_label_pc_1000b948.dec_label_pc_1000b948_crit_edge
  %v1_1000b95432 = phi i32 [ %v1_1000b954, %dec_label_pc_1000b948.dec_label_pc_1000b948_crit_edge ], [ %v1_1000b95428, %dec_label_pc_1000b948.lr.ph ]
  %v1_1000b94c.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_1000b950.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b948 = mul i32 %v1_1000b95432, 4
  %v2_1000b94c = add i32 %v1_1000b948, %v1_1000b94c.pre
  store i32 %v2_1000b94c, i32* %r9.global-to-local, align 4
  %v2_1000b950 = add i32 %v2_1000b94c, 132
  %v3_1000b950 = inttoptr i32 %v2_1000b950 to i32*
  store i32 %v0_1000b950.pre, i32* %v3_1000b950, align 4
  %v0_1000b954 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b954 = add i32 %v0_1000b954, -1
  store i32 %v1_1000b954, i32* %r11.global-to-local, align 4
  %v0_1000b958 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b958 = add i32 %v0_1000b958, -1
  store i32 %v1_1000b958, i32* %ctr.global-to-local, align 4
  %v2_1000b958 = icmp eq i32 %v1_1000b958, 0
  br i1 %v2_1000b958, label %dec_label_pc_1000b95c, label %dec_label_pc_1000b948.dec_label_pc_1000b948_crit_edge

dec_label_pc_1000b95c:                            ; preds = %dec_label_pc_1000b948.dec_label_pc_1000b948_crit_edge, %dec_label_pc_1000b948.lr.ph
  store i32 268482932, i32* @lr, align 4
  %v4_1000b970 = call i32 @function_1000b79c(i32 6, i32* nonnull %stack_var_-168, i32 0)
  br label %dec_label_pc_1000b8e0

dec_label_pc_1000b978:                            ; preds = %dec_label_pc_1000b900
  %v3_1000b978 = icmp eq i32 %v0_1000b978, 2
  br i1 %v3_1000b978, label %dec_label_pc_1000b980, label %dec_label_pc_1000b98c

dec_label_pc_1000b980:                            ; preds = %dec_label_pc_1000b978
  store i32 3, i32* @global_var_1001c2f4.371, align 4
  br label %dec_label_pc_1000b98c

dec_label_pc_1000b98c:                            ; preds = %dec_label_pc_1000b978, %dec_label_pc_1000b980
  %v3_1000b98c = phi i32 [ %v0_1000b978, %dec_label_pc_1000b978 ], [ 3, %dec_label_pc_1000b980 ]
  %v1_1000b994 = icmp ne i32 %v3_1000b98c, 3
  call void @__pseudo_cond_branch(i1 %v1_1000b994, i32 268482984)
  store i32 4, i32* @global_var_1001c2f4.371, align 4
  %v1_1000b9a4 = call i32 @function_1000af58(i32 127)
  ret i32 %v1_1000b9a4

; uselistorder directives
  uselistorder i32 %v1_1000b958, { 1, 0 }
  uselistorder i32 %v1_1000b954, { 1, 0 }
  uselistorder i32 %v1_1000b8a0, { 1, 0 }
  uselistorder i32 %v1_1000b89c, { 1, 0 }
  uselistorder i32 %v2_1000b880, { 0, 2, 3, 4, 1, 5 }
  uselistorder i32* %r9.global-to-local, { 4, 2, 5, 6, 8, 7, 3, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 2, 0, 1, 5, 6 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 4, 0, 1, 9, 8, 5, 2, 3 }
  uselistorder i32 (i32)* @function_1000af58, { 1, 0 }
  uselistorder i32 127, { 0, 1, 3, 2 }
  uselistorder i32 3, { 0, 6, 31, 94, 97, 98, 99, 100, 92, 95, 96, 46, 102, 101, 8, 103, 104, 105, 67, 68, 1, 7, 32, 33, 47, 48, 49, 50, 2, 52, 53, 54, 55, 56, 9, 57, 34, 58, 10, 51, 65, 35, 3, 89, 36, 59, 60, 62, 63, 61, 64, 66, 4, 69, 70, 12, 37, 5, 11, 71, 14, 72, 38, 13, 73, 74, 75, 15, 39, 16, 76, 77, 78, 17, 40, 18, 79, 80, 20, 41, 19, 81, 82, 42, 83, 21, 22, 23, 84, 85, 43, 86, 24, 25, 26, 87, 88, 27, 44, 28, 90, 91, 29, 45, 30, 93 }
  uselistorder i32 (i32, i32*, i32)* @function_1000b79c, { 1, 2, 0 }
  uselistorder i32 132, { 1, 2, 3, 0 }
  uselistorder i32 256, { 72, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 75, 21, 22, 23, 24, 25, 26, 27, 28, 76, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 73, 45, 46, 47, 48, 49, 50, 51, 52, 74, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71 }
  uselistorder i32 (i32, i32, i32)* @function_1000990c, { 1, 6, 9, 0, 2, 8, 7, 5, 4, 3 }
  uselistorder i32 2, { 214, 41, 0, 1, 60, 61, 215, 62, 216, 63, 217, 30, 2, 3, 4, 42, 114, 127, 218, 115, 31, 64, 43, 65, 33, 32, 34, 66, 67, 116, 45, 44, 117, 118, 68, 119, 5, 6, 120, 121, 39, 122, 46, 123, 69, 126, 8, 7, 71, 70, 72, 35, 201, 75, 76, 74, 73, 47, 9, 10, 11, 124, 125, 77, 48, 78, 79, 80, 81, 49, 83, 82, 84, 51, 50, 85, 86, 87, 88, 89, 90, 91, 36, 40, 128, 202, 12, 37, 203, 13, 129, 130, 131, 132, 133, 134, 135, 92, 136, 137, 52, 138, 139, 140, 141, 142, 94, 143, 93, 144, 145, 146, 147, 148, 149, 150, 151, 95, 152, 53, 96, 97, 153, 154, 98, 99, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 14, 15, 16, 17, 18, 19, 100, 165, 54, 166, 167, 168, 169, 170, 20, 21, 22, 23, 24, 25, 101, 171, 55, 172, 173, 174, 175, 176, 102, 178, 177, 26, 27, 103, 179, 56, 180, 181, 182, 183, 184, 104, 186, 185, 28, 29, 105, 187, 57, 106, 107, 188, 189, 108, 109, 190, 191, 192, 193, 194, 195, 197, 198, 199, 196, 110, 200, 58, 204, 205, 206, 111, 112, 208, 209, 210, 207, 113, 211, 59, 212, 38, 213 }
  uselistorder i32* @global_var_1001c2f4.371, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 268566528, { 34, 35, 0, 36, 2, 1, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 4, 30, 5, 31, 32, 33 }
  uselistorder i32 (i32, i32, i32)* @function_10009460, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 ()* @function_1000a00c, { 2, 1, 0, 4, 3 }
  uselistorder i32* @r4, { 76, 77, 78, 73, 74, 79, 35, 1, 36, 7, 37, 86, 85, 5, 4, 80, 82, 83, 72, 81, 9, 8, 75, 10, 11, 12, 6, 38, 39, 84, 13, 14, 15, 40, 19, 20, 21, 16, 17, 18, 27, 28, 29, 3, 66, 67, 68, 69, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 41, 0, 2, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 70, 71 }
  uselistorder i32 6, { 12, 13, 62, 1, 14, 15, 27, 16, 17, 28, 18, 19, 29, 30, 20, 31, 2, 32, 0, 33, 34, 35, 36, 3, 37, 38, 39, 4, 40, 41, 42, 43, 5, 6, 44, 45, 46, 21, 7, 47, 48, 22, 8, 49, 23, 50, 24, 9, 51, 52, 53, 54, 25, 10, 55, 56, 57, 58, 59, 26, 11, 60, 61 }
  uselistorder i32 4, { 130, 0, 1, 368, 369, 370, 371, 372, 69, 70, 373, 374, 131, 375, 376, 2, 200, 201, 152, 153, 202, 203, 205, 377, 384, 3, 4, 5, 6, 7, 347, 349, 348, 345, 346, 316, 317, 318, 319, 350, 351, 352, 353, 354, 355, 356, 357, 358, 8, 154, 9, 79, 155, 156, 378, 379, 380, 132, 381, 382, 383, 10, 204, 133, 11, 206, 207, 208, 209, 210, 134, 135, 157, 136, 158, 159, 160, 82, 78, 161, 162, 163, 164, 12, 166, 167, 173, 174, 165, 175, 72, 176, 71, 80, 178, 81, 179, 180, 181, 182, 183, 177, 168, 169, 170, 171, 172, 192, 13, 193, 14, 194, 195, 196, 73, 137, 197, 303, 184, 138, 84, 83, 85, 185, 186, 187, 74, 188, 75, 189, 190, 191, 15, 198, 199, 76, 211, 212, 213, 16, 214, 215, 216, 217, 90, 218, 219, 17, 18, 89, 220, 221, 19, 86, 88, 87, 222, 223, 20, 224, 225, 95, 226, 21, 22, 227, 94, 228, 91, 229, 93, 92, 230, 231, 232, 101, 23, 24, 233, 234, 25, 235, 236, 237, 100, 26, 27, 96, 238, 97, 99, 98, 239, 240, 241, 242, 243, 244, 139, 103, 102, 245, 246, 28, 247, 248, 249, 104, 250, 251, 29, 30, 105, 252, 106, 108, 107, 253, 254, 31, 255, 256, 113, 257, 258, 32, 33, 112, 259, 109, 111, 110, 260, 261, 262, 263, 34, 264, 265, 266, 267, 140, 268, 35, 269, 270, 36, 271, 115, 272, 114, 141, 273, 274, 275, 276, 37, 277, 278, 279, 280, 142, 281, 38, 282, 283, 39, 284, 117, 285, 116, 143, 286, 287, 288, 289, 290, 291, 144, 119, 118, 292, 293, 294, 295, 40, 297, 298, 145, 299, 300, 301, 124, 302, 41, 42, 146, 296, 123, 120, 122, 121, 304, 305, 306, 307, 308, 147, 148, 43, 310, 311, 149, 312, 313, 314, 129, 315, 44, 45, 150, 309, 128, 125, 127, 126, 46, 320, 321, 47, 48, 322, 323, 49, 50, 324, 325, 51, 52, 326, 327, 53, 54, 328, 329, 55, 56, 330, 331, 57, 332, 58, 333, 334, 59, 60, 335, 336, 61, 62, 337, 338, 63, 64, 339, 340, 65, 66, 341, 342, 67, 343, 344, 359, 360, 361, 362, 363, 364, 77, 365, 68, 366, 367, 151 }
  uselistorder i32 32, { 19, 20, 48, 37, 38, 27, 28, 15, 16, 35, 36, 29, 0, 1, 2, 17, 39, 18, 40, 3, 4, 5, 6, 22, 30, 23, 21, 33, 7, 8, 9, 24, 34, 10, 11, 12, 13, 14, 25, 26, 31, 32, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i32 31, { 1, 2, 28, 29, 17, 30, 31, 3, 4, 0, 5, 32, 33, 18, 19, 20, 21, 24, 25, 22, 23, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 14, 26, 27 }
  uselistorder i32 ()* @function_1000abb8, { 3, 2, 1, 0, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 21, 20, 19 }
  uselistorder label %dec_label_pc_1000b98c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b948.dec_label_pc_1000b948_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000b900, { 1, 0 }
  uselistorder label %dec_label_pc_1000b8c8, { 1, 0 }
  uselistorder label %dec_label_pc_1000b894.dec_label_pc_1000b894_crit_edge, { 1, 0 }
}

define i32 @function_1000b9b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b9b0:
  %v1_1000b9b0 = add i32 %arg1, 28
  %v2_1000b9b0 = inttoptr i32 %v1_1000b9b0 to i32*
  %v3_1000b9b0 = load i32, i32* %v2_1000b9b0, align 4
  store i32 %v3_1000b9b0, i32* @global_var_1001c2f8.374, align 4
  %v1_1000b9c0 = add i32 %arg1, 44
  %v2_1000b9c0 = inttoptr i32 %v1_1000b9c0 to i32*
  %v3_1000b9c0 = load i32, i32* %v2_1000b9c0, align 4
  store i32 %v3_1000b9c0, i32* @global_var_1001c2fc.375, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 44, { 7, 0, 5, 6, 1, 2, 3, 4 }
  uselistorder i32 28, { 45, 16, 17, 5, 6, 18, 15, 44, 7, 9, 10, 11, 12, 8, 13, 14, 2, 3, 4, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0, 40, 41, 42, 1, 43 }
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_1000b9cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b9cc:
  store i32 %arg1, i32* @global_var_1001c300.368, align 4
  %v0_1000b9f4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 true, i32 %v0_1000b9f4)
  %v1_1000b9fc = call i32 @function_1000ba78(i32 12)
  ret i32 %v1_1000b9fc

; uselistorder directives
  uselistorder i32 12, { 16, 46, 47, 26, 27, 48, 49, 50, 51, 105, 106, 107, 108, 6, 103, 109, 0, 1, 9, 104, 5, 17, 18, 10, 28, 52, 53, 19, 54, 55, 56, 20, 21, 29, 22, 23, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 24, 43, 25, 44, 7, 45, 38, 8, 98, 57, 11, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 12, 70, 71, 72, 73, 74, 75, 76, 13, 77, 78, 79, 80, 81, 82, 83, 84, 85, 14, 86, 87, 88, 89, 90, 91, 92, 93, 94, 15, 95, 96, 97, 99, 100, 101, 102, 2, 3, 4 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 6, 10, 5, 11, 7, 12, 4, 0, 8, 1, 3, 2, 9 }
  uselistorder i1 true, { 2, 0, 1 }
  uselistorder i32* @global_var_1001c300.368, { 1, 0, 2 }
}

define i32 @function_1000ba00() local_unnamed_addr {
dec_label_pc_1000ba00:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000ba18 = call i32 @__asm_mfcr()
  %v1_1000ba1c = and i32 %v0_1000ba18, 268435456
  %v3_1000ba1c = icmp eq i32 %v1_1000ba1c, 0
  store i32 %v0_1000ba18, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ba1c, label %dec_label_pc_1000ba34, label %dec_label_pc_1000ba28

dec_label_pc_1000ba28:                            ; preds = %dec_label_pc_1000ba00
  %v0_1000ba28 = call i32 @function_10009824()
  %v0_1000ba2c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ba2c = inttoptr i32 %v0_1000ba28 to i32*
  store i32 %v0_1000ba2c, i32* %v2_1000ba2c, align 4
  br label %dec_label_pc_1000ba34

dec_label_pc_1000ba34:                            ; preds = %dec_label_pc_1000ba00, %dec_label_pc_1000ba28
  %v0_1000ba44 = phi i32 [ %v0_1000ba18, %dec_label_pc_1000ba00 ], [ -1, %dec_label_pc_1000ba28 ]
  ret i32 %v0_1000ba44

; uselistorder directives
  uselistorder i32 268435456, { 43, 25, 44, 32, 45, 46, 47, 48, 33, 34, 49, 50, 26, 31, 37, 51, 27, 30, 35, 36, 28, 52, 41, 39, 42, 40, 38, 53, 54, 29, 2, 0, 1, 5, 3, 4, 8, 6, 7, 9, 10, 13, 11, 12, 16, 14, 15, 17, 20, 18, 19, 23, 21, 22, 24 }
  uselistorder i32 ()* @__asm_mfcr, { 12, 48, 11, 39, 10, 9, 8, 7, 38, 37, 6, 5, 4, 47, 40, 25, 3, 46, 42, 36, 35, 45, 2, 14, 16, 13, 15, 20, 1, 0, 44, 43, 41, 34, 33, 32, 31, 30, 29, 28, 27, 26, 24, 23, 22, 21, 19, 18, 17 }
  uselistorder label %dec_label_pc_1000ba34, { 1, 0 }
}

define i32 @function_1000ba48(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000ba48:
  %v0_1000ba48 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268483168, i32* @lr, align 4
  %v0_1000ba5c = call i32 @function_10009198()
  %v0_1000ba64 = load i32, i32* @r29, align 4
  store i32 %v0_1000ba48, i32* @lr, align 4
  %v2_1000ba74 = call i32 @function_10009228(i32 %v0_1000ba5c, i32 %v0_1000ba64)
  ret i32 %v2_1000ba74

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_10009228, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @function_10009198, { 0, 3, 2, 1 }
}

define i32 @function_1000ba78(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000ba78:
  store i32 %arg1, i32* @r29, align 4
  %v0_1000ba8c = call i32 @function_10009824()
  %v0_1000ba90 = load i32, i32* @r29, align 4
  %v2_1000ba90 = inttoptr i32 %v0_1000ba8c to i32*
  store i32 %v0_1000ba90, i32* %v2_1000ba90, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 ()* @function_10009824, { 23, 15, 52, 14, 34, 13, 12, 11, 10, 33, 32, 31, 9, 8, 0, 7, 6, 37, 36, 21, 22, 51, 50, 49, 48, 30, 29, 28, 47, 35, 26, 5, 4, 46, 40, 27, 25, 45, 3, 17, 19, 16, 18, 24, 2, 1, 44, 43, 42, 41, 39, 38, 20 }
  uselistorder i32* @r29, { 295, 296, 318, 319, 320, 14, 15, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 321, 322, 323, 324, 325, 1, 65, 297, 298, 299, 300, 293, 294, 301, 2, 302, 303, 304, 305, 306, 307, 16, 17, 18, 86, 87, 88, 89, 90, 91, 92, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 43, 44, 45, 46, 37, 38, 39, 40, 41, 42, 3, 56, 57, 58, 4, 59, 60, 61, 47, 0, 48, 49, 50, 51, 52, 53, 54, 55, 62, 63, 64, 66, 67, 68, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 101, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 5, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 6, 178, 7, 179, 8, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 9, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 10, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 11, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 12, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 309, 308, 310, 311, 312, 13, 313, 314, 315, 316, 317 }
}

define i32 @function_1000baac(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000baac:
  %r31.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1001c110.356 to i32), i32* %r31.global-to-local, align 4
  %v3_1000bac8 = load i32, i32* @global_var_1001c110.356, align 4
  %v3_1000bacc = icmp eq i32 %v3_1000bac8, -1
  br i1 %v3_1000bacc, label %dec_label_pc_1000bae8, label %dec_label_pc_1000bad4

dec_label_pc_1000bad4:                            ; preds = %dec_label_pc_1000baac, %dec_label_pc_1000bad4
  %v0_1000bad4 = phi i32 [ %v3_1000badc, %dec_label_pc_1000bad4 ], [ %v3_1000bac8, %dec_label_pc_1000baac ]
  call void @__pseudo_call(i32 %v0_1000bad4)
  %v0_1000badc = load i32, i32* %r31.global-to-local, align 4
  %v1_1000badc = add i32 %v0_1000badc, -4
  %v2_1000badc = inttoptr i32 %v1_1000badc to i32*
  %v3_1000badc = load i32, i32* %v2_1000badc, align 4
  store i32 %v1_1000badc, i32* %r31.global-to-local, align 4
  %v3_1000bae0 = icmp eq i32 %v3_1000badc, -1
  br i1 %v3_1000bae0, label %dec_label_pc_1000bae8, label %dec_label_pc_1000bad4

dec_label_pc_1000bae8:                            ; preds = %dec_label_pc_1000bad4, %dec_label_pc_1000baac
  %v0_1000baf8 = load i32, i32* @r3, align 4
  ret i32 %v0_1000baf8

; uselistorder directives
  uselistorder i32 %v3_1000badc, { 1, 0 }
  uselistorder i32 -4, { 0, 13, 14, 15, 7, 8, 9, 10, 11, 12, 16, 17, 1, 2, 3, 4, 5, 6 }
  uselistorder void (i32)* @__pseudo_call, { 1, 3, 4, 2, 0 }
  uselistorder i32 -1, { 143, 144, 0, 39, 93, 274, 11, 12, 13, 275, 94, 276, 9, 10, 95, 96, 14, 97, 40, 41, 267, 80, 42, 210, 43, 44, 45, 46, 47, 211, 212, 213, 214, 215, 220, 48, 287, 285, 49, 277, 278, 81, 98, 279, 17, 18, 99, 284, 15, 16, 195, 3, 82, 268, 269, 34, 145, 283, 280, 50, 146, 100, 147, 19, 20, 148, 149, 150, 37, 51, 151, 152, 78, 101, 102, 103, 104, 216, 217, 21, 22, 23, 105, 218, 219, 106, 83, 79, 221, 222, 52, 53, 54, 55, 281, 282, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 286, 69, 153, 107, 24, 223, 224, 108, 1, 109, 110, 154, 70, 71, 111, 2, 112, 25, 113, 72, 114, 26, 225, 84, 155, 115, 85, 156, 157, 158, 116, 159, 160, 73, 163, 117, 28, 118, 27, 119, 164, 120, 74, 165, 166, 167, 121, 122, 161, 162, 184, 77, 4, 185, 186, 123, 29, 187, 188, 189, 190, 191, 124, 38, 168, 86, 169, 170, 88, 171, 172, 87, 173, 174, 175, 89, 176, 177, 178, 75, 179, 180, 125, 30, 126, 31, 181, 182, 183, 192, 76, 193, 194, 127, 128, 129, 130, 131, 132, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 35, 36, 226, 227, 228, 229, 230, 133, 134, 135, 231, 232, 136, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 251, 32, 253, 254, 256, 255, 33, 257, 258, 259, 260, 5, 261, 6, 262, 263, 7, 264, 8, 265, 266, 137, 138, 270, 139, 271, 140, 141, 272, 273, 142, 90, 91, 92 }
  uselistorder i32 1, { 326, 512, 1045, 641, 642, 724, 723, 325, 321, 324, 323, 320, 322, 727, 726, 725, 7, 0, 1031, 1032, 1033, 1034, 565, 8, 1046, 1047, 1048, 1049, 521, 520, 519, 9, 10, 12, 13, 11, 57, 101, 728, 103, 104, 100, 254, 514, 513, 730, 729, 496, 495, 497, 493, 492, 494, 491, 498, 643, 327, 328, 330, 329, 731, 502, 453, 644, 732, 26, 24, 23, 25, 645, 587, 1053, 1050, 736, 735, 734, 733, 126, 124, 121, 125, 123, 122, 646, 1052, 737, 900, 901, 902, 640, 903, 566, 27, 28, 30, 29, 31, 319, 317, 318, 32, 33, 35, 36, 34, 357, 544, 738, 522, 1051, 511, 647, 648, 741, 740, 739, 488, 485, 486, 487, 484, 489, 499, 588, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 847, 756, 755, 476, 477, 758, 757, 107, 106, 108, 941, 533, 111, 110, 109, 1054, 1055, 242, 240, 243, 241, 95, 96, 94, 97, 98, 99, 759, 649, 760, 113, 112, 114, 650, 761, 244, 245, 589, 762, 14, 120, 490, 503, 247, 452, 115, 102, 253, 246, 763, 316, 56, 508, 509, 510, 507, 764, 401, 765, 331, 848, 766, 58, 916, 917, 534, 535, 549, 918, 919, 545, 920, 769, 768, 767, 20, 16, 17, 21, 15, 19, 22, 18, 1, 905, 904, 906, 907, 942, 943, 524, 944, 945, 771, 770, 921, 922, 923, 651, 924, 145, 146, 147, 148, 1028, 1029, 568, 567, 1030, 127, 844, 846, 845, 652, 925, 536, 505, 504, 506, 1035, 359, 358, 926, 927, 537, 538, 550, 928, 116, 117, 118, 119, 946, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 967, 249, 252, 251, 250, 947, 480, 483, 482, 481, 37, 38, 551, 590, 849, 850, 653, 851, 852, 654, 853, 854, 856, 860, 861, 857, 858, 859, 862, 655, 863, 656, 657, 864, 658, 659, 865, 871, 872, 575, 717, 779, 778, 777, 776, 775, 774, 773, 772, 143, 136, 135, 133, 129, 138, 132, 131, 137, 128, 130, 134, 142, 139, 144, 140, 141, 866, 867, 660, 868, 869, 661, 870, 238, 229, 232, 234, 236, 235, 237, 231, 230, 239, 233, 855, 662, 478, 479, 548, 880, 881, 885, 882, 888, 883, 525, 526, 884, 546, 527, 528, 539, 529, 530, 886, 887, 547, 531, 532, 540, 889, 663, 890, 891, 664, 892, 893, 894, 897, 898, 895, 896, 552, 899, 591, 787, 786, 785, 784, 783, 718, 782, 781, 780, 314, 308, 306, 300, 307, 310, 309, 303, 301, 302, 304, 312, 313, 311, 315, 305, 1012, 665, 553, 518, 516, 517, 515, 948, 788, 43, 41, 42, 667, 593, 873, 592, 874, 666, 668, 876, 877, 875, 569, 878, 669, 670, 671, 672, 673, 674, 879, 576, 800, 799, 798, 797, 721, 796, 795, 794, 793, 792, 791, 790, 789, 64, 62, 63, 5, 61, 6, 60, 65, 59, 675, 676, 677, 523, 678, 595, 594, 570, 802, 801, 679, 574, 908, 684, 680, 909, 681, 910, 682, 911, 683, 912, 913, 914, 541, 685, 915, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 577, 814, 813, 812, 811, 810, 809, 808, 807, 806, 805, 804, 803, 49, 53, 52, 46, 44, 47, 45, 54, 51, 50, 48, 55, 929, 698, 930, 931, 932, 933, 934, 3, 571, 935, 936, 2, 937, 938, 939, 940, 817, 816, 719, 720, 815, 501, 500, 1013, 1016, 1014, 572, 1015, 105, 1017, 1018, 1019, 699, 700, 949, 950, 951, 952, 953, 954, 957, 955, 956, 958, 959, 960, 701, 961, 554, 578, 962, 963, 964, 573, 965, 966, 820, 819, 818, 209, 199, 207, 222, 223, 217, 224, 225, 226, 227, 228, 214, 208, 215, 216, 203, 204, 218, 219, 220, 211, 210, 221, 212, 213, 206, 205, 202, 201, 200, 968, 969, 970, 702, 555, 579, 971, 822, 821, 70, 68, 79, 87, 88, 81, 89, 83, 74, 92, 84, 80, 90, 91, 82, 85, 76, 86, 73, 72, 71, 67, 69, 93, 78, 77, 75, 972, 973, 703, 974, 975, 976, 704, 705, 580, 977, 596, 597, 823, 271, 266, 259, 268, 277, 255, 256, 280, 270, 272, 273, 275, 264, 267, 278, 279, 265, 269, 274, 276, 261, 260, 281, 263, 262, 257, 258, 978, 600, 979, 980, 598, 981, 706, 707, 599, 824, 297, 288, 286, 298, 296, 299, 290, 293, 294, 295, 289, 292, 291, 287, 982, 983, 984, 985, 708, 556, 581, 986, 601, 602, 825, 387, 382, 376, 385, 396, 378, 377, 399, 383, 397, 398, 393, 394, 395, 391, 392, 388, 389, 386, 384, 390, 375, 400, 381, 380, 379, 374, 987, 988, 989, 709, 557, 582, 990, 603, 604, 605, 826, 341, 338, 342, 352, 332, 334, 344, 343, 355, 345, 339, 353, 354, 349, 350, 351, 347, 340, 348, 346, 356, 337, 336, 335, 333, 991, 992, 993, 994, 710, 542, 558, 583, 995, 606, 607, 608, 609, 610, 830, 829, 828, 827, 437, 432, 441, 447, 430, 434, 444, 435, 445, 442, 446, 448, 449, 450, 438, 433, 431, 451, 443, 436, 440, 439, 429, 996, 997, 998, 999, 711, 543, 559, 584, 1000, 611, 612, 613, 614, 615, 616, 617, 618, 619, 834, 833, 832, 831, 157, 152, 161, 167, 150, 154, 164, 155, 165, 162, 166, 168, 169, 170, 158, 153, 151, 171, 163, 156, 160, 159, 149, 1001, 622, 1002, 1003, 620, 1004, 712, 713, 621, 835, 373, 371, 368, 366, 365, 370, 372, 363, 367, 364, 360, 362, 361, 369, 1005, 1006, 1007, 1009, 1010, 1008, 560, 585, 1011, 623, 624, 625, 836, 428, 403, 413, 425, 426, 402, 416, 422, 418, 417, 412, 404, 424, 420, 421, 408, 409, 415, 414, 419, 405, 423, 427, 411, 410, 406, 407, 1020, 1021, 1022, 1024, 1025, 1023, 561, 586, 1026, 626, 627, 628, 841, 840, 839, 838, 837, 187, 174, 185, 194, 173, 172, 189, 190, 197, 192, 183, 175, 186, 191, 195, 196, 179, 180, 188, 193, 176, 198, 184, 182, 181, 177, 178, 4, 629, 630, 631, 632, 633, 634, 635, 636, 637, 1027, 638, 639, 284, 283, 282, 285, 562, 66, 563, 39, 1036, 714, 1040, 715, 1041, 1037, 1038, 1039, 1042, 1043, 457, 461, 465, 454, 464, 455, 460, 459, 458, 456, 463, 462, 1044, 716, 564, 40, 843, 842, 248, 722 }
  uselistorder label %dec_label_pc_1000bad4, { 1, 0 }
}

define i32 @function_1000bafc() local_unnamed_addr {
dec_label_pc_1000bafc:
  %v0_1000bb14 = load i32, i32* @r3, align 4
  ret i32 %v0_1000bb14

; uselistorder directives
  uselistorder i32* @r3, { 22, 11, 185, 186, 187, 12, 20, 188, 109, 0, 110, 32, 195, 18, 17, 3, 25, 189, 191, 31, 192, 193, 194, 176, 30, 177, 9, 16, 179, 181, 180, 190, 33, 159, 34, 35, 111, 26, 13, 112, 113, 114, 115, 116, 117, 118, 119, 120, 15, 28, 4, 14, 121, 1, 2, 5, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 77, 78, 79, 80, 81, 82, 74, 6, 75, 76, 90, 91, 29, 92, 93, 94, 19, 166, 167, 168, 10, 169, 170, 7, 83, 84, 85, 86, 87, 88, 89, 95, 21, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 171, 172, 8, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 173, 174, 175, 178, 182, 183, 184, 24, 23, 27 }
}

define i32 @function_1000bb18() local_unnamed_addr {
entry:
  store i32 268483368, i32* @lr, align 4
  %v0_1000bb24 = call i32 @function_100000b8()
  ret i32 %v0_1000bb24

; uselistorder directives
  uselistorder i32 0, { 887, 227, 888, 41, 228, 162, 889, 229, 890, 891, 39, 40, 892, 893, 894, 0, 830, 831, 832, 85, 84, 833, 895, 896, 897, 42, 898, 899, 900, 901, 591, 230, 231, 429, 837, 838, 163, 839, 902, 18, 592, 593, 903, 904, 905, 906, 232, 594, 595, 596, 597, 598, 599, 600, 86, 608, 609, 907, 908, 233, 926, 927, 234, 932, 934, 156, 935, 235, 933, 1, 909, 910, 87, 911, 912, 236, 164, 237, 913, 914, 45, 46, 915, 916, 917, 238, 920, 921, 922, 43, 44, 923, 924, 925, 555, 556, 557, 558, 559, 88, 560, 561, 562, 226, 563, 89, 842, 844, 22, 845, 47, 846, 843, 840, 841, 2, 814, 810, 811, 812, 813, 157, 3, 849, 847, 848, 158, 850, 851, 815, 816, 817, 818, 819, 239, 820, 821, 852, 853, 240, 854, 165, 855, 864, 865, 90, 856, 857, 858, 859, 860, 861, 862, 863, 4, 5, 421, 430, 431, 432, 48, 49, 433, 6, 241, 834, 434, 435, 436, 437, 438, 439, 440, 441, 242, 442, 936, 937, 938, 939, 940, 941, 942, 943, 601, 602, 50, 603, 604, 605, 606, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 443, 564, 753, 918, 919, 444, 534, 622, 654, 445, 928, 91, 929, 885, 880, 886, 881, 790, 930, 931, 446, 447, 623, 624, 625, 51, 92, 626, 627, 69, 628, 630, 629, 161, 565, 566, 7, 73, 23, 74, 24, 655, 75, 656, 25, 26, 657, 76, 27, 93, 243, 244, 19, 20, 631, 823, 824, 825, 826, 97, 95, 94, 827, 96, 99, 98, 428, 100, 632, 52, 633, 634, 635, 866, 101, 867, 868, 636, 637, 53, 102, 638, 8, 103, 682, 104, 658, 448, 449, 107, 450, 451, 452, 453, 454, 154, 455, 245, 456, 457, 460, 458, 106, 459, 246, 461, 462, 463, 464, 465, 108, 466, 467, 169, 468, 422, 77, 470, 471, 472, 473, 474, 475, 56, 57, 476, 477, 54, 55, 478, 479, 480, 481, 482, 483, 168, 166, 488, 489, 247, 490, 484, 485, 486, 487, 491, 21, 423, 424, 492, 493, 105, 494, 495, 496, 501, 502, 503, 504, 167, 505, 506, 109, 507, 508, 509, 510, 511, 512, 497, 110, 498, 499, 111, 500, 248, 469, 80, 535, 536, 28, 249, 78, 29, 30, 250, 79, 31, 537, 9, 173, 172, 538, 539, 540, 541, 542, 543, 171, 170, 544, 58, 59, 545, 546, 251, 112, 547, 548, 113, 549, 114, 550, 115, 551, 552, 659, 513, 514, 515, 516, 155, 517, 518, 252, 519, 520, 521, 522, 523, 174, 524, 525, 60, 61, 526, 527, 528, 62, 63, 529, 530, 531, 10, 532, 253, 254, 255, 533, 256, 16, 15, 14, 13, 553, 175, 554, 568, 117, 567, 116, 569, 570, 119, 571, 118, 572, 573, 121, 574, 120, 575, 576, 123, 577, 122, 578, 579, 125, 580, 124, 581, 582, 127, 583, 126, 584, 11, 257, 258, 17, 587, 585, 586, 159, 588, 589, 176, 259, 260, 261, 262, 263, 264, 590, 32, 639, 650, 640, 12, 641, 642, 643, 644, 160, 645, 646, 647, 648, 649, 33, 128, 68, 67, 129, 651, 64, 267, 652, 265, 266, 177, 653, 82, 791, 792, 81, 793, 130, 794, 83, 795, 131, 660, 661, 268, 662, 663, 133, 132, 664, 269, 665, 666, 667, 668, 669, 670, 671, 134, 672, 673, 674, 178, 675, 676, 270, 677, 70, 71, 678, 135, 679, 680, 681, 271, 179, 180, 181, 182, 136, 683, 272, 684, 685, 686, 687, 273, 688, 689, 690, 184, 183, 691, 274, 692, 693, 694, 695, 696, 137, 697, 275, 698, 699, 700, 701, 702, 276, 703, 704, 705, 185, 186, 187, 188, 141, 140, 706, 707, 34, 139, 138, 708, 709, 710, 35, 711, 712, 713, 714, 142, 189, 715, 143, 716, 277, 717, 718, 719, 278, 720, 721, 722, 723, 279, 724, 725, 726, 190, 191, 192, 193, 194, 195, 196, 197, 727, 728, 144, 729, 730, 280, 731, 732, 733, 734, 735, 736, 281, 737, 738, 739, 206, 198, 199, 200, 201, 202, 203, 204, 205, 145, 740, 741, 282, 742, 743, 744, 745, 283, 748, 749, 65, 747, 746, 284, 750, 751, 752, 207, 208, 209, 210, 211, 212, 213, 146, 754, 755, 285, 756, 757, 758, 759, 286, 762, 763, 66, 761, 760, 287, 764, 765, 766, 214, 215, 216, 150, 149, 767, 768, 288, 36, 148, 147, 769, 770, 771, 289, 37, 772, 773, 774, 775, 151, 217, 776, 152, 777, 290, 778, 779, 780, 781, 782, 783, 784, 785, 786, 291, 787, 788, 789, 218, 219, 220, 221, 796, 153, 797, 292, 798, 799, 800, 801, 802, 803, 804, 805, 806, 293, 807, 808, 809, 222, 223, 224, 225, 822, 828, 829, 835, 836, 869, 72, 870, 871, 294, 872, 873, 874, 875, 876, 877, 878, 879, 882, 38, 883, 884, 944, 945, 946, 425, 426, 427, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966 }
  uselistorder i32* @lr, { 8, 749, 750, 751, 720, 752, 753, 754, 755, 756, 757, 758, 759, 717, 10, 760, 368, 369, 9, 721, 722, 370, 371, 372, 373, 374, 375, 769, 770, 774, 775, 776, 777, 778, 779, 780, 782, 771, 773, 761, 762, 763, 764, 765, 766, 767, 768, 723, 725, 724, 686, 687, 688, 689, 690, 691, 726, 727, 728, 729, 733, 730, 731, 732, 11, 12, 662, 663, 664, 626, 595, 13, 282, 14, 15, 627, 628, 16, 718, 17, 18, 19, 20, 21, 22, 23, 781, 24, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 772, 25, 26, 27, 28, 29, 30, 390, 715, 391, 734, 437, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 470, 438, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 137, 138, 139, 140, 141, 142, 143, 144, 113, 114, 115, 116, 117, 118, 156, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 439, 440, 441, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 0, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 329, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 4, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 5, 421, 422, 423, 424, 425, 426, 1, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 504, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 576, 569, 570, 571, 572, 573, 574, 575, 2, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 607, 600, 601, 602, 603, 604, 605, 606, 3, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 629, 631, 632, 633, 630, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 716, 719, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 6, 7 }
}

declare i32 @__asm_rlwinm(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwinm.(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwimi(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_mfcr() local_unnamed_addr

declare %0 @__asm_mtcrf(i32, i32) local_unnamed_addr

declare i32 @unknown_0(i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

declare i64 @__decompiler_undefined_function_3() local_unnamed_addr
